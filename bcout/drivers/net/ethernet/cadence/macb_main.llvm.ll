; ModuleID = '../bcout/drivers/net/ethernet/cadence/macb_main.llvm.bc'
source_filename = "drivers/net/ethernet/cadence/macb_main.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64"

module asm ".section\09\22.initcall6.init\22, \22a\22\09"
module asm "__initcall_macb_driver_init6:\09\09\09"
module asm ".long\09macb_driver_init - .\09\09\09"
module asm ".previous\09\09\09\09\09"

%struct.platform_driver = type { i32 (%struct.platform_device*)*, i32 (%struct.platform_device*)*, void (%struct.platform_device*)*, i32 (%struct.platform_device*, i32)*, i32 (%struct.platform_device*)*, %struct.device_driver, %struct.platform_device_id*, i8 }
%struct.platform_device = type { i8*, i32, i8, %struct.device, i64, %struct.device_dma_parameters, i32, %struct.resource*, %struct.platform_device_id*, i8*, %struct.mfd_cell*, %struct.pdev_archdata }
%struct.device = type { %struct.kobject, %struct.device*, %struct.device_private*, i8*, %struct.device_type*, %struct.bus_type*, %struct.device_driver*, i8*, i8*, %struct.mutex, %struct.dev_links_info, %struct.dev_pm_info, %struct.dev_pm_domain*, %struct.irq_domain*, %struct.list_head, %struct.dma_map_ops*, i64*, i64, i64, %struct.bus_dma_region*, %struct.device_dma_parameters*, %struct.list_head, %struct.dev_archdata, %struct.device_node*, %struct.fwnode_handle*, i32, i32, %struct.spinlock, %struct.list_head, %struct.class*, %struct.attribute_group**, void (%struct.device*)*, %struct.iommu_group*, %struct.dev_iommu*, i8 }
%struct.kobject = type { i8*, %struct.list_head, %struct.kobject*, %struct.kset*, %struct.kobj_type*, %struct.kernfs_node*, %struct.kref, i8 }
%struct.kset = type { %struct.list_head, %struct.spinlock, %struct.kobject, %struct.kset_uevent_ops* }
%struct.kset_uevent_ops = type { i32 (%struct.kset*, %struct.kobject*)*, i8* (%struct.kset*, %struct.kobject*)*, i32 (%struct.kset*, %struct.kobject*, %struct.kobj_uevent_env*)* }
%struct.kobj_uevent_env = type { [3 x i8*], [64 x i8*], i32, [2048 x i8], i32 }
%struct.kobj_type = type { void (%struct.kobject*)*, %struct.sysfs_ops*, %struct.attribute**, %struct.attribute_group**, %struct.kobj_ns_type_operations* (%struct.kobject*)*, i8* (%struct.kobject*)*, void (%struct.kobject*, %struct.kuid_t*, %struct.kgid_t*)* }
%struct.sysfs_ops = type { i64 (%struct.kobject*, %struct.attribute*, i8*)*, i64 (%struct.kobject*, %struct.attribute*, i8*, i64)* }
%struct.attribute = type { i8*, i16 }
%struct.kobj_ns_type_operations = type { i32, i1 ()*, i8* ()*, i8* (%struct.sock*)*, i8* ()*, void (i8*)* }
%struct.sock = type { %struct.sock_common, %struct.socket_lock_t, %struct.atomic_t, i32, %struct.sk_buff_head, %struct.sk_buff*, %struct.sk_buff_head, %struct.anon.64, i32, i32, i32, i32, %struct.sk_filter*, %union.anon.93, %struct.dst_entry*, %struct.dst_entry*, %struct.atomic_t, i32, i32, %struct.refcount_struct, i64, %union.anon.96, %struct.sk_buff*, %struct.sk_buff_head, i32, i32, i32, i32, i64, %struct.timer_list, i32, i32, i64, i64, %struct.page_frag, i64, i64, i64, i32, i32, i32, i32, i8, i8, i16, i16, i16, i64, %struct.proto*, %struct.rwlock_t, i32, i32, i32, i32, %struct.kuid_t, %struct.pid*, %struct.cred*, i64, i64, i16, i8, i32, %struct.atomic_t, i8, i8, %struct.socket*, i8*, %struct.sock_cgroup_data, %struct.mem_cgroup*, void (%struct.sock*)*, void (%struct.sock*)*, void (%struct.sock*)*, void (%struct.sock*)*, i32 (%struct.sock*, %struct.sk_buff*)*, void (%struct.sock*)*, %struct.sock_reuseport*, %struct.callback_head }
%struct.sock_common = type { %union.anon.38, %union.anon.40, %union.anon.41, i16, i8, i8, i32, %union.anon.43, %struct.proto*, %struct.possible_net_t, %struct.in6_addr, %struct.in6_addr, %struct.atomic64_t, %union.anon.60, [0 x i32], %union.anon.61, i16, %union.anon.62, %struct.refcount_struct, [0 x i32], %union.anon.63 }
%union.anon.38 = type { i64 }
%union.anon.40 = type { i32 }
%union.anon.41 = type { i32 }
%union.anon.43 = type { %struct.hlist_node }
%struct.hlist_node = type { %struct.hlist_node*, %struct.hlist_node** }
%struct.possible_net_t = type { %struct.net* }
%struct.net = type { %struct.refcount_struct, %struct.refcount_struct, %struct.spinlock, i32, i32, i32, %struct.spinlock, %struct.atomic_t, %struct.list_head, %struct.list_head, %struct.llist_node, %struct.key_tag*, %struct.user_namespace*, %struct.ucounts*, %struct.idr, %struct.ns_common, %struct.list_head, %struct.proc_dir_entry*, %struct.proc_dir_entry*, %struct.ctl_table_set, %struct.sock*, %struct.sock*, %struct.uevent_sock*, %struct.hlist_head*, %struct.hlist_head*, %struct.raw_notifier_head, i32, %struct.net_device*, %struct.list_head, %struct.netns_core, %struct.netns_mib, %struct.netns_packet, %struct.netns_unix, %struct.netns_nexthop, %struct.netns_ipv4, %struct.netns_ipv6, %struct.sk_buff_head, %struct.net_generic*, %struct.netns_bpf, %struct.atomic64_t, %struct.netns_can, %struct.sock* }
%struct.llist_node = type { %struct.llist_node* }
%struct.key_tag = type { %struct.callback_head, %struct.refcount_struct, i8 }
%struct.user_namespace = type { %struct.uid_gid_map, %struct.uid_gid_map, %struct.uid_gid_map, %struct.atomic_t, %struct.user_namespace*, i32, %struct.kuid_t, %struct.kgid_t, %struct.ns_common, i64, %struct.list_head, %struct.key*, %struct.rw_semaphore, %struct.work_struct, %struct.ctl_table_set, %struct.ctl_table_header*, %struct.ucounts*, [10 x i32] }
%struct.uid_gid_map = type { i32, %union.anon.33 }
%union.anon.33 = type { %struct.anon.34, [48 x i8] }
%struct.anon.34 = type { %struct.uid_gid_extent*, %struct.uid_gid_extent* }
%struct.uid_gid_extent = type { i32, i32, i32 }
%struct.kgid_t = type { i32 }
%struct.key = type { %struct.refcount_struct, i32, %union.anon.25, %struct.rw_semaphore, %struct.key_user*, i8*, %union.anon.26, i64, %struct.kuid_t, %struct.kgid_t, i32, i16, i16, i16, i64, %union.anon.27, %union.anon.31, %struct.key_restriction* }
%union.anon.25 = type { %struct.rb_node }
%struct.rb_node = type { i64, %struct.rb_node*, %struct.rb_node* }
%struct.key_user = type opaque
%union.anon.26 = type { i64 }
%union.anon.27 = type { %struct.keyring_index_key }
%struct.keyring_index_key = type { i64, %union.anon.28, %struct.key_type*, %struct.key_tag*, i8* }
%union.anon.28 = type { i64 }
%struct.key_type = type opaque
%union.anon.31 = type { %union.key_payload }
%union.key_payload = type { [4 x i8*] }
%struct.key_restriction = type { i32 (%struct.key*, %struct.key_type*, %union.key_payload*, %struct.key*)*, %struct.key*, %struct.key_type* }
%struct.rw_semaphore = type { %struct.atomic64_t, %struct.atomic64_t, %struct.raw_spinlock, %struct.list_head }
%struct.raw_spinlock = type { %struct.arch_spinlock_t }
%struct.arch_spinlock_t = type {}
%struct.work_struct = type { %struct.atomic64_t, %struct.list_head, void (%struct.work_struct*)* }
%struct.ctl_table_header = type { %union.anon.35, %struct.completion*, %struct.ctl_table*, %struct.ctl_table_root*, %struct.ctl_table_set*, %struct.ctl_dir*, %struct.ctl_node*, %struct.hlist_head }
%union.anon.35 = type { %struct.anon.36 }
%struct.anon.36 = type { %struct.ctl_table*, i32, i32, i32 }
%struct.completion = type { i32, %struct.swait_queue_head }
%struct.swait_queue_head = type { %struct.raw_spinlock, %struct.list_head }
%struct.ctl_table = type { i8*, i8*, i32, i16, %struct.ctl_table*, i32 (%struct.ctl_table*, i32, i8*, i64*, i64*)*, %struct.ctl_table_poll*, i8*, i8* }
%struct.ctl_table_poll = type { %struct.atomic_t, %struct.wait_queue_head }
%struct.wait_queue_head = type { %struct.spinlock, %struct.list_head }
%struct.ctl_table_root = type { %struct.ctl_table_set, %struct.ctl_table_set* (%struct.ctl_table_root*)*, void (%struct.ctl_table_header*, %struct.ctl_table*, %struct.kuid_t*, %struct.kgid_t*)*, i32 (%struct.ctl_table_header*, %struct.ctl_table*)* }
%struct.ctl_dir = type { %struct.ctl_table_header, %struct.rb_root }
%struct.rb_root = type { %struct.rb_node* }
%struct.ctl_node = type { %struct.rb_node, %struct.ctl_table_header* }
%struct.hlist_head = type { %struct.hlist_node* }
%struct.ucounts = type { %struct.hlist_node, %struct.user_namespace*, %struct.kuid_t, i32, [10 x %struct.atomic_t] }
%struct.idr = type { %struct.xarray, i32, i32 }
%struct.xarray = type { %struct.spinlock, i32, i8* }
%struct.ns_common = type { %struct.atomic64_t, %struct.proc_ns_operations*, i32 }
%struct.proc_ns_operations = type opaque
%struct.proc_dir_entry = type opaque
%struct.ctl_table_set = type { i32 (%struct.ctl_table_set*)*, %struct.ctl_dir }
%struct.uevent_sock = type opaque
%struct.raw_notifier_head = type { %struct.notifier_block* }
%struct.notifier_block = type { i32 (%struct.notifier_block*, i64, i8*)*, %struct.notifier_block*, i32 }
%struct.net_device = type { [16 x i8], %struct.netdev_name_node*, %struct.dev_ifalias*, i64, i64, i64, i32, i64, %struct.list_head, %struct.list_head, %struct.list_head, %struct.list_head, %struct.list_head, %struct.list_head, %struct.anon.144, i64, i64, i64, i64, i64, i64, i64, i32, i32, %struct.net_device_stats, %struct.atomic64_t, %struct.atomic64_t, %struct.atomic64_t, %struct.atomic_t, %struct.atomic_t, %struct.iw_handler_def*, %struct.iw_public_data*, %struct.net_device_ops*, %struct.ethtool_ops*, %struct.ndisc_ops*, %struct.header_ops*, i32, i32, i16, i16, i8, i8, i8, i8, i32, i32, i32, i16, i16, i8, i8, i16, i16, [32 x i8], i8, i8, i8, i8, i16, i16, i16, %struct.spinlock, %struct.netdev_hw_addr_list, %struct.netdev_hw_addr_list, %struct.netdev_hw_addr_list, %struct.kset*, i32, i32, i8, %struct.vlan_info*, %struct.in_device*, %struct.inet6_dev*, %struct.wireless_dev*, %struct.wpan_dev*, i8*, %struct.netdev_rx_queue*, i32, i32, %struct.bpf_prog*, i64, i32, i32 (%struct.sk_buff**)*, i8*, %struct.netdev_queue*, [32 x i8], %struct.hlist_node, %struct.netdev_queue*, i32, i32, %struct.Qdisc*, i32, %struct.spinlock, %struct.xdp_dev_bulk_queue*, %struct.timer_list, i32, i32, %struct.list_head, i32*, %struct.list_head, i8, i8, i16, i8, void (%struct.net_device*)*, %struct.possible_net_t, %union.anon.160, %struct.device, [4 x %struct.attribute_group*], %struct.attribute_group*, %struct.rtnl_link_ops*, i32, i16, i16, [16 x %struct.netdev_tc_txq], [16 x i8], %struct.phy_device*, %struct.sfp_bus*, %struct.lock_class_key*, %struct.lock_class_key*, i8, i8, %struct.list_head, %struct.udp_tunnel_nic_info*, %struct.udp_tunnel_nic*, [3 x %struct.bpf_xdp_entity] }
%struct.netdev_name_node = type { %struct.hlist_node, %struct.list_head, %struct.net_device*, i8* }
%struct.dev_ifalias = type { %struct.callback_head, [0 x i8] }
%struct.anon.144 = type { %struct.list_head, %struct.list_head }
%struct.net_device_stats = type { i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64 }
%struct.iw_handler_def = type opaque
%struct.iw_public_data = type opaque
%struct.net_device_ops = type { i32 (%struct.net_device*)*, void (%struct.net_device*)*, i32 (%struct.net_device*)*, i32 (%struct.net_device*)*, i32 (%struct.sk_buff*, %struct.net_device*)*, i64 (%struct.sk_buff*, %struct.net_device*, i64)*, i16 (%struct.net_device*, %struct.sk_buff*, %struct.net_device*)*, void (%struct.net_device*, i32)*, void (%struct.net_device*)*, i32 (%struct.net_device*, i8*)*, i32 (%struct.net_device*)*, i32 (%struct.net_device*, %struct.ifreq*, i32)*, i32 (%struct.net_device*, %struct.ifmap*)*, i32 (%struct.net_device*, i32)*, i32 (%struct.net_device*, %struct.neigh_parms*)*, void (%struct.net_device*, i32)*, void (%struct.net_device*, %struct.rtnl_link_stats64*)*, i1 (%struct.net_device*, i32)*, i32 (i32, %struct.net_device*, i8*)*, %struct.net_device_stats* (%struct.net_device*)*, i32 (%struct.net_device*, i16, i16)*, i32 (%struct.net_device*, i16, i16)*, i32 (%struct.net_device*, i32, i8*)*, i32 (%struct.net_device*, i32, i16, i8, i16)*, i32 (%struct.net_device*, i32, i32, i32)*, i32 (%struct.net_device*, i32, i1)*, i32 (%struct.net_device*, i32, i1)*, i32 (%struct.net_device*, i32, %struct.ifla_vf_info*)*, i32 (%struct.net_device*, i32, i32)*, i32 (%struct.net_device*, i32, %struct.ifla_vf_stats*)*, i32 (%struct.net_device*, i32, %struct.nlattr**)*, i32 (%struct.net_device*, i32, %struct.sk_buff*)*, i32 (%struct.net_device*, i32, %struct.ifla_vf_guid*, %struct.ifla_vf_guid*)*, i32 (%struct.net_device*, i32, i64, i32)*, i32 (%struct.net_device*, i32, i1)*, i32 (%struct.net_device*, i32, i8*)*, i32 (%struct.net_device*, %struct.net_device*, %struct.netlink_ext_ack*)*, i32 (%struct.net_device*, %struct.net_device*)*, %struct.net_device* (%struct.net_device*, %struct.sk_buff*, i1)*, i64 (%struct.net_device*, i64)*, i32 (%struct.net_device*, i64)*, i32 (%struct.net_device*, %struct.neighbour*)*, void (%struct.net_device*, %struct.neighbour*)*, i32 (%struct.ndmsg*, %struct.nlattr**, %struct.net_device*, i8*, i16, i16, %struct.netlink_ext_ack*)*, i32 (%struct.ndmsg*, %struct.nlattr**, %struct.net_device*, i8*, i16)*, i32 (%struct.sk_buff*, %struct.netlink_callback*, %struct.net_device*, %struct.net_device*, i32*)*, i32 (%struct.sk_buff*, %struct.nlattr**, %struct.net_device*, i8*, i16, i32, i32, %struct.netlink_ext_ack*)*, i32 (%struct.net_device*, %struct.nlmsghdr*, i16, %struct.netlink_ext_ack*)*, i32 (%struct.sk_buff*, i32, i32, %struct.net_device*, i32, i32)*, i32 (%struct.net_device*, %struct.nlmsghdr*, i16)*, i32 (%struct.net_device*, i1)*, i32 (%struct.net_device*, %struct.netdev_phys_item_id*)*, i32 (%struct.net_device*, %struct.netdev_phys_item_id*)*, i32 (%struct.net_device*, i8*, i64)*, void (%struct.net_device*, %struct.udp_tunnel_info*)*, void (%struct.net_device*, %struct.udp_tunnel_info*)*, i8* (%struct.net_device*, %struct.net_device*)*, void (%struct.net_device*, i8*)*, i32 (%struct.net_device*, i32, i32)*, i32 (%struct.net_device*)*, i32 (%struct.net_device*, i1)*, i32 (%struct.net_device*, %struct.sk_buff*)*, void (%struct.net_device*, i32)*, i32 (%struct.net_device*, %struct.netdev_bpf*)*, i32 (%struct.net_device*, i32, %struct.xdp_frame**, i32)*, i32 (%struct.net_device*, i32, i32)*, %struct.devlink_port* (%struct.net_device*)*, i32 (%struct.net_device*, %struct.ip_tunnel_parm*, i32)*, %struct.net_device* (%struct.net_device*)* }
%struct.ifreq = type { %union.anon.145, %union.anon.146 }
%union.anon.145 = type { [16 x i8] }
%union.anon.146 = type { %struct.ifmap }
%struct.ifmap = type { i64, i64, i16, i8, i8, i8 }
%struct.neigh_parms = type { %struct.possible_net_t, %struct.net_device*, %struct.list_head, i32 (%struct.neighbour*)*, %struct.neigh_table*, i8*, i32, %struct.refcount_struct, %struct.callback_head, i32, [13 x i32], [1 x i64] }
%struct.neighbour = type { %struct.neighbour*, %struct.neigh_table*, %struct.neigh_parms*, i64, i64, %struct.rwlock_t, %struct.refcount_struct, i32, %struct.sk_buff_head, %struct.timer_list, i64, %struct.atomic_t, i8, i8, i8, i8, i8, %struct.seqlock_t, [32 x i8], %struct.hh_cache, i32 (%struct.neighbour*, %struct.sk_buff*)*, %struct.neigh_ops*, %struct.list_head, %struct.callback_head, %struct.net_device*, [0 x i8] }
%struct.seqlock_t = type { %struct.seqcount_spinlock, %struct.spinlock }
%struct.seqcount_spinlock = type { %struct.seqcount }
%struct.seqcount = type { i32 }
%struct.hh_cache = type { i32, %struct.seqlock_t, [12 x i64] }
%struct.neigh_ops = type { i32, void (%struct.neighbour*, %struct.sk_buff*)*, void (%struct.neighbour*, %struct.sk_buff*)*, i32 (%struct.neighbour*, %struct.sk_buff*)*, i32 (%struct.neighbour*, %struct.sk_buff*)* }
%struct.neigh_table = type { i32, i32, i32, i16, i32 (i8*, %struct.net_device*, i32*)*, i1 (%struct.neighbour*, i8*)*, i32 (%struct.neighbour*)*, i32 (%struct.pneigh_entry*)*, void (%struct.pneigh_entry*)*, void (%struct.sk_buff*)*, i32 (i8*)*, i1 (%struct.net_device*, %struct.netlink_ext_ack*)*, i8*, %struct.neigh_parms, %struct.list_head, i32, i32, i32, i32, i64, %struct.delayed_work, %struct.timer_list, %struct.sk_buff_head, %struct.atomic_t, %struct.atomic_t, %struct.list_head, %struct.rwlock_t, i64, %struct.neigh_statistics*, %struct.neigh_hash_table*, %struct.pneigh_entry** }
%struct.pneigh_entry = type { %struct.pneigh_entry*, %struct.possible_net_t, %struct.net_device*, i8, i8, [0 x i8] }
%struct.netlink_ext_ack = type { i8*, %struct.nlattr*, %struct.nla_policy*, [20 x i8], i8 }
%struct.nlattr = type { i16, i16 }
%struct.nla_policy = type { i8, i8, i16, %union.anon.94 }
%union.anon.94 = type { i8* }
%struct.delayed_work = type { %struct.work_struct, %struct.timer_list, %struct.workqueue_struct*, i32 }
%struct.workqueue_struct = type opaque
%struct.neigh_statistics = type { i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64 }
%struct.neigh_hash_table = type { %struct.neighbour**, i32, [4 x i32], %struct.callback_head }
%struct.rtnl_link_stats64 = type { i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64 }
%struct.ifla_vf_info = type { i32, [32 x i8], i32, i32, i32, i32, i32, i32, i32, i32, i16 }
%struct.ifla_vf_stats = type { i64, i64, i64, i64, i64, i64, i64, i64 }
%struct.ifla_vf_guid = type { i32, i64 }
%struct.ndmsg = type { i8, i8, i16, i32, i16, i8, i8 }
%struct.netlink_callback = type { %struct.sk_buff*, %struct.nlmsghdr*, i32 (%struct.sk_buff*, %struct.netlink_callback*)*, i32 (%struct.netlink_callback*)*, i8*, %struct.module*, %struct.netlink_ext_ack*, i16, i16, i32, i32, i32, i8, %union.anon.148 }
%struct.nlmsghdr = type { i32, i16, i16, i32, i32 }
%struct.module = type opaque
%union.anon.148 = type { [6 x i64] }
%struct.netdev_phys_item_id = type { [32 x i8], i8 }
%struct.udp_tunnel_info = type opaque
%struct.netdev_bpf = type { i32, %union.anon.149 }
%union.anon.149 = type { %struct.anon.150 }
%struct.anon.150 = type { i32, %struct.bpf_prog*, %struct.netlink_ext_ack* }
%struct.xdp_frame = type { i8*, i16, i16, i32, %struct.xdp_mem_info, %struct.net_device* }
%struct.xdp_mem_info = type { i32, i32 }
%struct.devlink_port = type opaque
%struct.ip_tunnel_parm = type opaque
%struct.ethtool_ops = type { i32, void (%struct.net_device*, %struct.ethtool_drvinfo*)*, i32 (%struct.net_device*)*, void (%struct.net_device*, %struct.ethtool_regs*, i8*)*, void (%struct.net_device*, %struct.ethtool_wolinfo*)*, i32 (%struct.net_device*, %struct.ethtool_wolinfo*)*, i32 (%struct.net_device*)*, void (%struct.net_device*, i32)*, i32 (%struct.net_device*)*, i32 (%struct.net_device*)*, i32 (%struct.net_device*, %struct.ethtool_link_ext_state_info*)*, i32 (%struct.net_device*)*, i32 (%struct.net_device*, %struct.ethtool_eeprom*, i8*)*, i32 (%struct.net_device*, %struct.ethtool_eeprom*, i8*)*, i32 (%struct.net_device*, %struct.ethtool_coalesce*)*, i32 (%struct.net_device*, %struct.ethtool_coalesce*)*, void (%struct.net_device*, %struct.ethtool_ringparam*)*, i32 (%struct.net_device*, %struct.ethtool_ringparam*)*, void (%struct.net_device*, %struct.ethtool_pause_stats*)*, void (%struct.net_device*, %struct.ethtool_pauseparam*)*, i32 (%struct.net_device*, %struct.ethtool_pauseparam*)*, void (%struct.net_device*, %struct.ethtool_test*, i64*)*, void (%struct.net_device*, i32, i8*)*, i32 (%struct.net_device*, i32)*, void (%struct.net_device*, %struct.ethtool_stats*, i64*)*, i32 (%struct.net_device*)*, void (%struct.net_device*)*, i32 (%struct.net_device*)*, i32 (%struct.net_device*, i32)*, i32 (%struct.net_device*, i32)*, i32 (%struct.net_device*, %struct.ethtool_rxnfc*, i32*)*, i32 (%struct.net_device*, %struct.ethtool_rxnfc*)*, i32 (%struct.net_device*, %struct.ethtool_flash*)*, i32 (%struct.net_device*, i32*)*, i32 (%struct.net_device*)*, i32 (%struct.net_device*)*, i32 (%struct.net_device*, i32*, i8*, i8*)*, i32 (%struct.net_device*, i32*, i8*, i8)*, i32 (%struct.net_device*, i32*, i8*, i8*, i32)*, i32 (%struct.net_device*, i32*, i8*, i8, i32*, i1)*, void (%struct.net_device*, %struct.ethtool_channels*)*, i32 (%struct.net_device*, %struct.ethtool_channels*)*, i32 (%struct.net_device*, %struct.ethtool_dump*)*, i32 (%struct.net_device*, %struct.ethtool_dump*, i8*)*, i32 (%struct.net_device*, %struct.ethtool_dump*)*, i32 (%struct.net_device*, %struct.ethtool_ts_info*)*, i32 (%struct.net_device*, %struct.ethtool_modinfo*)*, i32 (%struct.net_device*, %struct.ethtool_eeprom*, i8*)*, i32 (%struct.net_device*, %struct.ethtool_eee*)*, i32 (%struct.net_device*, %struct.ethtool_eee*)*, i32 (%struct.net_device*, %struct.ethtool_tunable*, i8*)*, i32 (%struct.net_device*, %struct.ethtool_tunable*, i8*)*, i32 (%struct.net_device*, i32, %struct.ethtool_coalesce*)*, i32 (%struct.net_device*, i32, %struct.ethtool_coalesce*)*, i32 (%struct.net_device*, %struct.ethtool_link_ksettings*)*, i32 (%struct.net_device*, %struct.ethtool_link_ksettings*)*, i32 (%struct.net_device*, %struct.ethtool_fecparam*)*, i32 (%struct.net_device*, %struct.ethtool_fecparam*)*, void (%struct.net_device*, %struct.ethtool_stats*, i64*)*, i32 (%struct.net_device*, %struct.ethtool_tunable*, i8*)*, i32 (%struct.net_device*, %struct.ethtool_tunable*, i8*)* }
%struct.ethtool_drvinfo = type { i32, [32 x i8], [32 x i8], [32 x i8], [32 x i8], [32 x i8], [12 x i8], i32, i32, i32, i32, i32 }
%struct.ethtool_regs = type { i32, i32, i32, [0 x i8] }
%struct.ethtool_wolinfo = type { i32, i32, i32, [6 x i8] }
%struct.ethtool_link_ext_state_info = type { i32, %union.anon.153 }
%union.anon.153 = type { i32 }
%struct.ethtool_coalesce = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.ethtool_ringparam = type { i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.ethtool_pause_stats = type { i64, i64 }
%struct.ethtool_pauseparam = type { i32, i32, i32, i32 }
%struct.ethtool_test = type { i32, i32, i32, i32, [0 x i64] }
%struct.ethtool_rxnfc = type { i32, i32, i64, %struct.ethtool_rx_flow_spec, %union.anon.154, [0 x i32] }
%struct.ethtool_rx_flow_spec = type { i32, %union.ethtool_flow_union, %struct.ethtool_flow_ext, %union.ethtool_flow_union, %struct.ethtool_flow_ext, i64, i32 }
%union.ethtool_flow_union = type { %struct.ethtool_tcpip6_spec, [12 x i8] }
%struct.ethtool_tcpip6_spec = type { [4 x i32], [4 x i32], i16, i16, i8 }
%struct.ethtool_flow_ext = type { [2 x i8], [6 x i8], i16, i16, [2 x i32] }
%union.anon.154 = type { i32 }
%struct.ethtool_flash = type { i32, i32, [128 x i8] }
%struct.ethtool_channels = type { i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.ethtool_dump = type { i32, i32, i32, i32, [0 x i8] }
%struct.ethtool_ts_info = type { i32, i32, i32, i32, [3 x i32], i32, [3 x i32] }
%struct.ethtool_modinfo = type { i32, i32, i32, [8 x i32] }
%struct.ethtool_eeprom = type { i32, i32, i32, i32, [0 x i8] }
%struct.ethtool_eee = type { i32, i32, i32, i32, i32, i32, i32, i32, [2 x i32] }
%struct.ethtool_link_ksettings = type { %struct.ethtool_link_settings, %struct.anon.155 }
%struct.ethtool_link_settings = type { i32, i32, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, [1 x i8], [7 x i32], [0 x i32] }
%struct.anon.155 = type { [2 x i64], [2 x i64], [2 x i64] }
%struct.ethtool_fecparam = type { i32, i32, i32, i32 }
%struct.ethtool_stats = type { i32, i32, [0 x i64] }
%struct.ethtool_tunable = type { i32, i32, i32, i32, [0 x i8*] }
%struct.ndisc_ops = type opaque
%struct.header_ops = type { i32 (%struct.sk_buff*, %struct.net_device*, i16, i8*, i8*, i32)*, i32 (%struct.sk_buff*, i8*)*, i32 (%struct.neighbour*, %struct.hh_cache*, i16)*, void (%struct.hh_cache*, %struct.net_device*, i8*)*, i1 (i8*, i32)*, i16 (%struct.sk_buff*)* }
%struct.netdev_hw_addr_list = type { %struct.list_head, i32 }
%struct.vlan_info = type opaque
%struct.in_device = type opaque
%struct.inet6_dev = type opaque
%struct.wireless_dev = type opaque
%struct.wpan_dev = type opaque
%struct.netdev_rx_queue = type { %struct.kobject, %struct.net_device*, [56 x i8], %struct.xdp_rxq_info }
%struct.xdp_rxq_info = type { %struct.net_device*, i32, i32, %struct.xdp_mem_info, [40 x i8] }
%struct.bpf_prog = type { i16, i16, i32, i32, i32, i32, [8 x i8], %struct.bpf_prog_aux*, %struct.sock_fprog_kern*, i32 (i8*, %struct.bpf_insn*)*, [0 x %struct.sock_filter], [0 x %struct.bpf_insn] }
%struct.bpf_prog_aux = type { %struct.atomic64_t, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, %struct.bpf_ctx_arg_aux*, %struct.mutex, %struct.bpf_prog*, %struct.bpf_trampoline*, i32, i32, i8, i8, i8, i8, i8, i8, i32, %struct.hlist_node, %struct.btf_type*, i8*, %struct.bpf_prog**, i8*, %struct.bpf_jit_poke_descriptor*, i32, %struct.bpf_ksym, %struct.bpf_prog_ops*, %struct.bpf_map**, %struct.mutex, %struct.bpf_prog*, %struct.user_struct*, i64, [2 x %struct.bpf_map*], [16 x i8], %struct.bpf_prog_offload*, %struct.btf*, %struct.bpf_func_info*, %struct.bpf_func_info_aux*, %struct.bpf_line_info*, i8**, i32, i32, i32, i32, %struct.exception_table_entry*, %struct.bpf_prog_stats*, %union.anon.92 }
%struct.bpf_ctx_arg_aux = type { i32, i32, i32 }
%struct.bpf_trampoline = type { %struct.hlist_node, %struct.mutex, %struct.refcount_struct, i64, %struct.anon.65, %struct.bpf_prog*, [3 x %struct.hlist_head], [3 x i32], i8*, i64, %struct.bpf_ksym }
%struct.anon.65 = type { %struct.btf_func_model, i8*, i8 }
%struct.btf_func_model = type { i8, i8, [12 x i8] }
%struct.btf_type = type opaque
%struct.bpf_jit_poke_descriptor = type { i8*, i8*, i8*, %union.anon.66, i8, i8, i16, i32 }
%union.anon.66 = type { %struct.anon.67 }
%struct.anon.67 = type { %struct.bpf_map*, i32 }
%struct.bpf_map = type { %struct.bpf_map_ops*, %struct.bpf_map*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, %struct.btf*, %struct.bpf_map_memory, [16 x i8], i32, i8, i8, [26 x i8], %struct.atomic64_t, %struct.atomic64_t, %struct.work_struct, %struct.mutex, i64, [48 x i8] }
%struct.bpf_map_ops = type { i32 (%union.bpf_attr*)*, %struct.bpf_map* (%union.bpf_attr*)*, void (%struct.bpf_map*, %struct.file*)*, void (%struct.bpf_map*)*, i32 (%struct.bpf_map*, i8*, i8*)*, void (%struct.bpf_map*)*, i8* (%struct.bpf_map*, i8*)*, i32 (%struct.bpf_map*, %union.bpf_attr*, %union.bpf_attr*)*, i32 (%struct.bpf_map*, %union.bpf_attr*, %union.bpf_attr*)*, i32 (%struct.bpf_map*, %union.bpf_attr*, %union.bpf_attr*)*, i32 (%struct.bpf_map*, %union.bpf_attr*, %union.bpf_attr*)*, i8* (%struct.bpf_map*, i8*)*, i32 (%struct.bpf_map*, i8*, i8*, i64)*, i32 (%struct.bpf_map*, i8*)*, i32 (%struct.bpf_map*, i8*, i64)*, i32 (%struct.bpf_map*, i8*)*, i32 (%struct.bpf_map*, i8*)*, i8* (%struct.bpf_map*, %struct.file*, i32)*, void (i8*)*, i32 (%struct.bpf_map*, %struct.bpf_insn*)*, i32 (i8*)*, void (%struct.bpf_map*, i8*, %struct.seq_file*)*, i32 (%struct.bpf_map*, %struct.btf*, %struct.btf_type*, %struct.btf_type*)*, i32 (%struct.bpf_map*, %struct.bpf_prog_aux*)*, void (%struct.bpf_map*, %struct.bpf_prog_aux*)*, void (%struct.bpf_map*, i32, %struct.bpf_prog*, %struct.bpf_prog*)*, i32 (%struct.bpf_map*, i64*, i32)*, i32 (%struct.bpf_map*, i64, i32*)*, i32 (%struct.bpf_map*, %struct.vm_area_struct*)*, i32 (%struct.bpf_map*, %struct.file*, %struct.poll_table_struct*)*, i32 (%struct.bpf_local_storage_map*, i8*, i32)*, void (%struct.bpf_local_storage_map*, i8*, i32)*, %struct.bpf_local_storage** (i8*)*, i1 (%struct.bpf_map*, %struct.bpf_map*)*, i8*, i32*, %struct.bpf_iter_seq_info* }
%union.bpf_attr = type { %struct.anon.72 }
%struct.anon.72 = type { i32, i32, i64, i64, i32, i32, i64, i32, i32, [16 x i8], i32, i32, i32, i32, i64, i32, i32, i64, i32, i32, i32 }
%struct.file = type { %union.anon, %struct.path, %struct.inode*, %struct.file_operations*, %struct.spinlock, i32, %struct.atomic64_t, i32, i32, %struct.mutex, i64, %struct.fown_struct, %struct.cred*, %struct.file_ra_state, i64, i8*, %struct.list_head, %struct.list_head, %struct.address_space*, i32, i32 }
%union.anon = type { %struct.callback_head }
%struct.path = type { %struct.vfsmount*, %struct.dentry* }
%struct.vfsmount = type opaque
%struct.dentry = type { i32, %struct.seqcount_spinlock, %struct.hlist_bl_node, %struct.dentry*, %struct.qstr, %struct.inode*, [32 x i8], %struct.lockref, %struct.dentry_operations*, %struct.super_block*, i64, i8*, %union.anon.132, %struct.list_head, %struct.list_head, %union.anon.133 }
%struct.hlist_bl_node = type { %struct.hlist_bl_node*, %struct.hlist_bl_node** }
%struct.qstr = type { %union.anon.0, i8* }
%union.anon.0 = type { i64 }
%struct.lockref = type { %union.anon.130 }
%union.anon.130 = type { %struct.anon.131 }
%struct.anon.131 = type { %struct.spinlock, i32 }
%struct.dentry_operations = type { i32 (%struct.dentry*, i32)*, i32 (%struct.dentry*, i32)*, i32 (%struct.dentry*, %struct.qstr*)*, i32 (%struct.dentry*, i32, i8*, %struct.qstr*)*, i32 (%struct.dentry*)*, i32 (%struct.dentry*)*, void (%struct.dentry*)*, void (%struct.dentry*)*, void (%struct.dentry*, %struct.inode*)*, i8* (%struct.dentry*, i8*, i32)*, %struct.vfsmount* (%struct.path*)*, i32 (%struct.path*, i1)*, %struct.dentry* (%struct.dentry*, %struct.inode*)*, [24 x i8] }
%struct.super_block = type { %struct.list_head, i32, i8, i64, i64, %struct.file_system_type*, %struct.super_operations*, %struct.dquot_operations*, %struct.quotactl_ops*, %struct.export_operations*, i64, i64, i64, %struct.dentry*, %struct.rw_semaphore, i32, %struct.atomic_t, %struct.xattr_handler**, %struct.hlist_bl_head, %struct.list_head, %struct.block_device*, %struct.backing_dev_info*, %struct.mtd_info*, %struct.hlist_node, i32, %struct.quota_info, %struct.sb_writers, i8*, i32, i64, i64, i32, %struct.fsnotify_mark_connector*, [32 x i8], %struct.uuid_t, i32, i32, %struct.mutex, i8*, %struct.dentry_operations*, i32, %struct.shrinker, %struct.atomic64_t, %struct.atomic64_t, i32, i32, %struct.workqueue_struct*, %struct.hlist_head, %struct.user_namespace*, %struct.list_lru, %struct.list_lru, %struct.callback_head, %struct.work_struct, %struct.mutex, i32, %struct.spinlock, %struct.list_head, %struct.spinlock, %struct.list_head }
%struct.file_system_type = type { i8*, i32, i32 (%struct.fs_context*)*, %struct.fs_parameter_spec*, %struct.dentry* (%struct.file_system_type*, i32, i8*, i8*)*, void (%struct.super_block*)*, %struct.module*, %struct.file_system_type*, %struct.hlist_head, %struct.lock_class_key, %struct.lock_class_key, %struct.lock_class_key, [3 x %struct.lock_class_key], %struct.lock_class_key, %struct.lock_class_key, %struct.lock_class_key }
%struct.fs_context = type opaque
%struct.fs_parameter_spec = type opaque
%struct.lock_class_key = type {}
%struct.super_operations = type { %struct.inode* (%struct.super_block*)*, void (%struct.inode*)*, void (%struct.inode*)*, void (%struct.inode*, i32)*, i32 (%struct.inode*, %struct.writeback_control*)*, i32 (%struct.inode*)*, void (%struct.inode*)*, void (%struct.super_block*)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*)*, i32 (%struct.super_block*)*, i32 (%struct.super_block*)*, i32 (%struct.super_block*)*, i32 (%struct.dentry*, %struct.kstatfs*)*, i32 (%struct.super_block*, i32*, i8*)*, void (%struct.super_block*)*, i32 (%struct.seq_file*, %struct.dentry*)*, i32 (%struct.seq_file*, %struct.dentry*)*, i32 (%struct.seq_file*, %struct.dentry*)*, i32 (%struct.seq_file*, %struct.dentry*)*, i32 (%struct.super_block*, %struct.page*, i32)*, i64 (%struct.super_block*, %struct.shrink_control*)*, i64 (%struct.super_block*, %struct.shrink_control*)* }
%struct.writeback_control = type { i64, i64, i64, i64, i32, i8 }
%struct.kstatfs = type opaque
%struct.seq_file = type { i8*, i64, i64, i64, i64, i64, i64, %struct.mutex, %struct.seq_operations*, i32, %struct.file*, i8* }
%struct.seq_operations = type { i8* (%struct.seq_file*, i64*)*, void (%struct.seq_file*, i8*)*, i8* (%struct.seq_file*, i8*, i64*)*, i32 (%struct.seq_file*, i8*)* }
%struct.page = type { i64, %union.anon.2, %union.anon.122, %struct.atomic_t, [8 x i8] }
%union.anon.2 = type { %struct.anon.3 }
%struct.anon.3 = type { %struct.list_head, %struct.address_space*, i64, i64 }
%union.anon.122 = type { %struct.atomic_t }
%struct.shrink_control = type { i32, i32, i64, i64, %struct.mem_cgroup* }
%struct.dquot_operations = type { i32 (%struct.dquot*)*, %struct.dquot* (%struct.super_block*, i32)*, void (%struct.dquot*)*, i32 (%struct.dquot*)*, i32 (%struct.dquot*)*, i32 (%struct.dquot*)*, i32 (%struct.super_block*, i32)*, i64* (%struct.inode*)*, i32 (%struct.inode*, %struct.kprojid_t*)*, i32 (%struct.inode*, i64*)*, i32 (%struct.super_block*, %struct.kqid*)* }
%struct.dquot = type { %struct.hlist_node, %struct.list_head, %struct.list_head, %struct.list_head, %struct.mutex, %struct.spinlock, %struct.atomic_t, %struct.super_block*, %struct.kqid, i64, i64, %struct.mem_dqblk }
%struct.kqid = type { %union.anon.123, i32 }
%union.anon.123 = type { %struct.kuid_t }
%struct.mem_dqblk = type { i64, i64, i64, i64, i64, i64, i64, i64, i64 }
%struct.kprojid_t = type { i32 }
%struct.quotactl_ops = type { i32 (%struct.super_block*, i32, i32, %struct.path*)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32, %struct.qc_info*)*, i32 (%struct.super_block*, i64, %struct.qc_dqblk*)*, i32 (%struct.super_block*, %struct.kqid*, %struct.qc_dqblk*)*, i32 (%struct.super_block*, i64, %struct.qc_dqblk*)*, i32 (%struct.super_block*, %struct.qc_state*)*, i32 (%struct.super_block*, i32)* }
%struct.qc_info = type { i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.qc_dqblk = type { i32, i64, i64, i64, i64, i64, i64, i64, i64, i32, i32, i64, i64, i64, i64, i32 }
%struct.qc_state = type { i32, [3 x %struct.qc_type_state] }
%struct.qc_type_state = type { i32, i32, i32, i32, i32, i32, i32, i64, i64, i64 }
%struct.export_operations = type opaque
%struct.xattr_handler = type opaque
%struct.hlist_bl_head = type { %struct.hlist_bl_node* }
%struct.block_device = type { i32, i32, %struct.inode*, %struct.super_block*, %struct.mutex, i8*, i8*, i32, i8, %struct.list_head, %struct.block_device*, i8, %struct.hd_struct*, i32, %struct.spinlock, %struct.gendisk*, %struct.backing_dev_info*, i32, %struct.mutex }
%struct.hd_struct = type { i64, i64, i64, %struct.disk_stats*, %struct.percpu_ref, %struct.device, %struct.kobject*, i32, i32, %struct.partition_meta_info*, %struct.rcu_work }
%struct.disk_stats = type opaque
%struct.percpu_ref = type { i64, %struct.percpu_ref_data* }
%struct.percpu_ref_data = type { %struct.atomic64_t, void (%struct.percpu_ref*)*, void (%struct.percpu_ref*)*, i8, %struct.callback_head, %struct.percpu_ref* }
%struct.partition_meta_info = type { [37 x i8], [64 x i8] }
%struct.rcu_work = type { %struct.work_struct, %struct.callback_head, %struct.workqueue_struct* }
%struct.gendisk = type { i32, i32, i32, [32 x i8], i16, i16, %struct.disk_part_tbl*, %struct.hd_struct, %struct.block_device_operations*, %struct.request_queue*, i8*, i32, i64, %struct.rw_semaphore, %struct.kobject*, %struct.timer_rand_state*, %struct.atomic_t, %struct.disk_events*, %struct.kobject, i32, %struct.badblocks*, %struct.lockdep_map }
%struct.disk_part_tbl = type { %struct.callback_head, i32, %struct.hd_struct*, [0 x %struct.hd_struct*] }
%struct.block_device_operations = type { i32 (%struct.bio*)*, i32 (%struct.block_device*, i32)*, void (%struct.gendisk*, i32)*, i32 (%struct.block_device*, i64, %struct.page*, i32)*, i32 (%struct.block_device*, i32, i32, i64)*, i32 (%struct.block_device*, i32, i32, i64)*, i32 (%struct.gendisk*, i32)*, void (%struct.gendisk*)*, i32 (%struct.gendisk*)*, i32 (%struct.block_device*, %struct.hd_geometry*)*, void (%struct.block_device*, i64)*, i32 (%struct.gendisk*, i64, i32, i32 (%struct.blk_zone*, i32, i8*)*, i8*)*, i8* (%struct.gendisk*, i16*)*, %struct.module*, %struct.pr_ops* }
%struct.bio = type { %struct.bio*, %struct.gendisk*, i32, i16, i16, i16, i8, i8, %struct.atomic_t, %struct.bvec_iter, void (%struct.bio*)*, i8*, %union.anon.100, i16, i16, %struct.atomic_t, %struct.bio_vec*, %struct.bio_set*, [0 x %struct.bio_vec] }
%struct.bvec_iter = type { i64, i32, i32, i32 }
%union.anon.100 = type { %struct.bio_integrity_payload* }
%struct.bio_integrity_payload = type { %struct.bio*, %struct.bvec_iter, i16, i16, i16, i16, %struct.bvec_iter, %struct.work_struct, %struct.bio_vec*, [0 x %struct.bio_vec] }
%struct.bio_vec = type { %struct.page*, i32, i32 }
%struct.bio_set = type { %struct.kmem_cache*, i32, %struct.mempool_s, %struct.mempool_s, %struct.mempool_s, %struct.mempool_s, %struct.spinlock, %struct.bio_list, %struct.work_struct, %struct.workqueue_struct* }
%struct.kmem_cache = type opaque
%struct.mempool_s = type { %struct.spinlock, i32, i32, i8**, i8*, i8* (i32, i8*)*, void (i8*, i8*)*, %struct.wait_queue_head }
%struct.bio_list = type { %struct.bio*, %struct.bio* }
%struct.hd_geometry = type opaque
%struct.blk_zone = type { i64, i64, i64, i8, i8, i8, i8, [4 x i8], i64, [24 x i8] }
%struct.pr_ops = type opaque
%struct.request_queue = type { %struct.request*, %struct.elevator_queue*, %struct.percpu_ref, %struct.blk_queue_stats*, %struct.rq_qos*, %struct.blk_mq_ops*, %struct.blk_mq_ctx*, i32, %struct.blk_mq_hw_ctx**, i32, %struct.backing_dev_info*, i8*, i64, %struct.atomic_t, i32, i32, %struct.spinlock, %struct.kobject, %struct.kobject*, %struct.blk_integrity, %struct.device*, i32, i32, i64, i32, i32, i32, i32, %struct.blk_stat_callback*, [16 x %struct.blk_rq_stat], %struct.timer_list, %struct.work_struct, %struct.atomic_t, %struct.list_head, %struct.queue_limits, i32, i32, i32, i32, %struct.mutex, %struct.blk_flush_queue*, %struct.list_head, %struct.spinlock, %struct.delayed_work, %struct.mutex, %struct.mutex, %struct.list_head, %struct.spinlock, i32, %struct.bsg_class_device, %struct.callback_head, %struct.wait_queue_head, %struct.mutex, %struct.blk_mq_tag_set*, %struct.list_head, %struct.bio_set, %struct.dentry*, i8, i64, [5 x i64] }
%struct.request = type { %struct.request_queue*, %struct.blk_mq_ctx*, %struct.blk_mq_hw_ctx*, i32, i32, i32, i32, i32, i64, %struct.bio*, %struct.bio*, %struct.list_head, %union.anon.135, %union.anon.136, %union.anon.137, %struct.gendisk*, %struct.hd_struct*, i64, i64, i16, i16, i16, i16, i16, i32, %struct.refcount_struct, i32, i64, %union.anon.140, void (%struct.request*, i8)*, i8* }
%struct.blk_mq_hw_ctx = type opaque
%union.anon.135 = type { %struct.hlist_node }
%union.anon.136 = type { %struct.rb_node }
%union.anon.137 = type { %struct.anon.139 }
%struct.anon.139 = type { i32, %struct.list_head, void (%struct.request*, i8)* }
%union.anon.140 = type { %struct.__call_single_data }
%struct.__call_single_data = type { %union.anon.141, void (i8*)*, i8* }
%union.anon.141 = type { %struct.__call_single_node }
%struct.__call_single_node = type { %struct.llist_node, %union.anon.142, i16, i16 }
%union.anon.142 = type { i32 }
%struct.elevator_queue = type { %struct.elevator_type*, i8*, %struct.kobject, %struct.mutex, i8, [64 x %struct.hlist_head] }
%struct.elevator_type = type { %struct.kmem_cache*, %struct.elevator_mq_ops, i64, i64, %struct.elv_fs_entry*, i8*, i8*, i32, %struct.module*, [22 x i8], %struct.list_head }
%struct.elevator_mq_ops = type { i32 (%struct.request_queue*, %struct.elevator_type*)*, void (%struct.elevator_queue*)*, i32 (%struct.blk_mq_hw_ctx*, i32)*, void (%struct.blk_mq_hw_ctx*, i32)*, void (%struct.blk_mq_hw_ctx*)*, i1 (%struct.request_queue*, %struct.request*, %struct.bio*)*, i1 (%struct.blk_mq_hw_ctx*, %struct.bio*, i32)*, i32 (%struct.request_queue*, %struct.request**, %struct.bio*)*, void (%struct.request_queue*, %struct.request*, i32)*, void (%struct.request_queue*, %struct.request*, %struct.request*)*, void (i32, %struct.blk_mq_alloc_data*)*, void (%struct.request*)*, void (%struct.request*)*, void (%struct.blk_mq_hw_ctx*, %struct.list_head*, i1)*, %struct.request* (%struct.blk_mq_hw_ctx*)*, i1 (%struct.blk_mq_hw_ctx*)*, void (%struct.request*, i64)*, void (%struct.request*)*, %struct.request* (%struct.request_queue*, %struct.request*)*, %struct.request* (%struct.request_queue*, %struct.request*)*, void (%struct.io_cq*)*, void (%struct.io_cq*)* }
%struct.blk_mq_alloc_data = type opaque
%struct.io_cq = type { %struct.request_queue*, %struct.io_context*, %union.anon.101, %union.anon.102, i32 }
%struct.io_context = type { %struct.atomic64_t, %struct.atomic_t, %struct.atomic_t, %struct.spinlock, i16, %struct.xarray, %struct.io_cq*, %struct.hlist_head, %struct.work_struct }
%union.anon.101 = type { %struct.list_head }
%union.anon.102 = type { %struct.hlist_node }
%struct.elv_fs_entry = type { %struct.attribute, i64 (%struct.elevator_queue*, i8*)*, i64 (%struct.elevator_queue*, i8*, i64)* }
%struct.blk_queue_stats = type opaque
%struct.rq_qos = type opaque
%struct.blk_mq_ops = type opaque
%struct.blk_mq_ctx = type opaque
%struct.blk_integrity = type { %struct.blk_integrity_profile*, i8, i8, i8, i8 }
%struct.blk_integrity_profile = type { i8 (%struct.blk_integrity_iter*)*, i8 (%struct.blk_integrity_iter*)*, void (%struct.request*)*, void (%struct.request*, i32)*, i8* }
%struct.blk_integrity_iter = type { i8*, i8*, i64, i32, i16, i8* }
%struct.blk_stat_callback = type opaque
%struct.blk_rq_stat = type { i64, i64, i64, i32, i64 }
%struct.queue_limits = type { i64, i64, i64, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i16, i16, i16, i8, i8, i8, i32 }
%struct.blk_flush_queue = type opaque
%struct.bsg_class_device = type { %struct.device*, i32, %struct.request_queue*, %struct.bsg_ops* }
%struct.bsg_ops = type { i32 (%struct.sg_io_v4*)*, i32 (%struct.request*, %struct.sg_io_v4*, i32)*, i32 (%struct.request*, %struct.sg_io_v4*)*, void (%struct.request*)* }
%struct.sg_io_v4 = type { i32, i32, i32, i32, i64, i64, i32, i32, i32, i32, i64, i32, i32, i32, i32, i64, i64, i32, i32, i64, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i64, i32, i32 }
%struct.blk_mq_tag_set = type opaque
%struct.timer_rand_state = type opaque
%struct.disk_events = type opaque
%struct.badblocks = type opaque
%struct.lockdep_map = type {}
%struct.backing_dev_info = type { i64, %struct.rb_node, %struct.list_head, i64, i64, %struct.kref, i32, i32, i32, i32, %struct.atomic64_t, %struct.bdi_writeback, %struct.list_head, %struct.wait_queue_head, %struct.device*, [64 x i8], %struct.device*, %struct.timer_list }
%struct.bdi_writeback = type { %struct.backing_dev_info*, i64, i64, %struct.list_head, %struct.list_head, %struct.list_head, %struct.list_head, %struct.spinlock, [4 x %struct.percpu_counter], i64, i64, i64, i64, i64, i64, i64, i64, %struct.fprop_local_percpu, i32, i32, %struct.spinlock, %struct.list_head, %struct.delayed_work, i64, %struct.list_head }
%struct.percpu_counter = type { i64 }
%struct.fprop_local_percpu = type { %struct.percpu_counter, i32, %struct.raw_spinlock }
%struct.mtd_info = type opaque
%struct.quota_info = type { i32, %struct.rw_semaphore, [3 x %struct.inode*], [3 x %struct.mem_dqinfo], [3 x %struct.quota_format_ops*] }
%struct.mem_dqinfo = type { %struct.quota_format_type*, i32, %struct.list_head, i64, i32, i32, i64, i64, i8* }
%struct.quota_format_type = type { i32, %struct.quota_format_ops*, %struct.module*, %struct.quota_format_type* }
%struct.quota_format_ops = type { i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.dquot*)*, i32 (%struct.dquot*)*, i32 (%struct.dquot*)*, i32 (%struct.super_block*, %struct.kqid*)* }
%struct.sb_writers = type { i32, %struct.wait_queue_head, [3 x %struct.percpu_rw_semaphore] }
%struct.percpu_rw_semaphore = type { %struct.rcu_sync, i32*, %struct.rcuwait, %struct.wait_queue_head, %struct.atomic_t }
%struct.rcu_sync = type { i32, i32, %struct.wait_queue_head, %struct.callback_head }
%struct.rcuwait = type { %struct.task_struct* }
%struct.task_struct = type { %struct.thread_info, i64, i8*, %struct.refcount_struct, i32, i32, i32, i32, i32, i32, i32, %struct.sched_class*, %struct.sched_entity, %struct.sched_rt_entity, %struct.sched_dl_entity, i32, i32, %struct.cpumask*, %struct.cpumask, %struct.sched_info, %struct.list_head, %struct.mm_struct*, %struct.mm_struct*, %struct.vmacache, i32, i32, i32, i32, i64, i32, i8, [3 x i8], i8, i64, %struct.restart_block, i32, i32, i64, %struct.task_struct*, %struct.task_struct*, %struct.list_head, %struct.list_head, %struct.task_struct*, %struct.list_head, %struct.list_head, %struct.pid*, [4 x %struct.hlist_node], %struct.list_head, %struct.list_head, %struct.completion*, i32*, i32*, i64, i64, i64, %struct.prev_cputime, i64, i64, i64, i64, i64, i64, %struct.posix_cputimers, %struct.posix_cputimers_work, %struct.cred*, %struct.cred*, %struct.cred*, %struct.key*, [16 x i8], %struct.nameidata*, %struct.fs_struct*, %struct.files_struct*, %struct.io_uring_task*, %struct.nsproxy*, %struct.signal_struct*, %struct.sighand_struct*, %struct.sigset_t, %struct.sigset_t, %struct.sigset_t, %struct.sigpending, i64, i64, i32, %struct.callback_head*, %struct.seccomp, i64, i64, %struct.spinlock, %struct.raw_spinlock, %struct.wake_q_node, %struct.rb_root_cached, %struct.task_struct*, %struct.rt_mutex_waiter*, i8*, %struct.bio_list*, %struct.blk_plug*, %struct.reclaim_state*, %struct.backing_dev_info*, %struct.io_context*, %struct.capture_control*, i64, %struct.kernel_siginfo*, %struct.task_io_accounting, %struct.robust_list_head*, %struct.list_head, %struct.futex_pi_state*, %struct.mutex, i32, [2 x %struct.perf_event_context*], %struct.mutex, %struct.list_head, %struct.rseq*, i32, i64, %struct.tlbflush_unmap_batch, %union.anon.115, %struct.pipe_inode_info*, %struct.page_frag, i32, i32, i64, i64, i64, i32, %struct.task_struct*, %struct.vm_struct*, %struct.refcount_struct, i8*, i64, i64, i64, %struct.callback_head, [24 x i8], %struct.thread_struct }
%struct.thread_info = type { i64, i32 }
%struct.sched_class = type opaque
%struct.sched_entity = type { %struct.load_weight, %struct.rb_node, %struct.list_head, i32, i64, i64, i64, i64, i64, %struct.sched_statistics }
%struct.load_weight = type { i64, i32 }
%struct.sched_statistics = type {}
%struct.sched_rt_entity = type { %struct.list_head, i64, i64, i32, i16, i16, %struct.sched_rt_entity* }
%struct.sched_dl_entity = type { %struct.rb_node, i64, i64, i64, i64, i64, i64, i64, i32, i8, %struct.hrtimer, %struct.hrtimer, %struct.sched_dl_entity* }
%struct.hrtimer = type { %struct.timerqueue_node, i64, i32 (%struct.hrtimer*)*, %struct.hrtimer_clock_base*, i8, i8, i8, i8 }
%struct.timerqueue_node = type { %struct.rb_node, i64 }
%struct.hrtimer_clock_base = type { %struct.hrtimer_cpu_base*, i32, i32, %struct.seqcount_raw_spinlock, %struct.hrtimer*, %struct.timerqueue_head, i64 ()*, i64 }
%struct.hrtimer_cpu_base = type { %struct.raw_spinlock, i32, i32, i32, i8, i64, %struct.hrtimer*, i64, %struct.hrtimer*, [16 x i8], [8 x %struct.hrtimer_clock_base] }
%struct.seqcount_raw_spinlock = type { %struct.seqcount }
%struct.timerqueue_head = type { %struct.rb_root_cached }
%struct.cpumask = type { [1 x i64] }
%struct.sched_info = type {}
%struct.mm_struct = type { %struct.anon.18, [0 x i64] }
%struct.anon.18 = type { %struct.vm_area_struct*, %struct.rb_root, i64, i64 (%struct.file*, i64, i64, i64, i64)*, i64, i64, i64, i64, %struct.pgd_t*, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic64_t, i32, %struct.spinlock, %struct.rw_semaphore, %struct.list_head, i64, i64, i64, i64, %struct.atomic64_t, i64, i64, i64, i64, %struct.spinlock, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, [44 x i64], %struct.mm_rss_stat, %struct.linux_binfmt*, %struct.mm_context_t, i64, %struct.core_state*, %struct.spinlock, %struct.kioctx_table*, %struct.user_namespace*, %struct.file*, %struct.mmu_notifier_subscriptions*, %struct.atomic_t, i8, %struct.uprobes_state, %struct.work_struct, i32 }
%struct.vm_area_struct = type { i64, i64, %struct.vm_area_struct*, %struct.vm_area_struct*, %struct.rb_node, i64, %struct.mm_struct*, %struct.pgprot, i64, %struct.anon.19, %struct.list_head, %struct.anon_vma*, %struct.vm_operations_struct*, i64, %struct.file*, i8*, %struct.atomic64_t, %struct.vm_userfaultfd_ctx }
%struct.pgprot = type { i64 }
%struct.anon.19 = type { %struct.rb_node, i64 }
%struct.anon_vma = type opaque
%struct.vm_operations_struct = type { void (%struct.vm_area_struct*)*, void (%struct.vm_area_struct*)*, i32 (%struct.vm_area_struct*, i64)*, i32 (%struct.vm_area_struct*)*, i32 (%struct.vm_fault*)*, i32 (%struct.vm_fault*, i32)*, void (%struct.vm_fault*, i64, i64)*, i64 (%struct.vm_area_struct*)*, i32 (%struct.vm_fault*)*, i32 (%struct.vm_fault*)*, i32 (%struct.vm_area_struct*, i64, i8*, i32, i32)*, i8* (%struct.vm_area_struct*)*, %struct.page* (%struct.vm_area_struct*, i64)* }
%struct.vm_fault = type { %struct.vm_area_struct*, i32, i32, i64, i64, %struct.pmd_t*, %struct.pud_t*, %struct.pte_t, %struct.page*, %struct.page*, %struct.pte_t*, %struct.spinlock*, %struct.page* }
%struct.pmd_t = type { i64 }
%struct.pud_t = type { i64 }
%struct.pte_t = type { i64 }
%struct.vm_userfaultfd_ctx = type {}
%struct.pgd_t = type { i64 }
%struct.mm_rss_stat = type { [4 x %struct.atomic64_t] }
%struct.linux_binfmt = type opaque
%struct.mm_context_t = type { i64, %struct.atomic64_t, %struct.rw_semaphore, %struct.ldt_struct*, i16, %struct.mutex, i8*, %struct.vdso_image*, %struct.atomic_t, i16, i16 }
%struct.ldt_struct = type opaque
%struct.vdso_image = type { i8*, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64 }
%struct.core_state = type { %struct.atomic_t, %struct.core_thread, %struct.completion }
%struct.core_thread = type { %struct.task_struct*, %struct.core_thread* }
%struct.kioctx_table = type opaque
%struct.mmu_notifier_subscriptions = type opaque
%struct.uprobes_state = type {}
%struct.vmacache = type { i64, [4 x %struct.vm_area_struct*] }
%struct.restart_block = type { i64 (%struct.restart_block*)*, %union.anon.20 }
%union.anon.20 = type { %struct.anon.21 }
%struct.anon.21 = type { i32*, i32, i32, i32, i64, i32* }
%struct.prev_cputime = type { i64, i64, %struct.raw_spinlock }
%struct.posix_cputimers = type { [3 x %struct.posix_cputimer_base], i32, i32 }
%struct.posix_cputimer_base = type { i64, %struct.timerqueue_head }
%struct.posix_cputimers_work = type { %struct.callback_head, i32 }
%struct.nameidata = type opaque
%struct.fs_struct = type opaque
%struct.files_struct = type opaque
%struct.io_uring_task = type opaque
%struct.nsproxy = type { %struct.atomic_t, %struct.uts_namespace*, %struct.ipc_namespace*, %struct.mnt_namespace*, %struct.pid_namespace*, %struct.net*, %struct.time_namespace*, %struct.time_namespace*, %struct.cgroup_namespace* }
%struct.uts_namespace = type opaque
%struct.ipc_namespace = type opaque
%struct.mnt_namespace = type opaque
%struct.pid_namespace = type opaque
%struct.time_namespace = type opaque
%struct.cgroup_namespace = type { %struct.refcount_struct, %struct.ns_common, %struct.user_namespace*, %struct.ucounts*, %struct.css_set* }
%struct.css_set = type opaque
%struct.signal_struct = type { %struct.refcount_struct, %struct.atomic_t, i32, %struct.list_head, %struct.wait_queue_head, %struct.task_struct*, %struct.sigpending, %struct.hlist_head, i32, i32, %struct.task_struct*, i32, i32, i8, i32, %struct.list_head, %struct.hrtimer, i64, [2 x %struct.cpu_itimer], %struct.thread_group_cputimer, %struct.posix_cputimers, [4 x %struct.pid*], %struct.pid*, i32, %struct.tty_struct*, %struct.seqlock_t, i64, i64, i64, i64, i64, i64, %struct.prev_cputime, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, %struct.task_io_accounting, i64, [16 x %struct.rlimit], i8, i16, i16, %struct.mm_struct*, %struct.mutex, %struct.mutex }
%struct.cpu_itimer = type { i64, i64 }
%struct.thread_group_cputimer = type { %struct.task_cputime_atomic }
%struct.task_cputime_atomic = type { %struct.atomic64_t, %struct.atomic64_t, %struct.atomic64_t }
%struct.tty_struct = type opaque
%struct.rlimit = type { i64, i64 }
%struct.sighand_struct = type { %struct.spinlock, %struct.refcount_struct, %struct.wait_queue_head, [64 x %struct.k_sigaction] }
%struct.k_sigaction = type { %struct.sigaction }
%struct.sigaction = type { void (i32)*, i64, void ()*, %struct.sigset_t }
%struct.sigset_t = type { [1 x i64] }
%struct.sigpending = type { %struct.list_head, %struct.sigset_t }
%struct.seccomp = type { i32, %struct.atomic_t, %struct.seccomp_filter* }
%struct.seccomp_filter = type opaque
%struct.wake_q_node = type { %struct.wake_q_node* }
%struct.rb_root_cached = type { %struct.rb_root, %struct.rb_node* }
%struct.rt_mutex_waiter = type opaque
%struct.blk_plug = type { %struct.list_head, %struct.list_head, i16, i8, i8 }
%struct.reclaim_state = type opaque
%struct.capture_control = type opaque
%struct.kernel_siginfo = type { %struct.anon.103 }
%struct.anon.103 = type { i32, i32, i32, %union.__sifields }
%union.__sifields = type { %struct.anon.107 }
%struct.anon.107 = type { i32, i32, i32, i64, i64 }
%struct.task_io_accounting = type {}
%struct.robust_list_head = type opaque
%struct.futex_pi_state = type opaque
%struct.perf_event_context = type opaque
%struct.rseq = type { i32, i32, %union.anon.114, i32, [12 x i8] }
%union.anon.114 = type { i64 }
%struct.tlbflush_unmap_batch = type { %struct.arch_tlbflush_unmap_batch, i8, i8 }
%struct.arch_tlbflush_unmap_batch = type { %struct.cpumask }
%union.anon.115 = type { %struct.callback_head }
%struct.pipe_inode_info = type { %struct.mutex, %struct.wait_queue_head, %struct.wait_queue_head, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, %struct.page*, %struct.fasync_struct*, %struct.fasync_struct*, %struct.pipe_buffer*, %struct.user_struct* }
%struct.fasync_struct = type { %struct.rwlock_t, i32, i32, %struct.fasync_struct*, %struct.file*, %struct.callback_head }
%struct.pipe_buffer = type { %struct.page*, i32, i32, %struct.pipe_buf_operations*, i32, i64 }
%struct.pipe_buf_operations = type { i32 (%struct.pipe_inode_info*, %struct.pipe_buffer*)*, void (%struct.pipe_inode_info*, %struct.pipe_buffer*)*, i1 (%struct.pipe_inode_info*, %struct.pipe_buffer*)*, i1 (%struct.pipe_inode_info*, %struct.pipe_buffer*)* }
%struct.vm_struct = type { %struct.vm_struct*, i8*, i64, i64, %struct.page**, i32, i64, i8* }
%struct.thread_struct = type { [3 x %struct.desc_struct], i64, i16, i16, i16, i16, i64, i64, [4 x %struct.perf_event*], i64, i64, i64, i64, i64, %struct.io_bitmap*, i64, i8, [47 x i8], %struct.fpu }
%struct.desc_struct = type { i16, i16, i32 }
%struct.perf_event = type opaque
%struct.io_bitmap = type opaque
%struct.fpu = type { i32, i64, [48 x i8], %union.fpregs_state }
%union.fpregs_state = type { %struct.xregs_state, [3520 x i8] }
%struct.xregs_state = type { %struct.fxregs_state, %struct.xstate_header, [0 x i8] }
%struct.fxregs_state = type { i16, i16, i16, i16, %union.anon.116, i32, i32, [32 x i32], [64 x i32], [12 x i32], %union.anon.119 }
%union.anon.116 = type { %struct.anon.117 }
%struct.anon.117 = type { i64, i64 }
%union.anon.119 = type { [12 x i32] }
%struct.xstate_header = type { i64, i64, [6 x i64] }
%struct.fsnotify_mark_connector = type opaque
%struct.uuid_t = type { [16 x i8] }
%struct.shrinker = type { i64 (%struct.shrinker*, %struct.shrink_control*)*, i64 (%struct.shrinker*, %struct.shrink_control*)*, i64, i32, i32, %struct.list_head, %struct.atomic64_t* }
%struct.list_lru = type { %struct.list_lru_node* }
%struct.list_lru_node = type { %struct.spinlock, %struct.list_lru_one, i64 }
%struct.list_lru_one = type { %struct.list_head, i64 }
%union.anon.132 = type { %struct.list_head }
%union.anon.133 = type { %struct.hlist_node }
%struct.inode = type { i16, i16, %struct.kuid_t, %struct.kgid_t, i32, %struct.inode_operations*, %struct.super_block*, %struct.address_space*, i64, %union.anon.124, i32, i64, %struct.timespec64, %struct.timespec64, %struct.timespec64, %struct.spinlock, i16, i8, i8, i64, i64, %struct.rw_semaphore, i64, i64, %struct.hlist_node, %struct.list_head, %struct.list_head, %struct.list_head, %struct.list_head, %union.anon.125, %struct.atomic64_t, %struct.atomic64_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %union.anon.126, %struct.file_lock_context*, %struct.address_space, %struct.list_head, %union.anon.129, i32, i32, %struct.fsnotify_mark_connector*, i8* }
%struct.inode_operations = type { %struct.dentry* (%struct.inode*, %struct.dentry*, i32)*, i8* (%struct.dentry*, %struct.inode*, %struct.delayed_call*)*, i32 (%struct.inode*, i32)*, %struct.posix_acl* (%struct.inode*, i32)*, i32 (%struct.dentry*, i8*, i32)*, i32 (%struct.inode*, %struct.dentry*, i16, i1)*, i32 (%struct.dentry*, %struct.inode*, %struct.dentry*)*, i32 (%struct.inode*, %struct.dentry*)*, i32 (%struct.inode*, %struct.dentry*, i8*)*, i32 (%struct.inode*, %struct.dentry*, i16)*, i32 (%struct.inode*, %struct.dentry*)*, i32 (%struct.inode*, %struct.dentry*, i16, i32)*, i32 (%struct.inode*, %struct.dentry*, %struct.inode*, %struct.dentry*, i32)*, i32 (%struct.dentry*, %struct.iattr*)*, i32 (%struct.path*, %struct.kstat*, i32, i32)*, i64 (%struct.dentry*, i8*, i64)*, i32 (%struct.inode*, %struct.fiemap_extent_info*, i64, i64)*, i32 (%struct.inode*, %struct.timespec64*, i32)*, i32 (%struct.inode*, %struct.dentry*, %struct.file*, i32, i16)*, i32 (%struct.inode*, %struct.dentry*, i16)*, i32 (%struct.inode*, %struct.posix_acl*, i32)*, [24 x i8] }
%struct.delayed_call = type { void (i8*)*, i8* }
%struct.posix_acl = type opaque
%struct.iattr = type { i32, i16, %struct.kuid_t, %struct.kgid_t, i64, %struct.timespec64, %struct.timespec64, %struct.timespec64, %struct.file* }
%struct.kstat = type { i32, i16, i32, i32, i64, i64, i64, i32, i32, %struct.kuid_t, %struct.kgid_t, i64, %struct.timespec64, %struct.timespec64, %struct.timespec64, %struct.timespec64, i64, i64 }
%struct.fiemap_extent_info = type opaque
%union.anon.124 = type { i32 }
%struct.timespec64 = type { i64, i64 }
%union.anon.125 = type { %struct.callback_head }
%union.anon.126 = type { %struct.file_operations* }
%struct.file_lock_context = type { %struct.spinlock, %struct.list_head, %struct.list_head, %struct.list_head }
%struct.address_space = type { %struct.inode*, %struct.xarray, i32, %struct.atomic_t, %struct.rb_root_cached, %struct.rw_semaphore, i64, i64, i64, %struct.address_space_operations*, i64, i32, %struct.spinlock, %struct.list_head, i8* }
%struct.address_space_operations = type { i32 (%struct.page*, %struct.writeback_control*)*, i32 (%struct.file*, %struct.page*)*, i32 (%struct.address_space*, %struct.writeback_control*)*, i32 (%struct.page*)*, i32 (%struct.file*, %struct.address_space*, %struct.list_head*, i32)*, void (%struct.readahead_control*)*, i32 (%struct.file*, %struct.address_space*, i64, i32, i32, %struct.page**, i8**)*, i32 (%struct.file*, %struct.address_space*, i64, i32, i32, %struct.page*, i8*)*, i64 (%struct.address_space*, i64)*, void (%struct.page*, i32, i32)*, i32 (%struct.page*, i32)*, void (%struct.page*)*, i64 (%struct.kiocb*, %struct.iov_iter*)*, i32 (%struct.address_space*, %struct.page*, %struct.page*, i32)*, i1 (%struct.page*, i32)*, void (%struct.page*)*, i32 (%struct.page*)*, i32 (%struct.page*, i64, i64)*, void (%struct.page*, i8*, i8*)*, i32 (%struct.address_space*, %struct.page*)*, i32 (%struct.swap_info_struct*, %struct.file*, i64*)*, void (%struct.file*)* }
%struct.readahead_control = type { %struct.file*, %struct.address_space*, i64, i32, i32 }
%struct.kiocb = type { %struct.file*, i64, void (%struct.kiocb*, i64, i64)*, i8*, i32, i16, i16, %union.anon.4 }
%union.anon.4 = type { %struct.wait_page_queue* }
%struct.wait_page_queue = type { %struct.page*, i32, %struct.wait_queue_entry }
%struct.wait_queue_entry = type { i32, i8*, i32 (%struct.wait_queue_entry*, i32, i32, i8*)*, %struct.list_head }
%struct.iov_iter = type { i32, i64, i64, %union.anon.5, %union.anon.6 }
%union.anon.5 = type { %struct.iovec* }
%struct.iovec = type { i8*, i64 }
%union.anon.6 = type { i64 }
%struct.swap_info_struct = type opaque
%union.anon.129 = type { %struct.pipe_inode_info* }
%struct.file_operations = type { %struct.module*, i64 (%struct.file*, i64, i32)*, i64 (%struct.file*, i8*, i64, i64*)*, i64 (%struct.file*, i8*, i64, i64*)*, i64 (%struct.kiocb*, %struct.iov_iter*)*, i64 (%struct.kiocb*, %struct.iov_iter*)*, i32 (%struct.kiocb*, i1)*, i32 (%struct.file*, %struct.dir_context*)*, i32 (%struct.file*, %struct.dir_context*)*, i32 (%struct.file*, %struct.poll_table_struct*)*, i64 (%struct.file*, i32, i64)*, i64 (%struct.file*, i32, i64)*, i32 (%struct.file*, %struct.vm_area_struct*)*, i64, i32 (%struct.inode*, %struct.file*)*, i32 (%struct.file*, i8*)*, i32 (%struct.inode*, %struct.file*)*, i32 (%struct.file*, i64, i64, i32)*, i32 (i32, %struct.file*, i32)*, i32 (%struct.file*, i32, %struct.file_lock*)*, i64 (%struct.file*, %struct.page*, i32, i64, i64*, i32)*, i64 (%struct.file*, i64, i64, i64, i64)*, i32 (i32)*, i32 (%struct.file*, i32, %struct.file_lock*)*, i64 (%struct.pipe_inode_info*, %struct.file*, i64*, i64, i32)*, i64 (%struct.file*, i64*, %struct.pipe_inode_info*, i64, i32)*, i32 (%struct.file*, i64, %struct.file_lock**, i8**)*, i64 (%struct.file*, i32, i64, i64)*, void (%struct.seq_file*, %struct.file*)*, i64 (%struct.file*, i64, %struct.file*, i64, i64, i32)*, i64 (%struct.file*, i64, %struct.file*, i64, i64, i32)*, i32 (%struct.file*, i64, i64, i32)* }
%struct.dir_context = type { i32 (%struct.dir_context*, i8*, i32, i64, i64, i32)*, i64 }
%struct.poll_table_struct = type { void (%struct.file*, %struct.wait_queue_head*, %struct.poll_table_struct*)*, i32 }
%struct.file_lock = type { %struct.file_lock*, %struct.list_head, %struct.hlist_node, %struct.list_head, %struct.list_head, i8*, i32, i8, i32, i32, %struct.wait_queue_head, %struct.file*, i64, i64, %struct.fasync_struct*, i64, i64, %struct.file_lock_operations*, %struct.lock_manager_operations*, %union.anon.127 }
%struct.file_lock_operations = type { void (%struct.file_lock*, %struct.file_lock*)*, void (%struct.file_lock*)* }
%struct.lock_manager_operations = type { i8* (i8*)*, void (i8*)*, void (%struct.file_lock*)*, i32 (%struct.file_lock*, i32)*, i1 (%struct.file_lock*)*, i32 (%struct.file_lock*, i32, %struct.list_head*)*, void (%struct.file_lock*, i8**)*, i1 (%struct.file_lock*)* }
%union.anon.127 = type { %struct.nfs_lock_info }
%struct.nfs_lock_info = type { i32, %struct.nlm_lockowner*, %struct.list_head }
%struct.nlm_lockowner = type opaque
%struct.fown_struct = type { %struct.rwlock_t, %struct.pid*, i32, %struct.kuid_t, %struct.kuid_t, i32 }
%struct.file_ra_state = type { i64, i32, i32, i32, i32, i64 }
%struct.bpf_insn = type { i8, i8, i16, i32 }
%struct.bpf_local_storage_map = type opaque
%struct.bpf_local_storage = type opaque
%struct.bpf_iter_seq_info = type { %struct.seq_operations*, i32 (i8*, %struct.bpf_iter_aux_info*)*, void (i8*)*, i32 }
%struct.bpf_iter_aux_info = type opaque
%struct.bpf_map_memory = type { i32, %struct.user_struct* }
%struct.bpf_ksym = type { i64, i64, [128 x i8], %struct.list_head, %struct.latch_tree_node, i8 }
%struct.latch_tree_node = type { [2 x %struct.rb_node] }
%struct.bpf_prog_ops = type { i32 (%struct.bpf_prog*, %union.bpf_attr*, %union.bpf_attr*)* }
%struct.user_struct = type { %struct.refcount_struct, %struct.atomic_t, %struct.atomic_t, %struct.atomic64_t, i64, i64, %struct.atomic64_t, %struct.hlist_node, %struct.kuid_t, %struct.atomic64_t, %struct.ratelimit_state }
%struct.ratelimit_state = type { %struct.raw_spinlock, i32, i32, i32, i32, i64, i64 }
%struct.bpf_prog_offload = type { %struct.bpf_prog*, %struct.net_device*, %struct.bpf_offload_dev*, i8*, %struct.list_head, i8, i8, i8*, i32 }
%struct.bpf_offload_dev = type opaque
%struct.btf = type opaque
%struct.bpf_func_info = type { i32, i32 }
%struct.bpf_func_info_aux = type { i16, i8 }
%struct.bpf_line_info = type { i32, i32, i32, i32 }
%struct.exception_table_entry = type { i32, i32, i32 }
%struct.bpf_prog_stats = type { i64, i64, %struct.u64_stats_sync }
%struct.u64_stats_sync = type {}
%union.anon.92 = type { %struct.work_struct }
%struct.sock_fprog_kern = type { i16, %struct.sock_filter* }
%struct.sock_filter = type { i16, i8, i8, i32 }
%struct.netdev_queue = type { %struct.net_device*, %struct.Qdisc*, %struct.Qdisc*, %struct.kobject, i64, i64, %struct.net_device*, %struct.spinlock, i32, i64, i64, %struct.dql }
%struct.dql = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i64, i32, i32, i32 }
%struct.Qdisc = type { i32 (%struct.sk_buff*, %struct.Qdisc*, %struct.sk_buff**)*, %struct.sk_buff* (%struct.Qdisc*)*, i32, i32, %struct.Qdisc_ops*, %struct.qdisc_size_table*, %struct.hlist_node, i32, i32, %struct.netdev_queue*, %struct.net_rate_estimator*, %struct.gnet_stats_basic_cpu*, %struct.gnet_stats_queue*, i32, %struct.refcount_struct, %struct.sk_buff_head, %struct.qdisc_skb_head, %struct.gnet_stats_basic_packed, %struct.seqcount, %struct.gnet_stats_queue, i64, %struct.Qdisc*, %struct.sk_buff_head, %struct.spinlock, %struct.spinlock, i8, %struct.callback_head, [0 x i64] }
%struct.Qdisc_ops = type { %struct.Qdisc_ops*, %struct.Qdisc_class_ops*, [16 x i8], i32, i32, i32 (%struct.sk_buff*, %struct.Qdisc*, %struct.sk_buff**)*, %struct.sk_buff* (%struct.Qdisc*)*, %struct.sk_buff* (%struct.Qdisc*)*, i32 (%struct.Qdisc*, %struct.nlattr*, %struct.netlink_ext_ack*)*, void (%struct.Qdisc*)*, void (%struct.Qdisc*)*, i32 (%struct.Qdisc*, %struct.nlattr*, %struct.netlink_ext_ack*)*, void (%struct.Qdisc*)*, i32 (%struct.Qdisc*, i32)*, i32 (%struct.Qdisc*, %struct.sk_buff*)*, i32 (%struct.Qdisc*, %struct.gnet_dump*)*, void (%struct.Qdisc*, i32)*, void (%struct.Qdisc*, i32)*, i32 (%struct.Qdisc*)*, i32 (%struct.Qdisc*)*, %struct.module* }
%struct.Qdisc_class_ops = type { i32, %struct.netdev_queue* (%struct.Qdisc*, %struct.tcmsg*)*, i32 (%struct.Qdisc*, i64, %struct.Qdisc*, %struct.Qdisc**, %struct.netlink_ext_ack*)*, %struct.Qdisc* (%struct.Qdisc*, i64)*, void (%struct.Qdisc*, i64)*, i64 (%struct.Qdisc*, i32)*, i32 (%struct.Qdisc*, i32, i32, %struct.nlattr**, i64*, %struct.netlink_ext_ack*)*, i32 (%struct.Qdisc*, i64)*, void (%struct.Qdisc*, %struct.qdisc_walker*)*, %struct.tcf_block* (%struct.Qdisc*, i64, %struct.netlink_ext_ack*)*, i64 (%struct.Qdisc*, i64, i32)*, void (%struct.Qdisc*, i64)*, i32 (%struct.Qdisc*, i64, %struct.sk_buff*, %struct.tcmsg*)*, i32 (%struct.Qdisc*, i64, %struct.gnet_dump*)* }
%struct.tcmsg = type { i8, i8, i16, i32, i32, i32, i32 }
%struct.qdisc_walker = type opaque
%struct.tcf_block = type { %struct.mutex, %struct.list_head, i32, i32, %struct.refcount_struct, %struct.net*, %struct.Qdisc*, %struct.rw_semaphore, %struct.flow_block, %struct.list_head, i8, %struct.atomic_t, i32, i32, %struct.anon.156, %struct.callback_head, [128 x %struct.hlist_head], %struct.mutex }
%struct.flow_block = type { %struct.list_head }
%struct.anon.156 = type { %struct.tcf_chain*, %struct.list_head }
%struct.tcf_chain = type { %struct.mutex, %struct.tcf_proto*, %struct.list_head, %struct.tcf_block*, i32, i32, i32, i8, i8, %struct.tcf_proto_ops*, i8*, %struct.callback_head }
%struct.tcf_proto = type { %struct.tcf_proto*, i8*, i32 (%struct.sk_buff*, %struct.tcf_proto*, %struct.tcf_result*)*, i16, i32, i8*, %struct.tcf_proto_ops*, %struct.tcf_chain*, %struct.spinlock, i8, %struct.refcount_struct, %struct.callback_head, %struct.hlist_node }
%struct.tcf_result = type { %union.anon.157 }
%union.anon.157 = type { %struct.anon.158 }
%struct.anon.158 = type { i64, i32 }
%struct.tcf_proto_ops = type { %struct.list_head, [16 x i8], i32 (%struct.sk_buff*, %struct.tcf_proto*, %struct.tcf_result*)*, i32 (%struct.tcf_proto*)*, void (%struct.tcf_proto*, i1, %struct.netlink_ext_ack*)*, i8* (%struct.tcf_proto*, i32)*, void (%struct.tcf_proto*, i8*)*, i32 (%struct.net*, %struct.sk_buff*, %struct.tcf_proto*, i64, i32, %struct.nlattr**, i8**, i1, i1, %struct.netlink_ext_ack*)*, i32 (%struct.tcf_proto*, i8*, i8*, i1, %struct.netlink_ext_ack*)*, i1 (%struct.tcf_proto*)*, void (%struct.tcf_proto*, %struct.tcf_walker*, i1)*, i32 (%struct.tcf_proto*, i1, i32 (i32, i8*, i8*)*, i8*, %struct.netlink_ext_ack*)*, void (%struct.tcf_proto*, i8*)*, void (%struct.tcf_proto*, i8*)*, void (i8*, i32, i64, i8*, i64)*, i8* (%struct.net*, %struct.tcf_chain*, %struct.nlattr**, %struct.netlink_ext_ack*)*, void (i8*)*, i32 (%struct.net*, %struct.tcf_proto*, i8*, %struct.sk_buff*, %struct.tcmsg*, i1)*, i32 (%struct.net*, %struct.tcf_proto*, i8*, %struct.sk_buff*, %struct.tcmsg*, i1)*, i32 (%struct.sk_buff*, %struct.net*, i8*)*, %struct.module*, i32 }
%struct.tcf_walker = type opaque
%struct.gnet_dump = type { %struct.spinlock*, %struct.sk_buff*, %struct.nlattr*, i32, i32, i32, i8*, i32, %struct.tc_stats }
%struct.tc_stats = type { i64, i32, i32, i32, i32, i32, i32, i32 }
%struct.qdisc_size_table = type { %struct.callback_head, %struct.list_head, %struct.tc_sizespec, i32, [0 x i16] }
%struct.tc_sizespec = type { i8, i8, i16, i32, i32, i32, i32, i32 }
%struct.net_rate_estimator = type opaque
%struct.gnet_stats_basic_cpu = type { %struct.gnet_stats_basic_packed, %struct.u64_stats_sync }
%struct.qdisc_skb_head = type { %struct.sk_buff*, %struct.sk_buff*, i32, %struct.spinlock }
%struct.gnet_stats_basic_packed = type { i64, i64 }
%struct.gnet_stats_queue = type { i32, i32, i32, i32, i32 }
%struct.xdp_dev_bulk_queue = type opaque
%union.anon.160 = type { i8* }
%struct.attribute_group = type { i8*, i16 (%struct.kobject*, %struct.attribute*, i32)*, i16 (%struct.kobject*, %struct.bin_attribute*, i32)*, %struct.attribute**, %struct.bin_attribute** }
%struct.bin_attribute = type { %struct.attribute, i64, i8*, i64 (%struct.file*, %struct.kobject*, %struct.bin_attribute*, i8*, i64, i64)*, i64 (%struct.file*, %struct.kobject*, %struct.bin_attribute*, i8*, i64, i64)*, i32 (%struct.file*, %struct.kobject*, %struct.bin_attribute*, %struct.vm_area_struct*)* }
%struct.rtnl_link_ops = type { %struct.list_head, i8*, i64, void (%struct.net_device*)*, i32, %struct.nla_policy*, i32 (%struct.nlattr**, %struct.nlattr**, %struct.netlink_ext_ack*)*, i32 (%struct.net*, %struct.net_device*, %struct.nlattr**, %struct.nlattr**, %struct.netlink_ext_ack*)*, i32 (%struct.net_device*, %struct.nlattr**, %struct.nlattr**, %struct.netlink_ext_ack*)*, void (%struct.net_device*, %struct.list_head*)*, i64 (%struct.net_device*)*, i32 (%struct.sk_buff*, %struct.net_device*)*, i64 (%struct.net_device*)*, i32 (%struct.sk_buff*, %struct.net_device*)*, i32 ()*, i32 ()*, i32, %struct.nla_policy*, i32 (%struct.net_device*, %struct.net_device*, %struct.nlattr**, %struct.nlattr**, %struct.netlink_ext_ack*)*, i64 (%struct.net_device*, %struct.net_device*)*, i32 (%struct.sk_buff*, %struct.net_device*, %struct.net_device*)*, %struct.net* (%struct.net_device*)*, i64 (%struct.net_device*, i32)*, i32 (%struct.sk_buff*, %struct.net_device*, i32*, i32)* }
%struct.netdev_tc_txq = type { i16, i16 }
%struct.phy_device = type { %struct.mdio_device, %struct.phy_driver*, i32, %struct.phy_c45_device_ids, i16, i32, i32, i32, i32, i32, i32, i32, i8, i8, i8, [2 x i64], [2 x i64], [2 x i64], [2 x i64], i32, i32, i8*, %struct.phy_package_shared*, %struct.sk_buff*, i8*, %struct.nlattr*, %struct.delayed_work, %struct.mutex, i8, %struct.sfp_bus*, %struct.phylink*, %struct.net_device*, %struct.mii_timestamper*, i8, i8, void (%struct.phy_device*, i1)*, void (%struct.net_device*)* }
%struct.mdio_device = type { %struct.device, %struct.mii_bus*, [32 x i8], i32 (%struct.device*, %struct.device_driver*)*, void (%struct.mdio_device*)*, void (%struct.mdio_device*)*, i32, i32, %struct.gpio_desc*, %struct.reset_control*, i32, i32 }
%struct.mii_bus = type { %struct.module*, i8*, [61 x i8], i8*, i32 (%struct.mii_bus*, i32, i32)*, i32 (%struct.mii_bus*, i32, i32, i16)*, i32 (%struct.mii_bus*)*, [32 x %struct.mdio_bus_stats], %struct.mutex, %struct.device*, i32, %struct.device, [32 x %struct.mdio_device*], i32, i32, [32 x i32], i32, i32, %struct.gpio_desc*, i32, %struct.mutex, [32 x %struct.phy_package_shared*] }
%struct.mdio_bus_stats = type { %struct.u64_stats_t, %struct.u64_stats_t, %struct.u64_stats_t, %struct.u64_stats_t, %struct.u64_stats_sync }
%struct.u64_stats_t = type { %struct.local64_t }
%struct.local64_t = type { %struct.local_t }
%struct.local_t = type { %struct.atomic64_t }
%struct.gpio_desc = type opaque
%struct.reset_control = type opaque
%struct.phy_driver = type { %struct.mdio_driver_common, i32, i8*, i32, i64*, i32, i8*, i32 (%struct.phy_device*)*, i32 (%struct.phy_device*)*, i32 (%struct.phy_device*)*, i32 (%struct.phy_device*)*, i32 (%struct.phy_device*)*, i32 (%struct.phy_device*)*, i32 (%struct.phy_device*)*, i32 (%struct.phy_device*)*, i32 (%struct.phy_device*)*, i32 (%struct.phy_device*)*, i32 (%struct.phy_device*)*, i32 (%struct.phy_device*)*, i32 (%struct.phy_device*)*, void (%struct.phy_device*)*, i32 (%struct.phy_device*)*, i32 (%struct.phy_device*, %struct.ethtool_wolinfo*)*, void (%struct.phy_device*, %struct.ethtool_wolinfo*)*, void (%struct.phy_device*)*, i32 (%struct.phy_device*, i32, i16)*, i32 (%struct.phy_device*, i32, i16, i16)*, i32 (%struct.phy_device*)*, i32 (%struct.phy_device*, i32)*, i32 (%struct.phy_device*, %struct.ethtool_modinfo*)*, i32 (%struct.phy_device*, %struct.ethtool_eeprom*, i8*)*, i32 (%struct.phy_device*)*, i32 (%struct.phy_device*, %struct.phy_tdr_config*)*, i32 (%struct.phy_device*, i8*)*, i32 (%struct.phy_device*)*, void (%struct.phy_device*, i8*)*, void (%struct.phy_device*, %struct.ethtool_stats*, i64*)*, i32 (%struct.phy_device*, %struct.ethtool_tunable*, i8*)*, i32 (%struct.phy_device*, %struct.ethtool_tunable*, i8*)*, i32 (%struct.phy_device*, i1)*, i32 (%struct.phy_device*)*, i32 (%struct.phy_device*)* }
%struct.mdio_driver_common = type { %struct.device_driver, i32 }
%struct.phy_tdr_config = type { i32, i32, i32, i8 }
%struct.phy_c45_device_ids = type { i32, i32, [32 x i32] }
%struct.phy_package_shared = type { i32, %struct.refcount_struct, i64, i64, i8* }
%struct.phylink = type opaque
%struct.mii_timestamper = type { i1 (%struct.mii_timestamper*, %struct.sk_buff*, i32)*, void (%struct.mii_timestamper*, %struct.sk_buff*, i32)*, i32 (%struct.mii_timestamper*, %struct.ifreq*)*, void (%struct.mii_timestamper*, %struct.phy_device*)*, i32 (%struct.mii_timestamper*, %struct.ethtool_ts_info*)*, %struct.device* }
%struct.sfp_bus = type opaque
%struct.udp_tunnel_nic_info = type opaque
%struct.udp_tunnel_nic = type opaque
%struct.bpf_xdp_entity = type { %struct.bpf_prog*, %struct.bpf_xdp_link* }
%struct.bpf_xdp_link = type opaque
%struct.netns_core = type { %struct.ctl_table_header*, i32, i32*, %struct.prot_inuse* }
%struct.prot_inuse = type opaque
%struct.netns_mib = type { %struct.tcp_mib*, %struct.ipstats_mib*, %struct.linux_mib*, %struct.udp_mib*, %struct.udp_mib*, %struct.icmp_mib*, %struct.icmpmsg_mib*, %struct.proc_dir_entry*, %struct.udp_mib*, %struct.udp_mib*, %struct.ipstats_mib*, %struct.icmpv6_mib*, %struct.icmpv6msg_mib* }
%struct.tcp_mib = type { [16 x i64] }
%struct.linux_mib = type { [124 x i64] }
%struct.icmp_mib = type { [28 x i64] }
%struct.icmpmsg_mib = type { [512 x %struct.atomic64_t] }
%struct.udp_mib = type { [9 x i64] }
%struct.ipstats_mib = type { [37 x i64], %struct.u64_stats_sync }
%struct.icmpv6_mib = type { [6 x i64] }
%struct.icmpv6msg_mib = type { [512 x %struct.atomic64_t] }
%struct.netns_packet = type { %struct.mutex, %struct.hlist_head }
%struct.netns_unix = type { i32, %struct.ctl_table_header* }
%struct.netns_nexthop = type { %struct.rb_root, %struct.hlist_head*, i32, i32, %struct.blocking_notifier_head }
%struct.blocking_notifier_head = type { %struct.rw_semaphore, %struct.notifier_block* }
%struct.netns_ipv4 = type { %struct.ctl_table_header*, %struct.ctl_table_header*, %struct.ctl_table_header*, %struct.ctl_table_header*, %struct.ctl_table_header*, %struct.ipv4_devconf*, %struct.ipv4_devconf*, %struct.ip_ra_chain*, %struct.mutex, i8, %struct.hlist_head*, i8, %struct.sock*, %struct.sock**, %struct.sock*, %struct.inet_peer_base*, %struct.sock**, %struct.fqdir*, i32, i32, i32, i32, i32, i32, %struct.local_ports, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [3 x i32], [3 x i32], i32, i64, i64, %struct.inet_timewait_death_row, i32, i32, %struct.tcp_congestion_ops*, %struct.tcp_fastopen_context*, %struct.spinlock, i32, %struct.atomic_t, i64, i32, i32, i32, i32, i32, i32, i32, %struct.ping_group_range, %struct.atomic_t, i64*, i32, %struct.fib_notifier_ops*, i32, %struct.fib_notifier_ops*, i32, %struct.atomic_t, %struct.siphash_key_t }
%struct.ipv4_devconf = type opaque
%struct.ip_ra_chain = type opaque
%struct.inet_peer_base = type opaque
%struct.fqdir = type { i64, i64, i32, i32, %struct.inet_frags*, %struct.net*, i8, %struct.rhashtable, %struct.atomic64_t, %struct.work_struct }
%struct.inet_frags = type { i32, void (%struct.inet_frag_queue*, i8*)*, void (%struct.inet_frag_queue*)*, void (%struct.timer_list*)*, %struct.kmem_cache*, i8*, %struct.rhashtable_params, %struct.refcount_struct, %struct.completion }
%struct.inet_frag_queue = type { %struct.rhash_head, %union.anon.98, %struct.timer_list, %struct.spinlock, %struct.refcount_struct, %struct.rb_root, %struct.sk_buff*, %struct.sk_buff*, i64, i32, i32, i8, i16, %struct.fqdir*, %struct.callback_head }
%struct.rhash_head = type { %struct.rhash_head* }
%union.anon.98 = type { %struct.frag_v6_compare_key }
%struct.frag_v6_compare_key = type { %struct.in6_addr, %struct.in6_addr, i32, i32, i32 }
%struct.rhashtable_params = type { i16, i16, i16, i16, i32, i16, i8, i32 (i8*, i32, i32)*, i32 (i8*, i32, i32)*, i32 (%struct.rhashtable_compare_arg*, i8*)* }
%struct.rhashtable_compare_arg = type { %struct.rhashtable*, i8* }
%struct.rhashtable = type { %struct.bucket_table*, i32, i32, %struct.rhashtable_params, i8, %struct.work_struct, %struct.mutex, %struct.spinlock, %struct.atomic_t }
%struct.bucket_table = type opaque
%struct.local_ports = type { %struct.seqlock_t, [2 x i32], i8 }
%struct.inet_timewait_death_row = type { %struct.atomic_t, %struct.inet_hashinfo*, i32 }
%struct.inet_hashinfo = type opaque
%struct.tcp_congestion_ops = type opaque
%struct.tcp_fastopen_context = type opaque
%struct.ping_group_range = type { %struct.seqlock_t, [2 x %struct.kgid_t] }
%struct.fib_notifier_ops = type { i32, %struct.list_head, i32 (%struct.net*)*, i32 (%struct.net*, %struct.notifier_block*, %struct.netlink_ext_ack*)*, %struct.module*, %struct.callback_head }
%struct.siphash_key_t = type { [2 x i64] }
%struct.netns_ipv6 = type { %struct.netns_sysctl_ipv6, %struct.ipv6_devconf*, %struct.ipv6_devconf*, %struct.inet_peer_base*, %struct.fqdir*, %struct.fib6_info*, %struct.rt6_info*, %struct.rt6_statistics*, %struct.timer_list, %struct.hlist_head*, %struct.fib6_table*, %struct.list_head, %struct.dst_ops, %struct.rwlock_t, %struct.spinlock, i32, i64, %struct.sock**, %struct.sock*, %struct.sock*, %struct.sock*, %struct.sock*, %struct.atomic_t, %struct.atomic_t, %struct.seg6_pernet_data*, %struct.fib_notifier_ops*, %struct.fib_notifier_ops*, i32, %struct.anon.99 }
%struct.netns_sysctl_ipv6 = type { %struct.ctl_table_header*, %struct.ctl_table_header*, %struct.ctl_table_header*, %struct.ctl_table_header*, %struct.ctl_table_header*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [4 x i64], i64*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8 }
%struct.ipv6_devconf = type opaque
%struct.fib6_info = type opaque
%struct.rt6_info = type opaque
%struct.rt6_statistics = type opaque
%struct.fib6_table = type opaque
%struct.dst_ops = type { i16, i32, i32 (%struct.dst_ops*)*, %struct.dst_entry* (%struct.dst_entry*, i32)*, i32 (%struct.dst_entry*)*, i32 (%struct.dst_entry*)*, i32* (%struct.dst_entry*, i64)*, void (%struct.dst_entry*)*, void (%struct.dst_entry*, %struct.net_device*, i32)*, %struct.dst_entry* (%struct.dst_entry*)*, void (%struct.sk_buff*)*, void (%struct.dst_entry*, %struct.sock*, %struct.sk_buff*, i32, i1)*, void (%struct.dst_entry*, %struct.sock*, %struct.sk_buff*)*, i32 (%struct.net*, %struct.sock*, %struct.sk_buff*)*, %struct.neighbour* (%struct.dst_entry*, %struct.sk_buff*, i8*)*, void (%struct.dst_entry*, i8*)*, %struct.kmem_cache*, %struct.percpu_counter }
%struct.seg6_pernet_data = type opaque
%struct.anon.99 = type { %struct.hlist_head, %struct.spinlock, i32 }
%struct.net_generic = type opaque
%struct.netns_bpf = type { [2 x %struct.bpf_prog_array*], [2 x %struct.bpf_prog*], [2 x %struct.list_head] }
%struct.bpf_prog_array = type { %struct.callback_head, [0 x %struct.bpf_prog_array_item] }
%struct.bpf_prog_array_item = type { %struct.bpf_prog*, [2 x %struct.bpf_cgroup_storage*] }
%struct.bpf_cgroup_storage = type opaque
%struct.netns_can = type { %struct.proc_dir_entry*, %struct.proc_dir_entry*, %struct.proc_dir_entry*, %struct.proc_dir_entry*, %struct.proc_dir_entry*, %struct.proc_dir_entry*, %struct.proc_dir_entry*, %struct.proc_dir_entry*, %struct.proc_dir_entry*, %struct.proc_dir_entry*, %struct.can_dev_rcv_lists*, %struct.spinlock, %struct.timer_list, %struct.can_pkg_stats*, %struct.can_rcv_lists_stats*, %struct.hlist_head }
%struct.can_dev_rcv_lists = type opaque
%struct.can_pkg_stats = type opaque
%struct.can_rcv_lists_stats = type opaque
%struct.in6_addr = type { %union.anon.59 }
%union.anon.59 = type { [4 x i32] }
%struct.atomic64_t = type { i64 }
%union.anon.60 = type { i64 }
%union.anon.61 = type { %struct.hlist_node }
%union.anon.62 = type { i32 }
%union.anon.63 = type { i32 }
%struct.socket_lock_t = type { %struct.spinlock, i32, %struct.wait_queue_head }
%struct.anon.64 = type { %struct.atomic_t, i32, %struct.sk_buff*, %struct.sk_buff* }
%struct.sk_filter = type { %struct.refcount_struct, %struct.callback_head, %struct.bpf_prog* }
%union.anon.93 = type { %struct.socket_wq* }
%struct.socket_wq = type { %struct.wait_queue_head, %struct.fasync_struct*, i64, %struct.callback_head }
%struct.dst_entry = type { %struct.net_device*, %struct.dst_ops*, i64, i64, i8*, i32 (%struct.sk_buff*)*, i32 (%struct.net*, %struct.sock*, %struct.sk_buff*)*, i16, i16, i16, i16, %struct.atomic_t, i32, i64, %struct.lwtunnel_state*, %struct.callback_head, i16, i16, i32 }
%struct.lwtunnel_state = type opaque
%struct.refcount_struct = type { %struct.atomic_t }
%union.anon.96 = type { %struct.sk_buff* }
%struct.sk_buff = type { %union.anon.46, %union.anon.49, %union.anon.50, [48 x i8], %union.anon.51, i32, i32, i16, i16, i16, [0 x i8], i8, [0 x i32], [0 x i8], i16, [0 x i8], i16, %union.anon.53, i32, i32, i32, i16, i16, %union.anon.55, %union.anon.56, %union.anon.57, i16, i16, i16, i16, i16, i16, i16, [0 x i32], i32, i32, i8*, i8*, i32, %struct.refcount_struct }
%union.anon.46 = type { %struct.anon.47 }
%struct.anon.47 = type { %struct.sk_buff*, %struct.sk_buff*, %union.anon.48 }
%union.anon.48 = type { %struct.net_device* }
%union.anon.49 = type { %struct.sock* }
%union.anon.50 = type { i64 }
%union.anon.51 = type { %struct.anon.52 }
%struct.anon.52 = type { i64, void (%struct.sk_buff*)* }
%union.anon.53 = type { i32 }
%union.anon.55 = type { i32 }
%union.anon.56 = type { i32 }
%union.anon.57 = type { i16 }
%struct.sk_buff_head = type { %struct.sk_buff*, %struct.sk_buff*, i32, %struct.spinlock }
%struct.timer_list = type { %struct.hlist_node, i64, void (%struct.timer_list*)*, i32 }
%struct.page_frag = type { %struct.page*, i32, i32 }
%struct.proto = type { void (%struct.sock*, i64)*, i32 (%struct.sock*, %struct.sockaddr*, i32)*, i32 (%struct.sock*, %struct.sockaddr*, i32)*, i32 (%struct.sock*, i32)*, %struct.sock* (%struct.sock*, i32, i32*, i1)*, i32 (%struct.sock*, i32, i64)*, i32 (%struct.sock*)*, void (%struct.sock*)*, void (%struct.sock*, i32)*, i32 (%struct.sock*, i32, i32, i8*, i8, i32)*, i32 (%struct.sock*, i32, i32, i8*, i32*)*, void (%struct.sock*, i32)*, i32 (%struct.sock*, %struct.msghdr*, i64)*, i32 (%struct.sock*, %struct.msghdr*, i64, i32, i32, i32*)*, i32 (%struct.sock*, %struct.page*, i32, i64, i32)*, i32 (%struct.sock*, %struct.sockaddr*, i32)*, i32 (%struct.sock*, %struct.sockaddr*, i32)*, i32 (%struct.sock*, %struct.sk_buff*)*, void (%struct.sock*)*, i32 (%struct.sock*)*, void (%struct.sock*)*, void (%struct.sock*)*, i32 (%struct.sock*, i16)*, i32, i1 (%struct.sock*, i32)*, i1 (%struct.sock*)*, void (%struct.sock*)*, void (%struct.sock*)*, %struct.atomic64_t*, %struct.percpu_counter*, i64*, i64*, i32*, i32*, i32, i32, i32, i8, %struct.kmem_cache*, i32, i32, i32, i32, %struct.percpu_counter*, %struct.request_sock_ops*, %struct.timewait_sock_ops*, %union.anon.58, %struct.module*, [32 x i8], %struct.list_head, i32 (%struct.sock*, i32)* }
%struct.msghdr = type { i8*, i32, %struct.iov_iter, %union.anon.45, i8, i64, i32, %struct.kiocb* }
%union.anon.45 = type { i8* }
%struct.sockaddr = type { i16, [14 x i8] }
%struct.request_sock_ops = type { i32, i32, %struct.kmem_cache*, i8*, i32 (%struct.sock*, %struct.request_sock*)*, void (%struct.sock*, %struct.sk_buff*, %struct.request_sock*)*, void (%struct.sock*, %struct.sk_buff*)*, void (%struct.request_sock*)*, void (%struct.request_sock*)* }
%struct.request_sock = type { %struct.sock_common, %struct.request_sock*, i16, i8, i8, i32, %struct.timer_list, %struct.request_sock_ops*, %struct.sock*, %struct.saved_syn*, i32, i32 }
%struct.saved_syn = type { i32, i32, i32, [0 x i8] }
%struct.timewait_sock_ops = type { %struct.kmem_cache*, i8*, i32, i32 (%struct.sock*, %struct.sock*, i8*)*, void (%struct.sock*)* }
%union.anon.58 = type { %struct.inet_hashinfo* }
%struct.rwlock_t = type { %struct.arch_rwlock_t }
%struct.arch_rwlock_t = type {}
%struct.kuid_t = type { i32 }
%struct.pid = type { %struct.refcount_struct, i32, %struct.spinlock, [4 x %struct.hlist_head], %struct.hlist_head, %struct.wait_queue_head, %struct.callback_head, [1 x %struct.upid] }
%struct.upid = type { i32, %struct.pid_namespace* }
%struct.cred = type { %struct.atomic_t, %struct.kuid_t, %struct.kgid_t, %struct.kuid_t, %struct.kgid_t, %struct.kuid_t, %struct.kgid_t, %struct.kuid_t, %struct.kgid_t, i32, %struct.kernel_cap_struct, %struct.kernel_cap_struct, %struct.kernel_cap_struct, %struct.kernel_cap_struct, %struct.kernel_cap_struct, i8, %struct.key*, %struct.key*, %struct.key*, %struct.key*, %struct.user_struct*, %struct.user_namespace*, %struct.group_info*, %union.anon.37 }
%struct.kernel_cap_struct = type { [2 x i32] }
%struct.group_info = type { %struct.atomic_t, i32, [0 x %struct.kgid_t] }
%union.anon.37 = type { %struct.callback_head }
%struct.atomic_t = type { i32 }
%struct.socket = type { i32, i16, i64, %struct.file*, %struct.sock*, %struct.proto_ops*, %struct.socket_wq }
%struct.proto_ops = type { i32, i32, %struct.module*, i32 (%struct.socket*)*, i32 (%struct.socket*, %struct.sockaddr*, i32)*, i32 (%struct.socket*, %struct.sockaddr*, i32, i32)*, i32 (%struct.socket*, %struct.socket*)*, i32 (%struct.socket*, %struct.socket*, i32, i1)*, i32 (%struct.socket*, %struct.sockaddr*, i32)*, i32 (%struct.file*, %struct.socket*, %struct.poll_table_struct*)*, i32 (%struct.socket*, i32, i64)*, i32 (%struct.socket*, i8*, i1, i1)*, i32 (%struct.socket*, i32)*, i32 (%struct.socket*, i32)*, i32 (%struct.socket*, i32, i32, i8*, i8, i32)*, i32 (%struct.socket*, i32, i32, i8*, i32*)*, void (%struct.seq_file*, %struct.socket*)*, i32 (%struct.socket*, %struct.msghdr*, i64)*, i32 (%struct.socket*, %struct.msghdr*, i64, i32)*, i32 (%struct.file*, %struct.socket*, %struct.vm_area_struct*)*, i64 (%struct.socket*, %struct.page*, i32, i64, i32)*, i64 (%struct.socket*, i64*, %struct.pipe_inode_info*, i64, i32)*, i32 (%struct.sock*, i32)*, i32 (%struct.socket*)*, i32 (%struct.sock*, %struct.read_descriptor_t*, i32 (%struct.read_descriptor_t*, %struct.sk_buff*, i32, i64)*)*, i32 (%struct.sock*, %struct.page*, i32, i64, i32)*, i32 (%struct.sock*, %struct.msghdr*, i64)*, i32 (%struct.sock*, i32)* }
%struct.read_descriptor_t = type { i64, i64, %union.anon.97, i32 }
%union.anon.97 = type { i8* }
%struct.sock_cgroup_data = type {}
%struct.mem_cgroup = type opaque
%struct.sock_reuseport = type opaque
%struct.callback_head = type { %struct.callback_head*, void (%struct.callback_head*)* }
%struct.kernfs_node = type { %struct.atomic_t, %struct.atomic_t, %struct.kernfs_node*, i8*, %struct.rb_node, i8*, i32, %union.anon.134, i8*, i64, i16, i16, %struct.kernfs_iattrs* }
%union.anon.134 = type { %struct.kernfs_elem_attr }
%struct.kernfs_elem_attr = type { %struct.kernfs_ops*, %struct.kernfs_open_node*, i64, %struct.kernfs_node* }
%struct.kernfs_ops = type { i32 (%struct.kernfs_open_file*)*, void (%struct.kernfs_open_file*)*, i32 (%struct.seq_file*, i8*)*, i8* (%struct.seq_file*, i64*)*, i8* (%struct.seq_file*, i8*, i64*)*, void (%struct.seq_file*, i8*)*, i64 (%struct.kernfs_open_file*, i8*, i64, i64)*, i64, i8, i64 (%struct.kernfs_open_file*, i8*, i64, i64)*, i32 (%struct.kernfs_open_file*, %struct.poll_table_struct*)*, i32 (%struct.kernfs_open_file*, %struct.vm_area_struct*)* }
%struct.kernfs_open_file = type { %struct.kernfs_node*, %struct.file*, %struct.seq_file*, i8*, %struct.mutex, %struct.mutex, i32, %struct.list_head, i8*, i64, i8, %struct.vm_operations_struct* }
%struct.kernfs_open_node = type opaque
%struct.kernfs_iattrs = type opaque
%struct.kref = type { %struct.refcount_struct }
%struct.device_private = type opaque
%struct.device_type = type { i8*, %struct.attribute_group**, i32 (%struct.device*, %struct.kobj_uevent_env*)*, i8* (%struct.device*, i16*, %struct.kuid_t*, %struct.kgid_t*)*, void (%struct.device*)*, %struct.dev_pm_ops* }
%struct.dev_pm_ops = type { i32 (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)* }
%struct.bus_type = type { i8*, i8*, %struct.device*, %struct.attribute_group**, %struct.attribute_group**, %struct.attribute_group**, i32 (%struct.device*, %struct.device_driver*)*, i32 (%struct.device*, %struct.kobj_uevent_env*)*, i32 (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*, i32)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, %struct.dev_pm_ops*, %struct.iommu_ops*, %struct.subsys_private*, %struct.lock_class_key, i8 }
%struct.iommu_ops = type opaque
%struct.subsys_private = type opaque
%struct.mutex = type { %struct.atomic64_t, %struct.spinlock, %struct.list_head }
%struct.dev_links_info = type { %struct.list_head, %struct.list_head, %struct.list_head, %struct.list_head, i8, i32 }
%struct.dev_pm_info = type { %struct.pm_message, i16, i32, %struct.spinlock, %struct.list_head, %struct.completion, %struct.wakeup_source*, i8, %struct.hrtimer, i64, %struct.work_struct, %struct.wait_queue_head, %struct.wake_irq*, %struct.atomic_t, %struct.atomic_t, i16, i32, i32, i32, i32, i32, i64, i64, i64, i64, %struct.pm_subsys_data*, void (%struct.device*, i32)*, %struct.dev_pm_qos* }
%struct.pm_message = type { i32 }
%struct.wakeup_source = type { i8*, i32, %struct.list_head, %struct.spinlock, %struct.wake_irq*, %struct.timer_list, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, %struct.device*, i8 }
%struct.wake_irq = type opaque
%struct.pm_subsys_data = type { %struct.spinlock, i32, %struct.list_head, %struct.pm_domain_data* }
%struct.pm_domain_data = type opaque
%struct.dev_pm_qos = type opaque
%struct.dev_pm_domain = type { %struct.dev_pm_ops, i32 (%struct.device*)*, void (%struct.device*, i1)*, i32 (%struct.device*)*, void (%struct.device*)*, void (%struct.device*)* }
%struct.irq_domain = type { %struct.list_head, i8*, %struct.irq_domain_ops*, i8*, i32, i32, %struct.fwnode_handle*, i32, %struct.irq_domain_chip_generic*, %struct.irq_domain*, i64, i32, i32, %struct.xarray, %struct.mutex, [0 x i32] }
%struct.irq_domain_ops = type { i32 (%struct.irq_domain*, %struct.device_node*, i32)*, i32 (%struct.irq_domain*, %struct.irq_fwspec*, i32)*, i32 (%struct.irq_domain*, i32, i64)*, void (%struct.irq_domain*, i32)*, i32 (%struct.irq_domain*, %struct.device_node*, i32*, i32, i64*, i32*)*, i32 (%struct.irq_domain*, i32, i32, i8*)*, void (%struct.irq_domain*, i32, i32)*, i32 (%struct.irq_domain*, %struct.irq_data*, i1)*, void (%struct.irq_domain*, %struct.irq_data*)*, i32 (%struct.irq_domain*, %struct.irq_fwspec*, i64*, i32*)* }
%struct.irq_fwspec = type { %struct.fwnode_handle*, i32, [16 x i32] }
%struct.irq_data = type { i32, i32, i64, %struct.irq_common_data*, %struct.irq_chip*, %struct.irq_domain*, %struct.irq_data*, i8* }
%struct.irq_common_data = type { i32, i8*, %struct.msi_desc*, [1 x %struct.cpumask] }
%struct.msi_desc = type opaque
%struct.irq_chip = type { %struct.device*, i8*, i32 (%struct.irq_data*)*, void (%struct.irq_data*)*, void (%struct.irq_data*)*, void (%struct.irq_data*)*, void (%struct.irq_data*)*, void (%struct.irq_data*)*, void (%struct.irq_data*)*, void (%struct.irq_data*)*, void (%struct.irq_data*)*, i32 (%struct.irq_data*, %struct.cpumask*, i1)*, i32 (%struct.irq_data*)*, i32 (%struct.irq_data*, i32)*, i32 (%struct.irq_data*, i32)*, void (%struct.irq_data*)*, void (%struct.irq_data*)*, void (%struct.irq_data*)*, void (%struct.irq_data*)*, void (%struct.irq_data*)*, void (%struct.irq_data*)*, void (%struct.irq_data*)*, void (%struct.irq_data*)*, void (%struct.irq_data*, %struct.seq_file*)*, i32 (%struct.irq_data*)*, void (%struct.irq_data*)*, void (%struct.irq_data*, %struct.msi_msg*)*, void (%struct.irq_data*, %struct.msi_msg*)*, i32 (%struct.irq_data*, i32, i8*)*, i32 (%struct.irq_data*, i32, i1)*, i32 (%struct.irq_data*, i8*)*, void (%struct.irq_data*, i32)*, void (%struct.irq_data*, %struct.cpumask*)*, i32 (%struct.irq_data*)*, void (%struct.irq_data*)*, i64 }
%struct.msi_msg = type opaque
%struct.irq_domain_chip_generic = type { i32, i32, i32, i32, i32, [0 x %struct.irq_chip_generic*] }
%struct.irq_chip_generic = type { %struct.raw_spinlock, i8*, i32 (i8*)*, void (i32, i8*)*, void (%struct.irq_chip_generic*)*, void (%struct.irq_chip_generic*)*, i32, i32, i32, i32, i32, i32, i32, i32, i8*, i64, i64, %struct.irq_domain*, %struct.list_head, [0 x %struct.irq_chip_type] }
%struct.irq_chip_type = type { %struct.irq_chip, %struct.irq_chip_regs, void (%struct.irq_desc*)*, i32, i32, i32* }
%struct.irq_chip_regs = type { i64, i64, i64, i64, i64, i64, i64 }
%struct.irq_desc = type { %struct.irq_common_data, %struct.irq_data, i32*, {}*, %struct.irqaction*, i32, i32, i32, i32, i32, i32, i64, i32, %struct.atomic_t, i32, %struct.raw_spinlock, %struct.cpumask*, %struct.cpumask*, i64, %struct.atomic_t, %struct.wait_queue_head, i32, i32, i32, i32, %struct.proc_dir_entry*, %struct.callback_head, %struct.kobject, %struct.mutex, i32, %struct.module*, i8* }
%struct.irqaction = type { i32 (i32, i8*)*, i8*, i8*, %struct.irqaction*, i32 (i32, i8*)*, %struct.task_struct*, %struct.irqaction*, i32, i32, i64, i64, i8*, %struct.proc_dir_entry* }
%struct.dma_map_ops = type opaque
%struct.bus_dma_region = type opaque
%struct.dev_archdata = type {}
%struct.device_node = type { i8*, i32, i8*, %struct.fwnode_handle, %struct.property*, %struct.property*, %struct.device_node*, %struct.device_node*, %struct.device_node*, %struct.kobject, i64, i8* }
%struct.fwnode_handle = type { %struct.fwnode_handle*, %struct.fwnode_operations*, %struct.device* }
%struct.fwnode_operations = type { %struct.fwnode_handle* (%struct.fwnode_handle*)*, void (%struct.fwnode_handle*)*, i1 (%struct.fwnode_handle*)*, i8* (%struct.fwnode_handle*, %struct.device*)*, i1 (%struct.fwnode_handle*, i8*)*, i32 (%struct.fwnode_handle*, i8*, i32, i8*, i64)*, i32 (%struct.fwnode_handle*, i8*, i8**, i64)*, i8* (%struct.fwnode_handle*)*, i8* (%struct.fwnode_handle*)*, %struct.fwnode_handle* (%struct.fwnode_handle*)*, %struct.fwnode_handle* (%struct.fwnode_handle*, %struct.fwnode_handle*)*, %struct.fwnode_handle* (%struct.fwnode_handle*, i8*)*, i32 (%struct.fwnode_handle*, i8*, i8*, i32, i32, %struct.fwnode_reference_args*)*, %struct.fwnode_handle* (%struct.fwnode_handle*, %struct.fwnode_handle*)*, %struct.fwnode_handle* (%struct.fwnode_handle*)*, %struct.fwnode_handle* (%struct.fwnode_handle*)*, i32 (%struct.fwnode_handle*, %struct.fwnode_endpoint*)*, i32 (%struct.fwnode_handle*, %struct.device*)* }
%struct.fwnode_reference_args = type { %struct.fwnode_handle*, i32, [8 x i64] }
%struct.fwnode_endpoint = type { i32, i32, %struct.fwnode_handle* }
%struct.property = type { i8*, i32, i8*, %struct.property*, %struct.bin_attribute }
%struct.spinlock = type { %union.anon.1 }
%union.anon.1 = type { %struct.raw_spinlock }
%struct.list_head = type { %struct.list_head*, %struct.list_head* }
%struct.class = type { i8*, %struct.module*, %struct.attribute_group**, %struct.attribute_group**, %struct.kobject*, i32 (%struct.device*, %struct.kobj_uevent_env*)*, i8* (%struct.device*, i16*)*, void (%struct.class*)*, void (%struct.device*)*, i32 (%struct.device*)*, %struct.kobj_ns_type_operations*, i8* (%struct.device*)*, void (%struct.device*, %struct.kuid_t*, %struct.kgid_t*)*, %struct.dev_pm_ops*, %struct.subsys_private* }
%struct.iommu_group = type opaque
%struct.dev_iommu = type opaque
%struct.device_dma_parameters = type { i32, i64 }
%struct.resource = type { i64, i64, i8*, i64, i64, %struct.resource*, %struct.resource*, %struct.resource* }
%struct.mfd_cell = type opaque
%struct.pdev_archdata = type {}
%struct.device_driver = type { i8*, %struct.bus_type*, %struct.module*, i8*, i8, i32, %struct.of_device_id*, %struct.acpi_device_id*, i32 (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*, i32)*, i32 (%struct.device*)*, %struct.attribute_group**, %struct.attribute_group**, %struct.dev_pm_ops*, void (%struct.device*)*, %struct.driver_private* }
%struct.of_device_id = type { [32 x i8], [32 x i8], [128 x i8], i8* }
%struct.acpi_device_id = type { [9 x i8], i64, i32, i32 }
%struct.driver_private = type opaque
%struct.platform_device_id = type { [20 x i8], i64 }
%struct.macb_config = type { i32, i32, i32 (%struct.platform_device*, %struct.clk**, %struct.clk**, %struct.clk**, %struct.clk**, %struct.clk**)*, i32 (%struct.platform_device*)*, i32 }
%struct.clk = type opaque
%struct.paravirt_patch_template = type { %struct.pv_init_ops, %struct.pv_time_ops, %struct.pv_cpu_ops, %struct.pv_irq_ops, %struct.pv_mmu_ops, %struct.pv_lock_ops }
%struct.pv_init_ops = type { i32 (i8, i8*, i64, i32)* }
%struct.pv_time_ops = type { i64 ()*, i64 (i32)* }
%struct.pv_cpu_ops = type { void ()*, i64 (i32)*, void (i32, i64)*, i64 ()*, void (i64)*, void (i64)*, void ()*, void (%struct.desc_ptr*)*, void (%struct.desc_ptr*)*, void (i8*, i32)*, i64 ()*, void (%struct.thread_struct*, i32)*, void (i32)*, void (%struct.desc_struct*, i32, i8*)*, void (%struct.desc_struct*, i32, i8*, i32)*, void (%struct.gate_struct*, i32, %struct.gate_struct*)*, void (%struct.desc_struct*, i32)*, void (%struct.desc_struct*, i32)*, void (i64)*, void ()*, void ()*, void ()*, void (i32*, i32*, i32*, i32*)*, i64 (i32)*, void (i32, i32, i32)*, i64 (i32, i32*)*, i32 (i32, i32, i32)*, i64 (i32)*, void ()*, void ()*, void ()*, void (%struct.task_struct*)*, void (%struct.task_struct*)* }
%struct.desc_ptr = type <{ i16, i64 }>
%struct.gate_struct = type { i16, i16, %struct.idt_bits, i16, i32, i32 }
%struct.idt_bits = type { i16 }
%struct.pv_irq_ops = type { %struct.paravirt_callee_save, %struct.paravirt_callee_save, %struct.paravirt_callee_save, %struct.paravirt_callee_save, void ()*, void ()* }
%struct.paravirt_callee_save = type { i8* }
%struct.pv_mmu_ops = type { void ()*, void ()*, void (i64)*, void (%struct.cpumask*, %struct.flush_tlb_info*)*, void (%struct.mmu_gather*, i8*)*, void (%struct.mm_struct*)*, %struct.paravirt_callee_save, void (i64)*, i64 ()*, void (i64)*, void (%struct.mm_struct*, %struct.mm_struct*)*, void (%struct.mm_struct*, %struct.mm_struct*)*, i32 (%struct.mm_struct*)*, void (%struct.mm_struct*, %struct.pgd_t*)*, void (%struct.mm_struct*, i64)*, void (%struct.mm_struct*, i64)*, void (%struct.mm_struct*, i64)*, void (%struct.mm_struct*, i64)*, void (i64)*, void (i64)*, void (i64)*, void (i64)*, void (%struct.pte_t*, i64)*, void (%struct.pmd_t*, i64)*, i64 (%struct.vm_area_struct*, i64, %struct.pte_t*)*, void (%struct.vm_area_struct*, i64, %struct.pte_t*, i64)*, %struct.paravirt_callee_save, %struct.paravirt_callee_save, %struct.paravirt_callee_save, %struct.paravirt_callee_save, void (%struct.pud_t*, i64)*, %struct.paravirt_callee_save, %struct.paravirt_callee_save, %struct.paravirt_callee_save, %struct.paravirt_callee_save, void (%struct.p4d_t*, i64)*, %struct.paravirt_callee_save, %struct.paravirt_callee_save, void (%struct.pgd_t*, i64)*, %struct.pv_lazy_ops, void (i32, i64, i64)* }
%struct.flush_tlb_info = type opaque
%struct.mmu_gather = type opaque
%struct.p4d_t = type { i64 }
%struct.pv_lazy_ops = type { void ()*, void ()*, void ()* }
%struct.pv_lock_ops = type { void (%struct.qspinlock*, i32)*, %struct.paravirt_callee_save, void (i8*, i8)*, void (i32)*, %struct.paravirt_callee_save }
%struct.qspinlock = type opaque
%struct.gem_statistic = type { [32 x i8], i32, i32 }
%struct.macb_ptp_info = type { void (%struct.net_device*)*, void (%struct.net_device*)*, i32 ()*, i32 (%struct.macb*)*, i32 (%struct.net_device*, %struct.ethtool_ts_info*)*, i32 (%struct.net_device*, %struct.ifreq*)*, i32 (%struct.net_device*, %struct.ifreq*, i32)* }
%struct.macb = type { i8*, i8, i32 (%struct.macb*, i32)*, void (%struct.macb*, i32, i32)*, i64, i32, i32, i32, i32, [8 x %struct.macb_queue], %struct.spinlock, %struct.platform_device*, %struct.clk*, %struct.clk*, %struct.clk*, %struct.clk*, %struct.clk*, %struct.net_device*, %union.anon.162, %struct.macb_or_gem_ops, %struct.mii_bus*, %struct.phylink*, %struct.phylink_config, i32, i32, i32, [2 x %struct.macb_tx_skb], i32, i32, i32, [91 x i64], i32, i32, i32, %struct.macb_ptp_info*, i8, %struct.spinlock, i32, %struct.ptp_clock*, %struct.ptp_clock_info, %struct.tsu_incr, %struct.hwtstamp_config, %struct.ethtool_rx_fs_list, %struct.spinlock, i32, %struct.tasklet_struct, i32, i32, i32, %struct.macb_pm_data }
%struct.macb_queue = type { %struct.macb*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, %struct.macb_dma_desc*, %struct.macb_tx_skb*, i64, %struct.work_struct, i64, i64, i32, i32, %struct.macb_dma_desc*, %struct.sk_buff**, i8*, %struct.napi_struct, %struct.queue_stats, %struct.work_struct, i32, i32, [128 x %struct.gem_tx_ts] }
%struct.macb_tx_skb = type { %struct.sk_buff*, i64, i64, i8 }
%struct.macb_dma_desc = type { i32, i32 }
%struct.napi_struct = type { %struct.list_head, i64, i32, i32, i64, i32 (%struct.napi_struct*, i32)*, %struct.net_device*, [8 x %struct.gro_list], %struct.sk_buff*, %struct.list_head, i32, %struct.hrtimer, %struct.list_head, %struct.hlist_node, i32 }
%struct.gro_list = type { %struct.list_head, i32 }
%struct.queue_stats = type { %union.anon.161, i64, i64, i64, i64, i64 }
%union.anon.161 = type { i64 }
%struct.gem_tx_ts = type { %struct.sk_buff*, %struct.macb_dma_desc_ptp }
%struct.macb_dma_desc_ptp = type { i32, i32 }
%union.anon.162 = type { %struct.gem_stats }
%struct.gem_stats = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.macb_or_gem_ops = type { i32 (%struct.macb*)*, void (%struct.macb*)*, void (%struct.macb*)*, i32 (%struct.macb_queue*, %struct.napi_struct*, i32)* }
%struct.phylink_config = type { %struct.device*, i32, i8, i8, void (%struct.phylink_config*, %struct.phylink_link_state*)* }
%struct.phylink_link_state = type { [2 x i64], [2 x i64], i32, i32, i32, i32, i8 }
%struct.ptp_clock = type opaque
%struct.ptp_clock_info = type { %struct.module*, [16 x i8], i32, i32, i32, i32, i32, i32, %struct.ptp_pin_desc*, i32 (%struct.ptp_clock_info*, i64)*, i32 (%struct.ptp_clock_info*, i32)*, i32 (%struct.ptp_clock_info*, i32)*, i32 (%struct.ptp_clock_info*, i64)*, i32 (%struct.ptp_clock_info*, %struct.timespec64*)*, i32 (%struct.ptp_clock_info*, %struct.timespec64*, %struct.ptp_system_timestamp*)*, i32 (%struct.ptp_clock_info*, %struct.system_device_crosststamp*)*, i32 (%struct.ptp_clock_info*, %struct.timespec64*)*, i32 (%struct.ptp_clock_info*, %struct.ptp_clock_request*, i32)*, i32 (%struct.ptp_clock_info*, i32, i32, i32)*, i64 (%struct.ptp_clock_info*)* }
%struct.ptp_pin_desc = type { [64 x i8], i32, i32, i32, [5 x i32] }
%struct.ptp_system_timestamp = type { %struct.timespec64, %struct.timespec64 }
%struct.system_device_crosststamp = type { i64, i64, i64 }
%struct.ptp_clock_request = type { i32, %union.anon.163 }
%union.anon.163 = type { %struct.ptp_perout_request }
%struct.ptp_perout_request = type { %union.anon.164, %struct.ptp_clock_time, i32, i32, %union.anon.165 }
%union.anon.164 = type { %struct.ptp_clock_time }
%struct.ptp_clock_time = type { i64, i32, i32 }
%union.anon.165 = type { %struct.ptp_clock_time }
%struct.tsu_incr = type { i32, i32 }
%struct.hwtstamp_config = type { i32, i32, i32 }
%struct.ethtool_rx_fs_list = type { %struct.list_head, i32 }
%struct.tasklet_struct = type { %struct.tasklet_struct*, i64, %struct.atomic_t, i8, %union.anon.166, i64 }
%union.anon.166 = type { void (i64)* }
%struct.macb_pm_data = type { i32, i32 }
%struct.phylink_mac_ops = type { void (%struct.phylink_config*, i64*, %struct.phylink_link_state*)*, void (%struct.phylink_config*, %struct.phylink_link_state*)*, i32 (%struct.phylink_config*, i32, i32)*, void (%struct.phylink_config*, i32, %struct.phylink_link_state*)*, i32 (%struct.phylink_config*, i32, i32)*, void (%struct.phylink_config*)*, void (%struct.phylink_config*, i32, i32)*, void (%struct.phylink_config*, %struct.phy_device*, i32, i32, i32, i32, i1, i1)* }
%struct.sifive_fu540_macb_mgmt = type { i8*, i64, %struct.clk_hw }
%struct.clk_hw = type { %struct.clk_core*, %struct.clk*, %struct.clk_init_data* }
%struct.clk_core = type opaque
%struct.clk_init_data = type { i8*, %struct.clk_ops*, i8**, %struct.clk_parent_data*, %struct.clk_hw**, i8, i64 }
%struct.clk_ops = type { i32 (%struct.clk_hw*)*, void (%struct.clk_hw*)*, i32 (%struct.clk_hw*)*, void (%struct.clk_hw*)*, i32 (%struct.clk_hw*)*, void (%struct.clk_hw*)*, i32 (%struct.clk_hw*)*, void (%struct.clk_hw*)*, i32 (%struct.clk_hw*)*, void (%struct.clk_hw*)*, i64 (%struct.clk_hw*, i64)*, i64 (%struct.clk_hw*, i64, i64*)*, i32 (%struct.clk_hw*, %struct.clk_rate_request*)*, i32 (%struct.clk_hw*, i8)*, i8 (%struct.clk_hw*)*, i32 (%struct.clk_hw*, i64, i64)*, i32 (%struct.clk_hw*, i64, i64, i8)*, i64 (%struct.clk_hw*, i64)*, i32 (%struct.clk_hw*)*, i32 (%struct.clk_hw*, i32)*, i32 (%struct.clk_hw*, %struct.clk_duty*)*, i32 (%struct.clk_hw*, %struct.clk_duty*)*, i32 (%struct.clk_hw*)*, void (%struct.clk_hw*)*, void (%struct.clk_hw*, %struct.dentry*)* }
%struct.clk_rate_request = type { i64, i64, i64, i64, %struct.clk_hw* }
%struct.clk_duty = type { i32, i32 }
%struct.clk_parent_data = type { %struct.clk_hw*, i8*, i8*, i32 }
%struct.macb_platform_data = type { %struct.clk*, %struct.clk* }
%struct.macb_stats = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.skb_shared_info = type { i8, i8, i8, i8, i16, i16, %struct.sk_buff*, %struct.skb_shared_hwtstamps, i32, i32, %struct.atomic_t, i8*, [17 x %struct.bio_vec] }
%struct.skb_shared_hwtstamps = type { i64 }
%struct.macb_dma_desc_64 = type { i32, i32 }
%struct.iphdr = type { i8, i8, i16, i16, i16, i8, i8, i16, i32, i32 }
%struct.anon.54 = type { i16, i16 }
%struct.tcphdr = type { i16, i16, i32, i32, i16, i16, i16, i16 }
%struct.netdev_hw_addr = type { %struct.list_head, [32 x i8], i8, i8, i32, i32, i32, %struct.callback_head }
%struct.ethtool_rx_fs_item = type { %struct.ethtool_rx_flow_spec, %struct.list_head }
%struct.ethtool_tcpip4_spec = type { i32, i32, i16, i16, i8 }

@__UNIQUE_ID___addressable_macb_driver_init564 = internal global i8* bitcast (i32 ()* @macb_driver_init to i8*), section ".discard.addressable", align 8, !dbg !0
@macb_driver = internal global %struct.platform_driver { i32 (%struct.platform_device*)* @macb_probe, i32 (%struct.platform_device*)* @macb_remove, void (%struct.platform_device*)* null, i32 (%struct.platform_device*, i32)* null, i32 (%struct.platform_device*)* null, %struct.device_driver { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0), %struct.bus_type* null, %struct.module* null, i8* null, i8 0, i32 0, %struct.of_device_id* getelementptr inbounds ([17 x %struct.of_device_id], [17 x %struct.of_device_id]* @macb_dt_ids, i32 0, i32 0), %struct.acpi_device_id* null, i32 (%struct.device*)* null, void (%struct.device*)* null, i32 (%struct.device*)* null, void (%struct.device*)* null, i32 (%struct.device*, i32)* null, i32 (%struct.device*)* null, %struct.attribute_group** null, %struct.attribute_group** null, %struct.dev_pm_ops* @macb_pm_ops, void (%struct.device*)* null, %struct.driver_private* null }, %struct.platform_device_id* null, i8 0 }, align 8, !dbg !10807
@__exitcall_macb_driver_exit = internal global void ()* @macb_driver_exit, section ".exitcall.exit", align 8, !dbg !10781
@__UNIQUE_ID_file565 = internal constant [44 x i8] c"macb.file=drivers/net/ethernet/cadence/macb\00", section ".modinfo", align 1, !dbg !10786
@__UNIQUE_ID_license566 = internal constant [17 x i8] c"macb.license=GPL\00", section ".modinfo", align 1, !dbg !10789
@__UNIQUE_ID_description567 = internal constant [50 x i8] c"macb.description=Cadence MACB/GEM Ethernet driver\00", section ".modinfo", align 1, !dbg !10792
@__UNIQUE_ID_author568 = internal constant [39 x i8] c"macb.author=Haavard Skinnemoen (Atmel)\00", section ".modinfo", align 1, !dbg !10797
@__UNIQUE_ID_alias569 = internal constant [25 x i8] c"macb.alias=platform:macb\00", section ".modinfo", align 1, !dbg !10802
@.str = private unnamed_addr constant [5 x i8] c"macb\00", align 1
@macb_dt_ids = internal constant [17 x %struct.of_device_id] [%struct.of_device_id { [32 x i8] zeroinitializer, [32 x i8] zeroinitializer, [128 x i8] c"cdns,at32ap7000-macb\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i8* null }, %struct.of_device_id { [32 x i8] zeroinitializer, [32 x i8] zeroinitializer, [128 x i8] c"cdns,at91sam9260-macb\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i8* bitcast (%struct.macb_config* @at91sam9260_config to i8*) }, %struct.of_device_id { [32 x i8] zeroinitializer, [32 x i8] zeroinitializer, [128 x i8] c"cdns,macb\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i8* null }, %struct.of_device_id { [32 x i8] zeroinitializer, [32 x i8] zeroinitializer, [128 x i8] c"cdns,np4-macb\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i8* bitcast (%struct.macb_config* @np4_config to i8*) }, %struct.of_device_id { [32 x i8] zeroinitializer, [32 x i8] zeroinitializer, [128 x i8] c"cdns,pc302-gem\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i8* bitcast (%struct.macb_config* @pc302gem_config to i8*) }, %struct.of_device_id { [32 x i8] zeroinitializer, [32 x i8] zeroinitializer, [128 x i8] c"cdns,gem\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i8* bitcast (%struct.macb_config* @pc302gem_config to i8*) }, %struct.of_device_id { [32 x i8] zeroinitializer, [32 x i8] zeroinitializer, [128 x i8] c"cdns,sam9x60-macb\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i8* bitcast (%struct.macb_config* @at91sam9260_config to i8*) }, %struct.of_device_id { [32 x i8] zeroinitializer, [32 x i8] zeroinitializer, [128 x i8] c"atmel,sama5d2-gem\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i8* bitcast (%struct.macb_config* @sama5d2_config to i8*) }, %struct.of_device_id { [32 x i8] zeroinitializer, [32 x i8] zeroinitializer, [128 x i8] c"atmel,sama5d3-gem\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i8* bitcast (%struct.macb_config* @sama5d3_config to i8*) }, %struct.of_device_id { [32 x i8] zeroinitializer, [32 x i8] zeroinitializer, [128 x i8] c"atmel,sama5d3-macb\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i8* bitcast (%struct.macb_config* @sama5d3macb_config to i8*) }, %struct.of_device_id { [32 x i8] zeroinitializer, [32 x i8] zeroinitializer, [128 x i8] c"atmel,sama5d4-gem\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i8* bitcast (%struct.macb_config* @sama5d4_config to i8*) }, %struct.of_device_id { [32 x i8] zeroinitializer, [32 x i8] zeroinitializer, [128 x i8] c"cdns,at91rm9200-emac\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i8* bitcast (%struct.macb_config* @emac_config to i8*) }, %struct.of_device_id { [32 x i8] zeroinitializer, [32 x i8] zeroinitializer, [128 x i8] c"cdns,emac\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i8* bitcast (%struct.macb_config* @emac_config to i8*) }, %struct.of_device_id { [32 x i8] zeroinitializer, [32 x i8] zeroinitializer, [128 x i8] c"cdns,zynqmp-gem\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i8* bitcast (%struct.macb_config* @zynqmp_config to i8*) }, %struct.of_device_id { [32 x i8] zeroinitializer, [32 x i8] zeroinitializer, [128 x i8] c"cdns,zynq-gem\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i8* bitcast (%struct.macb_config* @zynq_config to i8*) }, %struct.of_device_id { [32 x i8] zeroinitializer, [32 x i8] zeroinitializer, [128 x i8] c"sifive,fu540-c000-gem\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i8* bitcast (%struct.macb_config* @fu540_c000_config to i8*) }, %struct.of_device_id zeroinitializer], align 16, !dbg !10903
@macb_pm_ops = internal constant %struct.dev_pm_ops { i32 (%struct.device*)* null, void (%struct.device*)* null, i32 (%struct.device*)* @macb_suspend, i32 (%struct.device*)* @macb_resume, i32 (%struct.device*)* @macb_suspend, i32 (%struct.device*)* @macb_resume, i32 (%struct.device*)* @macb_suspend, i32 (%struct.device*)* @macb_resume, i32 (%struct.device*)* null, i32 (%struct.device*)* null, i32 (%struct.device*)* null, i32 (%struct.device*)* null, i32 (%struct.device*)* null, i32 (%struct.device*)* null, i32 (%struct.device*)* null, i32 (%struct.device*)* null, i32 (%struct.device*)* null, i32 (%struct.device*)* null, i32 (%struct.device*)* null, i32 (%struct.device*)* null, i32 (%struct.device*)* @macb_runtime_suspend, i32 (%struct.device*)* @macb_runtime_resume, i32 (%struct.device*)* null }, align 8, !dbg !11050
@default_gem_config = internal constant %struct.macb_config { i32 536871008, i32 16, i32 (%struct.platform_device*, %struct.clk**, %struct.clk**, %struct.clk**, %struct.clk**, %struct.clk**)* @macb_clk_init, i32 (%struct.platform_device*)* @macb_init, i32 10240 }, align 8, !dbg !10828
@.str.1 = private unnamed_addr constant [13 x i8] c"magic-packet\00", align 1
@.str.2 = private unnamed_addr constant [39 x i8] c"Cannot register net device, aborting.\0A\00", align 1
@.str.3 = private unnamed_addr constant [47 x i8] c"Cadence %s rev 0x%08x at 0x%08lx irq %d (%pM)\0A\00", align 1
@.str.4 = private unnamed_addr constant [4 x i8] c"GEM\00", align 1
@.str.5 = private unnamed_addr constant [5 x i8] c"MACB\00", align 1
@.str.6 = private unnamed_addr constant [5 x i8] c"pclk\00", align 1
@.str.7 = private unnamed_addr constant [5 x i8] c"hclk\00", align 1
@.str.8 = private unnamed_addr constant [29 x i8] c"failed to get macb_clk (%d)\0A\00", align 1
@.str.9 = private unnamed_addr constant [25 x i8] c"failed to get hclk (%d)\0A\00", align 1
@.str.10 = private unnamed_addr constant [7 x i8] c"tx_clk\00", align 1
@.str.11 = private unnamed_addr constant [7 x i8] c"rx_clk\00", align 1
@.str.12 = private unnamed_addr constant [8 x i8] c"tsu_clk\00", align 1
@.str.13 = private unnamed_addr constant [28 x i8] c"failed to enable pclk (%d)\0A\00", align 1
@.str.14 = private unnamed_addr constant [28 x i8] c"failed to enable hclk (%d)\0A\00", align 1
@.str.15 = private unnamed_addr constant [30 x i8] c"failed to enable tx_clk (%d)\0A\00", align 1
@.str.16 = private unnamed_addr constant [30 x i8] c"failed to enable rx_clk (%d)\0A\00", align 1
@.str.17 = private unnamed_addr constant [31 x i8] c"failed to enable tsu_clk (%d)\0A\00", align 1
@.str.18 = private unnamed_addr constant [37 x i8] c"Unable to request IRQ %d (error %d)\0A\00", align 1
@macb_netdev_ops = internal constant %struct.net_device_ops { i32 (%struct.net_device*)* null, void (%struct.net_device*)* null, i32 (%struct.net_device*)* @macb_open, i32 (%struct.net_device*)* @macb_close, i32 (%struct.sk_buff*, %struct.net_device*)* @macb_start_xmit, i64 (%struct.sk_buff*, %struct.net_device*, i64)* @macb_features_check, i16 (%struct.net_device*, %struct.sk_buff*, %struct.net_device*)* null, void (%struct.net_device*, i32)* null, void (%struct.net_device*)* @macb_set_rx_mode, i32 (%struct.net_device*, i8*)* @eth_mac_addr, i32 (%struct.net_device*)* @eth_validate_addr, i32 (%struct.net_device*, %struct.ifreq*, i32)* @macb_ioctl, i32 (%struct.net_device*, %struct.ifmap*)* null, i32 (%struct.net_device*, i32)* @macb_change_mtu, i32 (%struct.net_device*, %struct.neigh_parms*)* null, void (%struct.net_device*, i32)* null, void (%struct.net_device*, %struct.rtnl_link_stats64*)* null, i1 (%struct.net_device*, i32)* null, i32 (i32, %struct.net_device*, i8*)* null, %struct.net_device_stats* (%struct.net_device*)* @macb_get_stats, i32 (%struct.net_device*, i16, i16)* null, i32 (%struct.net_device*, i16, i16)* null, i32 (%struct.net_device*, i32, i8*)* null, i32 (%struct.net_device*, i32, i16, i8, i16)* null, i32 (%struct.net_device*, i32, i32, i32)* null, i32 (%struct.net_device*, i32, i1)* null, i32 (%struct.net_device*, i32, i1)* null, i32 (%struct.net_device*, i32, %struct.ifla_vf_info*)* null, i32 (%struct.net_device*, i32, i32)* null, i32 (%struct.net_device*, i32, %struct.ifla_vf_stats*)* null, i32 (%struct.net_device*, i32, %struct.nlattr**)* null, i32 (%struct.net_device*, i32, %struct.sk_buff*)* null, i32 (%struct.net_device*, i32, %struct.ifla_vf_guid*, %struct.ifla_vf_guid*)* null, i32 (%struct.net_device*, i32, i64, i32)* null, i32 (%struct.net_device*, i32, i1)* null, i32 (%struct.net_device*, i32, i8*)* null, i32 (%struct.net_device*, %struct.net_device*, %struct.netlink_ext_ack*)* null, i32 (%struct.net_device*, %struct.net_device*)* null, %struct.net_device* (%struct.net_device*, %struct.sk_buff*, i1)* null, i64 (%struct.net_device*, i64)* null, i32 (%struct.net_device*, i64)* @macb_set_features, i32 (%struct.net_device*, %struct.neighbour*)* null, void (%struct.net_device*, %struct.neighbour*)* null, i32 (%struct.ndmsg*, %struct.nlattr**, %struct.net_device*, i8*, i16, i16, %struct.netlink_ext_ack*)* null, i32 (%struct.ndmsg*, %struct.nlattr**, %struct.net_device*, i8*, i16)* null, i32 (%struct.sk_buff*, %struct.netlink_callback*, %struct.net_device*, %struct.net_device*, i32*)* null, i32 (%struct.sk_buff*, %struct.nlattr**, %struct.net_device*, i8*, i16, i32, i32, %struct.netlink_ext_ack*)* null, i32 (%struct.net_device*, %struct.nlmsghdr*, i16, %struct.netlink_ext_ack*)* null, i32 (%struct.sk_buff*, i32, i32, %struct.net_device*, i32, i32)* null, i32 (%struct.net_device*, %struct.nlmsghdr*, i16)* null, i32 (%struct.net_device*, i1)* null, i32 (%struct.net_device*, %struct.netdev_phys_item_id*)* null, i32 (%struct.net_device*, %struct.netdev_phys_item_id*)* null, i32 (%struct.net_device*, i8*, i64)* null, void (%struct.net_device*, %struct.udp_tunnel_info*)* null, void (%struct.net_device*, %struct.udp_tunnel_info*)* null, i8* (%struct.net_device*, %struct.net_device*)* null, void (%struct.net_device*, i8*)* null, i32 (%struct.net_device*, i32, i32)* null, i32 (%struct.net_device*)* null, i32 (%struct.net_device*, i1)* null, i32 (%struct.net_device*, %struct.sk_buff*)* null, void (%struct.net_device*, i32)* null, i32 (%struct.net_device*, %struct.netdev_bpf*)* null, i32 (%struct.net_device*, i32, %struct.xdp_frame**, i32)* null, i32 (%struct.net_device*, i32, i32)* null, %struct.devlink_port* (%struct.net_device*)* null, i32 (%struct.net_device*, %struct.ip_tunnel_parm*, i32)* null, %struct.net_device* (%struct.net_device*)* null }, align 8, !dbg !10842
@gem_ethtool_ops = internal constant %struct.ethtool_ops { i32 0, void (%struct.net_device*, %struct.ethtool_drvinfo*)* null, i32 (%struct.net_device*)* @macb_get_regs_len, void (%struct.net_device*, %struct.ethtool_regs*, i8*)* @macb_get_regs, void (%struct.net_device*, %struct.ethtool_wolinfo*)* @macb_get_wol, i32 (%struct.net_device*, %struct.ethtool_wolinfo*)* @macb_set_wol, i32 (%struct.net_device*)* null, void (%struct.net_device*, i32)* null, i32 (%struct.net_device*)* null, i32 (%struct.net_device*)* @ethtool_op_get_link, i32 (%struct.net_device*, %struct.ethtool_link_ext_state_info*)* null, i32 (%struct.net_device*)* null, i32 (%struct.net_device*, %struct.ethtool_eeprom*, i8*)* null, i32 (%struct.net_device*, %struct.ethtool_eeprom*, i8*)* null, i32 (%struct.net_device*, %struct.ethtool_coalesce*)* null, i32 (%struct.net_device*, %struct.ethtool_coalesce*)* null, void (%struct.net_device*, %struct.ethtool_ringparam*)* @macb_get_ringparam, i32 (%struct.net_device*, %struct.ethtool_ringparam*)* @macb_set_ringparam, void (%struct.net_device*, %struct.ethtool_pause_stats*)* null, void (%struct.net_device*, %struct.ethtool_pauseparam*)* null, i32 (%struct.net_device*, %struct.ethtool_pauseparam*)* null, void (%struct.net_device*, %struct.ethtool_test*, i64*)* null, void (%struct.net_device*, i32, i8*)* @gem_get_ethtool_strings, i32 (%struct.net_device*, i32)* null, void (%struct.net_device*, %struct.ethtool_stats*, i64*)* @gem_get_ethtool_stats, i32 (%struct.net_device*)* null, void (%struct.net_device*)* null, i32 (%struct.net_device*)* null, i32 (%struct.net_device*, i32)* null, i32 (%struct.net_device*, i32)* @gem_get_sset_count, i32 (%struct.net_device*, %struct.ethtool_rxnfc*, i32*)* @gem_get_rxnfc, i32 (%struct.net_device*, %struct.ethtool_rxnfc*)* @gem_set_rxnfc, i32 (%struct.net_device*, %struct.ethtool_flash*)* null, i32 (%struct.net_device*, i32*)* null, i32 (%struct.net_device*)* null, i32 (%struct.net_device*)* null, i32 (%struct.net_device*, i32*, i8*, i8*)* null, i32 (%struct.net_device*, i32*, i8*, i8)* null, i32 (%struct.net_device*, i32*, i8*, i8*, i32)* null, i32 (%struct.net_device*, i32*, i8*, i8, i32*, i1)* null, void (%struct.net_device*, %struct.ethtool_channels*)* null, i32 (%struct.net_device*, %struct.ethtool_channels*)* null, i32 (%struct.net_device*, %struct.ethtool_dump*)* null, i32 (%struct.net_device*, %struct.ethtool_dump*, i8*)* null, i32 (%struct.net_device*, %struct.ethtool_dump*)* null, i32 (%struct.net_device*, %struct.ethtool_ts_info*)* @macb_get_ts_info, i32 (%struct.net_device*, %struct.ethtool_modinfo*)* null, i32 (%struct.net_device*, %struct.ethtool_eeprom*, i8*)* null, i32 (%struct.net_device*, %struct.ethtool_eee*)* null, i32 (%struct.net_device*, %struct.ethtool_eee*)* null, i32 (%struct.net_device*, %struct.ethtool_tunable*, i8*)* null, i32 (%struct.net_device*, %struct.ethtool_tunable*, i8*)* null, i32 (%struct.net_device*, i32, %struct.ethtool_coalesce*)* null, i32 (%struct.net_device*, i32, %struct.ethtool_coalesce*)* null, i32 (%struct.net_device*, %struct.ethtool_link_ksettings*)* @macb_get_link_ksettings, i32 (%struct.net_device*, %struct.ethtool_link_ksettings*)* @macb_set_link_ksettings, i32 (%struct.net_device*, %struct.ethtool_fecparam*)* null, i32 (%struct.net_device*, %struct.ethtool_fecparam*)* null, void (%struct.net_device*, %struct.ethtool_stats*, i64*)* null, i32 (%struct.net_device*, %struct.ethtool_tunable*, i8*)* null, i32 (%struct.net_device*, %struct.ethtool_tunable*, i8*)* null }, align 8, !dbg !10861
@macb_ethtool_ops = internal constant %struct.ethtool_ops { i32 0, void (%struct.net_device*, %struct.ethtool_drvinfo*)* null, i32 (%struct.net_device*)* @macb_get_regs_len, void (%struct.net_device*, %struct.ethtool_regs*, i8*)* @macb_get_regs, void (%struct.net_device*, %struct.ethtool_wolinfo*)* @macb_get_wol, i32 (%struct.net_device*, %struct.ethtool_wolinfo*)* @macb_set_wol, i32 (%struct.net_device*)* null, void (%struct.net_device*, i32)* null, i32 (%struct.net_device*)* null, i32 (%struct.net_device*)* @ethtool_op_get_link, i32 (%struct.net_device*, %struct.ethtool_link_ext_state_info*)* null, i32 (%struct.net_device*)* null, i32 (%struct.net_device*, %struct.ethtool_eeprom*, i8*)* null, i32 (%struct.net_device*, %struct.ethtool_eeprom*, i8*)* null, i32 (%struct.net_device*, %struct.ethtool_coalesce*)* null, i32 (%struct.net_device*, %struct.ethtool_coalesce*)* null, void (%struct.net_device*, %struct.ethtool_ringparam*)* @macb_get_ringparam, i32 (%struct.net_device*, %struct.ethtool_ringparam*)* @macb_set_ringparam, void (%struct.net_device*, %struct.ethtool_pause_stats*)* null, void (%struct.net_device*, %struct.ethtool_pauseparam*)* null, i32 (%struct.net_device*, %struct.ethtool_pauseparam*)* null, void (%struct.net_device*, %struct.ethtool_test*, i64*)* null, void (%struct.net_device*, i32, i8*)* null, i32 (%struct.net_device*, i32)* null, void (%struct.net_device*, %struct.ethtool_stats*, i64*)* null, i32 (%struct.net_device*)* null, void (%struct.net_device*)* null, i32 (%struct.net_device*)* null, i32 (%struct.net_device*, i32)* null, i32 (%struct.net_device*, i32)* null, i32 (%struct.net_device*, %struct.ethtool_rxnfc*, i32*)* null, i32 (%struct.net_device*, %struct.ethtool_rxnfc*)* null, i32 (%struct.net_device*, %struct.ethtool_flash*)* null, i32 (%struct.net_device*, i32*)* null, i32 (%struct.net_device*)* null, i32 (%struct.net_device*)* null, i32 (%struct.net_device*, i32*, i8*, i8*)* null, i32 (%struct.net_device*, i32*, i8*, i8)* null, i32 (%struct.net_device*, i32*, i8*, i8*, i32)* null, i32 (%struct.net_device*, i32*, i8*, i8, i32*, i1)* null, void (%struct.net_device*, %struct.ethtool_channels*)* null, i32 (%struct.net_device*, %struct.ethtool_channels*)* null, i32 (%struct.net_device*, %struct.ethtool_dump*)* null, i32 (%struct.net_device*, %struct.ethtool_dump*, i8*)* null, i32 (%struct.net_device*, %struct.ethtool_dump*)* null, i32 (%struct.net_device*, %struct.ethtool_ts_info*)* @ethtool_op_get_ts_info, i32 (%struct.net_device*, %struct.ethtool_modinfo*)* null, i32 (%struct.net_device*, %struct.ethtool_eeprom*, i8*)* null, i32 (%struct.net_device*, %struct.ethtool_eee*)* null, i32 (%struct.net_device*, %struct.ethtool_eee*)* null, i32 (%struct.net_device*, %struct.ethtool_tunable*, i8*)* null, i32 (%struct.net_device*, %struct.ethtool_tunable*, i8*)* null, i32 (%struct.net_device*, i32, %struct.ethtool_coalesce*)* null, i32 (%struct.net_device*, i32, %struct.ethtool_coalesce*)* null, i32 (%struct.net_device*, %struct.ethtool_link_ksettings*)* @macb_get_link_ksettings, i32 (%struct.net_device*, %struct.ethtool_link_ksettings*)* @macb_set_link_ksettings, i32 (%struct.net_device*, %struct.ethtool_fecparam*)* null, i32 (%struct.net_device*, %struct.ethtool_fecparam*)* null, void (%struct.net_device*, %struct.ethtool_stats*, i64*)* null, i32 (%struct.net_device*, %struct.ethtool_tunable*, i8*)* null, i32 (%struct.net_device*, %struct.ethtool_tunable*, i8*)* null }, align 8, !dbg !10866
@.str.19 = private unnamed_addr constant [29 x i8] c"DMA bus error: HRESP not OK\0A\00", align 1
@system_wq = external dso_local global %struct.workqueue_struct*, align 8
@.str.20 = private unnamed_addr constant [24 x i8] c"BUG: halt tx timed out\0A\00", align 1
@.str.21 = private unnamed_addr constant [37 x i8] c"BUG: TX buffers exhausted mid-frame\0A\00", align 1
@pv_ops = external dso_local global %struct.paravirt_patch_template, align 8
@jiffies = external dso_local global i64, align 8
@.str.22 = private unnamed_addr constant [42 x i8] c"Unable to allocate DMA memory (error %d)\0A\00", align 1
@kmalloc_caches = external dso_local global [3 x [14 x %struct.kmem_cache*]], align 16
@.str.23 = private unnamed_addr constant [21 x i8] c"include/linux/slab.h\00", align 1
@.str.24 = private unnamed_addr constant [26 x i8] c"include/linux/netdevice.h\00", align 1
@.str.25 = private unnamed_addr constant [14 x i8] c"no PHY found\0A\00", align 1
@.str.26 = private unnamed_addr constant [27 x i8] c"Could not attach PHY (%d)\0A\00", align 1
@.str.27 = private unnamed_addr constant [11 x i8] c"phy-handle\00", align 1
@.str.28 = private unnamed_addr constant [35 x i8] c"Error - LSO headers fragmented!!!\0A\00", align 1
@.str.29 = private unnamed_addr constant [17 x i8] c"BUG! empty skb!\0A\00", align 1
@.str.30 = private unnamed_addr constant [19 x i8] c"TX DMA map failed\0A\00", align 1
@dma_map_single_attrs.__warned = internal global i8 0, section ".data.once", align 1, !dbg !10844
@.str.31 = private unnamed_addr constant [44 x i8] c"%s %s: rejecting DMA map of vmalloc memory\0A\00", align 1
@.str.32 = private unnamed_addr constant [28 x i8] c"include/linux/dma-mapping.h\00", align 1
@vmemmap_base = external dso_local global i64, align 8
@phys_base = external dso_local global i64, align 8
@page_offset_base = external dso_local global i64, align 8
@gem_statistics = internal constant [43 x %struct.gem_statistic] [%struct.gem_statistic { [32 x i8] c"tx_octets\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i32 256, i32 0 }, %struct.gem_statistic { [32 x i8] c"tx_frames\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i32 264, i32 0 }, %struct.gem_statistic { [32 x i8] c"tx_broadcast_frames\00\00\00\00\00\00\00\00\00\00\00\00\00", i32 268, i32 0 }, %struct.gem_statistic { [32 x i8] c"tx_multicast_frames\00\00\00\00\00\00\00\00\00\00\00\00\00", i32 272, i32 0 }, %struct.gem_statistic { [32 x i8] c"tx_pause_frames\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i32 276, i32 0 }, %struct.gem_statistic { [32 x i8] c"tx_64_byte_frames\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i32 280, i32 0 }, %struct.gem_statistic { [32 x i8] c"tx_65_127_byte_frames\00\00\00\00\00\00\00\00\00\00\00", i32 284, i32 0 }, %struct.gem_statistic { [32 x i8] c"tx_128_255_byte_frames\00\00\00\00\00\00\00\00\00\00", i32 288, i32 0 }, %struct.gem_statistic { [32 x i8] c"tx_256_511_byte_frames\00\00\00\00\00\00\00\00\00\00", i32 292, i32 0 }, %struct.gem_statistic { [32 x i8] c"tx_512_1023_byte_frames\00\00\00\00\00\00\00\00\00", i32 296, i32 0 }, %struct.gem_statistic { [32 x i8] c"tx_1024_1518_byte_frames\00\00\00\00\00\00\00\00", i32 300, i32 0 }, %struct.gem_statistic { [32 x i8] c"tx_greater_than_1518_byte_frames", i32 304, i32 0 }, %struct.gem_statistic { [32 x i8] c"tx_underrun\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i32 308, i32 576 }, %struct.gem_statistic { [32 x i8] c"tx_single_collision_frames\00\00\00\00\00\00", i32 312, i32 1088 }, %struct.gem_statistic { [32 x i8] c"tx_multiple_collision_frames\00\00\00\00", i32 316, i32 1088 }, %struct.gem_statistic { [32 x i8] c"tx_excessive_collisions\00\00\00\00\00\00\00\00\00", i32 320, i32 1216 }, %struct.gem_statistic { [32 x i8] c"tx_late_collisions\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i32 324, i32 1088 }, %struct.gem_statistic { [32 x i8] c"tx_deferred_frames\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i32 328, i32 0 }, %struct.gem_statistic { [32 x i8] c"tx_carrier_sense_errors\00\00\00\00\00\00\00\00\00", i32 332, i32 1088 }, %struct.gem_statistic { [32 x i8] c"rx_octets\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i32 336, i32 0 }, %struct.gem_statistic { [32 x i8] c"rx_frames\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i32 344, i32 0 }, %struct.gem_statistic { [32 x i8] c"rx_broadcast_frames\00\00\00\00\00\00\00\00\00\00\00\00\00", i32 348, i32 0 }, %struct.gem_statistic { [32 x i8] c"rx_multicast_frames\00\00\00\00\00\00\00\00\00\00\00\00\00", i32 352, i32 0 }, %struct.gem_statistic { [32 x i8] c"rx_pause_frames\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i32 356, i32 0 }, %struct.gem_statistic { [32 x i8] c"rx_64_byte_frames\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i32 360, i32 0 }, %struct.gem_statistic { [32 x i8] c"rx_65_127_byte_frames\00\00\00\00\00\00\00\00\00\00\00", i32 364, i32 0 }, %struct.gem_statistic { [32 x i8] c"rx_128_255_byte_frames\00\00\00\00\00\00\00\00\00\00", i32 368, i32 0 }, %struct.gem_statistic { [32 x i8] c"rx_256_511_byte_frames\00\00\00\00\00\00\00\00\00\00", i32 372, i32 0 }, %struct.gem_statistic { [32 x i8] c"rx_512_1023_byte_frames\00\00\00\00\00\00\00\00\00", i32 376, i32 0 }, %struct.gem_statistic { [32 x i8] c"rx_1024_1518_byte_frames\00\00\00\00\00\00\00\00", i32 380, i32 0 }, %struct.gem_statistic { [32 x i8] c"rx_greater_than_1518_byte_frames", i32 384, i32 0 }, %struct.gem_statistic { [32 x i8] c"rx_undersized_frames\00\00\00\00\00\00\00\00\00\00\00\00", i32 388, i32 3 }, %struct.gem_statistic { [32 x i8] c"rx_oversize_frames\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i32 392, i32 3 }, %struct.gem_statistic { [32 x i8] c"rx_jabbers\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i32 396, i32 3 }, %struct.gem_statistic { [32 x i8] c"rx_frame_check_sequence_errors\00\00", i32 400, i32 9 }, %struct.gem_statistic { [32 x i8] c"rx_length_field_frame_errors\00\00\00\00", i32 404, i32 1 }, %struct.gem_statistic { [32 x i8] c"rx_symbol_errors\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i32 408, i32 17 }, %struct.gem_statistic { [32 x i8] c"rx_alignment_errors\00\00\00\00\00\00\00\00\00\00\00\00\00", i32 412, i32 5 }, %struct.gem_statistic { [32 x i8] c"rx_resource_errors\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i32 416, i32 5 }, %struct.gem_statistic { [32 x i8] c"rx_overruns\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i32 420, i32 33 }, %struct.gem_statistic { [32 x i8] c"rx_ip_header_checksum_errors\00\00\00\00", i32 424, i32 1 }, %struct.gem_statistic { [32 x i8] c"rx_tcp_checksum_errors\00\00\00\00\00\00\00\00\00\00", i32 428, i32 1 }, %struct.gem_statistic { [32 x i8] c"rx_udp_checksum_errors\00\00\00\00\00\00\00\00\00\00", i32 432, i32 1 }], align 16, !dbg !10850
@.str.33 = private unnamed_addr constant [41 x i8] c"drivers/net/ethernet/cadence/macb_main.c\00", align 1
@.str.34 = private unnamed_addr constant [28 x i8] c"Unable to allocate sk_buff\0A\00", align 1
@.str.35 = private unnamed_addr constant [39 x i8] c"not whole frame pointed by descriptor\0A\00", align 1
@.str.36 = private unnamed_addr constant [34 x i8] c"inconsistent Rx descriptor chain\0A\00", align 1
@.str.37 = private unnamed_addr constant [7 x i8] c"q%d_%s\00", align 1
@queue_statistics = internal constant [6 x %struct.gem_statistic] [%struct.gem_statistic { [32 x i8] c"rx_packets\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i32 0, i32 0 }, %struct.gem_statistic { [32 x i8] c"rx_bytes\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i32 0, i32 0 }, %struct.gem_statistic { [32 x i8] c"rx_dropped\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i32 0, i32 0 }, %struct.gem_statistic { [32 x i8] c"tx_packets\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i32 0, i32 0 }, %struct.gem_statistic { [32 x i8] c"tx_bytes\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i32 0, i32 0 }, %struct.gem_statistic { [32 x i8] c"tx_dropped\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i32 0, i32 0 }], align 16, !dbg !10863
@.str.38 = private unnamed_addr constant [39 x i8] c"Command parameter %d is not supported\0A\00", align 1
@.str.39 = private unnamed_addr constant [39 x i8] c"Rule not added: location %d not free!\0A\00", align 1
@.str.40 = private unnamed_addr constant [31 x i8] c"RX queue corruption: reset it\0A\00", align 1
@.str.41 = private unnamed_addr constant [23 x i8] c"include/linux/skbuff.h\00", align 1
@.str.42 = private unnamed_addr constant [35 x i8] c"GEM doesn't support hardware ptp.\0A\00", align 1
@gem_ptp_info = internal global %struct.macb_ptp_info { void (%struct.net_device*)* @gem_ptp_init, void (%struct.net_device*)* @gem_ptp_remove, i32 ()* @gem_get_ptp_max_adj, i32 (%struct.macb*)* @gem_get_tsu_rate, i32 (%struct.net_device*, %struct.ethtool_ts_info*)* @gem_get_ts_info, i32 (%struct.net_device*, %struct.ifreq*)* @gem_get_hwtst, i32 (%struct.net_device*, %struct.ifreq*, i32)* @gem_set_hwtst }, align 8, !dbg !10868
@.str.43 = private unnamed_addr constant [34 x i8] c"invalid hw address, using random\0A\00", align 1
@.str.44 = private unnamed_addr constant [13 x i8] c"MACB_mii_bus\00", align 1
@.str.45 = private unnamed_addr constant [6 x i8] c"%s-%x\00", align 1
@macb_phylink_ops = internal constant %struct.phylink_mac_ops { void (%struct.phylink_config*, i64*, %struct.phylink_link_state*)* @macb_validate, void (%struct.phylink_config*, %struct.phylink_link_state*)* @macb_mac_pcs_get_state, i32 (%struct.phylink_config*, i32, i32)* null, void (%struct.phylink_config*, i32, %struct.phylink_link_state*)* @macb_mac_config, i32 (%struct.phylink_config*, i32, i32)* null, void (%struct.phylink_config*)* @macb_mac_an_restart, void (%struct.phylink_config*, i32, i32)* @macb_mac_link_down, void (%struct.phylink_config*, %struct.phy_device*, i32, i32, i32, i32, i1, i1)* @macb_mac_link_up }, align 8, !dbg !10870
@.str.46 = private unnamed_addr constant [43 x i8] c"Could not create a phylink instance (%ld)\0A\00", align 1
@.str.47 = private unnamed_addr constant [45 x i8] c"unable to generate target frequency: %ld Hz\0A\00", align 1
@.str.48 = private unnamed_addr constant [26 x i8] c"adjusting tx_clk failed.\0A\00", align 1
@at91sam9260_config = internal constant %struct.macb_config { i32 6, i32 0, i32 (%struct.platform_device*, %struct.clk**, %struct.clk**, %struct.clk**, %struct.clk**, %struct.clk**)* @macb_clk_init, i32 (%struct.platform_device*)* @macb_init, i32 0 }, align 8, !dbg !10906
@np4_config = internal constant %struct.macb_config { i32 16, i32 0, i32 (%struct.platform_device*, %struct.clk**, %struct.clk**, %struct.clk**, %struct.clk**, %struct.clk**)* @macb_clk_init, i32 (%struct.platform_device*)* @macb_init, i32 0 }, align 8, !dbg !10908
@pc302gem_config = internal constant %struct.macb_config { i32 1610612736, i32 16, i32 (%struct.platform_device*, %struct.clk**, %struct.clk**, %struct.clk**, %struct.clk**, %struct.clk**)* @macb_clk_init, i32 (%struct.platform_device*)* @macb_init, i32 0 }, align 8, !dbg !10910
@sama5d2_config = internal constant %struct.macb_config { i32 4, i32 16, i32 (%struct.platform_device*, %struct.clk**, %struct.clk**, %struct.clk**, %struct.clk**, %struct.clk**)* @macb_clk_init, i32 (%struct.platform_device*)* @macb_init, i32 0 }, align 8, !dbg !10912
@sama5d3_config = internal constant %struct.macb_config { i32 1610612772, i32 16, i32 (%struct.platform_device*, %struct.clk**, %struct.clk**, %struct.clk**, %struct.clk**, %struct.clk**)* @macb_clk_init, i32 (%struct.platform_device*)* @macb_init, i32 10240 }, align 8, !dbg !10914
@sama5d3macb_config = internal constant %struct.macb_config { i32 1073741830, i32 0, i32 (%struct.platform_device*, %struct.clk**, %struct.clk**, %struct.clk**, %struct.clk**, %struct.clk**)* @macb_clk_init, i32 (%struct.platform_device*)* @macb_init, i32 0 }, align 8, !dbg !10916
@sama5d4_config = internal constant %struct.macb_config { i32 4, i32 4, i32 (%struct.platform_device*, %struct.clk**, %struct.clk**, %struct.clk**, %struct.clk**, %struct.clk**)* @macb_clk_init, i32 (%struct.platform_device*)* @macb_init, i32 0 }, align 8, !dbg !10918
@emac_config = internal constant %struct.macb_config { i32 134217984, i32 0, i32 (%struct.platform_device*, %struct.clk**, %struct.clk**, %struct.clk**, %struct.clk**, %struct.clk**)* @at91ether_clk_init, i32 (%struct.platform_device*)* @at91ether_init, i32 0 }, align 8, !dbg !10920
@zynqmp_config = internal constant %struct.macb_config { i32 536871136, i32 16, i32 (%struct.platform_device*, %struct.clk**, %struct.clk**, %struct.clk**, %struct.clk**, %struct.clk**)* @macb_clk_init, i32 (%struct.platform_device*)* @macb_init, i32 10240 }, align 8, !dbg !10924
@zynq_config = internal constant %struct.macb_config { i32 536871176, i32 16, i32 (%struct.platform_device*, %struct.clk**, %struct.clk**, %struct.clk**, %struct.clk**, %struct.clk**)* @macb_clk_init, i32 (%struct.platform_device*)* @macb_init, i32 0 }, align 8, !dbg !10926
@fu540_c000_config = internal constant %struct.macb_config { i32 536871008, i32 16, i32 (%struct.platform_device*, %struct.clk**, %struct.clk**, %struct.clk**, %struct.clk**, %struct.clk**)* @fu540_c000_clk_init, i32 (%struct.platform_device*)* @fu540_c000_init, i32 10240 }, align 8, !dbg !10928
@.str.49 = private unnamed_addr constant [10 x i8] c"ether_clk\00", align 1
@at91ether_netdev_ops = internal constant %struct.net_device_ops { i32 (%struct.net_device*)* null, void (%struct.net_device*)* null, i32 (%struct.net_device*)* @at91ether_open, i32 (%struct.net_device*)* @at91ether_close, i32 (%struct.sk_buff*, %struct.net_device*)* @at91ether_start_xmit, i64 (%struct.sk_buff*, %struct.net_device*, i64)* null, i16 (%struct.net_device*, %struct.sk_buff*, %struct.net_device*)* null, void (%struct.net_device*, i32)* null, void (%struct.net_device*)* @macb_set_rx_mode, i32 (%struct.net_device*, i8*)* @eth_mac_addr, i32 (%struct.net_device*)* @eth_validate_addr, i32 (%struct.net_device*, %struct.ifreq*, i32)* @macb_ioctl, i32 (%struct.net_device*, %struct.ifmap*)* null, i32 (%struct.net_device*, i32)* null, i32 (%struct.net_device*, %struct.neigh_parms*)* null, void (%struct.net_device*, i32)* null, void (%struct.net_device*, %struct.rtnl_link_stats64*)* null, i1 (%struct.net_device*, i32)* null, i32 (i32, %struct.net_device*, i8*)* null, %struct.net_device_stats* (%struct.net_device*)* @macb_get_stats, i32 (%struct.net_device*, i16, i16)* null, i32 (%struct.net_device*, i16, i16)* null, i32 (%struct.net_device*, i32, i8*)* null, i32 (%struct.net_device*, i32, i16, i8, i16)* null, i32 (%struct.net_device*, i32, i32, i32)* null, i32 (%struct.net_device*, i32, i1)* null, i32 (%struct.net_device*, i32, i1)* null, i32 (%struct.net_device*, i32, %struct.ifla_vf_info*)* null, i32 (%struct.net_device*, i32, i32)* null, i32 (%struct.net_device*, i32, %struct.ifla_vf_stats*)* null, i32 (%struct.net_device*, i32, %struct.nlattr**)* null, i32 (%struct.net_device*, i32, %struct.sk_buff*)* null, i32 (%struct.net_device*, i32, %struct.ifla_vf_guid*, %struct.ifla_vf_guid*)* null, i32 (%struct.net_device*, i32, i64, i32)* null, i32 (%struct.net_device*, i32, i1)* null, i32 (%struct.net_device*, i32, i8*)* null, i32 (%struct.net_device*, %struct.net_device*, %struct.netlink_ext_ack*)* null, i32 (%struct.net_device*, %struct.net_device*)* null, %struct.net_device* (%struct.net_device*, %struct.sk_buff*, i1)* null, i64 (%struct.net_device*, i64)* null, i32 (%struct.net_device*, i64)* null, i32 (%struct.net_device*, %struct.neighbour*)* null, void (%struct.net_device*, %struct.neighbour*)* null, i32 (%struct.ndmsg*, %struct.nlattr**, %struct.net_device*, i8*, i16, i16, %struct.netlink_ext_ack*)* null, i32 (%struct.ndmsg*, %struct.nlattr**, %struct.net_device*, i8*, i16)* null, i32 (%struct.sk_buff*, %struct.netlink_callback*, %struct.net_device*, %struct.net_device*, i32*)* null, i32 (%struct.sk_buff*, %struct.nlattr**, %struct.net_device*, i8*, i16, i32, i32, %struct.netlink_ext_ack*)* null, i32 (%struct.net_device*, %struct.nlmsghdr*, i16, %struct.netlink_ext_ack*)* null, i32 (%struct.sk_buff*, i32, i32, %struct.net_device*, i32, i32)* null, i32 (%struct.net_device*, %struct.nlmsghdr*, i16)* null, i32 (%struct.net_device*, i1)* null, i32 (%struct.net_device*, %struct.netdev_phys_item_id*)* null, i32 (%struct.net_device*, %struct.netdev_phys_item_id*)* null, i32 (%struct.net_device*, i8*, i64)* null, void (%struct.net_device*, %struct.udp_tunnel_info*)* null, void (%struct.net_device*, %struct.udp_tunnel_info*)* null, i8* (%struct.net_device*, %struct.net_device*)* null, void (%struct.net_device*, i8*)* null, i32 (%struct.net_device*, i32, i32)* null, i32 (%struct.net_device*)* null, i32 (%struct.net_device*, i1)* null, i32 (%struct.net_device*, %struct.sk_buff*)* null, void (%struct.net_device*, i32)* null, i32 (%struct.net_device*, %struct.netdev_bpf*)* null, i32 (%struct.net_device*, i32, %struct.xdp_frame**, i32)* null, i32 (%struct.net_device*, i32, i32)* null, %struct.devlink_port* (%struct.net_device*)* null, i32 (%struct.net_device*, %struct.ip_tunnel_parm*, i32)* null, %struct.net_device* (%struct.net_device*)* null }, align 8, !dbg !10922
@.str.50 = private unnamed_addr constant [23 x i8] c"%s: DMA mapping error\0A\00", align 1
@__func__.at91ether_start_xmit = private unnamed_addr constant [21 x i8] c"at91ether_start_xmit\00", align 1
@.str.51 = private unnamed_addr constant [32 x i8] c"%s called, but device is busy!\0A\00", align 1
@.str.52 = private unnamed_addr constant [12 x i8] c"ROVR error\0A\00", align 1
@mgmt = internal global %struct.sifive_fu540_macb_mgmt* null, align 8, !dbg !10930
@.str.53 = private unnamed_addr constant [19 x i8] c"sifive-gemgxl-mgmt\00", align 1
@fu540_c000_ops = internal constant %struct.clk_ops { i32 (%struct.clk_hw*)* null, void (%struct.clk_hw*)* null, i32 (%struct.clk_hw*)* null, void (%struct.clk_hw*)* null, i32 (%struct.clk_hw*)* null, void (%struct.clk_hw*)* null, i32 (%struct.clk_hw*)* null, void (%struct.clk_hw*)* null, i32 (%struct.clk_hw*)* null, void (%struct.clk_hw*)* null, i64 (%struct.clk_hw*, i64)* @fu540_macb_tx_recalc_rate, i64 (%struct.clk_hw*, i64, i64*)* @fu540_macb_tx_round_rate, i32 (%struct.clk_hw*, %struct.clk_rate_request*)* null, i32 (%struct.clk_hw*, i8)* null, i8 (%struct.clk_hw*)* null, i32 (%struct.clk_hw*, i64, i64)* @fu540_macb_tx_set_rate, i32 (%struct.clk_hw*, i64, i64, i8)* null, i64 (%struct.clk_hw*, i64)* null, i32 (%struct.clk_hw*)* null, i32 (%struct.clk_hw*, i32)* null, i32 (%struct.clk_hw*, %struct.clk_duty*)* null, i32 (%struct.clk_hw*, %struct.clk_duty*)* null, i32 (%struct.clk_hw*)* null, void (%struct.clk_hw*)* null, void (%struct.clk_hw*, %struct.dentry*)* null }, align 8, !dbg !11048
@.str.54 = private unnamed_addr constant [30 x i8] c"failed to enable tx_clk (%u)\0A\00", align 1
@.str.55 = private unnamed_addr constant [28 x i8] c"Registered clk switch '%s'\0A\00", align 1
@llvm.used = appending global [8 x i8*] [i8* bitcast (i8** @__UNIQUE_ID___addressable_macb_driver_init564 to i8*), i8* bitcast (void ()* @macb_driver_exit to i8*), i8* bitcast (void ()** @__exitcall_macb_driver_exit to i8*), i8* getelementptr inbounds ([44 x i8], [44 x i8]* @__UNIQUE_ID_file565, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @__UNIQUE_ID_license566, i32 0, i32 0), i8* getelementptr inbounds ([50 x i8], [50 x i8]* @__UNIQUE_ID_description567, i32 0, i32 0), i8* getelementptr inbounds ([39 x i8], [39 x i8]* @__UNIQUE_ID_author568, i32 0, i32 0), i8* getelementptr inbounds ([25 x i8], [25 x i8]* @__UNIQUE_ID_alias569, i32 0, i32 0)], section "llvm.metadata"

; Function Attrs: cold noinline noredzone nounwind optnone sspstrong
define internal i32 @macb_driver_init() #0 section ".init.text" !dbg !11058 {
entry:
  %call = call i32 @__platform_driver_register(%struct.platform_driver* @macb_driver, %struct.module* null) #12, !dbg !11061
  ret i32 %call, !dbg !11061
}

; Function Attrs: cold noinline noredzone nounwind optnone sspstrong
define internal void @macb_driver_exit() #0 section ".exit.text" !dbg !11062 {
entry:
  call void @platform_driver_unregister(%struct.platform_driver* @macb_driver) #12, !dbg !11063
  ret void, !dbg !11063
}

; Function Attrs: noredzone
declare dso_local void @platform_driver_unregister(%struct.platform_driver*) #1

; Function Attrs: noredzone
declare dso_local i32 @__platform_driver_register(%struct.platform_driver*, %struct.module*) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @macb_probe(%struct.platform_device* %pdev) #2 !dbg !11064 {
entry:
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !11065, metadata !DIExpression()), !dbg !11071
  %retval = alloca i32, align 4
  %pdev.addr = alloca %struct.platform_device*, align 8
  %macb_config = alloca %struct.macb_config*, align 8
  %clk_init = alloca i32 (%struct.platform_device*, %struct.clk**, %struct.clk**, %struct.clk**, %struct.clk**, %struct.clk**)*, align 8
  %init = alloca i32 (%struct.platform_device*)*, align 8
  %np = alloca %struct.device_node*, align 8
  %pclk = alloca %struct.clk*, align 8
  %hclk = alloca %struct.clk*, align 8
  %tx_clk = alloca %struct.clk*, align 8
  %rx_clk = alloca %struct.clk*, align 8
  %tsu_clk = alloca %struct.clk*, align 8
  %queue_mask = alloca i32, align 4
  %num_queues = alloca i32, align 4
  %native_io = alloca i8, align 1
  %interface = alloca i32, align 4
  %dev3 = alloca %struct.net_device*, align 8
  %regs = alloca %struct.resource*, align 8
  %mem = alloca i8*, align 8
  %mac = alloca i8*, align 8
  %bp = alloca %struct.macb*, align 8
  %err = alloca i32, align 4
  %val = alloca i32, align 4
  %match = alloca %struct.of_device_id*, align 8
  %.compoundliteral = alloca %struct.spinlock, align 1
  store %struct.platform_device* %pdev, %struct.platform_device** %pdev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.platform_device** %pdev.addr, metadata !11074, metadata !DIExpression()), !dbg !11075
  call void @llvm.dbg.declare(metadata %struct.macb_config** %macb_config, metadata !11076, metadata !DIExpression()), !dbg !11078
  store %struct.macb_config* @default_gem_config, %struct.macb_config** %macb_config, align 8, !dbg !11078
  call void @llvm.dbg.declare(metadata i32 (%struct.platform_device*, %struct.clk**, %struct.clk**, %struct.clk**, %struct.clk**, %struct.clk**)** %clk_init, metadata !11079, metadata !DIExpression()), !dbg !11080
  %0 = load %struct.macb_config*, %struct.macb_config** %macb_config, align 8, !dbg !11081
  %clk_init1 = getelementptr inbounds %struct.macb_config, %struct.macb_config* %0, i32 0, i32 2, !dbg !11082
  %1 = load i32 (%struct.platform_device*, %struct.clk**, %struct.clk**, %struct.clk**, %struct.clk**, %struct.clk**)*, i32 (%struct.platform_device*, %struct.clk**, %struct.clk**, %struct.clk**, %struct.clk**, %struct.clk**)** %clk_init1, align 8, !dbg !11082
  store i32 (%struct.platform_device*, %struct.clk**, %struct.clk**, %struct.clk**, %struct.clk**, %struct.clk**)* %1, i32 (%struct.platform_device*, %struct.clk**, %struct.clk**, %struct.clk**, %struct.clk**, %struct.clk**)** %clk_init, align 8, !dbg !11080
  call void @llvm.dbg.declare(metadata i32 (%struct.platform_device*)** %init, metadata !11083, metadata !DIExpression()), !dbg !11084
  %2 = load %struct.macb_config*, %struct.macb_config** %macb_config, align 8, !dbg !11085
  %init2 = getelementptr inbounds %struct.macb_config, %struct.macb_config* %2, i32 0, i32 3, !dbg !11086
  %3 = load i32 (%struct.platform_device*)*, i32 (%struct.platform_device*)** %init2, align 8, !dbg !11086
  store i32 (%struct.platform_device*)* %3, i32 (%struct.platform_device*)** %init, align 8, !dbg !11084
  call void @llvm.dbg.declare(metadata %struct.device_node** %np, metadata !11087, metadata !DIExpression()), !dbg !11088
  %4 = load %struct.platform_device*, %struct.platform_device** %pdev.addr, align 8, !dbg !11089
  %dev = getelementptr inbounds %struct.platform_device, %struct.platform_device* %4, i32 0, i32 3, !dbg !11090
  %of_node = getelementptr inbounds %struct.device, %struct.device* %dev, i32 0, i32 23, !dbg !11091
  %5 = load %struct.device_node*, %struct.device_node** %of_node, align 8, !dbg !11091
  store %struct.device_node* %5, %struct.device_node** %np, align 8, !dbg !11088
  call void @llvm.dbg.declare(metadata %struct.clk** %pclk, metadata !11092, metadata !DIExpression()), !dbg !11093
  call void @llvm.dbg.declare(metadata %struct.clk** %hclk, metadata !11094, metadata !DIExpression()), !dbg !11095
  store %struct.clk* null, %struct.clk** %hclk, align 8, !dbg !11095
  call void @llvm.dbg.declare(metadata %struct.clk** %tx_clk, metadata !11096, metadata !DIExpression()), !dbg !11097
  store %struct.clk* null, %struct.clk** %tx_clk, align 8, !dbg !11097
  call void @llvm.dbg.declare(metadata %struct.clk** %rx_clk, metadata !11098, metadata !DIExpression()), !dbg !11099
  store %struct.clk* null, %struct.clk** %rx_clk, align 8, !dbg !11099
  call void @llvm.dbg.declare(metadata %struct.clk** %tsu_clk, metadata !11100, metadata !DIExpression()), !dbg !11101
  store %struct.clk* null, %struct.clk** %tsu_clk, align 8, !dbg !11101
  call void @llvm.dbg.declare(metadata i32* %queue_mask, metadata !11102, metadata !DIExpression()), !dbg !11103
  call void @llvm.dbg.declare(metadata i32* %num_queues, metadata !11104, metadata !DIExpression()), !dbg !11105
  call void @llvm.dbg.declare(metadata i8* %native_io, metadata !11106, metadata !DIExpression()), !dbg !11107
  call void @llvm.dbg.declare(metadata i32* %interface, metadata !11108, metadata !DIExpression()), !dbg !11109
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev3, metadata !11110, metadata !DIExpression()), !dbg !11111
  call void @llvm.dbg.declare(metadata %struct.resource** %regs, metadata !11112, metadata !DIExpression()), !dbg !11113
  call void @llvm.dbg.declare(metadata i8** %mem, metadata !11114, metadata !DIExpression()), !dbg !11115
  call void @llvm.dbg.declare(metadata i8** %mac, metadata !11116, metadata !DIExpression()), !dbg !11117
  call void @llvm.dbg.declare(metadata %struct.macb** %bp, metadata !11118, metadata !DIExpression()), !dbg !11119
  call void @llvm.dbg.declare(metadata i32* %err, metadata !11120, metadata !DIExpression()), !dbg !11121
  call void @llvm.dbg.declare(metadata i32* %val, metadata !11122, metadata !DIExpression()), !dbg !11123
  %6 = load %struct.platform_device*, %struct.platform_device** %pdev.addr, align 8, !dbg !11124
  %call = call %struct.resource* @platform_get_resource(%struct.platform_device* %6, i32 512, i32 0) #12, !dbg !11125
  store %struct.resource* %call, %struct.resource** %regs, align 8, !dbg !11126
  %7 = load %struct.platform_device*, %struct.platform_device** %pdev.addr, align 8, !dbg !11127
  %dev4 = getelementptr inbounds %struct.platform_device, %struct.platform_device* %7, i32 0, i32 3, !dbg !11128
  %8 = load %struct.resource*, %struct.resource** %regs, align 8, !dbg !11129
  %call5 = call i8* @devm_ioremap_resource(%struct.device* %dev4, %struct.resource* %8) #12, !dbg !11130
  store i8* %call5, i8** %mem, align 8, !dbg !11131
  %9 = load i8*, i8** %mem, align 8, !dbg !11132
  %call6 = call zeroext i1 @IS_ERR(i8* %9) #12, !dbg !11134
  br i1 %call6, label %if.then, label %if.end, !dbg !11135

if.then:                                          ; preds = %entry
  %10 = load i8*, i8** %mem, align 8, !dbg !11136
  %call7 = call i64 @PTR_ERR(i8* %10) #12, !dbg !11137
  %conv = trunc i64 %call7 to i32, !dbg !11137
  store i32 %conv, i32* %retval, align 4, !dbg !11138
  br label %return, !dbg !11138

if.end:                                           ; preds = %entry
  %11 = load %struct.device_node*, %struct.device_node** %np, align 8, !dbg !11139
  %tobool = icmp ne %struct.device_node* %11, null, !dbg !11139
  br i1 %tobool, label %if.then8, label %if.end17, !dbg !11141

if.then8:                                         ; preds = %if.end
  call void @llvm.dbg.declare(metadata %struct.of_device_id** %match, metadata !11142, metadata !DIExpression()), !dbg !11144
  %12 = load %struct.device_node*, %struct.device_node** %np, align 8, !dbg !11145
  %call9 = call %struct.of_device_id* @of_match_node(%struct.of_device_id* getelementptr inbounds ([17 x %struct.of_device_id], [17 x %struct.of_device_id]* @macb_dt_ids, i64 0, i64 0), %struct.device_node* %12) #12, !dbg !11146
  store %struct.of_device_id* %call9, %struct.of_device_id** %match, align 8, !dbg !11147
  %13 = load %struct.of_device_id*, %struct.of_device_id** %match, align 8, !dbg !11148
  %tobool10 = icmp ne %struct.of_device_id* %13, null, !dbg !11148
  br i1 %tobool10, label %land.lhs.true, label %if.end16, !dbg !11150

land.lhs.true:                                    ; preds = %if.then8
  %14 = load %struct.of_device_id*, %struct.of_device_id** %match, align 8, !dbg !11151
  %data = getelementptr inbounds %struct.of_device_id, %struct.of_device_id* %14, i32 0, i32 3, !dbg !11152
  %15 = load i8*, i8** %data, align 8, !dbg !11152
  %tobool11 = icmp ne i8* %15, null, !dbg !11151
  br i1 %tobool11, label %if.then12, label %if.end16, !dbg !11153

if.then12:                                        ; preds = %land.lhs.true
  %16 = load %struct.of_device_id*, %struct.of_device_id** %match, align 8, !dbg !11154
  %data13 = getelementptr inbounds %struct.of_device_id, %struct.of_device_id* %16, i32 0, i32 3, !dbg !11156
  %17 = load i8*, i8** %data13, align 8, !dbg !11156
  %18 = bitcast i8* %17 to %struct.macb_config*, !dbg !11154
  store %struct.macb_config* %18, %struct.macb_config** %macb_config, align 8, !dbg !11157
  %19 = load %struct.macb_config*, %struct.macb_config** %macb_config, align 8, !dbg !11158
  %clk_init14 = getelementptr inbounds %struct.macb_config, %struct.macb_config* %19, i32 0, i32 2, !dbg !11159
  %20 = load i32 (%struct.platform_device*, %struct.clk**, %struct.clk**, %struct.clk**, %struct.clk**, %struct.clk**)*, i32 (%struct.platform_device*, %struct.clk**, %struct.clk**, %struct.clk**, %struct.clk**, %struct.clk**)** %clk_init14, align 8, !dbg !11159
  store i32 (%struct.platform_device*, %struct.clk**, %struct.clk**, %struct.clk**, %struct.clk**, %struct.clk**)* %20, i32 (%struct.platform_device*, %struct.clk**, %struct.clk**, %struct.clk**, %struct.clk**, %struct.clk**)** %clk_init, align 8, !dbg !11160
  %21 = load %struct.macb_config*, %struct.macb_config** %macb_config, align 8, !dbg !11161
  %init15 = getelementptr inbounds %struct.macb_config, %struct.macb_config* %21, i32 0, i32 3, !dbg !11162
  %22 = load i32 (%struct.platform_device*)*, i32 (%struct.platform_device*)** %init15, align 8, !dbg !11162
  store i32 (%struct.platform_device*)* %22, i32 (%struct.platform_device*)** %init, align 8, !dbg !11163
  br label %if.end16, !dbg !11164

if.end16:                                         ; preds = %if.then12, %land.lhs.true, %if.then8
  br label %if.end17, !dbg !11165

if.end17:                                         ; preds = %if.end16, %if.end
  %23 = load i32 (%struct.platform_device*, %struct.clk**, %struct.clk**, %struct.clk**, %struct.clk**, %struct.clk**)*, i32 (%struct.platform_device*, %struct.clk**, %struct.clk**, %struct.clk**, %struct.clk**, %struct.clk**)** %clk_init, align 8, !dbg !11166
  %24 = load %struct.platform_device*, %struct.platform_device** %pdev.addr, align 8, !dbg !11167
  %call18 = call i32 %23(%struct.platform_device* %24, %struct.clk** %pclk, %struct.clk** %hclk, %struct.clk** %tx_clk, %struct.clk** %rx_clk, %struct.clk** %tsu_clk) #12, !dbg !11166
  store i32 %call18, i32* %err, align 4, !dbg !11168
  %25 = load i32, i32* %err, align 4, !dbg !11169
  %tobool19 = icmp ne i32 %25, 0, !dbg !11169
  br i1 %tobool19, label %if.then20, label %if.end21, !dbg !11171

if.then20:                                        ; preds = %if.end17
  %26 = load i32, i32* %err, align 4, !dbg !11172
  store i32 %26, i32* %retval, align 4, !dbg !11173
  br label %return, !dbg !11173

if.end21:                                         ; preds = %if.end17
  %27 = load %struct.platform_device*, %struct.platform_device** %pdev.addr, align 8, !dbg !11174
  %dev22 = getelementptr inbounds %struct.platform_device, %struct.platform_device* %27, i32 0, i32 3, !dbg !11175
  call void @pm_runtime_set_autosuspend_delay(%struct.device* %dev22, i32 100) #12, !dbg !11176
  %28 = load %struct.platform_device*, %struct.platform_device** %pdev.addr, align 8, !dbg !11177
  %dev23 = getelementptr inbounds %struct.platform_device, %struct.platform_device* %28, i32 0, i32 3, !dbg !11178
  call void @pm_runtime_use_autosuspend(%struct.device* %dev23) #12, !dbg !11179
  %29 = load %struct.platform_device*, %struct.platform_device** %pdev.addr, align 8, !dbg !11180
  %dev24 = getelementptr inbounds %struct.platform_device, %struct.platform_device* %29, i32 0, i32 3, !dbg !11181
  call void @pm_runtime_get_noresume(%struct.device* %dev24) #12, !dbg !11182
  %30 = load %struct.platform_device*, %struct.platform_device** %pdev.addr, align 8, !dbg !11183
  %dev25 = getelementptr inbounds %struct.platform_device, %struct.platform_device* %30, i32 0, i32 3, !dbg !11184
  %call26 = call i32 @pm_runtime_set_active(%struct.device* %dev25) #12, !dbg !11185
  %31 = load %struct.platform_device*, %struct.platform_device** %pdev.addr, align 8, !dbg !11186
  %dev27 = getelementptr inbounds %struct.platform_device, %struct.platform_device* %31, i32 0, i32 3, !dbg !11187
  call void @pm_runtime_enable(%struct.device* %dev27) #12, !dbg !11188
  %32 = load i8*, i8** %mem, align 8, !dbg !11189
  %call28 = call zeroext i1 @hw_is_native_io(i8* %32) #12, !dbg !11190
  %frombool = zext i1 %call28 to i8, !dbg !11191
  store i8 %frombool, i8* %native_io, align 1, !dbg !11191
  %33 = load i8*, i8** %mem, align 8, !dbg !11192
  %34 = load i8, i8* %native_io, align 1, !dbg !11193
  %tobool29 = trunc i8 %34 to i1, !dbg !11193
  call void @macb_probe_queues(i8* %33, i1 zeroext %tobool29, i32* %queue_mask, i32* %num_queues) #12, !dbg !11194
  %35 = load i32, i32* %num_queues, align 4, !dbg !11195
  %36 = load i32, i32* %num_queues, align 4, !dbg !11195
  %call30 = call %struct.net_device* @alloc_etherdev_mqs(i32 22936, i32 %35, i32 %36) #12, !dbg !11195
  store %struct.net_device* %call30, %struct.net_device** %dev3, align 8, !dbg !11196
  %37 = load %struct.net_device*, %struct.net_device** %dev3, align 8, !dbg !11197
  %tobool31 = icmp ne %struct.net_device* %37, null, !dbg !11197
  br i1 %tobool31, label %if.end33, label %if.then32, !dbg !11199

if.then32:                                        ; preds = %if.end21
  store i32 -12, i32* %err, align 4, !dbg !11200
  br label %err_disable_clocks, !dbg !11202

if.end33:                                         ; preds = %if.end21
  %38 = load %struct.resource*, %struct.resource** %regs, align 8, !dbg !11203
  %start = getelementptr inbounds %struct.resource, %struct.resource* %38, i32 0, i32 0, !dbg !11204
  %39 = load i64, i64* %start, align 8, !dbg !11204
  %40 = load %struct.net_device*, %struct.net_device** %dev3, align 8, !dbg !11205
  %base_addr = getelementptr inbounds %struct.net_device, %struct.net_device* %40, i32 0, i32 5, !dbg !11206
  store i64 %39, i64* %base_addr, align 8, !dbg !11207
  %41 = load %struct.platform_device*, %struct.platform_device** %pdev.addr, align 8, !dbg !11208
  %dev34 = getelementptr inbounds %struct.platform_device, %struct.platform_device* %41, i32 0, i32 3, !dbg !11208
  %42 = load %struct.net_device*, %struct.net_device** %dev3, align 8, !dbg !11208
  %dev35 = getelementptr inbounds %struct.net_device, %struct.net_device* %42, i32 0, i32 106, !dbg !11208
  %parent = getelementptr inbounds %struct.device, %struct.device* %dev35, i32 0, i32 1, !dbg !11208
  store %struct.device* %dev34, %struct.device** %parent, align 8, !dbg !11208
  %43 = load %struct.net_device*, %struct.net_device** %dev3, align 8, !dbg !11209
  %call36 = call i8* @netdev_priv(%struct.net_device* %43) #12, !dbg !11210
  %44 = bitcast i8* %call36 to %struct.macb*, !dbg !11210
  store %struct.macb* %44, %struct.macb** %bp, align 8, !dbg !11211
  %45 = load %struct.platform_device*, %struct.platform_device** %pdev.addr, align 8, !dbg !11212
  %46 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !11213
  %pdev37 = getelementptr inbounds %struct.macb, %struct.macb* %46, i32 0, i32 11, !dbg !11214
  store %struct.platform_device* %45, %struct.platform_device** %pdev37, align 8, !dbg !11215
  %47 = load %struct.net_device*, %struct.net_device** %dev3, align 8, !dbg !11216
  %48 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !11217
  %dev38 = getelementptr inbounds %struct.macb, %struct.macb* %48, i32 0, i32 17, !dbg !11218
  store %struct.net_device* %47, %struct.net_device** %dev38, align 8, !dbg !11219
  %49 = load i8*, i8** %mem, align 8, !dbg !11220
  %50 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !11221
  %regs39 = getelementptr inbounds %struct.macb, %struct.macb* %50, i32 0, i32 0, !dbg !11222
  store i8* %49, i8** %regs39, align 8, !dbg !11223
  %51 = load i8, i8* %native_io, align 1, !dbg !11224
  %tobool40 = trunc i8 %51 to i1, !dbg !11224
  %52 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !11225
  %native_io41 = getelementptr inbounds %struct.macb, %struct.macb* %52, i32 0, i32 1, !dbg !11226
  %frombool42 = zext i1 %tobool40 to i8, !dbg !11227
  store i8 %frombool42, i8* %native_io41, align 8, !dbg !11227
  %53 = load i8, i8* %native_io, align 1, !dbg !11228
  %tobool43 = trunc i8 %53 to i1, !dbg !11228
  br i1 %tobool43, label %if.then44, label %if.else, !dbg !11230

if.then44:                                        ; preds = %if.end33
  %54 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !11231
  %macb_reg_readl = getelementptr inbounds %struct.macb, %struct.macb* %54, i32 0, i32 2, !dbg !11233
  store i32 (%struct.macb*, i32)* @hw_readl_native, i32 (%struct.macb*, i32)** %macb_reg_readl, align 8, !dbg !11234
  %55 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !11235
  %macb_reg_writel = getelementptr inbounds %struct.macb, %struct.macb* %55, i32 0, i32 3, !dbg !11236
  store void (%struct.macb*, i32, i32)* @hw_writel_native, void (%struct.macb*, i32, i32)** %macb_reg_writel, align 8, !dbg !11237
  br label %if.end47, !dbg !11238

if.else:                                          ; preds = %if.end33
  %56 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !11239
  %macb_reg_readl45 = getelementptr inbounds %struct.macb, %struct.macb* %56, i32 0, i32 2, !dbg !11241
  store i32 (%struct.macb*, i32)* @hw_readl, i32 (%struct.macb*, i32)** %macb_reg_readl45, align 8, !dbg !11242
  %57 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !11243
  %macb_reg_writel46 = getelementptr inbounds %struct.macb, %struct.macb* %57, i32 0, i32 3, !dbg !11244
  store void (%struct.macb*, i32, i32)* @hw_writel, void (%struct.macb*, i32, i32)** %macb_reg_writel46, align 8, !dbg !11245
  br label %if.end47

if.end47:                                         ; preds = %if.else, %if.then44
  %58 = load i32, i32* %num_queues, align 4, !dbg !11246
  %59 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !11247
  %num_queues48 = getelementptr inbounds %struct.macb, %struct.macb* %59, i32 0, i32 7, !dbg !11248
  store i32 %58, i32* %num_queues48, align 8, !dbg !11249
  %60 = load i32, i32* %queue_mask, align 4, !dbg !11250
  %61 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !11251
  %queue_mask49 = getelementptr inbounds %struct.macb, %struct.macb* %61, i32 0, i32 8, !dbg !11252
  store i32 %60, i32* %queue_mask49, align 4, !dbg !11253
  %62 = load %struct.macb_config*, %struct.macb_config** %macb_config, align 8, !dbg !11254
  %tobool50 = icmp ne %struct.macb_config* %62, null, !dbg !11254
  br i1 %tobool50, label %if.then51, label %if.end53, !dbg !11256

if.then51:                                        ; preds = %if.end47
  %63 = load %struct.macb_config*, %struct.macb_config** %macb_config, align 8, !dbg !11257
  %dma_burst_length = getelementptr inbounds %struct.macb_config, %struct.macb_config* %63, i32 0, i32 1, !dbg !11258
  %64 = load i32, i32* %dma_burst_length, align 4, !dbg !11258
  %65 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !11259
  %dma_burst_length52 = getelementptr inbounds %struct.macb, %struct.macb* %65, i32 0, i32 24, !dbg !11260
  store i32 %64, i32* %dma_burst_length52, align 4, !dbg !11261
  br label %if.end53, !dbg !11259

if.end53:                                         ; preds = %if.then51, %if.end47
  %66 = load %struct.clk*, %struct.clk** %pclk, align 8, !dbg !11262
  %67 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !11263
  %pclk54 = getelementptr inbounds %struct.macb, %struct.macb* %67, i32 0, i32 12, !dbg !11264
  store %struct.clk* %66, %struct.clk** %pclk54, align 8, !dbg !11265
  %68 = load %struct.clk*, %struct.clk** %hclk, align 8, !dbg !11266
  %69 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !11267
  %hclk55 = getelementptr inbounds %struct.macb, %struct.macb* %69, i32 0, i32 13, !dbg !11268
  store %struct.clk* %68, %struct.clk** %hclk55, align 8, !dbg !11269
  %70 = load %struct.clk*, %struct.clk** %tx_clk, align 8, !dbg !11270
  %71 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !11271
  %tx_clk56 = getelementptr inbounds %struct.macb, %struct.macb* %71, i32 0, i32 14, !dbg !11272
  store %struct.clk* %70, %struct.clk** %tx_clk56, align 8, !dbg !11273
  %72 = load %struct.clk*, %struct.clk** %rx_clk, align 8, !dbg !11274
  %73 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !11275
  %rx_clk57 = getelementptr inbounds %struct.macb, %struct.macb* %73, i32 0, i32 15, !dbg !11276
  store %struct.clk* %72, %struct.clk** %rx_clk57, align 8, !dbg !11277
  %74 = load %struct.clk*, %struct.clk** %tsu_clk, align 8, !dbg !11278
  %75 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !11279
  %tsu_clk58 = getelementptr inbounds %struct.macb, %struct.macb* %75, i32 0, i32 16, !dbg !11280
  store %struct.clk* %74, %struct.clk** %tsu_clk58, align 8, !dbg !11281
  %76 = load %struct.macb_config*, %struct.macb_config** %macb_config, align 8, !dbg !11282
  %tobool59 = icmp ne %struct.macb_config* %76, null, !dbg !11282
  br i1 %tobool59, label %if.then60, label %if.end62, !dbg !11284

if.then60:                                        ; preds = %if.end53
  %77 = load %struct.macb_config*, %struct.macb_config** %macb_config, align 8, !dbg !11285
  %jumbo_max_len = getelementptr inbounds %struct.macb_config, %struct.macb_config* %77, i32 0, i32 4, !dbg !11286
  %78 = load i32, i32* %jumbo_max_len, align 8, !dbg !11286
  %79 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !11287
  %jumbo_max_len61 = getelementptr inbounds %struct.macb, %struct.macb* %79, i32 0, i32 32, !dbg !11288
  store i32 %78, i32* %jumbo_max_len61, align 4, !dbg !11289
  br label %if.end62, !dbg !11287

if.end62:                                         ; preds = %if.then60, %if.end53
  %80 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !11290
  %wol = getelementptr inbounds %struct.macb, %struct.macb* %80, i32 0, i32 33, !dbg !11291
  store i32 0, i32* %wol, align 8, !dbg !11292
  %81 = load %struct.device_node*, %struct.device_node** %np, align 8, !dbg !11293
  %call63 = call i8* @of_get_property(%struct.device_node* %81, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.1, i64 0, i64 0), i32* null) #12, !dbg !11295
  %tobool64 = icmp ne i8* %call63, null, !dbg !11295
  br i1 %tobool64, label %if.then65, label %if.end67, !dbg !11296

if.then65:                                        ; preds = %if.end62
  %82 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !11297
  %wol66 = getelementptr inbounds %struct.macb, %struct.macb* %82, i32 0, i32 33, !dbg !11298
  %83 = load i32, i32* %wol66, align 8, !dbg !11299
  %or = or i32 %83, 1, !dbg !11299
  store i32 %or, i32* %wol66, align 8, !dbg !11299
  br label %if.end67, !dbg !11297

if.end67:                                         ; preds = %if.then65, %if.end62
  %84 = load %struct.platform_device*, %struct.platform_device** %pdev.addr, align 8, !dbg !11300
  %dev68 = getelementptr inbounds %struct.platform_device, %struct.platform_device* %84, i32 0, i32 3, !dbg !11301
  %85 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !11302
  %wol69 = getelementptr inbounds %struct.macb, %struct.macb* %85, i32 0, i32 33, !dbg !11303
  %86 = load i32, i32* %wol69, align 8, !dbg !11303
  %and = and i32 %86, 1, !dbg !11304
  %tobool70 = icmp ne i32 %and, 0, !dbg !11302
  call void @device_set_wakeup_capable(%struct.device* %dev68, i1 zeroext %tobool70) #12, !dbg !11305
  br label %do.body, !dbg !11306

do.body:                                          ; preds = %if.end67
  %87 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !11307
  %lock = getelementptr inbounds %struct.macb, %struct.macb* %87, i32 0, i32 10, !dbg !11307
  store %struct.spinlock* %lock, %struct.spinlock** %lock.addr.i, align 8
  %88 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !11308
  %89 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %88, i32 0, i32 0, !dbg !11309
  %rlock.i = bitcast %union.anon.1* %89 to %struct.raw_spinlock*, !dbg !11309
  %90 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !11307
  %lock72 = getelementptr inbounds %struct.macb, %struct.macb* %90, i32 0, i32 10, !dbg !11307
  %91 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %.compoundliteral, i32 0, i32 0, !dbg !11307
  %rlock = bitcast %union.anon.1* %91 to %struct.raw_spinlock*, !dbg !11307
  %92 = bitcast %struct.spinlock* %lock72 to i8*, !dbg !11307
  %93 = bitcast %struct.spinlock* %.compoundliteral to i8*, !dbg !11307
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %92, i8* align 1 %93, i64 0, i1 false), !dbg !11307
  br label %do.end, !dbg !11307

do.end:                                           ; preds = %do.body
  %94 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !11310
  %95 = load %struct.macb_config*, %struct.macb_config** %macb_config, align 8, !dbg !11311
  call void @macb_configure_caps(%struct.macb* %94, %struct.macb_config* %95) #12, !dbg !11312
  %96 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !11313
  %macb_reg_readl73 = getelementptr inbounds %struct.macb, %struct.macb* %96, i32 0, i32 2, !dbg !11313
  %97 = load i32 (%struct.macb*, i32)*, i32 (%struct.macb*, i32)** %macb_reg_readl73, align 8, !dbg !11313
  %98 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !11313
  %call74 = call i32 %97(%struct.macb* %98, i32 660) #12, !dbg !11313
  %shr = lshr i32 %call74, 23, !dbg !11313
  %and75 = and i32 %shr, 1, !dbg !11313
  %tobool76 = icmp ne i32 %and75, 0, !dbg !11313
  br i1 %tobool76, label %if.then77, label %if.end83, !dbg !11315

if.then77:                                        ; preds = %do.end
  %99 = load %struct.platform_device*, %struct.platform_device** %pdev.addr, align 8, !dbg !11316
  %dev78 = getelementptr inbounds %struct.platform_device, %struct.platform_device* %99, i32 0, i32 3, !dbg !11318
  %call79 = call i32 @dma_set_mask(%struct.device* %dev78, i64 17592186044415) #12, !dbg !11319
  %100 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !11320
  %hw_dma_cap = getelementptr inbounds %struct.macb, %struct.macb* %100, i32 0, i32 35, !dbg !11321
  %101 = load i8, i8* %hw_dma_cap, align 8, !dbg !11322
  %conv80 = zext i8 %101 to i32, !dbg !11322
  %or81 = or i32 %conv80, 1, !dbg !11322
  %conv82 = trunc i32 %or81 to i8, !dbg !11322
  store i8 %conv82, i8* %hw_dma_cap, align 8, !dbg !11322
  br label %if.end83, !dbg !11323

if.end83:                                         ; preds = %if.then77, %do.end
  %102 = load %struct.platform_device*, %struct.platform_device** %pdev.addr, align 8, !dbg !11324
  %103 = load %struct.net_device*, %struct.net_device** %dev3, align 8, !dbg !11325
  %104 = bitcast %struct.net_device* %103 to i8*, !dbg !11325
  call void @platform_set_drvdata(%struct.platform_device* %102, i8* %104) #12, !dbg !11326
  %105 = load %struct.platform_device*, %struct.platform_device** %pdev.addr, align 8, !dbg !11327
  %call84 = call i32 @platform_get_irq(%struct.platform_device* %105, i32 0) #12, !dbg !11328
  %106 = load %struct.net_device*, %struct.net_device** %dev3, align 8, !dbg !11329
  %irq = getelementptr inbounds %struct.net_device, %struct.net_device* %106, i32 0, i32 6, !dbg !11330
  store i32 %call84, i32* %irq, align 8, !dbg !11331
  %107 = load %struct.net_device*, %struct.net_device** %dev3, align 8, !dbg !11332
  %irq85 = getelementptr inbounds %struct.net_device, %struct.net_device* %107, i32 0, i32 6, !dbg !11334
  %108 = load i32, i32* %irq85, align 8, !dbg !11334
  %cmp = icmp slt i32 %108, 0, !dbg !11335
  br i1 %cmp, label %if.then87, label %if.end89, !dbg !11336

if.then87:                                        ; preds = %if.end83
  %109 = load %struct.net_device*, %struct.net_device** %dev3, align 8, !dbg !11337
  %irq88 = getelementptr inbounds %struct.net_device, %struct.net_device* %109, i32 0, i32 6, !dbg !11339
  %110 = load i32, i32* %irq88, align 8, !dbg !11339
  store i32 %110, i32* %err, align 4, !dbg !11340
  br label %err_out_free_netdev, !dbg !11341

if.end89:                                         ; preds = %if.end83
  %111 = load %struct.net_device*, %struct.net_device** %dev3, align 8, !dbg !11342
  %min_mtu = getelementptr inbounds %struct.net_device, %struct.net_device* %111, i32 0, i32 45, !dbg !11343
  store i32 68, i32* %min_mtu, align 4, !dbg !11344
  %112 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !11345
  %caps = getelementptr inbounds %struct.macb, %struct.macb* %112, i32 0, i32 23, !dbg !11347
  %113 = load i32, i32* %caps, align 8, !dbg !11347
  %and90 = and i32 %113, 32, !dbg !11348
  %tobool91 = icmp ne i32 %and90, 0, !dbg !11348
  br i1 %tobool91, label %if.then92, label %if.else96, !dbg !11349

if.then92:                                        ; preds = %if.end89
  %114 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !11350
  %macb_reg_readl93 = getelementptr inbounds %struct.macb, %struct.macb* %114, i32 0, i32 2, !dbg !11350
  %115 = load i32 (%struct.macb*, i32)*, i32 (%struct.macb*, i32)** %macb_reg_readl93, align 8, !dbg !11350
  %116 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !11350
  %call94 = call i32 %115(%struct.macb* %116, i32 72) #12, !dbg !11350
  %sub = sub i32 %call94, 14, !dbg !11351
  %sub95 = sub i32 %sub, 4, !dbg !11352
  %117 = load %struct.net_device*, %struct.net_device** %dev3, align 8, !dbg !11353
  %max_mtu = getelementptr inbounds %struct.net_device, %struct.net_device* %117, i32 0, i32 46, !dbg !11354
  store i32 %sub95, i32* %max_mtu, align 8, !dbg !11355
  br label %if.end98, !dbg !11353

if.else96:                                        ; preds = %if.end89
  %118 = load %struct.net_device*, %struct.net_device** %dev3, align 8, !dbg !11356
  %max_mtu97 = getelementptr inbounds %struct.net_device, %struct.net_device* %118, i32 0, i32 46, !dbg !11357
  store i32 1500, i32* %max_mtu97, align 8, !dbg !11358
  br label %if.end98

if.end98:                                         ; preds = %if.else96, %if.then92
  %119 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !11359
  %caps99 = getelementptr inbounds %struct.macb, %struct.macb* %119, i32 0, i32 23, !dbg !11361
  %120 = load i32, i32* %caps99, align 8, !dbg !11361
  %and100 = and i32 %120, 128, !dbg !11362
  %tobool101 = icmp ne i32 %and100, 0, !dbg !11362
  br i1 %tobool101, label %if.then102, label %if.end123, !dbg !11363

if.then102:                                       ; preds = %if.end98
  %121 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !11364
  %macb_reg_readl103 = getelementptr inbounds %struct.macb, %struct.macb* %121, i32 0, i32 2, !dbg !11364
  %122 = load i32 (%struct.macb*, i32)*, i32 (%struct.macb*, i32)** %macb_reg_readl103, align 8, !dbg !11364
  %123 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !11364
  %call104 = call i32 %122(%struct.macb* %123, i32 676) #12, !dbg !11364
  %shr105 = lshr i32 %call104, 8, !dbg !11364
  %and106 = and i32 %shr105, 15, !dbg !11364
  store i32 %and106, i32* %val, align 4, !dbg !11366
  %124 = load i32, i32* %val, align 4, !dbg !11367
  %tobool107 = icmp ne i32 %124, 0, !dbg !11367
  br i1 %tobool107, label %if.then108, label %if.end111, !dbg !11369

if.then108:                                       ; preds = %if.then102
  %125 = load i32, i32* %val, align 4, !dbg !11370
  %sub109 = sub i32 %125, 1, !dbg !11371
  %shl = shl i32 2, %sub109, !dbg !11372
  %126 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !11373
  %call110 = call i32 @macb_dma_desc_get_size(%struct.macb* %126) #12, !dbg !11374
  %mul = mul i32 %shl, %call110, !dbg !11375
  %127 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !11376
  %rx_bd_rd_prefetch = getelementptr inbounds %struct.macb, %struct.macb* %127, i32 0, i32 46, !dbg !11377
  store i32 %mul, i32* %rx_bd_rd_prefetch, align 8, !dbg !11378
  br label %if.end111, !dbg !11376

if.end111:                                        ; preds = %if.then108, %if.then102
  %128 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !11379
  %macb_reg_readl112 = getelementptr inbounds %struct.macb, %struct.macb* %128, i32 0, i32 2, !dbg !11379
  %129 = load i32 (%struct.macb*, i32)*, i32 (%struct.macb*, i32)** %macb_reg_readl112, align 8, !dbg !11379
  %130 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !11379
  %call113 = call i32 %129(%struct.macb* %130, i32 676) #12, !dbg !11379
  %shr114 = lshr i32 %call113, 12, !dbg !11379
  %and115 = and i32 %shr114, 15, !dbg !11379
  store i32 %and115, i32* %val, align 4, !dbg !11380
  %131 = load i32, i32* %val, align 4, !dbg !11381
  %tobool116 = icmp ne i32 %131, 0, !dbg !11381
  br i1 %tobool116, label %if.then117, label %if.end122, !dbg !11383

if.then117:                                       ; preds = %if.end111
  %132 = load i32, i32* %val, align 4, !dbg !11384
  %sub118 = sub i32 %132, 1, !dbg !11385
  %shl119 = shl i32 2, %sub118, !dbg !11386
  %133 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !11387
  %call120 = call i32 @macb_dma_desc_get_size(%struct.macb* %133) #12, !dbg !11388
  %mul121 = mul i32 %shl119, %call120, !dbg !11389
  %134 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !11390
  %tx_bd_rd_prefetch = getelementptr inbounds %struct.macb, %struct.macb* %134, i32 0, i32 47, !dbg !11391
  store i32 %mul121, i32* %tx_bd_rd_prefetch, align 4, !dbg !11392
  br label %if.end122, !dbg !11390

if.end122:                                        ; preds = %if.then117, %if.end111
  br label %if.end123, !dbg !11393

if.end123:                                        ; preds = %if.end122, %if.end98
  %135 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !11394
  %rx_intr_mask = getelementptr inbounds %struct.macb, %struct.macb* %135, i32 0, i32 48, !dbg !11395
  store i32 1026, i32* %rx_intr_mask, align 8, !dbg !11396
  %136 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !11397
  %caps124 = getelementptr inbounds %struct.macb, %struct.macb* %136, i32 0, i32 23, !dbg !11399
  %137 = load i32, i32* %caps124, align 8, !dbg !11399
  %and125 = and i32 %137, 256, !dbg !11400
  %tobool126 = icmp ne i32 %and125, 0, !dbg !11400
  br i1 %tobool126, label %if.then127, label %if.end130, !dbg !11401

if.then127:                                       ; preds = %if.end123
  %138 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !11402
  %rx_intr_mask128 = getelementptr inbounds %struct.macb, %struct.macb* %138, i32 0, i32 48, !dbg !11403
  %139 = load i32, i32* %rx_intr_mask128, align 8, !dbg !11404
  %or129 = or i32 %139, 4, !dbg !11404
  store i32 %or129, i32* %rx_intr_mask128, align 8, !dbg !11404
  br label %if.end130, !dbg !11402

if.end130:                                        ; preds = %if.then127, %if.end123
  %140 = load %struct.device_node*, %struct.device_node** %np, align 8, !dbg !11405
  %call131 = call i8* @of_get_mac_address(%struct.device_node* %140) #12, !dbg !11406
  store i8* %call131, i8** %mac, align 8, !dbg !11407
  %141 = load i8*, i8** %mac, align 8, !dbg !11408
  %call132 = call i64 @PTR_ERR(i8* %141) #12, !dbg !11410
  %cmp133 = icmp eq i64 %call132, -517, !dbg !11411
  br i1 %cmp133, label %if.then135, label %if.else136, !dbg !11412

if.then135:                                       ; preds = %if.end130
  store i32 -517, i32* %err, align 4, !dbg !11413
  br label %err_out_free_netdev, !dbg !11415

if.else136:                                       ; preds = %if.end130
  %142 = load i8*, i8** %mac, align 8, !dbg !11416
  %call137 = call zeroext i1 @IS_ERR_OR_NULL(i8* %142) #12, !dbg !11418
  br i1 %call137, label %if.else140, label %if.then138, !dbg !11419

if.then138:                                       ; preds = %if.else136
  %143 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !11420
  %dev139 = getelementptr inbounds %struct.macb, %struct.macb* %143, i32 0, i32 17, !dbg !11422
  %144 = load %struct.net_device*, %struct.net_device** %dev139, align 8, !dbg !11422
  %dev_addr = getelementptr inbounds %struct.net_device, %struct.net_device* %144, i32 0, i32 74, !dbg !11423
  %145 = load i8*, i8** %dev_addr, align 8, !dbg !11423
  %146 = load i8*, i8** %mac, align 8, !dbg !11424
  call void @ether_addr_copy(i8* %145, i8* %146) #12, !dbg !11425
  br label %if.end141, !dbg !11426

if.else140:                                       ; preds = %if.else136
  %147 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !11427
  call void @macb_get_hwaddr(%struct.macb* %147) #12, !dbg !11429
  br label %if.end141

if.end141:                                        ; preds = %if.else140, %if.then138
  br label %if.end142

if.end142:                                        ; preds = %if.end141
  %148 = load %struct.device_node*, %struct.device_node** %np, align 8, !dbg !11430
  %call143 = call i32 @of_get_phy_mode(%struct.device_node* %148, i32* %interface) #12, !dbg !11431
  store i32 %call143, i32* %err, align 4, !dbg !11432
  %149 = load i32, i32* %err, align 4, !dbg !11433
  %tobool144 = icmp ne i32 %149, 0, !dbg !11433
  br i1 %tobool144, label %if.then145, label %if.else146, !dbg !11435

if.then145:                                       ; preds = %if.end142
  %150 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !11436
  %phy_interface = getelementptr inbounds %struct.macb, %struct.macb* %150, i32 0, i32 25, !dbg !11437
  store i32 2, i32* %phy_interface, align 8, !dbg !11438
  br label %if.end148, !dbg !11436

if.else146:                                       ; preds = %if.end142
  %151 = load i32, i32* %interface, align 4, !dbg !11439
  %152 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !11440
  %phy_interface147 = getelementptr inbounds %struct.macb, %struct.macb* %152, i32 0, i32 25, !dbg !11441
  store i32 %151, i32* %phy_interface147, align 8, !dbg !11442
  br label %if.end148

if.end148:                                        ; preds = %if.else146, %if.then145
  %153 = load i32 (%struct.platform_device*)*, i32 (%struct.platform_device*)** %init, align 8, !dbg !11443
  %154 = load %struct.platform_device*, %struct.platform_device** %pdev.addr, align 8, !dbg !11444
  %call149 = call i32 %153(%struct.platform_device* %154) #12, !dbg !11443
  store i32 %call149, i32* %err, align 4, !dbg !11445
  %155 = load i32, i32* %err, align 4, !dbg !11446
  %tobool150 = icmp ne i32 %155, 0, !dbg !11446
  br i1 %tobool150, label %if.then151, label %if.end152, !dbg !11448

if.then151:                                       ; preds = %if.end148
  br label %err_out_free_netdev, !dbg !11449

if.end152:                                        ; preds = %if.end148
  %156 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !11450
  %call153 = call i32 @macb_mii_init(%struct.macb* %156) #12, !dbg !11451
  store i32 %call153, i32* %err, align 4, !dbg !11452
  %157 = load i32, i32* %err, align 4, !dbg !11453
  %tobool154 = icmp ne i32 %157, 0, !dbg !11453
  br i1 %tobool154, label %if.then155, label %if.end156, !dbg !11455

if.then155:                                       ; preds = %if.end152
  br label %err_out_free_netdev, !dbg !11456

if.end156:                                        ; preds = %if.end152
  %158 = load %struct.net_device*, %struct.net_device** %dev3, align 8, !dbg !11457
  call void @netif_carrier_off(%struct.net_device* %158) #12, !dbg !11458
  %159 = load %struct.net_device*, %struct.net_device** %dev3, align 8, !dbg !11459
  %call157 = call i32 @register_netdev(%struct.net_device* %159) #12, !dbg !11460
  store i32 %call157, i32* %err, align 4, !dbg !11461
  %160 = load i32, i32* %err, align 4, !dbg !11462
  %tobool158 = icmp ne i32 %160, 0, !dbg !11462
  br i1 %tobool158, label %if.then159, label %if.end161, !dbg !11464

if.then159:                                       ; preds = %if.end156
  %161 = load %struct.platform_device*, %struct.platform_device** %pdev.addr, align 8, !dbg !11465
  %dev160 = getelementptr inbounds %struct.platform_device, %struct.platform_device* %161, i32 0, i32 3, !dbg !11465
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %dev160, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.2, i64 0, i64 0)) #13, !dbg !11465
  br label %err_out_unregister_mdio, !dbg !11467

if.end161:                                        ; preds = %if.end156
  %162 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !11468
  %hresp_err_tasklet = getelementptr inbounds %struct.macb, %struct.macb* %162, i32 0, i32 45, !dbg !11469
  call void @tasklet_setup(%struct.tasklet_struct* %hresp_err_tasklet, void (%struct.tasklet_struct*)* @macb_hresp_error_task) #12, !dbg !11470
  %163 = load %struct.net_device*, %struct.net_device** %dev3, align 8, !dbg !11471
  %164 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !11472
  %call162 = call zeroext i1 @macb_is_gem(%struct.macb* %164) #12, !dbg !11473
  %165 = zext i1 %call162 to i64, !dbg !11473
  %cond = select i1 %call162, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.4, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.5, i64 0, i64 0), !dbg !11473
  %166 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !11474
  %macb_reg_readl164 = getelementptr inbounds %struct.macb, %struct.macb* %166, i32 0, i32 2, !dbg !11474
  %167 = load i32 (%struct.macb*, i32)*, i32 (%struct.macb*, i32)** %macb_reg_readl164, align 8, !dbg !11474
  %168 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !11474
  %call165 = call i32 %167(%struct.macb* %168, i32 252) #12, !dbg !11474
  %169 = load %struct.net_device*, %struct.net_device** %dev3, align 8, !dbg !11475
  %base_addr166 = getelementptr inbounds %struct.net_device, %struct.net_device* %169, i32 0, i32 5, !dbg !11476
  %170 = load i64, i64* %base_addr166, align 8, !dbg !11476
  %171 = load %struct.net_device*, %struct.net_device** %dev3, align 8, !dbg !11477
  %irq167 = getelementptr inbounds %struct.net_device, %struct.net_device* %171, i32 0, i32 6, !dbg !11478
  %172 = load i32, i32* %irq167, align 8, !dbg !11478
  %173 = load %struct.net_device*, %struct.net_device** %dev3, align 8, !dbg !11479
  %dev_addr168 = getelementptr inbounds %struct.net_device, %struct.net_device* %173, i32 0, i32 74, !dbg !11480
  %174 = load i8*, i8** %dev_addr168, align 8, !dbg !11480
  call void (%struct.net_device*, i8*, ...) @netdev_info(%struct.net_device* %163, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.3, i64 0, i64 0), i8* %cond, i32 %call165, i64 %170, i32 %172, i8* %174) #13, !dbg !11481
  %175 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !11482
  %pdev169 = getelementptr inbounds %struct.macb, %struct.macb* %175, i32 0, i32 11, !dbg !11483
  %176 = load %struct.platform_device*, %struct.platform_device** %pdev169, align 8, !dbg !11483
  %dev170 = getelementptr inbounds %struct.platform_device, %struct.platform_device* %176, i32 0, i32 3, !dbg !11484
  call void @pm_runtime_mark_last_busy(%struct.device* %dev170) #12, !dbg !11485
  %177 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !11486
  %pdev171 = getelementptr inbounds %struct.macb, %struct.macb* %177, i32 0, i32 11, !dbg !11487
  %178 = load %struct.platform_device*, %struct.platform_device** %pdev171, align 8, !dbg !11487
  %dev172 = getelementptr inbounds %struct.platform_device, %struct.platform_device* %178, i32 0, i32 3, !dbg !11488
  %call173 = call i32 @pm_runtime_put_autosuspend(%struct.device* %dev172) #12, !dbg !11489
  store i32 0, i32* %retval, align 4, !dbg !11490
  br label %return, !dbg !11490

err_out_unregister_mdio:                          ; preds = %if.then159
  call void @llvm.dbg.label(metadata !11491), !dbg !11492
  %179 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !11493
  %mii_bus = getelementptr inbounds %struct.macb, %struct.macb* %179, i32 0, i32 20, !dbg !11494
  %180 = load %struct.mii_bus*, %struct.mii_bus** %mii_bus, align 8, !dbg !11494
  call void @mdiobus_unregister(%struct.mii_bus* %180) #12, !dbg !11495
  %181 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !11496
  %mii_bus174 = getelementptr inbounds %struct.macb, %struct.macb* %181, i32 0, i32 20, !dbg !11497
  %182 = load %struct.mii_bus*, %struct.mii_bus** %mii_bus174, align 8, !dbg !11497
  call void @mdiobus_free(%struct.mii_bus* %182) #12, !dbg !11498
  br label %err_out_free_netdev, !dbg !11498

err_out_free_netdev:                              ; preds = %err_out_unregister_mdio, %if.then155, %if.then151, %if.then135, %if.then87
  call void @llvm.dbg.label(metadata !11499), !dbg !11500
  %183 = load %struct.net_device*, %struct.net_device** %dev3, align 8, !dbg !11501
  call void @free_netdev(%struct.net_device* %183) #12, !dbg !11502
  br label %err_disable_clocks, !dbg !11502

err_disable_clocks:                               ; preds = %err_out_free_netdev, %if.then32
  call void @llvm.dbg.label(metadata !11503), !dbg !11504
  %184 = load %struct.clk*, %struct.clk** %tx_clk, align 8, !dbg !11505
  call void @clk_disable_unprepare(%struct.clk* %184) #12, !dbg !11506
  %185 = load %struct.clk*, %struct.clk** %hclk, align 8, !dbg !11507
  call void @clk_disable_unprepare(%struct.clk* %185) #12, !dbg !11508
  %186 = load %struct.clk*, %struct.clk** %pclk, align 8, !dbg !11509
  call void @clk_disable_unprepare(%struct.clk* %186) #12, !dbg !11510
  %187 = load %struct.clk*, %struct.clk** %rx_clk, align 8, !dbg !11511
  call void @clk_disable_unprepare(%struct.clk* %187) #12, !dbg !11512
  %188 = load %struct.clk*, %struct.clk** %tsu_clk, align 8, !dbg !11513
  call void @clk_disable_unprepare(%struct.clk* %188) #12, !dbg !11514
  %189 = load %struct.platform_device*, %struct.platform_device** %pdev.addr, align 8, !dbg !11515
  %dev175 = getelementptr inbounds %struct.platform_device, %struct.platform_device* %189, i32 0, i32 3, !dbg !11516
  call void @pm_runtime_disable(%struct.device* %dev175) #12, !dbg !11517
  %190 = load %struct.platform_device*, %struct.platform_device** %pdev.addr, align 8, !dbg !11518
  %dev176 = getelementptr inbounds %struct.platform_device, %struct.platform_device* %190, i32 0, i32 3, !dbg !11519
  %call177 = call i32 @pm_runtime_set_suspended(%struct.device* %dev176) #12, !dbg !11520
  %191 = load %struct.platform_device*, %struct.platform_device** %pdev.addr, align 8, !dbg !11521
  %dev178 = getelementptr inbounds %struct.platform_device, %struct.platform_device* %191, i32 0, i32 3, !dbg !11522
  call void @pm_runtime_dont_use_autosuspend(%struct.device* %dev178) #12, !dbg !11523
  %192 = load i32, i32* %err, align 4, !dbg !11524
  store i32 %192, i32* %retval, align 4, !dbg !11525
  br label %return, !dbg !11525

return:                                           ; preds = %err_disable_clocks, %if.end161, %if.then20, %if.then
  %193 = load i32, i32* %retval, align 4, !dbg !11526
  ret i32 %193, !dbg !11526
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @macb_remove(%struct.platform_device* %pdev) #2 !dbg !11527 {
entry:
  %pdev.addr = alloca %struct.platform_device*, align 8
  %dev = alloca %struct.net_device*, align 8
  %bp = alloca %struct.macb*, align 8
  store %struct.platform_device* %pdev, %struct.platform_device** %pdev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.platform_device** %pdev.addr, metadata !11528, metadata !DIExpression()), !dbg !11529
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev, metadata !11530, metadata !DIExpression()), !dbg !11531
  call void @llvm.dbg.declare(metadata %struct.macb** %bp, metadata !11532, metadata !DIExpression()), !dbg !11533
  %0 = load %struct.platform_device*, %struct.platform_device** %pdev.addr, align 8, !dbg !11534
  %call = call i8* @platform_get_drvdata(%struct.platform_device* %0) #12, !dbg !11535
  %1 = bitcast i8* %call to %struct.net_device*, !dbg !11535
  store %struct.net_device* %1, %struct.net_device** %dev, align 8, !dbg !11536
  %2 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !11537
  %tobool = icmp ne %struct.net_device* %2, null, !dbg !11537
  br i1 %tobool, label %if.then, label %if.end10, !dbg !11539

if.then:                                          ; preds = %entry
  %3 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !11540
  %call1 = call i8* @netdev_priv(%struct.net_device* %3) #12, !dbg !11542
  %4 = bitcast i8* %call1 to %struct.macb*, !dbg !11542
  store %struct.macb* %4, %struct.macb** %bp, align 8, !dbg !11543
  %5 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !11544
  %mii_bus = getelementptr inbounds %struct.macb, %struct.macb* %5, i32 0, i32 20, !dbg !11545
  %6 = load %struct.mii_bus*, %struct.mii_bus** %mii_bus, align 8, !dbg !11545
  call void @mdiobus_unregister(%struct.mii_bus* %6) #12, !dbg !11546
  %7 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !11547
  %mii_bus2 = getelementptr inbounds %struct.macb, %struct.macb* %7, i32 0, i32 20, !dbg !11548
  %8 = load %struct.mii_bus*, %struct.mii_bus** %mii_bus2, align 8, !dbg !11548
  call void @mdiobus_free(%struct.mii_bus* %8) #12, !dbg !11549
  %9 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !11550
  call void @unregister_netdev(%struct.net_device* %9) #12, !dbg !11551
  %10 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !11552
  %hresp_err_tasklet = getelementptr inbounds %struct.macb, %struct.macb* %10, i32 0, i32 45, !dbg !11553
  call void @tasklet_kill(%struct.tasklet_struct* %hresp_err_tasklet) #12, !dbg !11554
  %11 = load %struct.platform_device*, %struct.platform_device** %pdev.addr, align 8, !dbg !11555
  %dev3 = getelementptr inbounds %struct.platform_device, %struct.platform_device* %11, i32 0, i32 3, !dbg !11556
  call void @pm_runtime_disable(%struct.device* %dev3) #12, !dbg !11557
  %12 = load %struct.platform_device*, %struct.platform_device** %pdev.addr, align 8, !dbg !11558
  %dev4 = getelementptr inbounds %struct.platform_device, %struct.platform_device* %12, i32 0, i32 3, !dbg !11559
  call void @pm_runtime_dont_use_autosuspend(%struct.device* %dev4) #12, !dbg !11560
  %13 = load %struct.platform_device*, %struct.platform_device** %pdev.addr, align 8, !dbg !11561
  %dev5 = getelementptr inbounds %struct.platform_device, %struct.platform_device* %13, i32 0, i32 3, !dbg !11563
  %call6 = call zeroext i1 @pm_runtime_suspended(%struct.device* %dev5) #12, !dbg !11564
  br i1 %call6, label %if.end, label %if.then7, !dbg !11565

if.then7:                                         ; preds = %if.then
  %14 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !11566
  %tx_clk = getelementptr inbounds %struct.macb, %struct.macb* %14, i32 0, i32 14, !dbg !11568
  %15 = load %struct.clk*, %struct.clk** %tx_clk, align 8, !dbg !11568
  call void @clk_disable_unprepare(%struct.clk* %15) #12, !dbg !11569
  %16 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !11570
  %hclk = getelementptr inbounds %struct.macb, %struct.macb* %16, i32 0, i32 13, !dbg !11571
  %17 = load %struct.clk*, %struct.clk** %hclk, align 8, !dbg !11571
  call void @clk_disable_unprepare(%struct.clk* %17) #12, !dbg !11572
  %18 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !11573
  %pclk = getelementptr inbounds %struct.macb, %struct.macb* %18, i32 0, i32 12, !dbg !11574
  %19 = load %struct.clk*, %struct.clk** %pclk, align 8, !dbg !11574
  call void @clk_disable_unprepare(%struct.clk* %19) #12, !dbg !11575
  %20 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !11576
  %rx_clk = getelementptr inbounds %struct.macb, %struct.macb* %20, i32 0, i32 15, !dbg !11577
  %21 = load %struct.clk*, %struct.clk** %rx_clk, align 8, !dbg !11577
  call void @clk_disable_unprepare(%struct.clk* %21) #12, !dbg !11578
  %22 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !11579
  %tsu_clk = getelementptr inbounds %struct.macb, %struct.macb* %22, i32 0, i32 16, !dbg !11580
  %23 = load %struct.clk*, %struct.clk** %tsu_clk, align 8, !dbg !11580
  call void @clk_disable_unprepare(%struct.clk* %23) #12, !dbg !11581
  %24 = load %struct.platform_device*, %struct.platform_device** %pdev.addr, align 8, !dbg !11582
  %dev8 = getelementptr inbounds %struct.platform_device, %struct.platform_device* %24, i32 0, i32 3, !dbg !11583
  %call9 = call i32 @pm_runtime_set_suspended(%struct.device* %dev8) #12, !dbg !11584
  br label %if.end, !dbg !11585

if.end:                                           ; preds = %if.then7, %if.then
  %25 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !11586
  %phylink = getelementptr inbounds %struct.macb, %struct.macb* %25, i32 0, i32 21, !dbg !11587
  %26 = load %struct.phylink*, %struct.phylink** %phylink, align 8, !dbg !11587
  call void @phylink_destroy(%struct.phylink* %26) #12, !dbg !11588
  %27 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !11589
  call void @free_netdev(%struct.net_device* %27) #12, !dbg !11590
  br label %if.end10, !dbg !11591

if.end10:                                         ; preds = %if.end, %entry
  ret i32 0, !dbg !11592
}

; Function Attrs: nounwind readnone speculatable willreturn
declare void @llvm.dbg.declare(metadata, metadata, metadata) #3

; Function Attrs: noredzone
declare dso_local %struct.resource* @platform_get_resource(%struct.platform_device*, i32, i32) #1

; Function Attrs: noredzone
declare dso_local i8* @devm_ioremap_resource(%struct.device*, %struct.resource*) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @IS_ERR(i8* %ptr) #2 !dbg !11593 {
entry:
  %ptr.addr = alloca i8*, align 8
  store i8* %ptr, i8** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %ptr.addr, metadata !11597, metadata !DIExpression()), !dbg !11598
  %0 = load i8*, i8** %ptr.addr, align 8, !dbg !11599
  %1 = ptrtoint i8* %0 to i64, !dbg !11599
  %2 = inttoptr i64 %1 to i8*, !dbg !11599
  %3 = ptrtoint i8* %2 to i64, !dbg !11599
  %cmp = icmp uge i64 %3, -4095, !dbg !11599
  %lnot = xor i1 %cmp, true, !dbg !11599
  %lnot1 = xor i1 %lnot, true, !dbg !11599
  %lnot.ext = zext i1 %lnot1 to i32, !dbg !11599
  %conv = sext i32 %lnot.ext to i64, !dbg !11599
  %tobool = icmp ne i64 %conv, 0, !dbg !11599
  ret i1 %tobool, !dbg !11600
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @PTR_ERR(i8* %ptr) #2 !dbg !11601 {
entry:
  %ptr.addr = alloca i8*, align 8
  store i8* %ptr, i8** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %ptr.addr, metadata !11604, metadata !DIExpression()), !dbg !11605
  %0 = load i8*, i8** %ptr.addr, align 8, !dbg !11606
  %1 = ptrtoint i8* %0 to i64, !dbg !11607
  ret i64 %1, !dbg !11608
}

; Function Attrs: noredzone
declare dso_local %struct.of_device_id* @of_match_node(%struct.of_device_id*, %struct.device_node*) #1

; Function Attrs: noredzone
declare dso_local void @pm_runtime_set_autosuspend_delay(%struct.device*, i32) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @pm_runtime_use_autosuspend(%struct.device* %dev) #2 !dbg !11609 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !11611, metadata !DIExpression()), !dbg !11612
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !11613
  call void @__pm_runtime_use_autosuspend(%struct.device* %0, i1 zeroext true) #12, !dbg !11614
  ret void, !dbg !11615
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @pm_runtime_get_noresume(%struct.device* %dev) #2 !dbg !11616 {
entry:
  %v.addr.i1.i = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i1.i, metadata !11617, metadata !DIExpression()), !dbg !11623
  %v.addr.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %v.addr.i.i, metadata !11628, metadata !DIExpression()), !dbg !11636
  %size.addr.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i, metadata !11638, metadata !DIExpression()), !dbg !11639
  %v.addr.i = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i, metadata !11640, metadata !DIExpression()), !dbg !11641
  %dev.addr = alloca %struct.device*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !11642, metadata !DIExpression()), !dbg !11643
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !11644
  %power = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 11, !dbg !11645
  %usage_count = getelementptr inbounds %struct.dev_pm_info, %struct.dev_pm_info* %power, i32 0, i32 13, !dbg !11646
  store %struct.atomic_t* %usage_count, %struct.atomic_t** %v.addr.i, align 8
  %1 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i, align 8, !dbg !11647
  %2 = bitcast %struct.atomic_t* %1 to i8*, !dbg !11647
  store i8* %2, i8** %v.addr.i.i, align 8
  store i64 4, i64* %size.addr.i.i, align 8
  %3 = load i8*, i8** %v.addr.i.i, align 8, !dbg !11648
  %4 = load i64, i64* %size.addr.i.i, align 8, !dbg !11649
  %conv.i.i = trunc i64 %4 to i32, !dbg !11649
  %call.i.i = call zeroext i1 @kasan_check_write(i8* %3, i32 %conv.i.i) #14, !dbg !11650
  %5 = load i8*, i8** %v.addr.i.i, align 8, !dbg !11651
  %6 = load i64, i64* %size.addr.i.i, align 8, !dbg !11651
  call void @kcsan_check_access(i8* %5, i64 %6, i32 7) #14, !dbg !11651
  %7 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i, align 8, !dbg !11652
  store %struct.atomic_t* %7, %struct.atomic_t** %v.addr.i1.i, align 8
  %8 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i1.i, align 8, !dbg !11653
  %counter.i.i = getelementptr inbounds %struct.atomic_t, %struct.atomic_t* %8, i32 0, i32 0, !dbg !11654
  call void asm sideeffect "incl $0", "=*m,*m,~{memory},~{dirflag},~{fpsr},~{flags}"(i32* %counter.i.i, i32* %counter.i.i) #8, !dbg !11655, !srcloc !11656
  ret void, !dbg !11657
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @pm_runtime_set_active(%struct.device* %dev) #2 !dbg !11658 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !11659, metadata !DIExpression()), !dbg !11660
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !11661
  %call = call i32 @__pm_runtime_set_status(%struct.device* %0, i32 0) #12, !dbg !11662
  ret i32 %call, !dbg !11663
}

; Function Attrs: noredzone
declare dso_local void @pm_runtime_enable(%struct.device*) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @hw_is_native_io(i8* %addr) #2 !dbg !11664 {
entry:
  %addr.addr = alloca i8*, align 8
  %value = alloca i32, align 4
  store i8* %addr, i8** %addr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %addr.addr, metadata !11667, metadata !DIExpression()), !dbg !11668
  call void @llvm.dbg.declare(metadata i32* %value, metadata !11669, metadata !DIExpression()), !dbg !11670
  store i32 2, i32* %value, align 4, !dbg !11670
  %0 = load i32, i32* %value, align 4, !dbg !11671
  %1 = load i8*, i8** %addr.addr, align 8, !dbg !11672
  %add.ptr = getelementptr i8, i8* %1, i64 0, !dbg !11673
  call void @__writel(i32 %0, i8* %add.ptr) #12, !dbg !11674
  %2 = load i8*, i8** %addr.addr, align 8, !dbg !11675
  %add.ptr1 = getelementptr i8, i8* %2, i64 0, !dbg !11676
  %call = call i32 @__readl(i8* %add.ptr1) #12, !dbg !11677
  store i32 %call, i32* %value, align 4, !dbg !11678
  %3 = load i8*, i8** %addr.addr, align 8, !dbg !11679
  %add.ptr2 = getelementptr i8, i8* %3, i64 0, !dbg !11680
  call void @__writel(i32 0, i8* %add.ptr2) #12, !dbg !11681
  %4 = load i32, i32* %value, align 4, !dbg !11682
  %cmp = icmp eq i32 %4, 2, !dbg !11683
  ret i1 %cmp, !dbg !11684
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @macb_probe_queues(i8* %mem, i1 zeroext %native_io, i32* %queue_mask, i32* %num_queues) #2 !dbg !11685 {
entry:
  %w.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %w.addr.i, metadata !11688, metadata !DIExpression()), !dbg !11693
  %res.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %res.i, metadata !11695, metadata !DIExpression()), !dbg !11696
  %mem.addr = alloca i8*, align 8
  %native_io.addr = alloca i8, align 1
  %queue_mask.addr = alloca i32*, align 8
  %num_queues.addr = alloca i32*, align 8
  store i8* %mem, i8** %mem.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %mem.addr, metadata !11697, metadata !DIExpression()), !dbg !11698
  %frombool = zext i1 %native_io to i8
  store i8 %frombool, i8* %native_io.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %native_io.addr, metadata !11699, metadata !DIExpression()), !dbg !11700
  store i32* %queue_mask, i32** %queue_mask.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %queue_mask.addr, metadata !11701, metadata !DIExpression()), !dbg !11702
  store i32* %num_queues, i32** %num_queues.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %num_queues.addr, metadata !11703, metadata !DIExpression()), !dbg !11704
  %0 = load i32*, i32** %queue_mask.addr, align 8, !dbg !11705
  store i32 1, i32* %0, align 4, !dbg !11706
  %1 = load i32*, i32** %num_queues.addr, align 8, !dbg !11707
  store i32 1, i32* %1, align 4, !dbg !11708
  %2 = load i8*, i8** %mem.addr, align 8, !dbg !11709
  %3 = load i8, i8* %native_io.addr, align 1, !dbg !11711
  %tobool = trunc i8 %3 to i1, !dbg !11711
  %call = call zeroext i1 @hw_is_gem(i8* %2, i1 zeroext %tobool) #12, !dbg !11712
  br i1 %call, label %if.end, label %if.then, !dbg !11713

if.then:                                          ; preds = %entry
  br label %return, !dbg !11714

if.end:                                           ; preds = %entry
  %4 = load i8*, i8** %mem.addr, align 8, !dbg !11715
  %add.ptr = getelementptr i8, i8* %4, i64 660, !dbg !11715
  %call1 = call i32 @__readl(i8* %add.ptr) #12, !dbg !11715
  %and = and i32 %call1, 255, !dbg !11716
  %5 = load i32*, i32** %queue_mask.addr, align 8, !dbg !11717
  %6 = load i32, i32* %5, align 4, !dbg !11718
  %or = or i32 %6, %and, !dbg !11718
  store i32 %or, i32* %5, align 4, !dbg !11718
  %7 = load i32*, i32** %queue_mask.addr, align 8, !dbg !11719
  %8 = load i32, i32* %7, align 4, !dbg !11719
  %9 = call i1 @llvm.is.constant.i32(i32 %8), !dbg !11719
  br i1 %9, label %cond.true, label %cond.false, !dbg !11719

cond.true:                                        ; preds = %if.end
  %10 = load i32*, i32** %queue_mask.addr, align 8, !dbg !11719
  %11 = load i32, i32* %10, align 4, !dbg !11719
  %conv = zext i32 %11 to i64, !dbg !11719
  %and2 = and i64 %conv, 1, !dbg !11719
  %tobool3 = icmp ne i64 %and2, 0, !dbg !11719
  %lnot = xor i1 %tobool3, true, !dbg !11719
  %lnot4 = xor i1 %lnot, true, !dbg !11719
  %lnot.ext = zext i1 %lnot4 to i32, !dbg !11719
  %12 = load i32*, i32** %queue_mask.addr, align 8, !dbg !11719
  %13 = load i32, i32* %12, align 4, !dbg !11719
  %conv5 = zext i32 %13 to i64, !dbg !11719
  %and6 = and i64 %conv5, 2, !dbg !11719
  %tobool7 = icmp ne i64 %and6, 0, !dbg !11719
  %lnot8 = xor i1 %tobool7, true, !dbg !11719
  %lnot10 = xor i1 %lnot8, true, !dbg !11719
  %lnot.ext11 = zext i1 %lnot10 to i32, !dbg !11719
  %add = add i32 %lnot.ext, %lnot.ext11, !dbg !11719
  %14 = load i32*, i32** %queue_mask.addr, align 8, !dbg !11719
  %15 = load i32, i32* %14, align 4, !dbg !11719
  %conv12 = zext i32 %15 to i64, !dbg !11719
  %and13 = and i64 %conv12, 4, !dbg !11719
  %tobool14 = icmp ne i64 %and13, 0, !dbg !11719
  %lnot15 = xor i1 %tobool14, true, !dbg !11719
  %lnot17 = xor i1 %lnot15, true, !dbg !11719
  %lnot.ext18 = zext i1 %lnot17 to i32, !dbg !11719
  %add19 = add i32 %add, %lnot.ext18, !dbg !11719
  %16 = load i32*, i32** %queue_mask.addr, align 8, !dbg !11719
  %17 = load i32, i32* %16, align 4, !dbg !11719
  %conv20 = zext i32 %17 to i64, !dbg !11719
  %and21 = and i64 %conv20, 8, !dbg !11719
  %tobool22 = icmp ne i64 %and21, 0, !dbg !11719
  %lnot23 = xor i1 %tobool22, true, !dbg !11719
  %lnot25 = xor i1 %lnot23, true, !dbg !11719
  %lnot.ext26 = zext i1 %lnot25 to i32, !dbg !11719
  %add27 = add i32 %add19, %lnot.ext26, !dbg !11719
  %18 = load i32*, i32** %queue_mask.addr, align 8, !dbg !11719
  %19 = load i32, i32* %18, align 4, !dbg !11719
  %conv28 = zext i32 %19 to i64, !dbg !11719
  %and29 = and i64 %conv28, 16, !dbg !11719
  %tobool30 = icmp ne i64 %and29, 0, !dbg !11719
  %lnot31 = xor i1 %tobool30, true, !dbg !11719
  %lnot33 = xor i1 %lnot31, true, !dbg !11719
  %lnot.ext34 = zext i1 %lnot33 to i32, !dbg !11719
  %add35 = add i32 %add27, %lnot.ext34, !dbg !11719
  %20 = load i32*, i32** %queue_mask.addr, align 8, !dbg !11719
  %21 = load i32, i32* %20, align 4, !dbg !11719
  %conv36 = zext i32 %21 to i64, !dbg !11719
  %and37 = and i64 %conv36, 32, !dbg !11719
  %tobool38 = icmp ne i64 %and37, 0, !dbg !11719
  %lnot39 = xor i1 %tobool38, true, !dbg !11719
  %lnot41 = xor i1 %lnot39, true, !dbg !11719
  %lnot.ext42 = zext i1 %lnot41 to i32, !dbg !11719
  %add43 = add i32 %add35, %lnot.ext42, !dbg !11719
  %22 = load i32*, i32** %queue_mask.addr, align 8, !dbg !11719
  %23 = load i32, i32* %22, align 4, !dbg !11719
  %conv44 = zext i32 %23 to i64, !dbg !11719
  %and45 = and i64 %conv44, 64, !dbg !11719
  %tobool46 = icmp ne i64 %and45, 0, !dbg !11719
  %lnot47 = xor i1 %tobool46, true, !dbg !11719
  %lnot49 = xor i1 %lnot47, true, !dbg !11719
  %lnot.ext50 = zext i1 %lnot49 to i32, !dbg !11719
  %add51 = add i32 %add43, %lnot.ext50, !dbg !11719
  %24 = load i32*, i32** %queue_mask.addr, align 8, !dbg !11719
  %25 = load i32, i32* %24, align 4, !dbg !11719
  %conv52 = zext i32 %25 to i64, !dbg !11719
  %and53 = and i64 %conv52, 128, !dbg !11719
  %tobool54 = icmp ne i64 %and53, 0, !dbg !11719
  %lnot55 = xor i1 %tobool54, true, !dbg !11719
  %lnot57 = xor i1 %lnot55, true, !dbg !11719
  %lnot.ext58 = zext i1 %lnot57 to i32, !dbg !11719
  %add59 = add i32 %add51, %lnot.ext58, !dbg !11719
  %26 = load i32*, i32** %queue_mask.addr, align 8, !dbg !11719
  %27 = load i32, i32* %26, align 4, !dbg !11719
  %shr = lshr i32 %27, 8, !dbg !11719
  %conv60 = zext i32 %shr to i64, !dbg !11719
  %and61 = and i64 %conv60, 1, !dbg !11719
  %tobool62 = icmp ne i64 %and61, 0, !dbg !11719
  %lnot63 = xor i1 %tobool62, true, !dbg !11719
  %lnot65 = xor i1 %lnot63, true, !dbg !11719
  %lnot.ext66 = zext i1 %lnot65 to i32, !dbg !11719
  %28 = load i32*, i32** %queue_mask.addr, align 8, !dbg !11719
  %29 = load i32, i32* %28, align 4, !dbg !11719
  %shr67 = lshr i32 %29, 8, !dbg !11719
  %conv68 = zext i32 %shr67 to i64, !dbg !11719
  %and69 = and i64 %conv68, 2, !dbg !11719
  %tobool70 = icmp ne i64 %and69, 0, !dbg !11719
  %lnot71 = xor i1 %tobool70, true, !dbg !11719
  %lnot73 = xor i1 %lnot71, true, !dbg !11719
  %lnot.ext74 = zext i1 %lnot73 to i32, !dbg !11719
  %add75 = add i32 %lnot.ext66, %lnot.ext74, !dbg !11719
  %30 = load i32*, i32** %queue_mask.addr, align 8, !dbg !11719
  %31 = load i32, i32* %30, align 4, !dbg !11719
  %shr76 = lshr i32 %31, 8, !dbg !11719
  %conv77 = zext i32 %shr76 to i64, !dbg !11719
  %and78 = and i64 %conv77, 4, !dbg !11719
  %tobool79 = icmp ne i64 %and78, 0, !dbg !11719
  %lnot80 = xor i1 %tobool79, true, !dbg !11719
  %lnot82 = xor i1 %lnot80, true, !dbg !11719
  %lnot.ext83 = zext i1 %lnot82 to i32, !dbg !11719
  %add84 = add i32 %add75, %lnot.ext83, !dbg !11719
  %32 = load i32*, i32** %queue_mask.addr, align 8, !dbg !11719
  %33 = load i32, i32* %32, align 4, !dbg !11719
  %shr85 = lshr i32 %33, 8, !dbg !11719
  %conv86 = zext i32 %shr85 to i64, !dbg !11719
  %and87 = and i64 %conv86, 8, !dbg !11719
  %tobool88 = icmp ne i64 %and87, 0, !dbg !11719
  %lnot89 = xor i1 %tobool88, true, !dbg !11719
  %lnot91 = xor i1 %lnot89, true, !dbg !11719
  %lnot.ext92 = zext i1 %lnot91 to i32, !dbg !11719
  %add93 = add i32 %add84, %lnot.ext92, !dbg !11719
  %34 = load i32*, i32** %queue_mask.addr, align 8, !dbg !11719
  %35 = load i32, i32* %34, align 4, !dbg !11719
  %shr94 = lshr i32 %35, 8, !dbg !11719
  %conv95 = zext i32 %shr94 to i64, !dbg !11719
  %and96 = and i64 %conv95, 16, !dbg !11719
  %tobool97 = icmp ne i64 %and96, 0, !dbg !11719
  %lnot98 = xor i1 %tobool97, true, !dbg !11719
  %lnot100 = xor i1 %lnot98, true, !dbg !11719
  %lnot.ext101 = zext i1 %lnot100 to i32, !dbg !11719
  %add102 = add i32 %add93, %lnot.ext101, !dbg !11719
  %36 = load i32*, i32** %queue_mask.addr, align 8, !dbg !11719
  %37 = load i32, i32* %36, align 4, !dbg !11719
  %shr103 = lshr i32 %37, 8, !dbg !11719
  %conv104 = zext i32 %shr103 to i64, !dbg !11719
  %and105 = and i64 %conv104, 32, !dbg !11719
  %tobool106 = icmp ne i64 %and105, 0, !dbg !11719
  %lnot107 = xor i1 %tobool106, true, !dbg !11719
  %lnot109 = xor i1 %lnot107, true, !dbg !11719
  %lnot.ext110 = zext i1 %lnot109 to i32, !dbg !11719
  %add111 = add i32 %add102, %lnot.ext110, !dbg !11719
  %38 = load i32*, i32** %queue_mask.addr, align 8, !dbg !11719
  %39 = load i32, i32* %38, align 4, !dbg !11719
  %shr112 = lshr i32 %39, 8, !dbg !11719
  %conv113 = zext i32 %shr112 to i64, !dbg !11719
  %and114 = and i64 %conv113, 64, !dbg !11719
  %tobool115 = icmp ne i64 %and114, 0, !dbg !11719
  %lnot116 = xor i1 %tobool115, true, !dbg !11719
  %lnot118 = xor i1 %lnot116, true, !dbg !11719
  %lnot.ext119 = zext i1 %lnot118 to i32, !dbg !11719
  %add120 = add i32 %add111, %lnot.ext119, !dbg !11719
  %40 = load i32*, i32** %queue_mask.addr, align 8, !dbg !11719
  %41 = load i32, i32* %40, align 4, !dbg !11719
  %shr121 = lshr i32 %41, 8, !dbg !11719
  %conv122 = zext i32 %shr121 to i64, !dbg !11719
  %and123 = and i64 %conv122, 128, !dbg !11719
  %tobool124 = icmp ne i64 %and123, 0, !dbg !11719
  %lnot125 = xor i1 %tobool124, true, !dbg !11719
  %lnot127 = xor i1 %lnot125, true, !dbg !11719
  %lnot.ext128 = zext i1 %lnot127 to i32, !dbg !11719
  %add129 = add i32 %add120, %lnot.ext128, !dbg !11719
  %add130 = add i32 %add59, %add129, !dbg !11719
  %42 = load i32*, i32** %queue_mask.addr, align 8, !dbg !11719
  %43 = load i32, i32* %42, align 4, !dbg !11719
  %shr131 = lshr i32 %43, 16, !dbg !11719
  %conv132 = zext i32 %shr131 to i64, !dbg !11719
  %and133 = and i64 %conv132, 1, !dbg !11719
  %tobool134 = icmp ne i64 %and133, 0, !dbg !11719
  %lnot135 = xor i1 %tobool134, true, !dbg !11719
  %lnot137 = xor i1 %lnot135, true, !dbg !11719
  %lnot.ext138 = zext i1 %lnot137 to i32, !dbg !11719
  %44 = load i32*, i32** %queue_mask.addr, align 8, !dbg !11719
  %45 = load i32, i32* %44, align 4, !dbg !11719
  %shr139 = lshr i32 %45, 16, !dbg !11719
  %conv140 = zext i32 %shr139 to i64, !dbg !11719
  %and141 = and i64 %conv140, 2, !dbg !11719
  %tobool142 = icmp ne i64 %and141, 0, !dbg !11719
  %lnot143 = xor i1 %tobool142, true, !dbg !11719
  %lnot145 = xor i1 %lnot143, true, !dbg !11719
  %lnot.ext146 = zext i1 %lnot145 to i32, !dbg !11719
  %add147 = add i32 %lnot.ext138, %lnot.ext146, !dbg !11719
  %46 = load i32*, i32** %queue_mask.addr, align 8, !dbg !11719
  %47 = load i32, i32* %46, align 4, !dbg !11719
  %shr148 = lshr i32 %47, 16, !dbg !11719
  %conv149 = zext i32 %shr148 to i64, !dbg !11719
  %and150 = and i64 %conv149, 4, !dbg !11719
  %tobool151 = icmp ne i64 %and150, 0, !dbg !11719
  %lnot152 = xor i1 %tobool151, true, !dbg !11719
  %lnot154 = xor i1 %lnot152, true, !dbg !11719
  %lnot.ext155 = zext i1 %lnot154 to i32, !dbg !11719
  %add156 = add i32 %add147, %lnot.ext155, !dbg !11719
  %48 = load i32*, i32** %queue_mask.addr, align 8, !dbg !11719
  %49 = load i32, i32* %48, align 4, !dbg !11719
  %shr157 = lshr i32 %49, 16, !dbg !11719
  %conv158 = zext i32 %shr157 to i64, !dbg !11719
  %and159 = and i64 %conv158, 8, !dbg !11719
  %tobool160 = icmp ne i64 %and159, 0, !dbg !11719
  %lnot161 = xor i1 %tobool160, true, !dbg !11719
  %lnot163 = xor i1 %lnot161, true, !dbg !11719
  %lnot.ext164 = zext i1 %lnot163 to i32, !dbg !11719
  %add165 = add i32 %add156, %lnot.ext164, !dbg !11719
  %50 = load i32*, i32** %queue_mask.addr, align 8, !dbg !11719
  %51 = load i32, i32* %50, align 4, !dbg !11719
  %shr166 = lshr i32 %51, 16, !dbg !11719
  %conv167 = zext i32 %shr166 to i64, !dbg !11719
  %and168 = and i64 %conv167, 16, !dbg !11719
  %tobool169 = icmp ne i64 %and168, 0, !dbg !11719
  %lnot170 = xor i1 %tobool169, true, !dbg !11719
  %lnot172 = xor i1 %lnot170, true, !dbg !11719
  %lnot.ext173 = zext i1 %lnot172 to i32, !dbg !11719
  %add174 = add i32 %add165, %lnot.ext173, !dbg !11719
  %52 = load i32*, i32** %queue_mask.addr, align 8, !dbg !11719
  %53 = load i32, i32* %52, align 4, !dbg !11719
  %shr175 = lshr i32 %53, 16, !dbg !11719
  %conv176 = zext i32 %shr175 to i64, !dbg !11719
  %and177 = and i64 %conv176, 32, !dbg !11719
  %tobool178 = icmp ne i64 %and177, 0, !dbg !11719
  %lnot179 = xor i1 %tobool178, true, !dbg !11719
  %lnot181 = xor i1 %lnot179, true, !dbg !11719
  %lnot.ext182 = zext i1 %lnot181 to i32, !dbg !11719
  %add183 = add i32 %add174, %lnot.ext182, !dbg !11719
  %54 = load i32*, i32** %queue_mask.addr, align 8, !dbg !11719
  %55 = load i32, i32* %54, align 4, !dbg !11719
  %shr184 = lshr i32 %55, 16, !dbg !11719
  %conv185 = zext i32 %shr184 to i64, !dbg !11719
  %and186 = and i64 %conv185, 64, !dbg !11719
  %tobool187 = icmp ne i64 %and186, 0, !dbg !11719
  %lnot188 = xor i1 %tobool187, true, !dbg !11719
  %lnot190 = xor i1 %lnot188, true, !dbg !11719
  %lnot.ext191 = zext i1 %lnot190 to i32, !dbg !11719
  %add192 = add i32 %add183, %lnot.ext191, !dbg !11719
  %56 = load i32*, i32** %queue_mask.addr, align 8, !dbg !11719
  %57 = load i32, i32* %56, align 4, !dbg !11719
  %shr193 = lshr i32 %57, 16, !dbg !11719
  %conv194 = zext i32 %shr193 to i64, !dbg !11719
  %and195 = and i64 %conv194, 128, !dbg !11719
  %tobool196 = icmp ne i64 %and195, 0, !dbg !11719
  %lnot197 = xor i1 %tobool196, true, !dbg !11719
  %lnot199 = xor i1 %lnot197, true, !dbg !11719
  %lnot.ext200 = zext i1 %lnot199 to i32, !dbg !11719
  %add201 = add i32 %add192, %lnot.ext200, !dbg !11719
  %58 = load i32*, i32** %queue_mask.addr, align 8, !dbg !11719
  %59 = load i32, i32* %58, align 4, !dbg !11719
  %shr202 = lshr i32 %59, 16, !dbg !11719
  %shr203 = lshr i32 %shr202, 8, !dbg !11719
  %conv204 = zext i32 %shr203 to i64, !dbg !11719
  %and205 = and i64 %conv204, 1, !dbg !11719
  %tobool206 = icmp ne i64 %and205, 0, !dbg !11719
  %lnot207 = xor i1 %tobool206, true, !dbg !11719
  %lnot209 = xor i1 %lnot207, true, !dbg !11719
  %lnot.ext210 = zext i1 %lnot209 to i32, !dbg !11719
  %60 = load i32*, i32** %queue_mask.addr, align 8, !dbg !11719
  %61 = load i32, i32* %60, align 4, !dbg !11719
  %shr211 = lshr i32 %61, 16, !dbg !11719
  %shr212 = lshr i32 %shr211, 8, !dbg !11719
  %conv213 = zext i32 %shr212 to i64, !dbg !11719
  %and214 = and i64 %conv213, 2, !dbg !11719
  %tobool215 = icmp ne i64 %and214, 0, !dbg !11719
  %lnot216 = xor i1 %tobool215, true, !dbg !11719
  %lnot218 = xor i1 %lnot216, true, !dbg !11719
  %lnot.ext219 = zext i1 %lnot218 to i32, !dbg !11719
  %add220 = add i32 %lnot.ext210, %lnot.ext219, !dbg !11719
  %62 = load i32*, i32** %queue_mask.addr, align 8, !dbg !11719
  %63 = load i32, i32* %62, align 4, !dbg !11719
  %shr221 = lshr i32 %63, 16, !dbg !11719
  %shr222 = lshr i32 %shr221, 8, !dbg !11719
  %conv223 = zext i32 %shr222 to i64, !dbg !11719
  %and224 = and i64 %conv223, 4, !dbg !11719
  %tobool225 = icmp ne i64 %and224, 0, !dbg !11719
  %lnot226 = xor i1 %tobool225, true, !dbg !11719
  %lnot228 = xor i1 %lnot226, true, !dbg !11719
  %lnot.ext229 = zext i1 %lnot228 to i32, !dbg !11719
  %add230 = add i32 %add220, %lnot.ext229, !dbg !11719
  %64 = load i32*, i32** %queue_mask.addr, align 8, !dbg !11719
  %65 = load i32, i32* %64, align 4, !dbg !11719
  %shr231 = lshr i32 %65, 16, !dbg !11719
  %shr232 = lshr i32 %shr231, 8, !dbg !11719
  %conv233 = zext i32 %shr232 to i64, !dbg !11719
  %and234 = and i64 %conv233, 8, !dbg !11719
  %tobool235 = icmp ne i64 %and234, 0, !dbg !11719
  %lnot236 = xor i1 %tobool235, true, !dbg !11719
  %lnot238 = xor i1 %lnot236, true, !dbg !11719
  %lnot.ext239 = zext i1 %lnot238 to i32, !dbg !11719
  %add240 = add i32 %add230, %lnot.ext239, !dbg !11719
  %66 = load i32*, i32** %queue_mask.addr, align 8, !dbg !11719
  %67 = load i32, i32* %66, align 4, !dbg !11719
  %shr241 = lshr i32 %67, 16, !dbg !11719
  %shr242 = lshr i32 %shr241, 8, !dbg !11719
  %conv243 = zext i32 %shr242 to i64, !dbg !11719
  %and244 = and i64 %conv243, 16, !dbg !11719
  %tobool245 = icmp ne i64 %and244, 0, !dbg !11719
  %lnot246 = xor i1 %tobool245, true, !dbg !11719
  %lnot248 = xor i1 %lnot246, true, !dbg !11719
  %lnot.ext249 = zext i1 %lnot248 to i32, !dbg !11719
  %add250 = add i32 %add240, %lnot.ext249, !dbg !11719
  %68 = load i32*, i32** %queue_mask.addr, align 8, !dbg !11719
  %69 = load i32, i32* %68, align 4, !dbg !11719
  %shr251 = lshr i32 %69, 16, !dbg !11719
  %shr252 = lshr i32 %shr251, 8, !dbg !11719
  %conv253 = zext i32 %shr252 to i64, !dbg !11719
  %and254 = and i64 %conv253, 32, !dbg !11719
  %tobool255 = icmp ne i64 %and254, 0, !dbg !11719
  %lnot256 = xor i1 %tobool255, true, !dbg !11719
  %lnot258 = xor i1 %lnot256, true, !dbg !11719
  %lnot.ext259 = zext i1 %lnot258 to i32, !dbg !11719
  %add260 = add i32 %add250, %lnot.ext259, !dbg !11719
  %70 = load i32*, i32** %queue_mask.addr, align 8, !dbg !11719
  %71 = load i32, i32* %70, align 4, !dbg !11719
  %shr261 = lshr i32 %71, 16, !dbg !11719
  %shr262 = lshr i32 %shr261, 8, !dbg !11719
  %conv263 = zext i32 %shr262 to i64, !dbg !11719
  %and264 = and i64 %conv263, 64, !dbg !11719
  %tobool265 = icmp ne i64 %and264, 0, !dbg !11719
  %lnot266 = xor i1 %tobool265, true, !dbg !11719
  %lnot268 = xor i1 %lnot266, true, !dbg !11719
  %lnot.ext269 = zext i1 %lnot268 to i32, !dbg !11719
  %add270 = add i32 %add260, %lnot.ext269, !dbg !11719
  %72 = load i32*, i32** %queue_mask.addr, align 8, !dbg !11719
  %73 = load i32, i32* %72, align 4, !dbg !11719
  %shr271 = lshr i32 %73, 16, !dbg !11719
  %shr272 = lshr i32 %shr271, 8, !dbg !11719
  %conv273 = zext i32 %shr272 to i64, !dbg !11719
  %and274 = and i64 %conv273, 128, !dbg !11719
  %tobool275 = icmp ne i64 %and274, 0, !dbg !11719
  %lnot276 = xor i1 %tobool275, true, !dbg !11719
  %lnot278 = xor i1 %lnot276, true, !dbg !11719
  %lnot.ext279 = zext i1 %lnot278 to i32, !dbg !11719
  %add280 = add i32 %add270, %lnot.ext279, !dbg !11719
  %add281 = add i32 %add201, %add280, !dbg !11719
  %add282 = add i32 %add130, %add281, !dbg !11719
  br label %cond.end, !dbg !11719

cond.false:                                       ; preds = %if.end
  %74 = load i32*, i32** %queue_mask.addr, align 8, !dbg !11719
  %75 = load i32, i32* %74, align 4, !dbg !11719
  store i32 %75, i32* %w.addr.i, align 4
  %76 = load i32, i32* %w.addr.i, align 4, !dbg !11720
  %77 = call i32 asm "# ALT: oldnstr\0A661:\0A\09call __sw_hweight32\0A662:\0A# ALT: padding\0A.skip -(((6651f-6641f)-(662b-661b)) > 0) * ((6651f-6641f)-(662b-661b)),0x90\0A663:\0A.pushsection .altinstructions,\22a\22\0A .long 661b - .\0A .long 6641f - .\0A .word ( 4*32+23)\0A .byte 663b-661b\0A .byte 6651f-6641f\0A .byte 663b-662b\0A.popsection\0A.pushsection .altinstr_replacement, \22ax\22\0A# ALT: replacement 1\0A6641:\0A\09popcntl $1, $0\0A6651:\0A.popsection\0A", "={ax},{di},~{dirflag},~{fpsr},~{flags}"(i32 %76) #15, !dbg !11721, !srcloc !11722
  store i32 %77, i32* %res.i, align 4, !dbg !11721
  %78 = load i32, i32* %res.i, align 4, !dbg !11723
  br label %cond.end, !dbg !11719

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %add282, %cond.true ], [ %78, %cond.false ], !dbg !11719
  %79 = load i32*, i32** %num_queues.addr, align 8, !dbg !11724
  store i32 %cond, i32* %79, align 4, !dbg !11725
  br label %return, !dbg !11726

return:                                           ; preds = %cond.end, %if.then
  ret void, !dbg !11726
}

; Function Attrs: noredzone
declare dso_local %struct.net_device* @alloc_etherdev_mqs(i32, i32, i32) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @netdev_priv(%struct.net_device* %dev) #2 !dbg !11727 {
entry:
  %dev.addr = alloca %struct.net_device*, align 8
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !11730, metadata !DIExpression()), !dbg !11731
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !11732
  %1 = bitcast %struct.net_device* %0 to i8*, !dbg !11733
  %add.ptr = getelementptr i8, i8* %1, i64 1984, !dbg !11734
  ret i8* %add.ptr, !dbg !11735
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @hw_readl_native(%struct.macb* %bp, i32 %offset) #2 !dbg !11736 {
entry:
  %bp.addr = alloca %struct.macb*, align 8
  %offset.addr = alloca i32, align 4
  store %struct.macb* %bp, %struct.macb** %bp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.macb** %bp.addr, metadata !11737, metadata !DIExpression()), !dbg !11738
  store i32 %offset, i32* %offset.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %offset.addr, metadata !11739, metadata !DIExpression()), !dbg !11740
  %0 = load %struct.macb*, %struct.macb** %bp.addr, align 8, !dbg !11741
  %regs = getelementptr inbounds %struct.macb, %struct.macb* %0, i32 0, i32 0, !dbg !11742
  %1 = load i8*, i8** %regs, align 8, !dbg !11742
  %2 = load i32, i32* %offset.addr, align 4, !dbg !11743
  %idx.ext = sext i32 %2 to i64, !dbg !11744
  %add.ptr = getelementptr i8, i8* %1, i64 %idx.ext, !dbg !11744
  %call = call i32 @__readl(i8* %add.ptr) #12, !dbg !11745
  ret i32 %call, !dbg !11746
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @hw_writel_native(%struct.macb* %bp, i32 %offset, i32 %value) #2 !dbg !11747 {
entry:
  %bp.addr = alloca %struct.macb*, align 8
  %offset.addr = alloca i32, align 4
  %value.addr = alloca i32, align 4
  store %struct.macb* %bp, %struct.macb** %bp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.macb** %bp.addr, metadata !11748, metadata !DIExpression()), !dbg !11749
  store i32 %offset, i32* %offset.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %offset.addr, metadata !11750, metadata !DIExpression()), !dbg !11751
  store i32 %value, i32* %value.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %value.addr, metadata !11752, metadata !DIExpression()), !dbg !11753
  %0 = load i32, i32* %value.addr, align 4, !dbg !11754
  %1 = load %struct.macb*, %struct.macb** %bp.addr, align 8, !dbg !11755
  %regs = getelementptr inbounds %struct.macb, %struct.macb* %1, i32 0, i32 0, !dbg !11756
  %2 = load i8*, i8** %regs, align 8, !dbg !11756
  %3 = load i32, i32* %offset.addr, align 4, !dbg !11757
  %idx.ext = sext i32 %3 to i64, !dbg !11758
  %add.ptr = getelementptr i8, i8* %2, i64 %idx.ext, !dbg !11758
  call void @__writel(i32 %0, i8* %add.ptr) #12, !dbg !11759
  ret void, !dbg !11760
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @hw_readl(%struct.macb* %bp, i32 %offset) #2 !dbg !11761 {
entry:
  %bp.addr = alloca %struct.macb*, align 8
  %offset.addr = alloca i32, align 4
  store %struct.macb* %bp, %struct.macb** %bp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.macb** %bp.addr, metadata !11762, metadata !DIExpression()), !dbg !11763
  store i32 %offset, i32* %offset.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %offset.addr, metadata !11764, metadata !DIExpression()), !dbg !11765
  %0 = load %struct.macb*, %struct.macb** %bp.addr, align 8, !dbg !11766
  %regs = getelementptr inbounds %struct.macb, %struct.macb* %0, i32 0, i32 0, !dbg !11766
  %1 = load i8*, i8** %regs, align 8, !dbg !11766
  %2 = load i32, i32* %offset.addr, align 4, !dbg !11766
  %idx.ext = sext i32 %2 to i64, !dbg !11766
  %add.ptr = getelementptr i8, i8* %1, i64 %idx.ext, !dbg !11766
  %call = call i32 @__readl(i8* %add.ptr) #12, !dbg !11766
  ret i32 %call, !dbg !11767
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @hw_writel(%struct.macb* %bp, i32 %offset, i32 %value) #2 !dbg !11768 {
entry:
  %bp.addr = alloca %struct.macb*, align 8
  %offset.addr = alloca i32, align 4
  %value.addr = alloca i32, align 4
  store %struct.macb* %bp, %struct.macb** %bp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.macb** %bp.addr, metadata !11769, metadata !DIExpression()), !dbg !11770
  store i32 %offset, i32* %offset.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %offset.addr, metadata !11771, metadata !DIExpression()), !dbg !11772
  store i32 %value, i32* %value.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %value.addr, metadata !11773, metadata !DIExpression()), !dbg !11774
  %0 = load i32, i32* %value.addr, align 4, !dbg !11775
  %1 = load %struct.macb*, %struct.macb** %bp.addr, align 8, !dbg !11775
  %regs = getelementptr inbounds %struct.macb, %struct.macb* %1, i32 0, i32 0, !dbg !11775
  %2 = load i8*, i8** %regs, align 8, !dbg !11775
  %3 = load i32, i32* %offset.addr, align 4, !dbg !11775
  %idx.ext = sext i32 %3 to i64, !dbg !11775
  %add.ptr = getelementptr i8, i8* %2, i64 %idx.ext, !dbg !11775
  call void @__writel(i32 %0, i8* %add.ptr) #12, !dbg !11775
  ret void, !dbg !11776
}

; Function Attrs: noredzone
declare dso_local i8* @of_get_property(%struct.device_node*, i8*, i32*) #1

; Function Attrs: noredzone
declare dso_local void @device_set_wakeup_capable(%struct.device*, i1 zeroext) #1

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* noalias nocapture writeonly, i8* noalias nocapture readonly, i64, i1 immarg) #4

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @macb_configure_caps(%struct.macb* %bp, %struct.macb_config* %dt_conf) #2 !dbg !11777 {
entry:
  %bp.addr = alloca %struct.macb*, align 8
  %dt_conf.addr = alloca %struct.macb_config*, align 8
  %dcfg = alloca i32, align 4
  store %struct.macb* %bp, %struct.macb** %bp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.macb** %bp.addr, metadata !11780, metadata !DIExpression()), !dbg !11781
  store %struct.macb_config* %dt_conf, %struct.macb_config** %dt_conf.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.macb_config** %dt_conf.addr, metadata !11782, metadata !DIExpression()), !dbg !11783
  call void @llvm.dbg.declare(metadata i32* %dcfg, metadata !11784, metadata !DIExpression()), !dbg !11785
  %0 = load %struct.macb_config*, %struct.macb_config** %dt_conf.addr, align 8, !dbg !11786
  %tobool = icmp ne %struct.macb_config* %0, null, !dbg !11786
  br i1 %tobool, label %if.then, label %if.end, !dbg !11788

if.then:                                          ; preds = %entry
  %1 = load %struct.macb_config*, %struct.macb_config** %dt_conf.addr, align 8, !dbg !11789
  %caps = getelementptr inbounds %struct.macb_config, %struct.macb_config* %1, i32 0, i32 0, !dbg !11790
  %2 = load i32, i32* %caps, align 8, !dbg !11790
  %3 = load %struct.macb*, %struct.macb** %bp.addr, align 8, !dbg !11791
  %caps1 = getelementptr inbounds %struct.macb, %struct.macb* %3, i32 0, i32 23, !dbg !11792
  store i32 %2, i32* %caps1, align 8, !dbg !11793
  br label %if.end, !dbg !11791

if.end:                                           ; preds = %if.then, %entry
  %4 = load %struct.macb*, %struct.macb** %bp.addr, align 8, !dbg !11794
  %regs = getelementptr inbounds %struct.macb, %struct.macb* %4, i32 0, i32 0, !dbg !11796
  %5 = load i8*, i8** %regs, align 8, !dbg !11796
  %6 = load %struct.macb*, %struct.macb** %bp.addr, align 8, !dbg !11797
  %native_io = getelementptr inbounds %struct.macb, %struct.macb* %6, i32 0, i32 1, !dbg !11798
  %7 = load i8, i8* %native_io, align 8, !dbg !11798
  %tobool2 = trunc i8 %7 to i1, !dbg !11798
  %call = call zeroext i1 @hw_is_gem(i8* %5, i1 zeroext %tobool2) #12, !dbg !11799
  br i1 %call, label %if.then3, label %if.end30, !dbg !11800

if.then3:                                         ; preds = %if.end
  %8 = load %struct.macb*, %struct.macb** %bp.addr, align 8, !dbg !11801
  %caps4 = getelementptr inbounds %struct.macb, %struct.macb* %8, i32 0, i32 23, !dbg !11803
  %9 = load i32, i32* %caps4, align 8, !dbg !11804
  %or = or i32 %9, -2147483648, !dbg !11804
  store i32 %or, i32* %caps4, align 8, !dbg !11804
  %10 = load %struct.macb*, %struct.macb** %bp.addr, align 8, !dbg !11805
  %macb_reg_readl = getelementptr inbounds %struct.macb, %struct.macb* %10, i32 0, i32 2, !dbg !11805
  %11 = load i32 (%struct.macb*, i32)*, i32 (%struct.macb*, i32)** %macb_reg_readl, align 8, !dbg !11805
  %12 = load %struct.macb*, %struct.macb** %bp.addr, align 8, !dbg !11805
  %call5 = call i32 %11(%struct.macb* %12, i32 640) #12, !dbg !11805
  store i32 %call5, i32* %dcfg, align 4, !dbg !11806
  %13 = load i32, i32* %dcfg, align 4, !dbg !11807
  %shr = lshr i32 %13, 23, !dbg !11807
  %and = and i32 %shr, 1, !dbg !11807
  %cmp = icmp eq i32 %and, 0, !dbg !11809
  br i1 %cmp, label %if.then6, label %if.end9, !dbg !11810

if.then6:                                         ; preds = %if.then3
  %14 = load %struct.macb*, %struct.macb** %bp.addr, align 8, !dbg !11811
  %caps7 = getelementptr inbounds %struct.macb, %struct.macb* %14, i32 0, i32 23, !dbg !11812
  %15 = load i32, i32* %caps7, align 8, !dbg !11813
  %or8 = or i32 %15, 1, !dbg !11813
  store i32 %or8, i32* %caps7, align 8, !dbg !11813
  br label %if.end9, !dbg !11811

if.end9:                                          ; preds = %if.then6, %if.then3
  %16 = load %struct.macb*, %struct.macb** %bp.addr, align 8, !dbg !11814
  %macb_reg_readl10 = getelementptr inbounds %struct.macb, %struct.macb* %16, i32 0, i32 2, !dbg !11814
  %17 = load i32 (%struct.macb*, i32)*, i32 (%struct.macb*, i32)** %macb_reg_readl10, align 8, !dbg !11814
  %18 = load %struct.macb*, %struct.macb** %bp.addr, align 8, !dbg !11814
  %call11 = call i32 %17(%struct.macb* %18, i32 644) #12, !dbg !11814
  store i32 %call11, i32* %dcfg, align 4, !dbg !11815
  %19 = load i32, i32* %dcfg, align 4, !dbg !11816
  %and12 = and i32 %19, 3145728, !dbg !11818
  %cmp13 = icmp eq i32 %and12, 0, !dbg !11819
  br i1 %cmp13, label %if.then14, label %if.end17, !dbg !11820

if.then14:                                        ; preds = %if.end9
  %20 = load %struct.macb*, %struct.macb** %bp.addr, align 8, !dbg !11821
  %caps15 = getelementptr inbounds %struct.macb, %struct.macb* %20, i32 0, i32 23, !dbg !11822
  %21 = load i32, i32* %caps15, align 8, !dbg !11823
  %or16 = or i32 %21, 268435456, !dbg !11823
  store i32 %or16, i32* %caps15, align 8, !dbg !11823
  br label %if.end17, !dbg !11821

if.end17:                                         ; preds = %if.then14, %if.end9
  %22 = load %struct.macb*, %struct.macb** %bp.addr, align 8, !dbg !11824
  %call18 = call zeroext i1 @gem_has_ptp(%struct.macb* %22) #12, !dbg !11826
  br i1 %call18, label %if.then19, label %if.end29, !dbg !11827

if.then19:                                        ; preds = %if.end17
  %23 = load %struct.macb*, %struct.macb** %bp.addr, align 8, !dbg !11828
  %macb_reg_readl20 = getelementptr inbounds %struct.macb, %struct.macb* %23, i32 0, i32 2, !dbg !11828
  %24 = load i32 (%struct.macb*, i32)*, i32 (%struct.macb*, i32)** %macb_reg_readl20, align 8, !dbg !11828
  %25 = load %struct.macb*, %struct.macb** %bp.addr, align 8, !dbg !11828
  %call21 = call i32 %24(%struct.macb* %25, i32 656) #12, !dbg !11828
  %shr22 = lshr i32 %call21, 8, !dbg !11828
  %and23 = and i32 %shr22, 1, !dbg !11828
  %tobool24 = icmp ne i32 %and23, 0, !dbg !11828
  br i1 %tobool24, label %if.else, label %if.then25, !dbg !11831

if.then25:                                        ; preds = %if.then19
  %26 = load %struct.macb*, %struct.macb** %bp.addr, align 8, !dbg !11832
  %pdev = getelementptr inbounds %struct.macb, %struct.macb* %26, i32 0, i32 11, !dbg !11832
  %27 = load %struct.platform_device*, %struct.platform_device** %pdev, align 8, !dbg !11832
  %dev = getelementptr inbounds %struct.platform_device, %struct.platform_device* %27, i32 0, i32 3, !dbg !11832
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %dev, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.42, i64 0, i64 0)) #13, !dbg !11832
  br label %if.end28, !dbg !11832

if.else:                                          ; preds = %if.then19
  %28 = load %struct.macb*, %struct.macb** %bp.addr, align 8, !dbg !11833
  %hw_dma_cap = getelementptr inbounds %struct.macb, %struct.macb* %28, i32 0, i32 35, !dbg !11835
  %29 = load i8, i8* %hw_dma_cap, align 8, !dbg !11836
  %conv = zext i8 %29 to i32, !dbg !11836
  %or26 = or i32 %conv, 2, !dbg !11836
  %conv27 = trunc i32 %or26 to i8, !dbg !11836
  store i8 %conv27, i8* %hw_dma_cap, align 8, !dbg !11836
  %30 = load %struct.macb*, %struct.macb** %bp.addr, align 8, !dbg !11837
  %ptp_info = getelementptr inbounds %struct.macb, %struct.macb* %30, i32 0, i32 34, !dbg !11838
  store %struct.macb_ptp_info* @gem_ptp_info, %struct.macb_ptp_info** %ptp_info, align 8, !dbg !11839
  br label %if.end28

if.end28:                                         ; preds = %if.else, %if.then25
  br label %if.end29, !dbg !11840

if.end29:                                         ; preds = %if.end28, %if.end17
  br label %if.end30, !dbg !11841

if.end30:                                         ; preds = %if.end29, %if.end
  ret void, !dbg !11842
}

; Function Attrs: noredzone
declare dso_local i32 @dma_set_mask(%struct.device*, i64) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @platform_set_drvdata(%struct.platform_device* %pdev, i8* %data) #2 !dbg !11843 {
entry:
  %pdev.addr = alloca %struct.platform_device*, align 8
  %data.addr = alloca i8*, align 8
  store %struct.platform_device* %pdev, %struct.platform_device** %pdev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.platform_device** %pdev.addr, metadata !11846, metadata !DIExpression()), !dbg !11847
  store i8* %data, i8** %data.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %data.addr, metadata !11848, metadata !DIExpression()), !dbg !11849
  %0 = load %struct.platform_device*, %struct.platform_device** %pdev.addr, align 8, !dbg !11850
  %dev = getelementptr inbounds %struct.platform_device, %struct.platform_device* %0, i32 0, i32 3, !dbg !11851
  %1 = load i8*, i8** %data.addr, align 8, !dbg !11852
  call void @dev_set_drvdata(%struct.device* %dev, i8* %1) #12, !dbg !11853
  ret void, !dbg !11854
}

; Function Attrs: noredzone
declare dso_local i32 @platform_get_irq(%struct.platform_device*, i32) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @macb_dma_desc_get_size(%struct.macb* %bp) #2 !dbg !11855 {
entry:
  %bp.addr = alloca %struct.macb*, align 8
  %desc_size = alloca i32, align 4
  store %struct.macb* %bp, %struct.macb** %bp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.macb** %bp.addr, metadata !11856, metadata !DIExpression()), !dbg !11857
  call void @llvm.dbg.declare(metadata i32* %desc_size, metadata !11858, metadata !DIExpression()), !dbg !11859
  %0 = load %struct.macb*, %struct.macb** %bp.addr, align 8, !dbg !11860
  %hw_dma_cap = getelementptr inbounds %struct.macb, %struct.macb* %0, i32 0, i32 35, !dbg !11861
  %1 = load i8, i8* %hw_dma_cap, align 8, !dbg !11861
  %conv = zext i8 %1 to i32, !dbg !11860
  switch i32 %conv, label %sw.default [
    i32 1, label %sw.bb
    i32 2, label %sw.bb1
    i32 3, label %sw.bb2
  ], !dbg !11862

sw.bb:                                            ; preds = %entry
  store i32 16, i32* %desc_size, align 4, !dbg !11863
  br label %sw.epilog, !dbg !11865

sw.bb1:                                           ; preds = %entry
  store i32 16, i32* %desc_size, align 4, !dbg !11866
  br label %sw.epilog, !dbg !11867

sw.bb2:                                           ; preds = %entry
  store i32 24, i32* %desc_size, align 4, !dbg !11868
  br label %sw.epilog, !dbg !11869

sw.default:                                       ; preds = %entry
  store i32 8, i32* %desc_size, align 4, !dbg !11870
  br label %sw.epilog, !dbg !11871

sw.epilog:                                        ; preds = %sw.default, %sw.bb2, %sw.bb1, %sw.bb
  %2 = load i32, i32* %desc_size, align 4, !dbg !11872
  ret i32 %2, !dbg !11873
}

; Function Attrs: noredzone
declare dso_local i8* @of_get_mac_address(%struct.device_node*) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @IS_ERR_OR_NULL(i8* %ptr) #2 !dbg !11874 {
entry:
  %ptr.addr = alloca i8*, align 8
  store i8* %ptr, i8** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %ptr.addr, metadata !11875, metadata !DIExpression()), !dbg !11876
  %0 = load i8*, i8** %ptr.addr, align 8, !dbg !11877
  %tobool = icmp ne i8* %0, null, !dbg !11877
  %lnot = xor i1 %tobool, true, !dbg !11877
  %lnot1 = xor i1 %lnot, true, !dbg !11877
  %lnot2 = xor i1 %lnot1, true, !dbg !11877
  %lnot.ext = zext i1 %lnot2 to i32, !dbg !11877
  %conv = sext i32 %lnot.ext to i64, !dbg !11877
  %tobool3 = icmp ne i64 %conv, 0, !dbg !11877
  br i1 %tobool3, label %lor.end, label %lor.rhs, !dbg !11878

lor.rhs:                                          ; preds = %entry
  %1 = load i8*, i8** %ptr.addr, align 8, !dbg !11879
  %2 = ptrtoint i8* %1 to i64, !dbg !11879
  %3 = inttoptr i64 %2 to i8*, !dbg !11879
  %4 = ptrtoint i8* %3 to i64, !dbg !11879
  %cmp = icmp uge i64 %4, -4095, !dbg !11879
  %lnot5 = xor i1 %cmp, true, !dbg !11879
  %lnot7 = xor i1 %lnot5, true, !dbg !11879
  %lnot.ext8 = zext i1 %lnot7 to i32, !dbg !11879
  %conv9 = sext i32 %lnot.ext8 to i64, !dbg !11879
  %tobool10 = icmp ne i64 %conv9, 0, !dbg !11878
  br label %lor.end, !dbg !11878

lor.end:                                          ; preds = %lor.rhs, %entry
  %5 = phi i1 [ true, %entry ], [ %tobool10, %lor.rhs ]
  ret i1 %5, !dbg !11880
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @ether_addr_copy(i8* %dst, i8* %src) #2 !dbg !11881 {
entry:
  %dst.addr = alloca i8*, align 8
  %src.addr = alloca i8*, align 8
  store i8* %dst, i8** %dst.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %dst.addr, metadata !11885, metadata !DIExpression()), !dbg !11886
  store i8* %src, i8** %src.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %src.addr, metadata !11887, metadata !DIExpression()), !dbg !11888
  %0 = load i8*, i8** %src.addr, align 8, !dbg !11889
  %1 = bitcast i8* %0 to i32*, !dbg !11890
  %2 = load i32, i32* %1, align 4, !dbg !11890
  %3 = load i8*, i8** %dst.addr, align 8, !dbg !11891
  %4 = bitcast i8* %3 to i32*, !dbg !11892
  store i32 %2, i32* %4, align 4, !dbg !11893
  %5 = load i8*, i8** %src.addr, align 8, !dbg !11894
  %add.ptr = getelementptr i8, i8* %5, i64 4, !dbg !11895
  %6 = bitcast i8* %add.ptr to i16*, !dbg !11896
  %7 = load i16, i16* %6, align 2, !dbg !11896
  %8 = load i8*, i8** %dst.addr, align 8, !dbg !11897
  %add.ptr1 = getelementptr i8, i8* %8, i64 4, !dbg !11898
  %9 = bitcast i8* %add.ptr1 to i16*, !dbg !11899
  store i16 %7, i16* %9, align 2, !dbg !11900
  ret void, !dbg !11901
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @macb_get_hwaddr(%struct.macb* %bp) #2 !dbg !11902 {
entry:
  %bp.addr = alloca %struct.macb*, align 8
  %bottom = alloca i32, align 4
  %top = alloca i16, align 2
  %addr = alloca [6 x i8], align 1
  %i = alloca i32, align 4
  %__v = alloca i32, align 4
  %tmp = alloca i32, align 4
  %__v6 = alloca i32, align 4
  %tmp19 = alloca i32, align 4
  store %struct.macb* %bp, %struct.macb** %bp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.macb** %bp.addr, metadata !11903, metadata !DIExpression()), !dbg !11904
  call void @llvm.dbg.declare(metadata i32* %bottom, metadata !11905, metadata !DIExpression()), !dbg !11906
  call void @llvm.dbg.declare(metadata i16* %top, metadata !11907, metadata !DIExpression()), !dbg !11908
  call void @llvm.dbg.declare(metadata [6 x i8]* %addr, metadata !11909, metadata !DIExpression()), !dbg !11911
  call void @llvm.dbg.declare(metadata i32* %i, metadata !11912, metadata !DIExpression()), !dbg !11913
  store i32 0, i32* %i, align 4, !dbg !11914
  br label %for.cond, !dbg !11916

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4, !dbg !11917
  %cmp = icmp slt i32 %0, 4, !dbg !11919
  br i1 %cmp, label %for.body, label %for.end, !dbg !11920

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i32* %__v, metadata !11921, metadata !DIExpression()), !dbg !11924
  %1 = load %struct.macb*, %struct.macb** %bp.addr, align 8, !dbg !11925
  %call = call zeroext i1 @macb_is_gem(%struct.macb* %1) #12, !dbg !11925
  br i1 %call, label %if.then, label %if.else, !dbg !11924

if.then:                                          ; preds = %for.body
  %2 = load %struct.macb*, %struct.macb** %bp.addr, align 8, !dbg !11925
  %macb_reg_readl = getelementptr inbounds %struct.macb, %struct.macb* %2, i32 0, i32 2, !dbg !11925
  %3 = load i32 (%struct.macb*, i32)*, i32 (%struct.macb*, i32)** %macb_reg_readl, align 8, !dbg !11925
  %4 = load %struct.macb*, %struct.macb** %bp.addr, align 8, !dbg !11925
  %5 = load i32, i32* %i, align 4, !dbg !11925
  %mul = mul i32 %5, 8, !dbg !11925
  %add = add i32 136, %mul, !dbg !11925
  %call1 = call i32 %3(%struct.macb* %4, i32 %add) #12, !dbg !11925
  store i32 %call1, i32* %__v, align 4, !dbg !11925
  br label %if.end, !dbg !11925

if.else:                                          ; preds = %for.body
  %6 = load %struct.macb*, %struct.macb** %bp.addr, align 8, !dbg !11925
  %macb_reg_readl2 = getelementptr inbounds %struct.macb, %struct.macb* %6, i32 0, i32 2, !dbg !11925
  %7 = load i32 (%struct.macb*, i32)*, i32 (%struct.macb*, i32)** %macb_reg_readl2, align 8, !dbg !11925
  %8 = load %struct.macb*, %struct.macb** %bp.addr, align 8, !dbg !11925
  %9 = load i32, i32* %i, align 4, !dbg !11925
  %mul3 = mul i32 %9, 8, !dbg !11925
  %add4 = add i32 152, %mul3, !dbg !11925
  %call5 = call i32 %7(%struct.macb* %8, i32 %add4) #12, !dbg !11925
  store i32 %call5, i32* %__v, align 4, !dbg !11925
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %10 = load i32, i32* %__v, align 4, !dbg !11924
  store i32 %10, i32* %tmp, align 4, !dbg !11925
  %11 = load i32, i32* %tmp, align 4, !dbg !11924
  store i32 %11, i32* %bottom, align 4, !dbg !11927
  call void @llvm.dbg.declare(metadata i32* %__v6, metadata !11928, metadata !DIExpression()), !dbg !11930
  %12 = load %struct.macb*, %struct.macb** %bp.addr, align 8, !dbg !11931
  %call7 = call zeroext i1 @macb_is_gem(%struct.macb* %12) #12, !dbg !11931
  br i1 %call7, label %if.then8, label %if.else13, !dbg !11930

if.then8:                                         ; preds = %if.end
  %13 = load %struct.macb*, %struct.macb** %bp.addr, align 8, !dbg !11931
  %macb_reg_readl9 = getelementptr inbounds %struct.macb, %struct.macb* %13, i32 0, i32 2, !dbg !11931
  %14 = load i32 (%struct.macb*, i32)*, i32 (%struct.macb*, i32)** %macb_reg_readl9, align 8, !dbg !11931
  %15 = load %struct.macb*, %struct.macb** %bp.addr, align 8, !dbg !11931
  %16 = load i32, i32* %i, align 4, !dbg !11931
  %mul10 = mul i32 %16, 8, !dbg !11931
  %add11 = add i32 140, %mul10, !dbg !11931
  %call12 = call i32 %14(%struct.macb* %15, i32 %add11) #12, !dbg !11931
  store i32 %call12, i32* %__v6, align 4, !dbg !11931
  br label %if.end18, !dbg !11931

if.else13:                                        ; preds = %if.end
  %17 = load %struct.macb*, %struct.macb** %bp.addr, align 8, !dbg !11931
  %macb_reg_readl14 = getelementptr inbounds %struct.macb, %struct.macb* %17, i32 0, i32 2, !dbg !11931
  %18 = load i32 (%struct.macb*, i32)*, i32 (%struct.macb*, i32)** %macb_reg_readl14, align 8, !dbg !11931
  %19 = load %struct.macb*, %struct.macb** %bp.addr, align 8, !dbg !11931
  %20 = load i32, i32* %i, align 4, !dbg !11931
  %mul15 = mul i32 %20, 8, !dbg !11931
  %add16 = add i32 156, %mul15, !dbg !11931
  %call17 = call i32 %18(%struct.macb* %19, i32 %add16) #12, !dbg !11931
  store i32 %call17, i32* %__v6, align 4, !dbg !11931
  br label %if.end18

if.end18:                                         ; preds = %if.else13, %if.then8
  %21 = load i32, i32* %__v6, align 4, !dbg !11930
  store i32 %21, i32* %tmp19, align 4, !dbg !11931
  %22 = load i32, i32* %tmp19, align 4, !dbg !11930
  %conv = trunc i32 %22 to i16, !dbg !11933
  store i16 %conv, i16* %top, align 2, !dbg !11934
  %23 = load i32, i32* %bottom, align 4, !dbg !11935
  %and = and i32 %23, 255, !dbg !11936
  %conv20 = trunc i32 %and to i8, !dbg !11935
  %arrayidx = getelementptr [6 x i8], [6 x i8]* %addr, i64 0, i64 0, !dbg !11937
  store i8 %conv20, i8* %arrayidx, align 1, !dbg !11938
  %24 = load i32, i32* %bottom, align 4, !dbg !11939
  %shr = lshr i32 %24, 8, !dbg !11940
  %and21 = and i32 %shr, 255, !dbg !11941
  %conv22 = trunc i32 %and21 to i8, !dbg !11942
  %arrayidx23 = getelementptr [6 x i8], [6 x i8]* %addr, i64 0, i64 1, !dbg !11943
  store i8 %conv22, i8* %arrayidx23, align 1, !dbg !11944
  %25 = load i32, i32* %bottom, align 4, !dbg !11945
  %shr24 = lshr i32 %25, 16, !dbg !11946
  %and25 = and i32 %shr24, 255, !dbg !11947
  %conv26 = trunc i32 %and25 to i8, !dbg !11948
  %arrayidx27 = getelementptr [6 x i8], [6 x i8]* %addr, i64 0, i64 2, !dbg !11949
  store i8 %conv26, i8* %arrayidx27, align 1, !dbg !11950
  %26 = load i32, i32* %bottom, align 4, !dbg !11951
  %shr28 = lshr i32 %26, 24, !dbg !11952
  %and29 = and i32 %shr28, 255, !dbg !11953
  %conv30 = trunc i32 %and29 to i8, !dbg !11954
  %arrayidx31 = getelementptr [6 x i8], [6 x i8]* %addr, i64 0, i64 3, !dbg !11955
  store i8 %conv30, i8* %arrayidx31, align 1, !dbg !11956
  %27 = load i16, i16* %top, align 2, !dbg !11957
  %conv32 = zext i16 %27 to i32, !dbg !11957
  %and33 = and i32 %conv32, 255, !dbg !11958
  %conv34 = trunc i32 %and33 to i8, !dbg !11957
  %arrayidx35 = getelementptr [6 x i8], [6 x i8]* %addr, i64 0, i64 4, !dbg !11959
  store i8 %conv34, i8* %arrayidx35, align 1, !dbg !11960
  %28 = load i16, i16* %top, align 2, !dbg !11961
  %conv36 = zext i16 %28 to i32, !dbg !11961
  %shr37 = ashr i32 %conv36, 8, !dbg !11962
  %and38 = and i32 %shr37, 255, !dbg !11963
  %conv39 = trunc i32 %and38 to i8, !dbg !11964
  %arrayidx40 = getelementptr [6 x i8], [6 x i8]* %addr, i64 0, i64 5, !dbg !11965
  store i8 %conv39, i8* %arrayidx40, align 1, !dbg !11966
  %arraydecay = getelementptr inbounds [6 x i8], [6 x i8]* %addr, i64 0, i64 0, !dbg !11967
  %call41 = call zeroext i1 @is_valid_ether_addr(i8* %arraydecay) #12, !dbg !11969
  br i1 %call41, label %if.then42, label %if.end44, !dbg !11970

if.then42:                                        ; preds = %if.end18
  %29 = load %struct.macb*, %struct.macb** %bp.addr, align 8, !dbg !11971
  %dev = getelementptr inbounds %struct.macb, %struct.macb* %29, i32 0, i32 17, !dbg !11973
  %30 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !11973
  %dev_addr = getelementptr inbounds %struct.net_device, %struct.net_device* %30, i32 0, i32 74, !dbg !11974
  %31 = load i8*, i8** %dev_addr, align 8, !dbg !11974
  %arraydecay43 = getelementptr inbounds [6 x i8], [6 x i8]* %addr, i64 0, i64 0, !dbg !11975
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %31, i8* align 1 %arraydecay43, i64 6, i1 false), !dbg !11975
  br label %return, !dbg !11976

if.end44:                                         ; preds = %if.end18
  br label %for.inc, !dbg !11977

for.inc:                                          ; preds = %if.end44
  %32 = load i32, i32* %i, align 4, !dbg !11978
  %inc = add i32 %32, 1, !dbg !11978
  store i32 %inc, i32* %i, align 4, !dbg !11978
  br label %for.cond, !dbg !11979, !llvm.loop !11980

for.end:                                          ; preds = %for.cond
  %33 = load %struct.macb*, %struct.macb** %bp.addr, align 8, !dbg !11982
  %pdev = getelementptr inbounds %struct.macb, %struct.macb* %33, i32 0, i32 11, !dbg !11982
  %34 = load %struct.platform_device*, %struct.platform_device** %pdev, align 8, !dbg !11982
  %dev45 = getelementptr inbounds %struct.platform_device, %struct.platform_device* %34, i32 0, i32 3, !dbg !11982
  call void (%struct.device*, i8*, ...) @_dev_info(%struct.device* %dev45, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.43, i64 0, i64 0)) #13, !dbg !11982
  %35 = load %struct.macb*, %struct.macb** %bp.addr, align 8, !dbg !11983
  %dev46 = getelementptr inbounds %struct.macb, %struct.macb* %35, i32 0, i32 17, !dbg !11984
  %36 = load %struct.net_device*, %struct.net_device** %dev46, align 8, !dbg !11984
  call void @eth_hw_addr_random(%struct.net_device* %36) #12, !dbg !11985
  br label %return, !dbg !11986

return:                                           ; preds = %for.end, %if.then42
  ret void, !dbg !11986
}

; Function Attrs: noredzone
declare dso_local i32 @of_get_phy_mode(%struct.device_node*, i32*) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @macb_mii_init(%struct.macb* %bp) #2 !dbg !11987 {
entry:
  %retval = alloca i32, align 4
  %bp.addr = alloca %struct.macb*, align 8
  %err = alloca i32, align 4
  store %struct.macb* %bp, %struct.macb** %bp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.macb** %bp.addr, metadata !11988, metadata !DIExpression()), !dbg !11989
  call void @llvm.dbg.declare(metadata i32* %err, metadata !11990, metadata !DIExpression()), !dbg !11991
  store i32 -6, i32* %err, align 4, !dbg !11991
  %0 = load %struct.macb*, %struct.macb** %bp.addr, align 8, !dbg !11992
  %macb_reg_writel = getelementptr inbounds %struct.macb, %struct.macb* %0, i32 0, i32 3, !dbg !11992
  %1 = load void (%struct.macb*, i32, i32)*, void (%struct.macb*, i32, i32)** %macb_reg_writel, align 8, !dbg !11992
  %2 = load %struct.macb*, %struct.macb** %bp.addr, align 8, !dbg !11992
  call void %1(%struct.macb* %2, i32 0, i32 16) #12, !dbg !11992
  %call = call %struct.mii_bus* @mdiobus_alloc() #12, !dbg !11993
  %3 = load %struct.macb*, %struct.macb** %bp.addr, align 8, !dbg !11994
  %mii_bus = getelementptr inbounds %struct.macb, %struct.macb* %3, i32 0, i32 20, !dbg !11995
  store %struct.mii_bus* %call, %struct.mii_bus** %mii_bus, align 8, !dbg !11996
  %4 = load %struct.macb*, %struct.macb** %bp.addr, align 8, !dbg !11997
  %mii_bus1 = getelementptr inbounds %struct.macb, %struct.macb* %4, i32 0, i32 20, !dbg !11999
  %5 = load %struct.mii_bus*, %struct.mii_bus** %mii_bus1, align 8, !dbg !11999
  %tobool = icmp ne %struct.mii_bus* %5, null, !dbg !11997
  br i1 %tobool, label %if.end, label %if.then, !dbg !12000

if.then:                                          ; preds = %entry
  store i32 -12, i32* %err, align 4, !dbg !12001
  br label %err_out, !dbg !12003

if.end:                                           ; preds = %entry
  %6 = load %struct.macb*, %struct.macb** %bp.addr, align 8, !dbg !12004
  %mii_bus2 = getelementptr inbounds %struct.macb, %struct.macb* %6, i32 0, i32 20, !dbg !12005
  %7 = load %struct.mii_bus*, %struct.mii_bus** %mii_bus2, align 8, !dbg !12005
  %name = getelementptr inbounds %struct.mii_bus, %struct.mii_bus* %7, i32 0, i32 1, !dbg !12006
  store i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.44, i64 0, i64 0), i8** %name, align 8, !dbg !12007
  %8 = load %struct.macb*, %struct.macb** %bp.addr, align 8, !dbg !12008
  %mii_bus3 = getelementptr inbounds %struct.macb, %struct.macb* %8, i32 0, i32 20, !dbg !12009
  %9 = load %struct.mii_bus*, %struct.mii_bus** %mii_bus3, align 8, !dbg !12009
  %read = getelementptr inbounds %struct.mii_bus, %struct.mii_bus* %9, i32 0, i32 4, !dbg !12010
  store i32 (%struct.mii_bus*, i32, i32)* @macb_mdio_read, i32 (%struct.mii_bus*, i32, i32)** %read, align 8, !dbg !12011
  %10 = load %struct.macb*, %struct.macb** %bp.addr, align 8, !dbg !12012
  %mii_bus4 = getelementptr inbounds %struct.macb, %struct.macb* %10, i32 0, i32 20, !dbg !12013
  %11 = load %struct.mii_bus*, %struct.mii_bus** %mii_bus4, align 8, !dbg !12013
  %write = getelementptr inbounds %struct.mii_bus, %struct.mii_bus* %11, i32 0, i32 5, !dbg !12014
  store i32 (%struct.mii_bus*, i32, i32, i16)* @macb_mdio_write, i32 (%struct.mii_bus*, i32, i32, i16)** %write, align 8, !dbg !12015
  %12 = load %struct.macb*, %struct.macb** %bp.addr, align 8, !dbg !12016
  %mii_bus5 = getelementptr inbounds %struct.macb, %struct.macb* %12, i32 0, i32 20, !dbg !12017
  %13 = load %struct.mii_bus*, %struct.mii_bus** %mii_bus5, align 8, !dbg !12017
  %id = getelementptr inbounds %struct.mii_bus, %struct.mii_bus* %13, i32 0, i32 2, !dbg !12018
  %arraydecay = getelementptr inbounds [61 x i8], [61 x i8]* %id, i64 0, i64 0, !dbg !12016
  %14 = load %struct.macb*, %struct.macb** %bp.addr, align 8, !dbg !12019
  %pdev = getelementptr inbounds %struct.macb, %struct.macb* %14, i32 0, i32 11, !dbg !12020
  %15 = load %struct.platform_device*, %struct.platform_device** %pdev, align 8, !dbg !12020
  %name6 = getelementptr inbounds %struct.platform_device, %struct.platform_device* %15, i32 0, i32 0, !dbg !12021
  %16 = load i8*, i8** %name6, align 8, !dbg !12021
  %17 = load %struct.macb*, %struct.macb** %bp.addr, align 8, !dbg !12022
  %pdev7 = getelementptr inbounds %struct.macb, %struct.macb* %17, i32 0, i32 11, !dbg !12023
  %18 = load %struct.platform_device*, %struct.platform_device** %pdev7, align 8, !dbg !12023
  %id8 = getelementptr inbounds %struct.platform_device, %struct.platform_device* %18, i32 0, i32 1, !dbg !12024
  %19 = load i32, i32* %id8, align 8, !dbg !12024
  %call9 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %arraydecay, i64 61, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.45, i64 0, i64 0), i8* %16, i32 %19) #12, !dbg !12025
  %20 = load %struct.macb*, %struct.macb** %bp.addr, align 8, !dbg !12026
  %21 = bitcast %struct.macb* %20 to i8*, !dbg !12026
  %22 = load %struct.macb*, %struct.macb** %bp.addr, align 8, !dbg !12027
  %mii_bus10 = getelementptr inbounds %struct.macb, %struct.macb* %22, i32 0, i32 20, !dbg !12028
  %23 = load %struct.mii_bus*, %struct.mii_bus** %mii_bus10, align 8, !dbg !12028
  %priv = getelementptr inbounds %struct.mii_bus, %struct.mii_bus* %23, i32 0, i32 3, !dbg !12029
  store i8* %21, i8** %priv, align 8, !dbg !12030
  %24 = load %struct.macb*, %struct.macb** %bp.addr, align 8, !dbg !12031
  %pdev11 = getelementptr inbounds %struct.macb, %struct.macb* %24, i32 0, i32 11, !dbg !12032
  %25 = load %struct.platform_device*, %struct.platform_device** %pdev11, align 8, !dbg !12032
  %dev = getelementptr inbounds %struct.platform_device, %struct.platform_device* %25, i32 0, i32 3, !dbg !12033
  %26 = load %struct.macb*, %struct.macb** %bp.addr, align 8, !dbg !12034
  %mii_bus12 = getelementptr inbounds %struct.macb, %struct.macb* %26, i32 0, i32 20, !dbg !12035
  %27 = load %struct.mii_bus*, %struct.mii_bus** %mii_bus12, align 8, !dbg !12035
  %parent = getelementptr inbounds %struct.mii_bus, %struct.mii_bus* %27, i32 0, i32 9, !dbg !12036
  store %struct.device* %dev, %struct.device** %parent, align 8, !dbg !12037
  %28 = load %struct.macb*, %struct.macb** %bp.addr, align 8, !dbg !12038
  %dev13 = getelementptr inbounds %struct.macb, %struct.macb* %28, i32 0, i32 17, !dbg !12039
  %29 = load %struct.net_device*, %struct.net_device** %dev13, align 8, !dbg !12039
  %dev14 = getelementptr inbounds %struct.net_device, %struct.net_device* %29, i32 0, i32 106, !dbg !12040
  %30 = load %struct.macb*, %struct.macb** %bp.addr, align 8, !dbg !12041
  %mii_bus15 = getelementptr inbounds %struct.macb, %struct.macb* %30, i32 0, i32 20, !dbg !12042
  %31 = load %struct.mii_bus*, %struct.mii_bus** %mii_bus15, align 8, !dbg !12042
  %32 = bitcast %struct.mii_bus* %31 to i8*, !dbg !12041
  call void @dev_set_drvdata(%struct.device* %dev14, i8* %32) #12, !dbg !12043
  %33 = load %struct.macb*, %struct.macb** %bp.addr, align 8, !dbg !12044
  %call16 = call i32 @macb_mdiobus_register(%struct.macb* %33) #12, !dbg !12045
  store i32 %call16, i32* %err, align 4, !dbg !12046
  %34 = load i32, i32* %err, align 4, !dbg !12047
  %tobool17 = icmp ne i32 %34, 0, !dbg !12047
  br i1 %tobool17, label %if.then18, label %if.end19, !dbg !12049

if.then18:                                        ; preds = %if.end
  br label %err_out_free_mdiobus, !dbg !12050

if.end19:                                         ; preds = %if.end
  %35 = load %struct.macb*, %struct.macb** %bp.addr, align 8, !dbg !12051
  %dev20 = getelementptr inbounds %struct.macb, %struct.macb* %35, i32 0, i32 17, !dbg !12052
  %36 = load %struct.net_device*, %struct.net_device** %dev20, align 8, !dbg !12052
  %call21 = call i32 @macb_mii_probe(%struct.net_device* %36) #12, !dbg !12053
  store i32 %call21, i32* %err, align 4, !dbg !12054
  %37 = load i32, i32* %err, align 4, !dbg !12055
  %tobool22 = icmp ne i32 %37, 0, !dbg !12055
  br i1 %tobool22, label %if.then23, label %if.end24, !dbg !12057

if.then23:                                        ; preds = %if.end19
  br label %err_out_unregister_bus, !dbg !12058

if.end24:                                         ; preds = %if.end19
  store i32 0, i32* %retval, align 4, !dbg !12059
  br label %return, !dbg !12059

err_out_unregister_bus:                           ; preds = %if.then23
  call void @llvm.dbg.label(metadata !12060), !dbg !12061
  %38 = load %struct.macb*, %struct.macb** %bp.addr, align 8, !dbg !12062
  %mii_bus25 = getelementptr inbounds %struct.macb, %struct.macb* %38, i32 0, i32 20, !dbg !12063
  %39 = load %struct.mii_bus*, %struct.mii_bus** %mii_bus25, align 8, !dbg !12063
  call void @mdiobus_unregister(%struct.mii_bus* %39) #12, !dbg !12064
  br label %err_out_free_mdiobus, !dbg !12064

err_out_free_mdiobus:                             ; preds = %err_out_unregister_bus, %if.then18
  call void @llvm.dbg.label(metadata !12065), !dbg !12066
  %40 = load %struct.macb*, %struct.macb** %bp.addr, align 8, !dbg !12067
  %mii_bus26 = getelementptr inbounds %struct.macb, %struct.macb* %40, i32 0, i32 20, !dbg !12068
  %41 = load %struct.mii_bus*, %struct.mii_bus** %mii_bus26, align 8, !dbg !12068
  call void @mdiobus_free(%struct.mii_bus* %41) #12, !dbg !12069
  br label %err_out, !dbg !12069

err_out:                                          ; preds = %err_out_free_mdiobus, %if.then
  call void @llvm.dbg.label(metadata !12070), !dbg !12071
  %42 = load i32, i32* %err, align 4, !dbg !12072
  store i32 %42, i32* %retval, align 4, !dbg !12073
  br label %return, !dbg !12073

return:                                           ; preds = %err_out, %if.end24
  %43 = load i32, i32* %retval, align 4, !dbg !12074
  ret i32 %43, !dbg !12074
}

; Function Attrs: noredzone
declare dso_local void @netif_carrier_off(%struct.net_device*) #1

; Function Attrs: noredzone
declare dso_local i32 @register_netdev(%struct.net_device*) #1

; Function Attrs: cold noredzone
declare dso_local void @_dev_err(%struct.device*, i8*, ...) #5

; Function Attrs: noredzone
declare dso_local void @tasklet_setup(%struct.tasklet_struct*, void (%struct.tasklet_struct*)*) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @macb_hresp_error_task(%struct.tasklet_struct* %t) #2 !dbg !12075 {
entry:
  %t.addr = alloca %struct.tasklet_struct*, align 8
  %bp = alloca %struct.macb*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.macb*, align 8
  %dev = alloca %struct.net_device*, align 8
  %queue = alloca %struct.macb_queue*, align 8
  %q = alloca i32, align 4
  %ctrl = alloca i32, align 4
  store %struct.tasklet_struct* %t, %struct.tasklet_struct** %t.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.tasklet_struct** %t.addr, metadata !12076, metadata !DIExpression()), !dbg !12077
  call void @llvm.dbg.declare(metadata %struct.macb** %bp, metadata !12078, metadata !DIExpression()), !dbg !12079
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !12080, metadata !DIExpression()), !dbg !12082
  %0 = load %struct.tasklet_struct*, %struct.tasklet_struct** %t.addr, align 8, !dbg !12082
  %1 = bitcast %struct.tasklet_struct* %0 to i8*, !dbg !12082
  store i8* %1, i8** %__mptr, align 8, !dbg !12082
  br label %do.body, !dbg !12082

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !12083

do.end:                                           ; preds = %do.body
  %2 = load i8*, i8** %__mptr, align 8, !dbg !12082
  %add.ptr = getelementptr i8, i8* %2, i64 -22872, !dbg !12082
  %3 = bitcast i8* %add.ptr to %struct.macb*, !dbg !12082
  store %struct.macb* %3, %struct.macb** %tmp, align 8, !dbg !12083
  %4 = load %struct.macb*, %struct.macb** %tmp, align 8, !dbg !12082
  store %struct.macb* %4, %struct.macb** %bp, align 8, !dbg !12079
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev, metadata !12085, metadata !DIExpression()), !dbg !12086
  %5 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !12087
  %dev1 = getelementptr inbounds %struct.macb, %struct.macb* %5, i32 0, i32 17, !dbg !12088
  %6 = load %struct.net_device*, %struct.net_device** %dev1, align 8, !dbg !12088
  store %struct.net_device* %6, %struct.net_device** %dev, align 8, !dbg !12086
  call void @llvm.dbg.declare(metadata %struct.macb_queue** %queue, metadata !12089, metadata !DIExpression()), !dbg !12090
  call void @llvm.dbg.declare(metadata i32* %q, metadata !12091, metadata !DIExpression()), !dbg !12092
  call void @llvm.dbg.declare(metadata i32* %ctrl, metadata !12093, metadata !DIExpression()), !dbg !12094
  store i32 0, i32* %q, align 4, !dbg !12095
  %7 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !12097
  %queues = getelementptr inbounds %struct.macb, %struct.macb* %7, i32 0, i32 9, !dbg !12098
  %arraydecay = getelementptr inbounds [8 x %struct.macb_queue], [8 x %struct.macb_queue]* %queues, i64 0, i64 0, !dbg !12097
  store %struct.macb_queue* %arraydecay, %struct.macb_queue** %queue, align 8, !dbg !12099
  br label %for.cond, !dbg !12100

for.cond:                                         ; preds = %for.inc, %do.end
  %8 = load i32, i32* %q, align 4, !dbg !12101
  %9 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !12103
  %num_queues = getelementptr inbounds %struct.macb, %struct.macb* %9, i32 0, i32 7, !dbg !12104
  %10 = load i32, i32* %num_queues, align 8, !dbg !12104
  %cmp = icmp ult i32 %8, %10, !dbg !12105
  br i1 %cmp, label %for.body, label %for.end, !dbg !12106

for.body:                                         ; preds = %for.cond
  %11 = load %struct.macb_queue*, %struct.macb_queue** %queue, align 8, !dbg !12107
  %bp2 = getelementptr inbounds %struct.macb_queue, %struct.macb_queue* %11, i32 0, i32 0, !dbg !12107
  %12 = load %struct.macb*, %struct.macb** %bp2, align 8, !dbg !12107
  %macb_reg_writel = getelementptr inbounds %struct.macb, %struct.macb* %12, i32 0, i32 3, !dbg !12107
  %13 = load void (%struct.macb*, i32, i32)*, void (%struct.macb*, i32, i32)** %macb_reg_writel, align 8, !dbg !12107
  %14 = load %struct.macb_queue*, %struct.macb_queue** %queue, align 8, !dbg !12107
  %bp3 = getelementptr inbounds %struct.macb_queue, %struct.macb_queue* %14, i32 0, i32 0, !dbg !12107
  %15 = load %struct.macb*, %struct.macb** %bp3, align 8, !dbg !12107
  %16 = load %struct.macb_queue*, %struct.macb_queue** %queue, align 8, !dbg !12107
  %IDR = getelementptr inbounds %struct.macb_queue, %struct.macb_queue* %16, i32 0, i32 4, !dbg !12107
  %17 = load i32, i32* %IDR, align 4, !dbg !12107
  %18 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !12107
  %rx_intr_mask = getelementptr inbounds %struct.macb, %struct.macb* %18, i32 0, i32 48, !dbg !12107
  %19 = load i32, i32* %rx_intr_mask, align 8, !dbg !12107
  %or = or i32 %19, 248, !dbg !12107
  %or4 = or i32 %or, 2048, !dbg !12107
  call void %13(%struct.macb* %15, i32 %17, i32 %or4) #12, !dbg !12107
  br label %for.inc, !dbg !12109

for.inc:                                          ; preds = %for.body
  %20 = load i32, i32* %q, align 4, !dbg !12110
  %inc = add i32 %20, 1, !dbg !12110
  store i32 %inc, i32* %q, align 4, !dbg !12110
  %21 = load %struct.macb_queue*, %struct.macb_queue** %queue, align 8, !dbg !12111
  %incdec.ptr = getelementptr %struct.macb_queue, %struct.macb_queue* %21, i32 1, !dbg !12111
  store %struct.macb_queue* %incdec.ptr, %struct.macb_queue** %queue, align 8, !dbg !12111
  br label %for.cond, !dbg !12112, !llvm.loop !12113

for.end:                                          ; preds = %for.cond
  %22 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !12115
  %macb_reg_readl = getelementptr inbounds %struct.macb, %struct.macb* %22, i32 0, i32 2, !dbg !12115
  %23 = load i32 (%struct.macb*, i32)*, i32 (%struct.macb*, i32)** %macb_reg_readl, align 8, !dbg !12115
  %24 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !12115
  %call = call i32 %23(%struct.macb* %24, i32 0) #12, !dbg !12115
  store i32 %call, i32* %ctrl, align 4, !dbg !12116
  %25 = load i32, i32* %ctrl, align 4, !dbg !12117
  %and = and i32 %25, -13, !dbg !12117
  store i32 %and, i32* %ctrl, align 4, !dbg !12117
  %26 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !12118
  %macb_reg_writel5 = getelementptr inbounds %struct.macb, %struct.macb* %26, i32 0, i32 3, !dbg !12118
  %27 = load void (%struct.macb*, i32, i32)*, void (%struct.macb*, i32, i32)** %macb_reg_writel5, align 8, !dbg !12118
  %28 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !12118
  %29 = load i32, i32* %ctrl, align 4, !dbg !12118
  call void %27(%struct.macb* %28, i32 0, i32 %29) #12, !dbg !12118
  %30 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !12119
  call void @netif_tx_stop_all_queues(%struct.net_device* %30) #12, !dbg !12120
  %31 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !12121
  call void @netif_carrier_off(%struct.net_device* %31) #12, !dbg !12122
  %32 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !12123
  %macbgem_ops = getelementptr inbounds %struct.macb, %struct.macb* %32, i32 0, i32 19, !dbg !12124
  %mog_init_rings = getelementptr inbounds %struct.macb_or_gem_ops, %struct.macb_or_gem_ops* %macbgem_ops, i32 0, i32 2, !dbg !12125
  %33 = load void (%struct.macb*)*, void (%struct.macb*)** %mog_init_rings, align 8, !dbg !12125
  %34 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !12126
  call void %33(%struct.macb* %34) #12, !dbg !12123
  %35 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !12127
  call void @macb_init_buffers(%struct.macb* %35) #12, !dbg !12128
  store i32 0, i32* %q, align 4, !dbg !12129
  %36 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !12131
  %queues6 = getelementptr inbounds %struct.macb, %struct.macb* %36, i32 0, i32 9, !dbg !12132
  %arraydecay7 = getelementptr inbounds [8 x %struct.macb_queue], [8 x %struct.macb_queue]* %queues6, i64 0, i64 0, !dbg !12131
  store %struct.macb_queue* %arraydecay7, %struct.macb_queue** %queue, align 8, !dbg !12133
  br label %for.cond8, !dbg !12134

for.cond8:                                        ; preds = %for.inc18, %for.end
  %37 = load i32, i32* %q, align 4, !dbg !12135
  %38 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !12137
  %num_queues9 = getelementptr inbounds %struct.macb, %struct.macb* %38, i32 0, i32 7, !dbg !12138
  %39 = load i32, i32* %num_queues9, align 8, !dbg !12138
  %cmp10 = icmp ult i32 %37, %39, !dbg !12139
  br i1 %cmp10, label %for.body11, label %for.end21, !dbg !12140

for.body11:                                       ; preds = %for.cond8
  %40 = load %struct.macb_queue*, %struct.macb_queue** %queue, align 8, !dbg !12141
  %bp12 = getelementptr inbounds %struct.macb_queue, %struct.macb_queue* %40, i32 0, i32 0, !dbg !12141
  %41 = load %struct.macb*, %struct.macb** %bp12, align 8, !dbg !12141
  %macb_reg_writel13 = getelementptr inbounds %struct.macb, %struct.macb* %41, i32 0, i32 3, !dbg !12141
  %42 = load void (%struct.macb*, i32, i32)*, void (%struct.macb*, i32, i32)** %macb_reg_writel13, align 8, !dbg !12141
  %43 = load %struct.macb_queue*, %struct.macb_queue** %queue, align 8, !dbg !12141
  %bp14 = getelementptr inbounds %struct.macb_queue, %struct.macb_queue* %43, i32 0, i32 0, !dbg !12141
  %44 = load %struct.macb*, %struct.macb** %bp14, align 8, !dbg !12141
  %45 = load %struct.macb_queue*, %struct.macb_queue** %queue, align 8, !dbg !12141
  %IER = getelementptr inbounds %struct.macb_queue, %struct.macb_queue* %45, i32 0, i32 3, !dbg !12141
  %46 = load i32, i32* %IER, align 8, !dbg !12141
  %47 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !12141
  %rx_intr_mask15 = getelementptr inbounds %struct.macb, %struct.macb* %47, i32 0, i32 48, !dbg !12141
  %48 = load i32, i32* %rx_intr_mask15, align 8, !dbg !12141
  %or16 = or i32 %48, 248, !dbg !12141
  %or17 = or i32 %or16, 2048, !dbg !12141
  call void %42(%struct.macb* %44, i32 %46, i32 %or17) #12, !dbg !12141
  br label %for.inc18, !dbg !12141

for.inc18:                                        ; preds = %for.body11
  %49 = load i32, i32* %q, align 4, !dbg !12142
  %inc19 = add i32 %49, 1, !dbg !12142
  store i32 %inc19, i32* %q, align 4, !dbg !12142
  %50 = load %struct.macb_queue*, %struct.macb_queue** %queue, align 8, !dbg !12143
  %incdec.ptr20 = getelementptr %struct.macb_queue, %struct.macb_queue* %50, i32 1, !dbg !12143
  store %struct.macb_queue* %incdec.ptr20, %struct.macb_queue** %queue, align 8, !dbg !12143
  br label %for.cond8, !dbg !12144, !llvm.loop !12145

for.end21:                                        ; preds = %for.cond8
  %51 = load i32, i32* %ctrl, align 4, !dbg !12147
  %or22 = or i32 %51, 12, !dbg !12147
  store i32 %or22, i32* %ctrl, align 4, !dbg !12147
  %52 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !12148
  %macb_reg_writel23 = getelementptr inbounds %struct.macb, %struct.macb* %52, i32 0, i32 3, !dbg !12148
  %53 = load void (%struct.macb*, i32, i32)*, void (%struct.macb*, i32, i32)** %macb_reg_writel23, align 8, !dbg !12148
  %54 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !12148
  %55 = load i32, i32* %ctrl, align 4, !dbg !12148
  call void %53(%struct.macb* %54, i32 0, i32 %55) #12, !dbg !12148
  %56 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !12149
  call void @netif_carrier_on(%struct.net_device* %56) #12, !dbg !12150
  %57 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !12151
  call void @netif_tx_start_all_queues(%struct.net_device* %57) #12, !dbg !12152
  ret void, !dbg !12153
}

; Function Attrs: cold noredzone
declare dso_local void @netdev_info(%struct.net_device*, i8*, ...) #5

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @macb_is_gem(%struct.macb* %bp) #2 !dbg !12154 {
entry:
  %bp.addr = alloca %struct.macb*, align 8
  store %struct.macb* %bp, %struct.macb** %bp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.macb** %bp.addr, metadata !12157, metadata !DIExpression()), !dbg !12158
  %0 = load %struct.macb*, %struct.macb** %bp.addr, align 8, !dbg !12159
  %caps = getelementptr inbounds %struct.macb, %struct.macb* %0, i32 0, i32 23, !dbg !12160
  %1 = load i32, i32* %caps, align 8, !dbg !12160
  %and = and i32 %1, -2147483648, !dbg !12161
  %tobool = icmp ne i32 %and, 0, !dbg !12162
  %lnot = xor i1 %tobool, true, !dbg !12162
  %lnot1 = xor i1 %lnot, true, !dbg !12163
  ret i1 %lnot1, !dbg !12164
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @pm_runtime_mark_last_busy(%struct.device* %dev) #2 !dbg !12165 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !12166, metadata !DIExpression()), !dbg !12167
  br label %do.body, !dbg !12168

do.body:                                          ; preds = %entry
  br label %do.body1, !dbg !12169

do.body1:                                         ; preds = %do.body
  br label %do.end, !dbg !12171

do.end:                                           ; preds = %do.body1
  br label %do.body2, !dbg !12169

do.body2:                                         ; preds = %do.end
  %call = call i64 @ktime_get_mono_fast_ns() #12, !dbg !12173
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !12173
  %power = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 11, !dbg !12173
  %last_busy = getelementptr inbounds %struct.dev_pm_info, %struct.dev_pm_info* %power, i32 0, i32 21, !dbg !12173
  store volatile i64 %call, i64* %last_busy, align 8, !dbg !12173
  br label %do.end3, !dbg !12173

do.end3:                                          ; preds = %do.body2
  br label %do.end4, !dbg !12169

do.end4:                                          ; preds = %do.end3
  ret void, !dbg !12175
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @pm_runtime_put_autosuspend(%struct.device* %dev) #2 !dbg !12176 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !12177, metadata !DIExpression()), !dbg !12178
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !12179
  %call = call i32 @__pm_runtime_suspend(%struct.device* %0, i32 13) #12, !dbg !12180
  ret i32 %call, !dbg !12181
}

; Function Attrs: nounwind readnone speculatable willreturn
declare void @llvm.dbg.label(metadata) #3

; Function Attrs: noredzone
declare dso_local void @mdiobus_unregister(%struct.mii_bus*) #1

; Function Attrs: noredzone
declare dso_local void @mdiobus_free(%struct.mii_bus*) #1

; Function Attrs: noredzone
declare dso_local void @free_netdev(%struct.net_device*) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @clk_disable_unprepare(%struct.clk* %clk) #2 !dbg !12182 {
entry:
  %clk.addr = alloca %struct.clk*, align 8
  store %struct.clk* %clk, %struct.clk** %clk.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.clk** %clk.addr, metadata !12185, metadata !DIExpression()), !dbg !12186
  %0 = load %struct.clk*, %struct.clk** %clk.addr, align 8, !dbg !12187
  call void @clk_disable(%struct.clk* %0) #12, !dbg !12188
  %1 = load %struct.clk*, %struct.clk** %clk.addr, align 8, !dbg !12189
  call void @clk_unprepare(%struct.clk* %1) #12, !dbg !12190
  ret void, !dbg !12191
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @pm_runtime_disable(%struct.device* %dev) #2 !dbg !12192 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !12193, metadata !DIExpression()), !dbg !12194
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !12195
  call void @__pm_runtime_disable(%struct.device* %0, i1 zeroext true) #12, !dbg !12196
  ret void, !dbg !12197
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @pm_runtime_set_suspended(%struct.device* %dev) #2 !dbg !12198 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !12199, metadata !DIExpression()), !dbg !12200
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !12201
  %call = call i32 @__pm_runtime_set_status(%struct.device* %0, i32 2) #12, !dbg !12202
  ret i32 %call, !dbg !12203
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @pm_runtime_dont_use_autosuspend(%struct.device* %dev) #2 !dbg !12204 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !12205, metadata !DIExpression()), !dbg !12206
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !12207
  call void @__pm_runtime_use_autosuspend(%struct.device* %0, i1 zeroext false) #12, !dbg !12208
  ret void, !dbg !12209
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @macb_clk_init(%struct.platform_device* %pdev, %struct.clk** %pclk, %struct.clk** %hclk, %struct.clk** %tx_clk, %struct.clk** %rx_clk, %struct.clk** %tsu_clk) #2 !dbg !12210 {
entry:
  %retval = alloca i32, align 4
  %pdev.addr = alloca %struct.platform_device*, align 8
  %pclk.addr = alloca %struct.clk**, align 8
  %hclk.addr = alloca %struct.clk**, align 8
  %tx_clk.addr = alloca %struct.clk**, align 8
  %rx_clk.addr = alloca %struct.clk**, align 8
  %tsu_clk.addr = alloca %struct.clk**, align 8
  %pdata = alloca %struct.macb_platform_data*, align 8
  %err = alloca i32, align 4
  store %struct.platform_device* %pdev, %struct.platform_device** %pdev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.platform_device** %pdev.addr, metadata !12211, metadata !DIExpression()), !dbg !12212
  store %struct.clk** %pclk, %struct.clk*** %pclk.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.clk*** %pclk.addr, metadata !12213, metadata !DIExpression()), !dbg !12214
  store %struct.clk** %hclk, %struct.clk*** %hclk.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.clk*** %hclk.addr, metadata !12215, metadata !DIExpression()), !dbg !12216
  store %struct.clk** %tx_clk, %struct.clk*** %tx_clk.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.clk*** %tx_clk.addr, metadata !12217, metadata !DIExpression()), !dbg !12218
  store %struct.clk** %rx_clk, %struct.clk*** %rx_clk.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.clk*** %rx_clk.addr, metadata !12219, metadata !DIExpression()), !dbg !12220
  store %struct.clk** %tsu_clk, %struct.clk*** %tsu_clk.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.clk*** %tsu_clk.addr, metadata !12221, metadata !DIExpression()), !dbg !12222
  call void @llvm.dbg.declare(metadata %struct.macb_platform_data** %pdata, metadata !12223, metadata !DIExpression()), !dbg !12229
  call void @llvm.dbg.declare(metadata i32* %err, metadata !12230, metadata !DIExpression()), !dbg !12231
  %0 = load %struct.platform_device*, %struct.platform_device** %pdev.addr, align 8, !dbg !12232
  %dev = getelementptr inbounds %struct.platform_device, %struct.platform_device* %0, i32 0, i32 3, !dbg !12233
  %call = call i8* @dev_get_platdata(%struct.device* %dev) #12, !dbg !12234
  %1 = bitcast i8* %call to %struct.macb_platform_data*, !dbg !12234
  store %struct.macb_platform_data* %1, %struct.macb_platform_data** %pdata, align 8, !dbg !12235
  %2 = load %struct.macb_platform_data*, %struct.macb_platform_data** %pdata, align 8, !dbg !12236
  %tobool = icmp ne %struct.macb_platform_data* %2, null, !dbg !12236
  br i1 %tobool, label %if.then, label %if.else, !dbg !12238

if.then:                                          ; preds = %entry
  %3 = load %struct.macb_platform_data*, %struct.macb_platform_data** %pdata, align 8, !dbg !12239
  %pclk1 = getelementptr inbounds %struct.macb_platform_data, %struct.macb_platform_data* %3, i32 0, i32 0, !dbg !12241
  %4 = load %struct.clk*, %struct.clk** %pclk1, align 8, !dbg !12241
  %5 = load %struct.clk**, %struct.clk*** %pclk.addr, align 8, !dbg !12242
  store %struct.clk* %4, %struct.clk** %5, align 8, !dbg !12243
  %6 = load %struct.macb_platform_data*, %struct.macb_platform_data** %pdata, align 8, !dbg !12244
  %hclk2 = getelementptr inbounds %struct.macb_platform_data, %struct.macb_platform_data* %6, i32 0, i32 1, !dbg !12245
  %7 = load %struct.clk*, %struct.clk** %hclk2, align 8, !dbg !12245
  %8 = load %struct.clk**, %struct.clk*** %hclk.addr, align 8, !dbg !12246
  store %struct.clk* %7, %struct.clk** %8, align 8, !dbg !12247
  br label %if.end, !dbg !12248

if.else:                                          ; preds = %entry
  %9 = load %struct.platform_device*, %struct.platform_device** %pdev.addr, align 8, !dbg !12249
  %dev3 = getelementptr inbounds %struct.platform_device, %struct.platform_device* %9, i32 0, i32 3, !dbg !12251
  %call4 = call %struct.clk* @devm_clk_get(%struct.device* %dev3, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.6, i64 0, i64 0)) #12, !dbg !12252
  %10 = load %struct.clk**, %struct.clk*** %pclk.addr, align 8, !dbg !12253
  store %struct.clk* %call4, %struct.clk** %10, align 8, !dbg !12254
  %11 = load %struct.platform_device*, %struct.platform_device** %pdev.addr, align 8, !dbg !12255
  %dev5 = getelementptr inbounds %struct.platform_device, %struct.platform_device* %11, i32 0, i32 3, !dbg !12256
  %call6 = call %struct.clk* @devm_clk_get(%struct.device* %dev5, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.7, i64 0, i64 0)) #12, !dbg !12257
  %12 = load %struct.clk**, %struct.clk*** %hclk.addr, align 8, !dbg !12258
  store %struct.clk* %call6, %struct.clk** %12, align 8, !dbg !12259
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %13 = load %struct.clk**, %struct.clk*** %pclk.addr, align 8, !dbg !12260
  %14 = load %struct.clk*, %struct.clk** %13, align 8, !dbg !12262
  %15 = bitcast %struct.clk* %14 to i8*, !dbg !12262
  %call7 = call zeroext i1 @IS_ERR_OR_NULL(i8* %15) #12, !dbg !12263
  br i1 %call7, label %if.then8, label %if.end14, !dbg !12264

if.then8:                                         ; preds = %if.end
  %16 = load %struct.clk**, %struct.clk*** %pclk.addr, align 8, !dbg !12265
  %17 = load %struct.clk*, %struct.clk** %16, align 8, !dbg !12267
  %18 = bitcast %struct.clk* %17 to i8*, !dbg !12267
  %call9 = call i64 @PTR_ERR(i8* %18) #12, !dbg !12268
  %conv = trunc i64 %call9 to i32, !dbg !12268
  store i32 %conv, i32* %err, align 4, !dbg !12269
  %19 = load i32, i32* %err, align 4, !dbg !12270
  %tobool10 = icmp ne i32 %19, 0, !dbg !12270
  br i1 %tobool10, label %if.end12, label %if.then11, !dbg !12272

if.then11:                                        ; preds = %if.then8
  store i32 -19, i32* %err, align 4, !dbg !12273
  br label %if.end12, !dbg !12274

if.end12:                                         ; preds = %if.then11, %if.then8
  %20 = load %struct.platform_device*, %struct.platform_device** %pdev.addr, align 8, !dbg !12275
  %dev13 = getelementptr inbounds %struct.platform_device, %struct.platform_device* %20, i32 0, i32 3, !dbg !12275
  %21 = load i32, i32* %err, align 4, !dbg !12275
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %dev13, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.8, i64 0, i64 0), i32 %21) #13, !dbg !12275
  %22 = load i32, i32* %err, align 4, !dbg !12276
  store i32 %22, i32* %retval, align 4, !dbg !12277
  br label %return, !dbg !12277

if.end14:                                         ; preds = %if.end
  %23 = load %struct.clk**, %struct.clk*** %hclk.addr, align 8, !dbg !12278
  %24 = load %struct.clk*, %struct.clk** %23, align 8, !dbg !12280
  %25 = bitcast %struct.clk* %24 to i8*, !dbg !12280
  %call15 = call zeroext i1 @IS_ERR_OR_NULL(i8* %25) #12, !dbg !12281
  br i1 %call15, label %if.then16, label %if.end23, !dbg !12282

if.then16:                                        ; preds = %if.end14
  %26 = load %struct.clk**, %struct.clk*** %hclk.addr, align 8, !dbg !12283
  %27 = load %struct.clk*, %struct.clk** %26, align 8, !dbg !12285
  %28 = bitcast %struct.clk* %27 to i8*, !dbg !12285
  %call17 = call i64 @PTR_ERR(i8* %28) #12, !dbg !12286
  %conv18 = trunc i64 %call17 to i32, !dbg !12286
  store i32 %conv18, i32* %err, align 4, !dbg !12287
  %29 = load i32, i32* %err, align 4, !dbg !12288
  %tobool19 = icmp ne i32 %29, 0, !dbg !12288
  br i1 %tobool19, label %if.end21, label %if.then20, !dbg !12290

if.then20:                                        ; preds = %if.then16
  store i32 -19, i32* %err, align 4, !dbg !12291
  br label %if.end21, !dbg !12292

if.end21:                                         ; preds = %if.then20, %if.then16
  %30 = load %struct.platform_device*, %struct.platform_device** %pdev.addr, align 8, !dbg !12293
  %dev22 = getelementptr inbounds %struct.platform_device, %struct.platform_device* %30, i32 0, i32 3, !dbg !12293
  %31 = load i32, i32* %err, align 4, !dbg !12293
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %dev22, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.9, i64 0, i64 0), i32 %31) #13, !dbg !12293
  %32 = load i32, i32* %err, align 4, !dbg !12294
  store i32 %32, i32* %retval, align 4, !dbg !12295
  br label %return, !dbg !12295

if.end23:                                         ; preds = %if.end14
  %33 = load %struct.platform_device*, %struct.platform_device** %pdev.addr, align 8, !dbg !12296
  %dev24 = getelementptr inbounds %struct.platform_device, %struct.platform_device* %33, i32 0, i32 3, !dbg !12297
  %call25 = call %struct.clk* @devm_clk_get_optional(%struct.device* %dev24, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.10, i64 0, i64 0)) #12, !dbg !12298
  %34 = load %struct.clk**, %struct.clk*** %tx_clk.addr, align 8, !dbg !12299
  store %struct.clk* %call25, %struct.clk** %34, align 8, !dbg !12300
  %35 = load %struct.clk**, %struct.clk*** %tx_clk.addr, align 8, !dbg !12301
  %36 = load %struct.clk*, %struct.clk** %35, align 8, !dbg !12303
  %37 = bitcast %struct.clk* %36 to i8*, !dbg !12303
  %call26 = call zeroext i1 @IS_ERR(i8* %37) #12, !dbg !12304
  br i1 %call26, label %if.then27, label %if.end30, !dbg !12305

if.then27:                                        ; preds = %if.end23
  %38 = load %struct.clk**, %struct.clk*** %tx_clk.addr, align 8, !dbg !12306
  %39 = load %struct.clk*, %struct.clk** %38, align 8, !dbg !12307
  %40 = bitcast %struct.clk* %39 to i8*, !dbg !12307
  %call28 = call i64 @PTR_ERR(i8* %40) #12, !dbg !12308
  %conv29 = trunc i64 %call28 to i32, !dbg !12308
  store i32 %conv29, i32* %retval, align 4, !dbg !12309
  br label %return, !dbg !12309

if.end30:                                         ; preds = %if.end23
  %41 = load %struct.platform_device*, %struct.platform_device** %pdev.addr, align 8, !dbg !12310
  %dev31 = getelementptr inbounds %struct.platform_device, %struct.platform_device* %41, i32 0, i32 3, !dbg !12311
  %call32 = call %struct.clk* @devm_clk_get_optional(%struct.device* %dev31, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.11, i64 0, i64 0)) #12, !dbg !12312
  %42 = load %struct.clk**, %struct.clk*** %rx_clk.addr, align 8, !dbg !12313
  store %struct.clk* %call32, %struct.clk** %42, align 8, !dbg !12314
  %43 = load %struct.clk**, %struct.clk*** %rx_clk.addr, align 8, !dbg !12315
  %44 = load %struct.clk*, %struct.clk** %43, align 8, !dbg !12317
  %45 = bitcast %struct.clk* %44 to i8*, !dbg !12317
  %call33 = call zeroext i1 @IS_ERR(i8* %45) #12, !dbg !12318
  br i1 %call33, label %if.then34, label %if.end37, !dbg !12319

if.then34:                                        ; preds = %if.end30
  %46 = load %struct.clk**, %struct.clk*** %rx_clk.addr, align 8, !dbg !12320
  %47 = load %struct.clk*, %struct.clk** %46, align 8, !dbg !12321
  %48 = bitcast %struct.clk* %47 to i8*, !dbg !12321
  %call35 = call i64 @PTR_ERR(i8* %48) #12, !dbg !12322
  %conv36 = trunc i64 %call35 to i32, !dbg !12322
  store i32 %conv36, i32* %retval, align 4, !dbg !12323
  br label %return, !dbg !12323

if.end37:                                         ; preds = %if.end30
  %49 = load %struct.platform_device*, %struct.platform_device** %pdev.addr, align 8, !dbg !12324
  %dev38 = getelementptr inbounds %struct.platform_device, %struct.platform_device* %49, i32 0, i32 3, !dbg !12325
  %call39 = call %struct.clk* @devm_clk_get_optional(%struct.device* %dev38, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.12, i64 0, i64 0)) #12, !dbg !12326
  %50 = load %struct.clk**, %struct.clk*** %tsu_clk.addr, align 8, !dbg !12327
  store %struct.clk* %call39, %struct.clk** %50, align 8, !dbg !12328
  %51 = load %struct.clk**, %struct.clk*** %tsu_clk.addr, align 8, !dbg !12329
  %52 = load %struct.clk*, %struct.clk** %51, align 8, !dbg !12331
  %53 = bitcast %struct.clk* %52 to i8*, !dbg !12331
  %call40 = call zeroext i1 @IS_ERR(i8* %53) #12, !dbg !12332
  br i1 %call40, label %if.then41, label %if.end44, !dbg !12333

if.then41:                                        ; preds = %if.end37
  %54 = load %struct.clk**, %struct.clk*** %tsu_clk.addr, align 8, !dbg !12334
  %55 = load %struct.clk*, %struct.clk** %54, align 8, !dbg !12335
  %56 = bitcast %struct.clk* %55 to i8*, !dbg !12335
  %call42 = call i64 @PTR_ERR(i8* %56) #12, !dbg !12336
  %conv43 = trunc i64 %call42 to i32, !dbg !12336
  store i32 %conv43, i32* %retval, align 4, !dbg !12337
  br label %return, !dbg !12337

if.end44:                                         ; preds = %if.end37
  %57 = load %struct.clk**, %struct.clk*** %pclk.addr, align 8, !dbg !12338
  %58 = load %struct.clk*, %struct.clk** %57, align 8, !dbg !12339
  %call45 = call i32 @clk_prepare_enable(%struct.clk* %58) #12, !dbg !12340
  store i32 %call45, i32* %err, align 4, !dbg !12341
  %59 = load i32, i32* %err, align 4, !dbg !12342
  %tobool46 = icmp ne i32 %59, 0, !dbg !12342
  br i1 %tobool46, label %if.then47, label %if.end49, !dbg !12344

if.then47:                                        ; preds = %if.end44
  %60 = load %struct.platform_device*, %struct.platform_device** %pdev.addr, align 8, !dbg !12345
  %dev48 = getelementptr inbounds %struct.platform_device, %struct.platform_device* %60, i32 0, i32 3, !dbg !12345
  %61 = load i32, i32* %err, align 4, !dbg !12345
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %dev48, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.13, i64 0, i64 0), i32 %61) #13, !dbg !12345
  %62 = load i32, i32* %err, align 4, !dbg !12347
  store i32 %62, i32* %retval, align 4, !dbg !12348
  br label %return, !dbg !12348

if.end49:                                         ; preds = %if.end44
  %63 = load %struct.clk**, %struct.clk*** %hclk.addr, align 8, !dbg !12349
  %64 = load %struct.clk*, %struct.clk** %63, align 8, !dbg !12350
  %call50 = call i32 @clk_prepare_enable(%struct.clk* %64) #12, !dbg !12351
  store i32 %call50, i32* %err, align 4, !dbg !12352
  %65 = load i32, i32* %err, align 4, !dbg !12353
  %tobool51 = icmp ne i32 %65, 0, !dbg !12353
  br i1 %tobool51, label %if.then52, label %if.end54, !dbg !12355

if.then52:                                        ; preds = %if.end49
  %66 = load %struct.platform_device*, %struct.platform_device** %pdev.addr, align 8, !dbg !12356
  %dev53 = getelementptr inbounds %struct.platform_device, %struct.platform_device* %66, i32 0, i32 3, !dbg !12356
  %67 = load i32, i32* %err, align 4, !dbg !12356
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %dev53, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.14, i64 0, i64 0), i32 %67) #13, !dbg !12356
  br label %err_disable_pclk, !dbg !12358

if.end54:                                         ; preds = %if.end49
  %68 = load %struct.clk**, %struct.clk*** %tx_clk.addr, align 8, !dbg !12359
  %69 = load %struct.clk*, %struct.clk** %68, align 8, !dbg !12360
  %call55 = call i32 @clk_prepare_enable(%struct.clk* %69) #12, !dbg !12361
  store i32 %call55, i32* %err, align 4, !dbg !12362
  %70 = load i32, i32* %err, align 4, !dbg !12363
  %tobool56 = icmp ne i32 %70, 0, !dbg !12363
  br i1 %tobool56, label %if.then57, label %if.end59, !dbg !12365

if.then57:                                        ; preds = %if.end54
  %71 = load %struct.platform_device*, %struct.platform_device** %pdev.addr, align 8, !dbg !12366
  %dev58 = getelementptr inbounds %struct.platform_device, %struct.platform_device* %71, i32 0, i32 3, !dbg !12366
  %72 = load i32, i32* %err, align 4, !dbg !12366
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %dev58, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.15, i64 0, i64 0), i32 %72) #13, !dbg !12366
  br label %err_disable_hclk, !dbg !12368

if.end59:                                         ; preds = %if.end54
  %73 = load %struct.clk**, %struct.clk*** %rx_clk.addr, align 8, !dbg !12369
  %74 = load %struct.clk*, %struct.clk** %73, align 8, !dbg !12370
  %call60 = call i32 @clk_prepare_enable(%struct.clk* %74) #12, !dbg !12371
  store i32 %call60, i32* %err, align 4, !dbg !12372
  %75 = load i32, i32* %err, align 4, !dbg !12373
  %tobool61 = icmp ne i32 %75, 0, !dbg !12373
  br i1 %tobool61, label %if.then62, label %if.end64, !dbg !12375

if.then62:                                        ; preds = %if.end59
  %76 = load %struct.platform_device*, %struct.platform_device** %pdev.addr, align 8, !dbg !12376
  %dev63 = getelementptr inbounds %struct.platform_device, %struct.platform_device* %76, i32 0, i32 3, !dbg !12376
  %77 = load i32, i32* %err, align 4, !dbg !12376
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %dev63, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.16, i64 0, i64 0), i32 %77) #13, !dbg !12376
  br label %err_disable_txclk, !dbg !12378

if.end64:                                         ; preds = %if.end59
  %78 = load %struct.clk**, %struct.clk*** %tsu_clk.addr, align 8, !dbg !12379
  %79 = load %struct.clk*, %struct.clk** %78, align 8, !dbg !12380
  %call65 = call i32 @clk_prepare_enable(%struct.clk* %79) #12, !dbg !12381
  store i32 %call65, i32* %err, align 4, !dbg !12382
  %80 = load i32, i32* %err, align 4, !dbg !12383
  %tobool66 = icmp ne i32 %80, 0, !dbg !12383
  br i1 %tobool66, label %if.then67, label %if.end69, !dbg !12385

if.then67:                                        ; preds = %if.end64
  %81 = load %struct.platform_device*, %struct.platform_device** %pdev.addr, align 8, !dbg !12386
  %dev68 = getelementptr inbounds %struct.platform_device, %struct.platform_device* %81, i32 0, i32 3, !dbg !12386
  %82 = load i32, i32* %err, align 4, !dbg !12386
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %dev68, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.17, i64 0, i64 0), i32 %82) #13, !dbg !12386
  br label %err_disable_rxclk, !dbg !12388

if.end69:                                         ; preds = %if.end64
  store i32 0, i32* %retval, align 4, !dbg !12389
  br label %return, !dbg !12389

err_disable_rxclk:                                ; preds = %if.then67
  call void @llvm.dbg.label(metadata !12390), !dbg !12391
  %83 = load %struct.clk**, %struct.clk*** %rx_clk.addr, align 8, !dbg !12392
  %84 = load %struct.clk*, %struct.clk** %83, align 8, !dbg !12393
  call void @clk_disable_unprepare(%struct.clk* %84) #12, !dbg !12394
  br label %err_disable_txclk, !dbg !12394

err_disable_txclk:                                ; preds = %err_disable_rxclk, %if.then62
  call void @llvm.dbg.label(metadata !12395), !dbg !12396
  %85 = load %struct.clk**, %struct.clk*** %tx_clk.addr, align 8, !dbg !12397
  %86 = load %struct.clk*, %struct.clk** %85, align 8, !dbg !12398
  call void @clk_disable_unprepare(%struct.clk* %86) #12, !dbg !12399
  br label %err_disable_hclk, !dbg !12399

err_disable_hclk:                                 ; preds = %err_disable_txclk, %if.then57
  call void @llvm.dbg.label(metadata !12400), !dbg !12401
  %87 = load %struct.clk**, %struct.clk*** %hclk.addr, align 8, !dbg !12402
  %88 = load %struct.clk*, %struct.clk** %87, align 8, !dbg !12403
  call void @clk_disable_unprepare(%struct.clk* %88) #12, !dbg !12404
  br label %err_disable_pclk, !dbg !12404

err_disable_pclk:                                 ; preds = %err_disable_hclk, %if.then52
  call void @llvm.dbg.label(metadata !12405), !dbg !12406
  %89 = load %struct.clk**, %struct.clk*** %pclk.addr, align 8, !dbg !12407
  %90 = load %struct.clk*, %struct.clk** %89, align 8, !dbg !12408
  call void @clk_disable_unprepare(%struct.clk* %90) #12, !dbg !12409
  %91 = load i32, i32* %err, align 4, !dbg !12410
  store i32 %91, i32* %retval, align 4, !dbg !12411
  br label %return, !dbg !12411

return:                                           ; preds = %err_disable_pclk, %if.end69, %if.then47, %if.then41, %if.then34, %if.then27, %if.end21, %if.end12
  %92 = load i32, i32* %retval, align 4, !dbg !12412
  ret i32 %92, !dbg !12412
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @macb_init(%struct.platform_device* %pdev) #2 !dbg !12413 {
entry:
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !11065, metadata !DIExpression()), !dbg !12414
  %retval = alloca i32, align 4
  %pdev.addr = alloca %struct.platform_device*, align 8
  %dev = alloca %struct.net_device*, align 8
  %hw_q = alloca i32, align 4
  %q = alloca i32, align 4
  %bp = alloca %struct.macb*, align 8
  %queue = alloca %struct.macb_queue*, align 8
  %err = alloca i32, align 4
  %val = alloca i32, align 4
  %reg = alloca i32, align 4
  %.compoundliteral = alloca %struct.atomic64_t, align 8
  %__UNIQUE_ID___x556 = alloca i32, align 4
  %__UNIQUE_ID___y557 = alloca i32, align 4
  %tmp = alloca i32, align 4
  %.compoundliteral121 = alloca %struct.spinlock, align 1
  store %struct.platform_device* %pdev, %struct.platform_device** %pdev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.platform_device** %pdev.addr, metadata !12421, metadata !DIExpression()), !dbg !12422
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev, metadata !12423, metadata !DIExpression()), !dbg !12424
  %0 = load %struct.platform_device*, %struct.platform_device** %pdev.addr, align 8, !dbg !12425
  %call = call i8* @platform_get_drvdata(%struct.platform_device* %0) #12, !dbg !12426
  %1 = bitcast i8* %call to %struct.net_device*, !dbg !12426
  store %struct.net_device* %1, %struct.net_device** %dev, align 8, !dbg !12424
  call void @llvm.dbg.declare(metadata i32* %hw_q, metadata !12427, metadata !DIExpression()), !dbg !12428
  call void @llvm.dbg.declare(metadata i32* %q, metadata !12429, metadata !DIExpression()), !dbg !12430
  call void @llvm.dbg.declare(metadata %struct.macb** %bp, metadata !12431, metadata !DIExpression()), !dbg !12432
  %2 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !12433
  %call1 = call i8* @netdev_priv(%struct.net_device* %2) #12, !dbg !12434
  %3 = bitcast i8* %call1 to %struct.macb*, !dbg !12434
  store %struct.macb* %3, %struct.macb** %bp, align 8, !dbg !12432
  call void @llvm.dbg.declare(metadata %struct.macb_queue** %queue, metadata !12435, metadata !DIExpression()), !dbg !12436
  call void @llvm.dbg.declare(metadata i32* %err, metadata !12437, metadata !DIExpression()), !dbg !12438
  call void @llvm.dbg.declare(metadata i32* %val, metadata !12439, metadata !DIExpression()), !dbg !12440
  call void @llvm.dbg.declare(metadata i32* %reg, metadata !12441, metadata !DIExpression()), !dbg !12442
  %4 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !12443
  %tx_ring_size = getelementptr inbounds %struct.macb, %struct.macb* %4, i32 0, i32 6, !dbg !12444
  store i32 512, i32* %tx_ring_size, align 4, !dbg !12445
  %5 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !12446
  %rx_ring_size = getelementptr inbounds %struct.macb, %struct.macb* %5, i32 0, i32 5, !dbg !12447
  store i32 512, i32* %rx_ring_size, align 8, !dbg !12448
  store i32 0, i32* %hw_q, align 4, !dbg !12449
  store i32 0, i32* %q, align 4, !dbg !12451
  br label %for.cond, !dbg !12452

for.cond:                                         ; preds = %for.inc, %entry
  %6 = load i32, i32* %hw_q, align 4, !dbg !12453
  %cmp = icmp ult i32 %6, 8, !dbg !12455
  br i1 %cmp, label %for.body, label %for.end, !dbg !12456

for.body:                                         ; preds = %for.cond
  %7 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !12457
  %queue_mask = getelementptr inbounds %struct.macb, %struct.macb* %7, i32 0, i32 8, !dbg !12460
  %8 = load i32, i32* %queue_mask, align 4, !dbg !12460
  %9 = load i32, i32* %hw_q, align 4, !dbg !12461
  %shl = shl i32 1, %9, !dbg !12462
  %and = and i32 %8, %shl, !dbg !12463
  %tobool = icmp ne i32 %and, 0, !dbg !12463
  br i1 %tobool, label %if.end, label %if.then, !dbg !12464

if.then:                                          ; preds = %for.body
  br label %for.inc, !dbg !12465

if.end:                                           ; preds = %for.body
  %10 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !12466
  %queues = getelementptr inbounds %struct.macb, %struct.macb* %10, i32 0, i32 9, !dbg !12467
  %11 = load i32, i32* %q, align 4, !dbg !12468
  %idxprom = zext i32 %11 to i64, !dbg !12466
  %arrayidx = getelementptr [8 x %struct.macb_queue], [8 x %struct.macb_queue]* %queues, i64 0, i64 %idxprom, !dbg !12466
  store %struct.macb_queue* %arrayidx, %struct.macb_queue** %queue, align 8, !dbg !12469
  %12 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !12470
  %13 = load %struct.macb_queue*, %struct.macb_queue** %queue, align 8, !dbg !12471
  %bp2 = getelementptr inbounds %struct.macb_queue, %struct.macb_queue* %13, i32 0, i32 0, !dbg !12472
  store %struct.macb* %12, %struct.macb** %bp2, align 8, !dbg !12473
  %14 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !12474
  %15 = load %struct.macb_queue*, %struct.macb_queue** %queue, align 8, !dbg !12475
  %napi = getelementptr inbounds %struct.macb_queue, %struct.macb_queue* %15, i32 0, i32 24, !dbg !12476
  call void @netif_napi_add(%struct.net_device* %14, %struct.napi_struct* %napi, i32 (%struct.napi_struct*, i32)* @macb_poll, i32 64) #12, !dbg !12477
  %16 = load i32, i32* %hw_q, align 4, !dbg !12478
  %tobool3 = icmp ne i32 %16, 0, !dbg !12478
  br i1 %tobool3, label %if.then4, label %if.else, !dbg !12480

if.then4:                                         ; preds = %if.end
  %17 = load i32, i32* %hw_q, align 4, !dbg !12481
  %sub = sub i32 %17, 1, !dbg !12481
  %shl5 = shl i32 %sub, 2, !dbg !12481
  %add = add i32 1024, %shl5, !dbg !12481
  %18 = load %struct.macb_queue*, %struct.macb_queue** %queue, align 8, !dbg !12483
  %ISR = getelementptr inbounds %struct.macb_queue, %struct.macb_queue* %18, i32 0, i32 2, !dbg !12484
  store i32 %add, i32* %ISR, align 4, !dbg !12485
  %19 = load i32, i32* %hw_q, align 4, !dbg !12486
  %sub6 = sub i32 %19, 1, !dbg !12486
  %shl7 = shl i32 %sub6, 2, !dbg !12486
  %add8 = add i32 1536, %shl7, !dbg !12486
  %20 = load %struct.macb_queue*, %struct.macb_queue** %queue, align 8, !dbg !12487
  %IER = getelementptr inbounds %struct.macb_queue, %struct.macb_queue* %20, i32 0, i32 3, !dbg !12488
  store i32 %add8, i32* %IER, align 8, !dbg !12489
  %21 = load i32, i32* %hw_q, align 4, !dbg !12490
  %sub9 = sub i32 %21, 1, !dbg !12490
  %shl10 = shl i32 %sub9, 2, !dbg !12490
  %add11 = add i32 1568, %shl10, !dbg !12490
  %22 = load %struct.macb_queue*, %struct.macb_queue** %queue, align 8, !dbg !12491
  %IDR = getelementptr inbounds %struct.macb_queue, %struct.macb_queue* %22, i32 0, i32 4, !dbg !12492
  store i32 %add11, i32* %IDR, align 4, !dbg !12493
  %23 = load i32, i32* %hw_q, align 4, !dbg !12494
  %sub12 = sub i32 %23, 1, !dbg !12494
  %shl13 = shl i32 %sub12, 2, !dbg !12494
  %add14 = add i32 1600, %shl13, !dbg !12494
  %24 = load %struct.macb_queue*, %struct.macb_queue** %queue, align 8, !dbg !12495
  %IMR = getelementptr inbounds %struct.macb_queue, %struct.macb_queue* %24, i32 0, i32 5, !dbg !12496
  store i32 %add14, i32* %IMR, align 8, !dbg !12497
  %25 = load i32, i32* %hw_q, align 4, !dbg !12498
  %sub15 = sub i32 %25, 1, !dbg !12498
  %shl16 = shl i32 %sub15, 2, !dbg !12498
  %add17 = add i32 1088, %shl16, !dbg !12498
  %26 = load %struct.macb_queue*, %struct.macb_queue** %queue, align 8, !dbg !12499
  %TBQP = getelementptr inbounds %struct.macb_queue, %struct.macb_queue* %26, i32 0, i32 6, !dbg !12500
  store i32 %add17, i32* %TBQP, align 4, !dbg !12501
  %27 = load i32, i32* %hw_q, align 4, !dbg !12502
  %sub18 = sub i32 %27, 1, !dbg !12502
  %shl19 = shl i32 %sub18, 2, !dbg !12502
  %add20 = add i32 1152, %shl19, !dbg !12502
  %28 = load %struct.macb_queue*, %struct.macb_queue** %queue, align 8, !dbg !12503
  %RBQP = getelementptr inbounds %struct.macb_queue, %struct.macb_queue* %28, i32 0, i32 9, !dbg !12504
  store i32 %add20, i32* %RBQP, align 8, !dbg !12505
  %29 = load i32, i32* %hw_q, align 4, !dbg !12506
  %sub21 = sub i32 %29, 1, !dbg !12506
  %shl22 = shl i32 %sub21, 2, !dbg !12506
  %add23 = add i32 1184, %shl22, !dbg !12506
  %30 = load %struct.macb_queue*, %struct.macb_queue** %queue, align 8, !dbg !12507
  %RBQS = getelementptr inbounds %struct.macb_queue, %struct.macb_queue* %30, i32 0, i32 8, !dbg !12508
  store i32 %add23, i32* %RBQS, align 4, !dbg !12509
  %31 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !12510
  %hw_dma_cap = getelementptr inbounds %struct.macb, %struct.macb* %31, i32 0, i32 35, !dbg !12512
  %32 = load i8, i8* %hw_dma_cap, align 8, !dbg !12512
  %conv = zext i8 %32 to i32, !dbg !12510
  %and24 = and i32 %conv, 1, !dbg !12513
  %tobool25 = icmp ne i32 %and24, 0, !dbg !12513
  br i1 %tobool25, label %if.then26, label %if.end27, !dbg !12514

if.then26:                                        ; preds = %if.then4
  %33 = load %struct.macb_queue*, %struct.macb_queue** %queue, align 8, !dbg !12515
  %TBQPH = getelementptr inbounds %struct.macb_queue, %struct.macb_queue* %33, i32 0, i32 7, !dbg !12517
  store i32 1224, i32* %TBQPH, align 8, !dbg !12518
  %34 = load %struct.macb_queue*, %struct.macb_queue** %queue, align 8, !dbg !12519
  %RBQPH = getelementptr inbounds %struct.macb_queue, %struct.macb_queue* %34, i32 0, i32 10, !dbg !12520
  store i32 1236, i32* %RBQPH, align 4, !dbg !12521
  br label %if.end27, !dbg !12522

if.end27:                                         ; preds = %if.then26, %if.then4
  br label %if.end42, !dbg !12523

if.else:                                          ; preds = %if.end
  %35 = load %struct.macb_queue*, %struct.macb_queue** %queue, align 8, !dbg !12524
  %ISR28 = getelementptr inbounds %struct.macb_queue, %struct.macb_queue* %35, i32 0, i32 2, !dbg !12526
  store i32 36, i32* %ISR28, align 4, !dbg !12527
  %36 = load %struct.macb_queue*, %struct.macb_queue** %queue, align 8, !dbg !12528
  %IER29 = getelementptr inbounds %struct.macb_queue, %struct.macb_queue* %36, i32 0, i32 3, !dbg !12529
  store i32 40, i32* %IER29, align 8, !dbg !12530
  %37 = load %struct.macb_queue*, %struct.macb_queue** %queue, align 8, !dbg !12531
  %IDR30 = getelementptr inbounds %struct.macb_queue, %struct.macb_queue* %37, i32 0, i32 4, !dbg !12532
  store i32 44, i32* %IDR30, align 4, !dbg !12533
  %38 = load %struct.macb_queue*, %struct.macb_queue** %queue, align 8, !dbg !12534
  %IMR31 = getelementptr inbounds %struct.macb_queue, %struct.macb_queue* %38, i32 0, i32 5, !dbg !12535
  store i32 48, i32* %IMR31, align 8, !dbg !12536
  %39 = load %struct.macb_queue*, %struct.macb_queue** %queue, align 8, !dbg !12537
  %TBQP32 = getelementptr inbounds %struct.macb_queue, %struct.macb_queue* %39, i32 0, i32 6, !dbg !12538
  store i32 28, i32* %TBQP32, align 4, !dbg !12539
  %40 = load %struct.macb_queue*, %struct.macb_queue** %queue, align 8, !dbg !12540
  %RBQP33 = getelementptr inbounds %struct.macb_queue, %struct.macb_queue* %40, i32 0, i32 9, !dbg !12541
  store i32 24, i32* %RBQP33, align 8, !dbg !12542
  %41 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !12543
  %hw_dma_cap34 = getelementptr inbounds %struct.macb, %struct.macb* %41, i32 0, i32 35, !dbg !12545
  %42 = load i8, i8* %hw_dma_cap34, align 8, !dbg !12545
  %conv35 = zext i8 %42 to i32, !dbg !12543
  %and36 = and i32 %conv35, 1, !dbg !12546
  %tobool37 = icmp ne i32 %and36, 0, !dbg !12546
  br i1 %tobool37, label %if.then38, label %if.end41, !dbg !12547

if.then38:                                        ; preds = %if.else
  %43 = load %struct.macb_queue*, %struct.macb_queue** %queue, align 8, !dbg !12548
  %TBQPH39 = getelementptr inbounds %struct.macb_queue, %struct.macb_queue* %43, i32 0, i32 7, !dbg !12550
  store i32 1224, i32* %TBQPH39, align 8, !dbg !12551
  %44 = load %struct.macb_queue*, %struct.macb_queue** %queue, align 8, !dbg !12552
  %RBQPH40 = getelementptr inbounds %struct.macb_queue, %struct.macb_queue* %44, i32 0, i32 10, !dbg !12553
  store i32 1236, i32* %RBQPH40, align 4, !dbg !12554
  br label %if.end41, !dbg !12555

if.end41:                                         ; preds = %if.then38, %if.else
  br label %if.end42

if.end42:                                         ; preds = %if.end41, %if.end27
  %45 = load %struct.platform_device*, %struct.platform_device** %pdev.addr, align 8, !dbg !12556
  %46 = load i32, i32* %q, align 4, !dbg !12557
  %call43 = call i32 @platform_get_irq(%struct.platform_device* %45, i32 %46) #12, !dbg !12558
  %47 = load %struct.macb_queue*, %struct.macb_queue** %queue, align 8, !dbg !12559
  %irq = getelementptr inbounds %struct.macb_queue, %struct.macb_queue* %47, i32 0, i32 1, !dbg !12560
  store i32 %call43, i32* %irq, align 8, !dbg !12561
  %48 = load %struct.platform_device*, %struct.platform_device** %pdev.addr, align 8, !dbg !12562
  %dev44 = getelementptr inbounds %struct.platform_device, %struct.platform_device* %48, i32 0, i32 3, !dbg !12563
  %49 = load %struct.macb_queue*, %struct.macb_queue** %queue, align 8, !dbg !12564
  %irq45 = getelementptr inbounds %struct.macb_queue, %struct.macb_queue* %49, i32 0, i32 1, !dbg !12565
  %50 = load i32, i32* %irq45, align 8, !dbg !12565
  %51 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !12566
  %name = getelementptr inbounds %struct.net_device, %struct.net_device* %51, i32 0, i32 0, !dbg !12567
  %arraydecay = getelementptr inbounds [16 x i8], [16 x i8]* %name, i64 0, i64 0, !dbg !12566
  %52 = load %struct.macb_queue*, %struct.macb_queue** %queue, align 8, !dbg !12568
  %53 = bitcast %struct.macb_queue* %52 to i8*, !dbg !12568
  %call46 = call i32 @devm_request_irq(%struct.device* %dev44, i32 %50, i32 (i32, i8*)* @macb_interrupt, i64 128, i8* %arraydecay, i8* %53) #12, !dbg !12569
  store i32 %call46, i32* %err, align 4, !dbg !12570
  %54 = load i32, i32* %err, align 4, !dbg !12571
  %tobool47 = icmp ne i32 %54, 0, !dbg !12571
  br i1 %tobool47, label %if.then48, label %if.end51, !dbg !12573

if.then48:                                        ; preds = %if.end42
  %55 = load %struct.platform_device*, %struct.platform_device** %pdev.addr, align 8, !dbg !12574
  %dev49 = getelementptr inbounds %struct.platform_device, %struct.platform_device* %55, i32 0, i32 3, !dbg !12574
  %56 = load %struct.macb_queue*, %struct.macb_queue** %queue, align 8, !dbg !12574
  %irq50 = getelementptr inbounds %struct.macb_queue, %struct.macb_queue* %56, i32 0, i32 1, !dbg !12574
  %57 = load i32, i32* %irq50, align 8, !dbg !12574
  %58 = load i32, i32* %err, align 4, !dbg !12574
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %dev49, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.18, i64 0, i64 0), i32 %57, i32 %58) #13, !dbg !12574
  %59 = load i32, i32* %err, align 4, !dbg !12576
  store i32 %59, i32* %retval, align 4, !dbg !12577
  br label %return, !dbg !12577

if.end51:                                         ; preds = %if.end42
  br label %do.body, !dbg !12578

do.body:                                          ; preds = %if.end51
  %60 = load %struct.macb_queue*, %struct.macb_queue** %queue, align 8, !dbg !12579
  %tx_error_task = getelementptr inbounds %struct.macb_queue, %struct.macb_queue* %60, i32 0, i32 16, !dbg !12579
  call void @__init_work(%struct.work_struct* %tx_error_task, i32 0) #12, !dbg !12579
  %61 = load %struct.macb_queue*, %struct.macb_queue** %queue, align 8, !dbg !12579
  %tx_error_task52 = getelementptr inbounds %struct.macb_queue, %struct.macb_queue* %61, i32 0, i32 16, !dbg !12579
  %data = getelementptr inbounds %struct.work_struct, %struct.work_struct* %tx_error_task52, i32 0, i32 0, !dbg !12579
  %counter = getelementptr inbounds %struct.atomic64_t, %struct.atomic64_t* %.compoundliteral, i32 0, i32 0, !dbg !12579
  store i64 68719476704, i64* %counter, align 8, !dbg !12579
  %62 = bitcast %struct.atomic64_t* %data to i8*, !dbg !12579
  %63 = bitcast %struct.atomic64_t* %.compoundliteral to i8*, !dbg !12579
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %62, i8* align 8 %63, i64 8, i1 false), !dbg !12579
  %64 = load %struct.macb_queue*, %struct.macb_queue** %queue, align 8, !dbg !12579
  %tx_error_task53 = getelementptr inbounds %struct.macb_queue, %struct.macb_queue* %64, i32 0, i32 16, !dbg !12579
  %entry54 = getelementptr inbounds %struct.work_struct, %struct.work_struct* %tx_error_task53, i32 0, i32 1, !dbg !12579
  call void @INIT_LIST_HEAD(%struct.list_head* %entry54) #12, !dbg !12579
  %65 = load %struct.macb_queue*, %struct.macb_queue** %queue, align 8, !dbg !12579
  %tx_error_task55 = getelementptr inbounds %struct.macb_queue, %struct.macb_queue* %65, i32 0, i32 16, !dbg !12579
  %func = getelementptr inbounds %struct.work_struct, %struct.work_struct* %tx_error_task55, i32 0, i32 2, !dbg !12579
  store void (%struct.work_struct*)* @macb_tx_error_task, void (%struct.work_struct*)** %func, align 8, !dbg !12579
  br label %do.end, !dbg !12579

do.end:                                           ; preds = %do.body
  %66 = load i32, i32* %q, align 4, !dbg !12581
  %inc = add i32 %66, 1, !dbg !12581
  store i32 %inc, i32* %q, align 4, !dbg !12581
  br label %for.inc, !dbg !12582

for.inc:                                          ; preds = %do.end, %if.then
  %67 = load i32, i32* %hw_q, align 4, !dbg !12583
  %inc56 = add i32 %67, 1, !dbg !12583
  store i32 %inc56, i32* %hw_q, align 4, !dbg !12583
  br label %for.cond, !dbg !12584, !llvm.loop !12585

for.end:                                          ; preds = %for.cond
  %68 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !12587
  %netdev_ops = getelementptr inbounds %struct.net_device, %struct.net_device* %68, i32 0, i32 32, !dbg !12588
  store %struct.net_device_ops* @macb_netdev_ops, %struct.net_device_ops** %netdev_ops, align 8, !dbg !12589
  %69 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !12590
  %call57 = call zeroext i1 @macb_is_gem(%struct.macb* %69) #12, !dbg !12592
  br i1 %call57, label %if.then58, label %if.else62, !dbg !12593

if.then58:                                        ; preds = %for.end
  %70 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !12594
  %max_tx_length = getelementptr inbounds %struct.macb, %struct.macb* %70, i32 0, i32 29, !dbg !12596
  store i32 16320, i32* %max_tx_length, align 8, !dbg !12597
  %71 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !12598
  %macbgem_ops = getelementptr inbounds %struct.macb, %struct.macb* %71, i32 0, i32 19, !dbg !12599
  %mog_alloc_rx_buffers = getelementptr inbounds %struct.macb_or_gem_ops, %struct.macb_or_gem_ops* %macbgem_ops, i32 0, i32 0, !dbg !12600
  store i32 (%struct.macb*)* @gem_alloc_rx_buffers, i32 (%struct.macb*)** %mog_alloc_rx_buffers, align 8, !dbg !12601
  %72 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !12602
  %macbgem_ops59 = getelementptr inbounds %struct.macb, %struct.macb* %72, i32 0, i32 19, !dbg !12603
  %mog_free_rx_buffers = getelementptr inbounds %struct.macb_or_gem_ops, %struct.macb_or_gem_ops* %macbgem_ops59, i32 0, i32 1, !dbg !12604
  store void (%struct.macb*)* @gem_free_rx_buffers, void (%struct.macb*)** %mog_free_rx_buffers, align 8, !dbg !12605
  %73 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !12606
  %macbgem_ops60 = getelementptr inbounds %struct.macb, %struct.macb* %73, i32 0, i32 19, !dbg !12607
  %mog_init_rings = getelementptr inbounds %struct.macb_or_gem_ops, %struct.macb_or_gem_ops* %macbgem_ops60, i32 0, i32 2, !dbg !12608
  store void (%struct.macb*)* @gem_init_rings, void (%struct.macb*)** %mog_init_rings, align 8, !dbg !12609
  %74 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !12610
  %macbgem_ops61 = getelementptr inbounds %struct.macb, %struct.macb* %74, i32 0, i32 19, !dbg !12611
  %mog_rx = getelementptr inbounds %struct.macb_or_gem_ops, %struct.macb_or_gem_ops* %macbgem_ops61, i32 0, i32 3, !dbg !12612
  store i32 (%struct.macb_queue*, %struct.napi_struct*, i32)* @gem_rx, i32 (%struct.macb_queue*, %struct.napi_struct*, i32)** %mog_rx, align 8, !dbg !12613
  %75 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !12614
  %ethtool_ops = getelementptr inbounds %struct.net_device, %struct.net_device* %75, i32 0, i32 33, !dbg !12615
  store %struct.ethtool_ops* @gem_ethtool_ops, %struct.ethtool_ops** %ethtool_ops, align 8, !dbg !12616
  br label %if.end73, !dbg !12617

if.else62:                                        ; preds = %for.end
  %76 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !12618
  %max_tx_length63 = getelementptr inbounds %struct.macb, %struct.macb* %76, i32 0, i32 29, !dbg !12620
  store i32 2040, i32* %max_tx_length63, align 8, !dbg !12621
  %77 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !12622
  %macbgem_ops64 = getelementptr inbounds %struct.macb, %struct.macb* %77, i32 0, i32 19, !dbg !12623
  %mog_alloc_rx_buffers65 = getelementptr inbounds %struct.macb_or_gem_ops, %struct.macb_or_gem_ops* %macbgem_ops64, i32 0, i32 0, !dbg !12624
  store i32 (%struct.macb*)* @macb_alloc_rx_buffers, i32 (%struct.macb*)** %mog_alloc_rx_buffers65, align 8, !dbg !12625
  %78 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !12626
  %macbgem_ops66 = getelementptr inbounds %struct.macb, %struct.macb* %78, i32 0, i32 19, !dbg !12627
  %mog_free_rx_buffers67 = getelementptr inbounds %struct.macb_or_gem_ops, %struct.macb_or_gem_ops* %macbgem_ops66, i32 0, i32 1, !dbg !12628
  store void (%struct.macb*)* @macb_free_rx_buffers, void (%struct.macb*)** %mog_free_rx_buffers67, align 8, !dbg !12629
  %79 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !12630
  %macbgem_ops68 = getelementptr inbounds %struct.macb, %struct.macb* %79, i32 0, i32 19, !dbg !12631
  %mog_init_rings69 = getelementptr inbounds %struct.macb_or_gem_ops, %struct.macb_or_gem_ops* %macbgem_ops68, i32 0, i32 2, !dbg !12632
  store void (%struct.macb*)* @macb_init_rings, void (%struct.macb*)** %mog_init_rings69, align 8, !dbg !12633
  %80 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !12634
  %macbgem_ops70 = getelementptr inbounds %struct.macb, %struct.macb* %80, i32 0, i32 19, !dbg !12635
  %mog_rx71 = getelementptr inbounds %struct.macb_or_gem_ops, %struct.macb_or_gem_ops* %macbgem_ops70, i32 0, i32 3, !dbg !12636
  store i32 (%struct.macb_queue*, %struct.napi_struct*, i32)* @macb_rx, i32 (%struct.macb_queue*, %struct.napi_struct*, i32)** %mog_rx71, align 8, !dbg !12637
  %81 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !12638
  %ethtool_ops72 = getelementptr inbounds %struct.net_device, %struct.net_device* %81, i32 0, i32 33, !dbg !12639
  store %struct.ethtool_ops* @macb_ethtool_ops, %struct.ethtool_ops** %ethtool_ops72, align 8, !dbg !12640
  br label %if.end73

if.end73:                                         ; preds = %if.else62, %if.then58
  %82 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !12641
  %hw_features = getelementptr inbounds %struct.net_device, %struct.net_device* %82, i32 0, i32 16, !dbg !12642
  store i64 1, i64* %hw_features, align 8, !dbg !12643
  %83 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !12644
  %macb_reg_readl = getelementptr inbounds %struct.macb, %struct.macb* %83, i32 0, i32 2, !dbg !12644
  %84 = load i32 (%struct.macb*, i32)*, i32 (%struct.macb*, i32)** %macb_reg_readl, align 8, !dbg !12644
  %85 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !12644
  %call74 = call i32 %84(%struct.macb* %85, i32 660) #12, !dbg !12644
  %shr = lshr i32 %call74, 27, !dbg !12644
  %and75 = and i32 %shr, 1, !dbg !12644
  %tobool76 = icmp ne i32 %and75, 0, !dbg !12644
  br i1 %tobool76, label %if.then77, label %if.end79, !dbg !12646

if.then77:                                        ; preds = %if.end73
  %86 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !12647
  %hw_features78 = getelementptr inbounds %struct.net_device, %struct.net_device* %86, i32 0, i32 16, !dbg !12648
  %87 = load i64, i64* %hw_features78, align 8, !dbg !12649
  %or = or i64 %87, 65536, !dbg !12649
  store i64 %or, i64* %hw_features78, align 8, !dbg !12649
  br label %if.end79, !dbg !12647

if.end79:                                         ; preds = %if.then77, %if.end73
  %88 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !12650
  %call80 = call zeroext i1 @macb_is_gem(%struct.macb* %88) #12, !dbg !12652
  br i1 %call80, label %land.lhs.true, label %if.end87, !dbg !12653

land.lhs.true:                                    ; preds = %if.end79
  %89 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !12654
  %caps = getelementptr inbounds %struct.macb, %struct.macb* %89, i32 0, i32 23, !dbg !12655
  %90 = load i32, i32* %caps, align 8, !dbg !12655
  %and82 = and i32 %90, 268435456, !dbg !12656
  %tobool83 = icmp ne i32 %and82, 0, !dbg !12656
  br i1 %tobool83, label %if.end87, label %if.then84, !dbg !12657

if.then84:                                        ; preds = %land.lhs.true
  %91 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !12658
  %hw_features85 = getelementptr inbounds %struct.net_device, %struct.net_device* %91, i32 0, i32 16, !dbg !12659
  %92 = load i64, i64* %hw_features85, align 8, !dbg !12660
  %or86 = or i64 %92, 1099511627784, !dbg !12660
  store i64 %or86, i64* %hw_features85, align 8, !dbg !12660
  br label %if.end87, !dbg !12658

if.end87:                                         ; preds = %if.then84, %land.lhs.true, %if.end79
  %93 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !12661
  %caps88 = getelementptr inbounds %struct.macb, %struct.macb* %93, i32 0, i32 23, !dbg !12663
  %94 = load i32, i32* %caps88, align 8, !dbg !12663
  %and89 = and i32 %94, 1073741824, !dbg !12664
  %tobool90 = icmp ne i32 %and89, 0, !dbg !12664
  br i1 %tobool90, label %if.then91, label %if.end94, !dbg !12665

if.then91:                                        ; preds = %if.end87
  %95 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !12666
  %hw_features92 = getelementptr inbounds %struct.net_device, %struct.net_device* %95, i32 0, i32 16, !dbg !12667
  %96 = load i64, i64* %hw_features92, align 8, !dbg !12668
  %and93 = and i64 %96, -2, !dbg !12668
  store i64 %and93, i64* %hw_features92, align 8, !dbg !12668
  br label %if.end94, !dbg !12666

if.end94:                                         ; preds = %if.then91, %if.end87
  %97 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !12669
  %hw_features95 = getelementptr inbounds %struct.net_device, %struct.net_device* %97, i32 0, i32 16, !dbg !12670
  %98 = load i64, i64* %hw_features95, align 8, !dbg !12670
  %99 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !12671
  %features = getelementptr inbounds %struct.net_device, %struct.net_device* %99, i32 0, i32 15, !dbg !12672
  store i64 %98, i64* %features, align 8, !dbg !12673
  %100 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !12674
  %macb_reg_readl96 = getelementptr inbounds %struct.macb, %struct.macb* %100, i32 0, i32 2, !dbg !12674
  %101 = load i32 (%struct.macb*, i32)*, i32 (%struct.macb*, i32)** %macb_reg_readl96, align 8, !dbg !12674
  %102 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !12674
  %call97 = call i32 %101(%struct.macb* %102, i32 668) #12, !dbg !12674
  store i32 %call97, i32* %reg, align 4, !dbg !12675
  call void @llvm.dbg.declare(metadata i32* %__UNIQUE_ID___x556, metadata !12676, metadata !DIExpression()), !dbg !12678
  %103 = load i32, i32* %reg, align 4, !dbg !12678
  %shr98 = lshr i32 %103, 0, !dbg !12678
  %and99 = and i32 %shr98, 255, !dbg !12678
  %div = udiv i32 %and99, 3, !dbg !12678
  store i32 %div, i32* %__UNIQUE_ID___x556, align 4, !dbg !12678
  call void @llvm.dbg.declare(metadata i32* %__UNIQUE_ID___y557, metadata !12679, metadata !DIExpression()), !dbg !12678
  %104 = load i32, i32* %reg, align 4, !dbg !12678
  %shr100 = lshr i32 %104, 16, !dbg !12678
  %and101 = and i32 %shr100, 255, !dbg !12678
  store i32 %and101, i32* %__UNIQUE_ID___y557, align 4, !dbg !12678
  %105 = load i32, i32* %__UNIQUE_ID___x556, align 4, !dbg !12678
  %106 = load i32, i32* %__UNIQUE_ID___y557, align 4, !dbg !12678
  %cmp102 = icmp ult i32 %105, %106, !dbg !12678
  br i1 %cmp102, label %cond.true, label %cond.false, !dbg !12678

cond.true:                                        ; preds = %if.end94
  %107 = load i32, i32* %__UNIQUE_ID___x556, align 4, !dbg !12678
  br label %cond.end, !dbg !12678

cond.false:                                       ; preds = %if.end94
  %108 = load i32, i32* %__UNIQUE_ID___y557, align 4, !dbg !12678
  br label %cond.end, !dbg !12678

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %107, %cond.true ], [ %108, %cond.false ], !dbg !12678
  store i32 %cond, i32* %tmp, align 4, !dbg !12678
  %109 = load i32, i32* %tmp, align 4, !dbg !12678
  %110 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !12680
  %max_tuples = getelementptr inbounds %struct.macb, %struct.macb* %110, i32 0, i32 44, !dbg !12681
  store i32 %109, i32* %max_tuples, align 8, !dbg !12682
  %111 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !12683
  %max_tuples104 = getelementptr inbounds %struct.macb, %struct.macb* %111, i32 0, i32 44, !dbg !12684
  %112 = load i32, i32* %max_tuples104, align 8, !dbg !12684
  %cmp105 = icmp ugt i32 %112, 0, !dbg !12685
  br i1 %cmp105, label %if.then107, label %if.end126, !dbg !12686

if.then107:                                       ; preds = %cond.end
  %113 = load i32, i32* %reg, align 4, !dbg !12687
  %shr108 = lshr i32 %113, 8, !dbg !12687
  %and109 = and i32 %shr108, 255, !dbg !12687
  %cmp110 = icmp ugt i32 %and109, 0, !dbg !12688
  br i1 %cmp110, label %if.then112, label %if.else123, !dbg !12689

if.then112:                                       ; preds = %if.then107
  store i32 0, i32* %reg, align 4, !dbg !12690
  %114 = load i32, i32* %reg, align 4, !dbg !12691
  %and113 = and i32 %114, -65536, !dbg !12691
  %or114 = or i32 %and113, 2048, !dbg !12691
  store i32 %or114, i32* %reg, align 4, !dbg !12692
  %115 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !12693
  %macb_reg_writel = getelementptr inbounds %struct.macb, %struct.macb* %115, i32 0, i32 3, !dbg !12693
  %116 = load void (%struct.macb*, i32, i32)*, void (%struct.macb*, i32, i32)** %macb_reg_writel, align 8, !dbg !12693
  %117 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !12693
  %118 = load i32, i32* %reg, align 4, !dbg !12693
  call void %116(%struct.macb* %117, i32 1760, i32 %118) #12, !dbg !12693
  %119 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !12694
  %hw_features115 = getelementptr inbounds %struct.net_device, %struct.net_device* %119, i32 0, i32 16, !dbg !12695
  %120 = load i64, i64* %hw_features115, align 8, !dbg !12696
  %or116 = or i64 %120, 274877906944, !dbg !12696
  store i64 %or116, i64* %hw_features115, align 8, !dbg !12696
  %121 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !12697
  %rx_fs_list = getelementptr inbounds %struct.macb, %struct.macb* %121, i32 0, i32 42, !dbg !12698
  %list = getelementptr inbounds %struct.ethtool_rx_fs_list, %struct.ethtool_rx_fs_list* %rx_fs_list, i32 0, i32 0, !dbg !12699
  call void @INIT_LIST_HEAD(%struct.list_head* %list) #12, !dbg !12700
  %122 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !12701
  %rx_fs_list117 = getelementptr inbounds %struct.macb, %struct.macb* %122, i32 0, i32 42, !dbg !12702
  %count = getelementptr inbounds %struct.ethtool_rx_fs_list, %struct.ethtool_rx_fs_list* %rx_fs_list117, i32 0, i32 1, !dbg !12703
  store i32 0, i32* %count, align 8, !dbg !12704
  br label %do.body118, !dbg !12705

do.body118:                                       ; preds = %if.then112
  %123 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !12706
  %rx_fs_lock = getelementptr inbounds %struct.macb, %struct.macb* %123, i32 0, i32 43, !dbg !12706
  store %struct.spinlock* %rx_fs_lock, %struct.spinlock** %lock.addr.i, align 8
  %124 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !12707
  %125 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %124, i32 0, i32 0, !dbg !12708
  %rlock.i = bitcast %union.anon.1* %125 to %struct.raw_spinlock*, !dbg !12708
  %126 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !12706
  %rx_fs_lock120 = getelementptr inbounds %struct.macb, %struct.macb* %126, i32 0, i32 43, !dbg !12706
  %127 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %.compoundliteral121, i32 0, i32 0, !dbg !12706
  %rlock = bitcast %union.anon.1* %127 to %struct.raw_spinlock*, !dbg !12706
  %128 = bitcast %struct.spinlock* %rx_fs_lock120 to i8*, !dbg !12706
  %129 = bitcast %struct.spinlock* %.compoundliteral121 to i8*, !dbg !12706
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %128, i8* align 1 %129, i64 0, i1 false), !dbg !12706
  br label %do.end122, !dbg !12706

do.end122:                                        ; preds = %do.body118
  br label %if.end125, !dbg !12709

if.else123:                                       ; preds = %if.then107
  %130 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !12710
  %max_tuples124 = getelementptr inbounds %struct.macb, %struct.macb* %130, i32 0, i32 44, !dbg !12711
  store i32 0, i32* %max_tuples124, align 8, !dbg !12712
  br label %if.end125

if.end125:                                        ; preds = %if.else123, %do.end122
  br label %if.end126, !dbg !12713

if.end126:                                        ; preds = %if.end125, %cond.end
  %131 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !12714
  %caps127 = getelementptr inbounds %struct.macb, %struct.macb* %131, i32 0, i32 23, !dbg !12716
  %132 = load i32, i32* %caps127, align 8, !dbg !12716
  %and128 = and i32 %132, 16, !dbg !12717
  %tobool129 = icmp ne i32 %and128, 0, !dbg !12717
  br i1 %tobool129, label %if.end162, label %if.then130, !dbg !12718

if.then130:                                       ; preds = %if.end126
  store i32 0, i32* %val, align 4, !dbg !12719
  %133 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !12721
  %phy_interface = getelementptr inbounds %struct.macb, %struct.macb* %133, i32 0, i32 25, !dbg !12723
  %134 = load i32, i32* %phy_interface, align 8, !dbg !12723
  %call131 = call zeroext i1 @phy_interface_mode_is_rgmii(i32 %134) #12, !dbg !12724
  br i1 %call131, label %if.then132, label %if.else133, !dbg !12725

if.then132:                                       ; preds = %if.then130
  store i32 1, i32* %val, align 4, !dbg !12726
  br label %if.end149, !dbg !12727

if.else133:                                       ; preds = %if.then130
  %135 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !12728
  %phy_interface134 = getelementptr inbounds %struct.macb, %struct.macb* %135, i32 0, i32 25, !dbg !12730
  %136 = load i32, i32* %phy_interface134, align 8, !dbg !12730
  %cmp135 = icmp eq i32 %136, 7, !dbg !12731
  br i1 %cmp135, label %land.lhs.true137, label %if.else142, !dbg !12732

land.lhs.true137:                                 ; preds = %if.else133
  %137 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !12733
  %caps138 = getelementptr inbounds %struct.macb, %struct.macb* %137, i32 0, i32 23, !dbg !12734
  %138 = load i32, i32* %caps138, align 8, !dbg !12734
  %and139 = and i32 %138, 4, !dbg !12735
  %tobool140 = icmp ne i32 %and139, 0, !dbg !12735
  br i1 %tobool140, label %if.then141, label %if.else142, !dbg !12736

if.then141:                                       ; preds = %land.lhs.true137
  store i32 1, i32* %val, align 4, !dbg !12737
  br label %if.end148, !dbg !12738

if.else142:                                       ; preds = %land.lhs.true137, %if.else133
  %139 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !12739
  %caps143 = getelementptr inbounds %struct.macb, %struct.macb* %139, i32 0, i32 23, !dbg !12741
  %140 = load i32, i32* %caps143, align 8, !dbg !12741
  %and144 = and i32 %140, 4, !dbg !12742
  %tobool145 = icmp ne i32 %and144, 0, !dbg !12742
  br i1 %tobool145, label %if.end147, label %if.then146, !dbg !12743

if.then146:                                       ; preds = %if.else142
  store i32 1, i32* %val, align 4, !dbg !12744
  br label %if.end147, !dbg !12745

if.end147:                                        ; preds = %if.then146, %if.else142
  br label %if.end148

if.end148:                                        ; preds = %if.end147, %if.then141
  br label %if.end149

if.end149:                                        ; preds = %if.end148, %if.then132
  %141 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !12746
  %caps150 = getelementptr inbounds %struct.macb, %struct.macb* %141, i32 0, i32 23, !dbg !12748
  %142 = load i32, i32* %caps150, align 8, !dbg !12748
  %and151 = and i32 %142, 2, !dbg !12749
  %tobool152 = icmp ne i32 %and151, 0, !dbg !12749
  br i1 %tobool152, label %if.then153, label %if.end155, !dbg !12750

if.then153:                                       ; preds = %if.end149
  %143 = load i32, i32* %val, align 4, !dbg !12751
  %or154 = or i32 %143, 2, !dbg !12751
  store i32 %or154, i32* %val, align 4, !dbg !12751
  br label %if.end155, !dbg !12752

if.end155:                                        ; preds = %if.then153, %if.end149
  %144 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !12753
  %call156 = call zeroext i1 @macb_is_gem(%struct.macb* %144) #12, !dbg !12753
  br i1 %call156, label %if.then157, label %if.else159, !dbg !12756

if.then157:                                       ; preds = %if.end155
  %145 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !12753
  %macb_reg_writel158 = getelementptr inbounds %struct.macb, %struct.macb* %145, i32 0, i32 3, !dbg !12753
  %146 = load void (%struct.macb*, i32, i32)*, void (%struct.macb*, i32, i32)** %macb_reg_writel158, align 8, !dbg !12753
  %147 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !12753
  %148 = load i32, i32* %val, align 4, !dbg !12753
  call void %146(%struct.macb* %147, i32 12, i32 %148) #12, !dbg !12753
  br label %if.end161, !dbg !12753

if.else159:                                       ; preds = %if.end155
  %149 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !12753
  %macb_reg_writel160 = getelementptr inbounds %struct.macb, %struct.macb* %149, i32 0, i32 3, !dbg !12753
  %150 = load void (%struct.macb*, i32, i32)*, void (%struct.macb*, i32, i32)** %macb_reg_writel160, align 8, !dbg !12753
  %151 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !12753
  %152 = load i32, i32* %val, align 4, !dbg !12753
  call void %150(%struct.macb* %151, i32 192, i32 %152) #12, !dbg !12753
  br label %if.end161

if.end161:                                        ; preds = %if.else159, %if.then157
  br label %if.end162, !dbg !12757

if.end162:                                        ; preds = %if.end161, %if.end126
  %153 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !12758
  %call163 = call i32 @macb_mdc_clk_div(%struct.macb* %153) #12, !dbg !12759
  store i32 %call163, i32* %val, align 4, !dbg !12760
  %154 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !12761
  %call164 = call i32 @macb_dbw(%struct.macb* %154) #12, !dbg !12762
  %155 = load i32, i32* %val, align 4, !dbg !12763
  %or165 = or i32 %155, %call164, !dbg !12763
  store i32 %or165, i32* %val, align 4, !dbg !12763
  %156 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !12764
  %phy_interface166 = getelementptr inbounds %struct.macb, %struct.macb* %156, i32 0, i32 25, !dbg !12766
  %157 = load i32, i32* %phy_interface166, align 8, !dbg !12766
  %cmp167 = icmp eq i32 %157, 4, !dbg !12767
  br i1 %cmp167, label %if.then169, label %if.end171, !dbg !12768

if.then169:                                       ; preds = %if.end162
  %158 = load i32, i32* %val, align 4, !dbg !12769
  %or170 = or i32 %158, 134219776, !dbg !12769
  store i32 %or170, i32* %val, align 4, !dbg !12769
  br label %if.end171, !dbg !12770

if.end171:                                        ; preds = %if.then169, %if.end162
  %159 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !12771
  %macb_reg_writel172 = getelementptr inbounds %struct.macb, %struct.macb* %159, i32 0, i32 3, !dbg !12771
  %160 = load void (%struct.macb*, i32, i32)*, void (%struct.macb*, i32, i32)** %macb_reg_writel172, align 8, !dbg !12771
  %161 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !12771
  %162 = load i32, i32* %val, align 4, !dbg !12771
  call void %160(%struct.macb* %161, i32 4, i32 %162) #12, !dbg !12771
  store i32 0, i32* %retval, align 4, !dbg !12772
  br label %return, !dbg !12772

return:                                           ; preds = %if.end171, %if.then48
  %163 = load i32, i32* %retval, align 4, !dbg !12773
  ret i32 %163, !dbg !12773
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @dev_get_platdata(%struct.device* %dev) #2 !dbg !12774 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !12777, metadata !DIExpression()), !dbg !12778
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !12779
  %platform_data = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 7, !dbg !12780
  %1 = load i8*, i8** %platform_data, align 8, !dbg !12780
  ret i8* %1, !dbg !12781
}

; Function Attrs: noredzone
declare dso_local %struct.clk* @devm_clk_get(%struct.device*, i8*) #1

; Function Attrs: noredzone
declare dso_local %struct.clk* @devm_clk_get_optional(%struct.device*, i8*) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @clk_prepare_enable(%struct.clk* %clk) #2 !dbg !12782 {
entry:
  %retval = alloca i32, align 4
  %clk.addr = alloca %struct.clk*, align 8
  %ret = alloca i32, align 4
  store %struct.clk* %clk, %struct.clk** %clk.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.clk** %clk.addr, metadata !12785, metadata !DIExpression()), !dbg !12786
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !12787, metadata !DIExpression()), !dbg !12788
  %0 = load %struct.clk*, %struct.clk** %clk.addr, align 8, !dbg !12789
  %call = call i32 @clk_prepare(%struct.clk* %0) #12, !dbg !12790
  store i32 %call, i32* %ret, align 4, !dbg !12791
  %1 = load i32, i32* %ret, align 4, !dbg !12792
  %tobool = icmp ne i32 %1, 0, !dbg !12792
  br i1 %tobool, label %if.then, label %if.end, !dbg !12794

if.then:                                          ; preds = %entry
  %2 = load i32, i32* %ret, align 4, !dbg !12795
  store i32 %2, i32* %retval, align 4, !dbg !12796
  br label %return, !dbg !12796

if.end:                                           ; preds = %entry
  %3 = load %struct.clk*, %struct.clk** %clk.addr, align 8, !dbg !12797
  %call1 = call i32 @clk_enable(%struct.clk* %3) #12, !dbg !12798
  store i32 %call1, i32* %ret, align 4, !dbg !12799
  %4 = load i32, i32* %ret, align 4, !dbg !12800
  %tobool2 = icmp ne i32 %4, 0, !dbg !12800
  br i1 %tobool2, label %if.then3, label %if.end4, !dbg !12802

if.then3:                                         ; preds = %if.end
  %5 = load %struct.clk*, %struct.clk** %clk.addr, align 8, !dbg !12803
  call void @clk_unprepare(%struct.clk* %5) #12, !dbg !12804
  br label %if.end4, !dbg !12804

if.end4:                                          ; preds = %if.then3, %if.end
  %6 = load i32, i32* %ret, align 4, !dbg !12805
  store i32 %6, i32* %retval, align 4, !dbg !12806
  br label %return, !dbg !12806

return:                                           ; preds = %if.end4, %if.then
  %7 = load i32, i32* %retval, align 4, !dbg !12807
  ret i32 %7, !dbg !12807
}

; Function Attrs: noredzone
declare dso_local i32 @clk_prepare(%struct.clk*) #1

; Function Attrs: noredzone
declare dso_local i32 @clk_enable(%struct.clk*) #1

; Function Attrs: noredzone
declare dso_local void @clk_unprepare(%struct.clk*) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @platform_get_drvdata(%struct.platform_device* %pdev) #2 !dbg !12808 {
entry:
  %pdev.addr = alloca %struct.platform_device*, align 8
  store %struct.platform_device* %pdev, %struct.platform_device** %pdev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.platform_device** %pdev.addr, metadata !12813, metadata !DIExpression()), !dbg !12814
  %0 = load %struct.platform_device*, %struct.platform_device** %pdev.addr, align 8, !dbg !12815
  %dev = getelementptr inbounds %struct.platform_device, %struct.platform_device* %0, i32 0, i32 3, !dbg !12816
  %call = call i8* @dev_get_drvdata(%struct.device* %dev) #12, !dbg !12817
  ret i8* %call, !dbg !12818
}

; Function Attrs: noredzone
declare dso_local void @netif_napi_add(%struct.net_device*, %struct.napi_struct*, i32 (%struct.napi_struct*, i32)*, i32) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @macb_poll(%struct.napi_struct* %napi, i32 %budget) #2 !dbg !12819 {
entry:
  %napi.addr = alloca %struct.napi_struct*, align 8
  %budget.addr = alloca i32, align 4
  %queue = alloca %struct.macb_queue*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.macb_queue*, align 8
  %bp = alloca %struct.macb*, align 8
  %work_done = alloca i32, align 4
  %status = alloca i32, align 4
  %tmp2 = alloca i32, align 4
  store %struct.napi_struct* %napi, %struct.napi_struct** %napi.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.napi_struct** %napi.addr, metadata !12820, metadata !DIExpression()), !dbg !12821
  store i32 %budget, i32* %budget.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %budget.addr, metadata !12822, metadata !DIExpression()), !dbg !12823
  call void @llvm.dbg.declare(metadata %struct.macb_queue** %queue, metadata !12824, metadata !DIExpression()), !dbg !12825
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !12826, metadata !DIExpression()), !dbg !12828
  %0 = load %struct.napi_struct*, %struct.napi_struct** %napi.addr, align 8, !dbg !12828
  %1 = bitcast %struct.napi_struct* %0 to i8*, !dbg !12828
  store i8* %1, i8** %__mptr, align 8, !dbg !12828
  br label %do.body, !dbg !12828

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !12829

do.end:                                           ; preds = %do.body
  %2 = load i8*, i8** %__mptr, align 8, !dbg !12828
  %add.ptr = getelementptr i8, i8* %2, i64 -160, !dbg !12828
  %3 = bitcast i8* %add.ptr to %struct.macb_queue*, !dbg !12828
  store %struct.macb_queue* %3, %struct.macb_queue** %tmp, align 8, !dbg !12829
  %4 = load %struct.macb_queue*, %struct.macb_queue** %tmp, align 8, !dbg !12828
  store %struct.macb_queue* %4, %struct.macb_queue** %queue, align 8, !dbg !12825
  call void @llvm.dbg.declare(metadata %struct.macb** %bp, metadata !12831, metadata !DIExpression()), !dbg !12832
  %5 = load %struct.macb_queue*, %struct.macb_queue** %queue, align 8, !dbg !12833
  %bp1 = getelementptr inbounds %struct.macb_queue, %struct.macb_queue* %5, i32 0, i32 0, !dbg !12834
  %6 = load %struct.macb*, %struct.macb** %bp1, align 8, !dbg !12834
  store %struct.macb* %6, %struct.macb** %bp, align 8, !dbg !12832
  call void @llvm.dbg.declare(metadata i32* %work_done, metadata !12835, metadata !DIExpression()), !dbg !12836
  call void @llvm.dbg.declare(metadata i32* %status, metadata !12837, metadata !DIExpression()), !dbg !12838
  %7 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !12839
  %macb_reg_readl = getelementptr inbounds %struct.macb, %struct.macb* %7, i32 0, i32 2, !dbg !12839
  %8 = load i32 (%struct.macb*, i32)*, i32 (%struct.macb*, i32)** %macb_reg_readl, align 8, !dbg !12839
  %9 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !12839
  %call = call i32 %8(%struct.macb* %9, i32 32) #12, !dbg !12839
  store i32 %call, i32* %status, align 4, !dbg !12840
  %10 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !12841
  %macb_reg_writel = getelementptr inbounds %struct.macb, %struct.macb* %10, i32 0, i32 3, !dbg !12841
  %11 = load void (%struct.macb*, i32, i32)*, void (%struct.macb*, i32, i32)** %macb_reg_writel, align 8, !dbg !12841
  %12 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !12841
  %13 = load i32, i32* %status, align 4, !dbg !12841
  call void %11(%struct.macb* %12, i32 32, i32 %13) #12, !dbg !12841
  store i32 0, i32* %tmp2, align 4, !dbg !12842
  %14 = load i32, i32* %tmp2, align 4, !dbg !12845
  %15 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !12846
  %macbgem_ops = getelementptr inbounds %struct.macb, %struct.macb* %15, i32 0, i32 19, !dbg !12847
  %mog_rx = getelementptr inbounds %struct.macb_or_gem_ops, %struct.macb_or_gem_ops* %macbgem_ops, i32 0, i32 3, !dbg !12848
  %16 = load i32 (%struct.macb_queue*, %struct.napi_struct*, i32)*, i32 (%struct.macb_queue*, %struct.napi_struct*, i32)** %mog_rx, align 8, !dbg !12848
  %17 = load %struct.macb_queue*, %struct.macb_queue** %queue, align 8, !dbg !12849
  %18 = load %struct.napi_struct*, %struct.napi_struct** %napi.addr, align 8, !dbg !12850
  %19 = load i32, i32* %budget.addr, align 4, !dbg !12851
  %call3 = call i32 %16(%struct.macb_queue* %17, %struct.napi_struct* %18, i32 %19) #12, !dbg !12846
  store i32 %call3, i32* %work_done, align 4, !dbg !12852
  %20 = load i32, i32* %work_done, align 4, !dbg !12853
  %21 = load i32, i32* %budget.addr, align 4, !dbg !12855
  %cmp = icmp slt i32 %20, %21, !dbg !12856
  br i1 %cmp, label %if.then, label %if.end18, !dbg !12857

if.then:                                          ; preds = %do.end
  %22 = load %struct.napi_struct*, %struct.napi_struct** %napi.addr, align 8, !dbg !12858
  %23 = load i32, i32* %work_done, align 4, !dbg !12860
  %call4 = call zeroext i1 @napi_complete_done(%struct.napi_struct* %22, i32 %23) #12, !dbg !12861
  %24 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !12862
  %macb_reg_readl5 = getelementptr inbounds %struct.macb, %struct.macb* %24, i32 0, i32 2, !dbg !12862
  %25 = load i32 (%struct.macb*, i32)*, i32 (%struct.macb*, i32)** %macb_reg_readl5, align 8, !dbg !12862
  %26 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !12862
  %call6 = call i32 %25(%struct.macb* %26, i32 32) #12, !dbg !12862
  store i32 %call6, i32* %status, align 4, !dbg !12863
  %27 = load i32, i32* %status, align 4, !dbg !12864
  %tobool = icmp ne i32 %27, 0, !dbg !12864
  br i1 %tobool, label %if.then7, label %if.else, !dbg !12866

if.then7:                                         ; preds = %if.then
  %28 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !12867
  %caps = getelementptr inbounds %struct.macb, %struct.macb* %28, i32 0, i32 23, !dbg !12870
  %29 = load i32, i32* %caps, align 8, !dbg !12870
  %and = and i32 %29, 1, !dbg !12871
  %tobool8 = icmp ne i32 %and, 0, !dbg !12871
  br i1 %tobool8, label %if.then9, label %if.end, !dbg !12872

if.then9:                                         ; preds = %if.then7
  %30 = load %struct.macb_queue*, %struct.macb_queue** %queue, align 8, !dbg !12873
  %bp10 = getelementptr inbounds %struct.macb_queue, %struct.macb_queue* %30, i32 0, i32 0, !dbg !12873
  %31 = load %struct.macb*, %struct.macb** %bp10, align 8, !dbg !12873
  %macb_reg_writel11 = getelementptr inbounds %struct.macb, %struct.macb* %31, i32 0, i32 3, !dbg !12873
  %32 = load void (%struct.macb*, i32, i32)*, void (%struct.macb*, i32, i32)** %macb_reg_writel11, align 8, !dbg !12873
  %33 = load %struct.macb_queue*, %struct.macb_queue** %queue, align 8, !dbg !12873
  %bp12 = getelementptr inbounds %struct.macb_queue, %struct.macb_queue* %33, i32 0, i32 0, !dbg !12873
  %34 = load %struct.macb*, %struct.macb** %bp12, align 8, !dbg !12873
  %35 = load %struct.macb_queue*, %struct.macb_queue** %queue, align 8, !dbg !12873
  %ISR = getelementptr inbounds %struct.macb_queue, %struct.macb_queue* %35, i32 0, i32 2, !dbg !12873
  %36 = load i32, i32* %ISR, align 4, !dbg !12873
  call void %32(%struct.macb* %34, i32 %36, i32 2) #12, !dbg !12873
  br label %if.end, !dbg !12873

if.end:                                           ; preds = %if.then9, %if.then7
  %37 = load %struct.napi_struct*, %struct.napi_struct** %napi.addr, align 8, !dbg !12874
  %call13 = call zeroext i1 @napi_reschedule(%struct.napi_struct* %37) #12, !dbg !12875
  br label %if.end17, !dbg !12876

if.else:                                          ; preds = %if.then
  %38 = load %struct.macb_queue*, %struct.macb_queue** %queue, align 8, !dbg !12877
  %bp14 = getelementptr inbounds %struct.macb_queue, %struct.macb_queue* %38, i32 0, i32 0, !dbg !12877
  %39 = load %struct.macb*, %struct.macb** %bp14, align 8, !dbg !12877
  %macb_reg_writel15 = getelementptr inbounds %struct.macb, %struct.macb* %39, i32 0, i32 3, !dbg !12877
  %40 = load void (%struct.macb*, i32, i32)*, void (%struct.macb*, i32, i32)** %macb_reg_writel15, align 8, !dbg !12877
  %41 = load %struct.macb_queue*, %struct.macb_queue** %queue, align 8, !dbg !12877
  %bp16 = getelementptr inbounds %struct.macb_queue, %struct.macb_queue* %41, i32 0, i32 0, !dbg !12877
  %42 = load %struct.macb*, %struct.macb** %bp16, align 8, !dbg !12877
  %43 = load %struct.macb_queue*, %struct.macb_queue** %queue, align 8, !dbg !12877
  %IER = getelementptr inbounds %struct.macb_queue, %struct.macb_queue* %43, i32 0, i32 3, !dbg !12877
  %44 = load i32, i32* %IER, align 8, !dbg !12877
  %45 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !12877
  %rx_intr_mask = getelementptr inbounds %struct.macb, %struct.macb* %45, i32 0, i32 48, !dbg !12877
  %46 = load i32, i32* %rx_intr_mask, align 8, !dbg !12877
  call void %40(%struct.macb* %42, i32 %44, i32 %46) #12, !dbg !12877
  br label %if.end17

if.end17:                                         ; preds = %if.else, %if.end
  br label %if.end18, !dbg !12879

if.end18:                                         ; preds = %if.end17, %do.end
  %47 = load i32, i32* %work_done, align 4, !dbg !12880
  ret i32 %47, !dbg !12881
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @devm_request_irq(%struct.device* %dev, i32 %irq, i32 (i32, i8*)* %handler, i64 %irqflags, i8* %devname, i8* %dev_id) #2 !dbg !12882 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %irq.addr = alloca i32, align 4
  %handler.addr = alloca i32 (i32, i8*)*, align 8
  %irqflags.addr = alloca i64, align 8
  %devname.addr = alloca i8*, align 8
  %dev_id.addr = alloca i8*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !12885, metadata !DIExpression()), !dbg !12886
  store i32 %irq, i32* %irq.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %irq.addr, metadata !12887, metadata !DIExpression()), !dbg !12888
  store i32 (i32, i8*)* %handler, i32 (i32, i8*)** %handler.addr, align 8
  call void @llvm.dbg.declare(metadata i32 (i32, i8*)** %handler.addr, metadata !12889, metadata !DIExpression()), !dbg !12890
  store i64 %irqflags, i64* %irqflags.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %irqflags.addr, metadata !12891, metadata !DIExpression()), !dbg !12892
  store i8* %devname, i8** %devname.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %devname.addr, metadata !12893, metadata !DIExpression()), !dbg !12894
  store i8* %dev_id, i8** %dev_id.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %dev_id.addr, metadata !12895, metadata !DIExpression()), !dbg !12896
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !12897
  %1 = load i32, i32* %irq.addr, align 4, !dbg !12898
  %2 = load i32 (i32, i8*)*, i32 (i32, i8*)** %handler.addr, align 8, !dbg !12899
  %3 = load i64, i64* %irqflags.addr, align 8, !dbg !12900
  %4 = load i8*, i8** %devname.addr, align 8, !dbg !12901
  %5 = load i8*, i8** %dev_id.addr, align 8, !dbg !12902
  %call = call i32 @devm_request_threaded_irq(%struct.device* %0, i32 %1, i32 (i32, i8*)* %2, i32 (i32, i8*)* null, i64 %3, i8* %4, i8* %5) #12, !dbg !12903
  ret i32 %call, !dbg !12904
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @macb_interrupt(i32 %irq, i8* %dev_id) #2 !dbg !12905 {
entry:
  %lock.addr.i140 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i140, metadata !12906, metadata !DIExpression()), !dbg !12910
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !12912, metadata !DIExpression()), !dbg !12914
  %retval = alloca i32, align 4
  %irq.addr = alloca i32, align 4
  %dev_id.addr = alloca i8*, align 8
  %queue = alloca %struct.macb_queue*, align 8
  %bp = alloca %struct.macb*, align 8
  %dev = alloca %struct.net_device*, align 8
  %status = alloca i32, align 4
  %ctrl = alloca i32, align 4
  %tmp = alloca i32, align 4
  %tmp48 = alloca i32, align 4
  store i32 %irq, i32* %irq.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %irq.addr, metadata !12916, metadata !DIExpression()), !dbg !12917
  store i8* %dev_id, i8** %dev_id.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %dev_id.addr, metadata !12918, metadata !DIExpression()), !dbg !12919
  call void @llvm.dbg.declare(metadata %struct.macb_queue** %queue, metadata !12920, metadata !DIExpression()), !dbg !12921
  %0 = load i8*, i8** %dev_id.addr, align 8, !dbg !12922
  %1 = bitcast i8* %0 to %struct.macb_queue*, !dbg !12922
  store %struct.macb_queue* %1, %struct.macb_queue** %queue, align 8, !dbg !12921
  call void @llvm.dbg.declare(metadata %struct.macb** %bp, metadata !12923, metadata !DIExpression()), !dbg !12924
  %2 = load %struct.macb_queue*, %struct.macb_queue** %queue, align 8, !dbg !12925
  %bp1 = getelementptr inbounds %struct.macb_queue, %struct.macb_queue* %2, i32 0, i32 0, !dbg !12926
  %3 = load %struct.macb*, %struct.macb** %bp1, align 8, !dbg !12926
  store %struct.macb* %3, %struct.macb** %bp, align 8, !dbg !12924
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev, metadata !12927, metadata !DIExpression()), !dbg !12928
  %4 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !12929
  %dev2 = getelementptr inbounds %struct.macb, %struct.macb* %4, i32 0, i32 17, !dbg !12930
  %5 = load %struct.net_device*, %struct.net_device** %dev2, align 8, !dbg !12930
  store %struct.net_device* %5, %struct.net_device** %dev, align 8, !dbg !12928
  call void @llvm.dbg.declare(metadata i32* %status, metadata !12931, metadata !DIExpression()), !dbg !12932
  call void @llvm.dbg.declare(metadata i32* %ctrl, metadata !12933, metadata !DIExpression()), !dbg !12934
  %6 = load %struct.macb_queue*, %struct.macb_queue** %queue, align 8, !dbg !12935
  %bp3 = getelementptr inbounds %struct.macb_queue, %struct.macb_queue* %6, i32 0, i32 0, !dbg !12935
  %7 = load %struct.macb*, %struct.macb** %bp3, align 8, !dbg !12935
  %macb_reg_readl = getelementptr inbounds %struct.macb, %struct.macb* %7, i32 0, i32 2, !dbg !12935
  %8 = load i32 (%struct.macb*, i32)*, i32 (%struct.macb*, i32)** %macb_reg_readl, align 8, !dbg !12935
  %9 = load %struct.macb_queue*, %struct.macb_queue** %queue, align 8, !dbg !12935
  %bp4 = getelementptr inbounds %struct.macb_queue, %struct.macb_queue* %9, i32 0, i32 0, !dbg !12935
  %10 = load %struct.macb*, %struct.macb** %bp4, align 8, !dbg !12935
  %11 = load %struct.macb_queue*, %struct.macb_queue** %queue, align 8, !dbg !12935
  %ISR = getelementptr inbounds %struct.macb_queue, %struct.macb_queue* %11, i32 0, i32 2, !dbg !12935
  %12 = load i32, i32* %ISR, align 4, !dbg !12935
  %call = call i32 %8(%struct.macb* %10, i32 %12) #12, !dbg !12935
  store i32 %call, i32* %status, align 4, !dbg !12936
  %13 = load i32, i32* %status, align 4, !dbg !12937
  %tobool = icmp ne i32 %13, 0, !dbg !12937
  %lnot = xor i1 %tobool, true, !dbg !12937
  %lnot5 = xor i1 %lnot, true, !dbg !12937
  %lnot6 = xor i1 %lnot5, true, !dbg !12937
  %lnot.ext = zext i1 %lnot6 to i32, !dbg !12937
  %conv = sext i32 %lnot.ext to i64, !dbg !12937
  %tobool7 = icmp ne i64 %conv, 0, !dbg !12937
  br i1 %tobool7, label %if.then, label %if.end, !dbg !12939

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !12940
  br label %return, !dbg !12940

if.end:                                           ; preds = %entry
  %14 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !12941
  %lock = getelementptr inbounds %struct.macb, %struct.macb* %14, i32 0, i32 10, !dbg !12942
  store %struct.spinlock* %lock, %struct.spinlock** %lock.addr.i, align 8
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #8, !dbg !12943, !srcloc !12945
  %15 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !12946
  %16 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %15, i32 0, i32 0, !dbg !12946
  %rlock.i = bitcast %union.anon.1* %16 to %struct.raw_spinlock*, !dbg !12946
  br label %while.cond, !dbg !12948

while.cond:                                       ; preds = %if.end133, %if.end
  %17 = load i32, i32* %status, align 4, !dbg !12949
  %tobool8 = icmp ne i32 %17, 0, !dbg !12948
  br i1 %tobool8, label %while.body, label %while.end, !dbg !12948

while.body:                                       ; preds = %while.cond
  %18 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !12950
  %call9 = call zeroext i1 @netif_running(%struct.net_device* %18) #12, !dbg !12950
  %lnot10 = xor i1 %call9, true, !dbg !12950
  %lnot12 = xor i1 %lnot10, true, !dbg !12950
  %lnot14 = xor i1 %lnot12, true, !dbg !12950
  %lnot.ext15 = zext i1 %lnot14 to i32, !dbg !12950
  %conv16 = sext i32 %lnot.ext15 to i64, !dbg !12950
  %tobool17 = icmp ne i64 %conv16, 0, !dbg !12950
  br i1 %tobool17, label %if.then18, label %if.end28, !dbg !12953

if.then18:                                        ; preds = %while.body
  %19 = load %struct.macb_queue*, %struct.macb_queue** %queue, align 8, !dbg !12954
  %bp19 = getelementptr inbounds %struct.macb_queue, %struct.macb_queue* %19, i32 0, i32 0, !dbg !12954
  %20 = load %struct.macb*, %struct.macb** %bp19, align 8, !dbg !12954
  %macb_reg_writel = getelementptr inbounds %struct.macb, %struct.macb* %20, i32 0, i32 3, !dbg !12954
  %21 = load void (%struct.macb*, i32, i32)*, void (%struct.macb*, i32, i32)** %macb_reg_writel, align 8, !dbg !12954
  %22 = load %struct.macb_queue*, %struct.macb_queue** %queue, align 8, !dbg !12954
  %bp20 = getelementptr inbounds %struct.macb_queue, %struct.macb_queue* %22, i32 0, i32 0, !dbg !12954
  %23 = load %struct.macb*, %struct.macb** %bp20, align 8, !dbg !12954
  %24 = load %struct.macb_queue*, %struct.macb_queue** %queue, align 8, !dbg !12954
  %IDR = getelementptr inbounds %struct.macb_queue, %struct.macb_queue* %24, i32 0, i32 4, !dbg !12954
  %25 = load i32, i32* %IDR, align 4, !dbg !12954
  call void %21(%struct.macb* %23, i32 %25, i32 -1) #12, !dbg !12954
  %26 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !12956
  %caps = getelementptr inbounds %struct.macb, %struct.macb* %26, i32 0, i32 23, !dbg !12958
  %27 = load i32, i32* %caps, align 8, !dbg !12958
  %and = and i32 %27, 1, !dbg !12959
  %tobool21 = icmp ne i32 %and, 0, !dbg !12959
  br i1 %tobool21, label %if.then22, label %if.end27, !dbg !12960

if.then22:                                        ; preds = %if.then18
  %28 = load %struct.macb_queue*, %struct.macb_queue** %queue, align 8, !dbg !12961
  %bp23 = getelementptr inbounds %struct.macb_queue, %struct.macb_queue* %28, i32 0, i32 0, !dbg !12961
  %29 = load %struct.macb*, %struct.macb** %bp23, align 8, !dbg !12961
  %macb_reg_writel24 = getelementptr inbounds %struct.macb, %struct.macb* %29, i32 0, i32 3, !dbg !12961
  %30 = load void (%struct.macb*, i32, i32)*, void (%struct.macb*, i32, i32)** %macb_reg_writel24, align 8, !dbg !12961
  %31 = load %struct.macb_queue*, %struct.macb_queue** %queue, align 8, !dbg !12961
  %bp25 = getelementptr inbounds %struct.macb_queue, %struct.macb_queue* %31, i32 0, i32 0, !dbg !12961
  %32 = load %struct.macb*, %struct.macb** %bp25, align 8, !dbg !12961
  %33 = load %struct.macb_queue*, %struct.macb_queue** %queue, align 8, !dbg !12961
  %ISR26 = getelementptr inbounds %struct.macb_queue, %struct.macb_queue* %33, i32 0, i32 2, !dbg !12961
  %34 = load i32, i32* %ISR26, align 4, !dbg !12961
  call void %30(%struct.macb* %32, i32 %34, i32 -1) #12, !dbg !12961
  br label %if.end27, !dbg !12961

if.end27:                                         ; preds = %if.then22, %if.then18
  br label %while.end, !dbg !12962

if.end28:                                         ; preds = %while.body
  store i32 0, i32* %tmp, align 4, !dbg !12963
  %35 = load i32, i32* %tmp, align 4, !dbg !12966
  %36 = load i32, i32* %status, align 4, !dbg !12967
  %37 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !12969
  %rx_intr_mask = getelementptr inbounds %struct.macb, %struct.macb* %37, i32 0, i32 48, !dbg !12970
  %38 = load i32, i32* %rx_intr_mask, align 8, !dbg !12970
  %and29 = and i32 %36, %38, !dbg !12971
  %tobool30 = icmp ne i32 %and29, 0, !dbg !12971
  br i1 %tobool30, label %if.then31, label %if.end51, !dbg !12972

if.then31:                                        ; preds = %if.end28
  %39 = load %struct.macb_queue*, %struct.macb_queue** %queue, align 8, !dbg !12973
  %bp32 = getelementptr inbounds %struct.macb_queue, %struct.macb_queue* %39, i32 0, i32 0, !dbg !12973
  %40 = load %struct.macb*, %struct.macb** %bp32, align 8, !dbg !12973
  %macb_reg_writel33 = getelementptr inbounds %struct.macb, %struct.macb* %40, i32 0, i32 3, !dbg !12973
  %41 = load void (%struct.macb*, i32, i32)*, void (%struct.macb*, i32, i32)** %macb_reg_writel33, align 8, !dbg !12973
  %42 = load %struct.macb_queue*, %struct.macb_queue** %queue, align 8, !dbg !12973
  %bp34 = getelementptr inbounds %struct.macb_queue, %struct.macb_queue* %42, i32 0, i32 0, !dbg !12973
  %43 = load %struct.macb*, %struct.macb** %bp34, align 8, !dbg !12973
  %44 = load %struct.macb_queue*, %struct.macb_queue** %queue, align 8, !dbg !12973
  %IDR35 = getelementptr inbounds %struct.macb_queue, %struct.macb_queue* %44, i32 0, i32 4, !dbg !12973
  %45 = load i32, i32* %IDR35, align 4, !dbg !12973
  %46 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !12973
  %rx_intr_mask36 = getelementptr inbounds %struct.macb, %struct.macb* %46, i32 0, i32 48, !dbg !12973
  %47 = load i32, i32* %rx_intr_mask36, align 8, !dbg !12973
  call void %41(%struct.macb* %43, i32 %45, i32 %47) #12, !dbg !12973
  %48 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !12975
  %caps37 = getelementptr inbounds %struct.macb, %struct.macb* %48, i32 0, i32 23, !dbg !12977
  %49 = load i32, i32* %caps37, align 8, !dbg !12977
  %and38 = and i32 %49, 1, !dbg !12978
  %tobool39 = icmp ne i32 %and38, 0, !dbg !12978
  br i1 %tobool39, label %if.then40, label %if.end45, !dbg !12979

if.then40:                                        ; preds = %if.then31
  %50 = load %struct.macb_queue*, %struct.macb_queue** %queue, align 8, !dbg !12980
  %bp41 = getelementptr inbounds %struct.macb_queue, %struct.macb_queue* %50, i32 0, i32 0, !dbg !12980
  %51 = load %struct.macb*, %struct.macb** %bp41, align 8, !dbg !12980
  %macb_reg_writel42 = getelementptr inbounds %struct.macb, %struct.macb* %51, i32 0, i32 3, !dbg !12980
  %52 = load void (%struct.macb*, i32, i32)*, void (%struct.macb*, i32, i32)** %macb_reg_writel42, align 8, !dbg !12980
  %53 = load %struct.macb_queue*, %struct.macb_queue** %queue, align 8, !dbg !12980
  %bp43 = getelementptr inbounds %struct.macb_queue, %struct.macb_queue* %53, i32 0, i32 0, !dbg !12980
  %54 = load %struct.macb*, %struct.macb** %bp43, align 8, !dbg !12980
  %55 = load %struct.macb_queue*, %struct.macb_queue** %queue, align 8, !dbg !12980
  %ISR44 = getelementptr inbounds %struct.macb_queue, %struct.macb_queue* %55, i32 0, i32 2, !dbg !12980
  %56 = load i32, i32* %ISR44, align 4, !dbg !12980
  call void %52(%struct.macb* %54, i32 %56, i32 2) #12, !dbg !12980
  br label %if.end45, !dbg !12980

if.end45:                                         ; preds = %if.then40, %if.then31
  %57 = load %struct.macb_queue*, %struct.macb_queue** %queue, align 8, !dbg !12981
  %napi = getelementptr inbounds %struct.macb_queue, %struct.macb_queue* %57, i32 0, i32 24, !dbg !12983
  %call46 = call zeroext i1 @napi_schedule_prep(%struct.napi_struct* %napi) #12, !dbg !12984
  br i1 %call46, label %if.then47, label %if.end50, !dbg !12985

if.then47:                                        ; preds = %if.end45
  store i32 0, i32* %tmp48, align 4, !dbg !12986
  %58 = load i32, i32* %tmp48, align 4, !dbg !12990
  %59 = load %struct.macb_queue*, %struct.macb_queue** %queue, align 8, !dbg !12991
  %napi49 = getelementptr inbounds %struct.macb_queue, %struct.macb_queue* %59, i32 0, i32 24, !dbg !12992
  call void @__napi_schedule(%struct.napi_struct* %napi49) #12, !dbg !12993
  br label %if.end50, !dbg !12994

if.end50:                                         ; preds = %if.then47, %if.end45
  br label %if.end51, !dbg !12995

if.end51:                                         ; preds = %if.end50, %if.end28
  %60 = load i32, i32* %status, align 4, !dbg !12996
  %and52 = and i32 %60, 112, !dbg !12996
  %tobool53 = icmp ne i32 %and52, 0, !dbg !12996
  %lnot54 = xor i1 %tobool53, true, !dbg !12996
  %lnot56 = xor i1 %lnot54, true, !dbg !12996
  %lnot.ext57 = zext i1 %lnot56 to i32, !dbg !12996
  %conv58 = sext i32 %lnot.ext57 to i64, !dbg !12996
  %tobool59 = icmp ne i64 %conv58, 0, !dbg !12996
  br i1 %tobool59, label %if.then60, label %if.end75, !dbg !12998

if.then60:                                        ; preds = %if.end51
  %61 = load %struct.macb_queue*, %struct.macb_queue** %queue, align 8, !dbg !12999
  %bp61 = getelementptr inbounds %struct.macb_queue, %struct.macb_queue* %61, i32 0, i32 0, !dbg !12999
  %62 = load %struct.macb*, %struct.macb** %bp61, align 8, !dbg !12999
  %macb_reg_writel62 = getelementptr inbounds %struct.macb, %struct.macb* %62, i32 0, i32 3, !dbg !12999
  %63 = load void (%struct.macb*, i32, i32)*, void (%struct.macb*, i32, i32)** %macb_reg_writel62, align 8, !dbg !12999
  %64 = load %struct.macb_queue*, %struct.macb_queue** %queue, align 8, !dbg !12999
  %bp63 = getelementptr inbounds %struct.macb_queue, %struct.macb_queue* %64, i32 0, i32 0, !dbg !12999
  %65 = load %struct.macb*, %struct.macb** %bp63, align 8, !dbg !12999
  %66 = load %struct.macb_queue*, %struct.macb_queue** %queue, align 8, !dbg !12999
  %IDR64 = getelementptr inbounds %struct.macb_queue, %struct.macb_queue* %66, i32 0, i32 4, !dbg !12999
  %67 = load i32, i32* %IDR64, align 4, !dbg !12999
  call void %63(%struct.macb* %65, i32 %67, i32 248) #12, !dbg !12999
  %68 = load %struct.macb_queue*, %struct.macb_queue** %queue, align 8, !dbg !13001
  %tx_error_task = getelementptr inbounds %struct.macb_queue, %struct.macb_queue* %68, i32 0, i32 16, !dbg !13002
  %call65 = call zeroext i1 @schedule_work(%struct.work_struct* %tx_error_task) #12, !dbg !13003
  %69 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !13004
  %caps66 = getelementptr inbounds %struct.macb, %struct.macb* %69, i32 0, i32 23, !dbg !13006
  %70 = load i32, i32* %caps66, align 8, !dbg !13006
  %and67 = and i32 %70, 1, !dbg !13007
  %tobool68 = icmp ne i32 %and67, 0, !dbg !13007
  br i1 %tobool68, label %if.then69, label %if.end74, !dbg !13008

if.then69:                                        ; preds = %if.then60
  %71 = load %struct.macb_queue*, %struct.macb_queue** %queue, align 8, !dbg !13009
  %bp70 = getelementptr inbounds %struct.macb_queue, %struct.macb_queue* %71, i32 0, i32 0, !dbg !13009
  %72 = load %struct.macb*, %struct.macb** %bp70, align 8, !dbg !13009
  %macb_reg_writel71 = getelementptr inbounds %struct.macb, %struct.macb* %72, i32 0, i32 3, !dbg !13009
  %73 = load void (%struct.macb*, i32, i32)*, void (%struct.macb*, i32, i32)** %macb_reg_writel71, align 8, !dbg !13009
  %74 = load %struct.macb_queue*, %struct.macb_queue** %queue, align 8, !dbg !13009
  %bp72 = getelementptr inbounds %struct.macb_queue, %struct.macb_queue* %74, i32 0, i32 0, !dbg !13009
  %75 = load %struct.macb*, %struct.macb** %bp72, align 8, !dbg !13009
  %76 = load %struct.macb_queue*, %struct.macb_queue** %queue, align 8, !dbg !13009
  %ISR73 = getelementptr inbounds %struct.macb_queue, %struct.macb_queue* %76, i32 0, i32 2, !dbg !13009
  %77 = load i32, i32* %ISR73, align 4, !dbg !13009
  call void %73(%struct.macb* %75, i32 %77, i32 112) #12, !dbg !13009
  br label %if.end74, !dbg !13009

if.end74:                                         ; preds = %if.then69, %if.then60
  br label %while.end, !dbg !13010

if.end75:                                         ; preds = %if.end51
  %78 = load i32, i32* %status, align 4, !dbg !13011
  %and76 = and i32 %78, 128, !dbg !13013
  %tobool77 = icmp ne i32 %and76, 0, !dbg !13013
  br i1 %tobool77, label %if.then78, label %if.end79, !dbg !13014

if.then78:                                        ; preds = %if.end75
  %79 = load %struct.macb_queue*, %struct.macb_queue** %queue, align 8, !dbg !13015
  call void @macb_tx_interrupt(%struct.macb_queue* %79) #12, !dbg !13016
  br label %if.end79, !dbg !13016

if.end79:                                         ; preds = %if.then78, %if.end75
  %80 = load i32, i32* %status, align 4, !dbg !13017
  %and80 = and i32 %80, 8, !dbg !13019
  %tobool81 = icmp ne i32 %and80, 0, !dbg !13019
  br i1 %tobool81, label %if.then82, label %if.end83, !dbg !13020

if.then82:                                        ; preds = %if.end79
  %81 = load %struct.macb_queue*, %struct.macb_queue** %queue, align 8, !dbg !13021
  call void @macb_tx_restart(%struct.macb_queue* %81) #12, !dbg !13022
  br label %if.end83, !dbg !13022

if.end83:                                         ; preds = %if.then82, %if.end79
  %82 = load i32, i32* %status, align 4, !dbg !13023
  %and84 = and i32 %82, 4, !dbg !13025
  %tobool85 = icmp ne i32 %and84, 0, !dbg !13025
  br i1 %tobool85, label %if.then86, label %if.end101, !dbg !13026

if.then86:                                        ; preds = %if.end83
  %83 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !13027
  %macb_reg_readl87 = getelementptr inbounds %struct.macb, %struct.macb* %83, i32 0, i32 2, !dbg !13027
  %84 = load i32 (%struct.macb*, i32)*, i32 (%struct.macb*, i32)** %macb_reg_readl87, align 8, !dbg !13027
  %85 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !13027
  %call88 = call i32 %84(%struct.macb* %85, i32 0) #12, !dbg !13027
  store i32 %call88, i32* %ctrl, align 4, !dbg !13029
  %86 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !13030
  %macb_reg_writel89 = getelementptr inbounds %struct.macb, %struct.macb* %86, i32 0, i32 3, !dbg !13030
  %87 = load void (%struct.macb*, i32, i32)*, void (%struct.macb*, i32, i32)** %macb_reg_writel89, align 8, !dbg !13030
  %88 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !13030
  %89 = load i32, i32* %ctrl, align 4, !dbg !13030
  %and90 = and i32 %89, -5, !dbg !13030
  call void %87(%struct.macb* %88, i32 0, i32 %and90) #12, !dbg !13030
  call void asm sideeffect "sfence", "~{memory},~{dirflag},~{fpsr},~{flags}"() #8, !dbg !13031, !srcloc !13032
  %90 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !13033
  %macb_reg_writel91 = getelementptr inbounds %struct.macb, %struct.macb* %90, i32 0, i32 3, !dbg !13033
  %91 = load void (%struct.macb*, i32, i32)*, void (%struct.macb*, i32, i32)** %macb_reg_writel91, align 8, !dbg !13033
  %92 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !13033
  %93 = load i32, i32* %ctrl, align 4, !dbg !13033
  %or = or i32 %93, 4, !dbg !13033
  call void %91(%struct.macb* %92, i32 0, i32 %or) #12, !dbg !13033
  %94 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !13034
  %caps92 = getelementptr inbounds %struct.macb, %struct.macb* %94, i32 0, i32 23, !dbg !13036
  %95 = load i32, i32* %caps92, align 8, !dbg !13036
  %and93 = and i32 %95, 1, !dbg !13037
  %tobool94 = icmp ne i32 %and93, 0, !dbg !13037
  br i1 %tobool94, label %if.then95, label %if.end100, !dbg !13038

if.then95:                                        ; preds = %if.then86
  %96 = load %struct.macb_queue*, %struct.macb_queue** %queue, align 8, !dbg !13039
  %bp96 = getelementptr inbounds %struct.macb_queue, %struct.macb_queue* %96, i32 0, i32 0, !dbg !13039
  %97 = load %struct.macb*, %struct.macb** %bp96, align 8, !dbg !13039
  %macb_reg_writel97 = getelementptr inbounds %struct.macb, %struct.macb* %97, i32 0, i32 3, !dbg !13039
  %98 = load void (%struct.macb*, i32, i32)*, void (%struct.macb*, i32, i32)** %macb_reg_writel97, align 8, !dbg !13039
  %99 = load %struct.macb_queue*, %struct.macb_queue** %queue, align 8, !dbg !13039
  %bp98 = getelementptr inbounds %struct.macb_queue, %struct.macb_queue* %99, i32 0, i32 0, !dbg !13039
  %100 = load %struct.macb*, %struct.macb** %bp98, align 8, !dbg !13039
  %101 = load %struct.macb_queue*, %struct.macb_queue** %queue, align 8, !dbg !13039
  %ISR99 = getelementptr inbounds %struct.macb_queue, %struct.macb_queue* %101, i32 0, i32 2, !dbg !13039
  %102 = load i32, i32* %ISR99, align 4, !dbg !13039
  call void %98(%struct.macb* %100, i32 %102, i32 4) #12, !dbg !13039
  br label %if.end100, !dbg !13039

if.end100:                                        ; preds = %if.then95, %if.then86
  br label %if.end101, !dbg !13040

if.end101:                                        ; preds = %if.end100, %if.end83
  %103 = load i32, i32* %status, align 4, !dbg !13041
  %and102 = and i32 %103, 1024, !dbg !13043
  %tobool103 = icmp ne i32 %and102, 0, !dbg !13043
  br i1 %tobool103, label %if.then104, label %if.end120, !dbg !13044

if.then104:                                       ; preds = %if.end101
  %104 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !13045
  %call105 = call zeroext i1 @macb_is_gem(%struct.macb* %104) #12, !dbg !13048
  br i1 %call105, label %if.then106, label %if.else, !dbg !13049

if.then106:                                       ; preds = %if.then104
  %105 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !13050
  %hw_stats = getelementptr inbounds %struct.macb, %struct.macb* %105, i32 0, i32 18, !dbg !13051
  %gem = bitcast %union.anon.162* %hw_stats to %struct.gem_stats*, !dbg !13052
  %rx_overruns = getelementptr inbounds %struct.gem_stats, %struct.gem_stats* %gem, i32 0, i32 41, !dbg !13053
  %106 = load i32, i32* %rx_overruns, align 4, !dbg !13054
  %inc = add i32 %106, 1, !dbg !13054
  store i32 %inc, i32* %rx_overruns, align 4, !dbg !13054
  br label %if.end110, !dbg !13050

if.else:                                          ; preds = %if.then104
  %107 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !13055
  %hw_stats107 = getelementptr inbounds %struct.macb, %struct.macb* %107, i32 0, i32 18, !dbg !13056
  %macb = bitcast %union.anon.162* %hw_stats107 to %struct.macb_stats*, !dbg !13057
  %rx_overruns108 = getelementptr inbounds %struct.macb_stats, %struct.macb_stats* %macb, i32 0, i32 13, !dbg !13058
  %108 = load i32, i32* %rx_overruns108, align 4, !dbg !13059
  %inc109 = add i32 %108, 1, !dbg !13059
  store i32 %inc109, i32* %rx_overruns108, align 4, !dbg !13059
  br label %if.end110

if.end110:                                        ; preds = %if.else, %if.then106
  %109 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !13060
  %caps111 = getelementptr inbounds %struct.macb, %struct.macb* %109, i32 0, i32 23, !dbg !13062
  %110 = load i32, i32* %caps111, align 8, !dbg !13062
  %and112 = and i32 %110, 1, !dbg !13063
  %tobool113 = icmp ne i32 %and112, 0, !dbg !13063
  br i1 %tobool113, label %if.then114, label %if.end119, !dbg !13064

if.then114:                                       ; preds = %if.end110
  %111 = load %struct.macb_queue*, %struct.macb_queue** %queue, align 8, !dbg !13065
  %bp115 = getelementptr inbounds %struct.macb_queue, %struct.macb_queue* %111, i32 0, i32 0, !dbg !13065
  %112 = load %struct.macb*, %struct.macb** %bp115, align 8, !dbg !13065
  %macb_reg_writel116 = getelementptr inbounds %struct.macb, %struct.macb* %112, i32 0, i32 3, !dbg !13065
  %113 = load void (%struct.macb*, i32, i32)*, void (%struct.macb*, i32, i32)** %macb_reg_writel116, align 8, !dbg !13065
  %114 = load %struct.macb_queue*, %struct.macb_queue** %queue, align 8, !dbg !13065
  %bp117 = getelementptr inbounds %struct.macb_queue, %struct.macb_queue* %114, i32 0, i32 0, !dbg !13065
  %115 = load %struct.macb*, %struct.macb** %bp117, align 8, !dbg !13065
  %116 = load %struct.macb_queue*, %struct.macb_queue** %queue, align 8, !dbg !13065
  %ISR118 = getelementptr inbounds %struct.macb_queue, %struct.macb_queue* %116, i32 0, i32 2, !dbg !13065
  %117 = load i32, i32* %ISR118, align 4, !dbg !13065
  call void %113(%struct.macb* %115, i32 %117, i32 1024) #12, !dbg !13065
  br label %if.end119, !dbg !13065

if.end119:                                        ; preds = %if.then114, %if.end110
  br label %if.end120, !dbg !13066

if.end120:                                        ; preds = %if.end119, %if.end101
  %118 = load i32, i32* %status, align 4, !dbg !13067
  %and121 = and i32 %118, 2048, !dbg !13069
  %tobool122 = icmp ne i32 %and121, 0, !dbg !13069
  br i1 %tobool122, label %if.then123, label %if.end133, !dbg !13070

if.then123:                                       ; preds = %if.end120
  %119 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !13071
  %hresp_err_tasklet = getelementptr inbounds %struct.macb, %struct.macb* %119, i32 0, i32 45, !dbg !13073
  call void @tasklet_schedule(%struct.tasklet_struct* %hresp_err_tasklet) #12, !dbg !13074
  %120 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !13075
  call void (%struct.net_device*, i8*, ...) @netdev_err(%struct.net_device* %120, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.19, i64 0, i64 0)) #13, !dbg !13076
  %121 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !13077
  %caps124 = getelementptr inbounds %struct.macb, %struct.macb* %121, i32 0, i32 23, !dbg !13079
  %122 = load i32, i32* %caps124, align 8, !dbg !13079
  %and125 = and i32 %122, 1, !dbg !13080
  %tobool126 = icmp ne i32 %and125, 0, !dbg !13080
  br i1 %tobool126, label %if.then127, label %if.end132, !dbg !13081

if.then127:                                       ; preds = %if.then123
  %123 = load %struct.macb_queue*, %struct.macb_queue** %queue, align 8, !dbg !13082
  %bp128 = getelementptr inbounds %struct.macb_queue, %struct.macb_queue* %123, i32 0, i32 0, !dbg !13082
  %124 = load %struct.macb*, %struct.macb** %bp128, align 8, !dbg !13082
  %macb_reg_writel129 = getelementptr inbounds %struct.macb, %struct.macb* %124, i32 0, i32 3, !dbg !13082
  %125 = load void (%struct.macb*, i32, i32)*, void (%struct.macb*, i32, i32)** %macb_reg_writel129, align 8, !dbg !13082
  %126 = load %struct.macb_queue*, %struct.macb_queue** %queue, align 8, !dbg !13082
  %bp130 = getelementptr inbounds %struct.macb_queue, %struct.macb_queue* %126, i32 0, i32 0, !dbg !13082
  %127 = load %struct.macb*, %struct.macb** %bp130, align 8, !dbg !13082
  %128 = load %struct.macb_queue*, %struct.macb_queue** %queue, align 8, !dbg !13082
  %ISR131 = getelementptr inbounds %struct.macb_queue, %struct.macb_queue* %128, i32 0, i32 2, !dbg !13082
  %129 = load i32, i32* %ISR131, align 4, !dbg !13082
  call void %125(%struct.macb* %127, i32 %129, i32 2048) #12, !dbg !13082
  br label %if.end132, !dbg !13082

if.end132:                                        ; preds = %if.then127, %if.then123
  br label %if.end133, !dbg !13083

if.end133:                                        ; preds = %if.end132, %if.end120
  %130 = load %struct.macb_queue*, %struct.macb_queue** %queue, align 8, !dbg !13084
  %bp134 = getelementptr inbounds %struct.macb_queue, %struct.macb_queue* %130, i32 0, i32 0, !dbg !13084
  %131 = load %struct.macb*, %struct.macb** %bp134, align 8, !dbg !13084
  %macb_reg_readl135 = getelementptr inbounds %struct.macb, %struct.macb* %131, i32 0, i32 2, !dbg !13084
  %132 = load i32 (%struct.macb*, i32)*, i32 (%struct.macb*, i32)** %macb_reg_readl135, align 8, !dbg !13084
  %133 = load %struct.macb_queue*, %struct.macb_queue** %queue, align 8, !dbg !13084
  %bp136 = getelementptr inbounds %struct.macb_queue, %struct.macb_queue* %133, i32 0, i32 0, !dbg !13084
  %134 = load %struct.macb*, %struct.macb** %bp136, align 8, !dbg !13084
  %135 = load %struct.macb_queue*, %struct.macb_queue** %queue, align 8, !dbg !13084
  %ISR137 = getelementptr inbounds %struct.macb_queue, %struct.macb_queue* %135, i32 0, i32 2, !dbg !13084
  %136 = load i32, i32* %ISR137, align 4, !dbg !13084
  %call138 = call i32 %132(%struct.macb* %134, i32 %136) #12, !dbg !13084
  store i32 %call138, i32* %status, align 4, !dbg !13085
  br label %while.cond, !dbg !12948, !llvm.loop !13086

while.end:                                        ; preds = %if.end74, %if.end27, %while.cond
  %137 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !13088
  %lock139 = getelementptr inbounds %struct.macb, %struct.macb* %137, i32 0, i32 10, !dbg !13089
  store %struct.spinlock* %lock139, %struct.spinlock** %lock.addr.i140, align 8
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #8, !dbg !13090, !srcloc !13092
  %138 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i140, align 8, !dbg !13093
  %139 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %138, i32 0, i32 0, !dbg !13093
  %rlock.i141 = bitcast %union.anon.1* %139 to %struct.raw_spinlock*, !dbg !13093
  store i32 1, i32* %retval, align 4, !dbg !13095
  br label %return, !dbg !13095

return:                                           ; preds = %while.end, %if.then
  %140 = load i32, i32* %retval, align 4, !dbg !13096
  ret i32 %140, !dbg !13096
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @__init_work(%struct.work_struct* %work, i32 %onstack) #2 !dbg !13097 {
entry:
  %work.addr = alloca %struct.work_struct*, align 8
  %onstack.addr = alloca i32, align 4
  store %struct.work_struct* %work, %struct.work_struct** %work.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.work_struct** %work.addr, metadata !13100, metadata !DIExpression()), !dbg !13101
  store i32 %onstack, i32* %onstack.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %onstack.addr, metadata !13102, metadata !DIExpression()), !dbg !13103
  ret void, !dbg !13104
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @INIT_LIST_HEAD(%struct.list_head* %list) #2 !dbg !13105 {
entry:
  %list.addr = alloca %struct.list_head*, align 8
  store %struct.list_head* %list, %struct.list_head** %list.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %list.addr, metadata !13109, metadata !DIExpression()), !dbg !13110
  br label %do.body, !dbg !13111

do.body:                                          ; preds = %entry
  br label %do.body1, !dbg !13112

do.body1:                                         ; preds = %do.body
  br label %do.end, !dbg !13114

do.end:                                           ; preds = %do.body1
  br label %do.body2, !dbg !13112

do.body2:                                         ; preds = %do.end
  %0 = load %struct.list_head*, %struct.list_head** %list.addr, align 8, !dbg !13116
  %1 = load %struct.list_head*, %struct.list_head** %list.addr, align 8, !dbg !13116
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %1, i32 0, i32 0, !dbg !13116
  store volatile %struct.list_head* %0, %struct.list_head** %next, align 8, !dbg !13116
  br label %do.end3, !dbg !13116

do.end3:                                          ; preds = %do.body2
  br label %do.end4, !dbg !13112

do.end4:                                          ; preds = %do.end3
  %2 = load %struct.list_head*, %struct.list_head** %list.addr, align 8, !dbg !13118
  %3 = load %struct.list_head*, %struct.list_head** %list.addr, align 8, !dbg !13119
  %prev = getelementptr inbounds %struct.list_head, %struct.list_head* %3, i32 0, i32 1, !dbg !13120
  store %struct.list_head* %2, %struct.list_head** %prev, align 8, !dbg !13121
  ret void, !dbg !13122
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @macb_tx_error_task(%struct.work_struct* %work) #2 !dbg !13123 {
entry:
  %lock.addr.i93 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i93, metadata !13124, metadata !DIExpression()), !dbg !13128
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !13130, metadata !DIExpression()), !dbg !13131
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !11065, metadata !DIExpression()), !dbg !13132
  %work.addr = alloca %struct.work_struct*, align 8
  %queue = alloca %struct.macb_queue*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.macb_queue*, align 8
  %bp = alloca %struct.macb*, align 8
  %tx_skb = alloca %struct.macb_tx_skb*, align 8
  %desc = alloca %struct.macb_dma_desc*, align 8
  %skb = alloca %struct.sk_buff*, align 8
  %tail = alloca i32, align 4
  %flags = alloca i64, align 8
  %tmp2 = alloca i32, align 4
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp5 = alloca i32, align 4
  %__dummy9 = alloca i64, align 8
  %__dummy210 = alloca i64, align 8
  %tmp13 = alloca i32, align 4
  %ctrl = alloca i32, align 4
  %tmp40 = alloca i32, align 4
  store %struct.work_struct* %work, %struct.work_struct** %work.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.work_struct** %work.addr, metadata !13139, metadata !DIExpression()), !dbg !13140
  call void @llvm.dbg.declare(metadata %struct.macb_queue** %queue, metadata !13141, metadata !DIExpression()), !dbg !13142
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !13143, metadata !DIExpression()), !dbg !13145
  %0 = load %struct.work_struct*, %struct.work_struct** %work.addr, align 8, !dbg !13145
  %1 = bitcast %struct.work_struct* %0 to i8*, !dbg !13145
  store i8* %1, i8** %__mptr, align 8, !dbg !13145
  br label %do.body, !dbg !13145

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !13146

do.end:                                           ; preds = %do.body
  %2 = load i8*, i8** %__mptr, align 8, !dbg !13145
  %add.ptr = getelementptr i8, i8* %2, i64 -80, !dbg !13145
  %3 = bitcast i8* %add.ptr to %struct.macb_queue*, !dbg !13145
  store %struct.macb_queue* %3, %struct.macb_queue** %tmp, align 8, !dbg !13146
  %4 = load %struct.macb_queue*, %struct.macb_queue** %tmp, align 8, !dbg !13145
  store %struct.macb_queue* %4, %struct.macb_queue** %queue, align 8, !dbg !13142
  call void @llvm.dbg.declare(metadata %struct.macb** %bp, metadata !13148, metadata !DIExpression()), !dbg !13149
  %5 = load %struct.macb_queue*, %struct.macb_queue** %queue, align 8, !dbg !13150
  %bp1 = getelementptr inbounds %struct.macb_queue, %struct.macb_queue* %5, i32 0, i32 0, !dbg !13151
  %6 = load %struct.macb*, %struct.macb** %bp1, align 8, !dbg !13151
  store %struct.macb* %6, %struct.macb** %bp, align 8, !dbg !13149
  call void @llvm.dbg.declare(metadata %struct.macb_tx_skb** %tx_skb, metadata !13152, metadata !DIExpression()), !dbg !13153
  call void @llvm.dbg.declare(metadata %struct.macb_dma_desc** %desc, metadata !13154, metadata !DIExpression()), !dbg !13155
  call void @llvm.dbg.declare(metadata %struct.sk_buff** %skb, metadata !13156, metadata !DIExpression()), !dbg !13157
  call void @llvm.dbg.declare(metadata i32* %tail, metadata !13158, metadata !DIExpression()), !dbg !13159
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !13160, metadata !DIExpression()), !dbg !13161
  store i32 0, i32* %tmp2, align 4, !dbg !13162
  %7 = load i32, i32* %tmp2, align 4, !dbg !13165
  br label %do.body3, !dbg !13166

do.body3:                                         ; preds = %do.end
  br label %do.body4, !dbg !13167

do.body4:                                         ; preds = %do.body3
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !13168, metadata !DIExpression()), !dbg !13170
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !13171, metadata !DIExpression()), !dbg !13170
  %cmp = icmp eq i64* %__dummy, %__dummy2, !dbg !13170
  %conv = zext i1 %cmp to i32, !dbg !13170
  store i32 1, i32* %tmp5, align 4, !dbg !13170
  %8 = load i32, i32* %tmp5, align 4, !dbg !13170
  br label %do.body6, !dbg !13172

do.body6:                                         ; preds = %do.body4
  br label %do.body7, !dbg !13173

do.body7:                                         ; preds = %do.body6
  br label %do.body8, !dbg !13174

do.body8:                                         ; preds = %do.body7
  call void @llvm.dbg.declare(metadata i64* %__dummy9, metadata !13176, metadata !DIExpression()), !dbg !13179
  call void @llvm.dbg.declare(metadata i64* %__dummy210, metadata !13180, metadata !DIExpression()), !dbg !13179
  %cmp11 = icmp eq i64* %__dummy9, %__dummy210, !dbg !13179
  %conv12 = zext i1 %cmp11 to i32, !dbg !13179
  store i32 1, i32* %tmp13, align 4, !dbg !13179
  %9 = load i32, i32* %tmp13, align 4, !dbg !13179
  %call = call i64 @arch_local_irq_save() #12, !dbg !13181
  store i64 %call, i64* %flags, align 8, !dbg !13181
  br label %do.end14, !dbg !13181

do.end14:                                         ; preds = %do.body8
  br label %do.end15, !dbg !13174

do.end15:                                         ; preds = %do.end14
  br label %do.body16, !dbg !13173

do.body16:                                        ; preds = %do.end15
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #8, !dbg !13182, !srcloc !13183
  br label %do.body17, !dbg !13182

do.body17:                                        ; preds = %do.body16
  %10 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !13184
  %lock = getelementptr inbounds %struct.macb, %struct.macb* %10, i32 0, i32 10, !dbg !13184
  store %struct.spinlock* %lock, %struct.spinlock** %lock.addr.i, align 8
  %11 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !13185
  %12 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %11, i32 0, i32 0, !dbg !13186
  %rlock.i = bitcast %union.anon.1* %12 to %struct.raw_spinlock*, !dbg !13186
  br label %do.end19, !dbg !13184

do.end19:                                         ; preds = %do.body17
  br label %do.end20, !dbg !13182

do.end20:                                         ; preds = %do.end19
  br label %do.end21, !dbg !13173

do.end21:                                         ; preds = %do.end20
  br label %do.end22, !dbg !13172

do.end22:                                         ; preds = %do.end21
  br label %do.end23, !dbg !13167

do.end23:                                         ; preds = %do.end22
  %13 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !13187
  %dev = getelementptr inbounds %struct.macb, %struct.macb* %13, i32 0, i32 17, !dbg !13188
  %14 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !13188
  call void @netif_tx_stop_all_queues(%struct.net_device* %14) #12, !dbg !13189
  %15 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !13190
  %call24 = call i32 @macb_halt_tx(%struct.macb* %15) #12, !dbg !13192
  %tobool = icmp ne i32 %call24, 0, !dbg !13192
  br i1 %tobool, label %if.then, label %if.end, !dbg !13193

if.then:                                          ; preds = %do.end23
  %16 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !13194
  %dev25 = getelementptr inbounds %struct.macb, %struct.macb* %16, i32 0, i32 17, !dbg !13195
  %17 = load %struct.net_device*, %struct.net_device** %dev25, align 8, !dbg !13195
  call void (%struct.net_device*, i8*, ...) @netdev_err(%struct.net_device* %17, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.20, i64 0, i64 0)) #13, !dbg !13196
  br label %if.end, !dbg !13196

if.end:                                           ; preds = %if.then, %do.end23
  %18 = load %struct.macb_queue*, %struct.macb_queue** %queue, align 8, !dbg !13197
  %tx_tail = getelementptr inbounds %struct.macb_queue, %struct.macb_queue* %18, i32 0, i32 12, !dbg !13199
  %19 = load i32, i32* %tx_tail, align 4, !dbg !13199
  store i32 %19, i32* %tail, align 4, !dbg !13200
  br label %for.cond, !dbg !13201

for.cond:                                         ; preds = %for.inc, %if.end
  %20 = load i32, i32* %tail, align 4, !dbg !13202
  %21 = load %struct.macb_queue*, %struct.macb_queue** %queue, align 8, !dbg !13204
  %tx_head = getelementptr inbounds %struct.macb_queue, %struct.macb_queue* %21, i32 0, i32 11, !dbg !13205
  %22 = load i32, i32* %tx_head, align 8, !dbg !13205
  %cmp26 = icmp ne i32 %20, %22, !dbg !13206
  br i1 %cmp26, label %for.body, label %for.end, !dbg !13207

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i32* %ctrl, metadata !13208, metadata !DIExpression()), !dbg !13210
  %23 = load %struct.macb_queue*, %struct.macb_queue** %queue, align 8, !dbg !13211
  %24 = load i32, i32* %tail, align 4, !dbg !13212
  %call28 = call %struct.macb_dma_desc* @macb_tx_desc(%struct.macb_queue* %23, i32 %24) #12, !dbg !13213
  store %struct.macb_dma_desc* %call28, %struct.macb_dma_desc** %desc, align 8, !dbg !13214
  %25 = load %struct.macb_dma_desc*, %struct.macb_dma_desc** %desc, align 8, !dbg !13215
  %ctrl29 = getelementptr inbounds %struct.macb_dma_desc, %struct.macb_dma_desc* %25, i32 0, i32 1, !dbg !13216
  %26 = load i32, i32* %ctrl29, align 4, !dbg !13216
  store i32 %26, i32* %ctrl, align 4, !dbg !13217
  %27 = load %struct.macb_queue*, %struct.macb_queue** %queue, align 8, !dbg !13218
  %28 = load i32, i32* %tail, align 4, !dbg !13219
  %call30 = call %struct.macb_tx_skb* @macb_tx_skb(%struct.macb_queue* %27, i32 %28) #12, !dbg !13220
  store %struct.macb_tx_skb* %call30, %struct.macb_tx_skb** %tx_skb, align 8, !dbg !13221
  %29 = load %struct.macb_tx_skb*, %struct.macb_tx_skb** %tx_skb, align 8, !dbg !13222
  %skb31 = getelementptr inbounds %struct.macb_tx_skb, %struct.macb_tx_skb* %29, i32 0, i32 0, !dbg !13223
  %30 = load %struct.sk_buff*, %struct.sk_buff** %skb31, align 8, !dbg !13223
  store %struct.sk_buff* %30, %struct.sk_buff** %skb, align 8, !dbg !13224
  %31 = load i32, i32* %ctrl, align 4, !dbg !13225
  %and = and i32 %31, -2147483648, !dbg !13227
  %tobool32 = icmp ne i32 %and, 0, !dbg !13227
  br i1 %tobool32, label %if.then33, label %if.else, !dbg !13228

if.then33:                                        ; preds = %for.body
  br label %while.cond, !dbg !13229

while.cond:                                       ; preds = %while.body, %if.then33
  %32 = load %struct.sk_buff*, %struct.sk_buff** %skb, align 8, !dbg !13231
  %tobool34 = icmp ne %struct.sk_buff* %32, null, !dbg !13232
  %lnot = xor i1 %tobool34, true, !dbg !13232
  br i1 %lnot, label %while.body, label %while.end, !dbg !13229

while.body:                                       ; preds = %while.cond
  %33 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !13233
  %34 = load %struct.macb_tx_skb*, %struct.macb_tx_skb** %tx_skb, align 8, !dbg !13235
  call void @macb_tx_unmap(%struct.macb* %33, %struct.macb_tx_skb* %34) #12, !dbg !13236
  %35 = load i32, i32* %tail, align 4, !dbg !13237
  %inc = add i32 %35, 1, !dbg !13237
  store i32 %inc, i32* %tail, align 4, !dbg !13237
  %36 = load %struct.macb_queue*, %struct.macb_queue** %queue, align 8, !dbg !13238
  %37 = load i32, i32* %tail, align 4, !dbg !13239
  %call35 = call %struct.macb_tx_skb* @macb_tx_skb(%struct.macb_queue* %36, i32 %37) #12, !dbg !13240
  store %struct.macb_tx_skb* %call35, %struct.macb_tx_skb** %tx_skb, align 8, !dbg !13241
  %38 = load %struct.macb_tx_skb*, %struct.macb_tx_skb** %tx_skb, align 8, !dbg !13242
  %skb36 = getelementptr inbounds %struct.macb_tx_skb, %struct.macb_tx_skb* %38, i32 0, i32 0, !dbg !13243
  %39 = load %struct.sk_buff*, %struct.sk_buff** %skb36, align 8, !dbg !13243
  store %struct.sk_buff* %39, %struct.sk_buff** %skb, align 8, !dbg !13244
  br label %while.cond, !dbg !13229, !llvm.loop !13245

while.end:                                        ; preds = %while.cond
  %40 = load i32, i32* %ctrl, align 4, !dbg !13247
  %and37 = and i32 %40, 134217728, !dbg !13249
  %tobool38 = icmp ne i32 %and37, 0, !dbg !13249
  br i1 %tobool38, label %if.end54, label %if.then39, !dbg !13250

if.then39:                                        ; preds = %while.end
  store i32 0, i32* %tmp40, align 4, !dbg !13251
  %41 = load i32, i32* %tmp40, align 4, !dbg !13255
  %42 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !13256
  %dev41 = getelementptr inbounds %struct.macb, %struct.macb* %42, i32 0, i32 17, !dbg !13257
  %43 = load %struct.net_device*, %struct.net_device** %dev41, align 8, !dbg !13257
  %stats = getelementptr inbounds %struct.net_device, %struct.net_device* %43, i32 0, i32 24, !dbg !13258
  %tx_packets = getelementptr inbounds %struct.net_device_stats, %struct.net_device_stats* %stats, i32 0, i32 1, !dbg !13259
  %44 = load i64, i64* %tx_packets, align 8, !dbg !13260
  %inc42 = add i64 %44, 1, !dbg !13260
  store i64 %inc42, i64* %tx_packets, align 8, !dbg !13260
  %45 = load %struct.macb_queue*, %struct.macb_queue** %queue, align 8, !dbg !13261
  %stats43 = getelementptr inbounds %struct.macb_queue, %struct.macb_queue* %45, i32 0, i32 25, !dbg !13262
  %tx_packets44 = getelementptr inbounds %struct.queue_stats, %struct.queue_stats* %stats43, i32 0, i32 3, !dbg !13263
  %46 = load i64, i64* %tx_packets44, align 8, !dbg !13264
  %inc45 = add i64 %46, 1, !dbg !13264
  store i64 %inc45, i64* %tx_packets44, align 8, !dbg !13264
  %47 = load %struct.sk_buff*, %struct.sk_buff** %skb, align 8, !dbg !13265
  %len = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %47, i32 0, i32 5, !dbg !13266
  %48 = load i32, i32* %len, align 8, !dbg !13266
  %conv46 = zext i32 %48 to i64, !dbg !13265
  %49 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !13267
  %dev47 = getelementptr inbounds %struct.macb, %struct.macb* %49, i32 0, i32 17, !dbg !13268
  %50 = load %struct.net_device*, %struct.net_device** %dev47, align 8, !dbg !13268
  %stats48 = getelementptr inbounds %struct.net_device, %struct.net_device* %50, i32 0, i32 24, !dbg !13269
  %tx_bytes = getelementptr inbounds %struct.net_device_stats, %struct.net_device_stats* %stats48, i32 0, i32 3, !dbg !13270
  %51 = load i64, i64* %tx_bytes, align 8, !dbg !13271
  %add = add i64 %51, %conv46, !dbg !13271
  store i64 %add, i64* %tx_bytes, align 8, !dbg !13271
  %52 = load %struct.sk_buff*, %struct.sk_buff** %skb, align 8, !dbg !13272
  %len49 = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %52, i32 0, i32 5, !dbg !13273
  %53 = load i32, i32* %len49, align 8, !dbg !13273
  %conv50 = zext i32 %53 to i64, !dbg !13272
  %54 = load %struct.macb_queue*, %struct.macb_queue** %queue, align 8, !dbg !13274
  %stats51 = getelementptr inbounds %struct.macb_queue, %struct.macb_queue* %54, i32 0, i32 25, !dbg !13275
  %tx_bytes52 = getelementptr inbounds %struct.queue_stats, %struct.queue_stats* %stats51, i32 0, i32 4, !dbg !13276
  %55 = load i64, i64* %tx_bytes52, align 8, !dbg !13277
  %add53 = add i64 %55, %conv50, !dbg !13277
  store i64 %add53, i64* %tx_bytes52, align 8, !dbg !13277
  br label %if.end54, !dbg !13278

if.end54:                                         ; preds = %if.then39, %while.end
  br label %if.end61, !dbg !13279

if.else:                                          ; preds = %for.body
  %56 = load i32, i32* %ctrl, align 4, !dbg !13280
  %and55 = and i32 %56, 134217728, !dbg !13283
  %tobool56 = icmp ne i32 %and55, 0, !dbg !13283
  br i1 %tobool56, label %if.then57, label %if.end59, !dbg !13284

if.then57:                                        ; preds = %if.else
  %57 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !13285
  %dev58 = getelementptr inbounds %struct.macb, %struct.macb* %57, i32 0, i32 17, !dbg !13286
  %58 = load %struct.net_device*, %struct.net_device** %dev58, align 8, !dbg !13286
  call void (%struct.net_device*, i8*, ...) @netdev_err(%struct.net_device* %58, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.21, i64 0, i64 0)) #13, !dbg !13287
  br label %if.end59, !dbg !13287

if.end59:                                         ; preds = %if.then57, %if.else
  %59 = load i32, i32* %ctrl, align 4, !dbg !13288
  %or = or i32 %59, -2147483648, !dbg !13289
  %60 = load %struct.macb_dma_desc*, %struct.macb_dma_desc** %desc, align 8, !dbg !13290
  %ctrl60 = getelementptr inbounds %struct.macb_dma_desc, %struct.macb_dma_desc* %60, i32 0, i32 1, !dbg !13291
  store i32 %or, i32* %ctrl60, align 4, !dbg !13292
  br label %if.end61

if.end61:                                         ; preds = %if.end59, %if.end54
  %61 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !13293
  %62 = load %struct.macb_tx_skb*, %struct.macb_tx_skb** %tx_skb, align 8, !dbg !13294
  call void @macb_tx_unmap(%struct.macb* %61, %struct.macb_tx_skb* %62) #12, !dbg !13295
  br label %for.inc, !dbg !13296

for.inc:                                          ; preds = %if.end61
  %63 = load i32, i32* %tail, align 4, !dbg !13297
  %inc62 = add i32 %63, 1, !dbg !13297
  store i32 %inc62, i32* %tail, align 4, !dbg !13297
  br label %for.cond, !dbg !13298, !llvm.loop !13299

for.end:                                          ; preds = %for.cond
  %64 = load %struct.macb_queue*, %struct.macb_queue** %queue, align 8, !dbg !13301
  %call63 = call %struct.macb_dma_desc* @macb_tx_desc(%struct.macb_queue* %64, i32 0) #12, !dbg !13302
  store %struct.macb_dma_desc* %call63, %struct.macb_dma_desc** %desc, align 8, !dbg !13303
  %65 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !13304
  %66 = load %struct.macb_dma_desc*, %struct.macb_dma_desc** %desc, align 8, !dbg !13305
  call void @macb_set_addr(%struct.macb* %65, %struct.macb_dma_desc* %66, i64 0) #12, !dbg !13306
  %67 = load %struct.macb_dma_desc*, %struct.macb_dma_desc** %desc, align 8, !dbg !13307
  %ctrl64 = getelementptr inbounds %struct.macb_dma_desc, %struct.macb_dma_desc* %67, i32 0, i32 1, !dbg !13308
  store i32 -2147483648, i32* %ctrl64, align 4, !dbg !13309
  call void asm sideeffect "sfence", "~{memory},~{dirflag},~{fpsr},~{flags}"() #8, !dbg !13310, !srcloc !13311
  %68 = load %struct.macb_queue*, %struct.macb_queue** %queue, align 8, !dbg !13312
  %bp65 = getelementptr inbounds %struct.macb_queue, %struct.macb_queue* %68, i32 0, i32 0, !dbg !13312
  %69 = load %struct.macb*, %struct.macb** %bp65, align 8, !dbg !13312
  %macb_reg_writel = getelementptr inbounds %struct.macb, %struct.macb* %69, i32 0, i32 3, !dbg !13312
  %70 = load void (%struct.macb*, i32, i32)*, void (%struct.macb*, i32, i32)** %macb_reg_writel, align 8, !dbg !13312
  %71 = load %struct.macb_queue*, %struct.macb_queue** %queue, align 8, !dbg !13312
  %bp66 = getelementptr inbounds %struct.macb_queue, %struct.macb_queue* %71, i32 0, i32 0, !dbg !13312
  %72 = load %struct.macb*, %struct.macb** %bp66, align 8, !dbg !13312
  %73 = load %struct.macb_queue*, %struct.macb_queue** %queue, align 8, !dbg !13312
  %TBQP = getelementptr inbounds %struct.macb_queue, %struct.macb_queue* %73, i32 0, i32 6, !dbg !13312
  %74 = load i32, i32* %TBQP, align 4, !dbg !13312
  %75 = load %struct.macb_queue*, %struct.macb_queue** %queue, align 8, !dbg !13312
  %tx_ring_dma = getelementptr inbounds %struct.macb_queue, %struct.macb_queue* %75, i32 0, i32 15, !dbg !13312
  %76 = load i64, i64* %tx_ring_dma, align 8, !dbg !13312
  %and67 = and i64 %76, 4294967295, !dbg !13312
  %conv68 = trunc i64 %and67 to i32, !dbg !13312
  call void %70(%struct.macb* %72, i32 %74, i32 %conv68) #12, !dbg !13312
  %77 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !13313
  %hw_dma_cap = getelementptr inbounds %struct.macb, %struct.macb* %77, i32 0, i32 35, !dbg !13315
  %78 = load i8, i8* %hw_dma_cap, align 8, !dbg !13315
  %conv69 = zext i8 %78 to i32, !dbg !13313
  %and70 = and i32 %conv69, 1, !dbg !13316
  %tobool71 = icmp ne i32 %and70, 0, !dbg !13316
  br i1 %tobool71, label %if.then72, label %if.end79, !dbg !13317

if.then72:                                        ; preds = %for.end
  %79 = load %struct.macb_queue*, %struct.macb_queue** %queue, align 8, !dbg !13318
  %bp73 = getelementptr inbounds %struct.macb_queue, %struct.macb_queue* %79, i32 0, i32 0, !dbg !13318
  %80 = load %struct.macb*, %struct.macb** %bp73, align 8, !dbg !13318
  %macb_reg_writel74 = getelementptr inbounds %struct.macb, %struct.macb* %80, i32 0, i32 3, !dbg !13318
  %81 = load void (%struct.macb*, i32, i32)*, void (%struct.macb*, i32, i32)** %macb_reg_writel74, align 8, !dbg !13318
  %82 = load %struct.macb_queue*, %struct.macb_queue** %queue, align 8, !dbg !13318
  %bp75 = getelementptr inbounds %struct.macb_queue, %struct.macb_queue* %82, i32 0, i32 0, !dbg !13318
  %83 = load %struct.macb*, %struct.macb** %bp75, align 8, !dbg !13318
  %84 = load %struct.macb_queue*, %struct.macb_queue** %queue, align 8, !dbg !13318
  %TBQPH = getelementptr inbounds %struct.macb_queue, %struct.macb_queue* %84, i32 0, i32 7, !dbg !13318
  %85 = load i32, i32* %TBQPH, align 8, !dbg !13318
  %86 = load %struct.macb_queue*, %struct.macb_queue** %queue, align 8, !dbg !13318
  %tx_ring_dma76 = getelementptr inbounds %struct.macb_queue, %struct.macb_queue* %86, i32 0, i32 15, !dbg !13318
  %87 = load i64, i64* %tx_ring_dma76, align 8, !dbg !13318
  %shr = lshr i64 %87, 16, !dbg !13318
  %shr77 = lshr i64 %shr, 16, !dbg !13318
  %conv78 = trunc i64 %shr77 to i32, !dbg !13318
  call void %81(%struct.macb* %83, i32 %85, i32 %conv78) #12, !dbg !13318
  br label %if.end79, !dbg !13318

if.end79:                                         ; preds = %if.then72, %for.end
  %88 = load %struct.macb_queue*, %struct.macb_queue** %queue, align 8, !dbg !13319
  %tx_head80 = getelementptr inbounds %struct.macb_queue, %struct.macb_queue* %88, i32 0, i32 11, !dbg !13320
  store i32 0, i32* %tx_head80, align 8, !dbg !13321
  %89 = load %struct.macb_queue*, %struct.macb_queue** %queue, align 8, !dbg !13322
  %tx_tail81 = getelementptr inbounds %struct.macb_queue, %struct.macb_queue* %89, i32 0, i32 12, !dbg !13323
  store i32 0, i32* %tx_tail81, align 4, !dbg !13324
  %90 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !13325
  %macb_reg_writel82 = getelementptr inbounds %struct.macb, %struct.macb* %90, i32 0, i32 3, !dbg !13325
  %91 = load void (%struct.macb*, i32, i32)*, void (%struct.macb*, i32, i32)** %macb_reg_writel82, align 8, !dbg !13325
  %92 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !13325
  %93 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !13325
  %macb_reg_readl = getelementptr inbounds %struct.macb, %struct.macb* %93, i32 0, i32 2, !dbg !13325
  %94 = load i32 (%struct.macb*, i32)*, i32 (%struct.macb*, i32)** %macb_reg_readl, align 8, !dbg !13325
  %95 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !13325
  %call83 = call i32 %94(%struct.macb* %95, i32 20) #12, !dbg !13325
  call void %91(%struct.macb* %92, i32 20, i32 %call83) #12, !dbg !13325
  %96 = load %struct.macb_queue*, %struct.macb_queue** %queue, align 8, !dbg !13326
  %bp84 = getelementptr inbounds %struct.macb_queue, %struct.macb_queue* %96, i32 0, i32 0, !dbg !13326
  %97 = load %struct.macb*, %struct.macb** %bp84, align 8, !dbg !13326
  %macb_reg_writel85 = getelementptr inbounds %struct.macb, %struct.macb* %97, i32 0, i32 3, !dbg !13326
  %98 = load void (%struct.macb*, i32, i32)*, void (%struct.macb*, i32, i32)** %macb_reg_writel85, align 8, !dbg !13326
  %99 = load %struct.macb_queue*, %struct.macb_queue** %queue, align 8, !dbg !13326
  %bp86 = getelementptr inbounds %struct.macb_queue, %struct.macb_queue* %99, i32 0, i32 0, !dbg !13326
  %100 = load %struct.macb*, %struct.macb** %bp86, align 8, !dbg !13326
  %101 = load %struct.macb_queue*, %struct.macb_queue** %queue, align 8, !dbg !13326
  %IER = getelementptr inbounds %struct.macb_queue, %struct.macb_queue* %101, i32 0, i32 3, !dbg !13326
  %102 = load i32, i32* %IER, align 8, !dbg !13326
  call void %98(%struct.macb* %100, i32 %102, i32 248) #12, !dbg !13326
  %103 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !13327
  %dev87 = getelementptr inbounds %struct.macb, %struct.macb* %103, i32 0, i32 17, !dbg !13328
  %104 = load %struct.net_device*, %struct.net_device** %dev87, align 8, !dbg !13328
  call void @netif_tx_start_all_queues(%struct.net_device* %104) #12, !dbg !13329
  %105 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !13330
  %macb_reg_writel88 = getelementptr inbounds %struct.macb, %struct.macb* %105, i32 0, i32 3, !dbg !13330
  %106 = load void (%struct.macb*, i32, i32)*, void (%struct.macb*, i32, i32)** %macb_reg_writel88, align 8, !dbg !13330
  %107 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !13330
  %108 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !13330
  %macb_reg_readl89 = getelementptr inbounds %struct.macb, %struct.macb* %108, i32 0, i32 2, !dbg !13330
  %109 = load i32 (%struct.macb*, i32)*, i32 (%struct.macb*, i32)** %macb_reg_readl89, align 8, !dbg !13330
  %110 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !13330
  %call90 = call i32 %109(%struct.macb* %110, i32 0) #12, !dbg !13330
  %or91 = or i32 %call90, 512, !dbg !13330
  call void %106(%struct.macb* %107, i32 0, i32 %or91) #12, !dbg !13330
  %111 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !13331
  %lock92 = getelementptr inbounds %struct.macb, %struct.macb* %111, i32 0, i32 10, !dbg !13332
  %112 = load i64, i64* %flags, align 8, !dbg !13333
  store %struct.spinlock* %lock92, %struct.spinlock** %lock.addr.i93, align 8
  store i64 %112, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !743, metadata !13334, metadata !DIExpression()) #8, !dbg !13337
  call void @llvm.dbg.declare(metadata !743, metadata !13338, metadata !DIExpression()) #8, !dbg !13337
  store i32 1, i32* %tmp.i, align 4, !dbg !13337
  %113 = load i32, i32* %tmp.i, align 4, !dbg !13337
  call void @llvm.dbg.declare(metadata !743, metadata !13339, metadata !DIExpression()) #8, !dbg !13344
  call void @llvm.dbg.declare(metadata !743, metadata !13345, metadata !DIExpression()) #8, !dbg !13344
  store i32 1, i32* %tmp8.i, align 4, !dbg !13344
  %114 = load i32, i32* %tmp8.i, align 4, !dbg !13344
  %115 = load i64, i64* %flags.addr.i, align 8, !dbg !13346
  call void @arch_local_irq_restore(i64 %115) #14, !dbg !13346
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #8, !dbg !13347, !srcloc !13349
  %116 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i93, align 8, !dbg !13350
  %117 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %116, i32 0, i32 0, !dbg !13350
  %rlock.i94 = bitcast %union.anon.1* %117 to %struct.raw_spinlock*, !dbg !13350
  ret void, !dbg !13352
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @gem_alloc_rx_buffers(%struct.macb* %bp) #2 !dbg !13353 {
entry:
  %retval = alloca i32, align 4
  %bp.addr = alloca %struct.macb*, align 8
  %queue = alloca %struct.macb_queue*, align 8
  %q = alloca i32, align 4
  %size = alloca i32, align 4
  store %struct.macb* %bp, %struct.macb** %bp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.macb** %bp.addr, metadata !13354, metadata !DIExpression()), !dbg !13355
  call void @llvm.dbg.declare(metadata %struct.macb_queue** %queue, metadata !13356, metadata !DIExpression()), !dbg !13357
  call void @llvm.dbg.declare(metadata i32* %q, metadata !13358, metadata !DIExpression()), !dbg !13359
  call void @llvm.dbg.declare(metadata i32* %size, metadata !13360, metadata !DIExpression()), !dbg !13361
  store i32 0, i32* %q, align 4, !dbg !13362
  %0 = load %struct.macb*, %struct.macb** %bp.addr, align 8, !dbg !13364
  %queues = getelementptr inbounds %struct.macb, %struct.macb* %0, i32 0, i32 9, !dbg !13365
  %arraydecay = getelementptr inbounds [8 x %struct.macb_queue], [8 x %struct.macb_queue]* %queues, i64 0, i64 0, !dbg !13364
  store %struct.macb_queue* %arraydecay, %struct.macb_queue** %queue, align 8, !dbg !13366
  br label %for.cond, !dbg !13367

for.cond:                                         ; preds = %for.inc, %entry
  %1 = load i32, i32* %q, align 4, !dbg !13368
  %2 = load %struct.macb*, %struct.macb** %bp.addr, align 8, !dbg !13370
  %num_queues = getelementptr inbounds %struct.macb, %struct.macb* %2, i32 0, i32 7, !dbg !13371
  %3 = load i32, i32* %num_queues, align 8, !dbg !13371
  %cmp = icmp ult i32 %1, %3, !dbg !13372
  br i1 %cmp, label %for.body, label %for.end, !dbg !13373

for.body:                                         ; preds = %for.cond
  %4 = load %struct.macb*, %struct.macb** %bp.addr, align 8, !dbg !13374
  %rx_ring_size = getelementptr inbounds %struct.macb, %struct.macb* %4, i32 0, i32 5, !dbg !13376
  %5 = load i32, i32* %rx_ring_size, align 8, !dbg !13376
  %conv = zext i32 %5 to i64, !dbg !13374
  %mul = mul i64 %conv, 8, !dbg !13377
  %conv1 = trunc i64 %mul to i32, !dbg !13374
  store i32 %conv1, i32* %size, align 4, !dbg !13378
  %6 = load i32, i32* %size, align 4, !dbg !13379
  %conv2 = sext i32 %6 to i64, !dbg !13379
  %call = call i8* @kzalloc(i64 %conv2, i32 3264) #12, !dbg !13380
  %7 = bitcast i8* %call to %struct.sk_buff**, !dbg !13380
  %8 = load %struct.macb_queue*, %struct.macb_queue** %queue, align 8, !dbg !13381
  %rx_skbuff = getelementptr inbounds %struct.macb_queue, %struct.macb_queue* %8, i32 0, i32 22, !dbg !13382
  store %struct.sk_buff** %7, %struct.sk_buff*** %rx_skbuff, align 8, !dbg !13383
  %9 = load %struct.macb_queue*, %struct.macb_queue** %queue, align 8, !dbg !13384
  %rx_skbuff3 = getelementptr inbounds %struct.macb_queue, %struct.macb_queue* %9, i32 0, i32 22, !dbg !13386
  %10 = load %struct.sk_buff**, %struct.sk_buff*** %rx_skbuff3, align 8, !dbg !13386
  %tobool = icmp ne %struct.sk_buff** %10, null, !dbg !13384
  br i1 %tobool, label %if.else, label %if.then, !dbg !13387

if.then:                                          ; preds = %for.body
  store i32 -12, i32* %retval, align 4, !dbg !13388
  br label %return, !dbg !13388

if.else:                                          ; preds = %for.body
  br label %if.end

if.end:                                           ; preds = %if.else
  br label %for.inc, !dbg !13389

for.inc:                                          ; preds = %if.end
  %11 = load i32, i32* %q, align 4, !dbg !13390
  %inc = add i32 %11, 1, !dbg !13390
  store i32 %inc, i32* %q, align 4, !dbg !13390
  %12 = load %struct.macb_queue*, %struct.macb_queue** %queue, align 8, !dbg !13391
  %incdec.ptr = getelementptr %struct.macb_queue, %struct.macb_queue* %12, i32 1, !dbg !13391
  store %struct.macb_queue* %incdec.ptr, %struct.macb_queue** %queue, align 8, !dbg !13391
  br label %for.cond, !dbg !13392, !llvm.loop !13393

for.end:                                          ; preds = %for.cond
  store i32 0, i32* %retval, align 4, !dbg !13395
  br label %return, !dbg !13395

return:                                           ; preds = %for.end, %if.then
  %13 = load i32, i32* %retval, align 4, !dbg !13396
  ret i32 %13, !dbg !13396
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @gem_free_rx_buffers(%struct.macb* %bp) #2 !dbg !13397 {
entry:
  %bp.addr = alloca %struct.macb*, align 8
  %skb = alloca %struct.sk_buff*, align 8
  %desc = alloca %struct.macb_dma_desc*, align 8
  %queue = alloca %struct.macb_queue*, align 8
  %addr = alloca i64, align 8
  %q = alloca i32, align 4
  %i = alloca i32, align 4
  store %struct.macb* %bp, %struct.macb** %bp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.macb** %bp.addr, metadata !13398, metadata !DIExpression()), !dbg !13399
  call void @llvm.dbg.declare(metadata %struct.sk_buff** %skb, metadata !13400, metadata !DIExpression()), !dbg !13401
  call void @llvm.dbg.declare(metadata %struct.macb_dma_desc** %desc, metadata !13402, metadata !DIExpression()), !dbg !13403
  call void @llvm.dbg.declare(metadata %struct.macb_queue** %queue, metadata !13404, metadata !DIExpression()), !dbg !13405
  call void @llvm.dbg.declare(metadata i64* %addr, metadata !13406, metadata !DIExpression()), !dbg !13407
  call void @llvm.dbg.declare(metadata i32* %q, metadata !13408, metadata !DIExpression()), !dbg !13409
  call void @llvm.dbg.declare(metadata i32* %i, metadata !13410, metadata !DIExpression()), !dbg !13411
  store i32 0, i32* %q, align 4, !dbg !13412
  %0 = load %struct.macb*, %struct.macb** %bp.addr, align 8, !dbg !13414
  %queues = getelementptr inbounds %struct.macb, %struct.macb* %0, i32 0, i32 9, !dbg !13415
  %arraydecay = getelementptr inbounds [8 x %struct.macb_queue], [8 x %struct.macb_queue]* %queues, i64 0, i64 0, !dbg !13414
  store %struct.macb_queue* %arraydecay, %struct.macb_queue** %queue, align 8, !dbg !13416
  br label %for.cond, !dbg !13417

for.cond:                                         ; preds = %for.inc11, %entry
  %1 = load i32, i32* %q, align 4, !dbg !13418
  %2 = load %struct.macb*, %struct.macb** %bp.addr, align 8, !dbg !13420
  %num_queues = getelementptr inbounds %struct.macb, %struct.macb* %2, i32 0, i32 7, !dbg !13421
  %3 = load i32, i32* %num_queues, align 8, !dbg !13421
  %cmp = icmp ult i32 %1, %3, !dbg !13422
  br i1 %cmp, label %for.body, label %for.end13, !dbg !13423

for.body:                                         ; preds = %for.cond
  %4 = load %struct.macb_queue*, %struct.macb_queue** %queue, align 8, !dbg !13424
  %rx_skbuff = getelementptr inbounds %struct.macb_queue, %struct.macb_queue* %4, i32 0, i32 22, !dbg !13427
  %5 = load %struct.sk_buff**, %struct.sk_buff*** %rx_skbuff, align 8, !dbg !13427
  %tobool = icmp ne %struct.sk_buff** %5, null, !dbg !13424
  br i1 %tobool, label %if.end, label %if.then, !dbg !13428

if.then:                                          ; preds = %for.body
  br label %for.inc11, !dbg !13429

if.end:                                           ; preds = %for.body
  store i32 0, i32* %i, align 4, !dbg !13430
  br label %for.cond1, !dbg !13432

for.cond1:                                        ; preds = %for.inc, %if.end
  %6 = load i32, i32* %i, align 4, !dbg !13433
  %7 = load %struct.macb*, %struct.macb** %bp.addr, align 8, !dbg !13435
  %rx_ring_size = getelementptr inbounds %struct.macb, %struct.macb* %7, i32 0, i32 5, !dbg !13436
  %8 = load i32, i32* %rx_ring_size, align 8, !dbg !13436
  %cmp2 = icmp ult i32 %6, %8, !dbg !13437
  br i1 %cmp2, label %for.body3, label %for.end, !dbg !13438

for.body3:                                        ; preds = %for.cond1
  %9 = load %struct.macb_queue*, %struct.macb_queue** %queue, align 8, !dbg !13439
  %rx_skbuff4 = getelementptr inbounds %struct.macb_queue, %struct.macb_queue* %9, i32 0, i32 22, !dbg !13441
  %10 = load %struct.sk_buff**, %struct.sk_buff*** %rx_skbuff4, align 8, !dbg !13441
  %11 = load i32, i32* %i, align 4, !dbg !13442
  %idxprom = sext i32 %11 to i64, !dbg !13439
  %arrayidx = getelementptr %struct.sk_buff*, %struct.sk_buff** %10, i64 %idxprom, !dbg !13439
  %12 = load %struct.sk_buff*, %struct.sk_buff** %arrayidx, align 8, !dbg !13439
  store %struct.sk_buff* %12, %struct.sk_buff** %skb, align 8, !dbg !13443
  %13 = load %struct.sk_buff*, %struct.sk_buff** %skb, align 8, !dbg !13444
  %tobool5 = icmp ne %struct.sk_buff* %13, null, !dbg !13444
  br i1 %tobool5, label %if.end7, label %if.then6, !dbg !13446

if.then6:                                         ; preds = %for.body3
  br label %for.inc, !dbg !13447

if.end7:                                          ; preds = %for.body3
  %14 = load %struct.macb_queue*, %struct.macb_queue** %queue, align 8, !dbg !13448
  %15 = load i32, i32* %i, align 4, !dbg !13449
  %call = call %struct.macb_dma_desc* @macb_rx_desc(%struct.macb_queue* %14, i32 %15) #12, !dbg !13450
  store %struct.macb_dma_desc* %call, %struct.macb_dma_desc** %desc, align 8, !dbg !13451
  %16 = load %struct.macb*, %struct.macb** %bp.addr, align 8, !dbg !13452
  %17 = load %struct.macb_dma_desc*, %struct.macb_dma_desc** %desc, align 8, !dbg !13453
  %call8 = call i64 @macb_get_addr(%struct.macb* %16, %struct.macb_dma_desc* %17) #12, !dbg !13454
  store i64 %call8, i64* %addr, align 8, !dbg !13455
  %18 = load %struct.macb*, %struct.macb** %bp.addr, align 8, !dbg !13456
  %pdev = getelementptr inbounds %struct.macb, %struct.macb* %18, i32 0, i32 11, !dbg !13456
  %19 = load %struct.platform_device*, %struct.platform_device** %pdev, align 8, !dbg !13456
  %dev = getelementptr inbounds %struct.platform_device, %struct.platform_device* %19, i32 0, i32 3, !dbg !13456
  %20 = load i64, i64* %addr, align 8, !dbg !13456
  %21 = load %struct.macb*, %struct.macb** %bp.addr, align 8, !dbg !13456
  %rx_buffer_size = getelementptr inbounds %struct.macb, %struct.macb* %21, i32 0, i32 4, !dbg !13456
  %22 = load i64, i64* %rx_buffer_size, align 8, !dbg !13456
  call void @dma_unmap_single_attrs(%struct.device* %dev, i64 %20, i64 %22, i32 2, i64 0) #12, !dbg !13456
  %23 = load %struct.sk_buff*, %struct.sk_buff** %skb, align 8, !dbg !13457
  call void @dev_kfree_skb_any(%struct.sk_buff* %23) #12, !dbg !13458
  store %struct.sk_buff* null, %struct.sk_buff** %skb, align 8, !dbg !13459
  br label %for.inc, !dbg !13460

for.inc:                                          ; preds = %if.end7, %if.then6
  %24 = load i32, i32* %i, align 4, !dbg !13461
  %inc = add i32 %24, 1, !dbg !13461
  store i32 %inc, i32* %i, align 4, !dbg !13461
  br label %for.cond1, !dbg !13462, !llvm.loop !13463

for.end:                                          ; preds = %for.cond1
  %25 = load %struct.macb_queue*, %struct.macb_queue** %queue, align 8, !dbg !13465
  %rx_skbuff9 = getelementptr inbounds %struct.macb_queue, %struct.macb_queue* %25, i32 0, i32 22, !dbg !13466
  %26 = load %struct.sk_buff**, %struct.sk_buff*** %rx_skbuff9, align 8, !dbg !13466
  %27 = bitcast %struct.sk_buff** %26 to i8*, !dbg !13465
  call void @kfree(i8* %27) #12, !dbg !13467
  %28 = load %struct.macb_queue*, %struct.macb_queue** %queue, align 8, !dbg !13468
  %rx_skbuff10 = getelementptr inbounds %struct.macb_queue, %struct.macb_queue* %28, i32 0, i32 22, !dbg !13469
  store %struct.sk_buff** null, %struct.sk_buff*** %rx_skbuff10, align 8, !dbg !13470
  br label %for.inc11, !dbg !13471

for.inc11:                                        ; preds = %for.end, %if.then
  %29 = load i32, i32* %q, align 4, !dbg !13472
  %inc12 = add i32 %29, 1, !dbg !13472
  store i32 %inc12, i32* %q, align 4, !dbg !13472
  %30 = load %struct.macb_queue*, %struct.macb_queue** %queue, align 8, !dbg !13473
  %incdec.ptr = getelementptr %struct.macb_queue, %struct.macb_queue* %30, i32 1, !dbg !13473
  store %struct.macb_queue* %incdec.ptr, %struct.macb_queue** %queue, align 8, !dbg !13473
  br label %for.cond, !dbg !13474, !llvm.loop !13475

for.end13:                                        ; preds = %for.cond
  ret void, !dbg !13477
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @gem_init_rings(%struct.macb* %bp) #2 !dbg !13478 {
entry:
  %bp.addr = alloca %struct.macb*, align 8
  %queue = alloca %struct.macb_queue*, align 8
  %desc = alloca %struct.macb_dma_desc*, align 8
  %q = alloca i32, align 4
  %i = alloca i32, align 4
  store %struct.macb* %bp, %struct.macb** %bp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.macb** %bp.addr, metadata !13479, metadata !DIExpression()), !dbg !13480
  call void @llvm.dbg.declare(metadata %struct.macb_queue** %queue, metadata !13481, metadata !DIExpression()), !dbg !13482
  call void @llvm.dbg.declare(metadata %struct.macb_dma_desc** %desc, metadata !13483, metadata !DIExpression()), !dbg !13484
  store %struct.macb_dma_desc* null, %struct.macb_dma_desc** %desc, align 8, !dbg !13484
  call void @llvm.dbg.declare(metadata i32* %q, metadata !13485, metadata !DIExpression()), !dbg !13486
  call void @llvm.dbg.declare(metadata i32* %i, metadata !13487, metadata !DIExpression()), !dbg !13488
  store i32 0, i32* %q, align 4, !dbg !13489
  %0 = load %struct.macb*, %struct.macb** %bp.addr, align 8, !dbg !13491
  %queues = getelementptr inbounds %struct.macb, %struct.macb* %0, i32 0, i32 9, !dbg !13492
  %arraydecay = getelementptr inbounds [8 x %struct.macb_queue], [8 x %struct.macb_queue]* %queues, i64 0, i64 0, !dbg !13491
  store %struct.macb_queue* %arraydecay, %struct.macb_queue** %queue, align 8, !dbg !13493
  br label %for.cond, !dbg !13494

for.cond:                                         ; preds = %for.inc5, %entry
  %1 = load i32, i32* %q, align 4, !dbg !13495
  %2 = load %struct.macb*, %struct.macb** %bp.addr, align 8, !dbg !13497
  %num_queues = getelementptr inbounds %struct.macb, %struct.macb* %2, i32 0, i32 7, !dbg !13498
  %3 = load i32, i32* %num_queues, align 8, !dbg !13498
  %cmp = icmp ult i32 %1, %3, !dbg !13499
  br i1 %cmp, label %for.body, label %for.end7, !dbg !13500

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %i, align 4, !dbg !13501
  br label %for.cond1, !dbg !13504

for.cond1:                                        ; preds = %for.inc, %for.body
  %4 = load i32, i32* %i, align 4, !dbg !13505
  %5 = load %struct.macb*, %struct.macb** %bp.addr, align 8, !dbg !13507
  %tx_ring_size = getelementptr inbounds %struct.macb, %struct.macb* %5, i32 0, i32 6, !dbg !13508
  %6 = load i32, i32* %tx_ring_size, align 4, !dbg !13508
  %cmp2 = icmp ult i32 %4, %6, !dbg !13509
  br i1 %cmp2, label %for.body3, label %for.end, !dbg !13510

for.body3:                                        ; preds = %for.cond1
  %7 = load %struct.macb_queue*, %struct.macb_queue** %queue, align 8, !dbg !13511
  %8 = load i32, i32* %i, align 4, !dbg !13513
  %call = call %struct.macb_dma_desc* @macb_tx_desc(%struct.macb_queue* %7, i32 %8) #12, !dbg !13514
  store %struct.macb_dma_desc* %call, %struct.macb_dma_desc** %desc, align 8, !dbg !13515
  %9 = load %struct.macb*, %struct.macb** %bp.addr, align 8, !dbg !13516
  %10 = load %struct.macb_dma_desc*, %struct.macb_dma_desc** %desc, align 8, !dbg !13517
  call void @macb_set_addr(%struct.macb* %9, %struct.macb_dma_desc* %10, i64 0) #12, !dbg !13518
  %11 = load %struct.macb_dma_desc*, %struct.macb_dma_desc** %desc, align 8, !dbg !13519
  %ctrl = getelementptr inbounds %struct.macb_dma_desc, %struct.macb_dma_desc* %11, i32 0, i32 1, !dbg !13520
  store i32 -2147483648, i32* %ctrl, align 4, !dbg !13521
  br label %for.inc, !dbg !13522

for.inc:                                          ; preds = %for.body3
  %12 = load i32, i32* %i, align 4, !dbg !13523
  %inc = add i32 %12, 1, !dbg !13523
  store i32 %inc, i32* %i, align 4, !dbg !13523
  br label %for.cond1, !dbg !13524, !llvm.loop !13525

for.end:                                          ; preds = %for.cond1
  %13 = load %struct.macb_dma_desc*, %struct.macb_dma_desc** %desc, align 8, !dbg !13527
  %ctrl4 = getelementptr inbounds %struct.macb_dma_desc, %struct.macb_dma_desc* %13, i32 0, i32 1, !dbg !13528
  %14 = load i32, i32* %ctrl4, align 4, !dbg !13529
  %or = or i32 %14, 1073741824, !dbg !13529
  store i32 %or, i32* %ctrl4, align 4, !dbg !13529
  %15 = load %struct.macb_queue*, %struct.macb_queue** %queue, align 8, !dbg !13530
  %tx_head = getelementptr inbounds %struct.macb_queue, %struct.macb_queue* %15, i32 0, i32 11, !dbg !13531
  store i32 0, i32* %tx_head, align 8, !dbg !13532
  %16 = load %struct.macb_queue*, %struct.macb_queue** %queue, align 8, !dbg !13533
  %tx_tail = getelementptr inbounds %struct.macb_queue, %struct.macb_queue* %16, i32 0, i32 12, !dbg !13534
  store i32 0, i32* %tx_tail, align 4, !dbg !13535
  %17 = load %struct.macb_queue*, %struct.macb_queue** %queue, align 8, !dbg !13536
  %rx_tail = getelementptr inbounds %struct.macb_queue, %struct.macb_queue* %17, i32 0, i32 19, !dbg !13537
  store i32 0, i32* %rx_tail, align 8, !dbg !13538
  %18 = load %struct.macb_queue*, %struct.macb_queue** %queue, align 8, !dbg !13539
  %rx_prepared_head = getelementptr inbounds %struct.macb_queue, %struct.macb_queue* %18, i32 0, i32 20, !dbg !13540
  store i32 0, i32* %rx_prepared_head, align 4, !dbg !13541
  %19 = load %struct.macb_queue*, %struct.macb_queue** %queue, align 8, !dbg !13542
  call void @gem_rx_refill(%struct.macb_queue* %19) #12, !dbg !13543
  br label %for.inc5, !dbg !13544

for.inc5:                                         ; preds = %for.end
  %20 = load i32, i32* %q, align 4, !dbg !13545
  %inc6 = add i32 %20, 1, !dbg !13545
  store i32 %inc6, i32* %q, align 4, !dbg !13545
  %21 = load %struct.macb_queue*, %struct.macb_queue** %queue, align 8, !dbg !13546
  %incdec.ptr = getelementptr %struct.macb_queue, %struct.macb_queue* %21, i32 1, !dbg !13546
  store %struct.macb_queue* %incdec.ptr, %struct.macb_queue** %queue, align 8, !dbg !13546
  br label %for.cond, !dbg !13547, !llvm.loop !13548

for.end7:                                         ; preds = %for.cond
  ret void, !dbg !13550
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @gem_rx(%struct.macb_queue* %queue, %struct.napi_struct* %napi, i32 %budget) #2 !dbg !13551 {
entry:
  %queue.addr = alloca %struct.macb_queue*, align 8
  %napi.addr = alloca %struct.napi_struct*, align 8
  %budget.addr = alloca i32, align 4
  %bp = alloca %struct.macb*, align 8
  %len = alloca i32, align 4
  %entry2 = alloca i32, align 4
  %skb = alloca %struct.sk_buff*, align 8
  %desc = alloca %struct.macb_dma_desc*, align 8
  %count = alloca i32, align 4
  %ctrl = alloca i32, align 4
  %addr = alloca i64, align 8
  %rxused = alloca i8, align 1
  %tmp = alloca i32, align 4
  store %struct.macb_queue* %queue, %struct.macb_queue** %queue.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.macb_queue** %queue.addr, metadata !13552, metadata !DIExpression()), !dbg !13553
  store %struct.napi_struct* %napi, %struct.napi_struct** %napi.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.napi_struct** %napi.addr, metadata !13554, metadata !DIExpression()), !dbg !13555
  store i32 %budget, i32* %budget.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %budget.addr, metadata !13556, metadata !DIExpression()), !dbg !13557
  call void @llvm.dbg.declare(metadata %struct.macb** %bp, metadata !13558, metadata !DIExpression()), !dbg !13559
  %0 = load %struct.macb_queue*, %struct.macb_queue** %queue.addr, align 8, !dbg !13560
  %bp1 = getelementptr inbounds %struct.macb_queue, %struct.macb_queue* %0, i32 0, i32 0, !dbg !13561
  %1 = load %struct.macb*, %struct.macb** %bp1, align 8, !dbg !13561
  store %struct.macb* %1, %struct.macb** %bp, align 8, !dbg !13559
  call void @llvm.dbg.declare(metadata i32* %len, metadata !13562, metadata !DIExpression()), !dbg !13563
  call void @llvm.dbg.declare(metadata i32* %entry2, metadata !13564, metadata !DIExpression()), !dbg !13565
  call void @llvm.dbg.declare(metadata %struct.sk_buff** %skb, metadata !13566, metadata !DIExpression()), !dbg !13567
  call void @llvm.dbg.declare(metadata %struct.macb_dma_desc** %desc, metadata !13568, metadata !DIExpression()), !dbg !13569
  call void @llvm.dbg.declare(metadata i32* %count, metadata !13570, metadata !DIExpression()), !dbg !13571
  store i32 0, i32* %count, align 4, !dbg !13571
  br label %while.cond, !dbg !13572

while.cond:                                       ; preds = %if.end56, %entry
  %2 = load i32, i32* %count, align 4, !dbg !13573
  %3 = load i32, i32* %budget.addr, align 4, !dbg !13574
  %cmp = icmp slt i32 %2, %3, !dbg !13575
  br i1 %cmp, label %while.body, label %while.end, !dbg !13572

while.body:                                       ; preds = %while.cond
  call void @llvm.dbg.declare(metadata i32* %ctrl, metadata !13576, metadata !DIExpression()), !dbg !13578
  call void @llvm.dbg.declare(metadata i64* %addr, metadata !13579, metadata !DIExpression()), !dbg !13580
  call void @llvm.dbg.declare(metadata i8* %rxused, metadata !13581, metadata !DIExpression()), !dbg !13582
  %4 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !13583
  %5 = load %struct.macb_queue*, %struct.macb_queue** %queue.addr, align 8, !dbg !13584
  %rx_tail = getelementptr inbounds %struct.macb_queue, %struct.macb_queue* %5, i32 0, i32 19, !dbg !13585
  %6 = load i32, i32* %rx_tail, align 8, !dbg !13585
  %call = call i32 @macb_rx_ring_wrap(%struct.macb* %4, i32 %6) #12, !dbg !13586
  store i32 %call, i32* %entry2, align 4, !dbg !13587
  %7 = load %struct.macb_queue*, %struct.macb_queue** %queue.addr, align 8, !dbg !13588
  %8 = load i32, i32* %entry2, align 4, !dbg !13589
  %call3 = call %struct.macb_dma_desc* @macb_rx_desc(%struct.macb_queue* %7, i32 %8) #12, !dbg !13590
  store %struct.macb_dma_desc* %call3, %struct.macb_dma_desc** %desc, align 8, !dbg !13591
  call void asm sideeffect "lfence", "~{memory},~{dirflag},~{fpsr},~{flags}"() #8, !dbg !13592, !srcloc !13593
  %9 = load %struct.macb_dma_desc*, %struct.macb_dma_desc** %desc, align 8, !dbg !13594
  %addr4 = getelementptr inbounds %struct.macb_dma_desc, %struct.macb_dma_desc* %9, i32 0, i32 0, !dbg !13595
  %10 = load i32, i32* %addr4, align 4, !dbg !13595
  %and = and i32 %10, 1, !dbg !13596
  %tobool = icmp ne i32 %and, 0, !dbg !13597
  %11 = zext i1 %tobool to i64, !dbg !13597
  %cond = select i1 %tobool, i32 1, i32 0, !dbg !13597
  %tobool5 = icmp ne i32 %cond, 0, !dbg !13597
  %frombool = zext i1 %tobool5 to i8, !dbg !13598
  store i8 %frombool, i8* %rxused, align 1, !dbg !13598
  %12 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !13599
  %13 = load %struct.macb_dma_desc*, %struct.macb_dma_desc** %desc, align 8, !dbg !13600
  %call6 = call i64 @macb_get_addr(%struct.macb* %12, %struct.macb_dma_desc* %13) #12, !dbg !13601
  store i64 %call6, i64* %addr, align 8, !dbg !13602
  %14 = load i8, i8* %rxused, align 1, !dbg !13603
  %tobool7 = trunc i8 %14 to i1, !dbg !13603
  br i1 %tobool7, label %if.end, label %if.then, !dbg !13605

if.then:                                          ; preds = %while.body
  br label %while.end, !dbg !13606

if.end:                                           ; preds = %while.body
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #8, !dbg !13607, !srcloc !13608
  %15 = load %struct.macb_dma_desc*, %struct.macb_dma_desc** %desc, align 8, !dbg !13609
  %ctrl8 = getelementptr inbounds %struct.macb_dma_desc, %struct.macb_dma_desc* %15, i32 0, i32 1, !dbg !13610
  %16 = load i32, i32* %ctrl8, align 4, !dbg !13610
  store i32 %16, i32* %ctrl, align 4, !dbg !13611
  %17 = load %struct.macb_queue*, %struct.macb_queue** %queue.addr, align 8, !dbg !13612
  %rx_tail9 = getelementptr inbounds %struct.macb_queue, %struct.macb_queue* %17, i32 0, i32 19, !dbg !13613
  %18 = load i32, i32* %rx_tail9, align 8, !dbg !13614
  %inc = add i32 %18, 1, !dbg !13614
  store i32 %inc, i32* %rx_tail9, align 8, !dbg !13614
  %19 = load i32, i32* %count, align 4, !dbg !13615
  %inc10 = add i32 %19, 1, !dbg !13615
  store i32 %inc10, i32* %count, align 4, !dbg !13615
  %20 = load i32, i32* %ctrl, align 4, !dbg !13616
  %and11 = and i32 %20, 16384, !dbg !13618
  %tobool12 = icmp ne i32 %and11, 0, !dbg !13618
  br i1 %tobool12, label %land.lhs.true, label %if.then15, !dbg !13619

land.lhs.true:                                    ; preds = %if.end
  %21 = load i32, i32* %ctrl, align 4, !dbg !13620
  %and13 = and i32 %21, 32768, !dbg !13621
  %tobool14 = icmp ne i32 %and13, 0, !dbg !13621
  br i1 %tobool14, label %if.end21, label %if.then15, !dbg !13622

if.then15:                                        ; preds = %land.lhs.true, %if.end
  %22 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !13623
  %dev = getelementptr inbounds %struct.macb, %struct.macb* %22, i32 0, i32 17, !dbg !13625
  %23 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !13625
  call void (%struct.net_device*, i8*, ...) @netdev_err(%struct.net_device* %23, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.35, i64 0, i64 0)) #13, !dbg !13626
  %24 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !13627
  %dev16 = getelementptr inbounds %struct.macb, %struct.macb* %24, i32 0, i32 17, !dbg !13628
  %25 = load %struct.net_device*, %struct.net_device** %dev16, align 8, !dbg !13628
  %stats = getelementptr inbounds %struct.net_device, %struct.net_device* %25, i32 0, i32 24, !dbg !13629
  %rx_dropped = getelementptr inbounds %struct.net_device_stats, %struct.net_device_stats* %stats, i32 0, i32 6, !dbg !13630
  %26 = load i64, i64* %rx_dropped, align 8, !dbg !13631
  %inc17 = add i64 %26, 1, !dbg !13631
  store i64 %inc17, i64* %rx_dropped, align 8, !dbg !13631
  %27 = load %struct.macb_queue*, %struct.macb_queue** %queue.addr, align 8, !dbg !13632
  %stats18 = getelementptr inbounds %struct.macb_queue, %struct.macb_queue* %27, i32 0, i32 25, !dbg !13633
  %rx_dropped19 = getelementptr inbounds %struct.queue_stats, %struct.queue_stats* %stats18, i32 0, i32 2, !dbg !13634
  %28 = load i64, i64* %rx_dropped19, align 8, !dbg !13635
  %inc20 = add i64 %28, 1, !dbg !13635
  store i64 %inc20, i64* %rx_dropped19, align 8, !dbg !13635
  br label %while.end, !dbg !13636

if.end21:                                         ; preds = %land.lhs.true
  %29 = load %struct.macb_queue*, %struct.macb_queue** %queue.addr, align 8, !dbg !13637
  %rx_skbuff = getelementptr inbounds %struct.macb_queue, %struct.macb_queue* %29, i32 0, i32 22, !dbg !13638
  %30 = load %struct.sk_buff**, %struct.sk_buff*** %rx_skbuff, align 8, !dbg !13638
  %31 = load i32, i32* %entry2, align 4, !dbg !13639
  %idxprom = zext i32 %31 to i64, !dbg !13637
  %arrayidx = getelementptr %struct.sk_buff*, %struct.sk_buff** %30, i64 %idxprom, !dbg !13637
  %32 = load %struct.sk_buff*, %struct.sk_buff** %arrayidx, align 8, !dbg !13637
  store %struct.sk_buff* %32, %struct.sk_buff** %skb, align 8, !dbg !13640
  %33 = load %struct.sk_buff*, %struct.sk_buff** %skb, align 8, !dbg !13641
  %tobool22 = icmp ne %struct.sk_buff* %33, null, !dbg !13641
  %lnot = xor i1 %tobool22, true, !dbg !13641
  %lnot23 = xor i1 %lnot, true, !dbg !13641
  %lnot24 = xor i1 %lnot23, true, !dbg !13641
  %lnot.ext = zext i1 %lnot24 to i32, !dbg !13641
  %conv = sext i32 %lnot.ext to i64, !dbg !13641
  %tobool25 = icmp ne i64 %conv, 0, !dbg !13641
  br i1 %tobool25, label %if.then26, label %if.end35, !dbg !13643

if.then26:                                        ; preds = %if.end21
  %34 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !13644
  %dev27 = getelementptr inbounds %struct.macb, %struct.macb* %34, i32 0, i32 17, !dbg !13646
  %35 = load %struct.net_device*, %struct.net_device** %dev27, align 8, !dbg !13646
  call void (%struct.net_device*, i8*, ...) @netdev_err(%struct.net_device* %35, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.36, i64 0, i64 0)) #13, !dbg !13647
  %36 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !13648
  %dev28 = getelementptr inbounds %struct.macb, %struct.macb* %36, i32 0, i32 17, !dbg !13649
  %37 = load %struct.net_device*, %struct.net_device** %dev28, align 8, !dbg !13649
  %stats29 = getelementptr inbounds %struct.net_device, %struct.net_device* %37, i32 0, i32 24, !dbg !13650
  %rx_dropped30 = getelementptr inbounds %struct.net_device_stats, %struct.net_device_stats* %stats29, i32 0, i32 6, !dbg !13651
  %38 = load i64, i64* %rx_dropped30, align 8, !dbg !13652
  %inc31 = add i64 %38, 1, !dbg !13652
  store i64 %inc31, i64* %rx_dropped30, align 8, !dbg !13652
  %39 = load %struct.macb_queue*, %struct.macb_queue** %queue.addr, align 8, !dbg !13653
  %stats32 = getelementptr inbounds %struct.macb_queue, %struct.macb_queue* %39, i32 0, i32 25, !dbg !13654
  %rx_dropped33 = getelementptr inbounds %struct.queue_stats, %struct.queue_stats* %stats32, i32 0, i32 2, !dbg !13655
  %40 = load i64, i64* %rx_dropped33, align 8, !dbg !13656
  %inc34 = add i64 %40, 1, !dbg !13656
  store i64 %inc34, i64* %rx_dropped33, align 8, !dbg !13656
  br label %while.end, !dbg !13657

if.end35:                                         ; preds = %if.end21
  %41 = load %struct.macb_queue*, %struct.macb_queue** %queue.addr, align 8, !dbg !13658
  %rx_skbuff36 = getelementptr inbounds %struct.macb_queue, %struct.macb_queue* %41, i32 0, i32 22, !dbg !13659
  %42 = load %struct.sk_buff**, %struct.sk_buff*** %rx_skbuff36, align 8, !dbg !13659
  %43 = load i32, i32* %entry2, align 4, !dbg !13660
  %idxprom37 = zext i32 %43 to i64, !dbg !13658
  %arrayidx38 = getelementptr %struct.sk_buff*, %struct.sk_buff** %42, i64 %idxprom37, !dbg !13658
  store %struct.sk_buff* null, %struct.sk_buff** %arrayidx38, align 8, !dbg !13661
  %44 = load i32, i32* %ctrl, align 4, !dbg !13662
  %45 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !13663
  %rx_frm_len_mask = getelementptr inbounds %struct.macb, %struct.macb* %45, i32 0, i32 31, !dbg !13664
  %46 = load i32, i32* %rx_frm_len_mask, align 8, !dbg !13664
  %and39 = and i32 %44, %46, !dbg !13665
  store i32 %and39, i32* %len, align 4, !dbg !13666
  store i32 0, i32* %tmp, align 4, !dbg !13667
  %47 = load i32, i32* %tmp, align 4, !dbg !13670
  %48 = load %struct.sk_buff*, %struct.sk_buff** %skb, align 8, !dbg !13671
  %49 = load i32, i32* %len, align 4, !dbg !13672
  %call40 = call i8* @skb_put(%struct.sk_buff* %48, i32 %49) #12, !dbg !13673
  %50 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !13674
  %pdev = getelementptr inbounds %struct.macb, %struct.macb* %50, i32 0, i32 11, !dbg !13674
  %51 = load %struct.platform_device*, %struct.platform_device** %pdev, align 8, !dbg !13674
  %dev41 = getelementptr inbounds %struct.platform_device, %struct.platform_device* %51, i32 0, i32 3, !dbg !13674
  %52 = load i64, i64* %addr, align 8, !dbg !13674
  %53 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !13674
  %rx_buffer_size = getelementptr inbounds %struct.macb, %struct.macb* %53, i32 0, i32 4, !dbg !13674
  %54 = load i64, i64* %rx_buffer_size, align 8, !dbg !13674
  call void @dma_unmap_single_attrs(%struct.device* %dev41, i64 %52, i64 %54, i32 2, i64 0) #12, !dbg !13674
  %55 = load %struct.sk_buff*, %struct.sk_buff** %skb, align 8, !dbg !13675
  %56 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !13676
  %dev42 = getelementptr inbounds %struct.macb, %struct.macb* %56, i32 0, i32 17, !dbg !13677
  %57 = load %struct.net_device*, %struct.net_device** %dev42, align 8, !dbg !13677
  %call43 = call zeroext i16 @eth_type_trans(%struct.sk_buff* %55, %struct.net_device* %57) #12, !dbg !13678
  %58 = load %struct.sk_buff*, %struct.sk_buff** %skb, align 8, !dbg !13679
  %protocol = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %58, i32 0, i32 29, !dbg !13680
  store i16 %call43, i16* %protocol, align 8, !dbg !13681
  %59 = load %struct.sk_buff*, %struct.sk_buff** %skb, align 8, !dbg !13682
  call void @skb_checksum_none_assert(%struct.sk_buff* %59) #12, !dbg !13683
  %60 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !13684
  %dev44 = getelementptr inbounds %struct.macb, %struct.macb* %60, i32 0, i32 17, !dbg !13686
  %61 = load %struct.net_device*, %struct.net_device** %dev44, align 8, !dbg !13686
  %features = getelementptr inbounds %struct.net_device, %struct.net_device* %61, i32 0, i32 15, !dbg !13687
  %62 = load i64, i64* %features, align 8, !dbg !13687
  %and45 = and i64 %62, 1099511627776, !dbg !13688
  %tobool46 = icmp ne i64 %and45, 0, !dbg !13688
  br i1 %tobool46, label %land.lhs.true47, label %if.end56, !dbg !13689

land.lhs.true47:                                  ; preds = %if.end35
  %63 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !13690
  %dev48 = getelementptr inbounds %struct.macb, %struct.macb* %63, i32 0, i32 17, !dbg !13691
  %64 = load %struct.net_device*, %struct.net_device** %dev48, align 8, !dbg !13691
  %flags = getelementptr inbounds %struct.net_device, %struct.net_device* %64, i32 0, i32 36, !dbg !13692
  %65 = load i32, i32* %flags, align 8, !dbg !13692
  %and49 = and i32 %65, 256, !dbg !13693
  %tobool50 = icmp ne i32 %and49, 0, !dbg !13693
  br i1 %tobool50, label %if.end56, label %land.lhs.true51, !dbg !13694

land.lhs.true51:                                  ; preds = %land.lhs.true47
  %66 = load i32, i32* %ctrl, align 4, !dbg !13695
  %shr = lshr i32 %66, 22, !dbg !13695
  %and52 = and i32 %shr, 3, !dbg !13695
  %and53 = and i32 %and52, 2, !dbg !13696
  %tobool54 = icmp ne i32 %and53, 0, !dbg !13696
  br i1 %tobool54, label %if.then55, label %if.end56, !dbg !13697

if.then55:                                        ; preds = %land.lhs.true51
  %67 = load %struct.sk_buff*, %struct.sk_buff** %skb, align 8, !dbg !13698
  %ip_summed = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %67, i32 0, i32 14, !dbg !13699
  %bf.load = load i16, i16* %ip_summed, align 8, !dbg !13700
  %bf.clear = and i16 %bf.load, -97, !dbg !13700
  %bf.set = or i16 %bf.clear, 32, !dbg !13700
  store i16 %bf.set, i16* %ip_summed, align 8, !dbg !13700
  br label %if.end56, !dbg !13698

if.end56:                                         ; preds = %if.then55, %land.lhs.true51, %land.lhs.true47, %if.end35
  %68 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !13701
  %dev57 = getelementptr inbounds %struct.macb, %struct.macb* %68, i32 0, i32 17, !dbg !13702
  %69 = load %struct.net_device*, %struct.net_device** %dev57, align 8, !dbg !13702
  %stats58 = getelementptr inbounds %struct.net_device, %struct.net_device* %69, i32 0, i32 24, !dbg !13703
  %rx_packets = getelementptr inbounds %struct.net_device_stats, %struct.net_device_stats* %stats58, i32 0, i32 0, !dbg !13704
  %70 = load i64, i64* %rx_packets, align 8, !dbg !13705
  %inc59 = add i64 %70, 1, !dbg !13705
  store i64 %inc59, i64* %rx_packets, align 8, !dbg !13705
  %71 = load %struct.macb_queue*, %struct.macb_queue** %queue.addr, align 8, !dbg !13706
  %stats60 = getelementptr inbounds %struct.macb_queue, %struct.macb_queue* %71, i32 0, i32 25, !dbg !13707
  %72 = getelementptr inbounds %struct.queue_stats, %struct.queue_stats* %stats60, i32 0, i32 0, !dbg !13708
  %rx_packets61 = bitcast %union.anon.161* %72 to i64*, !dbg !13708
  %73 = load i64, i64* %rx_packets61, align 8, !dbg !13709
  %inc62 = add i64 %73, 1, !dbg !13709
  store i64 %inc62, i64* %rx_packets61, align 8, !dbg !13709
  %74 = load %struct.sk_buff*, %struct.sk_buff** %skb, align 8, !dbg !13710
  %len63 = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %74, i32 0, i32 5, !dbg !13711
  %75 = load i32, i32* %len63, align 8, !dbg !13711
  %conv64 = zext i32 %75 to i64, !dbg !13710
  %76 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !13712
  %dev65 = getelementptr inbounds %struct.macb, %struct.macb* %76, i32 0, i32 17, !dbg !13713
  %77 = load %struct.net_device*, %struct.net_device** %dev65, align 8, !dbg !13713
  %stats66 = getelementptr inbounds %struct.net_device, %struct.net_device* %77, i32 0, i32 24, !dbg !13714
  %rx_bytes = getelementptr inbounds %struct.net_device_stats, %struct.net_device_stats* %stats66, i32 0, i32 2, !dbg !13715
  %78 = load i64, i64* %rx_bytes, align 8, !dbg !13716
  %add = add i64 %78, %conv64, !dbg !13716
  store i64 %add, i64* %rx_bytes, align 8, !dbg !13716
  %79 = load %struct.sk_buff*, %struct.sk_buff** %skb, align 8, !dbg !13717
  %len67 = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %79, i32 0, i32 5, !dbg !13718
  %80 = load i32, i32* %len67, align 8, !dbg !13718
  %conv68 = zext i32 %80 to i64, !dbg !13717
  %81 = load %struct.macb_queue*, %struct.macb_queue** %queue.addr, align 8, !dbg !13719
  %stats69 = getelementptr inbounds %struct.macb_queue, %struct.macb_queue* %81, i32 0, i32 25, !dbg !13720
  %rx_bytes70 = getelementptr inbounds %struct.queue_stats, %struct.queue_stats* %stats69, i32 0, i32 1, !dbg !13721
  %82 = load i64, i64* %rx_bytes70, align 8, !dbg !13722
  %add71 = add i64 %82, %conv68, !dbg !13722
  store i64 %add71, i64* %rx_bytes70, align 8, !dbg !13722
  %83 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !13723
  %84 = load %struct.sk_buff*, %struct.sk_buff** %skb, align 8, !dbg !13724
  %85 = load %struct.macb_dma_desc*, %struct.macb_dma_desc** %desc, align 8, !dbg !13725
  call void @gem_ptp_do_rxstamp(%struct.macb* %83, %struct.sk_buff* %84, %struct.macb_dma_desc* %85) #12, !dbg !13726
  %86 = load %struct.napi_struct*, %struct.napi_struct** %napi.addr, align 8, !dbg !13727
  %87 = load %struct.sk_buff*, %struct.sk_buff** %skb, align 8, !dbg !13728
  %call72 = call i32 @napi_gro_receive(%struct.napi_struct* %86, %struct.sk_buff* %87) #12, !dbg !13729
  br label %while.cond, !dbg !13572, !llvm.loop !13730

while.end:                                        ; preds = %if.then26, %if.then15, %if.then, %while.cond
  %88 = load %struct.macb_queue*, %struct.macb_queue** %queue.addr, align 8, !dbg !13732
  call void @gem_rx_refill(%struct.macb_queue* %88) #12, !dbg !13733
  %89 = load i32, i32* %count, align 4, !dbg !13734
  ret i32 %89, !dbg !13735
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @macb_alloc_rx_buffers(%struct.macb* %bp) #2 !dbg !13736 {
entry:
  %retval = alloca i32, align 4
  %bp.addr = alloca %struct.macb*, align 8
  %queue = alloca %struct.macb_queue*, align 8
  %size = alloca i32, align 4
  store %struct.macb* %bp, %struct.macb** %bp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.macb** %bp.addr, metadata !13737, metadata !DIExpression()), !dbg !13738
  call void @llvm.dbg.declare(metadata %struct.macb_queue** %queue, metadata !13739, metadata !DIExpression()), !dbg !13740
  %0 = load %struct.macb*, %struct.macb** %bp.addr, align 8, !dbg !13741
  %queues = getelementptr inbounds %struct.macb, %struct.macb* %0, i32 0, i32 9, !dbg !13742
  %arrayidx = getelementptr [8 x %struct.macb_queue], [8 x %struct.macb_queue]* %queues, i64 0, i64 0, !dbg !13741
  store %struct.macb_queue* %arrayidx, %struct.macb_queue** %queue, align 8, !dbg !13740
  call void @llvm.dbg.declare(metadata i32* %size, metadata !13743, metadata !DIExpression()), !dbg !13744
  %1 = load %struct.macb*, %struct.macb** %bp.addr, align 8, !dbg !13745
  %rx_ring_size = getelementptr inbounds %struct.macb, %struct.macb* %1, i32 0, i32 5, !dbg !13746
  %2 = load i32, i32* %rx_ring_size, align 8, !dbg !13746
  %conv = zext i32 %2 to i64, !dbg !13745
  %3 = load %struct.macb*, %struct.macb** %bp.addr, align 8, !dbg !13747
  %rx_buffer_size = getelementptr inbounds %struct.macb, %struct.macb* %3, i32 0, i32 4, !dbg !13748
  %4 = load i64, i64* %rx_buffer_size, align 8, !dbg !13748
  %mul = mul i64 %conv, %4, !dbg !13749
  %conv1 = trunc i64 %mul to i32, !dbg !13745
  store i32 %conv1, i32* %size, align 4, !dbg !13750
  %5 = load %struct.macb*, %struct.macb** %bp.addr, align 8, !dbg !13751
  %pdev = getelementptr inbounds %struct.macb, %struct.macb* %5, i32 0, i32 11, !dbg !13752
  %6 = load %struct.platform_device*, %struct.platform_device** %pdev, align 8, !dbg !13752
  %dev = getelementptr inbounds %struct.platform_device, %struct.platform_device* %6, i32 0, i32 3, !dbg !13753
  %7 = load i32, i32* %size, align 4, !dbg !13754
  %conv2 = sext i32 %7 to i64, !dbg !13754
  %8 = load %struct.macb_queue*, %struct.macb_queue** %queue, align 8, !dbg !13755
  %rx_buffers_dma = getelementptr inbounds %struct.macb_queue, %struct.macb_queue* %8, i32 0, i32 18, !dbg !13756
  %call = call i8* @dma_alloc_coherent(%struct.device* %dev, i64 %conv2, i64* %rx_buffers_dma, i32 3264) #12, !dbg !13757
  %9 = load %struct.macb_queue*, %struct.macb_queue** %queue, align 8, !dbg !13758
  %rx_buffers = getelementptr inbounds %struct.macb_queue, %struct.macb_queue* %9, i32 0, i32 23, !dbg !13759
  store i8* %call, i8** %rx_buffers, align 8, !dbg !13760
  %10 = load %struct.macb_queue*, %struct.macb_queue** %queue, align 8, !dbg !13761
  %rx_buffers3 = getelementptr inbounds %struct.macb_queue, %struct.macb_queue* %10, i32 0, i32 23, !dbg !13763
  %11 = load i8*, i8** %rx_buffers3, align 8, !dbg !13763
  %tobool = icmp ne i8* %11, null, !dbg !13761
  br i1 %tobool, label %if.end, label %if.then, !dbg !13764

if.then:                                          ; preds = %entry
  store i32 -12, i32* %retval, align 4, !dbg !13765
  br label %return, !dbg !13765

if.end:                                           ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !13766
  br label %return, !dbg !13766

return:                                           ; preds = %if.end, %if.then
  %12 = load i32, i32* %retval, align 4, !dbg !13767
  ret i32 %12, !dbg !13767
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @macb_free_rx_buffers(%struct.macb* %bp) #2 !dbg !13768 {
entry:
  %bp.addr = alloca %struct.macb*, align 8
  %queue = alloca %struct.macb_queue*, align 8
  store %struct.macb* %bp, %struct.macb** %bp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.macb** %bp.addr, metadata !13769, metadata !DIExpression()), !dbg !13770
  call void @llvm.dbg.declare(metadata %struct.macb_queue** %queue, metadata !13771, metadata !DIExpression()), !dbg !13772
  %0 = load %struct.macb*, %struct.macb** %bp.addr, align 8, !dbg !13773
  %queues = getelementptr inbounds %struct.macb, %struct.macb* %0, i32 0, i32 9, !dbg !13774
  %arrayidx = getelementptr [8 x %struct.macb_queue], [8 x %struct.macb_queue]* %queues, i64 0, i64 0, !dbg !13773
  store %struct.macb_queue* %arrayidx, %struct.macb_queue** %queue, align 8, !dbg !13772
  %1 = load %struct.macb_queue*, %struct.macb_queue** %queue, align 8, !dbg !13775
  %rx_buffers = getelementptr inbounds %struct.macb_queue, %struct.macb_queue* %1, i32 0, i32 23, !dbg !13777
  %2 = load i8*, i8** %rx_buffers, align 8, !dbg !13777
  %tobool = icmp ne i8* %2, null, !dbg !13775
  br i1 %tobool, label %if.then, label %if.end, !dbg !13778

if.then:                                          ; preds = %entry
  %3 = load %struct.macb*, %struct.macb** %bp.addr, align 8, !dbg !13779
  %pdev = getelementptr inbounds %struct.macb, %struct.macb* %3, i32 0, i32 11, !dbg !13781
  %4 = load %struct.platform_device*, %struct.platform_device** %pdev, align 8, !dbg !13781
  %dev = getelementptr inbounds %struct.platform_device, %struct.platform_device* %4, i32 0, i32 3, !dbg !13782
  %5 = load %struct.macb*, %struct.macb** %bp.addr, align 8, !dbg !13783
  %rx_ring_size = getelementptr inbounds %struct.macb, %struct.macb* %5, i32 0, i32 5, !dbg !13784
  %6 = load i32, i32* %rx_ring_size, align 8, !dbg !13784
  %conv = zext i32 %6 to i64, !dbg !13783
  %7 = load %struct.macb*, %struct.macb** %bp.addr, align 8, !dbg !13785
  %rx_buffer_size = getelementptr inbounds %struct.macb, %struct.macb* %7, i32 0, i32 4, !dbg !13786
  %8 = load i64, i64* %rx_buffer_size, align 8, !dbg !13786
  %mul = mul i64 %conv, %8, !dbg !13787
  %9 = load %struct.macb_queue*, %struct.macb_queue** %queue, align 8, !dbg !13788
  %rx_buffers1 = getelementptr inbounds %struct.macb_queue, %struct.macb_queue* %9, i32 0, i32 23, !dbg !13789
  %10 = load i8*, i8** %rx_buffers1, align 8, !dbg !13789
  %11 = load %struct.macb_queue*, %struct.macb_queue** %queue, align 8, !dbg !13790
  %rx_buffers_dma = getelementptr inbounds %struct.macb_queue, %struct.macb_queue* %11, i32 0, i32 18, !dbg !13791
  %12 = load i64, i64* %rx_buffers_dma, align 8, !dbg !13791
  call void @dma_free_coherent(%struct.device* %dev, i64 %mul, i8* %10, i64 %12) #12, !dbg !13792
  %13 = load %struct.macb_queue*, %struct.macb_queue** %queue, align 8, !dbg !13793
  %rx_buffers2 = getelementptr inbounds %struct.macb_queue, %struct.macb_queue* %13, i32 0, i32 23, !dbg !13794
  store i8* null, i8** %rx_buffers2, align 8, !dbg !13795
  br label %if.end, !dbg !13796

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !13797
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @macb_init_rings(%struct.macb* %bp) #2 !dbg !13798 {
entry:
  %bp.addr = alloca %struct.macb*, align 8
  %i = alloca i32, align 4
  %desc = alloca %struct.macb_dma_desc*, align 8
  store %struct.macb* %bp, %struct.macb** %bp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.macb** %bp.addr, metadata !13799, metadata !DIExpression()), !dbg !13800
  call void @llvm.dbg.declare(metadata i32* %i, metadata !13801, metadata !DIExpression()), !dbg !13802
  call void @llvm.dbg.declare(metadata %struct.macb_dma_desc** %desc, metadata !13803, metadata !DIExpression()), !dbg !13804
  store %struct.macb_dma_desc* null, %struct.macb_dma_desc** %desc, align 8, !dbg !13804
  %0 = load %struct.macb*, %struct.macb** %bp.addr, align 8, !dbg !13805
  %queues = getelementptr inbounds %struct.macb, %struct.macb* %0, i32 0, i32 9, !dbg !13806
  %arrayidx = getelementptr [8 x %struct.macb_queue], [8 x %struct.macb_queue]* %queues, i64 0, i64 0, !dbg !13805
  call void @macb_init_rx_ring(%struct.macb_queue* %arrayidx) #12, !dbg !13807
  store i32 0, i32* %i, align 4, !dbg !13808
  br label %for.cond, !dbg !13810

for.cond:                                         ; preds = %for.inc, %entry
  %1 = load i32, i32* %i, align 4, !dbg !13811
  %2 = load %struct.macb*, %struct.macb** %bp.addr, align 8, !dbg !13813
  %tx_ring_size = getelementptr inbounds %struct.macb, %struct.macb* %2, i32 0, i32 6, !dbg !13814
  %3 = load i32, i32* %tx_ring_size, align 4, !dbg !13814
  %cmp = icmp ult i32 %1, %3, !dbg !13815
  br i1 %cmp, label %for.body, label %for.end, !dbg !13816

for.body:                                         ; preds = %for.cond
  %4 = load %struct.macb*, %struct.macb** %bp.addr, align 8, !dbg !13817
  %queues1 = getelementptr inbounds %struct.macb, %struct.macb* %4, i32 0, i32 9, !dbg !13819
  %arrayidx2 = getelementptr [8 x %struct.macb_queue], [8 x %struct.macb_queue]* %queues1, i64 0, i64 0, !dbg !13817
  %5 = load i32, i32* %i, align 4, !dbg !13820
  %call = call %struct.macb_dma_desc* @macb_tx_desc(%struct.macb_queue* %arrayidx2, i32 %5) #12, !dbg !13821
  store %struct.macb_dma_desc* %call, %struct.macb_dma_desc** %desc, align 8, !dbg !13822
  %6 = load %struct.macb*, %struct.macb** %bp.addr, align 8, !dbg !13823
  %7 = load %struct.macb_dma_desc*, %struct.macb_dma_desc** %desc, align 8, !dbg !13824
  call void @macb_set_addr(%struct.macb* %6, %struct.macb_dma_desc* %7, i64 0) #12, !dbg !13825
  %8 = load %struct.macb_dma_desc*, %struct.macb_dma_desc** %desc, align 8, !dbg !13826
  %ctrl = getelementptr inbounds %struct.macb_dma_desc, %struct.macb_dma_desc* %8, i32 0, i32 1, !dbg !13827
  store i32 -2147483648, i32* %ctrl, align 4, !dbg !13828
  br label %for.inc, !dbg !13829

for.inc:                                          ; preds = %for.body
  %9 = load i32, i32* %i, align 4, !dbg !13830
  %inc = add i32 %9, 1, !dbg !13830
  store i32 %inc, i32* %i, align 4, !dbg !13830
  br label %for.cond, !dbg !13831, !llvm.loop !13832

for.end:                                          ; preds = %for.cond
  %10 = load %struct.macb*, %struct.macb** %bp.addr, align 8, !dbg !13834
  %queues3 = getelementptr inbounds %struct.macb, %struct.macb* %10, i32 0, i32 9, !dbg !13835
  %arrayidx4 = getelementptr [8 x %struct.macb_queue], [8 x %struct.macb_queue]* %queues3, i64 0, i64 0, !dbg !13834
  %tx_head = getelementptr inbounds %struct.macb_queue, %struct.macb_queue* %arrayidx4, i32 0, i32 11, !dbg !13836
  store i32 0, i32* %tx_head, align 8, !dbg !13837
  %11 = load %struct.macb*, %struct.macb** %bp.addr, align 8, !dbg !13838
  %queues5 = getelementptr inbounds %struct.macb, %struct.macb* %11, i32 0, i32 9, !dbg !13839
  %arrayidx6 = getelementptr [8 x %struct.macb_queue], [8 x %struct.macb_queue]* %queues5, i64 0, i64 0, !dbg !13838
  %tx_tail = getelementptr inbounds %struct.macb_queue, %struct.macb_queue* %arrayidx6, i32 0, i32 12, !dbg !13840
  store i32 0, i32* %tx_tail, align 4, !dbg !13841
  %12 = load %struct.macb_dma_desc*, %struct.macb_dma_desc** %desc, align 8, !dbg !13842
  %ctrl7 = getelementptr inbounds %struct.macb_dma_desc, %struct.macb_dma_desc* %12, i32 0, i32 1, !dbg !13843
  %13 = load i32, i32* %ctrl7, align 4, !dbg !13844
  %or = or i32 %13, 1073741824, !dbg !13844
  store i32 %or, i32* %ctrl7, align 4, !dbg !13844
  ret void, !dbg !13845
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @macb_rx(%struct.macb_queue* %queue, %struct.napi_struct* %napi, i32 %budget) #2 !dbg !13846 {
entry:
  %lock.addr.i79 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i79, metadata !13124, metadata !DIExpression()), !dbg !13847
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !13130, metadata !DIExpression()), !dbg !13851
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !11065, metadata !DIExpression()), !dbg !13852
  %retval = alloca i32, align 4
  %queue.addr = alloca %struct.macb_queue*, align 8
  %napi.addr = alloca %struct.napi_struct*, align 8
  %budget.addr = alloca i32, align 4
  %bp = alloca %struct.macb*, align 8
  %reset_rx_queue = alloca i8, align 1
  %received = alloca i32, align 4
  %tail = alloca i32, align 4
  %first_frag = alloca i32, align 4
  %desc = alloca %struct.macb_dma_desc*, align 8
  %ctrl = alloca i32, align 4
  %dropped = alloca i32, align 4
  %flags = alloca i64, align 8
  %ctrl42 = alloca i32, align 4
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__dummy49 = alloca i64, align 8
  %__dummy250 = alloca i64, align 8
  %tmp53 = alloca i32, align 4
  store %struct.macb_queue* %queue, %struct.macb_queue** %queue.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.macb_queue** %queue.addr, metadata !13859, metadata !DIExpression()), !dbg !13860
  store %struct.napi_struct* %napi, %struct.napi_struct** %napi.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.napi_struct** %napi.addr, metadata !13861, metadata !DIExpression()), !dbg !13862
  store i32 %budget, i32* %budget.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %budget.addr, metadata !13863, metadata !DIExpression()), !dbg !13864
  call void @llvm.dbg.declare(metadata %struct.macb** %bp, metadata !13865, metadata !DIExpression()), !dbg !13866
  %0 = load %struct.macb_queue*, %struct.macb_queue** %queue.addr, align 8, !dbg !13867
  %bp1 = getelementptr inbounds %struct.macb_queue, %struct.macb_queue* %0, i32 0, i32 0, !dbg !13868
  %1 = load %struct.macb*, %struct.macb** %bp1, align 8, !dbg !13868
  store %struct.macb* %1, %struct.macb** %bp, align 8, !dbg !13866
  call void @llvm.dbg.declare(metadata i8* %reset_rx_queue, metadata !13869, metadata !DIExpression()), !dbg !13870
  store i8 0, i8* %reset_rx_queue, align 1, !dbg !13870
  call void @llvm.dbg.declare(metadata i32* %received, metadata !13871, metadata !DIExpression()), !dbg !13872
  store i32 0, i32* %received, align 4, !dbg !13872
  call void @llvm.dbg.declare(metadata i32* %tail, metadata !13873, metadata !DIExpression()), !dbg !13874
  call void @llvm.dbg.declare(metadata i32* %first_frag, metadata !13875, metadata !DIExpression()), !dbg !13876
  store i32 -1, i32* %first_frag, align 4, !dbg !13876
  %2 = load %struct.macb_queue*, %struct.macb_queue** %queue.addr, align 8, !dbg !13877
  %rx_tail = getelementptr inbounds %struct.macb_queue, %struct.macb_queue* %2, i32 0, i32 19, !dbg !13879
  %3 = load i32, i32* %rx_tail, align 8, !dbg !13879
  store i32 %3, i32* %tail, align 4, !dbg !13880
  br label %for.cond, !dbg !13881

for.cond:                                         ; preds = %for.inc, %entry
  %4 = load i32, i32* %budget.addr, align 4, !dbg !13882
  %cmp = icmp sgt i32 %4, 0, !dbg !13884
  br i1 %cmp, label %for.body, label %for.end, !dbg !13885

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.macb_dma_desc** %desc, metadata !13886, metadata !DIExpression()), !dbg !13888
  %5 = load %struct.macb_queue*, %struct.macb_queue** %queue.addr, align 8, !dbg !13889
  %6 = load i32, i32* %tail, align 4, !dbg !13890
  %call = call %struct.macb_dma_desc* @macb_rx_desc(%struct.macb_queue* %5, i32 %6) #12, !dbg !13891
  store %struct.macb_dma_desc* %call, %struct.macb_dma_desc** %desc, align 8, !dbg !13888
  call void @llvm.dbg.declare(metadata i32* %ctrl, metadata !13892, metadata !DIExpression()), !dbg !13893
  call void asm sideeffect "lfence", "~{memory},~{dirflag},~{fpsr},~{flags}"() #8, !dbg !13894, !srcloc !13895
  %7 = load %struct.macb_dma_desc*, %struct.macb_dma_desc** %desc, align 8, !dbg !13896
  %addr = getelementptr inbounds %struct.macb_dma_desc, %struct.macb_dma_desc* %7, i32 0, i32 0, !dbg !13898
  %8 = load i32, i32* %addr, align 4, !dbg !13898
  %and = and i32 %8, 1, !dbg !13899
  %tobool = icmp ne i32 %and, 0, !dbg !13899
  br i1 %tobool, label %if.end, label %if.then, !dbg !13900

if.then:                                          ; preds = %for.body
  br label %for.end, !dbg !13901

if.end:                                           ; preds = %for.body
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #8, !dbg !13902, !srcloc !13903
  %9 = load %struct.macb_dma_desc*, %struct.macb_dma_desc** %desc, align 8, !dbg !13904
  %ctrl2 = getelementptr inbounds %struct.macb_dma_desc, %struct.macb_dma_desc* %9, i32 0, i32 1, !dbg !13905
  %10 = load i32, i32* %ctrl2, align 4, !dbg !13905
  store i32 %10, i32* %ctrl, align 4, !dbg !13906
  %11 = load i32, i32* %ctrl, align 4, !dbg !13907
  %and3 = and i32 %11, 16384, !dbg !13909
  %tobool4 = icmp ne i32 %and3, 0, !dbg !13909
  br i1 %tobool4, label %if.then5, label %if.end9, !dbg !13910

if.then5:                                         ; preds = %if.end
  %12 = load i32, i32* %first_frag, align 4, !dbg !13911
  %cmp6 = icmp ne i32 %12, -1, !dbg !13914
  br i1 %cmp6, label %if.then7, label %if.end8, !dbg !13915

if.then7:                                         ; preds = %if.then5
  %13 = load %struct.macb_queue*, %struct.macb_queue** %queue.addr, align 8, !dbg !13916
  %14 = load i32, i32* %first_frag, align 4, !dbg !13917
  %15 = load i32, i32* %tail, align 4, !dbg !13918
  call void @discard_partial_frame(%struct.macb_queue* %13, i32 %14, i32 %15) #12, !dbg !13919
  br label %if.end8, !dbg !13919

if.end8:                                          ; preds = %if.then7, %if.then5
  %16 = load i32, i32* %tail, align 4, !dbg !13920
  store i32 %16, i32* %first_frag, align 4, !dbg !13921
  br label %if.end9, !dbg !13922

if.end9:                                          ; preds = %if.end8, %if.end
  %17 = load i32, i32* %ctrl, align 4, !dbg !13923
  %and10 = and i32 %17, 32768, !dbg !13925
  %tobool11 = icmp ne i32 %and10, 0, !dbg !13925
  br i1 %tobool11, label %if.then12, label %if.end32, !dbg !13926

if.then12:                                        ; preds = %if.end9
  call void @llvm.dbg.declare(metadata i32* %dropped, metadata !13927, metadata !DIExpression()), !dbg !13929
  %18 = load i32, i32* %first_frag, align 4, !dbg !13930
  %cmp13 = icmp eq i32 %18, -1, !dbg !13930
  %lnot = xor i1 %cmp13, true, !dbg !13930
  %lnot14 = xor i1 %lnot, true, !dbg !13930
  %lnot.ext = zext i1 %lnot14 to i32, !dbg !13930
  %conv = sext i32 %lnot.ext to i64, !dbg !13930
  %tobool15 = icmp ne i64 %conv, 0, !dbg !13930
  br i1 %tobool15, label %if.then16, label %if.end17, !dbg !13932

if.then16:                                        ; preds = %if.then12
  store i8 1, i8* %reset_rx_queue, align 1, !dbg !13933
  br label %for.inc, !dbg !13935

if.end17:                                         ; preds = %if.then12
  %19 = load %struct.macb_queue*, %struct.macb_queue** %queue.addr, align 8, !dbg !13936
  %20 = load %struct.napi_struct*, %struct.napi_struct** %napi.addr, align 8, !dbg !13937
  %21 = load i32, i32* %first_frag, align 4, !dbg !13938
  %22 = load i32, i32* %tail, align 4, !dbg !13939
  %call18 = call i32 @macb_rx_frame(%struct.macb_queue* %19, %struct.napi_struct* %20, i32 %21, i32 %22) #12, !dbg !13940
  store i32 %call18, i32* %dropped, align 4, !dbg !13941
  store i32 -1, i32* %first_frag, align 4, !dbg !13942
  %23 = load i32, i32* %dropped, align 4, !dbg !13943
  %cmp19 = icmp slt i32 %23, 0, !dbg !13943
  %lnot21 = xor i1 %cmp19, true, !dbg !13943
  %lnot23 = xor i1 %lnot21, true, !dbg !13943
  %lnot.ext24 = zext i1 %lnot23 to i32, !dbg !13943
  %conv25 = sext i32 %lnot.ext24 to i64, !dbg !13943
  %tobool26 = icmp ne i64 %conv25, 0, !dbg !13943
  br i1 %tobool26, label %if.then27, label %if.end28, !dbg !13945

if.then27:                                        ; preds = %if.end17
  store i8 1, i8* %reset_rx_queue, align 1, !dbg !13946
  br label %for.inc, !dbg !13948

if.end28:                                         ; preds = %if.end17
  %24 = load i32, i32* %dropped, align 4, !dbg !13949
  %tobool29 = icmp ne i32 %24, 0, !dbg !13949
  br i1 %tobool29, label %if.end31, label %if.then30, !dbg !13951

if.then30:                                        ; preds = %if.end28
  %25 = load i32, i32* %received, align 4, !dbg !13952
  %inc = add i32 %25, 1, !dbg !13952
  store i32 %inc, i32* %received, align 4, !dbg !13952
  %26 = load i32, i32* %budget.addr, align 4, !dbg !13954
  %dec = add i32 %26, -1, !dbg !13954
  store i32 %dec, i32* %budget.addr, align 4, !dbg !13954
  br label %if.end31, !dbg !13955

if.end31:                                         ; preds = %if.then30, %if.end28
  br label %if.end32, !dbg !13956

if.end32:                                         ; preds = %if.end31, %if.end9
  br label %for.inc, !dbg !13957

for.inc:                                          ; preds = %if.end32, %if.then27, %if.then16
  %27 = load i32, i32* %tail, align 4, !dbg !13958
  %inc33 = add i32 %27, 1, !dbg !13958
  store i32 %inc33, i32* %tail, align 4, !dbg !13958
  br label %for.cond, !dbg !13959, !llvm.loop !13960

for.end:                                          ; preds = %if.then, %for.cond
  %28 = load i8, i8* %reset_rx_queue, align 1, !dbg !13962
  %tobool34 = trunc i8 %28 to i1, !dbg !13962
  %lnot35 = xor i1 %tobool34, true, !dbg !13962
  %lnot37 = xor i1 %lnot35, true, !dbg !13962
  %lnot.ext38 = zext i1 %lnot37 to i32, !dbg !13962
  %conv39 = sext i32 %lnot.ext38 to i64, !dbg !13962
  %tobool40 = icmp ne i64 %conv39, 0, !dbg !13962
  br i1 %tobool40, label %if.then41, label %if.end72, !dbg !13963

if.then41:                                        ; preds = %for.end
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !13964, metadata !DIExpression()), !dbg !13965
  call void @llvm.dbg.declare(metadata i32* %ctrl42, metadata !13966, metadata !DIExpression()), !dbg !13967
  %29 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !13968
  %dev = getelementptr inbounds %struct.macb, %struct.macb* %29, i32 0, i32 17, !dbg !13969
  %30 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !13969
  call void (%struct.net_device*, i8*, ...) @netdev_err(%struct.net_device* %30, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.40, i64 0, i64 0)) #13, !dbg !13970
  br label %do.body, !dbg !13971

do.body:                                          ; preds = %if.then41
  br label %do.body43, !dbg !13972

do.body43:                                        ; preds = %do.body
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !13973, metadata !DIExpression()), !dbg !13975
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !13976, metadata !DIExpression()), !dbg !13975
  %cmp44 = icmp eq i64* %__dummy, %__dummy2, !dbg !13975
  %conv45 = zext i1 %cmp44 to i32, !dbg !13975
  store i32 1, i32* %tmp, align 4, !dbg !13975
  %31 = load i32, i32* %tmp, align 4, !dbg !13975
  br label %do.body46, !dbg !13977

do.body46:                                        ; preds = %do.body43
  br label %do.body47, !dbg !13978

do.body47:                                        ; preds = %do.body46
  br label %do.body48, !dbg !13979

do.body48:                                        ; preds = %do.body47
  call void @llvm.dbg.declare(metadata i64* %__dummy49, metadata !13981, metadata !DIExpression()), !dbg !13984
  call void @llvm.dbg.declare(metadata i64* %__dummy250, metadata !13985, metadata !DIExpression()), !dbg !13984
  %cmp51 = icmp eq i64* %__dummy49, %__dummy250, !dbg !13984
  %conv52 = zext i1 %cmp51 to i32, !dbg !13984
  store i32 1, i32* %tmp53, align 4, !dbg !13984
  %32 = load i32, i32* %tmp53, align 4, !dbg !13984
  %call54 = call i64 @arch_local_irq_save() #12, !dbg !13986
  store i64 %call54, i64* %flags, align 8, !dbg !13986
  br label %do.end, !dbg !13986

do.end:                                           ; preds = %do.body48
  br label %do.end55, !dbg !13979

do.end55:                                         ; preds = %do.end
  br label %do.body56, !dbg !13978

do.body56:                                        ; preds = %do.end55
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #8, !dbg !13987, !srcloc !13988
  br label %do.body57, !dbg !13987

do.body57:                                        ; preds = %do.body56
  %33 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !13989
  %lock = getelementptr inbounds %struct.macb, %struct.macb* %33, i32 0, i32 10, !dbg !13989
  store %struct.spinlock* %lock, %struct.spinlock** %lock.addr.i, align 8
  %34 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !13990
  %35 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %34, i32 0, i32 0, !dbg !13991
  %rlock.i = bitcast %union.anon.1* %35 to %struct.raw_spinlock*, !dbg !13991
  br label %do.end59, !dbg !13989

do.end59:                                         ; preds = %do.body57
  br label %do.end60, !dbg !13987

do.end60:                                         ; preds = %do.end59
  br label %do.end61, !dbg !13978

do.end61:                                         ; preds = %do.end60
  br label %do.end62, !dbg !13977

do.end62:                                         ; preds = %do.end61
  br label %do.end63, !dbg !13972

do.end63:                                         ; preds = %do.end62
  %36 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !13992
  %macb_reg_readl = getelementptr inbounds %struct.macb, %struct.macb* %36, i32 0, i32 2, !dbg !13992
  %37 = load i32 (%struct.macb*, i32)*, i32 (%struct.macb*, i32)** %macb_reg_readl, align 8, !dbg !13992
  %38 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !13992
  %call64 = call i32 %37(%struct.macb* %38, i32 0) #12, !dbg !13992
  store i32 %call64, i32* %ctrl42, align 4, !dbg !13993
  %39 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !13994
  %macb_reg_writel = getelementptr inbounds %struct.macb, %struct.macb* %39, i32 0, i32 3, !dbg !13994
  %40 = load void (%struct.macb*, i32, i32)*, void (%struct.macb*, i32, i32)** %macb_reg_writel, align 8, !dbg !13994
  %41 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !13994
  %42 = load i32, i32* %ctrl42, align 4, !dbg !13994
  %and65 = and i32 %42, -5, !dbg !13994
  call void %40(%struct.macb* %41, i32 0, i32 %and65) #12, !dbg !13994
  %43 = load %struct.macb_queue*, %struct.macb_queue** %queue.addr, align 8, !dbg !13995
  call void @macb_init_rx_ring(%struct.macb_queue* %43) #12, !dbg !13996
  %44 = load %struct.macb_queue*, %struct.macb_queue** %queue.addr, align 8, !dbg !13997
  %bp66 = getelementptr inbounds %struct.macb_queue, %struct.macb_queue* %44, i32 0, i32 0, !dbg !13997
  %45 = load %struct.macb*, %struct.macb** %bp66, align 8, !dbg !13997
  %macb_reg_writel67 = getelementptr inbounds %struct.macb, %struct.macb* %45, i32 0, i32 3, !dbg !13997
  %46 = load void (%struct.macb*, i32, i32)*, void (%struct.macb*, i32, i32)** %macb_reg_writel67, align 8, !dbg !13997
  %47 = load %struct.macb_queue*, %struct.macb_queue** %queue.addr, align 8, !dbg !13997
  %bp68 = getelementptr inbounds %struct.macb_queue, %struct.macb_queue* %47, i32 0, i32 0, !dbg !13997
  %48 = load %struct.macb*, %struct.macb** %bp68, align 8, !dbg !13997
  %49 = load %struct.macb_queue*, %struct.macb_queue** %queue.addr, align 8, !dbg !13997
  %RBQP = getelementptr inbounds %struct.macb_queue, %struct.macb_queue* %49, i32 0, i32 9, !dbg !13997
  %50 = load i32, i32* %RBQP, align 8, !dbg !13997
  %51 = load %struct.macb_queue*, %struct.macb_queue** %queue.addr, align 8, !dbg !13997
  %rx_ring_dma = getelementptr inbounds %struct.macb_queue, %struct.macb_queue* %51, i32 0, i32 17, !dbg !13997
  %52 = load i64, i64* %rx_ring_dma, align 8, !dbg !13997
  %conv69 = trunc i64 %52 to i32, !dbg !13997
  call void %46(%struct.macb* %48, i32 %50, i32 %conv69) #12, !dbg !13997
  %53 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !13998
  %macb_reg_writel70 = getelementptr inbounds %struct.macb, %struct.macb* %53, i32 0, i32 3, !dbg !13998
  %54 = load void (%struct.macb*, i32, i32)*, void (%struct.macb*, i32, i32)** %macb_reg_writel70, align 8, !dbg !13998
  %55 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !13998
  %56 = load i32, i32* %ctrl42, align 4, !dbg !13998
  %or = or i32 %56, 4, !dbg !13998
  call void %54(%struct.macb* %55, i32 0, i32 %or) #12, !dbg !13998
  %57 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !13999
  %lock71 = getelementptr inbounds %struct.macb, %struct.macb* %57, i32 0, i32 10, !dbg !14000
  %58 = load i64, i64* %flags, align 8, !dbg !14001
  store %struct.spinlock* %lock71, %struct.spinlock** %lock.addr.i79, align 8
  store i64 %58, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !743, metadata !13334, metadata !DIExpression()) #8, !dbg !14002
  call void @llvm.dbg.declare(metadata !743, metadata !13338, metadata !DIExpression()) #8, !dbg !14002
  store i32 1, i32* %tmp.i, align 4, !dbg !14002
  %59 = load i32, i32* %tmp.i, align 4, !dbg !14002
  call void @llvm.dbg.declare(metadata !743, metadata !13339, metadata !DIExpression()) #8, !dbg !14003
  call void @llvm.dbg.declare(metadata !743, metadata !13345, metadata !DIExpression()) #8, !dbg !14003
  store i32 1, i32* %tmp8.i, align 4, !dbg !14003
  %60 = load i32, i32* %tmp8.i, align 4, !dbg !14003
  %61 = load i64, i64* %flags.addr.i, align 8, !dbg !14004
  call void @arch_local_irq_restore(i64 %61) #14, !dbg !14004
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #8, !dbg !14005, !srcloc !13349
  %62 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i79, align 8, !dbg !14006
  %63 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %62, i32 0, i32 0, !dbg !14006
  %rlock.i80 = bitcast %union.anon.1* %63 to %struct.raw_spinlock*, !dbg !14006
  %64 = load i32, i32* %received, align 4, !dbg !14007
  store i32 %64, i32* %retval, align 4, !dbg !14008
  br label %return, !dbg !14008

if.end72:                                         ; preds = %for.end
  %65 = load i32, i32* %first_frag, align 4, !dbg !14009
  %cmp73 = icmp ne i32 %65, -1, !dbg !14011
  br i1 %cmp73, label %if.then75, label %if.else, !dbg !14012

if.then75:                                        ; preds = %if.end72
  %66 = load i32, i32* %first_frag, align 4, !dbg !14013
  %67 = load %struct.macb_queue*, %struct.macb_queue** %queue.addr, align 8, !dbg !14014
  %rx_tail76 = getelementptr inbounds %struct.macb_queue, %struct.macb_queue* %67, i32 0, i32 19, !dbg !14015
  store i32 %66, i32* %rx_tail76, align 8, !dbg !14016
  br label %if.end78, !dbg !14014

if.else:                                          ; preds = %if.end72
  %68 = load i32, i32* %tail, align 4, !dbg !14017
  %69 = load %struct.macb_queue*, %struct.macb_queue** %queue.addr, align 8, !dbg !14018
  %rx_tail77 = getelementptr inbounds %struct.macb_queue, %struct.macb_queue* %69, i32 0, i32 19, !dbg !14019
  store i32 %68, i32* %rx_tail77, align 8, !dbg !14020
  br label %if.end78

if.end78:                                         ; preds = %if.else, %if.then75
  %70 = load i32, i32* %received, align 4, !dbg !14021
  store i32 %70, i32* %retval, align 4, !dbg !14022
  br label %return, !dbg !14022

return:                                           ; preds = %if.end78, %do.end63
  %71 = load i32, i32* %retval, align 4, !dbg !14023
  ret i32 %71, !dbg !14023
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @phy_interface_mode_is_rgmii(i32 %mode) #2 !dbg !14024 {
entry:
  %mode.addr = alloca i32, align 4
  store i32 %mode, i32* %mode.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %mode.addr, metadata !14027, metadata !DIExpression()), !dbg !14028
  %0 = load i32, i32* %mode.addr, align 4, !dbg !14029
  %cmp = icmp uge i32 %0, 8, !dbg !14030
  br i1 %cmp, label %land.rhs, label %land.end, !dbg !14031

land.rhs:                                         ; preds = %entry
  %1 = load i32, i32* %mode.addr, align 4, !dbg !14032
  %cmp1 = icmp ule i32 %1, 11, !dbg !14033
  br label %land.end

land.end:                                         ; preds = %land.rhs, %entry
  %2 = phi i1 [ false, %entry ], [ %cmp1, %land.rhs ], !dbg !14034
  ret i1 %2, !dbg !14035
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @macb_mdc_clk_div(%struct.macb* %bp) #2 !dbg !14036 {
entry:
  %retval = alloca i32, align 4
  %bp.addr = alloca %struct.macb*, align 8
  %config = alloca i32, align 4
  %pclk_hz = alloca i64, align 8
  store %struct.macb* %bp, %struct.macb** %bp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.macb** %bp.addr, metadata !14039, metadata !DIExpression()), !dbg !14040
  call void @llvm.dbg.declare(metadata i32* %config, metadata !14041, metadata !DIExpression()), !dbg !14042
  call void @llvm.dbg.declare(metadata i64* %pclk_hz, metadata !14043, metadata !DIExpression()), !dbg !14044
  %0 = load %struct.macb*, %struct.macb** %bp.addr, align 8, !dbg !14045
  %call = call zeroext i1 @macb_is_gem(%struct.macb* %0) #12, !dbg !14047
  br i1 %call, label %if.then, label %if.end, !dbg !14048

if.then:                                          ; preds = %entry
  %1 = load %struct.macb*, %struct.macb** %bp.addr, align 8, !dbg !14049
  %call1 = call i32 @gem_mdc_clk_div(%struct.macb* %1) #12, !dbg !14050
  store i32 %call1, i32* %retval, align 4, !dbg !14051
  br label %return, !dbg !14051

if.end:                                           ; preds = %entry
  %2 = load %struct.macb*, %struct.macb** %bp.addr, align 8, !dbg !14052
  %pclk = getelementptr inbounds %struct.macb, %struct.macb* %2, i32 0, i32 12, !dbg !14053
  %3 = load %struct.clk*, %struct.clk** %pclk, align 8, !dbg !14053
  %call2 = call i64 @clk_get_rate(%struct.clk* %3) #12, !dbg !14054
  store i64 %call2, i64* %pclk_hz, align 8, !dbg !14055
  %4 = load i64, i64* %pclk_hz, align 8, !dbg !14056
  %cmp = icmp ule i64 %4, 20000000, !dbg !14058
  br i1 %cmp, label %if.then3, label %if.else, !dbg !14059

if.then3:                                         ; preds = %if.end
  store i32 0, i32* %config, align 4, !dbg !14060
  br label %if.end12, !dbg !14061

if.else:                                          ; preds = %if.end
  %5 = load i64, i64* %pclk_hz, align 8, !dbg !14062
  %cmp4 = icmp ule i64 %5, 40000000, !dbg !14064
  br i1 %cmp4, label %if.then5, label %if.else6, !dbg !14065

if.then5:                                         ; preds = %if.else
  store i32 1024, i32* %config, align 4, !dbg !14066
  br label %if.end11, !dbg !14067

if.else6:                                         ; preds = %if.else
  %6 = load i64, i64* %pclk_hz, align 8, !dbg !14068
  %cmp7 = icmp ule i64 %6, 80000000, !dbg !14070
  br i1 %cmp7, label %if.then8, label %if.else9, !dbg !14071

if.then8:                                         ; preds = %if.else6
  store i32 2048, i32* %config, align 4, !dbg !14072
  br label %if.end10, !dbg !14073

if.else9:                                         ; preds = %if.else6
  store i32 3072, i32* %config, align 4, !dbg !14074
  br label %if.end10

if.end10:                                         ; preds = %if.else9, %if.then8
  br label %if.end11

if.end11:                                         ; preds = %if.end10, %if.then5
  br label %if.end12

if.end12:                                         ; preds = %if.end11, %if.then3
  %7 = load i32, i32* %config, align 4, !dbg !14075
  store i32 %7, i32* %retval, align 4, !dbg !14076
  br label %return, !dbg !14076

return:                                           ; preds = %if.end12, %if.then
  %8 = load i32, i32* %retval, align 4, !dbg !14077
  ret i32 %8, !dbg !14077
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @macb_dbw(%struct.macb* %bp) #2 !dbg !14078 {
entry:
  %retval = alloca i32, align 4
  %bp.addr = alloca %struct.macb*, align 8
  store %struct.macb* %bp, %struct.macb** %bp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.macb** %bp.addr, metadata !14079, metadata !DIExpression()), !dbg !14080
  %0 = load %struct.macb*, %struct.macb** %bp.addr, align 8, !dbg !14081
  %call = call zeroext i1 @macb_is_gem(%struct.macb* %0) #12, !dbg !14083
  br i1 %call, label %if.end, label %if.then, !dbg !14084

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !14085
  br label %return, !dbg !14085

if.end:                                           ; preds = %entry
  %1 = load %struct.macb*, %struct.macb** %bp.addr, align 8, !dbg !14086
  %macb_reg_readl = getelementptr inbounds %struct.macb, %struct.macb* %1, i32 0, i32 2, !dbg !14086
  %2 = load i32 (%struct.macb*, i32)*, i32 (%struct.macb*, i32)** %macb_reg_readl, align 8, !dbg !14086
  %3 = load %struct.macb*, %struct.macb** %bp.addr, align 8, !dbg !14086
  %call1 = call i32 %2(%struct.macb* %3, i32 640) #12, !dbg !14086
  %shr = lshr i32 %call1, 25, !dbg !14086
  %and = and i32 %shr, 7, !dbg !14086
  switch i32 %and, label %sw.default [
    i32 4, label %sw.bb
    i32 2, label %sw.bb2
    i32 1, label %sw.bb3
  ], !dbg !14087

sw.bb:                                            ; preds = %if.end
  store i32 4194304, i32* %retval, align 4, !dbg !14088
  br label %return, !dbg !14088

sw.bb2:                                           ; preds = %if.end
  store i32 2097152, i32* %retval, align 4, !dbg !14090
  br label %return, !dbg !14090

sw.bb3:                                           ; preds = %if.end
  br label %sw.default, !dbg !14090

sw.default:                                       ; preds = %if.end, %sw.bb3
  store i32 0, i32* %retval, align 4, !dbg !14091
  br label %return, !dbg !14091

return:                                           ; preds = %sw.default, %sw.bb2, %sw.bb, %if.then
  %4 = load i32, i32* %retval, align 4, !dbg !14092
  ret i32 %4, !dbg !14092
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @dev_get_drvdata(%struct.device* %dev) #2 !dbg !14093 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !14094, metadata !DIExpression()), !dbg !14095
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !14096
  %driver_data = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 8, !dbg !14097
  %1 = load i8*, i8** %driver_data, align 8, !dbg !14097
  ret i8* %1, !dbg !14098
}

; Function Attrs: noredzone
declare dso_local zeroext i1 @napi_complete_done(%struct.napi_struct*, i32) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @napi_reschedule(%struct.napi_struct* %napi) #2 !dbg !14099 {
entry:
  %retval = alloca i1, align 1
  %napi.addr = alloca %struct.napi_struct*, align 8
  store %struct.napi_struct* %napi, %struct.napi_struct** %napi.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.napi_struct** %napi.addr, metadata !14102, metadata !DIExpression()), !dbg !14103
  %0 = load %struct.napi_struct*, %struct.napi_struct** %napi.addr, align 8, !dbg !14104
  %call = call zeroext i1 @napi_schedule_prep(%struct.napi_struct* %0) #12, !dbg !14106
  br i1 %call, label %if.then, label %if.end, !dbg !14107

if.then:                                          ; preds = %entry
  %1 = load %struct.napi_struct*, %struct.napi_struct** %napi.addr, align 8, !dbg !14108
  call void @__napi_schedule(%struct.napi_struct* %1) #12, !dbg !14110
  store i1 true, i1* %retval, align 1, !dbg !14111
  br label %return, !dbg !14111

if.end:                                           ; preds = %entry
  store i1 false, i1* %retval, align 1, !dbg !14112
  br label %return, !dbg !14112

return:                                           ; preds = %if.end, %if.then
  %2 = load i1, i1* %retval, align 1, !dbg !14113
  ret i1 %2, !dbg !14113
}

; Function Attrs: noredzone
declare dso_local zeroext i1 @napi_schedule_prep(%struct.napi_struct*) #1

; Function Attrs: noredzone
declare dso_local void @__napi_schedule(%struct.napi_struct*) #1

; Function Attrs: noredzone
declare dso_local i32 @devm_request_threaded_irq(%struct.device*, i32, i32 (i32, i8*)*, i32 (i32, i8*)*, i64, i8*, i8*) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @netif_running(%struct.net_device* %dev) #2 !dbg !14114 {
entry:
  %dev.addr = alloca %struct.net_device*, align 8
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !14117, metadata !DIExpression()), !dbg !14118
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !14119
  %state = getelementptr inbounds %struct.net_device, %struct.net_device* %0, i32 0, i32 7, !dbg !14120
  %call = call zeroext i1 @test_bit(i64 0, i64* %state) #12, !dbg !14121
  ret i1 %call, !dbg !14122
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @schedule_work(%struct.work_struct* %work) #2 !dbg !14123 {
entry:
  %work.addr = alloca %struct.work_struct*, align 8
  store %struct.work_struct* %work, %struct.work_struct** %work.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.work_struct** %work.addr, metadata !14126, metadata !DIExpression()), !dbg !14127
  %0 = load %struct.workqueue_struct*, %struct.workqueue_struct** @system_wq, align 8, !dbg !14128
  %1 = load %struct.work_struct*, %struct.work_struct** %work.addr, align 8, !dbg !14129
  %call = call zeroext i1 @queue_work(%struct.workqueue_struct* %0, %struct.work_struct* %1) #12, !dbg !14130
  ret i1 %call, !dbg !14131
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @macb_tx_interrupt(%struct.macb_queue* %queue) #2 !dbg !14132 {
entry:
  %queue.addr = alloca %struct.macb_queue*, align 8
  %tail = alloca i32, align 4
  %head = alloca i32, align 4
  %status = alloca i32, align 4
  %bp = alloca %struct.macb*, align 8
  %queue_index = alloca i16, align 2
  %tmp = alloca i32, align 4
  %tx_skb = alloca %struct.macb_tx_skb*, align 8
  %skb = alloca %struct.sk_buff*, align 8
  %desc = alloca %struct.macb_dma_desc*, align 8
  %ctrl = alloca i32, align 4
  %tmp30 = alloca i32, align 4
  store %struct.macb_queue* %queue, %struct.macb_queue** %queue.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.macb_queue** %queue.addr, metadata !14135, metadata !DIExpression()), !dbg !14136
  call void @llvm.dbg.declare(metadata i32* %tail, metadata !14137, metadata !DIExpression()), !dbg !14138
  call void @llvm.dbg.declare(metadata i32* %head, metadata !14139, metadata !DIExpression()), !dbg !14140
  call void @llvm.dbg.declare(metadata i32* %status, metadata !14141, metadata !DIExpression()), !dbg !14142
  call void @llvm.dbg.declare(metadata %struct.macb** %bp, metadata !14143, metadata !DIExpression()), !dbg !14144
  %0 = load %struct.macb_queue*, %struct.macb_queue** %queue.addr, align 8, !dbg !14145
  %bp1 = getelementptr inbounds %struct.macb_queue, %struct.macb_queue* %0, i32 0, i32 0, !dbg !14146
  %1 = load %struct.macb*, %struct.macb** %bp1, align 8, !dbg !14146
  store %struct.macb* %1, %struct.macb** %bp, align 8, !dbg !14144
  call void @llvm.dbg.declare(metadata i16* %queue_index, metadata !14147, metadata !DIExpression()), !dbg !14148
  %2 = load %struct.macb_queue*, %struct.macb_queue** %queue.addr, align 8, !dbg !14149
  %3 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !14150
  %queues = getelementptr inbounds %struct.macb, %struct.macb* %3, i32 0, i32 9, !dbg !14151
  %arraydecay = getelementptr inbounds [8 x %struct.macb_queue], [8 x %struct.macb_queue]* %queues, i64 0, i64 0, !dbg !14150
  %sub.ptr.lhs.cast = ptrtoint %struct.macb_queue* %2 to i64, !dbg !14152
  %sub.ptr.rhs.cast = ptrtoint %struct.macb_queue* %arraydecay to i64, !dbg !14152
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !14152
  %sub.ptr.div = sdiv exact i64 %sub.ptr.sub, 2680, !dbg !14152
  %conv = trunc i64 %sub.ptr.div to i16, !dbg !14149
  store i16 %conv, i16* %queue_index, align 2, !dbg !14148
  %4 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !14153
  %macb_reg_readl = getelementptr inbounds %struct.macb, %struct.macb* %4, i32 0, i32 2, !dbg !14153
  %5 = load i32 (%struct.macb*, i32)*, i32 (%struct.macb*, i32)** %macb_reg_readl, align 8, !dbg !14153
  %6 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !14153
  %call = call i32 %5(%struct.macb* %6, i32 20) #12, !dbg !14153
  store i32 %call, i32* %status, align 4, !dbg !14154
  %7 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !14155
  %macb_reg_writel = getelementptr inbounds %struct.macb, %struct.macb* %7, i32 0, i32 3, !dbg !14155
  %8 = load void (%struct.macb*, i32, i32)*, void (%struct.macb*, i32, i32)** %macb_reg_writel, align 8, !dbg !14155
  %9 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !14155
  %10 = load i32, i32* %status, align 4, !dbg !14155
  call void %8(%struct.macb* %9, i32 20, i32 %10) #12, !dbg !14155
  %11 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !14156
  %caps = getelementptr inbounds %struct.macb, %struct.macb* %11, i32 0, i32 23, !dbg !14158
  %12 = load i32, i32* %caps, align 8, !dbg !14158
  %and = and i32 %12, 1, !dbg !14159
  %tobool = icmp ne i32 %and, 0, !dbg !14159
  br i1 %tobool, label %if.then, label %if.end, !dbg !14160

if.then:                                          ; preds = %entry
  %13 = load %struct.macb_queue*, %struct.macb_queue** %queue.addr, align 8, !dbg !14161
  %bp2 = getelementptr inbounds %struct.macb_queue, %struct.macb_queue* %13, i32 0, i32 0, !dbg !14161
  %14 = load %struct.macb*, %struct.macb** %bp2, align 8, !dbg !14161
  %macb_reg_writel3 = getelementptr inbounds %struct.macb, %struct.macb* %14, i32 0, i32 3, !dbg !14161
  %15 = load void (%struct.macb*, i32, i32)*, void (%struct.macb*, i32, i32)** %macb_reg_writel3, align 8, !dbg !14161
  %16 = load %struct.macb_queue*, %struct.macb_queue** %queue.addr, align 8, !dbg !14161
  %bp4 = getelementptr inbounds %struct.macb_queue, %struct.macb_queue* %16, i32 0, i32 0, !dbg !14161
  %17 = load %struct.macb*, %struct.macb** %bp4, align 8, !dbg !14161
  %18 = load %struct.macb_queue*, %struct.macb_queue** %queue.addr, align 8, !dbg !14161
  %ISR = getelementptr inbounds %struct.macb_queue, %struct.macb_queue* %18, i32 0, i32 2, !dbg !14161
  %19 = load i32, i32* %ISR, align 4, !dbg !14161
  call void %15(%struct.macb* %17, i32 %19, i32 128) #12, !dbg !14161
  br label %if.end, !dbg !14161

if.end:                                           ; preds = %if.then, %entry
  store i32 0, i32* %tmp, align 4, !dbg !14162
  %20 = load i32, i32* %tmp, align 4, !dbg !14165
  %21 = load %struct.macb_queue*, %struct.macb_queue** %queue.addr, align 8, !dbg !14166
  %tx_head = getelementptr inbounds %struct.macb_queue, %struct.macb_queue* %21, i32 0, i32 11, !dbg !14167
  %22 = load i32, i32* %tx_head, align 8, !dbg !14167
  store i32 %22, i32* %head, align 4, !dbg !14168
  %23 = load %struct.macb_queue*, %struct.macb_queue** %queue.addr, align 8, !dbg !14169
  %tx_tail = getelementptr inbounds %struct.macb_queue, %struct.macb_queue* %23, i32 0, i32 12, !dbg !14171
  %24 = load i32, i32* %tx_tail, align 4, !dbg !14171
  store i32 %24, i32* %tail, align 4, !dbg !14172
  br label %for.cond, !dbg !14173

for.cond:                                         ; preds = %for.inc47, %if.end
  %25 = load i32, i32* %tail, align 4, !dbg !14174
  %26 = load i32, i32* %head, align 4, !dbg !14176
  %cmp = icmp ne i32 %25, %26, !dbg !14177
  br i1 %cmp, label %for.body, label %for.end49, !dbg !14178

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.macb_tx_skb** %tx_skb, metadata !14179, metadata !DIExpression()), !dbg !14181
  call void @llvm.dbg.declare(metadata %struct.sk_buff** %skb, metadata !14182, metadata !DIExpression()), !dbg !14183
  call void @llvm.dbg.declare(metadata %struct.macb_dma_desc** %desc, metadata !14184, metadata !DIExpression()), !dbg !14185
  call void @llvm.dbg.declare(metadata i32* %ctrl, metadata !14186, metadata !DIExpression()), !dbg !14187
  %27 = load %struct.macb_queue*, %struct.macb_queue** %queue.addr, align 8, !dbg !14188
  %28 = load i32, i32* %tail, align 4, !dbg !14189
  %call6 = call %struct.macb_dma_desc* @macb_tx_desc(%struct.macb_queue* %27, i32 %28) #12, !dbg !14190
  store %struct.macb_dma_desc* %call6, %struct.macb_dma_desc** %desc, align 8, !dbg !14191
  call void asm sideeffect "lfence", "~{memory},~{dirflag},~{fpsr},~{flags}"() #8, !dbg !14192, !srcloc !14193
  %29 = load %struct.macb_dma_desc*, %struct.macb_dma_desc** %desc, align 8, !dbg !14194
  %ctrl7 = getelementptr inbounds %struct.macb_dma_desc, %struct.macb_dma_desc* %29, i32 0, i32 1, !dbg !14195
  %30 = load i32, i32* %ctrl7, align 4, !dbg !14195
  store i32 %30, i32* %ctrl, align 4, !dbg !14196
  %31 = load i32, i32* %ctrl, align 4, !dbg !14197
  %and8 = and i32 %31, -2147483648, !dbg !14199
  %tobool9 = icmp ne i32 %and8, 0, !dbg !14199
  br i1 %tobool9, label %if.end11, label %if.then10, !dbg !14200

if.then10:                                        ; preds = %for.body
  br label %for.end49, !dbg !14201

if.end11:                                         ; preds = %for.body
  br label %for.cond12, !dbg !14202

for.cond12:                                       ; preds = %for.inc, %if.end11
  %32 = load %struct.macb_queue*, %struct.macb_queue** %queue.addr, align 8, !dbg !14203
  %33 = load i32, i32* %tail, align 4, !dbg !14207
  %call13 = call %struct.macb_tx_skb* @macb_tx_skb(%struct.macb_queue* %32, i32 %33) #12, !dbg !14208
  store %struct.macb_tx_skb* %call13, %struct.macb_tx_skb** %tx_skb, align 8, !dbg !14209
  %34 = load %struct.macb_tx_skb*, %struct.macb_tx_skb** %tx_skb, align 8, !dbg !14210
  %skb14 = getelementptr inbounds %struct.macb_tx_skb, %struct.macb_tx_skb* %34, i32 0, i32 0, !dbg !14211
  %35 = load %struct.sk_buff*, %struct.sk_buff** %skb14, align 8, !dbg !14211
  store %struct.sk_buff* %35, %struct.sk_buff** %skb, align 8, !dbg !14212
  %36 = load %struct.sk_buff*, %struct.sk_buff** %skb, align 8, !dbg !14213
  %tobool15 = icmp ne %struct.sk_buff* %36, null, !dbg !14213
  br i1 %tobool15, label %if.then16, label %if.end42, !dbg !14215

if.then16:                                        ; preds = %for.cond12
  %37 = load %struct.sk_buff*, %struct.sk_buff** %skb, align 8, !dbg !14216
  %call17 = call i8* @skb_end_pointer(%struct.sk_buff* %37) #12, !dbg !14216
  %38 = bitcast i8* %call17 to %struct.skb_shared_info*, !dbg !14216
  %tx_flags = getelementptr inbounds %struct.skb_shared_info, %struct.skb_shared_info* %38, i32 0, i32 3, !dbg !14216
  %39 = load i8, i8* %tx_flags, align 1, !dbg !14216
  %conv18 = zext i8 %39 to i32, !dbg !14216
  %and19 = and i32 %conv18, 1, !dbg !14216
  %tobool20 = icmp ne i32 %and19, 0, !dbg !14216
  %lnot = xor i1 %tobool20, true, !dbg !14216
  %lnot21 = xor i1 %lnot, true, !dbg !14216
  %lnot.ext = zext i1 %lnot21 to i32, !dbg !14216
  %conv22 = sext i32 %lnot.ext to i64, !dbg !14216
  %tobool23 = icmp ne i64 %conv22, 0, !dbg !14216
  br i1 %tobool23, label %land.lhs.true, label %if.end29, !dbg !14219

land.lhs.true:                                    ; preds = %if.then16
  %40 = load %struct.macb_queue*, %struct.macb_queue** %queue.addr, align 8, !dbg !14220
  %41 = load %struct.sk_buff*, %struct.sk_buff** %skb, align 8, !dbg !14221
  %42 = load %struct.macb_dma_desc*, %struct.macb_dma_desc** %desc, align 8, !dbg !14222
  %call24 = call i32 @gem_ptp_do_txstamp(%struct.macb_queue* %40, %struct.sk_buff* %41, %struct.macb_dma_desc* %42) #12, !dbg !14223
  %cmp25 = icmp eq i32 %call24, 0, !dbg !14224
  br i1 %cmp25, label %if.then27, label %if.end29, !dbg !14225

if.then27:                                        ; preds = %land.lhs.true
  %43 = load %struct.macb_tx_skb*, %struct.macb_tx_skb** %tx_skb, align 8, !dbg !14226
  %skb28 = getelementptr inbounds %struct.macb_tx_skb, %struct.macb_tx_skb* %43, i32 0, i32 0, !dbg !14228
  store %struct.sk_buff* null, %struct.sk_buff** %skb28, align 8, !dbg !14229
  br label %if.end29, !dbg !14230

if.end29:                                         ; preds = %if.then27, %land.lhs.true, %if.then16
  store i32 0, i32* %tmp30, align 4, !dbg !14231
  %44 = load i32, i32* %tmp30, align 4, !dbg !14234
  %45 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !14235
  %dev = getelementptr inbounds %struct.macb, %struct.macb* %45, i32 0, i32 17, !dbg !14236
  %46 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !14236
  %stats = getelementptr inbounds %struct.net_device, %struct.net_device* %46, i32 0, i32 24, !dbg !14237
  %tx_packets = getelementptr inbounds %struct.net_device_stats, %struct.net_device_stats* %stats, i32 0, i32 1, !dbg !14238
  %47 = load i64, i64* %tx_packets, align 8, !dbg !14239
  %inc = add i64 %47, 1, !dbg !14239
  store i64 %inc, i64* %tx_packets, align 8, !dbg !14239
  %48 = load %struct.macb_queue*, %struct.macb_queue** %queue.addr, align 8, !dbg !14240
  %stats31 = getelementptr inbounds %struct.macb_queue, %struct.macb_queue* %48, i32 0, i32 25, !dbg !14241
  %tx_packets32 = getelementptr inbounds %struct.queue_stats, %struct.queue_stats* %stats31, i32 0, i32 3, !dbg !14242
  %49 = load i64, i64* %tx_packets32, align 8, !dbg !14243
  %inc33 = add i64 %49, 1, !dbg !14243
  store i64 %inc33, i64* %tx_packets32, align 8, !dbg !14243
  %50 = load %struct.sk_buff*, %struct.sk_buff** %skb, align 8, !dbg !14244
  %len = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %50, i32 0, i32 5, !dbg !14245
  %51 = load i32, i32* %len, align 8, !dbg !14245
  %conv34 = zext i32 %51 to i64, !dbg !14244
  %52 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !14246
  %dev35 = getelementptr inbounds %struct.macb, %struct.macb* %52, i32 0, i32 17, !dbg !14247
  %53 = load %struct.net_device*, %struct.net_device** %dev35, align 8, !dbg !14247
  %stats36 = getelementptr inbounds %struct.net_device, %struct.net_device* %53, i32 0, i32 24, !dbg !14248
  %tx_bytes = getelementptr inbounds %struct.net_device_stats, %struct.net_device_stats* %stats36, i32 0, i32 3, !dbg !14249
  %54 = load i64, i64* %tx_bytes, align 8, !dbg !14250
  %add = add i64 %54, %conv34, !dbg !14250
  store i64 %add, i64* %tx_bytes, align 8, !dbg !14250
  %55 = load %struct.sk_buff*, %struct.sk_buff** %skb, align 8, !dbg !14251
  %len37 = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %55, i32 0, i32 5, !dbg !14252
  %56 = load i32, i32* %len37, align 8, !dbg !14252
  %conv38 = zext i32 %56 to i64, !dbg !14251
  %57 = load %struct.macb_queue*, %struct.macb_queue** %queue.addr, align 8, !dbg !14253
  %stats39 = getelementptr inbounds %struct.macb_queue, %struct.macb_queue* %57, i32 0, i32 25, !dbg !14254
  %tx_bytes40 = getelementptr inbounds %struct.queue_stats, %struct.queue_stats* %stats39, i32 0, i32 4, !dbg !14255
  %58 = load i64, i64* %tx_bytes40, align 8, !dbg !14256
  %add41 = add i64 %58, %conv38, !dbg !14256
  store i64 %add41, i64* %tx_bytes40, align 8, !dbg !14256
  br label %if.end42, !dbg !14257

if.end42:                                         ; preds = %if.end29, %for.cond12
  %59 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !14258
  %60 = load %struct.macb_tx_skb*, %struct.macb_tx_skb** %tx_skb, align 8, !dbg !14259
  call void @macb_tx_unmap(%struct.macb* %59, %struct.macb_tx_skb* %60) #12, !dbg !14260
  %61 = load %struct.sk_buff*, %struct.sk_buff** %skb, align 8, !dbg !14261
  %tobool43 = icmp ne %struct.sk_buff* %61, null, !dbg !14261
  br i1 %tobool43, label %if.then44, label %if.end45, !dbg !14263

if.then44:                                        ; preds = %if.end42
  br label %for.end, !dbg !14264

if.end45:                                         ; preds = %if.end42
  br label %for.inc, !dbg !14265

for.inc:                                          ; preds = %if.end45
  %62 = load i32, i32* %tail, align 4, !dbg !14266
  %inc46 = add i32 %62, 1, !dbg !14266
  store i32 %inc46, i32* %tail, align 4, !dbg !14266
  br label %for.cond12, !dbg !14267, !llvm.loop !14268

for.end:                                          ; preds = %if.then44
  br label %for.inc47, !dbg !14271

for.inc47:                                        ; preds = %for.end
  %63 = load i32, i32* %tail, align 4, !dbg !14272
  %inc48 = add i32 %63, 1, !dbg !14272
  store i32 %inc48, i32* %tail, align 4, !dbg !14272
  br label %for.cond, !dbg !14273, !llvm.loop !14274

for.end49:                                        ; preds = %if.then10, %for.cond
  %64 = load i32, i32* %tail, align 4, !dbg !14276
  %65 = load %struct.macb_queue*, %struct.macb_queue** %queue.addr, align 8, !dbg !14277
  %tx_tail50 = getelementptr inbounds %struct.macb_queue, %struct.macb_queue* %65, i32 0, i32 12, !dbg !14278
  store i32 %64, i32* %tx_tail50, align 4, !dbg !14279
  %66 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !14280
  %dev51 = getelementptr inbounds %struct.macb, %struct.macb* %66, i32 0, i32 17, !dbg !14282
  %67 = load %struct.net_device*, %struct.net_device** %dev51, align 8, !dbg !14282
  %68 = load i16, i16* %queue_index, align 2, !dbg !14283
  %call52 = call zeroext i1 @__netif_subqueue_stopped(%struct.net_device* %67, i16 zeroext %68) #12, !dbg !14284
  br i1 %call52, label %land.lhs.true54, label %if.end64, !dbg !14285

land.lhs.true54:                                  ; preds = %for.end49
  %69 = load %struct.macb_queue*, %struct.macb_queue** %queue.addr, align 8, !dbg !14286
  %tx_head55 = getelementptr inbounds %struct.macb_queue, %struct.macb_queue* %69, i32 0, i32 11, !dbg !14286
  %70 = load i32, i32* %tx_head55, align 8, !dbg !14286
  %71 = load %struct.macb_queue*, %struct.macb_queue** %queue.addr, align 8, !dbg !14286
  %tx_tail56 = getelementptr inbounds %struct.macb_queue, %struct.macb_queue* %71, i32 0, i32 12, !dbg !14286
  %72 = load i32, i32* %tx_tail56, align 4, !dbg !14286
  %sub = sub i32 %70, %72, !dbg !14286
  %73 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !14286
  %tx_ring_size = getelementptr inbounds %struct.macb, %struct.macb* %73, i32 0, i32 6, !dbg !14286
  %74 = load i32, i32* %tx_ring_size, align 4, !dbg !14286
  %sub57 = sub i32 %74, 1, !dbg !14286
  %and58 = and i32 %sub, %sub57, !dbg !14286
  %75 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !14287
  %tx_ring_size59 = getelementptr inbounds %struct.macb, %struct.macb* %75, i32 0, i32 6, !dbg !14287
  %76 = load i32, i32* %tx_ring_size59, align 4, !dbg !14287
  %mul = mul i32 3, %76, !dbg !14287
  %div = udiv i32 %mul, 4, !dbg !14287
  %cmp60 = icmp ule i32 %and58, %div, !dbg !14288
  br i1 %cmp60, label %if.then62, label %if.end64, !dbg !14289

if.then62:                                        ; preds = %land.lhs.true54
  %77 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !14290
  %dev63 = getelementptr inbounds %struct.macb, %struct.macb* %77, i32 0, i32 17, !dbg !14291
  %78 = load %struct.net_device*, %struct.net_device** %dev63, align 8, !dbg !14291
  %79 = load i16, i16* %queue_index, align 2, !dbg !14292
  call void @netif_wake_subqueue(%struct.net_device* %78, i16 zeroext %79) #12, !dbg !14293
  br label %if.end64, !dbg !14293

if.end64:                                         ; preds = %if.then62, %land.lhs.true54, %for.end49
  ret void, !dbg !14294
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @macb_tx_restart(%struct.macb_queue* %queue) #2 !dbg !14295 {
entry:
  %queue.addr = alloca %struct.macb_queue*, align 8
  %head = alloca i32, align 4
  %tail = alloca i32, align 4
  %bp = alloca %struct.macb*, align 8
  store %struct.macb_queue* %queue, %struct.macb_queue** %queue.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.macb_queue** %queue.addr, metadata !14296, metadata !DIExpression()), !dbg !14297
  call void @llvm.dbg.declare(metadata i32* %head, metadata !14298, metadata !DIExpression()), !dbg !14299
  %0 = load %struct.macb_queue*, %struct.macb_queue** %queue.addr, align 8, !dbg !14300
  %tx_head = getelementptr inbounds %struct.macb_queue, %struct.macb_queue* %0, i32 0, i32 11, !dbg !14301
  %1 = load i32, i32* %tx_head, align 8, !dbg !14301
  store i32 %1, i32* %head, align 4, !dbg !14299
  call void @llvm.dbg.declare(metadata i32* %tail, metadata !14302, metadata !DIExpression()), !dbg !14303
  %2 = load %struct.macb_queue*, %struct.macb_queue** %queue.addr, align 8, !dbg !14304
  %tx_tail = getelementptr inbounds %struct.macb_queue, %struct.macb_queue* %2, i32 0, i32 12, !dbg !14305
  %3 = load i32, i32* %tx_tail, align 4, !dbg !14305
  store i32 %3, i32* %tail, align 4, !dbg !14303
  call void @llvm.dbg.declare(metadata %struct.macb** %bp, metadata !14306, metadata !DIExpression()), !dbg !14307
  %4 = load %struct.macb_queue*, %struct.macb_queue** %queue.addr, align 8, !dbg !14308
  %bp1 = getelementptr inbounds %struct.macb_queue, %struct.macb_queue* %4, i32 0, i32 0, !dbg !14309
  %5 = load %struct.macb*, %struct.macb** %bp1, align 8, !dbg !14309
  store %struct.macb* %5, %struct.macb** %bp, align 8, !dbg !14307
  %6 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !14310
  %caps = getelementptr inbounds %struct.macb, %struct.macb* %6, i32 0, i32 23, !dbg !14312
  %7 = load i32, i32* %caps, align 8, !dbg !14312
  %and = and i32 %7, 1, !dbg !14313
  %tobool = icmp ne i32 %and, 0, !dbg !14313
  br i1 %tobool, label %if.then, label %if.end, !dbg !14314

if.then:                                          ; preds = %entry
  %8 = load %struct.macb_queue*, %struct.macb_queue** %queue.addr, align 8, !dbg !14315
  %bp2 = getelementptr inbounds %struct.macb_queue, %struct.macb_queue* %8, i32 0, i32 0, !dbg !14315
  %9 = load %struct.macb*, %struct.macb** %bp2, align 8, !dbg !14315
  %macb_reg_writel = getelementptr inbounds %struct.macb, %struct.macb* %9, i32 0, i32 3, !dbg !14315
  %10 = load void (%struct.macb*, i32, i32)*, void (%struct.macb*, i32, i32)** %macb_reg_writel, align 8, !dbg !14315
  %11 = load %struct.macb_queue*, %struct.macb_queue** %queue.addr, align 8, !dbg !14315
  %bp3 = getelementptr inbounds %struct.macb_queue, %struct.macb_queue* %11, i32 0, i32 0, !dbg !14315
  %12 = load %struct.macb*, %struct.macb** %bp3, align 8, !dbg !14315
  %13 = load %struct.macb_queue*, %struct.macb_queue** %queue.addr, align 8, !dbg !14315
  %ISR = getelementptr inbounds %struct.macb_queue, %struct.macb_queue* %13, i32 0, i32 2, !dbg !14315
  %14 = load i32, i32* %ISR, align 4, !dbg !14315
  call void %10(%struct.macb* %12, i32 %14, i32 8) #12, !dbg !14315
  br label %if.end, !dbg !14315

if.end:                                           ; preds = %if.then, %entry
  %15 = load i32, i32* %head, align 4, !dbg !14316
  %16 = load i32, i32* %tail, align 4, !dbg !14318
  %cmp = icmp eq i32 %15, %16, !dbg !14319
  br i1 %cmp, label %if.then4, label %if.end5, !dbg !14320

if.then4:                                         ; preds = %if.end
  br label %return, !dbg !14321

if.end5:                                          ; preds = %if.end
  %17 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !14322
  %macb_reg_writel6 = getelementptr inbounds %struct.macb, %struct.macb* %17, i32 0, i32 3, !dbg !14322
  %18 = load void (%struct.macb*, i32, i32)*, void (%struct.macb*, i32, i32)** %macb_reg_writel6, align 8, !dbg !14322
  %19 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !14322
  %20 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !14322
  %macb_reg_readl = getelementptr inbounds %struct.macb, %struct.macb* %20, i32 0, i32 2, !dbg !14322
  %21 = load i32 (%struct.macb*, i32)*, i32 (%struct.macb*, i32)** %macb_reg_readl, align 8, !dbg !14322
  %22 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !14322
  %call = call i32 %21(%struct.macb* %22, i32 0) #12, !dbg !14322
  %or = or i32 %call, 512, !dbg !14322
  call void %18(%struct.macb* %19, i32 0, i32 %or) #12, !dbg !14322
  br label %return, !dbg !14323

return:                                           ; preds = %if.end5, %if.then4
  ret void, !dbg !14323
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @tasklet_schedule(%struct.tasklet_struct* %t) #2 !dbg !14324 {
entry:
  %t.addr = alloca %struct.tasklet_struct*, align 8
  store %struct.tasklet_struct* %t, %struct.tasklet_struct** %t.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.tasklet_struct** %t.addr, metadata !14325, metadata !DIExpression()), !dbg !14326
  %0 = load %struct.tasklet_struct*, %struct.tasklet_struct** %t.addr, align 8, !dbg !14327
  %state = getelementptr inbounds %struct.tasklet_struct, %struct.tasklet_struct* %0, i32 0, i32 1, !dbg !14329
  %call = call zeroext i1 @test_and_set_bit(i64 0, i64* %state) #12, !dbg !14330
  br i1 %call, label %if.end, label %if.then, !dbg !14331

if.then:                                          ; preds = %entry
  %1 = load %struct.tasklet_struct*, %struct.tasklet_struct** %t.addr, align 8, !dbg !14332
  call void @__tasklet_schedule(%struct.tasklet_struct* %1) #12, !dbg !14333
  br label %if.end, !dbg !14333

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !14334
}

; Function Attrs: cold noredzone
declare dso_local void @netdev_err(%struct.net_device*, i8*, ...) #5

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @test_bit(i64 %nr, i64* %addr) #2 !dbg !14335 {
entry:
  %nr.addr.i3 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %nr.addr.i3, metadata !14342, metadata !DIExpression()), !dbg !14345
  %addr.addr.i4 = alloca i64*, align 8
  call void @llvm.dbg.declare(metadata i64** %addr.addr.i4, metadata !14347, metadata !DIExpression()), !dbg !14348
  %oldbit.i = alloca i8, align 1
  call void @llvm.dbg.declare(metadata i8* %oldbit.i, metadata !14349, metadata !DIExpression()), !dbg !14350
  %nr.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %nr.addr.i, metadata !14351, metadata !DIExpression()), !dbg !14353
  %addr.addr.i = alloca i64*, align 8
  call void @llvm.dbg.declare(metadata i64** %addr.addr.i, metadata !14355, metadata !DIExpression()), !dbg !14356
  %v.addr.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %v.addr.i, metadata !14357, metadata !DIExpression()), !dbg !14359
  %size.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i, metadata !14361, metadata !DIExpression()), !dbg !14362
  %nr.addr = alloca i64, align 8
  %addr.addr = alloca i64*, align 8
  store i64 %nr, i64* %nr.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %nr.addr, metadata !14363, metadata !DIExpression()), !dbg !14364
  store i64* %addr, i64** %addr.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %addr.addr, metadata !14365, metadata !DIExpression()), !dbg !14366
  %0 = load i64*, i64** %addr.addr, align 8, !dbg !14367
  %1 = load i64, i64* %nr.addr, align 8, !dbg !14368
  %div = sdiv i64 %1, 64, !dbg !14368
  %add.ptr = getelementptr i64, i64* %0, i64 %div, !dbg !14369
  %2 = bitcast i64* %add.ptr to i8*, !dbg !14367
  store i8* %2, i8** %v.addr.i, align 8
  store i64 8, i64* %size.addr.i, align 8
  %3 = load i8*, i8** %v.addr.i, align 8, !dbg !14370
  %4 = load i64, i64* %size.addr.i, align 8, !dbg !14371
  %conv.i = trunc i64 %4 to i32, !dbg !14371
  %call.i = call zeroext i1 @kasan_check_read(i8* %3, i32 %conv.i) #14, !dbg !14372
  %5 = load i8*, i8** %v.addr.i, align 8, !dbg !14373
  %6 = load i64, i64* %size.addr.i, align 8, !dbg !14373
  call void @kcsan_check_access(i8* %5, i64 %6, i32 4) #14, !dbg !14373
  %7 = load i64, i64* %nr.addr, align 8, !dbg !14374
  %8 = call i1 @llvm.is.constant.i64(i64 %7), !dbg !14374
  br i1 %8, label %cond.true, label %cond.false, !dbg !14374

cond.true:                                        ; preds = %entry
  %9 = load i64, i64* %nr.addr, align 8, !dbg !14374
  %10 = load i64*, i64** %addr.addr, align 8, !dbg !14374
  store i64 %9, i64* %nr.addr.i, align 8
  store i64* %10, i64** %addr.addr.i, align 8
  %11 = load i64, i64* %nr.addr.i, align 8, !dbg !14375
  %and.i = and i64 %11, 63, !dbg !14376
  %shl.i = shl i64 1, %and.i, !dbg !14377
  %12 = load i64*, i64** %addr.addr.i, align 8, !dbg !14378
  %13 = load i64, i64* %nr.addr.i, align 8, !dbg !14379
  %shr.i = ashr i64 %13, 6, !dbg !14380
  %arrayidx.i = getelementptr i64, i64* %12, i64 %shr.i, !dbg !14378
  %14 = load volatile i64, i64* %arrayidx.i, align 8, !dbg !14378
  %and1.i = and i64 %shl.i, %14, !dbg !14381
  %cmp.i = icmp ne i64 %and1.i, 0, !dbg !14382
  %conv = zext i1 %cmp.i to i32, !dbg !14374
  br label %cond.end, !dbg !14374

cond.false:                                       ; preds = %entry
  %15 = load i64, i64* %nr.addr, align 8, !dbg !14374
  %16 = load i64*, i64** %addr.addr, align 8, !dbg !14374
  store i64 %15, i64* %nr.addr.i3, align 8
  store i64* %16, i64** %addr.addr.i4, align 8
  %17 = load i64*, i64** %addr.addr.i4, align 8, !dbg !14383
  %18 = load i64, i64* %nr.addr.i3, align 8, !dbg !14384
  %19 = call i8 asm sideeffect " btq  $2,$1\0A\09/* output condition code c*/\0A", "={@ccc},*m,Ir,~{memory},~{dirflag},~{fpsr},~{flags}"(i64* %17, i64 %18) #8, !dbg !14385, !srcloc !14386
  store i8 %19, i8* %oldbit.i, align 1, !dbg !14385
  %20 = load i8, i8* %oldbit.i, align 1, !dbg !14387
  %tobool.i = trunc i8 %20 to i1, !dbg !14387
  %conv2 = zext i1 %tobool.i to i32, !dbg !14374
  br label %cond.end, !dbg !14374

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %conv, %cond.true ], [ %conv2, %cond.false ], !dbg !14374
  %tobool = icmp ne i32 %cond, 0, !dbg !14374
  ret i1 %tobool, !dbg !14388
}

; Function Attrs: nounwind readnone willreturn
declare i1 @llvm.is.constant.i64(i64) #6

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @kasan_check_read(i8* %p, i32 %size) #2 !dbg !14389 {
entry:
  %p.addr = alloca i8*, align 8
  %size.addr = alloca i32, align 4
  store i8* %p, i8** %p.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %p.addr, metadata !14393, metadata !DIExpression()), !dbg !14394
  store i32 %size, i32* %size.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %size.addr, metadata !14395, metadata !DIExpression()), !dbg !14396
  ret i1 true, !dbg !14397
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @kcsan_check_access(i8* %ptr, i64 %size, i32 %type) #2 !dbg !14398 {
entry:
  %ptr.addr = alloca i8*, align 8
  %size.addr = alloca i64, align 8
  %type.addr = alloca i32, align 4
  store i8* %ptr, i8** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %ptr.addr, metadata !14402, metadata !DIExpression()), !dbg !14403
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !14404, metadata !DIExpression()), !dbg !14405
  store i32 %type, i32* %type.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %type.addr, metadata !14406, metadata !DIExpression()), !dbg !14407
  ret void, !dbg !14408
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @queue_work(%struct.workqueue_struct* %wq, %struct.work_struct* %work) #2 !dbg !14409 {
entry:
  %wq.addr = alloca %struct.workqueue_struct*, align 8
  %work.addr = alloca %struct.work_struct*, align 8
  store %struct.workqueue_struct* %wq, %struct.workqueue_struct** %wq.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.workqueue_struct** %wq.addr, metadata !14412, metadata !DIExpression()), !dbg !14413
  store %struct.work_struct* %work, %struct.work_struct** %work.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.work_struct** %work.addr, metadata !14414, metadata !DIExpression()), !dbg !14415
  %0 = load %struct.workqueue_struct*, %struct.workqueue_struct** %wq.addr, align 8, !dbg !14416
  %1 = load %struct.work_struct*, %struct.work_struct** %work.addr, align 8, !dbg !14417
  %call = call zeroext i1 @queue_work_on(i32 1, %struct.workqueue_struct* %0, %struct.work_struct* %1) #12, !dbg !14418
  ret i1 %call, !dbg !14419
}

; Function Attrs: noredzone
declare dso_local zeroext i1 @queue_work_on(i32, %struct.workqueue_struct*, %struct.work_struct*) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.macb_dma_desc* @macb_tx_desc(%struct.macb_queue* %queue, i32 %index) #2 !dbg !14420 {
entry:
  %queue.addr = alloca %struct.macb_queue*, align 8
  %index.addr = alloca i32, align 4
  store %struct.macb_queue* %queue, %struct.macb_queue** %queue.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.macb_queue** %queue.addr, metadata !14423, metadata !DIExpression()), !dbg !14424
  store i32 %index, i32* %index.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %index.addr, metadata !14425, metadata !DIExpression()), !dbg !14426
  %0 = load %struct.macb_queue*, %struct.macb_queue** %queue.addr, align 8, !dbg !14427
  %bp = getelementptr inbounds %struct.macb_queue, %struct.macb_queue* %0, i32 0, i32 0, !dbg !14428
  %1 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !14428
  %2 = load i32, i32* %index.addr, align 4, !dbg !14429
  %call = call i32 @macb_tx_ring_wrap(%struct.macb* %1, i32 %2) #12, !dbg !14430
  store i32 %call, i32* %index.addr, align 4, !dbg !14431
  %3 = load %struct.macb_queue*, %struct.macb_queue** %queue.addr, align 8, !dbg !14432
  %bp1 = getelementptr inbounds %struct.macb_queue, %struct.macb_queue* %3, i32 0, i32 0, !dbg !14433
  %4 = load %struct.macb*, %struct.macb** %bp1, align 8, !dbg !14433
  %5 = load i32, i32* %index.addr, align 4, !dbg !14434
  %call2 = call i32 @macb_adj_dma_desc_idx(%struct.macb* %4, i32 %5) #12, !dbg !14435
  store i32 %call2, i32* %index.addr, align 4, !dbg !14436
  %6 = load %struct.macb_queue*, %struct.macb_queue** %queue.addr, align 8, !dbg !14437
  %tx_ring = getelementptr inbounds %struct.macb_queue, %struct.macb_queue* %6, i32 0, i32 13, !dbg !14438
  %7 = load %struct.macb_dma_desc*, %struct.macb_dma_desc** %tx_ring, align 8, !dbg !14438
  %8 = load i32, i32* %index.addr, align 4, !dbg !14439
  %idxprom = zext i32 %8 to i64, !dbg !14437
  %arrayidx = getelementptr %struct.macb_dma_desc, %struct.macb_dma_desc* %7, i64 %idxprom, !dbg !14437
  ret %struct.macb_dma_desc* %arrayidx, !dbg !14440
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.macb_tx_skb* @macb_tx_skb(%struct.macb_queue* %queue, i32 %index) #2 !dbg !14441 {
entry:
  %queue.addr = alloca %struct.macb_queue*, align 8
  %index.addr = alloca i32, align 4
  store %struct.macb_queue* %queue, %struct.macb_queue** %queue.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.macb_queue** %queue.addr, metadata !14444, metadata !DIExpression()), !dbg !14445
  store i32 %index, i32* %index.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %index.addr, metadata !14446, metadata !DIExpression()), !dbg !14447
  %0 = load %struct.macb_queue*, %struct.macb_queue** %queue.addr, align 8, !dbg !14448
  %tx_skb = getelementptr inbounds %struct.macb_queue, %struct.macb_queue* %0, i32 0, i32 14, !dbg !14449
  %1 = load %struct.macb_tx_skb*, %struct.macb_tx_skb** %tx_skb, align 8, !dbg !14449
  %2 = load %struct.macb_queue*, %struct.macb_queue** %queue.addr, align 8, !dbg !14450
  %bp = getelementptr inbounds %struct.macb_queue, %struct.macb_queue* %2, i32 0, i32 0, !dbg !14451
  %3 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !14451
  %4 = load i32, i32* %index.addr, align 4, !dbg !14452
  %call = call i32 @macb_tx_ring_wrap(%struct.macb* %3, i32 %4) #12, !dbg !14453
  %idxprom = zext i32 %call to i64, !dbg !14448
  %arrayidx = getelementptr %struct.macb_tx_skb, %struct.macb_tx_skb* %1, i64 %idxprom, !dbg !14448
  ret %struct.macb_tx_skb* %arrayidx, !dbg !14454
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @skb_end_pointer(%struct.sk_buff* %skb) #2 !dbg !14455 {
entry:
  %skb.addr = alloca %struct.sk_buff*, align 8
  store %struct.sk_buff* %skb, %struct.sk_buff** %skb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.sk_buff** %skb.addr, metadata !14458, metadata !DIExpression()), !dbg !14459
  %0 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !14460
  %head = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %0, i32 0, i32 36, !dbg !14461
  %1 = load i8*, i8** %head, align 8, !dbg !14461
  %2 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !14462
  %end = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %2, i32 0, i32 35, !dbg !14463
  %3 = load i32, i32* %end, align 4, !dbg !14463
  %idx.ext = zext i32 %3 to i64, !dbg !14464
  %add.ptr = getelementptr i8, i8* %1, i64 %idx.ext, !dbg !14464
  ret i8* %add.ptr, !dbg !14465
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @gem_ptp_do_txstamp(%struct.macb_queue* %queue, %struct.sk_buff* %skb, %struct.macb_dma_desc* %desc) #2 !dbg !14466 {
entry:
  %retval = alloca i32, align 4
  %queue.addr = alloca %struct.macb_queue*, align 8
  %skb.addr = alloca %struct.sk_buff*, align 8
  %desc.addr = alloca %struct.macb_dma_desc*, align 8
  store %struct.macb_queue* %queue, %struct.macb_queue** %queue.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.macb_queue** %queue.addr, metadata !14469, metadata !DIExpression()), !dbg !14470
  store %struct.sk_buff* %skb, %struct.sk_buff** %skb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.sk_buff** %skb.addr, metadata !14471, metadata !DIExpression()), !dbg !14472
  store %struct.macb_dma_desc* %desc, %struct.macb_dma_desc** %desc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.macb_dma_desc** %desc.addr, metadata !14473, metadata !DIExpression()), !dbg !14474
  %0 = load %struct.macb_queue*, %struct.macb_queue** %queue.addr, align 8, !dbg !14475
  %bp = getelementptr inbounds %struct.macb_queue, %struct.macb_queue* %0, i32 0, i32 0, !dbg !14477
  %1 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !14477
  %tstamp_config = getelementptr inbounds %struct.macb, %struct.macb* %1, i32 0, i32 41, !dbg !14478
  %tx_type = getelementptr inbounds %struct.hwtstamp_config, %struct.hwtstamp_config* %tstamp_config, i32 0, i32 1, !dbg !14479
  %2 = load i32, i32* %tx_type, align 4, !dbg !14479
  %cmp = icmp eq i32 %2, 0, !dbg !14480
  br i1 %cmp, label %if.then, label %if.end, !dbg !14481

if.then:                                          ; preds = %entry
  store i32 -524, i32* %retval, align 4, !dbg !14482
  br label %return, !dbg !14482

if.end:                                           ; preds = %entry
  %3 = load %struct.macb_queue*, %struct.macb_queue** %queue.addr, align 8, !dbg !14483
  %4 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !14484
  %5 = load %struct.macb_dma_desc*, %struct.macb_dma_desc** %desc.addr, align 8, !dbg !14485
  %call = call i32 @gem_ptp_txstamp(%struct.macb_queue* %3, %struct.sk_buff* %4, %struct.macb_dma_desc* %5) #12, !dbg !14486
  store i32 %call, i32* %retval, align 4, !dbg !14487
  br label %return, !dbg !14487

return:                                           ; preds = %if.end, %if.then
  %6 = load i32, i32* %retval, align 4, !dbg !14488
  ret i32 %6, !dbg !14488
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @macb_tx_unmap(%struct.macb* %bp, %struct.macb_tx_skb* %tx_skb) #2 !dbg !14489 {
entry:
  %bp.addr = alloca %struct.macb*, align 8
  %tx_skb.addr = alloca %struct.macb_tx_skb*, align 8
  store %struct.macb* %bp, %struct.macb** %bp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.macb** %bp.addr, metadata !14492, metadata !DIExpression()), !dbg !14493
  store %struct.macb_tx_skb* %tx_skb, %struct.macb_tx_skb** %tx_skb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.macb_tx_skb** %tx_skb.addr, metadata !14494, metadata !DIExpression()), !dbg !14495
  %0 = load %struct.macb_tx_skb*, %struct.macb_tx_skb** %tx_skb.addr, align 8, !dbg !14496
  %mapping = getelementptr inbounds %struct.macb_tx_skb, %struct.macb_tx_skb* %0, i32 0, i32 1, !dbg !14498
  %1 = load i64, i64* %mapping, align 8, !dbg !14498
  %tobool = icmp ne i64 %1, 0, !dbg !14496
  br i1 %tobool, label %if.then, label %if.end9, !dbg !14499

if.then:                                          ; preds = %entry
  %2 = load %struct.macb_tx_skb*, %struct.macb_tx_skb** %tx_skb.addr, align 8, !dbg !14500
  %mapped_as_page = getelementptr inbounds %struct.macb_tx_skb, %struct.macb_tx_skb* %2, i32 0, i32 3, !dbg !14503
  %3 = load i8, i8* %mapped_as_page, align 8, !dbg !14503
  %tobool1 = trunc i8 %3 to i1, !dbg !14503
  br i1 %tobool1, label %if.then2, label %if.else, !dbg !14504

if.then2:                                         ; preds = %if.then
  %4 = load %struct.macb*, %struct.macb** %bp.addr, align 8, !dbg !14505
  %pdev = getelementptr inbounds %struct.macb, %struct.macb* %4, i32 0, i32 11, !dbg !14505
  %5 = load %struct.platform_device*, %struct.platform_device** %pdev, align 8, !dbg !14505
  %dev = getelementptr inbounds %struct.platform_device, %struct.platform_device* %5, i32 0, i32 3, !dbg !14505
  %6 = load %struct.macb_tx_skb*, %struct.macb_tx_skb** %tx_skb.addr, align 8, !dbg !14505
  %mapping3 = getelementptr inbounds %struct.macb_tx_skb, %struct.macb_tx_skb* %6, i32 0, i32 1, !dbg !14505
  %7 = load i64, i64* %mapping3, align 8, !dbg !14505
  %8 = load %struct.macb_tx_skb*, %struct.macb_tx_skb** %tx_skb.addr, align 8, !dbg !14505
  %size = getelementptr inbounds %struct.macb_tx_skb, %struct.macb_tx_skb* %8, i32 0, i32 2, !dbg !14505
  %9 = load i64, i64* %size, align 8, !dbg !14505
  call void @dma_unmap_page_attrs(%struct.device* %dev, i64 %7, i64 %9, i32 1, i64 0) #12, !dbg !14505
  br label %if.end, !dbg !14505

if.else:                                          ; preds = %if.then
  %10 = load %struct.macb*, %struct.macb** %bp.addr, align 8, !dbg !14506
  %pdev4 = getelementptr inbounds %struct.macb, %struct.macb* %10, i32 0, i32 11, !dbg !14506
  %11 = load %struct.platform_device*, %struct.platform_device** %pdev4, align 8, !dbg !14506
  %dev5 = getelementptr inbounds %struct.platform_device, %struct.platform_device* %11, i32 0, i32 3, !dbg !14506
  %12 = load %struct.macb_tx_skb*, %struct.macb_tx_skb** %tx_skb.addr, align 8, !dbg !14506
  %mapping6 = getelementptr inbounds %struct.macb_tx_skb, %struct.macb_tx_skb* %12, i32 0, i32 1, !dbg !14506
  %13 = load i64, i64* %mapping6, align 8, !dbg !14506
  %14 = load %struct.macb_tx_skb*, %struct.macb_tx_skb** %tx_skb.addr, align 8, !dbg !14506
  %size7 = getelementptr inbounds %struct.macb_tx_skb, %struct.macb_tx_skb* %14, i32 0, i32 2, !dbg !14506
  %15 = load i64, i64* %size7, align 8, !dbg !14506
  call void @dma_unmap_single_attrs(%struct.device* %dev5, i64 %13, i64 %15, i32 1, i64 0) #12, !dbg !14506
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then2
  %16 = load %struct.macb_tx_skb*, %struct.macb_tx_skb** %tx_skb.addr, align 8, !dbg !14507
  %mapping8 = getelementptr inbounds %struct.macb_tx_skb, %struct.macb_tx_skb* %16, i32 0, i32 1, !dbg !14508
  store i64 0, i64* %mapping8, align 8, !dbg !14509
  br label %if.end9, !dbg !14510

if.end9:                                          ; preds = %if.end, %entry
  %17 = load %struct.macb_tx_skb*, %struct.macb_tx_skb** %tx_skb.addr, align 8, !dbg !14511
  %skb = getelementptr inbounds %struct.macb_tx_skb, %struct.macb_tx_skb* %17, i32 0, i32 0, !dbg !14513
  %18 = load %struct.sk_buff*, %struct.sk_buff** %skb, align 8, !dbg !14513
  %tobool10 = icmp ne %struct.sk_buff* %18, null, !dbg !14511
  br i1 %tobool10, label %if.then11, label %if.end14, !dbg !14514

if.then11:                                        ; preds = %if.end9
  %19 = load %struct.macb_tx_skb*, %struct.macb_tx_skb** %tx_skb.addr, align 8, !dbg !14515
  %skb12 = getelementptr inbounds %struct.macb_tx_skb, %struct.macb_tx_skb* %19, i32 0, i32 0, !dbg !14517
  %20 = load %struct.sk_buff*, %struct.sk_buff** %skb12, align 8, !dbg !14517
  call void @dev_kfree_skb_any(%struct.sk_buff* %20) #12, !dbg !14518
  %21 = load %struct.macb_tx_skb*, %struct.macb_tx_skb** %tx_skb.addr, align 8, !dbg !14519
  %skb13 = getelementptr inbounds %struct.macb_tx_skb, %struct.macb_tx_skb* %21, i32 0, i32 0, !dbg !14520
  store %struct.sk_buff* null, %struct.sk_buff** %skb13, align 8, !dbg !14521
  br label %if.end14, !dbg !14522

if.end14:                                         ; preds = %if.then11, %if.end9
  ret void, !dbg !14523
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @__netif_subqueue_stopped(%struct.net_device* %dev, i16 zeroext %queue_index) #2 !dbg !14524 {
entry:
  %dev.addr = alloca %struct.net_device*, align 8
  %queue_index.addr = alloca i16, align 2
  %txq = alloca %struct.netdev_queue*, align 8
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !14527, metadata !DIExpression()), !dbg !14528
  store i16 %queue_index, i16* %queue_index.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %queue_index.addr, metadata !14529, metadata !DIExpression()), !dbg !14530
  call void @llvm.dbg.declare(metadata %struct.netdev_queue** %txq, metadata !14531, metadata !DIExpression()), !dbg !14532
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !14533
  %1 = load i16, i16* %queue_index.addr, align 2, !dbg !14534
  %conv = zext i16 %1 to i32, !dbg !14534
  %call = call %struct.netdev_queue* @netdev_get_tx_queue(%struct.net_device* %0, i32 %conv) #12, !dbg !14535
  store %struct.netdev_queue* %call, %struct.netdev_queue** %txq, align 8, !dbg !14532
  %2 = load %struct.netdev_queue*, %struct.netdev_queue** %txq, align 8, !dbg !14536
  %call1 = call zeroext i1 @netif_tx_queue_stopped(%struct.netdev_queue* %2) #12, !dbg !14537
  ret i1 %call1, !dbg !14538
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @netif_wake_subqueue(%struct.net_device* %dev, i16 zeroext %queue_index) #2 !dbg !14539 {
entry:
  %dev.addr = alloca %struct.net_device*, align 8
  %queue_index.addr = alloca i16, align 2
  %txq = alloca %struct.netdev_queue*, align 8
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !14542, metadata !DIExpression()), !dbg !14543
  store i16 %queue_index, i16* %queue_index.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %queue_index.addr, metadata !14544, metadata !DIExpression()), !dbg !14545
  call void @llvm.dbg.declare(metadata %struct.netdev_queue** %txq, metadata !14546, metadata !DIExpression()), !dbg !14547
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !14548
  %1 = load i16, i16* %queue_index.addr, align 2, !dbg !14549
  %conv = zext i16 %1 to i32, !dbg !14549
  %call = call %struct.netdev_queue* @netdev_get_tx_queue(%struct.net_device* %0, i32 %conv) #12, !dbg !14550
  store %struct.netdev_queue* %call, %struct.netdev_queue** %txq, align 8, !dbg !14547
  %2 = load %struct.netdev_queue*, %struct.netdev_queue** %txq, align 8, !dbg !14551
  call void @netif_tx_wake_queue(%struct.netdev_queue* %2) #12, !dbg !14552
  ret void, !dbg !14553
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @macb_tx_ring_wrap(%struct.macb* %bp, i32 %index) #2 !dbg !14554 {
entry:
  %bp.addr = alloca %struct.macb*, align 8
  %index.addr = alloca i32, align 4
  store %struct.macb* %bp, %struct.macb** %bp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.macb** %bp.addr, metadata !14557, metadata !DIExpression()), !dbg !14558
  store i32 %index, i32* %index.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %index.addr, metadata !14559, metadata !DIExpression()), !dbg !14560
  %0 = load i32, i32* %index.addr, align 4, !dbg !14561
  %1 = load %struct.macb*, %struct.macb** %bp.addr, align 8, !dbg !14562
  %tx_ring_size = getelementptr inbounds %struct.macb, %struct.macb* %1, i32 0, i32 6, !dbg !14563
  %2 = load i32, i32* %tx_ring_size, align 4, !dbg !14563
  %sub = sub i32 %2, 1, !dbg !14564
  %and = and i32 %0, %sub, !dbg !14565
  ret i32 %and, !dbg !14566
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @macb_adj_dma_desc_idx(%struct.macb* %bp, i32 %desc_idx) #2 !dbg !14567 {
entry:
  %bp.addr = alloca %struct.macb*, align 8
  %desc_idx.addr = alloca i32, align 4
  store %struct.macb* %bp, %struct.macb** %bp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.macb** %bp.addr, metadata !14568, metadata !DIExpression()), !dbg !14569
  store i32 %desc_idx, i32* %desc_idx.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %desc_idx.addr, metadata !14570, metadata !DIExpression()), !dbg !14571
  %0 = load %struct.macb*, %struct.macb** %bp.addr, align 8, !dbg !14572
  %hw_dma_cap = getelementptr inbounds %struct.macb, %struct.macb* %0, i32 0, i32 35, !dbg !14573
  %1 = load i8, i8* %hw_dma_cap, align 8, !dbg !14573
  %conv = zext i8 %1 to i32, !dbg !14572
  switch i32 %conv, label %sw.default [
    i32 1, label %sw.bb
    i32 2, label %sw.bb
    i32 3, label %sw.bb1
  ], !dbg !14574

sw.bb:                                            ; preds = %entry, %entry
  %2 = load i32, i32* %desc_idx.addr, align 4, !dbg !14575
  %shl = shl i32 %2, 1, !dbg !14575
  store i32 %shl, i32* %desc_idx.addr, align 4, !dbg !14575
  br label %sw.epilog, !dbg !14577

sw.bb1:                                           ; preds = %entry
  %3 = load i32, i32* %desc_idx.addr, align 4, !dbg !14578
  %mul = mul i32 %3, 3, !dbg !14578
  store i32 %mul, i32* %desc_idx.addr, align 4, !dbg !14578
  br label %sw.epilog, !dbg !14579

sw.default:                                       ; preds = %entry
  br label %sw.epilog, !dbg !14580

sw.epilog:                                        ; preds = %sw.default, %sw.bb1, %sw.bb
  %4 = load i32, i32* %desc_idx.addr, align 4, !dbg !14581
  ret i32 %4, !dbg !14582
}

; Function Attrs: noredzone
declare dso_local i32 @gem_ptp_txstamp(%struct.macb_queue*, %struct.sk_buff*, %struct.macb_dma_desc*) #1

; Function Attrs: noredzone
declare dso_local void @dma_unmap_page_attrs(%struct.device*, i64, i64, i32, i64) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @dma_unmap_single_attrs(%struct.device* %dev, i64 %addr, i64 %size, i32 %dir, i64 %attrs) #2 !dbg !14583 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %addr.addr = alloca i64, align 8
  %size.addr = alloca i64, align 8
  %dir.addr = alloca i32, align 4
  %attrs.addr = alloca i64, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !14586, metadata !DIExpression()), !dbg !14587
  store i64 %addr, i64* %addr.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %addr.addr, metadata !14588, metadata !DIExpression()), !dbg !14589
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !14590, metadata !DIExpression()), !dbg !14591
  store i32 %dir, i32* %dir.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %dir.addr, metadata !14592, metadata !DIExpression()), !dbg !14593
  store i64 %attrs, i64* %attrs.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %attrs.addr, metadata !14594, metadata !DIExpression()), !dbg !14595
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !14596
  %1 = load i64, i64* %addr.addr, align 8, !dbg !14597
  %2 = load i64, i64* %size.addr, align 8, !dbg !14598
  %3 = load i32, i32* %dir.addr, align 4, !dbg !14599
  %4 = load i64, i64* %attrs.addr, align 8, !dbg !14600
  call void @dma_unmap_page_attrs(%struct.device* %0, i64 %1, i64 %2, i32 %3, i64 %4) #12, !dbg !14601
  ret void, !dbg !14602
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @dev_kfree_skb_any(%struct.sk_buff* %skb) #2 !dbg !14603 {
entry:
  %skb.addr = alloca %struct.sk_buff*, align 8
  store %struct.sk_buff* %skb, %struct.sk_buff** %skb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.sk_buff** %skb.addr, metadata !14604, metadata !DIExpression()), !dbg !14605
  %0 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !14606
  call void @__dev_kfree_skb_any(%struct.sk_buff* %0, i32 1) #12, !dbg !14607
  ret void, !dbg !14608
}

; Function Attrs: noredzone
declare dso_local void @__dev_kfree_skb_any(%struct.sk_buff*, i32) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.netdev_queue* @netdev_get_tx_queue(%struct.net_device* %dev, i32 %index) #2 !dbg !14609 {
entry:
  %dev.addr = alloca %struct.net_device*, align 8
  %index.addr = alloca i32, align 4
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !14612, metadata !DIExpression()), !dbg !14613
  store i32 %index, i32* %index.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %index.addr, metadata !14614, metadata !DIExpression()), !dbg !14615
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !14616
  %_tx = getelementptr inbounds %struct.net_device, %struct.net_device* %0, i32 0, i32 86, !dbg !14617
  %1 = load %struct.netdev_queue*, %struct.netdev_queue** %_tx, align 8, !dbg !14617
  %2 = load i32, i32* %index.addr, align 4, !dbg !14618
  %idxprom = zext i32 %2 to i64, !dbg !14616
  %arrayidx = getelementptr %struct.netdev_queue, %struct.netdev_queue* %1, i64 %idxprom, !dbg !14616
  ret %struct.netdev_queue* %arrayidx, !dbg !14619
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @netif_tx_queue_stopped(%struct.netdev_queue* %dev_queue) #2 !dbg !14620 {
entry:
  %dev_queue.addr = alloca %struct.netdev_queue*, align 8
  store %struct.netdev_queue* %dev_queue, %struct.netdev_queue** %dev_queue.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.netdev_queue** %dev_queue.addr, metadata !14625, metadata !DIExpression()), !dbg !14626
  %0 = load %struct.netdev_queue*, %struct.netdev_queue** %dev_queue.addr, align 8, !dbg !14627
  %state = getelementptr inbounds %struct.netdev_queue, %struct.netdev_queue* %0, i32 0, i32 10, !dbg !14628
  %call = call zeroext i1 @test_bit(i64 0, i64* %state) #12, !dbg !14629
  ret i1 %call, !dbg !14630
}

; Function Attrs: noredzone
declare dso_local void @netif_tx_wake_queue(%struct.netdev_queue*) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @test_and_set_bit(i64 %nr, i64* %addr) #2 !dbg !14631 {
entry:
  %nr.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %nr.addr.i, metadata !14636, metadata !DIExpression()), !dbg !14638
  %addr.addr.i = alloca i64*, align 8
  call void @llvm.dbg.declare(metadata i64** %addr.addr.i, metadata !14640, metadata !DIExpression()), !dbg !14641
  %c.i = alloca i8, align 1
  call void @llvm.dbg.declare(metadata i8* %c.i, metadata !14642, metadata !DIExpression()), !dbg !14644
  %tmp.i = alloca i8, align 1
  %v.addr.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %v.addr.i, metadata !11628, metadata !DIExpression()), !dbg !14645
  %size.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i, metadata !11638, metadata !DIExpression()), !dbg !14647
  %nr.addr = alloca i64, align 8
  %addr.addr = alloca i64*, align 8
  store i64 %nr, i64* %nr.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %nr.addr, metadata !14648, metadata !DIExpression()), !dbg !14649
  store i64* %addr, i64** %addr.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %addr.addr, metadata !14650, metadata !DIExpression()), !dbg !14651
  %0 = load i64*, i64** %addr.addr, align 8, !dbg !14652
  %1 = load i64, i64* %nr.addr, align 8, !dbg !14653
  %div = sdiv i64 %1, 64, !dbg !14653
  %add.ptr = getelementptr i64, i64* %0, i64 %div, !dbg !14654
  %2 = bitcast i64* %add.ptr to i8*, !dbg !14652
  store i8* %2, i8** %v.addr.i, align 8
  store i64 8, i64* %size.addr.i, align 8
  %3 = load i8*, i8** %v.addr.i, align 8, !dbg !14655
  %4 = load i64, i64* %size.addr.i, align 8, !dbg !14656
  %conv.i = trunc i64 %4 to i32, !dbg !14656
  %call.i = call zeroext i1 @kasan_check_write(i8* %3, i32 %conv.i) #14, !dbg !14657
  %5 = load i8*, i8** %v.addr.i, align 8, !dbg !14658
  %6 = load i64, i64* %size.addr.i, align 8, !dbg !14658
  call void @kcsan_check_access(i8* %5, i64 %6, i32 7) #14, !dbg !14658
  %7 = load i64, i64* %nr.addr, align 8, !dbg !14659
  %8 = load i64*, i64** %addr.addr, align 8, !dbg !14660
  store i64 %7, i64* %nr.addr.i, align 8
  store i64* %8, i64** %addr.addr.i, align 8
  %9 = load i64*, i64** %addr.addr.i, align 8, !dbg !14644
  %10 = load i64, i64* %nr.addr.i, align 8, !dbg !14644
  %11 = call i8 asm sideeffect " btsq  $2, $0\0A\09/* output condition code c*/\0A", "=*m,={@ccc},Ir,*m,~{memory},~{dirflag},~{fpsr},~{flags}"(i64* %9, i64 %10, i64* %9) #8, !dbg !14644, !srcloc !14661
  store i8 %11, i8* %c.i, align 1, !dbg !14644
  %12 = load i8, i8* %c.i, align 1, !dbg !14644
  %tobool.i = trunc i8 %12 to i1, !dbg !14644
  %frombool.i = zext i1 %tobool.i to i8, !dbg !14644
  store i8 %frombool.i, i8* %tmp.i, align 1, !dbg !14644
  %13 = load i8, i8* %tmp.i, align 1, !dbg !14644
  %tobool1.i = trunc i8 %13 to i1, !dbg !14644
  ret i1 %tobool1.i, !dbg !14662
}

; Function Attrs: noredzone
declare dso_local void @__tasklet_schedule(%struct.tasklet_struct*) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @kasan_check_write(i8* %p, i32 %size) #2 !dbg !14663 {
entry:
  %p.addr = alloca i8*, align 8
  %size.addr = alloca i32, align 4
  store i8* %p, i8** %p.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %p.addr, metadata !14664, metadata !DIExpression()), !dbg !14665
  store i32 %size, i32* %size.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %size.addr, metadata !14666, metadata !DIExpression()), !dbg !14667
  ret i1 true, !dbg !14668
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @arch_local_irq_save() #2 !dbg !14669 {
entry:
  %f = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %f, metadata !14673, metadata !DIExpression()), !dbg !14674
  %call = call i64 @arch_local_save_flags() #12, !dbg !14675
  store i64 %call, i64* %f, align 8, !dbg !14676
  call void @arch_local_irq_disable() #12, !dbg !14677
  %0 = load i64, i64* %f, align 8, !dbg !14678
  ret i64 %0, !dbg !14679
}

; Function Attrs: noredzone
declare dso_local void @netif_tx_stop_all_queues(%struct.net_device*) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @macb_halt_tx(%struct.macb* %bp) #2 !dbg !14680 {
entry:
  %retval.i = alloca i64, align 8
  %u.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %u.addr.i, metadata !14681, metadata !DIExpression()), !dbg !14686
  %retval = alloca i32, align 4
  %bp.addr = alloca %struct.macb*, align 8
  %halt_time = alloca i64, align 8
  %timeout = alloca i64, align 8
  %status = alloca i32, align 4
  store %struct.macb* %bp, %struct.macb** %bp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.macb** %bp.addr, metadata !14688, metadata !DIExpression()), !dbg !14689
  call void @llvm.dbg.declare(metadata i64* %halt_time, metadata !14690, metadata !DIExpression()), !dbg !14691
  call void @llvm.dbg.declare(metadata i64* %timeout, metadata !14692, metadata !DIExpression()), !dbg !14693
  call void @llvm.dbg.declare(metadata i32* %status, metadata !14694, metadata !DIExpression()), !dbg !14695
  %0 = load %struct.macb*, %struct.macb** %bp.addr, align 8, !dbg !14696
  %macb_reg_writel = getelementptr inbounds %struct.macb, %struct.macb* %0, i32 0, i32 3, !dbg !14696
  %1 = load void (%struct.macb*, i32, i32)*, void (%struct.macb*, i32, i32)** %macb_reg_writel, align 8, !dbg !14696
  %2 = load %struct.macb*, %struct.macb** %bp.addr, align 8, !dbg !14696
  %3 = load %struct.macb*, %struct.macb** %bp.addr, align 8, !dbg !14696
  %macb_reg_readl = getelementptr inbounds %struct.macb, %struct.macb* %3, i32 0, i32 2, !dbg !14696
  %4 = load i32 (%struct.macb*, i32)*, i32 (%struct.macb*, i32)** %macb_reg_readl, align 8, !dbg !14696
  %5 = load %struct.macb*, %struct.macb** %bp.addr, align 8, !dbg !14696
  %call = call i32 %4(%struct.macb* %5, i32 0) #12, !dbg !14696
  %or = or i32 %call, 1024, !dbg !14696
  call void %1(%struct.macb* %2, i32 0, i32 %or) #12, !dbg !14696
  %6 = load volatile i64, i64* @jiffies, align 8, !dbg !14697
  store i32 1230, i32* %u.addr.i, align 4
  %7 = load i32, i32* %u.addr.i, align 4, !dbg !14698
  %8 = call i1 @llvm.is.constant.i32(i32 %7) #8, !dbg !14700
  br i1 %8, label %if.then.i, label %if.else.i, !dbg !14701

if.then.i:                                        ; preds = %entry
  %9 = load i32, i32* %u.addr.i, align 4, !dbg !14702
  %call.i = call i32 @jiffies_to_usecs(i64 4611686018427387902) #14, !dbg !14705
  %cmp.i = icmp ugt i32 %9, %call.i, !dbg !14706
  br i1 %cmp.i, label %if.then1.i, label %if.end.i, !dbg !14707

if.then1.i:                                       ; preds = %if.then.i
  store i64 4611686018427387902, i64* %retval.i, align 8, !dbg !14708
  br label %usecs_to_jiffies.exit, !dbg !14708

if.end.i:                                         ; preds = %if.then.i
  %10 = load i32, i32* %u.addr.i, align 4, !dbg !14709
  %call2.i = call i64 @_usecs_to_jiffies(i32 %10) #14, !dbg !14710
  store i64 %call2.i, i64* %retval.i, align 8, !dbg !14711
  br label %usecs_to_jiffies.exit, !dbg !14711

if.else.i:                                        ; preds = %entry
  %11 = load i32, i32* %u.addr.i, align 4, !dbg !14712
  %call3.i = call i64 @__usecs_to_jiffies(i32 %11) #14, !dbg !14714
  store i64 %call3.i, i64* %retval.i, align 8, !dbg !14715
  br label %usecs_to_jiffies.exit, !dbg !14715

usecs_to_jiffies.exit:                            ; preds = %if.then1.i, %if.end.i, %if.else.i
  %12 = load i64, i64* %retval.i, align 8, !dbg !14716
  %add = add i64 %6, %12, !dbg !14717
  store i64 %add, i64* %timeout, align 8, !dbg !14718
  br label %do.body, !dbg !14719

do.body:                                          ; preds = %do.cond, %usecs_to_jiffies.exit
  %13 = load volatile i64, i64* @jiffies, align 8, !dbg !14720
  store i64 %13, i64* %halt_time, align 8, !dbg !14722
  %14 = load %struct.macb*, %struct.macb** %bp.addr, align 8, !dbg !14723
  %macb_reg_readl2 = getelementptr inbounds %struct.macb, %struct.macb* %14, i32 0, i32 2, !dbg !14723
  %15 = load i32 (%struct.macb*, i32)*, i32 (%struct.macb*, i32)** %macb_reg_readl2, align 8, !dbg !14723
  %16 = load %struct.macb*, %struct.macb** %bp.addr, align 8, !dbg !14723
  %call3 = call i32 %15(%struct.macb* %16, i32 20) #12, !dbg !14723
  store i32 %call3, i32* %status, align 4, !dbg !14724
  %17 = load i32, i32* %status, align 4, !dbg !14725
  %and = and i32 %17, 8, !dbg !14727
  %tobool = icmp ne i32 %and, 0, !dbg !14727
  br i1 %tobool, label %if.end, label %if.then, !dbg !14728

if.then:                                          ; preds = %do.body
  store i32 0, i32* %retval, align 4, !dbg !14729
  br label %return, !dbg !14729

if.end:                                           ; preds = %do.body
  call void @__const_udelay(i64 1073750) #12, !dbg !14730
  br label %do.cond, !dbg !14735

do.cond:                                          ; preds = %if.end
  %18 = load i64, i64* %halt_time, align 8, !dbg !14736
  %19 = load i64, i64* %timeout, align 8, !dbg !14736
  %sub = sub i64 %18, %19, !dbg !14736
  %cmp = icmp slt i64 %sub, 0, !dbg !14736
  br i1 %cmp, label %do.body, label %do.end, !dbg !14735, !llvm.loop !14737

do.end:                                           ; preds = %do.cond
  store i32 -110, i32* %retval, align 4, !dbg !14739
  br label %return, !dbg !14739

return:                                           ; preds = %do.end, %if.then
  %20 = load i32, i32* %retval, align 4, !dbg !14740
  ret i32 %20, !dbg !14740
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @macb_set_addr(%struct.macb* %bp, %struct.macb_dma_desc* %desc, i64 %addr) #2 !dbg !14741 {
entry:
  %bp.addr = alloca %struct.macb*, align 8
  %desc.addr = alloca %struct.macb_dma_desc*, align 8
  %addr.addr = alloca i64, align 8
  %desc_64 = alloca %struct.macb_dma_desc_64*, align 8
  store %struct.macb* %bp, %struct.macb** %bp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.macb** %bp.addr, metadata !14744, metadata !DIExpression()), !dbg !14745
  store %struct.macb_dma_desc* %desc, %struct.macb_dma_desc** %desc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.macb_dma_desc** %desc.addr, metadata !14746, metadata !DIExpression()), !dbg !14747
  store i64 %addr, i64* %addr.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %addr.addr, metadata !14748, metadata !DIExpression()), !dbg !14749
  call void @llvm.dbg.declare(metadata %struct.macb_dma_desc_64** %desc_64, metadata !14750, metadata !DIExpression()), !dbg !14751
  %0 = load %struct.macb*, %struct.macb** %bp.addr, align 8, !dbg !14752
  %hw_dma_cap = getelementptr inbounds %struct.macb, %struct.macb* %0, i32 0, i32 35, !dbg !14754
  %1 = load i8, i8* %hw_dma_cap, align 8, !dbg !14754
  %conv = zext i8 %1 to i32, !dbg !14752
  %and = and i32 %conv, 1, !dbg !14755
  %tobool = icmp ne i32 %and, 0, !dbg !14755
  br i1 %tobool, label %if.then, label %if.end, !dbg !14756

if.then:                                          ; preds = %entry
  %2 = load %struct.macb*, %struct.macb** %bp.addr, align 8, !dbg !14757
  %3 = load %struct.macb_dma_desc*, %struct.macb_dma_desc** %desc.addr, align 8, !dbg !14759
  %call = call %struct.macb_dma_desc_64* @macb_64b_desc(%struct.macb* %2, %struct.macb_dma_desc* %3) #12, !dbg !14760
  store %struct.macb_dma_desc_64* %call, %struct.macb_dma_desc_64** %desc_64, align 8, !dbg !14761
  %4 = load i64, i64* %addr.addr, align 8, !dbg !14762
  %shr = lshr i64 %4, 16, !dbg !14762
  %shr1 = lshr i64 %shr, 16, !dbg !14762
  %conv2 = trunc i64 %shr1 to i32, !dbg !14762
  %5 = load %struct.macb_dma_desc_64*, %struct.macb_dma_desc_64** %desc_64, align 8, !dbg !14763
  %addrh = getelementptr inbounds %struct.macb_dma_desc_64, %struct.macb_dma_desc_64* %5, i32 0, i32 0, !dbg !14764
  store i32 %conv2, i32* %addrh, align 4, !dbg !14765
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #8, !dbg !14766, !srcloc !14767
  br label %if.end, !dbg !14768

if.end:                                           ; preds = %if.then, %entry
  %6 = load i64, i64* %addr.addr, align 8, !dbg !14769
  %and3 = and i64 %6, 4294967295, !dbg !14769
  %conv4 = trunc i64 %and3 to i32, !dbg !14769
  %7 = load %struct.macb_dma_desc*, %struct.macb_dma_desc** %desc.addr, align 8, !dbg !14770
  %addr5 = getelementptr inbounds %struct.macb_dma_desc, %struct.macb_dma_desc* %7, i32 0, i32 0, !dbg !14771
  store i32 %conv4, i32* %addr5, align 4, !dbg !14772
  ret void, !dbg !14773
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @netif_tx_start_all_queues(%struct.net_device* %dev) #2 !dbg !14774 {
entry:
  %dev_queue.addr.i = alloca %struct.netdev_queue*, align 8
  call void @llvm.dbg.declare(metadata %struct.netdev_queue** %dev_queue.addr.i, metadata !14775, metadata !DIExpression()), !dbg !14779
  %dev.addr = alloca %struct.net_device*, align 8
  %i = alloca i32, align 4
  %txq = alloca %struct.netdev_queue*, align 8
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !14784, metadata !DIExpression()), !dbg !14785
  call void @llvm.dbg.declare(metadata i32* %i, metadata !14786, metadata !DIExpression()), !dbg !14787
  store i32 0, i32* %i, align 4, !dbg !14788
  br label %for.cond, !dbg !14789

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4, !dbg !14790
  %1 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !14791
  %num_tx_queues = getelementptr inbounds %struct.net_device, %struct.net_device* %1, i32 0, i32 87, !dbg !14792
  %2 = load i32, i32* %num_tx_queues, align 8, !dbg !14792
  %cmp = icmp ult i32 %0, %2, !dbg !14793
  br i1 %cmp, label %for.body, label %for.end, !dbg !14794

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.netdev_queue** %txq, metadata !14795, metadata !DIExpression()), !dbg !14796
  %3 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !14797
  %4 = load i32, i32* %i, align 4, !dbg !14798
  %call = call %struct.netdev_queue* @netdev_get_tx_queue(%struct.net_device* %3, i32 %4) #12, !dbg !14799
  store %struct.netdev_queue* %call, %struct.netdev_queue** %txq, align 8, !dbg !14796
  %5 = load %struct.netdev_queue*, %struct.netdev_queue** %txq, align 8, !dbg !14800
  store %struct.netdev_queue* %5, %struct.netdev_queue** %dev_queue.addr.i, align 8
  %6 = load %struct.netdev_queue*, %struct.netdev_queue** %dev_queue.addr.i, align 8, !dbg !14801
  %state.i = getelementptr inbounds %struct.netdev_queue, %struct.netdev_queue* %6, i32 0, i32 10, !dbg !14802
  call void @clear_bit(i64 0, i64* %state.i) #14, !dbg !14803
  br label %for.inc, !dbg !14804

for.inc:                                          ; preds = %for.body
  %7 = load i32, i32* %i, align 4, !dbg !14805
  %inc = add i32 %7, 1, !dbg !14805
  store i32 %inc, i32* %i, align 4, !dbg !14805
  br label %for.cond, !dbg !14806, !llvm.loop !14807

for.end:                                          ; preds = %for.cond
  ret void, !dbg !14809
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @arch_local_save_flags() #2 !dbg !14810 {
entry:
  %__ret = alloca i64, align 8
  %__edi = alloca i64, align 8
  %__esi = alloca i64, align 8
  %__edx = alloca i64, align 8
  %__ecx = alloca i64, align 8
  %__eax = alloca i64, align 8
  %__mask = alloca i64, align 8
  %tmp = alloca i64, align 8
  %tmp2 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %__ret, metadata !14811, metadata !DIExpression()), !dbg !14813
  call void @llvm.dbg.declare(metadata i64* %__edi, metadata !14814, metadata !DIExpression()), !dbg !14813
  %0 = load i64, i64* %__edi, align 8, !dbg !14813
  store i64 %0, i64* %__edi, align 8, !dbg !14813
  call void @llvm.dbg.declare(metadata i64* %__esi, metadata !14815, metadata !DIExpression()), !dbg !14813
  %1 = load i64, i64* %__esi, align 8, !dbg !14813
  store i64 %1, i64* %__esi, align 8, !dbg !14813
  call void @llvm.dbg.declare(metadata i64* %__edx, metadata !14816, metadata !DIExpression()), !dbg !14813
  %2 = load i64, i64* %__edx, align 8, !dbg !14813
  store i64 %2, i64* %__edx, align 8, !dbg !14813
  call void @llvm.dbg.declare(metadata i64* %__ecx, metadata !14817, metadata !DIExpression()), !dbg !14813
  %3 = load i64, i64* %__ecx, align 8, !dbg !14813
  store i64 %3, i64* %__ecx, align 8, !dbg !14813
  call void @llvm.dbg.declare(metadata i64* %__eax, metadata !14818, metadata !DIExpression()), !dbg !14813
  %4 = load i64, i64* %__eax, align 8, !dbg !14813
  store i64 %4, i64* %__eax, align 8, !dbg !14813
  %5 = load i8*, i8** getelementptr inbounds (%struct.paravirt_patch_template, %struct.paravirt_patch_template* @pv_ops, i32 0, i32 3, i32 0, i32 0), align 8, !dbg !14813
  %6 = call i64 @llvm.read_register.i64(metadata !11052), !dbg !14819
  %7 = call { i64, i64 } asm sideeffect "771:\0A\09999:\0A\09.pushsection .discard.retpoline_safe\0A\09 .quad  999b\0A\09.popsection\0A\09call *${3:c};\0A772:\0A.pushsection .parainstructions,\22a\22\0A .balign 8 \0A .quad  771b\0A  .byte ${2:c}\0A  .byte 772b-771b\0A  .short ${4:c}\0A.popsection\0A", "={ax},={rsp},i,i,i,1,~{memory},~{cc},~{dirflag},~{fpsr},~{flags}"(i64 36, i8** getelementptr inbounds (%struct.paravirt_patch_template, %struct.paravirt_patch_template* @pv_ops, i32 0, i32 3, i32 0, i32 0), i32 1, i64 %6) #8, !dbg !14819, !srcloc !14822
  %asmresult = extractvalue { i64, i64 } %7, 0, !dbg !14819
  %asmresult1 = extractvalue { i64, i64 } %7, 1, !dbg !14819
  store i64 %asmresult, i64* %__eax, align 8, !dbg !14819
  call void @llvm.write_register.i64(metadata !11052, i64 %asmresult1), !dbg !14819
  %8 = load i64, i64* %__eax, align 8, !dbg !14819
  call void @llvm.dbg.declare(metadata i64* %__mask, metadata !14823, metadata !DIExpression()), !dbg !14825
  store i64 -1, i64* %__mask, align 8, !dbg !14825
  %9 = load i64, i64* %__mask, align 8, !dbg !14825
  store i64 %9, i64* %tmp, align 8, !dbg !14825
  %10 = load i64, i64* %tmp, align 8, !dbg !14825
  %and = and i64 %8, %10, !dbg !14819
  store i64 %and, i64* %__ret, align 8, !dbg !14819
  %11 = load i64, i64* %__ret, align 8, !dbg !14813
  store i64 %11, i64* %tmp2, align 8, !dbg !14826
  %12 = load i64, i64* %tmp2, align 8, !dbg !14813
  ret i64 %12, !dbg !14827
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @arch_local_irq_disable() #2 !dbg !14828 {
entry:
  %__edi = alloca i64, align 8
  %__esi = alloca i64, align 8
  %__edx = alloca i64, align 8
  %__ecx = alloca i64, align 8
  %__eax = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %__edi, metadata !14829, metadata !DIExpression()), !dbg !14831
  %0 = load i64, i64* %__edi, align 8, !dbg !14831
  store i64 %0, i64* %__edi, align 8, !dbg !14831
  call void @llvm.dbg.declare(metadata i64* %__esi, metadata !14832, metadata !DIExpression()), !dbg !14831
  %1 = load i64, i64* %__esi, align 8, !dbg !14831
  store i64 %1, i64* %__esi, align 8, !dbg !14831
  call void @llvm.dbg.declare(metadata i64* %__edx, metadata !14833, metadata !DIExpression()), !dbg !14831
  %2 = load i64, i64* %__edx, align 8, !dbg !14831
  store i64 %2, i64* %__edx, align 8, !dbg !14831
  call void @llvm.dbg.declare(metadata i64* %__ecx, metadata !14834, metadata !DIExpression()), !dbg !14831
  %3 = load i64, i64* %__ecx, align 8, !dbg !14831
  store i64 %3, i64* %__ecx, align 8, !dbg !14831
  call void @llvm.dbg.declare(metadata i64* %__eax, metadata !14835, metadata !DIExpression()), !dbg !14831
  %4 = load i64, i64* %__eax, align 8, !dbg !14831
  store i64 %4, i64* %__eax, align 8, !dbg !14831
  %5 = load i8*, i8** getelementptr inbounds (%struct.paravirt_patch_template, %struct.paravirt_patch_template* @pv_ops, i32 0, i32 3, i32 2, i32 0), align 8, !dbg !14831
  %6 = call i64 @llvm.read_register.i64(metadata !11052), !dbg !14831
  %7 = call { i64, i64 } asm sideeffect "771:\0A\09999:\0A\09.pushsection .discard.retpoline_safe\0A\09 .quad  999b\0A\09.popsection\0A\09call *${3:c};\0A772:\0A.pushsection .parainstructions,\22a\22\0A .balign 8 \0A .quad  771b\0A  .byte ${2:c}\0A  .byte 772b-771b\0A  .short ${4:c}\0A.popsection\0A", "={ax},={rsp},i,i,i,1,~{memory},~{cc},~{dirflag},~{fpsr},~{flags}"(i64 38, i8** getelementptr inbounds (%struct.paravirt_patch_template, %struct.paravirt_patch_template* @pv_ops, i32 0, i32 3, i32 2, i32 0), i32 1, i64 %6) #8, !dbg !14831, !srcloc !14836
  %asmresult = extractvalue { i64, i64 } %7, 0, !dbg !14831
  %asmresult1 = extractvalue { i64, i64 } %7, 1, !dbg !14831
  store i64 %asmresult, i64* %__eax, align 8, !dbg !14831
  call void @llvm.write_register.i64(metadata !11052, i64 %asmresult1), !dbg !14831
  ret void, !dbg !14837
}

; Function Attrs: nounwind readonly
declare i64 @llvm.read_register.i64(metadata) #7

; Function Attrs: nounwind
declare void @llvm.write_register.i64(metadata, i64) #8

; Function Attrs: noredzone
declare dso_local void @__const_udelay(i64) #1

; Function Attrs: nounwind readnone willreturn
declare i1 @llvm.is.constant.i32(i32) #6

; Function Attrs: noredzone
declare dso_local i32 @jiffies_to_usecs(i64) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @_usecs_to_jiffies(i32 %u) #2 !dbg !14838 {
entry:
  %u.addr = alloca i32, align 4
  store i32 %u, i32* %u.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %u.addr, metadata !14839, metadata !DIExpression()), !dbg !14840
  %0 = load i32, i32* %u.addr, align 4, !dbg !14841
  %conv = zext i32 %0 to i64, !dbg !14841
  %add = add i64 %conv, 4000, !dbg !14842
  %sub = sub i64 %add, 1, !dbg !14843
  %div = sdiv i64 %sub, 4000, !dbg !14844
  ret i64 %div, !dbg !14845
}

; Function Attrs: noredzone
declare dso_local i64 @__usecs_to_jiffies(i32) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.macb_dma_desc_64* @macb_64b_desc(%struct.macb* %bp, %struct.macb_dma_desc* %desc) #2 !dbg !14846 {
entry:
  %bp.addr = alloca %struct.macb*, align 8
  %desc.addr = alloca %struct.macb_dma_desc*, align 8
  store %struct.macb* %bp, %struct.macb** %bp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.macb** %bp.addr, metadata !14849, metadata !DIExpression()), !dbg !14850
  store %struct.macb_dma_desc* %desc, %struct.macb_dma_desc** %desc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.macb_dma_desc** %desc.addr, metadata !14851, metadata !DIExpression()), !dbg !14852
  %0 = load %struct.macb_dma_desc*, %struct.macb_dma_desc** %desc.addr, align 8, !dbg !14853
  %1 = bitcast %struct.macb_dma_desc* %0 to i8*, !dbg !14854
  %add.ptr = getelementptr i8, i8* %1, i64 8, !dbg !14855
  %2 = bitcast i8* %add.ptr to %struct.macb_dma_desc_64*, !dbg !14856
  ret %struct.macb_dma_desc_64* %2, !dbg !14857
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @clear_bit(i64 %nr, i64* %addr) #2 !dbg !14858 {
entry:
  %nr.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %nr.addr.i, metadata !14861, metadata !DIExpression()), !dbg !14863
  %addr.addr.i = alloca i64*, align 8
  call void @llvm.dbg.declare(metadata i64** %addr.addr.i, metadata !14865, metadata !DIExpression()), !dbg !14866
  %v.addr.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %v.addr.i, metadata !14867, metadata !DIExpression()), !dbg !14869
  %size.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i, metadata !14871, metadata !DIExpression()), !dbg !14872
  %nr.addr = alloca i64, align 8
  %addr.addr = alloca i64*, align 8
  store i64 %nr, i64* %nr.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %nr.addr, metadata !14873, metadata !DIExpression()), !dbg !14874
  store i64* %addr, i64** %addr.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %addr.addr, metadata !14875, metadata !DIExpression()), !dbg !14876
  %0 = load i64*, i64** %addr.addr, align 8, !dbg !14877
  %1 = load i64, i64* %nr.addr, align 8, !dbg !14878
  %div = sdiv i64 %1, 64, !dbg !14878
  %add.ptr = getelementptr i64, i64* %0, i64 %div, !dbg !14879
  %2 = bitcast i64* %add.ptr to i8*, !dbg !14877
  store i8* %2, i8** %v.addr.i, align 8
  store i64 8, i64* %size.addr.i, align 8
  %3 = load i8*, i8** %v.addr.i, align 8, !dbg !14880
  %4 = load i64, i64* %size.addr.i, align 8, !dbg !14881
  %conv.i = trunc i64 %4 to i32, !dbg !14881
  %call.i = call zeroext i1 @kasan_check_write(i8* %3, i32 %conv.i) #14, !dbg !14882
  %5 = load i8*, i8** %v.addr.i, align 8, !dbg !14883
  %6 = load i64, i64* %size.addr.i, align 8, !dbg !14883
  call void @kcsan_check_access(i8* %5, i64 %6, i32 5) #14, !dbg !14883
  %7 = load i64, i64* %nr.addr, align 8, !dbg !14884
  %8 = load i64*, i64** %addr.addr, align 8, !dbg !14885
  store i64 %7, i64* %nr.addr.i, align 8
  store i64* %8, i64** %addr.addr.i, align 8
  %9 = load i64, i64* %nr.addr.i, align 8, !dbg !14886
  %10 = call i1 @llvm.is.constant.i64(i64 %9) #8, !dbg !14888
  br i1 %10, label %if.then.i, label %if.else.i, !dbg !14889

if.then.i:                                        ; preds = %entry
  %11 = load i64*, i64** %addr.addr.i, align 8, !dbg !14890
  %12 = bitcast i64* %11 to i8*, !dbg !14890
  %13 = load i64, i64* %nr.addr.i, align 8, !dbg !14890
  %shr.i = ashr i64 %13, 3, !dbg !14890
  %add.ptr.i = getelementptr i8, i8* %12, i64 %shr.i, !dbg !14890
  %14 = load i64, i64* %nr.addr.i, align 8, !dbg !14892
  %and.i = and i64 %14, 7, !dbg !14892
  %sh_prom.i = trunc i64 %and.i to i32, !dbg !14892
  %shl.i = shl i32 1, %sh_prom.i, !dbg !14892
  %neg.i = xor i32 %shl.i, -1, !dbg !14893
  call void asm sideeffect "andb ${1:b},$0", "=*m,iq,*m,~{dirflag},~{fpsr},~{flags}"(i8* %add.ptr.i, i32 %neg.i, i8* %add.ptr.i) #8, !dbg !14894, !srcloc !14895
  br label %arch_clear_bit.exit, !dbg !14896

if.else.i:                                        ; preds = %entry
  %15 = load i64*, i64** %addr.addr.i, align 8, !dbg !14897
  %16 = load i64, i64* %nr.addr.i, align 8, !dbg !14899
  call void asm sideeffect " btrq  $1,$0", "*m,Ir,~{memory},~{dirflag},~{fpsr},~{flags}"(i64* %15, i64 %16) #8, !dbg !14900, !srcloc !14901
  br label %arch_clear_bit.exit

arch_clear_bit.exit:                              ; preds = %if.then.i, %if.else.i
  ret void, !dbg !14902
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @arch_local_irq_restore(i64 %f) #2 !dbg !14903 {
entry:
  %f.addr = alloca i64, align 8
  %__edi = alloca i64, align 8
  %__esi = alloca i64, align 8
  %__edx = alloca i64, align 8
  %__ecx = alloca i64, align 8
  %__eax = alloca i64, align 8
  store i64 %f, i64* %f.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %f.addr, metadata !14904, metadata !DIExpression()), !dbg !14905
  call void @llvm.dbg.declare(metadata i64* %__edi, metadata !14906, metadata !DIExpression()), !dbg !14908
  %0 = load i64, i64* %__edi, align 8, !dbg !14908
  store i64 %0, i64* %__edi, align 8, !dbg !14908
  call void @llvm.dbg.declare(metadata i64* %__esi, metadata !14909, metadata !DIExpression()), !dbg !14908
  %1 = load i64, i64* %__esi, align 8, !dbg !14908
  store i64 %1, i64* %__esi, align 8, !dbg !14908
  call void @llvm.dbg.declare(metadata i64* %__edx, metadata !14910, metadata !DIExpression()), !dbg !14908
  %2 = load i64, i64* %__edx, align 8, !dbg !14908
  store i64 %2, i64* %__edx, align 8, !dbg !14908
  call void @llvm.dbg.declare(metadata i64* %__ecx, metadata !14911, metadata !DIExpression()), !dbg !14908
  %3 = load i64, i64* %__ecx, align 8, !dbg !14908
  store i64 %3, i64* %__ecx, align 8, !dbg !14908
  call void @llvm.dbg.declare(metadata i64* %__eax, metadata !14912, metadata !DIExpression()), !dbg !14908
  %4 = load i64, i64* %__eax, align 8, !dbg !14908
  store i64 %4, i64* %__eax, align 8, !dbg !14908
  %5 = load i8*, i8** getelementptr inbounds (%struct.paravirt_patch_template, %struct.paravirt_patch_template* @pv_ops, i32 0, i32 3, i32 1, i32 0), align 8, !dbg !14908
  %6 = call i64 @llvm.read_register.i64(metadata !11052), !dbg !14908
  %7 = load i64, i64* %f.addr, align 8, !dbg !14908
  %8 = call { i64, i64 } asm sideeffect "771:\0A\09999:\0A\09.pushsection .discard.retpoline_safe\0A\09 .quad  999b\0A\09.popsection\0A\09call *${3:c};\0A772:\0A.pushsection .parainstructions,\22a\22\0A .balign 8 \0A .quad  771b\0A  .byte ${2:c}\0A  .byte 772b-771b\0A  .short ${4:c}\0A.popsection\0A", "={ax},={rsp},i,i,i,{di},1,~{memory},~{cc},~{dirflag},~{fpsr},~{flags}"(i64 37, i8** getelementptr inbounds (%struct.paravirt_patch_template, %struct.paravirt_patch_template* @pv_ops, i32 0, i32 3, i32 1, i32 0), i32 1, i64 %7, i64 %6) #8, !dbg !14908, !srcloc !14913
  %asmresult = extractvalue { i64, i64 } %8, 0, !dbg !14908
  %asmresult1 = extractvalue { i64, i64 } %8, 1, !dbg !14908
  store i64 %asmresult, i64* %__eax, align 8, !dbg !14908
  call void @llvm.write_register.i64(metadata !11052, i64 %asmresult1), !dbg !14908
  ret void, !dbg !14914
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @macb_open(%struct.net_device* %dev) #2 !dbg !14915 {
entry:
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.net_device*, align 8
  %bufsz = alloca i64, align 8
  %bp = alloca %struct.macb*, align 8
  %queue = alloca %struct.macb_queue*, align 8
  %q = alloca i32, align 4
  %err = alloca i32, align 4
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !14916, metadata !DIExpression()), !dbg !14917
  call void @llvm.dbg.declare(metadata i64* %bufsz, metadata !14918, metadata !DIExpression()), !dbg !14919
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !14920
  %mtu = getelementptr inbounds %struct.net_device, %struct.net_device* %0, i32 0, i32 44, !dbg !14921
  %1 = load i32, i32* %mtu, align 8, !dbg !14921
  %add = add i32 %1, 14, !dbg !14922
  %add1 = add i32 %add, 4, !dbg !14923
  %add2 = add i32 %add1, 0, !dbg !14924
  %conv = zext i32 %add2 to i64, !dbg !14920
  store i64 %conv, i64* %bufsz, align 8, !dbg !14919
  call void @llvm.dbg.declare(metadata %struct.macb** %bp, metadata !14925, metadata !DIExpression()), !dbg !14926
  %2 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !14927
  %call = call i8* @netdev_priv(%struct.net_device* %2) #12, !dbg !14928
  %3 = bitcast i8* %call to %struct.macb*, !dbg !14928
  store %struct.macb* %3, %struct.macb** %bp, align 8, !dbg !14926
  call void @llvm.dbg.declare(metadata %struct.macb_queue** %queue, metadata !14929, metadata !DIExpression()), !dbg !14930
  call void @llvm.dbg.declare(metadata i32* %q, metadata !14931, metadata !DIExpression()), !dbg !14932
  call void @llvm.dbg.declare(metadata i32* %err, metadata !14933, metadata !DIExpression()), !dbg !14934
  %4 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !14935
  %pdev = getelementptr inbounds %struct.macb, %struct.macb* %4, i32 0, i32 11, !dbg !14936
  %5 = load %struct.platform_device*, %struct.platform_device** %pdev, align 8, !dbg !14936
  %dev3 = getelementptr inbounds %struct.platform_device, %struct.platform_device* %5, i32 0, i32 3, !dbg !14937
  %call4 = call i32 @pm_runtime_get_sync(%struct.device* %dev3) #12, !dbg !14938
  store i32 %call4, i32* %err, align 4, !dbg !14939
  %6 = load i32, i32* %err, align 4, !dbg !14940
  %cmp = icmp slt i32 %6, 0, !dbg !14942
  br i1 %cmp, label %if.then, label %if.end, !dbg !14943

if.then:                                          ; preds = %entry
  br label %pm_exit, !dbg !14944

if.end:                                           ; preds = %entry
  %7 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !14945
  %8 = load i64, i64* %bufsz, align 8, !dbg !14946
  call void @macb_init_rx_buffer_size(%struct.macb* %7, i64 %8) #12, !dbg !14947
  %9 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !14948
  %call6 = call i32 @macb_alloc_consistent(%struct.macb* %9) #12, !dbg !14949
  store i32 %call6, i32* %err, align 4, !dbg !14950
  %10 = load i32, i32* %err, align 4, !dbg !14951
  %tobool = icmp ne i32 %10, 0, !dbg !14951
  br i1 %tobool, label %if.then7, label %if.end8, !dbg !14953

if.then7:                                         ; preds = %if.end
  %11 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !14954
  %12 = load i32, i32* %err, align 4, !dbg !14956
  call void (%struct.net_device*, i8*, ...) @netdev_err(%struct.net_device* %11, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.22, i64 0, i64 0), i32 %12) #13, !dbg !14957
  br label %pm_exit, !dbg !14958

if.end8:                                          ; preds = %if.end
  store i32 0, i32* %q, align 4, !dbg !14959
  %13 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !14961
  %queues = getelementptr inbounds %struct.macb, %struct.macb* %13, i32 0, i32 9, !dbg !14962
  %arraydecay = getelementptr inbounds [8 x %struct.macb_queue], [8 x %struct.macb_queue]* %queues, i64 0, i64 0, !dbg !14961
  store %struct.macb_queue* %arraydecay, %struct.macb_queue** %queue, align 8, !dbg !14963
  br label %for.cond, !dbg !14964

for.cond:                                         ; preds = %for.inc, %if.end8
  %14 = load i32, i32* %q, align 4, !dbg !14965
  %15 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !14967
  %num_queues = getelementptr inbounds %struct.macb, %struct.macb* %15, i32 0, i32 7, !dbg !14968
  %16 = load i32, i32* %num_queues, align 8, !dbg !14968
  %cmp9 = icmp ult i32 %14, %16, !dbg !14969
  br i1 %cmp9, label %for.body, label %for.end, !dbg !14970

for.body:                                         ; preds = %for.cond
  %17 = load %struct.macb_queue*, %struct.macb_queue** %queue, align 8, !dbg !14971
  %napi = getelementptr inbounds %struct.macb_queue, %struct.macb_queue* %17, i32 0, i32 24, !dbg !14972
  call void @napi_enable(%struct.napi_struct* %napi) #12, !dbg !14973
  br label %for.inc, !dbg !14973

for.inc:                                          ; preds = %for.body
  %18 = load i32, i32* %q, align 4, !dbg !14974
  %inc = add i32 %18, 1, !dbg !14974
  store i32 %inc, i32* %q, align 4, !dbg !14974
  %19 = load %struct.macb_queue*, %struct.macb_queue** %queue, align 8, !dbg !14975
  %incdec.ptr = getelementptr %struct.macb_queue, %struct.macb_queue* %19, i32 1, !dbg !14975
  store %struct.macb_queue* %incdec.ptr, %struct.macb_queue** %queue, align 8, !dbg !14975
  br label %for.cond, !dbg !14976, !llvm.loop !14977

for.end:                                          ; preds = %for.cond
  %20 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !14979
  call void @macb_init_hw(%struct.macb* %20) #12, !dbg !14980
  %21 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !14981
  %call11 = call i32 @macb_phylink_connect(%struct.macb* %21) #12, !dbg !14982
  store i32 %call11, i32* %err, align 4, !dbg !14983
  %22 = load i32, i32* %err, align 4, !dbg !14984
  %tobool12 = icmp ne i32 %22, 0, !dbg !14984
  br i1 %tobool12, label %if.then13, label %if.end14, !dbg !14986

if.then13:                                        ; preds = %for.end
  br label %reset_hw, !dbg !14987

if.end14:                                         ; preds = %for.end
  %23 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !14988
  call void @netif_tx_start_all_queues(%struct.net_device* %23) #12, !dbg !14989
  %24 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !14990
  %ptp_info = getelementptr inbounds %struct.macb, %struct.macb* %24, i32 0, i32 34, !dbg !14992
  %25 = load %struct.macb_ptp_info*, %struct.macb_ptp_info** %ptp_info, align 8, !dbg !14992
  %tobool15 = icmp ne %struct.macb_ptp_info* %25, null, !dbg !14990
  br i1 %tobool15, label %if.then16, label %if.end18, !dbg !14993

if.then16:                                        ; preds = %if.end14
  %26 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !14994
  %ptp_info17 = getelementptr inbounds %struct.macb, %struct.macb* %26, i32 0, i32 34, !dbg !14995
  %27 = load %struct.macb_ptp_info*, %struct.macb_ptp_info** %ptp_info17, align 8, !dbg !14995
  %ptp_init = getelementptr inbounds %struct.macb_ptp_info, %struct.macb_ptp_info* %27, i32 0, i32 0, !dbg !14996
  %28 = load void (%struct.net_device*)*, void (%struct.net_device*)** %ptp_init, align 8, !dbg !14996
  %29 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !14997
  call void %28(%struct.net_device* %29) #12, !dbg !14994
  br label %if.end18, !dbg !14994

if.end18:                                         ; preds = %if.then16, %if.end14
  store i32 0, i32* %retval, align 4, !dbg !14998
  br label %return, !dbg !14998

reset_hw:                                         ; preds = %if.then13
  call void @llvm.dbg.label(metadata !14999), !dbg !15000
  %30 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !15001
  call void @macb_reset_hw(%struct.macb* %30) #12, !dbg !15002
  store i32 0, i32* %q, align 4, !dbg !15003
  %31 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !15005
  %queues19 = getelementptr inbounds %struct.macb, %struct.macb* %31, i32 0, i32 9, !dbg !15006
  %arraydecay20 = getelementptr inbounds [8 x %struct.macb_queue], [8 x %struct.macb_queue]* %queues19, i64 0, i64 0, !dbg !15005
  store %struct.macb_queue* %arraydecay20, %struct.macb_queue** %queue, align 8, !dbg !15007
  br label %for.cond21, !dbg !15008

for.cond21:                                       ; preds = %for.inc27, %reset_hw
  %32 = load i32, i32* %q, align 4, !dbg !15009
  %33 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !15011
  %num_queues22 = getelementptr inbounds %struct.macb, %struct.macb* %33, i32 0, i32 7, !dbg !15012
  %34 = load i32, i32* %num_queues22, align 8, !dbg !15012
  %cmp23 = icmp ult i32 %32, %34, !dbg !15013
  br i1 %cmp23, label %for.body25, label %for.end30, !dbg !15014

for.body25:                                       ; preds = %for.cond21
  %35 = load %struct.macb_queue*, %struct.macb_queue** %queue, align 8, !dbg !15015
  %napi26 = getelementptr inbounds %struct.macb_queue, %struct.macb_queue* %35, i32 0, i32 24, !dbg !15016
  call void @napi_disable(%struct.napi_struct* %napi26) #12, !dbg !15017
  br label %for.inc27, !dbg !15017

for.inc27:                                        ; preds = %for.body25
  %36 = load i32, i32* %q, align 4, !dbg !15018
  %inc28 = add i32 %36, 1, !dbg !15018
  store i32 %inc28, i32* %q, align 4, !dbg !15018
  %37 = load %struct.macb_queue*, %struct.macb_queue** %queue, align 8, !dbg !15019
  %incdec.ptr29 = getelementptr %struct.macb_queue, %struct.macb_queue* %37, i32 1, !dbg !15019
  store %struct.macb_queue* %incdec.ptr29, %struct.macb_queue** %queue, align 8, !dbg !15019
  br label %for.cond21, !dbg !15020, !llvm.loop !15021

for.end30:                                        ; preds = %for.cond21
  %38 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !15023
  call void @macb_free_consistent(%struct.macb* %38) #12, !dbg !15024
  br label %pm_exit, !dbg !15024

pm_exit:                                          ; preds = %for.end30, %if.then7, %if.then
  call void @llvm.dbg.label(metadata !15025), !dbg !15026
  %39 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !15027
  %pdev31 = getelementptr inbounds %struct.macb, %struct.macb* %39, i32 0, i32 11, !dbg !15028
  %40 = load %struct.platform_device*, %struct.platform_device** %pdev31, align 8, !dbg !15028
  %dev32 = getelementptr inbounds %struct.platform_device, %struct.platform_device* %40, i32 0, i32 3, !dbg !15029
  %call33 = call i32 @pm_runtime_put_sync(%struct.device* %dev32) #12, !dbg !15030
  %41 = load i32, i32* %err, align 4, !dbg !15031
  store i32 %41, i32* %retval, align 4, !dbg !15032
  br label %return, !dbg !15032

return:                                           ; preds = %pm_exit, %if.end18
  %42 = load i32, i32* %retval, align 4, !dbg !15033
  ret i32 %42, !dbg !15033
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @macb_close(%struct.net_device* %dev) #2 !dbg !15034 {
entry:
  %lock.addr.i26 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i26, metadata !13124, metadata !DIExpression()), !dbg !15035
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !13130, metadata !DIExpression()), !dbg !15037
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !11065, metadata !DIExpression()), !dbg !15038
  %dev.addr = alloca %struct.net_device*, align 8
  %bp = alloca %struct.macb*, align 8
  %queue = alloca %struct.macb_queue*, align 8
  %flags = alloca i64, align 8
  %q = alloca i32, align 4
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__dummy7 = alloca i64, align 8
  %__dummy28 = alloca i64, align 8
  %tmp11 = alloca i32, align 4
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !15045, metadata !DIExpression()), !dbg !15046
  call void @llvm.dbg.declare(metadata %struct.macb** %bp, metadata !15047, metadata !DIExpression()), !dbg !15048
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !15049
  %call = call i8* @netdev_priv(%struct.net_device* %0) #12, !dbg !15050
  %1 = bitcast i8* %call to %struct.macb*, !dbg !15050
  store %struct.macb* %1, %struct.macb** %bp, align 8, !dbg !15048
  call void @llvm.dbg.declare(metadata %struct.macb_queue** %queue, metadata !15051, metadata !DIExpression()), !dbg !15052
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !15053, metadata !DIExpression()), !dbg !15054
  call void @llvm.dbg.declare(metadata i32* %q, metadata !15055, metadata !DIExpression()), !dbg !15056
  %2 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !15057
  call void @netif_tx_stop_all_queues(%struct.net_device* %2) #12, !dbg !15058
  store i32 0, i32* %q, align 4, !dbg !15059
  %3 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !15061
  %queues = getelementptr inbounds %struct.macb, %struct.macb* %3, i32 0, i32 9, !dbg !15062
  %arraydecay = getelementptr inbounds [8 x %struct.macb_queue], [8 x %struct.macb_queue]* %queues, i64 0, i64 0, !dbg !15061
  store %struct.macb_queue* %arraydecay, %struct.macb_queue** %queue, align 8, !dbg !15063
  br label %for.cond, !dbg !15064

for.cond:                                         ; preds = %for.inc, %entry
  %4 = load i32, i32* %q, align 4, !dbg !15065
  %5 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !15067
  %num_queues = getelementptr inbounds %struct.macb, %struct.macb* %5, i32 0, i32 7, !dbg !15068
  %6 = load i32, i32* %num_queues, align 8, !dbg !15068
  %cmp = icmp ult i32 %4, %6, !dbg !15069
  br i1 %cmp, label %for.body, label %for.end, !dbg !15070

for.body:                                         ; preds = %for.cond
  %7 = load %struct.macb_queue*, %struct.macb_queue** %queue, align 8, !dbg !15071
  %napi = getelementptr inbounds %struct.macb_queue, %struct.macb_queue* %7, i32 0, i32 24, !dbg !15072
  call void @napi_disable(%struct.napi_struct* %napi) #12, !dbg !15073
  br label %for.inc, !dbg !15073

for.inc:                                          ; preds = %for.body
  %8 = load i32, i32* %q, align 4, !dbg !15074
  %inc = add i32 %8, 1, !dbg !15074
  store i32 %inc, i32* %q, align 4, !dbg !15074
  %9 = load %struct.macb_queue*, %struct.macb_queue** %queue, align 8, !dbg !15075
  %incdec.ptr = getelementptr %struct.macb_queue, %struct.macb_queue* %9, i32 1, !dbg !15075
  store %struct.macb_queue* %incdec.ptr, %struct.macb_queue** %queue, align 8, !dbg !15075
  br label %for.cond, !dbg !15076, !llvm.loop !15077

for.end:                                          ; preds = %for.cond
  %10 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !15079
  %phylink = getelementptr inbounds %struct.macb, %struct.macb* %10, i32 0, i32 21, !dbg !15080
  %11 = load %struct.phylink*, %struct.phylink** %phylink, align 8, !dbg !15080
  call void @phylink_stop(%struct.phylink* %11) #12, !dbg !15081
  %12 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !15082
  %phylink1 = getelementptr inbounds %struct.macb, %struct.macb* %12, i32 0, i32 21, !dbg !15083
  %13 = load %struct.phylink*, %struct.phylink** %phylink1, align 8, !dbg !15083
  call void @phylink_disconnect_phy(%struct.phylink* %13) #12, !dbg !15084
  br label %do.body, !dbg !15085

do.body:                                          ; preds = %for.end
  br label %do.body2, !dbg !15086

do.body2:                                         ; preds = %do.body
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !15087, metadata !DIExpression()), !dbg !15089
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !15090, metadata !DIExpression()), !dbg !15089
  %cmp3 = icmp eq i64* %__dummy, %__dummy2, !dbg !15089
  %conv = zext i1 %cmp3 to i32, !dbg !15089
  store i32 1, i32* %tmp, align 4, !dbg !15089
  %14 = load i32, i32* %tmp, align 4, !dbg !15089
  br label %do.body4, !dbg !15091

do.body4:                                         ; preds = %do.body2
  br label %do.body5, !dbg !15092

do.body5:                                         ; preds = %do.body4
  br label %do.body6, !dbg !15093

do.body6:                                         ; preds = %do.body5
  call void @llvm.dbg.declare(metadata i64* %__dummy7, metadata !15095, metadata !DIExpression()), !dbg !15098
  call void @llvm.dbg.declare(metadata i64* %__dummy28, metadata !15099, metadata !DIExpression()), !dbg !15098
  %cmp9 = icmp eq i64* %__dummy7, %__dummy28, !dbg !15098
  %conv10 = zext i1 %cmp9 to i32, !dbg !15098
  store i32 1, i32* %tmp11, align 4, !dbg !15098
  %15 = load i32, i32* %tmp11, align 4, !dbg !15098
  %call12 = call i64 @arch_local_irq_save() #12, !dbg !15100
  store i64 %call12, i64* %flags, align 8, !dbg !15100
  br label %do.end, !dbg !15100

do.end:                                           ; preds = %do.body6
  br label %do.end13, !dbg !15093

do.end13:                                         ; preds = %do.end
  br label %do.body14, !dbg !15092

do.body14:                                        ; preds = %do.end13
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #8, !dbg !15101, !srcloc !15102
  br label %do.body15, !dbg !15101

do.body15:                                        ; preds = %do.body14
  %16 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !15103
  %lock = getelementptr inbounds %struct.macb, %struct.macb* %16, i32 0, i32 10, !dbg !15103
  store %struct.spinlock* %lock, %struct.spinlock** %lock.addr.i, align 8
  %17 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !15104
  %18 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %17, i32 0, i32 0, !dbg !15105
  %rlock.i = bitcast %union.anon.1* %18 to %struct.raw_spinlock*, !dbg !15105
  br label %do.end17, !dbg !15103

do.end17:                                         ; preds = %do.body15
  br label %do.end18, !dbg !15101

do.end18:                                         ; preds = %do.end17
  br label %do.end19, !dbg !15092

do.end19:                                         ; preds = %do.end18
  br label %do.end20, !dbg !15091

do.end20:                                         ; preds = %do.end19
  br label %do.end21, !dbg !15086

do.end21:                                         ; preds = %do.end20
  %19 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !15106
  call void @macb_reset_hw(%struct.macb* %19) #12, !dbg !15107
  %20 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !15108
  call void @netif_carrier_off(%struct.net_device* %20) #12, !dbg !15109
  %21 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !15110
  %lock22 = getelementptr inbounds %struct.macb, %struct.macb* %21, i32 0, i32 10, !dbg !15111
  %22 = load i64, i64* %flags, align 8, !dbg !15112
  store %struct.spinlock* %lock22, %struct.spinlock** %lock.addr.i26, align 8
  store i64 %22, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !743, metadata !13334, metadata !DIExpression()) #8, !dbg !15113
  call void @llvm.dbg.declare(metadata !743, metadata !13338, metadata !DIExpression()) #8, !dbg !15113
  store i32 1, i32* %tmp.i, align 4, !dbg !15113
  %23 = load i32, i32* %tmp.i, align 4, !dbg !15113
  call void @llvm.dbg.declare(metadata !743, metadata !13339, metadata !DIExpression()) #8, !dbg !15114
  call void @llvm.dbg.declare(metadata !743, metadata !13345, metadata !DIExpression()) #8, !dbg !15114
  store i32 1, i32* %tmp8.i, align 4, !dbg !15114
  %24 = load i32, i32* %tmp8.i, align 4, !dbg !15114
  %25 = load i64, i64* %flags.addr.i, align 8, !dbg !15115
  call void @arch_local_irq_restore(i64 %25) #14, !dbg !15115
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #8, !dbg !15116, !srcloc !13349
  %26 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i26, align 8, !dbg !15117
  %27 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %26, i32 0, i32 0, !dbg !15117
  %rlock.i27 = bitcast %union.anon.1* %27 to %struct.raw_spinlock*, !dbg !15117
  %28 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !15118
  call void @macb_free_consistent(%struct.macb* %28) #12, !dbg !15119
  %29 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !15120
  %ptp_info = getelementptr inbounds %struct.macb, %struct.macb* %29, i32 0, i32 34, !dbg !15122
  %30 = load %struct.macb_ptp_info*, %struct.macb_ptp_info** %ptp_info, align 8, !dbg !15122
  %tobool = icmp ne %struct.macb_ptp_info* %30, null, !dbg !15120
  br i1 %tobool, label %if.then, label %if.end, !dbg !15123

if.then:                                          ; preds = %do.end21
  %31 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !15124
  %ptp_info23 = getelementptr inbounds %struct.macb, %struct.macb* %31, i32 0, i32 34, !dbg !15125
  %32 = load %struct.macb_ptp_info*, %struct.macb_ptp_info** %ptp_info23, align 8, !dbg !15125
  %ptp_remove = getelementptr inbounds %struct.macb_ptp_info, %struct.macb_ptp_info* %32, i32 0, i32 1, !dbg !15126
  %33 = load void (%struct.net_device*)*, void (%struct.net_device*)** %ptp_remove, align 8, !dbg !15126
  %34 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !15127
  call void %33(%struct.net_device* %34) #12, !dbg !15124
  br label %if.end, !dbg !15124

if.end:                                           ; preds = %if.then, %do.end21
  %35 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !15128
  %pdev = getelementptr inbounds %struct.macb, %struct.macb* %35, i32 0, i32 11, !dbg !15129
  %36 = load %struct.platform_device*, %struct.platform_device** %pdev, align 8, !dbg !15129
  %dev24 = getelementptr inbounds %struct.platform_device, %struct.platform_device* %36, i32 0, i32 3, !dbg !15130
  %call25 = call i32 @pm_runtime_put(%struct.device* %dev24) #12, !dbg !15131
  ret i32 0, !dbg !15132
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @macb_start_xmit(%struct.sk_buff* %skb, %struct.net_device* %dev) #2 !dbg !15133 {
entry:
  %lock.addr.i115 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i115, metadata !13124, metadata !DIExpression()), !dbg !15134
  %flags.addr.i116 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i116, metadata !13130, metadata !DIExpression()), !dbg !15138
  %tmp.i117 = alloca i32, align 4
  %tmp8.i118 = alloca i32, align 4
  %lock.addr.i113 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i113, metadata !13124, metadata !DIExpression()), !dbg !15139
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !13130, metadata !DIExpression()), !dbg !15141
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !11065, metadata !DIExpression()), !dbg !15142
  %retval = alloca i32, align 4
  %skb.addr = alloca %struct.sk_buff*, align 8
  %dev.addr = alloca %struct.net_device*, align 8
  %queue_index = alloca i16, align 2
  %bp = alloca %struct.macb*, align 8
  %queue = alloca %struct.macb_queue*, align 8
  %flags = alloca i64, align 8
  %desc_cnt = alloca i32, align 4
  %nr_frags = alloca i32, align 4
  %frag_size = alloca i32, align 4
  %f = alloca i32, align 4
  %hdrlen = alloca i32, align 4
  %is_lso = alloca i8, align 1
  %ret = alloca i32, align 4
  %__UNIQUE_ID___x534 = alloca i32, align 4
  %__UNIQUE_ID___y535 = alloca i32, align 4
  %tmp = alloca i32, align 4
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp69 = alloca i32, align 4
  %__dummy73 = alloca i64, align 8
  %__dummy274 = alloca i64, align 8
  %tmp77 = alloca i32, align 4
  store %struct.sk_buff* %skb, %struct.sk_buff** %skb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.sk_buff** %skb.addr, metadata !15149, metadata !DIExpression()), !dbg !15150
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !15151, metadata !DIExpression()), !dbg !15152
  call void @llvm.dbg.declare(metadata i16* %queue_index, metadata !15153, metadata !DIExpression()), !dbg !15154
  %0 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !15155
  %call = call zeroext i16 @skb_get_queue_mapping(%struct.sk_buff* %0) #12, !dbg !15156
  store i16 %call, i16* %queue_index, align 2, !dbg !15154
  call void @llvm.dbg.declare(metadata %struct.macb** %bp, metadata !15157, metadata !DIExpression()), !dbg !15158
  %1 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !15159
  %call1 = call i8* @netdev_priv(%struct.net_device* %1) #12, !dbg !15160
  %2 = bitcast i8* %call1 to %struct.macb*, !dbg !15160
  store %struct.macb* %2, %struct.macb** %bp, align 8, !dbg !15158
  call void @llvm.dbg.declare(metadata %struct.macb_queue** %queue, metadata !15161, metadata !DIExpression()), !dbg !15162
  %3 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !15163
  %queues = getelementptr inbounds %struct.macb, %struct.macb* %3, i32 0, i32 9, !dbg !15164
  %4 = load i16, i16* %queue_index, align 2, !dbg !15165
  %idxprom = zext i16 %4 to i64, !dbg !15163
  %arrayidx = getelementptr [8 x %struct.macb_queue], [8 x %struct.macb_queue]* %queues, i64 0, i64 %idxprom, !dbg !15163
  store %struct.macb_queue* %arrayidx, %struct.macb_queue** %queue, align 8, !dbg !15162
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !15166, metadata !DIExpression()), !dbg !15167
  call void @llvm.dbg.declare(metadata i32* %desc_cnt, metadata !15168, metadata !DIExpression()), !dbg !15169
  call void @llvm.dbg.declare(metadata i32* %nr_frags, metadata !15170, metadata !DIExpression()), !dbg !15171
  call void @llvm.dbg.declare(metadata i32* %frag_size, metadata !15172, metadata !DIExpression()), !dbg !15173
  call void @llvm.dbg.declare(metadata i32* %f, metadata !15174, metadata !DIExpression()), !dbg !15175
  call void @llvm.dbg.declare(metadata i32* %hdrlen, metadata !15176, metadata !DIExpression()), !dbg !15177
  call void @llvm.dbg.declare(metadata i8* %is_lso, metadata !15178, metadata !DIExpression()), !dbg !15179
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !15180, metadata !DIExpression()), !dbg !15181
  store i32 0, i32* %ret, align 4, !dbg !15181
  %5 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !15182
  %call2 = call i32 @macb_clear_csum(%struct.sk_buff* %5) #12, !dbg !15184
  %tobool = icmp ne i32 %call2, 0, !dbg !15184
  br i1 %tobool, label %if.then, label %if.end, !dbg !15185

if.then:                                          ; preds = %entry
  %6 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !15186
  call void @dev_kfree_skb_any(%struct.sk_buff* %6) #12, !dbg !15188
  %7 = load i32, i32* %ret, align 4, !dbg !15189
  store i32 %7, i32* %retval, align 4, !dbg !15190
  br label %return, !dbg !15190

if.end:                                           ; preds = %entry
  %8 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !15191
  %call3 = call i32 @macb_pad_and_fcs(%struct.sk_buff** %skb.addr, %struct.net_device* %8) #12, !dbg !15193
  %tobool4 = icmp ne i32 %call3, 0, !dbg !15193
  br i1 %tobool4, label %if.then5, label %if.end6, !dbg !15194

if.then5:                                         ; preds = %if.end
  %9 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !15195
  call void @dev_kfree_skb_any(%struct.sk_buff* %9) #12, !dbg !15197
  %10 = load i32, i32* %ret, align 4, !dbg !15198
  store i32 %10, i32* %retval, align 4, !dbg !15199
  br label %return, !dbg !15199

if.end6:                                          ; preds = %if.end
  %11 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !15200
  %call7 = call i8* @skb_end_pointer(%struct.sk_buff* %11) #12, !dbg !15200
  %12 = bitcast i8* %call7 to %struct.skb_shared_info*, !dbg !15201
  %gso_size = getelementptr inbounds %struct.skb_shared_info, %struct.skb_shared_info* %12, i32 0, i32 4, !dbg !15201
  %13 = load i16, i16* %gso_size, align 4, !dbg !15201
  %conv = zext i16 %13 to i32, !dbg !15200
  %cmp = icmp ne i32 %conv, 0, !dbg !15202
  %frombool = zext i1 %cmp to i8, !dbg !15203
  store i8 %frombool, i8* %is_lso, align 1, !dbg !15203
  %14 = load i8, i8* %is_lso, align 1, !dbg !15204
  %tobool9 = trunc i8 %14 to i1, !dbg !15204
  br i1 %tobool9, label %if.then10, label %if.else26, !dbg !15206

if.then10:                                        ; preds = %if.end6
  %15 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !15207
  %call11 = call %struct.iphdr* @ip_hdr(%struct.sk_buff* %15) #12, !dbg !15210
  %protocol = getelementptr inbounds %struct.iphdr, %struct.iphdr* %call11, i32 0, i32 6, !dbg !15211
  %16 = load i8, i8* %protocol, align 1, !dbg !15211
  %conv12 = zext i8 %16 to i32, !dbg !15210
  %cmp13 = icmp eq i32 %conv12, 17, !dbg !15212
  br i1 %cmp13, label %if.then15, label %if.else, !dbg !15213

if.then15:                                        ; preds = %if.then10
  %17 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !15214
  %call16 = call i32 @skb_transport_offset(%struct.sk_buff* %17) #12, !dbg !15215
  store i32 %call16, i32* %hdrlen, align 4, !dbg !15216
  br label %if.end19, !dbg !15217

if.else:                                          ; preds = %if.then10
  %18 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !15218
  %call17 = call i32 @skb_transport_offset(%struct.sk_buff* %18) #12, !dbg !15219
  %19 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !15220
  %call18 = call i32 @tcp_hdrlen(%struct.sk_buff* %19) #12, !dbg !15221
  %add = add i32 %call17, %call18, !dbg !15222
  store i32 %add, i32* %hdrlen, align 4, !dbg !15223
  br label %if.end19

if.end19:                                         ; preds = %if.else, %if.then15
  %20 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !15224
  %call20 = call i32 @skb_headlen(%struct.sk_buff* %20) #12, !dbg !15226
  %21 = load i32, i32* %hdrlen, align 4, !dbg !15227
  %cmp21 = icmp ult i32 %call20, %21, !dbg !15228
  br i1 %cmp21, label %if.then23, label %if.end25, !dbg !15229

if.then23:                                        ; preds = %if.end19
  %22 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !15230
  %dev24 = getelementptr inbounds %struct.macb, %struct.macb* %22, i32 0, i32 17, !dbg !15232
  %23 = load %struct.net_device*, %struct.net_device** %dev24, align 8, !dbg !15232
  call void (%struct.net_device*, i8*, ...) @netdev_err(%struct.net_device* %23, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.28, i64 0, i64 0)) #13, !dbg !15233
  store i32 16, i32* %retval, align 4, !dbg !15234
  br label %return, !dbg !15234

if.end25:                                         ; preds = %if.end19
  br label %if.end30, !dbg !15235

if.else26:                                        ; preds = %if.end6
  call void @llvm.dbg.declare(metadata i32* %__UNIQUE_ID___x534, metadata !15236, metadata !DIExpression()), !dbg !15238
  %24 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !15238
  %call27 = call i32 @skb_headlen(%struct.sk_buff* %24) #12, !dbg !15238
  store i32 %call27, i32* %__UNIQUE_ID___x534, align 4, !dbg !15238
  call void @llvm.dbg.declare(metadata i32* %__UNIQUE_ID___y535, metadata !15239, metadata !DIExpression()), !dbg !15238
  %25 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !15238
  %max_tx_length = getelementptr inbounds %struct.macb, %struct.macb* %25, i32 0, i32 29, !dbg !15238
  %26 = load i32, i32* %max_tx_length, align 8, !dbg !15238
  store i32 %26, i32* %__UNIQUE_ID___y535, align 4, !dbg !15238
  %27 = load i32, i32* %__UNIQUE_ID___x534, align 4, !dbg !15238
  %28 = load i32, i32* %__UNIQUE_ID___y535, align 4, !dbg !15238
  %cmp28 = icmp ult i32 %27, %28, !dbg !15238
  br i1 %cmp28, label %cond.true, label %cond.false, !dbg !15238

cond.true:                                        ; preds = %if.else26
  %29 = load i32, i32* %__UNIQUE_ID___x534, align 4, !dbg !15238
  br label %cond.end, !dbg !15238

cond.false:                                       ; preds = %if.else26
  %30 = load i32, i32* %__UNIQUE_ID___y535, align 4, !dbg !15238
  br label %cond.end, !dbg !15238

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %29, %cond.true ], [ %30, %cond.false ], !dbg !15238
  store i32 %cond, i32* %tmp, align 4, !dbg !15238
  %31 = load i32, i32* %tmp, align 4, !dbg !15238
  store i32 %31, i32* %hdrlen, align 4, !dbg !15240
  br label %if.end30

if.end30:                                         ; preds = %cond.end, %if.end25
  %32 = load i8, i8* %is_lso, align 1, !dbg !15241
  %tobool31 = trunc i8 %32 to i1, !dbg !15241
  br i1 %tobool31, label %land.lhs.true, label %if.else43, !dbg !15243

land.lhs.true:                                    ; preds = %if.end30
  %33 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !15244
  %call33 = call i32 @skb_headlen(%struct.sk_buff* %33) #12, !dbg !15245
  %34 = load i32, i32* %hdrlen, align 4, !dbg !15246
  %cmp34 = icmp ugt i32 %call33, %34, !dbg !15247
  br i1 %cmp34, label %if.then36, label %if.else43, !dbg !15248

if.then36:                                        ; preds = %land.lhs.true
  %35 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !15249
  %call37 = call i32 @skb_headlen(%struct.sk_buff* %35) #12, !dbg !15249
  %36 = load i32, i32* %hdrlen, align 4, !dbg !15249
  %sub = sub i32 %call37, %36, !dbg !15249
  %37 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !15249
  %max_tx_length38 = getelementptr inbounds %struct.macb, %struct.macb* %37, i32 0, i32 29, !dbg !15249
  %38 = load i32, i32* %max_tx_length38, align 8, !dbg !15249
  %add39 = add i32 %sub, %38, !dbg !15249
  %sub40 = sub i32 %add39, 1, !dbg !15249
  %39 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !15249
  %max_tx_length41 = getelementptr inbounds %struct.macb, %struct.macb* %39, i32 0, i32 29, !dbg !15249
  %40 = load i32, i32* %max_tx_length41, align 8, !dbg !15249
  %div = udiv i32 %sub40, %40, !dbg !15249
  %add42 = add i32 %div, 1, !dbg !15250
  store i32 %add42, i32* %desc_cnt, align 4, !dbg !15251
  br label %if.end50, !dbg !15252

if.else43:                                        ; preds = %land.lhs.true, %if.end30
  %41 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !15253
  %call44 = call i32 @skb_headlen(%struct.sk_buff* %41) #12, !dbg !15253
  %42 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !15253
  %max_tx_length45 = getelementptr inbounds %struct.macb, %struct.macb* %42, i32 0, i32 29, !dbg !15253
  %43 = load i32, i32* %max_tx_length45, align 8, !dbg !15253
  %add46 = add i32 %call44, %43, !dbg !15253
  %sub47 = sub i32 %add46, 1, !dbg !15253
  %44 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !15253
  %max_tx_length48 = getelementptr inbounds %struct.macb, %struct.macb* %44, i32 0, i32 29, !dbg !15253
  %45 = load i32, i32* %max_tx_length48, align 8, !dbg !15253
  %div49 = udiv i32 %sub47, %45, !dbg !15253
  store i32 %div49, i32* %desc_cnt, align 4, !dbg !15254
  br label %if.end50

if.end50:                                         ; preds = %if.else43, %if.then36
  %46 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !15255
  %call51 = call i8* @skb_end_pointer(%struct.sk_buff* %46) #12, !dbg !15255
  %47 = bitcast i8* %call51 to %struct.skb_shared_info*, !dbg !15256
  %nr_frags52 = getelementptr inbounds %struct.skb_shared_info, %struct.skb_shared_info* %47, i32 0, i32 2, !dbg !15256
  %48 = load i8, i8* %nr_frags52, align 2, !dbg !15256
  %conv53 = zext i8 %48 to i32, !dbg !15255
  store i32 %conv53, i32* %nr_frags, align 4, !dbg !15257
  store i32 0, i32* %f, align 4, !dbg !15258
  br label %for.cond, !dbg !15260

for.cond:                                         ; preds = %for.inc, %if.end50
  %49 = load i32, i32* %f, align 4, !dbg !15261
  %50 = load i32, i32* %nr_frags, align 4, !dbg !15263
  %cmp54 = icmp ult i32 %49, %50, !dbg !15264
  br i1 %cmp54, label %for.body, label %for.end, !dbg !15265

for.body:                                         ; preds = %for.cond
  %51 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !15266
  %call56 = call i8* @skb_end_pointer(%struct.sk_buff* %51) #12, !dbg !15266
  %52 = bitcast i8* %call56 to %struct.skb_shared_info*, !dbg !15268
  %frags = getelementptr inbounds %struct.skb_shared_info, %struct.skb_shared_info* %52, i32 0, i32 12, !dbg !15268
  %53 = load i32, i32* %f, align 4, !dbg !15269
  %idxprom57 = zext i32 %53 to i64, !dbg !15266
  %arrayidx58 = getelementptr [17 x %struct.bio_vec], [17 x %struct.bio_vec]* %frags, i64 0, i64 %idxprom57, !dbg !15266
  %call59 = call i32 @skb_frag_size(%struct.bio_vec* %arrayidx58) #12, !dbg !15270
  store i32 %call59, i32* %frag_size, align 4, !dbg !15271
  %54 = load i32, i32* %frag_size, align 4, !dbg !15272
  %55 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !15272
  %max_tx_length60 = getelementptr inbounds %struct.macb, %struct.macb* %55, i32 0, i32 29, !dbg !15272
  %56 = load i32, i32* %max_tx_length60, align 8, !dbg !15272
  %add61 = add i32 %54, %56, !dbg !15272
  %sub62 = sub i32 %add61, 1, !dbg !15272
  %57 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !15272
  %max_tx_length63 = getelementptr inbounds %struct.macb, %struct.macb* %57, i32 0, i32 29, !dbg !15272
  %58 = load i32, i32* %max_tx_length63, align 8, !dbg !15272
  %div64 = udiv i32 %sub62, %58, !dbg !15272
  %59 = load i32, i32* %desc_cnt, align 4, !dbg !15273
  %add65 = add i32 %59, %div64, !dbg !15273
  store i32 %add65, i32* %desc_cnt, align 4, !dbg !15273
  br label %for.inc, !dbg !15274

for.inc:                                          ; preds = %for.body
  %60 = load i32, i32* %f, align 4, !dbg !15275
  %inc = add i32 %60, 1, !dbg !15275
  store i32 %inc, i32* %f, align 4, !dbg !15275
  br label %for.cond, !dbg !15276, !llvm.loop !15277

for.end:                                          ; preds = %for.cond
  br label %do.body, !dbg !15279

do.body:                                          ; preds = %for.end
  br label %do.body66, !dbg !15280

do.body66:                                        ; preds = %do.body
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !15281, metadata !DIExpression()), !dbg !15283
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !15284, metadata !DIExpression()), !dbg !15283
  %cmp67 = icmp eq i64* %__dummy, %__dummy2, !dbg !15283
  %conv68 = zext i1 %cmp67 to i32, !dbg !15283
  store i32 1, i32* %tmp69, align 4, !dbg !15283
  %61 = load i32, i32* %tmp69, align 4, !dbg !15283
  br label %do.body70, !dbg !15285

do.body70:                                        ; preds = %do.body66
  br label %do.body71, !dbg !15286

do.body71:                                        ; preds = %do.body70
  br label %do.body72, !dbg !15287

do.body72:                                        ; preds = %do.body71
  call void @llvm.dbg.declare(metadata i64* %__dummy73, metadata !15289, metadata !DIExpression()), !dbg !15292
  call void @llvm.dbg.declare(metadata i64* %__dummy274, metadata !15293, metadata !DIExpression()), !dbg !15292
  %cmp75 = icmp eq i64* %__dummy73, %__dummy274, !dbg !15292
  %conv76 = zext i1 %cmp75 to i32, !dbg !15292
  store i32 1, i32* %tmp77, align 4, !dbg !15292
  %62 = load i32, i32* %tmp77, align 4, !dbg !15292
  %call78 = call i64 @arch_local_irq_save() #12, !dbg !15294
  store i64 %call78, i64* %flags, align 8, !dbg !15294
  br label %do.end, !dbg !15294

do.end:                                           ; preds = %do.body72
  br label %do.end79, !dbg !15287

do.end79:                                         ; preds = %do.end
  br label %do.body80, !dbg !15286

do.body80:                                        ; preds = %do.end79
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #8, !dbg !15295, !srcloc !15296
  br label %do.body81, !dbg !15295

do.body81:                                        ; preds = %do.body80
  %63 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !15297
  %lock = getelementptr inbounds %struct.macb, %struct.macb* %63, i32 0, i32 10, !dbg !15297
  store %struct.spinlock* %lock, %struct.spinlock** %lock.addr.i, align 8
  %64 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !15298
  %65 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %64, i32 0, i32 0, !dbg !15299
  %rlock.i = bitcast %union.anon.1* %65 to %struct.raw_spinlock*, !dbg !15299
  br label %do.end83, !dbg !15297

do.end83:                                         ; preds = %do.body81
  br label %do.end84, !dbg !15295

do.end84:                                         ; preds = %do.end83
  br label %do.end85, !dbg !15286

do.end85:                                         ; preds = %do.end84
  br label %do.end86, !dbg !15285

do.end86:                                         ; preds = %do.end85
  br label %do.end87, !dbg !15280

do.end87:                                         ; preds = %do.end86
  %66 = load %struct.macb_queue*, %struct.macb_queue** %queue, align 8, !dbg !15300
  %tx_tail = getelementptr inbounds %struct.macb_queue, %struct.macb_queue* %66, i32 0, i32 12, !dbg !15300
  %67 = load i32, i32* %tx_tail, align 4, !dbg !15300
  %68 = load %struct.macb_queue*, %struct.macb_queue** %queue, align 8, !dbg !15300
  %tx_head = getelementptr inbounds %struct.macb_queue, %struct.macb_queue* %68, i32 0, i32 11, !dbg !15300
  %69 = load i32, i32* %tx_head, align 8, !dbg !15300
  %add88 = add i32 %69, 1, !dbg !15300
  %sub89 = sub i32 %67, %add88, !dbg !15300
  %70 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !15300
  %tx_ring_size = getelementptr inbounds %struct.macb, %struct.macb* %70, i32 0, i32 6, !dbg !15300
  %71 = load i32, i32* %tx_ring_size, align 4, !dbg !15300
  %sub90 = sub i32 %71, 1, !dbg !15300
  %and = and i32 %sub89, %sub90, !dbg !15300
  %72 = load i32, i32* %desc_cnt, align 4, !dbg !15301
  %cmp91 = icmp ult i32 %and, %72, !dbg !15302
  br i1 %cmp91, label %if.then93, label %if.end95, !dbg !15303

if.then93:                                        ; preds = %do.end87
  %73 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !15304
  %74 = load i16, i16* %queue_index, align 2, !dbg !15305
  call void @netif_stop_subqueue(%struct.net_device* %73, i16 zeroext %74) #12, !dbg !15306
  %75 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !15307
  %lock94 = getelementptr inbounds %struct.macb, %struct.macb* %75, i32 0, i32 10, !dbg !15308
  %76 = load i64, i64* %flags, align 8, !dbg !15309
  store %struct.spinlock* %lock94, %struct.spinlock** %lock.addr.i115, align 8
  store i64 %76, i64* %flags.addr.i116, align 8
  call void @llvm.dbg.declare(metadata !743, metadata !13334, metadata !DIExpression()) #8, !dbg !15310
  call void @llvm.dbg.declare(metadata !743, metadata !13338, metadata !DIExpression()) #8, !dbg !15310
  store i32 1, i32* %tmp.i117, align 4, !dbg !15310
  %77 = load i32, i32* %tmp.i117, align 4, !dbg !15310
  call void @llvm.dbg.declare(metadata !743, metadata !13339, metadata !DIExpression()) #8, !dbg !15311
  call void @llvm.dbg.declare(metadata !743, metadata !13345, metadata !DIExpression()) #8, !dbg !15311
  store i32 1, i32* %tmp8.i118, align 4, !dbg !15311
  %78 = load i32, i32* %tmp8.i118, align 4, !dbg !15311
  %79 = load i64, i64* %flags.addr.i116, align 8, !dbg !15312
  call void @arch_local_irq_restore(i64 %79) #14, !dbg !15312
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #8, !dbg !15313, !srcloc !13349
  %80 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i115, align 8, !dbg !15314
  %81 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %80, i32 0, i32 0, !dbg !15314
  %rlock.i119 = bitcast %union.anon.1* %81 to %struct.raw_spinlock*, !dbg !15314
  store i32 16, i32* %retval, align 4, !dbg !15315
  br label %return, !dbg !15315

if.end95:                                         ; preds = %do.end87
  %82 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !15316
  %83 = load %struct.macb_queue*, %struct.macb_queue** %queue, align 8, !dbg !15318
  %84 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !15319
  %85 = load i32, i32* %hdrlen, align 4, !dbg !15320
  %call96 = call i32 @macb_tx_map(%struct.macb* %82, %struct.macb_queue* %83, %struct.sk_buff* %84, i32 %85) #12, !dbg !15321
  %tobool97 = icmp ne i32 %call96, 0, !dbg !15321
  br i1 %tobool97, label %if.end99, label %if.then98, !dbg !15322

if.then98:                                        ; preds = %if.end95
  %86 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !15323
  call void @dev_kfree_skb_any(%struct.sk_buff* %86) #12, !dbg !15325
  br label %unlock, !dbg !15326

if.end99:                                         ; preds = %if.end95
  call void asm sideeffect "sfence", "~{memory},~{dirflag},~{fpsr},~{flags}"() #8, !dbg !15327, !srcloc !15328
  %87 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !15329
  call void @skb_tx_timestamp(%struct.sk_buff* %87) #12, !dbg !15330
  %88 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !15331
  %macb_reg_writel = getelementptr inbounds %struct.macb, %struct.macb* %88, i32 0, i32 3, !dbg !15331
  %89 = load void (%struct.macb*, i32, i32)*, void (%struct.macb*, i32, i32)** %macb_reg_writel, align 8, !dbg !15331
  %90 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !15331
  %91 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !15331
  %macb_reg_readl = getelementptr inbounds %struct.macb, %struct.macb* %91, i32 0, i32 2, !dbg !15331
  %92 = load i32 (%struct.macb*, i32)*, i32 (%struct.macb*, i32)** %macb_reg_readl, align 8, !dbg !15331
  %93 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !15331
  %call100 = call i32 %92(%struct.macb* %93, i32 0) #12, !dbg !15331
  %or = or i32 %call100, 512, !dbg !15331
  call void %89(%struct.macb* %90, i32 0, i32 %or) #12, !dbg !15331
  %94 = load %struct.macb_queue*, %struct.macb_queue** %queue, align 8, !dbg !15332
  %tx_tail101 = getelementptr inbounds %struct.macb_queue, %struct.macb_queue* %94, i32 0, i32 12, !dbg !15332
  %95 = load i32, i32* %tx_tail101, align 4, !dbg !15332
  %96 = load %struct.macb_queue*, %struct.macb_queue** %queue, align 8, !dbg !15332
  %tx_head102 = getelementptr inbounds %struct.macb_queue, %struct.macb_queue* %96, i32 0, i32 11, !dbg !15332
  %97 = load i32, i32* %tx_head102, align 8, !dbg !15332
  %add103 = add i32 %97, 1, !dbg !15332
  %sub104 = sub i32 %95, %add103, !dbg !15332
  %98 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !15332
  %tx_ring_size105 = getelementptr inbounds %struct.macb, %struct.macb* %98, i32 0, i32 6, !dbg !15332
  %99 = load i32, i32* %tx_ring_size105, align 4, !dbg !15332
  %sub106 = sub i32 %99, 1, !dbg !15332
  %and107 = and i32 %sub104, %sub106, !dbg !15332
  %cmp108 = icmp ult i32 %and107, 1, !dbg !15334
  br i1 %cmp108, label %if.then110, label %if.end111, !dbg !15335

if.then110:                                       ; preds = %if.end99
  %100 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !15336
  %101 = load i16, i16* %queue_index, align 2, !dbg !15337
  call void @netif_stop_subqueue(%struct.net_device* %100, i16 zeroext %101) #12, !dbg !15338
  br label %if.end111, !dbg !15338

if.end111:                                        ; preds = %if.then110, %if.end99
  br label %unlock, !dbg !15339

unlock:                                           ; preds = %if.end111, %if.then98
  call void @llvm.dbg.label(metadata !15340), !dbg !15341
  %102 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !15342
  %lock112 = getelementptr inbounds %struct.macb, %struct.macb* %102, i32 0, i32 10, !dbg !15343
  %103 = load i64, i64* %flags, align 8, !dbg !15344
  store %struct.spinlock* %lock112, %struct.spinlock** %lock.addr.i113, align 8
  store i64 %103, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !743, metadata !13334, metadata !DIExpression()) #8, !dbg !15345
  call void @llvm.dbg.declare(metadata !743, metadata !13338, metadata !DIExpression()) #8, !dbg !15345
  store i32 1, i32* %tmp.i, align 4, !dbg !15345
  %104 = load i32, i32* %tmp.i, align 4, !dbg !15345
  call void @llvm.dbg.declare(metadata !743, metadata !13339, metadata !DIExpression()) #8, !dbg !15346
  call void @llvm.dbg.declare(metadata !743, metadata !13345, metadata !DIExpression()) #8, !dbg !15346
  store i32 1, i32* %tmp8.i, align 4, !dbg !15346
  %105 = load i32, i32* %tmp8.i, align 4, !dbg !15346
  %106 = load i64, i64* %flags.addr.i, align 8, !dbg !15347
  call void @arch_local_irq_restore(i64 %106) #14, !dbg !15347
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #8, !dbg !15348, !srcloc !13349
  %107 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i113, align 8, !dbg !15349
  %108 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %107, i32 0, i32 0, !dbg !15349
  %rlock.i114 = bitcast %union.anon.1* %108 to %struct.raw_spinlock*, !dbg !15349
  %109 = load i32, i32* %ret, align 4, !dbg !15350
  store i32 %109, i32* %retval, align 4, !dbg !15351
  br label %return, !dbg !15351

return:                                           ; preds = %unlock, %if.then93, %if.then23, %if.then5, %if.then
  %110 = load i32, i32* %retval, align 4, !dbg !15352
  ret i32 %110, !dbg !15352
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @macb_features_check(%struct.sk_buff* %skb, %struct.net_device* %dev, i64 %features) #2 !dbg !15353 {
entry:
  %retval = alloca i64, align 8
  %skb.addr = alloca %struct.sk_buff*, align 8
  %dev.addr = alloca %struct.net_device*, align 8
  %features.addr = alloca i64, align 8
  %nr_frags = alloca i32, align 4
  %f = alloca i32, align 4
  %hdrlen = alloca i32, align 4
  %frag = alloca %struct.bio_vec*, align 8
  store %struct.sk_buff* %skb, %struct.sk_buff** %skb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.sk_buff** %skb.addr, metadata !15354, metadata !DIExpression()), !dbg !15355
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !15356, metadata !DIExpression()), !dbg !15357
  store i64 %features, i64* %features.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %features.addr, metadata !15358, metadata !DIExpression()), !dbg !15359
  call void @llvm.dbg.declare(metadata i32* %nr_frags, metadata !15360, metadata !DIExpression()), !dbg !15361
  call void @llvm.dbg.declare(metadata i32* %f, metadata !15362, metadata !DIExpression()), !dbg !15363
  call void @llvm.dbg.declare(metadata i32* %hdrlen, metadata !15364, metadata !DIExpression()), !dbg !15365
  %0 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !15366
  %call = call zeroext i1 @skb_is_nonlinear(%struct.sk_buff* %0) #12, !dbg !15368
  br i1 %call, label %lor.lhs.false, label %if.then, !dbg !15369

lor.lhs.false:                                    ; preds = %entry
  %1 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !15370
  %call1 = call %struct.iphdr* @ip_hdr(%struct.sk_buff* %1) #12, !dbg !15371
  %protocol = getelementptr inbounds %struct.iphdr, %struct.iphdr* %call1, i32 0, i32 6, !dbg !15372
  %2 = load i8, i8* %protocol, align 1, !dbg !15372
  %conv = zext i8 %2 to i32, !dbg !15371
  %cmp = icmp ne i32 %conv, 17, !dbg !15373
  br i1 %cmp, label %if.then, label %if.end, !dbg !15374

if.then:                                          ; preds = %lor.lhs.false, %entry
  %3 = load i64, i64* %features.addr, align 8, !dbg !15375
  store i64 %3, i64* %retval, align 8, !dbg !15376
  br label %return, !dbg !15376

if.end:                                           ; preds = %lor.lhs.false
  %4 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !15377
  %call3 = call i32 @skb_transport_offset(%struct.sk_buff* %4) #12, !dbg !15378
  store i32 %call3, i32* %hdrlen, align 4, !dbg !15379
  %5 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !15380
  %call4 = call i32 @skb_headlen(%struct.sk_buff* %5) #12, !dbg !15380
  %6 = load i32, i32* %hdrlen, align 4, !dbg !15380
  %sub = sub i32 %call4, %6, !dbg !15380
  %and = and i32 %sub, 7, !dbg !15380
  %cmp5 = icmp eq i32 %and, 0, !dbg !15380
  br i1 %cmp5, label %if.end9, label %if.then7, !dbg !15382

if.then7:                                         ; preds = %if.end
  %7 = load i64, i64* %features.addr, align 8, !dbg !15383
  %and8 = and i64 %7, -65537, !dbg !15384
  store i64 %and8, i64* %retval, align 8, !dbg !15385
  br label %return, !dbg !15385

if.end9:                                          ; preds = %if.end
  %8 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !15386
  %call10 = call i8* @skb_end_pointer(%struct.sk_buff* %8) #12, !dbg !15386
  %9 = bitcast i8* %call10 to %struct.skb_shared_info*, !dbg !15387
  %nr_frags11 = getelementptr inbounds %struct.skb_shared_info, %struct.skb_shared_info* %9, i32 0, i32 2, !dbg !15387
  %10 = load i8, i8* %nr_frags11, align 2, !dbg !15387
  %conv12 = zext i8 %10 to i32, !dbg !15386
  store i32 %conv12, i32* %nr_frags, align 4, !dbg !15388
  %11 = load i32, i32* %nr_frags, align 4, !dbg !15389
  %dec = add i32 %11, -1, !dbg !15389
  store i32 %dec, i32* %nr_frags, align 4, !dbg !15389
  store i32 0, i32* %f, align 4, !dbg !15390
  br label %for.cond, !dbg !15392

for.cond:                                         ; preds = %for.inc, %if.end9
  %12 = load i32, i32* %f, align 4, !dbg !15393
  %13 = load i32, i32* %nr_frags, align 4, !dbg !15395
  %cmp13 = icmp ult i32 %12, %13, !dbg !15396
  br i1 %cmp13, label %for.body, label %for.end, !dbg !15397

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.bio_vec** %frag, metadata !15398, metadata !DIExpression()), !dbg !15402
  %14 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !15403
  %call15 = call i8* @skb_end_pointer(%struct.sk_buff* %14) #12, !dbg !15403
  %15 = bitcast i8* %call15 to %struct.skb_shared_info*, !dbg !15404
  %frags = getelementptr inbounds %struct.skb_shared_info, %struct.skb_shared_info* %15, i32 0, i32 12, !dbg !15404
  %16 = load i32, i32* %f, align 4, !dbg !15405
  %idxprom = zext i32 %16 to i64, !dbg !15403
  %arrayidx = getelementptr [17 x %struct.bio_vec], [17 x %struct.bio_vec]* %frags, i64 0, i64 %idxprom, !dbg !15403
  store %struct.bio_vec* %arrayidx, %struct.bio_vec** %frag, align 8, !dbg !15402
  %17 = load %struct.bio_vec*, %struct.bio_vec** %frag, align 8, !dbg !15406
  %call16 = call i32 @skb_frag_size(%struct.bio_vec* %17) #12, !dbg !15406
  %and17 = and i32 %call16, 7, !dbg !15406
  %cmp18 = icmp eq i32 %and17, 0, !dbg !15406
  br i1 %cmp18, label %if.end22, label %if.then20, !dbg !15408

if.then20:                                        ; preds = %for.body
  %18 = load i64, i64* %features.addr, align 8, !dbg !15409
  %and21 = and i64 %18, -65537, !dbg !15410
  store i64 %and21, i64* %retval, align 8, !dbg !15411
  br label %return, !dbg !15411

if.end22:                                         ; preds = %for.body
  br label %for.inc, !dbg !15412

for.inc:                                          ; preds = %if.end22
  %19 = load i32, i32* %f, align 4, !dbg !15413
  %inc = add i32 %19, 1, !dbg !15413
  store i32 %inc, i32* %f, align 4, !dbg !15413
  br label %for.cond, !dbg !15414, !llvm.loop !15415

for.end:                                          ; preds = %for.cond
  %20 = load i64, i64* %features.addr, align 8, !dbg !15417
  store i64 %20, i64* %retval, align 8, !dbg !15418
  br label %return, !dbg !15418

return:                                           ; preds = %for.end, %if.then20, %if.then7, %if.then
  %21 = load i64, i64* %retval, align 8, !dbg !15419
  ret i64 %21, !dbg !15419
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @macb_set_rx_mode(%struct.net_device* %dev) #2 !dbg !15420 {
entry:
  %dev.addr = alloca %struct.net_device*, align 8
  %cfg = alloca i64, align 8
  %bp = alloca %struct.macb*, align 8
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !15421, metadata !DIExpression()), !dbg !15422
  call void @llvm.dbg.declare(metadata i64* %cfg, metadata !15423, metadata !DIExpression()), !dbg !15424
  call void @llvm.dbg.declare(metadata %struct.macb** %bp, metadata !15425, metadata !DIExpression()), !dbg !15426
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !15427
  %call = call i8* @netdev_priv(%struct.net_device* %0) #12, !dbg !15428
  %1 = bitcast i8* %call to %struct.macb*, !dbg !15428
  store %struct.macb* %1, %struct.macb** %bp, align 8, !dbg !15426
  %2 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !15429
  %macb_reg_readl = getelementptr inbounds %struct.macb, %struct.macb* %2, i32 0, i32 2, !dbg !15429
  %3 = load i32 (%struct.macb*, i32)*, i32 (%struct.macb*, i32)** %macb_reg_readl, align 8, !dbg !15429
  %4 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !15429
  %call1 = call i32 %3(%struct.macb* %4, i32 4) #12, !dbg !15429
  %conv = zext i32 %call1 to i64, !dbg !15429
  store i64 %conv, i64* %cfg, align 8, !dbg !15430
  %5 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !15431
  %flags = getelementptr inbounds %struct.net_device, %struct.net_device* %5, i32 0, i32 36, !dbg !15433
  %6 = load i32, i32* %flags, align 8, !dbg !15433
  %and = and i32 %6, 256, !dbg !15434
  %tobool = icmp ne i32 %and, 0, !dbg !15434
  br i1 %tobool, label %if.then, label %if.else, !dbg !15435

if.then:                                          ; preds = %entry
  %7 = load i64, i64* %cfg, align 8, !dbg !15436
  %or = or i64 %7, 16, !dbg !15436
  store i64 %or, i64* %cfg, align 8, !dbg !15436
  %8 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !15438
  %call2 = call zeroext i1 @macb_is_gem(%struct.macb* %8) #12, !dbg !15440
  br i1 %call2, label %if.then3, label %if.end, !dbg !15441

if.then3:                                         ; preds = %if.then
  %9 = load i64, i64* %cfg, align 8, !dbg !15442
  %and4 = and i64 %9, -16777217, !dbg !15442
  store i64 %and4, i64* %cfg, align 8, !dbg !15442
  br label %if.end, !dbg !15443

if.end:                                           ; preds = %if.then3, %if.then
  br label %if.end13, !dbg !15444

if.else:                                          ; preds = %entry
  %10 = load i64, i64* %cfg, align 8, !dbg !15445
  %and5 = and i64 %10, -17, !dbg !15445
  store i64 %and5, i64* %cfg, align 8, !dbg !15445
  %11 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !15447
  %call6 = call zeroext i1 @macb_is_gem(%struct.macb* %11) #12, !dbg !15449
  br i1 %call6, label %land.lhs.true, label %if.end12, !dbg !15450

land.lhs.true:                                    ; preds = %if.else
  %12 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !15451
  %features = getelementptr inbounds %struct.net_device, %struct.net_device* %12, i32 0, i32 15, !dbg !15452
  %13 = load i64, i64* %features, align 8, !dbg !15452
  %and8 = and i64 %13, 1099511627776, !dbg !15453
  %tobool9 = icmp ne i64 %and8, 0, !dbg !15453
  br i1 %tobool9, label %if.then10, label %if.end12, !dbg !15454

if.then10:                                        ; preds = %land.lhs.true
  %14 = load i64, i64* %cfg, align 8, !dbg !15455
  %or11 = or i64 %14, 16777216, !dbg !15455
  store i64 %or11, i64* %cfg, align 8, !dbg !15455
  br label %if.end12, !dbg !15456

if.end12:                                         ; preds = %if.then10, %land.lhs.true, %if.else
  br label %if.end13

if.end13:                                         ; preds = %if.end12, %if.end
  %15 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !15457
  %flags14 = getelementptr inbounds %struct.net_device, %struct.net_device* %15, i32 0, i32 36, !dbg !15459
  %16 = load i32, i32* %flags14, align 8, !dbg !15459
  %and15 = and i32 %16, 512, !dbg !15460
  %tobool16 = icmp ne i32 %and15, 0, !dbg !15460
  br i1 %tobool16, label %if.then17, label %if.else30, !dbg !15461

if.then17:                                        ; preds = %if.end13
  %17 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !15462
  %call18 = call zeroext i1 @macb_is_gem(%struct.macb* %17) #12, !dbg !15462
  br i1 %call18, label %if.then19, label %if.else20, !dbg !15466

if.then19:                                        ; preds = %if.then17
  %18 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !15462
  %macb_reg_writel = getelementptr inbounds %struct.macb, %struct.macb* %18, i32 0, i32 3, !dbg !15462
  %19 = load void (%struct.macb*, i32, i32)*, void (%struct.macb*, i32, i32)** %macb_reg_writel, align 8, !dbg !15462
  %20 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !15462
  call void %19(%struct.macb* %20, i32 128, i32 -1) #12, !dbg !15462
  br label %if.end22, !dbg !15462

if.else20:                                        ; preds = %if.then17
  %21 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !15462
  %macb_reg_writel21 = getelementptr inbounds %struct.macb, %struct.macb* %21, i32 0, i32 3, !dbg !15462
  %22 = load void (%struct.macb*, i32, i32)*, void (%struct.macb*, i32, i32)** %macb_reg_writel21, align 8, !dbg !15462
  %23 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !15462
  call void %22(%struct.macb* %23, i32 144, i32 -1) #12, !dbg !15462
  br label %if.end22

if.end22:                                         ; preds = %if.else20, %if.then19
  %24 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !15467
  %call23 = call zeroext i1 @macb_is_gem(%struct.macb* %24) #12, !dbg !15467
  br i1 %call23, label %if.then24, label %if.else26, !dbg !15470

if.then24:                                        ; preds = %if.end22
  %25 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !15467
  %macb_reg_writel25 = getelementptr inbounds %struct.macb, %struct.macb* %25, i32 0, i32 3, !dbg !15467
  %26 = load void (%struct.macb*, i32, i32)*, void (%struct.macb*, i32, i32)** %macb_reg_writel25, align 8, !dbg !15467
  %27 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !15467
  call void %26(%struct.macb* %27, i32 132, i32 -1) #12, !dbg !15467
  br label %if.end28, !dbg !15467

if.else26:                                        ; preds = %if.end22
  %28 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !15467
  %macb_reg_writel27 = getelementptr inbounds %struct.macb, %struct.macb* %28, i32 0, i32 3, !dbg !15467
  %29 = load void (%struct.macb*, i32, i32)*, void (%struct.macb*, i32, i32)** %macb_reg_writel27, align 8, !dbg !15467
  %30 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !15467
  call void %29(%struct.macb* %30, i32 148, i32 -1) #12, !dbg !15467
  br label %if.end28

if.end28:                                         ; preds = %if.else26, %if.then24
  %31 = load i64, i64* %cfg, align 8, !dbg !15471
  %or29 = or i64 %31, 64, !dbg !15471
  store i64 %or29, i64* %cfg, align 8, !dbg !15471
  br label %if.end54, !dbg !15472

if.else30:                                        ; preds = %if.end13
  %32 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !15473
  %mc = getelementptr inbounds %struct.net_device, %struct.net_device* %32, i32 0, i32 63, !dbg !15473
  %count = getelementptr inbounds %struct.netdev_hw_addr_list, %struct.netdev_hw_addr_list* %mc, i32 0, i32 1, !dbg !15473
  %33 = load i32, i32* %count, align 8, !dbg !15473
  %cmp = icmp eq i32 %33, 0, !dbg !15473
  br i1 %cmp, label %if.else34, label %if.then32, !dbg !15475

if.then32:                                        ; preds = %if.else30
  %34 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !15476
  call void @macb_sethashtable(%struct.net_device* %34) #12, !dbg !15478
  %35 = load i64, i64* %cfg, align 8, !dbg !15479
  %or33 = or i64 %35, 64, !dbg !15479
  store i64 %or33, i64* %cfg, align 8, !dbg !15479
  br label %if.end53, !dbg !15480

if.else34:                                        ; preds = %if.else30
  %36 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !15481
  %flags35 = getelementptr inbounds %struct.net_device, %struct.net_device* %36, i32 0, i32 36, !dbg !15483
  %37 = load i32, i32* %flags35, align 8, !dbg !15483
  %and36 = and i32 %37, -513, !dbg !15484
  %tobool37 = icmp ne i32 %and36, 0, !dbg !15484
  br i1 %tobool37, label %if.then38, label %if.end52, !dbg !15485

if.then38:                                        ; preds = %if.else34
  %38 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !15486
  %call39 = call zeroext i1 @macb_is_gem(%struct.macb* %38) #12, !dbg !15486
  br i1 %call39, label %if.then40, label %if.else42, !dbg !15490

if.then40:                                        ; preds = %if.then38
  %39 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !15486
  %macb_reg_writel41 = getelementptr inbounds %struct.macb, %struct.macb* %39, i32 0, i32 3, !dbg !15486
  %40 = load void (%struct.macb*, i32, i32)*, void (%struct.macb*, i32, i32)** %macb_reg_writel41, align 8, !dbg !15486
  %41 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !15486
  call void %40(%struct.macb* %41, i32 128, i32 0) #12, !dbg !15486
  br label %if.end44, !dbg !15486

if.else42:                                        ; preds = %if.then38
  %42 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !15486
  %macb_reg_writel43 = getelementptr inbounds %struct.macb, %struct.macb* %42, i32 0, i32 3, !dbg !15486
  %43 = load void (%struct.macb*, i32, i32)*, void (%struct.macb*, i32, i32)** %macb_reg_writel43, align 8, !dbg !15486
  %44 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !15486
  call void %43(%struct.macb* %44, i32 144, i32 0) #12, !dbg !15486
  br label %if.end44

if.end44:                                         ; preds = %if.else42, %if.then40
  %45 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !15491
  %call45 = call zeroext i1 @macb_is_gem(%struct.macb* %45) #12, !dbg !15491
  br i1 %call45, label %if.then46, label %if.else48, !dbg !15494

if.then46:                                        ; preds = %if.end44
  %46 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !15491
  %macb_reg_writel47 = getelementptr inbounds %struct.macb, %struct.macb* %46, i32 0, i32 3, !dbg !15491
  %47 = load void (%struct.macb*, i32, i32)*, void (%struct.macb*, i32, i32)** %macb_reg_writel47, align 8, !dbg !15491
  %48 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !15491
  call void %47(%struct.macb* %48, i32 132, i32 0) #12, !dbg !15491
  br label %if.end50, !dbg !15491

if.else48:                                        ; preds = %if.end44
  %49 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !15491
  %macb_reg_writel49 = getelementptr inbounds %struct.macb, %struct.macb* %49, i32 0, i32 3, !dbg !15491
  %50 = load void (%struct.macb*, i32, i32)*, void (%struct.macb*, i32, i32)** %macb_reg_writel49, align 8, !dbg !15491
  %51 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !15491
  call void %50(%struct.macb* %51, i32 148, i32 0) #12, !dbg !15491
  br label %if.end50

if.end50:                                         ; preds = %if.else48, %if.then46
  %52 = load i64, i64* %cfg, align 8, !dbg !15495
  %and51 = and i64 %52, -65, !dbg !15495
  store i64 %and51, i64* %cfg, align 8, !dbg !15495
  br label %if.end52, !dbg !15496

if.end52:                                         ; preds = %if.end50, %if.else34
  br label %if.end53

if.end53:                                         ; preds = %if.end52, %if.then32
  br label %if.end54

if.end54:                                         ; preds = %if.end53, %if.end28
  %53 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !15497
  %macb_reg_writel55 = getelementptr inbounds %struct.macb, %struct.macb* %53, i32 0, i32 3, !dbg !15497
  %54 = load void (%struct.macb*, i32, i32)*, void (%struct.macb*, i32, i32)** %macb_reg_writel55, align 8, !dbg !15497
  %55 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !15497
  %56 = load i64, i64* %cfg, align 8, !dbg !15497
  %conv56 = trunc i64 %56 to i32, !dbg !15497
  call void %54(%struct.macb* %55, i32 4, i32 %conv56) #12, !dbg !15497
  ret void, !dbg !15498
}

; Function Attrs: noredzone
declare dso_local i32 @eth_mac_addr(%struct.net_device*, i8*) #1

; Function Attrs: noredzone
declare dso_local i32 @eth_validate_addr(%struct.net_device*) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @macb_ioctl(%struct.net_device* %dev, %struct.ifreq* %rq, i32 %cmd) #2 !dbg !15499 {
entry:
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.net_device*, align 8
  %rq.addr = alloca %struct.ifreq*, align 8
  %cmd.addr = alloca i32, align 4
  %bp = alloca %struct.macb*, align 8
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !15500, metadata !DIExpression()), !dbg !15501
  store %struct.ifreq* %rq, %struct.ifreq** %rq.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ifreq** %rq.addr, metadata !15502, metadata !DIExpression()), !dbg !15503
  store i32 %cmd, i32* %cmd.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %cmd.addr, metadata !15504, metadata !DIExpression()), !dbg !15505
  call void @llvm.dbg.declare(metadata %struct.macb** %bp, metadata !15506, metadata !DIExpression()), !dbg !15507
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !15508
  %call = call i8* @netdev_priv(%struct.net_device* %0) #12, !dbg !15509
  %1 = bitcast i8* %call to %struct.macb*, !dbg !15509
  store %struct.macb* %1, %struct.macb** %bp, align 8, !dbg !15507
  %2 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !15510
  %call1 = call zeroext i1 @netif_running(%struct.net_device* %2) #12, !dbg !15512
  br i1 %call1, label %if.end, label %if.then, !dbg !15513

if.then:                                          ; preds = %entry
  store i32 -22, i32* %retval, align 4, !dbg !15514
  br label %return, !dbg !15514

if.end:                                           ; preds = %entry
  %3 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !15515
  %ptp_info = getelementptr inbounds %struct.macb, %struct.macb* %3, i32 0, i32 34, !dbg !15517
  %4 = load %struct.macb_ptp_info*, %struct.macb_ptp_info** %ptp_info, align 8, !dbg !15517
  %tobool = icmp ne %struct.macb_ptp_info* %4, null, !dbg !15515
  br i1 %tobool, label %if.then2, label %if.end8, !dbg !15518

if.then2:                                         ; preds = %if.end
  %5 = load i32, i32* %cmd.addr, align 4, !dbg !15519
  switch i32 %5, label %sw.epilog [
    i32 35248, label %sw.bb
    i32 35249, label %sw.bb5
  ], !dbg !15521

sw.bb:                                            ; preds = %if.then2
  %6 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !15522
  %ptp_info3 = getelementptr inbounds %struct.macb, %struct.macb* %6, i32 0, i32 34, !dbg !15524
  %7 = load %struct.macb_ptp_info*, %struct.macb_ptp_info** %ptp_info3, align 8, !dbg !15524
  %set_hwtst = getelementptr inbounds %struct.macb_ptp_info, %struct.macb_ptp_info* %7, i32 0, i32 6, !dbg !15525
  %8 = load i32 (%struct.net_device*, %struct.ifreq*, i32)*, i32 (%struct.net_device*, %struct.ifreq*, i32)** %set_hwtst, align 8, !dbg !15525
  %9 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !15526
  %10 = load %struct.ifreq*, %struct.ifreq** %rq.addr, align 8, !dbg !15527
  %11 = load i32, i32* %cmd.addr, align 4, !dbg !15528
  %call4 = call i32 %8(%struct.net_device* %9, %struct.ifreq* %10, i32 %11) #12, !dbg !15522
  store i32 %call4, i32* %retval, align 4, !dbg !15529
  br label %return, !dbg !15529

sw.bb5:                                           ; preds = %if.then2
  %12 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !15530
  %ptp_info6 = getelementptr inbounds %struct.macb, %struct.macb* %12, i32 0, i32 34, !dbg !15531
  %13 = load %struct.macb_ptp_info*, %struct.macb_ptp_info** %ptp_info6, align 8, !dbg !15531
  %get_hwtst = getelementptr inbounds %struct.macb_ptp_info, %struct.macb_ptp_info* %13, i32 0, i32 5, !dbg !15532
  %14 = load i32 (%struct.net_device*, %struct.ifreq*)*, i32 (%struct.net_device*, %struct.ifreq*)** %get_hwtst, align 8, !dbg !15532
  %15 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !15533
  %16 = load %struct.ifreq*, %struct.ifreq** %rq.addr, align 8, !dbg !15534
  %call7 = call i32 %14(%struct.net_device* %15, %struct.ifreq* %16) #12, !dbg !15530
  store i32 %call7, i32* %retval, align 4, !dbg !15535
  br label %return, !dbg !15535

sw.epilog:                                        ; preds = %if.then2
  br label %if.end8, !dbg !15536

if.end8:                                          ; preds = %sw.epilog, %if.end
  %17 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !15537
  %phylink = getelementptr inbounds %struct.macb, %struct.macb* %17, i32 0, i32 21, !dbg !15538
  %18 = load %struct.phylink*, %struct.phylink** %phylink, align 8, !dbg !15538
  %19 = load %struct.ifreq*, %struct.ifreq** %rq.addr, align 8, !dbg !15539
  %20 = load i32, i32* %cmd.addr, align 4, !dbg !15540
  %call9 = call i32 @phylink_mii_ioctl(%struct.phylink* %18, %struct.ifreq* %19, i32 %20) #12, !dbg !15541
  store i32 %call9, i32* %retval, align 4, !dbg !15542
  br label %return, !dbg !15542

return:                                           ; preds = %if.end8, %sw.bb5, %sw.bb, %if.then
  %21 = load i32, i32* %retval, align 4, !dbg !15543
  ret i32 %21, !dbg !15543
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @macb_change_mtu(%struct.net_device* %dev, i32 %new_mtu) #2 !dbg !15544 {
entry:
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.net_device*, align 8
  %new_mtu.addr = alloca i32, align 4
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !15545, metadata !DIExpression()), !dbg !15546
  store i32 %new_mtu, i32* %new_mtu.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %new_mtu.addr, metadata !15547, metadata !DIExpression()), !dbg !15548
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !15549
  %call = call zeroext i1 @netif_running(%struct.net_device* %0) #12, !dbg !15551
  br i1 %call, label %if.then, label %if.end, !dbg !15552

if.then:                                          ; preds = %entry
  store i32 -16, i32* %retval, align 4, !dbg !15553
  br label %return, !dbg !15553

if.end:                                           ; preds = %entry
  %1 = load i32, i32* %new_mtu.addr, align 4, !dbg !15554
  %2 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !15555
  %mtu = getelementptr inbounds %struct.net_device, %struct.net_device* %2, i32 0, i32 44, !dbg !15556
  store i32 %1, i32* %mtu, align 8, !dbg !15557
  store i32 0, i32* %retval, align 4, !dbg !15558
  br label %return, !dbg !15558

return:                                           ; preds = %if.end, %if.then
  %3 = load i32, i32* %retval, align 4, !dbg !15559
  ret i32 %3, !dbg !15559
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.net_device_stats* @macb_get_stats(%struct.net_device* %dev) #2 !dbg !15560 {
entry:
  %retval = alloca %struct.net_device_stats*, align 8
  %dev.addr = alloca %struct.net_device*, align 8
  %bp = alloca %struct.macb*, align 8
  %nstat = alloca %struct.net_device_stats*, align 8
  %hwstat = alloca %struct.macb_stats*, align 8
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !15561, metadata !DIExpression()), !dbg !15562
  call void @llvm.dbg.declare(metadata %struct.macb** %bp, metadata !15563, metadata !DIExpression()), !dbg !15564
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !15565
  %call = call i8* @netdev_priv(%struct.net_device* %0) #12, !dbg !15566
  %1 = bitcast i8* %call to %struct.macb*, !dbg !15566
  store %struct.macb* %1, %struct.macb** %bp, align 8, !dbg !15564
  call void @llvm.dbg.declare(metadata %struct.net_device_stats** %nstat, metadata !15567, metadata !DIExpression()), !dbg !15568
  %2 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !15569
  %dev1 = getelementptr inbounds %struct.macb, %struct.macb* %2, i32 0, i32 17, !dbg !15570
  %3 = load %struct.net_device*, %struct.net_device** %dev1, align 8, !dbg !15570
  %stats = getelementptr inbounds %struct.net_device, %struct.net_device* %3, i32 0, i32 24, !dbg !15571
  store %struct.net_device_stats* %stats, %struct.net_device_stats** %nstat, align 8, !dbg !15568
  call void @llvm.dbg.declare(metadata %struct.macb_stats** %hwstat, metadata !15572, metadata !DIExpression()), !dbg !15574
  %4 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !15575
  %hw_stats = getelementptr inbounds %struct.macb, %struct.macb* %4, i32 0, i32 18, !dbg !15576
  %macb = bitcast %union.anon.162* %hw_stats to %struct.macb_stats*, !dbg !15577
  store %struct.macb_stats* %macb, %struct.macb_stats** %hwstat, align 8, !dbg !15574
  %5 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !15578
  %call2 = call zeroext i1 @macb_is_gem(%struct.macb* %5) #12, !dbg !15580
  br i1 %call2, label %if.then, label %if.end, !dbg !15581

if.then:                                          ; preds = %entry
  %6 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !15582
  %call3 = call %struct.net_device_stats* @gem_get_stats(%struct.macb* %6) #12, !dbg !15583
  store %struct.net_device_stats* %call3, %struct.net_device_stats** %retval, align 8, !dbg !15584
  br label %return, !dbg !15584

if.end:                                           ; preds = %entry
  %7 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !15585
  call void @macb_update_stats(%struct.macb* %7) #12, !dbg !15586
  %8 = load %struct.macb_stats*, %struct.macb_stats** %hwstat, align 8, !dbg !15587
  %rx_fcs_errors = getelementptr inbounds %struct.macb_stats, %struct.macb_stats* %8, i32 0, i32 5, !dbg !15588
  %9 = load i32, i32* %rx_fcs_errors, align 4, !dbg !15588
  %10 = load %struct.macb_stats*, %struct.macb_stats** %hwstat, align 8, !dbg !15589
  %rx_align_errors = getelementptr inbounds %struct.macb_stats, %struct.macb_stats* %10, i32 0, i32 6, !dbg !15590
  %11 = load i32, i32* %rx_align_errors, align 4, !dbg !15590
  %add = add i32 %9, %11, !dbg !15591
  %12 = load %struct.macb_stats*, %struct.macb_stats** %hwstat, align 8, !dbg !15592
  %rx_resource_errors = getelementptr inbounds %struct.macb_stats, %struct.macb_stats* %12, i32 0, i32 12, !dbg !15593
  %13 = load i32, i32* %rx_resource_errors, align 4, !dbg !15593
  %add4 = add i32 %add, %13, !dbg !15594
  %14 = load %struct.macb_stats*, %struct.macb_stats** %hwstat, align 8, !dbg !15595
  %rx_overruns = getelementptr inbounds %struct.macb_stats, %struct.macb_stats* %14, i32 0, i32 13, !dbg !15596
  %15 = load i32, i32* %rx_overruns, align 4, !dbg !15596
  %add5 = add i32 %add4, %15, !dbg !15597
  %16 = load %struct.macb_stats*, %struct.macb_stats** %hwstat, align 8, !dbg !15598
  %rx_oversize_pkts = getelementptr inbounds %struct.macb_stats, %struct.macb_stats* %16, i32 0, i32 15, !dbg !15599
  %17 = load i32, i32* %rx_oversize_pkts, align 4, !dbg !15599
  %add6 = add i32 %add5, %17, !dbg !15600
  %18 = load %struct.macb_stats*, %struct.macb_stats** %hwstat, align 8, !dbg !15601
  %rx_jabbers = getelementptr inbounds %struct.macb_stats, %struct.macb_stats* %18, i32 0, i32 16, !dbg !15602
  %19 = load i32, i32* %rx_jabbers, align 4, !dbg !15602
  %add7 = add i32 %add6, %19, !dbg !15603
  %20 = load %struct.macb_stats*, %struct.macb_stats** %hwstat, align 8, !dbg !15604
  %rx_undersize_pkts = getelementptr inbounds %struct.macb_stats, %struct.macb_stats* %20, i32 0, i32 17, !dbg !15605
  %21 = load i32, i32* %rx_undersize_pkts, align 4, !dbg !15605
  %add8 = add i32 %add7, %21, !dbg !15606
  %22 = load %struct.macb_stats*, %struct.macb_stats** %hwstat, align 8, !dbg !15607
  %rx_length_mismatch = getelementptr inbounds %struct.macb_stats, %struct.macb_stats* %22, i32 0, i32 19, !dbg !15608
  %23 = load i32, i32* %rx_length_mismatch, align 4, !dbg !15608
  %add9 = add i32 %add8, %23, !dbg !15609
  %conv = zext i32 %add9 to i64, !dbg !15610
  %24 = load %struct.net_device_stats*, %struct.net_device_stats** %nstat, align 8, !dbg !15611
  %rx_errors = getelementptr inbounds %struct.net_device_stats, %struct.net_device_stats* %24, i32 0, i32 4, !dbg !15612
  store i64 %conv, i64* %rx_errors, align 8, !dbg !15613
  %25 = load %struct.macb_stats*, %struct.macb_stats** %hwstat, align 8, !dbg !15614
  %tx_late_cols = getelementptr inbounds %struct.macb_stats, %struct.macb_stats* %25, i32 0, i32 8, !dbg !15615
  %26 = load i32, i32* %tx_late_cols, align 4, !dbg !15615
  %27 = load %struct.macb_stats*, %struct.macb_stats** %hwstat, align 8, !dbg !15616
  %tx_excessive_cols = getelementptr inbounds %struct.macb_stats, %struct.macb_stats* %27, i32 0, i32 9, !dbg !15617
  %28 = load i32, i32* %tx_excessive_cols, align 4, !dbg !15617
  %add10 = add i32 %26, %28, !dbg !15618
  %29 = load %struct.macb_stats*, %struct.macb_stats** %hwstat, align 8, !dbg !15619
  %tx_underruns = getelementptr inbounds %struct.macb_stats, %struct.macb_stats* %29, i32 0, i32 10, !dbg !15620
  %30 = load i32, i32* %tx_underruns, align 4, !dbg !15620
  %add11 = add i32 %add10, %30, !dbg !15621
  %31 = load %struct.macb_stats*, %struct.macb_stats** %hwstat, align 8, !dbg !15622
  %tx_carrier_errors = getelementptr inbounds %struct.macb_stats, %struct.macb_stats* %31, i32 0, i32 11, !dbg !15623
  %32 = load i32, i32* %tx_carrier_errors, align 4, !dbg !15623
  %add12 = add i32 %add11, %32, !dbg !15624
  %33 = load %struct.macb_stats*, %struct.macb_stats** %hwstat, align 8, !dbg !15625
  %sqe_test_errors = getelementptr inbounds %struct.macb_stats, %struct.macb_stats* %33, i32 0, i32 18, !dbg !15626
  %34 = load i32, i32* %sqe_test_errors, align 4, !dbg !15626
  %add13 = add i32 %add12, %34, !dbg !15627
  %conv14 = zext i32 %add13 to i64, !dbg !15628
  %35 = load %struct.net_device_stats*, %struct.net_device_stats** %nstat, align 8, !dbg !15629
  %tx_errors = getelementptr inbounds %struct.net_device_stats, %struct.net_device_stats* %35, i32 0, i32 5, !dbg !15630
  store i64 %conv14, i64* %tx_errors, align 8, !dbg !15631
  %36 = load %struct.macb_stats*, %struct.macb_stats** %hwstat, align 8, !dbg !15632
  %tx_single_cols = getelementptr inbounds %struct.macb_stats, %struct.macb_stats* %36, i32 0, i32 2, !dbg !15633
  %37 = load i32, i32* %tx_single_cols, align 4, !dbg !15633
  %38 = load %struct.macb_stats*, %struct.macb_stats** %hwstat, align 8, !dbg !15634
  %tx_multiple_cols = getelementptr inbounds %struct.macb_stats, %struct.macb_stats* %38, i32 0, i32 3, !dbg !15635
  %39 = load i32, i32* %tx_multiple_cols, align 4, !dbg !15635
  %add15 = add i32 %37, %39, !dbg !15636
  %40 = load %struct.macb_stats*, %struct.macb_stats** %hwstat, align 8, !dbg !15637
  %tx_excessive_cols16 = getelementptr inbounds %struct.macb_stats, %struct.macb_stats* %40, i32 0, i32 9, !dbg !15638
  %41 = load i32, i32* %tx_excessive_cols16, align 4, !dbg !15638
  %add17 = add i32 %add15, %41, !dbg !15639
  %conv18 = zext i32 %add17 to i64, !dbg !15640
  %42 = load %struct.net_device_stats*, %struct.net_device_stats** %nstat, align 8, !dbg !15641
  %collisions = getelementptr inbounds %struct.net_device_stats, %struct.net_device_stats* %42, i32 0, i32 9, !dbg !15642
  store i64 %conv18, i64* %collisions, align 8, !dbg !15643
  %43 = load %struct.macb_stats*, %struct.macb_stats** %hwstat, align 8, !dbg !15644
  %rx_oversize_pkts19 = getelementptr inbounds %struct.macb_stats, %struct.macb_stats* %43, i32 0, i32 15, !dbg !15645
  %44 = load i32, i32* %rx_oversize_pkts19, align 4, !dbg !15645
  %45 = load %struct.macb_stats*, %struct.macb_stats** %hwstat, align 8, !dbg !15646
  %rx_jabbers20 = getelementptr inbounds %struct.macb_stats, %struct.macb_stats* %45, i32 0, i32 16, !dbg !15647
  %46 = load i32, i32* %rx_jabbers20, align 4, !dbg !15647
  %add21 = add i32 %44, %46, !dbg !15648
  %47 = load %struct.macb_stats*, %struct.macb_stats** %hwstat, align 8, !dbg !15649
  %rx_undersize_pkts22 = getelementptr inbounds %struct.macb_stats, %struct.macb_stats* %47, i32 0, i32 17, !dbg !15650
  %48 = load i32, i32* %rx_undersize_pkts22, align 4, !dbg !15650
  %add23 = add i32 %add21, %48, !dbg !15651
  %49 = load %struct.macb_stats*, %struct.macb_stats** %hwstat, align 8, !dbg !15652
  %rx_length_mismatch24 = getelementptr inbounds %struct.macb_stats, %struct.macb_stats* %49, i32 0, i32 19, !dbg !15653
  %50 = load i32, i32* %rx_length_mismatch24, align 4, !dbg !15653
  %add25 = add i32 %add23, %50, !dbg !15654
  %conv26 = zext i32 %add25 to i64, !dbg !15655
  %51 = load %struct.net_device_stats*, %struct.net_device_stats** %nstat, align 8, !dbg !15656
  %rx_length_errors = getelementptr inbounds %struct.net_device_stats, %struct.net_device_stats* %51, i32 0, i32 10, !dbg !15657
  store i64 %conv26, i64* %rx_length_errors, align 8, !dbg !15658
  %52 = load %struct.macb_stats*, %struct.macb_stats** %hwstat, align 8, !dbg !15659
  %rx_resource_errors27 = getelementptr inbounds %struct.macb_stats, %struct.macb_stats* %52, i32 0, i32 12, !dbg !15660
  %53 = load i32, i32* %rx_resource_errors27, align 4, !dbg !15660
  %54 = load %struct.macb_stats*, %struct.macb_stats** %hwstat, align 8, !dbg !15661
  %rx_overruns28 = getelementptr inbounds %struct.macb_stats, %struct.macb_stats* %54, i32 0, i32 13, !dbg !15662
  %55 = load i32, i32* %rx_overruns28, align 4, !dbg !15662
  %add29 = add i32 %53, %55, !dbg !15663
  %conv30 = zext i32 %add29 to i64, !dbg !15659
  %56 = load %struct.net_device_stats*, %struct.net_device_stats** %nstat, align 8, !dbg !15664
  %rx_over_errors = getelementptr inbounds %struct.net_device_stats, %struct.net_device_stats* %56, i32 0, i32 11, !dbg !15665
  store i64 %conv30, i64* %rx_over_errors, align 8, !dbg !15666
  %57 = load %struct.macb_stats*, %struct.macb_stats** %hwstat, align 8, !dbg !15667
  %rx_fcs_errors31 = getelementptr inbounds %struct.macb_stats, %struct.macb_stats* %57, i32 0, i32 5, !dbg !15668
  %58 = load i32, i32* %rx_fcs_errors31, align 4, !dbg !15668
  %conv32 = zext i32 %58 to i64, !dbg !15667
  %59 = load %struct.net_device_stats*, %struct.net_device_stats** %nstat, align 8, !dbg !15669
  %rx_crc_errors = getelementptr inbounds %struct.net_device_stats, %struct.net_device_stats* %59, i32 0, i32 12, !dbg !15670
  store i64 %conv32, i64* %rx_crc_errors, align 8, !dbg !15671
  %60 = load %struct.macb_stats*, %struct.macb_stats** %hwstat, align 8, !dbg !15672
  %rx_align_errors33 = getelementptr inbounds %struct.macb_stats, %struct.macb_stats* %60, i32 0, i32 6, !dbg !15673
  %61 = load i32, i32* %rx_align_errors33, align 4, !dbg !15673
  %conv34 = zext i32 %61 to i64, !dbg !15672
  %62 = load %struct.net_device_stats*, %struct.net_device_stats** %nstat, align 8, !dbg !15674
  %rx_frame_errors = getelementptr inbounds %struct.net_device_stats, %struct.net_device_stats* %62, i32 0, i32 13, !dbg !15675
  store i64 %conv34, i64* %rx_frame_errors, align 8, !dbg !15676
  %63 = load %struct.macb_stats*, %struct.macb_stats** %hwstat, align 8, !dbg !15677
  %rx_overruns35 = getelementptr inbounds %struct.macb_stats, %struct.macb_stats* %63, i32 0, i32 13, !dbg !15678
  %64 = load i32, i32* %rx_overruns35, align 4, !dbg !15678
  %conv36 = zext i32 %64 to i64, !dbg !15677
  %65 = load %struct.net_device_stats*, %struct.net_device_stats** %nstat, align 8, !dbg !15679
  %rx_fifo_errors = getelementptr inbounds %struct.net_device_stats, %struct.net_device_stats* %65, i32 0, i32 14, !dbg !15680
  store i64 %conv36, i64* %rx_fifo_errors, align 8, !dbg !15681
  %66 = load %struct.macb_stats*, %struct.macb_stats** %hwstat, align 8, !dbg !15682
  %tx_excessive_cols37 = getelementptr inbounds %struct.macb_stats, %struct.macb_stats* %66, i32 0, i32 9, !dbg !15683
  %67 = load i32, i32* %tx_excessive_cols37, align 4, !dbg !15683
  %conv38 = zext i32 %67 to i64, !dbg !15682
  %68 = load %struct.net_device_stats*, %struct.net_device_stats** %nstat, align 8, !dbg !15684
  %tx_aborted_errors = getelementptr inbounds %struct.net_device_stats, %struct.net_device_stats* %68, i32 0, i32 16, !dbg !15685
  store i64 %conv38, i64* %tx_aborted_errors, align 8, !dbg !15686
  %69 = load %struct.macb_stats*, %struct.macb_stats** %hwstat, align 8, !dbg !15687
  %tx_carrier_errors39 = getelementptr inbounds %struct.macb_stats, %struct.macb_stats* %69, i32 0, i32 11, !dbg !15688
  %70 = load i32, i32* %tx_carrier_errors39, align 4, !dbg !15688
  %conv40 = zext i32 %70 to i64, !dbg !15687
  %71 = load %struct.net_device_stats*, %struct.net_device_stats** %nstat, align 8, !dbg !15689
  %tx_carrier_errors41 = getelementptr inbounds %struct.net_device_stats, %struct.net_device_stats* %71, i32 0, i32 17, !dbg !15690
  store i64 %conv40, i64* %tx_carrier_errors41, align 8, !dbg !15691
  %72 = load %struct.macb_stats*, %struct.macb_stats** %hwstat, align 8, !dbg !15692
  %tx_underruns42 = getelementptr inbounds %struct.macb_stats, %struct.macb_stats* %72, i32 0, i32 10, !dbg !15693
  %73 = load i32, i32* %tx_underruns42, align 4, !dbg !15693
  %conv43 = zext i32 %73 to i64, !dbg !15692
  %74 = load %struct.net_device_stats*, %struct.net_device_stats** %nstat, align 8, !dbg !15694
  %tx_fifo_errors = getelementptr inbounds %struct.net_device_stats, %struct.net_device_stats* %74, i32 0, i32 18, !dbg !15695
  store i64 %conv43, i64* %tx_fifo_errors, align 8, !dbg !15696
  %75 = load %struct.net_device_stats*, %struct.net_device_stats** %nstat, align 8, !dbg !15697
  store %struct.net_device_stats* %75, %struct.net_device_stats** %retval, align 8, !dbg !15698
  br label %return, !dbg !15698

return:                                           ; preds = %if.end, %if.then
  %76 = load %struct.net_device_stats*, %struct.net_device_stats** %retval, align 8, !dbg !15699
  ret %struct.net_device_stats* %76, !dbg !15699
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @macb_set_features(%struct.net_device* %netdev, i64 %features) #2 !dbg !15700 {
entry:
  %netdev.addr = alloca %struct.net_device*, align 8
  %features.addr = alloca i64, align 8
  %bp = alloca %struct.macb*, align 8
  %changed = alloca i64, align 8
  store %struct.net_device* %netdev, %struct.net_device** %netdev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %netdev.addr, metadata !15701, metadata !DIExpression()), !dbg !15702
  store i64 %features, i64* %features.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %features.addr, metadata !15703, metadata !DIExpression()), !dbg !15704
  call void @llvm.dbg.declare(metadata %struct.macb** %bp, metadata !15705, metadata !DIExpression()), !dbg !15706
  %0 = load %struct.net_device*, %struct.net_device** %netdev.addr, align 8, !dbg !15707
  %call = call i8* @netdev_priv(%struct.net_device* %0) #12, !dbg !15708
  %1 = bitcast i8* %call to %struct.macb*, !dbg !15708
  store %struct.macb* %1, %struct.macb** %bp, align 8, !dbg !15706
  call void @llvm.dbg.declare(metadata i64* %changed, metadata !15709, metadata !DIExpression()), !dbg !15710
  %2 = load i64, i64* %features.addr, align 8, !dbg !15711
  %3 = load %struct.net_device*, %struct.net_device** %netdev.addr, align 8, !dbg !15712
  %features1 = getelementptr inbounds %struct.net_device, %struct.net_device* %3, i32 0, i32 15, !dbg !15713
  %4 = load i64, i64* %features1, align 8, !dbg !15713
  %xor = xor i64 %2, %4, !dbg !15714
  store i64 %xor, i64* %changed, align 8, !dbg !15710
  %5 = load i64, i64* %changed, align 8, !dbg !15715
  %and = and i64 %5, 8, !dbg !15717
  %tobool = icmp ne i64 %and, 0, !dbg !15717
  br i1 %tobool, label %if.then, label %if.end, !dbg !15718

if.then:                                          ; preds = %entry
  %6 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !15719
  %7 = load i64, i64* %features.addr, align 8, !dbg !15720
  call void @macb_set_txcsum_feature(%struct.macb* %6, i64 %7) #12, !dbg !15721
  br label %if.end, !dbg !15721

if.end:                                           ; preds = %if.then, %entry
  %8 = load i64, i64* %changed, align 8, !dbg !15722
  %and2 = and i64 %8, 1099511627776, !dbg !15724
  %tobool3 = icmp ne i64 %and2, 0, !dbg !15724
  br i1 %tobool3, label %if.then4, label %if.end5, !dbg !15725

if.then4:                                         ; preds = %if.end
  %9 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !15726
  %10 = load i64, i64* %features.addr, align 8, !dbg !15727
  call void @macb_set_rxcsum_feature(%struct.macb* %9, i64 %10) #12, !dbg !15728
  br label %if.end5, !dbg !15728

if.end5:                                          ; preds = %if.then4, %if.end
  %11 = load i64, i64* %changed, align 8, !dbg !15729
  %and6 = and i64 %11, 274877906944, !dbg !15731
  %tobool7 = icmp ne i64 %and6, 0, !dbg !15731
  br i1 %tobool7, label %if.then8, label %if.end9, !dbg !15732

if.then8:                                         ; preds = %if.end5
  %12 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !15733
  %13 = load i64, i64* %features.addr, align 8, !dbg !15734
  call void @macb_set_rxflow_feature(%struct.macb* %12, i64 %13) #12, !dbg !15735
  br label %if.end9, !dbg !15735

if.end9:                                          ; preds = %if.then8, %if.end5
  ret i32 0, !dbg !15736
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @pm_runtime_get_sync(%struct.device* %dev) #2 !dbg !15737 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !15738, metadata !DIExpression()), !dbg !15739
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !15740
  %call = call i32 @__pm_runtime_resume(%struct.device* %0, i32 4) #12, !dbg !15741
  ret i32 %call, !dbg !15742
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @macb_init_rx_buffer_size(%struct.macb* %bp, i64 %size) #2 !dbg !15743 {
entry:
  %bp.addr = alloca %struct.macb*, align 8
  %size.addr = alloca i64, align 8
  %__y = alloca i32, align 4
  %tmp = alloca i64, align 8
  store %struct.macb* %bp, %struct.macb** %bp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.macb** %bp.addr, metadata !15746, metadata !DIExpression()), !dbg !15747
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !15748, metadata !DIExpression()), !dbg !15749
  %0 = load %struct.macb*, %struct.macb** %bp.addr, align 8, !dbg !15750
  %call = call zeroext i1 @macb_is_gem(%struct.macb* %0) #12, !dbg !15752
  br i1 %call, label %if.else, label %if.then, !dbg !15753

if.then:                                          ; preds = %entry
  %1 = load %struct.macb*, %struct.macb** %bp.addr, align 8, !dbg !15754
  %rx_buffer_size = getelementptr inbounds %struct.macb, %struct.macb* %1, i32 0, i32 4, !dbg !15756
  store i64 128, i64* %rx_buffer_size, align 8, !dbg !15757
  br label %if.end8, !dbg !15758

if.else:                                          ; preds = %entry
  %2 = load i64, i64* %size.addr, align 8, !dbg !15759
  %3 = load %struct.macb*, %struct.macb** %bp.addr, align 8, !dbg !15761
  %rx_buffer_size1 = getelementptr inbounds %struct.macb, %struct.macb* %3, i32 0, i32 4, !dbg !15762
  store i64 %2, i64* %rx_buffer_size1, align 8, !dbg !15763
  %4 = load %struct.macb*, %struct.macb** %bp.addr, align 8, !dbg !15764
  %rx_buffer_size2 = getelementptr inbounds %struct.macb, %struct.macb* %4, i32 0, i32 4, !dbg !15766
  %5 = load i64, i64* %rx_buffer_size2, align 8, !dbg !15766
  %rem = urem i64 %5, 64, !dbg !15767
  %tobool = icmp ne i64 %rem, 0, !dbg !15767
  br i1 %tobool, label %if.then3, label %if.end, !dbg !15768

if.then3:                                         ; preds = %if.else
  call void @llvm.dbg.declare(metadata i32* %__y, metadata !15769, metadata !DIExpression()), !dbg !15772
  store i32 64, i32* %__y, align 4, !dbg !15772
  %6 = load %struct.macb*, %struct.macb** %bp.addr, align 8, !dbg !15772
  %rx_buffer_size4 = getelementptr inbounds %struct.macb, %struct.macb* %6, i32 0, i32 4, !dbg !15772
  %7 = load i64, i64* %rx_buffer_size4, align 8, !dbg !15772
  %8 = load i32, i32* %__y, align 4, !dbg !15772
  %sub = sub i32 %8, 1, !dbg !15772
  %conv = sext i32 %sub to i64, !dbg !15772
  %add = add i64 %7, %conv, !dbg !15772
  %9 = load i32, i32* %__y, align 4, !dbg !15772
  %conv5 = sext i32 %9 to i64, !dbg !15772
  %div = udiv i64 %add, %conv5, !dbg !15772
  %10 = load i32, i32* %__y, align 4, !dbg !15772
  %conv6 = sext i32 %10 to i64, !dbg !15772
  %mul = mul i64 %div, %conv6, !dbg !15772
  store i64 %mul, i64* %tmp, align 8, !dbg !15772
  %11 = load i64, i64* %tmp, align 8, !dbg !15772
  %12 = load %struct.macb*, %struct.macb** %bp.addr, align 8, !dbg !15773
  %rx_buffer_size7 = getelementptr inbounds %struct.macb, %struct.macb* %12, i32 0, i32 4, !dbg !15774
  store i64 %11, i64* %rx_buffer_size7, align 8, !dbg !15775
  br label %if.end, !dbg !15776

if.end:                                           ; preds = %if.then3, %if.else
  br label %if.end8

if.end8:                                          ; preds = %if.end, %if.then
  ret void, !dbg !15777
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @macb_alloc_consistent(%struct.macb* %bp) #2 !dbg !15778 {
entry:
  %s.addr.i.i = alloca %struct.kmem_cache*, align 8
  call void @llvm.dbg.declare(metadata %struct.kmem_cache** %s.addr.i.i, metadata !15779, metadata !DIExpression()), !dbg !15783
  %flags.addr.i17.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i17.i, metadata !15794, metadata !DIExpression()), !dbg !15795
  %size.addr.i18.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i18.i, metadata !15796, metadata !DIExpression()), !dbg !15797
  %ret.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %ret.i.i, metadata !15798, metadata !DIExpression()), !dbg !15799
  %retval.i12.i = alloca i32, align 4
  %flags.addr.i13.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i13.i, metadata !15800, metadata !DIExpression()), !dbg !15804
  %retval.i.i = alloca i32, align 4
  %size.addr.i11.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i11.i, metadata !15806, metadata !DIExpression()), !dbg !15810
  %size.addr.i.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i.i, metadata !15812, metadata !DIExpression()), !dbg !15816
  %flags.addr.i.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i.i.i, metadata !15821, metadata !DIExpression()), !dbg !15822
  %order.addr.i.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %order.addr.i.i.i, metadata !15823, metadata !DIExpression()), !dbg !15824
  %size.addr.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i, metadata !15825, metadata !DIExpression()), !dbg !15826
  %flags.addr.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i.i, metadata !15827, metadata !DIExpression()), !dbg !15828
  %order.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %order.i.i, metadata !15829, metadata !DIExpression()), !dbg !15830
  %retval.i = alloca i8*, align 8
  %size.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i, metadata !15831, metadata !DIExpression()), !dbg !15832
  %flags.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i, metadata !15833, metadata !DIExpression()), !dbg !15834
  %index.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %index.i, metadata !15835, metadata !DIExpression()), !dbg !15836
  %retval = alloca i32, align 4
  %bp.addr = alloca %struct.macb*, align 8
  %queue = alloca %struct.macb_queue*, align 8
  %q = alloca i32, align 4
  %size = alloca i32, align 4
  store %struct.macb* %bp, %struct.macb** %bp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.macb** %bp.addr, metadata !15837, metadata !DIExpression()), !dbg !15838
  call void @llvm.dbg.declare(metadata %struct.macb_queue** %queue, metadata !15839, metadata !DIExpression()), !dbg !15840
  call void @llvm.dbg.declare(metadata i32* %q, metadata !15841, metadata !DIExpression()), !dbg !15842
  call void @llvm.dbg.declare(metadata i32* %size, metadata !15843, metadata !DIExpression()), !dbg !15844
  store i32 0, i32* %q, align 4, !dbg !15845
  %0 = load %struct.macb*, %struct.macb** %bp.addr, align 8, !dbg !15846
  %queues = getelementptr inbounds %struct.macb, %struct.macb* %0, i32 0, i32 9, !dbg !15847
  %arraydecay = getelementptr inbounds [8 x %struct.macb_queue], [8 x %struct.macb_queue]* %queues, i64 0, i64 0, !dbg !15846
  store %struct.macb_queue* %arraydecay, %struct.macb_queue** %queue, align 8, !dbg !15848
  br label %for.cond, !dbg !15849

for.cond:                                         ; preds = %for.inc, %entry
  %1 = load i32, i32* %q, align 4, !dbg !15850
  %2 = load %struct.macb*, %struct.macb** %bp.addr, align 8, !dbg !15851
  %num_queues = getelementptr inbounds %struct.macb, %struct.macb* %2, i32 0, i32 7, !dbg !15852
  %3 = load i32, i32* %num_queues, align 8, !dbg !15852
  %cmp = icmp ult i32 %1, %3, !dbg !15853
  br i1 %cmp, label %for.body, label %for.end, !dbg !15854

for.body:                                         ; preds = %for.cond
  %4 = load %struct.macb*, %struct.macb** %bp.addr, align 8, !dbg !15855
  %call = call i32 @macb_dma_desc_get_size(%struct.macb* %4) #12, !dbg !15855
  %5 = load %struct.macb*, %struct.macb** %bp.addr, align 8, !dbg !15855
  %tx_ring_size = getelementptr inbounds %struct.macb, %struct.macb* %5, i32 0, i32 6, !dbg !15855
  %6 = load i32, i32* %tx_ring_size, align 4, !dbg !15855
  %mul = mul i32 %call, %6, !dbg !15855
  %7 = load %struct.macb*, %struct.macb** %bp.addr, align 8, !dbg !15856
  %tx_bd_rd_prefetch = getelementptr inbounds %struct.macb, %struct.macb* %7, i32 0, i32 47, !dbg !15857
  %8 = load i32, i32* %tx_bd_rd_prefetch, align 4, !dbg !15857
  %add = add i32 %mul, %8, !dbg !15858
  store i32 %add, i32* %size, align 4, !dbg !15859
  %9 = load %struct.macb*, %struct.macb** %bp.addr, align 8, !dbg !15860
  %pdev = getelementptr inbounds %struct.macb, %struct.macb* %9, i32 0, i32 11, !dbg !15861
  %10 = load %struct.platform_device*, %struct.platform_device** %pdev, align 8, !dbg !15861
  %dev = getelementptr inbounds %struct.platform_device, %struct.platform_device* %10, i32 0, i32 3, !dbg !15862
  %11 = load i32, i32* %size, align 4, !dbg !15863
  %conv = sext i32 %11 to i64, !dbg !15863
  %12 = load %struct.macb_queue*, %struct.macb_queue** %queue, align 8, !dbg !15864
  %tx_ring_dma = getelementptr inbounds %struct.macb_queue, %struct.macb_queue* %12, i32 0, i32 15, !dbg !15865
  %call1 = call i8* @dma_alloc_coherent(%struct.device* %dev, i64 %conv, i64* %tx_ring_dma, i32 3264) #12, !dbg !15866
  %13 = bitcast i8* %call1 to %struct.macb_dma_desc*, !dbg !15866
  %14 = load %struct.macb_queue*, %struct.macb_queue** %queue, align 8, !dbg !15867
  %tx_ring = getelementptr inbounds %struct.macb_queue, %struct.macb_queue* %14, i32 0, i32 13, !dbg !15868
  store %struct.macb_dma_desc* %13, %struct.macb_dma_desc** %tx_ring, align 8, !dbg !15869
  %15 = load %struct.macb_queue*, %struct.macb_queue** %queue, align 8, !dbg !15870
  %tx_ring2 = getelementptr inbounds %struct.macb_queue, %struct.macb_queue* %15, i32 0, i32 13, !dbg !15872
  %16 = load %struct.macb_dma_desc*, %struct.macb_dma_desc** %tx_ring2, align 8, !dbg !15872
  %tobool = icmp ne %struct.macb_dma_desc* %16, null, !dbg !15870
  br i1 %tobool, label %if.end, label %if.then, !dbg !15873

if.then:                                          ; preds = %for.body
  br label %out_err, !dbg !15874

if.end:                                           ; preds = %for.body
  %17 = load %struct.macb*, %struct.macb** %bp.addr, align 8, !dbg !15875
  %tx_ring_size3 = getelementptr inbounds %struct.macb, %struct.macb* %17, i32 0, i32 6, !dbg !15876
  %18 = load i32, i32* %tx_ring_size3, align 4, !dbg !15876
  %conv4 = zext i32 %18 to i64, !dbg !15875
  %mul5 = mul i64 %conv4, 32, !dbg !15877
  %conv6 = trunc i64 %mul5 to i32, !dbg !15875
  store i32 %conv6, i32* %size, align 4, !dbg !15878
  %19 = load i32, i32* %size, align 4, !dbg !15879
  %conv7 = sext i32 %19 to i64, !dbg !15879
  store i64 %conv7, i64* %size.addr.i, align 8
  store i32 3264, i32* %flags.addr.i, align 4
  %20 = load i64, i64* %size.addr.i, align 8, !dbg !15880
  %21 = call i1 @llvm.is.constant.i64(i64 %20) #8, !dbg !15881
  br i1 %21, label %if.then.i, label %if.end9.i, !dbg !15882

if.then.i:                                        ; preds = %if.end
  %22 = load i64, i64* %size.addr.i, align 8, !dbg !15883
  %cmp.i = icmp ugt i64 %22, 8192, !dbg !15884
  br i1 %cmp.i, label %if.then1.i, label %if.end.i, !dbg !15885

if.then1.i:                                       ; preds = %if.then.i
  %23 = load i64, i64* %size.addr.i, align 8, !dbg !15886
  %24 = load i32, i32* %flags.addr.i, align 4, !dbg !15887
  store i64 %23, i64* %size.addr.i.i, align 8
  store i32 %24, i32* %flags.addr.i.i, align 4
  %25 = load i64, i64* %size.addr.i.i, align 8, !dbg !15888
  %call.i.i = call i32 @get_order(i64 %25) #16, !dbg !15889
  store i32 %call.i.i, i32* %order.i.i, align 4, !dbg !15830
  %26 = load i64, i64* %size.addr.i.i, align 8, !dbg !15890
  %27 = load i32, i32* %flags.addr.i.i, align 4, !dbg !15891
  %28 = load i32, i32* %order.i.i, align 4, !dbg !15892
  store i64 %26, i64* %size.addr.i.i.i, align 8
  store i32 %27, i32* %flags.addr.i.i.i, align 4
  store i32 %28, i32* %order.addr.i.i.i, align 4
  %29 = load i64, i64* %size.addr.i.i.i, align 8, !dbg !15893
  %30 = load i32, i32* %flags.addr.i.i.i, align 4, !dbg !15894
  %31 = load i32, i32* %order.addr.i.i.i, align 4, !dbg !15895
  %call.i.i.i = call noalias i8* @kmalloc_order(i64 %29, i32 %30, i32 %31) #14, !dbg !15896
  %ptrint.i.i.i = ptrtoint i8* %call.i.i.i to i64, !dbg !15896
  %maskedptr.i.i.i = and i64 %ptrint.i.i.i, 4095, !dbg !15896
  %maskcond.i.i.i = icmp eq i64 %maskedptr.i.i.i, 0, !dbg !15896
  call void @llvm.assume(i1 %maskcond.i.i.i) #8, !dbg !15896
  store i8* %call.i.i.i, i8** %retval.i, align 8, !dbg !15897
  br label %kmalloc.exit, !dbg !15897

if.end.i:                                         ; preds = %if.then.i
  %32 = load i64, i64* %size.addr.i, align 8, !dbg !15898
  store i64 %32, i64* %size.addr.i11.i, align 8
  %33 = load i64, i64* %size.addr.i11.i, align 8, !dbg !15899
  %tobool.i.i = icmp ne i64 %33, 0, !dbg !15899
  br i1 %tobool.i.i, label %if.end.i.i, label %if.then.i.i, !dbg !15901

if.then.i.i:                                      ; preds = %if.end.i
  store i32 0, i32* %retval.i.i, align 4, !dbg !15902
  br label %kmalloc_index.exit.i, !dbg !15902

if.end.i.i:                                       ; preds = %if.end.i
  %34 = load i64, i64* %size.addr.i11.i, align 8, !dbg !15903
  %cmp.i.i = icmp ule i64 %34, 8, !dbg !15905
  br i1 %cmp.i.i, label %if.then1.i.i, label %if.end2.i.i, !dbg !15906

if.then1.i.i:                                     ; preds = %if.end.i.i
  store i32 3, i32* %retval.i.i, align 4, !dbg !15907
  br label %kmalloc_index.exit.i, !dbg !15907

if.end2.i.i:                                      ; preds = %if.end.i.i
  %35 = load i64, i64* %size.addr.i11.i, align 8, !dbg !15908
  %cmp3.i.i = icmp ugt i64 %35, 64, !dbg !15910
  br i1 %cmp3.i.i, label %land.lhs.true.i.i, label %if.end6.i.i, !dbg !15911

land.lhs.true.i.i:                                ; preds = %if.end2.i.i
  %36 = load i64, i64* %size.addr.i11.i, align 8, !dbg !15912
  %cmp4.i.i = icmp ule i64 %36, 96, !dbg !15913
  br i1 %cmp4.i.i, label %if.then5.i.i, label %if.end6.i.i, !dbg !15914

if.then5.i.i:                                     ; preds = %land.lhs.true.i.i
  store i32 1, i32* %retval.i.i, align 4, !dbg !15915
  br label %kmalloc_index.exit.i, !dbg !15915

if.end6.i.i:                                      ; preds = %land.lhs.true.i.i, %if.end2.i.i
  %37 = load i64, i64* %size.addr.i11.i, align 8, !dbg !15916
  %cmp7.i.i = icmp ugt i64 %37, 128, !dbg !15918
  br i1 %cmp7.i.i, label %land.lhs.true8.i.i, label %if.end11.i.i, !dbg !15919

land.lhs.true8.i.i:                               ; preds = %if.end6.i.i
  %38 = load i64, i64* %size.addr.i11.i, align 8, !dbg !15920
  %cmp9.i.i = icmp ule i64 %38, 192, !dbg !15921
  br i1 %cmp9.i.i, label %if.then10.i.i, label %if.end11.i.i, !dbg !15922

if.then10.i.i:                                    ; preds = %land.lhs.true8.i.i
  store i32 2, i32* %retval.i.i, align 4, !dbg !15923
  br label %kmalloc_index.exit.i, !dbg !15923

if.end11.i.i:                                     ; preds = %land.lhs.true8.i.i, %if.end6.i.i
  %39 = load i64, i64* %size.addr.i11.i, align 8, !dbg !15924
  %cmp12.i.i = icmp ule i64 %39, 8, !dbg !15926
  br i1 %cmp12.i.i, label %if.then13.i.i, label %if.end14.i.i, !dbg !15927

if.then13.i.i:                                    ; preds = %if.end11.i.i
  store i32 3, i32* %retval.i.i, align 4, !dbg !15928
  br label %kmalloc_index.exit.i, !dbg !15928

if.end14.i.i:                                     ; preds = %if.end11.i.i
  %40 = load i64, i64* %size.addr.i11.i, align 8, !dbg !15929
  %cmp15.i.i = icmp ule i64 %40, 16, !dbg !15931
  br i1 %cmp15.i.i, label %if.then16.i.i, label %if.end17.i.i, !dbg !15932

if.then16.i.i:                                    ; preds = %if.end14.i.i
  store i32 4, i32* %retval.i.i, align 4, !dbg !15933
  br label %kmalloc_index.exit.i, !dbg !15933

if.end17.i.i:                                     ; preds = %if.end14.i.i
  %41 = load i64, i64* %size.addr.i11.i, align 8, !dbg !15934
  %cmp18.i.i = icmp ule i64 %41, 32, !dbg !15936
  br i1 %cmp18.i.i, label %if.then19.i.i, label %if.end20.i.i, !dbg !15937

if.then19.i.i:                                    ; preds = %if.end17.i.i
  store i32 5, i32* %retval.i.i, align 4, !dbg !15938
  br label %kmalloc_index.exit.i, !dbg !15938

if.end20.i.i:                                     ; preds = %if.end17.i.i
  %42 = load i64, i64* %size.addr.i11.i, align 8, !dbg !15939
  %cmp21.i.i = icmp ule i64 %42, 64, !dbg !15941
  br i1 %cmp21.i.i, label %if.then22.i.i, label %if.end23.i.i, !dbg !15942

if.then22.i.i:                                    ; preds = %if.end20.i.i
  store i32 6, i32* %retval.i.i, align 4, !dbg !15943
  br label %kmalloc_index.exit.i, !dbg !15943

if.end23.i.i:                                     ; preds = %if.end20.i.i
  %43 = load i64, i64* %size.addr.i11.i, align 8, !dbg !15944
  %cmp24.i.i = icmp ule i64 %43, 128, !dbg !15946
  br i1 %cmp24.i.i, label %if.then25.i.i, label %if.end26.i.i, !dbg !15947

if.then25.i.i:                                    ; preds = %if.end23.i.i
  store i32 7, i32* %retval.i.i, align 4, !dbg !15948
  br label %kmalloc_index.exit.i, !dbg !15948

if.end26.i.i:                                     ; preds = %if.end23.i.i
  %44 = load i64, i64* %size.addr.i11.i, align 8, !dbg !15949
  %cmp27.i.i = icmp ule i64 %44, 256, !dbg !15951
  br i1 %cmp27.i.i, label %if.then28.i.i, label %if.end29.i.i, !dbg !15952

if.then28.i.i:                                    ; preds = %if.end26.i.i
  store i32 8, i32* %retval.i.i, align 4, !dbg !15953
  br label %kmalloc_index.exit.i, !dbg !15953

if.end29.i.i:                                     ; preds = %if.end26.i.i
  %45 = load i64, i64* %size.addr.i11.i, align 8, !dbg !15954
  %cmp30.i.i = icmp ule i64 %45, 512, !dbg !15956
  br i1 %cmp30.i.i, label %if.then31.i.i, label %if.end32.i.i, !dbg !15957

if.then31.i.i:                                    ; preds = %if.end29.i.i
  store i32 9, i32* %retval.i.i, align 4, !dbg !15958
  br label %kmalloc_index.exit.i, !dbg !15958

if.end32.i.i:                                     ; preds = %if.end29.i.i
  %46 = load i64, i64* %size.addr.i11.i, align 8, !dbg !15959
  %cmp33.i.i = icmp ule i64 %46, 1024, !dbg !15961
  br i1 %cmp33.i.i, label %if.then34.i.i, label %if.end35.i.i, !dbg !15962

if.then34.i.i:                                    ; preds = %if.end32.i.i
  store i32 10, i32* %retval.i.i, align 4, !dbg !15963
  br label %kmalloc_index.exit.i, !dbg !15963

if.end35.i.i:                                     ; preds = %if.end32.i.i
  %47 = load i64, i64* %size.addr.i11.i, align 8, !dbg !15964
  %cmp36.i.i = icmp ule i64 %47, 2048, !dbg !15966
  br i1 %cmp36.i.i, label %if.then37.i.i, label %if.end38.i.i, !dbg !15967

if.then37.i.i:                                    ; preds = %if.end35.i.i
  store i32 11, i32* %retval.i.i, align 4, !dbg !15968
  br label %kmalloc_index.exit.i, !dbg !15968

if.end38.i.i:                                     ; preds = %if.end35.i.i
  %48 = load i64, i64* %size.addr.i11.i, align 8, !dbg !15969
  %cmp39.i.i = icmp ule i64 %48, 4096, !dbg !15971
  br i1 %cmp39.i.i, label %if.then40.i.i, label %if.end41.i.i, !dbg !15972

if.then40.i.i:                                    ; preds = %if.end38.i.i
  store i32 12, i32* %retval.i.i, align 4, !dbg !15973
  br label %kmalloc_index.exit.i, !dbg !15973

if.end41.i.i:                                     ; preds = %if.end38.i.i
  %49 = load i64, i64* %size.addr.i11.i, align 8, !dbg !15974
  %cmp42.i.i = icmp ule i64 %49, 8192, !dbg !15976
  br i1 %cmp42.i.i, label %if.then43.i.i, label %if.end44.i.i, !dbg !15977

if.then43.i.i:                                    ; preds = %if.end41.i.i
  store i32 13, i32* %retval.i.i, align 4, !dbg !15978
  br label %kmalloc_index.exit.i, !dbg !15978

if.end44.i.i:                                     ; preds = %if.end41.i.i
  %50 = load i64, i64* %size.addr.i11.i, align 8, !dbg !15979
  %cmp45.i.i = icmp ule i64 %50, 16384, !dbg !15981
  br i1 %cmp45.i.i, label %if.then46.i.i, label %if.end47.i.i, !dbg !15982

if.then46.i.i:                                    ; preds = %if.end44.i.i
  store i32 14, i32* %retval.i.i, align 4, !dbg !15983
  br label %kmalloc_index.exit.i, !dbg !15983

if.end47.i.i:                                     ; preds = %if.end44.i.i
  %51 = load i64, i64* %size.addr.i11.i, align 8, !dbg !15984
  %cmp48.i.i = icmp ule i64 %51, 32768, !dbg !15986
  br i1 %cmp48.i.i, label %if.then49.i.i, label %if.end50.i.i, !dbg !15987

if.then49.i.i:                                    ; preds = %if.end47.i.i
  store i32 15, i32* %retval.i.i, align 4, !dbg !15988
  br label %kmalloc_index.exit.i, !dbg !15988

if.end50.i.i:                                     ; preds = %if.end47.i.i
  %52 = load i64, i64* %size.addr.i11.i, align 8, !dbg !15989
  %cmp51.i.i = icmp ule i64 %52, 65536, !dbg !15991
  br i1 %cmp51.i.i, label %if.then52.i.i, label %if.end53.i.i, !dbg !15992

if.then52.i.i:                                    ; preds = %if.end50.i.i
  store i32 16, i32* %retval.i.i, align 4, !dbg !15993
  br label %kmalloc_index.exit.i, !dbg !15993

if.end53.i.i:                                     ; preds = %if.end50.i.i
  %53 = load i64, i64* %size.addr.i11.i, align 8, !dbg !15994
  %cmp54.i.i = icmp ule i64 %53, 131072, !dbg !15996
  br i1 %cmp54.i.i, label %if.then55.i.i, label %if.end56.i.i, !dbg !15997

if.then55.i.i:                                    ; preds = %if.end53.i.i
  store i32 17, i32* %retval.i.i, align 4, !dbg !15998
  br label %kmalloc_index.exit.i, !dbg !15998

if.end56.i.i:                                     ; preds = %if.end53.i.i
  %54 = load i64, i64* %size.addr.i11.i, align 8, !dbg !15999
  %cmp57.i.i = icmp ule i64 %54, 262144, !dbg !16001
  br i1 %cmp57.i.i, label %if.then58.i.i, label %if.end59.i.i, !dbg !16002

if.then58.i.i:                                    ; preds = %if.end56.i.i
  store i32 18, i32* %retval.i.i, align 4, !dbg !16003
  br label %kmalloc_index.exit.i, !dbg !16003

if.end59.i.i:                                     ; preds = %if.end56.i.i
  %55 = load i64, i64* %size.addr.i11.i, align 8, !dbg !16004
  %cmp60.i.i = icmp ule i64 %55, 524288, !dbg !16006
  br i1 %cmp60.i.i, label %if.then61.i.i, label %if.end62.i.i, !dbg !16007

if.then61.i.i:                                    ; preds = %if.end59.i.i
  store i32 19, i32* %retval.i.i, align 4, !dbg !16008
  br label %kmalloc_index.exit.i, !dbg !16008

if.end62.i.i:                                     ; preds = %if.end59.i.i
  %56 = load i64, i64* %size.addr.i11.i, align 8, !dbg !16009
  %cmp63.i.i = icmp ule i64 %56, 1048576, !dbg !16011
  br i1 %cmp63.i.i, label %if.then64.i.i, label %if.end65.i.i, !dbg !16012

if.then64.i.i:                                    ; preds = %if.end62.i.i
  store i32 20, i32* %retval.i.i, align 4, !dbg !16013
  br label %kmalloc_index.exit.i, !dbg !16013

if.end65.i.i:                                     ; preds = %if.end62.i.i
  %57 = load i64, i64* %size.addr.i11.i, align 8, !dbg !16014
  %cmp66.i.i = icmp ule i64 %57, 2097152, !dbg !16016
  br i1 %cmp66.i.i, label %if.then67.i.i, label %if.end68.i.i, !dbg !16017

if.then67.i.i:                                    ; preds = %if.end65.i.i
  store i32 21, i32* %retval.i.i, align 4, !dbg !16018
  br label %kmalloc_index.exit.i, !dbg !16018

if.end68.i.i:                                     ; preds = %if.end65.i.i
  %58 = load i64, i64* %size.addr.i11.i, align 8, !dbg !16019
  %cmp69.i.i = icmp ule i64 %58, 4194304, !dbg !16021
  br i1 %cmp69.i.i, label %if.then70.i.i, label %if.end71.i.i, !dbg !16022

if.then70.i.i:                                    ; preds = %if.end68.i.i
  store i32 22, i32* %retval.i.i, align 4, !dbg !16023
  br label %kmalloc_index.exit.i, !dbg !16023

if.end71.i.i:                                     ; preds = %if.end68.i.i
  %59 = load i64, i64* %size.addr.i11.i, align 8, !dbg !16024
  %cmp72.i.i = icmp ule i64 %59, 8388608, !dbg !16026
  br i1 %cmp72.i.i, label %if.then73.i.i, label %if.end74.i.i, !dbg !16027

if.then73.i.i:                                    ; preds = %if.end71.i.i
  store i32 23, i32* %retval.i.i, align 4, !dbg !16028
  br label %kmalloc_index.exit.i, !dbg !16028

if.end74.i.i:                                     ; preds = %if.end71.i.i
  %60 = load i64, i64* %size.addr.i11.i, align 8, !dbg !16029
  %cmp75.i.i = icmp ule i64 %60, 16777216, !dbg !16031
  br i1 %cmp75.i.i, label %if.then76.i.i, label %if.end77.i.i, !dbg !16032

if.then76.i.i:                                    ; preds = %if.end74.i.i
  store i32 24, i32* %retval.i.i, align 4, !dbg !16033
  br label %kmalloc_index.exit.i, !dbg !16033

if.end77.i.i:                                     ; preds = %if.end74.i.i
  %61 = load i64, i64* %size.addr.i11.i, align 8, !dbg !16034
  %cmp78.i.i = icmp ule i64 %61, 33554432, !dbg !16036
  br i1 %cmp78.i.i, label %if.then79.i.i, label %if.end80.i.i, !dbg !16037

if.then79.i.i:                                    ; preds = %if.end77.i.i
  store i32 25, i32* %retval.i.i, align 4, !dbg !16038
  br label %kmalloc_index.exit.i, !dbg !16038

if.end80.i.i:                                     ; preds = %if.end77.i.i
  %62 = load i64, i64* %size.addr.i11.i, align 8, !dbg !16039
  %cmp81.i.i = icmp ule i64 %62, 67108864, !dbg !16041
  br i1 %cmp81.i.i, label %if.then82.i.i, label %if.end83.i.i, !dbg !16042

if.then82.i.i:                                    ; preds = %if.end80.i.i
  store i32 26, i32* %retval.i.i, align 4, !dbg !16043
  br label %kmalloc_index.exit.i, !dbg !16043

if.end83.i.i:                                     ; preds = %if.end80.i.i
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.23, i64 0, i64 0), i32 382, i32 0, i64 12) #8, !dbg !16044, !srcloc !16047
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.unreachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 105) #8, !dbg !16048, !srcloc !16051
  unreachable, !dbg !16052

kmalloc_index.exit.i:                             ; preds = %if.then82.i.i, %if.then79.i.i, %if.then76.i.i, %if.then73.i.i, %if.then70.i.i, %if.then67.i.i, %if.then64.i.i, %if.then61.i.i, %if.then58.i.i, %if.then55.i.i, %if.then52.i.i, %if.then49.i.i, %if.then46.i.i, %if.then43.i.i, %if.then40.i.i, %if.then37.i.i, %if.then34.i.i, %if.then31.i.i, %if.then28.i.i, %if.then25.i.i, %if.then22.i.i, %if.then19.i.i, %if.then16.i.i, %if.then13.i.i, %if.then10.i.i, %if.then5.i.i, %if.then1.i.i, %if.then.i.i
  %63 = load i32, i32* %retval.i.i, align 4, !dbg !16053
  store i32 %63, i32* %index.i, align 4, !dbg !16054
  %64 = load i32, i32* %index.i, align 4, !dbg !16055
  %tobool.i = icmp ne i32 %64, 0, !dbg !16055
  br i1 %tobool.i, label %if.end4.i, label %if.then3.i, !dbg !16057

if.then3.i:                                       ; preds = %kmalloc_index.exit.i
  store i8* inttoptr (i64 16 to i8*), i8** %retval.i, align 8, !dbg !16058
  br label %kmalloc.exit, !dbg !16058

if.end4.i:                                        ; preds = %kmalloc_index.exit.i
  %65 = load i32, i32* %flags.addr.i, align 4, !dbg !16059
  store i32 %65, i32* %flags.addr.i13.i, align 4
  %66 = load i32, i32* %flags.addr.i13.i, align 4, !dbg !16060
  %and.i.i = and i32 %66, 17, !dbg !16060
  %cmp.i14.i = icmp eq i32 %and.i.i, 0, !dbg !16060
  %lnot.i.i = xor i1 %cmp.i14.i, true, !dbg !16060
  %lnot.ext.i.i = zext i1 %cmp.i14.i to i32, !dbg !16060
  %conv.i.i = sext i32 %lnot.ext.i.i to i64, !dbg !16060
  br i1 %cmp.i14.i, label %if.then.i15.i, label %if.end.i16.i, !dbg !16062

if.then.i15.i:                                    ; preds = %if.end4.i
  store i32 0, i32* %retval.i12.i, align 4, !dbg !16063
  br label %kmalloc_type.exit.i, !dbg !16063

if.end.i16.i:                                     ; preds = %if.end4.i
  %67 = load i32, i32* %flags.addr.i13.i, align 4, !dbg !16064
  %and2.i.i = and i32 %67, 1, !dbg !16065
  %tobool3.i.i = icmp ne i32 %and2.i.i, 0, !dbg !16064
  %68 = zext i1 %tobool3.i.i to i64, !dbg !16064
  %cond.i.i = select i1 %tobool3.i.i, i32 2, i32 1, !dbg !16064
  store i32 %cond.i.i, i32* %retval.i12.i, align 4, !dbg !16066
  br label %kmalloc_type.exit.i, !dbg !16066

kmalloc_type.exit.i:                              ; preds = %if.end.i16.i, %if.then.i15.i
  %69 = load i32, i32* %retval.i12.i, align 4, !dbg !16067
  %idxprom.i = zext i32 %69 to i64, !dbg !16068
  %arrayidx.i = getelementptr [3 x [14 x %struct.kmem_cache*]], [3 x [14 x %struct.kmem_cache*]]* @kmalloc_caches, i64 0, i64 %idxprom.i, !dbg !16068
  %70 = load i32, i32* %index.i, align 4, !dbg !16069
  %idxprom6.i = zext i32 %70 to i64, !dbg !16068
  %arrayidx7.i = getelementptr [14 x %struct.kmem_cache*], [14 x %struct.kmem_cache*]* %arrayidx.i, i64 0, i64 %idxprom6.i, !dbg !16068
  %71 = load %struct.kmem_cache*, %struct.kmem_cache** %arrayidx7.i, align 8, !dbg !16068
  %72 = load i32, i32* %flags.addr.i, align 4, !dbg !16070
  %73 = load i64, i64* %size.addr.i, align 8, !dbg !16071
  store %struct.kmem_cache* %71, %struct.kmem_cache** %s.addr.i.i, align 8
  store i32 %72, i32* %flags.addr.i17.i, align 4
  store i64 %73, i64* %size.addr.i18.i, align 8
  %74 = load %struct.kmem_cache*, %struct.kmem_cache** %s.addr.i.i, align 8, !dbg !16072
  %75 = load i32, i32* %flags.addr.i17.i, align 4, !dbg !16073
  %call.i19.i = call noalias i8* @kmem_cache_alloc(%struct.kmem_cache* %74, i32 %75) #14, !dbg !16074
  %ptrint.i.i = ptrtoint i8* %call.i19.i to i64, !dbg !16074
  %maskedptr.i.i = and i64 %ptrint.i.i, 7, !dbg !16074
  %maskcond.i.i = icmp eq i64 %maskedptr.i.i, 0, !dbg !16074
  call void @llvm.assume(i1 %maskcond.i.i) #8, !dbg !16074
  store i8* %call.i19.i, i8** %ret.i.i, align 8, !dbg !15799
  %76 = load %struct.kmem_cache*, %struct.kmem_cache** %s.addr.i.i, align 8, !dbg !16075
  %77 = load i8*, i8** %ret.i.i, align 8, !dbg !16076
  %78 = load i64, i64* %size.addr.i18.i, align 8, !dbg !16077
  %79 = load i32, i32* %flags.addr.i17.i, align 4, !dbg !16078
  %call1.i.i = call i8* @kasan_kmalloc(%struct.kmem_cache* %76, i8* %77, i64 %78, i32 %79) #14, !dbg !16079
  store i8* %call1.i.i, i8** %ret.i.i, align 8, !dbg !16080
  %80 = load i8*, i8** %ret.i.i, align 8, !dbg !16081
  store i8* %80, i8** %retval.i, align 8, !dbg !16082
  br label %kmalloc.exit, !dbg !16082

if.end9.i:                                        ; preds = %if.end
  %81 = load i64, i64* %size.addr.i, align 8, !dbg !16083
  %82 = load i32, i32* %flags.addr.i, align 4, !dbg !16084
  %call10.i = call noalias i8* @__kmalloc(i64 %81, i32 %82) #14, !dbg !16085
  %ptrint.i = ptrtoint i8* %call10.i to i64, !dbg !16085
  %maskedptr.i = and i64 %ptrint.i, 7, !dbg !16085
  %maskcond.i = icmp eq i64 %maskedptr.i, 0, !dbg !16085
  call void @llvm.assume(i1 %maskcond.i) #8, !dbg !16085
  store i8* %call10.i, i8** %retval.i, align 8, !dbg !16086
  br label %kmalloc.exit, !dbg !16086

kmalloc.exit:                                     ; preds = %if.then1.i, %if.then3.i, %kmalloc_type.exit.i, %if.end9.i
  %83 = load i8*, i8** %retval.i, align 8, !dbg !16087
  %84 = bitcast i8* %83 to %struct.macb_tx_skb*, !dbg !16088
  %85 = load %struct.macb_queue*, %struct.macb_queue** %queue, align 8, !dbg !16089
  %tx_skb = getelementptr inbounds %struct.macb_queue, %struct.macb_queue* %85, i32 0, i32 14, !dbg !16090
  store %struct.macb_tx_skb* %84, %struct.macb_tx_skb** %tx_skb, align 8, !dbg !16091
  %86 = load %struct.macb_queue*, %struct.macb_queue** %queue, align 8, !dbg !16092
  %tx_skb9 = getelementptr inbounds %struct.macb_queue, %struct.macb_queue* %86, i32 0, i32 14, !dbg !16094
  %87 = load %struct.macb_tx_skb*, %struct.macb_tx_skb** %tx_skb9, align 8, !dbg !16094
  %tobool10 = icmp ne %struct.macb_tx_skb* %87, null, !dbg !16092
  br i1 %tobool10, label %if.end12, label %if.then11, !dbg !16095

if.then11:                                        ; preds = %kmalloc.exit
  br label %out_err, !dbg !16096

if.end12:                                         ; preds = %kmalloc.exit
  %88 = load %struct.macb*, %struct.macb** %bp.addr, align 8, !dbg !16097
  %call13 = call i32 @macb_dma_desc_get_size(%struct.macb* %88) #12, !dbg !16097
  %89 = load %struct.macb*, %struct.macb** %bp.addr, align 8, !dbg !16097
  %rx_ring_size = getelementptr inbounds %struct.macb, %struct.macb* %89, i32 0, i32 5, !dbg !16097
  %90 = load i32, i32* %rx_ring_size, align 8, !dbg !16097
  %mul14 = mul i32 %call13, %90, !dbg !16097
  %91 = load %struct.macb*, %struct.macb** %bp.addr, align 8, !dbg !16098
  %rx_bd_rd_prefetch = getelementptr inbounds %struct.macb, %struct.macb* %91, i32 0, i32 46, !dbg !16099
  %92 = load i32, i32* %rx_bd_rd_prefetch, align 8, !dbg !16099
  %add15 = add i32 %mul14, %92, !dbg !16100
  store i32 %add15, i32* %size, align 4, !dbg !16101
  %93 = load %struct.macb*, %struct.macb** %bp.addr, align 8, !dbg !16102
  %pdev16 = getelementptr inbounds %struct.macb, %struct.macb* %93, i32 0, i32 11, !dbg !16103
  %94 = load %struct.platform_device*, %struct.platform_device** %pdev16, align 8, !dbg !16103
  %dev17 = getelementptr inbounds %struct.platform_device, %struct.platform_device* %94, i32 0, i32 3, !dbg !16104
  %95 = load i32, i32* %size, align 4, !dbg !16105
  %conv18 = sext i32 %95 to i64, !dbg !16105
  %96 = load %struct.macb_queue*, %struct.macb_queue** %queue, align 8, !dbg !16106
  %rx_ring_dma = getelementptr inbounds %struct.macb_queue, %struct.macb_queue* %96, i32 0, i32 17, !dbg !16107
  %call19 = call i8* @dma_alloc_coherent(%struct.device* %dev17, i64 %conv18, i64* %rx_ring_dma, i32 3264) #12, !dbg !16108
  %97 = bitcast i8* %call19 to %struct.macb_dma_desc*, !dbg !16108
  %98 = load %struct.macb_queue*, %struct.macb_queue** %queue, align 8, !dbg !16109
  %rx_ring = getelementptr inbounds %struct.macb_queue, %struct.macb_queue* %98, i32 0, i32 21, !dbg !16110
  store %struct.macb_dma_desc* %97, %struct.macb_dma_desc** %rx_ring, align 8, !dbg !16111
  %99 = load %struct.macb_queue*, %struct.macb_queue** %queue, align 8, !dbg !16112
  %rx_ring20 = getelementptr inbounds %struct.macb_queue, %struct.macb_queue* %99, i32 0, i32 21, !dbg !16114
  %100 = load %struct.macb_dma_desc*, %struct.macb_dma_desc** %rx_ring20, align 8, !dbg !16114
  %tobool21 = icmp ne %struct.macb_dma_desc* %100, null, !dbg !16112
  br i1 %tobool21, label %if.end23, label %if.then22, !dbg !16115

if.then22:                                        ; preds = %if.end12
  br label %out_err, !dbg !16116

if.end23:                                         ; preds = %if.end12
  br label %for.inc, !dbg !16117

for.inc:                                          ; preds = %if.end23
  %101 = load i32, i32* %q, align 4, !dbg !16118
  %inc = add i32 %101, 1, !dbg !16118
  store i32 %inc, i32* %q, align 4, !dbg !16118
  %102 = load %struct.macb_queue*, %struct.macb_queue** %queue, align 8, !dbg !16119
  %incdec.ptr = getelementptr %struct.macb_queue, %struct.macb_queue* %102, i32 1, !dbg !16119
  store %struct.macb_queue* %incdec.ptr, %struct.macb_queue** %queue, align 8, !dbg !16119
  br label %for.cond, !dbg !16120, !llvm.loop !16121

for.end:                                          ; preds = %for.cond
  %103 = load %struct.macb*, %struct.macb** %bp.addr, align 8, !dbg !16123
  %macbgem_ops = getelementptr inbounds %struct.macb, %struct.macb* %103, i32 0, i32 19, !dbg !16125
  %mog_alloc_rx_buffers = getelementptr inbounds %struct.macb_or_gem_ops, %struct.macb_or_gem_ops* %macbgem_ops, i32 0, i32 0, !dbg !16126
  %104 = load i32 (%struct.macb*)*, i32 (%struct.macb*)** %mog_alloc_rx_buffers, align 8, !dbg !16126
  %105 = load %struct.macb*, %struct.macb** %bp.addr, align 8, !dbg !16127
  %call24 = call i32 %104(%struct.macb* %105) #12, !dbg !16123
  %tobool25 = icmp ne i32 %call24, 0, !dbg !16123
  br i1 %tobool25, label %if.then26, label %if.end27, !dbg !16128

if.then26:                                        ; preds = %for.end
  br label %out_err, !dbg !16129

if.end27:                                         ; preds = %for.end
  store i32 0, i32* %retval, align 4, !dbg !16130
  br label %return, !dbg !16130

out_err:                                          ; preds = %if.then26, %if.then22, %if.then11, %if.then
  call void @llvm.dbg.label(metadata !16131), !dbg !16132
  %106 = load %struct.macb*, %struct.macb** %bp.addr, align 8, !dbg !16133
  call void @macb_free_consistent(%struct.macb* %106) #12, !dbg !16134
  store i32 -12, i32* %retval, align 4, !dbg !16135
  br label %return, !dbg !16135

return:                                           ; preds = %out_err, %if.end27
  %107 = load i32, i32* %retval, align 4, !dbg !16136
  ret i32 %107, !dbg !16136
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @napi_enable(%struct.napi_struct* %n) #2 !dbg !16137 {
entry:
  %n.addr = alloca %struct.napi_struct*, align 8
  store %struct.napi_struct* %n, %struct.napi_struct** %n.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.napi_struct** %n.addr, metadata !16140, metadata !DIExpression()), !dbg !16141
  br label %do.body, !dbg !16142

do.body:                                          ; preds = %entry
  %0 = load %struct.napi_struct*, %struct.napi_struct** %n.addr, align 8, !dbg !16143
  %state = getelementptr inbounds %struct.napi_struct, %struct.napi_struct* %0, i32 0, i32 1, !dbg !16143
  %call = call zeroext i1 @test_bit(i64 0, i64* %state) #12, !dbg !16143
  %lnot = xor i1 %call, true, !dbg !16143
  %lnot1 = xor i1 %lnot, true, !dbg !16143
  %lnot2 = xor i1 %lnot1, true, !dbg !16143
  %lnot.ext = zext i1 %lnot2 to i32, !dbg !16143
  %conv = sext i32 %lnot.ext to i64, !dbg !16143
  %tobool = icmp ne i64 %conv, 0, !dbg !16143
  br i1 %tobool, label %if.then, label %if.end, !dbg !16146

if.then:                                          ; preds = %do.body
  br label %do.body3, !dbg !16143

do.body3:                                         ; preds = %if.then
  br label %do.body4, !dbg !16147

do.body4:                                         ; preds = %do.body3
  br label %do.end, !dbg !16149

do.end:                                           ; preds = %do.body4
  br label %do.body5, !dbg !16147

do.body5:                                         ; preds = %do.end
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.24, i64 0, i64 0), i32 509, i32 0, i64 12) #8, !dbg !16151, !srcloc !16153
  br label %do.end6, !dbg !16151

do.end6:                                          ; preds = %do.body5
  br label %do.body7, !dbg !16147

do.body7:                                         ; preds = %do.end6
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.unreachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 281) #8, !dbg !16154, !srcloc !16157
  unreachable, !dbg !16158

do.end8:                                          ; No predecessors!
  br label %do.end9, !dbg !16147

do.end9:                                          ; preds = %do.end8
  br label %if.end, !dbg !16147

if.end:                                           ; preds = %do.end9, %do.body
  br label %do.end10, !dbg !16146

do.end10:                                         ; preds = %if.end
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #8, !dbg !16159, !srcloc !16160
  %1 = load %struct.napi_struct*, %struct.napi_struct** %n.addr, align 8, !dbg !16161
  %state11 = getelementptr inbounds %struct.napi_struct, %struct.napi_struct* %1, i32 0, i32 1, !dbg !16162
  call void @clear_bit(i64 0, i64* %state11) #12, !dbg !16163
  %2 = load %struct.napi_struct*, %struct.napi_struct** %n.addr, align 8, !dbg !16164
  %state12 = getelementptr inbounds %struct.napi_struct, %struct.napi_struct* %2, i32 0, i32 1, !dbg !16165
  call void @clear_bit(i64 3, i64* %state12) #12, !dbg !16166
  ret void, !dbg !16167
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @macb_init_hw(%struct.macb* %bp) #2 !dbg !16168 {
entry:
  %bp.addr = alloca %struct.macb*, align 8
  %config = alloca i32, align 4
  store %struct.macb* %bp, %struct.macb** %bp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.macb** %bp.addr, metadata !16169, metadata !DIExpression()), !dbg !16170
  call void @llvm.dbg.declare(metadata i32* %config, metadata !16171, metadata !DIExpression()), !dbg !16172
  %0 = load %struct.macb*, %struct.macb** %bp.addr, align 8, !dbg !16173
  call void @macb_reset_hw(%struct.macb* %0) #12, !dbg !16174
  %1 = load %struct.macb*, %struct.macb** %bp.addr, align 8, !dbg !16175
  call void @macb_set_hwaddr(%struct.macb* %1) #12, !dbg !16176
  %2 = load %struct.macb*, %struct.macb** %bp.addr, align 8, !dbg !16177
  %call = call i32 @macb_mdc_clk_div(%struct.macb* %2) #12, !dbg !16178
  store i32 %call, i32* %config, align 4, !dbg !16179
  %3 = load i32, i32* %config, align 4, !dbg !16180
  store i32 %3, i32* %config, align 4, !dbg !16180
  %4 = load i32, i32* %config, align 4, !dbg !16181
  %or = or i32 %4, 131072, !dbg !16181
  store i32 %or, i32* %config, align 4, !dbg !16181
  %5 = load %struct.macb*, %struct.macb** %bp.addr, align 8, !dbg !16182
  %caps = getelementptr inbounds %struct.macb, %struct.macb* %5, i32 0, i32 23, !dbg !16184
  %6 = load i32, i32* %caps, align 8, !dbg !16184
  %and = and i32 %6, 32, !dbg !16185
  %tobool = icmp ne i32 %and, 0, !dbg !16185
  br i1 %tobool, label %if.then, label %if.else, !dbg !16186

if.then:                                          ; preds = %entry
  %7 = load i32, i32* %config, align 4, !dbg !16187
  %or1 = or i32 %7, 8, !dbg !16187
  store i32 %or1, i32* %config, align 4, !dbg !16187
  br label %if.end, !dbg !16188

if.else:                                          ; preds = %entry
  %8 = load i32, i32* %config, align 4, !dbg !16189
  %or2 = or i32 %8, 256, !dbg !16189
  store i32 %or2, i32* %config, align 4, !dbg !16189
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %9 = load %struct.macb*, %struct.macb** %bp.addr, align 8, !dbg !16190
  %dev = getelementptr inbounds %struct.macb, %struct.macb* %9, i32 0, i32 17, !dbg !16192
  %10 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !16192
  %flags = getelementptr inbounds %struct.net_device, %struct.net_device* %10, i32 0, i32 36, !dbg !16193
  %11 = load i32, i32* %flags, align 8, !dbg !16193
  %and3 = and i32 %11, 256, !dbg !16194
  %tobool4 = icmp ne i32 %and3, 0, !dbg !16194
  br i1 %tobool4, label %if.then5, label %if.else7, !dbg !16195

if.then5:                                         ; preds = %if.end
  %12 = load i32, i32* %config, align 4, !dbg !16196
  %or6 = or i32 %12, 16, !dbg !16196
  store i32 %or6, i32* %config, align 4, !dbg !16196
  br label %if.end15, !dbg !16197

if.else7:                                         ; preds = %if.end
  %13 = load %struct.macb*, %struct.macb** %bp.addr, align 8, !dbg !16198
  %call8 = call zeroext i1 @macb_is_gem(%struct.macb* %13) #12, !dbg !16200
  br i1 %call8, label %land.lhs.true, label %if.end14, !dbg !16201

land.lhs.true:                                    ; preds = %if.else7
  %14 = load %struct.macb*, %struct.macb** %bp.addr, align 8, !dbg !16202
  %dev9 = getelementptr inbounds %struct.macb, %struct.macb* %14, i32 0, i32 17, !dbg !16203
  %15 = load %struct.net_device*, %struct.net_device** %dev9, align 8, !dbg !16203
  %features = getelementptr inbounds %struct.net_device, %struct.net_device* %15, i32 0, i32 15, !dbg !16204
  %16 = load i64, i64* %features, align 8, !dbg !16204
  %and10 = and i64 %16, 1099511627776, !dbg !16205
  %tobool11 = icmp ne i64 %and10, 0, !dbg !16205
  br i1 %tobool11, label %if.then12, label %if.end14, !dbg !16206

if.then12:                                        ; preds = %land.lhs.true
  %17 = load i32, i32* %config, align 4, !dbg !16207
  %or13 = or i32 %17, 16777216, !dbg !16207
  store i32 %or13, i32* %config, align 4, !dbg !16207
  br label %if.end14, !dbg !16208

if.end14:                                         ; preds = %if.then12, %land.lhs.true, %if.else7
  br label %if.end15

if.end15:                                         ; preds = %if.end14, %if.then5
  %18 = load %struct.macb*, %struct.macb** %bp.addr, align 8, !dbg !16209
  %dev16 = getelementptr inbounds %struct.macb, %struct.macb* %18, i32 0, i32 17, !dbg !16211
  %19 = load %struct.net_device*, %struct.net_device** %dev16, align 8, !dbg !16211
  %flags17 = getelementptr inbounds %struct.net_device, %struct.net_device* %19, i32 0, i32 36, !dbg !16212
  %20 = load i32, i32* %flags17, align 8, !dbg !16212
  %and18 = and i32 %20, 2, !dbg !16213
  %tobool19 = icmp ne i32 %and18, 0, !dbg !16213
  br i1 %tobool19, label %if.end22, label %if.then20, !dbg !16214

if.then20:                                        ; preds = %if.end15
  %21 = load i32, i32* %config, align 4, !dbg !16215
  %or21 = or i32 %21, 32, !dbg !16215
  store i32 %or21, i32* %config, align 4, !dbg !16215
  br label %if.end22, !dbg !16216

if.end22:                                         ; preds = %if.then20, %if.end15
  %22 = load %struct.macb*, %struct.macb** %bp.addr, align 8, !dbg !16217
  %call23 = call i32 @macb_dbw(%struct.macb* %22) #12, !dbg !16218
  %23 = load i32, i32* %config, align 4, !dbg !16219
  %or24 = or i32 %23, %call23, !dbg !16219
  store i32 %or24, i32* %config, align 4, !dbg !16219
  %24 = load %struct.macb*, %struct.macb** %bp.addr, align 8, !dbg !16220
  %macb_reg_writel = getelementptr inbounds %struct.macb, %struct.macb* %24, i32 0, i32 3, !dbg !16220
  %25 = load void (%struct.macb*, i32, i32)*, void (%struct.macb*, i32, i32)** %macb_reg_writel, align 8, !dbg !16220
  %26 = load %struct.macb*, %struct.macb** %bp.addr, align 8, !dbg !16220
  %27 = load i32, i32* %config, align 4, !dbg !16220
  call void %25(%struct.macb* %26, i32 4, i32 %27) #12, !dbg !16220
  %28 = load %struct.macb*, %struct.macb** %bp.addr, align 8, !dbg !16221
  %caps25 = getelementptr inbounds %struct.macb, %struct.macb* %28, i32 0, i32 23, !dbg !16223
  %29 = load i32, i32* %caps25, align 8, !dbg !16223
  %and26 = and i32 %29, 32, !dbg !16224
  %tobool27 = icmp ne i32 %and26, 0, !dbg !16224
  br i1 %tobool27, label %land.lhs.true28, label %if.end33, !dbg !16225

land.lhs.true28:                                  ; preds = %if.end22
  %30 = load %struct.macb*, %struct.macb** %bp.addr, align 8, !dbg !16226
  %jumbo_max_len = getelementptr inbounds %struct.macb, %struct.macb* %30, i32 0, i32 32, !dbg !16227
  %31 = load i32, i32* %jumbo_max_len, align 4, !dbg !16227
  %tobool29 = icmp ne i32 %31, 0, !dbg !16226
  br i1 %tobool29, label %if.then30, label %if.end33, !dbg !16228

if.then30:                                        ; preds = %land.lhs.true28
  %32 = load %struct.macb*, %struct.macb** %bp.addr, align 8, !dbg !16229
  %macb_reg_writel31 = getelementptr inbounds %struct.macb, %struct.macb* %32, i32 0, i32 3, !dbg !16229
  %33 = load void (%struct.macb*, i32, i32)*, void (%struct.macb*, i32, i32)** %macb_reg_writel31, align 8, !dbg !16229
  %34 = load %struct.macb*, %struct.macb** %bp.addr, align 8, !dbg !16229
  %35 = load %struct.macb*, %struct.macb** %bp.addr, align 8, !dbg !16229
  %jumbo_max_len32 = getelementptr inbounds %struct.macb, %struct.macb* %35, i32 0, i32 32, !dbg !16229
  %36 = load i32, i32* %jumbo_max_len32, align 4, !dbg !16229
  call void %33(%struct.macb* %34, i32 72, i32 %36) #12, !dbg !16229
  br label %if.end33, !dbg !16229

if.end33:                                         ; preds = %if.then30, %land.lhs.true28, %if.end22
  %37 = load %struct.macb*, %struct.macb** %bp.addr, align 8, !dbg !16230
  %rx_frm_len_mask = getelementptr inbounds %struct.macb, %struct.macb* %37, i32 0, i32 31, !dbg !16231
  store i32 4095, i32* %rx_frm_len_mask, align 8, !dbg !16232
  %38 = load %struct.macb*, %struct.macb** %bp.addr, align 8, !dbg !16233
  %caps34 = getelementptr inbounds %struct.macb, %struct.macb* %38, i32 0, i32 23, !dbg !16235
  %39 = load i32, i32* %caps34, align 8, !dbg !16235
  %and35 = and i32 %39, 32, !dbg !16236
  %tobool36 = icmp ne i32 %and35, 0, !dbg !16236
  br i1 %tobool36, label %if.then37, label %if.end39, !dbg !16237

if.then37:                                        ; preds = %if.end33
  %40 = load %struct.macb*, %struct.macb** %bp.addr, align 8, !dbg !16238
  %rx_frm_len_mask38 = getelementptr inbounds %struct.macb, %struct.macb* %40, i32 0, i32 31, !dbg !16239
  store i32 16383, i32* %rx_frm_len_mask38, align 8, !dbg !16240
  br label %if.end39, !dbg !16238

if.end39:                                         ; preds = %if.then37, %if.end33
  %41 = load %struct.macb*, %struct.macb** %bp.addr, align 8, !dbg !16241
  call void @macb_configure_dma(%struct.macb* %41) #12, !dbg !16242
  ret void, !dbg !16243
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @macb_phylink_connect(%struct.macb* %bp) #2 !dbg !16244 {
entry:
  %retval = alloca i32, align 4
  %bp.addr = alloca %struct.macb*, align 8
  %dn = alloca %struct.device_node*, align 8
  %dev1 = alloca %struct.net_device*, align 8
  %phydev = alloca %struct.phy_device*, align 8
  %ret = alloca i32, align 4
  store %struct.macb* %bp, %struct.macb** %bp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.macb** %bp.addr, metadata !16245, metadata !DIExpression()), !dbg !16246
  call void @llvm.dbg.declare(metadata %struct.device_node** %dn, metadata !16247, metadata !DIExpression()), !dbg !16248
  %0 = load %struct.macb*, %struct.macb** %bp.addr, align 8, !dbg !16249
  %pdev = getelementptr inbounds %struct.macb, %struct.macb* %0, i32 0, i32 11, !dbg !16250
  %1 = load %struct.platform_device*, %struct.platform_device** %pdev, align 8, !dbg !16250
  %dev = getelementptr inbounds %struct.platform_device, %struct.platform_device* %1, i32 0, i32 3, !dbg !16251
  %of_node = getelementptr inbounds %struct.device, %struct.device* %dev, i32 0, i32 23, !dbg !16252
  %2 = load %struct.device_node*, %struct.device_node** %of_node, align 8, !dbg !16252
  store %struct.device_node* %2, %struct.device_node** %dn, align 8, !dbg !16248
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev1, metadata !16253, metadata !DIExpression()), !dbg !16254
  %3 = load %struct.macb*, %struct.macb** %bp.addr, align 8, !dbg !16255
  %dev2 = getelementptr inbounds %struct.macb, %struct.macb* %3, i32 0, i32 17, !dbg !16256
  %4 = load %struct.net_device*, %struct.net_device** %dev2, align 8, !dbg !16256
  store %struct.net_device* %4, %struct.net_device** %dev1, align 8, !dbg !16254
  call void @llvm.dbg.declare(metadata %struct.phy_device** %phydev, metadata !16257, metadata !DIExpression()), !dbg !16258
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !16259, metadata !DIExpression()), !dbg !16260
  %5 = load %struct.device_node*, %struct.device_node** %dn, align 8, !dbg !16261
  %tobool = icmp ne %struct.device_node* %5, null, !dbg !16261
  br i1 %tobool, label %if.then, label %if.end, !dbg !16263

if.then:                                          ; preds = %entry
  %6 = load %struct.macb*, %struct.macb** %bp.addr, align 8, !dbg !16264
  %phylink = getelementptr inbounds %struct.macb, %struct.macb* %6, i32 0, i32 21, !dbg !16265
  %7 = load %struct.phylink*, %struct.phylink** %phylink, align 8, !dbg !16265
  %8 = load %struct.device_node*, %struct.device_node** %dn, align 8, !dbg !16266
  %call = call i32 @phylink_of_phy_connect(%struct.phylink* %7, %struct.device_node* %8, i32 0) #12, !dbg !16267
  store i32 %call, i32* %ret, align 4, !dbg !16268
  br label %if.end, !dbg !16269

if.end:                                           ; preds = %if.then, %entry
  %9 = load %struct.device_node*, %struct.device_node** %dn, align 8, !dbg !16270
  %tobool3 = icmp ne %struct.device_node* %9, null, !dbg !16270
  br i1 %tobool3, label %lor.lhs.false, label %if.then6, !dbg !16272

lor.lhs.false:                                    ; preds = %if.end
  %10 = load i32, i32* %ret, align 4, !dbg !16273
  %tobool4 = icmp ne i32 %10, 0, !dbg !16273
  br i1 %tobool4, label %land.lhs.true, label %if.end13, !dbg !16274

land.lhs.true:                                    ; preds = %lor.lhs.false
  %11 = load %struct.device_node*, %struct.device_node** %dn, align 8, !dbg !16275
  %call5 = call zeroext i1 @macb_phy_handle_exists(%struct.device_node* %11) #12, !dbg !16276
  br i1 %call5, label %if.end13, label %if.then6, !dbg !16277

if.then6:                                         ; preds = %land.lhs.true, %if.end
  %12 = load %struct.macb*, %struct.macb** %bp.addr, align 8, !dbg !16278
  %mii_bus = getelementptr inbounds %struct.macb, %struct.macb* %12, i32 0, i32 20, !dbg !16280
  %13 = load %struct.mii_bus*, %struct.mii_bus** %mii_bus, align 8, !dbg !16280
  %call7 = call %struct.phy_device* @phy_find_first(%struct.mii_bus* %13) #12, !dbg !16281
  store %struct.phy_device* %call7, %struct.phy_device** %phydev, align 8, !dbg !16282
  %14 = load %struct.phy_device*, %struct.phy_device** %phydev, align 8, !dbg !16283
  %tobool8 = icmp ne %struct.phy_device* %14, null, !dbg !16283
  br i1 %tobool8, label %if.end10, label %if.then9, !dbg !16285

if.then9:                                         ; preds = %if.then6
  %15 = load %struct.net_device*, %struct.net_device** %dev1, align 8, !dbg !16286
  call void (%struct.net_device*, i8*, ...) @netdev_err(%struct.net_device* %15, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.25, i64 0, i64 0)) #13, !dbg !16288
  store i32 -6, i32* %retval, align 4, !dbg !16289
  br label %return, !dbg !16289

if.end10:                                         ; preds = %if.then6
  %16 = load %struct.macb*, %struct.macb** %bp.addr, align 8, !dbg !16290
  %phylink11 = getelementptr inbounds %struct.macb, %struct.macb* %16, i32 0, i32 21, !dbg !16291
  %17 = load %struct.phylink*, %struct.phylink** %phylink11, align 8, !dbg !16291
  %18 = load %struct.phy_device*, %struct.phy_device** %phydev, align 8, !dbg !16292
  %call12 = call i32 @phylink_connect_phy(%struct.phylink* %17, %struct.phy_device* %18) #12, !dbg !16293
  store i32 %call12, i32* %ret, align 4, !dbg !16294
  br label %if.end13, !dbg !16295

if.end13:                                         ; preds = %if.end10, %land.lhs.true, %lor.lhs.false
  %19 = load i32, i32* %ret, align 4, !dbg !16296
  %tobool14 = icmp ne i32 %19, 0, !dbg !16296
  br i1 %tobool14, label %if.then15, label %if.end16, !dbg !16298

if.then15:                                        ; preds = %if.end13
  %20 = load %struct.net_device*, %struct.net_device** %dev1, align 8, !dbg !16299
  %21 = load i32, i32* %ret, align 4, !dbg !16301
  call void (%struct.net_device*, i8*, ...) @netdev_err(%struct.net_device* %20, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.26, i64 0, i64 0), i32 %21) #13, !dbg !16302
  %22 = load i32, i32* %ret, align 4, !dbg !16303
  store i32 %22, i32* %retval, align 4, !dbg !16304
  br label %return, !dbg !16304

if.end16:                                         ; preds = %if.end13
  %23 = load %struct.macb*, %struct.macb** %bp.addr, align 8, !dbg !16305
  %phylink17 = getelementptr inbounds %struct.macb, %struct.macb* %23, i32 0, i32 21, !dbg !16306
  %24 = load %struct.phylink*, %struct.phylink** %phylink17, align 8, !dbg !16306
  call void @phylink_start(%struct.phylink* %24) #12, !dbg !16307
  store i32 0, i32* %retval, align 4, !dbg !16308
  br label %return, !dbg !16308

return:                                           ; preds = %if.end16, %if.then15, %if.then9
  %25 = load i32, i32* %retval, align 4, !dbg !16309
  ret i32 %25, !dbg !16309
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @macb_reset_hw(%struct.macb* %bp) #2 !dbg !16310 {
entry:
  %bp.addr = alloca %struct.macb*, align 8
  %queue = alloca %struct.macb_queue*, align 8
  %q = alloca i32, align 4
  %ctrl = alloca i32, align 4
  store %struct.macb* %bp, %struct.macb** %bp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.macb** %bp.addr, metadata !16311, metadata !DIExpression()), !dbg !16312
  call void @llvm.dbg.declare(metadata %struct.macb_queue** %queue, metadata !16313, metadata !DIExpression()), !dbg !16314
  call void @llvm.dbg.declare(metadata i32* %q, metadata !16315, metadata !DIExpression()), !dbg !16316
  call void @llvm.dbg.declare(metadata i32* %ctrl, metadata !16317, metadata !DIExpression()), !dbg !16318
  %0 = load %struct.macb*, %struct.macb** %bp.addr, align 8, !dbg !16319
  %macb_reg_readl = getelementptr inbounds %struct.macb, %struct.macb* %0, i32 0, i32 2, !dbg !16319
  %1 = load i32 (%struct.macb*, i32)*, i32 (%struct.macb*, i32)** %macb_reg_readl, align 8, !dbg !16319
  %2 = load %struct.macb*, %struct.macb** %bp.addr, align 8, !dbg !16319
  %call = call i32 %1(%struct.macb* %2, i32 0) #12, !dbg !16319
  store i32 %call, i32* %ctrl, align 4, !dbg !16318
  %3 = load i32, i32* %ctrl, align 4, !dbg !16320
  %and = and i32 %3, -13, !dbg !16320
  store i32 %and, i32* %ctrl, align 4, !dbg !16320
  %4 = load i32, i32* %ctrl, align 4, !dbg !16321
  %or = or i32 %4, 32, !dbg !16321
  store i32 %or, i32* %ctrl, align 4, !dbg !16321
  %5 = load %struct.macb*, %struct.macb** %bp.addr, align 8, !dbg !16322
  %macb_reg_writel = getelementptr inbounds %struct.macb, %struct.macb* %5, i32 0, i32 3, !dbg !16322
  %6 = load void (%struct.macb*, i32, i32)*, void (%struct.macb*, i32, i32)** %macb_reg_writel, align 8, !dbg !16322
  %7 = load %struct.macb*, %struct.macb** %bp.addr, align 8, !dbg !16322
  %8 = load i32, i32* %ctrl, align 4, !dbg !16322
  call void %6(%struct.macb* %7, i32 0, i32 %8) #12, !dbg !16322
  %9 = load %struct.macb*, %struct.macb** %bp.addr, align 8, !dbg !16323
  %macb_reg_writel1 = getelementptr inbounds %struct.macb, %struct.macb* %9, i32 0, i32 3, !dbg !16323
  %10 = load void (%struct.macb*, i32, i32)*, void (%struct.macb*, i32, i32)** %macb_reg_writel1, align 8, !dbg !16323
  %11 = load %struct.macb*, %struct.macb** %bp.addr, align 8, !dbg !16323
  call void %10(%struct.macb* %11, i32 20, i32 -1) #12, !dbg !16323
  %12 = load %struct.macb*, %struct.macb** %bp.addr, align 8, !dbg !16324
  %macb_reg_writel2 = getelementptr inbounds %struct.macb, %struct.macb* %12, i32 0, i32 3, !dbg !16324
  %13 = load void (%struct.macb*, i32, i32)*, void (%struct.macb*, i32, i32)** %macb_reg_writel2, align 8, !dbg !16324
  %14 = load %struct.macb*, %struct.macb** %bp.addr, align 8, !dbg !16324
  call void %13(%struct.macb* %14, i32 32, i32 -1) #12, !dbg !16324
  store i32 0, i32* %q, align 4, !dbg !16325
  %15 = load %struct.macb*, %struct.macb** %bp.addr, align 8, !dbg !16327
  %queues = getelementptr inbounds %struct.macb, %struct.macb* %15, i32 0, i32 9, !dbg !16328
  %arraydecay = getelementptr inbounds [8 x %struct.macb_queue], [8 x %struct.macb_queue]* %queues, i64 0, i64 0, !dbg !16327
  store %struct.macb_queue* %arraydecay, %struct.macb_queue** %queue, align 8, !dbg !16329
  br label %for.cond, !dbg !16330

for.cond:                                         ; preds = %for.inc, %entry
  %16 = load i32, i32* %q, align 4, !dbg !16331
  %17 = load %struct.macb*, %struct.macb** %bp.addr, align 8, !dbg !16333
  %num_queues = getelementptr inbounds %struct.macb, %struct.macb* %17, i32 0, i32 7, !dbg !16334
  %18 = load i32, i32* %num_queues, align 8, !dbg !16334
  %cmp = icmp ult i32 %16, %18, !dbg !16335
  br i1 %cmp, label %for.body, label %for.end, !dbg !16336

for.body:                                         ; preds = %for.cond
  %19 = load %struct.macb_queue*, %struct.macb_queue** %queue, align 8, !dbg !16337
  %bp3 = getelementptr inbounds %struct.macb_queue, %struct.macb_queue* %19, i32 0, i32 0, !dbg !16337
  %20 = load %struct.macb*, %struct.macb** %bp3, align 8, !dbg !16337
  %macb_reg_writel4 = getelementptr inbounds %struct.macb, %struct.macb* %20, i32 0, i32 3, !dbg !16337
  %21 = load void (%struct.macb*, i32, i32)*, void (%struct.macb*, i32, i32)** %macb_reg_writel4, align 8, !dbg !16337
  %22 = load %struct.macb_queue*, %struct.macb_queue** %queue, align 8, !dbg !16337
  %bp5 = getelementptr inbounds %struct.macb_queue, %struct.macb_queue* %22, i32 0, i32 0, !dbg !16337
  %23 = load %struct.macb*, %struct.macb** %bp5, align 8, !dbg !16337
  %24 = load %struct.macb_queue*, %struct.macb_queue** %queue, align 8, !dbg !16337
  %IDR = getelementptr inbounds %struct.macb_queue, %struct.macb_queue* %24, i32 0, i32 4, !dbg !16337
  %25 = load i32, i32* %IDR, align 4, !dbg !16337
  call void %21(%struct.macb* %23, i32 %25, i32 -1) #12, !dbg !16337
  %26 = load %struct.macb_queue*, %struct.macb_queue** %queue, align 8, !dbg !16339
  %bp6 = getelementptr inbounds %struct.macb_queue, %struct.macb_queue* %26, i32 0, i32 0, !dbg !16339
  %27 = load %struct.macb*, %struct.macb** %bp6, align 8, !dbg !16339
  %macb_reg_readl7 = getelementptr inbounds %struct.macb, %struct.macb* %27, i32 0, i32 2, !dbg !16339
  %28 = load i32 (%struct.macb*, i32)*, i32 (%struct.macb*, i32)** %macb_reg_readl7, align 8, !dbg !16339
  %29 = load %struct.macb_queue*, %struct.macb_queue** %queue, align 8, !dbg !16339
  %bp8 = getelementptr inbounds %struct.macb_queue, %struct.macb_queue* %29, i32 0, i32 0, !dbg !16339
  %30 = load %struct.macb*, %struct.macb** %bp8, align 8, !dbg !16339
  %31 = load %struct.macb_queue*, %struct.macb_queue** %queue, align 8, !dbg !16339
  %ISR = getelementptr inbounds %struct.macb_queue, %struct.macb_queue* %31, i32 0, i32 2, !dbg !16339
  %32 = load i32, i32* %ISR, align 4, !dbg !16339
  %call9 = call i32 %28(%struct.macb* %30, i32 %32) #12, !dbg !16339
  %33 = load %struct.macb*, %struct.macb** %bp.addr, align 8, !dbg !16340
  %caps = getelementptr inbounds %struct.macb, %struct.macb* %33, i32 0, i32 23, !dbg !16342
  %34 = load i32, i32* %caps, align 8, !dbg !16342
  %and10 = and i32 %34, 1, !dbg !16343
  %tobool = icmp ne i32 %and10, 0, !dbg !16343
  br i1 %tobool, label %if.then, label %if.end, !dbg !16344

if.then:                                          ; preds = %for.body
  %35 = load %struct.macb_queue*, %struct.macb_queue** %queue, align 8, !dbg !16345
  %bp11 = getelementptr inbounds %struct.macb_queue, %struct.macb_queue* %35, i32 0, i32 0, !dbg !16345
  %36 = load %struct.macb*, %struct.macb** %bp11, align 8, !dbg !16345
  %macb_reg_writel12 = getelementptr inbounds %struct.macb, %struct.macb* %36, i32 0, i32 3, !dbg !16345
  %37 = load void (%struct.macb*, i32, i32)*, void (%struct.macb*, i32, i32)** %macb_reg_writel12, align 8, !dbg !16345
  %38 = load %struct.macb_queue*, %struct.macb_queue** %queue, align 8, !dbg !16345
  %bp13 = getelementptr inbounds %struct.macb_queue, %struct.macb_queue* %38, i32 0, i32 0, !dbg !16345
  %39 = load %struct.macb*, %struct.macb** %bp13, align 8, !dbg !16345
  %40 = load %struct.macb_queue*, %struct.macb_queue** %queue, align 8, !dbg !16345
  %ISR14 = getelementptr inbounds %struct.macb_queue, %struct.macb_queue* %40, i32 0, i32 2, !dbg !16345
  %41 = load i32, i32* %ISR14, align 4, !dbg !16345
  call void %37(%struct.macb* %39, i32 %41, i32 -1) #12, !dbg !16345
  br label %if.end, !dbg !16345

if.end:                                           ; preds = %if.then, %for.body
  br label %for.inc, !dbg !16346

for.inc:                                          ; preds = %if.end
  %42 = load i32, i32* %q, align 4, !dbg !16347
  %inc = add i32 %42, 1, !dbg !16347
  store i32 %inc, i32* %q, align 4, !dbg !16347
  %43 = load %struct.macb_queue*, %struct.macb_queue** %queue, align 8, !dbg !16348
  %incdec.ptr = getelementptr %struct.macb_queue, %struct.macb_queue* %43, i32 1, !dbg !16348
  store %struct.macb_queue* %incdec.ptr, %struct.macb_queue** %queue, align 8, !dbg !16348
  br label %for.cond, !dbg !16349, !llvm.loop !16350

for.end:                                          ; preds = %for.cond
  ret void, !dbg !16352
}

; Function Attrs: noredzone
declare dso_local void @napi_disable(%struct.napi_struct*) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @macb_free_consistent(%struct.macb* %bp) #2 !dbg !16353 {
entry:
  %bp.addr = alloca %struct.macb*, align 8
  %queue = alloca %struct.macb_queue*, align 8
  %q = alloca i32, align 4
  %size = alloca i32, align 4
  store %struct.macb* %bp, %struct.macb** %bp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.macb** %bp.addr, metadata !16354, metadata !DIExpression()), !dbg !16355
  call void @llvm.dbg.declare(metadata %struct.macb_queue** %queue, metadata !16356, metadata !DIExpression()), !dbg !16357
  call void @llvm.dbg.declare(metadata i32* %q, metadata !16358, metadata !DIExpression()), !dbg !16359
  call void @llvm.dbg.declare(metadata i32* %size, metadata !16360, metadata !DIExpression()), !dbg !16361
  %0 = load %struct.macb*, %struct.macb** %bp.addr, align 8, !dbg !16362
  %macbgem_ops = getelementptr inbounds %struct.macb, %struct.macb* %0, i32 0, i32 19, !dbg !16363
  %mog_free_rx_buffers = getelementptr inbounds %struct.macb_or_gem_ops, %struct.macb_or_gem_ops* %macbgem_ops, i32 0, i32 1, !dbg !16364
  %1 = load void (%struct.macb*)*, void (%struct.macb*)** %mog_free_rx_buffers, align 8, !dbg !16364
  %2 = load %struct.macb*, %struct.macb** %bp.addr, align 8, !dbg !16365
  call void %1(%struct.macb* %2) #12, !dbg !16362
  store i32 0, i32* %q, align 4, !dbg !16366
  %3 = load %struct.macb*, %struct.macb** %bp.addr, align 8, !dbg !16368
  %queues = getelementptr inbounds %struct.macb, %struct.macb* %3, i32 0, i32 9, !dbg !16369
  %arraydecay = getelementptr inbounds [8 x %struct.macb_queue], [8 x %struct.macb_queue]* %queues, i64 0, i64 0, !dbg !16368
  store %struct.macb_queue* %arraydecay, %struct.macb_queue** %queue, align 8, !dbg !16370
  br label %for.cond, !dbg !16371

for.cond:                                         ; preds = %for.inc, %entry
  %4 = load i32, i32* %q, align 4, !dbg !16372
  %5 = load %struct.macb*, %struct.macb** %bp.addr, align 8, !dbg !16374
  %num_queues = getelementptr inbounds %struct.macb, %struct.macb* %5, i32 0, i32 7, !dbg !16375
  %6 = load i32, i32* %num_queues, align 8, !dbg !16375
  %cmp = icmp ult i32 %4, %6, !dbg !16376
  br i1 %cmp, label %for.body, label %for.end, !dbg !16377

for.body:                                         ; preds = %for.cond
  %7 = load %struct.macb_queue*, %struct.macb_queue** %queue, align 8, !dbg !16378
  %tx_skb = getelementptr inbounds %struct.macb_queue, %struct.macb_queue* %7, i32 0, i32 14, !dbg !16380
  %8 = load %struct.macb_tx_skb*, %struct.macb_tx_skb** %tx_skb, align 8, !dbg !16380
  %9 = bitcast %struct.macb_tx_skb* %8 to i8*, !dbg !16378
  call void @kfree(i8* %9) #12, !dbg !16381
  %10 = load %struct.macb_queue*, %struct.macb_queue** %queue, align 8, !dbg !16382
  %tx_skb1 = getelementptr inbounds %struct.macb_queue, %struct.macb_queue* %10, i32 0, i32 14, !dbg !16383
  store %struct.macb_tx_skb* null, %struct.macb_tx_skb** %tx_skb1, align 8, !dbg !16384
  %11 = load %struct.macb_queue*, %struct.macb_queue** %queue, align 8, !dbg !16385
  %tx_ring = getelementptr inbounds %struct.macb_queue, %struct.macb_queue* %11, i32 0, i32 13, !dbg !16387
  %12 = load %struct.macb_dma_desc*, %struct.macb_dma_desc** %tx_ring, align 8, !dbg !16387
  %tobool = icmp ne %struct.macb_dma_desc* %12, null, !dbg !16385
  br i1 %tobool, label %if.then, label %if.end, !dbg !16388

if.then:                                          ; preds = %for.body
  %13 = load %struct.macb*, %struct.macb** %bp.addr, align 8, !dbg !16389
  %call = call i32 @macb_dma_desc_get_size(%struct.macb* %13) #12, !dbg !16389
  %14 = load %struct.macb*, %struct.macb** %bp.addr, align 8, !dbg !16389
  %tx_ring_size = getelementptr inbounds %struct.macb, %struct.macb* %14, i32 0, i32 6, !dbg !16389
  %15 = load i32, i32* %tx_ring_size, align 4, !dbg !16389
  %mul = mul i32 %call, %15, !dbg !16389
  %16 = load %struct.macb*, %struct.macb** %bp.addr, align 8, !dbg !16391
  %tx_bd_rd_prefetch = getelementptr inbounds %struct.macb, %struct.macb* %16, i32 0, i32 47, !dbg !16392
  %17 = load i32, i32* %tx_bd_rd_prefetch, align 4, !dbg !16392
  %add = add i32 %mul, %17, !dbg !16393
  store i32 %add, i32* %size, align 4, !dbg !16394
  %18 = load %struct.macb*, %struct.macb** %bp.addr, align 8, !dbg !16395
  %pdev = getelementptr inbounds %struct.macb, %struct.macb* %18, i32 0, i32 11, !dbg !16396
  %19 = load %struct.platform_device*, %struct.platform_device** %pdev, align 8, !dbg !16396
  %dev = getelementptr inbounds %struct.platform_device, %struct.platform_device* %19, i32 0, i32 3, !dbg !16397
  %20 = load i32, i32* %size, align 4, !dbg !16398
  %conv = sext i32 %20 to i64, !dbg !16398
  %21 = load %struct.macb_queue*, %struct.macb_queue** %queue, align 8, !dbg !16399
  %tx_ring2 = getelementptr inbounds %struct.macb_queue, %struct.macb_queue* %21, i32 0, i32 13, !dbg !16400
  %22 = load %struct.macb_dma_desc*, %struct.macb_dma_desc** %tx_ring2, align 8, !dbg !16400
  %23 = bitcast %struct.macb_dma_desc* %22 to i8*, !dbg !16399
  %24 = load %struct.macb_queue*, %struct.macb_queue** %queue, align 8, !dbg !16401
  %tx_ring_dma = getelementptr inbounds %struct.macb_queue, %struct.macb_queue* %24, i32 0, i32 15, !dbg !16402
  %25 = load i64, i64* %tx_ring_dma, align 8, !dbg !16402
  call void @dma_free_coherent(%struct.device* %dev, i64 %conv, i8* %23, i64 %25) #12, !dbg !16403
  %26 = load %struct.macb_queue*, %struct.macb_queue** %queue, align 8, !dbg !16404
  %tx_ring3 = getelementptr inbounds %struct.macb_queue, %struct.macb_queue* %26, i32 0, i32 13, !dbg !16405
  store %struct.macb_dma_desc* null, %struct.macb_dma_desc** %tx_ring3, align 8, !dbg !16406
  br label %if.end, !dbg !16407

if.end:                                           ; preds = %if.then, %for.body
  %27 = load %struct.macb_queue*, %struct.macb_queue** %queue, align 8, !dbg !16408
  %rx_ring = getelementptr inbounds %struct.macb_queue, %struct.macb_queue* %27, i32 0, i32 21, !dbg !16410
  %28 = load %struct.macb_dma_desc*, %struct.macb_dma_desc** %rx_ring, align 8, !dbg !16410
  %tobool4 = icmp ne %struct.macb_dma_desc* %28, null, !dbg !16408
  br i1 %tobool4, label %if.then5, label %if.end14, !dbg !16411

if.then5:                                         ; preds = %if.end
  %29 = load %struct.macb*, %struct.macb** %bp.addr, align 8, !dbg !16412
  %call6 = call i32 @macb_dma_desc_get_size(%struct.macb* %29) #12, !dbg !16412
  %30 = load %struct.macb*, %struct.macb** %bp.addr, align 8, !dbg !16412
  %rx_ring_size = getelementptr inbounds %struct.macb, %struct.macb* %30, i32 0, i32 5, !dbg !16412
  %31 = load i32, i32* %rx_ring_size, align 8, !dbg !16412
  %mul7 = mul i32 %call6, %31, !dbg !16412
  %32 = load %struct.macb*, %struct.macb** %bp.addr, align 8, !dbg !16414
  %rx_bd_rd_prefetch = getelementptr inbounds %struct.macb, %struct.macb* %32, i32 0, i32 46, !dbg !16415
  %33 = load i32, i32* %rx_bd_rd_prefetch, align 8, !dbg !16415
  %add8 = add i32 %mul7, %33, !dbg !16416
  store i32 %add8, i32* %size, align 4, !dbg !16417
  %34 = load %struct.macb*, %struct.macb** %bp.addr, align 8, !dbg !16418
  %pdev9 = getelementptr inbounds %struct.macb, %struct.macb* %34, i32 0, i32 11, !dbg !16419
  %35 = load %struct.platform_device*, %struct.platform_device** %pdev9, align 8, !dbg !16419
  %dev10 = getelementptr inbounds %struct.platform_device, %struct.platform_device* %35, i32 0, i32 3, !dbg !16420
  %36 = load i32, i32* %size, align 4, !dbg !16421
  %conv11 = sext i32 %36 to i64, !dbg !16421
  %37 = load %struct.macb_queue*, %struct.macb_queue** %queue, align 8, !dbg !16422
  %rx_ring12 = getelementptr inbounds %struct.macb_queue, %struct.macb_queue* %37, i32 0, i32 21, !dbg !16423
  %38 = load %struct.macb_dma_desc*, %struct.macb_dma_desc** %rx_ring12, align 8, !dbg !16423
  %39 = bitcast %struct.macb_dma_desc* %38 to i8*, !dbg !16422
  %40 = load %struct.macb_queue*, %struct.macb_queue** %queue, align 8, !dbg !16424
  %rx_ring_dma = getelementptr inbounds %struct.macb_queue, %struct.macb_queue* %40, i32 0, i32 17, !dbg !16425
  %41 = load i64, i64* %rx_ring_dma, align 8, !dbg !16425
  call void @dma_free_coherent(%struct.device* %dev10, i64 %conv11, i8* %39, i64 %41) #12, !dbg !16426
  %42 = load %struct.macb_queue*, %struct.macb_queue** %queue, align 8, !dbg !16427
  %rx_ring13 = getelementptr inbounds %struct.macb_queue, %struct.macb_queue* %42, i32 0, i32 21, !dbg !16428
  store %struct.macb_dma_desc* null, %struct.macb_dma_desc** %rx_ring13, align 8, !dbg !16429
  br label %if.end14, !dbg !16430

if.end14:                                         ; preds = %if.then5, %if.end
  br label %for.inc, !dbg !16431

for.inc:                                          ; preds = %if.end14
  %43 = load i32, i32* %q, align 4, !dbg !16432
  %inc = add i32 %43, 1, !dbg !16432
  store i32 %inc, i32* %q, align 4, !dbg !16432
  %44 = load %struct.macb_queue*, %struct.macb_queue** %queue, align 8, !dbg !16433
  %incdec.ptr = getelementptr %struct.macb_queue, %struct.macb_queue* %44, i32 1, !dbg !16433
  store %struct.macb_queue* %incdec.ptr, %struct.macb_queue** %queue, align 8, !dbg !16433
  br label %for.cond, !dbg !16434, !llvm.loop !16435

for.end:                                          ; preds = %for.cond
  ret void, !dbg !16437
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @pm_runtime_put_sync(%struct.device* %dev) #2 !dbg !16438 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !16439, metadata !DIExpression()), !dbg !16440
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !16441
  %call = call i32 @__pm_runtime_idle(%struct.device* %0, i32 4) #12, !dbg !16442
  ret i32 %call, !dbg !16443
}

; Function Attrs: noredzone
declare dso_local i32 @__pm_runtime_resume(%struct.device*, i32) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @dma_alloc_coherent(%struct.device* %dev, i64 %size, i64* %dma_handle, i32 %gfp) #2 !dbg !16444 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %size.addr = alloca i64, align 8
  %dma_handle.addr = alloca i64*, align 8
  %gfp.addr = alloca i32, align 4
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !16448, metadata !DIExpression()), !dbg !16449
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !16450, metadata !DIExpression()), !dbg !16451
  store i64* %dma_handle, i64** %dma_handle.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %dma_handle.addr, metadata !16452, metadata !DIExpression()), !dbg !16453
  store i32 %gfp, i32* %gfp.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %gfp.addr, metadata !16454, metadata !DIExpression()), !dbg !16455
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !16456
  %1 = load i64, i64* %size.addr, align 8, !dbg !16457
  %2 = load i64*, i64** %dma_handle.addr, align 8, !dbg !16458
  %3 = load i32, i32* %gfp.addr, align 4, !dbg !16459
  %4 = load i32, i32* %gfp.addr, align 4, !dbg !16460
  %and = and i32 %4, 8192, !dbg !16461
  %tobool = icmp ne i32 %and, 0, !dbg !16462
  %5 = zext i1 %tobool to i64, !dbg !16462
  %cond = select i1 %tobool, i64 256, i64 0, !dbg !16462
  %call = call i8* @dma_alloc_attrs(%struct.device* %0, i64 %1, i64* %2, i32 %3, i64 %cond) #12, !dbg !16463
  ret i8* %call, !dbg !16464
}

; Function Attrs: noredzone
declare dso_local i8* @dma_alloc_attrs(%struct.device*, i64, i64*, i32, i64) #1

; Function Attrs: noredzone
declare dso_local noalias i8* @__kmalloc(i64, i32) #1

; Function Attrs: nounwind willreturn
declare void @llvm.assume(i1) #9

; Function Attrs: noinline noredzone nounwind optnone readnone sspstrong
define internal i32 @get_order(i64 %size) #10 !dbg !16465 {
entry:
  %x.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %x.addr.i, metadata !16469, metadata !DIExpression()), !dbg !16473
  %bitpos.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %bitpos.i, metadata !16475, metadata !DIExpression()), !dbg !16476
  %retval = alloca i32, align 4
  %size.addr = alloca i64, align 8
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !16477, metadata !DIExpression()), !dbg !16478
  %0 = load i64, i64* %size.addr, align 8, !dbg !16479
  %1 = call i1 @llvm.is.constant.i64(i64 %0), !dbg !16481
  br i1 %1, label %if.then, label %if.end447, !dbg !16482

if.then:                                          ; preds = %entry
  %2 = load i64, i64* %size.addr, align 8, !dbg !16483
  %tobool = icmp ne i64 %2, 0, !dbg !16483
  br i1 %tobool, label %if.end, label %if.then1, !dbg !16486

if.then1:                                         ; preds = %if.then
  store i32 52, i32* %retval, align 4, !dbg !16487
  br label %return, !dbg !16487

if.end:                                           ; preds = %if.then
  %3 = load i64, i64* %size.addr, align 8, !dbg !16488
  %cmp = icmp ult i64 %3, 4096, !dbg !16490
  br i1 %cmp, label %if.then2, label %if.end3, !dbg !16491

if.then2:                                         ; preds = %if.end
  store i32 0, i32* %retval, align 4, !dbg !16492
  br label %return, !dbg !16492

if.end3:                                          ; preds = %if.end
  %4 = load i64, i64* %size.addr, align 8, !dbg !16493
  %sub = sub i64 %4, 1, !dbg !16493
  %5 = call i1 @llvm.is.constant.i64(i64 %sub), !dbg !16493
  br i1 %5, label %cond.true, label %cond.false442, !dbg !16493

cond.true:                                        ; preds = %if.end3
  %6 = load i64, i64* %size.addr, align 8, !dbg !16493
  %sub4 = sub i64 %6, 1, !dbg !16493
  %7 = call i1 @llvm.is.constant.i64(i64 %sub4), !dbg !16493
  br i1 %7, label %cond.true5, label %cond.false439, !dbg !16493

cond.true5:                                       ; preds = %cond.true
  %8 = load i64, i64* %size.addr, align 8, !dbg !16493
  %sub6 = sub i64 %8, 1, !dbg !16493
  %cmp7 = icmp ult i64 %sub6, 2, !dbg !16493
  br i1 %cmp7, label %cond.true8, label %cond.false, !dbg !16493

cond.true8:                                       ; preds = %cond.true5
  br label %cond.end437, !dbg !16493

cond.false:                                       ; preds = %cond.true5
  %9 = load i64, i64* %size.addr, align 8, !dbg !16493
  %sub9 = sub i64 %9, 1, !dbg !16493
  %and = and i64 %sub9, -9223372036854775808, !dbg !16493
  %tobool10 = icmp ne i64 %and, 0, !dbg !16493
  br i1 %tobool10, label %cond.true11, label %cond.false12, !dbg !16493

cond.true11:                                      ; preds = %cond.false
  br label %cond.end435, !dbg !16493

cond.false12:                                     ; preds = %cond.false
  %10 = load i64, i64* %size.addr, align 8, !dbg !16493
  %sub13 = sub i64 %10, 1, !dbg !16493
  %and14 = and i64 %sub13, 4611686018427387904, !dbg !16493
  %tobool15 = icmp ne i64 %and14, 0, !dbg !16493
  br i1 %tobool15, label %cond.true16, label %cond.false17, !dbg !16493

cond.true16:                                      ; preds = %cond.false12
  br label %cond.end433, !dbg !16493

cond.false17:                                     ; preds = %cond.false12
  %11 = load i64, i64* %size.addr, align 8, !dbg !16493
  %sub18 = sub i64 %11, 1, !dbg !16493
  %and19 = and i64 %sub18, 2305843009213693952, !dbg !16493
  %tobool20 = icmp ne i64 %and19, 0, !dbg !16493
  br i1 %tobool20, label %cond.true21, label %cond.false22, !dbg !16493

cond.true21:                                      ; preds = %cond.false17
  br label %cond.end431, !dbg !16493

cond.false22:                                     ; preds = %cond.false17
  %12 = load i64, i64* %size.addr, align 8, !dbg !16493
  %sub23 = sub i64 %12, 1, !dbg !16493
  %and24 = and i64 %sub23, 1152921504606846976, !dbg !16493
  %tobool25 = icmp ne i64 %and24, 0, !dbg !16493
  br i1 %tobool25, label %cond.true26, label %cond.false27, !dbg !16493

cond.true26:                                      ; preds = %cond.false22
  br label %cond.end429, !dbg !16493

cond.false27:                                     ; preds = %cond.false22
  %13 = load i64, i64* %size.addr, align 8, !dbg !16493
  %sub28 = sub i64 %13, 1, !dbg !16493
  %and29 = and i64 %sub28, 576460752303423488, !dbg !16493
  %tobool30 = icmp ne i64 %and29, 0, !dbg !16493
  br i1 %tobool30, label %cond.true31, label %cond.false32, !dbg !16493

cond.true31:                                      ; preds = %cond.false27
  br label %cond.end427, !dbg !16493

cond.false32:                                     ; preds = %cond.false27
  %14 = load i64, i64* %size.addr, align 8, !dbg !16493
  %sub33 = sub i64 %14, 1, !dbg !16493
  %and34 = and i64 %sub33, 288230376151711744, !dbg !16493
  %tobool35 = icmp ne i64 %and34, 0, !dbg !16493
  br i1 %tobool35, label %cond.true36, label %cond.false37, !dbg !16493

cond.true36:                                      ; preds = %cond.false32
  br label %cond.end425, !dbg !16493

cond.false37:                                     ; preds = %cond.false32
  %15 = load i64, i64* %size.addr, align 8, !dbg !16493
  %sub38 = sub i64 %15, 1, !dbg !16493
  %and39 = and i64 %sub38, 144115188075855872, !dbg !16493
  %tobool40 = icmp ne i64 %and39, 0, !dbg !16493
  br i1 %tobool40, label %cond.true41, label %cond.false42, !dbg !16493

cond.true41:                                      ; preds = %cond.false37
  br label %cond.end423, !dbg !16493

cond.false42:                                     ; preds = %cond.false37
  %16 = load i64, i64* %size.addr, align 8, !dbg !16493
  %sub43 = sub i64 %16, 1, !dbg !16493
  %and44 = and i64 %sub43, 72057594037927936, !dbg !16493
  %tobool45 = icmp ne i64 %and44, 0, !dbg !16493
  br i1 %tobool45, label %cond.true46, label %cond.false47, !dbg !16493

cond.true46:                                      ; preds = %cond.false42
  br label %cond.end421, !dbg !16493

cond.false47:                                     ; preds = %cond.false42
  %17 = load i64, i64* %size.addr, align 8, !dbg !16493
  %sub48 = sub i64 %17, 1, !dbg !16493
  %and49 = and i64 %sub48, 36028797018963968, !dbg !16493
  %tobool50 = icmp ne i64 %and49, 0, !dbg !16493
  br i1 %tobool50, label %cond.true51, label %cond.false52, !dbg !16493

cond.true51:                                      ; preds = %cond.false47
  br label %cond.end419, !dbg !16493

cond.false52:                                     ; preds = %cond.false47
  %18 = load i64, i64* %size.addr, align 8, !dbg !16493
  %sub53 = sub i64 %18, 1, !dbg !16493
  %and54 = and i64 %sub53, 18014398509481984, !dbg !16493
  %tobool55 = icmp ne i64 %and54, 0, !dbg !16493
  br i1 %tobool55, label %cond.true56, label %cond.false57, !dbg !16493

cond.true56:                                      ; preds = %cond.false52
  br label %cond.end417, !dbg !16493

cond.false57:                                     ; preds = %cond.false52
  %19 = load i64, i64* %size.addr, align 8, !dbg !16493
  %sub58 = sub i64 %19, 1, !dbg !16493
  %and59 = and i64 %sub58, 9007199254740992, !dbg !16493
  %tobool60 = icmp ne i64 %and59, 0, !dbg !16493
  br i1 %tobool60, label %cond.true61, label %cond.false62, !dbg !16493

cond.true61:                                      ; preds = %cond.false57
  br label %cond.end415, !dbg !16493

cond.false62:                                     ; preds = %cond.false57
  %20 = load i64, i64* %size.addr, align 8, !dbg !16493
  %sub63 = sub i64 %20, 1, !dbg !16493
  %and64 = and i64 %sub63, 4503599627370496, !dbg !16493
  %tobool65 = icmp ne i64 %and64, 0, !dbg !16493
  br i1 %tobool65, label %cond.true66, label %cond.false67, !dbg !16493

cond.true66:                                      ; preds = %cond.false62
  br label %cond.end413, !dbg !16493

cond.false67:                                     ; preds = %cond.false62
  %21 = load i64, i64* %size.addr, align 8, !dbg !16493
  %sub68 = sub i64 %21, 1, !dbg !16493
  %and69 = and i64 %sub68, 2251799813685248, !dbg !16493
  %tobool70 = icmp ne i64 %and69, 0, !dbg !16493
  br i1 %tobool70, label %cond.true71, label %cond.false72, !dbg !16493

cond.true71:                                      ; preds = %cond.false67
  br label %cond.end411, !dbg !16493

cond.false72:                                     ; preds = %cond.false67
  %22 = load i64, i64* %size.addr, align 8, !dbg !16493
  %sub73 = sub i64 %22, 1, !dbg !16493
  %and74 = and i64 %sub73, 1125899906842624, !dbg !16493
  %tobool75 = icmp ne i64 %and74, 0, !dbg !16493
  br i1 %tobool75, label %cond.true76, label %cond.false77, !dbg !16493

cond.true76:                                      ; preds = %cond.false72
  br label %cond.end409, !dbg !16493

cond.false77:                                     ; preds = %cond.false72
  %23 = load i64, i64* %size.addr, align 8, !dbg !16493
  %sub78 = sub i64 %23, 1, !dbg !16493
  %and79 = and i64 %sub78, 562949953421312, !dbg !16493
  %tobool80 = icmp ne i64 %and79, 0, !dbg !16493
  br i1 %tobool80, label %cond.true81, label %cond.false82, !dbg !16493

cond.true81:                                      ; preds = %cond.false77
  br label %cond.end407, !dbg !16493

cond.false82:                                     ; preds = %cond.false77
  %24 = load i64, i64* %size.addr, align 8, !dbg !16493
  %sub83 = sub i64 %24, 1, !dbg !16493
  %and84 = and i64 %sub83, 281474976710656, !dbg !16493
  %tobool85 = icmp ne i64 %and84, 0, !dbg !16493
  br i1 %tobool85, label %cond.true86, label %cond.false87, !dbg !16493

cond.true86:                                      ; preds = %cond.false82
  br label %cond.end405, !dbg !16493

cond.false87:                                     ; preds = %cond.false82
  %25 = load i64, i64* %size.addr, align 8, !dbg !16493
  %sub88 = sub i64 %25, 1, !dbg !16493
  %and89 = and i64 %sub88, 140737488355328, !dbg !16493
  %tobool90 = icmp ne i64 %and89, 0, !dbg !16493
  br i1 %tobool90, label %cond.true91, label %cond.false92, !dbg !16493

cond.true91:                                      ; preds = %cond.false87
  br label %cond.end403, !dbg !16493

cond.false92:                                     ; preds = %cond.false87
  %26 = load i64, i64* %size.addr, align 8, !dbg !16493
  %sub93 = sub i64 %26, 1, !dbg !16493
  %and94 = and i64 %sub93, 70368744177664, !dbg !16493
  %tobool95 = icmp ne i64 %and94, 0, !dbg !16493
  br i1 %tobool95, label %cond.true96, label %cond.false97, !dbg !16493

cond.true96:                                      ; preds = %cond.false92
  br label %cond.end401, !dbg !16493

cond.false97:                                     ; preds = %cond.false92
  %27 = load i64, i64* %size.addr, align 8, !dbg !16493
  %sub98 = sub i64 %27, 1, !dbg !16493
  %and99 = and i64 %sub98, 35184372088832, !dbg !16493
  %tobool100 = icmp ne i64 %and99, 0, !dbg !16493
  br i1 %tobool100, label %cond.true101, label %cond.false102, !dbg !16493

cond.true101:                                     ; preds = %cond.false97
  br label %cond.end399, !dbg !16493

cond.false102:                                    ; preds = %cond.false97
  %28 = load i64, i64* %size.addr, align 8, !dbg !16493
  %sub103 = sub i64 %28, 1, !dbg !16493
  %and104 = and i64 %sub103, 17592186044416, !dbg !16493
  %tobool105 = icmp ne i64 %and104, 0, !dbg !16493
  br i1 %tobool105, label %cond.true106, label %cond.false107, !dbg !16493

cond.true106:                                     ; preds = %cond.false102
  br label %cond.end397, !dbg !16493

cond.false107:                                    ; preds = %cond.false102
  %29 = load i64, i64* %size.addr, align 8, !dbg !16493
  %sub108 = sub i64 %29, 1, !dbg !16493
  %and109 = and i64 %sub108, 8796093022208, !dbg !16493
  %tobool110 = icmp ne i64 %and109, 0, !dbg !16493
  br i1 %tobool110, label %cond.true111, label %cond.false112, !dbg !16493

cond.true111:                                     ; preds = %cond.false107
  br label %cond.end395, !dbg !16493

cond.false112:                                    ; preds = %cond.false107
  %30 = load i64, i64* %size.addr, align 8, !dbg !16493
  %sub113 = sub i64 %30, 1, !dbg !16493
  %and114 = and i64 %sub113, 4398046511104, !dbg !16493
  %tobool115 = icmp ne i64 %and114, 0, !dbg !16493
  br i1 %tobool115, label %cond.true116, label %cond.false117, !dbg !16493

cond.true116:                                     ; preds = %cond.false112
  br label %cond.end393, !dbg !16493

cond.false117:                                    ; preds = %cond.false112
  %31 = load i64, i64* %size.addr, align 8, !dbg !16493
  %sub118 = sub i64 %31, 1, !dbg !16493
  %and119 = and i64 %sub118, 2199023255552, !dbg !16493
  %tobool120 = icmp ne i64 %and119, 0, !dbg !16493
  br i1 %tobool120, label %cond.true121, label %cond.false122, !dbg !16493

cond.true121:                                     ; preds = %cond.false117
  br label %cond.end391, !dbg !16493

cond.false122:                                    ; preds = %cond.false117
  %32 = load i64, i64* %size.addr, align 8, !dbg !16493
  %sub123 = sub i64 %32, 1, !dbg !16493
  %and124 = and i64 %sub123, 1099511627776, !dbg !16493
  %tobool125 = icmp ne i64 %and124, 0, !dbg !16493
  br i1 %tobool125, label %cond.true126, label %cond.false127, !dbg !16493

cond.true126:                                     ; preds = %cond.false122
  br label %cond.end389, !dbg !16493

cond.false127:                                    ; preds = %cond.false122
  %33 = load i64, i64* %size.addr, align 8, !dbg !16493
  %sub128 = sub i64 %33, 1, !dbg !16493
  %and129 = and i64 %sub128, 549755813888, !dbg !16493
  %tobool130 = icmp ne i64 %and129, 0, !dbg !16493
  br i1 %tobool130, label %cond.true131, label %cond.false132, !dbg !16493

cond.true131:                                     ; preds = %cond.false127
  br label %cond.end387, !dbg !16493

cond.false132:                                    ; preds = %cond.false127
  %34 = load i64, i64* %size.addr, align 8, !dbg !16493
  %sub133 = sub i64 %34, 1, !dbg !16493
  %and134 = and i64 %sub133, 274877906944, !dbg !16493
  %tobool135 = icmp ne i64 %and134, 0, !dbg !16493
  br i1 %tobool135, label %cond.true136, label %cond.false137, !dbg !16493

cond.true136:                                     ; preds = %cond.false132
  br label %cond.end385, !dbg !16493

cond.false137:                                    ; preds = %cond.false132
  %35 = load i64, i64* %size.addr, align 8, !dbg !16493
  %sub138 = sub i64 %35, 1, !dbg !16493
  %and139 = and i64 %sub138, 137438953472, !dbg !16493
  %tobool140 = icmp ne i64 %and139, 0, !dbg !16493
  br i1 %tobool140, label %cond.true141, label %cond.false142, !dbg !16493

cond.true141:                                     ; preds = %cond.false137
  br label %cond.end383, !dbg !16493

cond.false142:                                    ; preds = %cond.false137
  %36 = load i64, i64* %size.addr, align 8, !dbg !16493
  %sub143 = sub i64 %36, 1, !dbg !16493
  %and144 = and i64 %sub143, 68719476736, !dbg !16493
  %tobool145 = icmp ne i64 %and144, 0, !dbg !16493
  br i1 %tobool145, label %cond.true146, label %cond.false147, !dbg !16493

cond.true146:                                     ; preds = %cond.false142
  br label %cond.end381, !dbg !16493

cond.false147:                                    ; preds = %cond.false142
  %37 = load i64, i64* %size.addr, align 8, !dbg !16493
  %sub148 = sub i64 %37, 1, !dbg !16493
  %and149 = and i64 %sub148, 34359738368, !dbg !16493
  %tobool150 = icmp ne i64 %and149, 0, !dbg !16493
  br i1 %tobool150, label %cond.true151, label %cond.false152, !dbg !16493

cond.true151:                                     ; preds = %cond.false147
  br label %cond.end379, !dbg !16493

cond.false152:                                    ; preds = %cond.false147
  %38 = load i64, i64* %size.addr, align 8, !dbg !16493
  %sub153 = sub i64 %38, 1, !dbg !16493
  %and154 = and i64 %sub153, 17179869184, !dbg !16493
  %tobool155 = icmp ne i64 %and154, 0, !dbg !16493
  br i1 %tobool155, label %cond.true156, label %cond.false157, !dbg !16493

cond.true156:                                     ; preds = %cond.false152
  br label %cond.end377, !dbg !16493

cond.false157:                                    ; preds = %cond.false152
  %39 = load i64, i64* %size.addr, align 8, !dbg !16493
  %sub158 = sub i64 %39, 1, !dbg !16493
  %and159 = and i64 %sub158, 8589934592, !dbg !16493
  %tobool160 = icmp ne i64 %and159, 0, !dbg !16493
  br i1 %tobool160, label %cond.true161, label %cond.false162, !dbg !16493

cond.true161:                                     ; preds = %cond.false157
  br label %cond.end375, !dbg !16493

cond.false162:                                    ; preds = %cond.false157
  %40 = load i64, i64* %size.addr, align 8, !dbg !16493
  %sub163 = sub i64 %40, 1, !dbg !16493
  %and164 = and i64 %sub163, 4294967296, !dbg !16493
  %tobool165 = icmp ne i64 %and164, 0, !dbg !16493
  br i1 %tobool165, label %cond.true166, label %cond.false167, !dbg !16493

cond.true166:                                     ; preds = %cond.false162
  br label %cond.end373, !dbg !16493

cond.false167:                                    ; preds = %cond.false162
  %41 = load i64, i64* %size.addr, align 8, !dbg !16493
  %sub168 = sub i64 %41, 1, !dbg !16493
  %and169 = and i64 %sub168, 2147483648, !dbg !16493
  %tobool170 = icmp ne i64 %and169, 0, !dbg !16493
  br i1 %tobool170, label %cond.true171, label %cond.false172, !dbg !16493

cond.true171:                                     ; preds = %cond.false167
  br label %cond.end371, !dbg !16493

cond.false172:                                    ; preds = %cond.false167
  %42 = load i64, i64* %size.addr, align 8, !dbg !16493
  %sub173 = sub i64 %42, 1, !dbg !16493
  %and174 = and i64 %sub173, 1073741824, !dbg !16493
  %tobool175 = icmp ne i64 %and174, 0, !dbg !16493
  br i1 %tobool175, label %cond.true176, label %cond.false177, !dbg !16493

cond.true176:                                     ; preds = %cond.false172
  br label %cond.end369, !dbg !16493

cond.false177:                                    ; preds = %cond.false172
  %43 = load i64, i64* %size.addr, align 8, !dbg !16493
  %sub178 = sub i64 %43, 1, !dbg !16493
  %and179 = and i64 %sub178, 536870912, !dbg !16493
  %tobool180 = icmp ne i64 %and179, 0, !dbg !16493
  br i1 %tobool180, label %cond.true181, label %cond.false182, !dbg !16493

cond.true181:                                     ; preds = %cond.false177
  br label %cond.end367, !dbg !16493

cond.false182:                                    ; preds = %cond.false177
  %44 = load i64, i64* %size.addr, align 8, !dbg !16493
  %sub183 = sub i64 %44, 1, !dbg !16493
  %and184 = and i64 %sub183, 268435456, !dbg !16493
  %tobool185 = icmp ne i64 %and184, 0, !dbg !16493
  br i1 %tobool185, label %cond.true186, label %cond.false187, !dbg !16493

cond.true186:                                     ; preds = %cond.false182
  br label %cond.end365, !dbg !16493

cond.false187:                                    ; preds = %cond.false182
  %45 = load i64, i64* %size.addr, align 8, !dbg !16493
  %sub188 = sub i64 %45, 1, !dbg !16493
  %and189 = and i64 %sub188, 134217728, !dbg !16493
  %tobool190 = icmp ne i64 %and189, 0, !dbg !16493
  br i1 %tobool190, label %cond.true191, label %cond.false192, !dbg !16493

cond.true191:                                     ; preds = %cond.false187
  br label %cond.end363, !dbg !16493

cond.false192:                                    ; preds = %cond.false187
  %46 = load i64, i64* %size.addr, align 8, !dbg !16493
  %sub193 = sub i64 %46, 1, !dbg !16493
  %and194 = and i64 %sub193, 67108864, !dbg !16493
  %tobool195 = icmp ne i64 %and194, 0, !dbg !16493
  br i1 %tobool195, label %cond.true196, label %cond.false197, !dbg !16493

cond.true196:                                     ; preds = %cond.false192
  br label %cond.end361, !dbg !16493

cond.false197:                                    ; preds = %cond.false192
  %47 = load i64, i64* %size.addr, align 8, !dbg !16493
  %sub198 = sub i64 %47, 1, !dbg !16493
  %and199 = and i64 %sub198, 33554432, !dbg !16493
  %tobool200 = icmp ne i64 %and199, 0, !dbg !16493
  br i1 %tobool200, label %cond.true201, label %cond.false202, !dbg !16493

cond.true201:                                     ; preds = %cond.false197
  br label %cond.end359, !dbg !16493

cond.false202:                                    ; preds = %cond.false197
  %48 = load i64, i64* %size.addr, align 8, !dbg !16493
  %sub203 = sub i64 %48, 1, !dbg !16493
  %and204 = and i64 %sub203, 16777216, !dbg !16493
  %tobool205 = icmp ne i64 %and204, 0, !dbg !16493
  br i1 %tobool205, label %cond.true206, label %cond.false207, !dbg !16493

cond.true206:                                     ; preds = %cond.false202
  br label %cond.end357, !dbg !16493

cond.false207:                                    ; preds = %cond.false202
  %49 = load i64, i64* %size.addr, align 8, !dbg !16493
  %sub208 = sub i64 %49, 1, !dbg !16493
  %and209 = and i64 %sub208, 8388608, !dbg !16493
  %tobool210 = icmp ne i64 %and209, 0, !dbg !16493
  br i1 %tobool210, label %cond.true211, label %cond.false212, !dbg !16493

cond.true211:                                     ; preds = %cond.false207
  br label %cond.end355, !dbg !16493

cond.false212:                                    ; preds = %cond.false207
  %50 = load i64, i64* %size.addr, align 8, !dbg !16493
  %sub213 = sub i64 %50, 1, !dbg !16493
  %and214 = and i64 %sub213, 4194304, !dbg !16493
  %tobool215 = icmp ne i64 %and214, 0, !dbg !16493
  br i1 %tobool215, label %cond.true216, label %cond.false217, !dbg !16493

cond.true216:                                     ; preds = %cond.false212
  br label %cond.end353, !dbg !16493

cond.false217:                                    ; preds = %cond.false212
  %51 = load i64, i64* %size.addr, align 8, !dbg !16493
  %sub218 = sub i64 %51, 1, !dbg !16493
  %and219 = and i64 %sub218, 2097152, !dbg !16493
  %tobool220 = icmp ne i64 %and219, 0, !dbg !16493
  br i1 %tobool220, label %cond.true221, label %cond.false222, !dbg !16493

cond.true221:                                     ; preds = %cond.false217
  br label %cond.end351, !dbg !16493

cond.false222:                                    ; preds = %cond.false217
  %52 = load i64, i64* %size.addr, align 8, !dbg !16493
  %sub223 = sub i64 %52, 1, !dbg !16493
  %and224 = and i64 %sub223, 1048576, !dbg !16493
  %tobool225 = icmp ne i64 %and224, 0, !dbg !16493
  br i1 %tobool225, label %cond.true226, label %cond.false227, !dbg !16493

cond.true226:                                     ; preds = %cond.false222
  br label %cond.end349, !dbg !16493

cond.false227:                                    ; preds = %cond.false222
  %53 = load i64, i64* %size.addr, align 8, !dbg !16493
  %sub228 = sub i64 %53, 1, !dbg !16493
  %and229 = and i64 %sub228, 524288, !dbg !16493
  %tobool230 = icmp ne i64 %and229, 0, !dbg !16493
  br i1 %tobool230, label %cond.true231, label %cond.false232, !dbg !16493

cond.true231:                                     ; preds = %cond.false227
  br label %cond.end347, !dbg !16493

cond.false232:                                    ; preds = %cond.false227
  %54 = load i64, i64* %size.addr, align 8, !dbg !16493
  %sub233 = sub i64 %54, 1, !dbg !16493
  %and234 = and i64 %sub233, 262144, !dbg !16493
  %tobool235 = icmp ne i64 %and234, 0, !dbg !16493
  br i1 %tobool235, label %cond.true236, label %cond.false237, !dbg !16493

cond.true236:                                     ; preds = %cond.false232
  br label %cond.end345, !dbg !16493

cond.false237:                                    ; preds = %cond.false232
  %55 = load i64, i64* %size.addr, align 8, !dbg !16493
  %sub238 = sub i64 %55, 1, !dbg !16493
  %and239 = and i64 %sub238, 131072, !dbg !16493
  %tobool240 = icmp ne i64 %and239, 0, !dbg !16493
  br i1 %tobool240, label %cond.true241, label %cond.false242, !dbg !16493

cond.true241:                                     ; preds = %cond.false237
  br label %cond.end343, !dbg !16493

cond.false242:                                    ; preds = %cond.false237
  %56 = load i64, i64* %size.addr, align 8, !dbg !16493
  %sub243 = sub i64 %56, 1, !dbg !16493
  %and244 = and i64 %sub243, 65536, !dbg !16493
  %tobool245 = icmp ne i64 %and244, 0, !dbg !16493
  br i1 %tobool245, label %cond.true246, label %cond.false247, !dbg !16493

cond.true246:                                     ; preds = %cond.false242
  br label %cond.end341, !dbg !16493

cond.false247:                                    ; preds = %cond.false242
  %57 = load i64, i64* %size.addr, align 8, !dbg !16493
  %sub248 = sub i64 %57, 1, !dbg !16493
  %and249 = and i64 %sub248, 32768, !dbg !16493
  %tobool250 = icmp ne i64 %and249, 0, !dbg !16493
  br i1 %tobool250, label %cond.true251, label %cond.false252, !dbg !16493

cond.true251:                                     ; preds = %cond.false247
  br label %cond.end339, !dbg !16493

cond.false252:                                    ; preds = %cond.false247
  %58 = load i64, i64* %size.addr, align 8, !dbg !16493
  %sub253 = sub i64 %58, 1, !dbg !16493
  %and254 = and i64 %sub253, 16384, !dbg !16493
  %tobool255 = icmp ne i64 %and254, 0, !dbg !16493
  br i1 %tobool255, label %cond.true256, label %cond.false257, !dbg !16493

cond.true256:                                     ; preds = %cond.false252
  br label %cond.end337, !dbg !16493

cond.false257:                                    ; preds = %cond.false252
  %59 = load i64, i64* %size.addr, align 8, !dbg !16493
  %sub258 = sub i64 %59, 1, !dbg !16493
  %and259 = and i64 %sub258, 8192, !dbg !16493
  %tobool260 = icmp ne i64 %and259, 0, !dbg !16493
  br i1 %tobool260, label %cond.true261, label %cond.false262, !dbg !16493

cond.true261:                                     ; preds = %cond.false257
  br label %cond.end335, !dbg !16493

cond.false262:                                    ; preds = %cond.false257
  %60 = load i64, i64* %size.addr, align 8, !dbg !16493
  %sub263 = sub i64 %60, 1, !dbg !16493
  %and264 = and i64 %sub263, 4096, !dbg !16493
  %tobool265 = icmp ne i64 %and264, 0, !dbg !16493
  br i1 %tobool265, label %cond.true266, label %cond.false267, !dbg !16493

cond.true266:                                     ; preds = %cond.false262
  br label %cond.end333, !dbg !16493

cond.false267:                                    ; preds = %cond.false262
  %61 = load i64, i64* %size.addr, align 8, !dbg !16493
  %sub268 = sub i64 %61, 1, !dbg !16493
  %and269 = and i64 %sub268, 2048, !dbg !16493
  %tobool270 = icmp ne i64 %and269, 0, !dbg !16493
  br i1 %tobool270, label %cond.true271, label %cond.false272, !dbg !16493

cond.true271:                                     ; preds = %cond.false267
  br label %cond.end331, !dbg !16493

cond.false272:                                    ; preds = %cond.false267
  %62 = load i64, i64* %size.addr, align 8, !dbg !16493
  %sub273 = sub i64 %62, 1, !dbg !16493
  %and274 = and i64 %sub273, 1024, !dbg !16493
  %tobool275 = icmp ne i64 %and274, 0, !dbg !16493
  br i1 %tobool275, label %cond.true276, label %cond.false277, !dbg !16493

cond.true276:                                     ; preds = %cond.false272
  br label %cond.end329, !dbg !16493

cond.false277:                                    ; preds = %cond.false272
  %63 = load i64, i64* %size.addr, align 8, !dbg !16493
  %sub278 = sub i64 %63, 1, !dbg !16493
  %and279 = and i64 %sub278, 512, !dbg !16493
  %tobool280 = icmp ne i64 %and279, 0, !dbg !16493
  br i1 %tobool280, label %cond.true281, label %cond.false282, !dbg !16493

cond.true281:                                     ; preds = %cond.false277
  br label %cond.end327, !dbg !16493

cond.false282:                                    ; preds = %cond.false277
  %64 = load i64, i64* %size.addr, align 8, !dbg !16493
  %sub283 = sub i64 %64, 1, !dbg !16493
  %and284 = and i64 %sub283, 256, !dbg !16493
  %tobool285 = icmp ne i64 %and284, 0, !dbg !16493
  br i1 %tobool285, label %cond.true286, label %cond.false287, !dbg !16493

cond.true286:                                     ; preds = %cond.false282
  br label %cond.end325, !dbg !16493

cond.false287:                                    ; preds = %cond.false282
  %65 = load i64, i64* %size.addr, align 8, !dbg !16493
  %sub288 = sub i64 %65, 1, !dbg !16493
  %and289 = and i64 %sub288, 128, !dbg !16493
  %tobool290 = icmp ne i64 %and289, 0, !dbg !16493
  br i1 %tobool290, label %cond.true291, label %cond.false292, !dbg !16493

cond.true291:                                     ; preds = %cond.false287
  br label %cond.end323, !dbg !16493

cond.false292:                                    ; preds = %cond.false287
  %66 = load i64, i64* %size.addr, align 8, !dbg !16493
  %sub293 = sub i64 %66, 1, !dbg !16493
  %and294 = and i64 %sub293, 64, !dbg !16493
  %tobool295 = icmp ne i64 %and294, 0, !dbg !16493
  br i1 %tobool295, label %cond.true296, label %cond.false297, !dbg !16493

cond.true296:                                     ; preds = %cond.false292
  br label %cond.end321, !dbg !16493

cond.false297:                                    ; preds = %cond.false292
  %67 = load i64, i64* %size.addr, align 8, !dbg !16493
  %sub298 = sub i64 %67, 1, !dbg !16493
  %and299 = and i64 %sub298, 32, !dbg !16493
  %tobool300 = icmp ne i64 %and299, 0, !dbg !16493
  br i1 %tobool300, label %cond.true301, label %cond.false302, !dbg !16493

cond.true301:                                     ; preds = %cond.false297
  br label %cond.end319, !dbg !16493

cond.false302:                                    ; preds = %cond.false297
  %68 = load i64, i64* %size.addr, align 8, !dbg !16493
  %sub303 = sub i64 %68, 1, !dbg !16493
  %and304 = and i64 %sub303, 16, !dbg !16493
  %tobool305 = icmp ne i64 %and304, 0, !dbg !16493
  br i1 %tobool305, label %cond.true306, label %cond.false307, !dbg !16493

cond.true306:                                     ; preds = %cond.false302
  br label %cond.end317, !dbg !16493

cond.false307:                                    ; preds = %cond.false302
  %69 = load i64, i64* %size.addr, align 8, !dbg !16493
  %sub308 = sub i64 %69, 1, !dbg !16493
  %and309 = and i64 %sub308, 8, !dbg !16493
  %tobool310 = icmp ne i64 %and309, 0, !dbg !16493
  br i1 %tobool310, label %cond.true311, label %cond.false312, !dbg !16493

cond.true311:                                     ; preds = %cond.false307
  br label %cond.end, !dbg !16493

cond.false312:                                    ; preds = %cond.false307
  %70 = load i64, i64* %size.addr, align 8, !dbg !16493
  %sub313 = sub i64 %70, 1, !dbg !16493
  %and314 = and i64 %sub313, 4, !dbg !16493
  %tobool315 = icmp ne i64 %and314, 0, !dbg !16493
  %71 = zext i1 %tobool315 to i64, !dbg !16493
  %cond = select i1 %tobool315, i32 2, i32 1, !dbg !16493
  br label %cond.end, !dbg !16493

cond.end:                                         ; preds = %cond.false312, %cond.true311
  %cond316 = phi i32 [ 3, %cond.true311 ], [ %cond, %cond.false312 ], !dbg !16493
  br label %cond.end317, !dbg !16493

cond.end317:                                      ; preds = %cond.end, %cond.true306
  %cond318 = phi i32 [ 4, %cond.true306 ], [ %cond316, %cond.end ], !dbg !16493
  br label %cond.end319, !dbg !16493

cond.end319:                                      ; preds = %cond.end317, %cond.true301
  %cond320 = phi i32 [ 5, %cond.true301 ], [ %cond318, %cond.end317 ], !dbg !16493
  br label %cond.end321, !dbg !16493

cond.end321:                                      ; preds = %cond.end319, %cond.true296
  %cond322 = phi i32 [ 6, %cond.true296 ], [ %cond320, %cond.end319 ], !dbg !16493
  br label %cond.end323, !dbg !16493

cond.end323:                                      ; preds = %cond.end321, %cond.true291
  %cond324 = phi i32 [ 7, %cond.true291 ], [ %cond322, %cond.end321 ], !dbg !16493
  br label %cond.end325, !dbg !16493

cond.end325:                                      ; preds = %cond.end323, %cond.true286
  %cond326 = phi i32 [ 8, %cond.true286 ], [ %cond324, %cond.end323 ], !dbg !16493
  br label %cond.end327, !dbg !16493

cond.end327:                                      ; preds = %cond.end325, %cond.true281
  %cond328 = phi i32 [ 9, %cond.true281 ], [ %cond326, %cond.end325 ], !dbg !16493
  br label %cond.end329, !dbg !16493

cond.end329:                                      ; preds = %cond.end327, %cond.true276
  %cond330 = phi i32 [ 10, %cond.true276 ], [ %cond328, %cond.end327 ], !dbg !16493
  br label %cond.end331, !dbg !16493

cond.end331:                                      ; preds = %cond.end329, %cond.true271
  %cond332 = phi i32 [ 11, %cond.true271 ], [ %cond330, %cond.end329 ], !dbg !16493
  br label %cond.end333, !dbg !16493

cond.end333:                                      ; preds = %cond.end331, %cond.true266
  %cond334 = phi i32 [ 12, %cond.true266 ], [ %cond332, %cond.end331 ], !dbg !16493
  br label %cond.end335, !dbg !16493

cond.end335:                                      ; preds = %cond.end333, %cond.true261
  %cond336 = phi i32 [ 13, %cond.true261 ], [ %cond334, %cond.end333 ], !dbg !16493
  br label %cond.end337, !dbg !16493

cond.end337:                                      ; preds = %cond.end335, %cond.true256
  %cond338 = phi i32 [ 14, %cond.true256 ], [ %cond336, %cond.end335 ], !dbg !16493
  br label %cond.end339, !dbg !16493

cond.end339:                                      ; preds = %cond.end337, %cond.true251
  %cond340 = phi i32 [ 15, %cond.true251 ], [ %cond338, %cond.end337 ], !dbg !16493
  br label %cond.end341, !dbg !16493

cond.end341:                                      ; preds = %cond.end339, %cond.true246
  %cond342 = phi i32 [ 16, %cond.true246 ], [ %cond340, %cond.end339 ], !dbg !16493
  br label %cond.end343, !dbg !16493

cond.end343:                                      ; preds = %cond.end341, %cond.true241
  %cond344 = phi i32 [ 17, %cond.true241 ], [ %cond342, %cond.end341 ], !dbg !16493
  br label %cond.end345, !dbg !16493

cond.end345:                                      ; preds = %cond.end343, %cond.true236
  %cond346 = phi i32 [ 18, %cond.true236 ], [ %cond344, %cond.end343 ], !dbg !16493
  br label %cond.end347, !dbg !16493

cond.end347:                                      ; preds = %cond.end345, %cond.true231
  %cond348 = phi i32 [ 19, %cond.true231 ], [ %cond346, %cond.end345 ], !dbg !16493
  br label %cond.end349, !dbg !16493

cond.end349:                                      ; preds = %cond.end347, %cond.true226
  %cond350 = phi i32 [ 20, %cond.true226 ], [ %cond348, %cond.end347 ], !dbg !16493
  br label %cond.end351, !dbg !16493

cond.end351:                                      ; preds = %cond.end349, %cond.true221
  %cond352 = phi i32 [ 21, %cond.true221 ], [ %cond350, %cond.end349 ], !dbg !16493
  br label %cond.end353, !dbg !16493

cond.end353:                                      ; preds = %cond.end351, %cond.true216
  %cond354 = phi i32 [ 22, %cond.true216 ], [ %cond352, %cond.end351 ], !dbg !16493
  br label %cond.end355, !dbg !16493

cond.end355:                                      ; preds = %cond.end353, %cond.true211
  %cond356 = phi i32 [ 23, %cond.true211 ], [ %cond354, %cond.end353 ], !dbg !16493
  br label %cond.end357, !dbg !16493

cond.end357:                                      ; preds = %cond.end355, %cond.true206
  %cond358 = phi i32 [ 24, %cond.true206 ], [ %cond356, %cond.end355 ], !dbg !16493
  br label %cond.end359, !dbg !16493

cond.end359:                                      ; preds = %cond.end357, %cond.true201
  %cond360 = phi i32 [ 25, %cond.true201 ], [ %cond358, %cond.end357 ], !dbg !16493
  br label %cond.end361, !dbg !16493

cond.end361:                                      ; preds = %cond.end359, %cond.true196
  %cond362 = phi i32 [ 26, %cond.true196 ], [ %cond360, %cond.end359 ], !dbg !16493
  br label %cond.end363, !dbg !16493

cond.end363:                                      ; preds = %cond.end361, %cond.true191
  %cond364 = phi i32 [ 27, %cond.true191 ], [ %cond362, %cond.end361 ], !dbg !16493
  br label %cond.end365, !dbg !16493

cond.end365:                                      ; preds = %cond.end363, %cond.true186
  %cond366 = phi i32 [ 28, %cond.true186 ], [ %cond364, %cond.end363 ], !dbg !16493
  br label %cond.end367, !dbg !16493

cond.end367:                                      ; preds = %cond.end365, %cond.true181
  %cond368 = phi i32 [ 29, %cond.true181 ], [ %cond366, %cond.end365 ], !dbg !16493
  br label %cond.end369, !dbg !16493

cond.end369:                                      ; preds = %cond.end367, %cond.true176
  %cond370 = phi i32 [ 30, %cond.true176 ], [ %cond368, %cond.end367 ], !dbg !16493
  br label %cond.end371, !dbg !16493

cond.end371:                                      ; preds = %cond.end369, %cond.true171
  %cond372 = phi i32 [ 31, %cond.true171 ], [ %cond370, %cond.end369 ], !dbg !16493
  br label %cond.end373, !dbg !16493

cond.end373:                                      ; preds = %cond.end371, %cond.true166
  %cond374 = phi i32 [ 32, %cond.true166 ], [ %cond372, %cond.end371 ], !dbg !16493
  br label %cond.end375, !dbg !16493

cond.end375:                                      ; preds = %cond.end373, %cond.true161
  %cond376 = phi i32 [ 33, %cond.true161 ], [ %cond374, %cond.end373 ], !dbg !16493
  br label %cond.end377, !dbg !16493

cond.end377:                                      ; preds = %cond.end375, %cond.true156
  %cond378 = phi i32 [ 34, %cond.true156 ], [ %cond376, %cond.end375 ], !dbg !16493
  br label %cond.end379, !dbg !16493

cond.end379:                                      ; preds = %cond.end377, %cond.true151
  %cond380 = phi i32 [ 35, %cond.true151 ], [ %cond378, %cond.end377 ], !dbg !16493
  br label %cond.end381, !dbg !16493

cond.end381:                                      ; preds = %cond.end379, %cond.true146
  %cond382 = phi i32 [ 36, %cond.true146 ], [ %cond380, %cond.end379 ], !dbg !16493
  br label %cond.end383, !dbg !16493

cond.end383:                                      ; preds = %cond.end381, %cond.true141
  %cond384 = phi i32 [ 37, %cond.true141 ], [ %cond382, %cond.end381 ], !dbg !16493
  br label %cond.end385, !dbg !16493

cond.end385:                                      ; preds = %cond.end383, %cond.true136
  %cond386 = phi i32 [ 38, %cond.true136 ], [ %cond384, %cond.end383 ], !dbg !16493
  br label %cond.end387, !dbg !16493

cond.end387:                                      ; preds = %cond.end385, %cond.true131
  %cond388 = phi i32 [ 39, %cond.true131 ], [ %cond386, %cond.end385 ], !dbg !16493
  br label %cond.end389, !dbg !16493

cond.end389:                                      ; preds = %cond.end387, %cond.true126
  %cond390 = phi i32 [ 40, %cond.true126 ], [ %cond388, %cond.end387 ], !dbg !16493
  br label %cond.end391, !dbg !16493

cond.end391:                                      ; preds = %cond.end389, %cond.true121
  %cond392 = phi i32 [ 41, %cond.true121 ], [ %cond390, %cond.end389 ], !dbg !16493
  br label %cond.end393, !dbg !16493

cond.end393:                                      ; preds = %cond.end391, %cond.true116
  %cond394 = phi i32 [ 42, %cond.true116 ], [ %cond392, %cond.end391 ], !dbg !16493
  br label %cond.end395, !dbg !16493

cond.end395:                                      ; preds = %cond.end393, %cond.true111
  %cond396 = phi i32 [ 43, %cond.true111 ], [ %cond394, %cond.end393 ], !dbg !16493
  br label %cond.end397, !dbg !16493

cond.end397:                                      ; preds = %cond.end395, %cond.true106
  %cond398 = phi i32 [ 44, %cond.true106 ], [ %cond396, %cond.end395 ], !dbg !16493
  br label %cond.end399, !dbg !16493

cond.end399:                                      ; preds = %cond.end397, %cond.true101
  %cond400 = phi i32 [ 45, %cond.true101 ], [ %cond398, %cond.end397 ], !dbg !16493
  br label %cond.end401, !dbg !16493

cond.end401:                                      ; preds = %cond.end399, %cond.true96
  %cond402 = phi i32 [ 46, %cond.true96 ], [ %cond400, %cond.end399 ], !dbg !16493
  br label %cond.end403, !dbg !16493

cond.end403:                                      ; preds = %cond.end401, %cond.true91
  %cond404 = phi i32 [ 47, %cond.true91 ], [ %cond402, %cond.end401 ], !dbg !16493
  br label %cond.end405, !dbg !16493

cond.end405:                                      ; preds = %cond.end403, %cond.true86
  %cond406 = phi i32 [ 48, %cond.true86 ], [ %cond404, %cond.end403 ], !dbg !16493
  br label %cond.end407, !dbg !16493

cond.end407:                                      ; preds = %cond.end405, %cond.true81
  %cond408 = phi i32 [ 49, %cond.true81 ], [ %cond406, %cond.end405 ], !dbg !16493
  br label %cond.end409, !dbg !16493

cond.end409:                                      ; preds = %cond.end407, %cond.true76
  %cond410 = phi i32 [ 50, %cond.true76 ], [ %cond408, %cond.end407 ], !dbg !16493
  br label %cond.end411, !dbg !16493

cond.end411:                                      ; preds = %cond.end409, %cond.true71
  %cond412 = phi i32 [ 51, %cond.true71 ], [ %cond410, %cond.end409 ], !dbg !16493
  br label %cond.end413, !dbg !16493

cond.end413:                                      ; preds = %cond.end411, %cond.true66
  %cond414 = phi i32 [ 52, %cond.true66 ], [ %cond412, %cond.end411 ], !dbg !16493
  br label %cond.end415, !dbg !16493

cond.end415:                                      ; preds = %cond.end413, %cond.true61
  %cond416 = phi i32 [ 53, %cond.true61 ], [ %cond414, %cond.end413 ], !dbg !16493
  br label %cond.end417, !dbg !16493

cond.end417:                                      ; preds = %cond.end415, %cond.true56
  %cond418 = phi i32 [ 54, %cond.true56 ], [ %cond416, %cond.end415 ], !dbg !16493
  br label %cond.end419, !dbg !16493

cond.end419:                                      ; preds = %cond.end417, %cond.true51
  %cond420 = phi i32 [ 55, %cond.true51 ], [ %cond418, %cond.end417 ], !dbg !16493
  br label %cond.end421, !dbg !16493

cond.end421:                                      ; preds = %cond.end419, %cond.true46
  %cond422 = phi i32 [ 56, %cond.true46 ], [ %cond420, %cond.end419 ], !dbg !16493
  br label %cond.end423, !dbg !16493

cond.end423:                                      ; preds = %cond.end421, %cond.true41
  %cond424 = phi i32 [ 57, %cond.true41 ], [ %cond422, %cond.end421 ], !dbg !16493
  br label %cond.end425, !dbg !16493

cond.end425:                                      ; preds = %cond.end423, %cond.true36
  %cond426 = phi i32 [ 58, %cond.true36 ], [ %cond424, %cond.end423 ], !dbg !16493
  br label %cond.end427, !dbg !16493

cond.end427:                                      ; preds = %cond.end425, %cond.true31
  %cond428 = phi i32 [ 59, %cond.true31 ], [ %cond426, %cond.end425 ], !dbg !16493
  br label %cond.end429, !dbg !16493

cond.end429:                                      ; preds = %cond.end427, %cond.true26
  %cond430 = phi i32 [ 60, %cond.true26 ], [ %cond428, %cond.end427 ], !dbg !16493
  br label %cond.end431, !dbg !16493

cond.end431:                                      ; preds = %cond.end429, %cond.true21
  %cond432 = phi i32 [ 61, %cond.true21 ], [ %cond430, %cond.end429 ], !dbg !16493
  br label %cond.end433, !dbg !16493

cond.end433:                                      ; preds = %cond.end431, %cond.true16
  %cond434 = phi i32 [ 62, %cond.true16 ], [ %cond432, %cond.end431 ], !dbg !16493
  br label %cond.end435, !dbg !16493

cond.end435:                                      ; preds = %cond.end433, %cond.true11
  %cond436 = phi i32 [ 63, %cond.true11 ], [ %cond434, %cond.end433 ], !dbg !16493
  br label %cond.end437, !dbg !16493

cond.end437:                                      ; preds = %cond.end435, %cond.true8
  %cond438 = phi i32 [ 0, %cond.true8 ], [ %cond436, %cond.end435 ], !dbg !16493
  br label %cond.end440, !dbg !16493

cond.false439:                                    ; preds = %cond.true
  br label %cond.end440, !dbg !16493

cond.end440:                                      ; preds = %cond.false439, %cond.end437
  %cond441 = phi i32 [ %cond438, %cond.end437 ], [ -1, %cond.false439 ], !dbg !16493
  br label %cond.end444, !dbg !16493

cond.false442:                                    ; preds = %if.end3
  %72 = load i64, i64* %size.addr, align 8, !dbg !16493
  %sub443 = sub i64 %72, 1, !dbg !16493
  %call = call i32 @__ilog2_u64(i64 %sub443) #16, !dbg !16493
  br label %cond.end444, !dbg !16493

cond.end444:                                      ; preds = %cond.false442, %cond.end440
  %cond445 = phi i32 [ %cond441, %cond.end440 ], [ %call, %cond.false442 ], !dbg !16493
  %sub446 = sub i32 %cond445, 12, !dbg !16494
  %add = add i32 %sub446, 1, !dbg !16495
  store i32 %add, i32* %retval, align 4, !dbg !16496
  br label %return, !dbg !16496

if.end447:                                        ; preds = %entry
  %73 = load i64, i64* %size.addr, align 8, !dbg !16497
  %dec = add i64 %73, -1, !dbg !16497
  store i64 %dec, i64* %size.addr, align 8, !dbg !16497
  %74 = load i64, i64* %size.addr, align 8, !dbg !16498
  %shr = lshr i64 %74, 12, !dbg !16498
  store i64 %shr, i64* %size.addr, align 8, !dbg !16498
  %75 = load i64, i64* %size.addr, align 8, !dbg !16499
  store i64 %75, i64* %x.addr.i, align 8
  store i32 -1, i32* %bitpos.i, align 4, !dbg !16476
  %76 = load i32, i32* %bitpos.i, align 4, !dbg !16500
  %77 = load i64, i64* %x.addr.i, align 8, !dbg !16501
  %78 = call i32 asm "bsrq $1,${0:q}", "=r,rm,0,~{dirflag},~{fpsr},~{flags}"(i64 %77, i32 %76) #7, !dbg !16500, !srcloc !16502
  store i32 %78, i32* %bitpos.i, align 4, !dbg !16500
  %79 = load i32, i32* %bitpos.i, align 4, !dbg !16503
  %add.i = add i32 %79, 1, !dbg !16504
  store i32 %add.i, i32* %retval, align 4, !dbg !16505
  br label %return, !dbg !16505

return:                                           ; preds = %if.end447, %cond.end444, %if.then2, %if.then1
  %80 = load i32, i32* %retval, align 4, !dbg !16506
  ret i32 %80, !dbg !16506
}

; Function Attrs: noinline noredzone nounwind optnone readnone sspstrong
define internal i32 @__ilog2_u64(i64 %n) #10 !dbg !16507 {
entry:
  %x.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %x.addr.i, metadata !16469, metadata !DIExpression()), !dbg !16511
  %bitpos.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %bitpos.i, metadata !16475, metadata !DIExpression()), !dbg !16513
  %n.addr = alloca i64, align 8
  store i64 %n, i64* %n.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %n.addr, metadata !16514, metadata !DIExpression()), !dbg !16515
  %0 = load i64, i64* %n.addr, align 8, !dbg !16516
  store i64 %0, i64* %x.addr.i, align 8
  store i32 -1, i32* %bitpos.i, align 4, !dbg !16513
  %1 = load i32, i32* %bitpos.i, align 4, !dbg !16517
  %2 = load i64, i64* %x.addr.i, align 8, !dbg !16518
  %3 = call i32 asm "bsrq $1,${0:q}", "=r,rm,0,~{dirflag},~{fpsr},~{flags}"(i64 %2, i32 %1) #7, !dbg !16517, !srcloc !16502
  store i32 %3, i32* %bitpos.i, align 4, !dbg !16517
  %4 = load i32, i32* %bitpos.i, align 4, !dbg !16519
  %add.i = add i32 %4, 1, !dbg !16520
  %sub = sub i32 %add.i, 1, !dbg !16521
  ret i32 %sub, !dbg !16522
}

; Function Attrs: noredzone
declare dso_local noalias i8* @kmalloc_order(i64, i32, i32) #1

; Function Attrs: noredzone
declare dso_local noalias i8* @kmem_cache_alloc(%struct.kmem_cache*, i32) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @kasan_kmalloc(%struct.kmem_cache* %s, i8* %object, i64 %size, i32 %flags) #2 !dbg !16523 {
entry:
  %s.addr = alloca %struct.kmem_cache*, align 8
  %object.addr = alloca i8*, align 8
  %size.addr = alloca i64, align 8
  %flags.addr = alloca i32, align 4
  store %struct.kmem_cache* %s, %struct.kmem_cache** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.kmem_cache** %s.addr, metadata !16527, metadata !DIExpression()), !dbg !16528
  store i8* %object, i8** %object.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %object.addr, metadata !16529, metadata !DIExpression()), !dbg !16530
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !16531, metadata !DIExpression()), !dbg !16532
  store i32 %flags, i32* %flags.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr, metadata !16533, metadata !DIExpression()), !dbg !16534
  %0 = load i8*, i8** %object.addr, align 8, !dbg !16535
  ret i8* %0, !dbg !16536
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @macb_set_hwaddr(%struct.macb* %bp) #2 !dbg !16537 {
entry:
  %bp.addr = alloca %struct.macb*, align 8
  %bottom = alloca i32, align 4
  %top = alloca i16, align 2
  store %struct.macb* %bp, %struct.macb** %bp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.macb** %bp.addr, metadata !16538, metadata !DIExpression()), !dbg !16539
  call void @llvm.dbg.declare(metadata i32* %bottom, metadata !16540, metadata !DIExpression()), !dbg !16541
  call void @llvm.dbg.declare(metadata i16* %top, metadata !16542, metadata !DIExpression()), !dbg !16543
  %0 = load %struct.macb*, %struct.macb** %bp.addr, align 8, !dbg !16544
  %dev = getelementptr inbounds %struct.macb, %struct.macb* %0, i32 0, i32 17, !dbg !16544
  %1 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !16544
  %dev_addr = getelementptr inbounds %struct.net_device, %struct.net_device* %1, i32 0, i32 74, !dbg !16544
  %2 = load i8*, i8** %dev_addr, align 8, !dbg !16544
  %3 = bitcast i8* %2 to i32*, !dbg !16544
  %4 = load i32, i32* %3, align 4, !dbg !16544
  store i32 %4, i32* %bottom, align 4, !dbg !16545
  %5 = load %struct.macb*, %struct.macb** %bp.addr, align 8, !dbg !16546
  %call = call zeroext i1 @macb_is_gem(%struct.macb* %5) #12, !dbg !16546
  br i1 %call, label %if.then, label %if.else, !dbg !16549

if.then:                                          ; preds = %entry
  %6 = load %struct.macb*, %struct.macb** %bp.addr, align 8, !dbg !16546
  %macb_reg_writel = getelementptr inbounds %struct.macb, %struct.macb* %6, i32 0, i32 3, !dbg !16546
  %7 = load void (%struct.macb*, i32, i32)*, void (%struct.macb*, i32, i32)** %macb_reg_writel, align 8, !dbg !16546
  %8 = load %struct.macb*, %struct.macb** %bp.addr, align 8, !dbg !16546
  %9 = load i32, i32* %bottom, align 4, !dbg !16546
  call void %7(%struct.macb* %8, i32 136, i32 %9) #12, !dbg !16546
  br label %if.end, !dbg !16546

if.else:                                          ; preds = %entry
  %10 = load %struct.macb*, %struct.macb** %bp.addr, align 8, !dbg !16546
  %macb_reg_writel1 = getelementptr inbounds %struct.macb, %struct.macb* %10, i32 0, i32 3, !dbg !16546
  %11 = load void (%struct.macb*, i32, i32)*, void (%struct.macb*, i32, i32)** %macb_reg_writel1, align 8, !dbg !16546
  %12 = load %struct.macb*, %struct.macb** %bp.addr, align 8, !dbg !16546
  %13 = load i32, i32* %bottom, align 4, !dbg !16546
  call void %11(%struct.macb* %12, i32 152, i32 %13) #12, !dbg !16546
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %14 = load %struct.macb*, %struct.macb** %bp.addr, align 8, !dbg !16550
  %dev2 = getelementptr inbounds %struct.macb, %struct.macb* %14, i32 0, i32 17, !dbg !16550
  %15 = load %struct.net_device*, %struct.net_device** %dev2, align 8, !dbg !16550
  %dev_addr3 = getelementptr inbounds %struct.net_device, %struct.net_device* %15, i32 0, i32 74, !dbg !16550
  %16 = load i8*, i8** %dev_addr3, align 8, !dbg !16550
  %add.ptr = getelementptr i8, i8* %16, i64 4, !dbg !16550
  %17 = bitcast i8* %add.ptr to i16*, !dbg !16550
  %18 = load i16, i16* %17, align 2, !dbg !16550
  store i16 %18, i16* %top, align 2, !dbg !16551
  %19 = load %struct.macb*, %struct.macb** %bp.addr, align 8, !dbg !16552
  %call4 = call zeroext i1 @macb_is_gem(%struct.macb* %19) #12, !dbg !16552
  br i1 %call4, label %if.then5, label %if.else7, !dbg !16555

if.then5:                                         ; preds = %if.end
  %20 = load %struct.macb*, %struct.macb** %bp.addr, align 8, !dbg !16552
  %macb_reg_writel6 = getelementptr inbounds %struct.macb, %struct.macb* %20, i32 0, i32 3, !dbg !16552
  %21 = load void (%struct.macb*, i32, i32)*, void (%struct.macb*, i32, i32)** %macb_reg_writel6, align 8, !dbg !16552
  %22 = load %struct.macb*, %struct.macb** %bp.addr, align 8, !dbg !16552
  %23 = load i16, i16* %top, align 2, !dbg !16552
  %conv = zext i16 %23 to i32, !dbg !16552
  call void %21(%struct.macb* %22, i32 140, i32 %conv) #12, !dbg !16552
  br label %if.end10, !dbg !16552

if.else7:                                         ; preds = %if.end
  %24 = load %struct.macb*, %struct.macb** %bp.addr, align 8, !dbg !16552
  %macb_reg_writel8 = getelementptr inbounds %struct.macb, %struct.macb* %24, i32 0, i32 3, !dbg !16552
  %25 = load void (%struct.macb*, i32, i32)*, void (%struct.macb*, i32, i32)** %macb_reg_writel8, align 8, !dbg !16552
  %26 = load %struct.macb*, %struct.macb** %bp.addr, align 8, !dbg !16552
  %27 = load i16, i16* %top, align 2, !dbg !16552
  %conv9 = zext i16 %27 to i32, !dbg !16552
  call void %25(%struct.macb* %26, i32 156, i32 %conv9) #12, !dbg !16552
  br label %if.end10

if.end10:                                         ; preds = %if.else7, %if.then5
  %28 = load %struct.macb*, %struct.macb** %bp.addr, align 8, !dbg !16556
  %call11 = call zeroext i1 @macb_is_gem(%struct.macb* %28) #12, !dbg !16556
  br i1 %call11, label %if.then12, label %if.else14, !dbg !16559

if.then12:                                        ; preds = %if.end10
  %29 = load %struct.macb*, %struct.macb** %bp.addr, align 8, !dbg !16556
  %macb_reg_writel13 = getelementptr inbounds %struct.macb, %struct.macb* %29, i32 0, i32 3, !dbg !16556
  %30 = load void (%struct.macb*, i32, i32)*, void (%struct.macb*, i32, i32)** %macb_reg_writel13, align 8, !dbg !16556
  %31 = load %struct.macb*, %struct.macb** %bp.addr, align 8, !dbg !16556
  call void %30(%struct.macb* %31, i32 144, i32 0) #12, !dbg !16556
  br label %if.end16, !dbg !16556

if.else14:                                        ; preds = %if.end10
  %32 = load %struct.macb*, %struct.macb** %bp.addr, align 8, !dbg !16556
  %macb_reg_writel15 = getelementptr inbounds %struct.macb, %struct.macb* %32, i32 0, i32 3, !dbg !16556
  %33 = load void (%struct.macb*, i32, i32)*, void (%struct.macb*, i32, i32)** %macb_reg_writel15, align 8, !dbg !16556
  %34 = load %struct.macb*, %struct.macb** %bp.addr, align 8, !dbg !16556
  call void %33(%struct.macb* %34, i32 160, i32 0) #12, !dbg !16556
  br label %if.end16

if.end16:                                         ; preds = %if.else14, %if.then12
  %35 = load %struct.macb*, %struct.macb** %bp.addr, align 8, !dbg !16560
  %call17 = call zeroext i1 @macb_is_gem(%struct.macb* %35) #12, !dbg !16560
  br i1 %call17, label %if.then18, label %if.else20, !dbg !16563

if.then18:                                        ; preds = %if.end16
  %36 = load %struct.macb*, %struct.macb** %bp.addr, align 8, !dbg !16560
  %macb_reg_writel19 = getelementptr inbounds %struct.macb, %struct.macb* %36, i32 0, i32 3, !dbg !16560
  %37 = load void (%struct.macb*, i32, i32)*, void (%struct.macb*, i32, i32)** %macb_reg_writel19, align 8, !dbg !16560
  %38 = load %struct.macb*, %struct.macb** %bp.addr, align 8, !dbg !16560
  call void %37(%struct.macb* %38, i32 148, i32 0) #12, !dbg !16560
  br label %if.end22, !dbg !16560

if.else20:                                        ; preds = %if.end16
  %39 = load %struct.macb*, %struct.macb** %bp.addr, align 8, !dbg !16560
  %macb_reg_writel21 = getelementptr inbounds %struct.macb, %struct.macb* %39, i32 0, i32 3, !dbg !16560
  %40 = load void (%struct.macb*, i32, i32)*, void (%struct.macb*, i32, i32)** %macb_reg_writel21, align 8, !dbg !16560
  %41 = load %struct.macb*, %struct.macb** %bp.addr, align 8, !dbg !16560
  call void %40(%struct.macb* %41, i32 164, i32 0) #12, !dbg !16560
  br label %if.end22

if.end22:                                         ; preds = %if.else20, %if.then18
  %42 = load %struct.macb*, %struct.macb** %bp.addr, align 8, !dbg !16564
  %call23 = call zeroext i1 @macb_is_gem(%struct.macb* %42) #12, !dbg !16564
  br i1 %call23, label %if.then24, label %if.else26, !dbg !16567

if.then24:                                        ; preds = %if.end22
  %43 = load %struct.macb*, %struct.macb** %bp.addr, align 8, !dbg !16564
  %macb_reg_writel25 = getelementptr inbounds %struct.macb, %struct.macb* %43, i32 0, i32 3, !dbg !16564
  %44 = load void (%struct.macb*, i32, i32)*, void (%struct.macb*, i32, i32)** %macb_reg_writel25, align 8, !dbg !16564
  %45 = load %struct.macb*, %struct.macb** %bp.addr, align 8, !dbg !16564
  call void %44(%struct.macb* %45, i32 152, i32 0) #12, !dbg !16564
  br label %if.end28, !dbg !16564

if.else26:                                        ; preds = %if.end22
  %46 = load %struct.macb*, %struct.macb** %bp.addr, align 8, !dbg !16564
  %macb_reg_writel27 = getelementptr inbounds %struct.macb, %struct.macb* %46, i32 0, i32 3, !dbg !16564
  %47 = load void (%struct.macb*, i32, i32)*, void (%struct.macb*, i32, i32)** %macb_reg_writel27, align 8, !dbg !16564
  %48 = load %struct.macb*, %struct.macb** %bp.addr, align 8, !dbg !16564
  call void %47(%struct.macb* %48, i32 168, i32 0) #12, !dbg !16564
  br label %if.end28

if.end28:                                         ; preds = %if.else26, %if.then24
  %49 = load %struct.macb*, %struct.macb** %bp.addr, align 8, !dbg !16568
  %call29 = call zeroext i1 @macb_is_gem(%struct.macb* %49) #12, !dbg !16568
  br i1 %call29, label %if.then30, label %if.else32, !dbg !16571

if.then30:                                        ; preds = %if.end28
  %50 = load %struct.macb*, %struct.macb** %bp.addr, align 8, !dbg !16568
  %macb_reg_writel31 = getelementptr inbounds %struct.macb, %struct.macb* %50, i32 0, i32 3, !dbg !16568
  %51 = load void (%struct.macb*, i32, i32)*, void (%struct.macb*, i32, i32)** %macb_reg_writel31, align 8, !dbg !16568
  %52 = load %struct.macb*, %struct.macb** %bp.addr, align 8, !dbg !16568
  call void %51(%struct.macb* %52, i32 156, i32 0) #12, !dbg !16568
  br label %if.end34, !dbg !16568

if.else32:                                        ; preds = %if.end28
  %53 = load %struct.macb*, %struct.macb** %bp.addr, align 8, !dbg !16568
  %macb_reg_writel33 = getelementptr inbounds %struct.macb, %struct.macb* %53, i32 0, i32 3, !dbg !16568
  %54 = load void (%struct.macb*, i32, i32)*, void (%struct.macb*, i32, i32)** %macb_reg_writel33, align 8, !dbg !16568
  %55 = load %struct.macb*, %struct.macb** %bp.addr, align 8, !dbg !16568
  call void %54(%struct.macb* %55, i32 172, i32 0) #12, !dbg !16568
  br label %if.end34

if.end34:                                         ; preds = %if.else32, %if.then30
  %56 = load %struct.macb*, %struct.macb** %bp.addr, align 8, !dbg !16572
  %call35 = call zeroext i1 @macb_is_gem(%struct.macb* %56) #12, !dbg !16572
  br i1 %call35, label %if.then36, label %if.else38, !dbg !16575

if.then36:                                        ; preds = %if.end34
  %57 = load %struct.macb*, %struct.macb** %bp.addr, align 8, !dbg !16572
  %macb_reg_writel37 = getelementptr inbounds %struct.macb, %struct.macb* %57, i32 0, i32 3, !dbg !16572
  %58 = load void (%struct.macb*, i32, i32)*, void (%struct.macb*, i32, i32)** %macb_reg_writel37, align 8, !dbg !16572
  %59 = load %struct.macb*, %struct.macb** %bp.addr, align 8, !dbg !16572
  call void %58(%struct.macb* %59, i32 160, i32 0) #12, !dbg !16572
  br label %if.end40, !dbg !16572

if.else38:                                        ; preds = %if.end34
  %60 = load %struct.macb*, %struct.macb** %bp.addr, align 8, !dbg !16572
  %macb_reg_writel39 = getelementptr inbounds %struct.macb, %struct.macb* %60, i32 0, i32 3, !dbg !16572
  %61 = load void (%struct.macb*, i32, i32)*, void (%struct.macb*, i32, i32)** %macb_reg_writel39, align 8, !dbg !16572
  %62 = load %struct.macb*, %struct.macb** %bp.addr, align 8, !dbg !16572
  call void %61(%struct.macb* %62, i32 176, i32 0) #12, !dbg !16572
  br label %if.end40

if.end40:                                         ; preds = %if.else38, %if.then36
  %63 = load %struct.macb*, %struct.macb** %bp.addr, align 8, !dbg !16576
  %call41 = call zeroext i1 @macb_is_gem(%struct.macb* %63) #12, !dbg !16576
  br i1 %call41, label %if.then42, label %if.else44, !dbg !16579

if.then42:                                        ; preds = %if.end40
  %64 = load %struct.macb*, %struct.macb** %bp.addr, align 8, !dbg !16576
  %macb_reg_writel43 = getelementptr inbounds %struct.macb, %struct.macb* %64, i32 0, i32 3, !dbg !16576
  %65 = load void (%struct.macb*, i32, i32)*, void (%struct.macb*, i32, i32)** %macb_reg_writel43, align 8, !dbg !16576
  %66 = load %struct.macb*, %struct.macb** %bp.addr, align 8, !dbg !16576
  call void %65(%struct.macb* %66, i32 164, i32 0) #12, !dbg !16576
  br label %if.end46, !dbg !16576

if.else44:                                        ; preds = %if.end40
  %67 = load %struct.macb*, %struct.macb** %bp.addr, align 8, !dbg !16576
  %macb_reg_writel45 = getelementptr inbounds %struct.macb, %struct.macb* %67, i32 0, i32 3, !dbg !16576
  %68 = load void (%struct.macb*, i32, i32)*, void (%struct.macb*, i32, i32)** %macb_reg_writel45, align 8, !dbg !16576
  %69 = load %struct.macb*, %struct.macb** %bp.addr, align 8, !dbg !16576
  call void %68(%struct.macb* %69, i32 180, i32 0) #12, !dbg !16576
  br label %if.end46

if.end46:                                         ; preds = %if.else44, %if.then42
  ret void, !dbg !16580
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @macb_configure_dma(%struct.macb* %bp) #2 !dbg !16581 {
entry:
  %bp.addr = alloca %struct.macb*, align 8
  %queue = alloca %struct.macb_queue*, align 8
  %buffer_size = alloca i32, align 4
  %q = alloca i32, align 4
  %dmacfg = alloca i32, align 4
  store %struct.macb* %bp, %struct.macb** %bp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.macb** %bp.addr, metadata !16582, metadata !DIExpression()), !dbg !16583
  call void @llvm.dbg.declare(metadata %struct.macb_queue** %queue, metadata !16584, metadata !DIExpression()), !dbg !16585
  call void @llvm.dbg.declare(metadata i32* %buffer_size, metadata !16586, metadata !DIExpression()), !dbg !16587
  call void @llvm.dbg.declare(metadata i32* %q, metadata !16588, metadata !DIExpression()), !dbg !16589
  call void @llvm.dbg.declare(metadata i32* %dmacfg, metadata !16590, metadata !DIExpression()), !dbg !16591
  %0 = load %struct.macb*, %struct.macb** %bp.addr, align 8, !dbg !16592
  %rx_buffer_size = getelementptr inbounds %struct.macb, %struct.macb* %0, i32 0, i32 4, !dbg !16593
  %1 = load i64, i64* %rx_buffer_size, align 8, !dbg !16593
  %div = udiv i64 %1, 64, !dbg !16594
  %conv = trunc i64 %div to i32, !dbg !16592
  store i32 %conv, i32* %buffer_size, align 4, !dbg !16595
  %2 = load %struct.macb*, %struct.macb** %bp.addr, align 8, !dbg !16596
  %call = call zeroext i1 @macb_is_gem(%struct.macb* %2) #12, !dbg !16598
  br i1 %call, label %if.then, label %if.end49, !dbg !16599

if.then:                                          ; preds = %entry
  %3 = load %struct.macb*, %struct.macb** %bp.addr, align 8, !dbg !16600
  %macb_reg_readl = getelementptr inbounds %struct.macb, %struct.macb* %3, i32 0, i32 2, !dbg !16600
  %4 = load i32 (%struct.macb*, i32)*, i32 (%struct.macb*, i32)** %macb_reg_readl, align 8, !dbg !16600
  %5 = load %struct.macb*, %struct.macb** %bp.addr, align 8, !dbg !16600
  %call1 = call i32 %4(%struct.macb* %5, i32 16) #12, !dbg !16600
  %conv2 = zext i32 %call1 to i64, !dbg !16600
  %and = and i64 %conv2, -16711681, !dbg !16602
  %conv3 = trunc i64 %and to i32, !dbg !16600
  store i32 %conv3, i32* %dmacfg, align 4, !dbg !16603
  store i32 0, i32* %q, align 4, !dbg !16604
  %6 = load %struct.macb*, %struct.macb** %bp.addr, align 8, !dbg !16606
  %queues = getelementptr inbounds %struct.macb, %struct.macb* %6, i32 0, i32 9, !dbg !16607
  %arraydecay = getelementptr inbounds [8 x %struct.macb_queue], [8 x %struct.macb_queue]* %queues, i64 0, i64 0, !dbg !16606
  store %struct.macb_queue* %arraydecay, %struct.macb_queue** %queue, align 8, !dbg !16608
  br label %for.cond, !dbg !16609

for.cond:                                         ; preds = %for.inc, %if.then
  %7 = load i32, i32* %q, align 4, !dbg !16610
  %8 = load %struct.macb*, %struct.macb** %bp.addr, align 8, !dbg !16612
  %num_queues = getelementptr inbounds %struct.macb, %struct.macb* %8, i32 0, i32 7, !dbg !16613
  %9 = load i32, i32* %num_queues, align 8, !dbg !16613
  %cmp = icmp ult i32 %7, %9, !dbg !16614
  br i1 %cmp, label %for.body, label %for.end, !dbg !16615

for.body:                                         ; preds = %for.cond
  %10 = load i32, i32* %q, align 4, !dbg !16616
  %tobool = icmp ne i32 %10, 0, !dbg !16616
  br i1 %tobool, label %if.then5, label %if.else, !dbg !16619

if.then5:                                         ; preds = %for.body
  %11 = load %struct.macb_queue*, %struct.macb_queue** %queue, align 8, !dbg !16620
  %bp6 = getelementptr inbounds %struct.macb_queue, %struct.macb_queue* %11, i32 0, i32 0, !dbg !16620
  %12 = load %struct.macb*, %struct.macb** %bp6, align 8, !dbg !16620
  %macb_reg_writel = getelementptr inbounds %struct.macb, %struct.macb* %12, i32 0, i32 3, !dbg !16620
  %13 = load void (%struct.macb*, i32, i32)*, void (%struct.macb*, i32, i32)** %macb_reg_writel, align 8, !dbg !16620
  %14 = load %struct.macb_queue*, %struct.macb_queue** %queue, align 8, !dbg !16620
  %bp7 = getelementptr inbounds %struct.macb_queue, %struct.macb_queue* %14, i32 0, i32 0, !dbg !16620
  %15 = load %struct.macb*, %struct.macb** %bp7, align 8, !dbg !16620
  %16 = load %struct.macb_queue*, %struct.macb_queue** %queue, align 8, !dbg !16620
  %RBQS = getelementptr inbounds %struct.macb_queue, %struct.macb_queue* %16, i32 0, i32 8, !dbg !16620
  %17 = load i32, i32* %RBQS, align 4, !dbg !16620
  %18 = load i32, i32* %buffer_size, align 4, !dbg !16620
  call void %13(%struct.macb* %15, i32 %17, i32 %18) #12, !dbg !16620
  br label %if.end, !dbg !16620

if.else:                                          ; preds = %for.body
  %19 = load i32, i32* %buffer_size, align 4, !dbg !16621
  %and8 = and i32 %19, 255, !dbg !16621
  %shl = shl i32 %and8, 16, !dbg !16621
  %20 = load i32, i32* %dmacfg, align 4, !dbg !16622
  %or = or i32 %20, %shl, !dbg !16622
  store i32 %or, i32* %dmacfg, align 4, !dbg !16622
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then5
  br label %for.inc, !dbg !16623

for.inc:                                          ; preds = %if.end
  %21 = load i32, i32* %q, align 4, !dbg !16624
  %inc = add i32 %21, 1, !dbg !16624
  store i32 %inc, i32* %q, align 4, !dbg !16624
  %22 = load %struct.macb_queue*, %struct.macb_queue** %queue, align 8, !dbg !16625
  %incdec.ptr = getelementptr %struct.macb_queue, %struct.macb_queue* %22, i32 1, !dbg !16625
  store %struct.macb_queue* %incdec.ptr, %struct.macb_queue** %queue, align 8, !dbg !16625
  br label %for.cond, !dbg !16626, !llvm.loop !16627

for.end:                                          ; preds = %for.cond
  %23 = load %struct.macb*, %struct.macb** %bp.addr, align 8, !dbg !16629
  %dma_burst_length = getelementptr inbounds %struct.macb, %struct.macb* %23, i32 0, i32 24, !dbg !16631
  %24 = load i32, i32* %dma_burst_length, align 4, !dbg !16631
  %tobool9 = icmp ne i32 %24, 0, !dbg !16629
  br i1 %tobool9, label %if.then10, label %if.end16, !dbg !16632

if.then10:                                        ; preds = %for.end
  %25 = load i32, i32* %dmacfg, align 4, !dbg !16633
  %and11 = and i32 %25, -32, !dbg !16633
  %26 = load %struct.macb*, %struct.macb** %bp.addr, align 8, !dbg !16633
  %dma_burst_length12 = getelementptr inbounds %struct.macb, %struct.macb* %26, i32 0, i32 24, !dbg !16633
  %27 = load i32, i32* %dma_burst_length12, align 4, !dbg !16633
  %and13 = and i32 %27, 31, !dbg !16633
  %shl14 = shl i32 %and13, 0, !dbg !16633
  %or15 = or i32 %and11, %shl14, !dbg !16633
  store i32 %or15, i32* %dmacfg, align 4, !dbg !16634
  br label %if.end16, !dbg !16635

if.end16:                                         ; preds = %if.then10, %for.end
  %28 = load i32, i32* %dmacfg, align 4, !dbg !16636
  %conv17 = zext i32 %28 to i64, !dbg !16636
  %or18 = or i64 %conv17, 1792, !dbg !16636
  %conv19 = trunc i64 %or18 to i32, !dbg !16636
  store i32 %conv19, i32* %dmacfg, align 4, !dbg !16636
  %29 = load i32, i32* %dmacfg, align 4, !dbg !16637
  %and20 = and i32 %29, -129, !dbg !16637
  store i32 %and20, i32* %dmacfg, align 4, !dbg !16637
  %30 = load %struct.macb*, %struct.macb** %bp.addr, align 8, !dbg !16638
  %native_io = getelementptr inbounds %struct.macb, %struct.macb* %30, i32 0, i32 1, !dbg !16640
  %31 = load i8, i8* %native_io, align 8, !dbg !16640
  %tobool21 = trunc i8 %31 to i1, !dbg !16640
  br i1 %tobool21, label %if.then22, label %if.else24, !dbg !16641

if.then22:                                        ; preds = %if.end16
  %32 = load i32, i32* %dmacfg, align 4, !dbg !16642
  %and23 = and i32 %32, -65, !dbg !16642
  store i32 %and23, i32* %dmacfg, align 4, !dbg !16642
  br label %if.end26, !dbg !16643

if.else24:                                        ; preds = %if.end16
  %33 = load i32, i32* %dmacfg, align 4, !dbg !16644
  %or25 = or i32 %33, 64, !dbg !16644
  store i32 %or25, i32* %dmacfg, align 4, !dbg !16644
  br label %if.end26

if.end26:                                         ; preds = %if.else24, %if.then22
  %34 = load %struct.macb*, %struct.macb** %bp.addr, align 8, !dbg !16645
  %dev = getelementptr inbounds %struct.macb, %struct.macb* %34, i32 0, i32 17, !dbg !16647
  %35 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !16647
  %features = getelementptr inbounds %struct.net_device, %struct.net_device* %35, i32 0, i32 15, !dbg !16648
  %36 = load i64, i64* %features, align 8, !dbg !16648
  %and27 = and i64 %36, 8, !dbg !16649
  %tobool28 = icmp ne i64 %and27, 0, !dbg !16649
  br i1 %tobool28, label %if.then29, label %if.else31, !dbg !16650

if.then29:                                        ; preds = %if.end26
  %37 = load i32, i32* %dmacfg, align 4, !dbg !16651
  %or30 = or i32 %37, 2048, !dbg !16651
  store i32 %or30, i32* %dmacfg, align 4, !dbg !16651
  br label %if.end33, !dbg !16652

if.else31:                                        ; preds = %if.end26
  %38 = load i32, i32* %dmacfg, align 4, !dbg !16653
  %and32 = and i32 %38, -2049, !dbg !16653
  store i32 %and32, i32* %dmacfg, align 4, !dbg !16653
  br label %if.end33

if.end33:                                         ; preds = %if.else31, %if.then29
  %39 = load i32, i32* %dmacfg, align 4, !dbg !16654
  %and34 = and i32 %39, -1073741825, !dbg !16654
  store i32 %and34, i32* %dmacfg, align 4, !dbg !16654
  %40 = load %struct.macb*, %struct.macb** %bp.addr, align 8, !dbg !16655
  %hw_dma_cap = getelementptr inbounds %struct.macb, %struct.macb* %40, i32 0, i32 35, !dbg !16657
  %41 = load i8, i8* %hw_dma_cap, align 8, !dbg !16657
  %conv35 = zext i8 %41 to i32, !dbg !16655
  %and36 = and i32 %conv35, 1, !dbg !16658
  %tobool37 = icmp ne i32 %and36, 0, !dbg !16658
  br i1 %tobool37, label %if.then38, label %if.end40, !dbg !16659

if.then38:                                        ; preds = %if.end33
  %42 = load i32, i32* %dmacfg, align 4, !dbg !16660
  %or39 = or i32 %42, 1073741824, !dbg !16660
  store i32 %or39, i32* %dmacfg, align 4, !dbg !16660
  br label %if.end40, !dbg !16661

if.end40:                                         ; preds = %if.then38, %if.end33
  %43 = load %struct.macb*, %struct.macb** %bp.addr, align 8, !dbg !16662
  %hw_dma_cap41 = getelementptr inbounds %struct.macb, %struct.macb* %43, i32 0, i32 35, !dbg !16664
  %44 = load i8, i8* %hw_dma_cap41, align 8, !dbg !16664
  %conv42 = zext i8 %44 to i32, !dbg !16662
  %and43 = and i32 %conv42, 2, !dbg !16665
  %tobool44 = icmp ne i32 %and43, 0, !dbg !16665
  br i1 %tobool44, label %if.then45, label %if.end47, !dbg !16666

if.then45:                                        ; preds = %if.end40
  %45 = load i32, i32* %dmacfg, align 4, !dbg !16667
  %or46 = or i32 %45, 805306368, !dbg !16667
  store i32 %or46, i32* %dmacfg, align 4, !dbg !16667
  br label %if.end47, !dbg !16668

if.end47:                                         ; preds = %if.then45, %if.end40
  %46 = load %struct.macb*, %struct.macb** %bp.addr, align 8, !dbg !16669
  %macb_reg_writel48 = getelementptr inbounds %struct.macb, %struct.macb* %46, i32 0, i32 3, !dbg !16669
  %47 = load void (%struct.macb*, i32, i32)*, void (%struct.macb*, i32, i32)** %macb_reg_writel48, align 8, !dbg !16669
  %48 = load %struct.macb*, %struct.macb** %bp.addr, align 8, !dbg !16669
  %49 = load i32, i32* %dmacfg, align 4, !dbg !16669
  call void %47(%struct.macb* %48, i32 16, i32 %49) #12, !dbg !16669
  br label %if.end49, !dbg !16670

if.end49:                                         ; preds = %if.end47, %entry
  ret void, !dbg !16671
}

; Function Attrs: noredzone
declare dso_local i32 @phylink_of_phy_connect(%struct.phylink*, %struct.device_node*, i32) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @macb_phy_handle_exists(%struct.device_node* %dn) #2 !dbg !16672 {
entry:
  %dn.addr = alloca %struct.device_node*, align 8
  store %struct.device_node* %dn, %struct.device_node** %dn.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device_node** %dn.addr, metadata !16675, metadata !DIExpression()), !dbg !16676
  %0 = load %struct.device_node*, %struct.device_node** %dn.addr, align 8, !dbg !16677
  %call = call %struct.device_node* @of_parse_phandle(%struct.device_node* %0, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.27, i64 0, i64 0), i32 0) #12, !dbg !16678
  store %struct.device_node* %call, %struct.device_node** %dn.addr, align 8, !dbg !16679
  %1 = load %struct.device_node*, %struct.device_node** %dn.addr, align 8, !dbg !16680
  call void @of_node_put(%struct.device_node* %1) #12, !dbg !16681
  %2 = load %struct.device_node*, %struct.device_node** %dn.addr, align 8, !dbg !16682
  %cmp = icmp ne %struct.device_node* %2, null, !dbg !16683
  ret i1 %cmp, !dbg !16684
}

; Function Attrs: noredzone
declare dso_local %struct.phy_device* @phy_find_first(%struct.mii_bus*) #1

; Function Attrs: noredzone
declare dso_local i32 @phylink_connect_phy(%struct.phylink*, %struct.phy_device*) #1

; Function Attrs: noredzone
declare dso_local void @phylink_start(%struct.phylink*) #1

; Function Attrs: noredzone
declare dso_local %struct.device_node* @of_parse_phandle(%struct.device_node*, i8*, i32) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @of_node_put(%struct.device_node* %node) #2 !dbg !16685 {
entry:
  %node.addr = alloca %struct.device_node*, align 8
  store %struct.device_node* %node, %struct.device_node** %node.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device_node** %node.addr, metadata !16688, metadata !DIExpression()), !dbg !16689
  ret void, !dbg !16690
}

; Function Attrs: noredzone
declare dso_local void @kfree(i8*) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @dma_free_coherent(%struct.device* %dev, i64 %size, i8* %cpu_addr, i64 %dma_handle) #2 !dbg !16691 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %size.addr = alloca i64, align 8
  %cpu_addr.addr = alloca i8*, align 8
  %dma_handle.addr = alloca i64, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !16694, metadata !DIExpression()), !dbg !16695
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !16696, metadata !DIExpression()), !dbg !16697
  store i8* %cpu_addr, i8** %cpu_addr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %cpu_addr.addr, metadata !16698, metadata !DIExpression()), !dbg !16699
  store i64 %dma_handle, i64* %dma_handle.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %dma_handle.addr, metadata !16700, metadata !DIExpression()), !dbg !16701
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !16702
  %1 = load i64, i64* %size.addr, align 8, !dbg !16703
  %2 = load i8*, i8** %cpu_addr.addr, align 8, !dbg !16704
  %3 = load i64, i64* %dma_handle.addr, align 8, !dbg !16705
  call void @dma_free_attrs(%struct.device* %0, i64 %1, i8* %2, i64 %3, i64 0) #12, !dbg !16706
  ret void, !dbg !16707
}

; Function Attrs: noredzone
declare dso_local void @dma_free_attrs(%struct.device*, i64, i8*, i64, i64) #1

; Function Attrs: noredzone
declare dso_local i32 @__pm_runtime_idle(%struct.device*, i32) #1

; Function Attrs: noredzone
declare dso_local void @phylink_stop(%struct.phylink*) #1

; Function Attrs: noredzone
declare dso_local void @phylink_disconnect_phy(%struct.phylink*) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @pm_runtime_put(%struct.device* %dev) #2 !dbg !16708 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !16709, metadata !DIExpression()), !dbg !16710
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !16711
  %call = call i32 @__pm_runtime_idle(%struct.device* %0, i32 5) #12, !dbg !16712
  ret i32 %call, !dbg !16713
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i16 @skb_get_queue_mapping(%struct.sk_buff* %skb) #2 !dbg !16714 {
entry:
  %skb.addr = alloca %struct.sk_buff*, align 8
  store %struct.sk_buff* %skb, %struct.sk_buff** %skb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.sk_buff** %skb.addr, metadata !16717, metadata !DIExpression()), !dbg !16718
  %0 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !16719
  %queue_mapping = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %0, i32 0, i32 9, !dbg !16720
  %1 = load i16, i16* %queue_mapping, align 4, !dbg !16720
  ret i16 %1, !dbg !16721
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @macb_clear_csum(%struct.sk_buff* %skb) #2 !dbg !16722 {
entry:
  %retval = alloca i32, align 4
  %skb.addr = alloca %struct.sk_buff*, align 8
  store %struct.sk_buff* %skb, %struct.sk_buff** %skb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.sk_buff** %skb.addr, metadata !16723, metadata !DIExpression()), !dbg !16724
  %0 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !16725
  %ip_summed = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %0, i32 0, i32 14, !dbg !16727
  %bf.load = load i16, i16* %ip_summed, align 8, !dbg !16727
  %bf.lshr = lshr i16 %bf.load, 5, !dbg !16727
  %bf.clear = and i16 %bf.lshr, 3, !dbg !16727
  %bf.cast = trunc i16 %bf.clear to i8, !dbg !16727
  %conv = zext i8 %bf.cast to i32, !dbg !16725
  %cmp = icmp ne i32 %conv, 3, !dbg !16728
  br i1 %cmp, label %if.then, label %if.end, !dbg !16729

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !16730
  br label %return, !dbg !16730

if.end:                                           ; preds = %entry
  %1 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !16731
  %call = call i32 @skb_cow_head(%struct.sk_buff* %1, i32 0) #12, !dbg !16731
  %tobool = icmp ne i32 %call, 0, !dbg !16731
  %lnot = xor i1 %tobool, true, !dbg !16731
  %lnot2 = xor i1 %lnot, true, !dbg !16731
  %lnot.ext = zext i1 %lnot2 to i32, !dbg !16731
  %conv3 = sext i32 %lnot.ext to i64, !dbg !16731
  %tobool4 = icmp ne i64 %conv3, 0, !dbg !16731
  br i1 %tobool4, label %if.then5, label %if.end6, !dbg !16733

if.then5:                                         ; preds = %if.end
  store i32 -1, i32* %retval, align 4, !dbg !16734
  br label %return, !dbg !16734

if.end6:                                          ; preds = %if.end
  %2 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !16735
  %call7 = call i8* @skb_checksum_start(%struct.sk_buff* %2) #12, !dbg !16736
  %3 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !16737
  %4 = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %3, i32 0, i32 17, !dbg !16738
  %5 = bitcast %union.anon.53* %4 to %struct.anon.54*, !dbg !16738
  %csum_offset = getelementptr inbounds %struct.anon.54, %struct.anon.54* %5, i32 0, i32 1, !dbg !16738
  %6 = load i16, i16* %csum_offset, align 2, !dbg !16738
  %conv8 = zext i16 %6 to i32, !dbg !16737
  %idx.ext = sext i32 %conv8 to i64, !dbg !16739
  %add.ptr = getelementptr i8, i8* %call7, i64 %idx.ext, !dbg !16739
  %7 = bitcast i8* %add.ptr to i16*, !dbg !16740
  store i16 0, i16* %7, align 2, !dbg !16741
  store i32 0, i32* %retval, align 4, !dbg !16742
  br label %return, !dbg !16742

return:                                           ; preds = %if.end6, %if.then5, %if.then
  %8 = load i32, i32* %retval, align 4, !dbg !16743
  ret i32 %8, !dbg !16743
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @macb_pad_and_fcs(%struct.sk_buff** %skb, %struct.net_device* %ndev) #2 !dbg !16744 {
entry:
  %retval = alloca i32, align 4
  %skb.addr = alloca %struct.sk_buff**, align 8
  %ndev.addr = alloca %struct.net_device*, align 8
  %cloned = alloca i8, align 1
  %padlen = alloca i32, align 4
  %headroom = alloca i32, align 4
  %tailroom = alloca i32, align 4
  %nskb = alloca %struct.sk_buff*, align 8
  %fcs = alloca i32, align 4
  store %struct.sk_buff** %skb, %struct.sk_buff*** %skb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.sk_buff*** %skb.addr, metadata !16747, metadata !DIExpression()), !dbg !16748
  store %struct.net_device* %ndev, %struct.net_device** %ndev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %ndev.addr, metadata !16749, metadata !DIExpression()), !dbg !16750
  call void @llvm.dbg.declare(metadata i8* %cloned, metadata !16751, metadata !DIExpression()), !dbg !16752
  %0 = load %struct.sk_buff**, %struct.sk_buff*** %skb.addr, align 8, !dbg !16753
  %1 = load %struct.sk_buff*, %struct.sk_buff** %0, align 8, !dbg !16754
  %call = call i32 @skb_cloned(%struct.sk_buff* %1) #12, !dbg !16755
  %tobool = icmp ne i32 %call, 0, !dbg !16755
  br i1 %tobool, label %lor.end, label %lor.lhs.false, !dbg !16756

lor.lhs.false:                                    ; preds = %entry
  %2 = load %struct.sk_buff**, %struct.sk_buff*** %skb.addr, align 8, !dbg !16757
  %3 = load %struct.sk_buff*, %struct.sk_buff** %2, align 8, !dbg !16758
  %call1 = call i32 @skb_header_cloned(%struct.sk_buff* %3) #12, !dbg !16759
  %tobool2 = icmp ne i32 %call1, 0, !dbg !16759
  br i1 %tobool2, label %lor.end, label %lor.rhs, !dbg !16760

lor.rhs:                                          ; preds = %lor.lhs.false
  %4 = load %struct.sk_buff**, %struct.sk_buff*** %skb.addr, align 8, !dbg !16761
  %5 = load %struct.sk_buff*, %struct.sk_buff** %4, align 8, !dbg !16762
  %call3 = call zeroext i1 @skb_is_nonlinear(%struct.sk_buff* %5) #12, !dbg !16763
  br label %lor.end, !dbg !16760

lor.end:                                          ; preds = %lor.rhs, %lor.lhs.false, %entry
  %6 = phi i1 [ true, %lor.lhs.false ], [ true, %entry ], [ %call3, %lor.rhs ]
  %frombool = zext i1 %6 to i8, !dbg !16752
  store i8 %frombool, i8* %cloned, align 1, !dbg !16752
  call void @llvm.dbg.declare(metadata i32* %padlen, metadata !16764, metadata !DIExpression()), !dbg !16765
  %7 = load %struct.sk_buff**, %struct.sk_buff*** %skb.addr, align 8, !dbg !16766
  %8 = load %struct.sk_buff*, %struct.sk_buff** %7, align 8, !dbg !16767
  %len = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %8, i32 0, i32 5, !dbg !16768
  %9 = load i32, i32* %len, align 8, !dbg !16768
  %sub = sub i32 60, %9, !dbg !16769
  store i32 %sub, i32* %padlen, align 4, !dbg !16765
  call void @llvm.dbg.declare(metadata i32* %headroom, metadata !16770, metadata !DIExpression()), !dbg !16771
  %10 = load %struct.sk_buff**, %struct.sk_buff*** %skb.addr, align 8, !dbg !16772
  %11 = load %struct.sk_buff*, %struct.sk_buff** %10, align 8, !dbg !16773
  %call4 = call i32 @skb_headroom(%struct.sk_buff* %11) #12, !dbg !16774
  store i32 %call4, i32* %headroom, align 4, !dbg !16771
  call void @llvm.dbg.declare(metadata i32* %tailroom, metadata !16775, metadata !DIExpression()), !dbg !16776
  %12 = load %struct.sk_buff**, %struct.sk_buff*** %skb.addr, align 8, !dbg !16777
  %13 = load %struct.sk_buff*, %struct.sk_buff** %12, align 8, !dbg !16778
  %call5 = call i32 @skb_tailroom(%struct.sk_buff* %13) #12, !dbg !16779
  store i32 %call5, i32* %tailroom, align 4, !dbg !16776
  call void @llvm.dbg.declare(metadata %struct.sk_buff** %nskb, metadata !16780, metadata !DIExpression()), !dbg !16781
  call void @llvm.dbg.declare(metadata i32* %fcs, metadata !16782, metadata !DIExpression()), !dbg !16783
  %14 = load %struct.net_device*, %struct.net_device** %ndev.addr, align 8, !dbg !16784
  %features = getelementptr inbounds %struct.net_device, %struct.net_device* %14, i32 0, i32 15, !dbg !16786
  %15 = load i64, i64* %features, align 8, !dbg !16786
  %and = and i64 %15, 8, !dbg !16787
  %tobool6 = icmp ne i64 %and, 0, !dbg !16787
  br i1 %tobool6, label %lor.lhs.false7, label %if.then, !dbg !16788

lor.lhs.false7:                                   ; preds = %lor.end
  %16 = load %struct.sk_buff**, %struct.sk_buff*** %skb.addr, align 8, !dbg !16789
  %17 = load %struct.sk_buff*, %struct.sk_buff** %16, align 8, !dbg !16790
  %ip_summed = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %17, i32 0, i32 14, !dbg !16791
  %bf.load = load i16, i16* %ip_summed, align 8, !dbg !16791
  %bf.lshr = lshr i16 %bf.load, 5, !dbg !16791
  %bf.clear = and i16 %bf.lshr, 3, !dbg !16791
  %bf.cast = trunc i16 %bf.clear to i8, !dbg !16791
  %conv = zext i8 %bf.cast to i32, !dbg !16792
  %cmp = icmp ne i32 %conv, 3, !dbg !16793
  br i1 %cmp, label %lor.lhs.false9, label %if.then, !dbg !16794

lor.lhs.false9:                                   ; preds = %lor.lhs.false7
  %18 = load %struct.sk_buff**, %struct.sk_buff*** %skb.addr, align 8, !dbg !16795
  %19 = load %struct.sk_buff*, %struct.sk_buff** %18, align 8, !dbg !16795
  %call10 = call i8* @skb_end_pointer(%struct.sk_buff* %19) #12, !dbg !16795
  %20 = bitcast i8* %call10 to %struct.skb_shared_info*, !dbg !16796
  %gso_size = getelementptr inbounds %struct.skb_shared_info, %struct.skb_shared_info* %20, i32 0, i32 4, !dbg !16796
  %21 = load i16, i16* %gso_size, align 4, !dbg !16796
  %conv11 = zext i16 %21 to i32, !dbg !16795
  %tobool12 = icmp ne i32 %conv11, 0, !dbg !16795
  br i1 %tobool12, label %if.then, label %if.end, !dbg !16797

if.then:                                          ; preds = %lor.lhs.false9, %lor.lhs.false7, %lor.end
  store i32 0, i32* %retval, align 4, !dbg !16798
  br label %return, !dbg !16798

if.end:                                           ; preds = %lor.lhs.false9
  %22 = load i32, i32* %padlen, align 4, !dbg !16799
  %cmp13 = icmp sle i32 %22, 0, !dbg !16801
  br i1 %cmp13, label %if.then15, label %if.else26, !dbg !16802

if.then15:                                        ; preds = %if.end
  %23 = load i32, i32* %tailroom, align 4, !dbg !16803
  %cmp16 = icmp sge i32 %23, 4, !dbg !16806
  br i1 %cmp16, label %if.then18, label %if.else, !dbg !16807

if.then18:                                        ; preds = %if.then15
  br label %add_fcs, !dbg !16808

if.else:                                          ; preds = %if.then15
  %24 = load i8, i8* %cloned, align 1, !dbg !16809
  %tobool19 = trunc i8 %24 to i1, !dbg !16809
  br i1 %tobool19, label %if.else23, label %land.lhs.true, !dbg !16811

land.lhs.true:                                    ; preds = %if.else
  %25 = load i32, i32* %headroom, align 4, !dbg !16812
  %26 = load i32, i32* %tailroom, align 4, !dbg !16813
  %add = add i32 %25, %26, !dbg !16814
  %cmp20 = icmp sge i32 %add, 4, !dbg !16815
  br i1 %cmp20, label %if.then22, label %if.else23, !dbg !16816

if.then22:                                        ; preds = %land.lhs.true
  store i32 0, i32* %padlen, align 4, !dbg !16817
  br label %if.end24, !dbg !16818

if.else23:                                        ; preds = %land.lhs.true, %if.else
  store i32 4, i32* %padlen, align 4, !dbg !16819
  br label %if.end24

if.end24:                                         ; preds = %if.else23, %if.then22
  br label %if.end25

if.end25:                                         ; preds = %if.end24
  br label %if.end28, !dbg !16820

if.else26:                                        ; preds = %if.end
  %27 = load i32, i32* %padlen, align 4, !dbg !16821
  %add27 = add i32 %27, 4, !dbg !16821
  store i32 %add27, i32* %padlen, align 4, !dbg !16821
  br label %if.end28

if.end28:                                         ; preds = %if.else26, %if.end25
  %28 = load i8, i8* %cloned, align 1, !dbg !16823
  %tobool29 = trunc i8 %28 to i1, !dbg !16823
  br i1 %tobool29, label %if.else39, label %land.lhs.true30, !dbg !16825

land.lhs.true30:                                  ; preds = %if.end28
  %29 = load i32, i32* %headroom, align 4, !dbg !16826
  %30 = load i32, i32* %tailroom, align 4, !dbg !16827
  %add31 = add i32 %29, %30, !dbg !16828
  %31 = load i32, i32* %padlen, align 4, !dbg !16829
  %cmp32 = icmp sge i32 %add31, %31, !dbg !16830
  br i1 %cmp32, label %if.then34, label %if.else39, !dbg !16831

if.then34:                                        ; preds = %land.lhs.true30
  %32 = load %struct.sk_buff**, %struct.sk_buff*** %skb.addr, align 8, !dbg !16832
  %33 = load %struct.sk_buff*, %struct.sk_buff** %32, align 8, !dbg !16834
  %head = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %33, i32 0, i32 36, !dbg !16835
  %34 = load i8*, i8** %head, align 8, !dbg !16835
  %35 = load %struct.sk_buff**, %struct.sk_buff*** %skb.addr, align 8, !dbg !16836
  %36 = load %struct.sk_buff*, %struct.sk_buff** %35, align 8, !dbg !16837
  %data = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %36, i32 0, i32 37, !dbg !16838
  %37 = load i8*, i8** %data, align 8, !dbg !16838
  %38 = load %struct.sk_buff**, %struct.sk_buff*** %skb.addr, align 8, !dbg !16839
  %39 = load %struct.sk_buff*, %struct.sk_buff** %38, align 8, !dbg !16840
  %len35 = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %39, i32 0, i32 5, !dbg !16841
  %40 = load i32, i32* %len35, align 8, !dbg !16841
  %conv36 = zext i32 %40 to i64, !dbg !16842
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 1 %34, i8* align 1 %37, i64 %conv36, i1 false), !dbg !16843
  %41 = load %struct.sk_buff**, %struct.sk_buff*** %skb.addr, align 8, !dbg !16844
  %42 = load %struct.sk_buff*, %struct.sk_buff** %41, align 8, !dbg !16845
  %data37 = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %42, i32 0, i32 37, !dbg !16846
  store i8* %34, i8** %data37, align 8, !dbg !16847
  %43 = load %struct.sk_buff**, %struct.sk_buff*** %skb.addr, align 8, !dbg !16848
  %44 = load %struct.sk_buff*, %struct.sk_buff** %43, align 8, !dbg !16849
  %45 = load %struct.sk_buff**, %struct.sk_buff*** %skb.addr, align 8, !dbg !16850
  %46 = load %struct.sk_buff*, %struct.sk_buff** %45, align 8, !dbg !16851
  %len38 = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %46, i32 0, i32 5, !dbg !16852
  %47 = load i32, i32* %len38, align 8, !dbg !16852
  call void @skb_set_tail_pointer(%struct.sk_buff* %44, i32 %47) #12, !dbg !16853
  br label %if.end44, !dbg !16854

if.else39:                                        ; preds = %land.lhs.true30, %if.end28
  %48 = load %struct.sk_buff**, %struct.sk_buff*** %skb.addr, align 8, !dbg !16855
  %49 = load %struct.sk_buff*, %struct.sk_buff** %48, align 8, !dbg !16857
  %50 = load i32, i32* %padlen, align 4, !dbg !16858
  %call40 = call %struct.sk_buff* @skb_copy_expand(%struct.sk_buff* %49, i32 0, i32 %50, i32 2592) #12, !dbg !16859
  store %struct.sk_buff* %call40, %struct.sk_buff** %nskb, align 8, !dbg !16860
  %51 = load %struct.sk_buff*, %struct.sk_buff** %nskb, align 8, !dbg !16861
  %tobool41 = icmp ne %struct.sk_buff* %51, null, !dbg !16861
  br i1 %tobool41, label %if.end43, label %if.then42, !dbg !16863

if.then42:                                        ; preds = %if.else39
  store i32 -12, i32* %retval, align 4, !dbg !16864
  br label %return, !dbg !16864

if.end43:                                         ; preds = %if.else39
  %52 = load %struct.sk_buff**, %struct.sk_buff*** %skb.addr, align 8, !dbg !16865
  %53 = load %struct.sk_buff*, %struct.sk_buff** %52, align 8, !dbg !16866
  call void @dev_consume_skb_any(%struct.sk_buff* %53) #12, !dbg !16867
  %54 = load %struct.sk_buff*, %struct.sk_buff** %nskb, align 8, !dbg !16868
  %55 = load %struct.sk_buff**, %struct.sk_buff*** %skb.addr, align 8, !dbg !16869
  store %struct.sk_buff* %54, %struct.sk_buff** %55, align 8, !dbg !16870
  br label %if.end44

if.end44:                                         ; preds = %if.end43, %if.then34
  %56 = load i32, i32* %padlen, align 4, !dbg !16871
  %cmp45 = icmp sgt i32 %56, 4, !dbg !16873
  br i1 %cmp45, label %if.then47, label %if.end50, !dbg !16874

if.then47:                                        ; preds = %if.end44
  %57 = load %struct.sk_buff**, %struct.sk_buff*** %skb.addr, align 8, !dbg !16875
  %58 = load %struct.sk_buff*, %struct.sk_buff** %57, align 8, !dbg !16876
  %59 = load i32, i32* %padlen, align 4, !dbg !16877
  %sub48 = sub i32 %59, 4, !dbg !16878
  %call49 = call i8* @skb_put_zero(%struct.sk_buff* %58, i32 %sub48) #12, !dbg !16879
  br label %if.end50, !dbg !16879

if.end50:                                         ; preds = %if.then47, %if.end44
  br label %add_fcs, !dbg !16880

add_fcs:                                          ; preds = %if.end50, %if.then18
  call void @llvm.dbg.label(metadata !16881), !dbg !16882
  %60 = load %struct.sk_buff**, %struct.sk_buff*** %skb.addr, align 8, !dbg !16883
  %61 = load %struct.sk_buff*, %struct.sk_buff** %60, align 8, !dbg !16884
  %data51 = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %61, i32 0, i32 37, !dbg !16885
  %62 = load i8*, i8** %data51, align 8, !dbg !16885
  %63 = load %struct.sk_buff**, %struct.sk_buff*** %skb.addr, align 8, !dbg !16886
  %64 = load %struct.sk_buff*, %struct.sk_buff** %63, align 8, !dbg !16887
  %len52 = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %64, i32 0, i32 5, !dbg !16888
  %65 = load i32, i32* %len52, align 8, !dbg !16888
  %conv53 = zext i32 %65 to i64, !dbg !16889
  %call54 = call i32 @crc32_le(i32 -1, i8* %62, i64 %conv53) #17, !dbg !16890
  store i32 %call54, i32* %fcs, align 4, !dbg !16891
  %66 = load i32, i32* %fcs, align 4, !dbg !16892
  %neg = xor i32 %66, -1, !dbg !16893
  store i32 %neg, i32* %fcs, align 4, !dbg !16894
  %67 = load %struct.sk_buff**, %struct.sk_buff*** %skb.addr, align 8, !dbg !16895
  %68 = load %struct.sk_buff*, %struct.sk_buff** %67, align 8, !dbg !16896
  %69 = load i32, i32* %fcs, align 4, !dbg !16897
  %and55 = and i32 %69, 255, !dbg !16898
  %conv56 = trunc i32 %and55 to i8, !dbg !16897
  call void @skb_put_u8(%struct.sk_buff* %68, i8 zeroext %conv56) #12, !dbg !16899
  %70 = load %struct.sk_buff**, %struct.sk_buff*** %skb.addr, align 8, !dbg !16900
  %71 = load %struct.sk_buff*, %struct.sk_buff** %70, align 8, !dbg !16901
  %72 = load i32, i32* %fcs, align 4, !dbg !16902
  %shr = lshr i32 %72, 8, !dbg !16903
  %and57 = and i32 %shr, 255, !dbg !16904
  %conv58 = trunc i32 %and57 to i8, !dbg !16905
  call void @skb_put_u8(%struct.sk_buff* %71, i8 zeroext %conv58) #12, !dbg !16906
  %73 = load %struct.sk_buff**, %struct.sk_buff*** %skb.addr, align 8, !dbg !16907
  %74 = load %struct.sk_buff*, %struct.sk_buff** %73, align 8, !dbg !16908
  %75 = load i32, i32* %fcs, align 4, !dbg !16909
  %shr59 = lshr i32 %75, 16, !dbg !16910
  %and60 = and i32 %shr59, 255, !dbg !16911
  %conv61 = trunc i32 %and60 to i8, !dbg !16912
  call void @skb_put_u8(%struct.sk_buff* %74, i8 zeroext %conv61) #12, !dbg !16913
  %76 = load %struct.sk_buff**, %struct.sk_buff*** %skb.addr, align 8, !dbg !16914
  %77 = load %struct.sk_buff*, %struct.sk_buff** %76, align 8, !dbg !16915
  %78 = load i32, i32* %fcs, align 4, !dbg !16916
  %shr62 = lshr i32 %78, 24, !dbg !16917
  %and63 = and i32 %shr62, 255, !dbg !16918
  %conv64 = trunc i32 %and63 to i8, !dbg !16919
  call void @skb_put_u8(%struct.sk_buff* %77, i8 zeroext %conv64) #12, !dbg !16920
  store i32 0, i32* %retval, align 4, !dbg !16921
  br label %return, !dbg !16921

return:                                           ; preds = %add_fcs, %if.then42, %if.then
  %79 = load i32, i32* %retval, align 4, !dbg !16922
  ret i32 %79, !dbg !16922
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.iphdr* @ip_hdr(%struct.sk_buff* %skb) #2 !dbg !16923 {
entry:
  %skb.addr = alloca %struct.sk_buff*, align 8
  store %struct.sk_buff* %skb, %struct.sk_buff** %skb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.sk_buff** %skb.addr, metadata !16927, metadata !DIExpression()), !dbg !16928
  %0 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !16929
  %call = call i8* @skb_network_header(%struct.sk_buff* %0) #12, !dbg !16930
  %1 = bitcast i8* %call to %struct.iphdr*, !dbg !16931
  ret %struct.iphdr* %1, !dbg !16932
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @skb_transport_offset(%struct.sk_buff* %skb) #2 !dbg !16933 {
entry:
  %skb.addr = alloca %struct.sk_buff*, align 8
  store %struct.sk_buff* %skb, %struct.sk_buff** %skb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.sk_buff** %skb.addr, metadata !16936, metadata !DIExpression()), !dbg !16937
  %0 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !16938
  %call = call i8* @skb_transport_header(%struct.sk_buff* %0) #12, !dbg !16939
  %1 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !16940
  %data = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %1, i32 0, i32 37, !dbg !16941
  %2 = load i8*, i8** %data, align 8, !dbg !16941
  %sub.ptr.lhs.cast = ptrtoint i8* %call to i64, !dbg !16942
  %sub.ptr.rhs.cast = ptrtoint i8* %2 to i64, !dbg !16942
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !16942
  %conv = trunc i64 %sub.ptr.sub to i32, !dbg !16939
  ret i32 %conv, !dbg !16943
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @tcp_hdrlen(%struct.sk_buff* %skb) #2 !dbg !16944 {
entry:
  %skb.addr = alloca %struct.sk_buff*, align 8
  store %struct.sk_buff* %skb, %struct.sk_buff** %skb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.sk_buff** %skb.addr, metadata !16948, metadata !DIExpression()), !dbg !16949
  %0 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !16950
  %call = call %struct.tcphdr* @tcp_hdr(%struct.sk_buff* %0) #12, !dbg !16951
  %call1 = call i32 @__tcp_hdrlen(%struct.tcphdr* %call) #12, !dbg !16952
  ret i32 %call1, !dbg !16953
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @skb_headlen(%struct.sk_buff* %skb) #2 !dbg !16954 {
entry:
  %skb.addr = alloca %struct.sk_buff*, align 8
  store %struct.sk_buff* %skb, %struct.sk_buff** %skb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.sk_buff** %skb.addr, metadata !16955, metadata !DIExpression()), !dbg !16956
  %0 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !16957
  %len = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %0, i32 0, i32 5, !dbg !16958
  %1 = load i32, i32* %len, align 8, !dbg !16958
  %2 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !16959
  %data_len = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %2, i32 0, i32 6, !dbg !16960
  %3 = load i32, i32* %data_len, align 4, !dbg !16960
  %sub = sub i32 %1, %3, !dbg !16961
  ret i32 %sub, !dbg !16962
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @skb_frag_size(%struct.bio_vec* %frag) #2 !dbg !16963 {
entry:
  %frag.addr = alloca %struct.bio_vec*, align 8
  store %struct.bio_vec* %frag, %struct.bio_vec** %frag.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bio_vec** %frag.addr, metadata !16966, metadata !DIExpression()), !dbg !16967
  %0 = load %struct.bio_vec*, %struct.bio_vec** %frag.addr, align 8, !dbg !16968
  %bv_len = getelementptr inbounds %struct.bio_vec, %struct.bio_vec* %0, i32 0, i32 1, !dbg !16969
  %1 = load i32, i32* %bv_len, align 8, !dbg !16969
  ret i32 %1, !dbg !16970
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @netif_stop_subqueue(%struct.net_device* %dev, i16 zeroext %queue_index) #2 !dbg !16971 {
entry:
  %dev_queue.addr.i = alloca %struct.netdev_queue*, align 8
  call void @llvm.dbg.declare(metadata %struct.netdev_queue** %dev_queue.addr.i, metadata !16972, metadata !DIExpression()), !dbg !16974
  %dev.addr = alloca %struct.net_device*, align 8
  %queue_index.addr = alloca i16, align 2
  %txq = alloca %struct.netdev_queue*, align 8
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !16976, metadata !DIExpression()), !dbg !16977
  store i16 %queue_index, i16* %queue_index.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %queue_index.addr, metadata !16978, metadata !DIExpression()), !dbg !16979
  call void @llvm.dbg.declare(metadata %struct.netdev_queue** %txq, metadata !16980, metadata !DIExpression()), !dbg !16981
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !16982
  %1 = load i16, i16* %queue_index.addr, align 2, !dbg !16983
  %conv = zext i16 %1 to i32, !dbg !16983
  %call = call %struct.netdev_queue* @netdev_get_tx_queue(%struct.net_device* %0, i32 %conv) #12, !dbg !16984
  store %struct.netdev_queue* %call, %struct.netdev_queue** %txq, align 8, !dbg !16981
  %2 = load %struct.netdev_queue*, %struct.netdev_queue** %txq, align 8, !dbg !16985
  store %struct.netdev_queue* %2, %struct.netdev_queue** %dev_queue.addr.i, align 8
  %3 = load %struct.netdev_queue*, %struct.netdev_queue** %dev_queue.addr.i, align 8, !dbg !16986
  %state.i = getelementptr inbounds %struct.netdev_queue, %struct.netdev_queue* %3, i32 0, i32 10, !dbg !16987
  call void @set_bit(i64 0, i64* %state.i) #14, !dbg !16988
  ret void, !dbg !16989
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @macb_tx_map(%struct.macb* %bp, %struct.macb_queue* %queue, %struct.sk_buff* %skb, i32 %hdrlen) #2 !dbg !16990 {
entry:
  %retval = alloca i32, align 4
  %bp.addr = alloca %struct.macb*, align 8
  %queue.addr = alloca %struct.macb_queue*, align 8
  %skb.addr = alloca %struct.sk_buff*, align 8
  %hdrlen.addr = alloca i32, align 4
  %mapping = alloca i64, align 8
  %len = alloca i32, align 4
  %entry1 = alloca i32, align 4
  %i = alloca i32, align 4
  %tx_head = alloca i32, align 4
  %tx_skb = alloca %struct.macb_tx_skb*, align 8
  %desc = alloca %struct.macb_dma_desc*, align 8
  %offset = alloca i32, align 4
  %size = alloca i32, align 4
  %count = alloca i32, align 4
  %f = alloca i32, align 4
  %nr_frags = alloca i32, align 4
  %eof = alloca i32, align 4
  %mss_mfs = alloca i32, align 4
  %ctrl = alloca i32, align 4
  %lso_ctrl = alloca i32, align 4
  %seq_ctrl = alloca i32, align 4
  %__UNIQUE_ID___x530 = alloca i32, align 4
  %__UNIQUE_ID___y531 = alloca i32, align 4
  %tmp = alloca i32, align 4
  %frag = alloca %struct.bio_vec*, align 8
  %__UNIQUE_ID___x532 = alloca i32, align 4
  %__UNIQUE_ID___y533 = alloca i32, align 4
  %tmp41 = alloca i32, align 4
  store %struct.macb* %bp, %struct.macb** %bp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.macb** %bp.addr, metadata !16993, metadata !DIExpression()), !dbg !16994
  store %struct.macb_queue* %queue, %struct.macb_queue** %queue.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.macb_queue** %queue.addr, metadata !16995, metadata !DIExpression()), !dbg !16996
  store %struct.sk_buff* %skb, %struct.sk_buff** %skb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.sk_buff** %skb.addr, metadata !16997, metadata !DIExpression()), !dbg !16998
  store i32 %hdrlen, i32* %hdrlen.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %hdrlen.addr, metadata !16999, metadata !DIExpression()), !dbg !17000
  call void @llvm.dbg.declare(metadata i64* %mapping, metadata !17001, metadata !DIExpression()), !dbg !17002
  call void @llvm.dbg.declare(metadata i32* %len, metadata !17003, metadata !DIExpression()), !dbg !17004
  call void @llvm.dbg.declare(metadata i32* %entry1, metadata !17005, metadata !DIExpression()), !dbg !17006
  call void @llvm.dbg.declare(metadata i32* %i, metadata !17007, metadata !DIExpression()), !dbg !17008
  call void @llvm.dbg.declare(metadata i32* %tx_head, metadata !17009, metadata !DIExpression()), !dbg !17010
  %0 = load %struct.macb_queue*, %struct.macb_queue** %queue.addr, align 8, !dbg !17011
  %tx_head2 = getelementptr inbounds %struct.macb_queue, %struct.macb_queue* %0, i32 0, i32 11, !dbg !17012
  %1 = load i32, i32* %tx_head2, align 8, !dbg !17012
  store i32 %1, i32* %tx_head, align 4, !dbg !17010
  call void @llvm.dbg.declare(metadata %struct.macb_tx_skb** %tx_skb, metadata !17013, metadata !DIExpression()), !dbg !17014
  store %struct.macb_tx_skb* null, %struct.macb_tx_skb** %tx_skb, align 8, !dbg !17014
  call void @llvm.dbg.declare(metadata %struct.macb_dma_desc** %desc, metadata !17015, metadata !DIExpression()), !dbg !17016
  call void @llvm.dbg.declare(metadata i32* %offset, metadata !17017, metadata !DIExpression()), !dbg !17018
  call void @llvm.dbg.declare(metadata i32* %size, metadata !17019, metadata !DIExpression()), !dbg !17020
  call void @llvm.dbg.declare(metadata i32* %count, metadata !17021, metadata !DIExpression()), !dbg !17022
  store i32 0, i32* %count, align 4, !dbg !17022
  call void @llvm.dbg.declare(metadata i32* %f, metadata !17023, metadata !DIExpression()), !dbg !17024
  call void @llvm.dbg.declare(metadata i32* %nr_frags, metadata !17025, metadata !DIExpression()), !dbg !17026
  %2 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !17027
  %call = call i8* @skb_end_pointer(%struct.sk_buff* %2) #12, !dbg !17027
  %3 = bitcast i8* %call to %struct.skb_shared_info*, !dbg !17028
  %nr_frags3 = getelementptr inbounds %struct.skb_shared_info, %struct.skb_shared_info* %3, i32 0, i32 2, !dbg !17028
  %4 = load i8, i8* %nr_frags3, align 2, !dbg !17028
  %conv = zext i8 %4 to i32, !dbg !17027
  store i32 %conv, i32* %nr_frags, align 4, !dbg !17026
  call void @llvm.dbg.declare(metadata i32* %eof, metadata !17029, metadata !DIExpression()), !dbg !17030
  store i32 1, i32* %eof, align 4, !dbg !17030
  call void @llvm.dbg.declare(metadata i32* %mss_mfs, metadata !17031, metadata !DIExpression()), !dbg !17032
  store i32 0, i32* %mss_mfs, align 4, !dbg !17032
  call void @llvm.dbg.declare(metadata i32* %ctrl, metadata !17033, metadata !DIExpression()), !dbg !17034
  call void @llvm.dbg.declare(metadata i32* %lso_ctrl, metadata !17035, metadata !DIExpression()), !dbg !17036
  store i32 0, i32* %lso_ctrl, align 4, !dbg !17036
  call void @llvm.dbg.declare(metadata i32* %seq_ctrl, metadata !17037, metadata !DIExpression()), !dbg !17038
  store i32 0, i32* %seq_ctrl, align 4, !dbg !17038
  %5 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !17039
  %call4 = call i8* @skb_end_pointer(%struct.sk_buff* %5) #12, !dbg !17039
  %6 = bitcast i8* %call4 to %struct.skb_shared_info*, !dbg !17041
  %gso_size = getelementptr inbounds %struct.skb_shared_info, %struct.skb_shared_info* %6, i32 0, i32 4, !dbg !17041
  %7 = load i16, i16* %gso_size, align 4, !dbg !17041
  %conv5 = zext i16 %7 to i32, !dbg !17039
  %cmp = icmp ne i32 %conv5, 0, !dbg !17042
  br i1 %cmp, label %if.then, label %if.end12, !dbg !17043

if.then:                                          ; preds = %entry
  %8 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !17044
  %call7 = call %struct.iphdr* @ip_hdr(%struct.sk_buff* %8) #12, !dbg !17047
  %protocol = getelementptr inbounds %struct.iphdr, %struct.iphdr* %call7, i32 0, i32 6, !dbg !17048
  %9 = load i8, i8* %protocol, align 1, !dbg !17048
  %conv8 = zext i8 %9 to i32, !dbg !17047
  %cmp9 = icmp eq i32 %conv8, 17, !dbg !17049
  br i1 %cmp9, label %if.then11, label %if.else, !dbg !17050

if.then11:                                        ; preds = %if.then
  store i32 1, i32* %lso_ctrl, align 4, !dbg !17051
  br label %if.end, !dbg !17052

if.else:                                          ; preds = %if.then
  store i32 2, i32* %lso_ctrl, align 4, !dbg !17053
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then11
  br label %if.end12, !dbg !17054

if.end12:                                         ; preds = %if.end, %entry
  %10 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !17055
  %call13 = call i32 @skb_headlen(%struct.sk_buff* %10) #12, !dbg !17056
  store i32 %call13, i32* %len, align 4, !dbg !17057
  %11 = load i32, i32* %hdrlen.addr, align 4, !dbg !17058
  store i32 %11, i32* %size, align 4, !dbg !17059
  store i32 0, i32* %offset, align 4, !dbg !17060
  br label %while.cond, !dbg !17061

while.cond:                                       ; preds = %cond.end, %if.end12
  %12 = load i32, i32* %len, align 4, !dbg !17062
  %tobool = icmp ne i32 %12, 0, !dbg !17061
  br i1 %tobool, label %while.body, label %while.end, !dbg !17061

while.body:                                       ; preds = %while.cond
  %13 = load %struct.macb*, %struct.macb** %bp.addr, align 8, !dbg !17063
  %14 = load i32, i32* %tx_head, align 4, !dbg !17065
  %call14 = call i32 @macb_tx_ring_wrap(%struct.macb* %13, i32 %14) #12, !dbg !17066
  store i32 %call14, i32* %entry1, align 4, !dbg !17067
  %15 = load %struct.macb_queue*, %struct.macb_queue** %queue.addr, align 8, !dbg !17068
  %tx_skb15 = getelementptr inbounds %struct.macb_queue, %struct.macb_queue* %15, i32 0, i32 14, !dbg !17069
  %16 = load %struct.macb_tx_skb*, %struct.macb_tx_skb** %tx_skb15, align 8, !dbg !17069
  %17 = load i32, i32* %entry1, align 4, !dbg !17070
  %idxprom = zext i32 %17 to i64, !dbg !17068
  %arrayidx = getelementptr %struct.macb_tx_skb, %struct.macb_tx_skb* %16, i64 %idxprom, !dbg !17068
  store %struct.macb_tx_skb* %arrayidx, %struct.macb_tx_skb** %tx_skb, align 8, !dbg !17071
  %18 = load %struct.macb*, %struct.macb** %bp.addr, align 8, !dbg !17072
  %pdev = getelementptr inbounds %struct.macb, %struct.macb* %18, i32 0, i32 11, !dbg !17072
  %19 = load %struct.platform_device*, %struct.platform_device** %pdev, align 8, !dbg !17072
  %dev = getelementptr inbounds %struct.platform_device, %struct.platform_device* %19, i32 0, i32 3, !dbg !17072
  %20 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !17072
  %data = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %20, i32 0, i32 37, !dbg !17072
  %21 = load i8*, i8** %data, align 8, !dbg !17072
  %22 = load i32, i32* %offset, align 4, !dbg !17072
  %idx.ext = zext i32 %22 to i64, !dbg !17072
  %add.ptr = getelementptr i8, i8* %21, i64 %idx.ext, !dbg !17072
  %23 = load i32, i32* %size, align 4, !dbg !17072
  %conv16 = zext i32 %23 to i64, !dbg !17072
  %call17 = call i64 @dma_map_single_attrs(%struct.device* %dev, i8* %add.ptr, i64 %conv16, i32 1, i64 0) #12, !dbg !17072
  store i64 %call17, i64* %mapping, align 8, !dbg !17073
  %24 = load %struct.macb*, %struct.macb** %bp.addr, align 8, !dbg !17074
  %pdev18 = getelementptr inbounds %struct.macb, %struct.macb* %24, i32 0, i32 11, !dbg !17076
  %25 = load %struct.platform_device*, %struct.platform_device** %pdev18, align 8, !dbg !17076
  %dev19 = getelementptr inbounds %struct.platform_device, %struct.platform_device* %25, i32 0, i32 3, !dbg !17077
  %26 = load i64, i64* %mapping, align 8, !dbg !17078
  %call20 = call i32 @dma_mapping_error(%struct.device* %dev19, i64 %26) #12, !dbg !17079
  %tobool21 = icmp ne i32 %call20, 0, !dbg !17079
  br i1 %tobool21, label %if.then22, label %if.end23, !dbg !17080

if.then22:                                        ; preds = %while.body
  br label %dma_error, !dbg !17081

if.end23:                                         ; preds = %while.body
  %27 = load %struct.macb_tx_skb*, %struct.macb_tx_skb** %tx_skb, align 8, !dbg !17082
  %skb24 = getelementptr inbounds %struct.macb_tx_skb, %struct.macb_tx_skb* %27, i32 0, i32 0, !dbg !17083
  store %struct.sk_buff* null, %struct.sk_buff** %skb24, align 8, !dbg !17084
  %28 = load i64, i64* %mapping, align 8, !dbg !17085
  %29 = load %struct.macb_tx_skb*, %struct.macb_tx_skb** %tx_skb, align 8, !dbg !17086
  %mapping25 = getelementptr inbounds %struct.macb_tx_skb, %struct.macb_tx_skb* %29, i32 0, i32 1, !dbg !17087
  store i64 %28, i64* %mapping25, align 8, !dbg !17088
  %30 = load i32, i32* %size, align 4, !dbg !17089
  %conv26 = zext i32 %30 to i64, !dbg !17089
  %31 = load %struct.macb_tx_skb*, %struct.macb_tx_skb** %tx_skb, align 8, !dbg !17090
  %size27 = getelementptr inbounds %struct.macb_tx_skb, %struct.macb_tx_skb* %31, i32 0, i32 2, !dbg !17091
  store i64 %conv26, i64* %size27, align 8, !dbg !17092
  %32 = load %struct.macb_tx_skb*, %struct.macb_tx_skb** %tx_skb, align 8, !dbg !17093
  %mapped_as_page = getelementptr inbounds %struct.macb_tx_skb, %struct.macb_tx_skb* %32, i32 0, i32 3, !dbg !17094
  store i8 0, i8* %mapped_as_page, align 8, !dbg !17095
  %33 = load i32, i32* %size, align 4, !dbg !17096
  %34 = load i32, i32* %len, align 4, !dbg !17097
  %sub = sub i32 %34, %33, !dbg !17097
  store i32 %sub, i32* %len, align 4, !dbg !17097
  %35 = load i32, i32* %size, align 4, !dbg !17098
  %36 = load i32, i32* %offset, align 4, !dbg !17099
  %add = add i32 %36, %35, !dbg !17099
  store i32 %add, i32* %offset, align 4, !dbg !17099
  %37 = load i32, i32* %count, align 4, !dbg !17100
  %inc = add i32 %37, 1, !dbg !17100
  store i32 %inc, i32* %count, align 4, !dbg !17100
  %38 = load i32, i32* %tx_head, align 4, !dbg !17101
  %inc28 = add i32 %38, 1, !dbg !17101
  store i32 %inc28, i32* %tx_head, align 4, !dbg !17101
  call void @llvm.dbg.declare(metadata i32* %__UNIQUE_ID___x530, metadata !17102, metadata !DIExpression()), !dbg !17104
  %39 = load i32, i32* %len, align 4, !dbg !17104
  store i32 %39, i32* %__UNIQUE_ID___x530, align 4, !dbg !17104
  call void @llvm.dbg.declare(metadata i32* %__UNIQUE_ID___y531, metadata !17105, metadata !DIExpression()), !dbg !17104
  %40 = load %struct.macb*, %struct.macb** %bp.addr, align 8, !dbg !17104
  %max_tx_length = getelementptr inbounds %struct.macb, %struct.macb* %40, i32 0, i32 29, !dbg !17104
  %41 = load i32, i32* %max_tx_length, align 8, !dbg !17104
  store i32 %41, i32* %__UNIQUE_ID___y531, align 4, !dbg !17104
  %42 = load i32, i32* %__UNIQUE_ID___x530, align 4, !dbg !17104
  %43 = load i32, i32* %__UNIQUE_ID___y531, align 4, !dbg !17104
  %cmp29 = icmp ult i32 %42, %43, !dbg !17104
  br i1 %cmp29, label %cond.true, label %cond.false, !dbg !17104

cond.true:                                        ; preds = %if.end23
  %44 = load i32, i32* %__UNIQUE_ID___x530, align 4, !dbg !17104
  br label %cond.end, !dbg !17104

cond.false:                                       ; preds = %if.end23
  %45 = load i32, i32* %__UNIQUE_ID___y531, align 4, !dbg !17104
  br label %cond.end, !dbg !17104

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %44, %cond.true ], [ %45, %cond.false ], !dbg !17104
  store i32 %cond, i32* %tmp, align 4, !dbg !17104
  %46 = load i32, i32* %tmp, align 4, !dbg !17104
  store i32 %46, i32* %size, align 4, !dbg !17106
  br label %while.cond, !dbg !17061, !llvm.loop !17107

while.end:                                        ; preds = %while.cond
  store i32 0, i32* %f, align 4, !dbg !17109
  br label %for.cond, !dbg !17111

for.cond:                                         ; preds = %for.inc, %while.end
  %47 = load i32, i32* %f, align 4, !dbg !17112
  %48 = load i32, i32* %nr_frags, align 4, !dbg !17114
  %cmp31 = icmp ult i32 %47, %48, !dbg !17115
  br i1 %cmp31, label %for.body, label %for.end, !dbg !17116

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.bio_vec** %frag, metadata !17117, metadata !DIExpression()), !dbg !17119
  %49 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !17120
  %call33 = call i8* @skb_end_pointer(%struct.sk_buff* %49) #12, !dbg !17120
  %50 = bitcast i8* %call33 to %struct.skb_shared_info*, !dbg !17121
  %frags = getelementptr inbounds %struct.skb_shared_info, %struct.skb_shared_info* %50, i32 0, i32 12, !dbg !17121
  %51 = load i32, i32* %f, align 4, !dbg !17122
  %idxprom34 = zext i32 %51 to i64, !dbg !17120
  %arrayidx35 = getelementptr [17 x %struct.bio_vec], [17 x %struct.bio_vec]* %frags, i64 0, i64 %idxprom34, !dbg !17120
  store %struct.bio_vec* %arrayidx35, %struct.bio_vec** %frag, align 8, !dbg !17119
  %52 = load %struct.bio_vec*, %struct.bio_vec** %frag, align 8, !dbg !17123
  %call36 = call i32 @skb_frag_size(%struct.bio_vec* %52) #12, !dbg !17124
  store i32 %call36, i32* %len, align 4, !dbg !17125
  store i32 0, i32* %offset, align 4, !dbg !17126
  br label %while.cond37, !dbg !17127

while.cond37:                                     ; preds = %if.end62, %for.body
  %53 = load i32, i32* %len, align 4, !dbg !17128
  %tobool38 = icmp ne i32 %53, 0, !dbg !17127
  br i1 %tobool38, label %while.body39, label %while.end72, !dbg !17127

while.body39:                                     ; preds = %while.cond37
  call void @llvm.dbg.declare(metadata i32* %__UNIQUE_ID___x532, metadata !17129, metadata !DIExpression()), !dbg !17132
  %54 = load i32, i32* %len, align 4, !dbg !17132
  store i32 %54, i32* %__UNIQUE_ID___x532, align 4, !dbg !17132
  call void @llvm.dbg.declare(metadata i32* %__UNIQUE_ID___y533, metadata !17133, metadata !DIExpression()), !dbg !17132
  %55 = load %struct.macb*, %struct.macb** %bp.addr, align 8, !dbg !17132
  %max_tx_length40 = getelementptr inbounds %struct.macb, %struct.macb* %55, i32 0, i32 29, !dbg !17132
  %56 = load i32, i32* %max_tx_length40, align 8, !dbg !17132
  store i32 %56, i32* %__UNIQUE_ID___y533, align 4, !dbg !17132
  %57 = load i32, i32* %__UNIQUE_ID___x532, align 4, !dbg !17132
  %58 = load i32, i32* %__UNIQUE_ID___y533, align 4, !dbg !17132
  %cmp42 = icmp ult i32 %57, %58, !dbg !17132
  br i1 %cmp42, label %cond.true44, label %cond.false45, !dbg !17132

cond.true44:                                      ; preds = %while.body39
  %59 = load i32, i32* %__UNIQUE_ID___x532, align 4, !dbg !17132
  br label %cond.end46, !dbg !17132

cond.false45:                                     ; preds = %while.body39
  %60 = load i32, i32* %__UNIQUE_ID___y533, align 4, !dbg !17132
  br label %cond.end46, !dbg !17132

cond.end46:                                       ; preds = %cond.false45, %cond.true44
  %cond47 = phi i32 [ %59, %cond.true44 ], [ %60, %cond.false45 ], !dbg !17132
  store i32 %cond47, i32* %tmp41, align 4, !dbg !17132
  %61 = load i32, i32* %tmp41, align 4, !dbg !17132
  store i32 %61, i32* %size, align 4, !dbg !17134
  %62 = load %struct.macb*, %struct.macb** %bp.addr, align 8, !dbg !17135
  %63 = load i32, i32* %tx_head, align 4, !dbg !17136
  %call48 = call i32 @macb_tx_ring_wrap(%struct.macb* %62, i32 %63) #12, !dbg !17137
  store i32 %call48, i32* %entry1, align 4, !dbg !17138
  %64 = load %struct.macb_queue*, %struct.macb_queue** %queue.addr, align 8, !dbg !17139
  %tx_skb49 = getelementptr inbounds %struct.macb_queue, %struct.macb_queue* %64, i32 0, i32 14, !dbg !17140
  %65 = load %struct.macb_tx_skb*, %struct.macb_tx_skb** %tx_skb49, align 8, !dbg !17140
  %66 = load i32, i32* %entry1, align 4, !dbg !17141
  %idxprom50 = zext i32 %66 to i64, !dbg !17139
  %arrayidx51 = getelementptr %struct.macb_tx_skb, %struct.macb_tx_skb* %65, i64 %idxprom50, !dbg !17139
  store %struct.macb_tx_skb* %arrayidx51, %struct.macb_tx_skb** %tx_skb, align 8, !dbg !17142
  %67 = load %struct.macb*, %struct.macb** %bp.addr, align 8, !dbg !17143
  %pdev52 = getelementptr inbounds %struct.macb, %struct.macb* %67, i32 0, i32 11, !dbg !17144
  %68 = load %struct.platform_device*, %struct.platform_device** %pdev52, align 8, !dbg !17144
  %dev53 = getelementptr inbounds %struct.platform_device, %struct.platform_device* %68, i32 0, i32 3, !dbg !17145
  %69 = load %struct.bio_vec*, %struct.bio_vec** %frag, align 8, !dbg !17146
  %70 = load i32, i32* %offset, align 4, !dbg !17147
  %conv54 = zext i32 %70 to i64, !dbg !17147
  %71 = load i32, i32* %size, align 4, !dbg !17148
  %conv55 = zext i32 %71 to i64, !dbg !17148
  %call56 = call i64 @skb_frag_dma_map(%struct.device* %dev53, %struct.bio_vec* %69, i64 %conv54, i64 %conv55, i32 1) #12, !dbg !17149
  store i64 %call56, i64* %mapping, align 8, !dbg !17150
  %72 = load %struct.macb*, %struct.macb** %bp.addr, align 8, !dbg !17151
  %pdev57 = getelementptr inbounds %struct.macb, %struct.macb* %72, i32 0, i32 11, !dbg !17153
  %73 = load %struct.platform_device*, %struct.platform_device** %pdev57, align 8, !dbg !17153
  %dev58 = getelementptr inbounds %struct.platform_device, %struct.platform_device* %73, i32 0, i32 3, !dbg !17154
  %74 = load i64, i64* %mapping, align 8, !dbg !17155
  %call59 = call i32 @dma_mapping_error(%struct.device* %dev58, i64 %74) #12, !dbg !17156
  %tobool60 = icmp ne i32 %call59, 0, !dbg !17156
  br i1 %tobool60, label %if.then61, label %if.end62, !dbg !17157

if.then61:                                        ; preds = %cond.end46
  br label %dma_error, !dbg !17158

if.end62:                                         ; preds = %cond.end46
  %75 = load %struct.macb_tx_skb*, %struct.macb_tx_skb** %tx_skb, align 8, !dbg !17159
  %skb63 = getelementptr inbounds %struct.macb_tx_skb, %struct.macb_tx_skb* %75, i32 0, i32 0, !dbg !17160
  store %struct.sk_buff* null, %struct.sk_buff** %skb63, align 8, !dbg !17161
  %76 = load i64, i64* %mapping, align 8, !dbg !17162
  %77 = load %struct.macb_tx_skb*, %struct.macb_tx_skb** %tx_skb, align 8, !dbg !17163
  %mapping64 = getelementptr inbounds %struct.macb_tx_skb, %struct.macb_tx_skb* %77, i32 0, i32 1, !dbg !17164
  store i64 %76, i64* %mapping64, align 8, !dbg !17165
  %78 = load i32, i32* %size, align 4, !dbg !17166
  %conv65 = zext i32 %78 to i64, !dbg !17166
  %79 = load %struct.macb_tx_skb*, %struct.macb_tx_skb** %tx_skb, align 8, !dbg !17167
  %size66 = getelementptr inbounds %struct.macb_tx_skb, %struct.macb_tx_skb* %79, i32 0, i32 2, !dbg !17168
  store i64 %conv65, i64* %size66, align 8, !dbg !17169
  %80 = load %struct.macb_tx_skb*, %struct.macb_tx_skb** %tx_skb, align 8, !dbg !17170
  %mapped_as_page67 = getelementptr inbounds %struct.macb_tx_skb, %struct.macb_tx_skb* %80, i32 0, i32 3, !dbg !17171
  store i8 1, i8* %mapped_as_page67, align 8, !dbg !17172
  %81 = load i32, i32* %size, align 4, !dbg !17173
  %82 = load i32, i32* %len, align 4, !dbg !17174
  %sub68 = sub i32 %82, %81, !dbg !17174
  store i32 %sub68, i32* %len, align 4, !dbg !17174
  %83 = load i32, i32* %size, align 4, !dbg !17175
  %84 = load i32, i32* %offset, align 4, !dbg !17176
  %add69 = add i32 %84, %83, !dbg !17176
  store i32 %add69, i32* %offset, align 4, !dbg !17176
  %85 = load i32, i32* %count, align 4, !dbg !17177
  %inc70 = add i32 %85, 1, !dbg !17177
  store i32 %inc70, i32* %count, align 4, !dbg !17177
  %86 = load i32, i32* %tx_head, align 4, !dbg !17178
  %inc71 = add i32 %86, 1, !dbg !17178
  store i32 %inc71, i32* %tx_head, align 4, !dbg !17178
  br label %while.cond37, !dbg !17127, !llvm.loop !17179

while.end72:                                      ; preds = %while.cond37
  br label %for.inc, !dbg !17181

for.inc:                                          ; preds = %while.end72
  %87 = load i32, i32* %f, align 4, !dbg !17182
  %inc73 = add i32 %87, 1, !dbg !17182
  store i32 %inc73, i32* %f, align 4, !dbg !17182
  br label %for.cond, !dbg !17183, !llvm.loop !17184

for.end:                                          ; preds = %for.cond
  %88 = load %struct.macb_tx_skb*, %struct.macb_tx_skb** %tx_skb, align 8, !dbg !17186
  %tobool74 = icmp ne %struct.macb_tx_skb* %88, null, !dbg !17186
  %lnot = xor i1 %tobool74, true, !dbg !17186
  %lnot75 = xor i1 %lnot, true, !dbg !17186
  %lnot76 = xor i1 %lnot75, true, !dbg !17186
  %lnot.ext = zext i1 %lnot76 to i32, !dbg !17186
  %conv77 = sext i32 %lnot.ext to i64, !dbg !17186
  %tobool78 = icmp ne i64 %conv77, 0, !dbg !17186
  br i1 %tobool78, label %if.then79, label %if.end81, !dbg !17188

if.then79:                                        ; preds = %for.end
  %89 = load %struct.macb*, %struct.macb** %bp.addr, align 8, !dbg !17189
  %dev80 = getelementptr inbounds %struct.macb, %struct.macb* %89, i32 0, i32 17, !dbg !17191
  %90 = load %struct.net_device*, %struct.net_device** %dev80, align 8, !dbg !17191
  call void (%struct.net_device*, i8*, ...) @netdev_err(%struct.net_device* %90, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.29, i64 0, i64 0)) #13, !dbg !17192
  store i32 0, i32* %retval, align 4, !dbg !17193
  br label %return, !dbg !17193

if.end81:                                         ; preds = %for.end
  %91 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !17194
  %92 = load %struct.macb_tx_skb*, %struct.macb_tx_skb** %tx_skb, align 8, !dbg !17195
  %skb82 = getelementptr inbounds %struct.macb_tx_skb, %struct.macb_tx_skb* %92, i32 0, i32 0, !dbg !17196
  store %struct.sk_buff* %91, %struct.sk_buff** %skb82, align 8, !dbg !17197
  %93 = load i32, i32* %tx_head, align 4, !dbg !17198
  store i32 %93, i32* %i, align 4, !dbg !17199
  %94 = load %struct.macb*, %struct.macb** %bp.addr, align 8, !dbg !17200
  %95 = load i32, i32* %i, align 4, !dbg !17201
  %call83 = call i32 @macb_tx_ring_wrap(%struct.macb* %94, i32 %95) #12, !dbg !17202
  store i32 %call83, i32* %entry1, align 4, !dbg !17203
  store i32 -2147483648, i32* %ctrl, align 4, !dbg !17204
  %96 = load %struct.macb_queue*, %struct.macb_queue** %queue.addr, align 8, !dbg !17205
  %97 = load i32, i32* %entry1, align 4, !dbg !17206
  %call84 = call %struct.macb_dma_desc* @macb_tx_desc(%struct.macb_queue* %96, i32 %97) #12, !dbg !17207
  store %struct.macb_dma_desc* %call84, %struct.macb_dma_desc** %desc, align 8, !dbg !17208
  %98 = load i32, i32* %ctrl, align 4, !dbg !17209
  %99 = load %struct.macb_dma_desc*, %struct.macb_dma_desc** %desc, align 8, !dbg !17210
  %ctrl85 = getelementptr inbounds %struct.macb_dma_desc, %struct.macb_dma_desc* %99, i32 0, i32 1, !dbg !17211
  store i32 %98, i32* %ctrl85, align 4, !dbg !17212
  %100 = load i32, i32* %lso_ctrl, align 4, !dbg !17213
  %tobool86 = icmp ne i32 %100, 0, !dbg !17213
  br i1 %tobool86, label %if.then87, label %if.end102, !dbg !17215

if.then87:                                        ; preds = %if.end81
  %101 = load i32, i32* %lso_ctrl, align 4, !dbg !17216
  %cmp88 = icmp eq i32 %101, 1, !dbg !17219
  br i1 %cmp88, label %if.then90, label %if.else97, !dbg !17220

if.then90:                                        ; preds = %if.then87
  %102 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !17221
  %call91 = call i8* @skb_end_pointer(%struct.sk_buff* %102) #12, !dbg !17221
  %103 = bitcast i8* %call91 to %struct.skb_shared_info*, !dbg !17222
  %gso_size92 = getelementptr inbounds %struct.skb_shared_info, %struct.skb_shared_info* %103, i32 0, i32 4, !dbg !17222
  %104 = load i16, i16* %gso_size92, align 4, !dbg !17222
  %conv93 = zext i16 %104 to i32, !dbg !17221
  %105 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !17223
  %call94 = call i32 @skb_transport_offset(%struct.sk_buff* %105) #12, !dbg !17224
  %add95 = add i32 %conv93, %call94, !dbg !17225
  %add96 = add i32 %add95, 4, !dbg !17226
  store i32 %add96, i32* %mss_mfs, align 4, !dbg !17227
  br label %if.end101, !dbg !17228

if.else97:                                        ; preds = %if.then87
  %106 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !17229
  %call98 = call i8* @skb_end_pointer(%struct.sk_buff* %106) #12, !dbg !17229
  %107 = bitcast i8* %call98 to %struct.skb_shared_info*, !dbg !17231
  %gso_size99 = getelementptr inbounds %struct.skb_shared_info, %struct.skb_shared_info* %107, i32 0, i32 4, !dbg !17231
  %108 = load i16, i16* %gso_size99, align 4, !dbg !17231
  %conv100 = zext i16 %108 to i32, !dbg !17229
  store i32 %conv100, i32* %mss_mfs, align 4, !dbg !17232
  store i32 0, i32* %seq_ctrl, align 4, !dbg !17233
  br label %if.end101

if.end101:                                        ; preds = %if.else97, %if.then90
  br label %if.end102, !dbg !17234

if.end102:                                        ; preds = %if.end101, %if.end81
  br label %do.body, !dbg !17235

do.body:                                          ; preds = %do.cond, %if.end102
  %109 = load i32, i32* %i, align 4, !dbg !17236
  %dec = add i32 %109, -1, !dbg !17236
  store i32 %dec, i32* %i, align 4, !dbg !17236
  %110 = load %struct.macb*, %struct.macb** %bp.addr, align 8, !dbg !17238
  %111 = load i32, i32* %i, align 4, !dbg !17239
  %call103 = call i32 @macb_tx_ring_wrap(%struct.macb* %110, i32 %111) #12, !dbg !17240
  store i32 %call103, i32* %entry1, align 4, !dbg !17241
  %112 = load %struct.macb_queue*, %struct.macb_queue** %queue.addr, align 8, !dbg !17242
  %tx_skb104 = getelementptr inbounds %struct.macb_queue, %struct.macb_queue* %112, i32 0, i32 14, !dbg !17243
  %113 = load %struct.macb_tx_skb*, %struct.macb_tx_skb** %tx_skb104, align 8, !dbg !17243
  %114 = load i32, i32* %entry1, align 4, !dbg !17244
  %idxprom105 = zext i32 %114 to i64, !dbg !17242
  %arrayidx106 = getelementptr %struct.macb_tx_skb, %struct.macb_tx_skb* %113, i64 %idxprom105, !dbg !17242
  store %struct.macb_tx_skb* %arrayidx106, %struct.macb_tx_skb** %tx_skb, align 8, !dbg !17245
  %115 = load %struct.macb_queue*, %struct.macb_queue** %queue.addr, align 8, !dbg !17246
  %116 = load i32, i32* %entry1, align 4, !dbg !17247
  %call107 = call %struct.macb_dma_desc* @macb_tx_desc(%struct.macb_queue* %115, i32 %116) #12, !dbg !17248
  store %struct.macb_dma_desc* %call107, %struct.macb_dma_desc** %desc, align 8, !dbg !17249
  %117 = load %struct.macb_tx_skb*, %struct.macb_tx_skb** %tx_skb, align 8, !dbg !17250
  %size108 = getelementptr inbounds %struct.macb_tx_skb, %struct.macb_tx_skb* %117, i32 0, i32 2, !dbg !17251
  %118 = load i64, i64* %size108, align 8, !dbg !17251
  %conv109 = trunc i64 %118 to i32, !dbg !17252
  store i32 %conv109, i32* %ctrl, align 4, !dbg !17253
  %119 = load i32, i32* %eof, align 4, !dbg !17254
  %tobool110 = icmp ne i32 %119, 0, !dbg !17254
  br i1 %tobool110, label %if.then111, label %if.end112, !dbg !17256

if.then111:                                       ; preds = %do.body
  %120 = load i32, i32* %ctrl, align 4, !dbg !17257
  %or = or i32 %120, 32768, !dbg !17257
  store i32 %or, i32* %ctrl, align 4, !dbg !17257
  store i32 0, i32* %eof, align 4, !dbg !17259
  br label %if.end112, !dbg !17260

if.end112:                                        ; preds = %if.then111, %do.body
  %121 = load i32, i32* %entry1, align 4, !dbg !17261
  %122 = load %struct.macb*, %struct.macb** %bp.addr, align 8, !dbg !17261
  %tx_ring_size = getelementptr inbounds %struct.macb, %struct.macb* %122, i32 0, i32 6, !dbg !17261
  %123 = load i32, i32* %tx_ring_size, align 4, !dbg !17261
  %sub113 = sub i32 %123, 1, !dbg !17261
  %cmp114 = icmp eq i32 %121, %sub113, !dbg !17261
  %lnot116 = xor i1 %cmp114, true, !dbg !17261
  %lnot118 = xor i1 %lnot116, true, !dbg !17261
  %lnot.ext119 = zext i1 %lnot118 to i32, !dbg !17261
  %conv120 = sext i32 %lnot.ext119 to i64, !dbg !17261
  %tobool121 = icmp ne i64 %conv120, 0, !dbg !17261
  br i1 %tobool121, label %if.then122, label %if.end124, !dbg !17263

if.then122:                                       ; preds = %if.end112
  %124 = load i32, i32* %ctrl, align 4, !dbg !17264
  %or123 = or i32 %124, 1073741824, !dbg !17264
  store i32 %or123, i32* %ctrl, align 4, !dbg !17264
  br label %if.end124, !dbg !17265

if.end124:                                        ; preds = %if.then122, %if.end112
  %125 = load i32, i32* %i, align 4, !dbg !17266
  %126 = load %struct.macb_queue*, %struct.macb_queue** %queue.addr, align 8, !dbg !17268
  %tx_head125 = getelementptr inbounds %struct.macb_queue, %struct.macb_queue* %126, i32 0, i32 11, !dbg !17269
  %127 = load i32, i32* %tx_head125, align 8, !dbg !17269
  %cmp126 = icmp eq i32 %125, %127, !dbg !17270
  br i1 %cmp126, label %if.then128, label %if.else144, !dbg !17271

if.then128:                                       ; preds = %if.end124
  %128 = load i32, i32* %lso_ctrl, align 4, !dbg !17272
  %and = and i32 %128, 3, !dbg !17272
  %shl = shl i32 %and, 17, !dbg !17272
  %129 = load i32, i32* %ctrl, align 4, !dbg !17274
  %or129 = or i32 %129, %shl, !dbg !17274
  store i32 %or129, i32* %ctrl, align 4, !dbg !17274
  %130 = load i32, i32* %seq_ctrl, align 4, !dbg !17275
  %and130 = and i32 %130, 1, !dbg !17275
  %shl131 = shl i32 %and130, 19, !dbg !17275
  %131 = load i32, i32* %ctrl, align 4, !dbg !17276
  %or132 = or i32 %131, %shl131, !dbg !17276
  store i32 %or132, i32* %ctrl, align 4, !dbg !17276
  %132 = load %struct.macb*, %struct.macb** %bp.addr, align 8, !dbg !17277
  %dev133 = getelementptr inbounds %struct.macb, %struct.macb* %132, i32 0, i32 17, !dbg !17279
  %133 = load %struct.net_device*, %struct.net_device** %dev133, align 8, !dbg !17279
  %features = getelementptr inbounds %struct.net_device, %struct.net_device* %133, i32 0, i32 15, !dbg !17280
  %134 = load i64, i64* %features, align 8, !dbg !17280
  %and134 = and i64 %134, 8, !dbg !17281
  %tobool135 = icmp ne i64 %and134, 0, !dbg !17281
  br i1 %tobool135, label %land.lhs.true, label %if.end143, !dbg !17282

land.lhs.true:                                    ; preds = %if.then128
  %135 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !17283
  %ip_summed = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %135, i32 0, i32 14, !dbg !17284
  %bf.load = load i16, i16* %ip_summed, align 8, !dbg !17284
  %bf.lshr = lshr i16 %bf.load, 5, !dbg !17284
  %bf.clear = and i16 %bf.lshr, 3, !dbg !17284
  %bf.cast = trunc i16 %bf.clear to i8, !dbg !17284
  %conv136 = zext i8 %bf.cast to i32, !dbg !17283
  %cmp137 = icmp ne i32 %conv136, 3, !dbg !17285
  br i1 %cmp137, label %land.lhs.true139, label %if.end143, !dbg !17286

land.lhs.true139:                                 ; preds = %land.lhs.true
  %136 = load i32, i32* %lso_ctrl, align 4, !dbg !17287
  %tobool140 = icmp ne i32 %136, 0, !dbg !17287
  br i1 %tobool140, label %if.end143, label %if.then141, !dbg !17288

if.then141:                                       ; preds = %land.lhs.true139
  %137 = load i32, i32* %ctrl, align 4, !dbg !17289
  %or142 = or i32 %137, 65536, !dbg !17289
  store i32 %or142, i32* %ctrl, align 4, !dbg !17289
  br label %if.end143, !dbg !17290

if.end143:                                        ; preds = %if.then141, %land.lhs.true139, %land.lhs.true, %if.then128
  br label %if.end148, !dbg !17291

if.else144:                                       ; preds = %if.end124
  %138 = load i32, i32* %mss_mfs, align 4, !dbg !17292
  %and145 = and i32 %138, 16383, !dbg !17292
  %shl146 = shl i32 %and145, 16, !dbg !17292
  %139 = load i32, i32* %ctrl, align 4, !dbg !17293
  %or147 = or i32 %139, %shl146, !dbg !17293
  store i32 %or147, i32* %ctrl, align 4, !dbg !17293
  br label %if.end148

if.end148:                                        ; preds = %if.else144, %if.end143
  %140 = load %struct.macb*, %struct.macb** %bp.addr, align 8, !dbg !17294
  %141 = load %struct.macb_dma_desc*, %struct.macb_dma_desc** %desc, align 8, !dbg !17295
  %142 = load %struct.macb_tx_skb*, %struct.macb_tx_skb** %tx_skb, align 8, !dbg !17296
  %mapping149 = getelementptr inbounds %struct.macb_tx_skb, %struct.macb_tx_skb* %142, i32 0, i32 1, !dbg !17297
  %143 = load i64, i64* %mapping149, align 8, !dbg !17297
  call void @macb_set_addr(%struct.macb* %140, %struct.macb_dma_desc* %141, i64 %143) #12, !dbg !17298
  call void asm sideeffect "sfence", "~{memory},~{dirflag},~{fpsr},~{flags}"() #8, !dbg !17299, !srcloc !17300
  %144 = load i32, i32* %ctrl, align 4, !dbg !17301
  %145 = load %struct.macb_dma_desc*, %struct.macb_dma_desc** %desc, align 8, !dbg !17302
  %ctrl150 = getelementptr inbounds %struct.macb_dma_desc, %struct.macb_dma_desc* %145, i32 0, i32 1, !dbg !17303
  store i32 %144, i32* %ctrl150, align 4, !dbg !17304
  br label %do.cond, !dbg !17305

do.cond:                                          ; preds = %if.end148
  %146 = load i32, i32* %i, align 4, !dbg !17306
  %147 = load %struct.macb_queue*, %struct.macb_queue** %queue.addr, align 8, !dbg !17307
  %tx_head151 = getelementptr inbounds %struct.macb_queue, %struct.macb_queue* %147, i32 0, i32 11, !dbg !17308
  %148 = load i32, i32* %tx_head151, align 8, !dbg !17308
  %cmp152 = icmp ne i32 %146, %148, !dbg !17309
  br i1 %cmp152, label %do.body, label %do.end, !dbg !17305, !llvm.loop !17310

do.end:                                           ; preds = %do.cond
  %149 = load i32, i32* %tx_head, align 4, !dbg !17312
  %150 = load %struct.macb_queue*, %struct.macb_queue** %queue.addr, align 8, !dbg !17313
  %tx_head154 = getelementptr inbounds %struct.macb_queue, %struct.macb_queue* %150, i32 0, i32 11, !dbg !17314
  store i32 %149, i32* %tx_head154, align 8, !dbg !17315
  %151 = load i32, i32* %count, align 4, !dbg !17316
  store i32 %151, i32* %retval, align 4, !dbg !17317
  br label %return, !dbg !17317

dma_error:                                        ; preds = %if.then61, %if.then22
  call void @llvm.dbg.label(metadata !17318), !dbg !17319
  %152 = load %struct.macb*, %struct.macb** %bp.addr, align 8, !dbg !17320
  %dev155 = getelementptr inbounds %struct.macb, %struct.macb* %152, i32 0, i32 17, !dbg !17321
  %153 = load %struct.net_device*, %struct.net_device** %dev155, align 8, !dbg !17321
  call void (%struct.net_device*, i8*, ...) @netdev_err(%struct.net_device* %153, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.30, i64 0, i64 0)) #13, !dbg !17322
  %154 = load %struct.macb_queue*, %struct.macb_queue** %queue.addr, align 8, !dbg !17323
  %tx_head156 = getelementptr inbounds %struct.macb_queue, %struct.macb_queue* %154, i32 0, i32 11, !dbg !17325
  %155 = load i32, i32* %tx_head156, align 8, !dbg !17325
  store i32 %155, i32* %i, align 4, !dbg !17326
  br label %for.cond157, !dbg !17327

for.cond157:                                      ; preds = %for.inc162, %dma_error
  %156 = load i32, i32* %i, align 4, !dbg !17328
  %157 = load i32, i32* %tx_head, align 4, !dbg !17330
  %cmp158 = icmp ne i32 %156, %157, !dbg !17331
  br i1 %cmp158, label %for.body160, label %for.end164, !dbg !17332

for.body160:                                      ; preds = %for.cond157
  %158 = load %struct.macb_queue*, %struct.macb_queue** %queue.addr, align 8, !dbg !17333
  %159 = load i32, i32* %i, align 4, !dbg !17335
  %call161 = call %struct.macb_tx_skb* @macb_tx_skb(%struct.macb_queue* %158, i32 %159) #12, !dbg !17336
  store %struct.macb_tx_skb* %call161, %struct.macb_tx_skb** %tx_skb, align 8, !dbg !17337
  %160 = load %struct.macb*, %struct.macb** %bp.addr, align 8, !dbg !17338
  %161 = load %struct.macb_tx_skb*, %struct.macb_tx_skb** %tx_skb, align 8, !dbg !17339
  call void @macb_tx_unmap(%struct.macb* %160, %struct.macb_tx_skb* %161) #12, !dbg !17340
  br label %for.inc162, !dbg !17341

for.inc162:                                       ; preds = %for.body160
  %162 = load i32, i32* %i, align 4, !dbg !17342
  %inc163 = add i32 %162, 1, !dbg !17342
  store i32 %inc163, i32* %i, align 4, !dbg !17342
  br label %for.cond157, !dbg !17343, !llvm.loop !17344

for.end164:                                       ; preds = %for.cond157
  store i32 0, i32* %retval, align 4, !dbg !17346
  br label %return, !dbg !17346

return:                                           ; preds = %for.end164, %do.end, %if.then79
  %163 = load i32, i32* %retval, align 4, !dbg !17347
  ret i32 %163, !dbg !17347
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @skb_tx_timestamp(%struct.sk_buff* %skb) #2 !dbg !17348 {
entry:
  %skb.addr = alloca %struct.sk_buff*, align 8
  store %struct.sk_buff* %skb, %struct.sk_buff** %skb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.sk_buff** %skb.addr, metadata !17349, metadata !DIExpression()), !dbg !17350
  %0 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !17351
  call void @skb_clone_tx_timestamp(%struct.sk_buff* %0) #12, !dbg !17352
  %1 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !17353
  %call = call i8* @skb_end_pointer(%struct.sk_buff* %1) #12, !dbg !17353
  %2 = bitcast i8* %call to %struct.skb_shared_info*, !dbg !17355
  %tx_flags = getelementptr inbounds %struct.skb_shared_info, %struct.skb_shared_info* %2, i32 0, i32 3, !dbg !17355
  %3 = load i8, i8* %tx_flags, align 1, !dbg !17355
  %conv = zext i8 %3 to i32, !dbg !17353
  %and = and i32 %conv, 2, !dbg !17356
  %tobool = icmp ne i32 %and, 0, !dbg !17356
  br i1 %tobool, label %if.then, label %if.end, !dbg !17357

if.then:                                          ; preds = %entry
  %4 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !17358
  call void @skb_tstamp_tx(%struct.sk_buff* %4, %struct.skb_shared_hwtstamps* null) #12, !dbg !17359
  br label %if.end, !dbg !17359

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !17360
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @skb_cow_head(%struct.sk_buff* %skb, i32 %headroom) #2 !dbg !17361 {
entry:
  %skb.addr = alloca %struct.sk_buff*, align 8
  %headroom.addr = alloca i32, align 4
  store %struct.sk_buff* %skb, %struct.sk_buff** %skb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.sk_buff** %skb.addr, metadata !17364, metadata !DIExpression()), !dbg !17365
  store i32 %headroom, i32* %headroom.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %headroom.addr, metadata !17366, metadata !DIExpression()), !dbg !17367
  %0 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !17368
  %1 = load i32, i32* %headroom.addr, align 4, !dbg !17369
  %2 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !17370
  %call = call i32 @skb_header_cloned(%struct.sk_buff* %2) #12, !dbg !17371
  %call1 = call i32 @__skb_cow(%struct.sk_buff* %0, i32 %1, i32 %call) #12, !dbg !17372
  ret i32 %call1, !dbg !17373
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @skb_checksum_start(%struct.sk_buff* %skb) #2 !dbg !17374 {
entry:
  %skb.addr = alloca %struct.sk_buff*, align 8
  store %struct.sk_buff* %skb, %struct.sk_buff** %skb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.sk_buff** %skb.addr, metadata !17375, metadata !DIExpression()), !dbg !17376
  %0 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !17377
  %head = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %0, i32 0, i32 36, !dbg !17378
  %1 = load i8*, i8** %head, align 8, !dbg !17378
  %2 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !17379
  %3 = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %2, i32 0, i32 17, !dbg !17380
  %4 = bitcast %union.anon.53* %3 to %struct.anon.54*, !dbg !17380
  %csum_start = getelementptr inbounds %struct.anon.54, %struct.anon.54* %4, i32 0, i32 0, !dbg !17380
  %5 = load i16, i16* %csum_start, align 4, !dbg !17380
  %conv = zext i16 %5 to i32, !dbg !17379
  %idx.ext = sext i32 %conv to i64, !dbg !17381
  %add.ptr = getelementptr i8, i8* %1, i64 %idx.ext, !dbg !17381
  ret i8* %add.ptr, !dbg !17382
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @__skb_cow(%struct.sk_buff* %skb, i32 %headroom, i32 %cloned) #2 !dbg !17383 {
entry:
  %retval = alloca i32, align 4
  %skb.addr = alloca %struct.sk_buff*, align 8
  %headroom.addr = alloca i32, align 4
  %cloned.addr = alloca i32, align 4
  %delta = alloca i32, align 4
  store %struct.sk_buff* %skb, %struct.sk_buff** %skb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.sk_buff** %skb.addr, metadata !17386, metadata !DIExpression()), !dbg !17387
  store i32 %headroom, i32* %headroom.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %headroom.addr, metadata !17388, metadata !DIExpression()), !dbg !17389
  store i32 %cloned, i32* %cloned.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %cloned.addr, metadata !17390, metadata !DIExpression()), !dbg !17391
  call void @llvm.dbg.declare(metadata i32* %delta, metadata !17392, metadata !DIExpression()), !dbg !17393
  store i32 0, i32* %delta, align 4, !dbg !17393
  %0 = load i32, i32* %headroom.addr, align 4, !dbg !17394
  %1 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !17396
  %call = call i32 @skb_headroom(%struct.sk_buff* %1) #12, !dbg !17397
  %cmp = icmp ugt i32 %0, %call, !dbg !17398
  br i1 %cmp, label %if.then, label %if.end, !dbg !17399

if.then:                                          ; preds = %entry
  %2 = load i32, i32* %headroom.addr, align 4, !dbg !17400
  %3 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !17401
  %call1 = call i32 @skb_headroom(%struct.sk_buff* %3) #12, !dbg !17402
  %sub = sub i32 %2, %call1, !dbg !17403
  store i32 %sub, i32* %delta, align 4, !dbg !17404
  br label %if.end, !dbg !17405

if.end:                                           ; preds = %if.then, %entry
  %4 = load i32, i32* %delta, align 4, !dbg !17406
  %tobool = icmp ne i32 %4, 0, !dbg !17406
  br i1 %tobool, label %if.then3, label %lor.lhs.false, !dbg !17408

lor.lhs.false:                                    ; preds = %if.end
  %5 = load i32, i32* %cloned.addr, align 4, !dbg !17409
  %tobool2 = icmp ne i32 %5, 0, !dbg !17409
  br i1 %tobool2, label %if.then3, label %if.end5, !dbg !17410

if.then3:                                         ; preds = %lor.lhs.false, %if.end
  %6 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !17411
  %7 = load i32, i32* %delta, align 4, !dbg !17412
  %add = add i32 %7, 63, !dbg !17412
  %and = and i32 %add, -64, !dbg !17412
  %call4 = call i32 @pskb_expand_head(%struct.sk_buff* %6, i32 %and, i32 0, i32 2592) #12, !dbg !17413
  store i32 %call4, i32* %retval, align 4, !dbg !17414
  br label %return, !dbg !17414

if.end5:                                          ; preds = %lor.lhs.false
  store i32 0, i32* %retval, align 4, !dbg !17415
  br label %return, !dbg !17415

return:                                           ; preds = %if.end5, %if.then3
  %8 = load i32, i32* %retval, align 4, !dbg !17416
  ret i32 %8, !dbg !17416
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @skb_header_cloned(%struct.sk_buff* %skb) #2 !dbg !17417 {
entry:
  %v.addr.i1.i = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i1.i, metadata !17418, metadata !DIExpression()), !dbg !17424
  %v.addr.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %v.addr.i.i, metadata !14357, metadata !DIExpression()), !dbg !17428
  %size.addr.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i, metadata !14361, metadata !DIExpression()), !dbg !17430
  %v.addr.i = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i, metadata !17431, metadata !DIExpression()), !dbg !17432
  %retval = alloca i32, align 4
  %skb.addr = alloca %struct.sk_buff*, align 8
  %dataref = alloca i32, align 4
  store %struct.sk_buff* %skb, %struct.sk_buff** %skb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.sk_buff** %skb.addr, metadata !17433, metadata !DIExpression()), !dbg !17434
  call void @llvm.dbg.declare(metadata i32* %dataref, metadata !17435, metadata !DIExpression()), !dbg !17436
  %0 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !17437
  %cloned = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %0, i32 0, i32 11, !dbg !17439
  %bf.load = load i8, i8* %cloned, align 2, !dbg !17439
  %bf.clear = and i8 %bf.load, 1, !dbg !17439
  %tobool = icmp ne i8 %bf.clear, 0, !dbg !17437
  br i1 %tobool, label %if.end, label %if.then, !dbg !17440

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !17441
  br label %return, !dbg !17441

if.end:                                           ; preds = %entry
  %1 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !17442
  %call = call i8* @skb_end_pointer(%struct.sk_buff* %1) #12, !dbg !17442
  %2 = bitcast i8* %call to %struct.skb_shared_info*, !dbg !17443
  %dataref1 = getelementptr inbounds %struct.skb_shared_info, %struct.skb_shared_info* %2, i32 0, i32 10, !dbg !17443
  store %struct.atomic_t* %dataref1, %struct.atomic_t** %v.addr.i, align 8
  %3 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i, align 8, !dbg !17444
  %4 = bitcast %struct.atomic_t* %3 to i8*, !dbg !17444
  store i8* %4, i8** %v.addr.i.i, align 8
  store i64 4, i64* %size.addr.i.i, align 8
  %5 = load i8*, i8** %v.addr.i.i, align 8, !dbg !17445
  %6 = load i64, i64* %size.addr.i.i, align 8, !dbg !17446
  %conv.i.i = trunc i64 %6 to i32, !dbg !17446
  %call.i.i = call zeroext i1 @kasan_check_read(i8* %5, i32 %conv.i.i) #14, !dbg !17447
  %7 = load i8*, i8** %v.addr.i.i, align 8, !dbg !17448
  %8 = load i64, i64* %size.addr.i.i, align 8, !dbg !17448
  call void @kcsan_check_access(i8* %7, i64 %8, i32 4) #14, !dbg !17448
  %9 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i, align 8, !dbg !17449
  store %struct.atomic_t* %9, %struct.atomic_t** %v.addr.i1.i, align 8
  %10 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i1.i, align 8, !dbg !17450
  %counter.i.i = getelementptr inbounds %struct.atomic_t, %struct.atomic_t* %10, i32 0, i32 0, !dbg !17450
  %11 = load volatile i32, i32* %counter.i.i, align 4, !dbg !17450
  store i32 %11, i32* %dataref, align 4, !dbg !17451
  %12 = load i32, i32* %dataref, align 4, !dbg !17452
  %and = and i32 %12, 65535, !dbg !17453
  %13 = load i32, i32* %dataref, align 4, !dbg !17454
  %shr = ashr i32 %13, 16, !dbg !17455
  %sub = sub i32 %and, %shr, !dbg !17456
  store i32 %sub, i32* %dataref, align 4, !dbg !17457
  %14 = load i32, i32* %dataref, align 4, !dbg !17458
  %cmp = icmp ne i32 %14, 1, !dbg !17459
  %conv = zext i1 %cmp to i32, !dbg !17459
  store i32 %conv, i32* %retval, align 4, !dbg !17460
  br label %return, !dbg !17460

return:                                           ; preds = %if.end, %if.then
  %15 = load i32, i32* %retval, align 4, !dbg !17461
  ret i32 %15, !dbg !17461
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @skb_headroom(%struct.sk_buff* %skb) #2 !dbg !17462 {
entry:
  %skb.addr = alloca %struct.sk_buff*, align 8
  store %struct.sk_buff* %skb, %struct.sk_buff** %skb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.sk_buff** %skb.addr, metadata !17463, metadata !DIExpression()), !dbg !17464
  %0 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !17465
  %data = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %0, i32 0, i32 37, !dbg !17466
  %1 = load i8*, i8** %data, align 8, !dbg !17466
  %2 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !17467
  %head = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %2, i32 0, i32 36, !dbg !17468
  %3 = load i8*, i8** %head, align 8, !dbg !17468
  %sub.ptr.lhs.cast = ptrtoint i8* %1 to i64, !dbg !17469
  %sub.ptr.rhs.cast = ptrtoint i8* %3 to i64, !dbg !17469
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !17469
  %conv = trunc i64 %sub.ptr.sub to i32, !dbg !17465
  ret i32 %conv, !dbg !17470
}

; Function Attrs: noredzone
declare dso_local i32 @pskb_expand_head(%struct.sk_buff*, i32, i32, i32) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @skb_cloned(%struct.sk_buff* %skb) #2 !dbg !17471 {
entry:
  %v.addr.i1.i = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i1.i, metadata !17418, metadata !DIExpression()), !dbg !17472
  %v.addr.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %v.addr.i.i, metadata !14357, metadata !DIExpression()), !dbg !17475
  %size.addr.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i, metadata !14361, metadata !DIExpression()), !dbg !17477
  %v.addr.i = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i, metadata !17431, metadata !DIExpression()), !dbg !17478
  %skb.addr = alloca %struct.sk_buff*, align 8
  store %struct.sk_buff* %skb, %struct.sk_buff** %skb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.sk_buff** %skb.addr, metadata !17479, metadata !DIExpression()), !dbg !17480
  %0 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !17481
  %cloned = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %0, i32 0, i32 11, !dbg !17482
  %bf.load = load i8, i8* %cloned, align 2, !dbg !17482
  %bf.clear = and i8 %bf.load, 1, !dbg !17482
  %conv = zext i8 %bf.clear to i32, !dbg !17481
  %tobool = icmp ne i32 %conv, 0, !dbg !17481
  br i1 %tobool, label %land.rhs, label %land.end, !dbg !17483

land.rhs:                                         ; preds = %entry
  %1 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !17484
  %call = call i8* @skb_end_pointer(%struct.sk_buff* %1) #12, !dbg !17484
  %2 = bitcast i8* %call to %struct.skb_shared_info*, !dbg !17485
  %dataref = getelementptr inbounds %struct.skb_shared_info, %struct.skb_shared_info* %2, i32 0, i32 10, !dbg !17485
  store %struct.atomic_t* %dataref, %struct.atomic_t** %v.addr.i, align 8
  %3 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i, align 8, !dbg !17486
  %4 = bitcast %struct.atomic_t* %3 to i8*, !dbg !17486
  store i8* %4, i8** %v.addr.i.i, align 8
  store i64 4, i64* %size.addr.i.i, align 8
  %5 = load i8*, i8** %v.addr.i.i, align 8, !dbg !17487
  %6 = load i64, i64* %size.addr.i.i, align 8, !dbg !17488
  %conv.i.i = trunc i64 %6 to i32, !dbg !17488
  %call.i.i = call zeroext i1 @kasan_check_read(i8* %5, i32 %conv.i.i) #14, !dbg !17489
  %7 = load i8*, i8** %v.addr.i.i, align 8, !dbg !17490
  %8 = load i64, i64* %size.addr.i.i, align 8, !dbg !17490
  call void @kcsan_check_access(i8* %7, i64 %8, i32 4) #14, !dbg !17490
  %9 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i, align 8, !dbg !17491
  store %struct.atomic_t* %9, %struct.atomic_t** %v.addr.i1.i, align 8
  %10 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i1.i, align 8, !dbg !17492
  %counter.i.i = getelementptr inbounds %struct.atomic_t, %struct.atomic_t* %10, i32 0, i32 0, !dbg !17492
  %11 = load volatile i32, i32* %counter.i.i, align 4, !dbg !17492
  %and = and i32 %11, 65535, !dbg !17493
  %cmp = icmp ne i32 %and, 1, !dbg !17494
  br label %land.end

land.end:                                         ; preds = %land.rhs, %entry
  %12 = phi i1 [ false, %entry ], [ %cmp, %land.rhs ], !dbg !17495
  %land.ext = zext i1 %12 to i32, !dbg !17483
  ret i32 %land.ext, !dbg !17496
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @skb_is_nonlinear(%struct.sk_buff* %skb) #2 !dbg !17497 {
entry:
  %skb.addr = alloca %struct.sk_buff*, align 8
  store %struct.sk_buff* %skb, %struct.sk_buff** %skb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.sk_buff** %skb.addr, metadata !17500, metadata !DIExpression()), !dbg !17501
  %0 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !17502
  %data_len = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %0, i32 0, i32 6, !dbg !17503
  %1 = load i32, i32* %data_len, align 4, !dbg !17503
  %tobool = icmp ne i32 %1, 0, !dbg !17502
  ret i1 %tobool, !dbg !17504
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @skb_tailroom(%struct.sk_buff* %skb) #2 !dbg !17505 {
entry:
  %skb.addr = alloca %struct.sk_buff*, align 8
  store %struct.sk_buff* %skb, %struct.sk_buff** %skb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.sk_buff** %skb.addr, metadata !17506, metadata !DIExpression()), !dbg !17507
  %0 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !17508
  %call = call zeroext i1 @skb_is_nonlinear(%struct.sk_buff* %0) #12, !dbg !17509
  br i1 %call, label %cond.true, label %cond.false, !dbg !17509

cond.true:                                        ; preds = %entry
  br label %cond.end, !dbg !17509

cond.false:                                       ; preds = %entry
  %1 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !17510
  %end = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %1, i32 0, i32 35, !dbg !17511
  %2 = load i32, i32* %end, align 4, !dbg !17511
  %3 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !17512
  %tail = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %3, i32 0, i32 34, !dbg !17513
  %4 = load i32, i32* %tail, align 8, !dbg !17513
  %sub = sub i32 %2, %4, !dbg !17514
  br label %cond.end, !dbg !17509

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ 0, %cond.true ], [ %sub, %cond.false ], !dbg !17509
  ret i32 %cond, !dbg !17515
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #4

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @skb_set_tail_pointer(%struct.sk_buff* %skb, i32 %offset) #2 !dbg !17516 {
entry:
  %skb.addr = alloca %struct.sk_buff*, align 8
  %offset.addr = alloca i32, align 4
  store %struct.sk_buff* %skb, %struct.sk_buff** %skb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.sk_buff** %skb.addr, metadata !17520, metadata !DIExpression()), !dbg !17521
  store i32 %offset, i32* %offset.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %offset.addr, metadata !17522, metadata !DIExpression()), !dbg !17523
  %0 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !17524
  call void @skb_reset_tail_pointer(%struct.sk_buff* %0) #12, !dbg !17525
  %1 = load i32, i32* %offset.addr, align 4, !dbg !17526
  %2 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !17527
  %tail = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %2, i32 0, i32 34, !dbg !17528
  %3 = load i32, i32* %tail, align 8, !dbg !17529
  %add = add i32 %3, %1, !dbg !17529
  store i32 %add, i32* %tail, align 8, !dbg !17529
  ret void, !dbg !17530
}

; Function Attrs: noredzone
declare dso_local %struct.sk_buff* @skb_copy_expand(%struct.sk_buff*, i32, i32, i32) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @dev_consume_skb_any(%struct.sk_buff* %skb) #2 !dbg !17531 {
entry:
  %skb.addr = alloca %struct.sk_buff*, align 8
  store %struct.sk_buff* %skb, %struct.sk_buff** %skb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.sk_buff** %skb.addr, metadata !17532, metadata !DIExpression()), !dbg !17533
  %0 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !17534
  call void @__dev_kfree_skb_any(%struct.sk_buff* %0, i32 0) #12, !dbg !17535
  ret void, !dbg !17536
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @skb_put_zero(%struct.sk_buff* %skb, i32 %len) #2 !dbg !17537 {
entry:
  %skb.addr = alloca %struct.sk_buff*, align 8
  %len.addr = alloca i32, align 4
  %tmp = alloca i8*, align 8
  store %struct.sk_buff* %skb, %struct.sk_buff** %skb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.sk_buff** %skb.addr, metadata !17540, metadata !DIExpression()), !dbg !17541
  store i32 %len, i32* %len.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %len.addr, metadata !17542, metadata !DIExpression()), !dbg !17543
  call void @llvm.dbg.declare(metadata i8** %tmp, metadata !17544, metadata !DIExpression()), !dbg !17545
  %0 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !17546
  %1 = load i32, i32* %len.addr, align 4, !dbg !17547
  %call = call i8* @skb_put(%struct.sk_buff* %0, i32 %1) #12, !dbg !17548
  store i8* %call, i8** %tmp, align 8, !dbg !17545
  %2 = load i8*, i8** %tmp, align 8, !dbg !17549
  %3 = load i32, i32* %len.addr, align 4, !dbg !17550
  %conv = zext i32 %3 to i64, !dbg !17550
  call void @llvm.memset.p0i8.i64(i8* align 1 %2, i8 0, i64 %conv, i1 false), !dbg !17551
  %4 = load i8*, i8** %tmp, align 8, !dbg !17552
  ret i8* %4, !dbg !17553
}

; Function Attrs: noredzone nounwind readonly
declare dso_local i32 @crc32_le(i32, i8*, i64) #11

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @skb_put_u8(%struct.sk_buff* %skb, i8 zeroext %val) #2 !dbg !17554 {
entry:
  %skb.addr = alloca %struct.sk_buff*, align 8
  %val.addr = alloca i8, align 1
  store %struct.sk_buff* %skb, %struct.sk_buff** %skb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.sk_buff** %skb.addr, metadata !17557, metadata !DIExpression()), !dbg !17558
  store i8 %val, i8* %val.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %val.addr, metadata !17559, metadata !DIExpression()), !dbg !17560
  %0 = load i8, i8* %val.addr, align 1, !dbg !17561
  %1 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !17562
  %call = call i8* @skb_put(%struct.sk_buff* %1, i32 1) #12, !dbg !17563
  store i8 %0, i8* %call, align 1, !dbg !17564
  ret void, !dbg !17565
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @skb_reset_tail_pointer(%struct.sk_buff* %skb) #2 !dbg !17566 {
entry:
  %skb.addr = alloca %struct.sk_buff*, align 8
  store %struct.sk_buff* %skb, %struct.sk_buff** %skb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.sk_buff** %skb.addr, metadata !17567, metadata !DIExpression()), !dbg !17568
  %0 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !17569
  %data = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %0, i32 0, i32 37, !dbg !17570
  %1 = load i8*, i8** %data, align 8, !dbg !17570
  %2 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !17571
  %head = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %2, i32 0, i32 36, !dbg !17572
  %3 = load i8*, i8** %head, align 8, !dbg !17572
  %sub.ptr.lhs.cast = ptrtoint i8* %1 to i64, !dbg !17573
  %sub.ptr.rhs.cast = ptrtoint i8* %3 to i64, !dbg !17573
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !17573
  %conv = trunc i64 %sub.ptr.sub to i32, !dbg !17569
  %4 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !17574
  %tail = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %4, i32 0, i32 34, !dbg !17575
  store i32 %conv, i32* %tail, align 8, !dbg !17576
  ret void, !dbg !17577
}

; Function Attrs: noredzone
declare dso_local i8* @skb_put(%struct.sk_buff*, i32) #1

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #4

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @skb_network_header(%struct.sk_buff* %skb) #2 !dbg !17578 {
entry:
  %skb.addr = alloca %struct.sk_buff*, align 8
  store %struct.sk_buff* %skb, %struct.sk_buff** %skb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.sk_buff** %skb.addr, metadata !17579, metadata !DIExpression()), !dbg !17580
  %0 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !17581
  %head = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %0, i32 0, i32 36, !dbg !17582
  %1 = load i8*, i8** %head, align 8, !dbg !17582
  %2 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !17583
  %network_header = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %2, i32 0, i32 31, !dbg !17584
  %3 = load i16, i16* %network_header, align 4, !dbg !17584
  %conv = zext i16 %3 to i32, !dbg !17583
  %idx.ext = sext i32 %conv to i64, !dbg !17585
  %add.ptr = getelementptr i8, i8* %1, i64 %idx.ext, !dbg !17585
  ret i8* %add.ptr, !dbg !17586
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @skb_transport_header(%struct.sk_buff* %skb) #2 !dbg !17587 {
entry:
  %skb.addr = alloca %struct.sk_buff*, align 8
  store %struct.sk_buff* %skb, %struct.sk_buff** %skb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.sk_buff** %skb.addr, metadata !17588, metadata !DIExpression()), !dbg !17589
  %0 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !17590
  %head = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %0, i32 0, i32 36, !dbg !17591
  %1 = load i8*, i8** %head, align 8, !dbg !17591
  %2 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !17592
  %transport_header = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %2, i32 0, i32 30, !dbg !17593
  %3 = load i16, i16* %transport_header, align 2, !dbg !17593
  %conv = zext i16 %3 to i32, !dbg !17592
  %idx.ext = sext i32 %conv to i64, !dbg !17594
  %add.ptr = getelementptr i8, i8* %1, i64 %idx.ext, !dbg !17594
  ret i8* %add.ptr, !dbg !17595
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @__tcp_hdrlen(%struct.tcphdr* %th) #2 !dbg !17596 {
entry:
  %th.addr = alloca %struct.tcphdr*, align 8
  store %struct.tcphdr* %th, %struct.tcphdr** %th.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.tcphdr** %th.addr, metadata !17601, metadata !DIExpression()), !dbg !17602
  %0 = load %struct.tcphdr*, %struct.tcphdr** %th.addr, align 8, !dbg !17603
  %doff = getelementptr inbounds %struct.tcphdr, %struct.tcphdr* %0, i32 0, i32 4, !dbg !17604
  %bf.load = load i16, i16* %doff, align 4, !dbg !17604
  %bf.lshr = lshr i16 %bf.load, 4, !dbg !17604
  %bf.clear = and i16 %bf.lshr, 15, !dbg !17604
  %conv = zext i16 %bf.clear to i32, !dbg !17603
  %mul = mul i32 %conv, 4, !dbg !17605
  ret i32 %mul, !dbg !17606
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.tcphdr* @tcp_hdr(%struct.sk_buff* %skb) #2 !dbg !17607 {
entry:
  %skb.addr = alloca %struct.sk_buff*, align 8
  store %struct.sk_buff* %skb, %struct.sk_buff** %skb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.sk_buff** %skb.addr, metadata !17610, metadata !DIExpression()), !dbg !17611
  %0 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !17612
  %call = call i8* @skb_transport_header(%struct.sk_buff* %0) #12, !dbg !17613
  %1 = bitcast i8* %call to %struct.tcphdr*, !dbg !17614
  ret %struct.tcphdr* %1, !dbg !17615
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @set_bit(i64 %nr, i64* %addr) #2 !dbg !17616 {
entry:
  %nr.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %nr.addr.i, metadata !17617, metadata !DIExpression()), !dbg !17619
  %addr.addr.i = alloca i64*, align 8
  call void @llvm.dbg.declare(metadata i64** %addr.addr.i, metadata !17621, metadata !DIExpression()), !dbg !17622
  %v.addr.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %v.addr.i, metadata !14867, metadata !DIExpression()), !dbg !17623
  %size.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i, metadata !14871, metadata !DIExpression()), !dbg !17625
  %nr.addr = alloca i64, align 8
  %addr.addr = alloca i64*, align 8
  store i64 %nr, i64* %nr.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %nr.addr, metadata !17626, metadata !DIExpression()), !dbg !17627
  store i64* %addr, i64** %addr.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %addr.addr, metadata !17628, metadata !DIExpression()), !dbg !17629
  %0 = load i64*, i64** %addr.addr, align 8, !dbg !17630
  %1 = load i64, i64* %nr.addr, align 8, !dbg !17631
  %div = sdiv i64 %1, 64, !dbg !17631
  %add.ptr = getelementptr i64, i64* %0, i64 %div, !dbg !17632
  %2 = bitcast i64* %add.ptr to i8*, !dbg !17630
  store i8* %2, i8** %v.addr.i, align 8
  store i64 8, i64* %size.addr.i, align 8
  %3 = load i8*, i8** %v.addr.i, align 8, !dbg !17633
  %4 = load i64, i64* %size.addr.i, align 8, !dbg !17634
  %conv.i = trunc i64 %4 to i32, !dbg !17634
  %call.i = call zeroext i1 @kasan_check_write(i8* %3, i32 %conv.i) #14, !dbg !17635
  %5 = load i8*, i8** %v.addr.i, align 8, !dbg !17636
  %6 = load i64, i64* %size.addr.i, align 8, !dbg !17636
  call void @kcsan_check_access(i8* %5, i64 %6, i32 5) #14, !dbg !17636
  %7 = load i64, i64* %nr.addr, align 8, !dbg !17637
  %8 = load i64*, i64** %addr.addr, align 8, !dbg !17638
  store i64 %7, i64* %nr.addr.i, align 8
  store i64* %8, i64** %addr.addr.i, align 8
  %9 = load i64, i64* %nr.addr.i, align 8, !dbg !17639
  %10 = call i1 @llvm.is.constant.i64(i64 %9) #8, !dbg !17641
  br i1 %10, label %if.then.i, label %if.else.i, !dbg !17642

if.then.i:                                        ; preds = %entry
  %11 = load i64*, i64** %addr.addr.i, align 8, !dbg !17643
  %12 = bitcast i64* %11 to i8*, !dbg !17643
  %13 = load i64, i64* %nr.addr.i, align 8, !dbg !17643
  %shr.i = ashr i64 %13, 3, !dbg !17643
  %add.ptr.i = getelementptr i8, i8* %12, i64 %shr.i, !dbg !17643
  %14 = load i64, i64* %nr.addr.i, align 8, !dbg !17645
  %and.i = and i64 %14, 7, !dbg !17645
  %sh_prom.i = trunc i64 %and.i to i32, !dbg !17645
  %shl.i = shl i32 1, %sh_prom.i, !dbg !17645
  call void asm sideeffect "orb ${1:b},$0", "=*m,iq,*m,~{memory},~{dirflag},~{fpsr},~{flags}"(i8* %add.ptr.i, i32 %shl.i, i8* %add.ptr.i) #8, !dbg !17646, !srcloc !17647
  br label %arch_set_bit.exit, !dbg !17648

if.else.i:                                        ; preds = %entry
  %15 = load i64*, i64** %addr.addr.i, align 8, !dbg !17649
  %16 = load i64, i64* %nr.addr.i, align 8, !dbg !17651
  call void asm sideeffect " btsq  $1,$0", "*m,Ir,~{memory},~{dirflag},~{fpsr},~{flags}"(i64* %15, i64 %16) #8, !dbg !17652, !srcloc !17653
  br label %arch_set_bit.exit

arch_set_bit.exit:                                ; preds = %if.then.i, %if.else.i
  ret void, !dbg !17654
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @dma_map_single_attrs(%struct.device* %dev, i8* %ptr, i64 %size, i32 %dir, i64 %attrs) #2 !dbg !10846 {
entry:
  %retval = alloca i64, align 8
  %dev.addr = alloca %struct.device*, align 8
  %ptr.addr = alloca i8*, align 8
  %size.addr = alloca i64, align 8
  %dir.addr = alloca i32, align 4
  %attrs.addr = alloca i64, align 8
  %__ret_warn_once = alloca i32, align 4
  %__ret_warn_on = alloca i32, align 4
  %tmp = alloca i64, align 8
  %tmp39 = alloca i64, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !17655, metadata !DIExpression()), !dbg !17656
  store i8* %ptr, i8** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %ptr.addr, metadata !17657, metadata !DIExpression()), !dbg !17658
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !17659, metadata !DIExpression()), !dbg !17660
  store i32 %dir, i32* %dir.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %dir.addr, metadata !17661, metadata !DIExpression()), !dbg !17662
  store i64 %attrs, i64* %attrs.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %attrs.addr, metadata !17663, metadata !DIExpression()), !dbg !17664
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_once, metadata !17665, metadata !DIExpression()), !dbg !17668
  %0 = load i8*, i8** %ptr.addr, align 8, !dbg !17668
  %call = call zeroext i1 @is_vmalloc_addr(i8* %0) #12, !dbg !17668
  %lnot = xor i1 %call, true, !dbg !17668
  %lnot1 = xor i1 %lnot, true, !dbg !17668
  %lnot.ext = zext i1 %lnot1 to i32, !dbg !17668
  store i32 %lnot.ext, i32* %__ret_warn_once, align 4, !dbg !17668
  %1 = load i32, i32* %__ret_warn_once, align 4, !dbg !17669
  %tobool = icmp ne i32 %1, 0, !dbg !17669
  br i1 %tobool, label %land.rhs, label %land.end, !dbg !17669

land.rhs:                                         ; preds = %entry
  %2 = load i8, i8* @dma_map_single_attrs.__warned, align 1, !dbg !17669
  %tobool2 = trunc i8 %2 to i1, !dbg !17669
  %lnot3 = xor i1 %tobool2, true, !dbg !17669
  br label %land.end

land.end:                                         ; preds = %land.rhs, %entry
  %3 = phi i1 [ false, %entry ], [ %lnot3, %land.rhs ], !dbg !17671
  %lnot5 = xor i1 %3, true, !dbg !17669
  %lnot7 = xor i1 %lnot5, true, !dbg !17669
  %lnot.ext8 = zext i1 %lnot7 to i32, !dbg !17669
  %conv = sext i32 %lnot.ext8 to i64, !dbg !17669
  %tobool9 = icmp ne i64 %conv, 0, !dbg !17669
  br i1 %tobool9, label %if.then, label %if.end38, !dbg !17668

if.then:                                          ; preds = %land.end
  store i8 1, i8* @dma_map_single_attrs.__warned, align 1, !dbg !17672
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on, metadata !17674, metadata !DIExpression()), !dbg !17676
  store i32 1, i32* %__ret_warn_on, align 4, !dbg !17676
  %4 = load i32, i32* %__ret_warn_on, align 4, !dbg !17677
  %tobool10 = icmp ne i32 %4, 0, !dbg !17677
  %lnot11 = xor i1 %tobool10, true, !dbg !17677
  %lnot13 = xor i1 %lnot11, true, !dbg !17677
  %lnot.ext14 = zext i1 %lnot13 to i32, !dbg !17677
  %conv15 = sext i32 %lnot.ext14 to i64, !dbg !17677
  %tobool16 = icmp ne i64 %conv15, 0, !dbg !17677
  br i1 %tobool16, label %if.then17, label %if.end, !dbg !17676

if.then17:                                        ; preds = %if.then
  br label %do.body, !dbg !17677

do.body:                                          ; preds = %if.then17
  br label %do.body18, !dbg !17679

do.body18:                                        ; preds = %do.body
  br label %do.end, !dbg !17681

do.end:                                           ; preds = %do.body18
  %5 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !17679
  %call19 = call i8* @dev_driver_string(%struct.device* %5) #12, !dbg !17679
  %6 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !17679
  %call20 = call i8* @dev_name(%struct.device* %6) #12, !dbg !17679
  call void (i8*, ...) @__warn_printk(i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.31, i64 0, i64 0), i8* %call19, i8* %call20) #12, !dbg !17679
  br label %do.body21, !dbg !17679

do.body21:                                        ; preds = %do.end
  br label %do.body22, !dbg !17683

do.body22:                                        ; preds = %do.body21
  br label %do.end23, !dbg !17685

do.end23:                                         ; preds = %do.body22
  br label %do.body24, !dbg !17683

do.body24:                                        ; preds = %do.end23
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.32, i64 0, i64 0), i32 276, i32 2313, i64 12) #8, !dbg !17687, !srcloc !17689
  br label %do.end25, !dbg !17687

do.end25:                                         ; preds = %do.body24
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 245) #8, !dbg !17690, !srcloc !17692
  br label %do.body26, !dbg !17683

do.body26:                                        ; preds = %do.end25
  br label %do.end27, !dbg !17693

do.end27:                                         ; preds = %do.body26
  br label %do.end28, !dbg !17683

do.end28:                                         ; preds = %do.end27
  br label %do.body29, !dbg !17679

do.body29:                                        ; preds = %do.end28
  br label %do.end30, !dbg !17695

do.end30:                                         ; preds = %do.body29
  br label %do.end31, !dbg !17679

do.end31:                                         ; preds = %do.end30
  br label %if.end, !dbg !17679

if.end:                                           ; preds = %do.end31, %if.then
  %7 = load i32, i32* %__ret_warn_on, align 4, !dbg !17676
  %tobool32 = icmp ne i32 %7, 0, !dbg !17676
  %lnot33 = xor i1 %tobool32, true, !dbg !17676
  %lnot35 = xor i1 %lnot33, true, !dbg !17676
  %lnot.ext36 = zext i1 %lnot35 to i32, !dbg !17676
  %conv37 = sext i32 %lnot.ext36 to i64, !dbg !17676
  store i64 %conv37, i64* %tmp, align 8, !dbg !17677
  %8 = load i64, i64* %tmp, align 8, !dbg !17676
  br label %if.end38, !dbg !17672

if.end38:                                         ; preds = %if.end, %land.end
  %9 = load i32, i32* %__ret_warn_once, align 4, !dbg !17668
  %tobool40 = icmp ne i32 %9, 0, !dbg !17668
  %lnot41 = xor i1 %tobool40, true, !dbg !17668
  %lnot43 = xor i1 %lnot41, true, !dbg !17668
  %lnot.ext44 = zext i1 %lnot43 to i32, !dbg !17668
  %conv45 = sext i32 %lnot.ext44 to i64, !dbg !17668
  store i64 %conv45, i64* %tmp39, align 8, !dbg !17669
  %10 = load i64, i64* %tmp39, align 8, !dbg !17668
  %tobool46 = icmp ne i64 %10, 0, !dbg !17697
  br i1 %tobool46, label %if.then47, label %if.end48, !dbg !17698

if.then47:                                        ; preds = %if.end38
  store i64 -1, i64* %retval, align 8, !dbg !17699
  br label %return, !dbg !17699

if.end48:                                         ; preds = %if.end38
  %11 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !17700
  %12 = load i8*, i8** %ptr.addr, align 8, !dbg !17701
  %13 = load i64, i64* %size.addr, align 8, !dbg !17702
  call void @debug_dma_map_single(%struct.device* %11, i8* %12, i64 %13) #12, !dbg !17703
  %14 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !17704
  %15 = load i64, i64* @vmemmap_base, align 8, !dbg !17705
  %16 = inttoptr i64 %15 to %struct.page*, !dbg !17705
  %17 = load i8*, i8** %ptr.addr, align 8, !dbg !17705
  %18 = ptrtoint i8* %17 to i64, !dbg !17705
  %call49 = call i64 @__phys_addr_nodebug(i64 %18) #12, !dbg !17705
  %shr = lshr i64 %call49, 12, !dbg !17705
  %add.ptr = getelementptr %struct.page, %struct.page* %16, i64 %shr, !dbg !17705
  %19 = load i8*, i8** %ptr.addr, align 8, !dbg !17706
  %20 = ptrtoint i8* %19 to i64, !dbg !17706
  %and = and i64 %20, 4095, !dbg !17706
  %21 = load i64, i64* %size.addr, align 8, !dbg !17707
  %22 = load i32, i32* %dir.addr, align 4, !dbg !17708
  %23 = load i64, i64* %attrs.addr, align 8, !dbg !17709
  %call50 = call i64 @dma_map_page_attrs(%struct.device* %14, %struct.page* %add.ptr, i64 %and, i64 %21, i32 %22, i64 %23) #12, !dbg !17710
  store i64 %call50, i64* %retval, align 8, !dbg !17711
  br label %return, !dbg !17711

return:                                           ; preds = %if.end48, %if.then47
  %24 = load i64, i64* %retval, align 8, !dbg !17712
  ret i64 %24, !dbg !17712
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @dma_mapping_error(%struct.device* %dev, i64 %dma_addr) #2 !dbg !17713 {
entry:
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.device*, align 8
  %dma_addr.addr = alloca i64, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !17716, metadata !DIExpression()), !dbg !17717
  store i64 %dma_addr, i64* %dma_addr.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %dma_addr.addr, metadata !17718, metadata !DIExpression()), !dbg !17719
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !17720
  %1 = load i64, i64* %dma_addr.addr, align 8, !dbg !17721
  call void @debug_dma_mapping_error(%struct.device* %0, i64 %1) #12, !dbg !17722
  %2 = load i64, i64* %dma_addr.addr, align 8, !dbg !17723
  %cmp = icmp eq i64 %2, -1, !dbg !17725
  br i1 %cmp, label %if.then, label %if.end, !dbg !17726

if.then:                                          ; preds = %entry
  store i32 -12, i32* %retval, align 4, !dbg !17727
  br label %return, !dbg !17727

if.end:                                           ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !17728
  br label %return, !dbg !17728

return:                                           ; preds = %if.end, %if.then
  %3 = load i32, i32* %retval, align 4, !dbg !17729
  ret i32 %3, !dbg !17729
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @skb_frag_dma_map(%struct.device* %dev, %struct.bio_vec* %frag, i64 %offset, i64 %size, i32 %dir) #2 !dbg !17730 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %frag.addr = alloca %struct.bio_vec*, align 8
  %offset.addr = alloca i64, align 8
  %size.addr = alloca i64, align 8
  %dir.addr = alloca i32, align 4
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !17733, metadata !DIExpression()), !dbg !17734
  store %struct.bio_vec* %frag, %struct.bio_vec** %frag.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bio_vec** %frag.addr, metadata !17735, metadata !DIExpression()), !dbg !17736
  store i64 %offset, i64* %offset.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %offset.addr, metadata !17737, metadata !DIExpression()), !dbg !17738
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !17739, metadata !DIExpression()), !dbg !17740
  store i32 %dir, i32* %dir.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %dir.addr, metadata !17741, metadata !DIExpression()), !dbg !17742
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !17743
  %1 = load %struct.bio_vec*, %struct.bio_vec** %frag.addr, align 8, !dbg !17743
  %call = call %struct.page* @skb_frag_page(%struct.bio_vec* %1) #12, !dbg !17743
  %2 = load %struct.bio_vec*, %struct.bio_vec** %frag.addr, align 8, !dbg !17743
  %call1 = call i32 @skb_frag_off(%struct.bio_vec* %2) #12, !dbg !17743
  %conv = zext i32 %call1 to i64, !dbg !17743
  %3 = load i64, i64* %offset.addr, align 8, !dbg !17743
  %add = add i64 %conv, %3, !dbg !17743
  %4 = load i64, i64* %size.addr, align 8, !dbg !17743
  %5 = load i32, i32* %dir.addr, align 4, !dbg !17743
  %call2 = call i64 @dma_map_page_attrs(%struct.device* %0, %struct.page* %call, i64 %add, i64 %4, i32 %5, i64 0) #12, !dbg !17743
  ret i64 %call2, !dbg !17744
}

; Function Attrs: noredzone
declare dso_local zeroext i1 @is_vmalloc_addr(i8*) #1

; Function Attrs: noredzone
declare dso_local void @__warn_printk(i8*, ...) #1

; Function Attrs: noredzone
declare dso_local i8* @dev_driver_string(%struct.device*) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @dev_name(%struct.device* %dev) #2 !dbg !17745 {
entry:
  %retval = alloca i8*, align 8
  %dev.addr = alloca %struct.device*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !17748, metadata !DIExpression()), !dbg !17749
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !17750
  %init_name = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 3, !dbg !17752
  %1 = load i8*, i8** %init_name, align 8, !dbg !17752
  %tobool = icmp ne i8* %1, null, !dbg !17750
  br i1 %tobool, label %if.then, label %if.end, !dbg !17753

if.then:                                          ; preds = %entry
  %2 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !17754
  %init_name1 = getelementptr inbounds %struct.device, %struct.device* %2, i32 0, i32 3, !dbg !17755
  %3 = load i8*, i8** %init_name1, align 8, !dbg !17755
  store i8* %3, i8** %retval, align 8, !dbg !17756
  br label %return, !dbg !17756

if.end:                                           ; preds = %entry
  %4 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !17757
  %kobj = getelementptr inbounds %struct.device, %struct.device* %4, i32 0, i32 0, !dbg !17758
  %call = call i8* @kobject_name(%struct.kobject* %kobj) #12, !dbg !17759
  store i8* %call, i8** %retval, align 8, !dbg !17760
  br label %return, !dbg !17760

return:                                           ; preds = %if.end, %if.then
  %5 = load i8*, i8** %retval, align 8, !dbg !17761
  ret i8* %5, !dbg !17761
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @debug_dma_map_single(%struct.device* %dev, i8* %addr, i64 %len) #2 !dbg !17762 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %addr.addr = alloca i8*, align 8
  %len.addr = alloca i64, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !17765, metadata !DIExpression()), !dbg !17766
  store i8* %addr, i8** %addr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %addr.addr, metadata !17767, metadata !DIExpression()), !dbg !17768
  store i64 %len, i64* %len.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %len.addr, metadata !17769, metadata !DIExpression()), !dbg !17770
  ret void, !dbg !17771
}

; Function Attrs: noredzone
declare dso_local i64 @dma_map_page_attrs(%struct.device*, %struct.page*, i64, i64, i32, i64) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @__phys_addr_nodebug(i64 %x) #2 !dbg !17772 {
entry:
  %x.addr = alloca i64, align 8
  %y = alloca i64, align 8
  store i64 %x, i64* %x.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %x.addr, metadata !17776, metadata !DIExpression()), !dbg !17777
  call void @llvm.dbg.declare(metadata i64* %y, metadata !17778, metadata !DIExpression()), !dbg !17779
  %0 = load i64, i64* %x.addr, align 8, !dbg !17780
  %sub = sub i64 %0, -2147483648, !dbg !17781
  store i64 %sub, i64* %y, align 8, !dbg !17779
  %1 = load i64, i64* %y, align 8, !dbg !17782
  %2 = load i64, i64* %x.addr, align 8, !dbg !17783
  %3 = load i64, i64* %y, align 8, !dbg !17784
  %cmp = icmp ugt i64 %2, %3, !dbg !17785
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !17786

cond.true:                                        ; preds = %entry
  %4 = load i64, i64* @phys_base, align 8, !dbg !17787
  br label %cond.end, !dbg !17786

cond.false:                                       ; preds = %entry
  %5 = load i64, i64* @page_offset_base, align 8, !dbg !17788
  %sub1 = sub i64 -2147483648, %5, !dbg !17789
  br label %cond.end, !dbg !17786

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ %4, %cond.true ], [ %sub1, %cond.false ], !dbg !17786
  %add = add i64 %1, %cond, !dbg !17790
  store i64 %add, i64* %x.addr, align 8, !dbg !17791
  %6 = load i64, i64* %x.addr, align 8, !dbg !17792
  ret i64 %6, !dbg !17793
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @kobject_name(%struct.kobject* %kobj) #2 !dbg !17794 {
entry:
  %kobj.addr = alloca %struct.kobject*, align 8
  store %struct.kobject* %kobj, %struct.kobject** %kobj.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.kobject** %kobj.addr, metadata !17799, metadata !DIExpression()), !dbg !17800
  %0 = load %struct.kobject*, %struct.kobject** %kobj.addr, align 8, !dbg !17801
  %name = getelementptr inbounds %struct.kobject, %struct.kobject* %0, i32 0, i32 0, !dbg !17802
  %1 = load i8*, i8** %name, align 8, !dbg !17802
  ret i8* %1, !dbg !17803
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @debug_dma_mapping_error(%struct.device* %dev, i64 %dma_addr) #2 !dbg !17804 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %dma_addr.addr = alloca i64, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !17807, metadata !DIExpression()), !dbg !17808
  store i64 %dma_addr, i64* %dma_addr.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %dma_addr.addr, metadata !17809, metadata !DIExpression()), !dbg !17810
  ret void, !dbg !17811
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.page* @skb_frag_page(%struct.bio_vec* %frag) #2 !dbg !17812 {
entry:
  %frag.addr = alloca %struct.bio_vec*, align 8
  store %struct.bio_vec* %frag, %struct.bio_vec** %frag.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bio_vec** %frag.addr, metadata !17815, metadata !DIExpression()), !dbg !17816
  %0 = load %struct.bio_vec*, %struct.bio_vec** %frag.addr, align 8, !dbg !17817
  %bv_page = getelementptr inbounds %struct.bio_vec, %struct.bio_vec* %0, i32 0, i32 0, !dbg !17818
  %1 = load %struct.page*, %struct.page** %bv_page, align 8, !dbg !17818
  ret %struct.page* %1, !dbg !17819
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @skb_frag_off(%struct.bio_vec* %frag) #2 !dbg !17820 {
entry:
  %frag.addr = alloca %struct.bio_vec*, align 8
  store %struct.bio_vec* %frag, %struct.bio_vec** %frag.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bio_vec** %frag.addr, metadata !17821, metadata !DIExpression()), !dbg !17822
  %0 = load %struct.bio_vec*, %struct.bio_vec** %frag.addr, align 8, !dbg !17823
  %bv_offset = getelementptr inbounds %struct.bio_vec, %struct.bio_vec* %0, i32 0, i32 2, !dbg !17824
  %1 = load i32, i32* %bv_offset, align 4, !dbg !17824
  ret i32 %1, !dbg !17825
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @skb_clone_tx_timestamp(%struct.sk_buff* %skb) #2 !dbg !17826 {
entry:
  %skb.addr = alloca %struct.sk_buff*, align 8
  store %struct.sk_buff* %skb, %struct.sk_buff** %skb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.sk_buff** %skb.addr, metadata !17827, metadata !DIExpression()), !dbg !17828
  ret void, !dbg !17829
}

; Function Attrs: noredzone
declare dso_local void @skb_tstamp_tx(%struct.sk_buff*, %struct.skb_shared_hwtstamps*) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @macb_sethashtable(%struct.net_device* %dev) #2 !dbg !17830 {
entry:
  %dev.addr = alloca %struct.net_device*, align 8
  %ha = alloca %struct.netdev_hw_addr*, align 8
  %mc_filter = alloca [2 x i64], align 16
  %bitnr = alloca i32, align 4
  %bp = alloca %struct.macb*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.netdev_hw_addr*, align 8
  %__mptr7 = alloca i8*, align 8
  %tmp12 = alloca %struct.netdev_hw_addr*, align 8
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !17831, metadata !DIExpression()), !dbg !17832
  call void @llvm.dbg.declare(metadata %struct.netdev_hw_addr** %ha, metadata !17833, metadata !DIExpression()), !dbg !17834
  call void @llvm.dbg.declare(metadata [2 x i64]* %mc_filter, metadata !17835, metadata !DIExpression()), !dbg !17836
  call void @llvm.dbg.declare(metadata i32* %bitnr, metadata !17837, metadata !DIExpression()), !dbg !17838
  call void @llvm.dbg.declare(metadata %struct.macb** %bp, metadata !17839, metadata !DIExpression()), !dbg !17840
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !17841
  %call = call i8* @netdev_priv(%struct.net_device* %0) #12, !dbg !17842
  %1 = bitcast i8* %call to %struct.macb*, !dbg !17842
  store %struct.macb* %1, %struct.macb** %bp, align 8, !dbg !17840
  %arrayidx = getelementptr [2 x i64], [2 x i64]* %mc_filter, i64 0, i64 0, !dbg !17843
  store i64 0, i64* %arrayidx, align 16, !dbg !17844
  %arrayidx1 = getelementptr [2 x i64], [2 x i64]* %mc_filter, i64 0, i64 1, !dbg !17845
  store i64 0, i64* %arrayidx1, align 8, !dbg !17846
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !17847, metadata !DIExpression()), !dbg !17850
  %2 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !17850
  %mc = getelementptr inbounds %struct.net_device, %struct.net_device* %2, i32 0, i32 63, !dbg !17850
  %list = getelementptr inbounds %struct.netdev_hw_addr_list, %struct.netdev_hw_addr_list* %mc, i32 0, i32 0, !dbg !17850
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %list, i32 0, i32 0, !dbg !17850
  %3 = load %struct.list_head*, %struct.list_head** %next, align 8, !dbg !17850
  %4 = bitcast %struct.list_head* %3 to i8*, !dbg !17850
  store i8* %4, i8** %__mptr, align 8, !dbg !17850
  br label %do.body, !dbg !17850

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !17851

do.end:                                           ; preds = %do.body
  %5 = load i8*, i8** %__mptr, align 8, !dbg !17850
  %add.ptr = getelementptr i8, i8* %5, i64 0, !dbg !17850
  %6 = bitcast i8* %add.ptr to %struct.netdev_hw_addr*, !dbg !17850
  store %struct.netdev_hw_addr* %6, %struct.netdev_hw_addr** %tmp, align 8, !dbg !17851
  %7 = load %struct.netdev_hw_addr*, %struct.netdev_hw_addr** %tmp, align 8, !dbg !17850
  store %struct.netdev_hw_addr* %7, %struct.netdev_hw_addr** %ha, align 8, !dbg !17853
  br label %for.cond, !dbg !17853

for.cond:                                         ; preds = %do.end11, %do.end
  %8 = load %struct.netdev_hw_addr*, %struct.netdev_hw_addr** %ha, align 8, !dbg !17854
  %list2 = getelementptr inbounds %struct.netdev_hw_addr, %struct.netdev_hw_addr* %8, i32 0, i32 0, !dbg !17854
  %9 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !17854
  %mc3 = getelementptr inbounds %struct.net_device, %struct.net_device* %9, i32 0, i32 63, !dbg !17854
  %list4 = getelementptr inbounds %struct.netdev_hw_addr_list, %struct.netdev_hw_addr_list* %mc3, i32 0, i32 0, !dbg !17854
  %cmp = icmp eq %struct.list_head* %list2, %list4, !dbg !17854
  %lnot = xor i1 %cmp, true, !dbg !17854
  br i1 %lnot, label %for.body, label %for.end, !dbg !17853

for.body:                                         ; preds = %for.cond
  %10 = load %struct.netdev_hw_addr*, %struct.netdev_hw_addr** %ha, align 8, !dbg !17856
  %addr = getelementptr inbounds %struct.netdev_hw_addr, %struct.netdev_hw_addr* %10, i32 0, i32 1, !dbg !17858
  %arraydecay = getelementptr inbounds [32 x i8], [32 x i8]* %addr, i64 0, i64 0, !dbg !17856
  %call5 = call i32 @hash_get_index(i8* %arraydecay) #12, !dbg !17859
  store i32 %call5, i32* %bitnr, align 4, !dbg !17860
  %11 = load i32, i32* %bitnr, align 4, !dbg !17861
  %and = and i32 %11, 31, !dbg !17862
  %shl = shl i32 1, %and, !dbg !17863
  %conv = sext i32 %shl to i64, !dbg !17864
  %12 = load i32, i32* %bitnr, align 4, !dbg !17865
  %shr = lshr i32 %12, 5, !dbg !17866
  %idxprom = zext i32 %shr to i64, !dbg !17867
  %arrayidx6 = getelementptr [2 x i64], [2 x i64]* %mc_filter, i64 0, i64 %idxprom, !dbg !17867
  %13 = load i64, i64* %arrayidx6, align 8, !dbg !17868
  %or = or i64 %13, %conv, !dbg !17868
  store i64 %or, i64* %arrayidx6, align 8, !dbg !17868
  br label %for.inc, !dbg !17869

for.inc:                                          ; preds = %for.body
  call void @llvm.dbg.declare(metadata i8** %__mptr7, metadata !17870, metadata !DIExpression()), !dbg !17872
  %14 = load %struct.netdev_hw_addr*, %struct.netdev_hw_addr** %ha, align 8, !dbg !17872
  %list8 = getelementptr inbounds %struct.netdev_hw_addr, %struct.netdev_hw_addr* %14, i32 0, i32 0, !dbg !17872
  %next9 = getelementptr inbounds %struct.list_head, %struct.list_head* %list8, i32 0, i32 0, !dbg !17872
  %15 = load %struct.list_head*, %struct.list_head** %next9, align 8, !dbg !17872
  %16 = bitcast %struct.list_head* %15 to i8*, !dbg !17872
  store i8* %16, i8** %__mptr7, align 8, !dbg !17872
  br label %do.body10, !dbg !17872

do.body10:                                        ; preds = %for.inc
  br label %do.end11, !dbg !17873

do.end11:                                         ; preds = %do.body10
  %17 = load i8*, i8** %__mptr7, align 8, !dbg !17872
  %add.ptr13 = getelementptr i8, i8* %17, i64 0, !dbg !17872
  %18 = bitcast i8* %add.ptr13 to %struct.netdev_hw_addr*, !dbg !17872
  store %struct.netdev_hw_addr* %18, %struct.netdev_hw_addr** %tmp12, align 8, !dbg !17873
  %19 = load %struct.netdev_hw_addr*, %struct.netdev_hw_addr** %tmp12, align 8, !dbg !17872
  store %struct.netdev_hw_addr* %19, %struct.netdev_hw_addr** %ha, align 8, !dbg !17854
  br label %for.cond, !dbg !17854, !llvm.loop !17875

for.end:                                          ; preds = %for.cond
  %20 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !17877
  %call14 = call zeroext i1 @macb_is_gem(%struct.macb* %20) #12, !dbg !17877
  br i1 %call14, label %if.then, label %if.else, !dbg !17880

if.then:                                          ; preds = %for.end
  %21 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !17877
  %macb_reg_writel = getelementptr inbounds %struct.macb, %struct.macb* %21, i32 0, i32 3, !dbg !17877
  %22 = load void (%struct.macb*, i32, i32)*, void (%struct.macb*, i32, i32)** %macb_reg_writel, align 8, !dbg !17877
  %23 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !17877
  %arrayidx15 = getelementptr [2 x i64], [2 x i64]* %mc_filter, i64 0, i64 0, !dbg !17877
  %24 = load i64, i64* %arrayidx15, align 16, !dbg !17877
  %conv16 = trunc i64 %24 to i32, !dbg !17877
  call void %22(%struct.macb* %23, i32 128, i32 %conv16) #12, !dbg !17877
  br label %if.end, !dbg !17877

if.else:                                          ; preds = %for.end
  %25 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !17877
  %macb_reg_writel17 = getelementptr inbounds %struct.macb, %struct.macb* %25, i32 0, i32 3, !dbg !17877
  %26 = load void (%struct.macb*, i32, i32)*, void (%struct.macb*, i32, i32)** %macb_reg_writel17, align 8, !dbg !17877
  %27 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !17877
  %arrayidx18 = getelementptr [2 x i64], [2 x i64]* %mc_filter, i64 0, i64 0, !dbg !17877
  %28 = load i64, i64* %arrayidx18, align 16, !dbg !17877
  %conv19 = trunc i64 %28 to i32, !dbg !17877
  call void %26(%struct.macb* %27, i32 144, i32 %conv19) #12, !dbg !17877
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %29 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !17881
  %call20 = call zeroext i1 @macb_is_gem(%struct.macb* %29) #12, !dbg !17881
  br i1 %call20, label %if.then21, label %if.else25, !dbg !17884

if.then21:                                        ; preds = %if.end
  %30 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !17881
  %macb_reg_writel22 = getelementptr inbounds %struct.macb, %struct.macb* %30, i32 0, i32 3, !dbg !17881
  %31 = load void (%struct.macb*, i32, i32)*, void (%struct.macb*, i32, i32)** %macb_reg_writel22, align 8, !dbg !17881
  %32 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !17881
  %arrayidx23 = getelementptr [2 x i64], [2 x i64]* %mc_filter, i64 0, i64 1, !dbg !17881
  %33 = load i64, i64* %arrayidx23, align 8, !dbg !17881
  %conv24 = trunc i64 %33 to i32, !dbg !17881
  call void %31(%struct.macb* %32, i32 132, i32 %conv24) #12, !dbg !17881
  br label %if.end29, !dbg !17881

if.else25:                                        ; preds = %if.end
  %34 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !17881
  %macb_reg_writel26 = getelementptr inbounds %struct.macb, %struct.macb* %34, i32 0, i32 3, !dbg !17881
  %35 = load void (%struct.macb*, i32, i32)*, void (%struct.macb*, i32, i32)** %macb_reg_writel26, align 8, !dbg !17881
  %36 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !17881
  %arrayidx27 = getelementptr [2 x i64], [2 x i64]* %mc_filter, i64 0, i64 1, !dbg !17881
  %37 = load i64, i64* %arrayidx27, align 8, !dbg !17881
  %conv28 = trunc i64 %37 to i32, !dbg !17881
  call void %35(%struct.macb* %36, i32 148, i32 %conv28) #12, !dbg !17881
  br label %if.end29

if.end29:                                         ; preds = %if.else25, %if.then21
  ret void, !dbg !17885
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @hash_get_index(i8* %addr) #2 !dbg !17886 {
entry:
  %addr.addr = alloca i8*, align 8
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %bitval = alloca i32, align 4
  %hash_index = alloca i32, align 4
  store i8* %addr, i8** %addr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %addr.addr, metadata !17890, metadata !DIExpression()), !dbg !17891
  call void @llvm.dbg.declare(metadata i32* %i, metadata !17892, metadata !DIExpression()), !dbg !17893
  call void @llvm.dbg.declare(metadata i32* %j, metadata !17894, metadata !DIExpression()), !dbg !17895
  call void @llvm.dbg.declare(metadata i32* %bitval, metadata !17896, metadata !DIExpression()), !dbg !17897
  call void @llvm.dbg.declare(metadata i32* %hash_index, metadata !17898, metadata !DIExpression()), !dbg !17899
  store i32 0, i32* %hash_index, align 4, !dbg !17899
  store i32 0, i32* %j, align 4, !dbg !17900
  br label %for.cond, !dbg !17902

for.cond:                                         ; preds = %for.inc4, %entry
  %0 = load i32, i32* %j, align 4, !dbg !17903
  %cmp = icmp slt i32 %0, 6, !dbg !17905
  br i1 %cmp, label %for.body, label %for.end6, !dbg !17906

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %i, align 4, !dbg !17907
  store i32 0, i32* %bitval, align 4, !dbg !17910
  br label %for.cond1, !dbg !17911

for.cond1:                                        ; preds = %for.inc, %for.body
  %1 = load i32, i32* %i, align 4, !dbg !17912
  %cmp2 = icmp slt i32 %1, 8, !dbg !17914
  br i1 %cmp2, label %for.body3, label %for.end, !dbg !17915

for.body3:                                        ; preds = %for.cond1
  %2 = load i32, i32* %i, align 4, !dbg !17916
  %mul = mul i32 %2, 6, !dbg !17917
  %3 = load i32, i32* %j, align 4, !dbg !17918
  %add = add i32 %mul, %3, !dbg !17919
  %4 = load i8*, i8** %addr.addr, align 8, !dbg !17920
  %call = call i32 @hash_bit_value(i32 %add, i8* %4) #12, !dbg !17921
  %5 = load i32, i32* %bitval, align 4, !dbg !17922
  %xor = xor i32 %5, %call, !dbg !17922
  store i32 %xor, i32* %bitval, align 4, !dbg !17922
  br label %for.inc, !dbg !17923

for.inc:                                          ; preds = %for.body3
  %6 = load i32, i32* %i, align 4, !dbg !17924
  %inc = add i32 %6, 1, !dbg !17924
  store i32 %inc, i32* %i, align 4, !dbg !17924
  br label %for.cond1, !dbg !17925, !llvm.loop !17926

for.end:                                          ; preds = %for.cond1
  %7 = load i32, i32* %bitval, align 4, !dbg !17928
  %8 = load i32, i32* %j, align 4, !dbg !17929
  %shl = shl i32 %7, %8, !dbg !17930
  %9 = load i32, i32* %hash_index, align 4, !dbg !17931
  %or = or i32 %9, %shl, !dbg !17931
  store i32 %or, i32* %hash_index, align 4, !dbg !17931
  br label %for.inc4, !dbg !17932

for.inc4:                                         ; preds = %for.end
  %10 = load i32, i32* %j, align 4, !dbg !17933
  %inc5 = add i32 %10, 1, !dbg !17933
  store i32 %inc5, i32* %j, align 4, !dbg !17933
  br label %for.cond, !dbg !17934, !llvm.loop !17935

for.end6:                                         ; preds = %for.cond
  %11 = load i32, i32* %hash_index, align 4, !dbg !17937
  ret i32 %11, !dbg !17938
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @hash_bit_value(i32 %bitnr, i8* %addr) #2 !dbg !17939 {
entry:
  %retval = alloca i32, align 4
  %bitnr.addr = alloca i32, align 4
  %addr.addr = alloca i8*, align 8
  store i32 %bitnr, i32* %bitnr.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %bitnr.addr, metadata !17942, metadata !DIExpression()), !dbg !17943
  store i8* %addr, i8** %addr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %addr.addr, metadata !17944, metadata !DIExpression()), !dbg !17945
  %0 = load i8*, i8** %addr.addr, align 8, !dbg !17946
  %1 = load i32, i32* %bitnr.addr, align 4, !dbg !17948
  %div = sdiv i32 %1, 8, !dbg !17949
  %idxprom = sext i32 %div to i64, !dbg !17946
  %arrayidx = getelementptr i8, i8* %0, i64 %idxprom, !dbg !17946
  %2 = load i8, i8* %arrayidx, align 1, !dbg !17946
  %conv = zext i8 %2 to i32, !dbg !17946
  %3 = load i32, i32* %bitnr.addr, align 4, !dbg !17950
  %rem = srem i32 %3, 8, !dbg !17951
  %shl = shl i32 1, %rem, !dbg !17952
  %and = and i32 %conv, %shl, !dbg !17953
  %tobool = icmp ne i32 %and, 0, !dbg !17953
  br i1 %tobool, label %if.then, label %if.end, !dbg !17954

if.then:                                          ; preds = %entry
  store i32 1, i32* %retval, align 4, !dbg !17955
  br label %return, !dbg !17955

if.end:                                           ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !17956
  br label %return, !dbg !17956

return:                                           ; preds = %if.end, %if.then
  %4 = load i32, i32* %retval, align 4, !dbg !17957
  ret i32 %4, !dbg !17957
}

; Function Attrs: noredzone
declare dso_local i32 @phylink_mii_ioctl(%struct.phylink*, %struct.ifreq*, i32) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.net_device_stats* @gem_get_stats(%struct.macb* %bp) #2 !dbg !17958 {
entry:
  %bp.addr = alloca %struct.macb*, align 8
  %hwstat = alloca %struct.gem_stats*, align 8
  %nstat = alloca %struct.net_device_stats*, align 8
  store %struct.macb* %bp, %struct.macb** %bp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.macb** %bp.addr, metadata !17961, metadata !DIExpression()), !dbg !17962
  call void @llvm.dbg.declare(metadata %struct.gem_stats** %hwstat, metadata !17963, metadata !DIExpression()), !dbg !17965
  %0 = load %struct.macb*, %struct.macb** %bp.addr, align 8, !dbg !17966
  %hw_stats = getelementptr inbounds %struct.macb, %struct.macb* %0, i32 0, i32 18, !dbg !17967
  %gem = bitcast %union.anon.162* %hw_stats to %struct.gem_stats*, !dbg !17968
  store %struct.gem_stats* %gem, %struct.gem_stats** %hwstat, align 8, !dbg !17965
  call void @llvm.dbg.declare(metadata %struct.net_device_stats** %nstat, metadata !17969, metadata !DIExpression()), !dbg !17970
  %1 = load %struct.macb*, %struct.macb** %bp.addr, align 8, !dbg !17971
  %dev = getelementptr inbounds %struct.macb, %struct.macb* %1, i32 0, i32 17, !dbg !17972
  %2 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !17972
  %stats = getelementptr inbounds %struct.net_device, %struct.net_device* %2, i32 0, i32 24, !dbg !17973
  store %struct.net_device_stats* %stats, %struct.net_device_stats** %nstat, align 8, !dbg !17970
  %3 = load %struct.macb*, %struct.macb** %bp.addr, align 8, !dbg !17974
  call void @gem_update_stats(%struct.macb* %3) #12, !dbg !17975
  %4 = load %struct.gem_stats*, %struct.gem_stats** %hwstat, align 8, !dbg !17976
  %rx_frame_check_sequence_errors = getelementptr inbounds %struct.gem_stats, %struct.gem_stats* %4, i32 0, i32 36, !dbg !17977
  %5 = load i32, i32* %rx_frame_check_sequence_errors, align 4, !dbg !17977
  %6 = load %struct.gem_stats*, %struct.gem_stats** %hwstat, align 8, !dbg !17978
  %rx_alignment_errors = getelementptr inbounds %struct.gem_stats, %struct.gem_stats* %6, i32 0, i32 39, !dbg !17979
  %7 = load i32, i32* %rx_alignment_errors, align 4, !dbg !17979
  %add = add i32 %5, %7, !dbg !17980
  %8 = load %struct.gem_stats*, %struct.gem_stats** %hwstat, align 8, !dbg !17981
  %rx_resource_errors = getelementptr inbounds %struct.gem_stats, %struct.gem_stats* %8, i32 0, i32 40, !dbg !17982
  %9 = load i32, i32* %rx_resource_errors, align 4, !dbg !17982
  %add1 = add i32 %add, %9, !dbg !17983
  %10 = load %struct.gem_stats*, %struct.gem_stats** %hwstat, align 8, !dbg !17984
  %rx_overruns = getelementptr inbounds %struct.gem_stats, %struct.gem_stats* %10, i32 0, i32 41, !dbg !17985
  %11 = load i32, i32* %rx_overruns, align 4, !dbg !17985
  %add2 = add i32 %add1, %11, !dbg !17986
  %12 = load %struct.gem_stats*, %struct.gem_stats** %hwstat, align 8, !dbg !17987
  %rx_oversize_frames = getelementptr inbounds %struct.gem_stats, %struct.gem_stats* %12, i32 0, i32 34, !dbg !17988
  %13 = load i32, i32* %rx_oversize_frames, align 4, !dbg !17988
  %add3 = add i32 %add2, %13, !dbg !17989
  %14 = load %struct.gem_stats*, %struct.gem_stats** %hwstat, align 8, !dbg !17990
  %rx_jabbers = getelementptr inbounds %struct.gem_stats, %struct.gem_stats* %14, i32 0, i32 35, !dbg !17991
  %15 = load i32, i32* %rx_jabbers, align 4, !dbg !17991
  %add4 = add i32 %add3, %15, !dbg !17992
  %16 = load %struct.gem_stats*, %struct.gem_stats** %hwstat, align 8, !dbg !17993
  %rx_undersized_frames = getelementptr inbounds %struct.gem_stats, %struct.gem_stats* %16, i32 0, i32 33, !dbg !17994
  %17 = load i32, i32* %rx_undersized_frames, align 4, !dbg !17994
  %add5 = add i32 %add4, %17, !dbg !17995
  %18 = load %struct.gem_stats*, %struct.gem_stats** %hwstat, align 8, !dbg !17996
  %rx_length_field_frame_errors = getelementptr inbounds %struct.gem_stats, %struct.gem_stats* %18, i32 0, i32 37, !dbg !17997
  %19 = load i32, i32* %rx_length_field_frame_errors, align 4, !dbg !17997
  %add6 = add i32 %add5, %19, !dbg !17998
  %conv = zext i32 %add6 to i64, !dbg !17999
  %20 = load %struct.net_device_stats*, %struct.net_device_stats** %nstat, align 8, !dbg !18000
  %rx_errors = getelementptr inbounds %struct.net_device_stats, %struct.net_device_stats* %20, i32 0, i32 4, !dbg !18001
  store i64 %conv, i64* %rx_errors, align 8, !dbg !18002
  %21 = load %struct.gem_stats*, %struct.gem_stats** %hwstat, align 8, !dbg !18003
  %tx_late_collisions = getelementptr inbounds %struct.gem_stats, %struct.gem_stats* %21, i32 0, i32 17, !dbg !18004
  %22 = load i32, i32* %tx_late_collisions, align 4, !dbg !18004
  %23 = load %struct.gem_stats*, %struct.gem_stats** %hwstat, align 8, !dbg !18005
  %tx_excessive_collisions = getelementptr inbounds %struct.gem_stats, %struct.gem_stats* %23, i32 0, i32 16, !dbg !18006
  %24 = load i32, i32* %tx_excessive_collisions, align 4, !dbg !18006
  %add7 = add i32 %22, %24, !dbg !18007
  %25 = load %struct.gem_stats*, %struct.gem_stats** %hwstat, align 8, !dbg !18008
  %tx_underrun = getelementptr inbounds %struct.gem_stats, %struct.gem_stats* %25, i32 0, i32 13, !dbg !18009
  %26 = load i32, i32* %tx_underrun, align 4, !dbg !18009
  %add8 = add i32 %add7, %26, !dbg !18010
  %27 = load %struct.gem_stats*, %struct.gem_stats** %hwstat, align 8, !dbg !18011
  %tx_carrier_sense_errors = getelementptr inbounds %struct.gem_stats, %struct.gem_stats* %27, i32 0, i32 19, !dbg !18012
  %28 = load i32, i32* %tx_carrier_sense_errors, align 4, !dbg !18012
  %add9 = add i32 %add8, %28, !dbg !18013
  %conv10 = zext i32 %add9 to i64, !dbg !18014
  %29 = load %struct.net_device_stats*, %struct.net_device_stats** %nstat, align 8, !dbg !18015
  %tx_errors = getelementptr inbounds %struct.net_device_stats, %struct.net_device_stats* %29, i32 0, i32 5, !dbg !18016
  store i64 %conv10, i64* %tx_errors, align 8, !dbg !18017
  %30 = load %struct.gem_stats*, %struct.gem_stats** %hwstat, align 8, !dbg !18018
  %rx_multicast_frames = getelementptr inbounds %struct.gem_stats, %struct.gem_stats* %30, i32 0, i32 24, !dbg !18019
  %31 = load i32, i32* %rx_multicast_frames, align 4, !dbg !18019
  %conv11 = zext i32 %31 to i64, !dbg !18018
  %32 = load %struct.net_device_stats*, %struct.net_device_stats** %nstat, align 8, !dbg !18020
  %multicast = getelementptr inbounds %struct.net_device_stats, %struct.net_device_stats* %32, i32 0, i32 8, !dbg !18021
  store i64 %conv11, i64* %multicast, align 8, !dbg !18022
  %33 = load %struct.gem_stats*, %struct.gem_stats** %hwstat, align 8, !dbg !18023
  %tx_single_collision_frames = getelementptr inbounds %struct.gem_stats, %struct.gem_stats* %33, i32 0, i32 14, !dbg !18024
  %34 = load i32, i32* %tx_single_collision_frames, align 4, !dbg !18024
  %35 = load %struct.gem_stats*, %struct.gem_stats** %hwstat, align 8, !dbg !18025
  %tx_multiple_collision_frames = getelementptr inbounds %struct.gem_stats, %struct.gem_stats* %35, i32 0, i32 15, !dbg !18026
  %36 = load i32, i32* %tx_multiple_collision_frames, align 4, !dbg !18026
  %add12 = add i32 %34, %36, !dbg !18027
  %37 = load %struct.gem_stats*, %struct.gem_stats** %hwstat, align 8, !dbg !18028
  %tx_excessive_collisions13 = getelementptr inbounds %struct.gem_stats, %struct.gem_stats* %37, i32 0, i32 16, !dbg !18029
  %38 = load i32, i32* %tx_excessive_collisions13, align 4, !dbg !18029
  %add14 = add i32 %add12, %38, !dbg !18030
  %conv15 = zext i32 %add14 to i64, !dbg !18031
  %39 = load %struct.net_device_stats*, %struct.net_device_stats** %nstat, align 8, !dbg !18032
  %collisions = getelementptr inbounds %struct.net_device_stats, %struct.net_device_stats* %39, i32 0, i32 9, !dbg !18033
  store i64 %conv15, i64* %collisions, align 8, !dbg !18034
  %40 = load %struct.gem_stats*, %struct.gem_stats** %hwstat, align 8, !dbg !18035
  %rx_oversize_frames16 = getelementptr inbounds %struct.gem_stats, %struct.gem_stats* %40, i32 0, i32 34, !dbg !18036
  %41 = load i32, i32* %rx_oversize_frames16, align 4, !dbg !18036
  %42 = load %struct.gem_stats*, %struct.gem_stats** %hwstat, align 8, !dbg !18037
  %rx_jabbers17 = getelementptr inbounds %struct.gem_stats, %struct.gem_stats* %42, i32 0, i32 35, !dbg !18038
  %43 = load i32, i32* %rx_jabbers17, align 4, !dbg !18038
  %add18 = add i32 %41, %43, !dbg !18039
  %44 = load %struct.gem_stats*, %struct.gem_stats** %hwstat, align 8, !dbg !18040
  %rx_undersized_frames19 = getelementptr inbounds %struct.gem_stats, %struct.gem_stats* %44, i32 0, i32 33, !dbg !18041
  %45 = load i32, i32* %rx_undersized_frames19, align 4, !dbg !18041
  %add20 = add i32 %add18, %45, !dbg !18042
  %46 = load %struct.gem_stats*, %struct.gem_stats** %hwstat, align 8, !dbg !18043
  %rx_length_field_frame_errors21 = getelementptr inbounds %struct.gem_stats, %struct.gem_stats* %46, i32 0, i32 37, !dbg !18044
  %47 = load i32, i32* %rx_length_field_frame_errors21, align 4, !dbg !18044
  %add22 = add i32 %add20, %47, !dbg !18045
  %conv23 = zext i32 %add22 to i64, !dbg !18046
  %48 = load %struct.net_device_stats*, %struct.net_device_stats** %nstat, align 8, !dbg !18047
  %rx_length_errors = getelementptr inbounds %struct.net_device_stats, %struct.net_device_stats* %48, i32 0, i32 10, !dbg !18048
  store i64 %conv23, i64* %rx_length_errors, align 8, !dbg !18049
  %49 = load %struct.gem_stats*, %struct.gem_stats** %hwstat, align 8, !dbg !18050
  %rx_resource_errors24 = getelementptr inbounds %struct.gem_stats, %struct.gem_stats* %49, i32 0, i32 40, !dbg !18051
  %50 = load i32, i32* %rx_resource_errors24, align 4, !dbg !18051
  %conv25 = zext i32 %50 to i64, !dbg !18050
  %51 = load %struct.net_device_stats*, %struct.net_device_stats** %nstat, align 8, !dbg !18052
  %rx_over_errors = getelementptr inbounds %struct.net_device_stats, %struct.net_device_stats* %51, i32 0, i32 11, !dbg !18053
  store i64 %conv25, i64* %rx_over_errors, align 8, !dbg !18054
  %52 = load %struct.gem_stats*, %struct.gem_stats** %hwstat, align 8, !dbg !18055
  %rx_frame_check_sequence_errors26 = getelementptr inbounds %struct.gem_stats, %struct.gem_stats* %52, i32 0, i32 36, !dbg !18056
  %53 = load i32, i32* %rx_frame_check_sequence_errors26, align 4, !dbg !18056
  %conv27 = zext i32 %53 to i64, !dbg !18055
  %54 = load %struct.net_device_stats*, %struct.net_device_stats** %nstat, align 8, !dbg !18057
  %rx_crc_errors = getelementptr inbounds %struct.net_device_stats, %struct.net_device_stats* %54, i32 0, i32 12, !dbg !18058
  store i64 %conv27, i64* %rx_crc_errors, align 8, !dbg !18059
  %55 = load %struct.gem_stats*, %struct.gem_stats** %hwstat, align 8, !dbg !18060
  %rx_alignment_errors28 = getelementptr inbounds %struct.gem_stats, %struct.gem_stats* %55, i32 0, i32 39, !dbg !18061
  %56 = load i32, i32* %rx_alignment_errors28, align 4, !dbg !18061
  %conv29 = zext i32 %56 to i64, !dbg !18060
  %57 = load %struct.net_device_stats*, %struct.net_device_stats** %nstat, align 8, !dbg !18062
  %rx_frame_errors = getelementptr inbounds %struct.net_device_stats, %struct.net_device_stats* %57, i32 0, i32 13, !dbg !18063
  store i64 %conv29, i64* %rx_frame_errors, align 8, !dbg !18064
  %58 = load %struct.gem_stats*, %struct.gem_stats** %hwstat, align 8, !dbg !18065
  %rx_overruns30 = getelementptr inbounds %struct.gem_stats, %struct.gem_stats* %58, i32 0, i32 41, !dbg !18066
  %59 = load i32, i32* %rx_overruns30, align 4, !dbg !18066
  %conv31 = zext i32 %59 to i64, !dbg !18065
  %60 = load %struct.net_device_stats*, %struct.net_device_stats** %nstat, align 8, !dbg !18067
  %rx_fifo_errors = getelementptr inbounds %struct.net_device_stats, %struct.net_device_stats* %60, i32 0, i32 14, !dbg !18068
  store i64 %conv31, i64* %rx_fifo_errors, align 8, !dbg !18069
  %61 = load %struct.gem_stats*, %struct.gem_stats** %hwstat, align 8, !dbg !18070
  %tx_excessive_collisions32 = getelementptr inbounds %struct.gem_stats, %struct.gem_stats* %61, i32 0, i32 16, !dbg !18071
  %62 = load i32, i32* %tx_excessive_collisions32, align 4, !dbg !18071
  %conv33 = zext i32 %62 to i64, !dbg !18070
  %63 = load %struct.net_device_stats*, %struct.net_device_stats** %nstat, align 8, !dbg !18072
  %tx_aborted_errors = getelementptr inbounds %struct.net_device_stats, %struct.net_device_stats* %63, i32 0, i32 16, !dbg !18073
  store i64 %conv33, i64* %tx_aborted_errors, align 8, !dbg !18074
  %64 = load %struct.gem_stats*, %struct.gem_stats** %hwstat, align 8, !dbg !18075
  %tx_carrier_sense_errors34 = getelementptr inbounds %struct.gem_stats, %struct.gem_stats* %64, i32 0, i32 19, !dbg !18076
  %65 = load i32, i32* %tx_carrier_sense_errors34, align 4, !dbg !18076
  %conv35 = zext i32 %65 to i64, !dbg !18075
  %66 = load %struct.net_device_stats*, %struct.net_device_stats** %nstat, align 8, !dbg !18077
  %tx_carrier_errors = getelementptr inbounds %struct.net_device_stats, %struct.net_device_stats* %66, i32 0, i32 17, !dbg !18078
  store i64 %conv35, i64* %tx_carrier_errors, align 8, !dbg !18079
  %67 = load %struct.gem_stats*, %struct.gem_stats** %hwstat, align 8, !dbg !18080
  %tx_underrun36 = getelementptr inbounds %struct.gem_stats, %struct.gem_stats* %67, i32 0, i32 13, !dbg !18081
  %68 = load i32, i32* %tx_underrun36, align 4, !dbg !18081
  %conv37 = zext i32 %68 to i64, !dbg !18080
  %69 = load %struct.net_device_stats*, %struct.net_device_stats** %nstat, align 8, !dbg !18082
  %tx_fifo_errors = getelementptr inbounds %struct.net_device_stats, %struct.net_device_stats* %69, i32 0, i32 18, !dbg !18083
  store i64 %conv37, i64* %tx_fifo_errors, align 8, !dbg !18084
  %70 = load %struct.net_device_stats*, %struct.net_device_stats** %nstat, align 8, !dbg !18085
  ret %struct.net_device_stats* %70, !dbg !18086
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @macb_update_stats(%struct.macb* %bp) #2 !dbg !18087 {
entry:
  %bp.addr = alloca %struct.macb*, align 8
  %p = alloca i32*, align 8
  %end = alloca i32*, align 8
  %offset = alloca i32, align 4
  %__ret_warn_on = alloca i32, align 4
  %tmp = alloca i64, align 8
  store %struct.macb* %bp, %struct.macb** %bp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.macb** %bp.addr, metadata !18088, metadata !DIExpression()), !dbg !18089
  call void @llvm.dbg.declare(metadata i32** %p, metadata !18090, metadata !DIExpression()), !dbg !18091
  %0 = load %struct.macb*, %struct.macb** %bp.addr, align 8, !dbg !18092
  %hw_stats = getelementptr inbounds %struct.macb, %struct.macb* %0, i32 0, i32 18, !dbg !18093
  %macb = bitcast %union.anon.162* %hw_stats to %struct.macb_stats*, !dbg !18094
  %rx_pause_frames = getelementptr inbounds %struct.macb_stats, %struct.macb_stats* %macb, i32 0, i32 0, !dbg !18095
  store i32* %rx_pause_frames, i32** %p, align 8, !dbg !18091
  call void @llvm.dbg.declare(metadata i32** %end, metadata !18096, metadata !DIExpression()), !dbg !18097
  %1 = load %struct.macb*, %struct.macb** %bp.addr, align 8, !dbg !18098
  %hw_stats1 = getelementptr inbounds %struct.macb, %struct.macb* %1, i32 0, i32 18, !dbg !18099
  %macb2 = bitcast %union.anon.162* %hw_stats1 to %struct.macb_stats*, !dbg !18100
  %tx_pause_frames = getelementptr inbounds %struct.macb_stats, %struct.macb_stats* %macb2, i32 0, i32 20, !dbg !18101
  %add.ptr = getelementptr i32, i32* %tx_pause_frames, i64 1, !dbg !18102
  store i32* %add.ptr, i32** %end, align 8, !dbg !18097
  call void @llvm.dbg.declare(metadata i32* %offset, metadata !18103, metadata !DIExpression()), !dbg !18104
  store i32 60, i32* %offset, align 4, !dbg !18104
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on, metadata !18105, metadata !DIExpression()), !dbg !18107
  %2 = load i32*, i32** %end, align 8, !dbg !18107
  %3 = load i32*, i32** %p, align 8, !dbg !18107
  %sub.ptr.lhs.cast = ptrtoint i32* %2 to i64, !dbg !18107
  %sub.ptr.rhs.cast = ptrtoint i32* %3 to i64, !dbg !18107
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !18107
  %sub.ptr.div = sdiv exact i64 %sub.ptr.sub, 4, !dbg !18107
  %sub = sub i64 %sub.ptr.div, 1, !dbg !18107
  %cmp = icmp ne i64 %sub, 20, !dbg !18107
  %lnot = xor i1 %cmp, true, !dbg !18107
  %lnot3 = xor i1 %lnot, true, !dbg !18107
  %lnot.ext = zext i1 %lnot3 to i32, !dbg !18107
  store i32 %lnot.ext, i32* %__ret_warn_on, align 4, !dbg !18107
  %4 = load i32, i32* %__ret_warn_on, align 4, !dbg !18108
  %tobool = icmp ne i32 %4, 0, !dbg !18108
  %lnot4 = xor i1 %tobool, true, !dbg !18108
  %lnot6 = xor i1 %lnot4, true, !dbg !18108
  %lnot.ext7 = zext i1 %lnot6 to i32, !dbg !18108
  %conv = sext i32 %lnot.ext7 to i64, !dbg !18108
  %tobool8 = icmp ne i64 %conv, 0, !dbg !18108
  br i1 %tobool8, label %if.then, label %if.end, !dbg !18107

if.then:                                          ; preds = %entry
  br label %do.body, !dbg !18108

do.body:                                          ; preds = %if.then
  br label %do.body9, !dbg !18110

do.body9:                                         ; preds = %do.body
  br label %do.end, !dbg !18112

do.end:                                           ; preds = %do.body9
  br label %do.body10, !dbg !18110

do.body10:                                        ; preds = %do.end
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.33, i64 0, i64 0), i32 813, i32 2305, i64 12) #8, !dbg !18114, !srcloc !18116
  br label %do.end11, !dbg !18114

do.end11:                                         ; preds = %do.body10
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 526) #8, !dbg !18117, !srcloc !18119
  br label %do.body12, !dbg !18110

do.body12:                                        ; preds = %do.end11
  br label %do.end13, !dbg !18120

do.end13:                                         ; preds = %do.body12
  br label %do.end14, !dbg !18110

do.end14:                                         ; preds = %do.end13
  br label %if.end, !dbg !18110

if.end:                                           ; preds = %do.end14, %entry
  %5 = load i32, i32* %__ret_warn_on, align 4, !dbg !18107
  %tobool15 = icmp ne i32 %5, 0, !dbg !18107
  %lnot16 = xor i1 %tobool15, true, !dbg !18107
  %lnot18 = xor i1 %lnot16, true, !dbg !18107
  %lnot.ext19 = zext i1 %lnot18 to i32, !dbg !18107
  %conv20 = sext i32 %lnot.ext19 to i64, !dbg !18107
  store i64 %conv20, i64* %tmp, align 8, !dbg !18108
  %6 = load i64, i64* %tmp, align 8, !dbg !18107
  br label %for.cond, !dbg !18122

for.cond:                                         ; preds = %for.inc, %if.end
  %7 = load i32*, i32** %p, align 8, !dbg !18123
  %8 = load i32*, i32** %end, align 8, !dbg !18126
  %cmp21 = icmp ult i32* %7, %8, !dbg !18127
  br i1 %cmp21, label %for.body, label %for.end, !dbg !18128

for.body:                                         ; preds = %for.cond
  %9 = load %struct.macb*, %struct.macb** %bp.addr, align 8, !dbg !18129
  %macb_reg_readl = getelementptr inbounds %struct.macb, %struct.macb* %9, i32 0, i32 2, !dbg !18130
  %10 = load i32 (%struct.macb*, i32)*, i32 (%struct.macb*, i32)** %macb_reg_readl, align 8, !dbg !18130
  %11 = load %struct.macb*, %struct.macb** %bp.addr, align 8, !dbg !18131
  %12 = load i32, i32* %offset, align 4, !dbg !18132
  %call = call i32 %10(%struct.macb* %11, i32 %12) #12, !dbg !18129
  %13 = load i32*, i32** %p, align 8, !dbg !18133
  %14 = load i32, i32* %13, align 4, !dbg !18134
  %add = add i32 %14, %call, !dbg !18134
  store i32 %add, i32* %13, align 4, !dbg !18134
  br label %for.inc, !dbg !18135

for.inc:                                          ; preds = %for.body
  %15 = load i32*, i32** %p, align 8, !dbg !18136
  %incdec.ptr = getelementptr i32, i32* %15, i32 1, !dbg !18136
  store i32* %incdec.ptr, i32** %p, align 8, !dbg !18136
  %16 = load i32, i32* %offset, align 4, !dbg !18137
  %add23 = add i32 %16, 4, !dbg !18137
  store i32 %add23, i32* %offset, align 4, !dbg !18137
  br label %for.cond, !dbg !18138, !llvm.loop !18139

for.end:                                          ; preds = %for.cond
  ret void, !dbg !18141
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @gem_update_stats(%struct.macb* %bp) #2 !dbg !18142 {
entry:
  %bp.addr = alloca %struct.macb*, align 8
  %queue = alloca %struct.macb_queue*, align 8
  %i = alloca i32, align 4
  %q = alloca i32, align 4
  %idx = alloca i32, align 4
  %stat = alloca i64*, align 8
  %p = alloca i32*, align 8
  %offset = alloca i32, align 4
  %val = alloca i64, align 8
  store %struct.macb* %bp, %struct.macb** %bp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.macb** %bp.addr, metadata !18143, metadata !DIExpression()), !dbg !18144
  call void @llvm.dbg.declare(metadata %struct.macb_queue** %queue, metadata !18145, metadata !DIExpression()), !dbg !18146
  call void @llvm.dbg.declare(metadata i32* %i, metadata !18147, metadata !DIExpression()), !dbg !18148
  call void @llvm.dbg.declare(metadata i32* %q, metadata !18149, metadata !DIExpression()), !dbg !18150
  call void @llvm.dbg.declare(metadata i32* %idx, metadata !18151, metadata !DIExpression()), !dbg !18152
  call void @llvm.dbg.declare(metadata i64** %stat, metadata !18153, metadata !DIExpression()), !dbg !18154
  call void @llvm.dbg.declare(metadata i32** %p, metadata !18155, metadata !DIExpression()), !dbg !18156
  %0 = load %struct.macb*, %struct.macb** %bp.addr, align 8, !dbg !18157
  %hw_stats = getelementptr inbounds %struct.macb, %struct.macb* %0, i32 0, i32 18, !dbg !18158
  %gem = bitcast %union.anon.162* %hw_stats to %struct.gem_stats*, !dbg !18159
  %tx_octets_31_0 = getelementptr inbounds %struct.gem_stats, %struct.gem_stats* %gem, i32 0, i32 0, !dbg !18160
  store i32* %tx_octets_31_0, i32** %p, align 8, !dbg !18156
  store i32 0, i32* %i, align 4, !dbg !18161
  br label %for.cond, !dbg !18163

for.cond:                                         ; preds = %for.inc, %entry
  %1 = load i32, i32* %i, align 4, !dbg !18164
  %conv = zext i32 %1 to i64, !dbg !18164
  %cmp = icmp ult i64 %conv, 43, !dbg !18166
  br i1 %cmp, label %for.body, label %for.end, !dbg !18167

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i32* %offset, metadata !18168, metadata !DIExpression()), !dbg !18170
  %2 = load i32, i32* %i, align 4, !dbg !18171
  %idxprom = zext i32 %2 to i64, !dbg !18172
  %arrayidx = getelementptr [43 x %struct.gem_statistic], [43 x %struct.gem_statistic]* @gem_statistics, i64 0, i64 %idxprom, !dbg !18172
  %offset2 = getelementptr inbounds %struct.gem_statistic, %struct.gem_statistic* %arrayidx, i32 0, i32 1, !dbg !18173
  %3 = load i32, i32* %offset2, align 8, !dbg !18173
  store i32 %3, i32* %offset, align 4, !dbg !18170
  call void @llvm.dbg.declare(metadata i64* %val, metadata !18174, metadata !DIExpression()), !dbg !18175
  %4 = load %struct.macb*, %struct.macb** %bp.addr, align 8, !dbg !18176
  %macb_reg_readl = getelementptr inbounds %struct.macb, %struct.macb* %4, i32 0, i32 2, !dbg !18177
  %5 = load i32 (%struct.macb*, i32)*, i32 (%struct.macb*, i32)** %macb_reg_readl, align 8, !dbg !18177
  %6 = load %struct.macb*, %struct.macb** %bp.addr, align 8, !dbg !18178
  %7 = load i32, i32* %offset, align 4, !dbg !18179
  %call = call i32 %5(%struct.macb* %6, i32 %7) #12, !dbg !18176
  %conv3 = zext i32 %call to i64, !dbg !18176
  store i64 %conv3, i64* %val, align 8, !dbg !18175
  %8 = load i64, i64* %val, align 8, !dbg !18180
  %9 = load %struct.macb*, %struct.macb** %bp.addr, align 8, !dbg !18181
  %ethtool_stats = getelementptr inbounds %struct.macb, %struct.macb* %9, i32 0, i32 30, !dbg !18182
  %10 = load i32, i32* %i, align 4, !dbg !18183
  %idxprom4 = zext i32 %10 to i64, !dbg !18181
  %arrayidx5 = getelementptr [91 x i64], [91 x i64]* %ethtool_stats, i64 0, i64 %idxprom4, !dbg !18181
  %11 = load i64, i64* %arrayidx5, align 8, !dbg !18184
  %add = add i64 %11, %8, !dbg !18184
  store i64 %add, i64* %arrayidx5, align 8, !dbg !18184
  %12 = load i64, i64* %val, align 8, !dbg !18185
  %13 = load i32*, i32** %p, align 8, !dbg !18186
  %14 = load i32, i32* %13, align 4, !dbg !18187
  %conv6 = zext i32 %14 to i64, !dbg !18187
  %add7 = add i64 %conv6, %12, !dbg !18187
  %conv8 = trunc i64 %add7 to i32, !dbg !18187
  store i32 %conv8, i32* %13, align 4, !dbg !18187
  %15 = load i32, i32* %offset, align 4, !dbg !18188
  %cmp9 = icmp eq i32 %15, 256, !dbg !18190
  br i1 %cmp9, label %if.then, label %lor.lhs.false, !dbg !18191

lor.lhs.false:                                    ; preds = %for.body
  %16 = load i32, i32* %offset, align 4, !dbg !18192
  %cmp11 = icmp eq i32 %16, 336, !dbg !18193
  br i1 %cmp11, label %if.then, label %if.end, !dbg !18194

if.then:                                          ; preds = %lor.lhs.false, %for.body
  %17 = load %struct.macb*, %struct.macb** %bp.addr, align 8, !dbg !18195
  %macb_reg_readl13 = getelementptr inbounds %struct.macb, %struct.macb* %17, i32 0, i32 2, !dbg !18197
  %18 = load i32 (%struct.macb*, i32)*, i32 (%struct.macb*, i32)** %macb_reg_readl13, align 8, !dbg !18197
  %19 = load %struct.macb*, %struct.macb** %bp.addr, align 8, !dbg !18198
  %20 = load i32, i32* %offset, align 4, !dbg !18199
  %add14 = add i32 %20, 4, !dbg !18200
  %call15 = call i32 %18(%struct.macb* %19, i32 %add14) #12, !dbg !18195
  %conv16 = zext i32 %call15 to i64, !dbg !18195
  store i64 %conv16, i64* %val, align 8, !dbg !18201
  %21 = load i64, i64* %val, align 8, !dbg !18202
  %shl = shl i64 %21, 32, !dbg !18203
  %22 = load %struct.macb*, %struct.macb** %bp.addr, align 8, !dbg !18204
  %ethtool_stats17 = getelementptr inbounds %struct.macb, %struct.macb* %22, i32 0, i32 30, !dbg !18205
  %23 = load i32, i32* %i, align 4, !dbg !18206
  %idxprom18 = zext i32 %23 to i64, !dbg !18204
  %arrayidx19 = getelementptr [91 x i64], [91 x i64]* %ethtool_stats17, i64 0, i64 %idxprom18, !dbg !18204
  %24 = load i64, i64* %arrayidx19, align 8, !dbg !18207
  %add20 = add i64 %24, %shl, !dbg !18207
  store i64 %add20, i64* %arrayidx19, align 8, !dbg !18207
  %25 = load i64, i64* %val, align 8, !dbg !18208
  %26 = load i32*, i32** %p, align 8, !dbg !18209
  %incdec.ptr = getelementptr i32, i32* %26, i32 1, !dbg !18209
  store i32* %incdec.ptr, i32** %p, align 8, !dbg !18209
  %27 = load i32, i32* %incdec.ptr, align 4, !dbg !18210
  %conv21 = zext i32 %27 to i64, !dbg !18210
  %add22 = add i64 %conv21, %25, !dbg !18210
  %conv23 = trunc i64 %add22 to i32, !dbg !18210
  store i32 %conv23, i32* %incdec.ptr, align 4, !dbg !18210
  br label %if.end, !dbg !18211

if.end:                                           ; preds = %if.then, %lor.lhs.false
  br label %for.inc, !dbg !18212

for.inc:                                          ; preds = %if.end
  %28 = load i32, i32* %i, align 4, !dbg !18213
  %inc = add i32 %28, 1, !dbg !18213
  store i32 %inc, i32* %i, align 4, !dbg !18213
  %29 = load i32*, i32** %p, align 8, !dbg !18214
  %incdec.ptr24 = getelementptr i32, i32* %29, i32 1, !dbg !18214
  store i32* %incdec.ptr24, i32** %p, align 8, !dbg !18214
  br label %for.cond, !dbg !18215, !llvm.loop !18216

for.end:                                          ; preds = %for.cond
  store i32 43, i32* %idx, align 4, !dbg !18218
  store i32 0, i32* %q, align 4, !dbg !18219
  %30 = load %struct.macb*, %struct.macb** %bp.addr, align 8, !dbg !18221
  %queues = getelementptr inbounds %struct.macb, %struct.macb* %30, i32 0, i32 9, !dbg !18222
  %arraydecay = getelementptr inbounds [8 x %struct.macb_queue], [8 x %struct.macb_queue]* %queues, i64 0, i64 0, !dbg !18221
  store %struct.macb_queue* %arraydecay, %struct.macb_queue** %queue, align 8, !dbg !18223
  br label %for.cond25, !dbg !18224

for.cond25:                                       ; preds = %for.inc42, %for.end
  %31 = load i32, i32* %q, align 4, !dbg !18225
  %32 = load %struct.macb*, %struct.macb** %bp.addr, align 8, !dbg !18227
  %num_queues = getelementptr inbounds %struct.macb, %struct.macb* %32, i32 0, i32 7, !dbg !18228
  %33 = load i32, i32* %num_queues, align 8, !dbg !18228
  %cmp26 = icmp ult i32 %31, %33, !dbg !18229
  br i1 %cmp26, label %for.body28, label %for.end45, !dbg !18230

for.body28:                                       ; preds = %for.cond25
  store i32 0, i32* %i, align 4, !dbg !18231
  %34 = load %struct.macb_queue*, %struct.macb_queue** %queue, align 8, !dbg !18233
  %stats = getelementptr inbounds %struct.macb_queue, %struct.macb_queue* %34, i32 0, i32 25, !dbg !18234
  %35 = getelementptr inbounds %struct.queue_stats, %struct.queue_stats* %stats, i32 0, i32 0, !dbg !18235
  %first = bitcast %union.anon.161* %35 to i64*, !dbg !18235
  store i64* %first, i64** %stat, align 8, !dbg !18236
  br label %for.cond29, !dbg !18237

for.cond29:                                       ; preds = %for.inc38, %for.body28
  %36 = load i32, i32* %i, align 4, !dbg !18238
  %conv30 = zext i32 %36 to i64, !dbg !18238
  %cmp31 = icmp ult i64 %conv30, 6, !dbg !18240
  br i1 %cmp31, label %for.body33, label %for.end41, !dbg !18241

for.body33:                                       ; preds = %for.cond29
  %37 = load i64*, i64** %stat, align 8, !dbg !18242
  %38 = load i64, i64* %37, align 8, !dbg !18243
  %39 = load %struct.macb*, %struct.macb** %bp.addr, align 8, !dbg !18244
  %ethtool_stats34 = getelementptr inbounds %struct.macb, %struct.macb* %39, i32 0, i32 30, !dbg !18245
  %40 = load i32, i32* %idx, align 4, !dbg !18246
  %inc35 = add i32 %40, 1, !dbg !18246
  store i32 %inc35, i32* %idx, align 4, !dbg !18246
  %idxprom36 = zext i32 %40 to i64, !dbg !18244
  %arrayidx37 = getelementptr [91 x i64], [91 x i64]* %ethtool_stats34, i64 0, i64 %idxprom36, !dbg !18244
  store i64 %38, i64* %arrayidx37, align 8, !dbg !18247
  br label %for.inc38, !dbg !18244

for.inc38:                                        ; preds = %for.body33
  %41 = load i32, i32* %i, align 4, !dbg !18248
  %inc39 = add i32 %41, 1, !dbg !18248
  store i32 %inc39, i32* %i, align 4, !dbg !18248
  %42 = load i64*, i64** %stat, align 8, !dbg !18249
  %incdec.ptr40 = getelementptr i64, i64* %42, i32 1, !dbg !18249
  store i64* %incdec.ptr40, i64** %stat, align 8, !dbg !18249
  br label %for.cond29, !dbg !18250, !llvm.loop !18251

for.end41:                                        ; preds = %for.cond29
  br label %for.inc42, !dbg !18252

for.inc42:                                        ; preds = %for.end41
  %43 = load i32, i32* %q, align 4, !dbg !18253
  %inc43 = add i32 %43, 1, !dbg !18253
  store i32 %inc43, i32* %q, align 4, !dbg !18253
  %44 = load %struct.macb_queue*, %struct.macb_queue** %queue, align 8, !dbg !18254
  %incdec.ptr44 = getelementptr %struct.macb_queue, %struct.macb_queue* %44, i32 1, !dbg !18254
  store %struct.macb_queue* %incdec.ptr44, %struct.macb_queue** %queue, align 8, !dbg !18254
  br label %for.cond25, !dbg !18255, !llvm.loop !18256

for.end45:                                        ; preds = %for.cond25
  ret void, !dbg !18258
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @macb_set_txcsum_feature(%struct.macb* %bp, i64 %features) #2 !dbg !18259 {
entry:
  %bp.addr = alloca %struct.macb*, align 8
  %features.addr = alloca i64, align 8
  %val = alloca i32, align 4
  store %struct.macb* %bp, %struct.macb** %bp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.macb** %bp.addr, metadata !18262, metadata !DIExpression()), !dbg !18263
  store i64 %features, i64* %features.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %features.addr, metadata !18264, metadata !DIExpression()), !dbg !18265
  call void @llvm.dbg.declare(metadata i32* %val, metadata !18266, metadata !DIExpression()), !dbg !18267
  %0 = load %struct.macb*, %struct.macb** %bp.addr, align 8, !dbg !18268
  %call = call zeroext i1 @macb_is_gem(%struct.macb* %0) #12, !dbg !18270
  br i1 %call, label %if.end, label %if.then, !dbg !18271

if.then:                                          ; preds = %entry
  br label %return, !dbg !18272

if.end:                                           ; preds = %entry
  %1 = load %struct.macb*, %struct.macb** %bp.addr, align 8, !dbg !18273
  %macb_reg_readl = getelementptr inbounds %struct.macb, %struct.macb* %1, i32 0, i32 2, !dbg !18273
  %2 = load i32 (%struct.macb*, i32)*, i32 (%struct.macb*, i32)** %macb_reg_readl, align 8, !dbg !18273
  %3 = load %struct.macb*, %struct.macb** %bp.addr, align 8, !dbg !18273
  %call1 = call i32 %2(%struct.macb* %3, i32 16) #12, !dbg !18273
  store i32 %call1, i32* %val, align 4, !dbg !18274
  %4 = load i64, i64* %features.addr, align 8, !dbg !18275
  %and = and i64 %4, 8, !dbg !18277
  %tobool = icmp ne i64 %and, 0, !dbg !18277
  br i1 %tobool, label %if.then2, label %if.else, !dbg !18278

if.then2:                                         ; preds = %if.end
  %5 = load i32, i32* %val, align 4, !dbg !18279
  %or = or i32 %5, 2048, !dbg !18279
  store i32 %or, i32* %val, align 4, !dbg !18279
  br label %if.end4, !dbg !18280

if.else:                                          ; preds = %if.end
  %6 = load i32, i32* %val, align 4, !dbg !18281
  %and3 = and i32 %6, -2049, !dbg !18281
  store i32 %and3, i32* %val, align 4, !dbg !18281
  br label %if.end4

if.end4:                                          ; preds = %if.else, %if.then2
  %7 = load %struct.macb*, %struct.macb** %bp.addr, align 8, !dbg !18282
  %macb_reg_writel = getelementptr inbounds %struct.macb, %struct.macb* %7, i32 0, i32 3, !dbg !18282
  %8 = load void (%struct.macb*, i32, i32)*, void (%struct.macb*, i32, i32)** %macb_reg_writel, align 8, !dbg !18282
  %9 = load %struct.macb*, %struct.macb** %bp.addr, align 8, !dbg !18282
  %10 = load i32, i32* %val, align 4, !dbg !18282
  call void %8(%struct.macb* %9, i32 16, i32 %10) #12, !dbg !18282
  br label %return, !dbg !18283

return:                                           ; preds = %if.end4, %if.then
  ret void, !dbg !18283
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @macb_set_rxcsum_feature(%struct.macb* %bp, i64 %features) #2 !dbg !18284 {
entry:
  %bp.addr = alloca %struct.macb*, align 8
  %features.addr = alloca i64, align 8
  %netdev = alloca %struct.net_device*, align 8
  %val = alloca i32, align 4
  store %struct.macb* %bp, %struct.macb** %bp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.macb** %bp.addr, metadata !18285, metadata !DIExpression()), !dbg !18286
  store i64 %features, i64* %features.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %features.addr, metadata !18287, metadata !DIExpression()), !dbg !18288
  call void @llvm.dbg.declare(metadata %struct.net_device** %netdev, metadata !18289, metadata !DIExpression()), !dbg !18290
  %0 = load %struct.macb*, %struct.macb** %bp.addr, align 8, !dbg !18291
  %dev = getelementptr inbounds %struct.macb, %struct.macb* %0, i32 0, i32 17, !dbg !18292
  %1 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !18292
  store %struct.net_device* %1, %struct.net_device** %netdev, align 8, !dbg !18290
  call void @llvm.dbg.declare(metadata i32* %val, metadata !18293, metadata !DIExpression()), !dbg !18294
  %2 = load %struct.macb*, %struct.macb** %bp.addr, align 8, !dbg !18295
  %call = call zeroext i1 @macb_is_gem(%struct.macb* %2) #12, !dbg !18297
  br i1 %call, label %if.end, label %if.then, !dbg !18298

if.then:                                          ; preds = %entry
  br label %return, !dbg !18299

if.end:                                           ; preds = %entry
  %3 = load %struct.macb*, %struct.macb** %bp.addr, align 8, !dbg !18300
  %macb_reg_readl = getelementptr inbounds %struct.macb, %struct.macb* %3, i32 0, i32 2, !dbg !18300
  %4 = load i32 (%struct.macb*, i32)*, i32 (%struct.macb*, i32)** %macb_reg_readl, align 8, !dbg !18300
  %5 = load %struct.macb*, %struct.macb** %bp.addr, align 8, !dbg !18300
  %call1 = call i32 %4(%struct.macb* %5, i32 4) #12, !dbg !18300
  store i32 %call1, i32* %val, align 4, !dbg !18301
  %6 = load i64, i64* %features.addr, align 8, !dbg !18302
  %and = and i64 %6, 1099511627776, !dbg !18304
  %tobool = icmp ne i64 %and, 0, !dbg !18304
  br i1 %tobool, label %land.lhs.true, label %if.else, !dbg !18305

land.lhs.true:                                    ; preds = %if.end
  %7 = load %struct.net_device*, %struct.net_device** %netdev, align 8, !dbg !18306
  %flags = getelementptr inbounds %struct.net_device, %struct.net_device* %7, i32 0, i32 36, !dbg !18307
  %8 = load i32, i32* %flags, align 8, !dbg !18307
  %and2 = and i32 %8, 256, !dbg !18308
  %tobool3 = icmp ne i32 %and2, 0, !dbg !18308
  br i1 %tobool3, label %if.else, label %if.then4, !dbg !18309

if.then4:                                         ; preds = %land.lhs.true
  %9 = load i32, i32* %val, align 4, !dbg !18310
  %or = or i32 %9, 16777216, !dbg !18310
  store i32 %or, i32* %val, align 4, !dbg !18310
  br label %if.end6, !dbg !18311

if.else:                                          ; preds = %land.lhs.true, %if.end
  %10 = load i32, i32* %val, align 4, !dbg !18312
  %and5 = and i32 %10, -16777217, !dbg !18312
  store i32 %and5, i32* %val, align 4, !dbg !18312
  br label %if.end6

if.end6:                                          ; preds = %if.else, %if.then4
  %11 = load %struct.macb*, %struct.macb** %bp.addr, align 8, !dbg !18313
  %macb_reg_writel = getelementptr inbounds %struct.macb, %struct.macb* %11, i32 0, i32 3, !dbg !18313
  %12 = load void (%struct.macb*, i32, i32)*, void (%struct.macb*, i32, i32)** %macb_reg_writel, align 8, !dbg !18313
  %13 = load %struct.macb*, %struct.macb** %bp.addr, align 8, !dbg !18313
  %14 = load i32, i32* %val, align 4, !dbg !18313
  call void %12(%struct.macb* %13, i32 4, i32 %14) #12, !dbg !18313
  br label %return, !dbg !18314

return:                                           ; preds = %if.end6, %if.then
  ret void, !dbg !18314
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @macb_set_rxflow_feature(%struct.macb* %bp, i64 %features) #2 !dbg !18315 {
entry:
  %bp.addr = alloca %struct.macb*, align 8
  %features.addr = alloca i64, align 8
  store %struct.macb* %bp, %struct.macb** %bp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.macb** %bp.addr, metadata !18316, metadata !DIExpression()), !dbg !18317
  store i64 %features, i64* %features.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %features.addr, metadata !18318, metadata !DIExpression()), !dbg !18319
  %0 = load %struct.macb*, %struct.macb** %bp.addr, align 8, !dbg !18320
  %call = call zeroext i1 @macb_is_gem(%struct.macb* %0) #12, !dbg !18322
  br i1 %call, label %if.end, label %if.then, !dbg !18323

if.then:                                          ; preds = %entry
  br label %return, !dbg !18324

if.end:                                           ; preds = %entry
  %1 = load %struct.macb*, %struct.macb** %bp.addr, align 8, !dbg !18325
  %2 = load i64, i64* %features.addr, align 8, !dbg !18326
  %and = and i64 %2, 274877906944, !dbg !18327
  %tobool = icmp ne i64 %and, 0, !dbg !18328
  %lnot = xor i1 %tobool, true, !dbg !18328
  %lnot1 = xor i1 %lnot, true, !dbg !18329
  call void @gem_enable_flow_filters(%struct.macb* %1, i1 zeroext %lnot1) #12, !dbg !18330
  br label %return, !dbg !18331

return:                                           ; preds = %if.end, %if.then
  ret void, !dbg !18331
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @gem_enable_flow_filters(%struct.macb* %bp, i1 zeroext %enable) #2 !dbg !18332 {
entry:
  %bp.addr = alloca %struct.macb*, align 8
  %enable.addr = alloca i8, align 1
  %netdev = alloca %struct.net_device*, align 8
  %item = alloca %struct.ethtool_rx_fs_item*, align 8
  %t2_scr = alloca i32, align 4
  %num_t2_scr = alloca i32, align 4
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.ethtool_rx_fs_item*, align 8
  %fs = alloca %struct.ethtool_rx_flow_spec*, align 8
  %tp4sp_m = alloca %struct.ethtool_tcpip4_spec*, align 8
  %__mptr53 = alloca i8*, align 8
  %tmp58 = alloca %struct.ethtool_rx_fs_item*, align 8
  store %struct.macb* %bp, %struct.macb** %bp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.macb** %bp.addr, metadata !18335, metadata !DIExpression()), !dbg !18336
  %frombool = zext i1 %enable to i8
  store i8 %frombool, i8* %enable.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %enable.addr, metadata !18337, metadata !DIExpression()), !dbg !18338
  call void @llvm.dbg.declare(metadata %struct.net_device** %netdev, metadata !18339, metadata !DIExpression()), !dbg !18340
  %0 = load %struct.macb*, %struct.macb** %bp.addr, align 8, !dbg !18341
  %dev = getelementptr inbounds %struct.macb, %struct.macb* %0, i32 0, i32 17, !dbg !18342
  %1 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !18342
  store %struct.net_device* %1, %struct.net_device** %netdev, align 8, !dbg !18340
  call void @llvm.dbg.declare(metadata %struct.ethtool_rx_fs_item** %item, metadata !18343, metadata !DIExpression()), !dbg !18344
  call void @llvm.dbg.declare(metadata i32* %t2_scr, metadata !18345, metadata !DIExpression()), !dbg !18346
  call void @llvm.dbg.declare(metadata i32* %num_t2_scr, metadata !18347, metadata !DIExpression()), !dbg !18348
  %2 = load %struct.net_device*, %struct.net_device** %netdev, align 8, !dbg !18349
  %features = getelementptr inbounds %struct.net_device, %struct.net_device* %2, i32 0, i32 15, !dbg !18351
  %3 = load i64, i64* %features, align 8, !dbg !18351
  %and = and i64 %3, 274877906944, !dbg !18352
  %tobool = icmp ne i64 %and, 0, !dbg !18352
  br i1 %tobool, label %if.end, label %if.then, !dbg !18353

if.then:                                          ; preds = %entry
  br label %for.end, !dbg !18354

if.end:                                           ; preds = %entry
  %4 = load %struct.macb*, %struct.macb** %bp.addr, align 8, !dbg !18355
  %macb_reg_readl = getelementptr inbounds %struct.macb, %struct.macb* %4, i32 0, i32 2, !dbg !18355
  %5 = load i32 (%struct.macb*, i32)*, i32 (%struct.macb*, i32)** %macb_reg_readl, align 8, !dbg !18355
  %6 = load %struct.macb*, %struct.macb** %bp.addr, align 8, !dbg !18355
  %call = call i32 %5(%struct.macb* %6, i32 668) #12, !dbg !18355
  %shr = lshr i32 %call, 16, !dbg !18355
  %and1 = and i32 %shr, 255, !dbg !18355
  store i32 %and1, i32* %num_t2_scr, align 4, !dbg !18356
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !18357, metadata !DIExpression()), !dbg !18360
  %7 = load %struct.macb*, %struct.macb** %bp.addr, align 8, !dbg !18360
  %rx_fs_list = getelementptr inbounds %struct.macb, %struct.macb* %7, i32 0, i32 42, !dbg !18360
  %list = getelementptr inbounds %struct.ethtool_rx_fs_list, %struct.ethtool_rx_fs_list* %rx_fs_list, i32 0, i32 0, !dbg !18360
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %list, i32 0, i32 0, !dbg !18360
  %8 = load %struct.list_head*, %struct.list_head** %next, align 8, !dbg !18360
  %9 = bitcast %struct.list_head* %8 to i8*, !dbg !18360
  store i8* %9, i8** %__mptr, align 8, !dbg !18360
  br label %do.body, !dbg !18360

do.body:                                          ; preds = %if.end
  br label %do.end, !dbg !18361

do.end:                                           ; preds = %do.body
  %10 = load i8*, i8** %__mptr, align 8, !dbg !18360
  %add.ptr = getelementptr i8, i8* %10, i64 -168, !dbg !18360
  %11 = bitcast i8* %add.ptr to %struct.ethtool_rx_fs_item*, !dbg !18360
  store %struct.ethtool_rx_fs_item* %11, %struct.ethtool_rx_fs_item** %tmp, align 8, !dbg !18361
  %12 = load %struct.ethtool_rx_fs_item*, %struct.ethtool_rx_fs_item** %tmp, align 8, !dbg !18360
  store %struct.ethtool_rx_fs_item* %12, %struct.ethtool_rx_fs_item** %item, align 8, !dbg !18363
  br label %for.cond, !dbg !18363

for.cond:                                         ; preds = %do.end57, %do.end
  %13 = load %struct.ethtool_rx_fs_item*, %struct.ethtool_rx_fs_item** %item, align 8, !dbg !18364
  %list2 = getelementptr inbounds %struct.ethtool_rx_fs_item, %struct.ethtool_rx_fs_item* %13, i32 0, i32 1, !dbg !18364
  %14 = load %struct.macb*, %struct.macb** %bp.addr, align 8, !dbg !18364
  %rx_fs_list3 = getelementptr inbounds %struct.macb, %struct.macb* %14, i32 0, i32 42, !dbg !18364
  %list4 = getelementptr inbounds %struct.ethtool_rx_fs_list, %struct.ethtool_rx_fs_list* %rx_fs_list3, i32 0, i32 0, !dbg !18364
  %cmp = icmp eq %struct.list_head* %list2, %list4, !dbg !18364
  %lnot = xor i1 %cmp, true, !dbg !18364
  br i1 %lnot, label %for.body, label %for.end, !dbg !18363

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.ethtool_rx_flow_spec** %fs, metadata !18366, metadata !DIExpression()), !dbg !18369
  %15 = load %struct.ethtool_rx_fs_item*, %struct.ethtool_rx_fs_item** %item, align 8, !dbg !18370
  %fs5 = getelementptr inbounds %struct.ethtool_rx_fs_item, %struct.ethtool_rx_fs_item* %15, i32 0, i32 0, !dbg !18371
  store %struct.ethtool_rx_flow_spec* %fs5, %struct.ethtool_rx_flow_spec** %fs, align 8, !dbg !18369
  call void @llvm.dbg.declare(metadata %struct.ethtool_tcpip4_spec** %tp4sp_m, metadata !18372, metadata !DIExpression()), !dbg !18374
  %16 = load %struct.ethtool_rx_flow_spec*, %struct.ethtool_rx_flow_spec** %fs, align 8, !dbg !18375
  %location = getelementptr inbounds %struct.ethtool_rx_flow_spec, %struct.ethtool_rx_flow_spec* %16, i32 0, i32 6, !dbg !18377
  %17 = load i32, i32* %location, align 8, !dbg !18377
  %18 = load i32, i32* %num_t2_scr, align 4, !dbg !18378
  %cmp6 = icmp uge i32 %17, %18, !dbg !18379
  br i1 %cmp6, label %if.then7, label %if.end8, !dbg !18380

if.then7:                                         ; preds = %for.body
  br label %for.inc, !dbg !18381

if.end8:                                          ; preds = %for.body
  %19 = load %struct.macb*, %struct.macb** %bp.addr, align 8, !dbg !18382
  %macb_reg_readl9 = getelementptr inbounds %struct.macb, %struct.macb* %19, i32 0, i32 2, !dbg !18382
  %20 = load i32 (%struct.macb*, i32)*, i32 (%struct.macb*, i32)** %macb_reg_readl9, align 8, !dbg !18382
  %21 = load %struct.macb*, %struct.macb** %bp.addr, align 8, !dbg !18382
  %22 = load %struct.ethtool_rx_flow_spec*, %struct.ethtool_rx_flow_spec** %fs, align 8, !dbg !18382
  %location10 = getelementptr inbounds %struct.ethtool_rx_flow_spec, %struct.ethtool_rx_flow_spec* %22, i32 0, i32 6, !dbg !18382
  %23 = load i32, i32* %location10, align 8, !dbg !18382
  %mul = mul i32 %23, 4, !dbg !18382
  %add = add i32 1344, %mul, !dbg !18382
  %call11 = call i32 %20(%struct.macb* %21, i32 %add) #12, !dbg !18382
  store i32 %call11, i32* %t2_scr, align 4, !dbg !18383
  %24 = load i32, i32* %t2_scr, align 4, !dbg !18384
  %and12 = and i32 %24, -4097, !dbg !18384
  %25 = load i8, i8* %enable.addr, align 1, !dbg !18384
  %tobool13 = trunc i8 %25 to i1, !dbg !18384
  %conv = zext i1 %tobool13 to i32, !dbg !18384
  %and14 = and i32 %conv, 1, !dbg !18384
  %shl = shl i32 %and14, 12, !dbg !18384
  %or = or i32 %and12, %shl, !dbg !18384
  store i32 %or, i32* %t2_scr, align 4, !dbg !18385
  %26 = load %struct.ethtool_rx_flow_spec*, %struct.ethtool_rx_flow_spec** %fs, align 8, !dbg !18386
  %m_u = getelementptr inbounds %struct.ethtool_rx_flow_spec, %struct.ethtool_rx_flow_spec* %26, i32 0, i32 3, !dbg !18387
  %tcp_ip4_spec = bitcast %union.ethtool_flow_union* %m_u to %struct.ethtool_tcpip4_spec*, !dbg !18388
  store %struct.ethtool_tcpip4_spec* %tcp_ip4_spec, %struct.ethtool_tcpip4_spec** %tp4sp_m, align 8, !dbg !18389
  %27 = load i8, i8* %enable.addr, align 1, !dbg !18390
  %tobool15 = trunc i8 %27 to i1, !dbg !18390
  br i1 %tobool15, label %land.lhs.true, label %if.else, !dbg !18392

land.lhs.true:                                    ; preds = %if.end8
  %28 = load %struct.ethtool_tcpip4_spec*, %struct.ethtool_tcpip4_spec** %tp4sp_m, align 8, !dbg !18393
  %ip4src = getelementptr inbounds %struct.ethtool_tcpip4_spec, %struct.ethtool_tcpip4_spec* %28, i32 0, i32 0, !dbg !18394
  %29 = load i32, i32* %ip4src, align 4, !dbg !18394
  %cmp17 = icmp eq i32 %29, -1, !dbg !18395
  br i1 %cmp17, label %if.then19, label %if.else, !dbg !18396

if.then19:                                        ; preds = %land.lhs.true
  %30 = load i32, i32* %t2_scr, align 4, !dbg !18397
  %and20 = and i32 %30, -262145, !dbg !18397
  %or21 = or i32 %and20, 262144, !dbg !18397
  store i32 %or21, i32* %t2_scr, align 4, !dbg !18398
  br label %if.end23, !dbg !18399

if.else:                                          ; preds = %land.lhs.true, %if.end8
  %31 = load i32, i32* %t2_scr, align 4, !dbg !18400
  %and22 = and i32 %31, -262145, !dbg !18400
  store i32 %and22, i32* %t2_scr, align 4, !dbg !18401
  br label %if.end23

if.end23:                                         ; preds = %if.else, %if.then19
  %32 = load i8, i8* %enable.addr, align 1, !dbg !18402
  %tobool24 = trunc i8 %32 to i1, !dbg !18402
  br i1 %tobool24, label %land.lhs.true26, label %if.else32, !dbg !18404

land.lhs.true26:                                  ; preds = %if.end23
  %33 = load %struct.ethtool_tcpip4_spec*, %struct.ethtool_tcpip4_spec** %tp4sp_m, align 8, !dbg !18405
  %ip4dst = getelementptr inbounds %struct.ethtool_tcpip4_spec, %struct.ethtool_tcpip4_spec* %33, i32 0, i32 1, !dbg !18406
  %34 = load i32, i32* %ip4dst, align 4, !dbg !18406
  %cmp27 = icmp eq i32 %34, -1, !dbg !18407
  br i1 %cmp27, label %if.then29, label %if.else32, !dbg !18408

if.then29:                                        ; preds = %land.lhs.true26
  %35 = load i32, i32* %t2_scr, align 4, !dbg !18409
  %and30 = and i32 %35, -16777217, !dbg !18409
  %or31 = or i32 %and30, 16777216, !dbg !18409
  store i32 %or31, i32* %t2_scr, align 4, !dbg !18410
  br label %if.end34, !dbg !18411

if.else32:                                        ; preds = %land.lhs.true26, %if.end23
  %36 = load i32, i32* %t2_scr, align 4, !dbg !18412
  %and33 = and i32 %36, -16777217, !dbg !18412
  store i32 %and33, i32* %t2_scr, align 4, !dbg !18413
  br label %if.end34

if.end34:                                         ; preds = %if.else32, %if.then29
  %37 = load i8, i8* %enable.addr, align 1, !dbg !18414
  %tobool35 = trunc i8 %37 to i1, !dbg !18414
  br i1 %tobool35, label %land.lhs.true37, label %if.else47, !dbg !18416

land.lhs.true37:                                  ; preds = %if.end34
  %38 = load %struct.ethtool_tcpip4_spec*, %struct.ethtool_tcpip4_spec** %tp4sp_m, align 8, !dbg !18417
  %psrc = getelementptr inbounds %struct.ethtool_tcpip4_spec, %struct.ethtool_tcpip4_spec* %38, i32 0, i32 2, !dbg !18418
  %39 = load i16, i16* %psrc, align 4, !dbg !18418
  %conv38 = zext i16 %39 to i32, !dbg !18417
  %cmp39 = icmp eq i32 %conv38, 65535, !dbg !18419
  br i1 %cmp39, label %if.then44, label %lor.lhs.false, !dbg !18420

lor.lhs.false:                                    ; preds = %land.lhs.true37
  %40 = load %struct.ethtool_tcpip4_spec*, %struct.ethtool_tcpip4_spec** %tp4sp_m, align 8, !dbg !18421
  %pdst = getelementptr inbounds %struct.ethtool_tcpip4_spec, %struct.ethtool_tcpip4_spec* %40, i32 0, i32 3, !dbg !18422
  %41 = load i16, i16* %pdst, align 2, !dbg !18422
  %conv41 = zext i16 %41 to i32, !dbg !18421
  %cmp42 = icmp eq i32 %conv41, 65535, !dbg !18423
  br i1 %cmp42, label %if.then44, label %if.else47, !dbg !18424

if.then44:                                        ; preds = %lor.lhs.false, %land.lhs.true37
  %42 = load i32, i32* %t2_scr, align 4, !dbg !18425
  %and45 = and i32 %42, -1073741825, !dbg !18425
  %or46 = or i32 %and45, 1073741824, !dbg !18425
  store i32 %or46, i32* %t2_scr, align 4, !dbg !18426
  br label %if.end49, !dbg !18427

if.else47:                                        ; preds = %lor.lhs.false, %if.end34
  %43 = load i32, i32* %t2_scr, align 4, !dbg !18428
  %and48 = and i32 %43, -1073741825, !dbg !18428
  store i32 %and48, i32* %t2_scr, align 4, !dbg !18429
  br label %if.end49

if.end49:                                         ; preds = %if.else47, %if.then44
  %44 = load %struct.macb*, %struct.macb** %bp.addr, align 8, !dbg !18430
  %macb_reg_writel = getelementptr inbounds %struct.macb, %struct.macb* %44, i32 0, i32 3, !dbg !18430
  %45 = load void (%struct.macb*, i32, i32)*, void (%struct.macb*, i32, i32)** %macb_reg_writel, align 8, !dbg !18430
  %46 = load %struct.macb*, %struct.macb** %bp.addr, align 8, !dbg !18430
  %47 = load %struct.ethtool_rx_flow_spec*, %struct.ethtool_rx_flow_spec** %fs, align 8, !dbg !18430
  %location50 = getelementptr inbounds %struct.ethtool_rx_flow_spec, %struct.ethtool_rx_flow_spec* %47, i32 0, i32 6, !dbg !18430
  %48 = load i32, i32* %location50, align 8, !dbg !18430
  %mul51 = mul i32 %48, 4, !dbg !18430
  %add52 = add i32 1344, %mul51, !dbg !18430
  %49 = load i32, i32* %t2_scr, align 4, !dbg !18430
  call void %45(%struct.macb* %46, i32 %add52, i32 %49) #12, !dbg !18430
  br label %for.inc, !dbg !18431

for.inc:                                          ; preds = %if.end49, %if.then7
  call void @llvm.dbg.declare(metadata i8** %__mptr53, metadata !18432, metadata !DIExpression()), !dbg !18434
  %50 = load %struct.ethtool_rx_fs_item*, %struct.ethtool_rx_fs_item** %item, align 8, !dbg !18434
  %list54 = getelementptr inbounds %struct.ethtool_rx_fs_item, %struct.ethtool_rx_fs_item* %50, i32 0, i32 1, !dbg !18434
  %next55 = getelementptr inbounds %struct.list_head, %struct.list_head* %list54, i32 0, i32 0, !dbg !18434
  %51 = load %struct.list_head*, %struct.list_head** %next55, align 8, !dbg !18434
  %52 = bitcast %struct.list_head* %51 to i8*, !dbg !18434
  store i8* %52, i8** %__mptr53, align 8, !dbg !18434
  br label %do.body56, !dbg !18434

do.body56:                                        ; preds = %for.inc
  br label %do.end57, !dbg !18435

do.end57:                                         ; preds = %do.body56
  %53 = load i8*, i8** %__mptr53, align 8, !dbg !18434
  %add.ptr59 = getelementptr i8, i8* %53, i64 -168, !dbg !18434
  %54 = bitcast i8* %add.ptr59 to %struct.ethtool_rx_fs_item*, !dbg !18434
  store %struct.ethtool_rx_fs_item* %54, %struct.ethtool_rx_fs_item** %tmp58, align 8, !dbg !18435
  %55 = load %struct.ethtool_rx_fs_item*, %struct.ethtool_rx_fs_item** %tmp58, align 8, !dbg !18434
  store %struct.ethtool_rx_fs_item* %55, %struct.ethtool_rx_fs_item** %item, align 8, !dbg !18364
  br label %for.cond, !dbg !18364, !llvm.loop !18437

for.end:                                          ; preds = %if.then, %for.cond
  ret void, !dbg !18439
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @kzalloc(i64 %size, i32 %flags) #2 !dbg !18440 {
entry:
  %s.addr.i.i = alloca %struct.kmem_cache*, align 8
  call void @llvm.dbg.declare(metadata %struct.kmem_cache** %s.addr.i.i, metadata !15779, metadata !DIExpression()), !dbg !18441
  %flags.addr.i17.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i17.i, metadata !15794, metadata !DIExpression()), !dbg !18444
  %size.addr.i18.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i18.i, metadata !15796, metadata !DIExpression()), !dbg !18445
  %ret.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %ret.i.i, metadata !15798, metadata !DIExpression()), !dbg !18446
  %retval.i12.i = alloca i32, align 4
  %flags.addr.i13.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i13.i, metadata !15800, metadata !DIExpression()), !dbg !18447
  %retval.i.i = alloca i32, align 4
  %size.addr.i11.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i11.i, metadata !15806, metadata !DIExpression()), !dbg !18449
  %size.addr.i.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i.i, metadata !15812, metadata !DIExpression()), !dbg !18451
  %flags.addr.i.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i.i.i, metadata !15821, metadata !DIExpression()), !dbg !18454
  %order.addr.i.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %order.addr.i.i.i, metadata !15823, metadata !DIExpression()), !dbg !18455
  %size.addr.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i, metadata !15825, metadata !DIExpression()), !dbg !18456
  %flags.addr.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i.i, metadata !15827, metadata !DIExpression()), !dbg !18457
  %order.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %order.i.i, metadata !15829, metadata !DIExpression()), !dbg !18458
  %retval.i = alloca i8*, align 8
  %size.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i, metadata !15831, metadata !DIExpression()), !dbg !18459
  %flags.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i, metadata !15833, metadata !DIExpression()), !dbg !18460
  %index.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %index.i, metadata !15835, metadata !DIExpression()), !dbg !18461
  %size.addr = alloca i64, align 8
  %flags.addr = alloca i32, align 4
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !18462, metadata !DIExpression()), !dbg !18463
  store i32 %flags, i32* %flags.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr, metadata !18464, metadata !DIExpression()), !dbg !18465
  %0 = load i64, i64* %size.addr, align 8, !dbg !18466
  %1 = load i32, i32* %flags.addr, align 4, !dbg !18467
  %or = or i32 %1, 256, !dbg !18468
  store i64 %0, i64* %size.addr.i, align 8
  store i32 %or, i32* %flags.addr.i, align 4
  %2 = load i64, i64* %size.addr.i, align 8, !dbg !18469
  %3 = call i1 @llvm.is.constant.i64(i64 %2) #8, !dbg !18470
  br i1 %3, label %if.then.i, label %if.end9.i, !dbg !18471

if.then.i:                                        ; preds = %entry
  %4 = load i64, i64* %size.addr.i, align 8, !dbg !18472
  %cmp.i = icmp ugt i64 %4, 8192, !dbg !18473
  br i1 %cmp.i, label %if.then1.i, label %if.end.i, !dbg !18474

if.then1.i:                                       ; preds = %if.then.i
  %5 = load i64, i64* %size.addr.i, align 8, !dbg !18475
  %6 = load i32, i32* %flags.addr.i, align 4, !dbg !18476
  store i64 %5, i64* %size.addr.i.i, align 8
  store i32 %6, i32* %flags.addr.i.i, align 4
  %7 = load i64, i64* %size.addr.i.i, align 8, !dbg !18477
  %call.i.i = call i32 @get_order(i64 %7) #16, !dbg !18478
  store i32 %call.i.i, i32* %order.i.i, align 4, !dbg !18458
  %8 = load i64, i64* %size.addr.i.i, align 8, !dbg !18479
  %9 = load i32, i32* %flags.addr.i.i, align 4, !dbg !18480
  %10 = load i32, i32* %order.i.i, align 4, !dbg !18481
  store i64 %8, i64* %size.addr.i.i.i, align 8
  store i32 %9, i32* %flags.addr.i.i.i, align 4
  store i32 %10, i32* %order.addr.i.i.i, align 4
  %11 = load i64, i64* %size.addr.i.i.i, align 8, !dbg !18482
  %12 = load i32, i32* %flags.addr.i.i.i, align 4, !dbg !18483
  %13 = load i32, i32* %order.addr.i.i.i, align 4, !dbg !18484
  %call.i.i.i = call noalias i8* @kmalloc_order(i64 %11, i32 %12, i32 %13) #14, !dbg !18485
  %ptrint.i.i.i = ptrtoint i8* %call.i.i.i to i64, !dbg !18485
  %maskedptr.i.i.i = and i64 %ptrint.i.i.i, 4095, !dbg !18485
  %maskcond.i.i.i = icmp eq i64 %maskedptr.i.i.i, 0, !dbg !18485
  call void @llvm.assume(i1 %maskcond.i.i.i) #8, !dbg !18485
  store i8* %call.i.i.i, i8** %retval.i, align 8, !dbg !18486
  br label %kmalloc.exit, !dbg !18486

if.end.i:                                         ; preds = %if.then.i
  %14 = load i64, i64* %size.addr.i, align 8, !dbg !18487
  store i64 %14, i64* %size.addr.i11.i, align 8
  %15 = load i64, i64* %size.addr.i11.i, align 8, !dbg !18488
  %tobool.i.i = icmp ne i64 %15, 0, !dbg !18488
  br i1 %tobool.i.i, label %if.end.i.i, label %if.then.i.i, !dbg !18489

if.then.i.i:                                      ; preds = %if.end.i
  store i32 0, i32* %retval.i.i, align 4, !dbg !18490
  br label %kmalloc_index.exit.i, !dbg !18490

if.end.i.i:                                       ; preds = %if.end.i
  %16 = load i64, i64* %size.addr.i11.i, align 8, !dbg !18491
  %cmp.i.i = icmp ule i64 %16, 8, !dbg !18492
  br i1 %cmp.i.i, label %if.then1.i.i, label %if.end2.i.i, !dbg !18493

if.then1.i.i:                                     ; preds = %if.end.i.i
  store i32 3, i32* %retval.i.i, align 4, !dbg !18494
  br label %kmalloc_index.exit.i, !dbg !18494

if.end2.i.i:                                      ; preds = %if.end.i.i
  %17 = load i64, i64* %size.addr.i11.i, align 8, !dbg !18495
  %cmp3.i.i = icmp ugt i64 %17, 64, !dbg !18496
  br i1 %cmp3.i.i, label %land.lhs.true.i.i, label %if.end6.i.i, !dbg !18497

land.lhs.true.i.i:                                ; preds = %if.end2.i.i
  %18 = load i64, i64* %size.addr.i11.i, align 8, !dbg !18498
  %cmp4.i.i = icmp ule i64 %18, 96, !dbg !18499
  br i1 %cmp4.i.i, label %if.then5.i.i, label %if.end6.i.i, !dbg !18500

if.then5.i.i:                                     ; preds = %land.lhs.true.i.i
  store i32 1, i32* %retval.i.i, align 4, !dbg !18501
  br label %kmalloc_index.exit.i, !dbg !18501

if.end6.i.i:                                      ; preds = %land.lhs.true.i.i, %if.end2.i.i
  %19 = load i64, i64* %size.addr.i11.i, align 8, !dbg !18502
  %cmp7.i.i = icmp ugt i64 %19, 128, !dbg !18503
  br i1 %cmp7.i.i, label %land.lhs.true8.i.i, label %if.end11.i.i, !dbg !18504

land.lhs.true8.i.i:                               ; preds = %if.end6.i.i
  %20 = load i64, i64* %size.addr.i11.i, align 8, !dbg !18505
  %cmp9.i.i = icmp ule i64 %20, 192, !dbg !18506
  br i1 %cmp9.i.i, label %if.then10.i.i, label %if.end11.i.i, !dbg !18507

if.then10.i.i:                                    ; preds = %land.lhs.true8.i.i
  store i32 2, i32* %retval.i.i, align 4, !dbg !18508
  br label %kmalloc_index.exit.i, !dbg !18508

if.end11.i.i:                                     ; preds = %land.lhs.true8.i.i, %if.end6.i.i
  %21 = load i64, i64* %size.addr.i11.i, align 8, !dbg !18509
  %cmp12.i.i = icmp ule i64 %21, 8, !dbg !18510
  br i1 %cmp12.i.i, label %if.then13.i.i, label %if.end14.i.i, !dbg !18511

if.then13.i.i:                                    ; preds = %if.end11.i.i
  store i32 3, i32* %retval.i.i, align 4, !dbg !18512
  br label %kmalloc_index.exit.i, !dbg !18512

if.end14.i.i:                                     ; preds = %if.end11.i.i
  %22 = load i64, i64* %size.addr.i11.i, align 8, !dbg !18513
  %cmp15.i.i = icmp ule i64 %22, 16, !dbg !18514
  br i1 %cmp15.i.i, label %if.then16.i.i, label %if.end17.i.i, !dbg !18515

if.then16.i.i:                                    ; preds = %if.end14.i.i
  store i32 4, i32* %retval.i.i, align 4, !dbg !18516
  br label %kmalloc_index.exit.i, !dbg !18516

if.end17.i.i:                                     ; preds = %if.end14.i.i
  %23 = load i64, i64* %size.addr.i11.i, align 8, !dbg !18517
  %cmp18.i.i = icmp ule i64 %23, 32, !dbg !18518
  br i1 %cmp18.i.i, label %if.then19.i.i, label %if.end20.i.i, !dbg !18519

if.then19.i.i:                                    ; preds = %if.end17.i.i
  store i32 5, i32* %retval.i.i, align 4, !dbg !18520
  br label %kmalloc_index.exit.i, !dbg !18520

if.end20.i.i:                                     ; preds = %if.end17.i.i
  %24 = load i64, i64* %size.addr.i11.i, align 8, !dbg !18521
  %cmp21.i.i = icmp ule i64 %24, 64, !dbg !18522
  br i1 %cmp21.i.i, label %if.then22.i.i, label %if.end23.i.i, !dbg !18523

if.then22.i.i:                                    ; preds = %if.end20.i.i
  store i32 6, i32* %retval.i.i, align 4, !dbg !18524
  br label %kmalloc_index.exit.i, !dbg !18524

if.end23.i.i:                                     ; preds = %if.end20.i.i
  %25 = load i64, i64* %size.addr.i11.i, align 8, !dbg !18525
  %cmp24.i.i = icmp ule i64 %25, 128, !dbg !18526
  br i1 %cmp24.i.i, label %if.then25.i.i, label %if.end26.i.i, !dbg !18527

if.then25.i.i:                                    ; preds = %if.end23.i.i
  store i32 7, i32* %retval.i.i, align 4, !dbg !18528
  br label %kmalloc_index.exit.i, !dbg !18528

if.end26.i.i:                                     ; preds = %if.end23.i.i
  %26 = load i64, i64* %size.addr.i11.i, align 8, !dbg !18529
  %cmp27.i.i = icmp ule i64 %26, 256, !dbg !18530
  br i1 %cmp27.i.i, label %if.then28.i.i, label %if.end29.i.i, !dbg !18531

if.then28.i.i:                                    ; preds = %if.end26.i.i
  store i32 8, i32* %retval.i.i, align 4, !dbg !18532
  br label %kmalloc_index.exit.i, !dbg !18532

if.end29.i.i:                                     ; preds = %if.end26.i.i
  %27 = load i64, i64* %size.addr.i11.i, align 8, !dbg !18533
  %cmp30.i.i = icmp ule i64 %27, 512, !dbg !18534
  br i1 %cmp30.i.i, label %if.then31.i.i, label %if.end32.i.i, !dbg !18535

if.then31.i.i:                                    ; preds = %if.end29.i.i
  store i32 9, i32* %retval.i.i, align 4, !dbg !18536
  br label %kmalloc_index.exit.i, !dbg !18536

if.end32.i.i:                                     ; preds = %if.end29.i.i
  %28 = load i64, i64* %size.addr.i11.i, align 8, !dbg !18537
  %cmp33.i.i = icmp ule i64 %28, 1024, !dbg !18538
  br i1 %cmp33.i.i, label %if.then34.i.i, label %if.end35.i.i, !dbg !18539

if.then34.i.i:                                    ; preds = %if.end32.i.i
  store i32 10, i32* %retval.i.i, align 4, !dbg !18540
  br label %kmalloc_index.exit.i, !dbg !18540

if.end35.i.i:                                     ; preds = %if.end32.i.i
  %29 = load i64, i64* %size.addr.i11.i, align 8, !dbg !18541
  %cmp36.i.i = icmp ule i64 %29, 2048, !dbg !18542
  br i1 %cmp36.i.i, label %if.then37.i.i, label %if.end38.i.i, !dbg !18543

if.then37.i.i:                                    ; preds = %if.end35.i.i
  store i32 11, i32* %retval.i.i, align 4, !dbg !18544
  br label %kmalloc_index.exit.i, !dbg !18544

if.end38.i.i:                                     ; preds = %if.end35.i.i
  %30 = load i64, i64* %size.addr.i11.i, align 8, !dbg !18545
  %cmp39.i.i = icmp ule i64 %30, 4096, !dbg !18546
  br i1 %cmp39.i.i, label %if.then40.i.i, label %if.end41.i.i, !dbg !18547

if.then40.i.i:                                    ; preds = %if.end38.i.i
  store i32 12, i32* %retval.i.i, align 4, !dbg !18548
  br label %kmalloc_index.exit.i, !dbg !18548

if.end41.i.i:                                     ; preds = %if.end38.i.i
  %31 = load i64, i64* %size.addr.i11.i, align 8, !dbg !18549
  %cmp42.i.i = icmp ule i64 %31, 8192, !dbg !18550
  br i1 %cmp42.i.i, label %if.then43.i.i, label %if.end44.i.i, !dbg !18551

if.then43.i.i:                                    ; preds = %if.end41.i.i
  store i32 13, i32* %retval.i.i, align 4, !dbg !18552
  br label %kmalloc_index.exit.i, !dbg !18552

if.end44.i.i:                                     ; preds = %if.end41.i.i
  %32 = load i64, i64* %size.addr.i11.i, align 8, !dbg !18553
  %cmp45.i.i = icmp ule i64 %32, 16384, !dbg !18554
  br i1 %cmp45.i.i, label %if.then46.i.i, label %if.end47.i.i, !dbg !18555

if.then46.i.i:                                    ; preds = %if.end44.i.i
  store i32 14, i32* %retval.i.i, align 4, !dbg !18556
  br label %kmalloc_index.exit.i, !dbg !18556

if.end47.i.i:                                     ; preds = %if.end44.i.i
  %33 = load i64, i64* %size.addr.i11.i, align 8, !dbg !18557
  %cmp48.i.i = icmp ule i64 %33, 32768, !dbg !18558
  br i1 %cmp48.i.i, label %if.then49.i.i, label %if.end50.i.i, !dbg !18559

if.then49.i.i:                                    ; preds = %if.end47.i.i
  store i32 15, i32* %retval.i.i, align 4, !dbg !18560
  br label %kmalloc_index.exit.i, !dbg !18560

if.end50.i.i:                                     ; preds = %if.end47.i.i
  %34 = load i64, i64* %size.addr.i11.i, align 8, !dbg !18561
  %cmp51.i.i = icmp ule i64 %34, 65536, !dbg !18562
  br i1 %cmp51.i.i, label %if.then52.i.i, label %if.end53.i.i, !dbg !18563

if.then52.i.i:                                    ; preds = %if.end50.i.i
  store i32 16, i32* %retval.i.i, align 4, !dbg !18564
  br label %kmalloc_index.exit.i, !dbg !18564

if.end53.i.i:                                     ; preds = %if.end50.i.i
  %35 = load i64, i64* %size.addr.i11.i, align 8, !dbg !18565
  %cmp54.i.i = icmp ule i64 %35, 131072, !dbg !18566
  br i1 %cmp54.i.i, label %if.then55.i.i, label %if.end56.i.i, !dbg !18567

if.then55.i.i:                                    ; preds = %if.end53.i.i
  store i32 17, i32* %retval.i.i, align 4, !dbg !18568
  br label %kmalloc_index.exit.i, !dbg !18568

if.end56.i.i:                                     ; preds = %if.end53.i.i
  %36 = load i64, i64* %size.addr.i11.i, align 8, !dbg !18569
  %cmp57.i.i = icmp ule i64 %36, 262144, !dbg !18570
  br i1 %cmp57.i.i, label %if.then58.i.i, label %if.end59.i.i, !dbg !18571

if.then58.i.i:                                    ; preds = %if.end56.i.i
  store i32 18, i32* %retval.i.i, align 4, !dbg !18572
  br label %kmalloc_index.exit.i, !dbg !18572

if.end59.i.i:                                     ; preds = %if.end56.i.i
  %37 = load i64, i64* %size.addr.i11.i, align 8, !dbg !18573
  %cmp60.i.i = icmp ule i64 %37, 524288, !dbg !18574
  br i1 %cmp60.i.i, label %if.then61.i.i, label %if.end62.i.i, !dbg !18575

if.then61.i.i:                                    ; preds = %if.end59.i.i
  store i32 19, i32* %retval.i.i, align 4, !dbg !18576
  br label %kmalloc_index.exit.i, !dbg !18576

if.end62.i.i:                                     ; preds = %if.end59.i.i
  %38 = load i64, i64* %size.addr.i11.i, align 8, !dbg !18577
  %cmp63.i.i = icmp ule i64 %38, 1048576, !dbg !18578
  br i1 %cmp63.i.i, label %if.then64.i.i, label %if.end65.i.i, !dbg !18579

if.then64.i.i:                                    ; preds = %if.end62.i.i
  store i32 20, i32* %retval.i.i, align 4, !dbg !18580
  br label %kmalloc_index.exit.i, !dbg !18580

if.end65.i.i:                                     ; preds = %if.end62.i.i
  %39 = load i64, i64* %size.addr.i11.i, align 8, !dbg !18581
  %cmp66.i.i = icmp ule i64 %39, 2097152, !dbg !18582
  br i1 %cmp66.i.i, label %if.then67.i.i, label %if.end68.i.i, !dbg !18583

if.then67.i.i:                                    ; preds = %if.end65.i.i
  store i32 21, i32* %retval.i.i, align 4, !dbg !18584
  br label %kmalloc_index.exit.i, !dbg !18584

if.end68.i.i:                                     ; preds = %if.end65.i.i
  %40 = load i64, i64* %size.addr.i11.i, align 8, !dbg !18585
  %cmp69.i.i = icmp ule i64 %40, 4194304, !dbg !18586
  br i1 %cmp69.i.i, label %if.then70.i.i, label %if.end71.i.i, !dbg !18587

if.then70.i.i:                                    ; preds = %if.end68.i.i
  store i32 22, i32* %retval.i.i, align 4, !dbg !18588
  br label %kmalloc_index.exit.i, !dbg !18588

if.end71.i.i:                                     ; preds = %if.end68.i.i
  %41 = load i64, i64* %size.addr.i11.i, align 8, !dbg !18589
  %cmp72.i.i = icmp ule i64 %41, 8388608, !dbg !18590
  br i1 %cmp72.i.i, label %if.then73.i.i, label %if.end74.i.i, !dbg !18591

if.then73.i.i:                                    ; preds = %if.end71.i.i
  store i32 23, i32* %retval.i.i, align 4, !dbg !18592
  br label %kmalloc_index.exit.i, !dbg !18592

if.end74.i.i:                                     ; preds = %if.end71.i.i
  %42 = load i64, i64* %size.addr.i11.i, align 8, !dbg !18593
  %cmp75.i.i = icmp ule i64 %42, 16777216, !dbg !18594
  br i1 %cmp75.i.i, label %if.then76.i.i, label %if.end77.i.i, !dbg !18595

if.then76.i.i:                                    ; preds = %if.end74.i.i
  store i32 24, i32* %retval.i.i, align 4, !dbg !18596
  br label %kmalloc_index.exit.i, !dbg !18596

if.end77.i.i:                                     ; preds = %if.end74.i.i
  %43 = load i64, i64* %size.addr.i11.i, align 8, !dbg !18597
  %cmp78.i.i = icmp ule i64 %43, 33554432, !dbg !18598
  br i1 %cmp78.i.i, label %if.then79.i.i, label %if.end80.i.i, !dbg !18599

if.then79.i.i:                                    ; preds = %if.end77.i.i
  store i32 25, i32* %retval.i.i, align 4, !dbg !18600
  br label %kmalloc_index.exit.i, !dbg !18600

if.end80.i.i:                                     ; preds = %if.end77.i.i
  %44 = load i64, i64* %size.addr.i11.i, align 8, !dbg !18601
  %cmp81.i.i = icmp ule i64 %44, 67108864, !dbg !18602
  br i1 %cmp81.i.i, label %if.then82.i.i, label %if.end83.i.i, !dbg !18603

if.then82.i.i:                                    ; preds = %if.end80.i.i
  store i32 26, i32* %retval.i.i, align 4, !dbg !18604
  br label %kmalloc_index.exit.i, !dbg !18604

if.end83.i.i:                                     ; preds = %if.end80.i.i
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.23, i64 0, i64 0), i32 382, i32 0, i64 12) #8, !dbg !18605, !srcloc !16047
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.unreachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 105) #8, !dbg !18606, !srcloc !16051
  unreachable, !dbg !18607

kmalloc_index.exit.i:                             ; preds = %if.then82.i.i, %if.then79.i.i, %if.then76.i.i, %if.then73.i.i, %if.then70.i.i, %if.then67.i.i, %if.then64.i.i, %if.then61.i.i, %if.then58.i.i, %if.then55.i.i, %if.then52.i.i, %if.then49.i.i, %if.then46.i.i, %if.then43.i.i, %if.then40.i.i, %if.then37.i.i, %if.then34.i.i, %if.then31.i.i, %if.then28.i.i, %if.then25.i.i, %if.then22.i.i, %if.then19.i.i, %if.then16.i.i, %if.then13.i.i, %if.then10.i.i, %if.then5.i.i, %if.then1.i.i, %if.then.i.i
  %45 = load i32, i32* %retval.i.i, align 4, !dbg !18608
  store i32 %45, i32* %index.i, align 4, !dbg !18609
  %46 = load i32, i32* %index.i, align 4, !dbg !18610
  %tobool.i = icmp ne i32 %46, 0, !dbg !18610
  br i1 %tobool.i, label %if.end4.i, label %if.then3.i, !dbg !18611

if.then3.i:                                       ; preds = %kmalloc_index.exit.i
  store i8* inttoptr (i64 16 to i8*), i8** %retval.i, align 8, !dbg !18612
  br label %kmalloc.exit, !dbg !18612

if.end4.i:                                        ; preds = %kmalloc_index.exit.i
  %47 = load i32, i32* %flags.addr.i, align 4, !dbg !18613
  store i32 %47, i32* %flags.addr.i13.i, align 4
  %48 = load i32, i32* %flags.addr.i13.i, align 4, !dbg !18614
  %and.i.i = and i32 %48, 17, !dbg !18614
  %cmp.i14.i = icmp eq i32 %and.i.i, 0, !dbg !18614
  %lnot.i.i = xor i1 %cmp.i14.i, true, !dbg !18614
  %lnot.ext.i.i = zext i1 %cmp.i14.i to i32, !dbg !18614
  %conv.i.i = sext i32 %lnot.ext.i.i to i64, !dbg !18614
  br i1 %cmp.i14.i, label %if.then.i15.i, label %if.end.i16.i, !dbg !18615

if.then.i15.i:                                    ; preds = %if.end4.i
  store i32 0, i32* %retval.i12.i, align 4, !dbg !18616
  br label %kmalloc_type.exit.i, !dbg !18616

if.end.i16.i:                                     ; preds = %if.end4.i
  %49 = load i32, i32* %flags.addr.i13.i, align 4, !dbg !18617
  %and2.i.i = and i32 %49, 1, !dbg !18618
  %tobool3.i.i = icmp ne i32 %and2.i.i, 0, !dbg !18617
  %50 = zext i1 %tobool3.i.i to i64, !dbg !18617
  %cond.i.i = select i1 %tobool3.i.i, i32 2, i32 1, !dbg !18617
  store i32 %cond.i.i, i32* %retval.i12.i, align 4, !dbg !18619
  br label %kmalloc_type.exit.i, !dbg !18619

kmalloc_type.exit.i:                              ; preds = %if.end.i16.i, %if.then.i15.i
  %51 = load i32, i32* %retval.i12.i, align 4, !dbg !18620
  %idxprom.i = zext i32 %51 to i64, !dbg !18621
  %arrayidx.i = getelementptr [3 x [14 x %struct.kmem_cache*]], [3 x [14 x %struct.kmem_cache*]]* @kmalloc_caches, i64 0, i64 %idxprom.i, !dbg !18621
  %52 = load i32, i32* %index.i, align 4, !dbg !18622
  %idxprom6.i = zext i32 %52 to i64, !dbg !18621
  %arrayidx7.i = getelementptr [14 x %struct.kmem_cache*], [14 x %struct.kmem_cache*]* %arrayidx.i, i64 0, i64 %idxprom6.i, !dbg !18621
  %53 = load %struct.kmem_cache*, %struct.kmem_cache** %arrayidx7.i, align 8, !dbg !18621
  %54 = load i32, i32* %flags.addr.i, align 4, !dbg !18623
  %55 = load i64, i64* %size.addr.i, align 8, !dbg !18624
  store %struct.kmem_cache* %53, %struct.kmem_cache** %s.addr.i.i, align 8
  store i32 %54, i32* %flags.addr.i17.i, align 4
  store i64 %55, i64* %size.addr.i18.i, align 8
  %56 = load %struct.kmem_cache*, %struct.kmem_cache** %s.addr.i.i, align 8, !dbg !18625
  %57 = load i32, i32* %flags.addr.i17.i, align 4, !dbg !18626
  %call.i19.i = call noalias i8* @kmem_cache_alloc(%struct.kmem_cache* %56, i32 %57) #14, !dbg !18627
  %ptrint.i.i = ptrtoint i8* %call.i19.i to i64, !dbg !18627
  %maskedptr.i.i = and i64 %ptrint.i.i, 7, !dbg !18627
  %maskcond.i.i = icmp eq i64 %maskedptr.i.i, 0, !dbg !18627
  call void @llvm.assume(i1 %maskcond.i.i) #8, !dbg !18627
  store i8* %call.i19.i, i8** %ret.i.i, align 8, !dbg !18446
  %58 = load %struct.kmem_cache*, %struct.kmem_cache** %s.addr.i.i, align 8, !dbg !18628
  %59 = load i8*, i8** %ret.i.i, align 8, !dbg !18629
  %60 = load i64, i64* %size.addr.i18.i, align 8, !dbg !18630
  %61 = load i32, i32* %flags.addr.i17.i, align 4, !dbg !18631
  %call1.i.i = call i8* @kasan_kmalloc(%struct.kmem_cache* %58, i8* %59, i64 %60, i32 %61) #14, !dbg !18632
  store i8* %call1.i.i, i8** %ret.i.i, align 8, !dbg !18633
  %62 = load i8*, i8** %ret.i.i, align 8, !dbg !18634
  store i8* %62, i8** %retval.i, align 8, !dbg !18635
  br label %kmalloc.exit, !dbg !18635

if.end9.i:                                        ; preds = %entry
  %63 = load i64, i64* %size.addr.i, align 8, !dbg !18636
  %64 = load i32, i32* %flags.addr.i, align 4, !dbg !18637
  %call10.i = call noalias i8* @__kmalloc(i64 %63, i32 %64) #14, !dbg !18638
  %ptrint.i = ptrtoint i8* %call10.i to i64, !dbg !18638
  %maskedptr.i = and i64 %ptrint.i, 7, !dbg !18638
  %maskcond.i = icmp eq i64 %maskedptr.i, 0, !dbg !18638
  call void @llvm.assume(i1 %maskcond.i) #8, !dbg !18638
  store i8* %call10.i, i8** %retval.i, align 8, !dbg !18639
  br label %kmalloc.exit, !dbg !18639

kmalloc.exit:                                     ; preds = %if.then1.i, %if.then3.i, %kmalloc_type.exit.i, %if.end9.i
  %65 = load i8*, i8** %retval.i, align 8, !dbg !18640
  ret i8* %65, !dbg !18641
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.macb_dma_desc* @macb_rx_desc(%struct.macb_queue* %queue, i32 %index) #2 !dbg !18642 {
entry:
  %queue.addr = alloca %struct.macb_queue*, align 8
  %index.addr = alloca i32, align 4
  store %struct.macb_queue* %queue, %struct.macb_queue** %queue.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.macb_queue** %queue.addr, metadata !18643, metadata !DIExpression()), !dbg !18644
  store i32 %index, i32* %index.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %index.addr, metadata !18645, metadata !DIExpression()), !dbg !18646
  %0 = load %struct.macb_queue*, %struct.macb_queue** %queue.addr, align 8, !dbg !18647
  %bp = getelementptr inbounds %struct.macb_queue, %struct.macb_queue* %0, i32 0, i32 0, !dbg !18648
  %1 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !18648
  %2 = load i32, i32* %index.addr, align 4, !dbg !18649
  %call = call i32 @macb_rx_ring_wrap(%struct.macb* %1, i32 %2) #12, !dbg !18650
  store i32 %call, i32* %index.addr, align 4, !dbg !18651
  %3 = load %struct.macb_queue*, %struct.macb_queue** %queue.addr, align 8, !dbg !18652
  %bp1 = getelementptr inbounds %struct.macb_queue, %struct.macb_queue* %3, i32 0, i32 0, !dbg !18653
  %4 = load %struct.macb*, %struct.macb** %bp1, align 8, !dbg !18653
  %5 = load i32, i32* %index.addr, align 4, !dbg !18654
  %call2 = call i32 @macb_adj_dma_desc_idx(%struct.macb* %4, i32 %5) #12, !dbg !18655
  store i32 %call2, i32* %index.addr, align 4, !dbg !18656
  %6 = load %struct.macb_queue*, %struct.macb_queue** %queue.addr, align 8, !dbg !18657
  %rx_ring = getelementptr inbounds %struct.macb_queue, %struct.macb_queue* %6, i32 0, i32 21, !dbg !18658
  %7 = load %struct.macb_dma_desc*, %struct.macb_dma_desc** %rx_ring, align 8, !dbg !18658
  %8 = load i32, i32* %index.addr, align 4, !dbg !18659
  %idxprom = zext i32 %8 to i64, !dbg !18657
  %arrayidx = getelementptr %struct.macb_dma_desc, %struct.macb_dma_desc* %7, i64 %idxprom, !dbg !18657
  ret %struct.macb_dma_desc* %arrayidx, !dbg !18660
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @macb_get_addr(%struct.macb* %bp, %struct.macb_dma_desc* %desc) #2 !dbg !18661 {
entry:
  %bp.addr = alloca %struct.macb*, align 8
  %desc.addr = alloca %struct.macb_dma_desc*, align 8
  %addr = alloca i64, align 8
  %desc_64 = alloca %struct.macb_dma_desc_64*, align 8
  store %struct.macb* %bp, %struct.macb** %bp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.macb** %bp.addr, metadata !18664, metadata !DIExpression()), !dbg !18665
  store %struct.macb_dma_desc* %desc, %struct.macb_dma_desc** %desc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.macb_dma_desc** %desc.addr, metadata !18666, metadata !DIExpression()), !dbg !18667
  call void @llvm.dbg.declare(metadata i64* %addr, metadata !18668, metadata !DIExpression()), !dbg !18669
  store i64 0, i64* %addr, align 8, !dbg !18669
  call void @llvm.dbg.declare(metadata %struct.macb_dma_desc_64** %desc_64, metadata !18670, metadata !DIExpression()), !dbg !18671
  %0 = load %struct.macb*, %struct.macb** %bp.addr, align 8, !dbg !18672
  %hw_dma_cap = getelementptr inbounds %struct.macb, %struct.macb* %0, i32 0, i32 35, !dbg !18674
  %1 = load i8, i8* %hw_dma_cap, align 8, !dbg !18674
  %conv = zext i8 %1 to i32, !dbg !18672
  %and = and i32 %conv, 1, !dbg !18675
  %tobool = icmp ne i32 %and, 0, !dbg !18675
  br i1 %tobool, label %if.then, label %if.end, !dbg !18676

if.then:                                          ; preds = %entry
  %2 = load %struct.macb*, %struct.macb** %bp.addr, align 8, !dbg !18677
  %3 = load %struct.macb_dma_desc*, %struct.macb_dma_desc** %desc.addr, align 8, !dbg !18679
  %call = call %struct.macb_dma_desc_64* @macb_64b_desc(%struct.macb* %2, %struct.macb_dma_desc* %3) #12, !dbg !18680
  store %struct.macb_dma_desc_64* %call, %struct.macb_dma_desc_64** %desc_64, align 8, !dbg !18681
  %4 = load %struct.macb_dma_desc_64*, %struct.macb_dma_desc_64** %desc_64, align 8, !dbg !18682
  %addrh = getelementptr inbounds %struct.macb_dma_desc_64, %struct.macb_dma_desc_64* %4, i32 0, i32 0, !dbg !18683
  %5 = load i32, i32* %addrh, align 4, !dbg !18683
  %conv1 = zext i32 %5 to i64, !dbg !18684
  %shl = shl i64 %conv1, 32, !dbg !18685
  store i64 %shl, i64* %addr, align 8, !dbg !18686
  br label %if.end, !dbg !18687

if.end:                                           ; preds = %if.then, %entry
  %6 = load %struct.macb_dma_desc*, %struct.macb_dma_desc** %desc.addr, align 8, !dbg !18688
  %addr2 = getelementptr inbounds %struct.macb_dma_desc, %struct.macb_dma_desc* %6, i32 0, i32 0, !dbg !18688
  %7 = load i32, i32* %addr2, align 4, !dbg !18688
  %shr = lshr i32 %7, 2, !dbg !18688
  %and3 = and i32 %shr, 1073741823, !dbg !18688
  %and4 = and i32 %and3, 1073741823, !dbg !18688
  %shl5 = shl i32 %and4, 2, !dbg !18688
  %conv6 = zext i32 %shl5 to i64, !dbg !18688
  %8 = load i64, i64* %addr, align 8, !dbg !18689
  %or = or i64 %8, %conv6, !dbg !18689
  store i64 %or, i64* %addr, align 8, !dbg !18689
  %9 = load i64, i64* %addr, align 8, !dbg !18690
  ret i64 %9, !dbg !18691
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @macb_rx_ring_wrap(%struct.macb* %bp, i32 %index) #2 !dbg !18692 {
entry:
  %bp.addr = alloca %struct.macb*, align 8
  %index.addr = alloca i32, align 4
  store %struct.macb* %bp, %struct.macb** %bp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.macb** %bp.addr, metadata !18693, metadata !DIExpression()), !dbg !18694
  store i32 %index, i32* %index.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %index.addr, metadata !18695, metadata !DIExpression()), !dbg !18696
  %0 = load i32, i32* %index.addr, align 4, !dbg !18697
  %1 = load %struct.macb*, %struct.macb** %bp.addr, align 8, !dbg !18698
  %rx_ring_size = getelementptr inbounds %struct.macb, %struct.macb* %1, i32 0, i32 5, !dbg !18699
  %2 = load i32, i32* %rx_ring_size, align 8, !dbg !18699
  %sub = sub i32 %2, 1, !dbg !18700
  %and = and i32 %0, %sub, !dbg !18701
  ret i32 %and, !dbg !18702
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @gem_rx_refill(%struct.macb_queue* %queue) #2 !dbg !18703 {
entry:
  %queue.addr = alloca %struct.macb_queue*, align 8
  %entry1 = alloca i32, align 4
  %skb = alloca %struct.sk_buff*, align 8
  %paddr = alloca i64, align 8
  %bp = alloca %struct.macb*, align 8
  %desc = alloca %struct.macb_dma_desc*, align 8
  %tmp = alloca i32, align 4
  store %struct.macb_queue* %queue, %struct.macb_queue** %queue.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.macb_queue** %queue.addr, metadata !18704, metadata !DIExpression()), !dbg !18705
  call void @llvm.dbg.declare(metadata i32* %entry1, metadata !18706, metadata !DIExpression()), !dbg !18707
  call void @llvm.dbg.declare(metadata %struct.sk_buff** %skb, metadata !18708, metadata !DIExpression()), !dbg !18709
  call void @llvm.dbg.declare(metadata i64* %paddr, metadata !18710, metadata !DIExpression()), !dbg !18711
  call void @llvm.dbg.declare(metadata %struct.macb** %bp, metadata !18712, metadata !DIExpression()), !dbg !18713
  %0 = load %struct.macb_queue*, %struct.macb_queue** %queue.addr, align 8, !dbg !18714
  %bp2 = getelementptr inbounds %struct.macb_queue, %struct.macb_queue* %0, i32 0, i32 0, !dbg !18715
  %1 = load %struct.macb*, %struct.macb** %bp2, align 8, !dbg !18715
  store %struct.macb* %1, %struct.macb** %bp, align 8, !dbg !18713
  call void @llvm.dbg.declare(metadata %struct.macb_dma_desc** %desc, metadata !18716, metadata !DIExpression()), !dbg !18717
  br label %while.cond, !dbg !18718

while.cond:                                       ; preds = %if.end35, %entry
  %2 = load %struct.macb_queue*, %struct.macb_queue** %queue.addr, align 8, !dbg !18719
  %rx_tail = getelementptr inbounds %struct.macb_queue, %struct.macb_queue* %2, i32 0, i32 19, !dbg !18719
  %3 = load i32, i32* %rx_tail, align 8, !dbg !18719
  %4 = load %struct.macb_queue*, %struct.macb_queue** %queue.addr, align 8, !dbg !18719
  %rx_prepared_head = getelementptr inbounds %struct.macb_queue, %struct.macb_queue* %4, i32 0, i32 20, !dbg !18719
  %5 = load i32, i32* %rx_prepared_head, align 4, !dbg !18719
  %add = add i32 %5, 1, !dbg !18719
  %sub = sub i32 %3, %add, !dbg !18719
  %6 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !18719
  %rx_ring_size = getelementptr inbounds %struct.macb, %struct.macb* %6, i32 0, i32 5, !dbg !18719
  %7 = load i32, i32* %rx_ring_size, align 8, !dbg !18719
  %sub3 = sub i32 %7, 1, !dbg !18719
  %and = and i32 %sub, %sub3, !dbg !18719
  %cmp = icmp ugt i32 %and, 0, !dbg !18720
  br i1 %cmp, label %while.body, label %while.end, !dbg !18718

while.body:                                       ; preds = %while.cond
  %8 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !18721
  %9 = load %struct.macb_queue*, %struct.macb_queue** %queue.addr, align 8, !dbg !18723
  %rx_prepared_head4 = getelementptr inbounds %struct.macb_queue, %struct.macb_queue* %9, i32 0, i32 20, !dbg !18724
  %10 = load i32, i32* %rx_prepared_head4, align 4, !dbg !18724
  %call = call i32 @macb_rx_ring_wrap(%struct.macb* %8, i32 %10) #12, !dbg !18725
  store i32 %call, i32* %entry1, align 4, !dbg !18726
  call void asm sideeffect "lfence", "~{memory},~{dirflag},~{fpsr},~{flags}"() #8, !dbg !18727, !srcloc !18728
  %11 = load %struct.macb_queue*, %struct.macb_queue** %queue.addr, align 8, !dbg !18729
  %rx_prepared_head5 = getelementptr inbounds %struct.macb_queue, %struct.macb_queue* %11, i32 0, i32 20, !dbg !18730
  %12 = load i32, i32* %rx_prepared_head5, align 4, !dbg !18731
  %inc = add i32 %12, 1, !dbg !18731
  store i32 %inc, i32* %rx_prepared_head5, align 4, !dbg !18731
  %13 = load %struct.macb_queue*, %struct.macb_queue** %queue.addr, align 8, !dbg !18732
  %14 = load i32, i32* %entry1, align 4, !dbg !18733
  %call6 = call %struct.macb_dma_desc* @macb_rx_desc(%struct.macb_queue* %13, i32 %14) #12, !dbg !18734
  store %struct.macb_dma_desc* %call6, %struct.macb_dma_desc** %desc, align 8, !dbg !18735
  %15 = load %struct.macb_queue*, %struct.macb_queue** %queue.addr, align 8, !dbg !18736
  %rx_skbuff = getelementptr inbounds %struct.macb_queue, %struct.macb_queue* %15, i32 0, i32 22, !dbg !18738
  %16 = load %struct.sk_buff**, %struct.sk_buff*** %rx_skbuff, align 8, !dbg !18738
  %17 = load i32, i32* %entry1, align 4, !dbg !18739
  %idxprom = zext i32 %17 to i64, !dbg !18736
  %arrayidx = getelementptr %struct.sk_buff*, %struct.sk_buff** %16, i64 %idxprom, !dbg !18736
  %18 = load %struct.sk_buff*, %struct.sk_buff** %arrayidx, align 8, !dbg !18736
  %tobool = icmp ne %struct.sk_buff* %18, null, !dbg !18736
  br i1 %tobool, label %if.else, label %if.then, !dbg !18740

if.then:                                          ; preds = %while.body
  %19 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !18741
  %dev = getelementptr inbounds %struct.macb, %struct.macb* %19, i32 0, i32 17, !dbg !18743
  %20 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !18743
  %21 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !18744
  %rx_buffer_size = getelementptr inbounds %struct.macb, %struct.macb* %21, i32 0, i32 4, !dbg !18745
  %22 = load i64, i64* %rx_buffer_size, align 8, !dbg !18745
  %conv = trunc i64 %22 to i32, !dbg !18744
  %call7 = call %struct.sk_buff* @netdev_alloc_skb(%struct.net_device* %20, i32 %conv) #12, !dbg !18746
  store %struct.sk_buff* %call7, %struct.sk_buff** %skb, align 8, !dbg !18747
  %23 = load %struct.sk_buff*, %struct.sk_buff** %skb, align 8, !dbg !18748
  %tobool8 = icmp ne %struct.sk_buff* %23, null, !dbg !18748
  %lnot = xor i1 %tobool8, true, !dbg !18748
  %lnot9 = xor i1 %lnot, true, !dbg !18748
  %lnot10 = xor i1 %lnot9, true, !dbg !18748
  %lnot.ext = zext i1 %lnot10 to i32, !dbg !18748
  %conv11 = sext i32 %lnot.ext to i64, !dbg !18748
  %tobool12 = icmp ne i64 %conv11, 0, !dbg !18748
  br i1 %tobool12, label %if.then13, label %if.end, !dbg !18750

if.then13:                                        ; preds = %if.then
  %24 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !18751
  %dev14 = getelementptr inbounds %struct.macb, %struct.macb* %24, i32 0, i32 17, !dbg !18753
  %25 = load %struct.net_device*, %struct.net_device** %dev14, align 8, !dbg !18753
  call void (%struct.net_device*, i8*, ...) @netdev_err(%struct.net_device* %25, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.34, i64 0, i64 0)) #13, !dbg !18754
  br label %while.end, !dbg !18755

if.end:                                           ; preds = %if.then
  %26 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !18756
  %pdev = getelementptr inbounds %struct.macb, %struct.macb* %26, i32 0, i32 11, !dbg !18756
  %27 = load %struct.platform_device*, %struct.platform_device** %pdev, align 8, !dbg !18756
  %dev15 = getelementptr inbounds %struct.platform_device, %struct.platform_device* %27, i32 0, i32 3, !dbg !18756
  %28 = load %struct.sk_buff*, %struct.sk_buff** %skb, align 8, !dbg !18756
  %data = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %28, i32 0, i32 37, !dbg !18756
  %29 = load i8*, i8** %data, align 8, !dbg !18756
  %30 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !18756
  %rx_buffer_size16 = getelementptr inbounds %struct.macb, %struct.macb* %30, i32 0, i32 4, !dbg !18756
  %31 = load i64, i64* %rx_buffer_size16, align 8, !dbg !18756
  %call17 = call i64 @dma_map_single_attrs(%struct.device* %dev15, i8* %29, i64 %31, i32 2, i64 0) #12, !dbg !18756
  store i64 %call17, i64* %paddr, align 8, !dbg !18757
  %32 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !18758
  %pdev18 = getelementptr inbounds %struct.macb, %struct.macb* %32, i32 0, i32 11, !dbg !18760
  %33 = load %struct.platform_device*, %struct.platform_device** %pdev18, align 8, !dbg !18760
  %dev19 = getelementptr inbounds %struct.platform_device, %struct.platform_device* %33, i32 0, i32 3, !dbg !18761
  %34 = load i64, i64* %paddr, align 8, !dbg !18762
  %call20 = call i32 @dma_mapping_error(%struct.device* %dev19, i64 %34) #12, !dbg !18763
  %tobool21 = icmp ne i32 %call20, 0, !dbg !18763
  br i1 %tobool21, label %if.then22, label %if.end23, !dbg !18764

if.then22:                                        ; preds = %if.end
  %35 = load %struct.sk_buff*, %struct.sk_buff** %skb, align 8, !dbg !18765
  call void @consume_skb(%struct.sk_buff* %35) #12, !dbg !18765
  br label %while.end, !dbg !18767

if.end23:                                         ; preds = %if.end
  %36 = load %struct.sk_buff*, %struct.sk_buff** %skb, align 8, !dbg !18768
  %37 = load %struct.macb_queue*, %struct.macb_queue** %queue.addr, align 8, !dbg !18769
  %rx_skbuff24 = getelementptr inbounds %struct.macb_queue, %struct.macb_queue* %37, i32 0, i32 22, !dbg !18770
  %38 = load %struct.sk_buff**, %struct.sk_buff*** %rx_skbuff24, align 8, !dbg !18770
  %39 = load i32, i32* %entry1, align 4, !dbg !18771
  %idxprom25 = zext i32 %39 to i64, !dbg !18769
  %arrayidx26 = getelementptr %struct.sk_buff*, %struct.sk_buff** %38, i64 %idxprom25, !dbg !18769
  store %struct.sk_buff* %36, %struct.sk_buff** %arrayidx26, align 8, !dbg !18772
  %40 = load i32, i32* %entry1, align 4, !dbg !18773
  %41 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !18775
  %rx_ring_size27 = getelementptr inbounds %struct.macb, %struct.macb* %41, i32 0, i32 5, !dbg !18776
  %42 = load i32, i32* %rx_ring_size27, align 8, !dbg !18776
  %sub28 = sub i32 %42, 1, !dbg !18777
  %cmp29 = icmp eq i32 %40, %sub28, !dbg !18778
  br i1 %cmp29, label %if.then31, label %if.end32, !dbg !18779

if.then31:                                        ; preds = %if.end23
  %43 = load i64, i64* %paddr, align 8, !dbg !18780
  %or = or i64 %43, 2, !dbg !18780
  store i64 %or, i64* %paddr, align 8, !dbg !18780
  br label %if.end32, !dbg !18781

if.end32:                                         ; preds = %if.then31, %if.end23
  %44 = load %struct.macb_dma_desc*, %struct.macb_dma_desc** %desc, align 8, !dbg !18782
  %ctrl = getelementptr inbounds %struct.macb_dma_desc, %struct.macb_dma_desc* %44, i32 0, i32 1, !dbg !18783
  store i32 0, i32* %ctrl, align 4, !dbg !18784
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #8, !dbg !18785, !srcloc !18786
  %45 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !18787
  %46 = load %struct.macb_dma_desc*, %struct.macb_dma_desc** %desc, align 8, !dbg !18788
  %47 = load i64, i64* %paddr, align 8, !dbg !18789
  call void @macb_set_addr(%struct.macb* %45, %struct.macb_dma_desc* %46, i64 %47) #12, !dbg !18790
  %48 = load %struct.sk_buff*, %struct.sk_buff** %skb, align 8, !dbg !18791
  call void @skb_reserve(%struct.sk_buff* %48, i32 0) #12, !dbg !18792
  br label %if.end35, !dbg !18793

if.else:                                          ; preds = %while.body
  %49 = load %struct.macb_dma_desc*, %struct.macb_dma_desc** %desc, align 8, !dbg !18794
  %ctrl33 = getelementptr inbounds %struct.macb_dma_desc, %struct.macb_dma_desc* %49, i32 0, i32 1, !dbg !18796
  store i32 0, i32* %ctrl33, align 4, !dbg !18797
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #8, !dbg !18798, !srcloc !18799
  %50 = load %struct.macb_dma_desc*, %struct.macb_dma_desc** %desc, align 8, !dbg !18800
  %addr = getelementptr inbounds %struct.macb_dma_desc, %struct.macb_dma_desc* %50, i32 0, i32 0, !dbg !18801
  %51 = load i32, i32* %addr, align 4, !dbg !18802
  %and34 = and i32 %51, -2, !dbg !18802
  store i32 %and34, i32* %addr, align 4, !dbg !18802
  br label %if.end35

if.end35:                                         ; preds = %if.else, %if.end32
  br label %while.cond, !dbg !18718, !llvm.loop !18803

while.end:                                        ; preds = %if.then22, %if.then13, %while.cond
  call void asm sideeffect "sfence", "~{memory},~{dirflag},~{fpsr},~{flags}"() #8, !dbg !18805, !srcloc !18806
  store i32 0, i32* %tmp, align 4, !dbg !18807
  %52 = load i32, i32* %tmp, align 4, !dbg !18810
  ret void, !dbg !18811
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.sk_buff* @netdev_alloc_skb(%struct.net_device* %dev, i32 %length) #2 !dbg !18812 {
entry:
  %dev.addr = alloca %struct.net_device*, align 8
  %length.addr = alloca i32, align 4
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !18815, metadata !DIExpression()), !dbg !18816
  store i32 %length, i32* %length.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %length.addr, metadata !18817, metadata !DIExpression()), !dbg !18818
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !18819
  %1 = load i32, i32* %length.addr, align 4, !dbg !18820
  %call = call %struct.sk_buff* @__netdev_alloc_skb(%struct.net_device* %0, i32 %1, i32 2592) #12, !dbg !18821
  ret %struct.sk_buff* %call, !dbg !18822
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @consume_skb(%struct.sk_buff* %skb) #2 !dbg !18823 {
entry:
  %skb.addr = alloca %struct.sk_buff*, align 8
  store %struct.sk_buff* %skb, %struct.sk_buff** %skb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.sk_buff** %skb.addr, metadata !18824, metadata !DIExpression()), !dbg !18825
  %0 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !18826
  call void @kfree_skb(%struct.sk_buff* %0) #12, !dbg !18827
  ret void, !dbg !18828
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @skb_reserve(%struct.sk_buff* %skb, i32 %len) #2 !dbg !18829 {
entry:
  %skb.addr = alloca %struct.sk_buff*, align 8
  %len.addr = alloca i32, align 4
  store %struct.sk_buff* %skb, %struct.sk_buff** %skb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.sk_buff** %skb.addr, metadata !18832, metadata !DIExpression()), !dbg !18833
  store i32 %len, i32* %len.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %len.addr, metadata !18834, metadata !DIExpression()), !dbg !18835
  %0 = load i32, i32* %len.addr, align 4, !dbg !18836
  %1 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !18837
  %data = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %1, i32 0, i32 37, !dbg !18838
  %2 = load i8*, i8** %data, align 8, !dbg !18839
  %idx.ext = sext i32 %0 to i64, !dbg !18839
  %add.ptr = getelementptr i8, i8* %2, i64 %idx.ext, !dbg !18839
  store i8* %add.ptr, i8** %data, align 8, !dbg !18839
  %3 = load i32, i32* %len.addr, align 4, !dbg !18840
  %4 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !18841
  %tail = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %4, i32 0, i32 34, !dbg !18842
  %5 = load i32, i32* %tail, align 8, !dbg !18843
  %add = add i32 %5, %3, !dbg !18843
  store i32 %add, i32* %tail, align 8, !dbg !18843
  ret void, !dbg !18844
}

; Function Attrs: noredzone
declare dso_local %struct.sk_buff* @__netdev_alloc_skb(%struct.net_device*, i32, i32) #1

; Function Attrs: noredzone
declare dso_local void @kfree_skb(%struct.sk_buff*) #1

; Function Attrs: noredzone
declare dso_local zeroext i16 @eth_type_trans(%struct.sk_buff*, %struct.net_device*) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @skb_checksum_none_assert(%struct.sk_buff* %skb) #2 !dbg !18845 {
entry:
  %skb.addr = alloca %struct.sk_buff*, align 8
  store %struct.sk_buff* %skb, %struct.sk_buff** %skb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.sk_buff** %skb.addr, metadata !18848, metadata !DIExpression()), !dbg !18849
  ret void, !dbg !18850
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @gem_ptp_do_rxstamp(%struct.macb* %bp, %struct.sk_buff* %skb, %struct.macb_dma_desc* %desc) #2 !dbg !18851 {
entry:
  %bp.addr = alloca %struct.macb*, align 8
  %skb.addr = alloca %struct.sk_buff*, align 8
  %desc.addr = alloca %struct.macb_dma_desc*, align 8
  store %struct.macb* %bp, %struct.macb** %bp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.macb** %bp.addr, metadata !18854, metadata !DIExpression()), !dbg !18855
  store %struct.sk_buff* %skb, %struct.sk_buff** %skb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.sk_buff** %skb.addr, metadata !18856, metadata !DIExpression()), !dbg !18857
  store %struct.macb_dma_desc* %desc, %struct.macb_dma_desc** %desc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.macb_dma_desc** %desc.addr, metadata !18858, metadata !DIExpression()), !dbg !18859
  %0 = load %struct.macb*, %struct.macb** %bp.addr, align 8, !dbg !18860
  %tstamp_config = getelementptr inbounds %struct.macb, %struct.macb* %0, i32 0, i32 41, !dbg !18862
  %rx_filter = getelementptr inbounds %struct.hwtstamp_config, %struct.hwtstamp_config* %tstamp_config, i32 0, i32 2, !dbg !18863
  %1 = load i32, i32* %rx_filter, align 8, !dbg !18863
  %cmp = icmp eq i32 %1, 0, !dbg !18864
  br i1 %cmp, label %if.then, label %if.end, !dbg !18865

if.then:                                          ; preds = %entry
  br label %return, !dbg !18866

if.end:                                           ; preds = %entry
  %2 = load %struct.macb*, %struct.macb** %bp.addr, align 8, !dbg !18867
  %3 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !18868
  %4 = load %struct.macb_dma_desc*, %struct.macb_dma_desc** %desc.addr, align 8, !dbg !18869
  call void @gem_ptp_rxstamp(%struct.macb* %2, %struct.sk_buff* %3, %struct.macb_dma_desc* %4) #12, !dbg !18870
  br label %return, !dbg !18871

return:                                           ; preds = %if.end, %if.then
  ret void, !dbg !18871
}

; Function Attrs: noredzone
declare dso_local i32 @napi_gro_receive(%struct.napi_struct*, %struct.sk_buff*) #1

; Function Attrs: noredzone
declare dso_local void @gem_ptp_rxstamp(%struct.macb*, %struct.sk_buff*, %struct.macb_dma_desc*) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @macb_get_regs_len(%struct.net_device* %netdev) #2 !dbg !18872 {
entry:
  %netdev.addr = alloca %struct.net_device*, align 8
  store %struct.net_device* %netdev, %struct.net_device** %netdev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %netdev.addr, metadata !18873, metadata !DIExpression()), !dbg !18874
  ret i32 64, !dbg !18875
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @macb_get_regs(%struct.net_device* %dev, %struct.ethtool_regs* %regs, i8* %p) #2 !dbg !18876 {
entry:
  %dev.addr = alloca %struct.net_device*, align 8
  %regs.addr = alloca %struct.ethtool_regs*, align 8
  %p.addr = alloca i8*, align 8
  %bp = alloca %struct.macb*, align 8
  %tail = alloca i32, align 4
  %head = alloca i32, align 4
  %regs_buff = alloca i32*, align 8
  %__v = alloca i32, align 4
  %tmp = alloca i32, align 4
  %__v46 = alloca i32, align 4
  %tmp55 = alloca i32, align 4
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !18877, metadata !DIExpression()), !dbg !18878
  store %struct.ethtool_regs* %regs, %struct.ethtool_regs** %regs.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ethtool_regs** %regs.addr, metadata !18879, metadata !DIExpression()), !dbg !18880
  store i8* %p, i8** %p.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %p.addr, metadata !18881, metadata !DIExpression()), !dbg !18882
  call void @llvm.dbg.declare(metadata %struct.macb** %bp, metadata !18883, metadata !DIExpression()), !dbg !18884
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !18885
  %call = call i8* @netdev_priv(%struct.net_device* %0) #12, !dbg !18886
  %1 = bitcast i8* %call to %struct.macb*, !dbg !18886
  store %struct.macb* %1, %struct.macb** %bp, align 8, !dbg !18884
  call void @llvm.dbg.declare(metadata i32* %tail, metadata !18887, metadata !DIExpression()), !dbg !18888
  call void @llvm.dbg.declare(metadata i32* %head, metadata !18889, metadata !DIExpression()), !dbg !18890
  call void @llvm.dbg.declare(metadata i32** %regs_buff, metadata !18891, metadata !DIExpression()), !dbg !18892
  %2 = load i8*, i8** %p.addr, align 8, !dbg !18893
  %3 = bitcast i8* %2 to i32*, !dbg !18893
  store i32* %3, i32** %regs_buff, align 8, !dbg !18892
  %4 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !18894
  %macb_reg_readl = getelementptr inbounds %struct.macb, %struct.macb* %4, i32 0, i32 2, !dbg !18894
  %5 = load i32 (%struct.macb*, i32)*, i32 (%struct.macb*, i32)** %macb_reg_readl, align 8, !dbg !18894
  %6 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !18894
  %call1 = call i32 %5(%struct.macb* %6, i32 252) #12, !dbg !18894
  %and = and i32 %call1, 65535, !dbg !18895
  %or = or i32 %and, 2, !dbg !18896
  %7 = load %struct.ethtool_regs*, %struct.ethtool_regs** %regs.addr, align 8, !dbg !18897
  %version = getelementptr inbounds %struct.ethtool_regs, %struct.ethtool_regs* %7, i32 0, i32 1, !dbg !18898
  store i32 %or, i32* %version, align 4, !dbg !18899
  %8 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !18900
  %9 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !18901
  %queues = getelementptr inbounds %struct.macb, %struct.macb* %9, i32 0, i32 9, !dbg !18902
  %arrayidx = getelementptr [8 x %struct.macb_queue], [8 x %struct.macb_queue]* %queues, i64 0, i64 0, !dbg !18901
  %tx_tail = getelementptr inbounds %struct.macb_queue, %struct.macb_queue* %arrayidx, i32 0, i32 12, !dbg !18903
  %10 = load i32, i32* %tx_tail, align 4, !dbg !18903
  %call2 = call i32 @macb_tx_ring_wrap(%struct.macb* %8, i32 %10) #12, !dbg !18904
  store i32 %call2, i32* %tail, align 4, !dbg !18905
  %11 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !18906
  %12 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !18907
  %queues3 = getelementptr inbounds %struct.macb, %struct.macb* %12, i32 0, i32 9, !dbg !18908
  %arrayidx4 = getelementptr [8 x %struct.macb_queue], [8 x %struct.macb_queue]* %queues3, i64 0, i64 0, !dbg !18907
  %tx_head = getelementptr inbounds %struct.macb_queue, %struct.macb_queue* %arrayidx4, i32 0, i32 11, !dbg !18909
  %13 = load i32, i32* %tx_head, align 8, !dbg !18909
  %call5 = call i32 @macb_tx_ring_wrap(%struct.macb* %11, i32 %13) #12, !dbg !18910
  store i32 %call5, i32* %head, align 4, !dbg !18911
  %14 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !18912
  %macb_reg_readl6 = getelementptr inbounds %struct.macb, %struct.macb* %14, i32 0, i32 2, !dbg !18912
  %15 = load i32 (%struct.macb*, i32)*, i32 (%struct.macb*, i32)** %macb_reg_readl6, align 8, !dbg !18912
  %16 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !18912
  %call7 = call i32 %15(%struct.macb* %16, i32 0) #12, !dbg !18912
  %17 = load i32*, i32** %regs_buff, align 8, !dbg !18913
  %arrayidx8 = getelementptr i32, i32* %17, i64 0, !dbg !18913
  store i32 %call7, i32* %arrayidx8, align 4, !dbg !18914
  call void @llvm.dbg.declare(metadata i32* %__v, metadata !18915, metadata !DIExpression()), !dbg !18917
  %18 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !18918
  %call9 = call zeroext i1 @macb_is_gem(%struct.macb* %18) #12, !dbg !18918
  br i1 %call9, label %if.then, label %if.else, !dbg !18917

if.then:                                          ; preds = %entry
  %19 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !18918
  %macb_reg_readl10 = getelementptr inbounds %struct.macb, %struct.macb* %19, i32 0, i32 2, !dbg !18918
  %20 = load i32 (%struct.macb*, i32)*, i32 (%struct.macb*, i32)** %macb_reg_readl10, align 8, !dbg !18918
  %21 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !18918
  %call11 = call i32 %20(%struct.macb* %21, i32 4) #12, !dbg !18918
  store i32 %call11, i32* %__v, align 4, !dbg !18918
  br label %if.end, !dbg !18918

if.else:                                          ; preds = %entry
  %22 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !18918
  %macb_reg_readl12 = getelementptr inbounds %struct.macb, %struct.macb* %22, i32 0, i32 2, !dbg !18918
  %23 = load i32 (%struct.macb*, i32)*, i32 (%struct.macb*, i32)** %macb_reg_readl12, align 8, !dbg !18918
  %24 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !18918
  %call13 = call i32 %23(%struct.macb* %24, i32 4) #12, !dbg !18918
  store i32 %call13, i32* %__v, align 4, !dbg !18918
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %25 = load i32, i32* %__v, align 4, !dbg !18917
  store i32 %25, i32* %tmp, align 4, !dbg !18918
  %26 = load i32, i32* %tmp, align 4, !dbg !18917
  %27 = load i32*, i32** %regs_buff, align 8, !dbg !18920
  %arrayidx14 = getelementptr i32, i32* %27, i64 1, !dbg !18920
  store i32 %26, i32* %arrayidx14, align 4, !dbg !18921
  %28 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !18922
  %macb_reg_readl15 = getelementptr inbounds %struct.macb, %struct.macb* %28, i32 0, i32 2, !dbg !18922
  %29 = load i32 (%struct.macb*, i32)*, i32 (%struct.macb*, i32)** %macb_reg_readl15, align 8, !dbg !18922
  %30 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !18922
  %call16 = call i32 %29(%struct.macb* %30, i32 8) #12, !dbg !18922
  %31 = load i32*, i32** %regs_buff, align 8, !dbg !18923
  %arrayidx17 = getelementptr i32, i32* %31, i64 2, !dbg !18923
  store i32 %call16, i32* %arrayidx17, align 4, !dbg !18924
  %32 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !18925
  %macb_reg_readl18 = getelementptr inbounds %struct.macb, %struct.macb* %32, i32 0, i32 2, !dbg !18925
  %33 = load i32 (%struct.macb*, i32)*, i32 (%struct.macb*, i32)** %macb_reg_readl18, align 8, !dbg !18925
  %34 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !18925
  %call19 = call i32 %33(%struct.macb* %34, i32 20) #12, !dbg !18925
  %35 = load i32*, i32** %regs_buff, align 8, !dbg !18926
  %arrayidx20 = getelementptr i32, i32* %35, i64 3, !dbg !18926
  store i32 %call19, i32* %arrayidx20, align 4, !dbg !18927
  %36 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !18928
  %macb_reg_readl21 = getelementptr inbounds %struct.macb, %struct.macb* %36, i32 0, i32 2, !dbg !18928
  %37 = load i32 (%struct.macb*, i32)*, i32 (%struct.macb*, i32)** %macb_reg_readl21, align 8, !dbg !18928
  %38 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !18928
  %call22 = call i32 %37(%struct.macb* %38, i32 24) #12, !dbg !18928
  %39 = load i32*, i32** %regs_buff, align 8, !dbg !18929
  %arrayidx23 = getelementptr i32, i32* %39, i64 4, !dbg !18929
  store i32 %call22, i32* %arrayidx23, align 4, !dbg !18930
  %40 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !18931
  %macb_reg_readl24 = getelementptr inbounds %struct.macb, %struct.macb* %40, i32 0, i32 2, !dbg !18931
  %41 = load i32 (%struct.macb*, i32)*, i32 (%struct.macb*, i32)** %macb_reg_readl24, align 8, !dbg !18931
  %42 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !18931
  %call25 = call i32 %41(%struct.macb* %42, i32 28) #12, !dbg !18931
  %43 = load i32*, i32** %regs_buff, align 8, !dbg !18932
  %arrayidx26 = getelementptr i32, i32* %43, i64 5, !dbg !18932
  store i32 %call25, i32* %arrayidx26, align 4, !dbg !18933
  %44 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !18934
  %macb_reg_readl27 = getelementptr inbounds %struct.macb, %struct.macb* %44, i32 0, i32 2, !dbg !18934
  %45 = load i32 (%struct.macb*, i32)*, i32 (%struct.macb*, i32)** %macb_reg_readl27, align 8, !dbg !18934
  %46 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !18934
  %call28 = call i32 %45(%struct.macb* %46, i32 32) #12, !dbg !18934
  %47 = load i32*, i32** %regs_buff, align 8, !dbg !18935
  %arrayidx29 = getelementptr i32, i32* %47, i64 6, !dbg !18935
  store i32 %call28, i32* %arrayidx29, align 4, !dbg !18936
  %48 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !18937
  %macb_reg_readl30 = getelementptr inbounds %struct.macb, %struct.macb* %48, i32 0, i32 2, !dbg !18937
  %49 = load i32 (%struct.macb*, i32)*, i32 (%struct.macb*, i32)** %macb_reg_readl30, align 8, !dbg !18937
  %50 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !18937
  %call31 = call i32 %49(%struct.macb* %50, i32 48) #12, !dbg !18937
  %51 = load i32*, i32** %regs_buff, align 8, !dbg !18938
  %arrayidx32 = getelementptr i32, i32* %51, i64 7, !dbg !18938
  store i32 %call31, i32* %arrayidx32, align 4, !dbg !18939
  %52 = load i32, i32* %tail, align 4, !dbg !18940
  %53 = load i32*, i32** %regs_buff, align 8, !dbg !18941
  %arrayidx33 = getelementptr i32, i32* %53, i64 8, !dbg !18941
  store i32 %52, i32* %arrayidx33, align 4, !dbg !18942
  %54 = load i32, i32* %head, align 4, !dbg !18943
  %55 = load i32*, i32** %regs_buff, align 8, !dbg !18944
  %arrayidx34 = getelementptr i32, i32* %55, i64 9, !dbg !18944
  store i32 %54, i32* %arrayidx34, align 4, !dbg !18945
  %56 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !18946
  %queues35 = getelementptr inbounds %struct.macb, %struct.macb* %56, i32 0, i32 9, !dbg !18947
  %arrayidx36 = getelementptr [8 x %struct.macb_queue], [8 x %struct.macb_queue]* %queues35, i64 0, i64 0, !dbg !18946
  %57 = load i32, i32* %tail, align 4, !dbg !18948
  %call37 = call i64 @macb_tx_dma(%struct.macb_queue* %arrayidx36, i32 %57) #12, !dbg !18949
  %conv = trunc i64 %call37 to i32, !dbg !18949
  %58 = load i32*, i32** %regs_buff, align 8, !dbg !18950
  %arrayidx38 = getelementptr i32, i32* %58, i64 10, !dbg !18950
  store i32 %conv, i32* %arrayidx38, align 4, !dbg !18951
  %59 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !18952
  %queues39 = getelementptr inbounds %struct.macb, %struct.macb* %59, i32 0, i32 9, !dbg !18953
  %arrayidx40 = getelementptr [8 x %struct.macb_queue], [8 x %struct.macb_queue]* %queues39, i64 0, i64 0, !dbg !18952
  %60 = load i32, i32* %head, align 4, !dbg !18954
  %call41 = call i64 @macb_tx_dma(%struct.macb_queue* %arrayidx40, i32 %60) #12, !dbg !18955
  %conv42 = trunc i64 %call41 to i32, !dbg !18955
  %61 = load i32*, i32** %regs_buff, align 8, !dbg !18956
  %arrayidx43 = getelementptr i32, i32* %61, i64 11, !dbg !18956
  store i32 %conv42, i32* %arrayidx43, align 4, !dbg !18957
  %62 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !18958
  %caps = getelementptr inbounds %struct.macb, %struct.macb* %62, i32 0, i32 23, !dbg !18960
  %63 = load i32, i32* %caps, align 8, !dbg !18960
  %and44 = and i32 %63, 16, !dbg !18961
  %tobool = icmp ne i32 %and44, 0, !dbg !18961
  br i1 %tobool, label %if.end57, label %if.then45, !dbg !18962

if.then45:                                        ; preds = %if.end
  call void @llvm.dbg.declare(metadata i32* %__v46, metadata !18963, metadata !DIExpression()), !dbg !18965
  %64 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !18966
  %call47 = call zeroext i1 @macb_is_gem(%struct.macb* %64) #12, !dbg !18966
  br i1 %call47, label %if.then48, label %if.else51, !dbg !18965

if.then48:                                        ; preds = %if.then45
  %65 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !18966
  %macb_reg_readl49 = getelementptr inbounds %struct.macb, %struct.macb* %65, i32 0, i32 2, !dbg !18966
  %66 = load i32 (%struct.macb*, i32)*, i32 (%struct.macb*, i32)** %macb_reg_readl49, align 8, !dbg !18966
  %67 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !18966
  %call50 = call i32 %66(%struct.macb* %67, i32 12) #12, !dbg !18966
  store i32 %call50, i32* %__v46, align 4, !dbg !18966
  br label %if.end54, !dbg !18966

if.else51:                                        ; preds = %if.then45
  %68 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !18966
  %macb_reg_readl52 = getelementptr inbounds %struct.macb, %struct.macb* %68, i32 0, i32 2, !dbg !18966
  %69 = load i32 (%struct.macb*, i32)*, i32 (%struct.macb*, i32)** %macb_reg_readl52, align 8, !dbg !18966
  %70 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !18966
  %call53 = call i32 %69(%struct.macb* %70, i32 192) #12, !dbg !18966
  store i32 %call53, i32* %__v46, align 4, !dbg !18966
  br label %if.end54

if.end54:                                         ; preds = %if.else51, %if.then48
  %71 = load i32, i32* %__v46, align 4, !dbg !18965
  store i32 %71, i32* %tmp55, align 4, !dbg !18966
  %72 = load i32, i32* %tmp55, align 4, !dbg !18965
  %73 = load i32*, i32** %regs_buff, align 8, !dbg !18968
  %arrayidx56 = getelementptr i32, i32* %73, i64 12, !dbg !18968
  store i32 %72, i32* %arrayidx56, align 4, !dbg !18969
  br label %if.end57, !dbg !18968

if.end57:                                         ; preds = %if.end54, %if.end
  %74 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !18970
  %call58 = call zeroext i1 @macb_is_gem(%struct.macb* %74) #12, !dbg !18972
  br i1 %call58, label %if.then59, label %if.end63, !dbg !18973

if.then59:                                        ; preds = %if.end57
  %75 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !18974
  %macb_reg_readl60 = getelementptr inbounds %struct.macb, %struct.macb* %75, i32 0, i32 2, !dbg !18974
  %76 = load i32 (%struct.macb*, i32)*, i32 (%struct.macb*, i32)** %macb_reg_readl60, align 8, !dbg !18974
  %77 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !18974
  %call61 = call i32 %76(%struct.macb* %77, i32 16) #12, !dbg !18974
  %78 = load i32*, i32** %regs_buff, align 8, !dbg !18975
  %arrayidx62 = getelementptr i32, i32* %78, i64 13, !dbg !18975
  store i32 %call61, i32* %arrayidx62, align 4, !dbg !18976
  br label %if.end63, !dbg !18975

if.end63:                                         ; preds = %if.then59, %if.end57
  ret void, !dbg !18977
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @macb_get_wol(%struct.net_device* %netdev, %struct.ethtool_wolinfo* %wol) #2 !dbg !18978 {
entry:
  %netdev.addr = alloca %struct.net_device*, align 8
  %wol.addr = alloca %struct.ethtool_wolinfo*, align 8
  %bp = alloca %struct.macb*, align 8
  store %struct.net_device* %netdev, %struct.net_device** %netdev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %netdev.addr, metadata !18979, metadata !DIExpression()), !dbg !18980
  store %struct.ethtool_wolinfo* %wol, %struct.ethtool_wolinfo** %wol.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ethtool_wolinfo** %wol.addr, metadata !18981, metadata !DIExpression()), !dbg !18982
  call void @llvm.dbg.declare(metadata %struct.macb** %bp, metadata !18983, metadata !DIExpression()), !dbg !18984
  %0 = load %struct.net_device*, %struct.net_device** %netdev.addr, align 8, !dbg !18985
  %call = call i8* @netdev_priv(%struct.net_device* %0) #12, !dbg !18986
  %1 = bitcast i8* %call to %struct.macb*, !dbg !18986
  store %struct.macb* %1, %struct.macb** %bp, align 8, !dbg !18984
  %2 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !18987
  %wol1 = getelementptr inbounds %struct.macb, %struct.macb* %2, i32 0, i32 33, !dbg !18989
  %3 = load i32, i32* %wol1, align 8, !dbg !18989
  %and = and i32 %3, 1, !dbg !18990
  %tobool = icmp ne i32 %and, 0, !dbg !18990
  br i1 %tobool, label %if.then, label %if.end7, !dbg !18991

if.then:                                          ; preds = %entry
  %4 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !18992
  %phylink = getelementptr inbounds %struct.macb, %struct.macb* %4, i32 0, i32 21, !dbg !18994
  %5 = load %struct.phylink*, %struct.phylink** %phylink, align 8, !dbg !18994
  %6 = load %struct.ethtool_wolinfo*, %struct.ethtool_wolinfo** %wol.addr, align 8, !dbg !18995
  call void @phylink_ethtool_get_wol(%struct.phylink* %5, %struct.ethtool_wolinfo* %6) #12, !dbg !18996
  %7 = load %struct.ethtool_wolinfo*, %struct.ethtool_wolinfo** %wol.addr, align 8, !dbg !18997
  %supported = getelementptr inbounds %struct.ethtool_wolinfo, %struct.ethtool_wolinfo* %7, i32 0, i32 1, !dbg !18998
  %8 = load i32, i32* %supported, align 4, !dbg !18999
  %or = or i32 %8, 32, !dbg !18999
  store i32 %or, i32* %supported, align 4, !dbg !18999
  %9 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !19000
  %wol2 = getelementptr inbounds %struct.macb, %struct.macb* %9, i32 0, i32 33, !dbg !19002
  %10 = load i32, i32* %wol2, align 8, !dbg !19002
  %and3 = and i32 %10, 2, !dbg !19003
  %tobool4 = icmp ne i32 %and3, 0, !dbg !19003
  br i1 %tobool4, label %if.then5, label %if.end, !dbg !19004

if.then5:                                         ; preds = %if.then
  %11 = load %struct.ethtool_wolinfo*, %struct.ethtool_wolinfo** %wol.addr, align 8, !dbg !19005
  %wolopts = getelementptr inbounds %struct.ethtool_wolinfo, %struct.ethtool_wolinfo* %11, i32 0, i32 2, !dbg !19006
  %12 = load i32, i32* %wolopts, align 4, !dbg !19007
  %or6 = or i32 %12, 32, !dbg !19007
  store i32 %or6, i32* %wolopts, align 4, !dbg !19007
  br label %if.end, !dbg !19005

if.end:                                           ; preds = %if.then5, %if.then
  br label %if.end7, !dbg !19008

if.end7:                                          ; preds = %if.end, %entry
  ret void, !dbg !19009
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @macb_set_wol(%struct.net_device* %netdev, %struct.ethtool_wolinfo* %wol) #2 !dbg !19010 {
entry:
  %retval = alloca i32, align 4
  %netdev.addr = alloca %struct.net_device*, align 8
  %wol.addr = alloca %struct.ethtool_wolinfo*, align 8
  %bp = alloca %struct.macb*, align 8
  %ret = alloca i32, align 4
  store %struct.net_device* %netdev, %struct.net_device** %netdev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %netdev.addr, metadata !19011, metadata !DIExpression()), !dbg !19012
  store %struct.ethtool_wolinfo* %wol, %struct.ethtool_wolinfo** %wol.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ethtool_wolinfo** %wol.addr, metadata !19013, metadata !DIExpression()), !dbg !19014
  call void @llvm.dbg.declare(metadata %struct.macb** %bp, metadata !19015, metadata !DIExpression()), !dbg !19016
  %0 = load %struct.net_device*, %struct.net_device** %netdev.addr, align 8, !dbg !19017
  %call = call i8* @netdev_priv(%struct.net_device* %0) #12, !dbg !19018
  %1 = bitcast i8* %call to %struct.macb*, !dbg !19018
  store %struct.macb* %1, %struct.macb** %bp, align 8, !dbg !19016
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !19019, metadata !DIExpression()), !dbg !19020
  %2 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !19021
  %phylink = getelementptr inbounds %struct.macb, %struct.macb* %2, i32 0, i32 21, !dbg !19022
  %3 = load %struct.phylink*, %struct.phylink** %phylink, align 8, !dbg !19022
  %4 = load %struct.ethtool_wolinfo*, %struct.ethtool_wolinfo** %wol.addr, align 8, !dbg !19023
  %call1 = call i32 @phylink_ethtool_set_wol(%struct.phylink* %3, %struct.ethtool_wolinfo* %4) #12, !dbg !19024
  store i32 %call1, i32* %ret, align 4, !dbg !19025
  %5 = load i32, i32* %ret, align 4, !dbg !19026
  %tobool = icmp ne i32 %5, 0, !dbg !19026
  br i1 %tobool, label %lor.lhs.false, label %if.then, !dbg !19028

lor.lhs.false:                                    ; preds = %entry
  %6 = load i32, i32* %ret, align 4, !dbg !19029
  %cmp = icmp ne i32 %6, -95, !dbg !19030
  br i1 %cmp, label %if.then, label %if.end, !dbg !19031

if.then:                                          ; preds = %lor.lhs.false, %entry
  %7 = load i32, i32* %ret, align 4, !dbg !19032
  store i32 %7, i32* %retval, align 4, !dbg !19033
  br label %return, !dbg !19033

if.end:                                           ; preds = %lor.lhs.false
  %8 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !19034
  %wol2 = getelementptr inbounds %struct.macb, %struct.macb* %8, i32 0, i32 33, !dbg !19036
  %9 = load i32, i32* %wol2, align 8, !dbg !19036
  %and = and i32 %9, 1, !dbg !19037
  %tobool3 = icmp ne i32 %and, 0, !dbg !19037
  br i1 %tobool3, label %lor.lhs.false4, label %if.then7, !dbg !19038

lor.lhs.false4:                                   ; preds = %if.end
  %10 = load %struct.ethtool_wolinfo*, %struct.ethtool_wolinfo** %wol.addr, align 8, !dbg !19039
  %wolopts = getelementptr inbounds %struct.ethtool_wolinfo, %struct.ethtool_wolinfo* %10, i32 0, i32 2, !dbg !19040
  %11 = load i32, i32* %wolopts, align 4, !dbg !19040
  %and5 = and i32 %11, -33, !dbg !19041
  %tobool6 = icmp ne i32 %and5, 0, !dbg !19041
  br i1 %tobool6, label %if.then7, label %if.end8, !dbg !19042

if.then7:                                         ; preds = %lor.lhs.false4, %if.end
  store i32 -95, i32* %retval, align 4, !dbg !19043
  br label %return, !dbg !19043

if.end8:                                          ; preds = %lor.lhs.false4
  %12 = load %struct.ethtool_wolinfo*, %struct.ethtool_wolinfo** %wol.addr, align 8, !dbg !19044
  %wolopts9 = getelementptr inbounds %struct.ethtool_wolinfo, %struct.ethtool_wolinfo* %12, i32 0, i32 2, !dbg !19046
  %13 = load i32, i32* %wolopts9, align 4, !dbg !19046
  %and10 = and i32 %13, 32, !dbg !19047
  %tobool11 = icmp ne i32 %and10, 0, !dbg !19047
  br i1 %tobool11, label %if.then12, label %if.else, !dbg !19048

if.then12:                                        ; preds = %if.end8
  %14 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !19049
  %wol13 = getelementptr inbounds %struct.macb, %struct.macb* %14, i32 0, i32 33, !dbg !19050
  %15 = load i32, i32* %wol13, align 8, !dbg !19051
  %or = or i32 %15, 2, !dbg !19051
  store i32 %or, i32* %wol13, align 8, !dbg !19051
  br label %if.end16, !dbg !19049

if.else:                                          ; preds = %if.end8
  %16 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !19052
  %wol14 = getelementptr inbounds %struct.macb, %struct.macb* %16, i32 0, i32 33, !dbg !19053
  %17 = load i32, i32* %wol14, align 8, !dbg !19054
  %and15 = and i32 %17, -3, !dbg !19054
  store i32 %and15, i32* %wol14, align 8, !dbg !19054
  br label %if.end16

if.end16:                                         ; preds = %if.else, %if.then12
  %18 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !19055
  %pdev = getelementptr inbounds %struct.macb, %struct.macb* %18, i32 0, i32 11, !dbg !19056
  %19 = load %struct.platform_device*, %struct.platform_device** %pdev, align 8, !dbg !19056
  %dev = getelementptr inbounds %struct.platform_device, %struct.platform_device* %19, i32 0, i32 3, !dbg !19057
  %20 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !19058
  %wol17 = getelementptr inbounds %struct.macb, %struct.macb* %20, i32 0, i32 33, !dbg !19059
  %21 = load i32, i32* %wol17, align 8, !dbg !19059
  %and18 = and i32 %21, 2, !dbg !19060
  %tobool19 = icmp ne i32 %and18, 0, !dbg !19058
  %call20 = call i32 @device_set_wakeup_enable(%struct.device* %dev, i1 zeroext %tobool19) #12, !dbg !19061
  store i32 0, i32* %retval, align 4, !dbg !19062
  br label %return, !dbg !19062

return:                                           ; preds = %if.end16, %if.then7, %if.then
  %22 = load i32, i32* %retval, align 4, !dbg !19063
  ret i32 %22, !dbg !19063
}

; Function Attrs: noredzone
declare dso_local i32 @ethtool_op_get_link(%struct.net_device*) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @macb_get_ringparam(%struct.net_device* %netdev, %struct.ethtool_ringparam* %ring) #2 !dbg !19064 {
entry:
  %netdev.addr = alloca %struct.net_device*, align 8
  %ring.addr = alloca %struct.ethtool_ringparam*, align 8
  %bp = alloca %struct.macb*, align 8
  store %struct.net_device* %netdev, %struct.net_device** %netdev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %netdev.addr, metadata !19065, metadata !DIExpression()), !dbg !19066
  store %struct.ethtool_ringparam* %ring, %struct.ethtool_ringparam** %ring.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ethtool_ringparam** %ring.addr, metadata !19067, metadata !DIExpression()), !dbg !19068
  call void @llvm.dbg.declare(metadata %struct.macb** %bp, metadata !19069, metadata !DIExpression()), !dbg !19070
  %0 = load %struct.net_device*, %struct.net_device** %netdev.addr, align 8, !dbg !19071
  %call = call i8* @netdev_priv(%struct.net_device* %0) #12, !dbg !19072
  %1 = bitcast i8* %call to %struct.macb*, !dbg !19072
  store %struct.macb* %1, %struct.macb** %bp, align 8, !dbg !19070
  %2 = load %struct.ethtool_ringparam*, %struct.ethtool_ringparam** %ring.addr, align 8, !dbg !19073
  %rx_max_pending = getelementptr inbounds %struct.ethtool_ringparam, %struct.ethtool_ringparam* %2, i32 0, i32 1, !dbg !19074
  store i32 8192, i32* %rx_max_pending, align 4, !dbg !19075
  %3 = load %struct.ethtool_ringparam*, %struct.ethtool_ringparam** %ring.addr, align 8, !dbg !19076
  %tx_max_pending = getelementptr inbounds %struct.ethtool_ringparam, %struct.ethtool_ringparam* %3, i32 0, i32 4, !dbg !19077
  store i32 4096, i32* %tx_max_pending, align 4, !dbg !19078
  %4 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !19079
  %rx_ring_size = getelementptr inbounds %struct.macb, %struct.macb* %4, i32 0, i32 5, !dbg !19080
  %5 = load i32, i32* %rx_ring_size, align 8, !dbg !19080
  %6 = load %struct.ethtool_ringparam*, %struct.ethtool_ringparam** %ring.addr, align 8, !dbg !19081
  %rx_pending = getelementptr inbounds %struct.ethtool_ringparam, %struct.ethtool_ringparam* %6, i32 0, i32 5, !dbg !19082
  store i32 %5, i32* %rx_pending, align 4, !dbg !19083
  %7 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !19084
  %tx_ring_size = getelementptr inbounds %struct.macb, %struct.macb* %7, i32 0, i32 6, !dbg !19085
  %8 = load i32, i32* %tx_ring_size, align 4, !dbg !19085
  %9 = load %struct.ethtool_ringparam*, %struct.ethtool_ringparam** %ring.addr, align 8, !dbg !19086
  %tx_pending = getelementptr inbounds %struct.ethtool_ringparam, %struct.ethtool_ringparam* %9, i32 0, i32 8, !dbg !19087
  store i32 %8, i32* %tx_pending, align 4, !dbg !19088
  ret void, !dbg !19089
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @macb_set_ringparam(%struct.net_device* %netdev, %struct.ethtool_ringparam* %ring) #2 !dbg !19090 {
entry:
  %retval = alloca i32, align 4
  %netdev.addr = alloca %struct.net_device*, align 8
  %ring.addr = alloca %struct.ethtool_ringparam*, align 8
  %bp = alloca %struct.macb*, align 8
  %new_rx_size = alloca i32, align 4
  %new_tx_size = alloca i32, align 4
  %reset = alloca i32, align 4
  %__UNIQUE_ID___x540 = alloca i32, align 4
  %__UNIQUE_ID___x538 = alloca i32, align 4
  %__UNIQUE_ID___y539 = alloca i32, align 4
  %tmp = alloca i32, align 4
  %__UNIQUE_ID___y541 = alloca i32, align 4
  %tmp2 = alloca i32, align 4
  %__UNIQUE_ID___x544 = alloca i32, align 4
  %__UNIQUE_ID___x542 = alloca i32, align 4
  %__UNIQUE_ID___y543 = alloca i32, align 4
  %tmp528 = alloca i32, align 4
  %__UNIQUE_ID___y545 = alloca i32, align 4
  %tmp535 = alloca i32, align 4
  store %struct.net_device* %netdev, %struct.net_device** %netdev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %netdev.addr, metadata !19091, metadata !DIExpression()), !dbg !19092
  store %struct.ethtool_ringparam* %ring, %struct.ethtool_ringparam** %ring.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ethtool_ringparam** %ring.addr, metadata !19093, metadata !DIExpression()), !dbg !19094
  call void @llvm.dbg.declare(metadata %struct.macb** %bp, metadata !19095, metadata !DIExpression()), !dbg !19096
  %0 = load %struct.net_device*, %struct.net_device** %netdev.addr, align 8, !dbg !19097
  %call = call i8* @netdev_priv(%struct.net_device* %0) #12, !dbg !19098
  %1 = bitcast i8* %call to %struct.macb*, !dbg !19098
  store %struct.macb* %1, %struct.macb** %bp, align 8, !dbg !19096
  call void @llvm.dbg.declare(metadata i32* %new_rx_size, metadata !19099, metadata !DIExpression()), !dbg !19100
  call void @llvm.dbg.declare(metadata i32* %new_tx_size, metadata !19101, metadata !DIExpression()), !dbg !19102
  call void @llvm.dbg.declare(metadata i32* %reset, metadata !19103, metadata !DIExpression()), !dbg !19104
  store i32 0, i32* %reset, align 4, !dbg !19104
  %2 = load %struct.ethtool_ringparam*, %struct.ethtool_ringparam** %ring.addr, align 8, !dbg !19105
  %rx_mini_pending = getelementptr inbounds %struct.ethtool_ringparam, %struct.ethtool_ringparam* %2, i32 0, i32 6, !dbg !19107
  %3 = load i32, i32* %rx_mini_pending, align 4, !dbg !19107
  %tobool = icmp ne i32 %3, 0, !dbg !19108
  br i1 %tobool, label %if.then, label %lor.lhs.false, !dbg !19109

lor.lhs.false:                                    ; preds = %entry
  %4 = load %struct.ethtool_ringparam*, %struct.ethtool_ringparam** %ring.addr, align 8, !dbg !19110
  %rx_jumbo_pending = getelementptr inbounds %struct.ethtool_ringparam, %struct.ethtool_ringparam* %4, i32 0, i32 7, !dbg !19111
  %5 = load i32, i32* %rx_jumbo_pending, align 4, !dbg !19111
  %tobool1 = icmp ne i32 %5, 0, !dbg !19112
  br i1 %tobool1, label %if.then, label %if.end, !dbg !19113

if.then:                                          ; preds = %lor.lhs.false, %entry
  store i32 -22, i32* %retval, align 4, !dbg !19114
  br label %return, !dbg !19114

if.end:                                           ; preds = %lor.lhs.false
  call void @llvm.dbg.declare(metadata i32* %__UNIQUE_ID___x540, metadata !19115, metadata !DIExpression()), !dbg !19117
  call void @llvm.dbg.declare(metadata i32* %__UNIQUE_ID___x538, metadata !19118, metadata !DIExpression()), !dbg !19120
  %6 = load %struct.ethtool_ringparam*, %struct.ethtool_ringparam** %ring.addr, align 8, !dbg !19120
  %rx_pending = getelementptr inbounds %struct.ethtool_ringparam, %struct.ethtool_ringparam* %6, i32 0, i32 5, !dbg !19120
  %7 = load i32, i32* %rx_pending, align 4, !dbg !19120
  store i32 %7, i32* %__UNIQUE_ID___x538, align 4, !dbg !19120
  call void @llvm.dbg.declare(metadata i32* %__UNIQUE_ID___y539, metadata !19121, metadata !DIExpression()), !dbg !19120
  store i32 64, i32* %__UNIQUE_ID___y539, align 4, !dbg !19120
  %8 = load i32, i32* %__UNIQUE_ID___x538, align 4, !dbg !19120
  %9 = load i32, i32* %__UNIQUE_ID___y539, align 4, !dbg !19120
  %cmp = icmp ugt i32 %8, %9, !dbg !19120
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !19120

cond.true:                                        ; preds = %if.end
  %10 = load i32, i32* %__UNIQUE_ID___x538, align 4, !dbg !19120
  br label %cond.end, !dbg !19120

cond.false:                                       ; preds = %if.end
  %11 = load i32, i32* %__UNIQUE_ID___y539, align 4, !dbg !19120
  br label %cond.end, !dbg !19120

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %10, %cond.true ], [ %11, %cond.false ], !dbg !19120
  store i32 %cond, i32* %tmp, align 4, !dbg !19120
  %12 = load i32, i32* %tmp, align 4, !dbg !19120
  store i32 %12, i32* %__UNIQUE_ID___x540, align 4, !dbg !19117
  call void @llvm.dbg.declare(metadata i32* %__UNIQUE_ID___y541, metadata !19122, metadata !DIExpression()), !dbg !19117
  store i32 8192, i32* %__UNIQUE_ID___y541, align 4, !dbg !19117
  %13 = load i32, i32* %__UNIQUE_ID___x540, align 4, !dbg !19117
  %14 = load i32, i32* %__UNIQUE_ID___y541, align 4, !dbg !19117
  %cmp3 = icmp ult i32 %13, %14, !dbg !19117
  br i1 %cmp3, label %cond.true4, label %cond.false5, !dbg !19117

cond.true4:                                       ; preds = %cond.end
  %15 = load i32, i32* %__UNIQUE_ID___x540, align 4, !dbg !19117
  br label %cond.end6, !dbg !19117

cond.false5:                                      ; preds = %cond.end
  %16 = load i32, i32* %__UNIQUE_ID___y541, align 4, !dbg !19117
  br label %cond.end6, !dbg !19117

cond.end6:                                        ; preds = %cond.false5, %cond.true4
  %cond7 = phi i32 [ %15, %cond.true4 ], [ %16, %cond.false5 ], !dbg !19117
  store i32 %cond7, i32* %tmp2, align 4, !dbg !19117
  %17 = load i32, i32* %tmp2, align 4, !dbg !19117
  store i32 %17, i32* %new_rx_size, align 4, !dbg !19123
  %18 = load i32, i32* %new_rx_size, align 4, !dbg !19124
  %19 = call i1 @llvm.is.constant.i32(i32 %18), !dbg !19124
  br i1 %19, label %cond.true8, label %cond.false522, !dbg !19124

cond.true8:                                       ; preds = %cond.end6
  %20 = load i32, i32* %new_rx_size, align 4, !dbg !19124
  %cmp9 = icmp eq i32 %20, 1, !dbg !19124
  br i1 %cmp9, label %cond.true10, label %cond.false11, !dbg !19124

cond.true10:                                      ; preds = %cond.true8
  br label %cond.end520, !dbg !19124

cond.false11:                                     ; preds = %cond.true8
  %21 = load i32, i32* %new_rx_size, align 4, !dbg !19124
  %sub = sub i32 %21, 1, !dbg !19124
  %22 = call i1 @llvm.is.constant.i32(i32 %sub), !dbg !19124
  br i1 %22, label %cond.true12, label %cond.false515, !dbg !19124

cond.true12:                                      ; preds = %cond.false11
  %23 = load i32, i32* %new_rx_size, align 4, !dbg !19124
  %sub13 = sub i32 %23, 1, !dbg !19124
  %24 = call i1 @llvm.is.constant.i32(i32 %sub13), !dbg !19124
  br i1 %24, label %cond.true14, label %cond.false512, !dbg !19124

cond.true14:                                      ; preds = %cond.true12
  %25 = load i32, i32* %new_rx_size, align 4, !dbg !19124
  %sub15 = sub i32 %25, 1, !dbg !19124
  %cmp16 = icmp ult i32 %sub15, 2, !dbg !19124
  br i1 %cmp16, label %cond.true17, label %cond.false18, !dbg !19124

cond.true17:                                      ; preds = %cond.true14
  br label %cond.end510, !dbg !19124

cond.false18:                                     ; preds = %cond.true14
  %26 = load i32, i32* %new_rx_size, align 4, !dbg !19124
  %sub19 = sub i32 %26, 1, !dbg !19124
  %conv = zext i32 %sub19 to i64, !dbg !19124
  %and = and i64 %conv, -9223372036854775808, !dbg !19124
  %tobool20 = icmp ne i64 %and, 0, !dbg !19124
  br i1 %tobool20, label %cond.true21, label %cond.false22, !dbg !19124

cond.true21:                                      ; preds = %cond.false18
  br label %cond.end508, !dbg !19124

cond.false22:                                     ; preds = %cond.false18
  %27 = load i32, i32* %new_rx_size, align 4, !dbg !19124
  %sub23 = sub i32 %27, 1, !dbg !19124
  %conv24 = zext i32 %sub23 to i64, !dbg !19124
  %and25 = and i64 %conv24, 4611686018427387904, !dbg !19124
  %tobool26 = icmp ne i64 %and25, 0, !dbg !19124
  br i1 %tobool26, label %cond.true27, label %cond.false28, !dbg !19124

cond.true27:                                      ; preds = %cond.false22
  br label %cond.end506, !dbg !19124

cond.false28:                                     ; preds = %cond.false22
  %28 = load i32, i32* %new_rx_size, align 4, !dbg !19124
  %sub29 = sub i32 %28, 1, !dbg !19124
  %conv30 = zext i32 %sub29 to i64, !dbg !19124
  %and31 = and i64 %conv30, 2305843009213693952, !dbg !19124
  %tobool32 = icmp ne i64 %and31, 0, !dbg !19124
  br i1 %tobool32, label %cond.true33, label %cond.false34, !dbg !19124

cond.true33:                                      ; preds = %cond.false28
  br label %cond.end504, !dbg !19124

cond.false34:                                     ; preds = %cond.false28
  %29 = load i32, i32* %new_rx_size, align 4, !dbg !19124
  %sub35 = sub i32 %29, 1, !dbg !19124
  %conv36 = zext i32 %sub35 to i64, !dbg !19124
  %and37 = and i64 %conv36, 1152921504606846976, !dbg !19124
  %tobool38 = icmp ne i64 %and37, 0, !dbg !19124
  br i1 %tobool38, label %cond.true39, label %cond.false40, !dbg !19124

cond.true39:                                      ; preds = %cond.false34
  br label %cond.end502, !dbg !19124

cond.false40:                                     ; preds = %cond.false34
  %30 = load i32, i32* %new_rx_size, align 4, !dbg !19124
  %sub41 = sub i32 %30, 1, !dbg !19124
  %conv42 = zext i32 %sub41 to i64, !dbg !19124
  %and43 = and i64 %conv42, 576460752303423488, !dbg !19124
  %tobool44 = icmp ne i64 %and43, 0, !dbg !19124
  br i1 %tobool44, label %cond.true45, label %cond.false46, !dbg !19124

cond.true45:                                      ; preds = %cond.false40
  br label %cond.end500, !dbg !19124

cond.false46:                                     ; preds = %cond.false40
  %31 = load i32, i32* %new_rx_size, align 4, !dbg !19124
  %sub47 = sub i32 %31, 1, !dbg !19124
  %conv48 = zext i32 %sub47 to i64, !dbg !19124
  %and49 = and i64 %conv48, 288230376151711744, !dbg !19124
  %tobool50 = icmp ne i64 %and49, 0, !dbg !19124
  br i1 %tobool50, label %cond.true51, label %cond.false52, !dbg !19124

cond.true51:                                      ; preds = %cond.false46
  br label %cond.end498, !dbg !19124

cond.false52:                                     ; preds = %cond.false46
  %32 = load i32, i32* %new_rx_size, align 4, !dbg !19124
  %sub53 = sub i32 %32, 1, !dbg !19124
  %conv54 = zext i32 %sub53 to i64, !dbg !19124
  %and55 = and i64 %conv54, 144115188075855872, !dbg !19124
  %tobool56 = icmp ne i64 %and55, 0, !dbg !19124
  br i1 %tobool56, label %cond.true57, label %cond.false58, !dbg !19124

cond.true57:                                      ; preds = %cond.false52
  br label %cond.end496, !dbg !19124

cond.false58:                                     ; preds = %cond.false52
  %33 = load i32, i32* %new_rx_size, align 4, !dbg !19124
  %sub59 = sub i32 %33, 1, !dbg !19124
  %conv60 = zext i32 %sub59 to i64, !dbg !19124
  %and61 = and i64 %conv60, 72057594037927936, !dbg !19124
  %tobool62 = icmp ne i64 %and61, 0, !dbg !19124
  br i1 %tobool62, label %cond.true63, label %cond.false64, !dbg !19124

cond.true63:                                      ; preds = %cond.false58
  br label %cond.end494, !dbg !19124

cond.false64:                                     ; preds = %cond.false58
  %34 = load i32, i32* %new_rx_size, align 4, !dbg !19124
  %sub65 = sub i32 %34, 1, !dbg !19124
  %conv66 = zext i32 %sub65 to i64, !dbg !19124
  %and67 = and i64 %conv66, 36028797018963968, !dbg !19124
  %tobool68 = icmp ne i64 %and67, 0, !dbg !19124
  br i1 %tobool68, label %cond.true69, label %cond.false70, !dbg !19124

cond.true69:                                      ; preds = %cond.false64
  br label %cond.end492, !dbg !19124

cond.false70:                                     ; preds = %cond.false64
  %35 = load i32, i32* %new_rx_size, align 4, !dbg !19124
  %sub71 = sub i32 %35, 1, !dbg !19124
  %conv72 = zext i32 %sub71 to i64, !dbg !19124
  %and73 = and i64 %conv72, 18014398509481984, !dbg !19124
  %tobool74 = icmp ne i64 %and73, 0, !dbg !19124
  br i1 %tobool74, label %cond.true75, label %cond.false76, !dbg !19124

cond.true75:                                      ; preds = %cond.false70
  br label %cond.end490, !dbg !19124

cond.false76:                                     ; preds = %cond.false70
  %36 = load i32, i32* %new_rx_size, align 4, !dbg !19124
  %sub77 = sub i32 %36, 1, !dbg !19124
  %conv78 = zext i32 %sub77 to i64, !dbg !19124
  %and79 = and i64 %conv78, 9007199254740992, !dbg !19124
  %tobool80 = icmp ne i64 %and79, 0, !dbg !19124
  br i1 %tobool80, label %cond.true81, label %cond.false82, !dbg !19124

cond.true81:                                      ; preds = %cond.false76
  br label %cond.end488, !dbg !19124

cond.false82:                                     ; preds = %cond.false76
  %37 = load i32, i32* %new_rx_size, align 4, !dbg !19124
  %sub83 = sub i32 %37, 1, !dbg !19124
  %conv84 = zext i32 %sub83 to i64, !dbg !19124
  %and85 = and i64 %conv84, 4503599627370496, !dbg !19124
  %tobool86 = icmp ne i64 %and85, 0, !dbg !19124
  br i1 %tobool86, label %cond.true87, label %cond.false88, !dbg !19124

cond.true87:                                      ; preds = %cond.false82
  br label %cond.end486, !dbg !19124

cond.false88:                                     ; preds = %cond.false82
  %38 = load i32, i32* %new_rx_size, align 4, !dbg !19124
  %sub89 = sub i32 %38, 1, !dbg !19124
  %conv90 = zext i32 %sub89 to i64, !dbg !19124
  %and91 = and i64 %conv90, 2251799813685248, !dbg !19124
  %tobool92 = icmp ne i64 %and91, 0, !dbg !19124
  br i1 %tobool92, label %cond.true93, label %cond.false94, !dbg !19124

cond.true93:                                      ; preds = %cond.false88
  br label %cond.end484, !dbg !19124

cond.false94:                                     ; preds = %cond.false88
  %39 = load i32, i32* %new_rx_size, align 4, !dbg !19124
  %sub95 = sub i32 %39, 1, !dbg !19124
  %conv96 = zext i32 %sub95 to i64, !dbg !19124
  %and97 = and i64 %conv96, 1125899906842624, !dbg !19124
  %tobool98 = icmp ne i64 %and97, 0, !dbg !19124
  br i1 %tobool98, label %cond.true99, label %cond.false100, !dbg !19124

cond.true99:                                      ; preds = %cond.false94
  br label %cond.end482, !dbg !19124

cond.false100:                                    ; preds = %cond.false94
  %40 = load i32, i32* %new_rx_size, align 4, !dbg !19124
  %sub101 = sub i32 %40, 1, !dbg !19124
  %conv102 = zext i32 %sub101 to i64, !dbg !19124
  %and103 = and i64 %conv102, 562949953421312, !dbg !19124
  %tobool104 = icmp ne i64 %and103, 0, !dbg !19124
  br i1 %tobool104, label %cond.true105, label %cond.false106, !dbg !19124

cond.true105:                                     ; preds = %cond.false100
  br label %cond.end480, !dbg !19124

cond.false106:                                    ; preds = %cond.false100
  %41 = load i32, i32* %new_rx_size, align 4, !dbg !19124
  %sub107 = sub i32 %41, 1, !dbg !19124
  %conv108 = zext i32 %sub107 to i64, !dbg !19124
  %and109 = and i64 %conv108, 281474976710656, !dbg !19124
  %tobool110 = icmp ne i64 %and109, 0, !dbg !19124
  br i1 %tobool110, label %cond.true111, label %cond.false112, !dbg !19124

cond.true111:                                     ; preds = %cond.false106
  br label %cond.end478, !dbg !19124

cond.false112:                                    ; preds = %cond.false106
  %42 = load i32, i32* %new_rx_size, align 4, !dbg !19124
  %sub113 = sub i32 %42, 1, !dbg !19124
  %conv114 = zext i32 %sub113 to i64, !dbg !19124
  %and115 = and i64 %conv114, 140737488355328, !dbg !19124
  %tobool116 = icmp ne i64 %and115, 0, !dbg !19124
  br i1 %tobool116, label %cond.true117, label %cond.false118, !dbg !19124

cond.true117:                                     ; preds = %cond.false112
  br label %cond.end476, !dbg !19124

cond.false118:                                    ; preds = %cond.false112
  %43 = load i32, i32* %new_rx_size, align 4, !dbg !19124
  %sub119 = sub i32 %43, 1, !dbg !19124
  %conv120 = zext i32 %sub119 to i64, !dbg !19124
  %and121 = and i64 %conv120, 70368744177664, !dbg !19124
  %tobool122 = icmp ne i64 %and121, 0, !dbg !19124
  br i1 %tobool122, label %cond.true123, label %cond.false124, !dbg !19124

cond.true123:                                     ; preds = %cond.false118
  br label %cond.end474, !dbg !19124

cond.false124:                                    ; preds = %cond.false118
  %44 = load i32, i32* %new_rx_size, align 4, !dbg !19124
  %sub125 = sub i32 %44, 1, !dbg !19124
  %conv126 = zext i32 %sub125 to i64, !dbg !19124
  %and127 = and i64 %conv126, 35184372088832, !dbg !19124
  %tobool128 = icmp ne i64 %and127, 0, !dbg !19124
  br i1 %tobool128, label %cond.true129, label %cond.false130, !dbg !19124

cond.true129:                                     ; preds = %cond.false124
  br label %cond.end472, !dbg !19124

cond.false130:                                    ; preds = %cond.false124
  %45 = load i32, i32* %new_rx_size, align 4, !dbg !19124
  %sub131 = sub i32 %45, 1, !dbg !19124
  %conv132 = zext i32 %sub131 to i64, !dbg !19124
  %and133 = and i64 %conv132, 17592186044416, !dbg !19124
  %tobool134 = icmp ne i64 %and133, 0, !dbg !19124
  br i1 %tobool134, label %cond.true135, label %cond.false136, !dbg !19124

cond.true135:                                     ; preds = %cond.false130
  br label %cond.end470, !dbg !19124

cond.false136:                                    ; preds = %cond.false130
  %46 = load i32, i32* %new_rx_size, align 4, !dbg !19124
  %sub137 = sub i32 %46, 1, !dbg !19124
  %conv138 = zext i32 %sub137 to i64, !dbg !19124
  %and139 = and i64 %conv138, 8796093022208, !dbg !19124
  %tobool140 = icmp ne i64 %and139, 0, !dbg !19124
  br i1 %tobool140, label %cond.true141, label %cond.false142, !dbg !19124

cond.true141:                                     ; preds = %cond.false136
  br label %cond.end468, !dbg !19124

cond.false142:                                    ; preds = %cond.false136
  %47 = load i32, i32* %new_rx_size, align 4, !dbg !19124
  %sub143 = sub i32 %47, 1, !dbg !19124
  %conv144 = zext i32 %sub143 to i64, !dbg !19124
  %and145 = and i64 %conv144, 4398046511104, !dbg !19124
  %tobool146 = icmp ne i64 %and145, 0, !dbg !19124
  br i1 %tobool146, label %cond.true147, label %cond.false148, !dbg !19124

cond.true147:                                     ; preds = %cond.false142
  br label %cond.end466, !dbg !19124

cond.false148:                                    ; preds = %cond.false142
  %48 = load i32, i32* %new_rx_size, align 4, !dbg !19124
  %sub149 = sub i32 %48, 1, !dbg !19124
  %conv150 = zext i32 %sub149 to i64, !dbg !19124
  %and151 = and i64 %conv150, 2199023255552, !dbg !19124
  %tobool152 = icmp ne i64 %and151, 0, !dbg !19124
  br i1 %tobool152, label %cond.true153, label %cond.false154, !dbg !19124

cond.true153:                                     ; preds = %cond.false148
  br label %cond.end464, !dbg !19124

cond.false154:                                    ; preds = %cond.false148
  %49 = load i32, i32* %new_rx_size, align 4, !dbg !19124
  %sub155 = sub i32 %49, 1, !dbg !19124
  %conv156 = zext i32 %sub155 to i64, !dbg !19124
  %and157 = and i64 %conv156, 1099511627776, !dbg !19124
  %tobool158 = icmp ne i64 %and157, 0, !dbg !19124
  br i1 %tobool158, label %cond.true159, label %cond.false160, !dbg !19124

cond.true159:                                     ; preds = %cond.false154
  br label %cond.end462, !dbg !19124

cond.false160:                                    ; preds = %cond.false154
  %50 = load i32, i32* %new_rx_size, align 4, !dbg !19124
  %sub161 = sub i32 %50, 1, !dbg !19124
  %conv162 = zext i32 %sub161 to i64, !dbg !19124
  %and163 = and i64 %conv162, 549755813888, !dbg !19124
  %tobool164 = icmp ne i64 %and163, 0, !dbg !19124
  br i1 %tobool164, label %cond.true165, label %cond.false166, !dbg !19124

cond.true165:                                     ; preds = %cond.false160
  br label %cond.end460, !dbg !19124

cond.false166:                                    ; preds = %cond.false160
  %51 = load i32, i32* %new_rx_size, align 4, !dbg !19124
  %sub167 = sub i32 %51, 1, !dbg !19124
  %conv168 = zext i32 %sub167 to i64, !dbg !19124
  %and169 = and i64 %conv168, 274877906944, !dbg !19124
  %tobool170 = icmp ne i64 %and169, 0, !dbg !19124
  br i1 %tobool170, label %cond.true171, label %cond.false172, !dbg !19124

cond.true171:                                     ; preds = %cond.false166
  br label %cond.end458, !dbg !19124

cond.false172:                                    ; preds = %cond.false166
  %52 = load i32, i32* %new_rx_size, align 4, !dbg !19124
  %sub173 = sub i32 %52, 1, !dbg !19124
  %conv174 = zext i32 %sub173 to i64, !dbg !19124
  %and175 = and i64 %conv174, 137438953472, !dbg !19124
  %tobool176 = icmp ne i64 %and175, 0, !dbg !19124
  br i1 %tobool176, label %cond.true177, label %cond.false178, !dbg !19124

cond.true177:                                     ; preds = %cond.false172
  br label %cond.end456, !dbg !19124

cond.false178:                                    ; preds = %cond.false172
  %53 = load i32, i32* %new_rx_size, align 4, !dbg !19124
  %sub179 = sub i32 %53, 1, !dbg !19124
  %conv180 = zext i32 %sub179 to i64, !dbg !19124
  %and181 = and i64 %conv180, 68719476736, !dbg !19124
  %tobool182 = icmp ne i64 %and181, 0, !dbg !19124
  br i1 %tobool182, label %cond.true183, label %cond.false184, !dbg !19124

cond.true183:                                     ; preds = %cond.false178
  br label %cond.end454, !dbg !19124

cond.false184:                                    ; preds = %cond.false178
  %54 = load i32, i32* %new_rx_size, align 4, !dbg !19124
  %sub185 = sub i32 %54, 1, !dbg !19124
  %conv186 = zext i32 %sub185 to i64, !dbg !19124
  %and187 = and i64 %conv186, 34359738368, !dbg !19124
  %tobool188 = icmp ne i64 %and187, 0, !dbg !19124
  br i1 %tobool188, label %cond.true189, label %cond.false190, !dbg !19124

cond.true189:                                     ; preds = %cond.false184
  br label %cond.end452, !dbg !19124

cond.false190:                                    ; preds = %cond.false184
  %55 = load i32, i32* %new_rx_size, align 4, !dbg !19124
  %sub191 = sub i32 %55, 1, !dbg !19124
  %conv192 = zext i32 %sub191 to i64, !dbg !19124
  %and193 = and i64 %conv192, 17179869184, !dbg !19124
  %tobool194 = icmp ne i64 %and193, 0, !dbg !19124
  br i1 %tobool194, label %cond.true195, label %cond.false196, !dbg !19124

cond.true195:                                     ; preds = %cond.false190
  br label %cond.end450, !dbg !19124

cond.false196:                                    ; preds = %cond.false190
  %56 = load i32, i32* %new_rx_size, align 4, !dbg !19124
  %sub197 = sub i32 %56, 1, !dbg !19124
  %conv198 = zext i32 %sub197 to i64, !dbg !19124
  %and199 = and i64 %conv198, 8589934592, !dbg !19124
  %tobool200 = icmp ne i64 %and199, 0, !dbg !19124
  br i1 %tobool200, label %cond.true201, label %cond.false202, !dbg !19124

cond.true201:                                     ; preds = %cond.false196
  br label %cond.end448, !dbg !19124

cond.false202:                                    ; preds = %cond.false196
  %57 = load i32, i32* %new_rx_size, align 4, !dbg !19124
  %sub203 = sub i32 %57, 1, !dbg !19124
  %conv204 = zext i32 %sub203 to i64, !dbg !19124
  %and205 = and i64 %conv204, 4294967296, !dbg !19124
  %tobool206 = icmp ne i64 %and205, 0, !dbg !19124
  br i1 %tobool206, label %cond.true207, label %cond.false208, !dbg !19124

cond.true207:                                     ; preds = %cond.false202
  br label %cond.end446, !dbg !19124

cond.false208:                                    ; preds = %cond.false202
  %58 = load i32, i32* %new_rx_size, align 4, !dbg !19124
  %sub209 = sub i32 %58, 1, !dbg !19124
  %conv210 = zext i32 %sub209 to i64, !dbg !19124
  %and211 = and i64 %conv210, 2147483648, !dbg !19124
  %tobool212 = icmp ne i64 %and211, 0, !dbg !19124
  br i1 %tobool212, label %cond.true213, label %cond.false214, !dbg !19124

cond.true213:                                     ; preds = %cond.false208
  br label %cond.end444, !dbg !19124

cond.false214:                                    ; preds = %cond.false208
  %59 = load i32, i32* %new_rx_size, align 4, !dbg !19124
  %sub215 = sub i32 %59, 1, !dbg !19124
  %conv216 = zext i32 %sub215 to i64, !dbg !19124
  %and217 = and i64 %conv216, 1073741824, !dbg !19124
  %tobool218 = icmp ne i64 %and217, 0, !dbg !19124
  br i1 %tobool218, label %cond.true219, label %cond.false220, !dbg !19124

cond.true219:                                     ; preds = %cond.false214
  br label %cond.end442, !dbg !19124

cond.false220:                                    ; preds = %cond.false214
  %60 = load i32, i32* %new_rx_size, align 4, !dbg !19124
  %sub221 = sub i32 %60, 1, !dbg !19124
  %conv222 = zext i32 %sub221 to i64, !dbg !19124
  %and223 = and i64 %conv222, 536870912, !dbg !19124
  %tobool224 = icmp ne i64 %and223, 0, !dbg !19124
  br i1 %tobool224, label %cond.true225, label %cond.false226, !dbg !19124

cond.true225:                                     ; preds = %cond.false220
  br label %cond.end440, !dbg !19124

cond.false226:                                    ; preds = %cond.false220
  %61 = load i32, i32* %new_rx_size, align 4, !dbg !19124
  %sub227 = sub i32 %61, 1, !dbg !19124
  %conv228 = zext i32 %sub227 to i64, !dbg !19124
  %and229 = and i64 %conv228, 268435456, !dbg !19124
  %tobool230 = icmp ne i64 %and229, 0, !dbg !19124
  br i1 %tobool230, label %cond.true231, label %cond.false232, !dbg !19124

cond.true231:                                     ; preds = %cond.false226
  br label %cond.end438, !dbg !19124

cond.false232:                                    ; preds = %cond.false226
  %62 = load i32, i32* %new_rx_size, align 4, !dbg !19124
  %sub233 = sub i32 %62, 1, !dbg !19124
  %conv234 = zext i32 %sub233 to i64, !dbg !19124
  %and235 = and i64 %conv234, 134217728, !dbg !19124
  %tobool236 = icmp ne i64 %and235, 0, !dbg !19124
  br i1 %tobool236, label %cond.true237, label %cond.false238, !dbg !19124

cond.true237:                                     ; preds = %cond.false232
  br label %cond.end436, !dbg !19124

cond.false238:                                    ; preds = %cond.false232
  %63 = load i32, i32* %new_rx_size, align 4, !dbg !19124
  %sub239 = sub i32 %63, 1, !dbg !19124
  %conv240 = zext i32 %sub239 to i64, !dbg !19124
  %and241 = and i64 %conv240, 67108864, !dbg !19124
  %tobool242 = icmp ne i64 %and241, 0, !dbg !19124
  br i1 %tobool242, label %cond.true243, label %cond.false244, !dbg !19124

cond.true243:                                     ; preds = %cond.false238
  br label %cond.end434, !dbg !19124

cond.false244:                                    ; preds = %cond.false238
  %64 = load i32, i32* %new_rx_size, align 4, !dbg !19124
  %sub245 = sub i32 %64, 1, !dbg !19124
  %conv246 = zext i32 %sub245 to i64, !dbg !19124
  %and247 = and i64 %conv246, 33554432, !dbg !19124
  %tobool248 = icmp ne i64 %and247, 0, !dbg !19124
  br i1 %tobool248, label %cond.true249, label %cond.false250, !dbg !19124

cond.true249:                                     ; preds = %cond.false244
  br label %cond.end432, !dbg !19124

cond.false250:                                    ; preds = %cond.false244
  %65 = load i32, i32* %new_rx_size, align 4, !dbg !19124
  %sub251 = sub i32 %65, 1, !dbg !19124
  %conv252 = zext i32 %sub251 to i64, !dbg !19124
  %and253 = and i64 %conv252, 16777216, !dbg !19124
  %tobool254 = icmp ne i64 %and253, 0, !dbg !19124
  br i1 %tobool254, label %cond.true255, label %cond.false256, !dbg !19124

cond.true255:                                     ; preds = %cond.false250
  br label %cond.end430, !dbg !19124

cond.false256:                                    ; preds = %cond.false250
  %66 = load i32, i32* %new_rx_size, align 4, !dbg !19124
  %sub257 = sub i32 %66, 1, !dbg !19124
  %conv258 = zext i32 %sub257 to i64, !dbg !19124
  %and259 = and i64 %conv258, 8388608, !dbg !19124
  %tobool260 = icmp ne i64 %and259, 0, !dbg !19124
  br i1 %tobool260, label %cond.true261, label %cond.false262, !dbg !19124

cond.true261:                                     ; preds = %cond.false256
  br label %cond.end428, !dbg !19124

cond.false262:                                    ; preds = %cond.false256
  %67 = load i32, i32* %new_rx_size, align 4, !dbg !19124
  %sub263 = sub i32 %67, 1, !dbg !19124
  %conv264 = zext i32 %sub263 to i64, !dbg !19124
  %and265 = and i64 %conv264, 4194304, !dbg !19124
  %tobool266 = icmp ne i64 %and265, 0, !dbg !19124
  br i1 %tobool266, label %cond.true267, label %cond.false268, !dbg !19124

cond.true267:                                     ; preds = %cond.false262
  br label %cond.end426, !dbg !19124

cond.false268:                                    ; preds = %cond.false262
  %68 = load i32, i32* %new_rx_size, align 4, !dbg !19124
  %sub269 = sub i32 %68, 1, !dbg !19124
  %conv270 = zext i32 %sub269 to i64, !dbg !19124
  %and271 = and i64 %conv270, 2097152, !dbg !19124
  %tobool272 = icmp ne i64 %and271, 0, !dbg !19124
  br i1 %tobool272, label %cond.true273, label %cond.false274, !dbg !19124

cond.true273:                                     ; preds = %cond.false268
  br label %cond.end424, !dbg !19124

cond.false274:                                    ; preds = %cond.false268
  %69 = load i32, i32* %new_rx_size, align 4, !dbg !19124
  %sub275 = sub i32 %69, 1, !dbg !19124
  %conv276 = zext i32 %sub275 to i64, !dbg !19124
  %and277 = and i64 %conv276, 1048576, !dbg !19124
  %tobool278 = icmp ne i64 %and277, 0, !dbg !19124
  br i1 %tobool278, label %cond.true279, label %cond.false280, !dbg !19124

cond.true279:                                     ; preds = %cond.false274
  br label %cond.end422, !dbg !19124

cond.false280:                                    ; preds = %cond.false274
  %70 = load i32, i32* %new_rx_size, align 4, !dbg !19124
  %sub281 = sub i32 %70, 1, !dbg !19124
  %conv282 = zext i32 %sub281 to i64, !dbg !19124
  %and283 = and i64 %conv282, 524288, !dbg !19124
  %tobool284 = icmp ne i64 %and283, 0, !dbg !19124
  br i1 %tobool284, label %cond.true285, label %cond.false286, !dbg !19124

cond.true285:                                     ; preds = %cond.false280
  br label %cond.end420, !dbg !19124

cond.false286:                                    ; preds = %cond.false280
  %71 = load i32, i32* %new_rx_size, align 4, !dbg !19124
  %sub287 = sub i32 %71, 1, !dbg !19124
  %conv288 = zext i32 %sub287 to i64, !dbg !19124
  %and289 = and i64 %conv288, 262144, !dbg !19124
  %tobool290 = icmp ne i64 %and289, 0, !dbg !19124
  br i1 %tobool290, label %cond.true291, label %cond.false292, !dbg !19124

cond.true291:                                     ; preds = %cond.false286
  br label %cond.end418, !dbg !19124

cond.false292:                                    ; preds = %cond.false286
  %72 = load i32, i32* %new_rx_size, align 4, !dbg !19124
  %sub293 = sub i32 %72, 1, !dbg !19124
  %conv294 = zext i32 %sub293 to i64, !dbg !19124
  %and295 = and i64 %conv294, 131072, !dbg !19124
  %tobool296 = icmp ne i64 %and295, 0, !dbg !19124
  br i1 %tobool296, label %cond.true297, label %cond.false298, !dbg !19124

cond.true297:                                     ; preds = %cond.false292
  br label %cond.end416, !dbg !19124

cond.false298:                                    ; preds = %cond.false292
  %73 = load i32, i32* %new_rx_size, align 4, !dbg !19124
  %sub299 = sub i32 %73, 1, !dbg !19124
  %conv300 = zext i32 %sub299 to i64, !dbg !19124
  %and301 = and i64 %conv300, 65536, !dbg !19124
  %tobool302 = icmp ne i64 %and301, 0, !dbg !19124
  br i1 %tobool302, label %cond.true303, label %cond.false304, !dbg !19124

cond.true303:                                     ; preds = %cond.false298
  br label %cond.end414, !dbg !19124

cond.false304:                                    ; preds = %cond.false298
  %74 = load i32, i32* %new_rx_size, align 4, !dbg !19124
  %sub305 = sub i32 %74, 1, !dbg !19124
  %conv306 = zext i32 %sub305 to i64, !dbg !19124
  %and307 = and i64 %conv306, 32768, !dbg !19124
  %tobool308 = icmp ne i64 %and307, 0, !dbg !19124
  br i1 %tobool308, label %cond.true309, label %cond.false310, !dbg !19124

cond.true309:                                     ; preds = %cond.false304
  br label %cond.end412, !dbg !19124

cond.false310:                                    ; preds = %cond.false304
  %75 = load i32, i32* %new_rx_size, align 4, !dbg !19124
  %sub311 = sub i32 %75, 1, !dbg !19124
  %conv312 = zext i32 %sub311 to i64, !dbg !19124
  %and313 = and i64 %conv312, 16384, !dbg !19124
  %tobool314 = icmp ne i64 %and313, 0, !dbg !19124
  br i1 %tobool314, label %cond.true315, label %cond.false316, !dbg !19124

cond.true315:                                     ; preds = %cond.false310
  br label %cond.end410, !dbg !19124

cond.false316:                                    ; preds = %cond.false310
  %76 = load i32, i32* %new_rx_size, align 4, !dbg !19124
  %sub317 = sub i32 %76, 1, !dbg !19124
  %conv318 = zext i32 %sub317 to i64, !dbg !19124
  %and319 = and i64 %conv318, 8192, !dbg !19124
  %tobool320 = icmp ne i64 %and319, 0, !dbg !19124
  br i1 %tobool320, label %cond.true321, label %cond.false322, !dbg !19124

cond.true321:                                     ; preds = %cond.false316
  br label %cond.end408, !dbg !19124

cond.false322:                                    ; preds = %cond.false316
  %77 = load i32, i32* %new_rx_size, align 4, !dbg !19124
  %sub323 = sub i32 %77, 1, !dbg !19124
  %conv324 = zext i32 %sub323 to i64, !dbg !19124
  %and325 = and i64 %conv324, 4096, !dbg !19124
  %tobool326 = icmp ne i64 %and325, 0, !dbg !19124
  br i1 %tobool326, label %cond.true327, label %cond.false328, !dbg !19124

cond.true327:                                     ; preds = %cond.false322
  br label %cond.end406, !dbg !19124

cond.false328:                                    ; preds = %cond.false322
  %78 = load i32, i32* %new_rx_size, align 4, !dbg !19124
  %sub329 = sub i32 %78, 1, !dbg !19124
  %conv330 = zext i32 %sub329 to i64, !dbg !19124
  %and331 = and i64 %conv330, 2048, !dbg !19124
  %tobool332 = icmp ne i64 %and331, 0, !dbg !19124
  br i1 %tobool332, label %cond.true333, label %cond.false334, !dbg !19124

cond.true333:                                     ; preds = %cond.false328
  br label %cond.end404, !dbg !19124

cond.false334:                                    ; preds = %cond.false328
  %79 = load i32, i32* %new_rx_size, align 4, !dbg !19124
  %sub335 = sub i32 %79, 1, !dbg !19124
  %conv336 = zext i32 %sub335 to i64, !dbg !19124
  %and337 = and i64 %conv336, 1024, !dbg !19124
  %tobool338 = icmp ne i64 %and337, 0, !dbg !19124
  br i1 %tobool338, label %cond.true339, label %cond.false340, !dbg !19124

cond.true339:                                     ; preds = %cond.false334
  br label %cond.end402, !dbg !19124

cond.false340:                                    ; preds = %cond.false334
  %80 = load i32, i32* %new_rx_size, align 4, !dbg !19124
  %sub341 = sub i32 %80, 1, !dbg !19124
  %conv342 = zext i32 %sub341 to i64, !dbg !19124
  %and343 = and i64 %conv342, 512, !dbg !19124
  %tobool344 = icmp ne i64 %and343, 0, !dbg !19124
  br i1 %tobool344, label %cond.true345, label %cond.false346, !dbg !19124

cond.true345:                                     ; preds = %cond.false340
  br label %cond.end400, !dbg !19124

cond.false346:                                    ; preds = %cond.false340
  %81 = load i32, i32* %new_rx_size, align 4, !dbg !19124
  %sub347 = sub i32 %81, 1, !dbg !19124
  %conv348 = zext i32 %sub347 to i64, !dbg !19124
  %and349 = and i64 %conv348, 256, !dbg !19124
  %tobool350 = icmp ne i64 %and349, 0, !dbg !19124
  br i1 %tobool350, label %cond.true351, label %cond.false352, !dbg !19124

cond.true351:                                     ; preds = %cond.false346
  br label %cond.end398, !dbg !19124

cond.false352:                                    ; preds = %cond.false346
  %82 = load i32, i32* %new_rx_size, align 4, !dbg !19124
  %sub353 = sub i32 %82, 1, !dbg !19124
  %conv354 = zext i32 %sub353 to i64, !dbg !19124
  %and355 = and i64 %conv354, 128, !dbg !19124
  %tobool356 = icmp ne i64 %and355, 0, !dbg !19124
  br i1 %tobool356, label %cond.true357, label %cond.false358, !dbg !19124

cond.true357:                                     ; preds = %cond.false352
  br label %cond.end396, !dbg !19124

cond.false358:                                    ; preds = %cond.false352
  %83 = load i32, i32* %new_rx_size, align 4, !dbg !19124
  %sub359 = sub i32 %83, 1, !dbg !19124
  %conv360 = zext i32 %sub359 to i64, !dbg !19124
  %and361 = and i64 %conv360, 64, !dbg !19124
  %tobool362 = icmp ne i64 %and361, 0, !dbg !19124
  br i1 %tobool362, label %cond.true363, label %cond.false364, !dbg !19124

cond.true363:                                     ; preds = %cond.false358
  br label %cond.end394, !dbg !19124

cond.false364:                                    ; preds = %cond.false358
  %84 = load i32, i32* %new_rx_size, align 4, !dbg !19124
  %sub365 = sub i32 %84, 1, !dbg !19124
  %conv366 = zext i32 %sub365 to i64, !dbg !19124
  %and367 = and i64 %conv366, 32, !dbg !19124
  %tobool368 = icmp ne i64 %and367, 0, !dbg !19124
  br i1 %tobool368, label %cond.true369, label %cond.false370, !dbg !19124

cond.true369:                                     ; preds = %cond.false364
  br label %cond.end392, !dbg !19124

cond.false370:                                    ; preds = %cond.false364
  %85 = load i32, i32* %new_rx_size, align 4, !dbg !19124
  %sub371 = sub i32 %85, 1, !dbg !19124
  %conv372 = zext i32 %sub371 to i64, !dbg !19124
  %and373 = and i64 %conv372, 16, !dbg !19124
  %tobool374 = icmp ne i64 %and373, 0, !dbg !19124
  br i1 %tobool374, label %cond.true375, label %cond.false376, !dbg !19124

cond.true375:                                     ; preds = %cond.false370
  br label %cond.end390, !dbg !19124

cond.false376:                                    ; preds = %cond.false370
  %86 = load i32, i32* %new_rx_size, align 4, !dbg !19124
  %sub377 = sub i32 %86, 1, !dbg !19124
  %conv378 = zext i32 %sub377 to i64, !dbg !19124
  %and379 = and i64 %conv378, 8, !dbg !19124
  %tobool380 = icmp ne i64 %and379, 0, !dbg !19124
  br i1 %tobool380, label %cond.true381, label %cond.false382, !dbg !19124

cond.true381:                                     ; preds = %cond.false376
  br label %cond.end388, !dbg !19124

cond.false382:                                    ; preds = %cond.false376
  %87 = load i32, i32* %new_rx_size, align 4, !dbg !19124
  %sub383 = sub i32 %87, 1, !dbg !19124
  %conv384 = zext i32 %sub383 to i64, !dbg !19124
  %and385 = and i64 %conv384, 4, !dbg !19124
  %tobool386 = icmp ne i64 %and385, 0, !dbg !19124
  %88 = zext i1 %tobool386 to i64, !dbg !19124
  %cond387 = select i1 %tobool386, i32 2, i32 1, !dbg !19124
  br label %cond.end388, !dbg !19124

cond.end388:                                      ; preds = %cond.false382, %cond.true381
  %cond389 = phi i32 [ 3, %cond.true381 ], [ %cond387, %cond.false382 ], !dbg !19124
  br label %cond.end390, !dbg !19124

cond.end390:                                      ; preds = %cond.end388, %cond.true375
  %cond391 = phi i32 [ 4, %cond.true375 ], [ %cond389, %cond.end388 ], !dbg !19124
  br label %cond.end392, !dbg !19124

cond.end392:                                      ; preds = %cond.end390, %cond.true369
  %cond393 = phi i32 [ 5, %cond.true369 ], [ %cond391, %cond.end390 ], !dbg !19124
  br label %cond.end394, !dbg !19124

cond.end394:                                      ; preds = %cond.end392, %cond.true363
  %cond395 = phi i32 [ 6, %cond.true363 ], [ %cond393, %cond.end392 ], !dbg !19124
  br label %cond.end396, !dbg !19124

cond.end396:                                      ; preds = %cond.end394, %cond.true357
  %cond397 = phi i32 [ 7, %cond.true357 ], [ %cond395, %cond.end394 ], !dbg !19124
  br label %cond.end398, !dbg !19124

cond.end398:                                      ; preds = %cond.end396, %cond.true351
  %cond399 = phi i32 [ 8, %cond.true351 ], [ %cond397, %cond.end396 ], !dbg !19124
  br label %cond.end400, !dbg !19124

cond.end400:                                      ; preds = %cond.end398, %cond.true345
  %cond401 = phi i32 [ 9, %cond.true345 ], [ %cond399, %cond.end398 ], !dbg !19124
  br label %cond.end402, !dbg !19124

cond.end402:                                      ; preds = %cond.end400, %cond.true339
  %cond403 = phi i32 [ 10, %cond.true339 ], [ %cond401, %cond.end400 ], !dbg !19124
  br label %cond.end404, !dbg !19124

cond.end404:                                      ; preds = %cond.end402, %cond.true333
  %cond405 = phi i32 [ 11, %cond.true333 ], [ %cond403, %cond.end402 ], !dbg !19124
  br label %cond.end406, !dbg !19124

cond.end406:                                      ; preds = %cond.end404, %cond.true327
  %cond407 = phi i32 [ 12, %cond.true327 ], [ %cond405, %cond.end404 ], !dbg !19124
  br label %cond.end408, !dbg !19124

cond.end408:                                      ; preds = %cond.end406, %cond.true321
  %cond409 = phi i32 [ 13, %cond.true321 ], [ %cond407, %cond.end406 ], !dbg !19124
  br label %cond.end410, !dbg !19124

cond.end410:                                      ; preds = %cond.end408, %cond.true315
  %cond411 = phi i32 [ 14, %cond.true315 ], [ %cond409, %cond.end408 ], !dbg !19124
  br label %cond.end412, !dbg !19124

cond.end412:                                      ; preds = %cond.end410, %cond.true309
  %cond413 = phi i32 [ 15, %cond.true309 ], [ %cond411, %cond.end410 ], !dbg !19124
  br label %cond.end414, !dbg !19124

cond.end414:                                      ; preds = %cond.end412, %cond.true303
  %cond415 = phi i32 [ 16, %cond.true303 ], [ %cond413, %cond.end412 ], !dbg !19124
  br label %cond.end416, !dbg !19124

cond.end416:                                      ; preds = %cond.end414, %cond.true297
  %cond417 = phi i32 [ 17, %cond.true297 ], [ %cond415, %cond.end414 ], !dbg !19124
  br label %cond.end418, !dbg !19124

cond.end418:                                      ; preds = %cond.end416, %cond.true291
  %cond419 = phi i32 [ 18, %cond.true291 ], [ %cond417, %cond.end416 ], !dbg !19124
  br label %cond.end420, !dbg !19124

cond.end420:                                      ; preds = %cond.end418, %cond.true285
  %cond421 = phi i32 [ 19, %cond.true285 ], [ %cond419, %cond.end418 ], !dbg !19124
  br label %cond.end422, !dbg !19124

cond.end422:                                      ; preds = %cond.end420, %cond.true279
  %cond423 = phi i32 [ 20, %cond.true279 ], [ %cond421, %cond.end420 ], !dbg !19124
  br label %cond.end424, !dbg !19124

cond.end424:                                      ; preds = %cond.end422, %cond.true273
  %cond425 = phi i32 [ 21, %cond.true273 ], [ %cond423, %cond.end422 ], !dbg !19124
  br label %cond.end426, !dbg !19124

cond.end426:                                      ; preds = %cond.end424, %cond.true267
  %cond427 = phi i32 [ 22, %cond.true267 ], [ %cond425, %cond.end424 ], !dbg !19124
  br label %cond.end428, !dbg !19124

cond.end428:                                      ; preds = %cond.end426, %cond.true261
  %cond429 = phi i32 [ 23, %cond.true261 ], [ %cond427, %cond.end426 ], !dbg !19124
  br label %cond.end430, !dbg !19124

cond.end430:                                      ; preds = %cond.end428, %cond.true255
  %cond431 = phi i32 [ 24, %cond.true255 ], [ %cond429, %cond.end428 ], !dbg !19124
  br label %cond.end432, !dbg !19124

cond.end432:                                      ; preds = %cond.end430, %cond.true249
  %cond433 = phi i32 [ 25, %cond.true249 ], [ %cond431, %cond.end430 ], !dbg !19124
  br label %cond.end434, !dbg !19124

cond.end434:                                      ; preds = %cond.end432, %cond.true243
  %cond435 = phi i32 [ 26, %cond.true243 ], [ %cond433, %cond.end432 ], !dbg !19124
  br label %cond.end436, !dbg !19124

cond.end436:                                      ; preds = %cond.end434, %cond.true237
  %cond437 = phi i32 [ 27, %cond.true237 ], [ %cond435, %cond.end434 ], !dbg !19124
  br label %cond.end438, !dbg !19124

cond.end438:                                      ; preds = %cond.end436, %cond.true231
  %cond439 = phi i32 [ 28, %cond.true231 ], [ %cond437, %cond.end436 ], !dbg !19124
  br label %cond.end440, !dbg !19124

cond.end440:                                      ; preds = %cond.end438, %cond.true225
  %cond441 = phi i32 [ 29, %cond.true225 ], [ %cond439, %cond.end438 ], !dbg !19124
  br label %cond.end442, !dbg !19124

cond.end442:                                      ; preds = %cond.end440, %cond.true219
  %cond443 = phi i32 [ 30, %cond.true219 ], [ %cond441, %cond.end440 ], !dbg !19124
  br label %cond.end444, !dbg !19124

cond.end444:                                      ; preds = %cond.end442, %cond.true213
  %cond445 = phi i32 [ 31, %cond.true213 ], [ %cond443, %cond.end442 ], !dbg !19124
  br label %cond.end446, !dbg !19124

cond.end446:                                      ; preds = %cond.end444, %cond.true207
  %cond447 = phi i32 [ 32, %cond.true207 ], [ %cond445, %cond.end444 ], !dbg !19124
  br label %cond.end448, !dbg !19124

cond.end448:                                      ; preds = %cond.end446, %cond.true201
  %cond449 = phi i32 [ 33, %cond.true201 ], [ %cond447, %cond.end446 ], !dbg !19124
  br label %cond.end450, !dbg !19124

cond.end450:                                      ; preds = %cond.end448, %cond.true195
  %cond451 = phi i32 [ 34, %cond.true195 ], [ %cond449, %cond.end448 ], !dbg !19124
  br label %cond.end452, !dbg !19124

cond.end452:                                      ; preds = %cond.end450, %cond.true189
  %cond453 = phi i32 [ 35, %cond.true189 ], [ %cond451, %cond.end450 ], !dbg !19124
  br label %cond.end454, !dbg !19124

cond.end454:                                      ; preds = %cond.end452, %cond.true183
  %cond455 = phi i32 [ 36, %cond.true183 ], [ %cond453, %cond.end452 ], !dbg !19124
  br label %cond.end456, !dbg !19124

cond.end456:                                      ; preds = %cond.end454, %cond.true177
  %cond457 = phi i32 [ 37, %cond.true177 ], [ %cond455, %cond.end454 ], !dbg !19124
  br label %cond.end458, !dbg !19124

cond.end458:                                      ; preds = %cond.end456, %cond.true171
  %cond459 = phi i32 [ 38, %cond.true171 ], [ %cond457, %cond.end456 ], !dbg !19124
  br label %cond.end460, !dbg !19124

cond.end460:                                      ; preds = %cond.end458, %cond.true165
  %cond461 = phi i32 [ 39, %cond.true165 ], [ %cond459, %cond.end458 ], !dbg !19124
  br label %cond.end462, !dbg !19124

cond.end462:                                      ; preds = %cond.end460, %cond.true159
  %cond463 = phi i32 [ 40, %cond.true159 ], [ %cond461, %cond.end460 ], !dbg !19124
  br label %cond.end464, !dbg !19124

cond.end464:                                      ; preds = %cond.end462, %cond.true153
  %cond465 = phi i32 [ 41, %cond.true153 ], [ %cond463, %cond.end462 ], !dbg !19124
  br label %cond.end466, !dbg !19124

cond.end466:                                      ; preds = %cond.end464, %cond.true147
  %cond467 = phi i32 [ 42, %cond.true147 ], [ %cond465, %cond.end464 ], !dbg !19124
  br label %cond.end468, !dbg !19124

cond.end468:                                      ; preds = %cond.end466, %cond.true141
  %cond469 = phi i32 [ 43, %cond.true141 ], [ %cond467, %cond.end466 ], !dbg !19124
  br label %cond.end470, !dbg !19124

cond.end470:                                      ; preds = %cond.end468, %cond.true135
  %cond471 = phi i32 [ 44, %cond.true135 ], [ %cond469, %cond.end468 ], !dbg !19124
  br label %cond.end472, !dbg !19124

cond.end472:                                      ; preds = %cond.end470, %cond.true129
  %cond473 = phi i32 [ 45, %cond.true129 ], [ %cond471, %cond.end470 ], !dbg !19124
  br label %cond.end474, !dbg !19124

cond.end474:                                      ; preds = %cond.end472, %cond.true123
  %cond475 = phi i32 [ 46, %cond.true123 ], [ %cond473, %cond.end472 ], !dbg !19124
  br label %cond.end476, !dbg !19124

cond.end476:                                      ; preds = %cond.end474, %cond.true117
  %cond477 = phi i32 [ 47, %cond.true117 ], [ %cond475, %cond.end474 ], !dbg !19124
  br label %cond.end478, !dbg !19124

cond.end478:                                      ; preds = %cond.end476, %cond.true111
  %cond479 = phi i32 [ 48, %cond.true111 ], [ %cond477, %cond.end476 ], !dbg !19124
  br label %cond.end480, !dbg !19124

cond.end480:                                      ; preds = %cond.end478, %cond.true105
  %cond481 = phi i32 [ 49, %cond.true105 ], [ %cond479, %cond.end478 ], !dbg !19124
  br label %cond.end482, !dbg !19124

cond.end482:                                      ; preds = %cond.end480, %cond.true99
  %cond483 = phi i32 [ 50, %cond.true99 ], [ %cond481, %cond.end480 ], !dbg !19124
  br label %cond.end484, !dbg !19124

cond.end484:                                      ; preds = %cond.end482, %cond.true93
  %cond485 = phi i32 [ 51, %cond.true93 ], [ %cond483, %cond.end482 ], !dbg !19124
  br label %cond.end486, !dbg !19124

cond.end486:                                      ; preds = %cond.end484, %cond.true87
  %cond487 = phi i32 [ 52, %cond.true87 ], [ %cond485, %cond.end484 ], !dbg !19124
  br label %cond.end488, !dbg !19124

cond.end488:                                      ; preds = %cond.end486, %cond.true81
  %cond489 = phi i32 [ 53, %cond.true81 ], [ %cond487, %cond.end486 ], !dbg !19124
  br label %cond.end490, !dbg !19124

cond.end490:                                      ; preds = %cond.end488, %cond.true75
  %cond491 = phi i32 [ 54, %cond.true75 ], [ %cond489, %cond.end488 ], !dbg !19124
  br label %cond.end492, !dbg !19124

cond.end492:                                      ; preds = %cond.end490, %cond.true69
  %cond493 = phi i32 [ 55, %cond.true69 ], [ %cond491, %cond.end490 ], !dbg !19124
  br label %cond.end494, !dbg !19124

cond.end494:                                      ; preds = %cond.end492, %cond.true63
  %cond495 = phi i32 [ 56, %cond.true63 ], [ %cond493, %cond.end492 ], !dbg !19124
  br label %cond.end496, !dbg !19124

cond.end496:                                      ; preds = %cond.end494, %cond.true57
  %cond497 = phi i32 [ 57, %cond.true57 ], [ %cond495, %cond.end494 ], !dbg !19124
  br label %cond.end498, !dbg !19124

cond.end498:                                      ; preds = %cond.end496, %cond.true51
  %cond499 = phi i32 [ 58, %cond.true51 ], [ %cond497, %cond.end496 ], !dbg !19124
  br label %cond.end500, !dbg !19124

cond.end500:                                      ; preds = %cond.end498, %cond.true45
  %cond501 = phi i32 [ 59, %cond.true45 ], [ %cond499, %cond.end498 ], !dbg !19124
  br label %cond.end502, !dbg !19124

cond.end502:                                      ; preds = %cond.end500, %cond.true39
  %cond503 = phi i32 [ 60, %cond.true39 ], [ %cond501, %cond.end500 ], !dbg !19124
  br label %cond.end504, !dbg !19124

cond.end504:                                      ; preds = %cond.end502, %cond.true33
  %cond505 = phi i32 [ 61, %cond.true33 ], [ %cond503, %cond.end502 ], !dbg !19124
  br label %cond.end506, !dbg !19124

cond.end506:                                      ; preds = %cond.end504, %cond.true27
  %cond507 = phi i32 [ 62, %cond.true27 ], [ %cond505, %cond.end504 ], !dbg !19124
  br label %cond.end508, !dbg !19124

cond.end508:                                      ; preds = %cond.end506, %cond.true21
  %cond509 = phi i32 [ 63, %cond.true21 ], [ %cond507, %cond.end506 ], !dbg !19124
  br label %cond.end510, !dbg !19124

cond.end510:                                      ; preds = %cond.end508, %cond.true17
  %cond511 = phi i32 [ 0, %cond.true17 ], [ %cond509, %cond.end508 ], !dbg !19124
  br label %cond.end513, !dbg !19124

cond.false512:                                    ; preds = %cond.true12
  br label %cond.end513, !dbg !19124

cond.end513:                                      ; preds = %cond.false512, %cond.end510
  %cond514 = phi i32 [ %cond511, %cond.end510 ], [ -1, %cond.false512 ], !dbg !19124
  br label %cond.end518, !dbg !19124

cond.false515:                                    ; preds = %cond.false11
  %89 = load i32, i32* %new_rx_size, align 4, !dbg !19124
  %sub516 = sub i32 %89, 1, !dbg !19124
  %call517 = call i32 @__ilog2_u32(i32 %sub516) #16, !dbg !19124
  br label %cond.end518, !dbg !19124

cond.end518:                                      ; preds = %cond.false515, %cond.end513
  %cond519 = phi i32 [ %cond514, %cond.end513 ], [ %call517, %cond.false515 ], !dbg !19124
  %add = add i32 %cond519, 1, !dbg !19124
  %sh_prom = zext i32 %add to i64, !dbg !19124
  %shl = shl i64 1, %sh_prom, !dbg !19124
  br label %cond.end520, !dbg !19124

cond.end520:                                      ; preds = %cond.end518, %cond.true10
  %cond521 = phi i64 [ 1, %cond.true10 ], [ %shl, %cond.end518 ], !dbg !19124
  br label %cond.end525, !dbg !19124

cond.false522:                                    ; preds = %cond.end6
  %90 = load i32, i32* %new_rx_size, align 4, !dbg !19124
  %conv523 = zext i32 %90 to i64, !dbg !19124
  %call524 = call i64 @__roundup_pow_of_two(i64 %conv523) #16, !dbg !19124
  br label %cond.end525, !dbg !19124

cond.end525:                                      ; preds = %cond.false522, %cond.end520
  %cond526 = phi i64 [ %cond521, %cond.end520 ], [ %call524, %cond.false522 ], !dbg !19124
  %conv527 = trunc i64 %cond526 to i32, !dbg !19124
  store i32 %conv527, i32* %new_rx_size, align 4, !dbg !19125
  call void @llvm.dbg.declare(metadata i32* %__UNIQUE_ID___x544, metadata !19126, metadata !DIExpression()), !dbg !19128
  call void @llvm.dbg.declare(metadata i32* %__UNIQUE_ID___x542, metadata !19129, metadata !DIExpression()), !dbg !19131
  %91 = load %struct.ethtool_ringparam*, %struct.ethtool_ringparam** %ring.addr, align 8, !dbg !19131
  %tx_pending = getelementptr inbounds %struct.ethtool_ringparam, %struct.ethtool_ringparam* %91, i32 0, i32 8, !dbg !19131
  %92 = load i32, i32* %tx_pending, align 4, !dbg !19131
  store i32 %92, i32* %__UNIQUE_ID___x542, align 4, !dbg !19131
  call void @llvm.dbg.declare(metadata i32* %__UNIQUE_ID___y543, metadata !19132, metadata !DIExpression()), !dbg !19131
  store i32 64, i32* %__UNIQUE_ID___y543, align 4, !dbg !19131
  %93 = load i32, i32* %__UNIQUE_ID___x542, align 4, !dbg !19131
  %94 = load i32, i32* %__UNIQUE_ID___y543, align 4, !dbg !19131
  %cmp529 = icmp ugt i32 %93, %94, !dbg !19131
  br i1 %cmp529, label %cond.true531, label %cond.false532, !dbg !19131

cond.true531:                                     ; preds = %cond.end525
  %95 = load i32, i32* %__UNIQUE_ID___x542, align 4, !dbg !19131
  br label %cond.end533, !dbg !19131

cond.false532:                                    ; preds = %cond.end525
  %96 = load i32, i32* %__UNIQUE_ID___y543, align 4, !dbg !19131
  br label %cond.end533, !dbg !19131

cond.end533:                                      ; preds = %cond.false532, %cond.true531
  %cond534 = phi i32 [ %95, %cond.true531 ], [ %96, %cond.false532 ], !dbg !19131
  store i32 %cond534, i32* %tmp528, align 4, !dbg !19131
  %97 = load i32, i32* %tmp528, align 4, !dbg !19131
  store i32 %97, i32* %__UNIQUE_ID___x544, align 4, !dbg !19128
  call void @llvm.dbg.declare(metadata i32* %__UNIQUE_ID___y545, metadata !19133, metadata !DIExpression()), !dbg !19128
  store i32 4096, i32* %__UNIQUE_ID___y545, align 4, !dbg !19128
  %98 = load i32, i32* %__UNIQUE_ID___x544, align 4, !dbg !19128
  %99 = load i32, i32* %__UNIQUE_ID___y545, align 4, !dbg !19128
  %cmp536 = icmp ult i32 %98, %99, !dbg !19128
  br i1 %cmp536, label %cond.true538, label %cond.false539, !dbg !19128

cond.true538:                                     ; preds = %cond.end533
  %100 = load i32, i32* %__UNIQUE_ID___x544, align 4, !dbg !19128
  br label %cond.end540, !dbg !19128

cond.false539:                                    ; preds = %cond.end533
  %101 = load i32, i32* %__UNIQUE_ID___y545, align 4, !dbg !19128
  br label %cond.end540, !dbg !19128

cond.end540:                                      ; preds = %cond.false539, %cond.true538
  %cond541 = phi i32 [ %100, %cond.true538 ], [ %101, %cond.false539 ], !dbg !19128
  store i32 %cond541, i32* %tmp535, align 4, !dbg !19128
  %102 = load i32, i32* %tmp535, align 4, !dbg !19128
  store i32 %102, i32* %new_tx_size, align 4, !dbg !19134
  %103 = load i32, i32* %new_tx_size, align 4, !dbg !19135
  %104 = call i1 @llvm.is.constant.i32(i32 %103), !dbg !19135
  br i1 %104, label %cond.true542, label %cond.false1064, !dbg !19135

cond.true542:                                     ; preds = %cond.end540
  %105 = load i32, i32* %new_tx_size, align 4, !dbg !19135
  %cmp543 = icmp eq i32 %105, 1, !dbg !19135
  br i1 %cmp543, label %cond.true545, label %cond.false546, !dbg !19135

cond.true545:                                     ; preds = %cond.true542
  br label %cond.end1062, !dbg !19135

cond.false546:                                    ; preds = %cond.true542
  %106 = load i32, i32* %new_tx_size, align 4, !dbg !19135
  %sub547 = sub i32 %106, 1, !dbg !19135
  %107 = call i1 @llvm.is.constant.i32(i32 %sub547), !dbg !19135
  br i1 %107, label %cond.true548, label %cond.false1054, !dbg !19135

cond.true548:                                     ; preds = %cond.false546
  %108 = load i32, i32* %new_tx_size, align 4, !dbg !19135
  %sub549 = sub i32 %108, 1, !dbg !19135
  %109 = call i1 @llvm.is.constant.i32(i32 %sub549), !dbg !19135
  br i1 %109, label %cond.true550, label %cond.false1051, !dbg !19135

cond.true550:                                     ; preds = %cond.true548
  %110 = load i32, i32* %new_tx_size, align 4, !dbg !19135
  %sub551 = sub i32 %110, 1, !dbg !19135
  %cmp552 = icmp ult i32 %sub551, 2, !dbg !19135
  br i1 %cmp552, label %cond.true554, label %cond.false555, !dbg !19135

cond.true554:                                     ; preds = %cond.true550
  br label %cond.end1049, !dbg !19135

cond.false555:                                    ; preds = %cond.true550
  %111 = load i32, i32* %new_tx_size, align 4, !dbg !19135
  %sub556 = sub i32 %111, 1, !dbg !19135
  %conv557 = zext i32 %sub556 to i64, !dbg !19135
  %and558 = and i64 %conv557, -9223372036854775808, !dbg !19135
  %tobool559 = icmp ne i64 %and558, 0, !dbg !19135
  br i1 %tobool559, label %cond.true560, label %cond.false561, !dbg !19135

cond.true560:                                     ; preds = %cond.false555
  br label %cond.end1047, !dbg !19135

cond.false561:                                    ; preds = %cond.false555
  %112 = load i32, i32* %new_tx_size, align 4, !dbg !19135
  %sub562 = sub i32 %112, 1, !dbg !19135
  %conv563 = zext i32 %sub562 to i64, !dbg !19135
  %and564 = and i64 %conv563, 4611686018427387904, !dbg !19135
  %tobool565 = icmp ne i64 %and564, 0, !dbg !19135
  br i1 %tobool565, label %cond.true566, label %cond.false567, !dbg !19135

cond.true566:                                     ; preds = %cond.false561
  br label %cond.end1045, !dbg !19135

cond.false567:                                    ; preds = %cond.false561
  %113 = load i32, i32* %new_tx_size, align 4, !dbg !19135
  %sub568 = sub i32 %113, 1, !dbg !19135
  %conv569 = zext i32 %sub568 to i64, !dbg !19135
  %and570 = and i64 %conv569, 2305843009213693952, !dbg !19135
  %tobool571 = icmp ne i64 %and570, 0, !dbg !19135
  br i1 %tobool571, label %cond.true572, label %cond.false573, !dbg !19135

cond.true572:                                     ; preds = %cond.false567
  br label %cond.end1043, !dbg !19135

cond.false573:                                    ; preds = %cond.false567
  %114 = load i32, i32* %new_tx_size, align 4, !dbg !19135
  %sub574 = sub i32 %114, 1, !dbg !19135
  %conv575 = zext i32 %sub574 to i64, !dbg !19135
  %and576 = and i64 %conv575, 1152921504606846976, !dbg !19135
  %tobool577 = icmp ne i64 %and576, 0, !dbg !19135
  br i1 %tobool577, label %cond.true578, label %cond.false579, !dbg !19135

cond.true578:                                     ; preds = %cond.false573
  br label %cond.end1041, !dbg !19135

cond.false579:                                    ; preds = %cond.false573
  %115 = load i32, i32* %new_tx_size, align 4, !dbg !19135
  %sub580 = sub i32 %115, 1, !dbg !19135
  %conv581 = zext i32 %sub580 to i64, !dbg !19135
  %and582 = and i64 %conv581, 576460752303423488, !dbg !19135
  %tobool583 = icmp ne i64 %and582, 0, !dbg !19135
  br i1 %tobool583, label %cond.true584, label %cond.false585, !dbg !19135

cond.true584:                                     ; preds = %cond.false579
  br label %cond.end1039, !dbg !19135

cond.false585:                                    ; preds = %cond.false579
  %116 = load i32, i32* %new_tx_size, align 4, !dbg !19135
  %sub586 = sub i32 %116, 1, !dbg !19135
  %conv587 = zext i32 %sub586 to i64, !dbg !19135
  %and588 = and i64 %conv587, 288230376151711744, !dbg !19135
  %tobool589 = icmp ne i64 %and588, 0, !dbg !19135
  br i1 %tobool589, label %cond.true590, label %cond.false591, !dbg !19135

cond.true590:                                     ; preds = %cond.false585
  br label %cond.end1037, !dbg !19135

cond.false591:                                    ; preds = %cond.false585
  %117 = load i32, i32* %new_tx_size, align 4, !dbg !19135
  %sub592 = sub i32 %117, 1, !dbg !19135
  %conv593 = zext i32 %sub592 to i64, !dbg !19135
  %and594 = and i64 %conv593, 144115188075855872, !dbg !19135
  %tobool595 = icmp ne i64 %and594, 0, !dbg !19135
  br i1 %tobool595, label %cond.true596, label %cond.false597, !dbg !19135

cond.true596:                                     ; preds = %cond.false591
  br label %cond.end1035, !dbg !19135

cond.false597:                                    ; preds = %cond.false591
  %118 = load i32, i32* %new_tx_size, align 4, !dbg !19135
  %sub598 = sub i32 %118, 1, !dbg !19135
  %conv599 = zext i32 %sub598 to i64, !dbg !19135
  %and600 = and i64 %conv599, 72057594037927936, !dbg !19135
  %tobool601 = icmp ne i64 %and600, 0, !dbg !19135
  br i1 %tobool601, label %cond.true602, label %cond.false603, !dbg !19135

cond.true602:                                     ; preds = %cond.false597
  br label %cond.end1033, !dbg !19135

cond.false603:                                    ; preds = %cond.false597
  %119 = load i32, i32* %new_tx_size, align 4, !dbg !19135
  %sub604 = sub i32 %119, 1, !dbg !19135
  %conv605 = zext i32 %sub604 to i64, !dbg !19135
  %and606 = and i64 %conv605, 36028797018963968, !dbg !19135
  %tobool607 = icmp ne i64 %and606, 0, !dbg !19135
  br i1 %tobool607, label %cond.true608, label %cond.false609, !dbg !19135

cond.true608:                                     ; preds = %cond.false603
  br label %cond.end1031, !dbg !19135

cond.false609:                                    ; preds = %cond.false603
  %120 = load i32, i32* %new_tx_size, align 4, !dbg !19135
  %sub610 = sub i32 %120, 1, !dbg !19135
  %conv611 = zext i32 %sub610 to i64, !dbg !19135
  %and612 = and i64 %conv611, 18014398509481984, !dbg !19135
  %tobool613 = icmp ne i64 %and612, 0, !dbg !19135
  br i1 %tobool613, label %cond.true614, label %cond.false615, !dbg !19135

cond.true614:                                     ; preds = %cond.false609
  br label %cond.end1029, !dbg !19135

cond.false615:                                    ; preds = %cond.false609
  %121 = load i32, i32* %new_tx_size, align 4, !dbg !19135
  %sub616 = sub i32 %121, 1, !dbg !19135
  %conv617 = zext i32 %sub616 to i64, !dbg !19135
  %and618 = and i64 %conv617, 9007199254740992, !dbg !19135
  %tobool619 = icmp ne i64 %and618, 0, !dbg !19135
  br i1 %tobool619, label %cond.true620, label %cond.false621, !dbg !19135

cond.true620:                                     ; preds = %cond.false615
  br label %cond.end1027, !dbg !19135

cond.false621:                                    ; preds = %cond.false615
  %122 = load i32, i32* %new_tx_size, align 4, !dbg !19135
  %sub622 = sub i32 %122, 1, !dbg !19135
  %conv623 = zext i32 %sub622 to i64, !dbg !19135
  %and624 = and i64 %conv623, 4503599627370496, !dbg !19135
  %tobool625 = icmp ne i64 %and624, 0, !dbg !19135
  br i1 %tobool625, label %cond.true626, label %cond.false627, !dbg !19135

cond.true626:                                     ; preds = %cond.false621
  br label %cond.end1025, !dbg !19135

cond.false627:                                    ; preds = %cond.false621
  %123 = load i32, i32* %new_tx_size, align 4, !dbg !19135
  %sub628 = sub i32 %123, 1, !dbg !19135
  %conv629 = zext i32 %sub628 to i64, !dbg !19135
  %and630 = and i64 %conv629, 2251799813685248, !dbg !19135
  %tobool631 = icmp ne i64 %and630, 0, !dbg !19135
  br i1 %tobool631, label %cond.true632, label %cond.false633, !dbg !19135

cond.true632:                                     ; preds = %cond.false627
  br label %cond.end1023, !dbg !19135

cond.false633:                                    ; preds = %cond.false627
  %124 = load i32, i32* %new_tx_size, align 4, !dbg !19135
  %sub634 = sub i32 %124, 1, !dbg !19135
  %conv635 = zext i32 %sub634 to i64, !dbg !19135
  %and636 = and i64 %conv635, 1125899906842624, !dbg !19135
  %tobool637 = icmp ne i64 %and636, 0, !dbg !19135
  br i1 %tobool637, label %cond.true638, label %cond.false639, !dbg !19135

cond.true638:                                     ; preds = %cond.false633
  br label %cond.end1021, !dbg !19135

cond.false639:                                    ; preds = %cond.false633
  %125 = load i32, i32* %new_tx_size, align 4, !dbg !19135
  %sub640 = sub i32 %125, 1, !dbg !19135
  %conv641 = zext i32 %sub640 to i64, !dbg !19135
  %and642 = and i64 %conv641, 562949953421312, !dbg !19135
  %tobool643 = icmp ne i64 %and642, 0, !dbg !19135
  br i1 %tobool643, label %cond.true644, label %cond.false645, !dbg !19135

cond.true644:                                     ; preds = %cond.false639
  br label %cond.end1019, !dbg !19135

cond.false645:                                    ; preds = %cond.false639
  %126 = load i32, i32* %new_tx_size, align 4, !dbg !19135
  %sub646 = sub i32 %126, 1, !dbg !19135
  %conv647 = zext i32 %sub646 to i64, !dbg !19135
  %and648 = and i64 %conv647, 281474976710656, !dbg !19135
  %tobool649 = icmp ne i64 %and648, 0, !dbg !19135
  br i1 %tobool649, label %cond.true650, label %cond.false651, !dbg !19135

cond.true650:                                     ; preds = %cond.false645
  br label %cond.end1017, !dbg !19135

cond.false651:                                    ; preds = %cond.false645
  %127 = load i32, i32* %new_tx_size, align 4, !dbg !19135
  %sub652 = sub i32 %127, 1, !dbg !19135
  %conv653 = zext i32 %sub652 to i64, !dbg !19135
  %and654 = and i64 %conv653, 140737488355328, !dbg !19135
  %tobool655 = icmp ne i64 %and654, 0, !dbg !19135
  br i1 %tobool655, label %cond.true656, label %cond.false657, !dbg !19135

cond.true656:                                     ; preds = %cond.false651
  br label %cond.end1015, !dbg !19135

cond.false657:                                    ; preds = %cond.false651
  %128 = load i32, i32* %new_tx_size, align 4, !dbg !19135
  %sub658 = sub i32 %128, 1, !dbg !19135
  %conv659 = zext i32 %sub658 to i64, !dbg !19135
  %and660 = and i64 %conv659, 70368744177664, !dbg !19135
  %tobool661 = icmp ne i64 %and660, 0, !dbg !19135
  br i1 %tobool661, label %cond.true662, label %cond.false663, !dbg !19135

cond.true662:                                     ; preds = %cond.false657
  br label %cond.end1013, !dbg !19135

cond.false663:                                    ; preds = %cond.false657
  %129 = load i32, i32* %new_tx_size, align 4, !dbg !19135
  %sub664 = sub i32 %129, 1, !dbg !19135
  %conv665 = zext i32 %sub664 to i64, !dbg !19135
  %and666 = and i64 %conv665, 35184372088832, !dbg !19135
  %tobool667 = icmp ne i64 %and666, 0, !dbg !19135
  br i1 %tobool667, label %cond.true668, label %cond.false669, !dbg !19135

cond.true668:                                     ; preds = %cond.false663
  br label %cond.end1011, !dbg !19135

cond.false669:                                    ; preds = %cond.false663
  %130 = load i32, i32* %new_tx_size, align 4, !dbg !19135
  %sub670 = sub i32 %130, 1, !dbg !19135
  %conv671 = zext i32 %sub670 to i64, !dbg !19135
  %and672 = and i64 %conv671, 17592186044416, !dbg !19135
  %tobool673 = icmp ne i64 %and672, 0, !dbg !19135
  br i1 %tobool673, label %cond.true674, label %cond.false675, !dbg !19135

cond.true674:                                     ; preds = %cond.false669
  br label %cond.end1009, !dbg !19135

cond.false675:                                    ; preds = %cond.false669
  %131 = load i32, i32* %new_tx_size, align 4, !dbg !19135
  %sub676 = sub i32 %131, 1, !dbg !19135
  %conv677 = zext i32 %sub676 to i64, !dbg !19135
  %and678 = and i64 %conv677, 8796093022208, !dbg !19135
  %tobool679 = icmp ne i64 %and678, 0, !dbg !19135
  br i1 %tobool679, label %cond.true680, label %cond.false681, !dbg !19135

cond.true680:                                     ; preds = %cond.false675
  br label %cond.end1007, !dbg !19135

cond.false681:                                    ; preds = %cond.false675
  %132 = load i32, i32* %new_tx_size, align 4, !dbg !19135
  %sub682 = sub i32 %132, 1, !dbg !19135
  %conv683 = zext i32 %sub682 to i64, !dbg !19135
  %and684 = and i64 %conv683, 4398046511104, !dbg !19135
  %tobool685 = icmp ne i64 %and684, 0, !dbg !19135
  br i1 %tobool685, label %cond.true686, label %cond.false687, !dbg !19135

cond.true686:                                     ; preds = %cond.false681
  br label %cond.end1005, !dbg !19135

cond.false687:                                    ; preds = %cond.false681
  %133 = load i32, i32* %new_tx_size, align 4, !dbg !19135
  %sub688 = sub i32 %133, 1, !dbg !19135
  %conv689 = zext i32 %sub688 to i64, !dbg !19135
  %and690 = and i64 %conv689, 2199023255552, !dbg !19135
  %tobool691 = icmp ne i64 %and690, 0, !dbg !19135
  br i1 %tobool691, label %cond.true692, label %cond.false693, !dbg !19135

cond.true692:                                     ; preds = %cond.false687
  br label %cond.end1003, !dbg !19135

cond.false693:                                    ; preds = %cond.false687
  %134 = load i32, i32* %new_tx_size, align 4, !dbg !19135
  %sub694 = sub i32 %134, 1, !dbg !19135
  %conv695 = zext i32 %sub694 to i64, !dbg !19135
  %and696 = and i64 %conv695, 1099511627776, !dbg !19135
  %tobool697 = icmp ne i64 %and696, 0, !dbg !19135
  br i1 %tobool697, label %cond.true698, label %cond.false699, !dbg !19135

cond.true698:                                     ; preds = %cond.false693
  br label %cond.end1001, !dbg !19135

cond.false699:                                    ; preds = %cond.false693
  %135 = load i32, i32* %new_tx_size, align 4, !dbg !19135
  %sub700 = sub i32 %135, 1, !dbg !19135
  %conv701 = zext i32 %sub700 to i64, !dbg !19135
  %and702 = and i64 %conv701, 549755813888, !dbg !19135
  %tobool703 = icmp ne i64 %and702, 0, !dbg !19135
  br i1 %tobool703, label %cond.true704, label %cond.false705, !dbg !19135

cond.true704:                                     ; preds = %cond.false699
  br label %cond.end999, !dbg !19135

cond.false705:                                    ; preds = %cond.false699
  %136 = load i32, i32* %new_tx_size, align 4, !dbg !19135
  %sub706 = sub i32 %136, 1, !dbg !19135
  %conv707 = zext i32 %sub706 to i64, !dbg !19135
  %and708 = and i64 %conv707, 274877906944, !dbg !19135
  %tobool709 = icmp ne i64 %and708, 0, !dbg !19135
  br i1 %tobool709, label %cond.true710, label %cond.false711, !dbg !19135

cond.true710:                                     ; preds = %cond.false705
  br label %cond.end997, !dbg !19135

cond.false711:                                    ; preds = %cond.false705
  %137 = load i32, i32* %new_tx_size, align 4, !dbg !19135
  %sub712 = sub i32 %137, 1, !dbg !19135
  %conv713 = zext i32 %sub712 to i64, !dbg !19135
  %and714 = and i64 %conv713, 137438953472, !dbg !19135
  %tobool715 = icmp ne i64 %and714, 0, !dbg !19135
  br i1 %tobool715, label %cond.true716, label %cond.false717, !dbg !19135

cond.true716:                                     ; preds = %cond.false711
  br label %cond.end995, !dbg !19135

cond.false717:                                    ; preds = %cond.false711
  %138 = load i32, i32* %new_tx_size, align 4, !dbg !19135
  %sub718 = sub i32 %138, 1, !dbg !19135
  %conv719 = zext i32 %sub718 to i64, !dbg !19135
  %and720 = and i64 %conv719, 68719476736, !dbg !19135
  %tobool721 = icmp ne i64 %and720, 0, !dbg !19135
  br i1 %tobool721, label %cond.true722, label %cond.false723, !dbg !19135

cond.true722:                                     ; preds = %cond.false717
  br label %cond.end993, !dbg !19135

cond.false723:                                    ; preds = %cond.false717
  %139 = load i32, i32* %new_tx_size, align 4, !dbg !19135
  %sub724 = sub i32 %139, 1, !dbg !19135
  %conv725 = zext i32 %sub724 to i64, !dbg !19135
  %and726 = and i64 %conv725, 34359738368, !dbg !19135
  %tobool727 = icmp ne i64 %and726, 0, !dbg !19135
  br i1 %tobool727, label %cond.true728, label %cond.false729, !dbg !19135

cond.true728:                                     ; preds = %cond.false723
  br label %cond.end991, !dbg !19135

cond.false729:                                    ; preds = %cond.false723
  %140 = load i32, i32* %new_tx_size, align 4, !dbg !19135
  %sub730 = sub i32 %140, 1, !dbg !19135
  %conv731 = zext i32 %sub730 to i64, !dbg !19135
  %and732 = and i64 %conv731, 17179869184, !dbg !19135
  %tobool733 = icmp ne i64 %and732, 0, !dbg !19135
  br i1 %tobool733, label %cond.true734, label %cond.false735, !dbg !19135

cond.true734:                                     ; preds = %cond.false729
  br label %cond.end989, !dbg !19135

cond.false735:                                    ; preds = %cond.false729
  %141 = load i32, i32* %new_tx_size, align 4, !dbg !19135
  %sub736 = sub i32 %141, 1, !dbg !19135
  %conv737 = zext i32 %sub736 to i64, !dbg !19135
  %and738 = and i64 %conv737, 8589934592, !dbg !19135
  %tobool739 = icmp ne i64 %and738, 0, !dbg !19135
  br i1 %tobool739, label %cond.true740, label %cond.false741, !dbg !19135

cond.true740:                                     ; preds = %cond.false735
  br label %cond.end987, !dbg !19135

cond.false741:                                    ; preds = %cond.false735
  %142 = load i32, i32* %new_tx_size, align 4, !dbg !19135
  %sub742 = sub i32 %142, 1, !dbg !19135
  %conv743 = zext i32 %sub742 to i64, !dbg !19135
  %and744 = and i64 %conv743, 4294967296, !dbg !19135
  %tobool745 = icmp ne i64 %and744, 0, !dbg !19135
  br i1 %tobool745, label %cond.true746, label %cond.false747, !dbg !19135

cond.true746:                                     ; preds = %cond.false741
  br label %cond.end985, !dbg !19135

cond.false747:                                    ; preds = %cond.false741
  %143 = load i32, i32* %new_tx_size, align 4, !dbg !19135
  %sub748 = sub i32 %143, 1, !dbg !19135
  %conv749 = zext i32 %sub748 to i64, !dbg !19135
  %and750 = and i64 %conv749, 2147483648, !dbg !19135
  %tobool751 = icmp ne i64 %and750, 0, !dbg !19135
  br i1 %tobool751, label %cond.true752, label %cond.false753, !dbg !19135

cond.true752:                                     ; preds = %cond.false747
  br label %cond.end983, !dbg !19135

cond.false753:                                    ; preds = %cond.false747
  %144 = load i32, i32* %new_tx_size, align 4, !dbg !19135
  %sub754 = sub i32 %144, 1, !dbg !19135
  %conv755 = zext i32 %sub754 to i64, !dbg !19135
  %and756 = and i64 %conv755, 1073741824, !dbg !19135
  %tobool757 = icmp ne i64 %and756, 0, !dbg !19135
  br i1 %tobool757, label %cond.true758, label %cond.false759, !dbg !19135

cond.true758:                                     ; preds = %cond.false753
  br label %cond.end981, !dbg !19135

cond.false759:                                    ; preds = %cond.false753
  %145 = load i32, i32* %new_tx_size, align 4, !dbg !19135
  %sub760 = sub i32 %145, 1, !dbg !19135
  %conv761 = zext i32 %sub760 to i64, !dbg !19135
  %and762 = and i64 %conv761, 536870912, !dbg !19135
  %tobool763 = icmp ne i64 %and762, 0, !dbg !19135
  br i1 %tobool763, label %cond.true764, label %cond.false765, !dbg !19135

cond.true764:                                     ; preds = %cond.false759
  br label %cond.end979, !dbg !19135

cond.false765:                                    ; preds = %cond.false759
  %146 = load i32, i32* %new_tx_size, align 4, !dbg !19135
  %sub766 = sub i32 %146, 1, !dbg !19135
  %conv767 = zext i32 %sub766 to i64, !dbg !19135
  %and768 = and i64 %conv767, 268435456, !dbg !19135
  %tobool769 = icmp ne i64 %and768, 0, !dbg !19135
  br i1 %tobool769, label %cond.true770, label %cond.false771, !dbg !19135

cond.true770:                                     ; preds = %cond.false765
  br label %cond.end977, !dbg !19135

cond.false771:                                    ; preds = %cond.false765
  %147 = load i32, i32* %new_tx_size, align 4, !dbg !19135
  %sub772 = sub i32 %147, 1, !dbg !19135
  %conv773 = zext i32 %sub772 to i64, !dbg !19135
  %and774 = and i64 %conv773, 134217728, !dbg !19135
  %tobool775 = icmp ne i64 %and774, 0, !dbg !19135
  br i1 %tobool775, label %cond.true776, label %cond.false777, !dbg !19135

cond.true776:                                     ; preds = %cond.false771
  br label %cond.end975, !dbg !19135

cond.false777:                                    ; preds = %cond.false771
  %148 = load i32, i32* %new_tx_size, align 4, !dbg !19135
  %sub778 = sub i32 %148, 1, !dbg !19135
  %conv779 = zext i32 %sub778 to i64, !dbg !19135
  %and780 = and i64 %conv779, 67108864, !dbg !19135
  %tobool781 = icmp ne i64 %and780, 0, !dbg !19135
  br i1 %tobool781, label %cond.true782, label %cond.false783, !dbg !19135

cond.true782:                                     ; preds = %cond.false777
  br label %cond.end973, !dbg !19135

cond.false783:                                    ; preds = %cond.false777
  %149 = load i32, i32* %new_tx_size, align 4, !dbg !19135
  %sub784 = sub i32 %149, 1, !dbg !19135
  %conv785 = zext i32 %sub784 to i64, !dbg !19135
  %and786 = and i64 %conv785, 33554432, !dbg !19135
  %tobool787 = icmp ne i64 %and786, 0, !dbg !19135
  br i1 %tobool787, label %cond.true788, label %cond.false789, !dbg !19135

cond.true788:                                     ; preds = %cond.false783
  br label %cond.end971, !dbg !19135

cond.false789:                                    ; preds = %cond.false783
  %150 = load i32, i32* %new_tx_size, align 4, !dbg !19135
  %sub790 = sub i32 %150, 1, !dbg !19135
  %conv791 = zext i32 %sub790 to i64, !dbg !19135
  %and792 = and i64 %conv791, 16777216, !dbg !19135
  %tobool793 = icmp ne i64 %and792, 0, !dbg !19135
  br i1 %tobool793, label %cond.true794, label %cond.false795, !dbg !19135

cond.true794:                                     ; preds = %cond.false789
  br label %cond.end969, !dbg !19135

cond.false795:                                    ; preds = %cond.false789
  %151 = load i32, i32* %new_tx_size, align 4, !dbg !19135
  %sub796 = sub i32 %151, 1, !dbg !19135
  %conv797 = zext i32 %sub796 to i64, !dbg !19135
  %and798 = and i64 %conv797, 8388608, !dbg !19135
  %tobool799 = icmp ne i64 %and798, 0, !dbg !19135
  br i1 %tobool799, label %cond.true800, label %cond.false801, !dbg !19135

cond.true800:                                     ; preds = %cond.false795
  br label %cond.end967, !dbg !19135

cond.false801:                                    ; preds = %cond.false795
  %152 = load i32, i32* %new_tx_size, align 4, !dbg !19135
  %sub802 = sub i32 %152, 1, !dbg !19135
  %conv803 = zext i32 %sub802 to i64, !dbg !19135
  %and804 = and i64 %conv803, 4194304, !dbg !19135
  %tobool805 = icmp ne i64 %and804, 0, !dbg !19135
  br i1 %tobool805, label %cond.true806, label %cond.false807, !dbg !19135

cond.true806:                                     ; preds = %cond.false801
  br label %cond.end965, !dbg !19135

cond.false807:                                    ; preds = %cond.false801
  %153 = load i32, i32* %new_tx_size, align 4, !dbg !19135
  %sub808 = sub i32 %153, 1, !dbg !19135
  %conv809 = zext i32 %sub808 to i64, !dbg !19135
  %and810 = and i64 %conv809, 2097152, !dbg !19135
  %tobool811 = icmp ne i64 %and810, 0, !dbg !19135
  br i1 %tobool811, label %cond.true812, label %cond.false813, !dbg !19135

cond.true812:                                     ; preds = %cond.false807
  br label %cond.end963, !dbg !19135

cond.false813:                                    ; preds = %cond.false807
  %154 = load i32, i32* %new_tx_size, align 4, !dbg !19135
  %sub814 = sub i32 %154, 1, !dbg !19135
  %conv815 = zext i32 %sub814 to i64, !dbg !19135
  %and816 = and i64 %conv815, 1048576, !dbg !19135
  %tobool817 = icmp ne i64 %and816, 0, !dbg !19135
  br i1 %tobool817, label %cond.true818, label %cond.false819, !dbg !19135

cond.true818:                                     ; preds = %cond.false813
  br label %cond.end961, !dbg !19135

cond.false819:                                    ; preds = %cond.false813
  %155 = load i32, i32* %new_tx_size, align 4, !dbg !19135
  %sub820 = sub i32 %155, 1, !dbg !19135
  %conv821 = zext i32 %sub820 to i64, !dbg !19135
  %and822 = and i64 %conv821, 524288, !dbg !19135
  %tobool823 = icmp ne i64 %and822, 0, !dbg !19135
  br i1 %tobool823, label %cond.true824, label %cond.false825, !dbg !19135

cond.true824:                                     ; preds = %cond.false819
  br label %cond.end959, !dbg !19135

cond.false825:                                    ; preds = %cond.false819
  %156 = load i32, i32* %new_tx_size, align 4, !dbg !19135
  %sub826 = sub i32 %156, 1, !dbg !19135
  %conv827 = zext i32 %sub826 to i64, !dbg !19135
  %and828 = and i64 %conv827, 262144, !dbg !19135
  %tobool829 = icmp ne i64 %and828, 0, !dbg !19135
  br i1 %tobool829, label %cond.true830, label %cond.false831, !dbg !19135

cond.true830:                                     ; preds = %cond.false825
  br label %cond.end957, !dbg !19135

cond.false831:                                    ; preds = %cond.false825
  %157 = load i32, i32* %new_tx_size, align 4, !dbg !19135
  %sub832 = sub i32 %157, 1, !dbg !19135
  %conv833 = zext i32 %sub832 to i64, !dbg !19135
  %and834 = and i64 %conv833, 131072, !dbg !19135
  %tobool835 = icmp ne i64 %and834, 0, !dbg !19135
  br i1 %tobool835, label %cond.true836, label %cond.false837, !dbg !19135

cond.true836:                                     ; preds = %cond.false831
  br label %cond.end955, !dbg !19135

cond.false837:                                    ; preds = %cond.false831
  %158 = load i32, i32* %new_tx_size, align 4, !dbg !19135
  %sub838 = sub i32 %158, 1, !dbg !19135
  %conv839 = zext i32 %sub838 to i64, !dbg !19135
  %and840 = and i64 %conv839, 65536, !dbg !19135
  %tobool841 = icmp ne i64 %and840, 0, !dbg !19135
  br i1 %tobool841, label %cond.true842, label %cond.false843, !dbg !19135

cond.true842:                                     ; preds = %cond.false837
  br label %cond.end953, !dbg !19135

cond.false843:                                    ; preds = %cond.false837
  %159 = load i32, i32* %new_tx_size, align 4, !dbg !19135
  %sub844 = sub i32 %159, 1, !dbg !19135
  %conv845 = zext i32 %sub844 to i64, !dbg !19135
  %and846 = and i64 %conv845, 32768, !dbg !19135
  %tobool847 = icmp ne i64 %and846, 0, !dbg !19135
  br i1 %tobool847, label %cond.true848, label %cond.false849, !dbg !19135

cond.true848:                                     ; preds = %cond.false843
  br label %cond.end951, !dbg !19135

cond.false849:                                    ; preds = %cond.false843
  %160 = load i32, i32* %new_tx_size, align 4, !dbg !19135
  %sub850 = sub i32 %160, 1, !dbg !19135
  %conv851 = zext i32 %sub850 to i64, !dbg !19135
  %and852 = and i64 %conv851, 16384, !dbg !19135
  %tobool853 = icmp ne i64 %and852, 0, !dbg !19135
  br i1 %tobool853, label %cond.true854, label %cond.false855, !dbg !19135

cond.true854:                                     ; preds = %cond.false849
  br label %cond.end949, !dbg !19135

cond.false855:                                    ; preds = %cond.false849
  %161 = load i32, i32* %new_tx_size, align 4, !dbg !19135
  %sub856 = sub i32 %161, 1, !dbg !19135
  %conv857 = zext i32 %sub856 to i64, !dbg !19135
  %and858 = and i64 %conv857, 8192, !dbg !19135
  %tobool859 = icmp ne i64 %and858, 0, !dbg !19135
  br i1 %tobool859, label %cond.true860, label %cond.false861, !dbg !19135

cond.true860:                                     ; preds = %cond.false855
  br label %cond.end947, !dbg !19135

cond.false861:                                    ; preds = %cond.false855
  %162 = load i32, i32* %new_tx_size, align 4, !dbg !19135
  %sub862 = sub i32 %162, 1, !dbg !19135
  %conv863 = zext i32 %sub862 to i64, !dbg !19135
  %and864 = and i64 %conv863, 4096, !dbg !19135
  %tobool865 = icmp ne i64 %and864, 0, !dbg !19135
  br i1 %tobool865, label %cond.true866, label %cond.false867, !dbg !19135

cond.true866:                                     ; preds = %cond.false861
  br label %cond.end945, !dbg !19135

cond.false867:                                    ; preds = %cond.false861
  %163 = load i32, i32* %new_tx_size, align 4, !dbg !19135
  %sub868 = sub i32 %163, 1, !dbg !19135
  %conv869 = zext i32 %sub868 to i64, !dbg !19135
  %and870 = and i64 %conv869, 2048, !dbg !19135
  %tobool871 = icmp ne i64 %and870, 0, !dbg !19135
  br i1 %tobool871, label %cond.true872, label %cond.false873, !dbg !19135

cond.true872:                                     ; preds = %cond.false867
  br label %cond.end943, !dbg !19135

cond.false873:                                    ; preds = %cond.false867
  %164 = load i32, i32* %new_tx_size, align 4, !dbg !19135
  %sub874 = sub i32 %164, 1, !dbg !19135
  %conv875 = zext i32 %sub874 to i64, !dbg !19135
  %and876 = and i64 %conv875, 1024, !dbg !19135
  %tobool877 = icmp ne i64 %and876, 0, !dbg !19135
  br i1 %tobool877, label %cond.true878, label %cond.false879, !dbg !19135

cond.true878:                                     ; preds = %cond.false873
  br label %cond.end941, !dbg !19135

cond.false879:                                    ; preds = %cond.false873
  %165 = load i32, i32* %new_tx_size, align 4, !dbg !19135
  %sub880 = sub i32 %165, 1, !dbg !19135
  %conv881 = zext i32 %sub880 to i64, !dbg !19135
  %and882 = and i64 %conv881, 512, !dbg !19135
  %tobool883 = icmp ne i64 %and882, 0, !dbg !19135
  br i1 %tobool883, label %cond.true884, label %cond.false885, !dbg !19135

cond.true884:                                     ; preds = %cond.false879
  br label %cond.end939, !dbg !19135

cond.false885:                                    ; preds = %cond.false879
  %166 = load i32, i32* %new_tx_size, align 4, !dbg !19135
  %sub886 = sub i32 %166, 1, !dbg !19135
  %conv887 = zext i32 %sub886 to i64, !dbg !19135
  %and888 = and i64 %conv887, 256, !dbg !19135
  %tobool889 = icmp ne i64 %and888, 0, !dbg !19135
  br i1 %tobool889, label %cond.true890, label %cond.false891, !dbg !19135

cond.true890:                                     ; preds = %cond.false885
  br label %cond.end937, !dbg !19135

cond.false891:                                    ; preds = %cond.false885
  %167 = load i32, i32* %new_tx_size, align 4, !dbg !19135
  %sub892 = sub i32 %167, 1, !dbg !19135
  %conv893 = zext i32 %sub892 to i64, !dbg !19135
  %and894 = and i64 %conv893, 128, !dbg !19135
  %tobool895 = icmp ne i64 %and894, 0, !dbg !19135
  br i1 %tobool895, label %cond.true896, label %cond.false897, !dbg !19135

cond.true896:                                     ; preds = %cond.false891
  br label %cond.end935, !dbg !19135

cond.false897:                                    ; preds = %cond.false891
  %168 = load i32, i32* %new_tx_size, align 4, !dbg !19135
  %sub898 = sub i32 %168, 1, !dbg !19135
  %conv899 = zext i32 %sub898 to i64, !dbg !19135
  %and900 = and i64 %conv899, 64, !dbg !19135
  %tobool901 = icmp ne i64 %and900, 0, !dbg !19135
  br i1 %tobool901, label %cond.true902, label %cond.false903, !dbg !19135

cond.true902:                                     ; preds = %cond.false897
  br label %cond.end933, !dbg !19135

cond.false903:                                    ; preds = %cond.false897
  %169 = load i32, i32* %new_tx_size, align 4, !dbg !19135
  %sub904 = sub i32 %169, 1, !dbg !19135
  %conv905 = zext i32 %sub904 to i64, !dbg !19135
  %and906 = and i64 %conv905, 32, !dbg !19135
  %tobool907 = icmp ne i64 %and906, 0, !dbg !19135
  br i1 %tobool907, label %cond.true908, label %cond.false909, !dbg !19135

cond.true908:                                     ; preds = %cond.false903
  br label %cond.end931, !dbg !19135

cond.false909:                                    ; preds = %cond.false903
  %170 = load i32, i32* %new_tx_size, align 4, !dbg !19135
  %sub910 = sub i32 %170, 1, !dbg !19135
  %conv911 = zext i32 %sub910 to i64, !dbg !19135
  %and912 = and i64 %conv911, 16, !dbg !19135
  %tobool913 = icmp ne i64 %and912, 0, !dbg !19135
  br i1 %tobool913, label %cond.true914, label %cond.false915, !dbg !19135

cond.true914:                                     ; preds = %cond.false909
  br label %cond.end929, !dbg !19135

cond.false915:                                    ; preds = %cond.false909
  %171 = load i32, i32* %new_tx_size, align 4, !dbg !19135
  %sub916 = sub i32 %171, 1, !dbg !19135
  %conv917 = zext i32 %sub916 to i64, !dbg !19135
  %and918 = and i64 %conv917, 8, !dbg !19135
  %tobool919 = icmp ne i64 %and918, 0, !dbg !19135
  br i1 %tobool919, label %cond.true920, label %cond.false921, !dbg !19135

cond.true920:                                     ; preds = %cond.false915
  br label %cond.end927, !dbg !19135

cond.false921:                                    ; preds = %cond.false915
  %172 = load i32, i32* %new_tx_size, align 4, !dbg !19135
  %sub922 = sub i32 %172, 1, !dbg !19135
  %conv923 = zext i32 %sub922 to i64, !dbg !19135
  %and924 = and i64 %conv923, 4, !dbg !19135
  %tobool925 = icmp ne i64 %and924, 0, !dbg !19135
  %173 = zext i1 %tobool925 to i64, !dbg !19135
  %cond926 = select i1 %tobool925, i32 2, i32 1, !dbg !19135
  br label %cond.end927, !dbg !19135

cond.end927:                                      ; preds = %cond.false921, %cond.true920
  %cond928 = phi i32 [ 3, %cond.true920 ], [ %cond926, %cond.false921 ], !dbg !19135
  br label %cond.end929, !dbg !19135

cond.end929:                                      ; preds = %cond.end927, %cond.true914
  %cond930 = phi i32 [ 4, %cond.true914 ], [ %cond928, %cond.end927 ], !dbg !19135
  br label %cond.end931, !dbg !19135

cond.end931:                                      ; preds = %cond.end929, %cond.true908
  %cond932 = phi i32 [ 5, %cond.true908 ], [ %cond930, %cond.end929 ], !dbg !19135
  br label %cond.end933, !dbg !19135

cond.end933:                                      ; preds = %cond.end931, %cond.true902
  %cond934 = phi i32 [ 6, %cond.true902 ], [ %cond932, %cond.end931 ], !dbg !19135
  br label %cond.end935, !dbg !19135

cond.end935:                                      ; preds = %cond.end933, %cond.true896
  %cond936 = phi i32 [ 7, %cond.true896 ], [ %cond934, %cond.end933 ], !dbg !19135
  br label %cond.end937, !dbg !19135

cond.end937:                                      ; preds = %cond.end935, %cond.true890
  %cond938 = phi i32 [ 8, %cond.true890 ], [ %cond936, %cond.end935 ], !dbg !19135
  br label %cond.end939, !dbg !19135

cond.end939:                                      ; preds = %cond.end937, %cond.true884
  %cond940 = phi i32 [ 9, %cond.true884 ], [ %cond938, %cond.end937 ], !dbg !19135
  br label %cond.end941, !dbg !19135

cond.end941:                                      ; preds = %cond.end939, %cond.true878
  %cond942 = phi i32 [ 10, %cond.true878 ], [ %cond940, %cond.end939 ], !dbg !19135
  br label %cond.end943, !dbg !19135

cond.end943:                                      ; preds = %cond.end941, %cond.true872
  %cond944 = phi i32 [ 11, %cond.true872 ], [ %cond942, %cond.end941 ], !dbg !19135
  br label %cond.end945, !dbg !19135

cond.end945:                                      ; preds = %cond.end943, %cond.true866
  %cond946 = phi i32 [ 12, %cond.true866 ], [ %cond944, %cond.end943 ], !dbg !19135
  br label %cond.end947, !dbg !19135

cond.end947:                                      ; preds = %cond.end945, %cond.true860
  %cond948 = phi i32 [ 13, %cond.true860 ], [ %cond946, %cond.end945 ], !dbg !19135
  br label %cond.end949, !dbg !19135

cond.end949:                                      ; preds = %cond.end947, %cond.true854
  %cond950 = phi i32 [ 14, %cond.true854 ], [ %cond948, %cond.end947 ], !dbg !19135
  br label %cond.end951, !dbg !19135

cond.end951:                                      ; preds = %cond.end949, %cond.true848
  %cond952 = phi i32 [ 15, %cond.true848 ], [ %cond950, %cond.end949 ], !dbg !19135
  br label %cond.end953, !dbg !19135

cond.end953:                                      ; preds = %cond.end951, %cond.true842
  %cond954 = phi i32 [ 16, %cond.true842 ], [ %cond952, %cond.end951 ], !dbg !19135
  br label %cond.end955, !dbg !19135

cond.end955:                                      ; preds = %cond.end953, %cond.true836
  %cond956 = phi i32 [ 17, %cond.true836 ], [ %cond954, %cond.end953 ], !dbg !19135
  br label %cond.end957, !dbg !19135

cond.end957:                                      ; preds = %cond.end955, %cond.true830
  %cond958 = phi i32 [ 18, %cond.true830 ], [ %cond956, %cond.end955 ], !dbg !19135
  br label %cond.end959, !dbg !19135

cond.end959:                                      ; preds = %cond.end957, %cond.true824
  %cond960 = phi i32 [ 19, %cond.true824 ], [ %cond958, %cond.end957 ], !dbg !19135
  br label %cond.end961, !dbg !19135

cond.end961:                                      ; preds = %cond.end959, %cond.true818
  %cond962 = phi i32 [ 20, %cond.true818 ], [ %cond960, %cond.end959 ], !dbg !19135
  br label %cond.end963, !dbg !19135

cond.end963:                                      ; preds = %cond.end961, %cond.true812
  %cond964 = phi i32 [ 21, %cond.true812 ], [ %cond962, %cond.end961 ], !dbg !19135
  br label %cond.end965, !dbg !19135

cond.end965:                                      ; preds = %cond.end963, %cond.true806
  %cond966 = phi i32 [ 22, %cond.true806 ], [ %cond964, %cond.end963 ], !dbg !19135
  br label %cond.end967, !dbg !19135

cond.end967:                                      ; preds = %cond.end965, %cond.true800
  %cond968 = phi i32 [ 23, %cond.true800 ], [ %cond966, %cond.end965 ], !dbg !19135
  br label %cond.end969, !dbg !19135

cond.end969:                                      ; preds = %cond.end967, %cond.true794
  %cond970 = phi i32 [ 24, %cond.true794 ], [ %cond968, %cond.end967 ], !dbg !19135
  br label %cond.end971, !dbg !19135

cond.end971:                                      ; preds = %cond.end969, %cond.true788
  %cond972 = phi i32 [ 25, %cond.true788 ], [ %cond970, %cond.end969 ], !dbg !19135
  br label %cond.end973, !dbg !19135

cond.end973:                                      ; preds = %cond.end971, %cond.true782
  %cond974 = phi i32 [ 26, %cond.true782 ], [ %cond972, %cond.end971 ], !dbg !19135
  br label %cond.end975, !dbg !19135

cond.end975:                                      ; preds = %cond.end973, %cond.true776
  %cond976 = phi i32 [ 27, %cond.true776 ], [ %cond974, %cond.end973 ], !dbg !19135
  br label %cond.end977, !dbg !19135

cond.end977:                                      ; preds = %cond.end975, %cond.true770
  %cond978 = phi i32 [ 28, %cond.true770 ], [ %cond976, %cond.end975 ], !dbg !19135
  br label %cond.end979, !dbg !19135

cond.end979:                                      ; preds = %cond.end977, %cond.true764
  %cond980 = phi i32 [ 29, %cond.true764 ], [ %cond978, %cond.end977 ], !dbg !19135
  br label %cond.end981, !dbg !19135

cond.end981:                                      ; preds = %cond.end979, %cond.true758
  %cond982 = phi i32 [ 30, %cond.true758 ], [ %cond980, %cond.end979 ], !dbg !19135
  br label %cond.end983, !dbg !19135

cond.end983:                                      ; preds = %cond.end981, %cond.true752
  %cond984 = phi i32 [ 31, %cond.true752 ], [ %cond982, %cond.end981 ], !dbg !19135
  br label %cond.end985, !dbg !19135

cond.end985:                                      ; preds = %cond.end983, %cond.true746
  %cond986 = phi i32 [ 32, %cond.true746 ], [ %cond984, %cond.end983 ], !dbg !19135
  br label %cond.end987, !dbg !19135

cond.end987:                                      ; preds = %cond.end985, %cond.true740
  %cond988 = phi i32 [ 33, %cond.true740 ], [ %cond986, %cond.end985 ], !dbg !19135
  br label %cond.end989, !dbg !19135

cond.end989:                                      ; preds = %cond.end987, %cond.true734
  %cond990 = phi i32 [ 34, %cond.true734 ], [ %cond988, %cond.end987 ], !dbg !19135
  br label %cond.end991, !dbg !19135

cond.end991:                                      ; preds = %cond.end989, %cond.true728
  %cond992 = phi i32 [ 35, %cond.true728 ], [ %cond990, %cond.end989 ], !dbg !19135
  br label %cond.end993, !dbg !19135

cond.end993:                                      ; preds = %cond.end991, %cond.true722
  %cond994 = phi i32 [ 36, %cond.true722 ], [ %cond992, %cond.end991 ], !dbg !19135
  br label %cond.end995, !dbg !19135

cond.end995:                                      ; preds = %cond.end993, %cond.true716
  %cond996 = phi i32 [ 37, %cond.true716 ], [ %cond994, %cond.end993 ], !dbg !19135
  br label %cond.end997, !dbg !19135

cond.end997:                                      ; preds = %cond.end995, %cond.true710
  %cond998 = phi i32 [ 38, %cond.true710 ], [ %cond996, %cond.end995 ], !dbg !19135
  br label %cond.end999, !dbg !19135

cond.end999:                                      ; preds = %cond.end997, %cond.true704
  %cond1000 = phi i32 [ 39, %cond.true704 ], [ %cond998, %cond.end997 ], !dbg !19135
  br label %cond.end1001, !dbg !19135

cond.end1001:                                     ; preds = %cond.end999, %cond.true698
  %cond1002 = phi i32 [ 40, %cond.true698 ], [ %cond1000, %cond.end999 ], !dbg !19135
  br label %cond.end1003, !dbg !19135

cond.end1003:                                     ; preds = %cond.end1001, %cond.true692
  %cond1004 = phi i32 [ 41, %cond.true692 ], [ %cond1002, %cond.end1001 ], !dbg !19135
  br label %cond.end1005, !dbg !19135

cond.end1005:                                     ; preds = %cond.end1003, %cond.true686
  %cond1006 = phi i32 [ 42, %cond.true686 ], [ %cond1004, %cond.end1003 ], !dbg !19135
  br label %cond.end1007, !dbg !19135

cond.end1007:                                     ; preds = %cond.end1005, %cond.true680
  %cond1008 = phi i32 [ 43, %cond.true680 ], [ %cond1006, %cond.end1005 ], !dbg !19135
  br label %cond.end1009, !dbg !19135

cond.end1009:                                     ; preds = %cond.end1007, %cond.true674
  %cond1010 = phi i32 [ 44, %cond.true674 ], [ %cond1008, %cond.end1007 ], !dbg !19135
  br label %cond.end1011, !dbg !19135

cond.end1011:                                     ; preds = %cond.end1009, %cond.true668
  %cond1012 = phi i32 [ 45, %cond.true668 ], [ %cond1010, %cond.end1009 ], !dbg !19135
  br label %cond.end1013, !dbg !19135

cond.end1013:                                     ; preds = %cond.end1011, %cond.true662
  %cond1014 = phi i32 [ 46, %cond.true662 ], [ %cond1012, %cond.end1011 ], !dbg !19135
  br label %cond.end1015, !dbg !19135

cond.end1015:                                     ; preds = %cond.end1013, %cond.true656
  %cond1016 = phi i32 [ 47, %cond.true656 ], [ %cond1014, %cond.end1013 ], !dbg !19135
  br label %cond.end1017, !dbg !19135

cond.end1017:                                     ; preds = %cond.end1015, %cond.true650
  %cond1018 = phi i32 [ 48, %cond.true650 ], [ %cond1016, %cond.end1015 ], !dbg !19135
  br label %cond.end1019, !dbg !19135

cond.end1019:                                     ; preds = %cond.end1017, %cond.true644
  %cond1020 = phi i32 [ 49, %cond.true644 ], [ %cond1018, %cond.end1017 ], !dbg !19135
  br label %cond.end1021, !dbg !19135

cond.end1021:                                     ; preds = %cond.end1019, %cond.true638
  %cond1022 = phi i32 [ 50, %cond.true638 ], [ %cond1020, %cond.end1019 ], !dbg !19135
  br label %cond.end1023, !dbg !19135

cond.end1023:                                     ; preds = %cond.end1021, %cond.true632
  %cond1024 = phi i32 [ 51, %cond.true632 ], [ %cond1022, %cond.end1021 ], !dbg !19135
  br label %cond.end1025, !dbg !19135

cond.end1025:                                     ; preds = %cond.end1023, %cond.true626
  %cond1026 = phi i32 [ 52, %cond.true626 ], [ %cond1024, %cond.end1023 ], !dbg !19135
  br label %cond.end1027, !dbg !19135

cond.end1027:                                     ; preds = %cond.end1025, %cond.true620
  %cond1028 = phi i32 [ 53, %cond.true620 ], [ %cond1026, %cond.end1025 ], !dbg !19135
  br label %cond.end1029, !dbg !19135

cond.end1029:                                     ; preds = %cond.end1027, %cond.true614
  %cond1030 = phi i32 [ 54, %cond.true614 ], [ %cond1028, %cond.end1027 ], !dbg !19135
  br label %cond.end1031, !dbg !19135

cond.end1031:                                     ; preds = %cond.end1029, %cond.true608
  %cond1032 = phi i32 [ 55, %cond.true608 ], [ %cond1030, %cond.end1029 ], !dbg !19135
  br label %cond.end1033, !dbg !19135

cond.end1033:                                     ; preds = %cond.end1031, %cond.true602
  %cond1034 = phi i32 [ 56, %cond.true602 ], [ %cond1032, %cond.end1031 ], !dbg !19135
  br label %cond.end1035, !dbg !19135

cond.end1035:                                     ; preds = %cond.end1033, %cond.true596
  %cond1036 = phi i32 [ 57, %cond.true596 ], [ %cond1034, %cond.end1033 ], !dbg !19135
  br label %cond.end1037, !dbg !19135

cond.end1037:                                     ; preds = %cond.end1035, %cond.true590
  %cond1038 = phi i32 [ 58, %cond.true590 ], [ %cond1036, %cond.end1035 ], !dbg !19135
  br label %cond.end1039, !dbg !19135

cond.end1039:                                     ; preds = %cond.end1037, %cond.true584
  %cond1040 = phi i32 [ 59, %cond.true584 ], [ %cond1038, %cond.end1037 ], !dbg !19135
  br label %cond.end1041, !dbg !19135

cond.end1041:                                     ; preds = %cond.end1039, %cond.true578
  %cond1042 = phi i32 [ 60, %cond.true578 ], [ %cond1040, %cond.end1039 ], !dbg !19135
  br label %cond.end1043, !dbg !19135

cond.end1043:                                     ; preds = %cond.end1041, %cond.true572
  %cond1044 = phi i32 [ 61, %cond.true572 ], [ %cond1042, %cond.end1041 ], !dbg !19135
  br label %cond.end1045, !dbg !19135

cond.end1045:                                     ; preds = %cond.end1043, %cond.true566
  %cond1046 = phi i32 [ 62, %cond.true566 ], [ %cond1044, %cond.end1043 ], !dbg !19135
  br label %cond.end1047, !dbg !19135

cond.end1047:                                     ; preds = %cond.end1045, %cond.true560
  %cond1048 = phi i32 [ 63, %cond.true560 ], [ %cond1046, %cond.end1045 ], !dbg !19135
  br label %cond.end1049, !dbg !19135

cond.end1049:                                     ; preds = %cond.end1047, %cond.true554
  %cond1050 = phi i32 [ 0, %cond.true554 ], [ %cond1048, %cond.end1047 ], !dbg !19135
  br label %cond.end1052, !dbg !19135

cond.false1051:                                   ; preds = %cond.true548
  br label %cond.end1052, !dbg !19135

cond.end1052:                                     ; preds = %cond.false1051, %cond.end1049
  %cond1053 = phi i32 [ %cond1050, %cond.end1049 ], [ -1, %cond.false1051 ], !dbg !19135
  br label %cond.end1057, !dbg !19135

cond.false1054:                                   ; preds = %cond.false546
  %174 = load i32, i32* %new_tx_size, align 4, !dbg !19135
  %sub1055 = sub i32 %174, 1, !dbg !19135
  %call1056 = call i32 @__ilog2_u32(i32 %sub1055) #16, !dbg !19135
  br label %cond.end1057, !dbg !19135

cond.end1057:                                     ; preds = %cond.false1054, %cond.end1052
  %cond1058 = phi i32 [ %cond1053, %cond.end1052 ], [ %call1056, %cond.false1054 ], !dbg !19135
  %add1059 = add i32 %cond1058, 1, !dbg !19135
  %sh_prom1060 = zext i32 %add1059 to i64, !dbg !19135
  %shl1061 = shl i64 1, %sh_prom1060, !dbg !19135
  br label %cond.end1062, !dbg !19135

cond.end1062:                                     ; preds = %cond.end1057, %cond.true545
  %cond1063 = phi i64 [ 1, %cond.true545 ], [ %shl1061, %cond.end1057 ], !dbg !19135
  br label %cond.end1067, !dbg !19135

cond.false1064:                                   ; preds = %cond.end540
  %175 = load i32, i32* %new_tx_size, align 4, !dbg !19135
  %conv1065 = zext i32 %175 to i64, !dbg !19135
  %call1066 = call i64 @__roundup_pow_of_two(i64 %conv1065) #16, !dbg !19135
  br label %cond.end1067, !dbg !19135

cond.end1067:                                     ; preds = %cond.false1064, %cond.end1062
  %cond1068 = phi i64 [ %cond1063, %cond.end1062 ], [ %call1066, %cond.false1064 ], !dbg !19135
  %conv1069 = trunc i64 %cond1068 to i32, !dbg !19135
  store i32 %conv1069, i32* %new_tx_size, align 4, !dbg !19136
  %176 = load i32, i32* %new_tx_size, align 4, !dbg !19137
  %177 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !19139
  %tx_ring_size = getelementptr inbounds %struct.macb, %struct.macb* %177, i32 0, i32 6, !dbg !19140
  %178 = load i32, i32* %tx_ring_size, align 4, !dbg !19140
  %cmp1070 = icmp eq i32 %176, %178, !dbg !19141
  br i1 %cmp1070, label %land.lhs.true, label %if.end1075, !dbg !19142

land.lhs.true:                                    ; preds = %cond.end1067
  %179 = load i32, i32* %new_rx_size, align 4, !dbg !19143
  %180 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !19144
  %rx_ring_size = getelementptr inbounds %struct.macb, %struct.macb* %180, i32 0, i32 5, !dbg !19145
  %181 = load i32, i32* %rx_ring_size, align 8, !dbg !19145
  %cmp1072 = icmp eq i32 %179, %181, !dbg !19146
  br i1 %cmp1072, label %if.then1074, label %if.end1075, !dbg !19147

if.then1074:                                      ; preds = %land.lhs.true
  store i32 0, i32* %retval, align 4, !dbg !19148
  br label %return, !dbg !19148

if.end1075:                                       ; preds = %land.lhs.true, %cond.end1067
  %182 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !19150
  %dev = getelementptr inbounds %struct.macb, %struct.macb* %182, i32 0, i32 17, !dbg !19152
  %183 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !19152
  %call1076 = call zeroext i1 @netif_running(%struct.net_device* %183) #12, !dbg !19153
  br i1 %call1076, label %if.then1077, label %if.end1080, !dbg !19154

if.then1077:                                      ; preds = %if.end1075
  store i32 1, i32* %reset, align 4, !dbg !19155
  %184 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !19157
  %dev1078 = getelementptr inbounds %struct.macb, %struct.macb* %184, i32 0, i32 17, !dbg !19158
  %185 = load %struct.net_device*, %struct.net_device** %dev1078, align 8, !dbg !19158
  %call1079 = call i32 @macb_close(%struct.net_device* %185) #12, !dbg !19159
  br label %if.end1080, !dbg !19160

if.end1080:                                       ; preds = %if.then1077, %if.end1075
  %186 = load i32, i32* %new_rx_size, align 4, !dbg !19161
  %187 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !19162
  %rx_ring_size1081 = getelementptr inbounds %struct.macb, %struct.macb* %187, i32 0, i32 5, !dbg !19163
  store i32 %186, i32* %rx_ring_size1081, align 8, !dbg !19164
  %188 = load i32, i32* %new_tx_size, align 4, !dbg !19165
  %189 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !19166
  %tx_ring_size1082 = getelementptr inbounds %struct.macb, %struct.macb* %189, i32 0, i32 6, !dbg !19167
  store i32 %188, i32* %tx_ring_size1082, align 4, !dbg !19168
  %190 = load i32, i32* %reset, align 4, !dbg !19169
  %tobool1083 = icmp ne i32 %190, 0, !dbg !19169
  br i1 %tobool1083, label %if.then1084, label %if.end1087, !dbg !19171

if.then1084:                                      ; preds = %if.end1080
  %191 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !19172
  %dev1085 = getelementptr inbounds %struct.macb, %struct.macb* %191, i32 0, i32 17, !dbg !19173
  %192 = load %struct.net_device*, %struct.net_device** %dev1085, align 8, !dbg !19173
  %call1086 = call i32 @macb_open(%struct.net_device* %192) #12, !dbg !19174
  br label %if.end1087, !dbg !19174

if.end1087:                                       ; preds = %if.then1084, %if.end1080
  store i32 0, i32* %retval, align 4, !dbg !19175
  br label %return, !dbg !19175

return:                                           ; preds = %if.end1087, %if.then1074, %if.then
  %193 = load i32, i32* %retval, align 4, !dbg !19176
  ret i32 %193, !dbg !19176
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @gem_get_ethtool_strings(%struct.net_device* %dev, i32 %sset, i8* %p) #2 !dbg !19177 {
entry:
  %dev.addr = alloca %struct.net_device*, align 8
  %sset.addr = alloca i32, align 4
  %p.addr = alloca i8*, align 8
  %stat_string = alloca [32 x i8], align 16
  %bp = alloca %struct.macb*, align 8
  %queue = alloca %struct.macb_queue*, align 8
  %i = alloca i32, align 4
  %q = alloca i32, align 4
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !19178, metadata !DIExpression()), !dbg !19179
  store i32 %sset, i32* %sset.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %sset.addr, metadata !19180, metadata !DIExpression()), !dbg !19181
  store i8* %p, i8** %p.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %p.addr, metadata !19182, metadata !DIExpression()), !dbg !19183
  call void @llvm.dbg.declare(metadata [32 x i8]* %stat_string, metadata !19184, metadata !DIExpression()), !dbg !19185
  call void @llvm.dbg.declare(metadata %struct.macb** %bp, metadata !19186, metadata !DIExpression()), !dbg !19187
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !19188
  %call = call i8* @netdev_priv(%struct.net_device* %0) #12, !dbg !19189
  %1 = bitcast i8* %call to %struct.macb*, !dbg !19189
  store %struct.macb* %1, %struct.macb** %bp, align 8, !dbg !19187
  call void @llvm.dbg.declare(metadata %struct.macb_queue** %queue, metadata !19190, metadata !DIExpression()), !dbg !19191
  call void @llvm.dbg.declare(metadata i32* %i, metadata !19192, metadata !DIExpression()), !dbg !19193
  call void @llvm.dbg.declare(metadata i32* %q, metadata !19194, metadata !DIExpression()), !dbg !19195
  %2 = load i32, i32* %sset.addr, align 4, !dbg !19196
  switch i32 %2, label %sw.epilog [
    i32 1, label %sw.bb
  ], !dbg !19197

sw.bb:                                            ; preds = %entry
  store i32 0, i32* %i, align 4, !dbg !19198
  br label %for.cond, !dbg !19201

for.cond:                                         ; preds = %for.inc, %sw.bb
  %3 = load i32, i32* %i, align 4, !dbg !19202
  %conv = zext i32 %3 to i64, !dbg !19202
  %cmp = icmp ult i64 %conv, 43, !dbg !19204
  br i1 %cmp, label %for.body, label %for.end, !dbg !19205

for.body:                                         ; preds = %for.cond
  %4 = load i8*, i8** %p.addr, align 8, !dbg !19206
  %5 = load i32, i32* %i, align 4, !dbg !19207
  %idxprom = zext i32 %5 to i64, !dbg !19208
  %arrayidx = getelementptr [43 x %struct.gem_statistic], [43 x %struct.gem_statistic]* @gem_statistics, i64 0, i64 %idxprom, !dbg !19208
  %stat_string2 = getelementptr inbounds %struct.gem_statistic, %struct.gem_statistic* %arrayidx, i32 0, i32 0, !dbg !19209
  %arraydecay = getelementptr inbounds [32 x i8], [32 x i8]* %stat_string2, i64 0, i64 0, !dbg !19210
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %4, i8* align 8 %arraydecay, i64 32, i1 false), !dbg !19210
  br label %for.inc, !dbg !19210

for.inc:                                          ; preds = %for.body
  %6 = load i32, i32* %i, align 4, !dbg !19211
  %inc = add i32 %6, 1, !dbg !19211
  store i32 %inc, i32* %i, align 4, !dbg !19211
  %7 = load i8*, i8** %p.addr, align 8, !dbg !19212
  %add.ptr = getelementptr i8, i8* %7, i64 32, !dbg !19212
  store i8* %add.ptr, i8** %p.addr, align 8, !dbg !19212
  br label %for.cond, !dbg !19213, !llvm.loop !19214

for.end:                                          ; preds = %for.cond
  store i32 0, i32* %q, align 4, !dbg !19216
  %8 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !19218
  %queues = getelementptr inbounds %struct.macb, %struct.macb* %8, i32 0, i32 9, !dbg !19219
  %arraydecay3 = getelementptr inbounds [8 x %struct.macb_queue], [8 x %struct.macb_queue]* %queues, i64 0, i64 0, !dbg !19218
  store %struct.macb_queue* %arraydecay3, %struct.macb_queue** %queue, align 8, !dbg !19220
  br label %for.cond4, !dbg !19221

for.cond4:                                        ; preds = %for.inc24, %for.end
  %9 = load i32, i32* %q, align 4, !dbg !19222
  %10 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !19224
  %num_queues = getelementptr inbounds %struct.macb, %struct.macb* %10, i32 0, i32 7, !dbg !19225
  %11 = load i32, i32* %num_queues, align 8, !dbg !19225
  %cmp5 = icmp ult i32 %9, %11, !dbg !19226
  br i1 %cmp5, label %for.body7, label %for.end26, !dbg !19227

for.body7:                                        ; preds = %for.cond4
  store i32 0, i32* %i, align 4, !dbg !19228
  br label %for.cond8, !dbg !19231

for.cond8:                                        ; preds = %for.inc20, %for.body7
  %12 = load i32, i32* %i, align 4, !dbg !19232
  %conv9 = zext i32 %12 to i64, !dbg !19232
  %cmp10 = icmp ult i64 %conv9, 6, !dbg !19234
  br i1 %cmp10, label %for.body12, label %for.end23, !dbg !19235

for.body12:                                       ; preds = %for.cond8
  %arraydecay13 = getelementptr inbounds [32 x i8], [32 x i8]* %stat_string, i64 0, i64 0, !dbg !19236
  %13 = load i32, i32* %q, align 4, !dbg !19238
  %14 = load i32, i32* %i, align 4, !dbg !19239
  %idxprom14 = zext i32 %14 to i64, !dbg !19240
  %arrayidx15 = getelementptr [6 x %struct.gem_statistic], [6 x %struct.gem_statistic]* @queue_statistics, i64 0, i64 %idxprom14, !dbg !19240
  %stat_string16 = getelementptr inbounds %struct.gem_statistic, %struct.gem_statistic* %arrayidx15, i32 0, i32 0, !dbg !19241
  %arraydecay17 = getelementptr inbounds [32 x i8], [32 x i8]* %stat_string16, i64 0, i64 0, !dbg !19240
  %call18 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %arraydecay13, i64 32, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.37, i64 0, i64 0), i32 %13, i8* %arraydecay17) #12, !dbg !19242
  %15 = load i8*, i8** %p.addr, align 8, !dbg !19243
  %arraydecay19 = getelementptr inbounds [32 x i8], [32 x i8]* %stat_string, i64 0, i64 0, !dbg !19244
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %15, i8* align 16 %arraydecay19, i64 32, i1 false), !dbg !19244
  br label %for.inc20, !dbg !19245

for.inc20:                                        ; preds = %for.body12
  %16 = load i32, i32* %i, align 4, !dbg !19246
  %inc21 = add i32 %16, 1, !dbg !19246
  store i32 %inc21, i32* %i, align 4, !dbg !19246
  %17 = load i8*, i8** %p.addr, align 8, !dbg !19247
  %add.ptr22 = getelementptr i8, i8* %17, i64 32, !dbg !19247
  store i8* %add.ptr22, i8** %p.addr, align 8, !dbg !19247
  br label %for.cond8, !dbg !19248, !llvm.loop !19249

for.end23:                                        ; preds = %for.cond8
  br label %for.inc24, !dbg !19251

for.inc24:                                        ; preds = %for.end23
  %18 = load i32, i32* %q, align 4, !dbg !19252
  %inc25 = add i32 %18, 1, !dbg !19252
  store i32 %inc25, i32* %q, align 4, !dbg !19252
  %19 = load %struct.macb_queue*, %struct.macb_queue** %queue, align 8, !dbg !19253
  %incdec.ptr = getelementptr %struct.macb_queue, %struct.macb_queue* %19, i32 1, !dbg !19253
  store %struct.macb_queue* %incdec.ptr, %struct.macb_queue** %queue, align 8, !dbg !19253
  br label %for.cond4, !dbg !19254, !llvm.loop !19255

for.end26:                                        ; preds = %for.cond4
  br label %sw.epilog, !dbg !19257

sw.epilog:                                        ; preds = %entry, %for.end26
  ret void, !dbg !19258
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @gem_get_ethtool_stats(%struct.net_device* %dev, %struct.ethtool_stats* %stats, i64* %data) #2 !dbg !19259 {
entry:
  %dev.addr = alloca %struct.net_device*, align 8
  %stats.addr = alloca %struct.ethtool_stats*, align 8
  %data.addr = alloca i64*, align 8
  %bp = alloca %struct.macb*, align 8
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !19260, metadata !DIExpression()), !dbg !19261
  store %struct.ethtool_stats* %stats, %struct.ethtool_stats** %stats.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ethtool_stats** %stats.addr, metadata !19262, metadata !DIExpression()), !dbg !19263
  store i64* %data, i64** %data.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %data.addr, metadata !19264, metadata !DIExpression()), !dbg !19265
  call void @llvm.dbg.declare(metadata %struct.macb** %bp, metadata !19266, metadata !DIExpression()), !dbg !19267
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !19268
  %call = call i8* @netdev_priv(%struct.net_device* %0) #12, !dbg !19269
  %1 = bitcast i8* %call to %struct.macb*, !dbg !19269
  store %struct.macb* %1, %struct.macb** %bp, align 8, !dbg !19270
  %2 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !19271
  call void @gem_update_stats(%struct.macb* %2) #12, !dbg !19272
  %3 = load i64*, i64** %data.addr, align 8, !dbg !19273
  %4 = bitcast i64* %3 to i8*, !dbg !19274
  %5 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !19275
  %ethtool_stats = getelementptr inbounds %struct.macb, %struct.macb* %5, i32 0, i32 30, !dbg !19276
  %6 = bitcast [91 x i64]* %ethtool_stats to i8*, !dbg !19274
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %4, i8* align 8 %6, i64 728, i1 false), !dbg !19274
  ret void, !dbg !19277
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @gem_get_sset_count(%struct.net_device* %dev, i32 %sset) #2 !dbg !19278 {
entry:
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.net_device*, align 8
  %sset.addr = alloca i32, align 4
  %bp = alloca %struct.macb*, align 8
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !19279, metadata !DIExpression()), !dbg !19280
  store i32 %sset, i32* %sset.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %sset.addr, metadata !19281, metadata !DIExpression()), !dbg !19282
  call void @llvm.dbg.declare(metadata %struct.macb** %bp, metadata !19283, metadata !DIExpression()), !dbg !19284
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !19285
  %call = call i8* @netdev_priv(%struct.net_device* %0) #12, !dbg !19286
  %1 = bitcast i8* %call to %struct.macb*, !dbg !19286
  store %struct.macb* %1, %struct.macb** %bp, align 8, !dbg !19284
  %2 = load i32, i32* %sset.addr, align 4, !dbg !19287
  switch i32 %2, label %sw.default [
    i32 1, label %sw.bb
  ], !dbg !19288

sw.bb:                                            ; preds = %entry
  %3 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !19289
  %num_queues = getelementptr inbounds %struct.macb, %struct.macb* %3, i32 0, i32 7, !dbg !19291
  %4 = load i32, i32* %num_queues, align 8, !dbg !19291
  %conv = zext i32 %4 to i64, !dbg !19289
  %mul = mul i64 %conv, 6, !dbg !19292
  %add = add i64 43, %mul, !dbg !19293
  %conv1 = trunc i64 %add to i32, !dbg !19294
  store i32 %conv1, i32* %retval, align 4, !dbg !19295
  br label %return, !dbg !19295

sw.default:                                       ; preds = %entry
  store i32 -95, i32* %retval, align 4, !dbg !19296
  br label %return, !dbg !19296

return:                                           ; preds = %sw.default, %sw.bb
  %5 = load i32, i32* %retval, align 4, !dbg !19297
  ret i32 %5, !dbg !19297
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @gem_get_rxnfc(%struct.net_device* %netdev, %struct.ethtool_rxnfc* %cmd, i32* %rule_locs) #2 !dbg !19298 {
entry:
  %netdev.addr = alloca %struct.net_device*, align 8
  %cmd.addr = alloca %struct.ethtool_rxnfc*, align 8
  %rule_locs.addr = alloca i32*, align 8
  %bp = alloca %struct.macb*, align 8
  %ret = alloca i32, align 4
  store %struct.net_device* %netdev, %struct.net_device** %netdev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %netdev.addr, metadata !19299, metadata !DIExpression()), !dbg !19300
  store %struct.ethtool_rxnfc* %cmd, %struct.ethtool_rxnfc** %cmd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ethtool_rxnfc** %cmd.addr, metadata !19301, metadata !DIExpression()), !dbg !19302
  store i32* %rule_locs, i32** %rule_locs.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %rule_locs.addr, metadata !19303, metadata !DIExpression()), !dbg !19304
  call void @llvm.dbg.declare(metadata %struct.macb** %bp, metadata !19305, metadata !DIExpression()), !dbg !19306
  %0 = load %struct.net_device*, %struct.net_device** %netdev.addr, align 8, !dbg !19307
  %call = call i8* @netdev_priv(%struct.net_device* %0) #12, !dbg !19308
  %1 = bitcast i8* %call to %struct.macb*, !dbg !19308
  store %struct.macb* %1, %struct.macb** %bp, align 8, !dbg !19306
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !19309, metadata !DIExpression()), !dbg !19310
  store i32 0, i32* %ret, align 4, !dbg !19310
  %2 = load %struct.ethtool_rxnfc*, %struct.ethtool_rxnfc** %cmd.addr, align 8, !dbg !19311
  %cmd1 = getelementptr inbounds %struct.ethtool_rxnfc, %struct.ethtool_rxnfc* %2, i32 0, i32 0, !dbg !19312
  %3 = load i32, i32* %cmd1, align 8, !dbg !19312
  switch i32 %3, label %sw.default [
    i32 45, label %sw.bb
    i32 46, label %sw.bb2
    i32 47, label %sw.bb3
    i32 48, label %sw.bb5
  ], !dbg !19313

sw.bb:                                            ; preds = %entry
  %4 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !19314
  %num_queues = getelementptr inbounds %struct.macb, %struct.macb* %4, i32 0, i32 7, !dbg !19316
  %5 = load i32, i32* %num_queues, align 8, !dbg !19316
  %conv = zext i32 %5 to i64, !dbg !19314
  %6 = load %struct.ethtool_rxnfc*, %struct.ethtool_rxnfc** %cmd.addr, align 8, !dbg !19317
  %data = getelementptr inbounds %struct.ethtool_rxnfc, %struct.ethtool_rxnfc* %6, i32 0, i32 2, !dbg !19318
  store i64 %conv, i64* %data, align 8, !dbg !19319
  br label %sw.epilog, !dbg !19320

sw.bb2:                                           ; preds = %entry
  %7 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !19321
  %rx_fs_list = getelementptr inbounds %struct.macb, %struct.macb* %7, i32 0, i32 42, !dbg !19322
  %count = getelementptr inbounds %struct.ethtool_rx_fs_list, %struct.ethtool_rx_fs_list* %rx_fs_list, i32 0, i32 1, !dbg !19323
  %8 = load i32, i32* %count, align 8, !dbg !19323
  %9 = load %struct.ethtool_rxnfc*, %struct.ethtool_rxnfc** %cmd.addr, align 8, !dbg !19324
  %10 = getelementptr inbounds %struct.ethtool_rxnfc, %struct.ethtool_rxnfc* %9, i32 0, i32 4, !dbg !19325
  %rule_cnt = bitcast %union.anon.154* %10 to i32*, !dbg !19325
  store i32 %8, i32* %rule_cnt, align 8, !dbg !19326
  br label %sw.epilog, !dbg !19327

sw.bb3:                                           ; preds = %entry
  %11 = load %struct.net_device*, %struct.net_device** %netdev.addr, align 8, !dbg !19328
  %12 = load %struct.ethtool_rxnfc*, %struct.ethtool_rxnfc** %cmd.addr, align 8, !dbg !19329
  %call4 = call i32 @gem_get_flow_entry(%struct.net_device* %11, %struct.ethtool_rxnfc* %12) #12, !dbg !19330
  store i32 %call4, i32* %ret, align 4, !dbg !19331
  br label %sw.epilog, !dbg !19332

sw.bb5:                                           ; preds = %entry
  %13 = load %struct.net_device*, %struct.net_device** %netdev.addr, align 8, !dbg !19333
  %14 = load %struct.ethtool_rxnfc*, %struct.ethtool_rxnfc** %cmd.addr, align 8, !dbg !19334
  %15 = load i32*, i32** %rule_locs.addr, align 8, !dbg !19335
  %call6 = call i32 @gem_get_all_flow_entries(%struct.net_device* %13, %struct.ethtool_rxnfc* %14, i32* %15) #12, !dbg !19336
  store i32 %call6, i32* %ret, align 4, !dbg !19337
  br label %sw.epilog, !dbg !19338

sw.default:                                       ; preds = %entry
  %16 = load %struct.net_device*, %struct.net_device** %netdev.addr, align 8, !dbg !19339
  %17 = load %struct.ethtool_rxnfc*, %struct.ethtool_rxnfc** %cmd.addr, align 8, !dbg !19340
  %cmd7 = getelementptr inbounds %struct.ethtool_rxnfc, %struct.ethtool_rxnfc* %17, i32 0, i32 0, !dbg !19341
  %18 = load i32, i32* %cmd7, align 8, !dbg !19341
  call void (%struct.net_device*, i8*, ...) @netdev_err(%struct.net_device* %16, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.38, i64 0, i64 0), i32 %18) #13, !dbg !19342
  store i32 -95, i32* %ret, align 4, !dbg !19343
  br label %sw.epilog, !dbg !19344

sw.epilog:                                        ; preds = %sw.default, %sw.bb5, %sw.bb3, %sw.bb2, %sw.bb
  %19 = load i32, i32* %ret, align 4, !dbg !19345
  ret i32 %19, !dbg !19346
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @gem_set_rxnfc(%struct.net_device* %netdev, %struct.ethtool_rxnfc* %cmd) #2 !dbg !19347 {
entry:
  %netdev.addr = alloca %struct.net_device*, align 8
  %cmd.addr = alloca %struct.ethtool_rxnfc*, align 8
  %bp = alloca %struct.macb*, align 8
  %ret = alloca i32, align 4
  store %struct.net_device* %netdev, %struct.net_device** %netdev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %netdev.addr, metadata !19348, metadata !DIExpression()), !dbg !19349
  store %struct.ethtool_rxnfc* %cmd, %struct.ethtool_rxnfc** %cmd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ethtool_rxnfc** %cmd.addr, metadata !19350, metadata !DIExpression()), !dbg !19351
  call void @llvm.dbg.declare(metadata %struct.macb** %bp, metadata !19352, metadata !DIExpression()), !dbg !19353
  %0 = load %struct.net_device*, %struct.net_device** %netdev.addr, align 8, !dbg !19354
  %call = call i8* @netdev_priv(%struct.net_device* %0) #12, !dbg !19355
  %1 = bitcast i8* %call to %struct.macb*, !dbg !19355
  store %struct.macb* %1, %struct.macb** %bp, align 8, !dbg !19353
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !19356, metadata !DIExpression()), !dbg !19357
  %2 = load %struct.ethtool_rxnfc*, %struct.ethtool_rxnfc** %cmd.addr, align 8, !dbg !19358
  %cmd1 = getelementptr inbounds %struct.ethtool_rxnfc, %struct.ethtool_rxnfc* %2, i32 0, i32 0, !dbg !19359
  %3 = load i32, i32* %cmd1, align 8, !dbg !19359
  switch i32 %3, label %sw.default [
    i32 50, label %sw.bb
    i32 49, label %sw.bb6
  ], !dbg !19360

sw.bb:                                            ; preds = %entry
  %4 = load %struct.ethtool_rxnfc*, %struct.ethtool_rxnfc** %cmd.addr, align 8, !dbg !19361
  %fs = getelementptr inbounds %struct.ethtool_rxnfc, %struct.ethtool_rxnfc* %4, i32 0, i32 3, !dbg !19364
  %location = getelementptr inbounds %struct.ethtool_rx_flow_spec, %struct.ethtool_rx_flow_spec* %fs, i32 0, i32 6, !dbg !19365
  %5 = load i32, i32* %location, align 8, !dbg !19365
  %6 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !19366
  %max_tuples = getelementptr inbounds %struct.macb, %struct.macb* %6, i32 0, i32 44, !dbg !19367
  %7 = load i32, i32* %max_tuples, align 8, !dbg !19367
  %cmp = icmp uge i32 %5, %7, !dbg !19368
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !19369

lor.lhs.false:                                    ; preds = %sw.bb
  %8 = load %struct.ethtool_rxnfc*, %struct.ethtool_rxnfc** %cmd.addr, align 8, !dbg !19370
  %fs2 = getelementptr inbounds %struct.ethtool_rxnfc, %struct.ethtool_rxnfc* %8, i32 0, i32 3, !dbg !19371
  %ring_cookie = getelementptr inbounds %struct.ethtool_rx_flow_spec, %struct.ethtool_rx_flow_spec* %fs2, i32 0, i32 5, !dbg !19372
  %9 = load i64, i64* %ring_cookie, align 8, !dbg !19372
  %10 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !19373
  %num_queues = getelementptr inbounds %struct.macb, %struct.macb* %10, i32 0, i32 7, !dbg !19374
  %11 = load i32, i32* %num_queues, align 8, !dbg !19374
  %conv = zext i32 %11 to i64, !dbg !19373
  %cmp3 = icmp uge i64 %9, %conv, !dbg !19375
  br i1 %cmp3, label %if.then, label %if.end, !dbg !19376

if.then:                                          ; preds = %lor.lhs.false, %sw.bb
  store i32 -22, i32* %ret, align 4, !dbg !19377
  br label %sw.epilog, !dbg !19379

if.end:                                           ; preds = %lor.lhs.false
  %12 = load %struct.net_device*, %struct.net_device** %netdev.addr, align 8, !dbg !19380
  %13 = load %struct.ethtool_rxnfc*, %struct.ethtool_rxnfc** %cmd.addr, align 8, !dbg !19381
  %call5 = call i32 @gem_add_flow_filter(%struct.net_device* %12, %struct.ethtool_rxnfc* %13) #12, !dbg !19382
  store i32 %call5, i32* %ret, align 4, !dbg !19383
  br label %sw.epilog, !dbg !19384

sw.bb6:                                           ; preds = %entry
  %14 = load %struct.net_device*, %struct.net_device** %netdev.addr, align 8, !dbg !19385
  %15 = load %struct.ethtool_rxnfc*, %struct.ethtool_rxnfc** %cmd.addr, align 8, !dbg !19386
  %call7 = call i32 @gem_del_flow_filter(%struct.net_device* %14, %struct.ethtool_rxnfc* %15) #12, !dbg !19387
  store i32 %call7, i32* %ret, align 4, !dbg !19388
  br label %sw.epilog, !dbg !19389

sw.default:                                       ; preds = %entry
  %16 = load %struct.net_device*, %struct.net_device** %netdev.addr, align 8, !dbg !19390
  %17 = load %struct.ethtool_rxnfc*, %struct.ethtool_rxnfc** %cmd.addr, align 8, !dbg !19391
  %cmd8 = getelementptr inbounds %struct.ethtool_rxnfc, %struct.ethtool_rxnfc* %17, i32 0, i32 0, !dbg !19392
  %18 = load i32, i32* %cmd8, align 8, !dbg !19392
  call void (%struct.net_device*, i8*, ...) @netdev_err(%struct.net_device* %16, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.38, i64 0, i64 0), i32 %18) #13, !dbg !19393
  store i32 -95, i32* %ret, align 4, !dbg !19394
  br label %sw.epilog, !dbg !19395

sw.epilog:                                        ; preds = %sw.default, %sw.bb6, %if.end, %if.then
  %19 = load i32, i32* %ret, align 4, !dbg !19396
  ret i32 %19, !dbg !19397
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @macb_get_ts_info(%struct.net_device* %netdev, %struct.ethtool_ts_info* %info) #2 !dbg !19398 {
entry:
  %retval = alloca i32, align 4
  %netdev.addr = alloca %struct.net_device*, align 8
  %info.addr = alloca %struct.ethtool_ts_info*, align 8
  %bp = alloca %struct.macb*, align 8
  store %struct.net_device* %netdev, %struct.net_device** %netdev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %netdev.addr, metadata !19399, metadata !DIExpression()), !dbg !19400
  store %struct.ethtool_ts_info* %info, %struct.ethtool_ts_info** %info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ethtool_ts_info** %info.addr, metadata !19401, metadata !DIExpression()), !dbg !19402
  call void @llvm.dbg.declare(metadata %struct.macb** %bp, metadata !19403, metadata !DIExpression()), !dbg !19404
  %0 = load %struct.net_device*, %struct.net_device** %netdev.addr, align 8, !dbg !19405
  %call = call i8* @netdev_priv(%struct.net_device* %0) #12, !dbg !19406
  %1 = bitcast i8* %call to %struct.macb*, !dbg !19406
  store %struct.macb* %1, %struct.macb** %bp, align 8, !dbg !19404
  %2 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !19407
  %ptp_info = getelementptr inbounds %struct.macb, %struct.macb* %2, i32 0, i32 34, !dbg !19409
  %3 = load %struct.macb_ptp_info*, %struct.macb_ptp_info** %ptp_info, align 8, !dbg !19409
  %tobool = icmp ne %struct.macb_ptp_info* %3, null, !dbg !19407
  br i1 %tobool, label %if.then, label %if.end, !dbg !19410

if.then:                                          ; preds = %entry
  %4 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !19411
  %ptp_info1 = getelementptr inbounds %struct.macb, %struct.macb* %4, i32 0, i32 34, !dbg !19412
  %5 = load %struct.macb_ptp_info*, %struct.macb_ptp_info** %ptp_info1, align 8, !dbg !19412
  %get_ts_info = getelementptr inbounds %struct.macb_ptp_info, %struct.macb_ptp_info* %5, i32 0, i32 4, !dbg !19413
  %6 = load i32 (%struct.net_device*, %struct.ethtool_ts_info*)*, i32 (%struct.net_device*, %struct.ethtool_ts_info*)** %get_ts_info, align 8, !dbg !19413
  %7 = load %struct.net_device*, %struct.net_device** %netdev.addr, align 8, !dbg !19414
  %8 = load %struct.ethtool_ts_info*, %struct.ethtool_ts_info** %info.addr, align 8, !dbg !19415
  %call2 = call i32 %6(%struct.net_device* %7, %struct.ethtool_ts_info* %8) #12, !dbg !19411
  store i32 %call2, i32* %retval, align 4, !dbg !19416
  br label %return, !dbg !19416

if.end:                                           ; preds = %entry
  %9 = load %struct.net_device*, %struct.net_device** %netdev.addr, align 8, !dbg !19417
  %10 = load %struct.ethtool_ts_info*, %struct.ethtool_ts_info** %info.addr, align 8, !dbg !19418
  %call3 = call i32 @ethtool_op_get_ts_info(%struct.net_device* %9, %struct.ethtool_ts_info* %10) #12, !dbg !19419
  store i32 %call3, i32* %retval, align 4, !dbg !19420
  br label %return, !dbg !19420

return:                                           ; preds = %if.end, %if.then
  %11 = load i32, i32* %retval, align 4, !dbg !19421
  ret i32 %11, !dbg !19421
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @macb_get_link_ksettings(%struct.net_device* %netdev, %struct.ethtool_link_ksettings* %kset) #2 !dbg !19422 {
entry:
  %netdev.addr = alloca %struct.net_device*, align 8
  %kset.addr = alloca %struct.ethtool_link_ksettings*, align 8
  %bp = alloca %struct.macb*, align 8
  store %struct.net_device* %netdev, %struct.net_device** %netdev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %netdev.addr, metadata !19423, metadata !DIExpression()), !dbg !19424
  store %struct.ethtool_link_ksettings* %kset, %struct.ethtool_link_ksettings** %kset.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ethtool_link_ksettings** %kset.addr, metadata !19425, metadata !DIExpression()), !dbg !19426
  call void @llvm.dbg.declare(metadata %struct.macb** %bp, metadata !19427, metadata !DIExpression()), !dbg !19428
  %0 = load %struct.net_device*, %struct.net_device** %netdev.addr, align 8, !dbg !19429
  %call = call i8* @netdev_priv(%struct.net_device* %0) #12, !dbg !19430
  %1 = bitcast i8* %call to %struct.macb*, !dbg !19430
  store %struct.macb* %1, %struct.macb** %bp, align 8, !dbg !19428
  %2 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !19431
  %phylink = getelementptr inbounds %struct.macb, %struct.macb* %2, i32 0, i32 21, !dbg !19432
  %3 = load %struct.phylink*, %struct.phylink** %phylink, align 8, !dbg !19432
  %4 = load %struct.ethtool_link_ksettings*, %struct.ethtool_link_ksettings** %kset.addr, align 8, !dbg !19433
  %call1 = call i32 @phylink_ethtool_ksettings_get(%struct.phylink* %3, %struct.ethtool_link_ksettings* %4) #12, !dbg !19434
  ret i32 %call1, !dbg !19435
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @macb_set_link_ksettings(%struct.net_device* %netdev, %struct.ethtool_link_ksettings* %kset) #2 !dbg !19436 {
entry:
  %netdev.addr = alloca %struct.net_device*, align 8
  %kset.addr = alloca %struct.ethtool_link_ksettings*, align 8
  %bp = alloca %struct.macb*, align 8
  store %struct.net_device* %netdev, %struct.net_device** %netdev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %netdev.addr, metadata !19437, metadata !DIExpression()), !dbg !19438
  store %struct.ethtool_link_ksettings* %kset, %struct.ethtool_link_ksettings** %kset.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ethtool_link_ksettings** %kset.addr, metadata !19439, metadata !DIExpression()), !dbg !19440
  call void @llvm.dbg.declare(metadata %struct.macb** %bp, metadata !19441, metadata !DIExpression()), !dbg !19442
  %0 = load %struct.net_device*, %struct.net_device** %netdev.addr, align 8, !dbg !19443
  %call = call i8* @netdev_priv(%struct.net_device* %0) #12, !dbg !19444
  %1 = bitcast i8* %call to %struct.macb*, !dbg !19444
  store %struct.macb* %1, %struct.macb** %bp, align 8, !dbg !19442
  %2 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !19445
  %phylink = getelementptr inbounds %struct.macb, %struct.macb* %2, i32 0, i32 21, !dbg !19446
  %3 = load %struct.phylink*, %struct.phylink** %phylink, align 8, !dbg !19446
  %4 = load %struct.ethtool_link_ksettings*, %struct.ethtool_link_ksettings** %kset.addr, align 8, !dbg !19447
  %call1 = call i32 @phylink_ethtool_ksettings_set(%struct.phylink* %3, %struct.ethtool_link_ksettings* %4) #12, !dbg !19448
  ret i32 %call1, !dbg !19449
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @macb_tx_dma(%struct.macb_queue* %queue, i32 %index) #2 !dbg !19450 {
entry:
  %queue.addr = alloca %struct.macb_queue*, align 8
  %index.addr = alloca i32, align 4
  %offset = alloca i64, align 8
  store %struct.macb_queue* %queue, %struct.macb_queue** %queue.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.macb_queue** %queue.addr, metadata !19453, metadata !DIExpression()), !dbg !19454
  store i32 %index, i32* %index.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %index.addr, metadata !19455, metadata !DIExpression()), !dbg !19456
  call void @llvm.dbg.declare(metadata i64* %offset, metadata !19457, metadata !DIExpression()), !dbg !19458
  %0 = load %struct.macb_queue*, %struct.macb_queue** %queue.addr, align 8, !dbg !19459
  %bp = getelementptr inbounds %struct.macb_queue, %struct.macb_queue* %0, i32 0, i32 0, !dbg !19460
  %1 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !19460
  %2 = load i32, i32* %index.addr, align 4, !dbg !19461
  %call = call i32 @macb_tx_ring_wrap(%struct.macb* %1, i32 %2) #12, !dbg !19462
  %3 = load %struct.macb_queue*, %struct.macb_queue** %queue.addr, align 8, !dbg !19463
  %bp1 = getelementptr inbounds %struct.macb_queue, %struct.macb_queue* %3, i32 0, i32 0, !dbg !19464
  %4 = load %struct.macb*, %struct.macb** %bp1, align 8, !dbg !19464
  %call2 = call i32 @macb_dma_desc_get_size(%struct.macb* %4) #12, !dbg !19465
  %mul = mul i32 %call, %call2, !dbg !19466
  %conv = zext i32 %mul to i64, !dbg !19462
  store i64 %conv, i64* %offset, align 8, !dbg !19467
  %5 = load %struct.macb_queue*, %struct.macb_queue** %queue.addr, align 8, !dbg !19468
  %tx_ring_dma = getelementptr inbounds %struct.macb_queue, %struct.macb_queue* %5, i32 0, i32 15, !dbg !19469
  %6 = load i64, i64* %tx_ring_dma, align 8, !dbg !19469
  %7 = load i64, i64* %offset, align 8, !dbg !19470
  %add = add i64 %6, %7, !dbg !19471
  ret i64 %add, !dbg !19472
}

; Function Attrs: noredzone
declare dso_local void @phylink_ethtool_get_wol(%struct.phylink*, %struct.ethtool_wolinfo*) #1

; Function Attrs: noredzone
declare dso_local i32 @phylink_ethtool_set_wol(%struct.phylink*, %struct.ethtool_wolinfo*) #1

; Function Attrs: noredzone
declare dso_local i32 @device_set_wakeup_enable(%struct.device*, i1 zeroext) #1

; Function Attrs: noinline noredzone nounwind optnone readnone sspstrong
define internal i32 @__ilog2_u32(i32 %n) #10 !dbg !19473 {
entry:
  %x.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i, metadata !19476, metadata !DIExpression()), !dbg !19480
  %r.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %r.i, metadata !19482, metadata !DIExpression()), !dbg !19483
  %n.addr = alloca i32, align 4
  store i32 %n, i32* %n.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !19484, metadata !DIExpression()), !dbg !19485
  %0 = load i32, i32* %n.addr, align 4, !dbg !19486
  store i32 %0, i32* %x.addr.i, align 4
  %1 = load i32, i32* %x.addr.i, align 4, !dbg !19487
  %2 = call i32 asm "bsrl $1,$0", "=r,rm,0,~{dirflag},~{fpsr},~{flags}"(i32 %1, i32 -1) #7, !dbg !19488, !srcloc !19489
  store i32 %2, i32* %r.i, align 4, !dbg !19488
  %3 = load i32, i32* %r.i, align 4, !dbg !19490
  %add.i = add i32 %3, 1, !dbg !19491
  %sub = sub i32 %add.i, 1, !dbg !19492
  ret i32 %sub, !dbg !19493
}

; Function Attrs: noinline noredzone nounwind optnone readnone sspstrong
define internal i64 @__roundup_pow_of_two(i64 %n) #10 !dbg !19494 {
entry:
  %n.addr = alloca i64, align 8
  store i64 %n, i64* %n.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %n.addr, metadata !19495, metadata !DIExpression()), !dbg !19496
  %0 = load i64, i64* %n.addr, align 8, !dbg !19497
  %sub = sub i64 %0, 1, !dbg !19498
  %call = call i32 @fls_long(i64 %sub) #12, !dbg !19499
  %sh_prom = zext i32 %call to i64, !dbg !19500
  %shl = shl i64 1, %sh_prom, !dbg !19500
  ret i64 %shl, !dbg !19501
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @fls_long(i64 %l) #2 !dbg !19502 {
entry:
  %x.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %x.addr.i, metadata !16469, metadata !DIExpression()), !dbg !19506
  %bitpos.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %bitpos.i, metadata !16475, metadata !DIExpression()), !dbg !19508
  %l.addr = alloca i64, align 8
  store i64 %l, i64* %l.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %l.addr, metadata !19509, metadata !DIExpression()), !dbg !19510
  %0 = load i64, i64* %l.addr, align 8, !dbg !19511
  store i64 %0, i64* %x.addr.i, align 8
  store i32 -1, i32* %bitpos.i, align 4, !dbg !19508
  %1 = load i32, i32* %bitpos.i, align 4, !dbg !19512
  %2 = load i64, i64* %x.addr.i, align 8, !dbg !19513
  %3 = call i32 asm "bsrq $1,${0:q}", "=r,rm,0,~{dirflag},~{fpsr},~{flags}"(i64 %2, i32 %1) #7, !dbg !19512, !srcloc !16502
  store i32 %3, i32* %bitpos.i, align 4, !dbg !19512
  %4 = load i32, i32* %bitpos.i, align 4, !dbg !19514
  %add.i = add i32 %4, 1, !dbg !19515
  ret i32 %add.i, !dbg !19516
}

; Function Attrs: noredzone
declare dso_local i32 @snprintf(i8*, i64, i8*, ...) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @gem_get_flow_entry(%struct.net_device* %netdev, %struct.ethtool_rxnfc* %cmd) #2 !dbg !19517 {
entry:
  %retval = alloca i32, align 4
  %netdev.addr = alloca %struct.net_device*, align 8
  %cmd.addr = alloca %struct.ethtool_rxnfc*, align 8
  %bp = alloca %struct.macb*, align 8
  %item = alloca %struct.ethtool_rx_fs_item*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.ethtool_rx_fs_item*, align 8
  %__mptr9 = alloca i8*, align 8
  %tmp14 = alloca %struct.ethtool_rx_fs_item*, align 8
  store %struct.net_device* %netdev, %struct.net_device** %netdev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %netdev.addr, metadata !19518, metadata !DIExpression()), !dbg !19519
  store %struct.ethtool_rxnfc* %cmd, %struct.ethtool_rxnfc** %cmd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ethtool_rxnfc** %cmd.addr, metadata !19520, metadata !DIExpression()), !dbg !19521
  call void @llvm.dbg.declare(metadata %struct.macb** %bp, metadata !19522, metadata !DIExpression()), !dbg !19523
  %0 = load %struct.net_device*, %struct.net_device** %netdev.addr, align 8, !dbg !19524
  %call = call i8* @netdev_priv(%struct.net_device* %0) #12, !dbg !19525
  %1 = bitcast i8* %call to %struct.macb*, !dbg !19525
  store %struct.macb* %1, %struct.macb** %bp, align 8, !dbg !19523
  call void @llvm.dbg.declare(metadata %struct.ethtool_rx_fs_item** %item, metadata !19526, metadata !DIExpression()), !dbg !19527
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !19528, metadata !DIExpression()), !dbg !19531
  %2 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !19531
  %rx_fs_list = getelementptr inbounds %struct.macb, %struct.macb* %2, i32 0, i32 42, !dbg !19531
  %list = getelementptr inbounds %struct.ethtool_rx_fs_list, %struct.ethtool_rx_fs_list* %rx_fs_list, i32 0, i32 0, !dbg !19531
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %list, i32 0, i32 0, !dbg !19531
  %3 = load %struct.list_head*, %struct.list_head** %next, align 8, !dbg !19531
  %4 = bitcast %struct.list_head* %3 to i8*, !dbg !19531
  store i8* %4, i8** %__mptr, align 8, !dbg !19531
  br label %do.body, !dbg !19531

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !19532

do.end:                                           ; preds = %do.body
  %5 = load i8*, i8** %__mptr, align 8, !dbg !19531
  %add.ptr = getelementptr i8, i8* %5, i64 -168, !dbg !19531
  %6 = bitcast i8* %add.ptr to %struct.ethtool_rx_fs_item*, !dbg !19531
  store %struct.ethtool_rx_fs_item* %6, %struct.ethtool_rx_fs_item** %tmp, align 8, !dbg !19532
  %7 = load %struct.ethtool_rx_fs_item*, %struct.ethtool_rx_fs_item** %tmp, align 8, !dbg !19531
  store %struct.ethtool_rx_fs_item* %7, %struct.ethtool_rx_fs_item** %item, align 8, !dbg !19534
  br label %for.cond, !dbg !19534

for.cond:                                         ; preds = %do.end13, %do.end
  %8 = load %struct.ethtool_rx_fs_item*, %struct.ethtool_rx_fs_item** %item, align 8, !dbg !19535
  %list1 = getelementptr inbounds %struct.ethtool_rx_fs_item, %struct.ethtool_rx_fs_item* %8, i32 0, i32 1, !dbg !19535
  %9 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !19535
  %rx_fs_list2 = getelementptr inbounds %struct.macb, %struct.macb* %9, i32 0, i32 42, !dbg !19535
  %list3 = getelementptr inbounds %struct.ethtool_rx_fs_list, %struct.ethtool_rx_fs_list* %rx_fs_list2, i32 0, i32 0, !dbg !19535
  %cmp = icmp eq %struct.list_head* %list1, %list3, !dbg !19535
  %lnot = xor i1 %cmp, true, !dbg !19535
  br i1 %lnot, label %for.body, label %for.end, !dbg !19534

for.body:                                         ; preds = %for.cond
  %10 = load %struct.ethtool_rx_fs_item*, %struct.ethtool_rx_fs_item** %item, align 8, !dbg !19537
  %fs = getelementptr inbounds %struct.ethtool_rx_fs_item, %struct.ethtool_rx_fs_item* %10, i32 0, i32 0, !dbg !19540
  %location = getelementptr inbounds %struct.ethtool_rx_flow_spec, %struct.ethtool_rx_flow_spec* %fs, i32 0, i32 6, !dbg !19541
  %11 = load i32, i32* %location, align 8, !dbg !19541
  %12 = load %struct.ethtool_rxnfc*, %struct.ethtool_rxnfc** %cmd.addr, align 8, !dbg !19542
  %fs4 = getelementptr inbounds %struct.ethtool_rxnfc, %struct.ethtool_rxnfc* %12, i32 0, i32 3, !dbg !19543
  %location5 = getelementptr inbounds %struct.ethtool_rx_flow_spec, %struct.ethtool_rx_flow_spec* %fs4, i32 0, i32 6, !dbg !19544
  %13 = load i32, i32* %location5, align 8, !dbg !19544
  %cmp6 = icmp eq i32 %11, %13, !dbg !19545
  br i1 %cmp6, label %if.then, label %if.end, !dbg !19546

if.then:                                          ; preds = %for.body
  %14 = load %struct.ethtool_rxnfc*, %struct.ethtool_rxnfc** %cmd.addr, align 8, !dbg !19547
  %fs7 = getelementptr inbounds %struct.ethtool_rxnfc, %struct.ethtool_rxnfc* %14, i32 0, i32 3, !dbg !19549
  %15 = bitcast %struct.ethtool_rx_flow_spec* %fs7 to i8*, !dbg !19550
  %16 = load %struct.ethtool_rx_fs_item*, %struct.ethtool_rx_fs_item** %item, align 8, !dbg !19551
  %fs8 = getelementptr inbounds %struct.ethtool_rx_fs_item, %struct.ethtool_rx_fs_item* %16, i32 0, i32 0, !dbg !19552
  %17 = bitcast %struct.ethtool_rx_flow_spec* %fs8 to i8*, !dbg !19550
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %15, i8* align 8 %17, i64 168, i1 false), !dbg !19550
  store i32 0, i32* %retval, align 4, !dbg !19553
  br label %return, !dbg !19553

if.end:                                           ; preds = %for.body
  br label %for.inc, !dbg !19554

for.inc:                                          ; preds = %if.end
  call void @llvm.dbg.declare(metadata i8** %__mptr9, metadata !19555, metadata !DIExpression()), !dbg !19557
  %18 = load %struct.ethtool_rx_fs_item*, %struct.ethtool_rx_fs_item** %item, align 8, !dbg !19557
  %list10 = getelementptr inbounds %struct.ethtool_rx_fs_item, %struct.ethtool_rx_fs_item* %18, i32 0, i32 1, !dbg !19557
  %next11 = getelementptr inbounds %struct.list_head, %struct.list_head* %list10, i32 0, i32 0, !dbg !19557
  %19 = load %struct.list_head*, %struct.list_head** %next11, align 8, !dbg !19557
  %20 = bitcast %struct.list_head* %19 to i8*, !dbg !19557
  store i8* %20, i8** %__mptr9, align 8, !dbg !19557
  br label %do.body12, !dbg !19557

do.body12:                                        ; preds = %for.inc
  br label %do.end13, !dbg !19558

do.end13:                                         ; preds = %do.body12
  %21 = load i8*, i8** %__mptr9, align 8, !dbg !19557
  %add.ptr15 = getelementptr i8, i8* %21, i64 -168, !dbg !19557
  %22 = bitcast i8* %add.ptr15 to %struct.ethtool_rx_fs_item*, !dbg !19557
  store %struct.ethtool_rx_fs_item* %22, %struct.ethtool_rx_fs_item** %tmp14, align 8, !dbg !19558
  %23 = load %struct.ethtool_rx_fs_item*, %struct.ethtool_rx_fs_item** %tmp14, align 8, !dbg !19557
  store %struct.ethtool_rx_fs_item* %23, %struct.ethtool_rx_fs_item** %item, align 8, !dbg !19535
  br label %for.cond, !dbg !19535, !llvm.loop !19560

for.end:                                          ; preds = %for.cond
  store i32 -22, i32* %retval, align 4, !dbg !19562
  br label %return, !dbg !19562

return:                                           ; preds = %for.end, %if.then
  %24 = load i32, i32* %retval, align 4, !dbg !19563
  ret i32 %24, !dbg !19563
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @gem_get_all_flow_entries(%struct.net_device* %netdev, %struct.ethtool_rxnfc* %cmd, i32* %rule_locs) #2 !dbg !19564 {
entry:
  %retval = alloca i32, align 4
  %netdev.addr = alloca %struct.net_device*, align 8
  %cmd.addr = alloca %struct.ethtool_rxnfc*, align 8
  %rule_locs.addr = alloca i32*, align 8
  %bp = alloca %struct.macb*, align 8
  %item = alloca %struct.ethtool_rx_fs_item*, align 8
  %cnt = alloca i32, align 4
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.ethtool_rx_fs_item*, align 8
  %__mptr5 = alloca i8*, align 8
  %tmp10 = alloca %struct.ethtool_rx_fs_item*, align 8
  store %struct.net_device* %netdev, %struct.net_device** %netdev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %netdev.addr, metadata !19565, metadata !DIExpression()), !dbg !19566
  store %struct.ethtool_rxnfc* %cmd, %struct.ethtool_rxnfc** %cmd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ethtool_rxnfc** %cmd.addr, metadata !19567, metadata !DIExpression()), !dbg !19568
  store i32* %rule_locs, i32** %rule_locs.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %rule_locs.addr, metadata !19569, metadata !DIExpression()), !dbg !19570
  call void @llvm.dbg.declare(metadata %struct.macb** %bp, metadata !19571, metadata !DIExpression()), !dbg !19572
  %0 = load %struct.net_device*, %struct.net_device** %netdev.addr, align 8, !dbg !19573
  %call = call i8* @netdev_priv(%struct.net_device* %0) #12, !dbg !19574
  %1 = bitcast i8* %call to %struct.macb*, !dbg !19574
  store %struct.macb* %1, %struct.macb** %bp, align 8, !dbg !19572
  call void @llvm.dbg.declare(metadata %struct.ethtool_rx_fs_item** %item, metadata !19575, metadata !DIExpression()), !dbg !19576
  call void @llvm.dbg.declare(metadata i32* %cnt, metadata !19577, metadata !DIExpression()), !dbg !19578
  store i32 0, i32* %cnt, align 4, !dbg !19578
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !19579, metadata !DIExpression()), !dbg !19582
  %2 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !19582
  %rx_fs_list = getelementptr inbounds %struct.macb, %struct.macb* %2, i32 0, i32 42, !dbg !19582
  %list = getelementptr inbounds %struct.ethtool_rx_fs_list, %struct.ethtool_rx_fs_list* %rx_fs_list, i32 0, i32 0, !dbg !19582
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %list, i32 0, i32 0, !dbg !19582
  %3 = load %struct.list_head*, %struct.list_head** %next, align 8, !dbg !19582
  %4 = bitcast %struct.list_head* %3 to i8*, !dbg !19582
  store i8* %4, i8** %__mptr, align 8, !dbg !19582
  br label %do.body, !dbg !19582

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !19583

do.end:                                           ; preds = %do.body
  %5 = load i8*, i8** %__mptr, align 8, !dbg !19582
  %add.ptr = getelementptr i8, i8* %5, i64 -168, !dbg !19582
  %6 = bitcast i8* %add.ptr to %struct.ethtool_rx_fs_item*, !dbg !19582
  store %struct.ethtool_rx_fs_item* %6, %struct.ethtool_rx_fs_item** %tmp, align 8, !dbg !19583
  %7 = load %struct.ethtool_rx_fs_item*, %struct.ethtool_rx_fs_item** %tmp, align 8, !dbg !19582
  store %struct.ethtool_rx_fs_item* %7, %struct.ethtool_rx_fs_item** %item, align 8, !dbg !19585
  br label %for.cond, !dbg !19585

for.cond:                                         ; preds = %do.end9, %do.end
  %8 = load %struct.ethtool_rx_fs_item*, %struct.ethtool_rx_fs_item** %item, align 8, !dbg !19586
  %list1 = getelementptr inbounds %struct.ethtool_rx_fs_item, %struct.ethtool_rx_fs_item* %8, i32 0, i32 1, !dbg !19586
  %9 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !19586
  %rx_fs_list2 = getelementptr inbounds %struct.macb, %struct.macb* %9, i32 0, i32 42, !dbg !19586
  %list3 = getelementptr inbounds %struct.ethtool_rx_fs_list, %struct.ethtool_rx_fs_list* %rx_fs_list2, i32 0, i32 0, !dbg !19586
  %cmp = icmp eq %struct.list_head* %list1, %list3, !dbg !19586
  %lnot = xor i1 %cmp, true, !dbg !19586
  br i1 %lnot, label %for.body, label %for.end, !dbg !19585

for.body:                                         ; preds = %for.cond
  %10 = load i32, i32* %cnt, align 4, !dbg !19588
  %11 = load %struct.ethtool_rxnfc*, %struct.ethtool_rxnfc** %cmd.addr, align 8, !dbg !19591
  %12 = getelementptr inbounds %struct.ethtool_rxnfc, %struct.ethtool_rxnfc* %11, i32 0, i32 4, !dbg !19592
  %rule_cnt = bitcast %union.anon.154* %12 to i32*, !dbg !19592
  %13 = load i32, i32* %rule_cnt, align 8, !dbg !19592
  %cmp4 = icmp eq i32 %10, %13, !dbg !19593
  br i1 %cmp4, label %if.then, label %if.end, !dbg !19594

if.then:                                          ; preds = %for.body
  store i32 -90, i32* %retval, align 4, !dbg !19595
  br label %return, !dbg !19595

if.end:                                           ; preds = %for.body
  %14 = load %struct.ethtool_rx_fs_item*, %struct.ethtool_rx_fs_item** %item, align 8, !dbg !19596
  %fs = getelementptr inbounds %struct.ethtool_rx_fs_item, %struct.ethtool_rx_fs_item* %14, i32 0, i32 0, !dbg !19597
  %location = getelementptr inbounds %struct.ethtool_rx_flow_spec, %struct.ethtool_rx_flow_spec* %fs, i32 0, i32 6, !dbg !19598
  %15 = load i32, i32* %location, align 8, !dbg !19598
  %16 = load i32*, i32** %rule_locs.addr, align 8, !dbg !19599
  %17 = load i32, i32* %cnt, align 4, !dbg !19600
  %idxprom = zext i32 %17 to i64, !dbg !19599
  %arrayidx = getelementptr i32, i32* %16, i64 %idxprom, !dbg !19599
  store i32 %15, i32* %arrayidx, align 4, !dbg !19601
  %18 = load i32, i32* %cnt, align 4, !dbg !19602
  %inc = add i32 %18, 1, !dbg !19602
  store i32 %inc, i32* %cnt, align 4, !dbg !19602
  br label %for.inc, !dbg !19603

for.inc:                                          ; preds = %if.end
  call void @llvm.dbg.declare(metadata i8** %__mptr5, metadata !19604, metadata !DIExpression()), !dbg !19606
  %19 = load %struct.ethtool_rx_fs_item*, %struct.ethtool_rx_fs_item** %item, align 8, !dbg !19606
  %list6 = getelementptr inbounds %struct.ethtool_rx_fs_item, %struct.ethtool_rx_fs_item* %19, i32 0, i32 1, !dbg !19606
  %next7 = getelementptr inbounds %struct.list_head, %struct.list_head* %list6, i32 0, i32 0, !dbg !19606
  %20 = load %struct.list_head*, %struct.list_head** %next7, align 8, !dbg !19606
  %21 = bitcast %struct.list_head* %20 to i8*, !dbg !19606
  store i8* %21, i8** %__mptr5, align 8, !dbg !19606
  br label %do.body8, !dbg !19606

do.body8:                                         ; preds = %for.inc
  br label %do.end9, !dbg !19607

do.end9:                                          ; preds = %do.body8
  %22 = load i8*, i8** %__mptr5, align 8, !dbg !19606
  %add.ptr11 = getelementptr i8, i8* %22, i64 -168, !dbg !19606
  %23 = bitcast i8* %add.ptr11 to %struct.ethtool_rx_fs_item*, !dbg !19606
  store %struct.ethtool_rx_fs_item* %23, %struct.ethtool_rx_fs_item** %tmp10, align 8, !dbg !19607
  %24 = load %struct.ethtool_rx_fs_item*, %struct.ethtool_rx_fs_item** %tmp10, align 8, !dbg !19606
  store %struct.ethtool_rx_fs_item* %24, %struct.ethtool_rx_fs_item** %item, align 8, !dbg !19586
  br label %for.cond, !dbg !19586, !llvm.loop !19609

for.end:                                          ; preds = %for.cond
  %25 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !19611
  %max_tuples = getelementptr inbounds %struct.macb, %struct.macb* %25, i32 0, i32 44, !dbg !19612
  %26 = load i32, i32* %max_tuples, align 8, !dbg !19612
  %conv = zext i32 %26 to i64, !dbg !19611
  %27 = load %struct.ethtool_rxnfc*, %struct.ethtool_rxnfc** %cmd.addr, align 8, !dbg !19613
  %data = getelementptr inbounds %struct.ethtool_rxnfc, %struct.ethtool_rxnfc* %27, i32 0, i32 2, !dbg !19614
  store i64 %conv, i64* %data, align 8, !dbg !19615
  %28 = load i32, i32* %cnt, align 4, !dbg !19616
  %29 = load %struct.ethtool_rxnfc*, %struct.ethtool_rxnfc** %cmd.addr, align 8, !dbg !19617
  %30 = getelementptr inbounds %struct.ethtool_rxnfc, %struct.ethtool_rxnfc* %29, i32 0, i32 4, !dbg !19618
  %rule_cnt12 = bitcast %union.anon.154* %30 to i32*, !dbg !19618
  store i32 %28, i32* %rule_cnt12, align 8, !dbg !19619
  store i32 0, i32* %retval, align 4, !dbg !19620
  br label %return, !dbg !19620

return:                                           ; preds = %for.end, %if.then
  %31 = load i32, i32* %retval, align 4, !dbg !19621
  ret i32 %31, !dbg !19621
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @gem_add_flow_filter(%struct.net_device* %netdev, %struct.ethtool_rxnfc* %cmd) #2 !dbg !19622 {
entry:
  %lock.addr.i67 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i67, metadata !13124, metadata !DIExpression()), !dbg !19623
  %flags.addr.i68 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i68, metadata !13130, metadata !DIExpression()), !dbg !19625
  %tmp.i69 = alloca i32, align 4
  %tmp8.i70 = alloca i32, align 4
  %lock.addr.i64 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i64, metadata !13124, metadata !DIExpression()), !dbg !19626
  %flags.addr.i65 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i65, metadata !13130, metadata !DIExpression()), !dbg !19628
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !11065, metadata !DIExpression()), !dbg !19629
  %s.addr.i.i = alloca %struct.kmem_cache*, align 8
  call void @llvm.dbg.declare(metadata %struct.kmem_cache** %s.addr.i.i, metadata !15779, metadata !DIExpression()), !dbg !19636
  %flags.addr.i17.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i17.i, metadata !15794, metadata !DIExpression()), !dbg !19639
  %size.addr.i18.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i18.i, metadata !15796, metadata !DIExpression()), !dbg !19640
  %ret.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %ret.i.i, metadata !15798, metadata !DIExpression()), !dbg !19641
  %retval.i12.i = alloca i32, align 4
  %flags.addr.i13.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i13.i, metadata !15800, metadata !DIExpression()), !dbg !19642
  %retval.i.i = alloca i32, align 4
  %size.addr.i11.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i11.i, metadata !15806, metadata !DIExpression()), !dbg !19644
  %size.addr.i.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i.i, metadata !15812, metadata !DIExpression()), !dbg !19646
  %flags.addr.i.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i.i.i, metadata !15821, metadata !DIExpression()), !dbg !19649
  %order.addr.i.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %order.addr.i.i.i, metadata !15823, metadata !DIExpression()), !dbg !19650
  %size.addr.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i, metadata !15825, metadata !DIExpression()), !dbg !19651
  %flags.addr.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i.i, metadata !15827, metadata !DIExpression()), !dbg !19652
  %order.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %order.i.i, metadata !15829, metadata !DIExpression()), !dbg !19653
  %retval.i = alloca i8*, align 8
  %size.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i, metadata !15831, metadata !DIExpression()), !dbg !19654
  %flags.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i, metadata !15833, metadata !DIExpression()), !dbg !19655
  %index.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %index.i, metadata !15835, metadata !DIExpression()), !dbg !19656
  %retval = alloca i32, align 4
  %netdev.addr = alloca %struct.net_device*, align 8
  %cmd.addr = alloca %struct.ethtool_rxnfc*, align 8
  %bp = alloca %struct.macb*, align 8
  %fs = alloca %struct.ethtool_rx_flow_spec*, align 8
  %item = alloca %struct.ethtool_rx_fs_item*, align 8
  %newfs = alloca %struct.ethtool_rx_fs_item*, align 8
  %flags = alloca i64, align 8
  %ret = alloca i32, align 4
  %added = alloca i8, align 1
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__dummy9 = alloca i64, align 8
  %__dummy210 = alloca i64, align 8
  %tmp13 = alloca i32, align 4
  %__mptr = alloca i8*, align 8
  %tmp26 = alloca %struct.ethtool_rx_fs_item*, align 8
  %__mptr49 = alloca i8*, align 8
  %tmp54 = alloca %struct.ethtool_rx_fs_item*, align 8
  store %struct.net_device* %netdev, %struct.net_device** %netdev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %netdev.addr, metadata !19657, metadata !DIExpression()), !dbg !19658
  store %struct.ethtool_rxnfc* %cmd, %struct.ethtool_rxnfc** %cmd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ethtool_rxnfc** %cmd.addr, metadata !19659, metadata !DIExpression()), !dbg !19660
  call void @llvm.dbg.declare(metadata %struct.macb** %bp, metadata !19661, metadata !DIExpression()), !dbg !19662
  %0 = load %struct.net_device*, %struct.net_device** %netdev.addr, align 8, !dbg !19663
  %call = call i8* @netdev_priv(%struct.net_device* %0) #12, !dbg !19664
  %1 = bitcast i8* %call to %struct.macb*, !dbg !19664
  store %struct.macb* %1, %struct.macb** %bp, align 8, !dbg !19662
  call void @llvm.dbg.declare(metadata %struct.ethtool_rx_flow_spec** %fs, metadata !19665, metadata !DIExpression()), !dbg !19666
  %2 = load %struct.ethtool_rxnfc*, %struct.ethtool_rxnfc** %cmd.addr, align 8, !dbg !19667
  %fs1 = getelementptr inbounds %struct.ethtool_rxnfc, %struct.ethtool_rxnfc* %2, i32 0, i32 3, !dbg !19668
  store %struct.ethtool_rx_flow_spec* %fs1, %struct.ethtool_rx_flow_spec** %fs, align 8, !dbg !19666
  call void @llvm.dbg.declare(metadata %struct.ethtool_rx_fs_item** %item, metadata !19669, metadata !DIExpression()), !dbg !19670
  call void @llvm.dbg.declare(metadata %struct.ethtool_rx_fs_item** %newfs, metadata !19671, metadata !DIExpression()), !dbg !19672
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !19673, metadata !DIExpression()), !dbg !19674
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !19675, metadata !DIExpression()), !dbg !19676
  store i32 -22, i32* %ret, align 4, !dbg !19676
  call void @llvm.dbg.declare(metadata i8* %added, metadata !19677, metadata !DIExpression()), !dbg !19678
  store i8 0, i8* %added, align 1, !dbg !19678
  store i64 184, i64* %size.addr.i, align 8
  store i32 3264, i32* %flags.addr.i, align 4
  %3 = load i64, i64* %size.addr.i, align 8, !dbg !19679
  %4 = call i1 @llvm.is.constant.i64(i64 %3) #8, !dbg !19680
  br i1 %4, label %if.then.i, label %if.end9.i, !dbg !19681

if.then.i:                                        ; preds = %entry
  %5 = load i64, i64* %size.addr.i, align 8, !dbg !19682
  %cmp.i = icmp ugt i64 %5, 8192, !dbg !19683
  br i1 %cmp.i, label %if.then1.i, label %if.end.i, !dbg !19684

if.then1.i:                                       ; preds = %if.then.i
  %6 = load i64, i64* %size.addr.i, align 8, !dbg !19685
  %7 = load i32, i32* %flags.addr.i, align 4, !dbg !19686
  store i64 %6, i64* %size.addr.i.i, align 8
  store i32 %7, i32* %flags.addr.i.i, align 4
  %8 = load i64, i64* %size.addr.i.i, align 8, !dbg !19687
  %call.i.i = call i32 @get_order(i64 %8) #16, !dbg !19688
  store i32 %call.i.i, i32* %order.i.i, align 4, !dbg !19653
  %9 = load i64, i64* %size.addr.i.i, align 8, !dbg !19689
  %10 = load i32, i32* %flags.addr.i.i, align 4, !dbg !19690
  %11 = load i32, i32* %order.i.i, align 4, !dbg !19691
  store i64 %9, i64* %size.addr.i.i.i, align 8
  store i32 %10, i32* %flags.addr.i.i.i, align 4
  store i32 %11, i32* %order.addr.i.i.i, align 4
  %12 = load i64, i64* %size.addr.i.i.i, align 8, !dbg !19692
  %13 = load i32, i32* %flags.addr.i.i.i, align 4, !dbg !19693
  %14 = load i32, i32* %order.addr.i.i.i, align 4, !dbg !19694
  %call.i.i.i = call noalias i8* @kmalloc_order(i64 %12, i32 %13, i32 %14) #14, !dbg !19695
  %ptrint.i.i.i = ptrtoint i8* %call.i.i.i to i64, !dbg !19695
  %maskedptr.i.i.i = and i64 %ptrint.i.i.i, 4095, !dbg !19695
  %maskcond.i.i.i = icmp eq i64 %maskedptr.i.i.i, 0, !dbg !19695
  call void @llvm.assume(i1 %maskcond.i.i.i) #8, !dbg !19695
  store i8* %call.i.i.i, i8** %retval.i, align 8, !dbg !19696
  br label %kmalloc.exit, !dbg !19696

if.end.i:                                         ; preds = %if.then.i
  %15 = load i64, i64* %size.addr.i, align 8, !dbg !19697
  store i64 %15, i64* %size.addr.i11.i, align 8
  %16 = load i64, i64* %size.addr.i11.i, align 8, !dbg !19698
  %tobool.i.i = icmp ne i64 %16, 0, !dbg !19698
  br i1 %tobool.i.i, label %if.end.i.i, label %if.then.i.i, !dbg !19699

if.then.i.i:                                      ; preds = %if.end.i
  store i32 0, i32* %retval.i.i, align 4, !dbg !19700
  br label %kmalloc_index.exit.i, !dbg !19700

if.end.i.i:                                       ; preds = %if.end.i
  %17 = load i64, i64* %size.addr.i11.i, align 8, !dbg !19701
  %cmp.i.i = icmp ule i64 %17, 8, !dbg !19702
  br i1 %cmp.i.i, label %if.then1.i.i, label %if.end2.i.i, !dbg !19703

if.then1.i.i:                                     ; preds = %if.end.i.i
  store i32 3, i32* %retval.i.i, align 4, !dbg !19704
  br label %kmalloc_index.exit.i, !dbg !19704

if.end2.i.i:                                      ; preds = %if.end.i.i
  %18 = load i64, i64* %size.addr.i11.i, align 8, !dbg !19705
  %cmp3.i.i = icmp ugt i64 %18, 64, !dbg !19706
  br i1 %cmp3.i.i, label %land.lhs.true.i.i, label %if.end6.i.i, !dbg !19707

land.lhs.true.i.i:                                ; preds = %if.end2.i.i
  %19 = load i64, i64* %size.addr.i11.i, align 8, !dbg !19708
  %cmp4.i.i = icmp ule i64 %19, 96, !dbg !19709
  br i1 %cmp4.i.i, label %if.then5.i.i, label %if.end6.i.i, !dbg !19710

if.then5.i.i:                                     ; preds = %land.lhs.true.i.i
  store i32 1, i32* %retval.i.i, align 4, !dbg !19711
  br label %kmalloc_index.exit.i, !dbg !19711

if.end6.i.i:                                      ; preds = %land.lhs.true.i.i, %if.end2.i.i
  %20 = load i64, i64* %size.addr.i11.i, align 8, !dbg !19712
  %cmp7.i.i = icmp ugt i64 %20, 128, !dbg !19713
  br i1 %cmp7.i.i, label %land.lhs.true8.i.i, label %if.end11.i.i, !dbg !19714

land.lhs.true8.i.i:                               ; preds = %if.end6.i.i
  %21 = load i64, i64* %size.addr.i11.i, align 8, !dbg !19715
  %cmp9.i.i = icmp ule i64 %21, 192, !dbg !19716
  br i1 %cmp9.i.i, label %if.then10.i.i, label %if.end11.i.i, !dbg !19717

if.then10.i.i:                                    ; preds = %land.lhs.true8.i.i
  store i32 2, i32* %retval.i.i, align 4, !dbg !19718
  br label %kmalloc_index.exit.i, !dbg !19718

if.end11.i.i:                                     ; preds = %land.lhs.true8.i.i, %if.end6.i.i
  %22 = load i64, i64* %size.addr.i11.i, align 8, !dbg !19719
  %cmp12.i.i = icmp ule i64 %22, 8, !dbg !19720
  br i1 %cmp12.i.i, label %if.then13.i.i, label %if.end14.i.i, !dbg !19721

if.then13.i.i:                                    ; preds = %if.end11.i.i
  store i32 3, i32* %retval.i.i, align 4, !dbg !19722
  br label %kmalloc_index.exit.i, !dbg !19722

if.end14.i.i:                                     ; preds = %if.end11.i.i
  %23 = load i64, i64* %size.addr.i11.i, align 8, !dbg !19723
  %cmp15.i.i = icmp ule i64 %23, 16, !dbg !19724
  br i1 %cmp15.i.i, label %if.then16.i.i, label %if.end17.i.i, !dbg !19725

if.then16.i.i:                                    ; preds = %if.end14.i.i
  store i32 4, i32* %retval.i.i, align 4, !dbg !19726
  br label %kmalloc_index.exit.i, !dbg !19726

if.end17.i.i:                                     ; preds = %if.end14.i.i
  %24 = load i64, i64* %size.addr.i11.i, align 8, !dbg !19727
  %cmp18.i.i = icmp ule i64 %24, 32, !dbg !19728
  br i1 %cmp18.i.i, label %if.then19.i.i, label %if.end20.i.i, !dbg !19729

if.then19.i.i:                                    ; preds = %if.end17.i.i
  store i32 5, i32* %retval.i.i, align 4, !dbg !19730
  br label %kmalloc_index.exit.i, !dbg !19730

if.end20.i.i:                                     ; preds = %if.end17.i.i
  %25 = load i64, i64* %size.addr.i11.i, align 8, !dbg !19731
  %cmp21.i.i = icmp ule i64 %25, 64, !dbg !19732
  br i1 %cmp21.i.i, label %if.then22.i.i, label %if.end23.i.i, !dbg !19733

if.then22.i.i:                                    ; preds = %if.end20.i.i
  store i32 6, i32* %retval.i.i, align 4, !dbg !19734
  br label %kmalloc_index.exit.i, !dbg !19734

if.end23.i.i:                                     ; preds = %if.end20.i.i
  %26 = load i64, i64* %size.addr.i11.i, align 8, !dbg !19735
  %cmp24.i.i = icmp ule i64 %26, 128, !dbg !19736
  br i1 %cmp24.i.i, label %if.then25.i.i, label %if.end26.i.i, !dbg !19737

if.then25.i.i:                                    ; preds = %if.end23.i.i
  store i32 7, i32* %retval.i.i, align 4, !dbg !19738
  br label %kmalloc_index.exit.i, !dbg !19738

if.end26.i.i:                                     ; preds = %if.end23.i.i
  %27 = load i64, i64* %size.addr.i11.i, align 8, !dbg !19739
  %cmp27.i.i = icmp ule i64 %27, 256, !dbg !19740
  br i1 %cmp27.i.i, label %if.then28.i.i, label %if.end29.i.i, !dbg !19741

if.then28.i.i:                                    ; preds = %if.end26.i.i
  store i32 8, i32* %retval.i.i, align 4, !dbg !19742
  br label %kmalloc_index.exit.i, !dbg !19742

if.end29.i.i:                                     ; preds = %if.end26.i.i
  %28 = load i64, i64* %size.addr.i11.i, align 8, !dbg !19743
  %cmp30.i.i = icmp ule i64 %28, 512, !dbg !19744
  br i1 %cmp30.i.i, label %if.then31.i.i, label %if.end32.i.i, !dbg !19745

if.then31.i.i:                                    ; preds = %if.end29.i.i
  store i32 9, i32* %retval.i.i, align 4, !dbg !19746
  br label %kmalloc_index.exit.i, !dbg !19746

if.end32.i.i:                                     ; preds = %if.end29.i.i
  %29 = load i64, i64* %size.addr.i11.i, align 8, !dbg !19747
  %cmp33.i.i = icmp ule i64 %29, 1024, !dbg !19748
  br i1 %cmp33.i.i, label %if.then34.i.i, label %if.end35.i.i, !dbg !19749

if.then34.i.i:                                    ; preds = %if.end32.i.i
  store i32 10, i32* %retval.i.i, align 4, !dbg !19750
  br label %kmalloc_index.exit.i, !dbg !19750

if.end35.i.i:                                     ; preds = %if.end32.i.i
  %30 = load i64, i64* %size.addr.i11.i, align 8, !dbg !19751
  %cmp36.i.i = icmp ule i64 %30, 2048, !dbg !19752
  br i1 %cmp36.i.i, label %if.then37.i.i, label %if.end38.i.i, !dbg !19753

if.then37.i.i:                                    ; preds = %if.end35.i.i
  store i32 11, i32* %retval.i.i, align 4, !dbg !19754
  br label %kmalloc_index.exit.i, !dbg !19754

if.end38.i.i:                                     ; preds = %if.end35.i.i
  %31 = load i64, i64* %size.addr.i11.i, align 8, !dbg !19755
  %cmp39.i.i = icmp ule i64 %31, 4096, !dbg !19756
  br i1 %cmp39.i.i, label %if.then40.i.i, label %if.end41.i.i, !dbg !19757

if.then40.i.i:                                    ; preds = %if.end38.i.i
  store i32 12, i32* %retval.i.i, align 4, !dbg !19758
  br label %kmalloc_index.exit.i, !dbg !19758

if.end41.i.i:                                     ; preds = %if.end38.i.i
  %32 = load i64, i64* %size.addr.i11.i, align 8, !dbg !19759
  %cmp42.i.i = icmp ule i64 %32, 8192, !dbg !19760
  br i1 %cmp42.i.i, label %if.then43.i.i, label %if.end44.i.i, !dbg !19761

if.then43.i.i:                                    ; preds = %if.end41.i.i
  store i32 13, i32* %retval.i.i, align 4, !dbg !19762
  br label %kmalloc_index.exit.i, !dbg !19762

if.end44.i.i:                                     ; preds = %if.end41.i.i
  %33 = load i64, i64* %size.addr.i11.i, align 8, !dbg !19763
  %cmp45.i.i = icmp ule i64 %33, 16384, !dbg !19764
  br i1 %cmp45.i.i, label %if.then46.i.i, label %if.end47.i.i, !dbg !19765

if.then46.i.i:                                    ; preds = %if.end44.i.i
  store i32 14, i32* %retval.i.i, align 4, !dbg !19766
  br label %kmalloc_index.exit.i, !dbg !19766

if.end47.i.i:                                     ; preds = %if.end44.i.i
  %34 = load i64, i64* %size.addr.i11.i, align 8, !dbg !19767
  %cmp48.i.i = icmp ule i64 %34, 32768, !dbg !19768
  br i1 %cmp48.i.i, label %if.then49.i.i, label %if.end50.i.i, !dbg !19769

if.then49.i.i:                                    ; preds = %if.end47.i.i
  store i32 15, i32* %retval.i.i, align 4, !dbg !19770
  br label %kmalloc_index.exit.i, !dbg !19770

if.end50.i.i:                                     ; preds = %if.end47.i.i
  %35 = load i64, i64* %size.addr.i11.i, align 8, !dbg !19771
  %cmp51.i.i = icmp ule i64 %35, 65536, !dbg !19772
  br i1 %cmp51.i.i, label %if.then52.i.i, label %if.end53.i.i, !dbg !19773

if.then52.i.i:                                    ; preds = %if.end50.i.i
  store i32 16, i32* %retval.i.i, align 4, !dbg !19774
  br label %kmalloc_index.exit.i, !dbg !19774

if.end53.i.i:                                     ; preds = %if.end50.i.i
  %36 = load i64, i64* %size.addr.i11.i, align 8, !dbg !19775
  %cmp54.i.i = icmp ule i64 %36, 131072, !dbg !19776
  br i1 %cmp54.i.i, label %if.then55.i.i, label %if.end56.i.i, !dbg !19777

if.then55.i.i:                                    ; preds = %if.end53.i.i
  store i32 17, i32* %retval.i.i, align 4, !dbg !19778
  br label %kmalloc_index.exit.i, !dbg !19778

if.end56.i.i:                                     ; preds = %if.end53.i.i
  %37 = load i64, i64* %size.addr.i11.i, align 8, !dbg !19779
  %cmp57.i.i = icmp ule i64 %37, 262144, !dbg !19780
  br i1 %cmp57.i.i, label %if.then58.i.i, label %if.end59.i.i, !dbg !19781

if.then58.i.i:                                    ; preds = %if.end56.i.i
  store i32 18, i32* %retval.i.i, align 4, !dbg !19782
  br label %kmalloc_index.exit.i, !dbg !19782

if.end59.i.i:                                     ; preds = %if.end56.i.i
  %38 = load i64, i64* %size.addr.i11.i, align 8, !dbg !19783
  %cmp60.i.i = icmp ule i64 %38, 524288, !dbg !19784
  br i1 %cmp60.i.i, label %if.then61.i.i, label %if.end62.i.i, !dbg !19785

if.then61.i.i:                                    ; preds = %if.end59.i.i
  store i32 19, i32* %retval.i.i, align 4, !dbg !19786
  br label %kmalloc_index.exit.i, !dbg !19786

if.end62.i.i:                                     ; preds = %if.end59.i.i
  %39 = load i64, i64* %size.addr.i11.i, align 8, !dbg !19787
  %cmp63.i.i = icmp ule i64 %39, 1048576, !dbg !19788
  br i1 %cmp63.i.i, label %if.then64.i.i, label %if.end65.i.i, !dbg !19789

if.then64.i.i:                                    ; preds = %if.end62.i.i
  store i32 20, i32* %retval.i.i, align 4, !dbg !19790
  br label %kmalloc_index.exit.i, !dbg !19790

if.end65.i.i:                                     ; preds = %if.end62.i.i
  %40 = load i64, i64* %size.addr.i11.i, align 8, !dbg !19791
  %cmp66.i.i = icmp ule i64 %40, 2097152, !dbg !19792
  br i1 %cmp66.i.i, label %if.then67.i.i, label %if.end68.i.i, !dbg !19793

if.then67.i.i:                                    ; preds = %if.end65.i.i
  store i32 21, i32* %retval.i.i, align 4, !dbg !19794
  br label %kmalloc_index.exit.i, !dbg !19794

if.end68.i.i:                                     ; preds = %if.end65.i.i
  %41 = load i64, i64* %size.addr.i11.i, align 8, !dbg !19795
  %cmp69.i.i = icmp ule i64 %41, 4194304, !dbg !19796
  br i1 %cmp69.i.i, label %if.then70.i.i, label %if.end71.i.i, !dbg !19797

if.then70.i.i:                                    ; preds = %if.end68.i.i
  store i32 22, i32* %retval.i.i, align 4, !dbg !19798
  br label %kmalloc_index.exit.i, !dbg !19798

if.end71.i.i:                                     ; preds = %if.end68.i.i
  %42 = load i64, i64* %size.addr.i11.i, align 8, !dbg !19799
  %cmp72.i.i = icmp ule i64 %42, 8388608, !dbg !19800
  br i1 %cmp72.i.i, label %if.then73.i.i, label %if.end74.i.i, !dbg !19801

if.then73.i.i:                                    ; preds = %if.end71.i.i
  store i32 23, i32* %retval.i.i, align 4, !dbg !19802
  br label %kmalloc_index.exit.i, !dbg !19802

if.end74.i.i:                                     ; preds = %if.end71.i.i
  %43 = load i64, i64* %size.addr.i11.i, align 8, !dbg !19803
  %cmp75.i.i = icmp ule i64 %43, 16777216, !dbg !19804
  br i1 %cmp75.i.i, label %if.then76.i.i, label %if.end77.i.i, !dbg !19805

if.then76.i.i:                                    ; preds = %if.end74.i.i
  store i32 24, i32* %retval.i.i, align 4, !dbg !19806
  br label %kmalloc_index.exit.i, !dbg !19806

if.end77.i.i:                                     ; preds = %if.end74.i.i
  %44 = load i64, i64* %size.addr.i11.i, align 8, !dbg !19807
  %cmp78.i.i = icmp ule i64 %44, 33554432, !dbg !19808
  br i1 %cmp78.i.i, label %if.then79.i.i, label %if.end80.i.i, !dbg !19809

if.then79.i.i:                                    ; preds = %if.end77.i.i
  store i32 25, i32* %retval.i.i, align 4, !dbg !19810
  br label %kmalloc_index.exit.i, !dbg !19810

if.end80.i.i:                                     ; preds = %if.end77.i.i
  %45 = load i64, i64* %size.addr.i11.i, align 8, !dbg !19811
  %cmp81.i.i = icmp ule i64 %45, 67108864, !dbg !19812
  br i1 %cmp81.i.i, label %if.then82.i.i, label %if.end83.i.i, !dbg !19813

if.then82.i.i:                                    ; preds = %if.end80.i.i
  store i32 26, i32* %retval.i.i, align 4, !dbg !19814
  br label %kmalloc_index.exit.i, !dbg !19814

if.end83.i.i:                                     ; preds = %if.end80.i.i
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.23, i64 0, i64 0), i32 382, i32 0, i64 12) #8, !dbg !19815, !srcloc !16047
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.unreachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 105) #8, !dbg !19816, !srcloc !16051
  unreachable, !dbg !19817

kmalloc_index.exit.i:                             ; preds = %if.then82.i.i, %if.then79.i.i, %if.then76.i.i, %if.then73.i.i, %if.then70.i.i, %if.then67.i.i, %if.then64.i.i, %if.then61.i.i, %if.then58.i.i, %if.then55.i.i, %if.then52.i.i, %if.then49.i.i, %if.then46.i.i, %if.then43.i.i, %if.then40.i.i, %if.then37.i.i, %if.then34.i.i, %if.then31.i.i, %if.then28.i.i, %if.then25.i.i, %if.then22.i.i, %if.then19.i.i, %if.then16.i.i, %if.then13.i.i, %if.then10.i.i, %if.then5.i.i, %if.then1.i.i, %if.then.i.i
  %46 = load i32, i32* %retval.i.i, align 4, !dbg !19818
  store i32 %46, i32* %index.i, align 4, !dbg !19819
  %47 = load i32, i32* %index.i, align 4, !dbg !19820
  %tobool.i = icmp ne i32 %47, 0, !dbg !19820
  br i1 %tobool.i, label %if.end4.i, label %if.then3.i, !dbg !19821

if.then3.i:                                       ; preds = %kmalloc_index.exit.i
  store i8* inttoptr (i64 16 to i8*), i8** %retval.i, align 8, !dbg !19822
  br label %kmalloc.exit, !dbg !19822

if.end4.i:                                        ; preds = %kmalloc_index.exit.i
  %48 = load i32, i32* %flags.addr.i, align 4, !dbg !19823
  store i32 %48, i32* %flags.addr.i13.i, align 4
  %49 = load i32, i32* %flags.addr.i13.i, align 4, !dbg !19824
  %and.i.i = and i32 %49, 17, !dbg !19824
  %cmp.i14.i = icmp eq i32 %and.i.i, 0, !dbg !19824
  %lnot.i.i = xor i1 %cmp.i14.i, true, !dbg !19824
  %lnot.ext.i.i = zext i1 %cmp.i14.i to i32, !dbg !19824
  %conv.i.i = sext i32 %lnot.ext.i.i to i64, !dbg !19824
  br i1 %cmp.i14.i, label %if.then.i15.i, label %if.end.i16.i, !dbg !19825

if.then.i15.i:                                    ; preds = %if.end4.i
  store i32 0, i32* %retval.i12.i, align 4, !dbg !19826
  br label %kmalloc_type.exit.i, !dbg !19826

if.end.i16.i:                                     ; preds = %if.end4.i
  %50 = load i32, i32* %flags.addr.i13.i, align 4, !dbg !19827
  %and2.i.i = and i32 %50, 1, !dbg !19828
  %tobool3.i.i = icmp ne i32 %and2.i.i, 0, !dbg !19827
  %51 = zext i1 %tobool3.i.i to i64, !dbg !19827
  %cond.i.i = select i1 %tobool3.i.i, i32 2, i32 1, !dbg !19827
  store i32 %cond.i.i, i32* %retval.i12.i, align 4, !dbg !19829
  br label %kmalloc_type.exit.i, !dbg !19829

kmalloc_type.exit.i:                              ; preds = %if.end.i16.i, %if.then.i15.i
  %52 = load i32, i32* %retval.i12.i, align 4, !dbg !19830
  %idxprom.i = zext i32 %52 to i64, !dbg !19831
  %arrayidx.i = getelementptr [3 x [14 x %struct.kmem_cache*]], [3 x [14 x %struct.kmem_cache*]]* @kmalloc_caches, i64 0, i64 %idxprom.i, !dbg !19831
  %53 = load i32, i32* %index.i, align 4, !dbg !19832
  %idxprom6.i = zext i32 %53 to i64, !dbg !19831
  %arrayidx7.i = getelementptr [14 x %struct.kmem_cache*], [14 x %struct.kmem_cache*]* %arrayidx.i, i64 0, i64 %idxprom6.i, !dbg !19831
  %54 = load %struct.kmem_cache*, %struct.kmem_cache** %arrayidx7.i, align 8, !dbg !19831
  %55 = load i32, i32* %flags.addr.i, align 4, !dbg !19833
  %56 = load i64, i64* %size.addr.i, align 8, !dbg !19834
  store %struct.kmem_cache* %54, %struct.kmem_cache** %s.addr.i.i, align 8
  store i32 %55, i32* %flags.addr.i17.i, align 4
  store i64 %56, i64* %size.addr.i18.i, align 8
  %57 = load %struct.kmem_cache*, %struct.kmem_cache** %s.addr.i.i, align 8, !dbg !19835
  %58 = load i32, i32* %flags.addr.i17.i, align 4, !dbg !19836
  %call.i19.i = call noalias i8* @kmem_cache_alloc(%struct.kmem_cache* %57, i32 %58) #14, !dbg !19837
  %ptrint.i.i = ptrtoint i8* %call.i19.i to i64, !dbg !19837
  %maskedptr.i.i = and i64 %ptrint.i.i, 7, !dbg !19837
  %maskcond.i.i = icmp eq i64 %maskedptr.i.i, 0, !dbg !19837
  call void @llvm.assume(i1 %maskcond.i.i) #8, !dbg !19837
  store i8* %call.i19.i, i8** %ret.i.i, align 8, !dbg !19641
  %59 = load %struct.kmem_cache*, %struct.kmem_cache** %s.addr.i.i, align 8, !dbg !19838
  %60 = load i8*, i8** %ret.i.i, align 8, !dbg !19839
  %61 = load i64, i64* %size.addr.i18.i, align 8, !dbg !19840
  %62 = load i32, i32* %flags.addr.i17.i, align 4, !dbg !19841
  %call1.i.i = call i8* @kasan_kmalloc(%struct.kmem_cache* %59, i8* %60, i64 %61, i32 %62) #14, !dbg !19842
  store i8* %call1.i.i, i8** %ret.i.i, align 8, !dbg !19843
  %63 = load i8*, i8** %ret.i.i, align 8, !dbg !19844
  store i8* %63, i8** %retval.i, align 8, !dbg !19845
  br label %kmalloc.exit, !dbg !19845

if.end9.i:                                        ; preds = %entry
  %64 = load i64, i64* %size.addr.i, align 8, !dbg !19846
  %65 = load i32, i32* %flags.addr.i, align 4, !dbg !19847
  %call10.i = call noalias i8* @__kmalloc(i64 %64, i32 %65) #14, !dbg !19848
  %ptrint.i = ptrtoint i8* %call10.i to i64, !dbg !19848
  %maskedptr.i = and i64 %ptrint.i, 7, !dbg !19848
  %maskcond.i = icmp eq i64 %maskedptr.i, 0, !dbg !19848
  call void @llvm.assume(i1 %maskcond.i) #8, !dbg !19848
  store i8* %call10.i, i8** %retval.i, align 8, !dbg !19849
  br label %kmalloc.exit, !dbg !19849

kmalloc.exit:                                     ; preds = %if.then1.i, %if.then3.i, %kmalloc_type.exit.i, %if.end9.i
  %66 = load i8*, i8** %retval.i, align 8, !dbg !19850
  %67 = bitcast i8* %66 to %struct.ethtool_rx_fs_item*, !dbg !19851
  store %struct.ethtool_rx_fs_item* %67, %struct.ethtool_rx_fs_item** %newfs, align 8, !dbg !19852
  %68 = load %struct.ethtool_rx_fs_item*, %struct.ethtool_rx_fs_item** %newfs, align 8, !dbg !19853
  %cmp = icmp eq %struct.ethtool_rx_fs_item* %68, null, !dbg !19855
  br i1 %cmp, label %if.then, label %if.end, !dbg !19856

if.then:                                          ; preds = %kmalloc.exit
  store i32 -12, i32* %retval, align 4, !dbg !19857
  br label %return, !dbg !19857

if.end:                                           ; preds = %kmalloc.exit
  %69 = load %struct.ethtool_rx_fs_item*, %struct.ethtool_rx_fs_item** %newfs, align 8, !dbg !19858
  %fs3 = getelementptr inbounds %struct.ethtool_rx_fs_item, %struct.ethtool_rx_fs_item* %69, i32 0, i32 0, !dbg !19859
  %70 = bitcast %struct.ethtool_rx_flow_spec* %fs3 to i8*, !dbg !19860
  %71 = load %struct.ethtool_rx_flow_spec*, %struct.ethtool_rx_flow_spec** %fs, align 8, !dbg !19861
  %72 = bitcast %struct.ethtool_rx_flow_spec* %71 to i8*, !dbg !19860
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %70, i8* align 8 %72, i64 168, i1 false), !dbg !19860
  br label %do.body, !dbg !19862

do.body:                                          ; preds = %if.end
  br label %do.body4, !dbg !19863

do.body4:                                         ; preds = %do.body
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !19864, metadata !DIExpression()), !dbg !19866
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !19867, metadata !DIExpression()), !dbg !19866
  %cmp5 = icmp eq i64* %__dummy, %__dummy2, !dbg !19866
  %conv = zext i1 %cmp5 to i32, !dbg !19866
  store i32 1, i32* %tmp, align 4, !dbg !19866
  %73 = load i32, i32* %tmp, align 4, !dbg !19866
  br label %do.body6, !dbg !19868

do.body6:                                         ; preds = %do.body4
  br label %do.body7, !dbg !19869

do.body7:                                         ; preds = %do.body6
  br label %do.body8, !dbg !19870

do.body8:                                         ; preds = %do.body7
  call void @llvm.dbg.declare(metadata i64* %__dummy9, metadata !19872, metadata !DIExpression()), !dbg !19875
  call void @llvm.dbg.declare(metadata i64* %__dummy210, metadata !19876, metadata !DIExpression()), !dbg !19875
  %cmp11 = icmp eq i64* %__dummy9, %__dummy210, !dbg !19875
  %conv12 = zext i1 %cmp11 to i32, !dbg !19875
  store i32 1, i32* %tmp13, align 4, !dbg !19875
  %74 = load i32, i32* %tmp13, align 4, !dbg !19875
  %call14 = call i64 @arch_local_irq_save() #12, !dbg !19877
  store i64 %call14, i64* %flags, align 8, !dbg !19877
  br label %do.end, !dbg !19877

do.end:                                           ; preds = %do.body8
  br label %do.end15, !dbg !19870

do.end15:                                         ; preds = %do.end
  br label %do.body16, !dbg !19869

do.body16:                                        ; preds = %do.end15
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #8, !dbg !19878, !srcloc !19879
  br label %do.body17, !dbg !19878

do.body17:                                        ; preds = %do.body16
  %75 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !19880
  %rx_fs_lock = getelementptr inbounds %struct.macb, %struct.macb* %75, i32 0, i32 43, !dbg !19880
  store %struct.spinlock* %rx_fs_lock, %struct.spinlock** %lock.addr.i, align 8
  %76 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !19881
  %77 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %76, i32 0, i32 0, !dbg !19882
  %rlock.i = bitcast %union.anon.1* %77 to %struct.raw_spinlock*, !dbg !19882
  br label %do.end19, !dbg !19880

do.end19:                                         ; preds = %do.body17
  br label %do.end20, !dbg !19878

do.end20:                                         ; preds = %do.end19
  br label %do.end21, !dbg !19869

do.end21:                                         ; preds = %do.end20
  br label %do.end22, !dbg !19868

do.end22:                                         ; preds = %do.end21
  br label %do.end23, !dbg !19863

do.end23:                                         ; preds = %do.end22
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !19883, metadata !DIExpression()), !dbg !19886
  %78 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !19886
  %rx_fs_list = getelementptr inbounds %struct.macb, %struct.macb* %78, i32 0, i32 42, !dbg !19886
  %list = getelementptr inbounds %struct.ethtool_rx_fs_list, %struct.ethtool_rx_fs_list* %rx_fs_list, i32 0, i32 0, !dbg !19886
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %list, i32 0, i32 0, !dbg !19886
  %79 = load %struct.list_head*, %struct.list_head** %next, align 8, !dbg !19886
  %80 = bitcast %struct.list_head* %79 to i8*, !dbg !19886
  store i8* %80, i8** %__mptr, align 8, !dbg !19886
  br label %do.body24, !dbg !19886

do.body24:                                        ; preds = %do.end23
  br label %do.end25, !dbg !19887

do.end25:                                         ; preds = %do.body24
  %81 = load i8*, i8** %__mptr, align 8, !dbg !19886
  %add.ptr = getelementptr i8, i8* %81, i64 -168, !dbg !19886
  %82 = bitcast i8* %add.ptr to %struct.ethtool_rx_fs_item*, !dbg !19886
  store %struct.ethtool_rx_fs_item* %82, %struct.ethtool_rx_fs_item** %tmp26, align 8, !dbg !19887
  %83 = load %struct.ethtool_rx_fs_item*, %struct.ethtool_rx_fs_item** %tmp26, align 8, !dbg !19886
  store %struct.ethtool_rx_fs_item* %83, %struct.ethtool_rx_fs_item** %item, align 8, !dbg !19889
  br label %for.cond, !dbg !19889

for.cond:                                         ; preds = %do.end53, %do.end25
  %84 = load %struct.ethtool_rx_fs_item*, %struct.ethtool_rx_fs_item** %item, align 8, !dbg !19890
  %list27 = getelementptr inbounds %struct.ethtool_rx_fs_item, %struct.ethtool_rx_fs_item* %84, i32 0, i32 1, !dbg !19890
  %85 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !19890
  %rx_fs_list28 = getelementptr inbounds %struct.macb, %struct.macb* %85, i32 0, i32 42, !dbg !19890
  %list29 = getelementptr inbounds %struct.ethtool_rx_fs_list, %struct.ethtool_rx_fs_list* %rx_fs_list28, i32 0, i32 0, !dbg !19890
  %cmp30 = icmp eq %struct.list_head* %list27, %list29, !dbg !19890
  %lnot = xor i1 %cmp30, true, !dbg !19890
  br i1 %lnot, label %for.body, label %for.end, !dbg !19889

for.body:                                         ; preds = %for.cond
  %86 = load %struct.ethtool_rx_fs_item*, %struct.ethtool_rx_fs_item** %item, align 8, !dbg !19892
  %fs32 = getelementptr inbounds %struct.ethtool_rx_fs_item, %struct.ethtool_rx_fs_item* %86, i32 0, i32 0, !dbg !19895
  %location = getelementptr inbounds %struct.ethtool_rx_flow_spec, %struct.ethtool_rx_flow_spec* %fs32, i32 0, i32 6, !dbg !19896
  %87 = load i32, i32* %location, align 8, !dbg !19896
  %88 = load %struct.ethtool_rx_fs_item*, %struct.ethtool_rx_fs_item** %newfs, align 8, !dbg !19897
  %fs33 = getelementptr inbounds %struct.ethtool_rx_fs_item, %struct.ethtool_rx_fs_item* %88, i32 0, i32 0, !dbg !19898
  %location34 = getelementptr inbounds %struct.ethtool_rx_flow_spec, %struct.ethtool_rx_flow_spec* %fs33, i32 0, i32 6, !dbg !19899
  %89 = load i32, i32* %location34, align 8, !dbg !19899
  %cmp35 = icmp ugt i32 %87, %89, !dbg !19900
  br i1 %cmp35, label %if.then37, label %if.else, !dbg !19901

if.then37:                                        ; preds = %for.body
  %90 = load %struct.ethtool_rx_fs_item*, %struct.ethtool_rx_fs_item** %newfs, align 8, !dbg !19902
  %list38 = getelementptr inbounds %struct.ethtool_rx_fs_item, %struct.ethtool_rx_fs_item* %90, i32 0, i32 1, !dbg !19904
  %91 = load %struct.ethtool_rx_fs_item*, %struct.ethtool_rx_fs_item** %item, align 8, !dbg !19905
  %list39 = getelementptr inbounds %struct.ethtool_rx_fs_item, %struct.ethtool_rx_fs_item* %91, i32 0, i32 1, !dbg !19906
  call void @list_add_tail(%struct.list_head* %list38, %struct.list_head* %list39) #12, !dbg !19907
  store i8 1, i8* %added, align 1, !dbg !19908
  br label %for.end, !dbg !19909

if.else:                                          ; preds = %for.body
  %92 = load %struct.ethtool_rx_fs_item*, %struct.ethtool_rx_fs_item** %item, align 8, !dbg !19910
  %fs40 = getelementptr inbounds %struct.ethtool_rx_fs_item, %struct.ethtool_rx_fs_item* %92, i32 0, i32 0, !dbg !19912
  %location41 = getelementptr inbounds %struct.ethtool_rx_flow_spec, %struct.ethtool_rx_flow_spec* %fs40, i32 0, i32 6, !dbg !19913
  %93 = load i32, i32* %location41, align 8, !dbg !19913
  %94 = load %struct.ethtool_rx_flow_spec*, %struct.ethtool_rx_flow_spec** %fs, align 8, !dbg !19914
  %location42 = getelementptr inbounds %struct.ethtool_rx_flow_spec, %struct.ethtool_rx_flow_spec* %94, i32 0, i32 6, !dbg !19915
  %95 = load i32, i32* %location42, align 8, !dbg !19915
  %cmp43 = icmp eq i32 %93, %95, !dbg !19916
  br i1 %cmp43, label %if.then45, label %if.end47, !dbg !19917

if.then45:                                        ; preds = %if.else
  %96 = load %struct.net_device*, %struct.net_device** %netdev.addr, align 8, !dbg !19918
  %97 = load %struct.ethtool_rx_flow_spec*, %struct.ethtool_rx_flow_spec** %fs, align 8, !dbg !19920
  %location46 = getelementptr inbounds %struct.ethtool_rx_flow_spec, %struct.ethtool_rx_flow_spec* %97, i32 0, i32 6, !dbg !19921
  %98 = load i32, i32* %location46, align 8, !dbg !19921
  call void (%struct.net_device*, i8*, ...) @netdev_err(%struct.net_device* %96, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.39, i64 0, i64 0), i32 %98) #13, !dbg !19922
  store i32 -16, i32* %ret, align 4, !dbg !19923
  br label %err, !dbg !19924

if.end47:                                         ; preds = %if.else
  br label %if.end48

if.end48:                                         ; preds = %if.end47
  br label %for.inc, !dbg !19925

for.inc:                                          ; preds = %if.end48
  call void @llvm.dbg.declare(metadata i8** %__mptr49, metadata !19926, metadata !DIExpression()), !dbg !19928
  %99 = load %struct.ethtool_rx_fs_item*, %struct.ethtool_rx_fs_item** %item, align 8, !dbg !19928
  %list50 = getelementptr inbounds %struct.ethtool_rx_fs_item, %struct.ethtool_rx_fs_item* %99, i32 0, i32 1, !dbg !19928
  %next51 = getelementptr inbounds %struct.list_head, %struct.list_head* %list50, i32 0, i32 0, !dbg !19928
  %100 = load %struct.list_head*, %struct.list_head** %next51, align 8, !dbg !19928
  %101 = bitcast %struct.list_head* %100 to i8*, !dbg !19928
  store i8* %101, i8** %__mptr49, align 8, !dbg !19928
  br label %do.body52, !dbg !19928

do.body52:                                        ; preds = %for.inc
  br label %do.end53, !dbg !19929

do.end53:                                         ; preds = %do.body52
  %102 = load i8*, i8** %__mptr49, align 8, !dbg !19928
  %add.ptr55 = getelementptr i8, i8* %102, i64 -168, !dbg !19928
  %103 = bitcast i8* %add.ptr55 to %struct.ethtool_rx_fs_item*, !dbg !19928
  store %struct.ethtool_rx_fs_item* %103, %struct.ethtool_rx_fs_item** %tmp54, align 8, !dbg !19929
  %104 = load %struct.ethtool_rx_fs_item*, %struct.ethtool_rx_fs_item** %tmp54, align 8, !dbg !19928
  store %struct.ethtool_rx_fs_item* %104, %struct.ethtool_rx_fs_item** %item, align 8, !dbg !19890
  br label %for.cond, !dbg !19890, !llvm.loop !19931

for.end:                                          ; preds = %if.then37, %for.cond
  %105 = load i8, i8* %added, align 1, !dbg !19933
  %tobool = trunc i8 %105 to i1, !dbg !19933
  br i1 %tobool, label %if.end60, label %if.then56, !dbg !19935

if.then56:                                        ; preds = %for.end
  %106 = load %struct.ethtool_rx_fs_item*, %struct.ethtool_rx_fs_item** %newfs, align 8, !dbg !19936
  %list57 = getelementptr inbounds %struct.ethtool_rx_fs_item, %struct.ethtool_rx_fs_item* %106, i32 0, i32 1, !dbg !19937
  %107 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !19938
  %rx_fs_list58 = getelementptr inbounds %struct.macb, %struct.macb* %107, i32 0, i32 42, !dbg !19939
  %list59 = getelementptr inbounds %struct.ethtool_rx_fs_list, %struct.ethtool_rx_fs_list* %rx_fs_list58, i32 0, i32 0, !dbg !19940
  call void @list_add_tail(%struct.list_head* %list57, %struct.list_head* %list59) #12, !dbg !19941
  br label %if.end60, !dbg !19941

if.end60:                                         ; preds = %if.then56, %for.end
  %108 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !19942
  %109 = load %struct.ethtool_rx_flow_spec*, %struct.ethtool_rx_flow_spec** %fs, align 8, !dbg !19943
  call void @gem_prog_cmp_regs(%struct.macb* %108, %struct.ethtool_rx_flow_spec* %109) #12, !dbg !19944
  %110 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !19945
  %rx_fs_list61 = getelementptr inbounds %struct.macb, %struct.macb* %110, i32 0, i32 42, !dbg !19946
  %count = getelementptr inbounds %struct.ethtool_rx_fs_list, %struct.ethtool_rx_fs_list* %rx_fs_list61, i32 0, i32 1, !dbg !19947
  %111 = load i32, i32* %count, align 8, !dbg !19948
  %inc = add i32 %111, 1, !dbg !19948
  store i32 %inc, i32* %count, align 8, !dbg !19948
  %112 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !19949
  call void @gem_enable_flow_filters(%struct.macb* %112, i1 zeroext true) #12, !dbg !19950
  %113 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !19951
  %rx_fs_lock62 = getelementptr inbounds %struct.macb, %struct.macb* %113, i32 0, i32 43, !dbg !19952
  %114 = load i64, i64* %flags, align 8, !dbg !19953
  store %struct.spinlock* %rx_fs_lock62, %struct.spinlock** %lock.addr.i64, align 8
  store i64 %114, i64* %flags.addr.i65, align 8
  call void @llvm.dbg.declare(metadata !743, metadata !13334, metadata !DIExpression()) #8, !dbg !19954
  call void @llvm.dbg.declare(metadata !743, metadata !13338, metadata !DIExpression()) #8, !dbg !19954
  store i32 1, i32* %tmp.i, align 4, !dbg !19954
  %115 = load i32, i32* %tmp.i, align 4, !dbg !19954
  call void @llvm.dbg.declare(metadata !743, metadata !13339, metadata !DIExpression()) #8, !dbg !19955
  call void @llvm.dbg.declare(metadata !743, metadata !13345, metadata !DIExpression()) #8, !dbg !19955
  store i32 1, i32* %tmp8.i, align 4, !dbg !19955
  %116 = load i32, i32* %tmp8.i, align 4, !dbg !19955
  %117 = load i64, i64* %flags.addr.i65, align 8, !dbg !19956
  call void @arch_local_irq_restore(i64 %117) #14, !dbg !19956
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #8, !dbg !19957, !srcloc !13349
  %118 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i64, align 8, !dbg !19958
  %119 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %118, i32 0, i32 0, !dbg !19958
  %rlock.i66 = bitcast %union.anon.1* %119 to %struct.raw_spinlock*, !dbg !19958
  store i32 0, i32* %retval, align 4, !dbg !19959
  br label %return, !dbg !19959

err:                                              ; preds = %if.then45
  call void @llvm.dbg.label(metadata !19960), !dbg !19961
  %120 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !19962
  %rx_fs_lock63 = getelementptr inbounds %struct.macb, %struct.macb* %120, i32 0, i32 43, !dbg !19963
  %121 = load i64, i64* %flags, align 8, !dbg !19964
  store %struct.spinlock* %rx_fs_lock63, %struct.spinlock** %lock.addr.i67, align 8
  store i64 %121, i64* %flags.addr.i68, align 8
  call void @llvm.dbg.declare(metadata !743, metadata !13334, metadata !DIExpression()) #8, !dbg !19965
  call void @llvm.dbg.declare(metadata !743, metadata !13338, metadata !DIExpression()) #8, !dbg !19965
  store i32 1, i32* %tmp.i69, align 4, !dbg !19965
  %122 = load i32, i32* %tmp.i69, align 4, !dbg !19965
  call void @llvm.dbg.declare(metadata !743, metadata !13339, metadata !DIExpression()) #8, !dbg !19966
  call void @llvm.dbg.declare(metadata !743, metadata !13345, metadata !DIExpression()) #8, !dbg !19966
  store i32 1, i32* %tmp8.i70, align 4, !dbg !19966
  %123 = load i32, i32* %tmp8.i70, align 4, !dbg !19966
  %124 = load i64, i64* %flags.addr.i68, align 8, !dbg !19967
  call void @arch_local_irq_restore(i64 %124) #14, !dbg !19967
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #8, !dbg !19968, !srcloc !13349
  %125 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i67, align 8, !dbg !19969
  %126 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %125, i32 0, i32 0, !dbg !19969
  %rlock.i71 = bitcast %union.anon.1* %126 to %struct.raw_spinlock*, !dbg !19969
  %127 = load %struct.ethtool_rx_fs_item*, %struct.ethtool_rx_fs_item** %newfs, align 8, !dbg !19970
  %128 = bitcast %struct.ethtool_rx_fs_item* %127 to i8*, !dbg !19970
  call void @kfree(i8* %128) #12, !dbg !19971
  %129 = load i32, i32* %ret, align 4, !dbg !19972
  store i32 %129, i32* %retval, align 4, !dbg !19973
  br label %return, !dbg !19973

return:                                           ; preds = %err, %if.end60, %if.then
  %130 = load i32, i32* %retval, align 4, !dbg !19974
  ret i32 %130, !dbg !19974
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @gem_del_flow_filter(%struct.net_device* %netdev, %struct.ethtool_rxnfc* %cmd) #2 !dbg !19975 {
entry:
  %lock.addr.i48 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i48, metadata !13124, metadata !DIExpression()), !dbg !19976
  %flags.addr.i49 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i49, metadata !13130, metadata !DIExpression()), !dbg !19983
  %tmp.i50 = alloca i32, align 4
  %tmp8.i51 = alloca i32, align 4
  %lock.addr.i46 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i46, metadata !13124, metadata !DIExpression()), !dbg !19984
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !13130, metadata !DIExpression()), !dbg !19986
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !11065, metadata !DIExpression()), !dbg !19987
  %retval = alloca i32, align 4
  %netdev.addr = alloca %struct.net_device*, align 8
  %cmd.addr = alloca %struct.ethtool_rxnfc*, align 8
  %bp = alloca %struct.macb*, align 8
  %item = alloca %struct.ethtool_rx_fs_item*, align 8
  %fs = alloca %struct.ethtool_rx_flow_spec*, align 8
  %flags = alloca i64, align 8
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__dummy5 = alloca i64, align 8
  %__dummy26 = alloca i64, align 8
  %tmp9 = alloca i32, align 4
  %__mptr = alloca i8*, align 8
  %tmp22 = alloca %struct.ethtool_rx_fs_item*, align 8
  %__mptr38 = alloca i8*, align 8
  %tmp43 = alloca %struct.ethtool_rx_fs_item*, align 8
  store %struct.net_device* %netdev, %struct.net_device** %netdev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %netdev.addr, metadata !19994, metadata !DIExpression()), !dbg !19995
  store %struct.ethtool_rxnfc* %cmd, %struct.ethtool_rxnfc** %cmd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ethtool_rxnfc** %cmd.addr, metadata !19996, metadata !DIExpression()), !dbg !19997
  call void @llvm.dbg.declare(metadata %struct.macb** %bp, metadata !19998, metadata !DIExpression()), !dbg !19999
  %0 = load %struct.net_device*, %struct.net_device** %netdev.addr, align 8, !dbg !20000
  %call = call i8* @netdev_priv(%struct.net_device* %0) #12, !dbg !20001
  %1 = bitcast i8* %call to %struct.macb*, !dbg !20001
  store %struct.macb* %1, %struct.macb** %bp, align 8, !dbg !19999
  call void @llvm.dbg.declare(metadata %struct.ethtool_rx_fs_item** %item, metadata !20002, metadata !DIExpression()), !dbg !20003
  call void @llvm.dbg.declare(metadata %struct.ethtool_rx_flow_spec** %fs, metadata !20004, metadata !DIExpression()), !dbg !20005
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !20006, metadata !DIExpression()), !dbg !20007
  br label %do.body, !dbg !20008

do.body:                                          ; preds = %entry
  br label %do.body1, !dbg !20009

do.body1:                                         ; preds = %do.body
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !20010, metadata !DIExpression()), !dbg !20012
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !20013, metadata !DIExpression()), !dbg !20012
  %cmp = icmp eq i64* %__dummy, %__dummy2, !dbg !20012
  %conv = zext i1 %cmp to i32, !dbg !20012
  store i32 1, i32* %tmp, align 4, !dbg !20012
  %2 = load i32, i32* %tmp, align 4, !dbg !20012
  br label %do.body2, !dbg !20014

do.body2:                                         ; preds = %do.body1
  br label %do.body3, !dbg !20015

do.body3:                                         ; preds = %do.body2
  br label %do.body4, !dbg !20016

do.body4:                                         ; preds = %do.body3
  call void @llvm.dbg.declare(metadata i64* %__dummy5, metadata !20018, metadata !DIExpression()), !dbg !20021
  call void @llvm.dbg.declare(metadata i64* %__dummy26, metadata !20022, metadata !DIExpression()), !dbg !20021
  %cmp7 = icmp eq i64* %__dummy5, %__dummy26, !dbg !20021
  %conv8 = zext i1 %cmp7 to i32, !dbg !20021
  store i32 1, i32* %tmp9, align 4, !dbg !20021
  %3 = load i32, i32* %tmp9, align 4, !dbg !20021
  %call10 = call i64 @arch_local_irq_save() #12, !dbg !20023
  store i64 %call10, i64* %flags, align 8, !dbg !20023
  br label %do.end, !dbg !20023

do.end:                                           ; preds = %do.body4
  br label %do.end11, !dbg !20016

do.end11:                                         ; preds = %do.end
  br label %do.body12, !dbg !20015

do.body12:                                        ; preds = %do.end11
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #8, !dbg !20024, !srcloc !20025
  br label %do.body13, !dbg !20024

do.body13:                                        ; preds = %do.body12
  %4 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !20026
  %rx_fs_lock = getelementptr inbounds %struct.macb, %struct.macb* %4, i32 0, i32 43, !dbg !20026
  store %struct.spinlock* %rx_fs_lock, %struct.spinlock** %lock.addr.i, align 8
  %5 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !20027
  %6 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %5, i32 0, i32 0, !dbg !20028
  %rlock.i = bitcast %union.anon.1* %6 to %struct.raw_spinlock*, !dbg !20028
  br label %do.end15, !dbg !20026

do.end15:                                         ; preds = %do.body13
  br label %do.end16, !dbg !20024

do.end16:                                         ; preds = %do.end15
  br label %do.end17, !dbg !20015

do.end17:                                         ; preds = %do.end16
  br label %do.end18, !dbg !20014

do.end18:                                         ; preds = %do.end17
  br label %do.end19, !dbg !20009

do.end19:                                         ; preds = %do.end18
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !20029, metadata !DIExpression()), !dbg !20031
  %7 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !20031
  %rx_fs_list = getelementptr inbounds %struct.macb, %struct.macb* %7, i32 0, i32 42, !dbg !20031
  %list = getelementptr inbounds %struct.ethtool_rx_fs_list, %struct.ethtool_rx_fs_list* %rx_fs_list, i32 0, i32 0, !dbg !20031
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %list, i32 0, i32 0, !dbg !20031
  %8 = load %struct.list_head*, %struct.list_head** %next, align 8, !dbg !20031
  %9 = bitcast %struct.list_head* %8 to i8*, !dbg !20031
  store i8* %9, i8** %__mptr, align 8, !dbg !20031
  br label %do.body20, !dbg !20031

do.body20:                                        ; preds = %do.end19
  br label %do.end21, !dbg !20032

do.end21:                                         ; preds = %do.body20
  %10 = load i8*, i8** %__mptr, align 8, !dbg !20031
  %add.ptr = getelementptr i8, i8* %10, i64 -168, !dbg !20031
  %11 = bitcast i8* %add.ptr to %struct.ethtool_rx_fs_item*, !dbg !20031
  store %struct.ethtool_rx_fs_item* %11, %struct.ethtool_rx_fs_item** %tmp22, align 8, !dbg !20032
  %12 = load %struct.ethtool_rx_fs_item*, %struct.ethtool_rx_fs_item** %tmp22, align 8, !dbg !20031
  store %struct.ethtool_rx_fs_item* %12, %struct.ethtool_rx_fs_item** %item, align 8, !dbg !20034
  br label %for.cond, !dbg !20034

for.cond:                                         ; preds = %do.end42, %do.end21
  %13 = load %struct.ethtool_rx_fs_item*, %struct.ethtool_rx_fs_item** %item, align 8, !dbg !20035
  %list23 = getelementptr inbounds %struct.ethtool_rx_fs_item, %struct.ethtool_rx_fs_item* %13, i32 0, i32 1, !dbg !20035
  %14 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !20035
  %rx_fs_list24 = getelementptr inbounds %struct.macb, %struct.macb* %14, i32 0, i32 42, !dbg !20035
  %list25 = getelementptr inbounds %struct.ethtool_rx_fs_list, %struct.ethtool_rx_fs_list* %rx_fs_list24, i32 0, i32 0, !dbg !20035
  %cmp26 = icmp eq %struct.list_head* %list23, %list25, !dbg !20035
  %lnot = xor i1 %cmp26, true, !dbg !20035
  br i1 %lnot, label %for.body, label %for.end, !dbg !20034

for.body:                                         ; preds = %for.cond
  %15 = load %struct.ethtool_rx_fs_item*, %struct.ethtool_rx_fs_item** %item, align 8, !dbg !20036
  %fs28 = getelementptr inbounds %struct.ethtool_rx_fs_item, %struct.ethtool_rx_fs_item* %15, i32 0, i32 0, !dbg !20037
  %location = getelementptr inbounds %struct.ethtool_rx_flow_spec, %struct.ethtool_rx_flow_spec* %fs28, i32 0, i32 6, !dbg !20038
  %16 = load i32, i32* %location, align 8, !dbg !20038
  %17 = load %struct.ethtool_rxnfc*, %struct.ethtool_rxnfc** %cmd.addr, align 8, !dbg !20039
  %fs29 = getelementptr inbounds %struct.ethtool_rxnfc, %struct.ethtool_rxnfc* %17, i32 0, i32 3, !dbg !20040
  %location30 = getelementptr inbounds %struct.ethtool_rx_flow_spec, %struct.ethtool_rx_flow_spec* %fs29, i32 0, i32 6, !dbg !20041
  %18 = load i32, i32* %location30, align 8, !dbg !20041
  %cmp31 = icmp eq i32 %16, %18, !dbg !20042
  br i1 %cmp31, label %if.then, label %if.end, !dbg !20043

if.then:                                          ; preds = %for.body
  %19 = load %struct.ethtool_rx_fs_item*, %struct.ethtool_rx_fs_item** %item, align 8, !dbg !20044
  %fs33 = getelementptr inbounds %struct.ethtool_rx_fs_item, %struct.ethtool_rx_fs_item* %19, i32 0, i32 0, !dbg !20045
  store %struct.ethtool_rx_flow_spec* %fs33, %struct.ethtool_rx_flow_spec** %fs, align 8, !dbg !20046
  %20 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !20047
  %macb_reg_writel = getelementptr inbounds %struct.macb, %struct.macb* %20, i32 0, i32 3, !dbg !20047
  %21 = load void (%struct.macb*, i32, i32)*, void (%struct.macb*, i32, i32)** %macb_reg_writel, align 8, !dbg !20047
  %22 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !20047
  %23 = load %struct.ethtool_rx_flow_spec*, %struct.ethtool_rx_flow_spec** %fs, align 8, !dbg !20047
  %location34 = getelementptr inbounds %struct.ethtool_rx_flow_spec, %struct.ethtool_rx_flow_spec* %23, i32 0, i32 6, !dbg !20047
  %24 = load i32, i32* %location34, align 8, !dbg !20047
  %mul = mul i32 %24, 4, !dbg !20047
  %add = add i32 1344, %mul, !dbg !20047
  call void %21(%struct.macb* %22, i32 %add, i32 0) #12, !dbg !20047
  %25 = load %struct.ethtool_rx_fs_item*, %struct.ethtool_rx_fs_item** %item, align 8, !dbg !20048
  %list35 = getelementptr inbounds %struct.ethtool_rx_fs_item, %struct.ethtool_rx_fs_item* %25, i32 0, i32 1, !dbg !20049
  call void @list_del(%struct.list_head* %list35) #12, !dbg !20050
  %26 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !20051
  %rx_fs_list36 = getelementptr inbounds %struct.macb, %struct.macb* %26, i32 0, i32 42, !dbg !20052
  %count = getelementptr inbounds %struct.ethtool_rx_fs_list, %struct.ethtool_rx_fs_list* %rx_fs_list36, i32 0, i32 1, !dbg !20053
  %27 = load i32, i32* %count, align 8, !dbg !20054
  %dec = add i32 %27, -1, !dbg !20054
  store i32 %dec, i32* %count, align 8, !dbg !20054
  %28 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !20055
  %rx_fs_lock37 = getelementptr inbounds %struct.macb, %struct.macb* %28, i32 0, i32 43, !dbg !20056
  %29 = load i64, i64* %flags, align 8, !dbg !20057
  store %struct.spinlock* %rx_fs_lock37, %struct.spinlock** %lock.addr.i48, align 8
  store i64 %29, i64* %flags.addr.i49, align 8
  call void @llvm.dbg.declare(metadata !743, metadata !13334, metadata !DIExpression()) #8, !dbg !20058
  call void @llvm.dbg.declare(metadata !743, metadata !13338, metadata !DIExpression()) #8, !dbg !20058
  store i32 1, i32* %tmp.i50, align 4, !dbg !20058
  %30 = load i32, i32* %tmp.i50, align 4, !dbg !20058
  call void @llvm.dbg.declare(metadata !743, metadata !13339, metadata !DIExpression()) #8, !dbg !20059
  call void @llvm.dbg.declare(metadata !743, metadata !13345, metadata !DIExpression()) #8, !dbg !20059
  store i32 1, i32* %tmp8.i51, align 4, !dbg !20059
  %31 = load i32, i32* %tmp8.i51, align 4, !dbg !20059
  %32 = load i64, i64* %flags.addr.i49, align 8, !dbg !20060
  call void @arch_local_irq_restore(i64 %32) #14, !dbg !20060
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #8, !dbg !20061, !srcloc !13349
  %33 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i48, align 8, !dbg !20062
  %34 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %33, i32 0, i32 0, !dbg !20062
  %rlock.i52 = bitcast %union.anon.1* %34 to %struct.raw_spinlock*, !dbg !20062
  %35 = load %struct.ethtool_rx_fs_item*, %struct.ethtool_rx_fs_item** %item, align 8, !dbg !20063
  %36 = bitcast %struct.ethtool_rx_fs_item* %35 to i8*, !dbg !20063
  call void @kfree(i8* %36) #12, !dbg !20064
  store i32 0, i32* %retval, align 4, !dbg !20065
  br label %return, !dbg !20065

if.end:                                           ; preds = %for.body
  br label %for.inc, !dbg !20066

for.inc:                                          ; preds = %if.end
  call void @llvm.dbg.declare(metadata i8** %__mptr38, metadata !20067, metadata !DIExpression()), !dbg !20069
  %37 = load %struct.ethtool_rx_fs_item*, %struct.ethtool_rx_fs_item** %item, align 8, !dbg !20069
  %list39 = getelementptr inbounds %struct.ethtool_rx_fs_item, %struct.ethtool_rx_fs_item* %37, i32 0, i32 1, !dbg !20069
  %next40 = getelementptr inbounds %struct.list_head, %struct.list_head* %list39, i32 0, i32 0, !dbg !20069
  %38 = load %struct.list_head*, %struct.list_head** %next40, align 8, !dbg !20069
  %39 = bitcast %struct.list_head* %38 to i8*, !dbg !20069
  store i8* %39, i8** %__mptr38, align 8, !dbg !20069
  br label %do.body41, !dbg !20069

do.body41:                                        ; preds = %for.inc
  br label %do.end42, !dbg !20070

do.end42:                                         ; preds = %do.body41
  %40 = load i8*, i8** %__mptr38, align 8, !dbg !20069
  %add.ptr44 = getelementptr i8, i8* %40, i64 -168, !dbg !20069
  %41 = bitcast i8* %add.ptr44 to %struct.ethtool_rx_fs_item*, !dbg !20069
  store %struct.ethtool_rx_fs_item* %41, %struct.ethtool_rx_fs_item** %tmp43, align 8, !dbg !20070
  %42 = load %struct.ethtool_rx_fs_item*, %struct.ethtool_rx_fs_item** %tmp43, align 8, !dbg !20069
  store %struct.ethtool_rx_fs_item* %42, %struct.ethtool_rx_fs_item** %item, align 8, !dbg !20035
  br label %for.cond, !dbg !20035, !llvm.loop !20072

for.end:                                          ; preds = %for.cond
  %43 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !20074
  %rx_fs_lock45 = getelementptr inbounds %struct.macb, %struct.macb* %43, i32 0, i32 43, !dbg !20075
  %44 = load i64, i64* %flags, align 8, !dbg !20076
  store %struct.spinlock* %rx_fs_lock45, %struct.spinlock** %lock.addr.i46, align 8
  store i64 %44, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !743, metadata !13334, metadata !DIExpression()) #8, !dbg !20077
  call void @llvm.dbg.declare(metadata !743, metadata !13338, metadata !DIExpression()) #8, !dbg !20077
  store i32 1, i32* %tmp.i, align 4, !dbg !20077
  %45 = load i32, i32* %tmp.i, align 4, !dbg !20077
  call void @llvm.dbg.declare(metadata !743, metadata !13339, metadata !DIExpression()) #8, !dbg !20078
  call void @llvm.dbg.declare(metadata !743, metadata !13345, metadata !DIExpression()) #8, !dbg !20078
  store i32 1, i32* %tmp8.i, align 4, !dbg !20078
  %46 = load i32, i32* %tmp8.i, align 4, !dbg !20078
  %47 = load i64, i64* %flags.addr.i, align 8, !dbg !20079
  call void @arch_local_irq_restore(i64 %47) #14, !dbg !20079
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #8, !dbg !20080, !srcloc !13349
  %48 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i46, align 8, !dbg !20081
  %49 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %48, i32 0, i32 0, !dbg !20081
  %rlock.i47 = bitcast %union.anon.1* %49 to %struct.raw_spinlock*, !dbg !20081
  store i32 -22, i32* %retval, align 4, !dbg !20082
  br label %return, !dbg !20082

return:                                           ; preds = %for.end, %if.then
  %50 = load i32, i32* %retval, align 4, !dbg !20083
  ret i32 %50, !dbg !20083
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @list_add_tail(%struct.list_head* %new, %struct.list_head* %head) #2 !dbg !20084 {
entry:
  %new.addr = alloca %struct.list_head*, align 8
  %head.addr = alloca %struct.list_head*, align 8
  store %struct.list_head* %new, %struct.list_head** %new.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %new.addr, metadata !20087, metadata !DIExpression()), !dbg !20088
  store %struct.list_head* %head, %struct.list_head** %head.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %head.addr, metadata !20089, metadata !DIExpression()), !dbg !20090
  %0 = load %struct.list_head*, %struct.list_head** %new.addr, align 8, !dbg !20091
  %1 = load %struct.list_head*, %struct.list_head** %head.addr, align 8, !dbg !20092
  %prev = getelementptr inbounds %struct.list_head, %struct.list_head* %1, i32 0, i32 1, !dbg !20093
  %2 = load %struct.list_head*, %struct.list_head** %prev, align 8, !dbg !20093
  %3 = load %struct.list_head*, %struct.list_head** %head.addr, align 8, !dbg !20094
  call void @__list_add(%struct.list_head* %0, %struct.list_head* %2, %struct.list_head* %3) #12, !dbg !20095
  ret void, !dbg !20096
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @gem_prog_cmp_regs(%struct.macb* %bp, %struct.ethtool_rx_flow_spec* %fs) #2 !dbg !20097 {
entry:
  %bp.addr = alloca %struct.macb*, align 8
  %fs.addr = alloca %struct.ethtool_rx_flow_spec*, align 8
  %tp4sp_v = alloca %struct.ethtool_tcpip4_spec*, align 8
  %tp4sp_m = alloca %struct.ethtool_tcpip4_spec*, align 8
  %index = alloca i16, align 2
  %w0 = alloca i32, align 4
  %w1 = alloca i32, align 4
  %t2_scr = alloca i32, align 4
  %cmp_a = alloca i8, align 1
  %cmp_b = alloca i8, align 1
  %cmp_c = alloca i8, align 1
  store %struct.macb* %bp, %struct.macb** %bp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.macb** %bp.addr, metadata !20100, metadata !DIExpression()), !dbg !20101
  store %struct.ethtool_rx_flow_spec* %fs, %struct.ethtool_rx_flow_spec** %fs.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ethtool_rx_flow_spec** %fs.addr, metadata !20102, metadata !DIExpression()), !dbg !20103
  call void @llvm.dbg.declare(metadata %struct.ethtool_tcpip4_spec** %tp4sp_v, metadata !20104, metadata !DIExpression()), !dbg !20105
  call void @llvm.dbg.declare(metadata %struct.ethtool_tcpip4_spec** %tp4sp_m, metadata !20106, metadata !DIExpression()), !dbg !20107
  call void @llvm.dbg.declare(metadata i16* %index, metadata !20108, metadata !DIExpression()), !dbg !20109
  %0 = load %struct.ethtool_rx_flow_spec*, %struct.ethtool_rx_flow_spec** %fs.addr, align 8, !dbg !20110
  %location = getelementptr inbounds %struct.ethtool_rx_flow_spec, %struct.ethtool_rx_flow_spec* %0, i32 0, i32 6, !dbg !20111
  %1 = load i32, i32* %location, align 8, !dbg !20111
  %conv = trunc i32 %1 to i16, !dbg !20110
  store i16 %conv, i16* %index, align 2, !dbg !20109
  call void @llvm.dbg.declare(metadata i32* %w0, metadata !20112, metadata !DIExpression()), !dbg !20113
  call void @llvm.dbg.declare(metadata i32* %w1, metadata !20114, metadata !DIExpression()), !dbg !20115
  call void @llvm.dbg.declare(metadata i32* %t2_scr, metadata !20116, metadata !DIExpression()), !dbg !20117
  call void @llvm.dbg.declare(metadata i8* %cmp_a, metadata !20118, metadata !DIExpression()), !dbg !20119
  store i8 0, i8* %cmp_a, align 1, !dbg !20119
  call void @llvm.dbg.declare(metadata i8* %cmp_b, metadata !20120, metadata !DIExpression()), !dbg !20121
  store i8 0, i8* %cmp_b, align 1, !dbg !20121
  call void @llvm.dbg.declare(metadata i8* %cmp_c, metadata !20122, metadata !DIExpression()), !dbg !20123
  store i8 0, i8* %cmp_c, align 1, !dbg !20123
  %2 = load %struct.ethtool_rx_flow_spec*, %struct.ethtool_rx_flow_spec** %fs.addr, align 8, !dbg !20124
  %h_u = getelementptr inbounds %struct.ethtool_rx_flow_spec, %struct.ethtool_rx_flow_spec* %2, i32 0, i32 1, !dbg !20125
  %tcp_ip4_spec = bitcast %union.ethtool_flow_union* %h_u to %struct.ethtool_tcpip4_spec*, !dbg !20126
  store %struct.ethtool_tcpip4_spec* %tcp_ip4_spec, %struct.ethtool_tcpip4_spec** %tp4sp_v, align 8, !dbg !20127
  %3 = load %struct.ethtool_rx_flow_spec*, %struct.ethtool_rx_flow_spec** %fs.addr, align 8, !dbg !20128
  %m_u = getelementptr inbounds %struct.ethtool_rx_flow_spec, %struct.ethtool_rx_flow_spec* %3, i32 0, i32 3, !dbg !20129
  %tcp_ip4_spec1 = bitcast %union.ethtool_flow_union* %m_u to %struct.ethtool_tcpip4_spec*, !dbg !20130
  store %struct.ethtool_tcpip4_spec* %tcp_ip4_spec1, %struct.ethtool_tcpip4_spec** %tp4sp_m, align 8, !dbg !20131
  %4 = load %struct.ethtool_tcpip4_spec*, %struct.ethtool_tcpip4_spec** %tp4sp_m, align 8, !dbg !20132
  %ip4src = getelementptr inbounds %struct.ethtool_tcpip4_spec, %struct.ethtool_tcpip4_spec* %4, i32 0, i32 0, !dbg !20134
  %5 = load i32, i32* %ip4src, align 4, !dbg !20134
  %cmp = icmp eq i32 %5, -1, !dbg !20135
  br i1 %cmp, label %if.then, label %if.end, !dbg !20136

if.then:                                          ; preds = %entry
  store i32 0, i32* %w0, align 4, !dbg !20137
  store i32 0, i32* %w1, align 4, !dbg !20139
  %6 = load %struct.ethtool_tcpip4_spec*, %struct.ethtool_tcpip4_spec** %tp4sp_v, align 8, !dbg !20140
  %ip4src3 = getelementptr inbounds %struct.ethtool_tcpip4_spec, %struct.ethtool_tcpip4_spec* %6, i32 0, i32 0, !dbg !20141
  %7 = load i32, i32* %ip4src3, align 4, !dbg !20141
  store i32 %7, i32* %w0, align 4, !dbg !20142
  %8 = load i32, i32* %w1, align 4, !dbg !20143
  %and = and i32 %8, -513, !dbg !20143
  %or = or i32 %and, 512, !dbg !20143
  store i32 %or, i32* %w1, align 4, !dbg !20144
  %9 = load i32, i32* %w1, align 4, !dbg !20145
  %and4 = and i32 %9, -385, !dbg !20145
  %or5 = or i32 %and4, 128, !dbg !20145
  store i32 %or5, i32* %w1, align 4, !dbg !20146
  %10 = load i32, i32* %w1, align 4, !dbg !20147
  %and6 = and i32 %10, -128, !dbg !20147
  %or7 = or i32 %and6, 12, !dbg !20147
  store i32 %or7, i32* %w1, align 4, !dbg !20148
  %11 = load %struct.macb*, %struct.macb** %bp.addr, align 8, !dbg !20149
  %macb_reg_writel = getelementptr inbounds %struct.macb, %struct.macb* %11, i32 0, i32 3, !dbg !20149
  %12 = load void (%struct.macb*, i32, i32)*, void (%struct.macb*, i32, i32)** %macb_reg_writel, align 8, !dbg !20149
  %13 = load %struct.macb*, %struct.macb** %bp.addr, align 8, !dbg !20149
  %14 = load i16, i16* %index, align 2, !dbg !20149
  %conv8 = zext i16 %14 to i32, !dbg !20149
  %mul = mul i32 %conv8, 3, !dbg !20149
  %mul9 = mul i32 %mul, 2, !dbg !20149
  %mul10 = mul i32 %mul9, 4, !dbg !20149
  %add = add i32 1792, %mul10, !dbg !20149
  %15 = load i32, i32* %w0, align 4, !dbg !20149
  call void %12(%struct.macb* %13, i32 %add, i32 %15) #12, !dbg !20149
  %16 = load %struct.macb*, %struct.macb** %bp.addr, align 8, !dbg !20150
  %macb_reg_writel11 = getelementptr inbounds %struct.macb, %struct.macb* %16, i32 0, i32 3, !dbg !20150
  %17 = load void (%struct.macb*, i32, i32)*, void (%struct.macb*, i32, i32)** %macb_reg_writel11, align 8, !dbg !20150
  %18 = load %struct.macb*, %struct.macb** %bp.addr, align 8, !dbg !20150
  %19 = load i16, i16* %index, align 2, !dbg !20150
  %conv12 = zext i16 %19 to i32, !dbg !20150
  %mul13 = mul i32 %conv12, 3, !dbg !20150
  %mul14 = mul i32 %mul13, 2, !dbg !20150
  %mul15 = mul i32 %mul14, 4, !dbg !20150
  %add16 = add i32 1796, %mul15, !dbg !20150
  %20 = load i32, i32* %w1, align 4, !dbg !20150
  call void %17(%struct.macb* %18, i32 %add16, i32 %20) #12, !dbg !20150
  store i8 1, i8* %cmp_a, align 1, !dbg !20151
  br label %if.end, !dbg !20152

if.end:                                           ; preds = %if.then, %entry
  %21 = load %struct.ethtool_tcpip4_spec*, %struct.ethtool_tcpip4_spec** %tp4sp_m, align 8, !dbg !20153
  %ip4dst = getelementptr inbounds %struct.ethtool_tcpip4_spec, %struct.ethtool_tcpip4_spec* %21, i32 0, i32 1, !dbg !20155
  %22 = load i32, i32* %ip4dst, align 4, !dbg !20155
  %cmp17 = icmp eq i32 %22, -1, !dbg !20156
  br i1 %cmp17, label %if.then19, label %if.end41, !dbg !20157

if.then19:                                        ; preds = %if.end
  store i32 0, i32* %w0, align 4, !dbg !20158
  store i32 0, i32* %w1, align 4, !dbg !20160
  %23 = load %struct.ethtool_tcpip4_spec*, %struct.ethtool_tcpip4_spec** %tp4sp_v, align 8, !dbg !20161
  %ip4dst20 = getelementptr inbounds %struct.ethtool_tcpip4_spec, %struct.ethtool_tcpip4_spec* %23, i32 0, i32 1, !dbg !20162
  %24 = load i32, i32* %ip4dst20, align 4, !dbg !20162
  store i32 %24, i32* %w0, align 4, !dbg !20163
  %25 = load i32, i32* %w1, align 4, !dbg !20164
  %and21 = and i32 %25, -513, !dbg !20164
  %or22 = or i32 %and21, 512, !dbg !20164
  store i32 %or22, i32* %w1, align 4, !dbg !20165
  %26 = load i32, i32* %w1, align 4, !dbg !20166
  %and23 = and i32 %26, -385, !dbg !20166
  %or24 = or i32 %and23, 128, !dbg !20166
  store i32 %or24, i32* %w1, align 4, !dbg !20167
  %27 = load i32, i32* %w1, align 4, !dbg !20168
  %and25 = and i32 %27, -128, !dbg !20168
  %or26 = or i32 %and25, 16, !dbg !20168
  store i32 %or26, i32* %w1, align 4, !dbg !20169
  %28 = load %struct.macb*, %struct.macb** %bp.addr, align 8, !dbg !20170
  %macb_reg_writel27 = getelementptr inbounds %struct.macb, %struct.macb* %28, i32 0, i32 3, !dbg !20170
  %29 = load void (%struct.macb*, i32, i32)*, void (%struct.macb*, i32, i32)** %macb_reg_writel27, align 8, !dbg !20170
  %30 = load %struct.macb*, %struct.macb** %bp.addr, align 8, !dbg !20170
  %31 = load i16, i16* %index, align 2, !dbg !20170
  %conv28 = zext i16 %31 to i32, !dbg !20170
  %mul29 = mul i32 %conv28, 3, !dbg !20170
  %add30 = add i32 %mul29, 1, !dbg !20170
  %mul31 = mul i32 %add30, 2, !dbg !20170
  %mul32 = mul i32 %mul31, 4, !dbg !20170
  %add33 = add i32 1792, %mul32, !dbg !20170
  %32 = load i32, i32* %w0, align 4, !dbg !20170
  call void %29(%struct.macb* %30, i32 %add33, i32 %32) #12, !dbg !20170
  %33 = load %struct.macb*, %struct.macb** %bp.addr, align 8, !dbg !20171
  %macb_reg_writel34 = getelementptr inbounds %struct.macb, %struct.macb* %33, i32 0, i32 3, !dbg !20171
  %34 = load void (%struct.macb*, i32, i32)*, void (%struct.macb*, i32, i32)** %macb_reg_writel34, align 8, !dbg !20171
  %35 = load %struct.macb*, %struct.macb** %bp.addr, align 8, !dbg !20171
  %36 = load i16, i16* %index, align 2, !dbg !20171
  %conv35 = zext i16 %36 to i32, !dbg !20171
  %mul36 = mul i32 %conv35, 3, !dbg !20171
  %add37 = add i32 %mul36, 1, !dbg !20171
  %mul38 = mul i32 %add37, 2, !dbg !20171
  %mul39 = mul i32 %mul38, 4, !dbg !20171
  %add40 = add i32 1796, %mul39, !dbg !20171
  %37 = load i32, i32* %w1, align 4, !dbg !20171
  call void %34(%struct.macb* %35, i32 %add40, i32 %37) #12, !dbg !20171
  store i8 1, i8* %cmp_b, align 1, !dbg !20172
  br label %if.end41, !dbg !20173

if.end41:                                         ; preds = %if.then19, %if.end
  %38 = load %struct.ethtool_tcpip4_spec*, %struct.ethtool_tcpip4_spec** %tp4sp_m, align 8, !dbg !20174
  %psrc = getelementptr inbounds %struct.ethtool_tcpip4_spec, %struct.ethtool_tcpip4_spec* %38, i32 0, i32 2, !dbg !20176
  %39 = load i16, i16* %psrc, align 4, !dbg !20176
  %conv42 = zext i16 %39 to i32, !dbg !20174
  %cmp43 = icmp eq i32 %conv42, 65535, !dbg !20177
  br i1 %cmp43, label %if.then48, label %lor.lhs.false, !dbg !20178

lor.lhs.false:                                    ; preds = %if.end41
  %40 = load %struct.ethtool_tcpip4_spec*, %struct.ethtool_tcpip4_spec** %tp4sp_m, align 8, !dbg !20179
  %pdst = getelementptr inbounds %struct.ethtool_tcpip4_spec, %struct.ethtool_tcpip4_spec* %40, i32 0, i32 3, !dbg !20180
  %41 = load i16, i16* %pdst, align 2, !dbg !20180
  %conv45 = zext i16 %41 to i32, !dbg !20179
  %cmp46 = icmp eq i32 %conv45, 65535, !dbg !20181
  br i1 %cmp46, label %if.then48, label %if.end112, !dbg !20182

if.then48:                                        ; preds = %lor.lhs.false, %if.end41
  store i32 0, i32* %w0, align 4, !dbg !20183
  store i32 0, i32* %w1, align 4, !dbg !20185
  %42 = load i32, i32* %w1, align 4, !dbg !20186
  %and49 = and i32 %42, -385, !dbg !20186
  %or50 = or i32 %and49, 256, !dbg !20186
  store i32 %or50, i32* %w1, align 4, !dbg !20187
  %43 = load %struct.ethtool_tcpip4_spec*, %struct.ethtool_tcpip4_spec** %tp4sp_m, align 8, !dbg !20188
  %psrc51 = getelementptr inbounds %struct.ethtool_tcpip4_spec, %struct.ethtool_tcpip4_spec* %43, i32 0, i32 2, !dbg !20190
  %44 = load i16, i16* %psrc51, align 4, !dbg !20190
  %conv52 = zext i16 %44 to i32, !dbg !20188
  %45 = load %struct.ethtool_tcpip4_spec*, %struct.ethtool_tcpip4_spec** %tp4sp_m, align 8, !dbg !20191
  %pdst53 = getelementptr inbounds %struct.ethtool_tcpip4_spec, %struct.ethtool_tcpip4_spec* %45, i32 0, i32 3, !dbg !20192
  %46 = load i16, i16* %pdst53, align 2, !dbg !20192
  %conv54 = zext i16 %46 to i32, !dbg !20191
  %cmp55 = icmp eq i32 %conv52, %conv54, !dbg !20193
  br i1 %cmp55, label %if.then57, label %if.else, !dbg !20194

if.then57:                                        ; preds = %if.then48
  %47 = load i32, i32* %w0, align 4, !dbg !20195
  %and58 = and i32 %47, -65536, !dbg !20195
  %48 = load %struct.ethtool_tcpip4_spec*, %struct.ethtool_tcpip4_spec** %tp4sp_v, align 8, !dbg !20195
  %psrc59 = getelementptr inbounds %struct.ethtool_tcpip4_spec, %struct.ethtool_tcpip4_spec* %48, i32 0, i32 2, !dbg !20195
  %49 = load i16, i16* %psrc59, align 4, !dbg !20195
  %conv60 = zext i16 %49 to i32, !dbg !20195
  %and61 = and i32 %conv60, 65535, !dbg !20195
  %shl = shl i32 %and61, 0, !dbg !20195
  %or62 = or i32 %and58, %shl, !dbg !20195
  store i32 %or62, i32* %w0, align 4, !dbg !20197
  %50 = load i32, i32* %w0, align 4, !dbg !20198
  %and63 = and i32 %50, 65535, !dbg !20198
  %51 = load %struct.ethtool_tcpip4_spec*, %struct.ethtool_tcpip4_spec** %tp4sp_v, align 8, !dbg !20198
  %pdst64 = getelementptr inbounds %struct.ethtool_tcpip4_spec, %struct.ethtool_tcpip4_spec* %51, i32 0, i32 3, !dbg !20198
  %52 = load i16, i16* %pdst64, align 2, !dbg !20198
  %conv65 = zext i16 %52 to i32, !dbg !20198
  %and66 = and i32 %conv65, 65535, !dbg !20198
  %shl67 = shl i32 %and66, 16, !dbg !20198
  %or68 = or i32 %and63, %shl67, !dbg !20198
  store i32 %or68, i32* %w0, align 4, !dbg !20199
  %53 = load i32, i32* %w1, align 4, !dbg !20200
  %and69 = and i32 %53, -513, !dbg !20200
  %or70 = or i32 %and69, 512, !dbg !20200
  store i32 %or70, i32* %w1, align 4, !dbg !20201
  %54 = load i32, i32* %w1, align 4, !dbg !20202
  %and71 = and i32 %54, -128, !dbg !20202
  store i32 %and71, i32* %w1, align 4, !dbg !20203
  br label %if.end97, !dbg !20204

if.else:                                          ; preds = %if.then48
  %55 = load i32, i32* %w1, align 4, !dbg !20205
  %and72 = and i32 %55, -513, !dbg !20205
  store i32 %and72, i32* %w1, align 4, !dbg !20207
  %56 = load i32, i32* %w0, align 4, !dbg !20208
  %and73 = and i32 %56, -65536, !dbg !20208
  %or74 = or i32 %and73, 65535, !dbg !20208
  store i32 %or74, i32* %w0, align 4, !dbg !20209
  %57 = load %struct.ethtool_tcpip4_spec*, %struct.ethtool_tcpip4_spec** %tp4sp_m, align 8, !dbg !20210
  %psrc75 = getelementptr inbounds %struct.ethtool_tcpip4_spec, %struct.ethtool_tcpip4_spec* %57, i32 0, i32 2, !dbg !20212
  %58 = load i16, i16* %psrc75, align 4, !dbg !20212
  %conv76 = zext i16 %58 to i32, !dbg !20210
  %cmp77 = icmp eq i32 %conv76, 65535, !dbg !20213
  br i1 %cmp77, label %if.then79, label %if.else87, !dbg !20214

if.then79:                                        ; preds = %if.else
  %59 = load i32, i32* %w0, align 4, !dbg !20215
  %and80 = and i32 %59, 65535, !dbg !20215
  %60 = load %struct.ethtool_tcpip4_spec*, %struct.ethtool_tcpip4_spec** %tp4sp_v, align 8, !dbg !20215
  %psrc81 = getelementptr inbounds %struct.ethtool_tcpip4_spec, %struct.ethtool_tcpip4_spec* %60, i32 0, i32 2, !dbg !20215
  %61 = load i16, i16* %psrc81, align 4, !dbg !20215
  %conv82 = zext i16 %61 to i32, !dbg !20215
  %and83 = and i32 %conv82, 65535, !dbg !20215
  %shl84 = shl i32 %and83, 16, !dbg !20215
  %or85 = or i32 %and80, %shl84, !dbg !20215
  store i32 %or85, i32* %w0, align 4, !dbg !20217
  %62 = load i32, i32* %w1, align 4, !dbg !20218
  %and86 = and i32 %62, -128, !dbg !20218
  store i32 %and86, i32* %w1, align 4, !dbg !20219
  br label %if.end96, !dbg !20220

if.else87:                                        ; preds = %if.else
  %63 = load i32, i32* %w0, align 4, !dbg !20221
  %and88 = and i32 %63, 65535, !dbg !20221
  %64 = load %struct.ethtool_tcpip4_spec*, %struct.ethtool_tcpip4_spec** %tp4sp_v, align 8, !dbg !20221
  %pdst89 = getelementptr inbounds %struct.ethtool_tcpip4_spec, %struct.ethtool_tcpip4_spec* %64, i32 0, i32 3, !dbg !20221
  %65 = load i16, i16* %pdst89, align 2, !dbg !20221
  %conv90 = zext i16 %65 to i32, !dbg !20221
  %and91 = and i32 %conv90, 65535, !dbg !20221
  %shl92 = shl i32 %and91, 16, !dbg !20221
  %or93 = or i32 %and88, %shl92, !dbg !20221
  store i32 %or93, i32* %w0, align 4, !dbg !20223
  %66 = load i32, i32* %w1, align 4, !dbg !20224
  %and94 = and i32 %66, -128, !dbg !20224
  %or95 = or i32 %and94, 2, !dbg !20224
  store i32 %or95, i32* %w1, align 4, !dbg !20225
  br label %if.end96

if.end96:                                         ; preds = %if.else87, %if.then79
  br label %if.end97

if.end97:                                         ; preds = %if.end96, %if.then57
  %67 = load %struct.macb*, %struct.macb** %bp.addr, align 8, !dbg !20226
  %macb_reg_writel98 = getelementptr inbounds %struct.macb, %struct.macb* %67, i32 0, i32 3, !dbg !20226
  %68 = load void (%struct.macb*, i32, i32)*, void (%struct.macb*, i32, i32)** %macb_reg_writel98, align 8, !dbg !20226
  %69 = load %struct.macb*, %struct.macb** %bp.addr, align 8, !dbg !20226
  %70 = load i16, i16* %index, align 2, !dbg !20226
  %conv99 = zext i16 %70 to i32, !dbg !20226
  %mul100 = mul i32 %conv99, 3, !dbg !20226
  %add101 = add i32 %mul100, 2, !dbg !20226
  %mul102 = mul i32 %add101, 2, !dbg !20226
  %mul103 = mul i32 %mul102, 4, !dbg !20226
  %add104 = add i32 1792, %mul103, !dbg !20226
  %71 = load i32, i32* %w0, align 4, !dbg !20226
  call void %68(%struct.macb* %69, i32 %add104, i32 %71) #12, !dbg !20226
  %72 = load %struct.macb*, %struct.macb** %bp.addr, align 8, !dbg !20227
  %macb_reg_writel105 = getelementptr inbounds %struct.macb, %struct.macb* %72, i32 0, i32 3, !dbg !20227
  %73 = load void (%struct.macb*, i32, i32)*, void (%struct.macb*, i32, i32)** %macb_reg_writel105, align 8, !dbg !20227
  %74 = load %struct.macb*, %struct.macb** %bp.addr, align 8, !dbg !20227
  %75 = load i16, i16* %index, align 2, !dbg !20227
  %conv106 = zext i16 %75 to i32, !dbg !20227
  %mul107 = mul i32 %conv106, 3, !dbg !20227
  %add108 = add i32 %mul107, 2, !dbg !20227
  %mul109 = mul i32 %add108, 2, !dbg !20227
  %mul110 = mul i32 %mul109, 4, !dbg !20227
  %add111 = add i32 1796, %mul110, !dbg !20227
  %76 = load i32, i32* %w1, align 4, !dbg !20227
  call void %73(%struct.macb* %74, i32 %add111, i32 %76) #12, !dbg !20227
  store i8 1, i8* %cmp_c, align 1, !dbg !20228
  br label %if.end112, !dbg !20229

if.end112:                                        ; preds = %if.end97, %lor.lhs.false
  store i32 0, i32* %t2_scr, align 4, !dbg !20230
  %77 = load i32, i32* %t2_scr, align 4, !dbg !20231
  %and113 = and i32 %77, -16, !dbg !20231
  %conv114 = zext i32 %and113 to i64, !dbg !20231
  %78 = load %struct.ethtool_rx_flow_spec*, %struct.ethtool_rx_flow_spec** %fs.addr, align 8, !dbg !20231
  %ring_cookie = getelementptr inbounds %struct.ethtool_rx_flow_spec, %struct.ethtool_rx_flow_spec* %78, i32 0, i32 5, !dbg !20231
  %79 = load i64, i64* %ring_cookie, align 8, !dbg !20231
  %and115 = and i64 %79, 255, !dbg !20231
  %and116 = and i64 %and115, 15, !dbg !20231
  %shl117 = shl i64 %and116, 0, !dbg !20231
  %or118 = or i64 %conv114, %shl117, !dbg !20231
  %conv119 = trunc i64 %or118 to i32, !dbg !20231
  store i32 %conv119, i32* %t2_scr, align 4, !dbg !20232
  %80 = load i32, i32* %t2_scr, align 4, !dbg !20233
  %and120 = and i32 %80, -3585, !dbg !20233
  store i32 %and120, i32* %t2_scr, align 4, !dbg !20234
  %81 = load i8, i8* %cmp_a, align 1, !dbg !20235
  %tobool = trunc i8 %81 to i1, !dbg !20235
  br i1 %tobool, label %if.then121, label %if.end128, !dbg !20237

if.then121:                                       ; preds = %if.end112
  %82 = load i32, i32* %t2_scr, align 4, !dbg !20238
  %and122 = and i32 %82, -253953, !dbg !20238
  %83 = load i16, i16* %index, align 2, !dbg !20238
  %conv123 = zext i16 %83 to i32, !dbg !20238
  %mul124 = mul i32 %conv123, 3, !dbg !20238
  %and125 = and i32 %mul124, 31, !dbg !20238
  %shl126 = shl i32 %and125, 13, !dbg !20238
  %or127 = or i32 %and122, %shl126, !dbg !20238
  store i32 %or127, i32* %t2_scr, align 4, !dbg !20239
  br label %if.end128, !dbg !20240

if.end128:                                        ; preds = %if.then121, %if.end112
  %84 = load i8, i8* %cmp_b, align 1, !dbg !20241
  %tobool129 = trunc i8 %84 to i1, !dbg !20241
  br i1 %tobool129, label %if.then130, label %if.end138, !dbg !20243

if.then130:                                       ; preds = %if.end128
  %85 = load i32, i32* %t2_scr, align 4, !dbg !20244
  %and131 = and i32 %85, -16252929, !dbg !20244
  %86 = load i16, i16* %index, align 2, !dbg !20244
  %conv132 = zext i16 %86 to i32, !dbg !20244
  %mul133 = mul i32 %conv132, 3, !dbg !20244
  %add134 = add i32 %mul133, 1, !dbg !20244
  %and135 = and i32 %add134, 31, !dbg !20244
  %shl136 = shl i32 %and135, 19, !dbg !20244
  %or137 = or i32 %and131, %shl136, !dbg !20244
  store i32 %or137, i32* %t2_scr, align 4, !dbg !20245
  br label %if.end138, !dbg !20246

if.end138:                                        ; preds = %if.then130, %if.end128
  %87 = load i8, i8* %cmp_c, align 1, !dbg !20247
  %tobool139 = trunc i8 %87 to i1, !dbg !20247
  br i1 %tobool139, label %if.then140, label %if.end148, !dbg !20249

if.then140:                                       ; preds = %if.end138
  %88 = load i32, i32* %t2_scr, align 4, !dbg !20250
  %and141 = and i32 %88, -1040187393, !dbg !20250
  %89 = load i16, i16* %index, align 2, !dbg !20250
  %conv142 = zext i16 %89 to i32, !dbg !20250
  %mul143 = mul i32 %conv142, 3, !dbg !20250
  %add144 = add i32 %mul143, 2, !dbg !20250
  %and145 = and i32 %add144, 31, !dbg !20250
  %shl146 = shl i32 %and145, 25, !dbg !20250
  %or147 = or i32 %and141, %shl146, !dbg !20250
  store i32 %or147, i32* %t2_scr, align 4, !dbg !20251
  br label %if.end148, !dbg !20252

if.end148:                                        ; preds = %if.then140, %if.end138
  %90 = load %struct.macb*, %struct.macb** %bp.addr, align 8, !dbg !20253
  %macb_reg_writel149 = getelementptr inbounds %struct.macb, %struct.macb* %90, i32 0, i32 3, !dbg !20253
  %91 = load void (%struct.macb*, i32, i32)*, void (%struct.macb*, i32, i32)** %macb_reg_writel149, align 8, !dbg !20253
  %92 = load %struct.macb*, %struct.macb** %bp.addr, align 8, !dbg !20253
  %93 = load i16, i16* %index, align 2, !dbg !20253
  %conv150 = zext i16 %93 to i32, !dbg !20253
  %mul151 = mul i32 %conv150, 4, !dbg !20253
  %add152 = add i32 1344, %mul151, !dbg !20253
  %94 = load i32, i32* %t2_scr, align 4, !dbg !20253
  call void %91(%struct.macb* %92, i32 %add152, i32 %94) #12, !dbg !20253
  ret void, !dbg !20254
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @__list_add(%struct.list_head* %new, %struct.list_head* %prev, %struct.list_head* %next) #2 !dbg !20255 {
entry:
  %new.addr = alloca %struct.list_head*, align 8
  %prev.addr = alloca %struct.list_head*, align 8
  %next.addr = alloca %struct.list_head*, align 8
  store %struct.list_head* %new, %struct.list_head** %new.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %new.addr, metadata !20258, metadata !DIExpression()), !dbg !20259
  store %struct.list_head* %prev, %struct.list_head** %prev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %prev.addr, metadata !20260, metadata !DIExpression()), !dbg !20261
  store %struct.list_head* %next, %struct.list_head** %next.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %next.addr, metadata !20262, metadata !DIExpression()), !dbg !20263
  %0 = load %struct.list_head*, %struct.list_head** %new.addr, align 8, !dbg !20264
  %1 = load %struct.list_head*, %struct.list_head** %prev.addr, align 8, !dbg !20266
  %2 = load %struct.list_head*, %struct.list_head** %next.addr, align 8, !dbg !20267
  %call = call zeroext i1 @__list_add_valid(%struct.list_head* %0, %struct.list_head* %1, %struct.list_head* %2) #12, !dbg !20268
  br i1 %call, label %if.end, label %if.then, !dbg !20269

if.then:                                          ; preds = %entry
  br label %do.end8, !dbg !20270

if.end:                                           ; preds = %entry
  %3 = load %struct.list_head*, %struct.list_head** %new.addr, align 8, !dbg !20271
  %4 = load %struct.list_head*, %struct.list_head** %next.addr, align 8, !dbg !20272
  %prev1 = getelementptr inbounds %struct.list_head, %struct.list_head* %4, i32 0, i32 1, !dbg !20273
  store %struct.list_head* %3, %struct.list_head** %prev1, align 8, !dbg !20274
  %5 = load %struct.list_head*, %struct.list_head** %next.addr, align 8, !dbg !20275
  %6 = load %struct.list_head*, %struct.list_head** %new.addr, align 8, !dbg !20276
  %next2 = getelementptr inbounds %struct.list_head, %struct.list_head* %6, i32 0, i32 0, !dbg !20277
  store %struct.list_head* %5, %struct.list_head** %next2, align 8, !dbg !20278
  %7 = load %struct.list_head*, %struct.list_head** %prev.addr, align 8, !dbg !20279
  %8 = load %struct.list_head*, %struct.list_head** %new.addr, align 8, !dbg !20280
  %prev3 = getelementptr inbounds %struct.list_head, %struct.list_head* %8, i32 0, i32 1, !dbg !20281
  store %struct.list_head* %7, %struct.list_head** %prev3, align 8, !dbg !20282
  br label %do.body, !dbg !20283

do.body:                                          ; preds = %if.end
  br label %do.body4, !dbg !20284

do.body4:                                         ; preds = %do.body
  br label %do.end, !dbg !20286

do.end:                                           ; preds = %do.body4
  br label %do.body5, !dbg !20284

do.body5:                                         ; preds = %do.end
  %9 = load %struct.list_head*, %struct.list_head** %new.addr, align 8, !dbg !20288
  %10 = load %struct.list_head*, %struct.list_head** %prev.addr, align 8, !dbg !20288
  %next6 = getelementptr inbounds %struct.list_head, %struct.list_head* %10, i32 0, i32 0, !dbg !20288
  store volatile %struct.list_head* %9, %struct.list_head** %next6, align 8, !dbg !20288
  br label %do.end7, !dbg !20288

do.end7:                                          ; preds = %do.body5
  br label %do.end8, !dbg !20284

do.end8:                                          ; preds = %if.then, %do.end7
  ret void, !dbg !20290
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @__list_add_valid(%struct.list_head* %new, %struct.list_head* %prev, %struct.list_head* %next) #2 !dbg !20291 {
entry:
  %new.addr = alloca %struct.list_head*, align 8
  %prev.addr = alloca %struct.list_head*, align 8
  %next.addr = alloca %struct.list_head*, align 8
  store %struct.list_head* %new, %struct.list_head** %new.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %new.addr, metadata !20294, metadata !DIExpression()), !dbg !20295
  store %struct.list_head* %prev, %struct.list_head** %prev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %prev.addr, metadata !20296, metadata !DIExpression()), !dbg !20297
  store %struct.list_head* %next, %struct.list_head** %next.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %next.addr, metadata !20298, metadata !DIExpression()), !dbg !20299
  ret i1 true, !dbg !20300
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @list_del(%struct.list_head* %entry1) #2 !dbg !20301 {
entry:
  %entry.addr = alloca %struct.list_head*, align 8
  store %struct.list_head* %entry1, %struct.list_head** %entry.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %entry.addr, metadata !20302, metadata !DIExpression()), !dbg !20303
  %0 = load %struct.list_head*, %struct.list_head** %entry.addr, align 8, !dbg !20304
  call void @__list_del_entry(%struct.list_head* %0) #12, !dbg !20305
  %1 = load %struct.list_head*, %struct.list_head** %entry.addr, align 8, !dbg !20306
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %1, i32 0, i32 0, !dbg !20307
  store %struct.list_head* bitcast (i8* getelementptr (i8, i8* inttoptr (i64 256 to i8*), i64 -2401263026318606336) to %struct.list_head*), %struct.list_head** %next, align 8, !dbg !20308
  %2 = load %struct.list_head*, %struct.list_head** %entry.addr, align 8, !dbg !20309
  %prev = getelementptr inbounds %struct.list_head, %struct.list_head* %2, i32 0, i32 1, !dbg !20310
  store %struct.list_head* bitcast (i8* getelementptr (i8, i8* inttoptr (i64 290 to i8*), i64 -2401263026318606336) to %struct.list_head*), %struct.list_head** %prev, align 8, !dbg !20311
  ret void, !dbg !20312
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @__list_del_entry(%struct.list_head* %entry1) #2 !dbg !20313 {
entry:
  %entry.addr = alloca %struct.list_head*, align 8
  store %struct.list_head* %entry1, %struct.list_head** %entry.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %entry.addr, metadata !20314, metadata !DIExpression()), !dbg !20315
  %0 = load %struct.list_head*, %struct.list_head** %entry.addr, align 8, !dbg !20316
  %call = call zeroext i1 @__list_del_entry_valid(%struct.list_head* %0) #12, !dbg !20318
  br i1 %call, label %if.end, label %if.then, !dbg !20319

if.then:                                          ; preds = %entry
  br label %return, !dbg !20320

if.end:                                           ; preds = %entry
  %1 = load %struct.list_head*, %struct.list_head** %entry.addr, align 8, !dbg !20321
  %prev = getelementptr inbounds %struct.list_head, %struct.list_head* %1, i32 0, i32 1, !dbg !20322
  %2 = load %struct.list_head*, %struct.list_head** %prev, align 8, !dbg !20322
  %3 = load %struct.list_head*, %struct.list_head** %entry.addr, align 8, !dbg !20323
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %3, i32 0, i32 0, !dbg !20324
  %4 = load %struct.list_head*, %struct.list_head** %next, align 8, !dbg !20324
  call void @__list_del(%struct.list_head* %2, %struct.list_head* %4) #12, !dbg !20325
  br label %return, !dbg !20326

return:                                           ; preds = %if.end, %if.then
  ret void, !dbg !20326
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @__list_del_entry_valid(%struct.list_head* %entry1) #2 !dbg !20327 {
entry:
  %entry.addr = alloca %struct.list_head*, align 8
  store %struct.list_head* %entry1, %struct.list_head** %entry.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %entry.addr, metadata !20330, metadata !DIExpression()), !dbg !20331
  ret i1 true, !dbg !20332
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @__list_del(%struct.list_head* %prev, %struct.list_head* %next) #2 !dbg !20333 {
entry:
  %prev.addr = alloca %struct.list_head*, align 8
  %next.addr = alloca %struct.list_head*, align 8
  store %struct.list_head* %prev, %struct.list_head** %prev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %prev.addr, metadata !20334, metadata !DIExpression()), !dbg !20335
  store %struct.list_head* %next, %struct.list_head** %next.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %next.addr, metadata !20336, metadata !DIExpression()), !dbg !20337
  %0 = load %struct.list_head*, %struct.list_head** %prev.addr, align 8, !dbg !20338
  %1 = load %struct.list_head*, %struct.list_head** %next.addr, align 8, !dbg !20339
  %prev1 = getelementptr inbounds %struct.list_head, %struct.list_head* %1, i32 0, i32 1, !dbg !20340
  store %struct.list_head* %0, %struct.list_head** %prev1, align 8, !dbg !20341
  br label %do.body, !dbg !20342

do.body:                                          ; preds = %entry
  br label %do.body2, !dbg !20343

do.body2:                                         ; preds = %do.body
  br label %do.end, !dbg !20345

do.end:                                           ; preds = %do.body2
  br label %do.body3, !dbg !20343

do.body3:                                         ; preds = %do.end
  %2 = load %struct.list_head*, %struct.list_head** %next.addr, align 8, !dbg !20347
  %3 = load %struct.list_head*, %struct.list_head** %prev.addr, align 8, !dbg !20347
  %next4 = getelementptr inbounds %struct.list_head, %struct.list_head* %3, i32 0, i32 0, !dbg !20347
  store volatile %struct.list_head* %2, %struct.list_head** %next4, align 8, !dbg !20347
  br label %do.end5, !dbg !20347

do.end5:                                          ; preds = %do.body3
  br label %do.end6, !dbg !20343

do.end6:                                          ; preds = %do.end5
  ret void, !dbg !20349
}

; Function Attrs: noredzone
declare dso_local i32 @ethtool_op_get_ts_info(%struct.net_device*, %struct.ethtool_ts_info*) #1

; Function Attrs: noredzone
declare dso_local i32 @phylink_ethtool_ksettings_get(%struct.phylink*, %struct.ethtool_link_ksettings*) #1

; Function Attrs: noredzone
declare dso_local i32 @phylink_ethtool_ksettings_set(%struct.phylink*, %struct.ethtool_link_ksettings*) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @macb_init_rx_ring(%struct.macb_queue* %queue) #2 !dbg !20350 {
entry:
  %queue.addr = alloca %struct.macb_queue*, align 8
  %bp = alloca %struct.macb*, align 8
  %addr = alloca i64, align 8
  %desc = alloca %struct.macb_dma_desc*, align 8
  %i = alloca i32, align 4
  store %struct.macb_queue* %queue, %struct.macb_queue** %queue.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.macb_queue** %queue.addr, metadata !20351, metadata !DIExpression()), !dbg !20352
  call void @llvm.dbg.declare(metadata %struct.macb** %bp, metadata !20353, metadata !DIExpression()), !dbg !20354
  %0 = load %struct.macb_queue*, %struct.macb_queue** %queue.addr, align 8, !dbg !20355
  %bp1 = getelementptr inbounds %struct.macb_queue, %struct.macb_queue* %0, i32 0, i32 0, !dbg !20356
  %1 = load %struct.macb*, %struct.macb** %bp1, align 8, !dbg !20356
  store %struct.macb* %1, %struct.macb** %bp, align 8, !dbg !20354
  call void @llvm.dbg.declare(metadata i64* %addr, metadata !20357, metadata !DIExpression()), !dbg !20358
  call void @llvm.dbg.declare(metadata %struct.macb_dma_desc** %desc, metadata !20359, metadata !DIExpression()), !dbg !20360
  store %struct.macb_dma_desc* null, %struct.macb_dma_desc** %desc, align 8, !dbg !20360
  call void @llvm.dbg.declare(metadata i32* %i, metadata !20361, metadata !DIExpression()), !dbg !20362
  %2 = load %struct.macb_queue*, %struct.macb_queue** %queue.addr, align 8, !dbg !20363
  %rx_buffers_dma = getelementptr inbounds %struct.macb_queue, %struct.macb_queue* %2, i32 0, i32 18, !dbg !20364
  %3 = load i64, i64* %rx_buffers_dma, align 8, !dbg !20364
  store i64 %3, i64* %addr, align 8, !dbg !20365
  store i32 0, i32* %i, align 4, !dbg !20366
  br label %for.cond, !dbg !20368

for.cond:                                         ; preds = %for.inc, %entry
  %4 = load i32, i32* %i, align 4, !dbg !20369
  %5 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !20371
  %rx_ring_size = getelementptr inbounds %struct.macb, %struct.macb* %5, i32 0, i32 5, !dbg !20372
  %6 = load i32, i32* %rx_ring_size, align 8, !dbg !20372
  %cmp = icmp ult i32 %4, %6, !dbg !20373
  br i1 %cmp, label %for.body, label %for.end, !dbg !20374

for.body:                                         ; preds = %for.cond
  %7 = load %struct.macb_queue*, %struct.macb_queue** %queue.addr, align 8, !dbg !20375
  %8 = load i32, i32* %i, align 4, !dbg !20377
  %call = call %struct.macb_dma_desc* @macb_rx_desc(%struct.macb_queue* %7, i32 %8) #12, !dbg !20378
  store %struct.macb_dma_desc* %call, %struct.macb_dma_desc** %desc, align 8, !dbg !20379
  %9 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !20380
  %10 = load %struct.macb_dma_desc*, %struct.macb_dma_desc** %desc, align 8, !dbg !20381
  %11 = load i64, i64* %addr, align 8, !dbg !20382
  call void @macb_set_addr(%struct.macb* %9, %struct.macb_dma_desc* %10, i64 %11) #12, !dbg !20383
  %12 = load %struct.macb_dma_desc*, %struct.macb_dma_desc** %desc, align 8, !dbg !20384
  %ctrl = getelementptr inbounds %struct.macb_dma_desc, %struct.macb_dma_desc* %12, i32 0, i32 1, !dbg !20385
  store i32 0, i32* %ctrl, align 4, !dbg !20386
  %13 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !20387
  %rx_buffer_size = getelementptr inbounds %struct.macb, %struct.macb* %13, i32 0, i32 4, !dbg !20388
  %14 = load i64, i64* %rx_buffer_size, align 8, !dbg !20388
  %15 = load i64, i64* %addr, align 8, !dbg !20389
  %add = add i64 %15, %14, !dbg !20389
  store i64 %add, i64* %addr, align 8, !dbg !20389
  br label %for.inc, !dbg !20390

for.inc:                                          ; preds = %for.body
  %16 = load i32, i32* %i, align 4, !dbg !20391
  %inc = add i32 %16, 1, !dbg !20391
  store i32 %inc, i32* %i, align 4, !dbg !20391
  br label %for.cond, !dbg !20392, !llvm.loop !20393

for.end:                                          ; preds = %for.cond
  %17 = load %struct.macb_dma_desc*, %struct.macb_dma_desc** %desc, align 8, !dbg !20395
  %addr2 = getelementptr inbounds %struct.macb_dma_desc, %struct.macb_dma_desc* %17, i32 0, i32 0, !dbg !20396
  %18 = load i32, i32* %addr2, align 4, !dbg !20397
  %or = or i32 %18, 2, !dbg !20397
  store i32 %or, i32* %addr2, align 4, !dbg !20397
  %19 = load %struct.macb_queue*, %struct.macb_queue** %queue.addr, align 8, !dbg !20398
  %rx_tail = getelementptr inbounds %struct.macb_queue, %struct.macb_queue* %19, i32 0, i32 19, !dbg !20399
  store i32 0, i32* %rx_tail, align 8, !dbg !20400
  ret void, !dbg !20401
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @discard_partial_frame(%struct.macb_queue* %queue, i32 %begin, i32 %end) #2 !dbg !20402 {
entry:
  %queue.addr = alloca %struct.macb_queue*, align 8
  %begin.addr = alloca i32, align 4
  %end.addr = alloca i32, align 4
  %frag = alloca i32, align 4
  %desc = alloca %struct.macb_dma_desc*, align 8
  store %struct.macb_queue* %queue, %struct.macb_queue** %queue.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.macb_queue** %queue.addr, metadata !20405, metadata !DIExpression()), !dbg !20406
  store i32 %begin, i32* %begin.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %begin.addr, metadata !20407, metadata !DIExpression()), !dbg !20408
  store i32 %end, i32* %end.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %end.addr, metadata !20409, metadata !DIExpression()), !dbg !20410
  call void @llvm.dbg.declare(metadata i32* %frag, metadata !20411, metadata !DIExpression()), !dbg !20412
  %0 = load i32, i32* %begin.addr, align 4, !dbg !20413
  store i32 %0, i32* %frag, align 4, !dbg !20415
  br label %for.cond, !dbg !20416

for.cond:                                         ; preds = %for.inc, %entry
  %1 = load i32, i32* %frag, align 4, !dbg !20417
  %2 = load i32, i32* %end.addr, align 4, !dbg !20419
  %cmp = icmp ne i32 %1, %2, !dbg !20420
  br i1 %cmp, label %for.body, label %for.end, !dbg !20421

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.macb_dma_desc** %desc, metadata !20422, metadata !DIExpression()), !dbg !20424
  %3 = load %struct.macb_queue*, %struct.macb_queue** %queue.addr, align 8, !dbg !20425
  %4 = load i32, i32* %frag, align 4, !dbg !20426
  %call = call %struct.macb_dma_desc* @macb_rx_desc(%struct.macb_queue* %3, i32 %4) #12, !dbg !20427
  store %struct.macb_dma_desc* %call, %struct.macb_dma_desc** %desc, align 8, !dbg !20424
  %5 = load %struct.macb_dma_desc*, %struct.macb_dma_desc** %desc, align 8, !dbg !20428
  %addr = getelementptr inbounds %struct.macb_dma_desc, %struct.macb_dma_desc* %5, i32 0, i32 0, !dbg !20429
  %6 = load i32, i32* %addr, align 4, !dbg !20430
  %and = and i32 %6, -2, !dbg !20430
  store i32 %and, i32* %addr, align 4, !dbg !20430
  br label %for.inc, !dbg !20431

for.inc:                                          ; preds = %for.body
  %7 = load i32, i32* %frag, align 4, !dbg !20432
  %inc = add i32 %7, 1, !dbg !20432
  store i32 %inc, i32* %frag, align 4, !dbg !20432
  br label %for.cond, !dbg !20433, !llvm.loop !20434

for.end:                                          ; preds = %for.cond
  call void asm sideeffect "sfence", "~{memory},~{dirflag},~{fpsr},~{flags}"() #8, !dbg !20436, !srcloc !20437
  ret void, !dbg !20438
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @macb_rx_frame(%struct.macb_queue* %queue, %struct.napi_struct* %napi, i32 %first_frag, i32 %last_frag) #2 !dbg !20439 {
entry:
  %retval = alloca i32, align 4
  %queue.addr = alloca %struct.macb_queue*, align 8
  %napi.addr = alloca %struct.napi_struct*, align 8
  %first_frag.addr = alloca i32, align 4
  %last_frag.addr = alloca i32, align 4
  %len = alloca i32, align 4
  %frag = alloca i32, align 4
  %offset = alloca i32, align 4
  %skb = alloca %struct.sk_buff*, align 8
  %desc = alloca %struct.macb_dma_desc*, align 8
  %bp = alloca %struct.macb*, align 8
  %tmp = alloca i32, align 4
  %frag_len = alloca i32, align 4
  %tmp50 = alloca i32, align 4
  store %struct.macb_queue* %queue, %struct.macb_queue** %queue.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.macb_queue** %queue.addr, metadata !20442, metadata !DIExpression()), !dbg !20443
  store %struct.napi_struct* %napi, %struct.napi_struct** %napi.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.napi_struct** %napi.addr, metadata !20444, metadata !DIExpression()), !dbg !20445
  store i32 %first_frag, i32* %first_frag.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %first_frag.addr, metadata !20446, metadata !DIExpression()), !dbg !20447
  store i32 %last_frag, i32* %last_frag.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %last_frag.addr, metadata !20448, metadata !DIExpression()), !dbg !20449
  call void @llvm.dbg.declare(metadata i32* %len, metadata !20450, metadata !DIExpression()), !dbg !20451
  call void @llvm.dbg.declare(metadata i32* %frag, metadata !20452, metadata !DIExpression()), !dbg !20453
  call void @llvm.dbg.declare(metadata i32* %offset, metadata !20454, metadata !DIExpression()), !dbg !20455
  call void @llvm.dbg.declare(metadata %struct.sk_buff** %skb, metadata !20456, metadata !DIExpression()), !dbg !20457
  call void @llvm.dbg.declare(metadata %struct.macb_dma_desc** %desc, metadata !20458, metadata !DIExpression()), !dbg !20459
  call void @llvm.dbg.declare(metadata %struct.macb** %bp, metadata !20460, metadata !DIExpression()), !dbg !20461
  %0 = load %struct.macb_queue*, %struct.macb_queue** %queue.addr, align 8, !dbg !20462
  %bp1 = getelementptr inbounds %struct.macb_queue, %struct.macb_queue* %0, i32 0, i32 0, !dbg !20463
  %1 = load %struct.macb*, %struct.macb** %bp1, align 8, !dbg !20463
  store %struct.macb* %1, %struct.macb** %bp, align 8, !dbg !20461
  %2 = load %struct.macb_queue*, %struct.macb_queue** %queue.addr, align 8, !dbg !20464
  %3 = load i32, i32* %last_frag.addr, align 4, !dbg !20465
  %call = call %struct.macb_dma_desc* @macb_rx_desc(%struct.macb_queue* %2, i32 %3) #12, !dbg !20466
  store %struct.macb_dma_desc* %call, %struct.macb_dma_desc** %desc, align 8, !dbg !20467
  %4 = load %struct.macb_dma_desc*, %struct.macb_dma_desc** %desc, align 8, !dbg !20468
  %ctrl = getelementptr inbounds %struct.macb_dma_desc, %struct.macb_dma_desc* %4, i32 0, i32 1, !dbg !20469
  %5 = load i32, i32* %ctrl, align 4, !dbg !20469
  %6 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !20470
  %rx_frm_len_mask = getelementptr inbounds %struct.macb, %struct.macb* %6, i32 0, i32 31, !dbg !20471
  %7 = load i32, i32* %rx_frm_len_mask, align 8, !dbg !20471
  %and = and i32 %5, %7, !dbg !20472
  store i32 %and, i32* %len, align 4, !dbg !20473
  store i32 0, i32* %tmp, align 4, !dbg !20474
  %8 = load i32, i32* %tmp, align 4, !dbg !20477
  %9 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !20478
  %dev = getelementptr inbounds %struct.macb, %struct.macb* %9, i32 0, i32 17, !dbg !20479
  %10 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !20479
  %11 = load i32, i32* %len, align 4, !dbg !20480
  %add = add i32 %11, 0, !dbg !20481
  %call2 = call %struct.sk_buff* @netdev_alloc_skb(%struct.net_device* %10, i32 %add) #12, !dbg !20482
  store %struct.sk_buff* %call2, %struct.sk_buff** %skb, align 8, !dbg !20483
  %12 = load %struct.sk_buff*, %struct.sk_buff** %skb, align 8, !dbg !20484
  %tobool = icmp ne %struct.sk_buff* %12, null, !dbg !20484
  br i1 %tobool, label %if.end8, label %if.then, !dbg !20486

if.then:                                          ; preds = %entry
  %13 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !20487
  %dev3 = getelementptr inbounds %struct.macb, %struct.macb* %13, i32 0, i32 17, !dbg !20489
  %14 = load %struct.net_device*, %struct.net_device** %dev3, align 8, !dbg !20489
  %stats = getelementptr inbounds %struct.net_device, %struct.net_device* %14, i32 0, i32 24, !dbg !20490
  %rx_dropped = getelementptr inbounds %struct.net_device_stats, %struct.net_device_stats* %stats, i32 0, i32 6, !dbg !20491
  %15 = load i64, i64* %rx_dropped, align 8, !dbg !20492
  %inc = add i64 %15, 1, !dbg !20492
  store i64 %inc, i64* %rx_dropped, align 8, !dbg !20492
  %16 = load i32, i32* %first_frag.addr, align 4, !dbg !20493
  store i32 %16, i32* %frag, align 4, !dbg !20495
  br label %for.cond, !dbg !20496

for.cond:                                         ; preds = %for.inc, %if.then
  %17 = load %struct.macb_queue*, %struct.macb_queue** %queue.addr, align 8, !dbg !20497
  %18 = load i32, i32* %frag, align 4, !dbg !20500
  %call4 = call %struct.macb_dma_desc* @macb_rx_desc(%struct.macb_queue* %17, i32 %18) #12, !dbg !20501
  store %struct.macb_dma_desc* %call4, %struct.macb_dma_desc** %desc, align 8, !dbg !20502
  %19 = load %struct.macb_dma_desc*, %struct.macb_dma_desc** %desc, align 8, !dbg !20503
  %addr = getelementptr inbounds %struct.macb_dma_desc, %struct.macb_dma_desc* %19, i32 0, i32 0, !dbg !20504
  %20 = load i32, i32* %addr, align 4, !dbg !20505
  %and5 = and i32 %20, -2, !dbg !20505
  store i32 %and5, i32* %addr, align 4, !dbg !20505
  %21 = load i32, i32* %frag, align 4, !dbg !20506
  %22 = load i32, i32* %last_frag.addr, align 4, !dbg !20508
  %cmp = icmp eq i32 %21, %22, !dbg !20509
  br i1 %cmp, label %if.then6, label %if.end, !dbg !20510

if.then6:                                         ; preds = %for.cond
  br label %for.end, !dbg !20511

if.end:                                           ; preds = %for.cond
  br label %for.inc, !dbg !20512

for.inc:                                          ; preds = %if.end
  %23 = load i32, i32* %frag, align 4, !dbg !20513
  %inc7 = add i32 %23, 1, !dbg !20513
  store i32 %inc7, i32* %frag, align 4, !dbg !20513
  br label %for.cond, !dbg !20514, !llvm.loop !20515

for.end:                                          ; preds = %if.then6
  call void asm sideeffect "sfence", "~{memory},~{dirflag},~{fpsr},~{flags}"() #8, !dbg !20518, !srcloc !20519
  store i32 1, i32* %retval, align 4, !dbg !20520
  br label %return, !dbg !20520

if.end8:                                          ; preds = %entry
  store i32 0, i32* %offset, align 4, !dbg !20521
  %24 = load i32, i32* %len, align 4, !dbg !20522
  %add9 = add i32 %24, 0, !dbg !20522
  store i32 %add9, i32* %len, align 4, !dbg !20522
  %25 = load %struct.sk_buff*, %struct.sk_buff** %skb, align 8, !dbg !20523
  call void @skb_checksum_none_assert(%struct.sk_buff* %25) #12, !dbg !20524
  %26 = load %struct.sk_buff*, %struct.sk_buff** %skb, align 8, !dbg !20525
  %27 = load i32, i32* %len, align 4, !dbg !20526
  %call10 = call i8* @skb_put(%struct.sk_buff* %26, i32 %27) #12, !dbg !20527
  %28 = load i32, i32* %first_frag.addr, align 4, !dbg !20528
  store i32 %28, i32* %frag, align 4, !dbg !20530
  br label %for.cond11, !dbg !20531

for.cond11:                                       ; preds = %for.inc36, %if.end8
  call void @llvm.dbg.declare(metadata i32* %frag_len, metadata !20532, metadata !DIExpression()), !dbg !20535
  %29 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !20536
  %rx_buffer_size = getelementptr inbounds %struct.macb, %struct.macb* %29, i32 0, i32 4, !dbg !20537
  %30 = load i64, i64* %rx_buffer_size, align 8, !dbg !20537
  %conv = trunc i64 %30 to i32, !dbg !20536
  store i32 %conv, i32* %frag_len, align 4, !dbg !20535
  %31 = load i32, i32* %offset, align 4, !dbg !20538
  %32 = load i32, i32* %frag_len, align 4, !dbg !20540
  %add12 = add i32 %31, %32, !dbg !20541
  %33 = load i32, i32* %len, align 4, !dbg !20542
  %cmp13 = icmp ugt i32 %add12, %33, !dbg !20543
  br i1 %cmp13, label %if.then15, label %if.end23, !dbg !20544

if.then15:                                        ; preds = %for.cond11
  %34 = load i32, i32* %frag, align 4, !dbg !20545
  %35 = load i32, i32* %last_frag.addr, align 4, !dbg !20545
  %cmp16 = icmp ne i32 %34, %35, !dbg !20545
  %lnot = xor i1 %cmp16, true, !dbg !20545
  %lnot18 = xor i1 %lnot, true, !dbg !20545
  %lnot.ext = zext i1 %lnot18 to i32, !dbg !20545
  %conv19 = sext i32 %lnot.ext to i64, !dbg !20545
  %tobool20 = icmp ne i64 %conv19, 0, !dbg !20545
  br i1 %tobool20, label %if.then21, label %if.end22, !dbg !20548

if.then21:                                        ; preds = %if.then15
  %36 = load %struct.sk_buff*, %struct.sk_buff** %skb, align 8, !dbg !20549
  call void @dev_kfree_skb_any(%struct.sk_buff* %36) #12, !dbg !20551
  store i32 -1, i32* %retval, align 4, !dbg !20552
  br label %return, !dbg !20552

if.end22:                                         ; preds = %if.then15
  %37 = load i32, i32* %len, align 4, !dbg !20553
  %38 = load i32, i32* %offset, align 4, !dbg !20554
  %sub = sub i32 %37, %38, !dbg !20555
  store i32 %sub, i32* %frag_len, align 4, !dbg !20556
  br label %if.end23, !dbg !20557

if.end23:                                         ; preds = %if.end22, %for.cond11
  %39 = load %struct.sk_buff*, %struct.sk_buff** %skb, align 8, !dbg !20558
  %40 = load i32, i32* %offset, align 4, !dbg !20559
  %41 = load %struct.macb_queue*, %struct.macb_queue** %queue.addr, align 8, !dbg !20560
  %42 = load i32, i32* %frag, align 4, !dbg !20561
  %call24 = call i8* @macb_rx_buffer(%struct.macb_queue* %41, i32 %42) #12, !dbg !20562
  %43 = load i32, i32* %frag_len, align 4, !dbg !20563
  call void @skb_copy_to_linear_data_offset(%struct.sk_buff* %39, i32 %40, i8* %call24, i32 %43) #12, !dbg !20564
  %44 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !20565
  %rx_buffer_size25 = getelementptr inbounds %struct.macb, %struct.macb* %44, i32 0, i32 4, !dbg !20566
  %45 = load i64, i64* %rx_buffer_size25, align 8, !dbg !20566
  %46 = load i32, i32* %offset, align 4, !dbg !20567
  %conv26 = zext i32 %46 to i64, !dbg !20567
  %add27 = add i64 %conv26, %45, !dbg !20567
  %conv28 = trunc i64 %add27 to i32, !dbg !20567
  store i32 %conv28, i32* %offset, align 4, !dbg !20567
  %47 = load %struct.macb_queue*, %struct.macb_queue** %queue.addr, align 8, !dbg !20568
  %48 = load i32, i32* %frag, align 4, !dbg !20569
  %call29 = call %struct.macb_dma_desc* @macb_rx_desc(%struct.macb_queue* %47, i32 %48) #12, !dbg !20570
  store %struct.macb_dma_desc* %call29, %struct.macb_dma_desc** %desc, align 8, !dbg !20571
  %49 = load %struct.macb_dma_desc*, %struct.macb_dma_desc** %desc, align 8, !dbg !20572
  %addr30 = getelementptr inbounds %struct.macb_dma_desc, %struct.macb_dma_desc* %49, i32 0, i32 0, !dbg !20573
  %50 = load i32, i32* %addr30, align 4, !dbg !20574
  %and31 = and i32 %50, -2, !dbg !20574
  store i32 %and31, i32* %addr30, align 4, !dbg !20574
  %51 = load i32, i32* %frag, align 4, !dbg !20575
  %52 = load i32, i32* %last_frag.addr, align 4, !dbg !20577
  %cmp32 = icmp eq i32 %51, %52, !dbg !20578
  br i1 %cmp32, label %if.then34, label %if.end35, !dbg !20579

if.then34:                                        ; preds = %if.end23
  br label %for.end38, !dbg !20580

if.end35:                                         ; preds = %if.end23
  br label %for.inc36, !dbg !20581

for.inc36:                                        ; preds = %if.end35
  %53 = load i32, i32* %frag, align 4, !dbg !20582
  %inc37 = add i32 %53, 1, !dbg !20582
  store i32 %inc37, i32* %frag, align 4, !dbg !20582
  br label %for.cond11, !dbg !20583, !llvm.loop !20584

for.end38:                                        ; preds = %if.then34
  call void asm sideeffect "sfence", "~{memory},~{dirflag},~{fpsr},~{flags}"() #8, !dbg !20587, !srcloc !20588
  %54 = load %struct.sk_buff*, %struct.sk_buff** %skb, align 8, !dbg !20589
  %call39 = call i8* @__skb_pull(%struct.sk_buff* %54, i32 0) #12, !dbg !20590
  %55 = load %struct.sk_buff*, %struct.sk_buff** %skb, align 8, !dbg !20591
  %56 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !20592
  %dev40 = getelementptr inbounds %struct.macb, %struct.macb* %56, i32 0, i32 17, !dbg !20593
  %57 = load %struct.net_device*, %struct.net_device** %dev40, align 8, !dbg !20593
  %call41 = call zeroext i16 @eth_type_trans(%struct.sk_buff* %55, %struct.net_device* %57) #12, !dbg !20594
  %58 = load %struct.sk_buff*, %struct.sk_buff** %skb, align 8, !dbg !20595
  %protocol = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %58, i32 0, i32 29, !dbg !20596
  store i16 %call41, i16* %protocol, align 8, !dbg !20597
  %59 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !20598
  %dev42 = getelementptr inbounds %struct.macb, %struct.macb* %59, i32 0, i32 17, !dbg !20599
  %60 = load %struct.net_device*, %struct.net_device** %dev42, align 8, !dbg !20599
  %stats43 = getelementptr inbounds %struct.net_device, %struct.net_device* %60, i32 0, i32 24, !dbg !20600
  %rx_packets = getelementptr inbounds %struct.net_device_stats, %struct.net_device_stats* %stats43, i32 0, i32 0, !dbg !20601
  %61 = load i64, i64* %rx_packets, align 8, !dbg !20602
  %inc44 = add i64 %61, 1, !dbg !20602
  store i64 %inc44, i64* %rx_packets, align 8, !dbg !20602
  %62 = load %struct.sk_buff*, %struct.sk_buff** %skb, align 8, !dbg !20603
  %len45 = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %62, i32 0, i32 5, !dbg !20604
  %63 = load i32, i32* %len45, align 8, !dbg !20604
  %conv46 = zext i32 %63 to i64, !dbg !20603
  %64 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !20605
  %dev47 = getelementptr inbounds %struct.macb, %struct.macb* %64, i32 0, i32 17, !dbg !20606
  %65 = load %struct.net_device*, %struct.net_device** %dev47, align 8, !dbg !20606
  %stats48 = getelementptr inbounds %struct.net_device, %struct.net_device* %65, i32 0, i32 24, !dbg !20607
  %rx_bytes = getelementptr inbounds %struct.net_device_stats, %struct.net_device_stats* %stats48, i32 0, i32 2, !dbg !20608
  %66 = load i64, i64* %rx_bytes, align 8, !dbg !20609
  %add49 = add i64 %66, %conv46, !dbg !20609
  store i64 %add49, i64* %rx_bytes, align 8, !dbg !20609
  store i32 0, i32* %tmp50, align 4, !dbg !20610
  %67 = load i32, i32* %tmp50, align 4, !dbg !20613
  %68 = load %struct.napi_struct*, %struct.napi_struct** %napi.addr, align 8, !dbg !20614
  %69 = load %struct.sk_buff*, %struct.sk_buff** %skb, align 8, !dbg !20615
  %call51 = call i32 @napi_gro_receive(%struct.napi_struct* %68, %struct.sk_buff* %69) #12, !dbg !20616
  store i32 0, i32* %retval, align 4, !dbg !20617
  br label %return, !dbg !20617

return:                                           ; preds = %for.end38, %if.then21, %for.end
  %70 = load i32, i32* %retval, align 4, !dbg !20618
  ret i32 %70, !dbg !20618
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @skb_copy_to_linear_data_offset(%struct.sk_buff* %skb, i32 %offset, i8* %from, i32 %len) #2 !dbg !20619 {
entry:
  %skb.addr = alloca %struct.sk_buff*, align 8
  %offset.addr = alloca i32, align 4
  %from.addr = alloca i8*, align 8
  %len.addr = alloca i32, align 4
  store %struct.sk_buff* %skb, %struct.sk_buff** %skb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.sk_buff** %skb.addr, metadata !20622, metadata !DIExpression()), !dbg !20623
  store i32 %offset, i32* %offset.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %offset.addr, metadata !20624, metadata !DIExpression()), !dbg !20625
  store i8* %from, i8** %from.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %from.addr, metadata !20626, metadata !DIExpression()), !dbg !20627
  store i32 %len, i32* %len.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %len.addr, metadata !20628, metadata !DIExpression()), !dbg !20629
  %0 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !20630
  %data = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %0, i32 0, i32 37, !dbg !20631
  %1 = load i8*, i8** %data, align 8, !dbg !20631
  %2 = load i32, i32* %offset.addr, align 4, !dbg !20632
  %idx.ext = sext i32 %2 to i64, !dbg !20633
  %add.ptr = getelementptr i8, i8* %1, i64 %idx.ext, !dbg !20633
  %3 = load i8*, i8** %from.addr, align 8, !dbg !20634
  %4 = load i32, i32* %len.addr, align 4, !dbg !20635
  %conv = zext i32 %4 to i64, !dbg !20635
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %add.ptr, i8* align 1 %3, i64 %conv, i1 false), !dbg !20636
  ret void, !dbg !20637
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @macb_rx_buffer(%struct.macb_queue* %queue, i32 %index) #2 !dbg !20638 {
entry:
  %queue.addr = alloca %struct.macb_queue*, align 8
  %index.addr = alloca i32, align 4
  store %struct.macb_queue* %queue, %struct.macb_queue** %queue.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.macb_queue** %queue.addr, metadata !20641, metadata !DIExpression()), !dbg !20642
  store i32 %index, i32* %index.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %index.addr, metadata !20643, metadata !DIExpression()), !dbg !20644
  %0 = load %struct.macb_queue*, %struct.macb_queue** %queue.addr, align 8, !dbg !20645
  %rx_buffers = getelementptr inbounds %struct.macb_queue, %struct.macb_queue* %0, i32 0, i32 23, !dbg !20646
  %1 = load i8*, i8** %rx_buffers, align 8, !dbg !20646
  %2 = load %struct.macb_queue*, %struct.macb_queue** %queue.addr, align 8, !dbg !20647
  %bp = getelementptr inbounds %struct.macb_queue, %struct.macb_queue* %2, i32 0, i32 0, !dbg !20648
  %3 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !20648
  %rx_buffer_size = getelementptr inbounds %struct.macb, %struct.macb* %3, i32 0, i32 4, !dbg !20649
  %4 = load i64, i64* %rx_buffer_size, align 8, !dbg !20649
  %5 = load %struct.macb_queue*, %struct.macb_queue** %queue.addr, align 8, !dbg !20650
  %bp1 = getelementptr inbounds %struct.macb_queue, %struct.macb_queue* %5, i32 0, i32 0, !dbg !20651
  %6 = load %struct.macb*, %struct.macb** %bp1, align 8, !dbg !20651
  %7 = load i32, i32* %index.addr, align 4, !dbg !20652
  %call = call i32 @macb_rx_ring_wrap(%struct.macb* %6, i32 %7) #12, !dbg !20653
  %conv = zext i32 %call to i64, !dbg !20653
  %mul = mul i64 %4, %conv, !dbg !20654
  %add.ptr = getelementptr i8, i8* %1, i64 %mul, !dbg !20655
  ret i8* %add.ptr, !dbg !20656
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @__skb_pull(%struct.sk_buff* %skb, i32 %len) #2 !dbg !20657 {
entry:
  %skb.addr = alloca %struct.sk_buff*, align 8
  %len.addr = alloca i32, align 4
  store %struct.sk_buff* %skb, %struct.sk_buff** %skb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.sk_buff** %skb.addr, metadata !20658, metadata !DIExpression()), !dbg !20659
  store i32 %len, i32* %len.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %len.addr, metadata !20660, metadata !DIExpression()), !dbg !20661
  %0 = load i32, i32* %len.addr, align 4, !dbg !20662
  %1 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !20663
  %len1 = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %1, i32 0, i32 5, !dbg !20664
  %2 = load i32, i32* %len1, align 8, !dbg !20665
  %sub = sub i32 %2, %0, !dbg !20665
  store i32 %sub, i32* %len1, align 8, !dbg !20665
  br label %do.body, !dbg !20666

do.body:                                          ; preds = %entry
  %3 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !20667
  %len2 = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %3, i32 0, i32 5, !dbg !20667
  %4 = load i32, i32* %len2, align 8, !dbg !20667
  %5 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !20667
  %data_len = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %5, i32 0, i32 6, !dbg !20667
  %6 = load i32, i32* %data_len, align 4, !dbg !20667
  %cmp = icmp ult i32 %4, %6, !dbg !20667
  %lnot = xor i1 %cmp, true, !dbg !20667
  %lnot3 = xor i1 %lnot, true, !dbg !20667
  %lnot.ext = zext i1 %lnot3 to i32, !dbg !20667
  %conv = sext i32 %lnot.ext to i64, !dbg !20667
  %tobool = icmp ne i64 %conv, 0, !dbg !20667
  br i1 %tobool, label %if.then, label %if.end, !dbg !20670

if.then:                                          ; preds = %do.body
  br label %do.body4, !dbg !20667

do.body4:                                         ; preds = %if.then
  br label %do.body5, !dbg !20671

do.body5:                                         ; preds = %do.body4
  br label %do.end, !dbg !20673

do.end:                                           ; preds = %do.body5
  br label %do.body6, !dbg !20671

do.body6:                                         ; preds = %do.end
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.41, i64 0, i64 0), i32 2297, i32 0, i64 12) #8, !dbg !20675, !srcloc !20677
  br label %do.end7, !dbg !20675

do.end7:                                          ; preds = %do.body6
  br label %do.body8, !dbg !20671

do.body8:                                         ; preds = %do.end7
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.unreachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 271) #8, !dbg !20678, !srcloc !20681
  unreachable, !dbg !20682

do.end9:                                          ; No predecessors!
  br label %do.end10, !dbg !20671

do.end10:                                         ; preds = %do.end9
  br label %if.end, !dbg !20671

if.end:                                           ; preds = %do.end10, %do.body
  br label %do.end11, !dbg !20670

do.end11:                                         ; preds = %if.end
  %7 = load i32, i32* %len.addr, align 4, !dbg !20683
  %8 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !20684
  %data = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %8, i32 0, i32 37, !dbg !20685
  %9 = load i8*, i8** %data, align 8, !dbg !20686
  %idx.ext = zext i32 %7 to i64, !dbg !20686
  %add.ptr = getelementptr i8, i8* %9, i64 %idx.ext, !dbg !20686
  store i8* %add.ptr, i8** %data, align 8, !dbg !20686
  ret i8* %add.ptr, !dbg !20687
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @gem_mdc_clk_div(%struct.macb* %bp) #2 !dbg !20688 {
entry:
  %bp.addr = alloca %struct.macb*, align 8
  %config = alloca i32, align 4
  %pclk_hz = alloca i64, align 8
  store %struct.macb* %bp, %struct.macb** %bp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.macb** %bp.addr, metadata !20689, metadata !DIExpression()), !dbg !20690
  call void @llvm.dbg.declare(metadata i32* %config, metadata !20691, metadata !DIExpression()), !dbg !20692
  call void @llvm.dbg.declare(metadata i64* %pclk_hz, metadata !20693, metadata !DIExpression()), !dbg !20694
  %0 = load %struct.macb*, %struct.macb** %bp.addr, align 8, !dbg !20695
  %pclk = getelementptr inbounds %struct.macb, %struct.macb* %0, i32 0, i32 12, !dbg !20696
  %1 = load %struct.clk*, %struct.clk** %pclk, align 8, !dbg !20696
  %call = call i64 @clk_get_rate(%struct.clk* %1) #12, !dbg !20697
  store i64 %call, i64* %pclk_hz, align 8, !dbg !20694
  %2 = load i64, i64* %pclk_hz, align 8, !dbg !20698
  %cmp = icmp ule i64 %2, 20000000, !dbg !20700
  br i1 %cmp, label %if.then, label %if.else, !dbg !20701

if.then:                                          ; preds = %entry
  store i32 0, i32* %config, align 4, !dbg !20702
  br label %if.end16, !dbg !20703

if.else:                                          ; preds = %entry
  %3 = load i64, i64* %pclk_hz, align 8, !dbg !20704
  %cmp1 = icmp ule i64 %3, 40000000, !dbg !20706
  br i1 %cmp1, label %if.then2, label %if.else3, !dbg !20707

if.then2:                                         ; preds = %if.else
  store i32 262144, i32* %config, align 4, !dbg !20708
  br label %if.end15, !dbg !20709

if.else3:                                         ; preds = %if.else
  %4 = load i64, i64* %pclk_hz, align 8, !dbg !20710
  %cmp4 = icmp ule i64 %4, 80000000, !dbg !20712
  br i1 %cmp4, label %if.then5, label %if.else6, !dbg !20713

if.then5:                                         ; preds = %if.else3
  store i32 524288, i32* %config, align 4, !dbg !20714
  br label %if.end14, !dbg !20715

if.else6:                                         ; preds = %if.else3
  %5 = load i64, i64* %pclk_hz, align 8, !dbg !20716
  %cmp7 = icmp ule i64 %5, 120000000, !dbg !20718
  br i1 %cmp7, label %if.then8, label %if.else9, !dbg !20719

if.then8:                                         ; preds = %if.else6
  store i32 786432, i32* %config, align 4, !dbg !20720
  br label %if.end13, !dbg !20721

if.else9:                                         ; preds = %if.else6
  %6 = load i64, i64* %pclk_hz, align 8, !dbg !20722
  %cmp10 = icmp ule i64 %6, 160000000, !dbg !20724
  br i1 %cmp10, label %if.then11, label %if.else12, !dbg !20725

if.then11:                                        ; preds = %if.else9
  store i32 1048576, i32* %config, align 4, !dbg !20726
  br label %if.end, !dbg !20727

if.else12:                                        ; preds = %if.else9
  store i32 1310720, i32* %config, align 4, !dbg !20728
  br label %if.end

if.end:                                           ; preds = %if.else12, %if.then11
  br label %if.end13

if.end13:                                         ; preds = %if.end, %if.then8
  br label %if.end14

if.end14:                                         ; preds = %if.end13, %if.then5
  br label %if.end15

if.end15:                                         ; preds = %if.end14, %if.then2
  br label %if.end16

if.end16:                                         ; preds = %if.end15, %if.then
  %7 = load i32, i32* %config, align 4, !dbg !20729
  ret i32 %7, !dbg !20730
}

; Function Attrs: noredzone
declare dso_local i64 @clk_get_rate(%struct.clk*) #1

; Function Attrs: noredzone
declare dso_local void @__pm_runtime_use_autosuspend(%struct.device*, i1 zeroext) #1

; Function Attrs: noredzone
declare dso_local i32 @__pm_runtime_set_status(%struct.device*, i32) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @__writel(i32 %val, i8* %addr) #2 !dbg !20731 {
entry:
  %val.addr = alloca i32, align 4
  %addr.addr = alloca i8*, align 8
  store i32 %val, i32* %val.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %val.addr, metadata !20736, metadata !DIExpression()), !dbg !20737
  store i8* %addr, i8** %addr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %addr.addr, metadata !20738, metadata !DIExpression()), !dbg !20737
  %0 = load i32, i32* %val.addr, align 4, !dbg !20737
  %1 = load i8*, i8** %addr.addr, align 8, !dbg !20737
  %2 = bitcast i8* %1 to i32*, !dbg !20737
  call void asm sideeffect "movl $0,$1", "r,*m,~{dirflag},~{fpsr},~{flags}"(i32 %0, i32* %2) #8, !dbg !20737, !srcloc !20739
  ret void, !dbg !20737
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @__readl(i8* %addr) #2 !dbg !20740 {
entry:
  %addr.addr = alloca i8*, align 8
  %ret = alloca i32, align 4
  store i8* %addr, i8** %addr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %addr.addr, metadata !20743, metadata !DIExpression()), !dbg !20744
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !20745, metadata !DIExpression()), !dbg !20744
  %0 = load i8*, i8** %addr.addr, align 8, !dbg !20744
  %1 = bitcast i8* %0 to i32*, !dbg !20744
  %2 = call i32 asm sideeffect "movl $1,$0", "=r,*m,~{dirflag},~{fpsr},~{flags}"(i32* %1) #8, !dbg !20744, !srcloc !20746
  store i32 %2, i32* %ret, align 4, !dbg !20744
  %3 = load i32, i32* %ret, align 4, !dbg !20744
  ret i32 %3, !dbg !20744
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @hw_is_gem(i8* %addr, i1 zeroext %native_io) #2 !dbg !20747 {
entry:
  %addr.addr = alloca i8*, align 8
  %native_io.addr = alloca i8, align 1
  %id = alloca i32, align 4
  store i8* %addr, i8** %addr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %addr.addr, metadata !20750, metadata !DIExpression()), !dbg !20751
  %frombool = zext i1 %native_io to i8
  store i8 %frombool, i8* %native_io.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %native_io.addr, metadata !20752, metadata !DIExpression()), !dbg !20753
  call void @llvm.dbg.declare(metadata i32* %id, metadata !20754, metadata !DIExpression()), !dbg !20755
  %0 = load i8, i8* %native_io.addr, align 1, !dbg !20756
  %tobool = trunc i8 %0 to i1, !dbg !20756
  br i1 %tobool, label %if.then, label %if.else, !dbg !20758

if.then:                                          ; preds = %entry
  %1 = load i8*, i8** %addr.addr, align 8, !dbg !20759
  %add.ptr = getelementptr i8, i8* %1, i64 252, !dbg !20760
  %call = call i32 @__readl(i8* %add.ptr) #12, !dbg !20761
  store i32 %call, i32* %id, align 4, !dbg !20762
  br label %if.end, !dbg !20763

if.else:                                          ; preds = %entry
  %2 = load i8*, i8** %addr.addr, align 8, !dbg !20764
  %add.ptr1 = getelementptr i8, i8* %2, i64 252, !dbg !20764
  %call2 = call i32 @__readl(i8* %add.ptr1) #12, !dbg !20764
  store i32 %call2, i32* %id, align 4, !dbg !20765
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %3 = load i32, i32* %id, align 4, !dbg !20766
  %shr = lshr i32 %3, 16, !dbg !20766
  %and = and i32 %shr, 4095, !dbg !20766
  %cmp = icmp uge i32 %and, 2, !dbg !20767
  ret i1 %cmp, !dbg !20768
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @gem_has_ptp(%struct.macb* %bp) #2 !dbg !20769 {
entry:
  %bp.addr = alloca %struct.macb*, align 8
  store %struct.macb* %bp, %struct.macb** %bp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.macb** %bp.addr, metadata !20770, metadata !DIExpression()), !dbg !20771
  %0 = load %struct.macb*, %struct.macb** %bp.addr, align 8, !dbg !20772
  %caps = getelementptr inbounds %struct.macb, %struct.macb* %0, i32 0, i32 23, !dbg !20773
  %1 = load i32, i32* %caps, align 8, !dbg !20773
  %and = and i32 %1, 64, !dbg !20774
  %tobool = icmp ne i32 %and, 0, !dbg !20775
  %lnot = xor i1 %tobool, true, !dbg !20775
  %lnot1 = xor i1 %lnot, true, !dbg !20776
  ret i1 %lnot1, !dbg !20777
}

; Function Attrs: noredzone
declare dso_local void @gem_ptp_init(%struct.net_device*) #1

; Function Attrs: noredzone
declare dso_local void @gem_ptp_remove(%struct.net_device*) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @gem_get_ptp_max_adj() #2 !dbg !20778 {
entry:
  ret i32 64000000, !dbg !20779
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @gem_get_tsu_rate(%struct.macb* %bp) #2 !dbg !20780 {
entry:
  %retval = alloca i32, align 4
  %bp.addr = alloca %struct.macb*, align 8
  %tsu_clk = alloca %struct.clk*, align 8
  %tsu_rate = alloca i32, align 4
  store %struct.macb* %bp, %struct.macb** %bp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.macb** %bp.addr, metadata !20781, metadata !DIExpression()), !dbg !20782
  call void @llvm.dbg.declare(metadata %struct.clk** %tsu_clk, metadata !20783, metadata !DIExpression()), !dbg !20784
  call void @llvm.dbg.declare(metadata i32* %tsu_rate, metadata !20785, metadata !DIExpression()), !dbg !20786
  %0 = load %struct.macb*, %struct.macb** %bp.addr, align 8, !dbg !20787
  %pdev = getelementptr inbounds %struct.macb, %struct.macb* %0, i32 0, i32 11, !dbg !20788
  %1 = load %struct.platform_device*, %struct.platform_device** %pdev, align 8, !dbg !20788
  %dev = getelementptr inbounds %struct.platform_device, %struct.platform_device* %1, i32 0, i32 3, !dbg !20789
  %call = call %struct.clk* @devm_clk_get(%struct.device* %dev, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.12, i64 0, i64 0)) #12, !dbg !20790
  store %struct.clk* %call, %struct.clk** %tsu_clk, align 8, !dbg !20791
  %2 = load %struct.clk*, %struct.clk** %tsu_clk, align 8, !dbg !20792
  %3 = bitcast %struct.clk* %2 to i8*, !dbg !20792
  %call1 = call zeroext i1 @IS_ERR(i8* %3) #12, !dbg !20794
  br i1 %call1, label %if.else, label %if.then, !dbg !20795

if.then:                                          ; preds = %entry
  %4 = load %struct.clk*, %struct.clk** %tsu_clk, align 8, !dbg !20796
  %call2 = call i64 @clk_get_rate(%struct.clk* %4) #12, !dbg !20797
  %conv = trunc i64 %call2 to i32, !dbg !20797
  store i32 %conv, i32* %tsu_rate, align 4, !dbg !20798
  br label %if.end9, !dbg !20799

if.else:                                          ; preds = %entry
  %5 = load %struct.macb*, %struct.macb** %bp.addr, align 8, !dbg !20800
  %pclk = getelementptr inbounds %struct.macb, %struct.macb* %5, i32 0, i32 12, !dbg !20802
  %6 = load %struct.clk*, %struct.clk** %pclk, align 8, !dbg !20802
  %7 = bitcast %struct.clk* %6 to i8*, !dbg !20800
  %call3 = call zeroext i1 @IS_ERR(i8* %7) #12, !dbg !20803
  br i1 %call3, label %if.else8, label %if.then4, !dbg !20804

if.then4:                                         ; preds = %if.else
  %8 = load %struct.macb*, %struct.macb** %bp.addr, align 8, !dbg !20805
  %pclk5 = getelementptr inbounds %struct.macb, %struct.macb* %8, i32 0, i32 12, !dbg !20807
  %9 = load %struct.clk*, %struct.clk** %pclk5, align 8, !dbg !20807
  store %struct.clk* %9, %struct.clk** %tsu_clk, align 8, !dbg !20808
  %10 = load %struct.clk*, %struct.clk** %tsu_clk, align 8, !dbg !20809
  %call6 = call i64 @clk_get_rate(%struct.clk* %10) #12, !dbg !20810
  %conv7 = trunc i64 %call6 to i32, !dbg !20810
  store i32 %conv7, i32* %tsu_rate, align 4, !dbg !20811
  br label %if.end, !dbg !20812

if.else8:                                         ; preds = %if.else
  store i32 -524, i32* %retval, align 4, !dbg !20813
  br label %return, !dbg !20813

if.end:                                           ; preds = %if.then4
  br label %if.end9

if.end9:                                          ; preds = %if.end, %if.then
  %11 = load i32, i32* %tsu_rate, align 4, !dbg !20814
  store i32 %11, i32* %retval, align 4, !dbg !20815
  br label %return, !dbg !20815

return:                                           ; preds = %if.end9, %if.else8
  %12 = load i32, i32* %retval, align 4, !dbg !20816
  ret i32 %12, !dbg !20816
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @gem_get_ts_info(%struct.net_device* %dev, %struct.ethtool_ts_info* %info) #2 !dbg !20817 {
entry:
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.net_device*, align 8
  %info.addr = alloca %struct.ethtool_ts_info*, align 8
  %bp = alloca %struct.macb*, align 8
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !20818, metadata !DIExpression()), !dbg !20819
  store %struct.ethtool_ts_info* %info, %struct.ethtool_ts_info** %info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ethtool_ts_info** %info.addr, metadata !20820, metadata !DIExpression()), !dbg !20821
  call void @llvm.dbg.declare(metadata %struct.macb** %bp, metadata !20822, metadata !DIExpression()), !dbg !20823
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !20824
  %call = call i8* @netdev_priv(%struct.net_device* %0) #12, !dbg !20825
  %1 = bitcast i8* %call to %struct.macb*, !dbg !20825
  store %struct.macb* %1, %struct.macb** %bp, align 8, !dbg !20823
  %2 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !20826
  %hw_dma_cap = getelementptr inbounds %struct.macb, %struct.macb* %2, i32 0, i32 35, !dbg !20828
  %3 = load i8, i8* %hw_dma_cap, align 8, !dbg !20828
  %conv = zext i8 %3 to i32, !dbg !20826
  %and = and i32 %conv, 2, !dbg !20829
  %cmp = icmp eq i32 %and, 0, !dbg !20830
  br i1 %cmp, label %if.then, label %if.end, !dbg !20831

if.then:                                          ; preds = %entry
  %4 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !20832
  %5 = load %struct.ethtool_ts_info*, %struct.ethtool_ts_info** %info.addr, align 8, !dbg !20834
  %call2 = call i32 @ethtool_op_get_ts_info(%struct.net_device* %4, %struct.ethtool_ts_info* %5) #12, !dbg !20835
  store i32 0, i32* %retval, align 4, !dbg !20836
  br label %return, !dbg !20836

if.end:                                           ; preds = %entry
  %6 = load %struct.ethtool_ts_info*, %struct.ethtool_ts_info** %info.addr, align 8, !dbg !20837
  %so_timestamping = getelementptr inbounds %struct.ethtool_ts_info, %struct.ethtool_ts_info* %6, i32 0, i32 1, !dbg !20838
  store i32 95, i32* %so_timestamping, align 4, !dbg !20839
  %7 = load %struct.ethtool_ts_info*, %struct.ethtool_ts_info** %info.addr, align 8, !dbg !20840
  %tx_types = getelementptr inbounds %struct.ethtool_ts_info, %struct.ethtool_ts_info* %7, i32 0, i32 3, !dbg !20841
  store i32 7, i32* %tx_types, align 4, !dbg !20842
  %8 = load %struct.ethtool_ts_info*, %struct.ethtool_ts_info** %info.addr, align 8, !dbg !20843
  %rx_filters = getelementptr inbounds %struct.ethtool_ts_info, %struct.ethtool_ts_info* %8, i32 0, i32 5, !dbg !20844
  store i32 3, i32* %rx_filters, align 4, !dbg !20845
  %9 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !20846
  %ptp_clock = getelementptr inbounds %struct.macb, %struct.macb* %9, i32 0, i32 38, !dbg !20847
  %10 = load %struct.ptp_clock*, %struct.ptp_clock** %ptp_clock, align 8, !dbg !20847
  %tobool = icmp ne %struct.ptp_clock* %10, null, !dbg !20846
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !20846

cond.true:                                        ; preds = %if.end
  %11 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !20848
  %ptp_clock3 = getelementptr inbounds %struct.macb, %struct.macb* %11, i32 0, i32 38, !dbg !20849
  %12 = load %struct.ptp_clock*, %struct.ptp_clock** %ptp_clock3, align 8, !dbg !20849
  %call4 = call i32 @ptp_clock_index(%struct.ptp_clock* %12) #12, !dbg !20850
  br label %cond.end, !dbg !20846

cond.false:                                       ; preds = %if.end
  br label %cond.end, !dbg !20846

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call4, %cond.true ], [ -1, %cond.false ], !dbg !20846
  %13 = load %struct.ethtool_ts_info*, %struct.ethtool_ts_info** %info.addr, align 8, !dbg !20851
  %phc_index = getelementptr inbounds %struct.ethtool_ts_info, %struct.ethtool_ts_info* %13, i32 0, i32 2, !dbg !20852
  store i32 %cond, i32* %phc_index, align 4, !dbg !20853
  store i32 0, i32* %retval, align 4, !dbg !20854
  br label %return, !dbg !20854

return:                                           ; preds = %cond.end, %if.then
  %14 = load i32, i32* %retval, align 4, !dbg !20855
  ret i32 %14, !dbg !20855
}

; Function Attrs: noredzone
declare dso_local i32 @gem_get_hwtst(%struct.net_device*, %struct.ifreq*) #1

; Function Attrs: noredzone
declare dso_local i32 @gem_set_hwtst(%struct.net_device*, %struct.ifreq*, i32) #1

; Function Attrs: noredzone
declare dso_local i32 @ptp_clock_index(%struct.ptp_clock*) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @dev_set_drvdata(%struct.device* %dev, i8* %data) #2 !dbg !20856 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %data.addr = alloca i8*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !20859, metadata !DIExpression()), !dbg !20860
  store i8* %data, i8** %data.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %data.addr, metadata !20861, metadata !DIExpression()), !dbg !20862
  %0 = load i8*, i8** %data.addr, align 8, !dbg !20863
  %1 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !20864
  %driver_data = getelementptr inbounds %struct.device, %struct.device* %1, i32 0, i32 8, !dbg !20865
  store i8* %0, i8** %driver_data, align 8, !dbg !20866
  ret void, !dbg !20867
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @is_valid_ether_addr(i8* %addr) #2 !dbg !20868 {
entry:
  %addr.addr = alloca i8*, align 8
  store i8* %addr, i8** %addr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %addr.addr, metadata !20871, metadata !DIExpression()), !dbg !20872
  %0 = load i8*, i8** %addr.addr, align 8, !dbg !20873
  %call = call zeroext i1 @is_multicast_ether_addr(i8* %0) #12, !dbg !20874
  br i1 %call, label %land.end, label %land.rhs, !dbg !20875

land.rhs:                                         ; preds = %entry
  %1 = load i8*, i8** %addr.addr, align 8, !dbg !20876
  %call1 = call zeroext i1 @is_zero_ether_addr(i8* %1) #12, !dbg !20877
  %lnot = xor i1 %call1, true, !dbg !20878
  br label %land.end

land.end:                                         ; preds = %land.rhs, %entry
  %2 = phi i1 [ false, %entry ], [ %lnot, %land.rhs ], !dbg !20879
  ret i1 %2, !dbg !20880
}

; Function Attrs: cold noredzone
declare dso_local void @_dev_info(%struct.device*, i8*, ...) #5

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @eth_hw_addr_random(%struct.net_device* %dev) #2 !dbg !20881 {
entry:
  %dev.addr = alloca %struct.net_device*, align 8
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !20882, metadata !DIExpression()), !dbg !20883
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !20884
  %addr_assign_type = getelementptr inbounds %struct.net_device, %struct.net_device* %0, i32 0, i32 54, !dbg !20885
  store i8 1, i8* %addr_assign_type, align 2, !dbg !20886
  %1 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !20887
  %dev_addr = getelementptr inbounds %struct.net_device, %struct.net_device* %1, i32 0, i32 74, !dbg !20888
  %2 = load i8*, i8** %dev_addr, align 8, !dbg !20888
  call void @eth_random_addr(i8* %2) #12, !dbg !20889
  ret void, !dbg !20890
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @is_multicast_ether_addr(i8* %addr) #2 !dbg !20891 {
entry:
  %addr.addr = alloca i8*, align 8
  %a = alloca i32, align 4
  store i8* %addr, i8** %addr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %addr.addr, metadata !20892, metadata !DIExpression()), !dbg !20893
  call void @llvm.dbg.declare(metadata i32* %a, metadata !20894, metadata !DIExpression()), !dbg !20895
  %0 = load i8*, i8** %addr.addr, align 8, !dbg !20896
  %1 = bitcast i8* %0 to i32*, !dbg !20897
  %2 = load i32, i32* %1, align 4, !dbg !20897
  store i32 %2, i32* %a, align 4, !dbg !20895
  %3 = load i32, i32* %a, align 4, !dbg !20898
  %and = and i32 1, %3, !dbg !20899
  %tobool = icmp ne i32 %and, 0, !dbg !20900
  ret i1 %tobool, !dbg !20901
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @is_zero_ether_addr(i8* %addr) #2 !dbg !20902 {
entry:
  %addr.addr = alloca i8*, align 8
  store i8* %addr, i8** %addr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %addr.addr, metadata !20903, metadata !DIExpression()), !dbg !20904
  %0 = load i8*, i8** %addr.addr, align 8, !dbg !20905
  %1 = bitcast i8* %0 to i32*, !dbg !20906
  %2 = load i32, i32* %1, align 4, !dbg !20906
  %3 = load i8*, i8** %addr.addr, align 8, !dbg !20907
  %add.ptr = getelementptr i8, i8* %3, i64 4, !dbg !20908
  %4 = bitcast i8* %add.ptr to i16*, !dbg !20909
  %5 = load i16, i16* %4, align 2, !dbg !20909
  %conv = zext i16 %5 to i32, !dbg !20910
  %or = or i32 %2, %conv, !dbg !20911
  %cmp = icmp eq i32 %or, 0, !dbg !20912
  ret i1 %cmp, !dbg !20913
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @eth_random_addr(i8* %addr) #2 !dbg !20914 {
entry:
  %addr.addr = alloca i8*, align 8
  store i8* %addr, i8** %addr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %addr.addr, metadata !20917, metadata !DIExpression()), !dbg !20918
  %0 = load i8*, i8** %addr.addr, align 8, !dbg !20919
  call void @get_random_bytes(i8* %0, i32 6) #12, !dbg !20920
  %1 = load i8*, i8** %addr.addr, align 8, !dbg !20921
  %arrayidx = getelementptr i8, i8* %1, i64 0, !dbg !20921
  %2 = load i8, i8* %arrayidx, align 1, !dbg !20922
  %conv = zext i8 %2 to i32, !dbg !20922
  %and = and i32 %conv, 254, !dbg !20922
  %conv1 = trunc i32 %and to i8, !dbg !20922
  store i8 %conv1, i8* %arrayidx, align 1, !dbg !20922
  %3 = load i8*, i8** %addr.addr, align 8, !dbg !20923
  %arrayidx2 = getelementptr i8, i8* %3, i64 0, !dbg !20923
  %4 = load i8, i8* %arrayidx2, align 1, !dbg !20924
  %conv3 = zext i8 %4 to i32, !dbg !20924
  %or = or i32 %conv3, 2, !dbg !20924
  %conv4 = trunc i32 %or to i8, !dbg !20924
  store i8 %conv4, i8* %arrayidx2, align 1, !dbg !20924
  ret void, !dbg !20925
}

; Function Attrs: noredzone
declare dso_local void @get_random_bytes(i8*, i32) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.mii_bus* @mdiobus_alloc() #2 !dbg !20926 {
entry:
  %call = call %struct.mii_bus* @mdiobus_alloc_size(i64 0) #12, !dbg !20929
  ret %struct.mii_bus* %call, !dbg !20930
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @macb_mdio_read(%struct.mii_bus* %bus, i32 %mii_id, i32 %regnum) #2 !dbg !20931 {
entry:
  %bus.addr = alloca %struct.mii_bus*, align 8
  %mii_id.addr = alloca i32, align 4
  %regnum.addr = alloca i32, align 4
  %bp = alloca %struct.macb*, align 8
  %status = alloca i32, align 4
  store %struct.mii_bus* %bus, %struct.mii_bus** %bus.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mii_bus** %bus.addr, metadata !20932, metadata !DIExpression()), !dbg !20933
  store i32 %mii_id, i32* %mii_id.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %mii_id.addr, metadata !20934, metadata !DIExpression()), !dbg !20935
  store i32 %regnum, i32* %regnum.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %regnum.addr, metadata !20936, metadata !DIExpression()), !dbg !20937
  call void @llvm.dbg.declare(metadata %struct.macb** %bp, metadata !20938, metadata !DIExpression()), !dbg !20939
  %0 = load %struct.mii_bus*, %struct.mii_bus** %bus.addr, align 8, !dbg !20940
  %priv = getelementptr inbounds %struct.mii_bus, %struct.mii_bus* %0, i32 0, i32 3, !dbg !20941
  %1 = load i8*, i8** %priv, align 8, !dbg !20941
  %2 = bitcast i8* %1 to %struct.macb*, !dbg !20940
  store %struct.macb* %2, %struct.macb** %bp, align 8, !dbg !20939
  call void @llvm.dbg.declare(metadata i32* %status, metadata !20942, metadata !DIExpression()), !dbg !20943
  %3 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !20944
  %pdev = getelementptr inbounds %struct.macb, %struct.macb* %3, i32 0, i32 11, !dbg !20945
  %4 = load %struct.platform_device*, %struct.platform_device** %pdev, align 8, !dbg !20945
  %dev = getelementptr inbounds %struct.platform_device, %struct.platform_device* %4, i32 0, i32 3, !dbg !20946
  %call = call i32 @pm_runtime_get_sync(%struct.device* %dev) #12, !dbg !20947
  store i32 %call, i32* %status, align 4, !dbg !20948
  %5 = load i32, i32* %status, align 4, !dbg !20949
  %cmp = icmp slt i32 %5, 0, !dbg !20951
  br i1 %cmp, label %if.then, label %if.end, !dbg !20952

if.then:                                          ; preds = %entry
  %6 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !20953
  %pdev1 = getelementptr inbounds %struct.macb, %struct.macb* %6, i32 0, i32 11, !dbg !20955
  %7 = load %struct.platform_device*, %struct.platform_device** %pdev1, align 8, !dbg !20955
  %dev2 = getelementptr inbounds %struct.platform_device, %struct.platform_device* %7, i32 0, i32 3, !dbg !20956
  call void @pm_runtime_put_noidle(%struct.device* %dev2) #12, !dbg !20957
  br label %mdio_pm_exit, !dbg !20958

if.end:                                           ; preds = %entry
  %8 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !20959
  %call3 = call i32 @macb_mdio_wait_for_idle(%struct.macb* %8) #12, !dbg !20960
  store i32 %call3, i32* %status, align 4, !dbg !20961
  %9 = load i32, i32* %status, align 4, !dbg !20962
  %cmp4 = icmp slt i32 %9, 0, !dbg !20964
  br i1 %cmp4, label %if.then5, label %if.end6, !dbg !20965

if.then5:                                         ; preds = %if.end
  br label %mdio_read_exit, !dbg !20966

if.end6:                                          ; preds = %if.end
  %10 = load i32, i32* %regnum.addr, align 4, !dbg !20967
  %and = and i32 %10, 1073741824, !dbg !20969
  %tobool = icmp ne i32 %and, 0, !dbg !20969
  br i1 %tobool, label %if.then7, label %if.else, !dbg !20970

if.then7:                                         ; preds = %if.end6
  %11 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !20971
  %macb_reg_writel = getelementptr inbounds %struct.macb, %struct.macb* %11, i32 0, i32 3, !dbg !20971
  %12 = load void (%struct.macb*, i32, i32)*, void (%struct.macb*, i32, i32)** %macb_reg_writel, align 8, !dbg !20971
  %13 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !20971
  %14 = load i32, i32* %mii_id.addr, align 4, !dbg !20971
  %and8 = and i32 %14, 31, !dbg !20971
  %shl = shl i32 %and8, 23, !dbg !20971
  %or = or i32 0, %shl, !dbg !20971
  %15 = load i32, i32* %regnum.addr, align 4, !dbg !20971
  %shr = ashr i32 %15, 16, !dbg !20971
  %and9 = and i32 %shr, 31, !dbg !20971
  %and10 = and i32 %and9, 31, !dbg !20971
  %shl11 = shl i32 %and10, 18, !dbg !20971
  %or12 = or i32 %or, %shl11, !dbg !20971
  %16 = load i32, i32* %regnum.addr, align 4, !dbg !20971
  %and13 = and i32 %16, 65535, !dbg !20971
  %and14 = and i32 %and13, 65535, !dbg !20971
  %shl15 = shl i32 %and14, 0, !dbg !20971
  %or16 = or i32 %or12, %shl15, !dbg !20971
  %or17 = or i32 %or16, 131072, !dbg !20971
  call void %12(%struct.macb* %13, i32 52, i32 %or17) #12, !dbg !20971
  %17 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !20973
  %call18 = call i32 @macb_mdio_wait_for_idle(%struct.macb* %17) #12, !dbg !20974
  store i32 %call18, i32* %status, align 4, !dbg !20975
  %18 = load i32, i32* %status, align 4, !dbg !20976
  %cmp19 = icmp slt i32 %18, 0, !dbg !20978
  br i1 %cmp19, label %if.then20, label %if.end21, !dbg !20979

if.then20:                                        ; preds = %if.then7
  br label %mdio_read_exit, !dbg !20980

if.end21:                                         ; preds = %if.then7
  %19 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !20981
  %macb_reg_writel22 = getelementptr inbounds %struct.macb, %struct.macb* %19, i32 0, i32 3, !dbg !20981
  %20 = load void (%struct.macb*, i32, i32)*, void (%struct.macb*, i32, i32)** %macb_reg_writel22, align 8, !dbg !20981
  %21 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !20981
  %22 = load i32, i32* %mii_id.addr, align 4, !dbg !20981
  %and23 = and i32 %22, 31, !dbg !20981
  %shl24 = shl i32 %and23, 23, !dbg !20981
  %or25 = or i32 805306368, %shl24, !dbg !20981
  %23 = load i32, i32* %regnum.addr, align 4, !dbg !20981
  %shr26 = ashr i32 %23, 16, !dbg !20981
  %and27 = and i32 %shr26, 31, !dbg !20981
  %and28 = and i32 %and27, 31, !dbg !20981
  %shl29 = shl i32 %and28, 18, !dbg !20981
  %or30 = or i32 %or25, %shl29, !dbg !20981
  %or31 = or i32 %or30, 131072, !dbg !20981
  call void %20(%struct.macb* %21, i32 52, i32 %or31) #12, !dbg !20981
  br label %if.end40, !dbg !20982

if.else:                                          ; preds = %if.end6
  %24 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !20983
  %macb_reg_writel32 = getelementptr inbounds %struct.macb, %struct.macb* %24, i32 0, i32 3, !dbg !20983
  %25 = load void (%struct.macb*, i32, i32)*, void (%struct.macb*, i32, i32)** %macb_reg_writel32, align 8, !dbg !20983
  %26 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !20983
  %27 = load i32, i32* %mii_id.addr, align 4, !dbg !20983
  %and33 = and i32 %27, 31, !dbg !20983
  %shl34 = shl i32 %and33, 23, !dbg !20983
  %or35 = or i32 1610612736, %shl34, !dbg !20983
  %28 = load i32, i32* %regnum.addr, align 4, !dbg !20983
  %and36 = and i32 %28, 31, !dbg !20983
  %shl37 = shl i32 %and36, 18, !dbg !20983
  %or38 = or i32 %or35, %shl37, !dbg !20983
  %or39 = or i32 %or38, 131072, !dbg !20983
  call void %25(%struct.macb* %26, i32 52, i32 %or39) #12, !dbg !20983
  br label %if.end40

if.end40:                                         ; preds = %if.else, %if.end21
  %29 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !20985
  %call41 = call i32 @macb_mdio_wait_for_idle(%struct.macb* %29) #12, !dbg !20986
  store i32 %call41, i32* %status, align 4, !dbg !20987
  %30 = load i32, i32* %status, align 4, !dbg !20988
  %cmp42 = icmp slt i32 %30, 0, !dbg !20990
  br i1 %cmp42, label %if.then43, label %if.end44, !dbg !20991

if.then43:                                        ; preds = %if.end40
  br label %mdio_read_exit, !dbg !20992

if.end44:                                         ; preds = %if.end40
  %31 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !20993
  %macb_reg_readl = getelementptr inbounds %struct.macb, %struct.macb* %31, i32 0, i32 2, !dbg !20993
  %32 = load i32 (%struct.macb*, i32)*, i32 (%struct.macb*, i32)** %macb_reg_readl, align 8, !dbg !20993
  %33 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !20993
  %call45 = call i32 %32(%struct.macb* %33, i32 52) #12, !dbg !20993
  %shr46 = lshr i32 %call45, 0, !dbg !20993
  %and47 = and i32 %shr46, 65535, !dbg !20993
  store i32 %and47, i32* %status, align 4, !dbg !20994
  br label %mdio_read_exit, !dbg !20995

mdio_read_exit:                                   ; preds = %if.end44, %if.then43, %if.then20, %if.then5
  call void @llvm.dbg.label(metadata !20996), !dbg !20997
  %34 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !20998
  %pdev48 = getelementptr inbounds %struct.macb, %struct.macb* %34, i32 0, i32 11, !dbg !20999
  %35 = load %struct.platform_device*, %struct.platform_device** %pdev48, align 8, !dbg !20999
  %dev49 = getelementptr inbounds %struct.platform_device, %struct.platform_device* %35, i32 0, i32 3, !dbg !21000
  call void @pm_runtime_mark_last_busy(%struct.device* %dev49) #12, !dbg !21001
  %36 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !21002
  %pdev50 = getelementptr inbounds %struct.macb, %struct.macb* %36, i32 0, i32 11, !dbg !21003
  %37 = load %struct.platform_device*, %struct.platform_device** %pdev50, align 8, !dbg !21003
  %dev51 = getelementptr inbounds %struct.platform_device, %struct.platform_device* %37, i32 0, i32 3, !dbg !21004
  %call52 = call i32 @pm_runtime_put_autosuspend(%struct.device* %dev51) #12, !dbg !21005
  br label %mdio_pm_exit, !dbg !21005

mdio_pm_exit:                                     ; preds = %mdio_read_exit, %if.then
  call void @llvm.dbg.label(metadata !21006), !dbg !21007
  %38 = load i32, i32* %status, align 4, !dbg !21008
  ret i32 %38, !dbg !21009
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @macb_mdio_write(%struct.mii_bus* %bus, i32 %mii_id, i32 %regnum, i16 zeroext %value) #2 !dbg !21010 {
entry:
  %bus.addr = alloca %struct.mii_bus*, align 8
  %mii_id.addr = alloca i32, align 4
  %regnum.addr = alloca i32, align 4
  %value.addr = alloca i16, align 2
  %bp = alloca %struct.macb*, align 8
  %status = alloca i32, align 4
  store %struct.mii_bus* %bus, %struct.mii_bus** %bus.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mii_bus** %bus.addr, metadata !21011, metadata !DIExpression()), !dbg !21012
  store i32 %mii_id, i32* %mii_id.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %mii_id.addr, metadata !21013, metadata !DIExpression()), !dbg !21014
  store i32 %regnum, i32* %regnum.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %regnum.addr, metadata !21015, metadata !DIExpression()), !dbg !21016
  store i16 %value, i16* %value.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %value.addr, metadata !21017, metadata !DIExpression()), !dbg !21018
  call void @llvm.dbg.declare(metadata %struct.macb** %bp, metadata !21019, metadata !DIExpression()), !dbg !21020
  %0 = load %struct.mii_bus*, %struct.mii_bus** %bus.addr, align 8, !dbg !21021
  %priv = getelementptr inbounds %struct.mii_bus, %struct.mii_bus* %0, i32 0, i32 3, !dbg !21022
  %1 = load i8*, i8** %priv, align 8, !dbg !21022
  %2 = bitcast i8* %1 to %struct.macb*, !dbg !21021
  store %struct.macb* %2, %struct.macb** %bp, align 8, !dbg !21020
  call void @llvm.dbg.declare(metadata i32* %status, metadata !21023, metadata !DIExpression()), !dbg !21024
  %3 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !21025
  %pdev = getelementptr inbounds %struct.macb, %struct.macb* %3, i32 0, i32 11, !dbg !21026
  %4 = load %struct.platform_device*, %struct.platform_device** %pdev, align 8, !dbg !21026
  %dev = getelementptr inbounds %struct.platform_device, %struct.platform_device* %4, i32 0, i32 3, !dbg !21027
  %call = call i32 @pm_runtime_get_sync(%struct.device* %dev) #12, !dbg !21028
  store i32 %call, i32* %status, align 4, !dbg !21029
  %5 = load i32, i32* %status, align 4, !dbg !21030
  %cmp = icmp slt i32 %5, 0, !dbg !21032
  br i1 %cmp, label %if.then, label %if.end, !dbg !21033

if.then:                                          ; preds = %entry
  %6 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !21034
  %pdev1 = getelementptr inbounds %struct.macb, %struct.macb* %6, i32 0, i32 11, !dbg !21036
  %7 = load %struct.platform_device*, %struct.platform_device** %pdev1, align 8, !dbg !21036
  %dev2 = getelementptr inbounds %struct.platform_device, %struct.platform_device* %7, i32 0, i32 3, !dbg !21037
  call void @pm_runtime_put_noidle(%struct.device* %dev2) #12, !dbg !21038
  br label %mdio_pm_exit, !dbg !21039

if.end:                                           ; preds = %entry
  %8 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !21040
  %call3 = call i32 @macb_mdio_wait_for_idle(%struct.macb* %8) #12, !dbg !21041
  store i32 %call3, i32* %status, align 4, !dbg !21042
  %9 = load i32, i32* %status, align 4, !dbg !21043
  %cmp4 = icmp slt i32 %9, 0, !dbg !21045
  br i1 %cmp4, label %if.then5, label %if.end6, !dbg !21046

if.then5:                                         ; preds = %if.end
  br label %mdio_write_exit, !dbg !21047

if.end6:                                          ; preds = %if.end
  %10 = load i32, i32* %regnum.addr, align 4, !dbg !21048
  %and = and i32 %10, 1073741824, !dbg !21050
  %tobool = icmp ne i32 %and, 0, !dbg !21050
  br i1 %tobool, label %if.then7, label %if.else, !dbg !21051

if.then7:                                         ; preds = %if.end6
  %11 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !21052
  %macb_reg_writel = getelementptr inbounds %struct.macb, %struct.macb* %11, i32 0, i32 3, !dbg !21052
  %12 = load void (%struct.macb*, i32, i32)*, void (%struct.macb*, i32, i32)** %macb_reg_writel, align 8, !dbg !21052
  %13 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !21052
  %14 = load i32, i32* %mii_id.addr, align 4, !dbg !21052
  %and8 = and i32 %14, 31, !dbg !21052
  %shl = shl i32 %and8, 23, !dbg !21052
  %or = or i32 0, %shl, !dbg !21052
  %15 = load i32, i32* %regnum.addr, align 4, !dbg !21052
  %shr = ashr i32 %15, 16, !dbg !21052
  %and9 = and i32 %shr, 31, !dbg !21052
  %and10 = and i32 %and9, 31, !dbg !21052
  %shl11 = shl i32 %and10, 18, !dbg !21052
  %or12 = or i32 %or, %shl11, !dbg !21052
  %16 = load i32, i32* %regnum.addr, align 4, !dbg !21052
  %and13 = and i32 %16, 65535, !dbg !21052
  %and14 = and i32 %and13, 65535, !dbg !21052
  %shl15 = shl i32 %and14, 0, !dbg !21052
  %or16 = or i32 %or12, %shl15, !dbg !21052
  %or17 = or i32 %or16, 131072, !dbg !21052
  call void %12(%struct.macb* %13, i32 52, i32 %or17) #12, !dbg !21052
  %17 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !21054
  %call18 = call i32 @macb_mdio_wait_for_idle(%struct.macb* %17) #12, !dbg !21055
  store i32 %call18, i32* %status, align 4, !dbg !21056
  %18 = load i32, i32* %status, align 4, !dbg !21057
  %cmp19 = icmp slt i32 %18, 0, !dbg !21059
  br i1 %cmp19, label %if.then20, label %if.end21, !dbg !21060

if.then20:                                        ; preds = %if.then7
  br label %mdio_write_exit, !dbg !21061

if.end21:                                         ; preds = %if.then7
  %19 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !21062
  %macb_reg_writel22 = getelementptr inbounds %struct.macb, %struct.macb* %19, i32 0, i32 3, !dbg !21062
  %20 = load void (%struct.macb*, i32, i32)*, void (%struct.macb*, i32, i32)** %macb_reg_writel22, align 8, !dbg !21062
  %21 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !21062
  %22 = load i32, i32* %mii_id.addr, align 4, !dbg !21062
  %and23 = and i32 %22, 31, !dbg !21062
  %shl24 = shl i32 %and23, 23, !dbg !21062
  %or25 = or i32 268435456, %shl24, !dbg !21062
  %23 = load i32, i32* %regnum.addr, align 4, !dbg !21062
  %shr26 = ashr i32 %23, 16, !dbg !21062
  %and27 = and i32 %shr26, 31, !dbg !21062
  %and28 = and i32 %and27, 31, !dbg !21062
  %shl29 = shl i32 %and28, 18, !dbg !21062
  %or30 = or i32 %or25, %shl29, !dbg !21062
  %or31 = or i32 %or30, 131072, !dbg !21062
  %24 = load i16, i16* %value.addr, align 2, !dbg !21062
  %conv = zext i16 %24 to i32, !dbg !21062
  %and32 = and i32 %conv, 65535, !dbg !21062
  %shl33 = shl i32 %and32, 0, !dbg !21062
  %or34 = or i32 %or31, %shl33, !dbg !21062
  call void %20(%struct.macb* %21, i32 52, i32 %or34) #12, !dbg !21062
  br label %if.end47, !dbg !21063

if.else:                                          ; preds = %if.end6
  %25 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !21064
  %macb_reg_writel35 = getelementptr inbounds %struct.macb, %struct.macb* %25, i32 0, i32 3, !dbg !21064
  %26 = load void (%struct.macb*, i32, i32)*, void (%struct.macb*, i32, i32)** %macb_reg_writel35, align 8, !dbg !21064
  %27 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !21064
  %28 = load i32, i32* %mii_id.addr, align 4, !dbg !21064
  %and36 = and i32 %28, 31, !dbg !21064
  %shl37 = shl i32 %and36, 23, !dbg !21064
  %or38 = or i32 1342177280, %shl37, !dbg !21064
  %29 = load i32, i32* %regnum.addr, align 4, !dbg !21064
  %and39 = and i32 %29, 31, !dbg !21064
  %shl40 = shl i32 %and39, 18, !dbg !21064
  %or41 = or i32 %or38, %shl40, !dbg !21064
  %or42 = or i32 %or41, 131072, !dbg !21064
  %30 = load i16, i16* %value.addr, align 2, !dbg !21064
  %conv43 = zext i16 %30 to i32, !dbg !21064
  %and44 = and i32 %conv43, 65535, !dbg !21064
  %shl45 = shl i32 %and44, 0, !dbg !21064
  %or46 = or i32 %or42, %shl45, !dbg !21064
  call void %26(%struct.macb* %27, i32 52, i32 %or46) #12, !dbg !21064
  br label %if.end47

if.end47:                                         ; preds = %if.else, %if.end21
  %31 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !21066
  %call48 = call i32 @macb_mdio_wait_for_idle(%struct.macb* %31) #12, !dbg !21067
  store i32 %call48, i32* %status, align 4, !dbg !21068
  %32 = load i32, i32* %status, align 4, !dbg !21069
  %cmp49 = icmp slt i32 %32, 0, !dbg !21071
  br i1 %cmp49, label %if.then51, label %if.end52, !dbg !21072

if.then51:                                        ; preds = %if.end47
  br label %mdio_write_exit, !dbg !21073

if.end52:                                         ; preds = %if.end47
  br label %mdio_write_exit, !dbg !21074

mdio_write_exit:                                  ; preds = %if.end52, %if.then51, %if.then20, %if.then5
  call void @llvm.dbg.label(metadata !21075), !dbg !21076
  %33 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !21077
  %pdev53 = getelementptr inbounds %struct.macb, %struct.macb* %33, i32 0, i32 11, !dbg !21078
  %34 = load %struct.platform_device*, %struct.platform_device** %pdev53, align 8, !dbg !21078
  %dev54 = getelementptr inbounds %struct.platform_device, %struct.platform_device* %34, i32 0, i32 3, !dbg !21079
  call void @pm_runtime_mark_last_busy(%struct.device* %dev54) #12, !dbg !21080
  %35 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !21081
  %pdev55 = getelementptr inbounds %struct.macb, %struct.macb* %35, i32 0, i32 11, !dbg !21082
  %36 = load %struct.platform_device*, %struct.platform_device** %pdev55, align 8, !dbg !21082
  %dev56 = getelementptr inbounds %struct.platform_device, %struct.platform_device* %36, i32 0, i32 3, !dbg !21083
  %call57 = call i32 @pm_runtime_put_autosuspend(%struct.device* %dev56) #12, !dbg !21084
  br label %mdio_pm_exit, !dbg !21084

mdio_pm_exit:                                     ; preds = %mdio_write_exit, %if.then
  call void @llvm.dbg.label(metadata !21085), !dbg !21086
  %37 = load i32, i32* %status, align 4, !dbg !21087
  ret i32 %37, !dbg !21088
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @macb_mdiobus_register(%struct.macb* %bp) #2 !dbg !21089 {
entry:
  %retval = alloca i32, align 4
  %bp.addr = alloca %struct.macb*, align 8
  %child = alloca %struct.device_node*, align 8
  %np = alloca %struct.device_node*, align 8
  store %struct.macb* %bp, %struct.macb** %bp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.macb** %bp.addr, metadata !21090, metadata !DIExpression()), !dbg !21091
  call void @llvm.dbg.declare(metadata %struct.device_node** %child, metadata !21092, metadata !DIExpression()), !dbg !21093
  call void @llvm.dbg.declare(metadata %struct.device_node** %np, metadata !21094, metadata !DIExpression()), !dbg !21095
  %0 = load %struct.macb*, %struct.macb** %bp.addr, align 8, !dbg !21096
  %pdev = getelementptr inbounds %struct.macb, %struct.macb* %0, i32 0, i32 11, !dbg !21097
  %1 = load %struct.platform_device*, %struct.platform_device** %pdev, align 8, !dbg !21097
  %dev = getelementptr inbounds %struct.platform_device, %struct.platform_device* %1, i32 0, i32 3, !dbg !21098
  %of_node = getelementptr inbounds %struct.device, %struct.device* %dev, i32 0, i32 23, !dbg !21099
  %2 = load %struct.device_node*, %struct.device_node** %of_node, align 8, !dbg !21099
  store %struct.device_node* %2, %struct.device_node** %np, align 8, !dbg !21095
  %3 = load %struct.device_node*, %struct.device_node** %np, align 8, !dbg !21100
  %call = call zeroext i1 @of_phy_is_fixed_link(%struct.device_node* %3) #12, !dbg !21102
  br i1 %call, label %if.then, label %if.end, !dbg !21103

if.then:                                          ; preds = %entry
  %4 = load %struct.macb*, %struct.macb** %bp.addr, align 8, !dbg !21104
  %mii_bus = getelementptr inbounds %struct.macb, %struct.macb* %4, i32 0, i32 20, !dbg !21104
  %5 = load %struct.mii_bus*, %struct.mii_bus** %mii_bus, align 8, !dbg !21104
  %call1 = call i32 @__mdiobus_register(%struct.mii_bus* %5, %struct.module* null) #12, !dbg !21104
  store i32 %call1, i32* %retval, align 4, !dbg !21105
  br label %return, !dbg !21105

if.end:                                           ; preds = %entry
  %6 = load %struct.device_node*, %struct.device_node** %np, align 8, !dbg !21106
  %call2 = call %struct.device_node* @of_get_next_available_child(%struct.device_node* %6, %struct.device_node* null) #12, !dbg !21106
  store %struct.device_node* %call2, %struct.device_node** %child, align 8, !dbg !21106
  br label %for.cond, !dbg !21106

for.cond:                                         ; preds = %for.inc, %if.end
  %7 = load %struct.device_node*, %struct.device_node** %child, align 8, !dbg !21108
  %cmp = icmp ne %struct.device_node* %7, null, !dbg !21108
  br i1 %cmp, label %for.body, label %for.end, !dbg !21106

for.body:                                         ; preds = %for.cond
  %8 = load %struct.device_node*, %struct.device_node** %child, align 8, !dbg !21110
  %call3 = call zeroext i1 @of_mdiobus_child_is_phy(%struct.device_node* %8) #12, !dbg !21112
  br i1 %call3, label %if.then4, label %if.end7, !dbg !21113

if.then4:                                         ; preds = %for.body
  %9 = load %struct.device_node*, %struct.device_node** %child, align 8, !dbg !21114
  call void @of_node_put(%struct.device_node* %9) #12, !dbg !21116
  %10 = load %struct.macb*, %struct.macb** %bp.addr, align 8, !dbg !21117
  %mii_bus5 = getelementptr inbounds %struct.macb, %struct.macb* %10, i32 0, i32 20, !dbg !21118
  %11 = load %struct.mii_bus*, %struct.mii_bus** %mii_bus5, align 8, !dbg !21118
  %12 = load %struct.device_node*, %struct.device_node** %np, align 8, !dbg !21119
  %call6 = call i32 @of_mdiobus_register(%struct.mii_bus* %11, %struct.device_node* %12) #12, !dbg !21120
  store i32 %call6, i32* %retval, align 4, !dbg !21121
  br label %return, !dbg !21121

if.end7:                                          ; preds = %for.body
  br label %for.inc, !dbg !21122

for.inc:                                          ; preds = %if.end7
  %13 = load %struct.device_node*, %struct.device_node** %np, align 8, !dbg !21108
  %14 = load %struct.device_node*, %struct.device_node** %child, align 8, !dbg !21108
  %call8 = call %struct.device_node* @of_get_next_available_child(%struct.device_node* %13, %struct.device_node* %14) #12, !dbg !21108
  store %struct.device_node* %call8, %struct.device_node** %child, align 8, !dbg !21108
  br label %for.cond, !dbg !21108, !llvm.loop !21123

for.end:                                          ; preds = %for.cond
  %15 = load %struct.macb*, %struct.macb** %bp.addr, align 8, !dbg !21125
  %mii_bus9 = getelementptr inbounds %struct.macb, %struct.macb* %15, i32 0, i32 20, !dbg !21125
  %16 = load %struct.mii_bus*, %struct.mii_bus** %mii_bus9, align 8, !dbg !21125
  %call10 = call i32 @__mdiobus_register(%struct.mii_bus* %16, %struct.module* null) #12, !dbg !21125
  store i32 %call10, i32* %retval, align 4, !dbg !21126
  br label %return, !dbg !21126

return:                                           ; preds = %for.end, %if.then4, %if.then
  %17 = load i32, i32* %retval, align 4, !dbg !21127
  ret i32 %17, !dbg !21127
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @macb_mii_probe(%struct.net_device* %dev) #2 !dbg !21128 {
entry:
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.net_device*, align 8
  %bp = alloca %struct.macb*, align 8
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !21129, metadata !DIExpression()), !dbg !21130
  call void @llvm.dbg.declare(metadata %struct.macb** %bp, metadata !21131, metadata !DIExpression()), !dbg !21132
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !21133
  %call = call i8* @netdev_priv(%struct.net_device* %0) #12, !dbg !21134
  %1 = bitcast i8* %call to %struct.macb*, !dbg !21134
  store %struct.macb* %1, %struct.macb** %bp, align 8, !dbg !21132
  %2 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !21135
  %dev1 = getelementptr inbounds %struct.net_device, %struct.net_device* %2, i32 0, i32 106, !dbg !21136
  %3 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !21137
  %phylink_config = getelementptr inbounds %struct.macb, %struct.macb* %3, i32 0, i32 22, !dbg !21138
  %dev2 = getelementptr inbounds %struct.phylink_config, %struct.phylink_config* %phylink_config, i32 0, i32 0, !dbg !21139
  store %struct.device* %dev1, %struct.device** %dev2, align 8, !dbg !21140
  %4 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !21141
  %phylink_config3 = getelementptr inbounds %struct.macb, %struct.macb* %4, i32 0, i32 22, !dbg !21142
  %type = getelementptr inbounds %struct.phylink_config, %struct.phylink_config* %phylink_config3, i32 0, i32 1, !dbg !21143
  store i32 0, i32* %type, align 8, !dbg !21144
  %5 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !21145
  %phylink_config4 = getelementptr inbounds %struct.macb, %struct.macb* %5, i32 0, i32 22, !dbg !21146
  %6 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !21147
  %pdev = getelementptr inbounds %struct.macb, %struct.macb* %6, i32 0, i32 11, !dbg !21148
  %7 = load %struct.platform_device*, %struct.platform_device** %pdev, align 8, !dbg !21148
  %dev5 = getelementptr inbounds %struct.platform_device, %struct.platform_device* %7, i32 0, i32 3, !dbg !21149
  %fwnode = getelementptr inbounds %struct.device, %struct.device* %dev5, i32 0, i32 24, !dbg !21150
  %8 = load %struct.fwnode_handle*, %struct.fwnode_handle** %fwnode, align 8, !dbg !21150
  %9 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !21151
  %phy_interface = getelementptr inbounds %struct.macb, %struct.macb* %9, i32 0, i32 25, !dbg !21152
  %10 = load i32, i32* %phy_interface, align 8, !dbg !21152
  %call6 = call %struct.phylink* @phylink_create(%struct.phylink_config* %phylink_config4, %struct.fwnode_handle* %8, i32 %10, %struct.phylink_mac_ops* @macb_phylink_ops) #12, !dbg !21153
  %11 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !21154
  %phylink = getelementptr inbounds %struct.macb, %struct.macb* %11, i32 0, i32 21, !dbg !21155
  store %struct.phylink* %call6, %struct.phylink** %phylink, align 8, !dbg !21156
  %12 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !21157
  %phylink7 = getelementptr inbounds %struct.macb, %struct.macb* %12, i32 0, i32 21, !dbg !21159
  %13 = load %struct.phylink*, %struct.phylink** %phylink7, align 8, !dbg !21159
  %14 = bitcast %struct.phylink* %13 to i8*, !dbg !21157
  %call8 = call zeroext i1 @IS_ERR(i8* %14) #12, !dbg !21160
  br i1 %call8, label %if.then, label %if.end, !dbg !21161

if.then:                                          ; preds = %entry
  %15 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !21162
  %16 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !21164
  %phylink9 = getelementptr inbounds %struct.macb, %struct.macb* %16, i32 0, i32 21, !dbg !21165
  %17 = load %struct.phylink*, %struct.phylink** %phylink9, align 8, !dbg !21165
  %18 = bitcast %struct.phylink* %17 to i8*, !dbg !21164
  %call10 = call i64 @PTR_ERR(i8* %18) #12, !dbg !21166
  call void (%struct.net_device*, i8*, ...) @netdev_err(%struct.net_device* %15, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.46, i64 0, i64 0), i64 %call10) #13, !dbg !21167
  %19 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !21168
  %phylink11 = getelementptr inbounds %struct.macb, %struct.macb* %19, i32 0, i32 21, !dbg !21169
  %20 = load %struct.phylink*, %struct.phylink** %phylink11, align 8, !dbg !21169
  %21 = bitcast %struct.phylink* %20 to i8*, !dbg !21168
  %call12 = call i64 @PTR_ERR(i8* %21) #12, !dbg !21170
  %conv = trunc i64 %call12 to i32, !dbg !21170
  store i32 %conv, i32* %retval, align 4, !dbg !21171
  br label %return, !dbg !21171

if.end:                                           ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !21172
  br label %return, !dbg !21172

return:                                           ; preds = %if.end, %if.then
  %22 = load i32, i32* %retval, align 4, !dbg !21173
  ret i32 %22, !dbg !21173
}

; Function Attrs: noredzone
declare dso_local %struct.mii_bus* @mdiobus_alloc_size(i64) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @pm_runtime_put_noidle(%struct.device* %dev) #2 !dbg !21174 {
entry:
  %v.addr.i5.i.i.i = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i5.i.i.i, metadata !21175, metadata !DIExpression()), !dbg !21179
  %old.addr.i.i.i.i = alloca i32*, align 8
  call void @llvm.dbg.declare(metadata i32** %old.addr.i.i.i.i, metadata !21192, metadata !DIExpression()), !dbg !21193
  %new.addr.i.i.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %new.addr.i.i.i.i, metadata !21194, metadata !DIExpression()), !dbg !21195
  %success.i.i.i.i = alloca i8, align 1
  call void @llvm.dbg.declare(metadata i8* %success.i.i.i.i, metadata !21196, metadata !DIExpression()), !dbg !21198
  %_old.i.i.i.i = alloca i32*, align 8
  call void @llvm.dbg.declare(metadata i32** %_old.i.i.i.i, metadata !21199, metadata !DIExpression()), !dbg !21198
  %__old.i.i.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %__old.i.i.i.i, metadata !21200, metadata !DIExpression()), !dbg !21198
  %__new.i.i.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %__new.i.i.i.i, metadata !21201, metadata !DIExpression()), !dbg !21198
  %__ptr.i.i.i.i = alloca i32*, align 8
  call void @llvm.dbg.declare(metadata i32** %__ptr.i.i.i.i, metadata !21202, metadata !DIExpression()), !dbg !21198
  %tmp.i.i.i.i = alloca i64, align 8
  %v.addr.i.i.i.i = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i.i.i.i, metadata !17418, metadata !DIExpression()), !dbg !21203
  %v.addr.i.i.i = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i.i.i, metadata !21205, metadata !DIExpression()), !dbg !21206
  %a.addr.i.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i.i.i, metadata !21207, metadata !DIExpression()), !dbg !21208
  %u.addr.i.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %u.addr.i.i.i, metadata !21209, metadata !DIExpression()), !dbg !21210
  %c.i.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %c.i.i.i, metadata !21211, metadata !DIExpression()), !dbg !21212
  %v.addr.i1.i = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i1.i, metadata !21213, metadata !DIExpression()), !dbg !21214
  %a.addr.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i.i, metadata !21215, metadata !DIExpression()), !dbg !21216
  %u.addr.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %u.addr.i.i, metadata !21217, metadata !DIExpression()), !dbg !21218
  %v.addr.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %v.addr.i.i, metadata !11628, metadata !DIExpression()), !dbg !21219
  %size.addr.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i, metadata !11638, metadata !DIExpression()), !dbg !21221
  %v.addr.i = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i, metadata !21222, metadata !DIExpression()), !dbg !21223
  %a.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i, metadata !21224, metadata !DIExpression()), !dbg !21225
  %u.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %u.addr.i, metadata !21226, metadata !DIExpression()), !dbg !21227
  %dev.addr = alloca %struct.device*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !21228, metadata !DIExpression()), !dbg !21229
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !21230
  %power = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 11, !dbg !21231
  %usage_count = getelementptr inbounds %struct.dev_pm_info, %struct.dev_pm_info* %power, i32 0, i32 13, !dbg !21232
  store %struct.atomic_t* %usage_count, %struct.atomic_t** %v.addr.i, align 8
  store i32 -1, i32* %a.addr.i, align 4
  store i32 0, i32* %u.addr.i, align 4
  %1 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i, align 8, !dbg !21233
  %2 = bitcast %struct.atomic_t* %1 to i8*, !dbg !21233
  store i8* %2, i8** %v.addr.i.i, align 8
  store i64 4, i64* %size.addr.i.i, align 8
  %3 = load i8*, i8** %v.addr.i.i, align 8, !dbg !21234
  %4 = load i64, i64* %size.addr.i.i, align 8, !dbg !21235
  %conv.i.i = trunc i64 %4 to i32, !dbg !21235
  %call.i.i = call zeroext i1 @kasan_check_write(i8* %3, i32 %conv.i.i) #14, !dbg !21236
  %5 = load i8*, i8** %v.addr.i.i, align 8, !dbg !21237
  %6 = load i64, i64* %size.addr.i.i, align 8, !dbg !21237
  call void @kcsan_check_access(i8* %5, i64 %6, i32 7) #14, !dbg !21237
  %7 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i, align 8, !dbg !21238
  %8 = load i32, i32* %a.addr.i, align 4, !dbg !21239
  %9 = load i32, i32* %u.addr.i, align 4, !dbg !21240
  store %struct.atomic_t* %7, %struct.atomic_t** %v.addr.i1.i, align 8
  store i32 %8, i32* %a.addr.i.i, align 4
  store i32 %9, i32* %u.addr.i.i, align 4
  %10 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i1.i, align 8, !dbg !21241
  %11 = load i32, i32* %a.addr.i.i, align 4, !dbg !21242
  %12 = load i32, i32* %u.addr.i.i, align 4, !dbg !21243
  store %struct.atomic_t* %10, %struct.atomic_t** %v.addr.i.i.i, align 8
  store i32 %11, i32* %a.addr.i.i.i, align 4
  store i32 %12, i32* %u.addr.i.i.i, align 4
  %13 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i.i.i, align 8, !dbg !21244
  store %struct.atomic_t* %13, %struct.atomic_t** %v.addr.i.i.i.i, align 8
  %14 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i.i.i.i, align 8, !dbg !21245
  %counter.i.i.i.i = getelementptr inbounds %struct.atomic_t, %struct.atomic_t* %14, i32 0, i32 0, !dbg !21245
  %15 = load volatile i32, i32* %counter.i.i.i.i, align 4, !dbg !21245
  store i32 %15, i32* %c.i.i.i, align 4, !dbg !21212
  br label %do.body.i.i.i, !dbg !21246

do.body.i.i.i:                                    ; preds = %arch_atomic_try_cmpxchg.exit.i.i.i, %entry
  %16 = load i32, i32* %c.i.i.i, align 4, !dbg !21247
  %17 = load i32, i32* %u.addr.i.i.i, align 4, !dbg !21247
  %cmp.i.i.i = icmp eq i32 %16, %17, !dbg !21247
  %lnot.i.i.i = xor i1 %cmp.i.i.i, true, !dbg !21247
  %lnot.ext.i.i.i = zext i1 %cmp.i.i.i to i32, !dbg !21247
  %conv.i.i.i = sext i32 %lnot.ext.i.i.i to i64, !dbg !21247
  br i1 %cmp.i.i.i, label %if.then.i.i.i, label %if.end.i.i.i, !dbg !21250

if.then.i.i.i:                                    ; preds = %do.body.i.i.i
  br label %atomic_add_unless.exit, !dbg !21251

if.end.i.i.i:                                     ; preds = %do.body.i.i.i
  %18 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i.i.i, align 8, !dbg !21252
  %19 = load i32, i32* %c.i.i.i, align 4, !dbg !21253
  %20 = load i32, i32* %a.addr.i.i.i, align 4, !dbg !21254
  %add.i.i.i = add i32 %19, %20, !dbg !21255
  store %struct.atomic_t* %18, %struct.atomic_t** %v.addr.i5.i.i.i, align 8
  store i32* %c.i.i.i, i32** %old.addr.i.i.i.i, align 8
  store i32 %add.i.i.i, i32* %new.addr.i.i.i.i, align 4
  %21 = load i32*, i32** %old.addr.i.i.i.i, align 8, !dbg !21198
  store i32* %21, i32** %_old.i.i.i.i, align 8, !dbg !21198
  %22 = load i32*, i32** %_old.i.i.i.i, align 8, !dbg !21198
  %23 = load i32, i32* %22, align 4, !dbg !21198
  store i32 %23, i32* %__old.i.i.i.i, align 4, !dbg !21198
  %24 = load i32, i32* %new.addr.i.i.i.i, align 4, !dbg !21198
  store i32 %24, i32* %__new.i.i.i.i, align 4, !dbg !21198
  %25 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i5.i.i.i, align 8, !dbg !21198
  %counter.i6.i.i.i = getelementptr inbounds %struct.atomic_t, %struct.atomic_t* %25, i32 0, i32 0, !dbg !21198
  store i32* %counter.i6.i.i.i, i32** %__ptr.i.i.i.i, align 8, !dbg !21198
  %26 = load i32*, i32** %__ptr.i.i.i.i, align 8, !dbg !21198
  %27 = load i32, i32* %__old.i.i.i.i, align 4, !dbg !21198
  %28 = load i32, i32* %__new.i.i.i.i, align 4, !dbg !21198
  %29 = call { i8, i32 } asm sideeffect "cmpxchgl $3, $1\0A\09/* output condition code z*/\0A", "={@ccz},=*m,={ax},r,*m,2,~{memory},~{dirflag},~{fpsr},~{flags}"(i32* %26, i32 %28, i32* %26, i32 %27) #8, !dbg !21198, !srcloc !21256
  %asmresult.i.i.i.i = extractvalue { i8, i32 } %29, 0, !dbg !21198
  %asmresult1.i.i.i.i = extractvalue { i8, i32 } %29, 1, !dbg !21198
  store i8 %asmresult.i.i.i.i, i8* %success.i.i.i.i, align 1, !dbg !21198
  store i32 %asmresult1.i.i.i.i, i32* %__old.i.i.i.i, align 4, !dbg !21198
  %30 = load i8, i8* %success.i.i.i.i, align 1, !dbg !21257
  %tobool.i.i.i.i = trunc i8 %30 to i1, !dbg !21257
  %lnot.i.i.i.i = xor i1 %tobool.i.i.i.i, true, !dbg !21257
  %lnot3.i.i.i.i = xor i1 %tobool.i.i.i.i, true, !dbg !21257
  %lnot.ext.i.i.i.i = zext i1 %lnot3.i.i.i.i to i32, !dbg !21257
  %conv.i.i.i.i = sext i32 %lnot.ext.i.i.i.i to i64, !dbg !21257
  br i1 %lnot3.i.i.i.i, label %if.then.i.i.i.i, label %arch_atomic_try_cmpxchg.exit.i.i.i, !dbg !21198

if.then.i.i.i.i:                                  ; preds = %if.end.i.i.i
  %31 = load i32, i32* %__old.i.i.i.i, align 4, !dbg !21257
  %32 = load i32*, i32** %_old.i.i.i.i, align 8, !dbg !21257
  store i32 %31, i32* %32, align 4, !dbg !21257
  br label %arch_atomic_try_cmpxchg.exit.i.i.i, !dbg !21257

arch_atomic_try_cmpxchg.exit.i.i.i:               ; preds = %if.then.i.i.i.i, %if.end.i.i.i
  %33 = load i8, i8* %success.i.i.i.i, align 1, !dbg !21198
  %tobool5.i.i.i.i = trunc i8 %33 to i1, !dbg !21198
  %lnot6.i.i.i.i = xor i1 %tobool5.i.i.i.i, true, !dbg !21198
  %lnot.ext9.i.i.i.i = zext i1 %tobool5.i.i.i.i to i32, !dbg !21198
  %conv10.i.i.i.i = sext i32 %lnot.ext9.i.i.i.i to i64, !dbg !21198
  store i64 %conv10.i.i.i.i, i64* %tmp.i.i.i.i, align 8, !dbg !21257
  %34 = load i64, i64* %tmp.i.i.i.i, align 8, !dbg !21198
  %tobool11.i.i.i.i = icmp ne i64 %34, 0, !dbg !21259
  %lnot3.i.i.i = xor i1 %tobool11.i.i.i.i, true, !dbg !21260
  br i1 %lnot3.i.i.i, label %do.body.i.i.i, label %atomic_add_unless.exit, !dbg !21261, !llvm.loop !21262

atomic_add_unless.exit:                           ; preds = %if.then.i.i.i, %arch_atomic_try_cmpxchg.exit.i.i.i
  %35 = load i32, i32* %c.i.i.i, align 4, !dbg !21264
  %36 = load i32, i32* %u.addr.i.i, align 4, !dbg !21265
  %cmp.i.i = icmp ne i32 %35, %36, !dbg !21266
  ret void, !dbg !21267
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @macb_mdio_wait_for_idle(%struct.macb* %bp) #2 !dbg !21268 {
entry:
  %bp.addr = alloca %struct.macb*, align 8
  %val = alloca i32, align 4
  %__timeout_us = alloca i64, align 8
  %__sleep_us = alloca i64, align 8
  %__timeout = alloca i64, align 8
  %tmp = alloca i32, align 4
  store %struct.macb* %bp, %struct.macb** %bp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.macb** %bp.addr, metadata !21269, metadata !DIExpression()), !dbg !21270
  call void @llvm.dbg.declare(metadata i32* %val, metadata !21271, metadata !DIExpression()), !dbg !21272
  call void @llvm.dbg.declare(metadata i64* %__timeout_us, metadata !21273, metadata !DIExpression()), !dbg !21275
  store i64 1000000, i64* %__timeout_us, align 8, !dbg !21275
  call void @llvm.dbg.declare(metadata i64* %__sleep_us, metadata !21276, metadata !DIExpression()), !dbg !21275
  store i64 1, i64* %__sleep_us, align 8, !dbg !21275
  call void @llvm.dbg.declare(metadata i64* %__timeout, metadata !21277, metadata !DIExpression()), !dbg !21275
  %call = call i64 @ktime_get() #12, !dbg !21275
  %0 = load i64, i64* %__timeout_us, align 8, !dbg !21275
  %call1 = call i64 @ktime_add_us(i64 %call, i64 %0) #12, !dbg !21275
  store i64 %call1, i64* %__timeout, align 8, !dbg !21275
  br label %do.body, !dbg !21275

do.body:                                          ; preds = %entry
  %1 = load i64, i64* %__sleep_us, align 8, !dbg !21278
  %cmp = icmp ne i64 %1, 0, !dbg !21278
  br i1 %cmp, label %if.then, label %if.end, !dbg !21281

if.then:                                          ; preds = %do.body
  br label %do.body2, !dbg !21278

do.body2:                                         ; preds = %if.then
  br label %do.body3, !dbg !21282

do.body3:                                         ; preds = %do.body2
  br label %do.end, !dbg !21284

do.end:                                           ; preds = %do.body3
  br label %do.end4, !dbg !21282

do.end4:                                          ; preds = %do.end
  br label %if.end, !dbg !21282

if.end:                                           ; preds = %do.end4, %do.body
  br label %do.end5, !dbg !21281

do.end5:                                          ; preds = %if.end
  br label %for.cond, !dbg !21275

for.cond:                                         ; preds = %if.end19, %do.end5
  %2 = load %struct.macb*, %struct.macb** %bp.addr, align 8, !dbg !21286
  %macb_reg_readl = getelementptr inbounds %struct.macb, %struct.macb* %2, i32 0, i32 2, !dbg !21286
  %3 = load i32 (%struct.macb*, i32)*, i32 (%struct.macb*, i32)** %macb_reg_readl, align 8, !dbg !21286
  %4 = load %struct.macb*, %struct.macb** %bp.addr, align 8, !dbg !21286
  %call6 = call i32 %3(%struct.macb* %4, i32 8) #12, !dbg !21286
  store i32 %call6, i32* %val, align 4, !dbg !21286
  %5 = load i32, i32* %val, align 4, !dbg !21290
  %and = and i32 %5, 4, !dbg !21290
  %tobool = icmp ne i32 %and, 0, !dbg !21290
  br i1 %tobool, label %if.then7, label %if.end8, !dbg !21286

if.then7:                                         ; preds = %for.cond
  br label %for.end, !dbg !21290

if.end8:                                          ; preds = %for.cond
  %6 = load i64, i64* %__timeout_us, align 8, !dbg !21292
  %tobool9 = icmp ne i64 %6, 0, !dbg !21292
  br i1 %tobool9, label %land.lhs.true, label %if.end16, !dbg !21292

land.lhs.true:                                    ; preds = %if.end8
  %call10 = call i64 @ktime_get() #12, !dbg !21292
  %7 = load i64, i64* %__timeout, align 8, !dbg !21292
  %call11 = call i32 @ktime_compare(i64 %call10, i64 %7) #12, !dbg !21292
  %cmp12 = icmp sgt i32 %call11, 0, !dbg !21292
  br i1 %cmp12, label %if.then13, label %if.end16, !dbg !21286

if.then13:                                        ; preds = %land.lhs.true
  %8 = load %struct.macb*, %struct.macb** %bp.addr, align 8, !dbg !21294
  %macb_reg_readl14 = getelementptr inbounds %struct.macb, %struct.macb* %8, i32 0, i32 2, !dbg !21294
  %9 = load i32 (%struct.macb*, i32)*, i32 (%struct.macb*, i32)** %macb_reg_readl14, align 8, !dbg !21294
  %10 = load %struct.macb*, %struct.macb** %bp.addr, align 8, !dbg !21294
  %call15 = call i32 %9(%struct.macb* %10, i32 8) #12, !dbg !21294
  store i32 %call15, i32* %val, align 4, !dbg !21294
  br label %for.end, !dbg !21294

if.end16:                                         ; preds = %land.lhs.true, %if.end8
  %11 = load i64, i64* %__sleep_us, align 8, !dbg !21296
  %tobool17 = icmp ne i64 %11, 0, !dbg !21296
  br i1 %tobool17, label %if.then18, label %if.end19, !dbg !21286

if.then18:                                        ; preds = %if.end16
  %12 = load i64, i64* %__sleep_us, align 8, !dbg !21296
  %shr = lshr i64 %12, 2, !dbg !21296
  %add = add i64 %shr, 1, !dbg !21296
  %13 = load i64, i64* %__sleep_us, align 8, !dbg !21296
  call void @usleep_range(i64 %add, i64 %13) #12, !dbg !21296
  br label %if.end19, !dbg !21296

if.end19:                                         ; preds = %if.then18, %if.end16
  br label %for.cond, !dbg !21298, !llvm.loop !21299

for.end:                                          ; preds = %if.then13, %if.then7
  %14 = load i32, i32* %val, align 4, !dbg !21275
  %and20 = and i32 %14, 4, !dbg !21275
  %tobool21 = icmp ne i32 %and20, 0, !dbg !21275
  %15 = zext i1 %tobool21 to i64, !dbg !21275
  %cond = select i1 %tobool21, i32 0, i32 -110, !dbg !21275
  store i32 %cond, i32* %tmp, align 4, !dbg !21300
  %16 = load i32, i32* %tmp, align 4, !dbg !21275
  ret i32 %16, !dbg !21301
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @ktime_add_us(i64 %kt, i64 %usec) #2 !dbg !21302 {
entry:
  %kt.addr = alloca i64, align 8
  %usec.addr = alloca i64, align 8
  store i64 %kt, i64* %kt.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %kt.addr, metadata !21307, metadata !DIExpression()), !dbg !21308
  store i64 %usec, i64* %usec.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %usec.addr, metadata !21309, metadata !DIExpression()), !dbg !21310
  %0 = load i64, i64* %kt.addr, align 8, !dbg !21311
  %1 = load i64, i64* %usec.addr, align 8, !dbg !21311
  %mul = mul i64 %1, 1000, !dbg !21311
  %add = add i64 %0, %mul, !dbg !21311
  ret i64 %add, !dbg !21312
}

; Function Attrs: noredzone
declare dso_local i64 @ktime_get() #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @ktime_compare(i64 %cmp1, i64 %cmp2) #2 !dbg !21313 {
entry:
  %retval = alloca i32, align 4
  %cmp1.addr = alloca i64, align 8
  %cmp2.addr = alloca i64, align 8
  store i64 %cmp1, i64* %cmp1.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %cmp1.addr, metadata !21316, metadata !DIExpression()), !dbg !21317
  store i64 %cmp2, i64* %cmp2.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %cmp2.addr, metadata !21318, metadata !DIExpression()), !dbg !21319
  %0 = load i64, i64* %cmp1.addr, align 8, !dbg !21320
  %1 = load i64, i64* %cmp2.addr, align 8, !dbg !21322
  %cmp = icmp slt i64 %0, %1, !dbg !21323
  br i1 %cmp, label %if.then, label %if.end, !dbg !21324

if.then:                                          ; preds = %entry
  store i32 -1, i32* %retval, align 4, !dbg !21325
  br label %return, !dbg !21325

if.end:                                           ; preds = %entry
  %2 = load i64, i64* %cmp1.addr, align 8, !dbg !21326
  %3 = load i64, i64* %cmp2.addr, align 8, !dbg !21328
  %cmp3 = icmp sgt i64 %2, %3, !dbg !21329
  br i1 %cmp3, label %if.then4, label %if.end5, !dbg !21330

if.then4:                                         ; preds = %if.end
  store i32 1, i32* %retval, align 4, !dbg !21331
  br label %return, !dbg !21331

if.end5:                                          ; preds = %if.end
  store i32 0, i32* %retval, align 4, !dbg !21332
  br label %return, !dbg !21332

return:                                           ; preds = %if.end5, %if.then4, %if.then
  %4 = load i32, i32* %retval, align 4, !dbg !21333
  ret i32 %4, !dbg !21333
}

; Function Attrs: noredzone
declare dso_local void @usleep_range(i64, i64) #1

; Function Attrs: noredzone
declare dso_local zeroext i1 @of_phy_is_fixed_link(%struct.device_node*) #1

; Function Attrs: noredzone
declare dso_local i32 @__mdiobus_register(%struct.mii_bus*, %struct.module*) #1

; Function Attrs: noredzone
declare dso_local %struct.device_node* @of_get_next_available_child(%struct.device_node*, %struct.device_node*) #1

; Function Attrs: noredzone
declare dso_local zeroext i1 @of_mdiobus_child_is_phy(%struct.device_node*) #1

; Function Attrs: noredzone
declare dso_local i32 @of_mdiobus_register(%struct.mii_bus*, %struct.device_node*) #1

; Function Attrs: noredzone
declare dso_local %struct.phylink* @phylink_create(%struct.phylink_config*, %struct.fwnode_handle*, i32, %struct.phylink_mac_ops*) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @macb_validate(%struct.phylink_config* %config, i64* %supported, %struct.phylink_link_state* %state) #2 !dbg !21334 {
entry:
  %config.addr = alloca %struct.phylink_config*, align 8
  %supported.addr = alloca i64*, align 8
  %state.addr = alloca %struct.phylink_link_state*, align 8
  %ndev = alloca %struct.net_device*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.net_device*, align 8
  %mask = alloca [2 x i64], align 16
  %bp = alloca %struct.macb*, align 8
  store %struct.phylink_config* %config, %struct.phylink_config** %config.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.phylink_config** %config.addr, metadata !21335, metadata !DIExpression()), !dbg !21336
  store i64* %supported, i64** %supported.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %supported.addr, metadata !21337, metadata !DIExpression()), !dbg !21338
  store %struct.phylink_link_state* %state, %struct.phylink_link_state** %state.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.phylink_link_state** %state.addr, metadata !21339, metadata !DIExpression()), !dbg !21340
  call void @llvm.dbg.declare(metadata %struct.net_device** %ndev, metadata !21341, metadata !DIExpression()), !dbg !21342
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !21343, metadata !DIExpression()), !dbg !21345
  %0 = load %struct.phylink_config*, %struct.phylink_config** %config.addr, align 8, !dbg !21345
  %dev = getelementptr inbounds %struct.phylink_config, %struct.phylink_config* %0, i32 0, i32 0, !dbg !21345
  %1 = load %struct.device*, %struct.device** %dev, align 8, !dbg !21345
  %2 = bitcast %struct.device* %1 to i8*, !dbg !21345
  store i8* %2, i8** %__mptr, align 8, !dbg !21345
  br label %do.body, !dbg !21345

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !21346

do.end:                                           ; preds = %do.body
  %3 = load i8*, i8** %__mptr, align 8, !dbg !21345
  %add.ptr = getelementptr i8, i8* %3, i64 -1024, !dbg !21345
  %4 = bitcast i8* %add.ptr to %struct.net_device*, !dbg !21345
  store %struct.net_device* %4, %struct.net_device** %tmp, align 8, !dbg !21346
  %5 = load %struct.net_device*, %struct.net_device** %tmp, align 8, !dbg !21345
  store %struct.net_device* %5, %struct.net_device** %ndev, align 8, !dbg !21342
  call void @llvm.dbg.declare(metadata [2 x i64]* %mask, metadata !21348, metadata !DIExpression()), !dbg !21349
  %6 = bitcast [2 x i64]* %mask to i8*, !dbg !21349
  call void @llvm.memset.p0i8.i64(i8* align 16 %6, i8 0, i64 16, i1 false), !dbg !21349
  call void @llvm.dbg.declare(metadata %struct.macb** %bp, metadata !21350, metadata !DIExpression()), !dbg !21351
  %7 = load %struct.net_device*, %struct.net_device** %ndev, align 8, !dbg !21352
  %call = call i8* @netdev_priv(%struct.net_device* %7) #12, !dbg !21353
  %8 = bitcast i8* %call to %struct.macb*, !dbg !21353
  store %struct.macb* %8, %struct.macb** %bp, align 8, !dbg !21351
  %9 = load %struct.phylink_link_state*, %struct.phylink_link_state** %state.addr, align 8, !dbg !21354
  %interface = getelementptr inbounds %struct.phylink_link_state, %struct.phylink_link_state* %9, i32 0, i32 2, !dbg !21356
  %10 = load i32, i32* %interface, align 8, !dbg !21356
  %cmp = icmp ne i32 %10, 0, !dbg !21357
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !21358

land.lhs.true:                                    ; preds = %do.end
  %11 = load %struct.phylink_link_state*, %struct.phylink_link_state** %state.addr, align 8, !dbg !21359
  %interface1 = getelementptr inbounds %struct.phylink_link_state, %struct.phylink_link_state* %11, i32 0, i32 2, !dbg !21360
  %12 = load i32, i32* %interface1, align 8, !dbg !21360
  %cmp2 = icmp ne i32 %12, 2, !dbg !21361
  br i1 %cmp2, label %land.lhs.true3, label %if.end, !dbg !21362

land.lhs.true3:                                   ; preds = %land.lhs.true
  %13 = load %struct.phylink_link_state*, %struct.phylink_link_state** %state.addr, align 8, !dbg !21363
  %interface4 = getelementptr inbounds %struct.phylink_link_state, %struct.phylink_link_state* %13, i32 0, i32 2, !dbg !21364
  %14 = load i32, i32* %interface4, align 8, !dbg !21364
  %cmp5 = icmp ne i32 %14, 7, !dbg !21365
  br i1 %cmp5, label %land.lhs.true6, label %if.end, !dbg !21366

land.lhs.true6:                                   ; preds = %land.lhs.true3
  %15 = load %struct.phylink_link_state*, %struct.phylink_link_state** %state.addr, align 8, !dbg !21367
  %interface7 = getelementptr inbounds %struct.phylink_link_state, %struct.phylink_link_state* %15, i32 0, i32 2, !dbg !21368
  %16 = load i32, i32* %interface7, align 8, !dbg !21368
  %cmp8 = icmp ne i32 %16, 3, !dbg !21369
  br i1 %cmp8, label %land.lhs.true9, label %if.end, !dbg !21370

land.lhs.true9:                                   ; preds = %land.lhs.true6
  %17 = load %struct.phylink_link_state*, %struct.phylink_link_state** %state.addr, align 8, !dbg !21371
  %interface10 = getelementptr inbounds %struct.phylink_link_state, %struct.phylink_link_state* %17, i32 0, i32 2, !dbg !21372
  %18 = load i32, i32* %interface10, align 8, !dbg !21372
  %cmp11 = icmp ne i32 %18, 4, !dbg !21373
  br i1 %cmp11, label %land.lhs.true12, label %if.end, !dbg !21374

land.lhs.true12:                                  ; preds = %land.lhs.true9
  %19 = load %struct.phylink_link_state*, %struct.phylink_link_state** %state.addr, align 8, !dbg !21375
  %interface13 = getelementptr inbounds %struct.phylink_link_state, %struct.phylink_link_state* %19, i32 0, i32 2, !dbg !21376
  %20 = load i32, i32* %interface13, align 8, !dbg !21376
  %call14 = call zeroext i1 @phy_interface_mode_is_rgmii(i32 %20) #12, !dbg !21377
  br i1 %call14, label %if.end, label %if.then, !dbg !21378

if.then:                                          ; preds = %land.lhs.true12
  %21 = load i64*, i64** %supported.addr, align 8, !dbg !21379
  call void @bitmap_zero(i64* %21, i32 92) #12, !dbg !21381
  br label %return, !dbg !21382

if.end:                                           ; preds = %land.lhs.true12, %land.lhs.true9, %land.lhs.true6, %land.lhs.true3, %land.lhs.true, %do.end
  %22 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !21383
  %call15 = call zeroext i1 @macb_is_gem(%struct.macb* %22) #12, !dbg !21385
  br i1 %call15, label %if.end22, label %land.lhs.true16, !dbg !21386

land.lhs.true16:                                  ; preds = %if.end
  %23 = load %struct.phylink_link_state*, %struct.phylink_link_state** %state.addr, align 8, !dbg !21387
  %interface17 = getelementptr inbounds %struct.phylink_link_state, %struct.phylink_link_state* %23, i32 0, i32 2, !dbg !21388
  %24 = load i32, i32* %interface17, align 8, !dbg !21388
  %cmp18 = icmp eq i32 %24, 3, !dbg !21389
  br i1 %cmp18, label %if.then21, label %lor.lhs.false, !dbg !21390

lor.lhs.false:                                    ; preds = %land.lhs.true16
  %25 = load %struct.phylink_link_state*, %struct.phylink_link_state** %state.addr, align 8, !dbg !21391
  %interface19 = getelementptr inbounds %struct.phylink_link_state, %struct.phylink_link_state* %25, i32 0, i32 2, !dbg !21392
  %26 = load i32, i32* %interface19, align 8, !dbg !21392
  %call20 = call zeroext i1 @phy_interface_mode_is_rgmii(i32 %26) #12, !dbg !21393
  br i1 %call20, label %if.then21, label %if.end22, !dbg !21394

if.then21:                                        ; preds = %lor.lhs.false, %land.lhs.true16
  %27 = load i64*, i64** %supported.addr, align 8, !dbg !21395
  call void @bitmap_zero(i64* %27, i32 92) #12, !dbg !21397
  br label %return, !dbg !21398

if.end22:                                         ; preds = %lor.lhs.false, %if.end
  %arraydecay = getelementptr inbounds [2 x i64], [2 x i64]* %mask, i64 0, i64 0, !dbg !21399
  call void @phylink_set_port_modes(i64* %arraydecay) #12, !dbg !21400
  %arraydecay23 = getelementptr inbounds [2 x i64], [2 x i64]* %mask, i64 0, i64 0, !dbg !21401
  call void @__set_bit(i64 6, i64* %arraydecay23) #12, !dbg !21401
  %arraydecay24 = getelementptr inbounds [2 x i64], [2 x i64]* %mask, i64 0, i64 0, !dbg !21402
  call void @__set_bit(i64 14, i64* %arraydecay24) #12, !dbg !21402
  %arraydecay25 = getelementptr inbounds [2 x i64], [2 x i64]* %mask, i64 0, i64 0, !dbg !21403
  call void @__set_bit(i64 0, i64* %arraydecay25) #12, !dbg !21403
  %arraydecay26 = getelementptr inbounds [2 x i64], [2 x i64]* %mask, i64 0, i64 0, !dbg !21404
  call void @__set_bit(i64 1, i64* %arraydecay26) #12, !dbg !21404
  %arraydecay27 = getelementptr inbounds [2 x i64], [2 x i64]* %mask, i64 0, i64 0, !dbg !21405
  call void @__set_bit(i64 2, i64* %arraydecay27) #12, !dbg !21405
  %arraydecay28 = getelementptr inbounds [2 x i64], [2 x i64]* %mask, i64 0, i64 0, !dbg !21406
  call void @__set_bit(i64 3, i64* %arraydecay28) #12, !dbg !21406
  %28 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !21407
  %caps = getelementptr inbounds %struct.macb, %struct.macb* %28, i32 0, i32 23, !dbg !21409
  %29 = load i32, i32* %caps, align 8, !dbg !21409
  %and = and i32 %29, 536870912, !dbg !21410
  %tobool = icmp ne i32 %and, 0, !dbg !21410
  br i1 %tobool, label %land.lhs.true29, label %if.end50, !dbg !21411

land.lhs.true29:                                  ; preds = %if.end22
  %30 = load %struct.phylink_link_state*, %struct.phylink_link_state** %state.addr, align 8, !dbg !21412
  %interface30 = getelementptr inbounds %struct.phylink_link_state, %struct.phylink_link_state* %30, i32 0, i32 2, !dbg !21413
  %31 = load i32, i32* %interface30, align 8, !dbg !21413
  %cmp31 = icmp eq i32 %31, 0, !dbg !21414
  br i1 %cmp31, label %if.then41, label %lor.lhs.false32, !dbg !21415

lor.lhs.false32:                                  ; preds = %land.lhs.true29
  %32 = load %struct.phylink_link_state*, %struct.phylink_link_state** %state.addr, align 8, !dbg !21416
  %interface33 = getelementptr inbounds %struct.phylink_link_state, %struct.phylink_link_state* %32, i32 0, i32 2, !dbg !21417
  %33 = load i32, i32* %interface33, align 8, !dbg !21417
  %cmp34 = icmp eq i32 %33, 3, !dbg !21418
  br i1 %cmp34, label %if.then41, label %lor.lhs.false35, !dbg !21419

lor.lhs.false35:                                  ; preds = %lor.lhs.false32
  %34 = load %struct.phylink_link_state*, %struct.phylink_link_state** %state.addr, align 8, !dbg !21420
  %interface36 = getelementptr inbounds %struct.phylink_link_state, %struct.phylink_link_state* %34, i32 0, i32 2, !dbg !21421
  %35 = load i32, i32* %interface36, align 8, !dbg !21421
  %cmp37 = icmp eq i32 %35, 4, !dbg !21422
  br i1 %cmp37, label %if.then41, label %lor.lhs.false38, !dbg !21423

lor.lhs.false38:                                  ; preds = %lor.lhs.false35
  %36 = load %struct.phylink_link_state*, %struct.phylink_link_state** %state.addr, align 8, !dbg !21424
  %interface39 = getelementptr inbounds %struct.phylink_link_state, %struct.phylink_link_state* %36, i32 0, i32 2, !dbg !21425
  %37 = load i32, i32* %interface39, align 8, !dbg !21425
  %call40 = call zeroext i1 @phy_interface_mode_is_rgmii(i32 %37) #12, !dbg !21426
  br i1 %call40, label %if.then41, label %if.end50, !dbg !21427

if.then41:                                        ; preds = %lor.lhs.false38, %lor.lhs.false35, %lor.lhs.false32, %land.lhs.true29
  %arraydecay42 = getelementptr inbounds [2 x i64], [2 x i64]* %mask, i64 0, i64 0, !dbg !21428
  call void @__set_bit(i64 5, i64* %arraydecay42) #12, !dbg !21428
  %arraydecay43 = getelementptr inbounds [2 x i64], [2 x i64]* %mask, i64 0, i64 0, !dbg !21430
  call void @__set_bit(i64 41, i64* %arraydecay43) #12, !dbg !21430
  %38 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !21431
  %caps44 = getelementptr inbounds %struct.macb, %struct.macb* %38, i32 0, i32 23, !dbg !21433
  %39 = load i32, i32* %caps44, align 8, !dbg !21433
  %and45 = and i32 %39, 8, !dbg !21434
  %tobool46 = icmp ne i32 %and45, 0, !dbg !21434
  br i1 %tobool46, label %if.end49, label %if.then47, !dbg !21435

if.then47:                                        ; preds = %if.then41
  %arraydecay48 = getelementptr inbounds [2 x i64], [2 x i64]* %mask, i64 0, i64 0, !dbg !21436
  call void @__set_bit(i64 4, i64* %arraydecay48) #12, !dbg !21436
  br label %if.end49, !dbg !21436

if.end49:                                         ; preds = %if.then47, %if.then41
  br label %if.end50, !dbg !21437

if.end50:                                         ; preds = %if.end49, %lor.lhs.false38, %if.end22
  %40 = load i64*, i64** %supported.addr, align 8, !dbg !21438
  %41 = load i64*, i64** %supported.addr, align 8, !dbg !21439
  %arraydecay51 = getelementptr inbounds [2 x i64], [2 x i64]* %mask, i64 0, i64 0, !dbg !21440
  %call52 = call i32 @bitmap_and(i64* %40, i64* %41, i64* %arraydecay51, i32 92) #12, !dbg !21441
  %42 = load %struct.phylink_link_state*, %struct.phylink_link_state** %state.addr, align 8, !dbg !21442
  %advertising = getelementptr inbounds %struct.phylink_link_state, %struct.phylink_link_state* %42, i32 0, i32 0, !dbg !21443
  %arraydecay53 = getelementptr inbounds [2 x i64], [2 x i64]* %advertising, i64 0, i64 0, !dbg !21442
  %43 = load %struct.phylink_link_state*, %struct.phylink_link_state** %state.addr, align 8, !dbg !21444
  %advertising54 = getelementptr inbounds %struct.phylink_link_state, %struct.phylink_link_state* %43, i32 0, i32 0, !dbg !21445
  %arraydecay55 = getelementptr inbounds [2 x i64], [2 x i64]* %advertising54, i64 0, i64 0, !dbg !21444
  %arraydecay56 = getelementptr inbounds [2 x i64], [2 x i64]* %mask, i64 0, i64 0, !dbg !21446
  %call57 = call i32 @bitmap_and(i64* %arraydecay53, i64* %arraydecay55, i64* %arraydecay56, i32 92) #12, !dbg !21447
  br label %return, !dbg !21448

return:                                           ; preds = %if.end50, %if.then21, %if.then
  ret void, !dbg !21448
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @macb_mac_pcs_get_state(%struct.phylink_config* %config, %struct.phylink_link_state* %state) #2 !dbg !21449 {
entry:
  %config.addr = alloca %struct.phylink_config*, align 8
  %state.addr = alloca %struct.phylink_link_state*, align 8
  store %struct.phylink_config* %config, %struct.phylink_config** %config.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.phylink_config** %config.addr, metadata !21450, metadata !DIExpression()), !dbg !21451
  store %struct.phylink_link_state* %state, %struct.phylink_link_state** %state.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.phylink_link_state** %state.addr, metadata !21452, metadata !DIExpression()), !dbg !21453
  %0 = load %struct.phylink_link_state*, %struct.phylink_link_state** %state.addr, align 8, !dbg !21454
  %link = getelementptr inbounds %struct.phylink_link_state, %struct.phylink_link_state* %0, i32 0, i32 6, !dbg !21455
  %bf.load = load i8, i8* %link, align 8, !dbg !21456
  %bf.clear = and i8 %bf.load, -2, !dbg !21456
  store i8 %bf.clear, i8* %link, align 8, !dbg !21456
  ret void, !dbg !21457
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @macb_mac_config(%struct.phylink_config* %config, i32 %mode, %struct.phylink_link_state* %state) #2 !dbg !21458 {
entry:
  %lock.addr.i54 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i54, metadata !13124, metadata !DIExpression()), !dbg !21459
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !13130, metadata !DIExpression()), !dbg !21461
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !11065, metadata !DIExpression()), !dbg !21462
  %config.addr = alloca %struct.phylink_config*, align 8
  %mode.addr = alloca i32, align 4
  %state.addr = alloca %struct.phylink_link_state*, align 8
  %ndev = alloca %struct.net_device*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.net_device*, align 8
  %bp = alloca %struct.macb*, align 8
  %flags = alloca i64, align 8
  %old_ctrl = alloca i32, align 4
  %ctrl = alloca i32, align 4
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp3 = alloca i32, align 4
  %__dummy7 = alloca i64, align 8
  %__dummy28 = alloca i64, align 8
  %tmp11 = alloca i32, align 4
  %__v = alloca i32, align 4
  %tmp27 = alloca i32, align 4
  store %struct.phylink_config* %config, %struct.phylink_config** %config.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.phylink_config** %config.addr, metadata !21469, metadata !DIExpression()), !dbg !21470
  store i32 %mode, i32* %mode.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %mode.addr, metadata !21471, metadata !DIExpression()), !dbg !21472
  store %struct.phylink_link_state* %state, %struct.phylink_link_state** %state.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.phylink_link_state** %state.addr, metadata !21473, metadata !DIExpression()), !dbg !21474
  call void @llvm.dbg.declare(metadata %struct.net_device** %ndev, metadata !21475, metadata !DIExpression()), !dbg !21476
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !21477, metadata !DIExpression()), !dbg !21479
  %0 = load %struct.phylink_config*, %struct.phylink_config** %config.addr, align 8, !dbg !21479
  %dev = getelementptr inbounds %struct.phylink_config, %struct.phylink_config* %0, i32 0, i32 0, !dbg !21479
  %1 = load %struct.device*, %struct.device** %dev, align 8, !dbg !21479
  %2 = bitcast %struct.device* %1 to i8*, !dbg !21479
  store i8* %2, i8** %__mptr, align 8, !dbg !21479
  br label %do.body, !dbg !21479

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !21480

do.end:                                           ; preds = %do.body
  %3 = load i8*, i8** %__mptr, align 8, !dbg !21479
  %add.ptr = getelementptr i8, i8* %3, i64 -1024, !dbg !21479
  %4 = bitcast i8* %add.ptr to %struct.net_device*, !dbg !21479
  store %struct.net_device* %4, %struct.net_device** %tmp, align 8, !dbg !21480
  %5 = load %struct.net_device*, %struct.net_device** %tmp, align 8, !dbg !21479
  store %struct.net_device* %5, %struct.net_device** %ndev, align 8, !dbg !21476
  call void @llvm.dbg.declare(metadata %struct.macb** %bp, metadata !21482, metadata !DIExpression()), !dbg !21483
  %6 = load %struct.net_device*, %struct.net_device** %ndev, align 8, !dbg !21484
  %call = call i8* @netdev_priv(%struct.net_device* %6) #12, !dbg !21485
  %7 = bitcast i8* %call to %struct.macb*, !dbg !21485
  store %struct.macb* %7, %struct.macb** %bp, align 8, !dbg !21483
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !21486, metadata !DIExpression()), !dbg !21487
  call void @llvm.dbg.declare(metadata i32* %old_ctrl, metadata !21488, metadata !DIExpression()), !dbg !21489
  call void @llvm.dbg.declare(metadata i32* %ctrl, metadata !21490, metadata !DIExpression()), !dbg !21491
  br label %do.body1, !dbg !21492

do.body1:                                         ; preds = %do.end
  br label %do.body2, !dbg !21493

do.body2:                                         ; preds = %do.body1
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !21494, metadata !DIExpression()), !dbg !21496
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !21497, metadata !DIExpression()), !dbg !21496
  %cmp = icmp eq i64* %__dummy, %__dummy2, !dbg !21496
  %conv = zext i1 %cmp to i32, !dbg !21496
  store i32 1, i32* %tmp3, align 4, !dbg !21496
  %8 = load i32, i32* %tmp3, align 4, !dbg !21496
  br label %do.body4, !dbg !21498

do.body4:                                         ; preds = %do.body2
  br label %do.body5, !dbg !21499

do.body5:                                         ; preds = %do.body4
  br label %do.body6, !dbg !21500

do.body6:                                         ; preds = %do.body5
  call void @llvm.dbg.declare(metadata i64* %__dummy7, metadata !21502, metadata !DIExpression()), !dbg !21505
  call void @llvm.dbg.declare(metadata i64* %__dummy28, metadata !21506, metadata !DIExpression()), !dbg !21505
  %cmp9 = icmp eq i64* %__dummy7, %__dummy28, !dbg !21505
  %conv10 = zext i1 %cmp9 to i32, !dbg !21505
  store i32 1, i32* %tmp11, align 4, !dbg !21505
  %9 = load i32, i32* %tmp11, align 4, !dbg !21505
  %call12 = call i64 @arch_local_irq_save() #12, !dbg !21507
  store i64 %call12, i64* %flags, align 8, !dbg !21507
  br label %do.end13, !dbg !21507

do.end13:                                         ; preds = %do.body6
  br label %do.end14, !dbg !21500

do.end14:                                         ; preds = %do.end13
  br label %do.body15, !dbg !21499

do.body15:                                        ; preds = %do.end14
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #8, !dbg !21508, !srcloc !21509
  br label %do.body16, !dbg !21508

do.body16:                                        ; preds = %do.body15
  %10 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !21510
  %lock = getelementptr inbounds %struct.macb, %struct.macb* %10, i32 0, i32 10, !dbg !21510
  store %struct.spinlock* %lock, %struct.spinlock** %lock.addr.i, align 8
  %11 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !21511
  %12 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %11, i32 0, i32 0, !dbg !21512
  %rlock.i = bitcast %union.anon.1* %12 to %struct.raw_spinlock*, !dbg !21512
  br label %do.end18, !dbg !21510

do.end18:                                         ; preds = %do.body16
  br label %do.end19, !dbg !21508

do.end19:                                         ; preds = %do.end18
  br label %do.end20, !dbg !21499

do.end20:                                         ; preds = %do.end19
  br label %do.end21, !dbg !21498

do.end21:                                         ; preds = %do.end20
  br label %do.end22, !dbg !21493

do.end22:                                         ; preds = %do.end21
  call void @llvm.dbg.declare(metadata i32* %__v, metadata !21513, metadata !DIExpression()), !dbg !21515
  %13 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !21516
  %call23 = call zeroext i1 @macb_is_gem(%struct.macb* %13) #12, !dbg !21516
  br i1 %call23, label %if.then, label %if.else, !dbg !21515

if.then:                                          ; preds = %do.end22
  %14 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !21516
  %macb_reg_readl = getelementptr inbounds %struct.macb, %struct.macb* %14, i32 0, i32 2, !dbg !21516
  %15 = load i32 (%struct.macb*, i32)*, i32 (%struct.macb*, i32)** %macb_reg_readl, align 8, !dbg !21516
  %16 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !21516
  %call24 = call i32 %15(%struct.macb* %16, i32 4) #12, !dbg !21516
  store i32 %call24, i32* %__v, align 4, !dbg !21516
  br label %if.end, !dbg !21516

if.else:                                          ; preds = %do.end22
  %17 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !21516
  %macb_reg_readl25 = getelementptr inbounds %struct.macb, %struct.macb* %17, i32 0, i32 2, !dbg !21516
  %18 = load i32 (%struct.macb*, i32)*, i32 (%struct.macb*, i32)** %macb_reg_readl25, align 8, !dbg !21516
  %19 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !21516
  %call26 = call i32 %18(%struct.macb* %19, i32 4) #12, !dbg !21516
  store i32 %call26, i32* %__v, align 4, !dbg !21516
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %20 = load i32, i32* %__v, align 4, !dbg !21515
  store i32 %20, i32* %tmp27, align 4, !dbg !21516
  %21 = load i32, i32* %tmp27, align 4, !dbg !21515
  store i32 %21, i32* %ctrl, align 4, !dbg !21518
  store i32 %21, i32* %old_ctrl, align 4, !dbg !21519
  %22 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !21520
  %caps = getelementptr inbounds %struct.macb, %struct.macb* %22, i32 0, i32 23, !dbg !21522
  %23 = load i32, i32* %caps, align 8, !dbg !21522
  %and = and i32 %23, 134217728, !dbg !21523
  %tobool = icmp ne i32 %and, 0, !dbg !21523
  br i1 %tobool, label %if.then28, label %if.else33, !dbg !21524

if.then28:                                        ; preds = %if.end
  %24 = load %struct.phylink_link_state*, %struct.phylink_link_state** %state.addr, align 8, !dbg !21525
  %interface = getelementptr inbounds %struct.phylink_link_state, %struct.phylink_link_state* %24, i32 0, i32 2, !dbg !21528
  %25 = load i32, i32* %interface, align 8, !dbg !21528
  %cmp29 = icmp eq i32 %25, 7, !dbg !21529
  br i1 %cmp29, label %if.then31, label %if.end32, !dbg !21530

if.then31:                                        ; preds = %if.then28
  %26 = load i32, i32* %ctrl, align 4, !dbg !21531
  %or = or i32 %26, 8192, !dbg !21531
  store i32 %or, i32* %ctrl, align 4, !dbg !21531
  br label %if.end32, !dbg !21532

if.end32:                                         ; preds = %if.then31, %if.then28
  br label %if.end44, !dbg !21533

if.else33:                                        ; preds = %if.end
  %27 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !21534
  %call34 = call zeroext i1 @macb_is_gem(%struct.macb* %27) #12, !dbg !21536
  br i1 %call34, label %if.then35, label %if.end43, !dbg !21537

if.then35:                                        ; preds = %if.else33
  %28 = load i32, i32* %ctrl, align 4, !dbg !21538
  %and36 = and i32 %28, -134219777, !dbg !21538
  store i32 %and36, i32* %ctrl, align 4, !dbg !21538
  %29 = load %struct.phylink_link_state*, %struct.phylink_link_state** %state.addr, align 8, !dbg !21540
  %interface37 = getelementptr inbounds %struct.phylink_link_state, %struct.phylink_link_state* %29, i32 0, i32 2, !dbg !21542
  %30 = load i32, i32* %interface37, align 8, !dbg !21542
  %cmp38 = icmp eq i32 %30, 4, !dbg !21543
  br i1 %cmp38, label %if.then40, label %if.end42, !dbg !21544

if.then40:                                        ; preds = %if.then35
  %31 = load i32, i32* %ctrl, align 4, !dbg !21545
  %or41 = or i32 %31, 134219776, !dbg !21545
  store i32 %or41, i32* %ctrl, align 4, !dbg !21545
  br label %if.end42, !dbg !21546

if.end42:                                         ; preds = %if.then40, %if.then35
  br label %if.end43, !dbg !21547

if.end43:                                         ; preds = %if.end42, %if.else33
  br label %if.end44

if.end44:                                         ; preds = %if.end43, %if.end32
  %32 = load i32, i32* %old_ctrl, align 4, !dbg !21548
  %33 = load i32, i32* %ctrl, align 4, !dbg !21550
  %xor = xor i32 %32, %33, !dbg !21551
  %tobool45 = icmp ne i32 %xor, 0, !dbg !21551
  br i1 %tobool45, label %if.then46, label %if.end52, !dbg !21552

if.then46:                                        ; preds = %if.end44
  %34 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !21553
  %call47 = call zeroext i1 @macb_is_gem(%struct.macb* %34) #12, !dbg !21553
  br i1 %call47, label %if.then48, label %if.else49, !dbg !21556

if.then48:                                        ; preds = %if.then46
  %35 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !21553
  %macb_reg_writel = getelementptr inbounds %struct.macb, %struct.macb* %35, i32 0, i32 3, !dbg !21553
  %36 = load void (%struct.macb*, i32, i32)*, void (%struct.macb*, i32, i32)** %macb_reg_writel, align 8, !dbg !21553
  %37 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !21553
  %38 = load i32, i32* %ctrl, align 4, !dbg !21553
  call void %36(%struct.macb* %37, i32 4, i32 %38) #12, !dbg !21553
  br label %if.end51, !dbg !21553

if.else49:                                        ; preds = %if.then46
  %39 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !21553
  %macb_reg_writel50 = getelementptr inbounds %struct.macb, %struct.macb* %39, i32 0, i32 3, !dbg !21553
  %40 = load void (%struct.macb*, i32, i32)*, void (%struct.macb*, i32, i32)** %macb_reg_writel50, align 8, !dbg !21553
  %41 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !21553
  %42 = load i32, i32* %ctrl, align 4, !dbg !21553
  call void %40(%struct.macb* %41, i32 4, i32 %42) #12, !dbg !21553
  br label %if.end51

if.end51:                                         ; preds = %if.else49, %if.then48
  br label %if.end52, !dbg !21557

if.end52:                                         ; preds = %if.end51, %if.end44
  %43 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !21558
  %lock53 = getelementptr inbounds %struct.macb, %struct.macb* %43, i32 0, i32 10, !dbg !21559
  %44 = load i64, i64* %flags, align 8, !dbg !21560
  store %struct.spinlock* %lock53, %struct.spinlock** %lock.addr.i54, align 8
  store i64 %44, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !743, metadata !13334, metadata !DIExpression()) #8, !dbg !21561
  call void @llvm.dbg.declare(metadata !743, metadata !13338, metadata !DIExpression()) #8, !dbg !21561
  store i32 1, i32* %tmp.i, align 4, !dbg !21561
  %45 = load i32, i32* %tmp.i, align 4, !dbg !21561
  call void @llvm.dbg.declare(metadata !743, metadata !13339, metadata !DIExpression()) #8, !dbg !21562
  call void @llvm.dbg.declare(metadata !743, metadata !13345, metadata !DIExpression()) #8, !dbg !21562
  store i32 1, i32* %tmp8.i, align 4, !dbg !21562
  %46 = load i32, i32* %tmp8.i, align 4, !dbg !21562
  %47 = load i64, i64* %flags.addr.i, align 8, !dbg !21563
  call void @arch_local_irq_restore(i64 %47) #14, !dbg !21563
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #8, !dbg !21564, !srcloc !13349
  %48 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i54, align 8, !dbg !21565
  %49 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %48, i32 0, i32 0, !dbg !21565
  %rlock.i55 = bitcast %union.anon.1* %49 to %struct.raw_spinlock*, !dbg !21565
  ret void, !dbg !21566
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @macb_mac_an_restart(%struct.phylink_config* %config) #2 !dbg !21567 {
entry:
  %config.addr = alloca %struct.phylink_config*, align 8
  store %struct.phylink_config* %config, %struct.phylink_config** %config.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.phylink_config** %config.addr, metadata !21568, metadata !DIExpression()), !dbg !21569
  ret void, !dbg !21570
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @macb_mac_link_down(%struct.phylink_config* %config, i32 %mode, i32 %interface) #2 !dbg !21571 {
entry:
  %config.addr = alloca %struct.phylink_config*, align 8
  %mode.addr = alloca i32, align 4
  %interface.addr = alloca i32, align 4
  %ndev = alloca %struct.net_device*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.net_device*, align 8
  %bp = alloca %struct.macb*, align 8
  %queue = alloca %struct.macb_queue*, align 8
  %q = alloca i32, align 4
  %ctrl = alloca i32, align 4
  store %struct.phylink_config* %config, %struct.phylink_config** %config.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.phylink_config** %config.addr, metadata !21572, metadata !DIExpression()), !dbg !21573
  store i32 %mode, i32* %mode.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %mode.addr, metadata !21574, metadata !DIExpression()), !dbg !21575
  store i32 %interface, i32* %interface.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %interface.addr, metadata !21576, metadata !DIExpression()), !dbg !21577
  call void @llvm.dbg.declare(metadata %struct.net_device** %ndev, metadata !21578, metadata !DIExpression()), !dbg !21579
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !21580, metadata !DIExpression()), !dbg !21582
  %0 = load %struct.phylink_config*, %struct.phylink_config** %config.addr, align 8, !dbg !21582
  %dev = getelementptr inbounds %struct.phylink_config, %struct.phylink_config* %0, i32 0, i32 0, !dbg !21582
  %1 = load %struct.device*, %struct.device** %dev, align 8, !dbg !21582
  %2 = bitcast %struct.device* %1 to i8*, !dbg !21582
  store i8* %2, i8** %__mptr, align 8, !dbg !21582
  br label %do.body, !dbg !21582

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !21583

do.end:                                           ; preds = %do.body
  %3 = load i8*, i8** %__mptr, align 8, !dbg !21582
  %add.ptr = getelementptr i8, i8* %3, i64 -1024, !dbg !21582
  %4 = bitcast i8* %add.ptr to %struct.net_device*, !dbg !21582
  store %struct.net_device* %4, %struct.net_device** %tmp, align 8, !dbg !21583
  %5 = load %struct.net_device*, %struct.net_device** %tmp, align 8, !dbg !21582
  store %struct.net_device* %5, %struct.net_device** %ndev, align 8, !dbg !21579
  call void @llvm.dbg.declare(metadata %struct.macb** %bp, metadata !21585, metadata !DIExpression()), !dbg !21586
  %6 = load %struct.net_device*, %struct.net_device** %ndev, align 8, !dbg !21587
  %call = call i8* @netdev_priv(%struct.net_device* %6) #12, !dbg !21588
  %7 = bitcast i8* %call to %struct.macb*, !dbg !21588
  store %struct.macb* %7, %struct.macb** %bp, align 8, !dbg !21586
  call void @llvm.dbg.declare(metadata %struct.macb_queue** %queue, metadata !21589, metadata !DIExpression()), !dbg !21590
  call void @llvm.dbg.declare(metadata i32* %q, metadata !21591, metadata !DIExpression()), !dbg !21592
  call void @llvm.dbg.declare(metadata i32* %ctrl, metadata !21593, metadata !DIExpression()), !dbg !21594
  %8 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !21595
  %caps = getelementptr inbounds %struct.macb, %struct.macb* %8, i32 0, i32 23, !dbg !21597
  %9 = load i32, i32* %caps, align 8, !dbg !21597
  %and = and i32 %9, 134217728, !dbg !21598
  %tobool = icmp ne i32 %and, 0, !dbg !21598
  br i1 %tobool, label %if.end, label %if.then, !dbg !21599

if.then:                                          ; preds = %do.end
  store i32 0, i32* %q, align 4, !dbg !21600
  %10 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !21602
  %queues = getelementptr inbounds %struct.macb, %struct.macb* %10, i32 0, i32 9, !dbg !21603
  %arraydecay = getelementptr inbounds [8 x %struct.macb_queue], [8 x %struct.macb_queue]* %queues, i64 0, i64 0, !dbg !21602
  store %struct.macb_queue* %arraydecay, %struct.macb_queue** %queue, align 8, !dbg !21604
  br label %for.cond, !dbg !21605

for.cond:                                         ; preds = %for.inc, %if.then
  %11 = load i32, i32* %q, align 4, !dbg !21606
  %12 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !21608
  %num_queues = getelementptr inbounds %struct.macb, %struct.macb* %12, i32 0, i32 7, !dbg !21609
  %13 = load i32, i32* %num_queues, align 8, !dbg !21609
  %cmp = icmp ult i32 %11, %13, !dbg !21610
  br i1 %cmp, label %for.body, label %for.end, !dbg !21611

for.body:                                         ; preds = %for.cond
  %14 = load %struct.macb_queue*, %struct.macb_queue** %queue, align 8, !dbg !21612
  %bp1 = getelementptr inbounds %struct.macb_queue, %struct.macb_queue* %14, i32 0, i32 0, !dbg !21612
  %15 = load %struct.macb*, %struct.macb** %bp1, align 8, !dbg !21612
  %macb_reg_writel = getelementptr inbounds %struct.macb, %struct.macb* %15, i32 0, i32 3, !dbg !21612
  %16 = load void (%struct.macb*, i32, i32)*, void (%struct.macb*, i32, i32)** %macb_reg_writel, align 8, !dbg !21612
  %17 = load %struct.macb_queue*, %struct.macb_queue** %queue, align 8, !dbg !21612
  %bp2 = getelementptr inbounds %struct.macb_queue, %struct.macb_queue* %17, i32 0, i32 0, !dbg !21612
  %18 = load %struct.macb*, %struct.macb** %bp2, align 8, !dbg !21612
  %19 = load %struct.macb_queue*, %struct.macb_queue** %queue, align 8, !dbg !21612
  %IDR = getelementptr inbounds %struct.macb_queue, %struct.macb_queue* %19, i32 0, i32 4, !dbg !21612
  %20 = load i32, i32* %IDR, align 4, !dbg !21612
  %21 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !21612
  %rx_intr_mask = getelementptr inbounds %struct.macb, %struct.macb* %21, i32 0, i32 48, !dbg !21612
  %22 = load i32, i32* %rx_intr_mask, align 8, !dbg !21612
  %or = or i32 %22, 248, !dbg !21612
  %or3 = or i32 %or, 2048, !dbg !21612
  call void %16(%struct.macb* %18, i32 %20, i32 %or3) #12, !dbg !21612
  br label %for.inc, !dbg !21612

for.inc:                                          ; preds = %for.body
  %23 = load i32, i32* %q, align 4, !dbg !21613
  %inc = add i32 %23, 1, !dbg !21613
  store i32 %inc, i32* %q, align 4, !dbg !21613
  %24 = load %struct.macb_queue*, %struct.macb_queue** %queue, align 8, !dbg !21614
  %incdec.ptr = getelementptr %struct.macb_queue, %struct.macb_queue* %24, i32 1, !dbg !21614
  store %struct.macb_queue* %incdec.ptr, %struct.macb_queue** %queue, align 8, !dbg !21614
  br label %for.cond, !dbg !21615, !llvm.loop !21616

for.end:                                          ; preds = %for.cond
  br label %if.end, !dbg !21617

if.end:                                           ; preds = %for.end, %do.end
  %25 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !21618
  %macb_reg_readl = getelementptr inbounds %struct.macb, %struct.macb* %25, i32 0, i32 2, !dbg !21618
  %26 = load i32 (%struct.macb*, i32)*, i32 (%struct.macb*, i32)** %macb_reg_readl, align 8, !dbg !21618
  %27 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !21618
  %call4 = call i32 %26(%struct.macb* %27, i32 0) #12, !dbg !21618
  %and5 = and i32 %call4, -13, !dbg !21619
  store i32 %and5, i32* %ctrl, align 4, !dbg !21620
  %28 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !21621
  %macb_reg_writel6 = getelementptr inbounds %struct.macb, %struct.macb* %28, i32 0, i32 3, !dbg !21621
  %29 = load void (%struct.macb*, i32, i32)*, void (%struct.macb*, i32, i32)** %macb_reg_writel6, align 8, !dbg !21621
  %30 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !21621
  %31 = load i32, i32* %ctrl, align 4, !dbg !21621
  call void %29(%struct.macb* %30, i32 0, i32 %31) #12, !dbg !21621
  %32 = load %struct.net_device*, %struct.net_device** %ndev, align 8, !dbg !21622
  call void @netif_tx_stop_all_queues(%struct.net_device* %32) #12, !dbg !21623
  ret void, !dbg !21624
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @macb_mac_link_up(%struct.phylink_config* %config, %struct.phy_device* %phy, i32 %mode, i32 %interface, i32 %speed, i32 %duplex, i1 zeroext %tx_pause, i1 zeroext %rx_pause) #2 !dbg !21625 {
entry:
  %lock.addr.i72 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i72, metadata !13124, metadata !DIExpression()), !dbg !21626
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !13130, metadata !DIExpression()), !dbg !21628
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !11065, metadata !DIExpression()), !dbg !21629
  %config.addr = alloca %struct.phylink_config*, align 8
  %phy.addr = alloca %struct.phy_device*, align 8
  %mode.addr = alloca i32, align 4
  %interface.addr = alloca i32, align 4
  %speed.addr = alloca i32, align 4
  %duplex.addr = alloca i32, align 4
  %tx_pause.addr = alloca i8, align 1
  %rx_pause.addr = alloca i8, align 1
  %ndev = alloca %struct.net_device*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.net_device*, align 8
  %bp = alloca %struct.macb*, align 8
  %queue = alloca %struct.macb_queue*, align 8
  %flags = alloca i64, align 8
  %q = alloca i32, align 4
  %ctrl = alloca i32, align 4
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp4 = alloca i32, align 4
  %__dummy8 = alloca i64, align 8
  %__dummy29 = alloca i64, align 8
  %tmp12 = alloca i32, align 4
  %__v = alloca i32, align 4
  %tmp28 = alloca i32, align 4
  store %struct.phylink_config* %config, %struct.phylink_config** %config.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.phylink_config** %config.addr, metadata !21636, metadata !DIExpression()), !dbg !21637
  store %struct.phy_device* %phy, %struct.phy_device** %phy.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.phy_device** %phy.addr, metadata !21638, metadata !DIExpression()), !dbg !21639
  store i32 %mode, i32* %mode.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %mode.addr, metadata !21640, metadata !DIExpression()), !dbg !21641
  store i32 %interface, i32* %interface.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %interface.addr, metadata !21642, metadata !DIExpression()), !dbg !21643
  store i32 %speed, i32* %speed.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %speed.addr, metadata !21644, metadata !DIExpression()), !dbg !21645
  store i32 %duplex, i32* %duplex.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %duplex.addr, metadata !21646, metadata !DIExpression()), !dbg !21647
  %frombool = zext i1 %tx_pause to i8
  store i8 %frombool, i8* %tx_pause.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %tx_pause.addr, metadata !21648, metadata !DIExpression()), !dbg !21649
  %frombool1 = zext i1 %rx_pause to i8
  store i8 %frombool1, i8* %rx_pause.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %rx_pause.addr, metadata !21650, metadata !DIExpression()), !dbg !21651
  call void @llvm.dbg.declare(metadata %struct.net_device** %ndev, metadata !21652, metadata !DIExpression()), !dbg !21653
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !21654, metadata !DIExpression()), !dbg !21656
  %0 = load %struct.phylink_config*, %struct.phylink_config** %config.addr, align 8, !dbg !21656
  %dev = getelementptr inbounds %struct.phylink_config, %struct.phylink_config* %0, i32 0, i32 0, !dbg !21656
  %1 = load %struct.device*, %struct.device** %dev, align 8, !dbg !21656
  %2 = bitcast %struct.device* %1 to i8*, !dbg !21656
  store i8* %2, i8** %__mptr, align 8, !dbg !21656
  br label %do.body, !dbg !21656

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !21657

do.end:                                           ; preds = %do.body
  %3 = load i8*, i8** %__mptr, align 8, !dbg !21656
  %add.ptr = getelementptr i8, i8* %3, i64 -1024, !dbg !21656
  %4 = bitcast i8* %add.ptr to %struct.net_device*, !dbg !21656
  store %struct.net_device* %4, %struct.net_device** %tmp, align 8, !dbg !21657
  %5 = load %struct.net_device*, %struct.net_device** %tmp, align 8, !dbg !21656
  store %struct.net_device* %5, %struct.net_device** %ndev, align 8, !dbg !21653
  call void @llvm.dbg.declare(metadata %struct.macb** %bp, metadata !21659, metadata !DIExpression()), !dbg !21660
  %6 = load %struct.net_device*, %struct.net_device** %ndev, align 8, !dbg !21661
  %call = call i8* @netdev_priv(%struct.net_device* %6) #12, !dbg !21662
  %7 = bitcast i8* %call to %struct.macb*, !dbg !21662
  store %struct.macb* %7, %struct.macb** %bp, align 8, !dbg !21660
  call void @llvm.dbg.declare(metadata %struct.macb_queue** %queue, metadata !21663, metadata !DIExpression()), !dbg !21664
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !21665, metadata !DIExpression()), !dbg !21666
  call void @llvm.dbg.declare(metadata i32* %q, metadata !21667, metadata !DIExpression()), !dbg !21668
  call void @llvm.dbg.declare(metadata i32* %ctrl, metadata !21669, metadata !DIExpression()), !dbg !21670
  br label %do.body2, !dbg !21671

do.body2:                                         ; preds = %do.end
  br label %do.body3, !dbg !21672

do.body3:                                         ; preds = %do.body2
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !21673, metadata !DIExpression()), !dbg !21675
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !21676, metadata !DIExpression()), !dbg !21675
  %cmp = icmp eq i64* %__dummy, %__dummy2, !dbg !21675
  %conv = zext i1 %cmp to i32, !dbg !21675
  store i32 1, i32* %tmp4, align 4, !dbg !21675
  %8 = load i32, i32* %tmp4, align 4, !dbg !21675
  br label %do.body5, !dbg !21677

do.body5:                                         ; preds = %do.body3
  br label %do.body6, !dbg !21678

do.body6:                                         ; preds = %do.body5
  br label %do.body7, !dbg !21679

do.body7:                                         ; preds = %do.body6
  call void @llvm.dbg.declare(metadata i64* %__dummy8, metadata !21681, metadata !DIExpression()), !dbg !21684
  call void @llvm.dbg.declare(metadata i64* %__dummy29, metadata !21685, metadata !DIExpression()), !dbg !21684
  %cmp10 = icmp eq i64* %__dummy8, %__dummy29, !dbg !21684
  %conv11 = zext i1 %cmp10 to i32, !dbg !21684
  store i32 1, i32* %tmp12, align 4, !dbg !21684
  %9 = load i32, i32* %tmp12, align 4, !dbg !21684
  %call13 = call i64 @arch_local_irq_save() #12, !dbg !21686
  store i64 %call13, i64* %flags, align 8, !dbg !21686
  br label %do.end14, !dbg !21686

do.end14:                                         ; preds = %do.body7
  br label %do.end15, !dbg !21679

do.end15:                                         ; preds = %do.end14
  br label %do.body16, !dbg !21678

do.body16:                                        ; preds = %do.end15
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #8, !dbg !21687, !srcloc !21688
  br label %do.body17, !dbg !21687

do.body17:                                        ; preds = %do.body16
  %10 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !21689
  %lock = getelementptr inbounds %struct.macb, %struct.macb* %10, i32 0, i32 10, !dbg !21689
  store %struct.spinlock* %lock, %struct.spinlock** %lock.addr.i, align 8
  %11 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !21690
  %12 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %11, i32 0, i32 0, !dbg !21691
  %rlock.i = bitcast %union.anon.1* %12 to %struct.raw_spinlock*, !dbg !21691
  br label %do.end19, !dbg !21689

do.end19:                                         ; preds = %do.body17
  br label %do.end20, !dbg !21687

do.end20:                                         ; preds = %do.end19
  br label %do.end21, !dbg !21678

do.end21:                                         ; preds = %do.end20
  br label %do.end22, !dbg !21677

do.end22:                                         ; preds = %do.end21
  br label %do.end23, !dbg !21672

do.end23:                                         ; preds = %do.end22
  call void @llvm.dbg.declare(metadata i32* %__v, metadata !21692, metadata !DIExpression()), !dbg !21694
  %13 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !21695
  %call24 = call zeroext i1 @macb_is_gem(%struct.macb* %13) #12, !dbg !21695
  br i1 %call24, label %if.then, label %if.else, !dbg !21694

if.then:                                          ; preds = %do.end23
  %14 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !21695
  %macb_reg_readl = getelementptr inbounds %struct.macb, %struct.macb* %14, i32 0, i32 2, !dbg !21695
  %15 = load i32 (%struct.macb*, i32)*, i32 (%struct.macb*, i32)** %macb_reg_readl, align 8, !dbg !21695
  %16 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !21695
  %call25 = call i32 %15(%struct.macb* %16, i32 4) #12, !dbg !21695
  store i32 %call25, i32* %__v, align 4, !dbg !21695
  br label %if.end, !dbg !21695

if.else:                                          ; preds = %do.end23
  %17 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !21695
  %macb_reg_readl26 = getelementptr inbounds %struct.macb, %struct.macb* %17, i32 0, i32 2, !dbg !21695
  %18 = load i32 (%struct.macb*, i32)*, i32 (%struct.macb*, i32)** %macb_reg_readl26, align 8, !dbg !21695
  %19 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !21695
  %call27 = call i32 %18(%struct.macb* %19, i32 4) #12, !dbg !21695
  store i32 %call27, i32* %__v, align 4, !dbg !21695
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %20 = load i32, i32* %__v, align 4, !dbg !21694
  store i32 %20, i32* %tmp28, align 4, !dbg !21695
  %21 = load i32, i32* %tmp28, align 4, !dbg !21694
  store i32 %21, i32* %ctrl, align 4, !dbg !21697
  %22 = load i32, i32* %ctrl, align 4, !dbg !21698
  %and = and i32 %22, -4, !dbg !21698
  store i32 %and, i32* %ctrl, align 4, !dbg !21698
  %23 = load i32, i32* %speed.addr, align 4, !dbg !21699
  %cmp29 = icmp eq i32 %23, 100, !dbg !21701
  br i1 %cmp29, label %if.then31, label %if.end32, !dbg !21702

if.then31:                                        ; preds = %if.end
  %24 = load i32, i32* %ctrl, align 4, !dbg !21703
  %or = or i32 %24, 1, !dbg !21703
  store i32 %or, i32* %ctrl, align 4, !dbg !21703
  br label %if.end32, !dbg !21704

if.end32:                                         ; preds = %if.then31, %if.end
  %25 = load i32, i32* %duplex.addr, align 4, !dbg !21705
  %tobool = icmp ne i32 %25, 0, !dbg !21705
  br i1 %tobool, label %if.then33, label %if.end35, !dbg !21707

if.then33:                                        ; preds = %if.end32
  %26 = load i32, i32* %ctrl, align 4, !dbg !21708
  %or34 = or i32 %26, 2, !dbg !21708
  store i32 %or34, i32* %ctrl, align 4, !dbg !21708
  br label %if.end35, !dbg !21709

if.end35:                                         ; preds = %if.then33, %if.end32
  %27 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !21710
  %caps = getelementptr inbounds %struct.macb, %struct.macb* %27, i32 0, i32 23, !dbg !21712
  %28 = load i32, i32* %caps, align 8, !dbg !21712
  %and36 = and i32 %28, 134217728, !dbg !21713
  %tobool37 = icmp ne i32 %and36, 0, !dbg !21713
  br i1 %tobool37, label %if.end59, label %if.then38, !dbg !21714

if.then38:                                        ; preds = %if.end35
  %29 = load i32, i32* %ctrl, align 4, !dbg !21715
  %and39 = and i32 %29, -8193, !dbg !21715
  store i32 %and39, i32* %ctrl, align 4, !dbg !21715
  %30 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !21717
  %call40 = call zeroext i1 @macb_is_gem(%struct.macb* %30) #12, !dbg !21719
  br i1 %call40, label %if.then41, label %if.end48, !dbg !21720

if.then41:                                        ; preds = %if.then38
  %31 = load i32, i32* %ctrl, align 4, !dbg !21721
  %and42 = and i32 %31, -1025, !dbg !21721
  store i32 %and42, i32* %ctrl, align 4, !dbg !21721
  %32 = load i32, i32* %speed.addr, align 4, !dbg !21723
  %cmp43 = icmp eq i32 %32, 1000, !dbg !21725
  br i1 %cmp43, label %if.then45, label %if.end47, !dbg !21726

if.then45:                                        ; preds = %if.then41
  %33 = load i32, i32* %ctrl, align 4, !dbg !21727
  %or46 = or i32 %33, 1024, !dbg !21727
  store i32 %or46, i32* %ctrl, align 4, !dbg !21727
  br label %if.end47, !dbg !21728

if.end47:                                         ; preds = %if.then45, %if.then41
  br label %if.end48, !dbg !21729

if.end48:                                         ; preds = %if.end47, %if.then38
  %34 = load i8, i8* %rx_pause.addr, align 1, !dbg !21730
  %tobool49 = trunc i8 %34 to i1, !dbg !21730
  br i1 %tobool49, label %if.then50, label %if.end52, !dbg !21732

if.then50:                                        ; preds = %if.end48
  %35 = load i32, i32* %ctrl, align 4, !dbg !21733
  %or51 = or i32 %35, 8192, !dbg !21733
  store i32 %or51, i32* %ctrl, align 4, !dbg !21733
  br label %if.end52, !dbg !21734

if.end52:                                         ; preds = %if.then50, %if.end48
  %36 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !21735
  %tx_clk = getelementptr inbounds %struct.macb, %struct.macb* %36, i32 0, i32 14, !dbg !21736
  %37 = load %struct.clk*, %struct.clk** %tx_clk, align 8, !dbg !21736
  %38 = load i32, i32* %speed.addr, align 4, !dbg !21737
  %39 = load %struct.net_device*, %struct.net_device** %ndev, align 8, !dbg !21738
  call void @macb_set_tx_clk(%struct.clk* %37, i32 %38, %struct.net_device* %39) #12, !dbg !21739
  %40 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !21740
  %macbgem_ops = getelementptr inbounds %struct.macb, %struct.macb* %40, i32 0, i32 19, !dbg !21741
  %mog_init_rings = getelementptr inbounds %struct.macb_or_gem_ops, %struct.macb_or_gem_ops* %macbgem_ops, i32 0, i32 2, !dbg !21742
  %41 = load void (%struct.macb*)*, void (%struct.macb*)** %mog_init_rings, align 8, !dbg !21742
  %42 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !21743
  call void %41(%struct.macb* %42) #12, !dbg !21740
  %43 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !21744
  call void @macb_init_buffers(%struct.macb* %43) #12, !dbg !21745
  store i32 0, i32* %q, align 4, !dbg !21746
  %44 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !21748
  %queues = getelementptr inbounds %struct.macb, %struct.macb* %44, i32 0, i32 9, !dbg !21749
  %arraydecay = getelementptr inbounds [8 x %struct.macb_queue], [8 x %struct.macb_queue]* %queues, i64 0, i64 0, !dbg !21748
  store %struct.macb_queue* %arraydecay, %struct.macb_queue** %queue, align 8, !dbg !21750
  br label %for.cond, !dbg !21751

for.cond:                                         ; preds = %for.inc, %if.end52
  %45 = load i32, i32* %q, align 4, !dbg !21752
  %46 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !21754
  %num_queues = getelementptr inbounds %struct.macb, %struct.macb* %46, i32 0, i32 7, !dbg !21755
  %47 = load i32, i32* %num_queues, align 8, !dbg !21755
  %cmp53 = icmp ult i32 %45, %47, !dbg !21756
  br i1 %cmp53, label %for.body, label %for.end, !dbg !21757

for.body:                                         ; preds = %for.cond
  %48 = load %struct.macb_queue*, %struct.macb_queue** %queue, align 8, !dbg !21758
  %bp55 = getelementptr inbounds %struct.macb_queue, %struct.macb_queue* %48, i32 0, i32 0, !dbg !21758
  %49 = load %struct.macb*, %struct.macb** %bp55, align 8, !dbg !21758
  %macb_reg_writel = getelementptr inbounds %struct.macb, %struct.macb* %49, i32 0, i32 3, !dbg !21758
  %50 = load void (%struct.macb*, i32, i32)*, void (%struct.macb*, i32, i32)** %macb_reg_writel, align 8, !dbg !21758
  %51 = load %struct.macb_queue*, %struct.macb_queue** %queue, align 8, !dbg !21758
  %bp56 = getelementptr inbounds %struct.macb_queue, %struct.macb_queue* %51, i32 0, i32 0, !dbg !21758
  %52 = load %struct.macb*, %struct.macb** %bp56, align 8, !dbg !21758
  %53 = load %struct.macb_queue*, %struct.macb_queue** %queue, align 8, !dbg !21758
  %IER = getelementptr inbounds %struct.macb_queue, %struct.macb_queue* %53, i32 0, i32 3, !dbg !21758
  %54 = load i32, i32* %IER, align 8, !dbg !21758
  %55 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !21758
  %rx_intr_mask = getelementptr inbounds %struct.macb, %struct.macb* %55, i32 0, i32 48, !dbg !21758
  %56 = load i32, i32* %rx_intr_mask, align 8, !dbg !21758
  %or57 = or i32 %56, 248, !dbg !21758
  %or58 = or i32 %or57, 2048, !dbg !21758
  call void %50(%struct.macb* %52, i32 %54, i32 %or58) #12, !dbg !21758
  br label %for.inc, !dbg !21758

for.inc:                                          ; preds = %for.body
  %57 = load i32, i32* %q, align 4, !dbg !21759
  %inc = add i32 %57, 1, !dbg !21759
  store i32 %inc, i32* %q, align 4, !dbg !21759
  %58 = load %struct.macb_queue*, %struct.macb_queue** %queue, align 8, !dbg !21760
  %incdec.ptr = getelementptr %struct.macb_queue, %struct.macb_queue* %58, i32 1, !dbg !21760
  store %struct.macb_queue* %incdec.ptr, %struct.macb_queue** %queue, align 8, !dbg !21760
  br label %for.cond, !dbg !21761, !llvm.loop !21762

for.end:                                          ; preds = %for.cond
  br label %if.end59, !dbg !21764

if.end59:                                         ; preds = %for.end, %if.end35
  %59 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !21765
  %call60 = call zeroext i1 @macb_is_gem(%struct.macb* %59) #12, !dbg !21765
  br i1 %call60, label %if.then61, label %if.else63, !dbg !21768

if.then61:                                        ; preds = %if.end59
  %60 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !21765
  %macb_reg_writel62 = getelementptr inbounds %struct.macb, %struct.macb* %60, i32 0, i32 3, !dbg !21765
  %61 = load void (%struct.macb*, i32, i32)*, void (%struct.macb*, i32, i32)** %macb_reg_writel62, align 8, !dbg !21765
  %62 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !21765
  %63 = load i32, i32* %ctrl, align 4, !dbg !21765
  call void %61(%struct.macb* %62, i32 4, i32 %63) #12, !dbg !21765
  br label %if.end65, !dbg !21765

if.else63:                                        ; preds = %if.end59
  %64 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !21765
  %macb_reg_writel64 = getelementptr inbounds %struct.macb, %struct.macb* %64, i32 0, i32 3, !dbg !21765
  %65 = load void (%struct.macb*, i32, i32)*, void (%struct.macb*, i32, i32)** %macb_reg_writel64, align 8, !dbg !21765
  %66 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !21765
  %67 = load i32, i32* %ctrl, align 4, !dbg !21765
  call void %65(%struct.macb* %66, i32 4, i32 %67) #12, !dbg !21765
  br label %if.end65

if.end65:                                         ; preds = %if.else63, %if.then61
  %68 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !21769
  %lock66 = getelementptr inbounds %struct.macb, %struct.macb* %68, i32 0, i32 10, !dbg !21770
  %69 = load i64, i64* %flags, align 8, !dbg !21771
  store %struct.spinlock* %lock66, %struct.spinlock** %lock.addr.i72, align 8
  store i64 %69, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !743, metadata !13334, metadata !DIExpression()) #8, !dbg !21772
  call void @llvm.dbg.declare(metadata !743, metadata !13338, metadata !DIExpression()) #8, !dbg !21772
  store i32 1, i32* %tmp.i, align 4, !dbg !21772
  %70 = load i32, i32* %tmp.i, align 4, !dbg !21772
  call void @llvm.dbg.declare(metadata !743, metadata !13339, metadata !DIExpression()) #8, !dbg !21773
  call void @llvm.dbg.declare(metadata !743, metadata !13345, metadata !DIExpression()) #8, !dbg !21773
  store i32 1, i32* %tmp8.i, align 4, !dbg !21773
  %71 = load i32, i32* %tmp8.i, align 4, !dbg !21773
  %72 = load i64, i64* %flags.addr.i, align 8, !dbg !21774
  call void @arch_local_irq_restore(i64 %72) #14, !dbg !21774
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #8, !dbg !21775, !srcloc !13349
  %73 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i72, align 8, !dbg !21776
  %74 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %73, i32 0, i32 0, !dbg !21776
  %rlock.i73 = bitcast %union.anon.1* %74 to %struct.raw_spinlock*, !dbg !21776
  %75 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !21777
  %macb_reg_writel67 = getelementptr inbounds %struct.macb, %struct.macb* %75, i32 0, i32 3, !dbg !21777
  %76 = load void (%struct.macb*, i32, i32)*, void (%struct.macb*, i32, i32)** %macb_reg_writel67, align 8, !dbg !21777
  %77 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !21777
  %78 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !21777
  %macb_reg_readl68 = getelementptr inbounds %struct.macb, %struct.macb* %78, i32 0, i32 2, !dbg !21777
  %79 = load i32 (%struct.macb*, i32)*, i32 (%struct.macb*, i32)** %macb_reg_readl68, align 8, !dbg !21777
  %80 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !21777
  %call69 = call i32 %79(%struct.macb* %80, i32 0) #12, !dbg !21777
  %or70 = or i32 %call69, 4, !dbg !21777
  %or71 = or i32 %or70, 8, !dbg !21777
  call void %76(%struct.macb* %77, i32 0, i32 %or71) #12, !dbg !21777
  %81 = load %struct.net_device*, %struct.net_device** %ndev, align 8, !dbg !21778
  call void @netif_tx_wake_all_queues(%struct.net_device* %81) #12, !dbg !21779
  ret void, !dbg !21780
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @bitmap_zero(i64* %dst, i32 %nbits) #2 !dbg !21781 {
entry:
  %dst.addr = alloca i64*, align 8
  %nbits.addr = alloca i32, align 4
  %len = alloca i32, align 4
  store i64* %dst, i64** %dst.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %dst.addr, metadata !21785, metadata !DIExpression()), !dbg !21786
  store i32 %nbits, i32* %nbits.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %nbits.addr, metadata !21787, metadata !DIExpression()), !dbg !21788
  call void @llvm.dbg.declare(metadata i32* %len, metadata !21789, metadata !DIExpression()), !dbg !21790
  %0 = load i32, i32* %nbits.addr, align 4, !dbg !21791
  %conv = zext i32 %0 to i64, !dbg !21791
  %add = add i64 %conv, 64, !dbg !21791
  %sub = sub i64 %add, 1, !dbg !21791
  %div = udiv i64 %sub, 64, !dbg !21791
  %mul = mul i64 %div, 8, !dbg !21792
  %conv1 = trunc i64 %mul to i32, !dbg !21791
  store i32 %conv1, i32* %len, align 4, !dbg !21790
  %1 = load i64*, i64** %dst.addr, align 8, !dbg !21793
  %2 = bitcast i64* %1 to i8*, !dbg !21794
  %3 = load i32, i32* %len, align 4, !dbg !21795
  %conv2 = zext i32 %3 to i64, !dbg !21795
  call void @llvm.memset.p0i8.i64(i8* align 8 %2, i8 0, i64 %conv2, i1 false), !dbg !21794
  ret void, !dbg !21796
}

; Function Attrs: noredzone
declare dso_local void @phylink_set_port_modes(i64*) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @__set_bit(i64 %nr, i64* %addr) #2 !dbg !21797 {
entry:
  %nr.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %nr.addr.i, metadata !21798, metadata !DIExpression()), !dbg !21800
  %addr.addr.i = alloca i64*, align 8
  call void @llvm.dbg.declare(metadata i64** %addr.addr.i, metadata !21802, metadata !DIExpression()), !dbg !21803
  %v.addr.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %v.addr.i, metadata !21804, metadata !DIExpression()), !dbg !21806
  %size.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i, metadata !21808, metadata !DIExpression()), !dbg !21809
  %nr.addr = alloca i64, align 8
  %addr.addr = alloca i64*, align 8
  store i64 %nr, i64* %nr.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %nr.addr, metadata !21810, metadata !DIExpression()), !dbg !21811
  store i64* %addr, i64** %addr.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %addr.addr, metadata !21812, metadata !DIExpression()), !dbg !21813
  %0 = load i64*, i64** %addr.addr, align 8, !dbg !21814
  %1 = load i64, i64* %nr.addr, align 8, !dbg !21815
  %div = sdiv i64 %1, 64, !dbg !21815
  %add.ptr = getelementptr i64, i64* %0, i64 %div, !dbg !21816
  %2 = bitcast i64* %add.ptr to i8*, !dbg !21814
  store i8* %2, i8** %v.addr.i, align 8
  store i64 8, i64* %size.addr.i, align 8
  %3 = load i8*, i8** %v.addr.i, align 8, !dbg !21817
  %4 = load i64, i64* %size.addr.i, align 8, !dbg !21818
  %conv.i = trunc i64 %4 to i32, !dbg !21818
  %call.i = call zeroext i1 @kasan_check_write(i8* %3, i32 %conv.i) #14, !dbg !21819
  %5 = load i8*, i8** %v.addr.i, align 8, !dbg !21820
  %6 = load i64, i64* %size.addr.i, align 8, !dbg !21820
  call void @kcsan_check_access(i8* %5, i64 %6, i32 1) #14, !dbg !21820
  %7 = load i64, i64* %nr.addr, align 8, !dbg !21821
  %8 = load i64*, i64** %addr.addr, align 8, !dbg !21822
  store i64 %7, i64* %nr.addr.i, align 8
  store i64* %8, i64** %addr.addr.i, align 8
  %9 = load i64*, i64** %addr.addr.i, align 8, !dbg !21823
  %10 = load i64, i64* %nr.addr.i, align 8, !dbg !21824
  call void asm sideeffect " btsq  $1,$0", "*m,Ir,~{memory},~{dirflag},~{fpsr},~{flags}"(i64* %9, i64 %10) #8, !dbg !21825, !srcloc !21826
  ret void, !dbg !21827
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @bitmap_and(i64* %dst, i64* %src1, i64* %src2, i32 %nbits) #2 !dbg !21828 {
entry:
  %retval = alloca i32, align 4
  %dst.addr = alloca i64*, align 8
  %src1.addr = alloca i64*, align 8
  %src2.addr = alloca i64*, align 8
  %nbits.addr = alloca i32, align 4
  store i64* %dst, i64** %dst.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %dst.addr, metadata !21831, metadata !DIExpression()), !dbg !21832
  store i64* %src1, i64** %src1.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %src1.addr, metadata !21833, metadata !DIExpression()), !dbg !21834
  store i64* %src2, i64** %src2.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %src2.addr, metadata !21835, metadata !DIExpression()), !dbg !21836
  store i32 %nbits, i32* %nbits.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %nbits.addr, metadata !21837, metadata !DIExpression()), !dbg !21838
  %0 = load i32, i32* %nbits.addr, align 4, !dbg !21839
  %1 = call i1 @llvm.is.constant.i32(i32 %0), !dbg !21839
  br i1 %1, label %land.lhs.true, label %if.end, !dbg !21839

land.lhs.true:                                    ; preds = %entry
  %2 = load i32, i32* %nbits.addr, align 4, !dbg !21839
  %cmp = icmp ule i32 %2, 64, !dbg !21839
  br i1 %cmp, label %land.lhs.true1, label %if.end, !dbg !21839

land.lhs.true1:                                   ; preds = %land.lhs.true
  %3 = load i32, i32* %nbits.addr, align 4, !dbg !21839
  %cmp2 = icmp ugt i32 %3, 0, !dbg !21839
  br i1 %cmp2, label %if.then, label %if.end, !dbg !21841

if.then:                                          ; preds = %land.lhs.true1
  %4 = load i64*, i64** %src1.addr, align 8, !dbg !21842
  %5 = load i64, i64* %4, align 8, !dbg !21843
  %6 = load i64*, i64** %src2.addr, align 8, !dbg !21844
  %7 = load i64, i64* %6, align 8, !dbg !21845
  %and = and i64 %5, %7, !dbg !21846
  %8 = load i32, i32* %nbits.addr, align 4, !dbg !21847
  %sub = sub i32 0, %8, !dbg !21847
  %and3 = and i32 %sub, 63, !dbg !21847
  %sh_prom = zext i32 %and3 to i64, !dbg !21847
  %shr = lshr i64 -1, %sh_prom, !dbg !21847
  %and4 = and i64 %and, %shr, !dbg !21848
  %9 = load i64*, i64** %dst.addr, align 8, !dbg !21849
  store i64 %and4, i64* %9, align 8, !dbg !21850
  %cmp5 = icmp ne i64 %and4, 0, !dbg !21851
  %conv = zext i1 %cmp5 to i32, !dbg !21851
  store i32 %conv, i32* %retval, align 4, !dbg !21852
  br label %return, !dbg !21852

if.end:                                           ; preds = %land.lhs.true1, %land.lhs.true, %entry
  %10 = load i64*, i64** %dst.addr, align 8, !dbg !21853
  %11 = load i64*, i64** %src1.addr, align 8, !dbg !21854
  %12 = load i64*, i64** %src2.addr, align 8, !dbg !21855
  %13 = load i32, i32* %nbits.addr, align 4, !dbg !21856
  %call = call i32 @__bitmap_and(i64* %10, i64* %11, i64* %12, i32 %13) #12, !dbg !21857
  store i32 %call, i32* %retval, align 4, !dbg !21858
  br label %return, !dbg !21858

return:                                           ; preds = %if.end, %if.then
  %14 = load i32, i32* %retval, align 4, !dbg !21859
  ret i32 %14, !dbg !21859
}

; Function Attrs: noredzone
declare dso_local i32 @__bitmap_and(i64*, i64*, i64*, i32) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @macb_set_tx_clk(%struct.clk* %clk, i32 %speed, %struct.net_device* %dev) #2 !dbg !21860 {
entry:
  %clk.addr = alloca %struct.clk*, align 8
  %speed.addr = alloca i32, align 4
  %dev.addr = alloca %struct.net_device*, align 8
  %ferr = alloca i64, align 8
  %rate = alloca i64, align 8
  %rate_rounded = alloca i64, align 8
  %__x = alloca i64, align 8
  %tmp = alloca i64, align 8
  store %struct.clk* %clk, %struct.clk** %clk.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.clk** %clk.addr, metadata !21863, metadata !DIExpression()), !dbg !21864
  store i32 %speed, i32* %speed.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %speed.addr, metadata !21865, metadata !DIExpression()), !dbg !21866
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !21867, metadata !DIExpression()), !dbg !21868
  call void @llvm.dbg.declare(metadata i64* %ferr, metadata !21869, metadata !DIExpression()), !dbg !21870
  call void @llvm.dbg.declare(metadata i64* %rate, metadata !21871, metadata !DIExpression()), !dbg !21872
  call void @llvm.dbg.declare(metadata i64* %rate_rounded, metadata !21873, metadata !DIExpression()), !dbg !21874
  %0 = load %struct.clk*, %struct.clk** %clk.addr, align 8, !dbg !21875
  %tobool = icmp ne %struct.clk* %0, null, !dbg !21875
  br i1 %tobool, label %if.end, label %if.then, !dbg !21877

if.then:                                          ; preds = %entry
  br label %if.end16, !dbg !21878

if.end:                                           ; preds = %entry
  %1 = load i32, i32* %speed.addr, align 4, !dbg !21879
  switch i32 %1, label %sw.default [
    i32 10, label %sw.bb
    i32 100, label %sw.bb1
    i32 1000, label %sw.bb2
  ], !dbg !21880

sw.bb:                                            ; preds = %if.end
  store i64 2500000, i64* %rate, align 8, !dbg !21881
  br label %sw.epilog, !dbg !21883

sw.bb1:                                           ; preds = %if.end
  store i64 25000000, i64* %rate, align 8, !dbg !21884
  br label %sw.epilog, !dbg !21885

sw.bb2:                                           ; preds = %if.end
  store i64 125000000, i64* %rate, align 8, !dbg !21886
  br label %sw.epilog, !dbg !21887

sw.default:                                       ; preds = %if.end
  br label %if.end16, !dbg !21888

sw.epilog:                                        ; preds = %sw.bb2, %sw.bb1, %sw.bb
  %2 = load %struct.clk*, %struct.clk** %clk.addr, align 8, !dbg !21889
  %3 = load i64, i64* %rate, align 8, !dbg !21890
  %call = call i64 @clk_round_rate(%struct.clk* %2, i64 %3) #12, !dbg !21891
  store i64 %call, i64* %rate_rounded, align 8, !dbg !21892
  %4 = load i64, i64* %rate_rounded, align 8, !dbg !21893
  %cmp = icmp slt i64 %4, 0, !dbg !21895
  br i1 %cmp, label %if.then3, label %if.end4, !dbg !21896

if.then3:                                         ; preds = %sw.epilog
  br label %if.end16, !dbg !21897

if.end4:                                          ; preds = %sw.epilog
  call void @llvm.dbg.declare(metadata i64* %__x, metadata !21898, metadata !DIExpression()), !dbg !21900
  %5 = load i64, i64* %rate_rounded, align 8, !dbg !21900
  %6 = load i64, i64* %rate, align 8, !dbg !21900
  %sub = sub i64 %5, %6, !dbg !21900
  store i64 %sub, i64* %__x, align 8, !dbg !21900
  %7 = load i64, i64* %__x, align 8, !dbg !21900
  %cmp5 = icmp slt i64 %7, 0, !dbg !21900
  br i1 %cmp5, label %cond.true, label %cond.false, !dbg !21900

cond.true:                                        ; preds = %if.end4
  %8 = load i64, i64* %__x, align 8, !dbg !21900
  %sub6 = sub i64 0, %8, !dbg !21900
  br label %cond.end, !dbg !21900

cond.false:                                       ; preds = %if.end4
  %9 = load i64, i64* %__x, align 8, !dbg !21900
  br label %cond.end, !dbg !21900

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ %sub6, %cond.true ], [ %9, %cond.false ], !dbg !21900
  store i64 %cond, i64* %tmp, align 8, !dbg !21900
  %10 = load i64, i64* %tmp, align 8, !dbg !21900
  store i64 %10, i64* %ferr, align 8, !dbg !21901
  %11 = load i64, i64* %ferr, align 8, !dbg !21902
  %12 = load i64, i64* %rate, align 8, !dbg !21902
  %div = sdiv i64 %12, 100000, !dbg !21902
  %add = add i64 %11, %div, !dbg !21902
  %sub7 = sub i64 %add, 1, !dbg !21902
  %13 = load i64, i64* %rate, align 8, !dbg !21902
  %div8 = sdiv i64 %13, 100000, !dbg !21902
  %div9 = sdiv i64 %sub7, %div8, !dbg !21902
  store i64 %div9, i64* %ferr, align 8, !dbg !21903
  %14 = load i64, i64* %ferr, align 8, !dbg !21904
  %cmp10 = icmp sgt i64 %14, 5, !dbg !21906
  br i1 %cmp10, label %if.then11, label %if.end12, !dbg !21907

if.then11:                                        ; preds = %cond.end
  %15 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !21908
  %16 = load i64, i64* %rate, align 8, !dbg !21909
  call void (%struct.net_device*, i8*, ...) @netdev_warn(%struct.net_device* %15, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.47, i64 0, i64 0), i64 %16) #13, !dbg !21910
  br label %if.end12, !dbg !21910

if.end12:                                         ; preds = %if.then11, %cond.end
  %17 = load %struct.clk*, %struct.clk** %clk.addr, align 8, !dbg !21911
  %18 = load i64, i64* %rate_rounded, align 8, !dbg !21913
  %call13 = call i32 @clk_set_rate(%struct.clk* %17, i64 %18) #12, !dbg !21914
  %tobool14 = icmp ne i32 %call13, 0, !dbg !21914
  br i1 %tobool14, label %if.then15, label %if.end16, !dbg !21915

if.then15:                                        ; preds = %if.end12
  %19 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !21916
  call void (%struct.net_device*, i8*, ...) @netdev_err(%struct.net_device* %19, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.48, i64 0, i64 0)) #13, !dbg !21917
  br label %if.end16, !dbg !21917

if.end16:                                         ; preds = %if.then, %sw.default, %if.then3, %if.then15, %if.end12
  ret void, !dbg !21918
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @macb_init_buffers(%struct.macb* %bp) #2 !dbg !21919 {
entry:
  %bp.addr = alloca %struct.macb*, align 8
  %queue = alloca %struct.macb_queue*, align 8
  %q = alloca i32, align 4
  store %struct.macb* %bp, %struct.macb** %bp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.macb** %bp.addr, metadata !21920, metadata !DIExpression()), !dbg !21921
  call void @llvm.dbg.declare(metadata %struct.macb_queue** %queue, metadata !21922, metadata !DIExpression()), !dbg !21923
  call void @llvm.dbg.declare(metadata i32* %q, metadata !21924, metadata !DIExpression()), !dbg !21925
  store i32 0, i32* %q, align 4, !dbg !21926
  %0 = load %struct.macb*, %struct.macb** %bp.addr, align 8, !dbg !21928
  %queues = getelementptr inbounds %struct.macb, %struct.macb* %0, i32 0, i32 9, !dbg !21929
  %arraydecay = getelementptr inbounds [8 x %struct.macb_queue], [8 x %struct.macb_queue]* %queues, i64 0, i64 0, !dbg !21928
  store %struct.macb_queue* %arraydecay, %struct.macb_queue** %queue, align 8, !dbg !21930
  br label %for.cond, !dbg !21931

for.cond:                                         ; preds = %for.inc, %entry
  %1 = load i32, i32* %q, align 4, !dbg !21932
  %2 = load %struct.macb*, %struct.macb** %bp.addr, align 8, !dbg !21934
  %num_queues = getelementptr inbounds %struct.macb, %struct.macb* %2, i32 0, i32 7, !dbg !21935
  %3 = load i32, i32* %num_queues, align 8, !dbg !21935
  %cmp = icmp ult i32 %1, %3, !dbg !21936
  br i1 %cmp, label %for.body, label %for.end, !dbg !21937

for.body:                                         ; preds = %for.cond
  %4 = load %struct.macb_queue*, %struct.macb_queue** %queue, align 8, !dbg !21938
  %bp1 = getelementptr inbounds %struct.macb_queue, %struct.macb_queue* %4, i32 0, i32 0, !dbg !21938
  %5 = load %struct.macb*, %struct.macb** %bp1, align 8, !dbg !21938
  %macb_reg_writel = getelementptr inbounds %struct.macb, %struct.macb* %5, i32 0, i32 3, !dbg !21938
  %6 = load void (%struct.macb*, i32, i32)*, void (%struct.macb*, i32, i32)** %macb_reg_writel, align 8, !dbg !21938
  %7 = load %struct.macb_queue*, %struct.macb_queue** %queue, align 8, !dbg !21938
  %bp2 = getelementptr inbounds %struct.macb_queue, %struct.macb_queue* %7, i32 0, i32 0, !dbg !21938
  %8 = load %struct.macb*, %struct.macb** %bp2, align 8, !dbg !21938
  %9 = load %struct.macb_queue*, %struct.macb_queue** %queue, align 8, !dbg !21938
  %RBQP = getelementptr inbounds %struct.macb_queue, %struct.macb_queue* %9, i32 0, i32 9, !dbg !21938
  %10 = load i32, i32* %RBQP, align 8, !dbg !21938
  %11 = load %struct.macb_queue*, %struct.macb_queue** %queue, align 8, !dbg !21938
  %rx_ring_dma = getelementptr inbounds %struct.macb_queue, %struct.macb_queue* %11, i32 0, i32 17, !dbg !21938
  %12 = load i64, i64* %rx_ring_dma, align 8, !dbg !21938
  %and = and i64 %12, 4294967295, !dbg !21938
  %conv = trunc i64 %and to i32, !dbg !21938
  call void %6(%struct.macb* %8, i32 %10, i32 %conv) #12, !dbg !21938
  %13 = load %struct.macb*, %struct.macb** %bp.addr, align 8, !dbg !21940
  %hw_dma_cap = getelementptr inbounds %struct.macb, %struct.macb* %13, i32 0, i32 35, !dbg !21942
  %14 = load i8, i8* %hw_dma_cap, align 8, !dbg !21942
  %conv3 = zext i8 %14 to i32, !dbg !21940
  %and4 = and i32 %conv3, 1, !dbg !21943
  %tobool = icmp ne i32 %and4, 0, !dbg !21943
  br i1 %tobool, label %if.then, label %if.end, !dbg !21944

if.then:                                          ; preds = %for.body
  %15 = load %struct.macb_queue*, %struct.macb_queue** %queue, align 8, !dbg !21945
  %bp5 = getelementptr inbounds %struct.macb_queue, %struct.macb_queue* %15, i32 0, i32 0, !dbg !21945
  %16 = load %struct.macb*, %struct.macb** %bp5, align 8, !dbg !21945
  %macb_reg_writel6 = getelementptr inbounds %struct.macb, %struct.macb* %16, i32 0, i32 3, !dbg !21945
  %17 = load void (%struct.macb*, i32, i32)*, void (%struct.macb*, i32, i32)** %macb_reg_writel6, align 8, !dbg !21945
  %18 = load %struct.macb_queue*, %struct.macb_queue** %queue, align 8, !dbg !21945
  %bp7 = getelementptr inbounds %struct.macb_queue, %struct.macb_queue* %18, i32 0, i32 0, !dbg !21945
  %19 = load %struct.macb*, %struct.macb** %bp7, align 8, !dbg !21945
  %20 = load %struct.macb_queue*, %struct.macb_queue** %queue, align 8, !dbg !21945
  %RBQPH = getelementptr inbounds %struct.macb_queue, %struct.macb_queue* %20, i32 0, i32 10, !dbg !21945
  %21 = load i32, i32* %RBQPH, align 4, !dbg !21945
  %22 = load %struct.macb_queue*, %struct.macb_queue** %queue, align 8, !dbg !21945
  %rx_ring_dma8 = getelementptr inbounds %struct.macb_queue, %struct.macb_queue* %22, i32 0, i32 17, !dbg !21945
  %23 = load i64, i64* %rx_ring_dma8, align 8, !dbg !21945
  %shr = lshr i64 %23, 16, !dbg !21945
  %shr9 = lshr i64 %shr, 16, !dbg !21945
  %conv10 = trunc i64 %shr9 to i32, !dbg !21945
  call void %17(%struct.macb* %19, i32 %21, i32 %conv10) #12, !dbg !21945
  br label %if.end, !dbg !21945

if.end:                                           ; preds = %if.then, %for.body
  %24 = load %struct.macb_queue*, %struct.macb_queue** %queue, align 8, !dbg !21946
  %bp11 = getelementptr inbounds %struct.macb_queue, %struct.macb_queue* %24, i32 0, i32 0, !dbg !21946
  %25 = load %struct.macb*, %struct.macb** %bp11, align 8, !dbg !21946
  %macb_reg_writel12 = getelementptr inbounds %struct.macb, %struct.macb* %25, i32 0, i32 3, !dbg !21946
  %26 = load void (%struct.macb*, i32, i32)*, void (%struct.macb*, i32, i32)** %macb_reg_writel12, align 8, !dbg !21946
  %27 = load %struct.macb_queue*, %struct.macb_queue** %queue, align 8, !dbg !21946
  %bp13 = getelementptr inbounds %struct.macb_queue, %struct.macb_queue* %27, i32 0, i32 0, !dbg !21946
  %28 = load %struct.macb*, %struct.macb** %bp13, align 8, !dbg !21946
  %29 = load %struct.macb_queue*, %struct.macb_queue** %queue, align 8, !dbg !21946
  %TBQP = getelementptr inbounds %struct.macb_queue, %struct.macb_queue* %29, i32 0, i32 6, !dbg !21946
  %30 = load i32, i32* %TBQP, align 4, !dbg !21946
  %31 = load %struct.macb_queue*, %struct.macb_queue** %queue, align 8, !dbg !21946
  %tx_ring_dma = getelementptr inbounds %struct.macb_queue, %struct.macb_queue* %31, i32 0, i32 15, !dbg !21946
  %32 = load i64, i64* %tx_ring_dma, align 8, !dbg !21946
  %and14 = and i64 %32, 4294967295, !dbg !21946
  %conv15 = trunc i64 %and14 to i32, !dbg !21946
  call void %26(%struct.macb* %28, i32 %30, i32 %conv15) #12, !dbg !21946
  %33 = load %struct.macb*, %struct.macb** %bp.addr, align 8, !dbg !21947
  %hw_dma_cap16 = getelementptr inbounds %struct.macb, %struct.macb* %33, i32 0, i32 35, !dbg !21949
  %34 = load i8, i8* %hw_dma_cap16, align 8, !dbg !21949
  %conv17 = zext i8 %34 to i32, !dbg !21947
  %and18 = and i32 %conv17, 1, !dbg !21950
  %tobool19 = icmp ne i32 %and18, 0, !dbg !21950
  br i1 %tobool19, label %if.then20, label %if.end28, !dbg !21951

if.then20:                                        ; preds = %if.end
  %35 = load %struct.macb_queue*, %struct.macb_queue** %queue, align 8, !dbg !21952
  %bp21 = getelementptr inbounds %struct.macb_queue, %struct.macb_queue* %35, i32 0, i32 0, !dbg !21952
  %36 = load %struct.macb*, %struct.macb** %bp21, align 8, !dbg !21952
  %macb_reg_writel22 = getelementptr inbounds %struct.macb, %struct.macb* %36, i32 0, i32 3, !dbg !21952
  %37 = load void (%struct.macb*, i32, i32)*, void (%struct.macb*, i32, i32)** %macb_reg_writel22, align 8, !dbg !21952
  %38 = load %struct.macb_queue*, %struct.macb_queue** %queue, align 8, !dbg !21952
  %bp23 = getelementptr inbounds %struct.macb_queue, %struct.macb_queue* %38, i32 0, i32 0, !dbg !21952
  %39 = load %struct.macb*, %struct.macb** %bp23, align 8, !dbg !21952
  %40 = load %struct.macb_queue*, %struct.macb_queue** %queue, align 8, !dbg !21952
  %TBQPH = getelementptr inbounds %struct.macb_queue, %struct.macb_queue* %40, i32 0, i32 7, !dbg !21952
  %41 = load i32, i32* %TBQPH, align 8, !dbg !21952
  %42 = load %struct.macb_queue*, %struct.macb_queue** %queue, align 8, !dbg !21952
  %tx_ring_dma24 = getelementptr inbounds %struct.macb_queue, %struct.macb_queue* %42, i32 0, i32 15, !dbg !21952
  %43 = load i64, i64* %tx_ring_dma24, align 8, !dbg !21952
  %shr25 = lshr i64 %43, 16, !dbg !21952
  %shr26 = lshr i64 %shr25, 16, !dbg !21952
  %conv27 = trunc i64 %shr26 to i32, !dbg !21952
  call void %37(%struct.macb* %39, i32 %41, i32 %conv27) #12, !dbg !21952
  br label %if.end28, !dbg !21952

if.end28:                                         ; preds = %if.then20, %if.end
  br label %for.inc, !dbg !21953

for.inc:                                          ; preds = %if.end28
  %44 = load i32, i32* %q, align 4, !dbg !21954
  %inc = add i32 %44, 1, !dbg !21954
  store i32 %inc, i32* %q, align 4, !dbg !21954
  %45 = load %struct.macb_queue*, %struct.macb_queue** %queue, align 8, !dbg !21955
  %incdec.ptr = getelementptr %struct.macb_queue, %struct.macb_queue* %45, i32 1, !dbg !21955
  store %struct.macb_queue* %incdec.ptr, %struct.macb_queue** %queue, align 8, !dbg !21955
  br label %for.cond, !dbg !21956, !llvm.loop !21957

for.end:                                          ; preds = %for.cond
  ret void, !dbg !21959
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @netif_tx_wake_all_queues(%struct.net_device* %dev) #2 !dbg !21960 {
entry:
  %dev.addr = alloca %struct.net_device*, align 8
  %i = alloca i32, align 4
  %txq = alloca %struct.netdev_queue*, align 8
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !21961, metadata !DIExpression()), !dbg !21962
  call void @llvm.dbg.declare(metadata i32* %i, metadata !21963, metadata !DIExpression()), !dbg !21964
  store i32 0, i32* %i, align 4, !dbg !21965
  br label %for.cond, !dbg !21967

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4, !dbg !21968
  %1 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !21970
  %num_tx_queues = getelementptr inbounds %struct.net_device, %struct.net_device* %1, i32 0, i32 87, !dbg !21971
  %2 = load i32, i32* %num_tx_queues, align 8, !dbg !21971
  %cmp = icmp ult i32 %0, %2, !dbg !21972
  br i1 %cmp, label %for.body, label %for.end, !dbg !21973

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.netdev_queue** %txq, metadata !21974, metadata !DIExpression()), !dbg !21976
  %3 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !21977
  %4 = load i32, i32* %i, align 4, !dbg !21978
  %call = call %struct.netdev_queue* @netdev_get_tx_queue(%struct.net_device* %3, i32 %4) #12, !dbg !21979
  store %struct.netdev_queue* %call, %struct.netdev_queue** %txq, align 8, !dbg !21976
  %5 = load %struct.netdev_queue*, %struct.netdev_queue** %txq, align 8, !dbg !21980
  call void @netif_tx_wake_queue(%struct.netdev_queue* %5) #12, !dbg !21981
  br label %for.inc, !dbg !21982

for.inc:                                          ; preds = %for.body
  %6 = load i32, i32* %i, align 4, !dbg !21983
  %inc = add i32 %6, 1, !dbg !21983
  store i32 %inc, i32* %i, align 4, !dbg !21983
  br label %for.cond, !dbg !21984, !llvm.loop !21985

for.end:                                          ; preds = %for.cond
  ret void, !dbg !21987
}

; Function Attrs: noredzone
declare dso_local i64 @clk_round_rate(%struct.clk*, i64) #1

; Function Attrs: cold noredzone
declare dso_local void @netdev_warn(%struct.net_device*, i8*, ...) #5

; Function Attrs: noredzone
declare dso_local i32 @clk_set_rate(%struct.clk*, i64) #1

; Function Attrs: noredzone
declare dso_local void @netif_carrier_on(%struct.net_device*) #1

; Function Attrs: noredzone
declare dso_local i64 @ktime_get_mono_fast_ns() #1

; Function Attrs: noredzone
declare dso_local i32 @__pm_runtime_suspend(%struct.device*, i32) #1

; Function Attrs: noredzone
declare dso_local void @clk_disable(%struct.clk*) #1

; Function Attrs: noredzone
declare dso_local void @__pm_runtime_disable(%struct.device*, i1 zeroext) #1

; Function Attrs: noredzone
declare dso_local void @unregister_netdev(%struct.net_device*) #1

; Function Attrs: noredzone
declare dso_local void @tasklet_kill(%struct.tasklet_struct*) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @pm_runtime_suspended(%struct.device* %dev) #2 !dbg !21988 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !21991, metadata !DIExpression()), !dbg !21992
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !21993
  %power = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 11, !dbg !21994
  %runtime_status = getelementptr inbounds %struct.dev_pm_info, %struct.dev_pm_info* %power, i32 0, i32 18, !dbg !21995
  %1 = load i32, i32* %runtime_status, align 4, !dbg !21995
  %cmp = icmp eq i32 %1, 2, !dbg !21996
  br i1 %cmp, label %land.rhs, label %land.end, !dbg !21997

land.rhs:                                         ; preds = %entry
  %2 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !21998
  %power1 = getelementptr inbounds %struct.device, %struct.device* %2, i32 0, i32 11, !dbg !21999
  %disable_depth = getelementptr inbounds %struct.dev_pm_info, %struct.dev_pm_info* %power1, i32 0, i32 15, !dbg !22000
  %bf.load = load i16, i16* %disable_depth, align 8, !dbg !22000
  %bf.clear = and i16 %bf.load, 7, !dbg !22000
  %bf.cast = zext i16 %bf.clear to i32, !dbg !22000
  %tobool = icmp ne i32 %bf.cast, 0, !dbg !22001
  %lnot = xor i1 %tobool, true, !dbg !22001
  br label %land.end

land.end:                                         ; preds = %land.rhs, %entry
  %3 = phi i1 [ false, %entry ], [ %lnot, %land.rhs ], !dbg !22002
  ret i1 %3, !dbg !22003
}

; Function Attrs: noredzone
declare dso_local void @phylink_destroy(%struct.phylink*) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @at91ether_clk_init(%struct.platform_device* %pdev, %struct.clk** %pclk, %struct.clk** %hclk, %struct.clk** %tx_clk, %struct.clk** %rx_clk, %struct.clk** %tsu_clk) #2 !dbg !22004 {
entry:
  %retval = alloca i32, align 4
  %pdev.addr = alloca %struct.platform_device*, align 8
  %pclk.addr = alloca %struct.clk**, align 8
  %hclk.addr = alloca %struct.clk**, align 8
  %tx_clk.addr = alloca %struct.clk**, align 8
  %rx_clk.addr = alloca %struct.clk**, align 8
  %tsu_clk.addr = alloca %struct.clk**, align 8
  %err = alloca i32, align 4
  store %struct.platform_device* %pdev, %struct.platform_device** %pdev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.platform_device** %pdev.addr, metadata !22005, metadata !DIExpression()), !dbg !22006
  store %struct.clk** %pclk, %struct.clk*** %pclk.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.clk*** %pclk.addr, metadata !22007, metadata !DIExpression()), !dbg !22008
  store %struct.clk** %hclk, %struct.clk*** %hclk.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.clk*** %hclk.addr, metadata !22009, metadata !DIExpression()), !dbg !22010
  store %struct.clk** %tx_clk, %struct.clk*** %tx_clk.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.clk*** %tx_clk.addr, metadata !22011, metadata !DIExpression()), !dbg !22012
  store %struct.clk** %rx_clk, %struct.clk*** %rx_clk.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.clk*** %rx_clk.addr, metadata !22013, metadata !DIExpression()), !dbg !22014
  store %struct.clk** %tsu_clk, %struct.clk*** %tsu_clk.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.clk*** %tsu_clk.addr, metadata !22015, metadata !DIExpression()), !dbg !22016
  call void @llvm.dbg.declare(metadata i32* %err, metadata !22017, metadata !DIExpression()), !dbg !22018
  %0 = load %struct.clk**, %struct.clk*** %hclk.addr, align 8, !dbg !22019
  store %struct.clk* null, %struct.clk** %0, align 8, !dbg !22020
  %1 = load %struct.clk**, %struct.clk*** %tx_clk.addr, align 8, !dbg !22021
  store %struct.clk* null, %struct.clk** %1, align 8, !dbg !22022
  %2 = load %struct.clk**, %struct.clk*** %rx_clk.addr, align 8, !dbg !22023
  store %struct.clk* null, %struct.clk** %2, align 8, !dbg !22024
  %3 = load %struct.clk**, %struct.clk*** %tsu_clk.addr, align 8, !dbg !22025
  store %struct.clk* null, %struct.clk** %3, align 8, !dbg !22026
  %4 = load %struct.platform_device*, %struct.platform_device** %pdev.addr, align 8, !dbg !22027
  %dev = getelementptr inbounds %struct.platform_device, %struct.platform_device* %4, i32 0, i32 3, !dbg !22028
  %call = call %struct.clk* @devm_clk_get(%struct.device* %dev, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.49, i64 0, i64 0)) #12, !dbg !22029
  %5 = load %struct.clk**, %struct.clk*** %pclk.addr, align 8, !dbg !22030
  store %struct.clk* %call, %struct.clk** %5, align 8, !dbg !22031
  %6 = load %struct.clk**, %struct.clk*** %pclk.addr, align 8, !dbg !22032
  %7 = load %struct.clk*, %struct.clk** %6, align 8, !dbg !22034
  %8 = bitcast %struct.clk* %7 to i8*, !dbg !22034
  %call1 = call zeroext i1 @IS_ERR(i8* %8) #12, !dbg !22035
  br i1 %call1, label %if.then, label %if.end, !dbg !22036

if.then:                                          ; preds = %entry
  %9 = load %struct.clk**, %struct.clk*** %pclk.addr, align 8, !dbg !22037
  %10 = load %struct.clk*, %struct.clk** %9, align 8, !dbg !22038
  %11 = bitcast %struct.clk* %10 to i8*, !dbg !22038
  %call2 = call i64 @PTR_ERR(i8* %11) #12, !dbg !22039
  %conv = trunc i64 %call2 to i32, !dbg !22039
  store i32 %conv, i32* %retval, align 4, !dbg !22040
  br label %return, !dbg !22040

if.end:                                           ; preds = %entry
  %12 = load %struct.clk**, %struct.clk*** %pclk.addr, align 8, !dbg !22041
  %13 = load %struct.clk*, %struct.clk** %12, align 8, !dbg !22042
  %call3 = call i32 @clk_prepare_enable(%struct.clk* %13) #12, !dbg !22043
  store i32 %call3, i32* %err, align 4, !dbg !22044
  %14 = load i32, i32* %err, align 4, !dbg !22045
  %tobool = icmp ne i32 %14, 0, !dbg !22045
  br i1 %tobool, label %if.then4, label %if.end6, !dbg !22047

if.then4:                                         ; preds = %if.end
  %15 = load %struct.platform_device*, %struct.platform_device** %pdev.addr, align 8, !dbg !22048
  %dev5 = getelementptr inbounds %struct.platform_device, %struct.platform_device* %15, i32 0, i32 3, !dbg !22048
  %16 = load i32, i32* %err, align 4, !dbg !22048
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %dev5, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.13, i64 0, i64 0), i32 %16) #13, !dbg !22048
  %17 = load i32, i32* %err, align 4, !dbg !22050
  store i32 %17, i32* %retval, align 4, !dbg !22051
  br label %return, !dbg !22051

if.end6:                                          ; preds = %if.end
  store i32 0, i32* %retval, align 4, !dbg !22052
  br label %return, !dbg !22052

return:                                           ; preds = %if.end6, %if.then4, %if.then
  %18 = load i32, i32* %retval, align 4, !dbg !22053
  ret i32 %18, !dbg !22053
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @at91ether_init(%struct.platform_device* %pdev) #2 !dbg !22054 {
entry:
  %retval = alloca i32, align 4
  %pdev.addr = alloca %struct.platform_device*, align 8
  %dev = alloca %struct.net_device*, align 8
  %bp = alloca %struct.macb*, align 8
  %err = alloca i32, align 4
  store %struct.platform_device* %pdev, %struct.platform_device** %pdev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.platform_device** %pdev.addr, metadata !22055, metadata !DIExpression()), !dbg !22056
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev, metadata !22057, metadata !DIExpression()), !dbg !22058
  %0 = load %struct.platform_device*, %struct.platform_device** %pdev.addr, align 8, !dbg !22059
  %call = call i8* @platform_get_drvdata(%struct.platform_device* %0) #12, !dbg !22060
  %1 = bitcast i8* %call to %struct.net_device*, !dbg !22060
  store %struct.net_device* %1, %struct.net_device** %dev, align 8, !dbg !22058
  call void @llvm.dbg.declare(metadata %struct.macb** %bp, metadata !22061, metadata !DIExpression()), !dbg !22062
  %2 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !22063
  %call1 = call i8* @netdev_priv(%struct.net_device* %2) #12, !dbg !22064
  %3 = bitcast i8* %call1 to %struct.macb*, !dbg !22064
  store %struct.macb* %3, %struct.macb** %bp, align 8, !dbg !22062
  call void @llvm.dbg.declare(metadata i32* %err, metadata !22065, metadata !DIExpression()), !dbg !22066
  %4 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !22067
  %5 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !22068
  %queues = getelementptr inbounds %struct.macb, %struct.macb* %5, i32 0, i32 9, !dbg !22069
  %arrayidx = getelementptr [8 x %struct.macb_queue], [8 x %struct.macb_queue]* %queues, i64 0, i64 0, !dbg !22068
  %bp2 = getelementptr inbounds %struct.macb_queue, %struct.macb_queue* %arrayidx, i32 0, i32 0, !dbg !22070
  store %struct.macb* %4, %struct.macb** %bp2, align 8, !dbg !22071
  %6 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !22072
  %netdev_ops = getelementptr inbounds %struct.net_device, %struct.net_device* %6, i32 0, i32 32, !dbg !22073
  store %struct.net_device_ops* @at91ether_netdev_ops, %struct.net_device_ops** %netdev_ops, align 8, !dbg !22074
  %7 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !22075
  %ethtool_ops = getelementptr inbounds %struct.net_device, %struct.net_device* %7, i32 0, i32 33, !dbg !22076
  store %struct.ethtool_ops* @macb_ethtool_ops, %struct.ethtool_ops** %ethtool_ops, align 8, !dbg !22077
  %8 = load %struct.platform_device*, %struct.platform_device** %pdev.addr, align 8, !dbg !22078
  %dev3 = getelementptr inbounds %struct.platform_device, %struct.platform_device* %8, i32 0, i32 3, !dbg !22079
  %9 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !22080
  %irq = getelementptr inbounds %struct.net_device, %struct.net_device* %9, i32 0, i32 6, !dbg !22081
  %10 = load i32, i32* %irq, align 8, !dbg !22081
  %11 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !22082
  %name = getelementptr inbounds %struct.net_device, %struct.net_device* %11, i32 0, i32 0, !dbg !22083
  %arraydecay = getelementptr inbounds [16 x i8], [16 x i8]* %name, i64 0, i64 0, !dbg !22082
  %12 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !22084
  %13 = bitcast %struct.net_device* %12 to i8*, !dbg !22084
  %call4 = call i32 @devm_request_irq(%struct.device* %dev3, i32 %10, i32 (i32, i8*)* @at91ether_interrupt, i64 0, i8* %arraydecay, i8* %13) #12, !dbg !22085
  store i32 %call4, i32* %err, align 4, !dbg !22086
  %14 = load i32, i32* %err, align 4, !dbg !22087
  %tobool = icmp ne i32 %14, 0, !dbg !22087
  br i1 %tobool, label %if.then, label %if.end, !dbg !22089

if.then:                                          ; preds = %entry
  %15 = load i32, i32* %err, align 4, !dbg !22090
  store i32 %15, i32* %retval, align 4, !dbg !22091
  br label %return, !dbg !22091

if.end:                                           ; preds = %entry
  %16 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !22092
  %macb_reg_writel = getelementptr inbounds %struct.macb, %struct.macb* %16, i32 0, i32 3, !dbg !22092
  %17 = load void (%struct.macb*, i32, i32)*, void (%struct.macb*, i32, i32)** %macb_reg_writel, align 8, !dbg !22092
  %18 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !22092
  call void %17(%struct.macb* %18, i32 0, i32 0) #12, !dbg !22092
  %19 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !22093
  %macb_reg_writel5 = getelementptr inbounds %struct.macb, %struct.macb* %19, i32 0, i32 3, !dbg !22093
  %20 = load void (%struct.macb*, i32, i32)*, void (%struct.macb*, i32, i32)** %macb_reg_writel5, align 8, !dbg !22093
  %21 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !22093
  call void %20(%struct.macb* %21, i32 4, i32 2304) #12, !dbg !22093
  store i32 0, i32* %retval, align 4, !dbg !22094
  br label %return, !dbg !22094

return:                                           ; preds = %if.end, %if.then
  %22 = load i32, i32* %retval, align 4, !dbg !22095
  ret i32 %22, !dbg !22095
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @at91ether_interrupt(i32 %irq, i8* %dev_id) #2 !dbg !22096 {
entry:
  %lock.addr.i56 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i56, metadata !12906, metadata !DIExpression()), !dbg !22097
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !12912, metadata !DIExpression()), !dbg !22101
  %irq.addr = alloca i32, align 4
  %dev_id.addr = alloca i8*, align 8
  %dev = alloca %struct.net_device*, align 8
  %lp = alloca %struct.macb*, align 8
  %intstatus = alloca i32, align 4
  %ctl = alloca i32, align 4
  %desc = alloca i32, align 4
  %qlen = alloca i32, align 4
  %tsr = alloca i32, align 4
  store i32 %irq, i32* %irq.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %irq.addr, metadata !22103, metadata !DIExpression()), !dbg !22104
  store i8* %dev_id, i8** %dev_id.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %dev_id.addr, metadata !22105, metadata !DIExpression()), !dbg !22106
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev, metadata !22107, metadata !DIExpression()), !dbg !22108
  %0 = load i8*, i8** %dev_id.addr, align 8, !dbg !22109
  %1 = bitcast i8* %0 to %struct.net_device*, !dbg !22109
  store %struct.net_device* %1, %struct.net_device** %dev, align 8, !dbg !22108
  call void @llvm.dbg.declare(metadata %struct.macb** %lp, metadata !22110, metadata !DIExpression()), !dbg !22111
  %2 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !22112
  %call = call i8* @netdev_priv(%struct.net_device* %2) #12, !dbg !22113
  %3 = bitcast i8* %call to %struct.macb*, !dbg !22113
  store %struct.macb* %3, %struct.macb** %lp, align 8, !dbg !22111
  call void @llvm.dbg.declare(metadata i32* %intstatus, metadata !22114, metadata !DIExpression()), !dbg !22115
  call void @llvm.dbg.declare(metadata i32* %ctl, metadata !22116, metadata !DIExpression()), !dbg !22117
  call void @llvm.dbg.declare(metadata i32* %desc, metadata !22118, metadata !DIExpression()), !dbg !22119
  call void @llvm.dbg.declare(metadata i32* %qlen, metadata !22120, metadata !DIExpression()), !dbg !22121
  call void @llvm.dbg.declare(metadata i32* %tsr, metadata !22122, metadata !DIExpression()), !dbg !22123
  %4 = load %struct.macb*, %struct.macb** %lp, align 8, !dbg !22124
  %macb_reg_readl = getelementptr inbounds %struct.macb, %struct.macb* %4, i32 0, i32 2, !dbg !22124
  %5 = load i32 (%struct.macb*, i32)*, i32 (%struct.macb*, i32)** %macb_reg_readl, align 8, !dbg !22124
  %6 = load %struct.macb*, %struct.macb** %lp, align 8, !dbg !22124
  %call1 = call i32 %5(%struct.macb* %6, i32 36) #12, !dbg !22124
  store i32 %call1, i32* %intstatus, align 4, !dbg !22125
  %7 = load i32, i32* %intstatus, align 4, !dbg !22126
  %and = and i32 %7, 2, !dbg !22128
  %tobool = icmp ne i32 %and, 0, !dbg !22128
  br i1 %tobool, label %if.then, label %if.end, !dbg !22129

if.then:                                          ; preds = %entry
  %8 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !22130
  call void @at91ether_rx(%struct.net_device* %8) #12, !dbg !22131
  br label %if.end, !dbg !22131

if.end:                                           ; preds = %if.then, %entry
  %9 = load i32, i32* %intstatus, align 4, !dbg !22132
  %and2 = and i32 %9, 192, !dbg !22133
  %tobool3 = icmp ne i32 %and2, 0, !dbg !22133
  br i1 %tobool3, label %if.then4, label %if.end43, !dbg !22134

if.then4:                                         ; preds = %if.end
  %10 = load i32, i32* %intstatus, align 4, !dbg !22135
  %and5 = and i32 %10, 48, !dbg !22137
  %tobool6 = icmp ne i32 %and5, 0, !dbg !22137
  br i1 %tobool6, label %if.then7, label %if.end8, !dbg !22138

if.then7:                                         ; preds = %if.then4
  %11 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !22139
  %stats = getelementptr inbounds %struct.net_device, %struct.net_device* %11, i32 0, i32 24, !dbg !22140
  %tx_errors = getelementptr inbounds %struct.net_device_stats, %struct.net_device_stats* %stats, i32 0, i32 5, !dbg !22141
  %12 = load i64, i64* %tx_errors, align 8, !dbg !22142
  %inc = add i64 %12, 1, !dbg !22142
  store i64 %inc, i64* %tx_errors, align 8, !dbg !22142
  br label %if.end8, !dbg !22139

if.end8:                                          ; preds = %if.then7, %if.then4
  %13 = load %struct.macb*, %struct.macb** %lp, align 8, !dbg !22143
  %lock = getelementptr inbounds %struct.macb, %struct.macb* %13, i32 0, i32 10, !dbg !22144
  store %struct.spinlock* %lock, %struct.spinlock** %lock.addr.i, align 8
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #8, !dbg !22145, !srcloc !12945
  %14 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !22146
  %15 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %14, i32 0, i32 0, !dbg !22146
  %rlock.i = bitcast %union.anon.1* %15 to %struct.raw_spinlock*, !dbg !22146
  %16 = load %struct.macb*, %struct.macb** %lp, align 8, !dbg !22147
  %macb_reg_readl9 = getelementptr inbounds %struct.macb, %struct.macb* %16, i32 0, i32 2, !dbg !22147
  %17 = load i32 (%struct.macb*, i32)*, i32 (%struct.macb*, i32)** %macb_reg_readl9, align 8, !dbg !22147
  %18 = load %struct.macb*, %struct.macb** %lp, align 8, !dbg !22147
  %call10 = call i32 %17(%struct.macb* %18, i32 20) #12, !dbg !22147
  store i32 %call10, i32* %tsr, align 4, !dbg !22148
  %19 = load i32, i32* %tsr, align 4, !dbg !22149
  %and11 = and i32 %19, 8, !dbg !22150
  %tobool12 = icmp ne i32 %and11, 0, !dbg !22150
  br i1 %tobool12, label %cond.true, label %cond.false, !dbg !22151

cond.true:                                        ; preds = %if.end8
  br label %cond.end, !dbg !22151

cond.false:                                       ; preds = %if.end8
  %20 = load i32, i32* %tsr, align 4, !dbg !22152
  %and13 = and i32 %20, 16, !dbg !22153
  %tobool14 = icmp ne i32 %and13, 0, !dbg !22154
  %21 = zext i1 %tobool14 to i64, !dbg !22154
  %cond = select i1 %tobool14, i32 1, i32 2, !dbg !22154
  br label %cond.end, !dbg !22151

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond15 = phi i32 [ 0, %cond.true ], [ %cond, %cond.false ], !dbg !22151
  store i32 %cond15, i32* %qlen, align 4, !dbg !22155
  br label %while.cond, !dbg !22156

while.cond:                                       ; preds = %while.body, %cond.end
  %22 = load %struct.macb*, %struct.macb** %lp, align 8, !dbg !22157
  %rm9200_tx_len = getelementptr inbounds %struct.macb, %struct.macb* %22, i32 0, i32 28, !dbg !22158
  %23 = load i32, i32* %rm9200_tx_len, align 4, !dbg !22158
  %24 = load i32, i32* %qlen, align 4, !dbg !22159
  %cmp = icmp ugt i32 %23, %24, !dbg !22160
  br i1 %cmp, label %while.body, label %while.end, !dbg !22156

while.body:                                       ; preds = %while.cond
  %25 = load %struct.macb*, %struct.macb** %lp, align 8, !dbg !22161
  %rm9200_tx_tail = getelementptr inbounds %struct.macb, %struct.macb* %25, i32 0, i32 27, !dbg !22163
  %26 = load i32, i32* %rm9200_tx_tail, align 8, !dbg !22163
  %27 = load %struct.macb*, %struct.macb** %lp, align 8, !dbg !22164
  %rm9200_tx_len16 = getelementptr inbounds %struct.macb, %struct.macb* %27, i32 0, i32 28, !dbg !22165
  %28 = load i32, i32* %rm9200_tx_len16, align 4, !dbg !22165
  %sub = sub i32 %26, %28, !dbg !22166
  %and17 = and i32 %sub, 1, !dbg !22167
  store i32 %and17, i32* %desc, align 4, !dbg !22168
  %29 = load %struct.macb*, %struct.macb** %lp, align 8, !dbg !22169
  %rm9200_txq = getelementptr inbounds %struct.macb, %struct.macb* %29, i32 0, i32 26, !dbg !22170
  %30 = load i32, i32* %desc, align 4, !dbg !22171
  %idxprom = zext i32 %30 to i64, !dbg !22169
  %arrayidx = getelementptr [2 x %struct.macb_tx_skb], [2 x %struct.macb_tx_skb]* %rm9200_txq, i64 0, i64 %idxprom, !dbg !22169
  %skb = getelementptr inbounds %struct.macb_tx_skb, %struct.macb_tx_skb* %arrayidx, i32 0, i32 0, !dbg !22172
  %31 = load %struct.sk_buff*, %struct.sk_buff** %skb, align 8, !dbg !22172
  call void @dev_consume_skb_irq(%struct.sk_buff* %31) #12, !dbg !22173
  %32 = load %struct.macb*, %struct.macb** %lp, align 8, !dbg !22174
  %rm9200_txq18 = getelementptr inbounds %struct.macb, %struct.macb* %32, i32 0, i32 26, !dbg !22175
  %33 = load i32, i32* %desc, align 4, !dbg !22176
  %idxprom19 = zext i32 %33 to i64, !dbg !22174
  %arrayidx20 = getelementptr [2 x %struct.macb_tx_skb], [2 x %struct.macb_tx_skb]* %rm9200_txq18, i64 0, i64 %idxprom19, !dbg !22174
  %skb21 = getelementptr inbounds %struct.macb_tx_skb, %struct.macb_tx_skb* %arrayidx20, i32 0, i32 0, !dbg !22177
  store %struct.sk_buff* null, %struct.sk_buff** %skb21, align 8, !dbg !22178
  %34 = load %struct.macb*, %struct.macb** %lp, align 8, !dbg !22179
  %pdev = getelementptr inbounds %struct.macb, %struct.macb* %34, i32 0, i32 11, !dbg !22179
  %35 = load %struct.platform_device*, %struct.platform_device** %pdev, align 8, !dbg !22179
  %dev22 = getelementptr inbounds %struct.platform_device, %struct.platform_device* %35, i32 0, i32 3, !dbg !22179
  %36 = load %struct.macb*, %struct.macb** %lp, align 8, !dbg !22179
  %rm9200_txq23 = getelementptr inbounds %struct.macb, %struct.macb* %36, i32 0, i32 26, !dbg !22179
  %37 = load i32, i32* %desc, align 4, !dbg !22179
  %idxprom24 = zext i32 %37 to i64, !dbg !22179
  %arrayidx25 = getelementptr [2 x %struct.macb_tx_skb], [2 x %struct.macb_tx_skb]* %rm9200_txq23, i64 0, i64 %idxprom24, !dbg !22179
  %mapping = getelementptr inbounds %struct.macb_tx_skb, %struct.macb_tx_skb* %arrayidx25, i32 0, i32 1, !dbg !22179
  %38 = load i64, i64* %mapping, align 8, !dbg !22179
  %39 = load %struct.macb*, %struct.macb** %lp, align 8, !dbg !22179
  %rm9200_txq26 = getelementptr inbounds %struct.macb, %struct.macb* %39, i32 0, i32 26, !dbg !22179
  %40 = load i32, i32* %desc, align 4, !dbg !22179
  %idxprom27 = zext i32 %40 to i64, !dbg !22179
  %arrayidx28 = getelementptr [2 x %struct.macb_tx_skb], [2 x %struct.macb_tx_skb]* %rm9200_txq26, i64 0, i64 %idxprom27, !dbg !22179
  %size = getelementptr inbounds %struct.macb_tx_skb, %struct.macb_tx_skb* %arrayidx28, i32 0, i32 2, !dbg !22179
  %41 = load i64, i64* %size, align 8, !dbg !22179
  call void @dma_unmap_single_attrs(%struct.device* %dev22, i64 %38, i64 %41, i32 1, i64 0) #12, !dbg !22179
  %42 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !22180
  %stats29 = getelementptr inbounds %struct.net_device, %struct.net_device* %42, i32 0, i32 24, !dbg !22181
  %tx_packets = getelementptr inbounds %struct.net_device_stats, %struct.net_device_stats* %stats29, i32 0, i32 1, !dbg !22182
  %43 = load i64, i64* %tx_packets, align 8, !dbg !22183
  %inc30 = add i64 %43, 1, !dbg !22183
  store i64 %inc30, i64* %tx_packets, align 8, !dbg !22183
  %44 = load %struct.macb*, %struct.macb** %lp, align 8, !dbg !22184
  %rm9200_txq31 = getelementptr inbounds %struct.macb, %struct.macb* %44, i32 0, i32 26, !dbg !22185
  %45 = load i32, i32* %desc, align 4, !dbg !22186
  %idxprom32 = zext i32 %45 to i64, !dbg !22184
  %arrayidx33 = getelementptr [2 x %struct.macb_tx_skb], [2 x %struct.macb_tx_skb]* %rm9200_txq31, i64 0, i64 %idxprom32, !dbg !22184
  %size34 = getelementptr inbounds %struct.macb_tx_skb, %struct.macb_tx_skb* %arrayidx33, i32 0, i32 2, !dbg !22187
  %46 = load i64, i64* %size34, align 8, !dbg !22187
  %47 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !22188
  %stats35 = getelementptr inbounds %struct.net_device, %struct.net_device* %47, i32 0, i32 24, !dbg !22189
  %tx_bytes = getelementptr inbounds %struct.net_device_stats, %struct.net_device_stats* %stats35, i32 0, i32 3, !dbg !22190
  %48 = load i64, i64* %tx_bytes, align 8, !dbg !22191
  %add = add i64 %48, %46, !dbg !22191
  store i64 %add, i64* %tx_bytes, align 8, !dbg !22191
  %49 = load %struct.macb*, %struct.macb** %lp, align 8, !dbg !22192
  %rm9200_tx_len36 = getelementptr inbounds %struct.macb, %struct.macb* %49, i32 0, i32 28, !dbg !22193
  %50 = load i32, i32* %rm9200_tx_len36, align 4, !dbg !22194
  %dec = add i32 %50, -1, !dbg !22194
  store i32 %dec, i32* %rm9200_tx_len36, align 4, !dbg !22194
  br label %while.cond, !dbg !22156, !llvm.loop !22195

while.end:                                        ; preds = %while.cond
  %51 = load %struct.macb*, %struct.macb** %lp, align 8, !dbg !22197
  %rm9200_tx_len37 = getelementptr inbounds %struct.macb, %struct.macb* %51, i32 0, i32 28, !dbg !22199
  %52 = load i32, i32* %rm9200_tx_len37, align 4, !dbg !22199
  %cmp38 = icmp ult i32 %52, 2, !dbg !22200
  br i1 %cmp38, label %land.lhs.true, label %if.end41, !dbg !22201

land.lhs.true:                                    ; preds = %while.end
  %53 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !22202
  %call39 = call zeroext i1 @netif_queue_stopped(%struct.net_device* %53) #12, !dbg !22203
  br i1 %call39, label %if.then40, label %if.end41, !dbg !22204

if.then40:                                        ; preds = %land.lhs.true
  %54 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !22205
  call void @netif_wake_queue(%struct.net_device* %54) #12, !dbg !22206
  br label %if.end41, !dbg !22206

if.end41:                                         ; preds = %if.then40, %land.lhs.true, %while.end
  %55 = load %struct.macb*, %struct.macb** %lp, align 8, !dbg !22207
  %lock42 = getelementptr inbounds %struct.macb, %struct.macb* %55, i32 0, i32 10, !dbg !22208
  store %struct.spinlock* %lock42, %struct.spinlock** %lock.addr.i56, align 8
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #8, !dbg !22209, !srcloc !13092
  %56 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i56, align 8, !dbg !22210
  %57 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %56, i32 0, i32 0, !dbg !22210
  %rlock.i57 = bitcast %union.anon.1* %57 to %struct.raw_spinlock*, !dbg !22210
  br label %if.end43, !dbg !22211

if.end43:                                         ; preds = %if.end41, %if.end
  %58 = load i32, i32* %intstatus, align 4, !dbg !22212
  %and44 = and i32 %58, 4, !dbg !22214
  %tobool45 = icmp ne i32 %and44, 0, !dbg !22214
  br i1 %tobool45, label %if.then46, label %if.end51, !dbg !22215

if.then46:                                        ; preds = %if.end43
  %59 = load %struct.macb*, %struct.macb** %lp, align 8, !dbg !22216
  %macb_reg_readl47 = getelementptr inbounds %struct.macb, %struct.macb* %59, i32 0, i32 2, !dbg !22216
  %60 = load i32 (%struct.macb*, i32)*, i32 (%struct.macb*, i32)** %macb_reg_readl47, align 8, !dbg !22216
  %61 = load %struct.macb*, %struct.macb** %lp, align 8, !dbg !22216
  %call48 = call i32 %60(%struct.macb* %61, i32 0) #12, !dbg !22216
  store i32 %call48, i32* %ctl, align 4, !dbg !22218
  %62 = load %struct.macb*, %struct.macb** %lp, align 8, !dbg !22219
  %macb_reg_writel = getelementptr inbounds %struct.macb, %struct.macb* %62, i32 0, i32 3, !dbg !22219
  %63 = load void (%struct.macb*, i32, i32)*, void (%struct.macb*, i32, i32)** %macb_reg_writel, align 8, !dbg !22219
  %64 = load %struct.macb*, %struct.macb** %lp, align 8, !dbg !22219
  %65 = load i32, i32* %ctl, align 4, !dbg !22219
  %and49 = and i32 %65, -5, !dbg !22219
  call void %63(%struct.macb* %64, i32 0, i32 %and49) #12, !dbg !22219
  call void asm sideeffect "sfence", "~{memory},~{dirflag},~{fpsr},~{flags}"() #8, !dbg !22220, !srcloc !22221
  %66 = load %struct.macb*, %struct.macb** %lp, align 8, !dbg !22222
  %macb_reg_writel50 = getelementptr inbounds %struct.macb, %struct.macb* %66, i32 0, i32 3, !dbg !22222
  %67 = load void (%struct.macb*, i32, i32)*, void (%struct.macb*, i32, i32)** %macb_reg_writel50, align 8, !dbg !22222
  %68 = load %struct.macb*, %struct.macb** %lp, align 8, !dbg !22222
  %69 = load i32, i32* %ctl, align 4, !dbg !22222
  %or = or i32 %69, 4, !dbg !22222
  call void %67(%struct.macb* %68, i32 0, i32 %or) #12, !dbg !22222
  br label %if.end51, !dbg !22223

if.end51:                                         ; preds = %if.then46, %if.end43
  %70 = load i32, i32* %intstatus, align 4, !dbg !22224
  %and52 = and i32 %70, 1024, !dbg !22226
  %tobool53 = icmp ne i32 %and52, 0, !dbg !22226
  br i1 %tobool53, label %if.then54, label %if.end55, !dbg !22227

if.then54:                                        ; preds = %if.end51
  %71 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !22228
  call void (%struct.net_device*, i8*, ...) @netdev_err(%struct.net_device* %71, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.52, i64 0, i64 0)) #13, !dbg !22229
  br label %if.end55, !dbg !22229

if.end55:                                         ; preds = %if.then54, %if.end51
  ret i32 1, !dbg !22230
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @at91ether_open(%struct.net_device* %dev) #2 !dbg !22231 {
entry:
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.net_device*, align 8
  %lp = alloca %struct.macb*, align 8
  %ctl = alloca i32, align 4
  %ret = alloca i32, align 4
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !22232, metadata !DIExpression()), !dbg !22233
  call void @llvm.dbg.declare(metadata %struct.macb** %lp, metadata !22234, metadata !DIExpression()), !dbg !22235
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !22236
  %call = call i8* @netdev_priv(%struct.net_device* %0) #12, !dbg !22237
  %1 = bitcast i8* %call to %struct.macb*, !dbg !22237
  store %struct.macb* %1, %struct.macb** %lp, align 8, !dbg !22235
  call void @llvm.dbg.declare(metadata i32* %ctl, metadata !22238, metadata !DIExpression()), !dbg !22239
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !22240, metadata !DIExpression()), !dbg !22241
  %2 = load %struct.macb*, %struct.macb** %lp, align 8, !dbg !22242
  %pdev = getelementptr inbounds %struct.macb, %struct.macb* %2, i32 0, i32 11, !dbg !22243
  %3 = load %struct.platform_device*, %struct.platform_device** %pdev, align 8, !dbg !22243
  %dev1 = getelementptr inbounds %struct.platform_device, %struct.platform_device* %3, i32 0, i32 3, !dbg !22244
  %call2 = call i32 @pm_runtime_get_sync(%struct.device* %dev1) #12, !dbg !22245
  store i32 %call2, i32* %ret, align 4, !dbg !22246
  %4 = load i32, i32* %ret, align 4, !dbg !22247
  %cmp = icmp slt i32 %4, 0, !dbg !22249
  br i1 %cmp, label %if.then, label %if.end, !dbg !22250

if.then:                                          ; preds = %entry
  %5 = load %struct.macb*, %struct.macb** %lp, align 8, !dbg !22251
  %pdev3 = getelementptr inbounds %struct.macb, %struct.macb* %5, i32 0, i32 11, !dbg !22253
  %6 = load %struct.platform_device*, %struct.platform_device** %pdev3, align 8, !dbg !22253
  %dev4 = getelementptr inbounds %struct.platform_device, %struct.platform_device* %6, i32 0, i32 3, !dbg !22254
  call void @pm_runtime_put_noidle(%struct.device* %dev4) #12, !dbg !22255
  %7 = load i32, i32* %ret, align 4, !dbg !22256
  store i32 %7, i32* %retval, align 4, !dbg !22257
  br label %return, !dbg !22257

if.end:                                           ; preds = %entry
  %8 = load %struct.macb*, %struct.macb** %lp, align 8, !dbg !22258
  %macb_reg_readl = getelementptr inbounds %struct.macb, %struct.macb* %8, i32 0, i32 2, !dbg !22258
  %9 = load i32 (%struct.macb*, i32)*, i32 (%struct.macb*, i32)** %macb_reg_readl, align 8, !dbg !22258
  %10 = load %struct.macb*, %struct.macb** %lp, align 8, !dbg !22258
  %call5 = call i32 %9(%struct.macb* %10, i32 0) #12, !dbg !22258
  store i32 %call5, i32* %ctl, align 4, !dbg !22259
  %11 = load %struct.macb*, %struct.macb** %lp, align 8, !dbg !22260
  %macb_reg_writel = getelementptr inbounds %struct.macb, %struct.macb* %11, i32 0, i32 3, !dbg !22260
  %12 = load void (%struct.macb*, i32, i32)*, void (%struct.macb*, i32, i32)** %macb_reg_writel, align 8, !dbg !22260
  %13 = load %struct.macb*, %struct.macb** %lp, align 8, !dbg !22260
  %14 = load i32, i32* %ctl, align 4, !dbg !22260
  %or = or i32 %14, 32, !dbg !22260
  call void %12(%struct.macb* %13, i32 0, i32 %or) #12, !dbg !22260
  %15 = load %struct.macb*, %struct.macb** %lp, align 8, !dbg !22261
  call void @macb_set_hwaddr(%struct.macb* %15) #12, !dbg !22262
  %16 = load %struct.macb*, %struct.macb** %lp, align 8, !dbg !22263
  %call6 = call i32 @at91ether_start(%struct.macb* %16) #12, !dbg !22264
  store i32 %call6, i32* %ret, align 4, !dbg !22265
  %17 = load i32, i32* %ret, align 4, !dbg !22266
  %tobool = icmp ne i32 %17, 0, !dbg !22266
  br i1 %tobool, label %if.then7, label %if.end8, !dbg !22268

if.then7:                                         ; preds = %if.end
  br label %pm_exit, !dbg !22269

if.end8:                                          ; preds = %if.end
  %18 = load %struct.macb*, %struct.macb** %lp, align 8, !dbg !22270
  %call9 = call i32 @macb_phylink_connect(%struct.macb* %18) #12, !dbg !22271
  store i32 %call9, i32* %ret, align 4, !dbg !22272
  %19 = load i32, i32* %ret, align 4, !dbg !22273
  %tobool10 = icmp ne i32 %19, 0, !dbg !22273
  br i1 %tobool10, label %if.then11, label %if.end12, !dbg !22275

if.then11:                                        ; preds = %if.end8
  br label %stop, !dbg !22276

if.end12:                                         ; preds = %if.end8
  %20 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !22277
  call void @netif_start_queue(%struct.net_device* %20) #12, !dbg !22278
  store i32 0, i32* %retval, align 4, !dbg !22279
  br label %return, !dbg !22279

stop:                                             ; preds = %if.then11
  call void @llvm.dbg.label(metadata !22280), !dbg !22281
  %21 = load %struct.macb*, %struct.macb** %lp, align 8, !dbg !22282
  call void @at91ether_stop(%struct.macb* %21) #12, !dbg !22283
  br label %pm_exit, !dbg !22283

pm_exit:                                          ; preds = %stop, %if.then7
  call void @llvm.dbg.label(metadata !22284), !dbg !22285
  %22 = load %struct.macb*, %struct.macb** %lp, align 8, !dbg !22286
  %pdev13 = getelementptr inbounds %struct.macb, %struct.macb* %22, i32 0, i32 11, !dbg !22287
  %23 = load %struct.platform_device*, %struct.platform_device** %pdev13, align 8, !dbg !22287
  %dev14 = getelementptr inbounds %struct.platform_device, %struct.platform_device* %23, i32 0, i32 3, !dbg !22288
  %call15 = call i32 @pm_runtime_put_sync(%struct.device* %dev14) #12, !dbg !22289
  %24 = load i32, i32* %ret, align 4, !dbg !22290
  store i32 %24, i32* %retval, align 4, !dbg !22291
  br label %return, !dbg !22291

return:                                           ; preds = %pm_exit, %if.end12, %if.then
  %25 = load i32, i32* %retval, align 4, !dbg !22292
  ret i32 %25, !dbg !22292
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @at91ether_close(%struct.net_device* %dev) #2 !dbg !22293 {
entry:
  %dev.addr = alloca %struct.net_device*, align 8
  %lp = alloca %struct.macb*, align 8
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !22294, metadata !DIExpression()), !dbg !22295
  call void @llvm.dbg.declare(metadata %struct.macb** %lp, metadata !22296, metadata !DIExpression()), !dbg !22297
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !22298
  %call = call i8* @netdev_priv(%struct.net_device* %0) #12, !dbg !22299
  %1 = bitcast i8* %call to %struct.macb*, !dbg !22299
  store %struct.macb* %1, %struct.macb** %lp, align 8, !dbg !22297
  %2 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !22300
  call void @netif_stop_queue(%struct.net_device* %2) #12, !dbg !22301
  %3 = load %struct.macb*, %struct.macb** %lp, align 8, !dbg !22302
  %phylink = getelementptr inbounds %struct.macb, %struct.macb* %3, i32 0, i32 21, !dbg !22303
  %4 = load %struct.phylink*, %struct.phylink** %phylink, align 8, !dbg !22303
  call void @phylink_stop(%struct.phylink* %4) #12, !dbg !22304
  %5 = load %struct.macb*, %struct.macb** %lp, align 8, !dbg !22305
  %phylink1 = getelementptr inbounds %struct.macb, %struct.macb* %5, i32 0, i32 21, !dbg !22306
  %6 = load %struct.phylink*, %struct.phylink** %phylink1, align 8, !dbg !22306
  call void @phylink_disconnect_phy(%struct.phylink* %6) #12, !dbg !22307
  %7 = load %struct.macb*, %struct.macb** %lp, align 8, !dbg !22308
  call void @at91ether_stop(%struct.macb* %7) #12, !dbg !22309
  %8 = load %struct.macb*, %struct.macb** %lp, align 8, !dbg !22310
  %pdev = getelementptr inbounds %struct.macb, %struct.macb* %8, i32 0, i32 11, !dbg !22311
  %9 = load %struct.platform_device*, %struct.platform_device** %pdev, align 8, !dbg !22311
  %dev2 = getelementptr inbounds %struct.platform_device, %struct.platform_device* %9, i32 0, i32 3, !dbg !22312
  %call3 = call i32 @pm_runtime_put(%struct.device* %dev2) #12, !dbg !22313
  ret i32 %call3, !dbg !22314
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @at91ether_start_xmit(%struct.sk_buff* %skb, %struct.net_device* %dev) #2 !dbg !22315 {
entry:
  %lock.addr.i58 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i58, metadata !13124, metadata !DIExpression()), !dbg !22316
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !13130, metadata !DIExpression()), !dbg !22320
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !11065, metadata !DIExpression()), !dbg !22321
  %retval = alloca i32, align 4
  %skb.addr = alloca %struct.sk_buff*, align 8
  %dev.addr = alloca %struct.net_device*, align 8
  %lp = alloca %struct.macb*, align 8
  %flags = alloca i64, align 8
  %desc = alloca i32, align 4
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__dummy26 = alloca i64, align 8
  %__dummy227 = alloca i64, align 8
  %tmp30 = alloca i32, align 4
  store %struct.sk_buff* %skb, %struct.sk_buff** %skb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.sk_buff** %skb.addr, metadata !22328, metadata !DIExpression()), !dbg !22329
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !22330, metadata !DIExpression()), !dbg !22331
  call void @llvm.dbg.declare(metadata %struct.macb** %lp, metadata !22332, metadata !DIExpression()), !dbg !22333
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !22334
  %call = call i8* @netdev_priv(%struct.net_device* %0) #12, !dbg !22335
  %1 = bitcast i8* %call to %struct.macb*, !dbg !22335
  store %struct.macb* %1, %struct.macb** %lp, align 8, !dbg !22333
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !22336, metadata !DIExpression()), !dbg !22337
  %2 = load %struct.macb*, %struct.macb** %lp, align 8, !dbg !22338
  %rm9200_tx_len = getelementptr inbounds %struct.macb, %struct.macb* %2, i32 0, i32 28, !dbg !22339
  %3 = load i32, i32* %rm9200_tx_len, align 4, !dbg !22339
  %cmp = icmp ult i32 %3, 2, !dbg !22340
  br i1 %cmp, label %if.then, label %if.else, !dbg !22341

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i32* %desc, metadata !22342, metadata !DIExpression()), !dbg !22343
  %4 = load %struct.macb*, %struct.macb** %lp, align 8, !dbg !22344
  %rm9200_tx_tail = getelementptr inbounds %struct.macb, %struct.macb* %4, i32 0, i32 27, !dbg !22345
  %5 = load i32, i32* %rm9200_tx_tail, align 8, !dbg !22345
  store i32 %5, i32* %desc, align 4, !dbg !22343
  %6 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !22346
  %7 = load %struct.macb*, %struct.macb** %lp, align 8, !dbg !22347
  %rm9200_txq = getelementptr inbounds %struct.macb, %struct.macb* %7, i32 0, i32 26, !dbg !22348
  %8 = load i32, i32* %desc, align 4, !dbg !22349
  %idxprom = sext i32 %8 to i64, !dbg !22347
  %arrayidx = getelementptr [2 x %struct.macb_tx_skb], [2 x %struct.macb_tx_skb]* %rm9200_txq, i64 0, i64 %idxprom, !dbg !22347
  %skb1 = getelementptr inbounds %struct.macb_tx_skb, %struct.macb_tx_skb* %arrayidx, i32 0, i32 0, !dbg !22350
  store %struct.sk_buff* %6, %struct.sk_buff** %skb1, align 8, !dbg !22351
  %9 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !22352
  %len = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %9, i32 0, i32 5, !dbg !22353
  %10 = load i32, i32* %len, align 8, !dbg !22353
  %conv = zext i32 %10 to i64, !dbg !22352
  %11 = load %struct.macb*, %struct.macb** %lp, align 8, !dbg !22354
  %rm9200_txq2 = getelementptr inbounds %struct.macb, %struct.macb* %11, i32 0, i32 26, !dbg !22355
  %12 = load i32, i32* %desc, align 4, !dbg !22356
  %idxprom3 = sext i32 %12 to i64, !dbg !22354
  %arrayidx4 = getelementptr [2 x %struct.macb_tx_skb], [2 x %struct.macb_tx_skb]* %rm9200_txq2, i64 0, i64 %idxprom3, !dbg !22354
  %size = getelementptr inbounds %struct.macb_tx_skb, %struct.macb_tx_skb* %arrayidx4, i32 0, i32 2, !dbg !22357
  store i64 %conv, i64* %size, align 8, !dbg !22358
  %13 = load %struct.macb*, %struct.macb** %lp, align 8, !dbg !22359
  %pdev = getelementptr inbounds %struct.macb, %struct.macb* %13, i32 0, i32 11, !dbg !22359
  %14 = load %struct.platform_device*, %struct.platform_device** %pdev, align 8, !dbg !22359
  %dev5 = getelementptr inbounds %struct.platform_device, %struct.platform_device* %14, i32 0, i32 3, !dbg !22359
  %15 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !22359
  %data = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %15, i32 0, i32 37, !dbg !22359
  %16 = load i8*, i8** %data, align 8, !dbg !22359
  %17 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !22359
  %len6 = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %17, i32 0, i32 5, !dbg !22359
  %18 = load i32, i32* %len6, align 8, !dbg !22359
  %conv7 = zext i32 %18 to i64, !dbg !22359
  %call8 = call i64 @dma_map_single_attrs(%struct.device* %dev5, i8* %16, i64 %conv7, i32 1, i64 0) #12, !dbg !22359
  %19 = load %struct.macb*, %struct.macb** %lp, align 8, !dbg !22360
  %rm9200_txq9 = getelementptr inbounds %struct.macb, %struct.macb* %19, i32 0, i32 26, !dbg !22361
  %20 = load i32, i32* %desc, align 4, !dbg !22362
  %idxprom10 = sext i32 %20 to i64, !dbg !22360
  %arrayidx11 = getelementptr [2 x %struct.macb_tx_skb], [2 x %struct.macb_tx_skb]* %rm9200_txq9, i64 0, i64 %idxprom10, !dbg !22360
  %mapping = getelementptr inbounds %struct.macb_tx_skb, %struct.macb_tx_skb* %arrayidx11, i32 0, i32 1, !dbg !22363
  store i64 %call8, i64* %mapping, align 8, !dbg !22364
  %21 = load %struct.macb*, %struct.macb** %lp, align 8, !dbg !22365
  %pdev12 = getelementptr inbounds %struct.macb, %struct.macb* %21, i32 0, i32 11, !dbg !22367
  %22 = load %struct.platform_device*, %struct.platform_device** %pdev12, align 8, !dbg !22367
  %dev13 = getelementptr inbounds %struct.platform_device, %struct.platform_device* %22, i32 0, i32 3, !dbg !22368
  %23 = load %struct.macb*, %struct.macb** %lp, align 8, !dbg !22369
  %rm9200_txq14 = getelementptr inbounds %struct.macb, %struct.macb* %23, i32 0, i32 26, !dbg !22370
  %24 = load i32, i32* %desc, align 4, !dbg !22371
  %idxprom15 = sext i32 %24 to i64, !dbg !22369
  %arrayidx16 = getelementptr [2 x %struct.macb_tx_skb], [2 x %struct.macb_tx_skb]* %rm9200_txq14, i64 0, i64 %idxprom15, !dbg !22369
  %mapping17 = getelementptr inbounds %struct.macb_tx_skb, %struct.macb_tx_skb* %arrayidx16, i32 0, i32 1, !dbg !22372
  %25 = load i64, i64* %mapping17, align 8, !dbg !22372
  %call18 = call i32 @dma_mapping_error(%struct.device* %dev13, i64 %25) #12, !dbg !22373
  %tobool = icmp ne i32 %call18, 0, !dbg !22373
  br i1 %tobool, label %if.then19, label %if.end, !dbg !22374

if.then19:                                        ; preds = %if.then
  %26 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !22375
  call void @dev_kfree_skb_any(%struct.sk_buff* %26) #12, !dbg !22377
  %27 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !22378
  %stats = getelementptr inbounds %struct.net_device, %struct.net_device* %27, i32 0, i32 24, !dbg !22379
  %tx_dropped = getelementptr inbounds %struct.net_device_stats, %struct.net_device_stats* %stats, i32 0, i32 7, !dbg !22380
  %28 = load i64, i64* %tx_dropped, align 8, !dbg !22381
  %inc = add i64 %28, 1, !dbg !22381
  store i64 %inc, i64* %tx_dropped, align 8, !dbg !22381
  %29 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !22382
  call void (%struct.net_device*, i8*, ...) @netdev_err(%struct.net_device* %29, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.50, i64 0, i64 0), i8* getelementptr inbounds ([21 x i8], [21 x i8]* @__func__.at91ether_start_xmit, i64 0, i64 0)) #13, !dbg !22383
  store i32 0, i32* %retval, align 4, !dbg !22384
  br label %return, !dbg !22384

if.end:                                           ; preds = %if.then
  br label %do.body, !dbg !22385

do.body:                                          ; preds = %if.end
  br label %do.body20, !dbg !22386

do.body20:                                        ; preds = %do.body
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !22387, metadata !DIExpression()), !dbg !22389
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !22390, metadata !DIExpression()), !dbg !22389
  %cmp21 = icmp eq i64* %__dummy, %__dummy2, !dbg !22389
  %conv22 = zext i1 %cmp21 to i32, !dbg !22389
  store i32 1, i32* %tmp, align 4, !dbg !22389
  %30 = load i32, i32* %tmp, align 4, !dbg !22389
  br label %do.body23, !dbg !22391

do.body23:                                        ; preds = %do.body20
  br label %do.body24, !dbg !22392

do.body24:                                        ; preds = %do.body23
  br label %do.body25, !dbg !22393

do.body25:                                        ; preds = %do.body24
  call void @llvm.dbg.declare(metadata i64* %__dummy26, metadata !22395, metadata !DIExpression()), !dbg !22398
  call void @llvm.dbg.declare(metadata i64* %__dummy227, metadata !22399, metadata !DIExpression()), !dbg !22398
  %cmp28 = icmp eq i64* %__dummy26, %__dummy227, !dbg !22398
  %conv29 = zext i1 %cmp28 to i32, !dbg !22398
  store i32 1, i32* %tmp30, align 4, !dbg !22398
  %31 = load i32, i32* %tmp30, align 4, !dbg !22398
  %call31 = call i64 @arch_local_irq_save() #12, !dbg !22400
  store i64 %call31, i64* %flags, align 8, !dbg !22400
  br label %do.end, !dbg !22400

do.end:                                           ; preds = %do.body25
  br label %do.end32, !dbg !22393

do.end32:                                         ; preds = %do.end
  br label %do.body33, !dbg !22392

do.body33:                                        ; preds = %do.end32
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #8, !dbg !22401, !srcloc !22402
  br label %do.body34, !dbg !22401

do.body34:                                        ; preds = %do.body33
  %32 = load %struct.macb*, %struct.macb** %lp, align 8, !dbg !22403
  %lock = getelementptr inbounds %struct.macb, %struct.macb* %32, i32 0, i32 10, !dbg !22403
  store %struct.spinlock* %lock, %struct.spinlock** %lock.addr.i, align 8
  %33 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !22404
  %34 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %33, i32 0, i32 0, !dbg !22405
  %rlock.i = bitcast %union.anon.1* %34 to %struct.raw_spinlock*, !dbg !22405
  br label %do.end36, !dbg !22403

do.end36:                                         ; preds = %do.body34
  br label %do.end37, !dbg !22401

do.end37:                                         ; preds = %do.end36
  br label %do.end38, !dbg !22392

do.end38:                                         ; preds = %do.end37
  br label %do.end39, !dbg !22391

do.end39:                                         ; preds = %do.end38
  br label %do.end40, !dbg !22386

do.end40:                                         ; preds = %do.end39
  %35 = load i32, i32* %desc, align 4, !dbg !22406
  %add = add i32 %35, 1, !dbg !22407
  %and = and i32 %add, 1, !dbg !22408
  %36 = load %struct.macb*, %struct.macb** %lp, align 8, !dbg !22409
  %rm9200_tx_tail41 = getelementptr inbounds %struct.macb, %struct.macb* %36, i32 0, i32 27, !dbg !22410
  store i32 %and, i32* %rm9200_tx_tail41, align 8, !dbg !22411
  %37 = load %struct.macb*, %struct.macb** %lp, align 8, !dbg !22412
  %rm9200_tx_len42 = getelementptr inbounds %struct.macb, %struct.macb* %37, i32 0, i32 28, !dbg !22413
  %38 = load i32, i32* %rm9200_tx_len42, align 4, !dbg !22414
  %inc43 = add i32 %38, 1, !dbg !22414
  store i32 %inc43, i32* %rm9200_tx_len42, align 4, !dbg !22414
  %39 = load %struct.macb*, %struct.macb** %lp, align 8, !dbg !22415
  %rm9200_tx_len44 = getelementptr inbounds %struct.macb, %struct.macb* %39, i32 0, i32 28, !dbg !22417
  %40 = load i32, i32* %rm9200_tx_len44, align 4, !dbg !22417
  %cmp45 = icmp ugt i32 %40, 1, !dbg !22418
  br i1 %cmp45, label %if.then47, label %if.end48, !dbg !22419

if.then47:                                        ; preds = %do.end40
  %41 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !22420
  call void @netif_stop_queue(%struct.net_device* %41) #12, !dbg !22421
  br label %if.end48, !dbg !22421

if.end48:                                         ; preds = %if.then47, %do.end40
  %42 = load %struct.macb*, %struct.macb** %lp, align 8, !dbg !22422
  %lock49 = getelementptr inbounds %struct.macb, %struct.macb* %42, i32 0, i32 10, !dbg !22423
  %43 = load i64, i64* %flags, align 8, !dbg !22424
  store %struct.spinlock* %lock49, %struct.spinlock** %lock.addr.i58, align 8
  store i64 %43, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !743, metadata !13334, metadata !DIExpression()) #8, !dbg !22425
  call void @llvm.dbg.declare(metadata !743, metadata !13338, metadata !DIExpression()) #8, !dbg !22425
  store i32 1, i32* %tmp.i, align 4, !dbg !22425
  %44 = load i32, i32* %tmp.i, align 4, !dbg !22425
  call void @llvm.dbg.declare(metadata !743, metadata !13339, metadata !DIExpression()) #8, !dbg !22426
  call void @llvm.dbg.declare(metadata !743, metadata !13345, metadata !DIExpression()) #8, !dbg !22426
  store i32 1, i32* %tmp8.i, align 4, !dbg !22426
  %45 = load i32, i32* %tmp8.i, align 4, !dbg !22426
  %46 = load i64, i64* %flags.addr.i, align 8, !dbg !22427
  call void @arch_local_irq_restore(i64 %46) #14, !dbg !22427
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #8, !dbg !22428, !srcloc !13349
  %47 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i58, align 8, !dbg !22429
  %48 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %47, i32 0, i32 0, !dbg !22429
  %rlock.i59 = bitcast %union.anon.1* %48 to %struct.raw_spinlock*, !dbg !22429
  %49 = load %struct.macb*, %struct.macb** %lp, align 8, !dbg !22430
  %macb_reg_writel = getelementptr inbounds %struct.macb, %struct.macb* %49, i32 0, i32 3, !dbg !22430
  %50 = load void (%struct.macb*, i32, i32)*, void (%struct.macb*, i32, i32)** %macb_reg_writel, align 8, !dbg !22430
  %51 = load %struct.macb*, %struct.macb** %lp, align 8, !dbg !22430
  %52 = load %struct.macb*, %struct.macb** %lp, align 8, !dbg !22430
  %rm9200_txq50 = getelementptr inbounds %struct.macb, %struct.macb* %52, i32 0, i32 26, !dbg !22430
  %53 = load i32, i32* %desc, align 4, !dbg !22430
  %idxprom51 = sext i32 %53 to i64, !dbg !22430
  %arrayidx52 = getelementptr [2 x %struct.macb_tx_skb], [2 x %struct.macb_tx_skb]* %rm9200_txq50, i64 0, i64 %idxprom51, !dbg !22430
  %mapping53 = getelementptr inbounds %struct.macb_tx_skb, %struct.macb_tx_skb* %arrayidx52, i32 0, i32 1, !dbg !22430
  %54 = load i64, i64* %mapping53, align 8, !dbg !22430
  %conv54 = trunc i64 %54 to i32, !dbg !22430
  call void %50(%struct.macb* %51, i32 12, i32 %conv54) #12, !dbg !22430
  %55 = load %struct.macb*, %struct.macb** %lp, align 8, !dbg !22431
  %macb_reg_writel55 = getelementptr inbounds %struct.macb, %struct.macb* %55, i32 0, i32 3, !dbg !22431
  %56 = load void (%struct.macb*, i32, i32)*, void (%struct.macb*, i32, i32)** %macb_reg_writel55, align 8, !dbg !22431
  %57 = load %struct.macb*, %struct.macb** %lp, align 8, !dbg !22431
  %58 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !22431
  %len56 = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %58, i32 0, i32 5, !dbg !22431
  %59 = load i32, i32* %len56, align 8, !dbg !22431
  call void %56(%struct.macb* %57, i32 16, i32 %59) #12, !dbg !22431
  br label %if.end57, !dbg !22432

if.else:                                          ; preds = %entry
  %60 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !22433
  call void (%struct.net_device*, i8*, ...) @netdev_err(%struct.net_device* %60, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.51, i64 0, i64 0), i8* getelementptr inbounds ([21 x i8], [21 x i8]* @__func__.at91ether_start_xmit, i64 0, i64 0)) #13, !dbg !22435
  store i32 16, i32* %retval, align 4, !dbg !22436
  br label %return, !dbg !22436

if.end57:                                         ; preds = %if.end48
  store i32 0, i32* %retval, align 4, !dbg !22437
  br label %return, !dbg !22437

return:                                           ; preds = %if.end57, %if.else, %if.then19
  %61 = load i32, i32* %retval, align 4, !dbg !22438
  ret i32 %61, !dbg !22438
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @at91ether_start(%struct.macb* %lp) #2 !dbg !22439 {
entry:
  %retval = alloca i32, align 4
  %lp.addr = alloca %struct.macb*, align 8
  %q = alloca %struct.macb_queue*, align 8
  %desc = alloca %struct.macb_dma_desc*, align 8
  %addr = alloca i64, align 8
  %ctl = alloca i32, align 4
  %i = alloca i32, align 4
  %ret = alloca i32, align 4
  store %struct.macb* %lp, %struct.macb** %lp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.macb** %lp.addr, metadata !22440, metadata !DIExpression()), !dbg !22441
  call void @llvm.dbg.declare(metadata %struct.macb_queue** %q, metadata !22442, metadata !DIExpression()), !dbg !22443
  %0 = load %struct.macb*, %struct.macb** %lp.addr, align 8, !dbg !22444
  %queues = getelementptr inbounds %struct.macb, %struct.macb* %0, i32 0, i32 9, !dbg !22445
  %arrayidx = getelementptr [8 x %struct.macb_queue], [8 x %struct.macb_queue]* %queues, i64 0, i64 0, !dbg !22444
  store %struct.macb_queue* %arrayidx, %struct.macb_queue** %q, align 8, !dbg !22443
  call void @llvm.dbg.declare(metadata %struct.macb_dma_desc** %desc, metadata !22446, metadata !DIExpression()), !dbg !22447
  call void @llvm.dbg.declare(metadata i64* %addr, metadata !22448, metadata !DIExpression()), !dbg !22449
  call void @llvm.dbg.declare(metadata i32* %ctl, metadata !22450, metadata !DIExpression()), !dbg !22451
  call void @llvm.dbg.declare(metadata i32* %i, metadata !22452, metadata !DIExpression()), !dbg !22453
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !22454, metadata !DIExpression()), !dbg !22455
  %1 = load %struct.macb*, %struct.macb** %lp.addr, align 8, !dbg !22456
  %call = call i32 @at91ether_alloc_coherent(%struct.macb* %1) #12, !dbg !22457
  store i32 %call, i32* %ret, align 4, !dbg !22458
  %2 = load i32, i32* %ret, align 4, !dbg !22459
  %tobool = icmp ne i32 %2, 0, !dbg !22459
  br i1 %tobool, label %if.then, label %if.end, !dbg !22461

if.then:                                          ; preds = %entry
  %3 = load i32, i32* %ret, align 4, !dbg !22462
  store i32 %3, i32* %retval, align 4, !dbg !22463
  br label %return, !dbg !22463

if.end:                                           ; preds = %entry
  %4 = load %struct.macb_queue*, %struct.macb_queue** %q, align 8, !dbg !22464
  %rx_buffers_dma = getelementptr inbounds %struct.macb_queue, %struct.macb_queue* %4, i32 0, i32 18, !dbg !22465
  %5 = load i64, i64* %rx_buffers_dma, align 8, !dbg !22465
  store i64 %5, i64* %addr, align 8, !dbg !22466
  store i32 0, i32* %i, align 4, !dbg !22467
  br label %for.cond, !dbg !22469

for.cond:                                         ; preds = %for.inc, %if.end
  %6 = load i32, i32* %i, align 4, !dbg !22470
  %cmp = icmp slt i32 %6, 9, !dbg !22472
  br i1 %cmp, label %for.body, label %for.end, !dbg !22473

for.body:                                         ; preds = %for.cond
  %7 = load %struct.macb_queue*, %struct.macb_queue** %q, align 8, !dbg !22474
  %8 = load i32, i32* %i, align 4, !dbg !22476
  %call1 = call %struct.macb_dma_desc* @macb_rx_desc(%struct.macb_queue* %7, i32 %8) #12, !dbg !22477
  store %struct.macb_dma_desc* %call1, %struct.macb_dma_desc** %desc, align 8, !dbg !22478
  %9 = load %struct.macb*, %struct.macb** %lp.addr, align 8, !dbg !22479
  %10 = load %struct.macb_dma_desc*, %struct.macb_dma_desc** %desc, align 8, !dbg !22480
  %11 = load i64, i64* %addr, align 8, !dbg !22481
  call void @macb_set_addr(%struct.macb* %9, %struct.macb_dma_desc* %10, i64 %11) #12, !dbg !22482
  %12 = load %struct.macb_dma_desc*, %struct.macb_dma_desc** %desc, align 8, !dbg !22483
  %ctrl = getelementptr inbounds %struct.macb_dma_desc, %struct.macb_dma_desc* %12, i32 0, i32 1, !dbg !22484
  store i32 0, i32* %ctrl, align 4, !dbg !22485
  %13 = load i64, i64* %addr, align 8, !dbg !22486
  %add = add i64 %13, 1536, !dbg !22486
  store i64 %add, i64* %addr, align 8, !dbg !22486
  br label %for.inc, !dbg !22487

for.inc:                                          ; preds = %for.body
  %14 = load i32, i32* %i, align 4, !dbg !22488
  %inc = add i32 %14, 1, !dbg !22488
  store i32 %inc, i32* %i, align 4, !dbg !22488
  br label %for.cond, !dbg !22489, !llvm.loop !22490

for.end:                                          ; preds = %for.cond
  %15 = load %struct.macb_dma_desc*, %struct.macb_dma_desc** %desc, align 8, !dbg !22492
  %addr2 = getelementptr inbounds %struct.macb_dma_desc, %struct.macb_dma_desc* %15, i32 0, i32 0, !dbg !22493
  %16 = load i32, i32* %addr2, align 4, !dbg !22494
  %or = or i32 %16, 2, !dbg !22494
  store i32 %or, i32* %addr2, align 4, !dbg !22494
  %17 = load %struct.macb_queue*, %struct.macb_queue** %q, align 8, !dbg !22495
  %rx_tail = getelementptr inbounds %struct.macb_queue, %struct.macb_queue* %17, i32 0, i32 19, !dbg !22496
  store i32 0, i32* %rx_tail, align 8, !dbg !22497
  %18 = load %struct.macb*, %struct.macb** %lp.addr, align 8, !dbg !22498
  %macb_reg_writel = getelementptr inbounds %struct.macb, %struct.macb* %18, i32 0, i32 3, !dbg !22498
  %19 = load void (%struct.macb*, i32, i32)*, void (%struct.macb*, i32, i32)** %macb_reg_writel, align 8, !dbg !22498
  %20 = load %struct.macb*, %struct.macb** %lp.addr, align 8, !dbg !22498
  %21 = load %struct.macb_queue*, %struct.macb_queue** %q, align 8, !dbg !22498
  %rx_ring_dma = getelementptr inbounds %struct.macb_queue, %struct.macb_queue* %21, i32 0, i32 17, !dbg !22498
  %22 = load i64, i64* %rx_ring_dma, align 8, !dbg !22498
  %conv = trunc i64 %22 to i32, !dbg !22498
  call void %19(%struct.macb* %20, i32 24, i32 %conv) #12, !dbg !22498
  %23 = load %struct.macb*, %struct.macb** %lp.addr, align 8, !dbg !22499
  %macb_reg_readl = getelementptr inbounds %struct.macb, %struct.macb* %23, i32 0, i32 2, !dbg !22499
  %24 = load i32 (%struct.macb*, i32)*, i32 (%struct.macb*, i32)** %macb_reg_readl, align 8, !dbg !22499
  %25 = load %struct.macb*, %struct.macb** %lp.addr, align 8, !dbg !22499
  %call3 = call i32 %24(%struct.macb* %25, i32 0) #12, !dbg !22499
  store i32 %call3, i32* %ctl, align 4, !dbg !22500
  %26 = load %struct.macb*, %struct.macb** %lp.addr, align 8, !dbg !22501
  %macb_reg_writel4 = getelementptr inbounds %struct.macb, %struct.macb* %26, i32 0, i32 3, !dbg !22501
  %27 = load void (%struct.macb*, i32, i32)*, void (%struct.macb*, i32, i32)** %macb_reg_writel4, align 8, !dbg !22501
  %28 = load %struct.macb*, %struct.macb** %lp.addr, align 8, !dbg !22501
  %29 = load i32, i32* %ctl, align 4, !dbg !22501
  %or5 = or i32 %29, 4, !dbg !22501
  %or6 = or i32 %or5, 8, !dbg !22501
  call void %27(%struct.macb* %28, i32 0, i32 %or6) #12, !dbg !22501
  %30 = load %struct.macb*, %struct.macb** %lp.addr, align 8, !dbg !22502
  %macb_reg_writel7 = getelementptr inbounds %struct.macb, %struct.macb* %30, i32 0, i32 3, !dbg !22502
  %31 = load void (%struct.macb*, i32, i32)*, void (%struct.macb*, i32, i32)** %macb_reg_writel7, align 8, !dbg !22502
  %32 = load %struct.macb*, %struct.macb** %lp.addr, align 8, !dbg !22502
  call void %31(%struct.macb* %32, i32 40, i32 3318) #12, !dbg !22502
  store i32 0, i32* %retval, align 4, !dbg !22503
  br label %return, !dbg !22503

return:                                           ; preds = %for.end, %if.then
  %33 = load i32, i32* %retval, align 4, !dbg !22504
  ret i32 %33, !dbg !22504
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @netif_start_queue(%struct.net_device* %dev) #2 !dbg !22505 {
entry:
  %dev_queue.addr.i = alloca %struct.netdev_queue*, align 8
  call void @llvm.dbg.declare(metadata %struct.netdev_queue** %dev_queue.addr.i, metadata !14775, metadata !DIExpression()), !dbg !22506
  %dev.addr = alloca %struct.net_device*, align 8
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !22508, metadata !DIExpression()), !dbg !22509
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !22510
  %call = call %struct.netdev_queue* @netdev_get_tx_queue(%struct.net_device* %0, i32 0) #12, !dbg !22511
  store %struct.netdev_queue* %call, %struct.netdev_queue** %dev_queue.addr.i, align 8
  %1 = load %struct.netdev_queue*, %struct.netdev_queue** %dev_queue.addr.i, align 8, !dbg !22512
  %state.i = getelementptr inbounds %struct.netdev_queue, %struct.netdev_queue* %1, i32 0, i32 10, !dbg !22513
  call void @clear_bit(i64 0, i64* %state.i) #14, !dbg !22514
  ret void, !dbg !22515
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @at91ether_stop(%struct.macb* %lp) #2 !dbg !22516 {
entry:
  %lp.addr = alloca %struct.macb*, align 8
  %ctl = alloca i32, align 4
  store %struct.macb* %lp, %struct.macb** %lp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.macb** %lp.addr, metadata !22517, metadata !DIExpression()), !dbg !22518
  call void @llvm.dbg.declare(metadata i32* %ctl, metadata !22519, metadata !DIExpression()), !dbg !22520
  %0 = load %struct.macb*, %struct.macb** %lp.addr, align 8, !dbg !22521
  %macb_reg_writel = getelementptr inbounds %struct.macb, %struct.macb* %0, i32 0, i32 3, !dbg !22521
  %1 = load void (%struct.macb*, i32, i32)*, void (%struct.macb*, i32, i32)** %macb_reg_writel, align 8, !dbg !22521
  %2 = load %struct.macb*, %struct.macb** %lp.addr, align 8, !dbg !22521
  call void %1(%struct.macb* %2, i32 44, i32 3318) #12, !dbg !22521
  %3 = load %struct.macb*, %struct.macb** %lp.addr, align 8, !dbg !22522
  %macb_reg_readl = getelementptr inbounds %struct.macb, %struct.macb* %3, i32 0, i32 2, !dbg !22522
  %4 = load i32 (%struct.macb*, i32)*, i32 (%struct.macb*, i32)** %macb_reg_readl, align 8, !dbg !22522
  %5 = load %struct.macb*, %struct.macb** %lp.addr, align 8, !dbg !22522
  %call = call i32 %4(%struct.macb* %5, i32 0) #12, !dbg !22522
  store i32 %call, i32* %ctl, align 4, !dbg !22523
  %6 = load %struct.macb*, %struct.macb** %lp.addr, align 8, !dbg !22524
  %macb_reg_writel1 = getelementptr inbounds %struct.macb, %struct.macb* %6, i32 0, i32 3, !dbg !22524
  %7 = load void (%struct.macb*, i32, i32)*, void (%struct.macb*, i32, i32)** %macb_reg_writel1, align 8, !dbg !22524
  %8 = load %struct.macb*, %struct.macb** %lp.addr, align 8, !dbg !22524
  %9 = load i32, i32* %ctl, align 4, !dbg !22524
  %and = and i32 %9, -13, !dbg !22524
  call void %7(%struct.macb* %8, i32 0, i32 %and) #12, !dbg !22524
  %10 = load %struct.macb*, %struct.macb** %lp.addr, align 8, !dbg !22525
  call void @at91ether_free_coherent(%struct.macb* %10) #12, !dbg !22526
  ret void, !dbg !22527
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @at91ether_alloc_coherent(%struct.macb* %lp) #2 !dbg !22528 {
entry:
  %retval = alloca i32, align 4
  %lp.addr = alloca %struct.macb*, align 8
  %q = alloca %struct.macb_queue*, align 8
  store %struct.macb* %lp, %struct.macb** %lp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.macb** %lp.addr, metadata !22529, metadata !DIExpression()), !dbg !22530
  call void @llvm.dbg.declare(metadata %struct.macb_queue** %q, metadata !22531, metadata !DIExpression()), !dbg !22532
  %0 = load %struct.macb*, %struct.macb** %lp.addr, align 8, !dbg !22533
  %queues = getelementptr inbounds %struct.macb, %struct.macb* %0, i32 0, i32 9, !dbg !22534
  %arrayidx = getelementptr [8 x %struct.macb_queue], [8 x %struct.macb_queue]* %queues, i64 0, i64 0, !dbg !22533
  store %struct.macb_queue* %arrayidx, %struct.macb_queue** %q, align 8, !dbg !22532
  %1 = load %struct.macb*, %struct.macb** %lp.addr, align 8, !dbg !22535
  %pdev = getelementptr inbounds %struct.macb, %struct.macb* %1, i32 0, i32 11, !dbg !22536
  %2 = load %struct.platform_device*, %struct.platform_device** %pdev, align 8, !dbg !22536
  %dev = getelementptr inbounds %struct.platform_device, %struct.platform_device* %2, i32 0, i32 3, !dbg !22537
  %3 = load %struct.macb*, %struct.macb** %lp.addr, align 8, !dbg !22538
  %call = call i32 @macb_dma_desc_get_size(%struct.macb* %3) #12, !dbg !22539
  %mul = mul i32 9, %call, !dbg !22540
  %conv = zext i32 %mul to i64, !dbg !22541
  %4 = load %struct.macb_queue*, %struct.macb_queue** %q, align 8, !dbg !22542
  %rx_ring_dma = getelementptr inbounds %struct.macb_queue, %struct.macb_queue* %4, i32 0, i32 17, !dbg !22543
  %call1 = call i8* @dma_alloc_coherent(%struct.device* %dev, i64 %conv, i64* %rx_ring_dma, i32 3264) #12, !dbg !22544
  %5 = bitcast i8* %call1 to %struct.macb_dma_desc*, !dbg !22544
  %6 = load %struct.macb_queue*, %struct.macb_queue** %q, align 8, !dbg !22545
  %rx_ring = getelementptr inbounds %struct.macb_queue, %struct.macb_queue* %6, i32 0, i32 21, !dbg !22546
  store %struct.macb_dma_desc* %5, %struct.macb_dma_desc** %rx_ring, align 8, !dbg !22547
  %7 = load %struct.macb_queue*, %struct.macb_queue** %q, align 8, !dbg !22548
  %rx_ring2 = getelementptr inbounds %struct.macb_queue, %struct.macb_queue* %7, i32 0, i32 21, !dbg !22550
  %8 = load %struct.macb_dma_desc*, %struct.macb_dma_desc** %rx_ring2, align 8, !dbg !22550
  %tobool = icmp ne %struct.macb_dma_desc* %8, null, !dbg !22548
  br i1 %tobool, label %if.end, label %if.then, !dbg !22551

if.then:                                          ; preds = %entry
  store i32 -12, i32* %retval, align 4, !dbg !22552
  br label %return, !dbg !22552

if.end:                                           ; preds = %entry
  %9 = load %struct.macb*, %struct.macb** %lp.addr, align 8, !dbg !22553
  %pdev3 = getelementptr inbounds %struct.macb, %struct.macb* %9, i32 0, i32 11, !dbg !22554
  %10 = load %struct.platform_device*, %struct.platform_device** %pdev3, align 8, !dbg !22554
  %dev4 = getelementptr inbounds %struct.platform_device, %struct.platform_device* %10, i32 0, i32 3, !dbg !22555
  %11 = load %struct.macb_queue*, %struct.macb_queue** %q, align 8, !dbg !22556
  %rx_buffers_dma = getelementptr inbounds %struct.macb_queue, %struct.macb_queue* %11, i32 0, i32 18, !dbg !22557
  %call5 = call i8* @dma_alloc_coherent(%struct.device* %dev4, i64 13824, i64* %rx_buffers_dma, i32 3264) #12, !dbg !22558
  %12 = load %struct.macb_queue*, %struct.macb_queue** %q, align 8, !dbg !22559
  %rx_buffers = getelementptr inbounds %struct.macb_queue, %struct.macb_queue* %12, i32 0, i32 23, !dbg !22560
  store i8* %call5, i8** %rx_buffers, align 8, !dbg !22561
  %13 = load %struct.macb_queue*, %struct.macb_queue** %q, align 8, !dbg !22562
  %rx_buffers6 = getelementptr inbounds %struct.macb_queue, %struct.macb_queue* %13, i32 0, i32 23, !dbg !22564
  %14 = load i8*, i8** %rx_buffers6, align 8, !dbg !22564
  %tobool7 = icmp ne i8* %14, null, !dbg !22562
  br i1 %tobool7, label %if.end17, label %if.then8, !dbg !22565

if.then8:                                         ; preds = %if.end
  %15 = load %struct.macb*, %struct.macb** %lp.addr, align 8, !dbg !22566
  %pdev9 = getelementptr inbounds %struct.macb, %struct.macb* %15, i32 0, i32 11, !dbg !22568
  %16 = load %struct.platform_device*, %struct.platform_device** %pdev9, align 8, !dbg !22568
  %dev10 = getelementptr inbounds %struct.platform_device, %struct.platform_device* %16, i32 0, i32 3, !dbg !22569
  %17 = load %struct.macb*, %struct.macb** %lp.addr, align 8, !dbg !22570
  %call11 = call i32 @macb_dma_desc_get_size(%struct.macb* %17) #12, !dbg !22571
  %mul12 = mul i32 9, %call11, !dbg !22572
  %conv13 = zext i32 %mul12 to i64, !dbg !22573
  %18 = load %struct.macb_queue*, %struct.macb_queue** %q, align 8, !dbg !22574
  %rx_ring14 = getelementptr inbounds %struct.macb_queue, %struct.macb_queue* %18, i32 0, i32 21, !dbg !22575
  %19 = load %struct.macb_dma_desc*, %struct.macb_dma_desc** %rx_ring14, align 8, !dbg !22575
  %20 = bitcast %struct.macb_dma_desc* %19 to i8*, !dbg !22574
  %21 = load %struct.macb_queue*, %struct.macb_queue** %q, align 8, !dbg !22576
  %rx_ring_dma15 = getelementptr inbounds %struct.macb_queue, %struct.macb_queue* %21, i32 0, i32 17, !dbg !22577
  %22 = load i64, i64* %rx_ring_dma15, align 8, !dbg !22577
  call void @dma_free_coherent(%struct.device* %dev10, i64 %conv13, i8* %20, i64 %22) #12, !dbg !22578
  %23 = load %struct.macb_queue*, %struct.macb_queue** %q, align 8, !dbg !22579
  %rx_ring16 = getelementptr inbounds %struct.macb_queue, %struct.macb_queue* %23, i32 0, i32 21, !dbg !22580
  store %struct.macb_dma_desc* null, %struct.macb_dma_desc** %rx_ring16, align 8, !dbg !22581
  store i32 -12, i32* %retval, align 4, !dbg !22582
  br label %return, !dbg !22582

if.end17:                                         ; preds = %if.end
  store i32 0, i32* %retval, align 4, !dbg !22583
  br label %return, !dbg !22583

return:                                           ; preds = %if.end17, %if.then8, %if.then
  %24 = load i32, i32* %retval, align 4, !dbg !22584
  ret i32 %24, !dbg !22584
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @at91ether_free_coherent(%struct.macb* %lp) #2 !dbg !22585 {
entry:
  %lp.addr = alloca %struct.macb*, align 8
  %q = alloca %struct.macb_queue*, align 8
  store %struct.macb* %lp, %struct.macb** %lp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.macb** %lp.addr, metadata !22586, metadata !DIExpression()), !dbg !22587
  call void @llvm.dbg.declare(metadata %struct.macb_queue** %q, metadata !22588, metadata !DIExpression()), !dbg !22589
  %0 = load %struct.macb*, %struct.macb** %lp.addr, align 8, !dbg !22590
  %queues = getelementptr inbounds %struct.macb, %struct.macb* %0, i32 0, i32 9, !dbg !22591
  %arrayidx = getelementptr [8 x %struct.macb_queue], [8 x %struct.macb_queue]* %queues, i64 0, i64 0, !dbg !22590
  store %struct.macb_queue* %arrayidx, %struct.macb_queue** %q, align 8, !dbg !22589
  %1 = load %struct.macb_queue*, %struct.macb_queue** %q, align 8, !dbg !22592
  %rx_ring = getelementptr inbounds %struct.macb_queue, %struct.macb_queue* %1, i32 0, i32 21, !dbg !22594
  %2 = load %struct.macb_dma_desc*, %struct.macb_dma_desc** %rx_ring, align 8, !dbg !22594
  %tobool = icmp ne %struct.macb_dma_desc* %2, null, !dbg !22592
  br i1 %tobool, label %if.then, label %if.end, !dbg !22595

if.then:                                          ; preds = %entry
  %3 = load %struct.macb*, %struct.macb** %lp.addr, align 8, !dbg !22596
  %pdev = getelementptr inbounds %struct.macb, %struct.macb* %3, i32 0, i32 11, !dbg !22598
  %4 = load %struct.platform_device*, %struct.platform_device** %pdev, align 8, !dbg !22598
  %dev = getelementptr inbounds %struct.platform_device, %struct.platform_device* %4, i32 0, i32 3, !dbg !22599
  %5 = load %struct.macb*, %struct.macb** %lp.addr, align 8, !dbg !22600
  %call = call i32 @macb_dma_desc_get_size(%struct.macb* %5) #12, !dbg !22601
  %mul = mul i32 9, %call, !dbg !22602
  %conv = zext i32 %mul to i64, !dbg !22603
  %6 = load %struct.macb_queue*, %struct.macb_queue** %q, align 8, !dbg !22604
  %rx_ring1 = getelementptr inbounds %struct.macb_queue, %struct.macb_queue* %6, i32 0, i32 21, !dbg !22605
  %7 = load %struct.macb_dma_desc*, %struct.macb_dma_desc** %rx_ring1, align 8, !dbg !22605
  %8 = bitcast %struct.macb_dma_desc* %7 to i8*, !dbg !22604
  %9 = load %struct.macb_queue*, %struct.macb_queue** %q, align 8, !dbg !22606
  %rx_ring_dma = getelementptr inbounds %struct.macb_queue, %struct.macb_queue* %9, i32 0, i32 17, !dbg !22607
  %10 = load i64, i64* %rx_ring_dma, align 8, !dbg !22607
  call void @dma_free_coherent(%struct.device* %dev, i64 %conv, i8* %8, i64 %10) #12, !dbg !22608
  %11 = load %struct.macb_queue*, %struct.macb_queue** %q, align 8, !dbg !22609
  %rx_ring2 = getelementptr inbounds %struct.macb_queue, %struct.macb_queue* %11, i32 0, i32 21, !dbg !22610
  store %struct.macb_dma_desc* null, %struct.macb_dma_desc** %rx_ring2, align 8, !dbg !22611
  br label %if.end, !dbg !22612

if.end:                                           ; preds = %if.then, %entry
  %12 = load %struct.macb_queue*, %struct.macb_queue** %q, align 8, !dbg !22613
  %rx_buffers = getelementptr inbounds %struct.macb_queue, %struct.macb_queue* %12, i32 0, i32 23, !dbg !22615
  %13 = load i8*, i8** %rx_buffers, align 8, !dbg !22615
  %tobool3 = icmp ne i8* %13, null, !dbg !22613
  br i1 %tobool3, label %if.then4, label %if.end9, !dbg !22616

if.then4:                                         ; preds = %if.end
  %14 = load %struct.macb*, %struct.macb** %lp.addr, align 8, !dbg !22617
  %pdev5 = getelementptr inbounds %struct.macb, %struct.macb* %14, i32 0, i32 11, !dbg !22619
  %15 = load %struct.platform_device*, %struct.platform_device** %pdev5, align 8, !dbg !22619
  %dev6 = getelementptr inbounds %struct.platform_device, %struct.platform_device* %15, i32 0, i32 3, !dbg !22620
  %16 = load %struct.macb_queue*, %struct.macb_queue** %q, align 8, !dbg !22621
  %rx_buffers7 = getelementptr inbounds %struct.macb_queue, %struct.macb_queue* %16, i32 0, i32 23, !dbg !22622
  %17 = load i8*, i8** %rx_buffers7, align 8, !dbg !22622
  %18 = load %struct.macb_queue*, %struct.macb_queue** %q, align 8, !dbg !22623
  %rx_buffers_dma = getelementptr inbounds %struct.macb_queue, %struct.macb_queue* %18, i32 0, i32 18, !dbg !22624
  %19 = load i64, i64* %rx_buffers_dma, align 8, !dbg !22624
  call void @dma_free_coherent(%struct.device* %dev6, i64 13824, i8* %17, i64 %19) #12, !dbg !22625
  %20 = load %struct.macb_queue*, %struct.macb_queue** %q, align 8, !dbg !22626
  %rx_buffers8 = getelementptr inbounds %struct.macb_queue, %struct.macb_queue* %20, i32 0, i32 23, !dbg !22627
  store i8* null, i8** %rx_buffers8, align 8, !dbg !22628
  br label %if.end9, !dbg !22629

if.end9:                                          ; preds = %if.then4, %if.end
  ret void, !dbg !22630
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @netif_stop_queue(%struct.net_device* %dev) #2 !dbg !22631 {
entry:
  %dev_queue.addr.i = alloca %struct.netdev_queue*, align 8
  call void @llvm.dbg.declare(metadata %struct.netdev_queue** %dev_queue.addr.i, metadata !16972, metadata !DIExpression()), !dbg !22632
  %dev.addr = alloca %struct.net_device*, align 8
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !22634, metadata !DIExpression()), !dbg !22635
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !22636
  %call = call %struct.netdev_queue* @netdev_get_tx_queue(%struct.net_device* %0, i32 0) #12, !dbg !22637
  store %struct.netdev_queue* %call, %struct.netdev_queue** %dev_queue.addr.i, align 8
  %1 = load %struct.netdev_queue*, %struct.netdev_queue** %dev_queue.addr.i, align 8, !dbg !22638
  %state.i = getelementptr inbounds %struct.netdev_queue, %struct.netdev_queue* %1, i32 0, i32 10, !dbg !22639
  call void @set_bit(i64 0, i64* %state.i) #14, !dbg !22640
  ret void, !dbg !22641
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @at91ether_rx(%struct.net_device* %dev) #2 !dbg !22642 {
entry:
  %dev.addr = alloca %struct.net_device*, align 8
  %lp = alloca %struct.macb*, align 8
  %q = alloca %struct.macb_queue*, align 8
  %desc = alloca %struct.macb_dma_desc*, align 8
  %p_recv = alloca i8*, align 8
  %skb = alloca %struct.sk_buff*, align 8
  %pktlen = alloca i32, align 4
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !22643, metadata !DIExpression()), !dbg !22644
  call void @llvm.dbg.declare(metadata %struct.macb** %lp, metadata !22645, metadata !DIExpression()), !dbg !22646
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !22647
  %call = call i8* @netdev_priv(%struct.net_device* %0) #12, !dbg !22648
  %1 = bitcast i8* %call to %struct.macb*, !dbg !22648
  store %struct.macb* %1, %struct.macb** %lp, align 8, !dbg !22646
  call void @llvm.dbg.declare(metadata %struct.macb_queue** %q, metadata !22649, metadata !DIExpression()), !dbg !22650
  %2 = load %struct.macb*, %struct.macb** %lp, align 8, !dbg !22651
  %queues = getelementptr inbounds %struct.macb, %struct.macb* %2, i32 0, i32 9, !dbg !22652
  %arrayidx = getelementptr [8 x %struct.macb_queue], [8 x %struct.macb_queue]* %queues, i64 0, i64 0, !dbg !22651
  store %struct.macb_queue* %arrayidx, %struct.macb_queue** %q, align 8, !dbg !22650
  call void @llvm.dbg.declare(metadata %struct.macb_dma_desc** %desc, metadata !22653, metadata !DIExpression()), !dbg !22654
  call void @llvm.dbg.declare(metadata i8** %p_recv, metadata !22655, metadata !DIExpression()), !dbg !22656
  call void @llvm.dbg.declare(metadata %struct.sk_buff** %skb, metadata !22657, metadata !DIExpression()), !dbg !22658
  call void @llvm.dbg.declare(metadata i32* %pktlen, metadata !22659, metadata !DIExpression()), !dbg !22660
  %3 = load %struct.macb_queue*, %struct.macb_queue** %q, align 8, !dbg !22661
  %4 = load %struct.macb_queue*, %struct.macb_queue** %q, align 8, !dbg !22662
  %rx_tail = getelementptr inbounds %struct.macb_queue, %struct.macb_queue* %4, i32 0, i32 19, !dbg !22663
  %5 = load i32, i32* %rx_tail, align 8, !dbg !22663
  %call1 = call %struct.macb_dma_desc* @macb_rx_desc(%struct.macb_queue* %3, i32 %5) #12, !dbg !22664
  store %struct.macb_dma_desc* %call1, %struct.macb_dma_desc** %desc, align 8, !dbg !22665
  br label %while.cond, !dbg !22666

while.cond:                                       ; preds = %if.end29, %entry
  %6 = load %struct.macb_dma_desc*, %struct.macb_dma_desc** %desc, align 8, !dbg !22667
  %addr = getelementptr inbounds %struct.macb_dma_desc, %struct.macb_dma_desc* %6, i32 0, i32 0, !dbg !22668
  %7 = load i32, i32* %addr, align 4, !dbg !22668
  %and = and i32 %7, 1, !dbg !22669
  %tobool = icmp ne i32 %and, 0, !dbg !22666
  br i1 %tobool, label %while.body, label %while.end, !dbg !22666

while.body:                                       ; preds = %while.cond
  %8 = load %struct.macb_queue*, %struct.macb_queue** %q, align 8, !dbg !22670
  %rx_buffers = getelementptr inbounds %struct.macb_queue, %struct.macb_queue* %8, i32 0, i32 23, !dbg !22672
  %9 = load i8*, i8** %rx_buffers, align 8, !dbg !22672
  %10 = load %struct.macb_queue*, %struct.macb_queue** %q, align 8, !dbg !22673
  %rx_tail2 = getelementptr inbounds %struct.macb_queue, %struct.macb_queue* %10, i32 0, i32 19, !dbg !22674
  %11 = load i32, i32* %rx_tail2, align 8, !dbg !22674
  %mul = mul i32 %11, 1536, !dbg !22675
  %idx.ext = zext i32 %mul to i64, !dbg !22676
  %add.ptr = getelementptr i8, i8* %9, i64 %idx.ext, !dbg !22676
  store i8* %add.ptr, i8** %p_recv, align 8, !dbg !22677
  %12 = load %struct.macb_dma_desc*, %struct.macb_dma_desc** %desc, align 8, !dbg !22678
  %ctrl = getelementptr inbounds %struct.macb_dma_desc, %struct.macb_dma_desc* %12, i32 0, i32 1, !dbg !22678
  %13 = load i32, i32* %ctrl, align 4, !dbg !22678
  %and3 = and i32 %13, 4095, !dbg !22678
  %shl = shl i32 %and3, 0, !dbg !22678
  store i32 %shl, i32* %pktlen, align 4, !dbg !22679
  %14 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !22680
  %15 = load i32, i32* %pktlen, align 4, !dbg !22681
  %add = add i32 %15, 2, !dbg !22682
  %call4 = call %struct.sk_buff* @netdev_alloc_skb(%struct.net_device* %14, i32 %add) #12, !dbg !22683
  store %struct.sk_buff* %call4, %struct.sk_buff** %skb, align 8, !dbg !22684
  %16 = load %struct.sk_buff*, %struct.sk_buff** %skb, align 8, !dbg !22685
  %tobool5 = icmp ne %struct.sk_buff* %16, null, !dbg !22685
  br i1 %tobool5, label %if.then, label %if.else, !dbg !22687

if.then:                                          ; preds = %while.body
  %17 = load %struct.sk_buff*, %struct.sk_buff** %skb, align 8, !dbg !22688
  call void @skb_reserve(%struct.sk_buff* %17, i32 2) #12, !dbg !22690
  %18 = load %struct.sk_buff*, %struct.sk_buff** %skb, align 8, !dbg !22691
  %19 = load i8*, i8** %p_recv, align 8, !dbg !22692
  %20 = load i32, i32* %pktlen, align 4, !dbg !22693
  %call6 = call i8* @skb_put_data(%struct.sk_buff* %18, i8* %19, i32 %20) #12, !dbg !22694
  %21 = load %struct.sk_buff*, %struct.sk_buff** %skb, align 8, !dbg !22695
  %22 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !22696
  %call7 = call zeroext i16 @eth_type_trans(%struct.sk_buff* %21, %struct.net_device* %22) #12, !dbg !22697
  %23 = load %struct.sk_buff*, %struct.sk_buff** %skb, align 8, !dbg !22698
  %protocol = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %23, i32 0, i32 29, !dbg !22699
  store i16 %call7, i16* %protocol, align 8, !dbg !22700
  %24 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !22701
  %stats = getelementptr inbounds %struct.net_device, %struct.net_device* %24, i32 0, i32 24, !dbg !22702
  %rx_packets = getelementptr inbounds %struct.net_device_stats, %struct.net_device_stats* %stats, i32 0, i32 0, !dbg !22703
  %25 = load i64, i64* %rx_packets, align 8, !dbg !22704
  %inc = add i64 %25, 1, !dbg !22704
  store i64 %inc, i64* %rx_packets, align 8, !dbg !22704
  %26 = load i32, i32* %pktlen, align 4, !dbg !22705
  %conv = zext i32 %26 to i64, !dbg !22705
  %27 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !22706
  %stats8 = getelementptr inbounds %struct.net_device, %struct.net_device* %27, i32 0, i32 24, !dbg !22707
  %rx_bytes = getelementptr inbounds %struct.net_device_stats, %struct.net_device_stats* %stats8, i32 0, i32 2, !dbg !22708
  %28 = load i64, i64* %rx_bytes, align 8, !dbg !22709
  %add9 = add i64 %28, %conv, !dbg !22709
  store i64 %add9, i64* %rx_bytes, align 8, !dbg !22709
  %29 = load %struct.sk_buff*, %struct.sk_buff** %skb, align 8, !dbg !22710
  %call10 = call i32 @netif_rx(%struct.sk_buff* %29) #12, !dbg !22711
  br label %if.end, !dbg !22712

if.else:                                          ; preds = %while.body
  %30 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !22713
  %stats11 = getelementptr inbounds %struct.net_device, %struct.net_device* %30, i32 0, i32 24, !dbg !22715
  %rx_dropped = getelementptr inbounds %struct.net_device_stats, %struct.net_device_stats* %stats11, i32 0, i32 6, !dbg !22716
  %31 = load i64, i64* %rx_dropped, align 8, !dbg !22717
  %inc12 = add i64 %31, 1, !dbg !22717
  store i64 %inc12, i64* %rx_dropped, align 8, !dbg !22717
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %32 = load %struct.macb_dma_desc*, %struct.macb_dma_desc** %desc, align 8, !dbg !22718
  %ctrl13 = getelementptr inbounds %struct.macb_dma_desc, %struct.macb_dma_desc* %32, i32 0, i32 1, !dbg !22720
  %33 = load i32, i32* %ctrl13, align 4, !dbg !22720
  %and14 = and i32 %33, 1073741824, !dbg !22721
  %tobool15 = icmp ne i32 %and14, 0, !dbg !22721
  br i1 %tobool15, label %if.then16, label %if.end19, !dbg !22722

if.then16:                                        ; preds = %if.end
  %34 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !22723
  %stats17 = getelementptr inbounds %struct.net_device, %struct.net_device* %34, i32 0, i32 24, !dbg !22724
  %multicast = getelementptr inbounds %struct.net_device_stats, %struct.net_device_stats* %stats17, i32 0, i32 8, !dbg !22725
  %35 = load i64, i64* %multicast, align 8, !dbg !22726
  %inc18 = add i64 %35, 1, !dbg !22726
  store i64 %inc18, i64* %multicast, align 8, !dbg !22726
  br label %if.end19, !dbg !22723

if.end19:                                         ; preds = %if.then16, %if.end
  %36 = load %struct.macb_dma_desc*, %struct.macb_dma_desc** %desc, align 8, !dbg !22727
  %addr20 = getelementptr inbounds %struct.macb_dma_desc, %struct.macb_dma_desc* %36, i32 0, i32 0, !dbg !22728
  %37 = load i32, i32* %addr20, align 4, !dbg !22729
  %and21 = and i32 %37, -2, !dbg !22729
  store i32 %and21, i32* %addr20, align 4, !dbg !22729
  %38 = load %struct.macb_queue*, %struct.macb_queue** %q, align 8, !dbg !22730
  %rx_tail22 = getelementptr inbounds %struct.macb_queue, %struct.macb_queue* %38, i32 0, i32 19, !dbg !22732
  %39 = load i32, i32* %rx_tail22, align 8, !dbg !22732
  %cmp = icmp eq i32 %39, 8, !dbg !22733
  br i1 %cmp, label %if.then24, label %if.else26, !dbg !22734

if.then24:                                        ; preds = %if.end19
  %40 = load %struct.macb_queue*, %struct.macb_queue** %q, align 8, !dbg !22735
  %rx_tail25 = getelementptr inbounds %struct.macb_queue, %struct.macb_queue* %40, i32 0, i32 19, !dbg !22736
  store i32 0, i32* %rx_tail25, align 8, !dbg !22737
  br label %if.end29, !dbg !22735

if.else26:                                        ; preds = %if.end19
  %41 = load %struct.macb_queue*, %struct.macb_queue** %q, align 8, !dbg !22738
  %rx_tail27 = getelementptr inbounds %struct.macb_queue, %struct.macb_queue* %41, i32 0, i32 19, !dbg !22739
  %42 = load i32, i32* %rx_tail27, align 8, !dbg !22740
  %inc28 = add i32 %42, 1, !dbg !22740
  store i32 %inc28, i32* %rx_tail27, align 8, !dbg !22740
  br label %if.end29

if.end29:                                         ; preds = %if.else26, %if.then24
  %43 = load %struct.macb_queue*, %struct.macb_queue** %q, align 8, !dbg !22741
  %44 = load %struct.macb_queue*, %struct.macb_queue** %q, align 8, !dbg !22742
  %rx_tail30 = getelementptr inbounds %struct.macb_queue, %struct.macb_queue* %44, i32 0, i32 19, !dbg !22743
  %45 = load i32, i32* %rx_tail30, align 8, !dbg !22743
  %call31 = call %struct.macb_dma_desc* @macb_rx_desc(%struct.macb_queue* %43, i32 %45) #12, !dbg !22744
  store %struct.macb_dma_desc* %call31, %struct.macb_dma_desc** %desc, align 8, !dbg !22745
  br label %while.cond, !dbg !22666, !llvm.loop !22746

while.end:                                        ; preds = %while.cond
  ret void, !dbg !22748
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @dev_consume_skb_irq(%struct.sk_buff* %skb) #2 !dbg !22749 {
entry:
  %skb.addr = alloca %struct.sk_buff*, align 8
  store %struct.sk_buff* %skb, %struct.sk_buff** %skb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.sk_buff** %skb.addr, metadata !22750, metadata !DIExpression()), !dbg !22751
  %0 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !22752
  call void @__dev_kfree_skb_irq(%struct.sk_buff* %0, i32 0) #12, !dbg !22753
  ret void, !dbg !22754
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @netif_queue_stopped(%struct.net_device* %dev) #2 !dbg !22755 {
entry:
  %dev.addr = alloca %struct.net_device*, align 8
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !22756, metadata !DIExpression()), !dbg !22757
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !22758
  %call = call %struct.netdev_queue* @netdev_get_tx_queue(%struct.net_device* %0, i32 0) #12, !dbg !22759
  %call1 = call zeroext i1 @netif_tx_queue_stopped(%struct.netdev_queue* %call) #12, !dbg !22760
  ret i1 %call1, !dbg !22761
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @netif_wake_queue(%struct.net_device* %dev) #2 !dbg !22762 {
entry:
  %dev.addr = alloca %struct.net_device*, align 8
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !22763, metadata !DIExpression()), !dbg !22764
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !22765
  %call = call %struct.netdev_queue* @netdev_get_tx_queue(%struct.net_device* %0, i32 0) #12, !dbg !22766
  call void @netif_tx_wake_queue(%struct.netdev_queue* %call) #12, !dbg !22767
  ret void, !dbg !22768
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @skb_put_data(%struct.sk_buff* %skb, i8* %data, i32 %len) #2 !dbg !22769 {
entry:
  %skb.addr = alloca %struct.sk_buff*, align 8
  %data.addr = alloca i8*, align 8
  %len.addr = alloca i32, align 4
  %tmp = alloca i8*, align 8
  store %struct.sk_buff* %skb, %struct.sk_buff** %skb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.sk_buff** %skb.addr, metadata !22772, metadata !DIExpression()), !dbg !22773
  store i8* %data, i8** %data.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %data.addr, metadata !22774, metadata !DIExpression()), !dbg !22775
  store i32 %len, i32* %len.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %len.addr, metadata !22776, metadata !DIExpression()), !dbg !22777
  call void @llvm.dbg.declare(metadata i8** %tmp, metadata !22778, metadata !DIExpression()), !dbg !22779
  %0 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !22780
  %1 = load i32, i32* %len.addr, align 4, !dbg !22781
  %call = call i8* @skb_put(%struct.sk_buff* %0, i32 %1) #12, !dbg !22782
  store i8* %call, i8** %tmp, align 8, !dbg !22779
  %2 = load i8*, i8** %tmp, align 8, !dbg !22783
  %3 = load i8*, i8** %data.addr, align 8, !dbg !22784
  %4 = load i32, i32* %len.addr, align 4, !dbg !22785
  %conv = zext i32 %4 to i64, !dbg !22785
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %2, i8* align 1 %3, i64 %conv, i1 false), !dbg !22786
  %5 = load i8*, i8** %tmp, align 8, !dbg !22787
  ret i8* %5, !dbg !22788
}

; Function Attrs: noredzone
declare dso_local i32 @netif_rx(%struct.sk_buff*) #1

; Function Attrs: noredzone
declare dso_local void @__dev_kfree_skb_irq(%struct.sk_buff*, i32) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @fu540_c000_clk_init(%struct.platform_device* %pdev, %struct.clk** %pclk, %struct.clk** %hclk, %struct.clk** %tx_clk, %struct.clk** %rx_clk, %struct.clk** %tsu_clk) #2 !dbg !22789 {
entry:
  %retval = alloca i32, align 4
  %pdev.addr = alloca %struct.platform_device*, align 8
  %pclk.addr = alloca %struct.clk**, align 8
  %hclk.addr = alloca %struct.clk**, align 8
  %tx_clk.addr = alloca %struct.clk**, align 8
  %rx_clk.addr = alloca %struct.clk**, align 8
  %tsu_clk.addr = alloca %struct.clk**, align 8
  %init = alloca %struct.clk_init_data, align 8
  %err = alloca i32, align 4
  store %struct.platform_device* %pdev, %struct.platform_device** %pdev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.platform_device** %pdev.addr, metadata !22790, metadata !DIExpression()), !dbg !22791
  store %struct.clk** %pclk, %struct.clk*** %pclk.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.clk*** %pclk.addr, metadata !22792, metadata !DIExpression()), !dbg !22793
  store %struct.clk** %hclk, %struct.clk*** %hclk.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.clk*** %hclk.addr, metadata !22794, metadata !DIExpression()), !dbg !22795
  store %struct.clk** %tx_clk, %struct.clk*** %tx_clk.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.clk*** %tx_clk.addr, metadata !22796, metadata !DIExpression()), !dbg !22797
  store %struct.clk** %rx_clk, %struct.clk*** %rx_clk.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.clk*** %rx_clk.addr, metadata !22798, metadata !DIExpression()), !dbg !22799
  store %struct.clk** %tsu_clk, %struct.clk*** %tsu_clk.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.clk*** %tsu_clk.addr, metadata !22800, metadata !DIExpression()), !dbg !22801
  call void @llvm.dbg.declare(metadata %struct.clk_init_data* %init, metadata !22802, metadata !DIExpression()), !dbg !22803
  call void @llvm.dbg.declare(metadata i32* %err, metadata !22804, metadata !DIExpression()), !dbg !22805
  store i32 0, i32* %err, align 4, !dbg !22805
  %0 = load %struct.platform_device*, %struct.platform_device** %pdev.addr, align 8, !dbg !22806
  %1 = load %struct.clk**, %struct.clk*** %pclk.addr, align 8, !dbg !22807
  %2 = load %struct.clk**, %struct.clk*** %hclk.addr, align 8, !dbg !22808
  %3 = load %struct.clk**, %struct.clk*** %tx_clk.addr, align 8, !dbg !22809
  %4 = load %struct.clk**, %struct.clk*** %rx_clk.addr, align 8, !dbg !22810
  %5 = load %struct.clk**, %struct.clk*** %tsu_clk.addr, align 8, !dbg !22811
  %call = call i32 @macb_clk_init(%struct.platform_device* %0, %struct.clk** %1, %struct.clk** %2, %struct.clk** %3, %struct.clk** %4, %struct.clk** %5) #12, !dbg !22812
  store i32 %call, i32* %err, align 4, !dbg !22813
  %6 = load i32, i32* %err, align 4, !dbg !22814
  %tobool = icmp ne i32 %6, 0, !dbg !22814
  br i1 %tobool, label %if.then, label %if.end, !dbg !22816

if.then:                                          ; preds = %entry
  %7 = load i32, i32* %err, align 4, !dbg !22817
  store i32 %7, i32* %retval, align 4, !dbg !22818
  br label %return, !dbg !22818

if.end:                                           ; preds = %entry
  %8 = load %struct.platform_device*, %struct.platform_device** %pdev.addr, align 8, !dbg !22819
  %dev = getelementptr inbounds %struct.platform_device, %struct.platform_device* %8, i32 0, i32 3, !dbg !22820
  %call1 = call i8* @devm_kzalloc(%struct.device* %dev, i64 40, i32 3264) #12, !dbg !22821
  %9 = bitcast i8* %call1 to %struct.sifive_fu540_macb_mgmt*, !dbg !22821
  store %struct.sifive_fu540_macb_mgmt* %9, %struct.sifive_fu540_macb_mgmt** @mgmt, align 8, !dbg !22822
  %10 = load %struct.sifive_fu540_macb_mgmt*, %struct.sifive_fu540_macb_mgmt** @mgmt, align 8, !dbg !22823
  %tobool2 = icmp ne %struct.sifive_fu540_macb_mgmt* %10, null, !dbg !22823
  br i1 %tobool2, label %if.end4, label %if.then3, !dbg !22825

if.then3:                                         ; preds = %if.end
  store i32 -12, i32* %retval, align 4, !dbg !22826
  br label %return, !dbg !22826

if.end4:                                          ; preds = %if.end
  %name = getelementptr inbounds %struct.clk_init_data, %struct.clk_init_data* %init, i32 0, i32 0, !dbg !22827
  store i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.53, i64 0, i64 0), i8** %name, align 8, !dbg !22828
  %ops = getelementptr inbounds %struct.clk_init_data, %struct.clk_init_data* %init, i32 0, i32 1, !dbg !22829
  store %struct.clk_ops* @fu540_c000_ops, %struct.clk_ops** %ops, align 8, !dbg !22830
  %flags = getelementptr inbounds %struct.clk_init_data, %struct.clk_init_data* %init, i32 0, i32 6, !dbg !22831
  store i64 0, i64* %flags, align 8, !dbg !22832
  %num_parents = getelementptr inbounds %struct.clk_init_data, %struct.clk_init_data* %init, i32 0, i32 5, !dbg !22833
  store i8 0, i8* %num_parents, align 8, !dbg !22834
  %11 = load %struct.sifive_fu540_macb_mgmt*, %struct.sifive_fu540_macb_mgmt** @mgmt, align 8, !dbg !22835
  %rate = getelementptr inbounds %struct.sifive_fu540_macb_mgmt, %struct.sifive_fu540_macb_mgmt* %11, i32 0, i32 1, !dbg !22836
  store i64 0, i64* %rate, align 8, !dbg !22837
  %12 = load %struct.sifive_fu540_macb_mgmt*, %struct.sifive_fu540_macb_mgmt** @mgmt, align 8, !dbg !22838
  %hw = getelementptr inbounds %struct.sifive_fu540_macb_mgmt, %struct.sifive_fu540_macb_mgmt* %12, i32 0, i32 2, !dbg !22839
  %init5 = getelementptr inbounds %struct.clk_hw, %struct.clk_hw* %hw, i32 0, i32 2, !dbg !22840
  store %struct.clk_init_data* %init, %struct.clk_init_data** %init5, align 8, !dbg !22841
  %13 = load %struct.platform_device*, %struct.platform_device** %pdev.addr, align 8, !dbg !22842
  %dev6 = getelementptr inbounds %struct.platform_device, %struct.platform_device* %13, i32 0, i32 3, !dbg !22843
  %14 = load %struct.sifive_fu540_macb_mgmt*, %struct.sifive_fu540_macb_mgmt** @mgmt, align 8, !dbg !22844
  %hw7 = getelementptr inbounds %struct.sifive_fu540_macb_mgmt, %struct.sifive_fu540_macb_mgmt* %14, i32 0, i32 2, !dbg !22845
  %call8 = call %struct.clk* @devm_clk_register(%struct.device* %dev6, %struct.clk_hw* %hw7) #12, !dbg !22846
  %15 = load %struct.clk**, %struct.clk*** %tx_clk.addr, align 8, !dbg !22847
  store %struct.clk* %call8, %struct.clk** %15, align 8, !dbg !22848
  %16 = load %struct.clk**, %struct.clk*** %tx_clk.addr, align 8, !dbg !22849
  %17 = load %struct.clk*, %struct.clk** %16, align 8, !dbg !22851
  %18 = bitcast %struct.clk* %17 to i8*, !dbg !22851
  %call9 = call zeroext i1 @IS_ERR(i8* %18) #12, !dbg !22852
  br i1 %call9, label %if.then10, label %if.end12, !dbg !22853

if.then10:                                        ; preds = %if.end4
  %19 = load %struct.clk**, %struct.clk*** %tx_clk.addr, align 8, !dbg !22854
  %20 = load %struct.clk*, %struct.clk** %19, align 8, !dbg !22855
  %21 = bitcast %struct.clk* %20 to i8*, !dbg !22855
  %call11 = call i64 @PTR_ERR(i8* %21) #12, !dbg !22856
  %conv = trunc i64 %call11 to i32, !dbg !22856
  store i32 %conv, i32* %retval, align 4, !dbg !22857
  br label %return, !dbg !22857

if.end12:                                         ; preds = %if.end4
  %22 = load %struct.clk**, %struct.clk*** %tx_clk.addr, align 8, !dbg !22858
  %23 = load %struct.clk*, %struct.clk** %22, align 8, !dbg !22859
  %call13 = call i32 @clk_prepare_enable(%struct.clk* %23) #12, !dbg !22860
  store i32 %call13, i32* %err, align 4, !dbg !22861
  %24 = load i32, i32* %err, align 4, !dbg !22862
  %tobool14 = icmp ne i32 %24, 0, !dbg !22862
  br i1 %tobool14, label %if.then15, label %if.else, !dbg !22864

if.then15:                                        ; preds = %if.end12
  %25 = load %struct.platform_device*, %struct.platform_device** %pdev.addr, align 8, !dbg !22865
  %dev16 = getelementptr inbounds %struct.platform_device, %struct.platform_device* %25, i32 0, i32 3, !dbg !22865
  %26 = load i32, i32* %err, align 4, !dbg !22865
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %dev16, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.54, i64 0, i64 0), i32 %26) #13, !dbg !22865
  br label %if.end19, !dbg !22865

if.else:                                          ; preds = %if.end12
  %27 = load %struct.platform_device*, %struct.platform_device** %pdev.addr, align 8, !dbg !22866
  %dev17 = getelementptr inbounds %struct.platform_device, %struct.platform_device* %27, i32 0, i32 3, !dbg !22866
  %name18 = getelementptr inbounds %struct.clk_init_data, %struct.clk_init_data* %init, i32 0, i32 0, !dbg !22866
  %28 = load i8*, i8** %name18, align 8, !dbg !22866
  call void (%struct.device*, i8*, ...) @_dev_info(%struct.device* %dev17, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.55, i64 0, i64 0), i8* %28) #13, !dbg !22866
  br label %if.end19

if.end19:                                         ; preds = %if.else, %if.then15
  store i32 0, i32* %retval, align 4, !dbg !22867
  br label %return, !dbg !22867

return:                                           ; preds = %if.end19, %if.then10, %if.then3, %if.then
  %29 = load i32, i32* %retval, align 4, !dbg !22868
  ret i32 %29, !dbg !22868
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @fu540_c000_init(%struct.platform_device* %pdev) #2 !dbg !22869 {
entry:
  %retval = alloca i32, align 4
  %pdev.addr = alloca %struct.platform_device*, align 8
  store %struct.platform_device* %pdev, %struct.platform_device** %pdev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.platform_device** %pdev.addr, metadata !22870, metadata !DIExpression()), !dbg !22871
  %0 = load %struct.platform_device*, %struct.platform_device** %pdev.addr, align 8, !dbg !22872
  %call = call i8* @devm_platform_ioremap_resource(%struct.platform_device* %0, i32 1) #12, !dbg !22873
  %1 = load %struct.sifive_fu540_macb_mgmt*, %struct.sifive_fu540_macb_mgmt** @mgmt, align 8, !dbg !22874
  %reg = getelementptr inbounds %struct.sifive_fu540_macb_mgmt, %struct.sifive_fu540_macb_mgmt* %1, i32 0, i32 0, !dbg !22875
  store i8* %call, i8** %reg, align 8, !dbg !22876
  %2 = load %struct.sifive_fu540_macb_mgmt*, %struct.sifive_fu540_macb_mgmt** @mgmt, align 8, !dbg !22877
  %reg1 = getelementptr inbounds %struct.sifive_fu540_macb_mgmt, %struct.sifive_fu540_macb_mgmt* %2, i32 0, i32 0, !dbg !22879
  %3 = load i8*, i8** %reg1, align 8, !dbg !22879
  %call2 = call zeroext i1 @IS_ERR(i8* %3) #12, !dbg !22880
  br i1 %call2, label %if.then, label %if.end, !dbg !22881

if.then:                                          ; preds = %entry
  %4 = load %struct.sifive_fu540_macb_mgmt*, %struct.sifive_fu540_macb_mgmt** @mgmt, align 8, !dbg !22882
  %reg3 = getelementptr inbounds %struct.sifive_fu540_macb_mgmt, %struct.sifive_fu540_macb_mgmt* %4, i32 0, i32 0, !dbg !22883
  %5 = load i8*, i8** %reg3, align 8, !dbg !22883
  %call4 = call i64 @PTR_ERR(i8* %5) #12, !dbg !22884
  %conv = trunc i64 %call4 to i32, !dbg !22884
  store i32 %conv, i32* %retval, align 4, !dbg !22885
  br label %return, !dbg !22885

if.end:                                           ; preds = %entry
  %6 = load %struct.platform_device*, %struct.platform_device** %pdev.addr, align 8, !dbg !22886
  %call5 = call i32 @macb_init(%struct.platform_device* %6) #12, !dbg !22887
  store i32 %call5, i32* %retval, align 4, !dbg !22888
  br label %return, !dbg !22888

return:                                           ; preds = %if.end, %if.then
  %7 = load i32, i32* %retval, align 4, !dbg !22889
  ret i32 %7, !dbg !22889
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @devm_kzalloc(%struct.device* %dev, i64 %size, i32 %gfp) #2 !dbg !22890 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %size.addr = alloca i64, align 8
  %gfp.addr = alloca i32, align 4
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !22893, metadata !DIExpression()), !dbg !22894
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !22895, metadata !DIExpression()), !dbg !22896
  store i32 %gfp, i32* %gfp.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %gfp.addr, metadata !22897, metadata !DIExpression()), !dbg !22898
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !22899
  %1 = load i64, i64* %size.addr, align 8, !dbg !22900
  %2 = load i32, i32* %gfp.addr, align 4, !dbg !22901
  %or = or i32 %2, 256, !dbg !22902
  %call = call noalias i8* @devm_kmalloc(%struct.device* %0, i64 %1, i32 %or) #12, !dbg !22903
  ret i8* %call, !dbg !22904
}

; Function Attrs: noredzone
declare dso_local %struct.clk* @devm_clk_register(%struct.device*, %struct.clk_hw*) #1

; Function Attrs: noredzone
declare dso_local noalias i8* @devm_kmalloc(%struct.device*, i64, i32) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @fu540_macb_tx_recalc_rate(%struct.clk_hw* %hw, i64 %parent_rate) #2 !dbg !22905 {
entry:
  %hw.addr = alloca %struct.clk_hw*, align 8
  %parent_rate.addr = alloca i64, align 8
  store %struct.clk_hw* %hw, %struct.clk_hw** %hw.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.clk_hw** %hw.addr, metadata !22906, metadata !DIExpression()), !dbg !22907
  store i64 %parent_rate, i64* %parent_rate.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %parent_rate.addr, metadata !22908, metadata !DIExpression()), !dbg !22909
  %0 = load %struct.sifive_fu540_macb_mgmt*, %struct.sifive_fu540_macb_mgmt** @mgmt, align 8, !dbg !22910
  %rate = getelementptr inbounds %struct.sifive_fu540_macb_mgmt, %struct.sifive_fu540_macb_mgmt* %0, i32 0, i32 1, !dbg !22911
  %1 = load i64, i64* %rate, align 8, !dbg !22911
  ret i64 %1, !dbg !22912
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @fu540_macb_tx_round_rate(%struct.clk_hw* %hw, i64 %rate, i64* %parent_rate) #2 !dbg !22913 {
entry:
  %retval = alloca i64, align 8
  %hw.addr = alloca %struct.clk_hw*, align 8
  %rate.addr = alloca i64, align 8
  %parent_rate.addr = alloca i64*, align 8
  %__ret_warn_on = alloca i32, align 4
  %tmp = alloca i64, align 8
  %__ret_warn_on25 = alloca i32, align 4
  %tmp49 = alloca i64, align 8
  %__ret_warn_on59 = alloca i32, align 4
  %tmp83 = alloca i64, align 8
  %__ret_warn_on97 = alloca i32, align 4
  %tmp121 = alloca i64, align 8
  %__ret_warn_on131 = alloca i32, align 4
  %tmp155 = alloca i64, align 8
  %__ret_warn_on176 = alloca i32, align 4
  %tmp200 = alloca i64, align 8
  store %struct.clk_hw* %hw, %struct.clk_hw** %hw.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.clk_hw** %hw.addr, metadata !22914, metadata !DIExpression()), !dbg !22915
  store i64 %rate, i64* %rate.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %rate.addr, metadata !22916, metadata !DIExpression()), !dbg !22917
  store i64* %parent_rate, i64** %parent_rate.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %parent_rate.addr, metadata !22918, metadata !DIExpression()), !dbg !22919
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on, metadata !22920, metadata !DIExpression()), !dbg !22923
  %0 = load i64, i64* %rate.addr, align 8, !dbg !22923
  %cmp = icmp ult i64 %0, 2500000, !dbg !22923
  %lnot = xor i1 %cmp, true, !dbg !22923
  %lnot1 = xor i1 %lnot, true, !dbg !22923
  %lnot.ext = zext i1 %lnot1 to i32, !dbg !22923
  store i32 %lnot.ext, i32* %__ret_warn_on, align 4, !dbg !22923
  %1 = load i32, i32* %__ret_warn_on, align 4, !dbg !22924
  %tobool = icmp ne i32 %1, 0, !dbg !22924
  %lnot2 = xor i1 %tobool, true, !dbg !22924
  %lnot4 = xor i1 %lnot2, true, !dbg !22924
  %lnot.ext5 = zext i1 %lnot4 to i32, !dbg !22924
  %conv = sext i32 %lnot.ext5 to i64, !dbg !22924
  %tobool6 = icmp ne i64 %conv, 0, !dbg !22924
  br i1 %tobool6, label %if.then, label %if.end, !dbg !22923

if.then:                                          ; preds = %entry
  br label %do.body, !dbg !22924

do.body:                                          ; preds = %if.then
  br label %do.body7, !dbg !22926

do.body7:                                         ; preds = %do.body
  br label %do.end, !dbg !22928

do.end:                                           ; preds = %do.body7
  br label %do.body8, !dbg !22926

do.body8:                                         ; preds = %do.end
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.33, i64 0, i64 0), i32 4233, i32 2305, i64 12) #8, !dbg !22930, !srcloc !22932
  br label %do.end9, !dbg !22930

do.end9:                                          ; preds = %do.body8
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 558) #8, !dbg !22933, !srcloc !22935
  br label %do.body10, !dbg !22926

do.body10:                                        ; preds = %do.end9
  br label %do.end11, !dbg !22936

do.end11:                                         ; preds = %do.body10
  br label %do.end12, !dbg !22926

do.end12:                                         ; preds = %do.end11
  br label %if.end, !dbg !22926

if.end:                                           ; preds = %do.end12, %entry
  %2 = load i32, i32* %__ret_warn_on, align 4, !dbg !22923
  %tobool13 = icmp ne i32 %2, 0, !dbg !22923
  %lnot14 = xor i1 %tobool13, true, !dbg !22923
  %lnot16 = xor i1 %lnot14, true, !dbg !22923
  %lnot.ext17 = zext i1 %lnot16 to i32, !dbg !22923
  %conv18 = sext i32 %lnot.ext17 to i64, !dbg !22923
  store i64 %conv18, i64* %tmp, align 8, !dbg !22924
  %3 = load i64, i64* %tmp, align 8, !dbg !22923
  %tobool19 = icmp ne i64 %3, 0, !dbg !22938
  br i1 %tobool19, label %if.then20, label %if.else, !dbg !22939

if.then20:                                        ; preds = %if.end
  store i64 2500000, i64* %retval, align 8, !dbg !22940
  br label %return, !dbg !22940

if.else:                                          ; preds = %if.end
  %4 = load i64, i64* %rate.addr, align 8, !dbg !22941
  %cmp21 = icmp eq i64 %4, 2500000, !dbg !22943
  br i1 %cmp21, label %if.then23, label %if.else24, !dbg !22944

if.then23:                                        ; preds = %if.else
  store i64 2500000, i64* %retval, align 8, !dbg !22945
  br label %return, !dbg !22945

if.else24:                                        ; preds = %if.else
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on25, metadata !22946, metadata !DIExpression()), !dbg !22949
  %5 = load i64, i64* %rate.addr, align 8, !dbg !22949
  %cmp26 = icmp ult i64 %5, 13750000, !dbg !22949
  %lnot28 = xor i1 %cmp26, true, !dbg !22949
  %lnot30 = xor i1 %lnot28, true, !dbg !22949
  %lnot.ext31 = zext i1 %lnot30 to i32, !dbg !22949
  store i32 %lnot.ext31, i32* %__ret_warn_on25, align 4, !dbg !22949
  %6 = load i32, i32* %__ret_warn_on25, align 4, !dbg !22950
  %tobool32 = icmp ne i32 %6, 0, !dbg !22950
  %lnot33 = xor i1 %tobool32, true, !dbg !22950
  %lnot35 = xor i1 %lnot33, true, !dbg !22950
  %lnot.ext36 = zext i1 %lnot35 to i32, !dbg !22950
  %conv37 = sext i32 %lnot.ext36 to i64, !dbg !22950
  %tobool38 = icmp ne i64 %conv37, 0, !dbg !22950
  br i1 %tobool38, label %if.then39, label %if.end48, !dbg !22949

if.then39:                                        ; preds = %if.else24
  br label %do.body40, !dbg !22950

do.body40:                                        ; preds = %if.then39
  br label %do.body41, !dbg !22952

do.body41:                                        ; preds = %do.body40
  br label %do.end42, !dbg !22954

do.end42:                                         ; preds = %do.body41
  br label %do.body43, !dbg !22952

do.body43:                                        ; preds = %do.end42
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.33, i64 0, i64 0), i32 4237, i32 2305, i64 12) #8, !dbg !22956, !srcloc !22958
  br label %do.end44, !dbg !22956

do.end44:                                         ; preds = %do.body43
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 559) #8, !dbg !22959, !srcloc !22961
  br label %do.body45, !dbg !22952

do.body45:                                        ; preds = %do.end44
  br label %do.end46, !dbg !22962

do.end46:                                         ; preds = %do.body45
  br label %do.end47, !dbg !22952

do.end47:                                         ; preds = %do.end46
  br label %if.end48, !dbg !22952

if.end48:                                         ; preds = %do.end47, %if.else24
  %7 = load i32, i32* %__ret_warn_on25, align 4, !dbg !22949
  %tobool50 = icmp ne i32 %7, 0, !dbg !22949
  %lnot51 = xor i1 %tobool50, true, !dbg !22949
  %lnot53 = xor i1 %lnot51, true, !dbg !22949
  %lnot.ext54 = zext i1 %lnot53 to i32, !dbg !22949
  %conv55 = sext i32 %lnot.ext54 to i64, !dbg !22949
  store i64 %conv55, i64* %tmp49, align 8, !dbg !22950
  %8 = load i64, i64* %tmp49, align 8, !dbg !22949
  %tobool56 = icmp ne i64 %8, 0, !dbg !22964
  br i1 %tobool56, label %if.then57, label %if.else58, !dbg !22965

if.then57:                                        ; preds = %if.end48
  store i64 2500000, i64* %retval, align 8, !dbg !22966
  br label %return, !dbg !22966

if.else58:                                        ; preds = %if.end48
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on59, metadata !22967, metadata !DIExpression()), !dbg !22970
  %9 = load i64, i64* %rate.addr, align 8, !dbg !22970
  %cmp60 = icmp ult i64 %9, 25000000, !dbg !22970
  %lnot62 = xor i1 %cmp60, true, !dbg !22970
  %lnot64 = xor i1 %lnot62, true, !dbg !22970
  %lnot.ext65 = zext i1 %lnot64 to i32, !dbg !22970
  store i32 %lnot.ext65, i32* %__ret_warn_on59, align 4, !dbg !22970
  %10 = load i32, i32* %__ret_warn_on59, align 4, !dbg !22971
  %tobool66 = icmp ne i32 %10, 0, !dbg !22971
  %lnot67 = xor i1 %tobool66, true, !dbg !22971
  %lnot69 = xor i1 %lnot67, true, !dbg !22971
  %lnot.ext70 = zext i1 %lnot69 to i32, !dbg !22971
  %conv71 = sext i32 %lnot.ext70 to i64, !dbg !22971
  %tobool72 = icmp ne i64 %conv71, 0, !dbg !22971
  br i1 %tobool72, label %if.then73, label %if.end82, !dbg !22970

if.then73:                                        ; preds = %if.else58
  br label %do.body74, !dbg !22971

do.body74:                                        ; preds = %if.then73
  br label %do.body75, !dbg !22973

do.body75:                                        ; preds = %do.body74
  br label %do.end76, !dbg !22975

do.end76:                                         ; preds = %do.body75
  br label %do.body77, !dbg !22973

do.body77:                                        ; preds = %do.end76
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.33, i64 0, i64 0), i32 4239, i32 2305, i64 12) #8, !dbg !22977, !srcloc !22979
  br label %do.end78, !dbg !22977

do.end78:                                         ; preds = %do.body77
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 560) #8, !dbg !22980, !srcloc !22982
  br label %do.body79, !dbg !22973

do.body79:                                        ; preds = %do.end78
  br label %do.end80, !dbg !22983

do.end80:                                         ; preds = %do.body79
  br label %do.end81, !dbg !22973

do.end81:                                         ; preds = %do.end80
  br label %if.end82, !dbg !22973

if.end82:                                         ; preds = %do.end81, %if.else58
  %11 = load i32, i32* %__ret_warn_on59, align 4, !dbg !22970
  %tobool84 = icmp ne i32 %11, 0, !dbg !22970
  %lnot85 = xor i1 %tobool84, true, !dbg !22970
  %lnot87 = xor i1 %lnot85, true, !dbg !22970
  %lnot.ext88 = zext i1 %lnot87 to i32, !dbg !22970
  %conv89 = sext i32 %lnot.ext88 to i64, !dbg !22970
  store i64 %conv89, i64* %tmp83, align 8, !dbg !22971
  %12 = load i64, i64* %tmp83, align 8, !dbg !22970
  %tobool90 = icmp ne i64 %12, 0, !dbg !22985
  br i1 %tobool90, label %if.then91, label %if.else92, !dbg !22986

if.then91:                                        ; preds = %if.end82
  store i64 25000000, i64* %retval, align 8, !dbg !22987
  br label %return, !dbg !22987

if.else92:                                        ; preds = %if.end82
  %13 = load i64, i64* %rate.addr, align 8, !dbg !22988
  %cmp93 = icmp eq i64 %13, 25000000, !dbg !22990
  br i1 %cmp93, label %if.then95, label %if.else96, !dbg !22991

if.then95:                                        ; preds = %if.else92
  store i64 25000000, i64* %retval, align 8, !dbg !22992
  br label %return, !dbg !22992

if.else96:                                        ; preds = %if.else92
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on97, metadata !22993, metadata !DIExpression()), !dbg !22996
  %14 = load i64, i64* %rate.addr, align 8, !dbg !22996
  %cmp98 = icmp ult i64 %14, 75000000, !dbg !22996
  %lnot100 = xor i1 %cmp98, true, !dbg !22996
  %lnot102 = xor i1 %lnot100, true, !dbg !22996
  %lnot.ext103 = zext i1 %lnot102 to i32, !dbg !22996
  store i32 %lnot.ext103, i32* %__ret_warn_on97, align 4, !dbg !22996
  %15 = load i32, i32* %__ret_warn_on97, align 4, !dbg !22997
  %tobool104 = icmp ne i32 %15, 0, !dbg !22997
  %lnot105 = xor i1 %tobool104, true, !dbg !22997
  %lnot107 = xor i1 %lnot105, true, !dbg !22997
  %lnot.ext108 = zext i1 %lnot107 to i32, !dbg !22997
  %conv109 = sext i32 %lnot.ext108 to i64, !dbg !22997
  %tobool110 = icmp ne i64 %conv109, 0, !dbg !22997
  br i1 %tobool110, label %if.then111, label %if.end120, !dbg !22996

if.then111:                                       ; preds = %if.else96
  br label %do.body112, !dbg !22997

do.body112:                                       ; preds = %if.then111
  br label %do.body113, !dbg !22999

do.body113:                                       ; preds = %do.body112
  br label %do.end114, !dbg !23001

do.end114:                                        ; preds = %do.body113
  br label %do.body115, !dbg !22999

do.body115:                                       ; preds = %do.end114
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.33, i64 0, i64 0), i32 4243, i32 2305, i64 12) #8, !dbg !23003, !srcloc !23005
  br label %do.end116, !dbg !23003

do.end116:                                        ; preds = %do.body115
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 561) #8, !dbg !23006, !srcloc !23008
  br label %do.body117, !dbg !22999

do.body117:                                       ; preds = %do.end116
  br label %do.end118, !dbg !23009

do.end118:                                        ; preds = %do.body117
  br label %do.end119, !dbg !22999

do.end119:                                        ; preds = %do.end118
  br label %if.end120, !dbg !22999

if.end120:                                        ; preds = %do.end119, %if.else96
  %16 = load i32, i32* %__ret_warn_on97, align 4, !dbg !22996
  %tobool122 = icmp ne i32 %16, 0, !dbg !22996
  %lnot123 = xor i1 %tobool122, true, !dbg !22996
  %lnot125 = xor i1 %lnot123, true, !dbg !22996
  %lnot.ext126 = zext i1 %lnot125 to i32, !dbg !22996
  %conv127 = sext i32 %lnot.ext126 to i64, !dbg !22996
  store i64 %conv127, i64* %tmp121, align 8, !dbg !22997
  %17 = load i64, i64* %tmp121, align 8, !dbg !22996
  %tobool128 = icmp ne i64 %17, 0, !dbg !23011
  br i1 %tobool128, label %if.then129, label %if.else130, !dbg !23012

if.then129:                                       ; preds = %if.end120
  store i64 25000000, i64* %retval, align 8, !dbg !23013
  br label %return, !dbg !23013

if.else130:                                       ; preds = %if.end120
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on131, metadata !23014, metadata !DIExpression()), !dbg !23017
  %18 = load i64, i64* %rate.addr, align 8, !dbg !23017
  %cmp132 = icmp ult i64 %18, 125000000, !dbg !23017
  %lnot134 = xor i1 %cmp132, true, !dbg !23017
  %lnot136 = xor i1 %lnot134, true, !dbg !23017
  %lnot.ext137 = zext i1 %lnot136 to i32, !dbg !23017
  store i32 %lnot.ext137, i32* %__ret_warn_on131, align 4, !dbg !23017
  %19 = load i32, i32* %__ret_warn_on131, align 4, !dbg !23018
  %tobool138 = icmp ne i32 %19, 0, !dbg !23018
  %lnot139 = xor i1 %tobool138, true, !dbg !23018
  %lnot141 = xor i1 %lnot139, true, !dbg !23018
  %lnot.ext142 = zext i1 %lnot141 to i32, !dbg !23018
  %conv143 = sext i32 %lnot.ext142 to i64, !dbg !23018
  %tobool144 = icmp ne i64 %conv143, 0, !dbg !23018
  br i1 %tobool144, label %if.then145, label %if.end154, !dbg !23017

if.then145:                                       ; preds = %if.else130
  br label %do.body146, !dbg !23018

do.body146:                                       ; preds = %if.then145
  br label %do.body147, !dbg !23020

do.body147:                                       ; preds = %do.body146
  br label %do.end148, !dbg !23022

do.end148:                                        ; preds = %do.body147
  br label %do.body149, !dbg !23020

do.body149:                                       ; preds = %do.end148
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.33, i64 0, i64 0), i32 4245, i32 2305, i64 12) #8, !dbg !23024, !srcloc !23026
  br label %do.end150, !dbg !23024

do.end150:                                        ; preds = %do.body149
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 562) #8, !dbg !23027, !srcloc !23029
  br label %do.body151, !dbg !23020

do.body151:                                       ; preds = %do.end150
  br label %do.end152, !dbg !23030

do.end152:                                        ; preds = %do.body151
  br label %do.end153, !dbg !23020

do.end153:                                        ; preds = %do.end152
  br label %if.end154, !dbg !23020

if.end154:                                        ; preds = %do.end153, %if.else130
  %20 = load i32, i32* %__ret_warn_on131, align 4, !dbg !23017
  %tobool156 = icmp ne i32 %20, 0, !dbg !23017
  %lnot157 = xor i1 %tobool156, true, !dbg !23017
  %lnot159 = xor i1 %lnot157, true, !dbg !23017
  %lnot.ext160 = zext i1 %lnot159 to i32, !dbg !23017
  %conv161 = sext i32 %lnot.ext160 to i64, !dbg !23017
  store i64 %conv161, i64* %tmp155, align 8, !dbg !23018
  %21 = load i64, i64* %tmp155, align 8, !dbg !23017
  %tobool162 = icmp ne i64 %21, 0, !dbg !23032
  br i1 %tobool162, label %if.then163, label %if.else164, !dbg !23033

if.then163:                                       ; preds = %if.end154
  store i64 125000000, i64* %retval, align 8, !dbg !23034
  br label %return, !dbg !23034

if.else164:                                       ; preds = %if.end154
  %22 = load i64, i64* %rate.addr, align 8, !dbg !23035
  %cmp165 = icmp eq i64 %22, 125000000, !dbg !23037
  br i1 %cmp165, label %if.then167, label %if.end168, !dbg !23038

if.then167:                                       ; preds = %if.else164
  store i64 125000000, i64* %retval, align 8, !dbg !23039
  br label %return, !dbg !23039

if.end168:                                        ; preds = %if.else164
  br label %if.end169

if.end169:                                        ; preds = %if.end168
  br label %if.end170

if.end170:                                        ; preds = %if.end169
  br label %if.end171

if.end171:                                        ; preds = %if.end170
  br label %if.end172

if.end172:                                        ; preds = %if.end171
  br label %if.end173

if.end173:                                        ; preds = %if.end172
  br label %if.end174

if.end174:                                        ; preds = %if.end173
  br label %if.end175

if.end175:                                        ; preds = %if.end174
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on176, metadata !23040, metadata !DIExpression()), !dbg !23042
  %23 = load i64, i64* %rate.addr, align 8, !dbg !23042
  %cmp177 = icmp ugt i64 %23, 125000000, !dbg !23042
  %lnot179 = xor i1 %cmp177, true, !dbg !23042
  %lnot181 = xor i1 %lnot179, true, !dbg !23042
  %lnot.ext182 = zext i1 %lnot181 to i32, !dbg !23042
  store i32 %lnot.ext182, i32* %__ret_warn_on176, align 4, !dbg !23042
  %24 = load i32, i32* %__ret_warn_on176, align 4, !dbg !23043
  %tobool183 = icmp ne i32 %24, 0, !dbg !23043
  %lnot184 = xor i1 %tobool183, true, !dbg !23043
  %lnot186 = xor i1 %lnot184, true, !dbg !23043
  %lnot.ext187 = zext i1 %lnot186 to i32, !dbg !23043
  %conv188 = sext i32 %lnot.ext187 to i64, !dbg !23043
  %tobool189 = icmp ne i64 %conv188, 0, !dbg !23043
  br i1 %tobool189, label %if.then190, label %if.end199, !dbg !23042

if.then190:                                       ; preds = %if.end175
  br label %do.body191, !dbg !23043

do.body191:                                       ; preds = %if.then190
  br label %do.body192, !dbg !23045

do.body192:                                       ; preds = %do.body191
  br label %do.end193, !dbg !23047

do.end193:                                        ; preds = %do.body192
  br label %do.body194, !dbg !23045

do.body194:                                       ; preds = %do.end193
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.33, i64 0, i64 0), i32 4250, i32 2305, i64 12) #8, !dbg !23049, !srcloc !23051
  br label %do.end195, !dbg !23049

do.end195:                                        ; preds = %do.body194
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 563) #8, !dbg !23052, !srcloc !23054
  br label %do.body196, !dbg !23045

do.body196:                                       ; preds = %do.end195
  br label %do.end197, !dbg !23055

do.end197:                                        ; preds = %do.body196
  br label %do.end198, !dbg !23045

do.end198:                                        ; preds = %do.end197
  br label %if.end199, !dbg !23045

if.end199:                                        ; preds = %do.end198, %if.end175
  %25 = load i32, i32* %__ret_warn_on176, align 4, !dbg !23042
  %tobool201 = icmp ne i32 %25, 0, !dbg !23042
  %lnot202 = xor i1 %tobool201, true, !dbg !23042
  %lnot204 = xor i1 %lnot202, true, !dbg !23042
  %lnot.ext205 = zext i1 %lnot204 to i32, !dbg !23042
  %conv206 = sext i32 %lnot.ext205 to i64, !dbg !23042
  store i64 %conv206, i64* %tmp200, align 8, !dbg !23043
  %26 = load i64, i64* %tmp200, align 8, !dbg !23042
  store i64 125000000, i64* %retval, align 8, !dbg !23057
  br label %return, !dbg !23057

return:                                           ; preds = %if.end199, %if.then167, %if.then163, %if.then129, %if.then95, %if.then91, %if.then57, %if.then23, %if.then20
  %27 = load i64, i64* %retval, align 8, !dbg !23058
  ret i64 %27, !dbg !23058
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @fu540_macb_tx_set_rate(%struct.clk_hw* %hw, i64 %rate, i64 %parent_rate) #2 !dbg !23059 {
entry:
  %hw.addr = alloca %struct.clk_hw*, align 8
  %rate.addr = alloca i64, align 8
  %parent_rate.addr = alloca i64, align 8
  store %struct.clk_hw* %hw, %struct.clk_hw** %hw.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.clk_hw** %hw.addr, metadata !23060, metadata !DIExpression()), !dbg !23061
  store i64 %rate, i64* %rate.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %rate.addr, metadata !23062, metadata !DIExpression()), !dbg !23063
  store i64 %parent_rate, i64* %parent_rate.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %parent_rate.addr, metadata !23064, metadata !DIExpression()), !dbg !23065
  %0 = load %struct.clk_hw*, %struct.clk_hw** %hw.addr, align 8, !dbg !23066
  %1 = load i64, i64* %rate.addr, align 8, !dbg !23067
  %call = call i64 @fu540_macb_tx_round_rate(%struct.clk_hw* %0, i64 %1, i64* %parent_rate.addr) #12, !dbg !23068
  store i64 %call, i64* %rate.addr, align 8, !dbg !23069
  %2 = load i64, i64* %rate.addr, align 8, !dbg !23070
  %cmp = icmp ne i64 %2, 125000000, !dbg !23072
  br i1 %cmp, label %if.then, label %if.else, !dbg !23073

if.then:                                          ; preds = %entry
  %3 = load %struct.sifive_fu540_macb_mgmt*, %struct.sifive_fu540_macb_mgmt** @mgmt, align 8, !dbg !23074
  %reg = getelementptr inbounds %struct.sifive_fu540_macb_mgmt, %struct.sifive_fu540_macb_mgmt* %3, i32 0, i32 0, !dbg !23075
  %4 = load i8*, i8** %reg, align 8, !dbg !23075
  call void @iowrite32(i32 1, i8* %4) #12, !dbg !23076
  br label %if.end, !dbg !23076

if.else:                                          ; preds = %entry
  %5 = load %struct.sifive_fu540_macb_mgmt*, %struct.sifive_fu540_macb_mgmt** @mgmt, align 8, !dbg !23077
  %reg1 = getelementptr inbounds %struct.sifive_fu540_macb_mgmt, %struct.sifive_fu540_macb_mgmt* %5, i32 0, i32 0, !dbg !23078
  %6 = load i8*, i8** %reg1, align 8, !dbg !23078
  call void @iowrite32(i32 0, i8* %6) #12, !dbg !23079
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %7 = load i64, i64* %rate.addr, align 8, !dbg !23080
  %8 = load %struct.sifive_fu540_macb_mgmt*, %struct.sifive_fu540_macb_mgmt** @mgmt, align 8, !dbg !23081
  %rate2 = getelementptr inbounds %struct.sifive_fu540_macb_mgmt, %struct.sifive_fu540_macb_mgmt* %8, i32 0, i32 1, !dbg !23082
  store i64 %7, i64* %rate2, align 8, !dbg !23083
  ret i32 0, !dbg !23084
}

; Function Attrs: noredzone
declare dso_local void @iowrite32(i32, i8*) #1

; Function Attrs: noredzone
declare dso_local i8* @devm_platform_ioremap_resource(%struct.platform_device*, i32) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @macb_suspend(%struct.device* %dev) #2 !dbg !23085 {
entry:
  %lock.addr.i191 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i191, metadata !13124, metadata !DIExpression()), !dbg !23086
  %flags.addr.i192 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i192, metadata !13130, metadata !DIExpression()), !dbg !23090
  %tmp.i193 = alloca i32, align 4
  %tmp8.i194 = alloca i32, align 4
  %lock.addr.i189 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i189, metadata !11065, metadata !DIExpression()), !dbg !23091
  %lock.addr.i184 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i184, metadata !13124, metadata !DIExpression()), !dbg !23098
  %flags.addr.i185 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i185, metadata !13130, metadata !DIExpression()), !dbg !23102
  %tmp.i186 = alloca i32, align 4
  %tmp8.i187 = alloca i32, align 4
  %lock.addr.i179 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i179, metadata !13124, metadata !DIExpression()), !dbg !23103
  %flags.addr.i180 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i180, metadata !13130, metadata !DIExpression()), !dbg !23109
  %tmp.i181 = alloca i32, align 4
  %tmp8.i182 = alloca i32, align 4
  %lock.addr.i177 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i177, metadata !13124, metadata !DIExpression()), !dbg !23110
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !13130, metadata !DIExpression()), !dbg !23115
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !11065, metadata !DIExpression()), !dbg !23116
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.device*, align 8
  %netdev = alloca %struct.net_device*, align 8
  %bp = alloca %struct.macb*, align 8
  %queue = alloca %struct.macb_queue*, align 8
  %flags = alloca i64, align 8
  %q = alloca i32, align 4
  %err = alloca i32, align 4
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__dummy8 = alloca i64, align 8
  %__dummy29 = alloca i64, align 8
  %tmp12 = alloca i32, align 4
  %__dummy121 = alloca i64, align 8
  %__dummy2122 = alloca i64, align 8
  %tmp125 = alloca i32, align 4
  %__dummy129 = alloca i64, align 8
  %__dummy2130 = alloca i64, align 8
  %tmp133 = alloca i32, align 4
  %__v = alloca i32, align 4
  %tmp160 = alloca i32, align 4
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !23123, metadata !DIExpression()), !dbg !23124
  call void @llvm.dbg.declare(metadata %struct.net_device** %netdev, metadata !23125, metadata !DIExpression()), !dbg !23126
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !23127
  %call = call i8* @dev_get_drvdata(%struct.device* %0) #12, !dbg !23128
  %1 = bitcast i8* %call to %struct.net_device*, !dbg !23128
  store %struct.net_device* %1, %struct.net_device** %netdev, align 8, !dbg !23126
  call void @llvm.dbg.declare(metadata %struct.macb** %bp, metadata !23129, metadata !DIExpression()), !dbg !23130
  %2 = load %struct.net_device*, %struct.net_device** %netdev, align 8, !dbg !23131
  %call1 = call i8* @netdev_priv(%struct.net_device* %2) #12, !dbg !23132
  %3 = bitcast i8* %call1 to %struct.macb*, !dbg !23132
  store %struct.macb* %3, %struct.macb** %bp, align 8, !dbg !23130
  call void @llvm.dbg.declare(metadata %struct.macb_queue** %queue, metadata !23133, metadata !DIExpression()), !dbg !23134
  %4 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !23135
  %queues = getelementptr inbounds %struct.macb, %struct.macb* %4, i32 0, i32 9, !dbg !23136
  %arraydecay = getelementptr inbounds [8 x %struct.macb_queue], [8 x %struct.macb_queue]* %queues, i64 0, i64 0, !dbg !23135
  store %struct.macb_queue* %arraydecay, %struct.macb_queue** %queue, align 8, !dbg !23134
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !23137, metadata !DIExpression()), !dbg !23138
  call void @llvm.dbg.declare(metadata i32* %q, metadata !23139, metadata !DIExpression()), !dbg !23140
  call void @llvm.dbg.declare(metadata i32* %err, metadata !23141, metadata !DIExpression()), !dbg !23142
  %5 = load %struct.net_device*, %struct.net_device** %netdev, align 8, !dbg !23143
  %call2 = call zeroext i1 @netif_running(%struct.net_device* %5) #12, !dbg !23145
  br i1 %call2, label %if.end, label %if.then, !dbg !23146

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !23147
  br label %return, !dbg !23147

if.end:                                           ; preds = %entry
  %6 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !23148
  %wol = getelementptr inbounds %struct.macb, %struct.macb* %6, i32 0, i32 33, !dbg !23149
  %7 = load i32, i32* %wol, align 8, !dbg !23149
  %and = and i32 %7, 2, !dbg !23150
  %tobool = icmp ne i32 %and, 0, !dbg !23150
  br i1 %tobool, label %if.then3, label %if.end103, !dbg !23151

if.then3:                                         ; preds = %if.end
  br label %do.body, !dbg !23152

do.body:                                          ; preds = %if.then3
  br label %do.body4, !dbg !23153

do.body4:                                         ; preds = %do.body
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !23154, metadata !DIExpression()), !dbg !23156
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !23157, metadata !DIExpression()), !dbg !23156
  %cmp = icmp eq i64* %__dummy, %__dummy2, !dbg !23156
  %conv = zext i1 %cmp to i32, !dbg !23156
  store i32 1, i32* %tmp, align 4, !dbg !23156
  %8 = load i32, i32* %tmp, align 4, !dbg !23156
  br label %do.body5, !dbg !23158

do.body5:                                         ; preds = %do.body4
  br label %do.body6, !dbg !23159

do.body6:                                         ; preds = %do.body5
  br label %do.body7, !dbg !23160

do.body7:                                         ; preds = %do.body6
  call void @llvm.dbg.declare(metadata i64* %__dummy8, metadata !23162, metadata !DIExpression()), !dbg !23165
  call void @llvm.dbg.declare(metadata i64* %__dummy29, metadata !23166, metadata !DIExpression()), !dbg !23165
  %cmp10 = icmp eq i64* %__dummy8, %__dummy29, !dbg !23165
  %conv11 = zext i1 %cmp10 to i32, !dbg !23165
  store i32 1, i32* %tmp12, align 4, !dbg !23165
  %9 = load i32, i32* %tmp12, align 4, !dbg !23165
  %call13 = call i64 @arch_local_irq_save() #12, !dbg !23167
  store i64 %call13, i64* %flags, align 8, !dbg !23167
  br label %do.end, !dbg !23167

do.end:                                           ; preds = %do.body7
  br label %do.end14, !dbg !23160

do.end14:                                         ; preds = %do.end
  br label %do.body15, !dbg !23159

do.body15:                                        ; preds = %do.end14
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #8, !dbg !23168, !srcloc !23169
  br label %do.body16, !dbg !23168

do.body16:                                        ; preds = %do.body15
  %10 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !23170
  %lock = getelementptr inbounds %struct.macb, %struct.macb* %10, i32 0, i32 10, !dbg !23170
  store %struct.spinlock* %lock, %struct.spinlock** %lock.addr.i, align 8
  %11 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !23171
  %12 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %11, i32 0, i32 0, !dbg !23172
  %rlock.i = bitcast %union.anon.1* %12 to %struct.raw_spinlock*, !dbg !23172
  br label %do.end18, !dbg !23170

do.end18:                                         ; preds = %do.body16
  br label %do.end19, !dbg !23168

do.end19:                                         ; preds = %do.end18
  br label %do.end20, !dbg !23159

do.end20:                                         ; preds = %do.end19
  br label %do.end21, !dbg !23158

do.end21:                                         ; preds = %do.end20
  br label %do.end22, !dbg !23153

do.end22:                                         ; preds = %do.end21
  %13 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !23173
  %macb_reg_writel = getelementptr inbounds %struct.macb, %struct.macb* %13, i32 0, i32 3, !dbg !23173
  %14 = load void (%struct.macb*, i32, i32)*, void (%struct.macb*, i32, i32)** %macb_reg_writel, align 8, !dbg !23173
  %15 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !23173
  call void %14(%struct.macb* %15, i32 20, i32 -1) #12, !dbg !23173
  %16 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !23174
  %macb_reg_writel23 = getelementptr inbounds %struct.macb, %struct.macb* %16, i32 0, i32 3, !dbg !23174
  %17 = load void (%struct.macb*, i32, i32)*, void (%struct.macb*, i32, i32)** %macb_reg_writel23, align 8, !dbg !23174
  %18 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !23174
  call void %17(%struct.macb* %18, i32 32, i32 -1) #12, !dbg !23174
  store i32 0, i32* %q, align 4, !dbg !23175
  %19 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !23177
  %queues24 = getelementptr inbounds %struct.macb, %struct.macb* %19, i32 0, i32 9, !dbg !23178
  %arraydecay25 = getelementptr inbounds [8 x %struct.macb_queue], [8 x %struct.macb_queue]* %queues24, i64 0, i64 0, !dbg !23177
  store %struct.macb_queue* %arraydecay25, %struct.macb_queue** %queue, align 8, !dbg !23179
  br label %for.cond, !dbg !23180

for.cond:                                         ; preds = %for.inc, %do.end22
  %20 = load i32, i32* %q, align 4, !dbg !23181
  %21 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !23183
  %num_queues = getelementptr inbounds %struct.macb, %struct.macb* %21, i32 0, i32 7, !dbg !23184
  %22 = load i32, i32* %num_queues, align 8, !dbg !23184
  %cmp26 = icmp ult i32 %20, %22, !dbg !23185
  br i1 %cmp26, label %for.body, label %for.end, !dbg !23186

for.body:                                         ; preds = %for.cond
  %23 = load %struct.macb_queue*, %struct.macb_queue** %queue, align 8, !dbg !23187
  %bp28 = getelementptr inbounds %struct.macb_queue, %struct.macb_queue* %23, i32 0, i32 0, !dbg !23187
  %24 = load %struct.macb*, %struct.macb** %bp28, align 8, !dbg !23187
  %macb_reg_writel29 = getelementptr inbounds %struct.macb, %struct.macb* %24, i32 0, i32 3, !dbg !23187
  %25 = load void (%struct.macb*, i32, i32)*, void (%struct.macb*, i32, i32)** %macb_reg_writel29, align 8, !dbg !23187
  %26 = load %struct.macb_queue*, %struct.macb_queue** %queue, align 8, !dbg !23187
  %bp30 = getelementptr inbounds %struct.macb_queue, %struct.macb_queue* %26, i32 0, i32 0, !dbg !23187
  %27 = load %struct.macb*, %struct.macb** %bp30, align 8, !dbg !23187
  %28 = load %struct.macb_queue*, %struct.macb_queue** %queue, align 8, !dbg !23187
  %IDR = getelementptr inbounds %struct.macb_queue, %struct.macb_queue* %28, i32 0, i32 4, !dbg !23187
  %29 = load i32, i32* %IDR, align 4, !dbg !23187
  call void %25(%struct.macb* %27, i32 %29, i32 -1) #12, !dbg !23187
  %30 = load %struct.macb_queue*, %struct.macb_queue** %queue, align 8, !dbg !23189
  %bp31 = getelementptr inbounds %struct.macb_queue, %struct.macb_queue* %30, i32 0, i32 0, !dbg !23189
  %31 = load %struct.macb*, %struct.macb** %bp31, align 8, !dbg !23189
  %macb_reg_readl = getelementptr inbounds %struct.macb, %struct.macb* %31, i32 0, i32 2, !dbg !23189
  %32 = load i32 (%struct.macb*, i32)*, i32 (%struct.macb*, i32)** %macb_reg_readl, align 8, !dbg !23189
  %33 = load %struct.macb_queue*, %struct.macb_queue** %queue, align 8, !dbg !23189
  %bp32 = getelementptr inbounds %struct.macb_queue, %struct.macb_queue* %33, i32 0, i32 0, !dbg !23189
  %34 = load %struct.macb*, %struct.macb** %bp32, align 8, !dbg !23189
  %35 = load %struct.macb_queue*, %struct.macb_queue** %queue, align 8, !dbg !23189
  %ISR = getelementptr inbounds %struct.macb_queue, %struct.macb_queue* %35, i32 0, i32 2, !dbg !23189
  %36 = load i32, i32* %ISR, align 4, !dbg !23189
  %call33 = call i32 %32(%struct.macb* %34, i32 %36) #12, !dbg !23189
  %37 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !23190
  %caps = getelementptr inbounds %struct.macb, %struct.macb* %37, i32 0, i32 23, !dbg !23192
  %38 = load i32, i32* %caps, align 8, !dbg !23192
  %and34 = and i32 %38, 1, !dbg !23193
  %tobool35 = icmp ne i32 %and34, 0, !dbg !23193
  br i1 %tobool35, label %if.then36, label %if.end41, !dbg !23194

if.then36:                                        ; preds = %for.body
  %39 = load %struct.macb_queue*, %struct.macb_queue** %queue, align 8, !dbg !23195
  %bp37 = getelementptr inbounds %struct.macb_queue, %struct.macb_queue* %39, i32 0, i32 0, !dbg !23195
  %40 = load %struct.macb*, %struct.macb** %bp37, align 8, !dbg !23195
  %macb_reg_writel38 = getelementptr inbounds %struct.macb, %struct.macb* %40, i32 0, i32 3, !dbg !23195
  %41 = load void (%struct.macb*, i32, i32)*, void (%struct.macb*, i32, i32)** %macb_reg_writel38, align 8, !dbg !23195
  %42 = load %struct.macb_queue*, %struct.macb_queue** %queue, align 8, !dbg !23195
  %bp39 = getelementptr inbounds %struct.macb_queue, %struct.macb_queue* %42, i32 0, i32 0, !dbg !23195
  %43 = load %struct.macb*, %struct.macb** %bp39, align 8, !dbg !23195
  %44 = load %struct.macb_queue*, %struct.macb_queue** %queue, align 8, !dbg !23195
  %ISR40 = getelementptr inbounds %struct.macb_queue, %struct.macb_queue* %44, i32 0, i32 2, !dbg !23195
  %45 = load i32, i32* %ISR40, align 4, !dbg !23195
  call void %41(%struct.macb* %43, i32 %45, i32 -1) #12, !dbg !23195
  br label %if.end41, !dbg !23195

if.end41:                                         ; preds = %if.then36, %for.body
  br label %for.inc, !dbg !23196

for.inc:                                          ; preds = %if.end41
  %46 = load i32, i32* %q, align 4, !dbg !23197
  %inc = add i32 %46, 1, !dbg !23197
  store i32 %inc, i32* %q, align 4, !dbg !23197
  %47 = load %struct.macb_queue*, %struct.macb_queue** %queue, align 8, !dbg !23198
  %incdec.ptr = getelementptr %struct.macb_queue, %struct.macb_queue* %47, i32 1, !dbg !23198
  store %struct.macb_queue* %incdec.ptr, %struct.macb_queue** %queue, align 8, !dbg !23198
  br label %for.cond, !dbg !23199, !llvm.loop !23200

for.end:                                          ; preds = %for.cond
  %48 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !23202
  %49 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !23203
  %queues42 = getelementptr inbounds %struct.macb, %struct.macb* %49, i32 0, i32 9, !dbg !23204
  %arrayidx = getelementptr [8 x %struct.macb_queue], [8 x %struct.macb_queue]* %queues42, i64 0, i64 0, !dbg !23203
  %irq = getelementptr inbounds %struct.macb_queue, %struct.macb_queue* %arrayidx, i32 0, i32 1, !dbg !23205
  %50 = load i32, i32* %irq, align 8, !dbg !23205
  %51 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !23206
  %queues43 = getelementptr inbounds %struct.macb, %struct.macb* %51, i32 0, i32 9, !dbg !23207
  %arraydecay44 = getelementptr inbounds [8 x %struct.macb_queue], [8 x %struct.macb_queue]* %queues43, i64 0, i64 0, !dbg !23206
  %52 = bitcast %struct.macb_queue* %arraydecay44 to i8*, !dbg !23206
  call void @devm_free_irq(%struct.device* %48, i32 %50, i8* %52) #12, !dbg !23208
  %53 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !23209
  %call45 = call zeroext i1 @macb_is_gem(%struct.macb* %53) #12, !dbg !23210
  br i1 %call45, label %if.then46, label %if.else, !dbg !23211

if.then46:                                        ; preds = %for.end
  %54 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !23212
  %55 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !23213
  %queues47 = getelementptr inbounds %struct.macb, %struct.macb* %55, i32 0, i32 9, !dbg !23214
  %arrayidx48 = getelementptr [8 x %struct.macb_queue], [8 x %struct.macb_queue]* %queues47, i64 0, i64 0, !dbg !23213
  %irq49 = getelementptr inbounds %struct.macb_queue, %struct.macb_queue* %arrayidx48, i32 0, i32 1, !dbg !23215
  %56 = load i32, i32* %irq49, align 8, !dbg !23215
  %57 = load %struct.net_device*, %struct.net_device** %netdev, align 8, !dbg !23216
  %name = getelementptr inbounds %struct.net_device, %struct.net_device* %57, i32 0, i32 0, !dbg !23217
  %arraydecay50 = getelementptr inbounds [16 x i8], [16 x i8]* %name, i64 0, i64 0, !dbg !23216
  %58 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !23218
  %queues51 = getelementptr inbounds %struct.macb, %struct.macb* %58, i32 0, i32 9, !dbg !23219
  %arraydecay52 = getelementptr inbounds [8 x %struct.macb_queue], [8 x %struct.macb_queue]* %queues51, i64 0, i64 0, !dbg !23218
  %59 = bitcast %struct.macb_queue* %arraydecay52 to i8*, !dbg !23218
  %call53 = call i32 @devm_request_irq(%struct.device* %54, i32 %56, i32 (i32, i8*)* @gem_wol_interrupt, i64 128, i8* %arraydecay50, i8* %59) #12, !dbg !23220
  store i32 %call53, i32* %err, align 4, !dbg !23221
  %60 = load i32, i32* %err, align 4, !dbg !23222
  %tobool54 = icmp ne i32 %60, 0, !dbg !23222
  br i1 %tobool54, label %if.then55, label %if.end60, !dbg !23223

if.then55:                                        ; preds = %if.then46
  %61 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !23224
  %62 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !23224
  %queues56 = getelementptr inbounds %struct.macb, %struct.macb* %62, i32 0, i32 9, !dbg !23224
  %arrayidx57 = getelementptr [8 x %struct.macb_queue], [8 x %struct.macb_queue]* %queues56, i64 0, i64 0, !dbg !23224
  %irq58 = getelementptr inbounds %struct.macb_queue, %struct.macb_queue* %arrayidx57, i32 0, i32 1, !dbg !23224
  %63 = load i32, i32* %irq58, align 8, !dbg !23224
  %64 = load i32, i32* %err, align 4, !dbg !23224
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %61, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.18, i64 0, i64 0), i32 %63, i32 %64) #13, !dbg !23224
  %65 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !23225
  %lock59 = getelementptr inbounds %struct.macb, %struct.macb* %65, i32 0, i32 10, !dbg !23226
  %66 = load i64, i64* %flags, align 8, !dbg !23227
  store %struct.spinlock* %lock59, %struct.spinlock** %lock.addr.i177, align 8
  store i64 %66, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !743, metadata !13334, metadata !DIExpression()) #8, !dbg !23228
  call void @llvm.dbg.declare(metadata !743, metadata !13338, metadata !DIExpression()) #8, !dbg !23228
  store i32 1, i32* %tmp.i, align 4, !dbg !23228
  %67 = load i32, i32* %tmp.i, align 4, !dbg !23228
  call void @llvm.dbg.declare(metadata !743, metadata !13339, metadata !DIExpression()) #8, !dbg !23229
  call void @llvm.dbg.declare(metadata !743, metadata !13345, metadata !DIExpression()) #8, !dbg !23229
  store i32 1, i32* %tmp8.i, align 4, !dbg !23229
  %68 = load i32, i32* %tmp8.i, align 4, !dbg !23229
  %69 = load i64, i64* %flags.addr.i, align 8, !dbg !23230
  call void @arch_local_irq_restore(i64 %69) #14, !dbg !23230
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #8, !dbg !23231, !srcloc !13349
  %70 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i177, align 8, !dbg !23232
  %71 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %70, i32 0, i32 0, !dbg !23232
  %rlock.i178 = bitcast %union.anon.1* %71 to %struct.raw_spinlock*, !dbg !23232
  %72 = load i32, i32* %err, align 4, !dbg !23233
  store i32 %72, i32* %retval, align 4, !dbg !23234
  br label %return, !dbg !23234

if.end60:                                         ; preds = %if.then46
  %73 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !23235
  %queues61 = getelementptr inbounds %struct.macb, %struct.macb* %73, i32 0, i32 9, !dbg !23235
  %arraydecay62 = getelementptr inbounds [8 x %struct.macb_queue], [8 x %struct.macb_queue]* %queues61, i64 0, i64 0, !dbg !23235
  %bp63 = getelementptr inbounds %struct.macb_queue, %struct.macb_queue* %arraydecay62, i32 0, i32 0, !dbg !23235
  %74 = load %struct.macb*, %struct.macb** %bp63, align 8, !dbg !23235
  %macb_reg_writel64 = getelementptr inbounds %struct.macb, %struct.macb* %74, i32 0, i32 3, !dbg !23235
  %75 = load void (%struct.macb*, i32, i32)*, void (%struct.macb*, i32, i32)** %macb_reg_writel64, align 8, !dbg !23235
  %76 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !23235
  %queues65 = getelementptr inbounds %struct.macb, %struct.macb* %76, i32 0, i32 9, !dbg !23235
  %arraydecay66 = getelementptr inbounds [8 x %struct.macb_queue], [8 x %struct.macb_queue]* %queues65, i64 0, i64 0, !dbg !23235
  %bp67 = getelementptr inbounds %struct.macb_queue, %struct.macb_queue* %arraydecay66, i32 0, i32 0, !dbg !23235
  %77 = load %struct.macb*, %struct.macb** %bp67, align 8, !dbg !23235
  %78 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !23235
  %queues68 = getelementptr inbounds %struct.macb, %struct.macb* %78, i32 0, i32 9, !dbg !23235
  %arraydecay69 = getelementptr inbounds [8 x %struct.macb_queue], [8 x %struct.macb_queue]* %queues68, i64 0, i64 0, !dbg !23235
  %IER = getelementptr inbounds %struct.macb_queue, %struct.macb_queue* %arraydecay69, i32 0, i32 3, !dbg !23235
  %79 = load i32, i32* %IER, align 8, !dbg !23235
  call void %75(%struct.macb* %77, i32 %79, i32 268435456) #12, !dbg !23235
  %80 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !23236
  %macb_reg_writel70 = getelementptr inbounds %struct.macb, %struct.macb* %80, i32 0, i32 3, !dbg !23236
  %81 = load void (%struct.macb*, i32, i32)*, void (%struct.macb*, i32, i32)** %macb_reg_writel70, align 8, !dbg !23236
  %82 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !23236
  call void %81(%struct.macb* %82, i32 184, i32 65536) #12, !dbg !23236
  br label %if.end97, !dbg !23237

if.else:                                          ; preds = %for.end
  %83 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !23238
  %84 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !23239
  %queues71 = getelementptr inbounds %struct.macb, %struct.macb* %84, i32 0, i32 9, !dbg !23240
  %arrayidx72 = getelementptr [8 x %struct.macb_queue], [8 x %struct.macb_queue]* %queues71, i64 0, i64 0, !dbg !23239
  %irq73 = getelementptr inbounds %struct.macb_queue, %struct.macb_queue* %arrayidx72, i32 0, i32 1, !dbg !23241
  %85 = load i32, i32* %irq73, align 8, !dbg !23241
  %86 = load %struct.net_device*, %struct.net_device** %netdev, align 8, !dbg !23242
  %name74 = getelementptr inbounds %struct.net_device, %struct.net_device* %86, i32 0, i32 0, !dbg !23243
  %arraydecay75 = getelementptr inbounds [16 x i8], [16 x i8]* %name74, i64 0, i64 0, !dbg !23242
  %87 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !23244
  %queues76 = getelementptr inbounds %struct.macb, %struct.macb* %87, i32 0, i32 9, !dbg !23245
  %arraydecay77 = getelementptr inbounds [8 x %struct.macb_queue], [8 x %struct.macb_queue]* %queues76, i64 0, i64 0, !dbg !23244
  %88 = bitcast %struct.macb_queue* %arraydecay77 to i8*, !dbg !23244
  %call78 = call i32 @devm_request_irq(%struct.device* %83, i32 %85, i32 (i32, i8*)* @macb_wol_interrupt, i64 128, i8* %arraydecay75, i8* %88) #12, !dbg !23246
  store i32 %call78, i32* %err, align 4, !dbg !23247
  %89 = load i32, i32* %err, align 4, !dbg !23248
  %tobool79 = icmp ne i32 %89, 0, !dbg !23248
  br i1 %tobool79, label %if.then80, label %if.end85, !dbg !23249

if.then80:                                        ; preds = %if.else
  %90 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !23250
  %91 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !23250
  %queues81 = getelementptr inbounds %struct.macb, %struct.macb* %91, i32 0, i32 9, !dbg !23250
  %arrayidx82 = getelementptr [8 x %struct.macb_queue], [8 x %struct.macb_queue]* %queues81, i64 0, i64 0, !dbg !23250
  %irq83 = getelementptr inbounds %struct.macb_queue, %struct.macb_queue* %arrayidx82, i32 0, i32 1, !dbg !23250
  %92 = load i32, i32* %irq83, align 8, !dbg !23250
  %93 = load i32, i32* %err, align 4, !dbg !23250
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %90, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.18, i64 0, i64 0), i32 %92, i32 %93) #13, !dbg !23250
  %94 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !23251
  %lock84 = getelementptr inbounds %struct.macb, %struct.macb* %94, i32 0, i32 10, !dbg !23252
  %95 = load i64, i64* %flags, align 8, !dbg !23253
  store %struct.spinlock* %lock84, %struct.spinlock** %lock.addr.i179, align 8
  store i64 %95, i64* %flags.addr.i180, align 8
  call void @llvm.dbg.declare(metadata !743, metadata !13334, metadata !DIExpression()) #8, !dbg !23254
  call void @llvm.dbg.declare(metadata !743, metadata !13338, metadata !DIExpression()) #8, !dbg !23254
  store i32 1, i32* %tmp.i181, align 4, !dbg !23254
  %96 = load i32, i32* %tmp.i181, align 4, !dbg !23254
  call void @llvm.dbg.declare(metadata !743, metadata !13339, metadata !DIExpression()) #8, !dbg !23255
  call void @llvm.dbg.declare(metadata !743, metadata !13345, metadata !DIExpression()) #8, !dbg !23255
  store i32 1, i32* %tmp8.i182, align 4, !dbg !23255
  %97 = load i32, i32* %tmp8.i182, align 4, !dbg !23255
  %98 = load i64, i64* %flags.addr.i180, align 8, !dbg !23256
  call void @arch_local_irq_restore(i64 %98) #14, !dbg !23256
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #8, !dbg !23257, !srcloc !13349
  %99 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i179, align 8, !dbg !23258
  %100 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %99, i32 0, i32 0, !dbg !23258
  %rlock.i183 = bitcast %union.anon.1* %100 to %struct.raw_spinlock*, !dbg !23258
  %101 = load i32, i32* %err, align 4, !dbg !23259
  store i32 %101, i32* %retval, align 4, !dbg !23260
  br label %return, !dbg !23260

if.end85:                                         ; preds = %if.else
  %102 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !23261
  %queues86 = getelementptr inbounds %struct.macb, %struct.macb* %102, i32 0, i32 9, !dbg !23261
  %arraydecay87 = getelementptr inbounds [8 x %struct.macb_queue], [8 x %struct.macb_queue]* %queues86, i64 0, i64 0, !dbg !23261
  %bp88 = getelementptr inbounds %struct.macb_queue, %struct.macb_queue* %arraydecay87, i32 0, i32 0, !dbg !23261
  %103 = load %struct.macb*, %struct.macb** %bp88, align 8, !dbg !23261
  %macb_reg_writel89 = getelementptr inbounds %struct.macb, %struct.macb* %103, i32 0, i32 3, !dbg !23261
  %104 = load void (%struct.macb*, i32, i32)*, void (%struct.macb*, i32, i32)** %macb_reg_writel89, align 8, !dbg !23261
  %105 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !23261
  %queues90 = getelementptr inbounds %struct.macb, %struct.macb* %105, i32 0, i32 9, !dbg !23261
  %arraydecay91 = getelementptr inbounds [8 x %struct.macb_queue], [8 x %struct.macb_queue]* %queues90, i64 0, i64 0, !dbg !23261
  %bp92 = getelementptr inbounds %struct.macb_queue, %struct.macb_queue* %arraydecay91, i32 0, i32 0, !dbg !23261
  %106 = load %struct.macb*, %struct.macb** %bp92, align 8, !dbg !23261
  %107 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !23261
  %queues93 = getelementptr inbounds %struct.macb, %struct.macb* %107, i32 0, i32 9, !dbg !23261
  %arraydecay94 = getelementptr inbounds [8 x %struct.macb_queue], [8 x %struct.macb_queue]* %queues93, i64 0, i64 0, !dbg !23261
  %IER95 = getelementptr inbounds %struct.macb_queue, %struct.macb_queue* %arraydecay94, i32 0, i32 3, !dbg !23261
  %108 = load i32, i32* %IER95, align 8, !dbg !23261
  call void %104(%struct.macb* %106, i32 %108, i32 16384) #12, !dbg !23261
  %109 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !23262
  %macb_reg_writel96 = getelementptr inbounds %struct.macb, %struct.macb* %109, i32 0, i32 3, !dbg !23262
  %110 = load void (%struct.macb*, i32, i32)*, void (%struct.macb*, i32, i32)** %macb_reg_writel96, align 8, !dbg !23262
  %111 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !23262
  call void %110(%struct.macb* %111, i32 196, i32 65536) #12, !dbg !23262
  br label %if.end97

if.end97:                                         ; preds = %if.end85, %if.end60
  %112 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !23263
  %lock98 = getelementptr inbounds %struct.macb, %struct.macb* %112, i32 0, i32 10, !dbg !23264
  %113 = load i64, i64* %flags, align 8, !dbg !23265
  store %struct.spinlock* %lock98, %struct.spinlock** %lock.addr.i184, align 8
  store i64 %113, i64* %flags.addr.i185, align 8
  call void @llvm.dbg.declare(metadata !743, metadata !13334, metadata !DIExpression()) #8, !dbg !23266
  call void @llvm.dbg.declare(metadata !743, metadata !13338, metadata !DIExpression()) #8, !dbg !23266
  store i32 1, i32* %tmp.i186, align 4, !dbg !23266
  %114 = load i32, i32* %tmp.i186, align 4, !dbg !23266
  call void @llvm.dbg.declare(metadata !743, metadata !13339, metadata !DIExpression()) #8, !dbg !23267
  call void @llvm.dbg.declare(metadata !743, metadata !13345, metadata !DIExpression()) #8, !dbg !23267
  store i32 1, i32* %tmp8.i187, align 4, !dbg !23267
  %115 = load i32, i32* %tmp8.i187, align 4, !dbg !23267
  %116 = load i64, i64* %flags.addr.i185, align 8, !dbg !23268
  call void @arch_local_irq_restore(i64 %116) #14, !dbg !23268
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #8, !dbg !23269, !srcloc !13349
  %117 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i184, align 8, !dbg !23270
  %118 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %117, i32 0, i32 0, !dbg !23270
  %rlock.i188 = bitcast %union.anon.1* %118 to %struct.raw_spinlock*, !dbg !23270
  %119 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !23271
  %queues99 = getelementptr inbounds %struct.macb, %struct.macb* %119, i32 0, i32 9, !dbg !23272
  %arrayidx100 = getelementptr [8 x %struct.macb_queue], [8 x %struct.macb_queue]* %queues99, i64 0, i64 0, !dbg !23271
  %irq101 = getelementptr inbounds %struct.macb_queue, %struct.macb_queue* %arrayidx100, i32 0, i32 1, !dbg !23273
  %120 = load i32, i32* %irq101, align 8, !dbg !23273
  %call102 = call i32 @enable_irq_wake(i32 %120) #12, !dbg !23274
  br label %if.end103, !dbg !23275

if.end103:                                        ; preds = %if.end97, %if.end
  %121 = load %struct.net_device*, %struct.net_device** %netdev, align 8, !dbg !23276
  call void @netif_device_detach(%struct.net_device* %121) #12, !dbg !23277
  store i32 0, i32* %q, align 4, !dbg !23278
  %122 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !23280
  %queues104 = getelementptr inbounds %struct.macb, %struct.macb* %122, i32 0, i32 9, !dbg !23281
  %arraydecay105 = getelementptr inbounds [8 x %struct.macb_queue], [8 x %struct.macb_queue]* %queues104, i64 0, i64 0, !dbg !23280
  store %struct.macb_queue* %arraydecay105, %struct.macb_queue** %queue, align 8, !dbg !23282
  br label %for.cond106, !dbg !23283

for.cond106:                                      ; preds = %for.inc111, %if.end103
  %123 = load i32, i32* %q, align 4, !dbg !23284
  %124 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !23286
  %num_queues107 = getelementptr inbounds %struct.macb, %struct.macb* %124, i32 0, i32 7, !dbg !23287
  %125 = load i32, i32* %num_queues107, align 8, !dbg !23287
  %cmp108 = icmp ult i32 %123, %125, !dbg !23288
  br i1 %cmp108, label %for.body110, label %for.end114, !dbg !23289

for.body110:                                      ; preds = %for.cond106
  %126 = load %struct.macb_queue*, %struct.macb_queue** %queue, align 8, !dbg !23290
  %napi = getelementptr inbounds %struct.macb_queue, %struct.macb_queue* %126, i32 0, i32 24, !dbg !23291
  call void @napi_disable(%struct.napi_struct* %napi) #12, !dbg !23292
  br label %for.inc111, !dbg !23292

for.inc111:                                       ; preds = %for.body110
  %127 = load i32, i32* %q, align 4, !dbg !23293
  %inc112 = add i32 %127, 1, !dbg !23293
  store i32 %inc112, i32* %q, align 4, !dbg !23293
  %128 = load %struct.macb_queue*, %struct.macb_queue** %queue, align 8, !dbg !23294
  %incdec.ptr113 = getelementptr %struct.macb_queue, %struct.macb_queue* %128, i32 1, !dbg !23294
  store %struct.macb_queue* %incdec.ptr113, %struct.macb_queue** %queue, align 8, !dbg !23294
  br label %for.cond106, !dbg !23295, !llvm.loop !23296

for.end114:                                       ; preds = %for.cond106
  %129 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !23298
  %wol115 = getelementptr inbounds %struct.macb, %struct.macb* %129, i32 0, i32 33, !dbg !23299
  %130 = load i32, i32* %wol115, align 8, !dbg !23299
  %and116 = and i32 %130, 2, !dbg !23300
  %tobool117 = icmp ne i32 %and116, 0, !dbg !23300
  br i1 %tobool117, label %if.end147, label %if.then118, !dbg !23301

if.then118:                                       ; preds = %for.end114
  call void @rtnl_lock() #12, !dbg !23302
  %131 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !23303
  %phylink = getelementptr inbounds %struct.macb, %struct.macb* %131, i32 0, i32 21, !dbg !23304
  %132 = load %struct.phylink*, %struct.phylink** %phylink, align 8, !dbg !23304
  call void @phylink_stop(%struct.phylink* %132) #12, !dbg !23305
  call void @rtnl_unlock() #12, !dbg !23306
  br label %do.body119, !dbg !23307

do.body119:                                       ; preds = %if.then118
  br label %do.body120, !dbg !23308

do.body120:                                       ; preds = %do.body119
  call void @llvm.dbg.declare(metadata i64* %__dummy121, metadata !23309, metadata !DIExpression()), !dbg !23311
  call void @llvm.dbg.declare(metadata i64* %__dummy2122, metadata !23312, metadata !DIExpression()), !dbg !23311
  %cmp123 = icmp eq i64* %__dummy121, %__dummy2122, !dbg !23311
  %conv124 = zext i1 %cmp123 to i32, !dbg !23311
  store i32 1, i32* %tmp125, align 4, !dbg !23311
  %133 = load i32, i32* %tmp125, align 4, !dbg !23311
  br label %do.body126, !dbg !23313

do.body126:                                       ; preds = %do.body120
  br label %do.body127, !dbg !23314

do.body127:                                       ; preds = %do.body126
  br label %do.body128, !dbg !23315

do.body128:                                       ; preds = %do.body127
  call void @llvm.dbg.declare(metadata i64* %__dummy129, metadata !23317, metadata !DIExpression()), !dbg !23320
  call void @llvm.dbg.declare(metadata i64* %__dummy2130, metadata !23321, metadata !DIExpression()), !dbg !23320
  %cmp131 = icmp eq i64* %__dummy129, %__dummy2130, !dbg !23320
  %conv132 = zext i1 %cmp131 to i32, !dbg !23320
  store i32 1, i32* %tmp133, align 4, !dbg !23320
  %134 = load i32, i32* %tmp133, align 4, !dbg !23320
  %call134 = call i64 @arch_local_irq_save() #12, !dbg !23322
  store i64 %call134, i64* %flags, align 8, !dbg !23322
  br label %do.end135, !dbg !23322

do.end135:                                        ; preds = %do.body128
  br label %do.end136, !dbg !23315

do.end136:                                        ; preds = %do.end135
  br label %do.body137, !dbg !23314

do.body137:                                       ; preds = %do.end136
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #8, !dbg !23323, !srcloc !23324
  br label %do.body138, !dbg !23323

do.body138:                                       ; preds = %do.body137
  %135 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !23325
  %lock139 = getelementptr inbounds %struct.macb, %struct.macb* %135, i32 0, i32 10, !dbg !23325
  store %struct.spinlock* %lock139, %struct.spinlock** %lock.addr.i189, align 8
  %136 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i189, align 8, !dbg !23326
  %137 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %136, i32 0, i32 0, !dbg !23327
  %rlock.i190 = bitcast %union.anon.1* %137 to %struct.raw_spinlock*, !dbg !23327
  br label %do.end141, !dbg !23325

do.end141:                                        ; preds = %do.body138
  br label %do.end142, !dbg !23323

do.end142:                                        ; preds = %do.end141
  br label %do.end143, !dbg !23314

do.end143:                                        ; preds = %do.end142
  br label %do.end144, !dbg !23313

do.end144:                                        ; preds = %do.end143
  br label %do.end145, !dbg !23308

do.end145:                                        ; preds = %do.end144
  %138 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !23328
  call void @macb_reset_hw(%struct.macb* %138) #12, !dbg !23329
  %139 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !23330
  %lock146 = getelementptr inbounds %struct.macb, %struct.macb* %139, i32 0, i32 10, !dbg !23331
  %140 = load i64, i64* %flags, align 8, !dbg !23332
  store %struct.spinlock* %lock146, %struct.spinlock** %lock.addr.i191, align 8
  store i64 %140, i64* %flags.addr.i192, align 8
  call void @llvm.dbg.declare(metadata !743, metadata !13334, metadata !DIExpression()) #8, !dbg !23333
  call void @llvm.dbg.declare(metadata !743, metadata !13338, metadata !DIExpression()) #8, !dbg !23333
  store i32 1, i32* %tmp.i193, align 4, !dbg !23333
  %141 = load i32, i32* %tmp.i193, align 4, !dbg !23333
  call void @llvm.dbg.declare(metadata !743, metadata !13339, metadata !DIExpression()) #8, !dbg !23334
  call void @llvm.dbg.declare(metadata !743, metadata !13345, metadata !DIExpression()) #8, !dbg !23334
  store i32 1, i32* %tmp8.i194, align 4, !dbg !23334
  %142 = load i32, i32* %tmp8.i194, align 4, !dbg !23334
  %143 = load i64, i64* %flags.addr.i192, align 8, !dbg !23335
  call void @arch_local_irq_restore(i64 %143) #14, !dbg !23335
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #8, !dbg !23336, !srcloc !13349
  %144 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i191, align 8, !dbg !23337
  %145 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %144, i32 0, i32 0, !dbg !23337
  %rlock.i195 = bitcast %union.anon.1* %145 to %struct.raw_spinlock*, !dbg !23337
  br label %if.end147, !dbg !23338

if.end147:                                        ; preds = %do.end145, %for.end114
  %146 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !23339
  %caps148 = getelementptr inbounds %struct.macb, %struct.macb* %146, i32 0, i32 23, !dbg !23341
  %147 = load i32, i32* %caps148, align 8, !dbg !23341
  %and149 = and i32 %147, 16, !dbg !23342
  %tobool150 = icmp ne i32 %and149, 0, !dbg !23342
  br i1 %tobool150, label %if.end161, label %if.then151, !dbg !23343

if.then151:                                       ; preds = %if.end147
  call void @llvm.dbg.declare(metadata i32* %__v, metadata !23344, metadata !DIExpression()), !dbg !23346
  %148 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !23347
  %call152 = call zeroext i1 @macb_is_gem(%struct.macb* %148) #12, !dbg !23347
  br i1 %call152, label %if.then153, label %if.else156, !dbg !23346

if.then153:                                       ; preds = %if.then151
  %149 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !23347
  %macb_reg_readl154 = getelementptr inbounds %struct.macb, %struct.macb* %149, i32 0, i32 2, !dbg !23347
  %150 = load i32 (%struct.macb*, i32)*, i32 (%struct.macb*, i32)** %macb_reg_readl154, align 8, !dbg !23347
  %151 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !23347
  %call155 = call i32 %150(%struct.macb* %151, i32 12) #12, !dbg !23347
  store i32 %call155, i32* %__v, align 4, !dbg !23347
  br label %if.end159, !dbg !23347

if.else156:                                       ; preds = %if.then151
  %152 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !23347
  %macb_reg_readl157 = getelementptr inbounds %struct.macb, %struct.macb* %152, i32 0, i32 2, !dbg !23347
  %153 = load i32 (%struct.macb*, i32)*, i32 (%struct.macb*, i32)** %macb_reg_readl157, align 8, !dbg !23347
  %154 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !23347
  %call158 = call i32 %153(%struct.macb* %154, i32 192) #12, !dbg !23347
  store i32 %call158, i32* %__v, align 4, !dbg !23347
  br label %if.end159

if.end159:                                        ; preds = %if.else156, %if.then153
  %155 = load i32, i32* %__v, align 4, !dbg !23346
  store i32 %155, i32* %tmp160, align 4, !dbg !23347
  %156 = load i32, i32* %tmp160, align 4, !dbg !23346
  %157 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !23349
  %pm_data = getelementptr inbounds %struct.macb, %struct.macb* %157, i32 0, i32 49, !dbg !23350
  %usrio = getelementptr inbounds %struct.macb_pm_data, %struct.macb_pm_data* %pm_data, i32 0, i32 1, !dbg !23351
  store i32 %156, i32* %usrio, align 4, !dbg !23352
  br label %if.end161, !dbg !23349

if.end161:                                        ; preds = %if.end159, %if.end147
  %158 = load %struct.net_device*, %struct.net_device** %netdev, align 8, !dbg !23353
  %hw_features = getelementptr inbounds %struct.net_device, %struct.net_device* %158, i32 0, i32 16, !dbg !23355
  %159 = load i64, i64* %hw_features, align 8, !dbg !23355
  %and162 = and i64 %159, 274877906944, !dbg !23356
  %tobool163 = icmp ne i64 %and162, 0, !dbg !23356
  br i1 %tobool163, label %if.then164, label %if.end168, !dbg !23357

if.then164:                                       ; preds = %if.end161
  %160 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !23358
  %macb_reg_readl165 = getelementptr inbounds %struct.macb, %struct.macb* %160, i32 0, i32 2, !dbg !23358
  %161 = load i32 (%struct.macb*, i32)*, i32 (%struct.macb*, i32)** %macb_reg_readl165, align 8, !dbg !23358
  %162 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !23358
  %call166 = call i32 %161(%struct.macb* %162, i32 1760) #12, !dbg !23358
  %163 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !23359
  %pm_data167 = getelementptr inbounds %struct.macb, %struct.macb* %163, i32 0, i32 49, !dbg !23360
  %scrt2 = getelementptr inbounds %struct.macb_pm_data, %struct.macb_pm_data* %pm_data167, i32 0, i32 0, !dbg !23361
  store i32 %call166, i32* %scrt2, align 4, !dbg !23362
  br label %if.end168, !dbg !23359

if.end168:                                        ; preds = %if.then164, %if.end161
  %164 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !23363
  %ptp_info = getelementptr inbounds %struct.macb, %struct.macb* %164, i32 0, i32 34, !dbg !23365
  %165 = load %struct.macb_ptp_info*, %struct.macb_ptp_info** %ptp_info, align 8, !dbg !23365
  %tobool169 = icmp ne %struct.macb_ptp_info* %165, null, !dbg !23363
  br i1 %tobool169, label %if.then170, label %if.end172, !dbg !23366

if.then170:                                       ; preds = %if.end168
  %166 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !23367
  %ptp_info171 = getelementptr inbounds %struct.macb, %struct.macb* %166, i32 0, i32 34, !dbg !23368
  %167 = load %struct.macb_ptp_info*, %struct.macb_ptp_info** %ptp_info171, align 8, !dbg !23368
  %ptp_remove = getelementptr inbounds %struct.macb_ptp_info, %struct.macb_ptp_info* %167, i32 0, i32 1, !dbg !23369
  %168 = load void (%struct.net_device*)*, void (%struct.net_device*)** %ptp_remove, align 8, !dbg !23369
  %169 = load %struct.net_device*, %struct.net_device** %netdev, align 8, !dbg !23370
  call void %168(%struct.net_device* %169) #12, !dbg !23367
  br label %if.end172, !dbg !23367

if.end172:                                        ; preds = %if.then170, %if.end168
  %170 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !23371
  %call173 = call zeroext i1 @device_may_wakeup(%struct.device* %170) #12, !dbg !23373
  br i1 %call173, label %if.end176, label %if.then174, !dbg !23374

if.then174:                                       ; preds = %if.end172
  %171 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !23375
  %call175 = call i32 @pm_runtime_force_suspend(%struct.device* %171) #12, !dbg !23376
  br label %if.end176, !dbg !23376

if.end176:                                        ; preds = %if.then174, %if.end172
  store i32 0, i32* %retval, align 4, !dbg !23377
  br label %return, !dbg !23377

return:                                           ; preds = %if.end176, %if.then80, %if.then55, %if.then
  %172 = load i32, i32* %retval, align 4, !dbg !23378
  ret i32 %172, !dbg !23378
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @macb_resume(%struct.device* %dev) #2 !dbg !23379 {
entry:
  %lock.addr.i127 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i127, metadata !13124, metadata !DIExpression()), !dbg !23380
  %flags.addr.i128 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i128, metadata !13130, metadata !DIExpression()), !dbg !23384
  %tmp.i129 = alloca i32, align 4
  %tmp8.i130 = alloca i32, align 4
  %lock.addr.i125 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i125, metadata !13124, metadata !DIExpression()), !dbg !23385
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !13130, metadata !DIExpression()), !dbg !23389
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !11065, metadata !DIExpression()), !dbg !23390
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.device*, align 8
  %netdev = alloca %struct.net_device*, align 8
  %bp = alloca %struct.macb*, align 8
  %queue = alloca %struct.macb_queue*, align 8
  %flags = alloca i64, align 8
  %q = alloca i32, align 4
  %err = alloca i32, align 4
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__dummy12 = alloca i64, align 8
  %__dummy213 = alloca i64, align 8
  %tmp16 = alloca i32, align 4
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !23397, metadata !DIExpression()), !dbg !23398
  call void @llvm.dbg.declare(metadata %struct.net_device** %netdev, metadata !23399, metadata !DIExpression()), !dbg !23400
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !23401
  %call = call i8* @dev_get_drvdata(%struct.device* %0) #12, !dbg !23402
  %1 = bitcast i8* %call to %struct.net_device*, !dbg !23402
  store %struct.net_device* %1, %struct.net_device** %netdev, align 8, !dbg !23400
  call void @llvm.dbg.declare(metadata %struct.macb** %bp, metadata !23403, metadata !DIExpression()), !dbg !23404
  %2 = load %struct.net_device*, %struct.net_device** %netdev, align 8, !dbg !23405
  %call1 = call i8* @netdev_priv(%struct.net_device* %2) #12, !dbg !23406
  %3 = bitcast i8* %call1 to %struct.macb*, !dbg !23406
  store %struct.macb* %3, %struct.macb** %bp, align 8, !dbg !23404
  call void @llvm.dbg.declare(metadata %struct.macb_queue** %queue, metadata !23407, metadata !DIExpression()), !dbg !23408
  %4 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !23409
  %queues = getelementptr inbounds %struct.macb, %struct.macb* %4, i32 0, i32 9, !dbg !23410
  %arraydecay = getelementptr inbounds [8 x %struct.macb_queue], [8 x %struct.macb_queue]* %queues, i64 0, i64 0, !dbg !23409
  store %struct.macb_queue* %arraydecay, %struct.macb_queue** %queue, align 8, !dbg !23408
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !23411, metadata !DIExpression()), !dbg !23412
  call void @llvm.dbg.declare(metadata i32* %q, metadata !23413, metadata !DIExpression()), !dbg !23414
  call void @llvm.dbg.declare(metadata i32* %err, metadata !23415, metadata !DIExpression()), !dbg !23416
  %5 = load %struct.net_device*, %struct.net_device** %netdev, align 8, !dbg !23417
  %call2 = call zeroext i1 @netif_running(%struct.net_device* %5) #12, !dbg !23419
  br i1 %call2, label %if.end, label %if.then, !dbg !23420

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !23421
  br label %return, !dbg !23421

if.end:                                           ; preds = %entry
  %6 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !23422
  %call3 = call zeroext i1 @device_may_wakeup(%struct.device* %6) #12, !dbg !23424
  br i1 %call3, label %if.end6, label %if.then4, !dbg !23425

if.then4:                                         ; preds = %if.end
  %7 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !23426
  %call5 = call i32 @pm_runtime_force_resume(%struct.device* %7) #12, !dbg !23427
  br label %if.end6, !dbg !23427

if.end6:                                          ; preds = %if.then4, %if.end
  %8 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !23428
  %wol = getelementptr inbounds %struct.macb, %struct.macb* %8, i32 0, i32 33, !dbg !23429
  %9 = load i32, i32* %wol, align 8, !dbg !23429
  %and = and i32 %9, 2, !dbg !23430
  %tobool = icmp ne i32 %and, 0, !dbg !23430
  br i1 %tobool, label %if.then7, label %if.end95, !dbg !23431

if.then7:                                         ; preds = %if.end6
  br label %do.body, !dbg !23432

do.body:                                          ; preds = %if.then7
  br label %do.body8, !dbg !23433

do.body8:                                         ; preds = %do.body
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !23434, metadata !DIExpression()), !dbg !23436
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !23437, metadata !DIExpression()), !dbg !23436
  %cmp = icmp eq i64* %__dummy, %__dummy2, !dbg !23436
  %conv = zext i1 %cmp to i32, !dbg !23436
  store i32 1, i32* %tmp, align 4, !dbg !23436
  %10 = load i32, i32* %tmp, align 4, !dbg !23436
  br label %do.body9, !dbg !23438

do.body9:                                         ; preds = %do.body8
  br label %do.body10, !dbg !23439

do.body10:                                        ; preds = %do.body9
  br label %do.body11, !dbg !23440

do.body11:                                        ; preds = %do.body10
  call void @llvm.dbg.declare(metadata i64* %__dummy12, metadata !23442, metadata !DIExpression()), !dbg !23445
  call void @llvm.dbg.declare(metadata i64* %__dummy213, metadata !23446, metadata !DIExpression()), !dbg !23445
  %cmp14 = icmp eq i64* %__dummy12, %__dummy213, !dbg !23445
  %conv15 = zext i1 %cmp14 to i32, !dbg !23445
  store i32 1, i32* %tmp16, align 4, !dbg !23445
  %11 = load i32, i32* %tmp16, align 4, !dbg !23445
  %call17 = call i64 @arch_local_irq_save() #12, !dbg !23447
  store i64 %call17, i64* %flags, align 8, !dbg !23447
  br label %do.end, !dbg !23447

do.end:                                           ; preds = %do.body11
  br label %do.end18, !dbg !23440

do.end18:                                         ; preds = %do.end
  br label %do.body19, !dbg !23439

do.body19:                                        ; preds = %do.end18
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #8, !dbg !23448, !srcloc !23449
  br label %do.body20, !dbg !23448

do.body20:                                        ; preds = %do.body19
  %12 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !23450
  %lock = getelementptr inbounds %struct.macb, %struct.macb* %12, i32 0, i32 10, !dbg !23450
  store %struct.spinlock* %lock, %struct.spinlock** %lock.addr.i, align 8
  %13 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !23451
  %14 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %13, i32 0, i32 0, !dbg !23452
  %rlock.i = bitcast %union.anon.1* %14 to %struct.raw_spinlock*, !dbg !23452
  br label %do.end22, !dbg !23450

do.end22:                                         ; preds = %do.body20
  br label %do.end23, !dbg !23448

do.end23:                                         ; preds = %do.end22
  br label %do.end24, !dbg !23439

do.end24:                                         ; preds = %do.end23
  br label %do.end25, !dbg !23438

do.end25:                                         ; preds = %do.end24
  br label %do.end26, !dbg !23433

do.end26:                                         ; preds = %do.end25
  %15 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !23453
  %call27 = call zeroext i1 @macb_is_gem(%struct.macb* %15) #12, !dbg !23455
  br i1 %call27, label %if.then28, label %if.else, !dbg !23456

if.then28:                                        ; preds = %do.end26
  %16 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !23457
  %queues29 = getelementptr inbounds %struct.macb, %struct.macb* %16, i32 0, i32 9, !dbg !23457
  %arraydecay30 = getelementptr inbounds [8 x %struct.macb_queue], [8 x %struct.macb_queue]* %queues29, i64 0, i64 0, !dbg !23457
  %bp31 = getelementptr inbounds %struct.macb_queue, %struct.macb_queue* %arraydecay30, i32 0, i32 0, !dbg !23457
  %17 = load %struct.macb*, %struct.macb** %bp31, align 8, !dbg !23457
  %macb_reg_writel = getelementptr inbounds %struct.macb, %struct.macb* %17, i32 0, i32 3, !dbg !23457
  %18 = load void (%struct.macb*, i32, i32)*, void (%struct.macb*, i32, i32)** %macb_reg_writel, align 8, !dbg !23457
  %19 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !23457
  %queues32 = getelementptr inbounds %struct.macb, %struct.macb* %19, i32 0, i32 9, !dbg !23457
  %arraydecay33 = getelementptr inbounds [8 x %struct.macb_queue], [8 x %struct.macb_queue]* %queues32, i64 0, i64 0, !dbg !23457
  %bp34 = getelementptr inbounds %struct.macb_queue, %struct.macb_queue* %arraydecay33, i32 0, i32 0, !dbg !23457
  %20 = load %struct.macb*, %struct.macb** %bp34, align 8, !dbg !23457
  %21 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !23457
  %queues35 = getelementptr inbounds %struct.macb, %struct.macb* %21, i32 0, i32 9, !dbg !23457
  %arraydecay36 = getelementptr inbounds [8 x %struct.macb_queue], [8 x %struct.macb_queue]* %queues35, i64 0, i64 0, !dbg !23457
  %IDR = getelementptr inbounds %struct.macb_queue, %struct.macb_queue* %arraydecay36, i32 0, i32 4, !dbg !23457
  %22 = load i32, i32* %IDR, align 4, !dbg !23457
  call void %18(%struct.macb* %20, i32 %22, i32 268435456) #12, !dbg !23457
  %23 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !23459
  %macb_reg_writel37 = getelementptr inbounds %struct.macb, %struct.macb* %23, i32 0, i32 3, !dbg !23459
  %24 = load void (%struct.macb*, i32, i32)*, void (%struct.macb*, i32, i32)** %macb_reg_writel37, align 8, !dbg !23459
  %25 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !23459
  call void %24(%struct.macb* %25, i32 184, i32 0) #12, !dbg !23459
  br label %if.end49, !dbg !23460

if.else:                                          ; preds = %do.end26
  %26 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !23461
  %queues38 = getelementptr inbounds %struct.macb, %struct.macb* %26, i32 0, i32 9, !dbg !23461
  %arraydecay39 = getelementptr inbounds [8 x %struct.macb_queue], [8 x %struct.macb_queue]* %queues38, i64 0, i64 0, !dbg !23461
  %bp40 = getelementptr inbounds %struct.macb_queue, %struct.macb_queue* %arraydecay39, i32 0, i32 0, !dbg !23461
  %27 = load %struct.macb*, %struct.macb** %bp40, align 8, !dbg !23461
  %macb_reg_writel41 = getelementptr inbounds %struct.macb, %struct.macb* %27, i32 0, i32 3, !dbg !23461
  %28 = load void (%struct.macb*, i32, i32)*, void (%struct.macb*, i32, i32)** %macb_reg_writel41, align 8, !dbg !23461
  %29 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !23461
  %queues42 = getelementptr inbounds %struct.macb, %struct.macb* %29, i32 0, i32 9, !dbg !23461
  %arraydecay43 = getelementptr inbounds [8 x %struct.macb_queue], [8 x %struct.macb_queue]* %queues42, i64 0, i64 0, !dbg !23461
  %bp44 = getelementptr inbounds %struct.macb_queue, %struct.macb_queue* %arraydecay43, i32 0, i32 0, !dbg !23461
  %30 = load %struct.macb*, %struct.macb** %bp44, align 8, !dbg !23461
  %31 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !23461
  %queues45 = getelementptr inbounds %struct.macb, %struct.macb* %31, i32 0, i32 9, !dbg !23461
  %arraydecay46 = getelementptr inbounds [8 x %struct.macb_queue], [8 x %struct.macb_queue]* %queues45, i64 0, i64 0, !dbg !23461
  %IDR47 = getelementptr inbounds %struct.macb_queue, %struct.macb_queue* %arraydecay46, i32 0, i32 4, !dbg !23461
  %32 = load i32, i32* %IDR47, align 4, !dbg !23461
  call void %28(%struct.macb* %30, i32 %32, i32 16384) #12, !dbg !23461
  %33 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !23463
  %macb_reg_writel48 = getelementptr inbounds %struct.macb, %struct.macb* %33, i32 0, i32 3, !dbg !23463
  %34 = load void (%struct.macb*, i32, i32)*, void (%struct.macb*, i32, i32)** %macb_reg_writel48, align 8, !dbg !23463
  %35 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !23463
  call void %34(%struct.macb* %35, i32 196, i32 0) #12, !dbg !23463
  br label %if.end49

if.end49:                                         ; preds = %if.else, %if.then28
  %36 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !23464
  %queues50 = getelementptr inbounds %struct.macb, %struct.macb* %36, i32 0, i32 9, !dbg !23464
  %arraydecay51 = getelementptr inbounds [8 x %struct.macb_queue], [8 x %struct.macb_queue]* %queues50, i64 0, i64 0, !dbg !23464
  %bp52 = getelementptr inbounds %struct.macb_queue, %struct.macb_queue* %arraydecay51, i32 0, i32 0, !dbg !23464
  %37 = load %struct.macb*, %struct.macb** %bp52, align 8, !dbg !23464
  %macb_reg_readl = getelementptr inbounds %struct.macb, %struct.macb* %37, i32 0, i32 2, !dbg !23464
  %38 = load i32 (%struct.macb*, i32)*, i32 (%struct.macb*, i32)** %macb_reg_readl, align 8, !dbg !23464
  %39 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !23464
  %queues53 = getelementptr inbounds %struct.macb, %struct.macb* %39, i32 0, i32 9, !dbg !23464
  %arraydecay54 = getelementptr inbounds [8 x %struct.macb_queue], [8 x %struct.macb_queue]* %queues53, i64 0, i64 0, !dbg !23464
  %bp55 = getelementptr inbounds %struct.macb_queue, %struct.macb_queue* %arraydecay54, i32 0, i32 0, !dbg !23464
  %40 = load %struct.macb*, %struct.macb** %bp55, align 8, !dbg !23464
  %41 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !23464
  %queues56 = getelementptr inbounds %struct.macb, %struct.macb* %41, i32 0, i32 9, !dbg !23464
  %arraydecay57 = getelementptr inbounds [8 x %struct.macb_queue], [8 x %struct.macb_queue]* %queues56, i64 0, i64 0, !dbg !23464
  %ISR = getelementptr inbounds %struct.macb_queue, %struct.macb_queue* %arraydecay57, i32 0, i32 2, !dbg !23464
  %42 = load i32, i32* %ISR, align 4, !dbg !23464
  %call58 = call i32 %38(%struct.macb* %40, i32 %42) #12, !dbg !23464
  %43 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !23465
  %caps = getelementptr inbounds %struct.macb, %struct.macb* %43, i32 0, i32 23, !dbg !23467
  %44 = load i32, i32* %caps, align 8, !dbg !23467
  %and59 = and i32 %44, 1, !dbg !23468
  %tobool60 = icmp ne i32 %and59, 0, !dbg !23468
  br i1 %tobool60, label %if.then61, label %if.end72, !dbg !23469

if.then61:                                        ; preds = %if.end49
  %45 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !23470
  %queues62 = getelementptr inbounds %struct.macb, %struct.macb* %45, i32 0, i32 9, !dbg !23470
  %arraydecay63 = getelementptr inbounds [8 x %struct.macb_queue], [8 x %struct.macb_queue]* %queues62, i64 0, i64 0, !dbg !23470
  %bp64 = getelementptr inbounds %struct.macb_queue, %struct.macb_queue* %arraydecay63, i32 0, i32 0, !dbg !23470
  %46 = load %struct.macb*, %struct.macb** %bp64, align 8, !dbg !23470
  %macb_reg_writel65 = getelementptr inbounds %struct.macb, %struct.macb* %46, i32 0, i32 3, !dbg !23470
  %47 = load void (%struct.macb*, i32, i32)*, void (%struct.macb*, i32, i32)** %macb_reg_writel65, align 8, !dbg !23470
  %48 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !23470
  %queues66 = getelementptr inbounds %struct.macb, %struct.macb* %48, i32 0, i32 9, !dbg !23470
  %arraydecay67 = getelementptr inbounds [8 x %struct.macb_queue], [8 x %struct.macb_queue]* %queues66, i64 0, i64 0, !dbg !23470
  %bp68 = getelementptr inbounds %struct.macb_queue, %struct.macb_queue* %arraydecay67, i32 0, i32 0, !dbg !23470
  %49 = load %struct.macb*, %struct.macb** %bp68, align 8, !dbg !23470
  %50 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !23470
  %queues69 = getelementptr inbounds %struct.macb, %struct.macb* %50, i32 0, i32 9, !dbg !23470
  %arraydecay70 = getelementptr inbounds [8 x %struct.macb_queue], [8 x %struct.macb_queue]* %queues69, i64 0, i64 0, !dbg !23470
  %ISR71 = getelementptr inbounds %struct.macb_queue, %struct.macb_queue* %arraydecay70, i32 0, i32 2, !dbg !23470
  %51 = load i32, i32* %ISR71, align 4, !dbg !23470
  call void %47(%struct.macb* %49, i32 %51, i32 -1) #12, !dbg !23470
  br label %if.end72, !dbg !23470

if.end72:                                         ; preds = %if.then61, %if.end49
  %52 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !23471
  %53 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !23472
  %queues73 = getelementptr inbounds %struct.macb, %struct.macb* %53, i32 0, i32 9, !dbg !23473
  %arrayidx = getelementptr [8 x %struct.macb_queue], [8 x %struct.macb_queue]* %queues73, i64 0, i64 0, !dbg !23472
  %irq = getelementptr inbounds %struct.macb_queue, %struct.macb_queue* %arrayidx, i32 0, i32 1, !dbg !23474
  %54 = load i32, i32* %irq, align 8, !dbg !23474
  %55 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !23475
  %queues74 = getelementptr inbounds %struct.macb, %struct.macb* %55, i32 0, i32 9, !dbg !23476
  %arraydecay75 = getelementptr inbounds [8 x %struct.macb_queue], [8 x %struct.macb_queue]* %queues74, i64 0, i64 0, !dbg !23475
  %56 = bitcast %struct.macb_queue* %arraydecay75 to i8*, !dbg !23475
  call void @devm_free_irq(%struct.device* %52, i32 %54, i8* %56) #12, !dbg !23477
  %57 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !23478
  %58 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !23479
  %queues76 = getelementptr inbounds %struct.macb, %struct.macb* %58, i32 0, i32 9, !dbg !23480
  %arrayidx77 = getelementptr [8 x %struct.macb_queue], [8 x %struct.macb_queue]* %queues76, i64 0, i64 0, !dbg !23479
  %irq78 = getelementptr inbounds %struct.macb_queue, %struct.macb_queue* %arrayidx77, i32 0, i32 1, !dbg !23481
  %59 = load i32, i32* %irq78, align 8, !dbg !23481
  %60 = load %struct.net_device*, %struct.net_device** %netdev, align 8, !dbg !23482
  %name = getelementptr inbounds %struct.net_device, %struct.net_device* %60, i32 0, i32 0, !dbg !23483
  %arraydecay79 = getelementptr inbounds [16 x i8], [16 x i8]* %name, i64 0, i64 0, !dbg !23482
  %61 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !23484
  %queues80 = getelementptr inbounds %struct.macb, %struct.macb* %61, i32 0, i32 9, !dbg !23485
  %arraydecay81 = getelementptr inbounds [8 x %struct.macb_queue], [8 x %struct.macb_queue]* %queues80, i64 0, i64 0, !dbg !23484
  %62 = bitcast %struct.macb_queue* %arraydecay81 to i8*, !dbg !23484
  %call82 = call i32 @devm_request_irq(%struct.device* %57, i32 %59, i32 (i32, i8*)* @macb_interrupt, i64 128, i8* %arraydecay79, i8* %62) #12, !dbg !23486
  store i32 %call82, i32* %err, align 4, !dbg !23487
  %63 = load i32, i32* %err, align 4, !dbg !23488
  %tobool83 = icmp ne i32 %63, 0, !dbg !23488
  br i1 %tobool83, label %if.then84, label %if.end89, !dbg !23489

if.then84:                                        ; preds = %if.end72
  %64 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !23490
  %65 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !23490
  %queues85 = getelementptr inbounds %struct.macb, %struct.macb* %65, i32 0, i32 9, !dbg !23490
  %arrayidx86 = getelementptr [8 x %struct.macb_queue], [8 x %struct.macb_queue]* %queues85, i64 0, i64 0, !dbg !23490
  %irq87 = getelementptr inbounds %struct.macb_queue, %struct.macb_queue* %arrayidx86, i32 0, i32 1, !dbg !23490
  %66 = load i32, i32* %irq87, align 8, !dbg !23490
  %67 = load i32, i32* %err, align 4, !dbg !23490
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %64, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.18, i64 0, i64 0), i32 %66, i32 %67) #13, !dbg !23490
  %68 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !23491
  %lock88 = getelementptr inbounds %struct.macb, %struct.macb* %68, i32 0, i32 10, !dbg !23492
  %69 = load i64, i64* %flags, align 8, !dbg !23493
  store %struct.spinlock* %lock88, %struct.spinlock** %lock.addr.i125, align 8
  store i64 %69, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !743, metadata !13334, metadata !DIExpression()) #8, !dbg !23494
  call void @llvm.dbg.declare(metadata !743, metadata !13338, metadata !DIExpression()) #8, !dbg !23494
  store i32 1, i32* %tmp.i, align 4, !dbg !23494
  %70 = load i32, i32* %tmp.i, align 4, !dbg !23494
  call void @llvm.dbg.declare(metadata !743, metadata !13339, metadata !DIExpression()) #8, !dbg !23495
  call void @llvm.dbg.declare(metadata !743, metadata !13345, metadata !DIExpression()) #8, !dbg !23495
  store i32 1, i32* %tmp8.i, align 4, !dbg !23495
  %71 = load i32, i32* %tmp8.i, align 4, !dbg !23495
  %72 = load i64, i64* %flags.addr.i, align 8, !dbg !23496
  call void @arch_local_irq_restore(i64 %72) #14, !dbg !23496
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #8, !dbg !23497, !srcloc !13349
  %73 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i125, align 8, !dbg !23498
  %74 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %73, i32 0, i32 0, !dbg !23498
  %rlock.i126 = bitcast %union.anon.1* %74 to %struct.raw_spinlock*, !dbg !23498
  %75 = load i32, i32* %err, align 4, !dbg !23499
  store i32 %75, i32* %retval, align 4, !dbg !23500
  br label %return, !dbg !23500

if.end89:                                         ; preds = %if.end72
  %76 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !23501
  %lock90 = getelementptr inbounds %struct.macb, %struct.macb* %76, i32 0, i32 10, !dbg !23502
  %77 = load i64, i64* %flags, align 8, !dbg !23503
  store %struct.spinlock* %lock90, %struct.spinlock** %lock.addr.i127, align 8
  store i64 %77, i64* %flags.addr.i128, align 8
  call void @llvm.dbg.declare(metadata !743, metadata !13334, metadata !DIExpression()) #8, !dbg !23504
  call void @llvm.dbg.declare(metadata !743, metadata !13338, metadata !DIExpression()) #8, !dbg !23504
  store i32 1, i32* %tmp.i129, align 4, !dbg !23504
  %78 = load i32, i32* %tmp.i129, align 4, !dbg !23504
  call void @llvm.dbg.declare(metadata !743, metadata !13339, metadata !DIExpression()) #8, !dbg !23505
  call void @llvm.dbg.declare(metadata !743, metadata !13345, metadata !DIExpression()) #8, !dbg !23505
  store i32 1, i32* %tmp8.i130, align 4, !dbg !23505
  %79 = load i32, i32* %tmp8.i130, align 4, !dbg !23505
  %80 = load i64, i64* %flags.addr.i128, align 8, !dbg !23506
  call void @arch_local_irq_restore(i64 %80) #14, !dbg !23506
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #8, !dbg !23507, !srcloc !13349
  %81 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i127, align 8, !dbg !23508
  %82 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %81, i32 0, i32 0, !dbg !23508
  %rlock.i131 = bitcast %union.anon.1* %82 to %struct.raw_spinlock*, !dbg !23508
  %83 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !23509
  %queues91 = getelementptr inbounds %struct.macb, %struct.macb* %83, i32 0, i32 9, !dbg !23510
  %arrayidx92 = getelementptr [8 x %struct.macb_queue], [8 x %struct.macb_queue]* %queues91, i64 0, i64 0, !dbg !23509
  %irq93 = getelementptr inbounds %struct.macb_queue, %struct.macb_queue* %arrayidx92, i32 0, i32 1, !dbg !23511
  %84 = load i32, i32* %irq93, align 8, !dbg !23511
  %call94 = call i32 @disable_irq_wake(i32 %84) #12, !dbg !23512
  call void @rtnl_lock() #12, !dbg !23513
  %85 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !23514
  %phylink = getelementptr inbounds %struct.macb, %struct.macb* %85, i32 0, i32 21, !dbg !23515
  %86 = load %struct.phylink*, %struct.phylink** %phylink, align 8, !dbg !23515
  call void @phylink_stop(%struct.phylink* %86) #12, !dbg !23516
  call void @rtnl_unlock() #12, !dbg !23517
  br label %if.end95, !dbg !23518

if.end95:                                         ; preds = %if.end89, %if.end6
  store i32 0, i32* %q, align 4, !dbg !23519
  %87 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !23521
  %queues96 = getelementptr inbounds %struct.macb, %struct.macb* %87, i32 0, i32 9, !dbg !23522
  %arraydecay97 = getelementptr inbounds [8 x %struct.macb_queue], [8 x %struct.macb_queue]* %queues96, i64 0, i64 0, !dbg !23521
  store %struct.macb_queue* %arraydecay97, %struct.macb_queue** %queue, align 8, !dbg !23523
  br label %for.cond, !dbg !23524

for.cond:                                         ; preds = %for.inc, %if.end95
  %88 = load i32, i32* %q, align 4, !dbg !23525
  %89 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !23527
  %num_queues = getelementptr inbounds %struct.macb, %struct.macb* %89, i32 0, i32 7, !dbg !23528
  %90 = load i32, i32* %num_queues, align 8, !dbg !23528
  %cmp98 = icmp ult i32 %88, %90, !dbg !23529
  br i1 %cmp98, label %for.body, label %for.end, !dbg !23530

for.body:                                         ; preds = %for.cond
  %91 = load %struct.macb_queue*, %struct.macb_queue** %queue, align 8, !dbg !23531
  %napi = getelementptr inbounds %struct.macb_queue, %struct.macb_queue* %91, i32 0, i32 24, !dbg !23532
  call void @napi_enable(%struct.napi_struct* %napi) #12, !dbg !23533
  br label %for.inc, !dbg !23533

for.inc:                                          ; preds = %for.body
  %92 = load i32, i32* %q, align 4, !dbg !23534
  %inc = add i32 %92, 1, !dbg !23534
  store i32 %inc, i32* %q, align 4, !dbg !23534
  %93 = load %struct.macb_queue*, %struct.macb_queue** %queue, align 8, !dbg !23535
  %incdec.ptr = getelementptr %struct.macb_queue, %struct.macb_queue* %93, i32 1, !dbg !23535
  store %struct.macb_queue* %incdec.ptr, %struct.macb_queue** %queue, align 8, !dbg !23535
  br label %for.cond, !dbg !23536, !llvm.loop !23537

for.end:                                          ; preds = %for.cond
  %94 = load %struct.net_device*, %struct.net_device** %netdev, align 8, !dbg !23539
  %hw_features = getelementptr inbounds %struct.net_device, %struct.net_device* %94, i32 0, i32 16, !dbg !23541
  %95 = load i64, i64* %hw_features, align 8, !dbg !23541
  %and100 = and i64 %95, 274877906944, !dbg !23542
  %tobool101 = icmp ne i64 %and100, 0, !dbg !23542
  br i1 %tobool101, label %if.then102, label %if.end104, !dbg !23543

if.then102:                                       ; preds = %for.end
  %96 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !23544
  %macb_reg_writel103 = getelementptr inbounds %struct.macb, %struct.macb* %96, i32 0, i32 3, !dbg !23544
  %97 = load void (%struct.macb*, i32, i32)*, void (%struct.macb*, i32, i32)** %macb_reg_writel103, align 8, !dbg !23544
  %98 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !23544
  %99 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !23544
  %pm_data = getelementptr inbounds %struct.macb, %struct.macb* %99, i32 0, i32 49, !dbg !23544
  %scrt2 = getelementptr inbounds %struct.macb_pm_data, %struct.macb_pm_data* %pm_data, i32 0, i32 0, !dbg !23544
  %100 = load i32, i32* %scrt2, align 4, !dbg !23544
  call void %97(%struct.macb* %98, i32 1760, i32 %100) #12, !dbg !23544
  br label %if.end104, !dbg !23544

if.end104:                                        ; preds = %if.then102, %for.end
  %101 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !23545
  %caps105 = getelementptr inbounds %struct.macb, %struct.macb* %101, i32 0, i32 23, !dbg !23547
  %102 = load i32, i32* %caps105, align 8, !dbg !23547
  %and106 = and i32 %102, 16, !dbg !23548
  %tobool107 = icmp ne i32 %and106, 0, !dbg !23548
  br i1 %tobool107, label %if.end118, label %if.then108, !dbg !23549

if.then108:                                       ; preds = %if.end104
  %103 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !23550
  %call109 = call zeroext i1 @macb_is_gem(%struct.macb* %103) #12, !dbg !23550
  br i1 %call109, label %if.then110, label %if.else113, !dbg !23553

if.then110:                                       ; preds = %if.then108
  %104 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !23550
  %macb_reg_writel111 = getelementptr inbounds %struct.macb, %struct.macb* %104, i32 0, i32 3, !dbg !23550
  %105 = load void (%struct.macb*, i32, i32)*, void (%struct.macb*, i32, i32)** %macb_reg_writel111, align 8, !dbg !23550
  %106 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !23550
  %107 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !23550
  %pm_data112 = getelementptr inbounds %struct.macb, %struct.macb* %107, i32 0, i32 49, !dbg !23550
  %usrio = getelementptr inbounds %struct.macb_pm_data, %struct.macb_pm_data* %pm_data112, i32 0, i32 1, !dbg !23550
  %108 = load i32, i32* %usrio, align 4, !dbg !23550
  call void %105(%struct.macb* %106, i32 12, i32 %108) #12, !dbg !23550
  br label %if.end117, !dbg !23550

if.else113:                                       ; preds = %if.then108
  %109 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !23550
  %macb_reg_writel114 = getelementptr inbounds %struct.macb, %struct.macb* %109, i32 0, i32 3, !dbg !23550
  %110 = load void (%struct.macb*, i32, i32)*, void (%struct.macb*, i32, i32)** %macb_reg_writel114, align 8, !dbg !23550
  %111 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !23550
  %112 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !23550
  %pm_data115 = getelementptr inbounds %struct.macb, %struct.macb* %112, i32 0, i32 49, !dbg !23550
  %usrio116 = getelementptr inbounds %struct.macb_pm_data, %struct.macb_pm_data* %pm_data115, i32 0, i32 1, !dbg !23550
  %113 = load i32, i32* %usrio116, align 4, !dbg !23550
  call void %110(%struct.macb* %111, i32 192, i32 %113) #12, !dbg !23550
  br label %if.end117

if.end117:                                        ; preds = %if.else113, %if.then110
  br label %if.end118, !dbg !23554

if.end118:                                        ; preds = %if.end117, %if.end104
  %114 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !23555
  %macb_reg_writel119 = getelementptr inbounds %struct.macb, %struct.macb* %114, i32 0, i32 3, !dbg !23555
  %115 = load void (%struct.macb*, i32, i32)*, void (%struct.macb*, i32, i32)** %macb_reg_writel119, align 8, !dbg !23555
  %116 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !23555
  call void %115(%struct.macb* %116, i32 0, i32 16) #12, !dbg !23555
  %117 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !23556
  call void @macb_init_hw(%struct.macb* %117) #12, !dbg !23557
  %118 = load %struct.net_device*, %struct.net_device** %netdev, align 8, !dbg !23558
  call void @macb_set_rx_mode(%struct.net_device* %118) #12, !dbg !23559
  %119 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !23560
  call void @macb_restore_features(%struct.macb* %119) #12, !dbg !23561
  call void @rtnl_lock() #12, !dbg !23562
  %120 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !23563
  %phylink120 = getelementptr inbounds %struct.macb, %struct.macb* %120, i32 0, i32 21, !dbg !23564
  %121 = load %struct.phylink*, %struct.phylink** %phylink120, align 8, !dbg !23564
  call void @phylink_start(%struct.phylink* %121) #12, !dbg !23565
  call void @rtnl_unlock() #12, !dbg !23566
  %122 = load %struct.net_device*, %struct.net_device** %netdev, align 8, !dbg !23567
  call void @netif_device_attach(%struct.net_device* %122) #12, !dbg !23568
  %123 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !23569
  %ptp_info = getelementptr inbounds %struct.macb, %struct.macb* %123, i32 0, i32 34, !dbg !23571
  %124 = load %struct.macb_ptp_info*, %struct.macb_ptp_info** %ptp_info, align 8, !dbg !23571
  %tobool121 = icmp ne %struct.macb_ptp_info* %124, null, !dbg !23569
  br i1 %tobool121, label %if.then122, label %if.end124, !dbg !23572

if.then122:                                       ; preds = %if.end118
  %125 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !23573
  %ptp_info123 = getelementptr inbounds %struct.macb, %struct.macb* %125, i32 0, i32 34, !dbg !23574
  %126 = load %struct.macb_ptp_info*, %struct.macb_ptp_info** %ptp_info123, align 8, !dbg !23574
  %ptp_init = getelementptr inbounds %struct.macb_ptp_info, %struct.macb_ptp_info* %126, i32 0, i32 0, !dbg !23575
  %127 = load void (%struct.net_device*)*, void (%struct.net_device*)** %ptp_init, align 8, !dbg !23575
  %128 = load %struct.net_device*, %struct.net_device** %netdev, align 8, !dbg !23576
  call void %127(%struct.net_device* %128) #12, !dbg !23573
  br label %if.end124, !dbg !23573

if.end124:                                        ; preds = %if.then122, %if.end118
  store i32 0, i32* %retval, align 4, !dbg !23577
  br label %return, !dbg !23577

return:                                           ; preds = %if.end124, %if.then84, %if.then
  %129 = load i32, i32* %retval, align 4, !dbg !23578
  ret i32 %129, !dbg !23578
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @macb_runtime_suspend(%struct.device* %dev) #2 !dbg !23579 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %netdev = alloca %struct.net_device*, align 8
  %bp = alloca %struct.macb*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !23580, metadata !DIExpression()), !dbg !23581
  call void @llvm.dbg.declare(metadata %struct.net_device** %netdev, metadata !23582, metadata !DIExpression()), !dbg !23583
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !23584
  %call = call i8* @dev_get_drvdata(%struct.device* %0) #12, !dbg !23585
  %1 = bitcast i8* %call to %struct.net_device*, !dbg !23585
  store %struct.net_device* %1, %struct.net_device** %netdev, align 8, !dbg !23583
  call void @llvm.dbg.declare(metadata %struct.macb** %bp, metadata !23586, metadata !DIExpression()), !dbg !23587
  %2 = load %struct.net_device*, %struct.net_device** %netdev, align 8, !dbg !23588
  %call1 = call i8* @netdev_priv(%struct.net_device* %2) #12, !dbg !23589
  %3 = bitcast i8* %call1 to %struct.macb*, !dbg !23589
  store %struct.macb* %3, %struct.macb** %bp, align 8, !dbg !23587
  %4 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !23590
  %call2 = call zeroext i1 @device_may_wakeup(%struct.device* %4) #12, !dbg !23592
  br i1 %call2, label %if.end, label %if.then, !dbg !23593

if.then:                                          ; preds = %entry
  %5 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !23594
  %tx_clk = getelementptr inbounds %struct.macb, %struct.macb* %5, i32 0, i32 14, !dbg !23596
  %6 = load %struct.clk*, %struct.clk** %tx_clk, align 8, !dbg !23596
  call void @clk_disable_unprepare(%struct.clk* %6) #12, !dbg !23597
  %7 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !23598
  %hclk = getelementptr inbounds %struct.macb, %struct.macb* %7, i32 0, i32 13, !dbg !23599
  %8 = load %struct.clk*, %struct.clk** %hclk, align 8, !dbg !23599
  call void @clk_disable_unprepare(%struct.clk* %8) #12, !dbg !23600
  %9 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !23601
  %pclk = getelementptr inbounds %struct.macb, %struct.macb* %9, i32 0, i32 12, !dbg !23602
  %10 = load %struct.clk*, %struct.clk** %pclk, align 8, !dbg !23602
  call void @clk_disable_unprepare(%struct.clk* %10) #12, !dbg !23603
  %11 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !23604
  %rx_clk = getelementptr inbounds %struct.macb, %struct.macb* %11, i32 0, i32 15, !dbg !23605
  %12 = load %struct.clk*, %struct.clk** %rx_clk, align 8, !dbg !23605
  call void @clk_disable_unprepare(%struct.clk* %12) #12, !dbg !23606
  br label %if.end, !dbg !23607

if.end:                                           ; preds = %if.then, %entry
  %13 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !23608
  %tsu_clk = getelementptr inbounds %struct.macb, %struct.macb* %13, i32 0, i32 16, !dbg !23609
  %14 = load %struct.clk*, %struct.clk** %tsu_clk, align 8, !dbg !23609
  call void @clk_disable_unprepare(%struct.clk* %14) #12, !dbg !23610
  ret i32 0, !dbg !23611
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @macb_runtime_resume(%struct.device* %dev) #2 !dbg !23612 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %netdev = alloca %struct.net_device*, align 8
  %bp = alloca %struct.macb*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !23613, metadata !DIExpression()), !dbg !23614
  call void @llvm.dbg.declare(metadata %struct.net_device** %netdev, metadata !23615, metadata !DIExpression()), !dbg !23616
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !23617
  %call = call i8* @dev_get_drvdata(%struct.device* %0) #12, !dbg !23618
  %1 = bitcast i8* %call to %struct.net_device*, !dbg !23618
  store %struct.net_device* %1, %struct.net_device** %netdev, align 8, !dbg !23616
  call void @llvm.dbg.declare(metadata %struct.macb** %bp, metadata !23619, metadata !DIExpression()), !dbg !23620
  %2 = load %struct.net_device*, %struct.net_device** %netdev, align 8, !dbg !23621
  %call1 = call i8* @netdev_priv(%struct.net_device* %2) #12, !dbg !23622
  %3 = bitcast i8* %call1 to %struct.macb*, !dbg !23622
  store %struct.macb* %3, %struct.macb** %bp, align 8, !dbg !23620
  %4 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !23623
  %call2 = call zeroext i1 @device_may_wakeup(%struct.device* %4) #12, !dbg !23625
  br i1 %call2, label %if.end, label %if.then, !dbg !23626

if.then:                                          ; preds = %entry
  %5 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !23627
  %pclk = getelementptr inbounds %struct.macb, %struct.macb* %5, i32 0, i32 12, !dbg !23629
  %6 = load %struct.clk*, %struct.clk** %pclk, align 8, !dbg !23629
  %call3 = call i32 @clk_prepare_enable(%struct.clk* %6) #12, !dbg !23630
  %7 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !23631
  %hclk = getelementptr inbounds %struct.macb, %struct.macb* %7, i32 0, i32 13, !dbg !23632
  %8 = load %struct.clk*, %struct.clk** %hclk, align 8, !dbg !23632
  %call4 = call i32 @clk_prepare_enable(%struct.clk* %8) #12, !dbg !23633
  %9 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !23634
  %tx_clk = getelementptr inbounds %struct.macb, %struct.macb* %9, i32 0, i32 14, !dbg !23635
  %10 = load %struct.clk*, %struct.clk** %tx_clk, align 8, !dbg !23635
  %call5 = call i32 @clk_prepare_enable(%struct.clk* %10) #12, !dbg !23636
  %11 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !23637
  %rx_clk = getelementptr inbounds %struct.macb, %struct.macb* %11, i32 0, i32 15, !dbg !23638
  %12 = load %struct.clk*, %struct.clk** %rx_clk, align 8, !dbg !23638
  %call6 = call i32 @clk_prepare_enable(%struct.clk* %12) #12, !dbg !23639
  br label %if.end, !dbg !23640

if.end:                                           ; preds = %if.then, %entry
  %13 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !23641
  %tsu_clk = getelementptr inbounds %struct.macb, %struct.macb* %13, i32 0, i32 16, !dbg !23642
  %14 = load %struct.clk*, %struct.clk** %tsu_clk, align 8, !dbg !23642
  %call7 = call i32 @clk_prepare_enable(%struct.clk* %14) #12, !dbg !23643
  ret i32 0, !dbg !23644
}

; Function Attrs: noredzone
declare dso_local void @devm_free_irq(%struct.device*, i32, i8*) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @gem_wol_interrupt(i32 %irq, i8* %dev_id) #2 !dbg !23645 {
entry:
  %lock.addr.i22 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i22, metadata !12906, metadata !DIExpression()), !dbg !23646
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !12912, metadata !DIExpression()), !dbg !23648
  %retval = alloca i32, align 4
  %irq.addr = alloca i32, align 4
  %dev_id.addr = alloca i8*, align 8
  %queue = alloca %struct.macb_queue*, align 8
  %bp = alloca %struct.macb*, align 8
  %status = alloca i32, align 4
  %tmp = alloca i32, align 4
  store i32 %irq, i32* %irq.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %irq.addr, metadata !23650, metadata !DIExpression()), !dbg !23651
  store i8* %dev_id, i8** %dev_id.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %dev_id.addr, metadata !23652, metadata !DIExpression()), !dbg !23653
  call void @llvm.dbg.declare(metadata %struct.macb_queue** %queue, metadata !23654, metadata !DIExpression()), !dbg !23655
  %0 = load i8*, i8** %dev_id.addr, align 8, !dbg !23656
  %1 = bitcast i8* %0 to %struct.macb_queue*, !dbg !23656
  store %struct.macb_queue* %1, %struct.macb_queue** %queue, align 8, !dbg !23655
  call void @llvm.dbg.declare(metadata %struct.macb** %bp, metadata !23657, metadata !DIExpression()), !dbg !23658
  %2 = load %struct.macb_queue*, %struct.macb_queue** %queue, align 8, !dbg !23659
  %bp1 = getelementptr inbounds %struct.macb_queue, %struct.macb_queue* %2, i32 0, i32 0, !dbg !23660
  %3 = load %struct.macb*, %struct.macb** %bp1, align 8, !dbg !23660
  store %struct.macb* %3, %struct.macb** %bp, align 8, !dbg !23658
  call void @llvm.dbg.declare(metadata i32* %status, metadata !23661, metadata !DIExpression()), !dbg !23662
  %4 = load %struct.macb_queue*, %struct.macb_queue** %queue, align 8, !dbg !23663
  %bp2 = getelementptr inbounds %struct.macb_queue, %struct.macb_queue* %4, i32 0, i32 0, !dbg !23663
  %5 = load %struct.macb*, %struct.macb** %bp2, align 8, !dbg !23663
  %macb_reg_readl = getelementptr inbounds %struct.macb, %struct.macb* %5, i32 0, i32 2, !dbg !23663
  %6 = load i32 (%struct.macb*, i32)*, i32 (%struct.macb*, i32)** %macb_reg_readl, align 8, !dbg !23663
  %7 = load %struct.macb_queue*, %struct.macb_queue** %queue, align 8, !dbg !23663
  %bp3 = getelementptr inbounds %struct.macb_queue, %struct.macb_queue* %7, i32 0, i32 0, !dbg !23663
  %8 = load %struct.macb*, %struct.macb** %bp3, align 8, !dbg !23663
  %9 = load %struct.macb_queue*, %struct.macb_queue** %queue, align 8, !dbg !23663
  %ISR = getelementptr inbounds %struct.macb_queue, %struct.macb_queue* %9, i32 0, i32 2, !dbg !23663
  %10 = load i32, i32* %ISR, align 4, !dbg !23663
  %call = call i32 %6(%struct.macb* %8, i32 %10) #12, !dbg !23663
  store i32 %call, i32* %status, align 4, !dbg !23664
  %11 = load i32, i32* %status, align 4, !dbg !23665
  %tobool = icmp ne i32 %11, 0, !dbg !23665
  %lnot = xor i1 %tobool, true, !dbg !23665
  %lnot4 = xor i1 %lnot, true, !dbg !23665
  %lnot5 = xor i1 %lnot4, true, !dbg !23665
  %lnot.ext = zext i1 %lnot5 to i32, !dbg !23665
  %conv = sext i32 %lnot.ext to i64, !dbg !23665
  %tobool6 = icmp ne i64 %conv, 0, !dbg !23665
  br i1 %tobool6, label %if.then, label %if.end, !dbg !23667

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !23668
  br label %return, !dbg !23668

if.end:                                           ; preds = %entry
  %12 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !23669
  %lock = getelementptr inbounds %struct.macb, %struct.macb* %12, i32 0, i32 10, !dbg !23670
  store %struct.spinlock* %lock, %struct.spinlock** %lock.addr.i, align 8
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #8, !dbg !23671, !srcloc !12945
  %13 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !23672
  %14 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %13, i32 0, i32 0, !dbg !23672
  %rlock.i = bitcast %union.anon.1* %14 to %struct.raw_spinlock*, !dbg !23672
  %15 = load i32, i32* %status, align 4, !dbg !23673
  %and = and i32 %15, 268435456, !dbg !23675
  %tobool7 = icmp ne i32 %and, 0, !dbg !23675
  br i1 %tobool7, label %if.then8, label %if.end20, !dbg !23676

if.then8:                                         ; preds = %if.end
  %16 = load %struct.macb_queue*, %struct.macb_queue** %queue, align 8, !dbg !23677
  %bp9 = getelementptr inbounds %struct.macb_queue, %struct.macb_queue* %16, i32 0, i32 0, !dbg !23677
  %17 = load %struct.macb*, %struct.macb** %bp9, align 8, !dbg !23677
  %macb_reg_writel = getelementptr inbounds %struct.macb, %struct.macb* %17, i32 0, i32 3, !dbg !23677
  %18 = load void (%struct.macb*, i32, i32)*, void (%struct.macb*, i32, i32)** %macb_reg_writel, align 8, !dbg !23677
  %19 = load %struct.macb_queue*, %struct.macb_queue** %queue, align 8, !dbg !23677
  %bp10 = getelementptr inbounds %struct.macb_queue, %struct.macb_queue* %19, i32 0, i32 0, !dbg !23677
  %20 = load %struct.macb*, %struct.macb** %bp10, align 8, !dbg !23677
  %21 = load %struct.macb_queue*, %struct.macb_queue** %queue, align 8, !dbg !23677
  %IDR = getelementptr inbounds %struct.macb_queue, %struct.macb_queue* %21, i32 0, i32 4, !dbg !23677
  %22 = load i32, i32* %IDR, align 4, !dbg !23677
  call void %18(%struct.macb* %20, i32 %22, i32 268435456) #12, !dbg !23677
  %23 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !23679
  %macb_reg_writel11 = getelementptr inbounds %struct.macb, %struct.macb* %23, i32 0, i32 3, !dbg !23679
  %24 = load void (%struct.macb*, i32, i32)*, void (%struct.macb*, i32, i32)** %macb_reg_writel11, align 8, !dbg !23679
  %25 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !23679
  call void %24(%struct.macb* %25, i32 184, i32 0) #12, !dbg !23679
  store i32 0, i32* %tmp, align 4, !dbg !23680
  %26 = load i32, i32* %tmp, align 4, !dbg !23683
  %27 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !23684
  %caps = getelementptr inbounds %struct.macb, %struct.macb* %27, i32 0, i32 23, !dbg !23686
  %28 = load i32, i32* %caps, align 8, !dbg !23686
  %and12 = and i32 %28, 1, !dbg !23687
  %tobool13 = icmp ne i32 %and12, 0, !dbg !23687
  br i1 %tobool13, label %if.then14, label %if.end19, !dbg !23688

if.then14:                                        ; preds = %if.then8
  %29 = load %struct.macb_queue*, %struct.macb_queue** %queue, align 8, !dbg !23689
  %bp15 = getelementptr inbounds %struct.macb_queue, %struct.macb_queue* %29, i32 0, i32 0, !dbg !23689
  %30 = load %struct.macb*, %struct.macb** %bp15, align 8, !dbg !23689
  %macb_reg_writel16 = getelementptr inbounds %struct.macb, %struct.macb* %30, i32 0, i32 3, !dbg !23689
  %31 = load void (%struct.macb*, i32, i32)*, void (%struct.macb*, i32, i32)** %macb_reg_writel16, align 8, !dbg !23689
  %32 = load %struct.macb_queue*, %struct.macb_queue** %queue, align 8, !dbg !23689
  %bp17 = getelementptr inbounds %struct.macb_queue, %struct.macb_queue* %32, i32 0, i32 0, !dbg !23689
  %33 = load %struct.macb*, %struct.macb** %bp17, align 8, !dbg !23689
  %34 = load %struct.macb_queue*, %struct.macb_queue** %queue, align 8, !dbg !23689
  %ISR18 = getelementptr inbounds %struct.macb_queue, %struct.macb_queue* %34, i32 0, i32 2, !dbg !23689
  %35 = load i32, i32* %ISR18, align 4, !dbg !23689
  call void %31(%struct.macb* %33, i32 %35, i32 268435456) #12, !dbg !23689
  br label %if.end19, !dbg !23689

if.end19:                                         ; preds = %if.then14, %if.then8
  %36 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !23690
  %pdev = getelementptr inbounds %struct.macb, %struct.macb* %36, i32 0, i32 11, !dbg !23691
  %37 = load %struct.platform_device*, %struct.platform_device** %pdev, align 8, !dbg !23691
  %dev = getelementptr inbounds %struct.platform_device, %struct.platform_device* %37, i32 0, i32 3, !dbg !23692
  call void @pm_wakeup_event(%struct.device* %dev, i32 0) #12, !dbg !23693
  br label %if.end20, !dbg !23694

if.end20:                                         ; preds = %if.end19, %if.end
  %38 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !23695
  %lock21 = getelementptr inbounds %struct.macb, %struct.macb* %38, i32 0, i32 10, !dbg !23696
  store %struct.spinlock* %lock21, %struct.spinlock** %lock.addr.i22, align 8
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #8, !dbg !23697, !srcloc !13092
  %39 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i22, align 8, !dbg !23698
  %40 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %39, i32 0, i32 0, !dbg !23698
  %rlock.i23 = bitcast %union.anon.1* %40 to %struct.raw_spinlock*, !dbg !23698
  store i32 1, i32* %retval, align 4, !dbg !23699
  br label %return, !dbg !23699

return:                                           ; preds = %if.end20, %if.then
  %41 = load i32, i32* %retval, align 4, !dbg !23700
  ret i32 %41, !dbg !23700
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @macb_wol_interrupt(i32 %irq, i8* %dev_id) #2 !dbg !23701 {
entry:
  %lock.addr.i22 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i22, metadata !12906, metadata !DIExpression()), !dbg !23702
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !12912, metadata !DIExpression()), !dbg !23704
  %retval = alloca i32, align 4
  %irq.addr = alloca i32, align 4
  %dev_id.addr = alloca i8*, align 8
  %queue = alloca %struct.macb_queue*, align 8
  %bp = alloca %struct.macb*, align 8
  %status = alloca i32, align 4
  %tmp = alloca i32, align 4
  store i32 %irq, i32* %irq.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %irq.addr, metadata !23706, metadata !DIExpression()), !dbg !23707
  store i8* %dev_id, i8** %dev_id.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %dev_id.addr, metadata !23708, metadata !DIExpression()), !dbg !23709
  call void @llvm.dbg.declare(metadata %struct.macb_queue** %queue, metadata !23710, metadata !DIExpression()), !dbg !23711
  %0 = load i8*, i8** %dev_id.addr, align 8, !dbg !23712
  %1 = bitcast i8* %0 to %struct.macb_queue*, !dbg !23712
  store %struct.macb_queue* %1, %struct.macb_queue** %queue, align 8, !dbg !23711
  call void @llvm.dbg.declare(metadata %struct.macb** %bp, metadata !23713, metadata !DIExpression()), !dbg !23714
  %2 = load %struct.macb_queue*, %struct.macb_queue** %queue, align 8, !dbg !23715
  %bp1 = getelementptr inbounds %struct.macb_queue, %struct.macb_queue* %2, i32 0, i32 0, !dbg !23716
  %3 = load %struct.macb*, %struct.macb** %bp1, align 8, !dbg !23716
  store %struct.macb* %3, %struct.macb** %bp, align 8, !dbg !23714
  call void @llvm.dbg.declare(metadata i32* %status, metadata !23717, metadata !DIExpression()), !dbg !23718
  %4 = load %struct.macb_queue*, %struct.macb_queue** %queue, align 8, !dbg !23719
  %bp2 = getelementptr inbounds %struct.macb_queue, %struct.macb_queue* %4, i32 0, i32 0, !dbg !23719
  %5 = load %struct.macb*, %struct.macb** %bp2, align 8, !dbg !23719
  %macb_reg_readl = getelementptr inbounds %struct.macb, %struct.macb* %5, i32 0, i32 2, !dbg !23719
  %6 = load i32 (%struct.macb*, i32)*, i32 (%struct.macb*, i32)** %macb_reg_readl, align 8, !dbg !23719
  %7 = load %struct.macb_queue*, %struct.macb_queue** %queue, align 8, !dbg !23719
  %bp3 = getelementptr inbounds %struct.macb_queue, %struct.macb_queue* %7, i32 0, i32 0, !dbg !23719
  %8 = load %struct.macb*, %struct.macb** %bp3, align 8, !dbg !23719
  %9 = load %struct.macb_queue*, %struct.macb_queue** %queue, align 8, !dbg !23719
  %ISR = getelementptr inbounds %struct.macb_queue, %struct.macb_queue* %9, i32 0, i32 2, !dbg !23719
  %10 = load i32, i32* %ISR, align 4, !dbg !23719
  %call = call i32 %6(%struct.macb* %8, i32 %10) #12, !dbg !23719
  store i32 %call, i32* %status, align 4, !dbg !23720
  %11 = load i32, i32* %status, align 4, !dbg !23721
  %tobool = icmp ne i32 %11, 0, !dbg !23721
  %lnot = xor i1 %tobool, true, !dbg !23721
  %lnot4 = xor i1 %lnot, true, !dbg !23721
  %lnot5 = xor i1 %lnot4, true, !dbg !23721
  %lnot.ext = zext i1 %lnot5 to i32, !dbg !23721
  %conv = sext i32 %lnot.ext to i64, !dbg !23721
  %tobool6 = icmp ne i64 %conv, 0, !dbg !23721
  br i1 %tobool6, label %if.then, label %if.end, !dbg !23723

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !23724
  br label %return, !dbg !23724

if.end:                                           ; preds = %entry
  %12 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !23725
  %lock = getelementptr inbounds %struct.macb, %struct.macb* %12, i32 0, i32 10, !dbg !23726
  store %struct.spinlock* %lock, %struct.spinlock** %lock.addr.i, align 8
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #8, !dbg !23727, !srcloc !12945
  %13 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !23728
  %14 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %13, i32 0, i32 0, !dbg !23728
  %rlock.i = bitcast %union.anon.1* %14 to %struct.raw_spinlock*, !dbg !23728
  %15 = load i32, i32* %status, align 4, !dbg !23729
  %and = and i32 %15, 16384, !dbg !23731
  %tobool7 = icmp ne i32 %and, 0, !dbg !23731
  br i1 %tobool7, label %if.then8, label %if.end20, !dbg !23732

if.then8:                                         ; preds = %if.end
  %16 = load %struct.macb_queue*, %struct.macb_queue** %queue, align 8, !dbg !23733
  %bp9 = getelementptr inbounds %struct.macb_queue, %struct.macb_queue* %16, i32 0, i32 0, !dbg !23733
  %17 = load %struct.macb*, %struct.macb** %bp9, align 8, !dbg !23733
  %macb_reg_writel = getelementptr inbounds %struct.macb, %struct.macb* %17, i32 0, i32 3, !dbg !23733
  %18 = load void (%struct.macb*, i32, i32)*, void (%struct.macb*, i32, i32)** %macb_reg_writel, align 8, !dbg !23733
  %19 = load %struct.macb_queue*, %struct.macb_queue** %queue, align 8, !dbg !23733
  %bp10 = getelementptr inbounds %struct.macb_queue, %struct.macb_queue* %19, i32 0, i32 0, !dbg !23733
  %20 = load %struct.macb*, %struct.macb** %bp10, align 8, !dbg !23733
  %21 = load %struct.macb_queue*, %struct.macb_queue** %queue, align 8, !dbg !23733
  %IDR = getelementptr inbounds %struct.macb_queue, %struct.macb_queue* %21, i32 0, i32 4, !dbg !23733
  %22 = load i32, i32* %IDR, align 4, !dbg !23733
  call void %18(%struct.macb* %20, i32 %22, i32 16384) #12, !dbg !23733
  %23 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !23735
  %macb_reg_writel11 = getelementptr inbounds %struct.macb, %struct.macb* %23, i32 0, i32 3, !dbg !23735
  %24 = load void (%struct.macb*, i32, i32)*, void (%struct.macb*, i32, i32)** %macb_reg_writel11, align 8, !dbg !23735
  %25 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !23735
  call void %24(%struct.macb* %25, i32 196, i32 0) #12, !dbg !23735
  store i32 0, i32* %tmp, align 4, !dbg !23736
  %26 = load i32, i32* %tmp, align 4, !dbg !23739
  %27 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !23740
  %caps = getelementptr inbounds %struct.macb, %struct.macb* %27, i32 0, i32 23, !dbg !23742
  %28 = load i32, i32* %caps, align 8, !dbg !23742
  %and12 = and i32 %28, 1, !dbg !23743
  %tobool13 = icmp ne i32 %and12, 0, !dbg !23743
  br i1 %tobool13, label %if.then14, label %if.end19, !dbg !23744

if.then14:                                        ; preds = %if.then8
  %29 = load %struct.macb_queue*, %struct.macb_queue** %queue, align 8, !dbg !23745
  %bp15 = getelementptr inbounds %struct.macb_queue, %struct.macb_queue* %29, i32 0, i32 0, !dbg !23745
  %30 = load %struct.macb*, %struct.macb** %bp15, align 8, !dbg !23745
  %macb_reg_writel16 = getelementptr inbounds %struct.macb, %struct.macb* %30, i32 0, i32 3, !dbg !23745
  %31 = load void (%struct.macb*, i32, i32)*, void (%struct.macb*, i32, i32)** %macb_reg_writel16, align 8, !dbg !23745
  %32 = load %struct.macb_queue*, %struct.macb_queue** %queue, align 8, !dbg !23745
  %bp17 = getelementptr inbounds %struct.macb_queue, %struct.macb_queue* %32, i32 0, i32 0, !dbg !23745
  %33 = load %struct.macb*, %struct.macb** %bp17, align 8, !dbg !23745
  %34 = load %struct.macb_queue*, %struct.macb_queue** %queue, align 8, !dbg !23745
  %ISR18 = getelementptr inbounds %struct.macb_queue, %struct.macb_queue* %34, i32 0, i32 2, !dbg !23745
  %35 = load i32, i32* %ISR18, align 4, !dbg !23745
  call void %31(%struct.macb* %33, i32 %35, i32 16384) #12, !dbg !23745
  br label %if.end19, !dbg !23745

if.end19:                                         ; preds = %if.then14, %if.then8
  %36 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !23746
  %pdev = getelementptr inbounds %struct.macb, %struct.macb* %36, i32 0, i32 11, !dbg !23747
  %37 = load %struct.platform_device*, %struct.platform_device** %pdev, align 8, !dbg !23747
  %dev = getelementptr inbounds %struct.platform_device, %struct.platform_device* %37, i32 0, i32 3, !dbg !23748
  call void @pm_wakeup_event(%struct.device* %dev, i32 0) #12, !dbg !23749
  br label %if.end20, !dbg !23750

if.end20:                                         ; preds = %if.end19, %if.end
  %38 = load %struct.macb*, %struct.macb** %bp, align 8, !dbg !23751
  %lock21 = getelementptr inbounds %struct.macb, %struct.macb* %38, i32 0, i32 10, !dbg !23752
  store %struct.spinlock* %lock21, %struct.spinlock** %lock.addr.i22, align 8
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #8, !dbg !23753, !srcloc !13092
  %39 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i22, align 8, !dbg !23754
  %40 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %39, i32 0, i32 0, !dbg !23754
  %rlock.i23 = bitcast %union.anon.1* %40 to %struct.raw_spinlock*, !dbg !23754
  store i32 1, i32* %retval, align 4, !dbg !23755
  br label %return, !dbg !23755

return:                                           ; preds = %if.end20, %if.then
  %41 = load i32, i32* %retval, align 4, !dbg !23756
  ret i32 %41, !dbg !23756
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @enable_irq_wake(i32 %irq) #2 !dbg !23757 {
entry:
  %irq.addr = alloca i32, align 4
  store i32 %irq, i32* %irq.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %irq.addr, metadata !23758, metadata !DIExpression()), !dbg !23759
  %0 = load i32, i32* %irq.addr, align 4, !dbg !23760
  %call = call i32 @irq_set_irq_wake(i32 %0, i32 1) #12, !dbg !23761
  ret i32 %call, !dbg !23762
}

; Function Attrs: noredzone
declare dso_local void @netif_device_detach(%struct.net_device*) #1

; Function Attrs: noredzone
declare dso_local void @rtnl_lock() #1

; Function Attrs: noredzone
declare dso_local void @rtnl_unlock() #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @device_may_wakeup(%struct.device* %dev) #2 !dbg !23763 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !23764, metadata !DIExpression()), !dbg !23765
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !23766
  %power = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 11, !dbg !23767
  %can_wakeup = getelementptr inbounds %struct.dev_pm_info, %struct.dev_pm_info* %power, i32 0, i32 1, !dbg !23768
  %bf.load = load i16, i16* %can_wakeup, align 4, !dbg !23768
  %bf.clear = and i16 %bf.load, 1, !dbg !23768
  %bf.cast = zext i16 %bf.clear to i32, !dbg !23768
  %tobool = icmp ne i32 %bf.cast, 0, !dbg !23766
  br i1 %tobool, label %land.rhs, label %land.end, !dbg !23769

land.rhs:                                         ; preds = %entry
  %1 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !23770
  %power1 = getelementptr inbounds %struct.device, %struct.device* %1, i32 0, i32 11, !dbg !23771
  %wakeup = getelementptr inbounds %struct.dev_pm_info, %struct.dev_pm_info* %power1, i32 0, i32 6, !dbg !23772
  %2 = load %struct.wakeup_source*, %struct.wakeup_source** %wakeup, align 8, !dbg !23772
  %tobool2 = icmp ne %struct.wakeup_source* %2, null, !dbg !23773
  %lnot = xor i1 %tobool2, true, !dbg !23773
  %lnot3 = xor i1 %lnot, true, !dbg !23774
  br label %land.end

land.end:                                         ; preds = %land.rhs, %entry
  %3 = phi i1 [ false, %entry ], [ %lnot3, %land.rhs ], !dbg !23775
  ret i1 %3, !dbg !23776
}

; Function Attrs: noredzone
declare dso_local i32 @pm_runtime_force_suspend(%struct.device*) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @pm_wakeup_event(%struct.device* %dev, i32 %msec) #2 !dbg !23777 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %msec.addr = alloca i32, align 4
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !23780, metadata !DIExpression()), !dbg !23781
  store i32 %msec, i32* %msec.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %msec.addr, metadata !23782, metadata !DIExpression()), !dbg !23783
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !23784
  %1 = load i32, i32* %msec.addr, align 4, !dbg !23785
  call void @pm_wakeup_dev_event(%struct.device* %0, i32 %1, i1 zeroext false) #12, !dbg !23786
  ret void, !dbg !23787
}

; Function Attrs: noredzone
declare dso_local void @pm_wakeup_dev_event(%struct.device*, i32, i1 zeroext) #1

; Function Attrs: noredzone
declare dso_local i32 @irq_set_irq_wake(i32, i32) #1

; Function Attrs: noredzone
declare dso_local i32 @pm_runtime_force_resume(%struct.device*) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @disable_irq_wake(i32 %irq) #2 !dbg !23788 {
entry:
  %irq.addr = alloca i32, align 4
  store i32 %irq, i32* %irq.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %irq.addr, metadata !23789, metadata !DIExpression()), !dbg !23790
  %0 = load i32, i32* %irq.addr, align 4, !dbg !23791
  %call = call i32 @irq_set_irq_wake(i32 %0, i32 0) #12, !dbg !23792
  ret i32 %call, !dbg !23793
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @macb_restore_features(%struct.macb* %bp) #2 !dbg !23794 {
entry:
  %bp.addr = alloca %struct.macb*, align 8
  %netdev = alloca %struct.net_device*, align 8
  %features = alloca i64, align 8
  store %struct.macb* %bp, %struct.macb** %bp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.macb** %bp.addr, metadata !23795, metadata !DIExpression()), !dbg !23796
  call void @llvm.dbg.declare(metadata %struct.net_device** %netdev, metadata !23797, metadata !DIExpression()), !dbg !23798
  %0 = load %struct.macb*, %struct.macb** %bp.addr, align 8, !dbg !23799
  %dev = getelementptr inbounds %struct.macb, %struct.macb* %0, i32 0, i32 17, !dbg !23800
  %1 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !23800
  store %struct.net_device* %1, %struct.net_device** %netdev, align 8, !dbg !23798
  call void @llvm.dbg.declare(metadata i64* %features, metadata !23801, metadata !DIExpression()), !dbg !23802
  %2 = load %struct.net_device*, %struct.net_device** %netdev, align 8, !dbg !23803
  %features1 = getelementptr inbounds %struct.net_device, %struct.net_device* %2, i32 0, i32 15, !dbg !23804
  %3 = load i64, i64* %features1, align 8, !dbg !23804
  store i64 %3, i64* %features, align 8, !dbg !23802
  %4 = load %struct.macb*, %struct.macb** %bp.addr, align 8, !dbg !23805
  %5 = load i64, i64* %features, align 8, !dbg !23806
  call void @macb_set_txcsum_feature(%struct.macb* %4, i64 %5) #12, !dbg !23807
  %6 = load %struct.macb*, %struct.macb** %bp.addr, align 8, !dbg !23808
  %7 = load i64, i64* %features, align 8, !dbg !23809
  call void @macb_set_rxcsum_feature(%struct.macb* %6, i64 %7) #12, !dbg !23810
  %8 = load %struct.macb*, %struct.macb** %bp.addr, align 8, !dbg !23811
  %9 = load i64, i64* %features, align 8, !dbg !23812
  call void @macb_set_rxflow_feature(%struct.macb* %8, i64 %9) #12, !dbg !23813
  ret void, !dbg !23814
}

; Function Attrs: noredzone
declare dso_local void @netif_device_attach(%struct.net_device*) #1

attributes #0 = { cold noinline noredzone nounwind optnone sspstrong "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="true" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,-3dnow,-3dnowa,-aes,-avx,-avx2,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-f16c,-fma,-fma4,-gfni,-mmx,-pclmul,-sha,-sse,-sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-ssse3,-vaes,-vpclmulqdq,-x87,-xop,-xsave,-xsaveopt" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { noredzone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,-3dnow,-3dnowa,-aes,-avx,-avx2,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-f16c,-fma,-fma4,-gfni,-mmx,-pclmul,-sha,-sse,-sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-ssse3,-vaes,-vpclmulqdq,-x87,-xop,-xsave,-xsaveopt" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { noinline noredzone nounwind optnone sspstrong "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="true" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,-3dnow,-3dnowa,-aes,-avx,-avx2,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-f16c,-fma,-fma4,-gfni,-mmx,-pclmul,-sha,-sse,-sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-ssse3,-vaes,-vpclmulqdq,-x87,-xop,-xsave,-xsaveopt" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind readnone speculatable willreturn }
attributes #4 = { argmemonly nounwind willreturn }
attributes #5 = { cold noredzone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,-3dnow,-3dnowa,-aes,-avx,-avx2,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-f16c,-fma,-fma4,-gfni,-mmx,-pclmul,-sha,-sse,-sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-ssse3,-vaes,-vpclmulqdq,-x87,-xop,-xsave,-xsaveopt" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind readnone willreturn }
attributes #7 = { nounwind readonly }
attributes #8 = { nounwind }
attributes #9 = { nounwind willreturn }
attributes #10 = { noinline noredzone nounwind optnone readnone sspstrong "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="true" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,-3dnow,-3dnowa,-aes,-avx,-avx2,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-f16c,-fma,-fma4,-gfni,-mmx,-pclmul,-sha,-sse,-sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-ssse3,-vaes,-vpclmulqdq,-x87,-xop,-xsave,-xsaveopt" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { noredzone nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,-3dnow,-3dnowa,-aes,-avx,-avx2,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-f16c,-fma,-fma4,-gfni,-mmx,-pclmul,-sha,-sse,-sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-ssse3,-vaes,-vpclmulqdq,-x87,-xop,-xsave,-xsaveopt" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { noredzone }
attributes #13 = { cold noredzone }
attributes #14 = { noredzone nounwind }
attributes #15 = { nounwind readnone }
attributes #16 = { noredzone nounwind readnone }
attributes #17 = { noredzone nounwind readonly }

!llvm.dbg.cu = !{!2}
!llvm.named.register.rsp = !{!11052}
!llvm.module.flags = !{!11053, !11054, !11055, !11056}
!llvm.ident = !{!11057}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_macb_driver_init564", scope: !2, file: !3, line: 4869, type: !570, isLocal: true, isDefinition: true)
!2 = distinct !DICompileUnit(language: DW_LANG_C89, file: !3, producer: "clang version 10.0.1 (https://github.com/llvm/llvm-project.git ef32c611aa214dea855364efd7ba451ec5ec3f74)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !10232, globals: !10780, splitDebugInlining: false, nameTableKind: None)
!3 = !DIFile(filename: "drivers/net/ethernet/cadence/macb_main.c", directory: "/home/lizy2001/genbc/linux")
!4 = !{!5, !11, !18, !24, !29, !35, !42, !62, !69, !103, !144, !175, !182, !213, !226, !234, !240, !247, !251, !255, !262, !268, !9334, !9507, !9528, !4254, !4849, !9695, !9707, !7513, !5077, !5269, !5362, !4418, !5556, !7159, !6459, !6350, !6369, !3926, !4334, !4410, !4590, !4721, !4773, !9826, !9831, !9873, !9879, !9910, !9974, !9979, !9987, !9996, !10003, !10010, !10014, !10019, !10023, !10030, !10039, !10060, !10091, !10111, !10118, !10137}
!5 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "writeback_sync_modes", file: !6, line: 41, baseType: !7, size: 32, elements: !8)
!6 = !DIFile(filename: "./include/linux/writeback.h", directory: "/home/lizy2001/genbc/linux")
!7 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!8 = !{!9, !10}
!9 = !DIEnumerator(name: "WB_SYNC_NONE", value: 0, isUnsigned: true)
!10 = !DIEnumerator(name: "WB_SYNC_ALL", value: 1, isUnsigned: true)
!11 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "migrate_mode", file: !12, line: 15, baseType: !7, size: 32, elements: !13)
!12 = !DIFile(filename: "./include/linux/migrate_mode.h", directory: "/home/lizy2001/genbc/linux")
!13 = !{!14, !15, !16, !17}
!14 = !DIEnumerator(name: "MIGRATE_ASYNC", value: 0, isUnsigned: true)
!15 = !DIEnumerator(name: "MIGRATE_SYNC_LIGHT", value: 1, isUnsigned: true)
!16 = !DIEnumerator(name: "MIGRATE_SYNC", value: 2, isUnsigned: true)
!17 = !DIEnumerator(name: "MIGRATE_SYNC_NO_COPY", value: 3, isUnsigned: true)
!18 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "page_entry_size", file: !19, line: 546, baseType: !7, size: 32, elements: !20)
!19 = !DIFile(filename: "./include/linux/mm.h", directory: "/home/lizy2001/genbc/linux")
!20 = !{!21, !22, !23}
!21 = !DIEnumerator(name: "PE_SIZE_PTE", value: 0, isUnsigned: true)
!22 = !DIEnumerator(name: "PE_SIZE_PMD", value: 1, isUnsigned: true)
!23 = !DIEnumerator(name: "PE_SIZE_PUD", value: 2, isUnsigned: true)
!24 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "hrtimer_restart", file: !25, line: 65, baseType: !7, size: 32, elements: !26)
!25 = !DIFile(filename: "./include/linux/hrtimer.h", directory: "/home/lizy2001/genbc/linux")
!26 = !{!27, !28}
!27 = !DIEnumerator(name: "HRTIMER_NORESTART", value: 0, isUnsigned: true)
!28 = !DIEnumerator(name: "HRTIMER_RESTART", value: 1, isUnsigned: true)
!29 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "timespec_type", file: !30, line: 16, baseType: !7, size: 32, elements: !31)
!30 = !DIFile(filename: "./include/linux/restart_block.h", directory: "/home/lizy2001/genbc/linux")
!31 = !{!32, !33, !34}
!32 = !DIEnumerator(name: "TT_NONE", value: 0, isUnsigned: true)
!33 = !DIEnumerator(name: "TT_NATIVE", value: 1, isUnsigned: true)
!34 = !DIEnumerator(name: "TT_COMPAT", value: 2, isUnsigned: true)
!35 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "netdev_tx", file: !36, line: 115, baseType: !37, size: 32, elements: !38)
!36 = !DIFile(filename: "./include/linux/netdevice.h", directory: "/home/lizy2001/genbc/linux")
!37 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!38 = !{!39, !40, !41}
!39 = !DIEnumerator(name: "__NETDEV_TX_MIN", value: -2147483648)
!40 = !DIEnumerator(name: "NETDEV_TX_OK", value: 0)
!41 = !DIEnumerator(name: "NETDEV_TX_BUSY", value: 16)
!42 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "tc_setup_type", file: !36, line: 836, baseType: !7, size: 32, elements: !43)
!43 = !{!44, !45, !46, !47, !48, !49, !50, !51, !52, !53, !54, !55, !56, !57, !58, !59, !60, !61}
!44 = !DIEnumerator(name: "TC_SETUP_QDISC_MQPRIO", value: 0, isUnsigned: true)
!45 = !DIEnumerator(name: "TC_SETUP_CLSU32", value: 1, isUnsigned: true)
!46 = !DIEnumerator(name: "TC_SETUP_CLSFLOWER", value: 2, isUnsigned: true)
!47 = !DIEnumerator(name: "TC_SETUP_CLSMATCHALL", value: 3, isUnsigned: true)
!48 = !DIEnumerator(name: "TC_SETUP_CLSBPF", value: 4, isUnsigned: true)
!49 = !DIEnumerator(name: "TC_SETUP_BLOCK", value: 5, isUnsigned: true)
!50 = !DIEnumerator(name: "TC_SETUP_QDISC_CBS", value: 6, isUnsigned: true)
!51 = !DIEnumerator(name: "TC_SETUP_QDISC_RED", value: 7, isUnsigned: true)
!52 = !DIEnumerator(name: "TC_SETUP_QDISC_PRIO", value: 8, isUnsigned: true)
!53 = !DIEnumerator(name: "TC_SETUP_QDISC_MQ", value: 9, isUnsigned: true)
!54 = !DIEnumerator(name: "TC_SETUP_QDISC_ETF", value: 10, isUnsigned: true)
!55 = !DIEnumerator(name: "TC_SETUP_ROOT_QDISC", value: 11, isUnsigned: true)
!56 = !DIEnumerator(name: "TC_SETUP_QDISC_GRED", value: 12, isUnsigned: true)
!57 = !DIEnumerator(name: "TC_SETUP_QDISC_TAPRIO", value: 13, isUnsigned: true)
!58 = !DIEnumerator(name: "TC_SETUP_FT", value: 14, isUnsigned: true)
!59 = !DIEnumerator(name: "TC_SETUP_QDISC_ETS", value: 15, isUnsigned: true)
!60 = !DIEnumerator(name: "TC_SETUP_QDISC_TBF", value: 16, isUnsigned: true)
!61 = !DIEnumerator(name: "TC_SETUP_QDISC_FIFO", value: 17, isUnsigned: true)
!62 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "bpf_netdev_command", file: !36, line: 860, baseType: !7, size: 32, elements: !63)
!63 = !{!64, !65, !66, !67, !68}
!64 = !DIEnumerator(name: "XDP_SETUP_PROG", value: 0, isUnsigned: true)
!65 = !DIEnumerator(name: "XDP_SETUP_PROG_HW", value: 1, isUnsigned: true)
!66 = !DIEnumerator(name: "BPF_OFFLOAD_MAP_ALLOC", value: 2, isUnsigned: true)
!67 = !DIEnumerator(name: "BPF_OFFLOAD_MAP_FREE", value: 3, isUnsigned: true)
!68 = !DIEnumerator(name: "XDP_SETUP_XSK_POOL", value: 4, isUnsigned: true)
!69 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "bpf_prog_type", file: !70, line: 170, baseType: !7, size: 32, elements: !71)
!70 = !DIFile(filename: "./include/uapi/linux/bpf.h", directory: "/home/lizy2001/genbc/linux")
!71 = !{!72, !73, !74, !75, !76, !77, !78, !79, !80, !81, !82, !83, !84, !85, !86, !87, !88, !89, !90, !91, !92, !93, !94, !95, !96, !97, !98, !99, !100, !101, !102}
!72 = !DIEnumerator(name: "BPF_PROG_TYPE_UNSPEC", value: 0, isUnsigned: true)
!73 = !DIEnumerator(name: "BPF_PROG_TYPE_SOCKET_FILTER", value: 1, isUnsigned: true)
!74 = !DIEnumerator(name: "BPF_PROG_TYPE_KPROBE", value: 2, isUnsigned: true)
!75 = !DIEnumerator(name: "BPF_PROG_TYPE_SCHED_CLS", value: 3, isUnsigned: true)
!76 = !DIEnumerator(name: "BPF_PROG_TYPE_SCHED_ACT", value: 4, isUnsigned: true)
!77 = !DIEnumerator(name: "BPF_PROG_TYPE_TRACEPOINT", value: 5, isUnsigned: true)
!78 = !DIEnumerator(name: "BPF_PROG_TYPE_XDP", value: 6, isUnsigned: true)
!79 = !DIEnumerator(name: "BPF_PROG_TYPE_PERF_EVENT", value: 7, isUnsigned: true)
!80 = !DIEnumerator(name: "BPF_PROG_TYPE_CGROUP_SKB", value: 8, isUnsigned: true)
!81 = !DIEnumerator(name: "BPF_PROG_TYPE_CGROUP_SOCK", value: 9, isUnsigned: true)
!82 = !DIEnumerator(name: "BPF_PROG_TYPE_LWT_IN", value: 10, isUnsigned: true)
!83 = !DIEnumerator(name: "BPF_PROG_TYPE_LWT_OUT", value: 11, isUnsigned: true)
!84 = !DIEnumerator(name: "BPF_PROG_TYPE_LWT_XMIT", value: 12, isUnsigned: true)
!85 = !DIEnumerator(name: "BPF_PROG_TYPE_SOCK_OPS", value: 13, isUnsigned: true)
!86 = !DIEnumerator(name: "BPF_PROG_TYPE_SK_SKB", value: 14, isUnsigned: true)
!87 = !DIEnumerator(name: "BPF_PROG_TYPE_CGROUP_DEVICE", value: 15, isUnsigned: true)
!88 = !DIEnumerator(name: "BPF_PROG_TYPE_SK_MSG", value: 16, isUnsigned: true)
!89 = !DIEnumerator(name: "BPF_PROG_TYPE_RAW_TRACEPOINT", value: 17, isUnsigned: true)
!90 = !DIEnumerator(name: "BPF_PROG_TYPE_CGROUP_SOCK_ADDR", value: 18, isUnsigned: true)
!91 = !DIEnumerator(name: "BPF_PROG_TYPE_LWT_SEG6LOCAL", value: 19, isUnsigned: true)
!92 = !DIEnumerator(name: "BPF_PROG_TYPE_LIRC_MODE2", value: 20, isUnsigned: true)
!93 = !DIEnumerator(name: "BPF_PROG_TYPE_SK_REUSEPORT", value: 21, isUnsigned: true)
!94 = !DIEnumerator(name: "BPF_PROG_TYPE_FLOW_DISSECTOR", value: 22, isUnsigned: true)
!95 = !DIEnumerator(name: "BPF_PROG_TYPE_CGROUP_SYSCTL", value: 23, isUnsigned: true)
!96 = !DIEnumerator(name: "BPF_PROG_TYPE_RAW_TRACEPOINT_WRITABLE", value: 24, isUnsigned: true)
!97 = !DIEnumerator(name: "BPF_PROG_TYPE_CGROUP_SOCKOPT", value: 25, isUnsigned: true)
!98 = !DIEnumerator(name: "BPF_PROG_TYPE_TRACING", value: 26, isUnsigned: true)
!99 = !DIEnumerator(name: "BPF_PROG_TYPE_STRUCT_OPS", value: 27, isUnsigned: true)
!100 = !DIEnumerator(name: "BPF_PROG_TYPE_EXT", value: 28, isUnsigned: true)
!101 = !DIEnumerator(name: "BPF_PROG_TYPE_LSM", value: 29, isUnsigned: true)
!102 = !DIEnumerator(name: "BPF_PROG_TYPE_SK_LOOKUP", value: 30, isUnsigned: true)
!103 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "bpf_attach_type", file: !70, line: 204, baseType: !7, size: 32, elements: !104)
!104 = !{!105, !106, !107, !108, !109, !110, !111, !112, !113, !114, !115, !116, !117, !118, !119, !120, !121, !122, !123, !124, !125, !126, !127, !128, !129, !130, !131, !132, !133, !134, !135, !136, !137, !138, !139, !140, !141, !142, !143}
!105 = !DIEnumerator(name: "BPF_CGROUP_INET_INGRESS", value: 0, isUnsigned: true)
!106 = !DIEnumerator(name: "BPF_CGROUP_INET_EGRESS", value: 1, isUnsigned: true)
!107 = !DIEnumerator(name: "BPF_CGROUP_INET_SOCK_CREATE", value: 2, isUnsigned: true)
!108 = !DIEnumerator(name: "BPF_CGROUP_SOCK_OPS", value: 3, isUnsigned: true)
!109 = !DIEnumerator(name: "BPF_SK_SKB_STREAM_PARSER", value: 4, isUnsigned: true)
!110 = !DIEnumerator(name: "BPF_SK_SKB_STREAM_VERDICT", value: 5, isUnsigned: true)
!111 = !DIEnumerator(name: "BPF_CGROUP_DEVICE", value: 6, isUnsigned: true)
!112 = !DIEnumerator(name: "BPF_SK_MSG_VERDICT", value: 7, isUnsigned: true)
!113 = !DIEnumerator(name: "BPF_CGROUP_INET4_BIND", value: 8, isUnsigned: true)
!114 = !DIEnumerator(name: "BPF_CGROUP_INET6_BIND", value: 9, isUnsigned: true)
!115 = !DIEnumerator(name: "BPF_CGROUP_INET4_CONNECT", value: 10, isUnsigned: true)
!116 = !DIEnumerator(name: "BPF_CGROUP_INET6_CONNECT", value: 11, isUnsigned: true)
!117 = !DIEnumerator(name: "BPF_CGROUP_INET4_POST_BIND", value: 12, isUnsigned: true)
!118 = !DIEnumerator(name: "BPF_CGROUP_INET6_POST_BIND", value: 13, isUnsigned: true)
!119 = !DIEnumerator(name: "BPF_CGROUP_UDP4_SENDMSG", value: 14, isUnsigned: true)
!120 = !DIEnumerator(name: "BPF_CGROUP_UDP6_SENDMSG", value: 15, isUnsigned: true)
!121 = !DIEnumerator(name: "BPF_LIRC_MODE2", value: 16, isUnsigned: true)
!122 = !DIEnumerator(name: "BPF_FLOW_DISSECTOR", value: 17, isUnsigned: true)
!123 = !DIEnumerator(name: "BPF_CGROUP_SYSCTL", value: 18, isUnsigned: true)
!124 = !DIEnumerator(name: "BPF_CGROUP_UDP4_RECVMSG", value: 19, isUnsigned: true)
!125 = !DIEnumerator(name: "BPF_CGROUP_UDP6_RECVMSG", value: 20, isUnsigned: true)
!126 = !DIEnumerator(name: "BPF_CGROUP_GETSOCKOPT", value: 21, isUnsigned: true)
!127 = !DIEnumerator(name: "BPF_CGROUP_SETSOCKOPT", value: 22, isUnsigned: true)
!128 = !DIEnumerator(name: "BPF_TRACE_RAW_TP", value: 23, isUnsigned: true)
!129 = !DIEnumerator(name: "BPF_TRACE_FENTRY", value: 24, isUnsigned: true)
!130 = !DIEnumerator(name: "BPF_TRACE_FEXIT", value: 25, isUnsigned: true)
!131 = !DIEnumerator(name: "BPF_MODIFY_RETURN", value: 26, isUnsigned: true)
!132 = !DIEnumerator(name: "BPF_LSM_MAC", value: 27, isUnsigned: true)
!133 = !DIEnumerator(name: "BPF_TRACE_ITER", value: 28, isUnsigned: true)
!134 = !DIEnumerator(name: "BPF_CGROUP_INET4_GETPEERNAME", value: 29, isUnsigned: true)
!135 = !DIEnumerator(name: "BPF_CGROUP_INET6_GETPEERNAME", value: 30, isUnsigned: true)
!136 = !DIEnumerator(name: "BPF_CGROUP_INET4_GETSOCKNAME", value: 31, isUnsigned: true)
!137 = !DIEnumerator(name: "BPF_CGROUP_INET6_GETSOCKNAME", value: 32, isUnsigned: true)
!138 = !DIEnumerator(name: "BPF_XDP_DEVMAP", value: 33, isUnsigned: true)
!139 = !DIEnumerator(name: "BPF_CGROUP_INET_SOCK_RELEASE", value: 34, isUnsigned: true)
!140 = !DIEnumerator(name: "BPF_XDP_CPUMAP", value: 35, isUnsigned: true)
!141 = !DIEnumerator(name: "BPF_SK_LOOKUP", value: 36, isUnsigned: true)
!142 = !DIEnumerator(name: "BPF_XDP", value: 37, isUnsigned: true)
!143 = !DIEnumerator(name: "__MAX_BPF_ATTACH_TYPE", value: 38, isUnsigned: true)
!144 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "bpf_reg_type", file: !145, line: 369, baseType: !7, size: 32, elements: !146)
!145 = !DIFile(filename: "./include/linux/bpf.h", directory: "/home/lizy2001/genbc/linux")
!146 = !{!147, !148, !149, !150, !151, !152, !153, !154, !155, !156, !157, !158, !159, !160, !161, !162, !163, !164, !165, !166, !167, !168, !169, !170, !171, !172, !173, !174}
!147 = !DIEnumerator(name: "NOT_INIT", value: 0, isUnsigned: true)
!148 = !DIEnumerator(name: "SCALAR_VALUE", value: 1, isUnsigned: true)
!149 = !DIEnumerator(name: "PTR_TO_CTX", value: 2, isUnsigned: true)
!150 = !DIEnumerator(name: "CONST_PTR_TO_MAP", value: 3, isUnsigned: true)
!151 = !DIEnumerator(name: "PTR_TO_MAP_VALUE", value: 4, isUnsigned: true)
!152 = !DIEnumerator(name: "PTR_TO_MAP_VALUE_OR_NULL", value: 5, isUnsigned: true)
!153 = !DIEnumerator(name: "PTR_TO_STACK", value: 6, isUnsigned: true)
!154 = !DIEnumerator(name: "PTR_TO_PACKET_META", value: 7, isUnsigned: true)
!155 = !DIEnumerator(name: "PTR_TO_PACKET", value: 8, isUnsigned: true)
!156 = !DIEnumerator(name: "PTR_TO_PACKET_END", value: 9, isUnsigned: true)
!157 = !DIEnumerator(name: "PTR_TO_FLOW_KEYS", value: 10, isUnsigned: true)
!158 = !DIEnumerator(name: "PTR_TO_SOCKET", value: 11, isUnsigned: true)
!159 = !DIEnumerator(name: "PTR_TO_SOCKET_OR_NULL", value: 12, isUnsigned: true)
!160 = !DIEnumerator(name: "PTR_TO_SOCK_COMMON", value: 13, isUnsigned: true)
!161 = !DIEnumerator(name: "PTR_TO_SOCK_COMMON_OR_NULL", value: 14, isUnsigned: true)
!162 = !DIEnumerator(name: "PTR_TO_TCP_SOCK", value: 15, isUnsigned: true)
!163 = !DIEnumerator(name: "PTR_TO_TCP_SOCK_OR_NULL", value: 16, isUnsigned: true)
!164 = !DIEnumerator(name: "PTR_TO_TP_BUFFER", value: 17, isUnsigned: true)
!165 = !DIEnumerator(name: "PTR_TO_XDP_SOCK", value: 18, isUnsigned: true)
!166 = !DIEnumerator(name: "PTR_TO_BTF_ID", value: 19, isUnsigned: true)
!167 = !DIEnumerator(name: "PTR_TO_BTF_ID_OR_NULL", value: 20, isUnsigned: true)
!168 = !DIEnumerator(name: "PTR_TO_MEM", value: 21, isUnsigned: true)
!169 = !DIEnumerator(name: "PTR_TO_MEM_OR_NULL", value: 22, isUnsigned: true)
!170 = !DIEnumerator(name: "PTR_TO_RDONLY_BUF", value: 23, isUnsigned: true)
!171 = !DIEnumerator(name: "PTR_TO_RDONLY_BUF_OR_NULL", value: 24, isUnsigned: true)
!172 = !DIEnumerator(name: "PTR_TO_RDWR_BUF", value: 25, isUnsigned: true)
!173 = !DIEnumerator(name: "PTR_TO_RDWR_BUF_OR_NULL", value: 26, isUnsigned: true)
!174 = !DIEnumerator(name: "PTR_TO_PERCPU_BTF_ID", value: 27, isUnsigned: true)
!175 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "bpf_tramp_prog_type", file: !145, line: 578, baseType: !7, size: 32, elements: !176)
!176 = !{!177, !178, !179, !180, !181}
!177 = !DIEnumerator(name: "BPF_TRAMP_FENTRY", value: 0, isUnsigned: true)
!178 = !DIEnumerator(name: "BPF_TRAMP_FEXIT", value: 1, isUnsigned: true)
!179 = !DIEnumerator(name: "BPF_TRAMP_MODIFY_RETURN", value: 2, isUnsigned: true)
!180 = !DIEnumerator(name: "BPF_TRAMP_MAX", value: 3, isUnsigned: true)
!181 = !DIEnumerator(name: "BPF_TRAMP_REPLACE", value: 4, isUnsigned: true)
!182 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "bpf_map_type", file: !70, line: 130, baseType: !7, size: 32, elements: !183)
!183 = !{!184, !185, !186, !187, !188, !189, !190, !191, !192, !193, !194, !195, !196, !197, !198, !199, !200, !201, !202, !203, !204, !205, !206, !207, !208, !209, !210, !211, !212}
!184 = !DIEnumerator(name: "BPF_MAP_TYPE_UNSPEC", value: 0, isUnsigned: true)
!185 = !DIEnumerator(name: "BPF_MAP_TYPE_HASH", value: 1, isUnsigned: true)
!186 = !DIEnumerator(name: "BPF_MAP_TYPE_ARRAY", value: 2, isUnsigned: true)
!187 = !DIEnumerator(name: "BPF_MAP_TYPE_PROG_ARRAY", value: 3, isUnsigned: true)
!188 = !DIEnumerator(name: "BPF_MAP_TYPE_PERF_EVENT_ARRAY", value: 4, isUnsigned: true)
!189 = !DIEnumerator(name: "BPF_MAP_TYPE_PERCPU_HASH", value: 5, isUnsigned: true)
!190 = !DIEnumerator(name: "BPF_MAP_TYPE_PERCPU_ARRAY", value: 6, isUnsigned: true)
!191 = !DIEnumerator(name: "BPF_MAP_TYPE_STACK_TRACE", value: 7, isUnsigned: true)
!192 = !DIEnumerator(name: "BPF_MAP_TYPE_CGROUP_ARRAY", value: 8, isUnsigned: true)
!193 = !DIEnumerator(name: "BPF_MAP_TYPE_LRU_HASH", value: 9, isUnsigned: true)
!194 = !DIEnumerator(name: "BPF_MAP_TYPE_LRU_PERCPU_HASH", value: 10, isUnsigned: true)
!195 = !DIEnumerator(name: "BPF_MAP_TYPE_LPM_TRIE", value: 11, isUnsigned: true)
!196 = !DIEnumerator(name: "BPF_MAP_TYPE_ARRAY_OF_MAPS", value: 12, isUnsigned: true)
!197 = !DIEnumerator(name: "BPF_MAP_TYPE_HASH_OF_MAPS", value: 13, isUnsigned: true)
!198 = !DIEnumerator(name: "BPF_MAP_TYPE_DEVMAP", value: 14, isUnsigned: true)
!199 = !DIEnumerator(name: "BPF_MAP_TYPE_SOCKMAP", value: 15, isUnsigned: true)
!200 = !DIEnumerator(name: "BPF_MAP_TYPE_CPUMAP", value: 16, isUnsigned: true)
!201 = !DIEnumerator(name: "BPF_MAP_TYPE_XSKMAP", value: 17, isUnsigned: true)
!202 = !DIEnumerator(name: "BPF_MAP_TYPE_SOCKHASH", value: 18, isUnsigned: true)
!203 = !DIEnumerator(name: "BPF_MAP_TYPE_CGROUP_STORAGE", value: 19, isUnsigned: true)
!204 = !DIEnumerator(name: "BPF_MAP_TYPE_REUSEPORT_SOCKARRAY", value: 20, isUnsigned: true)
!205 = !DIEnumerator(name: "BPF_MAP_TYPE_PERCPU_CGROUP_STORAGE", value: 21, isUnsigned: true)
!206 = !DIEnumerator(name: "BPF_MAP_TYPE_QUEUE", value: 22, isUnsigned: true)
!207 = !DIEnumerator(name: "BPF_MAP_TYPE_STACK", value: 23, isUnsigned: true)
!208 = !DIEnumerator(name: "BPF_MAP_TYPE_SK_STORAGE", value: 24, isUnsigned: true)
!209 = !DIEnumerator(name: "BPF_MAP_TYPE_DEVMAP_HASH", value: 25, isUnsigned: true)
!210 = !DIEnumerator(name: "BPF_MAP_TYPE_STRUCT_OPS", value: 26, isUnsigned: true)
!211 = !DIEnumerator(name: "BPF_MAP_TYPE_RINGBUF", value: 27, isUnsigned: true)
!212 = !DIEnumerator(name: "BPF_MAP_TYPE_INODE_STORAGE", value: 28, isUnsigned: true)
!213 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "ethtool_link_ext_state", file: !214, line: 585, baseType: !7, size: 32, elements: !215)
!214 = !DIFile(filename: "./include/uapi/linux/ethtool.h", directory: "/home/lizy2001/genbc/linux")
!215 = !{!216, !217, !218, !219, !220, !221, !222, !223, !224, !225}
!216 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_STATE_AUTONEG", value: 0, isUnsigned: true)
!217 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_STATE_LINK_TRAINING_FAILURE", value: 1, isUnsigned: true)
!218 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_STATE_LINK_LOGICAL_MISMATCH", value: 2, isUnsigned: true)
!219 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_STATE_BAD_SIGNAL_INTEGRITY", value: 3, isUnsigned: true)
!220 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_STATE_NO_CABLE", value: 4, isUnsigned: true)
!221 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_STATE_CABLE_ISSUE", value: 5, isUnsigned: true)
!222 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_STATE_EEPROM_ISSUE", value: 6, isUnsigned: true)
!223 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_STATE_CALIBRATION_FAILURE", value: 7, isUnsigned: true)
!224 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_STATE_POWER_BUDGET_EXCEEDED", value: 8, isUnsigned: true)
!225 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_STATE_OVERHEAT", value: 9, isUnsigned: true)
!226 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "ethtool_link_ext_substate_autoneg", file: !214, line: 602, baseType: !7, size: 32, elements: !227)
!227 = !{!228, !229, !230, !231, !232, !233}
!228 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_SUBSTATE_AN_NO_PARTNER_DETECTED", value: 1, isUnsigned: true)
!229 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_SUBSTATE_AN_ACK_NOT_RECEIVED", value: 2, isUnsigned: true)
!230 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_SUBSTATE_AN_NEXT_PAGE_EXCHANGE_FAILED", value: 3, isUnsigned: true)
!231 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_SUBSTATE_AN_NO_PARTNER_DETECTED_FORCE_MODE", value: 4, isUnsigned: true)
!232 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_SUBSTATE_AN_FEC_MISMATCH_DURING_OVERRIDE", value: 5, isUnsigned: true)
!233 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_SUBSTATE_AN_NO_HCD", value: 6, isUnsigned: true)
!234 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "ethtool_link_ext_substate_link_training", file: !214, line: 615, baseType: !7, size: 32, elements: !235)
!235 = !{!236, !237, !238, !239}
!236 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_SUBSTATE_LT_KR_FRAME_LOCK_NOT_ACQUIRED", value: 1, isUnsigned: true)
!237 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_SUBSTATE_LT_KR_LINK_INHIBIT_TIMEOUT", value: 2, isUnsigned: true)
!238 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_SUBSTATE_LT_KR_LINK_PARTNER_DID_NOT_SET_RECEIVER_READY", value: 3, isUnsigned: true)
!239 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_SUBSTATE_LT_REMOTE_FAULT", value: 4, isUnsigned: true)
!240 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "ethtool_link_ext_substate_link_logical_mismatch", file: !214, line: 626, baseType: !7, size: 32, elements: !241)
!241 = !{!242, !243, !244, !245, !246}
!242 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_SUBSTATE_LLM_PCS_DID_NOT_ACQUIRE_BLOCK_LOCK", value: 1, isUnsigned: true)
!243 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_SUBSTATE_LLM_PCS_DID_NOT_ACQUIRE_AM_LOCK", value: 2, isUnsigned: true)
!244 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_SUBSTATE_LLM_PCS_DID_NOT_GET_ALIGN_STATUS", value: 3, isUnsigned: true)
!245 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_SUBSTATE_LLM_FC_FEC_IS_NOT_LOCKED", value: 4, isUnsigned: true)
!246 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_SUBSTATE_LLM_RS_FEC_IS_NOT_LOCKED", value: 5, isUnsigned: true)
!247 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "ethtool_link_ext_substate_bad_signal_integrity", file: !214, line: 638, baseType: !7, size: 32, elements: !248)
!248 = !{!249, !250}
!249 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_SUBSTATE_BSI_LARGE_NUMBER_OF_PHYSICAL_ERRORS", value: 1, isUnsigned: true)
!250 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_SUBSTATE_BSI_UNSUPPORTED_RATE", value: 2, isUnsigned: true)
!251 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "ethtool_link_ext_substate_cable_issue", file: !214, line: 647, baseType: !7, size: 32, elements: !252)
!252 = !{!253, !254}
!253 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_SUBSTATE_CI_UNSUPPORTED_CABLE", value: 1, isUnsigned: true)
!254 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_SUBSTATE_CI_CABLE_TEST_FAILURE", value: 2, isUnsigned: true)
!255 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "ethtool_phys_id_state", file: !256, line: 54, baseType: !7, size: 32, elements: !257)
!256 = !DIFile(filename: "./include/linux/ethtool.h", directory: "/home/lizy2001/genbc/linux")
!257 = !{!258, !259, !260, !261}
!258 = !DIEnumerator(name: "ETHTOOL_ID_INACTIVE", value: 0, isUnsigned: true)
!259 = !DIEnumerator(name: "ETHTOOL_ID_ACTIVE", value: 1, isUnsigned: true)
!260 = !DIEnumerator(name: "ETHTOOL_ID_ON", value: 2, isUnsigned: true)
!261 = !DIEnumerator(name: "ETHTOOL_ID_OFF", value: 3, isUnsigned: true)
!262 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "rx_handler_result", file: !36, line: 423, baseType: !7, size: 32, elements: !263)
!263 = !{!264, !265, !266, !267}
!264 = !DIEnumerator(name: "RX_HANDLER_CONSUMED", value: 0, isUnsigned: true)
!265 = !DIEnumerator(name: "RX_HANDLER_ANOTHER", value: 1, isUnsigned: true)
!266 = !DIEnumerator(name: "RX_HANDLER_EXACT", value: 2, isUnsigned: true)
!267 = !DIEnumerator(name: "RX_HANDLER_PASS", value: 3, isUnsigned: true)
!268 = !DICompositeType(tag: DW_TAG_enumeration_type, scope: !269, file: !36, line: 2085, baseType: !7, size: 32, elements: !9819)
!269 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "net_device", file: !36, line: 1858, size: 15808, elements: !270)
!270 = !{!271, !276, !299, !316, !318, !319, !320, !321, !322, !323, !324, !325, !326, !327, !328, !333, !341, !342, !343, !344, !345, !346, !347, !348, !349, !375, !385, !386, !387, !392, !393, !397, !400, !8276, !8790, !8794, !8826, !8827, !8828, !8829, !8830, !8831, !8832, !8833, !8834, !8835, !8836, !8837, !8838, !8839, !8840, !8841, !8842, !8843, !8844, !8845, !8846, !8847, !8848, !8849, !8850, !8851, !8852, !8857, !8858, !8859, !8860, !8861, !8862, !8863, !8866, !8869, !8872, !8875, !8878, !8879, !8892, !8893, !8894, !8895, !8896, !8897, !8904, !8905, !9314, !9315, !9316, !9317, !9318, !9319, !9320, !9321, !9322, !9325, !9326, !9327, !9328, !9329, !9330, !9331, !9332, !9333, !9338, !9339, !9340, !9341, !9378, !9379, !9381, !9382, !9451, !9452, !9453, !9454, !9460, !9462, !9797, !9798, !9800, !9801, !9802, !9803, !9804, !9808, !9811}
!271 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !269, file: !36, line: 1859, baseType: !272, size: 128)
!272 = !DICompositeType(tag: DW_TAG_array_type, baseType: !273, size: 128, elements: !274)
!273 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_signed_char)
!274 = !{!275}
!275 = !DISubrange(count: 16)
!276 = !DIDerivedType(tag: DW_TAG_member, name: "name_node", scope: !269, file: !36, line: 1860, baseType: !277, size: 64, offset: 128)
!277 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !278, size: 64)
!278 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "netdev_name_node", file: !36, line: 938, size: 384, elements: !279)
!279 = !{!280, !288, !294, !296}
!280 = !DIDerivedType(tag: DW_TAG_member, name: "hlist", scope: !278, file: !36, line: 939, baseType: !281, size: 128)
!281 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hlist_node", file: !282, line: 186, size: 128, elements: !283)
!282 = !DIFile(filename: "./include/linux/types.h", directory: "/home/lizy2001/genbc/linux")
!283 = !{!284, !286}
!284 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !281, file: !282, line: 187, baseType: !285, size: 64)
!285 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !281, size: 64)
!286 = !DIDerivedType(tag: DW_TAG_member, name: "pprev", scope: !281, file: !282, line: 187, baseType: !287, size: 64, offset: 64)
!287 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !285, size: 64)
!288 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !278, file: !36, line: 940, baseType: !289, size: 128, offset: 128)
!289 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "list_head", file: !282, line: 178, size: 128, elements: !290)
!290 = !{!291, !293}
!291 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !289, file: !282, line: 179, baseType: !292, size: 64)
!292 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !289, size: 64)
!293 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !289, file: !282, line: 179, baseType: !292, size: 64, offset: 64)
!294 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !278, file: !36, line: 941, baseType: !295, size: 64, offset: 256)
!295 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !269, size: 64)
!296 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !278, file: !36, line: 942, baseType: !297, size: 64, offset: 320)
!297 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !298, size: 64)
!298 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !273)
!299 = !DIDerivedType(tag: DW_TAG_member, name: "ifalias", scope: !269, file: !36, line: 1861, baseType: !300, size: 64, offset: 192)
!300 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !301, size: 64)
!301 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_ifalias", file: !36, line: 930, size: 128, elements: !302)
!302 = !{!303, !312}
!303 = !DIDerivedType(tag: DW_TAG_member, name: "rcuhead", scope: !301, file: !36, line: 931, baseType: !304, size: 128, align: 64)
!304 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "callback_head", file: !282, line: 216, size: 128, align: 64, elements: !305)
!305 = !{!306, !308}
!306 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !304, file: !282, line: 217, baseType: !307, size: 64)
!307 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !304, size: 64)
!308 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !304, file: !282, line: 218, baseType: !309, size: 64, offset: 64)
!309 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !310, size: 64)
!310 = !DISubroutineType(types: !311)
!311 = !{null, !307}
!312 = !DIDerivedType(tag: DW_TAG_member, name: "ifalias", scope: !301, file: !36, line: 932, baseType: !313, offset: 128)
!313 = !DICompositeType(tag: DW_TAG_array_type, baseType: !273, elements: !314)
!314 = !{!315}
!315 = !DISubrange(count: -1)
!316 = !DIDerivedType(tag: DW_TAG_member, name: "mem_end", scope: !269, file: !36, line: 1866, baseType: !317, size: 64, offset: 256)
!317 = !DIBasicType(name: "long unsigned int", size: 64, encoding: DW_ATE_unsigned)
!318 = !DIDerivedType(tag: DW_TAG_member, name: "mem_start", scope: !269, file: !36, line: 1867, baseType: !317, size: 64, offset: 320)
!319 = !DIDerivedType(tag: DW_TAG_member, name: "base_addr", scope: !269, file: !36, line: 1868, baseType: !317, size: 64, offset: 384)
!320 = !DIDerivedType(tag: DW_TAG_member, name: "irq", scope: !269, file: !36, line: 1869, baseType: !37, size: 32, offset: 448)
!321 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !269, file: !36, line: 1877, baseType: !317, size: 64, offset: 512)
!322 = !DIDerivedType(tag: DW_TAG_member, name: "dev_list", scope: !269, file: !36, line: 1879, baseType: !289, size: 128, offset: 576)
!323 = !DIDerivedType(tag: DW_TAG_member, name: "napi_list", scope: !269, file: !36, line: 1880, baseType: !289, size: 128, offset: 704)
!324 = !DIDerivedType(tag: DW_TAG_member, name: "unreg_list", scope: !269, file: !36, line: 1881, baseType: !289, size: 128, offset: 832)
!325 = !DIDerivedType(tag: DW_TAG_member, name: "close_list", scope: !269, file: !36, line: 1882, baseType: !289, size: 128, offset: 960)
!326 = !DIDerivedType(tag: DW_TAG_member, name: "ptype_all", scope: !269, file: !36, line: 1883, baseType: !289, size: 128, offset: 1088)
!327 = !DIDerivedType(tag: DW_TAG_member, name: "ptype_specific", scope: !269, file: !36, line: 1884, baseType: !289, size: 128, offset: 1216)
!328 = !DIDerivedType(tag: DW_TAG_member, name: "adj_list", scope: !269, file: !36, line: 1889, baseType: !329, size: 256, offset: 1344)
!329 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !269, file: !36, line: 1886, size: 256, elements: !330)
!330 = !{!331, !332}
!331 = !DIDerivedType(tag: DW_TAG_member, name: "upper", scope: !329, file: !36, line: 1887, baseType: !289, size: 128)
!332 = !DIDerivedType(tag: DW_TAG_member, name: "lower", scope: !329, file: !36, line: 1888, baseType: !289, size: 128, offset: 128)
!333 = !DIDerivedType(tag: DW_TAG_member, name: "features", scope: !269, file: !36, line: 1891, baseType: !334, size: 64, offset: 1600)
!334 = !DIDerivedType(tag: DW_TAG_typedef, name: "netdev_features_t", file: !335, line: 12, baseType: !336)
!335 = !DIFile(filename: "./include/linux/netdev_features.h", directory: "/home/lizy2001/genbc/linux")
!336 = !DIDerivedType(tag: DW_TAG_typedef, name: "u64", file: !337, line: 23, baseType: !338)
!337 = !DIFile(filename: "./include/asm-generic/int-ll64.h", directory: "/home/lizy2001/genbc/linux")
!338 = !DIDerivedType(tag: DW_TAG_typedef, name: "__u64", file: !339, line: 31, baseType: !340)
!339 = !DIFile(filename: "./include/uapi/asm-generic/int-ll64.h", directory: "/home/lizy2001/genbc/linux")
!340 = !DIBasicType(name: "long long unsigned int", size: 64, encoding: DW_ATE_unsigned)
!341 = !DIDerivedType(tag: DW_TAG_member, name: "hw_features", scope: !269, file: !36, line: 1892, baseType: !334, size: 64, offset: 1664)
!342 = !DIDerivedType(tag: DW_TAG_member, name: "wanted_features", scope: !269, file: !36, line: 1893, baseType: !334, size: 64, offset: 1728)
!343 = !DIDerivedType(tag: DW_TAG_member, name: "vlan_features", scope: !269, file: !36, line: 1894, baseType: !334, size: 64, offset: 1792)
!344 = !DIDerivedType(tag: DW_TAG_member, name: "hw_enc_features", scope: !269, file: !36, line: 1895, baseType: !334, size: 64, offset: 1856)
!345 = !DIDerivedType(tag: DW_TAG_member, name: "mpls_features", scope: !269, file: !36, line: 1896, baseType: !334, size: 64, offset: 1920)
!346 = !DIDerivedType(tag: DW_TAG_member, name: "gso_partial_features", scope: !269, file: !36, line: 1897, baseType: !334, size: 64, offset: 1984)
!347 = !DIDerivedType(tag: DW_TAG_member, name: "ifindex", scope: !269, file: !36, line: 1899, baseType: !37, size: 32, offset: 2048)
!348 = !DIDerivedType(tag: DW_TAG_member, name: "group", scope: !269, file: !36, line: 1900, baseType: !37, size: 32, offset: 2080)
!349 = !DIDerivedType(tag: DW_TAG_member, name: "stats", scope: !269, file: !36, line: 1902, baseType: !350, size: 1472, offset: 2112)
!350 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "net_device_stats", file: !36, line: 169, size: 1472, elements: !351)
!351 = !{!352, !353, !354, !355, !356, !357, !358, !359, !360, !361, !362, !363, !364, !365, !366, !367, !368, !369, !370, !371, !372, !373, !374}
!352 = !DIDerivedType(tag: DW_TAG_member, name: "rx_packets", scope: !350, file: !36, line: 170, baseType: !317, size: 64)
!353 = !DIDerivedType(tag: DW_TAG_member, name: "tx_packets", scope: !350, file: !36, line: 171, baseType: !317, size: 64, offset: 64)
!354 = !DIDerivedType(tag: DW_TAG_member, name: "rx_bytes", scope: !350, file: !36, line: 172, baseType: !317, size: 64, offset: 128)
!355 = !DIDerivedType(tag: DW_TAG_member, name: "tx_bytes", scope: !350, file: !36, line: 173, baseType: !317, size: 64, offset: 192)
!356 = !DIDerivedType(tag: DW_TAG_member, name: "rx_errors", scope: !350, file: !36, line: 174, baseType: !317, size: 64, offset: 256)
!357 = !DIDerivedType(tag: DW_TAG_member, name: "tx_errors", scope: !350, file: !36, line: 175, baseType: !317, size: 64, offset: 320)
!358 = !DIDerivedType(tag: DW_TAG_member, name: "rx_dropped", scope: !350, file: !36, line: 176, baseType: !317, size: 64, offset: 384)
!359 = !DIDerivedType(tag: DW_TAG_member, name: "tx_dropped", scope: !350, file: !36, line: 177, baseType: !317, size: 64, offset: 448)
!360 = !DIDerivedType(tag: DW_TAG_member, name: "multicast", scope: !350, file: !36, line: 178, baseType: !317, size: 64, offset: 512)
!361 = !DIDerivedType(tag: DW_TAG_member, name: "collisions", scope: !350, file: !36, line: 179, baseType: !317, size: 64, offset: 576)
!362 = !DIDerivedType(tag: DW_TAG_member, name: "rx_length_errors", scope: !350, file: !36, line: 180, baseType: !317, size: 64, offset: 640)
!363 = !DIDerivedType(tag: DW_TAG_member, name: "rx_over_errors", scope: !350, file: !36, line: 181, baseType: !317, size: 64, offset: 704)
!364 = !DIDerivedType(tag: DW_TAG_member, name: "rx_crc_errors", scope: !350, file: !36, line: 182, baseType: !317, size: 64, offset: 768)
!365 = !DIDerivedType(tag: DW_TAG_member, name: "rx_frame_errors", scope: !350, file: !36, line: 183, baseType: !317, size: 64, offset: 832)
!366 = !DIDerivedType(tag: DW_TAG_member, name: "rx_fifo_errors", scope: !350, file: !36, line: 184, baseType: !317, size: 64, offset: 896)
!367 = !DIDerivedType(tag: DW_TAG_member, name: "rx_missed_errors", scope: !350, file: !36, line: 185, baseType: !317, size: 64, offset: 960)
!368 = !DIDerivedType(tag: DW_TAG_member, name: "tx_aborted_errors", scope: !350, file: !36, line: 186, baseType: !317, size: 64, offset: 1024)
!369 = !DIDerivedType(tag: DW_TAG_member, name: "tx_carrier_errors", scope: !350, file: !36, line: 187, baseType: !317, size: 64, offset: 1088)
!370 = !DIDerivedType(tag: DW_TAG_member, name: "tx_fifo_errors", scope: !350, file: !36, line: 188, baseType: !317, size: 64, offset: 1152)
!371 = !DIDerivedType(tag: DW_TAG_member, name: "tx_heartbeat_errors", scope: !350, file: !36, line: 189, baseType: !317, size: 64, offset: 1216)
!372 = !DIDerivedType(tag: DW_TAG_member, name: "tx_window_errors", scope: !350, file: !36, line: 190, baseType: !317, size: 64, offset: 1280)
!373 = !DIDerivedType(tag: DW_TAG_member, name: "rx_compressed", scope: !350, file: !36, line: 191, baseType: !317, size: 64, offset: 1344)
!374 = !DIDerivedType(tag: DW_TAG_member, name: "tx_compressed", scope: !350, file: !36, line: 192, baseType: !317, size: 64, offset: 1408)
!375 = !DIDerivedType(tag: DW_TAG_member, name: "rx_dropped", scope: !269, file: !36, line: 1904, baseType: !376, size: 64, offset: 3584)
!376 = !DIDerivedType(tag: DW_TAG_typedef, name: "atomic_long_t", file: !377, line: 13, baseType: !378)
!377 = !DIFile(filename: "./include/asm-generic/atomic-long.h", directory: "/home/lizy2001/genbc/linux")
!378 = !DIDerivedType(tag: DW_TAG_typedef, name: "atomic64_t", file: !282, line: 175, baseType: !379)
!379 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !282, line: 173, size: 64, elements: !380)
!380 = !{!381}
!381 = !DIDerivedType(tag: DW_TAG_member, name: "counter", scope: !379, file: !282, line: 174, baseType: !382, size: 64)
!382 = !DIDerivedType(tag: DW_TAG_typedef, name: "s64", file: !337, line: 22, baseType: !383)
!383 = !DIDerivedType(tag: DW_TAG_typedef, name: "__s64", file: !339, line: 30, baseType: !384)
!384 = !DIBasicType(name: "long long int", size: 64, encoding: DW_ATE_signed)
!385 = !DIDerivedType(tag: DW_TAG_member, name: "tx_dropped", scope: !269, file: !36, line: 1905, baseType: !376, size: 64, offset: 3648)
!386 = !DIDerivedType(tag: DW_TAG_member, name: "rx_nohandler", scope: !269, file: !36, line: 1906, baseType: !376, size: 64, offset: 3712)
!387 = !DIDerivedType(tag: DW_TAG_member, name: "carrier_up_count", scope: !269, file: !36, line: 1909, baseType: !388, size: 32, offset: 3776)
!388 = !DIDerivedType(tag: DW_TAG_typedef, name: "atomic_t", file: !282, line: 168, baseType: !389)
!389 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !282, line: 166, size: 32, elements: !390)
!390 = !{!391}
!391 = !DIDerivedType(tag: DW_TAG_member, name: "counter", scope: !389, file: !282, line: 167, baseType: !37, size: 32)
!392 = !DIDerivedType(tag: DW_TAG_member, name: "carrier_down_count", scope: !269, file: !36, line: 1910, baseType: !388, size: 32, offset: 3808)
!393 = !DIDerivedType(tag: DW_TAG_member, name: "wireless_handlers", scope: !269, file: !36, line: 1913, baseType: !394, size: 64, offset: 3840)
!394 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !395, size: 64)
!395 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !396)
!396 = !DICompositeType(tag: DW_TAG_structure_type, name: "iw_handler_def", file: !36, line: 1913, flags: DIFlagFwdDecl)
!397 = !DIDerivedType(tag: DW_TAG_member, name: "wireless_data", scope: !269, file: !36, line: 1914, baseType: !398, size: 64, offset: 3904)
!398 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !399, size: 64)
!399 = !DICompositeType(tag: DW_TAG_structure_type, name: "iw_public_data", file: !36, line: 1914, flags: DIFlagFwdDecl)
!400 = !DIDerivedType(tag: DW_TAG_member, name: "netdev_ops", scope: !269, file: !36, line: 1916, baseType: !401, size: 64, offset: 3968)
!401 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !402, size: 64)
!402 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !403)
!403 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "net_device_ops", file: !36, line: 1283, size: 4416, elements: !404)
!404 = !{!405, !409, !413, !414, !415, !7749, !7753, !7757, !7761, !7762, !7766, !7767, !7878, !7883, !7887, !7891, !7895, !7927, !7931, !7935, !7940, !7944, !7945, !7950, !7954, !7958, !7962, !7963, !7983, !7987, !8002, !8008, !8012, !8021, !8025, !8026, !8030, !8034, !8038, !8042, !8046, !8050, !8054, !8058, !8073, !8077, !8119, !8123, !8128, !8132, !8136, !8140, !8149, !8150, !8154, !8160, !8161, !8165, !8169, !8173, !8177, !8178, !8182, !8183, !8236, !8256, !8260, !8266, !8272}
!405 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_init", scope: !403, file: !36, line: 1284, baseType: !406, size: 64)
!406 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !407, size: 64)
!407 = !DISubroutineType(types: !408)
!408 = !{!37, !295}
!409 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_uninit", scope: !403, file: !36, line: 1285, baseType: !410, size: 64, offset: 64)
!410 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !411, size: 64)
!411 = !DISubroutineType(types: !412)
!412 = !{null, !295}
!413 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_open", scope: !403, file: !36, line: 1286, baseType: !406, size: 64, offset: 128)
!414 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_stop", scope: !403, file: !36, line: 1287, baseType: !406, size: 64, offset: 192)
!415 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_start_xmit", scope: !403, file: !36, line: 1288, baseType: !416, size: 64, offset: 256)
!416 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !417, size: 64)
!417 = !DISubroutineType(types: !418)
!418 = !{!419, !420, !295}
!419 = !DIDerivedType(tag: DW_TAG_typedef, name: "netdev_tx_t", file: !36, line: 120, baseType: !35)
!420 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !421, size: 64)
!421 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sk_buff", file: !422, line: 713, size: 1600, elements: !423)
!422 = !DIFile(filename: "./include/linux/skbuff.h", directory: "/home/lizy2001/genbc/linux")
!423 = !{!424, !446, !7644, !7649, !7653, !7662, !7663, !7664, !7665, !7666, !7667, !7669, !7670, !7671, !7672, !7673, !7674, !7675, !7677, !7678, !7679, !7680, !7681, !7682, !7683, !7684, !7685, !7686, !7687, !7688, !7689, !7690, !7691, !7692, !7693, !7694, !7695, !7696, !7697, !7698, !7699, !7700, !7701, !7702, !7703, !7713, !7714, !7715, !7716, !7717, !7718, !7723, !7728, !7733, !7734, !7735, !7736, !7737, !7738, !7739, !7740, !7741, !7743, !7744, !7746, !7747, !7748}
!424 = !DIDerivedType(tag: DW_TAG_member, scope: !421, file: !422, line: 714, baseType: !425, size: 192)
!425 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !421, file: !422, line: 714, size: 192, elements: !426)
!426 = !{!427, !437, !445}
!427 = !DIDerivedType(tag: DW_TAG_member, scope: !425, file: !422, line: 715, baseType: !428, size: 192)
!428 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !425, file: !422, line: 715, size: 192, elements: !429)
!429 = !{!430, !431, !432}
!430 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !428, file: !422, line: 717, baseType: !420, size: 64)
!431 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !428, file: !422, line: 718, baseType: !420, size: 64, offset: 64)
!432 = !DIDerivedType(tag: DW_TAG_member, scope: !428, file: !422, line: 720, baseType: !433, size: 64, offset: 128)
!433 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !428, file: !422, line: 720, size: 64, elements: !434)
!434 = !{!435, !436}
!435 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !433, file: !422, line: 721, baseType: !295, size: 64)
!436 = !DIDerivedType(tag: DW_TAG_member, name: "dev_scratch", scope: !433, file: !422, line: 726, baseType: !317, size: 64)
!437 = !DIDerivedType(tag: DW_TAG_member, name: "rbnode", scope: !425, file: !422, line: 729, baseType: !438, size: 192, align: 64)
!438 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rb_node", file: !439, line: 24, size: 192, align: 64, elements: !440)
!439 = !DIFile(filename: "./include/linux/rbtree.h", directory: "/home/lizy2001/genbc/linux")
!440 = !{!441, !442, !444}
!441 = !DIDerivedType(tag: DW_TAG_member, name: "__rb_parent_color", scope: !438, file: !439, line: 25, baseType: !317, size: 64)
!442 = !DIDerivedType(tag: DW_TAG_member, name: "rb_right", scope: !438, file: !439, line: 26, baseType: !443, size: 64, offset: 64)
!443 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !438, size: 64)
!444 = !DIDerivedType(tag: DW_TAG_member, name: "rb_left", scope: !438, file: !439, line: 27, baseType: !443, size: 64, offset: 128)
!445 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !425, file: !422, line: 730, baseType: !289, size: 128)
!446 = !DIDerivedType(tag: DW_TAG_member, scope: !421, file: !422, line: 733, baseType: !447, size: 64, offset: 192)
!447 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !421, file: !422, line: 733, size: 64, elements: !448)
!448 = !{!449, !7643}
!449 = !DIDerivedType(tag: DW_TAG_member, name: "sk", scope: !447, file: !422, line: 734, baseType: !450, size: 64)
!450 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !451, size: 64)
!451 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sock", file: !452, line: 347, size: 5568, elements: !453)
!452 = !DIFile(filename: "./include/net/sock.h", directory: "/home/lizy2001/genbc/linux")
!453 = !{!454, !7402, !7409, !7410, !7411, !7412, !7413, !7414, !7421, !7422, !7423, !7424, !7425, !7432, !7445, !7446, !7447, !7448, !7449, !7450, !7451, !7452, !7457, !7458, !7459, !7460, !7461, !7462, !7463, !7464, !7465, !7466, !7467, !7468, !7469, !7470, !7471, !7472, !7473, !7474, !7475, !7476, !7477, !7478, !7479, !7480, !7481, !7482, !7483, !7484, !7485, !7486, !7487, !7488, !7489, !7490, !7491, !7492, !7493, !7494, !7495, !7496, !7497, !7498, !7499, !7500, !7501, !7502, !7503, !7504, !7505, !7506, !7628, !7629, !7632, !7633, !7634, !7635, !7636, !7637, !7638, !7639, !7642}
!454 = !DIDerivedType(tag: DW_TAG_member, name: "__sk_common", scope: !451, file: !452, line: 352, baseType: !455, size: 1088)
!455 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sock_common", file: !452, line: 162, size: 1088, elements: !456)
!456 = !{!457, !470, !480, !491, !492, !495, !496, !497, !498, !499, !500, !505, !7362, !7363, !7364, !7365, !7366, !7373, !7375, !7387, !7388, !7394, !7395, !7396}
!457 = !DIDerivedType(tag: DW_TAG_member, scope: !455, file: !452, line: 166, baseType: !458, size: 64)
!458 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !455, file: !452, line: 166, size: 64, elements: !459)
!459 = !{!460, !462}
!460 = !DIDerivedType(tag: DW_TAG_member, name: "skc_addrpair", scope: !458, file: !452, line: 167, baseType: !461, size: 64)
!461 = !DIDerivedType(tag: DW_TAG_typedef, name: "__addrpair", file: !452, line: 115, baseType: !338)
!462 = !DIDerivedType(tag: DW_TAG_member, scope: !458, file: !452, line: 168, baseType: !463, size: 64)
!463 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !458, file: !452, line: 168, size: 64, elements: !464)
!464 = !{!465, !469}
!465 = !DIDerivedType(tag: DW_TAG_member, name: "skc_daddr", scope: !463, file: !452, line: 169, baseType: !466, size: 32)
!466 = !DIDerivedType(tag: DW_TAG_typedef, name: "__be32", file: !467, line: 32, baseType: !468)
!467 = !DIFile(filename: "./include/uapi/linux/types.h", directory: "/home/lizy2001/genbc/linux")
!468 = !DIDerivedType(tag: DW_TAG_typedef, name: "__u32", file: !339, line: 27, baseType: !7)
!469 = !DIDerivedType(tag: DW_TAG_member, name: "skc_rcv_saddr", scope: !463, file: !452, line: 170, baseType: !466, size: 32, offset: 32)
!470 = !DIDerivedType(tag: DW_TAG_member, scope: !455, file: !452, line: 173, baseType: !471, size: 32, offset: 64)
!471 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !455, file: !452, line: 173, size: 32, elements: !472)
!472 = !{!473, !474}
!473 = !DIDerivedType(tag: DW_TAG_member, name: "skc_hash", scope: !471, file: !452, line: 174, baseType: !7, size: 32)
!474 = !DIDerivedType(tag: DW_TAG_member, name: "skc_u16hashes", scope: !471, file: !452, line: 175, baseType: !475, size: 32)
!475 = !DICompositeType(tag: DW_TAG_array_type, baseType: !476, size: 32, elements: !478)
!476 = !DIDerivedType(tag: DW_TAG_typedef, name: "__u16", file: !339, line: 24, baseType: !477)
!477 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!478 = !{!479}
!479 = !DISubrange(count: 2)
!480 = !DIDerivedType(tag: DW_TAG_member, scope: !455, file: !452, line: 178, baseType: !481, size: 32, offset: 96)
!481 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !455, file: !452, line: 178, size: 32, elements: !482)
!482 = !{!483, !485}
!483 = !DIDerivedType(tag: DW_TAG_member, name: "skc_portpair", scope: !481, file: !452, line: 179, baseType: !484, size: 32)
!484 = !DIDerivedType(tag: DW_TAG_typedef, name: "__portpair", file: !452, line: 114, baseType: !468)
!485 = !DIDerivedType(tag: DW_TAG_member, scope: !481, file: !452, line: 180, baseType: !486, size: 32)
!486 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !481, file: !452, line: 180, size: 32, elements: !487)
!487 = !{!488, !490}
!488 = !DIDerivedType(tag: DW_TAG_member, name: "skc_dport", scope: !486, file: !452, line: 181, baseType: !489, size: 16)
!489 = !DIDerivedType(tag: DW_TAG_typedef, name: "__be16", file: !467, line: 30, baseType: !476)
!490 = !DIDerivedType(tag: DW_TAG_member, name: "skc_num", scope: !486, file: !452, line: 182, baseType: !476, size: 16, offset: 16)
!491 = !DIDerivedType(tag: DW_TAG_member, name: "skc_family", scope: !455, file: !452, line: 186, baseType: !477, size: 16, offset: 128)
!492 = !DIDerivedType(tag: DW_TAG_member, name: "skc_state", scope: !455, file: !452, line: 187, baseType: !493, size: 8, offset: 144)
!493 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !494)
!494 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!495 = !DIDerivedType(tag: DW_TAG_member, name: "skc_reuse", scope: !455, file: !452, line: 188, baseType: !494, size: 4, offset: 152, flags: DIFlagBitField, extraData: i64 152)
!496 = !DIDerivedType(tag: DW_TAG_member, name: "skc_reuseport", scope: !455, file: !452, line: 189, baseType: !494, size: 1, offset: 156, flags: DIFlagBitField, extraData: i64 152)
!497 = !DIDerivedType(tag: DW_TAG_member, name: "skc_ipv6only", scope: !455, file: !452, line: 190, baseType: !494, size: 1, offset: 157, flags: DIFlagBitField, extraData: i64 152)
!498 = !DIDerivedType(tag: DW_TAG_member, name: "skc_net_refcnt", scope: !455, file: !452, line: 191, baseType: !494, size: 1, offset: 158, flags: DIFlagBitField, extraData: i64 152)
!499 = !DIDerivedType(tag: DW_TAG_member, name: "skc_bound_dev_if", scope: !455, file: !452, line: 192, baseType: !37, size: 32, offset: 160)
!500 = !DIDerivedType(tag: DW_TAG_member, scope: !455, file: !452, line: 193, baseType: !501, size: 128, offset: 192)
!501 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !455, file: !452, line: 193, size: 128, elements: !502)
!502 = !{!503, !504}
!503 = !DIDerivedType(tag: DW_TAG_member, name: "skc_bind_node", scope: !501, file: !452, line: 194, baseType: !281, size: 128)
!504 = !DIDerivedType(tag: DW_TAG_member, name: "skc_portaddr_node", scope: !501, file: !452, line: 195, baseType: !281, size: 128)
!505 = !DIDerivedType(tag: DW_TAG_member, name: "skc_prot", scope: !455, file: !452, line: 197, baseType: !506, size: 64, offset: 320)
!506 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !507, size: 64)
!507 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "proto", file: !452, line: 1127, size: 3264, elements: !508)
!508 = !{!509, !514, !530, !531, !535, !542, !546, !550, !554, !558, !573, !578, !579, !7222, !7226, !7230, !7231, !7232, !7236, !7237, !7238, !7239, !7240, !7244, !7245, !7251, !7255, !7256, !7257, !7258, !7260, !7261, !7263, !7264, !7265, !7266, !7267, !7268, !7269, !7270, !7271, !7273, !7274, !7275, !7276, !7332, !7345, !7358, !7359, !7360, !7361}
!509 = !DIDerivedType(tag: DW_TAG_member, name: "close", scope: !507, file: !452, line: 1128, baseType: !510, size: 64)
!510 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !511, size: 64)
!511 = !DISubroutineType(types: !512)
!512 = !{null, !450, !513}
!513 = !DIBasicType(name: "long int", size: 64, encoding: DW_ATE_signed)
!514 = !DIDerivedType(tag: DW_TAG_member, name: "pre_connect", scope: !507, file: !452, line: 1130, baseType: !515, size: 64, offset: 64)
!515 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !516, size: 64)
!516 = !DISubroutineType(types: !517)
!517 = !{!37, !450, !518, !37}
!518 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !519, size: 64)
!519 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sockaddr", file: !520, line: 32, size: 128, elements: !521)
!520 = !DIFile(filename: "./include/linux/socket.h", directory: "/home/lizy2001/genbc/linux")
!521 = !{!522, !526}
!522 = !DIDerivedType(tag: DW_TAG_member, name: "sa_family", scope: !519, file: !520, line: 33, baseType: !523, size: 16)
!523 = !DIDerivedType(tag: DW_TAG_typedef, name: "sa_family_t", file: !520, line: 26, baseType: !524)
!524 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_sa_family_t", file: !525, line: 10, baseType: !477)
!525 = !DIFile(filename: "./include/uapi/linux/socket.h", directory: "/home/lizy2001/genbc/linux")
!526 = !DIDerivedType(tag: DW_TAG_member, name: "sa_data", scope: !519, file: !520, line: 34, baseType: !527, size: 112, offset: 16)
!527 = !DICompositeType(tag: DW_TAG_array_type, baseType: !273, size: 112, elements: !528)
!528 = !{!529}
!529 = !DISubrange(count: 14)
!530 = !DIDerivedType(tag: DW_TAG_member, name: "connect", scope: !507, file: !452, line: 1133, baseType: !515, size: 64, offset: 128)
!531 = !DIDerivedType(tag: DW_TAG_member, name: "disconnect", scope: !507, file: !452, line: 1136, baseType: !532, size: 64, offset: 192)
!532 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !533, size: 64)
!533 = !DISubroutineType(types: !534)
!534 = !{!37, !450, !37}
!535 = !DIDerivedType(tag: DW_TAG_member, name: "accept", scope: !507, file: !452, line: 1138, baseType: !536, size: 64, offset: 256)
!536 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !537, size: 64)
!537 = !DISubroutineType(types: !538)
!538 = !{!450, !450, !37, !539, !540}
!539 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !37, size: 64)
!540 = !DIDerivedType(tag: DW_TAG_typedef, name: "bool", file: !282, line: 30, baseType: !541)
!541 = !DIBasicType(name: "_Bool", size: 8, encoding: DW_ATE_boolean)
!542 = !DIDerivedType(tag: DW_TAG_member, name: "ioctl", scope: !507, file: !452, line: 1141, baseType: !543, size: 64, offset: 320)
!543 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !544, size: 64)
!544 = !DISubroutineType(types: !545)
!545 = !{!37, !450, !37, !317}
!546 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !507, file: !452, line: 1143, baseType: !547, size: 64, offset: 384)
!547 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !548, size: 64)
!548 = !DISubroutineType(types: !549)
!549 = !{!37, !450}
!550 = !DIDerivedType(tag: DW_TAG_member, name: "destroy", scope: !507, file: !452, line: 1144, baseType: !551, size: 64, offset: 448)
!551 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !552, size: 64)
!552 = !DISubroutineType(types: !553)
!553 = !{null, !450}
!554 = !DIDerivedType(tag: DW_TAG_member, name: "shutdown", scope: !507, file: !452, line: 1145, baseType: !555, size: 64, offset: 512)
!555 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !556, size: 64)
!556 = !DISubroutineType(types: !557)
!557 = !{null, !450, !37}
!558 = !DIDerivedType(tag: DW_TAG_member, name: "setsockopt", scope: !507, file: !452, line: 1146, baseType: !559, size: 64, offset: 576)
!559 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !560, size: 64)
!560 = !DISubroutineType(types: !561)
!561 = !{!37, !450, !37, !37, !562, !7}
!562 = !DIDerivedType(tag: DW_TAG_typedef, name: "sockptr_t", file: !563, line: 20, baseType: !564)
!563 = !DIFile(filename: "./include/linux/sockptr.h", directory: "/home/lizy2001/genbc/linux")
!564 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !563, line: 14, size: 128, elements: !565)
!565 = !{!566, !572}
!566 = !DIDerivedType(tag: DW_TAG_member, scope: !564, file: !563, line: 15, baseType: !567, size: 64)
!567 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !564, file: !563, line: 15, size: 64, elements: !568)
!568 = !{!569, !571}
!569 = !DIDerivedType(tag: DW_TAG_member, name: "kernel", scope: !567, file: !563, line: 16, baseType: !570, size: 64)
!570 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 64)
!571 = !DIDerivedType(tag: DW_TAG_member, name: "user", scope: !567, file: !563, line: 17, baseType: !570, size: 64)
!572 = !DIDerivedType(tag: DW_TAG_member, name: "is_kernel", scope: !564, file: !563, line: 19, baseType: !540, size: 1, offset: 64, flags: DIFlagBitField, extraData: i64 64)
!573 = !DIDerivedType(tag: DW_TAG_member, name: "getsockopt", scope: !507, file: !452, line: 1149, baseType: !574, size: 64, offset: 640)
!574 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !575, size: 64)
!575 = !DISubroutineType(types: !576)
!576 = !{!37, !450, !37, !37, !577, !539}
!577 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !273, size: 64)
!578 = !DIDerivedType(tag: DW_TAG_member, name: "keepalive", scope: !507, file: !452, line: 1152, baseType: !555, size: 64, offset: 704)
!579 = !DIDerivedType(tag: DW_TAG_member, name: "sendmsg", scope: !507, file: !452, line: 1157, baseType: !580, size: 64, offset: 768)
!580 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !581, size: 64)
!581 = !DISubroutineType(types: !582)
!582 = !{!37, !450, !583, !594}
!583 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !584, size: 64)
!584 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "msghdr", file: !520, line: 50, size: 768, elements: !585)
!585 = !{!586, !587, !588, !7213, !7218, !7219, !7220, !7221}
!586 = !DIDerivedType(tag: DW_TAG_member, name: "msg_name", scope: !584, file: !520, line: 51, baseType: !570, size: 64)
!587 = !DIDerivedType(tag: DW_TAG_member, name: "msg_namelen", scope: !584, file: !520, line: 52, baseType: !37, size: 32, offset: 64)
!588 = !DIDerivedType(tag: DW_TAG_member, name: "msg_iter", scope: !584, file: !520, line: 53, baseType: !589, size: 320, offset: 128)
!589 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "iov_iter", file: !590, line: 29, size: 320, elements: !591)
!590 = !DIFile(filename: "./include/linux/uio.h", directory: "/home/lizy2001/genbc/linux")
!591 = !{!592, !593, !598, !599, !7204}
!592 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !589, file: !590, line: 35, baseType: !7, size: 32)
!593 = !DIDerivedType(tag: DW_TAG_member, name: "iov_offset", scope: !589, file: !590, line: 36, baseType: !594, size: 64, offset: 64)
!594 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !282, line: 55, baseType: !595)
!595 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_size_t", file: !596, line: 72, baseType: !597)
!596 = !DIFile(filename: "./include/uapi/asm-generic/posix_types.h", directory: "/home/lizy2001/genbc/linux")
!597 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_ulong_t", file: !596, line: 16, baseType: !317)
!598 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !589, file: !590, line: 37, baseType: !594, size: 64, offset: 128)
!599 = !DIDerivedType(tag: DW_TAG_member, scope: !589, file: !590, line: 38, baseType: !600, size: 64, offset: 192)
!600 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !589, file: !590, line: 38, size: 64, elements: !601)
!601 = !{!602, !610, !617, !7203}
!602 = !DIDerivedType(tag: DW_TAG_member, name: "iov", scope: !600, file: !590, line: 39, baseType: !603, size: 64)
!603 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !604, size: 64)
!604 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !605)
!605 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "iovec", file: !606, line: 17, size: 128, elements: !607)
!606 = !DIFile(filename: "./include/uapi/linux/uio.h", directory: "/home/lizy2001/genbc/linux")
!607 = !{!608, !609}
!608 = !DIDerivedType(tag: DW_TAG_member, name: "iov_base", scope: !605, file: !606, line: 19, baseType: !570, size: 64)
!609 = !DIDerivedType(tag: DW_TAG_member, name: "iov_len", scope: !605, file: !606, line: 20, baseType: !595, size: 64, offset: 64)
!610 = !DIDerivedType(tag: DW_TAG_member, name: "kvec", scope: !600, file: !590, line: 40, baseType: !611, size: 64)
!611 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !612, size: 64)
!612 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !613)
!613 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kvec", file: !590, line: 15, size: 128, elements: !614)
!614 = !{!615, !616}
!615 = !DIDerivedType(tag: DW_TAG_member, name: "iov_base", scope: !613, file: !590, line: 16, baseType: !570, size: 64)
!616 = !DIDerivedType(tag: DW_TAG_member, name: "iov_len", scope: !613, file: !590, line: 17, baseType: !594, size: 64, offset: 64)
!617 = !DIDerivedType(tag: DW_TAG_member, name: "bvec", scope: !600, file: !590, line: 41, baseType: !618, size: 64)
!618 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !619, size: 64)
!619 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !620)
!620 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bio_vec", file: !621, line: 31, size: 128, elements: !622)
!621 = !DIFile(filename: "./include/linux/bvec.h", directory: "/home/lizy2001/genbc/linux")
!622 = !{!623, !7201, !7202}
!623 = !DIDerivedType(tag: DW_TAG_member, name: "bv_page", scope: !620, file: !621, line: 32, baseType: !624, size: 64)
!624 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !625, size: 64)
!625 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "page", file: !626, line: 68, size: 512, align: 128, elements: !627)
!626 = !DIFile(filename: "./include/linux/mm_types.h", directory: "/home/lizy2001/genbc/linux")
!627 = !{!628, !629, !7193, !7200}
!628 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !625, file: !626, line: 69, baseType: !317, size: 64)
!629 = !DIDerivedType(tag: DW_TAG_member, scope: !625, file: !626, line: 77, baseType: !630, size: 320, offset: 64)
!630 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !625, file: !626, line: 77, size: 320, elements: !631)
!631 = !{!632, !7080, !7085, !7111, !7119, !7125, !7137, !7192}
!632 = !DIDerivedType(tag: DW_TAG_member, scope: !630, file: !626, line: 78, baseType: !633, size: 320)
!633 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !630, file: !626, line: 78, size: 320, elements: !634)
!634 = !{!635, !636, !7078, !7079}
!635 = !DIDerivedType(tag: DW_TAG_member, name: "lru", scope: !633, file: !626, line: 84, baseType: !289, size: 128)
!636 = !DIDerivedType(tag: DW_TAG_member, name: "mapping", scope: !633, file: !626, line: 86, baseType: !637, size: 64, offset: 128)
!637 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !638, size: 64)
!638 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "address_space", file: !639, line: 451, size: 1216, align: 64, elements: !640)
!639 = !DIFile(filename: "./include/linux/fs.h", directory: "/home/lizy2001/genbc/linux")
!640 = !{!641, !6968, !6969, !6970, !6971, !6972, !6973, !6974, !6975, !6976, !7073, !7074, !7075, !7076, !7077}
!641 = !DIDerivedType(tag: DW_TAG_member, name: "host", scope: !638, file: !639, line: 452, baseType: !642, size: 64)
!642 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !643, size: 64)
!643 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "inode", file: !639, line: 610, size: 4224, elements: !644)
!644 = !{!645, !647, !648, !656, !663, !664, !6893, !6894, !6895, !6896, !6901, !6902, !6903, !6904, !6905, !6906, !6907, !6908, !6909, !6910, !6911, !6912, !6913, !6914, !6915, !6916, !6917, !6918, !6919, !6920, !6925, !6926, !6927, !6928, !6929, !6930, !6931, !6936, !6944, !6945, !6946, !6964, !6965, !6966, !6967}
!645 = !DIDerivedType(tag: DW_TAG_member, name: "i_mode", scope: !643, file: !639, line: 611, baseType: !646, size: 16)
!646 = !DIDerivedType(tag: DW_TAG_typedef, name: "umode_t", file: !282, line: 19, baseType: !477)
!647 = !DIDerivedType(tag: DW_TAG_member, name: "i_opflags", scope: !643, file: !639, line: 612, baseType: !477, size: 16, offset: 16)
!648 = !DIDerivedType(tag: DW_TAG_member, name: "i_uid", scope: !643, file: !639, line: 613, baseType: !649, size: 32, offset: 32)
!649 = !DIDerivedType(tag: DW_TAG_typedef, name: "kuid_t", file: !650, line: 23, baseType: !651)
!650 = !DIFile(filename: "./include/linux/uidgid.h", directory: "/home/lizy2001/genbc/linux")
!651 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !650, line: 21, size: 32, elements: !652)
!652 = !{!653}
!653 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !651, file: !650, line: 22, baseType: !654, size: 32)
!654 = !DIDerivedType(tag: DW_TAG_typedef, name: "uid_t", file: !282, line: 32, baseType: !655)
!655 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_uid32_t", file: !596, line: 49, baseType: !7)
!656 = !DIDerivedType(tag: DW_TAG_member, name: "i_gid", scope: !643, file: !639, line: 614, baseType: !657, size: 32, offset: 64)
!657 = !DIDerivedType(tag: DW_TAG_typedef, name: "kgid_t", file: !650, line: 28, baseType: !658)
!658 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !650, line: 26, size: 32, elements: !659)
!659 = !{!660}
!660 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !658, file: !650, line: 27, baseType: !661, size: 32)
!661 = !DIDerivedType(tag: DW_TAG_typedef, name: "gid_t", file: !282, line: 33, baseType: !662)
!662 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_gid32_t", file: !596, line: 50, baseType: !7)
!663 = !DIDerivedType(tag: DW_TAG_member, name: "i_flags", scope: !643, file: !639, line: 615, baseType: !7, size: 32, offset: 96)
!664 = !DIDerivedType(tag: DW_TAG_member, name: "i_op", scope: !643, file: !639, line: 622, baseType: !665, size: 64, offset: 128)
!665 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !666, size: 64)
!666 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !667)
!667 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "inode_operations", file: !639, line: 1864, size: 1536, align: 512, elements: !668)
!668 = !{!669, !6770, !6780, !6784, !6790, !6794, !6798, !6802, !6806, !6810, !6814, !6815, !6819, !6823, !6843, !6869, !6873, !6879, !6884, !6888, !6889}
!669 = !DIDerivedType(tag: DW_TAG_member, name: "lookup", scope: !667, file: !639, line: 1865, baseType: !670, size: 64)
!670 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !671, size: 64)
!671 = !DISubroutineType(types: !672)
!672 = !{!673, !642, !673, !7}
!673 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !674, size: 64)
!674 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dentry", file: !675, line: 89, size: 1536, elements: !676)
!675 = !DIFile(filename: "./include/linux/dcache.h", directory: "/home/lizy2001/genbc/linux")
!676 = !{!677, !678, !688, !696, !697, !713, !714, !718, !745, !813, !6755, !6756, !6757, !6762, !6763, !6764}
!677 = !DIDerivedType(tag: DW_TAG_member, name: "d_flags", scope: !674, file: !675, line: 91, baseType: !7, size: 32)
!678 = !DIDerivedType(tag: DW_TAG_member, name: "d_seq", scope: !674, file: !675, line: 92, baseType: !679, size: 32, offset: 32)
!679 = !DIDerivedType(tag: DW_TAG_typedef, name: "seqcount_spinlock_t", file: !680, line: 277, baseType: !681)
!680 = !DIFile(filename: "./include/linux/seqlock.h", directory: "/home/lizy2001/genbc/linux")
!681 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seqcount_spinlock", file: !680, line: 277, size: 32, elements: !682)
!682 = !{!683}
!683 = !DIDerivedType(tag: DW_TAG_member, name: "seqcount", scope: !681, file: !680, line: 277, baseType: !684, size: 32)
!684 = !DIDerivedType(tag: DW_TAG_typedef, name: "seqcount_t", file: !680, line: 70, baseType: !685)
!685 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seqcount", file: !680, line: 65, size: 32, elements: !686)
!686 = !{!687}
!687 = !DIDerivedType(tag: DW_TAG_member, name: "sequence", scope: !685, file: !680, line: 66, baseType: !7, size: 32)
!688 = !DIDerivedType(tag: DW_TAG_member, name: "d_hash", scope: !674, file: !675, line: 93, baseType: !689, size: 128, offset: 64)
!689 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hlist_bl_node", file: !690, line: 38, size: 128, elements: !691)
!690 = !DIFile(filename: "./include/linux/list_bl.h", directory: "/home/lizy2001/genbc/linux")
!691 = !{!692, !694}
!692 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !689, file: !690, line: 39, baseType: !693, size: 64)
!693 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !689, size: 64)
!694 = !DIDerivedType(tag: DW_TAG_member, name: "pprev", scope: !689, file: !690, line: 39, baseType: !695, size: 64, offset: 64)
!695 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !693, size: 64)
!696 = !DIDerivedType(tag: DW_TAG_member, name: "d_parent", scope: !674, file: !675, line: 94, baseType: !673, size: 64, offset: 192)
!697 = !DIDerivedType(tag: DW_TAG_member, name: "d_name", scope: !674, file: !675, line: 95, baseType: !698, size: 128, offset: 256)
!698 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "qstr", file: !675, line: 47, size: 128, elements: !699)
!699 = !{!700, !710}
!700 = !DIDerivedType(tag: DW_TAG_member, scope: !698, file: !675, line: 48, baseType: !701, size: 64)
!701 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !698, file: !675, line: 48, size: 64, elements: !702)
!702 = !{!703, !709}
!703 = !DIDerivedType(tag: DW_TAG_member, scope: !701, file: !675, line: 49, baseType: !704, size: 64)
!704 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !701, file: !675, line: 49, size: 64, elements: !705)
!705 = !{!706, !708}
!706 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !704, file: !675, line: 50, baseType: !707, size: 32)
!707 = !DIDerivedType(tag: DW_TAG_typedef, name: "u32", file: !337, line: 21, baseType: !468)
!708 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !704, file: !675, line: 50, baseType: !707, size: 32, offset: 32)
!709 = !DIDerivedType(tag: DW_TAG_member, name: "hash_len", scope: !701, file: !675, line: 52, baseType: !336, size: 64)
!710 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !698, file: !675, line: 54, baseType: !711, size: 64, offset: 64)
!711 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !712, size: 64)
!712 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !494)
!713 = !DIDerivedType(tag: DW_TAG_member, name: "d_inode", scope: !674, file: !675, line: 96, baseType: !642, size: 64, offset: 384)
!714 = !DIDerivedType(tag: DW_TAG_member, name: "d_iname", scope: !674, file: !675, line: 98, baseType: !715, size: 256, offset: 448)
!715 = !DICompositeType(tag: DW_TAG_array_type, baseType: !494, size: 256, elements: !716)
!716 = !{!717}
!717 = !DISubrange(count: 32)
!718 = !DIDerivedType(tag: DW_TAG_member, name: "d_lockref", scope: !674, file: !675, line: 101, baseType: !719, size: 32, offset: 704)
!719 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lockref", file: !720, line: 25, size: 32, elements: !721)
!720 = !DIFile(filename: "./include/linux/lockref.h", directory: "/home/lizy2001/genbc/linux")
!721 = !{!722}
!722 = !DIDerivedType(tag: DW_TAG_member, scope: !719, file: !720, line: 26, baseType: !723, size: 32)
!723 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !719, file: !720, line: 26, size: 32, elements: !724)
!724 = !{!725}
!725 = !DIDerivedType(tag: DW_TAG_member, scope: !723, file: !720, line: 30, baseType: !726, size: 32)
!726 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !723, file: !720, line: 30, size: 32, elements: !727)
!727 = !{!728, !744}
!728 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !726, file: !720, line: 31, baseType: !729)
!729 = !DIDerivedType(tag: DW_TAG_typedef, name: "spinlock_t", file: !730, line: 83, baseType: !731)
!730 = !DIFile(filename: "./include/linux/spinlock_types.h", directory: "/home/lizy2001/genbc/linux")
!731 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "spinlock", file: !730, line: 71, elements: !732)
!732 = !{!733}
!733 = !DIDerivedType(tag: DW_TAG_member, scope: !731, file: !730, line: 72, baseType: !734)
!734 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !731, file: !730, line: 72, elements: !735)
!735 = !{!736}
!736 = !DIDerivedType(tag: DW_TAG_member, name: "rlock", scope: !734, file: !730, line: 73, baseType: !737)
!737 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "raw_spinlock", file: !730, line: 20, elements: !738)
!738 = !{!739}
!739 = !DIDerivedType(tag: DW_TAG_member, name: "raw_lock", scope: !737, file: !730, line: 21, baseType: !740)
!740 = !DIDerivedType(tag: DW_TAG_typedef, name: "arch_spinlock_t", file: !741, line: 25, baseType: !742)
!741 = !DIFile(filename: "./include/linux/spinlock_types_up.h", directory: "/home/lizy2001/genbc/linux")
!742 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !741, line: 25, elements: !743)
!743 = !{}
!744 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !726, file: !720, line: 32, baseType: !37, size: 32)
!745 = !DIDerivedType(tag: DW_TAG_member, name: "d_op", scope: !674, file: !675, line: 102, baseType: !746, size: 64, offset: 768)
!746 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !747, size: 64)
!747 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !748)
!748 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dentry_operations", file: !675, line: 135, size: 1024, align: 512, elements: !749)
!749 = !{!750, !754, !755, !762, !768, !772, !776, !780, !781, !785, !789, !801, !807}
!750 = !DIDerivedType(tag: DW_TAG_member, name: "d_revalidate", scope: !748, file: !675, line: 136, baseType: !751, size: 64)
!751 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !752, size: 64)
!752 = !DISubroutineType(types: !753)
!753 = !{!37, !673, !7}
!754 = !DIDerivedType(tag: DW_TAG_member, name: "d_weak_revalidate", scope: !748, file: !675, line: 137, baseType: !751, size: 64, offset: 64)
!755 = !DIDerivedType(tag: DW_TAG_member, name: "d_hash", scope: !748, file: !675, line: 138, baseType: !756, size: 64, offset: 128)
!756 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !757, size: 64)
!757 = !DISubroutineType(types: !758)
!758 = !{!37, !759, !761}
!759 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !760, size: 64)
!760 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !674)
!761 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !698, size: 64)
!762 = !DIDerivedType(tag: DW_TAG_member, name: "d_compare", scope: !748, file: !675, line: 139, baseType: !763, size: 64, offset: 192)
!763 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !764, size: 64)
!764 = !DISubroutineType(types: !765)
!765 = !{!37, !759, !7, !297, !766}
!766 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !767, size: 64)
!767 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !698)
!768 = !DIDerivedType(tag: DW_TAG_member, name: "d_delete", scope: !748, file: !675, line: 141, baseType: !769, size: 64, offset: 256)
!769 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !770, size: 64)
!770 = !DISubroutineType(types: !771)
!771 = !{!37, !759}
!772 = !DIDerivedType(tag: DW_TAG_member, name: "d_init", scope: !748, file: !675, line: 142, baseType: !773, size: 64, offset: 320)
!773 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !774, size: 64)
!774 = !DISubroutineType(types: !775)
!775 = !{!37, !673}
!776 = !DIDerivedType(tag: DW_TAG_member, name: "d_release", scope: !748, file: !675, line: 143, baseType: !777, size: 64, offset: 384)
!777 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !778, size: 64)
!778 = !DISubroutineType(types: !779)
!779 = !{null, !673}
!780 = !DIDerivedType(tag: DW_TAG_member, name: "d_prune", scope: !748, file: !675, line: 144, baseType: !777, size: 64, offset: 448)
!781 = !DIDerivedType(tag: DW_TAG_member, name: "d_iput", scope: !748, file: !675, line: 145, baseType: !782, size: 64, offset: 512)
!782 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !783, size: 64)
!783 = !DISubroutineType(types: !784)
!784 = !{null, !673, !642}
!785 = !DIDerivedType(tag: DW_TAG_member, name: "d_dname", scope: !748, file: !675, line: 146, baseType: !786, size: 64, offset: 576)
!786 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !787, size: 64)
!787 = !DISubroutineType(types: !788)
!788 = !{!577, !673, !577, !37}
!789 = !DIDerivedType(tag: DW_TAG_member, name: "d_automount", scope: !748, file: !675, line: 147, baseType: !790, size: 64, offset: 640)
!790 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !791, size: 64)
!791 = !DISubroutineType(types: !792)
!792 = !{!793, !795}
!793 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !794, size: 64)
!794 = !DICompositeType(tag: DW_TAG_structure_type, name: "vfsmount", file: !675, line: 18, flags: DIFlagFwdDecl)
!795 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !796, size: 64)
!796 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "path", file: !797, line: 8, size: 128, elements: !798)
!797 = !DIFile(filename: "./include/linux/path.h", directory: "/home/lizy2001/genbc/linux")
!798 = !{!799, !800}
!799 = !DIDerivedType(tag: DW_TAG_member, name: "mnt", scope: !796, file: !797, line: 9, baseType: !793, size: 64)
!800 = !DIDerivedType(tag: DW_TAG_member, name: "dentry", scope: !796, file: !797, line: 10, baseType: !673, size: 64, offset: 64)
!801 = !DIDerivedType(tag: DW_TAG_member, name: "d_manage", scope: !748, file: !675, line: 148, baseType: !802, size: 64, offset: 704)
!802 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !803, size: 64)
!803 = !DISubroutineType(types: !804)
!804 = !{!37, !805, !540}
!805 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !806, size: 64)
!806 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !796)
!807 = !DIDerivedType(tag: DW_TAG_member, name: "d_real", scope: !748, file: !675, line: 149, baseType: !808, size: 64, offset: 768)
!808 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !809, size: 64)
!809 = !DISubroutineType(types: !810)
!810 = !{!673, !673, !811}
!811 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !812, size: 64)
!812 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !643)
!813 = !DIDerivedType(tag: DW_TAG_member, name: "d_sb", scope: !674, file: !675, line: 103, baseType: !814, size: 64, offset: 832)
!814 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !815, size: 64)
!815 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "super_block", file: !639, line: 1416, size: 9472, elements: !816)
!816 = !{!817, !818, !821, !822, !823, !826, !872, !6422, !6510, !6593, !6597, !6598, !6599, !6600, !6601, !6602, !6603, !6604, !6609, !6613, !6614, !6615, !6616, !6619, !6620, !6621, !6662, !6688, !6689, !6690, !6691, !6692, !6693, !6696, !6697, !6703, !6704, !6705, !6706, !6707, !6708, !6709, !6724, !6725, !6726, !6727, !6728, !6729, !6730, !6731, !6746, !6747, !6748, !6749, !6750, !6751, !6752, !6753, !6754}
!817 = !DIDerivedType(tag: DW_TAG_member, name: "s_list", scope: !815, file: !639, line: 1417, baseType: !289, size: 128)
!818 = !DIDerivedType(tag: DW_TAG_member, name: "s_dev", scope: !815, file: !639, line: 1418, baseType: !819, size: 32, offset: 128)
!819 = !DIDerivedType(tag: DW_TAG_typedef, name: "dev_t", file: !282, line: 16, baseType: !820)
!820 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_dev_t", file: !282, line: 13, baseType: !707)
!821 = !DIDerivedType(tag: DW_TAG_member, name: "s_blocksize_bits", scope: !815, file: !639, line: 1419, baseType: !494, size: 8, offset: 160)
!822 = !DIDerivedType(tag: DW_TAG_member, name: "s_blocksize", scope: !815, file: !639, line: 1420, baseType: !317, size: 64, offset: 192)
!823 = !DIDerivedType(tag: DW_TAG_member, name: "s_maxbytes", scope: !815, file: !639, line: 1421, baseType: !824, size: 64, offset: 256)
!824 = !DIDerivedType(tag: DW_TAG_typedef, name: "loff_t", file: !282, line: 46, baseType: !825)
!825 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_loff_t", file: !596, line: 88, baseType: !384)
!826 = !DIDerivedType(tag: DW_TAG_member, name: "s_type", scope: !815, file: !639, line: 1422, baseType: !827, size: 64, offset: 320)
!827 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !828, size: 64)
!828 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_system_type", file: !639, line: 2228, size: 576, elements: !829)
!829 = !{!830, !831, !832, !839, !843, !847, !851, !855, !856, !860, !863, !864, !865, !869, !870, !871}
!830 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !828, file: !639, line: 2229, baseType: !297, size: 64)
!831 = !DIDerivedType(tag: DW_TAG_member, name: "fs_flags", scope: !828, file: !639, line: 2230, baseType: !37, size: 32, offset: 64)
!832 = !DIDerivedType(tag: DW_TAG_member, name: "init_fs_context", scope: !828, file: !639, line: 2238, baseType: !833, size: 64, offset: 128)
!833 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !834, size: 64)
!834 = !DISubroutineType(types: !835)
!835 = !{!37, !836}
!836 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !837, size: 64)
!837 = !DICompositeType(tag: DW_TAG_structure_type, name: "fs_context", file: !838, line: 28, flags: DIFlagFwdDecl)
!838 = !DIFile(filename: "./include/linux/kernfs.h", directory: "/home/lizy2001/genbc/linux")
!839 = !DIDerivedType(tag: DW_TAG_member, name: "parameters", scope: !828, file: !639, line: 2239, baseType: !840, size: 64, offset: 192)
!840 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !841, size: 64)
!841 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !842)
!842 = !DICompositeType(tag: DW_TAG_structure_type, name: "fs_parameter_spec", file: !639, line: 70, flags: DIFlagFwdDecl)
!843 = !DIDerivedType(tag: DW_TAG_member, name: "mount", scope: !828, file: !639, line: 2240, baseType: !844, size: 64, offset: 256)
!844 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !845, size: 64)
!845 = !DISubroutineType(types: !846)
!846 = !{!673, !827, !37, !297, !570}
!847 = !DIDerivedType(tag: DW_TAG_member, name: "kill_sb", scope: !828, file: !639, line: 2242, baseType: !848, size: 64, offset: 320)
!848 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !849, size: 64)
!849 = !DISubroutineType(types: !850)
!850 = !{null, !814}
!851 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !828, file: !639, line: 2243, baseType: !852, size: 64, offset: 384)
!852 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !853, size: 64)
!853 = !DICompositeType(tag: DW_TAG_structure_type, name: "module", file: !854, line: 76, flags: DIFlagFwdDecl)
!854 = !DIFile(filename: "./arch/x86/include/asm/alternative.h", directory: "/home/lizy2001/genbc/linux")
!855 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !828, file: !639, line: 2244, baseType: !827, size: 64, offset: 448)
!856 = !DIDerivedType(tag: DW_TAG_member, name: "fs_supers", scope: !828, file: !639, line: 2245, baseType: !857, size: 64, offset: 512)
!857 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hlist_head", file: !282, line: 182, size: 64, elements: !858)
!858 = !{!859}
!859 = !DIDerivedType(tag: DW_TAG_member, name: "first", scope: !857, file: !282, line: 183, baseType: !285, size: 64)
!860 = !DIDerivedType(tag: DW_TAG_member, name: "s_lock_key", scope: !828, file: !639, line: 2247, baseType: !861, offset: 576)
!861 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lock_class_key", file: !862, line: 187, elements: !743)
!862 = !DIFile(filename: "./include/linux/lockdep_types.h", directory: "/home/lizy2001/genbc/linux")
!863 = !DIDerivedType(tag: DW_TAG_member, name: "s_umount_key", scope: !828, file: !639, line: 2248, baseType: !861, offset: 576)
!864 = !DIDerivedType(tag: DW_TAG_member, name: "s_vfs_rename_key", scope: !828, file: !639, line: 2249, baseType: !861, offset: 576)
!865 = !DIDerivedType(tag: DW_TAG_member, name: "s_writers_key", scope: !828, file: !639, line: 2250, baseType: !866, offset: 576)
!866 = !DICompositeType(tag: DW_TAG_array_type, baseType: !861, elements: !867)
!867 = !{!868}
!868 = !DISubrange(count: 3)
!869 = !DIDerivedType(tag: DW_TAG_member, name: "i_lock_key", scope: !828, file: !639, line: 2252, baseType: !861, offset: 576)
!870 = !DIDerivedType(tag: DW_TAG_member, name: "i_mutex_key", scope: !828, file: !639, line: 2253, baseType: !861, offset: 576)
!871 = !DIDerivedType(tag: DW_TAG_member, name: "i_mutex_dir_key", scope: !828, file: !639, line: 2254, baseType: !861, offset: 576)
!872 = !DIDerivedType(tag: DW_TAG_member, name: "s_op", scope: !815, file: !639, line: 1423, baseType: !873, size: 64, offset: 384)
!873 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !874, size: 64)
!874 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !875)
!875 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "super_operations", file: !639, line: 1935, size: 1472, elements: !876)
!876 = !{!877, !881, !885, !886, !890, !910, !914, !915, !916, !920, !924, !925, !926, !927, !933, !937, !938, !6399, !6400, !6401, !6402, !6406, !6421}
!877 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_inode", scope: !875, file: !639, line: 1936, baseType: !878, size: 64)
!878 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !879, size: 64)
!879 = !DISubroutineType(types: !880)
!880 = !{!642, !814}
!881 = !DIDerivedType(tag: DW_TAG_member, name: "destroy_inode", scope: !875, file: !639, line: 1937, baseType: !882, size: 64, offset: 64)
!882 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !883, size: 64)
!883 = !DISubroutineType(types: !884)
!884 = !{null, !642}
!885 = !DIDerivedType(tag: DW_TAG_member, name: "free_inode", scope: !875, file: !639, line: 1938, baseType: !882, size: 64, offset: 128)
!886 = !DIDerivedType(tag: DW_TAG_member, name: "dirty_inode", scope: !875, file: !639, line: 1940, baseType: !887, size: 64, offset: 192)
!887 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !888, size: 64)
!888 = !DISubroutineType(types: !889)
!889 = !{null, !642, !37}
!890 = !DIDerivedType(tag: DW_TAG_member, name: "write_inode", scope: !875, file: !639, line: 1941, baseType: !891, size: 64, offset: 256)
!891 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !892, size: 64)
!892 = !DISubroutineType(types: !893)
!893 = !{!37, !642, !894}
!894 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !895, size: 64)
!895 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "writeback_control", file: !6, line: 51, size: 320, elements: !896)
!896 = !{!897, !898, !899, !900, !901, !902, !903, !904, !905, !906, !907, !908, !909}
!897 = !DIDerivedType(tag: DW_TAG_member, name: "nr_to_write", scope: !895, file: !6, line: 52, baseType: !513, size: 64)
!898 = !DIDerivedType(tag: DW_TAG_member, name: "pages_skipped", scope: !895, file: !6, line: 54, baseType: !513, size: 64, offset: 64)
!899 = !DIDerivedType(tag: DW_TAG_member, name: "range_start", scope: !895, file: !6, line: 61, baseType: !824, size: 64, offset: 128)
!900 = !DIDerivedType(tag: DW_TAG_member, name: "range_end", scope: !895, file: !6, line: 62, baseType: !824, size: 64, offset: 192)
!901 = !DIDerivedType(tag: DW_TAG_member, name: "sync_mode", scope: !895, file: !6, line: 64, baseType: !5, size: 32, offset: 256)
!902 = !DIDerivedType(tag: DW_TAG_member, name: "for_kupdate", scope: !895, file: !6, line: 66, baseType: !7, size: 1, offset: 288, flags: DIFlagBitField, extraData: i64 288)
!903 = !DIDerivedType(tag: DW_TAG_member, name: "for_background", scope: !895, file: !6, line: 67, baseType: !7, size: 1, offset: 289, flags: DIFlagBitField, extraData: i64 288)
!904 = !DIDerivedType(tag: DW_TAG_member, name: "tagged_writepages", scope: !895, file: !6, line: 68, baseType: !7, size: 1, offset: 290, flags: DIFlagBitField, extraData: i64 288)
!905 = !DIDerivedType(tag: DW_TAG_member, name: "for_reclaim", scope: !895, file: !6, line: 69, baseType: !7, size: 1, offset: 291, flags: DIFlagBitField, extraData: i64 288)
!906 = !DIDerivedType(tag: DW_TAG_member, name: "range_cyclic", scope: !895, file: !6, line: 70, baseType: !7, size: 1, offset: 292, flags: DIFlagBitField, extraData: i64 288)
!907 = !DIDerivedType(tag: DW_TAG_member, name: "for_sync", scope: !895, file: !6, line: 71, baseType: !7, size: 1, offset: 293, flags: DIFlagBitField, extraData: i64 288)
!908 = !DIDerivedType(tag: DW_TAG_member, name: "no_cgroup_owner", scope: !895, file: !6, line: 79, baseType: !7, size: 1, offset: 294, flags: DIFlagBitField, extraData: i64 288)
!909 = !DIDerivedType(tag: DW_TAG_member, name: "punt_to_cgroup", scope: !895, file: !6, line: 81, baseType: !7, size: 1, offset: 295, flags: DIFlagBitField, extraData: i64 288)
!910 = !DIDerivedType(tag: DW_TAG_member, name: "drop_inode", scope: !875, file: !639, line: 1942, baseType: !911, size: 64, offset: 320)
!911 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !912, size: 64)
!912 = !DISubroutineType(types: !913)
!913 = !{!37, !642}
!914 = !DIDerivedType(tag: DW_TAG_member, name: "evict_inode", scope: !875, file: !639, line: 1943, baseType: !882, size: 64, offset: 384)
!915 = !DIDerivedType(tag: DW_TAG_member, name: "put_super", scope: !875, file: !639, line: 1944, baseType: !848, size: 64, offset: 448)
!916 = !DIDerivedType(tag: DW_TAG_member, name: "sync_fs", scope: !875, file: !639, line: 1945, baseType: !917, size: 64, offset: 512)
!917 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !918, size: 64)
!918 = !DISubroutineType(types: !919)
!919 = !{!37, !814, !37}
!920 = !DIDerivedType(tag: DW_TAG_member, name: "freeze_super", scope: !875, file: !639, line: 1946, baseType: !921, size: 64, offset: 576)
!921 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !922, size: 64)
!922 = !DISubroutineType(types: !923)
!923 = !{!37, !814}
!924 = !DIDerivedType(tag: DW_TAG_member, name: "freeze_fs", scope: !875, file: !639, line: 1947, baseType: !921, size: 64, offset: 640)
!925 = !DIDerivedType(tag: DW_TAG_member, name: "thaw_super", scope: !875, file: !639, line: 1948, baseType: !921, size: 64, offset: 704)
!926 = !DIDerivedType(tag: DW_TAG_member, name: "unfreeze_fs", scope: !875, file: !639, line: 1949, baseType: !921, size: 64, offset: 768)
!927 = !DIDerivedType(tag: DW_TAG_member, name: "statfs", scope: !875, file: !639, line: 1950, baseType: !928, size: 64, offset: 832)
!928 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !929, size: 64)
!929 = !DISubroutineType(types: !930)
!930 = !{!37, !673, !931}
!931 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !932, size: 64)
!932 = !DICompositeType(tag: DW_TAG_structure_type, name: "kstatfs", file: !639, line: 57, flags: DIFlagFwdDecl)
!933 = !DIDerivedType(tag: DW_TAG_member, name: "remount_fs", scope: !875, file: !639, line: 1951, baseType: !934, size: 64, offset: 896)
!934 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !935, size: 64)
!935 = !DISubroutineType(types: !936)
!936 = !{!37, !814, !539, !577}
!937 = !DIDerivedType(tag: DW_TAG_member, name: "umount_begin", scope: !875, file: !639, line: 1952, baseType: !848, size: 64, offset: 960)
!938 = !DIDerivedType(tag: DW_TAG_member, name: "show_options", scope: !875, file: !639, line: 1954, baseType: !939, size: 64, offset: 1024)
!939 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !940, size: 64)
!940 = !DISubroutineType(types: !941)
!941 = !{!37, !942, !673}
!942 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !943, size: 64)
!943 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seq_file", file: !944, line: 16, size: 896, elements: !945)
!944 = !DIFile(filename: "./include/linux/seq_file.h", directory: "/home/lizy2001/genbc/linux")
!945 = !{!946, !947, !948, !949, !950, !951, !952, !953, !960, !982, !983, !6398}
!946 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !943, file: !944, line: 17, baseType: !577, size: 64)
!947 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !943, file: !944, line: 18, baseType: !594, size: 64, offset: 64)
!948 = !DIDerivedType(tag: DW_TAG_member, name: "from", scope: !943, file: !944, line: 19, baseType: !594, size: 64, offset: 128)
!949 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !943, file: !944, line: 20, baseType: !594, size: 64, offset: 192)
!950 = !DIDerivedType(tag: DW_TAG_member, name: "pad_until", scope: !943, file: !944, line: 21, baseType: !594, size: 64, offset: 256)
!951 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !943, file: !944, line: 22, baseType: !824, size: 64, offset: 320)
!952 = !DIDerivedType(tag: DW_TAG_member, name: "read_pos", scope: !943, file: !944, line: 23, baseType: !824, size: 64, offset: 384)
!953 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !943, file: !944, line: 24, baseType: !954, size: 192, offset: 448)
!954 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mutex", file: !955, line: 53, size: 192, elements: !956)
!955 = !DIFile(filename: "./include/linux/mutex.h", directory: "/home/lizy2001/genbc/linux")
!956 = !{!957, !958, !959}
!957 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !954, file: !955, line: 54, baseType: !376, size: 64)
!958 = !DIDerivedType(tag: DW_TAG_member, name: "wait_lock", scope: !954, file: !955, line: 55, baseType: !729, offset: 64)
!959 = !DIDerivedType(tag: DW_TAG_member, name: "wait_list", scope: !954, file: !955, line: 59, baseType: !289, size: 128, offset: 64)
!960 = !DIDerivedType(tag: DW_TAG_member, name: "op", scope: !943, file: !944, line: 25, baseType: !961, size: 64, offset: 640)
!961 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !962, size: 64)
!962 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !963)
!963 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seq_operations", file: !944, line: 31, size: 256, elements: !964)
!964 = !{!965, !970, !974, !978}
!965 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !963, file: !944, line: 32, baseType: !966, size: 64)
!966 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !967, size: 64)
!967 = !DISubroutineType(types: !968)
!968 = !{!570, !942, !969}
!969 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !824, size: 64)
!970 = !DIDerivedType(tag: DW_TAG_member, name: "stop", scope: !963, file: !944, line: 33, baseType: !971, size: 64, offset: 64)
!971 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !972, size: 64)
!972 = !DISubroutineType(types: !973)
!973 = !{null, !942, !570}
!974 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !963, file: !944, line: 34, baseType: !975, size: 64, offset: 128)
!975 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !976, size: 64)
!976 = !DISubroutineType(types: !977)
!977 = !{!570, !942, !570, !969}
!978 = !DIDerivedType(tag: DW_TAG_member, name: "show", scope: !963, file: !944, line: 35, baseType: !979, size: 64, offset: 192)
!979 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !980, size: 64)
!980 = !DISubroutineType(types: !981)
!981 = !{!37, !942, !570}
!982 = !DIDerivedType(tag: DW_TAG_member, name: "poll_event", scope: !943, file: !944, line: 26, baseType: !37, size: 32, offset: 704)
!983 = !DIDerivedType(tag: DW_TAG_member, name: "file", scope: !943, file: !944, line: 27, baseType: !984, size: 64, offset: 768)
!984 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !985, size: 64)
!985 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !986)
!986 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file", file: !639, line: 916, size: 1856, align: 32, elements: !987)
!987 = !{!988, !998, !999, !1000, !6348, !6349, !6358, !6359, !6360, !6361, !6362, !6363, !6379, !6380, !6389, !6390, !6391, !6392, !6393, !6394, !6397}
!988 = !DIDerivedType(tag: DW_TAG_member, name: "f_u", scope: !986, file: !639, line: 920, baseType: !989, size: 128)
!989 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !986, file: !639, line: 917, size: 128, elements: !990)
!990 = !{!991, !997}
!991 = !DIDerivedType(tag: DW_TAG_member, name: "fu_llist", scope: !989, file: !639, line: 918, baseType: !992, size: 64)
!992 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "llist_node", file: !993, line: 58, size: 64, elements: !994)
!993 = !DIFile(filename: "./include/linux/llist.h", directory: "/home/lizy2001/genbc/linux")
!994 = !{!995}
!995 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !992, file: !993, line: 59, baseType: !996, size: 64)
!996 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !992, size: 64)
!997 = !DIDerivedType(tag: DW_TAG_member, name: "fu_rcuhead", scope: !989, file: !639, line: 919, baseType: !304, size: 128, align: 64)
!998 = !DIDerivedType(tag: DW_TAG_member, name: "f_path", scope: !986, file: !639, line: 921, baseType: !796, size: 128, offset: 128)
!999 = !DIDerivedType(tag: DW_TAG_member, name: "f_inode", scope: !986, file: !639, line: 922, baseType: !642, size: 64, offset: 256)
!1000 = !DIDerivedType(tag: DW_TAG_member, name: "f_op", scope: !986, file: !639, line: 923, baseType: !1001, size: 64, offset: 320)
!1001 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1002, size: 64)
!1002 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1003)
!1003 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_operations", file: !639, line: 1822, size: 2048, elements: !1004)
!1004 = !{!1005, !1006, !1011, !1018, !1022, !1066, !1067, !1071, !1084, !1085, !1106, !1110, !1111, !6197, !6198, !6202, !6207, !6208, !6212, !6216, !6308, !6312, !6313, !6317, !6318, !6322, !6326, !6331, !6335, !6339, !6343, !6347}
!1005 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !1003, file: !639, line: 1823, baseType: !852, size: 64)
!1006 = !DIDerivedType(tag: DW_TAG_member, name: "llseek", scope: !1003, file: !639, line: 1824, baseType: !1007, size: 64, offset: 64)
!1007 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1008, size: 64)
!1008 = !DISubroutineType(types: !1009)
!1009 = !{!824, !1010, !824, !37}
!1010 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !986, size: 64)
!1011 = !DIDerivedType(tag: DW_TAG_member, name: "read", scope: !1003, file: !639, line: 1825, baseType: !1012, size: 64, offset: 128)
!1012 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1013, size: 64)
!1013 = !DISubroutineType(types: !1014)
!1014 = !{!1015, !1010, !577, !594, !969}
!1015 = !DIDerivedType(tag: DW_TAG_typedef, name: "ssize_t", file: !282, line: 60, baseType: !1016)
!1016 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_ssize_t", file: !596, line: 73, baseType: !1017)
!1017 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_long_t", file: !596, line: 15, baseType: !513)
!1018 = !DIDerivedType(tag: DW_TAG_member, name: "write", scope: !1003, file: !639, line: 1826, baseType: !1019, size: 64, offset: 192)
!1019 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1020, size: 64)
!1020 = !DISubroutineType(types: !1021)
!1021 = !{!1015, !1010, !297, !594, !969}
!1022 = !DIDerivedType(tag: DW_TAG_member, name: "read_iter", scope: !1003, file: !639, line: 1827, baseType: !1023, size: 64, offset: 256)
!1023 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1024, size: 64)
!1024 = !DISubroutineType(types: !1025)
!1025 = !{!1015, !1026, !1065}
!1026 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1027, size: 64)
!1027 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kiocb", file: !639, line: 320, size: 384, elements: !1028)
!1028 = !{!1029, !1030, !1031, !1035, !1036, !1037, !1039, !1040}
!1029 = !DIDerivedType(tag: DW_TAG_member, name: "ki_filp", scope: !1027, file: !639, line: 321, baseType: !1010, size: 64)
!1030 = !DIDerivedType(tag: DW_TAG_member, name: "ki_pos", scope: !1027, file: !639, line: 326, baseType: !824, size: 64, offset: 64)
!1031 = !DIDerivedType(tag: DW_TAG_member, name: "ki_complete", scope: !1027, file: !639, line: 327, baseType: !1032, size: 64, offset: 128)
!1032 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1033, size: 64)
!1033 = !DISubroutineType(types: !1034)
!1034 = !{null, !1026, !513, !513}
!1035 = !DIDerivedType(tag: DW_TAG_member, name: "private", scope: !1027, file: !639, line: 328, baseType: !570, size: 64, offset: 192)
!1036 = !DIDerivedType(tag: DW_TAG_member, name: "ki_flags", scope: !1027, file: !639, line: 329, baseType: !37, size: 32, offset: 256)
!1037 = !DIDerivedType(tag: DW_TAG_member, name: "ki_hint", scope: !1027, file: !639, line: 330, baseType: !1038, size: 16, offset: 288)
!1038 = !DIDerivedType(tag: DW_TAG_typedef, name: "u16", file: !337, line: 19, baseType: !476)
!1039 = !DIDerivedType(tag: DW_TAG_member, name: "ki_ioprio", scope: !1027, file: !639, line: 331, baseType: !1038, size: 16, offset: 304)
!1040 = !DIDerivedType(tag: DW_TAG_member, scope: !1027, file: !639, line: 332, baseType: !1041, size: 64, offset: 320)
!1041 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1027, file: !639, line: 332, size: 64, elements: !1042)
!1042 = !{!1043, !1044}
!1043 = !DIDerivedType(tag: DW_TAG_member, name: "ki_cookie", scope: !1041, file: !639, line: 333, baseType: !7, size: 32)
!1044 = !DIDerivedType(tag: DW_TAG_member, name: "ki_waitq", scope: !1041, file: !639, line: 334, baseType: !1045, size: 64)
!1045 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1046, size: 64)
!1046 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wait_page_queue", file: !1047, line: 569, size: 448, elements: !1048)
!1047 = !DIFile(filename: "./include/linux/pagemap.h", directory: "/home/lizy2001/genbc/linux")
!1048 = !{!1049, !1050, !1051}
!1049 = !DIDerivedType(tag: DW_TAG_member, name: "page", scope: !1046, file: !1047, line: 570, baseType: !624, size: 64)
!1050 = !DIDerivedType(tag: DW_TAG_member, name: "bit_nr", scope: !1046, file: !1047, line: 571, baseType: !37, size: 32, offset: 64)
!1051 = !DIDerivedType(tag: DW_TAG_member, name: "wait", scope: !1046, file: !1047, line: 572, baseType: !1052, size: 320, offset: 128)
!1052 = !DIDerivedType(tag: DW_TAG_typedef, name: "wait_queue_entry_t", file: !1053, line: 14, baseType: !1054)
!1053 = !DIFile(filename: "./include/linux/wait.h", directory: "/home/lizy2001/genbc/linux")
!1054 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wait_queue_entry", file: !1053, line: 29, size: 320, elements: !1055)
!1055 = !{!1056, !1057, !1058, !1064}
!1056 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1054, file: !1053, line: 30, baseType: !7, size: 32)
!1057 = !DIDerivedType(tag: DW_TAG_member, name: "private", scope: !1054, file: !1053, line: 31, baseType: !570, size: 64, offset: 64)
!1058 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !1054, file: !1053, line: 32, baseType: !1059, size: 64, offset: 128)
!1059 = !DIDerivedType(tag: DW_TAG_typedef, name: "wait_queue_func_t", file: !1053, line: 16, baseType: !1060)
!1060 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1061, size: 64)
!1061 = !DISubroutineType(types: !1062)
!1062 = !{!37, !1063, !7, !37, !570}
!1063 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1054, size: 64)
!1064 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !1054, file: !1053, line: 33, baseType: !289, size: 128, offset: 192)
!1065 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !589, size: 64)
!1066 = !DIDerivedType(tag: DW_TAG_member, name: "write_iter", scope: !1003, file: !639, line: 1828, baseType: !1023, size: 64, offset: 320)
!1067 = !DIDerivedType(tag: DW_TAG_member, name: "iopoll", scope: !1003, file: !639, line: 1829, baseType: !1068, size: 64, offset: 384)
!1068 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1069, size: 64)
!1069 = !DISubroutineType(types: !1070)
!1070 = !{!37, !1026, !540}
!1071 = !DIDerivedType(tag: DW_TAG_member, name: "iterate", scope: !1003, file: !639, line: 1830, baseType: !1072, size: 64, offset: 448)
!1072 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1073, size: 64)
!1073 = !DISubroutineType(types: !1074)
!1074 = !{!37, !1010, !1075}
!1075 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1076, size: 64)
!1076 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dir_context", file: !639, line: 1776, size: 128, elements: !1077)
!1077 = !{!1078, !1083}
!1078 = !DIDerivedType(tag: DW_TAG_member, name: "actor", scope: !1076, file: !639, line: 1777, baseType: !1079, size: 64)
!1079 = !DIDerivedType(tag: DW_TAG_typedef, name: "filldir_t", file: !639, line: 1773, baseType: !1080)
!1080 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1081, size: 64)
!1081 = !DISubroutineType(types: !1082)
!1082 = !{!37, !1075, !297, !37, !824, !336, !7}
!1083 = !DIDerivedType(tag: DW_TAG_member, name: "pos", scope: !1076, file: !639, line: 1778, baseType: !824, size: 64, offset: 64)
!1084 = !DIDerivedType(tag: DW_TAG_member, name: "iterate_shared", scope: !1003, file: !639, line: 1831, baseType: !1072, size: 64, offset: 512)
!1085 = !DIDerivedType(tag: DW_TAG_member, name: "poll", scope: !1003, file: !639, line: 1832, baseType: !1086, size: 64, offset: 576)
!1086 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1087, size: 64)
!1087 = !DISubroutineType(types: !1088)
!1088 = !{!1089, !1010, !1090}
!1089 = !DIDerivedType(tag: DW_TAG_typedef, name: "__poll_t", file: !467, line: 52, baseType: !7)
!1090 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1091, size: 64)
!1091 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "poll_table_struct", file: !1092, line: 43, size: 128, elements: !1093)
!1092 = !DIFile(filename: "./include/linux/poll.h", directory: "/home/lizy2001/genbc/linux")
!1093 = !{!1094, !1105}
!1094 = !DIDerivedType(tag: DW_TAG_member, name: "_qproc", scope: !1091, file: !1092, line: 44, baseType: !1095, size: 64)
!1095 = !DIDerivedType(tag: DW_TAG_typedef, name: "poll_queue_proc", file: !1092, line: 37, baseType: !1096)
!1096 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1097, size: 64)
!1097 = !DISubroutineType(types: !1098)
!1098 = !{null, !1010, !1099, !1090}
!1099 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1100, size: 64)
!1100 = !DIDerivedType(tag: DW_TAG_typedef, name: "wait_queue_head_t", file: !1053, line: 40, baseType: !1101)
!1101 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wait_queue_head", file: !1053, line: 36, size: 128, elements: !1102)
!1102 = !{!1103, !1104}
!1103 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1101, file: !1053, line: 37, baseType: !729)
!1104 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !1101, file: !1053, line: 38, baseType: !289, size: 128)
!1105 = !DIDerivedType(tag: DW_TAG_member, name: "_key", scope: !1091, file: !1092, line: 45, baseType: !1089, size: 32, offset: 64)
!1106 = !DIDerivedType(tag: DW_TAG_member, name: "unlocked_ioctl", scope: !1003, file: !639, line: 1833, baseType: !1107, size: 64, offset: 640)
!1107 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1108, size: 64)
!1108 = !DISubroutineType(types: !1109)
!1109 = !{!513, !1010, !7, !317}
!1110 = !DIDerivedType(tag: DW_TAG_member, name: "compat_ioctl", scope: !1003, file: !639, line: 1834, baseType: !1107, size: 64, offset: 704)
!1111 = !DIDerivedType(tag: DW_TAG_member, name: "mmap", scope: !1003, file: !639, line: 1835, baseType: !1112, size: 64, offset: 768)
!1112 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1113, size: 64)
!1113 = !DISubroutineType(types: !1114)
!1114 = !{!37, !1010, !1115}
!1115 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1116, size: 64)
!1116 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vm_area_struct", file: !626, line: 305, size: 1472, elements: !1117)
!1117 = !{!1118, !1119, !1120, !1121, !1122, !1123, !1124, !6174, !6180, !6181, !6186, !6187, !6190, !6191, !6192, !6193, !6194, !6195}
!1118 = !DIDerivedType(tag: DW_TAG_member, name: "vm_start", scope: !1116, file: !626, line: 308, baseType: !317, size: 64)
!1119 = !DIDerivedType(tag: DW_TAG_member, name: "vm_end", scope: !1116, file: !626, line: 309, baseType: !317, size: 64, offset: 64)
!1120 = !DIDerivedType(tag: DW_TAG_member, name: "vm_next", scope: !1116, file: !626, line: 313, baseType: !1115, size: 64, offset: 128)
!1121 = !DIDerivedType(tag: DW_TAG_member, name: "vm_prev", scope: !1116, file: !626, line: 313, baseType: !1115, size: 64, offset: 192)
!1122 = !DIDerivedType(tag: DW_TAG_member, name: "vm_rb", scope: !1116, file: !626, line: 315, baseType: !438, size: 192, align: 64, offset: 256)
!1123 = !DIDerivedType(tag: DW_TAG_member, name: "rb_subtree_gap", scope: !1116, file: !626, line: 323, baseType: !317, size: 64, offset: 448)
!1124 = !DIDerivedType(tag: DW_TAG_member, name: "vm_mm", scope: !1116, file: !626, line: 327, baseType: !1125, size: 64, offset: 512)
!1125 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1126, size: 64)
!1126 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mm_struct", file: !626, line: 388, size: 7296, elements: !1127)
!1127 = !{!1128, !6172}
!1128 = !DIDerivedType(tag: DW_TAG_member, scope: !1126, file: !626, line: 389, baseType: !1129, size: 7296)
!1129 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1126, file: !626, line: 389, size: 7296, elements: !1130)
!1130 = !{!1131, !1132, !1136, !1137, !1141, !1142, !1143, !1144, !1145, !1154, !1155, !1156, !1157, !1158, !1159, !1160, !1161, !1170, !1171, !1172, !1173, !1174, !1175, !1176, !1177, !1178, !1179, !1180, !1181, !1182, !1183, !1184, !1185, !1186, !1187, !1188, !1189, !1190, !1191, !1192, !1196, !1204, !1207, !1247, !1248, !6156, !6157, !6160, !6161, !6162, !6165, !6166, !6167, !6170, !6171}
!1131 = !DIDerivedType(tag: DW_TAG_member, name: "mmap", scope: !1129, file: !626, line: 390, baseType: !1115, size: 64)
!1132 = !DIDerivedType(tag: DW_TAG_member, name: "mm_rb", scope: !1129, file: !626, line: 391, baseType: !1133, size: 64, offset: 64)
!1133 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rb_root", file: !439, line: 31, size: 64, elements: !1134)
!1134 = !{!1135}
!1135 = !DIDerivedType(tag: DW_TAG_member, name: "rb_node", scope: !1133, file: !439, line: 32, baseType: !443, size: 64)
!1136 = !DIDerivedType(tag: DW_TAG_member, name: "vmacache_seqnum", scope: !1129, file: !626, line: 392, baseType: !336, size: 64, offset: 128)
!1137 = !DIDerivedType(tag: DW_TAG_member, name: "get_unmapped_area", scope: !1129, file: !626, line: 394, baseType: !1138, size: 64, offset: 192)
!1138 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1139, size: 64)
!1139 = !DISubroutineType(types: !1140)
!1140 = !{!317, !1010, !317, !317, !317, !317}
!1141 = !DIDerivedType(tag: DW_TAG_member, name: "mmap_base", scope: !1129, file: !626, line: 398, baseType: !317, size: 64, offset: 256)
!1142 = !DIDerivedType(tag: DW_TAG_member, name: "mmap_legacy_base", scope: !1129, file: !626, line: 399, baseType: !317, size: 64, offset: 320)
!1143 = !DIDerivedType(tag: DW_TAG_member, name: "task_size", scope: !1129, file: !626, line: 405, baseType: !317, size: 64, offset: 384)
!1144 = !DIDerivedType(tag: DW_TAG_member, name: "highest_vm_end", scope: !1129, file: !626, line: 406, baseType: !317, size: 64, offset: 448)
!1145 = !DIDerivedType(tag: DW_TAG_member, name: "pgd", scope: !1129, file: !626, line: 407, baseType: !1146, size: 64, offset: 512)
!1146 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1147, size: 64)
!1147 = !DIDerivedType(tag: DW_TAG_typedef, name: "pgd_t", file: !1148, line: 286, baseType: !1149)
!1148 = !DIFile(filename: "./arch/x86/include/asm/pgtable_types.h", directory: "/home/lizy2001/genbc/linux")
!1149 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1148, line: 286, size: 64, elements: !1150)
!1150 = !{!1151}
!1151 = !DIDerivedType(tag: DW_TAG_member, name: "pgd", scope: !1149, file: !1148, line: 286, baseType: !1152, size: 64)
!1152 = !DIDerivedType(tag: DW_TAG_typedef, name: "pgdval_t", file: !1153, line: 18, baseType: !317)
!1153 = !DIFile(filename: "./arch/x86/include/asm/pgtable_64_types.h", directory: "/home/lizy2001/genbc/linux")
!1154 = !DIDerivedType(tag: DW_TAG_member, name: "membarrier_state", scope: !1129, file: !626, line: 416, baseType: !388, size: 32, offset: 576)
!1155 = !DIDerivedType(tag: DW_TAG_member, name: "mm_users", scope: !1129, file: !626, line: 428, baseType: !388, size: 32, offset: 608)
!1156 = !DIDerivedType(tag: DW_TAG_member, name: "mm_count", scope: !1129, file: !626, line: 437, baseType: !388, size: 32, offset: 640)
!1157 = !DIDerivedType(tag: DW_TAG_member, name: "has_pinned", scope: !1129, file: !626, line: 447, baseType: !388, size: 32, offset: 672)
!1158 = !DIDerivedType(tag: DW_TAG_member, name: "pgtables_bytes", scope: !1129, file: !626, line: 450, baseType: !376, size: 64, offset: 704)
!1159 = !DIDerivedType(tag: DW_TAG_member, name: "map_count", scope: !1129, file: !626, line: 452, baseType: !37, size: 32, offset: 768)
!1160 = !DIDerivedType(tag: DW_TAG_member, name: "page_table_lock", scope: !1129, file: !626, line: 454, baseType: !729, offset: 800)
!1161 = !DIDerivedType(tag: DW_TAG_member, name: "mmap_lock", scope: !1129, file: !626, line: 457, baseType: !1162, size: 256, offset: 832)
!1162 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rw_semaphore", file: !1163, line: 35, size: 256, elements: !1164)
!1163 = !DIFile(filename: "./include/linux/rwsem.h", directory: "/home/lizy2001/genbc/linux")
!1164 = !{!1165, !1166, !1167, !1169}
!1165 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !1162, file: !1163, line: 36, baseType: !376, size: 64)
!1166 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !1162, file: !1163, line: 42, baseType: !376, size: 64, offset: 64)
!1167 = !DIDerivedType(tag: DW_TAG_member, name: "wait_lock", scope: !1162, file: !1163, line: 46, baseType: !1168, offset: 128)
!1168 = !DIDerivedType(tag: DW_TAG_typedef, name: "raw_spinlock_t", file: !730, line: 29, baseType: !737)
!1169 = !DIDerivedType(tag: DW_TAG_member, name: "wait_list", scope: !1162, file: !1163, line: 47, baseType: !289, size: 128, offset: 128)
!1170 = !DIDerivedType(tag: DW_TAG_member, name: "mmlist", scope: !1129, file: !626, line: 459, baseType: !289, size: 128, offset: 1088)
!1171 = !DIDerivedType(tag: DW_TAG_member, name: "hiwater_rss", scope: !1129, file: !626, line: 466, baseType: !317, size: 64, offset: 1216)
!1172 = !DIDerivedType(tag: DW_TAG_member, name: "hiwater_vm", scope: !1129, file: !626, line: 467, baseType: !317, size: 64, offset: 1280)
!1173 = !DIDerivedType(tag: DW_TAG_member, name: "total_vm", scope: !1129, file: !626, line: 469, baseType: !317, size: 64, offset: 1344)
!1174 = !DIDerivedType(tag: DW_TAG_member, name: "locked_vm", scope: !1129, file: !626, line: 470, baseType: !317, size: 64, offset: 1408)
!1175 = !DIDerivedType(tag: DW_TAG_member, name: "pinned_vm", scope: !1129, file: !626, line: 471, baseType: !378, size: 64, offset: 1472)
!1176 = !DIDerivedType(tag: DW_TAG_member, name: "data_vm", scope: !1129, file: !626, line: 472, baseType: !317, size: 64, offset: 1536)
!1177 = !DIDerivedType(tag: DW_TAG_member, name: "exec_vm", scope: !1129, file: !626, line: 473, baseType: !317, size: 64, offset: 1600)
!1178 = !DIDerivedType(tag: DW_TAG_member, name: "stack_vm", scope: !1129, file: !626, line: 474, baseType: !317, size: 64, offset: 1664)
!1179 = !DIDerivedType(tag: DW_TAG_member, name: "def_flags", scope: !1129, file: !626, line: 475, baseType: !317, size: 64, offset: 1728)
!1180 = !DIDerivedType(tag: DW_TAG_member, name: "arg_lock", scope: !1129, file: !626, line: 477, baseType: !729, offset: 1792)
!1181 = !DIDerivedType(tag: DW_TAG_member, name: "start_code", scope: !1129, file: !626, line: 478, baseType: !317, size: 64, offset: 1792)
!1182 = !DIDerivedType(tag: DW_TAG_member, name: "end_code", scope: !1129, file: !626, line: 478, baseType: !317, size: 64, offset: 1856)
!1183 = !DIDerivedType(tag: DW_TAG_member, name: "start_data", scope: !1129, file: !626, line: 478, baseType: !317, size: 64, offset: 1920)
!1184 = !DIDerivedType(tag: DW_TAG_member, name: "end_data", scope: !1129, file: !626, line: 478, baseType: !317, size: 64, offset: 1984)
!1185 = !DIDerivedType(tag: DW_TAG_member, name: "start_brk", scope: !1129, file: !626, line: 479, baseType: !317, size: 64, offset: 2048)
!1186 = !DIDerivedType(tag: DW_TAG_member, name: "brk", scope: !1129, file: !626, line: 479, baseType: !317, size: 64, offset: 2112)
!1187 = !DIDerivedType(tag: DW_TAG_member, name: "start_stack", scope: !1129, file: !626, line: 479, baseType: !317, size: 64, offset: 2176)
!1188 = !DIDerivedType(tag: DW_TAG_member, name: "arg_start", scope: !1129, file: !626, line: 480, baseType: !317, size: 64, offset: 2240)
!1189 = !DIDerivedType(tag: DW_TAG_member, name: "arg_end", scope: !1129, file: !626, line: 480, baseType: !317, size: 64, offset: 2304)
!1190 = !DIDerivedType(tag: DW_TAG_member, name: "env_start", scope: !1129, file: !626, line: 480, baseType: !317, size: 64, offset: 2368)
!1191 = !DIDerivedType(tag: DW_TAG_member, name: "env_end", scope: !1129, file: !626, line: 480, baseType: !317, size: 64, offset: 2432)
!1192 = !DIDerivedType(tag: DW_TAG_member, name: "saved_auxv", scope: !1129, file: !626, line: 482, baseType: !1193, size: 2816, offset: 2496)
!1193 = !DICompositeType(tag: DW_TAG_array_type, baseType: !317, size: 2816, elements: !1194)
!1194 = !{!1195}
!1195 = !DISubrange(count: 44)
!1196 = !DIDerivedType(tag: DW_TAG_member, name: "rss_stat", scope: !1129, file: !626, line: 488, baseType: !1197, size: 256, offset: 5312)
!1197 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mm_rss_stat", file: !1198, line: 60, size: 256, elements: !1199)
!1198 = !DIFile(filename: "./include/linux/mm_types_task.h", directory: "/home/lizy2001/genbc/linux")
!1199 = !{!1200}
!1200 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !1197, file: !1198, line: 61, baseType: !1201, size: 256)
!1201 = !DICompositeType(tag: DW_TAG_array_type, baseType: !376, size: 256, elements: !1202)
!1202 = !{!1203}
!1203 = !DISubrange(count: 4)
!1204 = !DIDerivedType(tag: DW_TAG_member, name: "binfmt", scope: !1129, file: !626, line: 490, baseType: !1205, size: 64, offset: 5568)
!1205 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1206, size: 64)
!1206 = !DICompositeType(tag: DW_TAG_structure_type, name: "linux_binfmt", file: !626, line: 490, flags: DIFlagFwdDecl)
!1207 = !DIDerivedType(tag: DW_TAG_member, name: "context", scope: !1129, file: !626, line: 493, baseType: !1208, size: 896, offset: 5632)
!1208 = !DIDerivedType(tag: DW_TAG_typedef, name: "mm_context_t", file: !1209, line: 53, baseType: !1210)
!1209 = !DIFile(filename: "./arch/x86/include/asm/mmu.h", directory: "/home/lizy2001/genbc/linux")
!1210 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1209, line: 13, size: 896, elements: !1211)
!1211 = !{!1212, !1213, !1214, !1215, !1218, !1219, !1220, !1221, !1241, !1242, !1243}
!1212 = !DIDerivedType(tag: DW_TAG_member, name: "ctx_id", scope: !1210, file: !1209, line: 18, baseType: !336, size: 64)
!1213 = !DIDerivedType(tag: DW_TAG_member, name: "tlb_gen", scope: !1210, file: !1209, line: 28, baseType: !378, size: 64, offset: 64)
!1214 = !DIDerivedType(tag: DW_TAG_member, name: "ldt_usr_sem", scope: !1210, file: !1209, line: 31, baseType: !1162, size: 256, offset: 128)
!1215 = !DIDerivedType(tag: DW_TAG_member, name: "ldt", scope: !1210, file: !1209, line: 32, baseType: !1216, size: 64, offset: 384)
!1216 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1217, size: 64)
!1217 = !DICompositeType(tag: DW_TAG_structure_type, name: "ldt_struct", file: !1209, line: 32, flags: DIFlagFwdDecl)
!1218 = !DIDerivedType(tag: DW_TAG_member, name: "ia32_compat", scope: !1210, file: !1209, line: 37, baseType: !477, size: 16, offset: 448)
!1219 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1210, file: !1209, line: 40, baseType: !954, size: 192, offset: 512)
!1220 = !DIDerivedType(tag: DW_TAG_member, name: "vdso", scope: !1210, file: !1209, line: 41, baseType: !570, size: 64, offset: 704)
!1221 = !DIDerivedType(tag: DW_TAG_member, name: "vdso_image", scope: !1210, file: !1209, line: 42, baseType: !1222, size: 64, offset: 768)
!1222 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1223, size: 64)
!1223 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1224)
!1224 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vdso_image", file: !1225, line: 13, size: 896, elements: !1226)
!1225 = !DIFile(filename: "./arch/x86/include/asm/vdso.h", directory: "/home/lizy2001/genbc/linux")
!1226 = !{!1227, !1228, !1229, !1230, !1231, !1232, !1233, !1234, !1235, !1236, !1237, !1238, !1239, !1240}
!1227 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1224, file: !1225, line: 14, baseType: !570, size: 64)
!1228 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1224, file: !1225, line: 15, baseType: !317, size: 64, offset: 64)
!1229 = !DIDerivedType(tag: DW_TAG_member, name: "alt", scope: !1224, file: !1225, line: 17, baseType: !317, size: 64, offset: 128)
!1230 = !DIDerivedType(tag: DW_TAG_member, name: "alt_len", scope: !1224, file: !1225, line: 17, baseType: !317, size: 64, offset: 192)
!1231 = !DIDerivedType(tag: DW_TAG_member, name: "sym_vvar_start", scope: !1224, file: !1225, line: 19, baseType: !513, size: 64, offset: 256)
!1232 = !DIDerivedType(tag: DW_TAG_member, name: "sym_vvar_page", scope: !1224, file: !1225, line: 21, baseType: !513, size: 64, offset: 320)
!1233 = !DIDerivedType(tag: DW_TAG_member, name: "sym_pvclock_page", scope: !1224, file: !1225, line: 22, baseType: !513, size: 64, offset: 384)
!1234 = !DIDerivedType(tag: DW_TAG_member, name: "sym_hvclock_page", scope: !1224, file: !1225, line: 23, baseType: !513, size: 64, offset: 448)
!1235 = !DIDerivedType(tag: DW_TAG_member, name: "sym_timens_page", scope: !1224, file: !1225, line: 24, baseType: !513, size: 64, offset: 512)
!1236 = !DIDerivedType(tag: DW_TAG_member, name: "sym_VDSO32_NOTE_MASK", scope: !1224, file: !1225, line: 25, baseType: !513, size: 64, offset: 576)
!1237 = !DIDerivedType(tag: DW_TAG_member, name: "sym___kernel_sigreturn", scope: !1224, file: !1225, line: 26, baseType: !513, size: 64, offset: 640)
!1238 = !DIDerivedType(tag: DW_TAG_member, name: "sym___kernel_rt_sigreturn", scope: !1224, file: !1225, line: 27, baseType: !513, size: 64, offset: 704)
!1239 = !DIDerivedType(tag: DW_TAG_member, name: "sym___kernel_vsyscall", scope: !1224, file: !1225, line: 28, baseType: !513, size: 64, offset: 768)
!1240 = !DIDerivedType(tag: DW_TAG_member, name: "sym_int80_landing_pad", scope: !1224, file: !1225, line: 29, baseType: !513, size: 64, offset: 832)
!1241 = !DIDerivedType(tag: DW_TAG_member, name: "perf_rdpmc_allowed", scope: !1210, file: !1209, line: 44, baseType: !388, size: 32, offset: 832)
!1242 = !DIDerivedType(tag: DW_TAG_member, name: "pkey_allocation_map", scope: !1210, file: !1209, line: 50, baseType: !1038, size: 16, offset: 864)
!1243 = !DIDerivedType(tag: DW_TAG_member, name: "execute_only_pkey", scope: !1210, file: !1209, line: 51, baseType: !1244, size: 16, offset: 880)
!1244 = !DIDerivedType(tag: DW_TAG_typedef, name: "s16", file: !337, line: 18, baseType: !1245)
!1245 = !DIDerivedType(tag: DW_TAG_typedef, name: "__s16", file: !339, line: 23, baseType: !1246)
!1246 = !DIBasicType(name: "short", size: 16, encoding: DW_ATE_signed)
!1247 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1129, file: !626, line: 495, baseType: !317, size: 64, offset: 6528)
!1248 = !DIDerivedType(tag: DW_TAG_member, name: "core_state", scope: !1129, file: !626, line: 497, baseType: !1249, size: 64, offset: 6592)
!1249 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1250, size: 64)
!1250 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "core_state", file: !626, line: 381, size: 384, elements: !1251)
!1251 = !{!1252, !1253, !6155}
!1252 = !DIDerivedType(tag: DW_TAG_member, name: "nr_threads", scope: !1250, file: !626, line: 382, baseType: !388, size: 32)
!1253 = !DIDerivedType(tag: DW_TAG_member, name: "dumper", scope: !1250, file: !626, line: 383, baseType: !1254, size: 128, offset: 64)
!1254 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "core_thread", file: !626, line: 376, size: 128, elements: !1255)
!1255 = !{!1256, !6153}
!1256 = !DIDerivedType(tag: DW_TAG_member, name: "task", scope: !1254, file: !626, line: 377, baseType: !1257, size: 64)
!1257 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1258, size: 64)
!1258 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "task_struct", file: !1259, line: 640, size: 48640, elements: !1260)
!1259 = !DIFile(filename: "./include/linux/sched.h", directory: "/home/lizy2001/genbc/linux")
!1260 = !{!1261, !1267, !1269, !1270, !1276, !1277, !1278, !1279, !1280, !1281, !1282, !1283, !1287, !1305, !1316, !1405, !1406, !1407, !1418, !1419, !1421, !1422, !1423, !1424, !1430, !1431, !1432, !1433, !1434, !1435, !1436, !1437, !1438, !1439, !1440, !1441, !1442, !1443, !1444, !1445, !1508, !1511, !1512, !1513, !1514, !1515, !1516, !1517, !1518, !1519, !1520, !1541, !1543, !1544, !1545, !1557, !1558, !1559, !1560, !1561, !1562, !1568, !1569, !1570, !1571, !1572, !1573, !1574, !1586, !1591, !1929, !1930, !1931, !1932, !1933, !1936, !1939, !1942, !1945, !3582, !3678, !3709, !3710, !3711, !3712, !3713, !3714, !3715, !3716, !3717, !3726, !3727, !3728, !3729, !3730, !3735, !3736, !3737, !3740, !3741, !5750, !5759, !5762, !5763, !5764, !5767, !5768, !5847, !5848, !5851, !5852, !5855, !5856, !5857, !5861, !5862, !5863, !5876, !5877, !5878, !5888, !5893, !5951, !5957, !5958, !5959, !5960, !5961, !5962, !5963, !5964, !5979, !5980, !5981, !5982, !5983, !5984, !5985, !5986, !5987}
!1261 = !DIDerivedType(tag: DW_TAG_member, name: "thread_info", scope: !1258, file: !1259, line: 646, baseType: !1262, size: 128)
!1262 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "thread_info", file: !1263, line: 56, size: 128, elements: !1264)
!1263 = !DIFile(filename: "./arch/x86/include/asm/thread_info.h", directory: "/home/lizy2001/genbc/linux")
!1264 = !{!1265, !1266}
!1265 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1262, file: !1263, line: 57, baseType: !317, size: 64)
!1266 = !DIDerivedType(tag: DW_TAG_member, name: "status", scope: !1262, file: !1263, line: 58, baseType: !707, size: 32, offset: 64)
!1267 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1258, file: !1259, line: 649, baseType: !1268, size: 64, offset: 128)
!1268 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !513)
!1269 = !DIDerivedType(tag: DW_TAG_member, name: "stack", scope: !1258, file: !1259, line: 657, baseType: !570, size: 64, offset: 192)
!1270 = !DIDerivedType(tag: DW_TAG_member, name: "usage", scope: !1258, file: !1259, line: 658, baseType: !1271, size: 32, offset: 256)
!1271 = !DIDerivedType(tag: DW_TAG_typedef, name: "refcount_t", file: !1272, line: 113, baseType: !1273)
!1272 = !DIFile(filename: "./include/linux/refcount.h", directory: "/home/lizy2001/genbc/linux")
!1273 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "refcount_struct", file: !1272, line: 111, size: 32, elements: !1274)
!1274 = !{!1275}
!1275 = !DIDerivedType(tag: DW_TAG_member, name: "refs", scope: !1273, file: !1272, line: 112, baseType: !388, size: 32)
!1276 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1258, file: !1259, line: 660, baseType: !7, size: 32, offset: 288)
!1277 = !DIDerivedType(tag: DW_TAG_member, name: "ptrace", scope: !1258, file: !1259, line: 661, baseType: !7, size: 32, offset: 320)
!1278 = !DIDerivedType(tag: DW_TAG_member, name: "on_rq", scope: !1258, file: !1259, line: 684, baseType: !37, size: 32, offset: 352)
!1279 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !1258, file: !1259, line: 686, baseType: !37, size: 32, offset: 384)
!1280 = !DIDerivedType(tag: DW_TAG_member, name: "static_prio", scope: !1258, file: !1259, line: 687, baseType: !37, size: 32, offset: 416)
!1281 = !DIDerivedType(tag: DW_TAG_member, name: "normal_prio", scope: !1258, file: !1259, line: 688, baseType: !37, size: 32, offset: 448)
!1282 = !DIDerivedType(tag: DW_TAG_member, name: "rt_priority", scope: !1258, file: !1259, line: 689, baseType: !7, size: 32, offset: 480)
!1283 = !DIDerivedType(tag: DW_TAG_member, name: "sched_class", scope: !1258, file: !1259, line: 691, baseType: !1284, size: 64, offset: 512)
!1284 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1285, size: 64)
!1285 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1286)
!1286 = !DICompositeType(tag: DW_TAG_structure_type, name: "sched_class", file: !1259, line: 691, flags: DIFlagFwdDecl)
!1287 = !DIDerivedType(tag: DW_TAG_member, name: "se", scope: !1258, file: !1259, line: 692, baseType: !1288, size: 832, offset: 576)
!1288 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sched_entity", file: !1259, line: 451, size: 832, elements: !1289)
!1289 = !{!1290, !1295, !1296, !1297, !1298, !1299, !1300, !1301, !1302, !1303}
!1290 = !DIDerivedType(tag: DW_TAG_member, name: "load", scope: !1288, file: !1259, line: 453, baseType: !1291, size: 128)
!1291 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "load_weight", file: !1259, line: 325, size: 128, elements: !1292)
!1292 = !{!1293, !1294}
!1293 = !DIDerivedType(tag: DW_TAG_member, name: "weight", scope: !1291, file: !1259, line: 326, baseType: !317, size: 64)
!1294 = !DIDerivedType(tag: DW_TAG_member, name: "inv_weight", scope: !1291, file: !1259, line: 327, baseType: !707, size: 32, offset: 64)
!1295 = !DIDerivedType(tag: DW_TAG_member, name: "run_node", scope: !1288, file: !1259, line: 454, baseType: !438, size: 192, align: 64, offset: 128)
!1296 = !DIDerivedType(tag: DW_TAG_member, name: "group_node", scope: !1288, file: !1259, line: 455, baseType: !289, size: 128, offset: 320)
!1297 = !DIDerivedType(tag: DW_TAG_member, name: "on_rq", scope: !1288, file: !1259, line: 456, baseType: !7, size: 32, offset: 448)
!1298 = !DIDerivedType(tag: DW_TAG_member, name: "exec_start", scope: !1288, file: !1259, line: 458, baseType: !336, size: 64, offset: 512)
!1299 = !DIDerivedType(tag: DW_TAG_member, name: "sum_exec_runtime", scope: !1288, file: !1259, line: 459, baseType: !336, size: 64, offset: 576)
!1300 = !DIDerivedType(tag: DW_TAG_member, name: "vruntime", scope: !1288, file: !1259, line: 460, baseType: !336, size: 64, offset: 640)
!1301 = !DIDerivedType(tag: DW_TAG_member, name: "prev_sum_exec_runtime", scope: !1288, file: !1259, line: 461, baseType: !336, size: 64, offset: 704)
!1302 = !DIDerivedType(tag: DW_TAG_member, name: "nr_migrations", scope: !1288, file: !1259, line: 463, baseType: !336, size: 64, offset: 768)
!1303 = !DIDerivedType(tag: DW_TAG_member, name: "statistics", scope: !1288, file: !1259, line: 465, baseType: !1304, offset: 832)
!1304 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sched_statistics", file: !1259, line: 415, elements: !743)
!1305 = !DIDerivedType(tag: DW_TAG_member, name: "rt", scope: !1258, file: !1259, line: 693, baseType: !1306, size: 384, offset: 1408)
!1306 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sched_rt_entity", file: !1259, line: 489, size: 384, elements: !1307)
!1307 = !{!1308, !1309, !1310, !1311, !1312, !1313, !1314}
!1308 = !DIDerivedType(tag: DW_TAG_member, name: "run_list", scope: !1306, file: !1259, line: 490, baseType: !289, size: 128)
!1309 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !1306, file: !1259, line: 491, baseType: !317, size: 64, offset: 128)
!1310 = !DIDerivedType(tag: DW_TAG_member, name: "watchdog_stamp", scope: !1306, file: !1259, line: 492, baseType: !317, size: 64, offset: 192)
!1311 = !DIDerivedType(tag: DW_TAG_member, name: "time_slice", scope: !1306, file: !1259, line: 493, baseType: !7, size: 32, offset: 256)
!1312 = !DIDerivedType(tag: DW_TAG_member, name: "on_rq", scope: !1306, file: !1259, line: 494, baseType: !477, size: 16, offset: 288)
!1313 = !DIDerivedType(tag: DW_TAG_member, name: "on_list", scope: !1306, file: !1259, line: 495, baseType: !477, size: 16, offset: 304)
!1314 = !DIDerivedType(tag: DW_TAG_member, name: "back", scope: !1306, file: !1259, line: 497, baseType: !1315, size: 64, offset: 320)
!1315 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1306, size: 64)
!1316 = !DIDerivedType(tag: DW_TAG_member, name: "dl", scope: !1258, file: !1259, line: 697, baseType: !1317, size: 1792, offset: 1792)
!1317 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sched_dl_entity", file: !1259, line: 507, size: 1792, elements: !1318)
!1318 = !{!1319, !1320, !1321, !1322, !1323, !1324, !1325, !1326, !1327, !1328, !1329, !1330, !1331, !1332, !1402, !1403}
!1319 = !DIDerivedType(tag: DW_TAG_member, name: "rb_node", scope: !1317, file: !1259, line: 508, baseType: !438, size: 192, align: 64)
!1320 = !DIDerivedType(tag: DW_TAG_member, name: "dl_runtime", scope: !1317, file: !1259, line: 515, baseType: !336, size: 64, offset: 192)
!1321 = !DIDerivedType(tag: DW_TAG_member, name: "dl_deadline", scope: !1317, file: !1259, line: 516, baseType: !336, size: 64, offset: 256)
!1322 = !DIDerivedType(tag: DW_TAG_member, name: "dl_period", scope: !1317, file: !1259, line: 517, baseType: !336, size: 64, offset: 320)
!1323 = !DIDerivedType(tag: DW_TAG_member, name: "dl_bw", scope: !1317, file: !1259, line: 518, baseType: !336, size: 64, offset: 384)
!1324 = !DIDerivedType(tag: DW_TAG_member, name: "dl_density", scope: !1317, file: !1259, line: 519, baseType: !336, size: 64, offset: 448)
!1325 = !DIDerivedType(tag: DW_TAG_member, name: "runtime", scope: !1317, file: !1259, line: 526, baseType: !382, size: 64, offset: 512)
!1326 = !DIDerivedType(tag: DW_TAG_member, name: "deadline", scope: !1317, file: !1259, line: 527, baseType: !336, size: 64, offset: 576)
!1327 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1317, file: !1259, line: 528, baseType: !7, size: 32, offset: 640)
!1328 = !DIDerivedType(tag: DW_TAG_member, name: "dl_throttled", scope: !1317, file: !1259, line: 554, baseType: !7, size: 1, offset: 672, flags: DIFlagBitField, extraData: i64 672)
!1329 = !DIDerivedType(tag: DW_TAG_member, name: "dl_yielded", scope: !1317, file: !1259, line: 555, baseType: !7, size: 1, offset: 673, flags: DIFlagBitField, extraData: i64 672)
!1330 = !DIDerivedType(tag: DW_TAG_member, name: "dl_non_contending", scope: !1317, file: !1259, line: 556, baseType: !7, size: 1, offset: 674, flags: DIFlagBitField, extraData: i64 672)
!1331 = !DIDerivedType(tag: DW_TAG_member, name: "dl_overrun", scope: !1317, file: !1259, line: 557, baseType: !7, size: 1, offset: 675, flags: DIFlagBitField, extraData: i64 672)
!1332 = !DIDerivedType(tag: DW_TAG_member, name: "dl_timer", scope: !1317, file: !1259, line: 563, baseType: !1333, size: 512, offset: 704)
!1333 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hrtimer", file: !25, line: 118, size: 512, elements: !1334)
!1334 = !{!1335, !1343, !1344, !1349, !1396, !1399, !1400, !1401}
!1335 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !1333, file: !25, line: 119, baseType: !1336, size: 256)
!1336 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timerqueue_node", file: !1337, line: 9, size: 256, elements: !1338)
!1337 = !DIFile(filename: "./include/linux/timerqueue.h", directory: "/home/lizy2001/genbc/linux")
!1338 = !{!1339, !1340}
!1339 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !1336, file: !1337, line: 10, baseType: !438, size: 192, align: 64)
!1340 = !DIDerivedType(tag: DW_TAG_member, name: "expires", scope: !1336, file: !1337, line: 11, baseType: !1341, size: 64, offset: 192)
!1341 = !DIDerivedType(tag: DW_TAG_typedef, name: "ktime_t", file: !1342, line: 29, baseType: !382)
!1342 = !DIFile(filename: "./include/linux/ktime.h", directory: "/home/lizy2001/genbc/linux")
!1343 = !DIDerivedType(tag: DW_TAG_member, name: "_softexpires", scope: !1333, file: !25, line: 120, baseType: !1341, size: 64, offset: 256)
!1344 = !DIDerivedType(tag: DW_TAG_member, name: "function", scope: !1333, file: !25, line: 121, baseType: !1345, size: 64, offset: 320)
!1345 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1346, size: 64)
!1346 = !DISubroutineType(types: !1347)
!1347 = !{!24, !1348}
!1348 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1333, size: 64)
!1349 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1333, file: !25, line: 122, baseType: !1350, size: 64, offset: 384)
!1350 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1351, size: 64)
!1351 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hrtimer_clock_base", file: !25, line: 159, size: 512, align: 512, elements: !1352)
!1352 = !{!1353, !1373, !1374, !1377, !1382, !1383, !1391, !1395}
!1353 = !DIDerivedType(tag: DW_TAG_member, name: "cpu_base", scope: !1351, file: !25, line: 160, baseType: !1354, size: 64)
!1354 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1355, size: 64)
!1355 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hrtimer_cpu_base", file: !25, line: 214, size: 4608, align: 512, elements: !1356)
!1356 = !{!1357, !1358, !1359, !1360, !1361, !1362, !1363, !1364, !1365, !1366, !1367, !1368, !1369}
!1357 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1355, file: !25, line: 215, baseType: !1168)
!1358 = !DIDerivedType(tag: DW_TAG_member, name: "cpu", scope: !1355, file: !25, line: 216, baseType: !7, size: 32)
!1359 = !DIDerivedType(tag: DW_TAG_member, name: "active_bases", scope: !1355, file: !25, line: 217, baseType: !7, size: 32, offset: 32)
!1360 = !DIDerivedType(tag: DW_TAG_member, name: "clock_was_set_seq", scope: !1355, file: !25, line: 218, baseType: !7, size: 32, offset: 64)
!1361 = !DIDerivedType(tag: DW_TAG_member, name: "hres_active", scope: !1355, file: !25, line: 219, baseType: !7, size: 1, offset: 96, flags: DIFlagBitField, extraData: i64 96)
!1362 = !DIDerivedType(tag: DW_TAG_member, name: "in_hrtirq", scope: !1355, file: !25, line: 220, baseType: !7, size: 1, offset: 97, flags: DIFlagBitField, extraData: i64 96)
!1363 = !DIDerivedType(tag: DW_TAG_member, name: "hang_detected", scope: !1355, file: !25, line: 221, baseType: !7, size: 1, offset: 98, flags: DIFlagBitField, extraData: i64 96)
!1364 = !DIDerivedType(tag: DW_TAG_member, name: "softirq_activated", scope: !1355, file: !25, line: 222, baseType: !7, size: 1, offset: 99, flags: DIFlagBitField, extraData: i64 96)
!1365 = !DIDerivedType(tag: DW_TAG_member, name: "expires_next", scope: !1355, file: !25, line: 233, baseType: !1341, size: 64, offset: 128)
!1366 = !DIDerivedType(tag: DW_TAG_member, name: "next_timer", scope: !1355, file: !25, line: 234, baseType: !1348, size: 64, offset: 192)
!1367 = !DIDerivedType(tag: DW_TAG_member, name: "softirq_expires_next", scope: !1355, file: !25, line: 235, baseType: !1341, size: 64, offset: 256)
!1368 = !DIDerivedType(tag: DW_TAG_member, name: "softirq_next_timer", scope: !1355, file: !25, line: 236, baseType: !1348, size: 64, offset: 320)
!1369 = !DIDerivedType(tag: DW_TAG_member, name: "clock_base", scope: !1355, file: !25, line: 237, baseType: !1370, size: 4096, offset: 512)
!1370 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1351, size: 4096, elements: !1371)
!1371 = !{!1372}
!1372 = !DISubrange(count: 8)
!1373 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !1351, file: !25, line: 161, baseType: !7, size: 32, offset: 64)
!1374 = !DIDerivedType(tag: DW_TAG_member, name: "clockid", scope: !1351, file: !25, line: 162, baseType: !1375, size: 32, offset: 96)
!1375 = !DIDerivedType(tag: DW_TAG_typedef, name: "clockid_t", file: !282, line: 27, baseType: !1376)
!1376 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_clockid_t", file: !596, line: 96, baseType: !37)
!1377 = !DIDerivedType(tag: DW_TAG_member, name: "seq", scope: !1351, file: !25, line: 163, baseType: !1378, size: 32, offset: 128)
!1378 = !DIDerivedType(tag: DW_TAG_typedef, name: "seqcount_raw_spinlock_t", file: !680, line: 276, baseType: !1379)
!1379 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seqcount_raw_spinlock", file: !680, line: 276, size: 32, elements: !1380)
!1380 = !{!1381}
!1381 = !DIDerivedType(tag: DW_TAG_member, name: "seqcount", scope: !1379, file: !680, line: 276, baseType: !684, size: 32)
!1382 = !DIDerivedType(tag: DW_TAG_member, name: "running", scope: !1351, file: !25, line: 164, baseType: !1348, size: 64, offset: 192)
!1383 = !DIDerivedType(tag: DW_TAG_member, name: "active", scope: !1351, file: !25, line: 165, baseType: !1384, size: 128, offset: 256)
!1384 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timerqueue_head", file: !1337, line: 14, size: 128, elements: !1385)
!1385 = !{!1386}
!1386 = !DIDerivedType(tag: DW_TAG_member, name: "rb_root", scope: !1384, file: !1337, line: 15, baseType: !1387, size: 128)
!1387 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rb_root_cached", file: !439, line: 125, size: 128, elements: !1388)
!1388 = !{!1389, !1390}
!1389 = !DIDerivedType(tag: DW_TAG_member, name: "rb_root", scope: !1387, file: !439, line: 126, baseType: !1133, size: 64)
!1390 = !DIDerivedType(tag: DW_TAG_member, name: "rb_leftmost", scope: !1387, file: !439, line: 127, baseType: !443, size: 64, offset: 64)
!1391 = !DIDerivedType(tag: DW_TAG_member, name: "get_time", scope: !1351, file: !25, line: 166, baseType: !1392, size: 64, offset: 384)
!1392 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1393, size: 64)
!1393 = !DISubroutineType(types: !1394)
!1394 = !{!1341}
!1395 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1351, file: !25, line: 167, baseType: !1341, size: 64, offset: 448)
!1396 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1333, file: !25, line: 123, baseType: !1397, size: 8, offset: 448)
!1397 = !DIDerivedType(tag: DW_TAG_typedef, name: "u8", file: !337, line: 17, baseType: !1398)
!1398 = !DIDerivedType(tag: DW_TAG_typedef, name: "__u8", file: !339, line: 21, baseType: !494)
!1399 = !DIDerivedType(tag: DW_TAG_member, name: "is_rel", scope: !1333, file: !25, line: 124, baseType: !1397, size: 8, offset: 456)
!1400 = !DIDerivedType(tag: DW_TAG_member, name: "is_soft", scope: !1333, file: !25, line: 125, baseType: !1397, size: 8, offset: 464)
!1401 = !DIDerivedType(tag: DW_TAG_member, name: "is_hard", scope: !1333, file: !25, line: 126, baseType: !1397, size: 8, offset: 472)
!1402 = !DIDerivedType(tag: DW_TAG_member, name: "inactive_timer", scope: !1317, file: !1259, line: 572, baseType: !1333, size: 512, offset: 1216)
!1403 = !DIDerivedType(tag: DW_TAG_member, name: "pi_se", scope: !1317, file: !1259, line: 580, baseType: !1404, size: 64, offset: 1728)
!1404 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1317, size: 64)
!1405 = !DIDerivedType(tag: DW_TAG_member, name: "policy", scope: !1258, file: !1259, line: 721, baseType: !7, size: 32, offset: 3584)
!1406 = !DIDerivedType(tag: DW_TAG_member, name: "nr_cpus_allowed", scope: !1258, file: !1259, line: 722, baseType: !37, size: 32, offset: 3616)
!1407 = !DIDerivedType(tag: DW_TAG_member, name: "cpus_ptr", scope: !1258, file: !1259, line: 723, baseType: !1408, size: 64, offset: 3648)
!1408 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1409, size: 64)
!1409 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1410)
!1410 = !DIDerivedType(tag: DW_TAG_typedef, name: "cpumask_t", file: !1411, line: 17, baseType: !1412)
!1411 = !DIFile(filename: "./include/linux/cpumask.h", directory: "/home/lizy2001/genbc/linux")
!1412 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cpumask", file: !1411, line: 17, size: 64, elements: !1413)
!1413 = !{!1414}
!1414 = !DIDerivedType(tag: DW_TAG_member, name: "bits", scope: !1412, file: !1411, line: 17, baseType: !1415, size: 64)
!1415 = !DICompositeType(tag: DW_TAG_array_type, baseType: !317, size: 64, elements: !1416)
!1416 = !{!1417}
!1417 = !DISubrange(count: 1)
!1418 = !DIDerivedType(tag: DW_TAG_member, name: "cpus_mask", scope: !1258, file: !1259, line: 724, baseType: !1410, size: 64, offset: 3712)
!1419 = !DIDerivedType(tag: DW_TAG_member, name: "sched_info", scope: !1258, file: !1259, line: 749, baseType: !1420, offset: 3776)
!1420 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sched_info", file: !1259, line: 290, elements: !743)
!1421 = !DIDerivedType(tag: DW_TAG_member, name: "tasks", scope: !1258, file: !1259, line: 751, baseType: !289, size: 128, offset: 3776)
!1422 = !DIDerivedType(tag: DW_TAG_member, name: "mm", scope: !1258, file: !1259, line: 757, baseType: !1125, size: 64, offset: 3904)
!1423 = !DIDerivedType(tag: DW_TAG_member, name: "active_mm", scope: !1258, file: !1259, line: 758, baseType: !1125, size: 64, offset: 3968)
!1424 = !DIDerivedType(tag: DW_TAG_member, name: "vmacache", scope: !1258, file: !1259, line: 761, baseType: !1425, size: 320, offset: 4032)
!1425 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vmacache", file: !1198, line: 34, size: 320, elements: !1426)
!1426 = !{!1427, !1428}
!1427 = !DIDerivedType(tag: DW_TAG_member, name: "seqnum", scope: !1425, file: !1198, line: 35, baseType: !336, size: 64)
!1428 = !DIDerivedType(tag: DW_TAG_member, name: "vmas", scope: !1425, file: !1198, line: 36, baseType: !1429, size: 256, offset: 64)
!1429 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1115, size: 256, elements: !1202)
!1430 = !DIDerivedType(tag: DW_TAG_member, name: "exit_state", scope: !1258, file: !1259, line: 766, baseType: !37, size: 32, offset: 4352)
!1431 = !DIDerivedType(tag: DW_TAG_member, name: "exit_code", scope: !1258, file: !1259, line: 767, baseType: !37, size: 32, offset: 4384)
!1432 = !DIDerivedType(tag: DW_TAG_member, name: "exit_signal", scope: !1258, file: !1259, line: 768, baseType: !37, size: 32, offset: 4416)
!1433 = !DIDerivedType(tag: DW_TAG_member, name: "pdeath_signal", scope: !1258, file: !1259, line: 770, baseType: !37, size: 32, offset: 4448)
!1434 = !DIDerivedType(tag: DW_TAG_member, name: "jobctl", scope: !1258, file: !1259, line: 772, baseType: !317, size: 64, offset: 4480)
!1435 = !DIDerivedType(tag: DW_TAG_member, name: "personality", scope: !1258, file: !1259, line: 775, baseType: !7, size: 32, offset: 4544)
!1436 = !DIDerivedType(tag: DW_TAG_member, name: "sched_reset_on_fork", scope: !1258, file: !1259, line: 778, baseType: !7, size: 1, offset: 4576, flags: DIFlagBitField, extraData: i64 4576)
!1437 = !DIDerivedType(tag: DW_TAG_member, name: "sched_contributes_to_load", scope: !1258, file: !1259, line: 779, baseType: !7, size: 1, offset: 4577, flags: DIFlagBitField, extraData: i64 4576)
!1438 = !DIDerivedType(tag: DW_TAG_member, name: "sched_migrated", scope: !1258, file: !1259, line: 780, baseType: !7, size: 1, offset: 4578, flags: DIFlagBitField, extraData: i64 4576)
!1439 = !DIDerivedType(tag: DW_TAG_member, name: "sched_remote_wakeup", scope: !1258, file: !1259, line: 803, baseType: !7, size: 1, offset: 4608, flags: DIFlagBitField, extraData: i64 4608)
!1440 = !DIDerivedType(tag: DW_TAG_member, name: "in_execve", scope: !1258, file: !1259, line: 806, baseType: !7, size: 1, offset: 4609, flags: DIFlagBitField, extraData: i64 4608)
!1441 = !DIDerivedType(tag: DW_TAG_member, name: "in_iowait", scope: !1258, file: !1259, line: 807, baseType: !7, size: 1, offset: 4610, flags: DIFlagBitField, extraData: i64 4608)
!1442 = !DIDerivedType(tag: DW_TAG_member, name: "restore_sigmask", scope: !1258, file: !1259, line: 809, baseType: !7, size: 1, offset: 4611, flags: DIFlagBitField, extraData: i64 4608)
!1443 = !DIDerivedType(tag: DW_TAG_member, name: "brk_randomized", scope: !1258, file: !1259, line: 815, baseType: !7, size: 1, offset: 4612, flags: DIFlagBitField, extraData: i64 4608)
!1444 = !DIDerivedType(tag: DW_TAG_member, name: "atomic_flags", scope: !1258, file: !1259, line: 831, baseType: !317, size: 64, offset: 4672)
!1445 = !DIDerivedType(tag: DW_TAG_member, name: "restart_block", scope: !1258, file: !1259, line: 833, baseType: !1446, size: 384, offset: 4736)
!1446 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "restart_block", file: !30, line: 25, size: 384, elements: !1447)
!1447 = !{!1448, !1453}
!1448 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !1446, file: !30, line: 26, baseType: !1449, size: 64)
!1449 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1450, size: 64)
!1450 = !DISubroutineType(types: !1451)
!1451 = !{!513, !1452}
!1452 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1446, size: 64)
!1453 = !DIDerivedType(tag: DW_TAG_member, scope: !1446, file: !30, line: 27, baseType: !1454, size: 320, offset: 64)
!1454 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1446, file: !30, line: 27, size: 320, elements: !1455)
!1455 = !{!1456, !1466, !1493}
!1456 = !DIDerivedType(tag: DW_TAG_member, name: "futex", scope: !1454, file: !30, line: 36, baseType: !1457, size: 320)
!1457 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1454, file: !30, line: 29, size: 320, elements: !1458)
!1458 = !{!1459, !1461, !1462, !1463, !1464, !1465}
!1459 = !DIDerivedType(tag: DW_TAG_member, name: "uaddr", scope: !1457, file: !30, line: 30, baseType: !1460, size: 64)
!1460 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !707, size: 64)
!1461 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !1457, file: !30, line: 31, baseType: !707, size: 32, offset: 64)
!1462 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1457, file: !30, line: 32, baseType: !707, size: 32, offset: 96)
!1463 = !DIDerivedType(tag: DW_TAG_member, name: "bitset", scope: !1457, file: !30, line: 33, baseType: !707, size: 32, offset: 128)
!1464 = !DIDerivedType(tag: DW_TAG_member, name: "time", scope: !1457, file: !30, line: 34, baseType: !336, size: 64, offset: 192)
!1465 = !DIDerivedType(tag: DW_TAG_member, name: "uaddr2", scope: !1457, file: !30, line: 35, baseType: !1460, size: 64, offset: 256)
!1466 = !DIDerivedType(tag: DW_TAG_member, name: "nanosleep", scope: !1454, file: !30, line: 46, baseType: !1467, size: 192)
!1467 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1454, file: !30, line: 38, size: 192, elements: !1468)
!1468 = !{!1469, !1470, !1471, !1492}
!1469 = !DIDerivedType(tag: DW_TAG_member, name: "clockid", scope: !1467, file: !30, line: 39, baseType: !1375, size: 32)
!1470 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1467, file: !30, line: 40, baseType: !29, size: 32, offset: 32)
!1471 = !DIDerivedType(tag: DW_TAG_member, scope: !1467, file: !30, line: 41, baseType: !1472, size: 64, offset: 64)
!1472 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1467, file: !30, line: 41, size: 64, elements: !1473)
!1473 = !{!1474, !1482}
!1474 = !DIDerivedType(tag: DW_TAG_member, name: "rmtp", scope: !1472, file: !30, line: 42, baseType: !1475, size: 64)
!1475 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1476, size: 64)
!1476 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__kernel_timespec", file: !1477, line: 7, size: 128, elements: !1478)
!1477 = !DIFile(filename: "./include/uapi/linux/time_types.h", directory: "/home/lizy2001/genbc/linux")
!1478 = !{!1479, !1481}
!1479 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !1476, file: !1477, line: 8, baseType: !1480, size: 64)
!1480 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_time64_t", file: !596, line: 93, baseType: !384)
!1481 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !1476, file: !1477, line: 9, baseType: !384, size: 64, offset: 64)
!1482 = !DIDerivedType(tag: DW_TAG_member, name: "compat_rmtp", scope: !1472, file: !30, line: 43, baseType: !1483, size: 64)
!1483 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1484, size: 64)
!1484 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "old_timespec32", file: !1485, line: 7, size: 64, elements: !1486)
!1485 = !DIFile(filename: "./include/vdso/time32.h", directory: "/home/lizy2001/genbc/linux")
!1486 = !{!1487, !1491}
!1487 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !1484, file: !1485, line: 8, baseType: !1488, size: 32)
!1488 = !DIDerivedType(tag: DW_TAG_typedef, name: "old_time32_t", file: !1485, line: 5, baseType: !1489)
!1489 = !DIDerivedType(tag: DW_TAG_typedef, name: "s32", file: !337, line: 20, baseType: !1490)
!1490 = !DIDerivedType(tag: DW_TAG_typedef, name: "__s32", file: !339, line: 26, baseType: !37)
!1491 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !1484, file: !1485, line: 9, baseType: !1489, size: 32, offset: 32)
!1492 = !DIDerivedType(tag: DW_TAG_member, name: "expires", scope: !1467, file: !30, line: 45, baseType: !336, size: 64, offset: 128)
!1493 = !DIDerivedType(tag: DW_TAG_member, name: "poll", scope: !1454, file: !30, line: 54, baseType: !1494, size: 256)
!1494 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1454, file: !30, line: 48, size: 256, elements: !1495)
!1495 = !{!1496, !1504, !1505, !1506, !1507}
!1496 = !DIDerivedType(tag: DW_TAG_member, name: "ufds", scope: !1494, file: !30, line: 49, baseType: !1497, size: 64)
!1497 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1498, size: 64)
!1498 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pollfd", file: !1499, line: 36, size: 64, elements: !1500)
!1499 = !DIFile(filename: "./include/uapi/asm-generic/poll.h", directory: "/home/lizy2001/genbc/linux")
!1500 = !{!1501, !1502, !1503}
!1501 = !DIDerivedType(tag: DW_TAG_member, name: "fd", scope: !1498, file: !1499, line: 37, baseType: !37, size: 32)
!1502 = !DIDerivedType(tag: DW_TAG_member, name: "events", scope: !1498, file: !1499, line: 38, baseType: !1246, size: 16, offset: 32)
!1503 = !DIDerivedType(tag: DW_TAG_member, name: "revents", scope: !1498, file: !1499, line: 39, baseType: !1246, size: 16, offset: 48)
!1504 = !DIDerivedType(tag: DW_TAG_member, name: "nfds", scope: !1494, file: !30, line: 50, baseType: !37, size: 32, offset: 64)
!1505 = !DIDerivedType(tag: DW_TAG_member, name: "has_timeout", scope: !1494, file: !30, line: 51, baseType: !37, size: 32, offset: 96)
!1506 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !1494, file: !30, line: 52, baseType: !317, size: 64, offset: 128)
!1507 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !1494, file: !30, line: 53, baseType: !317, size: 64, offset: 192)
!1508 = !DIDerivedType(tag: DW_TAG_member, name: "pid", scope: !1258, file: !1259, line: 835, baseType: !1509, size: 32, offset: 5120)
!1509 = !DIDerivedType(tag: DW_TAG_typedef, name: "pid_t", file: !282, line: 22, baseType: !1510)
!1510 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_pid_t", file: !596, line: 28, baseType: !37)
!1511 = !DIDerivedType(tag: DW_TAG_member, name: "tgid", scope: !1258, file: !1259, line: 836, baseType: !1509, size: 32, offset: 5152)
!1512 = !DIDerivedType(tag: DW_TAG_member, name: "stack_canary", scope: !1258, file: !1259, line: 840, baseType: !317, size: 64, offset: 5184)
!1513 = !DIDerivedType(tag: DW_TAG_member, name: "real_parent", scope: !1258, file: !1259, line: 849, baseType: !1257, size: 64, offset: 5248)
!1514 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !1258, file: !1259, line: 852, baseType: !1257, size: 64, offset: 5312)
!1515 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !1258, file: !1259, line: 857, baseType: !289, size: 128, offset: 5376)
!1516 = !DIDerivedType(tag: DW_TAG_member, name: "sibling", scope: !1258, file: !1259, line: 858, baseType: !289, size: 128, offset: 5504)
!1517 = !DIDerivedType(tag: DW_TAG_member, name: "group_leader", scope: !1258, file: !1259, line: 859, baseType: !1257, size: 64, offset: 5632)
!1518 = !DIDerivedType(tag: DW_TAG_member, name: "ptraced", scope: !1258, file: !1259, line: 867, baseType: !289, size: 128, offset: 5696)
!1519 = !DIDerivedType(tag: DW_TAG_member, name: "ptrace_entry", scope: !1258, file: !1259, line: 868, baseType: !289, size: 128, offset: 5824)
!1520 = !DIDerivedType(tag: DW_TAG_member, name: "thread_pid", scope: !1258, file: !1259, line: 871, baseType: !1521, size: 64, offset: 5952)
!1521 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1522, size: 64)
!1522 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pid", file: !1523, line: 59, size: 768, elements: !1524)
!1523 = !DIFile(filename: "./include/linux/pid.h", directory: "/home/lizy2001/genbc/linux")
!1524 = !{!1525, !1526, !1527, !1528, !1530, !1531, !1532, !1533}
!1525 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !1522, file: !1523, line: 61, baseType: !1271, size: 32)
!1526 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !1522, file: !1523, line: 62, baseType: !7, size: 32, offset: 32)
!1527 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1522, file: !1523, line: 63, baseType: !729, offset: 64)
!1528 = !DIDerivedType(tag: DW_TAG_member, name: "tasks", scope: !1522, file: !1523, line: 65, baseType: !1529, size: 256, offset: 64)
!1529 = !DICompositeType(tag: DW_TAG_array_type, baseType: !857, size: 256, elements: !1202)
!1530 = !DIDerivedType(tag: DW_TAG_member, name: "inodes", scope: !1522, file: !1523, line: 66, baseType: !857, size: 64, offset: 320)
!1531 = !DIDerivedType(tag: DW_TAG_member, name: "wait_pidfd", scope: !1522, file: !1523, line: 68, baseType: !1100, size: 128, offset: 384)
!1532 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !1522, file: !1523, line: 69, baseType: !304, size: 128, align: 64, offset: 512)
!1533 = !DIDerivedType(tag: DW_TAG_member, name: "numbers", scope: !1522, file: !1523, line: 70, baseType: !1534, size: 128, offset: 640)
!1534 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1535, size: 128, elements: !1416)
!1535 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "upid", file: !1523, line: 54, size: 128, elements: !1536)
!1536 = !{!1537, !1538}
!1537 = !DIDerivedType(tag: DW_TAG_member, name: "nr", scope: !1535, file: !1523, line: 55, baseType: !37, size: 32)
!1538 = !DIDerivedType(tag: DW_TAG_member, name: "ns", scope: !1535, file: !1523, line: 56, baseType: !1539, size: 64, offset: 64)
!1539 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1540, size: 64)
!1540 = !DICompositeType(tag: DW_TAG_structure_type, name: "pid_namespace", file: !1523, line: 56, flags: DIFlagFwdDecl)
!1541 = !DIDerivedType(tag: DW_TAG_member, name: "pid_links", scope: !1258, file: !1259, line: 872, baseType: !1542, size: 512, offset: 6016)
!1542 = !DICompositeType(tag: DW_TAG_array_type, baseType: !281, size: 512, elements: !1202)
!1543 = !DIDerivedType(tag: DW_TAG_member, name: "thread_group", scope: !1258, file: !1259, line: 873, baseType: !289, size: 128, offset: 6528)
!1544 = !DIDerivedType(tag: DW_TAG_member, name: "thread_node", scope: !1258, file: !1259, line: 874, baseType: !289, size: 128, offset: 6656)
!1545 = !DIDerivedType(tag: DW_TAG_member, name: "vfork_done", scope: !1258, file: !1259, line: 876, baseType: !1546, size: 64, offset: 6784)
!1546 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1547, size: 64)
!1547 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "completion", file: !1548, line: 26, size: 192, elements: !1549)
!1548 = !DIFile(filename: "./include/linux/completion.h", directory: "/home/lizy2001/genbc/linux")
!1549 = !{!1550, !1551}
!1550 = !DIDerivedType(tag: DW_TAG_member, name: "done", scope: !1547, file: !1548, line: 27, baseType: !7, size: 32)
!1551 = !DIDerivedType(tag: DW_TAG_member, name: "wait", scope: !1547, file: !1548, line: 28, baseType: !1552, size: 128, offset: 64)
!1552 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "swait_queue_head", file: !1553, line: 43, size: 128, elements: !1554)
!1553 = !DIFile(filename: "./include/linux/swait.h", directory: "/home/lizy2001/genbc/linux")
!1554 = !{!1555, !1556}
!1555 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1552, file: !1553, line: 44, baseType: !1168)
!1556 = !DIDerivedType(tag: DW_TAG_member, name: "task_list", scope: !1552, file: !1553, line: 45, baseType: !289, size: 128)
!1557 = !DIDerivedType(tag: DW_TAG_member, name: "set_child_tid", scope: !1258, file: !1259, line: 879, baseType: !539, size: 64, offset: 6848)
!1558 = !DIDerivedType(tag: DW_TAG_member, name: "clear_child_tid", scope: !1258, file: !1259, line: 882, baseType: !539, size: 64, offset: 6912)
!1559 = !DIDerivedType(tag: DW_TAG_member, name: "utime", scope: !1258, file: !1259, line: 884, baseType: !336, size: 64, offset: 6976)
!1560 = !DIDerivedType(tag: DW_TAG_member, name: "stime", scope: !1258, file: !1259, line: 885, baseType: !336, size: 64, offset: 7040)
!1561 = !DIDerivedType(tag: DW_TAG_member, name: "gtime", scope: !1258, file: !1259, line: 890, baseType: !336, size: 64, offset: 7104)
!1562 = !DIDerivedType(tag: DW_TAG_member, name: "prev_cputime", scope: !1258, file: !1259, line: 891, baseType: !1563, size: 128, offset: 7168)
!1563 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "prev_cputime", file: !1259, line: 242, size: 128, elements: !1564)
!1564 = !{!1565, !1566, !1567}
!1565 = !DIDerivedType(tag: DW_TAG_member, name: "utime", scope: !1563, file: !1259, line: 244, baseType: !336, size: 64)
!1566 = !DIDerivedType(tag: DW_TAG_member, name: "stime", scope: !1563, file: !1259, line: 245, baseType: !336, size: 64, offset: 64)
!1567 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1563, file: !1259, line: 246, baseType: !1168, offset: 128)
!1568 = !DIDerivedType(tag: DW_TAG_member, name: "nvcsw", scope: !1258, file: !1259, line: 900, baseType: !317, size: 64, offset: 7296)
!1569 = !DIDerivedType(tag: DW_TAG_member, name: "nivcsw", scope: !1258, file: !1259, line: 901, baseType: !317, size: 64, offset: 7360)
!1570 = !DIDerivedType(tag: DW_TAG_member, name: "start_time", scope: !1258, file: !1259, line: 904, baseType: !336, size: 64, offset: 7424)
!1571 = !DIDerivedType(tag: DW_TAG_member, name: "start_boottime", scope: !1258, file: !1259, line: 907, baseType: !336, size: 64, offset: 7488)
!1572 = !DIDerivedType(tag: DW_TAG_member, name: "min_flt", scope: !1258, file: !1259, line: 910, baseType: !317, size: 64, offset: 7552)
!1573 = !DIDerivedType(tag: DW_TAG_member, name: "maj_flt", scope: !1258, file: !1259, line: 911, baseType: !317, size: 64, offset: 7616)
!1574 = !DIDerivedType(tag: DW_TAG_member, name: "posix_cputimers", scope: !1258, file: !1259, line: 914, baseType: !1575, size: 640, offset: 7680)
!1575 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "posix_cputimers", file: !1576, line: 123, size: 640, elements: !1577)
!1576 = !DIFile(filename: "./include/linux/posix-timers.h", directory: "/home/lizy2001/genbc/linux")
!1577 = !{!1578, !1584, !1585}
!1578 = !DIDerivedType(tag: DW_TAG_member, name: "bases", scope: !1575, file: !1576, line: 124, baseType: !1579, size: 576)
!1579 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1580, size: 576, elements: !867)
!1580 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "posix_cputimer_base", file: !1576, line: 108, size: 192, elements: !1581)
!1581 = !{!1582, !1583}
!1582 = !DIDerivedType(tag: DW_TAG_member, name: "nextevt", scope: !1580, file: !1576, line: 109, baseType: !336, size: 64)
!1583 = !DIDerivedType(tag: DW_TAG_member, name: "tqhead", scope: !1580, file: !1576, line: 110, baseType: !1384, size: 128, offset: 64)
!1584 = !DIDerivedType(tag: DW_TAG_member, name: "timers_active", scope: !1575, file: !1576, line: 125, baseType: !7, size: 32, offset: 576)
!1585 = !DIDerivedType(tag: DW_TAG_member, name: "expiry_active", scope: !1575, file: !1576, line: 126, baseType: !7, size: 32, offset: 608)
!1586 = !DIDerivedType(tag: DW_TAG_member, name: "posix_cputimers_work", scope: !1258, file: !1259, line: 917, baseType: !1587, size: 192, offset: 8320)
!1587 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "posix_cputimers_work", file: !1576, line: 134, size: 192, elements: !1588)
!1588 = !{!1589, !1590}
!1589 = !DIDerivedType(tag: DW_TAG_member, name: "work", scope: !1587, file: !1576, line: 135, baseType: !304, size: 128, align: 64)
!1590 = !DIDerivedType(tag: DW_TAG_member, name: "scheduled", scope: !1587, file: !1576, line: 136, baseType: !7, size: 32, offset: 128)
!1591 = !DIDerivedType(tag: DW_TAG_member, name: "ptracer_cred", scope: !1258, file: !1259, line: 923, baseType: !1592, size: 64, offset: 8512)
!1592 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1593, size: 64)
!1593 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1594)
!1594 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cred", file: !1595, line: 111, size: 1280, elements: !1596)
!1595 = !DIFile(filename: "./include/linux/cred.h", directory: "/home/lizy2001/genbc/linux")
!1596 = !{!1597, !1598, !1599, !1600, !1601, !1602, !1603, !1604, !1605, !1606, !1607, !1614, !1615, !1616, !1617, !1618, !1619, !1729, !1730, !1731, !1732, !1758, !1914, !1924}
!1597 = !DIDerivedType(tag: DW_TAG_member, name: "usage", scope: !1594, file: !1595, line: 112, baseType: !388, size: 32)
!1598 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !1594, file: !1595, line: 120, baseType: !649, size: 32, offset: 32)
!1599 = !DIDerivedType(tag: DW_TAG_member, name: "gid", scope: !1594, file: !1595, line: 121, baseType: !657, size: 32, offset: 64)
!1600 = !DIDerivedType(tag: DW_TAG_member, name: "suid", scope: !1594, file: !1595, line: 122, baseType: !649, size: 32, offset: 96)
!1601 = !DIDerivedType(tag: DW_TAG_member, name: "sgid", scope: !1594, file: !1595, line: 123, baseType: !657, size: 32, offset: 128)
!1602 = !DIDerivedType(tag: DW_TAG_member, name: "euid", scope: !1594, file: !1595, line: 124, baseType: !649, size: 32, offset: 160)
!1603 = !DIDerivedType(tag: DW_TAG_member, name: "egid", scope: !1594, file: !1595, line: 125, baseType: !657, size: 32, offset: 192)
!1604 = !DIDerivedType(tag: DW_TAG_member, name: "fsuid", scope: !1594, file: !1595, line: 126, baseType: !649, size: 32, offset: 224)
!1605 = !DIDerivedType(tag: DW_TAG_member, name: "fsgid", scope: !1594, file: !1595, line: 127, baseType: !657, size: 32, offset: 256)
!1606 = !DIDerivedType(tag: DW_TAG_member, name: "securebits", scope: !1594, file: !1595, line: 128, baseType: !7, size: 32, offset: 288)
!1607 = !DIDerivedType(tag: DW_TAG_member, name: "cap_inheritable", scope: !1594, file: !1595, line: 129, baseType: !1608, size: 64, offset: 320)
!1608 = !DIDerivedType(tag: DW_TAG_typedef, name: "kernel_cap_t", file: !1609, line: 26, baseType: !1610)
!1609 = !DIFile(filename: "./include/linux/capability.h", directory: "/home/lizy2001/genbc/linux")
!1610 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernel_cap_struct", file: !1609, line: 24, size: 64, elements: !1611)
!1611 = !{!1612}
!1612 = !DIDerivedType(tag: DW_TAG_member, name: "cap", scope: !1610, file: !1609, line: 25, baseType: !1613, size: 64)
!1613 = !DICompositeType(tag: DW_TAG_array_type, baseType: !468, size: 64, elements: !478)
!1614 = !DIDerivedType(tag: DW_TAG_member, name: "cap_permitted", scope: !1594, file: !1595, line: 130, baseType: !1608, size: 64, offset: 384)
!1615 = !DIDerivedType(tag: DW_TAG_member, name: "cap_effective", scope: !1594, file: !1595, line: 131, baseType: !1608, size: 64, offset: 448)
!1616 = !DIDerivedType(tag: DW_TAG_member, name: "cap_bset", scope: !1594, file: !1595, line: 132, baseType: !1608, size: 64, offset: 512)
!1617 = !DIDerivedType(tag: DW_TAG_member, name: "cap_ambient", scope: !1594, file: !1595, line: 133, baseType: !1608, size: 64, offset: 576)
!1618 = !DIDerivedType(tag: DW_TAG_member, name: "jit_keyring", scope: !1594, file: !1595, line: 135, baseType: !494, size: 8, offset: 640)
!1619 = !DIDerivedType(tag: DW_TAG_member, name: "session_keyring", scope: !1594, file: !1595, line: 137, baseType: !1620, size: 64, offset: 704)
!1620 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1621, size: 64)
!1621 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "key", file: !1622, line: 189, size: 1664, elements: !1623)
!1622 = !DIFile(filename: "./include/linux/key.h", directory: "/home/lizy2001/genbc/linux")
!1623 = !{!1624, !1625, !1628, !1633, !1634, !1637, !1638, !1645, !1646, !1647, !1648, !1651, !1652, !1653, !1654, !1655, !1693, !1714}
!1624 = !DIDerivedType(tag: DW_TAG_member, name: "usage", scope: !1621, file: !1622, line: 190, baseType: !1271, size: 32)
!1625 = !DIDerivedType(tag: DW_TAG_member, name: "serial", scope: !1621, file: !1622, line: 191, baseType: !1626, size: 32, offset: 32)
!1626 = !DIDerivedType(tag: DW_TAG_typedef, name: "key_serial_t", file: !1622, line: 28, baseType: !1627)
!1627 = !DIDerivedType(tag: DW_TAG_typedef, name: "int32_t", file: !282, line: 98, baseType: !1489)
!1628 = !DIDerivedType(tag: DW_TAG_member, scope: !1621, file: !1622, line: 192, baseType: !1629, size: 192, offset: 64)
!1629 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1621, file: !1622, line: 192, size: 192, elements: !1630)
!1630 = !{!1631, !1632}
!1631 = !DIDerivedType(tag: DW_TAG_member, name: "graveyard_link", scope: !1629, file: !1622, line: 193, baseType: !289, size: 128)
!1632 = !DIDerivedType(tag: DW_TAG_member, name: "serial_node", scope: !1629, file: !1622, line: 194, baseType: !438, size: 192, align: 64)
!1633 = !DIDerivedType(tag: DW_TAG_member, name: "sem", scope: !1621, file: !1622, line: 199, baseType: !1162, size: 256, offset: 256)
!1634 = !DIDerivedType(tag: DW_TAG_member, name: "user", scope: !1621, file: !1622, line: 200, baseType: !1635, size: 64, offset: 512)
!1635 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1636, size: 64)
!1636 = !DICompositeType(tag: DW_TAG_structure_type, name: "key_user", file: !1622, line: 200, flags: DIFlagFwdDecl)
!1637 = !DIDerivedType(tag: DW_TAG_member, name: "security", scope: !1621, file: !1622, line: 201, baseType: !570, size: 64, offset: 576)
!1638 = !DIDerivedType(tag: DW_TAG_member, scope: !1621, file: !1622, line: 202, baseType: !1639, size: 64, offset: 640)
!1639 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1621, file: !1622, line: 202, size: 64, elements: !1640)
!1640 = !{!1641, !1644}
!1641 = !DIDerivedType(tag: DW_TAG_member, name: "expiry", scope: !1639, file: !1622, line: 203, baseType: !1642, size: 64)
!1642 = !DIDerivedType(tag: DW_TAG_typedef, name: "time64_t", file: !1643, line: 8, baseType: !383)
!1643 = !DIFile(filename: "./include/linux/time64.h", directory: "/home/lizy2001/genbc/linux")
!1644 = !DIDerivedType(tag: DW_TAG_member, name: "revoked_at", scope: !1639, file: !1622, line: 204, baseType: !1642, size: 64)
!1645 = !DIDerivedType(tag: DW_TAG_member, name: "last_used_at", scope: !1621, file: !1622, line: 206, baseType: !1642, size: 64, offset: 704)
!1646 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !1621, file: !1622, line: 207, baseType: !649, size: 32, offset: 768)
!1647 = !DIDerivedType(tag: DW_TAG_member, name: "gid", scope: !1621, file: !1622, line: 208, baseType: !657, size: 32, offset: 800)
!1648 = !DIDerivedType(tag: DW_TAG_member, name: "perm", scope: !1621, file: !1622, line: 209, baseType: !1649, size: 32, offset: 832)
!1649 = !DIDerivedType(tag: DW_TAG_typedef, name: "key_perm_t", file: !1622, line: 31, baseType: !1650)
!1650 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint32_t", file: !282, line: 104, baseType: !707)
!1651 = !DIDerivedType(tag: DW_TAG_member, name: "quotalen", scope: !1621, file: !1622, line: 210, baseType: !477, size: 16, offset: 864)
!1652 = !DIDerivedType(tag: DW_TAG_member, name: "datalen", scope: !1621, file: !1622, line: 211, baseType: !477, size: 16, offset: 880)
!1653 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1621, file: !1622, line: 215, baseType: !1246, size: 16, offset: 896)
!1654 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1621, file: !1622, line: 222, baseType: !317, size: 64, offset: 960)
!1655 = !DIDerivedType(tag: DW_TAG_member, scope: !1621, file: !1622, line: 239, baseType: !1656, size: 320, offset: 1024)
!1656 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1621, file: !1622, line: 239, size: 320, elements: !1657)
!1657 = !{!1658, !1685}
!1658 = !DIDerivedType(tag: DW_TAG_member, name: "index_key", scope: !1656, file: !1622, line: 240, baseType: !1659, size: 320)
!1659 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "keyring_index_key", file: !1622, line: 108, size: 320, elements: !1660)
!1660 = !{!1661, !1662, !1674, !1677, !1684}
!1661 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !1659, file: !1622, line: 110, baseType: !317, size: 64)
!1662 = !DIDerivedType(tag: DW_TAG_member, scope: !1659, file: !1622, line: 111, baseType: !1663, size: 64, offset: 64)
!1663 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1659, file: !1622, line: 111, size: 64, elements: !1664)
!1664 = !{!1665, !1673}
!1665 = !DIDerivedType(tag: DW_TAG_member, scope: !1663, file: !1622, line: 112, baseType: !1666, size: 64)
!1666 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1663, file: !1622, line: 112, size: 64, elements: !1667)
!1667 = !{!1668, !1669}
!1668 = !DIDerivedType(tag: DW_TAG_member, name: "desc_len", scope: !1666, file: !1622, line: 114, baseType: !1038, size: 16)
!1669 = !DIDerivedType(tag: DW_TAG_member, name: "desc", scope: !1666, file: !1622, line: 115, baseType: !1670, size: 48, offset: 16)
!1670 = !DICompositeType(tag: DW_TAG_array_type, baseType: !273, size: 48, elements: !1671)
!1671 = !{!1672}
!1672 = !DISubrange(count: 6)
!1673 = !DIDerivedType(tag: DW_TAG_member, name: "x", scope: !1663, file: !1622, line: 121, baseType: !317, size: 64)
!1674 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1659, file: !1622, line: 123, baseType: !1675, size: 64, offset: 128)
!1675 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1676, size: 64)
!1676 = !DICompositeType(tag: DW_TAG_structure_type, name: "key_type", file: !1622, line: 96, flags: DIFlagFwdDecl)
!1677 = !DIDerivedType(tag: DW_TAG_member, name: "domain_tag", scope: !1659, file: !1622, line: 124, baseType: !1678, size: 64, offset: 192)
!1678 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1679, size: 64)
!1679 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "key_tag", file: !1622, line: 102, size: 192, elements: !1680)
!1680 = !{!1681, !1682, !1683}
!1681 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !1679, file: !1622, line: 103, baseType: !304, size: 128, align: 64)
!1682 = !DIDerivedType(tag: DW_TAG_member, name: "usage", scope: !1679, file: !1622, line: 104, baseType: !1271, size: 32, offset: 128)
!1683 = !DIDerivedType(tag: DW_TAG_member, name: "removed", scope: !1679, file: !1622, line: 105, baseType: !540, size: 8, offset: 160)
!1684 = !DIDerivedType(tag: DW_TAG_member, name: "description", scope: !1659, file: !1622, line: 125, baseType: !297, size: 64, offset: 256)
!1685 = !DIDerivedType(tag: DW_TAG_member, scope: !1656, file: !1622, line: 241, baseType: !1686, size: 320)
!1686 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1656, file: !1622, line: 241, size: 320, elements: !1687)
!1687 = !{!1688, !1689, !1690, !1691, !1692}
!1688 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !1686, file: !1622, line: 242, baseType: !317, size: 64)
!1689 = !DIDerivedType(tag: DW_TAG_member, name: "len_desc", scope: !1686, file: !1622, line: 243, baseType: !317, size: 64, offset: 64)
!1690 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1686, file: !1622, line: 244, baseType: !1675, size: 64, offset: 128)
!1691 = !DIDerivedType(tag: DW_TAG_member, name: "domain_tag", scope: !1686, file: !1622, line: 245, baseType: !1678, size: 64, offset: 192)
!1692 = !DIDerivedType(tag: DW_TAG_member, name: "description", scope: !1686, file: !1622, line: 246, baseType: !577, size: 64, offset: 256)
!1693 = !DIDerivedType(tag: DW_TAG_member, scope: !1621, file: !1622, line: 254, baseType: !1694, size: 256, offset: 1344)
!1694 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1621, file: !1622, line: 254, size: 256, elements: !1695)
!1695 = !{!1696, !1702}
!1696 = !DIDerivedType(tag: DW_TAG_member, name: "payload", scope: !1694, file: !1622, line: 255, baseType: !1697, size: 256)
!1697 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "key_payload", file: !1622, line: 128, size: 256, elements: !1698)
!1698 = !{!1699, !1700}
!1699 = !DIDerivedType(tag: DW_TAG_member, name: "rcu_data0", scope: !1697, file: !1622, line: 129, baseType: !570, size: 64)
!1700 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1697, file: !1622, line: 130, baseType: !1701, size: 256)
!1701 = !DICompositeType(tag: DW_TAG_array_type, baseType: !570, size: 256, elements: !1202)
!1702 = !DIDerivedType(tag: DW_TAG_member, scope: !1694, file: !1622, line: 256, baseType: !1703, size: 256)
!1703 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1694, file: !1622, line: 256, size: 256, elements: !1704)
!1704 = !{!1705, !1706}
!1705 = !DIDerivedType(tag: DW_TAG_member, name: "name_link", scope: !1703, file: !1622, line: 258, baseType: !289, size: 128)
!1706 = !DIDerivedType(tag: DW_TAG_member, name: "keys", scope: !1703, file: !1622, line: 259, baseType: !1707, size: 128, offset: 128)
!1707 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "assoc_array", file: !1708, line: 22, size: 128, elements: !1709)
!1708 = !DIFile(filename: "./include/linux/assoc_array.h", directory: "/home/lizy2001/genbc/linux")
!1709 = !{!1710, !1713}
!1710 = !DIDerivedType(tag: DW_TAG_member, name: "root", scope: !1707, file: !1708, line: 23, baseType: !1711, size: 64)
!1711 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1712, size: 64)
!1712 = !DICompositeType(tag: DW_TAG_structure_type, name: "assoc_array_ptr", file: !1708, line: 23, flags: DIFlagFwdDecl)
!1713 = !DIDerivedType(tag: DW_TAG_member, name: "nr_leaves_on_tree", scope: !1707, file: !1708, line: 24, baseType: !317, size: 64, offset: 64)
!1714 = !DIDerivedType(tag: DW_TAG_member, name: "restrict_link", scope: !1621, file: !1622, line: 274, baseType: !1715, size: 64, offset: 1600)
!1715 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1716, size: 64)
!1716 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "key_restriction", file: !1622, line: 170, size: 192, elements: !1717)
!1717 = !{!1718, !1727, !1728}
!1718 = !DIDerivedType(tag: DW_TAG_member, name: "check", scope: !1716, file: !1622, line: 171, baseType: !1719, size: 64)
!1719 = !DIDerivedType(tag: DW_TAG_typedef, name: "key_restrict_link_func_t", file: !1622, line: 165, baseType: !1720)
!1720 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1721, size: 64)
!1721 = !DISubroutineType(types: !1722)
!1722 = !{!37, !1620, !1723, !1725, !1620}
!1723 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1724, size: 64)
!1724 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1676)
!1725 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1726, size: 64)
!1726 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1697)
!1727 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !1716, file: !1622, line: 172, baseType: !1620, size: 64, offset: 64)
!1728 = !DIDerivedType(tag: DW_TAG_member, name: "keytype", scope: !1716, file: !1622, line: 173, baseType: !1675, size: 64, offset: 128)
!1729 = !DIDerivedType(tag: DW_TAG_member, name: "process_keyring", scope: !1594, file: !1595, line: 138, baseType: !1620, size: 64, offset: 768)
!1730 = !DIDerivedType(tag: DW_TAG_member, name: "thread_keyring", scope: !1594, file: !1595, line: 139, baseType: !1620, size: 64, offset: 832)
!1731 = !DIDerivedType(tag: DW_TAG_member, name: "request_key_auth", scope: !1594, file: !1595, line: 140, baseType: !1620, size: 64, offset: 896)
!1732 = !DIDerivedType(tag: DW_TAG_member, name: "user", scope: !1594, file: !1595, line: 145, baseType: !1733, size: 64, offset: 960)
!1733 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1734, size: 64)
!1734 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "user_struct", file: !1735, line: 13, size: 896, elements: !1736)
!1735 = !DIFile(filename: "./include/linux/sched/user.h", directory: "/home/lizy2001/genbc/linux")
!1736 = !{!1737, !1738, !1739, !1740, !1741, !1742, !1743, !1744, !1745, !1746, !1747}
!1737 = !DIDerivedType(tag: DW_TAG_member, name: "__count", scope: !1734, file: !1735, line: 14, baseType: !1271, size: 32)
!1738 = !DIDerivedType(tag: DW_TAG_member, name: "processes", scope: !1734, file: !1735, line: 15, baseType: !388, size: 32, offset: 32)
!1739 = !DIDerivedType(tag: DW_TAG_member, name: "sigpending", scope: !1734, file: !1735, line: 16, baseType: !388, size: 32, offset: 64)
!1740 = !DIDerivedType(tag: DW_TAG_member, name: "epoll_watches", scope: !1734, file: !1735, line: 21, baseType: !376, size: 64, offset: 128)
!1741 = !DIDerivedType(tag: DW_TAG_member, name: "locked_shm", scope: !1734, file: !1735, line: 27, baseType: !317, size: 64, offset: 192)
!1742 = !DIDerivedType(tag: DW_TAG_member, name: "unix_inflight", scope: !1734, file: !1735, line: 28, baseType: !317, size: 64, offset: 256)
!1743 = !DIDerivedType(tag: DW_TAG_member, name: "pipe_bufs", scope: !1734, file: !1735, line: 29, baseType: !376, size: 64, offset: 320)
!1744 = !DIDerivedType(tag: DW_TAG_member, name: "uidhash_node", scope: !1734, file: !1735, line: 32, baseType: !281, size: 128, offset: 384)
!1745 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !1734, file: !1735, line: 33, baseType: !649, size: 32, offset: 512)
!1746 = !DIDerivedType(tag: DW_TAG_member, name: "locked_vm", scope: !1734, file: !1735, line: 37, baseType: !376, size: 64, offset: 576)
!1747 = !DIDerivedType(tag: DW_TAG_member, name: "ratelimit", scope: !1734, file: !1735, line: 44, baseType: !1748, size: 256, offset: 640)
!1748 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ratelimit_state", file: !1749, line: 15, size: 256, elements: !1750)
!1749 = !DIFile(filename: "./include/linux/ratelimit_types.h", directory: "/home/lizy2001/genbc/linux")
!1750 = !{!1751, !1752, !1753, !1754, !1755, !1756, !1757}
!1751 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1748, file: !1749, line: 16, baseType: !1168)
!1752 = !DIDerivedType(tag: DW_TAG_member, name: "interval", scope: !1748, file: !1749, line: 18, baseType: !37, size: 32)
!1753 = !DIDerivedType(tag: DW_TAG_member, name: "burst", scope: !1748, file: !1749, line: 19, baseType: !37, size: 32, offset: 32)
!1754 = !DIDerivedType(tag: DW_TAG_member, name: "printed", scope: !1748, file: !1749, line: 20, baseType: !37, size: 32, offset: 64)
!1755 = !DIDerivedType(tag: DW_TAG_member, name: "missed", scope: !1748, file: !1749, line: 21, baseType: !37, size: 32, offset: 96)
!1756 = !DIDerivedType(tag: DW_TAG_member, name: "begin", scope: !1748, file: !1749, line: 22, baseType: !317, size: 64, offset: 128)
!1757 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1748, file: !1749, line: 23, baseType: !317, size: 64, offset: 192)
!1758 = !DIDerivedType(tag: DW_TAG_member, name: "user_ns", scope: !1594, file: !1595, line: 146, baseType: !1759, size: 64, offset: 1024)
!1759 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1760, size: 64)
!1760 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "user_namespace", file: !1761, line: 56, size: 4160, elements: !1762)
!1761 = !DIFile(filename: "./include/linux/user_namespace.h", directory: "/home/lizy2001/genbc/linux")
!1762 = !{!1763, !1785, !1786, !1787, !1788, !1789, !1790, !1791, !1792, !1802, !1803, !1804, !1805, !1806, !1818, !1899, !1900, !1912}
!1763 = !DIDerivedType(tag: DW_TAG_member, name: "uid_map", scope: !1760, file: !1761, line: 57, baseType: !1764, size: 576)
!1764 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uid_gid_map", file: !1761, line: 23, size: 576, elements: !1765)
!1765 = !{!1766, !1767}
!1766 = !DIDerivedType(tag: DW_TAG_member, name: "nr_extents", scope: !1764, file: !1761, line: 24, baseType: !707, size: 32)
!1767 = !DIDerivedType(tag: DW_TAG_member, scope: !1764, file: !1761, line: 25, baseType: !1768, size: 512, offset: 64)
!1768 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1764, file: !1761, line: 25, size: 512, elements: !1769)
!1769 = !{!1770, !1779}
!1770 = !DIDerivedType(tag: DW_TAG_member, name: "extent", scope: !1768, file: !1761, line: 26, baseType: !1771, size: 480)
!1771 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1772, size: 480, elements: !1777)
!1772 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uid_gid_extent", file: !1761, line: 17, size: 96, elements: !1773)
!1773 = !{!1774, !1775, !1776}
!1774 = !DIDerivedType(tag: DW_TAG_member, name: "first", scope: !1772, file: !1761, line: 18, baseType: !707, size: 32)
!1775 = !DIDerivedType(tag: DW_TAG_member, name: "lower_first", scope: !1772, file: !1761, line: 19, baseType: !707, size: 32, offset: 32)
!1776 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !1772, file: !1761, line: 20, baseType: !707, size: 32, offset: 64)
!1777 = !{!1778}
!1778 = !DISubrange(count: 5)
!1779 = !DIDerivedType(tag: DW_TAG_member, scope: !1768, file: !1761, line: 27, baseType: !1780, size: 128)
!1780 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1768, file: !1761, line: 27, size: 128, elements: !1781)
!1781 = !{!1782, !1784}
!1782 = !DIDerivedType(tag: DW_TAG_member, name: "forward", scope: !1780, file: !1761, line: 28, baseType: !1783, size: 64)
!1783 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1772, size: 64)
!1784 = !DIDerivedType(tag: DW_TAG_member, name: "reverse", scope: !1780, file: !1761, line: 29, baseType: !1783, size: 64, offset: 64)
!1785 = !DIDerivedType(tag: DW_TAG_member, name: "gid_map", scope: !1760, file: !1761, line: 58, baseType: !1764, size: 576, offset: 576)
!1786 = !DIDerivedType(tag: DW_TAG_member, name: "projid_map", scope: !1760, file: !1761, line: 59, baseType: !1764, size: 576, offset: 1152)
!1787 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !1760, file: !1761, line: 60, baseType: !388, size: 32, offset: 1728)
!1788 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !1760, file: !1761, line: 61, baseType: !1759, size: 64, offset: 1792)
!1789 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !1760, file: !1761, line: 62, baseType: !37, size: 32, offset: 1856)
!1790 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !1760, file: !1761, line: 63, baseType: !649, size: 32, offset: 1888)
!1791 = !DIDerivedType(tag: DW_TAG_member, name: "group", scope: !1760, file: !1761, line: 64, baseType: !657, size: 32, offset: 1920)
!1792 = !DIDerivedType(tag: DW_TAG_member, name: "ns", scope: !1760, file: !1761, line: 65, baseType: !1793, size: 192, offset: 1984)
!1793 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ns_common", file: !1794, line: 7, size: 192, elements: !1795)
!1794 = !DIFile(filename: "./include/linux/ns_common.h", directory: "/home/lizy2001/genbc/linux")
!1795 = !{!1796, !1797, !1801}
!1796 = !DIDerivedType(tag: DW_TAG_member, name: "stashed", scope: !1793, file: !1794, line: 8, baseType: !376, size: 64)
!1797 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !1793, file: !1794, line: 9, baseType: !1798, size: 64, offset: 64)
!1798 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1799, size: 64)
!1799 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1800)
!1800 = !DICompositeType(tag: DW_TAG_structure_type, name: "proc_ns_operations", file: !1794, line: 5, flags: DIFlagFwdDecl)
!1801 = !DIDerivedType(tag: DW_TAG_member, name: "inum", scope: !1793, file: !1794, line: 10, baseType: !7, size: 32, offset: 128)
!1802 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1760, file: !1761, line: 66, baseType: !317, size: 64, offset: 2176)
!1803 = !DIDerivedType(tag: DW_TAG_member, name: "keyring_name_list", scope: !1760, file: !1761, line: 74, baseType: !289, size: 128, offset: 2240)
!1804 = !DIDerivedType(tag: DW_TAG_member, name: "user_keyring_register", scope: !1760, file: !1761, line: 75, baseType: !1620, size: 64, offset: 2368)
!1805 = !DIDerivedType(tag: DW_TAG_member, name: "keyring_sem", scope: !1760, file: !1761, line: 76, baseType: !1162, size: 256, offset: 2432)
!1806 = !DIDerivedType(tag: DW_TAG_member, name: "work", scope: !1760, file: !1761, line: 83, baseType: !1807, size: 256, offset: 2688)
!1807 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "work_struct", file: !1808, line: 102, size: 256, elements: !1809)
!1808 = !DIFile(filename: "./include/linux/workqueue.h", directory: "/home/lizy2001/genbc/linux")
!1809 = !{!1810, !1811, !1812}
!1810 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1807, file: !1808, line: 103, baseType: !376, size: 64)
!1811 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !1807, file: !1808, line: 104, baseType: !289, size: 128, offset: 64)
!1812 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !1807, file: !1808, line: 105, baseType: !1813, size: 64, offset: 192)
!1813 = !DIDerivedType(tag: DW_TAG_typedef, name: "work_func_t", file: !1808, line: 21, baseType: !1814)
!1814 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1815, size: 64)
!1815 = !DISubroutineType(types: !1816)
!1816 = !{null, !1817}
!1817 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1807, size: 64)
!1818 = !DIDerivedType(tag: DW_TAG_member, name: "set", scope: !1760, file: !1761, line: 85, baseType: !1819, size: 768, offset: 2944)
!1819 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ctl_table_set", file: !1820, line: 156, size: 768, elements: !1821)
!1820 = !DIFile(filename: "./include/linux/sysctl.h", directory: "/home/lizy2001/genbc/linux")
!1821 = !{!1822, !1827}
!1822 = !DIDerivedType(tag: DW_TAG_member, name: "is_seen", scope: !1819, file: !1820, line: 157, baseType: !1823, size: 64)
!1823 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1824, size: 64)
!1824 = !DISubroutineType(types: !1825)
!1825 = !{!37, !1826}
!1826 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1819, size: 64)
!1827 = !DIDerivedType(tag: DW_TAG_member, name: "dir", scope: !1819, file: !1820, line: 158, baseType: !1828, size: 704, offset: 64)
!1828 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ctl_dir", file: !1820, line: 150, size: 704, elements: !1829)
!1829 = !{!1830, !1898}
!1830 = !DIDerivedType(tag: DW_TAG_member, name: "header", scope: !1828, file: !1820, line: 152, baseType: !1831, size: 640)
!1831 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ctl_table_header", file: !1820, line: 131, size: 640, elements: !1832)
!1832 = !{!1833, !1866, !1867, !1868, !1888, !1889, !1891, !1897}
!1833 = !DIDerivedType(tag: DW_TAG_member, scope: !1831, file: !1820, line: 132, baseType: !1834, size: 192)
!1834 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1831, file: !1820, line: 132, size: 192, elements: !1835)
!1835 = !{!1836, !1865}
!1836 = !DIDerivedType(tag: DW_TAG_member, scope: !1834, file: !1820, line: 133, baseType: !1837, size: 192)
!1837 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1834, file: !1820, line: 133, size: 192, elements: !1838)
!1838 = !{!1839, !1862, !1863, !1864}
!1839 = !DIDerivedType(tag: DW_TAG_member, name: "ctl_table", scope: !1837, file: !1820, line: 134, baseType: !1840, size: 64)
!1840 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1841, size: 64)
!1841 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ctl_table", file: !1820, line: 112, size: 512, elements: !1842)
!1842 = !{!1843, !1844, !1845, !1846, !1847, !1848, !1854, !1860, !1861}
!1843 = !DIDerivedType(tag: DW_TAG_member, name: "procname", scope: !1841, file: !1820, line: 113, baseType: !297, size: 64)
!1844 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1841, file: !1820, line: 114, baseType: !570, size: 64, offset: 64)
!1845 = !DIDerivedType(tag: DW_TAG_member, name: "maxlen", scope: !1841, file: !1820, line: 115, baseType: !37, size: 32, offset: 128)
!1846 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !1841, file: !1820, line: 116, baseType: !646, size: 16, offset: 160)
!1847 = !DIDerivedType(tag: DW_TAG_member, name: "child", scope: !1841, file: !1820, line: 117, baseType: !1840, size: 64, offset: 192)
!1848 = !DIDerivedType(tag: DW_TAG_member, name: "proc_handler", scope: !1841, file: !1820, line: 118, baseType: !1849, size: 64, offset: 256)
!1849 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1850, size: 64)
!1850 = !DIDerivedType(tag: DW_TAG_typedef, name: "proc_handler", file: !1820, line: 47, baseType: !1851)
!1851 = !DISubroutineType(types: !1852)
!1852 = !{!37, !1840, !37, !570, !1853, !969}
!1853 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !594, size: 64)
!1854 = !DIDerivedType(tag: DW_TAG_member, name: "poll", scope: !1841, file: !1820, line: 119, baseType: !1855, size: 64, offset: 320)
!1855 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1856, size: 64)
!1856 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ctl_table_poll", file: !1820, line: 94, size: 192, elements: !1857)
!1857 = !{!1858, !1859}
!1858 = !DIDerivedType(tag: DW_TAG_member, name: "event", scope: !1856, file: !1820, line: 95, baseType: !388, size: 32)
!1859 = !DIDerivedType(tag: DW_TAG_member, name: "wait", scope: !1856, file: !1820, line: 96, baseType: !1100, size: 128, offset: 64)
!1860 = !DIDerivedType(tag: DW_TAG_member, name: "extra1", scope: !1841, file: !1820, line: 120, baseType: !570, size: 64, offset: 384)
!1861 = !DIDerivedType(tag: DW_TAG_member, name: "extra2", scope: !1841, file: !1820, line: 121, baseType: !570, size: 64, offset: 448)
!1862 = !DIDerivedType(tag: DW_TAG_member, name: "used", scope: !1837, file: !1820, line: 135, baseType: !37, size: 32, offset: 64)
!1863 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !1837, file: !1820, line: 136, baseType: !37, size: 32, offset: 96)
!1864 = !DIDerivedType(tag: DW_TAG_member, name: "nreg", scope: !1837, file: !1820, line: 137, baseType: !37, size: 32, offset: 128)
!1865 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !1834, file: !1820, line: 139, baseType: !304, size: 128, align: 64)
!1866 = !DIDerivedType(tag: DW_TAG_member, name: "unregistering", scope: !1831, file: !1820, line: 141, baseType: !1546, size: 64, offset: 192)
!1867 = !DIDerivedType(tag: DW_TAG_member, name: "ctl_table_arg", scope: !1831, file: !1820, line: 142, baseType: !1840, size: 64, offset: 256)
!1868 = !DIDerivedType(tag: DW_TAG_member, name: "root", scope: !1831, file: !1820, line: 143, baseType: !1869, size: 64, offset: 320)
!1869 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1870, size: 64)
!1870 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ctl_table_root", file: !1820, line: 161, size: 960, elements: !1871)
!1871 = !{!1872, !1873, !1877, !1884}
!1872 = !DIDerivedType(tag: DW_TAG_member, name: "default_set", scope: !1870, file: !1820, line: 162, baseType: !1819, size: 768)
!1873 = !DIDerivedType(tag: DW_TAG_member, name: "lookup", scope: !1870, file: !1820, line: 163, baseType: !1874, size: 64, offset: 768)
!1874 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1875, size: 64)
!1875 = !DISubroutineType(types: !1876)
!1876 = !{!1826, !1869}
!1877 = !DIDerivedType(tag: DW_TAG_member, name: "set_ownership", scope: !1870, file: !1820, line: 164, baseType: !1878, size: 64, offset: 832)
!1878 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1879, size: 64)
!1879 = !DISubroutineType(types: !1880)
!1880 = !{null, !1881, !1840, !1882, !1883}
!1881 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1831, size: 64)
!1882 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !649, size: 64)
!1883 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !657, size: 64)
!1884 = !DIDerivedType(tag: DW_TAG_member, name: "permissions", scope: !1870, file: !1820, line: 167, baseType: !1885, size: 64, offset: 896)
!1885 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1886, size: 64)
!1886 = !DISubroutineType(types: !1887)
!1887 = !{!37, !1881, !1840}
!1888 = !DIDerivedType(tag: DW_TAG_member, name: "set", scope: !1831, file: !1820, line: 144, baseType: !1826, size: 64, offset: 384)
!1889 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !1831, file: !1820, line: 145, baseType: !1890, size: 64, offset: 448)
!1890 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1828, size: 64)
!1891 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !1831, file: !1820, line: 146, baseType: !1892, size: 64, offset: 512)
!1892 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1893, size: 64)
!1893 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ctl_node", file: !1820, line: 124, size: 256, elements: !1894)
!1894 = !{!1895, !1896}
!1895 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !1893, file: !1820, line: 125, baseType: !438, size: 192, align: 64)
!1896 = !DIDerivedType(tag: DW_TAG_member, name: "header", scope: !1893, file: !1820, line: 126, baseType: !1881, size: 64, offset: 192)
!1897 = !DIDerivedType(tag: DW_TAG_member, name: "inodes", scope: !1831, file: !1820, line: 147, baseType: !857, size: 64, offset: 576)
!1898 = !DIDerivedType(tag: DW_TAG_member, name: "root", scope: !1828, file: !1820, line: 153, baseType: !1133, size: 64, offset: 640)
!1899 = !DIDerivedType(tag: DW_TAG_member, name: "sysctls", scope: !1760, file: !1761, line: 86, baseType: !1881, size: 64, offset: 3712)
!1900 = !DIDerivedType(tag: DW_TAG_member, name: "ucounts", scope: !1760, file: !1761, line: 88, baseType: !1901, size: 64, offset: 3776)
!1901 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1902, size: 64)
!1902 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ucounts", file: !1761, line: 92, size: 576, elements: !1903)
!1903 = !{!1904, !1905, !1906, !1907, !1908}
!1904 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !1902, file: !1761, line: 93, baseType: !281, size: 128)
!1905 = !DIDerivedType(tag: DW_TAG_member, name: "ns", scope: !1902, file: !1761, line: 94, baseType: !1759, size: 64, offset: 128)
!1906 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !1902, file: !1761, line: 95, baseType: !649, size: 32, offset: 192)
!1907 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !1902, file: !1761, line: 96, baseType: !37, size: 32, offset: 224)
!1908 = !DIDerivedType(tag: DW_TAG_member, name: "ucount", scope: !1902, file: !1761, line: 97, baseType: !1909, size: 320, offset: 256)
!1909 = !DICompositeType(tag: DW_TAG_array_type, baseType: !388, size: 320, elements: !1910)
!1910 = !{!1911}
!1911 = !DISubrange(count: 10)
!1912 = !DIDerivedType(tag: DW_TAG_member, name: "ucount_max", scope: !1760, file: !1761, line: 89, baseType: !1913, size: 320, offset: 3840)
!1913 = !DICompositeType(tag: DW_TAG_array_type, baseType: !37, size: 320, elements: !1910)
!1914 = !DIDerivedType(tag: DW_TAG_member, name: "group_info", scope: !1594, file: !1595, line: 147, baseType: !1915, size: 64, offset: 1088)
!1915 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1916, size: 64)
!1916 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "group_info", file: !1595, line: 25, size: 64, elements: !1917)
!1917 = !{!1918, !1919, !1920}
!1918 = !DIDerivedType(tag: DW_TAG_member, name: "usage", scope: !1916, file: !1595, line: 26, baseType: !388, size: 32)
!1919 = !DIDerivedType(tag: DW_TAG_member, name: "ngroups", scope: !1916, file: !1595, line: 27, baseType: !37, size: 32, offset: 32)
!1920 = !DIDerivedType(tag: DW_TAG_member, name: "gid", scope: !1916, file: !1595, line: 28, baseType: !1921, offset: 64)
!1921 = !DICompositeType(tag: DW_TAG_array_type, baseType: !657, elements: !1922)
!1922 = !{!1923}
!1923 = !DISubrange(count: 0)
!1924 = !DIDerivedType(tag: DW_TAG_member, scope: !1594, file: !1595, line: 149, baseType: !1925, size: 128, offset: 1152)
!1925 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1594, file: !1595, line: 149, size: 128, elements: !1926)
!1926 = !{!1927, !1928}
!1927 = !DIDerivedType(tag: DW_TAG_member, name: "non_rcu", scope: !1925, file: !1595, line: 150, baseType: !37, size: 32)
!1928 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !1925, file: !1595, line: 151, baseType: !304, size: 128, align: 64)
!1929 = !DIDerivedType(tag: DW_TAG_member, name: "real_cred", scope: !1258, file: !1259, line: 926, baseType: !1592, size: 64, offset: 8576)
!1930 = !DIDerivedType(tag: DW_TAG_member, name: "cred", scope: !1258, file: !1259, line: 929, baseType: !1592, size: 64, offset: 8640)
!1931 = !DIDerivedType(tag: DW_TAG_member, name: "cached_requested_key", scope: !1258, file: !1259, line: 933, baseType: !1620, size: 64, offset: 8704)
!1932 = !DIDerivedType(tag: DW_TAG_member, name: "comm", scope: !1258, file: !1259, line: 943, baseType: !272, size: 128, offset: 8768)
!1933 = !DIDerivedType(tag: DW_TAG_member, name: "nameidata", scope: !1258, file: !1259, line: 945, baseType: !1934, size: 64, offset: 8896)
!1934 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1935, size: 64)
!1935 = !DICompositeType(tag: DW_TAG_structure_type, name: "nameidata", file: !1259, line: 49, flags: DIFlagFwdDecl)
!1936 = !DIDerivedType(tag: DW_TAG_member, name: "fs", scope: !1258, file: !1259, line: 956, baseType: !1937, size: 64, offset: 8960)
!1937 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1938, size: 64)
!1938 = !DICompositeType(tag: DW_TAG_structure_type, name: "fs_struct", file: !1259, line: 45, flags: DIFlagFwdDecl)
!1939 = !DIDerivedType(tag: DW_TAG_member, name: "files", scope: !1258, file: !1259, line: 959, baseType: !1940, size: 64, offset: 9024)
!1940 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1941, size: 64)
!1941 = !DICompositeType(tag: DW_TAG_structure_type, name: "files_struct", file: !1259, line: 959, flags: DIFlagFwdDecl)
!1942 = !DIDerivedType(tag: DW_TAG_member, name: "io_uring", scope: !1258, file: !1259, line: 962, baseType: !1943, size: 64, offset: 9088)
!1943 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1944, size: 64)
!1944 = !DICompositeType(tag: DW_TAG_structure_type, name: "io_uring_task", file: !1259, line: 66, flags: DIFlagFwdDecl)
!1945 = !DIDerivedType(tag: DW_TAG_member, name: "nsproxy", scope: !1258, file: !1259, line: 966, baseType: !1946, size: 64, offset: 9152)
!1946 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1947, size: 64)
!1947 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "nsproxy", file: !1948, line: 31, size: 576, elements: !1949)
!1948 = !DIFile(filename: "./include/linux/nsproxy.h", directory: "/home/lizy2001/genbc/linux")
!1949 = !{!1950, !1951, !1954, !1957, !1960, !1961, !3565, !3568, !3569}
!1950 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !1947, file: !1948, line: 32, baseType: !388, size: 32)
!1951 = !DIDerivedType(tag: DW_TAG_member, name: "uts_ns", scope: !1947, file: !1948, line: 33, baseType: !1952, size: 64, offset: 64)
!1952 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1953, size: 64)
!1953 = !DICompositeType(tag: DW_TAG_structure_type, name: "uts_namespace", file: !1948, line: 9, flags: DIFlagFwdDecl)
!1954 = !DIDerivedType(tag: DW_TAG_member, name: "ipc_ns", scope: !1947, file: !1948, line: 34, baseType: !1955, size: 64, offset: 128)
!1955 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1956, size: 64)
!1956 = !DICompositeType(tag: DW_TAG_structure_type, name: "ipc_namespace", file: !1948, line: 10, flags: DIFlagFwdDecl)
!1957 = !DIDerivedType(tag: DW_TAG_member, name: "mnt_ns", scope: !1947, file: !1948, line: 35, baseType: !1958, size: 64, offset: 192)
!1958 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1959, size: 64)
!1959 = !DICompositeType(tag: DW_TAG_structure_type, name: "mnt_namespace", file: !1948, line: 8, flags: DIFlagFwdDecl)
!1960 = !DIDerivedType(tag: DW_TAG_member, name: "pid_ns_for_children", scope: !1947, file: !1948, line: 36, baseType: !1539, size: 64, offset: 256)
!1961 = !DIDerivedType(tag: DW_TAG_member, name: "net_ns", scope: !1947, file: !1948, line: 37, baseType: !1962, size: 64, offset: 320)
!1962 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1963, size: 64)
!1963 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "net", file: !1964, line: 56, size: 16896, elements: !1965)
!1964 = !DIFile(filename: "./include/net/net_namespace.h", directory: "/home/lizy2001/genbc/linux")
!1965 = !{!1966, !1967, !1968, !1969, !1970, !1971, !1972, !1973, !1974, !1975, !1976, !1977, !1978, !1979, !1980, !1994, !1995, !1996, !2000, !2001, !2002, !2003, !2004, !2007, !2009, !2010, !2025, !2026, !2027, !2028, !2038, !2108, !2114, !2120, !2133, !2514, !2890, !2891, !2894, !3537, !3538, !3564}
!1966 = !DIDerivedType(tag: DW_TAG_member, name: "passive", scope: !1963, file: !1964, line: 60, baseType: !1271, size: 32)
!1967 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !1963, file: !1964, line: 63, baseType: !1271, size: 32, offset: 32)
!1968 = !DIDerivedType(tag: DW_TAG_member, name: "rules_mod_lock", scope: !1963, file: !1964, line: 66, baseType: !729, offset: 64)
!1969 = !DIDerivedType(tag: DW_TAG_member, name: "dev_unreg_count", scope: !1963, file: !1964, line: 68, baseType: !7, size: 32, offset: 64)
!1970 = !DIDerivedType(tag: DW_TAG_member, name: "dev_base_seq", scope: !1963, file: !1964, line: 70, baseType: !7, size: 32, offset: 96)
!1971 = !DIDerivedType(tag: DW_TAG_member, name: "ifindex", scope: !1963, file: !1964, line: 71, baseType: !37, size: 32, offset: 128)
!1972 = !DIDerivedType(tag: DW_TAG_member, name: "nsid_lock", scope: !1963, file: !1964, line: 73, baseType: !729, offset: 160)
!1973 = !DIDerivedType(tag: DW_TAG_member, name: "fnhe_genid", scope: !1963, file: !1964, line: 74, baseType: !388, size: 32, offset: 160)
!1974 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !1963, file: !1964, line: 76, baseType: !289, size: 128, offset: 192)
!1975 = !DIDerivedType(tag: DW_TAG_member, name: "exit_list", scope: !1963, file: !1964, line: 77, baseType: !289, size: 128, offset: 320)
!1976 = !DIDerivedType(tag: DW_TAG_member, name: "cleanup_list", scope: !1963, file: !1964, line: 83, baseType: !992, size: 64, offset: 448)
!1977 = !DIDerivedType(tag: DW_TAG_member, name: "key_domain", scope: !1963, file: !1964, line: 86, baseType: !1678, size: 64, offset: 512)
!1978 = !DIDerivedType(tag: DW_TAG_member, name: "user_ns", scope: !1963, file: !1964, line: 88, baseType: !1759, size: 64, offset: 576)
!1979 = !DIDerivedType(tag: DW_TAG_member, name: "ucounts", scope: !1963, file: !1964, line: 89, baseType: !1901, size: 64, offset: 640)
!1980 = !DIDerivedType(tag: DW_TAG_member, name: "netns_ids", scope: !1963, file: !1964, line: 90, baseType: !1981, size: 192, offset: 704)
!1981 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "idr", file: !1982, line: 19, size: 192, elements: !1983)
!1982 = !DIFile(filename: "./include/linux/idr.h", directory: "/home/lizy2001/genbc/linux")
!1983 = !{!1984, !1992, !1993}
!1984 = !DIDerivedType(tag: DW_TAG_member, name: "idr_rt", scope: !1981, file: !1982, line: 20, baseType: !1985, size: 128)
!1985 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xarray", file: !1986, line: 292, size: 128, elements: !1987)
!1986 = !DIFile(filename: "./include/linux/xarray.h", directory: "/home/lizy2001/genbc/linux")
!1987 = !{!1988, !1989, !1991}
!1988 = !DIDerivedType(tag: DW_TAG_member, name: "xa_lock", scope: !1985, file: !1986, line: 293, baseType: !729)
!1989 = !DIDerivedType(tag: DW_TAG_member, name: "xa_flags", scope: !1985, file: !1986, line: 295, baseType: !1990, size: 32)
!1990 = !DIDerivedType(tag: DW_TAG_typedef, name: "gfp_t", file: !282, line: 148, baseType: !7)
!1991 = !DIDerivedType(tag: DW_TAG_member, name: "xa_head", scope: !1985, file: !1986, line: 296, baseType: !570, size: 64, offset: 64)
!1992 = !DIDerivedType(tag: DW_TAG_member, name: "idr_base", scope: !1981, file: !1982, line: 21, baseType: !7, size: 32, offset: 128)
!1993 = !DIDerivedType(tag: DW_TAG_member, name: "idr_next", scope: !1981, file: !1982, line: 22, baseType: !7, size: 32, offset: 160)
!1994 = !DIDerivedType(tag: DW_TAG_member, name: "ns", scope: !1963, file: !1964, line: 92, baseType: !1793, size: 192, offset: 896)
!1995 = !DIDerivedType(tag: DW_TAG_member, name: "dev_base_head", scope: !1963, file: !1964, line: 94, baseType: !289, size: 128, offset: 1088)
!1996 = !DIDerivedType(tag: DW_TAG_member, name: "proc_net", scope: !1963, file: !1964, line: 95, baseType: !1997, size: 64, offset: 1216)
!1997 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1998, size: 64)
!1998 = !DICompositeType(tag: DW_TAG_structure_type, name: "proc_dir_entry", file: !1999, line: 14, flags: DIFlagFwdDecl)
!1999 = !DIFile(filename: "./include/linux/irqdesc.h", directory: "/home/lizy2001/genbc/linux")
!2000 = !DIDerivedType(tag: DW_TAG_member, name: "proc_net_stat", scope: !1963, file: !1964, line: 96, baseType: !1997, size: 64, offset: 1280)
!2001 = !DIDerivedType(tag: DW_TAG_member, name: "sysctls", scope: !1963, file: !1964, line: 99, baseType: !1819, size: 768, offset: 1344)
!2002 = !DIDerivedType(tag: DW_TAG_member, name: "rtnl", scope: !1963, file: !1964, line: 102, baseType: !450, size: 64, offset: 2112)
!2003 = !DIDerivedType(tag: DW_TAG_member, name: "genl_sock", scope: !1963, file: !1964, line: 103, baseType: !450, size: 64, offset: 2176)
!2004 = !DIDerivedType(tag: DW_TAG_member, name: "uevent_sock", scope: !1963, file: !1964, line: 105, baseType: !2005, size: 64, offset: 2240)
!2005 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2006, size: 64)
!2006 = !DICompositeType(tag: DW_TAG_structure_type, name: "uevent_sock", file: !1964, line: 48, flags: DIFlagFwdDecl)
!2007 = !DIDerivedType(tag: DW_TAG_member, name: "dev_name_head", scope: !1963, file: !1964, line: 107, baseType: !2008, size: 64, offset: 2304)
!2008 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !857, size: 64)
!2009 = !DIDerivedType(tag: DW_TAG_member, name: "dev_index_head", scope: !1963, file: !1964, line: 108, baseType: !2008, size: 64, offset: 2368)
!2010 = !DIDerivedType(tag: DW_TAG_member, name: "netdev_chain", scope: !1963, file: !1964, line: 109, baseType: !2011, size: 64, offset: 2432)
!2011 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "raw_notifier_head", file: !2012, line: 70, size: 64, elements: !2013)
!2012 = !DIFile(filename: "./include/linux/notifier.h", directory: "/home/lizy2001/genbc/linux")
!2013 = !{!2014}
!2014 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2011, file: !2012, line: 71, baseType: !2015, size: 64)
!2015 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2016, size: 64)
!2016 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "notifier_block", file: !2012, line: 54, size: 192, elements: !2017)
!2017 = !{!2018, !2023, !2024}
!2018 = !DIDerivedType(tag: DW_TAG_member, name: "notifier_call", scope: !2016, file: !2012, line: 55, baseType: !2019, size: 64)
!2019 = !DIDerivedType(tag: DW_TAG_typedef, name: "notifier_fn_t", file: !2012, line: 51, baseType: !2020)
!2020 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2021, size: 64)
!2021 = !DISubroutineType(types: !2022)
!2022 = !{!37, !2015, !317, !570}
!2023 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2016, file: !2012, line: 56, baseType: !2015, size: 64, offset: 64)
!2024 = !DIDerivedType(tag: DW_TAG_member, name: "priority", scope: !2016, file: !2012, line: 57, baseType: !37, size: 32, offset: 128)
!2025 = !DIDerivedType(tag: DW_TAG_member, name: "hash_mix", scope: !1963, file: !1964, line: 114, baseType: !707, size: 32, offset: 2496)
!2026 = !DIDerivedType(tag: DW_TAG_member, name: "loopback_dev", scope: !1963, file: !1964, line: 116, baseType: !295, size: 64, offset: 2560)
!2027 = !DIDerivedType(tag: DW_TAG_member, name: "rules_ops", scope: !1963, file: !1964, line: 119, baseType: !289, size: 128, offset: 2624)
!2028 = !DIDerivedType(tag: DW_TAG_member, name: "core", scope: !1963, file: !1964, line: 121, baseType: !2029, size: 256, offset: 2752)
!2029 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "netns_core", file: !2030, line: 8, size: 256, elements: !2031)
!2030 = !DIFile(filename: "./include/net/netns/core.h", directory: "/home/lizy2001/genbc/linux")
!2031 = !{!2032, !2033, !2034, !2035}
!2032 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_hdr", scope: !2029, file: !2030, line: 10, baseType: !1881, size: 64)
!2033 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_somaxconn", scope: !2029, file: !2030, line: 12, baseType: !37, size: 32, offset: 64)
!2034 = !DIDerivedType(tag: DW_TAG_member, name: "sock_inuse", scope: !2029, file: !2030, line: 15, baseType: !539, size: 64, offset: 128)
!2035 = !DIDerivedType(tag: DW_TAG_member, name: "prot_inuse", scope: !2029, file: !2030, line: 16, baseType: !2036, size: 64, offset: 192)
!2036 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2037, size: 64)
!2037 = !DICompositeType(tag: DW_TAG_structure_type, name: "prot_inuse", file: !2030, line: 6, flags: DIFlagFwdDecl)
!2038 = !DIDerivedType(tag: DW_TAG_member, name: "mib", scope: !1963, file: !1964, line: 122, baseType: !2039, size: 832, offset: 3008)
!2039 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "netns_mib", file: !2040, line: 7, size: 832, elements: !2041)
!2040 = !DIFile(filename: "./include/net/netns/mib.h", directory: "/home/lizy2001/genbc/linux")
!2041 = !{!2042, !2049, !2060, !2068, !2076, !2077, !2085, !2093, !2094, !2095, !2096, !2097, !2103}
!2042 = !DIDerivedType(tag: DW_TAG_member, name: "tcp_statistics", scope: !2039, file: !2040, line: 8, baseType: !2043, size: 64)
!2043 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2044, size: 64)
!2044 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tcp_mib", file: !2045, line: 92, size: 1024, elements: !2046)
!2045 = !DIFile(filename: "./include/net/snmp.h", directory: "/home/lizy2001/genbc/linux")
!2046 = !{!2047}
!2047 = !DIDerivedType(tag: DW_TAG_member, name: "mibs", scope: !2044, file: !2045, line: 93, baseType: !2048, size: 1024)
!2048 = !DICompositeType(tag: DW_TAG_array_type, baseType: !317, size: 1024, elements: !274)
!2049 = !DIDerivedType(tag: DW_TAG_member, name: "ip_statistics", scope: !2039, file: !2040, line: 9, baseType: !2050, size: 64, offset: 64)
!2050 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2051, size: 64)
!2051 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ipstats_mib", file: !2045, line: 51, size: 2368, elements: !2052)
!2052 = !{!2053, !2057}
!2053 = !DIDerivedType(tag: DW_TAG_member, name: "mibs", scope: !2051, file: !2045, line: 53, baseType: !2054, size: 2368)
!2054 = !DICompositeType(tag: DW_TAG_array_type, baseType: !336, size: 2368, elements: !2055)
!2055 = !{!2056}
!2056 = !DISubrange(count: 37)
!2057 = !DIDerivedType(tag: DW_TAG_member, name: "syncp", scope: !2051, file: !2045, line: 54, baseType: !2058, offset: 2368)
!2058 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "u64_stats_sync", file: !2059, line: 68, elements: !743)
!2059 = !DIFile(filename: "./include/linux/u64_stats_sync.h", directory: "/home/lizy2001/genbc/linux")
!2060 = !DIDerivedType(tag: DW_TAG_member, name: "net_statistics", scope: !2039, file: !2040, line: 10, baseType: !2061, size: 64, offset: 128)
!2061 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2062, size: 64)
!2062 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "linux_mib", file: !2045, line: 104, size: 7936, elements: !2063)
!2063 = !{!2064}
!2064 = !DIDerivedType(tag: DW_TAG_member, name: "mibs", scope: !2062, file: !2045, line: 105, baseType: !2065, size: 7936)
!2065 = !DICompositeType(tag: DW_TAG_array_type, baseType: !317, size: 7936, elements: !2066)
!2066 = !{!2067}
!2067 = !DISubrange(count: 124)
!2068 = !DIDerivedType(tag: DW_TAG_member, name: "udp_statistics", scope: !2039, file: !2040, line: 11, baseType: !2069, size: 64, offset: 192)
!2069 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2070, size: 64)
!2070 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "udp_mib", file: !2045, line: 98, size: 576, elements: !2071)
!2071 = !{!2072}
!2072 = !DIDerivedType(tag: DW_TAG_member, name: "mibs", scope: !2070, file: !2045, line: 99, baseType: !2073, size: 576)
!2073 = !DICompositeType(tag: DW_TAG_array_type, baseType: !317, size: 576, elements: !2074)
!2074 = !{!2075}
!2075 = !DISubrange(count: 9)
!2076 = !DIDerivedType(tag: DW_TAG_member, name: "udplite_statistics", scope: !2039, file: !2040, line: 12, baseType: !2069, size: 64, offset: 256)
!2077 = !DIDerivedType(tag: DW_TAG_member, name: "icmp_statistics", scope: !2039, file: !2040, line: 13, baseType: !2078, size: 64, offset: 320)
!2078 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2079, size: 64)
!2079 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "icmp_mib", file: !2045, line: 59, size: 1792, elements: !2080)
!2080 = !{!2081}
!2081 = !DIDerivedType(tag: DW_TAG_member, name: "mibs", scope: !2079, file: !2045, line: 60, baseType: !2082, size: 1792)
!2082 = !DICompositeType(tag: DW_TAG_array_type, baseType: !317, size: 1792, elements: !2083)
!2083 = !{!2084}
!2084 = !DISubrange(count: 28)
!2085 = !DIDerivedType(tag: DW_TAG_member, name: "icmpmsg_statistics", scope: !2039, file: !2040, line: 14, baseType: !2086, size: 64, offset: 384)
!2086 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2087, size: 64)
!2087 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "icmpmsg_mib", file: !2045, line: 64, size: 32768, elements: !2088)
!2088 = !{!2089}
!2089 = !DIDerivedType(tag: DW_TAG_member, name: "mibs", scope: !2087, file: !2045, line: 65, baseType: !2090, size: 32768)
!2090 = !DICompositeType(tag: DW_TAG_array_type, baseType: !376, size: 32768, elements: !2091)
!2091 = !{!2092}
!2092 = !DISubrange(count: 512)
!2093 = !DIDerivedType(tag: DW_TAG_member, name: "proc_net_devsnmp6", scope: !2039, file: !2040, line: 17, baseType: !1997, size: 64, offset: 448)
!2094 = !DIDerivedType(tag: DW_TAG_member, name: "udp_stats_in6", scope: !2039, file: !2040, line: 18, baseType: !2069, size: 64, offset: 512)
!2095 = !DIDerivedType(tag: DW_TAG_member, name: "udplite_stats_in6", scope: !2039, file: !2040, line: 19, baseType: !2069, size: 64, offset: 576)
!2096 = !DIDerivedType(tag: DW_TAG_member, name: "ipv6_statistics", scope: !2039, file: !2040, line: 20, baseType: !2050, size: 64, offset: 640)
!2097 = !DIDerivedType(tag: DW_TAG_member, name: "icmpv6_statistics", scope: !2039, file: !2040, line: 21, baseType: !2098, size: 64, offset: 704)
!2098 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2099, size: 64)
!2099 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "icmpv6_mib", file: !2045, line: 71, size: 384, elements: !2100)
!2100 = !{!2101}
!2101 = !DIDerivedType(tag: DW_TAG_member, name: "mibs", scope: !2099, file: !2045, line: 72, baseType: !2102, size: 384)
!2102 = !DICompositeType(tag: DW_TAG_array_type, baseType: !317, size: 384, elements: !1671)
!2103 = !DIDerivedType(tag: DW_TAG_member, name: "icmpv6msg_statistics", scope: !2039, file: !2040, line: 22, baseType: !2104, size: 64, offset: 768)
!2104 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2105, size: 64)
!2105 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "icmpv6msg_mib", file: !2045, line: 81, size: 32768, elements: !2106)
!2106 = !{!2107}
!2107 = !DIDerivedType(tag: DW_TAG_member, name: "mibs", scope: !2105, file: !2045, line: 82, baseType: !2090, size: 32768)
!2108 = !DIDerivedType(tag: DW_TAG_member, name: "packet", scope: !1963, file: !1964, line: 123, baseType: !2109, size: 256, offset: 3840)
!2109 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "netns_packet", file: !2110, line: 11, size: 256, elements: !2111)
!2110 = !DIFile(filename: "./include/net/netns/packet.h", directory: "/home/lizy2001/genbc/linux")
!2111 = !{!2112, !2113}
!2112 = !DIDerivedType(tag: DW_TAG_member, name: "sklist_lock", scope: !2109, file: !2110, line: 12, baseType: !954, size: 192)
!2113 = !DIDerivedType(tag: DW_TAG_member, name: "sklist", scope: !2109, file: !2110, line: 13, baseType: !857, size: 64, offset: 192)
!2114 = !DIDerivedType(tag: DW_TAG_member, name: "unx", scope: !1963, file: !1964, line: 124, baseType: !2115, size: 128, offset: 4096)
!2115 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "netns_unix", file: !2116, line: 9, size: 128, elements: !2117)
!2116 = !DIFile(filename: "./include/net/netns/unix.h", directory: "/home/lizy2001/genbc/linux")
!2117 = !{!2118, !2119}
!2118 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_max_dgram_qlen", scope: !2115, file: !2116, line: 10, baseType: !37, size: 32)
!2119 = !DIDerivedType(tag: DW_TAG_member, name: "ctl", scope: !2115, file: !2116, line: 11, baseType: !1881, size: 64, offset: 64)
!2120 = !DIDerivedType(tag: DW_TAG_member, name: "nexthop", scope: !1963, file: !1964, line: 125, baseType: !2121, size: 512, offset: 4224)
!2121 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "netns_nexthop", file: !2122, line: 11, size: 512, elements: !2123)
!2122 = !DIFile(filename: "./include/net/netns/nexthop.h", directory: "/home/lizy2001/genbc/linux")
!2123 = !{!2124, !2125, !2126, !2127, !2128}
!2124 = !DIDerivedType(tag: DW_TAG_member, name: "rb_root", scope: !2121, file: !2122, line: 12, baseType: !1133, size: 64)
!2125 = !DIDerivedType(tag: DW_TAG_member, name: "devhash", scope: !2121, file: !2122, line: 13, baseType: !2008, size: 64, offset: 64)
!2126 = !DIDerivedType(tag: DW_TAG_member, name: "seq", scope: !2121, file: !2122, line: 15, baseType: !7, size: 32, offset: 128)
!2127 = !DIDerivedType(tag: DW_TAG_member, name: "last_id_allocated", scope: !2121, file: !2122, line: 16, baseType: !707, size: 32, offset: 160)
!2128 = !DIDerivedType(tag: DW_TAG_member, name: "notifier_chain", scope: !2121, file: !2122, line: 17, baseType: !2129, size: 320, offset: 192)
!2129 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "blocking_notifier_head", file: !2012, line: 65, size: 320, elements: !2130)
!2130 = !{!2131, !2132}
!2131 = !DIDerivedType(tag: DW_TAG_member, name: "rwsem", scope: !2129, file: !2012, line: 66, baseType: !1162, size: 256)
!2132 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2129, file: !2012, line: 67, baseType: !2015, size: 64, offset: 256)
!2133 = !DIDerivedType(tag: DW_TAG_member, name: "ipv4", scope: !1963, file: !1964, line: 126, baseType: !2134, size: 5440, offset: 4736)
!2134 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "netns_ipv4", file: !2135, line: 43, size: 5440, elements: !2136)
!2135 = !DIFile(filename: "./include/net/netns/ipv4.h", directory: "/home/lizy2001/genbc/linux")
!2136 = !{!2137, !2138, !2139, !2140, !2141, !2142, !2145, !2146, !2149, !2150, !2151, !2152, !2153, !2154, !2156, !2157, !2160, !2161, !2303, !2304, !2305, !2306, !2307, !2308, !2309, !2321, !2322, !2323, !2324, !2325, !2326, !2327, !2328, !2329, !2330, !2331, !2332, !2333, !2334, !2335, !2336, !2337, !2338, !2339, !2340, !2341, !2342, !2343, !2344, !2345, !2346, !2347, !2348, !2349, !2350, !2351, !2352, !2353, !2354, !2355, !2356, !2357, !2358, !2359, !2360, !2361, !2362, !2363, !2364, !2365, !2366, !2367, !2368, !2369, !2370, !2371, !2372, !2373, !2374, !2375, !2376, !2377, !2378, !2379, !2380, !2381, !2382, !2383, !2384, !2385, !2387, !2388, !2389, !2390, !2391, !2399, !2400, !2401, !2405, !2408, !2409, !2410, !2411, !2412, !2413, !2414, !2415, !2416, !2417, !2418, !2419, !2425, !2426, !2428, !2429, !2503, !2504, !2505, !2506, !2507}
!2137 = !DIDerivedType(tag: DW_TAG_member, name: "forw_hdr", scope: !2134, file: !2135, line: 45, baseType: !1881, size: 64)
!2138 = !DIDerivedType(tag: DW_TAG_member, name: "frags_hdr", scope: !2134, file: !2135, line: 46, baseType: !1881, size: 64, offset: 64)
!2139 = !DIDerivedType(tag: DW_TAG_member, name: "ipv4_hdr", scope: !2134, file: !2135, line: 47, baseType: !1881, size: 64, offset: 128)
!2140 = !DIDerivedType(tag: DW_TAG_member, name: "route_hdr", scope: !2134, file: !2135, line: 48, baseType: !1881, size: 64, offset: 192)
!2141 = !DIDerivedType(tag: DW_TAG_member, name: "xfrm4_hdr", scope: !2134, file: !2135, line: 49, baseType: !1881, size: 64, offset: 256)
!2142 = !DIDerivedType(tag: DW_TAG_member, name: "devconf_all", scope: !2134, file: !2135, line: 51, baseType: !2143, size: 64, offset: 320)
!2143 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2144, size: 64)
!2144 = !DICompositeType(tag: DW_TAG_structure_type, name: "ipv4_devconf", file: !2135, line: 16, flags: DIFlagFwdDecl)
!2145 = !DIDerivedType(tag: DW_TAG_member, name: "devconf_dflt", scope: !2134, file: !2135, line: 52, baseType: !2143, size: 64, offset: 384)
!2146 = !DIDerivedType(tag: DW_TAG_member, name: "ra_chain", scope: !2134, file: !2135, line: 53, baseType: !2147, size: 64, offset: 448)
!2147 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2148, size: 64)
!2148 = !DICompositeType(tag: DW_TAG_structure_type, name: "ip_ra_chain", file: !2135, line: 53, flags: DIFlagFwdDecl)
!2149 = !DIDerivedType(tag: DW_TAG_member, name: "ra_mutex", scope: !2134, file: !2135, line: 54, baseType: !954, size: 192, offset: 512)
!2150 = !DIDerivedType(tag: DW_TAG_member, name: "fib_has_custom_local_routes", scope: !2134, file: !2135, line: 62, baseType: !540, size: 8, offset: 704)
!2151 = !DIDerivedType(tag: DW_TAG_member, name: "fib_table_hash", scope: !2134, file: !2135, line: 66, baseType: !2008, size: 64, offset: 768)
!2152 = !DIDerivedType(tag: DW_TAG_member, name: "fib_offload_disabled", scope: !2134, file: !2135, line: 67, baseType: !540, size: 8, offset: 832)
!2153 = !DIDerivedType(tag: DW_TAG_member, name: "fibnl", scope: !2134, file: !2135, line: 68, baseType: !450, size: 64, offset: 896)
!2154 = !DIDerivedType(tag: DW_TAG_member, name: "icmp_sk", scope: !2134, file: !2135, line: 70, baseType: !2155, size: 64, offset: 960)
!2155 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !450, size: 64)
!2156 = !DIDerivedType(tag: DW_TAG_member, name: "mc_autojoin_sk", scope: !2134, file: !2135, line: 71, baseType: !450, size: 64, offset: 1024)
!2157 = !DIDerivedType(tag: DW_TAG_member, name: "peers", scope: !2134, file: !2135, line: 73, baseType: !2158, size: 64, offset: 1088)
!2158 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2159, size: 64)
!2159 = !DICompositeType(tag: DW_TAG_structure_type, name: "inet_peer_base", file: !2135, line: 73, flags: DIFlagFwdDecl)
!2160 = !DIDerivedType(tag: DW_TAG_member, name: "tcp_sk", scope: !2134, file: !2135, line: 74, baseType: !2155, size: 64, offset: 1152)
!2161 = !DIDerivedType(tag: DW_TAG_member, name: "fqdir", scope: !2134, file: !2135, line: 75, baseType: !2162, size: 64, offset: 1216)
!2162 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2163, size: 64)
!2163 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fqdir", file: !2164, line: 9, size: 1728, elements: !2165)
!2164 = !DIFile(filename: "./include/net/inet_frag.h", directory: "/home/lizy2001/genbc/linux")
!2165 = !{!2166, !2167, !2168, !2169, !2170, !2298, !2299, !2300, !2301, !2302}
!2166 = !DIDerivedType(tag: DW_TAG_member, name: "high_thresh", scope: !2163, file: !2164, line: 11, baseType: !513, size: 64)
!2167 = !DIDerivedType(tag: DW_TAG_member, name: "low_thresh", scope: !2163, file: !2164, line: 12, baseType: !513, size: 64, offset: 64)
!2168 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !2163, file: !2164, line: 13, baseType: !37, size: 32, offset: 128)
!2169 = !DIDerivedType(tag: DW_TAG_member, name: "max_dist", scope: !2163, file: !2164, line: 14, baseType: !37, size: 32, offset: 160)
!2170 = !DIDerivedType(tag: DW_TAG_member, name: "f", scope: !2163, file: !2164, line: 15, baseType: !2171, size: 64, offset: 192)
!2171 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2172, size: 64)
!2172 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "inet_frags", file: !2164, line: 98, size: 960, elements: !2173)
!2173 = !{!2174, !2175, !2246, !2250, !2251, !2254, !2255, !2296, !2297}
!2174 = !DIDerivedType(tag: DW_TAG_member, name: "qsize", scope: !2172, file: !2164, line: 99, baseType: !7, size: 32)
!2175 = !DIDerivedType(tag: DW_TAG_member, name: "constructor", scope: !2172, file: !2164, line: 101, baseType: !2176, size: 64, offset: 64)
!2176 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2177, size: 64)
!2177 = !DISubroutineType(types: !2178)
!2178 = !{null, !2179, !2244}
!2179 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2180, size: 64)
!2180 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "inet_frag_queue", file: !2164, line: 77, size: 1408, elements: !2181)
!2181 = !{!2182, !2188, !2220, !2232, !2233, !2234, !2235, !2236, !2237, !2238, !2239, !2240, !2241, !2242, !2243}
!2182 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2180, file: !2164, line: 78, baseType: !2183, size: 64)
!2183 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rhash_head", file: !2184, line: 17, size: 64, elements: !2185)
!2184 = !DIFile(filename: "./include/linux/rhashtable-types.h", directory: "/home/lizy2001/genbc/linux")
!2185 = !{!2186}
!2186 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2183, file: !2184, line: 18, baseType: !2187, size: 64)
!2187 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2183, size: 64)
!2188 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !2180, file: !2164, line: 82, baseType: !2189, size: 352, offset: 64)
!2189 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2180, file: !2164, line: 79, size: 352, elements: !2190)
!2190 = !{!2191, !2200}
!2191 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !2189, file: !2164, line: 80, baseType: !2192, size: 160)
!2192 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "frag_v4_compare_key", file: !2164, line: 41, size: 160, elements: !2193)
!2193 = !{!2194, !2195, !2196, !2197, !2198, !2199}
!2194 = !DIDerivedType(tag: DW_TAG_member, name: "saddr", scope: !2192, file: !2164, line: 42, baseType: !466, size: 32)
!2195 = !DIDerivedType(tag: DW_TAG_member, name: "daddr", scope: !2192, file: !2164, line: 43, baseType: !466, size: 32, offset: 32)
!2196 = !DIDerivedType(tag: DW_TAG_member, name: "user", scope: !2192, file: !2164, line: 44, baseType: !707, size: 32, offset: 64)
!2197 = !DIDerivedType(tag: DW_TAG_member, name: "vif", scope: !2192, file: !2164, line: 45, baseType: !707, size: 32, offset: 96)
!2198 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !2192, file: !2164, line: 46, baseType: !489, size: 16, offset: 128)
!2199 = !DIDerivedType(tag: DW_TAG_member, name: "protocol", scope: !2192, file: !2164, line: 47, baseType: !1038, size: 16, offset: 144)
!2200 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !2189, file: !2164, line: 81, baseType: !2201, size: 352)
!2201 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "frag_v6_compare_key", file: !2164, line: 50, size: 352, elements: !2202)
!2202 = !{!2203, !2216, !2217, !2218, !2219}
!2203 = !DIDerivedType(tag: DW_TAG_member, name: "saddr", scope: !2201, file: !2164, line: 51, baseType: !2204, size: 128)
!2204 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "in6_addr", file: !2205, line: 33, size: 128, elements: !2206)
!2205 = !DIFile(filename: "./include/uapi/linux/in6.h", directory: "/home/lizy2001/genbc/linux")
!2206 = !{!2207}
!2207 = !DIDerivedType(tag: DW_TAG_member, name: "in6_u", scope: !2204, file: !2205, line: 40, baseType: !2208, size: 128)
!2208 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2204, file: !2205, line: 34, size: 128, elements: !2209)
!2209 = !{!2210, !2212, !2214}
!2210 = !DIDerivedType(tag: DW_TAG_member, name: "u6_addr8", scope: !2208, file: !2205, line: 35, baseType: !2211, size: 128)
!2211 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1398, size: 128, elements: !274)
!2212 = !DIDerivedType(tag: DW_TAG_member, name: "u6_addr16", scope: !2208, file: !2205, line: 37, baseType: !2213, size: 128)
!2213 = !DICompositeType(tag: DW_TAG_array_type, baseType: !489, size: 128, elements: !1371)
!2214 = !DIDerivedType(tag: DW_TAG_member, name: "u6_addr32", scope: !2208, file: !2205, line: 38, baseType: !2215, size: 128)
!2215 = !DICompositeType(tag: DW_TAG_array_type, baseType: !466, size: 128, elements: !1202)
!2216 = !DIDerivedType(tag: DW_TAG_member, name: "daddr", scope: !2201, file: !2164, line: 52, baseType: !2204, size: 128, offset: 128)
!2217 = !DIDerivedType(tag: DW_TAG_member, name: "user", scope: !2201, file: !2164, line: 53, baseType: !707, size: 32, offset: 256)
!2218 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !2201, file: !2164, line: 54, baseType: !466, size: 32, offset: 288)
!2219 = !DIDerivedType(tag: DW_TAG_member, name: "iif", scope: !2201, file: !2164, line: 55, baseType: !707, size: 32, offset: 320)
!2220 = !DIDerivedType(tag: DW_TAG_member, name: "timer", scope: !2180, file: !2164, line: 83, baseType: !2221, size: 320, offset: 448)
!2221 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timer_list", file: !2222, line: 11, size: 320, elements: !2223)
!2222 = !DIFile(filename: "./include/linux/timer.h", directory: "/home/lizy2001/genbc/linux")
!2223 = !{!2224, !2225, !2226, !2231}
!2224 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !2221, file: !2222, line: 16, baseType: !281, size: 128)
!2225 = !DIDerivedType(tag: DW_TAG_member, name: "expires", scope: !2221, file: !2222, line: 17, baseType: !317, size: 64, offset: 128)
!2226 = !DIDerivedType(tag: DW_TAG_member, name: "function", scope: !2221, file: !2222, line: 18, baseType: !2227, size: 64, offset: 192)
!2227 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2228, size: 64)
!2228 = !DISubroutineType(types: !2229)
!2229 = !{null, !2230}
!2230 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2221, size: 64)
!2231 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2221, file: !2222, line: 19, baseType: !707, size: 32, offset: 256)
!2232 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2180, file: !2164, line: 84, baseType: !729, offset: 768)
!2233 = !DIDerivedType(tag: DW_TAG_member, name: "refcnt", scope: !2180, file: !2164, line: 85, baseType: !1271, size: 32, offset: 768)
!2234 = !DIDerivedType(tag: DW_TAG_member, name: "rb_fragments", scope: !2180, file: !2164, line: 86, baseType: !1133, size: 64, offset: 832)
!2235 = !DIDerivedType(tag: DW_TAG_member, name: "fragments_tail", scope: !2180, file: !2164, line: 87, baseType: !420, size: 64, offset: 896)
!2236 = !DIDerivedType(tag: DW_TAG_member, name: "last_run_head", scope: !2180, file: !2164, line: 88, baseType: !420, size: 64, offset: 960)
!2237 = !DIDerivedType(tag: DW_TAG_member, name: "stamp", scope: !2180, file: !2164, line: 89, baseType: !1341, size: 64, offset: 1024)
!2238 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !2180, file: !2164, line: 90, baseType: !37, size: 32, offset: 1088)
!2239 = !DIDerivedType(tag: DW_TAG_member, name: "meat", scope: !2180, file: !2164, line: 91, baseType: !37, size: 32, offset: 1120)
!2240 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2180, file: !2164, line: 92, baseType: !1398, size: 8, offset: 1152)
!2241 = !DIDerivedType(tag: DW_TAG_member, name: "max_size", scope: !2180, file: !2164, line: 93, baseType: !1038, size: 16, offset: 1168)
!2242 = !DIDerivedType(tag: DW_TAG_member, name: "fqdir", scope: !2180, file: !2164, line: 94, baseType: !2162, size: 64, offset: 1216)
!2243 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !2180, file: !2164, line: 95, baseType: !304, size: 128, align: 64, offset: 1280)
!2244 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2245, size: 64)
!2245 = !DIDerivedType(tag: DW_TAG_const_type, baseType: null)
!2246 = !DIDerivedType(tag: DW_TAG_member, name: "destructor", scope: !2172, file: !2164, line: 103, baseType: !2247, size: 64, offset: 128)
!2247 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2248, size: 64)
!2248 = !DISubroutineType(types: !2249)
!2249 = !{null, !2179}
!2250 = !DIDerivedType(tag: DW_TAG_member, name: "frag_expire", scope: !2172, file: !2164, line: 104, baseType: !2227, size: 64, offset: 192)
!2251 = !DIDerivedType(tag: DW_TAG_member, name: "frags_cachep", scope: !2172, file: !2164, line: 105, baseType: !2252, size: 64, offset: 256)
!2252 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2253, size: 64)
!2253 = !DICompositeType(tag: DW_TAG_structure_type, name: "kmem_cache", file: !626, line: 117, flags: DIFlagFwdDecl)
!2254 = !DIDerivedType(tag: DW_TAG_member, name: "frags_cache_name", scope: !2172, file: !2164, line: 106, baseType: !297, size: 64, offset: 320)
!2255 = !DIDerivedType(tag: DW_TAG_member, name: "rhash_params", scope: !2172, file: !2164, line: 107, baseType: !2256, size: 320, offset: 384)
!2256 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rhashtable_params", file: !2184, line: 56, size: 320, elements: !2257)
!2257 = !{!2258, !2259, !2260, !2261, !2262, !2263, !2264, !2265, !2270, !2272}
!2258 = !DIDerivedType(tag: DW_TAG_member, name: "nelem_hint", scope: !2256, file: !2184, line: 57, baseType: !1038, size: 16)
!2259 = !DIDerivedType(tag: DW_TAG_member, name: "key_len", scope: !2256, file: !2184, line: 58, baseType: !1038, size: 16, offset: 16)
!2260 = !DIDerivedType(tag: DW_TAG_member, name: "key_offset", scope: !2256, file: !2184, line: 59, baseType: !1038, size: 16, offset: 32)
!2261 = !DIDerivedType(tag: DW_TAG_member, name: "head_offset", scope: !2256, file: !2184, line: 60, baseType: !1038, size: 16, offset: 48)
!2262 = !DIDerivedType(tag: DW_TAG_member, name: "max_size", scope: !2256, file: !2184, line: 61, baseType: !7, size: 32, offset: 64)
!2263 = !DIDerivedType(tag: DW_TAG_member, name: "min_size", scope: !2256, file: !2184, line: 62, baseType: !1038, size: 16, offset: 96)
!2264 = !DIDerivedType(tag: DW_TAG_member, name: "automatic_shrinking", scope: !2256, file: !2184, line: 63, baseType: !540, size: 8, offset: 112)
!2265 = !DIDerivedType(tag: DW_TAG_member, name: "hashfn", scope: !2256, file: !2184, line: 64, baseType: !2266, size: 64, offset: 128)
!2266 = !DIDerivedType(tag: DW_TAG_typedef, name: "rht_hashfn_t", file: !2184, line: 38, baseType: !2267)
!2267 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2268, size: 64)
!2268 = !DISubroutineType(types: !2269)
!2269 = !{!707, !2244, !707, !707}
!2270 = !DIDerivedType(tag: DW_TAG_member, name: "obj_hashfn", scope: !2256, file: !2184, line: 65, baseType: !2271, size: 64, offset: 192)
!2271 = !DIDerivedType(tag: DW_TAG_typedef, name: "rht_obj_hashfn_t", file: !2184, line: 39, baseType: !2267)
!2272 = !DIDerivedType(tag: DW_TAG_member, name: "obj_cmpfn", scope: !2256, file: !2184, line: 66, baseType: !2273, size: 64, offset: 256)
!2273 = !DIDerivedType(tag: DW_TAG_typedef, name: "rht_obj_cmpfn_t", file: !2184, line: 40, baseType: !2274)
!2274 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2275, size: 64)
!2275 = !DISubroutineType(types: !2276)
!2276 = !{!37, !2277, !2244}
!2277 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2278, size: 64)
!2278 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rhashtable_compare_arg", file: !2184, line: 33, size: 128, elements: !2279)
!2279 = !{!2280, !2295}
!2280 = !DIDerivedType(tag: DW_TAG_member, name: "ht", scope: !2278, file: !2184, line: 34, baseType: !2281, size: 64)
!2281 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2282, size: 64)
!2282 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rhashtable", file: !2184, line: 81, size: 1024, elements: !2283)
!2283 = !{!2284, !2287, !2288, !2289, !2290, !2291, !2292, !2293, !2294}
!2284 = !DIDerivedType(tag: DW_TAG_member, name: "tbl", scope: !2282, file: !2184, line: 82, baseType: !2285, size: 64)
!2285 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2286, size: 64)
!2286 = !DICompositeType(tag: DW_TAG_structure_type, name: "bucket_table", file: !2184, line: 26, flags: DIFlagFwdDecl)
!2287 = !DIDerivedType(tag: DW_TAG_member, name: "key_len", scope: !2282, file: !2184, line: 83, baseType: !7, size: 32, offset: 64)
!2288 = !DIDerivedType(tag: DW_TAG_member, name: "max_elems", scope: !2282, file: !2184, line: 84, baseType: !7, size: 32, offset: 96)
!2289 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !2282, file: !2184, line: 85, baseType: !2256, size: 320, offset: 128)
!2290 = !DIDerivedType(tag: DW_TAG_member, name: "rhlist", scope: !2282, file: !2184, line: 86, baseType: !540, size: 8, offset: 448)
!2291 = !DIDerivedType(tag: DW_TAG_member, name: "run_work", scope: !2282, file: !2184, line: 87, baseType: !1807, size: 256, offset: 512)
!2292 = !DIDerivedType(tag: DW_TAG_member, name: "mutex", scope: !2282, file: !2184, line: 88, baseType: !954, size: 192, offset: 768)
!2293 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2282, file: !2184, line: 89, baseType: !729, offset: 960)
!2294 = !DIDerivedType(tag: DW_TAG_member, name: "nelems", scope: !2282, file: !2184, line: 90, baseType: !388, size: 32, offset: 960)
!2295 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !2278, file: !2184, line: 35, baseType: !2244, size: 64, offset: 64)
!2296 = !DIDerivedType(tag: DW_TAG_member, name: "refcnt", scope: !2172, file: !2164, line: 108, baseType: !1271, size: 32, offset: 704)
!2297 = !DIDerivedType(tag: DW_TAG_member, name: "completion", scope: !2172, file: !2164, line: 109, baseType: !1547, size: 192, offset: 768)
!2298 = !DIDerivedType(tag: DW_TAG_member, name: "net", scope: !2163, file: !2164, line: 16, baseType: !1962, size: 64, offset: 256)
!2299 = !DIDerivedType(tag: DW_TAG_member, name: "dead", scope: !2163, file: !2164, line: 17, baseType: !540, size: 8, offset: 320)
!2300 = !DIDerivedType(tag: DW_TAG_member, name: "rhashtable", scope: !2163, file: !2164, line: 19, baseType: !2282, size: 1024, offset: 384)
!2301 = !DIDerivedType(tag: DW_TAG_member, name: "mem", scope: !2163, file: !2164, line: 22, baseType: !376, size: 64, offset: 1408)
!2302 = !DIDerivedType(tag: DW_TAG_member, name: "destroy_work", scope: !2163, file: !2164, line: 23, baseType: !1807, size: 256, offset: 1472)
!2303 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_icmp_echo_ignore_all", scope: !2134, file: !2135, line: 87, baseType: !37, size: 32, offset: 1280)
!2304 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_icmp_echo_ignore_broadcasts", scope: !2134, file: !2135, line: 88, baseType: !37, size: 32, offset: 1312)
!2305 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_icmp_ignore_bogus_error_responses", scope: !2134, file: !2135, line: 89, baseType: !37, size: 32, offset: 1344)
!2306 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_icmp_ratelimit", scope: !2134, file: !2135, line: 90, baseType: !37, size: 32, offset: 1376)
!2307 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_icmp_ratemask", scope: !2134, file: !2135, line: 91, baseType: !37, size: 32, offset: 1408)
!2308 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_icmp_errors_use_inbound_ifaddr", scope: !2134, file: !2135, line: 92, baseType: !37, size: 32, offset: 1440)
!2309 = !DIDerivedType(tag: DW_TAG_member, name: "ip_local_ports", scope: !2134, file: !2135, line: 94, baseType: !2310, size: 128, offset: 1472)
!2310 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "local_ports", file: !2135, line: 21, size: 128, elements: !2311)
!2311 = !{!2312, !2318, !2320}
!2312 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2310, file: !2135, line: 22, baseType: !2313, size: 32)
!2313 = !DIDerivedType(tag: DW_TAG_typedef, name: "seqlock_t", file: !680, line: 805, baseType: !2314)
!2314 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !680, line: 798, size: 32, elements: !2315)
!2315 = !{!2316, !2317}
!2316 = !DIDerivedType(tag: DW_TAG_member, name: "seqcount", scope: !2314, file: !680, line: 803, baseType: !679, size: 32)
!2317 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2314, file: !680, line: 804, baseType: !729, offset: 32)
!2318 = !DIDerivedType(tag: DW_TAG_member, name: "range", scope: !2310, file: !2135, line: 23, baseType: !2319, size: 64, offset: 32)
!2319 = !DICompositeType(tag: DW_TAG_array_type, baseType: !37, size: 64, elements: !478)
!2320 = !DIDerivedType(tag: DW_TAG_member, name: "warned", scope: !2310, file: !2135, line: 24, baseType: !540, size: 8, offset: 96)
!2321 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_ecn", scope: !2134, file: !2135, line: 96, baseType: !37, size: 32, offset: 1600)
!2322 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_ecn_fallback", scope: !2134, file: !2135, line: 97, baseType: !37, size: 32, offset: 1632)
!2323 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_ip_default_ttl", scope: !2134, file: !2135, line: 99, baseType: !37, size: 32, offset: 1664)
!2324 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_ip_no_pmtu_disc", scope: !2134, file: !2135, line: 100, baseType: !37, size: 32, offset: 1696)
!2325 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_ip_fwd_use_pmtu", scope: !2134, file: !2135, line: 101, baseType: !37, size: 32, offset: 1728)
!2326 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_ip_fwd_update_priority", scope: !2134, file: !2135, line: 102, baseType: !37, size: 32, offset: 1760)
!2327 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_ip_nonlocal_bind", scope: !2134, file: !2135, line: 103, baseType: !37, size: 32, offset: 1792)
!2328 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_ip_autobind_reuse", scope: !2134, file: !2135, line: 104, baseType: !37, size: 32, offset: 1824)
!2329 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_ip_dynaddr", scope: !2134, file: !2135, line: 106, baseType: !37, size: 32, offset: 1856)
!2330 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_ip_early_demux", scope: !2134, file: !2135, line: 107, baseType: !37, size: 32, offset: 1888)
!2331 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_early_demux", scope: !2134, file: !2135, line: 111, baseType: !37, size: 32, offset: 1920)
!2332 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_udp_early_demux", scope: !2134, file: !2135, line: 112, baseType: !37, size: 32, offset: 1952)
!2333 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_nexthop_compat_mode", scope: !2134, file: !2135, line: 114, baseType: !37, size: 32, offset: 1984)
!2334 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_fwmark_reflect", scope: !2134, file: !2135, line: 116, baseType: !37, size: 32, offset: 2016)
!2335 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_fwmark_accept", scope: !2134, file: !2135, line: 117, baseType: !37, size: 32, offset: 2048)
!2336 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_mtu_probing", scope: !2134, file: !2135, line: 121, baseType: !37, size: 32, offset: 2080)
!2337 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_mtu_probe_floor", scope: !2134, file: !2135, line: 122, baseType: !37, size: 32, offset: 2112)
!2338 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_base_mss", scope: !2134, file: !2135, line: 123, baseType: !37, size: 32, offset: 2144)
!2339 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_min_snd_mss", scope: !2134, file: !2135, line: 124, baseType: !37, size: 32, offset: 2176)
!2340 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_probe_threshold", scope: !2134, file: !2135, line: 125, baseType: !37, size: 32, offset: 2208)
!2341 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_probe_interval", scope: !2134, file: !2135, line: 126, baseType: !707, size: 32, offset: 2240)
!2342 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_keepalive_time", scope: !2134, file: !2135, line: 128, baseType: !37, size: 32, offset: 2272)
!2343 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_keepalive_probes", scope: !2134, file: !2135, line: 129, baseType: !37, size: 32, offset: 2304)
!2344 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_keepalive_intvl", scope: !2134, file: !2135, line: 130, baseType: !37, size: 32, offset: 2336)
!2345 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_syn_retries", scope: !2134, file: !2135, line: 132, baseType: !37, size: 32, offset: 2368)
!2346 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_synack_retries", scope: !2134, file: !2135, line: 133, baseType: !37, size: 32, offset: 2400)
!2347 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_syncookies", scope: !2134, file: !2135, line: 134, baseType: !37, size: 32, offset: 2432)
!2348 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_reordering", scope: !2134, file: !2135, line: 135, baseType: !37, size: 32, offset: 2464)
!2349 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_retries1", scope: !2134, file: !2135, line: 136, baseType: !37, size: 32, offset: 2496)
!2350 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_retries2", scope: !2134, file: !2135, line: 137, baseType: !37, size: 32, offset: 2528)
!2351 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_orphan_retries", scope: !2134, file: !2135, line: 138, baseType: !37, size: 32, offset: 2560)
!2352 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_fin_timeout", scope: !2134, file: !2135, line: 139, baseType: !37, size: 32, offset: 2592)
!2353 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_notsent_lowat", scope: !2134, file: !2135, line: 140, baseType: !7, size: 32, offset: 2624)
!2354 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_tw_reuse", scope: !2134, file: !2135, line: 141, baseType: !37, size: 32, offset: 2656)
!2355 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_sack", scope: !2134, file: !2135, line: 142, baseType: !37, size: 32, offset: 2688)
!2356 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_window_scaling", scope: !2134, file: !2135, line: 143, baseType: !37, size: 32, offset: 2720)
!2357 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_timestamps", scope: !2134, file: !2135, line: 144, baseType: !37, size: 32, offset: 2752)
!2358 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_early_retrans", scope: !2134, file: !2135, line: 145, baseType: !37, size: 32, offset: 2784)
!2359 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_recovery", scope: !2134, file: !2135, line: 146, baseType: !37, size: 32, offset: 2816)
!2360 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_thin_linear_timeouts", scope: !2134, file: !2135, line: 147, baseType: !37, size: 32, offset: 2848)
!2361 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_slow_start_after_idle", scope: !2134, file: !2135, line: 148, baseType: !37, size: 32, offset: 2880)
!2362 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_retrans_collapse", scope: !2134, file: !2135, line: 149, baseType: !37, size: 32, offset: 2912)
!2363 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_stdurg", scope: !2134, file: !2135, line: 150, baseType: !37, size: 32, offset: 2944)
!2364 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_rfc1337", scope: !2134, file: !2135, line: 151, baseType: !37, size: 32, offset: 2976)
!2365 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_abort_on_overflow", scope: !2134, file: !2135, line: 152, baseType: !37, size: 32, offset: 3008)
!2366 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_fack", scope: !2134, file: !2135, line: 153, baseType: !37, size: 32, offset: 3040)
!2367 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_max_reordering", scope: !2134, file: !2135, line: 154, baseType: !37, size: 32, offset: 3072)
!2368 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_dsack", scope: !2134, file: !2135, line: 155, baseType: !37, size: 32, offset: 3104)
!2369 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_app_win", scope: !2134, file: !2135, line: 156, baseType: !37, size: 32, offset: 3136)
!2370 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_adv_win_scale", scope: !2134, file: !2135, line: 157, baseType: !37, size: 32, offset: 3168)
!2371 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_frto", scope: !2134, file: !2135, line: 158, baseType: !37, size: 32, offset: 3200)
!2372 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_nometrics_save", scope: !2134, file: !2135, line: 159, baseType: !37, size: 32, offset: 3232)
!2373 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_no_ssthresh_metrics_save", scope: !2134, file: !2135, line: 160, baseType: !37, size: 32, offset: 3264)
!2374 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_moderate_rcvbuf", scope: !2134, file: !2135, line: 161, baseType: !37, size: 32, offset: 3296)
!2375 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_tso_win_divisor", scope: !2134, file: !2135, line: 162, baseType: !37, size: 32, offset: 3328)
!2376 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_workaround_signed_windows", scope: !2134, file: !2135, line: 163, baseType: !37, size: 32, offset: 3360)
!2377 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_limit_output_bytes", scope: !2134, file: !2135, line: 164, baseType: !37, size: 32, offset: 3392)
!2378 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_challenge_ack_limit", scope: !2134, file: !2135, line: 165, baseType: !37, size: 32, offset: 3424)
!2379 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_min_tso_segs", scope: !2134, file: !2135, line: 166, baseType: !37, size: 32, offset: 3456)
!2380 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_min_rtt_wlen", scope: !2134, file: !2135, line: 167, baseType: !37, size: 32, offset: 3488)
!2381 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_autocorking", scope: !2134, file: !2135, line: 168, baseType: !37, size: 32, offset: 3520)
!2382 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_invalid_ratelimit", scope: !2134, file: !2135, line: 169, baseType: !37, size: 32, offset: 3552)
!2383 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_pacing_ss_ratio", scope: !2134, file: !2135, line: 170, baseType: !37, size: 32, offset: 3584)
!2384 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_pacing_ca_ratio", scope: !2134, file: !2135, line: 171, baseType: !37, size: 32, offset: 3616)
!2385 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_wmem", scope: !2134, file: !2135, line: 172, baseType: !2386, size: 96, offset: 3648)
!2386 = !DICompositeType(tag: DW_TAG_array_type, baseType: !37, size: 96, elements: !867)
!2387 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_rmem", scope: !2134, file: !2135, line: 173, baseType: !2386, size: 96, offset: 3744)
!2388 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_comp_sack_nr", scope: !2134, file: !2135, line: 174, baseType: !37, size: 32, offset: 3840)
!2389 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_comp_sack_delay_ns", scope: !2134, file: !2135, line: 175, baseType: !317, size: 64, offset: 3904)
!2390 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_comp_sack_slack_ns", scope: !2134, file: !2135, line: 176, baseType: !317, size: 64, offset: 3968)
!2391 = !DIDerivedType(tag: DW_TAG_member, name: "tcp_death_row", scope: !2134, file: !2135, line: 177, baseType: !2392, size: 192, offset: 4032)
!2392 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "inet_timewait_death_row", file: !2135, line: 34, size: 192, elements: !2393)
!2393 = !{!2394, !2395, !2398}
!2394 = !DIDerivedType(tag: DW_TAG_member, name: "tw_count", scope: !2392, file: !2135, line: 35, baseType: !388, size: 32)
!2395 = !DIDerivedType(tag: DW_TAG_member, name: "hashinfo", scope: !2392, file: !2135, line: 37, baseType: !2396, size: 64, offset: 64)
!2396 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2397, size: 64)
!2397 = !DICompositeType(tag: DW_TAG_structure_type, name: "inet_hashinfo", file: !2135, line: 32, flags: DIFlagFwdDecl)
!2398 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_max_tw_buckets", scope: !2392, file: !2135, line: 38, baseType: !37, size: 32, offset: 128)
!2399 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_max_syn_backlog", scope: !2134, file: !2135, line: 178, baseType: !37, size: 32, offset: 4224)
!2400 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_fastopen", scope: !2134, file: !2135, line: 179, baseType: !37, size: 32, offset: 4256)
!2401 = !DIDerivedType(tag: DW_TAG_member, name: "tcp_congestion_control", scope: !2134, file: !2135, line: 180, baseType: !2402, size: 64, offset: 4288)
!2402 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2403, size: 64)
!2403 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2404)
!2404 = !DICompositeType(tag: DW_TAG_structure_type, name: "tcp_congestion_ops", file: !2135, line: 180, flags: DIFlagFwdDecl)
!2405 = !DIDerivedType(tag: DW_TAG_member, name: "tcp_fastopen_ctx", scope: !2134, file: !2135, line: 181, baseType: !2406, size: 64, offset: 4352)
!2406 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2407, size: 64)
!2407 = !DICompositeType(tag: DW_TAG_structure_type, name: "tcp_fastopen_context", file: !2135, line: 41, flags: DIFlagFwdDecl)
!2408 = !DIDerivedType(tag: DW_TAG_member, name: "tcp_fastopen_ctx_lock", scope: !2134, file: !2135, line: 182, baseType: !729, offset: 4416)
!2409 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_fastopen_blackhole_timeout", scope: !2134, file: !2135, line: 183, baseType: !7, size: 32, offset: 4416)
!2410 = !DIDerivedType(tag: DW_TAG_member, name: "tfo_active_disable_times", scope: !2134, file: !2135, line: 184, baseType: !388, size: 32, offset: 4448)
!2411 = !DIDerivedType(tag: DW_TAG_member, name: "tfo_active_disable_stamp", scope: !2134, file: !2135, line: 185, baseType: !317, size: 64, offset: 4480)
!2412 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_reflect_tos", scope: !2134, file: !2135, line: 186, baseType: !37, size: 32, offset: 4544)
!2413 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_udp_wmem_min", scope: !2134, file: !2135, line: 188, baseType: !37, size: 32, offset: 4576)
!2414 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_udp_rmem_min", scope: !2134, file: !2135, line: 189, baseType: !37, size: 32, offset: 4608)
!2415 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_igmp_max_memberships", scope: !2134, file: !2135, line: 195, baseType: !37, size: 32, offset: 4640)
!2416 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_igmp_max_msf", scope: !2134, file: !2135, line: 196, baseType: !37, size: 32, offset: 4672)
!2417 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_igmp_llm_reports", scope: !2134, file: !2135, line: 197, baseType: !37, size: 32, offset: 4704)
!2418 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_igmp_qrv", scope: !2134, file: !2135, line: 198, baseType: !37, size: 32, offset: 4736)
!2419 = !DIDerivedType(tag: DW_TAG_member, name: "ping_group_range", scope: !2134, file: !2135, line: 200, baseType: !2420, size: 96, offset: 4768)
!2420 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ping_group_range", file: !2135, line: 27, size: 96, elements: !2421)
!2421 = !{!2422, !2423}
!2422 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2420, file: !2135, line: 28, baseType: !2313, size: 32)
!2423 = !DIDerivedType(tag: DW_TAG_member, name: "range", scope: !2420, file: !2135, line: 29, baseType: !2424, size: 64, offset: 32)
!2424 = !DICompositeType(tag: DW_TAG_array_type, baseType: !657, size: 64, elements: !478)
!2425 = !DIDerivedType(tag: DW_TAG_member, name: "dev_addr_genid", scope: !2134, file: !2135, line: 202, baseType: !388, size: 32, offset: 4864)
!2426 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_local_reserved_ports", scope: !2134, file: !2135, line: 205, baseType: !2427, size: 64, offset: 4928)
!2427 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !317, size: 64)
!2428 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_ip_prot_sock", scope: !2134, file: !2135, line: 206, baseType: !37, size: 32, offset: 4992)
!2429 = !DIDerivedType(tag: DW_TAG_member, name: "notifier_ops", scope: !2134, file: !2135, line: 222, baseType: !2430, size: 64, offset: 5056)
!2430 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2431, size: 64)
!2431 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fib_notifier_ops", file: !2432, line: 28, size: 512, elements: !2433)
!2432 = !DIFile(filename: "./include/net/fib_notifier.h", directory: "/home/lizy2001/genbc/linux")
!2433 = !{!2434, !2435, !2436, !2440, !2501, !2502}
!2434 = !DIDerivedType(tag: DW_TAG_member, name: "family", scope: !2431, file: !2432, line: 29, baseType: !37, size: 32)
!2435 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !2431, file: !2432, line: 30, baseType: !289, size: 128, offset: 64)
!2436 = !DIDerivedType(tag: DW_TAG_member, name: "fib_seq_read", scope: !2431, file: !2432, line: 31, baseType: !2437, size: 64, offset: 192)
!2437 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2438, size: 64)
!2438 = !DISubroutineType(types: !2439)
!2439 = !{!7, !1962}
!2440 = !DIDerivedType(tag: DW_TAG_member, name: "fib_dump", scope: !2431, file: !2432, line: 32, baseType: !2441, size: 64, offset: 256)
!2441 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2442, size: 64)
!2442 = !DISubroutineType(types: !2443)
!2443 = !{!37, !1962, !2015, !2444}
!2444 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2445, size: 64)
!2445 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "netlink_ext_ack", file: !2446, line: 75, size: 384, elements: !2447)
!2446 = !DIFile(filename: "./include/linux/netlink.h", directory: "/home/lizy2001/genbc/linux")
!2447 = !{!2448, !2449, !2457, !2496, !2500}
!2448 = !DIDerivedType(tag: DW_TAG_member, name: "_msg", scope: !2445, file: !2446, line: 76, baseType: !297, size: 64)
!2449 = !DIDerivedType(tag: DW_TAG_member, name: "bad_attr", scope: !2445, file: !2446, line: 77, baseType: !2450, size: 64, offset: 64)
!2450 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2451, size: 64)
!2451 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2452)
!2452 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "nlattr", file: !2453, line: 213, size: 32, elements: !2454)
!2453 = !DIFile(filename: "./include/uapi/linux/netlink.h", directory: "/home/lizy2001/genbc/linux")
!2454 = !{!2455, !2456}
!2455 = !DIDerivedType(tag: DW_TAG_member, name: "nla_len", scope: !2452, file: !2453, line: 214, baseType: !476, size: 16)
!2456 = !DIDerivedType(tag: DW_TAG_member, name: "nla_type", scope: !2452, file: !2453, line: 215, baseType: !476, size: 16, offset: 16)
!2457 = !DIDerivedType(tag: DW_TAG_member, name: "policy", scope: !2445, file: !2446, line: 78, baseType: !2458, size: 64, offset: 128)
!2458 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2459, size: 64)
!2459 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2460)
!2460 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "nla_policy", file: !2461, line: 315, size: 128, elements: !2462)
!2461 = !DIFile(filename: "./include/net/netlink.h", directory: "/home/lizy2001/genbc/linux")
!2462 = !{!2463, !2464, !2465, !2466}
!2463 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2460, file: !2461, line: 316, baseType: !1397, size: 8)
!2464 = !DIDerivedType(tag: DW_TAG_member, name: "validation_type", scope: !2460, file: !2461, line: 317, baseType: !1397, size: 8, offset: 8)
!2465 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !2460, file: !2461, line: 318, baseType: !1038, size: 16, offset: 16)
!2466 = !DIDerivedType(tag: DW_TAG_member, scope: !2460, file: !2461, line: 319, baseType: !2467, size: 64, offset: 64)
!2467 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2460, file: !2461, line: 319, size: 64, elements: !2468)
!2468 = !{!2469, !2471, !2472, !2473, !2474, !2480, !2486, !2491, !2495}
!2469 = !DIDerivedType(tag: DW_TAG_member, name: "bitfield32_valid", scope: !2467, file: !2461, line: 320, baseType: !2470, size: 32)
!2470 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !707)
!2471 = !DIDerivedType(tag: DW_TAG_member, name: "mask", scope: !2467, file: !2461, line: 321, baseType: !2470, size: 32)
!2472 = !DIDerivedType(tag: DW_TAG_member, name: "reject_message", scope: !2467, file: !2461, line: 322, baseType: !297, size: 64)
!2473 = !DIDerivedType(tag: DW_TAG_member, name: "nested_policy", scope: !2467, file: !2461, line: 323, baseType: !2458, size: 64)
!2474 = !DIDerivedType(tag: DW_TAG_member, name: "range", scope: !2467, file: !2461, line: 324, baseType: !2475, size: 64)
!2475 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2476, size: 64)
!2476 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "netlink_range_validation", file: !2461, line: 189, size: 128, elements: !2477)
!2477 = !{!2478, !2479}
!2478 = !DIDerivedType(tag: DW_TAG_member, name: "min", scope: !2476, file: !2461, line: 190, baseType: !336, size: 64)
!2479 = !DIDerivedType(tag: DW_TAG_member, name: "max", scope: !2476, file: !2461, line: 190, baseType: !336, size: 64, offset: 64)
!2480 = !DIDerivedType(tag: DW_TAG_member, name: "range_signed", scope: !2467, file: !2461, line: 325, baseType: !2481, size: 64)
!2481 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2482, size: 64)
!2482 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "netlink_range_validation_signed", file: !2461, line: 193, size: 128, elements: !2483)
!2483 = !{!2484, !2485}
!2484 = !DIDerivedType(tag: DW_TAG_member, name: "min", scope: !2482, file: !2461, line: 194, baseType: !382, size: 64)
!2485 = !DIDerivedType(tag: DW_TAG_member, name: "max", scope: !2482, file: !2461, line: 194, baseType: !382, size: 64, offset: 64)
!2486 = !DIDerivedType(tag: DW_TAG_member, scope: !2467, file: !2461, line: 326, baseType: !2487, size: 32)
!2487 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2467, file: !2461, line: 326, size: 32, elements: !2488)
!2488 = !{!2489, !2490}
!2489 = !DIDerivedType(tag: DW_TAG_member, name: "min", scope: !2487, file: !2461, line: 327, baseType: !1244, size: 16)
!2490 = !DIDerivedType(tag: DW_TAG_member, name: "max", scope: !2487, file: !2461, line: 327, baseType: !1244, size: 16, offset: 16)
!2491 = !DIDerivedType(tag: DW_TAG_member, name: "validate", scope: !2467, file: !2461, line: 329, baseType: !2492, size: 64)
!2492 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2493, size: 64)
!2493 = !DISubroutineType(types: !2494)
!2494 = !{!37, !2450, !2444}
!2495 = !DIDerivedType(tag: DW_TAG_member, name: "strict_start_type", scope: !2467, file: !2461, line: 349, baseType: !1038, size: 16)
!2496 = !DIDerivedType(tag: DW_TAG_member, name: "cookie", scope: !2445, file: !2446, line: 79, baseType: !2497, size: 160, offset: 192)
!2497 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1397, size: 160, elements: !2498)
!2498 = !{!2499}
!2499 = !DISubrange(count: 20)
!2500 = !DIDerivedType(tag: DW_TAG_member, name: "cookie_len", scope: !2445, file: !2446, line: 80, baseType: !1397, size: 8, offset: 352)
!2501 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !2431, file: !2432, line: 34, baseType: !852, size: 64, offset: 320)
!2502 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !2431, file: !2432, line: 35, baseType: !304, size: 128, align: 64, offset: 384)
!2503 = !DIDerivedType(tag: DW_TAG_member, name: "fib_seq", scope: !2134, file: !2135, line: 223, baseType: !7, size: 32, offset: 5120)
!2504 = !DIDerivedType(tag: DW_TAG_member, name: "ipmr_notifier_ops", scope: !2134, file: !2135, line: 225, baseType: !2430, size: 64, offset: 5184)
!2505 = !DIDerivedType(tag: DW_TAG_member, name: "ipmr_seq", scope: !2134, file: !2135, line: 226, baseType: !7, size: 32, offset: 5248)
!2506 = !DIDerivedType(tag: DW_TAG_member, name: "rt_genid", scope: !2134, file: !2135, line: 228, baseType: !388, size: 32, offset: 5280)
!2507 = !DIDerivedType(tag: DW_TAG_member, name: "ip_id_key", scope: !2134, file: !2135, line: 229, baseType: !2508, size: 128, offset: 5312)
!2508 = !DIDerivedType(tag: DW_TAG_typedef, name: "siphash_key_t", file: !2509, line: 22, baseType: !2510)
!2509 = !DIFile(filename: "./include/linux/siphash.h", directory: "/home/lizy2001/genbc/linux")
!2510 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2509, line: 20, size: 128, elements: !2511)
!2511 = !{!2512}
!2512 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !2510, file: !2509, line: 21, baseType: !2513, size: 128)
!2513 = !DICompositeType(tag: DW_TAG_array_type, baseType: !336, size: 128, elements: !478)
!2514 = !DIDerivedType(tag: DW_TAG_member, name: "ipv6", scope: !1963, file: !1964, line: 128, baseType: !2515, size: 4608, offset: 10176)
!2515 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "netns_ipv6", file: !2516, line: 56, size: 4608, elements: !2517)
!2516 = !DIFile(filename: "./include/net/netns/ipv6.h", directory: "/home/lizy2001/genbc/linux")
!2517 = !{!2518, !2558, !2561, !2562, !2563, !2564, !2567, !2570, !2573, !2574, !2575, !2578, !2579, !2867, !2868, !2869, !2870, !2871, !2872, !2873, !2874, !2875, !2876, !2877, !2878, !2881, !2882, !2883, !2884}
!2518 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl", scope: !2515, file: !2516, line: 57, baseType: !2519, size: 1600)
!2519 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "netns_sysctl_ipv6", file: !2516, line: 15, size: 1600, elements: !2520)
!2520 = !{!2521, !2522, !2523, !2524, !2525, !2526, !2527, !2528, !2529, !2530, !2531, !2532, !2533, !2534, !2535, !2536, !2537, !2538, !2539, !2540, !2541, !2542, !2544, !2545, !2546, !2547, !2548, !2549, !2550, !2551, !2552, !2553, !2554, !2555, !2556, !2557}
!2521 = !DIDerivedType(tag: DW_TAG_member, name: "hdr", scope: !2519, file: !2516, line: 17, baseType: !1881, size: 64)
!2522 = !DIDerivedType(tag: DW_TAG_member, name: "route_hdr", scope: !2519, file: !2516, line: 18, baseType: !1881, size: 64, offset: 64)
!2523 = !DIDerivedType(tag: DW_TAG_member, name: "icmp_hdr", scope: !2519, file: !2516, line: 19, baseType: !1881, size: 64, offset: 128)
!2524 = !DIDerivedType(tag: DW_TAG_member, name: "frags_hdr", scope: !2519, file: !2516, line: 20, baseType: !1881, size: 64, offset: 192)
!2525 = !DIDerivedType(tag: DW_TAG_member, name: "xfrm6_hdr", scope: !2519, file: !2516, line: 21, baseType: !1881, size: 64, offset: 256)
!2526 = !DIDerivedType(tag: DW_TAG_member, name: "bindv6only", scope: !2519, file: !2516, line: 23, baseType: !37, size: 32, offset: 320)
!2527 = !DIDerivedType(tag: DW_TAG_member, name: "flush_delay", scope: !2519, file: !2516, line: 24, baseType: !37, size: 32, offset: 352)
!2528 = !DIDerivedType(tag: DW_TAG_member, name: "ip6_rt_max_size", scope: !2519, file: !2516, line: 25, baseType: !37, size: 32, offset: 384)
!2529 = !DIDerivedType(tag: DW_TAG_member, name: "ip6_rt_gc_min_interval", scope: !2519, file: !2516, line: 26, baseType: !37, size: 32, offset: 416)
!2530 = !DIDerivedType(tag: DW_TAG_member, name: "ip6_rt_gc_timeout", scope: !2519, file: !2516, line: 27, baseType: !37, size: 32, offset: 448)
!2531 = !DIDerivedType(tag: DW_TAG_member, name: "ip6_rt_gc_interval", scope: !2519, file: !2516, line: 28, baseType: !37, size: 32, offset: 480)
!2532 = !DIDerivedType(tag: DW_TAG_member, name: "ip6_rt_gc_elasticity", scope: !2519, file: !2516, line: 29, baseType: !37, size: 32, offset: 512)
!2533 = !DIDerivedType(tag: DW_TAG_member, name: "ip6_rt_mtu_expires", scope: !2519, file: !2516, line: 30, baseType: !37, size: 32, offset: 544)
!2534 = !DIDerivedType(tag: DW_TAG_member, name: "ip6_rt_min_advmss", scope: !2519, file: !2516, line: 31, baseType: !37, size: 32, offset: 576)
!2535 = !DIDerivedType(tag: DW_TAG_member, name: "multipath_hash_policy", scope: !2519, file: !2516, line: 32, baseType: !37, size: 32, offset: 608)
!2536 = !DIDerivedType(tag: DW_TAG_member, name: "flowlabel_consistency", scope: !2519, file: !2516, line: 33, baseType: !37, size: 32, offset: 640)
!2537 = !DIDerivedType(tag: DW_TAG_member, name: "auto_flowlabels", scope: !2519, file: !2516, line: 34, baseType: !37, size: 32, offset: 672)
!2538 = !DIDerivedType(tag: DW_TAG_member, name: "icmpv6_time", scope: !2519, file: !2516, line: 35, baseType: !37, size: 32, offset: 704)
!2539 = !DIDerivedType(tag: DW_TAG_member, name: "icmpv6_echo_ignore_all", scope: !2519, file: !2516, line: 36, baseType: !37, size: 32, offset: 736)
!2540 = !DIDerivedType(tag: DW_TAG_member, name: "icmpv6_echo_ignore_multicast", scope: !2519, file: !2516, line: 37, baseType: !37, size: 32, offset: 768)
!2541 = !DIDerivedType(tag: DW_TAG_member, name: "icmpv6_echo_ignore_anycast", scope: !2519, file: !2516, line: 38, baseType: !37, size: 32, offset: 800)
!2542 = !DIDerivedType(tag: DW_TAG_member, name: "icmpv6_ratemask", scope: !2519, file: !2516, line: 39, baseType: !2543, size: 256, offset: 832)
!2543 = !DICompositeType(tag: DW_TAG_array_type, baseType: !317, size: 256, elements: !1202)
!2544 = !DIDerivedType(tag: DW_TAG_member, name: "icmpv6_ratemask_ptr", scope: !2519, file: !2516, line: 40, baseType: !2427, size: 64, offset: 1088)
!2545 = !DIDerivedType(tag: DW_TAG_member, name: "anycast_src_echo_reply", scope: !2519, file: !2516, line: 41, baseType: !37, size: 32, offset: 1152)
!2546 = !DIDerivedType(tag: DW_TAG_member, name: "ip_nonlocal_bind", scope: !2519, file: !2516, line: 42, baseType: !37, size: 32, offset: 1184)
!2547 = !DIDerivedType(tag: DW_TAG_member, name: "fwmark_reflect", scope: !2519, file: !2516, line: 43, baseType: !37, size: 32, offset: 1216)
!2548 = !DIDerivedType(tag: DW_TAG_member, name: "idgen_retries", scope: !2519, file: !2516, line: 44, baseType: !37, size: 32, offset: 1248)
!2549 = !DIDerivedType(tag: DW_TAG_member, name: "idgen_delay", scope: !2519, file: !2516, line: 45, baseType: !37, size: 32, offset: 1280)
!2550 = !DIDerivedType(tag: DW_TAG_member, name: "flowlabel_state_ranges", scope: !2519, file: !2516, line: 46, baseType: !37, size: 32, offset: 1312)
!2551 = !DIDerivedType(tag: DW_TAG_member, name: "flowlabel_reflect", scope: !2519, file: !2516, line: 47, baseType: !37, size: 32, offset: 1344)
!2552 = !DIDerivedType(tag: DW_TAG_member, name: "max_dst_opts_cnt", scope: !2519, file: !2516, line: 48, baseType: !37, size: 32, offset: 1376)
!2553 = !DIDerivedType(tag: DW_TAG_member, name: "max_hbh_opts_cnt", scope: !2519, file: !2516, line: 49, baseType: !37, size: 32, offset: 1408)
!2554 = !DIDerivedType(tag: DW_TAG_member, name: "max_dst_opts_len", scope: !2519, file: !2516, line: 50, baseType: !37, size: 32, offset: 1440)
!2555 = !DIDerivedType(tag: DW_TAG_member, name: "max_hbh_opts_len", scope: !2519, file: !2516, line: 51, baseType: !37, size: 32, offset: 1472)
!2556 = !DIDerivedType(tag: DW_TAG_member, name: "seg6_flowlabel", scope: !2519, file: !2516, line: 52, baseType: !37, size: 32, offset: 1504)
!2557 = !DIDerivedType(tag: DW_TAG_member, name: "skip_notify_on_dev_down", scope: !2519, file: !2516, line: 53, baseType: !540, size: 8, offset: 1536)
!2558 = !DIDerivedType(tag: DW_TAG_member, name: "devconf_all", scope: !2515, file: !2516, line: 58, baseType: !2559, size: 64, offset: 1600)
!2559 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2560, size: 64)
!2560 = !DICompositeType(tag: DW_TAG_structure_type, name: "ipv6_devconf", file: !2516, line: 58, flags: DIFlagFwdDecl)
!2561 = !DIDerivedType(tag: DW_TAG_member, name: "devconf_dflt", scope: !2515, file: !2516, line: 59, baseType: !2559, size: 64, offset: 1664)
!2562 = !DIDerivedType(tag: DW_TAG_member, name: "peers", scope: !2515, file: !2516, line: 60, baseType: !2158, size: 64, offset: 1728)
!2563 = !DIDerivedType(tag: DW_TAG_member, name: "fqdir", scope: !2515, file: !2516, line: 61, baseType: !2162, size: 64, offset: 1792)
!2564 = !DIDerivedType(tag: DW_TAG_member, name: "fib6_null_entry", scope: !2515, file: !2516, line: 71, baseType: !2565, size: 64, offset: 1856)
!2565 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2566, size: 64)
!2566 = !DICompositeType(tag: DW_TAG_structure_type, name: "fib6_info", file: !2516, line: 71, flags: DIFlagFwdDecl)
!2567 = !DIDerivedType(tag: DW_TAG_member, name: "ip6_null_entry", scope: !2515, file: !2516, line: 72, baseType: !2568, size: 64, offset: 1920)
!2568 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2569, size: 64)
!2569 = !DICompositeType(tag: DW_TAG_structure_type, name: "rt6_info", file: !2516, line: 72, flags: DIFlagFwdDecl)
!2570 = !DIDerivedType(tag: DW_TAG_member, name: "rt6_stats", scope: !2515, file: !2516, line: 73, baseType: !2571, size: 64, offset: 1984)
!2571 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2572, size: 64)
!2572 = !DICompositeType(tag: DW_TAG_structure_type, name: "rt6_statistics", file: !2516, line: 73, flags: DIFlagFwdDecl)
!2573 = !DIDerivedType(tag: DW_TAG_member, name: "ip6_fib_timer", scope: !2515, file: !2516, line: 74, baseType: !2221, size: 320, offset: 2048)
!2574 = !DIDerivedType(tag: DW_TAG_member, name: "fib_table_hash", scope: !2515, file: !2516, line: 75, baseType: !2008, size: 64, offset: 2368)
!2575 = !DIDerivedType(tag: DW_TAG_member, name: "fib6_main_tbl", scope: !2515, file: !2516, line: 76, baseType: !2576, size: 64, offset: 2432)
!2576 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2577, size: 64)
!2577 = !DICompositeType(tag: DW_TAG_structure_type, name: "fib6_table", file: !2516, line: 76, flags: DIFlagFwdDecl)
!2578 = !DIDerivedType(tag: DW_TAG_member, name: "fib6_walkers", scope: !2515, file: !2516, line: 77, baseType: !289, size: 128, offset: 2496)
!2579 = !DIDerivedType(tag: DW_TAG_member, name: "ip6_dst_ops", scope: !2515, file: !2516, line: 78, baseType: !2580, size: 1088, offset: 2624)
!2580 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dst_ops", file: !2581, line: 15, size: 1088, elements: !2582)
!2581 = !DIFile(filename: "./include/net/dst_ops.h", directory: "/home/lizy2001/genbc/linux")
!2582 = !{!2583, !2584, !2585, !2590, !2625, !2631, !2632, !2636, !2640, !2644, !2648, !2652, !2656, !2660, !2661, !2857, !2861, !2862}
!2583 = !DIDerivedType(tag: DW_TAG_member, name: "family", scope: !2580, file: !2581, line: 16, baseType: !477, size: 16)
!2584 = !DIDerivedType(tag: DW_TAG_member, name: "gc_thresh", scope: !2580, file: !2581, line: 17, baseType: !7, size: 32, offset: 32)
!2585 = !DIDerivedType(tag: DW_TAG_member, name: "gc", scope: !2580, file: !2581, line: 19, baseType: !2586, size: 64, offset: 64)
!2586 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2587, size: 64)
!2587 = !DISubroutineType(types: !2588)
!2588 = !{!37, !2589}
!2589 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2580, size: 64)
!2590 = !DIDerivedType(tag: DW_TAG_member, name: "check", scope: !2580, file: !2581, line: 20, baseType: !2591, size: 64, offset: 128)
!2591 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2592, size: 64)
!2592 = !DISubroutineType(types: !2593)
!2593 = !{!2594, !2594, !468}
!2594 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2595, size: 64)
!2595 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dst_entry", file: !2596, line: 24, size: 896, elements: !2597)
!2596 = !DIFile(filename: "./include/net/dst.h", directory: "/home/lizy2001/genbc/linux")
!2597 = !{!2598, !2599, !2600, !2601, !2602, !2603, !2607, !2611, !2612, !2613, !2614, !2615, !2616, !2617, !2618, !2621, !2622, !2623, !2624}
!2598 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !2595, file: !2596, line: 25, baseType: !295, size: 64)
!2599 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !2595, file: !2596, line: 26, baseType: !2589, size: 64, offset: 64)
!2600 = !DIDerivedType(tag: DW_TAG_member, name: "_metrics", scope: !2595, file: !2596, line: 27, baseType: !317, size: 64, offset: 128)
!2601 = !DIDerivedType(tag: DW_TAG_member, name: "expires", scope: !2595, file: !2596, line: 28, baseType: !317, size: 64, offset: 192)
!2602 = !DIDerivedType(tag: DW_TAG_member, name: "__pad1", scope: !2595, file: !2596, line: 32, baseType: !570, size: 64, offset: 256)
!2603 = !DIDerivedType(tag: DW_TAG_member, name: "input", scope: !2595, file: !2596, line: 34, baseType: !2604, size: 64, offset: 320)
!2604 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2605, size: 64)
!2605 = !DISubroutineType(types: !2606)
!2606 = !{!37, !420}
!2607 = !DIDerivedType(tag: DW_TAG_member, name: "output", scope: !2595, file: !2596, line: 35, baseType: !2608, size: 64, offset: 384)
!2608 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2609, size: 64)
!2609 = !DISubroutineType(types: !2610)
!2610 = !{!37, !1962, !450, !420}
!2611 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2595, file: !2596, line: 37, baseType: !477, size: 16, offset: 448)
!2612 = !DIDerivedType(tag: DW_TAG_member, name: "obsolete", scope: !2595, file: !2596, line: 54, baseType: !1246, size: 16, offset: 464)
!2613 = !DIDerivedType(tag: DW_TAG_member, name: "header_len", scope: !2595, file: !2596, line: 59, baseType: !477, size: 16, offset: 480)
!2614 = !DIDerivedType(tag: DW_TAG_member, name: "trailer_len", scope: !2595, file: !2596, line: 60, baseType: !477, size: 16, offset: 496)
!2615 = !DIDerivedType(tag: DW_TAG_member, name: "__refcnt", scope: !2595, file: !2596, line: 67, baseType: !388, size: 32, offset: 512)
!2616 = !DIDerivedType(tag: DW_TAG_member, name: "__use", scope: !2595, file: !2596, line: 69, baseType: !37, size: 32, offset: 544)
!2617 = !DIDerivedType(tag: DW_TAG_member, name: "lastuse", scope: !2595, file: !2596, line: 70, baseType: !317, size: 64, offset: 576)
!2618 = !DIDerivedType(tag: DW_TAG_member, name: "lwtstate", scope: !2595, file: !2596, line: 71, baseType: !2619, size: 64, offset: 640)
!2619 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2620, size: 64)
!2620 = !DICompositeType(tag: DW_TAG_structure_type, name: "lwtunnel_state", file: !2596, line: 71, flags: DIFlagFwdDecl)
!2621 = !DIDerivedType(tag: DW_TAG_member, name: "callback_head", scope: !2595, file: !2596, line: 72, baseType: !304, size: 128, align: 64, offset: 704)
!2622 = !DIDerivedType(tag: DW_TAG_member, name: "error", scope: !2595, file: !2596, line: 73, baseType: !1246, size: 16, offset: 832)
!2623 = !DIDerivedType(tag: DW_TAG_member, name: "__pad", scope: !2595, file: !2596, line: 74, baseType: !1246, size: 16, offset: 848)
!2624 = !DIDerivedType(tag: DW_TAG_member, name: "tclassid", scope: !2595, file: !2596, line: 75, baseType: !468, size: 32, offset: 864)
!2625 = !DIDerivedType(tag: DW_TAG_member, name: "default_advmss", scope: !2580, file: !2581, line: 21, baseType: !2626, size: 64, offset: 192)
!2626 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2627, size: 64)
!2627 = !DISubroutineType(types: !2628)
!2628 = !{!7, !2629}
!2629 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2630, size: 64)
!2630 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2595)
!2631 = !DIDerivedType(tag: DW_TAG_member, name: "mtu", scope: !2580, file: !2581, line: 22, baseType: !2626, size: 64, offset: 256)
!2632 = !DIDerivedType(tag: DW_TAG_member, name: "cow_metrics", scope: !2580, file: !2581, line: 23, baseType: !2633, size: 64, offset: 320)
!2633 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2634, size: 64)
!2634 = !DISubroutineType(types: !2635)
!2635 = !{!1460, !2594, !317}
!2636 = !DIDerivedType(tag: DW_TAG_member, name: "destroy", scope: !2580, file: !2581, line: 24, baseType: !2637, size: 64, offset: 384)
!2637 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2638, size: 64)
!2638 = !DISubroutineType(types: !2639)
!2639 = !{null, !2594}
!2640 = !DIDerivedType(tag: DW_TAG_member, name: "ifdown", scope: !2580, file: !2581, line: 25, baseType: !2641, size: 64, offset: 448)
!2641 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2642, size: 64)
!2642 = !DISubroutineType(types: !2643)
!2643 = !{null, !2594, !295, !37}
!2644 = !DIDerivedType(tag: DW_TAG_member, name: "negative_advice", scope: !2580, file: !2581, line: 27, baseType: !2645, size: 64, offset: 512)
!2645 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2646, size: 64)
!2646 = !DISubroutineType(types: !2647)
!2647 = !{!2594, !2594}
!2648 = !DIDerivedType(tag: DW_TAG_member, name: "link_failure", scope: !2580, file: !2581, line: 28, baseType: !2649, size: 64, offset: 576)
!2649 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2650, size: 64)
!2650 = !DISubroutineType(types: !2651)
!2651 = !{null, !420}
!2652 = !DIDerivedType(tag: DW_TAG_member, name: "update_pmtu", scope: !2580, file: !2581, line: 29, baseType: !2653, size: 64, offset: 640)
!2653 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2654, size: 64)
!2654 = !DISubroutineType(types: !2655)
!2655 = !{null, !2594, !450, !420, !707, !540}
!2656 = !DIDerivedType(tag: DW_TAG_member, name: "redirect", scope: !2580, file: !2581, line: 32, baseType: !2657, size: 64, offset: 704)
!2657 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2658, size: 64)
!2658 = !DISubroutineType(types: !2659)
!2659 = !{null, !2594, !450, !420}
!2660 = !DIDerivedType(tag: DW_TAG_member, name: "local_out", scope: !2580, file: !2581, line: 34, baseType: !2608, size: 64, offset: 768)
!2661 = !DIDerivedType(tag: DW_TAG_member, name: "neigh_lookup", scope: !2580, file: !2581, line: 35, baseType: !2662, size: 64, offset: 832)
!2662 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2663, size: 64)
!2663 = !DISubroutineType(types: !2664)
!2664 = !{!2665, !2629, !420, !2244}
!2665 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2666, size: 64)
!2666 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "neighbour", file: !2667, line: 134, size: 2624, elements: !2668)
!2667 = !DIFile(filename: "./include/net/neighbour.h", directory: "/home/lizy2001/genbc/linux")
!2668 = !{!2669, !2670, !2808, !2810, !2811, !2812, !2813, !2814, !2815, !2816, !2817, !2818, !2819, !2820, !2821, !2822, !2823, !2824, !2825, !2826, !2835, !2839, !2852, !2853, !2854, !2855}
!2669 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2666, file: !2667, line: 135, baseType: !2665, size: 64)
!2670 = !DIDerivedType(tag: DW_TAG_member, name: "tbl", scope: !2666, file: !2667, line: 136, baseType: !2671, size: 64, offset: 64)
!2671 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2672, size: 64)
!2672 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "neigh_table", file: !2667, line: 194, size: 3840, elements: !2673)
!2673 = !{!2674, !2675, !2676, !2677, !2678, !2685, !2691, !2695, !2713, !2717, !2718, !2722, !2726, !2727, !2745, !2746, !2747, !2748, !2749, !2750, !2751, !2760, !2761, !2768, !2769, !2770, !2771, !2779, !2780, !2796, !2806}
!2674 = !DIDerivedType(tag: DW_TAG_member, name: "family", scope: !2672, file: !2667, line: 195, baseType: !37, size: 32)
!2675 = !DIDerivedType(tag: DW_TAG_member, name: "entry_size", scope: !2672, file: !2667, line: 196, baseType: !7, size: 32, offset: 32)
!2676 = !DIDerivedType(tag: DW_TAG_member, name: "key_len", scope: !2672, file: !2667, line: 197, baseType: !7, size: 32, offset: 64)
!2677 = !DIDerivedType(tag: DW_TAG_member, name: "protocol", scope: !2672, file: !2667, line: 198, baseType: !489, size: 16, offset: 96)
!2678 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !2672, file: !2667, line: 199, baseType: !2679, size: 64, offset: 128)
!2679 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2680, size: 64)
!2680 = !DISubroutineType(types: !2681)
!2681 = !{!468, !2244, !2682, !2684}
!2682 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2683, size: 64)
!2683 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !269)
!2684 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !468, size: 64)
!2685 = !DIDerivedType(tag: DW_TAG_member, name: "key_eq", scope: !2672, file: !2667, line: 202, baseType: !2686, size: 64, offset: 192)
!2686 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2687, size: 64)
!2687 = !DISubroutineType(types: !2688)
!2688 = !{!540, !2689, !2244}
!2689 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2690, size: 64)
!2690 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2666)
!2691 = !DIDerivedType(tag: DW_TAG_member, name: "constructor", scope: !2672, file: !2667, line: 203, baseType: !2692, size: 64, offset: 256)
!2692 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2693, size: 64)
!2693 = !DISubroutineType(types: !2694)
!2694 = !{!37, !2665}
!2695 = !DIDerivedType(tag: DW_TAG_member, name: "pconstructor", scope: !2672, file: !2667, line: 204, baseType: !2696, size: 64, offset: 320)
!2696 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2697, size: 64)
!2697 = !DISubroutineType(types: !2698)
!2698 = !{!37, !2699}
!2699 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2700, size: 64)
!2700 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pneigh_entry", file: !2667, line: 171, size: 256, elements: !2701)
!2701 = !{!2702, !2703, !2708, !2709, !2710, !2711}
!2702 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2700, file: !2667, line: 172, baseType: !2699, size: 64)
!2703 = !DIDerivedType(tag: DW_TAG_member, name: "net", scope: !2700, file: !2667, line: 173, baseType: !2704, size: 64, offset: 64)
!2704 = !DIDerivedType(tag: DW_TAG_typedef, name: "possible_net_t", file: !1964, line: 318, baseType: !2705)
!2705 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1964, line: 314, size: 64, elements: !2706)
!2706 = !{!2707}
!2707 = !DIDerivedType(tag: DW_TAG_member, name: "net", scope: !2705, file: !1964, line: 316, baseType: !1962, size: 64)
!2708 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !2700, file: !2667, line: 174, baseType: !295, size: 64, offset: 128)
!2709 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2700, file: !2667, line: 175, baseType: !1397, size: 8, offset: 192)
!2710 = !DIDerivedType(tag: DW_TAG_member, name: "protocol", scope: !2700, file: !2667, line: 176, baseType: !1397, size: 8, offset: 200)
!2711 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !2700, file: !2667, line: 177, baseType: !2712, offset: 208)
!2712 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1397, elements: !314)
!2713 = !DIDerivedType(tag: DW_TAG_member, name: "pdestructor", scope: !2672, file: !2667, line: 205, baseType: !2714, size: 64, offset: 384)
!2714 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2715, size: 64)
!2715 = !DISubroutineType(types: !2716)
!2716 = !{null, !2699}
!2717 = !DIDerivedType(tag: DW_TAG_member, name: "proxy_redo", scope: !2672, file: !2667, line: 206, baseType: !2649, size: 64, offset: 448)
!2718 = !DIDerivedType(tag: DW_TAG_member, name: "is_multicast", scope: !2672, file: !2667, line: 207, baseType: !2719, size: 64, offset: 512)
!2719 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2720, size: 64)
!2720 = !DISubroutineType(types: !2721)
!2721 = !{!37, !2244}
!2722 = !DIDerivedType(tag: DW_TAG_member, name: "allow_add", scope: !2672, file: !2667, line: 208, baseType: !2723, size: 64, offset: 576)
!2723 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2724, size: 64)
!2724 = !DISubroutineType(types: !2725)
!2725 = !{!540, !2682, !2444}
!2726 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !2672, file: !2667, line: 210, baseType: !577, size: 64, offset: 640)
!2727 = !DIDerivedType(tag: DW_TAG_member, name: "parms", scope: !2672, file: !2667, line: 211, baseType: !2728, size: 1152, offset: 704)
!2728 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "neigh_parms", file: !2667, line: 70, size: 1152, elements: !2729)
!2729 = !{!2730, !2731, !2732, !2733, !2734, !2735, !2736, !2737, !2738, !2739, !2740, !2744}
!2730 = !DIDerivedType(tag: DW_TAG_member, name: "net", scope: !2728, file: !2667, line: 71, baseType: !2704, size: 64)
!2731 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !2728, file: !2667, line: 72, baseType: !295, size: 64, offset: 64)
!2732 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !2728, file: !2667, line: 73, baseType: !289, size: 128, offset: 128)
!2733 = !DIDerivedType(tag: DW_TAG_member, name: "neigh_setup", scope: !2728, file: !2667, line: 74, baseType: !2692, size: 64, offset: 256)
!2734 = !DIDerivedType(tag: DW_TAG_member, name: "tbl", scope: !2728, file: !2667, line: 75, baseType: !2671, size: 64, offset: 320)
!2735 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_table", scope: !2728, file: !2667, line: 77, baseType: !570, size: 64, offset: 384)
!2736 = !DIDerivedType(tag: DW_TAG_member, name: "dead", scope: !2728, file: !2667, line: 79, baseType: !37, size: 32, offset: 448)
!2737 = !DIDerivedType(tag: DW_TAG_member, name: "refcnt", scope: !2728, file: !2667, line: 80, baseType: !1271, size: 32, offset: 480)
!2738 = !DIDerivedType(tag: DW_TAG_member, name: "callback_head", scope: !2728, file: !2667, line: 81, baseType: !304, size: 128, align: 64, offset: 512)
!2739 = !DIDerivedType(tag: DW_TAG_member, name: "reachable_time", scope: !2728, file: !2667, line: 83, baseType: !37, size: 32, offset: 640)
!2740 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !2728, file: !2667, line: 84, baseType: !2741, size: 416, offset: 672)
!2741 = !DICompositeType(tag: DW_TAG_array_type, baseType: !37, size: 416, elements: !2742)
!2742 = !{!2743}
!2743 = !DISubrange(count: 13)
!2744 = !DIDerivedType(tag: DW_TAG_member, name: "data_state", scope: !2728, file: !2667, line: 85, baseType: !1415, size: 64, offset: 1088)
!2745 = !DIDerivedType(tag: DW_TAG_member, name: "parms_list", scope: !2672, file: !2667, line: 212, baseType: !289, size: 128, offset: 1856)
!2746 = !DIDerivedType(tag: DW_TAG_member, name: "gc_interval", scope: !2672, file: !2667, line: 213, baseType: !37, size: 32, offset: 1984)
!2747 = !DIDerivedType(tag: DW_TAG_member, name: "gc_thresh1", scope: !2672, file: !2667, line: 214, baseType: !37, size: 32, offset: 2016)
!2748 = !DIDerivedType(tag: DW_TAG_member, name: "gc_thresh2", scope: !2672, file: !2667, line: 215, baseType: !37, size: 32, offset: 2048)
!2749 = !DIDerivedType(tag: DW_TAG_member, name: "gc_thresh3", scope: !2672, file: !2667, line: 216, baseType: !37, size: 32, offset: 2080)
!2750 = !DIDerivedType(tag: DW_TAG_member, name: "last_flush", scope: !2672, file: !2667, line: 217, baseType: !317, size: 64, offset: 2112)
!2751 = !DIDerivedType(tag: DW_TAG_member, name: "gc_work", scope: !2672, file: !2667, line: 218, baseType: !2752, size: 704, offset: 2176)
!2752 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "delayed_work", file: !1808, line: 115, size: 704, elements: !2753)
!2753 = !{!2754, !2755, !2756, !2759}
!2754 = !DIDerivedType(tag: DW_TAG_member, name: "work", scope: !2752, file: !1808, line: 116, baseType: !1807, size: 256)
!2755 = !DIDerivedType(tag: DW_TAG_member, name: "timer", scope: !2752, file: !1808, line: 117, baseType: !2221, size: 320, offset: 256)
!2756 = !DIDerivedType(tag: DW_TAG_member, name: "wq", scope: !2752, file: !1808, line: 120, baseType: !2757, size: 64, offset: 576)
!2757 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2758, size: 64)
!2758 = !DICompositeType(tag: DW_TAG_structure_type, name: "workqueue_struct", file: !1808, line: 18, flags: DIFlagFwdDecl)
!2759 = !DIDerivedType(tag: DW_TAG_member, name: "cpu", scope: !2752, file: !1808, line: 121, baseType: !37, size: 32, offset: 640)
!2760 = !DIDerivedType(tag: DW_TAG_member, name: "proxy_timer", scope: !2672, file: !2667, line: 219, baseType: !2221, size: 320, offset: 2880)
!2761 = !DIDerivedType(tag: DW_TAG_member, name: "proxy_queue", scope: !2672, file: !2667, line: 220, baseType: !2762, size: 192, offset: 3200)
!2762 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sk_buff_head", file: !422, line: 291, size: 192, elements: !2763)
!2763 = !{!2764, !2765, !2766, !2767}
!2764 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2762, file: !422, line: 293, baseType: !420, size: 64)
!2765 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2762, file: !422, line: 294, baseType: !420, size: 64, offset: 64)
!2766 = !DIDerivedType(tag: DW_TAG_member, name: "qlen", scope: !2762, file: !422, line: 296, baseType: !468, size: 32, offset: 128)
!2767 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2762, file: !422, line: 297, baseType: !729, offset: 160)
!2768 = !DIDerivedType(tag: DW_TAG_member, name: "entries", scope: !2672, file: !2667, line: 221, baseType: !388, size: 32, offset: 3392)
!2769 = !DIDerivedType(tag: DW_TAG_member, name: "gc_entries", scope: !2672, file: !2667, line: 222, baseType: !388, size: 32, offset: 3424)
!2770 = !DIDerivedType(tag: DW_TAG_member, name: "gc_list", scope: !2672, file: !2667, line: 223, baseType: !289, size: 128, offset: 3456)
!2771 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2672, file: !2667, line: 224, baseType: !2772, offset: 3584)
!2772 = !DIDerivedType(tag: DW_TAG_typedef, name: "rwlock_t", file: !2773, line: 20, baseType: !2774)
!2773 = !DIFile(filename: "./include/linux/rwlock_types.h", directory: "/home/lizy2001/genbc/linux")
!2774 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2773, line: 11, elements: !2775)
!2775 = !{!2776}
!2776 = !DIDerivedType(tag: DW_TAG_member, name: "raw_lock", scope: !2774, file: !2773, line: 12, baseType: !2777)
!2777 = !DIDerivedType(tag: DW_TAG_typedef, name: "arch_rwlock_t", file: !741, line: 33, baseType: !2778)
!2778 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !741, line: 31, elements: !743)
!2779 = !DIDerivedType(tag: DW_TAG_member, name: "last_rand", scope: !2672, file: !2667, line: 225, baseType: !317, size: 64, offset: 3584)
!2780 = !DIDerivedType(tag: DW_TAG_member, name: "stats", scope: !2672, file: !2667, line: 226, baseType: !2781, size: 64, offset: 3648)
!2781 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2782, size: 64)
!2782 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "neigh_statistics", file: !2667, line: 112, size: 768, elements: !2783)
!2783 = !{!2784, !2785, !2786, !2787, !2788, !2789, !2790, !2791, !2792, !2793, !2794, !2795}
!2784 = !DIDerivedType(tag: DW_TAG_member, name: "allocs", scope: !2782, file: !2667, line: 113, baseType: !317, size: 64)
!2785 = !DIDerivedType(tag: DW_TAG_member, name: "destroys", scope: !2782, file: !2667, line: 114, baseType: !317, size: 64, offset: 64)
!2786 = !DIDerivedType(tag: DW_TAG_member, name: "hash_grows", scope: !2782, file: !2667, line: 115, baseType: !317, size: 64, offset: 128)
!2787 = !DIDerivedType(tag: DW_TAG_member, name: "res_failed", scope: !2782, file: !2667, line: 117, baseType: !317, size: 64, offset: 192)
!2788 = !DIDerivedType(tag: DW_TAG_member, name: "lookups", scope: !2782, file: !2667, line: 119, baseType: !317, size: 64, offset: 256)
!2789 = !DIDerivedType(tag: DW_TAG_member, name: "hits", scope: !2782, file: !2667, line: 120, baseType: !317, size: 64, offset: 320)
!2790 = !DIDerivedType(tag: DW_TAG_member, name: "rcv_probes_mcast", scope: !2782, file: !2667, line: 122, baseType: !317, size: 64, offset: 384)
!2791 = !DIDerivedType(tag: DW_TAG_member, name: "rcv_probes_ucast", scope: !2782, file: !2667, line: 123, baseType: !317, size: 64, offset: 448)
!2792 = !DIDerivedType(tag: DW_TAG_member, name: "periodic_gc_runs", scope: !2782, file: !2667, line: 125, baseType: !317, size: 64, offset: 512)
!2793 = !DIDerivedType(tag: DW_TAG_member, name: "forced_gc_runs", scope: !2782, file: !2667, line: 126, baseType: !317, size: 64, offset: 576)
!2794 = !DIDerivedType(tag: DW_TAG_member, name: "unres_discards", scope: !2782, file: !2667, line: 128, baseType: !317, size: 64, offset: 640)
!2795 = !DIDerivedType(tag: DW_TAG_member, name: "table_fulls", scope: !2782, file: !2667, line: 129, baseType: !317, size: 64, offset: 704)
!2796 = !DIDerivedType(tag: DW_TAG_member, name: "nht", scope: !2672, file: !2667, line: 227, baseType: !2797, size: 64, offset: 3712)
!2797 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2798, size: 64)
!2798 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "neigh_hash_table", file: !2667, line: 186, size: 384, elements: !2799)
!2799 = !{!2800, !2802, !2803, !2805}
!2800 = !DIDerivedType(tag: DW_TAG_member, name: "hash_buckets", scope: !2798, file: !2667, line: 187, baseType: !2801, size: 64)
!2801 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2665, size: 64)
!2802 = !DIDerivedType(tag: DW_TAG_member, name: "hash_shift", scope: !2798, file: !2667, line: 188, baseType: !7, size: 32, offset: 64)
!2803 = !DIDerivedType(tag: DW_TAG_member, name: "hash_rnd", scope: !2798, file: !2667, line: 189, baseType: !2804, size: 128, offset: 96)
!2804 = !DICompositeType(tag: DW_TAG_array_type, baseType: !468, size: 128, elements: !1202)
!2805 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !2798, file: !2667, line: 190, baseType: !304, size: 128, align: 64, offset: 256)
!2806 = !DIDerivedType(tag: DW_TAG_member, name: "phash_buckets", scope: !2672, file: !2667, line: 228, baseType: !2807, size: 64, offset: 3776)
!2807 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2699, size: 64)
!2808 = !DIDerivedType(tag: DW_TAG_member, name: "parms", scope: !2666, file: !2667, line: 137, baseType: !2809, size: 64, offset: 128)
!2809 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2728, size: 64)
!2810 = !DIDerivedType(tag: DW_TAG_member, name: "confirmed", scope: !2666, file: !2667, line: 138, baseType: !317, size: 64, offset: 192)
!2811 = !DIDerivedType(tag: DW_TAG_member, name: "updated", scope: !2666, file: !2667, line: 139, baseType: !317, size: 64, offset: 256)
!2812 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2666, file: !2667, line: 140, baseType: !2772, offset: 320)
!2813 = !DIDerivedType(tag: DW_TAG_member, name: "refcnt", scope: !2666, file: !2667, line: 141, baseType: !1271, size: 32, offset: 320)
!2814 = !DIDerivedType(tag: DW_TAG_member, name: "arp_queue_len_bytes", scope: !2666, file: !2667, line: 142, baseType: !7, size: 32, offset: 352)
!2815 = !DIDerivedType(tag: DW_TAG_member, name: "arp_queue", scope: !2666, file: !2667, line: 143, baseType: !2762, size: 192, offset: 384)
!2816 = !DIDerivedType(tag: DW_TAG_member, name: "timer", scope: !2666, file: !2667, line: 144, baseType: !2221, size: 320, offset: 576)
!2817 = !DIDerivedType(tag: DW_TAG_member, name: "used", scope: !2666, file: !2667, line: 145, baseType: !317, size: 64, offset: 896)
!2818 = !DIDerivedType(tag: DW_TAG_member, name: "probes", scope: !2666, file: !2667, line: 146, baseType: !388, size: 32, offset: 960)
!2819 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2666, file: !2667, line: 147, baseType: !1398, size: 8, offset: 992)
!2820 = !DIDerivedType(tag: DW_TAG_member, name: "nud_state", scope: !2666, file: !2667, line: 148, baseType: !1398, size: 8, offset: 1000)
!2821 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2666, file: !2667, line: 149, baseType: !1398, size: 8, offset: 1008)
!2822 = !DIDerivedType(tag: DW_TAG_member, name: "dead", scope: !2666, file: !2667, line: 150, baseType: !1398, size: 8, offset: 1016)
!2823 = !DIDerivedType(tag: DW_TAG_member, name: "protocol", scope: !2666, file: !2667, line: 151, baseType: !1397, size: 8, offset: 1024)
!2824 = !DIDerivedType(tag: DW_TAG_member, name: "ha_lock", scope: !2666, file: !2667, line: 152, baseType: !2313, size: 32, offset: 1056)
!2825 = !DIDerivedType(tag: DW_TAG_member, name: "ha", scope: !2666, file: !2667, line: 153, baseType: !715, size: 256, align: 64, offset: 1088)
!2826 = !DIDerivedType(tag: DW_TAG_member, name: "hh", scope: !2666, file: !2667, line: 154, baseType: !2827, size: 832, offset: 1344)
!2827 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hh_cache", file: !36, line: 244, size: 832, elements: !2828)
!2828 = !{!2829, !2830, !2831}
!2829 = !DIDerivedType(tag: DW_TAG_member, name: "hh_len", scope: !2827, file: !36, line: 245, baseType: !7, size: 32)
!2830 = !DIDerivedType(tag: DW_TAG_member, name: "hh_lock", scope: !2827, file: !36, line: 246, baseType: !2313, size: 32, offset: 32)
!2831 = !DIDerivedType(tag: DW_TAG_member, name: "hh_data", scope: !2827, file: !36, line: 254, baseType: !2832, size: 768, offset: 64)
!2832 = !DICompositeType(tag: DW_TAG_array_type, baseType: !317, size: 768, elements: !2833)
!2833 = !{!2834}
!2834 = !DISubrange(count: 12)
!2835 = !DIDerivedType(tag: DW_TAG_member, name: "output", scope: !2666, file: !2667, line: 155, baseType: !2836, size: 64, offset: 2176)
!2836 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2837, size: 64)
!2837 = !DISubroutineType(types: !2838)
!2838 = !{!37, !2665, !420}
!2839 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !2666, file: !2667, line: 156, baseType: !2840, size: 64, offset: 2240)
!2840 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2841, size: 64)
!2841 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2842)
!2842 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "neigh_ops", file: !2667, line: 163, size: 320, elements: !2843)
!2843 = !{!2844, !2845, !2849, !2850, !2851}
!2844 = !DIDerivedType(tag: DW_TAG_member, name: "family", scope: !2842, file: !2667, line: 164, baseType: !37, size: 32)
!2845 = !DIDerivedType(tag: DW_TAG_member, name: "solicit", scope: !2842, file: !2667, line: 165, baseType: !2846, size: 64, offset: 64)
!2846 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2847, size: 64)
!2847 = !DISubroutineType(types: !2848)
!2848 = !{null, !2665, !420}
!2849 = !DIDerivedType(tag: DW_TAG_member, name: "error_report", scope: !2842, file: !2667, line: 166, baseType: !2846, size: 64, offset: 128)
!2850 = !DIDerivedType(tag: DW_TAG_member, name: "output", scope: !2842, file: !2667, line: 167, baseType: !2836, size: 64, offset: 192)
!2851 = !DIDerivedType(tag: DW_TAG_member, name: "connected_output", scope: !2842, file: !2667, line: 168, baseType: !2836, size: 64, offset: 256)
!2852 = !DIDerivedType(tag: DW_TAG_member, name: "gc_list", scope: !2666, file: !2667, line: 157, baseType: !289, size: 128, offset: 2304)
!2853 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !2666, file: !2667, line: 158, baseType: !304, size: 128, align: 64, offset: 2432)
!2854 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !2666, file: !2667, line: 159, baseType: !295, size: 64, offset: 2560)
!2855 = !DIDerivedType(tag: DW_TAG_member, name: "primary_key", scope: !2666, file: !2667, line: 160, baseType: !2856, offset: 2624)
!2856 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1397, elements: !1922)
!2857 = !DIDerivedType(tag: DW_TAG_member, name: "confirm_neigh", scope: !2580, file: !2581, line: 38, baseType: !2858, size: 64, offset: 896)
!2858 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2859, size: 64)
!2859 = !DISubroutineType(types: !2860)
!2860 = !{null, !2629, !2244}
!2861 = !DIDerivedType(tag: DW_TAG_member, name: "kmem_cachep", scope: !2580, file: !2581, line: 41, baseType: !2252, size: 64, offset: 960)
!2862 = !DIDerivedType(tag: DW_TAG_member, name: "pcpuc_entries", scope: !2580, file: !2581, line: 43, baseType: !2863, size: 64, offset: 1024)
!2863 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "percpu_counter", file: !2864, line: 97, size: 64, elements: !2865)
!2864 = !DIFile(filename: "./include/linux/percpu_counter.h", directory: "/home/lizy2001/genbc/linux")
!2865 = !{!2866}
!2866 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !2863, file: !2864, line: 98, baseType: !382, size: 64)
!2867 = !DIDerivedType(tag: DW_TAG_member, name: "fib6_walker_lock", scope: !2515, file: !2516, line: 79, baseType: !2772, offset: 3712)
!2868 = !DIDerivedType(tag: DW_TAG_member, name: "fib6_gc_lock", scope: !2515, file: !2516, line: 80, baseType: !729, offset: 3712)
!2869 = !DIDerivedType(tag: DW_TAG_member, name: "ip6_rt_gc_expire", scope: !2515, file: !2516, line: 81, baseType: !7, size: 32, offset: 3712)
!2870 = !DIDerivedType(tag: DW_TAG_member, name: "ip6_rt_last_gc", scope: !2515, file: !2516, line: 82, baseType: !317, size: 64, offset: 3776)
!2871 = !DIDerivedType(tag: DW_TAG_member, name: "icmp_sk", scope: !2515, file: !2516, line: 94, baseType: !2155, size: 64, offset: 3840)
!2872 = !DIDerivedType(tag: DW_TAG_member, name: "ndisc_sk", scope: !2515, file: !2516, line: 95, baseType: !450, size: 64, offset: 3904)
!2873 = !DIDerivedType(tag: DW_TAG_member, name: "tcp_sk", scope: !2515, file: !2516, line: 96, baseType: !450, size: 64, offset: 3968)
!2874 = !DIDerivedType(tag: DW_TAG_member, name: "igmp_sk", scope: !2515, file: !2516, line: 97, baseType: !450, size: 64, offset: 4032)
!2875 = !DIDerivedType(tag: DW_TAG_member, name: "mc_autojoin_sk", scope: !2515, file: !2516, line: 98, baseType: !450, size: 64, offset: 4096)
!2876 = !DIDerivedType(tag: DW_TAG_member, name: "dev_addr_genid", scope: !2515, file: !2516, line: 107, baseType: !388, size: 32, offset: 4160)
!2877 = !DIDerivedType(tag: DW_TAG_member, name: "fib6_sernum", scope: !2515, file: !2516, line: 108, baseType: !388, size: 32, offset: 4192)
!2878 = !DIDerivedType(tag: DW_TAG_member, name: "seg6_data", scope: !2515, file: !2516, line: 109, baseType: !2879, size: 64, offset: 4224)
!2879 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2880, size: 64)
!2880 = !DICompositeType(tag: DW_TAG_structure_type, name: "seg6_pernet_data", file: !2516, line: 109, flags: DIFlagFwdDecl)
!2881 = !DIDerivedType(tag: DW_TAG_member, name: "notifier_ops", scope: !2515, file: !2516, line: 110, baseType: !2430, size: 64, offset: 4288)
!2882 = !DIDerivedType(tag: DW_TAG_member, name: "ip6mr_notifier_ops", scope: !2515, file: !2516, line: 111, baseType: !2430, size: 64, offset: 4352)
!2883 = !DIDerivedType(tag: DW_TAG_member, name: "ipmr_seq", scope: !2515, file: !2516, line: 112, baseType: !7, size: 32, offset: 4416)
!2884 = !DIDerivedType(tag: DW_TAG_member, name: "ip6addrlbl_table", scope: !2515, file: !2516, line: 117, baseType: !2885, size: 128, offset: 4480)
!2885 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2515, file: !2516, line: 113, size: 128, elements: !2886)
!2886 = !{!2887, !2888, !2889}
!2887 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2885, file: !2516, line: 114, baseType: !857, size: 64)
!2888 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2885, file: !2516, line: 115, baseType: !729, offset: 64)
!2889 = !DIDerivedType(tag: DW_TAG_member, name: "seq", scope: !2885, file: !2516, line: 116, baseType: !707, size: 32, offset: 64)
!2890 = !DIDerivedType(tag: DW_TAG_member, name: "wext_nlevents", scope: !1963, file: !1964, line: 162, baseType: !2762, size: 192, offset: 14784)
!2891 = !DIDerivedType(tag: DW_TAG_member, name: "gen", scope: !1963, file: !1964, line: 164, baseType: !2892, size: 64, offset: 14976)
!2892 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2893, size: 64)
!2893 = !DICompositeType(tag: DW_TAG_structure_type, name: "net_generic", file: !1964, line: 47, flags: DIFlagFwdDecl)
!2894 = !DIDerivedType(tag: DW_TAG_member, name: "bpf", scope: !1963, file: !1964, line: 167, baseType: !2895, size: 512, offset: 15040)
!2895 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "netns_bpf", file: !2896, line: 14, size: 512, elements: !2897)
!2896 = !DIFile(filename: "./include/net/netns/bpf.h", directory: "/home/lizy2001/genbc/linux")
!2897 = !{!2898, !3533, !3535}
!2898 = !DIDerivedType(tag: DW_TAG_member, name: "run_array", scope: !2895, file: !2896, line: 16, baseType: !2899, size: 128)
!2899 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2900, size: 128, elements: !478)
!2900 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2901, size: 64)
!2901 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_prog_array", file: !145, line: 1037, size: 128, elements: !2902)
!2902 = !{!2903, !2904}
!2903 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !2901, file: !145, line: 1038, baseType: !304, size: 128, align: 64)
!2904 = !DIDerivedType(tag: DW_TAG_member, name: "items", scope: !2901, file: !145, line: 1039, baseType: !2905, offset: 128)
!2905 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2906, elements: !314)
!2906 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_prog_array_item", file: !145, line: 1032, size: 192, elements: !2907)
!2907 = !{!2908, !3529}
!2908 = !DIDerivedType(tag: DW_TAG_member, name: "prog", scope: !2906, file: !145, line: 1033, baseType: !2909, size: 64)
!2909 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2910, size: 64)
!2910 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_prog", file: !2911, line: 525, size: 448, elements: !2912)
!2911 = !DIFile(filename: "./include/linux/filter.h", directory: "/home/lizy2001/genbc/linux")
!2912 = !{!2913, !2914, !2915, !2916, !2917, !2918, !2919, !2920, !2921, !2922, !2923, !2924, !2925, !2926, !2927, !2928, !2929, !2931, !3505, !3519, !3525, !3527}
!2913 = !DIDerivedType(tag: DW_TAG_member, name: "pages", scope: !2910, file: !2911, line: 526, baseType: !1038, size: 16)
!2914 = !DIDerivedType(tag: DW_TAG_member, name: "jited", scope: !2910, file: !2911, line: 527, baseType: !1038, size: 1, offset: 16, flags: DIFlagBitField, extraData: i64 16)
!2915 = !DIDerivedType(tag: DW_TAG_member, name: "jit_requested", scope: !2910, file: !2911, line: 528, baseType: !1038, size: 1, offset: 17, flags: DIFlagBitField, extraData: i64 16)
!2916 = !DIDerivedType(tag: DW_TAG_member, name: "gpl_compatible", scope: !2910, file: !2911, line: 529, baseType: !1038, size: 1, offset: 18, flags: DIFlagBitField, extraData: i64 16)
!2917 = !DIDerivedType(tag: DW_TAG_member, name: "cb_access", scope: !2910, file: !2911, line: 530, baseType: !1038, size: 1, offset: 19, flags: DIFlagBitField, extraData: i64 16)
!2918 = !DIDerivedType(tag: DW_TAG_member, name: "dst_needed", scope: !2910, file: !2911, line: 531, baseType: !1038, size: 1, offset: 20, flags: DIFlagBitField, extraData: i64 16)
!2919 = !DIDerivedType(tag: DW_TAG_member, name: "blinded", scope: !2910, file: !2911, line: 532, baseType: !1038, size: 1, offset: 21, flags: DIFlagBitField, extraData: i64 16)
!2920 = !DIDerivedType(tag: DW_TAG_member, name: "is_func", scope: !2910, file: !2911, line: 533, baseType: !1038, size: 1, offset: 22, flags: DIFlagBitField, extraData: i64 16)
!2921 = !DIDerivedType(tag: DW_TAG_member, name: "kprobe_override", scope: !2910, file: !2911, line: 534, baseType: !1038, size: 1, offset: 23, flags: DIFlagBitField, extraData: i64 16)
!2922 = !DIDerivedType(tag: DW_TAG_member, name: "has_callchain_buf", scope: !2910, file: !2911, line: 535, baseType: !1038, size: 1, offset: 24, flags: DIFlagBitField, extraData: i64 16)
!2923 = !DIDerivedType(tag: DW_TAG_member, name: "enforce_expected_attach_type", scope: !2910, file: !2911, line: 536, baseType: !1038, size: 1, offset: 25, flags: DIFlagBitField, extraData: i64 16)
!2924 = !DIDerivedType(tag: DW_TAG_member, name: "call_get_stack", scope: !2910, file: !2911, line: 537, baseType: !1038, size: 1, offset: 26, flags: DIFlagBitField, extraData: i64 16)
!2925 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2910, file: !2911, line: 538, baseType: !69, size: 32, offset: 32)
!2926 = !DIDerivedType(tag: DW_TAG_member, name: "expected_attach_type", scope: !2910, file: !2911, line: 539, baseType: !103, size: 32, offset: 64)
!2927 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !2910, file: !2911, line: 540, baseType: !707, size: 32, offset: 96)
!2928 = !DIDerivedType(tag: DW_TAG_member, name: "jited_len", scope: !2910, file: !2911, line: 541, baseType: !707, size: 32, offset: 128)
!2929 = !DIDerivedType(tag: DW_TAG_member, name: "tag", scope: !2910, file: !2911, line: 542, baseType: !2930, size: 64, offset: 160)
!2930 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1397, size: 64, elements: !1371)
!2931 = !DIDerivedType(tag: DW_TAG_member, name: "aux", scope: !2910, file: !2911, line: 543, baseType: !2932, size: 64, offset: 256)
!2932 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2933, size: 64)
!2933 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_prog_aux", file: !145, line: 757, size: 4928, elements: !2934)
!2934 = !{!2935, !2936, !2937, !2938, !2939, !2940, !2941, !2942, !2943, !2944, !2945, !2946, !2947, !2948, !2956, !2957, !2958, !3001, !3002, !3003, !3004, !3005, !3006, !3007, !3008, !3009, !3010, !3011, !3015, !3016, !3018, !3019, !3423, !3424, !3425, !3434, !3436, !3437, !3438, !3439, !3440, !3442, !3443, !3458, !3459, !3465, !3471, !3479, !3481, !3482, !3483, !3484, !3485, !3493, !3500}
!2935 = !DIDerivedType(tag: DW_TAG_member, name: "refcnt", scope: !2933, file: !145, line: 758, baseType: !378, size: 64)
!2936 = !DIDerivedType(tag: DW_TAG_member, name: "used_map_cnt", scope: !2933, file: !145, line: 759, baseType: !707, size: 32, offset: 64)
!2937 = !DIDerivedType(tag: DW_TAG_member, name: "max_ctx_offset", scope: !2933, file: !145, line: 760, baseType: !707, size: 32, offset: 96)
!2938 = !DIDerivedType(tag: DW_TAG_member, name: "max_pkt_offset", scope: !2933, file: !145, line: 761, baseType: !707, size: 32, offset: 128)
!2939 = !DIDerivedType(tag: DW_TAG_member, name: "max_tp_access", scope: !2933, file: !145, line: 762, baseType: !707, size: 32, offset: 160)
!2940 = !DIDerivedType(tag: DW_TAG_member, name: "stack_depth", scope: !2933, file: !145, line: 763, baseType: !707, size: 32, offset: 192)
!2941 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !2933, file: !145, line: 764, baseType: !707, size: 32, offset: 224)
!2942 = !DIDerivedType(tag: DW_TAG_member, name: "func_cnt", scope: !2933, file: !145, line: 765, baseType: !707, size: 32, offset: 256)
!2943 = !DIDerivedType(tag: DW_TAG_member, name: "func_idx", scope: !2933, file: !145, line: 766, baseType: !707, size: 32, offset: 288)
!2944 = !DIDerivedType(tag: DW_TAG_member, name: "attach_btf_id", scope: !2933, file: !145, line: 767, baseType: !707, size: 32, offset: 320)
!2945 = !DIDerivedType(tag: DW_TAG_member, name: "ctx_arg_info_size", scope: !2933, file: !145, line: 768, baseType: !707, size: 32, offset: 352)
!2946 = !DIDerivedType(tag: DW_TAG_member, name: "max_rdonly_access", scope: !2933, file: !145, line: 769, baseType: !707, size: 32, offset: 384)
!2947 = !DIDerivedType(tag: DW_TAG_member, name: "max_rdwr_access", scope: !2933, file: !145, line: 770, baseType: !707, size: 32, offset: 416)
!2948 = !DIDerivedType(tag: DW_TAG_member, name: "ctx_arg_info", scope: !2933, file: !145, line: 771, baseType: !2949, size: 64, offset: 448)
!2949 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2950, size: 64)
!2950 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2951)
!2951 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_ctx_arg_aux", file: !145, line: 751, size: 96, elements: !2952)
!2952 = !{!2953, !2954, !2955}
!2953 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !2951, file: !145, line: 752, baseType: !707, size: 32)
!2954 = !DIDerivedType(tag: DW_TAG_member, name: "reg_type", scope: !2951, file: !145, line: 753, baseType: !144, size: 32, offset: 32)
!2955 = !DIDerivedType(tag: DW_TAG_member, name: "btf_id", scope: !2951, file: !145, line: 754, baseType: !707, size: 32, offset: 64)
!2956 = !DIDerivedType(tag: DW_TAG_member, name: "dst_mutex", scope: !2933, file: !145, line: 772, baseType: !954, size: 192, offset: 512)
!2957 = !DIDerivedType(tag: DW_TAG_member, name: "dst_prog", scope: !2933, file: !145, line: 773, baseType: !2909, size: 64, offset: 704)
!2958 = !DIDerivedType(tag: DW_TAG_member, name: "dst_trampoline", scope: !2933, file: !145, line: 774, baseType: !2959, size: 64, offset: 768)
!2959 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2960, size: 64)
!2960 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_trampoline", file: !145, line: 586, size: 2944, elements: !2961)
!2961 = !{!2962, !2963, !2964, !2965, !2966, !2978, !2979, !2981, !2982, !2983, !2984}
!2962 = !DIDerivedType(tag: DW_TAG_member, name: "hlist", scope: !2960, file: !145, line: 588, baseType: !281, size: 128)
!2963 = !DIDerivedType(tag: DW_TAG_member, name: "mutex", scope: !2960, file: !145, line: 590, baseType: !954, size: 192, offset: 128)
!2964 = !DIDerivedType(tag: DW_TAG_member, name: "refcnt", scope: !2960, file: !145, line: 591, baseType: !1271, size: 32, offset: 320)
!2965 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !2960, file: !145, line: 592, baseType: !336, size: 64, offset: 384)
!2966 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !2960, file: !145, line: 597, baseType: !2967, size: 256, offset: 448)
!2967 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2960, file: !145, line: 593, size: 256, elements: !2968)
!2968 = !{!2969, !2976, !2977}
!2969 = !DIDerivedType(tag: DW_TAG_member, name: "model", scope: !2967, file: !145, line: 594, baseType: !2970, size: 112)
!2970 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "btf_func_model", file: !145, line: 509, size: 112, elements: !2971)
!2971 = !{!2972, !2973, !2974}
!2972 = !DIDerivedType(tag: DW_TAG_member, name: "ret_size", scope: !2970, file: !145, line: 510, baseType: !1397, size: 8)
!2973 = !DIDerivedType(tag: DW_TAG_member, name: "nr_args", scope: !2970, file: !145, line: 511, baseType: !1397, size: 8, offset: 8)
!2974 = !DIDerivedType(tag: DW_TAG_member, name: "arg_size", scope: !2970, file: !145, line: 512, baseType: !2975, size: 96, offset: 16)
!2975 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1397, size: 96, elements: !2833)
!2976 = !DIDerivedType(tag: DW_TAG_member, name: "addr", scope: !2967, file: !145, line: 595, baseType: !570, size: 64, offset: 128)
!2977 = !DIDerivedType(tag: DW_TAG_member, name: "ftrace_managed", scope: !2967, file: !145, line: 596, baseType: !540, size: 8, offset: 192)
!2978 = !DIDerivedType(tag: DW_TAG_member, name: "extension_prog", scope: !2960, file: !145, line: 602, baseType: !2909, size: 64, offset: 704)
!2979 = !DIDerivedType(tag: DW_TAG_member, name: "progs_hlist", scope: !2960, file: !145, line: 604, baseType: !2980, size: 192, offset: 768)
!2980 = !DICompositeType(tag: DW_TAG_array_type, baseType: !857, size: 192, elements: !867)
!2981 = !DIDerivedType(tag: DW_TAG_member, name: "progs_cnt", scope: !2960, file: !145, line: 606, baseType: !2386, size: 96, offset: 960)
!2982 = !DIDerivedType(tag: DW_TAG_member, name: "image", scope: !2960, file: !145, line: 608, baseType: !570, size: 64, offset: 1088)
!2983 = !DIDerivedType(tag: DW_TAG_member, name: "selector", scope: !2960, file: !145, line: 609, baseType: !336, size: 64, offset: 1152)
!2984 = !DIDerivedType(tag: DW_TAG_member, name: "ksym", scope: !2960, file: !145, line: 610, baseType: !2985, size: 1728, offset: 1216)
!2985 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_ksym", file: !145, line: 569, size: 1728, elements: !2986)
!2986 = !{!2987, !2988, !2989, !2993, !2994, !3000}
!2987 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !2985, file: !145, line: 570, baseType: !317, size: 64)
!2988 = !DIDerivedType(tag: DW_TAG_member, name: "end", scope: !2985, file: !145, line: 571, baseType: !317, size: 64, offset: 64)
!2989 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2985, file: !145, line: 572, baseType: !2990, size: 1024, offset: 128)
!2990 = !DICompositeType(tag: DW_TAG_array_type, baseType: !273, size: 1024, elements: !2991)
!2991 = !{!2992}
!2992 = !DISubrange(count: 128)
!2993 = !DIDerivedType(tag: DW_TAG_member, name: "lnode", scope: !2985, file: !145, line: 573, baseType: !289, size: 128, offset: 1152)
!2994 = !DIDerivedType(tag: DW_TAG_member, name: "tnode", scope: !2985, file: !145, line: 574, baseType: !2995, size: 384, offset: 1280)
!2995 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "latch_tree_node", file: !2996, line: 40, size: 384, elements: !2997)
!2996 = !DIFile(filename: "./include/linux/rbtree_latch.h", directory: "/home/lizy2001/genbc/linux")
!2997 = !{!2998}
!2998 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2995, file: !2996, line: 41, baseType: !2999, size: 384)
!2999 = !DICompositeType(tag: DW_TAG_array_type, baseType: !438, size: 384, elements: !478)
!3000 = !DIDerivedType(tag: DW_TAG_member, name: "prog", scope: !2985, file: !145, line: 575, baseType: !540, size: 8, offset: 1664)
!3001 = !DIDerivedType(tag: DW_TAG_member, name: "saved_dst_prog_type", scope: !2933, file: !145, line: 775, baseType: !69, size: 32, offset: 832)
!3002 = !DIDerivedType(tag: DW_TAG_member, name: "saved_dst_attach_type", scope: !2933, file: !145, line: 776, baseType: !103, size: 32, offset: 864)
!3003 = !DIDerivedType(tag: DW_TAG_member, name: "verifier_zext", scope: !2933, file: !145, line: 777, baseType: !540, size: 8, offset: 896)
!3004 = !DIDerivedType(tag: DW_TAG_member, name: "offload_requested", scope: !2933, file: !145, line: 778, baseType: !540, size: 8, offset: 904)
!3005 = !DIDerivedType(tag: DW_TAG_member, name: "attach_btf_trace", scope: !2933, file: !145, line: 779, baseType: !540, size: 8, offset: 912)
!3006 = !DIDerivedType(tag: DW_TAG_member, name: "func_proto_unreliable", scope: !2933, file: !145, line: 780, baseType: !540, size: 8, offset: 920)
!3007 = !DIDerivedType(tag: DW_TAG_member, name: "sleepable", scope: !2933, file: !145, line: 781, baseType: !540, size: 8, offset: 928)
!3008 = !DIDerivedType(tag: DW_TAG_member, name: "tail_call_reachable", scope: !2933, file: !145, line: 782, baseType: !540, size: 8, offset: 936)
!3009 = !DIDerivedType(tag: DW_TAG_member, name: "trampoline_prog_type", scope: !2933, file: !145, line: 783, baseType: !175, size: 32, offset: 960)
!3010 = !DIDerivedType(tag: DW_TAG_member, name: "tramp_hlist", scope: !2933, file: !145, line: 784, baseType: !281, size: 128, offset: 1024)
!3011 = !DIDerivedType(tag: DW_TAG_member, name: "attach_func_proto", scope: !2933, file: !145, line: 786, baseType: !3012, size: 64, offset: 1152)
!3012 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3013, size: 64)
!3013 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3014)
!3014 = !DICompositeType(tag: DW_TAG_structure_type, name: "btf_type", file: !145, line: 33, flags: DIFlagFwdDecl)
!3015 = !DIDerivedType(tag: DW_TAG_member, name: "attach_func_name", scope: !2933, file: !145, line: 788, baseType: !297, size: 64, offset: 1216)
!3016 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !2933, file: !145, line: 789, baseType: !3017, size: 64, offset: 1280)
!3017 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2909, size: 64)
!3018 = !DIDerivedType(tag: DW_TAG_member, name: "jit_data", scope: !2933, file: !145, line: 790, baseType: !570, size: 64, offset: 1344)
!3019 = !DIDerivedType(tag: DW_TAG_member, name: "poke_tab", scope: !2933, file: !145, line: 791, baseType: !3020, size: 64, offset: 1408)
!3020 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3021, size: 64)
!3021 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_jit_poke_descriptor", file: !145, line: 734, size: 384, elements: !3022)
!3022 = !{!3023, !3024, !3025, !3026, !3419, !3420, !3421, !3422}
!3023 = !DIDerivedType(tag: DW_TAG_member, name: "tailcall_target", scope: !3021, file: !145, line: 735, baseType: !570, size: 64)
!3024 = !DIDerivedType(tag: DW_TAG_member, name: "tailcall_bypass", scope: !3021, file: !145, line: 736, baseType: !570, size: 64, offset: 64)
!3025 = !DIDerivedType(tag: DW_TAG_member, name: "bypass_addr", scope: !3021, file: !145, line: 737, baseType: !570, size: 64, offset: 128)
!3026 = !DIDerivedType(tag: DW_TAG_member, scope: !3021, file: !145, line: 738, baseType: !3027, size: 128, offset: 192)
!3027 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3021, file: !145, line: 738, size: 128, elements: !3028)
!3028 = !{!3029}
!3029 = !DIDerivedType(tag: DW_TAG_member, name: "tail_call", scope: !3027, file: !145, line: 742, baseType: !3030, size: 128)
!3030 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3027, file: !145, line: 739, size: 128, elements: !3031)
!3031 = !{!3032, !3418}
!3032 = !DIDerivedType(tag: DW_TAG_member, name: "map", scope: !3030, file: !145, line: 740, baseType: !3033, size: 64)
!3033 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3034, size: 64)
!3034 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_map", file: !145, line: 141, size: 2048, elements: !3035)
!3035 = !{!3036, !3391, !3392, !3393, !3394, !3395, !3396, !3397, !3398, !3399, !3400, !3401, !3402, !3404, !3409, !3410, !3411, !3412, !3413, !3414, !3415, !3416, !3417}
!3036 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !3034, file: !145, line: 145, baseType: !3037, size: 64, align: 512)
!3037 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3038, size: 64)
!3038 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3039)
!3039 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_map_ops", file: !145, line: 54, size: 2368, elements: !3040)
!3040 = !{!3041, !3240, !3244, !3248, !3252, !3256, !3257, !3261, !3267, !3268, !3269, !3270, !3271, !3275, !3279, !3283, !3284, !3285, !3289, !3293, !3305, !3309, !3313, !3322, !3326, !3330, !3334, !3339, !3343, !3347, !3351, !3357, !3361, !3368, !3372, !3374, !3375}
!3041 = !DIDerivedType(tag: DW_TAG_member, name: "map_alloc_check", scope: !3039, file: !145, line: 56, baseType: !3042, size: 64)
!3042 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3043, size: 64)
!3043 = !DISubroutineType(types: !3044)
!3044 = !{!37, !3045}
!3045 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3046, size: 64)
!3046 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "bpf_attr", file: !70, line: 483, size: 960, align: 64, elements: !3047)
!3047 = !{!3048, !3064, !3075, !3086, !3110, !3116, !3124, !3141, !3154, !3160, !3169, !3174, !3182, !3194, !3214, !3221, !3225, !3229, !3234}
!3048 = !DIDerivedType(tag: DW_TAG_member, scope: !3046, file: !70, line: 484, baseType: !3049, size: 512)
!3049 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3046, file: !70, line: 484, size: 512, elements: !3050)
!3050 = !{!3051, !3052, !3053, !3054, !3055, !3056, !3057, !3058, !3059, !3060, !3061, !3062, !3063}
!3051 = !DIDerivedType(tag: DW_TAG_member, name: "map_type", scope: !3049, file: !70, line: 485, baseType: !468, size: 32)
!3052 = !DIDerivedType(tag: DW_TAG_member, name: "key_size", scope: !3049, file: !70, line: 486, baseType: !468, size: 32, offset: 32)
!3053 = !DIDerivedType(tag: DW_TAG_member, name: "value_size", scope: !3049, file: !70, line: 487, baseType: !468, size: 32, offset: 64)
!3054 = !DIDerivedType(tag: DW_TAG_member, name: "max_entries", scope: !3049, file: !70, line: 488, baseType: !468, size: 32, offset: 96)
!3055 = !DIDerivedType(tag: DW_TAG_member, name: "map_flags", scope: !3049, file: !70, line: 489, baseType: !468, size: 32, offset: 128)
!3056 = !DIDerivedType(tag: DW_TAG_member, name: "inner_map_fd", scope: !3049, file: !70, line: 492, baseType: !468, size: 32, offset: 160)
!3057 = !DIDerivedType(tag: DW_TAG_member, name: "numa_node", scope: !3049, file: !70, line: 493, baseType: !468, size: 32, offset: 192)
!3058 = !DIDerivedType(tag: DW_TAG_member, name: "map_name", scope: !3049, file: !70, line: 496, baseType: !272, size: 128, offset: 224)
!3059 = !DIDerivedType(tag: DW_TAG_member, name: "map_ifindex", scope: !3049, file: !70, line: 497, baseType: !468, size: 32, offset: 352)
!3060 = !DIDerivedType(tag: DW_TAG_member, name: "btf_fd", scope: !3049, file: !70, line: 498, baseType: !468, size: 32, offset: 384)
!3061 = !DIDerivedType(tag: DW_TAG_member, name: "btf_key_type_id", scope: !3049, file: !70, line: 499, baseType: !468, size: 32, offset: 416)
!3062 = !DIDerivedType(tag: DW_TAG_member, name: "btf_value_type_id", scope: !3049, file: !70, line: 500, baseType: !468, size: 32, offset: 448)
!3063 = !DIDerivedType(tag: DW_TAG_member, name: "btf_vmlinux_value_type_id", scope: !3049, file: !70, line: 501, baseType: !468, size: 32, offset: 480)
!3064 = !DIDerivedType(tag: DW_TAG_member, scope: !3046, file: !70, line: 507, baseType: !3065, size: 256)
!3065 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3046, file: !70, line: 507, size: 256, elements: !3066)
!3066 = !{!3067, !3068, !3069, !3074}
!3067 = !DIDerivedType(tag: DW_TAG_member, name: "map_fd", scope: !3065, file: !70, line: 508, baseType: !468, size: 32)
!3068 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !3065, file: !70, line: 509, baseType: !338, size: 64, align: 64, offset: 64)
!3069 = !DIDerivedType(tag: DW_TAG_member, scope: !3065, file: !70, line: 510, baseType: !3070, size: 64, offset: 128)
!3070 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3065, file: !70, line: 510, size: 64, elements: !3071)
!3071 = !{!3072, !3073}
!3072 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !3070, file: !70, line: 511, baseType: !338, size: 64, align: 64)
!3073 = !DIDerivedType(tag: DW_TAG_member, name: "next_key", scope: !3070, file: !70, line: 512, baseType: !338, size: 64, align: 64)
!3074 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3065, file: !70, line: 514, baseType: !338, size: 64, offset: 192)
!3075 = !DIDerivedType(tag: DW_TAG_member, name: "batch", scope: !3046, file: !70, line: 532, baseType: !3076, size: 448)
!3076 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3046, file: !70, line: 517, size: 448, elements: !3077)
!3077 = !{!3078, !3079, !3080, !3081, !3082, !3083, !3084, !3085}
!3078 = !DIDerivedType(tag: DW_TAG_member, name: "in_batch", scope: !3076, file: !70, line: 518, baseType: !338, size: 64, align: 64)
!3079 = !DIDerivedType(tag: DW_TAG_member, name: "out_batch", scope: !3076, file: !70, line: 521, baseType: !338, size: 64, align: 64, offset: 64)
!3080 = !DIDerivedType(tag: DW_TAG_member, name: "keys", scope: !3076, file: !70, line: 522, baseType: !338, size: 64, align: 64, offset: 128)
!3081 = !DIDerivedType(tag: DW_TAG_member, name: "values", scope: !3076, file: !70, line: 523, baseType: !338, size: 64, align: 64, offset: 192)
!3082 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !3076, file: !70, line: 524, baseType: !468, size: 32, offset: 256)
!3083 = !DIDerivedType(tag: DW_TAG_member, name: "map_fd", scope: !3076, file: !70, line: 529, baseType: !468, size: 32, offset: 288)
!3084 = !DIDerivedType(tag: DW_TAG_member, name: "elem_flags", scope: !3076, file: !70, line: 530, baseType: !338, size: 64, offset: 320)
!3085 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3076, file: !70, line: 531, baseType: !338, size: 64, offset: 384)
!3086 = !DIDerivedType(tag: DW_TAG_member, scope: !3046, file: !70, line: 534, baseType: !3087, size: 960)
!3087 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3046, file: !70, line: 534, size: 960, elements: !3088)
!3088 = !{!3089, !3090, !3091, !3092, !3093, !3094, !3095, !3096, !3097, !3098, !3099, !3100, !3101, !3102, !3103, !3104, !3105, !3106, !3107, !3108, !3109}
!3089 = !DIDerivedType(tag: DW_TAG_member, name: "prog_type", scope: !3087, file: !70, line: 535, baseType: !468, size: 32)
!3090 = !DIDerivedType(tag: DW_TAG_member, name: "insn_cnt", scope: !3087, file: !70, line: 536, baseType: !468, size: 32, offset: 32)
!3091 = !DIDerivedType(tag: DW_TAG_member, name: "insns", scope: !3087, file: !70, line: 537, baseType: !338, size: 64, align: 64, offset: 64)
!3092 = !DIDerivedType(tag: DW_TAG_member, name: "license", scope: !3087, file: !70, line: 538, baseType: !338, size: 64, align: 64, offset: 128)
!3093 = !DIDerivedType(tag: DW_TAG_member, name: "log_level", scope: !3087, file: !70, line: 539, baseType: !468, size: 32, offset: 192)
!3094 = !DIDerivedType(tag: DW_TAG_member, name: "log_size", scope: !3087, file: !70, line: 540, baseType: !468, size: 32, offset: 224)
!3095 = !DIDerivedType(tag: DW_TAG_member, name: "log_buf", scope: !3087, file: !70, line: 541, baseType: !338, size: 64, align: 64, offset: 256)
!3096 = !DIDerivedType(tag: DW_TAG_member, name: "kern_version", scope: !3087, file: !70, line: 542, baseType: !468, size: 32, offset: 320)
!3097 = !DIDerivedType(tag: DW_TAG_member, name: "prog_flags", scope: !3087, file: !70, line: 543, baseType: !468, size: 32, offset: 352)
!3098 = !DIDerivedType(tag: DW_TAG_member, name: "prog_name", scope: !3087, file: !70, line: 544, baseType: !272, size: 128, offset: 384)
!3099 = !DIDerivedType(tag: DW_TAG_member, name: "prog_ifindex", scope: !3087, file: !70, line: 545, baseType: !468, size: 32, offset: 512)
!3100 = !DIDerivedType(tag: DW_TAG_member, name: "expected_attach_type", scope: !3087, file: !70, line: 550, baseType: !468, size: 32, offset: 544)
!3101 = !DIDerivedType(tag: DW_TAG_member, name: "prog_btf_fd", scope: !3087, file: !70, line: 551, baseType: !468, size: 32, offset: 576)
!3102 = !DIDerivedType(tag: DW_TAG_member, name: "func_info_rec_size", scope: !3087, file: !70, line: 552, baseType: !468, size: 32, offset: 608)
!3103 = !DIDerivedType(tag: DW_TAG_member, name: "func_info", scope: !3087, file: !70, line: 553, baseType: !338, size: 64, align: 64, offset: 640)
!3104 = !DIDerivedType(tag: DW_TAG_member, name: "func_info_cnt", scope: !3087, file: !70, line: 554, baseType: !468, size: 32, offset: 704)
!3105 = !DIDerivedType(tag: DW_TAG_member, name: "line_info_rec_size", scope: !3087, file: !70, line: 555, baseType: !468, size: 32, offset: 736)
!3106 = !DIDerivedType(tag: DW_TAG_member, name: "line_info", scope: !3087, file: !70, line: 556, baseType: !338, size: 64, align: 64, offset: 768)
!3107 = !DIDerivedType(tag: DW_TAG_member, name: "line_info_cnt", scope: !3087, file: !70, line: 557, baseType: !468, size: 32, offset: 832)
!3108 = !DIDerivedType(tag: DW_TAG_member, name: "attach_btf_id", scope: !3087, file: !70, line: 558, baseType: !468, size: 32, offset: 864)
!3109 = !DIDerivedType(tag: DW_TAG_member, name: "attach_prog_fd", scope: !3087, file: !70, line: 559, baseType: !468, size: 32, offset: 896)
!3110 = !DIDerivedType(tag: DW_TAG_member, scope: !3046, file: !70, line: 562, baseType: !3111, size: 128)
!3111 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3046, file: !70, line: 562, size: 128, elements: !3112)
!3112 = !{!3113, !3114, !3115}
!3113 = !DIDerivedType(tag: DW_TAG_member, name: "pathname", scope: !3111, file: !70, line: 563, baseType: !338, size: 64, align: 64)
!3114 = !DIDerivedType(tag: DW_TAG_member, name: "bpf_fd", scope: !3111, file: !70, line: 564, baseType: !468, size: 32, offset: 64)
!3115 = !DIDerivedType(tag: DW_TAG_member, name: "file_flags", scope: !3111, file: !70, line: 565, baseType: !468, size: 32, offset: 96)
!3116 = !DIDerivedType(tag: DW_TAG_member, scope: !3046, file: !70, line: 568, baseType: !3117, size: 160)
!3117 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3046, file: !70, line: 568, size: 160, elements: !3118)
!3118 = !{!3119, !3120, !3121, !3122, !3123}
!3119 = !DIDerivedType(tag: DW_TAG_member, name: "target_fd", scope: !3117, file: !70, line: 569, baseType: !468, size: 32)
!3120 = !DIDerivedType(tag: DW_TAG_member, name: "attach_bpf_fd", scope: !3117, file: !70, line: 570, baseType: !468, size: 32, offset: 32)
!3121 = !DIDerivedType(tag: DW_TAG_member, name: "attach_type", scope: !3117, file: !70, line: 571, baseType: !468, size: 32, offset: 64)
!3122 = !DIDerivedType(tag: DW_TAG_member, name: "attach_flags", scope: !3117, file: !70, line: 572, baseType: !468, size: 32, offset: 96)
!3123 = !DIDerivedType(tag: DW_TAG_member, name: "replace_bpf_fd", scope: !3117, file: !70, line: 573, baseType: !468, size: 32, offset: 128)
!3124 = !DIDerivedType(tag: DW_TAG_member, name: "test", scope: !3046, file: !70, line: 600, baseType: !3125, size: 576)
!3125 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3046, file: !70, line: 579, size: 576, elements: !3126)
!3126 = !{!3127, !3128, !3129, !3130, !3131, !3132, !3133, !3134, !3135, !3136, !3137, !3138, !3139, !3140}
!3127 = !DIDerivedType(tag: DW_TAG_member, name: "prog_fd", scope: !3125, file: !70, line: 580, baseType: !468, size: 32)
!3128 = !DIDerivedType(tag: DW_TAG_member, name: "retval", scope: !3125, file: !70, line: 581, baseType: !468, size: 32, offset: 32)
!3129 = !DIDerivedType(tag: DW_TAG_member, name: "data_size_in", scope: !3125, file: !70, line: 582, baseType: !468, size: 32, offset: 64)
!3130 = !DIDerivedType(tag: DW_TAG_member, name: "data_size_out", scope: !3125, file: !70, line: 583, baseType: !468, size: 32, offset: 96)
!3131 = !DIDerivedType(tag: DW_TAG_member, name: "data_in", scope: !3125, file: !70, line: 587, baseType: !338, size: 64, align: 64, offset: 128)
!3132 = !DIDerivedType(tag: DW_TAG_member, name: "data_out", scope: !3125, file: !70, line: 588, baseType: !338, size: 64, align: 64, offset: 192)
!3133 = !DIDerivedType(tag: DW_TAG_member, name: "repeat", scope: !3125, file: !70, line: 589, baseType: !468, size: 32, offset: 256)
!3134 = !DIDerivedType(tag: DW_TAG_member, name: "duration", scope: !3125, file: !70, line: 590, baseType: !468, size: 32, offset: 288)
!3135 = !DIDerivedType(tag: DW_TAG_member, name: "ctx_size_in", scope: !3125, file: !70, line: 591, baseType: !468, size: 32, offset: 320)
!3136 = !DIDerivedType(tag: DW_TAG_member, name: "ctx_size_out", scope: !3125, file: !70, line: 592, baseType: !468, size: 32, offset: 352)
!3137 = !DIDerivedType(tag: DW_TAG_member, name: "ctx_in", scope: !3125, file: !70, line: 596, baseType: !338, size: 64, align: 64, offset: 384)
!3138 = !DIDerivedType(tag: DW_TAG_member, name: "ctx_out", scope: !3125, file: !70, line: 597, baseType: !338, size: 64, align: 64, offset: 448)
!3139 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3125, file: !70, line: 598, baseType: !468, size: 32, offset: 512)
!3140 = !DIDerivedType(tag: DW_TAG_member, name: "cpu", scope: !3125, file: !70, line: 599, baseType: !468, size: 32, offset: 544)
!3141 = !DIDerivedType(tag: DW_TAG_member, scope: !3046, file: !70, line: 602, baseType: !3142, size: 96)
!3142 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3046, file: !70, line: 602, size: 96, elements: !3143)
!3143 = !{!3144, !3152, !3153}
!3144 = !DIDerivedType(tag: DW_TAG_member, scope: !3142, file: !70, line: 603, baseType: !3145, size: 32)
!3145 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3142, file: !70, line: 603, size: 32, elements: !3146)
!3146 = !{!3147, !3148, !3149, !3150, !3151}
!3147 = !DIDerivedType(tag: DW_TAG_member, name: "start_id", scope: !3145, file: !70, line: 604, baseType: !468, size: 32)
!3148 = !DIDerivedType(tag: DW_TAG_member, name: "prog_id", scope: !3145, file: !70, line: 605, baseType: !468, size: 32)
!3149 = !DIDerivedType(tag: DW_TAG_member, name: "map_id", scope: !3145, file: !70, line: 606, baseType: !468, size: 32)
!3150 = !DIDerivedType(tag: DW_TAG_member, name: "btf_id", scope: !3145, file: !70, line: 607, baseType: !468, size: 32)
!3151 = !DIDerivedType(tag: DW_TAG_member, name: "link_id", scope: !3145, file: !70, line: 608, baseType: !468, size: 32)
!3152 = !DIDerivedType(tag: DW_TAG_member, name: "next_id", scope: !3142, file: !70, line: 610, baseType: !468, size: 32, offset: 32)
!3153 = !DIDerivedType(tag: DW_TAG_member, name: "open_flags", scope: !3142, file: !70, line: 611, baseType: !468, size: 32, offset: 64)
!3154 = !DIDerivedType(tag: DW_TAG_member, name: "info", scope: !3046, file: !70, line: 618, baseType: !3155, size: 128)
!3155 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3046, file: !70, line: 614, size: 128, elements: !3156)
!3156 = !{!3157, !3158, !3159}
!3157 = !DIDerivedType(tag: DW_TAG_member, name: "bpf_fd", scope: !3155, file: !70, line: 615, baseType: !468, size: 32)
!3158 = !DIDerivedType(tag: DW_TAG_member, name: "info_len", scope: !3155, file: !70, line: 616, baseType: !468, size: 32, offset: 32)
!3159 = !DIDerivedType(tag: DW_TAG_member, name: "info", scope: !3155, file: !70, line: 617, baseType: !338, size: 64, align: 64, offset: 64)
!3160 = !DIDerivedType(tag: DW_TAG_member, name: "query", scope: !3046, file: !70, line: 627, baseType: !3161, size: 256)
!3161 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3046, file: !70, line: 620, size: 256, elements: !3162)
!3162 = !{!3163, !3164, !3165, !3166, !3167, !3168}
!3163 = !DIDerivedType(tag: DW_TAG_member, name: "target_fd", scope: !3161, file: !70, line: 621, baseType: !468, size: 32)
!3164 = !DIDerivedType(tag: DW_TAG_member, name: "attach_type", scope: !3161, file: !70, line: 622, baseType: !468, size: 32, offset: 32)
!3165 = !DIDerivedType(tag: DW_TAG_member, name: "query_flags", scope: !3161, file: !70, line: 623, baseType: !468, size: 32, offset: 64)
!3166 = !DIDerivedType(tag: DW_TAG_member, name: "attach_flags", scope: !3161, file: !70, line: 624, baseType: !468, size: 32, offset: 96)
!3167 = !DIDerivedType(tag: DW_TAG_member, name: "prog_ids", scope: !3161, file: !70, line: 625, baseType: !338, size: 64, align: 64, offset: 128)
!3168 = !DIDerivedType(tag: DW_TAG_member, name: "prog_cnt", scope: !3161, file: !70, line: 626, baseType: !468, size: 32, offset: 192)
!3169 = !DIDerivedType(tag: DW_TAG_member, name: "raw_tracepoint", scope: !3046, file: !70, line: 632, baseType: !3170, size: 128)
!3170 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3046, file: !70, line: 629, size: 128, elements: !3171)
!3171 = !{!3172, !3173}
!3172 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3170, file: !70, line: 630, baseType: !338, size: 64)
!3173 = !DIDerivedType(tag: DW_TAG_member, name: "prog_fd", scope: !3170, file: !70, line: 631, baseType: !468, size: 32, offset: 64)
!3174 = !DIDerivedType(tag: DW_TAG_member, scope: !3046, file: !70, line: 634, baseType: !3175, size: 256)
!3175 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3046, file: !70, line: 634, size: 256, elements: !3176)
!3176 = !{!3177, !3178, !3179, !3180, !3181}
!3177 = !DIDerivedType(tag: DW_TAG_member, name: "btf", scope: !3175, file: !70, line: 635, baseType: !338, size: 64, align: 64)
!3178 = !DIDerivedType(tag: DW_TAG_member, name: "btf_log_buf", scope: !3175, file: !70, line: 636, baseType: !338, size: 64, align: 64, offset: 64)
!3179 = !DIDerivedType(tag: DW_TAG_member, name: "btf_size", scope: !3175, file: !70, line: 637, baseType: !468, size: 32, offset: 128)
!3180 = !DIDerivedType(tag: DW_TAG_member, name: "btf_log_size", scope: !3175, file: !70, line: 638, baseType: !468, size: 32, offset: 160)
!3181 = !DIDerivedType(tag: DW_TAG_member, name: "btf_log_level", scope: !3175, file: !70, line: 639, baseType: !468, size: 32, offset: 192)
!3182 = !DIDerivedType(tag: DW_TAG_member, name: "task_fd_query", scope: !3046, file: !70, line: 656, baseType: !3183, size: 384)
!3183 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3046, file: !70, line: 642, size: 384, elements: !3184)
!3184 = !{!3185, !3186, !3187, !3188, !3189, !3190, !3191, !3192, !3193}
!3185 = !DIDerivedType(tag: DW_TAG_member, name: "pid", scope: !3183, file: !70, line: 643, baseType: !468, size: 32)
!3186 = !DIDerivedType(tag: DW_TAG_member, name: "fd", scope: !3183, file: !70, line: 644, baseType: !468, size: 32, offset: 32)
!3187 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3183, file: !70, line: 645, baseType: !468, size: 32, offset: 64)
!3188 = !DIDerivedType(tag: DW_TAG_member, name: "buf_len", scope: !3183, file: !70, line: 646, baseType: !468, size: 32, offset: 96)
!3189 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !3183, file: !70, line: 647, baseType: !338, size: 64, align: 64, offset: 128)
!3190 = !DIDerivedType(tag: DW_TAG_member, name: "prog_id", scope: !3183, file: !70, line: 652, baseType: !468, size: 32, offset: 192)
!3191 = !DIDerivedType(tag: DW_TAG_member, name: "fd_type", scope: !3183, file: !70, line: 653, baseType: !468, size: 32, offset: 224)
!3192 = !DIDerivedType(tag: DW_TAG_member, name: "probe_offset", scope: !3183, file: !70, line: 654, baseType: !338, size: 64, offset: 256)
!3193 = !DIDerivedType(tag: DW_TAG_member, name: "probe_addr", scope: !3183, file: !70, line: 655, baseType: !338, size: 64, offset: 320)
!3194 = !DIDerivedType(tag: DW_TAG_member, name: "link_create", scope: !3046, file: !70, line: 673, baseType: !3195, size: 256)
!3195 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3046, file: !70, line: 658, size: 256, elements: !3196)
!3196 = !{!3197, !3198, !3203, !3204, !3205}
!3197 = !DIDerivedType(tag: DW_TAG_member, name: "prog_fd", scope: !3195, file: !70, line: 659, baseType: !468, size: 32)
!3198 = !DIDerivedType(tag: DW_TAG_member, scope: !3195, file: !70, line: 660, baseType: !3199, size: 32, offset: 32)
!3199 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3195, file: !70, line: 660, size: 32, elements: !3200)
!3200 = !{!3201, !3202}
!3201 = !DIDerivedType(tag: DW_TAG_member, name: "target_fd", scope: !3199, file: !70, line: 661, baseType: !468, size: 32)
!3202 = !DIDerivedType(tag: DW_TAG_member, name: "target_ifindex", scope: !3199, file: !70, line: 662, baseType: !468, size: 32)
!3203 = !DIDerivedType(tag: DW_TAG_member, name: "attach_type", scope: !3195, file: !70, line: 664, baseType: !468, size: 32, offset: 64)
!3204 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3195, file: !70, line: 665, baseType: !468, size: 32, offset: 96)
!3205 = !DIDerivedType(tag: DW_TAG_member, scope: !3195, file: !70, line: 666, baseType: !3206, size: 128, offset: 128)
!3206 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3195, file: !70, line: 666, size: 128, elements: !3207)
!3207 = !{!3208, !3209}
!3208 = !DIDerivedType(tag: DW_TAG_member, name: "target_btf_id", scope: !3206, file: !70, line: 667, baseType: !468, size: 32)
!3209 = !DIDerivedType(tag: DW_TAG_member, scope: !3206, file: !70, line: 668, baseType: !3210, size: 128)
!3210 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3206, file: !70, line: 668, size: 128, elements: !3211)
!3211 = !{!3212, !3213}
!3212 = !DIDerivedType(tag: DW_TAG_member, name: "iter_info", scope: !3210, file: !70, line: 669, baseType: !338, size: 64, align: 64)
!3213 = !DIDerivedType(tag: DW_TAG_member, name: "iter_info_len", scope: !3210, file: !70, line: 670, baseType: !468, size: 32, offset: 64)
!3214 = !DIDerivedType(tag: DW_TAG_member, name: "link_update", scope: !3046, file: !70, line: 683, baseType: !3215, size: 128)
!3215 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3046, file: !70, line: 675, size: 128, elements: !3216)
!3216 = !{!3217, !3218, !3219, !3220}
!3217 = !DIDerivedType(tag: DW_TAG_member, name: "link_fd", scope: !3215, file: !70, line: 676, baseType: !468, size: 32)
!3218 = !DIDerivedType(tag: DW_TAG_member, name: "new_prog_fd", scope: !3215, file: !70, line: 678, baseType: !468, size: 32, offset: 32)
!3219 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3215, file: !70, line: 679, baseType: !468, size: 32, offset: 64)
!3220 = !DIDerivedType(tag: DW_TAG_member, name: "old_prog_fd", scope: !3215, file: !70, line: 682, baseType: !468, size: 32, offset: 96)
!3221 = !DIDerivedType(tag: DW_TAG_member, name: "link_detach", scope: !3046, file: !70, line: 687, baseType: !3222, size: 32)
!3222 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3046, file: !70, line: 685, size: 32, elements: !3223)
!3223 = !{!3224}
!3224 = !DIDerivedType(tag: DW_TAG_member, name: "link_fd", scope: !3222, file: !70, line: 686, baseType: !468, size: 32)
!3225 = !DIDerivedType(tag: DW_TAG_member, name: "enable_stats", scope: !3046, file: !70, line: 691, baseType: !3226, size: 32)
!3226 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3046, file: !70, line: 689, size: 32, elements: !3227)
!3227 = !{!3228}
!3228 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !3226, file: !70, line: 690, baseType: !468, size: 32)
!3229 = !DIDerivedType(tag: DW_TAG_member, name: "iter_create", scope: !3046, file: !70, line: 696, baseType: !3230, size: 64)
!3230 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3046, file: !70, line: 693, size: 64, elements: !3231)
!3231 = !{!3232, !3233}
!3232 = !DIDerivedType(tag: DW_TAG_member, name: "link_fd", scope: !3230, file: !70, line: 694, baseType: !468, size: 32)
!3233 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3230, file: !70, line: 695, baseType: !468, size: 32, offset: 32)
!3234 = !DIDerivedType(tag: DW_TAG_member, name: "prog_bind_map", scope: !3046, file: !70, line: 702, baseType: !3235, size: 96)
!3235 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3046, file: !70, line: 698, size: 96, elements: !3236)
!3236 = !{!3237, !3238, !3239}
!3237 = !DIDerivedType(tag: DW_TAG_member, name: "prog_fd", scope: !3235, file: !70, line: 699, baseType: !468, size: 32)
!3238 = !DIDerivedType(tag: DW_TAG_member, name: "map_fd", scope: !3235, file: !70, line: 700, baseType: !468, size: 32, offset: 32)
!3239 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3235, file: !70, line: 701, baseType: !468, size: 32, offset: 64)
!3240 = !DIDerivedType(tag: DW_TAG_member, name: "map_alloc", scope: !3039, file: !145, line: 57, baseType: !3241, size: 64, offset: 64)
!3241 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3242, size: 64)
!3242 = !DISubroutineType(types: !3243)
!3243 = !{!3033, !3045}
!3244 = !DIDerivedType(tag: DW_TAG_member, name: "map_release", scope: !3039, file: !145, line: 58, baseType: !3245, size: 64, offset: 128)
!3245 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3246, size: 64)
!3246 = !DISubroutineType(types: !3247)
!3247 = !{null, !3033, !1010}
!3248 = !DIDerivedType(tag: DW_TAG_member, name: "map_free", scope: !3039, file: !145, line: 59, baseType: !3249, size: 64, offset: 192)
!3249 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3250, size: 64)
!3250 = !DISubroutineType(types: !3251)
!3251 = !{null, !3033}
!3252 = !DIDerivedType(tag: DW_TAG_member, name: "map_get_next_key", scope: !3039, file: !145, line: 60, baseType: !3253, size: 64, offset: 256)
!3253 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3254, size: 64)
!3254 = !DISubroutineType(types: !3255)
!3255 = !{!37, !3033, !570, !570}
!3256 = !DIDerivedType(tag: DW_TAG_member, name: "map_release_uref", scope: !3039, file: !145, line: 61, baseType: !3249, size: 64, offset: 320)
!3257 = !DIDerivedType(tag: DW_TAG_member, name: "map_lookup_elem_sys_only", scope: !3039, file: !145, line: 62, baseType: !3258, size: 64, offset: 384)
!3258 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3259, size: 64)
!3259 = !DISubroutineType(types: !3260)
!3260 = !{!570, !3033, !570}
!3261 = !DIDerivedType(tag: DW_TAG_member, name: "map_lookup_batch", scope: !3039, file: !145, line: 63, baseType: !3262, size: 64, offset: 448)
!3262 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3263, size: 64)
!3263 = !DISubroutineType(types: !3264)
!3264 = !{!37, !3033, !3265, !3045}
!3265 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3266, size: 64)
!3266 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3046)
!3267 = !DIDerivedType(tag: DW_TAG_member, name: "map_lookup_and_delete_batch", scope: !3039, file: !145, line: 65, baseType: !3262, size: 64, offset: 512)
!3268 = !DIDerivedType(tag: DW_TAG_member, name: "map_update_batch", scope: !3039, file: !145, line: 68, baseType: !3262, size: 64, offset: 576)
!3269 = !DIDerivedType(tag: DW_TAG_member, name: "map_delete_batch", scope: !3039, file: !145, line: 70, baseType: !3262, size: 64, offset: 640)
!3270 = !DIDerivedType(tag: DW_TAG_member, name: "map_lookup_elem", scope: !3039, file: !145, line: 74, baseType: !3258, size: 64, offset: 704)
!3271 = !DIDerivedType(tag: DW_TAG_member, name: "map_update_elem", scope: !3039, file: !145, line: 75, baseType: !3272, size: 64, offset: 768)
!3272 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3273, size: 64)
!3273 = !DISubroutineType(types: !3274)
!3274 = !{!37, !3033, !570, !570, !336}
!3275 = !DIDerivedType(tag: DW_TAG_member, name: "map_delete_elem", scope: !3039, file: !145, line: 76, baseType: !3276, size: 64, offset: 832)
!3276 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3277, size: 64)
!3277 = !DISubroutineType(types: !3278)
!3278 = !{!37, !3033, !570}
!3279 = !DIDerivedType(tag: DW_TAG_member, name: "map_push_elem", scope: !3039, file: !145, line: 77, baseType: !3280, size: 64, offset: 896)
!3280 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3281, size: 64)
!3281 = !DISubroutineType(types: !3282)
!3282 = !{!37, !3033, !570, !336}
!3283 = !DIDerivedType(tag: DW_TAG_member, name: "map_pop_elem", scope: !3039, file: !145, line: 78, baseType: !3276, size: 64, offset: 960)
!3284 = !DIDerivedType(tag: DW_TAG_member, name: "map_peek_elem", scope: !3039, file: !145, line: 79, baseType: !3276, size: 64, offset: 1024)
!3285 = !DIDerivedType(tag: DW_TAG_member, name: "map_fd_get_ptr", scope: !3039, file: !145, line: 82, baseType: !3286, size: 64, offset: 1088)
!3286 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3287, size: 64)
!3287 = !DISubroutineType(types: !3288)
!3288 = !{!570, !3033, !1010, !37}
!3289 = !DIDerivedType(tag: DW_TAG_member, name: "map_fd_put_ptr", scope: !3039, file: !145, line: 84, baseType: !3290, size: 64, offset: 1152)
!3290 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3291, size: 64)
!3291 = !DISubroutineType(types: !3292)
!3292 = !{null, !570}
!3293 = !DIDerivedType(tag: DW_TAG_member, name: "map_gen_lookup", scope: !3039, file: !145, line: 85, baseType: !3294, size: 64, offset: 1216)
!3294 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3295, size: 64)
!3295 = !DISubroutineType(types: !3296)
!3296 = !{!37, !3033, !3297}
!3297 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3298, size: 64)
!3298 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_insn", file: !70, line: 65, size: 64, elements: !3299)
!3299 = !{!3300, !3301, !3302, !3303, !3304}
!3300 = !DIDerivedType(tag: DW_TAG_member, name: "code", scope: !3298, file: !70, line: 66, baseType: !1398, size: 8)
!3301 = !DIDerivedType(tag: DW_TAG_member, name: "dst_reg", scope: !3298, file: !70, line: 67, baseType: !1398, size: 4, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!3302 = !DIDerivedType(tag: DW_TAG_member, name: "src_reg", scope: !3298, file: !70, line: 68, baseType: !1398, size: 4, offset: 12, flags: DIFlagBitField, extraData: i64 8)
!3303 = !DIDerivedType(tag: DW_TAG_member, name: "off", scope: !3298, file: !70, line: 69, baseType: !1245, size: 16, offset: 16)
!3304 = !DIDerivedType(tag: DW_TAG_member, name: "imm", scope: !3298, file: !70, line: 70, baseType: !1490, size: 32, offset: 32)
!3305 = !DIDerivedType(tag: DW_TAG_member, name: "map_fd_sys_lookup_elem", scope: !3039, file: !145, line: 86, baseType: !3306, size: 64, offset: 1280)
!3306 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3307, size: 64)
!3307 = !DISubroutineType(types: !3308)
!3308 = !{!707, !570}
!3309 = !DIDerivedType(tag: DW_TAG_member, name: "map_seq_show_elem", scope: !3039, file: !145, line: 87, baseType: !3310, size: 64, offset: 1344)
!3310 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3311, size: 64)
!3311 = !DISubroutineType(types: !3312)
!3312 = !{null, !3033, !570, !942}
!3313 = !DIDerivedType(tag: DW_TAG_member, name: "map_check_btf", scope: !3039, file: !145, line: 89, baseType: !3314, size: 64, offset: 1408)
!3314 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3315, size: 64)
!3315 = !DISubroutineType(types: !3316)
!3316 = !{!37, !3317, !3319, !3012, !3012}
!3317 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3318, size: 64)
!3318 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3034)
!3319 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3320, size: 64)
!3320 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3321)
!3321 = !DICompositeType(tag: DW_TAG_structure_type, name: "btf", file: !145, line: 32, flags: DIFlagFwdDecl)
!3322 = !DIDerivedType(tag: DW_TAG_member, name: "map_poke_track", scope: !3039, file: !145, line: 95, baseType: !3323, size: 64, offset: 1472)
!3323 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3324, size: 64)
!3324 = !DISubroutineType(types: !3325)
!3325 = !{!37, !3033, !2932}
!3326 = !DIDerivedType(tag: DW_TAG_member, name: "map_poke_untrack", scope: !3039, file: !145, line: 96, baseType: !3327, size: 64, offset: 1536)
!3327 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3328, size: 64)
!3328 = !DISubroutineType(types: !3329)
!3329 = !{null, !3033, !2932}
!3330 = !DIDerivedType(tag: DW_TAG_member, name: "map_poke_run", scope: !3039, file: !145, line: 97, baseType: !3331, size: 64, offset: 1600)
!3331 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3332, size: 64)
!3332 = !DISubroutineType(types: !3333)
!3333 = !{null, !3033, !707, !2909, !2909}
!3334 = !DIDerivedType(tag: DW_TAG_member, name: "map_direct_value_addr", scope: !3039, file: !145, line: 101, baseType: !3335, size: 64, offset: 1664)
!3335 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3336, size: 64)
!3336 = !DISubroutineType(types: !3337)
!3337 = !{!37, !3317, !3338, !707}
!3338 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !336, size: 64)
!3339 = !DIDerivedType(tag: DW_TAG_member, name: "map_direct_value_meta", scope: !3039, file: !145, line: 103, baseType: !3340, size: 64, offset: 1728)
!3340 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3341, size: 64)
!3341 = !DISubroutineType(types: !3342)
!3342 = !{!37, !3317, !336, !1460}
!3343 = !DIDerivedType(tag: DW_TAG_member, name: "map_mmap", scope: !3039, file: !145, line: 105, baseType: !3344, size: 64, offset: 1792)
!3344 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3345, size: 64)
!3345 = !DISubroutineType(types: !3346)
!3346 = !{!37, !3033, !1115}
!3347 = !DIDerivedType(tag: DW_TAG_member, name: "map_poll", scope: !3039, file: !145, line: 106, baseType: !3348, size: 64, offset: 1856)
!3348 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3349, size: 64)
!3349 = !DISubroutineType(types: !3350)
!3350 = !{!1089, !3033, !1010, !1090}
!3351 = !DIDerivedType(tag: DW_TAG_member, name: "map_local_storage_charge", scope: !3039, file: !145, line: 110, baseType: !3352, size: 64, offset: 1920)
!3352 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3353, size: 64)
!3353 = !DISubroutineType(types: !3354)
!3354 = !{!37, !3355, !570, !707}
!3355 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3356, size: 64)
!3356 = !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_local_storage_map", file: !145, line: 38, flags: DIFlagFwdDecl)
!3357 = !DIDerivedType(tag: DW_TAG_member, name: "map_local_storage_uncharge", scope: !3039, file: !145, line: 112, baseType: !3358, size: 64, offset: 1984)
!3358 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3359, size: 64)
!3359 = !DISubroutineType(types: !3360)
!3360 = !{null, !3355, !570, !707}
!3361 = !DIDerivedType(tag: DW_TAG_member, name: "map_owner_storage_ptr", scope: !3039, file: !145, line: 114, baseType: !3362, size: 64, offset: 2048)
!3362 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3363, size: 64)
!3363 = !DISubroutineType(types: !3364)
!3364 = !{!3365, !570}
!3365 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3366, size: 64)
!3366 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3367, size: 64)
!3367 = !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_local_storage", file: !145, line: 37, flags: DIFlagFwdDecl)
!3368 = !DIDerivedType(tag: DW_TAG_member, name: "map_meta_equal", scope: !3039, file: !145, line: 125, baseType: !3369, size: 64, offset: 2112)
!3369 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3370, size: 64)
!3370 = !DISubroutineType(types: !3371)
!3371 = !{!540, !3317, !3317}
!3372 = !DIDerivedType(tag: DW_TAG_member, name: "map_btf_name", scope: !3039, file: !145, line: 129, baseType: !3373, size: 64, offset: 2176)
!3373 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !297)
!3374 = !DIDerivedType(tag: DW_TAG_member, name: "map_btf_id", scope: !3039, file: !145, line: 130, baseType: !539, size: 64, offset: 2240)
!3375 = !DIDerivedType(tag: DW_TAG_member, name: "iter_seq_info", scope: !3039, file: !145, line: 133, baseType: !3376, size: 64, offset: 2304)
!3376 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3377, size: 64)
!3377 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3378)
!3378 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_iter_seq_info", file: !145, line: 46, size: 256, elements: !3379)
!3379 = !{!3380, !3381, !3388, !3390}
!3380 = !DIDerivedType(tag: DW_TAG_member, name: "seq_ops", scope: !3378, file: !145, line: 47, baseType: !961, size: 64)
!3381 = !DIDerivedType(tag: DW_TAG_member, name: "init_seq_private", scope: !3378, file: !145, line: 48, baseType: !3382, size: 64, offset: 64)
!3382 = !DIDerivedType(tag: DW_TAG_typedef, name: "bpf_iter_init_seq_priv_t", file: !145, line: 43, baseType: !3383)
!3383 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3384, size: 64)
!3384 = !DISubroutineType(types: !3385)
!3385 = !{!37, !570, !3386}
!3386 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3387, size: 64)
!3387 = !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_iter_aux_info", file: !145, line: 36, flags: DIFlagFwdDecl)
!3388 = !DIDerivedType(tag: DW_TAG_member, name: "fini_seq_private", scope: !3378, file: !145, line: 49, baseType: !3389, size: 64, offset: 128)
!3389 = !DIDerivedType(tag: DW_TAG_typedef, name: "bpf_iter_fini_seq_priv_t", file: !145, line: 45, baseType: !3290)
!3390 = !DIDerivedType(tag: DW_TAG_member, name: "seq_priv_size", scope: !3378, file: !145, line: 50, baseType: !707, size: 32, offset: 192)
!3391 = !DIDerivedType(tag: DW_TAG_member, name: "inner_map_meta", scope: !3034, file: !145, line: 146, baseType: !3033, size: 64, offset: 64)
!3392 = !DIDerivedType(tag: DW_TAG_member, name: "map_type", scope: !3034, file: !145, line: 150, baseType: !182, size: 32, offset: 128)
!3393 = !DIDerivedType(tag: DW_TAG_member, name: "key_size", scope: !3034, file: !145, line: 151, baseType: !707, size: 32, offset: 160)
!3394 = !DIDerivedType(tag: DW_TAG_member, name: "value_size", scope: !3034, file: !145, line: 152, baseType: !707, size: 32, offset: 192)
!3395 = !DIDerivedType(tag: DW_TAG_member, name: "max_entries", scope: !3034, file: !145, line: 153, baseType: !707, size: 32, offset: 224)
!3396 = !DIDerivedType(tag: DW_TAG_member, name: "map_flags", scope: !3034, file: !145, line: 154, baseType: !707, size: 32, offset: 256)
!3397 = !DIDerivedType(tag: DW_TAG_member, name: "spin_lock_off", scope: !3034, file: !145, line: 155, baseType: !37, size: 32, offset: 288)
!3398 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !3034, file: !145, line: 156, baseType: !707, size: 32, offset: 320)
!3399 = !DIDerivedType(tag: DW_TAG_member, name: "numa_node", scope: !3034, file: !145, line: 157, baseType: !37, size: 32, offset: 352)
!3400 = !DIDerivedType(tag: DW_TAG_member, name: "btf_key_type_id", scope: !3034, file: !145, line: 158, baseType: !707, size: 32, offset: 384)
!3401 = !DIDerivedType(tag: DW_TAG_member, name: "btf_value_type_id", scope: !3034, file: !145, line: 159, baseType: !707, size: 32, offset: 416)
!3402 = !DIDerivedType(tag: DW_TAG_member, name: "btf", scope: !3034, file: !145, line: 160, baseType: !3403, size: 64, offset: 448)
!3403 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3321, size: 64)
!3404 = !DIDerivedType(tag: DW_TAG_member, name: "memory", scope: !3034, file: !145, line: 161, baseType: !3405, size: 128, offset: 512)
!3405 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_map_memory", file: !145, line: 136, size: 128, elements: !3406)
!3406 = !{!3407, !3408}
!3407 = !DIDerivedType(tag: DW_TAG_member, name: "pages", scope: !3405, file: !145, line: 137, baseType: !707, size: 32)
!3408 = !DIDerivedType(tag: DW_TAG_member, name: "user", scope: !3405, file: !145, line: 138, baseType: !1733, size: 64, offset: 64)
!3409 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3034, file: !145, line: 162, baseType: !272, size: 128, offset: 640)
!3410 = !DIDerivedType(tag: DW_TAG_member, name: "btf_vmlinux_value_type_id", scope: !3034, file: !145, line: 163, baseType: !707, size: 32, offset: 768)
!3411 = !DIDerivedType(tag: DW_TAG_member, name: "bypass_spec_v1", scope: !3034, file: !145, line: 164, baseType: !540, size: 8, offset: 800)
!3412 = !DIDerivedType(tag: DW_TAG_member, name: "frozen", scope: !3034, file: !145, line: 165, baseType: !540, size: 8, offset: 808)
!3413 = !DIDerivedType(tag: DW_TAG_member, name: "refcnt", scope: !3034, file: !145, line: 171, baseType: !378, size: 64, align: 512, offset: 1024)
!3414 = !DIDerivedType(tag: DW_TAG_member, name: "usercnt", scope: !3034, file: !145, line: 172, baseType: !378, size: 64, offset: 1088)
!3415 = !DIDerivedType(tag: DW_TAG_member, name: "work", scope: !3034, file: !145, line: 173, baseType: !1807, size: 256, offset: 1152)
!3416 = !DIDerivedType(tag: DW_TAG_member, name: "freeze_mutex", scope: !3034, file: !145, line: 174, baseType: !954, size: 192, offset: 1408)
!3417 = !DIDerivedType(tag: DW_TAG_member, name: "writecnt", scope: !3034, file: !145, line: 175, baseType: !336, size: 64, offset: 1600)
!3418 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !3030, file: !145, line: 741, baseType: !707, size: 32, offset: 64)
!3419 = !DIDerivedType(tag: DW_TAG_member, name: "tailcall_target_stable", scope: !3021, file: !145, line: 744, baseType: !540, size: 8, offset: 320)
!3420 = !DIDerivedType(tag: DW_TAG_member, name: "adj_off", scope: !3021, file: !145, line: 745, baseType: !1397, size: 8, offset: 328)
!3421 = !DIDerivedType(tag: DW_TAG_member, name: "reason", scope: !3021, file: !145, line: 746, baseType: !1038, size: 16, offset: 336)
!3422 = !DIDerivedType(tag: DW_TAG_member, name: "insn_idx", scope: !3021, file: !145, line: 747, baseType: !707, size: 32, offset: 352)
!3423 = !DIDerivedType(tag: DW_TAG_member, name: "size_poke_tab", scope: !2933, file: !145, line: 792, baseType: !707, size: 32, offset: 1472)
!3424 = !DIDerivedType(tag: DW_TAG_member, name: "ksym", scope: !2933, file: !145, line: 793, baseType: !2985, size: 1728, offset: 1536)
!3425 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !2933, file: !145, line: 794, baseType: !3426, size: 64, offset: 3264)
!3426 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3427, size: 64)
!3427 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3428)
!3428 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_prog_ops", file: !145, line: 432, size: 64, elements: !3429)
!3429 = !{!3430}
!3430 = !DIDerivedType(tag: DW_TAG_member, name: "test_run", scope: !3428, file: !145, line: 433, baseType: !3431, size: 64)
!3431 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3432, size: 64)
!3432 = !DISubroutineType(types: !3433)
!3433 = !{!37, !2909, !3265, !3045}
!3434 = !DIDerivedType(tag: DW_TAG_member, name: "used_maps", scope: !2933, file: !145, line: 795, baseType: !3435, size: 64, offset: 3328)
!3435 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3033, size: 64)
!3436 = !DIDerivedType(tag: DW_TAG_member, name: "used_maps_mutex", scope: !2933, file: !145, line: 796, baseType: !954, size: 192, offset: 3392)
!3437 = !DIDerivedType(tag: DW_TAG_member, name: "prog", scope: !2933, file: !145, line: 797, baseType: !2909, size: 64, offset: 3584)
!3438 = !DIDerivedType(tag: DW_TAG_member, name: "user", scope: !2933, file: !145, line: 798, baseType: !1733, size: 64, offset: 3648)
!3439 = !DIDerivedType(tag: DW_TAG_member, name: "load_time", scope: !2933, file: !145, line: 799, baseType: !336, size: 64, offset: 3712)
!3440 = !DIDerivedType(tag: DW_TAG_member, name: "cgroup_storage", scope: !2933, file: !145, line: 800, baseType: !3441, size: 128, offset: 3776)
!3441 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3033, size: 128, elements: !478)
!3442 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2933, file: !145, line: 801, baseType: !272, size: 128, offset: 3904)
!3443 = !DIDerivedType(tag: DW_TAG_member, name: "offload", scope: !2933, file: !145, line: 805, baseType: !3444, size: 64, offset: 4032)
!3444 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3445, size: 64)
!3445 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_prog_offload", file: !145, line: 478, size: 576, elements: !3446)
!3446 = !{!3447, !3448, !3449, !3452, !3453, !3454, !3455, !3456, !3457}
!3447 = !DIDerivedType(tag: DW_TAG_member, name: "prog", scope: !3445, file: !145, line: 479, baseType: !2909, size: 64)
!3448 = !DIDerivedType(tag: DW_TAG_member, name: "netdev", scope: !3445, file: !145, line: 480, baseType: !295, size: 64, offset: 64)
!3449 = !DIDerivedType(tag: DW_TAG_member, name: "offdev", scope: !3445, file: !145, line: 481, baseType: !3450, size: 64, offset: 128)
!3450 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3451, size: 64)
!3451 = !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_offload_dev", file: !145, line: 209, flags: DIFlagFwdDecl)
!3452 = !DIDerivedType(tag: DW_TAG_member, name: "dev_priv", scope: !3445, file: !145, line: 482, baseType: !570, size: 64, offset: 192)
!3453 = !DIDerivedType(tag: DW_TAG_member, name: "offloads", scope: !3445, file: !145, line: 483, baseType: !289, size: 128, offset: 256)
!3454 = !DIDerivedType(tag: DW_TAG_member, name: "dev_state", scope: !3445, file: !145, line: 484, baseType: !540, size: 8, offset: 384)
!3455 = !DIDerivedType(tag: DW_TAG_member, name: "opt_failed", scope: !3445, file: !145, line: 485, baseType: !540, size: 8, offset: 392)
!3456 = !DIDerivedType(tag: DW_TAG_member, name: "jited_image", scope: !3445, file: !145, line: 486, baseType: !570, size: 64, offset: 448)
!3457 = !DIDerivedType(tag: DW_TAG_member, name: "jited_len", scope: !3445, file: !145, line: 487, baseType: !707, size: 32, offset: 512)
!3458 = !DIDerivedType(tag: DW_TAG_member, name: "btf", scope: !2933, file: !145, line: 806, baseType: !3403, size: 64, offset: 4096)
!3459 = !DIDerivedType(tag: DW_TAG_member, name: "func_info", scope: !2933, file: !145, line: 807, baseType: !3460, size: 64, offset: 4160)
!3460 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3461, size: 64)
!3461 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_func_info", file: !70, line: 4963, size: 64, elements: !3462)
!3462 = !{!3463, !3464}
!3463 = !DIDerivedType(tag: DW_TAG_member, name: "insn_off", scope: !3461, file: !70, line: 4964, baseType: !468, size: 32)
!3464 = !DIDerivedType(tag: DW_TAG_member, name: "type_id", scope: !3461, file: !70, line: 4965, baseType: !468, size: 32, offset: 32)
!3465 = !DIDerivedType(tag: DW_TAG_member, name: "func_info_aux", scope: !2933, file: !145, line: 808, baseType: !3466, size: 64, offset: 4224)
!3466 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3467, size: 64)
!3467 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_func_info_aux", file: !145, line: 724, size: 32, elements: !3468)
!3468 = !{!3469, !3470}
!3469 = !DIDerivedType(tag: DW_TAG_member, name: "linkage", scope: !3467, file: !145, line: 725, baseType: !1038, size: 16)
!3470 = !DIDerivedType(tag: DW_TAG_member, name: "unreliable", scope: !3467, file: !145, line: 726, baseType: !540, size: 8, offset: 16)
!3471 = !DIDerivedType(tag: DW_TAG_member, name: "linfo", scope: !2933, file: !145, line: 815, baseType: !3472, size: 64, offset: 4288)
!3472 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3473, size: 64)
!3473 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_line_info", file: !70, line: 4971, size: 128, elements: !3474)
!3474 = !{!3475, !3476, !3477, !3478}
!3475 = !DIDerivedType(tag: DW_TAG_member, name: "insn_off", scope: !3473, file: !70, line: 4972, baseType: !468, size: 32)
!3476 = !DIDerivedType(tag: DW_TAG_member, name: "file_name_off", scope: !3473, file: !70, line: 4973, baseType: !468, size: 32, offset: 32)
!3477 = !DIDerivedType(tag: DW_TAG_member, name: "line_off", scope: !3473, file: !70, line: 4974, baseType: !468, size: 32, offset: 64)
!3478 = !DIDerivedType(tag: DW_TAG_member, name: "line_col", scope: !3473, file: !70, line: 4975, baseType: !468, size: 32, offset: 96)
!3479 = !DIDerivedType(tag: DW_TAG_member, name: "jited_linfo", scope: !2933, file: !145, line: 823, baseType: !3480, size: 64, offset: 4352)
!3480 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !570, size: 64)
!3481 = !DIDerivedType(tag: DW_TAG_member, name: "func_info_cnt", scope: !2933, file: !145, line: 824, baseType: !707, size: 32, offset: 4416)
!3482 = !DIDerivedType(tag: DW_TAG_member, name: "nr_linfo", scope: !2933, file: !145, line: 825, baseType: !707, size: 32, offset: 4448)
!3483 = !DIDerivedType(tag: DW_TAG_member, name: "linfo_idx", scope: !2933, file: !145, line: 830, baseType: !707, size: 32, offset: 4480)
!3484 = !DIDerivedType(tag: DW_TAG_member, name: "num_exentries", scope: !2933, file: !145, line: 831, baseType: !707, size: 32, offset: 4512)
!3485 = !DIDerivedType(tag: DW_TAG_member, name: "extable", scope: !2933, file: !145, line: 832, baseType: !3486, size: 64, offset: 4544)
!3486 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3487, size: 64)
!3487 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "exception_table_entry", file: !3488, line: 17, size: 96, elements: !3489)
!3488 = !DIFile(filename: "./arch/x86/include/asm/extable.h", directory: "/home/lizy2001/genbc/linux")
!3489 = !{!3490, !3491, !3492}
!3490 = !DIDerivedType(tag: DW_TAG_member, name: "insn", scope: !3487, file: !3488, line: 18, baseType: !37, size: 32)
!3491 = !DIDerivedType(tag: DW_TAG_member, name: "fixup", scope: !3487, file: !3488, line: 18, baseType: !37, size: 32, offset: 32)
!3492 = !DIDerivedType(tag: DW_TAG_member, name: "handler", scope: !3487, file: !3488, line: 18, baseType: !37, size: 32, offset: 64)
!3493 = !DIDerivedType(tag: DW_TAG_member, name: "stats", scope: !2933, file: !145, line: 833, baseType: !3494, size: 64, offset: 4608)
!3494 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3495, size: 64)
!3495 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_prog_stats", file: !145, line: 503, size: 128, align: 128, elements: !3496)
!3496 = !{!3497, !3498, !3499}
!3497 = !DIDerivedType(tag: DW_TAG_member, name: "cnt", scope: !3495, file: !145, line: 504, baseType: !336, size: 64)
!3498 = !DIDerivedType(tag: DW_TAG_member, name: "nsecs", scope: !3495, file: !145, line: 505, baseType: !336, size: 64, offset: 64)
!3499 = !DIDerivedType(tag: DW_TAG_member, name: "syncp", scope: !3495, file: !145, line: 506, baseType: !2058, offset: 128)
!3500 = !DIDerivedType(tag: DW_TAG_member, scope: !2933, file: !145, line: 834, baseType: !3501, size: 256, offset: 4672)
!3501 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2933, file: !145, line: 834, size: 256, elements: !3502)
!3502 = !{!3503, !3504}
!3503 = !DIDerivedType(tag: DW_TAG_member, name: "work", scope: !3501, file: !145, line: 835, baseType: !1807, size: 256)
!3504 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !3501, file: !145, line: 836, baseType: !304, size: 128, align: 64)
!3505 = !DIDerivedType(tag: DW_TAG_member, name: "orig_prog", scope: !2910, file: !2911, line: 544, baseType: !3506, size: 64, offset: 320)
!3506 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3507, size: 64)
!3507 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sock_fprog_kern", file: !2911, line: 512, size: 128, elements: !3508)
!3508 = !{!3509, !3510}
!3509 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !3507, file: !2911, line: 513, baseType: !1038, size: 16)
!3510 = !DIDerivedType(tag: DW_TAG_member, name: "filter", scope: !3507, file: !2911, line: 514, baseType: !3511, size: 64, offset: 64)
!3511 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3512, size: 64)
!3512 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sock_filter", file: !3513, line: 24, size: 64, elements: !3514)
!3513 = !DIFile(filename: "./include/uapi/linux/filter.h", directory: "/home/lizy2001/genbc/linux")
!3514 = !{!3515, !3516, !3517, !3518}
!3515 = !DIDerivedType(tag: DW_TAG_member, name: "code", scope: !3512, file: !3513, line: 25, baseType: !476, size: 16)
!3516 = !DIDerivedType(tag: DW_TAG_member, name: "jt", scope: !3512, file: !3513, line: 26, baseType: !1398, size: 8, offset: 16)
!3517 = !DIDerivedType(tag: DW_TAG_member, name: "jf", scope: !3512, file: !3513, line: 27, baseType: !1398, size: 8, offset: 24)
!3518 = !DIDerivedType(tag: DW_TAG_member, name: "k", scope: !3512, file: !3513, line: 28, baseType: !468, size: 32, offset: 32)
!3519 = !DIDerivedType(tag: DW_TAG_member, name: "bpf_func", scope: !2910, file: !2911, line: 545, baseType: !3520, size: 64, offset: 384)
!3520 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3521, size: 64)
!3521 = !DISubroutineType(types: !3522)
!3522 = !{!7, !2244, !3523}
!3523 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3524, size: 64)
!3524 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3298)
!3525 = !DIDerivedType(tag: DW_TAG_member, name: "insns", scope: !2910, file: !2911, line: 548, baseType: !3526, offset: 448)
!3526 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3512, elements: !1922)
!3527 = !DIDerivedType(tag: DW_TAG_member, name: "insnsi", scope: !2910, file: !2911, line: 549, baseType: !3528, offset: 448)
!3528 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3298, elements: !314)
!3529 = !DIDerivedType(tag: DW_TAG_member, name: "cgroup_storage", scope: !2906, file: !145, line: 1034, baseType: !3530, size: 128, offset: 64)
!3530 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3531, size: 128, elements: !478)
!3531 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3532, size: 64)
!3532 = !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_cgroup_storage", file: !145, line: 1034, flags: DIFlagFwdDecl)
!3533 = !DIDerivedType(tag: DW_TAG_member, name: "progs", scope: !2895, file: !2896, line: 17, baseType: !3534, size: 128, offset: 128)
!3534 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2909, size: 128, elements: !478)
!3535 = !DIDerivedType(tag: DW_TAG_member, name: "links", scope: !2895, file: !2896, line: 18, baseType: !3536, size: 256, offset: 256)
!3536 = !DICompositeType(tag: DW_TAG_array_type, baseType: !289, size: 256, elements: !478)
!3537 = !DIDerivedType(tag: DW_TAG_member, name: "net_cookie", scope: !1963, file: !1964, line: 174, baseType: !378, size: 64, offset: 15552)
!3538 = !DIDerivedType(tag: DW_TAG_member, name: "can", scope: !1963, file: !1964, line: 183, baseType: !3539, size: 1216, offset: 15616)
!3539 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "netns_can", file: !3540, line: 15, size: 1216, elements: !3541)
!3540 = !DIFile(filename: "./include/net/netns/can.h", directory: "/home/lizy2001/genbc/linux")
!3541 = !{!3542, !3543, !3544, !3545, !3546, !3547, !3548, !3549, !3550, !3551, !3552, !3555, !3556, !3557, !3560, !3563}
!3542 = !DIDerivedType(tag: DW_TAG_member, name: "proc_dir", scope: !3539, file: !3540, line: 17, baseType: !1997, size: 64)
!3543 = !DIDerivedType(tag: DW_TAG_member, name: "pde_stats", scope: !3539, file: !3540, line: 18, baseType: !1997, size: 64, offset: 64)
!3544 = !DIDerivedType(tag: DW_TAG_member, name: "pde_reset_stats", scope: !3539, file: !3540, line: 19, baseType: !1997, size: 64, offset: 128)
!3545 = !DIDerivedType(tag: DW_TAG_member, name: "pde_rcvlist_all", scope: !3539, file: !3540, line: 20, baseType: !1997, size: 64, offset: 192)
!3546 = !DIDerivedType(tag: DW_TAG_member, name: "pde_rcvlist_fil", scope: !3539, file: !3540, line: 21, baseType: !1997, size: 64, offset: 256)
!3547 = !DIDerivedType(tag: DW_TAG_member, name: "pde_rcvlist_inv", scope: !3539, file: !3540, line: 22, baseType: !1997, size: 64, offset: 320)
!3548 = !DIDerivedType(tag: DW_TAG_member, name: "pde_rcvlist_sff", scope: !3539, file: !3540, line: 23, baseType: !1997, size: 64, offset: 384)
!3549 = !DIDerivedType(tag: DW_TAG_member, name: "pde_rcvlist_eff", scope: !3539, file: !3540, line: 24, baseType: !1997, size: 64, offset: 448)
!3550 = !DIDerivedType(tag: DW_TAG_member, name: "pde_rcvlist_err", scope: !3539, file: !3540, line: 25, baseType: !1997, size: 64, offset: 512)
!3551 = !DIDerivedType(tag: DW_TAG_member, name: "bcmproc_dir", scope: !3539, file: !3540, line: 26, baseType: !1997, size: 64, offset: 576)
!3552 = !DIDerivedType(tag: DW_TAG_member, name: "rx_alldev_list", scope: !3539, file: !3540, line: 30, baseType: !3553, size: 64, offset: 640)
!3553 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3554, size: 64)
!3554 = !DICompositeType(tag: DW_TAG_structure_type, name: "can_dev_rcv_lists", file: !3540, line: 11, flags: DIFlagFwdDecl)
!3555 = !DIDerivedType(tag: DW_TAG_member, name: "rcvlists_lock", scope: !3539, file: !3540, line: 31, baseType: !729, offset: 704)
!3556 = !DIDerivedType(tag: DW_TAG_member, name: "stattimer", scope: !3539, file: !3540, line: 32, baseType: !2221, size: 320, offset: 704)
!3557 = !DIDerivedType(tag: DW_TAG_member, name: "pkg_stats", scope: !3539, file: !3540, line: 33, baseType: !3558, size: 64, offset: 1024)
!3558 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3559, size: 64)
!3559 = !DICompositeType(tag: DW_TAG_structure_type, name: "can_pkg_stats", file: !3540, line: 12, flags: DIFlagFwdDecl)
!3560 = !DIDerivedType(tag: DW_TAG_member, name: "rcv_lists_stats", scope: !3539, file: !3540, line: 34, baseType: !3561, size: 64, offset: 1088)
!3561 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3562, size: 64)
!3562 = !DICompositeType(tag: DW_TAG_structure_type, name: "can_rcv_lists_stats", file: !3540, line: 13, flags: DIFlagFwdDecl)
!3563 = !DIDerivedType(tag: DW_TAG_member, name: "cgw_list", scope: !3539, file: !3540, line: 37, baseType: !857, size: 64, offset: 1152)
!3564 = !DIDerivedType(tag: DW_TAG_member, name: "diag_nlsk", scope: !1963, file: !1964, line: 191, baseType: !450, size: 64, offset: 16832)
!3565 = !DIDerivedType(tag: DW_TAG_member, name: "time_ns", scope: !1947, file: !1948, line: 38, baseType: !3566, size: 64, offset: 384)
!3566 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3567, size: 64)
!3567 = !DICompositeType(tag: DW_TAG_structure_type, name: "time_namespace", file: !1948, line: 38, flags: DIFlagFwdDecl)
!3568 = !DIDerivedType(tag: DW_TAG_member, name: "time_ns_for_children", scope: !1947, file: !1948, line: 39, baseType: !3566, size: 64, offset: 448)
!3569 = !DIDerivedType(tag: DW_TAG_member, name: "cgroup_ns", scope: !1947, file: !1948, line: 40, baseType: !3570, size: 64, offset: 512)
!3570 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3571, size: 64)
!3571 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cgroup_namespace", file: !3572, line: 856, size: 448, elements: !3573)
!3572 = !DIFile(filename: "./include/linux/cgroup.h", directory: "/home/lizy2001/genbc/linux")
!3573 = !{!3574, !3575, !3576, !3577, !3578}
!3574 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !3571, file: !3572, line: 857, baseType: !1271, size: 32)
!3575 = !DIDerivedType(tag: DW_TAG_member, name: "ns", scope: !3571, file: !3572, line: 858, baseType: !1793, size: 192, offset: 64)
!3576 = !DIDerivedType(tag: DW_TAG_member, name: "user_ns", scope: !3571, file: !3572, line: 859, baseType: !1759, size: 64, offset: 256)
!3577 = !DIDerivedType(tag: DW_TAG_member, name: "ucounts", scope: !3571, file: !3572, line: 860, baseType: !1901, size: 64, offset: 320)
!3578 = !DIDerivedType(tag: DW_TAG_member, name: "root_cset", scope: !3571, file: !3572, line: 861, baseType: !3579, size: 64, offset: 384)
!3579 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3580, size: 64)
!3580 = !DICompositeType(tag: DW_TAG_structure_type, name: "css_set", file: !3581, line: 16, flags: DIFlagFwdDecl)
!3581 = !DIFile(filename: "./include/linux/sched/task.h", directory: "/home/lizy2001/genbc/linux")
!3582 = !DIDerivedType(tag: DW_TAG_member, name: "signal", scope: !1258, file: !1259, line: 969, baseType: !3583, size: 64, offset: 9216)
!3583 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3584, size: 64)
!3584 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "signal_struct", file: !3585, line: 82, size: 7296, elements: !3586)
!3585 = !DIFile(filename: "./include/linux/sched/signal.h", directory: "/home/lizy2001/genbc/linux")
!3586 = !{!3587, !3588, !3589, !3590, !3591, !3592, !3593, !3604, !3605, !3606, !3607, !3608, !3609, !3610, !3611, !3612, !3613, !3614, !3615, !3616, !3622, !3631, !3632, !3634, !3635, !3636, !3639, !3640, !3641, !3642, !3643, !3644, !3645, !3646, !3647, !3648, !3649, !3650, !3651, !3652, !3653, !3654, !3655, !3656, !3657, !3658, !3659, !3660, !3661, !3664, !3665, !3672, !3673, !3674, !3675, !3676, !3677}
!3587 = !DIDerivedType(tag: DW_TAG_member, name: "sigcnt", scope: !3584, file: !3585, line: 83, baseType: !1271, size: 32)
!3588 = !DIDerivedType(tag: DW_TAG_member, name: "live", scope: !3584, file: !3585, line: 84, baseType: !388, size: 32, offset: 32)
!3589 = !DIDerivedType(tag: DW_TAG_member, name: "nr_threads", scope: !3584, file: !3585, line: 85, baseType: !37, size: 32, offset: 64)
!3590 = !DIDerivedType(tag: DW_TAG_member, name: "thread_head", scope: !3584, file: !3585, line: 86, baseType: !289, size: 128, offset: 128)
!3591 = !DIDerivedType(tag: DW_TAG_member, name: "wait_chldexit", scope: !3584, file: !3585, line: 88, baseType: !1100, size: 128, offset: 256)
!3592 = !DIDerivedType(tag: DW_TAG_member, name: "curr_target", scope: !3584, file: !3585, line: 91, baseType: !1257, size: 64, offset: 384)
!3593 = !DIDerivedType(tag: DW_TAG_member, name: "shared_pending", scope: !3584, file: !3585, line: 94, baseType: !3594, size: 192, offset: 448)
!3594 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sigpending", file: !3595, line: 30, size: 192, elements: !3596)
!3595 = !DIFile(filename: "./include/linux/signal_types.h", directory: "/home/lizy2001/genbc/linux")
!3596 = !{!3597, !3598}
!3597 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !3594, file: !3595, line: 31, baseType: !289, size: 128)
!3598 = !DIDerivedType(tag: DW_TAG_member, name: "signal", scope: !3594, file: !3595, line: 32, baseType: !3599, size: 64, offset: 128)
!3599 = !DIDerivedType(tag: DW_TAG_typedef, name: "sigset_t", file: !3600, line: 25, baseType: !3601)
!3600 = !DIFile(filename: "./arch/x86/include/asm/signal.h", directory: "/home/lizy2001/genbc/linux")
!3601 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !3600, line: 23, size: 64, elements: !3602)
!3602 = !{!3603}
!3603 = !DIDerivedType(tag: DW_TAG_member, name: "sig", scope: !3601, file: !3600, line: 24, baseType: !1415, size: 64)
!3604 = !DIDerivedType(tag: DW_TAG_member, name: "multiprocess", scope: !3584, file: !3585, line: 97, baseType: !857, size: 64, offset: 640)
!3605 = !DIDerivedType(tag: DW_TAG_member, name: "group_exit_code", scope: !3584, file: !3585, line: 100, baseType: !37, size: 32, offset: 704)
!3606 = !DIDerivedType(tag: DW_TAG_member, name: "notify_count", scope: !3584, file: !3585, line: 106, baseType: !37, size: 32, offset: 736)
!3607 = !DIDerivedType(tag: DW_TAG_member, name: "group_exit_task", scope: !3584, file: !3585, line: 107, baseType: !1257, size: 64, offset: 768)
!3608 = !DIDerivedType(tag: DW_TAG_member, name: "group_stop_count", scope: !3584, file: !3585, line: 110, baseType: !37, size: 32, offset: 832)
!3609 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3584, file: !3585, line: 111, baseType: !7, size: 32, offset: 864)
!3610 = !DIDerivedType(tag: DW_TAG_member, name: "is_child_subreaper", scope: !3584, file: !3585, line: 122, baseType: !7, size: 1, offset: 896, flags: DIFlagBitField, extraData: i64 896)
!3611 = !DIDerivedType(tag: DW_TAG_member, name: "has_child_subreaper", scope: !3584, file: !3585, line: 123, baseType: !7, size: 1, offset: 897, flags: DIFlagBitField, extraData: i64 896)
!3612 = !DIDerivedType(tag: DW_TAG_member, name: "posix_timer_id", scope: !3584, file: !3585, line: 128, baseType: !37, size: 32, offset: 928)
!3613 = !DIDerivedType(tag: DW_TAG_member, name: "posix_timers", scope: !3584, file: !3585, line: 129, baseType: !289, size: 128, offset: 960)
!3614 = !DIDerivedType(tag: DW_TAG_member, name: "real_timer", scope: !3584, file: !3585, line: 132, baseType: !1333, size: 512, offset: 1088)
!3615 = !DIDerivedType(tag: DW_TAG_member, name: "it_real_incr", scope: !3584, file: !3585, line: 133, baseType: !1341, size: 64, offset: 1600)
!3616 = !DIDerivedType(tag: DW_TAG_member, name: "it", scope: !3584, file: !3585, line: 140, baseType: !3617, size: 256, offset: 1664)
!3617 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3618, size: 256, elements: !478)
!3618 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cpu_itimer", file: !3585, line: 38, size: 128, elements: !3619)
!3619 = !{!3620, !3621}
!3620 = !DIDerivedType(tag: DW_TAG_member, name: "expires", scope: !3618, file: !3585, line: 39, baseType: !336, size: 64)
!3621 = !DIDerivedType(tag: DW_TAG_member, name: "incr", scope: !3618, file: !3585, line: 40, baseType: !336, size: 64, offset: 64)
!3622 = !DIDerivedType(tag: DW_TAG_member, name: "cputimer", scope: !3584, file: !3585, line: 146, baseType: !3623, size: 192, offset: 1920)
!3623 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "thread_group_cputimer", file: !3585, line: 66, size: 192, elements: !3624)
!3624 = !{!3625}
!3625 = !DIDerivedType(tag: DW_TAG_member, name: "cputime_atomic", scope: !3623, file: !3585, line: 67, baseType: !3626, size: 192)
!3626 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "task_cputime_atomic", file: !3585, line: 47, size: 192, elements: !3627)
!3627 = !{!3628, !3629, !3630}
!3628 = !DIDerivedType(tag: DW_TAG_member, name: "utime", scope: !3626, file: !3585, line: 48, baseType: !378, size: 64)
!3629 = !DIDerivedType(tag: DW_TAG_member, name: "stime", scope: !3626, file: !3585, line: 49, baseType: !378, size: 64, offset: 64)
!3630 = !DIDerivedType(tag: DW_TAG_member, name: "sum_exec_runtime", scope: !3626, file: !3585, line: 50, baseType: !378, size: 64, offset: 128)
!3631 = !DIDerivedType(tag: DW_TAG_member, name: "posix_cputimers", scope: !3584, file: !3585, line: 150, baseType: !1575, size: 640, offset: 2112)
!3632 = !DIDerivedType(tag: DW_TAG_member, name: "pids", scope: !3584, file: !3585, line: 153, baseType: !3633, size: 256, offset: 2752)
!3633 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1521, size: 256, elements: !1202)
!3634 = !DIDerivedType(tag: DW_TAG_member, name: "tty_old_pgrp", scope: !3584, file: !3585, line: 159, baseType: !1521, size: 64, offset: 3008)
!3635 = !DIDerivedType(tag: DW_TAG_member, name: "leader", scope: !3584, file: !3585, line: 162, baseType: !37, size: 32, offset: 3072)
!3636 = !DIDerivedType(tag: DW_TAG_member, name: "tty", scope: !3584, file: !3585, line: 164, baseType: !3637, size: 64, offset: 3136)
!3637 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3638, size: 64)
!3638 = !DICompositeType(tag: DW_TAG_structure_type, name: "tty_struct", file: !3585, line: 164, flags: DIFlagFwdDecl)
!3639 = !DIDerivedType(tag: DW_TAG_member, name: "stats_lock", scope: !3584, file: !3585, line: 175, baseType: !2313, size: 32, offset: 3200)
!3640 = !DIDerivedType(tag: DW_TAG_member, name: "utime", scope: !3584, file: !3585, line: 176, baseType: !336, size: 64, offset: 3264)
!3641 = !DIDerivedType(tag: DW_TAG_member, name: "stime", scope: !3584, file: !3585, line: 176, baseType: !336, size: 64, offset: 3328)
!3642 = !DIDerivedType(tag: DW_TAG_member, name: "cutime", scope: !3584, file: !3585, line: 176, baseType: !336, size: 64, offset: 3392)
!3643 = !DIDerivedType(tag: DW_TAG_member, name: "cstime", scope: !3584, file: !3585, line: 176, baseType: !336, size: 64, offset: 3456)
!3644 = !DIDerivedType(tag: DW_TAG_member, name: "gtime", scope: !3584, file: !3585, line: 177, baseType: !336, size: 64, offset: 3520)
!3645 = !DIDerivedType(tag: DW_TAG_member, name: "cgtime", scope: !3584, file: !3585, line: 178, baseType: !336, size: 64, offset: 3584)
!3646 = !DIDerivedType(tag: DW_TAG_member, name: "prev_cputime", scope: !3584, file: !3585, line: 179, baseType: !1563, size: 128, offset: 3648)
!3647 = !DIDerivedType(tag: DW_TAG_member, name: "nvcsw", scope: !3584, file: !3585, line: 180, baseType: !317, size: 64, offset: 3776)
!3648 = !DIDerivedType(tag: DW_TAG_member, name: "nivcsw", scope: !3584, file: !3585, line: 180, baseType: !317, size: 64, offset: 3840)
!3649 = !DIDerivedType(tag: DW_TAG_member, name: "cnvcsw", scope: !3584, file: !3585, line: 180, baseType: !317, size: 64, offset: 3904)
!3650 = !DIDerivedType(tag: DW_TAG_member, name: "cnivcsw", scope: !3584, file: !3585, line: 180, baseType: !317, size: 64, offset: 3968)
!3651 = !DIDerivedType(tag: DW_TAG_member, name: "min_flt", scope: !3584, file: !3585, line: 181, baseType: !317, size: 64, offset: 4032)
!3652 = !DIDerivedType(tag: DW_TAG_member, name: "maj_flt", scope: !3584, file: !3585, line: 181, baseType: !317, size: 64, offset: 4096)
!3653 = !DIDerivedType(tag: DW_TAG_member, name: "cmin_flt", scope: !3584, file: !3585, line: 181, baseType: !317, size: 64, offset: 4160)
!3654 = !DIDerivedType(tag: DW_TAG_member, name: "cmaj_flt", scope: !3584, file: !3585, line: 181, baseType: !317, size: 64, offset: 4224)
!3655 = !DIDerivedType(tag: DW_TAG_member, name: "inblock", scope: !3584, file: !3585, line: 182, baseType: !317, size: 64, offset: 4288)
!3656 = !DIDerivedType(tag: DW_TAG_member, name: "oublock", scope: !3584, file: !3585, line: 182, baseType: !317, size: 64, offset: 4352)
!3657 = !DIDerivedType(tag: DW_TAG_member, name: "cinblock", scope: !3584, file: !3585, line: 182, baseType: !317, size: 64, offset: 4416)
!3658 = !DIDerivedType(tag: DW_TAG_member, name: "coublock", scope: !3584, file: !3585, line: 182, baseType: !317, size: 64, offset: 4480)
!3659 = !DIDerivedType(tag: DW_TAG_member, name: "maxrss", scope: !3584, file: !3585, line: 183, baseType: !317, size: 64, offset: 4544)
!3660 = !DIDerivedType(tag: DW_TAG_member, name: "cmaxrss", scope: !3584, file: !3585, line: 183, baseType: !317, size: 64, offset: 4608)
!3661 = !DIDerivedType(tag: DW_TAG_member, name: "ioac", scope: !3584, file: !3585, line: 184, baseType: !3662, offset: 4672)
!3662 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "task_io_accounting", file: !3663, line: 12, elements: !743)
!3663 = !DIFile(filename: "./include/linux/task_io_accounting.h", directory: "/home/lizy2001/genbc/linux")
!3664 = !DIDerivedType(tag: DW_TAG_member, name: "sum_sched_runtime", scope: !3584, file: !3585, line: 192, baseType: !340, size: 64, offset: 4672)
!3665 = !DIDerivedType(tag: DW_TAG_member, name: "rlim", scope: !3584, file: !3585, line: 203, baseType: !3666, size: 2048, offset: 4736)
!3666 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3667, size: 2048, elements: !274)
!3667 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rlimit", file: !3668, line: 43, size: 128, elements: !3669)
!3668 = !DIFile(filename: "./include/uapi/linux/resource.h", directory: "/home/lizy2001/genbc/linux")
!3669 = !{!3670, !3671}
!3670 = !DIDerivedType(tag: DW_TAG_member, name: "rlim_cur", scope: !3667, file: !3668, line: 44, baseType: !597, size: 64)
!3671 = !DIDerivedType(tag: DW_TAG_member, name: "rlim_max", scope: !3667, file: !3668, line: 45, baseType: !597, size: 64, offset: 64)
!3672 = !DIDerivedType(tag: DW_TAG_member, name: "oom_flag_origin", scope: !3584, file: !3585, line: 220, baseType: !540, size: 8, offset: 6784)
!3673 = !DIDerivedType(tag: DW_TAG_member, name: "oom_score_adj", scope: !3584, file: !3585, line: 221, baseType: !1246, size: 16, offset: 6800)
!3674 = !DIDerivedType(tag: DW_TAG_member, name: "oom_score_adj_min", scope: !3584, file: !3585, line: 222, baseType: !1246, size: 16, offset: 6816)
!3675 = !DIDerivedType(tag: DW_TAG_member, name: "oom_mm", scope: !3584, file: !3585, line: 224, baseType: !1125, size: 64, offset: 6848)
!3676 = !DIDerivedType(tag: DW_TAG_member, name: "cred_guard_mutex", scope: !3584, file: !3585, line: 227, baseType: !954, size: 192, offset: 6912)
!3677 = !DIDerivedType(tag: DW_TAG_member, name: "exec_update_mutex", scope: !3584, file: !3585, line: 233, baseType: !954, size: 192, offset: 7104)
!3678 = !DIDerivedType(tag: DW_TAG_member, name: "sighand", scope: !1258, file: !1259, line: 970, baseType: !3679, size: 64, offset: 9280)
!3679 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3680, size: 64)
!3680 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sighand_struct", file: !3585, line: 20, size: 16576, elements: !3681)
!3681 = !{!3682, !3683, !3684, !3685}
!3682 = !DIDerivedType(tag: DW_TAG_member, name: "siglock", scope: !3680, file: !3585, line: 21, baseType: !729)
!3683 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !3680, file: !3585, line: 22, baseType: !1271, size: 32)
!3684 = !DIDerivedType(tag: DW_TAG_member, name: "signalfd_wqh", scope: !3680, file: !3585, line: 23, baseType: !1100, size: 128, offset: 64)
!3685 = !DIDerivedType(tag: DW_TAG_member, name: "action", scope: !3680, file: !3585, line: 24, baseType: !3686, size: 16384, offset: 192)
!3686 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3687, size: 16384, elements: !3707)
!3687 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_sigaction", file: !3595, line: 49, size: 256, elements: !3688)
!3688 = !{!3689}
!3689 = !DIDerivedType(tag: DW_TAG_member, name: "sa", scope: !3687, file: !3595, line: 50, baseType: !3690, size: 256)
!3690 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sigaction", file: !3595, line: 35, size: 256, elements: !3691)
!3691 = !{!3692, !3699, !3700, !3706}
!3692 = !DIDerivedType(tag: DW_TAG_member, name: "sa_handler", scope: !3690, file: !3595, line: 37, baseType: !3693, size: 64)
!3693 = !DIDerivedType(tag: DW_TAG_typedef, name: "__sighandler_t", file: !3694, line: 19, baseType: !3695)
!3694 = !DIFile(filename: "./include/uapi/asm-generic/signal-defs.h", directory: "/home/lizy2001/genbc/linux")
!3695 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3696, size: 64)
!3696 = !DIDerivedType(tag: DW_TAG_typedef, name: "__signalfn_t", file: !3694, line: 18, baseType: !3697)
!3697 = !DISubroutineType(types: !3698)
!3698 = !{null, !37}
!3699 = !DIDerivedType(tag: DW_TAG_member, name: "sa_flags", scope: !3690, file: !3595, line: 38, baseType: !317, size: 64, offset: 64)
!3700 = !DIDerivedType(tag: DW_TAG_member, name: "sa_restorer", scope: !3690, file: !3595, line: 44, baseType: !3701, size: 64, offset: 128)
!3701 = !DIDerivedType(tag: DW_TAG_typedef, name: "__sigrestore_t", file: !3694, line: 22, baseType: !3702)
!3702 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3703, size: 64)
!3703 = !DIDerivedType(tag: DW_TAG_typedef, name: "__restorefn_t", file: !3694, line: 21, baseType: !3704)
!3704 = !DISubroutineType(types: !3705)
!3705 = !{null}
!3706 = !DIDerivedType(tag: DW_TAG_member, name: "sa_mask", scope: !3690, file: !3595, line: 46, baseType: !3599, size: 64, offset: 192)
!3707 = !{!3708}
!3708 = !DISubrange(count: 64)
!3709 = !DIDerivedType(tag: DW_TAG_member, name: "blocked", scope: !1258, file: !1259, line: 971, baseType: !3599, size: 64, offset: 9344)
!3710 = !DIDerivedType(tag: DW_TAG_member, name: "real_blocked", scope: !1258, file: !1259, line: 972, baseType: !3599, size: 64, offset: 9408)
!3711 = !DIDerivedType(tag: DW_TAG_member, name: "saved_sigmask", scope: !1258, file: !1259, line: 974, baseType: !3599, size: 64, offset: 9472)
!3712 = !DIDerivedType(tag: DW_TAG_member, name: "pending", scope: !1258, file: !1259, line: 975, baseType: !3594, size: 192, offset: 9536)
!3713 = !DIDerivedType(tag: DW_TAG_member, name: "sas_ss_sp", scope: !1258, file: !1259, line: 976, baseType: !317, size: 64, offset: 9728)
!3714 = !DIDerivedType(tag: DW_TAG_member, name: "sas_ss_size", scope: !1258, file: !1259, line: 977, baseType: !594, size: 64, offset: 9792)
!3715 = !DIDerivedType(tag: DW_TAG_member, name: "sas_ss_flags", scope: !1258, file: !1259, line: 978, baseType: !7, size: 32, offset: 9856)
!3716 = !DIDerivedType(tag: DW_TAG_member, name: "task_works", scope: !1258, file: !1259, line: 980, baseType: !307, size: 64, offset: 9920)
!3717 = !DIDerivedType(tag: DW_TAG_member, name: "seccomp", scope: !1258, file: !1259, line: 989, baseType: !3718, size: 128, offset: 9984)
!3718 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seccomp", file: !3719, line: 35, size: 128, elements: !3720)
!3719 = !DIFile(filename: "./include/linux/seccomp.h", directory: "/home/lizy2001/genbc/linux")
!3720 = !{!3721, !3722, !3723}
!3721 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !3718, file: !3719, line: 36, baseType: !37, size: 32)
!3722 = !DIDerivedType(tag: DW_TAG_member, name: "filter_count", scope: !3718, file: !3719, line: 37, baseType: !388, size: 32, offset: 32)
!3723 = !DIDerivedType(tag: DW_TAG_member, name: "filter", scope: !3718, file: !3719, line: 38, baseType: !3724, size: 64, offset: 64)
!3724 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3725, size: 64)
!3725 = !DICompositeType(tag: DW_TAG_structure_type, name: "seccomp_filter", file: !3719, line: 23, flags: DIFlagFwdDecl)
!3726 = !DIDerivedType(tag: DW_TAG_member, name: "parent_exec_id", scope: !1258, file: !1259, line: 992, baseType: !336, size: 64, offset: 10112)
!3727 = !DIDerivedType(tag: DW_TAG_member, name: "self_exec_id", scope: !1258, file: !1259, line: 993, baseType: !336, size: 64, offset: 10176)
!3728 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_lock", scope: !1258, file: !1259, line: 996, baseType: !729, offset: 10240)
!3729 = !DIDerivedType(tag: DW_TAG_member, name: "pi_lock", scope: !1258, file: !1259, line: 999, baseType: !1168, offset: 10240)
!3730 = !DIDerivedType(tag: DW_TAG_member, name: "wake_q", scope: !1258, file: !1259, line: 1001, baseType: !3731, size: 64, offset: 10240)
!3731 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wake_q_node", file: !1259, line: 636, size: 64, elements: !3732)
!3732 = !{!3733}
!3733 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !3731, file: !1259, line: 637, baseType: !3734, size: 64)
!3734 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3731, size: 64)
!3735 = !DIDerivedType(tag: DW_TAG_member, name: "pi_waiters", scope: !1258, file: !1259, line: 1005, baseType: !1387, size: 128, offset: 10304)
!3736 = !DIDerivedType(tag: DW_TAG_member, name: "pi_top_task", scope: !1258, file: !1259, line: 1007, baseType: !1257, size: 64, offset: 10432)
!3737 = !DIDerivedType(tag: DW_TAG_member, name: "pi_blocked_on", scope: !1258, file: !1259, line: 1009, baseType: !3738, size: 64, offset: 10496)
!3738 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3739, size: 64)
!3739 = !DICompositeType(tag: DW_TAG_structure_type, name: "rt_mutex_waiter", file: !1259, line: 1009, flags: DIFlagFwdDecl)
!3740 = !DIDerivedType(tag: DW_TAG_member, name: "journal_info", scope: !1258, file: !1259, line: 1043, baseType: !570, size: 64, offset: 10560)
!3741 = !DIDerivedType(tag: DW_TAG_member, name: "bio_list", scope: !1258, file: !1259, line: 1046, baseType: !3742, size: 64, offset: 10624)
!3742 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3743, size: 64)
!3743 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bio_list", file: !3744, line: 554, size: 128, elements: !3745)
!3744 = !DIFile(filename: "./include/linux/bio.h", directory: "/home/lizy2001/genbc/linux")
!3745 = !{!3746, !5749}
!3746 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !3743, file: !3744, line: 555, baseType: !3747, size: 64)
!3747 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3748, size: 64)
!3748 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bio", file: !3749, line: 203, size: 832, elements: !3750)
!3749 = !DIFile(filename: "./include/linux/blk_types.h", directory: "/home/lizy2001/genbc/linux")
!3750 = !{!3751, !3752, !5703, !5704, !5705, !5706, !5707, !5708, !5709, !5710, !5717, !5722, !5723, !5742, !5743, !5744, !5745, !5746, !5748}
!3751 = !DIDerivedType(tag: DW_TAG_member, name: "bi_next", scope: !3748, file: !3749, line: 204, baseType: !3747, size: 64)
!3752 = !DIDerivedType(tag: DW_TAG_member, name: "bi_disk", scope: !3748, file: !3749, line: 205, baseType: !3753, size: 64, offset: 64)
!3753 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3754, size: 64)
!3754 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gendisk", file: !3755, line: 167, size: 8512, elements: !3756)
!3755 = !DIFile(filename: "./include/linux/genhd.h", directory: "/home/lizy2001/genbc/linux")
!3756 = !{!3757, !3758, !3759, !3760, !3762, !3763, !3764, !4996, !4997, !5173, !5684, !5685, !5686, !5687, !5688, !5689, !5692, !5693, !5696, !5697, !5698, !5701}
!3757 = !DIDerivedType(tag: DW_TAG_member, name: "major", scope: !3754, file: !3755, line: 171, baseType: !37, size: 32)
!3758 = !DIDerivedType(tag: DW_TAG_member, name: "first_minor", scope: !3754, file: !3755, line: 172, baseType: !37, size: 32, offset: 32)
!3759 = !DIDerivedType(tag: DW_TAG_member, name: "minors", scope: !3754, file: !3755, line: 173, baseType: !37, size: 32, offset: 64)
!3760 = !DIDerivedType(tag: DW_TAG_member, name: "disk_name", scope: !3754, file: !3755, line: 176, baseType: !3761, size: 256, offset: 96)
!3761 = !DICompositeType(tag: DW_TAG_array_type, baseType: !273, size: 256, elements: !716)
!3762 = !DIDerivedType(tag: DW_TAG_member, name: "events", scope: !3754, file: !3755, line: 178, baseType: !477, size: 16, offset: 352)
!3763 = !DIDerivedType(tag: DW_TAG_member, name: "event_flags", scope: !3754, file: !3755, line: 179, baseType: !477, size: 16, offset: 368)
!3764 = !DIDerivedType(tag: DW_TAG_member, name: "part_tbl", scope: !3754, file: !3755, line: 186, baseType: !3765, size: 64, offset: 384)
!3765 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3766, size: 64)
!3766 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "disk_part_tbl", file: !3755, line: 149, size: 256, elements: !3767)
!3767 = !{!3768, !3769, !3770, !4994}
!3768 = !DIDerivedType(tag: DW_TAG_member, name: "callback_head", scope: !3766, file: !3755, line: 150, baseType: !304, size: 128, align: 64)
!3769 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !3766, file: !3755, line: 151, baseType: !37, size: 32, offset: 128)
!3770 = !DIDerivedType(tag: DW_TAG_member, name: "last_lookup", scope: !3766, file: !3755, line: 152, baseType: !3771, size: 64, offset: 192)
!3771 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3772, size: 64)
!3772 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hd_struct", file: !3755, line: 53, size: 6592, elements: !3773)
!3773 = !{!3774, !3776, !3777, !3778, !3781, !3802, !4977, !4978, !4979, !4980, !4988}
!3774 = !DIDerivedType(tag: DW_TAG_member, name: "start_sect", scope: !3772, file: !3755, line: 54, baseType: !3775, size: 64)
!3775 = !DIDerivedType(tag: DW_TAG_typedef, name: "sector_t", file: !282, line: 125, baseType: !336)
!3776 = !DIDerivedType(tag: DW_TAG_member, name: "nr_sects", scope: !3772, file: !3755, line: 60, baseType: !3775, size: 64, offset: 64)
!3777 = !DIDerivedType(tag: DW_TAG_member, name: "stamp", scope: !3772, file: !3755, line: 64, baseType: !317, size: 64, offset: 128)
!3778 = !DIDerivedType(tag: DW_TAG_member, name: "dkstats", scope: !3772, file: !3755, line: 65, baseType: !3779, size: 64, offset: 192)
!3779 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3780, size: 64)
!3780 = !DICompositeType(tag: DW_TAG_structure_type, name: "disk_stats", file: !3755, line: 65, flags: DIFlagFwdDecl)
!3781 = !DIDerivedType(tag: DW_TAG_member, name: "ref", scope: !3772, file: !3755, line: 66, baseType: !3782, size: 128, offset: 256)
!3782 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "percpu_ref", file: !3783, line: 105, size: 128, elements: !3784)
!3783 = !DIFile(filename: "./include/linux/percpu-refcount.h", directory: "/home/lizy2001/genbc/linux")
!3784 = !{!3785, !3786}
!3785 = !DIDerivedType(tag: DW_TAG_member, name: "percpu_count_ptr", scope: !3782, file: !3783, line: 110, baseType: !317, size: 64)
!3786 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !3782, file: !3783, line: 118, baseType: !3787, size: 64, offset: 64)
!3787 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3788, size: 64)
!3788 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "percpu_ref_data", file: !3783, line: 95, size: 448, elements: !3789)
!3789 = !{!3790, !3791, !3797, !3798, !3799, !3800, !3801}
!3790 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !3788, file: !3783, line: 96, baseType: !376, size: 64)
!3791 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !3788, file: !3783, line: 97, baseType: !3792, size: 64, offset: 64)
!3792 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3793, size: 64)
!3793 = !DIDerivedType(tag: DW_TAG_typedef, name: "percpu_ref_func_t", file: !3783, line: 60, baseType: !3794)
!3794 = !DISubroutineType(types: !3795)
!3795 = !{null, !3796}
!3796 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3782, size: 64)
!3797 = !DIDerivedType(tag: DW_TAG_member, name: "confirm_switch", scope: !3788, file: !3783, line: 98, baseType: !3792, size: 64, offset: 128)
!3798 = !DIDerivedType(tag: DW_TAG_member, name: "force_atomic", scope: !3788, file: !3783, line: 99, baseType: !540, size: 1, offset: 192, flags: DIFlagBitField, extraData: i64 192)
!3799 = !DIDerivedType(tag: DW_TAG_member, name: "allow_reinit", scope: !3788, file: !3783, line: 100, baseType: !540, size: 1, offset: 193, flags: DIFlagBitField, extraData: i64 192)
!3800 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !3788, file: !3783, line: 101, baseType: !304, size: 128, align: 64, offset: 256)
!3801 = !DIDerivedType(tag: DW_TAG_member, name: "ref", scope: !3788, file: !3783, line: 102, baseType: !3796, size: 64, offset: 384)
!3802 = !DIDerivedType(tag: DW_TAG_member, name: "__dev", scope: !3772, file: !3755, line: 68, baseType: !3803, size: 5568, offset: 384)
!3803 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !3804, line: 461, size: 5568, elements: !3805)
!3804 = !DIFile(filename: "./include/linux/device.h", directory: "/home/lizy2001/genbc/linux")
!3805 = !{!3806, !4171, !4173, !4176, !4177, !4229, !4321, !4322, !4323, !4324, !4325, !4340, !4447, !4460, !4905, !4906, !4910, !4911, !4912, !4913, !4917, !4923, !4924, !4927, !4928, !4929, !4930, !4931, !4932, !4933, !4965, !4966, !4967, !4970, !4973, !4974, !4975, !4976}
!3806 = !DIDerivedType(tag: DW_TAG_member, name: "kobj", scope: !3803, file: !3804, line: 462, baseType: !3807, size: 512)
!3807 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kobject", file: !3808, line: 64, size: 512, elements: !3809)
!3808 = !DIFile(filename: "./include/linux/kobject.h", directory: "/home/lizy2001/genbc/linux")
!3809 = !{!3810, !3811, !3812, !3814, !3854, !3956, !4161, !4166, !4167, !4168, !4169, !4170}
!3810 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3807, file: !3808, line: 65, baseType: !297, size: 64)
!3811 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !3807, file: !3808, line: 66, baseType: !289, size: 128, offset: 64)
!3812 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !3807, file: !3808, line: 67, baseType: !3813, size: 64, offset: 192)
!3813 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3807, size: 64)
!3814 = !DIDerivedType(tag: DW_TAG_member, name: "kset", scope: !3807, file: !3808, line: 68, baseType: !3815, size: 64, offset: 256)
!3815 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3816, size: 64)
!3816 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kset", file: !3808, line: 192, size: 704, elements: !3817)
!3817 = !{!3818, !3819, !3820, !3821}
!3818 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !3816, file: !3808, line: 193, baseType: !289, size: 128)
!3819 = !DIDerivedType(tag: DW_TAG_member, name: "list_lock", scope: !3816, file: !3808, line: 194, baseType: !729, offset: 128)
!3820 = !DIDerivedType(tag: DW_TAG_member, name: "kobj", scope: !3816, file: !3808, line: 195, baseType: !3807, size: 512, offset: 128)
!3821 = !DIDerivedType(tag: DW_TAG_member, name: "uevent_ops", scope: !3816, file: !3808, line: 196, baseType: !3822, size: 64, offset: 640)
!3822 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3823, size: 64)
!3823 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3824)
!3824 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kset_uevent_ops", file: !3808, line: 156, size: 192, elements: !3825)
!3825 = !{!3826, !3831, !3836}
!3826 = !DIDerivedType(tag: DW_TAG_member, name: "filter", scope: !3824, file: !3808, line: 157, baseType: !3827, size: 64)
!3827 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3828)
!3828 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3829, size: 64)
!3829 = !DISubroutineType(types: !3830)
!3830 = !{!37, !3815, !3813}
!3831 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3824, file: !3808, line: 158, baseType: !3832, size: 64, offset: 64)
!3832 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3833)
!3833 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3834, size: 64)
!3834 = !DISubroutineType(types: !3835)
!3835 = !{!297, !3815, !3813}
!3836 = !DIDerivedType(tag: DW_TAG_member, name: "uevent", scope: !3824, file: !3808, line: 159, baseType: !3837, size: 64, offset: 128)
!3837 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3838)
!3838 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3839, size: 64)
!3839 = !DISubroutineType(types: !3840)
!3840 = !{!37, !3815, !3813, !3841}
!3841 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3842, size: 64)
!3842 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kobj_uevent_env", file: !3808, line: 148, size: 20736, elements: !3843)
!3843 = !{!3844, !3846, !3848, !3849, !3853}
!3844 = !DIDerivedType(tag: DW_TAG_member, name: "argv", scope: !3842, file: !3808, line: 149, baseType: !3845, size: 192)
!3845 = !DICompositeType(tag: DW_TAG_array_type, baseType: !577, size: 192, elements: !867)
!3846 = !DIDerivedType(tag: DW_TAG_member, name: "envp", scope: !3842, file: !3808, line: 150, baseType: !3847, size: 4096, offset: 192)
!3847 = !DICompositeType(tag: DW_TAG_array_type, baseType: !577, size: 4096, elements: !3707)
!3848 = !DIDerivedType(tag: DW_TAG_member, name: "envp_idx", scope: !3842, file: !3808, line: 151, baseType: !37, size: 32, offset: 4288)
!3849 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !3842, file: !3808, line: 152, baseType: !3850, size: 16384, offset: 4320)
!3850 = !DICompositeType(tag: DW_TAG_array_type, baseType: !273, size: 16384, elements: !3851)
!3851 = !{!3852}
!3852 = !DISubrange(count: 2048)
!3853 = !DIDerivedType(tag: DW_TAG_member, name: "buflen", scope: !3842, file: !3808, line: 153, baseType: !37, size: 32, offset: 20704)
!3854 = !DIDerivedType(tag: DW_TAG_member, name: "ktype", scope: !3807, file: !3808, line: 69, baseType: !3855, size: 64, offset: 320)
!3855 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3856, size: 64)
!3856 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kobj_type", file: !3808, line: 138, size: 448, elements: !3857)
!3857 = !{!3858, !3862, !3881, !3883, !3916, !3948, !3952}
!3858 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !3856, file: !3808, line: 139, baseType: !3859, size: 64)
!3859 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3860, size: 64)
!3860 = !DISubroutineType(types: !3861)
!3861 = !{null, !3813}
!3862 = !DIDerivedType(tag: DW_TAG_member, name: "sysfs_ops", scope: !3856, file: !3808, line: 140, baseType: !3863, size: 64, offset: 64)
!3863 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3864, size: 64)
!3864 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3865)
!3865 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sysfs_ops", file: !3866, line: 230, size: 128, elements: !3867)
!3866 = !DIFile(filename: "./include/linux/sysfs.h", directory: "/home/lizy2001/genbc/linux")
!3867 = !{!3868, !3877}
!3868 = !DIDerivedType(tag: DW_TAG_member, name: "show", scope: !3865, file: !3866, line: 231, baseType: !3869, size: 64)
!3869 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3870, size: 64)
!3870 = !DISubroutineType(types: !3871)
!3871 = !{!1015, !3813, !3872, !577}
!3872 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3873, size: 64)
!3873 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "attribute", file: !3866, line: 30, size: 128, elements: !3874)
!3874 = !{!3875, !3876}
!3875 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3873, file: !3866, line: 31, baseType: !297, size: 64)
!3876 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !3873, file: !3866, line: 32, baseType: !646, size: 16, offset: 64)
!3877 = !DIDerivedType(tag: DW_TAG_member, name: "store", scope: !3865, file: !3866, line: 232, baseType: !3878, size: 64, offset: 64)
!3878 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3879, size: 64)
!3879 = !DISubroutineType(types: !3880)
!3880 = !{!1015, !3813, !3872, !297, !594}
!3881 = !DIDerivedType(tag: DW_TAG_member, name: "default_attrs", scope: !3856, file: !3808, line: 141, baseType: !3882, size: 64, offset: 128)
!3882 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3872, size: 64)
!3883 = !DIDerivedType(tag: DW_TAG_member, name: "default_groups", scope: !3856, file: !3808, line: 142, baseType: !3884, size: 64, offset: 192)
!3884 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3885, size: 64)
!3885 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3886, size: 64)
!3886 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3887)
!3887 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "attribute_group", file: !3866, line: 84, size: 320, elements: !3888)
!3888 = !{!3889, !3890, !3894, !3913, !3914}
!3889 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3887, file: !3866, line: 85, baseType: !297, size: 64)
!3890 = !DIDerivedType(tag: DW_TAG_member, name: "is_visible", scope: !3887, file: !3866, line: 86, baseType: !3891, size: 64, offset: 64)
!3891 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3892, size: 64)
!3892 = !DISubroutineType(types: !3893)
!3893 = !{!646, !3813, !3872, !37}
!3894 = !DIDerivedType(tag: DW_TAG_member, name: "is_bin_visible", scope: !3887, file: !3866, line: 88, baseType: !3895, size: 64, offset: 128)
!3895 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3896, size: 64)
!3896 = !DISubroutineType(types: !3897)
!3897 = !{!646, !3813, !3898, !37}
!3898 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3899, size: 64)
!3899 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bin_attribute", file: !3866, line: 168, size: 448, elements: !3900)
!3900 = !{!3901, !3902, !3903, !3904, !3908, !3909}
!3901 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !3899, file: !3866, line: 169, baseType: !3873, size: 128)
!3902 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !3899, file: !3866, line: 170, baseType: !594, size: 64, offset: 128)
!3903 = !DIDerivedType(tag: DW_TAG_member, name: "private", scope: !3899, file: !3866, line: 171, baseType: !570, size: 64, offset: 192)
!3904 = !DIDerivedType(tag: DW_TAG_member, name: "read", scope: !3899, file: !3866, line: 172, baseType: !3905, size: 64, offset: 256)
!3905 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3906, size: 64)
!3906 = !DISubroutineType(types: !3907)
!3907 = !{!1015, !1010, !3813, !3898, !577, !824, !594}
!3908 = !DIDerivedType(tag: DW_TAG_member, name: "write", scope: !3899, file: !3866, line: 174, baseType: !3905, size: 64, offset: 320)
!3909 = !DIDerivedType(tag: DW_TAG_member, name: "mmap", scope: !3899, file: !3866, line: 176, baseType: !3910, size: 64, offset: 384)
!3910 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3911, size: 64)
!3911 = !DISubroutineType(types: !3912)
!3912 = !{!37, !1010, !3813, !3898, !1115}
!3913 = !DIDerivedType(tag: DW_TAG_member, name: "attrs", scope: !3887, file: !3866, line: 90, baseType: !3882, size: 64, offset: 192)
!3914 = !DIDerivedType(tag: DW_TAG_member, name: "bin_attrs", scope: !3887, file: !3866, line: 91, baseType: !3915, size: 64, offset: 256)
!3915 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3898, size: 64)
!3916 = !DIDerivedType(tag: DW_TAG_member, name: "child_ns_type", scope: !3856, file: !3808, line: 143, baseType: !3917, size: 64, offset: 256)
!3917 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3918, size: 64)
!3918 = !DISubroutineType(types: !3919)
!3919 = !{!3920, !3813}
!3920 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3921, size: 64)
!3921 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3922)
!3922 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kobj_ns_type_operations", file: !3923, line: 39, size: 384, elements: !3924)
!3923 = !DIFile(filename: "./include/linux/kobject_ns.h", directory: "/home/lizy2001/genbc/linux")
!3924 = !{!3925, !3931, !3935, !3939, !3943, !3947}
!3925 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !3922, file: !3923, line: 40, baseType: !3926, size: 32)
!3926 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "kobj_ns_type", file: !3923, line: 26, baseType: !7, size: 32, elements: !3927)
!3927 = !{!3928, !3929, !3930}
!3928 = !DIEnumerator(name: "KOBJ_NS_TYPE_NONE", value: 0, isUnsigned: true)
!3929 = !DIEnumerator(name: "KOBJ_NS_TYPE_NET", value: 1, isUnsigned: true)
!3930 = !DIEnumerator(name: "KOBJ_NS_TYPES", value: 2, isUnsigned: true)
!3931 = !DIDerivedType(tag: DW_TAG_member, name: "current_may_mount", scope: !3922, file: !3923, line: 41, baseType: !3932, size: 64, offset: 64)
!3932 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3933, size: 64)
!3933 = !DISubroutineType(types: !3934)
!3934 = !{!540}
!3935 = !DIDerivedType(tag: DW_TAG_member, name: "grab_current_ns", scope: !3922, file: !3923, line: 42, baseType: !3936, size: 64, offset: 128)
!3936 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3937, size: 64)
!3937 = !DISubroutineType(types: !3938)
!3938 = !{!570}
!3939 = !DIDerivedType(tag: DW_TAG_member, name: "netlink_ns", scope: !3922, file: !3923, line: 43, baseType: !3940, size: 64, offset: 192)
!3940 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3941, size: 64)
!3941 = !DISubroutineType(types: !3942)
!3942 = !{!2244, !450}
!3943 = !DIDerivedType(tag: DW_TAG_member, name: "initial_ns", scope: !3922, file: !3923, line: 44, baseType: !3944, size: 64, offset: 256)
!3944 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3945, size: 64)
!3945 = !DISubroutineType(types: !3946)
!3946 = !{!2244}
!3947 = !DIDerivedType(tag: DW_TAG_member, name: "drop_ns", scope: !3922, file: !3923, line: 45, baseType: !3290, size: 64, offset: 320)
!3948 = !DIDerivedType(tag: DW_TAG_member, name: "namespace", scope: !3856, file: !3808, line: 144, baseType: !3949, size: 64, offset: 320)
!3949 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3950, size: 64)
!3950 = !DISubroutineType(types: !3951)
!3951 = !{!2244, !3813}
!3952 = !DIDerivedType(tag: DW_TAG_member, name: "get_ownership", scope: !3856, file: !3808, line: 145, baseType: !3953, size: 64, offset: 384)
!3953 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3954, size: 64)
!3954 = !DISubroutineType(types: !3955)
!3955 = !{null, !3813, !1882, !1883}
!3956 = !DIDerivedType(tag: DW_TAG_member, name: "sd", scope: !3807, file: !3808, line: 70, baseType: !3957, size: 64, offset: 384)
!3957 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3958, size: 64)
!3958 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_node", file: !838, line: 123, size: 1024, elements: !3959)
!3959 = !{!3960, !3961, !3962, !3963, !3964, !3965, !3966, !3967, !4154, !4155, !4156, !4157, !4158}
!3960 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !3958, file: !838, line: 124, baseType: !388, size: 32)
!3961 = !DIDerivedType(tag: DW_TAG_member, name: "active", scope: !3958, file: !838, line: 125, baseType: !388, size: 32, offset: 32)
!3962 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !3958, file: !838, line: 135, baseType: !3957, size: 64, offset: 64)
!3963 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3958, file: !838, line: 136, baseType: !297, size: 64, offset: 128)
!3964 = !DIDerivedType(tag: DW_TAG_member, name: "rb", scope: !3958, file: !838, line: 138, baseType: !438, size: 192, align: 64, offset: 192)
!3965 = !DIDerivedType(tag: DW_TAG_member, name: "ns", scope: !3958, file: !838, line: 140, baseType: !2244, size: 64, offset: 384)
!3966 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !3958, file: !838, line: 141, baseType: !7, size: 32, offset: 448)
!3967 = !DIDerivedType(tag: DW_TAG_member, scope: !3958, file: !838, line: 142, baseType: !3968, size: 256, offset: 512)
!3968 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3958, file: !838, line: 142, size: 256, elements: !3969)
!3969 = !{!3970, !4010, !4014}
!3970 = !DIDerivedType(tag: DW_TAG_member, name: "dir", scope: !3968, file: !838, line: 143, baseType: !3971, size: 192)
!3971 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_elem_dir", file: !838, line: 91, size: 192, elements: !3972)
!3972 = !{!3973, !3974, !3975}
!3973 = !DIDerivedType(tag: DW_TAG_member, name: "subdirs", scope: !3971, file: !838, line: 92, baseType: !317, size: 64)
!3974 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !3971, file: !838, line: 94, baseType: !1133, size: 64, offset: 64)
!3975 = !DIDerivedType(tag: DW_TAG_member, name: "root", scope: !3971, file: !838, line: 100, baseType: !3976, size: 64, offset: 128)
!3976 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3977, size: 64)
!3977 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_root", file: !838, line: 180, size: 704, elements: !3978)
!3978 = !{!3979, !3980, !3981, !3982, !3983, !3984, !4008, !4009}
!3979 = !DIDerivedType(tag: DW_TAG_member, name: "kn", scope: !3977, file: !838, line: 182, baseType: !3957, size: 64)
!3980 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3977, file: !838, line: 183, baseType: !7, size: 32, offset: 64)
!3981 = !DIDerivedType(tag: DW_TAG_member, name: "ino_idr", scope: !3977, file: !838, line: 186, baseType: !1981, size: 192, offset: 128)
!3982 = !DIDerivedType(tag: DW_TAG_member, name: "last_id_lowbits", scope: !3977, file: !838, line: 187, baseType: !707, size: 32, offset: 320)
!3983 = !DIDerivedType(tag: DW_TAG_member, name: "id_highbits", scope: !3977, file: !838, line: 188, baseType: !707, size: 32, offset: 352)
!3984 = !DIDerivedType(tag: DW_TAG_member, name: "syscall_ops", scope: !3977, file: !838, line: 189, baseType: !3985, size: 64, offset: 384)
!3985 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3986, size: 64)
!3986 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_syscall_ops", file: !838, line: 168, size: 320, elements: !3987)
!3987 = !{!3988, !3992, !3996, !4000, !4004}
!3988 = !DIDerivedType(tag: DW_TAG_member, name: "show_options", scope: !3986, file: !838, line: 169, baseType: !3989, size: 64)
!3989 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3990, size: 64)
!3990 = !DISubroutineType(types: !3991)
!3991 = !{!37, !942, !3976}
!3992 = !DIDerivedType(tag: DW_TAG_member, name: "mkdir", scope: !3986, file: !838, line: 171, baseType: !3993, size: 64, offset: 64)
!3993 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3994, size: 64)
!3994 = !DISubroutineType(types: !3995)
!3995 = !{!37, !3957, !297, !646}
!3996 = !DIDerivedType(tag: DW_TAG_member, name: "rmdir", scope: !3986, file: !838, line: 173, baseType: !3997, size: 64, offset: 128)
!3997 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3998, size: 64)
!3998 = !DISubroutineType(types: !3999)
!3999 = !{!37, !3957}
!4000 = !DIDerivedType(tag: DW_TAG_member, name: "rename", scope: !3986, file: !838, line: 174, baseType: !4001, size: 64, offset: 192)
!4001 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4002, size: 64)
!4002 = !DISubroutineType(types: !4003)
!4003 = !{!37, !3957, !3957, !297}
!4004 = !DIDerivedType(tag: DW_TAG_member, name: "show_path", scope: !3986, file: !838, line: 176, baseType: !4005, size: 64, offset: 256)
!4005 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4006, size: 64)
!4006 = !DISubroutineType(types: !4007)
!4007 = !{!37, !942, !3957, !3976}
!4008 = !DIDerivedType(tag: DW_TAG_member, name: "supers", scope: !3977, file: !838, line: 192, baseType: !289, size: 128, offset: 448)
!4009 = !DIDerivedType(tag: DW_TAG_member, name: "deactivate_waitq", scope: !3977, file: !838, line: 194, baseType: !1100, size: 128, offset: 576)
!4010 = !DIDerivedType(tag: DW_TAG_member, name: "symlink", scope: !3968, file: !838, line: 144, baseType: !4011, size: 64)
!4011 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_elem_symlink", file: !838, line: 103, size: 64, elements: !4012)
!4012 = !{!4013}
!4013 = !DIDerivedType(tag: DW_TAG_member, name: "target_kn", scope: !4011, file: !838, line: 104, baseType: !3957, size: 64)
!4014 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !3968, file: !838, line: 145, baseType: !4015, size: 256)
!4015 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_elem_attr", file: !838, line: 107, size: 256, elements: !4016)
!4016 = !{!4017, !4149, !4152, !4153}
!4017 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !4015, file: !838, line: 108, baseType: !4018, size: 64)
!4018 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4019, size: 64)
!4019 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4020)
!4020 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_ops", file: !838, line: 217, size: 768, elements: !4021)
!4021 = !{!4022, !4126, !4130, !4131, !4132, !4133, !4134, !4138, !4139, !4140, !4141, !4145}
!4022 = !DIDerivedType(tag: DW_TAG_member, name: "open", scope: !4020, file: !838, line: 222, baseType: !4023, size: 64)
!4023 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4024, size: 64)
!4024 = !DISubroutineType(types: !4025)
!4025 = !{!37, !4026}
!4026 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4027, size: 64)
!4027 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_open_file", file: !838, line: 197, size: 1088, elements: !4028)
!4028 = !{!4029, !4030, !4031, !4032, !4033, !4034, !4035, !4036, !4037, !4038, !4039, !4040, !4041}
!4029 = !DIDerivedType(tag: DW_TAG_member, name: "kn", scope: !4027, file: !838, line: 199, baseType: !3957, size: 64)
!4030 = !DIDerivedType(tag: DW_TAG_member, name: "file", scope: !4027, file: !838, line: 200, baseType: !1010, size: 64, offset: 64)
!4031 = !DIDerivedType(tag: DW_TAG_member, name: "seq_file", scope: !4027, file: !838, line: 201, baseType: !942, size: 64, offset: 128)
!4032 = !DIDerivedType(tag: DW_TAG_member, name: "priv", scope: !4027, file: !838, line: 202, baseType: !570, size: 64, offset: 192)
!4033 = !DIDerivedType(tag: DW_TAG_member, name: "mutex", scope: !4027, file: !838, line: 205, baseType: !954, size: 192, offset: 256)
!4034 = !DIDerivedType(tag: DW_TAG_member, name: "prealloc_mutex", scope: !4027, file: !838, line: 206, baseType: !954, size: 192, offset: 448)
!4035 = !DIDerivedType(tag: DW_TAG_member, name: "event", scope: !4027, file: !838, line: 207, baseType: !37, size: 32, offset: 640)
!4036 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !4027, file: !838, line: 208, baseType: !289, size: 128, offset: 704)
!4037 = !DIDerivedType(tag: DW_TAG_member, name: "prealloc_buf", scope: !4027, file: !838, line: 209, baseType: !577, size: 64, offset: 832)
!4038 = !DIDerivedType(tag: DW_TAG_member, name: "atomic_write_len", scope: !4027, file: !838, line: 211, baseType: !594, size: 64, offset: 896)
!4039 = !DIDerivedType(tag: DW_TAG_member, name: "mmapped", scope: !4027, file: !838, line: 212, baseType: !540, size: 1, offset: 960, flags: DIFlagBitField, extraData: i64 960)
!4040 = !DIDerivedType(tag: DW_TAG_member, name: "released", scope: !4027, file: !838, line: 213, baseType: !540, size: 1, offset: 961, flags: DIFlagBitField, extraData: i64 960)
!4041 = !DIDerivedType(tag: DW_TAG_member, name: "vm_ops", scope: !4027, file: !838, line: 214, baseType: !4042, size: 64, offset: 1024)
!4042 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4043, size: 64)
!4043 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4044)
!4044 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vm_operations_struct", file: !19, line: 557, size: 832, elements: !4045)
!4045 = !{!4046, !4050, !4051, !4055, !4059, !4100, !4104, !4108, !4112, !4113, !4114, !4118, !4122}
!4046 = !DIDerivedType(tag: DW_TAG_member, name: "open", scope: !4044, file: !19, line: 558, baseType: !4047, size: 64)
!4047 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4048, size: 64)
!4048 = !DISubroutineType(types: !4049)
!4049 = !{null, !1115}
!4050 = !DIDerivedType(tag: DW_TAG_member, name: "close", scope: !4044, file: !19, line: 559, baseType: !4047, size: 64, offset: 64)
!4051 = !DIDerivedType(tag: DW_TAG_member, name: "split", scope: !4044, file: !19, line: 560, baseType: !4052, size: 64, offset: 128)
!4052 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4053, size: 64)
!4053 = !DISubroutineType(types: !4054)
!4054 = !{!37, !1115, !317}
!4055 = !DIDerivedType(tag: DW_TAG_member, name: "mremap", scope: !4044, file: !19, line: 561, baseType: !4056, size: 64, offset: 192)
!4056 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4057, size: 64)
!4057 = !DISubroutineType(types: !4058)
!4058 = !{!37, !1115}
!4059 = !DIDerivedType(tag: DW_TAG_member, name: "fault", scope: !4044, file: !19, line: 562, baseType: !4060, size: 64, offset: 256)
!4060 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4061, size: 64)
!4061 = !DISubroutineType(types: !4062)
!4062 = !{!4063, !4064}
!4063 = !DIDerivedType(tag: DW_TAG_typedef, name: "vm_fault_t", file: !626, line: 682, baseType: !7)
!4064 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4065, size: 64)
!4065 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vm_fault", file: !19, line: 508, size: 768, elements: !4066)
!4066 = !{!4067, !4068, !4069, !4070, !4071, !4072, !4079, !4086, !4092, !4093, !4094, !4096, !4098}
!4067 = !DIDerivedType(tag: DW_TAG_member, name: "vma", scope: !4065, file: !19, line: 509, baseType: !1115, size: 64)
!4068 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !4065, file: !19, line: 510, baseType: !7, size: 32, offset: 64)
!4069 = !DIDerivedType(tag: DW_TAG_member, name: "gfp_mask", scope: !4065, file: !19, line: 511, baseType: !1990, size: 32, offset: 96)
!4070 = !DIDerivedType(tag: DW_TAG_member, name: "pgoff", scope: !4065, file: !19, line: 512, baseType: !317, size: 64, offset: 128)
!4071 = !DIDerivedType(tag: DW_TAG_member, name: "address", scope: !4065, file: !19, line: 513, baseType: !317, size: 64, offset: 192)
!4072 = !DIDerivedType(tag: DW_TAG_member, name: "pmd", scope: !4065, file: !19, line: 514, baseType: !4073, size: 64, offset: 256)
!4073 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4074, size: 64)
!4074 = !DIDerivedType(tag: DW_TAG_typedef, name: "pmd_t", file: !1148, line: 385, baseType: !4075)
!4075 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1148, line: 385, size: 64, elements: !4076)
!4076 = !{!4077}
!4077 = !DIDerivedType(tag: DW_TAG_member, name: "pmd", scope: !4075, file: !1148, line: 385, baseType: !4078, size: 64)
!4078 = !DIDerivedType(tag: DW_TAG_typedef, name: "pmdval_t", file: !1153, line: 15, baseType: !317)
!4079 = !DIDerivedType(tag: DW_TAG_member, name: "pud", scope: !4065, file: !19, line: 516, baseType: !4080, size: 64, offset: 320)
!4080 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4081, size: 64)
!4081 = !DIDerivedType(tag: DW_TAG_typedef, name: "pud_t", file: !1148, line: 359, baseType: !4082)
!4082 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1148, line: 359, size: 64, elements: !4083)
!4083 = !{!4084}
!4084 = !DIDerivedType(tag: DW_TAG_member, name: "pud", scope: !4082, file: !1148, line: 359, baseType: !4085, size: 64)
!4085 = !DIDerivedType(tag: DW_TAG_typedef, name: "pudval_t", file: !1153, line: 16, baseType: !317)
!4086 = !DIDerivedType(tag: DW_TAG_member, name: "orig_pte", scope: !4065, file: !19, line: 519, baseType: !4087, size: 64, offset: 384)
!4087 = !DIDerivedType(tag: DW_TAG_typedef, name: "pte_t", file: !1153, line: 21, baseType: !4088)
!4088 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1153, line: 21, size: 64, elements: !4089)
!4089 = !{!4090}
!4090 = !DIDerivedType(tag: DW_TAG_member, name: "pte", scope: !4088, file: !1153, line: 21, baseType: !4091, size: 64)
!4091 = !DIDerivedType(tag: DW_TAG_typedef, name: "pteval_t", file: !1153, line: 14, baseType: !317)
!4092 = !DIDerivedType(tag: DW_TAG_member, name: "cow_page", scope: !4065, file: !19, line: 521, baseType: !624, size: 64, offset: 448)
!4093 = !DIDerivedType(tag: DW_TAG_member, name: "page", scope: !4065, file: !19, line: 522, baseType: !624, size: 64, offset: 512)
!4094 = !DIDerivedType(tag: DW_TAG_member, name: "pte", scope: !4065, file: !19, line: 528, baseType: !4095, size: 64, offset: 576)
!4095 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4087, size: 64)
!4096 = !DIDerivedType(tag: DW_TAG_member, name: "ptl", scope: !4065, file: !19, line: 532, baseType: !4097, size: 64, offset: 640)
!4097 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !729, size: 64)
!4098 = !DIDerivedType(tag: DW_TAG_member, name: "prealloc_pte", scope: !4065, file: !19, line: 536, baseType: !4099, size: 64, offset: 704)
!4099 = !DIDerivedType(tag: DW_TAG_typedef, name: "pgtable_t", file: !1148, line: 509, baseType: !624)
!4100 = !DIDerivedType(tag: DW_TAG_member, name: "huge_fault", scope: !4044, file: !19, line: 563, baseType: !4101, size: 64, offset: 320)
!4101 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4102, size: 64)
!4102 = !DISubroutineType(types: !4103)
!4103 = !{!4063, !4064, !18}
!4104 = !DIDerivedType(tag: DW_TAG_member, name: "map_pages", scope: !4044, file: !19, line: 565, baseType: !4105, size: 64, offset: 384)
!4105 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4106, size: 64)
!4106 = !DISubroutineType(types: !4107)
!4107 = !{null, !4064, !317, !317}
!4108 = !DIDerivedType(tag: DW_TAG_member, name: "pagesize", scope: !4044, file: !19, line: 567, baseType: !4109, size: 64, offset: 448)
!4109 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4110, size: 64)
!4110 = !DISubroutineType(types: !4111)
!4111 = !{!317, !1115}
!4112 = !DIDerivedType(tag: DW_TAG_member, name: "page_mkwrite", scope: !4044, file: !19, line: 571, baseType: !4060, size: 64, offset: 512)
!4113 = !DIDerivedType(tag: DW_TAG_member, name: "pfn_mkwrite", scope: !4044, file: !19, line: 574, baseType: !4060, size: 64, offset: 576)
!4114 = !DIDerivedType(tag: DW_TAG_member, name: "access", scope: !4044, file: !19, line: 579, baseType: !4115, size: 64, offset: 640)
!4115 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4116, size: 64)
!4116 = !DISubroutineType(types: !4117)
!4117 = !{!37, !1115, !317, !570, !37, !37}
!4118 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !4044, file: !19, line: 585, baseType: !4119, size: 64, offset: 704)
!4119 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4120, size: 64)
!4120 = !DISubroutineType(types: !4121)
!4121 = !{!297, !1115}
!4122 = !DIDerivedType(tag: DW_TAG_member, name: "find_special_page", scope: !4044, file: !19, line: 615, baseType: !4123, size: 64, offset: 768)
!4123 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4124, size: 64)
!4124 = !DISubroutineType(types: !4125)
!4125 = !{!624, !1115, !317}
!4126 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !4020, file: !838, line: 223, baseType: !4127, size: 64, offset: 64)
!4127 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4128, size: 64)
!4128 = !DISubroutineType(types: !4129)
!4129 = !{null, !4026}
!4130 = !DIDerivedType(tag: DW_TAG_member, name: "seq_show", scope: !4020, file: !838, line: 236, baseType: !979, size: 64, offset: 128)
!4131 = !DIDerivedType(tag: DW_TAG_member, name: "seq_start", scope: !4020, file: !838, line: 238, baseType: !966, size: 64, offset: 192)
!4132 = !DIDerivedType(tag: DW_TAG_member, name: "seq_next", scope: !4020, file: !838, line: 239, baseType: !975, size: 64, offset: 256)
!4133 = !DIDerivedType(tag: DW_TAG_member, name: "seq_stop", scope: !4020, file: !838, line: 240, baseType: !971, size: 64, offset: 320)
!4134 = !DIDerivedType(tag: DW_TAG_member, name: "read", scope: !4020, file: !838, line: 242, baseType: !4135, size: 64, offset: 384)
!4135 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4136, size: 64)
!4136 = !DISubroutineType(types: !4137)
!4137 = !{!1015, !4026, !577, !594, !824}
!4138 = !DIDerivedType(tag: DW_TAG_member, name: "atomic_write_len", scope: !4020, file: !838, line: 252, baseType: !594, size: 64, offset: 448)
!4139 = !DIDerivedType(tag: DW_TAG_member, name: "prealloc", scope: !4020, file: !838, line: 259, baseType: !540, size: 8, offset: 512)
!4140 = !DIDerivedType(tag: DW_TAG_member, name: "write", scope: !4020, file: !838, line: 260, baseType: !4135, size: 64, offset: 576)
!4141 = !DIDerivedType(tag: DW_TAG_member, name: "poll", scope: !4020, file: !838, line: 263, baseType: !4142, size: 64, offset: 640)
!4142 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4143, size: 64)
!4143 = !DISubroutineType(types: !4144)
!4144 = !{!1089, !4026, !1090}
!4145 = !DIDerivedType(tag: DW_TAG_member, name: "mmap", scope: !4020, file: !838, line: 266, baseType: !4146, size: 64, offset: 704)
!4146 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4147, size: 64)
!4147 = !DISubroutineType(types: !4148)
!4148 = !{!37, !4026, !1115}
!4149 = !DIDerivedType(tag: DW_TAG_member, name: "open", scope: !4015, file: !838, line: 109, baseType: !4150, size: 64, offset: 64)
!4150 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4151, size: 64)
!4151 = !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_open_node", file: !838, line: 31, flags: DIFlagFwdDecl)
!4152 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !4015, file: !838, line: 110, baseType: !824, size: 64, offset: 128)
!4153 = !DIDerivedType(tag: DW_TAG_member, name: "notify_next", scope: !4015, file: !838, line: 111, baseType: !3957, size: 64, offset: 192)
!4154 = !DIDerivedType(tag: DW_TAG_member, name: "priv", scope: !3958, file: !838, line: 148, baseType: !570, size: 64, offset: 768)
!4155 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !3958, file: !838, line: 154, baseType: !336, size: 64, offset: 832)
!4156 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3958, file: !838, line: 156, baseType: !477, size: 16, offset: 896)
!4157 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !3958, file: !838, line: 157, baseType: !646, size: 16, offset: 912)
!4158 = !DIDerivedType(tag: DW_TAG_member, name: "iattr", scope: !3958, file: !838, line: 158, baseType: !4159, size: 64, offset: 960)
!4159 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4160, size: 64)
!4160 = !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_iattrs", file: !838, line: 32, flags: DIFlagFwdDecl)
!4161 = !DIDerivedType(tag: DW_TAG_member, name: "kref", scope: !3807, file: !3808, line: 71, baseType: !4162, size: 32, offset: 448)
!4162 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kref", file: !4163, line: 19, size: 32, elements: !4164)
!4163 = !DIFile(filename: "./include/linux/kref.h", directory: "/home/lizy2001/genbc/linux")
!4164 = !{!4165}
!4165 = !DIDerivedType(tag: DW_TAG_member, name: "refcount", scope: !4162, file: !4163, line: 20, baseType: !1271, size: 32)
!4166 = !DIDerivedType(tag: DW_TAG_member, name: "state_initialized", scope: !3807, file: !3808, line: 75, baseType: !7, size: 1, offset: 480, flags: DIFlagBitField, extraData: i64 480)
!4167 = !DIDerivedType(tag: DW_TAG_member, name: "state_in_sysfs", scope: !3807, file: !3808, line: 76, baseType: !7, size: 1, offset: 481, flags: DIFlagBitField, extraData: i64 480)
!4168 = !DIDerivedType(tag: DW_TAG_member, name: "state_add_uevent_sent", scope: !3807, file: !3808, line: 77, baseType: !7, size: 1, offset: 482, flags: DIFlagBitField, extraData: i64 480)
!4169 = !DIDerivedType(tag: DW_TAG_member, name: "state_remove_uevent_sent", scope: !3807, file: !3808, line: 78, baseType: !7, size: 1, offset: 483, flags: DIFlagBitField, extraData: i64 480)
!4170 = !DIDerivedType(tag: DW_TAG_member, name: "uevent_suppress", scope: !3807, file: !3808, line: 79, baseType: !7, size: 1, offset: 484, flags: DIFlagBitField, extraData: i64 480)
!4171 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !3803, file: !3804, line: 463, baseType: !4172, size: 64, offset: 512)
!4172 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3803, size: 64)
!4173 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !3803, file: !3804, line: 465, baseType: !4174, size: 64, offset: 576)
!4174 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4175, size: 64)
!4175 = !DICompositeType(tag: DW_TAG_structure_type, name: "device_private", file: !3804, line: 36, flags: DIFlagFwdDecl)
!4176 = !DIDerivedType(tag: DW_TAG_member, name: "init_name", scope: !3803, file: !3804, line: 467, baseType: !297, size: 64, offset: 640)
!4177 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !3803, file: !3804, line: 468, baseType: !4178, size: 64, offset: 704)
!4178 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4179, size: 64)
!4179 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4180)
!4180 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_type", file: !3804, line: 87, size: 384, elements: !4181)
!4181 = !{!4182, !4183, !4184, !4188, !4193, !4197}
!4182 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !4180, file: !3804, line: 88, baseType: !297, size: 64)
!4183 = !DIDerivedType(tag: DW_TAG_member, name: "groups", scope: !4180, file: !3804, line: 89, baseType: !3884, size: 64, offset: 64)
!4184 = !DIDerivedType(tag: DW_TAG_member, name: "uevent", scope: !4180, file: !3804, line: 90, baseType: !4185, size: 64, offset: 128)
!4185 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4186, size: 64)
!4186 = !DISubroutineType(types: !4187)
!4187 = !{!37, !4172, !3841}
!4188 = !DIDerivedType(tag: DW_TAG_member, name: "devnode", scope: !4180, file: !3804, line: 91, baseType: !4189, size: 64, offset: 192)
!4189 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4190, size: 64)
!4190 = !DISubroutineType(types: !4191)
!4191 = !{!577, !4172, !4192, !1882, !1883}
!4192 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !646, size: 64)
!4193 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !4180, file: !3804, line: 93, baseType: !4194, size: 64, offset: 256)
!4194 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4195, size: 64)
!4195 = !DISubroutineType(types: !4196)
!4196 = !{null, !4172}
!4197 = !DIDerivedType(tag: DW_TAG_member, name: "pm", scope: !4180, file: !3804, line: 95, baseType: !4198, size: 64, offset: 320)
!4198 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4199, size: 64)
!4199 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4200)
!4200 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pm_ops", file: !4201, line: 278, size: 1472, elements: !4202)
!4201 = !DIFile(filename: "./include/linux/pm.h", directory: "/home/lizy2001/genbc/linux")
!4202 = !{!4203, !4207, !4208, !4209, !4210, !4211, !4212, !4213, !4214, !4215, !4216, !4217, !4218, !4219, !4220, !4221, !4222, !4223, !4224, !4225, !4226, !4227, !4228}
!4203 = !DIDerivedType(tag: DW_TAG_member, name: "prepare", scope: !4200, file: !4201, line: 279, baseType: !4204, size: 64)
!4204 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4205, size: 64)
!4205 = !DISubroutineType(types: !4206)
!4206 = !{!37, !4172}
!4207 = !DIDerivedType(tag: DW_TAG_member, name: "complete", scope: !4200, file: !4201, line: 280, baseType: !4194, size: 64, offset: 64)
!4208 = !DIDerivedType(tag: DW_TAG_member, name: "suspend", scope: !4200, file: !4201, line: 281, baseType: !4204, size: 64, offset: 128)
!4209 = !DIDerivedType(tag: DW_TAG_member, name: "resume", scope: !4200, file: !4201, line: 282, baseType: !4204, size: 64, offset: 192)
!4210 = !DIDerivedType(tag: DW_TAG_member, name: "freeze", scope: !4200, file: !4201, line: 283, baseType: !4204, size: 64, offset: 256)
!4211 = !DIDerivedType(tag: DW_TAG_member, name: "thaw", scope: !4200, file: !4201, line: 284, baseType: !4204, size: 64, offset: 320)
!4212 = !DIDerivedType(tag: DW_TAG_member, name: "poweroff", scope: !4200, file: !4201, line: 285, baseType: !4204, size: 64, offset: 384)
!4213 = !DIDerivedType(tag: DW_TAG_member, name: "restore", scope: !4200, file: !4201, line: 286, baseType: !4204, size: 64, offset: 448)
!4214 = !DIDerivedType(tag: DW_TAG_member, name: "suspend_late", scope: !4200, file: !4201, line: 287, baseType: !4204, size: 64, offset: 512)
!4215 = !DIDerivedType(tag: DW_TAG_member, name: "resume_early", scope: !4200, file: !4201, line: 288, baseType: !4204, size: 64, offset: 576)
!4216 = !DIDerivedType(tag: DW_TAG_member, name: "freeze_late", scope: !4200, file: !4201, line: 289, baseType: !4204, size: 64, offset: 640)
!4217 = !DIDerivedType(tag: DW_TAG_member, name: "thaw_early", scope: !4200, file: !4201, line: 290, baseType: !4204, size: 64, offset: 704)
!4218 = !DIDerivedType(tag: DW_TAG_member, name: "poweroff_late", scope: !4200, file: !4201, line: 291, baseType: !4204, size: 64, offset: 768)
!4219 = !DIDerivedType(tag: DW_TAG_member, name: "restore_early", scope: !4200, file: !4201, line: 292, baseType: !4204, size: 64, offset: 832)
!4220 = !DIDerivedType(tag: DW_TAG_member, name: "suspend_noirq", scope: !4200, file: !4201, line: 293, baseType: !4204, size: 64, offset: 896)
!4221 = !DIDerivedType(tag: DW_TAG_member, name: "resume_noirq", scope: !4200, file: !4201, line: 294, baseType: !4204, size: 64, offset: 960)
!4222 = !DIDerivedType(tag: DW_TAG_member, name: "freeze_noirq", scope: !4200, file: !4201, line: 295, baseType: !4204, size: 64, offset: 1024)
!4223 = !DIDerivedType(tag: DW_TAG_member, name: "thaw_noirq", scope: !4200, file: !4201, line: 296, baseType: !4204, size: 64, offset: 1088)
!4224 = !DIDerivedType(tag: DW_TAG_member, name: "poweroff_noirq", scope: !4200, file: !4201, line: 297, baseType: !4204, size: 64, offset: 1152)
!4225 = !DIDerivedType(tag: DW_TAG_member, name: "restore_noirq", scope: !4200, file: !4201, line: 298, baseType: !4204, size: 64, offset: 1216)
!4226 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_suspend", scope: !4200, file: !4201, line: 299, baseType: !4204, size: 64, offset: 1280)
!4227 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_resume", scope: !4200, file: !4201, line: 300, baseType: !4204, size: 64, offset: 1344)
!4228 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_idle", scope: !4200, file: !4201, line: 301, baseType: !4204, size: 64, offset: 1408)
!4229 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !3803, file: !3804, line: 470, baseType: !4230, size: 64, offset: 768)
!4230 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4231, size: 64)
!4231 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bus_type", file: !4232, line: 82, size: 1408, elements: !4233)
!4232 = !DIFile(filename: "./include/linux/device/bus.h", directory: "/home/lizy2001/genbc/linux")
!4233 = !{!4234, !4235, !4236, !4237, !4238, !4239, !4240, !4300, !4301, !4302, !4303, !4304, !4305, !4306, !4307, !4308, !4309, !4310, !4311, !4312, !4316, !4319, !4320}
!4234 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !4231, file: !4232, line: 83, baseType: !297, size: 64)
!4235 = !DIDerivedType(tag: DW_TAG_member, name: "dev_name", scope: !4231, file: !4232, line: 84, baseType: !297, size: 64, offset: 64)
!4236 = !DIDerivedType(tag: DW_TAG_member, name: "dev_root", scope: !4231, file: !4232, line: 85, baseType: !4172, size: 64, offset: 128)
!4237 = !DIDerivedType(tag: DW_TAG_member, name: "bus_groups", scope: !4231, file: !4232, line: 86, baseType: !3884, size: 64, offset: 192)
!4238 = !DIDerivedType(tag: DW_TAG_member, name: "dev_groups", scope: !4231, file: !4232, line: 87, baseType: !3884, size: 64, offset: 256)
!4239 = !DIDerivedType(tag: DW_TAG_member, name: "drv_groups", scope: !4231, file: !4232, line: 88, baseType: !3884, size: 64, offset: 320)
!4240 = !DIDerivedType(tag: DW_TAG_member, name: "match", scope: !4231, file: !4232, line: 90, baseType: !4241, size: 64, offset: 384)
!4241 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4242, size: 64)
!4242 = !DISubroutineType(types: !4243)
!4243 = !{!37, !4172, !4244}
!4244 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4245, size: 64)
!4245 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_driver", file: !4246, line: 95, size: 1152, elements: !4247)
!4246 = !DIFile(filename: "./include/linux/device/driver.h", directory: "/home/lizy2001/genbc/linux")
!4247 = !{!4248, !4249, !4250, !4251, !4252, !4253, !4259, !4269, !4280, !4281, !4282, !4283, !4284, !4292, !4293, !4294, !4295, !4296, !4297}
!4248 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !4245, file: !4246, line: 96, baseType: !297, size: 64)
!4249 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !4245, file: !4246, line: 97, baseType: !4230, size: 64, offset: 64)
!4250 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !4245, file: !4246, line: 99, baseType: !852, size: 64, offset: 128)
!4251 = !DIDerivedType(tag: DW_TAG_member, name: "mod_name", scope: !4245, file: !4246, line: 100, baseType: !297, size: 64, offset: 192)
!4252 = !DIDerivedType(tag: DW_TAG_member, name: "suppress_bind_attrs", scope: !4245, file: !4246, line: 102, baseType: !540, size: 8, offset: 256)
!4253 = !DIDerivedType(tag: DW_TAG_member, name: "probe_type", scope: !4245, file: !4246, line: 103, baseType: !4254, size: 32, offset: 288)
!4254 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "probe_type", file: !4246, line: 44, baseType: !7, size: 32, elements: !4255)
!4255 = !{!4256, !4257, !4258}
!4256 = !DIEnumerator(name: "PROBE_DEFAULT_STRATEGY", value: 0, isUnsigned: true)
!4257 = !DIEnumerator(name: "PROBE_PREFER_ASYNCHRONOUS", value: 1, isUnsigned: true)
!4258 = !DIEnumerator(name: "PROBE_FORCE_SYNCHRONOUS", value: 2, isUnsigned: true)
!4259 = !DIDerivedType(tag: DW_TAG_member, name: "of_match_table", scope: !4245, file: !4246, line: 105, baseType: !4260, size: 64, offset: 320)
!4260 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4261, size: 64)
!4261 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4262)
!4262 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "of_device_id", file: !4263, line: 262, size: 1600, elements: !4264)
!4263 = !DIFile(filename: "./include/linux/mod_devicetable.h", directory: "/home/lizy2001/genbc/linux")
!4264 = !{!4265, !4266, !4267, !4268}
!4265 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !4262, file: !4263, line: 263, baseType: !3761, size: 256)
!4266 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !4262, file: !4263, line: 264, baseType: !3761, size: 256, offset: 256)
!4267 = !DIDerivedType(tag: DW_TAG_member, name: "compatible", scope: !4262, file: !4263, line: 265, baseType: !2990, size: 1024, offset: 512)
!4268 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !4262, file: !4263, line: 266, baseType: !2244, size: 64, offset: 1536)
!4269 = !DIDerivedType(tag: DW_TAG_member, name: "acpi_match_table", scope: !4245, file: !4246, line: 106, baseType: !4270, size: 64, offset: 384)
!4270 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4271, size: 64)
!4271 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4272)
!4272 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "acpi_device_id", file: !4263, line: 210, size: 256, elements: !4273)
!4273 = !{!4274, !4276, !4278, !4279}
!4274 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !4272, file: !4263, line: 211, baseType: !4275, size: 72)
!4275 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1398, size: 72, elements: !2074)
!4276 = !DIDerivedType(tag: DW_TAG_member, name: "driver_data", scope: !4272, file: !4263, line: 212, baseType: !4277, size: 64, offset: 128)
!4277 = !DIDerivedType(tag: DW_TAG_typedef, name: "kernel_ulong_t", file: !4263, line: 14, baseType: !317)
!4278 = !DIDerivedType(tag: DW_TAG_member, name: "cls", scope: !4272, file: !4263, line: 213, baseType: !468, size: 32, offset: 192)
!4279 = !DIDerivedType(tag: DW_TAG_member, name: "cls_msk", scope: !4272, file: !4263, line: 214, baseType: !468, size: 32, offset: 224)
!4280 = !DIDerivedType(tag: DW_TAG_member, name: "probe", scope: !4245, file: !4246, line: 108, baseType: !4204, size: 64, offset: 448)
!4281 = !DIDerivedType(tag: DW_TAG_member, name: "sync_state", scope: !4245, file: !4246, line: 109, baseType: !4194, size: 64, offset: 512)
!4282 = !DIDerivedType(tag: DW_TAG_member, name: "remove", scope: !4245, file: !4246, line: 110, baseType: !4204, size: 64, offset: 576)
!4283 = !DIDerivedType(tag: DW_TAG_member, name: "shutdown", scope: !4245, file: !4246, line: 111, baseType: !4194, size: 64, offset: 640)
!4284 = !DIDerivedType(tag: DW_TAG_member, name: "suspend", scope: !4245, file: !4246, line: 112, baseType: !4285, size: 64, offset: 704)
!4285 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4286, size: 64)
!4286 = !DISubroutineType(types: !4287)
!4287 = !{!37, !4172, !4288}
!4288 = !DIDerivedType(tag: DW_TAG_typedef, name: "pm_message_t", file: !4201, line: 52, baseType: !4289)
!4289 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pm_message", file: !4201, line: 50, size: 32, elements: !4290)
!4290 = !{!4291}
!4291 = !DIDerivedType(tag: DW_TAG_member, name: "event", scope: !4289, file: !4201, line: 51, baseType: !37, size: 32)
!4292 = !DIDerivedType(tag: DW_TAG_member, name: "resume", scope: !4245, file: !4246, line: 113, baseType: !4204, size: 64, offset: 768)
!4293 = !DIDerivedType(tag: DW_TAG_member, name: "groups", scope: !4245, file: !4246, line: 114, baseType: !3884, size: 64, offset: 832)
!4294 = !DIDerivedType(tag: DW_TAG_member, name: "dev_groups", scope: !4245, file: !4246, line: 115, baseType: !3884, size: 64, offset: 896)
!4295 = !DIDerivedType(tag: DW_TAG_member, name: "pm", scope: !4245, file: !4246, line: 117, baseType: !4198, size: 64, offset: 960)
!4296 = !DIDerivedType(tag: DW_TAG_member, name: "coredump", scope: !4245, file: !4246, line: 118, baseType: !4194, size: 64, offset: 1024)
!4297 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !4245, file: !4246, line: 120, baseType: !4298, size: 64, offset: 1088)
!4298 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4299, size: 64)
!4299 = !DICompositeType(tag: DW_TAG_structure_type, name: "driver_private", file: !4246, line: 120, flags: DIFlagFwdDecl)
!4300 = !DIDerivedType(tag: DW_TAG_member, name: "uevent", scope: !4231, file: !4232, line: 91, baseType: !4185, size: 64, offset: 448)
!4301 = !DIDerivedType(tag: DW_TAG_member, name: "probe", scope: !4231, file: !4232, line: 92, baseType: !4204, size: 64, offset: 512)
!4302 = !DIDerivedType(tag: DW_TAG_member, name: "sync_state", scope: !4231, file: !4232, line: 93, baseType: !4194, size: 64, offset: 576)
!4303 = !DIDerivedType(tag: DW_TAG_member, name: "remove", scope: !4231, file: !4232, line: 94, baseType: !4204, size: 64, offset: 640)
!4304 = !DIDerivedType(tag: DW_TAG_member, name: "shutdown", scope: !4231, file: !4232, line: 95, baseType: !4194, size: 64, offset: 704)
!4305 = !DIDerivedType(tag: DW_TAG_member, name: "online", scope: !4231, file: !4232, line: 97, baseType: !4204, size: 64, offset: 768)
!4306 = !DIDerivedType(tag: DW_TAG_member, name: "offline", scope: !4231, file: !4232, line: 98, baseType: !4204, size: 64, offset: 832)
!4307 = !DIDerivedType(tag: DW_TAG_member, name: "suspend", scope: !4231, file: !4232, line: 100, baseType: !4285, size: 64, offset: 896)
!4308 = !DIDerivedType(tag: DW_TAG_member, name: "resume", scope: !4231, file: !4232, line: 101, baseType: !4204, size: 64, offset: 960)
!4309 = !DIDerivedType(tag: DW_TAG_member, name: "num_vf", scope: !4231, file: !4232, line: 103, baseType: !4204, size: 64, offset: 1024)
!4310 = !DIDerivedType(tag: DW_TAG_member, name: "dma_configure", scope: !4231, file: !4232, line: 105, baseType: !4204, size: 64, offset: 1088)
!4311 = !DIDerivedType(tag: DW_TAG_member, name: "pm", scope: !4231, file: !4232, line: 107, baseType: !4198, size: 64, offset: 1152)
!4312 = !DIDerivedType(tag: DW_TAG_member, name: "iommu_ops", scope: !4231, file: !4232, line: 109, baseType: !4313, size: 64, offset: 1216)
!4313 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4314, size: 64)
!4314 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4315)
!4315 = !DICompositeType(tag: DW_TAG_structure_type, name: "iommu_ops", file: !4232, line: 109, flags: DIFlagFwdDecl)
!4316 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !4231, file: !4232, line: 111, baseType: !4317, size: 64, offset: 1280)
!4317 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4318, size: 64)
!4318 = !DICompositeType(tag: DW_TAG_structure_type, name: "subsys_private", file: !4232, line: 111, flags: DIFlagFwdDecl)
!4319 = !DIDerivedType(tag: DW_TAG_member, name: "lock_key", scope: !4231, file: !4232, line: 112, baseType: !861, offset: 1344)
!4320 = !DIDerivedType(tag: DW_TAG_member, name: "need_parent_lock", scope: !4231, file: !4232, line: 114, baseType: !540, size: 8, offset: 1344)
!4321 = !DIDerivedType(tag: DW_TAG_member, name: "driver", scope: !3803, file: !3804, line: 471, baseType: !4244, size: 64, offset: 832)
!4322 = !DIDerivedType(tag: DW_TAG_member, name: "platform_data", scope: !3803, file: !3804, line: 473, baseType: !570, size: 64, offset: 896)
!4323 = !DIDerivedType(tag: DW_TAG_member, name: "driver_data", scope: !3803, file: !3804, line: 475, baseType: !570, size: 64, offset: 960)
!4324 = !DIDerivedType(tag: DW_TAG_member, name: "mutex", scope: !3803, file: !3804, line: 480, baseType: !954, size: 192, offset: 1024)
!4325 = !DIDerivedType(tag: DW_TAG_member, name: "links", scope: !3803, file: !3804, line: 484, baseType: !4326, size: 576, offset: 1216)
!4326 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_links_info", file: !3804, line: 361, size: 576, elements: !4327)
!4327 = !{!4328, !4329, !4330, !4331, !4332, !4333}
!4328 = !DIDerivedType(tag: DW_TAG_member, name: "suppliers", scope: !4326, file: !3804, line: 362, baseType: !289, size: 128)
!4329 = !DIDerivedType(tag: DW_TAG_member, name: "consumers", scope: !4326, file: !3804, line: 363, baseType: !289, size: 128, offset: 128)
!4330 = !DIDerivedType(tag: DW_TAG_member, name: "needs_suppliers", scope: !4326, file: !3804, line: 364, baseType: !289, size: 128, offset: 256)
!4331 = !DIDerivedType(tag: DW_TAG_member, name: "defer_hook", scope: !4326, file: !3804, line: 365, baseType: !289, size: 128, offset: 384)
!4332 = !DIDerivedType(tag: DW_TAG_member, name: "need_for_probe", scope: !4326, file: !3804, line: 366, baseType: !540, size: 8, offset: 512)
!4333 = !DIDerivedType(tag: DW_TAG_member, name: "status", scope: !4326, file: !3804, line: 367, baseType: !4334, size: 32, offset: 544)
!4334 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "dl_dev_state", file: !3804, line: 343, baseType: !7, size: 32, elements: !4335)
!4335 = !{!4336, !4337, !4338, !4339}
!4336 = !DIEnumerator(name: "DL_DEV_NO_DRIVER", value: 0, isUnsigned: true)
!4337 = !DIEnumerator(name: "DL_DEV_PROBING", value: 1, isUnsigned: true)
!4338 = !DIEnumerator(name: "DL_DEV_DRIVER_BOUND", value: 2, isUnsigned: true)
!4339 = !DIEnumerator(name: "DL_DEV_UNBINDING", value: 3, isUnsigned: true)
!4340 = !DIDerivedType(tag: DW_TAG_member, name: "power", scope: !3803, file: !3804, line: 485, baseType: !4341, size: 2304, offset: 1792)
!4341 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pm_info", file: !4201, line: 565, size: 2304, elements: !4342)
!4342 = !{!4343, !4344, !4345, !4346, !4347, !4348, !4349, !4350, !4351, !4352, !4353, !4354, !4355, !4356, !4357, !4358, !4385, !4386, !4387, !4388, !4389, !4390, !4391, !4392, !4393, !4394, !4395, !4396, !4397, !4398, !4399, !4400, !4401, !4402, !4403, !4404, !4405, !4406, !4407, !4408, !4409, !4417, !4424, !4425, !4426, !4427, !4428, !4429, !4430, !4440, !4444}
!4343 = !DIDerivedType(tag: DW_TAG_member, name: "power_state", scope: !4341, file: !4201, line: 566, baseType: !4288, size: 32)
!4344 = !DIDerivedType(tag: DW_TAG_member, name: "can_wakeup", scope: !4341, file: !4201, line: 567, baseType: !7, size: 1, offset: 32, flags: DIFlagBitField, extraData: i64 32)
!4345 = !DIDerivedType(tag: DW_TAG_member, name: "async_suspend", scope: !4341, file: !4201, line: 568, baseType: !7, size: 1, offset: 33, flags: DIFlagBitField, extraData: i64 32)
!4346 = !DIDerivedType(tag: DW_TAG_member, name: "in_dpm_list", scope: !4341, file: !4201, line: 569, baseType: !540, size: 1, offset: 34, flags: DIFlagBitField, extraData: i64 32)
!4347 = !DIDerivedType(tag: DW_TAG_member, name: "is_prepared", scope: !4341, file: !4201, line: 570, baseType: !540, size: 1, offset: 35, flags: DIFlagBitField, extraData: i64 32)
!4348 = !DIDerivedType(tag: DW_TAG_member, name: "is_suspended", scope: !4341, file: !4201, line: 571, baseType: !540, size: 1, offset: 36, flags: DIFlagBitField, extraData: i64 32)
!4349 = !DIDerivedType(tag: DW_TAG_member, name: "is_noirq_suspended", scope: !4341, file: !4201, line: 572, baseType: !540, size: 1, offset: 37, flags: DIFlagBitField, extraData: i64 32)
!4350 = !DIDerivedType(tag: DW_TAG_member, name: "is_late_suspended", scope: !4341, file: !4201, line: 573, baseType: !540, size: 1, offset: 38, flags: DIFlagBitField, extraData: i64 32)
!4351 = !DIDerivedType(tag: DW_TAG_member, name: "no_pm", scope: !4341, file: !4201, line: 574, baseType: !540, size: 1, offset: 39, flags: DIFlagBitField, extraData: i64 32)
!4352 = !DIDerivedType(tag: DW_TAG_member, name: "early_init", scope: !4341, file: !4201, line: 575, baseType: !540, size: 1, offset: 40, flags: DIFlagBitField, extraData: i64 32)
!4353 = !DIDerivedType(tag: DW_TAG_member, name: "direct_complete", scope: !4341, file: !4201, line: 576, baseType: !540, size: 1, offset: 41, flags: DIFlagBitField, extraData: i64 32)
!4354 = !DIDerivedType(tag: DW_TAG_member, name: "driver_flags", scope: !4341, file: !4201, line: 577, baseType: !707, size: 32, offset: 64)
!4355 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !4341, file: !4201, line: 578, baseType: !729, offset: 96)
!4356 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !4341, file: !4201, line: 580, baseType: !289, size: 128, offset: 128)
!4357 = !DIDerivedType(tag: DW_TAG_member, name: "completion", scope: !4341, file: !4201, line: 581, baseType: !1547, size: 192, offset: 256)
!4358 = !DIDerivedType(tag: DW_TAG_member, name: "wakeup", scope: !4341, file: !4201, line: 582, baseType: !4359, size: 64, offset: 448)
!4359 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4360, size: 64)
!4360 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wakeup_source", file: !4361, line: 43, size: 1472, elements: !4362)
!4361 = !DIFile(filename: "./include/linux/pm_wakeup.h", directory: "/home/lizy2001/genbc/linux")
!4362 = !{!4363, !4364, !4365, !4366, !4367, !4370, !4371, !4372, !4373, !4374, !4375, !4376, !4377, !4378, !4379, !4380, !4381, !4382, !4383, !4384}
!4363 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !4360, file: !4361, line: 44, baseType: !297, size: 64)
!4364 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !4360, file: !4361, line: 45, baseType: !37, size: 32, offset: 64)
!4365 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !4360, file: !4361, line: 46, baseType: !289, size: 128, offset: 128)
!4366 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !4360, file: !4361, line: 47, baseType: !729, offset: 256)
!4367 = !DIDerivedType(tag: DW_TAG_member, name: "wakeirq", scope: !4360, file: !4361, line: 48, baseType: !4368, size: 64, offset: 256)
!4368 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4369, size: 64)
!4369 = !DICompositeType(tag: DW_TAG_structure_type, name: "wake_irq", file: !4201, line: 533, flags: DIFlagFwdDecl)
!4370 = !DIDerivedType(tag: DW_TAG_member, name: "timer", scope: !4360, file: !4361, line: 49, baseType: !2221, size: 320, offset: 320)
!4371 = !DIDerivedType(tag: DW_TAG_member, name: "timer_expires", scope: !4360, file: !4361, line: 50, baseType: !317, size: 64, offset: 640)
!4372 = !DIDerivedType(tag: DW_TAG_member, name: "total_time", scope: !4360, file: !4361, line: 51, baseType: !1341, size: 64, offset: 704)
!4373 = !DIDerivedType(tag: DW_TAG_member, name: "max_time", scope: !4360, file: !4361, line: 52, baseType: !1341, size: 64, offset: 768)
!4374 = !DIDerivedType(tag: DW_TAG_member, name: "last_time", scope: !4360, file: !4361, line: 53, baseType: !1341, size: 64, offset: 832)
!4375 = !DIDerivedType(tag: DW_TAG_member, name: "start_prevent_time", scope: !4360, file: !4361, line: 54, baseType: !1341, size: 64, offset: 896)
!4376 = !DIDerivedType(tag: DW_TAG_member, name: "prevent_sleep_time", scope: !4360, file: !4361, line: 55, baseType: !1341, size: 64, offset: 960)
!4377 = !DIDerivedType(tag: DW_TAG_member, name: "event_count", scope: !4360, file: !4361, line: 56, baseType: !317, size: 64, offset: 1024)
!4378 = !DIDerivedType(tag: DW_TAG_member, name: "active_count", scope: !4360, file: !4361, line: 57, baseType: !317, size: 64, offset: 1088)
!4379 = !DIDerivedType(tag: DW_TAG_member, name: "relax_count", scope: !4360, file: !4361, line: 58, baseType: !317, size: 64, offset: 1152)
!4380 = !DIDerivedType(tag: DW_TAG_member, name: "expire_count", scope: !4360, file: !4361, line: 59, baseType: !317, size: 64, offset: 1216)
!4381 = !DIDerivedType(tag: DW_TAG_member, name: "wakeup_count", scope: !4360, file: !4361, line: 60, baseType: !317, size: 64, offset: 1280)
!4382 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !4360, file: !4361, line: 61, baseType: !4172, size: 64, offset: 1344)
!4383 = !DIDerivedType(tag: DW_TAG_member, name: "active", scope: !4360, file: !4361, line: 62, baseType: !540, size: 1, offset: 1408, flags: DIFlagBitField, extraData: i64 1408)
!4384 = !DIDerivedType(tag: DW_TAG_member, name: "autosleep_enabled", scope: !4360, file: !4361, line: 63, baseType: !540, size: 1, offset: 1409, flags: DIFlagBitField, extraData: i64 1408)
!4385 = !DIDerivedType(tag: DW_TAG_member, name: "wakeup_path", scope: !4341, file: !4201, line: 583, baseType: !540, size: 1, offset: 512, flags: DIFlagBitField, extraData: i64 512)
!4386 = !DIDerivedType(tag: DW_TAG_member, name: "syscore", scope: !4341, file: !4201, line: 584, baseType: !540, size: 1, offset: 513, flags: DIFlagBitField, extraData: i64 512)
!4387 = !DIDerivedType(tag: DW_TAG_member, name: "no_pm_callbacks", scope: !4341, file: !4201, line: 585, baseType: !540, size: 1, offset: 514, flags: DIFlagBitField, extraData: i64 512)
!4388 = !DIDerivedType(tag: DW_TAG_member, name: "must_resume", scope: !4341, file: !4201, line: 586, baseType: !7, size: 1, offset: 515, flags: DIFlagBitField, extraData: i64 512)
!4389 = !DIDerivedType(tag: DW_TAG_member, name: "may_skip_resume", scope: !4341, file: !4201, line: 587, baseType: !7, size: 1, offset: 516, flags: DIFlagBitField, extraData: i64 512)
!4390 = !DIDerivedType(tag: DW_TAG_member, name: "suspend_timer", scope: !4341, file: !4201, line: 592, baseType: !1333, size: 512, offset: 576)
!4391 = !DIDerivedType(tag: DW_TAG_member, name: "timer_expires", scope: !4341, file: !4201, line: 593, baseType: !336, size: 64, offset: 1088)
!4392 = !DIDerivedType(tag: DW_TAG_member, name: "work", scope: !4341, file: !4201, line: 594, baseType: !1807, size: 256, offset: 1152)
!4393 = !DIDerivedType(tag: DW_TAG_member, name: "wait_queue", scope: !4341, file: !4201, line: 595, baseType: !1100, size: 128, offset: 1408)
!4394 = !DIDerivedType(tag: DW_TAG_member, name: "wakeirq", scope: !4341, file: !4201, line: 596, baseType: !4368, size: 64, offset: 1536)
!4395 = !DIDerivedType(tag: DW_TAG_member, name: "usage_count", scope: !4341, file: !4201, line: 597, baseType: !388, size: 32, offset: 1600)
!4396 = !DIDerivedType(tag: DW_TAG_member, name: "child_count", scope: !4341, file: !4201, line: 598, baseType: !388, size: 32, offset: 1632)
!4397 = !DIDerivedType(tag: DW_TAG_member, name: "disable_depth", scope: !4341, file: !4201, line: 599, baseType: !7, size: 3, offset: 1664, flags: DIFlagBitField, extraData: i64 1664)
!4398 = !DIDerivedType(tag: DW_TAG_member, name: "idle_notification", scope: !4341, file: !4201, line: 600, baseType: !7, size: 1, offset: 1667, flags: DIFlagBitField, extraData: i64 1664)
!4399 = !DIDerivedType(tag: DW_TAG_member, name: "request_pending", scope: !4341, file: !4201, line: 601, baseType: !7, size: 1, offset: 1668, flags: DIFlagBitField, extraData: i64 1664)
!4400 = !DIDerivedType(tag: DW_TAG_member, name: "deferred_resume", scope: !4341, file: !4201, line: 602, baseType: !7, size: 1, offset: 1669, flags: DIFlagBitField, extraData: i64 1664)
!4401 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_auto", scope: !4341, file: !4201, line: 603, baseType: !7, size: 1, offset: 1670, flags: DIFlagBitField, extraData: i64 1664)
!4402 = !DIDerivedType(tag: DW_TAG_member, name: "ignore_children", scope: !4341, file: !4201, line: 604, baseType: !540, size: 1, offset: 1671, flags: DIFlagBitField, extraData: i64 1664)
!4403 = !DIDerivedType(tag: DW_TAG_member, name: "no_callbacks", scope: !4341, file: !4201, line: 605, baseType: !7, size: 1, offset: 1672, flags: DIFlagBitField, extraData: i64 1664)
!4404 = !DIDerivedType(tag: DW_TAG_member, name: "irq_safe", scope: !4341, file: !4201, line: 606, baseType: !7, size: 1, offset: 1673, flags: DIFlagBitField, extraData: i64 1664)
!4405 = !DIDerivedType(tag: DW_TAG_member, name: "use_autosuspend", scope: !4341, file: !4201, line: 607, baseType: !7, size: 1, offset: 1674, flags: DIFlagBitField, extraData: i64 1664)
!4406 = !DIDerivedType(tag: DW_TAG_member, name: "timer_autosuspends", scope: !4341, file: !4201, line: 608, baseType: !7, size: 1, offset: 1675, flags: DIFlagBitField, extraData: i64 1664)
!4407 = !DIDerivedType(tag: DW_TAG_member, name: "memalloc_noio", scope: !4341, file: !4201, line: 609, baseType: !7, size: 1, offset: 1676, flags: DIFlagBitField, extraData: i64 1664)
!4408 = !DIDerivedType(tag: DW_TAG_member, name: "links_count", scope: !4341, file: !4201, line: 610, baseType: !7, size: 32, offset: 1696)
!4409 = !DIDerivedType(tag: DW_TAG_member, name: "request", scope: !4341, file: !4201, line: 611, baseType: !4410, size: 32, offset: 1728)
!4410 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "rpm_request", file: !4201, line: 524, baseType: !7, size: 32, elements: !4411)
!4411 = !{!4412, !4413, !4414, !4415, !4416}
!4412 = !DIEnumerator(name: "RPM_REQ_NONE", value: 0, isUnsigned: true)
!4413 = !DIEnumerator(name: "RPM_REQ_IDLE", value: 1, isUnsigned: true)
!4414 = !DIEnumerator(name: "RPM_REQ_SUSPEND", value: 2, isUnsigned: true)
!4415 = !DIEnumerator(name: "RPM_REQ_AUTOSUSPEND", value: 3, isUnsigned: true)
!4416 = !DIEnumerator(name: "RPM_REQ_RESUME", value: 4, isUnsigned: true)
!4417 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_status", scope: !4341, file: !4201, line: 612, baseType: !4418, size: 32, offset: 1760)
!4418 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "rpm_status", file: !4201, line: 502, baseType: !7, size: 32, elements: !4419)
!4419 = !{!4420, !4421, !4422, !4423}
!4420 = !DIEnumerator(name: "RPM_ACTIVE", value: 0, isUnsigned: true)
!4421 = !DIEnumerator(name: "RPM_RESUMING", value: 1, isUnsigned: true)
!4422 = !DIEnumerator(name: "RPM_SUSPENDED", value: 2, isUnsigned: true)
!4423 = !DIEnumerator(name: "RPM_SUSPENDING", value: 3, isUnsigned: true)
!4424 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_error", scope: !4341, file: !4201, line: 613, baseType: !37, size: 32, offset: 1792)
!4425 = !DIDerivedType(tag: DW_TAG_member, name: "autosuspend_delay", scope: !4341, file: !4201, line: 614, baseType: !37, size: 32, offset: 1824)
!4426 = !DIDerivedType(tag: DW_TAG_member, name: "last_busy", scope: !4341, file: !4201, line: 615, baseType: !336, size: 64, offset: 1856)
!4427 = !DIDerivedType(tag: DW_TAG_member, name: "active_time", scope: !4341, file: !4201, line: 616, baseType: !336, size: 64, offset: 1920)
!4428 = !DIDerivedType(tag: DW_TAG_member, name: "suspended_time", scope: !4341, file: !4201, line: 617, baseType: !336, size: 64, offset: 1984)
!4429 = !DIDerivedType(tag: DW_TAG_member, name: "accounting_timestamp", scope: !4341, file: !4201, line: 618, baseType: !336, size: 64, offset: 2048)
!4430 = !DIDerivedType(tag: DW_TAG_member, name: "subsys_data", scope: !4341, file: !4201, line: 620, baseType: !4431, size: 64, offset: 2112)
!4431 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4432, size: 64)
!4432 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pm_subsys_data", file: !4201, line: 536, size: 256, elements: !4433)
!4433 = !{!4434, !4435, !4436, !4437}
!4434 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !4432, file: !4201, line: 537, baseType: !729)
!4435 = !DIDerivedType(tag: DW_TAG_member, name: "refcount", scope: !4432, file: !4201, line: 538, baseType: !7, size: 32)
!4436 = !DIDerivedType(tag: DW_TAG_member, name: "clock_list", scope: !4432, file: !4201, line: 540, baseType: !289, size: 128, offset: 64)
!4437 = !DIDerivedType(tag: DW_TAG_member, name: "domain_data", scope: !4432, file: !4201, line: 543, baseType: !4438, size: 64, offset: 192)
!4438 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4439, size: 64)
!4439 = !DICompositeType(tag: DW_TAG_structure_type, name: "pm_domain_data", file: !4201, line: 534, flags: DIFlagFwdDecl)
!4440 = !DIDerivedType(tag: DW_TAG_member, name: "set_latency_tolerance", scope: !4341, file: !4201, line: 621, baseType: !4441, size: 64, offset: 2176)
!4441 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4442, size: 64)
!4442 = !DISubroutineType(types: !4443)
!4443 = !{null, !4172, !1489}
!4444 = !DIDerivedType(tag: DW_TAG_member, name: "qos", scope: !4341, file: !4201, line: 622, baseType: !4445, size: 64, offset: 2240)
!4445 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4446, size: 64)
!4446 = !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pm_qos", file: !4201, line: 622, flags: DIFlagFwdDecl)
!4447 = !DIDerivedType(tag: DW_TAG_member, name: "pm_domain", scope: !3803, file: !3804, line: 486, baseType: !4448, size: 64, offset: 4096)
!4448 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4449, size: 64)
!4449 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pm_domain", file: !4201, line: 642, size: 1792, elements: !4450)
!4450 = !{!4451, !4452, !4453, !4457, !4458, !4459}
!4451 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !4449, file: !4201, line: 643, baseType: !4200, size: 1472)
!4452 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !4449, file: !4201, line: 644, baseType: !4204, size: 64, offset: 1472)
!4453 = !DIDerivedType(tag: DW_TAG_member, name: "detach", scope: !4449, file: !4201, line: 645, baseType: !4454, size: 64, offset: 1536)
!4454 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4455, size: 64)
!4455 = !DISubroutineType(types: !4456)
!4456 = !{null, !4172, !540}
!4457 = !DIDerivedType(tag: DW_TAG_member, name: "activate", scope: !4449, file: !4201, line: 646, baseType: !4204, size: 64, offset: 1600)
!4458 = !DIDerivedType(tag: DW_TAG_member, name: "sync", scope: !4449, file: !4201, line: 647, baseType: !4194, size: 64, offset: 1664)
!4459 = !DIDerivedType(tag: DW_TAG_member, name: "dismiss", scope: !4449, file: !4201, line: 648, baseType: !4194, size: 64, offset: 1728)
!4460 = !DIDerivedType(tag: DW_TAG_member, name: "msi_domain", scope: !3803, file: !3804, line: 493, baseType: !4461, size: 64, offset: 4160)
!4461 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4462, size: 64)
!4462 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "irq_domain", file: !4463, line: 162, size: 1088, elements: !4464)
!4463 = !DIFile(filename: "./include/linux/irqdomain.h", directory: "/home/lizy2001/genbc/linux")
!4464 = !{!4465, !4466, !4467, !4759, !4760, !4761, !4762, !4763, !4764, !4897, !4898, !4899, !4900, !4901, !4902, !4903}
!4465 = !DIDerivedType(tag: DW_TAG_member, name: "link", scope: !4462, file: !4463, line: 163, baseType: !289, size: 128)
!4466 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !4462, file: !4463, line: 164, baseType: !297, size: 64, offset: 128)
!4467 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !4462, file: !4463, line: 165, baseType: !4468, size: 64, offset: 192)
!4468 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4469, size: 64)
!4469 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4470)
!4470 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "irq_domain_ops", file: !4463, line: 105, size: 640, elements: !4471)
!4471 = !{!4472, !4603, !4614, !4619, !4623, !4629, !4633, !4637, !4751, !4755}
!4472 = !DIDerivedType(tag: DW_TAG_member, name: "match", scope: !4470, file: !4463, line: 106, baseType: !4473, size: 64)
!4473 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4474, size: 64)
!4474 = !DISubroutineType(types: !4475)
!4475 = !{!37, !4461, !4476, !4590}
!4476 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4477, size: 64)
!4477 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_node", file: !4478, line: 51, size: 1344, elements: !4479)
!4478 = !DIFile(filename: "./include/linux/of.h", directory: "/home/lizy2001/genbc/linux")
!4479 = !{!4480, !4481, !4483, !4484, !4574, !4583, !4584, !4585, !4586, !4587, !4588, !4589}
!4480 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !4477, file: !4478, line: 52, baseType: !297, size: 64)
!4481 = !DIDerivedType(tag: DW_TAG_member, name: "phandle", scope: !4477, file: !4478, line: 53, baseType: !4482, size: 32, offset: 64)
!4482 = !DIDerivedType(tag: DW_TAG_typedef, name: "phandle", file: !4478, line: 28, baseType: !707)
!4483 = !DIDerivedType(tag: DW_TAG_member, name: "full_name", scope: !4477, file: !4478, line: 54, baseType: !297, size: 64, offset: 128)
!4484 = !DIDerivedType(tag: DW_TAG_member, name: "fwnode", scope: !4477, file: !4478, line: 55, baseType: !4485, size: 192, offset: 192)
!4485 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fwnode_handle", file: !4486, line: 17, size: 192, elements: !4487)
!4486 = !DIFile(filename: "./include/linux/fwnode.h", directory: "/home/lizy2001/genbc/linux")
!4487 = !{!4488, !4490, !4573}
!4488 = !DIDerivedType(tag: DW_TAG_member, name: "secondary", scope: !4485, file: !4486, line: 18, baseType: !4489, size: 64)
!4489 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4485, size: 64)
!4490 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !4485, file: !4486, line: 19, baseType: !4491, size: 64, offset: 64)
!4491 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4492, size: 64)
!4492 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4493)
!4493 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fwnode_operations", file: !4486, line: 110, size: 1152, elements: !4494)
!4494 = !{!4495, !4499, !4503, !4509, !4515, !4519, !4523, !4528, !4532, !4533, !4537, !4541, !4545, !4556, !4557, !4558, !4559, !4569}
!4495 = !DIDerivedType(tag: DW_TAG_member, name: "get", scope: !4493, file: !4486, line: 111, baseType: !4496, size: 64)
!4496 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4497, size: 64)
!4497 = !DISubroutineType(types: !4498)
!4498 = !{!4489, !4489}
!4499 = !DIDerivedType(tag: DW_TAG_member, name: "put", scope: !4493, file: !4486, line: 112, baseType: !4500, size: 64, offset: 64)
!4500 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4501, size: 64)
!4501 = !DISubroutineType(types: !4502)
!4502 = !{null, !4489}
!4503 = !DIDerivedType(tag: DW_TAG_member, name: "device_is_available", scope: !4493, file: !4486, line: 113, baseType: !4504, size: 64, offset: 128)
!4504 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4505, size: 64)
!4505 = !DISubroutineType(types: !4506)
!4506 = !{!540, !4507}
!4507 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4508, size: 64)
!4508 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4485)
!4509 = !DIDerivedType(tag: DW_TAG_member, name: "device_get_match_data", scope: !4493, file: !4486, line: 114, baseType: !4510, size: 64, offset: 192)
!4510 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4511, size: 64)
!4511 = !DISubroutineType(types: !4512)
!4512 = !{!2244, !4507, !4513}
!4513 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4514, size: 64)
!4514 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3803)
!4515 = !DIDerivedType(tag: DW_TAG_member, name: "property_present", scope: !4493, file: !4486, line: 116, baseType: !4516, size: 64, offset: 256)
!4516 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4517, size: 64)
!4517 = !DISubroutineType(types: !4518)
!4518 = !{!540, !4507, !297}
!4519 = !DIDerivedType(tag: DW_TAG_member, name: "property_read_int_array", scope: !4493, file: !4486, line: 118, baseType: !4520, size: 64, offset: 320)
!4520 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4521, size: 64)
!4521 = !DISubroutineType(types: !4522)
!4522 = !{!37, !4507, !297, !7, !570, !594}
!4523 = !DIDerivedType(tag: DW_TAG_member, name: "property_read_string_array", scope: !4493, file: !4486, line: 123, baseType: !4524, size: 64, offset: 384)
!4524 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4525, size: 64)
!4525 = !DISubroutineType(types: !4526)
!4526 = !{!37, !4507, !297, !4527, !594}
!4527 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !297, size: 64)
!4528 = !DIDerivedType(tag: DW_TAG_member, name: "get_name", scope: !4493, file: !4486, line: 126, baseType: !4529, size: 64, offset: 448)
!4529 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4530, size: 64)
!4530 = !DISubroutineType(types: !4531)
!4531 = !{!297, !4507}
!4532 = !DIDerivedType(tag: DW_TAG_member, name: "get_name_prefix", scope: !4493, file: !4486, line: 127, baseType: !4529, size: 64, offset: 512)
!4533 = !DIDerivedType(tag: DW_TAG_member, name: "get_parent", scope: !4493, file: !4486, line: 128, baseType: !4534, size: 64, offset: 576)
!4534 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4535, size: 64)
!4535 = !DISubroutineType(types: !4536)
!4536 = !{!4489, !4507}
!4537 = !DIDerivedType(tag: DW_TAG_member, name: "get_next_child_node", scope: !4493, file: !4486, line: 130, baseType: !4538, size: 64, offset: 640)
!4538 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4539, size: 64)
!4539 = !DISubroutineType(types: !4540)
!4540 = !{!4489, !4507, !4489}
!4541 = !DIDerivedType(tag: DW_TAG_member, name: "get_named_child_node", scope: !4493, file: !4486, line: 133, baseType: !4542, size: 64, offset: 704)
!4542 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4543, size: 64)
!4543 = !DISubroutineType(types: !4544)
!4544 = !{!4489, !4507, !297}
!4545 = !DIDerivedType(tag: DW_TAG_member, name: "get_reference_args", scope: !4493, file: !4486, line: 135, baseType: !4546, size: 64, offset: 768)
!4546 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4547, size: 64)
!4547 = !DISubroutineType(types: !4548)
!4548 = !{!37, !4507, !297, !297, !7, !7, !4549}
!4549 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4550, size: 64)
!4550 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fwnode_reference_args", file: !4486, line: 43, size: 640, elements: !4551)
!4551 = !{!4552, !4553, !4554}
!4552 = !DIDerivedType(tag: DW_TAG_member, name: "fwnode", scope: !4550, file: !4486, line: 44, baseType: !4489, size: 64)
!4553 = !DIDerivedType(tag: DW_TAG_member, name: "nargs", scope: !4550, file: !4486, line: 45, baseType: !7, size: 32, offset: 64)
!4554 = !DIDerivedType(tag: DW_TAG_member, name: "args", scope: !4550, file: !4486, line: 46, baseType: !4555, size: 512, offset: 128)
!4555 = !DICompositeType(tag: DW_TAG_array_type, baseType: !336, size: 512, elements: !1371)
!4556 = !DIDerivedType(tag: DW_TAG_member, name: "graph_get_next_endpoint", scope: !4493, file: !4486, line: 140, baseType: !4538, size: 64, offset: 832)
!4557 = !DIDerivedType(tag: DW_TAG_member, name: "graph_get_remote_endpoint", scope: !4493, file: !4486, line: 143, baseType: !4534, size: 64, offset: 896)
!4558 = !DIDerivedType(tag: DW_TAG_member, name: "graph_get_port_parent", scope: !4493, file: !4486, line: 145, baseType: !4496, size: 64, offset: 960)
!4559 = !DIDerivedType(tag: DW_TAG_member, name: "graph_parse_endpoint", scope: !4493, file: !4486, line: 146, baseType: !4560, size: 64, offset: 1024)
!4560 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4561, size: 64)
!4561 = !DISubroutineType(types: !4562)
!4562 = !{!37, !4507, !4563}
!4563 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4564, size: 64)
!4564 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fwnode_endpoint", file: !4486, line: 29, size: 128, elements: !4565)
!4565 = !{!4566, !4567, !4568}
!4566 = !DIDerivedType(tag: DW_TAG_member, name: "port", scope: !4564, file: !4486, line: 30, baseType: !7, size: 32)
!4567 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !4564, file: !4486, line: 31, baseType: !7, size: 32, offset: 32)
!4568 = !DIDerivedType(tag: DW_TAG_member, name: "local_fwnode", scope: !4564, file: !4486, line: 32, baseType: !4507, size: 64, offset: 64)
!4569 = !DIDerivedType(tag: DW_TAG_member, name: "add_links", scope: !4493, file: !4486, line: 148, baseType: !4570, size: 64, offset: 1088)
!4570 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4571, size: 64)
!4571 = !DISubroutineType(types: !4572)
!4572 = !{!37, !4507, !4172}
!4573 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !4485, file: !4486, line: 20, baseType: !4172, size: 64, offset: 128)
!4574 = !DIDerivedType(tag: DW_TAG_member, name: "properties", scope: !4477, file: !4478, line: 57, baseType: !4575, size: 64, offset: 384)
!4575 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4576, size: 64)
!4576 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "property", file: !4478, line: 31, size: 704, elements: !4577)
!4577 = !{!4578, !4579, !4580, !4581, !4582}
!4578 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !4576, file: !4478, line: 32, baseType: !577, size: 64)
!4579 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !4576, file: !4478, line: 33, baseType: !37, size: 32, offset: 64)
!4580 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !4576, file: !4478, line: 34, baseType: !570, size: 64, offset: 128)
!4581 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !4576, file: !4478, line: 35, baseType: !4575, size: 64, offset: 192)
!4582 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !4576, file: !4478, line: 43, baseType: !3899, size: 448, offset: 256)
!4583 = !DIDerivedType(tag: DW_TAG_member, name: "deadprops", scope: !4477, file: !4478, line: 58, baseType: !4575, size: 64, offset: 448)
!4584 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !4477, file: !4478, line: 59, baseType: !4476, size: 64, offset: 512)
!4585 = !DIDerivedType(tag: DW_TAG_member, name: "child", scope: !4477, file: !4478, line: 60, baseType: !4476, size: 64, offset: 576)
!4586 = !DIDerivedType(tag: DW_TAG_member, name: "sibling", scope: !4477, file: !4478, line: 61, baseType: !4476, size: 64, offset: 640)
!4587 = !DIDerivedType(tag: DW_TAG_member, name: "kobj", scope: !4477, file: !4478, line: 63, baseType: !3807, size: 512, offset: 704)
!4588 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !4477, file: !4478, line: 65, baseType: !317, size: 64, offset: 1216)
!4589 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !4477, file: !4478, line: 66, baseType: !570, size: 64, offset: 1280)
!4590 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "irq_domain_bus_token", file: !4463, line: 76, baseType: !7, size: 32, elements: !4591)
!4591 = !{!4592, !4593, !4594, !4595, !4596, !4597, !4598, !4599, !4600, !4601, !4602}
!4592 = !DIEnumerator(name: "DOMAIN_BUS_ANY", value: 0, isUnsigned: true)
!4593 = !DIEnumerator(name: "DOMAIN_BUS_WIRED", value: 1, isUnsigned: true)
!4594 = !DIEnumerator(name: "DOMAIN_BUS_GENERIC_MSI", value: 2, isUnsigned: true)
!4595 = !DIEnumerator(name: "DOMAIN_BUS_PCI_MSI", value: 3, isUnsigned: true)
!4596 = !DIEnumerator(name: "DOMAIN_BUS_PLATFORM_MSI", value: 4, isUnsigned: true)
!4597 = !DIEnumerator(name: "DOMAIN_BUS_NEXUS", value: 5, isUnsigned: true)
!4598 = !DIEnumerator(name: "DOMAIN_BUS_IPI", value: 6, isUnsigned: true)
!4599 = !DIEnumerator(name: "DOMAIN_BUS_FSL_MC_MSI", value: 7, isUnsigned: true)
!4600 = !DIEnumerator(name: "DOMAIN_BUS_TI_SCI_INTA_MSI", value: 8, isUnsigned: true)
!4601 = !DIEnumerator(name: "DOMAIN_BUS_WAKEUP", value: 9, isUnsigned: true)
!4602 = !DIEnumerator(name: "DOMAIN_BUS_VMD_MSI", value: 10, isUnsigned: true)
!4603 = !DIDerivedType(tag: DW_TAG_member, name: "select", scope: !4470, file: !4463, line: 108, baseType: !4604, size: 64, offset: 64)
!4604 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4605, size: 64)
!4605 = !DISubroutineType(types: !4606)
!4606 = !{!37, !4461, !4607, !4590}
!4607 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4608, size: 64)
!4608 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "irq_fwspec", file: !4463, line: 63, size: 640, elements: !4609)
!4609 = !{!4610, !4611, !4612}
!4610 = !DIDerivedType(tag: DW_TAG_member, name: "fwnode", scope: !4608, file: !4463, line: 64, baseType: !4489, size: 64)
!4611 = !DIDerivedType(tag: DW_TAG_member, name: "param_count", scope: !4608, file: !4463, line: 65, baseType: !37, size: 32, offset: 64)
!4612 = !DIDerivedType(tag: DW_TAG_member, name: "param", scope: !4608, file: !4463, line: 66, baseType: !4613, size: 512, offset: 96)
!4613 = !DICompositeType(tag: DW_TAG_array_type, baseType: !707, size: 512, elements: !274)
!4614 = !DIDerivedType(tag: DW_TAG_member, name: "map", scope: !4470, file: !4463, line: 110, baseType: !4615, size: 64, offset: 128)
!4615 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4616, size: 64)
!4616 = !DISubroutineType(types: !4617)
!4617 = !{!37, !4461, !7, !4618}
!4618 = !DIDerivedType(tag: DW_TAG_typedef, name: "irq_hw_number_t", file: !282, line: 164, baseType: !317)
!4619 = !DIDerivedType(tag: DW_TAG_member, name: "unmap", scope: !4470, file: !4463, line: 111, baseType: !4620, size: 64, offset: 192)
!4620 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4621, size: 64)
!4621 = !DISubroutineType(types: !4622)
!4622 = !{null, !4461, !7}
!4623 = !DIDerivedType(tag: DW_TAG_member, name: "xlate", scope: !4470, file: !4463, line: 112, baseType: !4624, size: 64, offset: 256)
!4624 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4625, size: 64)
!4625 = !DISubroutineType(types: !4626)
!4626 = !{!37, !4461, !4476, !4627, !7, !2427, !4628}
!4627 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2470, size: 64)
!4628 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7, size: 64)
!4629 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !4470, file: !4463, line: 117, baseType: !4630, size: 64, offset: 320)
!4630 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4631, size: 64)
!4631 = !DISubroutineType(types: !4632)
!4632 = !{!37, !4461, !7, !7, !570}
!4633 = !DIDerivedType(tag: DW_TAG_member, name: "free", scope: !4470, file: !4463, line: 119, baseType: !4634, size: 64, offset: 384)
!4634 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4635, size: 64)
!4635 = !DISubroutineType(types: !4636)
!4636 = !{null, !4461, !7, !7}
!4637 = !DIDerivedType(tag: DW_TAG_member, name: "activate", scope: !4470, file: !4463, line: 121, baseType: !4638, size: 64, offset: 448)
!4638 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4639, size: 64)
!4639 = !DISubroutineType(types: !4640)
!4640 = !{!37, !4461, !4641, !540}
!4641 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4642, size: 64)
!4642 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "irq_data", file: !4643, line: 175, size: 448, elements: !4644)
!4643 = !DIFile(filename: "./include/linux/irq.h", directory: "/home/lizy2001/genbc/linux")
!4644 = !{!4645, !4646, !4647, !4648, !4660, !4748, !4749, !4750}
!4645 = !DIDerivedType(tag: DW_TAG_member, name: "mask", scope: !4642, file: !4643, line: 176, baseType: !707, size: 32)
!4646 = !DIDerivedType(tag: DW_TAG_member, name: "irq", scope: !4642, file: !4643, line: 177, baseType: !7, size: 32, offset: 32)
!4647 = !DIDerivedType(tag: DW_TAG_member, name: "hwirq", scope: !4642, file: !4643, line: 178, baseType: !317, size: 64, offset: 64)
!4648 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !4642, file: !4643, line: 179, baseType: !4649, size: 64, offset: 128)
!4649 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4650, size: 64)
!4650 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "irq_common_data", file: !4643, line: 145, size: 256, elements: !4651)
!4651 = !{!4652, !4653, !4654, !4657}
!4652 = !DIDerivedType(tag: DW_TAG_member, name: "state_use_accessors", scope: !4650, file: !4643, line: 146, baseType: !7, size: 32)
!4653 = !DIDerivedType(tag: DW_TAG_member, name: "handler_data", scope: !4650, file: !4643, line: 150, baseType: !570, size: 64, offset: 64)
!4654 = !DIDerivedType(tag: DW_TAG_member, name: "msi_desc", scope: !4650, file: !4643, line: 151, baseType: !4655, size: 64, offset: 128)
!4655 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4656, size: 64)
!4656 = !DICompositeType(tag: DW_TAG_structure_type, name: "msi_desc", file: !4643, line: 127, flags: DIFlagFwdDecl)
!4657 = !DIDerivedType(tag: DW_TAG_member, name: "affinity", scope: !4650, file: !4643, line: 152, baseType: !4658, size: 64, offset: 192)
!4658 = !DIDerivedType(tag: DW_TAG_typedef, name: "cpumask_var_t", file: !1411, line: 756, baseType: !4659)
!4659 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1412, size: 64, elements: !1416)
!4660 = !DIDerivedType(tag: DW_TAG_member, name: "chip", scope: !4642, file: !4643, line: 180, baseType: !4661, size: 64, offset: 192)
!4661 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4662, size: 64)
!4662 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "irq_chip", file: !4643, line: 503, size: 2304, elements: !4663)
!4663 = !{!4664, !4665, !4666, !4670, !4674, !4675, !4676, !4677, !4678, !4679, !4680, !4681, !4687, !4691, !4695, !4696, !4697, !4698, !4699, !4700, !4701, !4702, !4703, !4704, !4708, !4709, !4710, !4716, !4717, !4729, !4733, !4737, !4741, !4745, !4746, !4747}
!4664 = !DIDerivedType(tag: DW_TAG_member, name: "parent_device", scope: !4662, file: !4643, line: 504, baseType: !4172, size: 64)
!4665 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !4662, file: !4643, line: 505, baseType: !297, size: 64, offset: 64)
!4666 = !DIDerivedType(tag: DW_TAG_member, name: "irq_startup", scope: !4662, file: !4643, line: 506, baseType: !4667, size: 64, offset: 128)
!4667 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4668, size: 64)
!4668 = !DISubroutineType(types: !4669)
!4669 = !{!7, !4641}
!4670 = !DIDerivedType(tag: DW_TAG_member, name: "irq_shutdown", scope: !4662, file: !4643, line: 507, baseType: !4671, size: 64, offset: 192)
!4671 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4672, size: 64)
!4672 = !DISubroutineType(types: !4673)
!4673 = !{null, !4641}
!4674 = !DIDerivedType(tag: DW_TAG_member, name: "irq_enable", scope: !4662, file: !4643, line: 508, baseType: !4671, size: 64, offset: 256)
!4675 = !DIDerivedType(tag: DW_TAG_member, name: "irq_disable", scope: !4662, file: !4643, line: 509, baseType: !4671, size: 64, offset: 320)
!4676 = !DIDerivedType(tag: DW_TAG_member, name: "irq_ack", scope: !4662, file: !4643, line: 511, baseType: !4671, size: 64, offset: 384)
!4677 = !DIDerivedType(tag: DW_TAG_member, name: "irq_mask", scope: !4662, file: !4643, line: 512, baseType: !4671, size: 64, offset: 448)
!4678 = !DIDerivedType(tag: DW_TAG_member, name: "irq_mask_ack", scope: !4662, file: !4643, line: 513, baseType: !4671, size: 64, offset: 512)
!4679 = !DIDerivedType(tag: DW_TAG_member, name: "irq_unmask", scope: !4662, file: !4643, line: 514, baseType: !4671, size: 64, offset: 576)
!4680 = !DIDerivedType(tag: DW_TAG_member, name: "irq_eoi", scope: !4662, file: !4643, line: 515, baseType: !4671, size: 64, offset: 640)
!4681 = !DIDerivedType(tag: DW_TAG_member, name: "irq_set_affinity", scope: !4662, file: !4643, line: 517, baseType: !4682, size: 64, offset: 704)
!4682 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4683, size: 64)
!4683 = !DISubroutineType(types: !4684)
!4684 = !{!37, !4641, !4685, !540}
!4685 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4686, size: 64)
!4686 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1412)
!4687 = !DIDerivedType(tag: DW_TAG_member, name: "irq_retrigger", scope: !4662, file: !4643, line: 518, baseType: !4688, size: 64, offset: 768)
!4688 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4689, size: 64)
!4689 = !DISubroutineType(types: !4690)
!4690 = !{!37, !4641}
!4691 = !DIDerivedType(tag: DW_TAG_member, name: "irq_set_type", scope: !4662, file: !4643, line: 519, baseType: !4692, size: 64, offset: 832)
!4692 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4693, size: 64)
!4693 = !DISubroutineType(types: !4694)
!4694 = !{!37, !4641, !7}
!4695 = !DIDerivedType(tag: DW_TAG_member, name: "irq_set_wake", scope: !4662, file: !4643, line: 520, baseType: !4692, size: 64, offset: 896)
!4696 = !DIDerivedType(tag: DW_TAG_member, name: "irq_bus_lock", scope: !4662, file: !4643, line: 522, baseType: !4671, size: 64, offset: 960)
!4697 = !DIDerivedType(tag: DW_TAG_member, name: "irq_bus_sync_unlock", scope: !4662, file: !4643, line: 523, baseType: !4671, size: 64, offset: 1024)
!4698 = !DIDerivedType(tag: DW_TAG_member, name: "irq_cpu_online", scope: !4662, file: !4643, line: 525, baseType: !4671, size: 64, offset: 1088)
!4699 = !DIDerivedType(tag: DW_TAG_member, name: "irq_cpu_offline", scope: !4662, file: !4643, line: 526, baseType: !4671, size: 64, offset: 1152)
!4700 = !DIDerivedType(tag: DW_TAG_member, name: "irq_suspend", scope: !4662, file: !4643, line: 528, baseType: !4671, size: 64, offset: 1216)
!4701 = !DIDerivedType(tag: DW_TAG_member, name: "irq_resume", scope: !4662, file: !4643, line: 529, baseType: !4671, size: 64, offset: 1280)
!4702 = !DIDerivedType(tag: DW_TAG_member, name: "irq_pm_shutdown", scope: !4662, file: !4643, line: 530, baseType: !4671, size: 64, offset: 1344)
!4703 = !DIDerivedType(tag: DW_TAG_member, name: "irq_calc_mask", scope: !4662, file: !4643, line: 532, baseType: !4671, size: 64, offset: 1408)
!4704 = !DIDerivedType(tag: DW_TAG_member, name: "irq_print_chip", scope: !4662, file: !4643, line: 534, baseType: !4705, size: 64, offset: 1472)
!4705 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4706, size: 64)
!4706 = !DISubroutineType(types: !4707)
!4707 = !{null, !4641, !942}
!4708 = !DIDerivedType(tag: DW_TAG_member, name: "irq_request_resources", scope: !4662, file: !4643, line: 535, baseType: !4688, size: 64, offset: 1536)
!4709 = !DIDerivedType(tag: DW_TAG_member, name: "irq_release_resources", scope: !4662, file: !4643, line: 536, baseType: !4671, size: 64, offset: 1600)
!4710 = !DIDerivedType(tag: DW_TAG_member, name: "irq_compose_msi_msg", scope: !4662, file: !4643, line: 538, baseType: !4711, size: 64, offset: 1664)
!4711 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4712, size: 64)
!4712 = !DISubroutineType(types: !4713)
!4713 = !{null, !4641, !4714}
!4714 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4715, size: 64)
!4715 = !DICompositeType(tag: DW_TAG_structure_type, name: "msi_msg", file: !4643, line: 29, flags: DIFlagFwdDecl)
!4716 = !DIDerivedType(tag: DW_TAG_member, name: "irq_write_msi_msg", scope: !4662, file: !4643, line: 539, baseType: !4711, size: 64, offset: 1728)
!4717 = !DIDerivedType(tag: DW_TAG_member, name: "irq_get_irqchip_state", scope: !4662, file: !4643, line: 541, baseType: !4718, size: 64, offset: 1792)
!4718 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4719, size: 64)
!4719 = !DISubroutineType(types: !4720)
!4720 = !{!37, !4641, !4721, !4728}
!4721 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "irqchip_irq_state", file: !4722, line: 478, baseType: !7, size: 32, elements: !4723)
!4722 = !DIFile(filename: "./include/linux/interrupt.h", directory: "/home/lizy2001/genbc/linux")
!4723 = !{!4724, !4725, !4726, !4727}
!4724 = !DIEnumerator(name: "IRQCHIP_STATE_PENDING", value: 0, isUnsigned: true)
!4725 = !DIEnumerator(name: "IRQCHIP_STATE_ACTIVE", value: 1, isUnsigned: true)
!4726 = !DIEnumerator(name: "IRQCHIP_STATE_MASKED", value: 2, isUnsigned: true)
!4727 = !DIEnumerator(name: "IRQCHIP_STATE_LINE_LEVEL", value: 3, isUnsigned: true)
!4728 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !540, size: 64)
!4729 = !DIDerivedType(tag: DW_TAG_member, name: "irq_set_irqchip_state", scope: !4662, file: !4643, line: 542, baseType: !4730, size: 64, offset: 1856)
!4730 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4731, size: 64)
!4731 = !DISubroutineType(types: !4732)
!4732 = !{!37, !4641, !4721, !540}
!4733 = !DIDerivedType(tag: DW_TAG_member, name: "irq_set_vcpu_affinity", scope: !4662, file: !4643, line: 544, baseType: !4734, size: 64, offset: 1920)
!4734 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4735, size: 64)
!4735 = !DISubroutineType(types: !4736)
!4736 = !{!37, !4641, !570}
!4737 = !DIDerivedType(tag: DW_TAG_member, name: "ipi_send_single", scope: !4662, file: !4643, line: 546, baseType: !4738, size: 64, offset: 1984)
!4738 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4739, size: 64)
!4739 = !DISubroutineType(types: !4740)
!4740 = !{null, !4641, !7}
!4741 = !DIDerivedType(tag: DW_TAG_member, name: "ipi_send_mask", scope: !4662, file: !4643, line: 547, baseType: !4742, size: 64, offset: 2048)
!4742 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4743, size: 64)
!4743 = !DISubroutineType(types: !4744)
!4744 = !{null, !4641, !4685}
!4745 = !DIDerivedType(tag: DW_TAG_member, name: "irq_nmi_setup", scope: !4662, file: !4643, line: 549, baseType: !4688, size: 64, offset: 2112)
!4746 = !DIDerivedType(tag: DW_TAG_member, name: "irq_nmi_teardown", scope: !4662, file: !4643, line: 550, baseType: !4671, size: 64, offset: 2176)
!4747 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !4662, file: !4643, line: 552, baseType: !317, size: 64, offset: 2240)
!4748 = !DIDerivedType(tag: DW_TAG_member, name: "domain", scope: !4642, file: !4643, line: 181, baseType: !4461, size: 64, offset: 256)
!4749 = !DIDerivedType(tag: DW_TAG_member, name: "parent_data", scope: !4642, file: !4643, line: 183, baseType: !4641, size: 64, offset: 320)
!4750 = !DIDerivedType(tag: DW_TAG_member, name: "chip_data", scope: !4642, file: !4643, line: 185, baseType: !570, size: 64, offset: 384)
!4751 = !DIDerivedType(tag: DW_TAG_member, name: "deactivate", scope: !4470, file: !4463, line: 122, baseType: !4752, size: 64, offset: 512)
!4752 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4753, size: 64)
!4753 = !DISubroutineType(types: !4754)
!4754 = !{null, !4461, !4641}
!4755 = !DIDerivedType(tag: DW_TAG_member, name: "translate", scope: !4470, file: !4463, line: 123, baseType: !4756, size: 64, offset: 576)
!4756 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4757, size: 64)
!4757 = !DISubroutineType(types: !4758)
!4758 = !{!37, !4461, !4607, !2427, !4628}
!4759 = !DIDerivedType(tag: DW_TAG_member, name: "host_data", scope: !4462, file: !4463, line: 166, baseType: !570, size: 64, offset: 256)
!4760 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !4462, file: !4463, line: 167, baseType: !7, size: 32, offset: 320)
!4761 = !DIDerivedType(tag: DW_TAG_member, name: "mapcount", scope: !4462, file: !4463, line: 168, baseType: !7, size: 32, offset: 352)
!4762 = !DIDerivedType(tag: DW_TAG_member, name: "fwnode", scope: !4462, file: !4463, line: 171, baseType: !4489, size: 64, offset: 384)
!4763 = !DIDerivedType(tag: DW_TAG_member, name: "bus_token", scope: !4462, file: !4463, line: 172, baseType: !4590, size: 32, offset: 448)
!4764 = !DIDerivedType(tag: DW_TAG_member, name: "gc", scope: !4462, file: !4463, line: 173, baseType: !4765, size: 64, offset: 512)
!4765 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4766, size: 64)
!4766 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "irq_domain_chip_generic", file: !4643, line: 1101, size: 192, elements: !4767)
!4767 = !{!4768, !4769, !4770, !4771, !4772, !4780}
!4768 = !DIDerivedType(tag: DW_TAG_member, name: "irqs_per_chip", scope: !4766, file: !4643, line: 1102, baseType: !7, size: 32)
!4769 = !DIDerivedType(tag: DW_TAG_member, name: "num_chips", scope: !4766, file: !4643, line: 1103, baseType: !7, size: 32, offset: 32)
!4770 = !DIDerivedType(tag: DW_TAG_member, name: "irq_flags_to_clear", scope: !4766, file: !4643, line: 1104, baseType: !7, size: 32, offset: 64)
!4771 = !DIDerivedType(tag: DW_TAG_member, name: "irq_flags_to_set", scope: !4766, file: !4643, line: 1105, baseType: !7, size: 32, offset: 96)
!4772 = !DIDerivedType(tag: DW_TAG_member, name: "gc_flags", scope: !4766, file: !4643, line: 1106, baseType: !4773, size: 32, offset: 128)
!4773 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "irq_gc_flags", file: !4643, line: 1084, baseType: !7, size: 32, elements: !4774)
!4774 = !{!4775, !4776, !4777, !4778, !4779}
!4775 = !DIEnumerator(name: "IRQ_GC_INIT_MASK_CACHE", value: 1, isUnsigned: true)
!4776 = !DIEnumerator(name: "IRQ_GC_INIT_NESTED_LOCK", value: 2, isUnsigned: true)
!4777 = !DIEnumerator(name: "IRQ_GC_MASK_CACHE_PER_TYPE", value: 4, isUnsigned: true)
!4778 = !DIEnumerator(name: "IRQ_GC_NO_MASK", value: 8, isUnsigned: true)
!4779 = !DIEnumerator(name: "IRQ_GC_BE_IO", value: 16, isUnsigned: true)
!4780 = !DIDerivedType(tag: DW_TAG_member, name: "gc", scope: !4766, file: !4643, line: 1107, baseType: !4781, offset: 192)
!4781 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4782, elements: !314)
!4782 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4783, size: 64)
!4783 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "irq_chip_generic", file: !4643, line: 1051, size: 960, elements: !4784)
!4784 = !{!4785, !4786, !4787, !4788, !4792, !4796, !4797, !4798, !4799, !4800, !4801, !4802, !4803, !4804, !4805, !4806, !4807, !4808, !4809, !4810}
!4785 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !4783, file: !4643, line: 1052, baseType: !1168)
!4786 = !DIDerivedType(tag: DW_TAG_member, name: "reg_base", scope: !4783, file: !4643, line: 1053, baseType: !570, size: 64)
!4787 = !DIDerivedType(tag: DW_TAG_member, name: "reg_readl", scope: !4783, file: !4643, line: 1054, baseType: !3306, size: 64, offset: 64)
!4788 = !DIDerivedType(tag: DW_TAG_member, name: "reg_writel", scope: !4783, file: !4643, line: 1055, baseType: !4789, size: 64, offset: 128)
!4789 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4790, size: 64)
!4790 = !DISubroutineType(types: !4791)
!4791 = !{null, !707, !570}
!4792 = !DIDerivedType(tag: DW_TAG_member, name: "suspend", scope: !4783, file: !4643, line: 1056, baseType: !4793, size: 64, offset: 192)
!4793 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4794, size: 64)
!4794 = !DISubroutineType(types: !4795)
!4795 = !{null, !4782}
!4796 = !DIDerivedType(tag: DW_TAG_member, name: "resume", scope: !4783, file: !4643, line: 1057, baseType: !4793, size: 64, offset: 256)
!4797 = !DIDerivedType(tag: DW_TAG_member, name: "irq_base", scope: !4783, file: !4643, line: 1058, baseType: !7, size: 32, offset: 320)
!4798 = !DIDerivedType(tag: DW_TAG_member, name: "irq_cnt", scope: !4783, file: !4643, line: 1059, baseType: !7, size: 32, offset: 352)
!4799 = !DIDerivedType(tag: DW_TAG_member, name: "mask_cache", scope: !4783, file: !4643, line: 1060, baseType: !707, size: 32, offset: 384)
!4800 = !DIDerivedType(tag: DW_TAG_member, name: "type_cache", scope: !4783, file: !4643, line: 1061, baseType: !707, size: 32, offset: 416)
!4801 = !DIDerivedType(tag: DW_TAG_member, name: "polarity_cache", scope: !4783, file: !4643, line: 1062, baseType: !707, size: 32, offset: 448)
!4802 = !DIDerivedType(tag: DW_TAG_member, name: "wake_enabled", scope: !4783, file: !4643, line: 1063, baseType: !707, size: 32, offset: 480)
!4803 = !DIDerivedType(tag: DW_TAG_member, name: "wake_active", scope: !4783, file: !4643, line: 1064, baseType: !707, size: 32, offset: 512)
!4804 = !DIDerivedType(tag: DW_TAG_member, name: "num_ct", scope: !4783, file: !4643, line: 1065, baseType: !7, size: 32, offset: 544)
!4805 = !DIDerivedType(tag: DW_TAG_member, name: "private", scope: !4783, file: !4643, line: 1066, baseType: !570, size: 64, offset: 576)
!4806 = !DIDerivedType(tag: DW_TAG_member, name: "installed", scope: !4783, file: !4643, line: 1067, baseType: !317, size: 64, offset: 640)
!4807 = !DIDerivedType(tag: DW_TAG_member, name: "unused", scope: !4783, file: !4643, line: 1068, baseType: !317, size: 64, offset: 704)
!4808 = !DIDerivedType(tag: DW_TAG_member, name: "domain", scope: !4783, file: !4643, line: 1069, baseType: !4461, size: 64, offset: 768)
!4809 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !4783, file: !4643, line: 1070, baseType: !289, size: 128, offset: 832)
!4810 = !DIDerivedType(tag: DW_TAG_member, name: "chip_types", scope: !4783, file: !4643, line: 1071, baseType: !4811, offset: 960)
!4811 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4812, elements: !314)
!4812 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "irq_chip_type", file: !4643, line: 1009, size: 2944, elements: !4813)
!4813 = !{!4814, !4815, !4825, !4894, !4895, !4896}
!4814 = !DIDerivedType(tag: DW_TAG_member, name: "chip", scope: !4812, file: !4643, line: 1010, baseType: !4662, size: 2304)
!4815 = !DIDerivedType(tag: DW_TAG_member, name: "regs", scope: !4812, file: !4643, line: 1011, baseType: !4816, size: 448, offset: 2304)
!4816 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "irq_chip_regs", file: !4643, line: 986, size: 448, elements: !4817)
!4817 = !{!4818, !4819, !4820, !4821, !4822, !4823, !4824}
!4818 = !DIDerivedType(tag: DW_TAG_member, name: "enable", scope: !4816, file: !4643, line: 987, baseType: !317, size: 64)
!4819 = !DIDerivedType(tag: DW_TAG_member, name: "disable", scope: !4816, file: !4643, line: 988, baseType: !317, size: 64, offset: 64)
!4820 = !DIDerivedType(tag: DW_TAG_member, name: "mask", scope: !4816, file: !4643, line: 989, baseType: !317, size: 64, offset: 128)
!4821 = !DIDerivedType(tag: DW_TAG_member, name: "ack", scope: !4816, file: !4643, line: 990, baseType: !317, size: 64, offset: 192)
!4822 = !DIDerivedType(tag: DW_TAG_member, name: "eoi", scope: !4816, file: !4643, line: 991, baseType: !317, size: 64, offset: 256)
!4823 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !4816, file: !4643, line: 992, baseType: !317, size: 64, offset: 320)
!4824 = !DIDerivedType(tag: DW_TAG_member, name: "polarity", scope: !4816, file: !4643, line: 993, baseType: !317, size: 64, offset: 384)
!4825 = !DIDerivedType(tag: DW_TAG_member, name: "handler", scope: !4812, file: !4643, line: 1012, baseType: !4826, size: 64, offset: 2752)
!4826 = !DIDerivedType(tag: DW_TAG_typedef, name: "irq_flow_handler_t", file: !4827, line: 12, baseType: !4828)
!4827 = !DIFile(filename: "./include/linux/irqhandler.h", directory: "/home/lizy2001/genbc/linux")
!4828 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4829, size: 64)
!4829 = !DISubroutineType(types: !4830)
!4830 = !{null, !4831}
!4831 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4832, size: 64)
!4832 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "irq_desc", file: !1999, line: 55, size: 2880, elements: !4833)
!4833 = !{!4834, !4835, !4836, !4837, !4838, !4866, !4867, !4868, !4869, !4870, !4871, !4872, !4873, !4874, !4875, !4876, !4877, !4879, !4880, !4881, !4882, !4883, !4884, !4885, !4886, !4887, !4888, !4889, !4890, !4891, !4892, !4893}
!4834 = !DIDerivedType(tag: DW_TAG_member, name: "irq_common_data", scope: !4832, file: !1999, line: 56, baseType: !4650, size: 256)
!4835 = !DIDerivedType(tag: DW_TAG_member, name: "irq_data", scope: !4832, file: !1999, line: 57, baseType: !4642, size: 448, offset: 256)
!4836 = !DIDerivedType(tag: DW_TAG_member, name: "kstat_irqs", scope: !4832, file: !1999, line: 58, baseType: !4628, size: 64, offset: 704)
!4837 = !DIDerivedType(tag: DW_TAG_member, name: "handle_irq", scope: !4832, file: !1999, line: 59, baseType: !4826, size: 64, offset: 768)
!4838 = !DIDerivedType(tag: DW_TAG_member, name: "action", scope: !4832, file: !1999, line: 60, baseType: !4839, size: 64, offset: 832)
!4839 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4840, size: 64)
!4840 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "irqaction", file: !4722, line: 110, size: 768, elements: !4841)
!4841 = !{!4842, !4854, !4855, !4856, !4857, !4858, !4859, !4860, !4861, !4862, !4863, !4864, !4865}
!4842 = !DIDerivedType(tag: DW_TAG_member, name: "handler", scope: !4840, file: !4722, line: 111, baseType: !4843, size: 64)
!4843 = !DIDerivedType(tag: DW_TAG_typedef, name: "irq_handler_t", file: !4722, line: 92, baseType: !4844)
!4844 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4845, size: 64)
!4845 = !DISubroutineType(types: !4846)
!4846 = !{!4847, !37, !570}
!4847 = !DIDerivedType(tag: DW_TAG_typedef, name: "irqreturn_t", file: !4848, line: 17, baseType: !4849)
!4848 = !DIFile(filename: "./include/linux/irqreturn.h", directory: "/home/lizy2001/genbc/linux")
!4849 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "irqreturn", file: !4848, line: 11, baseType: !7, size: 32, elements: !4850)
!4850 = !{!4851, !4852, !4853}
!4851 = !DIEnumerator(name: "IRQ_NONE", value: 0, isUnsigned: true)
!4852 = !DIEnumerator(name: "IRQ_HANDLED", value: 1, isUnsigned: true)
!4853 = !DIEnumerator(name: "IRQ_WAKE_THREAD", value: 2, isUnsigned: true)
!4854 = !DIDerivedType(tag: DW_TAG_member, name: "dev_id", scope: !4840, file: !4722, line: 112, baseType: !570, size: 64, offset: 64)
!4855 = !DIDerivedType(tag: DW_TAG_member, name: "percpu_dev_id", scope: !4840, file: !4722, line: 113, baseType: !570, size: 64, offset: 128)
!4856 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !4840, file: !4722, line: 114, baseType: !4839, size: 64, offset: 192)
!4857 = !DIDerivedType(tag: DW_TAG_member, name: "thread_fn", scope: !4840, file: !4722, line: 115, baseType: !4843, size: 64, offset: 256)
!4858 = !DIDerivedType(tag: DW_TAG_member, name: "thread", scope: !4840, file: !4722, line: 116, baseType: !1257, size: 64, offset: 320)
!4859 = !DIDerivedType(tag: DW_TAG_member, name: "secondary", scope: !4840, file: !4722, line: 117, baseType: !4839, size: 64, offset: 384)
!4860 = !DIDerivedType(tag: DW_TAG_member, name: "irq", scope: !4840, file: !4722, line: 118, baseType: !7, size: 32, offset: 448)
!4861 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !4840, file: !4722, line: 119, baseType: !7, size: 32, offset: 480)
!4862 = !DIDerivedType(tag: DW_TAG_member, name: "thread_flags", scope: !4840, file: !4722, line: 120, baseType: !317, size: 64, offset: 512)
!4863 = !DIDerivedType(tag: DW_TAG_member, name: "thread_mask", scope: !4840, file: !4722, line: 121, baseType: !317, size: 64, offset: 576)
!4864 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !4840, file: !4722, line: 122, baseType: !297, size: 64, offset: 640)
!4865 = !DIDerivedType(tag: DW_TAG_member, name: "dir", scope: !4840, file: !4722, line: 123, baseType: !1997, size: 64, offset: 704)
!4866 = !DIDerivedType(tag: DW_TAG_member, name: "status_use_accessors", scope: !4832, file: !1999, line: 61, baseType: !7, size: 32, offset: 896)
!4867 = !DIDerivedType(tag: DW_TAG_member, name: "core_internal_state__do_not_mess_with_it", scope: !4832, file: !1999, line: 62, baseType: !7, size: 32, offset: 928)
!4868 = !DIDerivedType(tag: DW_TAG_member, name: "depth", scope: !4832, file: !1999, line: 63, baseType: !7, size: 32, offset: 960)
!4869 = !DIDerivedType(tag: DW_TAG_member, name: "wake_depth", scope: !4832, file: !1999, line: 64, baseType: !7, size: 32, offset: 992)
!4870 = !DIDerivedType(tag: DW_TAG_member, name: "tot_count", scope: !4832, file: !1999, line: 65, baseType: !7, size: 32, offset: 1024)
!4871 = !DIDerivedType(tag: DW_TAG_member, name: "irq_count", scope: !4832, file: !1999, line: 66, baseType: !7, size: 32, offset: 1056)
!4872 = !DIDerivedType(tag: DW_TAG_member, name: "last_unhandled", scope: !4832, file: !1999, line: 67, baseType: !317, size: 64, offset: 1088)
!4873 = !DIDerivedType(tag: DW_TAG_member, name: "irqs_unhandled", scope: !4832, file: !1999, line: 68, baseType: !7, size: 32, offset: 1152)
!4874 = !DIDerivedType(tag: DW_TAG_member, name: "threads_handled", scope: !4832, file: !1999, line: 69, baseType: !388, size: 32, offset: 1184)
!4875 = !DIDerivedType(tag: DW_TAG_member, name: "threads_handled_last", scope: !4832, file: !1999, line: 70, baseType: !37, size: 32, offset: 1216)
!4876 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !4832, file: !1999, line: 71, baseType: !1168, offset: 1248)
!4877 = !DIDerivedType(tag: DW_TAG_member, name: "percpu_enabled", scope: !4832, file: !1999, line: 72, baseType: !4878, size: 64, offset: 1280)
!4878 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1412, size: 64)
!4879 = !DIDerivedType(tag: DW_TAG_member, name: "percpu_affinity", scope: !4832, file: !1999, line: 73, baseType: !4685, size: 64, offset: 1344)
!4880 = !DIDerivedType(tag: DW_TAG_member, name: "threads_oneshot", scope: !4832, file: !1999, line: 81, baseType: !317, size: 64, offset: 1408)
!4881 = !DIDerivedType(tag: DW_TAG_member, name: "threads_active", scope: !4832, file: !1999, line: 82, baseType: !388, size: 32, offset: 1472)
!4882 = !DIDerivedType(tag: DW_TAG_member, name: "wait_for_threads", scope: !4832, file: !1999, line: 83, baseType: !1100, size: 128, offset: 1536)
!4883 = !DIDerivedType(tag: DW_TAG_member, name: "nr_actions", scope: !4832, file: !1999, line: 85, baseType: !7, size: 32, offset: 1664)
!4884 = !DIDerivedType(tag: DW_TAG_member, name: "no_suspend_depth", scope: !4832, file: !1999, line: 86, baseType: !7, size: 32, offset: 1696)
!4885 = !DIDerivedType(tag: DW_TAG_member, name: "cond_suspend_depth", scope: !4832, file: !1999, line: 87, baseType: !7, size: 32, offset: 1728)
!4886 = !DIDerivedType(tag: DW_TAG_member, name: "force_resume_depth", scope: !4832, file: !1999, line: 88, baseType: !7, size: 32, offset: 1760)
!4887 = !DIDerivedType(tag: DW_TAG_member, name: "dir", scope: !4832, file: !1999, line: 91, baseType: !1997, size: 64, offset: 1792)
!4888 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !4832, file: !1999, line: 98, baseType: !304, size: 128, align: 64, offset: 1856)
!4889 = !DIDerivedType(tag: DW_TAG_member, name: "kobj", scope: !4832, file: !1999, line: 99, baseType: !3807, size: 512, offset: 1984)
!4890 = !DIDerivedType(tag: DW_TAG_member, name: "request_mutex", scope: !4832, file: !1999, line: 101, baseType: !954, size: 192, offset: 2496)
!4891 = !DIDerivedType(tag: DW_TAG_member, name: "parent_irq", scope: !4832, file: !1999, line: 102, baseType: !37, size: 32, offset: 2688)
!4892 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !4832, file: !1999, line: 103, baseType: !852, size: 64, offset: 2752)
!4893 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !4832, file: !1999, line: 104, baseType: !297, size: 64, offset: 2816)
!4894 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !4812, file: !4643, line: 1013, baseType: !707, size: 32, offset: 2816)
!4895 = !DIDerivedType(tag: DW_TAG_member, name: "mask_cache_priv", scope: !4812, file: !4643, line: 1014, baseType: !707, size: 32, offset: 2848)
!4896 = !DIDerivedType(tag: DW_TAG_member, name: "mask_cache", scope: !4812, file: !4643, line: 1015, baseType: !1460, size: 64, offset: 2880)
!4897 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !4462, file: !4463, line: 175, baseType: !4461, size: 64, offset: 576)
!4898 = !DIDerivedType(tag: DW_TAG_member, name: "hwirq_max", scope: !4462, file: !4463, line: 182, baseType: !4618, size: 64, offset: 640)
!4899 = !DIDerivedType(tag: DW_TAG_member, name: "revmap_direct_max_irq", scope: !4462, file: !4463, line: 183, baseType: !7, size: 32, offset: 704)
!4900 = !DIDerivedType(tag: DW_TAG_member, name: "revmap_size", scope: !4462, file: !4463, line: 184, baseType: !7, size: 32, offset: 736)
!4901 = !DIDerivedType(tag: DW_TAG_member, name: "revmap_tree", scope: !4462, file: !4463, line: 185, baseType: !1985, size: 128, offset: 768)
!4902 = !DIDerivedType(tag: DW_TAG_member, name: "revmap_tree_mutex", scope: !4462, file: !4463, line: 186, baseType: !954, size: 192, offset: 896)
!4903 = !DIDerivedType(tag: DW_TAG_member, name: "linear_revmap", scope: !4462, file: !4463, line: 187, baseType: !4904, offset: 1088)
!4904 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7, elements: !314)
!4905 = !DIDerivedType(tag: DW_TAG_member, name: "msi_list", scope: !3803, file: !3804, line: 499, baseType: !289, size: 128, offset: 4224)
!4906 = !DIDerivedType(tag: DW_TAG_member, name: "dma_ops", scope: !3803, file: !3804, line: 502, baseType: !4907, size: 64, offset: 4352)
!4907 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4908, size: 64)
!4908 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4909)
!4909 = !DICompositeType(tag: DW_TAG_structure_type, name: "dma_map_ops", file: !3804, line: 502, flags: DIFlagFwdDecl)
!4910 = !DIDerivedType(tag: DW_TAG_member, name: "dma_mask", scope: !3803, file: !3804, line: 504, baseType: !3338, size: 64, offset: 4416)
!4911 = !DIDerivedType(tag: DW_TAG_member, name: "coherent_dma_mask", scope: !3803, file: !3804, line: 505, baseType: !336, size: 64, offset: 4480)
!4912 = !DIDerivedType(tag: DW_TAG_member, name: "bus_dma_limit", scope: !3803, file: !3804, line: 510, baseType: !336, size: 64, offset: 4544)
!4913 = !DIDerivedType(tag: DW_TAG_member, name: "dma_range_map", scope: !3803, file: !3804, line: 511, baseType: !4914, size: 64, offset: 4608)
!4914 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4915, size: 64)
!4915 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4916)
!4916 = !DICompositeType(tag: DW_TAG_structure_type, name: "bus_dma_region", file: !3804, line: 511, flags: DIFlagFwdDecl)
!4917 = !DIDerivedType(tag: DW_TAG_member, name: "dma_parms", scope: !3803, file: !3804, line: 513, baseType: !4918, size: 64, offset: 4672)
!4918 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4919, size: 64)
!4919 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_dma_parameters", file: !3804, line: 288, size: 128, elements: !4920)
!4920 = !{!4921, !4922}
!4921 = !DIDerivedType(tag: DW_TAG_member, name: "max_segment_size", scope: !4919, file: !3804, line: 293, baseType: !7, size: 32)
!4922 = !DIDerivedType(tag: DW_TAG_member, name: "segment_boundary_mask", scope: !4919, file: !3804, line: 294, baseType: !317, size: 64, offset: 64)
!4923 = !DIDerivedType(tag: DW_TAG_member, name: "dma_pools", scope: !3803, file: !3804, line: 515, baseType: !289, size: 128, offset: 4736)
!4924 = !DIDerivedType(tag: DW_TAG_member, name: "archdata", scope: !3803, file: !3804, line: 526, baseType: !4925, offset: 4864)
!4925 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_archdata", file: !4926, line: 5, elements: !743)
!4926 = !DIFile(filename: "./arch/x86/include/asm/device.h", directory: "/home/lizy2001/genbc/linux")
!4927 = !DIDerivedType(tag: DW_TAG_member, name: "of_node", scope: !3803, file: !3804, line: 528, baseType: !4476, size: 64, offset: 4864)
!4928 = !DIDerivedType(tag: DW_TAG_member, name: "fwnode", scope: !3803, file: !3804, line: 529, baseType: !4489, size: 64, offset: 4928)
!4929 = !DIDerivedType(tag: DW_TAG_member, name: "devt", scope: !3803, file: !3804, line: 534, baseType: !819, size: 32, offset: 4992)
!4930 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !3803, file: !3804, line: 535, baseType: !707, size: 32, offset: 5024)
!4931 = !DIDerivedType(tag: DW_TAG_member, name: "devres_lock", scope: !3803, file: !3804, line: 537, baseType: !729, offset: 5056)
!4932 = !DIDerivedType(tag: DW_TAG_member, name: "devres_head", scope: !3803, file: !3804, line: 538, baseType: !289, size: 128, offset: 5056)
!4933 = !DIDerivedType(tag: DW_TAG_member, name: "class", scope: !3803, file: !3804, line: 540, baseType: !4934, size: 64, offset: 5184)
!4934 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4935, size: 64)
!4935 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "class", file: !4936, line: 54, size: 960, elements: !4937)
!4936 = !DIFile(filename: "./include/linux/device/class.h", directory: "/home/lizy2001/genbc/linux")
!4937 = !{!4938, !4939, !4940, !4941, !4942, !4943, !4944, !4948, !4952, !4953, !4954, !4955, !4959, !4963, !4964}
!4938 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !4935, file: !4936, line: 55, baseType: !297, size: 64)
!4939 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !4935, file: !4936, line: 56, baseType: !852, size: 64, offset: 64)
!4940 = !DIDerivedType(tag: DW_TAG_member, name: "class_groups", scope: !4935, file: !4936, line: 58, baseType: !3884, size: 64, offset: 128)
!4941 = !DIDerivedType(tag: DW_TAG_member, name: "dev_groups", scope: !4935, file: !4936, line: 59, baseType: !3884, size: 64, offset: 192)
!4942 = !DIDerivedType(tag: DW_TAG_member, name: "dev_kobj", scope: !4935, file: !4936, line: 60, baseType: !3813, size: 64, offset: 256)
!4943 = !DIDerivedType(tag: DW_TAG_member, name: "dev_uevent", scope: !4935, file: !4936, line: 62, baseType: !4185, size: 64, offset: 320)
!4944 = !DIDerivedType(tag: DW_TAG_member, name: "devnode", scope: !4935, file: !4936, line: 63, baseType: !4945, size: 64, offset: 384)
!4945 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4946, size: 64)
!4946 = !DISubroutineType(types: !4947)
!4947 = !{!577, !4172, !4192}
!4948 = !DIDerivedType(tag: DW_TAG_member, name: "class_release", scope: !4935, file: !4936, line: 65, baseType: !4949, size: 64, offset: 448)
!4949 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4950, size: 64)
!4950 = !DISubroutineType(types: !4951)
!4951 = !{null, !4934}
!4952 = !DIDerivedType(tag: DW_TAG_member, name: "dev_release", scope: !4935, file: !4936, line: 66, baseType: !4194, size: 64, offset: 512)
!4953 = !DIDerivedType(tag: DW_TAG_member, name: "shutdown_pre", scope: !4935, file: !4936, line: 68, baseType: !4204, size: 64, offset: 576)
!4954 = !DIDerivedType(tag: DW_TAG_member, name: "ns_type", scope: !4935, file: !4936, line: 70, baseType: !3920, size: 64, offset: 640)
!4955 = !DIDerivedType(tag: DW_TAG_member, name: "namespace", scope: !4935, file: !4936, line: 71, baseType: !4956, size: 64, offset: 704)
!4956 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4957, size: 64)
!4957 = !DISubroutineType(types: !4958)
!4958 = !{!2244, !4172}
!4959 = !DIDerivedType(tag: DW_TAG_member, name: "get_ownership", scope: !4935, file: !4936, line: 73, baseType: !4960, size: 64, offset: 768)
!4960 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4961, size: 64)
!4961 = !DISubroutineType(types: !4962)
!4962 = !{null, !4172, !1882, !1883}
!4963 = !DIDerivedType(tag: DW_TAG_member, name: "pm", scope: !4935, file: !4936, line: 75, baseType: !4198, size: 64, offset: 832)
!4964 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !4935, file: !4936, line: 77, baseType: !4317, size: 64, offset: 896)
!4965 = !DIDerivedType(tag: DW_TAG_member, name: "groups", scope: !3803, file: !3804, line: 541, baseType: !3884, size: 64, offset: 5248)
!4966 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !3803, file: !3804, line: 543, baseType: !4194, size: 64, offset: 5312)
!4967 = !DIDerivedType(tag: DW_TAG_member, name: "iommu_group", scope: !3803, file: !3804, line: 544, baseType: !4968, size: 64, offset: 5376)
!4968 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4969, size: 64)
!4969 = !DICompositeType(tag: DW_TAG_structure_type, name: "iommu_group", file: !3804, line: 45, flags: DIFlagFwdDecl)
!4970 = !DIDerivedType(tag: DW_TAG_member, name: "iommu", scope: !3803, file: !3804, line: 545, baseType: !4971, size: 64, offset: 5440)
!4971 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4972, size: 64)
!4972 = !DICompositeType(tag: DW_TAG_structure_type, name: "dev_iommu", file: !3804, line: 47, flags: DIFlagFwdDecl)
!4973 = !DIDerivedType(tag: DW_TAG_member, name: "offline_disabled", scope: !3803, file: !3804, line: 547, baseType: !540, size: 1, offset: 5504, flags: DIFlagBitField, extraData: i64 5504)
!4974 = !DIDerivedType(tag: DW_TAG_member, name: "offline", scope: !3803, file: !3804, line: 548, baseType: !540, size: 1, offset: 5505, flags: DIFlagBitField, extraData: i64 5504)
!4975 = !DIDerivedType(tag: DW_TAG_member, name: "of_node_reused", scope: !3803, file: !3804, line: 549, baseType: !540, size: 1, offset: 5506, flags: DIFlagBitField, extraData: i64 5504)
!4976 = !DIDerivedType(tag: DW_TAG_member, name: "state_synced", scope: !3803, file: !3804, line: 550, baseType: !540, size: 1, offset: 5507, flags: DIFlagBitField, extraData: i64 5504)
!4977 = !DIDerivedType(tag: DW_TAG_member, name: "holder_dir", scope: !3772, file: !3755, line: 69, baseType: !3813, size: 64, offset: 5952)
!4978 = !DIDerivedType(tag: DW_TAG_member, name: "policy", scope: !3772, file: !3755, line: 70, baseType: !37, size: 32, offset: 6016)
!4979 = !DIDerivedType(tag: DW_TAG_member, name: "partno", scope: !3772, file: !3755, line: 70, baseType: !37, size: 32, offset: 6048)
!4980 = !DIDerivedType(tag: DW_TAG_member, name: "info", scope: !3772, file: !3755, line: 71, baseType: !4981, size: 64, offset: 6080)
!4981 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4982, size: 64)
!4982 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "partition_meta_info", file: !3755, line: 48, size: 808, elements: !4983)
!4983 = !{!4984, !4986}
!4984 = !DIDerivedType(tag: DW_TAG_member, name: "uuid", scope: !4982, file: !3755, line: 49, baseType: !4985, size: 296)
!4985 = !DICompositeType(tag: DW_TAG_array_type, baseType: !273, size: 296, elements: !2055)
!4986 = !DIDerivedType(tag: DW_TAG_member, name: "volname", scope: !4982, file: !3755, line: 50, baseType: !4987, size: 512, offset: 296)
!4987 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1397, size: 512, elements: !3707)
!4988 = !DIDerivedType(tag: DW_TAG_member, name: "rcu_work", scope: !3772, file: !3755, line: 75, baseType: !4989, size: 448, offset: 6144)
!4989 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rcu_work", file: !1808, line: 124, size: 448, elements: !4990)
!4990 = !{!4991, !4992, !4993}
!4991 = !DIDerivedType(tag: DW_TAG_member, name: "work", scope: !4989, file: !1808, line: 125, baseType: !1807, size: 256)
!4992 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !4989, file: !1808, line: 126, baseType: !304, size: 128, align: 64, offset: 256)
!4993 = !DIDerivedType(tag: DW_TAG_member, name: "wq", scope: !4989, file: !1808, line: 129, baseType: !2757, size: 64, offset: 384)
!4994 = !DIDerivedType(tag: DW_TAG_member, name: "part", scope: !3766, file: !3755, line: 153, baseType: !4995, offset: 256)
!4995 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3771, elements: !314)
!4996 = !DIDerivedType(tag: DW_TAG_member, name: "part0", scope: !3754, file: !3755, line: 187, baseType: !3772, size: 6592, offset: 448)
!4997 = !DIDerivedType(tag: DW_TAG_member, name: "fops", scope: !3754, file: !3755, line: 189, baseType: !4998, size: 64, offset: 7040)
!4998 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4999, size: 64)
!4999 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5000)
!5000 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "block_device_operations", file: !5001, line: 1844, size: 960, elements: !5002)
!5001 = !DIFile(filename: "./include/linux/blkdev.h", directory: "/home/lizy2001/genbc/linux")
!5002 = !{!5003, !5008, !5103, !5107, !5111, !5115, !5116, !5120, !5124, !5128, !5134, !5138, !5164, !5168, !5169}
!5003 = !DIDerivedType(tag: DW_TAG_member, name: "submit_bio", scope: !5000, file: !5001, line: 1845, baseType: !5004, size: 64)
!5004 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5005, size: 64)
!5005 = !DISubroutineType(types: !5006)
!5006 = !{!5007, !3747}
!5007 = !DIDerivedType(tag: DW_TAG_typedef, name: "blk_qc_t", file: !3749, line: 515, baseType: !7)
!5008 = !DIDerivedType(tag: DW_TAG_member, name: "open", scope: !5000, file: !5001, line: 1846, baseType: !5009, size: 64, offset: 64)
!5009 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5010, size: 64)
!5010 = !DISubroutineType(types: !5011)
!5011 = !{!37, !5012, !5102}
!5012 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5013, size: 64)
!5013 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "block_device", file: !3749, line: 22, size: 1344, elements: !5014)
!5014 = !{!5015, !5016, !5017, !5018, !5019, !5020, !5021, !5022, !5023, !5024, !5025, !5026, !5027, !5028, !5029, !5030, !5031, !5100, !5101}
!5015 = !DIDerivedType(tag: DW_TAG_member, name: "bd_dev", scope: !5013, file: !3749, line: 23, baseType: !819, size: 32)
!5016 = !DIDerivedType(tag: DW_TAG_member, name: "bd_openers", scope: !5013, file: !3749, line: 24, baseType: !37, size: 32, offset: 32)
!5017 = !DIDerivedType(tag: DW_TAG_member, name: "bd_inode", scope: !5013, file: !3749, line: 25, baseType: !642, size: 64, offset: 64)
!5018 = !DIDerivedType(tag: DW_TAG_member, name: "bd_super", scope: !5013, file: !3749, line: 26, baseType: !814, size: 64, offset: 128)
!5019 = !DIDerivedType(tag: DW_TAG_member, name: "bd_mutex", scope: !5013, file: !3749, line: 27, baseType: !954, size: 192, offset: 192)
!5020 = !DIDerivedType(tag: DW_TAG_member, name: "bd_claiming", scope: !5013, file: !3749, line: 28, baseType: !570, size: 64, offset: 384)
!5021 = !DIDerivedType(tag: DW_TAG_member, name: "bd_holder", scope: !5013, file: !3749, line: 29, baseType: !570, size: 64, offset: 448)
!5022 = !DIDerivedType(tag: DW_TAG_member, name: "bd_holders", scope: !5013, file: !3749, line: 30, baseType: !37, size: 32, offset: 512)
!5023 = !DIDerivedType(tag: DW_TAG_member, name: "bd_write_holder", scope: !5013, file: !3749, line: 31, baseType: !540, size: 8, offset: 544)
!5024 = !DIDerivedType(tag: DW_TAG_member, name: "bd_holder_disks", scope: !5013, file: !3749, line: 33, baseType: !289, size: 128, offset: 576)
!5025 = !DIDerivedType(tag: DW_TAG_member, name: "bd_contains", scope: !5013, file: !3749, line: 35, baseType: !5012, size: 64, offset: 704)
!5026 = !DIDerivedType(tag: DW_TAG_member, name: "bd_partno", scope: !5013, file: !3749, line: 36, baseType: !1397, size: 8, offset: 768)
!5027 = !DIDerivedType(tag: DW_TAG_member, name: "bd_part", scope: !5013, file: !3749, line: 37, baseType: !3771, size: 64, offset: 832)
!5028 = !DIDerivedType(tag: DW_TAG_member, name: "bd_part_count", scope: !5013, file: !3749, line: 39, baseType: !7, size: 32, offset: 896)
!5029 = !DIDerivedType(tag: DW_TAG_member, name: "bd_size_lock", scope: !5013, file: !3749, line: 41, baseType: !729, offset: 928)
!5030 = !DIDerivedType(tag: DW_TAG_member, name: "bd_disk", scope: !5013, file: !3749, line: 42, baseType: !3753, size: 64, offset: 960)
!5031 = !DIDerivedType(tag: DW_TAG_member, name: "bd_bdi", scope: !5013, file: !3749, line: 43, baseType: !5032, size: 64, offset: 1024)
!5032 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5033, size: 64)
!5033 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "backing_dev_info", file: !5034, line: 165, size: 4672, elements: !5035)
!5034 = !DIFile(filename: "./include/linux/backing-dev-defs.h", directory: "/home/lizy2001/genbc/linux")
!5035 = !{!5036, !5037, !5038, !5039, !5040, !5041, !5042, !5043, !5044, !5045, !5046, !5047, !5093, !5094, !5095, !5096, !5098, !5099}
!5036 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !5033, file: !5034, line: 166, baseType: !336, size: 64)
!5037 = !DIDerivedType(tag: DW_TAG_member, name: "rb_node", scope: !5033, file: !5034, line: 167, baseType: !438, size: 192, align: 64, offset: 64)
!5038 = !DIDerivedType(tag: DW_TAG_member, name: "bdi_list", scope: !5033, file: !5034, line: 168, baseType: !289, size: 128, offset: 256)
!5039 = !DIDerivedType(tag: DW_TAG_member, name: "ra_pages", scope: !5033, file: !5034, line: 169, baseType: !317, size: 64, offset: 384)
!5040 = !DIDerivedType(tag: DW_TAG_member, name: "io_pages", scope: !5033, file: !5034, line: 170, baseType: !317, size: 64, offset: 448)
!5041 = !DIDerivedType(tag: DW_TAG_member, name: "refcnt", scope: !5033, file: !5034, line: 172, baseType: !4162, size: 32, offset: 512)
!5042 = !DIDerivedType(tag: DW_TAG_member, name: "capabilities", scope: !5033, file: !5034, line: 173, baseType: !7, size: 32, offset: 544)
!5043 = !DIDerivedType(tag: DW_TAG_member, name: "min_ratio", scope: !5033, file: !5034, line: 174, baseType: !7, size: 32, offset: 576)
!5044 = !DIDerivedType(tag: DW_TAG_member, name: "max_ratio", scope: !5033, file: !5034, line: 175, baseType: !7, size: 32, offset: 608)
!5045 = !DIDerivedType(tag: DW_TAG_member, name: "max_prop_frac", scope: !5033, file: !5034, line: 175, baseType: !7, size: 32, offset: 640)
!5046 = !DIDerivedType(tag: DW_TAG_member, name: "tot_write_bandwidth", scope: !5033, file: !5034, line: 181, baseType: !376, size: 64, offset: 704)
!5047 = !DIDerivedType(tag: DW_TAG_member, name: "wb", scope: !5033, file: !5034, line: 183, baseType: !5048, size: 2688, offset: 768)
!5048 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bdi_writeback", file: !5034, line: 107, size: 2688, elements: !5049)
!5049 = !{!5050, !5051, !5052, !5053, !5054, !5055, !5056, !5057, !5058, !5060, !5061, !5062, !5063, !5064, !5065, !5066, !5067, !5068, !5075, !5076, !5088, !5089, !5090, !5091, !5092}
!5050 = !DIDerivedType(tag: DW_TAG_member, name: "bdi", scope: !5048, file: !5034, line: 108, baseType: !5032, size: 64)
!5051 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !5048, file: !5034, line: 110, baseType: !317, size: 64, offset: 64)
!5052 = !DIDerivedType(tag: DW_TAG_member, name: "last_old_flush", scope: !5048, file: !5034, line: 111, baseType: !317, size: 64, offset: 128)
!5053 = !DIDerivedType(tag: DW_TAG_member, name: "b_dirty", scope: !5048, file: !5034, line: 113, baseType: !289, size: 128, offset: 192)
!5054 = !DIDerivedType(tag: DW_TAG_member, name: "b_io", scope: !5048, file: !5034, line: 114, baseType: !289, size: 128, offset: 320)
!5055 = !DIDerivedType(tag: DW_TAG_member, name: "b_more_io", scope: !5048, file: !5034, line: 115, baseType: !289, size: 128, offset: 448)
!5056 = !DIDerivedType(tag: DW_TAG_member, name: "b_dirty_time", scope: !5048, file: !5034, line: 116, baseType: !289, size: 128, offset: 576)
!5057 = !DIDerivedType(tag: DW_TAG_member, name: "list_lock", scope: !5048, file: !5034, line: 117, baseType: !729, offset: 704)
!5058 = !DIDerivedType(tag: DW_TAG_member, name: "stat", scope: !5048, file: !5034, line: 119, baseType: !5059, size: 256, offset: 704)
!5059 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2863, size: 256, elements: !1202)
!5060 = !DIDerivedType(tag: DW_TAG_member, name: "congested", scope: !5048, file: !5034, line: 121, baseType: !317, size: 64, offset: 960)
!5061 = !DIDerivedType(tag: DW_TAG_member, name: "bw_time_stamp", scope: !5048, file: !5034, line: 123, baseType: !317, size: 64, offset: 1024)
!5062 = !DIDerivedType(tag: DW_TAG_member, name: "dirtied_stamp", scope: !5048, file: !5034, line: 124, baseType: !317, size: 64, offset: 1088)
!5063 = !DIDerivedType(tag: DW_TAG_member, name: "written_stamp", scope: !5048, file: !5034, line: 125, baseType: !317, size: 64, offset: 1152)
!5064 = !DIDerivedType(tag: DW_TAG_member, name: "write_bandwidth", scope: !5048, file: !5034, line: 126, baseType: !317, size: 64, offset: 1216)
!5065 = !DIDerivedType(tag: DW_TAG_member, name: "avg_write_bandwidth", scope: !5048, file: !5034, line: 127, baseType: !317, size: 64, offset: 1280)
!5066 = !DIDerivedType(tag: DW_TAG_member, name: "dirty_ratelimit", scope: !5048, file: !5034, line: 135, baseType: !317, size: 64, offset: 1344)
!5067 = !DIDerivedType(tag: DW_TAG_member, name: "balanced_dirty_ratelimit", scope: !5048, file: !5034, line: 136, baseType: !317, size: 64, offset: 1408)
!5068 = !DIDerivedType(tag: DW_TAG_member, name: "completions", scope: !5048, file: !5034, line: 138, baseType: !5069, size: 128, offset: 1472)
!5069 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fprop_local_percpu", file: !5070, line: 76, size: 128, elements: !5071)
!5070 = !DIFile(filename: "./include/linux/flex_proportions.h", directory: "/home/lizy2001/genbc/linux")
!5071 = !{!5072, !5073, !5074}
!5072 = !DIDerivedType(tag: DW_TAG_member, name: "events", scope: !5069, file: !5070, line: 78, baseType: !2863, size: 64)
!5073 = !DIDerivedType(tag: DW_TAG_member, name: "period", scope: !5069, file: !5070, line: 80, baseType: !7, size: 32, offset: 64)
!5074 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !5069, file: !5070, line: 81, baseType: !1168, offset: 96)
!5075 = !DIDerivedType(tag: DW_TAG_member, name: "dirty_exceeded", scope: !5048, file: !5034, line: 139, baseType: !37, size: 32, offset: 1600)
!5076 = !DIDerivedType(tag: DW_TAG_member, name: "start_all_reason", scope: !5048, file: !5034, line: 140, baseType: !5077, size: 32, offset: 1632)
!5077 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "wb_reason", file: !5034, line: 49, baseType: !7, size: 32, elements: !5078)
!5078 = !{!5079, !5080, !5081, !5082, !5083, !5084, !5085, !5086, !5087}
!5079 = !DIEnumerator(name: "WB_REASON_BACKGROUND", value: 0, isUnsigned: true)
!5080 = !DIEnumerator(name: "WB_REASON_VMSCAN", value: 1, isUnsigned: true)
!5081 = !DIEnumerator(name: "WB_REASON_SYNC", value: 2, isUnsigned: true)
!5082 = !DIEnumerator(name: "WB_REASON_PERIODIC", value: 3, isUnsigned: true)
!5083 = !DIEnumerator(name: "WB_REASON_LAPTOP_TIMER", value: 4, isUnsigned: true)
!5084 = !DIEnumerator(name: "WB_REASON_FS_FREE_SPACE", value: 5, isUnsigned: true)
!5085 = !DIEnumerator(name: "WB_REASON_FORKER_THREAD", value: 6, isUnsigned: true)
!5086 = !DIEnumerator(name: "WB_REASON_FOREIGN_FLUSH", value: 7, isUnsigned: true)
!5087 = !DIEnumerator(name: "WB_REASON_MAX", value: 8, isUnsigned: true)
!5088 = !DIDerivedType(tag: DW_TAG_member, name: "work_lock", scope: !5048, file: !5034, line: 142, baseType: !729, offset: 1664)
!5089 = !DIDerivedType(tag: DW_TAG_member, name: "work_list", scope: !5048, file: !5034, line: 143, baseType: !289, size: 128, offset: 1664)
!5090 = !DIDerivedType(tag: DW_TAG_member, name: "dwork", scope: !5048, file: !5034, line: 144, baseType: !2752, size: 704, offset: 1792)
!5091 = !DIDerivedType(tag: DW_TAG_member, name: "dirty_sleep", scope: !5048, file: !5034, line: 146, baseType: !317, size: 64, offset: 2496)
!5092 = !DIDerivedType(tag: DW_TAG_member, name: "bdi_node", scope: !5048, file: !5034, line: 148, baseType: !289, size: 128, offset: 2560)
!5093 = !DIDerivedType(tag: DW_TAG_member, name: "wb_list", scope: !5033, file: !5034, line: 184, baseType: !289, size: 128, offset: 3456)
!5094 = !DIDerivedType(tag: DW_TAG_member, name: "wb_waitq", scope: !5033, file: !5034, line: 190, baseType: !1100, size: 128, offset: 3584)
!5095 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !5033, file: !5034, line: 192, baseType: !4172, size: 64, offset: 3712)
!5096 = !DIDerivedType(tag: DW_TAG_member, name: "dev_name", scope: !5033, file: !5034, line: 193, baseType: !5097, size: 512, offset: 3776)
!5097 = !DICompositeType(tag: DW_TAG_array_type, baseType: !273, size: 512, elements: !3707)
!5098 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !5033, file: !5034, line: 194, baseType: !4172, size: 64, offset: 4288)
!5099 = !DIDerivedType(tag: DW_TAG_member, name: "laptop_mode_wb_timer", scope: !5033, file: !5034, line: 196, baseType: !2221, size: 320, offset: 4352)
!5100 = !DIDerivedType(tag: DW_TAG_member, name: "bd_fsfreeze_count", scope: !5013, file: !3749, line: 46, baseType: !37, size: 32, offset: 1088)
!5101 = !DIDerivedType(tag: DW_TAG_member, name: "bd_fsfreeze_mutex", scope: !5013, file: !3749, line: 48, baseType: !954, size: 192, offset: 1152)
!5102 = !DIDerivedType(tag: DW_TAG_typedef, name: "fmode_t", file: !282, line: 150, baseType: !7)
!5103 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !5000, file: !5001, line: 1847, baseType: !5104, size: 64, offset: 128)
!5104 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5105, size: 64)
!5105 = !DISubroutineType(types: !5106)
!5106 = !{null, !3753, !5102}
!5107 = !DIDerivedType(tag: DW_TAG_member, name: "rw_page", scope: !5000, file: !5001, line: 1848, baseType: !5108, size: 64, offset: 192)
!5108 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5109, size: 64)
!5109 = !DISubroutineType(types: !5110)
!5110 = !{!37, !5012, !3775, !624, !7}
!5111 = !DIDerivedType(tag: DW_TAG_member, name: "ioctl", scope: !5000, file: !5001, line: 1849, baseType: !5112, size: 64, offset: 256)
!5112 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5113, size: 64)
!5113 = !DISubroutineType(types: !5114)
!5114 = !{!37, !5012, !5102, !7, !317}
!5115 = !DIDerivedType(tag: DW_TAG_member, name: "compat_ioctl", scope: !5000, file: !5001, line: 1850, baseType: !5112, size: 64, offset: 320)
!5116 = !DIDerivedType(tag: DW_TAG_member, name: "check_events", scope: !5000, file: !5001, line: 1851, baseType: !5117, size: 64, offset: 384)
!5117 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5118, size: 64)
!5118 = !DISubroutineType(types: !5119)
!5119 = !{!7, !3753, !7}
!5120 = !DIDerivedType(tag: DW_TAG_member, name: "unlock_native_capacity", scope: !5000, file: !5001, line: 1853, baseType: !5121, size: 64, offset: 448)
!5121 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5122, size: 64)
!5122 = !DISubroutineType(types: !5123)
!5123 = !{null, !3753}
!5124 = !DIDerivedType(tag: DW_TAG_member, name: "revalidate_disk", scope: !5000, file: !5001, line: 1854, baseType: !5125, size: 64, offset: 512)
!5125 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5126, size: 64)
!5126 = !DISubroutineType(types: !5127)
!5127 = !{!37, !3753}
!5128 = !DIDerivedType(tag: DW_TAG_member, name: "getgeo", scope: !5000, file: !5001, line: 1855, baseType: !5129, size: 64, offset: 576)
!5129 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5130, size: 64)
!5130 = !DISubroutineType(types: !5131)
!5131 = !{!37, !5012, !5132}
!5132 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5133, size: 64)
!5133 = !DICompositeType(tag: DW_TAG_structure_type, name: "hd_geometry", file: !639, line: 51, flags: DIFlagFwdDecl)
!5134 = !DIDerivedType(tag: DW_TAG_member, name: "swap_slot_free_notify", scope: !5000, file: !5001, line: 1857, baseType: !5135, size: 64, offset: 640)
!5135 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5136, size: 64)
!5136 = !DISubroutineType(types: !5137)
!5137 = !{null, !5012, !317}
!5138 = !DIDerivedType(tag: DW_TAG_member, name: "report_zones", scope: !5000, file: !5001, line: 1858, baseType: !5139, size: 64, offset: 704)
!5139 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5140, size: 64)
!5140 = !DISubroutineType(types: !5141)
!5141 = !{!37, !3753, !3775, !7, !5142, !570}
!5142 = !DIDerivedType(tag: DW_TAG_typedef, name: "report_zones_cb", file: !5001, line: 354, baseType: !5143)
!5143 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5144, size: 64)
!5144 = !DISubroutineType(types: !5145)
!5145 = !{!37, !5146, !7, !570}
!5146 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5147, size: 64)
!5147 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "blk_zone", file: !5148, line: 106, size: 512, elements: !5149)
!5148 = !DIFile(filename: "./include/uapi/linux/blkzoned.h", directory: "/home/lizy2001/genbc/linux")
!5149 = !{!5150, !5151, !5152, !5153, !5154, !5155, !5156, !5157, !5159, !5160}
!5150 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !5147, file: !5148, line: 107, baseType: !338, size: 64)
!5151 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !5147, file: !5148, line: 108, baseType: !338, size: 64, offset: 64)
!5152 = !DIDerivedType(tag: DW_TAG_member, name: "wp", scope: !5147, file: !5148, line: 109, baseType: !338, size: 64, offset: 128)
!5153 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !5147, file: !5148, line: 110, baseType: !1398, size: 8, offset: 192)
!5154 = !DIDerivedType(tag: DW_TAG_member, name: "cond", scope: !5147, file: !5148, line: 111, baseType: !1398, size: 8, offset: 200)
!5155 = !DIDerivedType(tag: DW_TAG_member, name: "non_seq", scope: !5147, file: !5148, line: 112, baseType: !1398, size: 8, offset: 208)
!5156 = !DIDerivedType(tag: DW_TAG_member, name: "reset", scope: !5147, file: !5148, line: 113, baseType: !1398, size: 8, offset: 216)
!5157 = !DIDerivedType(tag: DW_TAG_member, name: "resv", scope: !5147, file: !5148, line: 114, baseType: !5158, size: 32, offset: 224)
!5158 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1398, size: 32, elements: !1202)
!5159 = !DIDerivedType(tag: DW_TAG_member, name: "capacity", scope: !5147, file: !5148, line: 115, baseType: !338, size: 64, offset: 256)
!5160 = !DIDerivedType(tag: DW_TAG_member, name: "reserved", scope: !5147, file: !5148, line: 116, baseType: !5161, size: 192, offset: 320)
!5161 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1398, size: 192, elements: !5162)
!5162 = !{!5163}
!5163 = !DISubrange(count: 24)
!5164 = !DIDerivedType(tag: DW_TAG_member, name: "devnode", scope: !5000, file: !5001, line: 1860, baseType: !5165, size: 64, offset: 768)
!5165 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5166, size: 64)
!5166 = !DISubroutineType(types: !5167)
!5167 = !{!577, !3753, !4192}
!5168 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !5000, file: !5001, line: 1861, baseType: !852, size: 64, offset: 832)
!5169 = !DIDerivedType(tag: DW_TAG_member, name: "pr_ops", scope: !5000, file: !5001, line: 1862, baseType: !5170, size: 64, offset: 896)
!5170 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5171, size: 64)
!5171 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5172)
!5172 = !DICompositeType(tag: DW_TAG_structure_type, name: "pr_ops", file: !5001, line: 41, flags: DIFlagFwdDecl)
!5173 = !DIDerivedType(tag: DW_TAG_member, name: "queue", scope: !3754, file: !3755, line: 190, baseType: !5174, size: 64, offset: 7104)
!5174 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5175, size: 64)
!5175 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "request_queue", file: !5001, line: 399, size: 14464, elements: !5176)
!5176 = !{!5177, !5312, !5441, !5442, !5445, !5448, !5452, !5453, !5454, !5456, !5457, !5458, !5459, !5460, !5461, !5462, !5463, !5464, !5465, !5466, !5502, !5503, !5504, !5505, !5506, !5507, !5508, !5509, !5510, !5513, !5522, !5523, !5524, !5525, !5526, !5561, !5562, !5563, !5564, !5565, !5566, !5569, !5570, !5571, !5572, !5573, !5574, !5575, !5576, !5577, !5639, !5640, !5641, !5642, !5645, !5646, !5679, !5680, !5681, !5682}
!5177 = !DIDerivedType(tag: DW_TAG_member, name: "last_merge", scope: !5175, file: !5001, line: 400, baseType: !5178, size: 64)
!5178 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5179, size: 64)
!5179 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "request", file: !5001, line: 130, size: 2176, elements: !5180)
!5180 = !{!5181, !5182, !5185, !5188, !5189, !5191, !5192, !5193, !5194, !5195, !5196, !5197, !5198, !5203, !5210, !5259, !5260, !5261, !5262, !5263, !5264, !5265, !5266, !5267, !5268, !5274, !5275, !5276, !5277, !5310, !5311}
!5181 = !DIDerivedType(tag: DW_TAG_member, name: "q", scope: !5179, file: !5001, line: 131, baseType: !5174, size: 64)
!5182 = !DIDerivedType(tag: DW_TAG_member, name: "mq_ctx", scope: !5179, file: !5001, line: 132, baseType: !5183, size: 64, offset: 64)
!5183 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5184, size: 64)
!5184 = !DICompositeType(tag: DW_TAG_structure_type, name: "blk_mq_ctx", file: !5001, line: 132, flags: DIFlagFwdDecl)
!5185 = !DIDerivedType(tag: DW_TAG_member, name: "mq_hctx", scope: !5179, file: !5001, line: 133, baseType: !5186, size: 64, offset: 128)
!5186 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5187, size: 64)
!5187 = !DICompositeType(tag: DW_TAG_structure_type, name: "blk_mq_hw_ctx", file: !5001, line: 133, flags: DIFlagFwdDecl)
!5188 = !DIDerivedType(tag: DW_TAG_member, name: "cmd_flags", scope: !5179, file: !5001, line: 135, baseType: !7, size: 32, offset: 192)
!5189 = !DIDerivedType(tag: DW_TAG_member, name: "rq_flags", scope: !5179, file: !5001, line: 136, baseType: !5190, size: 32, offset: 224)
!5190 = !DIDerivedType(tag: DW_TAG_typedef, name: "req_flags_t", file: !5001, line: 66, baseType: !468)
!5191 = !DIDerivedType(tag: DW_TAG_member, name: "tag", scope: !5179, file: !5001, line: 138, baseType: !37, size: 32, offset: 256)
!5192 = !DIDerivedType(tag: DW_TAG_member, name: "internal_tag", scope: !5179, file: !5001, line: 139, baseType: !37, size: 32, offset: 288)
!5193 = !DIDerivedType(tag: DW_TAG_member, name: "__data_len", scope: !5179, file: !5001, line: 142, baseType: !7, size: 32, offset: 320)
!5194 = !DIDerivedType(tag: DW_TAG_member, name: "__sector", scope: !5179, file: !5001, line: 143, baseType: !3775, size: 64, offset: 384)
!5195 = !DIDerivedType(tag: DW_TAG_member, name: "bio", scope: !5179, file: !5001, line: 145, baseType: !3747, size: 64, offset: 448)
!5196 = !DIDerivedType(tag: DW_TAG_member, name: "biotail", scope: !5179, file: !5001, line: 146, baseType: !3747, size: 64, offset: 512)
!5197 = !DIDerivedType(tag: DW_TAG_member, name: "queuelist", scope: !5179, file: !5001, line: 148, baseType: !289, size: 128, offset: 576)
!5198 = !DIDerivedType(tag: DW_TAG_member, scope: !5179, file: !5001, line: 157, baseType: !5199, size: 128, offset: 704)
!5199 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5179, file: !5001, line: 157, size: 128, elements: !5200)
!5200 = !{!5201, !5202}
!5201 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !5199, file: !5001, line: 158, baseType: !281, size: 128)
!5202 = !DIDerivedType(tag: DW_TAG_member, name: "ipi_list", scope: !5199, file: !5001, line: 159, baseType: !289, size: 128)
!5203 = !DIDerivedType(tag: DW_TAG_member, scope: !5179, file: !5001, line: 167, baseType: !5204, size: 192, offset: 832)
!5204 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5179, file: !5001, line: 167, size: 192, elements: !5205)
!5205 = !{!5206, !5207, !5208, !5209}
!5206 = !DIDerivedType(tag: DW_TAG_member, name: "rb_node", scope: !5204, file: !5001, line: 168, baseType: !438, size: 192, align: 64)
!5207 = !DIDerivedType(tag: DW_TAG_member, name: "special_vec", scope: !5204, file: !5001, line: 169, baseType: !620, size: 128)
!5208 = !DIDerivedType(tag: DW_TAG_member, name: "completion_data", scope: !5204, file: !5001, line: 170, baseType: !570, size: 64)
!5209 = !DIDerivedType(tag: DW_TAG_member, name: "error_count", scope: !5204, file: !5001, line: 171, baseType: !37, size: 32)
!5210 = !DIDerivedType(tag: DW_TAG_member, scope: !5179, file: !5001, line: 180, baseType: !5211, size: 256, offset: 1024)
!5211 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5179, file: !5001, line: 180, size: 256, elements: !5212)
!5212 = !{!5213, !5248}
!5213 = !DIDerivedType(tag: DW_TAG_member, name: "elv", scope: !5211, file: !5001, line: 184, baseType: !5214, size: 192)
!5214 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !5211, file: !5001, line: 181, size: 192, elements: !5215)
!5215 = !{!5216, !5246}
!5216 = !DIDerivedType(tag: DW_TAG_member, name: "icq", scope: !5214, file: !5001, line: 182, baseType: !5217, size: 64)
!5217 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5218, size: 64)
!5218 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "io_cq", file: !5219, line: 73, size: 448, elements: !5220)
!5219 = !DIFile(filename: "./include/linux/iocontext.h", directory: "/home/lizy2001/genbc/linux")
!5220 = !{!5221, !5222, !5235, !5240, !5245}
!5221 = !DIDerivedType(tag: DW_TAG_member, name: "q", scope: !5218, file: !5219, line: 74, baseType: !5174, size: 64)
!5222 = !DIDerivedType(tag: DW_TAG_member, name: "ioc", scope: !5218, file: !5219, line: 75, baseType: !5223, size: 64, offset: 64)
!5223 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5224, size: 64)
!5224 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "io_context", file: !5219, line: 99, size: 704, elements: !5225)
!5225 = !{!5226, !5227, !5228, !5229, !5230, !5231, !5232, !5233, !5234}
!5226 = !DIDerivedType(tag: DW_TAG_member, name: "refcount", scope: !5224, file: !5219, line: 100, baseType: !376, size: 64)
!5227 = !DIDerivedType(tag: DW_TAG_member, name: "active_ref", scope: !5224, file: !5219, line: 101, baseType: !388, size: 32, offset: 64)
!5228 = !DIDerivedType(tag: DW_TAG_member, name: "nr_tasks", scope: !5224, file: !5219, line: 102, baseType: !388, size: 32, offset: 96)
!5229 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !5224, file: !5219, line: 105, baseType: !729, offset: 128)
!5230 = !DIDerivedType(tag: DW_TAG_member, name: "ioprio", scope: !5224, file: !5219, line: 107, baseType: !477, size: 16, offset: 128)
!5231 = !DIDerivedType(tag: DW_TAG_member, name: "icq_tree", scope: !5224, file: !5219, line: 109, baseType: !1985, size: 128, offset: 192)
!5232 = !DIDerivedType(tag: DW_TAG_member, name: "icq_hint", scope: !5224, file: !5219, line: 110, baseType: !5217, size: 64, offset: 320)
!5233 = !DIDerivedType(tag: DW_TAG_member, name: "icq_list", scope: !5224, file: !5219, line: 111, baseType: !857, size: 64, offset: 384)
!5234 = !DIDerivedType(tag: DW_TAG_member, name: "release_work", scope: !5224, file: !5219, line: 113, baseType: !1807, size: 256, offset: 448)
!5235 = !DIDerivedType(tag: DW_TAG_member, scope: !5218, file: !5219, line: 83, baseType: !5236, size: 128, offset: 128)
!5236 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5218, file: !5219, line: 83, size: 128, elements: !5237)
!5237 = !{!5238, !5239}
!5238 = !DIDerivedType(tag: DW_TAG_member, name: "q_node", scope: !5236, file: !5219, line: 84, baseType: !289, size: 128)
!5239 = !DIDerivedType(tag: DW_TAG_member, name: "__rcu_icq_cache", scope: !5236, file: !5219, line: 85, baseType: !2252, size: 64)
!5240 = !DIDerivedType(tag: DW_TAG_member, scope: !5218, file: !5219, line: 87, baseType: !5241, size: 128, offset: 256)
!5241 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5218, file: !5219, line: 87, size: 128, elements: !5242)
!5242 = !{!5243, !5244}
!5243 = !DIDerivedType(tag: DW_TAG_member, name: "ioc_node", scope: !5241, file: !5219, line: 88, baseType: !281, size: 128)
!5244 = !DIDerivedType(tag: DW_TAG_member, name: "__rcu_head", scope: !5241, file: !5219, line: 89, baseType: !304, size: 128, align: 64)
!5245 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !5218, file: !5219, line: 92, baseType: !7, size: 32, offset: 384)
!5246 = !DIDerivedType(tag: DW_TAG_member, name: "priv", scope: !5214, file: !5001, line: 183, baseType: !5247, size: 128, offset: 64)
!5247 = !DICompositeType(tag: DW_TAG_array_type, baseType: !570, size: 128, elements: !478)
!5248 = !DIDerivedType(tag: DW_TAG_member, name: "flush", scope: !5211, file: !5001, line: 190, baseType: !5249, size: 256)
!5249 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !5211, file: !5001, line: 186, size: 256, elements: !5250)
!5250 = !{!5251, !5252, !5253}
!5251 = !DIDerivedType(tag: DW_TAG_member, name: "seq", scope: !5249, file: !5001, line: 187, baseType: !7, size: 32)
!5252 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !5249, file: !5001, line: 188, baseType: !289, size: 128, offset: 64)
!5253 = !DIDerivedType(tag: DW_TAG_member, name: "saved_end_io", scope: !5249, file: !5001, line: 189, baseType: !5254, size: 64, offset: 192)
!5254 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5255, size: 64)
!5255 = !DIDerivedType(tag: DW_TAG_typedef, name: "rq_end_io_fn", file: !5001, line: 62, baseType: !5256)
!5256 = !DISubroutineType(types: !5257)
!5257 = !{null, !5178, !5258}
!5258 = !DIDerivedType(tag: DW_TAG_typedef, name: "blk_status_t", file: !3749, line: 58, baseType: !1397)
!5259 = !DIDerivedType(tag: DW_TAG_member, name: "rq_disk", scope: !5179, file: !5001, line: 193, baseType: !3753, size: 64, offset: 1280)
!5260 = !DIDerivedType(tag: DW_TAG_member, name: "part", scope: !5179, file: !5001, line: 194, baseType: !3771, size: 64, offset: 1344)
!5261 = !DIDerivedType(tag: DW_TAG_member, name: "start_time_ns", scope: !5179, file: !5001, line: 200, baseType: !336, size: 64, offset: 1408)
!5262 = !DIDerivedType(tag: DW_TAG_member, name: "io_start_time_ns", scope: !5179, file: !5001, line: 202, baseType: !336, size: 64, offset: 1472)
!5263 = !DIDerivedType(tag: DW_TAG_member, name: "stats_sectors", scope: !5179, file: !5001, line: 212, baseType: !477, size: 16, offset: 1536)
!5264 = !DIDerivedType(tag: DW_TAG_member, name: "nr_phys_segments", scope: !5179, file: !5001, line: 218, baseType: !477, size: 16, offset: 1552)
!5265 = !DIDerivedType(tag: DW_TAG_member, name: "nr_integrity_segments", scope: !5179, file: !5001, line: 221, baseType: !477, size: 16, offset: 1568)
!5266 = !DIDerivedType(tag: DW_TAG_member, name: "write_hint", scope: !5179, file: !5001, line: 229, baseType: !477, size: 16, offset: 1584)
!5267 = !DIDerivedType(tag: DW_TAG_member, name: "ioprio", scope: !5179, file: !5001, line: 230, baseType: !477, size: 16, offset: 1600)
!5268 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !5179, file: !5001, line: 232, baseType: !5269, size: 32, offset: 1632)
!5269 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "mq_rq_state", file: !5001, line: 118, baseType: !7, size: 32, elements: !5270)
!5270 = !{!5271, !5272, !5273}
!5271 = !DIEnumerator(name: "MQ_RQ_IDLE", value: 0, isUnsigned: true)
!5272 = !DIEnumerator(name: "MQ_RQ_IN_FLIGHT", value: 1, isUnsigned: true)
!5273 = !DIEnumerator(name: "MQ_RQ_COMPLETE", value: 2, isUnsigned: true)
!5274 = !DIDerivedType(tag: DW_TAG_member, name: "ref", scope: !5179, file: !5001, line: 233, baseType: !1271, size: 32, offset: 1664)
!5275 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !5179, file: !5001, line: 235, baseType: !7, size: 32, offset: 1696)
!5276 = !DIDerivedType(tag: DW_TAG_member, name: "deadline", scope: !5179, file: !5001, line: 236, baseType: !317, size: 64, offset: 1728)
!5277 = !DIDerivedType(tag: DW_TAG_member, scope: !5179, file: !5001, line: 238, baseType: !5278, size: 256, offset: 1792)
!5278 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5179, file: !5001, line: 238, size: 256, elements: !5279)
!5279 = !{!5280, !5309}
!5280 = !DIDerivedType(tag: DW_TAG_member, name: "csd", scope: !5278, file: !5001, line: 239, baseType: !5281, size: 256)
!5281 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__call_single_data", file: !5282, line: 23, size: 256, elements: !5283)
!5282 = !DIFile(filename: "./include/linux/smp.h", directory: "/home/lizy2001/genbc/linux")
!5283 = !{!5284, !5306, !5308}
!5284 = !DIDerivedType(tag: DW_TAG_member, scope: !5281, file: !5282, line: 24, baseType: !5285, size: 128)
!5285 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5281, file: !5282, line: 24, size: 128, elements: !5286)
!5286 = !{!5287, !5299}
!5287 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !5285, file: !5282, line: 25, baseType: !5288, size: 128)
!5288 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__call_single_node", file: !5289, line: 58, size: 128, elements: !5290)
!5289 = !DIFile(filename: "./include/linux/smp_types.h", directory: "/home/lizy2001/genbc/linux")
!5290 = !{!5291, !5292, !5297, !5298}
!5291 = !DIDerivedType(tag: DW_TAG_member, name: "llist", scope: !5288, file: !5289, line: 59, baseType: !992, size: 64)
!5292 = !DIDerivedType(tag: DW_TAG_member, scope: !5288, file: !5289, line: 60, baseType: !5293, size: 32, offset: 64)
!5293 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5288, file: !5289, line: 60, size: 32, elements: !5294)
!5294 = !{!5295, !5296}
!5295 = !DIDerivedType(tag: DW_TAG_member, name: "u_flags", scope: !5293, file: !5289, line: 61, baseType: !7, size: 32)
!5296 = !DIDerivedType(tag: DW_TAG_member, name: "a_flags", scope: !5293, file: !5289, line: 62, baseType: !388, size: 32)
!5297 = !DIDerivedType(tag: DW_TAG_member, name: "src", scope: !5288, file: !5289, line: 65, baseType: !1038, size: 16, offset: 96)
!5298 = !DIDerivedType(tag: DW_TAG_member, name: "dst", scope: !5288, file: !5289, line: 65, baseType: !1038, size: 16, offset: 112)
!5299 = !DIDerivedType(tag: DW_TAG_member, scope: !5285, file: !5282, line: 26, baseType: !5300, size: 128)
!5300 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !5285, file: !5282, line: 26, size: 128, elements: !5301)
!5301 = !{!5302, !5303, !5304, !5305}
!5302 = !DIDerivedType(tag: DW_TAG_member, name: "llist", scope: !5300, file: !5282, line: 27, baseType: !992, size: 64)
!5303 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !5300, file: !5282, line: 28, baseType: !7, size: 32, offset: 64)
!5304 = !DIDerivedType(tag: DW_TAG_member, name: "src", scope: !5300, file: !5282, line: 30, baseType: !1038, size: 16, offset: 96)
!5305 = !DIDerivedType(tag: DW_TAG_member, name: "dst", scope: !5300, file: !5282, line: 30, baseType: !1038, size: 16, offset: 112)
!5306 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !5281, file: !5282, line: 34, baseType: !5307, size: 64, offset: 128)
!5307 = !DIDerivedType(tag: DW_TAG_typedef, name: "smp_call_func_t", file: !5282, line: 17, baseType: !3290)
!5308 = !DIDerivedType(tag: DW_TAG_member, name: "info", scope: !5281, file: !5282, line: 35, baseType: !570, size: 64, offset: 192)
!5309 = !DIDerivedType(tag: DW_TAG_member, name: "fifo_time", scope: !5278, file: !5001, line: 240, baseType: !336, size: 64)
!5310 = !DIDerivedType(tag: DW_TAG_member, name: "end_io", scope: !5179, file: !5001, line: 246, baseType: !5254, size: 64, offset: 2048)
!5311 = !DIDerivedType(tag: DW_TAG_member, name: "end_io_data", scope: !5179, file: !5001, line: 247, baseType: !570, size: 64, offset: 2112)
!5312 = !DIDerivedType(tag: DW_TAG_member, name: "elevator", scope: !5175, file: !5001, line: 401, baseType: !5313, size: 64, offset: 64)
!5313 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5314, size: 64)
!5314 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "elevator_queue", file: !5315, line: 101, size: 4992, elements: !5316)
!5315 = !DIFile(filename: "./include/linux/elevator.h", directory: "/home/lizy2001/genbc/linux")
!5316 = !{!5317, !5435, !5436, !5437, !5438, !5439}
!5317 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !5314, file: !5315, line: 103, baseType: !5318, size: 64)
!5318 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5319, size: 64)
!5319 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "elevator_type", file: !5315, line: 66, size: 2240, elements: !5320)
!5320 = !{!5321, !5322, !5410, !5411, !5412, !5425, !5426, !5427, !5429, !5430, !5434}
!5321 = !DIDerivedType(tag: DW_TAG_member, name: "icq_cache", scope: !5319, file: !5315, line: 69, baseType: !2252, size: 64)
!5322 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !5319, file: !5315, line: 72, baseType: !5323, size: 1408, offset: 64)
!5323 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "elevator_mq_ops", file: !5315, line: 29, size: 1408, elements: !5324)
!5324 = !{!5325, !5329, !5333, !5337, !5341, !5345, !5349, !5353, !5358, !5368, !5372, !5378, !5382, !5383, !5387, !5391, !5395, !5399, !5400, !5404, !5405, !5409}
!5325 = !DIDerivedType(tag: DW_TAG_member, name: "init_sched", scope: !5323, file: !5315, line: 30, baseType: !5326, size: 64)
!5326 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5327, size: 64)
!5327 = !DISubroutineType(types: !5328)
!5328 = !{!37, !5174, !5318}
!5329 = !DIDerivedType(tag: DW_TAG_member, name: "exit_sched", scope: !5323, file: !5315, line: 31, baseType: !5330, size: 64, offset: 64)
!5330 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5331, size: 64)
!5331 = !DISubroutineType(types: !5332)
!5332 = !{null, !5313}
!5333 = !DIDerivedType(tag: DW_TAG_member, name: "init_hctx", scope: !5323, file: !5315, line: 32, baseType: !5334, size: 64, offset: 128)
!5334 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5335, size: 64)
!5335 = !DISubroutineType(types: !5336)
!5336 = !{!37, !5186, !7}
!5337 = !DIDerivedType(tag: DW_TAG_member, name: "exit_hctx", scope: !5323, file: !5315, line: 33, baseType: !5338, size: 64, offset: 192)
!5338 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5339, size: 64)
!5339 = !DISubroutineType(types: !5340)
!5340 = !{null, !5186, !7}
!5341 = !DIDerivedType(tag: DW_TAG_member, name: "depth_updated", scope: !5323, file: !5315, line: 34, baseType: !5342, size: 64, offset: 256)
!5342 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5343, size: 64)
!5343 = !DISubroutineType(types: !5344)
!5344 = !{null, !5186}
!5345 = !DIDerivedType(tag: DW_TAG_member, name: "allow_merge", scope: !5323, file: !5315, line: 36, baseType: !5346, size: 64, offset: 320)
!5346 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5347, size: 64)
!5347 = !DISubroutineType(types: !5348)
!5348 = !{!540, !5174, !5178, !3747}
!5349 = !DIDerivedType(tag: DW_TAG_member, name: "bio_merge", scope: !5323, file: !5315, line: 37, baseType: !5350, size: 64, offset: 384)
!5350 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5351, size: 64)
!5351 = !DISubroutineType(types: !5352)
!5352 = !{!540, !5186, !3747, !7}
!5353 = !DIDerivedType(tag: DW_TAG_member, name: "request_merge", scope: !5323, file: !5315, line: 38, baseType: !5354, size: 64, offset: 448)
!5354 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5355, size: 64)
!5355 = !DISubroutineType(types: !5356)
!5356 = !{!37, !5174, !5357, !3747}
!5357 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5178, size: 64)
!5358 = !DIDerivedType(tag: DW_TAG_member, name: "request_merged", scope: !5323, file: !5315, line: 39, baseType: !5359, size: 64, offset: 512)
!5359 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5360, size: 64)
!5360 = !DISubroutineType(types: !5361)
!5361 = !{null, !5174, !5178, !5362}
!5362 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "elv_merge", file: !5315, line: 19, baseType: !7, size: 32, elements: !5363)
!5363 = !{!5364, !5365, !5366, !5367}
!5364 = !DIEnumerator(name: "ELEVATOR_NO_MERGE", value: 0, isUnsigned: true)
!5365 = !DIEnumerator(name: "ELEVATOR_FRONT_MERGE", value: 1, isUnsigned: true)
!5366 = !DIEnumerator(name: "ELEVATOR_BACK_MERGE", value: 2, isUnsigned: true)
!5367 = !DIEnumerator(name: "ELEVATOR_DISCARD_MERGE", value: 3, isUnsigned: true)
!5368 = !DIDerivedType(tag: DW_TAG_member, name: "requests_merged", scope: !5323, file: !5315, line: 40, baseType: !5369, size: 64, offset: 576)
!5369 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5370, size: 64)
!5370 = !DISubroutineType(types: !5371)
!5371 = !{null, !5174, !5178, !5178}
!5372 = !DIDerivedType(tag: DW_TAG_member, name: "limit_depth", scope: !5323, file: !5315, line: 41, baseType: !5373, size: 64, offset: 640)
!5373 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5374, size: 64)
!5374 = !DISubroutineType(types: !5375)
!5375 = !{null, !7, !5376}
!5376 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5377, size: 64)
!5377 = !DICompositeType(tag: DW_TAG_structure_type, name: "blk_mq_alloc_data", file: !5315, line: 26, flags: DIFlagFwdDecl)
!5378 = !DIDerivedType(tag: DW_TAG_member, name: "prepare_request", scope: !5323, file: !5315, line: 42, baseType: !5379, size: 64, offset: 704)
!5379 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5380, size: 64)
!5380 = !DISubroutineType(types: !5381)
!5381 = !{null, !5178}
!5382 = !DIDerivedType(tag: DW_TAG_member, name: "finish_request", scope: !5323, file: !5315, line: 43, baseType: !5379, size: 64, offset: 768)
!5383 = !DIDerivedType(tag: DW_TAG_member, name: "insert_requests", scope: !5323, file: !5315, line: 44, baseType: !5384, size: 64, offset: 832)
!5384 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5385, size: 64)
!5385 = !DISubroutineType(types: !5386)
!5386 = !{null, !5186, !292, !540}
!5387 = !DIDerivedType(tag: DW_TAG_member, name: "dispatch_request", scope: !5323, file: !5315, line: 45, baseType: !5388, size: 64, offset: 896)
!5388 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5389, size: 64)
!5389 = !DISubroutineType(types: !5390)
!5390 = !{!5178, !5186}
!5391 = !DIDerivedType(tag: DW_TAG_member, name: "has_work", scope: !5323, file: !5315, line: 46, baseType: !5392, size: 64, offset: 960)
!5392 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5393, size: 64)
!5393 = !DISubroutineType(types: !5394)
!5394 = !{!540, !5186}
!5395 = !DIDerivedType(tag: DW_TAG_member, name: "completed_request", scope: !5323, file: !5315, line: 47, baseType: !5396, size: 64, offset: 1024)
!5396 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5397, size: 64)
!5397 = !DISubroutineType(types: !5398)
!5398 = !{null, !5178, !336}
!5399 = !DIDerivedType(tag: DW_TAG_member, name: "requeue_request", scope: !5323, file: !5315, line: 48, baseType: !5379, size: 64, offset: 1088)
!5400 = !DIDerivedType(tag: DW_TAG_member, name: "former_request", scope: !5323, file: !5315, line: 49, baseType: !5401, size: 64, offset: 1152)
!5401 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5402, size: 64)
!5402 = !DISubroutineType(types: !5403)
!5403 = !{!5178, !5174, !5178}
!5404 = !DIDerivedType(tag: DW_TAG_member, name: "next_request", scope: !5323, file: !5315, line: 50, baseType: !5401, size: 64, offset: 1216)
!5405 = !DIDerivedType(tag: DW_TAG_member, name: "init_icq", scope: !5323, file: !5315, line: 51, baseType: !5406, size: 64, offset: 1280)
!5406 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5407, size: 64)
!5407 = !DISubroutineType(types: !5408)
!5408 = !{null, !5217}
!5409 = !DIDerivedType(tag: DW_TAG_member, name: "exit_icq", scope: !5323, file: !5315, line: 52, baseType: !5406, size: 64, offset: 1344)
!5410 = !DIDerivedType(tag: DW_TAG_member, name: "icq_size", scope: !5319, file: !5315, line: 74, baseType: !594, size: 64, offset: 1472)
!5411 = !DIDerivedType(tag: DW_TAG_member, name: "icq_align", scope: !5319, file: !5315, line: 75, baseType: !594, size: 64, offset: 1536)
!5412 = !DIDerivedType(tag: DW_TAG_member, name: "elevator_attrs", scope: !5319, file: !5315, line: 76, baseType: !5413, size: 64, offset: 1600)
!5413 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5414, size: 64)
!5414 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "elv_fs_entry", file: !5315, line: 57, size: 256, elements: !5415)
!5415 = !{!5416, !5417, !5421}
!5416 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !5414, file: !5315, line: 58, baseType: !3873, size: 128)
!5417 = !DIDerivedType(tag: DW_TAG_member, name: "show", scope: !5414, file: !5315, line: 59, baseType: !5418, size: 64, offset: 128)
!5418 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5419, size: 64)
!5419 = !DISubroutineType(types: !5420)
!5420 = !{!1015, !5313, !577}
!5421 = !DIDerivedType(tag: DW_TAG_member, name: "store", scope: !5414, file: !5315, line: 60, baseType: !5422, size: 64, offset: 192)
!5422 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5423, size: 64)
!5423 = !DISubroutineType(types: !5424)
!5424 = !{!1015, !5313, !297, !594}
!5425 = !DIDerivedType(tag: DW_TAG_member, name: "elevator_name", scope: !5319, file: !5315, line: 77, baseType: !297, size: 64, offset: 1664)
!5426 = !DIDerivedType(tag: DW_TAG_member, name: "elevator_alias", scope: !5319, file: !5315, line: 78, baseType: !297, size: 64, offset: 1728)
!5427 = !DIDerivedType(tag: DW_TAG_member, name: "elevator_features", scope: !5319, file: !5315, line: 79, baseType: !5428, size: 32, offset: 1792)
!5428 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7)
!5429 = !DIDerivedType(tag: DW_TAG_member, name: "elevator_owner", scope: !5319, file: !5315, line: 80, baseType: !852, size: 64, offset: 1856)
!5430 = !DIDerivedType(tag: DW_TAG_member, name: "icq_cache_name", scope: !5319, file: !5315, line: 87, baseType: !5431, size: 176, offset: 1920)
!5431 = !DICompositeType(tag: DW_TAG_array_type, baseType: !273, size: 176, elements: !5432)
!5432 = !{!5433}
!5433 = !DISubrange(count: 22)
!5434 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !5319, file: !5315, line: 88, baseType: !289, size: 128, offset: 2112)
!5435 = !DIDerivedType(tag: DW_TAG_member, name: "elevator_data", scope: !5314, file: !5315, line: 104, baseType: !570, size: 64, offset: 64)
!5436 = !DIDerivedType(tag: DW_TAG_member, name: "kobj", scope: !5314, file: !5315, line: 105, baseType: !3807, size: 512, offset: 128)
!5437 = !DIDerivedType(tag: DW_TAG_member, name: "sysfs_lock", scope: !5314, file: !5315, line: 106, baseType: !954, size: 192, offset: 640)
!5438 = !DIDerivedType(tag: DW_TAG_member, name: "registered", scope: !5314, file: !5315, line: 107, baseType: !7, size: 1, offset: 832, flags: DIFlagBitField, extraData: i64 832)
!5439 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !5314, file: !5315, line: 108, baseType: !5440, size: 4096, offset: 896)
!5440 = !DICompositeType(tag: DW_TAG_array_type, baseType: !857, size: 4096, elements: !3707)
!5441 = !DIDerivedType(tag: DW_TAG_member, name: "q_usage_counter", scope: !5175, file: !5001, line: 403, baseType: !3782, size: 128, offset: 128)
!5442 = !DIDerivedType(tag: DW_TAG_member, name: "stats", scope: !5175, file: !5001, line: 405, baseType: !5443, size: 64, offset: 256)
!5443 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5444, size: 64)
!5444 = !DICompositeType(tag: DW_TAG_structure_type, name: "blk_queue_stats", file: !5001, line: 43, flags: DIFlagFwdDecl)
!5445 = !DIDerivedType(tag: DW_TAG_member, name: "rq_qos", scope: !5175, file: !5001, line: 406, baseType: !5446, size: 64, offset: 320)
!5446 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5447, size: 64)
!5447 = !DICompositeType(tag: DW_TAG_structure_type, name: "rq_qos", file: !5001, line: 42, flags: DIFlagFwdDecl)
!5448 = !DIDerivedType(tag: DW_TAG_member, name: "mq_ops", scope: !5175, file: !5001, line: 408, baseType: !5449, size: 64, offset: 384)
!5449 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5450, size: 64)
!5450 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5451)
!5451 = !DICompositeType(tag: DW_TAG_structure_type, name: "blk_mq_ops", file: !5001, line: 408, flags: DIFlagFwdDecl)
!5452 = !DIDerivedType(tag: DW_TAG_member, name: "queue_ctx", scope: !5175, file: !5001, line: 411, baseType: !5183, size: 64, offset: 448)
!5453 = !DIDerivedType(tag: DW_TAG_member, name: "queue_depth", scope: !5175, file: !5001, line: 413, baseType: !7, size: 32, offset: 512)
!5454 = !DIDerivedType(tag: DW_TAG_member, name: "queue_hw_ctx", scope: !5175, file: !5001, line: 416, baseType: !5455, size: 64, offset: 576)
!5455 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5186, size: 64)
!5456 = !DIDerivedType(tag: DW_TAG_member, name: "nr_hw_queues", scope: !5175, file: !5001, line: 417, baseType: !7, size: 32, offset: 640)
!5457 = !DIDerivedType(tag: DW_TAG_member, name: "backing_dev_info", scope: !5175, file: !5001, line: 419, baseType: !5032, size: 64, offset: 704)
!5458 = !DIDerivedType(tag: DW_TAG_member, name: "queuedata", scope: !5175, file: !5001, line: 425, baseType: !570, size: 64, offset: 768)
!5459 = !DIDerivedType(tag: DW_TAG_member, name: "queue_flags", scope: !5175, file: !5001, line: 430, baseType: !317, size: 64, offset: 832)
!5460 = !DIDerivedType(tag: DW_TAG_member, name: "pm_only", scope: !5175, file: !5001, line: 436, baseType: !388, size: 32, offset: 896)
!5461 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !5175, file: !5001, line: 442, baseType: !37, size: 32, offset: 928)
!5462 = !DIDerivedType(tag: DW_TAG_member, name: "bounce_gfp", scope: !5175, file: !5001, line: 447, baseType: !1990, size: 32, offset: 960)
!5463 = !DIDerivedType(tag: DW_TAG_member, name: "queue_lock", scope: !5175, file: !5001, line: 449, baseType: !729, offset: 992)
!5464 = !DIDerivedType(tag: DW_TAG_member, name: "kobj", scope: !5175, file: !5001, line: 454, baseType: !3807, size: 512, offset: 1024)
!5465 = !DIDerivedType(tag: DW_TAG_member, name: "mq_kobj", scope: !5175, file: !5001, line: 459, baseType: !3813, size: 64, offset: 1536)
!5466 = !DIDerivedType(tag: DW_TAG_member, name: "integrity", scope: !5175, file: !5001, line: 462, baseType: !5467, size: 128, offset: 1600)
!5467 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "blk_integrity", file: !3755, line: 159, size: 128, elements: !5468)
!5468 = !{!5469, !5498, !5499, !5500, !5501}
!5469 = !DIDerivedType(tag: DW_TAG_member, name: "profile", scope: !5467, file: !3755, line: 160, baseType: !5470, size: 64)
!5470 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5471, size: 64)
!5471 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5472)
!5472 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "blk_integrity_profile", file: !5001, line: 1664, size: 320, elements: !5473)
!5473 = !{!5474, !5488, !5489, !5492, !5497}
!5474 = !DIDerivedType(tag: DW_TAG_member, name: "generate_fn", scope: !5472, file: !5001, line: 1665, baseType: !5475, size: 64)
!5475 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5476, size: 64)
!5476 = !DIDerivedType(tag: DW_TAG_typedef, name: "integrity_processing_fn", file: !5001, line: 1660, baseType: !5477)
!5477 = !DISubroutineType(types: !5478)
!5478 = !{!5258, !5479}
!5479 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5480, size: 64)
!5480 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "blk_integrity_iter", file: !5001, line: 1651, size: 320, elements: !5481)
!5481 = !{!5482, !5483, !5484, !5485, !5486, !5487}
!5482 = !DIDerivedType(tag: DW_TAG_member, name: "prot_buf", scope: !5480, file: !5001, line: 1652, baseType: !570, size: 64)
!5483 = !DIDerivedType(tag: DW_TAG_member, name: "data_buf", scope: !5480, file: !5001, line: 1653, baseType: !570, size: 64, offset: 64)
!5484 = !DIDerivedType(tag: DW_TAG_member, name: "seed", scope: !5480, file: !5001, line: 1654, baseType: !3775, size: 64, offset: 128)
!5485 = !DIDerivedType(tag: DW_TAG_member, name: "data_size", scope: !5480, file: !5001, line: 1655, baseType: !7, size: 32, offset: 192)
!5486 = !DIDerivedType(tag: DW_TAG_member, name: "interval", scope: !5480, file: !5001, line: 1656, baseType: !477, size: 16, offset: 224)
!5487 = !DIDerivedType(tag: DW_TAG_member, name: "disk_name", scope: !5480, file: !5001, line: 1657, baseType: !297, size: 64, offset: 256)
!5488 = !DIDerivedType(tag: DW_TAG_member, name: "verify_fn", scope: !5472, file: !5001, line: 1666, baseType: !5475, size: 64, offset: 64)
!5489 = !DIDerivedType(tag: DW_TAG_member, name: "prepare_fn", scope: !5472, file: !5001, line: 1667, baseType: !5490, size: 64, offset: 128)
!5490 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5491, size: 64)
!5491 = !DIDerivedType(tag: DW_TAG_typedef, name: "integrity_prepare_fn", file: !5001, line: 1661, baseType: !5380)
!5492 = !DIDerivedType(tag: DW_TAG_member, name: "complete_fn", scope: !5472, file: !5001, line: 1668, baseType: !5493, size: 64, offset: 192)
!5493 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5494, size: 64)
!5494 = !DIDerivedType(tag: DW_TAG_typedef, name: "integrity_complete_fn", file: !5001, line: 1662, baseType: !5495)
!5495 = !DISubroutineType(types: !5496)
!5496 = !{null, !5178, !7}
!5497 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !5472, file: !5001, line: 1669, baseType: !297, size: 64, offset: 256)
!5498 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !5467, file: !3755, line: 161, baseType: !494, size: 8, offset: 64)
!5499 = !DIDerivedType(tag: DW_TAG_member, name: "tuple_size", scope: !5467, file: !3755, line: 162, baseType: !494, size: 8, offset: 72)
!5500 = !DIDerivedType(tag: DW_TAG_member, name: "interval_exp", scope: !5467, file: !3755, line: 163, baseType: !494, size: 8, offset: 80)
!5501 = !DIDerivedType(tag: DW_TAG_member, name: "tag_size", scope: !5467, file: !3755, line: 164, baseType: !494, size: 8, offset: 88)
!5502 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !5175, file: !5001, line: 466, baseType: !4172, size: 64, offset: 1728)
!5503 = !DIDerivedType(tag: DW_TAG_member, name: "rpm_status", scope: !5175, file: !5001, line: 467, baseType: !4418, size: 32, offset: 1792)
!5504 = !DIDerivedType(tag: DW_TAG_member, name: "nr_pending", scope: !5175, file: !5001, line: 468, baseType: !7, size: 32, offset: 1824)
!5505 = !DIDerivedType(tag: DW_TAG_member, name: "nr_requests", scope: !5175, file: !5001, line: 474, baseType: !317, size: 64, offset: 1856)
!5506 = !DIDerivedType(tag: DW_TAG_member, name: "dma_pad_mask", scope: !5175, file: !5001, line: 476, baseType: !7, size: 32, offset: 1920)
!5507 = !DIDerivedType(tag: DW_TAG_member, name: "dma_alignment", scope: !5175, file: !5001, line: 477, baseType: !7, size: 32, offset: 1952)
!5508 = !DIDerivedType(tag: DW_TAG_member, name: "rq_timeout", scope: !5175, file: !5001, line: 484, baseType: !7, size: 32, offset: 1984)
!5509 = !DIDerivedType(tag: DW_TAG_member, name: "poll_nsec", scope: !5175, file: !5001, line: 485, baseType: !37, size: 32, offset: 2016)
!5510 = !DIDerivedType(tag: DW_TAG_member, name: "poll_cb", scope: !5175, file: !5001, line: 487, baseType: !5511, size: 64, offset: 2048)
!5511 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5512, size: 64)
!5512 = !DICompositeType(tag: DW_TAG_structure_type, name: "blk_stat_callback", file: !5001, line: 44, flags: DIFlagFwdDecl)
!5513 = !DIDerivedType(tag: DW_TAG_member, name: "poll_stat", scope: !5175, file: !5001, line: 488, baseType: !5514, size: 5120, offset: 2112)
!5514 = !DICompositeType(tag: DW_TAG_array_type, baseType: !5515, size: 5120, elements: !274)
!5515 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "blk_rq_stat", file: !3749, line: 540, size: 320, elements: !5516)
!5516 = !{!5517, !5518, !5519, !5520, !5521}
!5517 = !DIDerivedType(tag: DW_TAG_member, name: "mean", scope: !5515, file: !3749, line: 541, baseType: !336, size: 64)
!5518 = !DIDerivedType(tag: DW_TAG_member, name: "min", scope: !5515, file: !3749, line: 542, baseType: !336, size: 64, offset: 64)
!5519 = !DIDerivedType(tag: DW_TAG_member, name: "max", scope: !5515, file: !3749, line: 543, baseType: !336, size: 64, offset: 128)
!5520 = !DIDerivedType(tag: DW_TAG_member, name: "nr_samples", scope: !5515, file: !3749, line: 544, baseType: !707, size: 32, offset: 192)
!5521 = !DIDerivedType(tag: DW_TAG_member, name: "batch", scope: !5515, file: !3749, line: 545, baseType: !336, size: 64, offset: 256)
!5522 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !5175, file: !5001, line: 490, baseType: !2221, size: 320, offset: 7232)
!5523 = !DIDerivedType(tag: DW_TAG_member, name: "timeout_work", scope: !5175, file: !5001, line: 491, baseType: !1807, size: 256, offset: 7552)
!5524 = !DIDerivedType(tag: DW_TAG_member, name: "nr_active_requests_shared_sbitmap", scope: !5175, file: !5001, line: 493, baseType: !388, size: 32, offset: 7808)
!5525 = !DIDerivedType(tag: DW_TAG_member, name: "icq_list", scope: !5175, file: !5001, line: 495, baseType: !289, size: 128, offset: 7872)
!5526 = !DIDerivedType(tag: DW_TAG_member, name: "limits", scope: !5175, file: !5001, line: 502, baseType: !5527, size: 896, offset: 8000)
!5527 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "queue_limits", file: !5001, line: 321, size: 896, elements: !5528)
!5528 = !{!5529, !5530, !5531, !5532, !5533, !5534, !5535, !5536, !5537, !5538, !5539, !5540, !5541, !5542, !5543, !5544, !5545, !5546, !5547, !5548, !5549, !5550, !5551, !5552, !5553, !5554, !5555}
!5529 = !DIDerivedType(tag: DW_TAG_member, name: "bounce_pfn", scope: !5527, file: !5001, line: 322, baseType: !317, size: 64)
!5530 = !DIDerivedType(tag: DW_TAG_member, name: "seg_boundary_mask", scope: !5527, file: !5001, line: 323, baseType: !317, size: 64, offset: 64)
!5531 = !DIDerivedType(tag: DW_TAG_member, name: "virt_boundary_mask", scope: !5527, file: !5001, line: 324, baseType: !317, size: 64, offset: 128)
!5532 = !DIDerivedType(tag: DW_TAG_member, name: "max_hw_sectors", scope: !5527, file: !5001, line: 326, baseType: !7, size: 32, offset: 192)
!5533 = !DIDerivedType(tag: DW_TAG_member, name: "max_dev_sectors", scope: !5527, file: !5001, line: 327, baseType: !7, size: 32, offset: 224)
!5534 = !DIDerivedType(tag: DW_TAG_member, name: "chunk_sectors", scope: !5527, file: !5001, line: 328, baseType: !7, size: 32, offset: 256)
!5535 = !DIDerivedType(tag: DW_TAG_member, name: "max_sectors", scope: !5527, file: !5001, line: 329, baseType: !7, size: 32, offset: 288)
!5536 = !DIDerivedType(tag: DW_TAG_member, name: "max_segment_size", scope: !5527, file: !5001, line: 330, baseType: !7, size: 32, offset: 320)
!5537 = !DIDerivedType(tag: DW_TAG_member, name: "physical_block_size", scope: !5527, file: !5001, line: 331, baseType: !7, size: 32, offset: 352)
!5538 = !DIDerivedType(tag: DW_TAG_member, name: "logical_block_size", scope: !5527, file: !5001, line: 332, baseType: !7, size: 32, offset: 384)
!5539 = !DIDerivedType(tag: DW_TAG_member, name: "alignment_offset", scope: !5527, file: !5001, line: 333, baseType: !7, size: 32, offset: 416)
!5540 = !DIDerivedType(tag: DW_TAG_member, name: "io_min", scope: !5527, file: !5001, line: 334, baseType: !7, size: 32, offset: 448)
!5541 = !DIDerivedType(tag: DW_TAG_member, name: "io_opt", scope: !5527, file: !5001, line: 335, baseType: !7, size: 32, offset: 480)
!5542 = !DIDerivedType(tag: DW_TAG_member, name: "max_discard_sectors", scope: !5527, file: !5001, line: 336, baseType: !7, size: 32, offset: 512)
!5543 = !DIDerivedType(tag: DW_TAG_member, name: "max_hw_discard_sectors", scope: !5527, file: !5001, line: 337, baseType: !7, size: 32, offset: 544)
!5544 = !DIDerivedType(tag: DW_TAG_member, name: "max_write_same_sectors", scope: !5527, file: !5001, line: 338, baseType: !7, size: 32, offset: 576)
!5545 = !DIDerivedType(tag: DW_TAG_member, name: "max_write_zeroes_sectors", scope: !5527, file: !5001, line: 339, baseType: !7, size: 32, offset: 608)
!5546 = !DIDerivedType(tag: DW_TAG_member, name: "max_zone_append_sectors", scope: !5527, file: !5001, line: 340, baseType: !7, size: 32, offset: 640)
!5547 = !DIDerivedType(tag: DW_TAG_member, name: "discard_granularity", scope: !5527, file: !5001, line: 341, baseType: !7, size: 32, offset: 672)
!5548 = !DIDerivedType(tag: DW_TAG_member, name: "discard_alignment", scope: !5527, file: !5001, line: 342, baseType: !7, size: 32, offset: 704)
!5549 = !DIDerivedType(tag: DW_TAG_member, name: "max_segments", scope: !5527, file: !5001, line: 344, baseType: !477, size: 16, offset: 736)
!5550 = !DIDerivedType(tag: DW_TAG_member, name: "max_integrity_segments", scope: !5527, file: !5001, line: 345, baseType: !477, size: 16, offset: 752)
!5551 = !DIDerivedType(tag: DW_TAG_member, name: "max_discard_segments", scope: !5527, file: !5001, line: 346, baseType: !477, size: 16, offset: 768)
!5552 = !DIDerivedType(tag: DW_TAG_member, name: "misaligned", scope: !5527, file: !5001, line: 348, baseType: !494, size: 8, offset: 784)
!5553 = !DIDerivedType(tag: DW_TAG_member, name: "discard_misaligned", scope: !5527, file: !5001, line: 349, baseType: !494, size: 8, offset: 792)
!5554 = !DIDerivedType(tag: DW_TAG_member, name: "raid_partial_stripes_expensive", scope: !5527, file: !5001, line: 350, baseType: !494, size: 8, offset: 800)
!5555 = !DIDerivedType(tag: DW_TAG_member, name: "zoned", scope: !5527, file: !5001, line: 351, baseType: !5556, size: 32, offset: 832)
!5556 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "blk_zoned_model", file: !5001, line: 315, baseType: !7, size: 32, elements: !5557)
!5557 = !{!5558, !5559, !5560}
!5558 = !DIEnumerator(name: "BLK_ZONED_NONE", value: 0, isUnsigned: true)
!5559 = !DIEnumerator(name: "BLK_ZONED_HA", value: 1, isUnsigned: true)
!5560 = !DIEnumerator(name: "BLK_ZONED_HM", value: 2, isUnsigned: true)
!5561 = !DIDerivedType(tag: DW_TAG_member, name: "required_elevator_features", scope: !5175, file: !5001, line: 504, baseType: !7, size: 32, offset: 8896)
!5562 = !DIDerivedType(tag: DW_TAG_member, name: "sg_timeout", scope: !5175, file: !5001, line: 534, baseType: !7, size: 32, offset: 8928)
!5563 = !DIDerivedType(tag: DW_TAG_member, name: "sg_reserved_size", scope: !5175, file: !5001, line: 535, baseType: !7, size: 32, offset: 8960)
!5564 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !5175, file: !5001, line: 536, baseType: !37, size: 32, offset: 8992)
!5565 = !DIDerivedType(tag: DW_TAG_member, name: "debugfs_mutex", scope: !5175, file: !5001, line: 537, baseType: !954, size: 192, offset: 9024)
!5566 = !DIDerivedType(tag: DW_TAG_member, name: "fq", scope: !5175, file: !5001, line: 544, baseType: !5567, size: 64, offset: 9216)
!5567 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5568, size: 64)
!5568 = !DICompositeType(tag: DW_TAG_structure_type, name: "blk_flush_queue", file: !5001, line: 40, flags: DIFlagFwdDecl)
!5569 = !DIDerivedType(tag: DW_TAG_member, name: "requeue_list", scope: !5175, file: !5001, line: 546, baseType: !289, size: 128, offset: 9280)
!5570 = !DIDerivedType(tag: DW_TAG_member, name: "requeue_lock", scope: !5175, file: !5001, line: 547, baseType: !729, offset: 9408)
!5571 = !DIDerivedType(tag: DW_TAG_member, name: "requeue_work", scope: !5175, file: !5001, line: 548, baseType: !2752, size: 704, offset: 9408)
!5572 = !DIDerivedType(tag: DW_TAG_member, name: "sysfs_lock", scope: !5175, file: !5001, line: 550, baseType: !954, size: 192, offset: 10112)
!5573 = !DIDerivedType(tag: DW_TAG_member, name: "sysfs_dir_lock", scope: !5175, file: !5001, line: 551, baseType: !954, size: 192, offset: 10304)
!5574 = !DIDerivedType(tag: DW_TAG_member, name: "unused_hctx_list", scope: !5175, file: !5001, line: 557, baseType: !289, size: 128, offset: 10496)
!5575 = !DIDerivedType(tag: DW_TAG_member, name: "unused_hctx_lock", scope: !5175, file: !5001, line: 558, baseType: !729, offset: 10624)
!5576 = !DIDerivedType(tag: DW_TAG_member, name: "mq_freeze_depth", scope: !5175, file: !5001, line: 560, baseType: !37, size: 32, offset: 10624)
!5577 = !DIDerivedType(tag: DW_TAG_member, name: "bsg_dev", scope: !5175, file: !5001, line: 563, baseType: !5578, size: 256, offset: 10688)
!5578 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bsg_class_device", file: !5579, line: 18, size: 256, elements: !5580)
!5579 = !DIFile(filename: "./include/linux/bsg.h", directory: "/home/lizy2001/genbc/linux")
!5580 = !{!5581, !5582, !5583, !5584}
!5581 = !DIDerivedType(tag: DW_TAG_member, name: "class_dev", scope: !5578, file: !5579, line: 19, baseType: !4172, size: 64)
!5582 = !DIDerivedType(tag: DW_TAG_member, name: "minor", scope: !5578, file: !5579, line: 20, baseType: !37, size: 32, offset: 64)
!5583 = !DIDerivedType(tag: DW_TAG_member, name: "queue", scope: !5578, file: !5579, line: 21, baseType: !5174, size: 64, offset: 128)
!5584 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !5578, file: !5579, line: 22, baseType: !5585, size: 64, offset: 192)
!5585 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5586, size: 64)
!5586 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5587)
!5587 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bsg_ops", file: !5579, line: 10, size: 256, elements: !5588)
!5588 = !{!5589, !5630, !5634, !5638}
!5589 = !DIDerivedType(tag: DW_TAG_member, name: "check_proto", scope: !5587, file: !5579, line: 11, baseType: !5590, size: 64)
!5590 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5591, size: 64)
!5591 = !DISubroutineType(types: !5592)
!5592 = !{!37, !5593}
!5593 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5594, size: 64)
!5594 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sg_io_v4", file: !5595, line: 22, size: 1280, elements: !5596)
!5595 = !DIFile(filename: "./include/uapi/linux/bsg.h", directory: "/home/lizy2001/genbc/linux")
!5596 = !{!5597, !5598, !5599, !5600, !5601, !5602, !5603, !5604, !5605, !5606, !5607, !5608, !5609, !5610, !5611, !5612, !5613, !5614, !5615, !5616, !5617, !5618, !5619, !5620, !5621, !5622, !5623, !5624, !5625, !5626, !5627, !5628, !5629}
!5597 = !DIDerivedType(tag: DW_TAG_member, name: "guard", scope: !5594, file: !5595, line: 23, baseType: !1490, size: 32)
!5598 = !DIDerivedType(tag: DW_TAG_member, name: "protocol", scope: !5594, file: !5595, line: 24, baseType: !468, size: 32, offset: 32)
!5599 = !DIDerivedType(tag: DW_TAG_member, name: "subprotocol", scope: !5594, file: !5595, line: 25, baseType: !468, size: 32, offset: 64)
!5600 = !DIDerivedType(tag: DW_TAG_member, name: "request_len", scope: !5594, file: !5595, line: 28, baseType: !468, size: 32, offset: 96)
!5601 = !DIDerivedType(tag: DW_TAG_member, name: "request", scope: !5594, file: !5595, line: 29, baseType: !338, size: 64, offset: 128)
!5602 = !DIDerivedType(tag: DW_TAG_member, name: "request_tag", scope: !5594, file: !5595, line: 30, baseType: !338, size: 64, offset: 192)
!5603 = !DIDerivedType(tag: DW_TAG_member, name: "request_attr", scope: !5594, file: !5595, line: 31, baseType: !468, size: 32, offset: 256)
!5604 = !DIDerivedType(tag: DW_TAG_member, name: "request_priority", scope: !5594, file: !5595, line: 32, baseType: !468, size: 32, offset: 288)
!5605 = !DIDerivedType(tag: DW_TAG_member, name: "request_extra", scope: !5594, file: !5595, line: 33, baseType: !468, size: 32, offset: 320)
!5606 = !DIDerivedType(tag: DW_TAG_member, name: "max_response_len", scope: !5594, file: !5595, line: 34, baseType: !468, size: 32, offset: 352)
!5607 = !DIDerivedType(tag: DW_TAG_member, name: "response", scope: !5594, file: !5595, line: 35, baseType: !338, size: 64, offset: 384)
!5608 = !DIDerivedType(tag: DW_TAG_member, name: "dout_iovec_count", scope: !5594, file: !5595, line: 38, baseType: !468, size: 32, offset: 448)
!5609 = !DIDerivedType(tag: DW_TAG_member, name: "dout_xfer_len", scope: !5594, file: !5595, line: 40, baseType: !468, size: 32, offset: 480)
!5610 = !DIDerivedType(tag: DW_TAG_member, name: "din_iovec_count", scope: !5594, file: !5595, line: 41, baseType: !468, size: 32, offset: 512)
!5611 = !DIDerivedType(tag: DW_TAG_member, name: "din_xfer_len", scope: !5594, file: !5595, line: 42, baseType: !468, size: 32, offset: 544)
!5612 = !DIDerivedType(tag: DW_TAG_member, name: "dout_xferp", scope: !5594, file: !5595, line: 43, baseType: !338, size: 64, offset: 576)
!5613 = !DIDerivedType(tag: DW_TAG_member, name: "din_xferp", scope: !5594, file: !5595, line: 44, baseType: !338, size: 64, offset: 640)
!5614 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !5594, file: !5595, line: 46, baseType: !468, size: 32, offset: 704)
!5615 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !5594, file: !5595, line: 47, baseType: !468, size: 32, offset: 736)
!5616 = !DIDerivedType(tag: DW_TAG_member, name: "usr_ptr", scope: !5594, file: !5595, line: 48, baseType: !338, size: 64, offset: 768)
!5617 = !DIDerivedType(tag: DW_TAG_member, name: "spare_in", scope: !5594, file: !5595, line: 49, baseType: !468, size: 32, offset: 832)
!5618 = !DIDerivedType(tag: DW_TAG_member, name: "driver_status", scope: !5594, file: !5595, line: 51, baseType: !468, size: 32, offset: 864)
!5619 = !DIDerivedType(tag: DW_TAG_member, name: "transport_status", scope: !5594, file: !5595, line: 52, baseType: !468, size: 32, offset: 896)
!5620 = !DIDerivedType(tag: DW_TAG_member, name: "device_status", scope: !5594, file: !5595, line: 53, baseType: !468, size: 32, offset: 928)
!5621 = !DIDerivedType(tag: DW_TAG_member, name: "retry_delay", scope: !5594, file: !5595, line: 54, baseType: !468, size: 32, offset: 960)
!5622 = !DIDerivedType(tag: DW_TAG_member, name: "info", scope: !5594, file: !5595, line: 55, baseType: !468, size: 32, offset: 992)
!5623 = !DIDerivedType(tag: DW_TAG_member, name: "duration", scope: !5594, file: !5595, line: 56, baseType: !468, size: 32, offset: 1024)
!5624 = !DIDerivedType(tag: DW_TAG_member, name: "response_len", scope: !5594, file: !5595, line: 57, baseType: !468, size: 32, offset: 1056)
!5625 = !DIDerivedType(tag: DW_TAG_member, name: "din_resid", scope: !5594, file: !5595, line: 58, baseType: !1490, size: 32, offset: 1088)
!5626 = !DIDerivedType(tag: DW_TAG_member, name: "dout_resid", scope: !5594, file: !5595, line: 59, baseType: !1490, size: 32, offset: 1120)
!5627 = !DIDerivedType(tag: DW_TAG_member, name: "generated_tag", scope: !5594, file: !5595, line: 60, baseType: !338, size: 64, offset: 1152)
!5628 = !DIDerivedType(tag: DW_TAG_member, name: "spare_out", scope: !5594, file: !5595, line: 61, baseType: !468, size: 32, offset: 1216)
!5629 = !DIDerivedType(tag: DW_TAG_member, name: "padding", scope: !5594, file: !5595, line: 63, baseType: !468, size: 32, offset: 1248)
!5630 = !DIDerivedType(tag: DW_TAG_member, name: "fill_hdr", scope: !5587, file: !5579, line: 12, baseType: !5631, size: 64, offset: 64)
!5631 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5632, size: 64)
!5632 = !DISubroutineType(types: !5633)
!5633 = !{!37, !5178, !5593, !5102}
!5634 = !DIDerivedType(tag: DW_TAG_member, name: "complete_rq", scope: !5587, file: !5579, line: 14, baseType: !5635, size: 64, offset: 128)
!5635 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5636, size: 64)
!5636 = !DISubroutineType(types: !5637)
!5637 = !{!37, !5178, !5593}
!5638 = !DIDerivedType(tag: DW_TAG_member, name: "free_rq", scope: !5587, file: !5579, line: 15, baseType: !5379, size: 64, offset: 192)
!5639 = !DIDerivedType(tag: DW_TAG_member, name: "callback_head", scope: !5175, file: !5001, line: 570, baseType: !304, size: 128, align: 64, offset: 10944)
!5640 = !DIDerivedType(tag: DW_TAG_member, name: "mq_freeze_wq", scope: !5175, file: !5001, line: 571, baseType: !1100, size: 128, offset: 11072)
!5641 = !DIDerivedType(tag: DW_TAG_member, name: "mq_freeze_lock", scope: !5175, file: !5001, line: 576, baseType: !954, size: 192, offset: 11200)
!5642 = !DIDerivedType(tag: DW_TAG_member, name: "tag_set", scope: !5175, file: !5001, line: 578, baseType: !5643, size: 64, offset: 11392)
!5643 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5644, size: 64)
!5644 = !DICompositeType(tag: DW_TAG_structure_type, name: "blk_mq_tag_set", file: !5001, line: 578, flags: DIFlagFwdDecl)
!5645 = !DIDerivedType(tag: DW_TAG_member, name: "tag_set_list", scope: !5175, file: !5001, line: 579, baseType: !289, size: 128, offset: 11456)
!5646 = !DIDerivedType(tag: DW_TAG_member, name: "bio_split", scope: !5175, file: !5001, line: 580, baseType: !5647, size: 2368, offset: 11584)
!5647 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bio_set", file: !3744, line: 682, size: 2368, elements: !5648)
!5648 = !{!5649, !5650, !5651, !5672, !5673, !5674, !5675, !5676, !5677, !5678}
!5649 = !DIDerivedType(tag: DW_TAG_member, name: "bio_slab", scope: !5647, file: !3744, line: 683, baseType: !2252, size: 64)
!5650 = !DIDerivedType(tag: DW_TAG_member, name: "front_pad", scope: !5647, file: !3744, line: 684, baseType: !7, size: 32, offset: 64)
!5651 = !DIDerivedType(tag: DW_TAG_member, name: "bio_pool", scope: !5647, file: !3744, line: 686, baseType: !5652, size: 448, offset: 128)
!5652 = !DIDerivedType(tag: DW_TAG_typedef, name: "mempool_t", file: !5653, line: 26, baseType: !5654)
!5653 = !DIFile(filename: "./include/linux/mempool.h", directory: "/home/lizy2001/genbc/linux")
!5654 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mempool_s", file: !5653, line: 16, size: 448, elements: !5655)
!5655 = !{!5656, !5657, !5658, !5659, !5660, !5661, !5666, !5671}
!5656 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !5654, file: !5653, line: 17, baseType: !729)
!5657 = !DIDerivedType(tag: DW_TAG_member, name: "min_nr", scope: !5654, file: !5653, line: 18, baseType: !37, size: 32)
!5658 = !DIDerivedType(tag: DW_TAG_member, name: "curr_nr", scope: !5654, file: !5653, line: 19, baseType: !37, size: 32, offset: 32)
!5659 = !DIDerivedType(tag: DW_TAG_member, name: "elements", scope: !5654, file: !5653, line: 20, baseType: !3480, size: 64, offset: 64)
!5660 = !DIDerivedType(tag: DW_TAG_member, name: "pool_data", scope: !5654, file: !5653, line: 22, baseType: !570, size: 64, offset: 128)
!5661 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !5654, file: !5653, line: 23, baseType: !5662, size: 64, offset: 192)
!5662 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5663, size: 64)
!5663 = !DIDerivedType(tag: DW_TAG_typedef, name: "mempool_alloc_t", file: !5653, line: 13, baseType: !5664)
!5664 = !DISubroutineType(types: !5665)
!5665 = !{!570, !1990, !570}
!5666 = !DIDerivedType(tag: DW_TAG_member, name: "free", scope: !5654, file: !5653, line: 24, baseType: !5667, size: 64, offset: 256)
!5667 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5668, size: 64)
!5668 = !DIDerivedType(tag: DW_TAG_typedef, name: "mempool_free_t", file: !5653, line: 14, baseType: !5669)
!5669 = !DISubroutineType(types: !5670)
!5670 = !{null, !570, !570}
!5671 = !DIDerivedType(tag: DW_TAG_member, name: "wait", scope: !5654, file: !5653, line: 25, baseType: !1100, size: 128, offset: 320)
!5672 = !DIDerivedType(tag: DW_TAG_member, name: "bvec_pool", scope: !5647, file: !3744, line: 687, baseType: !5652, size: 448, offset: 576)
!5673 = !DIDerivedType(tag: DW_TAG_member, name: "bio_integrity_pool", scope: !5647, file: !3744, line: 689, baseType: !5652, size: 448, offset: 1024)
!5674 = !DIDerivedType(tag: DW_TAG_member, name: "bvec_integrity_pool", scope: !5647, file: !3744, line: 690, baseType: !5652, size: 448, offset: 1472)
!5675 = !DIDerivedType(tag: DW_TAG_member, name: "rescue_lock", scope: !5647, file: !3744, line: 697, baseType: !729, offset: 1920)
!5676 = !DIDerivedType(tag: DW_TAG_member, name: "rescue_list", scope: !5647, file: !3744, line: 698, baseType: !3743, size: 128, offset: 1920)
!5677 = !DIDerivedType(tag: DW_TAG_member, name: "rescue_work", scope: !5647, file: !3744, line: 699, baseType: !1807, size: 256, offset: 2048)
!5678 = !DIDerivedType(tag: DW_TAG_member, name: "rescue_workqueue", scope: !5647, file: !3744, line: 700, baseType: !2757, size: 64, offset: 2304)
!5679 = !DIDerivedType(tag: DW_TAG_member, name: "debugfs_dir", scope: !5175, file: !5001, line: 582, baseType: !673, size: 64, offset: 13952)
!5680 = !DIDerivedType(tag: DW_TAG_member, name: "mq_sysfs_init_done", scope: !5175, file: !5001, line: 589, baseType: !540, size: 8, offset: 14016)
!5681 = !DIDerivedType(tag: DW_TAG_member, name: "cmd_size", scope: !5175, file: !5001, line: 591, baseType: !594, size: 64, offset: 14080)
!5682 = !DIDerivedType(tag: DW_TAG_member, name: "write_hints", scope: !5175, file: !5001, line: 594, baseType: !5683, size: 320, offset: 14144)
!5683 = !DICompositeType(tag: DW_TAG_array_type, baseType: !336, size: 320, elements: !1777)
!5684 = !DIDerivedType(tag: DW_TAG_member, name: "private_data", scope: !3754, file: !3755, line: 191, baseType: !570, size: 64, offset: 7168)
!5685 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3754, file: !3755, line: 193, baseType: !37, size: 32, offset: 7232)
!5686 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !3754, file: !3755, line: 194, baseType: !317, size: 64, offset: 7296)
!5687 = !DIDerivedType(tag: DW_TAG_member, name: "lookup_sem", scope: !3754, file: !3755, line: 196, baseType: !1162, size: 256, offset: 7360)
!5688 = !DIDerivedType(tag: DW_TAG_member, name: "slave_dir", scope: !3754, file: !3755, line: 197, baseType: !3813, size: 64, offset: 7616)
!5689 = !DIDerivedType(tag: DW_TAG_member, name: "random", scope: !3754, file: !3755, line: 199, baseType: !5690, size: 64, offset: 7680)
!5690 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5691, size: 64)
!5691 = !DICompositeType(tag: DW_TAG_structure_type, name: "timer_rand_state", file: !3755, line: 199, flags: DIFlagFwdDecl)
!5692 = !DIDerivedType(tag: DW_TAG_member, name: "sync_io", scope: !3754, file: !3755, line: 200, baseType: !388, size: 32, offset: 7744)
!5693 = !DIDerivedType(tag: DW_TAG_member, name: "ev", scope: !3754, file: !3755, line: 201, baseType: !5694, size: 64, offset: 7808)
!5694 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5695, size: 64)
!5695 = !DICompositeType(tag: DW_TAG_structure_type, name: "disk_events", file: !3755, line: 156, flags: DIFlagFwdDecl)
!5696 = !DIDerivedType(tag: DW_TAG_member, name: "integrity_kobj", scope: !3754, file: !3755, line: 203, baseType: !3807, size: 512, offset: 7872)
!5697 = !DIDerivedType(tag: DW_TAG_member, name: "node_id", scope: !3754, file: !3755, line: 208, baseType: !37, size: 32, offset: 8384)
!5698 = !DIDerivedType(tag: DW_TAG_member, name: "bb", scope: !3754, file: !3755, line: 209, baseType: !5699, size: 64, offset: 8448)
!5699 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5700, size: 64)
!5700 = !DICompositeType(tag: DW_TAG_structure_type, name: "badblocks", file: !3755, line: 157, flags: DIFlagFwdDecl)
!5701 = !DIDerivedType(tag: DW_TAG_member, name: "lockdep_map", scope: !3754, file: !3755, line: 210, baseType: !5702, offset: 8512)
!5702 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lockdep_map", file: !862, line: 192, elements: !743)
!5703 = !DIDerivedType(tag: DW_TAG_member, name: "bi_opf", scope: !3748, file: !3749, line: 206, baseType: !7, size: 32, offset: 128)
!5704 = !DIDerivedType(tag: DW_TAG_member, name: "bi_flags", scope: !3748, file: !3749, line: 210, baseType: !477, size: 16, offset: 160)
!5705 = !DIDerivedType(tag: DW_TAG_member, name: "bi_ioprio", scope: !3748, file: !3749, line: 211, baseType: !477, size: 16, offset: 176)
!5706 = !DIDerivedType(tag: DW_TAG_member, name: "bi_write_hint", scope: !3748, file: !3749, line: 212, baseType: !477, size: 16, offset: 192)
!5707 = !DIDerivedType(tag: DW_TAG_member, name: "bi_status", scope: !3748, file: !3749, line: 213, baseType: !5258, size: 8, offset: 208)
!5708 = !DIDerivedType(tag: DW_TAG_member, name: "bi_partno", scope: !3748, file: !3749, line: 214, baseType: !1397, size: 8, offset: 216)
!5709 = !DIDerivedType(tag: DW_TAG_member, name: "__bi_remaining", scope: !3748, file: !3749, line: 215, baseType: !388, size: 32, offset: 224)
!5710 = !DIDerivedType(tag: DW_TAG_member, name: "bi_iter", scope: !3748, file: !3749, line: 217, baseType: !5711, size: 192, offset: 256)
!5711 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bvec_iter", file: !621, line: 37, size: 192, elements: !5712)
!5712 = !{!5713, !5714, !5715, !5716}
!5713 = !DIDerivedType(tag: DW_TAG_member, name: "bi_sector", scope: !5711, file: !621, line: 38, baseType: !3775, size: 64)
!5714 = !DIDerivedType(tag: DW_TAG_member, name: "bi_size", scope: !5711, file: !621, line: 40, baseType: !7, size: 32, offset: 64)
!5715 = !DIDerivedType(tag: DW_TAG_member, name: "bi_idx", scope: !5711, file: !621, line: 42, baseType: !7, size: 32, offset: 96)
!5716 = !DIDerivedType(tag: DW_TAG_member, name: "bi_bvec_done", scope: !5711, file: !621, line: 44, baseType: !7, size: 32, offset: 128)
!5717 = !DIDerivedType(tag: DW_TAG_member, name: "bi_end_io", scope: !3748, file: !3749, line: 219, baseType: !5718, size: 64, offset: 448)
!5718 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5719, size: 64)
!5719 = !DIDerivedType(tag: DW_TAG_typedef, name: "bio_end_io_t", file: !3749, line: 19, baseType: !5720)
!5720 = !DISubroutineType(types: !5721)
!5721 = !{null, !3747}
!5722 = !DIDerivedType(tag: DW_TAG_member, name: "bi_private", scope: !3748, file: !3749, line: 221, baseType: !570, size: 64, offset: 512)
!5723 = !DIDerivedType(tag: DW_TAG_member, scope: !3748, file: !3749, line: 240, baseType: !5724, size: 64, offset: 576)
!5724 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3748, file: !3749, line: 240, size: 64, elements: !5725)
!5725 = !{!5726}
!5726 = !DIDerivedType(tag: DW_TAG_member, name: "bi_integrity", scope: !5724, file: !3749, line: 242, baseType: !5727, size: 64)
!5727 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5728, size: 64)
!5728 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bio_integrity_payload", file: !3744, line: 313, size: 832, elements: !5729)
!5729 = !{!5730, !5731, !5732, !5733, !5734, !5735, !5736, !5737, !5738, !5740}
!5730 = !DIDerivedType(tag: DW_TAG_member, name: "bip_bio", scope: !5728, file: !3744, line: 314, baseType: !3747, size: 64)
!5731 = !DIDerivedType(tag: DW_TAG_member, name: "bip_iter", scope: !5728, file: !3744, line: 316, baseType: !5711, size: 192, offset: 64)
!5732 = !DIDerivedType(tag: DW_TAG_member, name: "bip_slab", scope: !5728, file: !3744, line: 318, baseType: !477, size: 16, offset: 256)
!5733 = !DIDerivedType(tag: DW_TAG_member, name: "bip_vcnt", scope: !5728, file: !3744, line: 319, baseType: !477, size: 16, offset: 272)
!5734 = !DIDerivedType(tag: DW_TAG_member, name: "bip_max_vcnt", scope: !5728, file: !3744, line: 320, baseType: !477, size: 16, offset: 288)
!5735 = !DIDerivedType(tag: DW_TAG_member, name: "bip_flags", scope: !5728, file: !3744, line: 321, baseType: !477, size: 16, offset: 304)
!5736 = !DIDerivedType(tag: DW_TAG_member, name: "bio_iter", scope: !5728, file: !3744, line: 323, baseType: !5711, size: 192, offset: 320)
!5737 = !DIDerivedType(tag: DW_TAG_member, name: "bip_work", scope: !5728, file: !3744, line: 325, baseType: !1807, size: 256, offset: 512)
!5738 = !DIDerivedType(tag: DW_TAG_member, name: "bip_vec", scope: !5728, file: !3744, line: 327, baseType: !5739, size: 64, offset: 768)
!5739 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !620, size: 64)
!5740 = !DIDerivedType(tag: DW_TAG_member, name: "bip_inline_vecs", scope: !5728, file: !3744, line: 328, baseType: !5741, offset: 832)
!5741 = !DICompositeType(tag: DW_TAG_array_type, baseType: !620, elements: !314)
!5742 = !DIDerivedType(tag: DW_TAG_member, name: "bi_vcnt", scope: !3748, file: !3749, line: 246, baseType: !477, size: 16, offset: 640)
!5743 = !DIDerivedType(tag: DW_TAG_member, name: "bi_max_vecs", scope: !3748, file: !3749, line: 252, baseType: !477, size: 16, offset: 656)
!5744 = !DIDerivedType(tag: DW_TAG_member, name: "__bi_cnt", scope: !3748, file: !3749, line: 254, baseType: !388, size: 32, offset: 672)
!5745 = !DIDerivedType(tag: DW_TAG_member, name: "bi_io_vec", scope: !3748, file: !3749, line: 256, baseType: !5739, size: 64, offset: 704)
!5746 = !DIDerivedType(tag: DW_TAG_member, name: "bi_pool", scope: !3748, file: !3749, line: 258, baseType: !5747, size: 64, offset: 768)
!5747 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5647, size: 64)
!5748 = !DIDerivedType(tag: DW_TAG_member, name: "bi_inline_vecs", scope: !3748, file: !3749, line: 265, baseType: !5741, offset: 832)
!5749 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !3743, file: !3744, line: 556, baseType: !3747, size: 64, offset: 64)
!5750 = !DIDerivedType(tag: DW_TAG_member, name: "plug", scope: !1258, file: !1259, line: 1050, baseType: !5751, size: 64, offset: 10688)
!5751 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5752, size: 64)
!5752 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "blk_plug", file: !5001, line: 1236, size: 320, elements: !5753)
!5753 = !{!5754, !5755, !5756, !5757, !5758}
!5754 = !DIDerivedType(tag: DW_TAG_member, name: "mq_list", scope: !5752, file: !5001, line: 1237, baseType: !289, size: 128)
!5755 = !DIDerivedType(tag: DW_TAG_member, name: "cb_list", scope: !5752, file: !5001, line: 1238, baseType: !289, size: 128, offset: 128)
!5756 = !DIDerivedType(tag: DW_TAG_member, name: "rq_count", scope: !5752, file: !5001, line: 1239, baseType: !477, size: 16, offset: 256)
!5757 = !DIDerivedType(tag: DW_TAG_member, name: "multiple_queues", scope: !5752, file: !5001, line: 1240, baseType: !540, size: 8, offset: 272)
!5758 = !DIDerivedType(tag: DW_TAG_member, name: "nowait", scope: !5752, file: !5001, line: 1241, baseType: !540, size: 8, offset: 280)
!5759 = !DIDerivedType(tag: DW_TAG_member, name: "reclaim_state", scope: !1258, file: !1259, line: 1054, baseType: !5760, size: 64, offset: 10752)
!5760 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5761, size: 64)
!5761 = !DICompositeType(tag: DW_TAG_structure_type, name: "reclaim_state", file: !1259, line: 55, flags: DIFlagFwdDecl)
!5762 = !DIDerivedType(tag: DW_TAG_member, name: "backing_dev_info", scope: !1258, file: !1259, line: 1056, baseType: !5032, size: 64, offset: 10816)
!5763 = !DIDerivedType(tag: DW_TAG_member, name: "io_context", scope: !1258, file: !1259, line: 1058, baseType: !5223, size: 64, offset: 10880)
!5764 = !DIDerivedType(tag: DW_TAG_member, name: "capture_control", scope: !1258, file: !1259, line: 1061, baseType: !5765, size: 64, offset: 10944)
!5765 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5766, size: 64)
!5766 = !DICompositeType(tag: DW_TAG_structure_type, name: "capture_control", file: !1259, line: 43, flags: DIFlagFwdDecl)
!5767 = !DIDerivedType(tag: DW_TAG_member, name: "ptrace_message", scope: !1258, file: !1259, line: 1064, baseType: !317, size: 64, offset: 11008)
!5768 = !DIDerivedType(tag: DW_TAG_member, name: "last_siginfo", scope: !1258, file: !1259, line: 1065, baseType: !5769, size: 64, offset: 11072)
!5769 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5770, size: 64)
!5770 = !DIDerivedType(tag: DW_TAG_typedef, name: "kernel_siginfo_t", file: !3595, line: 14, baseType: !5771)
!5771 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernel_siginfo", file: !3595, line: 12, size: 384, elements: !5772)
!5772 = !{!5773}
!5773 = !DIDerivedType(tag: DW_TAG_member, scope: !5771, file: !3595, line: 13, baseType: !5774, size: 384)
!5774 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !5771, file: !3595, line: 13, size: 384, elements: !5775)
!5775 = !{!5776, !5777, !5778, !5779}
!5776 = !DIDerivedType(tag: DW_TAG_member, name: "si_signo", scope: !5774, file: !3595, line: 13, baseType: !37, size: 32)
!5777 = !DIDerivedType(tag: DW_TAG_member, name: "si_errno", scope: !5774, file: !3595, line: 13, baseType: !37, size: 32, offset: 32)
!5778 = !DIDerivedType(tag: DW_TAG_member, name: "si_code", scope: !5774, file: !3595, line: 13, baseType: !37, size: 32, offset: 64)
!5779 = !DIDerivedType(tag: DW_TAG_member, name: "_sifields", scope: !5774, file: !3595, line: 13, baseType: !5780, size: 256, offset: 128)
!5780 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "__sifields", file: !5781, line: 32, size: 256, elements: !5782)
!5781 = !DIFile(filename: "./include/uapi/asm-generic/siginfo.h", directory: "/home/lizy2001/genbc/linux")
!5782 = !{!5783, !5788, !5801, !5807, !5816, !5836, !5841}
!5783 = !DIDerivedType(tag: DW_TAG_member, name: "_kill", scope: !5780, file: !5781, line: 37, baseType: !5784, size: 64)
!5784 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !5780, file: !5781, line: 34, size: 64, elements: !5785)
!5785 = !{!5786, !5787}
!5786 = !DIDerivedType(tag: DW_TAG_member, name: "_pid", scope: !5784, file: !5781, line: 35, baseType: !1510, size: 32)
!5787 = !DIDerivedType(tag: DW_TAG_member, name: "_uid", scope: !5784, file: !5781, line: 36, baseType: !655, size: 32, offset: 32)
!5788 = !DIDerivedType(tag: DW_TAG_member, name: "_timer", scope: !5780, file: !5781, line: 45, baseType: !5789, size: 192)
!5789 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !5780, file: !5781, line: 40, size: 192, elements: !5790)
!5790 = !{!5791, !5793, !5794, !5800}
!5791 = !DIDerivedType(tag: DW_TAG_member, name: "_tid", scope: !5789, file: !5781, line: 41, baseType: !5792, size: 32)
!5792 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_timer_t", file: !596, line: 95, baseType: !37)
!5793 = !DIDerivedType(tag: DW_TAG_member, name: "_overrun", scope: !5789, file: !5781, line: 42, baseType: !37, size: 32, offset: 32)
!5794 = !DIDerivedType(tag: DW_TAG_member, name: "_sigval", scope: !5789, file: !5781, line: 43, baseType: !5795, size: 64, offset: 64)
!5795 = !DIDerivedType(tag: DW_TAG_typedef, name: "sigval_t", file: !5781, line: 11, baseType: !5796)
!5796 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "sigval", file: !5781, line: 8, size: 64, elements: !5797)
!5797 = !{!5798, !5799}
!5798 = !DIDerivedType(tag: DW_TAG_member, name: "sival_int", scope: !5796, file: !5781, line: 9, baseType: !37, size: 32)
!5799 = !DIDerivedType(tag: DW_TAG_member, name: "sival_ptr", scope: !5796, file: !5781, line: 10, baseType: !570, size: 64)
!5800 = !DIDerivedType(tag: DW_TAG_member, name: "_sys_private", scope: !5789, file: !5781, line: 44, baseType: !37, size: 32, offset: 128)
!5801 = !DIDerivedType(tag: DW_TAG_member, name: "_rt", scope: !5780, file: !5781, line: 52, baseType: !5802, size: 128)
!5802 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !5780, file: !5781, line: 48, size: 128, elements: !5803)
!5803 = !{!5804, !5805, !5806}
!5804 = !DIDerivedType(tag: DW_TAG_member, name: "_pid", scope: !5802, file: !5781, line: 49, baseType: !1510, size: 32)
!5805 = !DIDerivedType(tag: DW_TAG_member, name: "_uid", scope: !5802, file: !5781, line: 50, baseType: !655, size: 32, offset: 32)
!5806 = !DIDerivedType(tag: DW_TAG_member, name: "_sigval", scope: !5802, file: !5781, line: 51, baseType: !5795, size: 64, offset: 64)
!5807 = !DIDerivedType(tag: DW_TAG_member, name: "_sigchld", scope: !5780, file: !5781, line: 61, baseType: !5808, size: 256)
!5808 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !5780, file: !5781, line: 55, size: 256, elements: !5809)
!5809 = !{!5810, !5811, !5812, !5813, !5815}
!5810 = !DIDerivedType(tag: DW_TAG_member, name: "_pid", scope: !5808, file: !5781, line: 56, baseType: !1510, size: 32)
!5811 = !DIDerivedType(tag: DW_TAG_member, name: "_uid", scope: !5808, file: !5781, line: 57, baseType: !655, size: 32, offset: 32)
!5812 = !DIDerivedType(tag: DW_TAG_member, name: "_status", scope: !5808, file: !5781, line: 58, baseType: !37, size: 32, offset: 64)
!5813 = !DIDerivedType(tag: DW_TAG_member, name: "_utime", scope: !5808, file: !5781, line: 59, baseType: !5814, size: 64, offset: 128)
!5814 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_clock_t", file: !596, line: 94, baseType: !1017)
!5815 = !DIDerivedType(tag: DW_TAG_member, name: "_stime", scope: !5808, file: !5781, line: 60, baseType: !5814, size: 64, offset: 192)
!5816 = !DIDerivedType(tag: DW_TAG_member, name: "_sigfault", scope: !5780, file: !5781, line: 95, baseType: !5817, size: 256)
!5817 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !5780, file: !5781, line: 64, size: 256, elements: !5818)
!5818 = !{!5819, !5820}
!5819 = !DIDerivedType(tag: DW_TAG_member, name: "_addr", scope: !5817, file: !5781, line: 65, baseType: !570, size: 64)
!5820 = !DIDerivedType(tag: DW_TAG_member, scope: !5817, file: !5781, line: 77, baseType: !5821, size: 192, offset: 64)
!5821 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5817, file: !5781, line: 77, size: 192, elements: !5822)
!5822 = !{!5823, !5824, !5831}
!5823 = !DIDerivedType(tag: DW_TAG_member, name: "_addr_lsb", scope: !5821, file: !5781, line: 82, baseType: !1246, size: 16)
!5824 = !DIDerivedType(tag: DW_TAG_member, name: "_addr_bnd", scope: !5821, file: !5781, line: 88, baseType: !5825, size: 192)
!5825 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !5821, file: !5781, line: 84, size: 192, elements: !5826)
!5826 = !{!5827, !5829, !5830}
!5827 = !DIDerivedType(tag: DW_TAG_member, name: "_dummy_bnd", scope: !5825, file: !5781, line: 85, baseType: !5828, size: 64)
!5828 = !DICompositeType(tag: DW_TAG_array_type, baseType: !273, size: 64, elements: !1371)
!5829 = !DIDerivedType(tag: DW_TAG_member, name: "_lower", scope: !5825, file: !5781, line: 86, baseType: !570, size: 64, offset: 64)
!5830 = !DIDerivedType(tag: DW_TAG_member, name: "_upper", scope: !5825, file: !5781, line: 87, baseType: !570, size: 64, offset: 128)
!5831 = !DIDerivedType(tag: DW_TAG_member, name: "_addr_pkey", scope: !5821, file: !5781, line: 93, baseType: !5832, size: 96)
!5832 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !5821, file: !5781, line: 90, size: 96, elements: !5833)
!5833 = !{!5834, !5835}
!5834 = !DIDerivedType(tag: DW_TAG_member, name: "_dummy_pkey", scope: !5832, file: !5781, line: 91, baseType: !5828, size: 64)
!5835 = !DIDerivedType(tag: DW_TAG_member, name: "_pkey", scope: !5832, file: !5781, line: 92, baseType: !468, size: 32, offset: 64)
!5836 = !DIDerivedType(tag: DW_TAG_member, name: "_sigpoll", scope: !5780, file: !5781, line: 101, baseType: !5837, size: 128)
!5837 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !5780, file: !5781, line: 98, size: 128, elements: !5838)
!5838 = !{!5839, !5840}
!5839 = !DIDerivedType(tag: DW_TAG_member, name: "_band", scope: !5837, file: !5781, line: 99, baseType: !513, size: 64)
!5840 = !DIDerivedType(tag: DW_TAG_member, name: "_fd", scope: !5837, file: !5781, line: 100, baseType: !37, size: 32, offset: 64)
!5841 = !DIDerivedType(tag: DW_TAG_member, name: "_sigsys", scope: !5780, file: !5781, line: 108, baseType: !5842, size: 128)
!5842 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !5780, file: !5781, line: 104, size: 128, elements: !5843)
!5843 = !{!5844, !5845, !5846}
!5844 = !DIDerivedType(tag: DW_TAG_member, name: "_call_addr", scope: !5842, file: !5781, line: 105, baseType: !570, size: 64)
!5845 = !DIDerivedType(tag: DW_TAG_member, name: "_syscall", scope: !5842, file: !5781, line: 106, baseType: !37, size: 32, offset: 64)
!5846 = !DIDerivedType(tag: DW_TAG_member, name: "_arch", scope: !5842, file: !5781, line: 107, baseType: !7, size: 32, offset: 96)
!5847 = !DIDerivedType(tag: DW_TAG_member, name: "ioac", scope: !1258, file: !1259, line: 1067, baseType: !3662, offset: 11136)
!5848 = !DIDerivedType(tag: DW_TAG_member, name: "robust_list", scope: !1258, file: !1259, line: 1099, baseType: !5849, size: 64, offset: 11136)
!5849 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5850, size: 64)
!5850 = !DICompositeType(tag: DW_TAG_structure_type, name: "robust_list_head", file: !1259, line: 56, flags: DIFlagFwdDecl)
!5851 = !DIDerivedType(tag: DW_TAG_member, name: "pi_state_list", scope: !1258, file: !1259, line: 1103, baseType: !289, size: 128, offset: 11200)
!5852 = !DIDerivedType(tag: DW_TAG_member, name: "pi_state_cache", scope: !1258, file: !1259, line: 1104, baseType: !5853, size: 64, offset: 11328)
!5853 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5854, size: 64)
!5854 = !DICompositeType(tag: DW_TAG_structure_type, name: "futex_pi_state", file: !1259, line: 46, flags: DIFlagFwdDecl)
!5855 = !DIDerivedType(tag: DW_TAG_member, name: "futex_exit_mutex", scope: !1258, file: !1259, line: 1105, baseType: !954, size: 192, offset: 11392)
!5856 = !DIDerivedType(tag: DW_TAG_member, name: "futex_state", scope: !1258, file: !1259, line: 1106, baseType: !7, size: 32, offset: 11584)
!5857 = !DIDerivedType(tag: DW_TAG_member, name: "perf_event_ctxp", scope: !1258, file: !1259, line: 1109, baseType: !5858, size: 128, offset: 11648)
!5858 = !DICompositeType(tag: DW_TAG_array_type, baseType: !5859, size: 128, elements: !478)
!5859 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5860, size: 64)
!5860 = !DICompositeType(tag: DW_TAG_structure_type, name: "perf_event_context", file: !1259, line: 51, flags: DIFlagFwdDecl)
!5861 = !DIDerivedType(tag: DW_TAG_member, name: "perf_event_mutex", scope: !1258, file: !1259, line: 1110, baseType: !954, size: 192, offset: 11776)
!5862 = !DIDerivedType(tag: DW_TAG_member, name: "perf_event_list", scope: !1258, file: !1259, line: 1111, baseType: !289, size: 128, offset: 11968)
!5863 = !DIDerivedType(tag: DW_TAG_member, name: "rseq", scope: !1258, file: !1259, line: 1173, baseType: !5864, size: 64, offset: 12096)
!5864 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5865, size: 64)
!5865 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rseq", file: !5866, line: 62, size: 256, align: 256, elements: !5867)
!5866 = !DIFile(filename: "./include/uapi/linux/rseq.h", directory: "/home/lizy2001/genbc/linux")
!5867 = !{!5868, !5869, !5870, !5875}
!5868 = !DIDerivedType(tag: DW_TAG_member, name: "cpu_id_start", scope: !5865, file: !5866, line: 75, baseType: !468, size: 32)
!5869 = !DIDerivedType(tag: DW_TAG_member, name: "cpu_id", scope: !5865, file: !5866, line: 90, baseType: !468, size: 32, offset: 32)
!5870 = !DIDerivedType(tag: DW_TAG_member, name: "rseq_cs", scope: !5865, file: !5866, line: 124, baseType: !5871, size: 64, offset: 64)
!5871 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5865, file: !5866, line: 109, size: 64, elements: !5872)
!5872 = !{!5873, !5874}
!5873 = !DIDerivedType(tag: DW_TAG_member, name: "ptr64", scope: !5871, file: !5866, line: 110, baseType: !338, size: 64)
!5874 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !5871, file: !5866, line: 112, baseType: !338, size: 64)
!5875 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !5865, file: !5866, line: 144, baseType: !468, size: 32, offset: 128)
!5876 = !DIDerivedType(tag: DW_TAG_member, name: "rseq_sig", scope: !1258, file: !1259, line: 1174, baseType: !707, size: 32, offset: 12160)
!5877 = !DIDerivedType(tag: DW_TAG_member, name: "rseq_event_mask", scope: !1258, file: !1259, line: 1179, baseType: !317, size: 64, offset: 12224)
!5878 = !DIDerivedType(tag: DW_TAG_member, name: "tlb_ubc", scope: !1258, file: !1259, line: 1182, baseType: !5879, size: 128, offset: 12288)
!5879 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tlbflush_unmap_batch", file: !1198, line: 76, size: 128, elements: !5880)
!5880 = !{!5881, !5886, !5887}
!5881 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !5879, file: !1198, line: 85, baseType: !5882, size: 64)
!5882 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arch_tlbflush_unmap_batch", file: !5883, line: 7, size: 64, elements: !5884)
!5883 = !DIFile(filename: "./arch/x86/include/asm/tlbbatch.h", directory: "/home/lizy2001/genbc/linux")
!5884 = !{!5885}
!5885 = !DIDerivedType(tag: DW_TAG_member, name: "cpumask", scope: !5882, file: !5883, line: 12, baseType: !1412, size: 64)
!5886 = !DIDerivedType(tag: DW_TAG_member, name: "flush_required", scope: !5879, file: !1198, line: 88, baseType: !540, size: 8, offset: 64)
!5887 = !DIDerivedType(tag: DW_TAG_member, name: "writable", scope: !5879, file: !1198, line: 95, baseType: !540, size: 8, offset: 72)
!5888 = !DIDerivedType(tag: DW_TAG_member, scope: !1258, file: !1259, line: 1184, baseType: !5889, size: 128, offset: 12416)
!5889 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1258, file: !1259, line: 1184, size: 128, elements: !5890)
!5890 = !{!5891, !5892}
!5891 = !DIDerivedType(tag: DW_TAG_member, name: "rcu_users", scope: !5889, file: !1259, line: 1185, baseType: !1271, size: 32)
!5892 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !5889, file: !1259, line: 1186, baseType: !304, size: 128, align: 64)
!5893 = !DIDerivedType(tag: DW_TAG_member, name: "splice_pipe", scope: !1258, file: !1259, line: 1190, baseType: !5894, size: 64, offset: 12544)
!5894 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5895, size: 64)
!5895 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pipe_inode_info", file: !5896, line: 57, size: 1088, elements: !5897)
!5896 = !DIFile(filename: "./include/linux/pipe_fs_i.h", directory: "/home/lizy2001/genbc/linux")
!5897 = !{!5898, !5899, !5900, !5901, !5902, !5903, !5904, !5905, !5906, !5907, !5908, !5909, !5910, !5911, !5912, !5922, !5923, !5950}
!5898 = !DIDerivedType(tag: DW_TAG_member, name: "mutex", scope: !5895, file: !5896, line: 58, baseType: !954, size: 192)
!5899 = !DIDerivedType(tag: DW_TAG_member, name: "rd_wait", scope: !5895, file: !5896, line: 59, baseType: !1100, size: 128, offset: 192)
!5900 = !DIDerivedType(tag: DW_TAG_member, name: "wr_wait", scope: !5895, file: !5896, line: 59, baseType: !1100, size: 128, offset: 320)
!5901 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !5895, file: !5896, line: 60, baseType: !7, size: 32, offset: 448)
!5902 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !5895, file: !5896, line: 61, baseType: !7, size: 32, offset: 480)
!5903 = !DIDerivedType(tag: DW_TAG_member, name: "max_usage", scope: !5895, file: !5896, line: 62, baseType: !7, size: 32, offset: 512)
!5904 = !DIDerivedType(tag: DW_TAG_member, name: "ring_size", scope: !5895, file: !5896, line: 63, baseType: !7, size: 32, offset: 544)
!5905 = !DIDerivedType(tag: DW_TAG_member, name: "nr_accounted", scope: !5895, file: !5896, line: 67, baseType: !7, size: 32, offset: 576)
!5906 = !DIDerivedType(tag: DW_TAG_member, name: "readers", scope: !5895, file: !5896, line: 68, baseType: !7, size: 32, offset: 608)
!5907 = !DIDerivedType(tag: DW_TAG_member, name: "writers", scope: !5895, file: !5896, line: 69, baseType: !7, size: 32, offset: 640)
!5908 = !DIDerivedType(tag: DW_TAG_member, name: "files", scope: !5895, file: !5896, line: 70, baseType: !7, size: 32, offset: 672)
!5909 = !DIDerivedType(tag: DW_TAG_member, name: "r_counter", scope: !5895, file: !5896, line: 71, baseType: !7, size: 32, offset: 704)
!5910 = !DIDerivedType(tag: DW_TAG_member, name: "w_counter", scope: !5895, file: !5896, line: 72, baseType: !7, size: 32, offset: 736)
!5911 = !DIDerivedType(tag: DW_TAG_member, name: "tmp_page", scope: !5895, file: !5896, line: 73, baseType: !624, size: 64, offset: 768)
!5912 = !DIDerivedType(tag: DW_TAG_member, name: "fasync_readers", scope: !5895, file: !5896, line: 74, baseType: !5913, size: 64, offset: 832)
!5913 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5914, size: 64)
!5914 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fasync_struct", file: !639, line: 1314, size: 320, elements: !5915)
!5915 = !{!5916, !5917, !5918, !5919, !5920, !5921}
!5916 = !DIDerivedType(tag: DW_TAG_member, name: "fa_lock", scope: !5914, file: !639, line: 1315, baseType: !2772)
!5917 = !DIDerivedType(tag: DW_TAG_member, name: "magic", scope: !5914, file: !639, line: 1316, baseType: !37, size: 32)
!5918 = !DIDerivedType(tag: DW_TAG_member, name: "fa_fd", scope: !5914, file: !639, line: 1317, baseType: !37, size: 32, offset: 32)
!5919 = !DIDerivedType(tag: DW_TAG_member, name: "fa_next", scope: !5914, file: !639, line: 1318, baseType: !5913, size: 64, offset: 64)
!5920 = !DIDerivedType(tag: DW_TAG_member, name: "fa_file", scope: !5914, file: !639, line: 1319, baseType: !1010, size: 64, offset: 128)
!5921 = !DIDerivedType(tag: DW_TAG_member, name: "fa_rcu", scope: !5914, file: !639, line: 1320, baseType: !304, size: 128, align: 64, offset: 192)
!5922 = !DIDerivedType(tag: DW_TAG_member, name: "fasync_writers", scope: !5895, file: !5896, line: 75, baseType: !5913, size: 64, offset: 896)
!5923 = !DIDerivedType(tag: DW_TAG_member, name: "bufs", scope: !5895, file: !5896, line: 76, baseType: !5924, size: 64, offset: 960)
!5924 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5925, size: 64)
!5925 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pipe_buffer", file: !5896, line: 26, size: 320, elements: !5926)
!5926 = !{!5927, !5928, !5929, !5930, !5948, !5949}
!5927 = !DIDerivedType(tag: DW_TAG_member, name: "page", scope: !5925, file: !5896, line: 27, baseType: !624, size: 64)
!5928 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !5925, file: !5896, line: 28, baseType: !7, size: 32, offset: 64)
!5929 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !5925, file: !5896, line: 28, baseType: !7, size: 32, offset: 96)
!5930 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !5925, file: !5896, line: 29, baseType: !5931, size: 64, offset: 128)
!5931 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5932, size: 64)
!5932 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5933)
!5933 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pipe_buf_operations", file: !5896, line: 93, size: 256, elements: !5934)
!5934 = !{!5935, !5939, !5943, !5947}
!5935 = !DIDerivedType(tag: DW_TAG_member, name: "confirm", scope: !5933, file: !5896, line: 101, baseType: !5936, size: 64)
!5936 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5937, size: 64)
!5937 = !DISubroutineType(types: !5938)
!5938 = !{!37, !5894, !5924}
!5939 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !5933, file: !5896, line: 107, baseType: !5940, size: 64, offset: 64)
!5940 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5941, size: 64)
!5941 = !DISubroutineType(types: !5942)
!5942 = !{null, !5894, !5924}
!5943 = !DIDerivedType(tag: DW_TAG_member, name: "try_steal", scope: !5933, file: !5896, line: 117, baseType: !5944, size: 64, offset: 128)
!5944 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5945, size: 64)
!5945 = !DISubroutineType(types: !5946)
!5946 = !{!540, !5894, !5924}
!5947 = !DIDerivedType(tag: DW_TAG_member, name: "get", scope: !5933, file: !5896, line: 122, baseType: !5944, size: 64, offset: 192)
!5948 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !5925, file: !5896, line: 30, baseType: !7, size: 32, offset: 192)
!5949 = !DIDerivedType(tag: DW_TAG_member, name: "private", scope: !5925, file: !5896, line: 31, baseType: !317, size: 64, offset: 256)
!5950 = !DIDerivedType(tag: DW_TAG_member, name: "user", scope: !5895, file: !5896, line: 77, baseType: !1733, size: 64, offset: 1024)
!5951 = !DIDerivedType(tag: DW_TAG_member, name: "task_frag", scope: !1258, file: !1259, line: 1192, baseType: !5952, size: 128, offset: 12608)
!5952 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "page_frag", file: !1198, line: 64, size: 128, elements: !5953)
!5953 = !{!5954, !5955, !5956}
!5954 = !DIDerivedType(tag: DW_TAG_member, name: "page", scope: !5952, file: !1198, line: 65, baseType: !624, size: 64)
!5955 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !5952, file: !1198, line: 67, baseType: !468, size: 32, offset: 64)
!5956 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !5952, file: !1198, line: 68, baseType: !468, size: 32, offset: 96)
!5957 = !DIDerivedType(tag: DW_TAG_member, name: "nr_dirtied", scope: !1258, file: !1259, line: 1206, baseType: !37, size: 32, offset: 12736)
!5958 = !DIDerivedType(tag: DW_TAG_member, name: "nr_dirtied_pause", scope: !1258, file: !1259, line: 1207, baseType: !37, size: 32, offset: 12768)
!5959 = !DIDerivedType(tag: DW_TAG_member, name: "dirty_paused_when", scope: !1258, file: !1259, line: 1209, baseType: !317, size: 64, offset: 12800)
!5960 = !DIDerivedType(tag: DW_TAG_member, name: "timer_slack_ns", scope: !1258, file: !1259, line: 1219, baseType: !336, size: 64, offset: 12864)
!5961 = !DIDerivedType(tag: DW_TAG_member, name: "default_timer_slack_ns", scope: !1258, file: !1259, line: 1220, baseType: !336, size: 64, offset: 12928)
!5962 = !DIDerivedType(tag: DW_TAG_member, name: "pagefault_disabled", scope: !1258, file: !1259, line: 1317, baseType: !37, size: 32, offset: 12992)
!5963 = !DIDerivedType(tag: DW_TAG_member, name: "oom_reaper_list", scope: !1258, file: !1259, line: 1319, baseType: !1257, size: 64, offset: 13056)
!5964 = !DIDerivedType(tag: DW_TAG_member, name: "stack_vm_area", scope: !1258, file: !1259, line: 1322, baseType: !5965, size: 64, offset: 13120)
!5965 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5966, size: 64)
!5966 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vm_struct", file: !5967, line: 56, size: 512, elements: !5968)
!5967 = !DIFile(filename: "./include/linux/vmalloc.h", directory: "/home/lizy2001/genbc/linux")
!5968 = !{!5969, !5970, !5971, !5972, !5973, !5975, !5976, !5978}
!5969 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !5966, file: !5967, line: 57, baseType: !5965, size: 64)
!5970 = !DIDerivedType(tag: DW_TAG_member, name: "addr", scope: !5966, file: !5967, line: 58, baseType: !570, size: 64, offset: 64)
!5971 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !5966, file: !5967, line: 59, baseType: !317, size: 64, offset: 128)
!5972 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !5966, file: !5967, line: 60, baseType: !317, size: 64, offset: 192)
!5973 = !DIDerivedType(tag: DW_TAG_member, name: "pages", scope: !5966, file: !5967, line: 61, baseType: !5974, size: 64, offset: 256)
!5974 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !624, size: 64)
!5975 = !DIDerivedType(tag: DW_TAG_member, name: "nr_pages", scope: !5966, file: !5967, line: 62, baseType: !7, size: 32, offset: 320)
!5976 = !DIDerivedType(tag: DW_TAG_member, name: "phys_addr", scope: !5966, file: !5967, line: 63, baseType: !5977, size: 64, offset: 384)
!5977 = !DIDerivedType(tag: DW_TAG_typedef, name: "phys_addr_t", file: !282, line: 153, baseType: !336)
!5978 = !DIDerivedType(tag: DW_TAG_member, name: "caller", scope: !5966, file: !5967, line: 64, baseType: !2244, size: 64, offset: 448)
!5979 = !DIDerivedType(tag: DW_TAG_member, name: "stack_refcount", scope: !1258, file: !1259, line: 1326, baseType: !1271, size: 32, offset: 13184)
!5980 = !DIDerivedType(tag: DW_TAG_member, name: "mce_vaddr", scope: !1258, file: !1259, line: 1342, baseType: !570, size: 64, offset: 13248)
!5981 = !DIDerivedType(tag: DW_TAG_member, name: "mce_kflags", scope: !1258, file: !1259, line: 1343, baseType: !338, size: 64, offset: 13312)
!5982 = !DIDerivedType(tag: DW_TAG_member, name: "mce_addr", scope: !1258, file: !1259, line: 1344, baseType: !336, size: 64, offset: 13376)
!5983 = !DIDerivedType(tag: DW_TAG_member, name: "mce_ripv", scope: !1258, file: !1259, line: 1345, baseType: !338, size: 1, offset: 13440, flags: DIFlagBitField, extraData: i64 13440)
!5984 = !DIDerivedType(tag: DW_TAG_member, name: "mce_whole_page", scope: !1258, file: !1259, line: 1346, baseType: !338, size: 1, offset: 13441, flags: DIFlagBitField, extraData: i64 13440)
!5985 = !DIDerivedType(tag: DW_TAG_member, name: "__mce_reserved", scope: !1258, file: !1259, line: 1347, baseType: !338, size: 62, offset: 13442, flags: DIFlagBitField, extraData: i64 13440)
!5986 = !DIDerivedType(tag: DW_TAG_member, name: "mce_kill_me", scope: !1258, file: !1259, line: 1348, baseType: !304, size: 128, align: 64, offset: 13504)
!5987 = !DIDerivedType(tag: DW_TAG_member, name: "thread", scope: !1258, file: !1259, line: 1358, baseType: !5988, size: 34816, offset: 13824)
!5988 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "thread_struct", file: !5989, line: 485, size: 34816, elements: !5990)
!5989 = !DIFile(filename: "./arch/x86/include/asm/processor.h", directory: "/home/lizy2001/genbc/linux")
!5990 = !{!5991, !6009, !6010, !6011, !6012, !6013, !6014, !6015, !6016, !6020, !6021, !6022, !6023, !6024, !6025, !6028, !6029, !6030}
!5991 = !DIDerivedType(tag: DW_TAG_member, name: "tls_array", scope: !5988, file: !5989, line: 487, baseType: !5992, size: 192)
!5992 = !DICompositeType(tag: DW_TAG_array_type, baseType: !5993, size: 192, elements: !867)
!5993 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "desc_struct", file: !5994, line: 16, size: 64, elements: !5995)
!5994 = !DIFile(filename: "./arch/x86/include/asm/desc_defs.h", directory: "/home/lizy2001/genbc/linux")
!5995 = !{!5996, !5997, !5998, !5999, !6000, !6001, !6002, !6003, !6004, !6005, !6006, !6007, !6008}
!5996 = !DIDerivedType(tag: DW_TAG_member, name: "limit0", scope: !5993, file: !5994, line: 17, baseType: !1038, size: 16)
!5997 = !DIDerivedType(tag: DW_TAG_member, name: "base0", scope: !5993, file: !5994, line: 18, baseType: !1038, size: 16, offset: 16)
!5998 = !DIDerivedType(tag: DW_TAG_member, name: "base1", scope: !5993, file: !5994, line: 19, baseType: !1038, size: 8, offset: 32, flags: DIFlagBitField, extraData: i64 32)
!5999 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !5993, file: !5994, line: 19, baseType: !1038, size: 4, offset: 40, flags: DIFlagBitField, extraData: i64 32)
!6000 = !DIDerivedType(tag: DW_TAG_member, name: "s", scope: !5993, file: !5994, line: 19, baseType: !1038, size: 1, offset: 44, flags: DIFlagBitField, extraData: i64 32)
!6001 = !DIDerivedType(tag: DW_TAG_member, name: "dpl", scope: !5993, file: !5994, line: 19, baseType: !1038, size: 2, offset: 45, flags: DIFlagBitField, extraData: i64 32)
!6002 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !5993, file: !5994, line: 19, baseType: !1038, size: 1, offset: 47, flags: DIFlagBitField, extraData: i64 32)
!6003 = !DIDerivedType(tag: DW_TAG_member, name: "limit1", scope: !5993, file: !5994, line: 20, baseType: !1038, size: 4, offset: 48, flags: DIFlagBitField, extraData: i64 32)
!6004 = !DIDerivedType(tag: DW_TAG_member, name: "avl", scope: !5993, file: !5994, line: 20, baseType: !1038, size: 1, offset: 52, flags: DIFlagBitField, extraData: i64 32)
!6005 = !DIDerivedType(tag: DW_TAG_member, name: "l", scope: !5993, file: !5994, line: 20, baseType: !1038, size: 1, offset: 53, flags: DIFlagBitField, extraData: i64 32)
!6006 = !DIDerivedType(tag: DW_TAG_member, name: "d", scope: !5993, file: !5994, line: 20, baseType: !1038, size: 1, offset: 54, flags: DIFlagBitField, extraData: i64 32)
!6007 = !DIDerivedType(tag: DW_TAG_member, name: "g", scope: !5993, file: !5994, line: 20, baseType: !1038, size: 1, offset: 55, flags: DIFlagBitField, extraData: i64 32)
!6008 = !DIDerivedType(tag: DW_TAG_member, name: "base2", scope: !5993, file: !5994, line: 20, baseType: !1038, size: 8, offset: 56, flags: DIFlagBitField, extraData: i64 32)
!6009 = !DIDerivedType(tag: DW_TAG_member, name: "sp", scope: !5988, file: !5989, line: 491, baseType: !317, size: 64, offset: 192)
!6010 = !DIDerivedType(tag: DW_TAG_member, name: "es", scope: !5988, file: !5989, line: 495, baseType: !477, size: 16, offset: 256)
!6011 = !DIDerivedType(tag: DW_TAG_member, name: "ds", scope: !5988, file: !5989, line: 496, baseType: !477, size: 16, offset: 272)
!6012 = !DIDerivedType(tag: DW_TAG_member, name: "fsindex", scope: !5988, file: !5989, line: 497, baseType: !477, size: 16, offset: 288)
!6013 = !DIDerivedType(tag: DW_TAG_member, name: "gsindex", scope: !5988, file: !5989, line: 498, baseType: !477, size: 16, offset: 304)
!6014 = !DIDerivedType(tag: DW_TAG_member, name: "fsbase", scope: !5988, file: !5989, line: 502, baseType: !317, size: 64, offset: 320)
!6015 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !5988, file: !5989, line: 503, baseType: !317, size: 64, offset: 384)
!6016 = !DIDerivedType(tag: DW_TAG_member, name: "ptrace_bps", scope: !5988, file: !5989, line: 514, baseType: !6017, size: 256, offset: 448)
!6017 = !DICompositeType(tag: DW_TAG_array_type, baseType: !6018, size: 256, elements: !1202)
!6018 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6019, size: 64)
!6019 = !DICompositeType(tag: DW_TAG_structure_type, name: "perf_event", file: !5989, line: 483, flags: DIFlagFwdDecl)
!6020 = !DIDerivedType(tag: DW_TAG_member, name: "virtual_dr6", scope: !5988, file: !5989, line: 516, baseType: !317, size: 64, offset: 704)
!6021 = !DIDerivedType(tag: DW_TAG_member, name: "ptrace_dr7", scope: !5988, file: !5989, line: 518, baseType: !317, size: 64, offset: 768)
!6022 = !DIDerivedType(tag: DW_TAG_member, name: "cr2", scope: !5988, file: !5989, line: 520, baseType: !317, size: 64, offset: 832)
!6023 = !DIDerivedType(tag: DW_TAG_member, name: "trap_nr", scope: !5988, file: !5989, line: 521, baseType: !317, size: 64, offset: 896)
!6024 = !DIDerivedType(tag: DW_TAG_member, name: "error_code", scope: !5988, file: !5989, line: 522, baseType: !317, size: 64, offset: 960)
!6025 = !DIDerivedType(tag: DW_TAG_member, name: "io_bitmap", scope: !5988, file: !5989, line: 528, baseType: !6026, size: 64, offset: 1024)
!6026 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6027, size: 64)
!6027 = !DICompositeType(tag: DW_TAG_structure_type, name: "io_bitmap", file: !5989, line: 10, flags: DIFlagFwdDecl)
!6028 = !DIDerivedType(tag: DW_TAG_member, name: "iopl_emul", scope: !5988, file: !5989, line: 535, baseType: !317, size: 64, offset: 1088)
!6029 = !DIDerivedType(tag: DW_TAG_member, name: "sig_on_uaccess_err", scope: !5988, file: !5989, line: 537, baseType: !7, size: 1, offset: 1152, flags: DIFlagBitField, extraData: i64 1152)
!6030 = !DIDerivedType(tag: DW_TAG_member, name: "fpu", scope: !5988, file: !5989, line: 540, baseType: !6031, size: 33280, offset: 1536)
!6031 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fpu", file: !6032, line: 317, size: 33280, elements: !6033)
!6032 = !DIFile(filename: "./arch/x86/include/asm/fpu/types.h", directory: "/home/lizy2001/genbc/linux")
!6033 = !{!6034, !6035, !6036}
!6034 = !DIDerivedType(tag: DW_TAG_member, name: "last_cpu", scope: !6031, file: !6032, line: 330, baseType: !7, size: 32)
!6035 = !DIDerivedType(tag: DW_TAG_member, name: "avx512_timestamp", scope: !6031, file: !6032, line: 337, baseType: !317, size: 64, offset: 64)
!6036 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !6031, file: !6032, line: 348, baseType: !6037, size: 32768, offset: 512)
!6037 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "fpregs_state", file: !6032, line: 304, size: 32768, elements: !6038)
!6038 = !{!6039, !6052, !6087, !6137, !6149}
!6039 = !DIDerivedType(tag: DW_TAG_member, name: "fsave", scope: !6037, file: !6032, line: 305, baseType: !6040, size: 896)
!6040 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fregs_state", file: !6032, line: 12, size: 896, elements: !6041)
!6041 = !{!6042, !6043, !6044, !6045, !6046, !6047, !6048, !6049, !6051}
!6042 = !DIDerivedType(tag: DW_TAG_member, name: "cwd", scope: !6040, file: !6032, line: 13, baseType: !707, size: 32)
!6043 = !DIDerivedType(tag: DW_TAG_member, name: "swd", scope: !6040, file: !6032, line: 14, baseType: !707, size: 32, offset: 32)
!6044 = !DIDerivedType(tag: DW_TAG_member, name: "twd", scope: !6040, file: !6032, line: 15, baseType: !707, size: 32, offset: 64)
!6045 = !DIDerivedType(tag: DW_TAG_member, name: "fip", scope: !6040, file: !6032, line: 16, baseType: !707, size: 32, offset: 96)
!6046 = !DIDerivedType(tag: DW_TAG_member, name: "fcs", scope: !6040, file: !6032, line: 17, baseType: !707, size: 32, offset: 128)
!6047 = !DIDerivedType(tag: DW_TAG_member, name: "foo", scope: !6040, file: !6032, line: 18, baseType: !707, size: 32, offset: 160)
!6048 = !DIDerivedType(tag: DW_TAG_member, name: "fos", scope: !6040, file: !6032, line: 19, baseType: !707, size: 32, offset: 192)
!6049 = !DIDerivedType(tag: DW_TAG_member, name: "st_space", scope: !6040, file: !6032, line: 22, baseType: !6050, size: 640, offset: 224)
!6050 = !DICompositeType(tag: DW_TAG_array_type, baseType: !707, size: 640, elements: !2498)
!6051 = !DIDerivedType(tag: DW_TAG_member, name: "status", scope: !6040, file: !6032, line: 25, baseType: !707, size: 32, offset: 864)
!6052 = !DIDerivedType(tag: DW_TAG_member, name: "fxsave", scope: !6037, file: !6032, line: 306, baseType: !6053, size: 4096, align: 128)
!6053 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fxregs_state", file: !6032, line: 34, size: 4096, align: 128, elements: !6054)
!6054 = !{!6055, !6056, !6057, !6058, !6059, !6074, !6075, !6076, !6078, !6080, !6082}
!6055 = !DIDerivedType(tag: DW_TAG_member, name: "cwd", scope: !6053, file: !6032, line: 35, baseType: !1038, size: 16)
!6056 = !DIDerivedType(tag: DW_TAG_member, name: "swd", scope: !6053, file: !6032, line: 36, baseType: !1038, size: 16, offset: 16)
!6057 = !DIDerivedType(tag: DW_TAG_member, name: "twd", scope: !6053, file: !6032, line: 37, baseType: !1038, size: 16, offset: 32)
!6058 = !DIDerivedType(tag: DW_TAG_member, name: "fop", scope: !6053, file: !6032, line: 38, baseType: !1038, size: 16, offset: 48)
!6059 = !DIDerivedType(tag: DW_TAG_member, scope: !6053, file: !6032, line: 39, baseType: !6060, size: 128, offset: 64)
!6060 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6053, file: !6032, line: 39, size: 128, elements: !6061)
!6061 = !{!6062, !6067}
!6062 = !DIDerivedType(tag: DW_TAG_member, scope: !6060, file: !6032, line: 40, baseType: !6063, size: 128)
!6063 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !6060, file: !6032, line: 40, size: 128, elements: !6064)
!6064 = !{!6065, !6066}
!6065 = !DIDerivedType(tag: DW_TAG_member, name: "rip", scope: !6063, file: !6032, line: 41, baseType: !336, size: 64)
!6066 = !DIDerivedType(tag: DW_TAG_member, name: "rdp", scope: !6063, file: !6032, line: 42, baseType: !336, size: 64, offset: 64)
!6067 = !DIDerivedType(tag: DW_TAG_member, scope: !6060, file: !6032, line: 44, baseType: !6068, size: 128)
!6068 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !6060, file: !6032, line: 44, size: 128, elements: !6069)
!6069 = !{!6070, !6071, !6072, !6073}
!6070 = !DIDerivedType(tag: DW_TAG_member, name: "fip", scope: !6068, file: !6032, line: 45, baseType: !707, size: 32)
!6071 = !DIDerivedType(tag: DW_TAG_member, name: "fcs", scope: !6068, file: !6032, line: 46, baseType: !707, size: 32, offset: 32)
!6072 = !DIDerivedType(tag: DW_TAG_member, name: "foo", scope: !6068, file: !6032, line: 47, baseType: !707, size: 32, offset: 64)
!6073 = !DIDerivedType(tag: DW_TAG_member, name: "fos", scope: !6068, file: !6032, line: 48, baseType: !707, size: 32, offset: 96)
!6074 = !DIDerivedType(tag: DW_TAG_member, name: "mxcsr", scope: !6053, file: !6032, line: 51, baseType: !707, size: 32, offset: 192)
!6075 = !DIDerivedType(tag: DW_TAG_member, name: "mxcsr_mask", scope: !6053, file: !6032, line: 52, baseType: !707, size: 32, offset: 224)
!6076 = !DIDerivedType(tag: DW_TAG_member, name: "st_space", scope: !6053, file: !6032, line: 55, baseType: !6077, size: 1024, offset: 256)
!6077 = !DICompositeType(tag: DW_TAG_array_type, baseType: !707, size: 1024, elements: !716)
!6078 = !DIDerivedType(tag: DW_TAG_member, name: "xmm_space", scope: !6053, file: !6032, line: 58, baseType: !6079, size: 2048, offset: 1280)
!6079 = !DICompositeType(tag: DW_TAG_array_type, baseType: !707, size: 2048, elements: !3707)
!6080 = !DIDerivedType(tag: DW_TAG_member, name: "padding", scope: !6053, file: !6032, line: 60, baseType: !6081, size: 384, offset: 3328)
!6081 = !DICompositeType(tag: DW_TAG_array_type, baseType: !707, size: 384, elements: !2833)
!6082 = !DIDerivedType(tag: DW_TAG_member, scope: !6053, file: !6032, line: 62, baseType: !6083, size: 384, offset: 3712)
!6083 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6053, file: !6032, line: 62, size: 384, elements: !6084)
!6084 = !{!6085, !6086}
!6085 = !DIDerivedType(tag: DW_TAG_member, name: "padding1", scope: !6083, file: !6032, line: 63, baseType: !6081, size: 384)
!6086 = !DIDerivedType(tag: DW_TAG_member, name: "sw_reserved", scope: !6083, file: !6032, line: 64, baseType: !6081, size: 384)
!6087 = !DIDerivedType(tag: DW_TAG_member, name: "soft", scope: !6037, file: !6032, line: 307, baseType: !6088, size: 1088)
!6088 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "swregs_state", file: !6032, line: 79, size: 1088, elements: !6089)
!6089 = !{!6090, !6091, !6092, !6093, !6094, !6095, !6096, !6097, !6098, !6099, !6100, !6101, !6102, !6103, !6104, !6136}
!6090 = !DIDerivedType(tag: DW_TAG_member, name: "cwd", scope: !6088, file: !6032, line: 80, baseType: !707, size: 32)
!6091 = !DIDerivedType(tag: DW_TAG_member, name: "swd", scope: !6088, file: !6032, line: 81, baseType: !707, size: 32, offset: 32)
!6092 = !DIDerivedType(tag: DW_TAG_member, name: "twd", scope: !6088, file: !6032, line: 82, baseType: !707, size: 32, offset: 64)
!6093 = !DIDerivedType(tag: DW_TAG_member, name: "fip", scope: !6088, file: !6032, line: 83, baseType: !707, size: 32, offset: 96)
!6094 = !DIDerivedType(tag: DW_TAG_member, name: "fcs", scope: !6088, file: !6032, line: 84, baseType: !707, size: 32, offset: 128)
!6095 = !DIDerivedType(tag: DW_TAG_member, name: "foo", scope: !6088, file: !6032, line: 85, baseType: !707, size: 32, offset: 160)
!6096 = !DIDerivedType(tag: DW_TAG_member, name: "fos", scope: !6088, file: !6032, line: 86, baseType: !707, size: 32, offset: 192)
!6097 = !DIDerivedType(tag: DW_TAG_member, name: "st_space", scope: !6088, file: !6032, line: 88, baseType: !6050, size: 640, offset: 224)
!6098 = !DIDerivedType(tag: DW_TAG_member, name: "ftop", scope: !6088, file: !6032, line: 89, baseType: !1397, size: 8, offset: 864)
!6099 = !DIDerivedType(tag: DW_TAG_member, name: "changed", scope: !6088, file: !6032, line: 90, baseType: !1397, size: 8, offset: 872)
!6100 = !DIDerivedType(tag: DW_TAG_member, name: "lookahead", scope: !6088, file: !6032, line: 91, baseType: !1397, size: 8, offset: 880)
!6101 = !DIDerivedType(tag: DW_TAG_member, name: "no_update", scope: !6088, file: !6032, line: 92, baseType: !1397, size: 8, offset: 888)
!6102 = !DIDerivedType(tag: DW_TAG_member, name: "rm", scope: !6088, file: !6032, line: 93, baseType: !1397, size: 8, offset: 896)
!6103 = !DIDerivedType(tag: DW_TAG_member, name: "alimit", scope: !6088, file: !6032, line: 94, baseType: !1397, size: 8, offset: 904)
!6104 = !DIDerivedType(tag: DW_TAG_member, name: "info", scope: !6088, file: !6032, line: 95, baseType: !6105, size: 64, offset: 960)
!6105 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6106, size: 64)
!6106 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "math_emu_info", file: !6107, line: 11, size: 128, elements: !6108)
!6107 = !DIFile(filename: "./arch/x86/include/asm/math_emu.h", directory: "/home/lizy2001/genbc/linux")
!6108 = !{!6109, !6110}
!6109 = !DIDerivedType(tag: DW_TAG_member, name: "___orig_eip", scope: !6106, file: !6107, line: 12, baseType: !513, size: 64)
!6110 = !DIDerivedType(tag: DW_TAG_member, name: "regs", scope: !6106, file: !6107, line: 13, baseType: !6111, size: 64, offset: 64)
!6111 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6112, size: 64)
!6112 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pt_regs", file: !6113, line: 56, size: 1344, elements: !6114)
!6113 = !DIFile(filename: "./arch/x86/include/asm/ptrace.h", directory: "/home/lizy2001/genbc/linux")
!6114 = !{!6115, !6116, !6117, !6118, !6119, !6120, !6121, !6122, !6123, !6124, !6125, !6126, !6127, !6128, !6129, !6130, !6131, !6132, !6133, !6134, !6135}
!6115 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !6112, file: !6113, line: 61, baseType: !317, size: 64)
!6116 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !6112, file: !6113, line: 62, baseType: !317, size: 64, offset: 64)
!6117 = !DIDerivedType(tag: DW_TAG_member, name: "r13", scope: !6112, file: !6113, line: 63, baseType: !317, size: 64, offset: 128)
!6118 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !6112, file: !6113, line: 64, baseType: !317, size: 64, offset: 192)
!6119 = !DIDerivedType(tag: DW_TAG_member, name: "bp", scope: !6112, file: !6113, line: 65, baseType: !317, size: 64, offset: 256)
!6120 = !DIDerivedType(tag: DW_TAG_member, name: "bx", scope: !6112, file: !6113, line: 66, baseType: !317, size: 64, offset: 320)
!6121 = !DIDerivedType(tag: DW_TAG_member, name: "r11", scope: !6112, file: !6113, line: 68, baseType: !317, size: 64, offset: 384)
!6122 = !DIDerivedType(tag: DW_TAG_member, name: "r10", scope: !6112, file: !6113, line: 69, baseType: !317, size: 64, offset: 448)
!6123 = !DIDerivedType(tag: DW_TAG_member, name: "r9", scope: !6112, file: !6113, line: 70, baseType: !317, size: 64, offset: 512)
!6124 = !DIDerivedType(tag: DW_TAG_member, name: "r8", scope: !6112, file: !6113, line: 71, baseType: !317, size: 64, offset: 576)
!6125 = !DIDerivedType(tag: DW_TAG_member, name: "ax", scope: !6112, file: !6113, line: 72, baseType: !317, size: 64, offset: 640)
!6126 = !DIDerivedType(tag: DW_TAG_member, name: "cx", scope: !6112, file: !6113, line: 73, baseType: !317, size: 64, offset: 704)
!6127 = !DIDerivedType(tag: DW_TAG_member, name: "dx", scope: !6112, file: !6113, line: 74, baseType: !317, size: 64, offset: 768)
!6128 = !DIDerivedType(tag: DW_TAG_member, name: "si", scope: !6112, file: !6113, line: 75, baseType: !317, size: 64, offset: 832)
!6129 = !DIDerivedType(tag: DW_TAG_member, name: "di", scope: !6112, file: !6113, line: 76, baseType: !317, size: 64, offset: 896)
!6130 = !DIDerivedType(tag: DW_TAG_member, name: "orig_ax", scope: !6112, file: !6113, line: 81, baseType: !317, size: 64, offset: 960)
!6131 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !6112, file: !6113, line: 83, baseType: !317, size: 64, offset: 1024)
!6132 = !DIDerivedType(tag: DW_TAG_member, name: "cs", scope: !6112, file: !6113, line: 84, baseType: !317, size: 64, offset: 1088)
!6133 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !6112, file: !6113, line: 85, baseType: !317, size: 64, offset: 1152)
!6134 = !DIDerivedType(tag: DW_TAG_member, name: "sp", scope: !6112, file: !6113, line: 86, baseType: !317, size: 64, offset: 1216)
!6135 = !DIDerivedType(tag: DW_TAG_member, name: "ss", scope: !6112, file: !6113, line: 87, baseType: !317, size: 64, offset: 1280)
!6136 = !DIDerivedType(tag: DW_TAG_member, name: "entry_eip", scope: !6088, file: !6032, line: 96, baseType: !707, size: 32, offset: 1024)
!6137 = !DIDerivedType(tag: DW_TAG_member, name: "xsave", scope: !6037, file: !6032, line: 308, baseType: !6138, size: 4608, align: 512)
!6138 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xregs_state", file: !6032, line: 289, size: 4608, align: 512, elements: !6139)
!6139 = !{!6140, !6141, !6148}
!6140 = !DIDerivedType(tag: DW_TAG_member, name: "i387", scope: !6138, file: !6032, line: 290, baseType: !6053, size: 4096, align: 128)
!6141 = !DIDerivedType(tag: DW_TAG_member, name: "header", scope: !6138, file: !6032, line: 291, baseType: !6142, size: 512, offset: 4096)
!6142 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xstate_header", file: !6032, line: 268, size: 512, elements: !6143)
!6143 = !{!6144, !6145, !6146}
!6144 = !DIDerivedType(tag: DW_TAG_member, name: "xfeatures", scope: !6142, file: !6032, line: 269, baseType: !336, size: 64)
!6145 = !DIDerivedType(tag: DW_TAG_member, name: "xcomp_bv", scope: !6142, file: !6032, line: 270, baseType: !336, size: 64, offset: 64)
!6146 = !DIDerivedType(tag: DW_TAG_member, name: "reserved", scope: !6142, file: !6032, line: 271, baseType: !6147, size: 384, offset: 128)
!6147 = !DICompositeType(tag: DW_TAG_array_type, baseType: !336, size: 384, elements: !1671)
!6148 = !DIDerivedType(tag: DW_TAG_member, name: "extended_state_area", scope: !6138, file: !6032, line: 292, baseType: !2856, offset: 4608)
!6149 = !DIDerivedType(tag: DW_TAG_member, name: "__padding", scope: !6037, file: !6032, line: 309, baseType: !6150, size: 32768)
!6150 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1397, size: 32768, elements: !6151)
!6151 = !{!6152}
!6152 = !DISubrange(count: 4096)
!6153 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1254, file: !626, line: 378, baseType: !6154, size: 64, offset: 64)
!6154 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1254, size: 64)
!6155 = !DIDerivedType(tag: DW_TAG_member, name: "startup", scope: !1250, file: !626, line: 384, baseType: !1547, size: 192, offset: 192)
!6156 = !DIDerivedType(tag: DW_TAG_member, name: "ioctx_lock", scope: !1129, file: !626, line: 500, baseType: !729, offset: 6656)
!6157 = !DIDerivedType(tag: DW_TAG_member, name: "ioctx_table", scope: !1129, file: !626, line: 501, baseType: !6158, size: 64, offset: 6656)
!6158 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6159, size: 64)
!6159 = !DICompositeType(tag: DW_TAG_structure_type, name: "kioctx_table", file: !626, line: 387, flags: DIFlagFwdDecl)
!6160 = !DIDerivedType(tag: DW_TAG_member, name: "user_ns", scope: !1129, file: !626, line: 516, baseType: !1759, size: 64, offset: 6720)
!6161 = !DIDerivedType(tag: DW_TAG_member, name: "exe_file", scope: !1129, file: !626, line: 519, baseType: !1010, size: 64, offset: 6784)
!6162 = !DIDerivedType(tag: DW_TAG_member, name: "notifier_subscriptions", scope: !1129, file: !626, line: 521, baseType: !6163, size: 64, offset: 6848)
!6163 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6164, size: 64)
!6164 = !DICompositeType(tag: DW_TAG_structure_type, name: "mmu_notifier_subscriptions", file: !626, line: 521, flags: DIFlagFwdDecl)
!6165 = !DIDerivedType(tag: DW_TAG_member, name: "tlb_flush_pending", scope: !1129, file: !626, line: 545, baseType: !388, size: 32, offset: 6912)
!6166 = !DIDerivedType(tag: DW_TAG_member, name: "tlb_flush_batched", scope: !1129, file: !626, line: 548, baseType: !540, size: 8, offset: 6944)
!6167 = !DIDerivedType(tag: DW_TAG_member, name: "uprobes_state", scope: !1129, file: !626, line: 550, baseType: !6168, offset: 6952)
!6168 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uprobes_state", file: !6169, line: 142, elements: !743)
!6169 = !DIFile(filename: "./include/linux/uprobes.h", directory: "/home/lizy2001/genbc/linux")
!6170 = !DIDerivedType(tag: DW_TAG_member, name: "async_put_work", scope: !1129, file: !626, line: 554, baseType: !1807, size: 256, offset: 6976)
!6171 = !DIDerivedType(tag: DW_TAG_member, name: "pasid", scope: !1129, file: !626, line: 557, baseType: !707, size: 32, offset: 7232)
!6172 = !DIDerivedType(tag: DW_TAG_member, name: "cpu_bitmap", scope: !1126, file: !626, line: 565, baseType: !6173, offset: 7296)
!6173 = !DICompositeType(tag: DW_TAG_array_type, baseType: !317, elements: !314)
!6174 = !DIDerivedType(tag: DW_TAG_member, name: "vm_page_prot", scope: !1116, file: !626, line: 333, baseType: !6175, size: 64, offset: 576)
!6175 = !DIDerivedType(tag: DW_TAG_typedef, name: "pgprot_t", file: !1148, line: 284, baseType: !6176)
!6176 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pgprot", file: !1148, line: 284, size: 64, elements: !6177)
!6177 = !{!6178}
!6178 = !DIDerivedType(tag: DW_TAG_member, name: "pgprot", scope: !6176, file: !1148, line: 284, baseType: !6179, size: 64)
!6179 = !DIDerivedType(tag: DW_TAG_typedef, name: "pgprotval_t", file: !1153, line: 19, baseType: !317)
!6180 = !DIDerivedType(tag: DW_TAG_member, name: "vm_flags", scope: !1116, file: !626, line: 334, baseType: !317, size: 64, offset: 640)
!6181 = !DIDerivedType(tag: DW_TAG_member, name: "shared", scope: !1116, file: !626, line: 343, baseType: !6182, size: 256, offset: 704)
!6182 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1116, file: !626, line: 340, size: 256, elements: !6183)
!6183 = !{!6184, !6185}
!6184 = !DIDerivedType(tag: DW_TAG_member, name: "rb", scope: !6182, file: !626, line: 341, baseType: !438, size: 192, align: 64)
!6185 = !DIDerivedType(tag: DW_TAG_member, name: "rb_subtree_last", scope: !6182, file: !626, line: 342, baseType: !317, size: 64, offset: 192)
!6186 = !DIDerivedType(tag: DW_TAG_member, name: "anon_vma_chain", scope: !1116, file: !626, line: 351, baseType: !289, size: 128, offset: 960)
!6187 = !DIDerivedType(tag: DW_TAG_member, name: "anon_vma", scope: !1116, file: !626, line: 353, baseType: !6188, size: 64, offset: 1088)
!6188 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6189, size: 64)
!6189 = !DICompositeType(tag: DW_TAG_structure_type, name: "anon_vma", file: !626, line: 353, flags: DIFlagFwdDecl)
!6190 = !DIDerivedType(tag: DW_TAG_member, name: "vm_ops", scope: !1116, file: !626, line: 356, baseType: !4042, size: 64, offset: 1152)
!6191 = !DIDerivedType(tag: DW_TAG_member, name: "vm_pgoff", scope: !1116, file: !626, line: 359, baseType: !317, size: 64, offset: 1216)
!6192 = !DIDerivedType(tag: DW_TAG_member, name: "vm_file", scope: !1116, file: !626, line: 361, baseType: !1010, size: 64, offset: 1280)
!6193 = !DIDerivedType(tag: DW_TAG_member, name: "vm_private_data", scope: !1116, file: !626, line: 362, baseType: !570, size: 64, offset: 1344)
!6194 = !DIDerivedType(tag: DW_TAG_member, name: "swap_readahead_info", scope: !1116, file: !626, line: 365, baseType: !376, size: 64, offset: 1408)
!6195 = !DIDerivedType(tag: DW_TAG_member, name: "vm_userfaultfd_ctx", scope: !1116, file: !626, line: 373, baseType: !6196, offset: 1472)
!6196 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vm_userfaultfd_ctx", file: !626, line: 296, elements: !743)
!6197 = !DIDerivedType(tag: DW_TAG_member, name: "mmap_supported_flags", scope: !1003, file: !639, line: 1836, baseType: !317, size: 64, offset: 832)
!6198 = !DIDerivedType(tag: DW_TAG_member, name: "open", scope: !1003, file: !639, line: 1837, baseType: !6199, size: 64, offset: 896)
!6199 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6200, size: 64)
!6200 = !DISubroutineType(types: !6201)
!6201 = !{!37, !642, !1010}
!6202 = !DIDerivedType(tag: DW_TAG_member, name: "flush", scope: !1003, file: !639, line: 1838, baseType: !6203, size: 64, offset: 960)
!6203 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6204, size: 64)
!6204 = !DISubroutineType(types: !6205)
!6205 = !{!37, !1010, !6206}
!6206 = !DIDerivedType(tag: DW_TAG_typedef, name: "fl_owner_t", file: !639, line: 1007, baseType: !570)
!6207 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !1003, file: !639, line: 1839, baseType: !6199, size: 64, offset: 1024)
!6208 = !DIDerivedType(tag: DW_TAG_member, name: "fsync", scope: !1003, file: !639, line: 1840, baseType: !6209, size: 64, offset: 1088)
!6209 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6210, size: 64)
!6210 = !DISubroutineType(types: !6211)
!6211 = !{!37, !1010, !824, !824, !37}
!6212 = !DIDerivedType(tag: DW_TAG_member, name: "fasync", scope: !1003, file: !639, line: 1841, baseType: !6213, size: 64, offset: 1152)
!6213 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6214, size: 64)
!6214 = !DISubroutineType(types: !6215)
!6215 = !{!37, !37, !1010, !37}
!6216 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1003, file: !639, line: 1842, baseType: !6217, size: 64, offset: 1216)
!6217 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6218, size: 64)
!6218 = !DISubroutineType(types: !6219)
!6219 = !{!37, !1010, !37, !6220}
!6220 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6221, size: 64)
!6221 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_lock", file: !639, line: 1062, size: 1664, elements: !6222)
!6222 = !{!6223, !6224, !6225, !6226, !6227, !6228, !6229, !6230, !6231, !6232, !6233, !6234, !6235, !6236, !6237, !6238, !6239, !6240, !6253, !6284}
!6223 = !DIDerivedType(tag: DW_TAG_member, name: "fl_blocker", scope: !6221, file: !639, line: 1063, baseType: !6220, size: 64)
!6224 = !DIDerivedType(tag: DW_TAG_member, name: "fl_list", scope: !6221, file: !639, line: 1064, baseType: !289, size: 128, offset: 64)
!6225 = !DIDerivedType(tag: DW_TAG_member, name: "fl_link", scope: !6221, file: !639, line: 1065, baseType: !281, size: 128, offset: 192)
!6226 = !DIDerivedType(tag: DW_TAG_member, name: "fl_blocked_requests", scope: !6221, file: !639, line: 1066, baseType: !289, size: 128, offset: 320)
!6227 = !DIDerivedType(tag: DW_TAG_member, name: "fl_blocked_member", scope: !6221, file: !639, line: 1069, baseType: !289, size: 128, offset: 448)
!6228 = !DIDerivedType(tag: DW_TAG_member, name: "fl_owner", scope: !6221, file: !639, line: 1072, baseType: !6206, size: 64, offset: 576)
!6229 = !DIDerivedType(tag: DW_TAG_member, name: "fl_flags", scope: !6221, file: !639, line: 1073, baseType: !7, size: 32, offset: 640)
!6230 = !DIDerivedType(tag: DW_TAG_member, name: "fl_type", scope: !6221, file: !639, line: 1074, baseType: !494, size: 8, offset: 672)
!6231 = !DIDerivedType(tag: DW_TAG_member, name: "fl_pid", scope: !6221, file: !639, line: 1075, baseType: !7, size: 32, offset: 704)
!6232 = !DIDerivedType(tag: DW_TAG_member, name: "fl_link_cpu", scope: !6221, file: !639, line: 1076, baseType: !37, size: 32, offset: 736)
!6233 = !DIDerivedType(tag: DW_TAG_member, name: "fl_wait", scope: !6221, file: !639, line: 1077, baseType: !1100, size: 128, offset: 768)
!6234 = !DIDerivedType(tag: DW_TAG_member, name: "fl_file", scope: !6221, file: !639, line: 1078, baseType: !1010, size: 64, offset: 896)
!6235 = !DIDerivedType(tag: DW_TAG_member, name: "fl_start", scope: !6221, file: !639, line: 1079, baseType: !824, size: 64, offset: 960)
!6236 = !DIDerivedType(tag: DW_TAG_member, name: "fl_end", scope: !6221, file: !639, line: 1080, baseType: !824, size: 64, offset: 1024)
!6237 = !DIDerivedType(tag: DW_TAG_member, name: "fl_fasync", scope: !6221, file: !639, line: 1082, baseType: !5913, size: 64, offset: 1088)
!6238 = !DIDerivedType(tag: DW_TAG_member, name: "fl_break_time", scope: !6221, file: !639, line: 1084, baseType: !317, size: 64, offset: 1152)
!6239 = !DIDerivedType(tag: DW_TAG_member, name: "fl_downgrade_time", scope: !6221, file: !639, line: 1085, baseType: !317, size: 64, offset: 1216)
!6240 = !DIDerivedType(tag: DW_TAG_member, name: "fl_ops", scope: !6221, file: !639, line: 1087, baseType: !6241, size: 64, offset: 1280)
!6241 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6242, size: 64)
!6242 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6243)
!6243 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_lock_operations", file: !639, line: 1011, size: 128, elements: !6244)
!6244 = !{!6245, !6249}
!6245 = !DIDerivedType(tag: DW_TAG_member, name: "fl_copy_lock", scope: !6243, file: !639, line: 1012, baseType: !6246, size: 64)
!6246 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6247, size: 64)
!6247 = !DISubroutineType(types: !6248)
!6248 = !{null, !6220, !6220}
!6249 = !DIDerivedType(tag: DW_TAG_member, name: "fl_release_private", scope: !6243, file: !639, line: 1013, baseType: !6250, size: 64, offset: 64)
!6250 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6251, size: 64)
!6251 = !DISubroutineType(types: !6252)
!6252 = !{null, !6220}
!6253 = !DIDerivedType(tag: DW_TAG_member, name: "fl_lmops", scope: !6221, file: !639, line: 1088, baseType: !6254, size: 64, offset: 1344)
!6254 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6255, size: 64)
!6255 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6256)
!6256 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lock_manager_operations", file: !639, line: 1016, size: 512, elements: !6257)
!6257 = !{!6258, !6262, !6266, !6267, !6271, !6275, !6279, !6283}
!6258 = !DIDerivedType(tag: DW_TAG_member, name: "lm_get_owner", scope: !6256, file: !639, line: 1017, baseType: !6259, size: 64)
!6259 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6260, size: 64)
!6260 = !DISubroutineType(types: !6261)
!6261 = !{!6206, !6206}
!6262 = !DIDerivedType(tag: DW_TAG_member, name: "lm_put_owner", scope: !6256, file: !639, line: 1018, baseType: !6263, size: 64, offset: 64)
!6263 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6264, size: 64)
!6264 = !DISubroutineType(types: !6265)
!6265 = !{null, !6206}
!6266 = !DIDerivedType(tag: DW_TAG_member, name: "lm_notify", scope: !6256, file: !639, line: 1019, baseType: !6250, size: 64, offset: 128)
!6267 = !DIDerivedType(tag: DW_TAG_member, name: "lm_grant", scope: !6256, file: !639, line: 1020, baseType: !6268, size: 64, offset: 192)
!6268 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6269, size: 64)
!6269 = !DISubroutineType(types: !6270)
!6270 = !{!37, !6220, !37}
!6271 = !DIDerivedType(tag: DW_TAG_member, name: "lm_break", scope: !6256, file: !639, line: 1021, baseType: !6272, size: 64, offset: 256)
!6272 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6273, size: 64)
!6273 = !DISubroutineType(types: !6274)
!6274 = !{!540, !6220}
!6275 = !DIDerivedType(tag: DW_TAG_member, name: "lm_change", scope: !6256, file: !639, line: 1022, baseType: !6276, size: 64, offset: 320)
!6276 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6277, size: 64)
!6277 = !DISubroutineType(types: !6278)
!6278 = !{!37, !6220, !37, !292}
!6279 = !DIDerivedType(tag: DW_TAG_member, name: "lm_setup", scope: !6256, file: !639, line: 1023, baseType: !6280, size: 64, offset: 384)
!6280 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6281, size: 64)
!6281 = !DISubroutineType(types: !6282)
!6282 = !{null, !6220, !3480}
!6283 = !DIDerivedType(tag: DW_TAG_member, name: "lm_breaker_owns_lease", scope: !6256, file: !639, line: 1024, baseType: !6272, size: 64, offset: 448)
!6284 = !DIDerivedType(tag: DW_TAG_member, name: "fl_u", scope: !6221, file: !639, line: 1097, baseType: !6285, size: 256, offset: 1408)
!6285 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6221, file: !639, line: 1089, size: 256, elements: !6286)
!6286 = !{!6287, !6296, !6302}
!6287 = !DIDerivedType(tag: DW_TAG_member, name: "nfs_fl", scope: !6285, file: !639, line: 1090, baseType: !6288, size: 256)
!6288 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "nfs_lock_info", file: !6289, line: 10, size: 256, elements: !6290)
!6289 = !DIFile(filename: "./include/linux/nfs_fs_i.h", directory: "/home/lizy2001/genbc/linux")
!6290 = !{!6291, !6292, !6295}
!6291 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !6288, file: !6289, line: 11, baseType: !707, size: 32)
!6292 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !6288, file: !6289, line: 12, baseType: !6293, size: 64, offset: 64)
!6293 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6294, size: 64)
!6294 = !DICompositeType(tag: DW_TAG_structure_type, name: "nlm_lockowner", file: !6289, line: 5, flags: DIFlagFwdDecl)
!6295 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !6288, file: !6289, line: 13, baseType: !289, size: 128, offset: 128)
!6296 = !DIDerivedType(tag: DW_TAG_member, name: "nfs4_fl", scope: !6285, file: !639, line: 1091, baseType: !6297, size: 64)
!6297 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "nfs4_lock_info", file: !6289, line: 17, size: 64, elements: !6298)
!6298 = !{!6299}
!6299 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !6297, file: !6289, line: 18, baseType: !6300, size: 64)
!6300 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6301, size: 64)
!6301 = !DICompositeType(tag: DW_TAG_structure_type, name: "nfs4_lock_state", file: !6289, line: 16, flags: DIFlagFwdDecl)
!6302 = !DIDerivedType(tag: DW_TAG_member, name: "afs", scope: !6285, file: !639, line: 1096, baseType: !6303, size: 192)
!6303 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !6285, file: !639, line: 1092, size: 192, elements: !6304)
!6304 = !{!6305, !6306, !6307}
!6305 = !DIDerivedType(tag: DW_TAG_member, name: "link", scope: !6303, file: !639, line: 1093, baseType: !289, size: 128)
!6306 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !6303, file: !639, line: 1094, baseType: !37, size: 32, offset: 128)
!6307 = !DIDerivedType(tag: DW_TAG_member, name: "debug_id", scope: !6303, file: !639, line: 1095, baseType: !7, size: 32, offset: 160)
!6308 = !DIDerivedType(tag: DW_TAG_member, name: "sendpage", scope: !1003, file: !639, line: 1843, baseType: !6309, size: 64, offset: 1280)
!6309 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6310, size: 64)
!6310 = !DISubroutineType(types: !6311)
!6311 = !{!1015, !1010, !624, !37, !594, !969, !37}
!6312 = !DIDerivedType(tag: DW_TAG_member, name: "get_unmapped_area", scope: !1003, file: !639, line: 1844, baseType: !1138, size: 64, offset: 1344)
!6313 = !DIDerivedType(tag: DW_TAG_member, name: "check_flags", scope: !1003, file: !639, line: 1845, baseType: !6314, size: 64, offset: 1408)
!6314 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6315, size: 64)
!6315 = !DISubroutineType(types: !6316)
!6316 = !{!37, !37}
!6317 = !DIDerivedType(tag: DW_TAG_member, name: "flock", scope: !1003, file: !639, line: 1846, baseType: !6217, size: 64, offset: 1472)
!6318 = !DIDerivedType(tag: DW_TAG_member, name: "splice_write", scope: !1003, file: !639, line: 1847, baseType: !6319, size: 64, offset: 1536)
!6319 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6320, size: 64)
!6320 = !DISubroutineType(types: !6321)
!6321 = !{!1015, !5894, !1010, !969, !594, !7}
!6322 = !DIDerivedType(tag: DW_TAG_member, name: "splice_read", scope: !1003, file: !639, line: 1848, baseType: !6323, size: 64, offset: 1600)
!6323 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6324, size: 64)
!6324 = !DISubroutineType(types: !6325)
!6325 = !{!1015, !1010, !969, !5894, !594, !7}
!6326 = !DIDerivedType(tag: DW_TAG_member, name: "setlease", scope: !1003, file: !639, line: 1849, baseType: !6327, size: 64, offset: 1664)
!6327 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6328, size: 64)
!6328 = !DISubroutineType(types: !6329)
!6329 = !{!37, !1010, !513, !6330, !3480}
!6330 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6220, size: 64)
!6331 = !DIDerivedType(tag: DW_TAG_member, name: "fallocate", scope: !1003, file: !639, line: 1850, baseType: !6332, size: 64, offset: 1728)
!6332 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6333, size: 64)
!6333 = !DISubroutineType(types: !6334)
!6334 = !{!513, !1010, !37, !824, !824}
!6335 = !DIDerivedType(tag: DW_TAG_member, name: "show_fdinfo", scope: !1003, file: !639, line: 1852, baseType: !6336, size: 64, offset: 1792)
!6336 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6337, size: 64)
!6337 = !DISubroutineType(types: !6338)
!6338 = !{null, !942, !1010}
!6339 = !DIDerivedType(tag: DW_TAG_member, name: "copy_file_range", scope: !1003, file: !639, line: 1856, baseType: !6340, size: 64, offset: 1856)
!6340 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6341, size: 64)
!6341 = !DISubroutineType(types: !6342)
!6342 = !{!1015, !1010, !824, !1010, !824, !594, !7}
!6343 = !DIDerivedType(tag: DW_TAG_member, name: "remap_file_range", scope: !1003, file: !639, line: 1858, baseType: !6344, size: 64, offset: 1920)
!6344 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6345, size: 64)
!6345 = !DISubroutineType(types: !6346)
!6346 = !{!824, !1010, !824, !1010, !824, !824, !7}
!6347 = !DIDerivedType(tag: DW_TAG_member, name: "fadvise", scope: !1003, file: !639, line: 1861, baseType: !6209, size: 64, offset: 1984)
!6348 = !DIDerivedType(tag: DW_TAG_member, name: "f_lock", scope: !986, file: !639, line: 929, baseType: !729, offset: 384)
!6349 = !DIDerivedType(tag: DW_TAG_member, name: "f_write_hint", scope: !986, file: !639, line: 930, baseType: !6350, size: 32, offset: 384)
!6350 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "rw_hint", file: !639, line: 296, baseType: !7, size: 32, elements: !6351)
!6351 = !{!6352, !6353, !6354, !6355, !6356, !6357}
!6352 = !DIEnumerator(name: "WRITE_LIFE_NOT_SET", value: 0, isUnsigned: true)
!6353 = !DIEnumerator(name: "WRITE_LIFE_NONE", value: 1, isUnsigned: true)
!6354 = !DIEnumerator(name: "WRITE_LIFE_SHORT", value: 2, isUnsigned: true)
!6355 = !DIEnumerator(name: "WRITE_LIFE_MEDIUM", value: 3, isUnsigned: true)
!6356 = !DIEnumerator(name: "WRITE_LIFE_LONG", value: 4, isUnsigned: true)
!6357 = !DIEnumerator(name: "WRITE_LIFE_EXTREME", value: 5, isUnsigned: true)
!6358 = !DIDerivedType(tag: DW_TAG_member, name: "f_count", scope: !986, file: !639, line: 931, baseType: !376, size: 64, offset: 448)
!6359 = !DIDerivedType(tag: DW_TAG_member, name: "f_flags", scope: !986, file: !639, line: 932, baseType: !7, size: 32, offset: 512)
!6360 = !DIDerivedType(tag: DW_TAG_member, name: "f_mode", scope: !986, file: !639, line: 933, baseType: !5102, size: 32, offset: 544)
!6361 = !DIDerivedType(tag: DW_TAG_member, name: "f_pos_lock", scope: !986, file: !639, line: 934, baseType: !954, size: 192, offset: 576)
!6362 = !DIDerivedType(tag: DW_TAG_member, name: "f_pos", scope: !986, file: !639, line: 935, baseType: !824, size: 64, offset: 768)
!6363 = !DIDerivedType(tag: DW_TAG_member, name: "f_owner", scope: !986, file: !639, line: 936, baseType: !6364, size: 192, offset: 832)
!6364 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fown_struct", file: !639, line: 885, size: 192, elements: !6365)
!6365 = !{!6366, !6367, !6368, !6376, !6377, !6378}
!6366 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !6364, file: !639, line: 886, baseType: !2772)
!6367 = !DIDerivedType(tag: DW_TAG_member, name: "pid", scope: !6364, file: !639, line: 887, baseType: !1521, size: 64)
!6368 = !DIDerivedType(tag: DW_TAG_member, name: "pid_type", scope: !6364, file: !639, line: 888, baseType: !6369, size: 32, offset: 64)
!6369 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "pid_type", file: !1523, line: 9, baseType: !7, size: 32, elements: !6370)
!6370 = !{!6371, !6372, !6373, !6374, !6375}
!6371 = !DIEnumerator(name: "PIDTYPE_PID", value: 0, isUnsigned: true)
!6372 = !DIEnumerator(name: "PIDTYPE_TGID", value: 1, isUnsigned: true)
!6373 = !DIEnumerator(name: "PIDTYPE_PGID", value: 2, isUnsigned: true)
!6374 = !DIEnumerator(name: "PIDTYPE_SID", value: 3, isUnsigned: true)
!6375 = !DIEnumerator(name: "PIDTYPE_MAX", value: 4, isUnsigned: true)
!6376 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !6364, file: !639, line: 889, baseType: !649, size: 32, offset: 96)
!6377 = !DIDerivedType(tag: DW_TAG_member, name: "euid", scope: !6364, file: !639, line: 889, baseType: !649, size: 32, offset: 128)
!6378 = !DIDerivedType(tag: DW_TAG_member, name: "signum", scope: !6364, file: !639, line: 890, baseType: !37, size: 32, offset: 160)
!6379 = !DIDerivedType(tag: DW_TAG_member, name: "f_cred", scope: !986, file: !639, line: 937, baseType: !1592, size: 64, offset: 1024)
!6380 = !DIDerivedType(tag: DW_TAG_member, name: "f_ra", scope: !986, file: !639, line: 938, baseType: !6381, size: 256, offset: 1088)
!6381 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_ra_state", file: !639, line: 896, size: 256, elements: !6382)
!6382 = !{!6383, !6384, !6385, !6386, !6387, !6388}
!6383 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !6381, file: !639, line: 897, baseType: !317, size: 64)
!6384 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !6381, file: !639, line: 898, baseType: !7, size: 32, offset: 64)
!6385 = !DIDerivedType(tag: DW_TAG_member, name: "async_size", scope: !6381, file: !639, line: 899, baseType: !7, size: 32, offset: 96)
!6386 = !DIDerivedType(tag: DW_TAG_member, name: "ra_pages", scope: !6381, file: !639, line: 902, baseType: !7, size: 32, offset: 128)
!6387 = !DIDerivedType(tag: DW_TAG_member, name: "mmap_miss", scope: !6381, file: !639, line: 903, baseType: !7, size: 32, offset: 160)
!6388 = !DIDerivedType(tag: DW_TAG_member, name: "prev_pos", scope: !6381, file: !639, line: 904, baseType: !824, size: 64, offset: 192)
!6389 = !DIDerivedType(tag: DW_TAG_member, name: "f_version", scope: !986, file: !639, line: 940, baseType: !336, size: 64, offset: 1344)
!6390 = !DIDerivedType(tag: DW_TAG_member, name: "private_data", scope: !986, file: !639, line: 945, baseType: !570, size: 64, offset: 1408)
!6391 = !DIDerivedType(tag: DW_TAG_member, name: "f_ep_links", scope: !986, file: !639, line: 949, baseType: !289, size: 128, offset: 1472)
!6392 = !DIDerivedType(tag: DW_TAG_member, name: "f_tfile_llink", scope: !986, file: !639, line: 950, baseType: !289, size: 128, offset: 1600)
!6393 = !DIDerivedType(tag: DW_TAG_member, name: "f_mapping", scope: !986, file: !639, line: 952, baseType: !637, size: 64, offset: 1728)
!6394 = !DIDerivedType(tag: DW_TAG_member, name: "f_wb_err", scope: !986, file: !639, line: 953, baseType: !6395, size: 32, offset: 1792)
!6395 = !DIDerivedType(tag: DW_TAG_typedef, name: "errseq_t", file: !6396, line: 8, baseType: !707)
!6396 = !DIFile(filename: "./include/linux/errseq.h", directory: "/home/lizy2001/genbc/linux")
!6397 = !DIDerivedType(tag: DW_TAG_member, name: "f_sb_err", scope: !986, file: !639, line: 954, baseType: !6395, size: 32, offset: 1824)
!6398 = !DIDerivedType(tag: DW_TAG_member, name: "private", scope: !943, file: !944, line: 28, baseType: !570, size: 64, offset: 832)
!6399 = !DIDerivedType(tag: DW_TAG_member, name: "show_devname", scope: !875, file: !639, line: 1955, baseType: !939, size: 64, offset: 1088)
!6400 = !DIDerivedType(tag: DW_TAG_member, name: "show_path", scope: !875, file: !639, line: 1956, baseType: !939, size: 64, offset: 1152)
!6401 = !DIDerivedType(tag: DW_TAG_member, name: "show_stats", scope: !875, file: !639, line: 1957, baseType: !939, size: 64, offset: 1216)
!6402 = !DIDerivedType(tag: DW_TAG_member, name: "bdev_try_to_free_page", scope: !875, file: !639, line: 1963, baseType: !6403, size: 64, offset: 1280)
!6403 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6404, size: 64)
!6404 = !DISubroutineType(types: !6405)
!6405 = !{!37, !814, !624, !1990}
!6406 = !DIDerivedType(tag: DW_TAG_member, name: "nr_cached_objects", scope: !875, file: !639, line: 1964, baseType: !6407, size: 64, offset: 1344)
!6407 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6408, size: 64)
!6408 = !DISubroutineType(types: !6409)
!6409 = !{!513, !814, !6410}
!6410 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6411, size: 64)
!6411 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "shrink_control", file: !6412, line: 12, size: 256, elements: !6413)
!6412 = !DIFile(filename: "./include/linux/shrinker.h", directory: "/home/lizy2001/genbc/linux")
!6413 = !{!6414, !6415, !6416, !6417, !6418}
!6414 = !DIDerivedType(tag: DW_TAG_member, name: "gfp_mask", scope: !6411, file: !6412, line: 13, baseType: !1990, size: 32)
!6415 = !DIDerivedType(tag: DW_TAG_member, name: "nid", scope: !6411, file: !6412, line: 16, baseType: !37, size: 32, offset: 32)
!6416 = !DIDerivedType(tag: DW_TAG_member, name: "nr_to_scan", scope: !6411, file: !6412, line: 23, baseType: !317, size: 64, offset: 64)
!6417 = !DIDerivedType(tag: DW_TAG_member, name: "nr_scanned", scope: !6411, file: !6412, line: 30, baseType: !317, size: 64, offset: 128)
!6418 = !DIDerivedType(tag: DW_TAG_member, name: "memcg", scope: !6411, file: !6412, line: 33, baseType: !6419, size: 64, offset: 192)
!6419 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6420, size: 64)
!6420 = !DICompositeType(tag: DW_TAG_structure_type, name: "mem_cgroup", file: !626, line: 27, flags: DIFlagFwdDecl)
!6421 = !DIDerivedType(tag: DW_TAG_member, name: "free_cached_objects", scope: !875, file: !639, line: 1966, baseType: !6407, size: 64, offset: 1408)
!6422 = !DIDerivedType(tag: DW_TAG_member, name: "dq_op", scope: !815, file: !639, line: 1424, baseType: !6423, size: 64, offset: 448)
!6423 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6424, size: 64)
!6424 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6425)
!6425 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dquot_operations", file: !6426, line: 322, size: 704, elements: !6427)
!6426 = !DIFile(filename: "./include/linux/quota.h", directory: "/home/lizy2001/genbc/linux")
!6427 = !{!6428, !6479, !6483, !6487, !6488, !6489, !6490, !6491, !6496, !6501, !6505}
!6428 = !DIDerivedType(tag: DW_TAG_member, name: "write_dquot", scope: !6425, file: !6426, line: 323, baseType: !6429, size: 64)
!6429 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6430, size: 64)
!6430 = !DISubroutineType(types: !6431)
!6431 = !{!37, !6432}
!6432 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6433, size: 64)
!6433 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dquot", file: !6426, line: 294, size: 1600, elements: !6434)
!6434 = !{!6435, !6436, !6437, !6438, !6439, !6440, !6441, !6442, !6443, !6464, !6465, !6466}
!6435 = !DIDerivedType(tag: DW_TAG_member, name: "dq_hash", scope: !6433, file: !6426, line: 295, baseType: !281, size: 128)
!6436 = !DIDerivedType(tag: DW_TAG_member, name: "dq_inuse", scope: !6433, file: !6426, line: 296, baseType: !289, size: 128, offset: 128)
!6437 = !DIDerivedType(tag: DW_TAG_member, name: "dq_free", scope: !6433, file: !6426, line: 297, baseType: !289, size: 128, offset: 256)
!6438 = !DIDerivedType(tag: DW_TAG_member, name: "dq_dirty", scope: !6433, file: !6426, line: 298, baseType: !289, size: 128, offset: 384)
!6439 = !DIDerivedType(tag: DW_TAG_member, name: "dq_lock", scope: !6433, file: !6426, line: 299, baseType: !954, size: 192, offset: 512)
!6440 = !DIDerivedType(tag: DW_TAG_member, name: "dq_dqb_lock", scope: !6433, file: !6426, line: 300, baseType: !729, offset: 704)
!6441 = !DIDerivedType(tag: DW_TAG_member, name: "dq_count", scope: !6433, file: !6426, line: 301, baseType: !388, size: 32, offset: 704)
!6442 = !DIDerivedType(tag: DW_TAG_member, name: "dq_sb", scope: !6433, file: !6426, line: 302, baseType: !814, size: 64, offset: 768)
!6443 = !DIDerivedType(tag: DW_TAG_member, name: "dq_id", scope: !6433, file: !6426, line: 303, baseType: !6444, size: 64, offset: 832)
!6444 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kqid", file: !6426, line: 68, size: 64, elements: !6445)
!6445 = !{!6446, !6458}
!6446 = !DIDerivedType(tag: DW_TAG_member, scope: !6444, file: !6426, line: 69, baseType: !6447, size: 32)
!6447 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6444, file: !6426, line: 69, size: 32, elements: !6448)
!6448 = !{!6449, !6450, !6451}
!6449 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !6447, file: !6426, line: 70, baseType: !649, size: 32)
!6450 = !DIDerivedType(tag: DW_TAG_member, name: "gid", scope: !6447, file: !6426, line: 71, baseType: !657, size: 32)
!6451 = !DIDerivedType(tag: DW_TAG_member, name: "projid", scope: !6447, file: !6426, line: 72, baseType: !6452, size: 32)
!6452 = !DIDerivedType(tag: DW_TAG_typedef, name: "kprojid_t", file: !6453, line: 24, baseType: !6454)
!6453 = !DIFile(filename: "./include/linux/projid.h", directory: "/home/lizy2001/genbc/linux")
!6454 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !6453, line: 22, size: 32, elements: !6455)
!6455 = !{!6456}
!6456 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !6454, file: !6453, line: 23, baseType: !6457, size: 32)
!6457 = !DIDerivedType(tag: DW_TAG_typedef, name: "projid_t", file: !6453, line: 20, baseType: !655)
!6458 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !6444, file: !6426, line: 74, baseType: !6459, size: 32, offset: 32)
!6459 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "quota_type", file: !6426, line: 54, baseType: !7, size: 32, elements: !6460)
!6460 = !{!6461, !6462, !6463}
!6461 = !DIEnumerator(name: "USRQUOTA", value: 0, isUnsigned: true)
!6462 = !DIEnumerator(name: "GRPQUOTA", value: 1, isUnsigned: true)
!6463 = !DIEnumerator(name: "PRJQUOTA", value: 2, isUnsigned: true)
!6464 = !DIDerivedType(tag: DW_TAG_member, name: "dq_off", scope: !6433, file: !6426, line: 304, baseType: !824, size: 64, offset: 896)
!6465 = !DIDerivedType(tag: DW_TAG_member, name: "dq_flags", scope: !6433, file: !6426, line: 305, baseType: !317, size: 64, offset: 960)
!6466 = !DIDerivedType(tag: DW_TAG_member, name: "dq_dqb", scope: !6433, file: !6426, line: 306, baseType: !6467, size: 576, offset: 1024)
!6467 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mem_dqblk", file: !6426, line: 205, size: 576, elements: !6468)
!6468 = !{!6469, !6471, !6472, !6473, !6474, !6475, !6476, !6477, !6478}
!6469 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_bhardlimit", scope: !6467, file: !6426, line: 206, baseType: !6470, size: 64)
!6470 = !DIDerivedType(tag: DW_TAG_typedef, name: "qsize_t", file: !6426, line: 66, baseType: !384)
!6471 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_bsoftlimit", scope: !6467, file: !6426, line: 207, baseType: !6470, size: 64, offset: 64)
!6472 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_curspace", scope: !6467, file: !6426, line: 208, baseType: !6470, size: 64, offset: 128)
!6473 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_rsvspace", scope: !6467, file: !6426, line: 209, baseType: !6470, size: 64, offset: 192)
!6474 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_ihardlimit", scope: !6467, file: !6426, line: 210, baseType: !6470, size: 64, offset: 256)
!6475 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_isoftlimit", scope: !6467, file: !6426, line: 211, baseType: !6470, size: 64, offset: 320)
!6476 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_curinodes", scope: !6467, file: !6426, line: 212, baseType: !6470, size: 64, offset: 384)
!6477 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_btime", scope: !6467, file: !6426, line: 213, baseType: !1642, size: 64, offset: 448)
!6478 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_itime", scope: !6467, file: !6426, line: 214, baseType: !1642, size: 64, offset: 512)
!6479 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_dquot", scope: !6425, file: !6426, line: 324, baseType: !6480, size: 64, offset: 64)
!6480 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6481, size: 64)
!6481 = !DISubroutineType(types: !6482)
!6482 = !{!6432, !814, !37}
!6483 = !DIDerivedType(tag: DW_TAG_member, name: "destroy_dquot", scope: !6425, file: !6426, line: 325, baseType: !6484, size: 64, offset: 128)
!6484 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6485, size: 64)
!6485 = !DISubroutineType(types: !6486)
!6486 = !{null, !6432}
!6487 = !DIDerivedType(tag: DW_TAG_member, name: "acquire_dquot", scope: !6425, file: !6426, line: 326, baseType: !6429, size: 64, offset: 192)
!6488 = !DIDerivedType(tag: DW_TAG_member, name: "release_dquot", scope: !6425, file: !6426, line: 327, baseType: !6429, size: 64, offset: 256)
!6489 = !DIDerivedType(tag: DW_TAG_member, name: "mark_dirty", scope: !6425, file: !6426, line: 328, baseType: !6429, size: 64, offset: 320)
!6490 = !DIDerivedType(tag: DW_TAG_member, name: "write_info", scope: !6425, file: !6426, line: 329, baseType: !917, size: 64, offset: 384)
!6491 = !DIDerivedType(tag: DW_TAG_member, name: "get_reserved_space", scope: !6425, file: !6426, line: 332, baseType: !6492, size: 64, offset: 448)
!6492 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6493, size: 64)
!6493 = !DISubroutineType(types: !6494)
!6494 = !{!6495, !642}
!6495 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6470, size: 64)
!6496 = !DIDerivedType(tag: DW_TAG_member, name: "get_projid", scope: !6425, file: !6426, line: 333, baseType: !6497, size: 64, offset: 512)
!6497 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6498, size: 64)
!6498 = !DISubroutineType(types: !6499)
!6499 = !{!37, !642, !6500}
!6500 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6452, size: 64)
!6501 = !DIDerivedType(tag: DW_TAG_member, name: "get_inode_usage", scope: !6425, file: !6426, line: 335, baseType: !6502, size: 64, offset: 576)
!6502 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6503, size: 64)
!6503 = !DISubroutineType(types: !6504)
!6504 = !{!37, !642, !6495}
!6505 = !DIDerivedType(tag: DW_TAG_member, name: "get_next_id", scope: !6425, file: !6426, line: 337, baseType: !6506, size: 64, offset: 640)
!6506 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6507, size: 64)
!6507 = !DISubroutineType(types: !6508)
!6508 = !{!37, !814, !6509}
!6509 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6444, size: 64)
!6510 = !DIDerivedType(tag: DW_TAG_member, name: "s_qcop", scope: !815, file: !639, line: 1425, baseType: !6511, size: 64, offset: 512)
!6511 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6512, size: 64)
!6512 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6513)
!6513 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quotactl_ops", file: !6426, line: 428, size: 704, elements: !6514)
!6514 = !{!6515, !6519, !6520, !6524, !6525, !6526, !6541, !6564, !6568, !6569, !6592}
!6515 = !DIDerivedType(tag: DW_TAG_member, name: "quota_on", scope: !6513, file: !6426, line: 429, baseType: !6516, size: 64)
!6516 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6517, size: 64)
!6517 = !DISubroutineType(types: !6518)
!6518 = !{!37, !814, !37, !37, !805}
!6519 = !DIDerivedType(tag: DW_TAG_member, name: "quota_off", scope: !6513, file: !6426, line: 430, baseType: !917, size: 64, offset: 64)
!6520 = !DIDerivedType(tag: DW_TAG_member, name: "quota_enable", scope: !6513, file: !6426, line: 431, baseType: !6521, size: 64, offset: 128)
!6521 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6522, size: 64)
!6522 = !DISubroutineType(types: !6523)
!6523 = !{!37, !814, !7}
!6524 = !DIDerivedType(tag: DW_TAG_member, name: "quota_disable", scope: !6513, file: !6426, line: 432, baseType: !6521, size: 64, offset: 192)
!6525 = !DIDerivedType(tag: DW_TAG_member, name: "quota_sync", scope: !6513, file: !6426, line: 433, baseType: !917, size: 64, offset: 256)
!6526 = !DIDerivedType(tag: DW_TAG_member, name: "set_info", scope: !6513, file: !6426, line: 434, baseType: !6527, size: 64, offset: 320)
!6527 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6528, size: 64)
!6528 = !DISubroutineType(types: !6529)
!6529 = !{!37, !814, !37, !6530}
!6530 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6531, size: 64)
!6531 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "qc_info", file: !6426, line: 415, size: 256, elements: !6532)
!6532 = !{!6533, !6534, !6535, !6536, !6537, !6538, !6539, !6540}
!6533 = !DIDerivedType(tag: DW_TAG_member, name: "i_fieldmask", scope: !6531, file: !6426, line: 416, baseType: !37, size: 32)
!6534 = !DIDerivedType(tag: DW_TAG_member, name: "i_flags", scope: !6531, file: !6426, line: 417, baseType: !7, size: 32, offset: 32)
!6535 = !DIDerivedType(tag: DW_TAG_member, name: "i_spc_timelimit", scope: !6531, file: !6426, line: 418, baseType: !7, size: 32, offset: 64)
!6536 = !DIDerivedType(tag: DW_TAG_member, name: "i_ino_timelimit", scope: !6531, file: !6426, line: 420, baseType: !7, size: 32, offset: 96)
!6537 = !DIDerivedType(tag: DW_TAG_member, name: "i_rt_spc_timelimit", scope: !6531, file: !6426, line: 421, baseType: !7, size: 32, offset: 128)
!6538 = !DIDerivedType(tag: DW_TAG_member, name: "i_spc_warnlimit", scope: !6531, file: !6426, line: 422, baseType: !7, size: 32, offset: 160)
!6539 = !DIDerivedType(tag: DW_TAG_member, name: "i_ino_warnlimit", scope: !6531, file: !6426, line: 423, baseType: !7, size: 32, offset: 192)
!6540 = !DIDerivedType(tag: DW_TAG_member, name: "i_rt_spc_warnlimit", scope: !6531, file: !6426, line: 424, baseType: !7, size: 32, offset: 224)
!6541 = !DIDerivedType(tag: DW_TAG_member, name: "get_dqblk", scope: !6513, file: !6426, line: 435, baseType: !6542, size: 64, offset: 384)
!6542 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6543, size: 64)
!6543 = !DISubroutineType(types: !6544)
!6544 = !{!37, !814, !6444, !6545}
!6545 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6546, size: 64)
!6546 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "qc_dqblk", file: !6426, line: 343, size: 960, elements: !6547)
!6547 = !{!6548, !6549, !6550, !6551, !6552, !6553, !6554, !6555, !6556, !6557, !6558, !6559, !6560, !6561, !6562, !6563}
!6548 = !DIDerivedType(tag: DW_TAG_member, name: "d_fieldmask", scope: !6546, file: !6426, line: 344, baseType: !37, size: 32)
!6549 = !DIDerivedType(tag: DW_TAG_member, name: "d_spc_hardlimit", scope: !6546, file: !6426, line: 345, baseType: !336, size: 64, offset: 64)
!6550 = !DIDerivedType(tag: DW_TAG_member, name: "d_spc_softlimit", scope: !6546, file: !6426, line: 346, baseType: !336, size: 64, offset: 128)
!6551 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino_hardlimit", scope: !6546, file: !6426, line: 347, baseType: !336, size: 64, offset: 192)
!6552 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino_softlimit", scope: !6546, file: !6426, line: 348, baseType: !336, size: 64, offset: 256)
!6553 = !DIDerivedType(tag: DW_TAG_member, name: "d_space", scope: !6546, file: !6426, line: 349, baseType: !336, size: 64, offset: 320)
!6554 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino_count", scope: !6546, file: !6426, line: 350, baseType: !336, size: 64, offset: 384)
!6555 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino_timer", scope: !6546, file: !6426, line: 351, baseType: !382, size: 64, offset: 448)
!6556 = !DIDerivedType(tag: DW_TAG_member, name: "d_spc_timer", scope: !6546, file: !6426, line: 353, baseType: !382, size: 64, offset: 512)
!6557 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino_warns", scope: !6546, file: !6426, line: 354, baseType: !37, size: 32, offset: 576)
!6558 = !DIDerivedType(tag: DW_TAG_member, name: "d_spc_warns", scope: !6546, file: !6426, line: 355, baseType: !37, size: 32, offset: 608)
!6559 = !DIDerivedType(tag: DW_TAG_member, name: "d_rt_spc_hardlimit", scope: !6546, file: !6426, line: 356, baseType: !336, size: 64, offset: 640)
!6560 = !DIDerivedType(tag: DW_TAG_member, name: "d_rt_spc_softlimit", scope: !6546, file: !6426, line: 357, baseType: !336, size: 64, offset: 704)
!6561 = !DIDerivedType(tag: DW_TAG_member, name: "d_rt_space", scope: !6546, file: !6426, line: 358, baseType: !336, size: 64, offset: 768)
!6562 = !DIDerivedType(tag: DW_TAG_member, name: "d_rt_spc_timer", scope: !6546, file: !6426, line: 359, baseType: !382, size: 64, offset: 832)
!6563 = !DIDerivedType(tag: DW_TAG_member, name: "d_rt_spc_warns", scope: !6546, file: !6426, line: 360, baseType: !37, size: 32, offset: 896)
!6564 = !DIDerivedType(tag: DW_TAG_member, name: "get_nextdqblk", scope: !6513, file: !6426, line: 436, baseType: !6565, size: 64, offset: 448)
!6565 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6566, size: 64)
!6566 = !DISubroutineType(types: !6567)
!6567 = !{!37, !814, !6509, !6545}
!6568 = !DIDerivedType(tag: DW_TAG_member, name: "set_dqblk", scope: !6513, file: !6426, line: 438, baseType: !6542, size: 64, offset: 512)
!6569 = !DIDerivedType(tag: DW_TAG_member, name: "get_state", scope: !6513, file: !6426, line: 439, baseType: !6570, size: 64, offset: 576)
!6570 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6571, size: 64)
!6571 = !DISubroutineType(types: !6572)
!6572 = !{!37, !814, !6573}
!6573 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6574, size: 64)
!6574 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "qc_state", file: !6426, line: 409, size: 1408, elements: !6575)
!6575 = !{!6576, !6577}
!6576 = !DIDerivedType(tag: DW_TAG_member, name: "s_incoredqs", scope: !6574, file: !6426, line: 410, baseType: !7, size: 32)
!6577 = !DIDerivedType(tag: DW_TAG_member, name: "s_state", scope: !6574, file: !6426, line: 411, baseType: !6578, size: 1344, offset: 64)
!6578 = !DICompositeType(tag: DW_TAG_array_type, baseType: !6579, size: 1344, elements: !867)
!6579 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "qc_type_state", file: !6426, line: 395, size: 448, elements: !6580)
!6580 = !{!6581, !6582, !6583, !6584, !6585, !6586, !6587, !6588, !6589, !6591}
!6581 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !6579, file: !6426, line: 396, baseType: !7, size: 32)
!6582 = !DIDerivedType(tag: DW_TAG_member, name: "spc_timelimit", scope: !6579, file: !6426, line: 397, baseType: !7, size: 32, offset: 32)
!6583 = !DIDerivedType(tag: DW_TAG_member, name: "ino_timelimit", scope: !6579, file: !6426, line: 399, baseType: !7, size: 32, offset: 64)
!6584 = !DIDerivedType(tag: DW_TAG_member, name: "rt_spc_timelimit", scope: !6579, file: !6426, line: 400, baseType: !7, size: 32, offset: 96)
!6585 = !DIDerivedType(tag: DW_TAG_member, name: "spc_warnlimit", scope: !6579, file: !6426, line: 401, baseType: !7, size: 32, offset: 128)
!6586 = !DIDerivedType(tag: DW_TAG_member, name: "ino_warnlimit", scope: !6579, file: !6426, line: 402, baseType: !7, size: 32, offset: 160)
!6587 = !DIDerivedType(tag: DW_TAG_member, name: "rt_spc_warnlimit", scope: !6579, file: !6426, line: 403, baseType: !7, size: 32, offset: 192)
!6588 = !DIDerivedType(tag: DW_TAG_member, name: "ino", scope: !6579, file: !6426, line: 404, baseType: !340, size: 64, offset: 256)
!6589 = !DIDerivedType(tag: DW_TAG_member, name: "blocks", scope: !6579, file: !6426, line: 405, baseType: !6590, size: 64, offset: 320)
!6590 = !DIDerivedType(tag: DW_TAG_typedef, name: "blkcnt_t", file: !282, line: 126, baseType: !336)
!6591 = !DIDerivedType(tag: DW_TAG_member, name: "nextents", scope: !6579, file: !6426, line: 406, baseType: !6590, size: 64, offset: 384)
!6592 = !DIDerivedType(tag: DW_TAG_member, name: "rm_xquota", scope: !6513, file: !6426, line: 440, baseType: !6521, size: 64, offset: 640)
!6593 = !DIDerivedType(tag: DW_TAG_member, name: "s_export_op", scope: !815, file: !639, line: 1426, baseType: !6594, size: 64, offset: 576)
!6594 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6595, size: 64)
!6595 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6596)
!6596 = !DICompositeType(tag: DW_TAG_structure_type, name: "export_operations", file: !639, line: 49, flags: DIFlagFwdDecl)
!6597 = !DIDerivedType(tag: DW_TAG_member, name: "s_flags", scope: !815, file: !639, line: 1427, baseType: !317, size: 64, offset: 640)
!6598 = !DIDerivedType(tag: DW_TAG_member, name: "s_iflags", scope: !815, file: !639, line: 1428, baseType: !317, size: 64, offset: 704)
!6599 = !DIDerivedType(tag: DW_TAG_member, name: "s_magic", scope: !815, file: !639, line: 1429, baseType: !317, size: 64, offset: 768)
!6600 = !DIDerivedType(tag: DW_TAG_member, name: "s_root", scope: !815, file: !639, line: 1430, baseType: !673, size: 64, offset: 832)
!6601 = !DIDerivedType(tag: DW_TAG_member, name: "s_umount", scope: !815, file: !639, line: 1431, baseType: !1162, size: 256, offset: 896)
!6602 = !DIDerivedType(tag: DW_TAG_member, name: "s_count", scope: !815, file: !639, line: 1432, baseType: !37, size: 32, offset: 1152)
!6603 = !DIDerivedType(tag: DW_TAG_member, name: "s_active", scope: !815, file: !639, line: 1433, baseType: !388, size: 32, offset: 1184)
!6604 = !DIDerivedType(tag: DW_TAG_member, name: "s_xattr", scope: !815, file: !639, line: 1437, baseType: !6605, size: 64, offset: 1216)
!6605 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6606, size: 64)
!6606 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6607, size: 64)
!6607 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6608)
!6608 = !DICompositeType(tag: DW_TAG_structure_type, name: "xattr_handler", file: !639, line: 1437, flags: DIFlagFwdDecl)
!6609 = !DIDerivedType(tag: DW_TAG_member, name: "s_roots", scope: !815, file: !639, line: 1449, baseType: !6610, size: 64, offset: 1280)
!6610 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hlist_bl_head", file: !690, line: 34, size: 64, elements: !6611)
!6611 = !{!6612}
!6612 = !DIDerivedType(tag: DW_TAG_member, name: "first", scope: !6610, file: !690, line: 35, baseType: !693, size: 64)
!6613 = !DIDerivedType(tag: DW_TAG_member, name: "s_mounts", scope: !815, file: !639, line: 1450, baseType: !289, size: 128, offset: 1344)
!6614 = !DIDerivedType(tag: DW_TAG_member, name: "s_bdev", scope: !815, file: !639, line: 1451, baseType: !5012, size: 64, offset: 1472)
!6615 = !DIDerivedType(tag: DW_TAG_member, name: "s_bdi", scope: !815, file: !639, line: 1452, baseType: !5032, size: 64, offset: 1536)
!6616 = !DIDerivedType(tag: DW_TAG_member, name: "s_mtd", scope: !815, file: !639, line: 1453, baseType: !6617, size: 64, offset: 1600)
!6617 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6618, size: 64)
!6618 = !DICompositeType(tag: DW_TAG_structure_type, name: "mtd_info", file: !639, line: 1453, flags: DIFlagFwdDecl)
!6619 = !DIDerivedType(tag: DW_TAG_member, name: "s_instances", scope: !815, file: !639, line: 1454, baseType: !281, size: 128, offset: 1664)
!6620 = !DIDerivedType(tag: DW_TAG_member, name: "s_quota_types", scope: !815, file: !639, line: 1455, baseType: !7, size: 32, offset: 1792)
!6621 = !DIDerivedType(tag: DW_TAG_member, name: "s_dquot", scope: !815, file: !639, line: 1456, baseType: !6622, size: 2432, offset: 1856)
!6622 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quota_info", file: !6426, line: 518, size: 2432, elements: !6623)
!6623 = !{!6624, !6625, !6626, !6628, !6660}
!6624 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !6622, file: !6426, line: 519, baseType: !7, size: 32)
!6625 = !DIDerivedType(tag: DW_TAG_member, name: "dqio_sem", scope: !6622, file: !6426, line: 520, baseType: !1162, size: 256, offset: 64)
!6626 = !DIDerivedType(tag: DW_TAG_member, name: "files", scope: !6622, file: !6426, line: 521, baseType: !6627, size: 192, offset: 320)
!6627 = !DICompositeType(tag: DW_TAG_array_type, baseType: !642, size: 192, elements: !867)
!6628 = !DIDerivedType(tag: DW_TAG_member, name: "info", scope: !6622, file: !6426, line: 522, baseType: !6629, size: 1728, offset: 512)
!6629 = !DICompositeType(tag: DW_TAG_array_type, baseType: !6630, size: 1728, elements: !867)
!6630 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mem_dqinfo", file: !6426, line: 222, size: 576, elements: !6631)
!6631 = !{!6632, !6652, !6653, !6654, !6655, !6656, !6657, !6658, !6659}
!6632 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_format", scope: !6630, file: !6426, line: 223, baseType: !6633, size: 64)
!6633 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6634, size: 64)
!6634 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quota_format_type", file: !6426, line: 443, size: 256, elements: !6635)
!6635 = !{!6636, !6637, !6650, !6651}
!6636 = !DIDerivedType(tag: DW_TAG_member, name: "qf_fmt_id", scope: !6634, file: !6426, line: 444, baseType: !37, size: 32)
!6637 = !DIDerivedType(tag: DW_TAG_member, name: "qf_ops", scope: !6634, file: !6426, line: 445, baseType: !6638, size: 64, offset: 64)
!6638 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6639, size: 64)
!6639 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6640)
!6640 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quota_format_ops", file: !6426, line: 310, size: 512, elements: !6641)
!6641 = !{!6642, !6643, !6644, !6645, !6646, !6647, !6648, !6649}
!6642 = !DIDerivedType(tag: DW_TAG_member, name: "check_quota_file", scope: !6640, file: !6426, line: 311, baseType: !917, size: 64)
!6643 = !DIDerivedType(tag: DW_TAG_member, name: "read_file_info", scope: !6640, file: !6426, line: 312, baseType: !917, size: 64, offset: 64)
!6644 = !DIDerivedType(tag: DW_TAG_member, name: "write_file_info", scope: !6640, file: !6426, line: 313, baseType: !917, size: 64, offset: 128)
!6645 = !DIDerivedType(tag: DW_TAG_member, name: "free_file_info", scope: !6640, file: !6426, line: 314, baseType: !917, size: 64, offset: 192)
!6646 = !DIDerivedType(tag: DW_TAG_member, name: "read_dqblk", scope: !6640, file: !6426, line: 315, baseType: !6429, size: 64, offset: 256)
!6647 = !DIDerivedType(tag: DW_TAG_member, name: "commit_dqblk", scope: !6640, file: !6426, line: 316, baseType: !6429, size: 64, offset: 320)
!6648 = !DIDerivedType(tag: DW_TAG_member, name: "release_dqblk", scope: !6640, file: !6426, line: 317, baseType: !6429, size: 64, offset: 384)
!6649 = !DIDerivedType(tag: DW_TAG_member, name: "get_next_id", scope: !6640, file: !6426, line: 318, baseType: !6506, size: 64, offset: 448)
!6650 = !DIDerivedType(tag: DW_TAG_member, name: "qf_owner", scope: !6634, file: !6426, line: 446, baseType: !852, size: 64, offset: 128)
!6651 = !DIDerivedType(tag: DW_TAG_member, name: "qf_next", scope: !6634, file: !6426, line: 447, baseType: !6633, size: 64, offset: 192)
!6652 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_fmt_id", scope: !6630, file: !6426, line: 224, baseType: !37, size: 32, offset: 64)
!6653 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_dirty_list", scope: !6630, file: !6426, line: 226, baseType: !289, size: 128, offset: 128)
!6654 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_flags", scope: !6630, file: !6426, line: 227, baseType: !317, size: 64, offset: 256)
!6655 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_bgrace", scope: !6630, file: !6426, line: 228, baseType: !7, size: 32, offset: 320)
!6656 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_igrace", scope: !6630, file: !6426, line: 229, baseType: !7, size: 32, offset: 352)
!6657 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_max_spc_limit", scope: !6630, file: !6426, line: 230, baseType: !6470, size: 64, offset: 384)
!6658 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_max_ino_limit", scope: !6630, file: !6426, line: 231, baseType: !6470, size: 64, offset: 448)
!6659 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_priv", scope: !6630, file: !6426, line: 232, baseType: !570, size: 64, offset: 512)
!6660 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !6622, file: !6426, line: 523, baseType: !6661, size: 192, offset: 2240)
!6661 = !DICompositeType(tag: DW_TAG_array_type, baseType: !6638, size: 192, elements: !867)
!6662 = !DIDerivedType(tag: DW_TAG_member, name: "s_writers", scope: !815, file: !639, line: 1458, baseType: !6663, size: 2112, offset: 4288)
!6663 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sb_writers", file: !639, line: 1410, size: 2112, elements: !6664)
!6664 = !{!6665, !6666, !6667}
!6665 = !DIDerivedType(tag: DW_TAG_member, name: "frozen", scope: !6663, file: !639, line: 1411, baseType: !37, size: 32)
!6666 = !DIDerivedType(tag: DW_TAG_member, name: "wait_unfrozen", scope: !6663, file: !639, line: 1412, baseType: !1100, size: 128, offset: 64)
!6667 = !DIDerivedType(tag: DW_TAG_member, name: "rw_sem", scope: !6663, file: !639, line: 1413, baseType: !6668, size: 1920, offset: 192)
!6668 = !DICompositeType(tag: DW_TAG_array_type, baseType: !6669, size: 1920, elements: !867)
!6669 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "percpu_rw_semaphore", file: !6670, line: 12, size: 640, elements: !6671)
!6670 = !DIFile(filename: "./include/linux/percpu-rwsem.h", directory: "/home/lizy2001/genbc/linux")
!6671 = !{!6672, !6680, !6681, !6686, !6687}
!6672 = !DIDerivedType(tag: DW_TAG_member, name: "rss", scope: !6669, file: !6670, line: 13, baseType: !6673, size: 320)
!6673 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rcu_sync", file: !6674, line: 17, size: 320, elements: !6675)
!6674 = !DIFile(filename: "./include/linux/rcu_sync.h", directory: "/home/lizy2001/genbc/linux")
!6675 = !{!6676, !6677, !6678, !6679}
!6676 = !DIDerivedType(tag: DW_TAG_member, name: "gp_state", scope: !6673, file: !6674, line: 18, baseType: !37, size: 32)
!6677 = !DIDerivedType(tag: DW_TAG_member, name: "gp_count", scope: !6673, file: !6674, line: 19, baseType: !37, size: 32, offset: 32)
!6678 = !DIDerivedType(tag: DW_TAG_member, name: "gp_wait", scope: !6673, file: !6674, line: 20, baseType: !1100, size: 128, offset: 64)
!6679 = !DIDerivedType(tag: DW_TAG_member, name: "cb_head", scope: !6673, file: !6674, line: 22, baseType: !304, size: 128, align: 64, offset: 192)
!6680 = !DIDerivedType(tag: DW_TAG_member, name: "read_count", scope: !6669, file: !6670, line: 14, baseType: !4628, size: 64, offset: 320)
!6681 = !DIDerivedType(tag: DW_TAG_member, name: "writer", scope: !6669, file: !6670, line: 15, baseType: !6682, size: 64, offset: 384)
!6682 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rcuwait", file: !6683, line: 16, size: 64, elements: !6684)
!6683 = !DIFile(filename: "./include/linux/rcuwait.h", directory: "/home/lizy2001/genbc/linux")
!6684 = !{!6685}
!6685 = !DIDerivedType(tag: DW_TAG_member, name: "task", scope: !6682, file: !6683, line: 17, baseType: !1257, size: 64)
!6686 = !DIDerivedType(tag: DW_TAG_member, name: "waiters", scope: !6669, file: !6670, line: 16, baseType: !1100, size: 128, offset: 448)
!6687 = !DIDerivedType(tag: DW_TAG_member, name: "block", scope: !6669, file: !6670, line: 17, baseType: !388, size: 32, offset: 576)
!6688 = !DIDerivedType(tag: DW_TAG_member, name: "s_fs_info", scope: !815, file: !639, line: 1465, baseType: !570, size: 64, offset: 6400)
!6689 = !DIDerivedType(tag: DW_TAG_member, name: "s_time_gran", scope: !815, file: !639, line: 1468, baseType: !707, size: 32, offset: 6464)
!6690 = !DIDerivedType(tag: DW_TAG_member, name: "s_time_min", scope: !815, file: !639, line: 1470, baseType: !1642, size: 64, offset: 6528)
!6691 = !DIDerivedType(tag: DW_TAG_member, name: "s_time_max", scope: !815, file: !639, line: 1471, baseType: !1642, size: 64, offset: 6592)
!6692 = !DIDerivedType(tag: DW_TAG_member, name: "s_fsnotify_mask", scope: !815, file: !639, line: 1473, baseType: !468, size: 32, offset: 6656)
!6693 = !DIDerivedType(tag: DW_TAG_member, name: "s_fsnotify_marks", scope: !815, file: !639, line: 1474, baseType: !6694, size: 64, offset: 6720)
!6694 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6695, size: 64)
!6695 = !DICompositeType(tag: DW_TAG_structure_type, name: "fsnotify_mark_connector", file: !639, line: 603, flags: DIFlagFwdDecl)
!6696 = !DIDerivedType(tag: DW_TAG_member, name: "s_id", scope: !815, file: !639, line: 1477, baseType: !3761, size: 256, offset: 6784)
!6697 = !DIDerivedType(tag: DW_TAG_member, name: "s_uuid", scope: !815, file: !639, line: 1478, baseType: !6698, size: 128, offset: 7040)
!6698 = !DIDerivedType(tag: DW_TAG_typedef, name: "uuid_t", file: !6699, line: 18, baseType: !6700)
!6699 = !DIFile(filename: "./include/linux/uuid.h", directory: "/home/lizy2001/genbc/linux")
!6700 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !6699, line: 16, size: 128, elements: !6701)
!6701 = !{!6702}
!6702 = !DIDerivedType(tag: DW_TAG_member, name: "b", scope: !6700, file: !6699, line: 17, baseType: !2211, size: 128)
!6703 = !DIDerivedType(tag: DW_TAG_member, name: "s_max_links", scope: !815, file: !639, line: 1480, baseType: !7, size: 32, offset: 7168)
!6704 = !DIDerivedType(tag: DW_TAG_member, name: "s_mode", scope: !815, file: !639, line: 1481, baseType: !5102, size: 32, offset: 7200)
!6705 = !DIDerivedType(tag: DW_TAG_member, name: "s_vfs_rename_mutex", scope: !815, file: !639, line: 1487, baseType: !954, size: 192, offset: 7232)
!6706 = !DIDerivedType(tag: DW_TAG_member, name: "s_subtype", scope: !815, file: !639, line: 1493, baseType: !297, size: 64, offset: 7424)
!6707 = !DIDerivedType(tag: DW_TAG_member, name: "s_d_op", scope: !815, file: !639, line: 1495, baseType: !746, size: 64, offset: 7488)
!6708 = !DIDerivedType(tag: DW_TAG_member, name: "cleancache_poolid", scope: !815, file: !639, line: 1500, baseType: !37, size: 32, offset: 7552)
!6709 = !DIDerivedType(tag: DW_TAG_member, name: "s_shrink", scope: !815, file: !639, line: 1502, baseType: !6710, size: 448, offset: 7616)
!6710 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "shrinker", file: !6412, line: 60, size: 448, elements: !6711)
!6711 = !{!6712, !6717, !6718, !6719, !6720, !6721, !6722}
!6712 = !DIDerivedType(tag: DW_TAG_member, name: "count_objects", scope: !6710, file: !6412, line: 61, baseType: !6713, size: 64)
!6713 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6714, size: 64)
!6714 = !DISubroutineType(types: !6715)
!6715 = !{!317, !6716, !6410}
!6716 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6710, size: 64)
!6717 = !DIDerivedType(tag: DW_TAG_member, name: "scan_objects", scope: !6710, file: !6412, line: 63, baseType: !6713, size: 64, offset: 64)
!6718 = !DIDerivedType(tag: DW_TAG_member, name: "batch", scope: !6710, file: !6412, line: 66, baseType: !513, size: 64, offset: 128)
!6719 = !DIDerivedType(tag: DW_TAG_member, name: "seeks", scope: !6710, file: !6412, line: 67, baseType: !37, size: 32, offset: 192)
!6720 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !6710, file: !6412, line: 68, baseType: !7, size: 32, offset: 224)
!6721 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !6710, file: !6412, line: 71, baseType: !289, size: 128, offset: 256)
!6722 = !DIDerivedType(tag: DW_TAG_member, name: "nr_deferred", scope: !6710, file: !6412, line: 77, baseType: !6723, size: 64, offset: 384)
!6723 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !376, size: 64)
!6724 = !DIDerivedType(tag: DW_TAG_member, name: "s_remove_count", scope: !815, file: !639, line: 1505, baseType: !376, size: 64, offset: 8064)
!6725 = !DIDerivedType(tag: DW_TAG_member, name: "s_fsnotify_inode_refs", scope: !815, file: !639, line: 1508, baseType: !376, size: 64, offset: 8128)
!6726 = !DIDerivedType(tag: DW_TAG_member, name: "s_readonly_remount", scope: !815, file: !639, line: 1511, baseType: !37, size: 32, offset: 8192)
!6727 = !DIDerivedType(tag: DW_TAG_member, name: "s_wb_err", scope: !815, file: !639, line: 1514, baseType: !6395, size: 32, offset: 8224)
!6728 = !DIDerivedType(tag: DW_TAG_member, name: "s_dio_done_wq", scope: !815, file: !639, line: 1517, baseType: !2757, size: 64, offset: 8256)
!6729 = !DIDerivedType(tag: DW_TAG_member, name: "s_pins", scope: !815, file: !639, line: 1518, baseType: !857, size: 64, offset: 8320)
!6730 = !DIDerivedType(tag: DW_TAG_member, name: "s_user_ns", scope: !815, file: !639, line: 1525, baseType: !1759, size: 64, offset: 8384)
!6731 = !DIDerivedType(tag: DW_TAG_member, name: "s_dentry_lru", scope: !815, file: !639, line: 1532, baseType: !6732, size: 64, offset: 8448)
!6732 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "list_lru", file: !6733, line: 52, size: 64, elements: !6734)
!6733 = !DIFile(filename: "./include/linux/list_lru.h", directory: "/home/lizy2001/genbc/linux")
!6734 = !{!6735}
!6735 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !6732, file: !6733, line: 53, baseType: !6736, size: 64)
!6736 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6737, size: 64)
!6737 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "list_lru_node", file: !6733, line: 40, size: 256, elements: !6738)
!6738 = !{!6739, !6740, !6745}
!6739 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !6737, file: !6733, line: 42, baseType: !729)
!6740 = !DIDerivedType(tag: DW_TAG_member, name: "lru", scope: !6737, file: !6733, line: 44, baseType: !6741, size: 192)
!6741 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "list_lru_one", file: !6733, line: 28, size: 192, elements: !6742)
!6742 = !{!6743, !6744}
!6743 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !6741, file: !6733, line: 29, baseType: !289, size: 128)
!6744 = !DIDerivedType(tag: DW_TAG_member, name: "nr_items", scope: !6741, file: !6733, line: 31, baseType: !513, size: 64, offset: 128)
!6745 = !DIDerivedType(tag: DW_TAG_member, name: "nr_items", scope: !6737, file: !6733, line: 49, baseType: !513, size: 64, offset: 192)
!6746 = !DIDerivedType(tag: DW_TAG_member, name: "s_inode_lru", scope: !815, file: !639, line: 1533, baseType: !6732, size: 64, offset: 8512)
!6747 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !815, file: !639, line: 1534, baseType: !304, size: 128, align: 64, offset: 8576)
!6748 = !DIDerivedType(tag: DW_TAG_member, name: "destroy_work", scope: !815, file: !639, line: 1535, baseType: !1807, size: 256, offset: 8704)
!6749 = !DIDerivedType(tag: DW_TAG_member, name: "s_sync_lock", scope: !815, file: !639, line: 1537, baseType: !954, size: 192, offset: 8960)
!6750 = !DIDerivedType(tag: DW_TAG_member, name: "s_stack_depth", scope: !815, file: !639, line: 1542, baseType: !37, size: 32, offset: 9152)
!6751 = !DIDerivedType(tag: DW_TAG_member, name: "s_inode_list_lock", scope: !815, file: !639, line: 1545, baseType: !729, offset: 9184)
!6752 = !DIDerivedType(tag: DW_TAG_member, name: "s_inodes", scope: !815, file: !639, line: 1546, baseType: !289, size: 128, offset: 9216)
!6753 = !DIDerivedType(tag: DW_TAG_member, name: "s_inode_wblist_lock", scope: !815, file: !639, line: 1548, baseType: !729, offset: 9344)
!6754 = !DIDerivedType(tag: DW_TAG_member, name: "s_inodes_wb", scope: !815, file: !639, line: 1549, baseType: !289, size: 128, offset: 9344)
!6755 = !DIDerivedType(tag: DW_TAG_member, name: "d_time", scope: !674, file: !675, line: 104, baseType: !317, size: 64, offset: 896)
!6756 = !DIDerivedType(tag: DW_TAG_member, name: "d_fsdata", scope: !674, file: !675, line: 105, baseType: !570, size: 64, offset: 960)
!6757 = !DIDerivedType(tag: DW_TAG_member, scope: !674, file: !675, line: 107, baseType: !6758, size: 128, offset: 1024)
!6758 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !674, file: !675, line: 107, size: 128, elements: !6759)
!6759 = !{!6760, !6761}
!6760 = !DIDerivedType(tag: DW_TAG_member, name: "d_lru", scope: !6758, file: !675, line: 108, baseType: !289, size: 128)
!6761 = !DIDerivedType(tag: DW_TAG_member, name: "d_wait", scope: !6758, file: !675, line: 109, baseType: !1099, size: 64)
!6762 = !DIDerivedType(tag: DW_TAG_member, name: "d_child", scope: !674, file: !675, line: 111, baseType: !289, size: 128, offset: 1152)
!6763 = !DIDerivedType(tag: DW_TAG_member, name: "d_subdirs", scope: !674, file: !675, line: 112, baseType: !289, size: 128, offset: 1280)
!6764 = !DIDerivedType(tag: DW_TAG_member, name: "d_u", scope: !674, file: !675, line: 120, baseType: !6765, size: 128, offset: 1408)
!6765 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !674, file: !675, line: 116, size: 128, elements: !6766)
!6766 = !{!6767, !6768, !6769}
!6767 = !DIDerivedType(tag: DW_TAG_member, name: "d_alias", scope: !6765, file: !675, line: 117, baseType: !281, size: 128)
!6768 = !DIDerivedType(tag: DW_TAG_member, name: "d_in_lookup_hash", scope: !6765, file: !675, line: 118, baseType: !689, size: 128)
!6769 = !DIDerivedType(tag: DW_TAG_member, name: "d_rcu", scope: !6765, file: !675, line: 119, baseType: !304, size: 128, align: 64)
!6770 = !DIDerivedType(tag: DW_TAG_member, name: "get_link", scope: !667, file: !639, line: 1866, baseType: !6771, size: 64, offset: 64)
!6771 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6772, size: 64)
!6772 = !DISubroutineType(types: !6773)
!6773 = !{!297, !673, !642, !6774}
!6774 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6775, size: 64)
!6775 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "delayed_call", file: !6776, line: 10, size: 128, elements: !6777)
!6776 = !DIFile(filename: "./include/linux/delayed_call.h", directory: "/home/lizy2001/genbc/linux")
!6777 = !{!6778, !6779}
!6778 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !6775, file: !6776, line: 11, baseType: !3290, size: 64)
!6779 = !DIDerivedType(tag: DW_TAG_member, name: "arg", scope: !6775, file: !6776, line: 12, baseType: !570, size: 64, offset: 64)
!6780 = !DIDerivedType(tag: DW_TAG_member, name: "permission", scope: !667, file: !639, line: 1867, baseType: !6781, size: 64, offset: 128)
!6781 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6782, size: 64)
!6782 = !DISubroutineType(types: !6783)
!6783 = !{!37, !642, !37}
!6784 = !DIDerivedType(tag: DW_TAG_member, name: "get_acl", scope: !667, file: !639, line: 1868, baseType: !6785, size: 64, offset: 192)
!6785 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6786, size: 64)
!6786 = !DISubroutineType(types: !6787)
!6787 = !{!6788, !642, !37}
!6788 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6789, size: 64)
!6789 = !DICompositeType(tag: DW_TAG_structure_type, name: "posix_acl", file: !639, line: 581, flags: DIFlagFwdDecl)
!6790 = !DIDerivedType(tag: DW_TAG_member, name: "readlink", scope: !667, file: !639, line: 1870, baseType: !6791, size: 64, offset: 256)
!6791 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6792, size: 64)
!6792 = !DISubroutineType(types: !6793)
!6793 = !{!37, !673, !577, !37}
!6794 = !DIDerivedType(tag: DW_TAG_member, name: "create", scope: !667, file: !639, line: 1872, baseType: !6795, size: 64, offset: 320)
!6795 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6796, size: 64)
!6796 = !DISubroutineType(types: !6797)
!6797 = !{!37, !642, !673, !646, !540}
!6798 = !DIDerivedType(tag: DW_TAG_member, name: "link", scope: !667, file: !639, line: 1873, baseType: !6799, size: 64, offset: 384)
!6799 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6800, size: 64)
!6800 = !DISubroutineType(types: !6801)
!6801 = !{!37, !673, !642, !673}
!6802 = !DIDerivedType(tag: DW_TAG_member, name: "unlink", scope: !667, file: !639, line: 1874, baseType: !6803, size: 64, offset: 448)
!6803 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6804, size: 64)
!6804 = !DISubroutineType(types: !6805)
!6805 = !{!37, !642, !673}
!6806 = !DIDerivedType(tag: DW_TAG_member, name: "symlink", scope: !667, file: !639, line: 1875, baseType: !6807, size: 64, offset: 512)
!6807 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6808, size: 64)
!6808 = !DISubroutineType(types: !6809)
!6809 = !{!37, !642, !673, !297}
!6810 = !DIDerivedType(tag: DW_TAG_member, name: "mkdir", scope: !667, file: !639, line: 1876, baseType: !6811, size: 64, offset: 576)
!6811 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6812, size: 64)
!6812 = !DISubroutineType(types: !6813)
!6813 = !{!37, !642, !673, !646}
!6814 = !DIDerivedType(tag: DW_TAG_member, name: "rmdir", scope: !667, file: !639, line: 1877, baseType: !6803, size: 64, offset: 640)
!6815 = !DIDerivedType(tag: DW_TAG_member, name: "mknod", scope: !667, file: !639, line: 1878, baseType: !6816, size: 64, offset: 704)
!6816 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6817, size: 64)
!6817 = !DISubroutineType(types: !6818)
!6818 = !{!37, !642, !673, !646, !819}
!6819 = !DIDerivedType(tag: DW_TAG_member, name: "rename", scope: !667, file: !639, line: 1879, baseType: !6820, size: 64, offset: 768)
!6820 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6821, size: 64)
!6821 = !DISubroutineType(types: !6822)
!6822 = !{!37, !642, !673, !642, !673, !7}
!6823 = !DIDerivedType(tag: DW_TAG_member, name: "setattr", scope: !667, file: !639, line: 1881, baseType: !6824, size: 64, offset: 832)
!6824 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6825, size: 64)
!6825 = !DISubroutineType(types: !6826)
!6826 = !{!37, !673, !6827}
!6827 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6828, size: 64)
!6828 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "iattr", file: !639, line: 219, size: 640, elements: !6829)
!6829 = !{!6830, !6831, !6832, !6833, !6834, !6835, !6840, !6841, !6842}
!6830 = !DIDerivedType(tag: DW_TAG_member, name: "ia_valid", scope: !6828, file: !639, line: 220, baseType: !7, size: 32)
!6831 = !DIDerivedType(tag: DW_TAG_member, name: "ia_mode", scope: !6828, file: !639, line: 221, baseType: !646, size: 16, offset: 32)
!6832 = !DIDerivedType(tag: DW_TAG_member, name: "ia_uid", scope: !6828, file: !639, line: 222, baseType: !649, size: 32, offset: 64)
!6833 = !DIDerivedType(tag: DW_TAG_member, name: "ia_gid", scope: !6828, file: !639, line: 223, baseType: !657, size: 32, offset: 96)
!6834 = !DIDerivedType(tag: DW_TAG_member, name: "ia_size", scope: !6828, file: !639, line: 224, baseType: !824, size: 64, offset: 128)
!6835 = !DIDerivedType(tag: DW_TAG_member, name: "ia_atime", scope: !6828, file: !639, line: 225, baseType: !6836, size: 128, offset: 192)
!6836 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timespec64", file: !1643, line: 13, size: 128, elements: !6837)
!6837 = !{!6838, !6839}
!6838 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !6836, file: !1643, line: 14, baseType: !1642, size: 64)
!6839 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !6836, file: !1643, line: 15, baseType: !513, size: 64, offset: 64)
!6840 = !DIDerivedType(tag: DW_TAG_member, name: "ia_mtime", scope: !6828, file: !639, line: 226, baseType: !6836, size: 128, offset: 320)
!6841 = !DIDerivedType(tag: DW_TAG_member, name: "ia_ctime", scope: !6828, file: !639, line: 227, baseType: !6836, size: 128, offset: 448)
!6842 = !DIDerivedType(tag: DW_TAG_member, name: "ia_file", scope: !6828, file: !639, line: 234, baseType: !1010, size: 64, offset: 576)
!6843 = !DIDerivedType(tag: DW_TAG_member, name: "getattr", scope: !667, file: !639, line: 1882, baseType: !6844, size: 64, offset: 896)
!6844 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6845, size: 64)
!6845 = !DISubroutineType(types: !6846)
!6846 = !{!37, !805, !6847, !707, !7}
!6847 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6848, size: 64)
!6848 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kstat", file: !6849, line: 22, size: 1152, elements: !6850)
!6849 = !DIFile(filename: "./include/linux/stat.h", directory: "/home/lizy2001/genbc/linux")
!6850 = !{!6851, !6852, !6853, !6854, !6855, !6856, !6857, !6858, !6859, !6860, !6861, !6862, !6863, !6864, !6865, !6866, !6867, !6868}
!6851 = !DIDerivedType(tag: DW_TAG_member, name: "result_mask", scope: !6848, file: !6849, line: 23, baseType: !707, size: 32)
!6852 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !6848, file: !6849, line: 24, baseType: !646, size: 16, offset: 32)
!6853 = !DIDerivedType(tag: DW_TAG_member, name: "nlink", scope: !6848, file: !6849, line: 25, baseType: !7, size: 32, offset: 64)
!6854 = !DIDerivedType(tag: DW_TAG_member, name: "blksize", scope: !6848, file: !6849, line: 26, baseType: !1650, size: 32, offset: 96)
!6855 = !DIDerivedType(tag: DW_TAG_member, name: "attributes", scope: !6848, file: !6849, line: 27, baseType: !336, size: 64, offset: 128)
!6856 = !DIDerivedType(tag: DW_TAG_member, name: "attributes_mask", scope: !6848, file: !6849, line: 28, baseType: !336, size: 64, offset: 192)
!6857 = !DIDerivedType(tag: DW_TAG_member, name: "ino", scope: !6848, file: !6849, line: 37, baseType: !336, size: 64, offset: 256)
!6858 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !6848, file: !6849, line: 38, baseType: !819, size: 32, offset: 320)
!6859 = !DIDerivedType(tag: DW_TAG_member, name: "rdev", scope: !6848, file: !6849, line: 39, baseType: !819, size: 32, offset: 352)
!6860 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !6848, file: !6849, line: 40, baseType: !649, size: 32, offset: 384)
!6861 = !DIDerivedType(tag: DW_TAG_member, name: "gid", scope: !6848, file: !6849, line: 41, baseType: !657, size: 32, offset: 416)
!6862 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !6848, file: !6849, line: 42, baseType: !824, size: 64, offset: 448)
!6863 = !DIDerivedType(tag: DW_TAG_member, name: "atime", scope: !6848, file: !6849, line: 43, baseType: !6836, size: 128, offset: 512)
!6864 = !DIDerivedType(tag: DW_TAG_member, name: "mtime", scope: !6848, file: !6849, line: 44, baseType: !6836, size: 128, offset: 640)
!6865 = !DIDerivedType(tag: DW_TAG_member, name: "ctime", scope: !6848, file: !6849, line: 45, baseType: !6836, size: 128, offset: 768)
!6866 = !DIDerivedType(tag: DW_TAG_member, name: "btime", scope: !6848, file: !6849, line: 46, baseType: !6836, size: 128, offset: 896)
!6867 = !DIDerivedType(tag: DW_TAG_member, name: "blocks", scope: !6848, file: !6849, line: 47, baseType: !336, size: 64, offset: 1024)
!6868 = !DIDerivedType(tag: DW_TAG_member, name: "mnt_id", scope: !6848, file: !6849, line: 48, baseType: !336, size: 64, offset: 1088)
!6869 = !DIDerivedType(tag: DW_TAG_member, name: "listxattr", scope: !667, file: !639, line: 1883, baseType: !6870, size: 64, offset: 960)
!6870 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6871, size: 64)
!6871 = !DISubroutineType(types: !6872)
!6872 = !{!1015, !673, !577, !594}
!6873 = !DIDerivedType(tag: DW_TAG_member, name: "fiemap", scope: !667, file: !639, line: 1884, baseType: !6874, size: 64, offset: 1024)
!6874 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6875, size: 64)
!6875 = !DISubroutineType(types: !6876)
!6876 = !{!37, !642, !6877, !336, !336}
!6877 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6878, size: 64)
!6878 = !DICompositeType(tag: DW_TAG_structure_type, name: "fiemap_extent_info", file: !639, line: 50, flags: DIFlagFwdDecl)
!6879 = !DIDerivedType(tag: DW_TAG_member, name: "update_time", scope: !667, file: !639, line: 1886, baseType: !6880, size: 64, offset: 1088)
!6880 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6881, size: 64)
!6881 = !DISubroutineType(types: !6882)
!6882 = !{!37, !642, !6883, !37}
!6883 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6836, size: 64)
!6884 = !DIDerivedType(tag: DW_TAG_member, name: "atomic_open", scope: !667, file: !639, line: 1887, baseType: !6885, size: 64, offset: 1152)
!6885 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6886, size: 64)
!6886 = !DISubroutineType(types: !6887)
!6887 = !{!37, !642, !673, !1010, !7, !646}
!6888 = !DIDerivedType(tag: DW_TAG_member, name: "tmpfile", scope: !667, file: !639, line: 1890, baseType: !6811, size: 64, offset: 1216)
!6889 = !DIDerivedType(tag: DW_TAG_member, name: "set_acl", scope: !667, file: !639, line: 1891, baseType: !6890, size: 64, offset: 1280)
!6890 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6891, size: 64)
!6891 = !DISubroutineType(types: !6892)
!6892 = !{!37, !642, !6788, !37}
!6893 = !DIDerivedType(tag: DW_TAG_member, name: "i_sb", scope: !643, file: !639, line: 623, baseType: !814, size: 64, offset: 192)
!6894 = !DIDerivedType(tag: DW_TAG_member, name: "i_mapping", scope: !643, file: !639, line: 624, baseType: !637, size: 64, offset: 256)
!6895 = !DIDerivedType(tag: DW_TAG_member, name: "i_ino", scope: !643, file: !639, line: 631, baseType: !317, size: 64, offset: 320)
!6896 = !DIDerivedType(tag: DW_TAG_member, scope: !643, file: !639, line: 639, baseType: !6897, size: 32, offset: 384)
!6897 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !643, file: !639, line: 639, size: 32, elements: !6898)
!6898 = !{!6899, !6900}
!6899 = !DIDerivedType(tag: DW_TAG_member, name: "i_nlink", scope: !6897, file: !639, line: 640, baseType: !5428, size: 32)
!6900 = !DIDerivedType(tag: DW_TAG_member, name: "__i_nlink", scope: !6897, file: !639, line: 641, baseType: !7, size: 32)
!6901 = !DIDerivedType(tag: DW_TAG_member, name: "i_rdev", scope: !643, file: !639, line: 643, baseType: !819, size: 32, offset: 416)
!6902 = !DIDerivedType(tag: DW_TAG_member, name: "i_size", scope: !643, file: !639, line: 644, baseType: !824, size: 64, offset: 448)
!6903 = !DIDerivedType(tag: DW_TAG_member, name: "i_atime", scope: !643, file: !639, line: 645, baseType: !6836, size: 128, offset: 512)
!6904 = !DIDerivedType(tag: DW_TAG_member, name: "i_mtime", scope: !643, file: !639, line: 646, baseType: !6836, size: 128, offset: 640)
!6905 = !DIDerivedType(tag: DW_TAG_member, name: "i_ctime", scope: !643, file: !639, line: 647, baseType: !6836, size: 128, offset: 768)
!6906 = !DIDerivedType(tag: DW_TAG_member, name: "i_lock", scope: !643, file: !639, line: 648, baseType: !729, offset: 896)
!6907 = !DIDerivedType(tag: DW_TAG_member, name: "i_bytes", scope: !643, file: !639, line: 649, baseType: !477, size: 16, offset: 896)
!6908 = !DIDerivedType(tag: DW_TAG_member, name: "i_blkbits", scope: !643, file: !639, line: 650, baseType: !1397, size: 8, offset: 912)
!6909 = !DIDerivedType(tag: DW_TAG_member, name: "i_write_hint", scope: !643, file: !639, line: 651, baseType: !1397, size: 8, offset: 920)
!6910 = !DIDerivedType(tag: DW_TAG_member, name: "i_blocks", scope: !643, file: !639, line: 652, baseType: !6590, size: 64, offset: 960)
!6911 = !DIDerivedType(tag: DW_TAG_member, name: "i_state", scope: !643, file: !639, line: 659, baseType: !317, size: 64, offset: 1024)
!6912 = !DIDerivedType(tag: DW_TAG_member, name: "i_rwsem", scope: !643, file: !639, line: 660, baseType: !1162, size: 256, offset: 1088)
!6913 = !DIDerivedType(tag: DW_TAG_member, name: "dirtied_when", scope: !643, file: !639, line: 662, baseType: !317, size: 64, offset: 1344)
!6914 = !DIDerivedType(tag: DW_TAG_member, name: "dirtied_time_when", scope: !643, file: !639, line: 663, baseType: !317, size: 64, offset: 1408)
!6915 = !DIDerivedType(tag: DW_TAG_member, name: "i_hash", scope: !643, file: !639, line: 665, baseType: !281, size: 128, offset: 1472)
!6916 = !DIDerivedType(tag: DW_TAG_member, name: "i_io_list", scope: !643, file: !639, line: 666, baseType: !289, size: 128, offset: 1600)
!6917 = !DIDerivedType(tag: DW_TAG_member, name: "i_lru", scope: !643, file: !639, line: 675, baseType: !289, size: 128, offset: 1728)
!6918 = !DIDerivedType(tag: DW_TAG_member, name: "i_sb_list", scope: !643, file: !639, line: 676, baseType: !289, size: 128, offset: 1856)
!6919 = !DIDerivedType(tag: DW_TAG_member, name: "i_wb_list", scope: !643, file: !639, line: 677, baseType: !289, size: 128, offset: 1984)
!6920 = !DIDerivedType(tag: DW_TAG_member, scope: !643, file: !639, line: 678, baseType: !6921, size: 128, offset: 2112)
!6921 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !643, file: !639, line: 678, size: 128, elements: !6922)
!6922 = !{!6923, !6924}
!6923 = !DIDerivedType(tag: DW_TAG_member, name: "i_dentry", scope: !6921, file: !639, line: 679, baseType: !857, size: 64)
!6924 = !DIDerivedType(tag: DW_TAG_member, name: "i_rcu", scope: !6921, file: !639, line: 680, baseType: !304, size: 128, align: 64)
!6925 = !DIDerivedType(tag: DW_TAG_member, name: "i_version", scope: !643, file: !639, line: 682, baseType: !378, size: 64, offset: 2240)
!6926 = !DIDerivedType(tag: DW_TAG_member, name: "i_sequence", scope: !643, file: !639, line: 683, baseType: !378, size: 64, offset: 2304)
!6927 = !DIDerivedType(tag: DW_TAG_member, name: "i_count", scope: !643, file: !639, line: 684, baseType: !388, size: 32, offset: 2368)
!6928 = !DIDerivedType(tag: DW_TAG_member, name: "i_dio_count", scope: !643, file: !639, line: 685, baseType: !388, size: 32, offset: 2400)
!6929 = !DIDerivedType(tag: DW_TAG_member, name: "i_writecount", scope: !643, file: !639, line: 686, baseType: !388, size: 32, offset: 2432)
!6930 = !DIDerivedType(tag: DW_TAG_member, name: "i_readcount", scope: !643, file: !639, line: 688, baseType: !388, size: 32, offset: 2464)
!6931 = !DIDerivedType(tag: DW_TAG_member, scope: !643, file: !639, line: 690, baseType: !6932, size: 64, offset: 2496)
!6932 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !643, file: !639, line: 690, size: 64, elements: !6933)
!6933 = !{!6934, !6935}
!6934 = !DIDerivedType(tag: DW_TAG_member, name: "i_fop", scope: !6932, file: !639, line: 691, baseType: !1001, size: 64)
!6935 = !DIDerivedType(tag: DW_TAG_member, name: "free_inode", scope: !6932, file: !639, line: 692, baseType: !882, size: 64)
!6936 = !DIDerivedType(tag: DW_TAG_member, name: "i_flctx", scope: !643, file: !639, line: 694, baseType: !6937, size: 64, offset: 2560)
!6937 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6938, size: 64)
!6938 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_lock_context", file: !639, line: 1100, size: 384, elements: !6939)
!6939 = !{!6940, !6941, !6942, !6943}
!6940 = !DIDerivedType(tag: DW_TAG_member, name: "flc_lock", scope: !6938, file: !639, line: 1101, baseType: !729)
!6941 = !DIDerivedType(tag: DW_TAG_member, name: "flc_flock", scope: !6938, file: !639, line: 1102, baseType: !289, size: 128)
!6942 = !DIDerivedType(tag: DW_TAG_member, name: "flc_posix", scope: !6938, file: !639, line: 1103, baseType: !289, size: 128, offset: 128)
!6943 = !DIDerivedType(tag: DW_TAG_member, name: "flc_lease", scope: !6938, file: !639, line: 1104, baseType: !289, size: 128, offset: 256)
!6944 = !DIDerivedType(tag: DW_TAG_member, name: "i_data", scope: !643, file: !639, line: 695, baseType: !638, size: 1216, align: 64, offset: 2624)
!6945 = !DIDerivedType(tag: DW_TAG_member, name: "i_devices", scope: !643, file: !639, line: 696, baseType: !289, size: 128, offset: 3840)
!6946 = !DIDerivedType(tag: DW_TAG_member, scope: !643, file: !639, line: 697, baseType: !6947, size: 64, offset: 3968)
!6947 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !643, file: !639, line: 697, size: 64, elements: !6948)
!6948 = !{!6949, !6950, !6951, !6962, !6963}
!6949 = !DIDerivedType(tag: DW_TAG_member, name: "i_pipe", scope: !6947, file: !639, line: 698, baseType: !5894, size: 64)
!6950 = !DIDerivedType(tag: DW_TAG_member, name: "i_bdev", scope: !6947, file: !639, line: 699, baseType: !5012, size: 64)
!6951 = !DIDerivedType(tag: DW_TAG_member, name: "i_cdev", scope: !6947, file: !639, line: 700, baseType: !6952, size: 64)
!6952 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6953, size: 64)
!6953 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cdev", file: !6954, line: 14, size: 832, elements: !6955)
!6954 = !DIFile(filename: "./include/linux/cdev.h", directory: "/home/lizy2001/genbc/linux")
!6955 = !{!6956, !6957, !6958, !6959, !6960, !6961}
!6956 = !DIDerivedType(tag: DW_TAG_member, name: "kobj", scope: !6953, file: !6954, line: 15, baseType: !3807, size: 512)
!6957 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !6953, file: !6954, line: 16, baseType: !852, size: 64, offset: 512)
!6958 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !6953, file: !6954, line: 17, baseType: !1001, size: 64, offset: 576)
!6959 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !6953, file: !6954, line: 18, baseType: !289, size: 128, offset: 640)
!6960 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !6953, file: !6954, line: 19, baseType: !819, size: 32, offset: 768)
!6961 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !6953, file: !6954, line: 20, baseType: !7, size: 32, offset: 800)
!6962 = !DIDerivedType(tag: DW_TAG_member, name: "i_link", scope: !6947, file: !639, line: 701, baseType: !577, size: 64)
!6963 = !DIDerivedType(tag: DW_TAG_member, name: "i_dir_seq", scope: !6947, file: !639, line: 702, baseType: !7, size: 32)
!6964 = !DIDerivedType(tag: DW_TAG_member, name: "i_generation", scope: !643, file: !639, line: 705, baseType: !468, size: 32, offset: 4032)
!6965 = !DIDerivedType(tag: DW_TAG_member, name: "i_fsnotify_mask", scope: !643, file: !639, line: 708, baseType: !468, size: 32, offset: 4064)
!6966 = !DIDerivedType(tag: DW_TAG_member, name: "i_fsnotify_marks", scope: !643, file: !639, line: 709, baseType: !6694, size: 64, offset: 4096)
!6967 = !DIDerivedType(tag: DW_TAG_member, name: "i_private", scope: !643, file: !639, line: 720, baseType: !570, size: 64, offset: 4160)
!6968 = !DIDerivedType(tag: DW_TAG_member, name: "i_pages", scope: !638, file: !639, line: 453, baseType: !1985, size: 128, offset: 64)
!6969 = !DIDerivedType(tag: DW_TAG_member, name: "gfp_mask", scope: !638, file: !639, line: 454, baseType: !1990, size: 32, offset: 192)
!6970 = !DIDerivedType(tag: DW_TAG_member, name: "i_mmap_writable", scope: !638, file: !639, line: 455, baseType: !388, size: 32, offset: 224)
!6971 = !DIDerivedType(tag: DW_TAG_member, name: "i_mmap", scope: !638, file: !639, line: 460, baseType: !1387, size: 128, offset: 256)
!6972 = !DIDerivedType(tag: DW_TAG_member, name: "i_mmap_rwsem", scope: !638, file: !639, line: 461, baseType: !1162, size: 256, offset: 384)
!6973 = !DIDerivedType(tag: DW_TAG_member, name: "nrpages", scope: !638, file: !639, line: 462, baseType: !317, size: 64, offset: 640)
!6974 = !DIDerivedType(tag: DW_TAG_member, name: "nrexceptional", scope: !638, file: !639, line: 463, baseType: !317, size: 64, offset: 704)
!6975 = !DIDerivedType(tag: DW_TAG_member, name: "writeback_index", scope: !638, file: !639, line: 464, baseType: !317, size: 64, offset: 768)
!6976 = !DIDerivedType(tag: DW_TAG_member, name: "a_ops", scope: !638, file: !639, line: 465, baseType: !6977, size: 64, offset: 832)
!6977 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6978, size: 64)
!6978 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6979)
!6979 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "address_space_operations", file: !639, line: 367, size: 1408, elements: !6980)
!6980 = !{!6981, !6985, !6989, !6993, !6997, !7001, !7013, !7017, !7021, !7025, !7029, !7033, !7037, !7038, !7042, !7048, !7049, !7050, !7054, !7058, !7062, !7069}
!6981 = !DIDerivedType(tag: DW_TAG_member, name: "writepage", scope: !6979, file: !639, line: 368, baseType: !6982, size: 64)
!6982 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6983, size: 64)
!6983 = !DISubroutineType(types: !6984)
!6984 = !{!37, !624, !894}
!6985 = !DIDerivedType(tag: DW_TAG_member, name: "readpage", scope: !6979, file: !639, line: 369, baseType: !6986, size: 64, offset: 64)
!6986 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6987, size: 64)
!6987 = !DISubroutineType(types: !6988)
!6988 = !{!37, !1010, !624}
!6989 = !DIDerivedType(tag: DW_TAG_member, name: "writepages", scope: !6979, file: !639, line: 372, baseType: !6990, size: 64, offset: 128)
!6990 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6991, size: 64)
!6991 = !DISubroutineType(types: !6992)
!6992 = !{!37, !637, !894}
!6993 = !DIDerivedType(tag: DW_TAG_member, name: "set_page_dirty", scope: !6979, file: !639, line: 375, baseType: !6994, size: 64, offset: 192)
!6994 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6995, size: 64)
!6995 = !DISubroutineType(types: !6996)
!6996 = !{!37, !624}
!6997 = !DIDerivedType(tag: DW_TAG_member, name: "readpages", scope: !6979, file: !639, line: 381, baseType: !6998, size: 64, offset: 256)
!6998 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6999, size: 64)
!6999 = !DISubroutineType(types: !7000)
!7000 = !{!37, !1010, !637, !292, !7}
!7001 = !DIDerivedType(tag: DW_TAG_member, name: "readahead", scope: !6979, file: !639, line: 383, baseType: !7002, size: 64, offset: 320)
!7002 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7003, size: 64)
!7003 = !DISubroutineType(types: !7004)
!7004 = !{null, !7005}
!7005 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7006, size: 64)
!7006 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "readahead_control", file: !1047, line: 795, size: 256, elements: !7007)
!7007 = !{!7008, !7009, !7010, !7011, !7012}
!7008 = !DIDerivedType(tag: DW_TAG_member, name: "file", scope: !7006, file: !1047, line: 796, baseType: !1010, size: 64)
!7009 = !DIDerivedType(tag: DW_TAG_member, name: "mapping", scope: !7006, file: !1047, line: 797, baseType: !637, size: 64, offset: 64)
!7010 = !DIDerivedType(tag: DW_TAG_member, name: "_index", scope: !7006, file: !1047, line: 799, baseType: !317, size: 64, offset: 128)
!7011 = !DIDerivedType(tag: DW_TAG_member, name: "_nr_pages", scope: !7006, file: !1047, line: 800, baseType: !7, size: 32, offset: 192)
!7012 = !DIDerivedType(tag: DW_TAG_member, name: "_batch_count", scope: !7006, file: !1047, line: 801, baseType: !7, size: 32, offset: 224)
!7013 = !DIDerivedType(tag: DW_TAG_member, name: "write_begin", scope: !6979, file: !639, line: 385, baseType: !7014, size: 64, offset: 384)
!7014 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7015, size: 64)
!7015 = !DISubroutineType(types: !7016)
!7016 = !{!37, !1010, !637, !824, !7, !7, !5974, !3480}
!7017 = !DIDerivedType(tag: DW_TAG_member, name: "write_end", scope: !6979, file: !639, line: 388, baseType: !7018, size: 64, offset: 448)
!7018 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7019, size: 64)
!7019 = !DISubroutineType(types: !7020)
!7020 = !{!37, !1010, !637, !824, !7, !7, !624, !570}
!7021 = !DIDerivedType(tag: DW_TAG_member, name: "bmap", scope: !6979, file: !639, line: 393, baseType: !7022, size: 64, offset: 512)
!7022 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7023, size: 64)
!7023 = !DISubroutineType(types: !7024)
!7024 = !{!3775, !637, !3775}
!7025 = !DIDerivedType(tag: DW_TAG_member, name: "invalidatepage", scope: !6979, file: !639, line: 394, baseType: !7026, size: 64, offset: 576)
!7026 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7027, size: 64)
!7027 = !DISubroutineType(types: !7028)
!7028 = !{null, !624, !7, !7}
!7029 = !DIDerivedType(tag: DW_TAG_member, name: "releasepage", scope: !6979, file: !639, line: 395, baseType: !7030, size: 64, offset: 640)
!7030 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7031, size: 64)
!7031 = !DISubroutineType(types: !7032)
!7032 = !{!37, !624, !1990}
!7033 = !DIDerivedType(tag: DW_TAG_member, name: "freepage", scope: !6979, file: !639, line: 396, baseType: !7034, size: 64, offset: 704)
!7034 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7035, size: 64)
!7035 = !DISubroutineType(types: !7036)
!7036 = !{null, !624}
!7037 = !DIDerivedType(tag: DW_TAG_member, name: "direct_IO", scope: !6979, file: !639, line: 397, baseType: !1023, size: 64, offset: 768)
!7038 = !DIDerivedType(tag: DW_TAG_member, name: "migratepage", scope: !6979, file: !639, line: 402, baseType: !7039, size: 64, offset: 832)
!7039 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7040, size: 64)
!7040 = !DISubroutineType(types: !7041)
!7041 = !{!37, !637, !624, !624, !11}
!7042 = !DIDerivedType(tag: DW_TAG_member, name: "isolate_page", scope: !6979, file: !639, line: 404, baseType: !7043, size: 64, offset: 896)
!7043 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7044, size: 64)
!7044 = !DISubroutineType(types: !7045)
!7045 = !{!540, !624, !7046}
!7046 = !DIDerivedType(tag: DW_TAG_typedef, name: "isolate_mode_t", file: !7047, line: 305, baseType: !7)
!7047 = !DIFile(filename: "./include/linux/mmzone.h", directory: "/home/lizy2001/genbc/linux")
!7048 = !DIDerivedType(tag: DW_TAG_member, name: "putback_page", scope: !6979, file: !639, line: 405, baseType: !7034, size: 64, offset: 960)
!7049 = !DIDerivedType(tag: DW_TAG_member, name: "launder_page", scope: !6979, file: !639, line: 406, baseType: !6994, size: 64, offset: 1024)
!7050 = !DIDerivedType(tag: DW_TAG_member, name: "is_partially_uptodate", scope: !6979, file: !639, line: 407, baseType: !7051, size: 64, offset: 1088)
!7051 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7052, size: 64)
!7052 = !DISubroutineType(types: !7053)
!7053 = !{!37, !624, !317, !317}
!7054 = !DIDerivedType(tag: DW_TAG_member, name: "is_dirty_writeback", scope: !6979, file: !639, line: 409, baseType: !7055, size: 64, offset: 1152)
!7055 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7056, size: 64)
!7056 = !DISubroutineType(types: !7057)
!7057 = !{null, !624, !4728, !4728}
!7058 = !DIDerivedType(tag: DW_TAG_member, name: "error_remove_page", scope: !6979, file: !639, line: 410, baseType: !7059, size: 64, offset: 1216)
!7059 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7060, size: 64)
!7060 = !DISubroutineType(types: !7061)
!7061 = !{!37, !637, !624}
!7062 = !DIDerivedType(tag: DW_TAG_member, name: "swap_activate", scope: !6979, file: !639, line: 413, baseType: !7063, size: 64, offset: 1280)
!7063 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7064, size: 64)
!7064 = !DISubroutineType(types: !7065)
!7065 = !{!37, !7066, !1010, !7068}
!7066 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7067, size: 64)
!7067 = !DICompositeType(tag: DW_TAG_structure_type, name: "swap_info_struct", file: !639, line: 61, flags: DIFlagFwdDecl)
!7068 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3775, size: 64)
!7069 = !DIDerivedType(tag: DW_TAG_member, name: "swap_deactivate", scope: !6979, file: !639, line: 415, baseType: !7070, size: 64, offset: 1344)
!7070 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7071, size: 64)
!7071 = !DISubroutineType(types: !7072)
!7072 = !{null, !1010}
!7073 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !638, file: !639, line: 466, baseType: !317, size: 64, offset: 896)
!7074 = !DIDerivedType(tag: DW_TAG_member, name: "wb_err", scope: !638, file: !639, line: 467, baseType: !6395, size: 32, offset: 960)
!7075 = !DIDerivedType(tag: DW_TAG_member, name: "private_lock", scope: !638, file: !639, line: 468, baseType: !729, offset: 992)
!7076 = !DIDerivedType(tag: DW_TAG_member, name: "private_list", scope: !638, file: !639, line: 469, baseType: !289, size: 128, offset: 1024)
!7077 = !DIDerivedType(tag: DW_TAG_member, name: "private_data", scope: !638, file: !639, line: 470, baseType: !570, size: 64, offset: 1152)
!7078 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !633, file: !626, line: 87, baseType: !317, size: 64, offset: 192)
!7079 = !DIDerivedType(tag: DW_TAG_member, name: "private", scope: !633, file: !626, line: 94, baseType: !317, size: 64, offset: 256)
!7080 = !DIDerivedType(tag: DW_TAG_member, scope: !630, file: !626, line: 96, baseType: !7081, size: 64)
!7081 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !630, file: !626, line: 96, size: 64, elements: !7082)
!7082 = !{!7083}
!7083 = !DIDerivedType(tag: DW_TAG_member, name: "dma_addr", scope: !7081, file: !626, line: 101, baseType: !7084, size: 64)
!7084 = !DIDerivedType(tag: DW_TAG_typedef, name: "dma_addr_t", file: !282, line: 143, baseType: !336)
!7085 = !DIDerivedType(tag: DW_TAG_member, scope: !630, file: !626, line: 103, baseType: !7086, size: 320)
!7086 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !630, file: !626, line: 103, size: 320, elements: !7087)
!7087 = !{!7088, !7098, !7099, !7100}
!7088 = !DIDerivedType(tag: DW_TAG_member, scope: !7086, file: !626, line: 104, baseType: !7089, size: 128)
!7089 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7086, file: !626, line: 104, size: 128, elements: !7090)
!7090 = !{!7091, !7092}
!7091 = !DIDerivedType(tag: DW_TAG_member, name: "slab_list", scope: !7089, file: !626, line: 105, baseType: !289, size: 128)
!7092 = !DIDerivedType(tag: DW_TAG_member, scope: !7089, file: !626, line: 106, baseType: !7093, size: 128)
!7093 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !7089, file: !626, line: 106, size: 128, elements: !7094)
!7094 = !{!7095, !7096, !7097}
!7095 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !7093, file: !626, line: 107, baseType: !624, size: 64)
!7096 = !DIDerivedType(tag: DW_TAG_member, name: "pages", scope: !7093, file: !626, line: 109, baseType: !37, size: 32, offset: 64)
!7097 = !DIDerivedType(tag: DW_TAG_member, name: "pobjects", scope: !7093, file: !626, line: 110, baseType: !37, size: 32, offset: 96)
!7098 = !DIDerivedType(tag: DW_TAG_member, name: "slab_cache", scope: !7086, file: !626, line: 117, baseType: !2252, size: 64, offset: 128)
!7099 = !DIDerivedType(tag: DW_TAG_member, name: "freelist", scope: !7086, file: !626, line: 119, baseType: !570, size: 64, offset: 192)
!7100 = !DIDerivedType(tag: DW_TAG_member, scope: !7086, file: !626, line: 120, baseType: !7101, size: 64, offset: 256)
!7101 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7086, file: !626, line: 120, size: 64, elements: !7102)
!7102 = !{!7103, !7104, !7105}
!7103 = !DIDerivedType(tag: DW_TAG_member, name: "s_mem", scope: !7101, file: !626, line: 121, baseType: !570, size: 64)
!7104 = !DIDerivedType(tag: DW_TAG_member, name: "counters", scope: !7101, file: !626, line: 122, baseType: !317, size: 64)
!7105 = !DIDerivedType(tag: DW_TAG_member, scope: !7101, file: !626, line: 123, baseType: !7106, size: 32)
!7106 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !7101, file: !626, line: 123, size: 32, elements: !7107)
!7107 = !{!7108, !7109, !7110}
!7108 = !DIDerivedType(tag: DW_TAG_member, name: "inuse", scope: !7106, file: !626, line: 124, baseType: !7, size: 16, flags: DIFlagBitField, extraData: i64 0)
!7109 = !DIDerivedType(tag: DW_TAG_member, name: "objects", scope: !7106, file: !626, line: 125, baseType: !7, size: 15, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!7110 = !DIDerivedType(tag: DW_TAG_member, name: "frozen", scope: !7106, file: !626, line: 126, baseType: !7, size: 1, offset: 31, flags: DIFlagBitField, extraData: i64 0)
!7111 = !DIDerivedType(tag: DW_TAG_member, scope: !630, file: !626, line: 130, baseType: !7112, size: 192)
!7112 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !630, file: !626, line: 130, size: 192, elements: !7113)
!7113 = !{!7114, !7115, !7116, !7117, !7118}
!7114 = !DIDerivedType(tag: DW_TAG_member, name: "compound_head", scope: !7112, file: !626, line: 131, baseType: !317, size: 64)
!7115 = !DIDerivedType(tag: DW_TAG_member, name: "compound_dtor", scope: !7112, file: !626, line: 134, baseType: !494, size: 8, offset: 64)
!7116 = !DIDerivedType(tag: DW_TAG_member, name: "compound_order", scope: !7112, file: !626, line: 135, baseType: !494, size: 8, offset: 72)
!7117 = !DIDerivedType(tag: DW_TAG_member, name: "compound_mapcount", scope: !7112, file: !626, line: 136, baseType: !388, size: 32, offset: 96)
!7118 = !DIDerivedType(tag: DW_TAG_member, name: "compound_nr", scope: !7112, file: !626, line: 137, baseType: !7, size: 32, offset: 128)
!7119 = !DIDerivedType(tag: DW_TAG_member, scope: !630, file: !626, line: 139, baseType: !7120, size: 256)
!7120 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !630, file: !626, line: 139, size: 256, elements: !7121)
!7121 = !{!7122, !7123, !7124}
!7122 = !DIDerivedType(tag: DW_TAG_member, name: "_compound_pad_1", scope: !7120, file: !626, line: 140, baseType: !317, size: 64)
!7123 = !DIDerivedType(tag: DW_TAG_member, name: "hpage_pinned_refcount", scope: !7120, file: !626, line: 141, baseType: !388, size: 32, offset: 64)
!7124 = !DIDerivedType(tag: DW_TAG_member, name: "deferred_list", scope: !7120, file: !626, line: 143, baseType: !289, size: 128, offset: 128)
!7125 = !DIDerivedType(tag: DW_TAG_member, scope: !630, file: !626, line: 145, baseType: !7126, size: 256)
!7126 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !630, file: !626, line: 145, size: 256, elements: !7127)
!7127 = !{!7128, !7129, !7130, !7131, !7136}
!7128 = !DIDerivedType(tag: DW_TAG_member, name: "_pt_pad_1", scope: !7126, file: !626, line: 146, baseType: !317, size: 64)
!7129 = !DIDerivedType(tag: DW_TAG_member, name: "pmd_huge_pte", scope: !7126, file: !626, line: 147, baseType: !4099, size: 64, offset: 64)
!7130 = !DIDerivedType(tag: DW_TAG_member, name: "_pt_pad_2", scope: !7126, file: !626, line: 148, baseType: !317, size: 64, offset: 128)
!7131 = !DIDerivedType(tag: DW_TAG_member, scope: !7126, file: !626, line: 149, baseType: !7132, size: 64, offset: 192)
!7132 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7126, file: !626, line: 149, size: 64, elements: !7133)
!7133 = !{!7134, !7135}
!7134 = !DIDerivedType(tag: DW_TAG_member, name: "pt_mm", scope: !7132, file: !626, line: 150, baseType: !1125, size: 64)
!7135 = !DIDerivedType(tag: DW_TAG_member, name: "pt_frag_refcount", scope: !7132, file: !626, line: 151, baseType: !388, size: 32)
!7136 = !DIDerivedType(tag: DW_TAG_member, name: "ptl", scope: !7126, file: !626, line: 156, baseType: !729, offset: 256)
!7137 = !DIDerivedType(tag: DW_TAG_member, scope: !630, file: !626, line: 159, baseType: !7138, size: 128)
!7138 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !630, file: !626, line: 159, size: 128, elements: !7139)
!7139 = !{!7140, !7191}
!7140 = !DIDerivedType(tag: DW_TAG_member, name: "pgmap", scope: !7138, file: !626, line: 161, baseType: !7141, size: 64)
!7141 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7142, size: 64)
!7142 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pagemap", file: !7143, line: 110, size: 1152, elements: !7144)
!7143 = !DIFile(filename: "./include/linux/memremap.h", directory: "/home/lizy2001/genbc/linux")
!7144 = !{!7145, !7155, !7156, !7157, !7158, !7165, !7166, !7178, !7179, !7180}
!7145 = !DIDerivedType(tag: DW_TAG_member, name: "altmap", scope: !7142, file: !7143, line: 111, baseType: !7146, size: 384)
!7146 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vmem_altmap", file: !7143, line: 19, size: 384, elements: !7147)
!7147 = !{!7148, !7150, !7151, !7152, !7153, !7154}
!7148 = !DIDerivedType(tag: DW_TAG_member, name: "base_pfn", scope: !7146, file: !7143, line: 20, baseType: !7149, size: 64)
!7149 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !317)
!7150 = !DIDerivedType(tag: DW_TAG_member, name: "end_pfn", scope: !7146, file: !7143, line: 21, baseType: !7149, size: 64, offset: 64)
!7151 = !DIDerivedType(tag: DW_TAG_member, name: "reserve", scope: !7146, file: !7143, line: 22, baseType: !7149, size: 64, offset: 128)
!7152 = !DIDerivedType(tag: DW_TAG_member, name: "free", scope: !7146, file: !7143, line: 23, baseType: !317, size: 64, offset: 192)
!7153 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !7146, file: !7143, line: 24, baseType: !317, size: 64, offset: 256)
!7154 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !7146, file: !7143, line: 25, baseType: !317, size: 64, offset: 320)
!7155 = !DIDerivedType(tag: DW_TAG_member, name: "ref", scope: !7142, file: !7143, line: 112, baseType: !3796, size: 64, offset: 384)
!7156 = !DIDerivedType(tag: DW_TAG_member, name: "internal_ref", scope: !7142, file: !7143, line: 113, baseType: !3782, size: 128, offset: 448)
!7157 = !DIDerivedType(tag: DW_TAG_member, name: "done", scope: !7142, file: !7143, line: 114, baseType: !1547, size: 192, offset: 576)
!7158 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !7142, file: !7143, line: 115, baseType: !7159, size: 32, offset: 768)
!7159 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "memory_type", file: !7143, line: 59, baseType: !7, size: 32, elements: !7160)
!7160 = !{!7161, !7162, !7163, !7164}
!7161 = !DIEnumerator(name: "MEMORY_DEVICE_PRIVATE", value: 1, isUnsigned: true)
!7162 = !DIEnumerator(name: "MEMORY_DEVICE_FS_DAX", value: 2, isUnsigned: true)
!7163 = !DIEnumerator(name: "MEMORY_DEVICE_GENERIC", value: 3, isUnsigned: true)
!7164 = !DIEnumerator(name: "MEMORY_DEVICE_PCI_P2PDMA", value: 4, isUnsigned: true)
!7165 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !7142, file: !7143, line: 116, baseType: !7, size: 32, offset: 800)
!7166 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !7142, file: !7143, line: 117, baseType: !7167, size: 64, offset: 832)
!7167 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7168, size: 64)
!7168 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7169)
!7169 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pagemap_ops", file: !7143, line: 67, size: 256, elements: !7170)
!7170 = !{!7171, !7172, !7176, !7177}
!7171 = !DIDerivedType(tag: DW_TAG_member, name: "page_free", scope: !7169, file: !7143, line: 73, baseType: !7034, size: 64)
!7172 = !DIDerivedType(tag: DW_TAG_member, name: "kill", scope: !7169, file: !7143, line: 78, baseType: !7173, size: 64, offset: 64)
!7173 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7174, size: 64)
!7174 = !DISubroutineType(types: !7175)
!7175 = !{null, !7141}
!7176 = !DIDerivedType(tag: DW_TAG_member, name: "cleanup", scope: !7169, file: !7143, line: 83, baseType: !7173, size: 64, offset: 128)
!7177 = !DIDerivedType(tag: DW_TAG_member, name: "migrate_to_ram", scope: !7169, file: !7143, line: 89, baseType: !4060, size: 64, offset: 192)
!7178 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !7142, file: !7143, line: 118, baseType: !570, size: 64, offset: 896)
!7179 = !DIDerivedType(tag: DW_TAG_member, name: "nr_range", scope: !7142, file: !7143, line: 119, baseType: !37, size: 32, offset: 960)
!7180 = !DIDerivedType(tag: DW_TAG_member, scope: !7142, file: !7143, line: 120, baseType: !7181, size: 128, offset: 1024)
!7181 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7142, file: !7143, line: 120, size: 128, elements: !7182)
!7182 = !{!7183, !7189}
!7183 = !DIDerivedType(tag: DW_TAG_member, name: "range", scope: !7181, file: !7143, line: 121, baseType: !7184, size: 128)
!7184 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "range", file: !7185, line: 6, size: 128, elements: !7186)
!7185 = !DIFile(filename: "./include/linux/range.h", directory: "/home/lizy2001/genbc/linux")
!7186 = !{!7187, !7188}
!7187 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !7184, file: !7185, line: 7, baseType: !336, size: 64)
!7188 = !DIDerivedType(tag: DW_TAG_member, name: "end", scope: !7184, file: !7185, line: 8, baseType: !336, size: 64, offset: 64)
!7189 = !DIDerivedType(tag: DW_TAG_member, name: "ranges", scope: !7181, file: !7143, line: 122, baseType: !7190)
!7190 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7184, elements: !1922)
!7191 = !DIDerivedType(tag: DW_TAG_member, name: "zone_device_data", scope: !7138, file: !626, line: 162, baseType: !570, size: 64, offset: 64)
!7192 = !DIDerivedType(tag: DW_TAG_member, name: "callback_head", scope: !630, file: !626, line: 176, baseType: !304, size: 128, align: 64)
!7193 = !DIDerivedType(tag: DW_TAG_member, scope: !625, file: !626, line: 179, baseType: !7194, size: 32, offset: 384)
!7194 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !625, file: !626, line: 179, size: 32, elements: !7195)
!7195 = !{!7196, !7197, !7198, !7199}
!7196 = !DIDerivedType(tag: DW_TAG_member, name: "_mapcount", scope: !7194, file: !626, line: 184, baseType: !388, size: 32)
!7197 = !DIDerivedType(tag: DW_TAG_member, name: "page_type", scope: !7194, file: !626, line: 192, baseType: !7, size: 32)
!7198 = !DIDerivedType(tag: DW_TAG_member, name: "active", scope: !7194, file: !626, line: 194, baseType: !7, size: 32)
!7199 = !DIDerivedType(tag: DW_TAG_member, name: "units", scope: !7194, file: !626, line: 195, baseType: !37, size: 32)
!7200 = !DIDerivedType(tag: DW_TAG_member, name: "_refcount", scope: !625, file: !626, line: 199, baseType: !388, size: 32, offset: 416)
!7201 = !DIDerivedType(tag: DW_TAG_member, name: "bv_len", scope: !620, file: !621, line: 33, baseType: !7, size: 32, offset: 64)
!7202 = !DIDerivedType(tag: DW_TAG_member, name: "bv_offset", scope: !620, file: !621, line: 34, baseType: !7, size: 32, offset: 96)
!7203 = !DIDerivedType(tag: DW_TAG_member, name: "pipe", scope: !600, file: !590, line: 42, baseType: !5894, size: 64)
!7204 = !DIDerivedType(tag: DW_TAG_member, scope: !589, file: !590, line: 44, baseType: !7205, size: 64, offset: 256)
!7205 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !589, file: !590, line: 44, size: 64, elements: !7206)
!7206 = !{!7207, !7208}
!7207 = !DIDerivedType(tag: DW_TAG_member, name: "nr_segs", scope: !7205, file: !590, line: 45, baseType: !317, size: 64)
!7208 = !DIDerivedType(tag: DW_TAG_member, scope: !7205, file: !590, line: 46, baseType: !7209, size: 64)
!7209 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !7205, file: !590, line: 46, size: 64, elements: !7210)
!7210 = !{!7211, !7212}
!7211 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !7209, file: !590, line: 47, baseType: !7, size: 32)
!7212 = !DIDerivedType(tag: DW_TAG_member, name: "start_head", scope: !7209, file: !590, line: 48, baseType: !7, size: 32, offset: 32)
!7213 = !DIDerivedType(tag: DW_TAG_member, scope: !584, file: !520, line: 60, baseType: !7214, size: 64, offset: 448)
!7214 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !584, file: !520, line: 60, size: 64, elements: !7215)
!7215 = !{!7216, !7217}
!7216 = !DIDerivedType(tag: DW_TAG_member, name: "msg_control", scope: !7214, file: !520, line: 61, baseType: !570, size: 64)
!7217 = !DIDerivedType(tag: DW_TAG_member, name: "msg_control_user", scope: !7214, file: !520, line: 62, baseType: !570, size: 64)
!7218 = !DIDerivedType(tag: DW_TAG_member, name: "msg_control_is_user", scope: !584, file: !520, line: 64, baseType: !540, size: 1, offset: 512, flags: DIFlagBitField, extraData: i64 512)
!7219 = !DIDerivedType(tag: DW_TAG_member, name: "msg_controllen", scope: !584, file: !520, line: 65, baseType: !595, size: 64, offset: 576)
!7220 = !DIDerivedType(tag: DW_TAG_member, name: "msg_flags", scope: !584, file: !520, line: 66, baseType: !7, size: 32, offset: 640)
!7221 = !DIDerivedType(tag: DW_TAG_member, name: "msg_iocb", scope: !584, file: !520, line: 67, baseType: !1026, size: 64, offset: 704)
!7222 = !DIDerivedType(tag: DW_TAG_member, name: "recvmsg", scope: !507, file: !452, line: 1159, baseType: !7223, size: 64, offset: 832)
!7223 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7224, size: 64)
!7224 = !DISubroutineType(types: !7225)
!7225 = !{!37, !450, !583, !594, !37, !37, !539}
!7226 = !DIDerivedType(tag: DW_TAG_member, name: "sendpage", scope: !507, file: !452, line: 1162, baseType: !7227, size: 64, offset: 896)
!7227 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7228, size: 64)
!7228 = !DISubroutineType(types: !7229)
!7229 = !{!37, !450, !624, !37, !594, !37}
!7230 = !DIDerivedType(tag: DW_TAG_member, name: "bind", scope: !507, file: !452, line: 1164, baseType: !515, size: 64, offset: 960)
!7231 = !DIDerivedType(tag: DW_TAG_member, name: "bind_add", scope: !507, file: !452, line: 1166, baseType: !515, size: 64, offset: 1024)
!7232 = !DIDerivedType(tag: DW_TAG_member, name: "backlog_rcv", scope: !507, file: !452, line: 1169, baseType: !7233, size: 64, offset: 1088)
!7233 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7234, size: 64)
!7234 = !DISubroutineType(types: !7235)
!7235 = !{!37, !450, !420}
!7236 = !DIDerivedType(tag: DW_TAG_member, name: "release_cb", scope: !507, file: !452, line: 1172, baseType: !551, size: 64, offset: 1152)
!7237 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !507, file: !452, line: 1175, baseType: !547, size: 64, offset: 1216)
!7238 = !DIDerivedType(tag: DW_TAG_member, name: "unhash", scope: !507, file: !452, line: 1176, baseType: !551, size: 64, offset: 1280)
!7239 = !DIDerivedType(tag: DW_TAG_member, name: "rehash", scope: !507, file: !452, line: 1177, baseType: !551, size: 64, offset: 1344)
!7240 = !DIDerivedType(tag: DW_TAG_member, name: "get_port", scope: !507, file: !452, line: 1178, baseType: !7241, size: 64, offset: 1408)
!7241 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7242, size: 64)
!7242 = !DISubroutineType(types: !7243)
!7243 = !{!37, !450, !477}
!7244 = !DIDerivedType(tag: DW_TAG_member, name: "inuse_idx", scope: !507, file: !452, line: 1182, baseType: !7, size: 32, offset: 1472)
!7245 = !DIDerivedType(tag: DW_TAG_member, name: "stream_memory_free", scope: !507, file: !452, line: 1185, baseType: !7246, size: 64, offset: 1536)
!7246 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7247, size: 64)
!7247 = !DISubroutineType(types: !7248)
!7248 = !{!540, !7249, !37}
!7249 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7250, size: 64)
!7250 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !451)
!7251 = !DIDerivedType(tag: DW_TAG_member, name: "stream_memory_read", scope: !507, file: !452, line: 1186, baseType: !7252, size: 64, offset: 1600)
!7252 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7253, size: 64)
!7253 = !DISubroutineType(types: !7254)
!7254 = !{!540, !7249}
!7255 = !DIDerivedType(tag: DW_TAG_member, name: "enter_memory_pressure", scope: !507, file: !452, line: 1188, baseType: !551, size: 64, offset: 1664)
!7256 = !DIDerivedType(tag: DW_TAG_member, name: "leave_memory_pressure", scope: !507, file: !452, line: 1189, baseType: !551, size: 64, offset: 1728)
!7257 = !DIDerivedType(tag: DW_TAG_member, name: "memory_allocated", scope: !507, file: !452, line: 1190, baseType: !6723, size: 64, offset: 1792)
!7258 = !DIDerivedType(tag: DW_TAG_member, name: "sockets_allocated", scope: !507, file: !452, line: 1191, baseType: !7259, size: 64, offset: 1856)
!7259 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2863, size: 64)
!7260 = !DIDerivedType(tag: DW_TAG_member, name: "memory_pressure", scope: !507, file: !452, line: 1198, baseType: !2427, size: 64, offset: 1920)
!7261 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_mem", scope: !507, file: !452, line: 1199, baseType: !7262, size: 64, offset: 1984)
!7262 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !513, size: 64)
!7263 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_wmem", scope: !507, file: !452, line: 1201, baseType: !539, size: 64, offset: 2048)
!7264 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_rmem", scope: !507, file: !452, line: 1202, baseType: !539, size: 64, offset: 2112)
!7265 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_wmem_offset", scope: !507, file: !452, line: 1203, baseType: !707, size: 32, offset: 2176)
!7266 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_rmem_offset", scope: !507, file: !452, line: 1204, baseType: !707, size: 32, offset: 2208)
!7267 = !DIDerivedType(tag: DW_TAG_member, name: "max_header", scope: !507, file: !452, line: 1206, baseType: !37, size: 32, offset: 2240)
!7268 = !DIDerivedType(tag: DW_TAG_member, name: "no_autobind", scope: !507, file: !452, line: 1207, baseType: !540, size: 8, offset: 2272)
!7269 = !DIDerivedType(tag: DW_TAG_member, name: "slab", scope: !507, file: !452, line: 1209, baseType: !2252, size: 64, offset: 2304)
!7270 = !DIDerivedType(tag: DW_TAG_member, name: "obj_size", scope: !507, file: !452, line: 1210, baseType: !7, size: 32, offset: 2368)
!7271 = !DIDerivedType(tag: DW_TAG_member, name: "slab_flags", scope: !507, file: !452, line: 1211, baseType: !7272, size: 32, offset: 2400)
!7272 = !DIDerivedType(tag: DW_TAG_typedef, name: "slab_flags_t", file: !282, line: 149, baseType: !7)
!7273 = !DIDerivedType(tag: DW_TAG_member, name: "useroffset", scope: !507, file: !452, line: 1212, baseType: !7, size: 32, offset: 2432)
!7274 = !DIDerivedType(tag: DW_TAG_member, name: "usersize", scope: !507, file: !452, line: 1213, baseType: !7, size: 32, offset: 2464)
!7275 = !DIDerivedType(tag: DW_TAG_member, name: "orphan_count", scope: !507, file: !452, line: 1215, baseType: !7259, size: 64, offset: 2496)
!7276 = !DIDerivedType(tag: DW_TAG_member, name: "rsk_prot", scope: !507, file: !452, line: 1217, baseType: !7277, size: 64, offset: 2560)
!7277 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7278, size: 64)
!7278 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "request_sock_ops", file: !7279, line: 27, size: 512, elements: !7280)
!7279 = !DIFile(filename: "./include/net/request_sock.h", directory: "/home/lizy2001/genbc/linux")
!7280 = !{!7281, !7282, !7283, !7284, !7285, !7314, !7318, !7322, !7326}
!7281 = !DIDerivedType(tag: DW_TAG_member, name: "family", scope: !7278, file: !7279, line: 28, baseType: !37, size: 32)
!7282 = !DIDerivedType(tag: DW_TAG_member, name: "obj_size", scope: !7278, file: !7279, line: 29, baseType: !7, size: 32, offset: 32)
!7283 = !DIDerivedType(tag: DW_TAG_member, name: "slab", scope: !7278, file: !7279, line: 30, baseType: !2252, size: 64, offset: 64)
!7284 = !DIDerivedType(tag: DW_TAG_member, name: "slab_name", scope: !7278, file: !7279, line: 31, baseType: !577, size: 64, offset: 128)
!7285 = !DIDerivedType(tag: DW_TAG_member, name: "rtx_syn_ack", scope: !7278, file: !7279, line: 32, baseType: !7286, size: 64, offset: 192)
!7286 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7287, size: 64)
!7287 = !DISubroutineType(types: !7288)
!7288 = !{!37, !7249, !7289}
!7289 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7290, size: 64)
!7290 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "request_sock", file: !7279, line: 53, size: 1792, elements: !7291)
!7291 = !{!7292, !7293, !7294, !7295, !7296, !7297, !7298, !7299, !7300, !7303, !7304, !7312, !7313}
!7292 = !DIDerivedType(tag: DW_TAG_member, name: "__req_common", scope: !7290, file: !7279, line: 54, baseType: !455, size: 1088)
!7293 = !DIDerivedType(tag: DW_TAG_member, name: "dl_next", scope: !7290, file: !7279, line: 61, baseType: !7289, size: 64, offset: 1088)
!7294 = !DIDerivedType(tag: DW_TAG_member, name: "mss", scope: !7290, file: !7279, line: 62, baseType: !1038, size: 16, offset: 1152)
!7295 = !DIDerivedType(tag: DW_TAG_member, name: "num_retrans", scope: !7290, file: !7279, line: 63, baseType: !1397, size: 8, offset: 1168)
!7296 = !DIDerivedType(tag: DW_TAG_member, name: "syncookie", scope: !7290, file: !7279, line: 64, baseType: !1397, size: 1, offset: 1176, flags: DIFlagBitField, extraData: i64 1176)
!7297 = !DIDerivedType(tag: DW_TAG_member, name: "num_timeout", scope: !7290, file: !7279, line: 65, baseType: !1397, size: 7, offset: 1177, flags: DIFlagBitField, extraData: i64 1176)
!7298 = !DIDerivedType(tag: DW_TAG_member, name: "ts_recent", scope: !7290, file: !7279, line: 66, baseType: !707, size: 32, offset: 1184)
!7299 = !DIDerivedType(tag: DW_TAG_member, name: "rsk_timer", scope: !7290, file: !7279, line: 67, baseType: !2221, size: 320, offset: 1216)
!7300 = !DIDerivedType(tag: DW_TAG_member, name: "rsk_ops", scope: !7290, file: !7279, line: 68, baseType: !7301, size: 64, offset: 1536)
!7301 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7302, size: 64)
!7302 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7278)
!7303 = !DIDerivedType(tag: DW_TAG_member, name: "sk", scope: !7290, file: !7279, line: 69, baseType: !450, size: 64, offset: 1600)
!7304 = !DIDerivedType(tag: DW_TAG_member, name: "saved_syn", scope: !7290, file: !7279, line: 70, baseType: !7305, size: 64, offset: 1664)
!7305 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7306, size: 64)
!7306 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "saved_syn", file: !7279, line: 44, size: 96, elements: !7307)
!7307 = !{!7308, !7309, !7310, !7311}
!7308 = !DIDerivedType(tag: DW_TAG_member, name: "mac_hdrlen", scope: !7306, file: !7279, line: 45, baseType: !707, size: 32)
!7309 = !DIDerivedType(tag: DW_TAG_member, name: "network_hdrlen", scope: !7306, file: !7279, line: 46, baseType: !707, size: 32, offset: 32)
!7310 = !DIDerivedType(tag: DW_TAG_member, name: "tcp_hdrlen", scope: !7306, file: !7279, line: 47, baseType: !707, size: 32, offset: 64)
!7311 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !7306, file: !7279, line: 48, baseType: !2712, offset: 96)
!7312 = !DIDerivedType(tag: DW_TAG_member, name: "secid", scope: !7290, file: !7279, line: 71, baseType: !707, size: 32, offset: 1728)
!7313 = !DIDerivedType(tag: DW_TAG_member, name: "peer_secid", scope: !7290, file: !7279, line: 72, baseType: !707, size: 32, offset: 1760)
!7314 = !DIDerivedType(tag: DW_TAG_member, name: "send_ack", scope: !7278, file: !7279, line: 34, baseType: !7315, size: 64, offset: 256)
!7315 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7316, size: 64)
!7316 = !DISubroutineType(types: !7317)
!7317 = !{null, !7249, !420, !7289}
!7318 = !DIDerivedType(tag: DW_TAG_member, name: "send_reset", scope: !7278, file: !7279, line: 36, baseType: !7319, size: 64, offset: 320)
!7319 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7320, size: 64)
!7320 = !DISubroutineType(types: !7321)
!7321 = !{null, !7249, !420}
!7322 = !DIDerivedType(tag: DW_TAG_member, name: "destructor", scope: !7278, file: !7279, line: 38, baseType: !7323, size: 64, offset: 384)
!7323 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7324, size: 64)
!7324 = !DISubroutineType(types: !7325)
!7325 = !{null, !7289}
!7326 = !DIDerivedType(tag: DW_TAG_member, name: "syn_ack_timeout", scope: !7278, file: !7279, line: 39, baseType: !7327, size: 64, offset: 448)
!7327 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7328, size: 64)
!7328 = !DISubroutineType(types: !7329)
!7329 = !{null, !7330}
!7330 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7331, size: 64)
!7331 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7290)
!7332 = !DIDerivedType(tag: DW_TAG_member, name: "twsk_prot", scope: !507, file: !452, line: 1218, baseType: !7333, size: 64, offset: 2624)
!7333 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7334, size: 64)
!7334 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timewait_sock_ops", file: !7335, line: 14, size: 320, elements: !7336)
!7335 = !DIFile(filename: "./include/net/timewait_sock.h", directory: "/home/lizy2001/genbc/linux")
!7336 = !{!7337, !7338, !7339, !7340, !7344}
!7337 = !DIDerivedType(tag: DW_TAG_member, name: "twsk_slab", scope: !7334, file: !7335, line: 15, baseType: !2252, size: 64)
!7338 = !DIDerivedType(tag: DW_TAG_member, name: "twsk_slab_name", scope: !7334, file: !7335, line: 16, baseType: !577, size: 64, offset: 64)
!7339 = !DIDerivedType(tag: DW_TAG_member, name: "twsk_obj_size", scope: !7334, file: !7335, line: 17, baseType: !7, size: 32, offset: 128)
!7340 = !DIDerivedType(tag: DW_TAG_member, name: "twsk_unique", scope: !7334, file: !7335, line: 18, baseType: !7341, size: 64, offset: 192)
!7341 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7342, size: 64)
!7342 = !DISubroutineType(types: !7343)
!7343 = !{!37, !450, !450, !570}
!7344 = !DIDerivedType(tag: DW_TAG_member, name: "twsk_destructor", scope: !7334, file: !7335, line: 20, baseType: !551, size: 64, offset: 256)
!7345 = !DIDerivedType(tag: DW_TAG_member, name: "h", scope: !507, file: !452, line: 1225, baseType: !7346, size: 64, offset: 2688)
!7346 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !507, file: !452, line: 1220, size: 64, elements: !7347)
!7347 = !{!7348, !7349, !7352, !7355}
!7348 = !DIDerivedType(tag: DW_TAG_member, name: "hashinfo", scope: !7346, file: !452, line: 1221, baseType: !2396, size: 64)
!7349 = !DIDerivedType(tag: DW_TAG_member, name: "udp_table", scope: !7346, file: !452, line: 1222, baseType: !7350, size: 64)
!7350 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7351, size: 64)
!7351 = !DICompositeType(tag: DW_TAG_structure_type, name: "udp_table", file: !452, line: 1222, flags: DIFlagFwdDecl)
!7352 = !DIDerivedType(tag: DW_TAG_member, name: "raw_hash", scope: !7346, file: !452, line: 1223, baseType: !7353, size: 64)
!7353 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7354, size: 64)
!7354 = !DICompositeType(tag: DW_TAG_structure_type, name: "raw_hashinfo", file: !452, line: 1108, flags: DIFlagFwdDecl)
!7355 = !DIDerivedType(tag: DW_TAG_member, name: "smc_hash", scope: !7346, file: !452, line: 1224, baseType: !7356, size: 64)
!7356 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7357, size: 64)
!7357 = !DICompositeType(tag: DW_TAG_structure_type, name: "smc_hashinfo", file: !452, line: 1109, flags: DIFlagFwdDecl)
!7358 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !507, file: !452, line: 1227, baseType: !852, size: 64, offset: 2752)
!7359 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !507, file: !452, line: 1229, baseType: !3761, size: 256, offset: 2816)
!7360 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !507, file: !452, line: 1231, baseType: !289, size: 128, offset: 3072)
!7361 = !DIDerivedType(tag: DW_TAG_member, name: "diag_destroy", scope: !507, file: !452, line: 1235, baseType: !532, size: 64, offset: 3200)
!7362 = !DIDerivedType(tag: DW_TAG_member, name: "skc_net", scope: !455, file: !452, line: 198, baseType: !2704, size: 64, offset: 384)
!7363 = !DIDerivedType(tag: DW_TAG_member, name: "skc_v6_daddr", scope: !455, file: !452, line: 201, baseType: !2204, size: 128, offset: 448)
!7364 = !DIDerivedType(tag: DW_TAG_member, name: "skc_v6_rcv_saddr", scope: !455, file: !452, line: 202, baseType: !2204, size: 128, offset: 576)
!7365 = !DIDerivedType(tag: DW_TAG_member, name: "skc_cookie", scope: !455, file: !452, line: 205, baseType: !378, size: 64, offset: 704)
!7366 = !DIDerivedType(tag: DW_TAG_member, scope: !455, file: !452, line: 212, baseType: !7367, size: 64, offset: 768)
!7367 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !455, file: !452, line: 212, size: 64, elements: !7368)
!7368 = !{!7369, !7370, !7371}
!7369 = !DIDerivedType(tag: DW_TAG_member, name: "skc_flags", scope: !7367, file: !452, line: 213, baseType: !317, size: 64)
!7370 = !DIDerivedType(tag: DW_TAG_member, name: "skc_listener", scope: !7367, file: !452, line: 214, baseType: !450, size: 64)
!7371 = !DIDerivedType(tag: DW_TAG_member, name: "skc_tw_dr", scope: !7367, file: !452, line: 215, baseType: !7372, size: 64)
!7372 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2392, size: 64)
!7373 = !DIDerivedType(tag: DW_TAG_member, name: "skc_dontcopy_begin", scope: !455, file: !452, line: 222, baseType: !7374, offset: 832)
!7374 = !DICompositeType(tag: DW_TAG_array_type, baseType: !37, elements: !1922)
!7375 = !DIDerivedType(tag: DW_TAG_member, scope: !455, file: !452, line: 224, baseType: !7376, size: 128, offset: 832)
!7376 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !455, file: !452, line: 224, size: 128, elements: !7377)
!7377 = !{!7378, !7379}
!7378 = !DIDerivedType(tag: DW_TAG_member, name: "skc_node", scope: !7376, file: !452, line: 225, baseType: !281, size: 128)
!7379 = !DIDerivedType(tag: DW_TAG_member, name: "skc_nulls_node", scope: !7376, file: !452, line: 226, baseType: !7380, size: 128)
!7380 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hlist_nulls_node", file: !7381, line: 25, size: 128, elements: !7382)
!7381 = !DIFile(filename: "./include/linux/list_nulls.h", directory: "/home/lizy2001/genbc/linux")
!7382 = !{!7383, !7385}
!7383 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !7380, file: !7381, line: 26, baseType: !7384, size: 64)
!7384 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7380, size: 64)
!7385 = !DIDerivedType(tag: DW_TAG_member, name: "pprev", scope: !7380, file: !7381, line: 26, baseType: !7386, size: 64, offset: 64)
!7386 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7384, size: 64)
!7387 = !DIDerivedType(tag: DW_TAG_member, name: "skc_tx_queue_mapping", scope: !455, file: !452, line: 228, baseType: !477, size: 16, offset: 960)
!7388 = !DIDerivedType(tag: DW_TAG_member, scope: !455, file: !452, line: 232, baseType: !7389, size: 32, offset: 992)
!7389 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !455, file: !452, line: 232, size: 32, elements: !7390)
!7390 = !{!7391, !7392, !7393}
!7391 = !DIDerivedType(tag: DW_TAG_member, name: "skc_incoming_cpu", scope: !7389, file: !452, line: 233, baseType: !37, size: 32)
!7392 = !DIDerivedType(tag: DW_TAG_member, name: "skc_rcv_wnd", scope: !7389, file: !452, line: 234, baseType: !707, size: 32)
!7393 = !DIDerivedType(tag: DW_TAG_member, name: "skc_tw_rcv_nxt", scope: !7389, file: !452, line: 235, baseType: !707, size: 32)
!7394 = !DIDerivedType(tag: DW_TAG_member, name: "skc_refcnt", scope: !455, file: !452, line: 238, baseType: !1271, size: 32, offset: 1024)
!7395 = !DIDerivedType(tag: DW_TAG_member, name: "skc_dontcopy_end", scope: !455, file: !452, line: 240, baseType: !7374, offset: 1056)
!7396 = !DIDerivedType(tag: DW_TAG_member, scope: !455, file: !452, line: 241, baseType: !7397, size: 32, offset: 1056)
!7397 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !455, file: !452, line: 241, size: 32, elements: !7398)
!7398 = !{!7399, !7400, !7401}
!7399 = !DIDerivedType(tag: DW_TAG_member, name: "skc_rxhash", scope: !7397, file: !452, line: 242, baseType: !707, size: 32)
!7400 = !DIDerivedType(tag: DW_TAG_member, name: "skc_window_clamp", scope: !7397, file: !452, line: 243, baseType: !707, size: 32)
!7401 = !DIDerivedType(tag: DW_TAG_member, name: "skc_tw_snd_nxt", scope: !7397, file: !452, line: 244, baseType: !707, size: 32)
!7402 = !DIDerivedType(tag: DW_TAG_member, name: "sk_lock", scope: !451, file: !452, line: 387, baseType: !7403, size: 192, offset: 1088)
!7403 = !DIDerivedType(tag: DW_TAG_typedef, name: "socket_lock_t", file: !452, line: 108, baseType: !7404)
!7404 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !452, line: 95, size: 192, elements: !7405)
!7405 = !{!7406, !7407, !7408}
!7406 = !DIDerivedType(tag: DW_TAG_member, name: "slock", scope: !7404, file: !452, line: 96, baseType: !729)
!7407 = !DIDerivedType(tag: DW_TAG_member, name: "owned", scope: !7404, file: !452, line: 97, baseType: !37, size: 32)
!7408 = !DIDerivedType(tag: DW_TAG_member, name: "wq", scope: !7404, file: !452, line: 98, baseType: !1100, size: 128, offset: 64)
!7409 = !DIDerivedType(tag: DW_TAG_member, name: "sk_drops", scope: !451, file: !452, line: 388, baseType: !388, size: 32, offset: 1280)
!7410 = !DIDerivedType(tag: DW_TAG_member, name: "sk_rcvlowat", scope: !451, file: !452, line: 389, baseType: !37, size: 32, offset: 1312)
!7411 = !DIDerivedType(tag: DW_TAG_member, name: "sk_error_queue", scope: !451, file: !452, line: 390, baseType: !2762, size: 192, offset: 1344)
!7412 = !DIDerivedType(tag: DW_TAG_member, name: "sk_rx_skb_cache", scope: !451, file: !452, line: 391, baseType: !420, size: 64, offset: 1536)
!7413 = !DIDerivedType(tag: DW_TAG_member, name: "sk_receive_queue", scope: !451, file: !452, line: 392, baseType: !2762, size: 192, offset: 1600)
!7414 = !DIDerivedType(tag: DW_TAG_member, name: "sk_backlog", scope: !451, file: !452, line: 406, baseType: !7415, size: 192, offset: 1792)
!7415 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !451, file: !452, line: 401, size: 192, elements: !7416)
!7416 = !{!7417, !7418, !7419, !7420}
!7417 = !DIDerivedType(tag: DW_TAG_member, name: "rmem_alloc", scope: !7415, file: !452, line: 402, baseType: !388, size: 32)
!7418 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !7415, file: !452, line: 403, baseType: !37, size: 32, offset: 32)
!7419 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !7415, file: !452, line: 404, baseType: !420, size: 64, offset: 64)
!7420 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !7415, file: !452, line: 405, baseType: !420, size: 64, offset: 128)
!7421 = !DIDerivedType(tag: DW_TAG_member, name: "sk_forward_alloc", scope: !451, file: !452, line: 409, baseType: !37, size: 32, offset: 1984)
!7422 = !DIDerivedType(tag: DW_TAG_member, name: "sk_ll_usec", scope: !451, file: !452, line: 411, baseType: !7, size: 32, offset: 2016)
!7423 = !DIDerivedType(tag: DW_TAG_member, name: "sk_napi_id", scope: !451, file: !452, line: 413, baseType: !7, size: 32, offset: 2048)
!7424 = !DIDerivedType(tag: DW_TAG_member, name: "sk_rcvbuf", scope: !451, file: !452, line: 415, baseType: !37, size: 32, offset: 2080)
!7425 = !DIDerivedType(tag: DW_TAG_member, name: "sk_filter", scope: !451, file: !452, line: 417, baseType: !7426, size: 64, offset: 2112)
!7426 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7427, size: 64)
!7427 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sk_filter", file: !2911, line: 552, size: 256, elements: !7428)
!7428 = !{!7429, !7430, !7431}
!7429 = !DIDerivedType(tag: DW_TAG_member, name: "refcnt", scope: !7427, file: !2911, line: 553, baseType: !1271, size: 32)
!7430 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !7427, file: !2911, line: 554, baseType: !304, size: 128, align: 64, offset: 64)
!7431 = !DIDerivedType(tag: DW_TAG_member, name: "prog", scope: !7427, file: !2911, line: 555, baseType: !2909, size: 64, offset: 192)
!7432 = !DIDerivedType(tag: DW_TAG_member, scope: !451, file: !452, line: 418, baseType: !7433, size: 64, offset: 2176)
!7433 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !451, file: !452, line: 418, size: 64, elements: !7434)
!7434 = !{!7435, !7444}
!7435 = !DIDerivedType(tag: DW_TAG_member, name: "sk_wq", scope: !7433, file: !452, line: 419, baseType: !7436, size: 64)
!7436 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7437, size: 64)
!7437 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "socket_wq", file: !7438, line: 98, size: 384, elements: !7439)
!7438 = !DIFile(filename: "./include/linux/net.h", directory: "/home/lizy2001/genbc/linux")
!7439 = !{!7440, !7441, !7442, !7443}
!7440 = !DIDerivedType(tag: DW_TAG_member, name: "wait", scope: !7437, file: !7438, line: 100, baseType: !1100, size: 128)
!7441 = !DIDerivedType(tag: DW_TAG_member, name: "fasync_list", scope: !7437, file: !7438, line: 101, baseType: !5913, size: 64, offset: 128)
!7442 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !7437, file: !7438, line: 102, baseType: !317, size: 64, offset: 192)
!7443 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !7437, file: !7438, line: 103, baseType: !304, size: 128, align: 64, offset: 256)
!7444 = !DIDerivedType(tag: DW_TAG_member, name: "sk_wq_raw", scope: !7433, file: !452, line: 421, baseType: !7436, size: 64)
!7445 = !DIDerivedType(tag: DW_TAG_member, name: "sk_rx_dst", scope: !451, file: !452, line: 427, baseType: !2594, size: 64, offset: 2240)
!7446 = !DIDerivedType(tag: DW_TAG_member, name: "sk_dst_cache", scope: !451, file: !452, line: 428, baseType: !2594, size: 64, offset: 2304)
!7447 = !DIDerivedType(tag: DW_TAG_member, name: "sk_omem_alloc", scope: !451, file: !452, line: 429, baseType: !388, size: 32, offset: 2368)
!7448 = !DIDerivedType(tag: DW_TAG_member, name: "sk_sndbuf", scope: !451, file: !452, line: 430, baseType: !37, size: 32, offset: 2400)
!7449 = !DIDerivedType(tag: DW_TAG_member, name: "sk_wmem_queued", scope: !451, file: !452, line: 433, baseType: !37, size: 32, offset: 2432)
!7450 = !DIDerivedType(tag: DW_TAG_member, name: "sk_wmem_alloc", scope: !451, file: !452, line: 434, baseType: !1271, size: 32, offset: 2464)
!7451 = !DIDerivedType(tag: DW_TAG_member, name: "sk_tsq_flags", scope: !451, file: !452, line: 435, baseType: !317, size: 64, offset: 2496)
!7452 = !DIDerivedType(tag: DW_TAG_member, scope: !451, file: !452, line: 436, baseType: !7453, size: 64, offset: 2560)
!7453 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !451, file: !452, line: 436, size: 64, elements: !7454)
!7454 = !{!7455, !7456}
!7455 = !DIDerivedType(tag: DW_TAG_member, name: "sk_send_head", scope: !7453, file: !452, line: 437, baseType: !420, size: 64)
!7456 = !DIDerivedType(tag: DW_TAG_member, name: "tcp_rtx_queue", scope: !7453, file: !452, line: 438, baseType: !1133, size: 64)
!7457 = !DIDerivedType(tag: DW_TAG_member, name: "sk_tx_skb_cache", scope: !451, file: !452, line: 440, baseType: !420, size: 64, offset: 2624)
!7458 = !DIDerivedType(tag: DW_TAG_member, name: "sk_write_queue", scope: !451, file: !452, line: 441, baseType: !2762, size: 192, offset: 2688)
!7459 = !DIDerivedType(tag: DW_TAG_member, name: "sk_peek_off", scope: !451, file: !452, line: 442, baseType: !1490, size: 32, offset: 2880)
!7460 = !DIDerivedType(tag: DW_TAG_member, name: "sk_write_pending", scope: !451, file: !452, line: 443, baseType: !37, size: 32, offset: 2912)
!7461 = !DIDerivedType(tag: DW_TAG_member, name: "sk_dst_pending_confirm", scope: !451, file: !452, line: 444, baseType: !468, size: 32, offset: 2944)
!7462 = !DIDerivedType(tag: DW_TAG_member, name: "sk_pacing_status", scope: !451, file: !452, line: 445, baseType: !707, size: 32, offset: 2976)
!7463 = !DIDerivedType(tag: DW_TAG_member, name: "sk_sndtimeo", scope: !451, file: !452, line: 446, baseType: !513, size: 64, offset: 3008)
!7464 = !DIDerivedType(tag: DW_TAG_member, name: "sk_timer", scope: !451, file: !452, line: 447, baseType: !2221, size: 320, offset: 3072)
!7465 = !DIDerivedType(tag: DW_TAG_member, name: "sk_priority", scope: !451, file: !452, line: 448, baseType: !468, size: 32, offset: 3392)
!7466 = !DIDerivedType(tag: DW_TAG_member, name: "sk_mark", scope: !451, file: !452, line: 449, baseType: !468, size: 32, offset: 3424)
!7467 = !DIDerivedType(tag: DW_TAG_member, name: "sk_pacing_rate", scope: !451, file: !452, line: 450, baseType: !317, size: 64, offset: 3456)
!7468 = !DIDerivedType(tag: DW_TAG_member, name: "sk_max_pacing_rate", scope: !451, file: !452, line: 451, baseType: !317, size: 64, offset: 3520)
!7469 = !DIDerivedType(tag: DW_TAG_member, name: "sk_frag", scope: !451, file: !452, line: 452, baseType: !5952, size: 128, offset: 3584)
!7470 = !DIDerivedType(tag: DW_TAG_member, name: "sk_route_caps", scope: !451, file: !452, line: 453, baseType: !334, size: 64, offset: 3712)
!7471 = !DIDerivedType(tag: DW_TAG_member, name: "sk_route_nocaps", scope: !451, file: !452, line: 454, baseType: !334, size: 64, offset: 3776)
!7472 = !DIDerivedType(tag: DW_TAG_member, name: "sk_route_forced_caps", scope: !451, file: !452, line: 455, baseType: !334, size: 64, offset: 3840)
!7473 = !DIDerivedType(tag: DW_TAG_member, name: "sk_gso_type", scope: !451, file: !452, line: 456, baseType: !37, size: 32, offset: 3904)
!7474 = !DIDerivedType(tag: DW_TAG_member, name: "sk_gso_max_size", scope: !451, file: !452, line: 457, baseType: !7, size: 32, offset: 3936)
!7475 = !DIDerivedType(tag: DW_TAG_member, name: "sk_allocation", scope: !451, file: !452, line: 458, baseType: !1990, size: 32, offset: 3968)
!7476 = !DIDerivedType(tag: DW_TAG_member, name: "sk_txhash", scope: !451, file: !452, line: 459, baseType: !468, size: 32, offset: 4000)
!7477 = !DIDerivedType(tag: DW_TAG_member, name: "sk_padding", scope: !451, file: !452, line: 465, baseType: !1397, size: 1, offset: 4032, flags: DIFlagBitField, extraData: i64 4032)
!7478 = !DIDerivedType(tag: DW_TAG_member, name: "sk_kern_sock", scope: !451, file: !452, line: 466, baseType: !1397, size: 1, offset: 4033, flags: DIFlagBitField, extraData: i64 4032)
!7479 = !DIDerivedType(tag: DW_TAG_member, name: "sk_no_check_tx", scope: !451, file: !452, line: 467, baseType: !1397, size: 1, offset: 4034, flags: DIFlagBitField, extraData: i64 4032)
!7480 = !DIDerivedType(tag: DW_TAG_member, name: "sk_no_check_rx", scope: !451, file: !452, line: 468, baseType: !1397, size: 1, offset: 4035, flags: DIFlagBitField, extraData: i64 4032)
!7481 = !DIDerivedType(tag: DW_TAG_member, name: "sk_userlocks", scope: !451, file: !452, line: 469, baseType: !1397, size: 4, offset: 4036, flags: DIFlagBitField, extraData: i64 4032)
!7482 = !DIDerivedType(tag: DW_TAG_member, name: "sk_pacing_shift", scope: !451, file: !452, line: 470, baseType: !1397, size: 8, offset: 4040)
!7483 = !DIDerivedType(tag: DW_TAG_member, name: "sk_type", scope: !451, file: !452, line: 471, baseType: !1038, size: 16, offset: 4048)
!7484 = !DIDerivedType(tag: DW_TAG_member, name: "sk_protocol", scope: !451, file: !452, line: 472, baseType: !1038, size: 16, offset: 4064)
!7485 = !DIDerivedType(tag: DW_TAG_member, name: "sk_gso_max_segs", scope: !451, file: !452, line: 473, baseType: !1038, size: 16, offset: 4080)
!7486 = !DIDerivedType(tag: DW_TAG_member, name: "sk_lingertime", scope: !451, file: !452, line: 474, baseType: !317, size: 64, offset: 4096)
!7487 = !DIDerivedType(tag: DW_TAG_member, name: "sk_prot_creator", scope: !451, file: !452, line: 475, baseType: !506, size: 64, offset: 4160)
!7488 = !DIDerivedType(tag: DW_TAG_member, name: "sk_callback_lock", scope: !451, file: !452, line: 476, baseType: !2772, offset: 4224)
!7489 = !DIDerivedType(tag: DW_TAG_member, name: "sk_err", scope: !451, file: !452, line: 477, baseType: !37, size: 32, offset: 4224)
!7490 = !DIDerivedType(tag: DW_TAG_member, name: "sk_err_soft", scope: !451, file: !452, line: 478, baseType: !37, size: 32, offset: 4256)
!7491 = !DIDerivedType(tag: DW_TAG_member, name: "sk_ack_backlog", scope: !451, file: !452, line: 479, baseType: !707, size: 32, offset: 4288)
!7492 = !DIDerivedType(tag: DW_TAG_member, name: "sk_max_ack_backlog", scope: !451, file: !452, line: 480, baseType: !707, size: 32, offset: 4320)
!7493 = !DIDerivedType(tag: DW_TAG_member, name: "sk_uid", scope: !451, file: !452, line: 481, baseType: !649, size: 32, offset: 4352)
!7494 = !DIDerivedType(tag: DW_TAG_member, name: "sk_peer_pid", scope: !451, file: !452, line: 482, baseType: !1521, size: 64, offset: 4416)
!7495 = !DIDerivedType(tag: DW_TAG_member, name: "sk_peer_cred", scope: !451, file: !452, line: 483, baseType: !1592, size: 64, offset: 4480)
!7496 = !DIDerivedType(tag: DW_TAG_member, name: "sk_rcvtimeo", scope: !451, file: !452, line: 484, baseType: !513, size: 64, offset: 4544)
!7497 = !DIDerivedType(tag: DW_TAG_member, name: "sk_stamp", scope: !451, file: !452, line: 485, baseType: !1341, size: 64, offset: 4608)
!7498 = !DIDerivedType(tag: DW_TAG_member, name: "sk_tsflags", scope: !451, file: !452, line: 489, baseType: !1038, size: 16, offset: 4672)
!7499 = !DIDerivedType(tag: DW_TAG_member, name: "sk_shutdown", scope: !451, file: !452, line: 490, baseType: !1397, size: 8, offset: 4688)
!7500 = !DIDerivedType(tag: DW_TAG_member, name: "sk_tskey", scope: !451, file: !452, line: 491, baseType: !707, size: 32, offset: 4704)
!7501 = !DIDerivedType(tag: DW_TAG_member, name: "sk_zckey", scope: !451, file: !452, line: 492, baseType: !388, size: 32, offset: 4736)
!7502 = !DIDerivedType(tag: DW_TAG_member, name: "sk_clockid", scope: !451, file: !452, line: 494, baseType: !1397, size: 8, offset: 4768)
!7503 = !DIDerivedType(tag: DW_TAG_member, name: "sk_txtime_deadline_mode", scope: !451, file: !452, line: 495, baseType: !1397, size: 1, offset: 4776, flags: DIFlagBitField, extraData: i64 4776)
!7504 = !DIDerivedType(tag: DW_TAG_member, name: "sk_txtime_report_errors", scope: !451, file: !452, line: 496, baseType: !1397, size: 1, offset: 4777, flags: DIFlagBitField, extraData: i64 4776)
!7505 = !DIDerivedType(tag: DW_TAG_member, name: "sk_txtime_unused", scope: !451, file: !452, line: 497, baseType: !1397, size: 6, offset: 4778, flags: DIFlagBitField, extraData: i64 4776)
!7506 = !DIDerivedType(tag: DW_TAG_member, name: "sk_socket", scope: !451, file: !452, line: 499, baseType: !7507, size: 64, offset: 4800)
!7507 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7508, size: 64)
!7508 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "socket", file: !7438, line: 116, size: 704, elements: !7509)
!7509 = !{!7510, !7520, !7521, !7522, !7523, !7524, !7627}
!7510 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !7508, file: !7438, line: 117, baseType: !7511, size: 32)
!7511 = !DIDerivedType(tag: DW_TAG_typedef, name: "socket_state", file: !7512, line: 54, baseType: !7513)
!7512 = !DIFile(filename: "./include/uapi/linux/net.h", directory: "/home/lizy2001/genbc/linux")
!7513 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !7512, line: 48, baseType: !7, size: 32, elements: !7514)
!7514 = !{!7515, !7516, !7517, !7518, !7519}
!7515 = !DIEnumerator(name: "SS_FREE", value: 0, isUnsigned: true)
!7516 = !DIEnumerator(name: "SS_UNCONNECTED", value: 1, isUnsigned: true)
!7517 = !DIEnumerator(name: "SS_CONNECTING", value: 2, isUnsigned: true)
!7518 = !DIEnumerator(name: "SS_CONNECTED", value: 3, isUnsigned: true)
!7519 = !DIEnumerator(name: "SS_DISCONNECTING", value: 4, isUnsigned: true)
!7520 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !7508, file: !7438, line: 119, baseType: !1246, size: 16, offset: 32)
!7521 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !7508, file: !7438, line: 121, baseType: !317, size: 64, offset: 64)
!7522 = !DIDerivedType(tag: DW_TAG_member, name: "file", scope: !7508, file: !7438, line: 123, baseType: !1010, size: 64, offset: 128)
!7523 = !DIDerivedType(tag: DW_TAG_member, name: "sk", scope: !7508, file: !7438, line: 124, baseType: !450, size: 64, offset: 192)
!7524 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !7508, file: !7438, line: 125, baseType: !7525, size: 64, offset: 256)
!7525 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7526, size: 64)
!7526 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7527)
!7527 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "proto_ops", file: !7438, line: 139, size: 1728, elements: !7528)
!7528 = !{!7529, !7530, !7531, !7532, !7536, !7540, !7544, !7548, !7552, !7553, !7557, !7561, !7565, !7569, !7570, !7574, !7578, !7582, !7586, !7590, !7594, !7598, !7602, !7603, !7604, !7624, !7625, !7626}
!7529 = !DIDerivedType(tag: DW_TAG_member, name: "family", scope: !7527, file: !7438, line: 140, baseType: !37, size: 32)
!7530 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !7527, file: !7438, line: 141, baseType: !7, size: 32, offset: 32)
!7531 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !7527, file: !7438, line: 142, baseType: !852, size: 64, offset: 64)
!7532 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !7527, file: !7438, line: 143, baseType: !7533, size: 64, offset: 128)
!7533 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7534, size: 64)
!7534 = !DISubroutineType(types: !7535)
!7535 = !{!37, !7507}
!7536 = !DIDerivedType(tag: DW_TAG_member, name: "bind", scope: !7527, file: !7438, line: 144, baseType: !7537, size: 64, offset: 192)
!7537 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7538, size: 64)
!7538 = !DISubroutineType(types: !7539)
!7539 = !{!37, !7507, !518, !37}
!7540 = !DIDerivedType(tag: DW_TAG_member, name: "connect", scope: !7527, file: !7438, line: 147, baseType: !7541, size: 64, offset: 256)
!7541 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7542, size: 64)
!7542 = !DISubroutineType(types: !7543)
!7543 = !{!37, !7507, !518, !37, !37}
!7544 = !DIDerivedType(tag: DW_TAG_member, name: "socketpair", scope: !7527, file: !7438, line: 150, baseType: !7545, size: 64, offset: 320)
!7545 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7546, size: 64)
!7546 = !DISubroutineType(types: !7547)
!7547 = !{!37, !7507, !7507}
!7548 = !DIDerivedType(tag: DW_TAG_member, name: "accept", scope: !7527, file: !7438, line: 152, baseType: !7549, size: 64, offset: 384)
!7549 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7550, size: 64)
!7550 = !DISubroutineType(types: !7551)
!7551 = !{!37, !7507, !7507, !37, !540}
!7552 = !DIDerivedType(tag: DW_TAG_member, name: "getname", scope: !7527, file: !7438, line: 154, baseType: !7537, size: 64, offset: 448)
!7553 = !DIDerivedType(tag: DW_TAG_member, name: "poll", scope: !7527, file: !7438, line: 157, baseType: !7554, size: 64, offset: 512)
!7554 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7555, size: 64)
!7555 = !DISubroutineType(types: !7556)
!7556 = !{!1089, !1010, !7507, !1090}
!7557 = !DIDerivedType(tag: DW_TAG_member, name: "ioctl", scope: !7527, file: !7438, line: 159, baseType: !7558, size: 64, offset: 576)
!7558 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7559, size: 64)
!7559 = !DISubroutineType(types: !7560)
!7560 = !{!37, !7507, !7, !317}
!7561 = !DIDerivedType(tag: DW_TAG_member, name: "gettstamp", scope: !7527, file: !7438, line: 165, baseType: !7562, size: 64, offset: 640)
!7562 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7563, size: 64)
!7563 = !DISubroutineType(types: !7564)
!7564 = !{!37, !7507, !570, !540, !540}
!7565 = !DIDerivedType(tag: DW_TAG_member, name: "listen", scope: !7527, file: !7438, line: 167, baseType: !7566, size: 64, offset: 704)
!7566 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7567, size: 64)
!7567 = !DISubroutineType(types: !7568)
!7568 = !{!37, !7507, !37}
!7569 = !DIDerivedType(tag: DW_TAG_member, name: "shutdown", scope: !7527, file: !7438, line: 168, baseType: !7566, size: 64, offset: 768)
!7570 = !DIDerivedType(tag: DW_TAG_member, name: "setsockopt", scope: !7527, file: !7438, line: 169, baseType: !7571, size: 64, offset: 832)
!7571 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7572, size: 64)
!7572 = !DISubroutineType(types: !7573)
!7573 = !{!37, !7507, !37, !37, !562, !7}
!7574 = !DIDerivedType(tag: DW_TAG_member, name: "getsockopt", scope: !7527, file: !7438, line: 172, baseType: !7575, size: 64, offset: 896)
!7575 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7576, size: 64)
!7576 = !DISubroutineType(types: !7577)
!7577 = !{!37, !7507, !37, !37, !577, !539}
!7578 = !DIDerivedType(tag: DW_TAG_member, name: "show_fdinfo", scope: !7527, file: !7438, line: 174, baseType: !7579, size: 64, offset: 960)
!7579 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7580, size: 64)
!7580 = !DISubroutineType(types: !7581)
!7581 = !{null, !942, !7507}
!7582 = !DIDerivedType(tag: DW_TAG_member, name: "sendmsg", scope: !7527, file: !7438, line: 175, baseType: !7583, size: 64, offset: 1024)
!7583 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7584, size: 64)
!7584 = !DISubroutineType(types: !7585)
!7585 = !{!37, !7507, !583, !594}
!7586 = !DIDerivedType(tag: DW_TAG_member, name: "recvmsg", scope: !7527, file: !7438, line: 185, baseType: !7587, size: 64, offset: 1088)
!7587 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7588, size: 64)
!7588 = !DISubroutineType(types: !7589)
!7589 = !{!37, !7507, !583, !594, !37}
!7590 = !DIDerivedType(tag: DW_TAG_member, name: "mmap", scope: !7527, file: !7438, line: 187, baseType: !7591, size: 64, offset: 1152)
!7591 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7592, size: 64)
!7592 = !DISubroutineType(types: !7593)
!7593 = !{!37, !1010, !7507, !1115}
!7594 = !DIDerivedType(tag: DW_TAG_member, name: "sendpage", scope: !7527, file: !7438, line: 189, baseType: !7595, size: 64, offset: 1216)
!7595 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7596, size: 64)
!7596 = !DISubroutineType(types: !7597)
!7597 = !{!1015, !7507, !624, !37, !594, !37}
!7598 = !DIDerivedType(tag: DW_TAG_member, name: "splice_read", scope: !7527, file: !7438, line: 191, baseType: !7599, size: 64, offset: 1280)
!7599 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7600, size: 64)
!7600 = !DISubroutineType(types: !7601)
!7601 = !{!1015, !7507, !969, !5894, !594, !7}
!7602 = !DIDerivedType(tag: DW_TAG_member, name: "set_peek_off", scope: !7527, file: !7438, line: 193, baseType: !532, size: 64, offset: 1344)
!7603 = !DIDerivedType(tag: DW_TAG_member, name: "peek_len", scope: !7527, file: !7438, line: 194, baseType: !7533, size: 64, offset: 1408)
!7604 = !DIDerivedType(tag: DW_TAG_member, name: "read_sock", scope: !7527, file: !7438, line: 199, baseType: !7605, size: 64, offset: 1472)
!7605 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7606, size: 64)
!7606 = !DISubroutineType(types: !7607)
!7607 = !{!37, !450, !7608, !7620}
!7608 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7609, size: 64)
!7609 = !DIDerivedType(tag: DW_TAG_typedef, name: "read_descriptor_t", file: !639, line: 362, baseType: !7610)
!7610 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !639, line: 354, size: 256, elements: !7611)
!7611 = !{!7612, !7613, !7614, !7619}
!7612 = !DIDerivedType(tag: DW_TAG_member, name: "written", scope: !7610, file: !639, line: 355, baseType: !594, size: 64)
!7613 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !7610, file: !639, line: 356, baseType: !594, size: 64, offset: 64)
!7614 = !DIDerivedType(tag: DW_TAG_member, name: "arg", scope: !7610, file: !639, line: 360, baseType: !7615, size: 64, offset: 128)
!7615 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7610, file: !639, line: 357, size: 64, elements: !7616)
!7616 = !{!7617, !7618}
!7617 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !7615, file: !639, line: 358, baseType: !577, size: 64)
!7618 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !7615, file: !639, line: 359, baseType: !570, size: 64)
!7619 = !DIDerivedType(tag: DW_TAG_member, name: "error", scope: !7610, file: !639, line: 361, baseType: !37, size: 32, offset: 192)
!7620 = !DIDerivedType(tag: DW_TAG_typedef, name: "sk_read_actor_t", file: !7438, line: 136, baseType: !7621)
!7621 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7622, size: 64)
!7622 = !DISubroutineType(types: !7623)
!7623 = !{!37, !7608, !420, !7, !594}
!7624 = !DIDerivedType(tag: DW_TAG_member, name: "sendpage_locked", scope: !7527, file: !7438, line: 201, baseType: !7227, size: 64, offset: 1536)
!7625 = !DIDerivedType(tag: DW_TAG_member, name: "sendmsg_locked", scope: !7527, file: !7438, line: 203, baseType: !580, size: 64, offset: 1600)
!7626 = !DIDerivedType(tag: DW_TAG_member, name: "set_rcvlowat", scope: !7527, file: !7438, line: 205, baseType: !532, size: 64, offset: 1664)
!7627 = !DIDerivedType(tag: DW_TAG_member, name: "wq", scope: !7508, file: !7438, line: 127, baseType: !7437, size: 384, offset: 320)
!7628 = !DIDerivedType(tag: DW_TAG_member, name: "sk_user_data", scope: !451, file: !452, line: 500, baseType: !570, size: 64, offset: 4864)
!7629 = !DIDerivedType(tag: DW_TAG_member, name: "sk_cgrp_data", scope: !451, file: !452, line: 504, baseType: !7630, offset: 4928)
!7630 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sock_cgroup_data", file: !7631, line: 871, elements: !743)
!7631 = !DIFile(filename: "./include/linux/cgroup-defs.h", directory: "/home/lizy2001/genbc/linux")
!7632 = !DIDerivedType(tag: DW_TAG_member, name: "sk_memcg", scope: !451, file: !452, line: 505, baseType: !6419, size: 64, offset: 4928)
!7633 = !DIDerivedType(tag: DW_TAG_member, name: "sk_state_change", scope: !451, file: !452, line: 506, baseType: !551, size: 64, offset: 4992)
!7634 = !DIDerivedType(tag: DW_TAG_member, name: "sk_data_ready", scope: !451, file: !452, line: 507, baseType: !551, size: 64, offset: 5056)
!7635 = !DIDerivedType(tag: DW_TAG_member, name: "sk_write_space", scope: !451, file: !452, line: 508, baseType: !551, size: 64, offset: 5120)
!7636 = !DIDerivedType(tag: DW_TAG_member, name: "sk_error_report", scope: !451, file: !452, line: 509, baseType: !551, size: 64, offset: 5184)
!7637 = !DIDerivedType(tag: DW_TAG_member, name: "sk_backlog_rcv", scope: !451, file: !452, line: 510, baseType: !7233, size: 64, offset: 5248)
!7638 = !DIDerivedType(tag: DW_TAG_member, name: "sk_destruct", scope: !451, file: !452, line: 517, baseType: !551, size: 64, offset: 5312)
!7639 = !DIDerivedType(tag: DW_TAG_member, name: "sk_reuseport_cb", scope: !451, file: !452, line: 518, baseType: !7640, size: 64, offset: 5376)
!7640 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7641, size: 64)
!7641 = !DICompositeType(tag: DW_TAG_structure_type, name: "sock_reuseport", file: !2911, line: 38, flags: DIFlagFwdDecl)
!7642 = !DIDerivedType(tag: DW_TAG_member, name: "sk_rcu", scope: !451, file: !452, line: 522, baseType: !304, size: 128, align: 64, offset: 5440)
!7643 = !DIDerivedType(tag: DW_TAG_member, name: "ip_defrag_offset", scope: !447, file: !422, line: 735, baseType: !37, size: 32)
!7644 = !DIDerivedType(tag: DW_TAG_member, scope: !421, file: !422, line: 738, baseType: !7645, size: 64, offset: 256)
!7645 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !421, file: !422, line: 738, size: 64, elements: !7646)
!7646 = !{!7647, !7648}
!7647 = !DIDerivedType(tag: DW_TAG_member, name: "tstamp", scope: !7645, file: !422, line: 739, baseType: !1341, size: 64)
!7648 = !DIDerivedType(tag: DW_TAG_member, name: "skb_mstamp_ns", scope: !7645, file: !422, line: 740, baseType: !336, size: 64)
!7649 = !DIDerivedType(tag: DW_TAG_member, name: "cb", scope: !421, file: !422, line: 748, baseType: !7650, size: 384, align: 64, offset: 320)
!7650 = !DICompositeType(tag: DW_TAG_array_type, baseType: !273, size: 384, elements: !7651)
!7651 = !{!7652}
!7652 = !DISubrange(count: 48)
!7653 = !DIDerivedType(tag: DW_TAG_member, scope: !421, file: !422, line: 750, baseType: !7654, size: 128, offset: 704)
!7654 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !421, file: !422, line: 750, size: 128, elements: !7655)
!7655 = !{!7656, !7661}
!7656 = !DIDerivedType(tag: DW_TAG_member, scope: !7654, file: !422, line: 751, baseType: !7657, size: 128)
!7657 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !7654, file: !422, line: 751, size: 128, elements: !7658)
!7658 = !{!7659, !7660}
!7659 = !DIDerivedType(tag: DW_TAG_member, name: "_skb_refdst", scope: !7657, file: !422, line: 752, baseType: !317, size: 64)
!7660 = !DIDerivedType(tag: DW_TAG_member, name: "destructor", scope: !7657, file: !422, line: 753, baseType: !2649, size: 64, offset: 64)
!7661 = !DIDerivedType(tag: DW_TAG_member, name: "tcp_tsorted_anchor", scope: !7654, file: !422, line: 755, baseType: !289, size: 128)
!7662 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !421, file: !422, line: 761, baseType: !7, size: 32, offset: 832)
!7663 = !DIDerivedType(tag: DW_TAG_member, name: "data_len", scope: !421, file: !422, line: 762, baseType: !7, size: 32, offset: 864)
!7664 = !DIDerivedType(tag: DW_TAG_member, name: "mac_len", scope: !421, file: !422, line: 763, baseType: !476, size: 16, offset: 896)
!7665 = !DIDerivedType(tag: DW_TAG_member, name: "hdr_len", scope: !421, file: !422, line: 764, baseType: !476, size: 16, offset: 912)
!7666 = !DIDerivedType(tag: DW_TAG_member, name: "queue_mapping", scope: !421, file: !422, line: 769, baseType: !476, size: 16, offset: 928)
!7667 = !DIDerivedType(tag: DW_TAG_member, name: "__cloned_offset", scope: !421, file: !422, line: 780, baseType: !7668, offset: 944)
!7668 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1398, elements: !1922)
!7669 = !DIDerivedType(tag: DW_TAG_member, name: "cloned", scope: !421, file: !422, line: 782, baseType: !1398, size: 1, offset: 944, flags: DIFlagBitField, extraData: i64 944)
!7670 = !DIDerivedType(tag: DW_TAG_member, name: "nohdr", scope: !421, file: !422, line: 783, baseType: !1398, size: 1, offset: 945, flags: DIFlagBitField, extraData: i64 944)
!7671 = !DIDerivedType(tag: DW_TAG_member, name: "fclone", scope: !421, file: !422, line: 784, baseType: !1398, size: 2, offset: 946, flags: DIFlagBitField, extraData: i64 944)
!7672 = !DIDerivedType(tag: DW_TAG_member, name: "peeked", scope: !421, file: !422, line: 785, baseType: !1398, size: 1, offset: 948, flags: DIFlagBitField, extraData: i64 944)
!7673 = !DIDerivedType(tag: DW_TAG_member, name: "head_frag", scope: !421, file: !422, line: 786, baseType: !1398, size: 1, offset: 949, flags: DIFlagBitField, extraData: i64 944)
!7674 = !DIDerivedType(tag: DW_TAG_member, name: "pfmemalloc", scope: !421, file: !422, line: 787, baseType: !1398, size: 1, offset: 950, flags: DIFlagBitField, extraData: i64 944)
!7675 = !DIDerivedType(tag: DW_TAG_member, name: "headers_start", scope: !421, file: !422, line: 795, baseType: !7676, offset: 960)
!7676 = !DICompositeType(tag: DW_TAG_array_type, baseType: !468, elements: !1922)
!7677 = !DIDerivedType(tag: DW_TAG_member, name: "__pkt_type_offset", scope: !421, file: !422, line: 807, baseType: !7668, offset: 960)
!7678 = !DIDerivedType(tag: DW_TAG_member, name: "pkt_type", scope: !421, file: !422, line: 809, baseType: !1398, size: 3, offset: 960, flags: DIFlagBitField, extraData: i64 960)
!7679 = !DIDerivedType(tag: DW_TAG_member, name: "ignore_df", scope: !421, file: !422, line: 810, baseType: !1398, size: 1, offset: 963, flags: DIFlagBitField, extraData: i64 960)
!7680 = !DIDerivedType(tag: DW_TAG_member, name: "nf_trace", scope: !421, file: !422, line: 811, baseType: !1398, size: 1, offset: 964, flags: DIFlagBitField, extraData: i64 960)
!7681 = !DIDerivedType(tag: DW_TAG_member, name: "ip_summed", scope: !421, file: !422, line: 812, baseType: !1398, size: 2, offset: 965, flags: DIFlagBitField, extraData: i64 960)
!7682 = !DIDerivedType(tag: DW_TAG_member, name: "ooo_okay", scope: !421, file: !422, line: 813, baseType: !1398, size: 1, offset: 967, flags: DIFlagBitField, extraData: i64 960)
!7683 = !DIDerivedType(tag: DW_TAG_member, name: "l4_hash", scope: !421, file: !422, line: 815, baseType: !1398, size: 1, offset: 968, flags: DIFlagBitField, extraData: i64 960)
!7684 = !DIDerivedType(tag: DW_TAG_member, name: "sw_hash", scope: !421, file: !422, line: 816, baseType: !1398, size: 1, offset: 969, flags: DIFlagBitField, extraData: i64 960)
!7685 = !DIDerivedType(tag: DW_TAG_member, name: "wifi_acked_valid", scope: !421, file: !422, line: 817, baseType: !1398, size: 1, offset: 970, flags: DIFlagBitField, extraData: i64 960)
!7686 = !DIDerivedType(tag: DW_TAG_member, name: "wifi_acked", scope: !421, file: !422, line: 818, baseType: !1398, size: 1, offset: 971, flags: DIFlagBitField, extraData: i64 960)
!7687 = !DIDerivedType(tag: DW_TAG_member, name: "no_fcs", scope: !421, file: !422, line: 819, baseType: !1398, size: 1, offset: 972, flags: DIFlagBitField, extraData: i64 960)
!7688 = !DIDerivedType(tag: DW_TAG_member, name: "encapsulation", scope: !421, file: !422, line: 821, baseType: !1398, size: 1, offset: 973, flags: DIFlagBitField, extraData: i64 960)
!7689 = !DIDerivedType(tag: DW_TAG_member, name: "encap_hdr_csum", scope: !421, file: !422, line: 822, baseType: !1398, size: 1, offset: 974, flags: DIFlagBitField, extraData: i64 960)
!7690 = !DIDerivedType(tag: DW_TAG_member, name: "csum_valid", scope: !421, file: !422, line: 823, baseType: !1398, size: 1, offset: 975, flags: DIFlagBitField, extraData: i64 960)
!7691 = !DIDerivedType(tag: DW_TAG_member, name: "__pkt_vlan_present_offset", scope: !421, file: !422, line: 832, baseType: !7668, offset: 976)
!7692 = !DIDerivedType(tag: DW_TAG_member, name: "vlan_present", scope: !421, file: !422, line: 834, baseType: !1398, size: 1, offset: 976, flags: DIFlagBitField, extraData: i64 976)
!7693 = !DIDerivedType(tag: DW_TAG_member, name: "csum_complete_sw", scope: !421, file: !422, line: 835, baseType: !1398, size: 1, offset: 977, flags: DIFlagBitField, extraData: i64 976)
!7694 = !DIDerivedType(tag: DW_TAG_member, name: "csum_level", scope: !421, file: !422, line: 836, baseType: !1398, size: 2, offset: 978, flags: DIFlagBitField, extraData: i64 976)
!7695 = !DIDerivedType(tag: DW_TAG_member, name: "csum_not_inet", scope: !421, file: !422, line: 837, baseType: !1398, size: 1, offset: 980, flags: DIFlagBitField, extraData: i64 976)
!7696 = !DIDerivedType(tag: DW_TAG_member, name: "dst_pending_confirm", scope: !421, file: !422, line: 838, baseType: !1398, size: 1, offset: 981, flags: DIFlagBitField, extraData: i64 976)
!7697 = !DIDerivedType(tag: DW_TAG_member, name: "ndisc_nodetype", scope: !421, file: !422, line: 840, baseType: !1398, size: 2, offset: 982, flags: DIFlagBitField, extraData: i64 976)
!7698 = !DIDerivedType(tag: DW_TAG_member, name: "ipvs_property", scope: !421, file: !422, line: 843, baseType: !1398, size: 1, offset: 984, flags: DIFlagBitField, extraData: i64 976)
!7699 = !DIDerivedType(tag: DW_TAG_member, name: "inner_protocol_type", scope: !421, file: !422, line: 844, baseType: !1398, size: 1, offset: 985, flags: DIFlagBitField, extraData: i64 976)
!7700 = !DIDerivedType(tag: DW_TAG_member, name: "remcsum_offload", scope: !421, file: !422, line: 845, baseType: !1398, size: 1, offset: 986, flags: DIFlagBitField, extraData: i64 976)
!7701 = !DIDerivedType(tag: DW_TAG_member, name: "offload_fwd_mark", scope: !421, file: !422, line: 847, baseType: !1398, size: 1, offset: 987, flags: DIFlagBitField, extraData: i64 976)
!7702 = !DIDerivedType(tag: DW_TAG_member, name: "offload_l3_fwd_mark", scope: !421, file: !422, line: 848, baseType: !1398, size: 1, offset: 988, flags: DIFlagBitField, extraData: i64 976)
!7703 = !DIDerivedType(tag: DW_TAG_member, scope: !421, file: !422, line: 866, baseType: !7704, size: 32, offset: 992)
!7704 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !421, file: !422, line: 866, size: 32, elements: !7705)
!7705 = !{!7706, !7708}
!7706 = !DIDerivedType(tag: DW_TAG_member, name: "csum", scope: !7704, file: !422, line: 867, baseType: !7707, size: 32)
!7707 = !DIDerivedType(tag: DW_TAG_typedef, name: "__wsum", file: !467, line: 37, baseType: !468)
!7708 = !DIDerivedType(tag: DW_TAG_member, scope: !7704, file: !422, line: 868, baseType: !7709, size: 32)
!7709 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !7704, file: !422, line: 868, size: 32, elements: !7710)
!7710 = !{!7711, !7712}
!7711 = !DIDerivedType(tag: DW_TAG_member, name: "csum_start", scope: !7709, file: !422, line: 869, baseType: !476, size: 16)
!7712 = !DIDerivedType(tag: DW_TAG_member, name: "csum_offset", scope: !7709, file: !422, line: 870, baseType: !476, size: 16, offset: 16)
!7713 = !DIDerivedType(tag: DW_TAG_member, name: "priority", scope: !421, file: !422, line: 873, baseType: !468, size: 32, offset: 1024)
!7714 = !DIDerivedType(tag: DW_TAG_member, name: "skb_iif", scope: !421, file: !422, line: 874, baseType: !37, size: 32, offset: 1056)
!7715 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !421, file: !422, line: 875, baseType: !468, size: 32, offset: 1088)
!7716 = !DIDerivedType(tag: DW_TAG_member, name: "vlan_proto", scope: !421, file: !422, line: 876, baseType: !489, size: 16, offset: 1120)
!7717 = !DIDerivedType(tag: DW_TAG_member, name: "vlan_tci", scope: !421, file: !422, line: 877, baseType: !476, size: 16, offset: 1136)
!7718 = !DIDerivedType(tag: DW_TAG_member, scope: !421, file: !422, line: 879, baseType: !7719, size: 32, offset: 1152)
!7719 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !421, file: !422, line: 879, size: 32, elements: !7720)
!7720 = !{!7721, !7722}
!7721 = !DIDerivedType(tag: DW_TAG_member, name: "napi_id", scope: !7719, file: !422, line: 880, baseType: !7, size: 32)
!7722 = !DIDerivedType(tag: DW_TAG_member, name: "sender_cpu", scope: !7719, file: !422, line: 881, baseType: !7, size: 32)
!7723 = !DIDerivedType(tag: DW_TAG_member, scope: !421, file: !422, line: 888, baseType: !7724, size: 32, offset: 1184)
!7724 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !421, file: !422, line: 888, size: 32, elements: !7725)
!7725 = !{!7726, !7727}
!7726 = !DIDerivedType(tag: DW_TAG_member, name: "mark", scope: !7724, file: !422, line: 889, baseType: !468, size: 32)
!7727 = !DIDerivedType(tag: DW_TAG_member, name: "reserved_tailroom", scope: !7724, file: !422, line: 890, baseType: !468, size: 32)
!7728 = !DIDerivedType(tag: DW_TAG_member, scope: !421, file: !422, line: 893, baseType: !7729, size: 16, offset: 1216)
!7729 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !421, file: !422, line: 893, size: 16, elements: !7730)
!7730 = !{!7731, !7732}
!7731 = !DIDerivedType(tag: DW_TAG_member, name: "inner_protocol", scope: !7729, file: !422, line: 894, baseType: !489, size: 16)
!7732 = !DIDerivedType(tag: DW_TAG_member, name: "inner_ipproto", scope: !7729, file: !422, line: 895, baseType: !1398, size: 8)
!7733 = !DIDerivedType(tag: DW_TAG_member, name: "inner_transport_header", scope: !421, file: !422, line: 898, baseType: !476, size: 16, offset: 1232)
!7734 = !DIDerivedType(tag: DW_TAG_member, name: "inner_network_header", scope: !421, file: !422, line: 899, baseType: !476, size: 16, offset: 1248)
!7735 = !DIDerivedType(tag: DW_TAG_member, name: "inner_mac_header", scope: !421, file: !422, line: 900, baseType: !476, size: 16, offset: 1264)
!7736 = !DIDerivedType(tag: DW_TAG_member, name: "protocol", scope: !421, file: !422, line: 902, baseType: !489, size: 16, offset: 1280)
!7737 = !DIDerivedType(tag: DW_TAG_member, name: "transport_header", scope: !421, file: !422, line: 903, baseType: !476, size: 16, offset: 1296)
!7738 = !DIDerivedType(tag: DW_TAG_member, name: "network_header", scope: !421, file: !422, line: 904, baseType: !476, size: 16, offset: 1312)
!7739 = !DIDerivedType(tag: DW_TAG_member, name: "mac_header", scope: !421, file: !422, line: 905, baseType: !476, size: 16, offset: 1328)
!7740 = !DIDerivedType(tag: DW_TAG_member, name: "headers_end", scope: !421, file: !422, line: 908, baseType: !7676, offset: 1344)
!7741 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !421, file: !422, line: 912, baseType: !7742, size: 32, offset: 1344)
!7742 = !DIDerivedType(tag: DW_TAG_typedef, name: "sk_buff_data_t", file: !422, line: 606, baseType: !7)
!7743 = !DIDerivedType(tag: DW_TAG_member, name: "end", scope: !421, file: !422, line: 913, baseType: !7742, size: 32, offset: 1376)
!7744 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !421, file: !422, line: 914, baseType: !7745, size: 64, offset: 1408)
!7745 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !494, size: 64)
!7746 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !421, file: !422, line: 915, baseType: !7745, size: 64, offset: 1472)
!7747 = !DIDerivedType(tag: DW_TAG_member, name: "truesize", scope: !421, file: !422, line: 916, baseType: !7, size: 32, offset: 1536)
!7748 = !DIDerivedType(tag: DW_TAG_member, name: "users", scope: !421, file: !422, line: 917, baseType: !1271, size: 32, offset: 1568)
!7749 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_features_check", scope: !403, file: !36, line: 1290, baseType: !7750, size: 64, offset: 320)
!7750 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7751, size: 64)
!7751 = !DISubroutineType(types: !7752)
!7752 = !{!334, !420, !295, !334}
!7753 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_select_queue", scope: !403, file: !36, line: 1293, baseType: !7754, size: 64, offset: 384)
!7754 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7755, size: 64)
!7755 = !DISubroutineType(types: !7756)
!7756 = !{!1038, !295, !420, !295}
!7757 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_change_rx_flags", scope: !403, file: !36, line: 1296, baseType: !7758, size: 64, offset: 448)
!7758 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7759, size: 64)
!7759 = !DISubroutineType(types: !7760)
!7760 = !{null, !295, !37}
!7761 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_set_rx_mode", scope: !403, file: !36, line: 1298, baseType: !410, size: 64, offset: 512)
!7762 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_set_mac_address", scope: !403, file: !36, line: 1299, baseType: !7763, size: 64, offset: 576)
!7763 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7764, size: 64)
!7764 = !DISubroutineType(types: !7765)
!7765 = !{!37, !295, !570}
!7766 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_validate_addr", scope: !403, file: !36, line: 1301, baseType: !406, size: 64, offset: 640)
!7767 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_do_ioctl", scope: !403, file: !36, line: 1302, baseType: !7768, size: 64, offset: 704)
!7768 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7769, size: 64)
!7769 = !DISubroutineType(types: !7770)
!7770 = !{!37, !295, !7771, !37}
!7771 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7772, size: 64)
!7772 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ifreq", file: !7773, line: 234, size: 320, elements: !7774)
!7773 = !DIFile(filename: "./include/uapi/linux/if.h", directory: "/home/lizy2001/genbc/linux")
!7774 = !{!7775, !7779}
!7775 = !DIDerivedType(tag: DW_TAG_member, name: "ifr_ifrn", scope: !7772, file: !7773, line: 239, baseType: !7776, size: 128)
!7776 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7772, file: !7773, line: 236, size: 128, elements: !7777)
!7777 = !{!7778}
!7778 = !DIDerivedType(tag: DW_TAG_member, name: "ifrn_name", scope: !7776, file: !7773, line: 238, baseType: !272, size: 128)
!7779 = !DIDerivedType(tag: DW_TAG_member, name: "ifr_ifru", scope: !7772, file: !7773, line: 255, baseType: !7780, size: 192, offset: 128)
!7780 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7772, file: !7773, line: 241, size: 192, elements: !7781)
!7781 = !{!7782, !7783, !7784, !7785, !7786, !7787, !7788, !7789, !7790, !7799, !7800, !7801, !7802}
!7782 = !DIDerivedType(tag: DW_TAG_member, name: "ifru_addr", scope: !7780, file: !7773, line: 242, baseType: !519, size: 128)
!7783 = !DIDerivedType(tag: DW_TAG_member, name: "ifru_dstaddr", scope: !7780, file: !7773, line: 243, baseType: !519, size: 128)
!7784 = !DIDerivedType(tag: DW_TAG_member, name: "ifru_broadaddr", scope: !7780, file: !7773, line: 244, baseType: !519, size: 128)
!7785 = !DIDerivedType(tag: DW_TAG_member, name: "ifru_netmask", scope: !7780, file: !7773, line: 245, baseType: !519, size: 128)
!7786 = !DIDerivedType(tag: DW_TAG_member, name: "ifru_hwaddr", scope: !7780, file: !7773, line: 246, baseType: !519, size: 128)
!7787 = !DIDerivedType(tag: DW_TAG_member, name: "ifru_flags", scope: !7780, file: !7773, line: 247, baseType: !1246, size: 16)
!7788 = !DIDerivedType(tag: DW_TAG_member, name: "ifru_ivalue", scope: !7780, file: !7773, line: 248, baseType: !37, size: 32)
!7789 = !DIDerivedType(tag: DW_TAG_member, name: "ifru_mtu", scope: !7780, file: !7773, line: 249, baseType: !37, size: 32)
!7790 = !DIDerivedType(tag: DW_TAG_member, name: "ifru_map", scope: !7780, file: !7773, line: 250, baseType: !7791, size: 192)
!7791 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ifmap", file: !7773, line: 196, size: 192, elements: !7792)
!7792 = !{!7793, !7794, !7795, !7796, !7797, !7798}
!7793 = !DIDerivedType(tag: DW_TAG_member, name: "mem_start", scope: !7791, file: !7773, line: 197, baseType: !317, size: 64)
!7794 = !DIDerivedType(tag: DW_TAG_member, name: "mem_end", scope: !7791, file: !7773, line: 198, baseType: !317, size: 64, offset: 64)
!7795 = !DIDerivedType(tag: DW_TAG_member, name: "base_addr", scope: !7791, file: !7773, line: 199, baseType: !477, size: 16, offset: 128)
!7796 = !DIDerivedType(tag: DW_TAG_member, name: "irq", scope: !7791, file: !7773, line: 200, baseType: !494, size: 8, offset: 144)
!7797 = !DIDerivedType(tag: DW_TAG_member, name: "dma", scope: !7791, file: !7773, line: 201, baseType: !494, size: 8, offset: 152)
!7798 = !DIDerivedType(tag: DW_TAG_member, name: "port", scope: !7791, file: !7773, line: 202, baseType: !494, size: 8, offset: 160)
!7799 = !DIDerivedType(tag: DW_TAG_member, name: "ifru_slave", scope: !7780, file: !7773, line: 251, baseType: !272, size: 128)
!7800 = !DIDerivedType(tag: DW_TAG_member, name: "ifru_newname", scope: !7780, file: !7773, line: 252, baseType: !272, size: 128)
!7801 = !DIDerivedType(tag: DW_TAG_member, name: "ifru_data", scope: !7780, file: !7773, line: 253, baseType: !570, size: 64)
!7802 = !DIDerivedType(tag: DW_TAG_member, name: "ifru_settings", scope: !7780, file: !7773, line: 254, baseType: !7803, size: 128)
!7803 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "if_settings", file: !7773, line: 207, size: 128, elements: !7804)
!7804 = !{!7805, !7806, !7807}
!7805 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !7803, file: !7773, line: 208, baseType: !7, size: 32)
!7806 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !7803, file: !7773, line: 209, baseType: !7, size: 32, offset: 32)
!7807 = !DIDerivedType(tag: DW_TAG_member, name: "ifs_ifsu", scope: !7803, file: !7773, line: 222, baseType: !7808, size: 64, offset: 64)
!7808 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7803, file: !7773, line: 210, size: 64, elements: !7809)
!7809 = !{!7810, !7818, !7825, !7837, !7843, !7850, !7861, !7869}
!7810 = !DIDerivedType(tag: DW_TAG_member, name: "raw_hdlc", scope: !7808, file: !7773, line: 212, baseType: !7811, size: 64)
!7811 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7812, size: 64)
!7812 = !DIDerivedType(tag: DW_TAG_typedef, name: "raw_hdlc_proto", file: !7813, line: 56, baseType: !7814)
!7813 = !DIFile(filename: "./include/uapi/linux/hdlc/ioctl.h", directory: "/home/lizy2001/genbc/linux")
!7814 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !7813, line: 53, size: 32, elements: !7815)
!7815 = !{!7816, !7817}
!7816 = !DIDerivedType(tag: DW_TAG_member, name: "encoding", scope: !7814, file: !7813, line: 54, baseType: !477, size: 16)
!7817 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !7814, file: !7813, line: 55, baseType: !477, size: 16, offset: 16)
!7818 = !DIDerivedType(tag: DW_TAG_member, name: "cisco", scope: !7808, file: !7773, line: 213, baseType: !7819, size: 64)
!7819 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7820, size: 64)
!7820 = !DIDerivedType(tag: DW_TAG_typedef, name: "cisco_proto", file: !7813, line: 80, baseType: !7821)
!7821 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !7813, line: 77, size: 64, elements: !7822)
!7822 = !{!7823, !7824}
!7823 = !DIDerivedType(tag: DW_TAG_member, name: "interval", scope: !7821, file: !7813, line: 78, baseType: !7, size: 32)
!7824 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !7821, file: !7813, line: 79, baseType: !7, size: 32, offset: 32)
!7825 = !DIDerivedType(tag: DW_TAG_member, name: "fr", scope: !7808, file: !7773, line: 214, baseType: !7826, size: 64)
!7826 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7827, size: 64)
!7827 = !DIDerivedType(tag: DW_TAG_typedef, name: "fr_proto", file: !7813, line: 66, baseType: !7828)
!7828 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !7813, line: 58, size: 192, elements: !7829)
!7829 = !{!7830, !7831, !7832, !7833, !7834, !7835, !7836}
!7830 = !DIDerivedType(tag: DW_TAG_member, name: "t391", scope: !7828, file: !7813, line: 59, baseType: !7, size: 32)
!7831 = !DIDerivedType(tag: DW_TAG_member, name: "t392", scope: !7828, file: !7813, line: 60, baseType: !7, size: 32, offset: 32)
!7832 = !DIDerivedType(tag: DW_TAG_member, name: "n391", scope: !7828, file: !7813, line: 61, baseType: !7, size: 32, offset: 64)
!7833 = !DIDerivedType(tag: DW_TAG_member, name: "n392", scope: !7828, file: !7813, line: 62, baseType: !7, size: 32, offset: 96)
!7834 = !DIDerivedType(tag: DW_TAG_member, name: "n393", scope: !7828, file: !7813, line: 63, baseType: !7, size: 32, offset: 128)
!7835 = !DIDerivedType(tag: DW_TAG_member, name: "lmi", scope: !7828, file: !7813, line: 64, baseType: !477, size: 16, offset: 160)
!7836 = !DIDerivedType(tag: DW_TAG_member, name: "dce", scope: !7828, file: !7813, line: 65, baseType: !477, size: 16, offset: 176)
!7837 = !DIDerivedType(tag: DW_TAG_member, name: "fr_pvc", scope: !7808, file: !7773, line: 215, baseType: !7838, size: 64)
!7838 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7839, size: 64)
!7839 = !DIDerivedType(tag: DW_TAG_typedef, name: "fr_proto_pvc", file: !7813, line: 70, baseType: !7840)
!7840 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !7813, line: 68, size: 32, elements: !7841)
!7841 = !{!7842}
!7842 = !DIDerivedType(tag: DW_TAG_member, name: "dlci", scope: !7840, file: !7813, line: 69, baseType: !7, size: 32)
!7843 = !DIDerivedType(tag: DW_TAG_member, name: "fr_pvc_info", scope: !7808, file: !7773, line: 216, baseType: !7844, size: 64)
!7844 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7845, size: 64)
!7845 = !DIDerivedType(tag: DW_TAG_typedef, name: "fr_proto_pvc_info", file: !7813, line: 75, baseType: !7846)
!7846 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !7813, line: 72, size: 160, elements: !7847)
!7847 = !{!7848, !7849}
!7848 = !DIDerivedType(tag: DW_TAG_member, name: "dlci", scope: !7846, file: !7813, line: 73, baseType: !7, size: 32)
!7849 = !DIDerivedType(tag: DW_TAG_member, name: "master", scope: !7846, file: !7813, line: 74, baseType: !272, size: 128, offset: 32)
!7850 = !DIDerivedType(tag: DW_TAG_member, name: "x25", scope: !7808, file: !7773, line: 217, baseType: !7851, size: 64)
!7851 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7852, size: 64)
!7852 = !DIDerivedType(tag: DW_TAG_typedef, name: "x25_hdlc_proto", file: !7813, line: 89, baseType: !7853)
!7853 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !7813, line: 82, size: 192, elements: !7854)
!7854 = !{!7855, !7856, !7857, !7858, !7859, !7860}
!7855 = !DIDerivedType(tag: DW_TAG_member, name: "dce", scope: !7853, file: !7813, line: 83, baseType: !477, size: 16)
!7856 = !DIDerivedType(tag: DW_TAG_member, name: "modulo", scope: !7853, file: !7813, line: 84, baseType: !7, size: 32, offset: 32)
!7857 = !DIDerivedType(tag: DW_TAG_member, name: "window", scope: !7853, file: !7813, line: 85, baseType: !7, size: 32, offset: 64)
!7858 = !DIDerivedType(tag: DW_TAG_member, name: "t1", scope: !7853, file: !7813, line: 86, baseType: !7, size: 32, offset: 96)
!7859 = !DIDerivedType(tag: DW_TAG_member, name: "t2", scope: !7853, file: !7813, line: 87, baseType: !7, size: 32, offset: 128)
!7860 = !DIDerivedType(tag: DW_TAG_member, name: "n2", scope: !7853, file: !7813, line: 88, baseType: !7, size: 32, offset: 160)
!7861 = !DIDerivedType(tag: DW_TAG_member, name: "sync", scope: !7808, file: !7773, line: 220, baseType: !7862, size: 64)
!7862 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7863, size: 64)
!7863 = !DIDerivedType(tag: DW_TAG_typedef, name: "sync_serial_settings", file: !7813, line: 44, baseType: !7864)
!7864 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !7813, line: 40, size: 96, elements: !7865)
!7865 = !{!7866, !7867, !7868}
!7866 = !DIDerivedType(tag: DW_TAG_member, name: "clock_rate", scope: !7864, file: !7813, line: 41, baseType: !7, size: 32)
!7867 = !DIDerivedType(tag: DW_TAG_member, name: "clock_type", scope: !7864, file: !7813, line: 42, baseType: !7, size: 32, offset: 32)
!7868 = !DIDerivedType(tag: DW_TAG_member, name: "loopback", scope: !7864, file: !7813, line: 43, baseType: !477, size: 16, offset: 64)
!7869 = !DIDerivedType(tag: DW_TAG_member, name: "te1", scope: !7808, file: !7773, line: 221, baseType: !7870, size: 64)
!7870 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7871, size: 64)
!7871 = !DIDerivedType(tag: DW_TAG_typedef, name: "te1_settings", file: !7813, line: 51, baseType: !7872)
!7872 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !7813, line: 46, size: 128, elements: !7873)
!7873 = !{!7874, !7875, !7876, !7877}
!7874 = !DIDerivedType(tag: DW_TAG_member, name: "clock_rate", scope: !7872, file: !7813, line: 47, baseType: !7, size: 32)
!7875 = !DIDerivedType(tag: DW_TAG_member, name: "clock_type", scope: !7872, file: !7813, line: 48, baseType: !7, size: 32, offset: 32)
!7876 = !DIDerivedType(tag: DW_TAG_member, name: "loopback", scope: !7872, file: !7813, line: 49, baseType: !477, size: 16, offset: 64)
!7877 = !DIDerivedType(tag: DW_TAG_member, name: "slot_map", scope: !7872, file: !7813, line: 50, baseType: !7, size: 32, offset: 96)
!7878 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_set_config", scope: !403, file: !36, line: 1304, baseType: !7879, size: 64, offset: 768)
!7879 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7880, size: 64)
!7880 = !DISubroutineType(types: !7881)
!7881 = !{!37, !295, !7882}
!7882 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7791, size: 64)
!7883 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_change_mtu", scope: !403, file: !36, line: 1306, baseType: !7884, size: 64, offset: 832)
!7884 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7885, size: 64)
!7885 = !DISubroutineType(types: !7886)
!7886 = !{!37, !295, !37}
!7887 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_neigh_setup", scope: !403, file: !36, line: 1308, baseType: !7888, size: 64, offset: 896)
!7888 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7889, size: 64)
!7889 = !DISubroutineType(types: !7890)
!7890 = !{!37, !295, !2809}
!7891 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_tx_timeout", scope: !403, file: !36, line: 1310, baseType: !7892, size: 64, offset: 960)
!7892 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7893, size: 64)
!7893 = !DISubroutineType(types: !7894)
!7894 = !{null, !295, !7}
!7895 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_get_stats64", scope: !403, file: !36, line: 1313, baseType: !7896, size: 64, offset: 1024)
!7896 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7897, size: 64)
!7897 = !DISubroutineType(types: !7898)
!7898 = !{null, !295, !7899}
!7899 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7900, size: 64)
!7900 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtnl_link_stats64", file: !7901, line: 214, size: 1536, elements: !7902)
!7901 = !DIFile(filename: "./include/uapi/linux/if_link.h", directory: "/home/lizy2001/genbc/linux")
!7902 = !{!7903, !7904, !7905, !7906, !7907, !7908, !7909, !7910, !7911, !7912, !7913, !7914, !7915, !7916, !7917, !7918, !7919, !7920, !7921, !7922, !7923, !7924, !7925, !7926}
!7903 = !DIDerivedType(tag: DW_TAG_member, name: "rx_packets", scope: !7900, file: !7901, line: 215, baseType: !338, size: 64)
!7904 = !DIDerivedType(tag: DW_TAG_member, name: "tx_packets", scope: !7900, file: !7901, line: 216, baseType: !338, size: 64, offset: 64)
!7905 = !DIDerivedType(tag: DW_TAG_member, name: "rx_bytes", scope: !7900, file: !7901, line: 217, baseType: !338, size: 64, offset: 128)
!7906 = !DIDerivedType(tag: DW_TAG_member, name: "tx_bytes", scope: !7900, file: !7901, line: 218, baseType: !338, size: 64, offset: 192)
!7907 = !DIDerivedType(tag: DW_TAG_member, name: "rx_errors", scope: !7900, file: !7901, line: 219, baseType: !338, size: 64, offset: 256)
!7908 = !DIDerivedType(tag: DW_TAG_member, name: "tx_errors", scope: !7900, file: !7901, line: 220, baseType: !338, size: 64, offset: 320)
!7909 = !DIDerivedType(tag: DW_TAG_member, name: "rx_dropped", scope: !7900, file: !7901, line: 221, baseType: !338, size: 64, offset: 384)
!7910 = !DIDerivedType(tag: DW_TAG_member, name: "tx_dropped", scope: !7900, file: !7901, line: 222, baseType: !338, size: 64, offset: 448)
!7911 = !DIDerivedType(tag: DW_TAG_member, name: "multicast", scope: !7900, file: !7901, line: 223, baseType: !338, size: 64, offset: 512)
!7912 = !DIDerivedType(tag: DW_TAG_member, name: "collisions", scope: !7900, file: !7901, line: 224, baseType: !338, size: 64, offset: 576)
!7913 = !DIDerivedType(tag: DW_TAG_member, name: "rx_length_errors", scope: !7900, file: !7901, line: 227, baseType: !338, size: 64, offset: 640)
!7914 = !DIDerivedType(tag: DW_TAG_member, name: "rx_over_errors", scope: !7900, file: !7901, line: 228, baseType: !338, size: 64, offset: 704)
!7915 = !DIDerivedType(tag: DW_TAG_member, name: "rx_crc_errors", scope: !7900, file: !7901, line: 229, baseType: !338, size: 64, offset: 768)
!7916 = !DIDerivedType(tag: DW_TAG_member, name: "rx_frame_errors", scope: !7900, file: !7901, line: 230, baseType: !338, size: 64, offset: 832)
!7917 = !DIDerivedType(tag: DW_TAG_member, name: "rx_fifo_errors", scope: !7900, file: !7901, line: 231, baseType: !338, size: 64, offset: 896)
!7918 = !DIDerivedType(tag: DW_TAG_member, name: "rx_missed_errors", scope: !7900, file: !7901, line: 232, baseType: !338, size: 64, offset: 960)
!7919 = !DIDerivedType(tag: DW_TAG_member, name: "tx_aborted_errors", scope: !7900, file: !7901, line: 235, baseType: !338, size: 64, offset: 1024)
!7920 = !DIDerivedType(tag: DW_TAG_member, name: "tx_carrier_errors", scope: !7900, file: !7901, line: 236, baseType: !338, size: 64, offset: 1088)
!7921 = !DIDerivedType(tag: DW_TAG_member, name: "tx_fifo_errors", scope: !7900, file: !7901, line: 237, baseType: !338, size: 64, offset: 1152)
!7922 = !DIDerivedType(tag: DW_TAG_member, name: "tx_heartbeat_errors", scope: !7900, file: !7901, line: 238, baseType: !338, size: 64, offset: 1216)
!7923 = !DIDerivedType(tag: DW_TAG_member, name: "tx_window_errors", scope: !7900, file: !7901, line: 239, baseType: !338, size: 64, offset: 1280)
!7924 = !DIDerivedType(tag: DW_TAG_member, name: "rx_compressed", scope: !7900, file: !7901, line: 242, baseType: !338, size: 64, offset: 1344)
!7925 = !DIDerivedType(tag: DW_TAG_member, name: "tx_compressed", scope: !7900, file: !7901, line: 243, baseType: !338, size: 64, offset: 1408)
!7926 = !DIDerivedType(tag: DW_TAG_member, name: "rx_nohandler", scope: !7900, file: !7901, line: 244, baseType: !338, size: 64, offset: 1472)
!7927 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_has_offload_stats", scope: !403, file: !36, line: 1315, baseType: !7928, size: 64, offset: 1088)
!7928 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7929, size: 64)
!7929 = !DISubroutineType(types: !7930)
!7930 = !{!540, !2682, !37}
!7931 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_get_offload_stats", scope: !403, file: !36, line: 1316, baseType: !7932, size: 64, offset: 1152)
!7932 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7933, size: 64)
!7933 = !DISubroutineType(types: !7934)
!7934 = !{!37, !37, !2682, !570}
!7935 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_get_stats", scope: !403, file: !36, line: 1319, baseType: !7936, size: 64, offset: 1216)
!7936 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7937, size: 64)
!7937 = !DISubroutineType(types: !7938)
!7938 = !{!7939, !295}
!7939 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !350, size: 64)
!7940 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_vlan_rx_add_vid", scope: !403, file: !36, line: 1321, baseType: !7941, size: 64, offset: 1280)
!7941 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7942, size: 64)
!7942 = !DISubroutineType(types: !7943)
!7943 = !{!37, !295, !489, !1038}
!7944 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_vlan_rx_kill_vid", scope: !403, file: !36, line: 1323, baseType: !7941, size: 64, offset: 1344)
!7945 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_set_vf_mac", scope: !403, file: !36, line: 1331, baseType: !7946, size: 64, offset: 1408)
!7946 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7947, size: 64)
!7947 = !DISubroutineType(types: !7948)
!7948 = !{!37, !295, !37, !7949}
!7949 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1397, size: 64)
!7950 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_set_vf_vlan", scope: !403, file: !36, line: 1333, baseType: !7951, size: 64, offset: 1472)
!7951 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7952, size: 64)
!7952 = !DISubroutineType(types: !7953)
!7953 = !{!37, !295, !37, !1038, !1397, !489}
!7954 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_set_vf_rate", scope: !403, file: !36, line: 1336, baseType: !7955, size: 64, offset: 1536)
!7955 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7956, size: 64)
!7956 = !DISubroutineType(types: !7957)
!7957 = !{!37, !295, !37, !37, !37}
!7958 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_set_vf_spoofchk", scope: !403, file: !36, line: 1339, baseType: !7959, size: 64, offset: 1600)
!7959 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7960, size: 64)
!7960 = !DISubroutineType(types: !7961)
!7961 = !{!37, !295, !37, !540}
!7962 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_set_vf_trust", scope: !403, file: !36, line: 1341, baseType: !7959, size: 64, offset: 1664)
!7963 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_get_vf_config", scope: !403, file: !36, line: 1343, baseType: !7964, size: 64, offset: 1728)
!7964 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7965, size: 64)
!7965 = !DISubroutineType(types: !7966)
!7966 = !{!37, !295, !37, !7967}
!7967 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7968, size: 64)
!7968 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ifla_vf_info", file: !7969, line: 20, size: 576, elements: !7970)
!7969 = !DIFile(filename: "./include/linux/if_link.h", directory: "/home/lizy2001/genbc/linux")
!7970 = !{!7971, !7972, !7974, !7975, !7976, !7977, !7978, !7979, !7980, !7981, !7982}
!7971 = !DIDerivedType(tag: DW_TAG_member, name: "vf", scope: !7968, file: !7969, line: 21, baseType: !468, size: 32)
!7972 = !DIDerivedType(tag: DW_TAG_member, name: "mac", scope: !7968, file: !7969, line: 22, baseType: !7973, size: 256, offset: 32)
!7973 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1398, size: 256, elements: !716)
!7974 = !DIDerivedType(tag: DW_TAG_member, name: "vlan", scope: !7968, file: !7969, line: 23, baseType: !468, size: 32, offset: 288)
!7975 = !DIDerivedType(tag: DW_TAG_member, name: "qos", scope: !7968, file: !7969, line: 24, baseType: !468, size: 32, offset: 320)
!7976 = !DIDerivedType(tag: DW_TAG_member, name: "spoofchk", scope: !7968, file: !7969, line: 25, baseType: !468, size: 32, offset: 352)
!7977 = !DIDerivedType(tag: DW_TAG_member, name: "linkstate", scope: !7968, file: !7969, line: 26, baseType: !468, size: 32, offset: 384)
!7978 = !DIDerivedType(tag: DW_TAG_member, name: "min_tx_rate", scope: !7968, file: !7969, line: 27, baseType: !468, size: 32, offset: 416)
!7979 = !DIDerivedType(tag: DW_TAG_member, name: "max_tx_rate", scope: !7968, file: !7969, line: 28, baseType: !468, size: 32, offset: 448)
!7980 = !DIDerivedType(tag: DW_TAG_member, name: "rss_query_en", scope: !7968, file: !7969, line: 29, baseType: !468, size: 32, offset: 480)
!7981 = !DIDerivedType(tag: DW_TAG_member, name: "trusted", scope: !7968, file: !7969, line: 30, baseType: !468, size: 32, offset: 512)
!7982 = !DIDerivedType(tag: DW_TAG_member, name: "vlan_proto", scope: !7968, file: !7969, line: 31, baseType: !489, size: 16, offset: 544)
!7983 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_set_vf_link_state", scope: !403, file: !36, line: 1346, baseType: !7984, size: 64, offset: 1792)
!7984 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7985, size: 64)
!7985 = !DISubroutineType(types: !7986)
!7986 = !{!37, !295, !37, !37}
!7987 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_get_vf_stats", scope: !403, file: !36, line: 1348, baseType: !7988, size: 64, offset: 1856)
!7988 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7989, size: 64)
!7989 = !DISubroutineType(types: !7990)
!7990 = !{!37, !295, !37, !7991}
!7991 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7992, size: 64)
!7992 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ifla_vf_stats", file: !7969, line: 9, size: 512, elements: !7993)
!7993 = !{!7994, !7995, !7996, !7997, !7998, !7999, !8000, !8001}
!7994 = !DIDerivedType(tag: DW_TAG_member, name: "rx_packets", scope: !7992, file: !7969, line: 10, baseType: !338, size: 64)
!7995 = !DIDerivedType(tag: DW_TAG_member, name: "tx_packets", scope: !7992, file: !7969, line: 11, baseType: !338, size: 64, offset: 64)
!7996 = !DIDerivedType(tag: DW_TAG_member, name: "rx_bytes", scope: !7992, file: !7969, line: 12, baseType: !338, size: 64, offset: 128)
!7997 = !DIDerivedType(tag: DW_TAG_member, name: "tx_bytes", scope: !7992, file: !7969, line: 13, baseType: !338, size: 64, offset: 192)
!7998 = !DIDerivedType(tag: DW_TAG_member, name: "broadcast", scope: !7992, file: !7969, line: 14, baseType: !338, size: 64, offset: 256)
!7999 = !DIDerivedType(tag: DW_TAG_member, name: "multicast", scope: !7992, file: !7969, line: 15, baseType: !338, size: 64, offset: 320)
!8000 = !DIDerivedType(tag: DW_TAG_member, name: "rx_dropped", scope: !7992, file: !7969, line: 16, baseType: !338, size: 64, offset: 384)
!8001 = !DIDerivedType(tag: DW_TAG_member, name: "tx_dropped", scope: !7992, file: !7969, line: 17, baseType: !338, size: 64, offset: 448)
!8002 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_set_vf_port", scope: !403, file: !36, line: 1352, baseType: !8003, size: 64, offset: 1920)
!8003 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8004, size: 64)
!8004 = !DISubroutineType(types: !8005)
!8005 = !{!37, !295, !37, !8006}
!8006 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8007, size: 64)
!8007 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2452, size: 64)
!8008 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_get_vf_port", scope: !403, file: !36, line: 1355, baseType: !8009, size: 64, offset: 1984)
!8009 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8010, size: 64)
!8010 = !DISubroutineType(types: !8011)
!8011 = !{!37, !295, !37, !420}
!8012 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_get_vf_guid", scope: !403, file: !36, line: 1357, baseType: !8013, size: 64, offset: 2048)
!8013 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8014, size: 64)
!8014 = !DISubroutineType(types: !8015)
!8015 = !{!37, !295, !37, !8016, !8016}
!8016 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8017, size: 64)
!8017 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ifla_vf_guid", file: !7901, line: 956, size: 128, elements: !8018)
!8018 = !{!8019, !8020}
!8019 = !DIDerivedType(tag: DW_TAG_member, name: "vf", scope: !8017, file: !7901, line: 957, baseType: !468, size: 32)
!8020 = !DIDerivedType(tag: DW_TAG_member, name: "guid", scope: !8017, file: !7901, line: 958, baseType: !338, size: 64, offset: 64)
!8021 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_set_vf_guid", scope: !403, file: !36, line: 1361, baseType: !8022, size: 64, offset: 2112)
!8022 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8023, size: 64)
!8023 = !DISubroutineType(types: !8024)
!8024 = !{!37, !295, !37, !336, !37}
!8025 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_set_vf_rss_query_en", scope: !403, file: !36, line: 1364, baseType: !7959, size: 64, offset: 2176)
!8026 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_setup_tc", scope: !403, file: !36, line: 1367, baseType: !8027, size: 64, offset: 2240)
!8027 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8028, size: 64)
!8028 = !DISubroutineType(types: !8029)
!8029 = !{!37, !295, !42, !570}
!8030 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_add_slave", scope: !403, file: !36, line: 1400, baseType: !8031, size: 64, offset: 2304)
!8031 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8032, size: 64)
!8032 = !DISubroutineType(types: !8033)
!8033 = !{!37, !295, !295, !2444}
!8034 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_del_slave", scope: !403, file: !36, line: 1403, baseType: !8035, size: 64, offset: 2368)
!8035 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8036, size: 64)
!8036 = !DISubroutineType(types: !8037)
!8037 = !{!37, !295, !295}
!8038 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_get_xmit_slave", scope: !403, file: !36, line: 1405, baseType: !8039, size: 64, offset: 2432)
!8039 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8040, size: 64)
!8040 = !DISubroutineType(types: !8041)
!8041 = !{!295, !295, !420, !540}
!8042 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_fix_features", scope: !403, file: !36, line: 1408, baseType: !8043, size: 64, offset: 2496)
!8043 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8044, size: 64)
!8044 = !DISubroutineType(types: !8045)
!8045 = !{!334, !295, !334}
!8046 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_set_features", scope: !403, file: !36, line: 1410, baseType: !8047, size: 64, offset: 2560)
!8047 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8048, size: 64)
!8048 = !DISubroutineType(types: !8049)
!8049 = !{!37, !295, !334}
!8050 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_neigh_construct", scope: !403, file: !36, line: 1412, baseType: !8051, size: 64, offset: 2624)
!8051 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8052, size: 64)
!8052 = !DISubroutineType(types: !8053)
!8053 = !{!37, !295, !2665}
!8054 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_neigh_destroy", scope: !403, file: !36, line: 1414, baseType: !8055, size: 64, offset: 2688)
!8055 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8056, size: 64)
!8056 = !DISubroutineType(types: !8057)
!8057 = !{null, !295, !2665}
!8058 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_fdb_add", scope: !403, file: !36, line: 1417, baseType: !8059, size: 64, offset: 2752)
!8059 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8060, size: 64)
!8060 = !DISubroutineType(types: !8061)
!8061 = !{!37, !8062, !8006, !295, !711, !1038, !1038, !2444}
!8062 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8063, size: 64)
!8063 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ndmsg", file: !8064, line: 8, size: 96, elements: !8065)
!8064 = !DIFile(filename: "./include/uapi/linux/neighbour.h", directory: "/home/lizy2001/genbc/linux")
!8065 = !{!8066, !8067, !8068, !8069, !8070, !8071, !8072}
!8066 = !DIDerivedType(tag: DW_TAG_member, name: "ndm_family", scope: !8063, file: !8064, line: 9, baseType: !1398, size: 8)
!8067 = !DIDerivedType(tag: DW_TAG_member, name: "ndm_pad1", scope: !8063, file: !8064, line: 10, baseType: !1398, size: 8, offset: 8)
!8068 = !DIDerivedType(tag: DW_TAG_member, name: "ndm_pad2", scope: !8063, file: !8064, line: 11, baseType: !476, size: 16, offset: 16)
!8069 = !DIDerivedType(tag: DW_TAG_member, name: "ndm_ifindex", scope: !8063, file: !8064, line: 12, baseType: !1490, size: 32, offset: 32)
!8070 = !DIDerivedType(tag: DW_TAG_member, name: "ndm_state", scope: !8063, file: !8064, line: 13, baseType: !476, size: 16, offset: 64)
!8071 = !DIDerivedType(tag: DW_TAG_member, name: "ndm_flags", scope: !8063, file: !8064, line: 14, baseType: !1398, size: 8, offset: 80)
!8072 = !DIDerivedType(tag: DW_TAG_member, name: "ndm_type", scope: !8063, file: !8064, line: 15, baseType: !1398, size: 8, offset: 88)
!8073 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_fdb_del", scope: !403, file: !36, line: 1424, baseType: !8074, size: 64, offset: 2816)
!8074 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8075, size: 64)
!8075 = !DISubroutineType(types: !8076)
!8076 = !{!37, !8062, !8006, !295, !711, !1038}
!8077 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_fdb_dump", scope: !403, file: !36, line: 1429, baseType: !8078, size: 64, offset: 2880)
!8078 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8079, size: 64)
!8079 = !DISubroutineType(types: !8080)
!8080 = !{!37, !420, !8081, !295, !295, !539}
!8081 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8082, size: 64)
!8082 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "netlink_callback", file: !2446, line: 203, size: 1024, elements: !8083)
!8083 = !{!8084, !8085, !8095, !8099, !8103, !8104, !8105, !8106, !8107, !8108, !8109, !8110, !8111, !8112}
!8084 = !DIDerivedType(tag: DW_TAG_member, name: "skb", scope: !8082, file: !2446, line: 204, baseType: !420, size: 64)
!8085 = !DIDerivedType(tag: DW_TAG_member, name: "nlh", scope: !8082, file: !2446, line: 205, baseType: !8086, size: 64, offset: 64)
!8086 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8087, size: 64)
!8087 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !8088)
!8088 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "nlmsghdr", file: !2453, line: 44, size: 128, elements: !8089)
!8089 = !{!8090, !8091, !8092, !8093, !8094}
!8090 = !DIDerivedType(tag: DW_TAG_member, name: "nlmsg_len", scope: !8088, file: !2453, line: 45, baseType: !468, size: 32)
!8091 = !DIDerivedType(tag: DW_TAG_member, name: "nlmsg_type", scope: !8088, file: !2453, line: 46, baseType: !476, size: 16, offset: 32)
!8092 = !DIDerivedType(tag: DW_TAG_member, name: "nlmsg_flags", scope: !8088, file: !2453, line: 47, baseType: !476, size: 16, offset: 48)
!8093 = !DIDerivedType(tag: DW_TAG_member, name: "nlmsg_seq", scope: !8088, file: !2453, line: 48, baseType: !468, size: 32, offset: 64)
!8094 = !DIDerivedType(tag: DW_TAG_member, name: "nlmsg_pid", scope: !8088, file: !2453, line: 49, baseType: !468, size: 32, offset: 96)
!8095 = !DIDerivedType(tag: DW_TAG_member, name: "dump", scope: !8082, file: !2446, line: 206, baseType: !8096, size: 64, offset: 128)
!8096 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8097, size: 64)
!8097 = !DISubroutineType(types: !8098)
!8098 = !{!37, !420, !8081}
!8099 = !DIDerivedType(tag: DW_TAG_member, name: "done", scope: !8082, file: !2446, line: 208, baseType: !8100, size: 64, offset: 192)
!8100 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8101, size: 64)
!8101 = !DISubroutineType(types: !8102)
!8102 = !{!37, !8081}
!8103 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !8082, file: !2446, line: 209, baseType: !570, size: 64, offset: 256)
!8104 = !DIDerivedType(tag: DW_TAG_member, name: "module", scope: !8082, file: !2446, line: 211, baseType: !852, size: 64, offset: 320)
!8105 = !DIDerivedType(tag: DW_TAG_member, name: "extack", scope: !8082, file: !2446, line: 212, baseType: !2444, size: 64, offset: 384)
!8106 = !DIDerivedType(tag: DW_TAG_member, name: "family", scope: !8082, file: !2446, line: 213, baseType: !1038, size: 16, offset: 448)
!8107 = !DIDerivedType(tag: DW_TAG_member, name: "answer_flags", scope: !8082, file: !2446, line: 214, baseType: !1038, size: 16, offset: 464)
!8108 = !DIDerivedType(tag: DW_TAG_member, name: "min_dump_alloc", scope: !8082, file: !2446, line: 215, baseType: !707, size: 32, offset: 480)
!8109 = !DIDerivedType(tag: DW_TAG_member, name: "prev_seq", scope: !8082, file: !2446, line: 216, baseType: !7, size: 32, offset: 512)
!8110 = !DIDerivedType(tag: DW_TAG_member, name: "seq", scope: !8082, file: !2446, line: 216, baseType: !7, size: 32, offset: 544)
!8111 = !DIDerivedType(tag: DW_TAG_member, name: "strict_check", scope: !8082, file: !2446, line: 217, baseType: !540, size: 8, offset: 576)
!8112 = !DIDerivedType(tag: DW_TAG_member, scope: !8082, file: !2446, line: 218, baseType: !8113, size: 384, offset: 640)
!8113 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !8082, file: !2446, line: 218, size: 384, elements: !8114)
!8114 = !{!8115, !8117}
!8115 = !DIDerivedType(tag: DW_TAG_member, name: "ctx", scope: !8113, file: !2446, line: 219, baseType: !8116, size: 384)
!8116 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1397, size: 384, elements: !7651)
!8117 = !DIDerivedType(tag: DW_TAG_member, name: "args", scope: !8113, file: !2446, line: 224, baseType: !8118, size: 384)
!8118 = !DICompositeType(tag: DW_TAG_array_type, baseType: !513, size: 384, elements: !1671)
!8119 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_fdb_get", scope: !403, file: !36, line: 1434, baseType: !8120, size: 64, offset: 2944)
!8120 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8121, size: 64)
!8121 = !DISubroutineType(types: !8122)
!8122 = !{!37, !420, !8006, !295, !711, !1038, !707, !707, !2444}
!8123 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_bridge_setlink", scope: !403, file: !36, line: 1440, baseType: !8124, size: 64, offset: 3008)
!8124 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8125, size: 64)
!8125 = !DISubroutineType(types: !8126)
!8126 = !{!37, !295, !8127, !1038, !2444}
!8127 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8088, size: 64)
!8128 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_bridge_getlink", scope: !403, file: !36, line: 1444, baseType: !8129, size: 64, offset: 3072)
!8129 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8130, size: 64)
!8130 = !DISubroutineType(types: !8131)
!8131 = !{!37, !420, !707, !707, !295, !707, !37}
!8132 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_bridge_dellink", scope: !403, file: !36, line: 1449, baseType: !8133, size: 64, offset: 3136)
!8133 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8134, size: 64)
!8134 = !DISubroutineType(types: !8135)
!8135 = !{!37, !295, !8127, !1038}
!8136 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_change_carrier", scope: !403, file: !36, line: 1452, baseType: !8137, size: 64, offset: 3200)
!8137 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8138, size: 64)
!8138 = !DISubroutineType(types: !8139)
!8139 = !{!37, !295, !540}
!8140 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_get_phys_port_id", scope: !403, file: !36, line: 1454, baseType: !8141, size: 64, offset: 3264)
!8141 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8142, size: 64)
!8142 = !DISubroutineType(types: !8143)
!8143 = !{!37, !295, !8144}
!8144 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8145, size: 64)
!8145 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "netdev_phys_item_id", file: !36, line: 820, size: 264, elements: !8146)
!8146 = !{!8147, !8148}
!8147 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !8145, file: !36, line: 821, baseType: !715, size: 256)
!8148 = !DIDerivedType(tag: DW_TAG_member, name: "id_len", scope: !8145, file: !36, line: 822, baseType: !494, size: 8, offset: 256)
!8149 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_get_port_parent_id", scope: !403, file: !36, line: 1456, baseType: !8141, size: 64, offset: 3328)
!8150 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_get_phys_port_name", scope: !403, file: !36, line: 1458, baseType: !8151, size: 64, offset: 3392)
!8151 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8152, size: 64)
!8152 = !DISubroutineType(types: !8153)
!8153 = !{!37, !295, !577, !594}
!8154 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_udp_tunnel_add", scope: !403, file: !36, line: 1460, baseType: !8155, size: 64, offset: 3456)
!8155 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8156, size: 64)
!8156 = !DISubroutineType(types: !8157)
!8157 = !{null, !295, !8158}
!8158 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8159, size: 64)
!8159 = !DICompositeType(tag: DW_TAG_structure_type, name: "udp_tunnel_info", file: !36, line: 67, flags: DIFlagFwdDecl)
!8160 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_udp_tunnel_del", scope: !403, file: !36, line: 1462, baseType: !8155, size: 64, offset: 3520)
!8161 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_dfwd_add_station", scope: !403, file: !36, line: 1464, baseType: !8162, size: 64, offset: 3584)
!8162 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8163, size: 64)
!8163 = !DISubroutineType(types: !8164)
!8164 = !{!570, !295, !295}
!8165 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_dfwd_del_station", scope: !403, file: !36, line: 1466, baseType: !8166, size: 64, offset: 3648)
!8166 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8167, size: 64)
!8167 = !DISubroutineType(types: !8168)
!8168 = !{null, !295, !570}
!8169 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_set_tx_maxrate", scope: !403, file: !36, line: 1469, baseType: !8170, size: 64, offset: 3712)
!8170 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8171, size: 64)
!8171 = !DISubroutineType(types: !8172)
!8172 = !{!37, !295, !37, !707}
!8173 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_get_iflink", scope: !403, file: !36, line: 1472, baseType: !8174, size: 64, offset: 3776)
!8174 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8175, size: 64)
!8175 = !DISubroutineType(types: !8176)
!8176 = !{!37, !2682}
!8177 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_change_proto_down", scope: !403, file: !36, line: 1473, baseType: !8137, size: 64, offset: 3840)
!8178 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_fill_metadata_dst", scope: !403, file: !36, line: 1475, baseType: !8179, size: 64, offset: 3904)
!8179 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8180, size: 64)
!8180 = !DISubroutineType(types: !8181)
!8181 = !{!37, !295, !420}
!8182 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_set_rx_headroom", scope: !403, file: !36, line: 1477, baseType: !7758, size: 64, offset: 3968)
!8183 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_bpf", scope: !403, file: !36, line: 1479, baseType: !8184, size: 64, offset: 4032)
!8184 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8185, size: 64)
!8185 = !DISubroutineType(types: !8186)
!8186 = !{!37, !295, !8187}
!8187 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8188, size: 64)
!8188 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "netdev_bpf", file: !36, line: 894, size: 256, elements: !8189)
!8189 = !{!8190, !8191}
!8190 = !DIDerivedType(tag: DW_TAG_member, name: "command", scope: !8188, file: !36, line: 895, baseType: !62, size: 32)
!8191 = !DIDerivedType(tag: DW_TAG_member, scope: !8188, file: !36, line: 896, baseType: !8192, size: 192, offset: 64)
!8192 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !8188, file: !36, line: 896, size: 192, elements: !8193)
!8193 = !{!8194, !8200, !8229}
!8194 = !DIDerivedType(tag: DW_TAG_member, scope: !8192, file: !36, line: 898, baseType: !8195, size: 192)
!8195 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !8192, file: !36, line: 898, size: 192, elements: !8196)
!8196 = !{!8197, !8198, !8199}
!8197 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !8195, file: !36, line: 899, baseType: !707, size: 32)
!8198 = !DIDerivedType(tag: DW_TAG_member, name: "prog", scope: !8195, file: !36, line: 900, baseType: !2909, size: 64, offset: 64)
!8199 = !DIDerivedType(tag: DW_TAG_member, name: "extack", scope: !8195, file: !36, line: 901, baseType: !2444, size: 64, offset: 128)
!8200 = !DIDerivedType(tag: DW_TAG_member, scope: !8192, file: !36, line: 904, baseType: !8201, size: 64)
!8201 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !8192, file: !36, line: 904, size: 64, elements: !8202)
!8202 = !{!8203}
!8203 = !DIDerivedType(tag: DW_TAG_member, name: "offmap", scope: !8201, file: !36, line: 905, baseType: !8204, size: 64)
!8204 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8205, size: 64)
!8205 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_offloaded_map", file: !145, line: 222, size: 2560, elements: !8206)
!8206 = !{!8207, !8208, !8209, !8227, !8228}
!8207 = !DIDerivedType(tag: DW_TAG_member, name: "map", scope: !8205, file: !145, line: 223, baseType: !3034, size: 2048)
!8208 = !DIDerivedType(tag: DW_TAG_member, name: "netdev", scope: !8205, file: !145, line: 224, baseType: !295, size: 64, offset: 2048)
!8209 = !DIDerivedType(tag: DW_TAG_member, name: "dev_ops", scope: !8205, file: !145, line: 225, baseType: !8210, size: 64, offset: 2112)
!8210 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8211, size: 64)
!8211 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !8212)
!8212 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_map_dev_ops", file: !145, line: 212, size: 256, elements: !8213)
!8213 = !{!8214, !8218, !8219, !8223}
!8214 = !DIDerivedType(tag: DW_TAG_member, name: "map_get_next_key", scope: !8212, file: !145, line: 213, baseType: !8215, size: 64)
!8215 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8216, size: 64)
!8216 = !DISubroutineType(types: !8217)
!8217 = !{!37, !8204, !570, !570}
!8218 = !DIDerivedType(tag: DW_TAG_member, name: "map_lookup_elem", scope: !8212, file: !145, line: 215, baseType: !8215, size: 64, offset: 64)
!8219 = !DIDerivedType(tag: DW_TAG_member, name: "map_update_elem", scope: !8212, file: !145, line: 217, baseType: !8220, size: 64, offset: 128)
!8220 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8221, size: 64)
!8221 = !DISubroutineType(types: !8222)
!8222 = !{!37, !8204, !570, !570, !336}
!8223 = !DIDerivedType(tag: DW_TAG_member, name: "map_delete_elem", scope: !8212, file: !145, line: 219, baseType: !8224, size: 64, offset: 192)
!8224 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8225, size: 64)
!8225 = !DISubroutineType(types: !8226)
!8226 = !{!37, !8204, !570}
!8227 = !DIDerivedType(tag: DW_TAG_member, name: "dev_priv", scope: !8205, file: !145, line: 226, baseType: !570, size: 64, offset: 2176)
!8228 = !DIDerivedType(tag: DW_TAG_member, name: "offloads", scope: !8205, file: !145, line: 227, baseType: !289, size: 128, offset: 2240)
!8229 = !DIDerivedType(tag: DW_TAG_member, name: "xsk", scope: !8192, file: !36, line: 911, baseType: !8230, size: 128)
!8230 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !8192, file: !36, line: 908, size: 128, elements: !8231)
!8231 = !{!8232, !8235}
!8232 = !DIDerivedType(tag: DW_TAG_member, name: "pool", scope: !8230, file: !36, line: 909, baseType: !8233, size: 64)
!8233 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8234, size: 64)
!8234 = !DICompositeType(tag: DW_TAG_structure_type, name: "xsk_buff_pool", file: !36, line: 909, flags: DIFlagFwdDecl)
!8235 = !DIDerivedType(tag: DW_TAG_member, name: "queue_id", scope: !8230, file: !36, line: 910, baseType: !1038, size: 16, offset: 64)
!8236 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_xdp_xmit", scope: !403, file: !36, line: 1481, baseType: !8237, size: 64, offset: 4096)
!8237 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8238, size: 64)
!8238 = !DISubroutineType(types: !8239)
!8239 = !{!37, !295, !37, !8240, !707}
!8240 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8241, size: 64)
!8241 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8242, size: 64)
!8242 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xdp_frame", file: !8243, line: 94, size: 256, elements: !8244)
!8243 = !DIFile(filename: "./include/net/xdp.h", directory: "/home/lizy2001/genbc/linux")
!8244 = !{!8245, !8246, !8247, !8248, !8249, !8250, !8255}
!8245 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !8242, file: !8243, line: 95, baseType: !570, size: 64)
!8246 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !8242, file: !8243, line: 96, baseType: !1038, size: 16, offset: 64)
!8247 = !DIDerivedType(tag: DW_TAG_member, name: "headroom", scope: !8242, file: !8243, line: 97, baseType: !1038, size: 16, offset: 80)
!8248 = !DIDerivedType(tag: DW_TAG_member, name: "metasize", scope: !8242, file: !8243, line: 98, baseType: !707, size: 8, offset: 96, flags: DIFlagBitField, extraData: i64 96)
!8249 = !DIDerivedType(tag: DW_TAG_member, name: "frame_sz", scope: !8242, file: !8243, line: 99, baseType: !707, size: 24, offset: 104, flags: DIFlagBitField, extraData: i64 96)
!8250 = !DIDerivedType(tag: DW_TAG_member, name: "mem", scope: !8242, file: !8243, line: 103, baseType: !8251, size: 64, offset: 128)
!8251 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xdp_mem_info", file: !8243, line: 50, size: 64, elements: !8252)
!8252 = !{!8253, !8254}
!8253 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !8251, file: !8243, line: 51, baseType: !707, size: 32)
!8254 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !8251, file: !8243, line: 52, baseType: !707, size: 32, offset: 32)
!8255 = !DIDerivedType(tag: DW_TAG_member, name: "dev_rx", scope: !8242, file: !8243, line: 104, baseType: !295, size: 64, offset: 192)
!8256 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_xsk_wakeup", scope: !403, file: !36, line: 1484, baseType: !8257, size: 64, offset: 4160)
!8257 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8258, size: 64)
!8258 = !DISubroutineType(types: !8259)
!8259 = !{!37, !295, !707, !707}
!8260 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_get_devlink_port", scope: !403, file: !36, line: 1486, baseType: !8261, size: 64, offset: 4224)
!8261 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8262, size: 64)
!8262 = !DISubroutineType(types: !8263)
!8263 = !{!8264, !295}
!8264 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8265, size: 64)
!8265 = !DICompositeType(tag: DW_TAG_structure_type, name: "devlink_port", file: !36, line: 1486, flags: DIFlagFwdDecl)
!8266 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_tunnel_ctl", scope: !403, file: !36, line: 1487, baseType: !8267, size: 64, offset: 4288)
!8267 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8268, size: 64)
!8268 = !DISubroutineType(types: !8269)
!8269 = !{!37, !295, !8270, !37}
!8270 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8271, size: 64)
!8271 = !DICompositeType(tag: DW_TAG_structure_type, name: "ip_tunnel_parm", file: !36, line: 56, flags: DIFlagFwdDecl)
!8272 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_get_peer_dev", scope: !403, file: !36, line: 1489, baseType: !8273, size: 64, offset: 4352)
!8273 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8274, size: 64)
!8274 = !DISubroutineType(types: !8275)
!8275 = !{!295, !295}
!8276 = !DIDerivedType(tag: DW_TAG_member, name: "ethtool_ops", scope: !269, file: !36, line: 1917, baseType: !8277, size: 64, offset: 4032)
!8277 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8278, size: 64)
!8278 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !8279)
!8279 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_ops", file: !256, line: 421, size: 3904, elements: !8280)
!8280 = !{!8281, !8282, !8302, !8303, !8314, !8326, !8330, !8334, !8338, !8339, !8340, !8357, !8358, !8370, !8371, !8401, !8402, !8418, !8422, !8431, !8442, !8446, !8459, !8463, !8467, !8477, !8478, !8479, !8480, !8484, !8485, !8587, !8591, !8601, !8605, !8606, !8607, !8611, !8617, !8621, !8625, !8641, !8645, !8657, !8661, !8662, !8677, !8689, !8690, !8706, !8707, !8721, !8725, !8729, !8730, !8769, !8775, !8786, !8787, !8788, !8789}
!8281 = !DIDerivedType(tag: DW_TAG_member, name: "supported_coalesce_params", scope: !8279, file: !256, line: 422, baseType: !707, size: 32)
!8282 = !DIDerivedType(tag: DW_TAG_member, name: "get_drvinfo", scope: !8279, file: !256, line: 423, baseType: !8283, size: 64, offset: 64)
!8283 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8284, size: 64)
!8284 = !DISubroutineType(types: !8285)
!8285 = !{null, !295, !8286}
!8286 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8287, size: 64)
!8287 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_drvinfo", file: !214, line: 177, size: 1568, elements: !8288)
!8288 = !{!8289, !8290, !8291, !8292, !8293, !8294, !8295, !8297, !8298, !8299, !8300, !8301}
!8289 = !DIDerivedType(tag: DW_TAG_member, name: "cmd", scope: !8287, file: !214, line: 178, baseType: !468, size: 32)
!8290 = !DIDerivedType(tag: DW_TAG_member, name: "driver", scope: !8287, file: !214, line: 179, baseType: !3761, size: 256, offset: 32)
!8291 = !DIDerivedType(tag: DW_TAG_member, name: "version", scope: !8287, file: !214, line: 180, baseType: !3761, size: 256, offset: 288)
!8292 = !DIDerivedType(tag: DW_TAG_member, name: "fw_version", scope: !8287, file: !214, line: 181, baseType: !3761, size: 256, offset: 544)
!8293 = !DIDerivedType(tag: DW_TAG_member, name: "bus_info", scope: !8287, file: !214, line: 182, baseType: !3761, size: 256, offset: 800)
!8294 = !DIDerivedType(tag: DW_TAG_member, name: "erom_version", scope: !8287, file: !214, line: 183, baseType: !3761, size: 256, offset: 1056)
!8295 = !DIDerivedType(tag: DW_TAG_member, name: "reserved2", scope: !8287, file: !214, line: 184, baseType: !8296, size: 96, offset: 1312)
!8296 = !DICompositeType(tag: DW_TAG_array_type, baseType: !273, size: 96, elements: !2833)
!8297 = !DIDerivedType(tag: DW_TAG_member, name: "n_priv_flags", scope: !8287, file: !214, line: 185, baseType: !468, size: 32, offset: 1408)
!8298 = !DIDerivedType(tag: DW_TAG_member, name: "n_stats", scope: !8287, file: !214, line: 186, baseType: !468, size: 32, offset: 1440)
!8299 = !DIDerivedType(tag: DW_TAG_member, name: "testinfo_len", scope: !8287, file: !214, line: 187, baseType: !468, size: 32, offset: 1472)
!8300 = !DIDerivedType(tag: DW_TAG_member, name: "eedump_len", scope: !8287, file: !214, line: 188, baseType: !468, size: 32, offset: 1504)
!8301 = !DIDerivedType(tag: DW_TAG_member, name: "regdump_len", scope: !8287, file: !214, line: 189, baseType: !468, size: 32, offset: 1536)
!8302 = !DIDerivedType(tag: DW_TAG_member, name: "get_regs_len", scope: !8279, file: !256, line: 424, baseType: !406, size: 64, offset: 128)
!8303 = !DIDerivedType(tag: DW_TAG_member, name: "get_regs", scope: !8279, file: !256, line: 425, baseType: !8304, size: 64, offset: 192)
!8304 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8305, size: 64)
!8305 = !DISubroutineType(types: !8306)
!8306 = !{null, !295, !8307, !570}
!8307 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8308, size: 64)
!8308 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_regs", file: !214, line: 310, size: 96, elements: !8309)
!8309 = !{!8310, !8311, !8312, !8313}
!8310 = !DIDerivedType(tag: DW_TAG_member, name: "cmd", scope: !8308, file: !214, line: 311, baseType: !468, size: 32)
!8311 = !DIDerivedType(tag: DW_TAG_member, name: "version", scope: !8308, file: !214, line: 312, baseType: !468, size: 32, offset: 32)
!8312 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !8308, file: !214, line: 313, baseType: !468, size: 32, offset: 64)
!8313 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !8308, file: !214, line: 314, baseType: !7668, offset: 96)
!8314 = !DIDerivedType(tag: DW_TAG_member, name: "get_wol", scope: !8279, file: !256, line: 426, baseType: !8315, size: 64, offset: 256)
!8315 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8316, size: 64)
!8316 = !DISubroutineType(types: !8317)
!8317 = !{null, !295, !8318}
!8318 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8319, size: 64)
!8319 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_wolinfo", file: !214, line: 203, size: 160, elements: !8320)
!8320 = !{!8321, !8322, !8323, !8324}
!8321 = !DIDerivedType(tag: DW_TAG_member, name: "cmd", scope: !8319, file: !214, line: 204, baseType: !468, size: 32)
!8322 = !DIDerivedType(tag: DW_TAG_member, name: "supported", scope: !8319, file: !214, line: 205, baseType: !468, size: 32, offset: 32)
!8323 = !DIDerivedType(tag: DW_TAG_member, name: "wolopts", scope: !8319, file: !214, line: 206, baseType: !468, size: 32, offset: 64)
!8324 = !DIDerivedType(tag: DW_TAG_member, name: "sopass", scope: !8319, file: !214, line: 207, baseType: !8325, size: 48, offset: 96)
!8325 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1398, size: 48, elements: !1671)
!8326 = !DIDerivedType(tag: DW_TAG_member, name: "set_wol", scope: !8279, file: !256, line: 427, baseType: !8327, size: 64, offset: 320)
!8327 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8328, size: 64)
!8328 = !DISubroutineType(types: !8329)
!8329 = !{!37, !295, !8318}
!8330 = !DIDerivedType(tag: DW_TAG_member, name: "get_msglevel", scope: !8279, file: !256, line: 428, baseType: !8331, size: 64, offset: 384)
!8331 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8332, size: 64)
!8332 = !DISubroutineType(types: !8333)
!8333 = !{!707, !295}
!8334 = !DIDerivedType(tag: DW_TAG_member, name: "set_msglevel", scope: !8279, file: !256, line: 429, baseType: !8335, size: 64, offset: 448)
!8335 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8336, size: 64)
!8336 = !DISubroutineType(types: !8337)
!8337 = !{null, !295, !707}
!8338 = !DIDerivedType(tag: DW_TAG_member, name: "nway_reset", scope: !8279, file: !256, line: 430, baseType: !406, size: 64, offset: 512)
!8339 = !DIDerivedType(tag: DW_TAG_member, name: "get_link", scope: !8279, file: !256, line: 431, baseType: !8331, size: 64, offset: 576)
!8340 = !DIDerivedType(tag: DW_TAG_member, name: "get_link_ext_state", scope: !8279, file: !256, line: 432, baseType: !8341, size: 64, offset: 640)
!8341 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8342, size: 64)
!8342 = !DISubroutineType(types: !8343)
!8343 = !{!37, !295, !8344}
!8344 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8345, size: 64)
!8345 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_link_ext_state_info", file: !256, line: 93, size: 64, elements: !8346)
!8346 = !{!8347, !8348}
!8347 = !DIDerivedType(tag: DW_TAG_member, name: "link_ext_state", scope: !8345, file: !256, line: 94, baseType: !213, size: 32)
!8348 = !DIDerivedType(tag: DW_TAG_member, scope: !8345, file: !256, line: 95, baseType: !8349, size: 32, offset: 32)
!8349 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !8345, file: !256, line: 95, size: 32, elements: !8350)
!8350 = !{!8351, !8352, !8353, !8354, !8355, !8356}
!8351 = !DIDerivedType(tag: DW_TAG_member, name: "autoneg", scope: !8349, file: !256, line: 96, baseType: !226, size: 32)
!8352 = !DIDerivedType(tag: DW_TAG_member, name: "link_training", scope: !8349, file: !256, line: 97, baseType: !234, size: 32)
!8353 = !DIDerivedType(tag: DW_TAG_member, name: "link_logical_mismatch", scope: !8349, file: !256, line: 98, baseType: !240, size: 32)
!8354 = !DIDerivedType(tag: DW_TAG_member, name: "bad_signal_integrity", scope: !8349, file: !256, line: 99, baseType: !247, size: 32)
!8355 = !DIDerivedType(tag: DW_TAG_member, name: "cable_issue", scope: !8349, file: !256, line: 100, baseType: !251, size: 32)
!8356 = !DIDerivedType(tag: DW_TAG_member, name: "__link_ext_substate", scope: !8349, file: !256, line: 101, baseType: !1397, size: 8)
!8357 = !DIDerivedType(tag: DW_TAG_member, name: "get_eeprom_len", scope: !8279, file: !256, line: 434, baseType: !406, size: 64, offset: 704)
!8358 = !DIDerivedType(tag: DW_TAG_member, name: "get_eeprom", scope: !8279, file: !256, line: 435, baseType: !8359, size: 64, offset: 768)
!8359 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8360, size: 64)
!8360 = !DISubroutineType(types: !8361)
!8361 = !{!37, !295, !8362, !7949}
!8362 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8363, size: 64)
!8363 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_eeprom", file: !214, line: 335, size: 128, elements: !8364)
!8364 = !{!8365, !8366, !8367, !8368, !8369}
!8365 = !DIDerivedType(tag: DW_TAG_member, name: "cmd", scope: !8363, file: !214, line: 336, baseType: !468, size: 32)
!8366 = !DIDerivedType(tag: DW_TAG_member, name: "magic", scope: !8363, file: !214, line: 337, baseType: !468, size: 32, offset: 32)
!8367 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !8363, file: !214, line: 338, baseType: !468, size: 32, offset: 64)
!8368 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !8363, file: !214, line: 339, baseType: !468, size: 32, offset: 96)
!8369 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !8363, file: !214, line: 340, baseType: !7668, offset: 128)
!8370 = !DIDerivedType(tag: DW_TAG_member, name: "set_eeprom", scope: !8279, file: !256, line: 437, baseType: !8359, size: 64, offset: 832)
!8371 = !DIDerivedType(tag: DW_TAG_member, name: "get_coalesce", scope: !8279, file: !256, line: 439, baseType: !8372, size: 64, offset: 896)
!8372 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8373, size: 64)
!8373 = !DISubroutineType(types: !8374)
!8374 = !{!37, !295, !8375}
!8375 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8376, size: 64)
!8376 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_coalesce", file: !214, line: 462, size: 736, elements: !8377)
!8377 = !{!8378, !8379, !8380, !8381, !8382, !8383, !8384, !8385, !8386, !8387, !8388, !8389, !8390, !8391, !8392, !8393, !8394, !8395, !8396, !8397, !8398, !8399, !8400}
!8378 = !DIDerivedType(tag: DW_TAG_member, name: "cmd", scope: !8376, file: !214, line: 463, baseType: !468, size: 32)
!8379 = !DIDerivedType(tag: DW_TAG_member, name: "rx_coalesce_usecs", scope: !8376, file: !214, line: 464, baseType: !468, size: 32, offset: 32)
!8380 = !DIDerivedType(tag: DW_TAG_member, name: "rx_max_coalesced_frames", scope: !8376, file: !214, line: 465, baseType: !468, size: 32, offset: 64)
!8381 = !DIDerivedType(tag: DW_TAG_member, name: "rx_coalesce_usecs_irq", scope: !8376, file: !214, line: 466, baseType: !468, size: 32, offset: 96)
!8382 = !DIDerivedType(tag: DW_TAG_member, name: "rx_max_coalesced_frames_irq", scope: !8376, file: !214, line: 467, baseType: !468, size: 32, offset: 128)
!8383 = !DIDerivedType(tag: DW_TAG_member, name: "tx_coalesce_usecs", scope: !8376, file: !214, line: 468, baseType: !468, size: 32, offset: 160)
!8384 = !DIDerivedType(tag: DW_TAG_member, name: "tx_max_coalesced_frames", scope: !8376, file: !214, line: 469, baseType: !468, size: 32, offset: 192)
!8385 = !DIDerivedType(tag: DW_TAG_member, name: "tx_coalesce_usecs_irq", scope: !8376, file: !214, line: 470, baseType: !468, size: 32, offset: 224)
!8386 = !DIDerivedType(tag: DW_TAG_member, name: "tx_max_coalesced_frames_irq", scope: !8376, file: !214, line: 471, baseType: !468, size: 32, offset: 256)
!8387 = !DIDerivedType(tag: DW_TAG_member, name: "stats_block_coalesce_usecs", scope: !8376, file: !214, line: 472, baseType: !468, size: 32, offset: 288)
!8388 = !DIDerivedType(tag: DW_TAG_member, name: "use_adaptive_rx_coalesce", scope: !8376, file: !214, line: 473, baseType: !468, size: 32, offset: 320)
!8389 = !DIDerivedType(tag: DW_TAG_member, name: "use_adaptive_tx_coalesce", scope: !8376, file: !214, line: 474, baseType: !468, size: 32, offset: 352)
!8390 = !DIDerivedType(tag: DW_TAG_member, name: "pkt_rate_low", scope: !8376, file: !214, line: 475, baseType: !468, size: 32, offset: 384)
!8391 = !DIDerivedType(tag: DW_TAG_member, name: "rx_coalesce_usecs_low", scope: !8376, file: !214, line: 476, baseType: !468, size: 32, offset: 416)
!8392 = !DIDerivedType(tag: DW_TAG_member, name: "rx_max_coalesced_frames_low", scope: !8376, file: !214, line: 477, baseType: !468, size: 32, offset: 448)
!8393 = !DIDerivedType(tag: DW_TAG_member, name: "tx_coalesce_usecs_low", scope: !8376, file: !214, line: 478, baseType: !468, size: 32, offset: 480)
!8394 = !DIDerivedType(tag: DW_TAG_member, name: "tx_max_coalesced_frames_low", scope: !8376, file: !214, line: 479, baseType: !468, size: 32, offset: 512)
!8395 = !DIDerivedType(tag: DW_TAG_member, name: "pkt_rate_high", scope: !8376, file: !214, line: 480, baseType: !468, size: 32, offset: 544)
!8396 = !DIDerivedType(tag: DW_TAG_member, name: "rx_coalesce_usecs_high", scope: !8376, file: !214, line: 481, baseType: !468, size: 32, offset: 576)
!8397 = !DIDerivedType(tag: DW_TAG_member, name: "rx_max_coalesced_frames_high", scope: !8376, file: !214, line: 482, baseType: !468, size: 32, offset: 608)
!8398 = !DIDerivedType(tag: DW_TAG_member, name: "tx_coalesce_usecs_high", scope: !8376, file: !214, line: 483, baseType: !468, size: 32, offset: 640)
!8399 = !DIDerivedType(tag: DW_TAG_member, name: "tx_max_coalesced_frames_high", scope: !8376, file: !214, line: 484, baseType: !468, size: 32, offset: 672)
!8400 = !DIDerivedType(tag: DW_TAG_member, name: "rate_sample_interval", scope: !8376, file: !214, line: 485, baseType: !468, size: 32, offset: 704)
!8401 = !DIDerivedType(tag: DW_TAG_member, name: "set_coalesce", scope: !8279, file: !256, line: 440, baseType: !8372, size: 64, offset: 960)
!8402 = !DIDerivedType(tag: DW_TAG_member, name: "get_ringparam", scope: !8279, file: !256, line: 441, baseType: !8403, size: 64, offset: 1024)
!8403 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8404, size: 64)
!8404 = !DISubroutineType(types: !8405)
!8405 = !{null, !295, !8406}
!8406 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8407, size: 64)
!8407 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_ringparam", file: !214, line: 513, size: 288, elements: !8408)
!8408 = !{!8409, !8410, !8411, !8412, !8413, !8414, !8415, !8416, !8417}
!8409 = !DIDerivedType(tag: DW_TAG_member, name: "cmd", scope: !8407, file: !214, line: 514, baseType: !468, size: 32)
!8410 = !DIDerivedType(tag: DW_TAG_member, name: "rx_max_pending", scope: !8407, file: !214, line: 515, baseType: !468, size: 32, offset: 32)
!8411 = !DIDerivedType(tag: DW_TAG_member, name: "rx_mini_max_pending", scope: !8407, file: !214, line: 516, baseType: !468, size: 32, offset: 64)
!8412 = !DIDerivedType(tag: DW_TAG_member, name: "rx_jumbo_max_pending", scope: !8407, file: !214, line: 517, baseType: !468, size: 32, offset: 96)
!8413 = !DIDerivedType(tag: DW_TAG_member, name: "tx_max_pending", scope: !8407, file: !214, line: 518, baseType: !468, size: 32, offset: 128)
!8414 = !DIDerivedType(tag: DW_TAG_member, name: "rx_pending", scope: !8407, file: !214, line: 519, baseType: !468, size: 32, offset: 160)
!8415 = !DIDerivedType(tag: DW_TAG_member, name: "rx_mini_pending", scope: !8407, file: !214, line: 520, baseType: !468, size: 32, offset: 192)
!8416 = !DIDerivedType(tag: DW_TAG_member, name: "rx_jumbo_pending", scope: !8407, file: !214, line: 521, baseType: !468, size: 32, offset: 224)
!8417 = !DIDerivedType(tag: DW_TAG_member, name: "tx_pending", scope: !8407, file: !214, line: 522, baseType: !468, size: 32, offset: 256)
!8418 = !DIDerivedType(tag: DW_TAG_member, name: "set_ringparam", scope: !8279, file: !256, line: 443, baseType: !8419, size: 64, offset: 1088)
!8419 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8420, size: 64)
!8420 = !DISubroutineType(types: !8421)
!8421 = !{!37, !295, !8406}
!8422 = !DIDerivedType(tag: DW_TAG_member, name: "get_pause_stats", scope: !8279, file: !256, line: 445, baseType: !8423, size: 64, offset: 1152)
!8423 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8424, size: 64)
!8424 = !DISubroutineType(types: !8425)
!8425 = !{null, !295, !8426}
!8426 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8427, size: 64)
!8427 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_pause_stats", file: !256, line: 260, size: 128, elements: !8428)
!8428 = !{!8429, !8430}
!8429 = !DIDerivedType(tag: DW_TAG_member, name: "tx_pause_frames", scope: !8427, file: !256, line: 261, baseType: !336, size: 64)
!8430 = !DIDerivedType(tag: DW_TAG_member, name: "rx_pause_frames", scope: !8427, file: !256, line: 262, baseType: !336, size: 64, offset: 64)
!8431 = !DIDerivedType(tag: DW_TAG_member, name: "get_pauseparam", scope: !8279, file: !256, line: 447, baseType: !8432, size: 64, offset: 1216)
!8432 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8433, size: 64)
!8433 = !DISubroutineType(types: !8434)
!8434 = !{null, !295, !8435}
!8435 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8436, size: 64)
!8436 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_pauseparam", file: !214, line: 575, size: 128, elements: !8437)
!8437 = !{!8438, !8439, !8440, !8441}
!8438 = !DIDerivedType(tag: DW_TAG_member, name: "cmd", scope: !8436, file: !214, line: 576, baseType: !468, size: 32)
!8439 = !DIDerivedType(tag: DW_TAG_member, name: "autoneg", scope: !8436, file: !214, line: 577, baseType: !468, size: 32, offset: 32)
!8440 = !DIDerivedType(tag: DW_TAG_member, name: "rx_pause", scope: !8436, file: !214, line: 578, baseType: !468, size: 32, offset: 64)
!8441 = !DIDerivedType(tag: DW_TAG_member, name: "tx_pause", scope: !8436, file: !214, line: 579, baseType: !468, size: 32, offset: 96)
!8442 = !DIDerivedType(tag: DW_TAG_member, name: "set_pauseparam", scope: !8279, file: !256, line: 449, baseType: !8443, size: 64, offset: 1280)
!8443 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8444, size: 64)
!8444 = !DISubroutineType(types: !8445)
!8445 = !{!37, !295, !8435}
!8446 = !DIDerivedType(tag: DW_TAG_member, name: "self_test", scope: !8279, file: !256, line: 451, baseType: !8447, size: 64, offset: 1344)
!8447 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8448, size: 64)
!8448 = !DISubroutineType(types: !8449)
!8449 = !{null, !295, !8450, !3338}
!8450 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8451, size: 64)
!8451 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_test", file: !214, line: 770, size: 128, elements: !8452)
!8452 = !{!8453, !8454, !8455, !8456, !8457}
!8453 = !DIDerivedType(tag: DW_TAG_member, name: "cmd", scope: !8451, file: !214, line: 771, baseType: !468, size: 32)
!8454 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !8451, file: !214, line: 772, baseType: !468, size: 32, offset: 32)
!8455 = !DIDerivedType(tag: DW_TAG_member, name: "reserved", scope: !8451, file: !214, line: 773, baseType: !468, size: 32, offset: 64)
!8456 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !8451, file: !214, line: 774, baseType: !468, size: 32, offset: 96)
!8457 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !8451, file: !214, line: 775, baseType: !8458, offset: 128)
!8458 = !DICompositeType(tag: DW_TAG_array_type, baseType: !338, elements: !1922)
!8459 = !DIDerivedType(tag: DW_TAG_member, name: "get_strings", scope: !8279, file: !256, line: 452, baseType: !8460, size: 64, offset: 1408)
!8460 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8461, size: 64)
!8461 = !DISubroutineType(types: !8462)
!8462 = !{null, !295, !707, !7949}
!8463 = !DIDerivedType(tag: DW_TAG_member, name: "set_phys_id", scope: !8279, file: !256, line: 453, baseType: !8464, size: 64, offset: 1472)
!8464 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8465, size: 64)
!8465 = !DISubroutineType(types: !8466)
!8466 = !{!37, !295, !255}
!8467 = !DIDerivedType(tag: DW_TAG_member, name: "get_ethtool_stats", scope: !8279, file: !256, line: 454, baseType: !8468, size: 64, offset: 1536)
!8468 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8469, size: 64)
!8469 = !DISubroutineType(types: !8470)
!8470 = !{null, !295, !8471, !3338}
!8471 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8472, size: 64)
!8472 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_stats", file: !214, line: 789, size: 64, elements: !8473)
!8473 = !{!8474, !8475, !8476}
!8474 = !DIDerivedType(tag: DW_TAG_member, name: "cmd", scope: !8472, file: !214, line: 790, baseType: !468, size: 32)
!8475 = !DIDerivedType(tag: DW_TAG_member, name: "n_stats", scope: !8472, file: !214, line: 791, baseType: !468, size: 32, offset: 32)
!8476 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !8472, file: !214, line: 792, baseType: !8458, offset: 64)
!8477 = !DIDerivedType(tag: DW_TAG_member, name: "begin", scope: !8279, file: !256, line: 456, baseType: !406, size: 64, offset: 1600)
!8478 = !DIDerivedType(tag: DW_TAG_member, name: "complete", scope: !8279, file: !256, line: 457, baseType: !410, size: 64, offset: 1664)
!8479 = !DIDerivedType(tag: DW_TAG_member, name: "get_priv_flags", scope: !8279, file: !256, line: 458, baseType: !8331, size: 64, offset: 1728)
!8480 = !DIDerivedType(tag: DW_TAG_member, name: "set_priv_flags", scope: !8279, file: !256, line: 459, baseType: !8481, size: 64, offset: 1792)
!8481 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8482, size: 64)
!8482 = !DISubroutineType(types: !8483)
!8483 = !{!37, !295, !707}
!8484 = !DIDerivedType(tag: DW_TAG_member, name: "get_sset_count", scope: !8279, file: !256, line: 460, baseType: !7884, size: 64, offset: 1856)
!8485 = !DIDerivedType(tag: DW_TAG_member, name: "get_rxnfc", scope: !8279, file: !256, line: 461, baseType: !8486, size: 64, offset: 1920)
!8486 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8487, size: 64)
!8487 = !DISubroutineType(types: !8488)
!8488 = !{!37, !295, !8489, !1460}
!8489 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8490, size: 64)
!8490 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_rxnfc", file: !214, line: 1088, size: 1536, elements: !8491)
!8491 = !{!8492, !8493, !8494, !8495, !8581, !8586}
!8492 = !DIDerivedType(tag: DW_TAG_member, name: "cmd", scope: !8490, file: !214, line: 1089, baseType: !468, size: 32)
!8493 = !DIDerivedType(tag: DW_TAG_member, name: "flow_type", scope: !8490, file: !214, line: 1090, baseType: !468, size: 32, offset: 32)
!8494 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !8490, file: !214, line: 1091, baseType: !338, size: 64, offset: 64)
!8495 = !DIDerivedType(tag: DW_TAG_member, name: "fs", scope: !8490, file: !214, line: 1092, baseType: !8496, size: 1344, offset: 128)
!8496 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_rx_flow_spec", file: !214, line: 992, size: 1344, elements: !8497)
!8497 = !{!8498, !8499, !8567, !8577, !8578, !8579, !8580}
!8498 = !DIDerivedType(tag: DW_TAG_member, name: "flow_type", scope: !8496, file: !214, line: 993, baseType: !468, size: 32)
!8499 = !DIDerivedType(tag: DW_TAG_member, name: "h_u", scope: !8496, file: !214, line: 994, baseType: !8500, size: 416, offset: 32)
!8500 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "ethtool_flow_union", file: !214, line: 939, size: 416, elements: !8501)
!8501 = !{!8502, !8510, !8511, !8512, !8519, !8520, !8529, !8537, !8538, !8539, !8546, !8547, !8555, !8563}
!8502 = !DIDerivedType(tag: DW_TAG_member, name: "tcp_ip4_spec", scope: !8500, file: !214, line: 940, baseType: !8503, size: 128)
!8503 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_tcpip4_spec", file: !214, line: 845, size: 128, elements: !8504)
!8504 = !{!8505, !8506, !8507, !8508, !8509}
!8505 = !DIDerivedType(tag: DW_TAG_member, name: "ip4src", scope: !8503, file: !214, line: 846, baseType: !466, size: 32)
!8506 = !DIDerivedType(tag: DW_TAG_member, name: "ip4dst", scope: !8503, file: !214, line: 847, baseType: !466, size: 32, offset: 32)
!8507 = !DIDerivedType(tag: DW_TAG_member, name: "psrc", scope: !8503, file: !214, line: 848, baseType: !489, size: 16, offset: 64)
!8508 = !DIDerivedType(tag: DW_TAG_member, name: "pdst", scope: !8503, file: !214, line: 849, baseType: !489, size: 16, offset: 80)
!8509 = !DIDerivedType(tag: DW_TAG_member, name: "tos", scope: !8503, file: !214, line: 850, baseType: !1398, size: 8, offset: 96)
!8510 = !DIDerivedType(tag: DW_TAG_member, name: "udp_ip4_spec", scope: !8500, file: !214, line: 941, baseType: !8503, size: 128)
!8511 = !DIDerivedType(tag: DW_TAG_member, name: "sctp_ip4_spec", scope: !8500, file: !214, line: 942, baseType: !8503, size: 128)
!8512 = !DIDerivedType(tag: DW_TAG_member, name: "ah_ip4_spec", scope: !8500, file: !214, line: 943, baseType: !8513, size: 128)
!8513 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_ah_espip4_spec", file: !214, line: 862, size: 128, elements: !8514)
!8514 = !{!8515, !8516, !8517, !8518}
!8515 = !DIDerivedType(tag: DW_TAG_member, name: "ip4src", scope: !8513, file: !214, line: 863, baseType: !466, size: 32)
!8516 = !DIDerivedType(tag: DW_TAG_member, name: "ip4dst", scope: !8513, file: !214, line: 864, baseType: !466, size: 32, offset: 32)
!8517 = !DIDerivedType(tag: DW_TAG_member, name: "spi", scope: !8513, file: !214, line: 865, baseType: !466, size: 32, offset: 64)
!8518 = !DIDerivedType(tag: DW_TAG_member, name: "tos", scope: !8513, file: !214, line: 866, baseType: !1398, size: 8, offset: 96)
!8519 = !DIDerivedType(tag: DW_TAG_member, name: "esp_ip4_spec", scope: !8500, file: !214, line: 944, baseType: !8513, size: 128)
!8520 = !DIDerivedType(tag: DW_TAG_member, name: "usr_ip4_spec", scope: !8500, file: !214, line: 945, baseType: !8521, size: 128)
!8521 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_usrip4_spec", file: !214, line: 880, size: 128, elements: !8522)
!8522 = !{!8523, !8524, !8525, !8526, !8527, !8528}
!8523 = !DIDerivedType(tag: DW_TAG_member, name: "ip4src", scope: !8521, file: !214, line: 881, baseType: !466, size: 32)
!8524 = !DIDerivedType(tag: DW_TAG_member, name: "ip4dst", scope: !8521, file: !214, line: 882, baseType: !466, size: 32, offset: 32)
!8525 = !DIDerivedType(tag: DW_TAG_member, name: "l4_4_bytes", scope: !8521, file: !214, line: 883, baseType: !466, size: 32, offset: 64)
!8526 = !DIDerivedType(tag: DW_TAG_member, name: "tos", scope: !8521, file: !214, line: 884, baseType: !1398, size: 8, offset: 96)
!8527 = !DIDerivedType(tag: DW_TAG_member, name: "ip_ver", scope: !8521, file: !214, line: 885, baseType: !1398, size: 8, offset: 104)
!8528 = !DIDerivedType(tag: DW_TAG_member, name: "proto", scope: !8521, file: !214, line: 886, baseType: !1398, size: 8, offset: 112)
!8529 = !DIDerivedType(tag: DW_TAG_member, name: "tcp_ip6_spec", scope: !8500, file: !214, line: 946, baseType: !8530, size: 320)
!8530 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_tcpip6_spec", file: !214, line: 899, size: 320, elements: !8531)
!8531 = !{!8532, !8533, !8534, !8535, !8536}
!8532 = !DIDerivedType(tag: DW_TAG_member, name: "ip6src", scope: !8530, file: !214, line: 900, baseType: !2215, size: 128)
!8533 = !DIDerivedType(tag: DW_TAG_member, name: "ip6dst", scope: !8530, file: !214, line: 901, baseType: !2215, size: 128, offset: 128)
!8534 = !DIDerivedType(tag: DW_TAG_member, name: "psrc", scope: !8530, file: !214, line: 902, baseType: !489, size: 16, offset: 256)
!8535 = !DIDerivedType(tag: DW_TAG_member, name: "pdst", scope: !8530, file: !214, line: 903, baseType: !489, size: 16, offset: 272)
!8536 = !DIDerivedType(tag: DW_TAG_member, name: "tclass", scope: !8530, file: !214, line: 904, baseType: !1398, size: 8, offset: 288)
!8537 = !DIDerivedType(tag: DW_TAG_member, name: "udp_ip6_spec", scope: !8500, file: !214, line: 947, baseType: !8530, size: 320)
!8538 = !DIDerivedType(tag: DW_TAG_member, name: "sctp_ip6_spec", scope: !8500, file: !214, line: 948, baseType: !8530, size: 320)
!8539 = !DIDerivedType(tag: DW_TAG_member, name: "ah_ip6_spec", scope: !8500, file: !214, line: 949, baseType: !8540, size: 320)
!8540 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_ah_espip6_spec", file: !214, line: 916, size: 320, elements: !8541)
!8541 = !{!8542, !8543, !8544, !8545}
!8542 = !DIDerivedType(tag: DW_TAG_member, name: "ip6src", scope: !8540, file: !214, line: 917, baseType: !2215, size: 128)
!8543 = !DIDerivedType(tag: DW_TAG_member, name: "ip6dst", scope: !8540, file: !214, line: 918, baseType: !2215, size: 128, offset: 128)
!8544 = !DIDerivedType(tag: DW_TAG_member, name: "spi", scope: !8540, file: !214, line: 919, baseType: !466, size: 32, offset: 256)
!8545 = !DIDerivedType(tag: DW_TAG_member, name: "tclass", scope: !8540, file: !214, line: 920, baseType: !1398, size: 8, offset: 288)
!8546 = !DIDerivedType(tag: DW_TAG_member, name: "esp_ip6_spec", scope: !8500, file: !214, line: 950, baseType: !8540, size: 320)
!8547 = !DIDerivedType(tag: DW_TAG_member, name: "usr_ip6_spec", scope: !8500, file: !214, line: 951, baseType: !8548, size: 320)
!8548 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_usrip6_spec", file: !214, line: 931, size: 320, elements: !8549)
!8549 = !{!8550, !8551, !8552, !8553, !8554}
!8550 = !DIDerivedType(tag: DW_TAG_member, name: "ip6src", scope: !8548, file: !214, line: 932, baseType: !2215, size: 128)
!8551 = !DIDerivedType(tag: DW_TAG_member, name: "ip6dst", scope: !8548, file: !214, line: 933, baseType: !2215, size: 128, offset: 128)
!8552 = !DIDerivedType(tag: DW_TAG_member, name: "l4_4_bytes", scope: !8548, file: !214, line: 934, baseType: !466, size: 32, offset: 256)
!8553 = !DIDerivedType(tag: DW_TAG_member, name: "tclass", scope: !8548, file: !214, line: 935, baseType: !1398, size: 8, offset: 288)
!8554 = !DIDerivedType(tag: DW_TAG_member, name: "l4_proto", scope: !8548, file: !214, line: 936, baseType: !1398, size: 8, offset: 296)
!8555 = !DIDerivedType(tag: DW_TAG_member, name: "ether_spec", scope: !8500, file: !214, line: 952, baseType: !8556, size: 112)
!8556 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethhdr", file: !8557, line: 164, size: 112, elements: !8558)
!8557 = !DIFile(filename: "./include/uapi/linux/if_ether.h", directory: "/home/lizy2001/genbc/linux")
!8558 = !{!8559, !8561, !8562}
!8559 = !DIDerivedType(tag: DW_TAG_member, name: "h_dest", scope: !8556, file: !8557, line: 165, baseType: !8560, size: 48)
!8560 = !DICompositeType(tag: DW_TAG_array_type, baseType: !494, size: 48, elements: !1671)
!8561 = !DIDerivedType(tag: DW_TAG_member, name: "h_source", scope: !8556, file: !8557, line: 166, baseType: !8560, size: 48, offset: 48)
!8562 = !DIDerivedType(tag: DW_TAG_member, name: "h_proto", scope: !8556, file: !8557, line: 167, baseType: !489, size: 16, offset: 96)
!8563 = !DIDerivedType(tag: DW_TAG_member, name: "hdata", scope: !8500, file: !214, line: 953, baseType: !8564, size: 416)
!8564 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1398, size: 416, elements: !8565)
!8565 = !{!8566}
!8566 = !DISubrange(count: 52)
!8567 = !DIDerivedType(tag: DW_TAG_member, name: "h_ext", scope: !8496, file: !214, line: 995, baseType: !8568, size: 160, offset: 448)
!8568 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_flow_ext", file: !214, line: 967, size: 160, elements: !8569)
!8569 = !{!8570, !8572, !8573, !8574, !8575}
!8570 = !DIDerivedType(tag: DW_TAG_member, name: "padding", scope: !8568, file: !214, line: 968, baseType: !8571, size: 16)
!8571 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1398, size: 16, elements: !478)
!8572 = !DIDerivedType(tag: DW_TAG_member, name: "h_dest", scope: !8568, file: !214, line: 969, baseType: !8560, size: 48, offset: 16)
!8573 = !DIDerivedType(tag: DW_TAG_member, name: "vlan_etype", scope: !8568, file: !214, line: 970, baseType: !489, size: 16, offset: 64)
!8574 = !DIDerivedType(tag: DW_TAG_member, name: "vlan_tci", scope: !8568, file: !214, line: 971, baseType: !489, size: 16, offset: 80)
!8575 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !8568, file: !214, line: 972, baseType: !8576, size: 64, offset: 96)
!8576 = !DICompositeType(tag: DW_TAG_array_type, baseType: !466, size: 64, elements: !478)
!8577 = !DIDerivedType(tag: DW_TAG_member, name: "m_u", scope: !8496, file: !214, line: 996, baseType: !8500, size: 416, offset: 608)
!8578 = !DIDerivedType(tag: DW_TAG_member, name: "m_ext", scope: !8496, file: !214, line: 997, baseType: !8568, size: 160, offset: 1024)
!8579 = !DIDerivedType(tag: DW_TAG_member, name: "ring_cookie", scope: !8496, file: !214, line: 998, baseType: !338, size: 64, offset: 1216)
!8580 = !DIDerivedType(tag: DW_TAG_member, name: "location", scope: !8496, file: !214, line: 999, baseType: !468, size: 32, offset: 1280)
!8581 = !DIDerivedType(tag: DW_TAG_member, scope: !8490, file: !214, line: 1093, baseType: !8582, size: 32, offset: 1472)
!8582 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !8490, file: !214, line: 1093, size: 32, elements: !8583)
!8583 = !{!8584, !8585}
!8584 = !DIDerivedType(tag: DW_TAG_member, name: "rule_cnt", scope: !8582, file: !214, line: 1094, baseType: !468, size: 32)
!8585 = !DIDerivedType(tag: DW_TAG_member, name: "rss_context", scope: !8582, file: !214, line: 1095, baseType: !468, size: 32)
!8586 = !DIDerivedType(tag: DW_TAG_member, name: "rule_locs", scope: !8490, file: !214, line: 1097, baseType: !7676, offset: 1504)
!8587 = !DIDerivedType(tag: DW_TAG_member, name: "set_rxnfc", scope: !8279, file: !256, line: 463, baseType: !8588, size: 64, offset: 1984)
!8588 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8589, size: 64)
!8589 = !DISubroutineType(types: !8590)
!8590 = !{!37, !295, !8489}
!8591 = !DIDerivedType(tag: DW_TAG_member, name: "flash_device", scope: !8279, file: !256, line: 464, baseType: !8592, size: 64, offset: 2048)
!8592 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8593, size: 64)
!8593 = !DISubroutineType(types: !8594)
!8594 = !{!37, !295, !8595}
!8595 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8596, size: 64)
!8596 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_flash", file: !214, line: 1217, size: 1088, elements: !8597)
!8597 = !{!8598, !8599, !8600}
!8598 = !DIDerivedType(tag: DW_TAG_member, name: "cmd", scope: !8596, file: !214, line: 1218, baseType: !468, size: 32)
!8599 = !DIDerivedType(tag: DW_TAG_member, name: "region", scope: !8596, file: !214, line: 1219, baseType: !468, size: 32, offset: 32)
!8600 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !8596, file: !214, line: 1220, baseType: !2990, size: 1024, offset: 64)
!8601 = !DIDerivedType(tag: DW_TAG_member, name: "reset", scope: !8279, file: !256, line: 465, baseType: !8602, size: 64, offset: 2112)
!8602 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8603, size: 64)
!8603 = !DISubroutineType(types: !8604)
!8604 = !{!37, !295, !1460}
!8605 = !DIDerivedType(tag: DW_TAG_member, name: "get_rxfh_key_size", scope: !8279, file: !256, line: 466, baseType: !8331, size: 64, offset: 2176)
!8606 = !DIDerivedType(tag: DW_TAG_member, name: "get_rxfh_indir_size", scope: !8279, file: !256, line: 467, baseType: !8331, size: 64, offset: 2240)
!8607 = !DIDerivedType(tag: DW_TAG_member, name: "get_rxfh", scope: !8279, file: !256, line: 468, baseType: !8608, size: 64, offset: 2304)
!8608 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8609, size: 64)
!8609 = !DISubroutineType(types: !8610)
!8610 = !{!37, !295, !1460, !7949, !7949}
!8611 = !DIDerivedType(tag: DW_TAG_member, name: "set_rxfh", scope: !8279, file: !256, line: 470, baseType: !8612, size: 64, offset: 2368)
!8612 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8613, size: 64)
!8613 = !DISubroutineType(types: !8614)
!8614 = !{!37, !295, !4627, !8615, !8616}
!8615 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8616, size: 64)
!8616 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1397)
!8617 = !DIDerivedType(tag: DW_TAG_member, name: "get_rxfh_context", scope: !8279, file: !256, line: 472, baseType: !8618, size: 64, offset: 2432)
!8618 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8619, size: 64)
!8619 = !DISubroutineType(types: !8620)
!8620 = !{!37, !295, !1460, !7949, !7949, !707}
!8621 = !DIDerivedType(tag: DW_TAG_member, name: "set_rxfh_context", scope: !8279, file: !256, line: 474, baseType: !8622, size: 64, offset: 2496)
!8622 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8623, size: 64)
!8623 = !DISubroutineType(types: !8624)
!8624 = !{!37, !295, !4627, !8615, !8616, !1460, !540}
!8625 = !DIDerivedType(tag: DW_TAG_member, name: "get_channels", scope: !8279, file: !256, line: 477, baseType: !8626, size: 64, offset: 2560)
!8626 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8627, size: 64)
!8627 = !DISubroutineType(types: !8628)
!8628 = !{null, !295, !8629}
!8629 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8630, size: 64)
!8630 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_channels", file: !214, line: 541, size: 288, elements: !8631)
!8631 = !{!8632, !8633, !8634, !8635, !8636, !8637, !8638, !8639, !8640}
!8632 = !DIDerivedType(tag: DW_TAG_member, name: "cmd", scope: !8630, file: !214, line: 542, baseType: !468, size: 32)
!8633 = !DIDerivedType(tag: DW_TAG_member, name: "max_rx", scope: !8630, file: !214, line: 543, baseType: !468, size: 32, offset: 32)
!8634 = !DIDerivedType(tag: DW_TAG_member, name: "max_tx", scope: !8630, file: !214, line: 544, baseType: !468, size: 32, offset: 64)
!8635 = !DIDerivedType(tag: DW_TAG_member, name: "max_other", scope: !8630, file: !214, line: 545, baseType: !468, size: 32, offset: 96)
!8636 = !DIDerivedType(tag: DW_TAG_member, name: "max_combined", scope: !8630, file: !214, line: 546, baseType: !468, size: 32, offset: 128)
!8637 = !DIDerivedType(tag: DW_TAG_member, name: "rx_count", scope: !8630, file: !214, line: 547, baseType: !468, size: 32, offset: 160)
!8638 = !DIDerivedType(tag: DW_TAG_member, name: "tx_count", scope: !8630, file: !214, line: 548, baseType: !468, size: 32, offset: 192)
!8639 = !DIDerivedType(tag: DW_TAG_member, name: "other_count", scope: !8630, file: !214, line: 549, baseType: !468, size: 32, offset: 224)
!8640 = !DIDerivedType(tag: DW_TAG_member, name: "combined_count", scope: !8630, file: !214, line: 550, baseType: !468, size: 32, offset: 256)
!8641 = !DIDerivedType(tag: DW_TAG_member, name: "set_channels", scope: !8279, file: !256, line: 478, baseType: !8642, size: 64, offset: 2624)
!8642 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8643, size: 64)
!8643 = !DISubroutineType(types: !8644)
!8644 = !{!37, !295, !8629}
!8645 = !DIDerivedType(tag: DW_TAG_member, name: "get_dump_flag", scope: !8279, file: !256, line: 479, baseType: !8646, size: 64, offset: 2688)
!8646 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8647, size: 64)
!8647 = !DISubroutineType(types: !8648)
!8648 = !{!37, !295, !8649}
!8649 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8650, size: 64)
!8650 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_dump", file: !214, line: 1237, size: 128, elements: !8651)
!8651 = !{!8652, !8653, !8654, !8655, !8656}
!8652 = !DIDerivedType(tag: DW_TAG_member, name: "cmd", scope: !8650, file: !214, line: 1238, baseType: !468, size: 32)
!8653 = !DIDerivedType(tag: DW_TAG_member, name: "version", scope: !8650, file: !214, line: 1239, baseType: !468, size: 32, offset: 32)
!8654 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !8650, file: !214, line: 1240, baseType: !468, size: 32, offset: 64)
!8655 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !8650, file: !214, line: 1241, baseType: !468, size: 32, offset: 96)
!8656 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !8650, file: !214, line: 1242, baseType: !7668, offset: 128)
!8657 = !DIDerivedType(tag: DW_TAG_member, name: "get_dump_data", scope: !8279, file: !256, line: 480, baseType: !8658, size: 64, offset: 2752)
!8658 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8659, size: 64)
!8659 = !DISubroutineType(types: !8660)
!8660 = !{!37, !295, !8649, !570}
!8661 = !DIDerivedType(tag: DW_TAG_member, name: "set_dump", scope: !8279, file: !256, line: 482, baseType: !8646, size: 64, offset: 2816)
!8662 = !DIDerivedType(tag: DW_TAG_member, name: "get_ts_info", scope: !8279, file: !256, line: 483, baseType: !8663, size: 64, offset: 2880)
!8663 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8664, size: 64)
!8664 = !DISubroutineType(types: !8665)
!8665 = !{!37, !295, !8666}
!8666 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8667, size: 64)
!8667 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_ts_info", file: !214, line: 1317, size: 352, elements: !8668)
!8668 = !{!8669, !8670, !8671, !8672, !8673, !8675, !8676}
!8669 = !DIDerivedType(tag: DW_TAG_member, name: "cmd", scope: !8667, file: !214, line: 1318, baseType: !468, size: 32)
!8670 = !DIDerivedType(tag: DW_TAG_member, name: "so_timestamping", scope: !8667, file: !214, line: 1319, baseType: !468, size: 32, offset: 32)
!8671 = !DIDerivedType(tag: DW_TAG_member, name: "phc_index", scope: !8667, file: !214, line: 1320, baseType: !1490, size: 32, offset: 64)
!8672 = !DIDerivedType(tag: DW_TAG_member, name: "tx_types", scope: !8667, file: !214, line: 1321, baseType: !468, size: 32, offset: 96)
!8673 = !DIDerivedType(tag: DW_TAG_member, name: "tx_reserved", scope: !8667, file: !214, line: 1322, baseType: !8674, size: 96, offset: 128)
!8674 = !DICompositeType(tag: DW_TAG_array_type, baseType: !468, size: 96, elements: !867)
!8675 = !DIDerivedType(tag: DW_TAG_member, name: "rx_filters", scope: !8667, file: !214, line: 1323, baseType: !468, size: 32, offset: 224)
!8676 = !DIDerivedType(tag: DW_TAG_member, name: "rx_reserved", scope: !8667, file: !214, line: 1324, baseType: !8674, size: 96, offset: 256)
!8677 = !DIDerivedType(tag: DW_TAG_member, name: "get_module_info", scope: !8279, file: !256, line: 484, baseType: !8678, size: 64, offset: 2944)
!8678 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8679, size: 64)
!8679 = !DISubroutineType(types: !8680)
!8680 = !{!37, !295, !8681}
!8681 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8682, size: 64)
!8682 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_modinfo", file: !214, line: 382, size: 352, elements: !8683)
!8683 = !{!8684, !8685, !8686, !8687}
!8684 = !DIDerivedType(tag: DW_TAG_member, name: "cmd", scope: !8682, file: !214, line: 383, baseType: !468, size: 32)
!8685 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !8682, file: !214, line: 384, baseType: !468, size: 32, offset: 32)
!8686 = !DIDerivedType(tag: DW_TAG_member, name: "eeprom_len", scope: !8682, file: !214, line: 385, baseType: !468, size: 32, offset: 64)
!8687 = !DIDerivedType(tag: DW_TAG_member, name: "reserved", scope: !8682, file: !214, line: 386, baseType: !8688, size: 256, offset: 96)
!8688 = !DICompositeType(tag: DW_TAG_array_type, baseType: !468, size: 256, elements: !1371)
!8689 = !DIDerivedType(tag: DW_TAG_member, name: "get_module_eeprom", scope: !8279, file: !256, line: 486, baseType: !8359, size: 64, offset: 3008)
!8690 = !DIDerivedType(tag: DW_TAG_member, name: "get_eee", scope: !8279, file: !256, line: 488, baseType: !8691, size: 64, offset: 3072)
!8691 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8692, size: 64)
!8692 = !DISubroutineType(types: !8693)
!8693 = !{!37, !295, !8694}
!8694 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8695, size: 64)
!8695 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_eee", file: !214, line: 360, size: 320, elements: !8696)
!8696 = !{!8697, !8698, !8699, !8700, !8701, !8702, !8703, !8704, !8705}
!8697 = !DIDerivedType(tag: DW_TAG_member, name: "cmd", scope: !8695, file: !214, line: 361, baseType: !468, size: 32)
!8698 = !DIDerivedType(tag: DW_TAG_member, name: "supported", scope: !8695, file: !214, line: 362, baseType: !468, size: 32, offset: 32)
!8699 = !DIDerivedType(tag: DW_TAG_member, name: "advertised", scope: !8695, file: !214, line: 363, baseType: !468, size: 32, offset: 64)
!8700 = !DIDerivedType(tag: DW_TAG_member, name: "lp_advertised", scope: !8695, file: !214, line: 364, baseType: !468, size: 32, offset: 96)
!8701 = !DIDerivedType(tag: DW_TAG_member, name: "eee_active", scope: !8695, file: !214, line: 365, baseType: !468, size: 32, offset: 128)
!8702 = !DIDerivedType(tag: DW_TAG_member, name: "eee_enabled", scope: !8695, file: !214, line: 366, baseType: !468, size: 32, offset: 160)
!8703 = !DIDerivedType(tag: DW_TAG_member, name: "tx_lpi_enabled", scope: !8695, file: !214, line: 367, baseType: !468, size: 32, offset: 192)
!8704 = !DIDerivedType(tag: DW_TAG_member, name: "tx_lpi_timer", scope: !8695, file: !214, line: 368, baseType: !468, size: 32, offset: 224)
!8705 = !DIDerivedType(tag: DW_TAG_member, name: "reserved", scope: !8695, file: !214, line: 369, baseType: !1613, size: 64, offset: 256)
!8706 = !DIDerivedType(tag: DW_TAG_member, name: "set_eee", scope: !8279, file: !256, line: 489, baseType: !8691, size: 64, offset: 3136)
!8707 = !DIDerivedType(tag: DW_TAG_member, name: "get_tunable", scope: !8279, file: !256, line: 490, baseType: !8708, size: 64, offset: 3200)
!8708 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8709, size: 64)
!8709 = !DISubroutineType(types: !8710)
!8710 = !{!37, !295, !8711, !570}
!8711 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8712, size: 64)
!8712 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !8713)
!8713 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_tunable", file: !214, line: 244, size: 128, elements: !8714)
!8714 = !{!8715, !8716, !8717, !8718, !8719}
!8715 = !DIDerivedType(tag: DW_TAG_member, name: "cmd", scope: !8713, file: !214, line: 245, baseType: !468, size: 32)
!8716 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !8713, file: !214, line: 246, baseType: !468, size: 32, offset: 32)
!8717 = !DIDerivedType(tag: DW_TAG_member, name: "type_id", scope: !8713, file: !214, line: 247, baseType: !468, size: 32, offset: 64)
!8718 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !8713, file: !214, line: 248, baseType: !468, size: 32, offset: 96)
!8719 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !8713, file: !214, line: 249, baseType: !8720, offset: 128)
!8720 = !DICompositeType(tag: DW_TAG_array_type, baseType: !570, elements: !1922)
!8721 = !DIDerivedType(tag: DW_TAG_member, name: "set_tunable", scope: !8279, file: !256, line: 492, baseType: !8722, size: 64, offset: 3264)
!8722 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8723, size: 64)
!8723 = !DISubroutineType(types: !8724)
!8724 = !{!37, !295, !8711, !2244}
!8725 = !DIDerivedType(tag: DW_TAG_member, name: "get_per_queue_coalesce", scope: !8279, file: !256, line: 494, baseType: !8726, size: 64, offset: 3328)
!8726 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8727, size: 64)
!8727 = !DISubroutineType(types: !8728)
!8728 = !{!37, !295, !707, !8375}
!8729 = !DIDerivedType(tag: DW_TAG_member, name: "set_per_queue_coalesce", scope: !8279, file: !256, line: 496, baseType: !8726, size: 64, offset: 3392)
!8730 = !DIDerivedType(tag: DW_TAG_member, name: "get_link_ksettings", scope: !8279, file: !256, line: 498, baseType: !8731, size: 64, offset: 3456)
!8731 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8732, size: 64)
!8732 = !DISubroutineType(types: !8733)
!8733 = !{!37, !295, !8734}
!8734 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8735, size: 64)
!8735 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_link_ksettings", file: !256, line: 124, size: 768, elements: !8736)
!8736 = !{!8737, !8762}
!8737 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !8735, file: !256, line: 125, baseType: !8738, size: 384)
!8738 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_link_settings", file: !214, line: 1996, size: 384, elements: !8739)
!8739 = !{!8740, !8741, !8742, !8743, !8744, !8745, !8746, !8747, !8748, !8749, !8752, !8753, !8754, !8755, !8757, !8761}
!8740 = !DIDerivedType(tag: DW_TAG_member, name: "cmd", scope: !8738, file: !214, line: 1997, baseType: !468, size: 32)
!8741 = !DIDerivedType(tag: DW_TAG_member, name: "speed", scope: !8738, file: !214, line: 1998, baseType: !468, size: 32, offset: 32)
!8742 = !DIDerivedType(tag: DW_TAG_member, name: "duplex", scope: !8738, file: !214, line: 1999, baseType: !1398, size: 8, offset: 64)
!8743 = !DIDerivedType(tag: DW_TAG_member, name: "port", scope: !8738, file: !214, line: 2000, baseType: !1398, size: 8, offset: 72)
!8744 = !DIDerivedType(tag: DW_TAG_member, name: "phy_address", scope: !8738, file: !214, line: 2001, baseType: !1398, size: 8, offset: 80)
!8745 = !DIDerivedType(tag: DW_TAG_member, name: "autoneg", scope: !8738, file: !214, line: 2002, baseType: !1398, size: 8, offset: 88)
!8746 = !DIDerivedType(tag: DW_TAG_member, name: "mdio_support", scope: !8738, file: !214, line: 2003, baseType: !1398, size: 8, offset: 96)
!8747 = !DIDerivedType(tag: DW_TAG_member, name: "eth_tp_mdix", scope: !8738, file: !214, line: 2004, baseType: !1398, size: 8, offset: 104)
!8748 = !DIDerivedType(tag: DW_TAG_member, name: "eth_tp_mdix_ctrl", scope: !8738, file: !214, line: 2005, baseType: !1398, size: 8, offset: 112)
!8749 = !DIDerivedType(tag: DW_TAG_member, name: "link_mode_masks_nwords", scope: !8738, file: !214, line: 2006, baseType: !8750, size: 8, offset: 120)
!8750 = !DIDerivedType(tag: DW_TAG_typedef, name: "__s8", file: !339, line: 20, baseType: !8751)
!8751 = !DIBasicType(name: "signed char", size: 8, encoding: DW_ATE_signed_char)
!8752 = !DIDerivedType(tag: DW_TAG_member, name: "transceiver", scope: !8738, file: !214, line: 2007, baseType: !1398, size: 8, offset: 128)
!8753 = !DIDerivedType(tag: DW_TAG_member, name: "master_slave_cfg", scope: !8738, file: !214, line: 2008, baseType: !1398, size: 8, offset: 136)
!8754 = !DIDerivedType(tag: DW_TAG_member, name: "master_slave_state", scope: !8738, file: !214, line: 2009, baseType: !1398, size: 8, offset: 144)
!8755 = !DIDerivedType(tag: DW_TAG_member, name: "reserved1", scope: !8738, file: !214, line: 2010, baseType: !8756, size: 8, offset: 152)
!8756 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1398, size: 8, elements: !1416)
!8757 = !DIDerivedType(tag: DW_TAG_member, name: "reserved", scope: !8738, file: !214, line: 2011, baseType: !8758, size: 224, offset: 160)
!8758 = !DICompositeType(tag: DW_TAG_array_type, baseType: !468, size: 224, elements: !8759)
!8759 = !{!8760}
!8760 = !DISubrange(count: 7)
!8761 = !DIDerivedType(tag: DW_TAG_member, name: "link_mode_masks", scope: !8738, file: !214, line: 2012, baseType: !7676, offset: 384)
!8762 = !DIDerivedType(tag: DW_TAG_member, name: "link_modes", scope: !8735, file: !256, line: 130, baseType: !8763, size: 384, offset: 384)
!8763 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !8735, file: !256, line: 126, size: 384, elements: !8764)
!8764 = !{!8765, !8767, !8768}
!8765 = !DIDerivedType(tag: DW_TAG_member, name: "supported", scope: !8763, file: !256, line: 127, baseType: !8766, size: 128)
!8766 = !DICompositeType(tag: DW_TAG_array_type, baseType: !317, size: 128, elements: !478)
!8767 = !DIDerivedType(tag: DW_TAG_member, name: "advertising", scope: !8763, file: !256, line: 128, baseType: !8766, size: 128, offset: 128)
!8768 = !DIDerivedType(tag: DW_TAG_member, name: "lp_advertising", scope: !8763, file: !256, line: 129, baseType: !8766, size: 128, offset: 256)
!8769 = !DIDerivedType(tag: DW_TAG_member, name: "set_link_ksettings", scope: !8279, file: !256, line: 500, baseType: !8770, size: 64, offset: 3520)
!8770 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8771, size: 64)
!8771 = !DISubroutineType(types: !8772)
!8772 = !{!37, !295, !8773}
!8773 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8774, size: 64)
!8774 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !8735)
!8775 = !DIDerivedType(tag: DW_TAG_member, name: "get_fecparam", scope: !8279, file: !256, line: 502, baseType: !8776, size: 64, offset: 3584)
!8776 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8777, size: 64)
!8777 = !DISubroutineType(types: !8778)
!8778 = !{!37, !295, !8779}
!8779 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8780, size: 64)
!8780 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_fecparam", file: !214, line: 1389, size: 128, elements: !8781)
!8781 = !{!8782, !8783, !8784, !8785}
!8782 = !DIDerivedType(tag: DW_TAG_member, name: "cmd", scope: !8780, file: !214, line: 1390, baseType: !468, size: 32)
!8783 = !DIDerivedType(tag: DW_TAG_member, name: "active_fec", scope: !8780, file: !214, line: 1392, baseType: !468, size: 32, offset: 32)
!8784 = !DIDerivedType(tag: DW_TAG_member, name: "fec", scope: !8780, file: !214, line: 1393, baseType: !468, size: 32, offset: 64)
!8785 = !DIDerivedType(tag: DW_TAG_member, name: "reserved", scope: !8780, file: !214, line: 1394, baseType: !468, size: 32, offset: 96)
!8786 = !DIDerivedType(tag: DW_TAG_member, name: "set_fecparam", scope: !8279, file: !256, line: 504, baseType: !8776, size: 64, offset: 3648)
!8787 = !DIDerivedType(tag: DW_TAG_member, name: "get_ethtool_phy_stats", scope: !8279, file: !256, line: 506, baseType: !8468, size: 64, offset: 3712)
!8788 = !DIDerivedType(tag: DW_TAG_member, name: "get_phy_tunable", scope: !8279, file: !256, line: 508, baseType: !8708, size: 64, offset: 3776)
!8789 = !DIDerivedType(tag: DW_TAG_member, name: "set_phy_tunable", scope: !8279, file: !256, line: 510, baseType: !8722, size: 64, offset: 3840)
!8790 = !DIDerivedType(tag: DW_TAG_member, name: "ndisc_ops", scope: !269, file: !36, line: 1922, baseType: !8791, size: 64, offset: 4096)
!8791 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8792, size: 64)
!8792 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !8793)
!8793 = !DICompositeType(tag: DW_TAG_structure_type, name: "ndisc_ops", file: !36, line: 1922, flags: DIFlagFwdDecl)
!8794 = !DIDerivedType(tag: DW_TAG_member, name: "header_ops", scope: !269, file: !36, line: 1933, baseType: !8795, size: 64, offset: 4160)
!8795 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8796, size: 64)
!8796 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !8797)
!8797 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "header_ops", file: !36, line: 270, size: 384, elements: !8798)
!8798 = !{!8799, !8803, !8809, !8814, !8818, !8822}
!8799 = !DIDerivedType(tag: DW_TAG_member, name: "create", scope: !8797, file: !36, line: 271, baseType: !8800, size: 64)
!8800 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8801, size: 64)
!8801 = !DISubroutineType(types: !8802)
!8802 = !{!37, !420, !295, !477, !2244, !2244, !7}
!8803 = !DIDerivedType(tag: DW_TAG_member, name: "parse", scope: !8797, file: !36, line: 274, baseType: !8804, size: 64, offset: 64)
!8804 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8805, size: 64)
!8805 = !DISubroutineType(types: !8806)
!8806 = !{!37, !8807, !7745}
!8807 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8808, size: 64)
!8808 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !421)
!8809 = !DIDerivedType(tag: DW_TAG_member, name: "cache", scope: !8797, file: !36, line: 275, baseType: !8810, size: 64, offset: 128)
!8810 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8811, size: 64)
!8811 = !DISubroutineType(types: !8812)
!8812 = !{!37, !2689, !8813, !489}
!8813 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2827, size: 64)
!8814 = !DIDerivedType(tag: DW_TAG_member, name: "cache_update", scope: !8797, file: !36, line: 276, baseType: !8815, size: 64, offset: 192)
!8815 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8816, size: 64)
!8816 = !DISubroutineType(types: !8817)
!8817 = !{null, !8813, !2682, !711}
!8818 = !DIDerivedType(tag: DW_TAG_member, name: "validate", scope: !8797, file: !36, line: 279, baseType: !8819, size: 64, offset: 256)
!8819 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8820, size: 64)
!8820 = !DISubroutineType(types: !8821)
!8821 = !{!540, !297, !7}
!8822 = !DIDerivedType(tag: DW_TAG_member, name: "parse_protocol", scope: !8797, file: !36, line: 280, baseType: !8823, size: 64, offset: 320)
!8823 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8824, size: 64)
!8824 = !DISubroutineType(types: !8825)
!8825 = !{!489, !8807}
!8826 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !269, file: !36, line: 1935, baseType: !7, size: 32, offset: 4224)
!8827 = !DIDerivedType(tag: DW_TAG_member, name: "priv_flags", scope: !269, file: !36, line: 1936, baseType: !7, size: 32, offset: 4256)
!8828 = !DIDerivedType(tag: DW_TAG_member, name: "gflags", scope: !269, file: !36, line: 1938, baseType: !477, size: 16, offset: 4288)
!8829 = !DIDerivedType(tag: DW_TAG_member, name: "padded", scope: !269, file: !36, line: 1939, baseType: !477, size: 16, offset: 4304)
!8830 = !DIDerivedType(tag: DW_TAG_member, name: "operstate", scope: !269, file: !36, line: 1941, baseType: !494, size: 8, offset: 4320)
!8831 = !DIDerivedType(tag: DW_TAG_member, name: "link_mode", scope: !269, file: !36, line: 1942, baseType: !494, size: 8, offset: 4328)
!8832 = !DIDerivedType(tag: DW_TAG_member, name: "if_port", scope: !269, file: !36, line: 1944, baseType: !494, size: 8, offset: 4336)
!8833 = !DIDerivedType(tag: DW_TAG_member, name: "dma", scope: !269, file: !36, line: 1945, baseType: !494, size: 8, offset: 4344)
!8834 = !DIDerivedType(tag: DW_TAG_member, name: "mtu", scope: !269, file: !36, line: 1952, baseType: !7, size: 32, offset: 4352)
!8835 = !DIDerivedType(tag: DW_TAG_member, name: "min_mtu", scope: !269, file: !36, line: 1953, baseType: !7, size: 32, offset: 4384)
!8836 = !DIDerivedType(tag: DW_TAG_member, name: "max_mtu", scope: !269, file: !36, line: 1954, baseType: !7, size: 32, offset: 4416)
!8837 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !269, file: !36, line: 1955, baseType: !477, size: 16, offset: 4448)
!8838 = !DIDerivedType(tag: DW_TAG_member, name: "hard_header_len", scope: !269, file: !36, line: 1956, baseType: !477, size: 16, offset: 4464)
!8839 = !DIDerivedType(tag: DW_TAG_member, name: "min_header_len", scope: !269, file: !36, line: 1957, baseType: !494, size: 8, offset: 4480)
!8840 = !DIDerivedType(tag: DW_TAG_member, name: "name_assign_type", scope: !269, file: !36, line: 1958, baseType: !494, size: 8, offset: 4488)
!8841 = !DIDerivedType(tag: DW_TAG_member, name: "needed_headroom", scope: !269, file: !36, line: 1960, baseType: !477, size: 16, offset: 4496)
!8842 = !DIDerivedType(tag: DW_TAG_member, name: "needed_tailroom", scope: !269, file: !36, line: 1961, baseType: !477, size: 16, offset: 4512)
!8843 = !DIDerivedType(tag: DW_TAG_member, name: "perm_addr", scope: !269, file: !36, line: 1964, baseType: !715, size: 256, offset: 4528)
!8844 = !DIDerivedType(tag: DW_TAG_member, name: "addr_assign_type", scope: !269, file: !36, line: 1965, baseType: !494, size: 8, offset: 4784)
!8845 = !DIDerivedType(tag: DW_TAG_member, name: "addr_len", scope: !269, file: !36, line: 1966, baseType: !494, size: 8, offset: 4792)
!8846 = !DIDerivedType(tag: DW_TAG_member, name: "upper_level", scope: !269, file: !36, line: 1967, baseType: !494, size: 8, offset: 4800)
!8847 = !DIDerivedType(tag: DW_TAG_member, name: "lower_level", scope: !269, file: !36, line: 1968, baseType: !494, size: 8, offset: 4808)
!8848 = !DIDerivedType(tag: DW_TAG_member, name: "neigh_priv_len", scope: !269, file: !36, line: 1970, baseType: !477, size: 16, offset: 4816)
!8849 = !DIDerivedType(tag: DW_TAG_member, name: "dev_id", scope: !269, file: !36, line: 1971, baseType: !477, size: 16, offset: 4832)
!8850 = !DIDerivedType(tag: DW_TAG_member, name: "dev_port", scope: !269, file: !36, line: 1972, baseType: !477, size: 16, offset: 4848)
!8851 = !DIDerivedType(tag: DW_TAG_member, name: "addr_list_lock", scope: !269, file: !36, line: 1973, baseType: !729, offset: 4864)
!8852 = !DIDerivedType(tag: DW_TAG_member, name: "uc", scope: !269, file: !36, line: 1975, baseType: !8853, size: 192, offset: 4864)
!8853 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "netdev_hw_addr_list", file: !36, line: 224, size: 192, elements: !8854)
!8854 = !{!8855, !8856}
!8855 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !8853, file: !36, line: 225, baseType: !289, size: 128)
!8856 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !8853, file: !36, line: 226, baseType: !37, size: 32, offset: 128)
!8857 = !DIDerivedType(tag: DW_TAG_member, name: "mc", scope: !269, file: !36, line: 1976, baseType: !8853, size: 192, offset: 5056)
!8858 = !DIDerivedType(tag: DW_TAG_member, name: "dev_addrs", scope: !269, file: !36, line: 1977, baseType: !8853, size: 192, offset: 5248)
!8859 = !DIDerivedType(tag: DW_TAG_member, name: "queues_kset", scope: !269, file: !36, line: 1980, baseType: !3815, size: 64, offset: 5440)
!8860 = !DIDerivedType(tag: DW_TAG_member, name: "promiscuity", scope: !269, file: !36, line: 1985, baseType: !7, size: 32, offset: 5504)
!8861 = !DIDerivedType(tag: DW_TAG_member, name: "allmulti", scope: !269, file: !36, line: 1986, baseType: !7, size: 32, offset: 5536)
!8862 = !DIDerivedType(tag: DW_TAG_member, name: "uc_promisc", scope: !269, file: !36, line: 1987, baseType: !540, size: 8, offset: 5568)
!8863 = !DIDerivedType(tag: DW_TAG_member, name: "vlan_info", scope: !269, file: !36, line: 1996, baseType: !8864, size: 64, offset: 5632)
!8864 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8865, size: 64)
!8865 = !DICompositeType(tag: DW_TAG_structure_type, name: "vlan_info", file: !36, line: 1996, flags: DIFlagFwdDecl)
!8866 = !DIDerivedType(tag: DW_TAG_member, name: "ip_ptr", scope: !269, file: !36, line: 2007, baseType: !8867, size: 64, offset: 5696)
!8867 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8868, size: 64)
!8868 = !DICompositeType(tag: DW_TAG_structure_type, name: "in_device", file: !36, line: 2007, flags: DIFlagFwdDecl)
!8869 = !DIDerivedType(tag: DW_TAG_member, name: "ip6_ptr", scope: !269, file: !36, line: 2011, baseType: !8870, size: 64, offset: 5760)
!8870 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8871, size: 64)
!8871 = !DICompositeType(tag: DW_TAG_structure_type, name: "inet6_dev", file: !36, line: 2011, flags: DIFlagFwdDecl)
!8872 = !DIDerivedType(tag: DW_TAG_member, name: "ieee80211_ptr", scope: !269, file: !36, line: 2015, baseType: !8873, size: 64, offset: 5824)
!8873 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8874, size: 64)
!8874 = !DICompositeType(tag: DW_TAG_structure_type, name: "wireless_dev", file: !36, line: 62, flags: DIFlagFwdDecl)
!8875 = !DIDerivedType(tag: DW_TAG_member, name: "ieee802154_ptr", scope: !269, file: !36, line: 2016, baseType: !8876, size: 64, offset: 5888)
!8876 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8877, size: 64)
!8877 = !DICompositeType(tag: DW_TAG_structure_type, name: "wpan_dev", file: !36, line: 64, flags: DIFlagFwdDecl)
!8878 = !DIDerivedType(tag: DW_TAG_member, name: "dev_addr", scope: !269, file: !36, line: 2025, baseType: !7745, size: 64, offset: 5952)
!8879 = !DIDerivedType(tag: DW_TAG_member, name: "_rx", scope: !269, file: !36, line: 2027, baseType: !8880, size: 64, offset: 6016)
!8880 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8881, size: 64)
!8881 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "netdev_rx_queue", file: !36, line: 736, size: 1536, elements: !8882)
!8882 = !{!8883, !8884, !8885}
!8883 = !DIDerivedType(tag: DW_TAG_member, name: "kobj", scope: !8881, file: !36, line: 741, baseType: !3807, size: 512)
!8884 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !8881, file: !36, line: 742, baseType: !295, size: 64, offset: 512)
!8885 = !DIDerivedType(tag: DW_TAG_member, name: "xdp_rxq", scope: !8881, file: !36, line: 743, baseType: !8886, size: 512, align: 512, offset: 1024)
!8886 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xdp_rxq_info", file: !8243, line: 57, size: 512, align: 512, elements: !8887)
!8887 = !{!8888, !8889, !8890, !8891}
!8888 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !8886, file: !8243, line: 58, baseType: !295, size: 64)
!8889 = !DIDerivedType(tag: DW_TAG_member, name: "queue_index", scope: !8886, file: !8243, line: 59, baseType: !707, size: 32, offset: 64)
!8890 = !DIDerivedType(tag: DW_TAG_member, name: "reg_state", scope: !8886, file: !8243, line: 60, baseType: !707, size: 32, offset: 96)
!8891 = !DIDerivedType(tag: DW_TAG_member, name: "mem", scope: !8886, file: !8243, line: 61, baseType: !8251, size: 64, offset: 128)
!8892 = !DIDerivedType(tag: DW_TAG_member, name: "num_rx_queues", scope: !269, file: !36, line: 2028, baseType: !7, size: 32, offset: 6080)
!8893 = !DIDerivedType(tag: DW_TAG_member, name: "real_num_rx_queues", scope: !269, file: !36, line: 2029, baseType: !7, size: 32, offset: 6112)
!8894 = !DIDerivedType(tag: DW_TAG_member, name: "xdp_prog", scope: !269, file: !36, line: 2031, baseType: !2909, size: 64, offset: 6144)
!8895 = !DIDerivedType(tag: DW_TAG_member, name: "gro_flush_timeout", scope: !269, file: !36, line: 2032, baseType: !317, size: 64, offset: 6208)
!8896 = !DIDerivedType(tag: DW_TAG_member, name: "napi_defer_hard_irqs", scope: !269, file: !36, line: 2033, baseType: !37, size: 32, offset: 6272)
!8897 = !DIDerivedType(tag: DW_TAG_member, name: "rx_handler", scope: !269, file: !36, line: 2034, baseType: !8898, size: 64, offset: 6336)
!8898 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8899, size: 64)
!8899 = !DIDerivedType(tag: DW_TAG_typedef, name: "rx_handler_func_t", file: !36, line: 430, baseType: !8900)
!8900 = !DISubroutineType(types: !8901)
!8901 = !{!8902, !8903}
!8902 = !DIDerivedType(tag: DW_TAG_typedef, name: "rx_handler_result_t", file: !36, line: 429, baseType: !262)
!8903 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !420, size: 64)
!8904 = !DIDerivedType(tag: DW_TAG_member, name: "rx_handler_data", scope: !269, file: !36, line: 2035, baseType: !570, size: 64, offset: 6400)
!8905 = !DIDerivedType(tag: DW_TAG_member, name: "ingress_queue", scope: !269, file: !36, line: 2040, baseType: !8906, size: 64, offset: 6464)
!8906 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8907, size: 64)
!8907 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "netdev_queue", file: !36, line: 584, size: 1600, elements: !8908)
!8908 = !{!8909, !8910, !9288, !9289, !9290, !9291, !9292, !9293, !9294, !9295, !9296, !9297}
!8909 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !8907, file: !36, line: 588, baseType: !295, size: 64)
!8910 = !DIDerivedType(tag: DW_TAG_member, name: "qdisc", scope: !8907, file: !36, line: 589, baseType: !8911, size: 64, offset: 64)
!8911 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8912, size: 64)
!8912 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Qdisc", file: !8913, line: 57, size: 2048, elements: !8914)
!8913 = !DIFile(filename: "./include/net/sch_generic.h", directory: "/home/lizy2001/genbc/linux")
!8914 = !{!8915, !8919, !8923, !8924, !8925, !9228, !9248, !9249, !9250, !9251, !9252, !9255, !9265, !9266, !9267, !9268, !9269, !9276, !9277, !9278, !9279, !9280, !9281, !9282, !9283, !9284, !9285, !9286}
!8915 = !DIDerivedType(tag: DW_TAG_member, name: "enqueue", scope: !8912, file: !8913, line: 58, baseType: !8916, size: 64)
!8916 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8917, size: 64)
!8917 = !DISubroutineType(types: !8918)
!8918 = !{!37, !420, !8911, !8903}
!8919 = !DIDerivedType(tag: DW_TAG_member, name: "dequeue", scope: !8912, file: !8913, line: 61, baseType: !8920, size: 64, offset: 64)
!8920 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8921, size: 64)
!8921 = !DISubroutineType(types: !8922)
!8922 = !{!420, !8911}
!8923 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !8912, file: !8913, line: 62, baseType: !7, size: 32, offset: 128)
!8924 = !DIDerivedType(tag: DW_TAG_member, name: "limit", scope: !8912, file: !8913, line: 82, baseType: !707, size: 32, offset: 160)
!8925 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !8912, file: !8913, line: 83, baseType: !8926, size: 64, offset: 192)
!8926 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8927, size: 64)
!8927 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !8928)
!8928 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Qdisc_ops", file: !8913, line: 238, size: 1344, elements: !8929)
!8929 = !{!8930, !8932, !9188, !9189, !9190, !9191, !9192, !9193, !9194, !9198, !9202, !9203, !9204, !9205, !9209, !9213, !9217, !9221, !9222, !9226, !9227}
!8930 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !8928, file: !8913, line: 239, baseType: !8931, size: 64)
!8931 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8928, size: 64)
!8932 = !DIDerivedType(tag: DW_TAG_member, name: "cl_ops", scope: !8928, file: !8913, line: 240, baseType: !8933, size: 64, offset: 64)
!8933 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8934, size: 64)
!8934 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !8935)
!8935 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Qdisc_class_ops", file: !8913, line: 198, size: 896, elements: !8936)
!8936 = !{!8937, !8938, !8953, !8958, !8962, !8966, !8970, !8974, !8978, !8984, !9151, !9155, !9156, !9160}
!8937 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !8935, file: !8913, line: 199, baseType: !7, size: 32)
!8938 = !DIDerivedType(tag: DW_TAG_member, name: "select_queue", scope: !8935, file: !8913, line: 201, baseType: !8939, size: 64, offset: 64)
!8939 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8940, size: 64)
!8940 = !DISubroutineType(types: !8941)
!8941 = !{!8906, !8911, !8942}
!8942 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8943, size: 64)
!8943 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tcmsg", file: !8944, line: 577, size: 160, elements: !8945)
!8944 = !DIFile(filename: "./include/uapi/linux/rtnetlink.h", directory: "/home/lizy2001/genbc/linux")
!8945 = !{!8946, !8947, !8948, !8949, !8950, !8951, !8952}
!8946 = !DIDerivedType(tag: DW_TAG_member, name: "tcm_family", scope: !8943, file: !8944, line: 578, baseType: !494, size: 8)
!8947 = !DIDerivedType(tag: DW_TAG_member, name: "tcm__pad1", scope: !8943, file: !8944, line: 579, baseType: !494, size: 8, offset: 8)
!8948 = !DIDerivedType(tag: DW_TAG_member, name: "tcm__pad2", scope: !8943, file: !8944, line: 580, baseType: !477, size: 16, offset: 16)
!8949 = !DIDerivedType(tag: DW_TAG_member, name: "tcm_ifindex", scope: !8943, file: !8944, line: 581, baseType: !37, size: 32, offset: 32)
!8950 = !DIDerivedType(tag: DW_TAG_member, name: "tcm_handle", scope: !8943, file: !8944, line: 582, baseType: !468, size: 32, offset: 64)
!8951 = !DIDerivedType(tag: DW_TAG_member, name: "tcm_parent", scope: !8943, file: !8944, line: 583, baseType: !468, size: 32, offset: 96)
!8952 = !DIDerivedType(tag: DW_TAG_member, name: "tcm_info", scope: !8943, file: !8944, line: 588, baseType: !468, size: 32, offset: 128)
!8953 = !DIDerivedType(tag: DW_TAG_member, name: "graft", scope: !8935, file: !8913, line: 202, baseType: !8954, size: 64, offset: 128)
!8954 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8955, size: 64)
!8955 = !DISubroutineType(types: !8956)
!8956 = !{!37, !8911, !317, !8911, !8957, !2444}
!8957 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8911, size: 64)
!8958 = !DIDerivedType(tag: DW_TAG_member, name: "leaf", scope: !8935, file: !8913, line: 205, baseType: !8959, size: 64, offset: 192)
!8959 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8960, size: 64)
!8960 = !DISubroutineType(types: !8961)
!8961 = !{!8911, !8911, !317}
!8962 = !DIDerivedType(tag: DW_TAG_member, name: "qlen_notify", scope: !8935, file: !8913, line: 206, baseType: !8963, size: 64, offset: 256)
!8963 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8964, size: 64)
!8964 = !DISubroutineType(types: !8965)
!8965 = !{null, !8911, !317}
!8966 = !DIDerivedType(tag: DW_TAG_member, name: "find", scope: !8935, file: !8913, line: 209, baseType: !8967, size: 64, offset: 320)
!8967 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8968, size: 64)
!8968 = !DISubroutineType(types: !8969)
!8969 = !{!317, !8911, !707}
!8970 = !DIDerivedType(tag: DW_TAG_member, name: "change", scope: !8935, file: !8913, line: 210, baseType: !8971, size: 64, offset: 384)
!8971 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8972, size: 64)
!8972 = !DISubroutineType(types: !8973)
!8973 = !{!37, !8911, !707, !707, !8006, !2427, !2444}
!8974 = !DIDerivedType(tag: DW_TAG_member, name: "delete", scope: !8935, file: !8913, line: 213, baseType: !8975, size: 64, offset: 448)
!8975 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8976, size: 64)
!8976 = !DISubroutineType(types: !8977)
!8977 = !{!37, !8911, !317}
!8978 = !DIDerivedType(tag: DW_TAG_member, name: "walk", scope: !8935, file: !8913, line: 214, baseType: !8979, size: 64, offset: 512)
!8979 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8980, size: 64)
!8980 = !DISubroutineType(types: !8981)
!8981 = !{null, !8911, !8982}
!8982 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8983, size: 64)
!8983 = !DICompositeType(tag: DW_TAG_structure_type, name: "qdisc_walker", file: !8913, line: 24, flags: DIFlagFwdDecl)
!8984 = !DIDerivedType(tag: DW_TAG_member, name: "tcf_block", scope: !8935, file: !8913, line: 217, baseType: !8985, size: 64, offset: 576)
!8985 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8986, size: 64)
!8986 = !DISubroutineType(types: !8987)
!8987 = !{!8988, !8911, !317, !2444}
!8988 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8989, size: 64)
!8989 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tcf_block", file: !8913, line: 411, size: 9920, elements: !8990)
!8990 = !{!8991, !8992, !8993, !8994, !8995, !8996, !8997, !8998, !8999, !9004, !9005, !9006, !9007, !9008, !9009, !9147, !9148, !9150}
!8991 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !8989, file: !8913, line: 415, baseType: !954, size: 192)
!8992 = !DIDerivedType(tag: DW_TAG_member, name: "chain_list", scope: !8989, file: !8913, line: 416, baseType: !289, size: 128, offset: 192)
!8993 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !8989, file: !8913, line: 417, baseType: !707, size: 32, offset: 320)
!8994 = !DIDerivedType(tag: DW_TAG_member, name: "classid", scope: !8989, file: !8913, line: 418, baseType: !707, size: 32, offset: 352)
!8995 = !DIDerivedType(tag: DW_TAG_member, name: "refcnt", scope: !8989, file: !8913, line: 419, baseType: !1271, size: 32, offset: 384)
!8996 = !DIDerivedType(tag: DW_TAG_member, name: "net", scope: !8989, file: !8913, line: 420, baseType: !1962, size: 64, offset: 448)
!8997 = !DIDerivedType(tag: DW_TAG_member, name: "q", scope: !8989, file: !8913, line: 421, baseType: !8911, size: 64, offset: 512)
!8998 = !DIDerivedType(tag: DW_TAG_member, name: "cb_lock", scope: !8989, file: !8913, line: 422, baseType: !1162, size: 256, offset: 576)
!8999 = !DIDerivedType(tag: DW_TAG_member, name: "flow_block", scope: !8989, file: !8913, line: 423, baseType: !9000, size: 128, offset: 832)
!9000 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "flow_block", file: !9001, line: 430, size: 128, elements: !9002)
!9001 = !DIFile(filename: "./include/net/flow_offload.h", directory: "/home/lizy2001/genbc/linux")
!9002 = !{!9003}
!9003 = !DIDerivedType(tag: DW_TAG_member, name: "cb_list", scope: !9000, file: !9001, line: 431, baseType: !289, size: 128)
!9004 = !DIDerivedType(tag: DW_TAG_member, name: "owner_list", scope: !8989, file: !8913, line: 424, baseType: !289, size: 128, offset: 960)
!9005 = !DIDerivedType(tag: DW_TAG_member, name: "keep_dst", scope: !8989, file: !8913, line: 425, baseType: !540, size: 8, offset: 1088)
!9006 = !DIDerivedType(tag: DW_TAG_member, name: "offloadcnt", scope: !8989, file: !8913, line: 426, baseType: !388, size: 32, offset: 1120)
!9007 = !DIDerivedType(tag: DW_TAG_member, name: "nooffloaddevcnt", scope: !8989, file: !8913, line: 427, baseType: !7, size: 32, offset: 1152)
!9008 = !DIDerivedType(tag: DW_TAG_member, name: "lockeddevcnt", scope: !8989, file: !8913, line: 428, baseType: !7, size: 32, offset: 1184)
!9009 = !DIDerivedType(tag: DW_TAG_member, name: "chain0", scope: !8989, file: !8913, line: 432, baseType: !9010, size: 192, offset: 1216)
!9010 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !8989, file: !8913, line: 429, size: 192, elements: !9011)
!9011 = !{!9012, !9146}
!9012 = !DIDerivedType(tag: DW_TAG_member, name: "chain", scope: !9010, file: !8913, line: 430, baseType: !9013, size: 64)
!9013 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9014, size: 64)
!9014 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tcf_chain", file: !8913, line: 395, size: 832, elements: !9015)
!9015 = !{!9016, !9017, !9136, !9137, !9138, !9139, !9140, !9141, !9142, !9143, !9144, !9145}
!9016 = !DIDerivedType(tag: DW_TAG_member, name: "filter_chain_lock", scope: !9014, file: !8913, line: 397, baseType: !954, size: 192)
!9017 = !DIDerivedType(tag: DW_TAG_member, name: "filter_chain", scope: !9014, file: !8913, line: 398, baseType: !9018, size: 64, offset: 192)
!9018 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9019, size: 64)
!9019 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tcf_proto", file: !8913, line: 356, size: 768, elements: !9020)
!9020 = !{!9021, !9022, !9023, !9055, !9056, !9057, !9058, !9130, !9131, !9132, !9133, !9134, !9135}
!9021 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !9019, file: !8913, line: 358, baseType: !9018, size: 64)
!9022 = !DIDerivedType(tag: DW_TAG_member, name: "root", scope: !9019, file: !8913, line: 359, baseType: !570, size: 64, offset: 64)
!9023 = !DIDerivedType(tag: DW_TAG_member, name: "classify", scope: !9019, file: !8913, line: 362, baseType: !9024, size: 64, offset: 128)
!9024 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9025, size: 64)
!9025 = !DISubroutineType(types: !9026)
!9026 = !{!37, !420, !9027, !9029}
!9027 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9028, size: 64)
!9028 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !9019)
!9029 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9030, size: 64)
!9030 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tcf_result", file: !8913, line: 275, size: 128, elements: !9031)
!9031 = !{!9032}
!9032 = !DIDerivedType(tag: DW_TAG_member, scope: !9030, file: !8913, line: 276, baseType: !9033, size: 128)
!9033 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !9030, file: !8913, line: 276, size: 128, elements: !9034)
!9034 = !{!9035, !9040, !9041}
!9035 = !DIDerivedType(tag: DW_TAG_member, scope: !9033, file: !8913, line: 277, baseType: !9036, size: 128)
!9036 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !9033, file: !8913, line: 277, size: 128, elements: !9037)
!9037 = !{!9038, !9039}
!9038 = !DIDerivedType(tag: DW_TAG_member, name: "class", scope: !9036, file: !8913, line: 278, baseType: !317, size: 64)
!9039 = !DIDerivedType(tag: DW_TAG_member, name: "classid", scope: !9036, file: !8913, line: 279, baseType: !707, size: 32, offset: 64)
!9040 = !DIDerivedType(tag: DW_TAG_member, name: "goto_tp", scope: !9033, file: !8913, line: 281, baseType: !9027, size: 64)
!9041 = !DIDerivedType(tag: DW_TAG_member, scope: !9033, file: !8913, line: 284, baseType: !9042, size: 128)
!9042 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !9033, file: !8913, line: 284, size: 128, elements: !9043)
!9043 = !{!9044, !9045}
!9044 = !DIDerivedType(tag: DW_TAG_member, name: "ingress", scope: !9042, file: !8913, line: 285, baseType: !540, size: 8)
!9045 = !DIDerivedType(tag: DW_TAG_member, name: "qstats", scope: !9042, file: !8913, line: 286, baseType: !9046, size: 64, offset: 64)
!9046 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9047, size: 64)
!9047 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gnet_stats_queue", file: !9048, line: 59, size: 160, elements: !9049)
!9048 = !DIFile(filename: "./include/uapi/linux/gen_stats.h", directory: "/home/lizy2001/genbc/linux")
!9049 = !{!9050, !9051, !9052, !9053, !9054}
!9050 = !DIDerivedType(tag: DW_TAG_member, name: "qlen", scope: !9047, file: !9048, line: 60, baseType: !468, size: 32)
!9051 = !DIDerivedType(tag: DW_TAG_member, name: "backlog", scope: !9047, file: !9048, line: 61, baseType: !468, size: 32, offset: 32)
!9052 = !DIDerivedType(tag: DW_TAG_member, name: "drops", scope: !9047, file: !9048, line: 62, baseType: !468, size: 32, offset: 64)
!9053 = !DIDerivedType(tag: DW_TAG_member, name: "requeues", scope: !9047, file: !9048, line: 63, baseType: !468, size: 32, offset: 96)
!9054 = !DIDerivedType(tag: DW_TAG_member, name: "overlimits", scope: !9047, file: !9048, line: 64, baseType: !468, size: 32, offset: 128)
!9055 = !DIDerivedType(tag: DW_TAG_member, name: "protocol", scope: !9019, file: !8913, line: 365, baseType: !489, size: 16, offset: 192)
!9056 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !9019, file: !8913, line: 368, baseType: !707, size: 32, offset: 224)
!9057 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !9019, file: !8913, line: 369, baseType: !570, size: 64, offset: 256)
!9058 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !9019, file: !8913, line: 370, baseType: !9059, size: 64, offset: 320)
!9059 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9060, size: 64)
!9060 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !9061)
!9061 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tcf_proto_ops", file: !8913, line: 293, size: 1536, elements: !9062)
!9062 = !{!9063, !9064, !9065, !9066, !9070, !9074, !9078, !9082, !9086, !9090, !9094, !9100, !9108, !9109, !9110, !9114, !9118, !9119, !9123, !9124, !9128, !9129}
!9063 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !9061, file: !8913, line: 294, baseType: !289, size: 128)
!9064 = !DIDerivedType(tag: DW_TAG_member, name: "kind", scope: !9061, file: !8913, line: 295, baseType: !272, size: 128, offset: 128)
!9065 = !DIDerivedType(tag: DW_TAG_member, name: "classify", scope: !9061, file: !8913, line: 297, baseType: !9024, size: 64, offset: 256)
!9066 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !9061, file: !8913, line: 300, baseType: !9067, size: 64, offset: 320)
!9067 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9068, size: 64)
!9068 = !DISubroutineType(types: !9069)
!9069 = !{!37, !9018}
!9070 = !DIDerivedType(tag: DW_TAG_member, name: "destroy", scope: !9061, file: !8913, line: 301, baseType: !9071, size: 64, offset: 384)
!9071 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9072, size: 64)
!9072 = !DISubroutineType(types: !9073)
!9073 = !{null, !9018, !540, !2444}
!9074 = !DIDerivedType(tag: DW_TAG_member, name: "get", scope: !9061, file: !8913, line: 304, baseType: !9075, size: 64, offset: 448)
!9075 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9076, size: 64)
!9076 = !DISubroutineType(types: !9077)
!9077 = !{!570, !9018, !707}
!9078 = !DIDerivedType(tag: DW_TAG_member, name: "put", scope: !9061, file: !8913, line: 305, baseType: !9079, size: 64, offset: 512)
!9079 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9080, size: 64)
!9080 = !DISubroutineType(types: !9081)
!9081 = !{null, !9018, !570}
!9082 = !DIDerivedType(tag: DW_TAG_member, name: "change", scope: !9061, file: !8913, line: 306, baseType: !9083, size: 64, offset: 576)
!9083 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9084, size: 64)
!9084 = !DISubroutineType(types: !9085)
!9085 = !{!37, !1962, !420, !9018, !317, !707, !8006, !3480, !540, !540, !2444}
!9086 = !DIDerivedType(tag: DW_TAG_member, name: "delete", scope: !9061, file: !8913, line: 311, baseType: !9087, size: 64, offset: 640)
!9087 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9088, size: 64)
!9088 = !DISubroutineType(types: !9089)
!9089 = !{!37, !9018, !570, !4728, !540, !2444}
!9090 = !DIDerivedType(tag: DW_TAG_member, name: "delete_empty", scope: !9061, file: !8913, line: 314, baseType: !9091, size: 64, offset: 704)
!9091 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9092, size: 64)
!9092 = !DISubroutineType(types: !9093)
!9093 = !{!540, !9018}
!9094 = !DIDerivedType(tag: DW_TAG_member, name: "walk", scope: !9061, file: !8913, line: 315, baseType: !9095, size: 64, offset: 768)
!9095 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9096, size: 64)
!9096 = !DISubroutineType(types: !9097)
!9097 = !{null, !9018, !9098, !540}
!9098 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9099, size: 64)
!9099 = !DICompositeType(tag: DW_TAG_structure_type, name: "tcf_walker", file: !8913, line: 25, flags: DIFlagFwdDecl)
!9100 = !DIDerivedType(tag: DW_TAG_member, name: "reoffload", scope: !9061, file: !8913, line: 317, baseType: !9101, size: 64, offset: 832)
!9101 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9102, size: 64)
!9102 = !DISubroutineType(types: !9103)
!9103 = !{!37, !9018, !540, !9104, !570, !2444}
!9104 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9105, size: 64)
!9105 = !DIDerivedType(tag: DW_TAG_typedef, name: "flow_setup_cb_t", file: !9001, line: 450, baseType: !9106)
!9106 = !DISubroutineType(types: !9107)
!9107 = !{!37, !42, !570, !570}
!9108 = !DIDerivedType(tag: DW_TAG_member, name: "hw_add", scope: !9061, file: !8913, line: 320, baseType: !9079, size: 64, offset: 896)
!9109 = !DIDerivedType(tag: DW_TAG_member, name: "hw_del", scope: !9061, file: !8913, line: 322, baseType: !9079, size: 64, offset: 960)
!9110 = !DIDerivedType(tag: DW_TAG_member, name: "bind_class", scope: !9061, file: !8913, line: 324, baseType: !9111, size: 64, offset: 1024)
!9111 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9112, size: 64)
!9112 = !DISubroutineType(types: !9113)
!9113 = !{null, !570, !707, !317, !570, !317}
!9114 = !DIDerivedType(tag: DW_TAG_member, name: "tmplt_create", scope: !9061, file: !8913, line: 326, baseType: !9115, size: 64, offset: 1088)
!9115 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9116, size: 64)
!9116 = !DISubroutineType(types: !9117)
!9117 = !{!570, !1962, !9013, !8006, !2444}
!9118 = !DIDerivedType(tag: DW_TAG_member, name: "tmplt_destroy", scope: !9061, file: !8913, line: 330, baseType: !3290, size: 64, offset: 1152)
!9119 = !DIDerivedType(tag: DW_TAG_member, name: "dump", scope: !9061, file: !8913, line: 333, baseType: !9120, size: 64, offset: 1216)
!9120 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9121, size: 64)
!9121 = !DISubroutineType(types: !9122)
!9122 = !{!37, !1962, !9018, !570, !420, !8942, !540}
!9123 = !DIDerivedType(tag: DW_TAG_member, name: "terse_dump", scope: !9061, file: !8913, line: 336, baseType: !9120, size: 64, offset: 1280)
!9124 = !DIDerivedType(tag: DW_TAG_member, name: "tmplt_dump", scope: !9061, file: !8913, line: 340, baseType: !9125, size: 64, offset: 1344)
!9125 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9126, size: 64)
!9126 = !DISubroutineType(types: !9127)
!9127 = !{!37, !420, !1962, !570}
!9128 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !9061, file: !8913, line: 344, baseType: !852, size: 64, offset: 1408)
!9129 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !9061, file: !8913, line: 345, baseType: !37, size: 32, offset: 1472)
!9130 = !DIDerivedType(tag: DW_TAG_member, name: "chain", scope: !9019, file: !8913, line: 371, baseType: !9013, size: 64, offset: 384)
!9131 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !9019, file: !8913, line: 375, baseType: !729, offset: 448)
!9132 = !DIDerivedType(tag: DW_TAG_member, name: "deleting", scope: !9019, file: !8913, line: 376, baseType: !540, size: 8, offset: 448)
!9133 = !DIDerivedType(tag: DW_TAG_member, name: "refcnt", scope: !9019, file: !8913, line: 377, baseType: !1271, size: 32, offset: 480)
!9134 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !9019, file: !8913, line: 378, baseType: !304, size: 128, align: 64, offset: 512)
!9135 = !DIDerivedType(tag: DW_TAG_member, name: "destroy_ht_node", scope: !9019, file: !8913, line: 379, baseType: !281, size: 128, offset: 640)
!9136 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !9014, file: !8913, line: 399, baseType: !289, size: 128, offset: 256)
!9137 = !DIDerivedType(tag: DW_TAG_member, name: "block", scope: !9014, file: !8913, line: 400, baseType: !8988, size: 64, offset: 384)
!9138 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !9014, file: !8913, line: 401, baseType: !707, size: 32, offset: 448)
!9139 = !DIDerivedType(tag: DW_TAG_member, name: "refcnt", scope: !9014, file: !8913, line: 402, baseType: !7, size: 32, offset: 480)
!9140 = !DIDerivedType(tag: DW_TAG_member, name: "action_refcnt", scope: !9014, file: !8913, line: 403, baseType: !7, size: 32, offset: 512)
!9141 = !DIDerivedType(tag: DW_TAG_member, name: "explicitly_created", scope: !9014, file: !8913, line: 404, baseType: !540, size: 8, offset: 544)
!9142 = !DIDerivedType(tag: DW_TAG_member, name: "flushing", scope: !9014, file: !8913, line: 405, baseType: !540, size: 8, offset: 552)
!9143 = !DIDerivedType(tag: DW_TAG_member, name: "tmplt_ops", scope: !9014, file: !8913, line: 406, baseType: !9059, size: 64, offset: 576)
!9144 = !DIDerivedType(tag: DW_TAG_member, name: "tmplt_priv", scope: !9014, file: !8913, line: 407, baseType: !570, size: 64, offset: 640)
!9145 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !9014, file: !8913, line: 408, baseType: !304, size: 128, align: 64, offset: 704)
!9146 = !DIDerivedType(tag: DW_TAG_member, name: "filter_chain_list", scope: !9010, file: !8913, line: 431, baseType: !289, size: 128, offset: 64)
!9147 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !8989, file: !8913, line: 433, baseType: !304, size: 128, align: 64, offset: 1408)
!9148 = !DIDerivedType(tag: DW_TAG_member, name: "proto_destroy_ht", scope: !8989, file: !8913, line: 434, baseType: !9149, size: 8192, offset: 1536)
!9149 = !DICompositeType(tag: DW_TAG_array_type, baseType: !857, size: 8192, elements: !2991)
!9150 = !DIDerivedType(tag: DW_TAG_member, name: "proto_destroy_lock", scope: !8989, file: !8913, line: 435, baseType: !954, size: 192, offset: 9728)
!9151 = !DIDerivedType(tag: DW_TAG_member, name: "bind_tcf", scope: !8935, file: !8913, line: 220, baseType: !9152, size: 64, offset: 640)
!9152 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9153, size: 64)
!9153 = !DISubroutineType(types: !9154)
!9154 = !{!317, !8911, !317, !707}
!9155 = !DIDerivedType(tag: DW_TAG_member, name: "unbind_tcf", scope: !8935, file: !8913, line: 222, baseType: !8963, size: 64, offset: 704)
!9156 = !DIDerivedType(tag: DW_TAG_member, name: "dump", scope: !8935, file: !8913, line: 225, baseType: !9157, size: 64, offset: 768)
!9157 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9158, size: 64)
!9158 = !DISubroutineType(types: !9159)
!9159 = !{!37, !8911, !317, !420, !8942}
!9160 = !DIDerivedType(tag: DW_TAG_member, name: "dump_stats", scope: !8935, file: !8913, line: 227, baseType: !9161, size: 64, offset: 832)
!9161 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9162, size: 64)
!9162 = !DISubroutineType(types: !9163)
!9163 = !{!37, !8911, !317, !9164}
!9164 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9165, size: 64)
!9165 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gnet_dump", file: !9166, line: 23, size: 768, elements: !9167)
!9166 = !DIFile(filename: "./include/net/gen_stats.h", directory: "/home/lizy2001/genbc/linux")
!9167 = !{!9168, !9169, !9170, !9171, !9172, !9173, !9174, !9175, !9176}
!9168 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !9165, file: !9166, line: 24, baseType: !4097, size: 64)
!9169 = !DIDerivedType(tag: DW_TAG_member, name: "skb", scope: !9165, file: !9166, line: 25, baseType: !420, size: 64, offset: 64)
!9170 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !9165, file: !9166, line: 26, baseType: !8007, size: 64, offset: 128)
!9171 = !DIDerivedType(tag: DW_TAG_member, name: "compat_tc_stats", scope: !9165, file: !9166, line: 29, baseType: !37, size: 32, offset: 192)
!9172 = !DIDerivedType(tag: DW_TAG_member, name: "compat_xstats", scope: !9165, file: !9166, line: 30, baseType: !37, size: 32, offset: 224)
!9173 = !DIDerivedType(tag: DW_TAG_member, name: "padattr", scope: !9165, file: !9166, line: 31, baseType: !37, size: 32, offset: 256)
!9174 = !DIDerivedType(tag: DW_TAG_member, name: "xstats", scope: !9165, file: !9166, line: 32, baseType: !570, size: 64, offset: 320)
!9175 = !DIDerivedType(tag: DW_TAG_member, name: "xstats_len", scope: !9165, file: !9166, line: 33, baseType: !37, size: 32, offset: 384)
!9176 = !DIDerivedType(tag: DW_TAG_member, name: "tc_stats", scope: !9165, file: !9166, line: 34, baseType: !9177, size: 320, offset: 448)
!9177 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tc_stats", file: !9178, line: 34, size: 320, elements: !9179)
!9178 = !DIFile(filename: "./include/uapi/linux/pkt_sched.h", directory: "/home/lizy2001/genbc/linux")
!9179 = !{!9180, !9181, !9182, !9183, !9184, !9185, !9186, !9187}
!9180 = !DIDerivedType(tag: DW_TAG_member, name: "bytes", scope: !9177, file: !9178, line: 35, baseType: !338, size: 64)
!9181 = !DIDerivedType(tag: DW_TAG_member, name: "packets", scope: !9177, file: !9178, line: 36, baseType: !468, size: 32, offset: 64)
!9182 = !DIDerivedType(tag: DW_TAG_member, name: "drops", scope: !9177, file: !9178, line: 37, baseType: !468, size: 32, offset: 96)
!9183 = !DIDerivedType(tag: DW_TAG_member, name: "overlimits", scope: !9177, file: !9178, line: 38, baseType: !468, size: 32, offset: 128)
!9184 = !DIDerivedType(tag: DW_TAG_member, name: "bps", scope: !9177, file: !9178, line: 40, baseType: !468, size: 32, offset: 160)
!9185 = !DIDerivedType(tag: DW_TAG_member, name: "pps", scope: !9177, file: !9178, line: 41, baseType: !468, size: 32, offset: 192)
!9186 = !DIDerivedType(tag: DW_TAG_member, name: "qlen", scope: !9177, file: !9178, line: 42, baseType: !468, size: 32, offset: 224)
!9187 = !DIDerivedType(tag: DW_TAG_member, name: "backlog", scope: !9177, file: !9178, line: 43, baseType: !468, size: 32, offset: 256)
!9188 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !8928, file: !8913, line: 241, baseType: !272, size: 128, offset: 128)
!9189 = !DIDerivedType(tag: DW_TAG_member, name: "priv_size", scope: !8928, file: !8913, line: 242, baseType: !37, size: 32, offset: 256)
!9190 = !DIDerivedType(tag: DW_TAG_member, name: "static_flags", scope: !8928, file: !8913, line: 243, baseType: !7, size: 32, offset: 288)
!9191 = !DIDerivedType(tag: DW_TAG_member, name: "enqueue", scope: !8928, file: !8913, line: 245, baseType: !8916, size: 64, offset: 320)
!9192 = !DIDerivedType(tag: DW_TAG_member, name: "dequeue", scope: !8928, file: !8913, line: 248, baseType: !8920, size: 64, offset: 384)
!9193 = !DIDerivedType(tag: DW_TAG_member, name: "peek", scope: !8928, file: !8913, line: 249, baseType: !8920, size: 64, offset: 448)
!9194 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !8928, file: !8913, line: 251, baseType: !9195, size: 64, offset: 512)
!9195 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9196, size: 64)
!9196 = !DISubroutineType(types: !9197)
!9197 = !{!37, !8911, !8007, !2444}
!9198 = !DIDerivedType(tag: DW_TAG_member, name: "reset", scope: !8928, file: !8913, line: 253, baseType: !9199, size: 64, offset: 576)
!9199 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9200, size: 64)
!9200 = !DISubroutineType(types: !9201)
!9201 = !{null, !8911}
!9202 = !DIDerivedType(tag: DW_TAG_member, name: "destroy", scope: !8928, file: !8913, line: 254, baseType: !9199, size: 64, offset: 640)
!9203 = !DIDerivedType(tag: DW_TAG_member, name: "change", scope: !8928, file: !8913, line: 255, baseType: !9195, size: 64, offset: 704)
!9204 = !DIDerivedType(tag: DW_TAG_member, name: "attach", scope: !8928, file: !8913, line: 258, baseType: !9199, size: 64, offset: 768)
!9205 = !DIDerivedType(tag: DW_TAG_member, name: "change_tx_queue_len", scope: !8928, file: !8913, line: 259, baseType: !9206, size: 64, offset: 832)
!9206 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9207, size: 64)
!9207 = !DISubroutineType(types: !9208)
!9208 = !{!37, !8911, !7}
!9209 = !DIDerivedType(tag: DW_TAG_member, name: "dump", scope: !8928, file: !8913, line: 261, baseType: !9210, size: 64, offset: 896)
!9210 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9211, size: 64)
!9211 = !DISubroutineType(types: !9212)
!9212 = !{!37, !8911, !420}
!9213 = !DIDerivedType(tag: DW_TAG_member, name: "dump_stats", scope: !8928, file: !8913, line: 262, baseType: !9214, size: 64, offset: 960)
!9214 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9215, size: 64)
!9215 = !DISubroutineType(types: !9216)
!9216 = !{!37, !8911, !9164}
!9217 = !DIDerivedType(tag: DW_TAG_member, name: "ingress_block_set", scope: !8928, file: !8913, line: 264, baseType: !9218, size: 64, offset: 1024)
!9218 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9219, size: 64)
!9219 = !DISubroutineType(types: !9220)
!9220 = !{null, !8911, !707}
!9221 = !DIDerivedType(tag: DW_TAG_member, name: "egress_block_set", scope: !8928, file: !8913, line: 266, baseType: !9218, size: 64, offset: 1088)
!9222 = !DIDerivedType(tag: DW_TAG_member, name: "ingress_block_get", scope: !8928, file: !8913, line: 268, baseType: !9223, size: 64, offset: 1152)
!9223 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9224, size: 64)
!9224 = !DISubroutineType(types: !9225)
!9225 = !{!707, !8911}
!9226 = !DIDerivedType(tag: DW_TAG_member, name: "egress_block_get", scope: !8928, file: !8913, line: 269, baseType: !9223, size: 64, offset: 1216)
!9227 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !8928, file: !8913, line: 271, baseType: !852, size: 64, offset: 1280)
!9228 = !DIDerivedType(tag: DW_TAG_member, name: "stab", scope: !8912, file: !8913, line: 84, baseType: !9229, size: 64, offset: 256)
!9229 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9230, size: 64)
!9230 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "qdisc_size_table", file: !8913, line: 41, size: 512, elements: !9231)
!9231 = !{!9232, !9233, !9234, !9245, !9246}
!9232 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !9230, file: !8913, line: 42, baseType: !304, size: 128, align: 64)
!9233 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !9230, file: !8913, line: 43, baseType: !289, size: 128, offset: 128)
!9234 = !DIDerivedType(tag: DW_TAG_member, name: "szopts", scope: !9230, file: !8913, line: 44, baseType: !9235, size: 192, offset: 256)
!9235 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tc_sizespec", file: !9178, line: 102, size: 192, elements: !9236)
!9236 = !{!9237, !9238, !9239, !9240, !9241, !9242, !9243, !9244}
!9237 = !DIDerivedType(tag: DW_TAG_member, name: "cell_log", scope: !9235, file: !9178, line: 103, baseType: !494, size: 8)
!9238 = !DIDerivedType(tag: DW_TAG_member, name: "size_log", scope: !9235, file: !9178, line: 104, baseType: !494, size: 8, offset: 8)
!9239 = !DIDerivedType(tag: DW_TAG_member, name: "cell_align", scope: !9235, file: !9178, line: 105, baseType: !1246, size: 16, offset: 16)
!9240 = !DIDerivedType(tag: DW_TAG_member, name: "overhead", scope: !9235, file: !9178, line: 106, baseType: !37, size: 32, offset: 32)
!9241 = !DIDerivedType(tag: DW_TAG_member, name: "linklayer", scope: !9235, file: !9178, line: 107, baseType: !7, size: 32, offset: 64)
!9242 = !DIDerivedType(tag: DW_TAG_member, name: "mpu", scope: !9235, file: !9178, line: 108, baseType: !7, size: 32, offset: 96)
!9243 = !DIDerivedType(tag: DW_TAG_member, name: "mtu", scope: !9235, file: !9178, line: 109, baseType: !7, size: 32, offset: 128)
!9244 = !DIDerivedType(tag: DW_TAG_member, name: "tsize", scope: !9235, file: !9178, line: 110, baseType: !7, size: 32, offset: 160)
!9245 = !DIDerivedType(tag: DW_TAG_member, name: "refcnt", scope: !9230, file: !8913, line: 45, baseType: !37, size: 32, offset: 448)
!9246 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !9230, file: !8913, line: 46, baseType: !9247, offset: 480)
!9247 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1038, elements: !314)
!9248 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !8912, file: !8913, line: 85, baseType: !281, size: 128, offset: 320)
!9249 = !DIDerivedType(tag: DW_TAG_member, name: "handle", scope: !8912, file: !8913, line: 86, baseType: !707, size: 32, offset: 448)
!9250 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !8912, file: !8913, line: 87, baseType: !707, size: 32, offset: 480)
!9251 = !DIDerivedType(tag: DW_TAG_member, name: "dev_queue", scope: !8912, file: !8913, line: 89, baseType: !8906, size: 64, offset: 512)
!9252 = !DIDerivedType(tag: DW_TAG_member, name: "rate_est", scope: !8912, file: !8913, line: 91, baseType: !9253, size: 64, offset: 576)
!9253 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9254, size: 64)
!9254 = !DICompositeType(tag: DW_TAG_structure_type, name: "net_rate_estimator", file: !9166, line: 21, flags: DIFlagFwdDecl)
!9255 = !DIDerivedType(tag: DW_TAG_member, name: "cpu_bstats", scope: !8912, file: !8913, line: 92, baseType: !9256, size: 64, offset: 640)
!9256 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9257, size: 64)
!9257 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gnet_stats_basic_cpu", file: !9166, line: 16, size: 128, align: 128, elements: !9258)
!9258 = !{!9259, !9264}
!9259 = !DIDerivedType(tag: DW_TAG_member, name: "bstats", scope: !9257, file: !9166, line: 17, baseType: !9260, size: 128)
!9260 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gnet_stats_basic_packed", file: !9166, line: 11, size: 128, elements: !9261)
!9261 = !{!9262, !9263}
!9262 = !DIDerivedType(tag: DW_TAG_member, name: "bytes", scope: !9260, file: !9166, line: 12, baseType: !338, size: 64)
!9263 = !DIDerivedType(tag: DW_TAG_member, name: "packets", scope: !9260, file: !9166, line: 13, baseType: !338, size: 64, offset: 64)
!9264 = !DIDerivedType(tag: DW_TAG_member, name: "syncp", scope: !9257, file: !9166, line: 18, baseType: !2058, offset: 128)
!9265 = !DIDerivedType(tag: DW_TAG_member, name: "cpu_qstats", scope: !8912, file: !8913, line: 93, baseType: !9046, size: 64, offset: 704)
!9266 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !8912, file: !8913, line: 94, baseType: !37, size: 32, offset: 768)
!9267 = !DIDerivedType(tag: DW_TAG_member, name: "refcnt", scope: !8912, file: !8913, line: 95, baseType: !1271, size: 32, offset: 800)
!9268 = !DIDerivedType(tag: DW_TAG_member, name: "gso_skb", scope: !8912, file: !8913, line: 100, baseType: !2762, size: 192, offset: 832)
!9269 = !DIDerivedType(tag: DW_TAG_member, name: "q", scope: !8912, file: !8913, line: 101, baseType: !9270, size: 192, offset: 1024)
!9270 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "qdisc_skb_head", file: !8913, line: 50, size: 192, elements: !9271)
!9271 = !{!9272, !9273, !9274, !9275}
!9272 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !9270, file: !8913, line: 51, baseType: !420, size: 64)
!9273 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !9270, file: !8913, line: 52, baseType: !420, size: 64, offset: 64)
!9274 = !DIDerivedType(tag: DW_TAG_member, name: "qlen", scope: !9270, file: !8913, line: 53, baseType: !468, size: 32, offset: 128)
!9275 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !9270, file: !8913, line: 54, baseType: !729, offset: 160)
!9276 = !DIDerivedType(tag: DW_TAG_member, name: "bstats", scope: !8912, file: !8913, line: 102, baseType: !9260, size: 128, offset: 1216)
!9277 = !DIDerivedType(tag: DW_TAG_member, name: "running", scope: !8912, file: !8913, line: 103, baseType: !684, size: 32, offset: 1344)
!9278 = !DIDerivedType(tag: DW_TAG_member, name: "qstats", scope: !8912, file: !8913, line: 104, baseType: !9047, size: 160, offset: 1376)
!9279 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !8912, file: !8913, line: 105, baseType: !317, size: 64, offset: 1536)
!9280 = !DIDerivedType(tag: DW_TAG_member, name: "next_sched", scope: !8912, file: !8913, line: 106, baseType: !8911, size: 64, offset: 1600)
!9281 = !DIDerivedType(tag: DW_TAG_member, name: "skb_bad_txq", scope: !8912, file: !8913, line: 107, baseType: !2762, size: 192, offset: 1664)
!9282 = !DIDerivedType(tag: DW_TAG_member, name: "busylock", scope: !8912, file: !8913, line: 109, baseType: !729, offset: 1856)
!9283 = !DIDerivedType(tag: DW_TAG_member, name: "seqlock", scope: !8912, file: !8913, line: 110, baseType: !729, offset: 1856)
!9284 = !DIDerivedType(tag: DW_TAG_member, name: "empty", scope: !8912, file: !8913, line: 113, baseType: !540, size: 8, offset: 1856)
!9285 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !8912, file: !8913, line: 114, baseType: !304, size: 128, align: 64, offset: 1920)
!9286 = !DIDerivedType(tag: DW_TAG_member, name: "privdata", scope: !8912, file: !8913, line: 117, baseType: !9287, align: 512, offset: 2048)
!9287 = !DICompositeType(tag: DW_TAG_array_type, baseType: !513, elements: !314)
!9288 = !DIDerivedType(tag: DW_TAG_member, name: "qdisc_sleeping", scope: !8907, file: !36, line: 590, baseType: !8911, size: 64, offset: 128)
!9289 = !DIDerivedType(tag: DW_TAG_member, name: "kobj", scope: !8907, file: !36, line: 592, baseType: !3807, size: 512, offset: 192)
!9290 = !DIDerivedType(tag: DW_TAG_member, name: "tx_maxrate", scope: !8907, file: !36, line: 597, baseType: !317, size: 64, offset: 704)
!9291 = !DIDerivedType(tag: DW_TAG_member, name: "trans_timeout", scope: !8907, file: !36, line: 602, baseType: !317, size: 64, offset: 768)
!9292 = !DIDerivedType(tag: DW_TAG_member, name: "sb_dev", scope: !8907, file: !36, line: 605, baseType: !295, size: 64, offset: 832)
!9293 = !DIDerivedType(tag: DW_TAG_member, name: "_xmit_lock", scope: !8907, file: !36, line: 612, baseType: !729, offset: 896)
!9294 = !DIDerivedType(tag: DW_TAG_member, name: "xmit_lock_owner", scope: !8907, file: !36, line: 613, baseType: !37, size: 32, offset: 896)
!9295 = !DIDerivedType(tag: DW_TAG_member, name: "trans_start", scope: !8907, file: !36, line: 617, baseType: !317, size: 64, offset: 960)
!9296 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !8907, file: !36, line: 619, baseType: !317, size: 64, offset: 1024)
!9297 = !DIDerivedType(tag: DW_TAG_member, name: "dql", scope: !8907, file: !36, line: 622, baseType: !9298, size: 512, offset: 1088)
!9298 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dql", file: !9299, line: 43, size: 512, elements: !9300)
!9299 = !DIFile(filename: "./include/linux/dynamic_queue_limits.h", directory: "/home/lizy2001/genbc/linux")
!9300 = !{!9301, !9302, !9303, !9304, !9305, !9306, !9307, !9308, !9309, !9310, !9311, !9312, !9313}
!9301 = !DIDerivedType(tag: DW_TAG_member, name: "num_queued", scope: !9298, file: !9299, line: 45, baseType: !7, size: 32)
!9302 = !DIDerivedType(tag: DW_TAG_member, name: "adj_limit", scope: !9298, file: !9299, line: 46, baseType: !7, size: 32, offset: 32)
!9303 = !DIDerivedType(tag: DW_TAG_member, name: "last_obj_cnt", scope: !9298, file: !9299, line: 47, baseType: !7, size: 32, offset: 64)
!9304 = !DIDerivedType(tag: DW_TAG_member, name: "limit", scope: !9298, file: !9299, line: 51, baseType: !7, size: 32, offset: 96)
!9305 = !DIDerivedType(tag: DW_TAG_member, name: "num_completed", scope: !9298, file: !9299, line: 52, baseType: !7, size: 32, offset: 128)
!9306 = !DIDerivedType(tag: DW_TAG_member, name: "prev_ovlimit", scope: !9298, file: !9299, line: 54, baseType: !7, size: 32, offset: 160)
!9307 = !DIDerivedType(tag: DW_TAG_member, name: "prev_num_queued", scope: !9298, file: !9299, line: 55, baseType: !7, size: 32, offset: 192)
!9308 = !DIDerivedType(tag: DW_TAG_member, name: "prev_last_obj_cnt", scope: !9298, file: !9299, line: 56, baseType: !7, size: 32, offset: 224)
!9309 = !DIDerivedType(tag: DW_TAG_member, name: "lowest_slack", scope: !9298, file: !9299, line: 58, baseType: !7, size: 32, offset: 256)
!9310 = !DIDerivedType(tag: DW_TAG_member, name: "slack_start_time", scope: !9298, file: !9299, line: 59, baseType: !317, size: 64, offset: 320)
!9311 = !DIDerivedType(tag: DW_TAG_member, name: "max_limit", scope: !9298, file: !9299, line: 62, baseType: !7, size: 32, offset: 384)
!9312 = !DIDerivedType(tag: DW_TAG_member, name: "min_limit", scope: !9298, file: !9299, line: 63, baseType: !7, size: 32, offset: 416)
!9313 = !DIDerivedType(tag: DW_TAG_member, name: "slack_hold_time", scope: !9298, file: !9299, line: 64, baseType: !7, size: 32, offset: 448)
!9314 = !DIDerivedType(tag: DW_TAG_member, name: "broadcast", scope: !269, file: !36, line: 2045, baseType: !715, size: 256, offset: 6528)
!9315 = !DIDerivedType(tag: DW_TAG_member, name: "index_hlist", scope: !269, file: !36, line: 2049, baseType: !281, size: 128, offset: 6784)
!9316 = !DIDerivedType(tag: DW_TAG_member, name: "_tx", scope: !269, file: !36, line: 2054, baseType: !8906, size: 64, offset: 6912)
!9317 = !DIDerivedType(tag: DW_TAG_member, name: "num_tx_queues", scope: !269, file: !36, line: 2055, baseType: !7, size: 32, offset: 6976)
!9318 = !DIDerivedType(tag: DW_TAG_member, name: "real_num_tx_queues", scope: !269, file: !36, line: 2056, baseType: !7, size: 32, offset: 7008)
!9319 = !DIDerivedType(tag: DW_TAG_member, name: "qdisc", scope: !269, file: !36, line: 2057, baseType: !8911, size: 64, offset: 7040)
!9320 = !DIDerivedType(tag: DW_TAG_member, name: "tx_queue_len", scope: !269, file: !36, line: 2058, baseType: !7, size: 32, offset: 7104)
!9321 = !DIDerivedType(tag: DW_TAG_member, name: "tx_global_lock", scope: !269, file: !36, line: 2059, baseType: !729, offset: 7136)
!9322 = !DIDerivedType(tag: DW_TAG_member, name: "xdp_bulkq", scope: !269, file: !36, line: 2061, baseType: !9323, size: 64, offset: 7168)
!9323 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9324, size: 64)
!9324 = !DICompositeType(tag: DW_TAG_structure_type, name: "xdp_dev_bulk_queue", file: !36, line: 879, flags: DIFlagFwdDecl)
!9325 = !DIDerivedType(tag: DW_TAG_member, name: "watchdog_timer", scope: !269, file: !36, line: 2075, baseType: !2221, size: 320, offset: 7232)
!9326 = !DIDerivedType(tag: DW_TAG_member, name: "watchdog_timeo", scope: !269, file: !36, line: 2076, baseType: !37, size: 32, offset: 7552)
!9327 = !DIDerivedType(tag: DW_TAG_member, name: "proto_down_reason", scope: !269, file: !36, line: 2078, baseType: !707, size: 32, offset: 7584)
!9328 = !DIDerivedType(tag: DW_TAG_member, name: "todo_list", scope: !269, file: !36, line: 2080, baseType: !289, size: 128, offset: 7616)
!9329 = !DIDerivedType(tag: DW_TAG_member, name: "pcpu_refcnt", scope: !269, file: !36, line: 2081, baseType: !539, size: 64, offset: 7744)
!9330 = !DIDerivedType(tag: DW_TAG_member, name: "link_watch_list", scope: !269, file: !36, line: 2083, baseType: !289, size: 128, offset: 7808)
!9331 = !DIDerivedType(tag: DW_TAG_member, name: "reg_state", scope: !269, file: !36, line: 2091, baseType: !268, size: 8, offset: 7936, flags: DIFlagBitField, extraData: i64 7936)
!9332 = !DIDerivedType(tag: DW_TAG_member, name: "dismantle", scope: !269, file: !36, line: 2093, baseType: !540, size: 8, offset: 7944)
!9333 = !DIDerivedType(tag: DW_TAG_member, name: "rtnl_link_state", scope: !269, file: !36, line: 2098, baseType: !9334, size: 16, offset: 7952, flags: DIFlagBitField, extraData: i64 7952)
!9334 = !DICompositeType(tag: DW_TAG_enumeration_type, scope: !269, file: !36, line: 2095, baseType: !7, size: 32, elements: !9335)
!9335 = !{!9336, !9337}
!9336 = !DIEnumerator(name: "RTNL_LINK_INITIALIZED", value: 0, isUnsigned: true)
!9337 = !DIEnumerator(name: "RTNL_LINK_INITIALIZING", value: 1, isUnsigned: true)
!9338 = !DIDerivedType(tag: DW_TAG_member, name: "needs_free_netdev", scope: !269, file: !36, line: 2100, baseType: !540, size: 8, offset: 7968)
!9339 = !DIDerivedType(tag: DW_TAG_member, name: "priv_destructor", scope: !269, file: !36, line: 2101, baseType: !410, size: 64, offset: 8000)
!9340 = !DIDerivedType(tag: DW_TAG_member, name: "nd_net", scope: !269, file: !36, line: 2107, baseType: !2704, size: 64, offset: 8064)
!9341 = !DIDerivedType(tag: DW_TAG_member, scope: !269, file: !36, line: 2110, baseType: !9342, size: 64, offset: 8128)
!9342 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !269, file: !36, line: 2110, size: 64, elements: !9343)
!9343 = !{!9344, !9345, !9366, !9375}
!9344 = !DIDerivedType(tag: DW_TAG_member, name: "ml_priv", scope: !9342, file: !36, line: 2111, baseType: !570, size: 64)
!9345 = !DIDerivedType(tag: DW_TAG_member, name: "lstats", scope: !9342, file: !36, line: 2112, baseType: !9346, size: 64)
!9346 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9347, size: 64)
!9347 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pcpu_lstats", file: !36, line: 2542, size: 128, align: 128, elements: !9348)
!9348 = !{!9349, !9364, !9365}
!9349 = !DIDerivedType(tag: DW_TAG_member, name: "packets", scope: !9347, file: !36, line: 2543, baseType: !9350, size: 64)
!9350 = !DIDerivedType(tag: DW_TAG_typedef, name: "u64_stats_t", file: !2059, line: 79, baseType: !9351)
!9351 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2059, line: 77, size: 64, elements: !9352)
!9352 = !{!9353}
!9353 = !DIDerivedType(tag: DW_TAG_member, name: "v", scope: !9351, file: !2059, line: 78, baseType: !9354, size: 64)
!9354 = !DIDerivedType(tag: DW_TAG_typedef, name: "local64_t", file: !9355, line: 26, baseType: !9356)
!9355 = !DIFile(filename: "./include/asm-generic/local64.h", directory: "/home/lizy2001/genbc/linux")
!9356 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !9355, line: 24, size: 64, elements: !9357)
!9357 = !{!9358}
!9358 = !DIDerivedType(tag: DW_TAG_member, name: "a", scope: !9356, file: !9355, line: 25, baseType: !9359, size: 64)
!9359 = !DIDerivedType(tag: DW_TAG_typedef, name: "local_t", file: !9360, line: 12, baseType: !9361)
!9360 = !DIFile(filename: "./arch/x86/include/asm/local.h", directory: "/home/lizy2001/genbc/linux")
!9361 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !9360, line: 10, size: 64, elements: !9362)
!9362 = !{!9363}
!9363 = !DIDerivedType(tag: DW_TAG_member, name: "a", scope: !9361, file: !9360, line: 11, baseType: !376, size: 64)
!9364 = !DIDerivedType(tag: DW_TAG_member, name: "bytes", scope: !9347, file: !36, line: 2544, baseType: !9350, size: 64, offset: 64)
!9365 = !DIDerivedType(tag: DW_TAG_member, name: "syncp", scope: !9347, file: !36, line: 2545, baseType: !2058, offset: 128)
!9366 = !DIDerivedType(tag: DW_TAG_member, name: "tstats", scope: !9342, file: !36, line: 2113, baseType: !9367, size: 64)
!9367 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9368, size: 64)
!9368 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pcpu_sw_netstats", file: !36, line: 2534, size: 256, align: 256, elements: !9369)
!9369 = !{!9370, !9371, !9372, !9373, !9374}
!9370 = !DIDerivedType(tag: DW_TAG_member, name: "rx_packets", scope: !9368, file: !36, line: 2535, baseType: !336, size: 64)
!9371 = !DIDerivedType(tag: DW_TAG_member, name: "rx_bytes", scope: !9368, file: !36, line: 2536, baseType: !336, size: 64, offset: 64)
!9372 = !DIDerivedType(tag: DW_TAG_member, name: "tx_packets", scope: !9368, file: !36, line: 2537, baseType: !336, size: 64, offset: 128)
!9373 = !DIDerivedType(tag: DW_TAG_member, name: "tx_bytes", scope: !9368, file: !36, line: 2538, baseType: !336, size: 64, offset: 192)
!9374 = !DIDerivedType(tag: DW_TAG_member, name: "syncp", scope: !9368, file: !36, line: 2539, baseType: !2058, offset: 256)
!9375 = !DIDerivedType(tag: DW_TAG_member, name: "dstats", scope: !9342, file: !36, line: 2114, baseType: !9376, size: 64)
!9376 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9377, size: 64)
!9377 = !DICompositeType(tag: DW_TAG_structure_type, name: "pcpu_dstats", file: !36, line: 2114, flags: DIFlagFwdDecl)
!9378 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !269, file: !36, line: 2124, baseType: !3803, size: 5568, offset: 8192)
!9379 = !DIDerivedType(tag: DW_TAG_member, name: "sysfs_groups", scope: !269, file: !36, line: 2125, baseType: !9380, size: 256, offset: 13760)
!9380 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3885, size: 256, elements: !1202)
!9381 = !DIDerivedType(tag: DW_TAG_member, name: "sysfs_rx_queue_group", scope: !269, file: !36, line: 2126, baseType: !3885, size: 64, offset: 14016)
!9382 = !DIDerivedType(tag: DW_TAG_member, name: "rtnl_link_ops", scope: !269, file: !36, line: 2128, baseType: !9383, size: 64, offset: 14080)
!9383 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9384, size: 64)
!9384 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !9385)
!9385 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtnl_link_ops", file: !9386, line: 59, size: 1600, elements: !9387)
!9386 = !DIFile(filename: "./include/net/rtnetlink.h", directory: "/home/lizy2001/genbc/linux")
!9387 = !{!9388, !9389, !9390, !9391, !9392, !9393, !9394, !9398, !9402, !9406, !9410, !9414, !9418, !9419, !9420, !9424, !9425, !9426, !9427, !9431, !9435, !9439, !9443, !9447}
!9388 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !9385, file: !9386, line: 60, baseType: !289, size: 128)
!9389 = !DIDerivedType(tag: DW_TAG_member, name: "kind", scope: !9385, file: !9386, line: 62, baseType: !297, size: 64, offset: 128)
!9390 = !DIDerivedType(tag: DW_TAG_member, name: "priv_size", scope: !9385, file: !9386, line: 64, baseType: !594, size: 64, offset: 192)
!9391 = !DIDerivedType(tag: DW_TAG_member, name: "setup", scope: !9385, file: !9386, line: 65, baseType: !410, size: 64, offset: 256)
!9392 = !DIDerivedType(tag: DW_TAG_member, name: "maxtype", scope: !9385, file: !9386, line: 67, baseType: !7, size: 32, offset: 320)
!9393 = !DIDerivedType(tag: DW_TAG_member, name: "policy", scope: !9385, file: !9386, line: 68, baseType: !2458, size: 64, offset: 384)
!9394 = !DIDerivedType(tag: DW_TAG_member, name: "validate", scope: !9385, file: !9386, line: 69, baseType: !9395, size: 64, offset: 448)
!9395 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9396, size: 64)
!9396 = !DISubroutineType(types: !9397)
!9397 = !{!37, !8006, !8006, !2444}
!9398 = !DIDerivedType(tag: DW_TAG_member, name: "newlink", scope: !9385, file: !9386, line: 73, baseType: !9399, size: 64, offset: 512)
!9399 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9400, size: 64)
!9400 = !DISubroutineType(types: !9401)
!9401 = !{!37, !1962, !295, !8006, !8006, !2444}
!9402 = !DIDerivedType(tag: DW_TAG_member, name: "changelink", scope: !9385, file: !9386, line: 78, baseType: !9403, size: 64, offset: 576)
!9403 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9404, size: 64)
!9404 = !DISubroutineType(types: !9405)
!9405 = !{!37, !295, !8006, !8006, !2444}
!9406 = !DIDerivedType(tag: DW_TAG_member, name: "dellink", scope: !9385, file: !9386, line: 82, baseType: !9407, size: 64, offset: 640)
!9407 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9408, size: 64)
!9408 = !DISubroutineType(types: !9409)
!9409 = !{null, !295, !292}
!9410 = !DIDerivedType(tag: DW_TAG_member, name: "get_size", scope: !9385, file: !9386, line: 85, baseType: !9411, size: 64, offset: 704)
!9411 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9412, size: 64)
!9412 = !DISubroutineType(types: !9413)
!9413 = !{!594, !2682}
!9414 = !DIDerivedType(tag: DW_TAG_member, name: "fill_info", scope: !9385, file: !9386, line: 86, baseType: !9415, size: 64, offset: 768)
!9415 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9416, size: 64)
!9416 = !DISubroutineType(types: !9417)
!9417 = !{!37, !420, !2682}
!9418 = !DIDerivedType(tag: DW_TAG_member, name: "get_xstats_size", scope: !9385, file: !9386, line: 89, baseType: !9411, size: 64, offset: 832)
!9419 = !DIDerivedType(tag: DW_TAG_member, name: "fill_xstats", scope: !9385, file: !9386, line: 90, baseType: !9415, size: 64, offset: 896)
!9420 = !DIDerivedType(tag: DW_TAG_member, name: "get_num_tx_queues", scope: !9385, file: !9386, line: 92, baseType: !9421, size: 64, offset: 960)
!9421 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9422, size: 64)
!9422 = !DISubroutineType(types: !9423)
!9423 = !{!7}
!9424 = !DIDerivedType(tag: DW_TAG_member, name: "get_num_rx_queues", scope: !9385, file: !9386, line: 93, baseType: !9421, size: 64, offset: 1024)
!9425 = !DIDerivedType(tag: DW_TAG_member, name: "slave_maxtype", scope: !9385, file: !9386, line: 95, baseType: !7, size: 32, offset: 1088)
!9426 = !DIDerivedType(tag: DW_TAG_member, name: "slave_policy", scope: !9385, file: !9386, line: 96, baseType: !2458, size: 64, offset: 1152)
!9427 = !DIDerivedType(tag: DW_TAG_member, name: "slave_changelink", scope: !9385, file: !9386, line: 97, baseType: !9428, size: 64, offset: 1216)
!9428 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9429, size: 64)
!9429 = !DISubroutineType(types: !9430)
!9430 = !{!37, !295, !295, !8006, !8006, !2444}
!9431 = !DIDerivedType(tag: DW_TAG_member, name: "get_slave_size", scope: !9385, file: !9386, line: 102, baseType: !9432, size: 64, offset: 1280)
!9432 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9433, size: 64)
!9433 = !DISubroutineType(types: !9434)
!9434 = !{!594, !2682, !2682}
!9435 = !DIDerivedType(tag: DW_TAG_member, name: "fill_slave_info", scope: !9385, file: !9386, line: 104, baseType: !9436, size: 64, offset: 1344)
!9436 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9437, size: 64)
!9437 = !DISubroutineType(types: !9438)
!9438 = !{!37, !420, !2682, !2682}
!9439 = !DIDerivedType(tag: DW_TAG_member, name: "get_link_net", scope: !9385, file: !9386, line: 107, baseType: !9440, size: 64, offset: 1408)
!9440 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9441, size: 64)
!9441 = !DISubroutineType(types: !9442)
!9442 = !{!1962, !2682}
!9443 = !DIDerivedType(tag: DW_TAG_member, name: "get_linkxstats_size", scope: !9385, file: !9386, line: 108, baseType: !9444, size: 64, offset: 1472)
!9444 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9445, size: 64)
!9445 = !DISubroutineType(types: !9446)
!9446 = !{!594, !2682, !37}
!9447 = !DIDerivedType(tag: DW_TAG_member, name: "fill_linkxstats", scope: !9385, file: !9386, line: 110, baseType: !9448, size: 64, offset: 1536)
!9448 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9449, size: 64)
!9449 = !DISubroutineType(types: !9450)
!9450 = !{!37, !420, !2682, !539, !37}
!9451 = !DIDerivedType(tag: DW_TAG_member, name: "gso_max_size", scope: !269, file: !36, line: 2132, baseType: !7, size: 32, offset: 14144)
!9452 = !DIDerivedType(tag: DW_TAG_member, name: "gso_max_segs", scope: !269, file: !36, line: 2134, baseType: !1038, size: 16, offset: 14176)
!9453 = !DIDerivedType(tag: DW_TAG_member, name: "num_tc", scope: !269, file: !36, line: 2139, baseType: !1244, size: 16, offset: 14192)
!9454 = !DIDerivedType(tag: DW_TAG_member, name: "tc_to_txq", scope: !269, file: !36, line: 2140, baseType: !9455, size: 512, offset: 14208)
!9455 = !DICompositeType(tag: DW_TAG_array_type, baseType: !9456, size: 512, elements: !274)
!9456 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "netdev_tc_txq", file: !36, line: 793, size: 32, elements: !9457)
!9457 = !{!9458, !9459}
!9458 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !9456, file: !36, line: 794, baseType: !1038, size: 16)
!9459 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !9456, file: !36, line: 795, baseType: !1038, size: 16, offset: 16)
!9460 = !DIDerivedType(tag: DW_TAG_member, name: "prio_tc_map", scope: !269, file: !36, line: 2141, baseType: !9461, size: 128, offset: 14720)
!9461 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1397, size: 128, elements: !274)
!9462 = !DIDerivedType(tag: DW_TAG_member, name: "phydev", scope: !269, file: !36, line: 2149, baseType: !9463, size: 64, offset: 14848)
!9463 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9464, size: 64)
!9464 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "phy_device", file: !9465, line: 539, size: 10112, elements: !9466)
!9465 = !DIFile(filename: "./include/linux/phy.h", directory: "/home/lizy2001/genbc/linux")
!9466 = !{!9467, !9560, !9673, !9674, !9680, !9681, !9682, !9683, !9684, !9685, !9686, !9687, !9688, !9689, !9690, !9691, !9692, !9693, !9694, !9704, !9705, !9736, !9737, !9738, !9739, !9740, !9741, !9742, !9743, !9744, !9745, !9746, !9747, !9748, !9749, !9750, !9751, !9752, !9753, !9754, !9755, !9756, !9757, !9760, !9763, !9764, !9790, !9791, !9792, !9796}
!9467 = !DIDerivedType(tag: DW_TAG_member, name: "mdio", scope: !9464, file: !9465, line: 540, baseType: !9468, size: 6336)
!9468 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mdio_device", file: !9469, line: 34, size: 6336, elements: !9470)
!9469 = !DIFile(filename: "./include/linux/mdio.h", directory: "/home/lizy2001/genbc/linux")
!9470 = !{!9471, !9472, !9545, !9546, !9547, !9551, !9552, !9553, !9554, !9555, !9558, !9559}
!9471 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !9468, file: !9469, line: 35, baseType: !3803, size: 5568)
!9472 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !9468, file: !9469, line: 37, baseType: !9473, size: 64, offset: 5568)
!9473 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9474, size: 64)
!9474 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mii_bus", file: !9465, line: 301, size: 20544, elements: !9475)
!9475 = !{!9476, !9477, !9478, !9482, !9483, !9487, !9491, !9495, !9504, !9505, !9506, !9513, !9514, !9517, !9518, !9519, !9521, !9522, !9523, !9527, !9534, !9535}
!9476 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !9474, file: !9465, line: 302, baseType: !852, size: 64)
!9477 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !9474, file: !9465, line: 303, baseType: !297, size: 64, offset: 64)
!9478 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !9474, file: !9465, line: 304, baseType: !9479, size: 488, offset: 128)
!9479 = !DICompositeType(tag: DW_TAG_array_type, baseType: !273, size: 488, elements: !9480)
!9480 = !{!9481}
!9481 = !DISubrange(count: 61)
!9482 = !DIDerivedType(tag: DW_TAG_member, name: "priv", scope: !9474, file: !9465, line: 305, baseType: !570, size: 64, offset: 640)
!9483 = !DIDerivedType(tag: DW_TAG_member, name: "read", scope: !9474, file: !9465, line: 307, baseType: !9484, size: 64, offset: 704)
!9484 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9485, size: 64)
!9485 = !DISubroutineType(types: !9486)
!9486 = !{!37, !9473, !37, !37}
!9487 = !DIDerivedType(tag: DW_TAG_member, name: "write", scope: !9474, file: !9465, line: 309, baseType: !9488, size: 64, offset: 768)
!9488 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9489, size: 64)
!9489 = !DISubroutineType(types: !9490)
!9490 = !{!37, !9473, !37, !37, !1038}
!9491 = !DIDerivedType(tag: DW_TAG_member, name: "reset", scope: !9474, file: !9465, line: 311, baseType: !9492, size: 64, offset: 832)
!9492 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9493, size: 64)
!9493 = !DISubroutineType(types: !9494)
!9494 = !{!37, !9473}
!9495 = !DIDerivedType(tag: DW_TAG_member, name: "stats", scope: !9474, file: !9465, line: 314, baseType: !9496, size: 8192, offset: 896)
!9496 = !DICompositeType(tag: DW_TAG_array_type, baseType: !9497, size: 8192, elements: !716)
!9497 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mdio_bus_stats", file: !9465, line: 250, size: 256, elements: !9498)
!9498 = !{!9499, !9500, !9501, !9502, !9503}
!9499 = !DIDerivedType(tag: DW_TAG_member, name: "transfers", scope: !9497, file: !9465, line: 251, baseType: !9350, size: 64)
!9500 = !DIDerivedType(tag: DW_TAG_member, name: "errors", scope: !9497, file: !9465, line: 252, baseType: !9350, size: 64, offset: 64)
!9501 = !DIDerivedType(tag: DW_TAG_member, name: "writes", scope: !9497, file: !9465, line: 253, baseType: !9350, size: 64, offset: 128)
!9502 = !DIDerivedType(tag: DW_TAG_member, name: "reads", scope: !9497, file: !9465, line: 254, baseType: !9350, size: 64, offset: 192)
!9503 = !DIDerivedType(tag: DW_TAG_member, name: "syncp", scope: !9497, file: !9465, line: 256, baseType: !2058, offset: 256)
!9504 = !DIDerivedType(tag: DW_TAG_member, name: "mdio_lock", scope: !9474, file: !9465, line: 320, baseType: !954, size: 192, offset: 9088)
!9505 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !9474, file: !9465, line: 323, baseType: !4172, size: 64, offset: 9280)
!9506 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !9474, file: !9465, line: 330, baseType: !9507, size: 32, offset: 9344)
!9507 = !DICompositeType(tag: DW_TAG_enumeration_type, scope: !9474, file: !9465, line: 325, baseType: !7, size: 32, elements: !9508)
!9508 = !{!9509, !9510, !9511, !9512}
!9509 = !DIEnumerator(name: "MDIOBUS_ALLOCATED", value: 1, isUnsigned: true)
!9510 = !DIEnumerator(name: "MDIOBUS_REGISTERED", value: 2, isUnsigned: true)
!9511 = !DIEnumerator(name: "MDIOBUS_UNREGISTERED", value: 3, isUnsigned: true)
!9512 = !DIEnumerator(name: "MDIOBUS_RELEASED", value: 4, isUnsigned: true)
!9513 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !9474, file: !9465, line: 333, baseType: !3803, size: 5568, offset: 9408)
!9514 = !DIDerivedType(tag: DW_TAG_member, name: "mdio_map", scope: !9474, file: !9465, line: 336, baseType: !9515, size: 2048, offset: 14976)
!9515 = !DICompositeType(tag: DW_TAG_array_type, baseType: !9516, size: 2048, elements: !716)
!9516 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9468, size: 64)
!9517 = !DIDerivedType(tag: DW_TAG_member, name: "phy_mask", scope: !9474, file: !9465, line: 339, baseType: !707, size: 32, offset: 17024)
!9518 = !DIDerivedType(tag: DW_TAG_member, name: "phy_ignore_ta_mask", scope: !9474, file: !9465, line: 342, baseType: !707, size: 32, offset: 17056)
!9519 = !DIDerivedType(tag: DW_TAG_member, name: "irq", scope: !9474, file: !9465, line: 348, baseType: !9520, size: 1024, offset: 17088)
!9520 = !DICompositeType(tag: DW_TAG_array_type, baseType: !37, size: 1024, elements: !716)
!9521 = !DIDerivedType(tag: DW_TAG_member, name: "reset_delay_us", scope: !9474, file: !9465, line: 351, baseType: !37, size: 32, offset: 18112)
!9522 = !DIDerivedType(tag: DW_TAG_member, name: "reset_post_delay_us", scope: !9474, file: !9465, line: 353, baseType: !37, size: 32, offset: 18144)
!9523 = !DIDerivedType(tag: DW_TAG_member, name: "reset_gpiod", scope: !9474, file: !9465, line: 355, baseType: !9524, size: 64, offset: 18176)
!9524 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9525, size: 64)
!9525 = !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_desc", file: !9526, line: 14, flags: DIFlagFwdDecl)
!9526 = !DIFile(filename: "./include/linux/gpio/driver.h", directory: "/home/lizy2001/genbc/linux")
!9527 = !DIDerivedType(tag: DW_TAG_member, name: "probe_capabilities", scope: !9474, file: !9465, line: 363, baseType: !9528, size: 32, offset: 18240)
!9528 = !DICompositeType(tag: DW_TAG_enumeration_type, scope: !9474, file: !9465, line: 358, baseType: !7, size: 32, elements: !9529)
!9529 = !{!9530, !9531, !9532, !9533}
!9530 = !DIEnumerator(name: "MDIOBUS_NO_CAP", value: 0, isUnsigned: true)
!9531 = !DIEnumerator(name: "MDIOBUS_C22", value: 1, isUnsigned: true)
!9532 = !DIEnumerator(name: "MDIOBUS_C45", value: 2, isUnsigned: true)
!9533 = !DIEnumerator(name: "MDIOBUS_C22_C45", value: 3, isUnsigned: true)
!9534 = !DIDerivedType(tag: DW_TAG_member, name: "shared_lock", scope: !9474, file: !9465, line: 366, baseType: !954, size: 192, offset: 18304)
!9535 = !DIDerivedType(tag: DW_TAG_member, name: "shared", scope: !9474, file: !9465, line: 369, baseType: !9536, size: 2048, offset: 18496)
!9536 = !DICompositeType(tag: DW_TAG_array_type, baseType: !9537, size: 2048, elements: !716)
!9537 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9538, size: 64)
!9538 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "phy_package_shared", file: !9465, line: 271, size: 256, elements: !9539)
!9539 = !{!9540, !9541, !9542, !9543, !9544}
!9540 = !DIDerivedType(tag: DW_TAG_member, name: "addr", scope: !9538, file: !9465, line: 272, baseType: !37, size: 32)
!9541 = !DIDerivedType(tag: DW_TAG_member, name: "refcnt", scope: !9538, file: !9465, line: 273, baseType: !1271, size: 32, offset: 32)
!9542 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !9538, file: !9465, line: 274, baseType: !317, size: 64, offset: 64)
!9543 = !DIDerivedType(tag: DW_TAG_member, name: "priv_size", scope: !9538, file: !9465, line: 275, baseType: !594, size: 64, offset: 128)
!9544 = !DIDerivedType(tag: DW_TAG_member, name: "priv", scope: !9538, file: !9465, line: 283, baseType: !570, size: 64, offset: 192)
!9545 = !DIDerivedType(tag: DW_TAG_member, name: "modalias", scope: !9468, file: !9469, line: 38, baseType: !3761, size: 256, offset: 5632)
!9546 = !DIDerivedType(tag: DW_TAG_member, name: "bus_match", scope: !9468, file: !9469, line: 40, baseType: !4241, size: 64, offset: 5888)
!9547 = !DIDerivedType(tag: DW_TAG_member, name: "device_free", scope: !9468, file: !9469, line: 41, baseType: !9548, size: 64, offset: 5952)
!9548 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9549, size: 64)
!9549 = !DISubroutineType(types: !9550)
!9550 = !{null, !9516}
!9551 = !DIDerivedType(tag: DW_TAG_member, name: "device_remove", scope: !9468, file: !9469, line: 42, baseType: !9548, size: 64, offset: 6016)
!9552 = !DIDerivedType(tag: DW_TAG_member, name: "addr", scope: !9468, file: !9469, line: 45, baseType: !37, size: 32, offset: 6080)
!9553 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !9468, file: !9469, line: 46, baseType: !37, size: 32, offset: 6112)
!9554 = !DIDerivedType(tag: DW_TAG_member, name: "reset_gpio", scope: !9468, file: !9469, line: 47, baseType: !9524, size: 64, offset: 6144)
!9555 = !DIDerivedType(tag: DW_TAG_member, name: "reset_ctrl", scope: !9468, file: !9469, line: 48, baseType: !9556, size: 64, offset: 6208)
!9556 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9557, size: 64)
!9557 = !DICompositeType(tag: DW_TAG_structure_type, name: "reset_control", file: !9469, line: 21, flags: DIFlagFwdDecl)
!9558 = !DIDerivedType(tag: DW_TAG_member, name: "reset_assert_delay", scope: !9468, file: !9469, line: 49, baseType: !7, size: 32, offset: 6272)
!9559 = !DIDerivedType(tag: DW_TAG_member, name: "reset_deassert_delay", scope: !9468, file: !9469, line: 50, baseType: !7, size: 32, offset: 6304)
!9560 = !DIDerivedType(tag: DW_TAG_member, name: "drv", scope: !9464, file: !9465, line: 544, baseType: !9561, size: 64, offset: 6336)
!9561 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9562, size: 64)
!9562 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "phy_driver", file: !9465, line: 694, size: 3840, elements: !9563)
!9563 = !{!9564, !9569, !9570, !9571, !9572, !9575, !9576, !9577, !9581, !9582, !9583, !9584, !9585, !9586, !9587, !9588, !9589, !9590, !9591, !9592, !9596, !9600, !9601, !9605, !9609, !9610, !9614, !9618, !9619, !9623, !9627, !9631, !9632, !9645, !9649, !9650, !9654, !9658, !9663, !9667, !9671, !9672}
!9564 = !DIDerivedType(tag: DW_TAG_member, name: "mdiodrv", scope: !9562, file: !9465, line: 695, baseType: !9565, size: 1216)
!9565 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mdio_driver_common", file: !9469, line: 55, size: 1216, elements: !9566)
!9566 = !{!9567, !9568}
!9567 = !DIDerivedType(tag: DW_TAG_member, name: "driver", scope: !9565, file: !9469, line: 56, baseType: !4245, size: 1152)
!9568 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !9565, file: !9469, line: 57, baseType: !37, size: 32, offset: 1152)
!9569 = !DIDerivedType(tag: DW_TAG_member, name: "phy_id", scope: !9562, file: !9465, line: 696, baseType: !707, size: 32, offset: 1216)
!9570 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !9562, file: !9465, line: 697, baseType: !577, size: 64, offset: 1280)
!9571 = !DIDerivedType(tag: DW_TAG_member, name: "phy_id_mask", scope: !9562, file: !9465, line: 698, baseType: !707, size: 32, offset: 1344)
!9572 = !DIDerivedType(tag: DW_TAG_member, name: "features", scope: !9562, file: !9465, line: 699, baseType: !9573, size: 64, offset: 1408)
!9573 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !9574)
!9574 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7149, size: 64)
!9575 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !9562, file: !9465, line: 700, baseType: !707, size: 32, offset: 1472)
!9576 = !DIDerivedType(tag: DW_TAG_member, name: "driver_data", scope: !9562, file: !9465, line: 701, baseType: !2244, size: 64, offset: 1536)
!9577 = !DIDerivedType(tag: DW_TAG_member, name: "soft_reset", scope: !9562, file: !9465, line: 706, baseType: !9578, size: 64, offset: 1600)
!9578 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9579, size: 64)
!9579 = !DISubroutineType(types: !9580)
!9580 = !{!37, !9463}
!9581 = !DIDerivedType(tag: DW_TAG_member, name: "config_init", scope: !9562, file: !9465, line: 712, baseType: !9578, size: 64, offset: 1664)
!9582 = !DIDerivedType(tag: DW_TAG_member, name: "probe", scope: !9562, file: !9465, line: 718, baseType: !9578, size: 64, offset: 1728)
!9583 = !DIDerivedType(tag: DW_TAG_member, name: "get_features", scope: !9562, file: !9465, line: 724, baseType: !9578, size: 64, offset: 1792)
!9584 = !DIDerivedType(tag: DW_TAG_member, name: "suspend", scope: !9562, file: !9465, line: 728, baseType: !9578, size: 64, offset: 1856)
!9585 = !DIDerivedType(tag: DW_TAG_member, name: "resume", scope: !9562, file: !9465, line: 730, baseType: !9578, size: 64, offset: 1920)
!9586 = !DIDerivedType(tag: DW_TAG_member, name: "config_aneg", scope: !9562, file: !9465, line: 738, baseType: !9578, size: 64, offset: 1984)
!9587 = !DIDerivedType(tag: DW_TAG_member, name: "aneg_done", scope: !9562, file: !9465, line: 741, baseType: !9578, size: 64, offset: 2048)
!9588 = !DIDerivedType(tag: DW_TAG_member, name: "read_status", scope: !9562, file: !9465, line: 744, baseType: !9578, size: 64, offset: 2112)
!9589 = !DIDerivedType(tag: DW_TAG_member, name: "ack_interrupt", scope: !9562, file: !9465, line: 747, baseType: !9578, size: 64, offset: 2176)
!9590 = !DIDerivedType(tag: DW_TAG_member, name: "config_intr", scope: !9562, file: !9465, line: 750, baseType: !9578, size: 64, offset: 2240)
!9591 = !DIDerivedType(tag: DW_TAG_member, name: "did_interrupt", scope: !9562, file: !9465, line: 757, baseType: !9578, size: 64, offset: 2304)
!9592 = !DIDerivedType(tag: DW_TAG_member, name: "handle_interrupt", scope: !9562, file: !9465, line: 760, baseType: !9593, size: 64, offset: 2368)
!9593 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9594, size: 64)
!9594 = !DISubroutineType(types: !9595)
!9595 = !{!4847, !9463}
!9596 = !DIDerivedType(tag: DW_TAG_member, name: "remove", scope: !9562, file: !9465, line: 763, baseType: !9597, size: 64, offset: 2432)
!9597 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9598, size: 64)
!9598 = !DISubroutineType(types: !9599)
!9599 = !{null, !9463}
!9600 = !DIDerivedType(tag: DW_TAG_member, name: "match_phy_device", scope: !9562, file: !9465, line: 770, baseType: !9578, size: 64, offset: 2496)
!9601 = !DIDerivedType(tag: DW_TAG_member, name: "set_wol", scope: !9562, file: !9465, line: 778, baseType: !9602, size: 64, offset: 2560)
!9602 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9603, size: 64)
!9603 = !DISubroutineType(types: !9604)
!9604 = !{!37, !9463, !8318}
!9605 = !DIDerivedType(tag: DW_TAG_member, name: "get_wol", scope: !9562, file: !9465, line: 784, baseType: !9606, size: 64, offset: 2624)
!9606 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9607, size: 64)
!9607 = !DISubroutineType(types: !9608)
!9608 = !{null, !9463, !8318}
!9609 = !DIDerivedType(tag: DW_TAG_member, name: "link_change_notify", scope: !9562, file: !9465, line: 794, baseType: !9597, size: 64, offset: 2688)
!9610 = !DIDerivedType(tag: DW_TAG_member, name: "read_mmd", scope: !9562, file: !9465, line: 806, baseType: !9611, size: 64, offset: 2752)
!9611 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9612, size: 64)
!9612 = !DISubroutineType(types: !9613)
!9613 = !{!37, !9463, !37, !1038}
!9614 = !DIDerivedType(tag: DW_TAG_member, name: "write_mmd", scope: !9562, file: !9465, line: 818, baseType: !9615, size: 64, offset: 2816)
!9615 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9616, size: 64)
!9616 = !DISubroutineType(types: !9617)
!9617 = !{!37, !9463, !37, !1038, !1038}
!9618 = !DIDerivedType(tag: DW_TAG_member, name: "read_page", scope: !9562, file: !9465, line: 822, baseType: !9578, size: 64, offset: 2880)
!9619 = !DIDerivedType(tag: DW_TAG_member, name: "write_page", scope: !9562, file: !9465, line: 824, baseType: !9620, size: 64, offset: 2944)
!9620 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9621, size: 64)
!9621 = !DISubroutineType(types: !9622)
!9622 = !{!37, !9463, !37}
!9623 = !DIDerivedType(tag: DW_TAG_member, name: "module_info", scope: !9562, file: !9465, line: 830, baseType: !9624, size: 64, offset: 3008)
!9624 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9625, size: 64)
!9625 = !DISubroutineType(types: !9626)
!9626 = !{!37, !9463, !8681}
!9627 = !DIDerivedType(tag: DW_TAG_member, name: "module_eeprom", scope: !9562, file: !9465, line: 837, baseType: !9628, size: 64, offset: 3072)
!9628 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9629, size: 64)
!9629 = !DISubroutineType(types: !9630)
!9630 = !{!37, !9463, !8362, !7949}
!9631 = !DIDerivedType(tag: DW_TAG_member, name: "cable_test_start", scope: !9562, file: !9465, line: 841, baseType: !9578, size: 64, offset: 3136)
!9632 = !DIDerivedType(tag: DW_TAG_member, name: "cable_test_tdr_start", scope: !9562, file: !9465, line: 844, baseType: !9633, size: 64, offset: 3200)
!9633 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9634, size: 64)
!9634 = !DISubroutineType(types: !9635)
!9635 = !{!37, !9463, !9636}
!9636 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9637, size: 64)
!9637 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !9638)
!9638 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "phy_tdr_config", file: !9465, line: 663, size: 128, elements: !9639)
!9639 = !{!9640, !9641, !9642, !9643}
!9640 = !DIDerivedType(tag: DW_TAG_member, name: "first", scope: !9638, file: !9465, line: 664, baseType: !707, size: 32)
!9641 = !DIDerivedType(tag: DW_TAG_member, name: "last", scope: !9638, file: !9465, line: 665, baseType: !707, size: 32, offset: 32)
!9642 = !DIDerivedType(tag: DW_TAG_member, name: "step", scope: !9638, file: !9465, line: 666, baseType: !707, size: 32, offset: 64)
!9643 = !DIDerivedType(tag: DW_TAG_member, name: "pair", scope: !9638, file: !9465, line: 667, baseType: !9644, size: 8, offset: 96)
!9644 = !DIDerivedType(tag: DW_TAG_typedef, name: "s8", file: !337, line: 16, baseType: !8750)
!9645 = !DIDerivedType(tag: DW_TAG_member, name: "cable_test_get_status", scope: !9562, file: !9465, line: 851, baseType: !9646, size: 64, offset: 3264)
!9646 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9647, size: 64)
!9647 = !DISubroutineType(types: !9648)
!9648 = !{!37, !9463, !4728}
!9649 = !DIDerivedType(tag: DW_TAG_member, name: "get_sset_count", scope: !9562, file: !9465, line: 855, baseType: !9578, size: 64, offset: 3328)
!9650 = !DIDerivedType(tag: DW_TAG_member, name: "get_strings", scope: !9562, file: !9465, line: 857, baseType: !9651, size: 64, offset: 3392)
!9651 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9652, size: 64)
!9652 = !DISubroutineType(types: !9653)
!9653 = !{null, !9463, !7949}
!9654 = !DIDerivedType(tag: DW_TAG_member, name: "get_stats", scope: !9562, file: !9465, line: 859, baseType: !9655, size: 64, offset: 3456)
!9655 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9656, size: 64)
!9656 = !DISubroutineType(types: !9657)
!9657 = !{null, !9463, !8471, !3338}
!9658 = !DIDerivedType(tag: DW_TAG_member, name: "get_tunable", scope: !9562, file: !9465, line: 864, baseType: !9659, size: 64, offset: 3520)
!9659 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9660, size: 64)
!9660 = !DISubroutineType(types: !9661)
!9661 = !{!37, !9463, !9662, !570}
!9662 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8713, size: 64)
!9663 = !DIDerivedType(tag: DW_TAG_member, name: "set_tunable", scope: !9562, file: !9465, line: 867, baseType: !9664, size: 64, offset: 3584)
!9664 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9665, size: 64)
!9665 = !DISubroutineType(types: !9666)
!9666 = !{!37, !9463, !9662, !2244}
!9667 = !DIDerivedType(tag: DW_TAG_member, name: "set_loopback", scope: !9562, file: !9465, line: 871, baseType: !9668, size: 64, offset: 3648)
!9668 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9669, size: 64)
!9669 = !DISubroutineType(types: !9670)
!9670 = !{!37, !9463, !540}
!9671 = !DIDerivedType(tag: DW_TAG_member, name: "get_sqi", scope: !9562, file: !9465, line: 873, baseType: !9578, size: 64, offset: 3712)
!9672 = !DIDerivedType(tag: DW_TAG_member, name: "get_sqi_max", scope: !9562, file: !9465, line: 875, baseType: !9578, size: 64, offset: 3776)
!9673 = !DIDerivedType(tag: DW_TAG_member, name: "phy_id", scope: !9464, file: !9465, line: 546, baseType: !707, size: 32, offset: 6400)
!9674 = !DIDerivedType(tag: DW_TAG_member, name: "c45_ids", scope: !9464, file: !9465, line: 548, baseType: !9675, size: 1088, offset: 6432)
!9675 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "phy_c45_device_ids", file: !9465, line: 461, size: 1088, elements: !9676)
!9676 = !{!9677, !9678, !9679}
!9677 = !DIDerivedType(tag: DW_TAG_member, name: "devices_in_package", scope: !9675, file: !9465, line: 462, baseType: !707, size: 32)
!9678 = !DIDerivedType(tag: DW_TAG_member, name: "mmds_present", scope: !9675, file: !9465, line: 463, baseType: !707, size: 32, offset: 32)
!9679 = !DIDerivedType(tag: DW_TAG_member, name: "device_ids", scope: !9675, file: !9465, line: 464, baseType: !6077, size: 1024, offset: 64)
!9680 = !DIDerivedType(tag: DW_TAG_member, name: "is_c45", scope: !9464, file: !9465, line: 549, baseType: !7, size: 1, offset: 7520, flags: DIFlagBitField, extraData: i64 7520)
!9681 = !DIDerivedType(tag: DW_TAG_member, name: "is_internal", scope: !9464, file: !9465, line: 550, baseType: !7, size: 1, offset: 7521, flags: DIFlagBitField, extraData: i64 7520)
!9682 = !DIDerivedType(tag: DW_TAG_member, name: "is_pseudo_fixed_link", scope: !9464, file: !9465, line: 551, baseType: !7, size: 1, offset: 7522, flags: DIFlagBitField, extraData: i64 7520)
!9683 = !DIDerivedType(tag: DW_TAG_member, name: "is_gigabit_capable", scope: !9464, file: !9465, line: 552, baseType: !7, size: 1, offset: 7523, flags: DIFlagBitField, extraData: i64 7520)
!9684 = !DIDerivedType(tag: DW_TAG_member, name: "has_fixups", scope: !9464, file: !9465, line: 553, baseType: !7, size: 1, offset: 7524, flags: DIFlagBitField, extraData: i64 7520)
!9685 = !DIDerivedType(tag: DW_TAG_member, name: "suspended", scope: !9464, file: !9465, line: 554, baseType: !7, size: 1, offset: 7525, flags: DIFlagBitField, extraData: i64 7520)
!9686 = !DIDerivedType(tag: DW_TAG_member, name: "suspended_by_mdio_bus", scope: !9464, file: !9465, line: 555, baseType: !7, size: 1, offset: 7526, flags: DIFlagBitField, extraData: i64 7520)
!9687 = !DIDerivedType(tag: DW_TAG_member, name: "sysfs_links", scope: !9464, file: !9465, line: 556, baseType: !7, size: 1, offset: 7527, flags: DIFlagBitField, extraData: i64 7520)
!9688 = !DIDerivedType(tag: DW_TAG_member, name: "loopback_enabled", scope: !9464, file: !9465, line: 557, baseType: !7, size: 1, offset: 7528, flags: DIFlagBitField, extraData: i64 7520)
!9689 = !DIDerivedType(tag: DW_TAG_member, name: "downshifted_rate", scope: !9464, file: !9465, line: 558, baseType: !7, size: 1, offset: 7529, flags: DIFlagBitField, extraData: i64 7520)
!9690 = !DIDerivedType(tag: DW_TAG_member, name: "autoneg", scope: !9464, file: !9465, line: 560, baseType: !7, size: 1, offset: 7530, flags: DIFlagBitField, extraData: i64 7520)
!9691 = !DIDerivedType(tag: DW_TAG_member, name: "link", scope: !9464, file: !9465, line: 562, baseType: !7, size: 1, offset: 7531, flags: DIFlagBitField, extraData: i64 7520)
!9692 = !DIDerivedType(tag: DW_TAG_member, name: "autoneg_complete", scope: !9464, file: !9465, line: 563, baseType: !7, size: 1, offset: 7532, flags: DIFlagBitField, extraData: i64 7520)
!9693 = !DIDerivedType(tag: DW_TAG_member, name: "interrupts", scope: !9464, file: !9465, line: 566, baseType: !7, size: 1, offset: 7533, flags: DIFlagBitField, extraData: i64 7520)
!9694 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !9464, file: !9465, line: 568, baseType: !9695, size: 32, offset: 7552)
!9695 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "phy_state", file: !9465, line: 443, baseType: !7, size: 32, elements: !9696)
!9696 = !{!9697, !9698, !9699, !9700, !9701, !9702, !9703}
!9697 = !DIEnumerator(name: "PHY_DOWN", value: 0, isUnsigned: true)
!9698 = !DIEnumerator(name: "PHY_READY", value: 1, isUnsigned: true)
!9699 = !DIEnumerator(name: "PHY_HALTED", value: 2, isUnsigned: true)
!9700 = !DIEnumerator(name: "PHY_UP", value: 3, isUnsigned: true)
!9701 = !DIEnumerator(name: "PHY_RUNNING", value: 4, isUnsigned: true)
!9702 = !DIEnumerator(name: "PHY_NOLINK", value: 5, isUnsigned: true)
!9703 = !DIEnumerator(name: "PHY_CABLETEST", value: 6, isUnsigned: true)
!9704 = !DIDerivedType(tag: DW_TAG_member, name: "dev_flags", scope: !9464, file: !9465, line: 570, baseType: !707, size: 32, offset: 7584)
!9705 = !DIDerivedType(tag: DW_TAG_member, name: "interface", scope: !9464, file: !9465, line: 572, baseType: !9706, size: 32, offset: 7616)
!9706 = !DIDerivedType(tag: DW_TAG_typedef, name: "phy_interface_t", file: !9465, line: 148, baseType: !9707)
!9707 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !9465, line: 118, baseType: !7, size: 32, elements: !9708)
!9708 = !{!9709, !9710, !9711, !9712, !9713, !9714, !9715, !9716, !9717, !9718, !9719, !9720, !9721, !9722, !9723, !9724, !9725, !9726, !9727, !9728, !9729, !9730, !9731, !9732, !9733, !9734, !9735}
!9709 = !DIEnumerator(name: "PHY_INTERFACE_MODE_NA", value: 0, isUnsigned: true)
!9710 = !DIEnumerator(name: "PHY_INTERFACE_MODE_INTERNAL", value: 1, isUnsigned: true)
!9711 = !DIEnumerator(name: "PHY_INTERFACE_MODE_MII", value: 2, isUnsigned: true)
!9712 = !DIEnumerator(name: "PHY_INTERFACE_MODE_GMII", value: 3, isUnsigned: true)
!9713 = !DIEnumerator(name: "PHY_INTERFACE_MODE_SGMII", value: 4, isUnsigned: true)
!9714 = !DIEnumerator(name: "PHY_INTERFACE_MODE_TBI", value: 5, isUnsigned: true)
!9715 = !DIEnumerator(name: "PHY_INTERFACE_MODE_REVMII", value: 6, isUnsigned: true)
!9716 = !DIEnumerator(name: "PHY_INTERFACE_MODE_RMII", value: 7, isUnsigned: true)
!9717 = !DIEnumerator(name: "PHY_INTERFACE_MODE_RGMII", value: 8, isUnsigned: true)
!9718 = !DIEnumerator(name: "PHY_INTERFACE_MODE_RGMII_ID", value: 9, isUnsigned: true)
!9719 = !DIEnumerator(name: "PHY_INTERFACE_MODE_RGMII_RXID", value: 10, isUnsigned: true)
!9720 = !DIEnumerator(name: "PHY_INTERFACE_MODE_RGMII_TXID", value: 11, isUnsigned: true)
!9721 = !DIEnumerator(name: "PHY_INTERFACE_MODE_RTBI", value: 12, isUnsigned: true)
!9722 = !DIEnumerator(name: "PHY_INTERFACE_MODE_SMII", value: 13, isUnsigned: true)
!9723 = !DIEnumerator(name: "PHY_INTERFACE_MODE_XGMII", value: 14, isUnsigned: true)
!9724 = !DIEnumerator(name: "PHY_INTERFACE_MODE_XLGMII", value: 15, isUnsigned: true)
!9725 = !DIEnumerator(name: "PHY_INTERFACE_MODE_MOCA", value: 16, isUnsigned: true)
!9726 = !DIEnumerator(name: "PHY_INTERFACE_MODE_QSGMII", value: 17, isUnsigned: true)
!9727 = !DIEnumerator(name: "PHY_INTERFACE_MODE_TRGMII", value: 18, isUnsigned: true)
!9728 = !DIEnumerator(name: "PHY_INTERFACE_MODE_1000BASEX", value: 19, isUnsigned: true)
!9729 = !DIEnumerator(name: "PHY_INTERFACE_MODE_2500BASEX", value: 20, isUnsigned: true)
!9730 = !DIEnumerator(name: "PHY_INTERFACE_MODE_RXAUI", value: 21, isUnsigned: true)
!9731 = !DIEnumerator(name: "PHY_INTERFACE_MODE_XAUI", value: 22, isUnsigned: true)
!9732 = !DIEnumerator(name: "PHY_INTERFACE_MODE_10GBASER", value: 23, isUnsigned: true)
!9733 = !DIEnumerator(name: "PHY_INTERFACE_MODE_USXGMII", value: 24, isUnsigned: true)
!9734 = !DIEnumerator(name: "PHY_INTERFACE_MODE_10GKR", value: 25, isUnsigned: true)
!9735 = !DIEnumerator(name: "PHY_INTERFACE_MODE_MAX", value: 26, isUnsigned: true)
!9736 = !DIDerivedType(tag: DW_TAG_member, name: "speed", scope: !9464, file: !9465, line: 578, baseType: !37, size: 32, offset: 7648)
!9737 = !DIDerivedType(tag: DW_TAG_member, name: "duplex", scope: !9464, file: !9465, line: 579, baseType: !37, size: 32, offset: 7680)
!9738 = !DIDerivedType(tag: DW_TAG_member, name: "pause", scope: !9464, file: !9465, line: 580, baseType: !37, size: 32, offset: 7712)
!9739 = !DIDerivedType(tag: DW_TAG_member, name: "asym_pause", scope: !9464, file: !9465, line: 581, baseType: !37, size: 32, offset: 7744)
!9740 = !DIDerivedType(tag: DW_TAG_member, name: "master_slave_get", scope: !9464, file: !9465, line: 582, baseType: !1397, size: 8, offset: 7776)
!9741 = !DIDerivedType(tag: DW_TAG_member, name: "master_slave_set", scope: !9464, file: !9465, line: 583, baseType: !1397, size: 8, offset: 7784)
!9742 = !DIDerivedType(tag: DW_TAG_member, name: "master_slave_state", scope: !9464, file: !9465, line: 584, baseType: !1397, size: 8, offset: 7792)
!9743 = !DIDerivedType(tag: DW_TAG_member, name: "supported", scope: !9464, file: !9465, line: 588, baseType: !8766, size: 128, offset: 7808)
!9744 = !DIDerivedType(tag: DW_TAG_member, name: "advertising", scope: !9464, file: !9465, line: 589, baseType: !8766, size: 128, offset: 7936)
!9745 = !DIDerivedType(tag: DW_TAG_member, name: "lp_advertising", scope: !9464, file: !9465, line: 590, baseType: !8766, size: 128, offset: 8064)
!9746 = !DIDerivedType(tag: DW_TAG_member, name: "adv_old", scope: !9464, file: !9465, line: 592, baseType: !8766, size: 128, offset: 8192)
!9747 = !DIDerivedType(tag: DW_TAG_member, name: "eee_broken_modes", scope: !9464, file: !9465, line: 595, baseType: !707, size: 32, offset: 8320)
!9748 = !DIDerivedType(tag: DW_TAG_member, name: "irq", scope: !9464, file: !9465, line: 609, baseType: !37, size: 32, offset: 8352)
!9749 = !DIDerivedType(tag: DW_TAG_member, name: "priv", scope: !9464, file: !9465, line: 613, baseType: !570, size: 64, offset: 8384)
!9750 = !DIDerivedType(tag: DW_TAG_member, name: "shared", scope: !9464, file: !9465, line: 617, baseType: !9537, size: 64, offset: 8448)
!9751 = !DIDerivedType(tag: DW_TAG_member, name: "skb", scope: !9464, file: !9465, line: 620, baseType: !420, size: 64, offset: 8512)
!9752 = !DIDerivedType(tag: DW_TAG_member, name: "ehdr", scope: !9464, file: !9465, line: 621, baseType: !570, size: 64, offset: 8576)
!9753 = !DIDerivedType(tag: DW_TAG_member, name: "nest", scope: !9464, file: !9465, line: 622, baseType: !8007, size: 64, offset: 8640)
!9754 = !DIDerivedType(tag: DW_TAG_member, name: "state_queue", scope: !9464, file: !9465, line: 625, baseType: !2752, size: 704, offset: 8704)
!9755 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !9464, file: !9465, line: 627, baseType: !954, size: 192, offset: 9408)
!9756 = !DIDerivedType(tag: DW_TAG_member, name: "sfp_bus_attached", scope: !9464, file: !9465, line: 630, baseType: !540, size: 8, offset: 9600)
!9757 = !DIDerivedType(tag: DW_TAG_member, name: "sfp_bus", scope: !9464, file: !9465, line: 631, baseType: !9758, size: 64, offset: 9664)
!9758 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9759, size: 64)
!9759 = !DICompositeType(tag: DW_TAG_structure_type, name: "sfp_bus", file: !36, line: 60, flags: DIFlagFwdDecl)
!9760 = !DIDerivedType(tag: DW_TAG_member, name: "phylink", scope: !9464, file: !9465, line: 632, baseType: !9761, size: 64, offset: 9728)
!9761 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9762, size: 64)
!9762 = !DICompositeType(tag: DW_TAG_structure_type, name: "phylink", file: !9465, line: 237, flags: DIFlagFwdDecl)
!9763 = !DIDerivedType(tag: DW_TAG_member, name: "attached_dev", scope: !9464, file: !9465, line: 633, baseType: !295, size: 64, offset: 9792)
!9764 = !DIDerivedType(tag: DW_TAG_member, name: "mii_ts", scope: !9464, file: !9465, line: 634, baseType: !9765, size: 64, offset: 9856)
!9765 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9766, size: 64)
!9766 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mii_timestamper", file: !9767, line: 46, size: 384, elements: !9768)
!9767 = !DIFile(filename: "./include/linux/mii_timestamper.h", directory: "/home/lizy2001/genbc/linux")
!9768 = !{!9769, !9773, !9777, !9781, !9785, !9789}
!9769 = !DIDerivedType(tag: DW_TAG_member, name: "rxtstamp", scope: !9766, file: !9767, line: 47, baseType: !9770, size: 64)
!9770 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9771, size: 64)
!9771 = !DISubroutineType(types: !9772)
!9772 = !{!540, !9765, !420, !37}
!9773 = !DIDerivedType(tag: DW_TAG_member, name: "txtstamp", scope: !9766, file: !9767, line: 50, baseType: !9774, size: 64, offset: 64)
!9774 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9775, size: 64)
!9775 = !DISubroutineType(types: !9776)
!9776 = !{null, !9765, !420, !37}
!9777 = !DIDerivedType(tag: DW_TAG_member, name: "hwtstamp", scope: !9766, file: !9767, line: 53, baseType: !9778, size: 64, offset: 128)
!9778 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9779, size: 64)
!9779 = !DISubroutineType(types: !9780)
!9780 = !{!37, !9765, !7771}
!9781 = !DIDerivedType(tag: DW_TAG_member, name: "link_state", scope: !9766, file: !9767, line: 56, baseType: !9782, size: 64, offset: 192)
!9782 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9783, size: 64)
!9783 = !DISubroutineType(types: !9784)
!9784 = !{null, !9765, !9463}
!9785 = !DIDerivedType(tag: DW_TAG_member, name: "ts_info", scope: !9766, file: !9767, line: 59, baseType: !9786, size: 64, offset: 256)
!9786 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9787, size: 64)
!9787 = !DISubroutineType(types: !9788)
!9788 = !{!37, !9765, !8666}
!9789 = !DIDerivedType(tag: DW_TAG_member, name: "device", scope: !9766, file: !9767, line: 62, baseType: !4172, size: 64, offset: 320)
!9790 = !DIDerivedType(tag: DW_TAG_member, name: "mdix", scope: !9464, file: !9465, line: 636, baseType: !1397, size: 8, offset: 9920)
!9791 = !DIDerivedType(tag: DW_TAG_member, name: "mdix_ctrl", scope: !9464, file: !9465, line: 637, baseType: !1397, size: 8, offset: 9928)
!9792 = !DIDerivedType(tag: DW_TAG_member, name: "phy_link_change", scope: !9464, file: !9465, line: 639, baseType: !9793, size: 64, offset: 9984)
!9793 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9794, size: 64)
!9794 = !DISubroutineType(types: !9795)
!9795 = !{null, !9463, !540}
!9796 = !DIDerivedType(tag: DW_TAG_member, name: "adjust_link", scope: !9464, file: !9465, line: 640, baseType: !410, size: 64, offset: 10048)
!9797 = !DIDerivedType(tag: DW_TAG_member, name: "sfp_bus", scope: !269, file: !36, line: 2150, baseType: !9758, size: 64, offset: 14912)
!9798 = !DIDerivedType(tag: DW_TAG_member, name: "qdisc_tx_busylock", scope: !269, file: !36, line: 2151, baseType: !9799, size: 64, offset: 14976)
!9799 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !861, size: 64)
!9800 = !DIDerivedType(tag: DW_TAG_member, name: "qdisc_running_key", scope: !269, file: !36, line: 2152, baseType: !9799, size: 64, offset: 15040)
!9801 = !DIDerivedType(tag: DW_TAG_member, name: "proto_down", scope: !269, file: !36, line: 2153, baseType: !540, size: 8, offset: 15104)
!9802 = !DIDerivedType(tag: DW_TAG_member, name: "wol_enabled", scope: !269, file: !36, line: 2154, baseType: !7, size: 1, offset: 15112, flags: DIFlagBitField, extraData: i64 15112)
!9803 = !DIDerivedType(tag: DW_TAG_member, name: "net_notifier_list", scope: !269, file: !36, line: 2156, baseType: !289, size: 128, offset: 15168)
!9804 = !DIDerivedType(tag: DW_TAG_member, name: "udp_tunnel_nic_info", scope: !269, file: !36, line: 2162, baseType: !9805, size: 64, offset: 15296)
!9805 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9806, size: 64)
!9806 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !9807)
!9807 = !DICompositeType(tag: DW_TAG_structure_type, name: "udp_tunnel_nic_info", file: !36, line: 68, flags: DIFlagFwdDecl)
!9808 = !DIDerivedType(tag: DW_TAG_member, name: "udp_tunnel_nic", scope: !269, file: !36, line: 2163, baseType: !9809, size: 64, offset: 15360)
!9809 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9810, size: 64)
!9810 = !DICompositeType(tag: DW_TAG_structure_type, name: "udp_tunnel_nic", file: !36, line: 69, flags: DIFlagFwdDecl)
!9811 = !DIDerivedType(tag: DW_TAG_member, name: "xdp_state", scope: !269, file: !36, line: 2166, baseType: !9812, size: 384, offset: 15424)
!9812 = !DICompositeType(tag: DW_TAG_array_type, baseType: !9813, size: 384, elements: !867)
!9813 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_xdp_entity", file: !36, line: 889, size: 128, elements: !9814)
!9814 = !{!9815, !9816}
!9815 = !DIDerivedType(tag: DW_TAG_member, name: "prog", scope: !9813, file: !36, line: 890, baseType: !2909, size: 64)
!9816 = !DIDerivedType(tag: DW_TAG_member, name: "link", scope: !9813, file: !36, line: 891, baseType: !9817, size: 64, offset: 64)
!9817 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9818, size: 64)
!9818 = !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_xdp_link", file: !36, line: 880, flags: DIFlagFwdDecl)
!9819 = !{!9820, !9821, !9822, !9823, !9824, !9825}
!9820 = !DIEnumerator(name: "NETREG_UNINITIALIZED", value: 0, isUnsigned: true)
!9821 = !DIEnumerator(name: "NETREG_REGISTERED", value: 1, isUnsigned: true)
!9822 = !DIEnumerator(name: "NETREG_UNREGISTERING", value: 2, isUnsigned: true)
!9823 = !DIEnumerator(name: "NETREG_UNREGISTERED", value: 3, isUnsigned: true)
!9824 = !DIEnumerator(name: "NETREG_RELEASED", value: 4, isUnsigned: true)
!9825 = !DIEnumerator(name: "NETREG_DUMMY", value: 5, isUnsigned: true)
!9826 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "phylink_op_type", file: !9827, line: 55, baseType: !7, size: 32, elements: !9828)
!9827 = !DIFile(filename: "./include/linux/phylink.h", directory: "/home/lizy2001/genbc/linux")
!9828 = !{!9829, !9830}
!9829 = !DIEnumerator(name: "PHYLINK_NETDEV", value: 0, isUnsigned: true)
!9830 = !DIEnumerator(name: "PHYLINK_DEV", value: 1, isUnsigned: true)
!9831 = !DICompositeType(tag: DW_TAG_enumeration_type, scope: !9833, file: !9832, line: 17, baseType: !7, size: 32, elements: !9869)
!9832 = !DIFile(filename: "./include/linux/ptp_clock_kernel.h", directory: "/home/lizy2001/genbc/linux")
!9833 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ptp_clock_request", file: !9832, line: 16, size: 512, elements: !9834)
!9834 = !{!9835, !9836}
!9835 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !9833, file: !9832, line: 21, baseType: !9831, size: 32)
!9836 = !DIDerivedType(tag: DW_TAG_member, scope: !9833, file: !9832, line: 22, baseType: !9837, size: 448, offset: 64)
!9837 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !9833, file: !9832, line: 22, size: 448, elements: !9838)
!9838 = !{!9839, !9847}
!9839 = !DIDerivedType(tag: DW_TAG_member, name: "extts", scope: !9837, file: !9832, line: 23, baseType: !9840, size: 128)
!9840 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ptp_extts_request", file: !9841, line: 101, size: 128, elements: !9842)
!9841 = !DIFile(filename: "./include/uapi/linux/ptp_clock.h", directory: "/home/lizy2001/genbc/linux")
!9842 = !{!9843, !9844, !9845}
!9843 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !9840, file: !9841, line: 102, baseType: !7, size: 32)
!9844 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !9840, file: !9841, line: 103, baseType: !7, size: 32, offset: 32)
!9845 = !DIDerivedType(tag: DW_TAG_member, name: "rsv", scope: !9840, file: !9841, line: 104, baseType: !9846, size: 64, offset: 64)
!9846 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7, size: 64, elements: !478)
!9847 = !DIDerivedType(tag: DW_TAG_member, name: "perout", scope: !9837, file: !9832, line: 24, baseType: !9848, size: 448)
!9848 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ptp_perout_request", file: !9841, line: 107, size: 448, elements: !9849)
!9849 = !{!9850, !9860, !9861, !9862, !9863}
!9850 = !DIDerivedType(tag: DW_TAG_member, scope: !9848, file: !9841, line: 108, baseType: !9851, size: 128)
!9851 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !9848, file: !9841, line: 108, size: 128, elements: !9852)
!9852 = !{!9853, !9859}
!9853 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !9851, file: !9841, line: 113, baseType: !9854, size: 128)
!9854 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ptp_clock_time", file: !9841, line: 81, size: 128, elements: !9855)
!9855 = !{!9856, !9857, !9858}
!9856 = !DIDerivedType(tag: DW_TAG_member, name: "sec", scope: !9854, file: !9841, line: 82, baseType: !383, size: 64)
!9857 = !DIDerivedType(tag: DW_TAG_member, name: "nsec", scope: !9854, file: !9841, line: 83, baseType: !468, size: 32, offset: 64)
!9858 = !DIDerivedType(tag: DW_TAG_member, name: "reserved", scope: !9854, file: !9841, line: 84, baseType: !468, size: 32, offset: 96)
!9859 = !DIDerivedType(tag: DW_TAG_member, name: "phase", scope: !9851, file: !9841, line: 120, baseType: !9854, size: 128)
!9860 = !DIDerivedType(tag: DW_TAG_member, name: "period", scope: !9848, file: !9841, line: 122, baseType: !9854, size: 128, offset: 128)
!9861 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !9848, file: !9841, line: 123, baseType: !7, size: 32, offset: 256)
!9862 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !9848, file: !9841, line: 124, baseType: !7, size: 32, offset: 288)
!9863 = !DIDerivedType(tag: DW_TAG_member, scope: !9848, file: !9841, line: 125, baseType: !9864, size: 128, offset: 320)
!9864 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !9848, file: !9841, line: 125, size: 128, elements: !9865)
!9865 = !{!9866, !9867}
!9866 = !DIDerivedType(tag: DW_TAG_member, name: "on", scope: !9864, file: !9841, line: 131, baseType: !9854, size: 128)
!9867 = !DIDerivedType(tag: DW_TAG_member, name: "rsv", scope: !9864, file: !9841, line: 133, baseType: !9868, size: 128)
!9868 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7, size: 128, elements: !1202)
!9869 = !{!9870, !9871, !9872}
!9870 = !DIEnumerator(name: "PTP_CLK_REQ_EXTTS", value: 0, isUnsigned: true)
!9871 = !DIEnumerator(name: "PTP_CLK_REQ_PEROUT", value: 1, isUnsigned: true)
!9872 = !DIEnumerator(name: "PTP_CLK_REQ_PPS", value: 2, isUnsigned: true)
!9873 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "ptp_pin_function", file: !9841, line: 167, baseType: !7, size: 32, elements: !9874)
!9874 = !{!9875, !9876, !9877, !9878}
!9875 = !DIEnumerator(name: "PTP_PF_NONE", value: 0, isUnsigned: true)
!9876 = !DIEnumerator(name: "PTP_PF_EXTTS", value: 1, isUnsigned: true)
!9877 = !DIEnumerator(name: "PTP_PF_PEROUT", value: 2, isUnsigned: true)
!9878 = !DIEnumerator(name: "PTP_PF_PHYSYNC", value: 3, isUnsigned: true)
!9879 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1808, line: 30, baseType: !513, size: 64, elements: !9880)
!9880 = !{!9881, !9882, !9883, !9884, !9885, !9886, !9887, !9888, !9889, !9890, !9891, !9892, !9893, !9894, !9895, !9896, !9897, !9898, !9899, !9900, !9901, !9902, !9903, !9904, !9905, !9906, !9907, !9908, !9909}
!9881 = !DIEnumerator(name: "WORK_STRUCT_PENDING_BIT", value: 0)
!9882 = !DIEnumerator(name: "WORK_STRUCT_DELAYED_BIT", value: 1)
!9883 = !DIEnumerator(name: "WORK_STRUCT_PWQ_BIT", value: 2)
!9884 = !DIEnumerator(name: "WORK_STRUCT_LINKED_BIT", value: 3)
!9885 = !DIEnumerator(name: "WORK_STRUCT_COLOR_SHIFT", value: 4)
!9886 = !DIEnumerator(name: "WORK_STRUCT_COLOR_BITS", value: 4)
!9887 = !DIEnumerator(name: "WORK_STRUCT_PENDING", value: 1)
!9888 = !DIEnumerator(name: "WORK_STRUCT_DELAYED", value: 2)
!9889 = !DIEnumerator(name: "WORK_STRUCT_PWQ", value: 4)
!9890 = !DIEnumerator(name: "WORK_STRUCT_LINKED", value: 8)
!9891 = !DIEnumerator(name: "WORK_STRUCT_STATIC", value: 0)
!9892 = !DIEnumerator(name: "WORK_NR_COLORS", value: 15)
!9893 = !DIEnumerator(name: "WORK_NO_COLOR", value: 15)
!9894 = !DIEnumerator(name: "WORK_CPU_UNBOUND", value: 1)
!9895 = !DIEnumerator(name: "WORK_STRUCT_FLAG_BITS", value: 8)
!9896 = !DIEnumerator(name: "WORK_OFFQ_FLAG_BASE", value: 4)
!9897 = !DIEnumerator(name: "__WORK_OFFQ_CANCELING", value: 4)
!9898 = !DIEnumerator(name: "WORK_OFFQ_CANCELING", value: 16)
!9899 = !DIEnumerator(name: "WORK_OFFQ_FLAG_BITS", value: 1)
!9900 = !DIEnumerator(name: "WORK_OFFQ_POOL_SHIFT", value: 5)
!9901 = !DIEnumerator(name: "WORK_OFFQ_LEFT", value: 59)
!9902 = !DIEnumerator(name: "WORK_OFFQ_POOL_BITS", value: 31)
!9903 = !DIEnumerator(name: "WORK_OFFQ_POOL_NONE", value: 2147483647)
!9904 = !DIEnumerator(name: "WORK_STRUCT_FLAG_MASK", value: 255)
!9905 = !DIEnumerator(name: "WORK_STRUCT_WQ_DATA_MASK", value: -256)
!9906 = !DIEnumerator(name: "WORK_STRUCT_NO_POOL", value: 68719476704)
!9907 = !DIEnumerator(name: "WORK_BUSY_PENDING", value: 1)
!9908 = !DIEnumerator(name: "WORK_BUSY_RUNNING", value: 2)
!9909 = !DIEnumerator(name: "WORKER_DESC_LEN", value: 24)
!9910 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !335, line: 14, baseType: !7, size: 32, elements: !9911)
!9911 = !{!9912, !9913, !9914, !9915, !9916, !9917, !9918, !9919, !9920, !9921, !9922, !9923, !9924, !9925, !9926, !9927, !9928, !9929, !9930, !9931, !9932, !9933, !9934, !9935, !9936, !9937, !9938, !9939, !9940, !9941, !9942, !9943, !9944, !9945, !9946, !9947, !9948, !9949, !9950, !9951, !9952, !9953, !9954, !9955, !9956, !9957, !9958, !9959, !9960, !9961, !9962, !9963, !9964, !9965, !9966, !9967, !9968, !9969, !9970, !9971, !9972, !9973}
!9912 = !DIEnumerator(name: "NETIF_F_SG_BIT", value: 0, isUnsigned: true)
!9913 = !DIEnumerator(name: "NETIF_F_IP_CSUM_BIT", value: 1, isUnsigned: true)
!9914 = !DIEnumerator(name: "__UNUSED_NETIF_F_1", value: 2, isUnsigned: true)
!9915 = !DIEnumerator(name: "NETIF_F_HW_CSUM_BIT", value: 3, isUnsigned: true)
!9916 = !DIEnumerator(name: "NETIF_F_IPV6_CSUM_BIT", value: 4, isUnsigned: true)
!9917 = !DIEnumerator(name: "NETIF_F_HIGHDMA_BIT", value: 5, isUnsigned: true)
!9918 = !DIEnumerator(name: "NETIF_F_FRAGLIST_BIT", value: 6, isUnsigned: true)
!9919 = !DIEnumerator(name: "NETIF_F_HW_VLAN_CTAG_TX_BIT", value: 7, isUnsigned: true)
!9920 = !DIEnumerator(name: "NETIF_F_HW_VLAN_CTAG_RX_BIT", value: 8, isUnsigned: true)
!9921 = !DIEnumerator(name: "NETIF_F_HW_VLAN_CTAG_FILTER_BIT", value: 9, isUnsigned: true)
!9922 = !DIEnumerator(name: "NETIF_F_VLAN_CHALLENGED_BIT", value: 10, isUnsigned: true)
!9923 = !DIEnumerator(name: "NETIF_F_GSO_BIT", value: 11, isUnsigned: true)
!9924 = !DIEnumerator(name: "NETIF_F_LLTX_BIT", value: 12, isUnsigned: true)
!9925 = !DIEnumerator(name: "NETIF_F_NETNS_LOCAL_BIT", value: 13, isUnsigned: true)
!9926 = !DIEnumerator(name: "NETIF_F_GRO_BIT", value: 14, isUnsigned: true)
!9927 = !DIEnumerator(name: "NETIF_F_LRO_BIT", value: 15, isUnsigned: true)
!9928 = !DIEnumerator(name: "NETIF_F_GSO_SHIFT", value: 16, isUnsigned: true)
!9929 = !DIEnumerator(name: "NETIF_F_TSO_BIT", value: 16, isUnsigned: true)
!9930 = !DIEnumerator(name: "NETIF_F_GSO_ROBUST_BIT", value: 17, isUnsigned: true)
!9931 = !DIEnumerator(name: "NETIF_F_TSO_ECN_BIT", value: 18, isUnsigned: true)
!9932 = !DIEnumerator(name: "NETIF_F_TSO_MANGLEID_BIT", value: 19, isUnsigned: true)
!9933 = !DIEnumerator(name: "NETIF_F_TSO6_BIT", value: 20, isUnsigned: true)
!9934 = !DIEnumerator(name: "NETIF_F_FSO_BIT", value: 21, isUnsigned: true)
!9935 = !DIEnumerator(name: "NETIF_F_GSO_GRE_BIT", value: 22, isUnsigned: true)
!9936 = !DIEnumerator(name: "NETIF_F_GSO_GRE_CSUM_BIT", value: 23, isUnsigned: true)
!9937 = !DIEnumerator(name: "NETIF_F_GSO_IPXIP4_BIT", value: 24, isUnsigned: true)
!9938 = !DIEnumerator(name: "NETIF_F_GSO_IPXIP6_BIT", value: 25, isUnsigned: true)
!9939 = !DIEnumerator(name: "NETIF_F_GSO_UDP_TUNNEL_BIT", value: 26, isUnsigned: true)
!9940 = !DIEnumerator(name: "NETIF_F_GSO_UDP_TUNNEL_CSUM_BIT", value: 27, isUnsigned: true)
!9941 = !DIEnumerator(name: "NETIF_F_GSO_PARTIAL_BIT", value: 28, isUnsigned: true)
!9942 = !DIEnumerator(name: "NETIF_F_GSO_TUNNEL_REMCSUM_BIT", value: 29, isUnsigned: true)
!9943 = !DIEnumerator(name: "NETIF_F_GSO_SCTP_BIT", value: 30, isUnsigned: true)
!9944 = !DIEnumerator(name: "NETIF_F_GSO_ESP_BIT", value: 31, isUnsigned: true)
!9945 = !DIEnumerator(name: "NETIF_F_GSO_UDP_BIT", value: 32, isUnsigned: true)
!9946 = !DIEnumerator(name: "NETIF_F_GSO_UDP_L4_BIT", value: 33, isUnsigned: true)
!9947 = !DIEnumerator(name: "NETIF_F_GSO_FRAGLIST_BIT", value: 34, isUnsigned: true)
!9948 = !DIEnumerator(name: "NETIF_F_GSO_LAST", value: 34, isUnsigned: true)
!9949 = !DIEnumerator(name: "NETIF_F_FCOE_CRC_BIT", value: 35, isUnsigned: true)
!9950 = !DIEnumerator(name: "NETIF_F_SCTP_CRC_BIT", value: 36, isUnsigned: true)
!9951 = !DIEnumerator(name: "NETIF_F_FCOE_MTU_BIT", value: 37, isUnsigned: true)
!9952 = !DIEnumerator(name: "NETIF_F_NTUPLE_BIT", value: 38, isUnsigned: true)
!9953 = !DIEnumerator(name: "NETIF_F_RXHASH_BIT", value: 39, isUnsigned: true)
!9954 = !DIEnumerator(name: "NETIF_F_RXCSUM_BIT", value: 40, isUnsigned: true)
!9955 = !DIEnumerator(name: "NETIF_F_NOCACHE_COPY_BIT", value: 41, isUnsigned: true)
!9956 = !DIEnumerator(name: "NETIF_F_LOOPBACK_BIT", value: 42, isUnsigned: true)
!9957 = !DIEnumerator(name: "NETIF_F_RXFCS_BIT", value: 43, isUnsigned: true)
!9958 = !DIEnumerator(name: "NETIF_F_RXALL_BIT", value: 44, isUnsigned: true)
!9959 = !DIEnumerator(name: "NETIF_F_HW_VLAN_STAG_TX_BIT", value: 45, isUnsigned: true)
!9960 = !DIEnumerator(name: "NETIF_F_HW_VLAN_STAG_RX_BIT", value: 46, isUnsigned: true)
!9961 = !DIEnumerator(name: "NETIF_F_HW_VLAN_STAG_FILTER_BIT", value: 47, isUnsigned: true)
!9962 = !DIEnumerator(name: "NETIF_F_HW_L2FW_DOFFLOAD_BIT", value: 48, isUnsigned: true)
!9963 = !DIEnumerator(name: "NETIF_F_HW_TC_BIT", value: 49, isUnsigned: true)
!9964 = !DIEnumerator(name: "NETIF_F_HW_ESP_BIT", value: 50, isUnsigned: true)
!9965 = !DIEnumerator(name: "NETIF_F_HW_ESP_TX_CSUM_BIT", value: 51, isUnsigned: true)
!9966 = !DIEnumerator(name: "NETIF_F_RX_UDP_TUNNEL_PORT_BIT", value: 52, isUnsigned: true)
!9967 = !DIEnumerator(name: "NETIF_F_HW_TLS_TX_BIT", value: 53, isUnsigned: true)
!9968 = !DIEnumerator(name: "NETIF_F_HW_TLS_RX_BIT", value: 54, isUnsigned: true)
!9969 = !DIEnumerator(name: "NETIF_F_GRO_HW_BIT", value: 55, isUnsigned: true)
!9970 = !DIEnumerator(name: "NETIF_F_HW_TLS_RECORD_BIT", value: 56, isUnsigned: true)
!9971 = !DIEnumerator(name: "NETIF_F_GRO_FRAGLIST_BIT", value: 57, isUnsigned: true)
!9972 = !DIEnumerator(name: "NETIF_F_HW_MACSEC_BIT", value: 58, isUnsigned: true)
!9973 = !DIEnumerator(name: "NETDEV_FEATURE_COUNT", value: 59, isUnsigned: true)
!9974 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !9975, line: 10, baseType: !7, size: 32, elements: !9976)
!9975 = !DIFile(filename: "./include/linux/stddef.h", directory: "/home/lizy2001/genbc/linux")
!9976 = !{!9977, !9978}
!9977 = !DIEnumerator(name: "false", value: 0, isUnsigned: true)
!9978 = !DIEnumerator(name: "true", value: 1, isUnsigned: true)
!9979 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "netdev_state_t", file: !36, line: 288, baseType: !7, size: 32, elements: !9980)
!9980 = !{!9981, !9982, !9983, !9984, !9985, !9986}
!9981 = !DIEnumerator(name: "__LINK_STATE_START", value: 0, isUnsigned: true)
!9982 = !DIEnumerator(name: "__LINK_STATE_PRESENT", value: 1, isUnsigned: true)
!9983 = !DIEnumerator(name: "__LINK_STATE_NOCARRIER", value: 2, isUnsigned: true)
!9984 = !DIEnumerator(name: "__LINK_STATE_LINKWATCH_PENDING", value: 3, isUnsigned: true)
!9985 = !DIEnumerator(name: "__LINK_STATE_DORMANT", value: 4, isUnsigned: true)
!9986 = !DIEnumerator(name: "__LINK_STATE_TESTING", value: 5, isUnsigned: true)
!9987 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !422, line: 423, baseType: !7, size: 32, elements: !9988)
!9988 = !{!9989, !9990, !9991, !9992, !9993, !9994, !9995}
!9989 = !DIEnumerator(name: "SKBTX_HW_TSTAMP", value: 1, isUnsigned: true)
!9990 = !DIEnumerator(name: "SKBTX_SW_TSTAMP", value: 2, isUnsigned: true)
!9991 = !DIEnumerator(name: "SKBTX_IN_PROGRESS", value: 4, isUnsigned: true)
!9992 = !DIEnumerator(name: "SKBTX_DEV_ZEROCOPY", value: 8, isUnsigned: true)
!9993 = !DIEnumerator(name: "SKBTX_WIFI_STATUS", value: 16, isUnsigned: true)
!9994 = !DIEnumerator(name: "SKBTX_SHARED_FRAG", value: 32, isUnsigned: true)
!9995 = !DIEnumerator(name: "SKBTX_SCHED_TSTAMP", value: 64, isUnsigned: true)
!9996 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "macb_bd_control", file: !9997, line: 1254, baseType: !7, size: 32, elements: !9998)
!9997 = !DIFile(filename: "drivers/net/ethernet/cadence/macb.h", directory: "/home/lizy2001/genbc/linux")
!9998 = !{!9999, !10000, !10001, !10002}
!9999 = !DIEnumerator(name: "TSTAMP_DISABLED", value: 0, isUnsigned: true)
!10000 = !DIEnumerator(name: "TSTAMP_FRAME_PTP_EVENT_ONLY", value: 1, isUnsigned: true)
!10001 = !DIEnumerator(name: "TSTAMP_ALL_PTP_FRAMES", value: 2, isUnsigned: true)
!10002 = !DIEnumerator(name: "TSTAMP_ALL_FRAMES", value: 3, isUnsigned: true)
!10003 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "dma_data_direction", file: !10004, line: 5, baseType: !7, size: 32, elements: !10005)
!10004 = !DIFile(filename: "./include/linux/dma-direction.h", directory: "/home/lizy2001/genbc/linux")
!10005 = !{!10006, !10007, !10008, !10009}
!10006 = !DIEnumerator(name: "DMA_BIDIRECTIONAL", value: 0, isUnsigned: true)
!10007 = !DIEnumerator(name: "DMA_TO_DEVICE", value: 1, isUnsigned: true)
!10008 = !DIEnumerator(name: "DMA_FROM_DEVICE", value: 2, isUnsigned: true)
!10009 = !DIEnumerator(name: "DMA_NONE", value: 3, isUnsigned: true)
!10010 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "skb_free_reason", file: !36, line: 3780, baseType: !7, size: 32, elements: !10011)
!10011 = !{!10012, !10013}
!10012 = !DIEnumerator(name: "SKB_REASON_CONSUMED", value: 0, isUnsigned: true)
!10013 = !DIEnumerator(name: "SKB_REASON_DROPPED", value: 1, isUnsigned: true)
!10014 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "netdev_queue_state_t", file: !36, line: 558, baseType: !7, size: 32, elements: !10015)
!10015 = !{!10016, !10017, !10018}
!10016 = !DIEnumerator(name: "__QUEUE_STATE_DRV_XOFF", value: 0, isUnsigned: true)
!10017 = !DIEnumerator(name: "__QUEUE_STATE_STACK_XOFF", value: 1, isUnsigned: true)
!10018 = !DIEnumerator(name: "__QUEUE_STATE_FROZEN", value: 2, isUnsigned: true)
!10019 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !4722, line: 651, baseType: !7, size: 32, elements: !10020)
!10020 = !{!10021, !10022}
!10021 = !DIEnumerator(name: "TASKLET_STATE_SCHED", value: 0, isUnsigned: true)
!10022 = !DIEnumerator(name: "TASKLET_STATE_RUN", value: 1, isUnsigned: true)
!10023 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "kmalloc_cache_type", file: !10024, line: 305, baseType: !7, size: 32, elements: !10025)
!10024 = !DIFile(filename: "./include/linux/slab.h", directory: "/home/lizy2001/genbc/linux")
!10025 = !{!10026, !10027, !10028, !10029}
!10026 = !DIEnumerator(name: "KMALLOC_NORMAL", value: 0, isUnsigned: true)
!10027 = !DIEnumerator(name: "KMALLOC_RECLAIM", value: 1, isUnsigned: true)
!10028 = !DIEnumerator(name: "KMALLOC_DMA", value: 2, isUnsigned: true)
!10029 = !DIEnumerator(name: "NR_KMALLOC_TYPES", value: 3, isUnsigned: true)
!10030 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !36, line: 352, baseType: !7, size: 32, elements: !10031)
!10031 = !{!10032, !10033, !10034, !10035, !10036, !10037, !10038}
!10032 = !DIEnumerator(name: "NAPI_STATE_SCHED", value: 0, isUnsigned: true)
!10033 = !DIEnumerator(name: "NAPI_STATE_MISSED", value: 1, isUnsigned: true)
!10034 = !DIEnumerator(name: "NAPI_STATE_DISABLE", value: 2, isUnsigned: true)
!10035 = !DIEnumerator(name: "NAPI_STATE_NPSVC", value: 3, isUnsigned: true)
!10036 = !DIEnumerator(name: "NAPI_STATE_LISTED", value: 4, isUnsigned: true)
!10037 = !DIEnumerator(name: "NAPI_STATE_NO_BUSY_POLL", value: 5, isUnsigned: true)
!10038 = !DIEnumerator(name: "NAPI_STATE_IN_BUSY_POLL", value: 6, isUnsigned: true)
!10039 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "net_device_flags", file: !7773, line: 82, baseType: !7, size: 32, elements: !10040)
!10040 = !{!10041, !10042, !10043, !10044, !10045, !10046, !10047, !10048, !10049, !10050, !10051, !10052, !10053, !10054, !10055, !10056, !10057, !10058, !10059}
!10041 = !DIEnumerator(name: "IFF_UP", value: 1, isUnsigned: true)
!10042 = !DIEnumerator(name: "IFF_BROADCAST", value: 2, isUnsigned: true)
!10043 = !DIEnumerator(name: "IFF_DEBUG", value: 4, isUnsigned: true)
!10044 = !DIEnumerator(name: "IFF_LOOPBACK", value: 8, isUnsigned: true)
!10045 = !DIEnumerator(name: "IFF_POINTOPOINT", value: 16, isUnsigned: true)
!10046 = !DIEnumerator(name: "IFF_NOTRAILERS", value: 32, isUnsigned: true)
!10047 = !DIEnumerator(name: "IFF_RUNNING", value: 64, isUnsigned: true)
!10048 = !DIEnumerator(name: "IFF_NOARP", value: 128, isUnsigned: true)
!10049 = !DIEnumerator(name: "IFF_PROMISC", value: 256, isUnsigned: true)
!10050 = !DIEnumerator(name: "IFF_ALLMULTI", value: 512, isUnsigned: true)
!10051 = !DIEnumerator(name: "IFF_MASTER", value: 1024, isUnsigned: true)
!10052 = !DIEnumerator(name: "IFF_SLAVE", value: 2048, isUnsigned: true)
!10053 = !DIEnumerator(name: "IFF_MULTICAST", value: 4096, isUnsigned: true)
!10054 = !DIEnumerator(name: "IFF_PORTSEL", value: 8192, isUnsigned: true)
!10055 = !DIEnumerator(name: "IFF_AUTOMEDIA", value: 16384, isUnsigned: true)
!10056 = !DIEnumerator(name: "IFF_DYNAMIC", value: 32768, isUnsigned: true)
!10057 = !DIEnumerator(name: "IFF_LOWER_UP", value: 65536, isUnsigned: true)
!10058 = !DIEnumerator(name: "IFF_DORMANT", value: 131072, isUnsigned: true)
!10059 = !DIEnumerator(name: "IFF_ECHO", value: 262144, isUnsigned: true)
!10060 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !10061, line: 28, baseType: !7, size: 32, elements: !10062)
!10061 = !DIFile(filename: "./include/uapi/linux/in.h", directory: "/home/lizy2001/genbc/linux")
!10062 = !{!10063, !10064, !10065, !10066, !10067, !10068, !10069, !10070, !10071, !10072, !10073, !10074, !10075, !10076, !10077, !10078, !10079, !10080, !10081, !10082, !10083, !10084, !10085, !10086, !10087, !10088, !10089, !10090}
!10063 = !DIEnumerator(name: "IPPROTO_IP", value: 0, isUnsigned: true)
!10064 = !DIEnumerator(name: "IPPROTO_ICMP", value: 1, isUnsigned: true)
!10065 = !DIEnumerator(name: "IPPROTO_IGMP", value: 2, isUnsigned: true)
!10066 = !DIEnumerator(name: "IPPROTO_IPIP", value: 4, isUnsigned: true)
!10067 = !DIEnumerator(name: "IPPROTO_TCP", value: 6, isUnsigned: true)
!10068 = !DIEnumerator(name: "IPPROTO_EGP", value: 8, isUnsigned: true)
!10069 = !DIEnumerator(name: "IPPROTO_PUP", value: 12, isUnsigned: true)
!10070 = !DIEnumerator(name: "IPPROTO_UDP", value: 17, isUnsigned: true)
!10071 = !DIEnumerator(name: "IPPROTO_IDP", value: 22, isUnsigned: true)
!10072 = !DIEnumerator(name: "IPPROTO_TP", value: 29, isUnsigned: true)
!10073 = !DIEnumerator(name: "IPPROTO_DCCP", value: 33, isUnsigned: true)
!10074 = !DIEnumerator(name: "IPPROTO_IPV6", value: 41, isUnsigned: true)
!10075 = !DIEnumerator(name: "IPPROTO_RSVP", value: 46, isUnsigned: true)
!10076 = !DIEnumerator(name: "IPPROTO_GRE", value: 47, isUnsigned: true)
!10077 = !DIEnumerator(name: "IPPROTO_ESP", value: 50, isUnsigned: true)
!10078 = !DIEnumerator(name: "IPPROTO_AH", value: 51, isUnsigned: true)
!10079 = !DIEnumerator(name: "IPPROTO_MTP", value: 92, isUnsigned: true)
!10080 = !DIEnumerator(name: "IPPROTO_BEETPH", value: 94, isUnsigned: true)
!10081 = !DIEnumerator(name: "IPPROTO_ENCAP", value: 98, isUnsigned: true)
!10082 = !DIEnumerator(name: "IPPROTO_PIM", value: 103, isUnsigned: true)
!10083 = !DIEnumerator(name: "IPPROTO_COMP", value: 108, isUnsigned: true)
!10084 = !DIEnumerator(name: "IPPROTO_SCTP", value: 132, isUnsigned: true)
!10085 = !DIEnumerator(name: "IPPROTO_UDPLITE", value: 136, isUnsigned: true)
!10086 = !DIEnumerator(name: "IPPROTO_MPLS", value: 137, isUnsigned: true)
!10087 = !DIEnumerator(name: "IPPROTO_ETHERNET", value: 143, isUnsigned: true)
!10088 = !DIEnumerator(name: "IPPROTO_RAW", value: 255, isUnsigned: true)
!10089 = !DIEnumerator(name: "IPPROTO_MPTCP", value: 262, isUnsigned: true)
!10090 = !DIEnumerator(name: "IPPROTO_MAX", value: 263, isUnsigned: true)
!10091 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !10092, line: 17, baseType: !7, size: 32, elements: !10093)
!10092 = !DIFile(filename: "./include/uapi/linux/net_tstamp.h", directory: "/home/lizy2001/genbc/linux")
!10093 = !{!10094, !10095, !10096, !10097, !10098, !10099, !10100, !10101, !10102, !10103, !10104, !10105, !10106, !10107, !10108, !10109, !10110}
!10094 = !DIEnumerator(name: "SOF_TIMESTAMPING_TX_HARDWARE", value: 1, isUnsigned: true)
!10095 = !DIEnumerator(name: "SOF_TIMESTAMPING_TX_SOFTWARE", value: 2, isUnsigned: true)
!10096 = !DIEnumerator(name: "SOF_TIMESTAMPING_RX_HARDWARE", value: 4, isUnsigned: true)
!10097 = !DIEnumerator(name: "SOF_TIMESTAMPING_RX_SOFTWARE", value: 8, isUnsigned: true)
!10098 = !DIEnumerator(name: "SOF_TIMESTAMPING_SOFTWARE", value: 16, isUnsigned: true)
!10099 = !DIEnumerator(name: "SOF_TIMESTAMPING_SYS_HARDWARE", value: 32, isUnsigned: true)
!10100 = !DIEnumerator(name: "SOF_TIMESTAMPING_RAW_HARDWARE", value: 64, isUnsigned: true)
!10101 = !DIEnumerator(name: "SOF_TIMESTAMPING_OPT_ID", value: 128, isUnsigned: true)
!10102 = !DIEnumerator(name: "SOF_TIMESTAMPING_TX_SCHED", value: 256, isUnsigned: true)
!10103 = !DIEnumerator(name: "SOF_TIMESTAMPING_TX_ACK", value: 512, isUnsigned: true)
!10104 = !DIEnumerator(name: "SOF_TIMESTAMPING_OPT_CMSG", value: 1024, isUnsigned: true)
!10105 = !DIEnumerator(name: "SOF_TIMESTAMPING_OPT_TSONLY", value: 2048, isUnsigned: true)
!10106 = !DIEnumerator(name: "SOF_TIMESTAMPING_OPT_STATS", value: 4096, isUnsigned: true)
!10107 = !DIEnumerator(name: "SOF_TIMESTAMPING_OPT_PKTINFO", value: 8192, isUnsigned: true)
!10108 = !DIEnumerator(name: "SOF_TIMESTAMPING_OPT_TX_SWHW", value: 16384, isUnsigned: true)
!10109 = !DIEnumerator(name: "SOF_TIMESTAMPING_LAST", value: 16384, isUnsigned: true)
!10110 = !DIEnumerator(name: "SOF_TIMESTAMPING_MASK", value: 32767, isUnsigned: true)
!10111 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "hwtstamp_tx_types", file: !10092, line: 69, baseType: !7, size: 32, elements: !10112)
!10112 = !{!10113, !10114, !10115, !10116, !10117}
!10113 = !DIEnumerator(name: "HWTSTAMP_TX_OFF", value: 0, isUnsigned: true)
!10114 = !DIEnumerator(name: "HWTSTAMP_TX_ON", value: 1, isUnsigned: true)
!10115 = !DIEnumerator(name: "HWTSTAMP_TX_ONESTEP_SYNC", value: 2, isUnsigned: true)
!10116 = !DIEnumerator(name: "HWTSTAMP_TX_ONESTEP_P2P", value: 3, isUnsigned: true)
!10117 = !DIEnumerator(name: "__HWTSTAMP_TX_CNT", value: 4, isUnsigned: true)
!10118 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "hwtstamp_rx_filters", file: !10092, line: 107, baseType: !7, size: 32, elements: !10119)
!10119 = !{!10120, !10121, !10122, !10123, !10124, !10125, !10126, !10127, !10128, !10129, !10130, !10131, !10132, !10133, !10134, !10135, !10136}
!10120 = !DIEnumerator(name: "HWTSTAMP_FILTER_NONE", value: 0, isUnsigned: true)
!10121 = !DIEnumerator(name: "HWTSTAMP_FILTER_ALL", value: 1, isUnsigned: true)
!10122 = !DIEnumerator(name: "HWTSTAMP_FILTER_SOME", value: 2, isUnsigned: true)
!10123 = !DIEnumerator(name: "HWTSTAMP_FILTER_PTP_V1_L4_EVENT", value: 3, isUnsigned: true)
!10124 = !DIEnumerator(name: "HWTSTAMP_FILTER_PTP_V1_L4_SYNC", value: 4, isUnsigned: true)
!10125 = !DIEnumerator(name: "HWTSTAMP_FILTER_PTP_V1_L4_DELAY_REQ", value: 5, isUnsigned: true)
!10126 = !DIEnumerator(name: "HWTSTAMP_FILTER_PTP_V2_L4_EVENT", value: 6, isUnsigned: true)
!10127 = !DIEnumerator(name: "HWTSTAMP_FILTER_PTP_V2_L4_SYNC", value: 7, isUnsigned: true)
!10128 = !DIEnumerator(name: "HWTSTAMP_FILTER_PTP_V2_L4_DELAY_REQ", value: 8, isUnsigned: true)
!10129 = !DIEnumerator(name: "HWTSTAMP_FILTER_PTP_V2_L2_EVENT", value: 9, isUnsigned: true)
!10130 = !DIEnumerator(name: "HWTSTAMP_FILTER_PTP_V2_L2_SYNC", value: 10, isUnsigned: true)
!10131 = !DIEnumerator(name: "HWTSTAMP_FILTER_PTP_V2_L2_DELAY_REQ", value: 11, isUnsigned: true)
!10132 = !DIEnumerator(name: "HWTSTAMP_FILTER_PTP_V2_EVENT", value: 12, isUnsigned: true)
!10133 = !DIEnumerator(name: "HWTSTAMP_FILTER_PTP_V2_SYNC", value: 13, isUnsigned: true)
!10134 = !DIEnumerator(name: "HWTSTAMP_FILTER_PTP_V2_DELAY_REQ", value: 14, isUnsigned: true)
!10135 = !DIEnumerator(name: "HWTSTAMP_FILTER_NTP_ALL", value: 15, isUnsigned: true)
!10136 = !DIEnumerator(name: "__HWTSTAMP_FILTER_CNT", value: 16, isUnsigned: true)
!10137 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "ethtool_link_mode_bit_indices", file: !214, line: 1521, baseType: !7, size: 32, elements: !10138)
!10138 = !{!10139, !10140, !10141, !10142, !10143, !10144, !10145, !10146, !10147, !10148, !10149, !10150, !10151, !10152, !10153, !10154, !10155, !10156, !10157, !10158, !10159, !10160, !10161, !10162, !10163, !10164, !10165, !10166, !10167, !10168, !10169, !10170, !10171, !10172, !10173, !10174, !10175, !10176, !10177, !10178, !10179, !10180, !10181, !10182, !10183, !10184, !10185, !10186, !10187, !10188, !10189, !10190, !10191, !10192, !10193, !10194, !10195, !10196, !10197, !10198, !10199, !10200, !10201, !10202, !10203, !10204, !10205, !10206, !10207, !10208, !10209, !10210, !10211, !10212, !10213, !10214, !10215, !10216, !10217, !10218, !10219, !10220, !10221, !10222, !10223, !10224, !10225, !10226, !10227, !10228, !10229, !10230, !10231}
!10139 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_10baseT_Half_BIT", value: 0, isUnsigned: true)
!10140 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_10baseT_Full_BIT", value: 1, isUnsigned: true)
!10141 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_100baseT_Half_BIT", value: 2, isUnsigned: true)
!10142 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_100baseT_Full_BIT", value: 3, isUnsigned: true)
!10143 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_1000baseT_Half_BIT", value: 4, isUnsigned: true)
!10144 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_1000baseT_Full_BIT", value: 5, isUnsigned: true)
!10145 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_Autoneg_BIT", value: 6, isUnsigned: true)
!10146 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_TP_BIT", value: 7, isUnsigned: true)
!10147 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_AUI_BIT", value: 8, isUnsigned: true)
!10148 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_MII_BIT", value: 9, isUnsigned: true)
!10149 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_FIBRE_BIT", value: 10, isUnsigned: true)
!10150 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_BNC_BIT", value: 11, isUnsigned: true)
!10151 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_10000baseT_Full_BIT", value: 12, isUnsigned: true)
!10152 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_Pause_BIT", value: 13, isUnsigned: true)
!10153 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_Asym_Pause_BIT", value: 14, isUnsigned: true)
!10154 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_2500baseX_Full_BIT", value: 15, isUnsigned: true)
!10155 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_Backplane_BIT", value: 16, isUnsigned: true)
!10156 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_1000baseKX_Full_BIT", value: 17, isUnsigned: true)
!10157 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_10000baseKX4_Full_BIT", value: 18, isUnsigned: true)
!10158 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_10000baseKR_Full_BIT", value: 19, isUnsigned: true)
!10159 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_10000baseR_FEC_BIT", value: 20, isUnsigned: true)
!10160 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_20000baseMLD2_Full_BIT", value: 21, isUnsigned: true)
!10161 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_20000baseKR2_Full_BIT", value: 22, isUnsigned: true)
!10162 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_40000baseKR4_Full_BIT", value: 23, isUnsigned: true)
!10163 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_40000baseCR4_Full_BIT", value: 24, isUnsigned: true)
!10164 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_40000baseSR4_Full_BIT", value: 25, isUnsigned: true)
!10165 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_40000baseLR4_Full_BIT", value: 26, isUnsigned: true)
!10166 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_56000baseKR4_Full_BIT", value: 27, isUnsigned: true)
!10167 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_56000baseCR4_Full_BIT", value: 28, isUnsigned: true)
!10168 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_56000baseSR4_Full_BIT", value: 29, isUnsigned: true)
!10169 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_56000baseLR4_Full_BIT", value: 30, isUnsigned: true)
!10170 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_25000baseCR_Full_BIT", value: 31, isUnsigned: true)
!10171 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_25000baseKR_Full_BIT", value: 32, isUnsigned: true)
!10172 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_25000baseSR_Full_BIT", value: 33, isUnsigned: true)
!10173 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_50000baseCR2_Full_BIT", value: 34, isUnsigned: true)
!10174 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_50000baseKR2_Full_BIT", value: 35, isUnsigned: true)
!10175 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_100000baseKR4_Full_BIT", value: 36, isUnsigned: true)
!10176 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_100000baseSR4_Full_BIT", value: 37, isUnsigned: true)
!10177 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_100000baseCR4_Full_BIT", value: 38, isUnsigned: true)
!10178 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_100000baseLR4_ER4_Full_BIT", value: 39, isUnsigned: true)
!10179 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_50000baseSR2_Full_BIT", value: 40, isUnsigned: true)
!10180 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_1000baseX_Full_BIT", value: 41, isUnsigned: true)
!10181 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_10000baseCR_Full_BIT", value: 42, isUnsigned: true)
!10182 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_10000baseSR_Full_BIT", value: 43, isUnsigned: true)
!10183 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_10000baseLR_Full_BIT", value: 44, isUnsigned: true)
!10184 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_10000baseLRM_Full_BIT", value: 45, isUnsigned: true)
!10185 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_10000baseER_Full_BIT", value: 46, isUnsigned: true)
!10186 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_2500baseT_Full_BIT", value: 47, isUnsigned: true)
!10187 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_5000baseT_Full_BIT", value: 48, isUnsigned: true)
!10188 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_FEC_NONE_BIT", value: 49, isUnsigned: true)
!10189 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_FEC_RS_BIT", value: 50, isUnsigned: true)
!10190 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_FEC_BASER_BIT", value: 51, isUnsigned: true)
!10191 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_50000baseKR_Full_BIT", value: 52, isUnsigned: true)
!10192 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_50000baseSR_Full_BIT", value: 53, isUnsigned: true)
!10193 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_50000baseCR_Full_BIT", value: 54, isUnsigned: true)
!10194 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_50000baseLR_ER_FR_Full_BIT", value: 55, isUnsigned: true)
!10195 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_50000baseDR_Full_BIT", value: 56, isUnsigned: true)
!10196 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_100000baseKR2_Full_BIT", value: 57, isUnsigned: true)
!10197 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_100000baseSR2_Full_BIT", value: 58, isUnsigned: true)
!10198 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_100000baseCR2_Full_BIT", value: 59, isUnsigned: true)
!10199 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_100000baseLR2_ER2_FR2_Full_BIT", value: 60, isUnsigned: true)
!10200 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_100000baseDR2_Full_BIT", value: 61, isUnsigned: true)
!10201 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_200000baseKR4_Full_BIT", value: 62, isUnsigned: true)
!10202 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_200000baseSR4_Full_BIT", value: 63, isUnsigned: true)
!10203 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_200000baseLR4_ER4_FR4_Full_BIT", value: 64, isUnsigned: true)
!10204 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_200000baseDR4_Full_BIT", value: 65, isUnsigned: true)
!10205 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_200000baseCR4_Full_BIT", value: 66, isUnsigned: true)
!10206 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_100baseT1_Full_BIT", value: 67, isUnsigned: true)
!10207 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_1000baseT1_Full_BIT", value: 68, isUnsigned: true)
!10208 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_400000baseKR8_Full_BIT", value: 69, isUnsigned: true)
!10209 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_400000baseSR8_Full_BIT", value: 70, isUnsigned: true)
!10210 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_400000baseLR8_ER8_FR8_Full_BIT", value: 71, isUnsigned: true)
!10211 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_400000baseDR8_Full_BIT", value: 72, isUnsigned: true)
!10212 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_400000baseCR8_Full_BIT", value: 73, isUnsigned: true)
!10213 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_FEC_LLRS_BIT", value: 74, isUnsigned: true)
!10214 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_100000baseKR_Full_BIT", value: 75, isUnsigned: true)
!10215 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_100000baseSR_Full_BIT", value: 76, isUnsigned: true)
!10216 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_100000baseLR_ER_FR_Full_BIT", value: 77, isUnsigned: true)
!10217 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_100000baseCR_Full_BIT", value: 78, isUnsigned: true)
!10218 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_100000baseDR_Full_BIT", value: 79, isUnsigned: true)
!10219 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_200000baseKR2_Full_BIT", value: 80, isUnsigned: true)
!10220 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_200000baseSR2_Full_BIT", value: 81, isUnsigned: true)
!10221 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_200000baseLR2_ER2_FR2_Full_BIT", value: 82, isUnsigned: true)
!10222 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_200000baseDR2_Full_BIT", value: 83, isUnsigned: true)
!10223 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_200000baseCR2_Full_BIT", value: 84, isUnsigned: true)
!10224 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_400000baseKR4_Full_BIT", value: 85, isUnsigned: true)
!10225 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_400000baseSR4_Full_BIT", value: 86, isUnsigned: true)
!10226 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_400000baseLR4_ER4_FR4_Full_BIT", value: 87, isUnsigned: true)
!10227 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_400000baseDR4_Full_BIT", value: 88, isUnsigned: true)
!10228 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_400000baseCR4_Full_BIT", value: 89, isUnsigned: true)
!10229 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_100baseFX_Half_BIT", value: 90, isUnsigned: true)
!10230 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_100baseFX_Full_BIT", value: 91, isUnsigned: true)
!10231 = !DIEnumerator(name: "__ETHTOOL_LINK_MODE_MASK_NBITS", value: 92, isUnsigned: true)
!10232 = !{!852, !317, !7, !334, !10233, !570, !10234, !2427, !10679, !10702, !707, !513, !10704, !10709, !10711, !1990, !10712, !468, !1460, !10713, !476, !10714, !10715, !37, !10717, !7949, !10720, !10735, !7084, !624, !10756, !336, !10767, !10772, !577, !4627, !10774, !539, !10776, !295, !10238, !10778}
!10233 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint16_t", file: !282, line: 103, baseType: !1038)
!10234 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10235, size: 64)
!10235 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "macb_queue", file: !9997, line: 1122, size: 21440, elements: !10236)
!10236 = !{!10237, !10623, !10624, !10625, !10626, !10627, !10628, !10629, !10630, !10631, !10632, !10633, !10634, !10635, !10641, !10643, !10644, !10645, !10646, !10647, !10648, !10649, !10650, !10651, !10652, !10653, !10666, !10667, !10668, !10669}
!10237 = !DIDerivedType(tag: DW_TAG_member, name: "bp", scope: !10235, file: !9997, line: 1123, baseType: !10238, size: 64)
!10238 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10239, size: 64)
!10239 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "macb", file: !9997, line: 1169, size: 183488, elements: !10240)
!10240 = !{!10241, !10242, !10243, !10247, !10251, !10252, !10253, !10254, !10255, !10256, !10258, !10259, !10299, !10303, !10304, !10305, !10306, !10307, !10308, !10383, !10425, !10426, !10427, !10451, !10452, !10453, !10454, !10462, !10463, !10464, !10465, !10469, !10470, !10471, !10472, !10492, !10494, !10495, !10496, !10499, !10577, !10582, !10588, !10593, !10594, !10595, !10615, !10616, !10617, !10618}
!10241 = !DIDerivedType(tag: DW_TAG_member, name: "regs", scope: !10239, file: !9997, line: 1170, baseType: !570, size: 64)
!10242 = !DIDerivedType(tag: DW_TAG_member, name: "native_io", scope: !10239, file: !9997, line: 1171, baseType: !540, size: 8, offset: 64)
!10243 = !DIDerivedType(tag: DW_TAG_member, name: "macb_reg_readl", scope: !10239, file: !9997, line: 1174, baseType: !10244, size: 64, offset: 128)
!10244 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10245, size: 64)
!10245 = !DISubroutineType(types: !10246)
!10246 = !{!707, !10238, !37}
!10247 = !DIDerivedType(tag: DW_TAG_member, name: "macb_reg_writel", scope: !10239, file: !9997, line: 1175, baseType: !10248, size: 64, offset: 192)
!10248 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10249, size: 64)
!10249 = !DISubroutineType(types: !10250)
!10250 = !{null, !10238, !37, !707}
!10251 = !DIDerivedType(tag: DW_TAG_member, name: "rx_buffer_size", scope: !10239, file: !9997, line: 1177, baseType: !594, size: 64, offset: 256)
!10252 = !DIDerivedType(tag: DW_TAG_member, name: "rx_ring_size", scope: !10239, file: !9997, line: 1179, baseType: !7, size: 32, offset: 320)
!10253 = !DIDerivedType(tag: DW_TAG_member, name: "tx_ring_size", scope: !10239, file: !9997, line: 1180, baseType: !7, size: 32, offset: 352)
!10254 = !DIDerivedType(tag: DW_TAG_member, name: "num_queues", scope: !10239, file: !9997, line: 1182, baseType: !7, size: 32, offset: 384)
!10255 = !DIDerivedType(tag: DW_TAG_member, name: "queue_mask", scope: !10239, file: !9997, line: 1183, baseType: !7, size: 32, offset: 416)
!10256 = !DIDerivedType(tag: DW_TAG_member, name: "queues", scope: !10239, file: !9997, line: 1184, baseType: !10257, size: 171520, offset: 448)
!10257 = !DICompositeType(tag: DW_TAG_array_type, baseType: !10235, size: 171520, elements: !1371)
!10258 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !10239, file: !9997, line: 1186, baseType: !729, offset: 171968)
!10259 = !DIDerivedType(tag: DW_TAG_member, name: "pdev", scope: !10239, file: !9997, line: 1187, baseType: !10260, size: 64, offset: 171968)
!10260 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10261, size: 64)
!10261 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "platform_device", file: !10262, line: 22, size: 6208, elements: !10263)
!10262 = !DIFile(filename: "./include/linux/platform_device.h", directory: "/home/lizy2001/genbc/linux")
!10263 = !{!10264, !10265, !10266, !10267, !10268, !10269, !10270, !10271, !10285, !10293, !10294, !10297}
!10264 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !10261, file: !10262, line: 23, baseType: !297, size: 64)
!10265 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !10261, file: !10262, line: 24, baseType: !37, size: 32, offset: 64)
!10266 = !DIDerivedType(tag: DW_TAG_member, name: "id_auto", scope: !10261, file: !10262, line: 25, baseType: !540, size: 8, offset: 96)
!10267 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !10261, file: !10262, line: 26, baseType: !3803, size: 5568, offset: 128)
!10268 = !DIDerivedType(tag: DW_TAG_member, name: "platform_dma_mask", scope: !10261, file: !10262, line: 27, baseType: !336, size: 64, offset: 5696)
!10269 = !DIDerivedType(tag: DW_TAG_member, name: "dma_parms", scope: !10261, file: !10262, line: 28, baseType: !4919, size: 128, offset: 5760)
!10270 = !DIDerivedType(tag: DW_TAG_member, name: "num_resources", scope: !10261, file: !10262, line: 29, baseType: !707, size: 32, offset: 5888)
!10271 = !DIDerivedType(tag: DW_TAG_member, name: "resource", scope: !10261, file: !10262, line: 30, baseType: !10272, size: 64, offset: 5952)
!10272 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10273, size: 64)
!10273 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "resource", file: !10274, line: 20, size: 512, elements: !10275)
!10274 = !DIFile(filename: "./include/linux/ioport.h", directory: "/home/lizy2001/genbc/linux")
!10275 = !{!10276, !10278, !10279, !10280, !10281, !10282, !10283, !10284}
!10276 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !10273, file: !10274, line: 21, baseType: !10277, size: 64)
!10277 = !DIDerivedType(tag: DW_TAG_typedef, name: "resource_size_t", file: !282, line: 158, baseType: !5977)
!10278 = !DIDerivedType(tag: DW_TAG_member, name: "end", scope: !10273, file: !10274, line: 22, baseType: !10277, size: 64, offset: 64)
!10279 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !10273, file: !10274, line: 23, baseType: !297, size: 64, offset: 128)
!10280 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !10273, file: !10274, line: 24, baseType: !317, size: 64, offset: 192)
!10281 = !DIDerivedType(tag: DW_TAG_member, name: "desc", scope: !10273, file: !10274, line: 25, baseType: !317, size: 64, offset: 256)
!10282 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !10273, file: !10274, line: 26, baseType: !10272, size: 64, offset: 320)
!10283 = !DIDerivedType(tag: DW_TAG_member, name: "sibling", scope: !10273, file: !10274, line: 26, baseType: !10272, size: 64, offset: 384)
!10284 = !DIDerivedType(tag: DW_TAG_member, name: "child", scope: !10273, file: !10274, line: 26, baseType: !10272, size: 64, offset: 448)
!10285 = !DIDerivedType(tag: DW_TAG_member, name: "id_entry", scope: !10261, file: !10262, line: 32, baseType: !10286, size: 64, offset: 6016)
!10286 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10287, size: 64)
!10287 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !10288)
!10288 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "platform_device_id", file: !4263, line: 586, size: 256, elements: !10289)
!10289 = !{!10290, !10292}
!10290 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !10288, file: !4263, line: 587, baseType: !10291, size: 160)
!10291 = !DICompositeType(tag: DW_TAG_array_type, baseType: !273, size: 160, elements: !2498)
!10292 = !DIDerivedType(tag: DW_TAG_member, name: "driver_data", scope: !10288, file: !4263, line: 588, baseType: !4277, size: 64, offset: 192)
!10293 = !DIDerivedType(tag: DW_TAG_member, name: "driver_override", scope: !10261, file: !10262, line: 33, baseType: !577, size: 64, offset: 6080)
!10294 = !DIDerivedType(tag: DW_TAG_member, name: "mfd_cell", scope: !10261, file: !10262, line: 36, baseType: !10295, size: 64, offset: 6144)
!10295 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10296, size: 64)
!10296 = !DICompositeType(tag: DW_TAG_structure_type, name: "mfd_cell", file: !10262, line: 18, flags: DIFlagFwdDecl)
!10297 = !DIDerivedType(tag: DW_TAG_member, name: "archdata", scope: !10261, file: !10262, line: 39, baseType: !10298, offset: 6208)
!10298 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pdev_archdata", file: !4926, line: 8, elements: !743)
!10299 = !DIDerivedType(tag: DW_TAG_member, name: "pclk", scope: !10239, file: !9997, line: 1188, baseType: !10300, size: 64, offset: 172032)
!10300 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10301, size: 64)
!10301 = !DICompositeType(tag: DW_TAG_structure_type, name: "clk", file: !10302, line: 17, flags: DIFlagFwdDecl)
!10302 = !DIFile(filename: "./include/linux/clk.h", directory: "/home/lizy2001/genbc/linux")
!10303 = !DIDerivedType(tag: DW_TAG_member, name: "hclk", scope: !10239, file: !9997, line: 1189, baseType: !10300, size: 64, offset: 172096)
!10304 = !DIDerivedType(tag: DW_TAG_member, name: "tx_clk", scope: !10239, file: !9997, line: 1190, baseType: !10300, size: 64, offset: 172160)
!10305 = !DIDerivedType(tag: DW_TAG_member, name: "rx_clk", scope: !10239, file: !9997, line: 1191, baseType: !10300, size: 64, offset: 172224)
!10306 = !DIDerivedType(tag: DW_TAG_member, name: "tsu_clk", scope: !10239, file: !9997, line: 1192, baseType: !10300, size: 64, offset: 172288)
!10307 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !10239, file: !9997, line: 1193, baseType: !295, size: 64, offset: 172352)
!10308 = !DIDerivedType(tag: DW_TAG_member, name: "hw_stats", scope: !10239, file: !9997, line: 1197, baseType: !10309, size: 1440, offset: 172416)
!10309 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !10239, file: !9997, line: 1194, size: 1440, elements: !10310)
!10310 = !{!10311, !10335}
!10311 = !DIDerivedType(tag: DW_TAG_member, name: "macb", scope: !10309, file: !9997, line: 1195, baseType: !10312, size: 672)
!10312 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "macb_stats", file: !9997, line: 876, size: 672, elements: !10313)
!10313 = !{!10314, !10315, !10316, !10317, !10318, !10319, !10320, !10321, !10322, !10323, !10324, !10325, !10326, !10327, !10328, !10329, !10330, !10331, !10332, !10333, !10334}
!10314 = !DIDerivedType(tag: DW_TAG_member, name: "rx_pause_frames", scope: !10312, file: !9997, line: 877, baseType: !707, size: 32)
!10315 = !DIDerivedType(tag: DW_TAG_member, name: "tx_ok", scope: !10312, file: !9997, line: 878, baseType: !707, size: 32, offset: 32)
!10316 = !DIDerivedType(tag: DW_TAG_member, name: "tx_single_cols", scope: !10312, file: !9997, line: 879, baseType: !707, size: 32, offset: 64)
!10317 = !DIDerivedType(tag: DW_TAG_member, name: "tx_multiple_cols", scope: !10312, file: !9997, line: 880, baseType: !707, size: 32, offset: 96)
!10318 = !DIDerivedType(tag: DW_TAG_member, name: "rx_ok", scope: !10312, file: !9997, line: 881, baseType: !707, size: 32, offset: 128)
!10319 = !DIDerivedType(tag: DW_TAG_member, name: "rx_fcs_errors", scope: !10312, file: !9997, line: 882, baseType: !707, size: 32, offset: 160)
!10320 = !DIDerivedType(tag: DW_TAG_member, name: "rx_align_errors", scope: !10312, file: !9997, line: 883, baseType: !707, size: 32, offset: 192)
!10321 = !DIDerivedType(tag: DW_TAG_member, name: "tx_deferred", scope: !10312, file: !9997, line: 884, baseType: !707, size: 32, offset: 224)
!10322 = !DIDerivedType(tag: DW_TAG_member, name: "tx_late_cols", scope: !10312, file: !9997, line: 885, baseType: !707, size: 32, offset: 256)
!10323 = !DIDerivedType(tag: DW_TAG_member, name: "tx_excessive_cols", scope: !10312, file: !9997, line: 886, baseType: !707, size: 32, offset: 288)
!10324 = !DIDerivedType(tag: DW_TAG_member, name: "tx_underruns", scope: !10312, file: !9997, line: 887, baseType: !707, size: 32, offset: 320)
!10325 = !DIDerivedType(tag: DW_TAG_member, name: "tx_carrier_errors", scope: !10312, file: !9997, line: 888, baseType: !707, size: 32, offset: 352)
!10326 = !DIDerivedType(tag: DW_TAG_member, name: "rx_resource_errors", scope: !10312, file: !9997, line: 889, baseType: !707, size: 32, offset: 384)
!10327 = !DIDerivedType(tag: DW_TAG_member, name: "rx_overruns", scope: !10312, file: !9997, line: 890, baseType: !707, size: 32, offset: 416)
!10328 = !DIDerivedType(tag: DW_TAG_member, name: "rx_symbol_errors", scope: !10312, file: !9997, line: 891, baseType: !707, size: 32, offset: 448)
!10329 = !DIDerivedType(tag: DW_TAG_member, name: "rx_oversize_pkts", scope: !10312, file: !9997, line: 892, baseType: !707, size: 32, offset: 480)
!10330 = !DIDerivedType(tag: DW_TAG_member, name: "rx_jabbers", scope: !10312, file: !9997, line: 893, baseType: !707, size: 32, offset: 512)
!10331 = !DIDerivedType(tag: DW_TAG_member, name: "rx_undersize_pkts", scope: !10312, file: !9997, line: 894, baseType: !707, size: 32, offset: 544)
!10332 = !DIDerivedType(tag: DW_TAG_member, name: "sqe_test_errors", scope: !10312, file: !9997, line: 895, baseType: !707, size: 32, offset: 576)
!10333 = !DIDerivedType(tag: DW_TAG_member, name: "rx_length_mismatch", scope: !10312, file: !9997, line: 896, baseType: !707, size: 32, offset: 608)
!10334 = !DIDerivedType(tag: DW_TAG_member, name: "tx_pause_frames", scope: !10312, file: !9997, line: 897, baseType: !707, size: 32, offset: 640)
!10335 = !DIDerivedType(tag: DW_TAG_member, name: "gem", scope: !10309, file: !9997, line: 1196, baseType: !10336, size: 1440)
!10336 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gem_stats", file: !9997, line: 900, size: 1440, elements: !10337)
!10337 = !{!10338, !10339, !10340, !10341, !10342, !10343, !10344, !10345, !10346, !10347, !10348, !10349, !10350, !10351, !10352, !10353, !10354, !10355, !10356, !10357, !10358, !10359, !10360, !10361, !10362, !10363, !10364, !10365, !10366, !10367, !10368, !10369, !10370, !10371, !10372, !10373, !10374, !10375, !10376, !10377, !10378, !10379, !10380, !10381, !10382}
!10338 = !DIDerivedType(tag: DW_TAG_member, name: "tx_octets_31_0", scope: !10336, file: !9997, line: 901, baseType: !707, size: 32)
!10339 = !DIDerivedType(tag: DW_TAG_member, name: "tx_octets_47_32", scope: !10336, file: !9997, line: 902, baseType: !707, size: 32, offset: 32)
!10340 = !DIDerivedType(tag: DW_TAG_member, name: "tx_frames", scope: !10336, file: !9997, line: 903, baseType: !707, size: 32, offset: 64)
!10341 = !DIDerivedType(tag: DW_TAG_member, name: "tx_broadcast_frames", scope: !10336, file: !9997, line: 904, baseType: !707, size: 32, offset: 96)
!10342 = !DIDerivedType(tag: DW_TAG_member, name: "tx_multicast_frames", scope: !10336, file: !9997, line: 905, baseType: !707, size: 32, offset: 128)
!10343 = !DIDerivedType(tag: DW_TAG_member, name: "tx_pause_frames", scope: !10336, file: !9997, line: 906, baseType: !707, size: 32, offset: 160)
!10344 = !DIDerivedType(tag: DW_TAG_member, name: "tx_64_byte_frames", scope: !10336, file: !9997, line: 907, baseType: !707, size: 32, offset: 192)
!10345 = !DIDerivedType(tag: DW_TAG_member, name: "tx_65_127_byte_frames", scope: !10336, file: !9997, line: 908, baseType: !707, size: 32, offset: 224)
!10346 = !DIDerivedType(tag: DW_TAG_member, name: "tx_128_255_byte_frames", scope: !10336, file: !9997, line: 909, baseType: !707, size: 32, offset: 256)
!10347 = !DIDerivedType(tag: DW_TAG_member, name: "tx_256_511_byte_frames", scope: !10336, file: !9997, line: 910, baseType: !707, size: 32, offset: 288)
!10348 = !DIDerivedType(tag: DW_TAG_member, name: "tx_512_1023_byte_frames", scope: !10336, file: !9997, line: 911, baseType: !707, size: 32, offset: 320)
!10349 = !DIDerivedType(tag: DW_TAG_member, name: "tx_1024_1518_byte_frames", scope: !10336, file: !9997, line: 912, baseType: !707, size: 32, offset: 352)
!10350 = !DIDerivedType(tag: DW_TAG_member, name: "tx_greater_than_1518_byte_frames", scope: !10336, file: !9997, line: 913, baseType: !707, size: 32, offset: 384)
!10351 = !DIDerivedType(tag: DW_TAG_member, name: "tx_underrun", scope: !10336, file: !9997, line: 914, baseType: !707, size: 32, offset: 416)
!10352 = !DIDerivedType(tag: DW_TAG_member, name: "tx_single_collision_frames", scope: !10336, file: !9997, line: 915, baseType: !707, size: 32, offset: 448)
!10353 = !DIDerivedType(tag: DW_TAG_member, name: "tx_multiple_collision_frames", scope: !10336, file: !9997, line: 916, baseType: !707, size: 32, offset: 480)
!10354 = !DIDerivedType(tag: DW_TAG_member, name: "tx_excessive_collisions", scope: !10336, file: !9997, line: 917, baseType: !707, size: 32, offset: 512)
!10355 = !DIDerivedType(tag: DW_TAG_member, name: "tx_late_collisions", scope: !10336, file: !9997, line: 918, baseType: !707, size: 32, offset: 544)
!10356 = !DIDerivedType(tag: DW_TAG_member, name: "tx_deferred_frames", scope: !10336, file: !9997, line: 919, baseType: !707, size: 32, offset: 576)
!10357 = !DIDerivedType(tag: DW_TAG_member, name: "tx_carrier_sense_errors", scope: !10336, file: !9997, line: 920, baseType: !707, size: 32, offset: 608)
!10358 = !DIDerivedType(tag: DW_TAG_member, name: "rx_octets_31_0", scope: !10336, file: !9997, line: 921, baseType: !707, size: 32, offset: 640)
!10359 = !DIDerivedType(tag: DW_TAG_member, name: "rx_octets_47_32", scope: !10336, file: !9997, line: 922, baseType: !707, size: 32, offset: 672)
!10360 = !DIDerivedType(tag: DW_TAG_member, name: "rx_frames", scope: !10336, file: !9997, line: 923, baseType: !707, size: 32, offset: 704)
!10361 = !DIDerivedType(tag: DW_TAG_member, name: "rx_broadcast_frames", scope: !10336, file: !9997, line: 924, baseType: !707, size: 32, offset: 736)
!10362 = !DIDerivedType(tag: DW_TAG_member, name: "rx_multicast_frames", scope: !10336, file: !9997, line: 925, baseType: !707, size: 32, offset: 768)
!10363 = !DIDerivedType(tag: DW_TAG_member, name: "rx_pause_frames", scope: !10336, file: !9997, line: 926, baseType: !707, size: 32, offset: 800)
!10364 = !DIDerivedType(tag: DW_TAG_member, name: "rx_64_byte_frames", scope: !10336, file: !9997, line: 927, baseType: !707, size: 32, offset: 832)
!10365 = !DIDerivedType(tag: DW_TAG_member, name: "rx_65_127_byte_frames", scope: !10336, file: !9997, line: 928, baseType: !707, size: 32, offset: 864)
!10366 = !DIDerivedType(tag: DW_TAG_member, name: "rx_128_255_byte_frames", scope: !10336, file: !9997, line: 929, baseType: !707, size: 32, offset: 896)
!10367 = !DIDerivedType(tag: DW_TAG_member, name: "rx_256_511_byte_frames", scope: !10336, file: !9997, line: 930, baseType: !707, size: 32, offset: 928)
!10368 = !DIDerivedType(tag: DW_TAG_member, name: "rx_512_1023_byte_frames", scope: !10336, file: !9997, line: 931, baseType: !707, size: 32, offset: 960)
!10369 = !DIDerivedType(tag: DW_TAG_member, name: "rx_1024_1518_byte_frames", scope: !10336, file: !9997, line: 932, baseType: !707, size: 32, offset: 992)
!10370 = !DIDerivedType(tag: DW_TAG_member, name: "rx_greater_than_1518_byte_frames", scope: !10336, file: !9997, line: 933, baseType: !707, size: 32, offset: 1024)
!10371 = !DIDerivedType(tag: DW_TAG_member, name: "rx_undersized_frames", scope: !10336, file: !9997, line: 934, baseType: !707, size: 32, offset: 1056)
!10372 = !DIDerivedType(tag: DW_TAG_member, name: "rx_oversize_frames", scope: !10336, file: !9997, line: 935, baseType: !707, size: 32, offset: 1088)
!10373 = !DIDerivedType(tag: DW_TAG_member, name: "rx_jabbers", scope: !10336, file: !9997, line: 936, baseType: !707, size: 32, offset: 1120)
!10374 = !DIDerivedType(tag: DW_TAG_member, name: "rx_frame_check_sequence_errors", scope: !10336, file: !9997, line: 937, baseType: !707, size: 32, offset: 1152)
!10375 = !DIDerivedType(tag: DW_TAG_member, name: "rx_length_field_frame_errors", scope: !10336, file: !9997, line: 938, baseType: !707, size: 32, offset: 1184)
!10376 = !DIDerivedType(tag: DW_TAG_member, name: "rx_symbol_errors", scope: !10336, file: !9997, line: 939, baseType: !707, size: 32, offset: 1216)
!10377 = !DIDerivedType(tag: DW_TAG_member, name: "rx_alignment_errors", scope: !10336, file: !9997, line: 940, baseType: !707, size: 32, offset: 1248)
!10378 = !DIDerivedType(tag: DW_TAG_member, name: "rx_resource_errors", scope: !10336, file: !9997, line: 941, baseType: !707, size: 32, offset: 1280)
!10379 = !DIDerivedType(tag: DW_TAG_member, name: "rx_overruns", scope: !10336, file: !9997, line: 942, baseType: !707, size: 32, offset: 1312)
!10380 = !DIDerivedType(tag: DW_TAG_member, name: "rx_ip_header_checksum_errors", scope: !10336, file: !9997, line: 943, baseType: !707, size: 32, offset: 1344)
!10381 = !DIDerivedType(tag: DW_TAG_member, name: "rx_tcp_checksum_errors", scope: !10336, file: !9997, line: 944, baseType: !707, size: 32, offset: 1376)
!10382 = !DIDerivedType(tag: DW_TAG_member, name: "rx_udp_checksum_errors", scope: !10336, file: !9997, line: 945, baseType: !707, size: 32, offset: 1408)
!10383 = !DIDerivedType(tag: DW_TAG_member, name: "macbgem_ops", scope: !10239, file: !9997, line: 1199, baseType: !10384, size: 256, offset: 173888)
!10384 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "macb_or_gem_ops", file: !9997, line: 1080, size: 256, elements: !10385)
!10385 = !{!10386, !10390, !10394, !10395}
!10386 = !DIDerivedType(tag: DW_TAG_member, name: "mog_alloc_rx_buffers", scope: !10384, file: !9997, line: 1081, baseType: !10387, size: 64)
!10387 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10388, size: 64)
!10388 = !DISubroutineType(types: !10389)
!10389 = !{!37, !10238}
!10390 = !DIDerivedType(tag: DW_TAG_member, name: "mog_free_rx_buffers", scope: !10384, file: !9997, line: 1082, baseType: !10391, size: 64, offset: 64)
!10391 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10392, size: 64)
!10392 = !DISubroutineType(types: !10393)
!10393 = !{null, !10238}
!10394 = !DIDerivedType(tag: DW_TAG_member, name: "mog_init_rings", scope: !10384, file: !9997, line: 1083, baseType: !10391, size: 64, offset: 128)
!10395 = !DIDerivedType(tag: DW_TAG_member, name: "mog_rx", scope: !10384, file: !9997, line: 1084, baseType: !10396, size: 64, offset: 192)
!10396 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10397, size: 64)
!10397 = !DISubroutineType(types: !10398)
!10398 = !{!37, !10234, !10399, !37}
!10399 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10400, size: 64)
!10400 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "napi_struct", file: !36, line: 324, size: 3072, elements: !10401)
!10401 = !{!10402, !10403, !10404, !10405, !10406, !10407, !10411, !10412, !10418, !10419, !10420, !10421, !10422, !10423, !10424}
!10402 = !DIDerivedType(tag: DW_TAG_member, name: "poll_list", scope: !10400, file: !36, line: 331, baseType: !289, size: 128)
!10403 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !10400, file: !36, line: 333, baseType: !317, size: 64, offset: 128)
!10404 = !DIDerivedType(tag: DW_TAG_member, name: "weight", scope: !10400, file: !36, line: 334, baseType: !37, size: 32, offset: 192)
!10405 = !DIDerivedType(tag: DW_TAG_member, name: "defer_hard_irqs_count", scope: !10400, file: !36, line: 335, baseType: !37, size: 32, offset: 224)
!10406 = !DIDerivedType(tag: DW_TAG_member, name: "gro_bitmask", scope: !10400, file: !36, line: 336, baseType: !317, size: 64, offset: 256)
!10407 = !DIDerivedType(tag: DW_TAG_member, name: "poll", scope: !10400, file: !36, line: 337, baseType: !10408, size: 64, offset: 320)
!10408 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10409, size: 64)
!10409 = !DISubroutineType(types: !10410)
!10410 = !{!37, !10399, !37}
!10411 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !10400, file: !36, line: 341, baseType: !295, size: 64, offset: 384)
!10412 = !DIDerivedType(tag: DW_TAG_member, name: "gro_hash", scope: !10400, file: !36, line: 342, baseType: !10413, size: 1536, offset: 448)
!10413 = !DICompositeType(tag: DW_TAG_array_type, baseType: !10414, size: 1536, elements: !1371)
!10414 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gro_list", file: !36, line: 310, size: 192, elements: !10415)
!10415 = !{!10416, !10417}
!10416 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !10414, file: !36, line: 311, baseType: !289, size: 128)
!10417 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !10414, file: !36, line: 312, baseType: !37, size: 32, offset: 128)
!10418 = !DIDerivedType(tag: DW_TAG_member, name: "skb", scope: !10400, file: !36, line: 343, baseType: !420, size: 64, offset: 1984)
!10419 = !DIDerivedType(tag: DW_TAG_member, name: "rx_list", scope: !10400, file: !36, line: 344, baseType: !289, size: 128, offset: 2048)
!10420 = !DIDerivedType(tag: DW_TAG_member, name: "rx_count", scope: !10400, file: !36, line: 345, baseType: !37, size: 32, offset: 2176)
!10421 = !DIDerivedType(tag: DW_TAG_member, name: "timer", scope: !10400, file: !36, line: 346, baseType: !1333, size: 512, offset: 2240)
!10422 = !DIDerivedType(tag: DW_TAG_member, name: "dev_list", scope: !10400, file: !36, line: 347, baseType: !289, size: 128, offset: 2752)
!10423 = !DIDerivedType(tag: DW_TAG_member, name: "napi_hash_node", scope: !10400, file: !36, line: 348, baseType: !281, size: 128, offset: 2880)
!10424 = !DIDerivedType(tag: DW_TAG_member, name: "napi_id", scope: !10400, file: !36, line: 349, baseType: !7, size: 32, offset: 3008)
!10425 = !DIDerivedType(tag: DW_TAG_member, name: "mii_bus", scope: !10239, file: !9997, line: 1201, baseType: !9473, size: 64, offset: 174144)
!10426 = !DIDerivedType(tag: DW_TAG_member, name: "phylink", scope: !10239, file: !9997, line: 1202, baseType: !9761, size: 64, offset: 174208)
!10427 = !DIDerivedType(tag: DW_TAG_member, name: "phylink_config", scope: !10239, file: !9997, line: 1203, baseType: !10428, size: 192, offset: 174272)
!10428 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "phylink_config", file: !9827, line: 70, size: 192, elements: !10429)
!10429 = !{!10430, !10431, !10432, !10433, !10434}
!10430 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !10428, file: !9827, line: 71, baseType: !4172, size: 64)
!10431 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !10428, file: !9827, line: 72, baseType: !9826, size: 32, offset: 64)
!10432 = !DIDerivedType(tag: DW_TAG_member, name: "pcs_poll", scope: !10428, file: !9827, line: 73, baseType: !540, size: 8, offset: 96)
!10433 = !DIDerivedType(tag: DW_TAG_member, name: "poll_fixed_state", scope: !10428, file: !9827, line: 74, baseType: !540, size: 8, offset: 104)
!10434 = !DIDerivedType(tag: DW_TAG_member, name: "get_fixed_state", scope: !10428, file: !9827, line: 75, baseType: !10435, size: 64, offset: 128)
!10435 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10436, size: 64)
!10436 = !DISubroutineType(types: !10437)
!10437 = !{null, !10438, !10439}
!10438 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10428, size: 64)
!10439 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10440, size: 64)
!10440 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "phylink_link_state", file: !9827, line: 43, size: 448, elements: !10441)
!10441 = !{!10442, !10443, !10444, !10445, !10446, !10447, !10448, !10449, !10450}
!10442 = !DIDerivedType(tag: DW_TAG_member, name: "advertising", scope: !10440, file: !9827, line: 44, baseType: !8766, size: 128)
!10443 = !DIDerivedType(tag: DW_TAG_member, name: "lp_advertising", scope: !10440, file: !9827, line: 45, baseType: !8766, size: 128, offset: 128)
!10444 = !DIDerivedType(tag: DW_TAG_member, name: "interface", scope: !10440, file: !9827, line: 46, baseType: !9706, size: 32, offset: 256)
!10445 = !DIDerivedType(tag: DW_TAG_member, name: "speed", scope: !10440, file: !9827, line: 47, baseType: !37, size: 32, offset: 288)
!10446 = !DIDerivedType(tag: DW_TAG_member, name: "duplex", scope: !10440, file: !9827, line: 48, baseType: !37, size: 32, offset: 320)
!10447 = !DIDerivedType(tag: DW_TAG_member, name: "pause", scope: !10440, file: !9827, line: 49, baseType: !37, size: 32, offset: 352)
!10448 = !DIDerivedType(tag: DW_TAG_member, name: "link", scope: !10440, file: !9827, line: 50, baseType: !7, size: 1, offset: 384, flags: DIFlagBitField, extraData: i64 384)
!10449 = !DIDerivedType(tag: DW_TAG_member, name: "an_enabled", scope: !10440, file: !9827, line: 51, baseType: !7, size: 1, offset: 385, flags: DIFlagBitField, extraData: i64 384)
!10450 = !DIDerivedType(tag: DW_TAG_member, name: "an_complete", scope: !10440, file: !9827, line: 52, baseType: !7, size: 1, offset: 386, flags: DIFlagBitField, extraData: i64 384)
!10451 = !DIDerivedType(tag: DW_TAG_member, name: "caps", scope: !10239, file: !9997, line: 1205, baseType: !707, size: 32, offset: 174464)
!10452 = !DIDerivedType(tag: DW_TAG_member, name: "dma_burst_length", scope: !10239, file: !9997, line: 1206, baseType: !7, size: 32, offset: 174496)
!10453 = !DIDerivedType(tag: DW_TAG_member, name: "phy_interface", scope: !10239, file: !9997, line: 1208, baseType: !9706, size: 32, offset: 174528)
!10454 = !DIDerivedType(tag: DW_TAG_member, name: "rm9200_txq", scope: !10239, file: !9997, line: 1211, baseType: !10455, size: 512, offset: 174592)
!10455 = !DICompositeType(tag: DW_TAG_array_type, baseType: !10456, size: 512, elements: !478)
!10456 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "macb_tx_skb", file: !9997, line: 866, size: 256, elements: !10457)
!10457 = !{!10458, !10459, !10460, !10461}
!10458 = !DIDerivedType(tag: DW_TAG_member, name: "skb", scope: !10456, file: !9997, line: 867, baseType: !420, size: 64)
!10459 = !DIDerivedType(tag: DW_TAG_member, name: "mapping", scope: !10456, file: !9997, line: 868, baseType: !7084, size: 64, offset: 64)
!10460 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !10456, file: !9997, line: 869, baseType: !594, size: 64, offset: 128)
!10461 = !DIDerivedType(tag: DW_TAG_member, name: "mapped_as_page", scope: !10456, file: !9997, line: 870, baseType: !540, size: 8, offset: 192)
!10462 = !DIDerivedType(tag: DW_TAG_member, name: "rm9200_tx_tail", scope: !10239, file: !9997, line: 1212, baseType: !7, size: 32, offset: 175104)
!10463 = !DIDerivedType(tag: DW_TAG_member, name: "rm9200_tx_len", scope: !10239, file: !9997, line: 1213, baseType: !7, size: 32, offset: 175136)
!10464 = !DIDerivedType(tag: DW_TAG_member, name: "max_tx_length", scope: !10239, file: !9997, line: 1214, baseType: !7, size: 32, offset: 175168)
!10465 = !DIDerivedType(tag: DW_TAG_member, name: "ethtool_stats", scope: !10239, file: !9997, line: 1216, baseType: !10466, size: 5824, offset: 175232)
!10466 = !DICompositeType(tag: DW_TAG_array_type, baseType: !336, size: 5824, elements: !10467)
!10467 = !{!10468}
!10468 = !DISubrange(count: 91)
!10469 = !DIDerivedType(tag: DW_TAG_member, name: "rx_frm_len_mask", scope: !10239, file: !9997, line: 1218, baseType: !7, size: 32, offset: 181056)
!10470 = !DIDerivedType(tag: DW_TAG_member, name: "jumbo_max_len", scope: !10239, file: !9997, line: 1219, baseType: !7, size: 32, offset: 181088)
!10471 = !DIDerivedType(tag: DW_TAG_member, name: "wol", scope: !10239, file: !9997, line: 1221, baseType: !707, size: 32, offset: 181120)
!10472 = !DIDerivedType(tag: DW_TAG_member, name: "ptp_info", scope: !10239, file: !9997, line: 1223, baseType: !10473, size: 64, offset: 181184)
!10473 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10474, size: 64)
!10474 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "macb_ptp_info", file: !9997, line: 1089, size: 448, elements: !10475)
!10475 = !{!10476, !10477, !10478, !10482, !10486, !10487, !10491}
!10476 = !DIDerivedType(tag: DW_TAG_member, name: "ptp_init", scope: !10474, file: !9997, line: 1090, baseType: !410, size: 64)
!10477 = !DIDerivedType(tag: DW_TAG_member, name: "ptp_remove", scope: !10474, file: !9997, line: 1091, baseType: !410, size: 64, offset: 64)
!10478 = !DIDerivedType(tag: DW_TAG_member, name: "get_ptp_max_adj", scope: !10474, file: !9997, line: 1092, baseType: !10479, size: 64, offset: 128)
!10479 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10480, size: 64)
!10480 = !DISubroutineType(types: !10481)
!10481 = !{!1489}
!10482 = !DIDerivedType(tag: DW_TAG_member, name: "get_tsu_rate", scope: !10474, file: !9997, line: 1093, baseType: !10483, size: 64, offset: 192)
!10483 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10484, size: 64)
!10484 = !DISubroutineType(types: !10485)
!10485 = !{!7, !10238}
!10486 = !DIDerivedType(tag: DW_TAG_member, name: "get_ts_info", scope: !10474, file: !9997, line: 1094, baseType: !8663, size: 64, offset: 256)
!10487 = !DIDerivedType(tag: DW_TAG_member, name: "get_hwtst", scope: !10474, file: !9997, line: 1096, baseType: !10488, size: 64, offset: 320)
!10488 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10489, size: 64)
!10489 = !DISubroutineType(types: !10490)
!10490 = !{!37, !295, !7771}
!10491 = !DIDerivedType(tag: DW_TAG_member, name: "set_hwtst", scope: !10474, file: !9997, line: 1098, baseType: !7768, size: 64, offset: 384)
!10492 = !DIDerivedType(tag: DW_TAG_member, name: "hw_dma_cap", scope: !10239, file: !9997, line: 1225, baseType: !10493, size: 8, offset: 181248)
!10493 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint8_t", file: !282, line: 102, baseType: !1397)
!10494 = !DIDerivedType(tag: DW_TAG_member, name: "tsu_clk_lock", scope: !10239, file: !9997, line: 1227, baseType: !729, offset: 181256)
!10495 = !DIDerivedType(tag: DW_TAG_member, name: "tsu_rate", scope: !10239, file: !9997, line: 1228, baseType: !7, size: 32, offset: 181280)
!10496 = !DIDerivedType(tag: DW_TAG_member, name: "ptp_clock", scope: !10239, file: !9997, line: 1229, baseType: !10497, size: 64, offset: 181312)
!10497 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10498, size: 64)
!10498 = !DICompositeType(tag: DW_TAG_structure_type, name: "ptp_clock", file: !9832, line: 149, flags: DIFlagFwdDecl)
!10499 = !DIDerivedType(tag: DW_TAG_member, name: "ptp_clock_info", scope: !10239, file: !9997, line: 1230, baseType: !10500, size: 1152, offset: 181376)
!10500 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ptp_clock_info", file: !9832, line: 122, size: 1152, elements: !10501)
!10501 = !{!10502, !10503, !10504, !10505, !10506, !10507, !10508, !10509, !10510, !10520, !10525, !10529, !10530, !10534, !10538, !10547, !10558, !10564, !10569, !10573}
!10502 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !10500, file: !9832, line: 123, baseType: !852, size: 64)
!10503 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !10500, file: !9832, line: 124, baseType: !272, size: 128, offset: 64)
!10504 = !DIDerivedType(tag: DW_TAG_member, name: "max_adj", scope: !10500, file: !9832, line: 125, baseType: !1489, size: 32, offset: 192)
!10505 = !DIDerivedType(tag: DW_TAG_member, name: "n_alarm", scope: !10500, file: !9832, line: 126, baseType: !37, size: 32, offset: 224)
!10506 = !DIDerivedType(tag: DW_TAG_member, name: "n_ext_ts", scope: !10500, file: !9832, line: 127, baseType: !37, size: 32, offset: 256)
!10507 = !DIDerivedType(tag: DW_TAG_member, name: "n_per_out", scope: !10500, file: !9832, line: 128, baseType: !37, size: 32, offset: 288)
!10508 = !DIDerivedType(tag: DW_TAG_member, name: "n_pins", scope: !10500, file: !9832, line: 129, baseType: !37, size: 32, offset: 320)
!10509 = !DIDerivedType(tag: DW_TAG_member, name: "pps", scope: !10500, file: !9832, line: 130, baseType: !37, size: 32, offset: 352)
!10510 = !DIDerivedType(tag: DW_TAG_member, name: "pin_config", scope: !10500, file: !9832, line: 131, baseType: !10511, size: 64, offset: 384)
!10511 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10512, size: 64)
!10512 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ptp_pin_desc", file: !9841, line: 174, size: 768, elements: !10513)
!10513 = !{!10514, !10515, !10516, !10517, !10518}
!10514 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !10512, file: !9841, line: 180, baseType: !5097, size: 512)
!10515 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !10512, file: !9841, line: 184, baseType: !7, size: 32, offset: 512)
!10516 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !10512, file: !9841, line: 188, baseType: !7, size: 32, offset: 544)
!10517 = !DIDerivedType(tag: DW_TAG_member, name: "chan", scope: !10512, file: !9841, line: 194, baseType: !7, size: 32, offset: 576)
!10518 = !DIDerivedType(tag: DW_TAG_member, name: "rsv", scope: !10512, file: !9841, line: 198, baseType: !10519, size: 160, offset: 608)
!10519 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7, size: 160, elements: !1777)
!10520 = !DIDerivedType(tag: DW_TAG_member, name: "adjfine", scope: !10500, file: !9832, line: 132, baseType: !10521, size: 64, offset: 448)
!10521 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10522, size: 64)
!10522 = !DISubroutineType(types: !10523)
!10523 = !{!37, !10524, !513}
!10524 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10500, size: 64)
!10525 = !DIDerivedType(tag: DW_TAG_member, name: "adjfreq", scope: !10500, file: !9832, line: 133, baseType: !10526, size: 64, offset: 512)
!10526 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10527, size: 64)
!10527 = !DISubroutineType(types: !10528)
!10528 = !{!37, !10524, !1489}
!10529 = !DIDerivedType(tag: DW_TAG_member, name: "adjphase", scope: !10500, file: !9832, line: 134, baseType: !10526, size: 64, offset: 576)
!10530 = !DIDerivedType(tag: DW_TAG_member, name: "adjtime", scope: !10500, file: !9832, line: 135, baseType: !10531, size: 64, offset: 640)
!10531 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10532, size: 64)
!10532 = !DISubroutineType(types: !10533)
!10533 = !{!37, !10524, !382}
!10534 = !DIDerivedType(tag: DW_TAG_member, name: "gettime64", scope: !10500, file: !9832, line: 136, baseType: !10535, size: 64, offset: 704)
!10535 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10536, size: 64)
!10536 = !DISubroutineType(types: !10537)
!10537 = !{!37, !10524, !6883}
!10538 = !DIDerivedType(tag: DW_TAG_member, name: "gettimex64", scope: !10500, file: !9832, line: 137, baseType: !10539, size: 64, offset: 768)
!10539 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10540, size: 64)
!10540 = !DISubroutineType(types: !10541)
!10541 = !{!37, !10524, !6883, !10542}
!10542 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10543, size: 64)
!10543 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ptp_system_timestamp", file: !9832, line: 33, size: 256, elements: !10544)
!10544 = !{!10545, !10546}
!10545 = !DIDerivedType(tag: DW_TAG_member, name: "pre_ts", scope: !10543, file: !9832, line: 34, baseType: !6836, size: 128)
!10546 = !DIDerivedType(tag: DW_TAG_member, name: "post_ts", scope: !10543, file: !9832, line: 35, baseType: !6836, size: 128, offset: 128)
!10547 = !DIDerivedType(tag: DW_TAG_member, name: "getcrosststamp", scope: !10500, file: !9832, line: 139, baseType: !10548, size: 64, offset: 832)
!10548 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10549, size: 64)
!10549 = !DISubroutineType(types: !10550)
!10550 = !{!37, !10524, !10551}
!10551 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10552, size: 64)
!10552 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "system_device_crosststamp", file: !10553, line: 261, size: 192, elements: !10554)
!10553 = !DIFile(filename: "./include/linux/timekeeping.h", directory: "/home/lizy2001/genbc/linux")
!10554 = !{!10555, !10556, !10557}
!10555 = !DIDerivedType(tag: DW_TAG_member, name: "device", scope: !10552, file: !10553, line: 262, baseType: !1341, size: 64)
!10556 = !DIDerivedType(tag: DW_TAG_member, name: "sys_realtime", scope: !10552, file: !10553, line: 263, baseType: !1341, size: 64, offset: 64)
!10557 = !DIDerivedType(tag: DW_TAG_member, name: "sys_monoraw", scope: !10552, file: !10553, line: 264, baseType: !1341, size: 64, offset: 128)
!10558 = !DIDerivedType(tag: DW_TAG_member, name: "settime64", scope: !10500, file: !9832, line: 141, baseType: !10559, size: 64, offset: 896)
!10559 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10560, size: 64)
!10560 = !DISubroutineType(types: !10561)
!10561 = !{!37, !10524, !10562}
!10562 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10563, size: 64)
!10563 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6836)
!10564 = !DIDerivedType(tag: DW_TAG_member, name: "enable", scope: !10500, file: !9832, line: 142, baseType: !10565, size: 64, offset: 960)
!10565 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10566, size: 64)
!10566 = !DISubroutineType(types: !10567)
!10567 = !{!37, !10524, !10568, !37}
!10568 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9833, size: 64)
!10569 = !DIDerivedType(tag: DW_TAG_member, name: "verify", scope: !10500, file: !9832, line: 144, baseType: !10570, size: 64, offset: 1024)
!10570 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10571, size: 64)
!10571 = !DISubroutineType(types: !10572)
!10572 = !{!37, !10524, !7, !9873, !7}
!10573 = !DIDerivedType(tag: DW_TAG_member, name: "do_aux_work", scope: !10500, file: !9832, line: 146, baseType: !10574, size: 64, offset: 1088)
!10574 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10575, size: 64)
!10575 = !DISubroutineType(types: !10576)
!10576 = !{!513, !10524}
!10577 = !DIDerivedType(tag: DW_TAG_member, name: "tsu_incr", scope: !10239, file: !9997, line: 1231, baseType: !10578, size: 64, offset: 182528)
!10578 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tsu_incr", file: !9997, line: 1117, size: 64, elements: !10579)
!10579 = !{!10580, !10581}
!10580 = !DIDerivedType(tag: DW_TAG_member, name: "sub_ns", scope: !10578, file: !9997, line: 1118, baseType: !707, size: 32)
!10581 = !DIDerivedType(tag: DW_TAG_member, name: "ns", scope: !10578, file: !9997, line: 1119, baseType: !707, size: 32, offset: 32)
!10582 = !DIDerivedType(tag: DW_TAG_member, name: "tstamp_config", scope: !10239, file: !9997, line: 1232, baseType: !10583, size: 96, offset: 182592)
!10583 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hwtstamp_config", file: !10092, line: 62, size: 96, elements: !10584)
!10584 = !{!10585, !10586, !10587}
!10585 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !10583, file: !10092, line: 63, baseType: !37, size: 32)
!10586 = !DIDerivedType(tag: DW_TAG_member, name: "tx_type", scope: !10583, file: !10092, line: 64, baseType: !37, size: 32, offset: 32)
!10587 = !DIDerivedType(tag: DW_TAG_member, name: "rx_filter", scope: !10583, file: !10092, line: 65, baseType: !37, size: 32, offset: 64)
!10588 = !DIDerivedType(tag: DW_TAG_member, name: "rx_fs_list", scope: !10239, file: !9997, line: 1235, baseType: !10589, size: 192, offset: 182720)
!10589 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_rx_fs_list", file: !9997, line: 1164, size: 192, elements: !10590)
!10590 = !{!10591, !10592}
!10591 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !10589, file: !9997, line: 1165, baseType: !289, size: 128)
!10592 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !10589, file: !9997, line: 1166, baseType: !7, size: 32, offset: 128)
!10593 = !DIDerivedType(tag: DW_TAG_member, name: "rx_fs_lock", scope: !10239, file: !9997, line: 1236, baseType: !729, offset: 182912)
!10594 = !DIDerivedType(tag: DW_TAG_member, name: "max_tuples", scope: !10239, file: !9997, line: 1237, baseType: !7, size: 32, offset: 182912)
!10595 = !DIDerivedType(tag: DW_TAG_member, name: "hresp_err_tasklet", scope: !10239, file: !9997, line: 1239, baseType: !10596, size: 320, offset: 182976)
!10596 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tasklet_struct", file: !4722, line: 609, size: 320, elements: !10597)
!10597 = !{!10598, !10600, !10601, !10602, !10603, !10614}
!10598 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !10596, file: !4722, line: 611, baseType: !10599, size: 64)
!10599 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10596, size: 64)
!10600 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !10596, file: !4722, line: 612, baseType: !317, size: 64, offset: 64)
!10601 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !10596, file: !4722, line: 613, baseType: !388, size: 32, offset: 128)
!10602 = !DIDerivedType(tag: DW_TAG_member, name: "use_callback", scope: !10596, file: !4722, line: 614, baseType: !540, size: 8, offset: 160)
!10603 = !DIDerivedType(tag: DW_TAG_member, scope: !10596, file: !4722, line: 615, baseType: !10604, size: 64, offset: 192)
!10604 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !10596, file: !4722, line: 615, size: 64, elements: !10605)
!10605 = !{!10606, !10610}
!10606 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !10604, file: !4722, line: 616, baseType: !10607, size: 64)
!10607 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10608, size: 64)
!10608 = !DISubroutineType(types: !10609)
!10609 = !{null, !317}
!10610 = !DIDerivedType(tag: DW_TAG_member, name: "callback", scope: !10604, file: !4722, line: 617, baseType: !10611, size: 64)
!10611 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10612, size: 64)
!10612 = !DISubroutineType(types: !10613)
!10613 = !{null, !10599}
!10614 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !10596, file: !4722, line: 619, baseType: !317, size: 64, offset: 256)
!10615 = !DIDerivedType(tag: DW_TAG_member, name: "rx_bd_rd_prefetch", scope: !10239, file: !9997, line: 1241, baseType: !37, size: 32, offset: 183296)
!10616 = !DIDerivedType(tag: DW_TAG_member, name: "tx_bd_rd_prefetch", scope: !10239, file: !9997, line: 1242, baseType: !37, size: 32, offset: 183328)
!10617 = !DIDerivedType(tag: DW_TAG_member, name: "rx_intr_mask", scope: !10239, file: !9997, line: 1244, baseType: !707, size: 32, offset: 183360)
!10618 = !DIDerivedType(tag: DW_TAG_member, name: "pm_data", scope: !10239, file: !9997, line: 1246, baseType: !10619, size: 64, offset: 183392)
!10619 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "macb_pm_data", file: !9997, line: 1102, size: 64, elements: !10620)
!10620 = !{!10621, !10622}
!10621 = !DIDerivedType(tag: DW_TAG_member, name: "scrt2", scope: !10619, file: !9997, line: 1103, baseType: !707, size: 32)
!10622 = !DIDerivedType(tag: DW_TAG_member, name: "usrio", scope: !10619, file: !9997, line: 1104, baseType: !707, size: 32, offset: 32)
!10623 = !DIDerivedType(tag: DW_TAG_member, name: "irq", scope: !10235, file: !9997, line: 1124, baseType: !37, size: 32, offset: 64)
!10624 = !DIDerivedType(tag: DW_TAG_member, name: "ISR", scope: !10235, file: !9997, line: 1126, baseType: !7, size: 32, offset: 96)
!10625 = !DIDerivedType(tag: DW_TAG_member, name: "IER", scope: !10235, file: !9997, line: 1127, baseType: !7, size: 32, offset: 128)
!10626 = !DIDerivedType(tag: DW_TAG_member, name: "IDR", scope: !10235, file: !9997, line: 1128, baseType: !7, size: 32, offset: 160)
!10627 = !DIDerivedType(tag: DW_TAG_member, name: "IMR", scope: !10235, file: !9997, line: 1129, baseType: !7, size: 32, offset: 192)
!10628 = !DIDerivedType(tag: DW_TAG_member, name: "TBQP", scope: !10235, file: !9997, line: 1130, baseType: !7, size: 32, offset: 224)
!10629 = !DIDerivedType(tag: DW_TAG_member, name: "TBQPH", scope: !10235, file: !9997, line: 1131, baseType: !7, size: 32, offset: 256)
!10630 = !DIDerivedType(tag: DW_TAG_member, name: "RBQS", scope: !10235, file: !9997, line: 1132, baseType: !7, size: 32, offset: 288)
!10631 = !DIDerivedType(tag: DW_TAG_member, name: "RBQP", scope: !10235, file: !9997, line: 1133, baseType: !7, size: 32, offset: 320)
!10632 = !DIDerivedType(tag: DW_TAG_member, name: "RBQPH", scope: !10235, file: !9997, line: 1134, baseType: !7, size: 32, offset: 352)
!10633 = !DIDerivedType(tag: DW_TAG_member, name: "tx_head", scope: !10235, file: !9997, line: 1136, baseType: !7, size: 32, offset: 384)
!10634 = !DIDerivedType(tag: DW_TAG_member, name: "tx_tail", scope: !10235, file: !9997, line: 1136, baseType: !7, size: 32, offset: 416)
!10635 = !DIDerivedType(tag: DW_TAG_member, name: "tx_ring", scope: !10235, file: !9997, line: 1137, baseType: !10636, size: 64, offset: 448)
!10636 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10637, size: 64)
!10637 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "macb_dma_desc", file: !9997, line: 739, size: 64, elements: !10638)
!10638 = !{!10639, !10640}
!10639 = !DIDerivedType(tag: DW_TAG_member, name: "addr", scope: !10637, file: !9997, line: 740, baseType: !707, size: 32)
!10640 = !DIDerivedType(tag: DW_TAG_member, name: "ctrl", scope: !10637, file: !9997, line: 741, baseType: !707, size: 32, offset: 32)
!10641 = !DIDerivedType(tag: DW_TAG_member, name: "tx_skb", scope: !10235, file: !9997, line: 1138, baseType: !10642, size: 64, offset: 512)
!10642 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10456, size: 64)
!10643 = !DIDerivedType(tag: DW_TAG_member, name: "tx_ring_dma", scope: !10235, file: !9997, line: 1139, baseType: !7084, size: 64, offset: 576)
!10644 = !DIDerivedType(tag: DW_TAG_member, name: "tx_error_task", scope: !10235, file: !9997, line: 1140, baseType: !1807, size: 256, offset: 640)
!10645 = !DIDerivedType(tag: DW_TAG_member, name: "rx_ring_dma", scope: !10235, file: !9997, line: 1142, baseType: !7084, size: 64, offset: 896)
!10646 = !DIDerivedType(tag: DW_TAG_member, name: "rx_buffers_dma", scope: !10235, file: !9997, line: 1143, baseType: !7084, size: 64, offset: 960)
!10647 = !DIDerivedType(tag: DW_TAG_member, name: "rx_tail", scope: !10235, file: !9997, line: 1144, baseType: !7, size: 32, offset: 1024)
!10648 = !DIDerivedType(tag: DW_TAG_member, name: "rx_prepared_head", scope: !10235, file: !9997, line: 1145, baseType: !7, size: 32, offset: 1056)
!10649 = !DIDerivedType(tag: DW_TAG_member, name: "rx_ring", scope: !10235, file: !9997, line: 1146, baseType: !10636, size: 64, offset: 1088)
!10650 = !DIDerivedType(tag: DW_TAG_member, name: "rx_skbuff", scope: !10235, file: !9997, line: 1147, baseType: !8903, size: 64, offset: 1152)
!10651 = !DIDerivedType(tag: DW_TAG_member, name: "rx_buffers", scope: !10235, file: !9997, line: 1148, baseType: !570, size: 64, offset: 1216)
!10652 = !DIDerivedType(tag: DW_TAG_member, name: "napi", scope: !10235, file: !9997, line: 1149, baseType: !10400, size: 3072, offset: 1280)
!10653 = !DIDerivedType(tag: DW_TAG_member, name: "stats", scope: !10235, file: !9997, line: 1150, baseType: !10654, size: 384, offset: 4352)
!10654 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "queue_stats", file: !9997, line: 1054, size: 384, elements: !10655)
!10655 = !{!10656, !10661, !10662, !10663, !10664, !10665}
!10656 = !DIDerivedType(tag: DW_TAG_member, scope: !10654, file: !9997, line: 1055, baseType: !10657, size: 64)
!10657 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !10654, file: !9997, line: 1055, size: 64, elements: !10658)
!10658 = !{!10659, !10660}
!10659 = !DIDerivedType(tag: DW_TAG_member, name: "first", scope: !10657, file: !9997, line: 1056, baseType: !317, size: 64)
!10660 = !DIDerivedType(tag: DW_TAG_member, name: "rx_packets", scope: !10657, file: !9997, line: 1057, baseType: !317, size: 64)
!10661 = !DIDerivedType(tag: DW_TAG_member, name: "rx_bytes", scope: !10654, file: !9997, line: 1059, baseType: !317, size: 64, offset: 64)
!10662 = !DIDerivedType(tag: DW_TAG_member, name: "rx_dropped", scope: !10654, file: !9997, line: 1060, baseType: !317, size: 64, offset: 128)
!10663 = !DIDerivedType(tag: DW_TAG_member, name: "tx_packets", scope: !10654, file: !9997, line: 1061, baseType: !317, size: 64, offset: 192)
!10664 = !DIDerivedType(tag: DW_TAG_member, name: "tx_bytes", scope: !10654, file: !9997, line: 1062, baseType: !317, size: 64, offset: 256)
!10665 = !DIDerivedType(tag: DW_TAG_member, name: "tx_dropped", scope: !10654, file: !9997, line: 1063, baseType: !317, size: 64, offset: 320)
!10666 = !DIDerivedType(tag: DW_TAG_member, name: "tx_ts_task", scope: !10235, file: !9997, line: 1153, baseType: !1807, size: 256, offset: 4736)
!10667 = !DIDerivedType(tag: DW_TAG_member, name: "tx_ts_head", scope: !10235, file: !9997, line: 1154, baseType: !7, size: 32, offset: 4992)
!10668 = !DIDerivedType(tag: DW_TAG_member, name: "tx_ts_tail", scope: !10235, file: !9997, line: 1154, baseType: !7, size: 32, offset: 5024)
!10669 = !DIDerivedType(tag: DW_TAG_member, name: "tx_timestamps", scope: !10235, file: !9997, line: 1155, baseType: !10670, size: 16384, offset: 5056)
!10670 = !DICompositeType(tag: DW_TAG_array_type, baseType: !10671, size: 16384, elements: !2991)
!10671 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gem_tx_ts", file: !9997, line: 760, size: 128, elements: !10672)
!10672 = !{!10673, !10674}
!10673 = !DIDerivedType(tag: DW_TAG_member, name: "skb", scope: !10671, file: !9997, line: 761, baseType: !420, size: 64)
!10674 = !DIDerivedType(tag: DW_TAG_member, name: "desc_ptp", scope: !10671, file: !9997, line: 762, baseType: !10675, size: 64, offset: 64)
!10675 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "macb_dma_desc_ptp", file: !9997, line: 755, size: 64, elements: !10676)
!10676 = !{!10677, !10678}
!10677 = !DIDerivedType(tag: DW_TAG_member, name: "ts_1", scope: !10675, file: !9997, line: 756, baseType: !707, size: 32)
!10678 = !DIDerivedType(tag: DW_TAG_member, name: "ts_2", scope: !10675, file: !9997, line: 757, baseType: !707, size: 32, offset: 32)
!10679 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10680, size: 64)
!10680 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "skb_shared_info", file: !422, line: 512, size: 2560, elements: !10681)
!10681 = !{!10682, !10683, !10684, !10685, !10686, !10687, !10688, !10689, !10693, !10694, !10695, !10696, !10697}
!10682 = !DIDerivedType(tag: DW_TAG_member, name: "__unused", scope: !10680, file: !422, line: 513, baseType: !1398, size: 8)
!10683 = !DIDerivedType(tag: DW_TAG_member, name: "meta_len", scope: !10680, file: !422, line: 514, baseType: !1398, size: 8, offset: 8)
!10684 = !DIDerivedType(tag: DW_TAG_member, name: "nr_frags", scope: !10680, file: !422, line: 515, baseType: !1398, size: 8, offset: 16)
!10685 = !DIDerivedType(tag: DW_TAG_member, name: "tx_flags", scope: !10680, file: !422, line: 516, baseType: !1398, size: 8, offset: 24)
!10686 = !DIDerivedType(tag: DW_TAG_member, name: "gso_size", scope: !10680, file: !422, line: 517, baseType: !477, size: 16, offset: 32)
!10687 = !DIDerivedType(tag: DW_TAG_member, name: "gso_segs", scope: !10680, file: !422, line: 519, baseType: !477, size: 16, offset: 48)
!10688 = !DIDerivedType(tag: DW_TAG_member, name: "frag_list", scope: !10680, file: !422, line: 520, baseType: !420, size: 64, offset: 64)
!10689 = !DIDerivedType(tag: DW_TAG_member, name: "hwtstamps", scope: !10680, file: !422, line: 521, baseType: !10690, size: 64, offset: 128)
!10690 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "skb_shared_hwtstamps", file: !422, line: 418, size: 64, elements: !10691)
!10691 = !{!10692}
!10692 = !DIDerivedType(tag: DW_TAG_member, name: "hwtstamp", scope: !10690, file: !422, line: 419, baseType: !1341, size: 64)
!10693 = !DIDerivedType(tag: DW_TAG_member, name: "gso_type", scope: !10680, file: !422, line: 522, baseType: !7, size: 32, offset: 192)
!10694 = !DIDerivedType(tag: DW_TAG_member, name: "tskey", scope: !10680, file: !422, line: 523, baseType: !707, size: 32, offset: 224)
!10695 = !DIDerivedType(tag: DW_TAG_member, name: "dataref", scope: !10680, file: !422, line: 528, baseType: !388, size: 32, offset: 256)
!10696 = !DIDerivedType(tag: DW_TAG_member, name: "destructor_arg", scope: !10680, file: !422, line: 532, baseType: !570, size: 64, offset: 320)
!10697 = !DIDerivedType(tag: DW_TAG_member, name: "frags", scope: !10680, file: !422, line: 535, baseType: !10698, size: 2176, offset: 384)
!10698 = !DICompositeType(tag: DW_TAG_array_type, baseType: !10699, size: 2176, elements: !10700)
!10699 = !DIDerivedType(tag: DW_TAG_typedef, name: "skb_frag_t", file: !422, line: 321, baseType: !620)
!10700 = !{!10701}
!10701 = !DISubrange(count: 17)
!10702 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10703, size: 64)
!10703 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !292)
!10704 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10705, size: 64)
!10705 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "macb_dma_desc_64", file: !9997, line: 750, size: 64, elements: !10706)
!10706 = !{!10707, !10708}
!10707 = !DIDerivedType(tag: DW_TAG_member, name: "addrh", scope: !10705, file: !9997, line: 751, baseType: !707, size: 32)
!10708 = !DIDerivedType(tag: DW_TAG_member, name: "resvd", scope: !10705, file: !9997, line: 752, baseType: !707, size: 32, offset: 32)
!10709 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10710, size: 64)
!10710 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !273)
!10711 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1268, size: 64)
!10712 = !DIDerivedType(tag: DW_TAG_typedef, name: "__le32", file: !467, line: 31, baseType: !468)
!10713 = !DIDerivedType(tag: DW_TAG_typedef, name: "__le16", file: !467, line: 29, baseType: !476)
!10714 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1038, size: 64)
!10715 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10716, size: 64)
!10716 = !DIDerivedType(tag: DW_TAG_typedef, name: "__sum16", file: !467, line: 36, baseType: !476)
!10717 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10718, size: 64)
!10718 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !10719)
!10719 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !37)
!10720 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10721, size: 64)
!10721 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "iphdr", file: !10722, line: 86, size: 160, elements: !10723)
!10722 = !DIFile(filename: "./include/uapi/linux/ip.h", directory: "/home/lizy2001/genbc/linux")
!10723 = !{!10724, !10725, !10726, !10727, !10728, !10729, !10730, !10731, !10732, !10733, !10734}
!10724 = !DIDerivedType(tag: DW_TAG_member, name: "ihl", scope: !10721, file: !10722, line: 88, baseType: !1398, size: 4, flags: DIFlagBitField, extraData: i64 0)
!10725 = !DIDerivedType(tag: DW_TAG_member, name: "version", scope: !10721, file: !10722, line: 89, baseType: !1398, size: 4, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!10726 = !DIDerivedType(tag: DW_TAG_member, name: "tos", scope: !10721, file: !10722, line: 96, baseType: !1398, size: 8, offset: 8)
!10727 = !DIDerivedType(tag: DW_TAG_member, name: "tot_len", scope: !10721, file: !10722, line: 97, baseType: !489, size: 16, offset: 16)
!10728 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !10721, file: !10722, line: 98, baseType: !489, size: 16, offset: 32)
!10729 = !DIDerivedType(tag: DW_TAG_member, name: "frag_off", scope: !10721, file: !10722, line: 99, baseType: !489, size: 16, offset: 48)
!10730 = !DIDerivedType(tag: DW_TAG_member, name: "ttl", scope: !10721, file: !10722, line: 100, baseType: !1398, size: 8, offset: 64)
!10731 = !DIDerivedType(tag: DW_TAG_member, name: "protocol", scope: !10721, file: !10722, line: 101, baseType: !1398, size: 8, offset: 72)
!10732 = !DIDerivedType(tag: DW_TAG_member, name: "check", scope: !10721, file: !10722, line: 102, baseType: !10716, size: 16, offset: 80)
!10733 = !DIDerivedType(tag: DW_TAG_member, name: "saddr", scope: !10721, file: !10722, line: 103, baseType: !466, size: 32, offset: 96)
!10734 = !DIDerivedType(tag: DW_TAG_member, name: "daddr", scope: !10721, file: !10722, line: 104, baseType: !466, size: 32, offset: 128)
!10735 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10736, size: 64)
!10736 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tcphdr", file: !10737, line: 25, size: 160, elements: !10738)
!10737 = !DIFile(filename: "./include/uapi/linux/tcp.h", directory: "/home/lizy2001/genbc/linux")
!10738 = !{!10739, !10740, !10741, !10742, !10743, !10744, !10745, !10746, !10747, !10748, !10749, !10750, !10751, !10752, !10753, !10754, !10755}
!10739 = !DIDerivedType(tag: DW_TAG_member, name: "source", scope: !10736, file: !10737, line: 26, baseType: !489, size: 16)
!10740 = !DIDerivedType(tag: DW_TAG_member, name: "dest", scope: !10736, file: !10737, line: 27, baseType: !489, size: 16, offset: 16)
!10741 = !DIDerivedType(tag: DW_TAG_member, name: "seq", scope: !10736, file: !10737, line: 28, baseType: !466, size: 32, offset: 32)
!10742 = !DIDerivedType(tag: DW_TAG_member, name: "ack_seq", scope: !10736, file: !10737, line: 29, baseType: !466, size: 32, offset: 64)
!10743 = !DIDerivedType(tag: DW_TAG_member, name: "res1", scope: !10736, file: !10737, line: 31, baseType: !476, size: 4, offset: 96, flags: DIFlagBitField, extraData: i64 96)
!10744 = !DIDerivedType(tag: DW_TAG_member, name: "doff", scope: !10736, file: !10737, line: 32, baseType: !476, size: 4, offset: 100, flags: DIFlagBitField, extraData: i64 96)
!10745 = !DIDerivedType(tag: DW_TAG_member, name: "fin", scope: !10736, file: !10737, line: 33, baseType: !476, size: 1, offset: 104, flags: DIFlagBitField, extraData: i64 96)
!10746 = !DIDerivedType(tag: DW_TAG_member, name: "syn", scope: !10736, file: !10737, line: 34, baseType: !476, size: 1, offset: 105, flags: DIFlagBitField, extraData: i64 96)
!10747 = !DIDerivedType(tag: DW_TAG_member, name: "rst", scope: !10736, file: !10737, line: 35, baseType: !476, size: 1, offset: 106, flags: DIFlagBitField, extraData: i64 96)
!10748 = !DIDerivedType(tag: DW_TAG_member, name: "psh", scope: !10736, file: !10737, line: 36, baseType: !476, size: 1, offset: 107, flags: DIFlagBitField, extraData: i64 96)
!10749 = !DIDerivedType(tag: DW_TAG_member, name: "ack", scope: !10736, file: !10737, line: 37, baseType: !476, size: 1, offset: 108, flags: DIFlagBitField, extraData: i64 96)
!10750 = !DIDerivedType(tag: DW_TAG_member, name: "urg", scope: !10736, file: !10737, line: 38, baseType: !476, size: 1, offset: 109, flags: DIFlagBitField, extraData: i64 96)
!10751 = !DIDerivedType(tag: DW_TAG_member, name: "ece", scope: !10736, file: !10737, line: 39, baseType: !476, size: 1, offset: 110, flags: DIFlagBitField, extraData: i64 96)
!10752 = !DIDerivedType(tag: DW_TAG_member, name: "cwr", scope: !10736, file: !10737, line: 40, baseType: !476, size: 1, offset: 111, flags: DIFlagBitField, extraData: i64 96)
!10753 = !DIDerivedType(tag: DW_TAG_member, name: "window", scope: !10736, file: !10737, line: 55, baseType: !489, size: 16, offset: 112)
!10754 = !DIDerivedType(tag: DW_TAG_member, name: "check", scope: !10736, file: !10737, line: 56, baseType: !10716, size: 16, offset: 128)
!10755 = !DIDerivedType(tag: DW_TAG_member, name: "urg_ptr", scope: !10736, file: !10737, line: 57, baseType: !489, size: 16, offset: 144)
!10756 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10757, size: 64)
!10757 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "netdev_hw_addr", file: !36, line: 209, size: 640, elements: !10758)
!10758 = !{!10759, !10760, !10761, !10762, !10763, !10764, !10765, !10766}
!10759 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !10757, file: !36, line: 210, baseType: !289, size: 128)
!10760 = !DIDerivedType(tag: DW_TAG_member, name: "addr", scope: !10757, file: !36, line: 211, baseType: !715, size: 256, offset: 128)
!10761 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !10757, file: !36, line: 212, baseType: !494, size: 8, offset: 384)
!10762 = !DIDerivedType(tag: DW_TAG_member, name: "global_use", scope: !10757, file: !36, line: 217, baseType: !540, size: 8, offset: 392)
!10763 = !DIDerivedType(tag: DW_TAG_member, name: "sync_cnt", scope: !10757, file: !36, line: 218, baseType: !37, size: 32, offset: 416)
!10764 = !DIDerivedType(tag: DW_TAG_member, name: "refcount", scope: !10757, file: !36, line: 219, baseType: !37, size: 32, offset: 448)
!10765 = !DIDerivedType(tag: DW_TAG_member, name: "synced", scope: !10757, file: !36, line: 220, baseType: !37, size: 32, offset: 480)
!10766 = !DIDerivedType(tag: DW_TAG_member, name: "callback_head", scope: !10757, file: !36, line: 221, baseType: !304, size: 128, align: 64, offset: 512)
!10767 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10768, size: 64)
!10768 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_rx_fs_item", file: !9997, line: 1159, size: 1472, elements: !10769)
!10769 = !{!10770, !10771}
!10770 = !DIDerivedType(tag: DW_TAG_member, name: "fs", scope: !10768, file: !9997, line: 1160, baseType: !8496, size: 1344)
!10771 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !10768, file: !9997, line: 1161, baseType: !289, size: 128, offset: 1344)
!10772 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10773, size: 64)
!10773 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !7)
!10774 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10775, size: 64)
!10775 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1038)
!10776 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10777, size: 64)
!10777 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !707)
!10778 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10779, size: 64)
!10779 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !336)
!10780 = !{!0, !10781, !10786, !10789, !10792, !10797, !10802, !10807, !10828, !10842, !10844, !10850, !10861, !10863, !10866, !10868, !10870, !10903, !10906, !10908, !10910, !10912, !10914, !10916, !10918, !10920, !10922, !10924, !10926, !10928, !10930, !11048, !11050}
!10781 = !DIGlobalVariableExpression(var: !10782, expr: !DIExpression())
!10782 = distinct !DIGlobalVariable(name: "__exitcall_macb_driver_exit", scope: !2, file: !3, line: 4869, type: !10783, isLocal: true, isDefinition: true)
!10783 = !DIDerivedType(tag: DW_TAG_typedef, name: "exitcall_t", file: !10784, line: 117, baseType: !10785)
!10784 = !DIFile(filename: "./include/linux/init.h", directory: "/home/lizy2001/genbc/linux")
!10785 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3704, size: 64)
!10786 = !DIGlobalVariableExpression(var: !10787, expr: !DIExpression())
!10787 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_file565", scope: !2, file: !3, line: 4871, type: !10788, isLocal: true, isDefinition: true, align: 8)
!10788 = !DICompositeType(tag: DW_TAG_array_type, baseType: !298, size: 352, elements: !1194)
!10789 = !DIGlobalVariableExpression(var: !10790, expr: !DIExpression())
!10790 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_license566", scope: !2, file: !3, line: 4871, type: !10791, isLocal: true, isDefinition: true, align: 8)
!10791 = !DICompositeType(tag: DW_TAG_array_type, baseType: !298, size: 136, elements: !10700)
!10792 = !DIGlobalVariableExpression(var: !10793, expr: !DIExpression())
!10793 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_description567", scope: !2, file: !3, line: 4872, type: !10794, isLocal: true, isDefinition: true, align: 8)
!10794 = !DICompositeType(tag: DW_TAG_array_type, baseType: !298, size: 400, elements: !10795)
!10795 = !{!10796}
!10796 = !DISubrange(count: 50)
!10797 = !DIGlobalVariableExpression(var: !10798, expr: !DIExpression())
!10798 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_author568", scope: !2, file: !3, line: 4873, type: !10799, isLocal: true, isDefinition: true, align: 8)
!10799 = !DICompositeType(tag: DW_TAG_array_type, baseType: !298, size: 312, elements: !10800)
!10800 = !{!10801}
!10801 = !DISubrange(count: 39)
!10802 = !DIGlobalVariableExpression(var: !10803, expr: !DIExpression())
!10803 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_alias569", scope: !2, file: !3, line: 4874, type: !10804, isLocal: true, isDefinition: true, align: 8)
!10804 = !DICompositeType(tag: DW_TAG_array_type, baseType: !298, size: 200, elements: !10805)
!10805 = !{!10806}
!10806 = !DISubrange(count: 25)
!10807 = !DIGlobalVariableExpression(var: !10808, expr: !DIExpression())
!10808 = distinct !DIGlobalVariable(name: "macb_driver", scope: !2, file: !3, line: 4859, type: !10809, isLocal: true, isDefinition: true)
!10809 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "platform_driver", file: !10262, line: 200, size: 1600, elements: !10810)
!10810 = !{!10811, !10815, !10816, !10820, !10824, !10825, !10826, !10827}
!10811 = !DIDerivedType(tag: DW_TAG_member, name: "probe", scope: !10809, file: !10262, line: 201, baseType: !10812, size: 64)
!10812 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10813, size: 64)
!10813 = !DISubroutineType(types: !10814)
!10814 = !{!37, !10260}
!10815 = !DIDerivedType(tag: DW_TAG_member, name: "remove", scope: !10809, file: !10262, line: 202, baseType: !10812, size: 64, offset: 64)
!10816 = !DIDerivedType(tag: DW_TAG_member, name: "shutdown", scope: !10809, file: !10262, line: 203, baseType: !10817, size: 64, offset: 128)
!10817 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10818, size: 64)
!10818 = !DISubroutineType(types: !10819)
!10819 = !{null, !10260}
!10820 = !DIDerivedType(tag: DW_TAG_member, name: "suspend", scope: !10809, file: !10262, line: 204, baseType: !10821, size: 64, offset: 192)
!10821 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10822, size: 64)
!10822 = !DISubroutineType(types: !10823)
!10823 = !{!37, !10260, !4288}
!10824 = !DIDerivedType(tag: DW_TAG_member, name: "resume", scope: !10809, file: !10262, line: 205, baseType: !10812, size: 64, offset: 256)
!10825 = !DIDerivedType(tag: DW_TAG_member, name: "driver", scope: !10809, file: !10262, line: 206, baseType: !4245, size: 1152, offset: 320)
!10826 = !DIDerivedType(tag: DW_TAG_member, name: "id_table", scope: !10809, file: !10262, line: 207, baseType: !10286, size: 64, offset: 1472)
!10827 = !DIDerivedType(tag: DW_TAG_member, name: "prevent_deferred_probe", scope: !10809, file: !10262, line: 208, baseType: !540, size: 8, offset: 1536)
!10828 = !DIGlobalVariableExpression(var: !10829, expr: !DIExpression())
!10829 = distinct !DIGlobalVariable(name: "default_gem_config", scope: !2, file: !3, line: 4423, type: !10830, isLocal: true, isDefinition: true)
!10830 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !10831)
!10831 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "macb_config", file: !9997, line: 1107, size: 256, elements: !10832)
!10832 = !{!10833, !10834, !10835, !10840, !10841}
!10833 = !DIDerivedType(tag: DW_TAG_member, name: "caps", scope: !10831, file: !9997, line: 1108, baseType: !707, size: 32)
!10834 = !DIDerivedType(tag: DW_TAG_member, name: "dma_burst_length", scope: !10831, file: !9997, line: 1109, baseType: !7, size: 32, offset: 32)
!10835 = !DIDerivedType(tag: DW_TAG_member, name: "clk_init", scope: !10831, file: !9997, line: 1110, baseType: !10836, size: 64, offset: 64)
!10836 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10837, size: 64)
!10837 = !DISubroutineType(types: !10838)
!10838 = !{!37, !10260, !10839, !10839, !10839, !10839, !10839}
!10839 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10300, size: 64)
!10840 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !10831, file: !9997, line: 1113, baseType: !10812, size: 64, offset: 128)
!10841 = !DIDerivedType(tag: DW_TAG_member, name: "jumbo_max_len", scope: !10831, file: !9997, line: 1114, baseType: !37, size: 32, offset: 192)
!10842 = !DIGlobalVariableExpression(var: !10843, expr: !DIExpression())
!10843 = distinct !DIGlobalVariable(name: "macb_netdev_ops", scope: !2, file: !3, line: 3493, type: !402, isLocal: true, isDefinition: true)
!10844 = !DIGlobalVariableExpression(var: !10845, expr: !DIExpression())
!10845 = distinct !DIGlobalVariable(name: "__warned", scope: !10846, file: !10847, line: 275, type: !540, isLocal: true, isDefinition: true)
!10846 = distinct !DISubprogram(name: "dma_map_single_attrs", scope: !10847, file: !10847, line: 271, type: !10848, scopeLine: 273, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!10847 = !DIFile(filename: "./include/linux/dma-mapping.h", directory: "/home/lizy2001/genbc/linux")
!10848 = !DISubroutineType(types: !10849)
!10849 = !{!7084, !4172, !570, !594, !10003, !317}
!10850 = !DIGlobalVariableExpression(var: !10851, expr: !DIExpression())
!10851 = distinct !DIGlobalVariable(name: "gem_statistics", scope: !2, file: !9997, line: 981, type: !10852, isLocal: true, isDefinition: true)
!10852 = !DICompositeType(tag: DW_TAG_array_type, baseType: !10853, size: 13760, elements: !10859)
!10853 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !10854)
!10854 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gem_statistic", file: !9997, line: 952, size: 320, elements: !10855)
!10855 = !{!10856, !10857, !10858}
!10856 = !DIDerivedType(tag: DW_TAG_member, name: "stat_string", scope: !10854, file: !9997, line: 953, baseType: !3761, size: 256)
!10857 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !10854, file: !9997, line: 954, baseType: !37, size: 32, offset: 256)
!10858 = !DIDerivedType(tag: DW_TAG_member, name: "stat_bits", scope: !10854, file: !9997, line: 955, baseType: !707, size: 32, offset: 288)
!10859 = !{!10860}
!10860 = !DISubrange(count: 43)
!10861 = !DIGlobalVariableExpression(var: !10862, expr: !DIExpression())
!10862 = distinct !DIGlobalVariable(name: "gem_ethtool_ops", scope: !2, file: !3, line: 3376, type: !8278, isLocal: true, isDefinition: true)
!10863 = !DIGlobalVariableExpression(var: !10864, expr: !DIExpression())
!10864 = distinct !DIGlobalVariable(name: "queue_statistics", scope: !2, file: !9997, line: 1066, type: !10865, isLocal: true, isDefinition: true)
!10865 = !DICompositeType(tag: DW_TAG_array_type, baseType: !10853, size: 1920, elements: !1671)
!10866 = !DIGlobalVariableExpression(var: !10867, expr: !DIExpression())
!10867 = distinct !DIGlobalVariable(name: "macb_ethtool_ops", scope: !2, file: !3, line: 3363, type: !8278, isLocal: true, isDefinition: true)
!10868 = !DIGlobalVariableExpression(var: !10869, expr: !DIExpression())
!10869 = distinct !DIGlobalVariable(name: "gem_ptp_info", scope: !2, file: !3, line: 3037, type: !10474, isLocal: true, isDefinition: true)
!10870 = !DIGlobalVariableExpression(var: !10871, expr: !DIExpression())
!10871 = distinct !DIGlobalVariable(name: "macb_phylink_ops", scope: !2, file: !3, line: 675, type: !10872, isLocal: true, isDefinition: true)
!10872 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !10873)
!10873 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "phylink_mac_ops", file: !9827, line: 92, size: 512, elements: !10874)
!10874 = !{!10875, !10879, !10880, !10884, !10890, !10891, !10895, !10899}
!10875 = !DIDerivedType(tag: DW_TAG_member, name: "validate", scope: !10873, file: !9827, line: 93, baseType: !10876, size: 64)
!10876 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10877, size: 64)
!10877 = !DISubroutineType(types: !10878)
!10878 = !{null, !10438, !2427, !10439}
!10879 = !DIDerivedType(tag: DW_TAG_member, name: "mac_pcs_get_state", scope: !10873, file: !9827, line: 96, baseType: !10435, size: 64, offset: 64)
!10880 = !DIDerivedType(tag: DW_TAG_member, name: "mac_prepare", scope: !10873, file: !9827, line: 98, baseType: !10881, size: 64, offset: 128)
!10881 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10882, size: 64)
!10882 = !DISubroutineType(types: !10883)
!10883 = !{!37, !10438, !7, !9706}
!10884 = !DIDerivedType(tag: DW_TAG_member, name: "mac_config", scope: !10873, file: !9827, line: 100, baseType: !10885, size: 64, offset: 192)
!10885 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10886, size: 64)
!10886 = !DISubroutineType(types: !10887)
!10887 = !{null, !10438, !7, !10888}
!10888 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10889, size: 64)
!10889 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !10440)
!10890 = !DIDerivedType(tag: DW_TAG_member, name: "mac_finish", scope: !10873, file: !9827, line: 102, baseType: !10881, size: 64, offset: 256)
!10891 = !DIDerivedType(tag: DW_TAG_member, name: "mac_an_restart", scope: !10873, file: !9827, line: 104, baseType: !10892, size: 64, offset: 320)
!10892 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10893, size: 64)
!10893 = !DISubroutineType(types: !10894)
!10894 = !{null, !10438}
!10895 = !DIDerivedType(tag: DW_TAG_member, name: "mac_link_down", scope: !10873, file: !9827, line: 105, baseType: !10896, size: 64, offset: 384)
!10896 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10897, size: 64)
!10897 = !DISubroutineType(types: !10898)
!10898 = !{null, !10438, !7, !9706}
!10899 = !DIDerivedType(tag: DW_TAG_member, name: "mac_link_up", scope: !10873, file: !9827, line: 107, baseType: !10900, size: 64, offset: 448)
!10900 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10901, size: 64)
!10901 = !DISubroutineType(types: !10902)
!10902 = !{null, !10438, !9463, !7, !9706, !37, !37, !540, !540}
!10903 = !DIGlobalVariableExpression(var: !10904, expr: !DIExpression())
!10904 = distinct !DIGlobalVariable(name: "macb_dt_ids", scope: !2, file: !3, line: 4401, type: !10905, isLocal: true, isDefinition: true)
!10905 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4261, size: 27200, elements: !10700)
!10906 = !DIGlobalVariableExpression(var: !10907, expr: !DIExpression())
!10907 = distinct !DIGlobalVariable(name: "at91sam9260_config", scope: !2, file: !3, line: 4328, type: !10830, isLocal: true, isDefinition: true)
!10908 = !DIGlobalVariableExpression(var: !10909, expr: !DIExpression())
!10909 = distinct !DIGlobalVariable(name: "np4_config", scope: !2, file: !3, line: 4377, type: !10830, isLocal: true, isDefinition: true)
!10910 = !DIGlobalVariableExpression(var: !10911, expr: !DIExpression())
!10911 = distinct !DIGlobalVariable(name: "pc302gem_config", scope: !2, file: !3, line: 4341, type: !10830, isLocal: true, isDefinition: true)
!10912 = !DIGlobalVariableExpression(var: !10913, expr: !DIExpression())
!10913 = distinct !DIGlobalVariable(name: "sama5d2_config", scope: !2, file: !3, line: 4348, type: !10830, isLocal: true, isDefinition: true)
!10914 = !DIGlobalVariableExpression(var: !10915, expr: !DIExpression())
!10915 = distinct !DIGlobalVariable(name: "sama5d3_config", scope: !2, file: !3, line: 4355, type: !10830, isLocal: true, isDefinition: true)
!10916 = !DIGlobalVariableExpression(var: !10917, expr: !DIExpression())
!10917 = distinct !DIGlobalVariable(name: "sama5d3macb_config", scope: !2, file: !3, line: 4334, type: !10830, isLocal: true, isDefinition: true)
!10918 = !DIGlobalVariableExpression(var: !10919, expr: !DIExpression())
!10919 = distinct !DIGlobalVariable(name: "sama5d4_config", scope: !2, file: !3, line: 4364, type: !10830, isLocal: true, isDefinition: true)
!10920 = !DIGlobalVariableExpression(var: !10921, expr: !DIExpression())
!10921 = distinct !DIGlobalVariable(name: "emac_config", scope: !2, file: !3, line: 4371, type: !10830, isLocal: true, isDefinition: true)
!10922 = !DIGlobalVariableExpression(var: !10923, expr: !DIExpression())
!10923 = distinct !DIGlobalVariable(name: "at91ether_netdev_ops", scope: !2, file: !3, line: 4163, type: !402, isLocal: true, isDefinition: true)
!10924 = !DIGlobalVariableExpression(var: !10925, expr: !DIExpression())
!10925 = distinct !DIGlobalVariable(name: "zynqmp_config", scope: !2, file: !3, line: 4383, type: !10830, isLocal: true, isDefinition: true)
!10926 = !DIGlobalVariableExpression(var: !10927, expr: !DIExpression())
!10927 = distinct !DIGlobalVariable(name: "zynq_config", scope: !2, file: !3, line: 4393, type: !10830, isLocal: true, isDefinition: true)
!10928 = !DIGlobalVariableExpression(var: !10929, expr: !DIExpression())
!10929 = distinct !DIGlobalVariable(name: "fu540_c000_config", scope: !2, file: !3, line: 4319, type: !10830, isLocal: true, isDefinition: true)
!10930 = !DIGlobalVariableExpression(var: !10931, expr: !DIExpression())
!10931 = distinct !DIGlobalVariable(name: "mgmt", scope: !2, file: !3, line: 3822, type: !10932, isLocal: true, isDefinition: true)
!10932 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10933, size: 64)
!10933 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sifive_fu540_macb_mgmt", file: !3, line: 41, size: 320, elements: !10934)
!10934 = !{!10935, !10936, !10937}
!10935 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !10933, file: !3, line: 42, baseType: !570, size: 64)
!10936 = !DIDerivedType(tag: DW_TAG_member, name: "rate", scope: !10933, file: !3, line: 43, baseType: !317, size: 64, offset: 64)
!10937 = !DIDerivedType(tag: DW_TAG_member, name: "hw", scope: !10933, file: !3, line: 44, baseType: !10938, size: 192, offset: 128)
!10938 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "clk_hw", file: !10939, line: 312, size: 192, elements: !10940)
!10939 = !DIFile(filename: "./include/linux/clk-provider.h", directory: "/home/lizy2001/genbc/linux")
!10940 = !{!10941, !10944, !10945}
!10941 = !DIDerivedType(tag: DW_TAG_member, name: "core", scope: !10938, file: !10939, line: 313, baseType: !10942, size: 64)
!10942 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10943, size: 64)
!10943 = !DICompositeType(tag: DW_TAG_structure_type, name: "clk_core", file: !10939, line: 38, flags: DIFlagFwdDecl)
!10944 = !DIDerivedType(tag: DW_TAG_member, name: "clk", scope: !10938, file: !10939, line: 314, baseType: !10300, size: 64, offset: 64)
!10945 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !10938, file: !10939, line: 315, baseType: !10946, size: 64, offset: 128)
!10946 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10947, size: 64)
!10947 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !10948)
!10948 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "clk_init_data", file: !10939, line: 285, size: 448, elements: !10949)
!10949 = !{!10950, !10951, !11031, !11033, !11044, !11046, !11047}
!10950 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !10948, file: !10939, line: 286, baseType: !297, size: 64)
!10951 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !10948, file: !10939, line: 287, baseType: !10952, size: 64, offset: 64)
!10952 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10953, size: 64)
!10953 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !10954)
!10954 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "clk_ops", file: !10939, line: 220, size: 1600, elements: !10955)
!10955 = !{!10956, !10961, !10965, !10966, !10967, !10968, !10969, !10970, !10971, !10972, !10973, !10977, !10981, !10993, !10997, !11001, !11005, !11009, !11010, !11011, !11015, !11024, !11025, !11026, !11027}
!10956 = !DIDerivedType(tag: DW_TAG_member, name: "prepare", scope: !10954, file: !10939, line: 221, baseType: !10957, size: 64)
!10957 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10958, size: 64)
!10958 = !DISubroutineType(types: !10959)
!10959 = !{!37, !10960}
!10960 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10938, size: 64)
!10961 = !DIDerivedType(tag: DW_TAG_member, name: "unprepare", scope: !10954, file: !10939, line: 222, baseType: !10962, size: 64, offset: 64)
!10962 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10963, size: 64)
!10963 = !DISubroutineType(types: !10964)
!10964 = !{null, !10960}
!10965 = !DIDerivedType(tag: DW_TAG_member, name: "is_prepared", scope: !10954, file: !10939, line: 223, baseType: !10957, size: 64, offset: 128)
!10966 = !DIDerivedType(tag: DW_TAG_member, name: "unprepare_unused", scope: !10954, file: !10939, line: 224, baseType: !10962, size: 64, offset: 192)
!10967 = !DIDerivedType(tag: DW_TAG_member, name: "enable", scope: !10954, file: !10939, line: 225, baseType: !10957, size: 64, offset: 256)
!10968 = !DIDerivedType(tag: DW_TAG_member, name: "disable", scope: !10954, file: !10939, line: 226, baseType: !10962, size: 64, offset: 320)
!10969 = !DIDerivedType(tag: DW_TAG_member, name: "is_enabled", scope: !10954, file: !10939, line: 227, baseType: !10957, size: 64, offset: 384)
!10970 = !DIDerivedType(tag: DW_TAG_member, name: "disable_unused", scope: !10954, file: !10939, line: 228, baseType: !10962, size: 64, offset: 448)
!10971 = !DIDerivedType(tag: DW_TAG_member, name: "save_context", scope: !10954, file: !10939, line: 229, baseType: !10957, size: 64, offset: 512)
!10972 = !DIDerivedType(tag: DW_TAG_member, name: "restore_context", scope: !10954, file: !10939, line: 230, baseType: !10962, size: 64, offset: 576)
!10973 = !DIDerivedType(tag: DW_TAG_member, name: "recalc_rate", scope: !10954, file: !10939, line: 231, baseType: !10974, size: 64, offset: 640)
!10974 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10975, size: 64)
!10975 = !DISubroutineType(types: !10976)
!10976 = !{!317, !10960, !317}
!10977 = !DIDerivedType(tag: DW_TAG_member, name: "round_rate", scope: !10954, file: !10939, line: 233, baseType: !10978, size: 64, offset: 704)
!10978 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10979, size: 64)
!10979 = !DISubroutineType(types: !10980)
!10980 = !{!513, !10960, !317, !2427}
!10981 = !DIDerivedType(tag: DW_TAG_member, name: "determine_rate", scope: !10954, file: !10939, line: 235, baseType: !10982, size: 64, offset: 768)
!10982 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10983, size: 64)
!10983 = !DISubroutineType(types: !10984)
!10984 = !{!37, !10960, !10985}
!10985 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10986, size: 64)
!10986 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "clk_rate_request", file: !10939, line: 55, size: 320, elements: !10987)
!10987 = !{!10988, !10989, !10990, !10991, !10992}
!10988 = !DIDerivedType(tag: DW_TAG_member, name: "rate", scope: !10986, file: !10939, line: 56, baseType: !317, size: 64)
!10989 = !DIDerivedType(tag: DW_TAG_member, name: "min_rate", scope: !10986, file: !10939, line: 57, baseType: !317, size: 64, offset: 64)
!10990 = !DIDerivedType(tag: DW_TAG_member, name: "max_rate", scope: !10986, file: !10939, line: 58, baseType: !317, size: 64, offset: 128)
!10991 = !DIDerivedType(tag: DW_TAG_member, name: "best_parent_rate", scope: !10986, file: !10939, line: 59, baseType: !317, size: 64, offset: 192)
!10992 = !DIDerivedType(tag: DW_TAG_member, name: "best_parent_hw", scope: !10986, file: !10939, line: 60, baseType: !10960, size: 64, offset: 256)
!10993 = !DIDerivedType(tag: DW_TAG_member, name: "set_parent", scope: !10954, file: !10939, line: 237, baseType: !10994, size: 64, offset: 832)
!10994 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10995, size: 64)
!10995 = !DISubroutineType(types: !10996)
!10996 = !{!37, !10960, !1397}
!10997 = !DIDerivedType(tag: DW_TAG_member, name: "get_parent", scope: !10954, file: !10939, line: 238, baseType: !10998, size: 64, offset: 896)
!10998 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10999, size: 64)
!10999 = !DISubroutineType(types: !11000)
!11000 = !{!1397, !10960}
!11001 = !DIDerivedType(tag: DW_TAG_member, name: "set_rate", scope: !10954, file: !10939, line: 239, baseType: !11002, size: 64, offset: 960)
!11002 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11003, size: 64)
!11003 = !DISubroutineType(types: !11004)
!11004 = !{!37, !10960, !317, !317}
!11005 = !DIDerivedType(tag: DW_TAG_member, name: "set_rate_and_parent", scope: !10954, file: !10939, line: 241, baseType: !11006, size: 64, offset: 1024)
!11006 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11007, size: 64)
!11007 = !DISubroutineType(types: !11008)
!11008 = !{!37, !10960, !317, !317, !1397}
!11009 = !DIDerivedType(tag: DW_TAG_member, name: "recalc_accuracy", scope: !10954, file: !10939, line: 244, baseType: !10974, size: 64, offset: 1088)
!11010 = !DIDerivedType(tag: DW_TAG_member, name: "get_phase", scope: !10954, file: !10939, line: 246, baseType: !10957, size: 64, offset: 1152)
!11011 = !DIDerivedType(tag: DW_TAG_member, name: "set_phase", scope: !10954, file: !10939, line: 247, baseType: !11012, size: 64, offset: 1216)
!11012 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11013, size: 64)
!11013 = !DISubroutineType(types: !11014)
!11014 = !{!37, !10960, !37}
!11015 = !DIDerivedType(tag: DW_TAG_member, name: "get_duty_cycle", scope: !10954, file: !10939, line: 248, baseType: !11016, size: 64, offset: 1280)
!11016 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11017, size: 64)
!11017 = !DISubroutineType(types: !11018)
!11018 = !{!37, !10960, !11019}
!11019 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11020, size: 64)
!11020 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "clk_duty", file: !10939, line: 69, size: 64, elements: !11021)
!11021 = !{!11022, !11023}
!11022 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !11020, file: !10939, line: 70, baseType: !7, size: 32)
!11023 = !DIDerivedType(tag: DW_TAG_member, name: "den", scope: !11020, file: !10939, line: 71, baseType: !7, size: 32, offset: 32)
!11024 = !DIDerivedType(tag: DW_TAG_member, name: "set_duty_cycle", scope: !10954, file: !10939, line: 250, baseType: !11016, size: 64, offset: 1344)
!11025 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !10954, file: !10939, line: 252, baseType: !10957, size: 64, offset: 1408)
!11026 = !DIDerivedType(tag: DW_TAG_member, name: "terminate", scope: !10954, file: !10939, line: 253, baseType: !10962, size: 64, offset: 1472)
!11027 = !DIDerivedType(tag: DW_TAG_member, name: "debug_init", scope: !10954, file: !10939, line: 254, baseType: !11028, size: 64, offset: 1536)
!11028 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11029, size: 64)
!11029 = !DISubroutineType(types: !11030)
!11030 = !{null, !10960, !673}
!11031 = !DIDerivedType(tag: DW_TAG_member, name: "parent_names", scope: !10948, file: !10939, line: 289, baseType: !11032, size: 64, offset: 128)
!11032 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3373, size: 64)
!11033 = !DIDerivedType(tag: DW_TAG_member, name: "parent_data", scope: !10948, file: !10939, line: 290, baseType: !11034, size: 64, offset: 192)
!11034 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11035, size: 64)
!11035 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !11036)
!11036 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "clk_parent_data", file: !10939, line: 264, size: 256, elements: !11037)
!11037 = !{!11038, !11041, !11042, !11043}
!11038 = !DIDerivedType(tag: DW_TAG_member, name: "hw", scope: !11036, file: !10939, line: 265, baseType: !11039, size: 64)
!11039 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11040, size: 64)
!11040 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !10938)
!11041 = !DIDerivedType(tag: DW_TAG_member, name: "fw_name", scope: !11036, file: !10939, line: 266, baseType: !297, size: 64, offset: 64)
!11042 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !11036, file: !10939, line: 267, baseType: !297, size: 64, offset: 128)
!11043 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !11036, file: !10939, line: 268, baseType: !37, size: 32, offset: 192)
!11044 = !DIDerivedType(tag: DW_TAG_member, name: "parent_hws", scope: !10948, file: !10939, line: 291, baseType: !11045, size: 64, offset: 256)
!11045 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11039, size: 64)
!11046 = !DIDerivedType(tag: DW_TAG_member, name: "num_parents", scope: !10948, file: !10939, line: 292, baseType: !1397, size: 8, offset: 320)
!11047 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !10948, file: !10939, line: 293, baseType: !317, size: 64, offset: 384)
!11048 = !DIGlobalVariableExpression(var: !11049, expr: !DIExpression())
!11049 = distinct !DIGlobalVariable(name: "fu540_c000_ops", scope: !2, file: !3, line: 4268, type: !10953, isLocal: true, isDefinition: true)
!11050 = !DIGlobalVariableExpression(var: !11051, expr: !DIExpression())
!11051 = distinct !DIGlobalVariable(name: "macb_pm_ops", scope: !2, file: !3, line: 4854, type: !4199, isLocal: true, isDefinition: true)
!11052 = !{!"rsp"}
!11053 = !{i32 7, !"Dwarf Version", i32 4}
!11054 = !{i32 2, !"Debug Info Version", i32 3}
!11055 = !{i32 1, !"wchar_size", i32 2}
!11056 = !{i32 1, !"Code Model", i32 2}
!11057 = !{!"clang version 10.0.1 (https://github.com/llvm/llvm-project.git ef32c611aa214dea855364efd7ba451ec5ec3f74)"}
!11058 = distinct !DISubprogram(name: "macb_driver_init", scope: !3, file: !3, line: 4869, type: !11059, scopeLine: 4869, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!11059 = !DISubroutineType(types: !11060)
!11060 = !{!37}
!11061 = !DILocation(line: 4869, column: 1, scope: !11058)
!11062 = distinct !DISubprogram(name: "macb_driver_exit", scope: !3, file: !3, line: 4869, type: !3704, scopeLine: 4869, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!11063 = !DILocation(line: 4869, column: 1, scope: !11062)
!11064 = distinct !DISubprogram(name: "macb_probe", scope: !3, file: !3, line: 4433, type: !10813, scopeLine: 4434, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!11065 = !DILocalVariable(name: "lock", arg: 1, scope: !11066, file: !11067, line: 327, type: !4097)
!11066 = distinct !DISubprogram(name: "spinlock_check", scope: !11067, file: !11067, line: 327, type: !11068, scopeLine: 328, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!11067 = !DIFile(filename: "./include/linux/spinlock.h", directory: "/home/lizy2001/genbc/linux")
!11068 = !DISubroutineType(types: !11069)
!11069 = !{!11070, !4097}
!11070 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1168, size: 64)
!11071 = !DILocation(line: 327, column: 67, scope: !11066, inlinedAt: !11072)
!11072 = distinct !DILocation(line: 4520, column: 2, scope: !11073)
!11073 = distinct !DILexicalBlock(scope: !11064, file: !3, line: 4520, column: 2)
!11074 = !DILocalVariable(name: "pdev", arg: 1, scope: !11064, file: !3, line: 4433, type: !10260)
!11075 = !DILocation(line: 4433, column: 47, scope: !11064)
!11076 = !DILocalVariable(name: "macb_config", scope: !11064, file: !3, line: 4435, type: !11077)
!11077 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10830, size: 64)
!11078 = !DILocation(line: 4435, column: 28, scope: !11064)
!11079 = !DILocalVariable(name: "clk_init", scope: !11064, file: !3, line: 4436, type: !10836)
!11080 = !DILocation(line: 4436, column: 8, scope: !11064)
!11081 = !DILocation(line: 4438, column: 21, scope: !11064)
!11082 = !DILocation(line: 4438, column: 34, scope: !11064)
!11083 = !DILocalVariable(name: "init", scope: !11064, file: !3, line: 4439, type: !10812)
!11084 = !DILocation(line: 4439, column: 8, scope: !11064)
!11085 = !DILocation(line: 4439, column: 42, scope: !11064)
!11086 = !DILocation(line: 4439, column: 55, scope: !11064)
!11087 = !DILocalVariable(name: "np", scope: !11064, file: !3, line: 4440, type: !4476)
!11088 = !DILocation(line: 4440, column: 22, scope: !11064)
!11089 = !DILocation(line: 4440, column: 27, scope: !11064)
!11090 = !DILocation(line: 4440, column: 33, scope: !11064)
!11091 = !DILocation(line: 4440, column: 37, scope: !11064)
!11092 = !DILocalVariable(name: "pclk", scope: !11064, file: !3, line: 4441, type: !10300)
!11093 = !DILocation(line: 4441, column: 14, scope: !11064)
!11094 = !DILocalVariable(name: "hclk", scope: !11064, file: !3, line: 4441, type: !10300)
!11095 = !DILocation(line: 4441, column: 21, scope: !11064)
!11096 = !DILocalVariable(name: "tx_clk", scope: !11064, file: !3, line: 4441, type: !10300)
!11097 = !DILocation(line: 4441, column: 35, scope: !11064)
!11098 = !DILocalVariable(name: "rx_clk", scope: !11064, file: !3, line: 4441, type: !10300)
!11099 = !DILocation(line: 4441, column: 51, scope: !11064)
!11100 = !DILocalVariable(name: "tsu_clk", scope: !11064, file: !3, line: 4442, type: !10300)
!11101 = !DILocation(line: 4442, column: 14, scope: !11064)
!11102 = !DILocalVariable(name: "queue_mask", scope: !11064, file: !3, line: 4443, type: !7)
!11103 = !DILocation(line: 4443, column: 15, scope: !11064)
!11104 = !DILocalVariable(name: "num_queues", scope: !11064, file: !3, line: 4443, type: !7)
!11105 = !DILocation(line: 4443, column: 27, scope: !11064)
!11106 = !DILocalVariable(name: "native_io", scope: !11064, file: !3, line: 4444, type: !540)
!11107 = !DILocation(line: 4444, column: 7, scope: !11064)
!11108 = !DILocalVariable(name: "interface", scope: !11064, file: !3, line: 4445, type: !9706)
!11109 = !DILocation(line: 4445, column: 18, scope: !11064)
!11110 = !DILocalVariable(name: "dev", scope: !11064, file: !3, line: 4446, type: !295)
!11111 = !DILocation(line: 4446, column: 21, scope: !11064)
!11112 = !DILocalVariable(name: "regs", scope: !11064, file: !3, line: 4447, type: !10272)
!11113 = !DILocation(line: 4447, column: 19, scope: !11064)
!11114 = !DILocalVariable(name: "mem", scope: !11064, file: !3, line: 4448, type: !570)
!11115 = !DILocation(line: 4448, column: 16, scope: !11064)
!11116 = !DILocalVariable(name: "mac", scope: !11064, file: !3, line: 4449, type: !297)
!11117 = !DILocation(line: 4449, column: 14, scope: !11064)
!11118 = !DILocalVariable(name: "bp", scope: !11064, file: !3, line: 4450, type: !10238)
!11119 = !DILocation(line: 4450, column: 15, scope: !11064)
!11120 = !DILocalVariable(name: "err", scope: !11064, file: !3, line: 4451, type: !37)
!11121 = !DILocation(line: 4451, column: 6, scope: !11064)
!11122 = !DILocalVariable(name: "val", scope: !11064, file: !3, line: 4451, type: !37)
!11123 = !DILocation(line: 4451, column: 11, scope: !11064)
!11124 = !DILocation(line: 4453, column: 31, scope: !11064)
!11125 = !DILocation(line: 4453, column: 9, scope: !11064)
!11126 = !DILocation(line: 4453, column: 7, scope: !11064)
!11127 = !DILocation(line: 4454, column: 31, scope: !11064)
!11128 = !DILocation(line: 4454, column: 37, scope: !11064)
!11129 = !DILocation(line: 4454, column: 42, scope: !11064)
!11130 = !DILocation(line: 4454, column: 8, scope: !11064)
!11131 = !DILocation(line: 4454, column: 6, scope: !11064)
!11132 = !DILocation(line: 4455, column: 13, scope: !11133)
!11133 = distinct !DILexicalBlock(scope: !11064, file: !3, line: 4455, column: 6)
!11134 = !DILocation(line: 4455, column: 6, scope: !11133)
!11135 = !DILocation(line: 4455, column: 6, scope: !11064)
!11136 = !DILocation(line: 4456, column: 18, scope: !11133)
!11137 = !DILocation(line: 4456, column: 10, scope: !11133)
!11138 = !DILocation(line: 4456, column: 3, scope: !11133)
!11139 = !DILocation(line: 4458, column: 6, scope: !11140)
!11140 = distinct !DILexicalBlock(scope: !11064, file: !3, line: 4458, column: 6)
!11141 = !DILocation(line: 4458, column: 6, scope: !11064)
!11142 = !DILocalVariable(name: "match", scope: !11143, file: !3, line: 4459, type: !4260)
!11143 = distinct !DILexicalBlock(scope: !11140, file: !3, line: 4458, column: 10)
!11144 = !DILocation(line: 4459, column: 30, scope: !11143)
!11145 = !DILocation(line: 4461, column: 38, scope: !11143)
!11146 = !DILocation(line: 4461, column: 11, scope: !11143)
!11147 = !DILocation(line: 4461, column: 9, scope: !11143)
!11148 = !DILocation(line: 4462, column: 7, scope: !11149)
!11149 = distinct !DILexicalBlock(scope: !11143, file: !3, line: 4462, column: 7)
!11150 = !DILocation(line: 4462, column: 13, scope: !11149)
!11151 = !DILocation(line: 4462, column: 16, scope: !11149)
!11152 = !DILocation(line: 4462, column: 23, scope: !11149)
!11153 = !DILocation(line: 4462, column: 7, scope: !11143)
!11154 = !DILocation(line: 4463, column: 18, scope: !11155)
!11155 = distinct !DILexicalBlock(scope: !11149, file: !3, line: 4462, column: 29)
!11156 = !DILocation(line: 4463, column: 25, scope: !11155)
!11157 = !DILocation(line: 4463, column: 16, scope: !11155)
!11158 = !DILocation(line: 4464, column: 15, scope: !11155)
!11159 = !DILocation(line: 4464, column: 28, scope: !11155)
!11160 = !DILocation(line: 4464, column: 13, scope: !11155)
!11161 = !DILocation(line: 4465, column: 11, scope: !11155)
!11162 = !DILocation(line: 4465, column: 24, scope: !11155)
!11163 = !DILocation(line: 4465, column: 9, scope: !11155)
!11164 = !DILocation(line: 4466, column: 3, scope: !11155)
!11165 = !DILocation(line: 4467, column: 2, scope: !11143)
!11166 = !DILocation(line: 4469, column: 8, scope: !11064)
!11167 = !DILocation(line: 4469, column: 17, scope: !11064)
!11168 = !DILocation(line: 4469, column: 6, scope: !11064)
!11169 = !DILocation(line: 4470, column: 6, scope: !11170)
!11170 = distinct !DILexicalBlock(scope: !11064, file: !3, line: 4470, column: 6)
!11171 = !DILocation(line: 4470, column: 6, scope: !11064)
!11172 = !DILocation(line: 4471, column: 10, scope: !11170)
!11173 = !DILocation(line: 4471, column: 3, scope: !11170)
!11174 = !DILocation(line: 4473, column: 36, scope: !11064)
!11175 = !DILocation(line: 4473, column: 42, scope: !11064)
!11176 = !DILocation(line: 4473, column: 2, scope: !11064)
!11177 = !DILocation(line: 4474, column: 30, scope: !11064)
!11178 = !DILocation(line: 4474, column: 36, scope: !11064)
!11179 = !DILocation(line: 4474, column: 2, scope: !11064)
!11180 = !DILocation(line: 4475, column: 27, scope: !11064)
!11181 = !DILocation(line: 4475, column: 33, scope: !11064)
!11182 = !DILocation(line: 4475, column: 2, scope: !11064)
!11183 = !DILocation(line: 4476, column: 25, scope: !11064)
!11184 = !DILocation(line: 4476, column: 31, scope: !11064)
!11185 = !DILocation(line: 4476, column: 2, scope: !11064)
!11186 = !DILocation(line: 4477, column: 21, scope: !11064)
!11187 = !DILocation(line: 4477, column: 27, scope: !11064)
!11188 = !DILocation(line: 4477, column: 2, scope: !11064)
!11189 = !DILocation(line: 4478, column: 30, scope: !11064)
!11190 = !DILocation(line: 4478, column: 14, scope: !11064)
!11191 = !DILocation(line: 4478, column: 12, scope: !11064)
!11192 = !DILocation(line: 4480, column: 20, scope: !11064)
!11193 = !DILocation(line: 4480, column: 25, scope: !11064)
!11194 = !DILocation(line: 4480, column: 2, scope: !11064)
!11195 = !DILocation(line: 4481, column: 8, scope: !11064)
!11196 = !DILocation(line: 4481, column: 6, scope: !11064)
!11197 = !DILocation(line: 4482, column: 7, scope: !11198)
!11198 = distinct !DILexicalBlock(scope: !11064, file: !3, line: 4482, column: 6)
!11199 = !DILocation(line: 4482, column: 6, scope: !11064)
!11200 = !DILocation(line: 4483, column: 7, scope: !11201)
!11201 = distinct !DILexicalBlock(scope: !11198, file: !3, line: 4482, column: 12)
!11202 = !DILocation(line: 4484, column: 3, scope: !11201)
!11203 = !DILocation(line: 4487, column: 19, scope: !11064)
!11204 = !DILocation(line: 4487, column: 25, scope: !11064)
!11205 = !DILocation(line: 4487, column: 2, scope: !11064)
!11206 = !DILocation(line: 4487, column: 7, scope: !11064)
!11207 = !DILocation(line: 4487, column: 17, scope: !11064)
!11208 = !DILocation(line: 4489, column: 2, scope: !11064)
!11209 = !DILocation(line: 4491, column: 19, scope: !11064)
!11210 = !DILocation(line: 4491, column: 7, scope: !11064)
!11211 = !DILocation(line: 4491, column: 5, scope: !11064)
!11212 = !DILocation(line: 4492, column: 13, scope: !11064)
!11213 = !DILocation(line: 4492, column: 2, scope: !11064)
!11214 = !DILocation(line: 4492, column: 6, scope: !11064)
!11215 = !DILocation(line: 4492, column: 11, scope: !11064)
!11216 = !DILocation(line: 4493, column: 12, scope: !11064)
!11217 = !DILocation(line: 4493, column: 2, scope: !11064)
!11218 = !DILocation(line: 4493, column: 6, scope: !11064)
!11219 = !DILocation(line: 4493, column: 10, scope: !11064)
!11220 = !DILocation(line: 4494, column: 13, scope: !11064)
!11221 = !DILocation(line: 4494, column: 2, scope: !11064)
!11222 = !DILocation(line: 4494, column: 6, scope: !11064)
!11223 = !DILocation(line: 4494, column: 11, scope: !11064)
!11224 = !DILocation(line: 4495, column: 18, scope: !11064)
!11225 = !DILocation(line: 4495, column: 2, scope: !11064)
!11226 = !DILocation(line: 4495, column: 6, scope: !11064)
!11227 = !DILocation(line: 4495, column: 16, scope: !11064)
!11228 = !DILocation(line: 4496, column: 6, scope: !11229)
!11229 = distinct !DILexicalBlock(scope: !11064, file: !3, line: 4496, column: 6)
!11230 = !DILocation(line: 4496, column: 6, scope: !11064)
!11231 = !DILocation(line: 4497, column: 3, scope: !11232)
!11232 = distinct !DILexicalBlock(scope: !11229, file: !3, line: 4496, column: 17)
!11233 = !DILocation(line: 4497, column: 7, scope: !11232)
!11234 = !DILocation(line: 4497, column: 22, scope: !11232)
!11235 = !DILocation(line: 4498, column: 3, scope: !11232)
!11236 = !DILocation(line: 4498, column: 7, scope: !11232)
!11237 = !DILocation(line: 4498, column: 23, scope: !11232)
!11238 = !DILocation(line: 4499, column: 2, scope: !11232)
!11239 = !DILocation(line: 4500, column: 3, scope: !11240)
!11240 = distinct !DILexicalBlock(scope: !11229, file: !3, line: 4499, column: 9)
!11241 = !DILocation(line: 4500, column: 7, scope: !11240)
!11242 = !DILocation(line: 4500, column: 22, scope: !11240)
!11243 = !DILocation(line: 4501, column: 3, scope: !11240)
!11244 = !DILocation(line: 4501, column: 7, scope: !11240)
!11245 = !DILocation(line: 4501, column: 23, scope: !11240)
!11246 = !DILocation(line: 4503, column: 19, scope: !11064)
!11247 = !DILocation(line: 4503, column: 2, scope: !11064)
!11248 = !DILocation(line: 4503, column: 6, scope: !11064)
!11249 = !DILocation(line: 4503, column: 17, scope: !11064)
!11250 = !DILocation(line: 4504, column: 19, scope: !11064)
!11251 = !DILocation(line: 4504, column: 2, scope: !11064)
!11252 = !DILocation(line: 4504, column: 6, scope: !11064)
!11253 = !DILocation(line: 4504, column: 17, scope: !11064)
!11254 = !DILocation(line: 4505, column: 6, scope: !11255)
!11255 = distinct !DILexicalBlock(scope: !11064, file: !3, line: 4505, column: 6)
!11256 = !DILocation(line: 4505, column: 6, scope: !11064)
!11257 = !DILocation(line: 4506, column: 26, scope: !11255)
!11258 = !DILocation(line: 4506, column: 39, scope: !11255)
!11259 = !DILocation(line: 4506, column: 3, scope: !11255)
!11260 = !DILocation(line: 4506, column: 7, scope: !11255)
!11261 = !DILocation(line: 4506, column: 24, scope: !11255)
!11262 = !DILocation(line: 4507, column: 13, scope: !11064)
!11263 = !DILocation(line: 4507, column: 2, scope: !11064)
!11264 = !DILocation(line: 4507, column: 6, scope: !11064)
!11265 = !DILocation(line: 4507, column: 11, scope: !11064)
!11266 = !DILocation(line: 4508, column: 13, scope: !11064)
!11267 = !DILocation(line: 4508, column: 2, scope: !11064)
!11268 = !DILocation(line: 4508, column: 6, scope: !11064)
!11269 = !DILocation(line: 4508, column: 11, scope: !11064)
!11270 = !DILocation(line: 4509, column: 15, scope: !11064)
!11271 = !DILocation(line: 4509, column: 2, scope: !11064)
!11272 = !DILocation(line: 4509, column: 6, scope: !11064)
!11273 = !DILocation(line: 4509, column: 13, scope: !11064)
!11274 = !DILocation(line: 4510, column: 15, scope: !11064)
!11275 = !DILocation(line: 4510, column: 2, scope: !11064)
!11276 = !DILocation(line: 4510, column: 6, scope: !11064)
!11277 = !DILocation(line: 4510, column: 13, scope: !11064)
!11278 = !DILocation(line: 4511, column: 16, scope: !11064)
!11279 = !DILocation(line: 4511, column: 2, scope: !11064)
!11280 = !DILocation(line: 4511, column: 6, scope: !11064)
!11281 = !DILocation(line: 4511, column: 14, scope: !11064)
!11282 = !DILocation(line: 4512, column: 6, scope: !11283)
!11283 = distinct !DILexicalBlock(scope: !11064, file: !3, line: 4512, column: 6)
!11284 = !DILocation(line: 4512, column: 6, scope: !11064)
!11285 = !DILocation(line: 4513, column: 23, scope: !11283)
!11286 = !DILocation(line: 4513, column: 36, scope: !11283)
!11287 = !DILocation(line: 4513, column: 3, scope: !11283)
!11288 = !DILocation(line: 4513, column: 7, scope: !11283)
!11289 = !DILocation(line: 4513, column: 21, scope: !11283)
!11290 = !DILocation(line: 4515, column: 2, scope: !11064)
!11291 = !DILocation(line: 4515, column: 6, scope: !11064)
!11292 = !DILocation(line: 4515, column: 10, scope: !11064)
!11293 = !DILocation(line: 4516, column: 22, scope: !11294)
!11294 = distinct !DILexicalBlock(scope: !11064, file: !3, line: 4516, column: 6)
!11295 = !DILocation(line: 4516, column: 6, scope: !11294)
!11296 = !DILocation(line: 4516, column: 6, scope: !11064)
!11297 = !DILocation(line: 4517, column: 3, scope: !11294)
!11298 = !DILocation(line: 4517, column: 7, scope: !11294)
!11299 = !DILocation(line: 4517, column: 11, scope: !11294)
!11300 = !DILocation(line: 4518, column: 29, scope: !11064)
!11301 = !DILocation(line: 4518, column: 35, scope: !11064)
!11302 = !DILocation(line: 4518, column: 40, scope: !11064)
!11303 = !DILocation(line: 4518, column: 44, scope: !11064)
!11304 = !DILocation(line: 4518, column: 48, scope: !11064)
!11305 = !DILocation(line: 4518, column: 2, scope: !11064)
!11306 = !DILocation(line: 4520, column: 2, scope: !11064)
!11307 = !DILocation(line: 4520, column: 2, scope: !11073)
!11308 = !DILocation(line: 329, column: 10, scope: !11066, inlinedAt: !11072)
!11309 = !DILocation(line: 329, column: 16, scope: !11066, inlinedAt: !11072)
!11310 = !DILocation(line: 4523, column: 22, scope: !11064)
!11311 = !DILocation(line: 4523, column: 26, scope: !11064)
!11312 = !DILocation(line: 4523, column: 2, scope: !11064)
!11313 = !DILocation(line: 4526, column: 6, scope: !11314)
!11314 = distinct !DILexicalBlock(scope: !11064, file: !3, line: 4526, column: 6)
!11315 = !DILocation(line: 4526, column: 6, scope: !11064)
!11316 = !DILocation(line: 4527, column: 17, scope: !11317)
!11317 = distinct !DILexicalBlock(scope: !11314, file: !3, line: 4526, column: 46)
!11318 = !DILocation(line: 4527, column: 23, scope: !11317)
!11319 = !DILocation(line: 4527, column: 3, scope: !11317)
!11320 = !DILocation(line: 4528, column: 3, scope: !11317)
!11321 = !DILocation(line: 4528, column: 7, scope: !11317)
!11322 = !DILocation(line: 4528, column: 18, scope: !11317)
!11323 = !DILocation(line: 4529, column: 2, scope: !11317)
!11324 = !DILocation(line: 4531, column: 23, scope: !11064)
!11325 = !DILocation(line: 4531, column: 29, scope: !11064)
!11326 = !DILocation(line: 4531, column: 2, scope: !11064)
!11327 = !DILocation(line: 4533, column: 30, scope: !11064)
!11328 = !DILocation(line: 4533, column: 13, scope: !11064)
!11329 = !DILocation(line: 4533, column: 2, scope: !11064)
!11330 = !DILocation(line: 4533, column: 7, scope: !11064)
!11331 = !DILocation(line: 4533, column: 11, scope: !11064)
!11332 = !DILocation(line: 4534, column: 6, scope: !11333)
!11333 = distinct !DILexicalBlock(scope: !11064, file: !3, line: 4534, column: 6)
!11334 = !DILocation(line: 4534, column: 11, scope: !11333)
!11335 = !DILocation(line: 4534, column: 15, scope: !11333)
!11336 = !DILocation(line: 4534, column: 6, scope: !11064)
!11337 = !DILocation(line: 4535, column: 9, scope: !11338)
!11338 = distinct !DILexicalBlock(scope: !11333, file: !3, line: 4534, column: 20)
!11339 = !DILocation(line: 4535, column: 14, scope: !11338)
!11340 = !DILocation(line: 4535, column: 7, scope: !11338)
!11341 = !DILocation(line: 4536, column: 3, scope: !11338)
!11342 = !DILocation(line: 4540, column: 2, scope: !11064)
!11343 = !DILocation(line: 4540, column: 7, scope: !11064)
!11344 = !DILocation(line: 4540, column: 15, scope: !11064)
!11345 = !DILocation(line: 4541, column: 6, scope: !11346)
!11346 = distinct !DILexicalBlock(scope: !11064, file: !3, line: 4541, column: 6)
!11347 = !DILocation(line: 4541, column: 10, scope: !11346)
!11348 = !DILocation(line: 4541, column: 15, scope: !11346)
!11349 = !DILocation(line: 4541, column: 6, scope: !11064)
!11350 = !DILocation(line: 4542, column: 18, scope: !11346)
!11351 = !DILocation(line: 4542, column: 37, scope: !11346)
!11352 = !DILocation(line: 4542, column: 48, scope: !11346)
!11353 = !DILocation(line: 4542, column: 3, scope: !11346)
!11354 = !DILocation(line: 4542, column: 8, scope: !11346)
!11355 = !DILocation(line: 4542, column: 16, scope: !11346)
!11356 = !DILocation(line: 4544, column: 3, scope: !11346)
!11357 = !DILocation(line: 4544, column: 8, scope: !11346)
!11358 = !DILocation(line: 4544, column: 16, scope: !11346)
!11359 = !DILocation(line: 4546, column: 6, scope: !11360)
!11360 = distinct !DILexicalBlock(scope: !11064, file: !3, line: 4546, column: 6)
!11361 = !DILocation(line: 4546, column: 10, scope: !11360)
!11362 = !DILocation(line: 4546, column: 15, scope: !11360)
!11363 = !DILocation(line: 4546, column: 6, scope: !11064)
!11364 = !DILocation(line: 4547, column: 9, scope: !11365)
!11365 = distinct !DILexicalBlock(scope: !11360, file: !3, line: 4546, column: 43)
!11366 = !DILocation(line: 4547, column: 7, scope: !11365)
!11367 = !DILocation(line: 4548, column: 7, scope: !11368)
!11368 = distinct !DILexicalBlock(scope: !11365, file: !3, line: 4548, column: 7)
!11369 = !DILocation(line: 4548, column: 7, scope: !11365)
!11370 = !DILocation(line: 4549, column: 35, scope: !11368)
!11371 = !DILocation(line: 4549, column: 39, scope: !11368)
!11372 = !DILocation(line: 4549, column: 31, scope: !11368)
!11373 = !DILocation(line: 4550, column: 30, scope: !11368)
!11374 = !DILocation(line: 4550, column: 7, scope: !11368)
!11375 = !DILocation(line: 4549, column: 45, scope: !11368)
!11376 = !DILocation(line: 4549, column: 4, scope: !11368)
!11377 = !DILocation(line: 4549, column: 8, scope: !11368)
!11378 = !DILocation(line: 4549, column: 26, scope: !11368)
!11379 = !DILocation(line: 4552, column: 9, scope: !11365)
!11380 = !DILocation(line: 4552, column: 7, scope: !11365)
!11381 = !DILocation(line: 4553, column: 7, scope: !11382)
!11382 = distinct !DILexicalBlock(scope: !11365, file: !3, line: 4553, column: 7)
!11383 = !DILocation(line: 4553, column: 7, scope: !11365)
!11384 = !DILocation(line: 4554, column: 35, scope: !11382)
!11385 = !DILocation(line: 4554, column: 39, scope: !11382)
!11386 = !DILocation(line: 4554, column: 31, scope: !11382)
!11387 = !DILocation(line: 4555, column: 30, scope: !11382)
!11388 = !DILocation(line: 4555, column: 7, scope: !11382)
!11389 = !DILocation(line: 4554, column: 45, scope: !11382)
!11390 = !DILocation(line: 4554, column: 4, scope: !11382)
!11391 = !DILocation(line: 4554, column: 8, scope: !11382)
!11392 = !DILocation(line: 4554, column: 26, scope: !11382)
!11393 = !DILocation(line: 4556, column: 2, scope: !11365)
!11394 = !DILocation(line: 4558, column: 2, scope: !11064)
!11395 = !DILocation(line: 4558, column: 6, scope: !11064)
!11396 = !DILocation(line: 4558, column: 19, scope: !11064)
!11397 = !DILocation(line: 4559, column: 6, scope: !11398)
!11398 = distinct !DILexicalBlock(scope: !11064, file: !3, line: 4559, column: 6)
!11399 = !DILocation(line: 4559, column: 10, scope: !11398)
!11400 = !DILocation(line: 4559, column: 15, scope: !11398)
!11401 = !DILocation(line: 4559, column: 6, scope: !11064)
!11402 = !DILocation(line: 4560, column: 3, scope: !11398)
!11403 = !DILocation(line: 4560, column: 7, scope: !11398)
!11404 = !DILocation(line: 4560, column: 20, scope: !11398)
!11405 = !DILocation(line: 4562, column: 27, scope: !11064)
!11406 = !DILocation(line: 4562, column: 8, scope: !11064)
!11407 = !DILocation(line: 4562, column: 6, scope: !11064)
!11408 = !DILocation(line: 4563, column: 14, scope: !11409)
!11409 = distinct !DILexicalBlock(scope: !11064, file: !3, line: 4563, column: 6)
!11410 = !DILocation(line: 4563, column: 6, scope: !11409)
!11411 = !DILocation(line: 4563, column: 19, scope: !11409)
!11412 = !DILocation(line: 4563, column: 6, scope: !11064)
!11413 = !DILocation(line: 4564, column: 7, scope: !11414)
!11414 = distinct !DILexicalBlock(scope: !11409, file: !3, line: 4563, column: 37)
!11415 = !DILocation(line: 4565, column: 3, scope: !11414)
!11416 = !DILocation(line: 4566, column: 29, scope: !11417)
!11417 = distinct !DILexicalBlock(scope: !11409, file: !3, line: 4566, column: 13)
!11418 = !DILocation(line: 4566, column: 14, scope: !11417)
!11419 = !DILocation(line: 4566, column: 13, scope: !11409)
!11420 = !DILocation(line: 4567, column: 19, scope: !11421)
!11421 = distinct !DILexicalBlock(scope: !11417, file: !3, line: 4566, column: 35)
!11422 = !DILocation(line: 4567, column: 23, scope: !11421)
!11423 = !DILocation(line: 4567, column: 28, scope: !11421)
!11424 = !DILocation(line: 4567, column: 38, scope: !11421)
!11425 = !DILocation(line: 4567, column: 3, scope: !11421)
!11426 = !DILocation(line: 4568, column: 2, scope: !11421)
!11427 = !DILocation(line: 4569, column: 19, scope: !11428)
!11428 = distinct !DILexicalBlock(scope: !11417, file: !3, line: 4568, column: 9)
!11429 = !DILocation(line: 4569, column: 3, scope: !11428)
!11430 = !DILocation(line: 4572, column: 24, scope: !11064)
!11431 = !DILocation(line: 4572, column: 8, scope: !11064)
!11432 = !DILocation(line: 4572, column: 6, scope: !11064)
!11433 = !DILocation(line: 4573, column: 6, scope: !11434)
!11434 = distinct !DILexicalBlock(scope: !11064, file: !3, line: 4573, column: 6)
!11435 = !DILocation(line: 4573, column: 6, scope: !11064)
!11436 = !DILocation(line: 4575, column: 3, scope: !11434)
!11437 = !DILocation(line: 4575, column: 7, scope: !11434)
!11438 = !DILocation(line: 4575, column: 21, scope: !11434)
!11439 = !DILocation(line: 4577, column: 23, scope: !11434)
!11440 = !DILocation(line: 4577, column: 3, scope: !11434)
!11441 = !DILocation(line: 4577, column: 7, scope: !11434)
!11442 = !DILocation(line: 4577, column: 21, scope: !11434)
!11443 = !DILocation(line: 4580, column: 8, scope: !11064)
!11444 = !DILocation(line: 4580, column: 13, scope: !11064)
!11445 = !DILocation(line: 4580, column: 6, scope: !11064)
!11446 = !DILocation(line: 4581, column: 6, scope: !11447)
!11447 = distinct !DILexicalBlock(scope: !11064, file: !3, line: 4581, column: 6)
!11448 = !DILocation(line: 4581, column: 6, scope: !11064)
!11449 = !DILocation(line: 4582, column: 3, scope: !11447)
!11450 = !DILocation(line: 4584, column: 22, scope: !11064)
!11451 = !DILocation(line: 4584, column: 8, scope: !11064)
!11452 = !DILocation(line: 4584, column: 6, scope: !11064)
!11453 = !DILocation(line: 4585, column: 6, scope: !11454)
!11454 = distinct !DILexicalBlock(scope: !11064, file: !3, line: 4585, column: 6)
!11455 = !DILocation(line: 4585, column: 6, scope: !11064)
!11456 = !DILocation(line: 4586, column: 3, scope: !11454)
!11457 = !DILocation(line: 4588, column: 20, scope: !11064)
!11458 = !DILocation(line: 4588, column: 2, scope: !11064)
!11459 = !DILocation(line: 4590, column: 24, scope: !11064)
!11460 = !DILocation(line: 4590, column: 8, scope: !11064)
!11461 = !DILocation(line: 4590, column: 6, scope: !11064)
!11462 = !DILocation(line: 4591, column: 6, scope: !11463)
!11463 = distinct !DILexicalBlock(scope: !11064, file: !3, line: 4591, column: 6)
!11464 = !DILocation(line: 4591, column: 6, scope: !11064)
!11465 = !DILocation(line: 4592, column: 3, scope: !11466)
!11466 = distinct !DILexicalBlock(scope: !11463, file: !3, line: 4591, column: 11)
!11467 = !DILocation(line: 4593, column: 3, scope: !11466)
!11468 = !DILocation(line: 4596, column: 17, scope: !11064)
!11469 = !DILocation(line: 4596, column: 21, scope: !11064)
!11470 = !DILocation(line: 4596, column: 2, scope: !11064)
!11471 = !DILocation(line: 4598, column: 14, scope: !11064)
!11472 = !DILocation(line: 4599, column: 19, scope: !11064)
!11473 = !DILocation(line: 4599, column: 7, scope: !11064)
!11474 = !DILocation(line: 4599, column: 41, scope: !11064)
!11475 = !DILocation(line: 4600, column: 7, scope: !11064)
!11476 = !DILocation(line: 4600, column: 12, scope: !11064)
!11477 = !DILocation(line: 4600, column: 23, scope: !11064)
!11478 = !DILocation(line: 4600, column: 28, scope: !11064)
!11479 = !DILocation(line: 4600, column: 33, scope: !11064)
!11480 = !DILocation(line: 4600, column: 38, scope: !11064)
!11481 = !DILocation(line: 4598, column: 2, scope: !11064)
!11482 = !DILocation(line: 4602, column: 29, scope: !11064)
!11483 = !DILocation(line: 4602, column: 33, scope: !11064)
!11484 = !DILocation(line: 4602, column: 39, scope: !11064)
!11485 = !DILocation(line: 4602, column: 2, scope: !11064)
!11486 = !DILocation(line: 4603, column: 30, scope: !11064)
!11487 = !DILocation(line: 4603, column: 34, scope: !11064)
!11488 = !DILocation(line: 4603, column: 40, scope: !11064)
!11489 = !DILocation(line: 4603, column: 2, scope: !11064)
!11490 = !DILocation(line: 4605, column: 2, scope: !11064)
!11491 = !DILabel(scope: !11064, name: "err_out_unregister_mdio", file: !3, line: 4607)
!11492 = !DILocation(line: 4607, column: 1, scope: !11064)
!11493 = !DILocation(line: 4608, column: 21, scope: !11064)
!11494 = !DILocation(line: 4608, column: 25, scope: !11064)
!11495 = !DILocation(line: 4608, column: 2, scope: !11064)
!11496 = !DILocation(line: 4609, column: 15, scope: !11064)
!11497 = !DILocation(line: 4609, column: 19, scope: !11064)
!11498 = !DILocation(line: 4609, column: 2, scope: !11064)
!11499 = !DILabel(scope: !11064, name: "err_out_free_netdev", file: !3, line: 4611)
!11500 = !DILocation(line: 4611, column: 1, scope: !11064)
!11501 = !DILocation(line: 4612, column: 14, scope: !11064)
!11502 = !DILocation(line: 4612, column: 2, scope: !11064)
!11503 = !DILabel(scope: !11064, name: "err_disable_clocks", file: !3, line: 4614)
!11504 = !DILocation(line: 4614, column: 1, scope: !11064)
!11505 = !DILocation(line: 4615, column: 24, scope: !11064)
!11506 = !DILocation(line: 4615, column: 2, scope: !11064)
!11507 = !DILocation(line: 4616, column: 24, scope: !11064)
!11508 = !DILocation(line: 4616, column: 2, scope: !11064)
!11509 = !DILocation(line: 4617, column: 24, scope: !11064)
!11510 = !DILocation(line: 4617, column: 2, scope: !11064)
!11511 = !DILocation(line: 4618, column: 24, scope: !11064)
!11512 = !DILocation(line: 4618, column: 2, scope: !11064)
!11513 = !DILocation(line: 4619, column: 24, scope: !11064)
!11514 = !DILocation(line: 4619, column: 2, scope: !11064)
!11515 = !DILocation(line: 4620, column: 22, scope: !11064)
!11516 = !DILocation(line: 4620, column: 28, scope: !11064)
!11517 = !DILocation(line: 4620, column: 2, scope: !11064)
!11518 = !DILocation(line: 4621, column: 28, scope: !11064)
!11519 = !DILocation(line: 4621, column: 34, scope: !11064)
!11520 = !DILocation(line: 4621, column: 2, scope: !11064)
!11521 = !DILocation(line: 4622, column: 35, scope: !11064)
!11522 = !DILocation(line: 4622, column: 41, scope: !11064)
!11523 = !DILocation(line: 4622, column: 2, scope: !11064)
!11524 = !DILocation(line: 4624, column: 9, scope: !11064)
!11525 = !DILocation(line: 4624, column: 2, scope: !11064)
!11526 = !DILocation(line: 4625, column: 1, scope: !11064)
!11527 = distinct !DISubprogram(name: "macb_remove", scope: !3, file: !3, line: 4627, type: !10813, scopeLine: 4628, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!11528 = !DILocalVariable(name: "pdev", arg: 1, scope: !11527, file: !3, line: 4627, type: !10260)
!11529 = !DILocation(line: 4627, column: 48, scope: !11527)
!11530 = !DILocalVariable(name: "dev", scope: !11527, file: !3, line: 4629, type: !295)
!11531 = !DILocation(line: 4629, column: 21, scope: !11527)
!11532 = !DILocalVariable(name: "bp", scope: !11527, file: !3, line: 4630, type: !10238)
!11533 = !DILocation(line: 4630, column: 15, scope: !11527)
!11534 = !DILocation(line: 4632, column: 29, scope: !11527)
!11535 = !DILocation(line: 4632, column: 8, scope: !11527)
!11536 = !DILocation(line: 4632, column: 6, scope: !11527)
!11537 = !DILocation(line: 4634, column: 6, scope: !11538)
!11538 = distinct !DILexicalBlock(scope: !11527, file: !3, line: 4634, column: 6)
!11539 = !DILocation(line: 4634, column: 6, scope: !11527)
!11540 = !DILocation(line: 4635, column: 20, scope: !11541)
!11541 = distinct !DILexicalBlock(scope: !11538, file: !3, line: 4634, column: 11)
!11542 = !DILocation(line: 4635, column: 8, scope: !11541)
!11543 = !DILocation(line: 4635, column: 6, scope: !11541)
!11544 = !DILocation(line: 4636, column: 22, scope: !11541)
!11545 = !DILocation(line: 4636, column: 26, scope: !11541)
!11546 = !DILocation(line: 4636, column: 3, scope: !11541)
!11547 = !DILocation(line: 4637, column: 16, scope: !11541)
!11548 = !DILocation(line: 4637, column: 20, scope: !11541)
!11549 = !DILocation(line: 4637, column: 3, scope: !11541)
!11550 = !DILocation(line: 4639, column: 21, scope: !11541)
!11551 = !DILocation(line: 4639, column: 3, scope: !11541)
!11552 = !DILocation(line: 4640, column: 17, scope: !11541)
!11553 = !DILocation(line: 4640, column: 21, scope: !11541)
!11554 = !DILocation(line: 4640, column: 3, scope: !11541)
!11555 = !DILocation(line: 4641, column: 23, scope: !11541)
!11556 = !DILocation(line: 4641, column: 29, scope: !11541)
!11557 = !DILocation(line: 4641, column: 3, scope: !11541)
!11558 = !DILocation(line: 4642, column: 36, scope: !11541)
!11559 = !DILocation(line: 4642, column: 42, scope: !11541)
!11560 = !DILocation(line: 4642, column: 3, scope: !11541)
!11561 = !DILocation(line: 4643, column: 30, scope: !11562)
!11562 = distinct !DILexicalBlock(scope: !11541, file: !3, line: 4643, column: 7)
!11563 = !DILocation(line: 4643, column: 36, scope: !11562)
!11564 = !DILocation(line: 4643, column: 8, scope: !11562)
!11565 = !DILocation(line: 4643, column: 7, scope: !11541)
!11566 = !DILocation(line: 4644, column: 26, scope: !11567)
!11567 = distinct !DILexicalBlock(scope: !11562, file: !3, line: 4643, column: 42)
!11568 = !DILocation(line: 4644, column: 30, scope: !11567)
!11569 = !DILocation(line: 4644, column: 4, scope: !11567)
!11570 = !DILocation(line: 4645, column: 26, scope: !11567)
!11571 = !DILocation(line: 4645, column: 30, scope: !11567)
!11572 = !DILocation(line: 4645, column: 4, scope: !11567)
!11573 = !DILocation(line: 4646, column: 26, scope: !11567)
!11574 = !DILocation(line: 4646, column: 30, scope: !11567)
!11575 = !DILocation(line: 4646, column: 4, scope: !11567)
!11576 = !DILocation(line: 4647, column: 26, scope: !11567)
!11577 = !DILocation(line: 4647, column: 30, scope: !11567)
!11578 = !DILocation(line: 4647, column: 4, scope: !11567)
!11579 = !DILocation(line: 4648, column: 26, scope: !11567)
!11580 = !DILocation(line: 4648, column: 30, scope: !11567)
!11581 = !DILocation(line: 4648, column: 4, scope: !11567)
!11582 = !DILocation(line: 4649, column: 30, scope: !11567)
!11583 = !DILocation(line: 4649, column: 36, scope: !11567)
!11584 = !DILocation(line: 4649, column: 4, scope: !11567)
!11585 = !DILocation(line: 4650, column: 3, scope: !11567)
!11586 = !DILocation(line: 4651, column: 19, scope: !11541)
!11587 = !DILocation(line: 4651, column: 23, scope: !11541)
!11588 = !DILocation(line: 4651, column: 3, scope: !11541)
!11589 = !DILocation(line: 4652, column: 15, scope: !11541)
!11590 = !DILocation(line: 4652, column: 3, scope: !11541)
!11591 = !DILocation(line: 4653, column: 2, scope: !11541)
!11592 = !DILocation(line: 4655, column: 2, scope: !11527)
!11593 = distinct !DISubprogram(name: "IS_ERR", scope: !11594, file: !11594, line: 34, type: !11595, scopeLine: 35, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!11594 = !DIFile(filename: "./include/linux/err.h", directory: "/home/lizy2001/genbc/linux")
!11595 = !DISubroutineType(types: !11596)
!11596 = !{!540, !2244}
!11597 = !DILocalVariable(name: "ptr", arg: 1, scope: !11593, file: !11594, line: 34, type: !2244)
!11598 = !DILocation(line: 34, column: 60, scope: !11593)
!11599 = !DILocation(line: 36, column: 9, scope: !11593)
!11600 = !DILocation(line: 36, column: 2, scope: !11593)
!11601 = distinct !DISubprogram(name: "PTR_ERR", scope: !11594, file: !11594, line: 29, type: !11602, scopeLine: 30, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!11602 = !DISubroutineType(types: !11603)
!11603 = !{!513, !2244}
!11604 = !DILocalVariable(name: "ptr", arg: 1, scope: !11601, file: !11594, line: 29, type: !2244)
!11605 = !DILocation(line: 29, column: 61, scope: !11601)
!11606 = !DILocation(line: 31, column: 16, scope: !11601)
!11607 = !DILocation(line: 31, column: 9, scope: !11601)
!11608 = !DILocation(line: 31, column: 2, scope: !11601)
!11609 = distinct !DISubprogram(name: "pm_runtime_use_autosuspend", scope: !11610, file: !11610, line: 537, type: !4195, scopeLine: 538, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!11610 = !DIFile(filename: "./include/linux/pm_runtime.h", directory: "/home/lizy2001/genbc/linux")
!11611 = !DILocalVariable(name: "dev", arg: 1, scope: !11609, file: !11610, line: 537, type: !4172)
!11612 = !DILocation(line: 537, column: 62, scope: !11609)
!11613 = !DILocation(line: 539, column: 31, scope: !11609)
!11614 = !DILocation(line: 539, column: 2, scope: !11609)
!11615 = !DILocation(line: 540, column: 1, scope: !11609)
!11616 = distinct !DISubprogram(name: "pm_runtime_get_noresume", scope: !11610, file: !11610, line: 92, type: !4195, scopeLine: 93, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!11617 = !DILocalVariable(name: "v", arg: 1, scope: !11618, file: !11619, line: 93, type: !11622)
!11618 = distinct !DISubprogram(name: "arch_atomic_inc", scope: !11619, file: !11619, line: 93, type: !11620, scopeLine: 94, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!11619 = !DIFile(filename: "./arch/x86/include/asm/atomic.h", directory: "/home/lizy2001/genbc/linux")
!11620 = !DISubroutineType(types: !11621)
!11621 = !{null, !11622}
!11622 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !388, size: 64)
!11623 = !DILocation(line: 93, column: 55, scope: !11618, inlinedAt: !11624)
!11624 = distinct !DILocation(line: 241, column: 2, scope: !11625, inlinedAt: !11627)
!11625 = distinct !DISubprogram(name: "atomic_inc", scope: !11626, file: !11626, line: 238, type: !11620, scopeLine: 239, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!11626 = !DIFile(filename: "./include/asm-generic/atomic-instrumented.h", directory: "/home/lizy2001/genbc/linux")
!11627 = distinct !DILocation(line: 94, column: 2, scope: !11616)
!11628 = !DILocalVariable(name: "v", arg: 1, scope: !11629, file: !11630, line: 99, type: !11633)
!11629 = distinct !DISubprogram(name: "instrument_atomic_read_write", scope: !11630, file: !11630, line: 99, type: !11631, scopeLine: 100, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!11630 = !DIFile(filename: "./include/linux/instrumented.h", directory: "/home/lizy2001/genbc/linux")
!11631 = !DISubroutineType(types: !11632)
!11632 = !{null, !11633, !594}
!11633 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11634, size: 64)
!11634 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !11635)
!11635 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: null)
!11636 = !DILocation(line: 99, column: 79, scope: !11629, inlinedAt: !11637)
!11637 = distinct !DILocation(line: 240, column: 2, scope: !11625, inlinedAt: !11627)
!11638 = !DILocalVariable(name: "size", arg: 2, scope: !11629, file: !11630, line: 99, type: !594)
!11639 = !DILocation(line: 99, column: 89, scope: !11629, inlinedAt: !11637)
!11640 = !DILocalVariable(name: "v", arg: 1, scope: !11625, file: !11626, line: 238, type: !11622)
!11641 = !DILocation(line: 238, column: 22, scope: !11625, inlinedAt: !11627)
!11642 = !DILocalVariable(name: "dev", arg: 1, scope: !11616, file: !11610, line: 92, type: !4172)
!11643 = !DILocation(line: 92, column: 59, scope: !11616)
!11644 = !DILocation(line: 94, column: 14, scope: !11616)
!11645 = !DILocation(line: 94, column: 19, scope: !11616)
!11646 = !DILocation(line: 94, column: 25, scope: !11616)
!11647 = !DILocation(line: 240, column: 31, scope: !11625, inlinedAt: !11627)
!11648 = !DILocation(line: 101, column: 20, scope: !11629, inlinedAt: !11637)
!11649 = !DILocation(line: 101, column: 23, scope: !11629, inlinedAt: !11637)
!11650 = !DILocation(line: 101, column: 2, scope: !11629, inlinedAt: !11637)
!11651 = !DILocation(line: 102, column: 2, scope: !11629, inlinedAt: !11637)
!11652 = !DILocation(line: 241, column: 18, scope: !11625, inlinedAt: !11627)
!11653 = !DILocation(line: 96, column: 16, scope: !11618, inlinedAt: !11624)
!11654 = !DILocation(line: 96, column: 19, scope: !11618, inlinedAt: !11624)
!11655 = !DILocation(line: 95, column: 2, scope: !11618, inlinedAt: !11624)
!11656 = !{i32 -2146544308}
!11657 = !DILocation(line: 95, column: 1, scope: !11616)
!11658 = distinct !DISubprogram(name: "pm_runtime_set_active", scope: !11610, file: !11610, line: 495, type: !4205, scopeLine: 496, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!11659 = !DILocalVariable(name: "dev", arg: 1, scope: !11658, file: !11610, line: 495, type: !4172)
!11660 = !DILocation(line: 495, column: 56, scope: !11658)
!11661 = !DILocation(line: 497, column: 33, scope: !11658)
!11662 = !DILocation(line: 497, column: 9, scope: !11658)
!11663 = !DILocation(line: 497, column: 2, scope: !11658)
!11664 = distinct !DISubprogram(name: "hw_is_native_io", scope: !3, file: !3, line: 249, type: !11665, scopeLine: 250, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!11665 = !DISubroutineType(types: !11666)
!11666 = !{!540, !570}
!11667 = !DILocalVariable(name: "addr", arg: 1, scope: !11664, file: !3, line: 249, type: !570)
!11668 = !DILocation(line: 249, column: 43, scope: !11664)
!11669 = !DILocalVariable(name: "value", scope: !11664, file: !3, line: 251, type: !707)
!11670 = !DILocation(line: 251, column: 6, scope: !11664)
!11671 = !DILocation(line: 253, column: 15, scope: !11664)
!11672 = !DILocation(line: 253, column: 22, scope: !11664)
!11673 = !DILocation(line: 253, column: 27, scope: !11664)
!11674 = !DILocation(line: 253, column: 2, scope: !11664)
!11675 = !DILocation(line: 254, column: 22, scope: !11664)
!11676 = !DILocation(line: 254, column: 27, scope: !11664)
!11677 = !DILocation(line: 254, column: 10, scope: !11664)
!11678 = !DILocation(line: 254, column: 8, scope: !11664)
!11679 = !DILocation(line: 257, column: 18, scope: !11664)
!11680 = !DILocation(line: 257, column: 23, scope: !11664)
!11681 = !DILocation(line: 257, column: 2, scope: !11664)
!11682 = !DILocation(line: 259, column: 9, scope: !11664)
!11683 = !DILocation(line: 259, column: 15, scope: !11664)
!11684 = !DILocation(line: 259, column: 2, scope: !11664)
!11685 = distinct !DISubprogram(name: "macb_probe_queues", scope: !3, file: !3, line: 3546, type: !11686, scopeLine: 3550, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!11686 = !DISubroutineType(types: !11687)
!11687 = !{null, !570, !540, !4628, !4628}
!11688 = !DILocalVariable(name: "w", arg: 1, scope: !11689, file: !11690, line: 15, type: !7)
!11689 = distinct !DISubprogram(name: "__arch_hweight32", scope: !11690, file: !11690, line: 15, type: !11691, scopeLine: 16, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!11690 = !DIFile(filename: "./arch/x86/include/asm/arch_hweight.h", directory: "/home/lizy2001/genbc/linux")
!11691 = !DISubroutineType(types: !11692)
!11692 = !{!7, !7}
!11693 = !DILocation(line: 15, column: 67, scope: !11689, inlinedAt: !11694)
!11694 = distinct !DILocation(line: 3565, column: 16, scope: !11685)
!11695 = !DILocalVariable(name: "res", scope: !11689, file: !11690, line: 17, type: !7)
!11696 = !DILocation(line: 17, column: 15, scope: !11689, inlinedAt: !11694)
!11697 = !DILocalVariable(name: "mem", arg: 1, scope: !11685, file: !3, line: 3546, type: !570)
!11698 = !DILocation(line: 3546, column: 45, scope: !11685)
!11699 = !DILocalVariable(name: "native_io", arg: 2, scope: !11685, file: !3, line: 3547, type: !540)
!11700 = !DILocation(line: 3547, column: 15, scope: !11685)
!11701 = !DILocalVariable(name: "queue_mask", arg: 3, scope: !11685, file: !3, line: 3548, type: !4628)
!11702 = !DILocation(line: 3548, column: 24, scope: !11685)
!11703 = !DILocalVariable(name: "num_queues", arg: 4, scope: !11685, file: !3, line: 3549, type: !4628)
!11704 = !DILocation(line: 3549, column: 24, scope: !11685)
!11705 = !DILocation(line: 3551, column: 3, scope: !11685)
!11706 = !DILocation(line: 3551, column: 14, scope: !11685)
!11707 = !DILocation(line: 3552, column: 3, scope: !11685)
!11708 = !DILocation(line: 3552, column: 14, scope: !11685)
!11709 = !DILocation(line: 3560, column: 17, scope: !11710)
!11710 = distinct !DILexicalBlock(scope: !11685, file: !3, line: 3560, column: 6)
!11711 = !DILocation(line: 3560, column: 22, scope: !11710)
!11712 = !DILocation(line: 3560, column: 7, scope: !11710)
!11713 = !DILocation(line: 3560, column: 6, scope: !11685)
!11714 = !DILocation(line: 3561, column: 3, scope: !11710)
!11715 = !DILocation(line: 3564, column: 17, scope: !11685)
!11716 = !DILocation(line: 3564, column: 48, scope: !11685)
!11717 = !DILocation(line: 3564, column: 3, scope: !11685)
!11718 = !DILocation(line: 3564, column: 14, scope: !11685)
!11719 = !DILocation(line: 3565, column: 16, scope: !11685)
!11720 = !DILocation(line: 21, column: 15, scope: !11689, inlinedAt: !11694)
!11721 = !DILocation(line: 19, column: 2, scope: !11689, inlinedAt: !11694)
!11722 = !{i32 -2146997950, i32 -2146997922, i32 -2146997916, i32 -2146997900, i32 -2146997884, i32 -2146997857, i32 -2146997524, i32 -2146998242, i32 -2146997518, i32 -2146997470, i32 -2146997406, i32 -2146997344, i32 -2146997287, i32 -2146997231, i32 -2146998162, i32 -2146998137, i32 -2146996997, i32 -2146996867, i32 -2146996936, i32 -2146996853, i32 -2146998037}
!11723 = !DILocation(line: 23, column: 9, scope: !11689, inlinedAt: !11694)
!11724 = !DILocation(line: 3565, column: 3, scope: !11685)
!11725 = !DILocation(line: 3565, column: 14, scope: !11685)
!11726 = !DILocation(line: 3566, column: 1, scope: !11685)
!11727 = distinct !DISubprogram(name: "netdev_priv", scope: !36, file: !36, line: 2322, type: !11728, scopeLine: 2323, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!11728 = !DISubroutineType(types: !11729)
!11729 = !{!570, !2682}
!11730 = !DILocalVariable(name: "dev", arg: 1, scope: !11727, file: !36, line: 2322, type: !2682)
!11731 = !DILocation(line: 2322, column: 58, scope: !11727)
!11732 = !DILocation(line: 2324, column: 17, scope: !11727)
!11733 = !DILocation(line: 2324, column: 9, scope: !11727)
!11734 = !DILocation(line: 2324, column: 21, scope: !11727)
!11735 = !DILocation(line: 2324, column: 2, scope: !11727)
!11736 = distinct !DISubprogram(name: "hw_readl_native", scope: !3, file: !3, line: 225, type: !10245, scopeLine: 226, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!11737 = !DILocalVariable(name: "bp", arg: 1, scope: !11736, file: !3, line: 225, type: !10238)
!11738 = !DILocation(line: 225, column: 41, scope: !11736)
!11739 = !DILocalVariable(name: "offset", arg: 2, scope: !11736, file: !3, line: 225, type: !37)
!11740 = !DILocation(line: 225, column: 49, scope: !11736)
!11741 = !DILocation(line: 227, column: 21, scope: !11736)
!11742 = !DILocation(line: 227, column: 25, scope: !11736)
!11743 = !DILocation(line: 227, column: 32, scope: !11736)
!11744 = !DILocation(line: 227, column: 30, scope: !11736)
!11745 = !DILocation(line: 227, column: 9, scope: !11736)
!11746 = !DILocation(line: 227, column: 2, scope: !11736)
!11747 = distinct !DISubprogram(name: "hw_writel_native", scope: !3, file: !3, line: 230, type: !10249, scopeLine: 231, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!11748 = !DILocalVariable(name: "bp", arg: 1, scope: !11747, file: !3, line: 230, type: !10238)
!11749 = !DILocation(line: 230, column: 43, scope: !11747)
!11750 = !DILocalVariable(name: "offset", arg: 2, scope: !11747, file: !3, line: 230, type: !37)
!11751 = !DILocation(line: 230, column: 51, scope: !11747)
!11752 = !DILocalVariable(name: "value", arg: 3, scope: !11747, file: !3, line: 230, type: !707)
!11753 = !DILocation(line: 230, column: 63, scope: !11747)
!11754 = !DILocation(line: 232, column: 15, scope: !11747)
!11755 = !DILocation(line: 232, column: 22, scope: !11747)
!11756 = !DILocation(line: 232, column: 26, scope: !11747)
!11757 = !DILocation(line: 232, column: 33, scope: !11747)
!11758 = !DILocation(line: 232, column: 31, scope: !11747)
!11759 = !DILocation(line: 232, column: 2, scope: !11747)
!11760 = !DILocation(line: 233, column: 1, scope: !11747)
!11761 = distinct !DISubprogram(name: "hw_readl", scope: !3, file: !3, line: 235, type: !10245, scopeLine: 236, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!11762 = !DILocalVariable(name: "bp", arg: 1, scope: !11761, file: !3, line: 235, type: !10238)
!11763 = !DILocation(line: 235, column: 34, scope: !11761)
!11764 = !DILocalVariable(name: "offset", arg: 2, scope: !11761, file: !3, line: 235, type: !37)
!11765 = !DILocation(line: 235, column: 42, scope: !11761)
!11766 = !DILocation(line: 237, column: 9, scope: !11761)
!11767 = !DILocation(line: 237, column: 2, scope: !11761)
!11768 = distinct !DISubprogram(name: "hw_writel", scope: !3, file: !3, line: 240, type: !10249, scopeLine: 241, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!11769 = !DILocalVariable(name: "bp", arg: 1, scope: !11768, file: !3, line: 240, type: !10238)
!11770 = !DILocation(line: 240, column: 36, scope: !11768)
!11771 = !DILocalVariable(name: "offset", arg: 2, scope: !11768, file: !3, line: 240, type: !37)
!11772 = !DILocation(line: 240, column: 44, scope: !11768)
!11773 = !DILocalVariable(name: "value", arg: 3, scope: !11768, file: !3, line: 240, type: !707)
!11774 = !DILocation(line: 240, column: 56, scope: !11768)
!11775 = !DILocation(line: 242, column: 2, scope: !11768)
!11776 = !DILocation(line: 243, column: 1, scope: !11768)
!11777 = distinct !DISubprogram(name: "macb_configure_caps", scope: !3, file: !3, line: 3513, type: !11778, scopeLine: 3515, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!11778 = !DISubroutineType(types: !11779)
!11779 = !{null, !10238, !11077}
!11780 = !DILocalVariable(name: "bp", arg: 1, scope: !11777, file: !3, line: 3513, type: !10238)
!11781 = !DILocation(line: 3513, column: 46, scope: !11777)
!11782 = !DILocalVariable(name: "dt_conf", arg: 2, scope: !11777, file: !3, line: 3514, type: !11077)
!11783 = !DILocation(line: 3514, column: 31, scope: !11777)
!11784 = !DILocalVariable(name: "dcfg", scope: !11777, file: !3, line: 3516, type: !707)
!11785 = !DILocation(line: 3516, column: 6, scope: !11777)
!11786 = !DILocation(line: 3518, column: 6, scope: !11787)
!11787 = distinct !DILexicalBlock(scope: !11777, file: !3, line: 3518, column: 6)
!11788 = !DILocation(line: 3518, column: 6, scope: !11777)
!11789 = !DILocation(line: 3519, column: 14, scope: !11787)
!11790 = !DILocation(line: 3519, column: 23, scope: !11787)
!11791 = !DILocation(line: 3519, column: 3, scope: !11787)
!11792 = !DILocation(line: 3519, column: 7, scope: !11787)
!11793 = !DILocation(line: 3519, column: 12, scope: !11787)
!11794 = !DILocation(line: 3521, column: 16, scope: !11795)
!11795 = distinct !DILexicalBlock(scope: !11777, file: !3, line: 3521, column: 6)
!11796 = !DILocation(line: 3521, column: 20, scope: !11795)
!11797 = !DILocation(line: 3521, column: 26, scope: !11795)
!11798 = !DILocation(line: 3521, column: 30, scope: !11795)
!11799 = !DILocation(line: 3521, column: 6, scope: !11795)
!11800 = !DILocation(line: 3521, column: 6, scope: !11777)
!11801 = !DILocation(line: 3522, column: 3, scope: !11802)
!11802 = distinct !DILexicalBlock(scope: !11795, file: !3, line: 3521, column: 42)
!11803 = !DILocation(line: 3522, column: 7, scope: !11802)
!11804 = !DILocation(line: 3522, column: 12, scope: !11802)
!11805 = !DILocation(line: 3524, column: 10, scope: !11802)
!11806 = !DILocation(line: 3524, column: 8, scope: !11802)
!11807 = !DILocation(line: 3525, column: 7, scope: !11808)
!11808 = distinct !DILexicalBlock(scope: !11802, file: !3, line: 3525, column: 7)
!11809 = !DILocation(line: 3525, column: 31, scope: !11808)
!11810 = !DILocation(line: 3525, column: 7, scope: !11802)
!11811 = !DILocation(line: 3526, column: 4, scope: !11808)
!11812 = !DILocation(line: 3526, column: 8, scope: !11808)
!11813 = !DILocation(line: 3526, column: 13, scope: !11808)
!11814 = !DILocation(line: 3527, column: 10, scope: !11802)
!11815 = !DILocation(line: 3527, column: 8, scope: !11802)
!11816 = !DILocation(line: 3528, column: 8, scope: !11817)
!11817 = distinct !DILexicalBlock(scope: !11802, file: !3, line: 3528, column: 7)
!11818 = !DILocation(line: 3528, column: 13, scope: !11817)
!11819 = !DILocation(line: 3528, column: 62, scope: !11817)
!11820 = !DILocation(line: 3528, column: 7, scope: !11802)
!11821 = !DILocation(line: 3529, column: 4, scope: !11817)
!11822 = !DILocation(line: 3529, column: 8, scope: !11817)
!11823 = !DILocation(line: 3529, column: 13, scope: !11817)
!11824 = !DILocation(line: 3531, column: 19, scope: !11825)
!11825 = distinct !DILexicalBlock(scope: !11802, file: !3, line: 3531, column: 7)
!11826 = !DILocation(line: 3531, column: 7, scope: !11825)
!11827 = !DILocation(line: 3531, column: 7, scope: !11802)
!11828 = !DILocation(line: 3532, column: 9, scope: !11829)
!11829 = distinct !DILexicalBlock(scope: !11830, file: !3, line: 3532, column: 8)
!11830 = distinct !DILexicalBlock(scope: !11825, file: !3, line: 3531, column: 24)
!11831 = !DILocation(line: 3532, column: 8, scope: !11830)
!11832 = !DILocation(line: 3533, column: 5, scope: !11829)
!11833 = !DILocation(line: 3536, column: 5, scope: !11834)
!11834 = distinct !DILexicalBlock(scope: !11829, file: !3, line: 3535, column: 9)
!11835 = !DILocation(line: 3536, column: 9, scope: !11834)
!11836 = !DILocation(line: 3536, column: 20, scope: !11834)
!11837 = !DILocation(line: 3537, column: 5, scope: !11834)
!11838 = !DILocation(line: 3537, column: 9, scope: !11834)
!11839 = !DILocation(line: 3537, column: 18, scope: !11834)
!11840 = !DILocation(line: 3539, column: 3, scope: !11830)
!11841 = !DILocation(line: 3541, column: 2, scope: !11802)
!11842 = !DILocation(line: 3544, column: 1, scope: !11777)
!11843 = distinct !DISubprogram(name: "platform_set_drvdata", scope: !10262, file: !10262, line: 236, type: !11844, scopeLine: 238, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!11844 = !DISubroutineType(types: !11845)
!11845 = !{null, !10260, !570}
!11846 = !DILocalVariable(name: "pdev", arg: 1, scope: !11843, file: !10262, line: 236, type: !10260)
!11847 = !DILocation(line: 236, column: 65, scope: !11843)
!11848 = !DILocalVariable(name: "data", arg: 2, scope: !11843, file: !10262, line: 237, type: !570)
!11849 = !DILocation(line: 237, column: 12, scope: !11843)
!11850 = !DILocation(line: 239, column: 19, scope: !11843)
!11851 = !DILocation(line: 239, column: 25, scope: !11843)
!11852 = !DILocation(line: 239, column: 30, scope: !11843)
!11853 = !DILocation(line: 239, column: 2, scope: !11843)
!11854 = !DILocation(line: 240, column: 1, scope: !11843)
!11855 = distinct !DISubprogram(name: "macb_dma_desc_get_size", scope: !3, file: !3, line: 123, type: !10484, scopeLine: 124, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!11856 = !DILocalVariable(name: "bp", arg: 1, scope: !11855, file: !3, line: 123, type: !10238)
!11857 = !DILocation(line: 123, column: 57, scope: !11855)
!11858 = !DILocalVariable(name: "desc_size", scope: !11855, file: !3, line: 126, type: !7)
!11859 = !DILocation(line: 126, column: 15, scope: !11855)
!11860 = !DILocation(line: 128, column: 10, scope: !11855)
!11861 = !DILocation(line: 128, column: 14, scope: !11855)
!11862 = !DILocation(line: 128, column: 2, scope: !11855)
!11863 = !DILocation(line: 130, column: 13, scope: !11864)
!11864 = distinct !DILexicalBlock(scope: !11855, file: !3, line: 128, column: 26)
!11865 = !DILocation(line: 132, column: 3, scope: !11864)
!11866 = !DILocation(line: 134, column: 13, scope: !11864)
!11867 = !DILocation(line: 136, column: 3, scope: !11864)
!11868 = !DILocation(line: 138, column: 13, scope: !11864)
!11869 = !DILocation(line: 141, column: 3, scope: !11864)
!11870 = !DILocation(line: 143, column: 13, scope: !11864)
!11871 = !DILocation(line: 144, column: 2, scope: !11864)
!11872 = !DILocation(line: 145, column: 9, scope: !11855)
!11873 = !DILocation(line: 145, column: 2, scope: !11855)
!11874 = distinct !DISubprogram(name: "IS_ERR_OR_NULL", scope: !11594, file: !11594, line: 39, type: !11595, scopeLine: 40, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!11875 = !DILocalVariable(name: "ptr", arg: 1, scope: !11874, file: !11594, line: 39, type: !2244)
!11876 = !DILocation(line: 39, column: 68, scope: !11874)
!11877 = !DILocation(line: 41, column: 9, scope: !11874)
!11878 = !DILocation(line: 41, column: 24, scope: !11874)
!11879 = !DILocation(line: 41, column: 27, scope: !11874)
!11880 = !DILocation(line: 41, column: 2, scope: !11874)
!11881 = distinct !DISubprogram(name: "ether_addr_copy", scope: !11882, file: !11882, line: 287, type: !11883, scopeLine: 288, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!11882 = !DIFile(filename: "./include/linux/etherdevice.h", directory: "/home/lizy2001/genbc/linux")
!11883 = !DISubroutineType(types: !11884)
!11884 = !{null, !7949, !8615}
!11885 = !DILocalVariable(name: "dst", arg: 1, scope: !11881, file: !11882, line: 287, type: !7949)
!11886 = !DILocation(line: 287, column: 40, scope: !11881)
!11887 = !DILocalVariable(name: "src", arg: 2, scope: !11881, file: !11882, line: 287, type: !8615)
!11888 = !DILocation(line: 287, column: 55, scope: !11881)
!11889 = !DILocation(line: 290, column: 30, scope: !11881)
!11890 = !DILocation(line: 290, column: 16, scope: !11881)
!11891 = !DILocation(line: 290, column: 10, scope: !11881)
!11892 = !DILocation(line: 290, column: 2, scope: !11881)
!11893 = !DILocation(line: 290, column: 14, scope: !11881)
!11894 = !DILocation(line: 291, column: 37, scope: !11881)
!11895 = !DILocation(line: 291, column: 41, scope: !11881)
!11896 = !DILocation(line: 291, column: 22, scope: !11881)
!11897 = !DILocation(line: 291, column: 11, scope: !11881)
!11898 = !DILocation(line: 291, column: 15, scope: !11881)
!11899 = !DILocation(line: 291, column: 2, scope: !11881)
!11900 = !DILocation(line: 291, column: 20, scope: !11881)
!11901 = !DILocation(line: 300, column: 1, scope: !11881)
!11902 = distinct !DISubprogram(name: "macb_get_hwaddr", scope: !3, file: !3, line: 293, type: !10392, scopeLine: 294, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!11903 = !DILocalVariable(name: "bp", arg: 1, scope: !11902, file: !3, line: 293, type: !10238)
!11904 = !DILocation(line: 293, column: 42, scope: !11902)
!11905 = !DILocalVariable(name: "bottom", scope: !11902, file: !3, line: 295, type: !707)
!11906 = !DILocation(line: 295, column: 6, scope: !11902)
!11907 = !DILocalVariable(name: "top", scope: !11902, file: !3, line: 296, type: !1038)
!11908 = !DILocation(line: 296, column: 6, scope: !11902)
!11909 = !DILocalVariable(name: "addr", scope: !11902, file: !3, line: 297, type: !11910)
!11910 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1397, size: 48, elements: !1671)
!11911 = !DILocation(line: 297, column: 5, scope: !11902)
!11912 = !DILocalVariable(name: "i", scope: !11902, file: !3, line: 298, type: !37)
!11913 = !DILocation(line: 298, column: 6, scope: !11902)
!11914 = !DILocation(line: 301, column: 9, scope: !11915)
!11915 = distinct !DILexicalBlock(scope: !11902, file: !3, line: 301, column: 2)
!11916 = !DILocation(line: 301, column: 7, scope: !11915)
!11917 = !DILocation(line: 301, column: 14, scope: !11918)
!11918 = distinct !DILexicalBlock(scope: !11915, file: !3, line: 301, column: 2)
!11919 = !DILocation(line: 301, column: 16, scope: !11918)
!11920 = !DILocation(line: 301, column: 2, scope: !11915)
!11921 = !DILocalVariable(name: "__v", scope: !11922, file: !3, line: 302, type: !707)
!11922 = distinct !DILexicalBlock(scope: !11923, file: !3, line: 302, column: 12)
!11923 = distinct !DILexicalBlock(scope: !11918, file: !3, line: 301, column: 26)
!11924 = !DILocation(line: 302, column: 12, scope: !11922)
!11925 = !DILocation(line: 302, column: 12, scope: !11926)
!11926 = distinct !DILexicalBlock(scope: !11922, file: !3, line: 302, column: 12)
!11927 = !DILocation(line: 302, column: 10, scope: !11923)
!11928 = !DILocalVariable(name: "__v", scope: !11929, file: !3, line: 303, type: !707)
!11929 = distinct !DILexicalBlock(scope: !11923, file: !3, line: 303, column: 9)
!11930 = !DILocation(line: 303, column: 9, scope: !11929)
!11931 = !DILocation(line: 303, column: 9, scope: !11932)
!11932 = distinct !DILexicalBlock(scope: !11929, file: !3, line: 303, column: 9)
!11933 = !DILocation(line: 303, column: 9, scope: !11923)
!11934 = !DILocation(line: 303, column: 7, scope: !11923)
!11935 = !DILocation(line: 305, column: 13, scope: !11923)
!11936 = !DILocation(line: 305, column: 20, scope: !11923)
!11937 = !DILocation(line: 305, column: 3, scope: !11923)
!11938 = !DILocation(line: 305, column: 11, scope: !11923)
!11939 = !DILocation(line: 306, column: 14, scope: !11923)
!11940 = !DILocation(line: 306, column: 21, scope: !11923)
!11941 = !DILocation(line: 306, column: 27, scope: !11923)
!11942 = !DILocation(line: 306, column: 13, scope: !11923)
!11943 = !DILocation(line: 306, column: 3, scope: !11923)
!11944 = !DILocation(line: 306, column: 11, scope: !11923)
!11945 = !DILocation(line: 307, column: 14, scope: !11923)
!11946 = !DILocation(line: 307, column: 21, scope: !11923)
!11947 = !DILocation(line: 307, column: 28, scope: !11923)
!11948 = !DILocation(line: 307, column: 13, scope: !11923)
!11949 = !DILocation(line: 307, column: 3, scope: !11923)
!11950 = !DILocation(line: 307, column: 11, scope: !11923)
!11951 = !DILocation(line: 308, column: 14, scope: !11923)
!11952 = !DILocation(line: 308, column: 21, scope: !11923)
!11953 = !DILocation(line: 308, column: 28, scope: !11923)
!11954 = !DILocation(line: 308, column: 13, scope: !11923)
!11955 = !DILocation(line: 308, column: 3, scope: !11923)
!11956 = !DILocation(line: 308, column: 11, scope: !11923)
!11957 = !DILocation(line: 309, column: 13, scope: !11923)
!11958 = !DILocation(line: 309, column: 17, scope: !11923)
!11959 = !DILocation(line: 309, column: 3, scope: !11923)
!11960 = !DILocation(line: 309, column: 11, scope: !11923)
!11961 = !DILocation(line: 310, column: 14, scope: !11923)
!11962 = !DILocation(line: 310, column: 18, scope: !11923)
!11963 = !DILocation(line: 310, column: 24, scope: !11923)
!11964 = !DILocation(line: 310, column: 13, scope: !11923)
!11965 = !DILocation(line: 310, column: 3, scope: !11923)
!11966 = !DILocation(line: 310, column: 11, scope: !11923)
!11967 = !DILocation(line: 312, column: 27, scope: !11968)
!11968 = distinct !DILexicalBlock(scope: !11923, file: !3, line: 312, column: 7)
!11969 = !DILocation(line: 312, column: 7, scope: !11968)
!11970 = !DILocation(line: 312, column: 7, scope: !11923)
!11971 = !DILocation(line: 313, column: 11, scope: !11972)
!11972 = distinct !DILexicalBlock(scope: !11968, file: !3, line: 312, column: 34)
!11973 = !DILocation(line: 313, column: 15, scope: !11972)
!11974 = !DILocation(line: 313, column: 20, scope: !11972)
!11975 = !DILocation(line: 313, column: 4, scope: !11972)
!11976 = !DILocation(line: 314, column: 4, scope: !11972)
!11977 = !DILocation(line: 316, column: 2, scope: !11923)
!11978 = !DILocation(line: 301, column: 22, scope: !11918)
!11979 = !DILocation(line: 301, column: 2, scope: !11918)
!11980 = distinct !{!11980, !11920, !11981}
!11981 = !DILocation(line: 316, column: 2, scope: !11915)
!11982 = !DILocation(line: 318, column: 2, scope: !11902)
!11983 = !DILocation(line: 319, column: 21, scope: !11902)
!11984 = !DILocation(line: 319, column: 25, scope: !11902)
!11985 = !DILocation(line: 319, column: 2, scope: !11902)
!11986 = !DILocation(line: 320, column: 1, scope: !11902)
!11987 = distinct !DISubprogram(name: "macb_mii_init", scope: !3, file: !3, line: 766, type: !10388, scopeLine: 767, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!11988 = !DILocalVariable(name: "bp", arg: 1, scope: !11987, file: !3, line: 766, type: !10238)
!11989 = !DILocation(line: 766, column: 39, scope: !11987)
!11990 = !DILocalVariable(name: "err", scope: !11987, file: !3, line: 768, type: !37)
!11991 = !DILocation(line: 768, column: 6, scope: !11987)
!11992 = !DILocation(line: 771, column: 2, scope: !11987)
!11993 = !DILocation(line: 773, column: 16, scope: !11987)
!11994 = !DILocation(line: 773, column: 2, scope: !11987)
!11995 = !DILocation(line: 773, column: 6, scope: !11987)
!11996 = !DILocation(line: 773, column: 14, scope: !11987)
!11997 = !DILocation(line: 774, column: 7, scope: !11998)
!11998 = distinct !DILexicalBlock(scope: !11987, file: !3, line: 774, column: 6)
!11999 = !DILocation(line: 774, column: 11, scope: !11998)
!12000 = !DILocation(line: 774, column: 6, scope: !11987)
!12001 = !DILocation(line: 775, column: 7, scope: !12002)
!12002 = distinct !DILexicalBlock(scope: !11998, file: !3, line: 774, column: 20)
!12003 = !DILocation(line: 776, column: 3, scope: !12002)
!12004 = !DILocation(line: 779, column: 2, scope: !11987)
!12005 = !DILocation(line: 779, column: 6, scope: !11987)
!12006 = !DILocation(line: 779, column: 15, scope: !11987)
!12007 = !DILocation(line: 779, column: 20, scope: !11987)
!12008 = !DILocation(line: 780, column: 2, scope: !11987)
!12009 = !DILocation(line: 780, column: 6, scope: !11987)
!12010 = !DILocation(line: 780, column: 15, scope: !11987)
!12011 = !DILocation(line: 780, column: 20, scope: !11987)
!12012 = !DILocation(line: 781, column: 2, scope: !11987)
!12013 = !DILocation(line: 781, column: 6, scope: !11987)
!12014 = !DILocation(line: 781, column: 15, scope: !11987)
!12015 = !DILocation(line: 781, column: 21, scope: !11987)
!12016 = !DILocation(line: 782, column: 11, scope: !11987)
!12017 = !DILocation(line: 782, column: 15, scope: !11987)
!12018 = !DILocation(line: 782, column: 24, scope: !11987)
!12019 = !DILocation(line: 783, column: 4, scope: !11987)
!12020 = !DILocation(line: 783, column: 8, scope: !11987)
!12021 = !DILocation(line: 783, column: 14, scope: !11987)
!12022 = !DILocation(line: 783, column: 20, scope: !11987)
!12023 = !DILocation(line: 783, column: 24, scope: !11987)
!12024 = !DILocation(line: 783, column: 30, scope: !11987)
!12025 = !DILocation(line: 782, column: 2, scope: !11987)
!12026 = !DILocation(line: 784, column: 22, scope: !11987)
!12027 = !DILocation(line: 784, column: 2, scope: !11987)
!12028 = !DILocation(line: 784, column: 6, scope: !11987)
!12029 = !DILocation(line: 784, column: 15, scope: !11987)
!12030 = !DILocation(line: 784, column: 20, scope: !11987)
!12031 = !DILocation(line: 785, column: 25, scope: !11987)
!12032 = !DILocation(line: 785, column: 29, scope: !11987)
!12033 = !DILocation(line: 785, column: 35, scope: !11987)
!12034 = !DILocation(line: 785, column: 2, scope: !11987)
!12035 = !DILocation(line: 785, column: 6, scope: !11987)
!12036 = !DILocation(line: 785, column: 15, scope: !11987)
!12037 = !DILocation(line: 785, column: 22, scope: !11987)
!12038 = !DILocation(line: 787, column: 19, scope: !11987)
!12039 = !DILocation(line: 787, column: 23, scope: !11987)
!12040 = !DILocation(line: 787, column: 28, scope: !11987)
!12041 = !DILocation(line: 787, column: 33, scope: !11987)
!12042 = !DILocation(line: 787, column: 37, scope: !11987)
!12043 = !DILocation(line: 787, column: 2, scope: !11987)
!12044 = !DILocation(line: 789, column: 30, scope: !11987)
!12045 = !DILocation(line: 789, column: 8, scope: !11987)
!12046 = !DILocation(line: 789, column: 6, scope: !11987)
!12047 = !DILocation(line: 790, column: 6, scope: !12048)
!12048 = distinct !DILexicalBlock(scope: !11987, file: !3, line: 790, column: 6)
!12049 = !DILocation(line: 790, column: 6, scope: !11987)
!12050 = !DILocation(line: 791, column: 3, scope: !12048)
!12051 = !DILocation(line: 793, column: 23, scope: !11987)
!12052 = !DILocation(line: 793, column: 27, scope: !11987)
!12053 = !DILocation(line: 793, column: 8, scope: !11987)
!12054 = !DILocation(line: 793, column: 6, scope: !11987)
!12055 = !DILocation(line: 794, column: 6, scope: !12056)
!12056 = distinct !DILexicalBlock(scope: !11987, file: !3, line: 794, column: 6)
!12057 = !DILocation(line: 794, column: 6, scope: !11987)
!12058 = !DILocation(line: 795, column: 3, scope: !12056)
!12059 = !DILocation(line: 797, column: 2, scope: !11987)
!12060 = !DILabel(scope: !11987, name: "err_out_unregister_bus", file: !3, line: 799)
!12061 = !DILocation(line: 799, column: 1, scope: !11987)
!12062 = !DILocation(line: 800, column: 21, scope: !11987)
!12063 = !DILocation(line: 800, column: 25, scope: !11987)
!12064 = !DILocation(line: 800, column: 2, scope: !11987)
!12065 = !DILabel(scope: !11987, name: "err_out_free_mdiobus", file: !3, line: 801)
!12066 = !DILocation(line: 801, column: 1, scope: !11987)
!12067 = !DILocation(line: 802, column: 15, scope: !11987)
!12068 = !DILocation(line: 802, column: 19, scope: !11987)
!12069 = !DILocation(line: 802, column: 2, scope: !11987)
!12070 = !DILabel(scope: !11987, name: "err_out", file: !3, line: 803)
!12071 = !DILocation(line: 803, column: 1, scope: !11987)
!12072 = !DILocation(line: 804, column: 9, scope: !11987)
!12073 = !DILocation(line: 804, column: 2, scope: !11987)
!12074 = !DILocation(line: 805, column: 1, scope: !11987)
!12075 = distinct !DISubprogram(name: "macb_hresp_error_task", scope: !3, file: !3, line: 1467, type: !10612, scopeLine: 1468, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!12076 = !DILocalVariable(name: "t", arg: 1, scope: !12075, file: !3, line: 1467, type: !10599)
!12077 = !DILocation(line: 1467, column: 58, scope: !12075)
!12078 = !DILocalVariable(name: "bp", scope: !12075, file: !3, line: 1469, type: !10238)
!12079 = !DILocation(line: 1469, column: 15, scope: !12075)
!12080 = !DILocalVariable(name: "__mptr", scope: !12081, file: !3, line: 1469, type: !570)
!12081 = distinct !DILexicalBlock(scope: !12075, file: !3, line: 1469, column: 20)
!12082 = !DILocation(line: 1469, column: 20, scope: !12081)
!12083 = !DILocation(line: 1469, column: 20, scope: !12084)
!12084 = distinct !DILexicalBlock(scope: !12081, file: !3, line: 1469, column: 20)
!12085 = !DILocalVariable(name: "dev", scope: !12075, file: !3, line: 1470, type: !295)
!12086 = !DILocation(line: 1470, column: 21, scope: !12075)
!12087 = !DILocation(line: 1470, column: 27, scope: !12075)
!12088 = !DILocation(line: 1470, column: 31, scope: !12075)
!12089 = !DILocalVariable(name: "queue", scope: !12075, file: !3, line: 1471, type: !10234)
!12090 = !DILocation(line: 1471, column: 21, scope: !12075)
!12091 = !DILocalVariable(name: "q", scope: !12075, file: !3, line: 1472, type: !7)
!12092 = !DILocation(line: 1472, column: 15, scope: !12075)
!12093 = !DILocalVariable(name: "ctrl", scope: !12075, file: !3, line: 1473, type: !707)
!12094 = !DILocation(line: 1473, column: 6, scope: !12075)
!12095 = !DILocation(line: 1475, column: 9, scope: !12096)
!12096 = distinct !DILexicalBlock(scope: !12075, file: !3, line: 1475, column: 2)
!12097 = !DILocation(line: 1475, column: 22, scope: !12096)
!12098 = !DILocation(line: 1475, column: 26, scope: !12096)
!12099 = !DILocation(line: 1475, column: 20, scope: !12096)
!12100 = !DILocation(line: 1475, column: 7, scope: !12096)
!12101 = !DILocation(line: 1475, column: 34, scope: !12102)
!12102 = distinct !DILexicalBlock(scope: !12096, file: !3, line: 1475, column: 2)
!12103 = !DILocation(line: 1475, column: 38, scope: !12102)
!12104 = !DILocation(line: 1475, column: 42, scope: !12102)
!12105 = !DILocation(line: 1475, column: 36, scope: !12102)
!12106 = !DILocation(line: 1475, column: 2, scope: !12096)
!12107 = !DILocation(line: 1476, column: 3, scope: !12108)
!12108 = distinct !DILexicalBlock(scope: !12102, file: !3, line: 1475, column: 68)
!12109 = !DILocation(line: 1479, column: 2, scope: !12108)
!12110 = !DILocation(line: 1475, column: 54, scope: !12102)
!12111 = !DILocation(line: 1475, column: 59, scope: !12102)
!12112 = !DILocation(line: 1475, column: 2, scope: !12102)
!12113 = distinct !{!12113, !12106, !12114}
!12114 = !DILocation(line: 1479, column: 2, scope: !12096)
!12115 = !DILocation(line: 1480, column: 9, scope: !12075)
!12116 = !DILocation(line: 1480, column: 7, scope: !12075)
!12117 = !DILocation(line: 1481, column: 7, scope: !12075)
!12118 = !DILocation(line: 1482, column: 2, scope: !12075)
!12119 = !DILocation(line: 1484, column: 27, scope: !12075)
!12120 = !DILocation(line: 1484, column: 2, scope: !12075)
!12121 = !DILocation(line: 1485, column: 20, scope: !12075)
!12122 = !DILocation(line: 1485, column: 2, scope: !12075)
!12123 = !DILocation(line: 1487, column: 2, scope: !12075)
!12124 = !DILocation(line: 1487, column: 6, scope: !12075)
!12125 = !DILocation(line: 1487, column: 18, scope: !12075)
!12126 = !DILocation(line: 1487, column: 33, scope: !12075)
!12127 = !DILocation(line: 1490, column: 20, scope: !12075)
!12128 = !DILocation(line: 1490, column: 2, scope: !12075)
!12129 = !DILocation(line: 1493, column: 9, scope: !12130)
!12130 = distinct !DILexicalBlock(scope: !12075, file: !3, line: 1493, column: 2)
!12131 = !DILocation(line: 1493, column: 22, scope: !12130)
!12132 = !DILocation(line: 1493, column: 26, scope: !12130)
!12133 = !DILocation(line: 1493, column: 20, scope: !12130)
!12134 = !DILocation(line: 1493, column: 7, scope: !12130)
!12135 = !DILocation(line: 1493, column: 34, scope: !12136)
!12136 = distinct !DILexicalBlock(scope: !12130, file: !3, line: 1493, column: 2)
!12137 = !DILocation(line: 1493, column: 38, scope: !12136)
!12138 = !DILocation(line: 1493, column: 42, scope: !12136)
!12139 = !DILocation(line: 1493, column: 36, scope: !12136)
!12140 = !DILocation(line: 1493, column: 2, scope: !12130)
!12141 = !DILocation(line: 1494, column: 3, scope: !12136)
!12142 = !DILocation(line: 1493, column: 54, scope: !12136)
!12143 = !DILocation(line: 1493, column: 59, scope: !12136)
!12144 = !DILocation(line: 1493, column: 2, scope: !12136)
!12145 = distinct !{!12145, !12140, !12146}
!12146 = !DILocation(line: 1494, column: 3, scope: !12130)
!12147 = !DILocation(line: 1499, column: 7, scope: !12075)
!12148 = !DILocation(line: 1500, column: 2, scope: !12075)
!12149 = !DILocation(line: 1502, column: 19, scope: !12075)
!12150 = !DILocation(line: 1502, column: 2, scope: !12075)
!12151 = !DILocation(line: 1503, column: 28, scope: !12075)
!12152 = !DILocation(line: 1503, column: 2, scope: !12075)
!12153 = !DILocation(line: 1504, column: 1, scope: !12075)
!12154 = distinct !DISubprogram(name: "macb_is_gem", scope: !9997, file: !9997, line: 1294, type: !12155, scopeLine: 1295, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!12155 = !DISubroutineType(types: !12156)
!12156 = !{!540, !10238}
!12157 = !DILocalVariable(name: "bp", arg: 1, scope: !12154, file: !9997, line: 1294, type: !10238)
!12158 = !DILocation(line: 1294, column: 45, scope: !12154)
!12159 = !DILocation(line: 1296, column: 12, scope: !12154)
!12160 = !DILocation(line: 1296, column: 16, scope: !12154)
!12161 = !DILocation(line: 1296, column: 21, scope: !12154)
!12162 = !DILocation(line: 1296, column: 10, scope: !12154)
!12163 = !DILocation(line: 1296, column: 9, scope: !12154)
!12164 = !DILocation(line: 1296, column: 2, scope: !12154)
!12165 = distinct !DISubprogram(name: "pm_runtime_mark_last_busy", scope: !11610, file: !11610, line: 194, type: !4195, scopeLine: 195, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!12166 = !DILocalVariable(name: "dev", arg: 1, scope: !12165, file: !11610, line: 194, type: !4172)
!12167 = !DILocation(line: 194, column: 61, scope: !12165)
!12168 = !DILocation(line: 196, column: 2, scope: !12165)
!12169 = !DILocation(line: 196, column: 2, scope: !12170)
!12170 = distinct !DILexicalBlock(scope: !12165, file: !11610, line: 196, column: 2)
!12171 = !DILocation(line: 196, column: 2, scope: !12172)
!12172 = distinct !DILexicalBlock(scope: !12170, file: !11610, line: 196, column: 2)
!12173 = !DILocation(line: 196, column: 2, scope: !12174)
!12174 = distinct !DILexicalBlock(scope: !12170, file: !11610, line: 196, column: 2)
!12175 = !DILocation(line: 197, column: 1, scope: !12165)
!12176 = distinct !DISubprogram(name: "pm_runtime_put_autosuspend", scope: !11610, file: !11610, line: 429, type: !4205, scopeLine: 430, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!12177 = !DILocalVariable(name: "dev", arg: 1, scope: !12176, file: !11610, line: 429, type: !4172)
!12178 = !DILocation(line: 429, column: 61, scope: !12176)
!12179 = !DILocation(line: 431, column: 30, scope: !12176)
!12180 = !DILocation(line: 431, column: 9, scope: !12176)
!12181 = !DILocation(line: 431, column: 2, scope: !12176)
!12182 = distinct !DISubprogram(name: "clk_disable_unprepare", scope: !10302, file: !10302, line: 921, type: !12183, scopeLine: 922, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!12183 = !DISubroutineType(types: !12184)
!12184 = !{null, !10300}
!12185 = !DILocalVariable(name: "clk", arg: 1, scope: !12182, file: !10302, line: 921, type: !10300)
!12186 = !DILocation(line: 921, column: 54, scope: !12182)
!12187 = !DILocation(line: 923, column: 14, scope: !12182)
!12188 = !DILocation(line: 923, column: 2, scope: !12182)
!12189 = !DILocation(line: 924, column: 16, scope: !12182)
!12190 = !DILocation(line: 924, column: 2, scope: !12182)
!12191 = !DILocation(line: 925, column: 1, scope: !12182)
!12192 = distinct !DISubprogram(name: "pm_runtime_disable", scope: !11610, file: !11610, line: 524, type: !4195, scopeLine: 525, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!12193 = !DILocalVariable(name: "dev", arg: 1, scope: !12192, file: !11610, line: 524, type: !4172)
!12194 = !DILocation(line: 524, column: 54, scope: !12192)
!12195 = !DILocation(line: 526, column: 23, scope: !12192)
!12196 = !DILocation(line: 526, column: 2, scope: !12192)
!12197 = !DILocation(line: 527, column: 1, scope: !12192)
!12198 = distinct !DISubprogram(name: "pm_runtime_set_suspended", scope: !11610, file: !11610, line: 509, type: !4205, scopeLine: 510, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!12199 = !DILocalVariable(name: "dev", arg: 1, scope: !12198, file: !11610, line: 509, type: !4172)
!12200 = !DILocation(line: 509, column: 59, scope: !12198)
!12201 = !DILocation(line: 511, column: 33, scope: !12198)
!12202 = !DILocation(line: 511, column: 9, scope: !12198)
!12203 = !DILocation(line: 511, column: 2, scope: !12198)
!12204 = distinct !DISubprogram(name: "pm_runtime_dont_use_autosuspend", scope: !11610, file: !11610, line: 550, type: !4195, scopeLine: 551, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!12205 = !DILocalVariable(name: "dev", arg: 1, scope: !12204, file: !11610, line: 550, type: !4172)
!12206 = !DILocation(line: 550, column: 67, scope: !12204)
!12207 = !DILocation(line: 552, column: 31, scope: !12204)
!12208 = !DILocation(line: 552, column: 2, scope: !12204)
!12209 = !DILocation(line: 553, column: 1, scope: !12204)
!12210 = distinct !DISubprogram(name: "macb_clk_init", scope: !3, file: !3, line: 3568, type: !10837, scopeLine: 3571, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!12211 = !DILocalVariable(name: "pdev", arg: 1, scope: !12210, file: !3, line: 3568, type: !10260)
!12212 = !DILocation(line: 3568, column: 50, scope: !12210)
!12213 = !DILocalVariable(name: "pclk", arg: 2, scope: !12210, file: !3, line: 3568, type: !10839)
!12214 = !DILocation(line: 3568, column: 69, scope: !12210)
!12215 = !DILocalVariable(name: "hclk", arg: 3, scope: !12210, file: !3, line: 3569, type: !10839)
!12216 = !DILocation(line: 3569, column: 18, scope: !12210)
!12217 = !DILocalVariable(name: "tx_clk", arg: 4, scope: !12210, file: !3, line: 3569, type: !10839)
!12218 = !DILocation(line: 3569, column: 37, scope: !12210)
!12219 = !DILocalVariable(name: "rx_clk", arg: 5, scope: !12210, file: !3, line: 3570, type: !10839)
!12220 = !DILocation(line: 3570, column: 18, scope: !12210)
!12221 = !DILocalVariable(name: "tsu_clk", arg: 6, scope: !12210, file: !3, line: 3570, type: !10839)
!12222 = !DILocation(line: 3570, column: 39, scope: !12210)
!12223 = !DILocalVariable(name: "pdata", scope: !12210, file: !3, line: 3572, type: !12224)
!12224 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12225, size: 64)
!12225 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "macb_platform_data", file: !9997, line: 1309, size: 128, elements: !12226)
!12226 = !{!12227, !12228}
!12227 = !DIDerivedType(tag: DW_TAG_member, name: "pclk", scope: !12225, file: !9997, line: 1310, baseType: !10300, size: 64)
!12228 = !DIDerivedType(tag: DW_TAG_member, name: "hclk", scope: !12225, file: !9997, line: 1311, baseType: !10300, size: 64, offset: 64)
!12229 = !DILocation(line: 3572, column: 29, scope: !12210)
!12230 = !DILocalVariable(name: "err", scope: !12210, file: !3, line: 3573, type: !37)
!12231 = !DILocation(line: 3573, column: 6, scope: !12210)
!12232 = !DILocation(line: 3575, column: 28, scope: !12210)
!12233 = !DILocation(line: 3575, column: 34, scope: !12210)
!12234 = !DILocation(line: 3575, column: 10, scope: !12210)
!12235 = !DILocation(line: 3575, column: 8, scope: !12210)
!12236 = !DILocation(line: 3576, column: 6, scope: !12237)
!12237 = distinct !DILexicalBlock(scope: !12210, file: !3, line: 3576, column: 6)
!12238 = !DILocation(line: 3576, column: 6, scope: !12210)
!12239 = !DILocation(line: 3577, column: 11, scope: !12240)
!12240 = distinct !DILexicalBlock(scope: !12237, file: !3, line: 3576, column: 13)
!12241 = !DILocation(line: 3577, column: 18, scope: !12240)
!12242 = !DILocation(line: 3577, column: 4, scope: !12240)
!12243 = !DILocation(line: 3577, column: 9, scope: !12240)
!12244 = !DILocation(line: 3578, column: 11, scope: !12240)
!12245 = !DILocation(line: 3578, column: 18, scope: !12240)
!12246 = !DILocation(line: 3578, column: 4, scope: !12240)
!12247 = !DILocation(line: 3578, column: 9, scope: !12240)
!12248 = !DILocation(line: 3579, column: 2, scope: !12240)
!12249 = !DILocation(line: 3580, column: 25, scope: !12250)
!12250 = distinct !DILexicalBlock(scope: !12237, file: !3, line: 3579, column: 9)
!12251 = !DILocation(line: 3580, column: 31, scope: !12250)
!12252 = !DILocation(line: 3580, column: 11, scope: !12250)
!12253 = !DILocation(line: 3580, column: 4, scope: !12250)
!12254 = !DILocation(line: 3580, column: 9, scope: !12250)
!12255 = !DILocation(line: 3581, column: 25, scope: !12250)
!12256 = !DILocation(line: 3581, column: 31, scope: !12250)
!12257 = !DILocation(line: 3581, column: 11, scope: !12250)
!12258 = !DILocation(line: 3581, column: 4, scope: !12250)
!12259 = !DILocation(line: 3581, column: 9, scope: !12250)
!12260 = !DILocation(line: 3584, column: 22, scope: !12261)
!12261 = distinct !DILexicalBlock(scope: !12210, file: !3, line: 3584, column: 6)
!12262 = !DILocation(line: 3584, column: 21, scope: !12261)
!12263 = !DILocation(line: 3584, column: 6, scope: !12261)
!12264 = !DILocation(line: 3584, column: 6, scope: !12210)
!12265 = !DILocation(line: 3585, column: 18, scope: !12266)
!12266 = distinct !DILexicalBlock(scope: !12261, file: !3, line: 3584, column: 29)
!12267 = !DILocation(line: 3585, column: 17, scope: !12266)
!12268 = !DILocation(line: 3585, column: 9, scope: !12266)
!12269 = !DILocation(line: 3585, column: 7, scope: !12266)
!12270 = !DILocation(line: 3586, column: 8, scope: !12271)
!12271 = distinct !DILexicalBlock(scope: !12266, file: !3, line: 3586, column: 7)
!12272 = !DILocation(line: 3586, column: 7, scope: !12266)
!12273 = !DILocation(line: 3587, column: 8, scope: !12271)
!12274 = !DILocation(line: 3587, column: 4, scope: !12271)
!12275 = !DILocation(line: 3589, column: 3, scope: !12266)
!12276 = !DILocation(line: 3590, column: 10, scope: !12266)
!12277 = !DILocation(line: 3590, column: 3, scope: !12266)
!12278 = !DILocation(line: 3593, column: 22, scope: !12279)
!12279 = distinct !DILexicalBlock(scope: !12210, file: !3, line: 3593, column: 6)
!12280 = !DILocation(line: 3593, column: 21, scope: !12279)
!12281 = !DILocation(line: 3593, column: 6, scope: !12279)
!12282 = !DILocation(line: 3593, column: 6, scope: !12210)
!12283 = !DILocation(line: 3594, column: 18, scope: !12284)
!12284 = distinct !DILexicalBlock(scope: !12279, file: !3, line: 3593, column: 29)
!12285 = !DILocation(line: 3594, column: 17, scope: !12284)
!12286 = !DILocation(line: 3594, column: 9, scope: !12284)
!12287 = !DILocation(line: 3594, column: 7, scope: !12284)
!12288 = !DILocation(line: 3595, column: 8, scope: !12289)
!12289 = distinct !DILexicalBlock(scope: !12284, file: !3, line: 3595, column: 7)
!12290 = !DILocation(line: 3595, column: 7, scope: !12284)
!12291 = !DILocation(line: 3596, column: 8, scope: !12289)
!12292 = !DILocation(line: 3596, column: 4, scope: !12289)
!12293 = !DILocation(line: 3598, column: 3, scope: !12284)
!12294 = !DILocation(line: 3599, column: 10, scope: !12284)
!12295 = !DILocation(line: 3599, column: 3, scope: !12284)
!12296 = !DILocation(line: 3602, column: 35, scope: !12210)
!12297 = !DILocation(line: 3602, column: 41, scope: !12210)
!12298 = !DILocation(line: 3602, column: 12, scope: !12210)
!12299 = !DILocation(line: 3602, column: 3, scope: !12210)
!12300 = !DILocation(line: 3602, column: 10, scope: !12210)
!12301 = !DILocation(line: 3603, column: 14, scope: !12302)
!12302 = distinct !DILexicalBlock(scope: !12210, file: !3, line: 3603, column: 6)
!12303 = !DILocation(line: 3603, column: 13, scope: !12302)
!12304 = !DILocation(line: 3603, column: 6, scope: !12302)
!12305 = !DILocation(line: 3603, column: 6, scope: !12210)
!12306 = !DILocation(line: 3604, column: 19, scope: !12302)
!12307 = !DILocation(line: 3604, column: 18, scope: !12302)
!12308 = !DILocation(line: 3604, column: 10, scope: !12302)
!12309 = !DILocation(line: 3604, column: 3, scope: !12302)
!12310 = !DILocation(line: 3606, column: 35, scope: !12210)
!12311 = !DILocation(line: 3606, column: 41, scope: !12210)
!12312 = !DILocation(line: 3606, column: 12, scope: !12210)
!12313 = !DILocation(line: 3606, column: 3, scope: !12210)
!12314 = !DILocation(line: 3606, column: 10, scope: !12210)
!12315 = !DILocation(line: 3607, column: 14, scope: !12316)
!12316 = distinct !DILexicalBlock(scope: !12210, file: !3, line: 3607, column: 6)
!12317 = !DILocation(line: 3607, column: 13, scope: !12316)
!12318 = !DILocation(line: 3607, column: 6, scope: !12316)
!12319 = !DILocation(line: 3607, column: 6, scope: !12210)
!12320 = !DILocation(line: 3608, column: 19, scope: !12316)
!12321 = !DILocation(line: 3608, column: 18, scope: !12316)
!12322 = !DILocation(line: 3608, column: 10, scope: !12316)
!12323 = !DILocation(line: 3608, column: 3, scope: !12316)
!12324 = !DILocation(line: 3610, column: 36, scope: !12210)
!12325 = !DILocation(line: 3610, column: 42, scope: !12210)
!12326 = !DILocation(line: 3610, column: 13, scope: !12210)
!12327 = !DILocation(line: 3610, column: 3, scope: !12210)
!12328 = !DILocation(line: 3610, column: 11, scope: !12210)
!12329 = !DILocation(line: 3611, column: 14, scope: !12330)
!12330 = distinct !DILexicalBlock(scope: !12210, file: !3, line: 3611, column: 6)
!12331 = !DILocation(line: 3611, column: 13, scope: !12330)
!12332 = !DILocation(line: 3611, column: 6, scope: !12330)
!12333 = !DILocation(line: 3611, column: 6, scope: !12210)
!12334 = !DILocation(line: 3612, column: 19, scope: !12330)
!12335 = !DILocation(line: 3612, column: 18, scope: !12330)
!12336 = !DILocation(line: 3612, column: 10, scope: !12330)
!12337 = !DILocation(line: 3612, column: 3, scope: !12330)
!12338 = !DILocation(line: 3614, column: 28, scope: !12210)
!12339 = !DILocation(line: 3614, column: 27, scope: !12210)
!12340 = !DILocation(line: 3614, column: 8, scope: !12210)
!12341 = !DILocation(line: 3614, column: 6, scope: !12210)
!12342 = !DILocation(line: 3615, column: 6, scope: !12343)
!12343 = distinct !DILexicalBlock(scope: !12210, file: !3, line: 3615, column: 6)
!12344 = !DILocation(line: 3615, column: 6, scope: !12210)
!12345 = !DILocation(line: 3616, column: 3, scope: !12346)
!12346 = distinct !DILexicalBlock(scope: !12343, file: !3, line: 3615, column: 11)
!12347 = !DILocation(line: 3617, column: 10, scope: !12346)
!12348 = !DILocation(line: 3617, column: 3, scope: !12346)
!12349 = !DILocation(line: 3620, column: 28, scope: !12210)
!12350 = !DILocation(line: 3620, column: 27, scope: !12210)
!12351 = !DILocation(line: 3620, column: 8, scope: !12210)
!12352 = !DILocation(line: 3620, column: 6, scope: !12210)
!12353 = !DILocation(line: 3621, column: 6, scope: !12354)
!12354 = distinct !DILexicalBlock(scope: !12210, file: !3, line: 3621, column: 6)
!12355 = !DILocation(line: 3621, column: 6, scope: !12210)
!12356 = !DILocation(line: 3622, column: 3, scope: !12357)
!12357 = distinct !DILexicalBlock(scope: !12354, file: !3, line: 3621, column: 11)
!12358 = !DILocation(line: 3623, column: 3, scope: !12357)
!12359 = !DILocation(line: 3626, column: 28, scope: !12210)
!12360 = !DILocation(line: 3626, column: 27, scope: !12210)
!12361 = !DILocation(line: 3626, column: 8, scope: !12210)
!12362 = !DILocation(line: 3626, column: 6, scope: !12210)
!12363 = !DILocation(line: 3627, column: 6, scope: !12364)
!12364 = distinct !DILexicalBlock(scope: !12210, file: !3, line: 3627, column: 6)
!12365 = !DILocation(line: 3627, column: 6, scope: !12210)
!12366 = !DILocation(line: 3628, column: 3, scope: !12367)
!12367 = distinct !DILexicalBlock(scope: !12364, file: !3, line: 3627, column: 11)
!12368 = !DILocation(line: 3629, column: 3, scope: !12367)
!12369 = !DILocation(line: 3632, column: 28, scope: !12210)
!12370 = !DILocation(line: 3632, column: 27, scope: !12210)
!12371 = !DILocation(line: 3632, column: 8, scope: !12210)
!12372 = !DILocation(line: 3632, column: 6, scope: !12210)
!12373 = !DILocation(line: 3633, column: 6, scope: !12374)
!12374 = distinct !DILexicalBlock(scope: !12210, file: !3, line: 3633, column: 6)
!12375 = !DILocation(line: 3633, column: 6, scope: !12210)
!12376 = !DILocation(line: 3634, column: 3, scope: !12377)
!12377 = distinct !DILexicalBlock(scope: !12374, file: !3, line: 3633, column: 11)
!12378 = !DILocation(line: 3635, column: 3, scope: !12377)
!12379 = !DILocation(line: 3638, column: 28, scope: !12210)
!12380 = !DILocation(line: 3638, column: 27, scope: !12210)
!12381 = !DILocation(line: 3638, column: 8, scope: !12210)
!12382 = !DILocation(line: 3638, column: 6, scope: !12210)
!12383 = !DILocation(line: 3639, column: 6, scope: !12384)
!12384 = distinct !DILexicalBlock(scope: !12210, file: !3, line: 3639, column: 6)
!12385 = !DILocation(line: 3639, column: 6, scope: !12210)
!12386 = !DILocation(line: 3640, column: 3, scope: !12387)
!12387 = distinct !DILexicalBlock(scope: !12384, file: !3, line: 3639, column: 11)
!12388 = !DILocation(line: 3641, column: 3, scope: !12387)
!12389 = !DILocation(line: 3644, column: 2, scope: !12210)
!12390 = !DILabel(scope: !12210, name: "err_disable_rxclk", file: !3, line: 3646)
!12391 = !DILocation(line: 3646, column: 1, scope: !12210)
!12392 = !DILocation(line: 3647, column: 25, scope: !12210)
!12393 = !DILocation(line: 3647, column: 24, scope: !12210)
!12394 = !DILocation(line: 3647, column: 2, scope: !12210)
!12395 = !DILabel(scope: !12210, name: "err_disable_txclk", file: !3, line: 3649)
!12396 = !DILocation(line: 3649, column: 1, scope: !12210)
!12397 = !DILocation(line: 3650, column: 25, scope: !12210)
!12398 = !DILocation(line: 3650, column: 24, scope: !12210)
!12399 = !DILocation(line: 3650, column: 2, scope: !12210)
!12400 = !DILabel(scope: !12210, name: "err_disable_hclk", file: !3, line: 3652)
!12401 = !DILocation(line: 3652, column: 1, scope: !12210)
!12402 = !DILocation(line: 3653, column: 25, scope: !12210)
!12403 = !DILocation(line: 3653, column: 24, scope: !12210)
!12404 = !DILocation(line: 3653, column: 2, scope: !12210)
!12405 = !DILabel(scope: !12210, name: "err_disable_pclk", file: !3, line: 3655)
!12406 = !DILocation(line: 3655, column: 1, scope: !12210)
!12407 = !DILocation(line: 3656, column: 25, scope: !12210)
!12408 = !DILocation(line: 3656, column: 24, scope: !12210)
!12409 = !DILocation(line: 3656, column: 2, scope: !12210)
!12410 = !DILocation(line: 3658, column: 9, scope: !12210)
!12411 = !DILocation(line: 3658, column: 2, scope: !12210)
!12412 = !DILocation(line: 3659, column: 1, scope: !12210)
!12413 = distinct !DISubprogram(name: "macb_init", scope: !3, file: !3, line: 3661, type: !10813, scopeLine: 3662, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!12414 = !DILocation(line: 327, column: 67, scope: !11066, inlinedAt: !12415)
!12415 = distinct !DILocation(line: 3785, column: 4, scope: !12416)
!12416 = distinct !DILexicalBlock(scope: !12417, file: !3, line: 3785, column: 4)
!12417 = distinct !DILexicalBlock(scope: !12418, file: !3, line: 3775, column: 36)
!12418 = distinct !DILexicalBlock(scope: !12419, file: !3, line: 3775, column: 7)
!12419 = distinct !DILexicalBlock(scope: !12420, file: !3, line: 3773, column: 26)
!12420 = distinct !DILexicalBlock(scope: !12413, file: !3, line: 3773, column: 6)
!12421 = !DILocalVariable(name: "pdev", arg: 1, scope: !12413, file: !3, line: 3661, type: !10260)
!12422 = !DILocation(line: 3661, column: 46, scope: !12413)
!12423 = !DILocalVariable(name: "dev", scope: !12413, file: !3, line: 3663, type: !295)
!12424 = !DILocation(line: 3663, column: 21, scope: !12413)
!12425 = !DILocation(line: 3663, column: 48, scope: !12413)
!12426 = !DILocation(line: 3663, column: 27, scope: !12413)
!12427 = !DILocalVariable(name: "hw_q", scope: !12413, file: !3, line: 3664, type: !7)
!12428 = !DILocation(line: 3664, column: 15, scope: !12413)
!12429 = !DILocalVariable(name: "q", scope: !12413, file: !3, line: 3664, type: !7)
!12430 = !DILocation(line: 3664, column: 21, scope: !12413)
!12431 = !DILocalVariable(name: "bp", scope: !12413, file: !3, line: 3665, type: !10238)
!12432 = !DILocation(line: 3665, column: 15, scope: !12413)
!12433 = !DILocation(line: 3665, column: 32, scope: !12413)
!12434 = !DILocation(line: 3665, column: 20, scope: !12413)
!12435 = !DILocalVariable(name: "queue", scope: !12413, file: !3, line: 3666, type: !10234)
!12436 = !DILocation(line: 3666, column: 21, scope: !12413)
!12437 = !DILocalVariable(name: "err", scope: !12413, file: !3, line: 3667, type: !37)
!12438 = !DILocation(line: 3667, column: 6, scope: !12413)
!12439 = !DILocalVariable(name: "val", scope: !12413, file: !3, line: 3668, type: !707)
!12440 = !DILocation(line: 3668, column: 6, scope: !12413)
!12441 = !DILocalVariable(name: "reg", scope: !12413, file: !3, line: 3668, type: !707)
!12442 = !DILocation(line: 3668, column: 11, scope: !12413)
!12443 = !DILocation(line: 3670, column: 2, scope: !12413)
!12444 = !DILocation(line: 3670, column: 6, scope: !12413)
!12445 = !DILocation(line: 3670, column: 19, scope: !12413)
!12446 = !DILocation(line: 3671, column: 2, scope: !12413)
!12447 = !DILocation(line: 3671, column: 6, scope: !12413)
!12448 = !DILocation(line: 3671, column: 19, scope: !12413)
!12449 = !DILocation(line: 3677, column: 12, scope: !12450)
!12450 = distinct !DILexicalBlock(scope: !12413, file: !3, line: 3677, column: 2)
!12451 = !DILocation(line: 3677, column: 19, scope: !12450)
!12452 = !DILocation(line: 3677, column: 7, scope: !12450)
!12453 = !DILocation(line: 3677, column: 24, scope: !12454)
!12454 = distinct !DILexicalBlock(scope: !12450, file: !3, line: 3677, column: 2)
!12455 = !DILocation(line: 3677, column: 29, scope: !12454)
!12456 = !DILocation(line: 3677, column: 2, scope: !12450)
!12457 = !DILocation(line: 3678, column: 9, scope: !12458)
!12458 = distinct !DILexicalBlock(scope: !12459, file: !3, line: 3678, column: 7)
!12459 = distinct !DILexicalBlock(scope: !12454, file: !3, line: 3677, column: 56)
!12460 = !DILocation(line: 3678, column: 13, scope: !12458)
!12461 = !DILocation(line: 3678, column: 32, scope: !12458)
!12462 = !DILocation(line: 3678, column: 29, scope: !12458)
!12463 = !DILocation(line: 3678, column: 24, scope: !12458)
!12464 = !DILocation(line: 3678, column: 7, scope: !12459)
!12465 = !DILocation(line: 3679, column: 4, scope: !12458)
!12466 = !DILocation(line: 3681, column: 12, scope: !12459)
!12467 = !DILocation(line: 3681, column: 16, scope: !12459)
!12468 = !DILocation(line: 3681, column: 23, scope: !12459)
!12469 = !DILocation(line: 3681, column: 9, scope: !12459)
!12470 = !DILocation(line: 3682, column: 15, scope: !12459)
!12471 = !DILocation(line: 3682, column: 3, scope: !12459)
!12472 = !DILocation(line: 3682, column: 10, scope: !12459)
!12473 = !DILocation(line: 3682, column: 13, scope: !12459)
!12474 = !DILocation(line: 3683, column: 18, scope: !12459)
!12475 = !DILocation(line: 3683, column: 24, scope: !12459)
!12476 = !DILocation(line: 3683, column: 31, scope: !12459)
!12477 = !DILocation(line: 3683, column: 3, scope: !12459)
!12478 = !DILocation(line: 3684, column: 7, scope: !12479)
!12479 = distinct !DILexicalBlock(scope: !12459, file: !3, line: 3684, column: 7)
!12480 = !DILocation(line: 3684, column: 7, scope: !12459)
!12481 = !DILocation(line: 3685, column: 18, scope: !12482)
!12482 = distinct !DILexicalBlock(scope: !12479, file: !3, line: 3684, column: 13)
!12483 = !DILocation(line: 3685, column: 4, scope: !12482)
!12484 = !DILocation(line: 3685, column: 11, scope: !12482)
!12485 = !DILocation(line: 3685, column: 16, scope: !12482)
!12486 = !DILocation(line: 3686, column: 18, scope: !12482)
!12487 = !DILocation(line: 3686, column: 4, scope: !12482)
!12488 = !DILocation(line: 3686, column: 11, scope: !12482)
!12489 = !DILocation(line: 3686, column: 16, scope: !12482)
!12490 = !DILocation(line: 3687, column: 18, scope: !12482)
!12491 = !DILocation(line: 3687, column: 4, scope: !12482)
!12492 = !DILocation(line: 3687, column: 11, scope: !12482)
!12493 = !DILocation(line: 3687, column: 16, scope: !12482)
!12494 = !DILocation(line: 3688, column: 18, scope: !12482)
!12495 = !DILocation(line: 3688, column: 4, scope: !12482)
!12496 = !DILocation(line: 3688, column: 11, scope: !12482)
!12497 = !DILocation(line: 3688, column: 16, scope: !12482)
!12498 = !DILocation(line: 3689, column: 18, scope: !12482)
!12499 = !DILocation(line: 3689, column: 4, scope: !12482)
!12500 = !DILocation(line: 3689, column: 11, scope: !12482)
!12501 = !DILocation(line: 3689, column: 16, scope: !12482)
!12502 = !DILocation(line: 3690, column: 18, scope: !12482)
!12503 = !DILocation(line: 3690, column: 4, scope: !12482)
!12504 = !DILocation(line: 3690, column: 11, scope: !12482)
!12505 = !DILocation(line: 3690, column: 16, scope: !12482)
!12506 = !DILocation(line: 3691, column: 18, scope: !12482)
!12507 = !DILocation(line: 3691, column: 4, scope: !12482)
!12508 = !DILocation(line: 3691, column: 11, scope: !12482)
!12509 = !DILocation(line: 3691, column: 16, scope: !12482)
!12510 = !DILocation(line: 3693, column: 8, scope: !12511)
!12511 = distinct !DILexicalBlock(scope: !12482, file: !3, line: 3693, column: 8)
!12512 = !DILocation(line: 3693, column: 12, scope: !12511)
!12513 = !DILocation(line: 3693, column: 23, scope: !12511)
!12514 = !DILocation(line: 3693, column: 8, scope: !12482)
!12515 = !DILocation(line: 3694, column: 5, scope: !12516)
!12516 = distinct !DILexicalBlock(scope: !12511, file: !3, line: 3693, column: 41)
!12517 = !DILocation(line: 3694, column: 12, scope: !12516)
!12518 = !DILocation(line: 3694, column: 18, scope: !12516)
!12519 = !DILocation(line: 3695, column: 5, scope: !12516)
!12520 = !DILocation(line: 3695, column: 12, scope: !12516)
!12521 = !DILocation(line: 3695, column: 18, scope: !12516)
!12522 = !DILocation(line: 3696, column: 4, scope: !12516)
!12523 = !DILocation(line: 3698, column: 3, scope: !12482)
!12524 = !DILocation(line: 3700, column: 4, scope: !12525)
!12525 = distinct !DILexicalBlock(scope: !12479, file: !3, line: 3698, column: 10)
!12526 = !DILocation(line: 3700, column: 11, scope: !12525)
!12527 = !DILocation(line: 3700, column: 16, scope: !12525)
!12528 = !DILocation(line: 3701, column: 4, scope: !12525)
!12529 = !DILocation(line: 3701, column: 11, scope: !12525)
!12530 = !DILocation(line: 3701, column: 16, scope: !12525)
!12531 = !DILocation(line: 3702, column: 4, scope: !12525)
!12532 = !DILocation(line: 3702, column: 11, scope: !12525)
!12533 = !DILocation(line: 3702, column: 16, scope: !12525)
!12534 = !DILocation(line: 3703, column: 4, scope: !12525)
!12535 = !DILocation(line: 3703, column: 11, scope: !12525)
!12536 = !DILocation(line: 3703, column: 16, scope: !12525)
!12537 = !DILocation(line: 3704, column: 4, scope: !12525)
!12538 = !DILocation(line: 3704, column: 11, scope: !12525)
!12539 = !DILocation(line: 3704, column: 16, scope: !12525)
!12540 = !DILocation(line: 3705, column: 4, scope: !12525)
!12541 = !DILocation(line: 3705, column: 11, scope: !12525)
!12542 = !DILocation(line: 3705, column: 16, scope: !12525)
!12543 = !DILocation(line: 3707, column: 8, scope: !12544)
!12544 = distinct !DILexicalBlock(scope: !12525, file: !3, line: 3707, column: 8)
!12545 = !DILocation(line: 3707, column: 12, scope: !12544)
!12546 = !DILocation(line: 3707, column: 23, scope: !12544)
!12547 = !DILocation(line: 3707, column: 8, scope: !12525)
!12548 = !DILocation(line: 3708, column: 5, scope: !12549)
!12549 = distinct !DILexicalBlock(scope: !12544, file: !3, line: 3707, column: 41)
!12550 = !DILocation(line: 3708, column: 12, scope: !12549)
!12551 = !DILocation(line: 3708, column: 18, scope: !12549)
!12552 = !DILocation(line: 3709, column: 5, scope: !12549)
!12553 = !DILocation(line: 3709, column: 12, scope: !12549)
!12554 = !DILocation(line: 3709, column: 18, scope: !12549)
!12555 = !DILocation(line: 3710, column: 4, scope: !12549)
!12556 = !DILocation(line: 3719, column: 33, scope: !12459)
!12557 = !DILocation(line: 3719, column: 39, scope: !12459)
!12558 = !DILocation(line: 3719, column: 16, scope: !12459)
!12559 = !DILocation(line: 3719, column: 3, scope: !12459)
!12560 = !DILocation(line: 3719, column: 10, scope: !12459)
!12561 = !DILocation(line: 3719, column: 14, scope: !12459)
!12562 = !DILocation(line: 3720, column: 27, scope: !12459)
!12563 = !DILocation(line: 3720, column: 33, scope: !12459)
!12564 = !DILocation(line: 3720, column: 38, scope: !12459)
!12565 = !DILocation(line: 3720, column: 45, scope: !12459)
!12566 = !DILocation(line: 3721, column: 25, scope: !12459)
!12567 = !DILocation(line: 3721, column: 30, scope: !12459)
!12568 = !DILocation(line: 3721, column: 36, scope: !12459)
!12569 = !DILocation(line: 3720, column: 9, scope: !12459)
!12570 = !DILocation(line: 3720, column: 7, scope: !12459)
!12571 = !DILocation(line: 3722, column: 7, scope: !12572)
!12572 = distinct !DILexicalBlock(scope: !12459, file: !3, line: 3722, column: 7)
!12573 = !DILocation(line: 3722, column: 7, scope: !12459)
!12574 = !DILocation(line: 3723, column: 4, scope: !12575)
!12575 = distinct !DILexicalBlock(scope: !12572, file: !3, line: 3722, column: 12)
!12576 = !DILocation(line: 3726, column: 11, scope: !12575)
!12577 = !DILocation(line: 3726, column: 4, scope: !12575)
!12578 = !DILocation(line: 3729, column: 3, scope: !12459)
!12579 = !DILocation(line: 3729, column: 3, scope: !12580)
!12580 = distinct !DILexicalBlock(scope: !12459, file: !3, line: 3729, column: 3)
!12581 = !DILocation(line: 3730, column: 4, scope: !12459)
!12582 = !DILocation(line: 3731, column: 2, scope: !12459)
!12583 = !DILocation(line: 3677, column: 48, scope: !12454)
!12584 = !DILocation(line: 3677, column: 2, scope: !12454)
!12585 = distinct !{!12585, !12456, !12586}
!12586 = !DILocation(line: 3731, column: 2, scope: !12450)
!12587 = !DILocation(line: 3733, column: 2, scope: !12413)
!12588 = !DILocation(line: 3733, column: 7, scope: !12413)
!12589 = !DILocation(line: 3733, column: 18, scope: !12413)
!12590 = !DILocation(line: 3736, column: 18, scope: !12591)
!12591 = distinct !DILexicalBlock(scope: !12413, file: !3, line: 3736, column: 6)
!12592 = !DILocation(line: 3736, column: 6, scope: !12591)
!12593 = !DILocation(line: 3736, column: 6, scope: !12413)
!12594 = !DILocation(line: 3737, column: 3, scope: !12595)
!12595 = distinct !DILexicalBlock(scope: !12591, file: !3, line: 3736, column: 23)
!12596 = !DILocation(line: 3737, column: 7, scope: !12595)
!12597 = !DILocation(line: 3737, column: 21, scope: !12595)
!12598 = !DILocation(line: 3738, column: 3, scope: !12595)
!12599 = !DILocation(line: 3738, column: 7, scope: !12595)
!12600 = !DILocation(line: 3738, column: 19, scope: !12595)
!12601 = !DILocation(line: 3738, column: 40, scope: !12595)
!12602 = !DILocation(line: 3739, column: 3, scope: !12595)
!12603 = !DILocation(line: 3739, column: 7, scope: !12595)
!12604 = !DILocation(line: 3739, column: 19, scope: !12595)
!12605 = !DILocation(line: 3739, column: 39, scope: !12595)
!12606 = !DILocation(line: 3740, column: 3, scope: !12595)
!12607 = !DILocation(line: 3740, column: 7, scope: !12595)
!12608 = !DILocation(line: 3740, column: 19, scope: !12595)
!12609 = !DILocation(line: 3740, column: 34, scope: !12595)
!12610 = !DILocation(line: 3741, column: 3, scope: !12595)
!12611 = !DILocation(line: 3741, column: 7, scope: !12595)
!12612 = !DILocation(line: 3741, column: 19, scope: !12595)
!12613 = !DILocation(line: 3741, column: 26, scope: !12595)
!12614 = !DILocation(line: 3742, column: 3, scope: !12595)
!12615 = !DILocation(line: 3742, column: 8, scope: !12595)
!12616 = !DILocation(line: 3742, column: 20, scope: !12595)
!12617 = !DILocation(line: 3743, column: 2, scope: !12595)
!12618 = !DILocation(line: 3744, column: 3, scope: !12619)
!12619 = distinct !DILexicalBlock(scope: !12591, file: !3, line: 3743, column: 9)
!12620 = !DILocation(line: 3744, column: 7, scope: !12619)
!12621 = !DILocation(line: 3744, column: 21, scope: !12619)
!12622 = !DILocation(line: 3745, column: 3, scope: !12619)
!12623 = !DILocation(line: 3745, column: 7, scope: !12619)
!12624 = !DILocation(line: 3745, column: 19, scope: !12619)
!12625 = !DILocation(line: 3745, column: 40, scope: !12619)
!12626 = !DILocation(line: 3746, column: 3, scope: !12619)
!12627 = !DILocation(line: 3746, column: 7, scope: !12619)
!12628 = !DILocation(line: 3746, column: 19, scope: !12619)
!12629 = !DILocation(line: 3746, column: 39, scope: !12619)
!12630 = !DILocation(line: 3747, column: 3, scope: !12619)
!12631 = !DILocation(line: 3747, column: 7, scope: !12619)
!12632 = !DILocation(line: 3747, column: 19, scope: !12619)
!12633 = !DILocation(line: 3747, column: 34, scope: !12619)
!12634 = !DILocation(line: 3748, column: 3, scope: !12619)
!12635 = !DILocation(line: 3748, column: 7, scope: !12619)
!12636 = !DILocation(line: 3748, column: 19, scope: !12619)
!12637 = !DILocation(line: 3748, column: 26, scope: !12619)
!12638 = !DILocation(line: 3749, column: 3, scope: !12619)
!12639 = !DILocation(line: 3749, column: 8, scope: !12619)
!12640 = !DILocation(line: 3749, column: 20, scope: !12619)
!12641 = !DILocation(line: 3753, column: 2, scope: !12413)
!12642 = !DILocation(line: 3753, column: 7, scope: !12413)
!12643 = !DILocation(line: 3753, column: 19, scope: !12413)
!12644 = !DILocation(line: 3756, column: 6, scope: !12645)
!12645 = distinct !DILexicalBlock(scope: !12413, file: !3, line: 3756, column: 6)
!12646 = !DILocation(line: 3756, column: 6, scope: !12413)
!12647 = !DILocation(line: 3757, column: 3, scope: !12645)
!12648 = !DILocation(line: 3757, column: 8, scope: !12645)
!12649 = !DILocation(line: 3757, column: 20, scope: !12645)
!12650 = !DILocation(line: 3760, column: 18, scope: !12651)
!12651 = distinct !DILexicalBlock(scope: !12413, file: !3, line: 3760, column: 6)
!12652 = !DILocation(line: 3760, column: 6, scope: !12651)
!12653 = !DILocation(line: 3760, column: 22, scope: !12651)
!12654 = !DILocation(line: 3760, column: 27, scope: !12651)
!12655 = !DILocation(line: 3760, column: 31, scope: !12651)
!12656 = !DILocation(line: 3760, column: 36, scope: !12651)
!12657 = !DILocation(line: 3760, column: 6, scope: !12413)
!12658 = !DILocation(line: 3761, column: 3, scope: !12651)
!12659 = !DILocation(line: 3761, column: 8, scope: !12651)
!12660 = !DILocation(line: 3761, column: 20, scope: !12651)
!12661 = !DILocation(line: 3762, column: 6, scope: !12662)
!12662 = distinct !DILexicalBlock(scope: !12413, file: !3, line: 3762, column: 6)
!12663 = !DILocation(line: 3762, column: 10, scope: !12662)
!12664 = !DILocation(line: 3762, column: 15, scope: !12662)
!12665 = !DILocation(line: 3762, column: 6, scope: !12413)
!12666 = !DILocation(line: 3763, column: 3, scope: !12662)
!12667 = !DILocation(line: 3763, column: 8, scope: !12662)
!12668 = !DILocation(line: 3763, column: 20, scope: !12662)
!12669 = !DILocation(line: 3764, column: 18, scope: !12413)
!12670 = !DILocation(line: 3764, column: 23, scope: !12413)
!12671 = !DILocation(line: 3764, column: 2, scope: !12413)
!12672 = !DILocation(line: 3764, column: 7, scope: !12413)
!12673 = !DILocation(line: 3764, column: 16, scope: !12413)
!12674 = !DILocation(line: 3770, column: 8, scope: !12413)
!12675 = !DILocation(line: 3770, column: 6, scope: !12413)
!12676 = !DILocalVariable(name: "__UNIQUE_ID___x556", scope: !12677, file: !3, line: 3771, type: !7)
!12677 = distinct !DILexicalBlock(scope: !12413, file: !3, line: 3771, column: 19)
!12678 = !DILocation(line: 3771, column: 19, scope: !12677)
!12679 = !DILocalVariable(name: "__UNIQUE_ID___y557", scope: !12677, file: !3, line: 3771, type: !7)
!12680 = !DILocation(line: 3771, column: 2, scope: !12413)
!12681 = !DILocation(line: 3771, column: 6, scope: !12413)
!12682 = !DILocation(line: 3771, column: 17, scope: !12413)
!12683 = !DILocation(line: 3773, column: 6, scope: !12420)
!12684 = !DILocation(line: 3773, column: 10, scope: !12420)
!12685 = !DILocation(line: 3773, column: 21, scope: !12420)
!12686 = !DILocation(line: 3773, column: 6, scope: !12413)
!12687 = !DILocation(line: 3775, column: 7, scope: !12418)
!12688 = !DILocation(line: 3775, column: 31, scope: !12418)
!12689 = !DILocation(line: 3775, column: 7, scope: !12419)
!12690 = !DILocation(line: 3777, column: 8, scope: !12417)
!12691 = !DILocation(line: 3778, column: 10, scope: !12417)
!12692 = !DILocation(line: 3778, column: 8, scope: !12417)
!12693 = !DILocation(line: 3779, column: 4, scope: !12417)
!12694 = !DILocation(line: 3781, column: 4, scope: !12417)
!12695 = !DILocation(line: 3781, column: 9, scope: !12417)
!12696 = !DILocation(line: 3781, column: 21, scope: !12417)
!12697 = !DILocation(line: 3783, column: 20, scope: !12417)
!12698 = !DILocation(line: 3783, column: 24, scope: !12417)
!12699 = !DILocation(line: 3783, column: 35, scope: !12417)
!12700 = !DILocation(line: 3783, column: 4, scope: !12417)
!12701 = !DILocation(line: 3784, column: 4, scope: !12417)
!12702 = !DILocation(line: 3784, column: 8, scope: !12417)
!12703 = !DILocation(line: 3784, column: 19, scope: !12417)
!12704 = !DILocation(line: 3784, column: 25, scope: !12417)
!12705 = !DILocation(line: 3785, column: 4, scope: !12417)
!12706 = !DILocation(line: 3785, column: 4, scope: !12416)
!12707 = !DILocation(line: 329, column: 10, scope: !11066, inlinedAt: !12415)
!12708 = !DILocation(line: 329, column: 16, scope: !11066, inlinedAt: !12415)
!12709 = !DILocation(line: 3786, column: 3, scope: !12417)
!12710 = !DILocation(line: 3787, column: 4, scope: !12418)
!12711 = !DILocation(line: 3787, column: 8, scope: !12418)
!12712 = !DILocation(line: 3787, column: 19, scope: !12418)
!12713 = !DILocation(line: 3788, column: 2, scope: !12419)
!12714 = !DILocation(line: 3790, column: 8, scope: !12715)
!12715 = distinct !DILexicalBlock(scope: !12413, file: !3, line: 3790, column: 6)
!12716 = !DILocation(line: 3790, column: 12, scope: !12715)
!12717 = !DILocation(line: 3790, column: 17, scope: !12715)
!12718 = !DILocation(line: 3790, column: 6, scope: !12413)
!12719 = !DILocation(line: 3791, column: 7, scope: !12720)
!12720 = distinct !DILexicalBlock(scope: !12715, file: !3, line: 3790, column: 46)
!12721 = !DILocation(line: 3792, column: 35, scope: !12722)
!12722 = distinct !DILexicalBlock(scope: !12720, file: !3, line: 3792, column: 7)
!12723 = !DILocation(line: 3792, column: 39, scope: !12722)
!12724 = !DILocation(line: 3792, column: 7, scope: !12722)
!12725 = !DILocation(line: 3792, column: 7, scope: !12720)
!12726 = !DILocation(line: 3793, column: 8, scope: !12722)
!12727 = !DILocation(line: 3793, column: 4, scope: !12722)
!12728 = !DILocation(line: 3794, column: 12, scope: !12729)
!12729 = distinct !DILexicalBlock(scope: !12722, file: !3, line: 3794, column: 12)
!12730 = !DILocation(line: 3794, column: 16, scope: !12729)
!12731 = !DILocation(line: 3794, column: 30, scope: !12729)
!12732 = !DILocation(line: 3794, column: 57, scope: !12729)
!12733 = !DILocation(line: 3795, column: 6, scope: !12729)
!12734 = !DILocation(line: 3795, column: 10, scope: !12729)
!12735 = !DILocation(line: 3795, column: 15, scope: !12729)
!12736 = !DILocation(line: 3794, column: 12, scope: !12722)
!12737 = !DILocation(line: 3796, column: 8, scope: !12729)
!12738 = !DILocation(line: 3796, column: 4, scope: !12729)
!12739 = !DILocation(line: 3797, column: 14, scope: !12740)
!12740 = distinct !DILexicalBlock(scope: !12729, file: !3, line: 3797, column: 12)
!12741 = !DILocation(line: 3797, column: 18, scope: !12740)
!12742 = !DILocation(line: 3797, column: 23, scope: !12740)
!12743 = !DILocation(line: 3797, column: 12, scope: !12729)
!12744 = !DILocation(line: 3798, column: 8, scope: !12740)
!12745 = !DILocation(line: 3798, column: 4, scope: !12740)
!12746 = !DILocation(line: 3800, column: 7, scope: !12747)
!12747 = distinct !DILexicalBlock(scope: !12720, file: !3, line: 3800, column: 7)
!12748 = !DILocation(line: 3800, column: 11, scope: !12747)
!12749 = !DILocation(line: 3800, column: 16, scope: !12747)
!12750 = !DILocation(line: 3800, column: 7, scope: !12720)
!12751 = !DILocation(line: 3801, column: 8, scope: !12747)
!12752 = !DILocation(line: 3801, column: 4, scope: !12747)
!12753 = !DILocation(line: 3803, column: 3, scope: !12754)
!12754 = distinct !DILexicalBlock(scope: !12755, file: !3, line: 3803, column: 3)
!12755 = distinct !DILexicalBlock(scope: !12720, file: !3, line: 3803, column: 3)
!12756 = !DILocation(line: 3803, column: 3, scope: !12755)
!12757 = !DILocation(line: 3804, column: 2, scope: !12720)
!12758 = !DILocation(line: 3807, column: 25, scope: !12413)
!12759 = !DILocation(line: 3807, column: 8, scope: !12413)
!12760 = !DILocation(line: 3807, column: 6, scope: !12413)
!12761 = !DILocation(line: 3808, column: 18, scope: !12413)
!12762 = !DILocation(line: 3808, column: 9, scope: !12413)
!12763 = !DILocation(line: 3808, column: 6, scope: !12413)
!12764 = !DILocation(line: 3809, column: 6, scope: !12765)
!12765 = distinct !DILexicalBlock(scope: !12413, file: !3, line: 3809, column: 6)
!12766 = !DILocation(line: 3809, column: 10, scope: !12765)
!12767 = !DILocation(line: 3809, column: 24, scope: !12765)
!12768 = !DILocation(line: 3809, column: 6, scope: !12413)
!12769 = !DILocation(line: 3810, column: 7, scope: !12765)
!12770 = !DILocation(line: 3810, column: 3, scope: !12765)
!12771 = !DILocation(line: 3811, column: 2, scope: !12413)
!12772 = !DILocation(line: 3813, column: 2, scope: !12413)
!12773 = !DILocation(line: 3814, column: 1, scope: !12413)
!12774 = distinct !DISubprogram(name: "dev_get_platdata", scope: !3804, file: !3804, line: 828, type: !12775, scopeLine: 829, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!12775 = !DISubroutineType(types: !12776)
!12776 = !{!570, !4513}
!12777 = !DILocalVariable(name: "dev", arg: 1, scope: !12774, file: !3804, line: 828, type: !4513)
!12778 = !DILocation(line: 828, column: 59, scope: !12774)
!12779 = !DILocation(line: 830, column: 9, scope: !12774)
!12780 = !DILocation(line: 830, column: 14, scope: !12774)
!12781 = !DILocation(line: 830, column: 2, scope: !12774)
!12782 = distinct !DISubprogram(name: "clk_prepare_enable", scope: !10302, file: !10302, line: 906, type: !12783, scopeLine: 907, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!12783 = !DISubroutineType(types: !12784)
!12784 = !{!37, !10300}
!12785 = !DILocalVariable(name: "clk", arg: 1, scope: !12782, file: !10302, line: 906, type: !10300)
!12786 = !DILocation(line: 906, column: 50, scope: !12782)
!12787 = !DILocalVariable(name: "ret", scope: !12782, file: !10302, line: 908, type: !37)
!12788 = !DILocation(line: 908, column: 6, scope: !12782)
!12789 = !DILocation(line: 910, column: 20, scope: !12782)
!12790 = !DILocation(line: 910, column: 8, scope: !12782)
!12791 = !DILocation(line: 910, column: 6, scope: !12782)
!12792 = !DILocation(line: 911, column: 6, scope: !12793)
!12793 = distinct !DILexicalBlock(scope: !12782, file: !10302, line: 911, column: 6)
!12794 = !DILocation(line: 911, column: 6, scope: !12782)
!12795 = !DILocation(line: 912, column: 10, scope: !12793)
!12796 = !DILocation(line: 912, column: 3, scope: !12793)
!12797 = !DILocation(line: 913, column: 19, scope: !12782)
!12798 = !DILocation(line: 913, column: 8, scope: !12782)
!12799 = !DILocation(line: 913, column: 6, scope: !12782)
!12800 = !DILocation(line: 914, column: 6, scope: !12801)
!12801 = distinct !DILexicalBlock(scope: !12782, file: !10302, line: 914, column: 6)
!12802 = !DILocation(line: 914, column: 6, scope: !12782)
!12803 = !DILocation(line: 915, column: 17, scope: !12801)
!12804 = !DILocation(line: 915, column: 3, scope: !12801)
!12805 = !DILocation(line: 917, column: 9, scope: !12782)
!12806 = !DILocation(line: 917, column: 2, scope: !12782)
!12807 = !DILocation(line: 918, column: 1, scope: !12782)
!12808 = distinct !DISubprogram(name: "platform_get_drvdata", scope: !10262, file: !10262, line: 231, type: !12809, scopeLine: 232, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!12809 = !DISubroutineType(types: !12810)
!12810 = !{!570, !12811}
!12811 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12812, size: 64)
!12812 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !10261)
!12813 = !DILocalVariable(name: "pdev", arg: 1, scope: !12808, file: !10262, line: 231, type: !12811)
!12814 = !DILocation(line: 231, column: 72, scope: !12808)
!12815 = !DILocation(line: 233, column: 26, scope: !12808)
!12816 = !DILocation(line: 233, column: 32, scope: !12808)
!12817 = !DILocation(line: 233, column: 9, scope: !12808)
!12818 = !DILocation(line: 233, column: 2, scope: !12808)
!12819 = distinct !DISubprogram(name: "macb_poll", scope: !3, file: !3, line: 1434, type: !10409, scopeLine: 1435, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!12820 = !DILocalVariable(name: "napi", arg: 1, scope: !12819, file: !3, line: 1434, type: !10399)
!12821 = !DILocation(line: 1434, column: 42, scope: !12819)
!12822 = !DILocalVariable(name: "budget", arg: 2, scope: !12819, file: !3, line: 1434, type: !37)
!12823 = !DILocation(line: 1434, column: 52, scope: !12819)
!12824 = !DILocalVariable(name: "queue", scope: !12819, file: !3, line: 1436, type: !10234)
!12825 = !DILocation(line: 1436, column: 21, scope: !12819)
!12826 = !DILocalVariable(name: "__mptr", scope: !12827, file: !3, line: 1436, type: !570)
!12827 = distinct !DILexicalBlock(scope: !12819, file: !3, line: 1436, column: 29)
!12828 = !DILocation(line: 1436, column: 29, scope: !12827)
!12829 = !DILocation(line: 1436, column: 29, scope: !12830)
!12830 = distinct !DILexicalBlock(scope: !12827, file: !3, line: 1436, column: 29)
!12831 = !DILocalVariable(name: "bp", scope: !12819, file: !3, line: 1437, type: !10238)
!12832 = !DILocation(line: 1437, column: 15, scope: !12819)
!12833 = !DILocation(line: 1437, column: 20, scope: !12819)
!12834 = !DILocation(line: 1437, column: 27, scope: !12819)
!12835 = !DILocalVariable(name: "work_done", scope: !12819, file: !3, line: 1438, type: !37)
!12836 = !DILocation(line: 1438, column: 6, scope: !12819)
!12837 = !DILocalVariable(name: "status", scope: !12819, file: !3, line: 1439, type: !707)
!12838 = !DILocation(line: 1439, column: 6, scope: !12819)
!12839 = !DILocation(line: 1441, column: 11, scope: !12819)
!12840 = !DILocation(line: 1441, column: 9, scope: !12819)
!12841 = !DILocation(line: 1442, column: 2, scope: !12819)
!12842 = !DILocation(line: 1444, column: 2, scope: !12843)
!12843 = distinct !DILexicalBlock(scope: !12844, file: !3, line: 1444, column: 2)
!12844 = distinct !DILexicalBlock(scope: !12819, file: !3, line: 1444, column: 2)
!12845 = !DILocation(line: 1444, column: 2, scope: !12844)
!12846 = !DILocation(line: 1447, column: 14, scope: !12819)
!12847 = !DILocation(line: 1447, column: 18, scope: !12819)
!12848 = !DILocation(line: 1447, column: 30, scope: !12819)
!12849 = !DILocation(line: 1447, column: 37, scope: !12819)
!12850 = !DILocation(line: 1447, column: 44, scope: !12819)
!12851 = !DILocation(line: 1447, column: 50, scope: !12819)
!12852 = !DILocation(line: 1447, column: 12, scope: !12819)
!12853 = !DILocation(line: 1448, column: 6, scope: !12854)
!12854 = distinct !DILexicalBlock(scope: !12819, file: !3, line: 1448, column: 6)
!12855 = !DILocation(line: 1448, column: 18, scope: !12854)
!12856 = !DILocation(line: 1448, column: 16, scope: !12854)
!12857 = !DILocation(line: 1448, column: 6, scope: !12819)
!12858 = !DILocation(line: 1449, column: 22, scope: !12859)
!12859 = distinct !DILexicalBlock(scope: !12854, file: !3, line: 1448, column: 26)
!12860 = !DILocation(line: 1449, column: 28, scope: !12859)
!12861 = !DILocation(line: 1449, column: 3, scope: !12859)
!12862 = !DILocation(line: 1452, column: 12, scope: !12859)
!12863 = !DILocation(line: 1452, column: 10, scope: !12859)
!12864 = !DILocation(line: 1453, column: 7, scope: !12865)
!12865 = distinct !DILexicalBlock(scope: !12859, file: !3, line: 1453, column: 7)
!12866 = !DILocation(line: 1453, column: 7, scope: !12859)
!12867 = !DILocation(line: 1454, column: 8, scope: !12868)
!12868 = distinct !DILexicalBlock(scope: !12869, file: !3, line: 1454, column: 8)
!12869 = distinct !DILexicalBlock(scope: !12865, file: !3, line: 1453, column: 15)
!12870 = !DILocation(line: 1454, column: 12, scope: !12868)
!12871 = !DILocation(line: 1454, column: 17, scope: !12868)
!12872 = !DILocation(line: 1454, column: 8, scope: !12869)
!12873 = !DILocation(line: 1455, column: 5, scope: !12868)
!12874 = !DILocation(line: 1456, column: 20, scope: !12869)
!12875 = !DILocation(line: 1456, column: 4, scope: !12869)
!12876 = !DILocation(line: 1457, column: 3, scope: !12869)
!12877 = !DILocation(line: 1458, column: 4, scope: !12878)
!12878 = distinct !DILexicalBlock(scope: !12865, file: !3, line: 1457, column: 10)
!12879 = !DILocation(line: 1460, column: 2, scope: !12859)
!12880 = !DILocation(line: 1464, column: 9, scope: !12819)
!12881 = !DILocation(line: 1464, column: 2, scope: !12819)
!12882 = distinct !DISubprogram(name: "devm_request_irq", scope: !4722, file: !4722, line: 203, type: !12883, scopeLine: 205, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!12883 = !DISubroutineType(types: !12884)
!12884 = !{!37, !4172, !7, !4843, !317, !297, !570}
!12885 = !DILocalVariable(name: "dev", arg: 1, scope: !12882, file: !4722, line: 203, type: !4172)
!12886 = !DILocation(line: 203, column: 33, scope: !12882)
!12887 = !DILocalVariable(name: "irq", arg: 2, scope: !12882, file: !4722, line: 203, type: !7)
!12888 = !DILocation(line: 203, column: 51, scope: !12882)
!12889 = !DILocalVariable(name: "handler", arg: 3, scope: !12882, file: !4722, line: 203, type: !4843)
!12890 = !DILocation(line: 203, column: 70, scope: !12882)
!12891 = !DILocalVariable(name: "irqflags", arg: 4, scope: !12882, file: !4722, line: 204, type: !317)
!12892 = !DILocation(line: 204, column: 18, scope: !12882)
!12893 = !DILocalVariable(name: "devname", arg: 5, scope: !12882, file: !4722, line: 204, type: !297)
!12894 = !DILocation(line: 204, column: 40, scope: !12882)
!12895 = !DILocalVariable(name: "dev_id", arg: 6, scope: !12882, file: !4722, line: 204, type: !570)
!12896 = !DILocation(line: 204, column: 55, scope: !12882)
!12897 = !DILocation(line: 206, column: 35, scope: !12882)
!12898 = !DILocation(line: 206, column: 40, scope: !12882)
!12899 = !DILocation(line: 206, column: 45, scope: !12882)
!12900 = !DILocation(line: 206, column: 60, scope: !12882)
!12901 = !DILocation(line: 207, column: 7, scope: !12882)
!12902 = !DILocation(line: 207, column: 16, scope: !12882)
!12903 = !DILocation(line: 206, column: 9, scope: !12882)
!12904 = !DILocation(line: 206, column: 2, scope: !12882)
!12905 = distinct !DISubprogram(name: "macb_interrupt", scope: !3, file: !3, line: 1579, type: !4845, scopeLine: 1580, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!12906 = !DILocalVariable(name: "lock", arg: 1, scope: !12907, file: !11067, line: 392, type: !4097)
!12907 = distinct !DISubprogram(name: "spin_unlock", scope: !11067, file: !11067, line: 392, type: !12908, scopeLine: 393, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!12908 = !DISubroutineType(types: !12909)
!12909 = !{null, !4097}
!12910 = !DILocation(line: 392, column: 53, scope: !12907, inlinedAt: !12911)
!12911 = distinct !DILocation(line: 1681, column: 2, scope: !12905)
!12912 = !DILocalVariable(name: "lock", arg: 1, scope: !12913, file: !11067, line: 352, type: !4097)
!12913 = distinct !DISubprogram(name: "spin_lock", scope: !11067, file: !11067, line: 352, type: !12908, scopeLine: 353, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!12914 = !DILocation(line: 352, column: 51, scope: !12913, inlinedAt: !12915)
!12915 = distinct !DILocation(line: 1591, column: 2, scope: !12905)
!12916 = !DILocalVariable(name: "irq", arg: 1, scope: !12905, file: !3, line: 1579, type: !37)
!12917 = !DILocation(line: 1579, column: 39, scope: !12905)
!12918 = !DILocalVariable(name: "dev_id", arg: 2, scope: !12905, file: !3, line: 1579, type: !570)
!12919 = !DILocation(line: 1579, column: 50, scope: !12905)
!12920 = !DILocalVariable(name: "queue", scope: !12905, file: !3, line: 1581, type: !10234)
!12921 = !DILocation(line: 1581, column: 21, scope: !12905)
!12922 = !DILocation(line: 1581, column: 29, scope: !12905)
!12923 = !DILocalVariable(name: "bp", scope: !12905, file: !3, line: 1582, type: !10238)
!12924 = !DILocation(line: 1582, column: 15, scope: !12905)
!12925 = !DILocation(line: 1582, column: 20, scope: !12905)
!12926 = !DILocation(line: 1582, column: 27, scope: !12905)
!12927 = !DILocalVariable(name: "dev", scope: !12905, file: !3, line: 1583, type: !295)
!12928 = !DILocation(line: 1583, column: 21, scope: !12905)
!12929 = !DILocation(line: 1583, column: 27, scope: !12905)
!12930 = !DILocation(line: 1583, column: 31, scope: !12905)
!12931 = !DILocalVariable(name: "status", scope: !12905, file: !3, line: 1584, type: !707)
!12932 = !DILocation(line: 1584, column: 6, scope: !12905)
!12933 = !DILocalVariable(name: "ctrl", scope: !12905, file: !3, line: 1584, type: !707)
!12934 = !DILocation(line: 1584, column: 14, scope: !12905)
!12935 = !DILocation(line: 1586, column: 11, scope: !12905)
!12936 = !DILocation(line: 1586, column: 9, scope: !12905)
!12937 = !DILocation(line: 1588, column: 6, scope: !12938)
!12938 = distinct !DILexicalBlock(scope: !12905, file: !3, line: 1588, column: 6)
!12939 = !DILocation(line: 1588, column: 6, scope: !12905)
!12940 = !DILocation(line: 1589, column: 3, scope: !12938)
!12941 = !DILocation(line: 1591, column: 13, scope: !12905)
!12942 = !DILocation(line: 1591, column: 17, scope: !12905)
!12943 = !DILocation(line: 354, column: 2, scope: !12944, inlinedAt: !12915)
!12944 = distinct !DILexicalBlock(scope: !12913, file: !11067, line: 354, column: 2)
!12945 = !{i32 -2145449528}
!12946 = !DILocation(line: 354, column: 2, scope: !12947, inlinedAt: !12915)
!12947 = distinct !DILexicalBlock(scope: !12944, file: !11067, line: 354, column: 2)
!12948 = !DILocation(line: 1593, column: 2, scope: !12905)
!12949 = !DILocation(line: 1593, column: 9, scope: !12905)
!12950 = !DILocation(line: 1595, column: 7, scope: !12951)
!12951 = distinct !DILexicalBlock(scope: !12952, file: !3, line: 1595, column: 7)
!12952 = distinct !DILexicalBlock(scope: !12905, file: !3, line: 1593, column: 17)
!12953 = !DILocation(line: 1595, column: 7, scope: !12952)
!12954 = !DILocation(line: 1596, column: 4, scope: !12955)
!12955 = distinct !DILexicalBlock(scope: !12951, file: !3, line: 1595, column: 38)
!12956 = !DILocation(line: 1597, column: 8, scope: !12957)
!12957 = distinct !DILexicalBlock(scope: !12955, file: !3, line: 1597, column: 8)
!12958 = !DILocation(line: 1597, column: 12, scope: !12957)
!12959 = !DILocation(line: 1597, column: 17, scope: !12957)
!12960 = !DILocation(line: 1597, column: 8, scope: !12955)
!12961 = !DILocation(line: 1598, column: 5, scope: !12957)
!12962 = !DILocation(line: 1599, column: 4, scope: !12955)
!12963 = !DILocation(line: 1602, column: 3, scope: !12964)
!12964 = distinct !DILexicalBlock(scope: !12965, file: !3, line: 1602, column: 3)
!12965 = distinct !DILexicalBlock(scope: !12952, file: !3, line: 1602, column: 3)
!12966 = !DILocation(line: 1602, column: 3, scope: !12965)
!12967 = !DILocation(line: 1606, column: 7, scope: !12968)
!12968 = distinct !DILexicalBlock(scope: !12952, file: !3, line: 1606, column: 7)
!12969 = !DILocation(line: 1606, column: 16, scope: !12968)
!12970 = !DILocation(line: 1606, column: 20, scope: !12968)
!12971 = !DILocation(line: 1606, column: 14, scope: !12968)
!12972 = !DILocation(line: 1606, column: 7, scope: !12952)
!12973 = !DILocation(line: 1613, column: 4, scope: !12974)
!12974 = distinct !DILexicalBlock(scope: !12968, file: !3, line: 1606, column: 34)
!12975 = !DILocation(line: 1614, column: 8, scope: !12976)
!12976 = distinct !DILexicalBlock(scope: !12974, file: !3, line: 1614, column: 8)
!12977 = !DILocation(line: 1614, column: 12, scope: !12976)
!12978 = !DILocation(line: 1614, column: 17, scope: !12976)
!12979 = !DILocation(line: 1614, column: 8, scope: !12974)
!12980 = !DILocation(line: 1615, column: 5, scope: !12976)
!12981 = !DILocation(line: 1617, column: 28, scope: !12982)
!12982 = distinct !DILexicalBlock(scope: !12974, file: !3, line: 1617, column: 8)
!12983 = !DILocation(line: 1617, column: 35, scope: !12982)
!12984 = !DILocation(line: 1617, column: 8, scope: !12982)
!12985 = !DILocation(line: 1617, column: 8, scope: !12974)
!12986 = !DILocation(line: 1618, column: 5, scope: !12987)
!12987 = distinct !DILexicalBlock(scope: !12988, file: !3, line: 1618, column: 5)
!12988 = distinct !DILexicalBlock(scope: !12989, file: !3, line: 1618, column: 5)
!12989 = distinct !DILexicalBlock(scope: !12982, file: !3, line: 1617, column: 42)
!12990 = !DILocation(line: 1618, column: 5, scope: !12988)
!12991 = !DILocation(line: 1619, column: 22, scope: !12989)
!12992 = !DILocation(line: 1619, column: 29, scope: !12989)
!12993 = !DILocation(line: 1619, column: 5, scope: !12989)
!12994 = !DILocation(line: 1620, column: 4, scope: !12989)
!12995 = !DILocation(line: 1621, column: 3, scope: !12974)
!12996 = !DILocation(line: 1623, column: 7, scope: !12997)
!12997 = distinct !DILexicalBlock(scope: !12952, file: !3, line: 1623, column: 7)
!12998 = !DILocation(line: 1623, column: 7, scope: !12952)
!12999 = !DILocation(line: 1624, column: 4, scope: !13000)
!13000 = distinct !DILexicalBlock(scope: !12997, file: !3, line: 1623, column: 47)
!13001 = !DILocation(line: 1625, column: 19, scope: !13000)
!13002 = !DILocation(line: 1625, column: 26, scope: !13000)
!13003 = !DILocation(line: 1625, column: 4, scope: !13000)
!13004 = !DILocation(line: 1627, column: 8, scope: !13005)
!13005 = distinct !DILexicalBlock(scope: !13000, file: !3, line: 1627, column: 8)
!13006 = !DILocation(line: 1627, column: 12, scope: !13005)
!13007 = !DILocation(line: 1627, column: 17, scope: !13005)
!13008 = !DILocation(line: 1627, column: 8, scope: !13000)
!13009 = !DILocation(line: 1628, column: 5, scope: !13005)
!13010 = !DILocation(line: 1630, column: 4, scope: !13000)
!13011 = !DILocation(line: 1633, column: 7, scope: !13012)
!13012 = distinct !DILexicalBlock(scope: !12952, file: !3, line: 1633, column: 7)
!13013 = !DILocation(line: 1633, column: 14, scope: !13012)
!13014 = !DILocation(line: 1633, column: 7, scope: !12952)
!13015 = !DILocation(line: 1634, column: 22, scope: !13012)
!13016 = !DILocation(line: 1634, column: 4, scope: !13012)
!13017 = !DILocation(line: 1636, column: 7, scope: !13018)
!13018 = distinct !DILexicalBlock(scope: !12952, file: !3, line: 1636, column: 7)
!13019 = !DILocation(line: 1636, column: 14, scope: !13018)
!13020 = !DILocation(line: 1636, column: 7, scope: !12952)
!13021 = !DILocation(line: 1637, column: 20, scope: !13018)
!13022 = !DILocation(line: 1637, column: 4, scope: !13018)
!13023 = !DILocation(line: 1650, column: 7, scope: !13024)
!13024 = distinct !DILexicalBlock(scope: !12952, file: !3, line: 1650, column: 7)
!13025 = !DILocation(line: 1650, column: 14, scope: !13024)
!13026 = !DILocation(line: 1650, column: 7, scope: !12952)
!13027 = !DILocation(line: 1651, column: 11, scope: !13028)
!13028 = distinct !DILexicalBlock(scope: !13024, file: !3, line: 1650, column: 33)
!13029 = !DILocation(line: 1651, column: 9, scope: !13028)
!13030 = !DILocation(line: 1652, column: 4, scope: !13028)
!13031 = !DILocation(line: 1653, column: 4, scope: !13028)
!13032 = !{i32 -2137629628}
!13033 = !DILocation(line: 1654, column: 4, scope: !13028)
!13034 = !DILocation(line: 1656, column: 8, scope: !13035)
!13035 = distinct !DILexicalBlock(scope: !13028, file: !3, line: 1656, column: 8)
!13036 = !DILocation(line: 1656, column: 12, scope: !13035)
!13037 = !DILocation(line: 1656, column: 17, scope: !13035)
!13038 = !DILocation(line: 1656, column: 8, scope: !13028)
!13039 = !DILocation(line: 1657, column: 5, scope: !13035)
!13040 = !DILocation(line: 1658, column: 3, scope: !13028)
!13041 = !DILocation(line: 1660, column: 7, scope: !13042)
!13042 = distinct !DILexicalBlock(scope: !12952, file: !3, line: 1660, column: 7)
!13043 = !DILocation(line: 1660, column: 14, scope: !13042)
!13044 = !DILocation(line: 1660, column: 7, scope: !12952)
!13045 = !DILocation(line: 1662, column: 20, scope: !13046)
!13046 = distinct !DILexicalBlock(scope: !13047, file: !3, line: 1662, column: 8)
!13047 = distinct !DILexicalBlock(scope: !13042, file: !3, line: 1660, column: 36)
!13048 = !DILocation(line: 1662, column: 8, scope: !13046)
!13049 = !DILocation(line: 1662, column: 8, scope: !13047)
!13050 = !DILocation(line: 1663, column: 5, scope: !13046)
!13051 = !DILocation(line: 1663, column: 9, scope: !13046)
!13052 = !DILocation(line: 1663, column: 18, scope: !13046)
!13053 = !DILocation(line: 1663, column: 22, scope: !13046)
!13054 = !DILocation(line: 1663, column: 33, scope: !13046)
!13055 = !DILocation(line: 1665, column: 5, scope: !13046)
!13056 = !DILocation(line: 1665, column: 9, scope: !13046)
!13057 = !DILocation(line: 1665, column: 18, scope: !13046)
!13058 = !DILocation(line: 1665, column: 23, scope: !13046)
!13059 = !DILocation(line: 1665, column: 34, scope: !13046)
!13060 = !DILocation(line: 1667, column: 8, scope: !13061)
!13061 = distinct !DILexicalBlock(scope: !13047, file: !3, line: 1667, column: 8)
!13062 = !DILocation(line: 1667, column: 12, scope: !13061)
!13063 = !DILocation(line: 1667, column: 17, scope: !13061)
!13064 = !DILocation(line: 1667, column: 8, scope: !13047)
!13065 = !DILocation(line: 1668, column: 5, scope: !13061)
!13066 = !DILocation(line: 1669, column: 3, scope: !13047)
!13067 = !DILocation(line: 1671, column: 7, scope: !13068)
!13068 = distinct !DILexicalBlock(scope: !12952, file: !3, line: 1671, column: 7)
!13069 = !DILocation(line: 1671, column: 14, scope: !13068)
!13070 = !DILocation(line: 1671, column: 7, scope: !12952)
!13071 = !DILocation(line: 1672, column: 22, scope: !13072)
!13072 = distinct !DILexicalBlock(scope: !13068, file: !3, line: 1671, column: 33)
!13073 = !DILocation(line: 1672, column: 26, scope: !13072)
!13074 = !DILocation(line: 1672, column: 4, scope: !13072)
!13075 = !DILocation(line: 1673, column: 15, scope: !13072)
!13076 = !DILocation(line: 1673, column: 4, scope: !13072)
!13077 = !DILocation(line: 1675, column: 8, scope: !13078)
!13078 = distinct !DILexicalBlock(scope: !13072, file: !3, line: 1675, column: 8)
!13079 = !DILocation(line: 1675, column: 12, scope: !13078)
!13080 = !DILocation(line: 1675, column: 17, scope: !13078)
!13081 = !DILocation(line: 1675, column: 8, scope: !13072)
!13082 = !DILocation(line: 1676, column: 5, scope: !13078)
!13083 = !DILocation(line: 1677, column: 3, scope: !13072)
!13084 = !DILocation(line: 1678, column: 12, scope: !12952)
!13085 = !DILocation(line: 1678, column: 10, scope: !12952)
!13086 = distinct !{!13086, !12948, !13087}
!13087 = !DILocation(line: 1679, column: 2, scope: !12905)
!13088 = !DILocation(line: 1681, column: 15, scope: !12905)
!13089 = !DILocation(line: 1681, column: 19, scope: !12905)
!13090 = !DILocation(line: 394, column: 2, scope: !13091, inlinedAt: !12911)
!13091 = distinct !DILexicalBlock(scope: !12907, file: !11067, line: 394, column: 2)
!13092 = !{i32 -2145447167}
!13093 = !DILocation(line: 394, column: 2, scope: !13094, inlinedAt: !12911)
!13094 = distinct !DILexicalBlock(scope: !13091, file: !11067, line: 394, column: 2)
!13095 = !DILocation(line: 1683, column: 2, scope: !12905)
!13096 = !DILocation(line: 1684, column: 1, scope: !12905)
!13097 = distinct !DISubprogram(name: "__init_work", scope: !1808, file: !1808, line: 215, type: !13098, scopeLine: 215, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!13098 = !DISubroutineType(types: !13099)
!13099 = !{null, !1817, !37}
!13100 = !DILocalVariable(name: "work", arg: 1, scope: !13097, file: !1808, line: 215, type: !1817)
!13101 = !DILocation(line: 215, column: 52, scope: !13097)
!13102 = !DILocalVariable(name: "onstack", arg: 2, scope: !13097, file: !1808, line: 215, type: !37)
!13103 = !DILocation(line: 215, column: 62, scope: !13097)
!13104 = !DILocation(line: 215, column: 73, scope: !13097)
!13105 = distinct !DISubprogram(name: "INIT_LIST_HEAD", scope: !13106, file: !13106, line: 33, type: !13107, scopeLine: 34, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!13106 = !DIFile(filename: "./include/linux/list.h", directory: "/home/lizy2001/genbc/linux")
!13107 = !DISubroutineType(types: !13108)
!13108 = !{null, !292}
!13109 = !DILocalVariable(name: "list", arg: 1, scope: !13105, file: !13106, line: 33, type: !292)
!13110 = !DILocation(line: 33, column: 53, scope: !13105)
!13111 = !DILocation(line: 35, column: 2, scope: !13105)
!13112 = !DILocation(line: 35, column: 2, scope: !13113)
!13113 = distinct !DILexicalBlock(scope: !13105, file: !13106, line: 35, column: 2)
!13114 = !DILocation(line: 35, column: 2, scope: !13115)
!13115 = distinct !DILexicalBlock(scope: !13113, file: !13106, line: 35, column: 2)
!13116 = !DILocation(line: 35, column: 2, scope: !13117)
!13117 = distinct !DILexicalBlock(scope: !13113, file: !13106, line: 35, column: 2)
!13118 = !DILocation(line: 36, column: 15, scope: !13105)
!13119 = !DILocation(line: 36, column: 2, scope: !13105)
!13120 = !DILocation(line: 36, column: 8, scope: !13105)
!13121 = !DILocation(line: 36, column: 13, scope: !13105)
!13122 = !DILocation(line: 37, column: 1, scope: !13105)
!13123 = distinct !DISubprogram(name: "macb_tx_error_task", scope: !3, file: !3, line: 890, type: !1815, scopeLine: 891, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!13124 = !DILocalVariable(name: "lock", arg: 1, scope: !13125, file: !11067, line: 407, type: !4097)
!13125 = distinct !DISubprogram(name: "spin_unlock_irqrestore", scope: !11067, file: !11067, line: 407, type: !13126, scopeLine: 408, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!13126 = !DISubroutineType(types: !13127)
!13127 = !{null, !4097, !317}
!13128 = !DILocation(line: 407, column: 64, scope: !13125, inlinedAt: !13129)
!13129 = distinct !DILocation(line: 997, column: 2, scope: !13123)
!13130 = !DILocalVariable(name: "flags", arg: 2, scope: !13125, file: !11067, line: 407, type: !317)
!13131 = !DILocation(line: 407, column: 84, scope: !13125, inlinedAt: !13129)
!13132 = !DILocation(line: 327, column: 67, scope: !11066, inlinedAt: !13133)
!13133 = distinct !DILocation(line: 911, column: 2, scope: !13134)
!13134 = distinct !DILexicalBlock(scope: !13135, file: !3, line: 911, column: 2)
!13135 = distinct !DILexicalBlock(scope: !13136, file: !3, line: 911, column: 2)
!13136 = distinct !DILexicalBlock(scope: !13137, file: !3, line: 911, column: 2)
!13137 = distinct !DILexicalBlock(scope: !13138, file: !3, line: 911, column: 2)
!13138 = distinct !DILexicalBlock(scope: !13123, file: !3, line: 911, column: 2)
!13139 = !DILocalVariable(name: "work", arg: 1, scope: !13123, file: !3, line: 890, type: !1817)
!13140 = !DILocation(line: 890, column: 52, scope: !13123)
!13141 = !DILocalVariable(name: "queue", scope: !13123, file: !3, line: 892, type: !10234)
!13142 = !DILocation(line: 892, column: 21, scope: !13123)
!13143 = !DILocalVariable(name: "__mptr", scope: !13144, file: !3, line: 892, type: !570)
!13144 = distinct !DILexicalBlock(scope: !13123, file: !3, line: 892, column: 29)
!13145 = !DILocation(line: 892, column: 29, scope: !13144)
!13146 = !DILocation(line: 892, column: 29, scope: !13147)
!13147 = distinct !DILexicalBlock(scope: !13144, file: !3, line: 892, column: 29)
!13148 = !DILocalVariable(name: "bp", scope: !13123, file: !3, line: 894, type: !10238)
!13149 = !DILocation(line: 894, column: 16, scope: !13123)
!13150 = !DILocation(line: 894, column: 21, scope: !13123)
!13151 = !DILocation(line: 894, column: 28, scope: !13123)
!13152 = !DILocalVariable(name: "tx_skb", scope: !13123, file: !3, line: 895, type: !10642)
!13153 = !DILocation(line: 895, column: 22, scope: !13123)
!13154 = !DILocalVariable(name: "desc", scope: !13123, file: !3, line: 896, type: !10636)
!13155 = !DILocation(line: 896, column: 24, scope: !13123)
!13156 = !DILocalVariable(name: "skb", scope: !13123, file: !3, line: 897, type: !420)
!13157 = !DILocation(line: 897, column: 19, scope: !13123)
!13158 = !DILocalVariable(name: "tail", scope: !13123, file: !3, line: 898, type: !7)
!13159 = !DILocation(line: 898, column: 16, scope: !13123)
!13160 = !DILocalVariable(name: "flags", scope: !13123, file: !3, line: 899, type: !317)
!13161 = !DILocation(line: 899, column: 17, scope: !13123)
!13162 = !DILocation(line: 901, column: 2, scope: !13163)
!13163 = distinct !DILexicalBlock(scope: !13164, file: !3, line: 901, column: 2)
!13164 = distinct !DILexicalBlock(scope: !13123, file: !3, line: 901, column: 2)
!13165 = !DILocation(line: 901, column: 2, scope: !13164)
!13166 = !DILocation(line: 911, column: 2, scope: !13123)
!13167 = !DILocation(line: 911, column: 2, scope: !13138)
!13168 = !DILocalVariable(name: "__dummy", scope: !13169, file: !3, line: 911, type: !317)
!13169 = distinct !DILexicalBlock(scope: !13137, file: !3, line: 911, column: 2)
!13170 = !DILocation(line: 911, column: 2, scope: !13169)
!13171 = !DILocalVariable(name: "__dummy2", scope: !13169, file: !3, line: 911, type: !317)
!13172 = !DILocation(line: 911, column: 2, scope: !13137)
!13173 = !DILocation(line: 911, column: 2, scope: !13136)
!13174 = !DILocation(line: 911, column: 2, scope: !13175)
!13175 = distinct !DILexicalBlock(scope: !13136, file: !3, line: 911, column: 2)
!13176 = !DILocalVariable(name: "__dummy", scope: !13177, file: !3, line: 911, type: !317)
!13177 = distinct !DILexicalBlock(scope: !13178, file: !3, line: 911, column: 2)
!13178 = distinct !DILexicalBlock(scope: !13175, file: !3, line: 911, column: 2)
!13179 = !DILocation(line: 911, column: 2, scope: !13177)
!13180 = !DILocalVariable(name: "__dummy2", scope: !13177, file: !3, line: 911, type: !317)
!13181 = !DILocation(line: 911, column: 2, scope: !13178)
!13182 = !DILocation(line: 911, column: 2, scope: !13135)
!13183 = !{i32 -2137651492}
!13184 = !DILocation(line: 911, column: 2, scope: !13134)
!13185 = !DILocation(line: 329, column: 10, scope: !11066, inlinedAt: !13133)
!13186 = !DILocation(line: 329, column: 16, scope: !11066, inlinedAt: !13133)
!13187 = !DILocation(line: 914, column: 27, scope: !13123)
!13188 = !DILocation(line: 914, column: 31, scope: !13123)
!13189 = !DILocation(line: 914, column: 2, scope: !13123)
!13190 = !DILocation(line: 920, column: 19, scope: !13191)
!13191 = distinct !DILexicalBlock(scope: !13123, file: !3, line: 920, column: 6)
!13192 = !DILocation(line: 920, column: 6, scope: !13191)
!13193 = !DILocation(line: 920, column: 6, scope: !13123)
!13194 = !DILocation(line: 922, column: 14, scope: !13191)
!13195 = !DILocation(line: 922, column: 18, scope: !13191)
!13196 = !DILocation(line: 922, column: 3, scope: !13191)
!13197 = !DILocation(line: 927, column: 14, scope: !13198)
!13198 = distinct !DILexicalBlock(scope: !13123, file: !3, line: 927, column: 2)
!13199 = !DILocation(line: 927, column: 21, scope: !13198)
!13200 = !DILocation(line: 927, column: 12, scope: !13198)
!13201 = !DILocation(line: 927, column: 7, scope: !13198)
!13202 = !DILocation(line: 927, column: 30, scope: !13203)
!13203 = distinct !DILexicalBlock(scope: !13198, file: !3, line: 927, column: 2)
!13204 = !DILocation(line: 927, column: 38, scope: !13203)
!13205 = !DILocation(line: 927, column: 45, scope: !13203)
!13206 = !DILocation(line: 927, column: 35, scope: !13203)
!13207 = !DILocation(line: 927, column: 2, scope: !13198)
!13208 = !DILocalVariable(name: "ctrl", scope: !13209, file: !3, line: 928, type: !707)
!13209 = distinct !DILexicalBlock(scope: !13203, file: !3, line: 927, column: 62)
!13210 = !DILocation(line: 928, column: 7, scope: !13209)
!13211 = !DILocation(line: 930, column: 23, scope: !13209)
!13212 = !DILocation(line: 930, column: 30, scope: !13209)
!13213 = !DILocation(line: 930, column: 10, scope: !13209)
!13214 = !DILocation(line: 930, column: 8, scope: !13209)
!13215 = !DILocation(line: 931, column: 10, scope: !13209)
!13216 = !DILocation(line: 931, column: 16, scope: !13209)
!13217 = !DILocation(line: 931, column: 8, scope: !13209)
!13218 = !DILocation(line: 932, column: 24, scope: !13209)
!13219 = !DILocation(line: 932, column: 31, scope: !13209)
!13220 = !DILocation(line: 932, column: 12, scope: !13209)
!13221 = !DILocation(line: 932, column: 10, scope: !13209)
!13222 = !DILocation(line: 933, column: 9, scope: !13209)
!13223 = !DILocation(line: 933, column: 17, scope: !13209)
!13224 = !DILocation(line: 933, column: 7, scope: !13209)
!13225 = !DILocation(line: 935, column: 7, scope: !13226)
!13226 = distinct !DILexicalBlock(scope: !13209, file: !3, line: 935, column: 7)
!13227 = !DILocation(line: 935, column: 12, scope: !13226)
!13228 = !DILocation(line: 935, column: 7, scope: !13209)
!13229 = !DILocation(line: 937, column: 4, scope: !13230)
!13230 = distinct !DILexicalBlock(scope: !13226, file: !3, line: 935, column: 33)
!13231 = !DILocation(line: 937, column: 12, scope: !13230)
!13232 = !DILocation(line: 937, column: 11, scope: !13230)
!13233 = !DILocation(line: 938, column: 19, scope: !13234)
!13234 = distinct !DILexicalBlock(scope: !13230, file: !3, line: 937, column: 17)
!13235 = !DILocation(line: 938, column: 23, scope: !13234)
!13236 = !DILocation(line: 938, column: 5, scope: !13234)
!13237 = !DILocation(line: 939, column: 9, scope: !13234)
!13238 = !DILocation(line: 940, column: 26, scope: !13234)
!13239 = !DILocation(line: 940, column: 33, scope: !13234)
!13240 = !DILocation(line: 940, column: 14, scope: !13234)
!13241 = !DILocation(line: 940, column: 12, scope: !13234)
!13242 = !DILocation(line: 941, column: 11, scope: !13234)
!13243 = !DILocation(line: 941, column: 19, scope: !13234)
!13244 = !DILocation(line: 941, column: 9, scope: !13234)
!13245 = distinct !{!13245, !13229, !13246}
!13246 = !DILocation(line: 942, column: 4, scope: !13230)
!13247 = !DILocation(line: 947, column: 10, scope: !13248)
!13248 = distinct !DILexicalBlock(scope: !13230, file: !3, line: 947, column: 8)
!13249 = !DILocation(line: 947, column: 15, scope: !13248)
!13250 = !DILocation(line: 947, column: 8, scope: !13230)
!13251 = !DILocation(line: 948, column: 5, scope: !13252)
!13252 = distinct !DILexicalBlock(scope: !13253, file: !3, line: 948, column: 5)
!13253 = distinct !DILexicalBlock(scope: !13254, file: !3, line: 948, column: 5)
!13254 = distinct !DILexicalBlock(scope: !13248, file: !3, line: 947, column: 46)
!13255 = !DILocation(line: 948, column: 5, scope: !13253)
!13256 = !DILocation(line: 951, column: 5, scope: !13254)
!13257 = !DILocation(line: 951, column: 9, scope: !13254)
!13258 = !DILocation(line: 951, column: 14, scope: !13254)
!13259 = !DILocation(line: 951, column: 20, scope: !13254)
!13260 = !DILocation(line: 951, column: 30, scope: !13254)
!13261 = !DILocation(line: 952, column: 5, scope: !13254)
!13262 = !DILocation(line: 952, column: 12, scope: !13254)
!13263 = !DILocation(line: 952, column: 18, scope: !13254)
!13264 = !DILocation(line: 952, column: 28, scope: !13254)
!13265 = !DILocation(line: 953, column: 32, scope: !13254)
!13266 = !DILocation(line: 953, column: 37, scope: !13254)
!13267 = !DILocation(line: 953, column: 5, scope: !13254)
!13268 = !DILocation(line: 953, column: 9, scope: !13254)
!13269 = !DILocation(line: 953, column: 14, scope: !13254)
!13270 = !DILocation(line: 953, column: 20, scope: !13254)
!13271 = !DILocation(line: 953, column: 29, scope: !13254)
!13272 = !DILocation(line: 954, column: 30, scope: !13254)
!13273 = !DILocation(line: 954, column: 35, scope: !13254)
!13274 = !DILocation(line: 954, column: 5, scope: !13254)
!13275 = !DILocation(line: 954, column: 12, scope: !13254)
!13276 = !DILocation(line: 954, column: 18, scope: !13254)
!13277 = !DILocation(line: 954, column: 27, scope: !13254)
!13278 = !DILocation(line: 955, column: 4, scope: !13254)
!13279 = !DILocation(line: 956, column: 3, scope: !13230)
!13280 = !DILocation(line: 961, column: 8, scope: !13281)
!13281 = distinct !DILexicalBlock(scope: !13282, file: !3, line: 961, column: 8)
!13282 = distinct !DILexicalBlock(scope: !13226, file: !3, line: 956, column: 10)
!13283 = !DILocation(line: 961, column: 13, scope: !13281)
!13284 = !DILocation(line: 961, column: 8, scope: !13282)
!13285 = !DILocation(line: 962, column: 16, scope: !13281)
!13286 = !DILocation(line: 962, column: 20, scope: !13281)
!13287 = !DILocation(line: 962, column: 5, scope: !13281)
!13288 = !DILocation(line: 965, column: 17, scope: !13282)
!13289 = !DILocation(line: 965, column: 22, scope: !13282)
!13290 = !DILocation(line: 965, column: 4, scope: !13282)
!13291 = !DILocation(line: 965, column: 10, scope: !13282)
!13292 = !DILocation(line: 965, column: 15, scope: !13282)
!13293 = !DILocation(line: 968, column: 17, scope: !13209)
!13294 = !DILocation(line: 968, column: 21, scope: !13209)
!13295 = !DILocation(line: 968, column: 3, scope: !13209)
!13296 = !DILocation(line: 969, column: 2, scope: !13209)
!13297 = !DILocation(line: 927, column: 58, scope: !13203)
!13298 = !DILocation(line: 927, column: 2, scope: !13203)
!13299 = distinct !{!13299, !13207, !13300}
!13300 = !DILocation(line: 969, column: 2, scope: !13198)
!13301 = !DILocation(line: 972, column: 22, scope: !13123)
!13302 = !DILocation(line: 972, column: 9, scope: !13123)
!13303 = !DILocation(line: 972, column: 7, scope: !13123)
!13304 = !DILocation(line: 973, column: 16, scope: !13123)
!13305 = !DILocation(line: 973, column: 20, scope: !13123)
!13306 = !DILocation(line: 973, column: 2, scope: !13123)
!13307 = !DILocation(line: 974, column: 2, scope: !13123)
!13308 = !DILocation(line: 974, column: 8, scope: !13123)
!13309 = !DILocation(line: 974, column: 13, scope: !13123)
!13310 = !DILocation(line: 977, column: 2, scope: !13123)
!13311 = !{i32 -2137650807}
!13312 = !DILocation(line: 980, column: 2, scope: !13123)
!13313 = !DILocation(line: 982, column: 6, scope: !13314)
!13314 = distinct !DILexicalBlock(scope: !13123, file: !3, line: 982, column: 6)
!13315 = !DILocation(line: 982, column: 10, scope: !13314)
!13316 = !DILocation(line: 982, column: 21, scope: !13314)
!13317 = !DILocation(line: 982, column: 6, scope: !13123)
!13318 = !DILocation(line: 983, column: 3, scope: !13314)
!13319 = !DILocation(line: 986, column: 2, scope: !13123)
!13320 = !DILocation(line: 986, column: 9, scope: !13123)
!13321 = !DILocation(line: 986, column: 17, scope: !13123)
!13322 = !DILocation(line: 987, column: 2, scope: !13123)
!13323 = !DILocation(line: 987, column: 9, scope: !13123)
!13324 = !DILocation(line: 987, column: 17, scope: !13123)
!13325 = !DILocation(line: 990, column: 2, scope: !13123)
!13326 = !DILocation(line: 991, column: 2, scope: !13123)
!13327 = !DILocation(line: 994, column: 28, scope: !13123)
!13328 = !DILocation(line: 994, column: 32, scope: !13123)
!13329 = !DILocation(line: 994, column: 2, scope: !13123)
!13330 = !DILocation(line: 995, column: 2, scope: !13123)
!13331 = !DILocation(line: 997, column: 26, scope: !13123)
!13332 = !DILocation(line: 997, column: 30, scope: !13123)
!13333 = !DILocation(line: 997, column: 36, scope: !13123)
!13334 = !DILocalVariable(name: "__dummy", scope: !13335, file: !11067, line: 409, type: !317)
!13335 = distinct !DILexicalBlock(scope: !13336, file: !11067, line: 409, column: 2)
!13336 = distinct !DILexicalBlock(scope: !13125, file: !11067, line: 409, column: 2)
!13337 = !DILocation(line: 409, column: 2, scope: !13335, inlinedAt: !13129)
!13338 = !DILocalVariable(name: "__dummy2", scope: !13335, file: !11067, line: 409, type: !317)
!13339 = !DILocalVariable(name: "__dummy", scope: !13340, file: !11067, line: 409, type: !317)
!13340 = distinct !DILexicalBlock(scope: !13341, file: !11067, line: 409, column: 2)
!13341 = distinct !DILexicalBlock(scope: !13342, file: !11067, line: 409, column: 2)
!13342 = distinct !DILexicalBlock(scope: !13343, file: !11067, line: 409, column: 2)
!13343 = distinct !DILexicalBlock(scope: !13336, file: !11067, line: 409, column: 2)
!13344 = !DILocation(line: 409, column: 2, scope: !13340, inlinedAt: !13129)
!13345 = !DILocalVariable(name: "__dummy2", scope: !13340, file: !11067, line: 409, type: !317)
!13346 = !DILocation(line: 409, column: 2, scope: !13341, inlinedAt: !13129)
!13347 = !DILocation(line: 409, column: 2, scope: !13348, inlinedAt: !13129)
!13348 = distinct !DILexicalBlock(scope: !13343, file: !11067, line: 409, column: 2)
!13349 = !{i32 -2145444841}
!13350 = !DILocation(line: 409, column: 2, scope: !13351, inlinedAt: !13129)
!13351 = distinct !DILexicalBlock(scope: !13348, file: !11067, line: 409, column: 2)
!13352 = !DILocation(line: 998, column: 1, scope: !13123)
!13353 = distinct !DISubprogram(name: "gem_alloc_rx_buffers", scope: !3, file: !3, line: 2174, type: !10388, scopeLine: 2175, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!13354 = !DILocalVariable(name: "bp", arg: 1, scope: !13353, file: !3, line: 2174, type: !10238)
!13355 = !DILocation(line: 2174, column: 46, scope: !13353)
!13356 = !DILocalVariable(name: "queue", scope: !13353, file: !3, line: 2176, type: !10234)
!13357 = !DILocation(line: 2176, column: 21, scope: !13353)
!13358 = !DILocalVariable(name: "q", scope: !13353, file: !3, line: 2177, type: !7)
!13359 = !DILocation(line: 2177, column: 15, scope: !13353)
!13360 = !DILocalVariable(name: "size", scope: !13353, file: !3, line: 2178, type: !37)
!13361 = !DILocation(line: 2178, column: 6, scope: !13353)
!13362 = !DILocation(line: 2180, column: 9, scope: !13363)
!13363 = distinct !DILexicalBlock(scope: !13353, file: !3, line: 2180, column: 2)
!13364 = !DILocation(line: 2180, column: 22, scope: !13363)
!13365 = !DILocation(line: 2180, column: 26, scope: !13363)
!13366 = !DILocation(line: 2180, column: 20, scope: !13363)
!13367 = !DILocation(line: 2180, column: 7, scope: !13363)
!13368 = !DILocation(line: 2180, column: 34, scope: !13369)
!13369 = distinct !DILexicalBlock(scope: !13363, file: !3, line: 2180, column: 2)
!13370 = !DILocation(line: 2180, column: 38, scope: !13369)
!13371 = !DILocation(line: 2180, column: 42, scope: !13369)
!13372 = !DILocation(line: 2180, column: 36, scope: !13369)
!13373 = !DILocation(line: 2180, column: 2, scope: !13363)
!13374 = !DILocation(line: 2181, column: 10, scope: !13375)
!13375 = distinct !DILexicalBlock(scope: !13369, file: !3, line: 2180, column: 68)
!13376 = !DILocation(line: 2181, column: 14, scope: !13375)
!13377 = !DILocation(line: 2181, column: 27, scope: !13375)
!13378 = !DILocation(line: 2181, column: 8, scope: !13375)
!13379 = !DILocation(line: 2182, column: 30, scope: !13375)
!13380 = !DILocation(line: 2182, column: 22, scope: !13375)
!13381 = !DILocation(line: 2182, column: 3, scope: !13375)
!13382 = !DILocation(line: 2182, column: 10, scope: !13375)
!13383 = !DILocation(line: 2182, column: 20, scope: !13375)
!13384 = !DILocation(line: 2183, column: 8, scope: !13385)
!13385 = distinct !DILexicalBlock(scope: !13375, file: !3, line: 2183, column: 7)
!13386 = !DILocation(line: 2183, column: 15, scope: !13385)
!13387 = !DILocation(line: 2183, column: 7, scope: !13375)
!13388 = !DILocation(line: 2184, column: 4, scope: !13385)
!13389 = !DILocation(line: 2189, column: 2, scope: !13375)
!13390 = !DILocation(line: 2180, column: 54, scope: !13369)
!13391 = !DILocation(line: 2180, column: 59, scope: !13369)
!13392 = !DILocation(line: 2180, column: 2, scope: !13369)
!13393 = distinct !{!13393, !13373, !13394}
!13394 = !DILocation(line: 2189, column: 2, scope: !13363)
!13395 = !DILocation(line: 2190, column: 2, scope: !13353)
!13396 = !DILocation(line: 2191, column: 1, scope: !13353)
!13397 = distinct !DISubprogram(name: "gem_free_rx_buffers", scope: !3, file: !3, line: 2103, type: !10392, scopeLine: 2104, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!13398 = !DILocalVariable(name: "bp", arg: 1, scope: !13397, file: !3, line: 2103, type: !10238)
!13399 = !DILocation(line: 2103, column: 46, scope: !13397)
!13400 = !DILocalVariable(name: "skb", scope: !13397, file: !3, line: 2105, type: !420)
!13401 = !DILocation(line: 2105, column: 19, scope: !13397)
!13402 = !DILocalVariable(name: "desc", scope: !13397, file: !3, line: 2106, type: !10636)
!13403 = !DILocation(line: 2106, column: 24, scope: !13397)
!13404 = !DILocalVariable(name: "queue", scope: !13397, file: !3, line: 2107, type: !10234)
!13405 = !DILocation(line: 2107, column: 21, scope: !13397)
!13406 = !DILocalVariable(name: "addr", scope: !13397, file: !3, line: 2108, type: !7084)
!13407 = !DILocation(line: 2108, column: 14, scope: !13397)
!13408 = !DILocalVariable(name: "q", scope: !13397, file: !3, line: 2109, type: !7)
!13409 = !DILocation(line: 2109, column: 15, scope: !13397)
!13410 = !DILocalVariable(name: "i", scope: !13397, file: !3, line: 2110, type: !37)
!13411 = !DILocation(line: 2110, column: 6, scope: !13397)
!13412 = !DILocation(line: 2112, column: 9, scope: !13413)
!13413 = distinct !DILexicalBlock(scope: !13397, file: !3, line: 2112, column: 2)
!13414 = !DILocation(line: 2112, column: 22, scope: !13413)
!13415 = !DILocation(line: 2112, column: 26, scope: !13413)
!13416 = !DILocation(line: 2112, column: 20, scope: !13413)
!13417 = !DILocation(line: 2112, column: 7, scope: !13413)
!13418 = !DILocation(line: 2112, column: 34, scope: !13419)
!13419 = distinct !DILexicalBlock(scope: !13413, file: !3, line: 2112, column: 2)
!13420 = !DILocation(line: 2112, column: 38, scope: !13419)
!13421 = !DILocation(line: 2112, column: 42, scope: !13419)
!13422 = !DILocation(line: 2112, column: 36, scope: !13419)
!13423 = !DILocation(line: 2112, column: 2, scope: !13413)
!13424 = !DILocation(line: 2113, column: 8, scope: !13425)
!13425 = distinct !DILexicalBlock(scope: !13426, file: !3, line: 2113, column: 7)
!13426 = distinct !DILexicalBlock(scope: !13419, file: !3, line: 2112, column: 68)
!13427 = !DILocation(line: 2113, column: 15, scope: !13425)
!13428 = !DILocation(line: 2113, column: 7, scope: !13426)
!13429 = !DILocation(line: 2114, column: 4, scope: !13425)
!13430 = !DILocation(line: 2116, column: 10, scope: !13431)
!13431 = distinct !DILexicalBlock(scope: !13426, file: !3, line: 2116, column: 3)
!13432 = !DILocation(line: 2116, column: 8, scope: !13431)
!13433 = !DILocation(line: 2116, column: 15, scope: !13434)
!13434 = distinct !DILexicalBlock(scope: !13431, file: !3, line: 2116, column: 3)
!13435 = !DILocation(line: 2116, column: 19, scope: !13434)
!13436 = !DILocation(line: 2116, column: 23, scope: !13434)
!13437 = !DILocation(line: 2116, column: 17, scope: !13434)
!13438 = !DILocation(line: 2116, column: 3, scope: !13431)
!13439 = !DILocation(line: 2117, column: 10, scope: !13440)
!13440 = distinct !DILexicalBlock(scope: !13434, file: !3, line: 2116, column: 42)
!13441 = !DILocation(line: 2117, column: 17, scope: !13440)
!13442 = !DILocation(line: 2117, column: 27, scope: !13440)
!13443 = !DILocation(line: 2117, column: 8, scope: !13440)
!13444 = !DILocation(line: 2119, column: 9, scope: !13445)
!13445 = distinct !DILexicalBlock(scope: !13440, file: !3, line: 2119, column: 8)
!13446 = !DILocation(line: 2119, column: 8, scope: !13440)
!13447 = !DILocation(line: 2120, column: 5, scope: !13445)
!13448 = !DILocation(line: 2122, column: 24, scope: !13440)
!13449 = !DILocation(line: 2122, column: 31, scope: !13440)
!13450 = !DILocation(line: 2122, column: 11, scope: !13440)
!13451 = !DILocation(line: 2122, column: 9, scope: !13440)
!13452 = !DILocation(line: 2123, column: 25, scope: !13440)
!13453 = !DILocation(line: 2123, column: 29, scope: !13440)
!13454 = !DILocation(line: 2123, column: 11, scope: !13440)
!13455 = !DILocation(line: 2123, column: 9, scope: !13440)
!13456 = !DILocation(line: 2125, column: 4, scope: !13440)
!13457 = !DILocation(line: 2127, column: 22, scope: !13440)
!13458 = !DILocation(line: 2127, column: 4, scope: !13440)
!13459 = !DILocation(line: 2128, column: 8, scope: !13440)
!13460 = !DILocation(line: 2129, column: 3, scope: !13440)
!13461 = !DILocation(line: 2116, column: 38, scope: !13434)
!13462 = !DILocation(line: 2116, column: 3, scope: !13434)
!13463 = distinct !{!13463, !13438, !13464}
!13464 = !DILocation(line: 2129, column: 3, scope: !13431)
!13465 = !DILocation(line: 2131, column: 9, scope: !13426)
!13466 = !DILocation(line: 2131, column: 16, scope: !13426)
!13467 = !DILocation(line: 2131, column: 3, scope: !13426)
!13468 = !DILocation(line: 2132, column: 3, scope: !13426)
!13469 = !DILocation(line: 2132, column: 10, scope: !13426)
!13470 = !DILocation(line: 2132, column: 20, scope: !13426)
!13471 = !DILocation(line: 2133, column: 2, scope: !13426)
!13472 = !DILocation(line: 2112, column: 54, scope: !13419)
!13473 = !DILocation(line: 2112, column: 59, scope: !13419)
!13474 = !DILocation(line: 2112, column: 2, scope: !13419)
!13475 = distinct !{!13475, !13423, !13476}
!13476 = !DILocation(line: 2133, column: 2, scope: !13413)
!13477 = !DILocation(line: 2134, column: 1, scope: !13397)
!13478 = distinct !DISubprogram(name: "gem_init_rings", scope: !3, file: !3, line: 2252, type: !10392, scopeLine: 2253, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!13479 = !DILocalVariable(name: "bp", arg: 1, scope: !13478, file: !3, line: 2252, type: !10238)
!13480 = !DILocation(line: 2252, column: 41, scope: !13478)
!13481 = !DILocalVariable(name: "queue", scope: !13478, file: !3, line: 2254, type: !10234)
!13482 = !DILocation(line: 2254, column: 21, scope: !13478)
!13483 = !DILocalVariable(name: "desc", scope: !13478, file: !3, line: 2255, type: !10636)
!13484 = !DILocation(line: 2255, column: 24, scope: !13478)
!13485 = !DILocalVariable(name: "q", scope: !13478, file: !3, line: 2256, type: !7)
!13486 = !DILocation(line: 2256, column: 15, scope: !13478)
!13487 = !DILocalVariable(name: "i", scope: !13478, file: !3, line: 2257, type: !37)
!13488 = !DILocation(line: 2257, column: 6, scope: !13478)
!13489 = !DILocation(line: 2259, column: 9, scope: !13490)
!13490 = distinct !DILexicalBlock(scope: !13478, file: !3, line: 2259, column: 2)
!13491 = !DILocation(line: 2259, column: 22, scope: !13490)
!13492 = !DILocation(line: 2259, column: 26, scope: !13490)
!13493 = !DILocation(line: 2259, column: 20, scope: !13490)
!13494 = !DILocation(line: 2259, column: 7, scope: !13490)
!13495 = !DILocation(line: 2259, column: 34, scope: !13496)
!13496 = distinct !DILexicalBlock(scope: !13490, file: !3, line: 2259, column: 2)
!13497 = !DILocation(line: 2259, column: 38, scope: !13496)
!13498 = !DILocation(line: 2259, column: 42, scope: !13496)
!13499 = !DILocation(line: 2259, column: 36, scope: !13496)
!13500 = !DILocation(line: 2259, column: 2, scope: !13490)
!13501 = !DILocation(line: 2260, column: 10, scope: !13502)
!13502 = distinct !DILexicalBlock(scope: !13503, file: !3, line: 2260, column: 3)
!13503 = distinct !DILexicalBlock(scope: !13496, file: !3, line: 2259, column: 68)
!13504 = !DILocation(line: 2260, column: 8, scope: !13502)
!13505 = !DILocation(line: 2260, column: 15, scope: !13506)
!13506 = distinct !DILexicalBlock(scope: !13502, file: !3, line: 2260, column: 3)
!13507 = !DILocation(line: 2260, column: 19, scope: !13506)
!13508 = !DILocation(line: 2260, column: 23, scope: !13506)
!13509 = !DILocation(line: 2260, column: 17, scope: !13506)
!13510 = !DILocation(line: 2260, column: 3, scope: !13502)
!13511 = !DILocation(line: 2261, column: 24, scope: !13512)
!13512 = distinct !DILexicalBlock(scope: !13506, file: !3, line: 2260, column: 42)
!13513 = !DILocation(line: 2261, column: 31, scope: !13512)
!13514 = !DILocation(line: 2261, column: 11, scope: !13512)
!13515 = !DILocation(line: 2261, column: 9, scope: !13512)
!13516 = !DILocation(line: 2262, column: 18, scope: !13512)
!13517 = !DILocation(line: 2262, column: 22, scope: !13512)
!13518 = !DILocation(line: 2262, column: 4, scope: !13512)
!13519 = !DILocation(line: 2263, column: 4, scope: !13512)
!13520 = !DILocation(line: 2263, column: 10, scope: !13512)
!13521 = !DILocation(line: 2263, column: 15, scope: !13512)
!13522 = !DILocation(line: 2264, column: 3, scope: !13512)
!13523 = !DILocation(line: 2260, column: 38, scope: !13506)
!13524 = !DILocation(line: 2260, column: 3, scope: !13506)
!13525 = distinct !{!13525, !13510, !13526}
!13526 = !DILocation(line: 2264, column: 3, scope: !13502)
!13527 = !DILocation(line: 2265, column: 3, scope: !13503)
!13528 = !DILocation(line: 2265, column: 9, scope: !13503)
!13529 = !DILocation(line: 2265, column: 14, scope: !13503)
!13530 = !DILocation(line: 2266, column: 3, scope: !13503)
!13531 = !DILocation(line: 2266, column: 10, scope: !13503)
!13532 = !DILocation(line: 2266, column: 18, scope: !13503)
!13533 = !DILocation(line: 2267, column: 3, scope: !13503)
!13534 = !DILocation(line: 2267, column: 10, scope: !13503)
!13535 = !DILocation(line: 2267, column: 18, scope: !13503)
!13536 = !DILocation(line: 2269, column: 3, scope: !13503)
!13537 = !DILocation(line: 2269, column: 10, scope: !13503)
!13538 = !DILocation(line: 2269, column: 18, scope: !13503)
!13539 = !DILocation(line: 2270, column: 3, scope: !13503)
!13540 = !DILocation(line: 2270, column: 10, scope: !13503)
!13541 = !DILocation(line: 2270, column: 27, scope: !13503)
!13542 = !DILocation(line: 2272, column: 17, scope: !13503)
!13543 = !DILocation(line: 2272, column: 3, scope: !13503)
!13544 = !DILocation(line: 2273, column: 2, scope: !13503)
!13545 = !DILocation(line: 2259, column: 54, scope: !13496)
!13546 = !DILocation(line: 2259, column: 59, scope: !13496)
!13547 = !DILocation(line: 2259, column: 2, scope: !13496)
!13548 = distinct !{!13548, !13500, !13549}
!13549 = !DILocation(line: 2273, column: 2, scope: !13490)
!13550 = !DILocation(line: 2275, column: 1, scope: !13478)
!13551 = distinct !DISubprogram(name: "gem_rx", scope: !3, file: !3, line: 1164, type: !10397, scopeLine: 1166, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!13552 = !DILocalVariable(name: "queue", arg: 1, scope: !13551, file: !3, line: 1164, type: !10234)
!13553 = !DILocation(line: 1164, column: 38, scope: !13551)
!13554 = !DILocalVariable(name: "napi", arg: 2, scope: !13551, file: !3, line: 1164, type: !10399)
!13555 = !DILocation(line: 1164, column: 65, scope: !13551)
!13556 = !DILocalVariable(name: "budget", arg: 3, scope: !13551, file: !3, line: 1165, type: !37)
!13557 = !DILocation(line: 1165, column: 9, scope: !13551)
!13558 = !DILocalVariable(name: "bp", scope: !13551, file: !3, line: 1167, type: !10238)
!13559 = !DILocation(line: 1167, column: 15, scope: !13551)
!13560 = !DILocation(line: 1167, column: 20, scope: !13551)
!13561 = !DILocation(line: 1167, column: 27, scope: !13551)
!13562 = !DILocalVariable(name: "len", scope: !13551, file: !3, line: 1168, type: !7)
!13563 = !DILocation(line: 1168, column: 16, scope: !13551)
!13564 = !DILocalVariable(name: "entry", scope: !13551, file: !3, line: 1169, type: !7)
!13565 = !DILocation(line: 1169, column: 16, scope: !13551)
!13566 = !DILocalVariable(name: "skb", scope: !13551, file: !3, line: 1170, type: !420)
!13567 = !DILocation(line: 1170, column: 19, scope: !13551)
!13568 = !DILocalVariable(name: "desc", scope: !13551, file: !3, line: 1171, type: !10636)
!13569 = !DILocation(line: 1171, column: 24, scope: !13551)
!13570 = !DILocalVariable(name: "count", scope: !13551, file: !3, line: 1172, type: !37)
!13571 = !DILocation(line: 1172, column: 8, scope: !13551)
!13572 = !DILocation(line: 1174, column: 2, scope: !13551)
!13573 = !DILocation(line: 1174, column: 9, scope: !13551)
!13574 = !DILocation(line: 1174, column: 17, scope: !13551)
!13575 = !DILocation(line: 1174, column: 15, scope: !13551)
!13576 = !DILocalVariable(name: "ctrl", scope: !13577, file: !3, line: 1175, type: !707)
!13577 = distinct !DILexicalBlock(scope: !13551, file: !3, line: 1174, column: 25)
!13578 = !DILocation(line: 1175, column: 7, scope: !13577)
!13579 = !DILocalVariable(name: "addr", scope: !13577, file: !3, line: 1176, type: !7084)
!13580 = !DILocation(line: 1176, column: 14, scope: !13577)
!13581 = !DILocalVariable(name: "rxused", scope: !13577, file: !3, line: 1177, type: !540)
!13582 = !DILocation(line: 1177, column: 8, scope: !13577)
!13583 = !DILocation(line: 1179, column: 29, scope: !13577)
!13584 = !DILocation(line: 1179, column: 33, scope: !13577)
!13585 = !DILocation(line: 1179, column: 40, scope: !13577)
!13586 = !DILocation(line: 1179, column: 11, scope: !13577)
!13587 = !DILocation(line: 1179, column: 9, scope: !13577)
!13588 = !DILocation(line: 1180, column: 23, scope: !13577)
!13589 = !DILocation(line: 1180, column: 30, scope: !13577)
!13590 = !DILocation(line: 1180, column: 10, scope: !13577)
!13591 = !DILocation(line: 1180, column: 8, scope: !13577)
!13592 = !DILocation(line: 1183, column: 3, scope: !13577)
!13593 = !{i32 -2137647344}
!13594 = !DILocation(line: 1185, column: 13, scope: !13577)
!13595 = !DILocation(line: 1185, column: 19, scope: !13577)
!13596 = !DILocation(line: 1185, column: 24, scope: !13577)
!13597 = !DILocation(line: 1185, column: 12, scope: !13577)
!13598 = !DILocation(line: 1185, column: 10, scope: !13577)
!13599 = !DILocation(line: 1186, column: 24, scope: !13577)
!13600 = !DILocation(line: 1186, column: 28, scope: !13577)
!13601 = !DILocation(line: 1186, column: 10, scope: !13577)
!13602 = !DILocation(line: 1186, column: 8, scope: !13577)
!13603 = !DILocation(line: 1188, column: 8, scope: !13604)
!13604 = distinct !DILexicalBlock(scope: !13577, file: !3, line: 1188, column: 7)
!13605 = !DILocation(line: 1188, column: 7, scope: !13577)
!13606 = !DILocation(line: 1189, column: 4, scope: !13604)
!13607 = !DILocation(line: 1192, column: 3, scope: !13577)
!13608 = !{i32 -2137647234}
!13609 = !DILocation(line: 1194, column: 10, scope: !13577)
!13610 = !DILocation(line: 1194, column: 16, scope: !13577)
!13611 = !DILocation(line: 1194, column: 8, scope: !13577)
!13612 = !DILocation(line: 1196, column: 3, scope: !13577)
!13613 = !DILocation(line: 1196, column: 10, scope: !13577)
!13614 = !DILocation(line: 1196, column: 17, scope: !13577)
!13615 = !DILocation(line: 1197, column: 8, scope: !13577)
!13616 = !DILocation(line: 1199, column: 9, scope: !13617)
!13617 = distinct !DILexicalBlock(scope: !13577, file: !3, line: 1199, column: 7)
!13618 = !DILocation(line: 1199, column: 14, scope: !13617)
!13619 = !DILocation(line: 1199, column: 33, scope: !13617)
!13620 = !DILocation(line: 1199, column: 36, scope: !13617)
!13621 = !DILocation(line: 1199, column: 41, scope: !13617)
!13622 = !DILocation(line: 1199, column: 7, scope: !13577)
!13623 = !DILocation(line: 1200, column: 15, scope: !13624)
!13624 = distinct !DILexicalBlock(scope: !13617, file: !3, line: 1199, column: 62)
!13625 = !DILocation(line: 1200, column: 19, scope: !13624)
!13626 = !DILocation(line: 1200, column: 4, scope: !13624)
!13627 = !DILocation(line: 1202, column: 4, scope: !13624)
!13628 = !DILocation(line: 1202, column: 8, scope: !13624)
!13629 = !DILocation(line: 1202, column: 13, scope: !13624)
!13630 = !DILocation(line: 1202, column: 19, scope: !13624)
!13631 = !DILocation(line: 1202, column: 29, scope: !13624)
!13632 = !DILocation(line: 1203, column: 4, scope: !13624)
!13633 = !DILocation(line: 1203, column: 11, scope: !13624)
!13634 = !DILocation(line: 1203, column: 17, scope: !13624)
!13635 = !DILocation(line: 1203, column: 27, scope: !13624)
!13636 = !DILocation(line: 1204, column: 4, scope: !13624)
!13637 = !DILocation(line: 1206, column: 9, scope: !13577)
!13638 = !DILocation(line: 1206, column: 16, scope: !13577)
!13639 = !DILocation(line: 1206, column: 26, scope: !13577)
!13640 = !DILocation(line: 1206, column: 7, scope: !13577)
!13641 = !DILocation(line: 1207, column: 7, scope: !13642)
!13642 = distinct !DILexicalBlock(scope: !13577, file: !3, line: 1207, column: 7)
!13643 = !DILocation(line: 1207, column: 7, scope: !13577)
!13644 = !DILocation(line: 1208, column: 15, scope: !13645)
!13645 = distinct !DILexicalBlock(scope: !13642, file: !3, line: 1207, column: 23)
!13646 = !DILocation(line: 1208, column: 19, scope: !13645)
!13647 = !DILocation(line: 1208, column: 4, scope: !13645)
!13648 = !DILocation(line: 1210, column: 4, scope: !13645)
!13649 = !DILocation(line: 1210, column: 8, scope: !13645)
!13650 = !DILocation(line: 1210, column: 13, scope: !13645)
!13651 = !DILocation(line: 1210, column: 19, scope: !13645)
!13652 = !DILocation(line: 1210, column: 29, scope: !13645)
!13653 = !DILocation(line: 1211, column: 4, scope: !13645)
!13654 = !DILocation(line: 1211, column: 11, scope: !13645)
!13655 = !DILocation(line: 1211, column: 17, scope: !13645)
!13656 = !DILocation(line: 1211, column: 27, scope: !13645)
!13657 = !DILocation(line: 1212, column: 4, scope: !13645)
!13658 = !DILocation(line: 1215, column: 3, scope: !13577)
!13659 = !DILocation(line: 1215, column: 10, scope: !13577)
!13660 = !DILocation(line: 1215, column: 20, scope: !13577)
!13661 = !DILocation(line: 1215, column: 27, scope: !13577)
!13662 = !DILocation(line: 1216, column: 9, scope: !13577)
!13663 = !DILocation(line: 1216, column: 16, scope: !13577)
!13664 = !DILocation(line: 1216, column: 20, scope: !13577)
!13665 = !DILocation(line: 1216, column: 14, scope: !13577)
!13666 = !DILocation(line: 1216, column: 7, scope: !13577)
!13667 = !DILocation(line: 1218, column: 3, scope: !13668)
!13668 = distinct !DILexicalBlock(scope: !13669, file: !3, line: 1218, column: 3)
!13669 = distinct !DILexicalBlock(scope: !13577, file: !3, line: 1218, column: 3)
!13670 = !DILocation(line: 1218, column: 3, scope: !13669)
!13671 = !DILocation(line: 1220, column: 11, scope: !13577)
!13672 = !DILocation(line: 1220, column: 16, scope: !13577)
!13673 = !DILocation(line: 1220, column: 3, scope: !13577)
!13674 = !DILocation(line: 1221, column: 3, scope: !13577)
!13675 = !DILocation(line: 1224, column: 34, scope: !13577)
!13676 = !DILocation(line: 1224, column: 39, scope: !13577)
!13677 = !DILocation(line: 1224, column: 43, scope: !13577)
!13678 = !DILocation(line: 1224, column: 19, scope: !13577)
!13679 = !DILocation(line: 1224, column: 3, scope: !13577)
!13680 = !DILocation(line: 1224, column: 8, scope: !13577)
!13681 = !DILocation(line: 1224, column: 17, scope: !13577)
!13682 = !DILocation(line: 1225, column: 28, scope: !13577)
!13683 = !DILocation(line: 1225, column: 3, scope: !13577)
!13684 = !DILocation(line: 1226, column: 7, scope: !13685)
!13685 = distinct !DILexicalBlock(scope: !13577, file: !3, line: 1226, column: 7)
!13686 = !DILocation(line: 1226, column: 11, scope: !13685)
!13687 = !DILocation(line: 1226, column: 16, scope: !13685)
!13688 = !DILocation(line: 1226, column: 25, scope: !13685)
!13689 = !DILocation(line: 1226, column: 42, scope: !13685)
!13690 = !DILocation(line: 1227, column: 9, scope: !13685)
!13691 = !DILocation(line: 1227, column: 13, scope: !13685)
!13692 = !DILocation(line: 1227, column: 18, scope: !13685)
!13693 = !DILocation(line: 1227, column: 24, scope: !13685)
!13694 = !DILocation(line: 1227, column: 39, scope: !13685)
!13695 = !DILocation(line: 1228, column: 7, scope: !13685)
!13696 = !DILocation(line: 1228, column: 32, scope: !13685)
!13697 = !DILocation(line: 1226, column: 7, scope: !13577)
!13698 = !DILocation(line: 1229, column: 4, scope: !13685)
!13699 = !DILocation(line: 1229, column: 9, scope: !13685)
!13700 = !DILocation(line: 1229, column: 19, scope: !13685)
!13701 = !DILocation(line: 1231, column: 3, scope: !13577)
!13702 = !DILocation(line: 1231, column: 7, scope: !13577)
!13703 = !DILocation(line: 1231, column: 12, scope: !13577)
!13704 = !DILocation(line: 1231, column: 18, scope: !13577)
!13705 = !DILocation(line: 1231, column: 28, scope: !13577)
!13706 = !DILocation(line: 1232, column: 3, scope: !13577)
!13707 = !DILocation(line: 1232, column: 10, scope: !13577)
!13708 = !DILocation(line: 1232, column: 16, scope: !13577)
!13709 = !DILocation(line: 1232, column: 26, scope: !13577)
!13710 = !DILocation(line: 1233, column: 30, scope: !13577)
!13711 = !DILocation(line: 1233, column: 35, scope: !13577)
!13712 = !DILocation(line: 1233, column: 3, scope: !13577)
!13713 = !DILocation(line: 1233, column: 7, scope: !13577)
!13714 = !DILocation(line: 1233, column: 12, scope: !13577)
!13715 = !DILocation(line: 1233, column: 18, scope: !13577)
!13716 = !DILocation(line: 1233, column: 27, scope: !13577)
!13717 = !DILocation(line: 1234, column: 28, scope: !13577)
!13718 = !DILocation(line: 1234, column: 33, scope: !13577)
!13719 = !DILocation(line: 1234, column: 3, scope: !13577)
!13720 = !DILocation(line: 1234, column: 10, scope: !13577)
!13721 = !DILocation(line: 1234, column: 16, scope: !13577)
!13722 = !DILocation(line: 1234, column: 25, scope: !13577)
!13723 = !DILocation(line: 1236, column: 22, scope: !13577)
!13724 = !DILocation(line: 1236, column: 26, scope: !13577)
!13725 = !DILocation(line: 1236, column: 31, scope: !13577)
!13726 = !DILocation(line: 1236, column: 3, scope: !13577)
!13727 = !DILocation(line: 1247, column: 20, scope: !13577)
!13728 = !DILocation(line: 1247, column: 26, scope: !13577)
!13729 = !DILocation(line: 1247, column: 3, scope: !13577)
!13730 = distinct !{!13730, !13572, !13731}
!13731 = !DILocation(line: 1248, column: 2, scope: !13551)
!13732 = !DILocation(line: 1250, column: 16, scope: !13551)
!13733 = !DILocation(line: 1250, column: 2, scope: !13551)
!13734 = !DILocation(line: 1252, column: 9, scope: !13551)
!13735 = !DILocation(line: 1252, column: 2, scope: !13551)
!13736 = distinct !DISubprogram(name: "macb_alloc_rx_buffers", scope: !3, file: !3, line: 2193, type: !10388, scopeLine: 2194, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!13737 = !DILocalVariable(name: "bp", arg: 1, scope: !13736, file: !3, line: 2193, type: !10238)
!13738 = !DILocation(line: 2193, column: 47, scope: !13736)
!13739 = !DILocalVariable(name: "queue", scope: !13736, file: !3, line: 2195, type: !10234)
!13740 = !DILocation(line: 2195, column: 21, scope: !13736)
!13741 = !DILocation(line: 2195, column: 30, scope: !13736)
!13742 = !DILocation(line: 2195, column: 34, scope: !13736)
!13743 = !DILocalVariable(name: "size", scope: !13736, file: !3, line: 2196, type: !37)
!13744 = !DILocation(line: 2196, column: 6, scope: !13736)
!13745 = !DILocation(line: 2198, column: 9, scope: !13736)
!13746 = !DILocation(line: 2198, column: 13, scope: !13736)
!13747 = !DILocation(line: 2198, column: 28, scope: !13736)
!13748 = !DILocation(line: 2198, column: 32, scope: !13736)
!13749 = !DILocation(line: 2198, column: 26, scope: !13736)
!13750 = !DILocation(line: 2198, column: 7, scope: !13736)
!13751 = !DILocation(line: 2199, column: 42, scope: !13736)
!13752 = !DILocation(line: 2199, column: 46, scope: !13736)
!13753 = !DILocation(line: 2199, column: 52, scope: !13736)
!13754 = !DILocation(line: 2199, column: 57, scope: !13736)
!13755 = !DILocation(line: 2200, column: 11, scope: !13736)
!13756 = !DILocation(line: 2200, column: 18, scope: !13736)
!13757 = !DILocation(line: 2199, column: 22, scope: !13736)
!13758 = !DILocation(line: 2199, column: 2, scope: !13736)
!13759 = !DILocation(line: 2199, column: 9, scope: !13736)
!13760 = !DILocation(line: 2199, column: 20, scope: !13736)
!13761 = !DILocation(line: 2201, column: 7, scope: !13762)
!13762 = distinct !DILexicalBlock(scope: !13736, file: !3, line: 2201, column: 6)
!13763 = !DILocation(line: 2201, column: 14, scope: !13762)
!13764 = !DILocation(line: 2201, column: 6, scope: !13736)
!13765 = !DILocation(line: 2202, column: 3, scope: !13762)
!13766 = !DILocation(line: 2207, column: 2, scope: !13736)
!13767 = !DILocation(line: 2208, column: 1, scope: !13736)
!13768 = distinct !DISubprogram(name: "macb_free_rx_buffers", scope: !3, file: !3, line: 2136, type: !10392, scopeLine: 2137, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!13769 = !DILocalVariable(name: "bp", arg: 1, scope: !13768, file: !3, line: 2136, type: !10238)
!13770 = !DILocation(line: 2136, column: 47, scope: !13768)
!13771 = !DILocalVariable(name: "queue", scope: !13768, file: !3, line: 2138, type: !10234)
!13772 = !DILocation(line: 2138, column: 21, scope: !13768)
!13773 = !DILocation(line: 2138, column: 30, scope: !13768)
!13774 = !DILocation(line: 2138, column: 34, scope: !13768)
!13775 = !DILocation(line: 2140, column: 6, scope: !13776)
!13776 = distinct !DILexicalBlock(scope: !13768, file: !3, line: 2140, column: 6)
!13777 = !DILocation(line: 2140, column: 13, scope: !13776)
!13778 = !DILocation(line: 2140, column: 6, scope: !13768)
!13779 = !DILocation(line: 2141, column: 22, scope: !13780)
!13780 = distinct !DILexicalBlock(scope: !13776, file: !3, line: 2140, column: 25)
!13781 = !DILocation(line: 2141, column: 26, scope: !13780)
!13782 = !DILocation(line: 2141, column: 32, scope: !13780)
!13783 = !DILocation(line: 2142, column: 7, scope: !13780)
!13784 = !DILocation(line: 2142, column: 11, scope: !13780)
!13785 = !DILocation(line: 2142, column: 26, scope: !13780)
!13786 = !DILocation(line: 2142, column: 30, scope: !13780)
!13787 = !DILocation(line: 2142, column: 24, scope: !13780)
!13788 = !DILocation(line: 2143, column: 7, scope: !13780)
!13789 = !DILocation(line: 2143, column: 14, scope: !13780)
!13790 = !DILocation(line: 2143, column: 26, scope: !13780)
!13791 = !DILocation(line: 2143, column: 33, scope: !13780)
!13792 = !DILocation(line: 2141, column: 3, scope: !13780)
!13793 = !DILocation(line: 2144, column: 3, scope: !13780)
!13794 = !DILocation(line: 2144, column: 10, scope: !13780)
!13795 = !DILocation(line: 2144, column: 21, scope: !13780)
!13796 = !DILocation(line: 2145, column: 2, scope: !13780)
!13797 = !DILocation(line: 2146, column: 1, scope: !13768)
!13798 = distinct !DISubprogram(name: "macb_init_rings", scope: !3, file: !3, line: 2277, type: !10392, scopeLine: 2278, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!13799 = !DILocalVariable(name: "bp", arg: 1, scope: !13798, file: !3, line: 2277, type: !10238)
!13800 = !DILocation(line: 2277, column: 42, scope: !13798)
!13801 = !DILocalVariable(name: "i", scope: !13798, file: !3, line: 2279, type: !37)
!13802 = !DILocation(line: 2279, column: 6, scope: !13798)
!13803 = !DILocalVariable(name: "desc", scope: !13798, file: !3, line: 2280, type: !10636)
!13804 = !DILocation(line: 2280, column: 24, scope: !13798)
!13805 = !DILocation(line: 2282, column: 21, scope: !13798)
!13806 = !DILocation(line: 2282, column: 25, scope: !13798)
!13807 = !DILocation(line: 2282, column: 2, scope: !13798)
!13808 = !DILocation(line: 2284, column: 9, scope: !13809)
!13809 = distinct !DILexicalBlock(scope: !13798, file: !3, line: 2284, column: 2)
!13810 = !DILocation(line: 2284, column: 7, scope: !13809)
!13811 = !DILocation(line: 2284, column: 14, scope: !13812)
!13812 = distinct !DILexicalBlock(scope: !13809, file: !3, line: 2284, column: 2)
!13813 = !DILocation(line: 2284, column: 18, scope: !13812)
!13814 = !DILocation(line: 2284, column: 22, scope: !13812)
!13815 = !DILocation(line: 2284, column: 16, scope: !13812)
!13816 = !DILocation(line: 2284, column: 2, scope: !13809)
!13817 = !DILocation(line: 2285, column: 24, scope: !13818)
!13818 = distinct !DILexicalBlock(scope: !13812, file: !3, line: 2284, column: 41)
!13819 = !DILocation(line: 2285, column: 28, scope: !13818)
!13820 = !DILocation(line: 2285, column: 39, scope: !13818)
!13821 = !DILocation(line: 2285, column: 10, scope: !13818)
!13822 = !DILocation(line: 2285, column: 8, scope: !13818)
!13823 = !DILocation(line: 2286, column: 17, scope: !13818)
!13824 = !DILocation(line: 2286, column: 21, scope: !13818)
!13825 = !DILocation(line: 2286, column: 3, scope: !13818)
!13826 = !DILocation(line: 2287, column: 3, scope: !13818)
!13827 = !DILocation(line: 2287, column: 9, scope: !13818)
!13828 = !DILocation(line: 2287, column: 14, scope: !13818)
!13829 = !DILocation(line: 2288, column: 2, scope: !13818)
!13830 = !DILocation(line: 2284, column: 37, scope: !13812)
!13831 = !DILocation(line: 2284, column: 2, scope: !13812)
!13832 = distinct !{!13832, !13816, !13833}
!13833 = !DILocation(line: 2288, column: 2, scope: !13809)
!13834 = !DILocation(line: 2289, column: 2, scope: !13798)
!13835 = !DILocation(line: 2289, column: 6, scope: !13798)
!13836 = !DILocation(line: 2289, column: 16, scope: !13798)
!13837 = !DILocation(line: 2289, column: 24, scope: !13798)
!13838 = !DILocation(line: 2290, column: 2, scope: !13798)
!13839 = !DILocation(line: 2290, column: 6, scope: !13798)
!13840 = !DILocation(line: 2290, column: 16, scope: !13798)
!13841 = !DILocation(line: 2290, column: 24, scope: !13798)
!13842 = !DILocation(line: 2291, column: 2, scope: !13798)
!13843 = !DILocation(line: 2291, column: 8, scope: !13798)
!13844 = !DILocation(line: 2291, column: 13, scope: !13798)
!13845 = !DILocation(line: 2292, column: 1, scope: !13798)
!13846 = distinct !DISubprogram(name: "macb_rx", scope: !3, file: !3, line: 1355, type: !10397, scopeLine: 1357, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!13847 = !DILocation(line: 407, column: 64, scope: !13125, inlinedAt: !13848)
!13848 = distinct !DILocation(line: 1422, column: 3, scope: !13849)
!13849 = distinct !DILexicalBlock(scope: !13850, file: !3, line: 1406, column: 32)
!13850 = distinct !DILexicalBlock(scope: !13846, file: !3, line: 1406, column: 6)
!13851 = !DILocation(line: 407, column: 84, scope: !13125, inlinedAt: !13848)
!13852 = !DILocation(line: 327, column: 67, scope: !11066, inlinedAt: !13853)
!13853 = distinct !DILocation(line: 1412, column: 3, scope: !13854)
!13854 = distinct !DILexicalBlock(scope: !13855, file: !3, line: 1412, column: 3)
!13855 = distinct !DILexicalBlock(scope: !13856, file: !3, line: 1412, column: 3)
!13856 = distinct !DILexicalBlock(scope: !13857, file: !3, line: 1412, column: 3)
!13857 = distinct !DILexicalBlock(scope: !13858, file: !3, line: 1412, column: 3)
!13858 = distinct !DILexicalBlock(scope: !13849, file: !3, line: 1412, column: 3)
!13859 = !DILocalVariable(name: "queue", arg: 1, scope: !13846, file: !3, line: 1355, type: !10234)
!13860 = !DILocation(line: 1355, column: 39, scope: !13846)
!13861 = !DILocalVariable(name: "napi", arg: 2, scope: !13846, file: !3, line: 1355, type: !10399)
!13862 = !DILocation(line: 1355, column: 66, scope: !13846)
!13863 = !DILocalVariable(name: "budget", arg: 3, scope: !13846, file: !3, line: 1356, type: !37)
!13864 = !DILocation(line: 1356, column: 10, scope: !13846)
!13865 = !DILocalVariable(name: "bp", scope: !13846, file: !3, line: 1358, type: !10238)
!13866 = !DILocation(line: 1358, column: 15, scope: !13846)
!13867 = !DILocation(line: 1358, column: 20, scope: !13846)
!13868 = !DILocation(line: 1358, column: 27, scope: !13846)
!13869 = !DILocalVariable(name: "reset_rx_queue", scope: !13846, file: !3, line: 1359, type: !540)
!13870 = !DILocation(line: 1359, column: 7, scope: !13846)
!13871 = !DILocalVariable(name: "received", scope: !13846, file: !3, line: 1360, type: !37)
!13872 = !DILocation(line: 1360, column: 6, scope: !13846)
!13873 = !DILocalVariable(name: "tail", scope: !13846, file: !3, line: 1361, type: !7)
!13874 = !DILocation(line: 1361, column: 15, scope: !13846)
!13875 = !DILocalVariable(name: "first_frag", scope: !13846, file: !3, line: 1362, type: !37)
!13876 = !DILocation(line: 1362, column: 6, scope: !13846)
!13877 = !DILocation(line: 1364, column: 14, scope: !13878)
!13878 = distinct !DILexicalBlock(scope: !13846, file: !3, line: 1364, column: 2)
!13879 = !DILocation(line: 1364, column: 21, scope: !13878)
!13880 = !DILocation(line: 1364, column: 12, scope: !13878)
!13881 = !DILocation(line: 1364, column: 7, scope: !13878)
!13882 = !DILocation(line: 1364, column: 30, scope: !13883)
!13883 = distinct !DILexicalBlock(scope: !13878, file: !3, line: 1364, column: 2)
!13884 = !DILocation(line: 1364, column: 37, scope: !13883)
!13885 = !DILocation(line: 1364, column: 2, scope: !13878)
!13886 = !DILocalVariable(name: "desc", scope: !13887, file: !3, line: 1365, type: !10636)
!13887 = distinct !DILexicalBlock(scope: !13883, file: !3, line: 1364, column: 50)
!13888 = !DILocation(line: 1365, column: 25, scope: !13887)
!13889 = !DILocation(line: 1365, column: 45, scope: !13887)
!13890 = !DILocation(line: 1365, column: 52, scope: !13887)
!13891 = !DILocation(line: 1365, column: 32, scope: !13887)
!13892 = !DILocalVariable(name: "ctrl", scope: !13887, file: !3, line: 1366, type: !707)
!13893 = !DILocation(line: 1366, column: 7, scope: !13887)
!13894 = !DILocation(line: 1369, column: 3, scope: !13887)
!13895 = !{i32 -2137645610}
!13896 = !DILocation(line: 1371, column: 9, scope: !13897)
!13897 = distinct !DILexicalBlock(scope: !13887, file: !3, line: 1371, column: 7)
!13898 = !DILocation(line: 1371, column: 15, scope: !13897)
!13899 = !DILocation(line: 1371, column: 20, scope: !13897)
!13900 = !DILocation(line: 1371, column: 7, scope: !13887)
!13901 = !DILocation(line: 1372, column: 4, scope: !13897)
!13902 = !DILocation(line: 1375, column: 3, scope: !13887)
!13903 = !{i32 -2137645500}
!13904 = !DILocation(line: 1377, column: 10, scope: !13887)
!13905 = !DILocation(line: 1377, column: 16, scope: !13887)
!13906 = !DILocation(line: 1377, column: 8, scope: !13887)
!13907 = !DILocation(line: 1379, column: 7, scope: !13908)
!13908 = distinct !DILexicalBlock(scope: !13887, file: !3, line: 1379, column: 7)
!13909 = !DILocation(line: 1379, column: 12, scope: !13908)
!13910 = !DILocation(line: 1379, column: 7, scope: !13887)
!13911 = !DILocation(line: 1380, column: 8, scope: !13912)
!13912 = distinct !DILexicalBlock(scope: !13913, file: !3, line: 1380, column: 8)
!13913 = distinct !DILexicalBlock(scope: !13908, file: !3, line: 1379, column: 32)
!13914 = !DILocation(line: 1380, column: 19, scope: !13912)
!13915 = !DILocation(line: 1380, column: 8, scope: !13913)
!13916 = !DILocation(line: 1381, column: 27, scope: !13912)
!13917 = !DILocation(line: 1381, column: 34, scope: !13912)
!13918 = !DILocation(line: 1381, column: 46, scope: !13912)
!13919 = !DILocation(line: 1381, column: 5, scope: !13912)
!13920 = !DILocation(line: 1382, column: 17, scope: !13913)
!13921 = !DILocation(line: 1382, column: 15, scope: !13913)
!13922 = !DILocation(line: 1383, column: 3, scope: !13913)
!13923 = !DILocation(line: 1385, column: 7, scope: !13924)
!13924 = distinct !DILexicalBlock(scope: !13887, file: !3, line: 1385, column: 7)
!13925 = !DILocation(line: 1385, column: 12, scope: !13924)
!13926 = !DILocation(line: 1385, column: 7, scope: !13887)
!13927 = !DILocalVariable(name: "dropped", scope: !13928, file: !3, line: 1386, type: !37)
!13928 = distinct !DILexicalBlock(scope: !13924, file: !3, line: 1385, column: 32)
!13929 = !DILocation(line: 1386, column: 8, scope: !13928)
!13930 = !DILocation(line: 1388, column: 8, scope: !13931)
!13931 = distinct !DILexicalBlock(scope: !13928, file: !3, line: 1388, column: 8)
!13932 = !DILocation(line: 1388, column: 8, scope: !13928)
!13933 = !DILocation(line: 1389, column: 20, scope: !13934)
!13934 = distinct !DILexicalBlock(scope: !13931, file: !3, line: 1388, column: 36)
!13935 = !DILocation(line: 1390, column: 5, scope: !13934)
!13936 = !DILocation(line: 1393, column: 28, scope: !13928)
!13937 = !DILocation(line: 1393, column: 35, scope: !13928)
!13938 = !DILocation(line: 1393, column: 41, scope: !13928)
!13939 = !DILocation(line: 1393, column: 53, scope: !13928)
!13940 = !DILocation(line: 1393, column: 14, scope: !13928)
!13941 = !DILocation(line: 1393, column: 12, scope: !13928)
!13942 = !DILocation(line: 1394, column: 15, scope: !13928)
!13943 = !DILocation(line: 1395, column: 8, scope: !13944)
!13944 = distinct !DILexicalBlock(scope: !13928, file: !3, line: 1395, column: 8)
!13945 = !DILocation(line: 1395, column: 8, scope: !13928)
!13946 = !DILocation(line: 1396, column: 20, scope: !13947)
!13947 = distinct !DILexicalBlock(scope: !13944, file: !3, line: 1395, column: 31)
!13948 = !DILocation(line: 1397, column: 5, scope: !13947)
!13949 = !DILocation(line: 1399, column: 9, scope: !13950)
!13950 = distinct !DILexicalBlock(scope: !13928, file: !3, line: 1399, column: 8)
!13951 = !DILocation(line: 1399, column: 8, scope: !13928)
!13952 = !DILocation(line: 1400, column: 13, scope: !13953)
!13953 = distinct !DILexicalBlock(scope: !13950, file: !3, line: 1399, column: 18)
!13954 = !DILocation(line: 1401, column: 11, scope: !13953)
!13955 = !DILocation(line: 1402, column: 4, scope: !13953)
!13956 = !DILocation(line: 1403, column: 3, scope: !13928)
!13957 = !DILocation(line: 1404, column: 2, scope: !13887)
!13958 = !DILocation(line: 1364, column: 46, scope: !13883)
!13959 = !DILocation(line: 1364, column: 2, scope: !13883)
!13960 = distinct !{!13960, !13885, !13961}
!13961 = !DILocation(line: 1404, column: 2, scope: !13878)
!13962 = !DILocation(line: 1406, column: 6, scope: !13850)
!13963 = !DILocation(line: 1406, column: 6, scope: !13846)
!13964 = !DILocalVariable(name: "flags", scope: !13849, file: !3, line: 1407, type: !317)
!13965 = !DILocation(line: 1407, column: 17, scope: !13849)
!13966 = !DILocalVariable(name: "ctrl", scope: !13849, file: !3, line: 1408, type: !707)
!13967 = !DILocation(line: 1408, column: 7, scope: !13849)
!13968 = !DILocation(line: 1410, column: 14, scope: !13849)
!13969 = !DILocation(line: 1410, column: 18, scope: !13849)
!13970 = !DILocation(line: 1410, column: 3, scope: !13849)
!13971 = !DILocation(line: 1412, column: 3, scope: !13849)
!13972 = !DILocation(line: 1412, column: 3, scope: !13858)
!13973 = !DILocalVariable(name: "__dummy", scope: !13974, file: !3, line: 1412, type: !317)
!13974 = distinct !DILexicalBlock(scope: !13857, file: !3, line: 1412, column: 3)
!13975 = !DILocation(line: 1412, column: 3, scope: !13974)
!13976 = !DILocalVariable(name: "__dummy2", scope: !13974, file: !3, line: 1412, type: !317)
!13977 = !DILocation(line: 1412, column: 3, scope: !13857)
!13978 = !DILocation(line: 1412, column: 3, scope: !13856)
!13979 = !DILocation(line: 1412, column: 3, scope: !13980)
!13980 = distinct !DILexicalBlock(scope: !13856, file: !3, line: 1412, column: 3)
!13981 = !DILocalVariable(name: "__dummy", scope: !13982, file: !3, line: 1412, type: !317)
!13982 = distinct !DILexicalBlock(scope: !13983, file: !3, line: 1412, column: 3)
!13983 = distinct !DILexicalBlock(scope: !13980, file: !3, line: 1412, column: 3)
!13984 = !DILocation(line: 1412, column: 3, scope: !13982)
!13985 = !DILocalVariable(name: "__dummy2", scope: !13982, file: !3, line: 1412, type: !317)
!13986 = !DILocation(line: 1412, column: 3, scope: !13983)
!13987 = !DILocation(line: 1412, column: 3, scope: !13855)
!13988 = !{i32 -2137644368}
!13989 = !DILocation(line: 1412, column: 3, scope: !13854)
!13990 = !DILocation(line: 329, column: 10, scope: !11066, inlinedAt: !13853)
!13991 = !DILocation(line: 329, column: 16, scope: !11066, inlinedAt: !13853)
!13992 = !DILocation(line: 1414, column: 10, scope: !13849)
!13993 = !DILocation(line: 1414, column: 8, scope: !13849)
!13994 = !DILocation(line: 1415, column: 3, scope: !13849)
!13995 = !DILocation(line: 1417, column: 21, scope: !13849)
!13996 = !DILocation(line: 1417, column: 3, scope: !13849)
!13997 = !DILocation(line: 1418, column: 3, scope: !13849)
!13998 = !DILocation(line: 1420, column: 3, scope: !13849)
!13999 = !DILocation(line: 1422, column: 27, scope: !13849)
!14000 = !DILocation(line: 1422, column: 31, scope: !13849)
!14001 = !DILocation(line: 1422, column: 37, scope: !13849)
!14002 = !DILocation(line: 409, column: 2, scope: !13335, inlinedAt: !13848)
!14003 = !DILocation(line: 409, column: 2, scope: !13340, inlinedAt: !13848)
!14004 = !DILocation(line: 409, column: 2, scope: !13341, inlinedAt: !13848)
!14005 = !DILocation(line: 409, column: 2, scope: !13348, inlinedAt: !13848)
!14006 = !DILocation(line: 409, column: 2, scope: !13351, inlinedAt: !13848)
!14007 = !DILocation(line: 1423, column: 10, scope: !13849)
!14008 = !DILocation(line: 1423, column: 3, scope: !13849)
!14009 = !DILocation(line: 1426, column: 6, scope: !14010)
!14010 = distinct !DILexicalBlock(scope: !13846, file: !3, line: 1426, column: 6)
!14011 = !DILocation(line: 1426, column: 17, scope: !14010)
!14012 = !DILocation(line: 1426, column: 6, scope: !13846)
!14013 = !DILocation(line: 1427, column: 20, scope: !14010)
!14014 = !DILocation(line: 1427, column: 3, scope: !14010)
!14015 = !DILocation(line: 1427, column: 10, scope: !14010)
!14016 = !DILocation(line: 1427, column: 18, scope: !14010)
!14017 = !DILocation(line: 1429, column: 20, scope: !14010)
!14018 = !DILocation(line: 1429, column: 3, scope: !14010)
!14019 = !DILocation(line: 1429, column: 10, scope: !14010)
!14020 = !DILocation(line: 1429, column: 18, scope: !14010)
!14021 = !DILocation(line: 1431, column: 9, scope: !13846)
!14022 = !DILocation(line: 1431, column: 2, scope: !13846)
!14023 = !DILocation(line: 1432, column: 1, scope: !13846)
!14024 = distinct !DISubprogram(name: "phy_interface_mode_is_rgmii", scope: !9465, file: !9465, line: 1297, type: !14025, scopeLine: 1298, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!14025 = !DISubroutineType(types: !14026)
!14026 = !{!540, !9706}
!14027 = !DILocalVariable(name: "mode", arg: 1, scope: !14024, file: !9465, line: 1297, type: !9706)
!14028 = !DILocation(line: 1297, column: 64, scope: !14024)
!14029 = !DILocation(line: 1299, column: 9, scope: !14024)
!14030 = !DILocation(line: 1299, column: 14, scope: !14024)
!14031 = !DILocation(line: 1299, column: 42, scope: !14024)
!14032 = !DILocation(line: 1300, column: 3, scope: !14024)
!14033 = !DILocation(line: 1300, column: 8, scope: !14024)
!14034 = !DILocation(line: 0, scope: !14024)
!14035 = !DILocation(line: 1299, column: 2, scope: !14024)
!14036 = distinct !DISubprogram(name: "macb_mdc_clk_div", scope: !3, file: !3, line: 2344, type: !14037, scopeLine: 2345, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!14037 = !DISubroutineType(types: !14038)
!14038 = !{!707, !10238}
!14039 = !DILocalVariable(name: "bp", arg: 1, scope: !14036, file: !3, line: 2344, type: !10238)
!14040 = !DILocation(line: 2344, column: 42, scope: !14036)
!14041 = !DILocalVariable(name: "config", scope: !14036, file: !3, line: 2346, type: !707)
!14042 = !DILocation(line: 2346, column: 6, scope: !14036)
!14043 = !DILocalVariable(name: "pclk_hz", scope: !14036, file: !3, line: 2347, type: !317)
!14044 = !DILocation(line: 2347, column: 16, scope: !14036)
!14045 = !DILocation(line: 2349, column: 18, scope: !14046)
!14046 = distinct !DILexicalBlock(scope: !14036, file: !3, line: 2349, column: 6)
!14047 = !DILocation(line: 2349, column: 6, scope: !14046)
!14048 = !DILocation(line: 2349, column: 6, scope: !14036)
!14049 = !DILocation(line: 2350, column: 26, scope: !14046)
!14050 = !DILocation(line: 2350, column: 10, scope: !14046)
!14051 = !DILocation(line: 2350, column: 3, scope: !14046)
!14052 = !DILocation(line: 2352, column: 25, scope: !14036)
!14053 = !DILocation(line: 2352, column: 29, scope: !14036)
!14054 = !DILocation(line: 2352, column: 12, scope: !14036)
!14055 = !DILocation(line: 2352, column: 10, scope: !14036)
!14056 = !DILocation(line: 2353, column: 6, scope: !14057)
!14057 = distinct !DILexicalBlock(scope: !14036, file: !3, line: 2353, column: 6)
!14058 = !DILocation(line: 2353, column: 14, scope: !14057)
!14059 = !DILocation(line: 2353, column: 6, scope: !14036)
!14060 = !DILocation(line: 2354, column: 10, scope: !14057)
!14061 = !DILocation(line: 2354, column: 3, scope: !14057)
!14062 = !DILocation(line: 2355, column: 11, scope: !14063)
!14063 = distinct !DILexicalBlock(scope: !14057, file: !3, line: 2355, column: 11)
!14064 = !DILocation(line: 2355, column: 19, scope: !14063)
!14065 = !DILocation(line: 2355, column: 11, scope: !14057)
!14066 = !DILocation(line: 2356, column: 10, scope: !14063)
!14067 = !DILocation(line: 2356, column: 3, scope: !14063)
!14068 = !DILocation(line: 2357, column: 11, scope: !14069)
!14069 = distinct !DILexicalBlock(scope: !14063, file: !3, line: 2357, column: 11)
!14070 = !DILocation(line: 2357, column: 19, scope: !14069)
!14071 = !DILocation(line: 2357, column: 11, scope: !14063)
!14072 = !DILocation(line: 2358, column: 10, scope: !14069)
!14073 = !DILocation(line: 2358, column: 3, scope: !14069)
!14074 = !DILocation(line: 2360, column: 10, scope: !14069)
!14075 = !DILocation(line: 2362, column: 9, scope: !14036)
!14076 = !DILocation(line: 2362, column: 2, scope: !14036)
!14077 = !DILocation(line: 2363, column: 1, scope: !14036)
!14078 = distinct !DISubprogram(name: "macb_dbw", scope: !3, file: !3, line: 2369, type: !14037, scopeLine: 2370, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!14079 = !DILocalVariable(name: "bp", arg: 1, scope: !14078, file: !3, line: 2369, type: !10238)
!14080 = !DILocation(line: 2369, column: 34, scope: !14078)
!14081 = !DILocation(line: 2371, column: 19, scope: !14082)
!14082 = distinct !DILexicalBlock(scope: !14078, file: !3, line: 2371, column: 6)
!14083 = !DILocation(line: 2371, column: 7, scope: !14082)
!14084 = !DILocation(line: 2371, column: 6, scope: !14078)
!14085 = !DILocation(line: 2372, column: 3, scope: !14082)
!14086 = !DILocation(line: 2374, column: 10, scope: !14078)
!14087 = !DILocation(line: 2374, column: 2, scope: !14078)
!14088 = !DILocation(line: 2376, column: 3, scope: !14089)
!14089 = distinct !DILexicalBlock(scope: !14078, file: !3, line: 2374, column: 51)
!14090 = !DILocation(line: 2378, column: 3, scope: !14089)
!14091 = !DILocation(line: 2381, column: 3, scope: !14089)
!14092 = !DILocation(line: 2383, column: 1, scope: !14078)
!14093 = distinct !DISubprogram(name: "dev_get_drvdata", scope: !3804, file: !3804, line: 655, type: !12775, scopeLine: 656, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!14094 = !DILocalVariable(name: "dev", arg: 1, scope: !14093, file: !3804, line: 655, type: !4513)
!14095 = !DILocation(line: 655, column: 58, scope: !14093)
!14096 = !DILocation(line: 657, column: 9, scope: !14093)
!14097 = !DILocation(line: 657, column: 14, scope: !14093)
!14098 = !DILocation(line: 657, column: 2, scope: !14093)
!14099 = distinct !DISubprogram(name: "napi_reschedule", scope: !36, file: !36, line: 468, type: !14100, scopeLine: 469, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!14100 = !DISubroutineType(types: !14101)
!14101 = !{!540, !10399}
!14102 = !DILocalVariable(name: "napi", arg: 1, scope: !14099, file: !36, line: 468, type: !10399)
!14103 = !DILocation(line: 468, column: 56, scope: !14099)
!14104 = !DILocation(line: 470, column: 25, scope: !14105)
!14105 = distinct !DILexicalBlock(scope: !14099, file: !36, line: 470, column: 6)
!14106 = !DILocation(line: 470, column: 6, scope: !14105)
!14107 = !DILocation(line: 470, column: 6, scope: !14099)
!14108 = !DILocation(line: 471, column: 19, scope: !14109)
!14109 = distinct !DILexicalBlock(scope: !14105, file: !36, line: 470, column: 32)
!14110 = !DILocation(line: 471, column: 3, scope: !14109)
!14111 = !DILocation(line: 472, column: 3, scope: !14109)
!14112 = !DILocation(line: 474, column: 2, scope: !14099)
!14113 = !DILocation(line: 475, column: 1, scope: !14099)
!14114 = distinct !DISubprogram(name: "netif_running", scope: !36, file: !36, line: 3556, type: !14115, scopeLine: 3557, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!14115 = !DISubroutineType(types: !14116)
!14116 = !{!540, !2682}
!14117 = !DILocalVariable(name: "dev", arg: 1, scope: !14114, file: !36, line: 3556, type: !2682)
!14118 = !DILocation(line: 3556, column: 59, scope: !14114)
!14119 = !DILocation(line: 3558, column: 39, scope: !14114)
!14120 = !DILocation(line: 3558, column: 44, scope: !14114)
!14121 = !DILocation(line: 3558, column: 9, scope: !14114)
!14122 = !DILocation(line: 3558, column: 2, scope: !14114)
!14123 = distinct !DISubprogram(name: "schedule_work", scope: !1808, file: !1808, line: 566, type: !14124, scopeLine: 567, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!14124 = !DISubroutineType(types: !14125)
!14125 = !{!540, !1817}
!14126 = !DILocalVariable(name: "work", arg: 1, scope: !14123, file: !1808, line: 566, type: !1817)
!14127 = !DILocation(line: 566, column: 54, scope: !14123)
!14128 = !DILocation(line: 568, column: 20, scope: !14123)
!14129 = !DILocation(line: 568, column: 31, scope: !14123)
!14130 = !DILocation(line: 568, column: 9, scope: !14123)
!14131 = !DILocation(line: 568, column: 2, scope: !14123)
!14132 = distinct !DISubprogram(name: "macb_tx_interrupt", scope: !3, file: !3, line: 1000, type: !14133, scopeLine: 1001, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!14133 = !DISubroutineType(types: !14134)
!14134 = !{null, !10234}
!14135 = !DILocalVariable(name: "queue", arg: 1, scope: !14132, file: !3, line: 1000, type: !10234)
!14136 = !DILocation(line: 1000, column: 50, scope: !14132)
!14137 = !DILocalVariable(name: "tail", scope: !14132, file: !3, line: 1002, type: !7)
!14138 = !DILocation(line: 1002, column: 15, scope: !14132)
!14139 = !DILocalVariable(name: "head", scope: !14132, file: !3, line: 1003, type: !7)
!14140 = !DILocation(line: 1003, column: 15, scope: !14132)
!14141 = !DILocalVariable(name: "status", scope: !14132, file: !3, line: 1004, type: !707)
!14142 = !DILocation(line: 1004, column: 6, scope: !14132)
!14143 = !DILocalVariable(name: "bp", scope: !14132, file: !3, line: 1005, type: !10238)
!14144 = !DILocation(line: 1005, column: 15, scope: !14132)
!14145 = !DILocation(line: 1005, column: 20, scope: !14132)
!14146 = !DILocation(line: 1005, column: 27, scope: !14132)
!14147 = !DILocalVariable(name: "queue_index", scope: !14132, file: !3, line: 1006, type: !1038)
!14148 = !DILocation(line: 1006, column: 6, scope: !14132)
!14149 = !DILocation(line: 1006, column: 20, scope: !14132)
!14150 = !DILocation(line: 1006, column: 28, scope: !14132)
!14151 = !DILocation(line: 1006, column: 32, scope: !14132)
!14152 = !DILocation(line: 1006, column: 26, scope: !14132)
!14153 = !DILocation(line: 1008, column: 11, scope: !14132)
!14154 = !DILocation(line: 1008, column: 9, scope: !14132)
!14155 = !DILocation(line: 1009, column: 2, scope: !14132)
!14156 = !DILocation(line: 1011, column: 6, scope: !14157)
!14157 = distinct !DILexicalBlock(scope: !14132, file: !3, line: 1011, column: 6)
!14158 = !DILocation(line: 1011, column: 10, scope: !14157)
!14159 = !DILocation(line: 1011, column: 15, scope: !14157)
!14160 = !DILocation(line: 1011, column: 6, scope: !14132)
!14161 = !DILocation(line: 1012, column: 3, scope: !14157)
!14162 = !DILocation(line: 1014, column: 2, scope: !14163)
!14163 = distinct !DILexicalBlock(scope: !14164, file: !3, line: 1014, column: 2)
!14164 = distinct !DILexicalBlock(scope: !14132, file: !3, line: 1014, column: 2)
!14165 = !DILocation(line: 1014, column: 2, scope: !14164)
!14166 = !DILocation(line: 1017, column: 9, scope: !14132)
!14167 = !DILocation(line: 1017, column: 16, scope: !14132)
!14168 = !DILocation(line: 1017, column: 7, scope: !14132)
!14169 = !DILocation(line: 1018, column: 14, scope: !14170)
!14170 = distinct !DILexicalBlock(scope: !14132, file: !3, line: 1018, column: 2)
!14171 = !DILocation(line: 1018, column: 21, scope: !14170)
!14172 = !DILocation(line: 1018, column: 12, scope: !14170)
!14173 = !DILocation(line: 1018, column: 7, scope: !14170)
!14174 = !DILocation(line: 1018, column: 30, scope: !14175)
!14175 = distinct !DILexicalBlock(scope: !14170, file: !3, line: 1018, column: 2)
!14176 = !DILocation(line: 1018, column: 38, scope: !14175)
!14177 = !DILocation(line: 1018, column: 35, scope: !14175)
!14178 = !DILocation(line: 1018, column: 2, scope: !14170)
!14179 = !DILocalVariable(name: "tx_skb", scope: !14180, file: !3, line: 1019, type: !10642)
!14180 = distinct !DILexicalBlock(scope: !14175, file: !3, line: 1018, column: 52)
!14181 = !DILocation(line: 1019, column: 23, scope: !14180)
!14182 = !DILocalVariable(name: "skb", scope: !14180, file: !3, line: 1020, type: !420)
!14183 = !DILocation(line: 1020, column: 20, scope: !14180)
!14184 = !DILocalVariable(name: "desc", scope: !14180, file: !3, line: 1021, type: !10636)
!14185 = !DILocation(line: 1021, column: 25, scope: !14180)
!14186 = !DILocalVariable(name: "ctrl", scope: !14180, file: !3, line: 1022, type: !707)
!14187 = !DILocation(line: 1022, column: 9, scope: !14180)
!14188 = !DILocation(line: 1024, column: 23, scope: !14180)
!14189 = !DILocation(line: 1024, column: 30, scope: !14180)
!14190 = !DILocation(line: 1024, column: 10, scope: !14180)
!14191 = !DILocation(line: 1024, column: 8, scope: !14180)
!14192 = !DILocation(line: 1027, column: 3, scope: !14180)
!14193 = !{i32 -2137648884}
!14194 = !DILocation(line: 1029, column: 10, scope: !14180)
!14195 = !DILocation(line: 1029, column: 16, scope: !14180)
!14196 = !DILocation(line: 1029, column: 8, scope: !14180)
!14197 = !DILocation(line: 1034, column: 9, scope: !14198)
!14198 = distinct !DILexicalBlock(scope: !14180, file: !3, line: 1034, column: 7)
!14199 = !DILocation(line: 1034, column: 14, scope: !14198)
!14200 = !DILocation(line: 1034, column: 7, scope: !14180)
!14201 = !DILocation(line: 1035, column: 4, scope: !14198)
!14202 = !DILocation(line: 1038, column: 3, scope: !14180)
!14203 = !DILocation(line: 1039, column: 25, scope: !14204)
!14204 = distinct !DILexicalBlock(scope: !14205, file: !3, line: 1038, column: 19)
!14205 = distinct !DILexicalBlock(scope: !14206, file: !3, line: 1038, column: 3)
!14206 = distinct !DILexicalBlock(scope: !14180, file: !3, line: 1038, column: 3)
!14207 = !DILocation(line: 1039, column: 32, scope: !14204)
!14208 = !DILocation(line: 1039, column: 13, scope: !14204)
!14209 = !DILocation(line: 1039, column: 11, scope: !14204)
!14210 = !DILocation(line: 1040, column: 10, scope: !14204)
!14211 = !DILocation(line: 1040, column: 18, scope: !14204)
!14212 = !DILocation(line: 1040, column: 8, scope: !14204)
!14213 = !DILocation(line: 1043, column: 8, scope: !14214)
!14214 = distinct !DILexicalBlock(scope: !14204, file: !3, line: 1043, column: 8)
!14215 = !DILocation(line: 1043, column: 8, scope: !14204)
!14216 = !DILocation(line: 1044, column: 9, scope: !14217)
!14217 = distinct !DILexicalBlock(scope: !14218, file: !3, line: 1044, column: 9)
!14218 = distinct !DILexicalBlock(scope: !14214, file: !3, line: 1043, column: 13)
!14219 = !DILocation(line: 1045, column: 28, scope: !14217)
!14220 = !DILocation(line: 1046, column: 28, scope: !14217)
!14221 = !DILocation(line: 1046, column: 35, scope: !14217)
!14222 = !DILocation(line: 1046, column: 40, scope: !14217)
!14223 = !DILocation(line: 1046, column: 9, scope: !14217)
!14224 = !DILocation(line: 1046, column: 46, scope: !14217)
!14225 = !DILocation(line: 1044, column: 9, scope: !14218)
!14226 = !DILocation(line: 1050, column: 6, scope: !14227)
!14227 = distinct !DILexicalBlock(scope: !14217, file: !3, line: 1046, column: 52)
!14228 = !DILocation(line: 1050, column: 14, scope: !14227)
!14229 = !DILocation(line: 1050, column: 18, scope: !14227)
!14230 = !DILocation(line: 1051, column: 5, scope: !14227)
!14231 = !DILocation(line: 1052, column: 5, scope: !14232)
!14232 = distinct !DILexicalBlock(scope: !14233, file: !3, line: 1052, column: 5)
!14233 = distinct !DILexicalBlock(scope: !14218, file: !3, line: 1052, column: 5)
!14234 = !DILocation(line: 1052, column: 5, scope: !14233)
!14235 = !DILocation(line: 1055, column: 5, scope: !14218)
!14236 = !DILocation(line: 1055, column: 9, scope: !14218)
!14237 = !DILocation(line: 1055, column: 14, scope: !14218)
!14238 = !DILocation(line: 1055, column: 20, scope: !14218)
!14239 = !DILocation(line: 1055, column: 30, scope: !14218)
!14240 = !DILocation(line: 1056, column: 5, scope: !14218)
!14241 = !DILocation(line: 1056, column: 12, scope: !14218)
!14242 = !DILocation(line: 1056, column: 18, scope: !14218)
!14243 = !DILocation(line: 1056, column: 28, scope: !14218)
!14244 = !DILocation(line: 1057, column: 32, scope: !14218)
!14245 = !DILocation(line: 1057, column: 37, scope: !14218)
!14246 = !DILocation(line: 1057, column: 5, scope: !14218)
!14247 = !DILocation(line: 1057, column: 9, scope: !14218)
!14248 = !DILocation(line: 1057, column: 14, scope: !14218)
!14249 = !DILocation(line: 1057, column: 20, scope: !14218)
!14250 = !DILocation(line: 1057, column: 29, scope: !14218)
!14251 = !DILocation(line: 1058, column: 30, scope: !14218)
!14252 = !DILocation(line: 1058, column: 35, scope: !14218)
!14253 = !DILocation(line: 1058, column: 5, scope: !14218)
!14254 = !DILocation(line: 1058, column: 12, scope: !14218)
!14255 = !DILocation(line: 1058, column: 18, scope: !14218)
!14256 = !DILocation(line: 1058, column: 27, scope: !14218)
!14257 = !DILocation(line: 1059, column: 4, scope: !14218)
!14258 = !DILocation(line: 1062, column: 18, scope: !14204)
!14259 = !DILocation(line: 1062, column: 22, scope: !14204)
!14260 = !DILocation(line: 1062, column: 4, scope: !14204)
!14261 = !DILocation(line: 1068, column: 8, scope: !14262)
!14262 = distinct !DILexicalBlock(scope: !14204, file: !3, line: 1068, column: 8)
!14263 = !DILocation(line: 1068, column: 8, scope: !14204)
!14264 = !DILocation(line: 1069, column: 5, scope: !14262)
!14265 = !DILocation(line: 1070, column: 3, scope: !14204)
!14266 = !DILocation(line: 1038, column: 15, scope: !14205)
!14267 = !DILocation(line: 1038, column: 3, scope: !14205)
!14268 = distinct !{!14268, !14269, !14270}
!14269 = !DILocation(line: 1038, column: 3, scope: !14206)
!14270 = !DILocation(line: 1070, column: 3, scope: !14206)
!14271 = !DILocation(line: 1071, column: 2, scope: !14180)
!14272 = !DILocation(line: 1018, column: 48, scope: !14175)
!14273 = !DILocation(line: 1018, column: 2, scope: !14175)
!14274 = distinct !{!14274, !14178, !14275}
!14275 = !DILocation(line: 1071, column: 2, scope: !14170)
!14276 = !DILocation(line: 1073, column: 19, scope: !14132)
!14277 = !DILocation(line: 1073, column: 2, scope: !14132)
!14278 = !DILocation(line: 1073, column: 9, scope: !14132)
!14279 = !DILocation(line: 1073, column: 17, scope: !14132)
!14280 = !DILocation(line: 1074, column: 31, scope: !14281)
!14281 = distinct !DILexicalBlock(scope: !14132, file: !3, line: 1074, column: 6)
!14282 = !DILocation(line: 1074, column: 35, scope: !14281)
!14283 = !DILocation(line: 1074, column: 40, scope: !14281)
!14284 = !DILocation(line: 1074, column: 6, scope: !14281)
!14285 = !DILocation(line: 1074, column: 53, scope: !14281)
!14286 = !DILocation(line: 1075, column: 6, scope: !14281)
!14287 = !DILocation(line: 1076, column: 29, scope: !14281)
!14288 = !DILocation(line: 1076, column: 26, scope: !14281)
!14289 = !DILocation(line: 1074, column: 6, scope: !14132)
!14290 = !DILocation(line: 1077, column: 23, scope: !14281)
!14291 = !DILocation(line: 1077, column: 27, scope: !14281)
!14292 = !DILocation(line: 1077, column: 32, scope: !14281)
!14293 = !DILocation(line: 1077, column: 3, scope: !14281)
!14294 = !DILocation(line: 1078, column: 1, scope: !14132)
!14295 = distinct !DISubprogram(name: "macb_tx_restart", scope: !3, file: !3, line: 1506, type: !14133, scopeLine: 1507, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!14296 = !DILocalVariable(name: "queue", arg: 1, scope: !14295, file: !3, line: 1506, type: !10234)
!14297 = !DILocation(line: 1506, column: 48, scope: !14295)
!14298 = !DILocalVariable(name: "head", scope: !14295, file: !3, line: 1508, type: !7)
!14299 = !DILocation(line: 1508, column: 15, scope: !14295)
!14300 = !DILocation(line: 1508, column: 22, scope: !14295)
!14301 = !DILocation(line: 1508, column: 29, scope: !14295)
!14302 = !DILocalVariable(name: "tail", scope: !14295, file: !3, line: 1509, type: !7)
!14303 = !DILocation(line: 1509, column: 15, scope: !14295)
!14304 = !DILocation(line: 1509, column: 22, scope: !14295)
!14305 = !DILocation(line: 1509, column: 29, scope: !14295)
!14306 = !DILocalVariable(name: "bp", scope: !14295, file: !3, line: 1510, type: !10238)
!14307 = !DILocation(line: 1510, column: 15, scope: !14295)
!14308 = !DILocation(line: 1510, column: 20, scope: !14295)
!14309 = !DILocation(line: 1510, column: 27, scope: !14295)
!14310 = !DILocation(line: 1512, column: 6, scope: !14311)
!14311 = distinct !DILexicalBlock(scope: !14295, file: !3, line: 1512, column: 6)
!14312 = !DILocation(line: 1512, column: 10, scope: !14311)
!14313 = !DILocation(line: 1512, column: 15, scope: !14311)
!14314 = !DILocation(line: 1512, column: 6, scope: !14295)
!14315 = !DILocation(line: 1513, column: 3, scope: !14311)
!14316 = !DILocation(line: 1515, column: 6, scope: !14317)
!14317 = distinct !DILexicalBlock(scope: !14295, file: !3, line: 1515, column: 6)
!14318 = !DILocation(line: 1515, column: 14, scope: !14317)
!14319 = !DILocation(line: 1515, column: 11, scope: !14317)
!14320 = !DILocation(line: 1515, column: 6, scope: !14295)
!14321 = !DILocation(line: 1516, column: 3, scope: !14317)
!14322 = !DILocation(line: 1518, column: 2, scope: !14295)
!14323 = !DILocation(line: 1519, column: 1, scope: !14295)
!14324 = distinct !DISubprogram(name: "tasklet_schedule", scope: !4722, file: !4722, line: 681, type: !10612, scopeLine: 682, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!14325 = !DILocalVariable(name: "t", arg: 1, scope: !14324, file: !4722, line: 681, type: !10599)
!14326 = !DILocation(line: 681, column: 60, scope: !14324)
!14327 = !DILocation(line: 683, column: 46, scope: !14328)
!14328 = distinct !DILexicalBlock(scope: !14324, file: !4722, line: 683, column: 6)
!14329 = !DILocation(line: 683, column: 49, scope: !14328)
!14330 = !DILocation(line: 683, column: 7, scope: !14328)
!14331 = !DILocation(line: 683, column: 6, scope: !14324)
!14332 = !DILocation(line: 684, column: 22, scope: !14328)
!14333 = !DILocation(line: 684, column: 3, scope: !14328)
!14334 = !DILocation(line: 685, column: 1, scope: !14324)
!14335 = distinct !DISubprogram(name: "test_bit", scope: !14336, file: !14336, line: 132, type: !14337, scopeLine: 133, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!14336 = !DIFile(filename: "./include/asm-generic/bitops/instrumented-non-atomic.h", directory: "/home/lizy2001/genbc/linux")
!14337 = !DISubroutineType(types: !14338)
!14338 = !{!540, !513, !14339}
!14339 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14340, size: 64)
!14340 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !14341)
!14341 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !317)
!14342 = !DILocalVariable(name: "nr", arg: 1, scope: !14343, file: !14344, line: 210, type: !513)
!14343 = distinct !DISubprogram(name: "variable_test_bit", scope: !14344, file: !14344, line: 210, type: !14337, scopeLine: 211, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!14344 = !DIFile(filename: "./arch/x86/include/asm/bitops.h", directory: "/home/lizy2001/genbc/linux")
!14345 = !DILocation(line: 210, column: 52, scope: !14343, inlinedAt: !14346)
!14346 = distinct !DILocation(line: 135, column: 9, scope: !14335)
!14347 = !DILocalVariable(name: "addr", arg: 2, scope: !14343, file: !14344, line: 210, type: !14339)
!14348 = !DILocation(line: 210, column: 86, scope: !14343, inlinedAt: !14346)
!14349 = !DILocalVariable(name: "oldbit", scope: !14343, file: !14344, line: 212, type: !540)
!14350 = !DILocation(line: 212, column: 7, scope: !14343, inlinedAt: !14346)
!14351 = !DILocalVariable(name: "nr", arg: 1, scope: !14352, file: !14344, line: 204, type: !513)
!14352 = distinct !DISubprogram(name: "constant_test_bit", scope: !14344, file: !14344, line: 204, type: !14337, scopeLine: 205, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!14353 = !DILocation(line: 204, column: 52, scope: !14352, inlinedAt: !14354)
!14354 = distinct !DILocation(line: 135, column: 9, scope: !14335)
!14355 = !DILocalVariable(name: "addr", arg: 2, scope: !14352, file: !14344, line: 204, type: !14339)
!14356 = !DILocation(line: 204, column: 86, scope: !14352, inlinedAt: !14354)
!14357 = !DILocalVariable(name: "v", arg: 1, scope: !14358, file: !11630, line: 69, type: !11633)
!14358 = distinct !DISubprogram(name: "instrument_atomic_read", scope: !11630, file: !11630, line: 69, type: !11631, scopeLine: 70, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!14359 = !DILocation(line: 69, column: 73, scope: !14358, inlinedAt: !14360)
!14360 = distinct !DILocation(line: 134, column: 2, scope: !14335)
!14361 = !DILocalVariable(name: "size", arg: 2, scope: !14358, file: !11630, line: 69, type: !594)
!14362 = !DILocation(line: 69, column: 83, scope: !14358, inlinedAt: !14360)
!14363 = !DILocalVariable(name: "nr", arg: 1, scope: !14335, file: !14336, line: 132, type: !513)
!14364 = !DILocation(line: 132, column: 34, scope: !14335)
!14365 = !DILocalVariable(name: "addr", arg: 2, scope: !14335, file: !14336, line: 132, type: !14339)
!14366 = !DILocation(line: 132, column: 68, scope: !14335)
!14367 = !DILocation(line: 134, column: 25, scope: !14335)
!14368 = !DILocation(line: 134, column: 32, scope: !14335)
!14369 = !DILocation(line: 134, column: 30, scope: !14335)
!14370 = !DILocation(line: 71, column: 19, scope: !14358, inlinedAt: !14360)
!14371 = !DILocation(line: 71, column: 22, scope: !14358, inlinedAt: !14360)
!14372 = !DILocation(line: 71, column: 2, scope: !14358, inlinedAt: !14360)
!14373 = !DILocation(line: 72, column: 2, scope: !14358, inlinedAt: !14360)
!14374 = !DILocation(line: 135, column: 9, scope: !14335)
!14375 = !DILocation(line: 206, column: 19, scope: !14352, inlinedAt: !14354)
!14376 = !DILocation(line: 206, column: 22, scope: !14352, inlinedAt: !14354)
!14377 = !DILocation(line: 206, column: 15, scope: !14352, inlinedAt: !14354)
!14378 = !DILocation(line: 207, column: 4, scope: !14352, inlinedAt: !14354)
!14379 = !DILocation(line: 207, column: 9, scope: !14352, inlinedAt: !14354)
!14380 = !DILocation(line: 207, column: 12, scope: !14352, inlinedAt: !14354)
!14381 = !DILocation(line: 206, column: 44, scope: !14352, inlinedAt: !14354)
!14382 = !DILocation(line: 207, column: 37, scope: !14352, inlinedAt: !14354)
!14383 = !DILocation(line: 217, column: 33, scope: !14343, inlinedAt: !14346)
!14384 = !DILocation(line: 217, column: 46, scope: !14343, inlinedAt: !14346)
!14385 = !DILocation(line: 214, column: 2, scope: !14343, inlinedAt: !14346)
!14386 = !{i32 -2147037456, i32 -2147037396}
!14387 = !DILocation(line: 219, column: 9, scope: !14343, inlinedAt: !14346)
!14388 = !DILocation(line: 135, column: 2, scope: !14335)
!14389 = distinct !DISubprogram(name: "kasan_check_read", scope: !14390, file: !14390, line: 34, type: !14391, scopeLine: 35, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!14390 = !DIFile(filename: "./include/linux/kasan-checks.h", directory: "/home/lizy2001/genbc/linux")
!14391 = !DISubroutineType(types: !14392)
!14392 = !{!540, !11633, !7}
!14393 = !DILocalVariable(name: "p", arg: 1, scope: !14389, file: !14390, line: 34, type: !11633)
!14394 = !DILocation(line: 34, column: 58, scope: !14389)
!14395 = !DILocalVariable(name: "size", arg: 2, scope: !14389, file: !14390, line: 34, type: !7)
!14396 = !DILocation(line: 34, column: 74, scope: !14389)
!14397 = !DILocation(line: 36, column: 2, scope: !14389)
!14398 = distinct !DISubprogram(name: "kcsan_check_access", scope: !14399, file: !14399, line: 178, type: !14400, scopeLine: 179, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!14399 = !DIFile(filename: "./include/linux/kcsan-checks.h", directory: "/home/lizy2001/genbc/linux")
!14400 = !DISubroutineType(types: !14401)
!14401 = !{null, !11633, !594, !37}
!14402 = !DILocalVariable(name: "ptr", arg: 1, scope: !14398, file: !14399, line: 178, type: !11633)
!14403 = !DILocation(line: 178, column: 60, scope: !14398)
!14404 = !DILocalVariable(name: "size", arg: 2, scope: !14398, file: !14399, line: 178, type: !594)
!14405 = !DILocation(line: 178, column: 72, scope: !14398)
!14406 = !DILocalVariable(name: "type", arg: 3, scope: !14398, file: !14399, line: 179, type: !37)
!14407 = !DILocation(line: 179, column: 15, scope: !14398)
!14408 = !DILocation(line: 179, column: 23, scope: !14398)
!14409 = distinct !DISubprogram(name: "queue_work", scope: !1808, file: !1808, line: 504, type: !14410, scopeLine: 506, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!14410 = !DISubroutineType(types: !14411)
!14411 = !{!540, !2757, !1817}
!14412 = !DILocalVariable(name: "wq", arg: 1, scope: !14409, file: !1808, line: 504, type: !2757)
!14413 = !DILocation(line: 504, column: 56, scope: !14409)
!14414 = !DILocalVariable(name: "work", arg: 2, scope: !14409, file: !1808, line: 505, type: !1817)
!14415 = !DILocation(line: 505, column: 30, scope: !14409)
!14416 = !DILocation(line: 507, column: 41, scope: !14409)
!14417 = !DILocation(line: 507, column: 45, scope: !14409)
!14418 = !DILocation(line: 507, column: 9, scope: !14409)
!14419 = !DILocation(line: 507, column: 2, scope: !14409)
!14420 = distinct !DISubprogram(name: "macb_tx_desc", scope: !3, file: !3, line: 182, type: !14421, scopeLine: 184, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!14421 = !DISubroutineType(types: !14422)
!14422 = !{!10636, !10234, !7}
!14423 = !DILocalVariable(name: "queue", arg: 1, scope: !14420, file: !3, line: 182, type: !10234)
!14424 = !DILocation(line: 182, column: 62, scope: !14420)
!14425 = !DILocalVariable(name: "index", arg: 2, scope: !14420, file: !3, line: 183, type: !7)
!14426 = !DILocation(line: 183, column: 21, scope: !14420)
!14427 = !DILocation(line: 185, column: 28, scope: !14420)
!14428 = !DILocation(line: 185, column: 35, scope: !14420)
!14429 = !DILocation(line: 185, column: 39, scope: !14420)
!14430 = !DILocation(line: 185, column: 10, scope: !14420)
!14431 = !DILocation(line: 185, column: 8, scope: !14420)
!14432 = !DILocation(line: 186, column: 32, scope: !14420)
!14433 = !DILocation(line: 186, column: 39, scope: !14420)
!14434 = !DILocation(line: 186, column: 43, scope: !14420)
!14435 = !DILocation(line: 186, column: 10, scope: !14420)
!14436 = !DILocation(line: 186, column: 8, scope: !14420)
!14437 = !DILocation(line: 187, column: 10, scope: !14420)
!14438 = !DILocation(line: 187, column: 17, scope: !14420)
!14439 = !DILocation(line: 187, column: 25, scope: !14420)
!14440 = !DILocation(line: 187, column: 2, scope: !14420)
!14441 = distinct !DISubprogram(name: "macb_tx_skb", scope: !3, file: !3, line: 190, type: !14442, scopeLine: 192, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!14442 = !DISubroutineType(types: !14443)
!14443 = !{!10642, !10234, !7}
!14444 = !DILocalVariable(name: "queue", arg: 1, scope: !14441, file: !3, line: 190, type: !10234)
!14445 = !DILocation(line: 190, column: 59, scope: !14441)
!14446 = !DILocalVariable(name: "index", arg: 2, scope: !14441, file: !3, line: 191, type: !7)
!14447 = !DILocation(line: 191, column: 25, scope: !14441)
!14448 = !DILocation(line: 193, column: 10, scope: !14441)
!14449 = !DILocation(line: 193, column: 17, scope: !14441)
!14450 = !DILocation(line: 193, column: 42, scope: !14441)
!14451 = !DILocation(line: 193, column: 49, scope: !14441)
!14452 = !DILocation(line: 193, column: 53, scope: !14441)
!14453 = !DILocation(line: 193, column: 24, scope: !14441)
!14454 = !DILocation(line: 193, column: 2, scope: !14441)
!14455 = distinct !DISubprogram(name: "skb_end_pointer", scope: !422, file: !422, line: 1404, type: !14456, scopeLine: 1405, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!14456 = !DISubroutineType(types: !14457)
!14457 = !{!7745, !8807}
!14458 = !DILocalVariable(name: "skb", arg: 1, scope: !14455, file: !422, line: 1404, type: !8807)
!14459 = !DILocation(line: 1404, column: 68, scope: !14455)
!14460 = !DILocation(line: 1406, column: 9, scope: !14455)
!14461 = !DILocation(line: 1406, column: 14, scope: !14455)
!14462 = !DILocation(line: 1406, column: 21, scope: !14455)
!14463 = !DILocation(line: 1406, column: 26, scope: !14455)
!14464 = !DILocation(line: 1406, column: 19, scope: !14455)
!14465 = !DILocation(line: 1406, column: 2, scope: !14455)
!14466 = distinct !DISubprogram(name: "gem_ptp_do_txstamp", scope: !9997, file: !9997, line: 1265, type: !14467, scopeLine: 1266, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!14467 = !DISubroutineType(types: !14468)
!14468 = !{!37, !10234, !420, !10636}
!14469 = !DILocalVariable(name: "queue", arg: 1, scope: !14466, file: !9997, line: 1265, type: !10234)
!14470 = !DILocation(line: 1265, column: 57, scope: !14466)
!14471 = !DILocalVariable(name: "skb", arg: 2, scope: !14466, file: !9997, line: 1265, type: !420)
!14472 = !DILocation(line: 1265, column: 80, scope: !14466)
!14473 = !DILocalVariable(name: "desc", arg: 3, scope: !14466, file: !9997, line: 1265, type: !10636)
!14474 = !DILocation(line: 1265, column: 107, scope: !14466)
!14475 = !DILocation(line: 1267, column: 6, scope: !14476)
!14476 = distinct !DILexicalBlock(scope: !14466, file: !9997, line: 1267, column: 6)
!14477 = !DILocation(line: 1267, column: 13, scope: !14476)
!14478 = !DILocation(line: 1267, column: 17, scope: !14476)
!14479 = !DILocation(line: 1267, column: 31, scope: !14476)
!14480 = !DILocation(line: 1267, column: 39, scope: !14476)
!14481 = !DILocation(line: 1267, column: 6, scope: !14466)
!14482 = !DILocation(line: 1268, column: 3, scope: !14476)
!14483 = !DILocation(line: 1270, column: 25, scope: !14466)
!14484 = !DILocation(line: 1270, column: 32, scope: !14466)
!14485 = !DILocation(line: 1270, column: 37, scope: !14466)
!14486 = !DILocation(line: 1270, column: 9, scope: !14466)
!14487 = !DILocation(line: 1270, column: 2, scope: !14466)
!14488 = !DILocation(line: 1271, column: 1, scope: !14466)
!14489 = distinct !DISubprogram(name: "macb_tx_unmap", scope: !3, file: !3, line: 839, type: !14490, scopeLine: 840, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!14490 = !DISubroutineType(types: !14491)
!14491 = !{null, !10238, !10642}
!14492 = !DILocalVariable(name: "bp", arg: 1, scope: !14489, file: !3, line: 839, type: !10238)
!14493 = !DILocation(line: 839, column: 40, scope: !14489)
!14494 = !DILocalVariable(name: "tx_skb", arg: 2, scope: !14489, file: !3, line: 839, type: !10642)
!14495 = !DILocation(line: 839, column: 64, scope: !14489)
!14496 = !DILocation(line: 841, column: 6, scope: !14497)
!14497 = distinct !DILexicalBlock(scope: !14489, file: !3, line: 841, column: 6)
!14498 = !DILocation(line: 841, column: 14, scope: !14497)
!14499 = !DILocation(line: 841, column: 6, scope: !14489)
!14500 = !DILocation(line: 842, column: 7, scope: !14501)
!14501 = distinct !DILexicalBlock(scope: !14502, file: !3, line: 842, column: 7)
!14502 = distinct !DILexicalBlock(scope: !14497, file: !3, line: 841, column: 23)
!14503 = !DILocation(line: 842, column: 15, scope: !14501)
!14504 = !DILocation(line: 842, column: 7, scope: !14502)
!14505 = !DILocation(line: 843, column: 4, scope: !14501)
!14506 = !DILocation(line: 846, column: 4, scope: !14501)
!14507 = !DILocation(line: 848, column: 3, scope: !14502)
!14508 = !DILocation(line: 848, column: 11, scope: !14502)
!14509 = !DILocation(line: 848, column: 19, scope: !14502)
!14510 = !DILocation(line: 849, column: 2, scope: !14502)
!14511 = !DILocation(line: 851, column: 6, scope: !14512)
!14512 = distinct !DILexicalBlock(scope: !14489, file: !3, line: 851, column: 6)
!14513 = !DILocation(line: 851, column: 14, scope: !14512)
!14514 = !DILocation(line: 851, column: 6, scope: !14489)
!14515 = !DILocation(line: 852, column: 21, scope: !14516)
!14516 = distinct !DILexicalBlock(scope: !14512, file: !3, line: 851, column: 19)
!14517 = !DILocation(line: 852, column: 29, scope: !14516)
!14518 = !DILocation(line: 852, column: 3, scope: !14516)
!14519 = !DILocation(line: 853, column: 3, scope: !14516)
!14520 = !DILocation(line: 853, column: 11, scope: !14516)
!14521 = !DILocation(line: 853, column: 15, scope: !14516)
!14522 = !DILocation(line: 854, column: 2, scope: !14516)
!14523 = !DILocation(line: 855, column: 1, scope: !14489)
!14524 = distinct !DISubprogram(name: "__netif_subqueue_stopped", scope: !36, file: !36, line: 3602, type: !14525, scopeLine: 3604, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!14525 = !DISubroutineType(types: !14526)
!14526 = !{!540, !2682, !1038}
!14527 = !DILocalVariable(name: "dev", arg: 1, scope: !14524, file: !36, line: 3602, type: !2682)
!14528 = !DILocation(line: 3602, column: 70, scope: !14524)
!14529 = !DILocalVariable(name: "queue_index", arg: 2, scope: !14524, file: !36, line: 3603, type: !1038)
!14530 = !DILocation(line: 3603, column: 14, scope: !14524)
!14531 = !DILocalVariable(name: "txq", scope: !14524, file: !36, line: 3605, type: !8906)
!14532 = !DILocation(line: 3605, column: 23, scope: !14524)
!14533 = !DILocation(line: 3605, column: 49, scope: !14524)
!14534 = !DILocation(line: 3605, column: 54, scope: !14524)
!14535 = !DILocation(line: 3605, column: 29, scope: !14524)
!14536 = !DILocation(line: 3607, column: 32, scope: !14524)
!14537 = !DILocation(line: 3607, column: 9, scope: !14524)
!14538 = !DILocation(line: 3607, column: 2, scope: !14524)
!14539 = distinct !DISubprogram(name: "netif_wake_subqueue", scope: !36, file: !36, line: 3623, type: !14540, scopeLine: 3624, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!14540 = !DISubroutineType(types: !14541)
!14541 = !{null, !295, !1038}
!14542 = !DILocalVariable(name: "dev", arg: 1, scope: !14539, file: !36, line: 3623, type: !295)
!14543 = !DILocation(line: 3623, column: 59, scope: !14539)
!14544 = !DILocalVariable(name: "queue_index", arg: 2, scope: !14539, file: !36, line: 3623, type: !1038)
!14545 = !DILocation(line: 3623, column: 68, scope: !14539)
!14546 = !DILocalVariable(name: "txq", scope: !14539, file: !36, line: 3625, type: !8906)
!14547 = !DILocation(line: 3625, column: 23, scope: !14539)
!14548 = !DILocation(line: 3625, column: 49, scope: !14539)
!14549 = !DILocation(line: 3625, column: 54, scope: !14539)
!14550 = !DILocation(line: 3625, column: 29, scope: !14539)
!14551 = !DILocation(line: 3627, column: 22, scope: !14539)
!14552 = !DILocation(line: 3627, column: 2, scope: !14539)
!14553 = !DILocation(line: 3628, column: 1, scope: !14539)
!14554 = distinct !DISubprogram(name: "macb_tx_ring_wrap", scope: !3, file: !3, line: 177, type: !14555, scopeLine: 178, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!14555 = !DISubroutineType(types: !14556)
!14556 = !{!7, !10238, !7}
!14557 = !DILocalVariable(name: "bp", arg: 1, scope: !14554, file: !3, line: 177, type: !10238)
!14558 = !DILocation(line: 177, column: 52, scope: !14554)
!14559 = !DILocalVariable(name: "index", arg: 2, scope: !14554, file: !3, line: 177, type: !7)
!14560 = !DILocation(line: 177, column: 69, scope: !14554)
!14561 = !DILocation(line: 179, column: 9, scope: !14554)
!14562 = !DILocation(line: 179, column: 18, scope: !14554)
!14563 = !DILocation(line: 179, column: 22, scope: !14554)
!14564 = !DILocation(line: 179, column: 35, scope: !14554)
!14565 = !DILocation(line: 179, column: 15, scope: !14554)
!14566 = !DILocation(line: 179, column: 2, scope: !14554)
!14567 = distinct !DISubprogram(name: "macb_adj_dma_desc_idx", scope: !3, file: !3, line: 150, type: !14555, scopeLine: 151, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!14568 = !DILocalVariable(name: "bp", arg: 1, scope: !14567, file: !3, line: 150, type: !10238)
!14569 = !DILocation(line: 150, column: 56, scope: !14567)
!14570 = !DILocalVariable(name: "desc_idx", arg: 2, scope: !14567, file: !3, line: 150, type: !7)
!14571 = !DILocation(line: 150, column: 73, scope: !14567)
!14572 = !DILocation(line: 153, column: 10, scope: !14567)
!14573 = !DILocation(line: 153, column: 14, scope: !14567)
!14574 = !DILocation(line: 153, column: 2, scope: !14567)
!14575 = !DILocation(line: 156, column: 12, scope: !14576)
!14576 = distinct !DILexicalBlock(scope: !14567, file: !3, line: 153, column: 26)
!14577 = !DILocation(line: 157, column: 3, scope: !14576)
!14578 = !DILocation(line: 159, column: 12, scope: !14576)
!14579 = !DILocation(line: 160, column: 3, scope: !14576)
!14580 = !DILocation(line: 162, column: 3, scope: !14576)
!14581 = !DILocation(line: 165, column: 9, scope: !14567)
!14582 = !DILocation(line: 165, column: 2, scope: !14567)
!14583 = distinct !DISubprogram(name: "dma_unmap_single_attrs", scope: !10847, file: !10847, line: 283, type: !14584, scopeLine: 285, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!14584 = !DISubroutineType(types: !14585)
!14585 = !{null, !4172, !7084, !594, !10003, !317}
!14586 = !DILocalVariable(name: "dev", arg: 1, scope: !14583, file: !10847, line: 283, type: !4172)
!14587 = !DILocation(line: 283, column: 58, scope: !14583)
!14588 = !DILocalVariable(name: "addr", arg: 2, scope: !14583, file: !10847, line: 283, type: !7084)
!14589 = !DILocation(line: 283, column: 74, scope: !14583)
!14590 = !DILocalVariable(name: "size", arg: 3, scope: !14583, file: !10847, line: 284, type: !594)
!14591 = !DILocation(line: 284, column: 10, scope: !14583)
!14592 = !DILocalVariable(name: "dir", arg: 4, scope: !14583, file: !10847, line: 284, type: !10003)
!14593 = !DILocation(line: 284, column: 40, scope: !14583)
!14594 = !DILocalVariable(name: "attrs", arg: 5, scope: !14583, file: !10847, line: 284, type: !317)
!14595 = !DILocation(line: 284, column: 59, scope: !14583)
!14596 = !DILocation(line: 286, column: 30, scope: !14583)
!14597 = !DILocation(line: 286, column: 35, scope: !14583)
!14598 = !DILocation(line: 286, column: 41, scope: !14583)
!14599 = !DILocation(line: 286, column: 47, scope: !14583)
!14600 = !DILocation(line: 286, column: 52, scope: !14583)
!14601 = !DILocation(line: 286, column: 9, scope: !14583)
!14602 = !DILocation(line: 286, column: 2, scope: !14583)
!14603 = distinct !DISubprogram(name: "dev_kfree_skb_any", scope: !36, file: !36, line: 3817, type: !2650, scopeLine: 3818, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!14604 = !DILocalVariable(name: "skb", arg: 1, scope: !14603, file: !36, line: 3817, type: !420)
!14605 = !DILocation(line: 3817, column: 54, scope: !14603)
!14606 = !DILocation(line: 3819, column: 22, scope: !14603)
!14607 = !DILocation(line: 3819, column: 2, scope: !14603)
!14608 = !DILocation(line: 3820, column: 1, scope: !14603)
!14609 = distinct !DISubprogram(name: "netdev_get_tx_queue", scope: !36, file: !36, line: 2234, type: !14610, scopeLine: 2236, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!14610 = !DISubroutineType(types: !14611)
!14611 = !{!8906, !2682, !7}
!14612 = !DILocalVariable(name: "dev", arg: 1, scope: !14609, file: !36, line: 2234, type: !2682)
!14613 = !DILocation(line: 2234, column: 67, scope: !14609)
!14614 = !DILocalVariable(name: "index", arg: 2, scope: !14609, file: !36, line: 2235, type: !7)
!14615 = !DILocation(line: 2235, column: 20, scope: !14609)
!14616 = !DILocation(line: 2237, column: 10, scope: !14609)
!14617 = !DILocation(line: 2237, column: 15, scope: !14609)
!14618 = !DILocation(line: 2237, column: 19, scope: !14609)
!14619 = !DILocation(line: 2237, column: 2, scope: !14609)
!14620 = distinct !DISubprogram(name: "netif_tx_queue_stopped", scope: !36, file: !36, line: 3343, type: !14621, scopeLine: 3344, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!14621 = !DISubroutineType(types: !14622)
!14622 = !{!540, !14623}
!14623 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14624, size: 64)
!14624 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !8907)
!14625 = !DILocalVariable(name: "dev_queue", arg: 1, scope: !14620, file: !36, line: 3343, type: !14623)
!14626 = !DILocation(line: 3343, column: 70, scope: !14620)
!14627 = !DILocation(line: 3345, column: 43, scope: !14620)
!14628 = !DILocation(line: 3345, column: 54, scope: !14620)
!14629 = !DILocation(line: 3345, column: 9, scope: !14620)
!14630 = !DILocation(line: 3345, column: 2, scope: !14620)
!14631 = distinct !DISubprogram(name: "test_and_set_bit", scope: !14632, file: !14632, line: 68, type: !14633, scopeLine: 69, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!14632 = !DIFile(filename: "./include/asm-generic/bitops/instrumented-atomic.h", directory: "/home/lizy2001/genbc/linux")
!14633 = !DISubroutineType(types: !14634)
!14634 = !{!540, !513, !14635}
!14635 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14341, size: 64)
!14636 = !DILocalVariable(name: "nr", arg: 1, scope: !14637, file: !14344, line: 136, type: !513)
!14637 = distinct !DISubprogram(name: "arch_test_and_set_bit", scope: !14344, file: !14344, line: 136, type: !14633, scopeLine: 137, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!14638 = !DILocation(line: 136, column: 28, scope: !14637, inlinedAt: !14639)
!14639 = distinct !DILocation(line: 71, column: 9, scope: !14631)
!14640 = !DILocalVariable(name: "addr", arg: 2, scope: !14637, file: !14344, line: 136, type: !14635)
!14641 = !DILocation(line: 136, column: 56, scope: !14637, inlinedAt: !14639)
!14642 = !DILocalVariable(name: "c", scope: !14643, file: !14344, line: 138, type: !540)
!14643 = distinct !DILexicalBlock(scope: !14637, file: !14344, line: 138, column: 9)
!14644 = !DILocation(line: 138, column: 9, scope: !14643, inlinedAt: !14639)
!14645 = !DILocation(line: 99, column: 79, scope: !11629, inlinedAt: !14646)
!14646 = distinct !DILocation(line: 70, column: 2, scope: !14631)
!14647 = !DILocation(line: 99, column: 89, scope: !11629, inlinedAt: !14646)
!14648 = !DILocalVariable(name: "nr", arg: 1, scope: !14631, file: !14632, line: 68, type: !513)
!14649 = !DILocation(line: 68, column: 42, scope: !14631)
!14650 = !DILocalVariable(name: "addr", arg: 2, scope: !14631, file: !14632, line: 68, type: !14635)
!14651 = !DILocation(line: 68, column: 70, scope: !14631)
!14652 = !DILocation(line: 70, column: 31, scope: !14631)
!14653 = !DILocation(line: 70, column: 38, scope: !14631)
!14654 = !DILocation(line: 70, column: 36, scope: !14631)
!14655 = !DILocation(line: 101, column: 20, scope: !11629, inlinedAt: !14646)
!14656 = !DILocation(line: 101, column: 23, scope: !11629, inlinedAt: !14646)
!14657 = !DILocation(line: 101, column: 2, scope: !11629, inlinedAt: !14646)
!14658 = !DILocation(line: 102, column: 2, scope: !11629, inlinedAt: !14646)
!14659 = !DILocation(line: 71, column: 31, scope: !14631)
!14660 = !DILocation(line: 71, column: 35, scope: !14631)
!14661 = !{i32 -2147042218, i32 -2147042122}
!14662 = !DILocation(line: 71, column: 2, scope: !14631)
!14663 = distinct !DISubprogram(name: "kasan_check_write", scope: !14390, file: !14390, line: 38, type: !14391, scopeLine: 39, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!14664 = !DILocalVariable(name: "p", arg: 1, scope: !14663, file: !14390, line: 38, type: !11633)
!14665 = !DILocation(line: 38, column: 59, scope: !14663)
!14666 = !DILocalVariable(name: "size", arg: 2, scope: !14663, file: !14390, line: 38, type: !7)
!14667 = !DILocation(line: 38, column: 75, scope: !14663)
!14668 = !DILocation(line: 40, column: 2, scope: !14663)
!14669 = distinct !DISubprogram(name: "arch_local_irq_save", scope: !14670, file: !14670, line: 666, type: !14671, scopeLine: 667, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!14670 = !DIFile(filename: "./arch/x86/include/asm/paravirt.h", directory: "/home/lizy2001/genbc/linux")
!14671 = !DISubroutineType(types: !14672)
!14672 = !{!317}
!14673 = !DILocalVariable(name: "f", scope: !14669, file: !14670, line: 668, type: !317)
!14674 = !DILocation(line: 668, column: 16, scope: !14669)
!14675 = !DILocation(line: 670, column: 6, scope: !14669)
!14676 = !DILocation(line: 670, column: 4, scope: !14669)
!14677 = !DILocation(line: 671, column: 2, scope: !14669)
!14678 = !DILocation(line: 672, column: 9, scope: !14669)
!14679 = !DILocation(line: 672, column: 2, scope: !14669)
!14680 = distinct !DISubprogram(name: "macb_halt_tx", scope: !3, file: !3, line: 819, type: !10388, scopeLine: 820, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!14681 = !DILocalVariable(name: "u", arg: 1, scope: !14682, file: !14683, line: 410, type: !5428)
!14682 = distinct !DISubprogram(name: "usecs_to_jiffies", scope: !14683, file: !14683, line: 410, type: !14684, scopeLine: 411, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!14683 = !DIFile(filename: "./include/linux/jiffies.h", directory: "/home/lizy2001/genbc/linux")
!14684 = !DISubroutineType(types: !14685)
!14685 = !{!317, !5428}
!14686 = !DILocation(line: 410, column: 74, scope: !14682, inlinedAt: !14687)
!14687 = distinct !DILocation(line: 826, column: 22, scope: !14680)
!14688 = !DILocalVariable(name: "bp", arg: 1, scope: !14680, file: !3, line: 819, type: !10238)
!14689 = !DILocation(line: 819, column: 38, scope: !14680)
!14690 = !DILocalVariable(name: "halt_time", scope: !14680, file: !3, line: 821, type: !317)
!14691 = !DILocation(line: 821, column: 16, scope: !14680)
!14692 = !DILocalVariable(name: "timeout", scope: !14680, file: !3, line: 821, type: !317)
!14693 = !DILocation(line: 821, column: 27, scope: !14680)
!14694 = !DILocalVariable(name: "status", scope: !14680, file: !3, line: 822, type: !707)
!14695 = !DILocation(line: 822, column: 7, scope: !14680)
!14696 = !DILocation(line: 824, column: 2, scope: !14680)
!14697 = !DILocation(line: 826, column: 12, scope: !14680)
!14698 = !DILocation(line: 412, column: 27, scope: !14699, inlinedAt: !14687)
!14699 = distinct !DILexicalBlock(scope: !14682, file: !14683, line: 412, column: 6)
!14700 = !DILocation(line: 412, column: 6, scope: !14699, inlinedAt: !14687)
!14701 = !DILocation(line: 412, column: 6, scope: !14682, inlinedAt: !14687)
!14702 = !DILocation(line: 413, column: 7, scope: !14703, inlinedAt: !14687)
!14703 = distinct !DILexicalBlock(scope: !14704, file: !14683, line: 413, column: 7)
!14704 = distinct !DILexicalBlock(scope: !14699, file: !14683, line: 412, column: 31)
!14705 = !DILocation(line: 413, column: 11, scope: !14703, inlinedAt: !14687)
!14706 = !DILocation(line: 413, column: 9, scope: !14703, inlinedAt: !14687)
!14707 = !DILocation(line: 413, column: 7, scope: !14704, inlinedAt: !14687)
!14708 = !DILocation(line: 414, column: 4, scope: !14703, inlinedAt: !14687)
!14709 = !DILocation(line: 415, column: 28, scope: !14704, inlinedAt: !14687)
!14710 = !DILocation(line: 415, column: 10, scope: !14704, inlinedAt: !14687)
!14711 = !DILocation(line: 415, column: 3, scope: !14704, inlinedAt: !14687)
!14712 = !DILocation(line: 417, column: 29, scope: !14713, inlinedAt: !14687)
!14713 = distinct !DILexicalBlock(scope: !14699, file: !14683, line: 416, column: 9)
!14714 = !DILocation(line: 417, column: 10, scope: !14713, inlinedAt: !14687)
!14715 = !DILocation(line: 417, column: 3, scope: !14713, inlinedAt: !14687)
!14716 = !DILocation(line: 419, column: 1, scope: !14682, inlinedAt: !14687)
!14717 = !DILocation(line: 826, column: 20, scope: !14680)
!14718 = !DILocation(line: 826, column: 10, scope: !14680)
!14719 = !DILocation(line: 827, column: 2, scope: !14680)
!14720 = !DILocation(line: 828, column: 15, scope: !14721)
!14721 = distinct !DILexicalBlock(scope: !14680, file: !3, line: 827, column: 5)
!14722 = !DILocation(line: 828, column: 13, scope: !14721)
!14723 = !DILocation(line: 829, column: 12, scope: !14721)
!14724 = !DILocation(line: 829, column: 10, scope: !14721)
!14725 = !DILocation(line: 830, column: 9, scope: !14726)
!14726 = distinct !DILexicalBlock(scope: !14721, file: !3, line: 830, column: 7)
!14727 = !DILocation(line: 830, column: 16, scope: !14726)
!14728 = !DILocation(line: 830, column: 7, scope: !14721)
!14729 = !DILocation(line: 831, column: 4, scope: !14726)
!14730 = !DILocation(line: 833, column: 3, scope: !14731)
!14731 = distinct !DILexicalBlock(scope: !14732, file: !3, line: 833, column: 3)
!14732 = distinct !DILexicalBlock(scope: !14733, file: !3, line: 833, column: 3)
!14733 = distinct !DILexicalBlock(scope: !14734, file: !3, line: 833, column: 3)
!14734 = distinct !DILexicalBlock(scope: !14721, file: !3, line: 833, column: 3)
!14735 = !DILocation(line: 834, column: 2, scope: !14721)
!14736 = !DILocation(line: 834, column: 11, scope: !14680)
!14737 = distinct !{!14737, !14719, !14738}
!14738 = !DILocation(line: 834, column: 42, scope: !14680)
!14739 = !DILocation(line: 836, column: 2, scope: !14680)
!14740 = !DILocation(line: 837, column: 1, scope: !14680)
!14741 = distinct !DISubprogram(name: "macb_set_addr", scope: !3, file: !3, line: 857, type: !14742, scopeLine: 858, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!14742 = !DISubroutineType(types: !14743)
!14743 = !{null, !10238, !10636, !7084}
!14744 = !DILocalVariable(name: "bp", arg: 1, scope: !14741, file: !3, line: 857, type: !10238)
!14745 = !DILocation(line: 857, column: 40, scope: !14741)
!14746 = !DILocalVariable(name: "desc", arg: 2, scope: !14741, file: !3, line: 857, type: !10636)
!14747 = !DILocation(line: 857, column: 66, scope: !14741)
!14748 = !DILocalVariable(name: "addr", arg: 3, scope: !14741, file: !3, line: 857, type: !7084)
!14749 = !DILocation(line: 857, column: 83, scope: !14741)
!14750 = !DILocalVariable(name: "desc_64", scope: !14741, file: !3, line: 860, type: !10704)
!14751 = !DILocation(line: 860, column: 27, scope: !14741)
!14752 = !DILocation(line: 862, column: 6, scope: !14753)
!14753 = distinct !DILexicalBlock(scope: !14741, file: !3, line: 862, column: 6)
!14754 = !DILocation(line: 862, column: 10, scope: !14753)
!14755 = !DILocation(line: 862, column: 21, scope: !14753)
!14756 = !DILocation(line: 862, column: 6, scope: !14741)
!14757 = !DILocation(line: 863, column: 27, scope: !14758)
!14758 = distinct !DILexicalBlock(scope: !14753, file: !3, line: 862, column: 39)
!14759 = !DILocation(line: 863, column: 31, scope: !14758)
!14760 = !DILocation(line: 863, column: 13, scope: !14758)
!14761 = !DILocation(line: 863, column: 11, scope: !14758)
!14762 = !DILocation(line: 864, column: 20, scope: !14758)
!14763 = !DILocation(line: 864, column: 3, scope: !14758)
!14764 = !DILocation(line: 864, column: 12, scope: !14758)
!14765 = !DILocation(line: 864, column: 18, scope: !14758)
!14766 = !DILocation(line: 869, column: 3, scope: !14758)
!14767 = !{i32 -2137654526}
!14768 = !DILocation(line: 870, column: 2, scope: !14758)
!14769 = !DILocation(line: 872, column: 15, scope: !14741)
!14770 = !DILocation(line: 872, column: 2, scope: !14741)
!14771 = !DILocation(line: 872, column: 8, scope: !14741)
!14772 = !DILocation(line: 872, column: 13, scope: !14741)
!14773 = !DILocation(line: 873, column: 1, scope: !14741)
!14774 = distinct !DISubprogram(name: "netif_tx_start_all_queues", scope: !36, file: !36, line: 3290, type: !411, scopeLine: 3291, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!14775 = !DILocalVariable(name: "dev_queue", arg: 1, scope: !14776, file: !36, line: 3274, type: !8906)
!14776 = distinct !DISubprogram(name: "netif_tx_start_queue", scope: !36, file: !36, line: 3274, type: !14777, scopeLine: 3275, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!14777 = !DISubroutineType(types: !14778)
!14778 = !{null, !8906}
!14779 = !DILocation(line: 3274, column: 71, scope: !14776, inlinedAt: !14780)
!14780 = distinct !DILocation(line: 3296, column: 3, scope: !14781)
!14781 = distinct !DILexicalBlock(scope: !14782, file: !36, line: 3294, column: 43)
!14782 = distinct !DILexicalBlock(scope: !14783, file: !36, line: 3294, column: 2)
!14783 = distinct !DILexicalBlock(scope: !14774, file: !36, line: 3294, column: 2)
!14784 = !DILocalVariable(name: "dev", arg: 1, scope: !14774, file: !36, line: 3290, type: !295)
!14785 = !DILocation(line: 3290, column: 65, scope: !14774)
!14786 = !DILocalVariable(name: "i", scope: !14774, file: !36, line: 3292, type: !7)
!14787 = !DILocation(line: 3292, column: 15, scope: !14774)
!14788 = !DILocation(line: 3294, column: 9, scope: !14783)
!14789 = !DILocation(line: 3294, column: 7, scope: !14783)
!14790 = !DILocation(line: 3294, column: 14, scope: !14782)
!14791 = !DILocation(line: 3294, column: 18, scope: !14782)
!14792 = !DILocation(line: 3294, column: 23, scope: !14782)
!14793 = !DILocation(line: 3294, column: 16, scope: !14782)
!14794 = !DILocation(line: 3294, column: 2, scope: !14783)
!14795 = !DILocalVariable(name: "txq", scope: !14781, file: !36, line: 3295, type: !8906)
!14796 = !DILocation(line: 3295, column: 24, scope: !14781)
!14797 = !DILocation(line: 3295, column: 50, scope: !14781)
!14798 = !DILocation(line: 3295, column: 55, scope: !14781)
!14799 = !DILocation(line: 3295, column: 30, scope: !14781)
!14800 = !DILocation(line: 3296, column: 24, scope: !14781)
!14801 = !DILocation(line: 3276, column: 37, scope: !14776, inlinedAt: !14780)
!14802 = !DILocation(line: 3276, column: 48, scope: !14776, inlinedAt: !14780)
!14803 = !DILocation(line: 3276, column: 2, scope: !14776, inlinedAt: !14780)
!14804 = !DILocation(line: 3297, column: 2, scope: !14781)
!14805 = !DILocation(line: 3294, column: 39, scope: !14782)
!14806 = !DILocation(line: 3294, column: 2, scope: !14782)
!14807 = distinct !{!14807, !14794, !14808}
!14808 = !DILocation(line: 3297, column: 2, scope: !14783)
!14809 = !DILocation(line: 3298, column: 1, scope: !14774)
!14810 = distinct !DISubprogram(name: "arch_local_save_flags", scope: !14670, file: !14670, line: 646, type: !14671, scopeLine: 647, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!14811 = !DILocalVariable(name: "__ret", scope: !14812, file: !14670, line: 648, type: !317)
!14812 = distinct !DILexicalBlock(scope: !14810, file: !14670, line: 648, column: 9)
!14813 = !DILocation(line: 648, column: 9, scope: !14812)
!14814 = !DILocalVariable(name: "__edi", scope: !14812, file: !14670, line: 648, type: !317)
!14815 = !DILocalVariable(name: "__esi", scope: !14812, file: !14670, line: 648, type: !317)
!14816 = !DILocalVariable(name: "__edx", scope: !14812, file: !14670, line: 648, type: !317)
!14817 = !DILocalVariable(name: "__ecx", scope: !14812, file: !14670, line: 648, type: !317)
!14818 = !DILocalVariable(name: "__eax", scope: !14812, file: !14670, line: 648, type: !317)
!14819 = !DILocation(line: 648, column: 9, scope: !14820)
!14820 = distinct !DILexicalBlock(scope: !14821, file: !14670, line: 648, column: 9)
!14821 = distinct !DILexicalBlock(scope: !14812, file: !14670, line: 648, column: 9)
!14822 = !{i32 -2145650625, i32 -2145648310, i32 -2145648076, i32 -2145648025, i32 -2145647997, i32 -2145647972, i32 -2145648288, i32 -2145648275, i32 -2145647837, i32 -2145647718, i32 -2145648183, i32 -2145648156, i32 -2145648128, i32 -2145648098}
!14823 = !DILocalVariable(name: "__mask", scope: !14824, file: !14670, line: 648, type: !317)
!14824 = distinct !DILexicalBlock(scope: !14820, file: !14670, line: 648, column: 9)
!14825 = !DILocation(line: 648, column: 9, scope: !14824)
!14826 = !DILocation(line: 648, column: 9, scope: !14821)
!14827 = !DILocation(line: 648, column: 2, scope: !14810)
!14828 = distinct !DISubprogram(name: "arch_local_irq_disable", scope: !14670, file: !14670, line: 656, type: !3704, scopeLine: 657, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!14829 = !DILocalVariable(name: "__edi", scope: !14830, file: !14670, line: 658, type: !317)
!14830 = distinct !DILexicalBlock(scope: !14828, file: !14670, line: 658, column: 2)
!14831 = !DILocation(line: 658, column: 2, scope: !14830)
!14832 = !DILocalVariable(name: "__esi", scope: !14830, file: !14670, line: 658, type: !317)
!14833 = !DILocalVariable(name: "__edx", scope: !14830, file: !14670, line: 658, type: !317)
!14834 = !DILocalVariable(name: "__ecx", scope: !14830, file: !14670, line: 658, type: !317)
!14835 = !DILocalVariable(name: "__eax", scope: !14830, file: !14670, line: 658, type: !317)
!14836 = !{i32 -2145643531, i32 -2145642799, i32 -2145642565, i32 -2145642514, i32 -2145642486, i32 -2145642461, i32 -2145642777, i32 -2145642764, i32 -2145642326, i32 -2145642207, i32 -2145642672, i32 -2145642645, i32 -2145642617, i32 -2145642587}
!14837 = !DILocation(line: 659, column: 1, scope: !14828)
!14838 = distinct !DISubprogram(name: "_usecs_to_jiffies", scope: !14683, file: !14683, line: 376, type: !14684, scopeLine: 377, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!14839 = !DILocalVariable(name: "u", arg: 1, scope: !14838, file: !14683, line: 376, type: !5428)
!14840 = !DILocation(line: 376, column: 66, scope: !14838)
!14841 = !DILocation(line: 378, column: 10, scope: !14838)
!14842 = !DILocation(line: 378, column: 12, scope: !14838)
!14843 = !DILocation(line: 378, column: 34, scope: !14838)
!14844 = !DILocation(line: 378, column: 39, scope: !14838)
!14845 = !DILocation(line: 378, column: 2, scope: !14838)
!14846 = distinct !DISubprogram(name: "macb_64b_desc", scope: !3, file: !3, line: 169, type: !14847, scopeLine: 170, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!14847 = !DISubroutineType(types: !14848)
!14848 = !{!10704, !10238, !10636}
!14849 = !DILocalVariable(name: "bp", arg: 1, scope: !14846, file: !3, line: 169, type: !10238)
!14850 = !DILocation(line: 169, column: 60, scope: !14846)
!14851 = !DILocalVariable(name: "desc", arg: 2, scope: !14846, file: !3, line: 169, type: !10636)
!14852 = !DILocation(line: 169, column: 86, scope: !14846)
!14853 = !DILocation(line: 171, column: 45, scope: !14846)
!14854 = !DILocation(line: 171, column: 37, scope: !14846)
!14855 = !DILocation(line: 172, column: 3, scope: !14846)
!14856 = !DILocation(line: 171, column: 9, scope: !14846)
!14857 = !DILocation(line: 171, column: 2, scope: !14846)
!14858 = distinct !DISubprogram(name: "clear_bit", scope: !14632, file: !14632, line: 39, type: !14859, scopeLine: 40, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!14859 = !DISubroutineType(types: !14860)
!14860 = !{null, !513, !14635}
!14861 = !DILocalVariable(name: "nr", arg: 1, scope: !14862, file: !14344, line: 72, type: !513)
!14862 = distinct !DISubprogram(name: "arch_clear_bit", scope: !14344, file: !14344, line: 72, type: !14859, scopeLine: 73, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!14863 = !DILocation(line: 72, column: 21, scope: !14862, inlinedAt: !14864)
!14864 = distinct !DILocation(line: 42, column: 2, scope: !14858)
!14865 = !DILocalVariable(name: "addr", arg: 2, scope: !14862, file: !14344, line: 72, type: !14635)
!14866 = !DILocation(line: 72, column: 49, scope: !14862, inlinedAt: !14864)
!14867 = !DILocalVariable(name: "v", arg: 1, scope: !14868, file: !11630, line: 84, type: !11633)
!14868 = distinct !DISubprogram(name: "instrument_atomic_write", scope: !11630, file: !11630, line: 84, type: !11631, scopeLine: 85, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!14869 = !DILocation(line: 84, column: 74, scope: !14868, inlinedAt: !14870)
!14870 = distinct !DILocation(line: 41, column: 2, scope: !14858)
!14871 = !DILocalVariable(name: "size", arg: 2, scope: !14868, file: !11630, line: 84, type: !594)
!14872 = !DILocation(line: 84, column: 84, scope: !14868, inlinedAt: !14870)
!14873 = !DILocalVariable(name: "nr", arg: 1, scope: !14858, file: !14632, line: 39, type: !513)
!14874 = !DILocation(line: 39, column: 35, scope: !14858)
!14875 = !DILocalVariable(name: "addr", arg: 2, scope: !14858, file: !14632, line: 39, type: !14635)
!14876 = !DILocation(line: 39, column: 63, scope: !14858)
!14877 = !DILocation(line: 41, column: 26, scope: !14858)
!14878 = !DILocation(line: 41, column: 33, scope: !14858)
!14879 = !DILocation(line: 41, column: 31, scope: !14858)
!14880 = !DILocation(line: 86, column: 20, scope: !14868, inlinedAt: !14870)
!14881 = !DILocation(line: 86, column: 23, scope: !14868, inlinedAt: !14870)
!14882 = !DILocation(line: 86, column: 2, scope: !14868, inlinedAt: !14870)
!14883 = !DILocation(line: 87, column: 2, scope: !14868, inlinedAt: !14870)
!14884 = !DILocation(line: 42, column: 17, scope: !14858)
!14885 = !DILocation(line: 42, column: 21, scope: !14858)
!14886 = !DILocation(line: 74, column: 27, scope: !14887, inlinedAt: !14864)
!14887 = distinct !DILexicalBlock(scope: !14862, file: !14344, line: 74, column: 6)
!14888 = !DILocation(line: 74, column: 6, scope: !14887, inlinedAt: !14864)
!14889 = !DILocation(line: 74, column: 6, scope: !14862, inlinedAt: !14864)
!14890 = !DILocation(line: 76, column: 6, scope: !14891, inlinedAt: !14864)
!14891 = distinct !DILexicalBlock(scope: !14887, file: !14344, line: 74, column: 32)
!14892 = !DILocation(line: 77, column: 13, scope: !14891, inlinedAt: !14864)
!14893 = !DILocation(line: 77, column: 12, scope: !14891, inlinedAt: !14864)
!14894 = !DILocation(line: 75, column: 3, scope: !14891, inlinedAt: !14864)
!14895 = !{i32 -2147045750}
!14896 = !DILocation(line: 78, column: 2, scope: !14891, inlinedAt: !14864)
!14897 = !DILocation(line: 80, column: 8, scope: !14898, inlinedAt: !14864)
!14898 = distinct !DILexicalBlock(scope: !14887, file: !14344, line: 78, column: 9)
!14899 = !DILocation(line: 80, column: 32, scope: !14898, inlinedAt: !14864)
!14900 = !DILocation(line: 79, column: 3, scope: !14898, inlinedAt: !14864)
!14901 = !{i32 -2147045618}
!14902 = !DILocation(line: 43, column: 1, scope: !14858)
!14903 = distinct !DISubprogram(name: "arch_local_irq_restore", scope: !14670, file: !14670, line: 651, type: !10608, scopeLine: 652, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!14904 = !DILocalVariable(name: "f", arg: 1, scope: !14903, file: !14670, line: 651, type: !317)
!14905 = !DILocation(line: 651, column: 65, scope: !14903)
!14906 = !DILocalVariable(name: "__edi", scope: !14907, file: !14670, line: 653, type: !317)
!14907 = distinct !DILexicalBlock(scope: !14903, file: !14670, line: 653, column: 2)
!14908 = !DILocation(line: 653, column: 2, scope: !14907)
!14909 = !DILocalVariable(name: "__esi", scope: !14907, file: !14670, line: 653, type: !317)
!14910 = !DILocalVariable(name: "__edx", scope: !14907, file: !14670, line: 653, type: !317)
!14911 = !DILocalVariable(name: "__ecx", scope: !14907, file: !14670, line: 653, type: !317)
!14912 = !DILocalVariable(name: "__eax", scope: !14907, file: !14670, line: 653, type: !317)
!14913 = !{i32 -2145646158, i32 -2145645408, i32 -2145645174, i32 -2145645123, i32 -2145645095, i32 -2145645070, i32 -2145645386, i32 -2145645373, i32 -2145644935, i32 -2145644816, i32 -2145645281, i32 -2145645254, i32 -2145645226, i32 -2145645196}
!14914 = !DILocation(line: 654, column: 1, scope: !14903)
!14915 = distinct !DISubprogram(name: "macb_open", scope: !3, file: !3, line: 2588, type: !407, scopeLine: 2589, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!14916 = !DILocalVariable(name: "dev", arg: 1, scope: !14915, file: !3, line: 2588, type: !295)
!14917 = !DILocation(line: 2588, column: 41, scope: !14915)
!14918 = !DILocalVariable(name: "bufsz", scope: !14915, file: !3, line: 2590, type: !594)
!14919 = !DILocation(line: 2590, column: 9, scope: !14915)
!14920 = !DILocation(line: 2590, column: 17, scope: !14915)
!14921 = !DILocation(line: 2590, column: 22, scope: !14915)
!14922 = !DILocation(line: 2590, column: 26, scope: !14915)
!14923 = !DILocation(line: 2590, column: 37, scope: !14915)
!14924 = !DILocation(line: 2590, column: 51, scope: !14915)
!14925 = !DILocalVariable(name: "bp", scope: !14915, file: !3, line: 2591, type: !10238)
!14926 = !DILocation(line: 2591, column: 15, scope: !14915)
!14927 = !DILocation(line: 2591, column: 32, scope: !14915)
!14928 = !DILocation(line: 2591, column: 20, scope: !14915)
!14929 = !DILocalVariable(name: "queue", scope: !14915, file: !3, line: 2592, type: !10234)
!14930 = !DILocation(line: 2592, column: 21, scope: !14915)
!14931 = !DILocalVariable(name: "q", scope: !14915, file: !3, line: 2593, type: !7)
!14932 = !DILocation(line: 2593, column: 15, scope: !14915)
!14933 = !DILocalVariable(name: "err", scope: !14915, file: !3, line: 2594, type: !37)
!14934 = !DILocation(line: 2594, column: 6, scope: !14915)
!14935 = !DILocation(line: 2598, column: 29, scope: !14915)
!14936 = !DILocation(line: 2598, column: 33, scope: !14915)
!14937 = !DILocation(line: 2598, column: 39, scope: !14915)
!14938 = !DILocation(line: 2598, column: 8, scope: !14915)
!14939 = !DILocation(line: 2598, column: 6, scope: !14915)
!14940 = !DILocation(line: 2599, column: 6, scope: !14941)
!14941 = distinct !DILexicalBlock(scope: !14915, file: !3, line: 2599, column: 6)
!14942 = !DILocation(line: 2599, column: 10, scope: !14941)
!14943 = !DILocation(line: 2599, column: 6, scope: !14915)
!14944 = !DILocation(line: 2600, column: 3, scope: !14941)
!14945 = !DILocation(line: 2603, column: 27, scope: !14915)
!14946 = !DILocation(line: 2603, column: 31, scope: !14915)
!14947 = !DILocation(line: 2603, column: 2, scope: !14915)
!14948 = !DILocation(line: 2605, column: 30, scope: !14915)
!14949 = !DILocation(line: 2605, column: 8, scope: !14915)
!14950 = !DILocation(line: 2605, column: 6, scope: !14915)
!14951 = !DILocation(line: 2606, column: 6, scope: !14952)
!14952 = distinct !DILexicalBlock(scope: !14915, file: !3, line: 2606, column: 6)
!14953 = !DILocation(line: 2606, column: 6, scope: !14915)
!14954 = !DILocation(line: 2607, column: 14, scope: !14955)
!14955 = distinct !DILexicalBlock(scope: !14952, file: !3, line: 2606, column: 11)
!14956 = !DILocation(line: 2608, column: 7, scope: !14955)
!14957 = !DILocation(line: 2607, column: 3, scope: !14955)
!14958 = !DILocation(line: 2609, column: 3, scope: !14955)
!14959 = !DILocation(line: 2612, column: 9, scope: !14960)
!14960 = distinct !DILexicalBlock(scope: !14915, file: !3, line: 2612, column: 2)
!14961 = !DILocation(line: 2612, column: 22, scope: !14960)
!14962 = !DILocation(line: 2612, column: 26, scope: !14960)
!14963 = !DILocation(line: 2612, column: 20, scope: !14960)
!14964 = !DILocation(line: 2612, column: 7, scope: !14960)
!14965 = !DILocation(line: 2612, column: 34, scope: !14966)
!14966 = distinct !DILexicalBlock(scope: !14960, file: !3, line: 2612, column: 2)
!14967 = !DILocation(line: 2612, column: 38, scope: !14966)
!14968 = !DILocation(line: 2612, column: 42, scope: !14966)
!14969 = !DILocation(line: 2612, column: 36, scope: !14966)
!14970 = !DILocation(line: 2612, column: 2, scope: !14960)
!14971 = !DILocation(line: 2613, column: 16, scope: !14966)
!14972 = !DILocation(line: 2613, column: 23, scope: !14966)
!14973 = !DILocation(line: 2613, column: 3, scope: !14966)
!14974 = !DILocation(line: 2612, column: 54, scope: !14966)
!14975 = !DILocation(line: 2612, column: 59, scope: !14966)
!14976 = !DILocation(line: 2612, column: 2, scope: !14966)
!14977 = distinct !{!14977, !14970, !14978}
!14978 = !DILocation(line: 2613, column: 27, scope: !14960)
!14979 = !DILocation(line: 2615, column: 15, scope: !14915)
!14980 = !DILocation(line: 2615, column: 2, scope: !14915)
!14981 = !DILocation(line: 2617, column: 29, scope: !14915)
!14982 = !DILocation(line: 2617, column: 8, scope: !14915)
!14983 = !DILocation(line: 2617, column: 6, scope: !14915)
!14984 = !DILocation(line: 2618, column: 6, scope: !14985)
!14985 = distinct !DILexicalBlock(scope: !14915, file: !3, line: 2618, column: 6)
!14986 = !DILocation(line: 2618, column: 6, scope: !14915)
!14987 = !DILocation(line: 2619, column: 3, scope: !14985)
!14988 = !DILocation(line: 2621, column: 28, scope: !14915)
!14989 = !DILocation(line: 2621, column: 2, scope: !14915)
!14990 = !DILocation(line: 2623, column: 6, scope: !14991)
!14991 = distinct !DILexicalBlock(scope: !14915, file: !3, line: 2623, column: 6)
!14992 = !DILocation(line: 2623, column: 10, scope: !14991)
!14993 = !DILocation(line: 2623, column: 6, scope: !14915)
!14994 = !DILocation(line: 2624, column: 3, scope: !14991)
!14995 = !DILocation(line: 2624, column: 7, scope: !14991)
!14996 = !DILocation(line: 2624, column: 17, scope: !14991)
!14997 = !DILocation(line: 2624, column: 26, scope: !14991)
!14998 = !DILocation(line: 2626, column: 2, scope: !14915)
!14999 = !DILabel(scope: !14915, name: "reset_hw", file: !3, line: 2628)
!15000 = !DILocation(line: 2628, column: 1, scope: !14915)
!15001 = !DILocation(line: 2629, column: 16, scope: !14915)
!15002 = !DILocation(line: 2629, column: 2, scope: !14915)
!15003 = !DILocation(line: 2630, column: 9, scope: !15004)
!15004 = distinct !DILexicalBlock(scope: !14915, file: !3, line: 2630, column: 2)
!15005 = !DILocation(line: 2630, column: 22, scope: !15004)
!15006 = !DILocation(line: 2630, column: 26, scope: !15004)
!15007 = !DILocation(line: 2630, column: 20, scope: !15004)
!15008 = !DILocation(line: 2630, column: 7, scope: !15004)
!15009 = !DILocation(line: 2630, column: 34, scope: !15010)
!15010 = distinct !DILexicalBlock(scope: !15004, file: !3, line: 2630, column: 2)
!15011 = !DILocation(line: 2630, column: 38, scope: !15010)
!15012 = !DILocation(line: 2630, column: 42, scope: !15010)
!15013 = !DILocation(line: 2630, column: 36, scope: !15010)
!15014 = !DILocation(line: 2630, column: 2, scope: !15004)
!15015 = !DILocation(line: 2631, column: 17, scope: !15010)
!15016 = !DILocation(line: 2631, column: 24, scope: !15010)
!15017 = !DILocation(line: 2631, column: 3, scope: !15010)
!15018 = !DILocation(line: 2630, column: 54, scope: !15010)
!15019 = !DILocation(line: 2630, column: 59, scope: !15010)
!15020 = !DILocation(line: 2630, column: 2, scope: !15010)
!15021 = distinct !{!15021, !15014, !15022}
!15022 = !DILocation(line: 2631, column: 28, scope: !15004)
!15023 = !DILocation(line: 2632, column: 23, scope: !14915)
!15024 = !DILocation(line: 2632, column: 2, scope: !14915)
!15025 = !DILabel(scope: !14915, name: "pm_exit", file: !3, line: 2633)
!15026 = !DILocation(line: 2633, column: 1, scope: !14915)
!15027 = !DILocation(line: 2634, column: 23, scope: !14915)
!15028 = !DILocation(line: 2634, column: 27, scope: !14915)
!15029 = !DILocation(line: 2634, column: 33, scope: !14915)
!15030 = !DILocation(line: 2634, column: 2, scope: !14915)
!15031 = !DILocation(line: 2635, column: 9, scope: !14915)
!15032 = !DILocation(line: 2635, column: 2, scope: !14915)
!15033 = !DILocation(line: 2636, column: 1, scope: !14915)
!15034 = distinct !DISubprogram(name: "macb_close", scope: !3, file: !3, line: 2638, type: !407, scopeLine: 2639, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!15035 = !DILocation(line: 407, column: 64, scope: !13125, inlinedAt: !15036)
!15036 = distinct !DILocation(line: 2656, column: 2, scope: !15034)
!15037 = !DILocation(line: 407, column: 84, scope: !13125, inlinedAt: !15036)
!15038 = !DILocation(line: 327, column: 67, scope: !11066, inlinedAt: !15039)
!15039 = distinct !DILocation(line: 2653, column: 2, scope: !15040)
!15040 = distinct !DILexicalBlock(scope: !15041, file: !3, line: 2653, column: 2)
!15041 = distinct !DILexicalBlock(scope: !15042, file: !3, line: 2653, column: 2)
!15042 = distinct !DILexicalBlock(scope: !15043, file: !3, line: 2653, column: 2)
!15043 = distinct !DILexicalBlock(scope: !15044, file: !3, line: 2653, column: 2)
!15044 = distinct !DILexicalBlock(scope: !15034, file: !3, line: 2653, column: 2)
!15045 = !DILocalVariable(name: "dev", arg: 1, scope: !15034, file: !3, line: 2638, type: !295)
!15046 = !DILocation(line: 2638, column: 42, scope: !15034)
!15047 = !DILocalVariable(name: "bp", scope: !15034, file: !3, line: 2640, type: !10238)
!15048 = !DILocation(line: 2640, column: 15, scope: !15034)
!15049 = !DILocation(line: 2640, column: 32, scope: !15034)
!15050 = !DILocation(line: 2640, column: 20, scope: !15034)
!15051 = !DILocalVariable(name: "queue", scope: !15034, file: !3, line: 2641, type: !10234)
!15052 = !DILocation(line: 2641, column: 21, scope: !15034)
!15053 = !DILocalVariable(name: "flags", scope: !15034, file: !3, line: 2642, type: !317)
!15054 = !DILocation(line: 2642, column: 16, scope: !15034)
!15055 = !DILocalVariable(name: "q", scope: !15034, file: !3, line: 2643, type: !7)
!15056 = !DILocation(line: 2643, column: 15, scope: !15034)
!15057 = !DILocation(line: 2645, column: 27, scope: !15034)
!15058 = !DILocation(line: 2645, column: 2, scope: !15034)
!15059 = !DILocation(line: 2647, column: 9, scope: !15060)
!15060 = distinct !DILexicalBlock(scope: !15034, file: !3, line: 2647, column: 2)
!15061 = !DILocation(line: 2647, column: 22, scope: !15060)
!15062 = !DILocation(line: 2647, column: 26, scope: !15060)
!15063 = !DILocation(line: 2647, column: 20, scope: !15060)
!15064 = !DILocation(line: 2647, column: 7, scope: !15060)
!15065 = !DILocation(line: 2647, column: 34, scope: !15066)
!15066 = distinct !DILexicalBlock(scope: !15060, file: !3, line: 2647, column: 2)
!15067 = !DILocation(line: 2647, column: 38, scope: !15066)
!15068 = !DILocation(line: 2647, column: 42, scope: !15066)
!15069 = !DILocation(line: 2647, column: 36, scope: !15066)
!15070 = !DILocation(line: 2647, column: 2, scope: !15060)
!15071 = !DILocation(line: 2648, column: 17, scope: !15066)
!15072 = !DILocation(line: 2648, column: 24, scope: !15066)
!15073 = !DILocation(line: 2648, column: 3, scope: !15066)
!15074 = !DILocation(line: 2647, column: 54, scope: !15066)
!15075 = !DILocation(line: 2647, column: 59, scope: !15066)
!15076 = !DILocation(line: 2647, column: 2, scope: !15066)
!15077 = distinct !{!15077, !15070, !15078}
!15078 = !DILocation(line: 2648, column: 28, scope: !15060)
!15079 = !DILocation(line: 2650, column: 15, scope: !15034)
!15080 = !DILocation(line: 2650, column: 19, scope: !15034)
!15081 = !DILocation(line: 2650, column: 2, scope: !15034)
!15082 = !DILocation(line: 2651, column: 25, scope: !15034)
!15083 = !DILocation(line: 2651, column: 29, scope: !15034)
!15084 = !DILocation(line: 2651, column: 2, scope: !15034)
!15085 = !DILocation(line: 2653, column: 2, scope: !15034)
!15086 = !DILocation(line: 2653, column: 2, scope: !15044)
!15087 = !DILocalVariable(name: "__dummy", scope: !15088, file: !3, line: 2653, type: !317)
!15088 = distinct !DILexicalBlock(scope: !15043, file: !3, line: 2653, column: 2)
!15089 = !DILocation(line: 2653, column: 2, scope: !15088)
!15090 = !DILocalVariable(name: "__dummy2", scope: !15088, file: !3, line: 2653, type: !317)
!15091 = !DILocation(line: 2653, column: 2, scope: !15043)
!15092 = !DILocation(line: 2653, column: 2, scope: !15042)
!15093 = !DILocation(line: 2653, column: 2, scope: !15094)
!15094 = distinct !DILexicalBlock(scope: !15042, file: !3, line: 2653, column: 2)
!15095 = !DILocalVariable(name: "__dummy", scope: !15096, file: !3, line: 2653, type: !317)
!15096 = distinct !DILexicalBlock(scope: !15097, file: !3, line: 2653, column: 2)
!15097 = distinct !DILexicalBlock(scope: !15094, file: !3, line: 2653, column: 2)
!15098 = !DILocation(line: 2653, column: 2, scope: !15096)
!15099 = !DILocalVariable(name: "__dummy2", scope: !15096, file: !3, line: 2653, type: !317)
!15100 = !DILocation(line: 2653, column: 2, scope: !15097)
!15101 = !DILocation(line: 2653, column: 2, scope: !15041)
!15102 = !{i32 -2137603163}
!15103 = !DILocation(line: 2653, column: 2, scope: !15040)
!15104 = !DILocation(line: 329, column: 10, scope: !11066, inlinedAt: !15039)
!15105 = !DILocation(line: 329, column: 16, scope: !11066, inlinedAt: !15039)
!15106 = !DILocation(line: 2654, column: 16, scope: !15034)
!15107 = !DILocation(line: 2654, column: 2, scope: !15034)
!15108 = !DILocation(line: 2655, column: 20, scope: !15034)
!15109 = !DILocation(line: 2655, column: 2, scope: !15034)
!15110 = !DILocation(line: 2656, column: 26, scope: !15034)
!15111 = !DILocation(line: 2656, column: 30, scope: !15034)
!15112 = !DILocation(line: 2656, column: 36, scope: !15034)
!15113 = !DILocation(line: 409, column: 2, scope: !13335, inlinedAt: !15036)
!15114 = !DILocation(line: 409, column: 2, scope: !13340, inlinedAt: !15036)
!15115 = !DILocation(line: 409, column: 2, scope: !13341, inlinedAt: !15036)
!15116 = !DILocation(line: 409, column: 2, scope: !13348, inlinedAt: !15036)
!15117 = !DILocation(line: 409, column: 2, scope: !13351, inlinedAt: !15036)
!15118 = !DILocation(line: 2658, column: 23, scope: !15034)
!15119 = !DILocation(line: 2658, column: 2, scope: !15034)
!15120 = !DILocation(line: 2660, column: 6, scope: !15121)
!15121 = distinct !DILexicalBlock(scope: !15034, file: !3, line: 2660, column: 6)
!15122 = !DILocation(line: 2660, column: 10, scope: !15121)
!15123 = !DILocation(line: 2660, column: 6, scope: !15034)
!15124 = !DILocation(line: 2661, column: 3, scope: !15121)
!15125 = !DILocation(line: 2661, column: 7, scope: !15121)
!15126 = !DILocation(line: 2661, column: 17, scope: !15121)
!15127 = !DILocation(line: 2661, column: 28, scope: !15121)
!15128 = !DILocation(line: 2663, column: 18, scope: !15034)
!15129 = !DILocation(line: 2663, column: 22, scope: !15034)
!15130 = !DILocation(line: 2663, column: 28, scope: !15034)
!15131 = !DILocation(line: 2663, column: 2, scope: !15034)
!15132 = !DILocation(line: 2665, column: 2, scope: !15034)
!15133 = distinct !DISubprogram(name: "macb_start_xmit", scope: !3, file: !3, line: 1988, type: !417, scopeLine: 1989, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!15134 = !DILocation(line: 407, column: 64, scope: !13125, inlinedAt: !15135)
!15135 = distinct !DILocation(line: 2056, column: 3, scope: !15136)
!15136 = distinct !DILexicalBlock(scope: !15137, file: !3, line: 2054, column: 40)
!15137 = distinct !DILexicalBlock(scope: !15133, file: !3, line: 2053, column: 6)
!15138 = !DILocation(line: 407, column: 84, scope: !13125, inlinedAt: !15135)
!15139 = !DILocation(line: 407, column: 64, scope: !13125, inlinedAt: !15140)
!15140 = distinct !DILocation(line: 2078, column: 2, scope: !15133)
!15141 = !DILocation(line: 407, column: 84, scope: !13125, inlinedAt: !15140)
!15142 = !DILocation(line: 327, column: 67, scope: !11066, inlinedAt: !15143)
!15143 = distinct !DILocation(line: 2050, column: 2, scope: !15144)
!15144 = distinct !DILexicalBlock(scope: !15145, file: !3, line: 2050, column: 2)
!15145 = distinct !DILexicalBlock(scope: !15146, file: !3, line: 2050, column: 2)
!15146 = distinct !DILexicalBlock(scope: !15147, file: !3, line: 2050, column: 2)
!15147 = distinct !DILexicalBlock(scope: !15148, file: !3, line: 2050, column: 2)
!15148 = distinct !DILexicalBlock(scope: !15133, file: !3, line: 2050, column: 2)
!15149 = !DILocalVariable(name: "skb", arg: 1, scope: !15133, file: !3, line: 1988, type: !420)
!15150 = !DILocation(line: 1988, column: 52, scope: !15133)
!15151 = !DILocalVariable(name: "dev", arg: 2, scope: !15133, file: !3, line: 1988, type: !295)
!15152 = !DILocation(line: 1988, column: 76, scope: !15133)
!15153 = !DILocalVariable(name: "queue_index", scope: !15133, file: !3, line: 1990, type: !1038)
!15154 = !DILocation(line: 1990, column: 6, scope: !15133)
!15155 = !DILocation(line: 1990, column: 42, scope: !15133)
!15156 = !DILocation(line: 1990, column: 20, scope: !15133)
!15157 = !DILocalVariable(name: "bp", scope: !15133, file: !3, line: 1991, type: !10238)
!15158 = !DILocation(line: 1991, column: 15, scope: !15133)
!15159 = !DILocation(line: 1991, column: 32, scope: !15133)
!15160 = !DILocation(line: 1991, column: 20, scope: !15133)
!15161 = !DILocalVariable(name: "queue", scope: !15133, file: !3, line: 1992, type: !10234)
!15162 = !DILocation(line: 1992, column: 21, scope: !15133)
!15163 = !DILocation(line: 1992, column: 30, scope: !15133)
!15164 = !DILocation(line: 1992, column: 34, scope: !15133)
!15165 = !DILocation(line: 1992, column: 41, scope: !15133)
!15166 = !DILocalVariable(name: "flags", scope: !15133, file: !3, line: 1993, type: !317)
!15167 = !DILocation(line: 1993, column: 16, scope: !15133)
!15168 = !DILocalVariable(name: "desc_cnt", scope: !15133, file: !3, line: 1994, type: !7)
!15169 = !DILocation(line: 1994, column: 15, scope: !15133)
!15170 = !DILocalVariable(name: "nr_frags", scope: !15133, file: !3, line: 1994, type: !7)
!15171 = !DILocation(line: 1994, column: 25, scope: !15133)
!15172 = !DILocalVariable(name: "frag_size", scope: !15133, file: !3, line: 1994, type: !7)
!15173 = !DILocation(line: 1994, column: 35, scope: !15133)
!15174 = !DILocalVariable(name: "f", scope: !15133, file: !3, line: 1994, type: !7)
!15175 = !DILocation(line: 1994, column: 46, scope: !15133)
!15176 = !DILocalVariable(name: "hdrlen", scope: !15133, file: !3, line: 1995, type: !7)
!15177 = !DILocation(line: 1995, column: 15, scope: !15133)
!15178 = !DILocalVariable(name: "is_lso", scope: !15133, file: !3, line: 1996, type: !540)
!15179 = !DILocation(line: 1996, column: 7, scope: !15133)
!15180 = !DILocalVariable(name: "ret", scope: !15133, file: !3, line: 1997, type: !419)
!15181 = !DILocation(line: 1997, column: 14, scope: !15133)
!15182 = !DILocation(line: 1999, column: 22, scope: !15183)
!15183 = distinct !DILexicalBlock(scope: !15133, file: !3, line: 1999, column: 6)
!15184 = !DILocation(line: 1999, column: 6, scope: !15183)
!15185 = !DILocation(line: 1999, column: 6, scope: !15133)
!15186 = !DILocation(line: 2000, column: 21, scope: !15187)
!15187 = distinct !DILexicalBlock(scope: !15183, file: !3, line: 1999, column: 28)
!15188 = !DILocation(line: 2000, column: 3, scope: !15187)
!15189 = !DILocation(line: 2001, column: 10, scope: !15187)
!15190 = !DILocation(line: 2001, column: 3, scope: !15187)
!15191 = !DILocation(line: 2004, column: 29, scope: !15192)
!15192 = distinct !DILexicalBlock(scope: !15133, file: !3, line: 2004, column: 6)
!15193 = !DILocation(line: 2004, column: 6, scope: !15192)
!15194 = !DILocation(line: 2004, column: 6, scope: !15133)
!15195 = !DILocation(line: 2005, column: 21, scope: !15196)
!15196 = distinct !DILexicalBlock(scope: !15192, file: !3, line: 2004, column: 35)
!15197 = !DILocation(line: 2005, column: 3, scope: !15196)
!15198 = !DILocation(line: 2006, column: 10, scope: !15196)
!15199 = !DILocation(line: 2006, column: 3, scope: !15196)
!15200 = !DILocation(line: 2009, column: 12, scope: !15133)
!15201 = !DILocation(line: 2009, column: 29, scope: !15133)
!15202 = !DILocation(line: 2009, column: 38, scope: !15133)
!15203 = !DILocation(line: 2009, column: 9, scope: !15133)
!15204 = !DILocation(line: 2011, column: 6, scope: !15205)
!15205 = distinct !DILexicalBlock(scope: !15133, file: !3, line: 2011, column: 6)
!15206 = !DILocation(line: 2011, column: 6, scope: !15133)
!15207 = !DILocation(line: 2013, column: 14, scope: !15208)
!15208 = distinct !DILexicalBlock(scope: !15209, file: !3, line: 2013, column: 7)
!15209 = distinct !DILexicalBlock(scope: !15205, file: !3, line: 2011, column: 14)
!15210 = !DILocation(line: 2013, column: 7, scope: !15208)
!15211 = !DILocation(line: 2013, column: 20, scope: !15208)
!15212 = !DILocation(line: 2013, column: 29, scope: !15208)
!15213 = !DILocation(line: 2013, column: 7, scope: !15209)
!15214 = !DILocation(line: 2015, column: 34, scope: !15208)
!15215 = !DILocation(line: 2015, column: 13, scope: !15208)
!15216 = !DILocation(line: 2015, column: 11, scope: !15208)
!15217 = !DILocation(line: 2015, column: 4, scope: !15208)
!15218 = !DILocation(line: 2017, column: 34, scope: !15208)
!15219 = !DILocation(line: 2017, column: 13, scope: !15208)
!15220 = !DILocation(line: 2017, column: 52, scope: !15208)
!15221 = !DILocation(line: 2017, column: 41, scope: !15208)
!15222 = !DILocation(line: 2017, column: 39, scope: !15208)
!15223 = !DILocation(line: 2017, column: 11, scope: !15208)
!15224 = !DILocation(line: 2018, column: 19, scope: !15225)
!15225 = distinct !DILexicalBlock(scope: !15209, file: !3, line: 2018, column: 7)
!15226 = !DILocation(line: 2018, column: 7, scope: !15225)
!15227 = !DILocation(line: 2018, column: 26, scope: !15225)
!15228 = !DILocation(line: 2018, column: 24, scope: !15225)
!15229 = !DILocation(line: 2018, column: 7, scope: !15209)
!15230 = !DILocation(line: 2019, column: 15, scope: !15231)
!15231 = distinct !DILexicalBlock(scope: !15225, file: !3, line: 2018, column: 34)
!15232 = !DILocation(line: 2019, column: 19, scope: !15231)
!15233 = !DILocation(line: 2019, column: 4, scope: !15231)
!15234 = !DILocation(line: 2021, column: 4, scope: !15231)
!15235 = !DILocation(line: 2023, column: 2, scope: !15209)
!15236 = !DILocalVariable(name: "__UNIQUE_ID___x534", scope: !15237, file: !3, line: 2024, type: !7)
!15237 = distinct !DILexicalBlock(scope: !15205, file: !3, line: 2024, column: 12)
!15238 = !DILocation(line: 2024, column: 12, scope: !15237)
!15239 = !DILocalVariable(name: "__UNIQUE_ID___y535", scope: !15237, file: !3, line: 2024, type: !7)
!15240 = !DILocation(line: 2024, column: 10, scope: !15205)
!15241 = !DILocation(line: 2039, column: 6, scope: !15242)
!15242 = distinct !DILexicalBlock(scope: !15133, file: !3, line: 2039, column: 6)
!15243 = !DILocation(line: 2039, column: 13, scope: !15242)
!15244 = !DILocation(line: 2039, column: 29, scope: !15242)
!15245 = !DILocation(line: 2039, column: 17, scope: !15242)
!15246 = !DILocation(line: 2039, column: 36, scope: !15242)
!15247 = !DILocation(line: 2039, column: 34, scope: !15242)
!15248 = !DILocation(line: 2039, column: 6, scope: !15133)
!15249 = !DILocation(line: 2041, column: 14, scope: !15242)
!15250 = !DILocation(line: 2041, column: 75, scope: !15242)
!15251 = !DILocation(line: 2041, column: 12, scope: !15242)
!15252 = !DILocation(line: 2041, column: 3, scope: !15242)
!15253 = !DILocation(line: 2043, column: 14, scope: !15242)
!15254 = !DILocation(line: 2043, column: 12, scope: !15242)
!15255 = !DILocation(line: 2044, column: 13, scope: !15133)
!15256 = !DILocation(line: 2044, column: 30, scope: !15133)
!15257 = !DILocation(line: 2044, column: 11, scope: !15133)
!15258 = !DILocation(line: 2045, column: 9, scope: !15259)
!15259 = distinct !DILexicalBlock(scope: !15133, file: !3, line: 2045, column: 2)
!15260 = !DILocation(line: 2045, column: 7, scope: !15259)
!15261 = !DILocation(line: 2045, column: 14, scope: !15262)
!15262 = distinct !DILexicalBlock(scope: !15259, file: !3, line: 2045, column: 2)
!15263 = !DILocation(line: 2045, column: 18, scope: !15262)
!15264 = !DILocation(line: 2045, column: 16, scope: !15262)
!15265 = !DILocation(line: 2045, column: 2, scope: !15259)
!15266 = !DILocation(line: 2046, column: 30, scope: !15267)
!15267 = distinct !DILexicalBlock(scope: !15262, file: !3, line: 2045, column: 33)
!15268 = !DILocation(line: 2046, column: 47, scope: !15267)
!15269 = !DILocation(line: 2046, column: 53, scope: !15267)
!15270 = !DILocation(line: 2046, column: 15, scope: !15267)
!15271 = !DILocation(line: 2046, column: 13, scope: !15267)
!15272 = !DILocation(line: 2047, column: 15, scope: !15267)
!15273 = !DILocation(line: 2047, column: 12, scope: !15267)
!15274 = !DILocation(line: 2048, column: 2, scope: !15267)
!15275 = !DILocation(line: 2045, column: 29, scope: !15262)
!15276 = !DILocation(line: 2045, column: 2, scope: !15262)
!15277 = distinct !{!15277, !15265, !15278}
!15278 = !DILocation(line: 2048, column: 2, scope: !15259)
!15279 = !DILocation(line: 2050, column: 2, scope: !15133)
!15280 = !DILocation(line: 2050, column: 2, scope: !15148)
!15281 = !DILocalVariable(name: "__dummy", scope: !15282, file: !3, line: 2050, type: !317)
!15282 = distinct !DILexicalBlock(scope: !15147, file: !3, line: 2050, column: 2)
!15283 = !DILocation(line: 2050, column: 2, scope: !15282)
!15284 = !DILocalVariable(name: "__dummy2", scope: !15282, file: !3, line: 2050, type: !317)
!15285 = !DILocation(line: 2050, column: 2, scope: !15147)
!15286 = !DILocation(line: 2050, column: 2, scope: !15146)
!15287 = !DILocation(line: 2050, column: 2, scope: !15288)
!15288 = distinct !DILexicalBlock(scope: !15146, file: !3, line: 2050, column: 2)
!15289 = !DILocalVariable(name: "__dummy", scope: !15290, file: !3, line: 2050, type: !317)
!15290 = distinct !DILexicalBlock(scope: !15291, file: !3, line: 2050, column: 2)
!15291 = distinct !DILexicalBlock(scope: !15288, file: !3, line: 2050, column: 2)
!15292 = !DILocation(line: 2050, column: 2, scope: !15290)
!15293 = !DILocalVariable(name: "__dummy2", scope: !15290, file: !3, line: 2050, type: !317)
!15294 = !DILocation(line: 2050, column: 2, scope: !15291)
!15295 = !DILocation(line: 2050, column: 2, scope: !15145)
!15296 = !{i32 -2137620409}
!15297 = !DILocation(line: 2050, column: 2, scope: !15144)
!15298 = !DILocation(line: 329, column: 10, scope: !11066, inlinedAt: !15143)
!15299 = !DILocation(line: 329, column: 16, scope: !11066, inlinedAt: !15143)
!15300 = !DILocation(line: 2053, column: 6, scope: !15137)
!15301 = !DILocation(line: 2054, column: 30, scope: !15137)
!15302 = !DILocation(line: 2054, column: 28, scope: !15137)
!15303 = !DILocation(line: 2053, column: 6, scope: !15133)
!15304 = !DILocation(line: 2055, column: 23, scope: !15136)
!15305 = !DILocation(line: 2055, column: 28, scope: !15136)
!15306 = !DILocation(line: 2055, column: 3, scope: !15136)
!15307 = !DILocation(line: 2056, column: 27, scope: !15136)
!15308 = !DILocation(line: 2056, column: 31, scope: !15136)
!15309 = !DILocation(line: 2056, column: 37, scope: !15136)
!15310 = !DILocation(line: 409, column: 2, scope: !13335, inlinedAt: !15135)
!15311 = !DILocation(line: 409, column: 2, scope: !13340, inlinedAt: !15135)
!15312 = !DILocation(line: 409, column: 2, scope: !13341, inlinedAt: !15135)
!15313 = !DILocation(line: 409, column: 2, scope: !13348, inlinedAt: !15135)
!15314 = !DILocation(line: 409, column: 2, scope: !13351, inlinedAt: !15135)
!15315 = !DILocation(line: 2059, column: 3, scope: !15136)
!15316 = !DILocation(line: 2063, column: 19, scope: !15317)
!15317 = distinct !DILexicalBlock(scope: !15133, file: !3, line: 2063, column: 6)
!15318 = !DILocation(line: 2063, column: 23, scope: !15317)
!15319 = !DILocation(line: 2063, column: 30, scope: !15317)
!15320 = !DILocation(line: 2063, column: 35, scope: !15317)
!15321 = !DILocation(line: 2063, column: 7, scope: !15317)
!15322 = !DILocation(line: 2063, column: 6, scope: !15133)
!15323 = !DILocation(line: 2064, column: 21, scope: !15324)
!15324 = distinct !DILexicalBlock(scope: !15317, file: !3, line: 2063, column: 44)
!15325 = !DILocation(line: 2064, column: 3, scope: !15324)
!15326 = !DILocation(line: 2065, column: 3, scope: !15324)
!15327 = !DILocation(line: 2069, column: 2, scope: !15133)
!15328 = !{i32 -2137619912}
!15329 = !DILocation(line: 2070, column: 19, scope: !15133)
!15330 = !DILocation(line: 2070, column: 2, scope: !15133)
!15331 = !DILocation(line: 2072, column: 2, scope: !15133)
!15332 = !DILocation(line: 2074, column: 6, scope: !15333)
!15333 = distinct !DILexicalBlock(scope: !15133, file: !3, line: 2074, column: 6)
!15334 = !DILocation(line: 2074, column: 67, scope: !15333)
!15335 = !DILocation(line: 2074, column: 6, scope: !15133)
!15336 = !DILocation(line: 2075, column: 23, scope: !15333)
!15337 = !DILocation(line: 2075, column: 28, scope: !15333)
!15338 = !DILocation(line: 2075, column: 3, scope: !15333)
!15339 = !DILocation(line: 2074, column: 69, scope: !15333)
!15340 = !DILabel(scope: !15133, name: "unlock", file: !3, line: 2077)
!15341 = !DILocation(line: 2077, column: 1, scope: !15133)
!15342 = !DILocation(line: 2078, column: 26, scope: !15133)
!15343 = !DILocation(line: 2078, column: 30, scope: !15133)
!15344 = !DILocation(line: 2078, column: 36, scope: !15133)
!15345 = !DILocation(line: 409, column: 2, scope: !13335, inlinedAt: !15140)
!15346 = !DILocation(line: 409, column: 2, scope: !13340, inlinedAt: !15140)
!15347 = !DILocation(line: 409, column: 2, scope: !13341, inlinedAt: !15140)
!15348 = !DILocation(line: 409, column: 2, scope: !13348, inlinedAt: !15140)
!15349 = !DILocation(line: 409, column: 2, scope: !13351, inlinedAt: !15140)
!15350 = !DILocation(line: 2080, column: 9, scope: !15133)
!15351 = !DILocation(line: 2080, column: 2, scope: !15133)
!15352 = !DILocation(line: 2081, column: 1, scope: !15133)
!15353 = distinct !DISubprogram(name: "macb_features_check", scope: !3, file: !3, line: 1877, type: !7751, scopeLine: 1880, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!15354 = !DILocalVariable(name: "skb", arg: 1, scope: !15353, file: !3, line: 1877, type: !420)
!15355 = !DILocation(line: 1877, column: 62, scope: !15353)
!15356 = !DILocalVariable(name: "dev", arg: 2, scope: !15353, file: !3, line: 1878, type: !295)
!15357 = !DILocation(line: 1878, column: 30, scope: !15353)
!15358 = !DILocalVariable(name: "features", arg: 3, scope: !15353, file: !3, line: 1879, type: !334)
!15359 = !DILocation(line: 1879, column: 29, scope: !15353)
!15360 = !DILocalVariable(name: "nr_frags", scope: !15353, file: !3, line: 1881, type: !7)
!15361 = !DILocation(line: 1881, column: 15, scope: !15353)
!15362 = !DILocalVariable(name: "f", scope: !15353, file: !3, line: 1881, type: !7)
!15363 = !DILocation(line: 1881, column: 25, scope: !15353)
!15364 = !DILocalVariable(name: "hdrlen", scope: !15353, file: !3, line: 1882, type: !7)
!15365 = !DILocation(line: 1882, column: 15, scope: !15353)
!15366 = !DILocation(line: 1887, column: 24, scope: !15367)
!15367 = distinct !DILexicalBlock(scope: !15353, file: !3, line: 1887, column: 6)
!15368 = !DILocation(line: 1887, column: 7, scope: !15367)
!15369 = !DILocation(line: 1887, column: 29, scope: !15367)
!15370 = !DILocation(line: 1887, column: 40, scope: !15367)
!15371 = !DILocation(line: 1887, column: 33, scope: !15367)
!15372 = !DILocation(line: 1887, column: 46, scope: !15367)
!15373 = !DILocation(line: 1887, column: 55, scope: !15367)
!15374 = !DILocation(line: 1887, column: 6, scope: !15353)
!15375 = !DILocation(line: 1888, column: 10, scope: !15367)
!15376 = !DILocation(line: 1888, column: 3, scope: !15367)
!15377 = !DILocation(line: 1891, column: 32, scope: !15353)
!15378 = !DILocation(line: 1891, column: 11, scope: !15353)
!15379 = !DILocation(line: 1891, column: 9, scope: !15353)
!15380 = !DILocation(line: 1897, column: 7, scope: !15381)
!15381 = distinct !DILexicalBlock(scope: !15353, file: !3, line: 1897, column: 6)
!15382 = !DILocation(line: 1897, column: 6, scope: !15353)
!15383 = !DILocation(line: 1898, column: 10, scope: !15381)
!15384 = !DILocation(line: 1898, column: 19, scope: !15381)
!15385 = !DILocation(line: 1898, column: 3, scope: !15381)
!15386 = !DILocation(line: 1900, column: 13, scope: !15353)
!15387 = !DILocation(line: 1900, column: 30, scope: !15353)
!15388 = !DILocation(line: 1900, column: 11, scope: !15353)
!15389 = !DILocation(line: 1902, column: 10, scope: !15353)
!15390 = !DILocation(line: 1903, column: 9, scope: !15391)
!15391 = distinct !DILexicalBlock(scope: !15353, file: !3, line: 1903, column: 2)
!15392 = !DILocation(line: 1903, column: 7, scope: !15391)
!15393 = !DILocation(line: 1903, column: 14, scope: !15394)
!15394 = distinct !DILexicalBlock(scope: !15391, file: !3, line: 1903, column: 2)
!15395 = !DILocation(line: 1903, column: 18, scope: !15394)
!15396 = !DILocation(line: 1903, column: 16, scope: !15394)
!15397 = !DILocation(line: 1903, column: 2, scope: !15391)
!15398 = !DILocalVariable(name: "frag", scope: !15399, file: !3, line: 1904, type: !15400)
!15399 = distinct !DILexicalBlock(scope: !15394, file: !3, line: 1903, column: 33)
!15400 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15401, size: 64)
!15401 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !10699)
!15402 = !DILocation(line: 1904, column: 21, scope: !15399)
!15403 = !DILocation(line: 1904, column: 29, scope: !15399)
!15404 = !DILocation(line: 1904, column: 46, scope: !15399)
!15405 = !DILocation(line: 1904, column: 52, scope: !15399)
!15406 = !DILocation(line: 1906, column: 8, scope: !15407)
!15407 = distinct !DILexicalBlock(scope: !15399, file: !3, line: 1906, column: 7)
!15408 = !DILocation(line: 1906, column: 7, scope: !15399)
!15409 = !DILocation(line: 1907, column: 11, scope: !15407)
!15410 = !DILocation(line: 1907, column: 20, scope: !15407)
!15411 = !DILocation(line: 1907, column: 4, scope: !15407)
!15412 = !DILocation(line: 1908, column: 2, scope: !15399)
!15413 = !DILocation(line: 1903, column: 29, scope: !15394)
!15414 = !DILocation(line: 1903, column: 2, scope: !15394)
!15415 = distinct !{!15415, !15397, !15416}
!15416 = !DILocation(line: 1908, column: 2, scope: !15391)
!15417 = !DILocation(line: 1909, column: 9, scope: !15353)
!15418 = !DILocation(line: 1909, column: 2, scope: !15353)
!15419 = !DILocation(line: 1910, column: 1, scope: !15353)
!15420 = distinct !DISubprogram(name: "macb_set_rx_mode", scope: !3, file: !3, line: 2546, type: !411, scopeLine: 2547, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!15421 = !DILocalVariable(name: "dev", arg: 1, scope: !15420, file: !3, line: 2546, type: !295)
!15422 = !DILocation(line: 2546, column: 49, scope: !15420)
!15423 = !DILocalVariable(name: "cfg", scope: !15420, file: !3, line: 2548, type: !317)
!15424 = !DILocation(line: 2548, column: 16, scope: !15420)
!15425 = !DILocalVariable(name: "bp", scope: !15420, file: !3, line: 2549, type: !10238)
!15426 = !DILocation(line: 2549, column: 15, scope: !15420)
!15427 = !DILocation(line: 2549, column: 32, scope: !15420)
!15428 = !DILocation(line: 2549, column: 20, scope: !15420)
!15429 = !DILocation(line: 2551, column: 8, scope: !15420)
!15430 = !DILocation(line: 2551, column: 6, scope: !15420)
!15431 = !DILocation(line: 2553, column: 6, scope: !15432)
!15432 = distinct !DILexicalBlock(scope: !15420, file: !3, line: 2553, column: 6)
!15433 = !DILocation(line: 2553, column: 11, scope: !15432)
!15434 = !DILocation(line: 2553, column: 17, scope: !15432)
!15435 = !DILocation(line: 2553, column: 6, scope: !15420)
!15436 = !DILocation(line: 2555, column: 7, scope: !15437)
!15437 = distinct !DILexicalBlock(scope: !15432, file: !3, line: 2553, column: 32)
!15438 = !DILocation(line: 2558, column: 19, scope: !15439)
!15439 = distinct !DILexicalBlock(scope: !15437, file: !3, line: 2558, column: 7)
!15440 = !DILocation(line: 2558, column: 7, scope: !15439)
!15441 = !DILocation(line: 2558, column: 7, scope: !15437)
!15442 = !DILocation(line: 2559, column: 8, scope: !15439)
!15443 = !DILocation(line: 2559, column: 4, scope: !15439)
!15444 = !DILocation(line: 2560, column: 2, scope: !15437)
!15445 = !DILocation(line: 2562, column: 7, scope: !15446)
!15446 = distinct !DILexicalBlock(scope: !15432, file: !3, line: 2560, column: 9)
!15447 = !DILocation(line: 2565, column: 19, scope: !15448)
!15448 = distinct !DILexicalBlock(scope: !15446, file: !3, line: 2565, column: 7)
!15449 = !DILocation(line: 2565, column: 7, scope: !15448)
!15450 = !DILocation(line: 2565, column: 23, scope: !15448)
!15451 = !DILocation(line: 2565, column: 26, scope: !15448)
!15452 = !DILocation(line: 2565, column: 31, scope: !15448)
!15453 = !DILocation(line: 2565, column: 40, scope: !15448)
!15454 = !DILocation(line: 2565, column: 7, scope: !15446)
!15455 = !DILocation(line: 2566, column: 8, scope: !15448)
!15456 = !DILocation(line: 2566, column: 4, scope: !15448)
!15457 = !DILocation(line: 2569, column: 6, scope: !15458)
!15458 = distinct !DILexicalBlock(scope: !15420, file: !3, line: 2569, column: 6)
!15459 = !DILocation(line: 2569, column: 11, scope: !15458)
!15460 = !DILocation(line: 2569, column: 17, scope: !15458)
!15461 = !DILocation(line: 2569, column: 6, scope: !15420)
!15462 = !DILocation(line: 2571, column: 3, scope: !15463)
!15463 = distinct !DILexicalBlock(scope: !15464, file: !3, line: 2571, column: 3)
!15464 = distinct !DILexicalBlock(scope: !15465, file: !3, line: 2571, column: 3)
!15465 = distinct !DILexicalBlock(scope: !15458, file: !3, line: 2569, column: 33)
!15466 = !DILocation(line: 2571, column: 3, scope: !15464)
!15467 = !DILocation(line: 2572, column: 3, scope: !15468)
!15468 = distinct !DILexicalBlock(scope: !15469, file: !3, line: 2572, column: 3)
!15469 = distinct !DILexicalBlock(scope: !15465, file: !3, line: 2572, column: 3)
!15470 = !DILocation(line: 2572, column: 3, scope: !15469)
!15471 = !DILocation(line: 2573, column: 7, scope: !15465)
!15472 = !DILocation(line: 2574, column: 2, scope: !15465)
!15473 = !DILocation(line: 2574, column: 14, scope: !15474)
!15474 = distinct !DILexicalBlock(scope: !15458, file: !3, line: 2574, column: 13)
!15475 = !DILocation(line: 2574, column: 13, scope: !15458)
!15476 = !DILocation(line: 2576, column: 21, scope: !15477)
!15477 = distinct !DILexicalBlock(scope: !15474, file: !3, line: 2574, column: 36)
!15478 = !DILocation(line: 2576, column: 3, scope: !15477)
!15479 = !DILocation(line: 2577, column: 7, scope: !15477)
!15480 = !DILocation(line: 2578, column: 2, scope: !15477)
!15481 = !DILocation(line: 2578, column: 13, scope: !15482)
!15482 = distinct !DILexicalBlock(scope: !15474, file: !3, line: 2578, column: 13)
!15483 = !DILocation(line: 2578, column: 18, scope: !15482)
!15484 = !DILocation(line: 2578, column: 24, scope: !15482)
!15485 = !DILocation(line: 2578, column: 13, scope: !15474)
!15486 = !DILocation(line: 2580, column: 3, scope: !15487)
!15487 = distinct !DILexicalBlock(scope: !15488, file: !3, line: 2580, column: 3)
!15488 = distinct !DILexicalBlock(scope: !15489, file: !3, line: 2580, column: 3)
!15489 = distinct !DILexicalBlock(scope: !15482, file: !3, line: 2578, column: 43)
!15490 = !DILocation(line: 2580, column: 3, scope: !15488)
!15491 = !DILocation(line: 2581, column: 3, scope: !15492)
!15492 = distinct !DILexicalBlock(scope: !15493, file: !3, line: 2581, column: 3)
!15493 = distinct !DILexicalBlock(scope: !15489, file: !3, line: 2581, column: 3)
!15494 = !DILocation(line: 2581, column: 3, scope: !15493)
!15495 = !DILocation(line: 2582, column: 7, scope: !15489)
!15496 = !DILocation(line: 2583, column: 2, scope: !15489)
!15497 = !DILocation(line: 2585, column: 2, scope: !15420)
!15498 = !DILocation(line: 2586, column: 1, scope: !15420)
!15499 = distinct !DISubprogram(name: "macb_ioctl", scope: !3, file: !3, line: 3394, type: !7769, scopeLine: 3395, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!15500 = !DILocalVariable(name: "dev", arg: 1, scope: !15499, file: !3, line: 3394, type: !295)
!15501 = !DILocation(line: 3394, column: 42, scope: !15499)
!15502 = !DILocalVariable(name: "rq", arg: 2, scope: !15499, file: !3, line: 3394, type: !7771)
!15503 = !DILocation(line: 3394, column: 61, scope: !15499)
!15504 = !DILocalVariable(name: "cmd", arg: 3, scope: !15499, file: !3, line: 3394, type: !37)
!15505 = !DILocation(line: 3394, column: 69, scope: !15499)
!15506 = !DILocalVariable(name: "bp", scope: !15499, file: !3, line: 3396, type: !10238)
!15507 = !DILocation(line: 3396, column: 15, scope: !15499)
!15508 = !DILocation(line: 3396, column: 32, scope: !15499)
!15509 = !DILocation(line: 3396, column: 20, scope: !15499)
!15510 = !DILocation(line: 3398, column: 21, scope: !15511)
!15511 = distinct !DILexicalBlock(scope: !15499, file: !3, line: 3398, column: 6)
!15512 = !DILocation(line: 3398, column: 7, scope: !15511)
!15513 = !DILocation(line: 3398, column: 6, scope: !15499)
!15514 = !DILocation(line: 3399, column: 3, scope: !15511)
!15515 = !DILocation(line: 3401, column: 6, scope: !15516)
!15516 = distinct !DILexicalBlock(scope: !15499, file: !3, line: 3401, column: 6)
!15517 = !DILocation(line: 3401, column: 10, scope: !15516)
!15518 = !DILocation(line: 3401, column: 6, scope: !15499)
!15519 = !DILocation(line: 3402, column: 11, scope: !15520)
!15520 = distinct !DILexicalBlock(scope: !15516, file: !3, line: 3401, column: 20)
!15521 = !DILocation(line: 3402, column: 3, scope: !15520)
!15522 = !DILocation(line: 3404, column: 11, scope: !15523)
!15523 = distinct !DILexicalBlock(scope: !15520, file: !3, line: 3402, column: 16)
!15524 = !DILocation(line: 3404, column: 15, scope: !15523)
!15525 = !DILocation(line: 3404, column: 25, scope: !15523)
!15526 = !DILocation(line: 3404, column: 35, scope: !15523)
!15527 = !DILocation(line: 3404, column: 40, scope: !15523)
!15528 = !DILocation(line: 3404, column: 44, scope: !15523)
!15529 = !DILocation(line: 3404, column: 4, scope: !15523)
!15530 = !DILocation(line: 3406, column: 11, scope: !15523)
!15531 = !DILocation(line: 3406, column: 15, scope: !15523)
!15532 = !DILocation(line: 3406, column: 25, scope: !15523)
!15533 = !DILocation(line: 3406, column: 35, scope: !15523)
!15534 = !DILocation(line: 3406, column: 40, scope: !15523)
!15535 = !DILocation(line: 3406, column: 4, scope: !15523)
!15536 = !DILocation(line: 3408, column: 2, scope: !15520)
!15537 = !DILocation(line: 3410, column: 27, scope: !15499)
!15538 = !DILocation(line: 3410, column: 31, scope: !15499)
!15539 = !DILocation(line: 3410, column: 40, scope: !15499)
!15540 = !DILocation(line: 3410, column: 44, scope: !15499)
!15541 = !DILocation(line: 3410, column: 9, scope: !15499)
!15542 = !DILocation(line: 3410, column: 2, scope: !15499)
!15543 = !DILocation(line: 3411, column: 1, scope: !15499)
!15544 = distinct !DISubprogram(name: "macb_change_mtu", scope: !3, file: !3, line: 2668, type: !7885, scopeLine: 2669, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!15545 = !DILocalVariable(name: "dev", arg: 1, scope: !15544, file: !3, line: 2668, type: !295)
!15546 = !DILocation(line: 2668, column: 47, scope: !15544)
!15547 = !DILocalVariable(name: "new_mtu", arg: 2, scope: !15544, file: !3, line: 2668, type: !37)
!15548 = !DILocation(line: 2668, column: 56, scope: !15544)
!15549 = !DILocation(line: 2670, column: 20, scope: !15550)
!15550 = distinct !DILexicalBlock(scope: !15544, file: !3, line: 2670, column: 6)
!15551 = !DILocation(line: 2670, column: 6, scope: !15550)
!15552 = !DILocation(line: 2670, column: 6, scope: !15544)
!15553 = !DILocation(line: 2671, column: 3, scope: !15550)
!15554 = !DILocation(line: 2673, column: 13, scope: !15544)
!15555 = !DILocation(line: 2673, column: 2, scope: !15544)
!15556 = !DILocation(line: 2673, column: 7, scope: !15544)
!15557 = !DILocation(line: 2673, column: 11, scope: !15544)
!15558 = !DILocation(line: 2675, column: 2, scope: !15544)
!15559 = !DILocation(line: 2676, column: 1, scope: !15544)
!15560 = distinct !DISubprogram(name: "macb_get_stats", scope: !3, file: !3, line: 2793, type: !7937, scopeLine: 2794, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!15561 = !DILocalVariable(name: "dev", arg: 1, scope: !15560, file: !3, line: 2793, type: !295)
!15562 = !DILocation(line: 2793, column: 67, scope: !15560)
!15563 = !DILocalVariable(name: "bp", scope: !15560, file: !3, line: 2795, type: !10238)
!15564 = !DILocation(line: 2795, column: 15, scope: !15560)
!15565 = !DILocation(line: 2795, column: 32, scope: !15560)
!15566 = !DILocation(line: 2795, column: 20, scope: !15560)
!15567 = !DILocalVariable(name: "nstat", scope: !15560, file: !3, line: 2796, type: !7939)
!15568 = !DILocation(line: 2796, column: 27, scope: !15560)
!15569 = !DILocation(line: 2796, column: 36, scope: !15560)
!15570 = !DILocation(line: 2796, column: 40, scope: !15560)
!15571 = !DILocation(line: 2796, column: 45, scope: !15560)
!15572 = !DILocalVariable(name: "hwstat", scope: !15560, file: !3, line: 2797, type: !15573)
!15573 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10312, size: 64)
!15574 = !DILocation(line: 2797, column: 21, scope: !15560)
!15575 = !DILocation(line: 2797, column: 31, scope: !15560)
!15576 = !DILocation(line: 2797, column: 35, scope: !15560)
!15577 = !DILocation(line: 2797, column: 44, scope: !15560)
!15578 = !DILocation(line: 2799, column: 18, scope: !15579)
!15579 = distinct !DILexicalBlock(scope: !15560, file: !3, line: 2799, column: 6)
!15580 = !DILocation(line: 2799, column: 6, scope: !15579)
!15581 = !DILocation(line: 2799, column: 6, scope: !15560)
!15582 = !DILocation(line: 2800, column: 24, scope: !15579)
!15583 = !DILocation(line: 2800, column: 10, scope: !15579)
!15584 = !DILocation(line: 2800, column: 3, scope: !15579)
!15585 = !DILocation(line: 2803, column: 20, scope: !15560)
!15586 = !DILocation(line: 2803, column: 2, scope: !15560)
!15587 = !DILocation(line: 2806, column: 22, scope: !15560)
!15588 = !DILocation(line: 2806, column: 30, scope: !15560)
!15589 = !DILocation(line: 2807, column: 8, scope: !15560)
!15590 = !DILocation(line: 2807, column: 16, scope: !15560)
!15591 = !DILocation(line: 2806, column: 44, scope: !15560)
!15592 = !DILocation(line: 2808, column: 8, scope: !15560)
!15593 = !DILocation(line: 2808, column: 16, scope: !15560)
!15594 = !DILocation(line: 2807, column: 32, scope: !15560)
!15595 = !DILocation(line: 2809, column: 8, scope: !15560)
!15596 = !DILocation(line: 2809, column: 16, scope: !15560)
!15597 = !DILocation(line: 2808, column: 35, scope: !15560)
!15598 = !DILocation(line: 2810, column: 8, scope: !15560)
!15599 = !DILocation(line: 2810, column: 16, scope: !15560)
!15600 = !DILocation(line: 2809, column: 28, scope: !15560)
!15601 = !DILocation(line: 2811, column: 8, scope: !15560)
!15602 = !DILocation(line: 2811, column: 16, scope: !15560)
!15603 = !DILocation(line: 2810, column: 33, scope: !15560)
!15604 = !DILocation(line: 2812, column: 8, scope: !15560)
!15605 = !DILocation(line: 2812, column: 16, scope: !15560)
!15606 = !DILocation(line: 2811, column: 27, scope: !15560)
!15607 = !DILocation(line: 2813, column: 8, scope: !15560)
!15608 = !DILocation(line: 2813, column: 16, scope: !15560)
!15609 = !DILocation(line: 2812, column: 34, scope: !15560)
!15610 = !DILocation(line: 2806, column: 21, scope: !15560)
!15611 = !DILocation(line: 2806, column: 2, scope: !15560)
!15612 = !DILocation(line: 2806, column: 9, scope: !15560)
!15613 = !DILocation(line: 2806, column: 19, scope: !15560)
!15614 = !DILocation(line: 2814, column: 22, scope: !15560)
!15615 = !DILocation(line: 2814, column: 30, scope: !15560)
!15616 = !DILocation(line: 2815, column: 8, scope: !15560)
!15617 = !DILocation(line: 2815, column: 16, scope: !15560)
!15618 = !DILocation(line: 2814, column: 43, scope: !15560)
!15619 = !DILocation(line: 2816, column: 8, scope: !15560)
!15620 = !DILocation(line: 2816, column: 16, scope: !15560)
!15621 = !DILocation(line: 2815, column: 34, scope: !15560)
!15622 = !DILocation(line: 2817, column: 8, scope: !15560)
!15623 = !DILocation(line: 2817, column: 16, scope: !15560)
!15624 = !DILocation(line: 2816, column: 29, scope: !15560)
!15625 = !DILocation(line: 2818, column: 8, scope: !15560)
!15626 = !DILocation(line: 2818, column: 16, scope: !15560)
!15627 = !DILocation(line: 2817, column: 34, scope: !15560)
!15628 = !DILocation(line: 2814, column: 21, scope: !15560)
!15629 = !DILocation(line: 2814, column: 2, scope: !15560)
!15630 = !DILocation(line: 2814, column: 9, scope: !15560)
!15631 = !DILocation(line: 2814, column: 19, scope: !15560)
!15632 = !DILocation(line: 2819, column: 23, scope: !15560)
!15633 = !DILocation(line: 2819, column: 31, scope: !15560)
!15634 = !DILocation(line: 2820, column: 9, scope: !15560)
!15635 = !DILocation(line: 2820, column: 17, scope: !15560)
!15636 = !DILocation(line: 2819, column: 46, scope: !15560)
!15637 = !DILocation(line: 2821, column: 9, scope: !15560)
!15638 = !DILocation(line: 2821, column: 17, scope: !15560)
!15639 = !DILocation(line: 2820, column: 34, scope: !15560)
!15640 = !DILocation(line: 2819, column: 22, scope: !15560)
!15641 = !DILocation(line: 2819, column: 2, scope: !15560)
!15642 = !DILocation(line: 2819, column: 9, scope: !15560)
!15643 = !DILocation(line: 2819, column: 20, scope: !15560)
!15644 = !DILocation(line: 2822, column: 29, scope: !15560)
!15645 = !DILocation(line: 2822, column: 37, scope: !15560)
!15646 = !DILocation(line: 2823, column: 8, scope: !15560)
!15647 = !DILocation(line: 2823, column: 16, scope: !15560)
!15648 = !DILocation(line: 2822, column: 54, scope: !15560)
!15649 = !DILocation(line: 2824, column: 8, scope: !15560)
!15650 = !DILocation(line: 2824, column: 16, scope: !15560)
!15651 = !DILocation(line: 2823, column: 27, scope: !15560)
!15652 = !DILocation(line: 2825, column: 8, scope: !15560)
!15653 = !DILocation(line: 2825, column: 16, scope: !15560)
!15654 = !DILocation(line: 2824, column: 34, scope: !15560)
!15655 = !DILocation(line: 2822, column: 28, scope: !15560)
!15656 = !DILocation(line: 2822, column: 2, scope: !15560)
!15657 = !DILocation(line: 2822, column: 9, scope: !15560)
!15658 = !DILocation(line: 2822, column: 26, scope: !15560)
!15659 = !DILocation(line: 2826, column: 26, scope: !15560)
!15660 = !DILocation(line: 2826, column: 34, scope: !15560)
!15661 = !DILocation(line: 2827, column: 8, scope: !15560)
!15662 = !DILocation(line: 2827, column: 16, scope: !15560)
!15663 = !DILocation(line: 2826, column: 53, scope: !15560)
!15664 = !DILocation(line: 2826, column: 2, scope: !15560)
!15665 = !DILocation(line: 2826, column: 9, scope: !15560)
!15666 = !DILocation(line: 2826, column: 24, scope: !15560)
!15667 = !DILocation(line: 2828, column: 25, scope: !15560)
!15668 = !DILocation(line: 2828, column: 33, scope: !15560)
!15669 = !DILocation(line: 2828, column: 2, scope: !15560)
!15670 = !DILocation(line: 2828, column: 9, scope: !15560)
!15671 = !DILocation(line: 2828, column: 23, scope: !15560)
!15672 = !DILocation(line: 2829, column: 27, scope: !15560)
!15673 = !DILocation(line: 2829, column: 35, scope: !15560)
!15674 = !DILocation(line: 2829, column: 2, scope: !15560)
!15675 = !DILocation(line: 2829, column: 9, scope: !15560)
!15676 = !DILocation(line: 2829, column: 25, scope: !15560)
!15677 = !DILocation(line: 2830, column: 26, scope: !15560)
!15678 = !DILocation(line: 2830, column: 34, scope: !15560)
!15679 = !DILocation(line: 2830, column: 2, scope: !15560)
!15680 = !DILocation(line: 2830, column: 9, scope: !15560)
!15681 = !DILocation(line: 2830, column: 24, scope: !15560)
!15682 = !DILocation(line: 2832, column: 29, scope: !15560)
!15683 = !DILocation(line: 2832, column: 37, scope: !15560)
!15684 = !DILocation(line: 2832, column: 2, scope: !15560)
!15685 = !DILocation(line: 2832, column: 9, scope: !15560)
!15686 = !DILocation(line: 2832, column: 27, scope: !15560)
!15687 = !DILocation(line: 2833, column: 29, scope: !15560)
!15688 = !DILocation(line: 2833, column: 37, scope: !15560)
!15689 = !DILocation(line: 2833, column: 2, scope: !15560)
!15690 = !DILocation(line: 2833, column: 9, scope: !15560)
!15691 = !DILocation(line: 2833, column: 27, scope: !15560)
!15692 = !DILocation(line: 2834, column: 26, scope: !15560)
!15693 = !DILocation(line: 2834, column: 34, scope: !15560)
!15694 = !DILocation(line: 2834, column: 2, scope: !15560)
!15695 = !DILocation(line: 2834, column: 9, scope: !15560)
!15696 = !DILocation(line: 2834, column: 24, scope: !15560)
!15697 = !DILocation(line: 2837, column: 9, scope: !15560)
!15698 = !DILocation(line: 2837, column: 2, scope: !15560)
!15699 = !DILocation(line: 2838, column: 1, scope: !15560)
!15700 = distinct !DISubprogram(name: "macb_set_features", scope: !3, file: !3, line: 3457, type: !8048, scopeLine: 3459, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!15701 = !DILocalVariable(name: "netdev", arg: 1, scope: !15700, file: !3, line: 3457, type: !295)
!15702 = !DILocation(line: 3457, column: 49, scope: !15700)
!15703 = !DILocalVariable(name: "features", arg: 2, scope: !15700, file: !3, line: 3458, type: !334)
!15704 = !DILocation(line: 3458, column: 27, scope: !15700)
!15705 = !DILocalVariable(name: "bp", scope: !15700, file: !3, line: 3460, type: !10238)
!15706 = !DILocation(line: 3460, column: 15, scope: !15700)
!15707 = !DILocation(line: 3460, column: 32, scope: !15700)
!15708 = !DILocation(line: 3460, column: 20, scope: !15700)
!15709 = !DILocalVariable(name: "changed", scope: !15700, file: !3, line: 3461, type: !334)
!15710 = !DILocation(line: 3461, column: 20, scope: !15700)
!15711 = !DILocation(line: 3461, column: 30, scope: !15700)
!15712 = !DILocation(line: 3461, column: 41, scope: !15700)
!15713 = !DILocation(line: 3461, column: 49, scope: !15700)
!15714 = !DILocation(line: 3461, column: 39, scope: !15700)
!15715 = !DILocation(line: 3464, column: 6, scope: !15716)
!15716 = distinct !DILexicalBlock(scope: !15700, file: !3, line: 3464, column: 6)
!15717 = !DILocation(line: 3464, column: 14, scope: !15716)
!15718 = !DILocation(line: 3464, column: 6, scope: !15700)
!15719 = !DILocation(line: 3465, column: 27, scope: !15716)
!15720 = !DILocation(line: 3465, column: 31, scope: !15716)
!15721 = !DILocation(line: 3465, column: 3, scope: !15716)
!15722 = !DILocation(line: 3468, column: 6, scope: !15723)
!15723 = distinct !DILexicalBlock(scope: !15700, file: !3, line: 3468, column: 6)
!15724 = !DILocation(line: 3468, column: 14, scope: !15723)
!15725 = !DILocation(line: 3468, column: 6, scope: !15700)
!15726 = !DILocation(line: 3469, column: 27, scope: !15723)
!15727 = !DILocation(line: 3469, column: 31, scope: !15723)
!15728 = !DILocation(line: 3469, column: 3, scope: !15723)
!15729 = !DILocation(line: 3472, column: 6, scope: !15730)
!15730 = distinct !DILexicalBlock(scope: !15700, file: !3, line: 3472, column: 6)
!15731 = !DILocation(line: 3472, column: 14, scope: !15730)
!15732 = !DILocation(line: 3472, column: 6, scope: !15700)
!15733 = !DILocation(line: 3473, column: 27, scope: !15730)
!15734 = !DILocation(line: 3473, column: 31, scope: !15730)
!15735 = !DILocation(line: 3473, column: 3, scope: !15730)
!15736 = !DILocation(line: 3475, column: 2, scope: !15700)
!15737 = distinct !DISubprogram(name: "pm_runtime_get_sync", scope: !11610, file: !11610, line: 384, type: !4205, scopeLine: 385, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!15738 = !DILocalVariable(name: "dev", arg: 1, scope: !15737, file: !11610, line: 384, type: !4172)
!15739 = !DILocation(line: 384, column: 54, scope: !15737)
!15740 = !DILocation(line: 386, column: 29, scope: !15737)
!15741 = !DILocation(line: 386, column: 9, scope: !15737)
!15742 = !DILocation(line: 386, column: 2, scope: !15737)
!15743 = distinct !DISubprogram(name: "macb_init_rx_buffer_size", scope: !3, file: !3, line: 2083, type: !15744, scopeLine: 2084, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!15744 = !DISubroutineType(types: !15745)
!15745 = !{null, !10238, !594}
!15746 = !DILocalVariable(name: "bp", arg: 1, scope: !15743, file: !3, line: 2083, type: !10238)
!15747 = !DILocation(line: 2083, column: 51, scope: !15743)
!15748 = !DILocalVariable(name: "size", arg: 2, scope: !15743, file: !3, line: 2083, type: !594)
!15749 = !DILocation(line: 2083, column: 62, scope: !15743)
!15750 = !DILocation(line: 2085, column: 19, scope: !15751)
!15751 = distinct !DILexicalBlock(scope: !15743, file: !3, line: 2085, column: 6)
!15752 = !DILocation(line: 2085, column: 7, scope: !15751)
!15753 = !DILocation(line: 2085, column: 6, scope: !15743)
!15754 = !DILocation(line: 2086, column: 3, scope: !15755)
!15755 = distinct !DILexicalBlock(scope: !15751, file: !3, line: 2085, column: 24)
!15756 = !DILocation(line: 2086, column: 7, scope: !15755)
!15757 = !DILocation(line: 2086, column: 22, scope: !15755)
!15758 = !DILocation(line: 2087, column: 2, scope: !15755)
!15759 = !DILocation(line: 2088, column: 24, scope: !15760)
!15760 = distinct !DILexicalBlock(scope: !15751, file: !3, line: 2087, column: 9)
!15761 = !DILocation(line: 2088, column: 3, scope: !15760)
!15762 = !DILocation(line: 2088, column: 7, scope: !15760)
!15763 = !DILocation(line: 2088, column: 22, scope: !15760)
!15764 = !DILocation(line: 2090, column: 7, scope: !15765)
!15765 = distinct !DILexicalBlock(scope: !15760, file: !3, line: 2090, column: 7)
!15766 = !DILocation(line: 2090, column: 11, scope: !15765)
!15767 = !DILocation(line: 2090, column: 26, scope: !15765)
!15768 = !DILocation(line: 2090, column: 7, scope: !15760)
!15769 = !DILocalVariable(name: "__y", scope: !15770, file: !3, line: 2095, type: !37)
!15770 = distinct !DILexicalBlock(scope: !15771, file: !3, line: 2095, column: 5)
!15771 = distinct !DILexicalBlock(scope: !15765, file: !3, line: 2090, column: 48)
!15772 = !DILocation(line: 2095, column: 5, scope: !15770)
!15773 = !DILocation(line: 2094, column: 4, scope: !15771)
!15774 = !DILocation(line: 2094, column: 8, scope: !15771)
!15775 = !DILocation(line: 2094, column: 23, scope: !15771)
!15776 = !DILocation(line: 2096, column: 3, scope: !15771)
!15777 = !DILocation(line: 2101, column: 1, scope: !15743)
!15778 = distinct !DISubprogram(name: "macb_alloc_consistent", scope: !3, file: !3, line: 2210, type: !10388, scopeLine: 2211, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!15779 = !DILocalVariable(name: "s", arg: 1, scope: !15780, file: !10024, line: 445, type: !2252)
!15780 = distinct !DISubprogram(name: "kmem_cache_alloc_trace", scope: !10024, file: !10024, line: 445, type: !15781, scopeLine: 447, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!15781 = !DISubroutineType(types: !15782)
!15782 = !{!570, !2252, !1990, !594}
!15783 = !DILocation(line: 445, column: 72, scope: !15780, inlinedAt: !15784)
!15784 = distinct !DILocation(line: 552, column: 10, scope: !15785, inlinedAt: !15790)
!15785 = distinct !DILexicalBlock(scope: !15786, file: !10024, line: 540, column: 34)
!15786 = distinct !DILexicalBlock(scope: !15787, file: !10024, line: 540, column: 6)
!15787 = distinct !DISubprogram(name: "kmalloc", scope: !10024, file: !10024, line: 538, type: !15788, scopeLine: 539, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!15788 = !DISubroutineType(types: !15789)
!15789 = !{!570, !594, !1990}
!15790 = distinct !DILocation(line: 2229, column: 19, scope: !15791)
!15791 = distinct !DILexicalBlock(scope: !15792, file: !3, line: 2216, column: 68)
!15792 = distinct !DILexicalBlock(scope: !15793, file: !3, line: 2216, column: 2)
!15793 = distinct !DILexicalBlock(scope: !15778, file: !3, line: 2216, column: 2)
!15794 = !DILocalVariable(name: "flags", arg: 2, scope: !15780, file: !10024, line: 446, type: !1990)
!15795 = !DILocation(line: 446, column: 9, scope: !15780, inlinedAt: !15784)
!15796 = !DILocalVariable(name: "size", arg: 3, scope: !15780, file: !10024, line: 446, type: !594)
!15797 = !DILocation(line: 446, column: 23, scope: !15780, inlinedAt: !15784)
!15798 = !DILocalVariable(name: "ret", scope: !15780, file: !10024, line: 448, type: !570)
!15799 = !DILocation(line: 448, column: 8, scope: !15780, inlinedAt: !15784)
!15800 = !DILocalVariable(name: "flags", arg: 1, scope: !15801, file: !10024, line: 318, type: !1990)
!15801 = distinct !DISubprogram(name: "kmalloc_type", scope: !10024, file: !10024, line: 318, type: !15802, scopeLine: 319, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!15802 = !DISubroutineType(types: !15803)
!15803 = !{!10023, !1990}
!15804 = !DILocation(line: 318, column: 67, scope: !15801, inlinedAt: !15805)
!15805 = distinct !DILocation(line: 553, column: 20, scope: !15785, inlinedAt: !15790)
!15806 = !DILocalVariable(name: "size", arg: 1, scope: !15807, file: !10024, line: 346, type: !594)
!15807 = distinct !DISubprogram(name: "kmalloc_index", scope: !10024, file: !10024, line: 346, type: !15808, scopeLine: 347, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!15808 = !DISubroutineType(types: !15809)
!15809 = !{!7, !594}
!15810 = !DILocation(line: 346, column: 58, scope: !15807, inlinedAt: !15811)
!15811 = distinct !DILocation(line: 547, column: 11, scope: !15785, inlinedAt: !15790)
!15812 = !DILocalVariable(name: "size", arg: 1, scope: !15813, file: !10024, line: 472, type: !594)
!15813 = distinct !DISubprogram(name: "kmalloc_order_trace", scope: !10024, file: !10024, line: 472, type: !15814, scopeLine: 473, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!15814 = !DISubroutineType(types: !15815)
!15815 = !{!570, !594, !1990, !7}
!15816 = !DILocation(line: 472, column: 28, scope: !15813, inlinedAt: !15817)
!15817 = distinct !DILocation(line: 481, column: 9, scope: !15818, inlinedAt: !15819)
!15818 = distinct !DISubprogram(name: "kmalloc_large", scope: !10024, file: !10024, line: 478, type: !15788, scopeLine: 479, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!15819 = distinct !DILocation(line: 545, column: 11, scope: !15820, inlinedAt: !15790)
!15820 = distinct !DILexicalBlock(scope: !15785, file: !10024, line: 544, column: 7)
!15821 = !DILocalVariable(name: "flags", arg: 2, scope: !15813, file: !10024, line: 472, type: !1990)
!15822 = !DILocation(line: 472, column: 40, scope: !15813, inlinedAt: !15817)
!15823 = !DILocalVariable(name: "order", arg: 3, scope: !15813, file: !10024, line: 472, type: !7)
!15824 = !DILocation(line: 472, column: 60, scope: !15813, inlinedAt: !15817)
!15825 = !DILocalVariable(name: "size", arg: 1, scope: !15818, file: !10024, line: 478, type: !594)
!15826 = !DILocation(line: 478, column: 51, scope: !15818, inlinedAt: !15819)
!15827 = !DILocalVariable(name: "flags", arg: 2, scope: !15818, file: !10024, line: 478, type: !1990)
!15828 = !DILocation(line: 478, column: 63, scope: !15818, inlinedAt: !15819)
!15829 = !DILocalVariable(name: "order", scope: !15818, file: !10024, line: 480, type: !7)
!15830 = !DILocation(line: 480, column: 15, scope: !15818, inlinedAt: !15819)
!15831 = !DILocalVariable(name: "size", arg: 1, scope: !15787, file: !10024, line: 538, type: !594)
!15832 = !DILocation(line: 538, column: 45, scope: !15787, inlinedAt: !15790)
!15833 = !DILocalVariable(name: "flags", arg: 2, scope: !15787, file: !10024, line: 538, type: !1990)
!15834 = !DILocation(line: 538, column: 57, scope: !15787, inlinedAt: !15790)
!15835 = !DILocalVariable(name: "index", scope: !15785, file: !10024, line: 542, type: !7)
!15836 = !DILocation(line: 542, column: 16, scope: !15785, inlinedAt: !15790)
!15837 = !DILocalVariable(name: "bp", arg: 1, scope: !15778, file: !3, line: 2210, type: !10238)
!15838 = !DILocation(line: 2210, column: 47, scope: !15778)
!15839 = !DILocalVariable(name: "queue", scope: !15778, file: !3, line: 2212, type: !10234)
!15840 = !DILocation(line: 2212, column: 21, scope: !15778)
!15841 = !DILocalVariable(name: "q", scope: !15778, file: !3, line: 2213, type: !7)
!15842 = !DILocation(line: 2213, column: 15, scope: !15778)
!15843 = !DILocalVariable(name: "size", scope: !15778, file: !3, line: 2214, type: !37)
!15844 = !DILocation(line: 2214, column: 6, scope: !15778)
!15845 = !DILocation(line: 2216, column: 9, scope: !15793)
!15846 = !DILocation(line: 2216, column: 22, scope: !15793)
!15847 = !DILocation(line: 2216, column: 26, scope: !15793)
!15848 = !DILocation(line: 2216, column: 20, scope: !15793)
!15849 = !DILocation(line: 2216, column: 7, scope: !15793)
!15850 = !DILocation(line: 2216, column: 34, scope: !15792)
!15851 = !DILocation(line: 2216, column: 38, scope: !15792)
!15852 = !DILocation(line: 2216, column: 42, scope: !15792)
!15853 = !DILocation(line: 2216, column: 36, scope: !15792)
!15854 = !DILocation(line: 2216, column: 2, scope: !15793)
!15855 = !DILocation(line: 2217, column: 10, scope: !15791)
!15856 = !DILocation(line: 2217, column: 30, scope: !15791)
!15857 = !DILocation(line: 2217, column: 34, scope: !15791)
!15858 = !DILocation(line: 2217, column: 28, scope: !15791)
!15859 = !DILocation(line: 2217, column: 8, scope: !15791)
!15860 = !DILocation(line: 2218, column: 40, scope: !15791)
!15861 = !DILocation(line: 2218, column: 44, scope: !15791)
!15862 = !DILocation(line: 2218, column: 50, scope: !15791)
!15863 = !DILocation(line: 2218, column: 55, scope: !15791)
!15864 = !DILocation(line: 2219, column: 12, scope: !15791)
!15865 = !DILocation(line: 2219, column: 19, scope: !15791)
!15866 = !DILocation(line: 2218, column: 20, scope: !15791)
!15867 = !DILocation(line: 2218, column: 3, scope: !15791)
!15868 = !DILocation(line: 2218, column: 10, scope: !15791)
!15869 = !DILocation(line: 2218, column: 18, scope: !15791)
!15870 = !DILocation(line: 2221, column: 8, scope: !15871)
!15871 = distinct !DILexicalBlock(scope: !15791, file: !3, line: 2221, column: 7)
!15872 = !DILocation(line: 2221, column: 15, scope: !15871)
!15873 = !DILocation(line: 2221, column: 7, scope: !15791)
!15874 = !DILocation(line: 2222, column: 4, scope: !15871)
!15875 = !DILocation(line: 2228, column: 10, scope: !15791)
!15876 = !DILocation(line: 2228, column: 14, scope: !15791)
!15877 = !DILocation(line: 2228, column: 27, scope: !15791)
!15878 = !DILocation(line: 2228, column: 8, scope: !15791)
!15879 = !DILocation(line: 2229, column: 27, scope: !15791)
!15880 = !DILocation(line: 540, column: 27, scope: !15786, inlinedAt: !15790)
!15881 = !DILocation(line: 540, column: 6, scope: !15786, inlinedAt: !15790)
!15882 = !DILocation(line: 540, column: 6, scope: !15787, inlinedAt: !15790)
!15883 = !DILocation(line: 544, column: 7, scope: !15820, inlinedAt: !15790)
!15884 = !DILocation(line: 544, column: 12, scope: !15820, inlinedAt: !15790)
!15885 = !DILocation(line: 544, column: 7, scope: !15785, inlinedAt: !15790)
!15886 = !DILocation(line: 545, column: 25, scope: !15820, inlinedAt: !15790)
!15887 = !DILocation(line: 545, column: 31, scope: !15820, inlinedAt: !15790)
!15888 = !DILocation(line: 480, column: 33, scope: !15818, inlinedAt: !15819)
!15889 = !DILocation(line: 480, column: 23, scope: !15818, inlinedAt: !15819)
!15890 = !DILocation(line: 481, column: 29, scope: !15818, inlinedAt: !15819)
!15891 = !DILocation(line: 481, column: 35, scope: !15818, inlinedAt: !15819)
!15892 = !DILocation(line: 481, column: 42, scope: !15818, inlinedAt: !15819)
!15893 = !DILocation(line: 474, column: 23, scope: !15813, inlinedAt: !15817)
!15894 = !DILocation(line: 474, column: 29, scope: !15813, inlinedAt: !15817)
!15895 = !DILocation(line: 474, column: 36, scope: !15813, inlinedAt: !15817)
!15896 = !DILocation(line: 474, column: 9, scope: !15813, inlinedAt: !15817)
!15897 = !DILocation(line: 545, column: 4, scope: !15820, inlinedAt: !15790)
!15898 = !DILocation(line: 547, column: 25, scope: !15785, inlinedAt: !15790)
!15899 = !DILocation(line: 348, column: 7, scope: !15900, inlinedAt: !15811)
!15900 = distinct !DILexicalBlock(scope: !15807, file: !10024, line: 348, column: 6)
!15901 = !DILocation(line: 348, column: 6, scope: !15807, inlinedAt: !15811)
!15902 = !DILocation(line: 349, column: 3, scope: !15900, inlinedAt: !15811)
!15903 = !DILocation(line: 351, column: 6, scope: !15904, inlinedAt: !15811)
!15904 = distinct !DILexicalBlock(scope: !15807, file: !10024, line: 351, column: 6)
!15905 = !DILocation(line: 351, column: 11, scope: !15904, inlinedAt: !15811)
!15906 = !DILocation(line: 351, column: 6, scope: !15807, inlinedAt: !15811)
!15907 = !DILocation(line: 352, column: 3, scope: !15904, inlinedAt: !15811)
!15908 = !DILocation(line: 354, column: 32, scope: !15909, inlinedAt: !15811)
!15909 = distinct !DILexicalBlock(scope: !15807, file: !10024, line: 354, column: 6)
!15910 = !DILocation(line: 354, column: 37, scope: !15909, inlinedAt: !15811)
!15911 = !DILocation(line: 354, column: 42, scope: !15909, inlinedAt: !15811)
!15912 = !DILocation(line: 354, column: 45, scope: !15909, inlinedAt: !15811)
!15913 = !DILocation(line: 354, column: 50, scope: !15909, inlinedAt: !15811)
!15914 = !DILocation(line: 354, column: 6, scope: !15807, inlinedAt: !15811)
!15915 = !DILocation(line: 355, column: 3, scope: !15909, inlinedAt: !15811)
!15916 = !DILocation(line: 356, column: 32, scope: !15917, inlinedAt: !15811)
!15917 = distinct !DILexicalBlock(scope: !15807, file: !10024, line: 356, column: 6)
!15918 = !DILocation(line: 356, column: 37, scope: !15917, inlinedAt: !15811)
!15919 = !DILocation(line: 356, column: 43, scope: !15917, inlinedAt: !15811)
!15920 = !DILocation(line: 356, column: 46, scope: !15917, inlinedAt: !15811)
!15921 = !DILocation(line: 356, column: 51, scope: !15917, inlinedAt: !15811)
!15922 = !DILocation(line: 356, column: 6, scope: !15807, inlinedAt: !15811)
!15923 = !DILocation(line: 357, column: 3, scope: !15917, inlinedAt: !15811)
!15924 = !DILocation(line: 358, column: 6, scope: !15925, inlinedAt: !15811)
!15925 = distinct !DILexicalBlock(scope: !15807, file: !10024, line: 358, column: 6)
!15926 = !DILocation(line: 358, column: 11, scope: !15925, inlinedAt: !15811)
!15927 = !DILocation(line: 358, column: 6, scope: !15807, inlinedAt: !15811)
!15928 = !DILocation(line: 358, column: 26, scope: !15925, inlinedAt: !15811)
!15929 = !DILocation(line: 359, column: 6, scope: !15930, inlinedAt: !15811)
!15930 = distinct !DILexicalBlock(scope: !15807, file: !10024, line: 359, column: 6)
!15931 = !DILocation(line: 359, column: 11, scope: !15930, inlinedAt: !15811)
!15932 = !DILocation(line: 359, column: 6, scope: !15807, inlinedAt: !15811)
!15933 = !DILocation(line: 359, column: 26, scope: !15930, inlinedAt: !15811)
!15934 = !DILocation(line: 360, column: 6, scope: !15935, inlinedAt: !15811)
!15935 = distinct !DILexicalBlock(scope: !15807, file: !10024, line: 360, column: 6)
!15936 = !DILocation(line: 360, column: 11, scope: !15935, inlinedAt: !15811)
!15937 = !DILocation(line: 360, column: 6, scope: !15807, inlinedAt: !15811)
!15938 = !DILocation(line: 360, column: 26, scope: !15935, inlinedAt: !15811)
!15939 = !DILocation(line: 361, column: 6, scope: !15940, inlinedAt: !15811)
!15940 = distinct !DILexicalBlock(scope: !15807, file: !10024, line: 361, column: 6)
!15941 = !DILocation(line: 361, column: 11, scope: !15940, inlinedAt: !15811)
!15942 = !DILocation(line: 361, column: 6, scope: !15807, inlinedAt: !15811)
!15943 = !DILocation(line: 361, column: 26, scope: !15940, inlinedAt: !15811)
!15944 = !DILocation(line: 362, column: 6, scope: !15945, inlinedAt: !15811)
!15945 = distinct !DILexicalBlock(scope: !15807, file: !10024, line: 362, column: 6)
!15946 = !DILocation(line: 362, column: 11, scope: !15945, inlinedAt: !15811)
!15947 = !DILocation(line: 362, column: 6, scope: !15807, inlinedAt: !15811)
!15948 = !DILocation(line: 362, column: 26, scope: !15945, inlinedAt: !15811)
!15949 = !DILocation(line: 363, column: 6, scope: !15950, inlinedAt: !15811)
!15950 = distinct !DILexicalBlock(scope: !15807, file: !10024, line: 363, column: 6)
!15951 = !DILocation(line: 363, column: 11, scope: !15950, inlinedAt: !15811)
!15952 = !DILocation(line: 363, column: 6, scope: !15807, inlinedAt: !15811)
!15953 = !DILocation(line: 363, column: 26, scope: !15950, inlinedAt: !15811)
!15954 = !DILocation(line: 364, column: 6, scope: !15955, inlinedAt: !15811)
!15955 = distinct !DILexicalBlock(scope: !15807, file: !10024, line: 364, column: 6)
!15956 = !DILocation(line: 364, column: 11, scope: !15955, inlinedAt: !15811)
!15957 = !DILocation(line: 364, column: 6, scope: !15807, inlinedAt: !15811)
!15958 = !DILocation(line: 364, column: 26, scope: !15955, inlinedAt: !15811)
!15959 = !DILocation(line: 365, column: 6, scope: !15960, inlinedAt: !15811)
!15960 = distinct !DILexicalBlock(scope: !15807, file: !10024, line: 365, column: 6)
!15961 = !DILocation(line: 365, column: 11, scope: !15960, inlinedAt: !15811)
!15962 = !DILocation(line: 365, column: 6, scope: !15807, inlinedAt: !15811)
!15963 = !DILocation(line: 365, column: 26, scope: !15960, inlinedAt: !15811)
!15964 = !DILocation(line: 366, column: 6, scope: !15965, inlinedAt: !15811)
!15965 = distinct !DILexicalBlock(scope: !15807, file: !10024, line: 366, column: 6)
!15966 = !DILocation(line: 366, column: 11, scope: !15965, inlinedAt: !15811)
!15967 = !DILocation(line: 366, column: 6, scope: !15807, inlinedAt: !15811)
!15968 = !DILocation(line: 366, column: 26, scope: !15965, inlinedAt: !15811)
!15969 = !DILocation(line: 367, column: 6, scope: !15970, inlinedAt: !15811)
!15970 = distinct !DILexicalBlock(scope: !15807, file: !10024, line: 367, column: 6)
!15971 = !DILocation(line: 367, column: 11, scope: !15970, inlinedAt: !15811)
!15972 = !DILocation(line: 367, column: 6, scope: !15807, inlinedAt: !15811)
!15973 = !DILocation(line: 367, column: 26, scope: !15970, inlinedAt: !15811)
!15974 = !DILocation(line: 368, column: 6, scope: !15975, inlinedAt: !15811)
!15975 = distinct !DILexicalBlock(scope: !15807, file: !10024, line: 368, column: 6)
!15976 = !DILocation(line: 368, column: 11, scope: !15975, inlinedAt: !15811)
!15977 = !DILocation(line: 368, column: 6, scope: !15807, inlinedAt: !15811)
!15978 = !DILocation(line: 368, column: 26, scope: !15975, inlinedAt: !15811)
!15979 = !DILocation(line: 369, column: 6, scope: !15980, inlinedAt: !15811)
!15980 = distinct !DILexicalBlock(scope: !15807, file: !10024, line: 369, column: 6)
!15981 = !DILocation(line: 369, column: 11, scope: !15980, inlinedAt: !15811)
!15982 = !DILocation(line: 369, column: 6, scope: !15807, inlinedAt: !15811)
!15983 = !DILocation(line: 369, column: 26, scope: !15980, inlinedAt: !15811)
!15984 = !DILocation(line: 370, column: 6, scope: !15985, inlinedAt: !15811)
!15985 = distinct !DILexicalBlock(scope: !15807, file: !10024, line: 370, column: 6)
!15986 = !DILocation(line: 370, column: 11, scope: !15985, inlinedAt: !15811)
!15987 = !DILocation(line: 370, column: 6, scope: !15807, inlinedAt: !15811)
!15988 = !DILocation(line: 370, column: 26, scope: !15985, inlinedAt: !15811)
!15989 = !DILocation(line: 371, column: 6, scope: !15990, inlinedAt: !15811)
!15990 = distinct !DILexicalBlock(scope: !15807, file: !10024, line: 371, column: 6)
!15991 = !DILocation(line: 371, column: 11, scope: !15990, inlinedAt: !15811)
!15992 = !DILocation(line: 371, column: 6, scope: !15807, inlinedAt: !15811)
!15993 = !DILocation(line: 371, column: 26, scope: !15990, inlinedAt: !15811)
!15994 = !DILocation(line: 372, column: 6, scope: !15995, inlinedAt: !15811)
!15995 = distinct !DILexicalBlock(scope: !15807, file: !10024, line: 372, column: 6)
!15996 = !DILocation(line: 372, column: 11, scope: !15995, inlinedAt: !15811)
!15997 = !DILocation(line: 372, column: 6, scope: !15807, inlinedAt: !15811)
!15998 = !DILocation(line: 372, column: 26, scope: !15995, inlinedAt: !15811)
!15999 = !DILocation(line: 373, column: 6, scope: !16000, inlinedAt: !15811)
!16000 = distinct !DILexicalBlock(scope: !15807, file: !10024, line: 373, column: 6)
!16001 = !DILocation(line: 373, column: 11, scope: !16000, inlinedAt: !15811)
!16002 = !DILocation(line: 373, column: 6, scope: !15807, inlinedAt: !15811)
!16003 = !DILocation(line: 373, column: 26, scope: !16000, inlinedAt: !15811)
!16004 = !DILocation(line: 374, column: 6, scope: !16005, inlinedAt: !15811)
!16005 = distinct !DILexicalBlock(scope: !15807, file: !10024, line: 374, column: 6)
!16006 = !DILocation(line: 374, column: 11, scope: !16005, inlinedAt: !15811)
!16007 = !DILocation(line: 374, column: 6, scope: !15807, inlinedAt: !15811)
!16008 = !DILocation(line: 374, column: 26, scope: !16005, inlinedAt: !15811)
!16009 = !DILocation(line: 375, column: 6, scope: !16010, inlinedAt: !15811)
!16010 = distinct !DILexicalBlock(scope: !15807, file: !10024, line: 375, column: 6)
!16011 = !DILocation(line: 375, column: 11, scope: !16010, inlinedAt: !15811)
!16012 = !DILocation(line: 375, column: 6, scope: !15807, inlinedAt: !15811)
!16013 = !DILocation(line: 375, column: 27, scope: !16010, inlinedAt: !15811)
!16014 = !DILocation(line: 376, column: 6, scope: !16015, inlinedAt: !15811)
!16015 = distinct !DILexicalBlock(scope: !15807, file: !10024, line: 376, column: 6)
!16016 = !DILocation(line: 376, column: 11, scope: !16015, inlinedAt: !15811)
!16017 = !DILocation(line: 376, column: 6, scope: !15807, inlinedAt: !15811)
!16018 = !DILocation(line: 376, column: 32, scope: !16015, inlinedAt: !15811)
!16019 = !DILocation(line: 377, column: 6, scope: !16020, inlinedAt: !15811)
!16020 = distinct !DILexicalBlock(scope: !15807, file: !10024, line: 377, column: 6)
!16021 = !DILocation(line: 377, column: 11, scope: !16020, inlinedAt: !15811)
!16022 = !DILocation(line: 377, column: 6, scope: !15807, inlinedAt: !15811)
!16023 = !DILocation(line: 377, column: 32, scope: !16020, inlinedAt: !15811)
!16024 = !DILocation(line: 378, column: 6, scope: !16025, inlinedAt: !15811)
!16025 = distinct !DILexicalBlock(scope: !15807, file: !10024, line: 378, column: 6)
!16026 = !DILocation(line: 378, column: 11, scope: !16025, inlinedAt: !15811)
!16027 = !DILocation(line: 378, column: 6, scope: !15807, inlinedAt: !15811)
!16028 = !DILocation(line: 378, column: 32, scope: !16025, inlinedAt: !15811)
!16029 = !DILocation(line: 379, column: 6, scope: !16030, inlinedAt: !15811)
!16030 = distinct !DILexicalBlock(scope: !15807, file: !10024, line: 379, column: 6)
!16031 = !DILocation(line: 379, column: 11, scope: !16030, inlinedAt: !15811)
!16032 = !DILocation(line: 379, column: 6, scope: !15807, inlinedAt: !15811)
!16033 = !DILocation(line: 379, column: 33, scope: !16030, inlinedAt: !15811)
!16034 = !DILocation(line: 380, column: 6, scope: !16035, inlinedAt: !15811)
!16035 = distinct !DILexicalBlock(scope: !15807, file: !10024, line: 380, column: 6)
!16036 = !DILocation(line: 380, column: 11, scope: !16035, inlinedAt: !15811)
!16037 = !DILocation(line: 380, column: 6, scope: !15807, inlinedAt: !15811)
!16038 = !DILocation(line: 380, column: 33, scope: !16035, inlinedAt: !15811)
!16039 = !DILocation(line: 381, column: 6, scope: !16040, inlinedAt: !15811)
!16040 = distinct !DILexicalBlock(scope: !15807, file: !10024, line: 381, column: 6)
!16041 = !DILocation(line: 381, column: 11, scope: !16040, inlinedAt: !15811)
!16042 = !DILocation(line: 381, column: 6, scope: !15807, inlinedAt: !15811)
!16043 = !DILocation(line: 381, column: 33, scope: !16040, inlinedAt: !15811)
!16044 = !DILocation(line: 382, column: 2, scope: !16045, inlinedAt: !15811)
!16045 = distinct !DILexicalBlock(scope: !16046, file: !10024, line: 382, column: 2)
!16046 = distinct !DILexicalBlock(scope: !15807, file: !10024, line: 382, column: 2)
!16047 = !{i32 -2143919097, i32 -2143919068, i32 -2143919022, i32 -2143918964, i32 -2143918910, i32 -2143918856, i32 -2143918801, i32 -2143918770}
!16048 = !DILocation(line: 382, column: 2, scope: !16049, inlinedAt: !15811)
!16049 = distinct !DILexicalBlock(scope: !16050, file: !10024, line: 382, column: 2)
!16050 = distinct !DILexicalBlock(scope: !16046, file: !10024, line: 382, column: 2)
!16051 = !{i32 -2143918327, i32 -2143918320, i32 -2143918266, i32 -2143918235, i32 -2143918205}
!16052 = !DILocation(line: 382, column: 2, scope: !16050, inlinedAt: !15811)
!16053 = !DILocation(line: 386, column: 1, scope: !15807, inlinedAt: !15811)
!16054 = !DILocation(line: 547, column: 9, scope: !15785, inlinedAt: !15790)
!16055 = !DILocation(line: 549, column: 8, scope: !16056, inlinedAt: !15790)
!16056 = distinct !DILexicalBlock(scope: !15785, file: !10024, line: 549, column: 7)
!16057 = !DILocation(line: 549, column: 7, scope: !15785, inlinedAt: !15790)
!16058 = !DILocation(line: 550, column: 4, scope: !16056, inlinedAt: !15790)
!16059 = !DILocation(line: 553, column: 33, scope: !15785, inlinedAt: !15790)
!16060 = !DILocation(line: 325, column: 6, scope: !16061, inlinedAt: !15805)
!16061 = distinct !DILexicalBlock(scope: !15801, file: !10024, line: 325, column: 6)
!16062 = !DILocation(line: 325, column: 6, scope: !15801, inlinedAt: !15805)
!16063 = !DILocation(line: 326, column: 3, scope: !16061, inlinedAt: !15805)
!16064 = !DILocation(line: 332, column: 9, scope: !15801, inlinedAt: !15805)
!16065 = !DILocation(line: 332, column: 15, scope: !15801, inlinedAt: !15805)
!16066 = !DILocation(line: 332, column: 2, scope: !15801, inlinedAt: !15805)
!16067 = !DILocation(line: 336, column: 1, scope: !15801, inlinedAt: !15805)
!16068 = !DILocation(line: 553, column: 5, scope: !15785, inlinedAt: !15790)
!16069 = !DILocation(line: 553, column: 41, scope: !15785, inlinedAt: !15790)
!16070 = !DILocation(line: 554, column: 5, scope: !15785, inlinedAt: !15790)
!16071 = !DILocation(line: 554, column: 12, scope: !15785, inlinedAt: !15790)
!16072 = !DILocation(line: 448, column: 31, scope: !15780, inlinedAt: !15784)
!16073 = !DILocation(line: 448, column: 34, scope: !15780, inlinedAt: !15784)
!16074 = !DILocation(line: 448, column: 14, scope: !15780, inlinedAt: !15784)
!16075 = !DILocation(line: 450, column: 22, scope: !15780, inlinedAt: !15784)
!16076 = !DILocation(line: 450, column: 25, scope: !15780, inlinedAt: !15784)
!16077 = !DILocation(line: 450, column: 30, scope: !15780, inlinedAt: !15784)
!16078 = !DILocation(line: 450, column: 36, scope: !15780, inlinedAt: !15784)
!16079 = !DILocation(line: 450, column: 8, scope: !15780, inlinedAt: !15784)
!16080 = !DILocation(line: 450, column: 6, scope: !15780, inlinedAt: !15784)
!16081 = !DILocation(line: 451, column: 9, scope: !15780, inlinedAt: !15784)
!16082 = !DILocation(line: 552, column: 3, scope: !15785, inlinedAt: !15790)
!16083 = !DILocation(line: 557, column: 19, scope: !15787, inlinedAt: !15790)
!16084 = !DILocation(line: 557, column: 25, scope: !15787, inlinedAt: !15790)
!16085 = !DILocation(line: 557, column: 9, scope: !15787, inlinedAt: !15790)
!16086 = !DILocation(line: 557, column: 2, scope: !15787, inlinedAt: !15790)
!16087 = !DILocation(line: 558, column: 1, scope: !15787, inlinedAt: !15790)
!16088 = !DILocation(line: 2229, column: 19, scope: !15791)
!16089 = !DILocation(line: 2229, column: 3, scope: !15791)
!16090 = !DILocation(line: 2229, column: 10, scope: !15791)
!16091 = !DILocation(line: 2229, column: 17, scope: !15791)
!16092 = !DILocation(line: 2230, column: 8, scope: !16093)
!16093 = distinct !DILexicalBlock(scope: !15791, file: !3, line: 2230, column: 7)
!16094 = !DILocation(line: 2230, column: 15, scope: !16093)
!16095 = !DILocation(line: 2230, column: 7, scope: !15791)
!16096 = !DILocation(line: 2231, column: 4, scope: !16093)
!16097 = !DILocation(line: 2233, column: 10, scope: !15791)
!16098 = !DILocation(line: 2233, column: 30, scope: !15791)
!16099 = !DILocation(line: 2233, column: 34, scope: !15791)
!16100 = !DILocation(line: 2233, column: 28, scope: !15791)
!16101 = !DILocation(line: 2233, column: 8, scope: !15791)
!16102 = !DILocation(line: 2234, column: 40, scope: !15791)
!16103 = !DILocation(line: 2234, column: 44, scope: !15791)
!16104 = !DILocation(line: 2234, column: 50, scope: !15791)
!16105 = !DILocation(line: 2234, column: 55, scope: !15791)
!16106 = !DILocation(line: 2235, column: 9, scope: !15791)
!16107 = !DILocation(line: 2235, column: 16, scope: !15791)
!16108 = !DILocation(line: 2234, column: 20, scope: !15791)
!16109 = !DILocation(line: 2234, column: 3, scope: !15791)
!16110 = !DILocation(line: 2234, column: 10, scope: !15791)
!16111 = !DILocation(line: 2234, column: 18, scope: !15791)
!16112 = !DILocation(line: 2236, column: 8, scope: !16113)
!16113 = distinct !DILexicalBlock(scope: !15791, file: !3, line: 2236, column: 7)
!16114 = !DILocation(line: 2236, column: 15, scope: !16113)
!16115 = !DILocation(line: 2236, column: 7, scope: !15791)
!16116 = !DILocation(line: 2237, column: 4, scope: !16113)
!16117 = !DILocation(line: 2241, column: 2, scope: !15791)
!16118 = !DILocation(line: 2216, column: 54, scope: !15792)
!16119 = !DILocation(line: 2216, column: 59, scope: !15792)
!16120 = !DILocation(line: 2216, column: 2, scope: !15792)
!16121 = distinct !{!16121, !15854, !16122}
!16122 = !DILocation(line: 2241, column: 2, scope: !15793)
!16123 = !DILocation(line: 2242, column: 6, scope: !16124)
!16124 = distinct !DILexicalBlock(scope: !15778, file: !3, line: 2242, column: 6)
!16125 = !DILocation(line: 2242, column: 10, scope: !16124)
!16126 = !DILocation(line: 2242, column: 22, scope: !16124)
!16127 = !DILocation(line: 2242, column: 43, scope: !16124)
!16128 = !DILocation(line: 2242, column: 6, scope: !15778)
!16129 = !DILocation(line: 2243, column: 3, scope: !16124)
!16130 = !DILocation(line: 2245, column: 2, scope: !15778)
!16131 = !DILabel(scope: !15778, name: "out_err", file: !3, line: 2247)
!16132 = !DILocation(line: 2247, column: 1, scope: !15778)
!16133 = !DILocation(line: 2248, column: 23, scope: !15778)
!16134 = !DILocation(line: 2248, column: 2, scope: !15778)
!16135 = !DILocation(line: 2249, column: 2, scope: !15778)
!16136 = !DILocation(line: 2250, column: 1, scope: !15778)
!16137 = distinct !DISubprogram(name: "napi_enable", scope: !36, file: !36, line: 507, type: !16138, scopeLine: 508, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!16138 = !DISubroutineType(types: !16139)
!16139 = !{null, !10399}
!16140 = !DILocalVariable(name: "n", arg: 1, scope: !16137, file: !36, line: 507, type: !10399)
!16141 = !DILocation(line: 507, column: 52, scope: !16137)
!16142 = !DILocation(line: 509, column: 2, scope: !16137)
!16143 = !DILocation(line: 509, column: 2, scope: !16144)
!16144 = distinct !DILexicalBlock(scope: !16145, file: !36, line: 509, column: 2)
!16145 = distinct !DILexicalBlock(scope: !16137, file: !36, line: 509, column: 2)
!16146 = !DILocation(line: 509, column: 2, scope: !16145)
!16147 = !DILocation(line: 509, column: 2, scope: !16148)
!16148 = distinct !DILexicalBlock(scope: !16144, file: !36, line: 509, column: 2)
!16149 = !DILocation(line: 509, column: 2, scope: !16150)
!16150 = distinct !DILexicalBlock(scope: !16148, file: !36, line: 509, column: 2)
!16151 = !DILocation(line: 509, column: 2, scope: !16152)
!16152 = distinct !DILexicalBlock(scope: !16148, file: !36, line: 509, column: 2)
!16153 = !{i32 -2139858953, i32 -2139858924, i32 -2139858878, i32 -2139858820, i32 -2139858766, i32 -2139858712, i32 -2139858657, i32 -2139858626}
!16154 = !DILocation(line: 509, column: 2, scope: !16155)
!16155 = distinct !DILexicalBlock(scope: !16156, file: !36, line: 509, column: 2)
!16156 = distinct !DILexicalBlock(scope: !16148, file: !36, line: 509, column: 2)
!16157 = !{i32 -2139858178, i32 -2139858171, i32 -2139858117, i32 -2139858086, i32 -2139858056}
!16158 = !DILocation(line: 509, column: 2, scope: !16156)
!16159 = !DILocation(line: 510, column: 2, scope: !16137)
!16160 = !{i32 -2139857987}
!16161 = !DILocation(line: 511, column: 31, scope: !16137)
!16162 = !DILocation(line: 511, column: 34, scope: !16137)
!16163 = !DILocation(line: 511, column: 2, scope: !16137)
!16164 = !DILocation(line: 512, column: 31, scope: !16137)
!16165 = !DILocation(line: 512, column: 34, scope: !16137)
!16166 = !DILocation(line: 512, column: 2, scope: !16137)
!16167 = !DILocation(line: 513, column: 1, scope: !16137)
!16168 = distinct !DISubprogram(name: "macb_init_hw", scope: !3, file: !3, line: 2438, type: !10392, scopeLine: 2439, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!16169 = !DILocalVariable(name: "bp", arg: 1, scope: !16168, file: !3, line: 2438, type: !10238)
!16170 = !DILocation(line: 2438, column: 39, scope: !16168)
!16171 = !DILocalVariable(name: "config", scope: !16168, file: !3, line: 2440, type: !707)
!16172 = !DILocation(line: 2440, column: 6, scope: !16168)
!16173 = !DILocation(line: 2442, column: 16, scope: !16168)
!16174 = !DILocation(line: 2442, column: 2, scope: !16168)
!16175 = !DILocation(line: 2443, column: 18, scope: !16168)
!16176 = !DILocation(line: 2443, column: 2, scope: !16168)
!16177 = !DILocation(line: 2445, column: 28, scope: !16168)
!16178 = !DILocation(line: 2445, column: 11, scope: !16168)
!16179 = !DILocation(line: 2445, column: 9, scope: !16168)
!16180 = !DILocation(line: 2446, column: 9, scope: !16168)
!16181 = !DILocation(line: 2447, column: 9, scope: !16168)
!16182 = !DILocation(line: 2448, column: 6, scope: !16183)
!16183 = distinct !DILexicalBlock(scope: !16168, file: !3, line: 2448, column: 6)
!16184 = !DILocation(line: 2448, column: 10, scope: !16183)
!16185 = !DILocation(line: 2448, column: 15, scope: !16183)
!16186 = !DILocation(line: 2448, column: 6, scope: !16168)
!16187 = !DILocation(line: 2449, column: 10, scope: !16183)
!16188 = !DILocation(line: 2449, column: 3, scope: !16183)
!16189 = !DILocation(line: 2451, column: 10, scope: !16183)
!16190 = !DILocation(line: 2452, column: 6, scope: !16191)
!16191 = distinct !DILexicalBlock(scope: !16168, file: !3, line: 2452, column: 6)
!16192 = !DILocation(line: 2452, column: 10, scope: !16191)
!16193 = !DILocation(line: 2452, column: 15, scope: !16191)
!16194 = !DILocation(line: 2452, column: 21, scope: !16191)
!16195 = !DILocation(line: 2452, column: 6, scope: !16168)
!16196 = !DILocation(line: 2453, column: 10, scope: !16191)
!16197 = !DILocation(line: 2453, column: 3, scope: !16191)
!16198 = !DILocation(line: 2454, column: 23, scope: !16199)
!16199 = distinct !DILexicalBlock(scope: !16191, file: !3, line: 2454, column: 11)
!16200 = !DILocation(line: 2454, column: 11, scope: !16199)
!16201 = !DILocation(line: 2454, column: 27, scope: !16199)
!16202 = !DILocation(line: 2454, column: 30, scope: !16199)
!16203 = !DILocation(line: 2454, column: 34, scope: !16199)
!16204 = !DILocation(line: 2454, column: 39, scope: !16199)
!16205 = !DILocation(line: 2454, column: 48, scope: !16199)
!16206 = !DILocation(line: 2454, column: 11, scope: !16191)
!16207 = !DILocation(line: 2455, column: 10, scope: !16199)
!16208 = !DILocation(line: 2455, column: 3, scope: !16199)
!16209 = !DILocation(line: 2456, column: 8, scope: !16210)
!16210 = distinct !DILexicalBlock(scope: !16168, file: !3, line: 2456, column: 6)
!16211 = !DILocation(line: 2456, column: 12, scope: !16210)
!16212 = !DILocation(line: 2456, column: 17, scope: !16210)
!16213 = !DILocation(line: 2456, column: 23, scope: !16210)
!16214 = !DILocation(line: 2456, column: 6, scope: !16168)
!16215 = !DILocation(line: 2457, column: 10, scope: !16210)
!16216 = !DILocation(line: 2457, column: 3, scope: !16210)
!16217 = !DILocation(line: 2458, column: 21, scope: !16168)
!16218 = !DILocation(line: 2458, column: 12, scope: !16168)
!16219 = !DILocation(line: 2458, column: 9, scope: !16168)
!16220 = !DILocation(line: 2459, column: 2, scope: !16168)
!16221 = !DILocation(line: 2460, column: 7, scope: !16222)
!16222 = distinct !DILexicalBlock(scope: !16168, file: !3, line: 2460, column: 6)
!16223 = !DILocation(line: 2460, column: 11, scope: !16222)
!16224 = !DILocation(line: 2460, column: 16, scope: !16222)
!16225 = !DILocation(line: 2460, column: 35, scope: !16222)
!16226 = !DILocation(line: 2460, column: 38, scope: !16222)
!16227 = !DILocation(line: 2460, column: 42, scope: !16222)
!16228 = !DILocation(line: 2460, column: 6, scope: !16168)
!16229 = !DILocation(line: 2461, column: 3, scope: !16222)
!16230 = !DILocation(line: 2462, column: 2, scope: !16168)
!16231 = !DILocation(line: 2462, column: 6, scope: !16168)
!16232 = !DILocation(line: 2462, column: 22, scope: !16168)
!16233 = !DILocation(line: 2463, column: 6, scope: !16234)
!16234 = distinct !DILexicalBlock(scope: !16168, file: !3, line: 2463, column: 6)
!16235 = !DILocation(line: 2463, column: 10, scope: !16234)
!16236 = !DILocation(line: 2463, column: 15, scope: !16234)
!16237 = !DILocation(line: 2463, column: 6, scope: !16168)
!16238 = !DILocation(line: 2464, column: 3, scope: !16234)
!16239 = !DILocation(line: 2464, column: 7, scope: !16234)
!16240 = !DILocation(line: 2464, column: 23, scope: !16234)
!16241 = !DILocation(line: 2466, column: 21, scope: !16168)
!16242 = !DILocation(line: 2466, column: 2, scope: !16168)
!16243 = !DILocation(line: 2467, column: 1, scope: !16168)
!16244 = distinct !DISubprogram(name: "macb_phylink_connect", scope: !3, file: !3, line: 691, type: !10388, scopeLine: 692, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!16245 = !DILocalVariable(name: "bp", arg: 1, scope: !16244, file: !3, line: 691, type: !10238)
!16246 = !DILocation(line: 691, column: 46, scope: !16244)
!16247 = !DILocalVariable(name: "dn", scope: !16244, file: !3, line: 693, type: !4476)
!16248 = !DILocation(line: 693, column: 22, scope: !16244)
!16249 = !DILocation(line: 693, column: 27, scope: !16244)
!16250 = !DILocation(line: 693, column: 31, scope: !16244)
!16251 = !DILocation(line: 693, column: 37, scope: !16244)
!16252 = !DILocation(line: 693, column: 41, scope: !16244)
!16253 = !DILocalVariable(name: "dev", scope: !16244, file: !3, line: 694, type: !295)
!16254 = !DILocation(line: 694, column: 21, scope: !16244)
!16255 = !DILocation(line: 694, column: 27, scope: !16244)
!16256 = !DILocation(line: 694, column: 31, scope: !16244)
!16257 = !DILocalVariable(name: "phydev", scope: !16244, file: !3, line: 695, type: !9463)
!16258 = !DILocation(line: 695, column: 21, scope: !16244)
!16259 = !DILocalVariable(name: "ret", scope: !16244, file: !3, line: 696, type: !37)
!16260 = !DILocation(line: 696, column: 6, scope: !16244)
!16261 = !DILocation(line: 698, column: 6, scope: !16262)
!16262 = distinct !DILexicalBlock(scope: !16244, file: !3, line: 698, column: 6)
!16263 = !DILocation(line: 698, column: 6, scope: !16244)
!16264 = !DILocation(line: 699, column: 32, scope: !16262)
!16265 = !DILocation(line: 699, column: 36, scope: !16262)
!16266 = !DILocation(line: 699, column: 45, scope: !16262)
!16267 = !DILocation(line: 699, column: 9, scope: !16262)
!16268 = !DILocation(line: 699, column: 7, scope: !16262)
!16269 = !DILocation(line: 699, column: 3, scope: !16262)
!16270 = !DILocation(line: 701, column: 7, scope: !16271)
!16271 = distinct !DILexicalBlock(scope: !16244, file: !3, line: 701, column: 6)
!16272 = !DILocation(line: 701, column: 10, scope: !16271)
!16273 = !DILocation(line: 701, column: 14, scope: !16271)
!16274 = !DILocation(line: 701, column: 18, scope: !16271)
!16275 = !DILocation(line: 701, column: 45, scope: !16271)
!16276 = !DILocation(line: 701, column: 22, scope: !16271)
!16277 = !DILocation(line: 701, column: 6, scope: !16244)
!16278 = !DILocation(line: 702, column: 27, scope: !16279)
!16279 = distinct !DILexicalBlock(scope: !16271, file: !3, line: 701, column: 51)
!16280 = !DILocation(line: 702, column: 31, scope: !16279)
!16281 = !DILocation(line: 702, column: 12, scope: !16279)
!16282 = !DILocation(line: 702, column: 10, scope: !16279)
!16283 = !DILocation(line: 703, column: 8, scope: !16284)
!16284 = distinct !DILexicalBlock(scope: !16279, file: !3, line: 703, column: 7)
!16285 = !DILocation(line: 703, column: 7, scope: !16279)
!16286 = !DILocation(line: 704, column: 15, scope: !16287)
!16287 = distinct !DILexicalBlock(scope: !16284, file: !3, line: 703, column: 16)
!16288 = !DILocation(line: 704, column: 4, scope: !16287)
!16289 = !DILocation(line: 705, column: 4, scope: !16287)
!16290 = !DILocation(line: 709, column: 29, scope: !16279)
!16291 = !DILocation(line: 709, column: 33, scope: !16279)
!16292 = !DILocation(line: 709, column: 42, scope: !16279)
!16293 = !DILocation(line: 709, column: 9, scope: !16279)
!16294 = !DILocation(line: 709, column: 7, scope: !16279)
!16295 = !DILocation(line: 710, column: 2, scope: !16279)
!16296 = !DILocation(line: 712, column: 6, scope: !16297)
!16297 = distinct !DILexicalBlock(scope: !16244, file: !3, line: 712, column: 6)
!16298 = !DILocation(line: 712, column: 6, scope: !16244)
!16299 = !DILocation(line: 713, column: 14, scope: !16300)
!16300 = distinct !DILexicalBlock(scope: !16297, file: !3, line: 712, column: 11)
!16301 = !DILocation(line: 713, column: 50, scope: !16300)
!16302 = !DILocation(line: 713, column: 3, scope: !16300)
!16303 = !DILocation(line: 714, column: 10, scope: !16300)
!16304 = !DILocation(line: 714, column: 3, scope: !16300)
!16305 = !DILocation(line: 717, column: 16, scope: !16244)
!16306 = !DILocation(line: 717, column: 20, scope: !16244)
!16307 = !DILocation(line: 717, column: 2, scope: !16244)
!16308 = !DILocation(line: 719, column: 2, scope: !16244)
!16309 = !DILocation(line: 720, column: 1, scope: !16244)
!16310 = distinct !DISubprogram(name: "macb_reset_hw", scope: !3, file: !3, line: 2294, type: !10392, scopeLine: 2295, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!16311 = !DILocalVariable(name: "bp", arg: 1, scope: !16310, file: !3, line: 2294, type: !10238)
!16312 = !DILocation(line: 2294, column: 40, scope: !16310)
!16313 = !DILocalVariable(name: "queue", scope: !16310, file: !3, line: 2296, type: !10234)
!16314 = !DILocation(line: 2296, column: 21, scope: !16310)
!16315 = !DILocalVariable(name: "q", scope: !16310, file: !3, line: 2297, type: !7)
!16316 = !DILocation(line: 2297, column: 15, scope: !16310)
!16317 = !DILocalVariable(name: "ctrl", scope: !16310, file: !3, line: 2298, type: !707)
!16318 = !DILocation(line: 2298, column: 6, scope: !16310)
!16319 = !DILocation(line: 2298, column: 13, scope: !16310)
!16320 = !DILocation(line: 2303, column: 7, scope: !16310)
!16321 = !DILocation(line: 2306, column: 7, scope: !16310)
!16322 = !DILocation(line: 2308, column: 2, scope: !16310)
!16323 = !DILocation(line: 2311, column: 2, scope: !16310)
!16324 = !DILocation(line: 2312, column: 2, scope: !16310)
!16325 = !DILocation(line: 2315, column: 9, scope: !16326)
!16326 = distinct !DILexicalBlock(scope: !16310, file: !3, line: 2315, column: 2)
!16327 = !DILocation(line: 2315, column: 22, scope: !16326)
!16328 = !DILocation(line: 2315, column: 26, scope: !16326)
!16329 = !DILocation(line: 2315, column: 20, scope: !16326)
!16330 = !DILocation(line: 2315, column: 7, scope: !16326)
!16331 = !DILocation(line: 2315, column: 34, scope: !16332)
!16332 = distinct !DILexicalBlock(scope: !16326, file: !3, line: 2315, column: 2)
!16333 = !DILocation(line: 2315, column: 38, scope: !16332)
!16334 = !DILocation(line: 2315, column: 42, scope: !16332)
!16335 = !DILocation(line: 2315, column: 36, scope: !16332)
!16336 = !DILocation(line: 2315, column: 2, scope: !16326)
!16337 = !DILocation(line: 2316, column: 3, scope: !16338)
!16338 = distinct !DILexicalBlock(scope: !16332, file: !3, line: 2315, column: 68)
!16339 = !DILocation(line: 2317, column: 3, scope: !16338)
!16340 = !DILocation(line: 2318, column: 7, scope: !16341)
!16341 = distinct !DILexicalBlock(scope: !16338, file: !3, line: 2318, column: 7)
!16342 = !DILocation(line: 2318, column: 11, scope: !16341)
!16343 = !DILocation(line: 2318, column: 16, scope: !16341)
!16344 = !DILocation(line: 2318, column: 7, scope: !16338)
!16345 = !DILocation(line: 2319, column: 4, scope: !16341)
!16346 = !DILocation(line: 2320, column: 2, scope: !16338)
!16347 = !DILocation(line: 2315, column: 54, scope: !16332)
!16348 = !DILocation(line: 2315, column: 59, scope: !16332)
!16349 = !DILocation(line: 2315, column: 2, scope: !16332)
!16350 = distinct !{!16350, !16336, !16351}
!16351 = !DILocation(line: 2320, column: 2, scope: !16326)
!16352 = !DILocation(line: 2321, column: 1, scope: !16310)
!16353 = distinct !DISubprogram(name: "macb_free_consistent", scope: !3, file: !3, line: 2148, type: !10392, scopeLine: 2149, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!16354 = !DILocalVariable(name: "bp", arg: 1, scope: !16353, file: !3, line: 2148, type: !10238)
!16355 = !DILocation(line: 2148, column: 47, scope: !16353)
!16356 = !DILocalVariable(name: "queue", scope: !16353, file: !3, line: 2150, type: !10234)
!16357 = !DILocation(line: 2150, column: 21, scope: !16353)
!16358 = !DILocalVariable(name: "q", scope: !16353, file: !3, line: 2151, type: !7)
!16359 = !DILocation(line: 2151, column: 15, scope: !16353)
!16360 = !DILocalVariable(name: "size", scope: !16353, file: !3, line: 2152, type: !37)
!16361 = !DILocation(line: 2152, column: 6, scope: !16353)
!16362 = !DILocation(line: 2154, column: 2, scope: !16353)
!16363 = !DILocation(line: 2154, column: 6, scope: !16353)
!16364 = !DILocation(line: 2154, column: 18, scope: !16353)
!16365 = !DILocation(line: 2154, column: 38, scope: !16353)
!16366 = !DILocation(line: 2156, column: 9, scope: !16367)
!16367 = distinct !DILexicalBlock(scope: !16353, file: !3, line: 2156, column: 2)
!16368 = !DILocation(line: 2156, column: 22, scope: !16367)
!16369 = !DILocation(line: 2156, column: 26, scope: !16367)
!16370 = !DILocation(line: 2156, column: 20, scope: !16367)
!16371 = !DILocation(line: 2156, column: 7, scope: !16367)
!16372 = !DILocation(line: 2156, column: 34, scope: !16373)
!16373 = distinct !DILexicalBlock(scope: !16367, file: !3, line: 2156, column: 2)
!16374 = !DILocation(line: 2156, column: 38, scope: !16373)
!16375 = !DILocation(line: 2156, column: 42, scope: !16373)
!16376 = !DILocation(line: 2156, column: 36, scope: !16373)
!16377 = !DILocation(line: 2156, column: 2, scope: !16367)
!16378 = !DILocation(line: 2157, column: 9, scope: !16379)
!16379 = distinct !DILexicalBlock(scope: !16373, file: !3, line: 2156, column: 68)
!16380 = !DILocation(line: 2157, column: 16, scope: !16379)
!16381 = !DILocation(line: 2157, column: 3, scope: !16379)
!16382 = !DILocation(line: 2158, column: 3, scope: !16379)
!16383 = !DILocation(line: 2158, column: 10, scope: !16379)
!16384 = !DILocation(line: 2158, column: 17, scope: !16379)
!16385 = !DILocation(line: 2159, column: 7, scope: !16386)
!16386 = distinct !DILexicalBlock(scope: !16379, file: !3, line: 2159, column: 7)
!16387 = !DILocation(line: 2159, column: 14, scope: !16386)
!16388 = !DILocation(line: 2159, column: 7, scope: !16379)
!16389 = !DILocation(line: 2160, column: 11, scope: !16390)
!16390 = distinct !DILexicalBlock(scope: !16386, file: !3, line: 2159, column: 23)
!16391 = !DILocation(line: 2160, column: 31, scope: !16390)
!16392 = !DILocation(line: 2160, column: 35, scope: !16390)
!16393 = !DILocation(line: 2160, column: 29, scope: !16390)
!16394 = !DILocation(line: 2160, column: 9, scope: !16390)
!16395 = !DILocation(line: 2161, column: 23, scope: !16390)
!16396 = !DILocation(line: 2161, column: 27, scope: !16390)
!16397 = !DILocation(line: 2161, column: 33, scope: !16390)
!16398 = !DILocation(line: 2161, column: 38, scope: !16390)
!16399 = !DILocation(line: 2162, column: 8, scope: !16390)
!16400 = !DILocation(line: 2162, column: 15, scope: !16390)
!16401 = !DILocation(line: 2162, column: 24, scope: !16390)
!16402 = !DILocation(line: 2162, column: 31, scope: !16390)
!16403 = !DILocation(line: 2161, column: 4, scope: !16390)
!16404 = !DILocation(line: 2163, column: 4, scope: !16390)
!16405 = !DILocation(line: 2163, column: 11, scope: !16390)
!16406 = !DILocation(line: 2163, column: 19, scope: !16390)
!16407 = !DILocation(line: 2164, column: 3, scope: !16390)
!16408 = !DILocation(line: 2165, column: 7, scope: !16409)
!16409 = distinct !DILexicalBlock(scope: !16379, file: !3, line: 2165, column: 7)
!16410 = !DILocation(line: 2165, column: 14, scope: !16409)
!16411 = !DILocation(line: 2165, column: 7, scope: !16379)
!16412 = !DILocation(line: 2166, column: 11, scope: !16413)
!16413 = distinct !DILexicalBlock(scope: !16409, file: !3, line: 2165, column: 23)
!16414 = !DILocation(line: 2166, column: 31, scope: !16413)
!16415 = !DILocation(line: 2166, column: 35, scope: !16413)
!16416 = !DILocation(line: 2166, column: 29, scope: !16413)
!16417 = !DILocation(line: 2166, column: 9, scope: !16413)
!16418 = !DILocation(line: 2167, column: 23, scope: !16413)
!16419 = !DILocation(line: 2167, column: 27, scope: !16413)
!16420 = !DILocation(line: 2167, column: 33, scope: !16413)
!16421 = !DILocation(line: 2167, column: 38, scope: !16413)
!16422 = !DILocation(line: 2168, column: 8, scope: !16413)
!16423 = !DILocation(line: 2168, column: 15, scope: !16413)
!16424 = !DILocation(line: 2168, column: 24, scope: !16413)
!16425 = !DILocation(line: 2168, column: 31, scope: !16413)
!16426 = !DILocation(line: 2167, column: 4, scope: !16413)
!16427 = !DILocation(line: 2169, column: 4, scope: !16413)
!16428 = !DILocation(line: 2169, column: 11, scope: !16413)
!16429 = !DILocation(line: 2169, column: 19, scope: !16413)
!16430 = !DILocation(line: 2170, column: 3, scope: !16413)
!16431 = !DILocation(line: 2171, column: 2, scope: !16379)
!16432 = !DILocation(line: 2156, column: 54, scope: !16373)
!16433 = !DILocation(line: 2156, column: 59, scope: !16373)
!16434 = !DILocation(line: 2156, column: 2, scope: !16373)
!16435 = distinct !{!16435, !16377, !16436}
!16436 = !DILocation(line: 2171, column: 2, scope: !16367)
!16437 = !DILocation(line: 2172, column: 1, scope: !16353)
!16438 = distinct !DISubprogram(name: "pm_runtime_put_sync", scope: !11610, file: !11610, line: 448, type: !4205, scopeLine: 449, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!16439 = !DILocalVariable(name: "dev", arg: 1, scope: !16438, file: !11610, line: 448, type: !4172)
!16440 = !DILocation(line: 448, column: 54, scope: !16438)
!16441 = !DILocation(line: 450, column: 27, scope: !16438)
!16442 = !DILocation(line: 450, column: 9, scope: !16438)
!16443 = !DILocation(line: 450, column: 2, scope: !16438)
!16444 = distinct !DISubprogram(name: "dma_alloc_coherent", scope: !10847, file: !10847, line: 392, type: !16445, scopeLine: 394, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!16445 = !DISubroutineType(types: !16446)
!16446 = !{!570, !4172, !594, !16447, !1990}
!16447 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7084, size: 64)
!16448 = !DILocalVariable(name: "dev", arg: 1, scope: !16444, file: !10847, line: 392, type: !4172)
!16449 = !DILocation(line: 392, column: 55, scope: !16444)
!16450 = !DILocalVariable(name: "size", arg: 2, scope: !16444, file: !10847, line: 392, type: !594)
!16451 = !DILocation(line: 392, column: 67, scope: !16444)
!16452 = !DILocalVariable(name: "dma_handle", arg: 3, scope: !16444, file: !10847, line: 393, type: !16447)
!16453 = !DILocation(line: 393, column: 15, scope: !16444)
!16454 = !DILocalVariable(name: "gfp", arg: 4, scope: !16444, file: !10847, line: 393, type: !1990)
!16455 = !DILocation(line: 393, column: 33, scope: !16444)
!16456 = !DILocation(line: 396, column: 25, scope: !16444)
!16457 = !DILocation(line: 396, column: 30, scope: !16444)
!16458 = !DILocation(line: 396, column: 36, scope: !16444)
!16459 = !DILocation(line: 396, column: 48, scope: !16444)
!16460 = !DILocation(line: 397, column: 5, scope: !16444)
!16461 = !DILocation(line: 397, column: 9, scope: !16444)
!16462 = !DILocation(line: 397, column: 4, scope: !16444)
!16463 = !DILocation(line: 396, column: 9, scope: !16444)
!16464 = !DILocation(line: 396, column: 2, scope: !16444)
!16465 = distinct !DISubprogram(name: "get_order", scope: !16466, file: !16466, line: 29, type: !16467, scopeLine: 30, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!16466 = !DIFile(filename: "./include/asm-generic/getorder.h", directory: "/home/lizy2001/genbc/linux")
!16467 = !DISubroutineType(types: !16468)
!16468 = !{!37, !317}
!16469 = !DILocalVariable(name: "x", arg: 1, scope: !16470, file: !14344, line: 366, type: !338)
!16470 = distinct !DISubprogram(name: "fls64", scope: !14344, file: !14344, line: 366, type: !16471, scopeLine: 367, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!16471 = !DISubroutineType(types: !16472)
!16472 = !{!37, !338}
!16473 = !DILocation(line: 366, column: 40, scope: !16470, inlinedAt: !16474)
!16474 = distinct !DILocation(line: 46, column: 9, scope: !16465)
!16475 = !DILocalVariable(name: "bitpos", scope: !16470, file: !14344, line: 368, type: !37)
!16476 = !DILocation(line: 368, column: 6, scope: !16470, inlinedAt: !16474)
!16477 = !DILocalVariable(name: "size", arg: 1, scope: !16465, file: !16466, line: 29, type: !317)
!16478 = !DILocation(line: 29, column: 63, scope: !16465)
!16479 = !DILocation(line: 31, column: 27, scope: !16480)
!16480 = distinct !DILexicalBlock(scope: !16465, file: !16466, line: 31, column: 6)
!16481 = !DILocation(line: 31, column: 6, scope: !16480)
!16482 = !DILocation(line: 31, column: 6, scope: !16465)
!16483 = !DILocation(line: 32, column: 8, scope: !16484)
!16484 = distinct !DILexicalBlock(scope: !16485, file: !16466, line: 32, column: 7)
!16485 = distinct !DILexicalBlock(scope: !16480, file: !16466, line: 31, column: 34)
!16486 = !DILocation(line: 32, column: 7, scope: !16485)
!16487 = !DILocation(line: 33, column: 4, scope: !16484)
!16488 = !DILocation(line: 35, column: 7, scope: !16489)
!16489 = distinct !DILexicalBlock(scope: !16485, file: !16466, line: 35, column: 7)
!16490 = !DILocation(line: 35, column: 12, scope: !16489)
!16491 = !DILocation(line: 35, column: 7, scope: !16485)
!16492 = !DILocation(line: 36, column: 4, scope: !16489)
!16493 = !DILocation(line: 38, column: 10, scope: !16485)
!16494 = !DILocation(line: 38, column: 28, scope: !16485)
!16495 = !DILocation(line: 38, column: 41, scope: !16485)
!16496 = !DILocation(line: 38, column: 3, scope: !16485)
!16497 = !DILocation(line: 41, column: 6, scope: !16465)
!16498 = !DILocation(line: 42, column: 7, scope: !16465)
!16499 = !DILocation(line: 46, column: 15, scope: !16465)
!16500 = !DILocation(line: 374, column: 2, scope: !16470, inlinedAt: !16474)
!16501 = !DILocation(line: 376, column: 14, scope: !16470, inlinedAt: !16474)
!16502 = !{i32 405517}
!16503 = !DILocation(line: 377, column: 9, scope: !16470, inlinedAt: !16474)
!16504 = !DILocation(line: 377, column: 16, scope: !16470, inlinedAt: !16474)
!16505 = !DILocation(line: 46, column: 2, scope: !16465)
!16506 = !DILocation(line: 48, column: 1, scope: !16465)
!16507 = distinct !DISubprogram(name: "__ilog2_u64", scope: !16508, file: !16508, line: 30, type: !16509, scopeLine: 31, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!16508 = !DIFile(filename: "./include/linux/log2.h", directory: "/home/lizy2001/genbc/linux")
!16509 = !DISubroutineType(types: !16510)
!16510 = !{!37, !336}
!16511 = !DILocation(line: 366, column: 40, scope: !16470, inlinedAt: !16512)
!16512 = distinct !DILocation(line: 32, column: 9, scope: !16507)
!16513 = !DILocation(line: 368, column: 6, scope: !16470, inlinedAt: !16512)
!16514 = !DILocalVariable(name: "n", arg: 1, scope: !16507, file: !16508, line: 30, type: !336)
!16515 = !DILocation(line: 30, column: 21, scope: !16507)
!16516 = !DILocation(line: 32, column: 15, scope: !16507)
!16517 = !DILocation(line: 374, column: 2, scope: !16470, inlinedAt: !16512)
!16518 = !DILocation(line: 376, column: 14, scope: !16470, inlinedAt: !16512)
!16519 = !DILocation(line: 377, column: 9, scope: !16470, inlinedAt: !16512)
!16520 = !DILocation(line: 377, column: 16, scope: !16470, inlinedAt: !16512)
!16521 = !DILocation(line: 32, column: 18, scope: !16507)
!16522 = !DILocation(line: 32, column: 2, scope: !16507)
!16523 = distinct !DISubprogram(name: "kasan_kmalloc", scope: !16524, file: !16524, line: 137, type: !16525, scopeLine: 139, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!16524 = !DIFile(filename: "./include/linux/kasan.h", directory: "/home/lizy2001/genbc/linux")
!16525 = !DISubroutineType(types: !16526)
!16526 = !{!570, !2252, !2244, !594, !1990}
!16527 = !DILocalVariable(name: "s", arg: 1, scope: !16523, file: !16524, line: 137, type: !2252)
!16528 = !DILocation(line: 137, column: 54, scope: !16523)
!16529 = !DILocalVariable(name: "object", arg: 2, scope: !16523, file: !16524, line: 137, type: !2244)
!16530 = !DILocation(line: 137, column: 69, scope: !16523)
!16531 = !DILocalVariable(name: "size", arg: 3, scope: !16523, file: !16524, line: 138, type: !594)
!16532 = !DILocation(line: 138, column: 12, scope: !16523)
!16533 = !DILocalVariable(name: "flags", arg: 4, scope: !16523, file: !16524, line: 138, type: !1990)
!16534 = !DILocation(line: 138, column: 24, scope: !16523)
!16535 = !DILocation(line: 140, column: 17, scope: !16523)
!16536 = !DILocation(line: 140, column: 2, scope: !16523)
!16537 = distinct !DISubprogram(name: "macb_set_hwaddr", scope: !3, file: !3, line: 274, type: !10392, scopeLine: 275, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!16538 = !DILocalVariable(name: "bp", arg: 1, scope: !16537, file: !3, line: 274, type: !10238)
!16539 = !DILocation(line: 274, column: 42, scope: !16537)
!16540 = !DILocalVariable(name: "bottom", scope: !16537, file: !3, line: 276, type: !707)
!16541 = !DILocation(line: 276, column: 6, scope: !16537)
!16542 = !DILocalVariable(name: "top", scope: !16537, file: !3, line: 277, type: !1038)
!16543 = !DILocation(line: 277, column: 6, scope: !16537)
!16544 = !DILocation(line: 279, column: 11, scope: !16537)
!16545 = !DILocation(line: 279, column: 9, scope: !16537)
!16546 = !DILocation(line: 280, column: 2, scope: !16547)
!16547 = distinct !DILexicalBlock(scope: !16548, file: !3, line: 280, column: 2)
!16548 = distinct !DILexicalBlock(scope: !16537, file: !3, line: 280, column: 2)
!16549 = !DILocation(line: 280, column: 2, scope: !16548)
!16550 = !DILocation(line: 281, column: 8, scope: !16537)
!16551 = !DILocation(line: 281, column: 6, scope: !16537)
!16552 = !DILocation(line: 282, column: 2, scope: !16553)
!16553 = distinct !DILexicalBlock(scope: !16554, file: !3, line: 282, column: 2)
!16554 = distinct !DILexicalBlock(scope: !16537, file: !3, line: 282, column: 2)
!16555 = !DILocation(line: 282, column: 2, scope: !16554)
!16556 = !DILocation(line: 285, column: 2, scope: !16557)
!16557 = distinct !DILexicalBlock(scope: !16558, file: !3, line: 285, column: 2)
!16558 = distinct !DILexicalBlock(scope: !16537, file: !3, line: 285, column: 2)
!16559 = !DILocation(line: 285, column: 2, scope: !16558)
!16560 = !DILocation(line: 286, column: 2, scope: !16561)
!16561 = distinct !DILexicalBlock(scope: !16562, file: !3, line: 286, column: 2)
!16562 = distinct !DILexicalBlock(scope: !16537, file: !3, line: 286, column: 2)
!16563 = !DILocation(line: 286, column: 2, scope: !16562)
!16564 = !DILocation(line: 287, column: 2, scope: !16565)
!16565 = distinct !DILexicalBlock(scope: !16566, file: !3, line: 287, column: 2)
!16566 = distinct !DILexicalBlock(scope: !16537, file: !3, line: 287, column: 2)
!16567 = !DILocation(line: 287, column: 2, scope: !16566)
!16568 = !DILocation(line: 288, column: 2, scope: !16569)
!16569 = distinct !DILexicalBlock(scope: !16570, file: !3, line: 288, column: 2)
!16570 = distinct !DILexicalBlock(scope: !16537, file: !3, line: 288, column: 2)
!16571 = !DILocation(line: 288, column: 2, scope: !16570)
!16572 = !DILocation(line: 289, column: 2, scope: !16573)
!16573 = distinct !DILexicalBlock(scope: !16574, file: !3, line: 289, column: 2)
!16574 = distinct !DILexicalBlock(scope: !16537, file: !3, line: 289, column: 2)
!16575 = !DILocation(line: 289, column: 2, scope: !16574)
!16576 = !DILocation(line: 290, column: 2, scope: !16577)
!16577 = distinct !DILexicalBlock(scope: !16578, file: !3, line: 290, column: 2)
!16578 = distinct !DILexicalBlock(scope: !16537, file: !3, line: 290, column: 2)
!16579 = !DILocation(line: 290, column: 2, scope: !16578)
!16580 = !DILocation(line: 291, column: 1, scope: !16537)
!16581 = distinct !DISubprogram(name: "macb_configure_dma", scope: !3, file: !3, line: 2392, type: !10392, scopeLine: 2393, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!16582 = !DILocalVariable(name: "bp", arg: 1, scope: !16581, file: !3, line: 2392, type: !10238)
!16583 = !DILocation(line: 2392, column: 45, scope: !16581)
!16584 = !DILocalVariable(name: "queue", scope: !16581, file: !3, line: 2394, type: !10234)
!16585 = !DILocation(line: 2394, column: 21, scope: !16581)
!16586 = !DILocalVariable(name: "buffer_size", scope: !16581, file: !3, line: 2395, type: !707)
!16587 = !DILocation(line: 2395, column: 6, scope: !16581)
!16588 = !DILocalVariable(name: "q", scope: !16581, file: !3, line: 2396, type: !7)
!16589 = !DILocation(line: 2396, column: 15, scope: !16581)
!16590 = !DILocalVariable(name: "dmacfg", scope: !16581, file: !3, line: 2397, type: !707)
!16591 = !DILocation(line: 2397, column: 6, scope: !16581)
!16592 = !DILocation(line: 2399, column: 16, scope: !16581)
!16593 = !DILocation(line: 2399, column: 20, scope: !16581)
!16594 = !DILocation(line: 2399, column: 35, scope: !16581)
!16595 = !DILocation(line: 2399, column: 14, scope: !16581)
!16596 = !DILocation(line: 2400, column: 18, scope: !16597)
!16597 = distinct !DILexicalBlock(scope: !16581, file: !3, line: 2400, column: 6)
!16598 = !DILocation(line: 2400, column: 6, scope: !16597)
!16599 = !DILocation(line: 2400, column: 6, scope: !16581)
!16600 = !DILocation(line: 2401, column: 12, scope: !16601)
!16601 = distinct !DILexicalBlock(scope: !16597, file: !3, line: 2400, column: 23)
!16602 = !DILocation(line: 2401, column: 34, scope: !16601)
!16603 = !DILocation(line: 2401, column: 10, scope: !16601)
!16604 = !DILocation(line: 2402, column: 10, scope: !16605)
!16605 = distinct !DILexicalBlock(scope: !16601, file: !3, line: 2402, column: 3)
!16606 = !DILocation(line: 2402, column: 23, scope: !16605)
!16607 = !DILocation(line: 2402, column: 27, scope: !16605)
!16608 = !DILocation(line: 2402, column: 21, scope: !16605)
!16609 = !DILocation(line: 2402, column: 8, scope: !16605)
!16610 = !DILocation(line: 2402, column: 35, scope: !16611)
!16611 = distinct !DILexicalBlock(scope: !16605, file: !3, line: 2402, column: 3)
!16612 = !DILocation(line: 2402, column: 39, scope: !16611)
!16613 = !DILocation(line: 2402, column: 43, scope: !16611)
!16614 = !DILocation(line: 2402, column: 37, scope: !16611)
!16615 = !DILocation(line: 2402, column: 3, scope: !16605)
!16616 = !DILocation(line: 2403, column: 8, scope: !16617)
!16617 = distinct !DILexicalBlock(scope: !16618, file: !3, line: 2403, column: 8)
!16618 = distinct !DILexicalBlock(scope: !16611, file: !3, line: 2402, column: 69)
!16619 = !DILocation(line: 2403, column: 8, scope: !16618)
!16620 = !DILocation(line: 2404, column: 5, scope: !16617)
!16621 = !DILocation(line: 2406, column: 15, scope: !16617)
!16622 = !DILocation(line: 2406, column: 12, scope: !16617)
!16623 = !DILocation(line: 2407, column: 3, scope: !16618)
!16624 = !DILocation(line: 2402, column: 55, scope: !16611)
!16625 = !DILocation(line: 2402, column: 60, scope: !16611)
!16626 = !DILocation(line: 2402, column: 3, scope: !16611)
!16627 = distinct !{!16627, !16615, !16628}
!16628 = !DILocation(line: 2407, column: 3, scope: !16605)
!16629 = !DILocation(line: 2408, column: 7, scope: !16630)
!16630 = distinct !DILexicalBlock(scope: !16601, file: !3, line: 2408, column: 7)
!16631 = !DILocation(line: 2408, column: 11, scope: !16630)
!16632 = !DILocation(line: 2408, column: 7, scope: !16601)
!16633 = !DILocation(line: 2409, column: 13, scope: !16630)
!16634 = !DILocation(line: 2409, column: 11, scope: !16630)
!16635 = !DILocation(line: 2409, column: 4, scope: !16630)
!16636 = !DILocation(line: 2410, column: 10, scope: !16601)
!16637 = !DILocation(line: 2411, column: 10, scope: !16601)
!16638 = !DILocation(line: 2413, column: 7, scope: !16639)
!16639 = distinct !DILexicalBlock(scope: !16601, file: !3, line: 2413, column: 7)
!16640 = !DILocation(line: 2413, column: 11, scope: !16639)
!16641 = !DILocation(line: 2413, column: 7, scope: !16601)
!16642 = !DILocation(line: 2414, column: 11, scope: !16639)
!16643 = !DILocation(line: 2414, column: 4, scope: !16639)
!16644 = !DILocation(line: 2416, column: 11, scope: !16639)
!16645 = !DILocation(line: 2418, column: 7, scope: !16646)
!16646 = distinct !DILexicalBlock(scope: !16601, file: !3, line: 2418, column: 7)
!16647 = !DILocation(line: 2418, column: 11, scope: !16646)
!16648 = !DILocation(line: 2418, column: 16, scope: !16646)
!16649 = !DILocation(line: 2418, column: 25, scope: !16646)
!16650 = !DILocation(line: 2418, column: 7, scope: !16601)
!16651 = !DILocation(line: 2419, column: 11, scope: !16646)
!16652 = !DILocation(line: 2419, column: 4, scope: !16646)
!16653 = !DILocation(line: 2421, column: 11, scope: !16646)
!16654 = !DILocation(line: 2423, column: 10, scope: !16601)
!16655 = !DILocation(line: 2425, column: 7, scope: !16656)
!16656 = distinct !DILexicalBlock(scope: !16601, file: !3, line: 2425, column: 7)
!16657 = !DILocation(line: 2425, column: 11, scope: !16656)
!16658 = !DILocation(line: 2425, column: 22, scope: !16656)
!16659 = !DILocation(line: 2425, column: 7, scope: !16601)
!16660 = !DILocation(line: 2426, column: 11, scope: !16656)
!16661 = !DILocation(line: 2426, column: 4, scope: !16656)
!16662 = !DILocation(line: 2429, column: 7, scope: !16663)
!16663 = distinct !DILexicalBlock(scope: !16601, file: !3, line: 2429, column: 7)
!16664 = !DILocation(line: 2429, column: 11, scope: !16663)
!16665 = !DILocation(line: 2429, column: 22, scope: !16663)
!16666 = !DILocation(line: 2429, column: 7, scope: !16601)
!16667 = !DILocation(line: 2430, column: 11, scope: !16663)
!16668 = !DILocation(line: 2430, column: 4, scope: !16663)
!16669 = !DILocation(line: 2434, column: 3, scope: !16601)
!16670 = !DILocation(line: 2435, column: 2, scope: !16601)
!16671 = !DILocation(line: 2436, column: 1, scope: !16581)
!16672 = distinct !DISubprogram(name: "macb_phy_handle_exists", scope: !3, file: !3, line: 684, type: !16673, scopeLine: 685, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!16673 = !DISubroutineType(types: !16674)
!16674 = !{!540, !4476}
!16675 = !DILocalVariable(name: "dn", arg: 1, scope: !16672, file: !3, line: 684, type: !4476)
!16676 = !DILocation(line: 684, column: 56, scope: !16672)
!16677 = !DILocation(line: 686, column: 24, scope: !16672)
!16678 = !DILocation(line: 686, column: 7, scope: !16672)
!16679 = !DILocation(line: 686, column: 5, scope: !16672)
!16680 = !DILocation(line: 687, column: 14, scope: !16672)
!16681 = !DILocation(line: 687, column: 2, scope: !16672)
!16682 = !DILocation(line: 688, column: 9, scope: !16672)
!16683 = !DILocation(line: 688, column: 12, scope: !16672)
!16684 = !DILocation(line: 688, column: 2, scope: !16672)
!16685 = distinct !DISubprogram(name: "of_node_put", scope: !4478, file: !4478, line: 129, type: !16686, scopeLine: 129, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!16686 = !DISubroutineType(types: !16687)
!16687 = !{null, !4476}
!16688 = !DILocalVariable(name: "node", arg: 1, scope: !16685, file: !4478, line: 129, type: !4476)
!16689 = !DILocation(line: 129, column: 52, scope: !16685)
!16690 = !DILocation(line: 129, column: 60, scope: !16685)
!16691 = distinct !DISubprogram(name: "dma_free_coherent", scope: !10847, file: !10847, line: 400, type: !16692, scopeLine: 402, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!16692 = !DISubroutineType(types: !16693)
!16693 = !{null, !4172, !594, !570, !7084}
!16694 = !DILocalVariable(name: "dev", arg: 1, scope: !16691, file: !10847, line: 400, type: !4172)
!16695 = !DILocation(line: 400, column: 53, scope: !16691)
!16696 = !DILocalVariable(name: "size", arg: 2, scope: !16691, file: !10847, line: 400, type: !594)
!16697 = !DILocation(line: 400, column: 65, scope: !16691)
!16698 = !DILocalVariable(name: "cpu_addr", arg: 3, scope: !16691, file: !10847, line: 401, type: !570)
!16699 = !DILocation(line: 401, column: 9, scope: !16691)
!16700 = !DILocalVariable(name: "dma_handle", arg: 4, scope: !16691, file: !10847, line: 401, type: !7084)
!16701 = !DILocation(line: 401, column: 30, scope: !16691)
!16702 = !DILocation(line: 403, column: 24, scope: !16691)
!16703 = !DILocation(line: 403, column: 29, scope: !16691)
!16704 = !DILocation(line: 403, column: 35, scope: !16691)
!16705 = !DILocation(line: 403, column: 45, scope: !16691)
!16706 = !DILocation(line: 403, column: 9, scope: !16691)
!16707 = !DILocation(line: 403, column: 2, scope: !16691)
!16708 = distinct !DISubprogram(name: "pm_runtime_put", scope: !11610, file: !11610, line: 417, type: !4205, scopeLine: 418, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!16709 = !DILocalVariable(name: "dev", arg: 1, scope: !16708, file: !11610, line: 417, type: !4172)
!16710 = !DILocation(line: 417, column: 49, scope: !16708)
!16711 = !DILocation(line: 419, column: 27, scope: !16708)
!16712 = !DILocation(line: 419, column: 9, scope: !16708)
!16713 = !DILocation(line: 419, column: 2, scope: !16708)
!16714 = distinct !DISubprogram(name: "skb_get_queue_mapping", scope: !422, file: !422, line: 4339, type: !16715, scopeLine: 4340, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!16715 = !DISubroutineType(types: !16716)
!16716 = !{!1038, !8807}
!16717 = !DILocalVariable(name: "skb", arg: 1, scope: !16714, file: !422, line: 4339, type: !8807)
!16718 = !DILocation(line: 4339, column: 63, scope: !16714)
!16719 = !DILocation(line: 4341, column: 9, scope: !16714)
!16720 = !DILocation(line: 4341, column: 14, scope: !16714)
!16721 = !DILocation(line: 4341, column: 2, scope: !16714)
!16722 = distinct !DISubprogram(name: "macb_clear_csum", scope: !3, file: !3, line: 1912, type: !2605, scopeLine: 1913, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!16723 = !DILocalVariable(name: "skb", arg: 1, scope: !16722, file: !3, line: 1912, type: !420)
!16724 = !DILocation(line: 1912, column: 51, scope: !16722)
!16725 = !DILocation(line: 1915, column: 6, scope: !16726)
!16726 = distinct !DILexicalBlock(scope: !16722, file: !3, line: 1915, column: 6)
!16727 = !DILocation(line: 1915, column: 11, scope: !16726)
!16728 = !DILocation(line: 1915, column: 21, scope: !16726)
!16729 = !DILocation(line: 1915, column: 6, scope: !16722)
!16730 = !DILocation(line: 1916, column: 3, scope: !16726)
!16731 = !DILocation(line: 1919, column: 6, scope: !16732)
!16732 = distinct !DILexicalBlock(scope: !16722, file: !3, line: 1919, column: 6)
!16733 = !DILocation(line: 1919, column: 6, scope: !16722)
!16734 = !DILocation(line: 1920, column: 3, scope: !16732)
!16735 = !DILocation(line: 1926, column: 34, scope: !16722)
!16736 = !DILocation(line: 1926, column: 15, scope: !16722)
!16737 = !DILocation(line: 1926, column: 41, scope: !16722)
!16738 = !DILocation(line: 1926, column: 46, scope: !16722)
!16739 = !DILocation(line: 1926, column: 39, scope: !16722)
!16740 = !DILocation(line: 1926, column: 2, scope: !16722)
!16741 = !DILocation(line: 1926, column: 59, scope: !16722)
!16742 = !DILocation(line: 1927, column: 2, scope: !16722)
!16743 = !DILocation(line: 1928, column: 1, scope: !16722)
!16744 = distinct !DISubprogram(name: "macb_pad_and_fcs", scope: !3, file: !3, line: 1930, type: !16745, scopeLine: 1931, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!16745 = !DISubroutineType(types: !16746)
!16746 = !{!37, !8903, !295}
!16747 = !DILocalVariable(name: "skb", arg: 1, scope: !16744, file: !3, line: 1930, type: !8903)
!16748 = !DILocation(line: 1930, column: 46, scope: !16744)
!16749 = !DILocalVariable(name: "ndev", arg: 2, scope: !16744, file: !3, line: 1930, type: !295)
!16750 = !DILocation(line: 1930, column: 70, scope: !16744)
!16751 = !DILocalVariable(name: "cloned", scope: !16744, file: !3, line: 1932, type: !540)
!16752 = !DILocation(line: 1932, column: 7, scope: !16744)
!16753 = !DILocation(line: 1932, column: 28, scope: !16744)
!16754 = !DILocation(line: 1932, column: 27, scope: !16744)
!16755 = !DILocation(line: 1932, column: 16, scope: !16744)
!16756 = !DILocation(line: 1932, column: 33, scope: !16744)
!16757 = !DILocation(line: 1932, column: 55, scope: !16744)
!16758 = !DILocation(line: 1932, column: 54, scope: !16744)
!16759 = !DILocation(line: 1932, column: 36, scope: !16744)
!16760 = !DILocation(line: 1932, column: 60, scope: !16744)
!16761 = !DILocation(line: 1933, column: 27, scope: !16744)
!16762 = !DILocation(line: 1933, column: 26, scope: !16744)
!16763 = !DILocation(line: 1933, column: 9, scope: !16744)
!16764 = !DILocalVariable(name: "padlen", scope: !16744, file: !3, line: 1934, type: !37)
!16765 = !DILocation(line: 1934, column: 6, scope: !16744)
!16766 = !DILocation(line: 1934, column: 28, scope: !16744)
!16767 = !DILocation(line: 1934, column: 27, scope: !16744)
!16768 = !DILocation(line: 1934, column: 34, scope: !16744)
!16769 = !DILocation(line: 1934, column: 24, scope: !16744)
!16770 = !DILocalVariable(name: "headroom", scope: !16744, file: !3, line: 1935, type: !37)
!16771 = !DILocation(line: 1935, column: 6, scope: !16744)
!16772 = !DILocation(line: 1935, column: 31, scope: !16744)
!16773 = !DILocation(line: 1935, column: 30, scope: !16744)
!16774 = !DILocation(line: 1935, column: 17, scope: !16744)
!16775 = !DILocalVariable(name: "tailroom", scope: !16744, file: !3, line: 1936, type: !37)
!16776 = !DILocation(line: 1936, column: 6, scope: !16744)
!16777 = !DILocation(line: 1936, column: 31, scope: !16744)
!16778 = !DILocation(line: 1936, column: 30, scope: !16744)
!16779 = !DILocation(line: 1936, column: 17, scope: !16744)
!16780 = !DILocalVariable(name: "nskb", scope: !16744, file: !3, line: 1937, type: !420)
!16781 = !DILocation(line: 1937, column: 18, scope: !16744)
!16782 = !DILocalVariable(name: "fcs", scope: !16744, file: !3, line: 1938, type: !707)
!16783 = !DILocation(line: 1938, column: 6, scope: !16744)
!16784 = !DILocation(line: 1940, column: 8, scope: !16785)
!16785 = distinct !DILexicalBlock(scope: !16744, file: !3, line: 1940, column: 6)
!16786 = !DILocation(line: 1940, column: 14, scope: !16785)
!16787 = !DILocation(line: 1940, column: 23, scope: !16785)
!16788 = !DILocation(line: 1940, column: 42, scope: !16785)
!16789 = !DILocation(line: 1941, column: 10, scope: !16785)
!16790 = !DILocation(line: 1941, column: 9, scope: !16785)
!16791 = !DILocation(line: 1941, column: 16, scope: !16785)
!16792 = !DILocation(line: 1941, column: 8, scope: !16785)
!16793 = !DILocation(line: 1941, column: 26, scope: !16785)
!16794 = !DILocation(line: 1941, column: 47, scope: !16785)
!16795 = !DILocation(line: 1942, column: 6, scope: !16785)
!16796 = !DILocation(line: 1942, column: 24, scope: !16785)
!16797 = !DILocation(line: 1940, column: 6, scope: !16744)
!16798 = !DILocation(line: 1943, column: 3, scope: !16785)
!16799 = !DILocation(line: 1945, column: 6, scope: !16800)
!16800 = distinct !DILexicalBlock(scope: !16744, file: !3, line: 1945, column: 6)
!16801 = !DILocation(line: 1945, column: 13, scope: !16800)
!16802 = !DILocation(line: 1945, column: 6, scope: !16744)
!16803 = !DILocation(line: 1947, column: 7, scope: !16804)
!16804 = distinct !DILexicalBlock(scope: !16805, file: !3, line: 1947, column: 7)
!16805 = distinct !DILexicalBlock(scope: !16800, file: !3, line: 1945, column: 19)
!16806 = !DILocation(line: 1947, column: 16, scope: !16804)
!16807 = !DILocation(line: 1947, column: 7, scope: !16805)
!16808 = !DILocation(line: 1948, column: 4, scope: !16804)
!16809 = !DILocation(line: 1950, column: 13, scope: !16810)
!16810 = distinct !DILexicalBlock(scope: !16804, file: !3, line: 1950, column: 12)
!16811 = !DILocation(line: 1950, column: 20, scope: !16810)
!16812 = !DILocation(line: 1950, column: 23, scope: !16810)
!16813 = !DILocation(line: 1950, column: 34, scope: !16810)
!16814 = !DILocation(line: 1950, column: 32, scope: !16810)
!16815 = !DILocation(line: 1950, column: 43, scope: !16810)
!16816 = !DILocation(line: 1950, column: 12, scope: !16804)
!16817 = !DILocation(line: 1951, column: 11, scope: !16810)
!16818 = !DILocation(line: 1951, column: 4, scope: !16810)
!16819 = !DILocation(line: 1954, column: 11, scope: !16810)
!16820 = !DILocation(line: 1955, column: 2, scope: !16805)
!16821 = !DILocation(line: 1957, column: 10, scope: !16822)
!16822 = distinct !DILexicalBlock(scope: !16800, file: !3, line: 1955, column: 9)
!16823 = !DILocation(line: 1960, column: 7, scope: !16824)
!16824 = distinct !DILexicalBlock(scope: !16744, file: !3, line: 1960, column: 6)
!16825 = !DILocation(line: 1960, column: 14, scope: !16824)
!16826 = !DILocation(line: 1960, column: 17, scope: !16824)
!16827 = !DILocation(line: 1960, column: 28, scope: !16824)
!16828 = !DILocation(line: 1960, column: 26, scope: !16824)
!16829 = !DILocation(line: 1960, column: 40, scope: !16824)
!16830 = !DILocation(line: 1960, column: 37, scope: !16824)
!16831 = !DILocation(line: 1960, column: 6, scope: !16744)
!16832 = !DILocation(line: 1961, column: 28, scope: !16833)
!16833 = distinct !DILexicalBlock(scope: !16824, file: !3, line: 1960, column: 48)
!16834 = !DILocation(line: 1961, column: 27, scope: !16833)
!16835 = !DILocation(line: 1961, column: 34, scope: !16833)
!16836 = !DILocation(line: 1961, column: 42, scope: !16833)
!16837 = !DILocation(line: 1961, column: 41, scope: !16833)
!16838 = !DILocation(line: 1961, column: 48, scope: !16833)
!16839 = !DILocation(line: 1961, column: 56, scope: !16833)
!16840 = !DILocation(line: 1961, column: 55, scope: !16833)
!16841 = !DILocation(line: 1961, column: 62, scope: !16833)
!16842 = !DILocation(line: 1961, column: 54, scope: !16833)
!16843 = !DILocation(line: 1961, column: 18, scope: !16833)
!16844 = !DILocation(line: 1961, column: 5, scope: !16833)
!16845 = !DILocation(line: 1961, column: 4, scope: !16833)
!16846 = !DILocation(line: 1961, column: 11, scope: !16833)
!16847 = !DILocation(line: 1961, column: 16, scope: !16833)
!16848 = !DILocation(line: 1962, column: 25, scope: !16833)
!16849 = !DILocation(line: 1962, column: 24, scope: !16833)
!16850 = !DILocation(line: 1962, column: 32, scope: !16833)
!16851 = !DILocation(line: 1962, column: 31, scope: !16833)
!16852 = !DILocation(line: 1962, column: 38, scope: !16833)
!16853 = !DILocation(line: 1962, column: 3, scope: !16833)
!16854 = !DILocation(line: 1963, column: 2, scope: !16833)
!16855 = !DILocation(line: 1964, column: 27, scope: !16856)
!16856 = distinct !DILexicalBlock(scope: !16824, file: !3, line: 1963, column: 9)
!16857 = !DILocation(line: 1964, column: 26, scope: !16856)
!16858 = !DILocation(line: 1964, column: 35, scope: !16856)
!16859 = !DILocation(line: 1964, column: 10, scope: !16856)
!16860 = !DILocation(line: 1964, column: 8, scope: !16856)
!16861 = !DILocation(line: 1965, column: 8, scope: !16862)
!16862 = distinct !DILexicalBlock(scope: !16856, file: !3, line: 1965, column: 7)
!16863 = !DILocation(line: 1965, column: 7, scope: !16856)
!16864 = !DILocation(line: 1966, column: 4, scope: !16862)
!16865 = !DILocation(line: 1968, column: 24, scope: !16856)
!16866 = !DILocation(line: 1968, column: 23, scope: !16856)
!16867 = !DILocation(line: 1968, column: 3, scope: !16856)
!16868 = !DILocation(line: 1969, column: 10, scope: !16856)
!16869 = !DILocation(line: 1969, column: 4, scope: !16856)
!16870 = !DILocation(line: 1969, column: 8, scope: !16856)
!16871 = !DILocation(line: 1972, column: 6, scope: !16872)
!16872 = distinct !DILexicalBlock(scope: !16744, file: !3, line: 1972, column: 6)
!16873 = !DILocation(line: 1972, column: 13, scope: !16872)
!16874 = !DILocation(line: 1972, column: 6, scope: !16744)
!16875 = !DILocation(line: 1973, column: 17, scope: !16872)
!16876 = !DILocation(line: 1973, column: 16, scope: !16872)
!16877 = !DILocation(line: 1973, column: 22, scope: !16872)
!16878 = !DILocation(line: 1973, column: 29, scope: !16872)
!16879 = !DILocation(line: 1973, column: 3, scope: !16872)
!16880 = !DILocation(line: 1972, column: 15, scope: !16872)
!16881 = !DILabel(scope: !16744, name: "add_fcs", file: !3, line: 1975)
!16882 = !DILocation(line: 1975, column: 1, scope: !16744)
!16883 = !DILocation(line: 1977, column: 23, scope: !16744)
!16884 = !DILocation(line: 1977, column: 22, scope: !16744)
!16885 = !DILocation(line: 1977, column: 29, scope: !16744)
!16886 = !DILocation(line: 1977, column: 37, scope: !16744)
!16887 = !DILocation(line: 1977, column: 36, scope: !16744)
!16888 = !DILocation(line: 1977, column: 43, scope: !16744)
!16889 = !DILocation(line: 1977, column: 35, scope: !16744)
!16890 = !DILocation(line: 1977, column: 8, scope: !16744)
!16891 = !DILocation(line: 1977, column: 6, scope: !16744)
!16892 = !DILocation(line: 1978, column: 9, scope: !16744)
!16893 = !DILocation(line: 1978, column: 8, scope: !16744)
!16894 = !DILocation(line: 1978, column: 6, scope: !16744)
!16895 = !DILocation(line: 1980, column: 14, scope: !16744)
!16896 = !DILocation(line: 1980, column: 13, scope: !16744)
!16897 = !DILocation(line: 1980, column: 19, scope: !16744)
!16898 = !DILocation(line: 1980, column: 24, scope: !16744)
!16899 = !DILocation(line: 1980, column: 2, scope: !16744)
!16900 = !DILocation(line: 1981, column: 14, scope: !16744)
!16901 = !DILocation(line: 1981, column: 13, scope: !16744)
!16902 = !DILocation(line: 1981, column: 20, scope: !16744)
!16903 = !DILocation(line: 1981, column: 24, scope: !16744)
!16904 = !DILocation(line: 1981, column: 30, scope: !16744)
!16905 = !DILocation(line: 1981, column: 19, scope: !16744)
!16906 = !DILocation(line: 1981, column: 2, scope: !16744)
!16907 = !DILocation(line: 1982, column: 14, scope: !16744)
!16908 = !DILocation(line: 1982, column: 13, scope: !16744)
!16909 = !DILocation(line: 1982, column: 20, scope: !16744)
!16910 = !DILocation(line: 1982, column: 24, scope: !16744)
!16911 = !DILocation(line: 1982, column: 31, scope: !16744)
!16912 = !DILocation(line: 1982, column: 19, scope: !16744)
!16913 = !DILocation(line: 1982, column: 2, scope: !16744)
!16914 = !DILocation(line: 1983, column: 14, scope: !16744)
!16915 = !DILocation(line: 1983, column: 13, scope: !16744)
!16916 = !DILocation(line: 1983, column: 20, scope: !16744)
!16917 = !DILocation(line: 1983, column: 24, scope: !16744)
!16918 = !DILocation(line: 1983, column: 31, scope: !16744)
!16919 = !DILocation(line: 1983, column: 19, scope: !16744)
!16920 = !DILocation(line: 1983, column: 2, scope: !16744)
!16921 = !DILocation(line: 1985, column: 2, scope: !16744)
!16922 = !DILocation(line: 1986, column: 1, scope: !16744)
!16923 = distinct !DISubprogram(name: "ip_hdr", scope: !16924, file: !16924, line: 19, type: !16925, scopeLine: 20, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!16924 = !DIFile(filename: "./include/linux/ip.h", directory: "/home/lizy2001/genbc/linux")
!16925 = !DISubroutineType(types: !16926)
!16926 = !{!10720, !8807}
!16927 = !DILocalVariable(name: "skb", arg: 1, scope: !16923, file: !16924, line: 19, type: !8807)
!16928 = !DILocation(line: 19, column: 58, scope: !16923)
!16929 = !DILocation(line: 21, column: 44, scope: !16923)
!16930 = !DILocation(line: 21, column: 25, scope: !16923)
!16931 = !DILocation(line: 21, column: 9, scope: !16923)
!16932 = !DILocation(line: 21, column: 2, scope: !16923)
!16933 = distinct !DISubprogram(name: "skb_transport_offset", scope: !422, file: !422, line: 2604, type: !16934, scopeLine: 2605, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!16934 = !DISubroutineType(types: !16935)
!16935 = !{!37, !8807}
!16936 = !DILocalVariable(name: "skb", arg: 1, scope: !16933, file: !422, line: 2604, type: !8807)
!16937 = !DILocation(line: 2604, column: 62, scope: !16933)
!16938 = !DILocation(line: 2606, column: 30, scope: !16933)
!16939 = !DILocation(line: 2606, column: 9, scope: !16933)
!16940 = !DILocation(line: 2606, column: 37, scope: !16933)
!16941 = !DILocation(line: 2606, column: 42, scope: !16933)
!16942 = !DILocation(line: 2606, column: 35, scope: !16933)
!16943 = !DILocation(line: 2606, column: 2, scope: !16933)
!16944 = distinct !DISubprogram(name: "tcp_hdrlen", scope: !16945, file: !16945, line: 34, type: !16946, scopeLine: 35, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!16945 = !DIFile(filename: "./include/linux/tcp.h", directory: "/home/lizy2001/genbc/linux")
!16946 = !DISubroutineType(types: !16947)
!16947 = !{!7, !8807}
!16948 = !DILocalVariable(name: "skb", arg: 1, scope: !16944, file: !16945, line: 34, type: !8807)
!16949 = !DILocation(line: 34, column: 61, scope: !16944)
!16950 = !DILocation(line: 36, column: 30, scope: !16944)
!16951 = !DILocation(line: 36, column: 22, scope: !16944)
!16952 = !DILocation(line: 36, column: 9, scope: !16944)
!16953 = !DILocation(line: 36, column: 2, scope: !16944)
!16954 = distinct !DISubprogram(name: "skb_headlen", scope: !422, file: !422, line: 2110, type: !16946, scopeLine: 2111, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!16955 = !DILocalVariable(name: "skb", arg: 1, scope: !16954, file: !422, line: 2110, type: !8807)
!16956 = !DILocation(line: 2110, column: 62, scope: !16954)
!16957 = !DILocation(line: 2112, column: 9, scope: !16954)
!16958 = !DILocation(line: 2112, column: 14, scope: !16954)
!16959 = !DILocation(line: 2112, column: 20, scope: !16954)
!16960 = !DILocation(line: 2112, column: 25, scope: !16954)
!16961 = !DILocation(line: 2112, column: 18, scope: !16954)
!16962 = !DILocation(line: 2112, column: 2, scope: !16954)
!16963 = distinct !DISubprogram(name: "skb_frag_size", scope: !422, file: !422, line: 327, type: !16964, scopeLine: 328, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!16964 = !DISubroutineType(types: !16965)
!16965 = !{!7, !15400}
!16966 = !DILocalVariable(name: "frag", arg: 1, scope: !16963, file: !422, line: 327, type: !15400)
!16967 = !DILocation(line: 327, column: 60, scope: !16963)
!16968 = !DILocation(line: 329, column: 9, scope: !16963)
!16969 = !DILocation(line: 329, column: 15, scope: !16963)
!16970 = !DILocation(line: 329, column: 2, scope: !16963)
!16971 = distinct !DISubprogram(name: "netif_stop_subqueue", scope: !36, file: !36, line: 3589, type: !14540, scopeLine: 3590, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!16972 = !DILocalVariable(name: "dev_queue", arg: 1, scope: !16973, file: !36, line: 3324, type: !8906)
!16973 = distinct !DISubprogram(name: "netif_tx_stop_queue", scope: !36, file: !36, line: 3324, type: !14777, scopeLine: 3325, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!16974 = !DILocation(line: 3324, column: 70, scope: !16973, inlinedAt: !16975)
!16975 = distinct !DILocation(line: 3592, column: 2, scope: !16971)
!16976 = !DILocalVariable(name: "dev", arg: 1, scope: !16971, file: !36, line: 3589, type: !295)
!16977 = !DILocation(line: 3589, column: 59, scope: !16971)
!16978 = !DILocalVariable(name: "queue_index", arg: 2, scope: !16971, file: !36, line: 3589, type: !1038)
!16979 = !DILocation(line: 3589, column: 68, scope: !16971)
!16980 = !DILocalVariable(name: "txq", scope: !16971, file: !36, line: 3591, type: !8906)
!16981 = !DILocation(line: 3591, column: 23, scope: !16971)
!16982 = !DILocation(line: 3591, column: 49, scope: !16971)
!16983 = !DILocation(line: 3591, column: 54, scope: !16971)
!16984 = !DILocation(line: 3591, column: 29, scope: !16971)
!16985 = !DILocation(line: 3592, column: 22, scope: !16971)
!16986 = !DILocation(line: 3326, column: 35, scope: !16973, inlinedAt: !16975)
!16987 = !DILocation(line: 3326, column: 46, scope: !16973, inlinedAt: !16975)
!16988 = !DILocation(line: 3326, column: 2, scope: !16973, inlinedAt: !16975)
!16989 = !DILocation(line: 3593, column: 1, scope: !16971)
!16990 = distinct !DISubprogram(name: "macb_tx_map", scope: !3, file: !3, line: 1704, type: !16991, scopeLine: 1708, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!16991 = !DISubroutineType(types: !16992)
!16992 = !{!7, !10238, !10234, !420, !7}
!16993 = !DILocalVariable(name: "bp", arg: 1, scope: !16990, file: !3, line: 1704, type: !10238)
!16994 = !DILocation(line: 1704, column: 46, scope: !16990)
!16995 = !DILocalVariable(name: "queue", arg: 2, scope: !16990, file: !3, line: 1705, type: !10234)
!16996 = !DILocation(line: 1705, column: 24, scope: !16990)
!16997 = !DILocalVariable(name: "skb", arg: 3, scope: !16990, file: !3, line: 1706, type: !420)
!16998 = !DILocation(line: 1706, column: 21, scope: !16990)
!16999 = !DILocalVariable(name: "hdrlen", arg: 4, scope: !16990, file: !3, line: 1707, type: !7)
!17000 = !DILocation(line: 1707, column: 18, scope: !16990)
!17001 = !DILocalVariable(name: "mapping", scope: !16990, file: !3, line: 1709, type: !7084)
!17002 = !DILocation(line: 1709, column: 13, scope: !16990)
!17003 = !DILocalVariable(name: "len", scope: !16990, file: !3, line: 1710, type: !7)
!17004 = !DILocation(line: 1710, column: 15, scope: !16990)
!17005 = !DILocalVariable(name: "entry", scope: !16990, file: !3, line: 1710, type: !7)
!17006 = !DILocation(line: 1710, column: 20, scope: !16990)
!17007 = !DILocalVariable(name: "i", scope: !16990, file: !3, line: 1710, type: !7)
!17008 = !DILocation(line: 1710, column: 27, scope: !16990)
!17009 = !DILocalVariable(name: "tx_head", scope: !16990, file: !3, line: 1710, type: !7)
!17010 = !DILocation(line: 1710, column: 30, scope: !16990)
!17011 = !DILocation(line: 1710, column: 40, scope: !16990)
!17012 = !DILocation(line: 1710, column: 47, scope: !16990)
!17013 = !DILocalVariable(name: "tx_skb", scope: !16990, file: !3, line: 1711, type: !10642)
!17014 = !DILocation(line: 1711, column: 22, scope: !16990)
!17015 = !DILocalVariable(name: "desc", scope: !16990, file: !3, line: 1712, type: !10636)
!17016 = !DILocation(line: 1712, column: 24, scope: !16990)
!17017 = !DILocalVariable(name: "offset", scope: !16990, file: !3, line: 1713, type: !7)
!17018 = !DILocation(line: 1713, column: 15, scope: !16990)
!17019 = !DILocalVariable(name: "size", scope: !16990, file: !3, line: 1713, type: !7)
!17020 = !DILocation(line: 1713, column: 23, scope: !16990)
!17021 = !DILocalVariable(name: "count", scope: !16990, file: !3, line: 1713, type: !7)
!17022 = !DILocation(line: 1713, column: 29, scope: !16990)
!17023 = !DILocalVariable(name: "f", scope: !16990, file: !3, line: 1714, type: !7)
!17024 = !DILocation(line: 1714, column: 15, scope: !16990)
!17025 = !DILocalVariable(name: "nr_frags", scope: !16990, file: !3, line: 1714, type: !7)
!17026 = !DILocation(line: 1714, column: 18, scope: !16990)
!17027 = !DILocation(line: 1714, column: 29, scope: !16990)
!17028 = !DILocation(line: 1714, column: 46, scope: !16990)
!17029 = !DILocalVariable(name: "eof", scope: !16990, file: !3, line: 1715, type: !7)
!17030 = !DILocation(line: 1715, column: 15, scope: !16990)
!17031 = !DILocalVariable(name: "mss_mfs", scope: !16990, file: !3, line: 1715, type: !7)
!17032 = !DILocation(line: 1715, column: 24, scope: !16990)
!17033 = !DILocalVariable(name: "ctrl", scope: !16990, file: !3, line: 1716, type: !707)
!17034 = !DILocation(line: 1716, column: 6, scope: !16990)
!17035 = !DILocalVariable(name: "lso_ctrl", scope: !16990, file: !3, line: 1716, type: !707)
!17036 = !DILocation(line: 1716, column: 12, scope: !16990)
!17037 = !DILocalVariable(name: "seq_ctrl", scope: !16990, file: !3, line: 1716, type: !707)
!17038 = !DILocation(line: 1716, column: 26, scope: !16990)
!17039 = !DILocation(line: 1719, column: 6, scope: !17040)
!17040 = distinct !DILexicalBlock(scope: !16990, file: !3, line: 1719, column: 6)
!17041 = !DILocation(line: 1719, column: 23, scope: !17040)
!17042 = !DILocation(line: 1719, column: 32, scope: !17040)
!17043 = !DILocation(line: 1719, column: 6, scope: !16990)
!17044 = !DILocation(line: 1720, column: 14, scope: !17045)
!17045 = distinct !DILexicalBlock(scope: !17046, file: !3, line: 1720, column: 7)
!17046 = distinct !DILexicalBlock(scope: !17040, file: !3, line: 1719, column: 38)
!17047 = !DILocation(line: 1720, column: 7, scope: !17045)
!17048 = !DILocation(line: 1720, column: 20, scope: !17045)
!17049 = !DILocation(line: 1720, column: 29, scope: !17045)
!17050 = !DILocation(line: 1720, column: 7, scope: !17046)
!17051 = !DILocation(line: 1722, column: 13, scope: !17045)
!17052 = !DILocation(line: 1722, column: 4, scope: !17045)
!17053 = !DILocation(line: 1725, column: 13, scope: !17045)
!17054 = !DILocation(line: 1726, column: 2, scope: !17046)
!17055 = !DILocation(line: 1729, column: 20, scope: !16990)
!17056 = !DILocation(line: 1729, column: 8, scope: !16990)
!17057 = !DILocation(line: 1729, column: 6, scope: !16990)
!17058 = !DILocation(line: 1732, column: 9, scope: !16990)
!17059 = !DILocation(line: 1732, column: 7, scope: !16990)
!17060 = !DILocation(line: 1734, column: 9, scope: !16990)
!17061 = !DILocation(line: 1735, column: 2, scope: !16990)
!17062 = !DILocation(line: 1735, column: 9, scope: !16990)
!17063 = !DILocation(line: 1736, column: 29, scope: !17064)
!17064 = distinct !DILexicalBlock(scope: !16990, file: !3, line: 1735, column: 14)
!17065 = !DILocation(line: 1736, column: 33, scope: !17064)
!17066 = !DILocation(line: 1736, column: 11, scope: !17064)
!17067 = !DILocation(line: 1736, column: 9, scope: !17064)
!17068 = !DILocation(line: 1737, column: 13, scope: !17064)
!17069 = !DILocation(line: 1737, column: 20, scope: !17064)
!17070 = !DILocation(line: 1737, column: 27, scope: !17064)
!17071 = !DILocation(line: 1737, column: 10, scope: !17064)
!17072 = !DILocation(line: 1739, column: 13, scope: !17064)
!17073 = !DILocation(line: 1739, column: 11, scope: !17064)
!17074 = !DILocation(line: 1742, column: 26, scope: !17075)
!17075 = distinct !DILexicalBlock(scope: !17064, file: !3, line: 1742, column: 7)
!17076 = !DILocation(line: 1742, column: 30, scope: !17075)
!17077 = !DILocation(line: 1742, column: 36, scope: !17075)
!17078 = !DILocation(line: 1742, column: 41, scope: !17075)
!17079 = !DILocation(line: 1742, column: 7, scope: !17075)
!17080 = !DILocation(line: 1742, column: 7, scope: !17064)
!17081 = !DILocation(line: 1743, column: 4, scope: !17075)
!17082 = !DILocation(line: 1746, column: 3, scope: !17064)
!17083 = !DILocation(line: 1746, column: 11, scope: !17064)
!17084 = !DILocation(line: 1746, column: 15, scope: !17064)
!17085 = !DILocation(line: 1747, column: 21, scope: !17064)
!17086 = !DILocation(line: 1747, column: 3, scope: !17064)
!17087 = !DILocation(line: 1747, column: 11, scope: !17064)
!17088 = !DILocation(line: 1747, column: 19, scope: !17064)
!17089 = !DILocation(line: 1748, column: 18, scope: !17064)
!17090 = !DILocation(line: 1748, column: 3, scope: !17064)
!17091 = !DILocation(line: 1748, column: 11, scope: !17064)
!17092 = !DILocation(line: 1748, column: 16, scope: !17064)
!17093 = !DILocation(line: 1749, column: 3, scope: !17064)
!17094 = !DILocation(line: 1749, column: 11, scope: !17064)
!17095 = !DILocation(line: 1749, column: 26, scope: !17064)
!17096 = !DILocation(line: 1751, column: 10, scope: !17064)
!17097 = !DILocation(line: 1751, column: 7, scope: !17064)
!17098 = !DILocation(line: 1752, column: 13, scope: !17064)
!17099 = !DILocation(line: 1752, column: 10, scope: !17064)
!17100 = !DILocation(line: 1753, column: 8, scope: !17064)
!17101 = !DILocation(line: 1754, column: 10, scope: !17064)
!17102 = !DILocalVariable(name: "__UNIQUE_ID___x530", scope: !17103, file: !3, line: 1756, type: !7)
!17103 = distinct !DILexicalBlock(scope: !17064, file: !3, line: 1756, column: 10)
!17104 = !DILocation(line: 1756, column: 10, scope: !17103)
!17105 = !DILocalVariable(name: "__UNIQUE_ID___y531", scope: !17103, file: !3, line: 1756, type: !7)
!17106 = !DILocation(line: 1756, column: 8, scope: !17064)
!17107 = distinct !{!17107, !17061, !17108}
!17108 = !DILocation(line: 1757, column: 2, scope: !16990)
!17109 = !DILocation(line: 1760, column: 9, scope: !17110)
!17110 = distinct !DILexicalBlock(scope: !16990, file: !3, line: 1760, column: 2)
!17111 = !DILocation(line: 1760, column: 7, scope: !17110)
!17112 = !DILocation(line: 1760, column: 14, scope: !17113)
!17113 = distinct !DILexicalBlock(scope: !17110, file: !3, line: 1760, column: 2)
!17114 = !DILocation(line: 1760, column: 18, scope: !17113)
!17115 = !DILocation(line: 1760, column: 16, scope: !17113)
!17116 = !DILocation(line: 1760, column: 2, scope: !17110)
!17117 = !DILocalVariable(name: "frag", scope: !17118, file: !3, line: 1761, type: !15400)
!17118 = distinct !DILexicalBlock(scope: !17113, file: !3, line: 1760, column: 33)
!17119 = !DILocation(line: 1761, column: 21, scope: !17118)
!17120 = !DILocation(line: 1761, column: 29, scope: !17118)
!17121 = !DILocation(line: 1761, column: 46, scope: !17118)
!17122 = !DILocation(line: 1761, column: 52, scope: !17118)
!17123 = !DILocation(line: 1763, column: 23, scope: !17118)
!17124 = !DILocation(line: 1763, column: 9, scope: !17118)
!17125 = !DILocation(line: 1763, column: 7, scope: !17118)
!17126 = !DILocation(line: 1764, column: 10, scope: !17118)
!17127 = !DILocation(line: 1765, column: 3, scope: !17118)
!17128 = !DILocation(line: 1765, column: 10, scope: !17118)
!17129 = !DILocalVariable(name: "__UNIQUE_ID___x532", scope: !17130, file: !3, line: 1766, type: !7)
!17130 = distinct !DILexicalBlock(scope: !17131, file: !3, line: 1766, column: 11)
!17131 = distinct !DILexicalBlock(scope: !17118, file: !3, line: 1765, column: 15)
!17132 = !DILocation(line: 1766, column: 11, scope: !17130)
!17133 = !DILocalVariable(name: "__UNIQUE_ID___y533", scope: !17130, file: !3, line: 1766, type: !7)
!17134 = !DILocation(line: 1766, column: 9, scope: !17131)
!17135 = !DILocation(line: 1767, column: 30, scope: !17131)
!17136 = !DILocation(line: 1767, column: 34, scope: !17131)
!17137 = !DILocation(line: 1767, column: 12, scope: !17131)
!17138 = !DILocation(line: 1767, column: 10, scope: !17131)
!17139 = !DILocation(line: 1768, column: 14, scope: !17131)
!17140 = !DILocation(line: 1768, column: 21, scope: !17131)
!17141 = !DILocation(line: 1768, column: 28, scope: !17131)
!17142 = !DILocation(line: 1768, column: 11, scope: !17131)
!17143 = !DILocation(line: 1770, column: 32, scope: !17131)
!17144 = !DILocation(line: 1770, column: 36, scope: !17131)
!17145 = !DILocation(line: 1770, column: 42, scope: !17131)
!17146 = !DILocation(line: 1770, column: 47, scope: !17131)
!17147 = !DILocation(line: 1771, column: 10, scope: !17131)
!17148 = !DILocation(line: 1771, column: 18, scope: !17131)
!17149 = !DILocation(line: 1770, column: 14, scope: !17131)
!17150 = !DILocation(line: 1770, column: 12, scope: !17131)
!17151 = !DILocation(line: 1772, column: 27, scope: !17152)
!17152 = distinct !DILexicalBlock(scope: !17131, file: !3, line: 1772, column: 8)
!17153 = !DILocation(line: 1772, column: 31, scope: !17152)
!17154 = !DILocation(line: 1772, column: 37, scope: !17152)
!17155 = !DILocation(line: 1772, column: 42, scope: !17152)
!17156 = !DILocation(line: 1772, column: 8, scope: !17152)
!17157 = !DILocation(line: 1772, column: 8, scope: !17131)
!17158 = !DILocation(line: 1773, column: 5, scope: !17152)
!17159 = !DILocation(line: 1776, column: 4, scope: !17131)
!17160 = !DILocation(line: 1776, column: 12, scope: !17131)
!17161 = !DILocation(line: 1776, column: 16, scope: !17131)
!17162 = !DILocation(line: 1777, column: 22, scope: !17131)
!17163 = !DILocation(line: 1777, column: 4, scope: !17131)
!17164 = !DILocation(line: 1777, column: 12, scope: !17131)
!17165 = !DILocation(line: 1777, column: 20, scope: !17131)
!17166 = !DILocation(line: 1778, column: 19, scope: !17131)
!17167 = !DILocation(line: 1778, column: 4, scope: !17131)
!17168 = !DILocation(line: 1778, column: 12, scope: !17131)
!17169 = !DILocation(line: 1778, column: 17, scope: !17131)
!17170 = !DILocation(line: 1779, column: 4, scope: !17131)
!17171 = !DILocation(line: 1779, column: 12, scope: !17131)
!17172 = !DILocation(line: 1779, column: 27, scope: !17131)
!17173 = !DILocation(line: 1781, column: 11, scope: !17131)
!17174 = !DILocation(line: 1781, column: 8, scope: !17131)
!17175 = !DILocation(line: 1782, column: 14, scope: !17131)
!17176 = !DILocation(line: 1782, column: 11, scope: !17131)
!17177 = !DILocation(line: 1783, column: 9, scope: !17131)
!17178 = !DILocation(line: 1784, column: 11, scope: !17131)
!17179 = distinct !{!17179, !17127, !17180}
!17180 = !DILocation(line: 1785, column: 3, scope: !17118)
!17181 = !DILocation(line: 1786, column: 2, scope: !17118)
!17182 = !DILocation(line: 1760, column: 29, scope: !17113)
!17183 = !DILocation(line: 1760, column: 2, scope: !17113)
!17184 = distinct !{!17184, !17116, !17185}
!17185 = !DILocation(line: 1786, column: 2, scope: !17110)
!17186 = !DILocation(line: 1789, column: 6, scope: !17187)
!17187 = distinct !DILexicalBlock(scope: !16990, file: !3, line: 1789, column: 6)
!17188 = !DILocation(line: 1789, column: 6, scope: !16990)
!17189 = !DILocation(line: 1790, column: 14, scope: !17190)
!17190 = distinct !DILexicalBlock(scope: !17187, file: !3, line: 1789, column: 25)
!17191 = !DILocation(line: 1790, column: 18, scope: !17190)
!17192 = !DILocation(line: 1790, column: 3, scope: !17190)
!17193 = !DILocation(line: 1791, column: 3, scope: !17190)
!17194 = !DILocation(line: 1795, column: 16, scope: !16990)
!17195 = !DILocation(line: 1795, column: 2, scope: !16990)
!17196 = !DILocation(line: 1795, column: 10, scope: !16990)
!17197 = !DILocation(line: 1795, column: 14, scope: !16990)
!17198 = !DILocation(line: 1804, column: 6, scope: !16990)
!17199 = !DILocation(line: 1804, column: 4, scope: !16990)
!17200 = !DILocation(line: 1805, column: 28, scope: !16990)
!17201 = !DILocation(line: 1805, column: 32, scope: !16990)
!17202 = !DILocation(line: 1805, column: 10, scope: !16990)
!17203 = !DILocation(line: 1805, column: 8, scope: !16990)
!17204 = !DILocation(line: 1806, column: 7, scope: !16990)
!17205 = !DILocation(line: 1807, column: 22, scope: !16990)
!17206 = !DILocation(line: 1807, column: 29, scope: !16990)
!17207 = !DILocation(line: 1807, column: 9, scope: !16990)
!17208 = !DILocation(line: 1807, column: 7, scope: !16990)
!17209 = !DILocation(line: 1808, column: 15, scope: !16990)
!17210 = !DILocation(line: 1808, column: 2, scope: !16990)
!17211 = !DILocation(line: 1808, column: 8, scope: !16990)
!17212 = !DILocation(line: 1808, column: 13, scope: !16990)
!17213 = !DILocation(line: 1810, column: 6, scope: !17214)
!17214 = distinct !DILexicalBlock(scope: !16990, file: !3, line: 1810, column: 6)
!17215 = !DILocation(line: 1810, column: 6, scope: !16990)
!17216 = !DILocation(line: 1811, column: 7, scope: !17217)
!17217 = distinct !DILexicalBlock(scope: !17218, file: !3, line: 1811, column: 7)
!17218 = distinct !DILexicalBlock(scope: !17214, file: !3, line: 1810, column: 16)
!17219 = !DILocation(line: 1811, column: 16, scope: !17217)
!17220 = !DILocation(line: 1811, column: 7, scope: !17218)
!17221 = !DILocation(line: 1813, column: 14, scope: !17217)
!17222 = !DILocation(line: 1813, column: 31, scope: !17217)
!17223 = !DILocation(line: 1814, column: 27, scope: !17217)
!17224 = !DILocation(line: 1814, column: 6, scope: !17217)
!17225 = !DILocation(line: 1813, column: 40, scope: !17217)
!17226 = !DILocation(line: 1814, column: 32, scope: !17217)
!17227 = !DILocation(line: 1813, column: 12, scope: !17217)
!17228 = !DILocation(line: 1813, column: 4, scope: !17217)
!17229 = !DILocation(line: 1817, column: 14, scope: !17230)
!17230 = distinct !DILexicalBlock(scope: !17217, file: !3, line: 1816, column: 18)
!17231 = !DILocation(line: 1817, column: 31, scope: !17230)
!17232 = !DILocation(line: 1817, column: 12, scope: !17230)
!17233 = !DILocation(line: 1821, column: 13, scope: !17230)
!17234 = !DILocation(line: 1823, column: 2, scope: !17218)
!17235 = !DILocation(line: 1825, column: 2, scope: !16990)
!17236 = !DILocation(line: 1826, column: 4, scope: !17237)
!17237 = distinct !DILexicalBlock(scope: !16990, file: !3, line: 1825, column: 5)
!17238 = !DILocation(line: 1827, column: 29, scope: !17237)
!17239 = !DILocation(line: 1827, column: 33, scope: !17237)
!17240 = !DILocation(line: 1827, column: 11, scope: !17237)
!17241 = !DILocation(line: 1827, column: 9, scope: !17237)
!17242 = !DILocation(line: 1828, column: 13, scope: !17237)
!17243 = !DILocation(line: 1828, column: 20, scope: !17237)
!17244 = !DILocation(line: 1828, column: 27, scope: !17237)
!17245 = !DILocation(line: 1828, column: 10, scope: !17237)
!17246 = !DILocation(line: 1829, column: 23, scope: !17237)
!17247 = !DILocation(line: 1829, column: 30, scope: !17237)
!17248 = !DILocation(line: 1829, column: 10, scope: !17237)
!17249 = !DILocation(line: 1829, column: 8, scope: !17237)
!17250 = !DILocation(line: 1831, column: 15, scope: !17237)
!17251 = !DILocation(line: 1831, column: 23, scope: !17237)
!17252 = !DILocation(line: 1831, column: 10, scope: !17237)
!17253 = !DILocation(line: 1831, column: 8, scope: !17237)
!17254 = !DILocation(line: 1832, column: 7, scope: !17255)
!17255 = distinct !DILexicalBlock(scope: !17237, file: !3, line: 1832, column: 7)
!17256 = !DILocation(line: 1832, column: 7, scope: !17237)
!17257 = !DILocation(line: 1833, column: 9, scope: !17258)
!17258 = distinct !DILexicalBlock(scope: !17255, file: !3, line: 1832, column: 12)
!17259 = !DILocation(line: 1834, column: 8, scope: !17258)
!17260 = !DILocation(line: 1835, column: 3, scope: !17258)
!17261 = !DILocation(line: 1836, column: 7, scope: !17262)
!17262 = distinct !DILexicalBlock(scope: !17237, file: !3, line: 1836, column: 7)
!17263 = !DILocation(line: 1836, column: 7, scope: !17237)
!17264 = !DILocation(line: 1837, column: 9, scope: !17262)
!17265 = !DILocation(line: 1837, column: 4, scope: !17262)
!17266 = !DILocation(line: 1840, column: 7, scope: !17267)
!17267 = distinct !DILexicalBlock(scope: !17237, file: !3, line: 1840, column: 7)
!17268 = !DILocation(line: 1840, column: 12, scope: !17267)
!17269 = !DILocation(line: 1840, column: 19, scope: !17267)
!17270 = !DILocation(line: 1840, column: 9, scope: !17267)
!17271 = !DILocation(line: 1840, column: 7, scope: !17237)
!17272 = !DILocation(line: 1841, column: 12, scope: !17273)
!17273 = distinct !DILexicalBlock(scope: !17267, file: !3, line: 1840, column: 28)
!17274 = !DILocation(line: 1841, column: 9, scope: !17273)
!17275 = !DILocation(line: 1842, column: 12, scope: !17273)
!17276 = !DILocation(line: 1842, column: 9, scope: !17273)
!17277 = !DILocation(line: 1843, column: 9, scope: !17278)
!17278 = distinct !DILexicalBlock(scope: !17273, file: !3, line: 1843, column: 8)
!17279 = !DILocation(line: 1843, column: 13, scope: !17278)
!17280 = !DILocation(line: 1843, column: 18, scope: !17278)
!17281 = !DILocation(line: 1843, column: 27, scope: !17278)
!17282 = !DILocation(line: 1843, column: 46, scope: !17278)
!17283 = !DILocation(line: 1844, column: 8, scope: !17278)
!17284 = !DILocation(line: 1844, column: 13, scope: !17278)
!17285 = !DILocation(line: 1844, column: 23, scope: !17278)
!17286 = !DILocation(line: 1844, column: 43, scope: !17278)
!17287 = !DILocation(line: 1844, column: 47, scope: !17278)
!17288 = !DILocation(line: 1843, column: 8, scope: !17273)
!17289 = !DILocation(line: 1845, column: 10, scope: !17278)
!17290 = !DILocation(line: 1845, column: 5, scope: !17278)
!17291 = !DILocation(line: 1846, column: 3, scope: !17273)
!17292 = !DILocation(line: 1850, column: 12, scope: !17267)
!17293 = !DILocation(line: 1850, column: 9, scope: !17267)
!17294 = !DILocation(line: 1853, column: 17, scope: !17237)
!17295 = !DILocation(line: 1853, column: 21, scope: !17237)
!17296 = !DILocation(line: 1853, column: 27, scope: !17237)
!17297 = !DILocation(line: 1853, column: 35, scope: !17237)
!17298 = !DILocation(line: 1853, column: 3, scope: !17237)
!17299 = !DILocation(line: 1857, column: 3, scope: !17237)
!17300 = !{i32 -2137624539}
!17301 = !DILocation(line: 1858, column: 16, scope: !17237)
!17302 = !DILocation(line: 1858, column: 3, scope: !17237)
!17303 = !DILocation(line: 1858, column: 9, scope: !17237)
!17304 = !DILocation(line: 1858, column: 14, scope: !17237)
!17305 = !DILocation(line: 1859, column: 2, scope: !17237)
!17306 = !DILocation(line: 1859, column: 11, scope: !16990)
!17307 = !DILocation(line: 1859, column: 16, scope: !16990)
!17308 = !DILocation(line: 1859, column: 23, scope: !16990)
!17309 = !DILocation(line: 1859, column: 13, scope: !16990)
!17310 = distinct !{!17310, !17235, !17311}
!17311 = !DILocation(line: 1859, column: 30, scope: !16990)
!17312 = !DILocation(line: 1861, column: 19, scope: !16990)
!17313 = !DILocation(line: 1861, column: 2, scope: !16990)
!17314 = !DILocation(line: 1861, column: 9, scope: !16990)
!17315 = !DILocation(line: 1861, column: 17, scope: !16990)
!17316 = !DILocation(line: 1863, column: 9, scope: !16990)
!17317 = !DILocation(line: 1863, column: 2, scope: !16990)
!17318 = !DILabel(scope: !16990, name: "dma_error", file: !3, line: 1865)
!17319 = !DILocation(line: 1865, column: 1, scope: !16990)
!17320 = !DILocation(line: 1866, column: 13, scope: !16990)
!17321 = !DILocation(line: 1866, column: 17, scope: !16990)
!17322 = !DILocation(line: 1866, column: 2, scope: !16990)
!17323 = !DILocation(line: 1868, column: 11, scope: !17324)
!17324 = distinct !DILexicalBlock(scope: !16990, file: !3, line: 1868, column: 2)
!17325 = !DILocation(line: 1868, column: 18, scope: !17324)
!17326 = !DILocation(line: 1868, column: 9, scope: !17324)
!17327 = !DILocation(line: 1868, column: 7, scope: !17324)
!17328 = !DILocation(line: 1868, column: 27, scope: !17329)
!17329 = distinct !DILexicalBlock(scope: !17324, file: !3, line: 1868, column: 2)
!17330 = !DILocation(line: 1868, column: 32, scope: !17329)
!17331 = !DILocation(line: 1868, column: 29, scope: !17329)
!17332 = !DILocation(line: 1868, column: 2, scope: !17324)
!17333 = !DILocation(line: 1869, column: 24, scope: !17334)
!17334 = distinct !DILexicalBlock(scope: !17329, file: !3, line: 1868, column: 46)
!17335 = !DILocation(line: 1869, column: 31, scope: !17334)
!17336 = !DILocation(line: 1869, column: 12, scope: !17334)
!17337 = !DILocation(line: 1869, column: 10, scope: !17334)
!17338 = !DILocation(line: 1871, column: 17, scope: !17334)
!17339 = !DILocation(line: 1871, column: 21, scope: !17334)
!17340 = !DILocation(line: 1871, column: 3, scope: !17334)
!17341 = !DILocation(line: 1872, column: 2, scope: !17334)
!17342 = !DILocation(line: 1868, column: 42, scope: !17329)
!17343 = !DILocation(line: 1868, column: 2, scope: !17329)
!17344 = distinct !{!17344, !17332, !17345}
!17345 = !DILocation(line: 1872, column: 2, scope: !17324)
!17346 = !DILocation(line: 1874, column: 2, scope: !16990)
!17347 = !DILocation(line: 1875, column: 1, scope: !16990)
!17348 = distinct !DISubprogram(name: "skb_tx_timestamp", scope: !422, file: !422, line: 3876, type: !2650, scopeLine: 3877, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!17349 = !DILocalVariable(name: "skb", arg: 1, scope: !17348, file: !422, line: 3876, type: !420)
!17350 = !DILocation(line: 3876, column: 53, scope: !17348)
!17351 = !DILocation(line: 3878, column: 25, scope: !17348)
!17352 = !DILocation(line: 3878, column: 2, scope: !17348)
!17353 = !DILocation(line: 3879, column: 6, scope: !17354)
!17354 = distinct !DILexicalBlock(scope: !17348, file: !422, line: 3879, column: 6)
!17355 = !DILocation(line: 3879, column: 23, scope: !17354)
!17356 = !DILocation(line: 3879, column: 32, scope: !17354)
!17357 = !DILocation(line: 3879, column: 6, scope: !17348)
!17358 = !DILocation(line: 3880, column: 17, scope: !17354)
!17359 = !DILocation(line: 3880, column: 3, scope: !17354)
!17360 = !DILocation(line: 3881, column: 1, scope: !17348)
!17361 = distinct !DISubprogram(name: "skb_cow_head", scope: !422, file: !422, line: 3197, type: !17362, scopeLine: 3198, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!17362 = !DISubroutineType(types: !17363)
!17363 = !{!37, !420, !7}
!17364 = !DILocalVariable(name: "skb", arg: 1, scope: !17361, file: !422, line: 3197, type: !420)
!17365 = !DILocation(line: 3197, column: 48, scope: !17361)
!17366 = !DILocalVariable(name: "headroom", arg: 2, scope: !17361, file: !422, line: 3197, type: !7)
!17367 = !DILocation(line: 3197, column: 66, scope: !17361)
!17368 = !DILocation(line: 3199, column: 19, scope: !17361)
!17369 = !DILocation(line: 3199, column: 24, scope: !17361)
!17370 = !DILocation(line: 3199, column: 52, scope: !17361)
!17371 = !DILocation(line: 3199, column: 34, scope: !17361)
!17372 = !DILocation(line: 3199, column: 9, scope: !17361)
!17373 = !DILocation(line: 3199, column: 2, scope: !17361)
!17374 = distinct !DISubprogram(name: "skb_checksum_start", scope: !422, file: !422, line: 2599, type: !14456, scopeLine: 2600, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!17375 = !DILocalVariable(name: "skb", arg: 1, scope: !17374, file: !422, line: 2599, type: !8807)
!17376 = !DILocation(line: 2599, column: 71, scope: !17374)
!17377 = !DILocation(line: 2601, column: 9, scope: !17374)
!17378 = !DILocation(line: 2601, column: 14, scope: !17374)
!17379 = !DILocation(line: 2601, column: 21, scope: !17374)
!17380 = !DILocation(line: 2601, column: 26, scope: !17374)
!17381 = !DILocation(line: 2601, column: 19, scope: !17374)
!17382 = !DILocation(line: 2601, column: 2, scope: !17374)
!17383 = distinct !DISubprogram(name: "__skb_cow", scope: !422, file: !422, line: 3156, type: !17384, scopeLine: 3158, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!17384 = !DISubroutineType(types: !17385)
!17385 = !{!37, !420, !7, !37}
!17386 = !DILocalVariable(name: "skb", arg: 1, scope: !17383, file: !422, line: 3156, type: !420)
!17387 = !DILocation(line: 3156, column: 45, scope: !17383)
!17388 = !DILocalVariable(name: "headroom", arg: 2, scope: !17383, file: !422, line: 3156, type: !7)
!17389 = !DILocation(line: 3156, column: 63, scope: !17383)
!17390 = !DILocalVariable(name: "cloned", arg: 3, scope: !17383, file: !422, line: 3157, type: !37)
!17391 = !DILocation(line: 3157, column: 12, scope: !17383)
!17392 = !DILocalVariable(name: "delta", scope: !17383, file: !422, line: 3159, type: !37)
!17393 = !DILocation(line: 3159, column: 6, scope: !17383)
!17394 = !DILocation(line: 3161, column: 6, scope: !17395)
!17395 = distinct !DILexicalBlock(scope: !17383, file: !422, line: 3161, column: 6)
!17396 = !DILocation(line: 3161, column: 30, scope: !17395)
!17397 = !DILocation(line: 3161, column: 17, scope: !17395)
!17398 = !DILocation(line: 3161, column: 15, scope: !17395)
!17399 = !DILocation(line: 3161, column: 6, scope: !17383)
!17400 = !DILocation(line: 3162, column: 11, scope: !17395)
!17401 = !DILocation(line: 3162, column: 35, scope: !17395)
!17402 = !DILocation(line: 3162, column: 22, scope: !17395)
!17403 = !DILocation(line: 3162, column: 20, scope: !17395)
!17404 = !DILocation(line: 3162, column: 9, scope: !17395)
!17405 = !DILocation(line: 3162, column: 3, scope: !17395)
!17406 = !DILocation(line: 3164, column: 6, scope: !17407)
!17407 = distinct !DILexicalBlock(scope: !17383, file: !422, line: 3164, column: 6)
!17408 = !DILocation(line: 3164, column: 12, scope: !17407)
!17409 = !DILocation(line: 3164, column: 15, scope: !17407)
!17410 = !DILocation(line: 3164, column: 6, scope: !17383)
!17411 = !DILocation(line: 3165, column: 27, scope: !17407)
!17412 = !DILocation(line: 3165, column: 32, scope: !17407)
!17413 = !DILocation(line: 3165, column: 10, scope: !17407)
!17414 = !DILocation(line: 3165, column: 3, scope: !17407)
!17415 = !DILocation(line: 3167, column: 2, scope: !17383)
!17416 = !DILocation(line: 3168, column: 1, scope: !17383)
!17417 = distinct !DISubprogram(name: "skb_header_cloned", scope: !422, file: !422, line: 1649, type: !16934, scopeLine: 1650, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!17418 = !DILocalVariable(name: "v", arg: 1, scope: !17419, file: !11619, line: 23, type: !17422)
!17419 = distinct !DISubprogram(name: "arch_atomic_read", scope: !11619, file: !11619, line: 23, type: !17420, scopeLine: 24, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!17420 = !DISubroutineType(types: !17421)
!17421 = !{!37, !17422}
!17422 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17423, size: 64)
!17423 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !388)
!17424 = !DILocation(line: 23, column: 61, scope: !17419, inlinedAt: !17425)
!17425 = distinct !DILocation(line: 28, column: 9, scope: !17426, inlinedAt: !17427)
!17426 = distinct !DISubprogram(name: "atomic_read", scope: !11626, file: !11626, line: 25, type: !17420, scopeLine: 26, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!17427 = distinct !DILocation(line: 1656, column: 12, scope: !17417)
!17428 = !DILocation(line: 69, column: 73, scope: !14358, inlinedAt: !17429)
!17429 = distinct !DILocation(line: 27, column: 2, scope: !17426, inlinedAt: !17427)
!17430 = !DILocation(line: 69, column: 83, scope: !14358, inlinedAt: !17429)
!17431 = !DILocalVariable(name: "v", arg: 1, scope: !17426, file: !11626, line: 25, type: !17422)
!17432 = !DILocation(line: 25, column: 29, scope: !17426, inlinedAt: !17427)
!17433 = !DILocalVariable(name: "skb", arg: 1, scope: !17417, file: !422, line: 1649, type: !8807)
!17434 = !DILocation(line: 1649, column: 59, scope: !17417)
!17435 = !DILocalVariable(name: "dataref", scope: !17417, file: !422, line: 1651, type: !37)
!17436 = !DILocation(line: 1651, column: 6, scope: !17417)
!17437 = !DILocation(line: 1653, column: 7, scope: !17438)
!17438 = distinct !DILexicalBlock(scope: !17417, file: !422, line: 1653, column: 6)
!17439 = !DILocation(line: 1653, column: 12, scope: !17438)
!17440 = !DILocation(line: 1653, column: 6, scope: !17417)
!17441 = !DILocation(line: 1654, column: 3, scope: !17438)
!17442 = !DILocation(line: 1656, column: 25, scope: !17417)
!17443 = !DILocation(line: 1656, column: 42, scope: !17417)
!17444 = !DILocation(line: 27, column: 25, scope: !17426, inlinedAt: !17427)
!17445 = !DILocation(line: 71, column: 19, scope: !14358, inlinedAt: !17429)
!17446 = !DILocation(line: 71, column: 22, scope: !14358, inlinedAt: !17429)
!17447 = !DILocation(line: 71, column: 2, scope: !14358, inlinedAt: !17429)
!17448 = !DILocation(line: 72, column: 2, scope: !14358, inlinedAt: !17429)
!17449 = !DILocation(line: 28, column: 26, scope: !17426, inlinedAt: !17427)
!17450 = !DILocation(line: 29, column: 9, scope: !17419, inlinedAt: !17425)
!17451 = !DILocation(line: 1656, column: 10, scope: !17417)
!17452 = !DILocation(line: 1657, column: 13, scope: !17417)
!17453 = !DILocation(line: 1657, column: 21, scope: !17417)
!17454 = !DILocation(line: 1657, column: 44, scope: !17417)
!17455 = !DILocation(line: 1657, column: 52, scope: !17417)
!17456 = !DILocation(line: 1657, column: 41, scope: !17417)
!17457 = !DILocation(line: 1657, column: 10, scope: !17417)
!17458 = !DILocation(line: 1658, column: 9, scope: !17417)
!17459 = !DILocation(line: 1658, column: 17, scope: !17417)
!17460 = !DILocation(line: 1658, column: 2, scope: !17417)
!17461 = !DILocation(line: 1659, column: 1, scope: !17417)
!17462 = distinct !DISubprogram(name: "skb_headroom", scope: !422, file: !422, line: 2339, type: !16946, scopeLine: 2340, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!17463 = !DILocalVariable(name: "skb", arg: 1, scope: !17462, file: !422, line: 2339, type: !8807)
!17464 = !DILocation(line: 2339, column: 63, scope: !17462)
!17465 = !DILocation(line: 2341, column: 9, scope: !17462)
!17466 = !DILocation(line: 2341, column: 14, scope: !17462)
!17467 = !DILocation(line: 2341, column: 21, scope: !17462)
!17468 = !DILocation(line: 2341, column: 26, scope: !17462)
!17469 = !DILocation(line: 2341, column: 19, scope: !17462)
!17470 = !DILocation(line: 2341, column: 2, scope: !17462)
!17471 = distinct !DISubprogram(name: "skb_cloned", scope: !422, file: !422, line: 1626, type: !16934, scopeLine: 1627, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!17472 = !DILocation(line: 23, column: 61, scope: !17419, inlinedAt: !17473)
!17473 = distinct !DILocation(line: 28, column: 9, scope: !17426, inlinedAt: !17474)
!17474 = distinct !DILocation(line: 1629, column: 10, scope: !17471)
!17475 = !DILocation(line: 69, column: 73, scope: !14358, inlinedAt: !17476)
!17476 = distinct !DILocation(line: 27, column: 2, scope: !17426, inlinedAt: !17474)
!17477 = !DILocation(line: 69, column: 83, scope: !14358, inlinedAt: !17476)
!17478 = !DILocation(line: 25, column: 29, scope: !17426, inlinedAt: !17474)
!17479 = !DILocalVariable(name: "skb", arg: 1, scope: !17471, file: !422, line: 1626, type: !8807)
!17480 = !DILocation(line: 1626, column: 52, scope: !17471)
!17481 = !DILocation(line: 1628, column: 9, scope: !17471)
!17482 = !DILocation(line: 1628, column: 14, scope: !17471)
!17483 = !DILocation(line: 1628, column: 21, scope: !17471)
!17484 = !DILocation(line: 1629, column: 23, scope: !17471)
!17485 = !DILocation(line: 1629, column: 40, scope: !17471)
!17486 = !DILocation(line: 27, column: 25, scope: !17426, inlinedAt: !17474)
!17487 = !DILocation(line: 71, column: 19, scope: !14358, inlinedAt: !17476)
!17488 = !DILocation(line: 71, column: 22, scope: !14358, inlinedAt: !17476)
!17489 = !DILocation(line: 71, column: 2, scope: !14358, inlinedAt: !17476)
!17490 = !DILocation(line: 72, column: 2, scope: !14358, inlinedAt: !17476)
!17491 = !DILocation(line: 28, column: 26, scope: !17426, inlinedAt: !17474)
!17492 = !DILocation(line: 29, column: 9, scope: !17419, inlinedAt: !17473)
!17493 = !DILocation(line: 1629, column: 49, scope: !17471)
!17494 = !DILocation(line: 1629, column: 69, scope: !17471)
!17495 = !DILocation(line: 0, scope: !17471)
!17496 = !DILocation(line: 1628, column: 2, scope: !17471)
!17497 = distinct !DISubprogram(name: "skb_is_nonlinear", scope: !422, file: !422, line: 2105, type: !17498, scopeLine: 2106, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!17498 = !DISubroutineType(types: !17499)
!17499 = !{!540, !8807}
!17500 = !DILocalVariable(name: "skb", arg: 1, scope: !17497, file: !422, line: 2105, type: !8807)
!17501 = !DILocation(line: 2105, column: 59, scope: !17497)
!17502 = !DILocation(line: 2107, column: 9, scope: !17497)
!17503 = !DILocation(line: 2107, column: 14, scope: !17497)
!17504 = !DILocation(line: 2107, column: 2, scope: !17497)
!17505 = distinct !DISubprogram(name: "skb_tailroom", scope: !422, file: !422, line: 2350, type: !16934, scopeLine: 2351, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!17506 = !DILocalVariable(name: "skb", arg: 1, scope: !17505, file: !422, line: 2350, type: !8807)
!17507 = !DILocation(line: 2350, column: 54, scope: !17505)
!17508 = !DILocation(line: 2352, column: 26, scope: !17505)
!17509 = !DILocation(line: 2352, column: 9, scope: !17505)
!17510 = !DILocation(line: 2352, column: 37, scope: !17505)
!17511 = !DILocation(line: 2352, column: 42, scope: !17505)
!17512 = !DILocation(line: 2352, column: 48, scope: !17505)
!17513 = !DILocation(line: 2352, column: 53, scope: !17505)
!17514 = !DILocation(line: 2352, column: 46, scope: !17505)
!17515 = !DILocation(line: 2352, column: 2, scope: !17505)
!17516 = distinct !DISubprogram(name: "skb_set_tail_pointer", scope: !422, file: !422, line: 2201, type: !17517, scopeLine: 2202, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!17517 = !DISubroutineType(types: !17518)
!17518 = !{null, !420, !17519}
!17519 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !37)
!17520 = !DILocalVariable(name: "skb", arg: 1, scope: !17516, file: !422, line: 2201, type: !420)
!17521 = !DILocation(line: 2201, column: 57, scope: !17516)
!17522 = !DILocalVariable(name: "offset", arg: 2, scope: !17516, file: !422, line: 2201, type: !17519)
!17523 = !DILocation(line: 2201, column: 72, scope: !17516)
!17524 = !DILocation(line: 2203, column: 25, scope: !17516)
!17525 = !DILocation(line: 2203, column: 2, scope: !17516)
!17526 = !DILocation(line: 2204, column: 15, scope: !17516)
!17527 = !DILocation(line: 2204, column: 2, scope: !17516)
!17528 = !DILocation(line: 2204, column: 7, scope: !17516)
!17529 = !DILocation(line: 2204, column: 12, scope: !17516)
!17530 = !DILocation(line: 2205, column: 1, scope: !17516)
!17531 = distinct !DISubprogram(name: "dev_consume_skb_any", scope: !36, file: !36, line: 3822, type: !2650, scopeLine: 3823, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!17532 = !DILocalVariable(name: "skb", arg: 1, scope: !17531, file: !36, line: 3822, type: !420)
!17533 = !DILocation(line: 3822, column: 56, scope: !17531)
!17534 = !DILocation(line: 3824, column: 22, scope: !17531)
!17535 = !DILocation(line: 3824, column: 2, scope: !17531)
!17536 = !DILocation(line: 3825, column: 1, scope: !17531)
!17537 = distinct !DISubprogram(name: "skb_put_zero", scope: !422, file: !422, line: 2261, type: !17538, scopeLine: 2262, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!17538 = !DISubroutineType(types: !17539)
!17539 = !{!570, !420, !7}
!17540 = !DILocalVariable(name: "skb", arg: 1, scope: !17537, file: !422, line: 2261, type: !420)
!17541 = !DILocation(line: 2261, column: 50, scope: !17537)
!17542 = !DILocalVariable(name: "len", arg: 2, scope: !17537, file: !422, line: 2261, type: !7)
!17543 = !DILocation(line: 2261, column: 68, scope: !17537)
!17544 = !DILocalVariable(name: "tmp", scope: !17537, file: !422, line: 2263, type: !570)
!17545 = !DILocation(line: 2263, column: 8, scope: !17537)
!17546 = !DILocation(line: 2263, column: 22, scope: !17537)
!17547 = !DILocation(line: 2263, column: 27, scope: !17537)
!17548 = !DILocation(line: 2263, column: 14, scope: !17537)
!17549 = !DILocation(line: 2265, column: 9, scope: !17537)
!17550 = !DILocation(line: 2265, column: 17, scope: !17537)
!17551 = !DILocation(line: 2265, column: 2, scope: !17537)
!17552 = !DILocation(line: 2267, column: 9, scope: !17537)
!17553 = !DILocation(line: 2267, column: 2, scope: !17537)
!17554 = distinct !DISubprogram(name: "skb_put_u8", scope: !422, file: !422, line: 2280, type: !17555, scopeLine: 2281, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!17555 = !DISubroutineType(types: !17556)
!17556 = !{null, !420, !1397}
!17557 = !DILocalVariable(name: "skb", arg: 1, scope: !17554, file: !422, line: 2280, type: !420)
!17558 = !DILocation(line: 2280, column: 47, scope: !17554)
!17559 = !DILocalVariable(name: "val", arg: 2, scope: !17554, file: !422, line: 2280, type: !1397)
!17560 = !DILocation(line: 2280, column: 55, scope: !17554)
!17561 = !DILocation(line: 2282, column: 27, scope: !17554)
!17562 = !DILocation(line: 2282, column: 17, scope: !17554)
!17563 = !DILocation(line: 2282, column: 9, scope: !17554)
!17564 = !DILocation(line: 2282, column: 25, scope: !17554)
!17565 = !DILocation(line: 2283, column: 1, scope: !17554)
!17566 = distinct !DISubprogram(name: "skb_reset_tail_pointer", scope: !422, file: !422, line: 2196, type: !2650, scopeLine: 2197, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!17567 = !DILocalVariable(name: "skb", arg: 1, scope: !17566, file: !422, line: 2196, type: !420)
!17568 = !DILocation(line: 2196, column: 59, scope: !17566)
!17569 = !DILocation(line: 2198, column: 14, scope: !17566)
!17570 = !DILocation(line: 2198, column: 19, scope: !17566)
!17571 = !DILocation(line: 2198, column: 26, scope: !17566)
!17572 = !DILocation(line: 2198, column: 31, scope: !17566)
!17573 = !DILocation(line: 2198, column: 24, scope: !17566)
!17574 = !DILocation(line: 2198, column: 2, scope: !17566)
!17575 = !DILocation(line: 2198, column: 7, scope: !17566)
!17576 = !DILocation(line: 2198, column: 12, scope: !17566)
!17577 = !DILocation(line: 2199, column: 1, scope: !17566)
!17578 = distinct !DISubprogram(name: "skb_network_header", scope: !422, file: !422, line: 2515, type: !14456, scopeLine: 2516, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!17579 = !DILocalVariable(name: "skb", arg: 1, scope: !17578, file: !422, line: 2515, type: !8807)
!17580 = !DILocation(line: 2515, column: 71, scope: !17578)
!17581 = !DILocation(line: 2517, column: 9, scope: !17578)
!17582 = !DILocation(line: 2517, column: 14, scope: !17578)
!17583 = !DILocation(line: 2517, column: 21, scope: !17578)
!17584 = !DILocation(line: 2517, column: 26, scope: !17578)
!17585 = !DILocation(line: 2517, column: 19, scope: !17578)
!17586 = !DILocation(line: 2517, column: 2, scope: !17578)
!17587 = distinct !DISubprogram(name: "skb_transport_header", scope: !422, file: !422, line: 2498, type: !14456, scopeLine: 2499, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!17588 = !DILocalVariable(name: "skb", arg: 1, scope: !17587, file: !422, line: 2498, type: !8807)
!17589 = !DILocation(line: 2498, column: 73, scope: !17587)
!17590 = !DILocation(line: 2500, column: 9, scope: !17587)
!17591 = !DILocation(line: 2500, column: 14, scope: !17587)
!17592 = !DILocation(line: 2500, column: 21, scope: !17587)
!17593 = !DILocation(line: 2500, column: 26, scope: !17587)
!17594 = !DILocation(line: 2500, column: 19, scope: !17587)
!17595 = !DILocation(line: 2500, column: 2, scope: !17587)
!17596 = distinct !DISubprogram(name: "__tcp_hdrlen", scope: !16945, file: !16945, line: 29, type: !17597, scopeLine: 30, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!17597 = !DISubroutineType(types: !17598)
!17598 = !{!7, !17599}
!17599 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17600, size: 64)
!17600 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !10736)
!17601 = !DILocalVariable(name: "th", arg: 1, scope: !17596, file: !16945, line: 29, type: !17599)
!17602 = !DILocation(line: 29, column: 62, scope: !17596)
!17603 = !DILocation(line: 31, column: 9, scope: !17596)
!17604 = !DILocation(line: 31, column: 13, scope: !17596)
!17605 = !DILocation(line: 31, column: 18, scope: !17596)
!17606 = !DILocation(line: 31, column: 2, scope: !17596)
!17607 = distinct !DISubprogram(name: "tcp_hdr", scope: !16945, file: !16945, line: 24, type: !17608, scopeLine: 25, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!17608 = !DISubroutineType(types: !17609)
!17609 = !{!10735, !8807}
!17610 = !DILocalVariable(name: "skb", arg: 1, scope: !17607, file: !16945, line: 24, type: !8807)
!17611 = !DILocation(line: 24, column: 60, scope: !17607)
!17612 = !DILocation(line: 26, column: 47, scope: !17607)
!17613 = !DILocation(line: 26, column: 26, scope: !17607)
!17614 = !DILocation(line: 26, column: 9, scope: !17607)
!17615 = !DILocation(line: 26, column: 2, scope: !17607)
!17616 = distinct !DISubprogram(name: "set_bit", scope: !14632, file: !14632, line: 26, type: !14859, scopeLine: 27, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!17617 = !DILocalVariable(name: "nr", arg: 1, scope: !17618, file: !14344, line: 52, type: !513)
!17618 = distinct !DISubprogram(name: "arch_set_bit", scope: !14344, file: !14344, line: 52, type: !14859, scopeLine: 53, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!17619 = !DILocation(line: 52, column: 19, scope: !17618, inlinedAt: !17620)
!17620 = distinct !DILocation(line: 29, column: 2, scope: !17616)
!17621 = !DILocalVariable(name: "addr", arg: 2, scope: !17618, file: !14344, line: 52, type: !14635)
!17622 = !DILocation(line: 52, column: 47, scope: !17618, inlinedAt: !17620)
!17623 = !DILocation(line: 84, column: 74, scope: !14868, inlinedAt: !17624)
!17624 = distinct !DILocation(line: 28, column: 2, scope: !17616)
!17625 = !DILocation(line: 84, column: 84, scope: !14868, inlinedAt: !17624)
!17626 = !DILocalVariable(name: "nr", arg: 1, scope: !17616, file: !14632, line: 26, type: !513)
!17627 = !DILocation(line: 26, column: 33, scope: !17616)
!17628 = !DILocalVariable(name: "addr", arg: 2, scope: !17616, file: !14632, line: 26, type: !14635)
!17629 = !DILocation(line: 26, column: 61, scope: !17616)
!17630 = !DILocation(line: 28, column: 26, scope: !17616)
!17631 = !DILocation(line: 28, column: 33, scope: !17616)
!17632 = !DILocation(line: 28, column: 31, scope: !17616)
!17633 = !DILocation(line: 86, column: 20, scope: !14868, inlinedAt: !17624)
!17634 = !DILocation(line: 86, column: 23, scope: !14868, inlinedAt: !17624)
!17635 = !DILocation(line: 86, column: 2, scope: !14868, inlinedAt: !17624)
!17636 = !DILocation(line: 87, column: 2, scope: !14868, inlinedAt: !17624)
!17637 = !DILocation(line: 29, column: 15, scope: !17616)
!17638 = !DILocation(line: 29, column: 19, scope: !17616)
!17639 = !DILocation(line: 54, column: 27, scope: !17640, inlinedAt: !17620)
!17640 = distinct !DILexicalBlock(scope: !17618, file: !14344, line: 54, column: 6)
!17641 = !DILocation(line: 54, column: 6, scope: !17640, inlinedAt: !17620)
!17642 = !DILocation(line: 54, column: 6, scope: !17618, inlinedAt: !17620)
!17643 = !DILocation(line: 56, column: 6, scope: !17644, inlinedAt: !17620)
!17644 = distinct !DILexicalBlock(scope: !17640, file: !14344, line: 54, column: 32)
!17645 = !DILocation(line: 57, column: 12, scope: !17644, inlinedAt: !17620)
!17646 = !DILocation(line: 55, column: 3, scope: !17644, inlinedAt: !17620)
!17647 = !{i32 -2147046704}
!17648 = !DILocation(line: 59, column: 2, scope: !17644, inlinedAt: !17620)
!17649 = !DILocation(line: 61, column: 8, scope: !17650, inlinedAt: !17620)
!17650 = distinct !DILexicalBlock(scope: !17640, file: !14344, line: 59, column: 9)
!17651 = !DILocation(line: 61, column: 32, scope: !17650, inlinedAt: !17620)
!17652 = !DILocation(line: 60, column: 3, scope: !17650, inlinedAt: !17620)
!17653 = !{i32 -2147046572}
!17654 = !DILocation(line: 30, column: 1, scope: !17616)
!17655 = !DILocalVariable(name: "dev", arg: 1, scope: !10846, file: !10847, line: 271, type: !4172)
!17656 = !DILocation(line: 271, column: 62, scope: !10846)
!17657 = !DILocalVariable(name: "ptr", arg: 2, scope: !10846, file: !10847, line: 271, type: !570)
!17658 = !DILocation(line: 271, column: 73, scope: !10846)
!17659 = !DILocalVariable(name: "size", arg: 3, scope: !10846, file: !10847, line: 272, type: !594)
!17660 = !DILocation(line: 272, column: 10, scope: !10846)
!17661 = !DILocalVariable(name: "dir", arg: 4, scope: !10846, file: !10847, line: 272, type: !10003)
!17662 = !DILocation(line: 272, column: 40, scope: !10846)
!17663 = !DILocalVariable(name: "attrs", arg: 5, scope: !10846, file: !10847, line: 272, type: !317)
!17664 = !DILocation(line: 272, column: 59, scope: !10846)
!17665 = !DILocalVariable(name: "__ret_warn_once", scope: !17666, file: !10847, line: 275, type: !37)
!17666 = distinct !DILexicalBlock(scope: !17667, file: !10847, line: 275, column: 6)
!17667 = distinct !DILexicalBlock(scope: !10846, file: !10847, line: 275, column: 6)
!17668 = !DILocation(line: 275, column: 6, scope: !17666)
!17669 = !DILocation(line: 275, column: 6, scope: !17670)
!17670 = distinct !DILexicalBlock(scope: !17666, file: !10847, line: 275, column: 6)
!17671 = !DILocation(line: 0, scope: !17670)
!17672 = !DILocation(line: 275, column: 6, scope: !17673)
!17673 = distinct !DILexicalBlock(scope: !17670, file: !10847, line: 275, column: 6)
!17674 = !DILocalVariable(name: "__ret_warn_on", scope: !17675, file: !10847, line: 275, type: !37)
!17675 = distinct !DILexicalBlock(scope: !17673, file: !10847, line: 275, column: 6)
!17676 = !DILocation(line: 275, column: 6, scope: !17675)
!17677 = !DILocation(line: 275, column: 6, scope: !17678)
!17678 = distinct !DILexicalBlock(scope: !17675, file: !10847, line: 275, column: 6)
!17679 = !DILocation(line: 275, column: 6, scope: !17680)
!17680 = distinct !DILexicalBlock(scope: !17678, file: !10847, line: 275, column: 6)
!17681 = !DILocation(line: 275, column: 6, scope: !17682)
!17682 = distinct !DILexicalBlock(scope: !17680, file: !10847, line: 275, column: 6)
!17683 = !DILocation(line: 275, column: 6, scope: !17684)
!17684 = distinct !DILexicalBlock(scope: !17680, file: !10847, line: 275, column: 6)
!17685 = !DILocation(line: 275, column: 6, scope: !17686)
!17686 = distinct !DILexicalBlock(scope: !17684, file: !10847, line: 275, column: 6)
!17687 = !DILocation(line: 275, column: 6, scope: !17688)
!17688 = distinct !DILexicalBlock(scope: !17684, file: !10847, line: 275, column: 6)
!17689 = !{i32 -2140878653, i32 -2140878624, i32 -2140878578, i32 -2140878520, i32 -2140878466, i32 -2140878412, i32 -2140878357, i32 -2140878326}
!17690 = !DILocation(line: 275, column: 6, scope: !17691)
!17691 = distinct !DILexicalBlock(scope: !17684, file: !10847, line: 275, column: 6)
!17692 = !{i32 -2140877906, i32 -2140877899, i32 -2140877847, i32 -2140877816, i32 -2140877786}
!17693 = !DILocation(line: 275, column: 6, scope: !17694)
!17694 = distinct !DILexicalBlock(scope: !17684, file: !10847, line: 275, column: 6)
!17695 = !DILocation(line: 275, column: 6, scope: !17696)
!17696 = distinct !DILexicalBlock(scope: !17680, file: !10847, line: 275, column: 6)
!17697 = !DILocation(line: 275, column: 6, scope: !17667)
!17698 = !DILocation(line: 275, column: 6, scope: !10846)
!17699 = !DILocation(line: 277, column: 3, scope: !17667)
!17700 = !DILocation(line: 278, column: 23, scope: !10846)
!17701 = !DILocation(line: 278, column: 28, scope: !10846)
!17702 = !DILocation(line: 278, column: 33, scope: !10846)
!17703 = !DILocation(line: 278, column: 2, scope: !10846)
!17704 = !DILocation(line: 279, column: 28, scope: !10846)
!17705 = !DILocation(line: 279, column: 33, scope: !10846)
!17706 = !DILocation(line: 279, column: 52, scope: !10846)
!17707 = !DILocation(line: 280, column: 4, scope: !10846)
!17708 = !DILocation(line: 280, column: 10, scope: !10846)
!17709 = !DILocation(line: 280, column: 15, scope: !10846)
!17710 = !DILocation(line: 279, column: 9, scope: !10846)
!17711 = !DILocation(line: 279, column: 2, scope: !10846)
!17712 = !DILocation(line: 281, column: 1, scope: !10846)
!17713 = distinct !DISubprogram(name: "dma_mapping_error", scope: !10847, file: !10847, line: 94, type: !17714, scopeLine: 95, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!17714 = !DISubroutineType(types: !17715)
!17715 = !{!37, !4172, !7084}
!17716 = !DILocalVariable(name: "dev", arg: 1, scope: !17713, file: !10847, line: 94, type: !4172)
!17717 = !DILocation(line: 94, column: 52, scope: !17713)
!17718 = !DILocalVariable(name: "dma_addr", arg: 2, scope: !17713, file: !10847, line: 94, type: !7084)
!17719 = !DILocation(line: 94, column: 68, scope: !17713)
!17720 = !DILocation(line: 96, column: 26, scope: !17713)
!17721 = !DILocation(line: 96, column: 31, scope: !17713)
!17722 = !DILocation(line: 96, column: 2, scope: !17713)
!17723 = !DILocation(line: 98, column: 6, scope: !17724)
!17724 = distinct !DILexicalBlock(scope: !17713, file: !10847, line: 98, column: 6)
!17725 = !DILocation(line: 98, column: 15, scope: !17724)
!17726 = !DILocation(line: 98, column: 6, scope: !17713)
!17727 = !DILocation(line: 99, column: 3, scope: !17724)
!17728 = !DILocation(line: 100, column: 2, scope: !17713)
!17729 = !DILocation(line: 101, column: 1, scope: !17713)
!17730 = distinct !DISubprogram(name: "skb_frag_dma_map", scope: !422, file: !422, line: 3112, type: !17731, scopeLine: 3116, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!17731 = !DISubroutineType(types: !17732)
!17732 = !{!7084, !4172, !15400, !594, !594, !10003}
!17733 = !DILocalVariable(name: "dev", arg: 1, scope: !17730, file: !422, line: 3112, type: !4172)
!17734 = !DILocation(line: 3112, column: 58, scope: !17730)
!17735 = !DILocalVariable(name: "frag", arg: 2, scope: !17730, file: !422, line: 3113, type: !15400)
!17736 = !DILocation(line: 3113, column: 26, scope: !17730)
!17737 = !DILocalVariable(name: "offset", arg: 3, scope: !17730, file: !422, line: 3114, type: !594)
!17738 = !DILocation(line: 3114, column: 15, scope: !17730)
!17739 = !DILocalVariable(name: "size", arg: 4, scope: !17730, file: !422, line: 3114, type: !594)
!17740 = !DILocation(line: 3114, column: 30, scope: !17730)
!17741 = !DILocalVariable(name: "dir", arg: 5, scope: !17730, file: !422, line: 3115, type: !10003)
!17742 = !DILocation(line: 3115, column: 32, scope: !17730)
!17743 = !DILocation(line: 3117, column: 9, scope: !17730)
!17744 = !DILocation(line: 3117, column: 2, scope: !17730)
!17745 = distinct !DISubprogram(name: "dev_name", scope: !3804, file: !3804, line: 609, type: !17746, scopeLine: 610, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!17746 = !DISubroutineType(types: !17747)
!17747 = !{!297, !4513}
!17748 = !DILocalVariable(name: "dev", arg: 1, scope: !17745, file: !3804, line: 609, type: !4513)
!17749 = !DILocation(line: 609, column: 57, scope: !17745)
!17750 = !DILocation(line: 612, column: 6, scope: !17751)
!17751 = distinct !DILexicalBlock(scope: !17745, file: !3804, line: 612, column: 6)
!17752 = !DILocation(line: 612, column: 11, scope: !17751)
!17753 = !DILocation(line: 612, column: 6, scope: !17745)
!17754 = !DILocation(line: 613, column: 10, scope: !17751)
!17755 = !DILocation(line: 613, column: 15, scope: !17751)
!17756 = !DILocation(line: 613, column: 3, scope: !17751)
!17757 = !DILocation(line: 615, column: 23, scope: !17745)
!17758 = !DILocation(line: 615, column: 28, scope: !17745)
!17759 = !DILocation(line: 615, column: 9, scope: !17745)
!17760 = !DILocation(line: 615, column: 2, scope: !17745)
!17761 = !DILocation(line: 616, column: 1, scope: !17745)
!17762 = distinct !DISubprogram(name: "debug_dma_map_single", scope: !10847, file: !10847, line: 87, type: !17763, scopeLine: 89, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!17763 = !DISubroutineType(types: !17764)
!17764 = !{null, !4172, !2244, !317}
!17765 = !DILocalVariable(name: "dev", arg: 1, scope: !17762, file: !10847, line: 87, type: !4172)
!17766 = !DILocation(line: 87, column: 56, scope: !17762)
!17767 = !DILocalVariable(name: "addr", arg: 2, scope: !17762, file: !10847, line: 87, type: !2244)
!17768 = !DILocation(line: 87, column: 73, scope: !17762)
!17769 = !DILocalVariable(name: "len", arg: 3, scope: !17762, file: !10847, line: 88, type: !317)
!17770 = !DILocation(line: 88, column: 17, scope: !17762)
!17771 = !DILocation(line: 90, column: 1, scope: !17762)
!17772 = distinct !DISubprogram(name: "__phys_addr_nodebug", scope: !17773, file: !17773, line: 18, type: !17774, scopeLine: 19, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!17773 = !DIFile(filename: "./arch/x86/include/asm/page_64.h", directory: "/home/lizy2001/genbc/linux")
!17774 = !DISubroutineType(types: !17775)
!17775 = !{!317, !317}
!17776 = !DILocalVariable(name: "x", arg: 1, scope: !17772, file: !17773, line: 18, type: !317)
!17777 = !DILocation(line: 18, column: 63, scope: !17772)
!17778 = !DILocalVariable(name: "y", scope: !17772, file: !17773, line: 20, type: !317)
!17779 = !DILocation(line: 20, column: 16, scope: !17772)
!17780 = !DILocation(line: 20, column: 20, scope: !17772)
!17781 = !DILocation(line: 20, column: 22, scope: !17772)
!17782 = !DILocation(line: 23, column: 6, scope: !17772)
!17783 = !DILocation(line: 23, column: 12, scope: !17772)
!17784 = !DILocation(line: 23, column: 16, scope: !17772)
!17785 = !DILocation(line: 23, column: 14, scope: !17772)
!17786 = !DILocation(line: 23, column: 11, scope: !17772)
!17787 = !DILocation(line: 23, column: 21, scope: !17772)
!17788 = !DILocation(line: 23, column: 55, scope: !17772)
!17789 = !DILocation(line: 23, column: 53, scope: !17772)
!17790 = !DILocation(line: 23, column: 8, scope: !17772)
!17791 = !DILocation(line: 23, column: 4, scope: !17772)
!17792 = !DILocation(line: 25, column: 9, scope: !17772)
!17793 = !DILocation(line: 25, column: 2, scope: !17772)
!17794 = distinct !DISubprogram(name: "kobject_name", scope: !3808, file: !3808, line: 88, type: !17795, scopeLine: 89, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!17795 = !DISubroutineType(types: !17796)
!17796 = !{!297, !17797}
!17797 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17798, size: 64)
!17798 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3807)
!17799 = !DILocalVariable(name: "kobj", arg: 1, scope: !17794, file: !3808, line: 88, type: !17797)
!17800 = !DILocation(line: 88, column: 62, scope: !17794)
!17801 = !DILocation(line: 90, column: 9, scope: !17794)
!17802 = !DILocation(line: 90, column: 15, scope: !17794)
!17803 = !DILocation(line: 90, column: 2, scope: !17794)
!17804 = distinct !DISubprogram(name: "debug_dma_mapping_error", scope: !10847, file: !10847, line: 83, type: !17805, scopeLine: 85, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!17805 = !DISubroutineType(types: !17806)
!17806 = !{null, !4172, !7084}
!17807 = !DILocalVariable(name: "dev", arg: 1, scope: !17804, file: !10847, line: 83, type: !4172)
!17808 = !DILocation(line: 83, column: 59, scope: !17804)
!17809 = !DILocalVariable(name: "dma_addr", arg: 2, scope: !17804, file: !10847, line: 84, type: !7084)
!17810 = !DILocation(line: 84, column: 14, scope: !17804)
!17811 = !DILocation(line: 86, column: 1, scope: !17804)
!17812 = distinct !DISubprogram(name: "skb_frag_page", scope: !422, file: !422, line: 2983, type: !17813, scopeLine: 2984, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!17813 = !DISubroutineType(types: !17814)
!17814 = !{!624, !15400}
!17815 = !DILocalVariable(name: "frag", arg: 1, scope: !17812, file: !422, line: 2983, type: !15400)
!17816 = !DILocation(line: 2983, column: 60, scope: !17812)
!17817 = !DILocation(line: 2985, column: 9, scope: !17812)
!17818 = !DILocation(line: 2985, column: 15, scope: !17812)
!17819 = !DILocation(line: 2985, column: 2, scope: !17812)
!17820 = distinct !DISubprogram(name: "skb_frag_off", scope: !422, file: !422, line: 2941, type: !16964, scopeLine: 2942, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!17821 = !DILocalVariable(name: "frag", arg: 1, scope: !17820, file: !422, line: 2941, type: !15400)
!17822 = !DILocation(line: 2941, column: 59, scope: !17820)
!17823 = !DILocation(line: 2943, column: 9, scope: !17820)
!17824 = !DILocation(line: 2943, column: 15, scope: !17820)
!17825 = !DILocation(line: 2943, column: 2, scope: !17820)
!17826 = distinct !DISubprogram(name: "skb_clone_tx_timestamp", scope: !422, file: !422, line: 3820, type: !2650, scopeLine: 3821, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!17827 = !DILocalVariable(name: "skb", arg: 1, scope: !17826, file: !422, line: 3820, type: !420)
!17828 = !DILocation(line: 3820, column: 59, scope: !17826)
!17829 = !DILocation(line: 3822, column: 1, scope: !17826)
!17830 = distinct !DISubprogram(name: "macb_sethashtable", scope: !3, file: !3, line: 2526, type: !411, scopeLine: 2527, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!17831 = !DILocalVariable(name: "dev", arg: 1, scope: !17830, file: !3, line: 2526, type: !295)
!17832 = !DILocation(line: 2526, column: 50, scope: !17830)
!17833 = !DILocalVariable(name: "ha", scope: !17830, file: !3, line: 2528, type: !10756)
!17834 = !DILocation(line: 2528, column: 25, scope: !17830)
!17835 = !DILocalVariable(name: "mc_filter", scope: !17830, file: !3, line: 2529, type: !8766)
!17836 = !DILocation(line: 2529, column: 16, scope: !17830)
!17837 = !DILocalVariable(name: "bitnr", scope: !17830, file: !3, line: 2530, type: !7)
!17838 = !DILocation(line: 2530, column: 15, scope: !17830)
!17839 = !DILocalVariable(name: "bp", scope: !17830, file: !3, line: 2531, type: !10238)
!17840 = !DILocation(line: 2531, column: 15, scope: !17830)
!17841 = !DILocation(line: 2531, column: 32, scope: !17830)
!17842 = !DILocation(line: 2531, column: 20, scope: !17830)
!17843 = !DILocation(line: 2533, column: 2, scope: !17830)
!17844 = !DILocation(line: 2533, column: 15, scope: !17830)
!17845 = !DILocation(line: 2534, column: 2, scope: !17830)
!17846 = !DILocation(line: 2534, column: 15, scope: !17830)
!17847 = !DILocalVariable(name: "__mptr", scope: !17848, file: !3, line: 2536, type: !570)
!17848 = distinct !DILexicalBlock(scope: !17849, file: !3, line: 2536, column: 2)
!17849 = distinct !DILexicalBlock(scope: !17830, file: !3, line: 2536, column: 2)
!17850 = !DILocation(line: 2536, column: 2, scope: !17848)
!17851 = !DILocation(line: 2536, column: 2, scope: !17852)
!17852 = distinct !DILexicalBlock(scope: !17848, file: !3, line: 2536, column: 2)
!17853 = !DILocation(line: 2536, column: 2, scope: !17849)
!17854 = !DILocation(line: 2536, column: 2, scope: !17855)
!17855 = distinct !DILexicalBlock(scope: !17849, file: !3, line: 2536, column: 2)
!17856 = !DILocation(line: 2537, column: 26, scope: !17857)
!17857 = distinct !DILexicalBlock(scope: !17855, file: !3, line: 2536, column: 35)
!17858 = !DILocation(line: 2537, column: 30, scope: !17857)
!17859 = !DILocation(line: 2537, column: 11, scope: !17857)
!17860 = !DILocation(line: 2537, column: 9, scope: !17857)
!17861 = !DILocation(line: 2538, column: 34, scope: !17857)
!17862 = !DILocation(line: 2538, column: 40, scope: !17857)
!17863 = !DILocation(line: 2538, column: 30, scope: !17857)
!17864 = !DILocation(line: 2538, column: 28, scope: !17857)
!17865 = !DILocation(line: 2538, column: 13, scope: !17857)
!17866 = !DILocation(line: 2538, column: 19, scope: !17857)
!17867 = !DILocation(line: 2538, column: 3, scope: !17857)
!17868 = !DILocation(line: 2538, column: 25, scope: !17857)
!17869 = !DILocation(line: 2539, column: 2, scope: !17857)
!17870 = !DILocalVariable(name: "__mptr", scope: !17871, file: !3, line: 2536, type: !570)
!17871 = distinct !DILexicalBlock(scope: !17855, file: !3, line: 2536, column: 2)
!17872 = !DILocation(line: 2536, column: 2, scope: !17871)
!17873 = !DILocation(line: 2536, column: 2, scope: !17874)
!17874 = distinct !DILexicalBlock(scope: !17871, file: !3, line: 2536, column: 2)
!17875 = distinct !{!17875, !17853, !17876}
!17876 = !DILocation(line: 2539, column: 2, scope: !17849)
!17877 = !DILocation(line: 2541, column: 2, scope: !17878)
!17878 = distinct !DILexicalBlock(scope: !17879, file: !3, line: 2541, column: 2)
!17879 = distinct !DILexicalBlock(scope: !17830, file: !3, line: 2541, column: 2)
!17880 = !DILocation(line: 2541, column: 2, scope: !17879)
!17881 = !DILocation(line: 2542, column: 2, scope: !17882)
!17882 = distinct !DILexicalBlock(scope: !17883, file: !3, line: 2542, column: 2)
!17883 = distinct !DILexicalBlock(scope: !17830, file: !3, line: 2542, column: 2)
!17884 = !DILocation(line: 2542, column: 2, scope: !17883)
!17885 = !DILocation(line: 2543, column: 1, scope: !17830)
!17886 = distinct !DISubprogram(name: "hash_get_index", scope: !3, file: !3, line: 2510, type: !17887, scopeLine: 2511, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!17887 = !DISubroutineType(types: !17888)
!17888 = !{!37, !17889}
!17889 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1398, size: 64)
!17890 = !DILocalVariable(name: "addr", arg: 1, scope: !17886, file: !3, line: 2510, type: !17889)
!17891 = !DILocation(line: 2510, column: 33, scope: !17886)
!17892 = !DILocalVariable(name: "i", scope: !17886, file: !3, line: 2512, type: !37)
!17893 = !DILocation(line: 2512, column: 6, scope: !17886)
!17894 = !DILocalVariable(name: "j", scope: !17886, file: !3, line: 2512, type: !37)
!17895 = !DILocation(line: 2512, column: 9, scope: !17886)
!17896 = !DILocalVariable(name: "bitval", scope: !17886, file: !3, line: 2512, type: !37)
!17897 = !DILocation(line: 2512, column: 12, scope: !17886)
!17898 = !DILocalVariable(name: "hash_index", scope: !17886, file: !3, line: 2513, type: !37)
!17899 = !DILocation(line: 2513, column: 6, scope: !17886)
!17900 = !DILocation(line: 2515, column: 9, scope: !17901)
!17901 = distinct !DILexicalBlock(scope: !17886, file: !3, line: 2515, column: 2)
!17902 = !DILocation(line: 2515, column: 7, scope: !17901)
!17903 = !DILocation(line: 2515, column: 14, scope: !17904)
!17904 = distinct !DILexicalBlock(scope: !17901, file: !3, line: 2515, column: 2)
!17905 = !DILocation(line: 2515, column: 16, scope: !17904)
!17906 = !DILocation(line: 2515, column: 2, scope: !17901)
!17907 = !DILocation(line: 2516, column: 10, scope: !17908)
!17908 = distinct !DILexicalBlock(scope: !17909, file: !3, line: 2516, column: 3)
!17909 = distinct !DILexicalBlock(scope: !17904, file: !3, line: 2515, column: 26)
!17910 = !DILocation(line: 2516, column: 22, scope: !17908)
!17911 = !DILocation(line: 2516, column: 8, scope: !17908)
!17912 = !DILocation(line: 2516, column: 27, scope: !17913)
!17913 = distinct !DILexicalBlock(scope: !17908, file: !3, line: 2516, column: 3)
!17914 = !DILocation(line: 2516, column: 29, scope: !17913)
!17915 = !DILocation(line: 2516, column: 3, scope: !17908)
!17916 = !DILocation(line: 2517, column: 29, scope: !17913)
!17917 = !DILocation(line: 2517, column: 31, scope: !17913)
!17918 = !DILocation(line: 2517, column: 37, scope: !17913)
!17919 = !DILocation(line: 2517, column: 35, scope: !17913)
!17920 = !DILocation(line: 2517, column: 40, scope: !17913)
!17921 = !DILocation(line: 2517, column: 14, scope: !17913)
!17922 = !DILocation(line: 2517, column: 11, scope: !17913)
!17923 = !DILocation(line: 2517, column: 4, scope: !17913)
!17924 = !DILocation(line: 2516, column: 35, scope: !17913)
!17925 = !DILocation(line: 2516, column: 3, scope: !17913)
!17926 = distinct !{!17926, !17915, !17927}
!17927 = !DILocation(line: 2517, column: 44, scope: !17908)
!17928 = !DILocation(line: 2519, column: 18, scope: !17909)
!17929 = !DILocation(line: 2519, column: 28, scope: !17909)
!17930 = !DILocation(line: 2519, column: 25, scope: !17909)
!17931 = !DILocation(line: 2519, column: 14, scope: !17909)
!17932 = !DILocation(line: 2520, column: 2, scope: !17909)
!17933 = !DILocation(line: 2515, column: 22, scope: !17904)
!17934 = !DILocation(line: 2515, column: 2, scope: !17904)
!17935 = distinct !{!17935, !17906, !17936}
!17936 = !DILocation(line: 2520, column: 2, scope: !17901)
!17937 = !DILocation(line: 2522, column: 9, scope: !17886)
!17938 = !DILocation(line: 2522, column: 2, scope: !17886)
!17939 = distinct !DISubprogram(name: "hash_bit_value", scope: !3, file: !3, line: 2502, type: !17940, scopeLine: 2503, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!17940 = !DISubroutineType(types: !17941)
!17941 = !{!37, !37, !17889}
!17942 = !DILocalVariable(name: "bitnr", arg: 1, scope: !17939, file: !3, line: 2502, type: !37)
!17943 = !DILocation(line: 2502, column: 38, scope: !17939)
!17944 = !DILocalVariable(name: "addr", arg: 2, scope: !17939, file: !3, line: 2502, type: !17889)
!17945 = !DILocation(line: 2502, column: 51, scope: !17939)
!17946 = !DILocation(line: 2504, column: 6, scope: !17947)
!17947 = distinct !DILexicalBlock(scope: !17939, file: !3, line: 2504, column: 6)
!17948 = !DILocation(line: 2504, column: 11, scope: !17947)
!17949 = !DILocation(line: 2504, column: 17, scope: !17947)
!17950 = !DILocation(line: 2504, column: 31, scope: !17947)
!17951 = !DILocation(line: 2504, column: 37, scope: !17947)
!17952 = !DILocation(line: 2504, column: 27, scope: !17947)
!17953 = !DILocation(line: 2504, column: 22, scope: !17947)
!17954 = !DILocation(line: 2504, column: 6, scope: !17939)
!17955 = !DILocation(line: 2505, column: 3, scope: !17947)
!17956 = !DILocation(line: 2506, column: 2, scope: !17939)
!17957 = !DILocation(line: 2507, column: 1, scope: !17939)
!17958 = distinct !DISubprogram(name: "gem_get_stats", scope: !3, file: !3, line: 2707, type: !17959, scopeLine: 2708, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!17959 = !DISubroutineType(types: !17960)
!17960 = !{!7939, !10238}
!17961 = !DILocalVariable(name: "bp", arg: 1, scope: !17958, file: !3, line: 2707, type: !10238)
!17962 = !DILocation(line: 2707, column: 60, scope: !17958)
!17963 = !DILocalVariable(name: "hwstat", scope: !17958, file: !3, line: 2709, type: !17964)
!17964 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10336, size: 64)
!17965 = !DILocation(line: 2709, column: 20, scope: !17958)
!17966 = !DILocation(line: 2709, column: 30, scope: !17958)
!17967 = !DILocation(line: 2709, column: 34, scope: !17958)
!17968 = !DILocation(line: 2709, column: 43, scope: !17958)
!17969 = !DILocalVariable(name: "nstat", scope: !17958, file: !3, line: 2710, type: !7939)
!17970 = !DILocation(line: 2710, column: 27, scope: !17958)
!17971 = !DILocation(line: 2710, column: 36, scope: !17958)
!17972 = !DILocation(line: 2710, column: 40, scope: !17958)
!17973 = !DILocation(line: 2710, column: 45, scope: !17958)
!17974 = !DILocation(line: 2712, column: 19, scope: !17958)
!17975 = !DILocation(line: 2712, column: 2, scope: !17958)
!17976 = !DILocation(line: 2714, column: 22, scope: !17958)
!17977 = !DILocation(line: 2714, column: 30, scope: !17958)
!17978 = !DILocation(line: 2715, column: 8, scope: !17958)
!17979 = !DILocation(line: 2715, column: 16, scope: !17958)
!17980 = !DILocation(line: 2714, column: 61, scope: !17958)
!17981 = !DILocation(line: 2716, column: 8, scope: !17958)
!17982 = !DILocation(line: 2716, column: 16, scope: !17958)
!17983 = !DILocation(line: 2715, column: 36, scope: !17958)
!17984 = !DILocation(line: 2717, column: 8, scope: !17958)
!17985 = !DILocation(line: 2717, column: 16, scope: !17958)
!17986 = !DILocation(line: 2716, column: 35, scope: !17958)
!17987 = !DILocation(line: 2718, column: 8, scope: !17958)
!17988 = !DILocation(line: 2718, column: 16, scope: !17958)
!17989 = !DILocation(line: 2717, column: 28, scope: !17958)
!17990 = !DILocation(line: 2719, column: 8, scope: !17958)
!17991 = !DILocation(line: 2719, column: 16, scope: !17958)
!17992 = !DILocation(line: 2718, column: 35, scope: !17958)
!17993 = !DILocation(line: 2720, column: 8, scope: !17958)
!17994 = !DILocation(line: 2720, column: 16, scope: !17958)
!17995 = !DILocation(line: 2719, column: 27, scope: !17958)
!17996 = !DILocation(line: 2721, column: 8, scope: !17958)
!17997 = !DILocation(line: 2721, column: 16, scope: !17958)
!17998 = !DILocation(line: 2720, column: 37, scope: !17958)
!17999 = !DILocation(line: 2714, column: 21, scope: !17958)
!18000 = !DILocation(line: 2714, column: 2, scope: !17958)
!18001 = !DILocation(line: 2714, column: 9, scope: !17958)
!18002 = !DILocation(line: 2714, column: 19, scope: !17958)
!18003 = !DILocation(line: 2722, column: 22, scope: !17958)
!18004 = !DILocation(line: 2722, column: 30, scope: !17958)
!18005 = !DILocation(line: 2723, column: 8, scope: !17958)
!18006 = !DILocation(line: 2723, column: 16, scope: !17958)
!18007 = !DILocation(line: 2722, column: 49, scope: !17958)
!18008 = !DILocation(line: 2724, column: 8, scope: !17958)
!18009 = !DILocation(line: 2724, column: 16, scope: !17958)
!18010 = !DILocation(line: 2723, column: 40, scope: !17958)
!18011 = !DILocation(line: 2725, column: 8, scope: !17958)
!18012 = !DILocation(line: 2725, column: 16, scope: !17958)
!18013 = !DILocation(line: 2724, column: 28, scope: !17958)
!18014 = !DILocation(line: 2722, column: 21, scope: !17958)
!18015 = !DILocation(line: 2722, column: 2, scope: !17958)
!18016 = !DILocation(line: 2722, column: 9, scope: !17958)
!18017 = !DILocation(line: 2722, column: 19, scope: !17958)
!18018 = !DILocation(line: 2726, column: 21, scope: !17958)
!18019 = !DILocation(line: 2726, column: 29, scope: !17958)
!18020 = !DILocation(line: 2726, column: 2, scope: !17958)
!18021 = !DILocation(line: 2726, column: 9, scope: !17958)
!18022 = !DILocation(line: 2726, column: 19, scope: !17958)
!18023 = !DILocation(line: 2727, column: 23, scope: !17958)
!18024 = !DILocation(line: 2727, column: 31, scope: !17958)
!18025 = !DILocation(line: 2728, column: 9, scope: !17958)
!18026 = !DILocation(line: 2728, column: 17, scope: !17958)
!18027 = !DILocation(line: 2727, column: 58, scope: !17958)
!18028 = !DILocation(line: 2729, column: 9, scope: !17958)
!18029 = !DILocation(line: 2729, column: 17, scope: !17958)
!18030 = !DILocation(line: 2728, column: 46, scope: !17958)
!18031 = !DILocation(line: 2727, column: 22, scope: !17958)
!18032 = !DILocation(line: 2727, column: 2, scope: !17958)
!18033 = !DILocation(line: 2727, column: 9, scope: !17958)
!18034 = !DILocation(line: 2727, column: 20, scope: !17958)
!18035 = !DILocation(line: 2730, column: 29, scope: !17958)
!18036 = !DILocation(line: 2730, column: 37, scope: !17958)
!18037 = !DILocation(line: 2731, column: 8, scope: !17958)
!18038 = !DILocation(line: 2731, column: 16, scope: !17958)
!18039 = !DILocation(line: 2730, column: 56, scope: !17958)
!18040 = !DILocation(line: 2732, column: 8, scope: !17958)
!18041 = !DILocation(line: 2732, column: 16, scope: !17958)
!18042 = !DILocation(line: 2731, column: 27, scope: !17958)
!18043 = !DILocation(line: 2733, column: 8, scope: !17958)
!18044 = !DILocation(line: 2733, column: 16, scope: !17958)
!18045 = !DILocation(line: 2732, column: 37, scope: !17958)
!18046 = !DILocation(line: 2730, column: 28, scope: !17958)
!18047 = !DILocation(line: 2730, column: 2, scope: !17958)
!18048 = !DILocation(line: 2730, column: 9, scope: !17958)
!18049 = !DILocation(line: 2730, column: 26, scope: !17958)
!18050 = !DILocation(line: 2734, column: 26, scope: !17958)
!18051 = !DILocation(line: 2734, column: 34, scope: !17958)
!18052 = !DILocation(line: 2734, column: 2, scope: !17958)
!18053 = !DILocation(line: 2734, column: 9, scope: !17958)
!18054 = !DILocation(line: 2734, column: 24, scope: !17958)
!18055 = !DILocation(line: 2735, column: 25, scope: !17958)
!18056 = !DILocation(line: 2735, column: 33, scope: !17958)
!18057 = !DILocation(line: 2735, column: 2, scope: !17958)
!18058 = !DILocation(line: 2735, column: 9, scope: !17958)
!18059 = !DILocation(line: 2735, column: 23, scope: !17958)
!18060 = !DILocation(line: 2736, column: 27, scope: !17958)
!18061 = !DILocation(line: 2736, column: 35, scope: !17958)
!18062 = !DILocation(line: 2736, column: 2, scope: !17958)
!18063 = !DILocation(line: 2736, column: 9, scope: !17958)
!18064 = !DILocation(line: 2736, column: 25, scope: !17958)
!18065 = !DILocation(line: 2737, column: 26, scope: !17958)
!18066 = !DILocation(line: 2737, column: 34, scope: !17958)
!18067 = !DILocation(line: 2737, column: 2, scope: !17958)
!18068 = !DILocation(line: 2737, column: 9, scope: !17958)
!18069 = !DILocation(line: 2737, column: 24, scope: !17958)
!18070 = !DILocation(line: 2738, column: 29, scope: !17958)
!18071 = !DILocation(line: 2738, column: 37, scope: !17958)
!18072 = !DILocation(line: 2738, column: 2, scope: !17958)
!18073 = !DILocation(line: 2738, column: 9, scope: !17958)
!18074 = !DILocation(line: 2738, column: 27, scope: !17958)
!18075 = !DILocation(line: 2739, column: 29, scope: !17958)
!18076 = !DILocation(line: 2739, column: 37, scope: !17958)
!18077 = !DILocation(line: 2739, column: 2, scope: !17958)
!18078 = !DILocation(line: 2739, column: 9, scope: !17958)
!18079 = !DILocation(line: 2739, column: 27, scope: !17958)
!18080 = !DILocation(line: 2740, column: 26, scope: !17958)
!18081 = !DILocation(line: 2740, column: 34, scope: !17958)
!18082 = !DILocation(line: 2740, column: 2, scope: !17958)
!18083 = !DILocation(line: 2740, column: 9, scope: !17958)
!18084 = !DILocation(line: 2740, column: 24, scope: !17958)
!18085 = !DILocation(line: 2742, column: 9, scope: !17958)
!18086 = !DILocation(line: 2742, column: 2, scope: !17958)
!18087 = distinct !DISubprogram(name: "macb_update_stats", scope: !3, file: !3, line: 807, type: !10392, scopeLine: 808, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!18088 = !DILocalVariable(name: "bp", arg: 1, scope: !18087, file: !3, line: 807, type: !10238)
!18089 = !DILocation(line: 807, column: 44, scope: !18087)
!18090 = !DILocalVariable(name: "p", scope: !18087, file: !3, line: 809, type: !1460)
!18091 = !DILocation(line: 809, column: 7, scope: !18087)
!18092 = !DILocation(line: 809, column: 12, scope: !18087)
!18093 = !DILocation(line: 809, column: 16, scope: !18087)
!18094 = !DILocation(line: 809, column: 25, scope: !18087)
!18095 = !DILocation(line: 809, column: 30, scope: !18087)
!18096 = !DILocalVariable(name: "end", scope: !18087, file: !3, line: 810, type: !1460)
!18097 = !DILocation(line: 810, column: 7, scope: !18087)
!18098 = !DILocation(line: 810, column: 14, scope: !18087)
!18099 = !DILocation(line: 810, column: 18, scope: !18087)
!18100 = !DILocation(line: 810, column: 27, scope: !18087)
!18101 = !DILocation(line: 810, column: 32, scope: !18087)
!18102 = !DILocation(line: 810, column: 48, scope: !18087)
!18103 = !DILocalVariable(name: "offset", scope: !18087, file: !3, line: 811, type: !37)
!18104 = !DILocation(line: 811, column: 6, scope: !18087)
!18105 = !DILocalVariable(name: "__ret_warn_on", scope: !18106, file: !3, line: 813, type: !37)
!18106 = distinct !DILexicalBlock(scope: !18087, file: !3, line: 813, column: 2)
!18107 = !DILocation(line: 813, column: 2, scope: !18106)
!18108 = !DILocation(line: 813, column: 2, scope: !18109)
!18109 = distinct !DILexicalBlock(scope: !18106, file: !3, line: 813, column: 2)
!18110 = !DILocation(line: 813, column: 2, scope: !18111)
!18111 = distinct !DILexicalBlock(scope: !18109, file: !3, line: 813, column: 2)
!18112 = !DILocation(line: 813, column: 2, scope: !18113)
!18113 = distinct !DILexicalBlock(scope: !18111, file: !3, line: 813, column: 2)
!18114 = !DILocation(line: 813, column: 2, scope: !18115)
!18115 = distinct !DILexicalBlock(scope: !18111, file: !3, line: 813, column: 2)
!18116 = !{i32 -2137656765, i32 -2137656736, i32 -2137656690, i32 -2137656632, i32 -2137656578, i32 -2137656524, i32 -2137656469, i32 -2137656438}
!18117 = !DILocation(line: 813, column: 2, scope: !18118)
!18118 = distinct !DILexicalBlock(scope: !18111, file: !3, line: 813, column: 2)
!18119 = !{i32 -2137656016, i32 -2137656009, i32 -2137655957, i32 -2137655926, i32 -2137655896}
!18120 = !DILocation(line: 813, column: 2, scope: !18121)
!18121 = distinct !DILexicalBlock(scope: !18111, file: !3, line: 813, column: 2)
!18122 = !DILocation(line: 815, column: 2, scope: !18087)
!18123 = !DILocation(line: 815, column: 9, scope: !18124)
!18124 = distinct !DILexicalBlock(scope: !18125, file: !3, line: 815, column: 2)
!18125 = distinct !DILexicalBlock(scope: !18087, file: !3, line: 815, column: 2)
!18126 = !DILocation(line: 815, column: 13, scope: !18124)
!18127 = !DILocation(line: 815, column: 11, scope: !18124)
!18128 = !DILocation(line: 815, column: 2, scope: !18125)
!18129 = !DILocation(line: 816, column: 9, scope: !18124)
!18130 = !DILocation(line: 816, column: 13, scope: !18124)
!18131 = !DILocation(line: 816, column: 28, scope: !18124)
!18132 = !DILocation(line: 816, column: 32, scope: !18124)
!18133 = !DILocation(line: 816, column: 4, scope: !18124)
!18134 = !DILocation(line: 816, column: 6, scope: !18124)
!18135 = !DILocation(line: 816, column: 3, scope: !18124)
!18136 = !DILocation(line: 815, column: 19, scope: !18124)
!18137 = !DILocation(line: 815, column: 30, scope: !18124)
!18138 = !DILocation(line: 815, column: 2, scope: !18124)
!18139 = distinct !{!18139, !18128, !18140}
!18140 = !DILocation(line: 816, column: 38, scope: !18125)
!18141 = !DILocation(line: 817, column: 1, scope: !18087)
!18142 = distinct !DISubprogram(name: "gem_update_stats", scope: !3, file: !3, line: 2678, type: !10392, scopeLine: 2679, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!18143 = !DILocalVariable(name: "bp", arg: 1, scope: !18142, file: !3, line: 2678, type: !10238)
!18144 = !DILocation(line: 2678, column: 43, scope: !18142)
!18145 = !DILocalVariable(name: "queue", scope: !18142, file: !3, line: 2680, type: !10234)
!18146 = !DILocation(line: 2680, column: 21, scope: !18142)
!18147 = !DILocalVariable(name: "i", scope: !18142, file: !3, line: 2681, type: !7)
!18148 = !DILocation(line: 2681, column: 15, scope: !18142)
!18149 = !DILocalVariable(name: "q", scope: !18142, file: !3, line: 2681, type: !7)
!18150 = !DILocation(line: 2681, column: 18, scope: !18142)
!18151 = !DILocalVariable(name: "idx", scope: !18142, file: !3, line: 2681, type: !7)
!18152 = !DILocation(line: 2681, column: 21, scope: !18142)
!18153 = !DILocalVariable(name: "stat", scope: !18142, file: !3, line: 2682, type: !2427)
!18154 = !DILocation(line: 2682, column: 17, scope: !18142)
!18155 = !DILocalVariable(name: "p", scope: !18142, file: !3, line: 2684, type: !1460)
!18156 = !DILocation(line: 2684, column: 7, scope: !18142)
!18157 = !DILocation(line: 2684, column: 12, scope: !18142)
!18158 = !DILocation(line: 2684, column: 16, scope: !18142)
!18159 = !DILocation(line: 2684, column: 25, scope: !18142)
!18160 = !DILocation(line: 2684, column: 29, scope: !18142)
!18161 = !DILocation(line: 2686, column: 9, scope: !18162)
!18162 = distinct !DILexicalBlock(scope: !18142, file: !3, line: 2686, column: 2)
!18163 = !DILocation(line: 2686, column: 7, scope: !18162)
!18164 = !DILocation(line: 2686, column: 14, scope: !18165)
!18165 = distinct !DILexicalBlock(scope: !18162, file: !3, line: 2686, column: 2)
!18166 = !DILocation(line: 2686, column: 16, scope: !18165)
!18167 = !DILocation(line: 2686, column: 2, scope: !18162)
!18168 = !DILocalVariable(name: "offset", scope: !18169, file: !3, line: 2687, type: !707)
!18169 = distinct !DILexicalBlock(scope: !18165, file: !3, line: 2686, column: 43)
!18170 = !DILocation(line: 2687, column: 7, scope: !18169)
!18171 = !DILocation(line: 2687, column: 31, scope: !18169)
!18172 = !DILocation(line: 2687, column: 16, scope: !18169)
!18173 = !DILocation(line: 2687, column: 34, scope: !18169)
!18174 = !DILocalVariable(name: "val", scope: !18169, file: !3, line: 2688, type: !336)
!18175 = !DILocation(line: 2688, column: 7, scope: !18169)
!18176 = !DILocation(line: 2688, column: 13, scope: !18169)
!18177 = !DILocation(line: 2688, column: 17, scope: !18169)
!18178 = !DILocation(line: 2688, column: 32, scope: !18169)
!18179 = !DILocation(line: 2688, column: 36, scope: !18169)
!18180 = !DILocation(line: 2690, column: 27, scope: !18169)
!18181 = !DILocation(line: 2690, column: 3, scope: !18169)
!18182 = !DILocation(line: 2690, column: 7, scope: !18169)
!18183 = !DILocation(line: 2690, column: 21, scope: !18169)
!18184 = !DILocation(line: 2690, column: 24, scope: !18169)
!18185 = !DILocation(line: 2691, column: 9, scope: !18169)
!18186 = !DILocation(line: 2691, column: 4, scope: !18169)
!18187 = !DILocation(line: 2691, column: 6, scope: !18169)
!18188 = !DILocation(line: 2693, column: 7, scope: !18189)
!18189 = distinct !DILexicalBlock(scope: !18169, file: !3, line: 2693, column: 7)
!18190 = !DILocation(line: 2693, column: 14, scope: !18189)
!18191 = !DILocation(line: 2693, column: 28, scope: !18189)
!18192 = !DILocation(line: 2693, column: 31, scope: !18189)
!18193 = !DILocation(line: 2693, column: 38, scope: !18189)
!18194 = !DILocation(line: 2693, column: 7, scope: !18169)
!18195 = !DILocation(line: 2695, column: 10, scope: !18196)
!18196 = distinct !DILexicalBlock(scope: !18189, file: !3, line: 2693, column: 53)
!18197 = !DILocation(line: 2695, column: 14, scope: !18196)
!18198 = !DILocation(line: 2695, column: 29, scope: !18196)
!18199 = !DILocation(line: 2695, column: 33, scope: !18196)
!18200 = !DILocation(line: 2695, column: 40, scope: !18196)
!18201 = !DILocation(line: 2695, column: 8, scope: !18196)
!18202 = !DILocation(line: 2696, column: 34, scope: !18196)
!18203 = !DILocation(line: 2696, column: 39, scope: !18196)
!18204 = !DILocation(line: 2696, column: 4, scope: !18196)
!18205 = !DILocation(line: 2696, column: 8, scope: !18196)
!18206 = !DILocation(line: 2696, column: 22, scope: !18196)
!18207 = !DILocation(line: 2696, column: 25, scope: !18196)
!18208 = !DILocation(line: 2697, column: 14, scope: !18196)
!18209 = !DILocation(line: 2697, column: 6, scope: !18196)
!18210 = !DILocation(line: 2697, column: 11, scope: !18196)
!18211 = !DILocation(line: 2698, column: 3, scope: !18196)
!18212 = !DILocation(line: 2699, column: 2, scope: !18169)
!18213 = !DILocation(line: 2686, column: 33, scope: !18165)
!18214 = !DILocation(line: 2686, column: 38, scope: !18165)
!18215 = !DILocation(line: 2686, column: 2, scope: !18165)
!18216 = distinct !{!18216, !18167, !18217}
!18217 = !DILocation(line: 2699, column: 2, scope: !18162)
!18218 = !DILocation(line: 2701, column: 6, scope: !18142)
!18219 = !DILocation(line: 2702, column: 9, scope: !18220)
!18220 = distinct !DILexicalBlock(scope: !18142, file: !3, line: 2702, column: 2)
!18221 = !DILocation(line: 2702, column: 22, scope: !18220)
!18222 = !DILocation(line: 2702, column: 26, scope: !18220)
!18223 = !DILocation(line: 2702, column: 20, scope: !18220)
!18224 = !DILocation(line: 2702, column: 7, scope: !18220)
!18225 = !DILocation(line: 2702, column: 34, scope: !18226)
!18226 = distinct !DILexicalBlock(scope: !18220, file: !3, line: 2702, column: 2)
!18227 = !DILocation(line: 2702, column: 38, scope: !18226)
!18228 = !DILocation(line: 2702, column: 42, scope: !18226)
!18229 = !DILocation(line: 2702, column: 36, scope: !18226)
!18230 = !DILocation(line: 2702, column: 2, scope: !18220)
!18231 = !DILocation(line: 2703, column: 10, scope: !18232)
!18232 = distinct !DILexicalBlock(scope: !18226, file: !3, line: 2703, column: 3)
!18233 = !DILocation(line: 2703, column: 23, scope: !18232)
!18234 = !DILocation(line: 2703, column: 30, scope: !18232)
!18235 = !DILocation(line: 2703, column: 36, scope: !18232)
!18236 = !DILocation(line: 2703, column: 20, scope: !18232)
!18237 = !DILocation(line: 2703, column: 8, scope: !18232)
!18238 = !DILocation(line: 2703, column: 43, scope: !18239)
!18239 = distinct !DILexicalBlock(scope: !18232, file: !3, line: 2703, column: 3)
!18240 = !DILocation(line: 2703, column: 45, scope: !18239)
!18241 = !DILocation(line: 2703, column: 3, scope: !18232)
!18242 = !DILocation(line: 2704, column: 32, scope: !18239)
!18243 = !DILocation(line: 2704, column: 31, scope: !18239)
!18244 = !DILocation(line: 2704, column: 4, scope: !18239)
!18245 = !DILocation(line: 2704, column: 8, scope: !18239)
!18246 = !DILocation(line: 2704, column: 25, scope: !18239)
!18247 = !DILocation(line: 2704, column: 29, scope: !18239)
!18248 = !DILocation(line: 2703, column: 64, scope: !18239)
!18249 = !DILocation(line: 2703, column: 69, scope: !18239)
!18250 = !DILocation(line: 2703, column: 3, scope: !18239)
!18251 = distinct !{!18251, !18241, !18252}
!18252 = !DILocation(line: 2704, column: 32, scope: !18232)
!18253 = !DILocation(line: 2702, column: 54, scope: !18226)
!18254 = !DILocation(line: 2702, column: 59, scope: !18226)
!18255 = !DILocation(line: 2702, column: 2, scope: !18226)
!18256 = distinct !{!18256, !18230, !18257}
!18257 = !DILocation(line: 2704, column: 32, scope: !18220)
!18258 = !DILocation(line: 2705, column: 1, scope: !18142)
!18259 = distinct !DISubprogram(name: "macb_set_txcsum_feature", scope: !3, file: !3, line: 3413, type: !18260, scopeLine: 3415, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!18260 = !DISubroutineType(types: !18261)
!18261 = !{null, !10238, !334}
!18262 = !DILocalVariable(name: "bp", arg: 1, scope: !18259, file: !3, line: 3413, type: !10238)
!18263 = !DILocation(line: 3413, column: 57, scope: !18259)
!18264 = !DILocalVariable(name: "features", arg: 2, scope: !18259, file: !3, line: 3414, type: !334)
!18265 = !DILocation(line: 3414, column: 27, scope: !18259)
!18266 = !DILocalVariable(name: "val", scope: !18259, file: !3, line: 3416, type: !707)
!18267 = !DILocation(line: 3416, column: 6, scope: !18259)
!18268 = !DILocation(line: 3418, column: 19, scope: !18269)
!18269 = distinct !DILexicalBlock(scope: !18259, file: !3, line: 3418, column: 6)
!18270 = !DILocation(line: 3418, column: 7, scope: !18269)
!18271 = !DILocation(line: 3418, column: 6, scope: !18259)
!18272 = !DILocation(line: 3419, column: 3, scope: !18269)
!18273 = !DILocation(line: 3421, column: 8, scope: !18259)
!18274 = !DILocation(line: 3421, column: 6, scope: !18259)
!18275 = !DILocation(line: 3422, column: 6, scope: !18276)
!18276 = distinct !DILexicalBlock(scope: !18259, file: !3, line: 3422, column: 6)
!18277 = !DILocation(line: 3422, column: 15, scope: !18276)
!18278 = !DILocation(line: 3422, column: 6, scope: !18259)
!18279 = !DILocation(line: 3423, column: 7, scope: !18276)
!18280 = !DILocation(line: 3423, column: 3, scope: !18276)
!18281 = !DILocation(line: 3425, column: 7, scope: !18276)
!18282 = !DILocation(line: 3427, column: 2, scope: !18259)
!18283 = !DILocation(line: 3428, column: 1, scope: !18259)
!18284 = distinct !DISubprogram(name: "macb_set_rxcsum_feature", scope: !3, file: !3, line: 3430, type: !18260, scopeLine: 3432, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!18285 = !DILocalVariable(name: "bp", arg: 1, scope: !18284, file: !3, line: 3430, type: !10238)
!18286 = !DILocation(line: 3430, column: 57, scope: !18284)
!18287 = !DILocalVariable(name: "features", arg: 2, scope: !18284, file: !3, line: 3431, type: !334)
!18288 = !DILocation(line: 3431, column: 27, scope: !18284)
!18289 = !DILocalVariable(name: "netdev", scope: !18284, file: !3, line: 3433, type: !295)
!18290 = !DILocation(line: 3433, column: 21, scope: !18284)
!18291 = !DILocation(line: 3433, column: 30, scope: !18284)
!18292 = !DILocation(line: 3433, column: 34, scope: !18284)
!18293 = !DILocalVariable(name: "val", scope: !18284, file: !3, line: 3434, type: !707)
!18294 = !DILocation(line: 3434, column: 6, scope: !18284)
!18295 = !DILocation(line: 3436, column: 19, scope: !18296)
!18296 = distinct !DILexicalBlock(scope: !18284, file: !3, line: 3436, column: 6)
!18297 = !DILocation(line: 3436, column: 7, scope: !18296)
!18298 = !DILocation(line: 3436, column: 6, scope: !18284)
!18299 = !DILocation(line: 3437, column: 3, scope: !18296)
!18300 = !DILocation(line: 3439, column: 8, scope: !18284)
!18301 = !DILocation(line: 3439, column: 6, scope: !18284)
!18302 = !DILocation(line: 3440, column: 7, scope: !18303)
!18303 = distinct !DILexicalBlock(scope: !18284, file: !3, line: 3440, column: 6)
!18304 = !DILocation(line: 3440, column: 16, scope: !18303)
!18305 = !DILocation(line: 3440, column: 34, scope: !18303)
!18306 = !DILocation(line: 3440, column: 39, scope: !18303)
!18307 = !DILocation(line: 3440, column: 47, scope: !18303)
!18308 = !DILocation(line: 3440, column: 53, scope: !18303)
!18309 = !DILocation(line: 3440, column: 6, scope: !18284)
!18310 = !DILocation(line: 3441, column: 7, scope: !18303)
!18311 = !DILocation(line: 3441, column: 3, scope: !18303)
!18312 = !DILocation(line: 3443, column: 7, scope: !18303)
!18313 = !DILocation(line: 3445, column: 2, scope: !18284)
!18314 = !DILocation(line: 3446, column: 1, scope: !18284)
!18315 = distinct !DISubprogram(name: "macb_set_rxflow_feature", scope: !3, file: !3, line: 3448, type: !18260, scopeLine: 3450, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!18316 = !DILocalVariable(name: "bp", arg: 1, scope: !18315, file: !3, line: 3448, type: !10238)
!18317 = !DILocation(line: 3448, column: 57, scope: !18315)
!18318 = !DILocalVariable(name: "features", arg: 2, scope: !18315, file: !3, line: 3449, type: !334)
!18319 = !DILocation(line: 3449, column: 27, scope: !18315)
!18320 = !DILocation(line: 3451, column: 19, scope: !18321)
!18321 = distinct !DILexicalBlock(scope: !18315, file: !3, line: 3451, column: 6)
!18322 = !DILocation(line: 3451, column: 7, scope: !18321)
!18323 = !DILocation(line: 3451, column: 6, scope: !18315)
!18324 = !DILocation(line: 3452, column: 3, scope: !18321)
!18325 = !DILocation(line: 3454, column: 26, scope: !18315)
!18326 = !DILocation(line: 3454, column: 33, scope: !18315)
!18327 = !DILocation(line: 3454, column: 42, scope: !18315)
!18328 = !DILocation(line: 3454, column: 31, scope: !18315)
!18329 = !DILocation(line: 3454, column: 30, scope: !18315)
!18330 = !DILocation(line: 3454, column: 2, scope: !18315)
!18331 = !DILocation(line: 3455, column: 1, scope: !18315)
!18332 = distinct !DISubprogram(name: "gem_enable_flow_filters", scope: !3, file: !3, line: 3059, type: !18333, scopeLine: 3060, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!18333 = !DISubroutineType(types: !18334)
!18334 = !{null, !10238, !540}
!18335 = !DILocalVariable(name: "bp", arg: 1, scope: !18332, file: !3, line: 3059, type: !10238)
!18336 = !DILocation(line: 3059, column: 50, scope: !18332)
!18337 = !DILocalVariable(name: "enable", arg: 2, scope: !18332, file: !3, line: 3059, type: !540)
!18338 = !DILocation(line: 3059, column: 59, scope: !18332)
!18339 = !DILocalVariable(name: "netdev", scope: !18332, file: !3, line: 3061, type: !295)
!18340 = !DILocation(line: 3061, column: 21, scope: !18332)
!18341 = !DILocation(line: 3061, column: 30, scope: !18332)
!18342 = !DILocation(line: 3061, column: 34, scope: !18332)
!18343 = !DILocalVariable(name: "item", scope: !18332, file: !3, line: 3062, type: !10767)
!18344 = !DILocation(line: 3062, column: 29, scope: !18332)
!18345 = !DILocalVariable(name: "t2_scr", scope: !18332, file: !3, line: 3063, type: !707)
!18346 = !DILocation(line: 3063, column: 6, scope: !18332)
!18347 = !DILocalVariable(name: "num_t2_scr", scope: !18332, file: !3, line: 3064, type: !37)
!18348 = !DILocation(line: 3064, column: 6, scope: !18332)
!18349 = !DILocation(line: 3066, column: 8, scope: !18350)
!18350 = distinct !DILexicalBlock(scope: !18332, file: !3, line: 3066, column: 6)
!18351 = !DILocation(line: 3066, column: 16, scope: !18350)
!18352 = !DILocation(line: 3066, column: 25, scope: !18350)
!18353 = !DILocation(line: 3066, column: 6, scope: !18332)
!18354 = !DILocation(line: 3067, column: 3, scope: !18350)
!18355 = !DILocation(line: 3069, column: 15, scope: !18332)
!18356 = !DILocation(line: 3069, column: 13, scope: !18332)
!18357 = !DILocalVariable(name: "__mptr", scope: !18358, file: !3, line: 3071, type: !570)
!18358 = distinct !DILexicalBlock(scope: !18359, file: !3, line: 3071, column: 2)
!18359 = distinct !DILexicalBlock(scope: !18332, file: !3, line: 3071, column: 2)
!18360 = !DILocation(line: 3071, column: 2, scope: !18358)
!18361 = !DILocation(line: 3071, column: 2, scope: !18362)
!18362 = distinct !DILexicalBlock(scope: !18358, file: !3, line: 3071, column: 2)
!18363 = !DILocation(line: 3071, column: 2, scope: !18359)
!18364 = !DILocation(line: 3071, column: 2, scope: !18365)
!18365 = distinct !DILexicalBlock(scope: !18359, file: !3, line: 3071, column: 2)
!18366 = !DILocalVariable(name: "fs", scope: !18367, file: !3, line: 3072, type: !18368)
!18367 = distinct !DILexicalBlock(scope: !18365, file: !3, line: 3071, column: 56)
!18368 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8496, size: 64)
!18369 = !DILocation(line: 3072, column: 32, scope: !18367)
!18370 = !DILocation(line: 3072, column: 38, scope: !18367)
!18371 = !DILocation(line: 3072, column: 44, scope: !18367)
!18372 = !DILocalVariable(name: "tp4sp_m", scope: !18367, file: !3, line: 3073, type: !18373)
!18373 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8503, size: 64)
!18374 = !DILocation(line: 3073, column: 31, scope: !18367)
!18375 = !DILocation(line: 3075, column: 7, scope: !18376)
!18376 = distinct !DILexicalBlock(scope: !18367, file: !3, line: 3075, column: 7)
!18377 = !DILocation(line: 3075, column: 11, scope: !18376)
!18378 = !DILocation(line: 3075, column: 23, scope: !18376)
!18379 = !DILocation(line: 3075, column: 20, scope: !18376)
!18380 = !DILocation(line: 3075, column: 7, scope: !18367)
!18381 = !DILocation(line: 3076, column: 4, scope: !18376)
!18382 = !DILocation(line: 3078, column: 12, scope: !18367)
!18383 = !DILocation(line: 3078, column: 10, scope: !18367)
!18384 = !DILocation(line: 3081, column: 12, scope: !18367)
!18385 = !DILocation(line: 3081, column: 10, scope: !18367)
!18386 = !DILocation(line: 3084, column: 15, scope: !18367)
!18387 = !DILocation(line: 3084, column: 19, scope: !18367)
!18388 = !DILocation(line: 3084, column: 23, scope: !18367)
!18389 = !DILocation(line: 3084, column: 11, scope: !18367)
!18390 = !DILocation(line: 3086, column: 7, scope: !18391)
!18391 = distinct !DILexicalBlock(scope: !18367, file: !3, line: 3086, column: 7)
!18392 = !DILocation(line: 3086, column: 14, scope: !18391)
!18393 = !DILocation(line: 3086, column: 18, scope: !18391)
!18394 = !DILocation(line: 3086, column: 27, scope: !18391)
!18395 = !DILocation(line: 3086, column: 34, scope: !18391)
!18396 = !DILocation(line: 3086, column: 7, scope: !18367)
!18397 = !DILocation(line: 3087, column: 13, scope: !18391)
!18398 = !DILocation(line: 3087, column: 11, scope: !18391)
!18399 = !DILocation(line: 3087, column: 4, scope: !18391)
!18400 = !DILocation(line: 3089, column: 13, scope: !18391)
!18401 = !DILocation(line: 3089, column: 11, scope: !18391)
!18402 = !DILocation(line: 3091, column: 7, scope: !18403)
!18403 = distinct !DILexicalBlock(scope: !18367, file: !3, line: 3091, column: 7)
!18404 = !DILocation(line: 3091, column: 14, scope: !18403)
!18405 = !DILocation(line: 3091, column: 18, scope: !18403)
!18406 = !DILocation(line: 3091, column: 27, scope: !18403)
!18407 = !DILocation(line: 3091, column: 34, scope: !18403)
!18408 = !DILocation(line: 3091, column: 7, scope: !18367)
!18409 = !DILocation(line: 3092, column: 13, scope: !18403)
!18410 = !DILocation(line: 3092, column: 11, scope: !18403)
!18411 = !DILocation(line: 3092, column: 4, scope: !18403)
!18412 = !DILocation(line: 3094, column: 13, scope: !18403)
!18413 = !DILocation(line: 3094, column: 11, scope: !18403)
!18414 = !DILocation(line: 3096, column: 7, scope: !18415)
!18415 = distinct !DILexicalBlock(scope: !18367, file: !3, line: 3096, column: 7)
!18416 = !DILocation(line: 3096, column: 14, scope: !18415)
!18417 = !DILocation(line: 3096, column: 19, scope: !18415)
!18418 = !DILocation(line: 3096, column: 28, scope: !18415)
!18419 = !DILocation(line: 3096, column: 33, scope: !18415)
!18420 = !DILocation(line: 3096, column: 44, scope: !18415)
!18421 = !DILocation(line: 3096, column: 48, scope: !18415)
!18422 = !DILocation(line: 3096, column: 57, scope: !18415)
!18423 = !DILocation(line: 3096, column: 62, scope: !18415)
!18424 = !DILocation(line: 3096, column: 7, scope: !18367)
!18425 = !DILocation(line: 3097, column: 13, scope: !18415)
!18426 = !DILocation(line: 3097, column: 11, scope: !18415)
!18427 = !DILocation(line: 3097, column: 4, scope: !18415)
!18428 = !DILocation(line: 3099, column: 13, scope: !18415)
!18429 = !DILocation(line: 3099, column: 11, scope: !18415)
!18430 = !DILocation(line: 3101, column: 3, scope: !18367)
!18431 = !DILocation(line: 3102, column: 2, scope: !18367)
!18432 = !DILocalVariable(name: "__mptr", scope: !18433, file: !3, line: 3071, type: !570)
!18433 = distinct !DILexicalBlock(scope: !18365, file: !3, line: 3071, column: 2)
!18434 = !DILocation(line: 3071, column: 2, scope: !18433)
!18435 = !DILocation(line: 3071, column: 2, scope: !18436)
!18436 = distinct !DILexicalBlock(scope: !18433, file: !3, line: 3071, column: 2)
!18437 = distinct !{!18437, !18363, !18438}
!18438 = !DILocation(line: 3102, column: 2, scope: !18359)
!18439 = !DILocation(line: 3103, column: 1, scope: !18332)
!18440 = distinct !DISubprogram(name: "kzalloc", scope: !10024, file: !10024, line: 662, type: !15788, scopeLine: 663, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!18441 = !DILocation(line: 445, column: 72, scope: !15780, inlinedAt: !18442)
!18442 = distinct !DILocation(line: 552, column: 10, scope: !15785, inlinedAt: !18443)
!18443 = distinct !DILocation(line: 664, column: 9, scope: !18440)
!18444 = !DILocation(line: 446, column: 9, scope: !15780, inlinedAt: !18442)
!18445 = !DILocation(line: 446, column: 23, scope: !15780, inlinedAt: !18442)
!18446 = !DILocation(line: 448, column: 8, scope: !15780, inlinedAt: !18442)
!18447 = !DILocation(line: 318, column: 67, scope: !15801, inlinedAt: !18448)
!18448 = distinct !DILocation(line: 553, column: 20, scope: !15785, inlinedAt: !18443)
!18449 = !DILocation(line: 346, column: 58, scope: !15807, inlinedAt: !18450)
!18450 = distinct !DILocation(line: 547, column: 11, scope: !15785, inlinedAt: !18443)
!18451 = !DILocation(line: 472, column: 28, scope: !15813, inlinedAt: !18452)
!18452 = distinct !DILocation(line: 481, column: 9, scope: !15818, inlinedAt: !18453)
!18453 = distinct !DILocation(line: 545, column: 11, scope: !15820, inlinedAt: !18443)
!18454 = !DILocation(line: 472, column: 40, scope: !15813, inlinedAt: !18452)
!18455 = !DILocation(line: 472, column: 60, scope: !15813, inlinedAt: !18452)
!18456 = !DILocation(line: 478, column: 51, scope: !15818, inlinedAt: !18453)
!18457 = !DILocation(line: 478, column: 63, scope: !15818, inlinedAt: !18453)
!18458 = !DILocation(line: 480, column: 15, scope: !15818, inlinedAt: !18453)
!18459 = !DILocation(line: 538, column: 45, scope: !15787, inlinedAt: !18443)
!18460 = !DILocation(line: 538, column: 57, scope: !15787, inlinedAt: !18443)
!18461 = !DILocation(line: 542, column: 16, scope: !15785, inlinedAt: !18443)
!18462 = !DILocalVariable(name: "size", arg: 1, scope: !18440, file: !10024, line: 662, type: !594)
!18463 = !DILocation(line: 662, column: 36, scope: !18440)
!18464 = !DILocalVariable(name: "flags", arg: 2, scope: !18440, file: !10024, line: 662, type: !1990)
!18465 = !DILocation(line: 662, column: 48, scope: !18440)
!18466 = !DILocation(line: 664, column: 17, scope: !18440)
!18467 = !DILocation(line: 664, column: 23, scope: !18440)
!18468 = !DILocation(line: 664, column: 29, scope: !18440)
!18469 = !DILocation(line: 540, column: 27, scope: !15786, inlinedAt: !18443)
!18470 = !DILocation(line: 540, column: 6, scope: !15786, inlinedAt: !18443)
!18471 = !DILocation(line: 540, column: 6, scope: !15787, inlinedAt: !18443)
!18472 = !DILocation(line: 544, column: 7, scope: !15820, inlinedAt: !18443)
!18473 = !DILocation(line: 544, column: 12, scope: !15820, inlinedAt: !18443)
!18474 = !DILocation(line: 544, column: 7, scope: !15785, inlinedAt: !18443)
!18475 = !DILocation(line: 545, column: 25, scope: !15820, inlinedAt: !18443)
!18476 = !DILocation(line: 545, column: 31, scope: !15820, inlinedAt: !18443)
!18477 = !DILocation(line: 480, column: 33, scope: !15818, inlinedAt: !18453)
!18478 = !DILocation(line: 480, column: 23, scope: !15818, inlinedAt: !18453)
!18479 = !DILocation(line: 481, column: 29, scope: !15818, inlinedAt: !18453)
!18480 = !DILocation(line: 481, column: 35, scope: !15818, inlinedAt: !18453)
!18481 = !DILocation(line: 481, column: 42, scope: !15818, inlinedAt: !18453)
!18482 = !DILocation(line: 474, column: 23, scope: !15813, inlinedAt: !18452)
!18483 = !DILocation(line: 474, column: 29, scope: !15813, inlinedAt: !18452)
!18484 = !DILocation(line: 474, column: 36, scope: !15813, inlinedAt: !18452)
!18485 = !DILocation(line: 474, column: 9, scope: !15813, inlinedAt: !18452)
!18486 = !DILocation(line: 545, column: 4, scope: !15820, inlinedAt: !18443)
!18487 = !DILocation(line: 547, column: 25, scope: !15785, inlinedAt: !18443)
!18488 = !DILocation(line: 348, column: 7, scope: !15900, inlinedAt: !18450)
!18489 = !DILocation(line: 348, column: 6, scope: !15807, inlinedAt: !18450)
!18490 = !DILocation(line: 349, column: 3, scope: !15900, inlinedAt: !18450)
!18491 = !DILocation(line: 351, column: 6, scope: !15904, inlinedAt: !18450)
!18492 = !DILocation(line: 351, column: 11, scope: !15904, inlinedAt: !18450)
!18493 = !DILocation(line: 351, column: 6, scope: !15807, inlinedAt: !18450)
!18494 = !DILocation(line: 352, column: 3, scope: !15904, inlinedAt: !18450)
!18495 = !DILocation(line: 354, column: 32, scope: !15909, inlinedAt: !18450)
!18496 = !DILocation(line: 354, column: 37, scope: !15909, inlinedAt: !18450)
!18497 = !DILocation(line: 354, column: 42, scope: !15909, inlinedAt: !18450)
!18498 = !DILocation(line: 354, column: 45, scope: !15909, inlinedAt: !18450)
!18499 = !DILocation(line: 354, column: 50, scope: !15909, inlinedAt: !18450)
!18500 = !DILocation(line: 354, column: 6, scope: !15807, inlinedAt: !18450)
!18501 = !DILocation(line: 355, column: 3, scope: !15909, inlinedAt: !18450)
!18502 = !DILocation(line: 356, column: 32, scope: !15917, inlinedAt: !18450)
!18503 = !DILocation(line: 356, column: 37, scope: !15917, inlinedAt: !18450)
!18504 = !DILocation(line: 356, column: 43, scope: !15917, inlinedAt: !18450)
!18505 = !DILocation(line: 356, column: 46, scope: !15917, inlinedAt: !18450)
!18506 = !DILocation(line: 356, column: 51, scope: !15917, inlinedAt: !18450)
!18507 = !DILocation(line: 356, column: 6, scope: !15807, inlinedAt: !18450)
!18508 = !DILocation(line: 357, column: 3, scope: !15917, inlinedAt: !18450)
!18509 = !DILocation(line: 358, column: 6, scope: !15925, inlinedAt: !18450)
!18510 = !DILocation(line: 358, column: 11, scope: !15925, inlinedAt: !18450)
!18511 = !DILocation(line: 358, column: 6, scope: !15807, inlinedAt: !18450)
!18512 = !DILocation(line: 358, column: 26, scope: !15925, inlinedAt: !18450)
!18513 = !DILocation(line: 359, column: 6, scope: !15930, inlinedAt: !18450)
!18514 = !DILocation(line: 359, column: 11, scope: !15930, inlinedAt: !18450)
!18515 = !DILocation(line: 359, column: 6, scope: !15807, inlinedAt: !18450)
!18516 = !DILocation(line: 359, column: 26, scope: !15930, inlinedAt: !18450)
!18517 = !DILocation(line: 360, column: 6, scope: !15935, inlinedAt: !18450)
!18518 = !DILocation(line: 360, column: 11, scope: !15935, inlinedAt: !18450)
!18519 = !DILocation(line: 360, column: 6, scope: !15807, inlinedAt: !18450)
!18520 = !DILocation(line: 360, column: 26, scope: !15935, inlinedAt: !18450)
!18521 = !DILocation(line: 361, column: 6, scope: !15940, inlinedAt: !18450)
!18522 = !DILocation(line: 361, column: 11, scope: !15940, inlinedAt: !18450)
!18523 = !DILocation(line: 361, column: 6, scope: !15807, inlinedAt: !18450)
!18524 = !DILocation(line: 361, column: 26, scope: !15940, inlinedAt: !18450)
!18525 = !DILocation(line: 362, column: 6, scope: !15945, inlinedAt: !18450)
!18526 = !DILocation(line: 362, column: 11, scope: !15945, inlinedAt: !18450)
!18527 = !DILocation(line: 362, column: 6, scope: !15807, inlinedAt: !18450)
!18528 = !DILocation(line: 362, column: 26, scope: !15945, inlinedAt: !18450)
!18529 = !DILocation(line: 363, column: 6, scope: !15950, inlinedAt: !18450)
!18530 = !DILocation(line: 363, column: 11, scope: !15950, inlinedAt: !18450)
!18531 = !DILocation(line: 363, column: 6, scope: !15807, inlinedAt: !18450)
!18532 = !DILocation(line: 363, column: 26, scope: !15950, inlinedAt: !18450)
!18533 = !DILocation(line: 364, column: 6, scope: !15955, inlinedAt: !18450)
!18534 = !DILocation(line: 364, column: 11, scope: !15955, inlinedAt: !18450)
!18535 = !DILocation(line: 364, column: 6, scope: !15807, inlinedAt: !18450)
!18536 = !DILocation(line: 364, column: 26, scope: !15955, inlinedAt: !18450)
!18537 = !DILocation(line: 365, column: 6, scope: !15960, inlinedAt: !18450)
!18538 = !DILocation(line: 365, column: 11, scope: !15960, inlinedAt: !18450)
!18539 = !DILocation(line: 365, column: 6, scope: !15807, inlinedAt: !18450)
!18540 = !DILocation(line: 365, column: 26, scope: !15960, inlinedAt: !18450)
!18541 = !DILocation(line: 366, column: 6, scope: !15965, inlinedAt: !18450)
!18542 = !DILocation(line: 366, column: 11, scope: !15965, inlinedAt: !18450)
!18543 = !DILocation(line: 366, column: 6, scope: !15807, inlinedAt: !18450)
!18544 = !DILocation(line: 366, column: 26, scope: !15965, inlinedAt: !18450)
!18545 = !DILocation(line: 367, column: 6, scope: !15970, inlinedAt: !18450)
!18546 = !DILocation(line: 367, column: 11, scope: !15970, inlinedAt: !18450)
!18547 = !DILocation(line: 367, column: 6, scope: !15807, inlinedAt: !18450)
!18548 = !DILocation(line: 367, column: 26, scope: !15970, inlinedAt: !18450)
!18549 = !DILocation(line: 368, column: 6, scope: !15975, inlinedAt: !18450)
!18550 = !DILocation(line: 368, column: 11, scope: !15975, inlinedAt: !18450)
!18551 = !DILocation(line: 368, column: 6, scope: !15807, inlinedAt: !18450)
!18552 = !DILocation(line: 368, column: 26, scope: !15975, inlinedAt: !18450)
!18553 = !DILocation(line: 369, column: 6, scope: !15980, inlinedAt: !18450)
!18554 = !DILocation(line: 369, column: 11, scope: !15980, inlinedAt: !18450)
!18555 = !DILocation(line: 369, column: 6, scope: !15807, inlinedAt: !18450)
!18556 = !DILocation(line: 369, column: 26, scope: !15980, inlinedAt: !18450)
!18557 = !DILocation(line: 370, column: 6, scope: !15985, inlinedAt: !18450)
!18558 = !DILocation(line: 370, column: 11, scope: !15985, inlinedAt: !18450)
!18559 = !DILocation(line: 370, column: 6, scope: !15807, inlinedAt: !18450)
!18560 = !DILocation(line: 370, column: 26, scope: !15985, inlinedAt: !18450)
!18561 = !DILocation(line: 371, column: 6, scope: !15990, inlinedAt: !18450)
!18562 = !DILocation(line: 371, column: 11, scope: !15990, inlinedAt: !18450)
!18563 = !DILocation(line: 371, column: 6, scope: !15807, inlinedAt: !18450)
!18564 = !DILocation(line: 371, column: 26, scope: !15990, inlinedAt: !18450)
!18565 = !DILocation(line: 372, column: 6, scope: !15995, inlinedAt: !18450)
!18566 = !DILocation(line: 372, column: 11, scope: !15995, inlinedAt: !18450)
!18567 = !DILocation(line: 372, column: 6, scope: !15807, inlinedAt: !18450)
!18568 = !DILocation(line: 372, column: 26, scope: !15995, inlinedAt: !18450)
!18569 = !DILocation(line: 373, column: 6, scope: !16000, inlinedAt: !18450)
!18570 = !DILocation(line: 373, column: 11, scope: !16000, inlinedAt: !18450)
!18571 = !DILocation(line: 373, column: 6, scope: !15807, inlinedAt: !18450)
!18572 = !DILocation(line: 373, column: 26, scope: !16000, inlinedAt: !18450)
!18573 = !DILocation(line: 374, column: 6, scope: !16005, inlinedAt: !18450)
!18574 = !DILocation(line: 374, column: 11, scope: !16005, inlinedAt: !18450)
!18575 = !DILocation(line: 374, column: 6, scope: !15807, inlinedAt: !18450)
!18576 = !DILocation(line: 374, column: 26, scope: !16005, inlinedAt: !18450)
!18577 = !DILocation(line: 375, column: 6, scope: !16010, inlinedAt: !18450)
!18578 = !DILocation(line: 375, column: 11, scope: !16010, inlinedAt: !18450)
!18579 = !DILocation(line: 375, column: 6, scope: !15807, inlinedAt: !18450)
!18580 = !DILocation(line: 375, column: 27, scope: !16010, inlinedAt: !18450)
!18581 = !DILocation(line: 376, column: 6, scope: !16015, inlinedAt: !18450)
!18582 = !DILocation(line: 376, column: 11, scope: !16015, inlinedAt: !18450)
!18583 = !DILocation(line: 376, column: 6, scope: !15807, inlinedAt: !18450)
!18584 = !DILocation(line: 376, column: 32, scope: !16015, inlinedAt: !18450)
!18585 = !DILocation(line: 377, column: 6, scope: !16020, inlinedAt: !18450)
!18586 = !DILocation(line: 377, column: 11, scope: !16020, inlinedAt: !18450)
!18587 = !DILocation(line: 377, column: 6, scope: !15807, inlinedAt: !18450)
!18588 = !DILocation(line: 377, column: 32, scope: !16020, inlinedAt: !18450)
!18589 = !DILocation(line: 378, column: 6, scope: !16025, inlinedAt: !18450)
!18590 = !DILocation(line: 378, column: 11, scope: !16025, inlinedAt: !18450)
!18591 = !DILocation(line: 378, column: 6, scope: !15807, inlinedAt: !18450)
!18592 = !DILocation(line: 378, column: 32, scope: !16025, inlinedAt: !18450)
!18593 = !DILocation(line: 379, column: 6, scope: !16030, inlinedAt: !18450)
!18594 = !DILocation(line: 379, column: 11, scope: !16030, inlinedAt: !18450)
!18595 = !DILocation(line: 379, column: 6, scope: !15807, inlinedAt: !18450)
!18596 = !DILocation(line: 379, column: 33, scope: !16030, inlinedAt: !18450)
!18597 = !DILocation(line: 380, column: 6, scope: !16035, inlinedAt: !18450)
!18598 = !DILocation(line: 380, column: 11, scope: !16035, inlinedAt: !18450)
!18599 = !DILocation(line: 380, column: 6, scope: !15807, inlinedAt: !18450)
!18600 = !DILocation(line: 380, column: 33, scope: !16035, inlinedAt: !18450)
!18601 = !DILocation(line: 381, column: 6, scope: !16040, inlinedAt: !18450)
!18602 = !DILocation(line: 381, column: 11, scope: !16040, inlinedAt: !18450)
!18603 = !DILocation(line: 381, column: 6, scope: !15807, inlinedAt: !18450)
!18604 = !DILocation(line: 381, column: 33, scope: !16040, inlinedAt: !18450)
!18605 = !DILocation(line: 382, column: 2, scope: !16045, inlinedAt: !18450)
!18606 = !DILocation(line: 382, column: 2, scope: !16049, inlinedAt: !18450)
!18607 = !DILocation(line: 382, column: 2, scope: !16050, inlinedAt: !18450)
!18608 = !DILocation(line: 386, column: 1, scope: !15807, inlinedAt: !18450)
!18609 = !DILocation(line: 547, column: 9, scope: !15785, inlinedAt: !18443)
!18610 = !DILocation(line: 549, column: 8, scope: !16056, inlinedAt: !18443)
!18611 = !DILocation(line: 549, column: 7, scope: !15785, inlinedAt: !18443)
!18612 = !DILocation(line: 550, column: 4, scope: !16056, inlinedAt: !18443)
!18613 = !DILocation(line: 553, column: 33, scope: !15785, inlinedAt: !18443)
!18614 = !DILocation(line: 325, column: 6, scope: !16061, inlinedAt: !18448)
!18615 = !DILocation(line: 325, column: 6, scope: !15801, inlinedAt: !18448)
!18616 = !DILocation(line: 326, column: 3, scope: !16061, inlinedAt: !18448)
!18617 = !DILocation(line: 332, column: 9, scope: !15801, inlinedAt: !18448)
!18618 = !DILocation(line: 332, column: 15, scope: !15801, inlinedAt: !18448)
!18619 = !DILocation(line: 332, column: 2, scope: !15801, inlinedAt: !18448)
!18620 = !DILocation(line: 336, column: 1, scope: !15801, inlinedAt: !18448)
!18621 = !DILocation(line: 553, column: 5, scope: !15785, inlinedAt: !18443)
!18622 = !DILocation(line: 553, column: 41, scope: !15785, inlinedAt: !18443)
!18623 = !DILocation(line: 554, column: 5, scope: !15785, inlinedAt: !18443)
!18624 = !DILocation(line: 554, column: 12, scope: !15785, inlinedAt: !18443)
!18625 = !DILocation(line: 448, column: 31, scope: !15780, inlinedAt: !18442)
!18626 = !DILocation(line: 448, column: 34, scope: !15780, inlinedAt: !18442)
!18627 = !DILocation(line: 448, column: 14, scope: !15780, inlinedAt: !18442)
!18628 = !DILocation(line: 450, column: 22, scope: !15780, inlinedAt: !18442)
!18629 = !DILocation(line: 450, column: 25, scope: !15780, inlinedAt: !18442)
!18630 = !DILocation(line: 450, column: 30, scope: !15780, inlinedAt: !18442)
!18631 = !DILocation(line: 450, column: 36, scope: !15780, inlinedAt: !18442)
!18632 = !DILocation(line: 450, column: 8, scope: !15780, inlinedAt: !18442)
!18633 = !DILocation(line: 450, column: 6, scope: !15780, inlinedAt: !18442)
!18634 = !DILocation(line: 451, column: 9, scope: !15780, inlinedAt: !18442)
!18635 = !DILocation(line: 552, column: 3, scope: !15785, inlinedAt: !18443)
!18636 = !DILocation(line: 557, column: 19, scope: !15787, inlinedAt: !18443)
!18637 = !DILocation(line: 557, column: 25, scope: !15787, inlinedAt: !18443)
!18638 = !DILocation(line: 557, column: 9, scope: !15787, inlinedAt: !18443)
!18639 = !DILocation(line: 557, column: 2, scope: !15787, inlinedAt: !18443)
!18640 = !DILocation(line: 558, column: 1, scope: !15787, inlinedAt: !18443)
!18641 = !DILocation(line: 664, column: 2, scope: !18440)
!18642 = distinct !DISubprogram(name: "macb_rx_desc", scope: !3, file: !3, line: 211, type: !14421, scopeLine: 212, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!18643 = !DILocalVariable(name: "queue", arg: 1, scope: !18642, file: !3, line: 211, type: !10234)
!18644 = !DILocation(line: 211, column: 62, scope: !18642)
!18645 = !DILocalVariable(name: "index", arg: 2, scope: !18642, file: !3, line: 211, type: !7)
!18646 = !DILocation(line: 211, column: 82, scope: !18642)
!18647 = !DILocation(line: 213, column: 28, scope: !18642)
!18648 = !DILocation(line: 213, column: 35, scope: !18642)
!18649 = !DILocation(line: 213, column: 39, scope: !18642)
!18650 = !DILocation(line: 213, column: 10, scope: !18642)
!18651 = !DILocation(line: 213, column: 8, scope: !18642)
!18652 = !DILocation(line: 214, column: 32, scope: !18642)
!18653 = !DILocation(line: 214, column: 39, scope: !18642)
!18654 = !DILocation(line: 214, column: 43, scope: !18642)
!18655 = !DILocation(line: 214, column: 10, scope: !18642)
!18656 = !DILocation(line: 214, column: 8, scope: !18642)
!18657 = !DILocation(line: 215, column: 10, scope: !18642)
!18658 = !DILocation(line: 215, column: 17, scope: !18642)
!18659 = !DILocation(line: 215, column: 25, scope: !18642)
!18660 = !DILocation(line: 215, column: 2, scope: !18642)
!18661 = distinct !DISubprogram(name: "macb_get_addr", scope: !3, file: !3, line: 875, type: !18662, scopeLine: 876, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!18662 = !DISubroutineType(types: !18663)
!18663 = !{!7084, !10238, !10636}
!18664 = !DILocalVariable(name: "bp", arg: 1, scope: !18661, file: !3, line: 875, type: !10238)
!18665 = !DILocation(line: 875, column: 46, scope: !18661)
!18666 = !DILocalVariable(name: "desc", arg: 2, scope: !18661, file: !3, line: 875, type: !10636)
!18667 = !DILocation(line: 875, column: 72, scope: !18661)
!18668 = !DILocalVariable(name: "addr", scope: !18661, file: !3, line: 877, type: !7084)
!18669 = !DILocation(line: 877, column: 13, scope: !18661)
!18670 = !DILocalVariable(name: "desc_64", scope: !18661, file: !3, line: 879, type: !10704)
!18671 = !DILocation(line: 879, column: 27, scope: !18661)
!18672 = !DILocation(line: 881, column: 6, scope: !18673)
!18673 = distinct !DILexicalBlock(scope: !18661, file: !3, line: 881, column: 6)
!18674 = !DILocation(line: 881, column: 10, scope: !18673)
!18675 = !DILocation(line: 881, column: 21, scope: !18673)
!18676 = !DILocation(line: 881, column: 6, scope: !18661)
!18677 = !DILocation(line: 882, column: 27, scope: !18678)
!18678 = distinct !DILexicalBlock(scope: !18673, file: !3, line: 881, column: 39)
!18679 = !DILocation(line: 882, column: 31, scope: !18678)
!18680 = !DILocation(line: 882, column: 13, scope: !18678)
!18681 = !DILocation(line: 882, column: 11, scope: !18678)
!18682 = !DILocation(line: 883, column: 17, scope: !18678)
!18683 = !DILocation(line: 883, column: 26, scope: !18678)
!18684 = !DILocation(line: 883, column: 11, scope: !18678)
!18685 = !DILocation(line: 883, column: 33, scope: !18678)
!18686 = !DILocation(line: 883, column: 8, scope: !18678)
!18687 = !DILocation(line: 884, column: 2, scope: !18678)
!18688 = !DILocation(line: 886, column: 10, scope: !18661)
!18689 = !DILocation(line: 886, column: 7, scope: !18661)
!18690 = !DILocation(line: 887, column: 9, scope: !18661)
!18691 = !DILocation(line: 887, column: 2, scope: !18661)
!18692 = distinct !DISubprogram(name: "macb_rx_ring_wrap", scope: !3, file: !3, line: 206, type: !14555, scopeLine: 207, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!18693 = !DILocalVariable(name: "bp", arg: 1, scope: !18692, file: !3, line: 206, type: !10238)
!18694 = !DILocation(line: 206, column: 52, scope: !18692)
!18695 = !DILocalVariable(name: "index", arg: 2, scope: !18692, file: !3, line: 206, type: !7)
!18696 = !DILocation(line: 206, column: 69, scope: !18692)
!18697 = !DILocation(line: 208, column: 9, scope: !18692)
!18698 = !DILocation(line: 208, column: 18, scope: !18692)
!18699 = !DILocation(line: 208, column: 22, scope: !18692)
!18700 = !DILocation(line: 208, column: 35, scope: !18692)
!18701 = !DILocation(line: 208, column: 15, scope: !18692)
!18702 = !DILocation(line: 208, column: 2, scope: !18692)
!18703 = distinct !DISubprogram(name: "gem_rx_refill", scope: !3, file: !3, line: 1080, type: !14133, scopeLine: 1081, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!18704 = !DILocalVariable(name: "queue", arg: 1, scope: !18703, file: !3, line: 1080, type: !10234)
!18705 = !DILocation(line: 1080, column: 46, scope: !18703)
!18706 = !DILocalVariable(name: "entry", scope: !18703, file: !3, line: 1082, type: !7)
!18707 = !DILocation(line: 1082, column: 16, scope: !18703)
!18708 = !DILocalVariable(name: "skb", scope: !18703, file: !3, line: 1083, type: !420)
!18709 = !DILocation(line: 1083, column: 19, scope: !18703)
!18710 = !DILocalVariable(name: "paddr", scope: !18703, file: !3, line: 1084, type: !7084)
!18711 = !DILocation(line: 1084, column: 14, scope: !18703)
!18712 = !DILocalVariable(name: "bp", scope: !18703, file: !3, line: 1085, type: !10238)
!18713 = !DILocation(line: 1085, column: 15, scope: !18703)
!18714 = !DILocation(line: 1085, column: 20, scope: !18703)
!18715 = !DILocation(line: 1085, column: 27, scope: !18703)
!18716 = !DILocalVariable(name: "desc", scope: !18703, file: !3, line: 1086, type: !10636)
!18717 = !DILocation(line: 1086, column: 24, scope: !18703)
!18718 = !DILocation(line: 1088, column: 2, scope: !18703)
!18719 = !DILocation(line: 1088, column: 9, scope: !18703)
!18720 = !DILocation(line: 1089, column: 22, scope: !18703)
!18721 = !DILocation(line: 1090, column: 29, scope: !18722)
!18722 = distinct !DILexicalBlock(scope: !18703, file: !3, line: 1089, column: 27)
!18723 = !DILocation(line: 1090, column: 33, scope: !18722)
!18724 = !DILocation(line: 1090, column: 40, scope: !18722)
!18725 = !DILocation(line: 1090, column: 11, scope: !18722)
!18726 = !DILocation(line: 1090, column: 9, scope: !18722)
!18727 = !DILocation(line: 1093, column: 3, scope: !18722)
!18728 = !{i32 -2137648091}
!18729 = !DILocation(line: 1095, column: 3, scope: !18722)
!18730 = !DILocation(line: 1095, column: 10, scope: !18722)
!18731 = !DILocation(line: 1095, column: 26, scope: !18722)
!18732 = !DILocation(line: 1096, column: 23, scope: !18722)
!18733 = !DILocation(line: 1096, column: 30, scope: !18722)
!18734 = !DILocation(line: 1096, column: 10, scope: !18722)
!18735 = !DILocation(line: 1096, column: 8, scope: !18722)
!18736 = !DILocation(line: 1098, column: 8, scope: !18737)
!18737 = distinct !DILexicalBlock(scope: !18722, file: !3, line: 1098, column: 7)
!18738 = !DILocation(line: 1098, column: 15, scope: !18737)
!18739 = !DILocation(line: 1098, column: 25, scope: !18737)
!18740 = !DILocation(line: 1098, column: 7, scope: !18722)
!18741 = !DILocation(line: 1100, column: 27, scope: !18742)
!18742 = distinct !DILexicalBlock(scope: !18737, file: !3, line: 1098, column: 33)
!18743 = !DILocation(line: 1100, column: 31, scope: !18742)
!18744 = !DILocation(line: 1100, column: 36, scope: !18742)
!18745 = !DILocation(line: 1100, column: 40, scope: !18742)
!18746 = !DILocation(line: 1100, column: 10, scope: !18742)
!18747 = !DILocation(line: 1100, column: 8, scope: !18742)
!18748 = !DILocation(line: 1101, column: 8, scope: !18749)
!18749 = distinct !DILexicalBlock(scope: !18742, file: !3, line: 1101, column: 8)
!18750 = !DILocation(line: 1101, column: 8, scope: !18742)
!18751 = !DILocation(line: 1102, column: 16, scope: !18752)
!18752 = distinct !DILexicalBlock(scope: !18749, file: !3, line: 1101, column: 24)
!18753 = !DILocation(line: 1102, column: 20, scope: !18752)
!18754 = !DILocation(line: 1102, column: 5, scope: !18752)
!18755 = !DILocation(line: 1104, column: 5, scope: !18752)
!18756 = !DILocation(line: 1108, column: 12, scope: !18742)
!18757 = !DILocation(line: 1108, column: 10, scope: !18742)
!18758 = !DILocation(line: 1111, column: 27, scope: !18759)
!18759 = distinct !DILexicalBlock(scope: !18742, file: !3, line: 1111, column: 8)
!18760 = !DILocation(line: 1111, column: 31, scope: !18759)
!18761 = !DILocation(line: 1111, column: 37, scope: !18759)
!18762 = !DILocation(line: 1111, column: 42, scope: !18759)
!18763 = !DILocation(line: 1111, column: 8, scope: !18759)
!18764 = !DILocation(line: 1111, column: 8, scope: !18742)
!18765 = !DILocation(line: 1112, column: 5, scope: !18766)
!18766 = distinct !DILexicalBlock(scope: !18759, file: !3, line: 1111, column: 50)
!18767 = !DILocation(line: 1113, column: 5, scope: !18766)
!18768 = !DILocation(line: 1116, column: 30, scope: !18742)
!18769 = !DILocation(line: 1116, column: 4, scope: !18742)
!18770 = !DILocation(line: 1116, column: 11, scope: !18742)
!18771 = !DILocation(line: 1116, column: 21, scope: !18742)
!18772 = !DILocation(line: 1116, column: 28, scope: !18742)
!18773 = !DILocation(line: 1118, column: 8, scope: !18774)
!18774 = distinct !DILexicalBlock(scope: !18742, file: !3, line: 1118, column: 8)
!18775 = !DILocation(line: 1118, column: 17, scope: !18774)
!18776 = !DILocation(line: 1118, column: 21, scope: !18774)
!18777 = !DILocation(line: 1118, column: 34, scope: !18774)
!18778 = !DILocation(line: 1118, column: 14, scope: !18774)
!18779 = !DILocation(line: 1118, column: 8, scope: !18742)
!18780 = !DILocation(line: 1119, column: 11, scope: !18774)
!18781 = !DILocation(line: 1119, column: 5, scope: !18774)
!18782 = !DILocation(line: 1120, column: 4, scope: !18742)
!18783 = !DILocation(line: 1120, column: 10, scope: !18742)
!18784 = !DILocation(line: 1120, column: 15, scope: !18742)
!18785 = !DILocation(line: 1124, column: 4, scope: !18742)
!18786 = !{i32 -2137647834}
!18787 = !DILocation(line: 1125, column: 18, scope: !18742)
!18788 = !DILocation(line: 1125, column: 22, scope: !18742)
!18789 = !DILocation(line: 1125, column: 28, scope: !18742)
!18790 = !DILocation(line: 1125, column: 4, scope: !18742)
!18791 = !DILocation(line: 1128, column: 16, scope: !18742)
!18792 = !DILocation(line: 1128, column: 4, scope: !18742)
!18793 = !DILocation(line: 1129, column: 3, scope: !18742)
!18794 = !DILocation(line: 1130, column: 4, scope: !18795)
!18795 = distinct !DILexicalBlock(scope: !18737, file: !3, line: 1129, column: 10)
!18796 = !DILocation(line: 1130, column: 10, scope: !18795)
!18797 = !DILocation(line: 1130, column: 15, scope: !18795)
!18798 = !DILocation(line: 1131, column: 4, scope: !18795)
!18799 = !{i32 -2137647784}
!18800 = !DILocation(line: 1132, column: 4, scope: !18795)
!18801 = !DILocation(line: 1132, column: 10, scope: !18795)
!18802 = !DILocation(line: 1132, column: 15, scope: !18795)
!18803 = distinct !{!18803, !18718, !18804}
!18804 = !DILocation(line: 1134, column: 2, scope: !18703)
!18805 = !DILocation(line: 1137, column: 2, scope: !18703)
!18806 = !{i32 -2137647696}
!18807 = !DILocation(line: 1139, column: 2, scope: !18808)
!18808 = distinct !DILexicalBlock(scope: !18809, file: !3, line: 1139, column: 2)
!18809 = distinct !DILexicalBlock(scope: !18703, file: !3, line: 1139, column: 2)
!18810 = !DILocation(line: 1139, column: 2, scope: !18809)
!18811 = !DILocation(line: 1141, column: 1, scope: !18703)
!18812 = distinct !DISubprogram(name: "netdev_alloc_skb", scope: !422, file: !422, line: 2823, type: !18813, scopeLine: 2825, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!18813 = !DISubroutineType(types: !18814)
!18814 = !{!420, !295, !7}
!18815 = !DILocalVariable(name: "dev", arg: 1, scope: !18812, file: !422, line: 2823, type: !295)
!18816 = !DILocation(line: 2823, column: 67, scope: !18812)
!18817 = !DILocalVariable(name: "length", arg: 2, scope: !18812, file: !422, line: 2824, type: !7)
!18818 = !DILocation(line: 2824, column: 26, scope: !18812)
!18819 = !DILocation(line: 2826, column: 28, scope: !18812)
!18820 = !DILocation(line: 2826, column: 33, scope: !18812)
!18821 = !DILocation(line: 2826, column: 9, scope: !18812)
!18822 = !DILocation(line: 2826, column: 2, scope: !18812)
!18823 = distinct !DISubprogram(name: "consume_skb", scope: !422, file: !422, line: 1063, type: !2650, scopeLine: 1064, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!18824 = !DILocalVariable(name: "skb", arg: 1, scope: !18823, file: !422, line: 1063, type: !420)
!18825 = !DILocation(line: 1063, column: 48, scope: !18823)
!18826 = !DILocation(line: 1065, column: 19, scope: !18823)
!18827 = !DILocation(line: 1065, column: 9, scope: !18823)
!18828 = !DILocation(line: 1065, column: 2, scope: !18823)
!18829 = distinct !DISubprogram(name: "skb_reserve", scope: !422, file: !422, line: 2378, type: !18830, scopeLine: 2379, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!18830 = !DISubroutineType(types: !18831)
!18831 = !{null, !420, !37}
!18832 = !DILocalVariable(name: "skb", arg: 1, scope: !18829, file: !422, line: 2378, type: !420)
!18833 = !DILocation(line: 2378, column: 48, scope: !18829)
!18834 = !DILocalVariable(name: "len", arg: 2, scope: !18829, file: !422, line: 2378, type: !37)
!18835 = !DILocation(line: 2378, column: 57, scope: !18829)
!18836 = !DILocation(line: 2380, column: 15, scope: !18829)
!18837 = !DILocation(line: 2380, column: 2, scope: !18829)
!18838 = !DILocation(line: 2380, column: 7, scope: !18829)
!18839 = !DILocation(line: 2380, column: 12, scope: !18829)
!18840 = !DILocation(line: 2381, column: 15, scope: !18829)
!18841 = !DILocation(line: 2381, column: 2, scope: !18829)
!18842 = !DILocation(line: 2381, column: 7, scope: !18829)
!18843 = !DILocation(line: 2381, column: 12, scope: !18829)
!18844 = !DILocation(line: 2382, column: 1, scope: !18829)
!18845 = distinct !DISubprogram(name: "skb_checksum_none_assert", scope: !422, file: !422, line: 4529, type: !18846, scopeLine: 4530, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!18846 = !DISubroutineType(types: !18847)
!18847 = !{null, !8807}
!18848 = !DILocalVariable(name: "skb", arg: 1, scope: !18845, file: !422, line: 4529, type: !8807)
!18849 = !DILocation(line: 4529, column: 67, scope: !18845)
!18850 = !DILocation(line: 4534, column: 1, scope: !18845)
!18851 = distinct !DISubprogram(name: "gem_ptp_do_rxstamp", scope: !9997, file: !9997, line: 1273, type: !18852, scopeLine: 1274, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!18852 = !DISubroutineType(types: !18853)
!18853 = !{null, !10238, !420, !10636}
!18854 = !DILocalVariable(name: "bp", arg: 1, scope: !18851, file: !9997, line: 1273, type: !10238)
!18855 = !DILocation(line: 1273, column: 52, scope: !18851)
!18856 = !DILocalVariable(name: "skb", arg: 2, scope: !18851, file: !9997, line: 1273, type: !420)
!18857 = !DILocation(line: 1273, column: 72, scope: !18851)
!18858 = !DILocalVariable(name: "desc", arg: 3, scope: !18851, file: !9997, line: 1273, type: !10636)
!18859 = !DILocation(line: 1273, column: 99, scope: !18851)
!18860 = !DILocation(line: 1275, column: 6, scope: !18861)
!18861 = distinct !DILexicalBlock(scope: !18851, file: !9997, line: 1275, column: 6)
!18862 = !DILocation(line: 1275, column: 10, scope: !18861)
!18863 = !DILocation(line: 1275, column: 24, scope: !18861)
!18864 = !DILocation(line: 1275, column: 34, scope: !18861)
!18865 = !DILocation(line: 1275, column: 6, scope: !18851)
!18866 = !DILocation(line: 1276, column: 3, scope: !18861)
!18867 = !DILocation(line: 1278, column: 18, scope: !18851)
!18868 = !DILocation(line: 1278, column: 22, scope: !18851)
!18869 = !DILocation(line: 1278, column: 27, scope: !18851)
!18870 = !DILocation(line: 1278, column: 2, scope: !18851)
!18871 = !DILocation(line: 1279, column: 1, scope: !18851)
!18872 = distinct !DISubprogram(name: "macb_get_regs_len", scope: !3, file: !3, line: 2840, type: !407, scopeLine: 2841, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!18873 = !DILocalVariable(name: "netdev", arg: 1, scope: !18872, file: !3, line: 2840, type: !295)
!18874 = !DILocation(line: 2840, column: 49, scope: !18872)
!18875 = !DILocation(line: 2842, column: 2, scope: !18872)
!18876 = distinct !DISubprogram(name: "macb_get_regs", scope: !3, file: !3, line: 2845, type: !8305, scopeLine: 2847, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!18877 = !DILocalVariable(name: "dev", arg: 1, scope: !18876, file: !3, line: 2845, type: !295)
!18878 = !DILocation(line: 2845, column: 46, scope: !18876)
!18879 = !DILocalVariable(name: "regs", arg: 2, scope: !18876, file: !3, line: 2845, type: !8307)
!18880 = !DILocation(line: 2845, column: 72, scope: !18876)
!18881 = !DILocalVariable(name: "p", arg: 3, scope: !18876, file: !3, line: 2846, type: !570)
!18882 = !DILocation(line: 2846, column: 12, scope: !18876)
!18883 = !DILocalVariable(name: "bp", scope: !18876, file: !3, line: 2848, type: !10238)
!18884 = !DILocation(line: 2848, column: 15, scope: !18876)
!18885 = !DILocation(line: 2848, column: 32, scope: !18876)
!18886 = !DILocation(line: 2848, column: 20, scope: !18876)
!18887 = !DILocalVariable(name: "tail", scope: !18876, file: !3, line: 2849, type: !7)
!18888 = !DILocation(line: 2849, column: 15, scope: !18876)
!18889 = !DILocalVariable(name: "head", scope: !18876, file: !3, line: 2849, type: !7)
!18890 = !DILocation(line: 2849, column: 21, scope: !18876)
!18891 = !DILocalVariable(name: "regs_buff", scope: !18876, file: !3, line: 2850, type: !1460)
!18892 = !DILocation(line: 2850, column: 7, scope: !18876)
!18893 = !DILocation(line: 2850, column: 19, scope: !18876)
!18894 = !DILocation(line: 2852, column: 19, scope: !18876)
!18895 = !DILocation(line: 2852, column: 39, scope: !18876)
!18896 = !DILocation(line: 2853, column: 4, scope: !18876)
!18897 = !DILocation(line: 2852, column: 2, scope: !18876)
!18898 = !DILocation(line: 2852, column: 8, scope: !18876)
!18899 = !DILocation(line: 2852, column: 16, scope: !18876)
!18900 = !DILocation(line: 2855, column: 27, scope: !18876)
!18901 = !DILocation(line: 2855, column: 31, scope: !18876)
!18902 = !DILocation(line: 2855, column: 35, scope: !18876)
!18903 = !DILocation(line: 2855, column: 45, scope: !18876)
!18904 = !DILocation(line: 2855, column: 9, scope: !18876)
!18905 = !DILocation(line: 2855, column: 7, scope: !18876)
!18906 = !DILocation(line: 2856, column: 27, scope: !18876)
!18907 = !DILocation(line: 2856, column: 31, scope: !18876)
!18908 = !DILocation(line: 2856, column: 35, scope: !18876)
!18909 = !DILocation(line: 2856, column: 45, scope: !18876)
!18910 = !DILocation(line: 2856, column: 9, scope: !18876)
!18911 = !DILocation(line: 2856, column: 7, scope: !18876)
!18912 = !DILocation(line: 2858, column: 18, scope: !18876)
!18913 = !DILocation(line: 2858, column: 2, scope: !18876)
!18914 = !DILocation(line: 2858, column: 16, scope: !18876)
!18915 = !DILocalVariable(name: "__v", scope: !18916, file: !3, line: 2859, type: !707)
!18916 = distinct !DILexicalBlock(scope: !18876, file: !3, line: 2859, column: 18)
!18917 = !DILocation(line: 2859, column: 18, scope: !18916)
!18918 = !DILocation(line: 2859, column: 18, scope: !18919)
!18919 = distinct !DILexicalBlock(scope: !18916, file: !3, line: 2859, column: 18)
!18920 = !DILocation(line: 2859, column: 2, scope: !18876)
!18921 = !DILocation(line: 2859, column: 16, scope: !18876)
!18922 = !DILocation(line: 2860, column: 18, scope: !18876)
!18923 = !DILocation(line: 2860, column: 2, scope: !18876)
!18924 = !DILocation(line: 2860, column: 16, scope: !18876)
!18925 = !DILocation(line: 2861, column: 18, scope: !18876)
!18926 = !DILocation(line: 2861, column: 2, scope: !18876)
!18927 = !DILocation(line: 2861, column: 16, scope: !18876)
!18928 = !DILocation(line: 2862, column: 18, scope: !18876)
!18929 = !DILocation(line: 2862, column: 2, scope: !18876)
!18930 = !DILocation(line: 2862, column: 16, scope: !18876)
!18931 = !DILocation(line: 2863, column: 18, scope: !18876)
!18932 = !DILocation(line: 2863, column: 2, scope: !18876)
!18933 = !DILocation(line: 2863, column: 16, scope: !18876)
!18934 = !DILocation(line: 2864, column: 18, scope: !18876)
!18935 = !DILocation(line: 2864, column: 2, scope: !18876)
!18936 = !DILocation(line: 2864, column: 16, scope: !18876)
!18937 = !DILocation(line: 2865, column: 18, scope: !18876)
!18938 = !DILocation(line: 2865, column: 2, scope: !18876)
!18939 = !DILocation(line: 2865, column: 16, scope: !18876)
!18940 = !DILocation(line: 2867, column: 18, scope: !18876)
!18941 = !DILocation(line: 2867, column: 2, scope: !18876)
!18942 = !DILocation(line: 2867, column: 16, scope: !18876)
!18943 = !DILocation(line: 2868, column: 18, scope: !18876)
!18944 = !DILocation(line: 2868, column: 2, scope: !18876)
!18945 = !DILocation(line: 2868, column: 16, scope: !18876)
!18946 = !DILocation(line: 2869, column: 31, scope: !18876)
!18947 = !DILocation(line: 2869, column: 35, scope: !18876)
!18948 = !DILocation(line: 2869, column: 46, scope: !18876)
!18949 = !DILocation(line: 2869, column: 18, scope: !18876)
!18950 = !DILocation(line: 2869, column: 2, scope: !18876)
!18951 = !DILocation(line: 2869, column: 16, scope: !18876)
!18952 = !DILocation(line: 2870, column: 31, scope: !18876)
!18953 = !DILocation(line: 2870, column: 35, scope: !18876)
!18954 = !DILocation(line: 2870, column: 46, scope: !18876)
!18955 = !DILocation(line: 2870, column: 18, scope: !18876)
!18956 = !DILocation(line: 2870, column: 2, scope: !18876)
!18957 = !DILocation(line: 2870, column: 16, scope: !18876)
!18958 = !DILocation(line: 2872, column: 8, scope: !18959)
!18959 = distinct !DILexicalBlock(scope: !18876, file: !3, line: 2872, column: 6)
!18960 = !DILocation(line: 2872, column: 12, scope: !18959)
!18961 = !DILocation(line: 2872, column: 17, scope: !18959)
!18962 = !DILocation(line: 2872, column: 6, scope: !18876)
!18963 = !DILocalVariable(name: "__v", scope: !18964, file: !3, line: 2873, type: !707)
!18964 = distinct !DILexicalBlock(scope: !18959, file: !3, line: 2873, column: 19)
!18965 = !DILocation(line: 2873, column: 19, scope: !18964)
!18966 = !DILocation(line: 2873, column: 19, scope: !18967)
!18967 = distinct !DILexicalBlock(scope: !18964, file: !3, line: 2873, column: 19)
!18968 = !DILocation(line: 2873, column: 3, scope: !18959)
!18969 = !DILocation(line: 2873, column: 17, scope: !18959)
!18970 = !DILocation(line: 2874, column: 18, scope: !18971)
!18971 = distinct !DILexicalBlock(scope: !18876, file: !3, line: 2874, column: 6)
!18972 = !DILocation(line: 2874, column: 6, scope: !18971)
!18973 = !DILocation(line: 2874, column: 6, scope: !18876)
!18974 = !DILocation(line: 2875, column: 19, scope: !18971)
!18975 = !DILocation(line: 2875, column: 3, scope: !18971)
!18976 = !DILocation(line: 2875, column: 17, scope: !18971)
!18977 = !DILocation(line: 2876, column: 1, scope: !18876)
!18978 = distinct !DISubprogram(name: "macb_get_wol", scope: !3, file: !3, line: 2878, type: !8316, scopeLine: 2879, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!18979 = !DILocalVariable(name: "netdev", arg: 1, scope: !18978, file: !3, line: 2878, type: !295)
!18980 = !DILocation(line: 2878, column: 45, scope: !18978)
!18981 = !DILocalVariable(name: "wol", arg: 2, scope: !18978, file: !3, line: 2878, type: !8318)
!18982 = !DILocation(line: 2878, column: 77, scope: !18978)
!18983 = !DILocalVariable(name: "bp", scope: !18978, file: !3, line: 2880, type: !10238)
!18984 = !DILocation(line: 2880, column: 15, scope: !18978)
!18985 = !DILocation(line: 2880, column: 32, scope: !18978)
!18986 = !DILocation(line: 2880, column: 20, scope: !18978)
!18987 = !DILocation(line: 2882, column: 6, scope: !18988)
!18988 = distinct !DILexicalBlock(scope: !18978, file: !3, line: 2882, column: 6)
!18989 = !DILocation(line: 2882, column: 10, scope: !18988)
!18990 = !DILocation(line: 2882, column: 14, scope: !18988)
!18991 = !DILocation(line: 2882, column: 6, scope: !18978)
!18992 = !DILocation(line: 2883, column: 27, scope: !18993)
!18993 = distinct !DILexicalBlock(scope: !18988, file: !3, line: 2882, column: 43)
!18994 = !DILocation(line: 2883, column: 31, scope: !18993)
!18995 = !DILocation(line: 2883, column: 40, scope: !18993)
!18996 = !DILocation(line: 2883, column: 3, scope: !18993)
!18997 = !DILocation(line: 2884, column: 3, scope: !18993)
!18998 = !DILocation(line: 2884, column: 8, scope: !18993)
!18999 = !DILocation(line: 2884, column: 18, scope: !18993)
!19000 = !DILocation(line: 2886, column: 7, scope: !19001)
!19001 = distinct !DILexicalBlock(scope: !18993, file: !3, line: 2886, column: 7)
!19002 = !DILocation(line: 2886, column: 11, scope: !19001)
!19003 = !DILocation(line: 2886, column: 15, scope: !19001)
!19004 = !DILocation(line: 2886, column: 7, scope: !18993)
!19005 = !DILocation(line: 2887, column: 4, scope: !19001)
!19006 = !DILocation(line: 2887, column: 9, scope: !19001)
!19007 = !DILocation(line: 2887, column: 17, scope: !19001)
!19008 = !DILocation(line: 2888, column: 2, scope: !18993)
!19009 = !DILocation(line: 2889, column: 1, scope: !18978)
!19010 = distinct !DISubprogram(name: "macb_set_wol", scope: !3, file: !3, line: 2891, type: !8328, scopeLine: 2892, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!19011 = !DILocalVariable(name: "netdev", arg: 1, scope: !19010, file: !3, line: 2891, type: !295)
!19012 = !DILocation(line: 2891, column: 44, scope: !19010)
!19013 = !DILocalVariable(name: "wol", arg: 2, scope: !19010, file: !3, line: 2891, type: !8318)
!19014 = !DILocation(line: 2891, column: 76, scope: !19010)
!19015 = !DILocalVariable(name: "bp", scope: !19010, file: !3, line: 2893, type: !10238)
!19016 = !DILocation(line: 2893, column: 15, scope: !19010)
!19017 = !DILocation(line: 2893, column: 32, scope: !19010)
!19018 = !DILocation(line: 2893, column: 20, scope: !19010)
!19019 = !DILocalVariable(name: "ret", scope: !19010, file: !3, line: 2894, type: !37)
!19020 = !DILocation(line: 2894, column: 6, scope: !19010)
!19021 = !DILocation(line: 2897, column: 32, scope: !19010)
!19022 = !DILocation(line: 2897, column: 36, scope: !19010)
!19023 = !DILocation(line: 2897, column: 45, scope: !19010)
!19024 = !DILocation(line: 2897, column: 8, scope: !19010)
!19025 = !DILocation(line: 2897, column: 6, scope: !19010)
!19026 = !DILocation(line: 2901, column: 7, scope: !19027)
!19027 = distinct !DILexicalBlock(scope: !19010, file: !3, line: 2901, column: 6)
!19028 = !DILocation(line: 2901, column: 11, scope: !19027)
!19029 = !DILocation(line: 2901, column: 14, scope: !19027)
!19030 = !DILocation(line: 2901, column: 18, scope: !19027)
!19031 = !DILocation(line: 2901, column: 6, scope: !19010)
!19032 = !DILocation(line: 2902, column: 10, scope: !19027)
!19033 = !DILocation(line: 2902, column: 3, scope: !19027)
!19034 = !DILocation(line: 2904, column: 8, scope: !19035)
!19035 = distinct !DILexicalBlock(scope: !19010, file: !3, line: 2904, column: 6)
!19036 = !DILocation(line: 2904, column: 12, scope: !19035)
!19037 = !DILocation(line: 2904, column: 16, scope: !19035)
!19038 = !DILocation(line: 2904, column: 45, scope: !19035)
!19039 = !DILocation(line: 2905, column: 7, scope: !19035)
!19040 = !DILocation(line: 2905, column: 12, scope: !19035)
!19041 = !DILocation(line: 2905, column: 20, scope: !19035)
!19042 = !DILocation(line: 2904, column: 6, scope: !19010)
!19043 = !DILocation(line: 2906, column: 3, scope: !19035)
!19044 = !DILocation(line: 2908, column: 6, scope: !19045)
!19045 = distinct !DILexicalBlock(scope: !19010, file: !3, line: 2908, column: 6)
!19046 = !DILocation(line: 2908, column: 11, scope: !19045)
!19047 = !DILocation(line: 2908, column: 19, scope: !19045)
!19048 = !DILocation(line: 2908, column: 6, scope: !19010)
!19049 = !DILocation(line: 2909, column: 3, scope: !19045)
!19050 = !DILocation(line: 2909, column: 7, scope: !19045)
!19051 = !DILocation(line: 2909, column: 11, scope: !19045)
!19052 = !DILocation(line: 2911, column: 3, scope: !19045)
!19053 = !DILocation(line: 2911, column: 7, scope: !19045)
!19054 = !DILocation(line: 2911, column: 11, scope: !19045)
!19055 = !DILocation(line: 2913, column: 28, scope: !19010)
!19056 = !DILocation(line: 2913, column: 32, scope: !19010)
!19057 = !DILocation(line: 2913, column: 38, scope: !19010)
!19058 = !DILocation(line: 2913, column: 43, scope: !19010)
!19059 = !DILocation(line: 2913, column: 47, scope: !19010)
!19060 = !DILocation(line: 2913, column: 51, scope: !19010)
!19061 = !DILocation(line: 2913, column: 2, scope: !19010)
!19062 = !DILocation(line: 2915, column: 2, scope: !19010)
!19063 = !DILocation(line: 2916, column: 1, scope: !19010)
!19064 = distinct !DISubprogram(name: "macb_get_ringparam", scope: !3, file: !3, line: 2934, type: !8404, scopeLine: 2936, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!19065 = !DILocalVariable(name: "netdev", arg: 1, scope: !19064, file: !3, line: 2934, type: !295)
!19066 = !DILocation(line: 2934, column: 51, scope: !19064)
!19067 = !DILocalVariable(name: "ring", arg: 2, scope: !19064, file: !3, line: 2935, type: !8406)
!19068 = !DILocation(line: 2935, column: 37, scope: !19064)
!19069 = !DILocalVariable(name: "bp", scope: !19064, file: !3, line: 2937, type: !10238)
!19070 = !DILocation(line: 2937, column: 15, scope: !19064)
!19071 = !DILocation(line: 2937, column: 32, scope: !19064)
!19072 = !DILocation(line: 2937, column: 20, scope: !19064)
!19073 = !DILocation(line: 2939, column: 2, scope: !19064)
!19074 = !DILocation(line: 2939, column: 8, scope: !19064)
!19075 = !DILocation(line: 2939, column: 23, scope: !19064)
!19076 = !DILocation(line: 2940, column: 2, scope: !19064)
!19077 = !DILocation(line: 2940, column: 8, scope: !19064)
!19078 = !DILocation(line: 2940, column: 23, scope: !19064)
!19079 = !DILocation(line: 2942, column: 21, scope: !19064)
!19080 = !DILocation(line: 2942, column: 25, scope: !19064)
!19081 = !DILocation(line: 2942, column: 2, scope: !19064)
!19082 = !DILocation(line: 2942, column: 8, scope: !19064)
!19083 = !DILocation(line: 2942, column: 19, scope: !19064)
!19084 = !DILocation(line: 2943, column: 21, scope: !19064)
!19085 = !DILocation(line: 2943, column: 25, scope: !19064)
!19086 = !DILocation(line: 2943, column: 2, scope: !19064)
!19087 = !DILocation(line: 2943, column: 8, scope: !19064)
!19088 = !DILocation(line: 2943, column: 19, scope: !19064)
!19089 = !DILocation(line: 2944, column: 1, scope: !19064)
!19090 = distinct !DISubprogram(name: "macb_set_ringparam", scope: !3, file: !3, line: 2946, type: !8420, scopeLine: 2948, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!19091 = !DILocalVariable(name: "netdev", arg: 1, scope: !19090, file: !3, line: 2946, type: !295)
!19092 = !DILocation(line: 2946, column: 50, scope: !19090)
!19093 = !DILocalVariable(name: "ring", arg: 2, scope: !19090, file: !3, line: 2947, type: !8406)
!19094 = !DILocation(line: 2947, column: 36, scope: !19090)
!19095 = !DILocalVariable(name: "bp", scope: !19090, file: !3, line: 2949, type: !10238)
!19096 = !DILocation(line: 2949, column: 15, scope: !19090)
!19097 = !DILocation(line: 2949, column: 32, scope: !19090)
!19098 = !DILocation(line: 2949, column: 20, scope: !19090)
!19099 = !DILocalVariable(name: "new_rx_size", scope: !19090, file: !3, line: 2950, type: !707)
!19100 = !DILocation(line: 2950, column: 6, scope: !19090)
!19101 = !DILocalVariable(name: "new_tx_size", scope: !19090, file: !3, line: 2950, type: !707)
!19102 = !DILocation(line: 2950, column: 19, scope: !19090)
!19103 = !DILocalVariable(name: "reset", scope: !19090, file: !3, line: 2951, type: !7)
!19104 = !DILocation(line: 2951, column: 15, scope: !19090)
!19105 = !DILocation(line: 2953, column: 7, scope: !19106)
!19106 = distinct !DILexicalBlock(scope: !19090, file: !3, line: 2953, column: 6)
!19107 = !DILocation(line: 2953, column: 13, scope: !19106)
!19108 = !DILocation(line: 2953, column: 6, scope: !19106)
!19109 = !DILocation(line: 2953, column: 30, scope: !19106)
!19110 = !DILocation(line: 2953, column: 34, scope: !19106)
!19111 = !DILocation(line: 2953, column: 40, scope: !19106)
!19112 = !DILocation(line: 2953, column: 33, scope: !19106)
!19113 = !DILocation(line: 2953, column: 6, scope: !19090)
!19114 = !DILocation(line: 2954, column: 3, scope: !19106)
!19115 = !DILocalVariable(name: "__UNIQUE_ID___x540", scope: !19116, file: !3, line: 2956, type: !707)
!19116 = distinct !DILexicalBlock(scope: !19090, file: !3, line: 2956, column: 16)
!19117 = !DILocation(line: 2956, column: 16, scope: !19116)
!19118 = !DILocalVariable(name: "__UNIQUE_ID___x538", scope: !19119, file: !3, line: 2956, type: !707)
!19119 = distinct !DILexicalBlock(scope: !19116, file: !3, line: 2956, column: 16)
!19120 = !DILocation(line: 2956, column: 16, scope: !19119)
!19121 = !DILocalVariable(name: "__UNIQUE_ID___y539", scope: !19119, file: !3, line: 2956, type: !707)
!19122 = !DILocalVariable(name: "__UNIQUE_ID___y541", scope: !19116, file: !3, line: 2956, type: !707)
!19123 = !DILocation(line: 2956, column: 14, scope: !19090)
!19124 = !DILocation(line: 2958, column: 16, scope: !19090)
!19125 = !DILocation(line: 2958, column: 14, scope: !19090)
!19126 = !DILocalVariable(name: "__UNIQUE_ID___x544", scope: !19127, file: !3, line: 2960, type: !707)
!19127 = distinct !DILexicalBlock(scope: !19090, file: !3, line: 2960, column: 16)
!19128 = !DILocation(line: 2960, column: 16, scope: !19127)
!19129 = !DILocalVariable(name: "__UNIQUE_ID___x542", scope: !19130, file: !3, line: 2960, type: !707)
!19130 = distinct !DILexicalBlock(scope: !19127, file: !3, line: 2960, column: 16)
!19131 = !DILocation(line: 2960, column: 16, scope: !19130)
!19132 = !DILocalVariable(name: "__UNIQUE_ID___y543", scope: !19130, file: !3, line: 2960, type: !707)
!19133 = !DILocalVariable(name: "__UNIQUE_ID___y545", scope: !19127, file: !3, line: 2960, type: !707)
!19134 = !DILocation(line: 2960, column: 14, scope: !19090)
!19135 = !DILocation(line: 2962, column: 16, scope: !19090)
!19136 = !DILocation(line: 2962, column: 14, scope: !19090)
!19137 = !DILocation(line: 2964, column: 7, scope: !19138)
!19138 = distinct !DILexicalBlock(scope: !19090, file: !3, line: 2964, column: 6)
!19139 = !DILocation(line: 2964, column: 22, scope: !19138)
!19140 = !DILocation(line: 2964, column: 26, scope: !19138)
!19141 = !DILocation(line: 2964, column: 19, scope: !19138)
!19142 = !DILocation(line: 2964, column: 40, scope: !19138)
!19143 = !DILocation(line: 2965, column: 7, scope: !19138)
!19144 = !DILocation(line: 2965, column: 22, scope: !19138)
!19145 = !DILocation(line: 2965, column: 26, scope: !19138)
!19146 = !DILocation(line: 2965, column: 19, scope: !19138)
!19147 = !DILocation(line: 2964, column: 6, scope: !19090)
!19148 = !DILocation(line: 2967, column: 3, scope: !19149)
!19149 = distinct !DILexicalBlock(scope: !19138, file: !3, line: 2965, column: 41)
!19150 = !DILocation(line: 2970, column: 20, scope: !19151)
!19151 = distinct !DILexicalBlock(scope: !19090, file: !3, line: 2970, column: 6)
!19152 = !DILocation(line: 2970, column: 24, scope: !19151)
!19153 = !DILocation(line: 2970, column: 6, scope: !19151)
!19154 = !DILocation(line: 2970, column: 6, scope: !19090)
!19155 = !DILocation(line: 2971, column: 9, scope: !19156)
!19156 = distinct !DILexicalBlock(scope: !19151, file: !3, line: 2970, column: 30)
!19157 = !DILocation(line: 2972, column: 14, scope: !19156)
!19158 = !DILocation(line: 2972, column: 18, scope: !19156)
!19159 = !DILocation(line: 2972, column: 3, scope: !19156)
!19160 = !DILocation(line: 2973, column: 2, scope: !19156)
!19161 = !DILocation(line: 2975, column: 21, scope: !19090)
!19162 = !DILocation(line: 2975, column: 2, scope: !19090)
!19163 = !DILocation(line: 2975, column: 6, scope: !19090)
!19164 = !DILocation(line: 2975, column: 19, scope: !19090)
!19165 = !DILocation(line: 2976, column: 21, scope: !19090)
!19166 = !DILocation(line: 2976, column: 2, scope: !19090)
!19167 = !DILocation(line: 2976, column: 6, scope: !19090)
!19168 = !DILocation(line: 2976, column: 19, scope: !19090)
!19169 = !DILocation(line: 2978, column: 6, scope: !19170)
!19170 = distinct !DILexicalBlock(scope: !19090, file: !3, line: 2978, column: 6)
!19171 = !DILocation(line: 2978, column: 6, scope: !19090)
!19172 = !DILocation(line: 2979, column: 13, scope: !19170)
!19173 = !DILocation(line: 2979, column: 17, scope: !19170)
!19174 = !DILocation(line: 2979, column: 3, scope: !19170)
!19175 = !DILocation(line: 2981, column: 2, scope: !19090)
!19176 = !DILocation(line: 2982, column: 1, scope: !19090)
!19177 = distinct !DISubprogram(name: "gem_get_ethtool_strings", scope: !3, file: !3, line: 2768, type: !8461, scopeLine: 2769, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!19178 = !DILocalVariable(name: "dev", arg: 1, scope: !19177, file: !3, line: 2768, type: !295)
!19179 = !DILocation(line: 2768, column: 56, scope: !19177)
!19180 = !DILocalVariable(name: "sset", arg: 2, scope: !19177, file: !3, line: 2768, type: !707)
!19181 = !DILocation(line: 2768, column: 65, scope: !19177)
!19182 = !DILocalVariable(name: "p", arg: 3, scope: !19177, file: !3, line: 2768, type: !7949)
!19183 = !DILocation(line: 2768, column: 75, scope: !19177)
!19184 = !DILocalVariable(name: "stat_string", scope: !19177, file: !3, line: 2770, type: !3761)
!19185 = !DILocation(line: 2770, column: 7, scope: !19177)
!19186 = !DILocalVariable(name: "bp", scope: !19177, file: !3, line: 2771, type: !10238)
!19187 = !DILocation(line: 2771, column: 15, scope: !19177)
!19188 = !DILocation(line: 2771, column: 32, scope: !19177)
!19189 = !DILocation(line: 2771, column: 20, scope: !19177)
!19190 = !DILocalVariable(name: "queue", scope: !19177, file: !3, line: 2772, type: !10234)
!19191 = !DILocation(line: 2772, column: 21, scope: !19177)
!19192 = !DILocalVariable(name: "i", scope: !19177, file: !3, line: 2773, type: !7)
!19193 = !DILocation(line: 2773, column: 15, scope: !19177)
!19194 = !DILocalVariable(name: "q", scope: !19177, file: !3, line: 2774, type: !7)
!19195 = !DILocation(line: 2774, column: 15, scope: !19177)
!19196 = !DILocation(line: 2776, column: 10, scope: !19177)
!19197 = !DILocation(line: 2776, column: 2, scope: !19177)
!19198 = !DILocation(line: 2778, column: 10, scope: !19199)
!19199 = distinct !DILexicalBlock(scope: !19200, file: !3, line: 2778, column: 3)
!19200 = distinct !DILexicalBlock(scope: !19177, file: !3, line: 2776, column: 16)
!19201 = !DILocation(line: 2778, column: 8, scope: !19199)
!19202 = !DILocation(line: 2778, column: 15, scope: !19203)
!19203 = distinct !DILexicalBlock(scope: !19199, file: !3, line: 2778, column: 3)
!19204 = !DILocation(line: 2778, column: 17, scope: !19203)
!19205 = !DILocation(line: 2778, column: 3, scope: !19199)
!19206 = !DILocation(line: 2779, column: 11, scope: !19203)
!19207 = !DILocation(line: 2779, column: 29, scope: !19203)
!19208 = !DILocation(line: 2779, column: 14, scope: !19203)
!19209 = !DILocation(line: 2779, column: 32, scope: !19203)
!19210 = !DILocation(line: 2779, column: 4, scope: !19203)
!19211 = !DILocation(line: 2778, column: 35, scope: !19203)
!19212 = !DILocation(line: 2778, column: 41, scope: !19203)
!19213 = !DILocation(line: 2778, column: 3, scope: !19203)
!19214 = distinct !{!19214, !19205, !19215}
!19215 = !DILocation(line: 2780, column: 26, scope: !19199)
!19216 = !DILocation(line: 2782, column: 10, scope: !19217)
!19217 = distinct !DILexicalBlock(scope: !19200, file: !3, line: 2782, column: 3)
!19218 = !DILocation(line: 2782, column: 23, scope: !19217)
!19219 = !DILocation(line: 2782, column: 27, scope: !19217)
!19220 = !DILocation(line: 2782, column: 21, scope: !19217)
!19221 = !DILocation(line: 2782, column: 8, scope: !19217)
!19222 = !DILocation(line: 2782, column: 35, scope: !19223)
!19223 = distinct !DILexicalBlock(scope: !19217, file: !3, line: 2782, column: 3)
!19224 = !DILocation(line: 2782, column: 39, scope: !19223)
!19225 = !DILocation(line: 2782, column: 43, scope: !19223)
!19226 = !DILocation(line: 2782, column: 37, scope: !19223)
!19227 = !DILocation(line: 2782, column: 3, scope: !19217)
!19228 = !DILocation(line: 2783, column: 11, scope: !19229)
!19229 = distinct !DILexicalBlock(scope: !19230, file: !3, line: 2783, column: 4)
!19230 = distinct !DILexicalBlock(scope: !19223, file: !3, line: 2782, column: 69)
!19231 = !DILocation(line: 2783, column: 9, scope: !19229)
!19232 = !DILocation(line: 2783, column: 16, scope: !19233)
!19233 = distinct !DILexicalBlock(scope: !19229, file: !3, line: 2783, column: 4)
!19234 = !DILocation(line: 2783, column: 18, scope: !19233)
!19235 = !DILocation(line: 2783, column: 4, scope: !19229)
!19236 = !DILocation(line: 2784, column: 14, scope: !19237)
!19237 = distinct !DILexicalBlock(scope: !19233, file: !3, line: 2783, column: 64)
!19238 = !DILocation(line: 2785, column: 7, scope: !19237)
!19239 = !DILocation(line: 2785, column: 27, scope: !19237)
!19240 = !DILocation(line: 2785, column: 10, scope: !19237)
!19241 = !DILocation(line: 2785, column: 30, scope: !19237)
!19242 = !DILocation(line: 2784, column: 5, scope: !19237)
!19243 = !DILocation(line: 2786, column: 12, scope: !19237)
!19244 = !DILocation(line: 2786, column: 5, scope: !19237)
!19245 = !DILocation(line: 2787, column: 4, scope: !19237)
!19246 = !DILocation(line: 2783, column: 38, scope: !19233)
!19247 = !DILocation(line: 2783, column: 44, scope: !19233)
!19248 = !DILocation(line: 2783, column: 4, scope: !19233)
!19249 = distinct !{!19249, !19235, !19250}
!19250 = !DILocation(line: 2787, column: 4, scope: !19229)
!19251 = !DILocation(line: 2788, column: 3, scope: !19230)
!19252 = !DILocation(line: 2782, column: 55, scope: !19223)
!19253 = !DILocation(line: 2782, column: 60, scope: !19223)
!19254 = !DILocation(line: 2782, column: 3, scope: !19223)
!19255 = distinct !{!19255, !19227, !19256}
!19256 = !DILocation(line: 2788, column: 3, scope: !19217)
!19257 = !DILocation(line: 2789, column: 3, scope: !19200)
!19258 = !DILocation(line: 2791, column: 1, scope: !19177)
!19259 = distinct !DISubprogram(name: "gem_get_ethtool_stats", scope: !3, file: !3, line: 2745, type: !8469, scopeLine: 2747, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!19260 = !DILocalVariable(name: "dev", arg: 1, scope: !19259, file: !3, line: 2745, type: !295)
!19261 = !DILocation(line: 2745, column: 54, scope: !19259)
!19262 = !DILocalVariable(name: "stats", arg: 2, scope: !19259, file: !3, line: 2746, type: !8471)
!19263 = !DILocation(line: 2746, column: 29, scope: !19259)
!19264 = !DILocalVariable(name: "data", arg: 3, scope: !19259, file: !3, line: 2746, type: !3338)
!19265 = !DILocation(line: 2746, column: 41, scope: !19259)
!19266 = !DILocalVariable(name: "bp", scope: !19259, file: !3, line: 2748, type: !10238)
!19267 = !DILocation(line: 2748, column: 15, scope: !19259)
!19268 = !DILocation(line: 2750, column: 19, scope: !19259)
!19269 = !DILocation(line: 2750, column: 7, scope: !19259)
!19270 = !DILocation(line: 2750, column: 5, scope: !19259)
!19271 = !DILocation(line: 2751, column: 19, scope: !19259)
!19272 = !DILocation(line: 2751, column: 2, scope: !19259)
!19273 = !DILocation(line: 2752, column: 9, scope: !19259)
!19274 = !DILocation(line: 2752, column: 2, scope: !19259)
!19275 = !DILocation(line: 2752, column: 16, scope: !19259)
!19276 = !DILocation(line: 2752, column: 20, scope: !19259)
!19277 = !DILocation(line: 2754, column: 1, scope: !19259)
!19278 = distinct !DISubprogram(name: "gem_get_sset_count", scope: !3, file: !3, line: 2756, type: !7885, scopeLine: 2757, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!19279 = !DILocalVariable(name: "dev", arg: 1, scope: !19278, file: !3, line: 2756, type: !295)
!19280 = !DILocation(line: 2756, column: 50, scope: !19278)
!19281 = !DILocalVariable(name: "sset", arg: 2, scope: !19278, file: !3, line: 2756, type: !37)
!19282 = !DILocation(line: 2756, column: 59, scope: !19278)
!19283 = !DILocalVariable(name: "bp", scope: !19278, file: !3, line: 2758, type: !10238)
!19284 = !DILocation(line: 2758, column: 15, scope: !19278)
!19285 = !DILocation(line: 2758, column: 32, scope: !19278)
!19286 = !DILocation(line: 2758, column: 20, scope: !19278)
!19287 = !DILocation(line: 2760, column: 10, scope: !19278)
!19288 = !DILocation(line: 2760, column: 2, scope: !19278)
!19289 = !DILocation(line: 2762, column: 26, scope: !19290)
!19290 = distinct !DILexicalBlock(scope: !19278, file: !3, line: 2760, column: 16)
!19291 = !DILocation(line: 2762, column: 30, scope: !19290)
!19292 = !DILocation(line: 2762, column: 41, scope: !19290)
!19293 = !DILocation(line: 2762, column: 24, scope: !19290)
!19294 = !DILocation(line: 2762, column: 10, scope: !19290)
!19295 = !DILocation(line: 2762, column: 3, scope: !19290)
!19296 = !DILocation(line: 2764, column: 3, scope: !19290)
!19297 = !DILocation(line: 2766, column: 1, scope: !19278)
!19298 = distinct !DISubprogram(name: "gem_get_rxnfc", scope: !3, file: !3, line: 3309, type: !8487, scopeLine: 3311, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!19299 = !DILocalVariable(name: "netdev", arg: 1, scope: !19298, file: !3, line: 3309, type: !295)
!19300 = !DILocation(line: 3309, column: 45, scope: !19298)
!19301 = !DILocalVariable(name: "cmd", arg: 2, scope: !19298, file: !3, line: 3309, type: !8489)
!19302 = !DILocation(line: 3309, column: 75, scope: !19298)
!19303 = !DILocalVariable(name: "rule_locs", arg: 3, scope: !19298, file: !3, line: 3310, type: !1460)
!19304 = !DILocation(line: 3310, column: 8, scope: !19298)
!19305 = !DILocalVariable(name: "bp", scope: !19298, file: !3, line: 3312, type: !10238)
!19306 = !DILocation(line: 3312, column: 15, scope: !19298)
!19307 = !DILocation(line: 3312, column: 32, scope: !19298)
!19308 = !DILocation(line: 3312, column: 20, scope: !19298)
!19309 = !DILocalVariable(name: "ret", scope: !19298, file: !3, line: 3313, type: !37)
!19310 = !DILocation(line: 3313, column: 6, scope: !19298)
!19311 = !DILocation(line: 3315, column: 10, scope: !19298)
!19312 = !DILocation(line: 3315, column: 15, scope: !19298)
!19313 = !DILocation(line: 3315, column: 2, scope: !19298)
!19314 = !DILocation(line: 3317, column: 15, scope: !19315)
!19315 = distinct !DILexicalBlock(scope: !19298, file: !3, line: 3315, column: 20)
!19316 = !DILocation(line: 3317, column: 19, scope: !19315)
!19317 = !DILocation(line: 3317, column: 3, scope: !19315)
!19318 = !DILocation(line: 3317, column: 8, scope: !19315)
!19319 = !DILocation(line: 3317, column: 13, scope: !19315)
!19320 = !DILocation(line: 3318, column: 3, scope: !19315)
!19321 = !DILocation(line: 3320, column: 19, scope: !19315)
!19322 = !DILocation(line: 3320, column: 23, scope: !19315)
!19323 = !DILocation(line: 3320, column: 34, scope: !19315)
!19324 = !DILocation(line: 3320, column: 3, scope: !19315)
!19325 = !DILocation(line: 3320, column: 8, scope: !19315)
!19326 = !DILocation(line: 3320, column: 17, scope: !19315)
!19327 = !DILocation(line: 3321, column: 3, scope: !19315)
!19328 = !DILocation(line: 3323, column: 28, scope: !19315)
!19329 = !DILocation(line: 3323, column: 36, scope: !19315)
!19330 = !DILocation(line: 3323, column: 9, scope: !19315)
!19331 = !DILocation(line: 3323, column: 7, scope: !19315)
!19332 = !DILocation(line: 3324, column: 3, scope: !19315)
!19333 = !DILocation(line: 3326, column: 34, scope: !19315)
!19334 = !DILocation(line: 3326, column: 42, scope: !19315)
!19335 = !DILocation(line: 3326, column: 47, scope: !19315)
!19336 = !DILocation(line: 3326, column: 9, scope: !19315)
!19337 = !DILocation(line: 3326, column: 7, scope: !19315)
!19338 = !DILocation(line: 3327, column: 3, scope: !19315)
!19339 = !DILocation(line: 3329, column: 14, scope: !19315)
!19340 = !DILocation(line: 3330, column: 49, scope: !19315)
!19341 = !DILocation(line: 3330, column: 54, scope: !19315)
!19342 = !DILocation(line: 3329, column: 3, scope: !19315)
!19343 = !DILocation(line: 3331, column: 7, scope: !19315)
!19344 = !DILocation(line: 3332, column: 2, scope: !19315)
!19345 = !DILocation(line: 3334, column: 9, scope: !19298)
!19346 = !DILocation(line: 3334, column: 2, scope: !19298)
!19347 = distinct !DISubprogram(name: "gem_set_rxnfc", scope: !3, file: !3, line: 3337, type: !8589, scopeLine: 3338, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!19348 = !DILocalVariable(name: "netdev", arg: 1, scope: !19347, file: !3, line: 3337, type: !295)
!19349 = !DILocation(line: 3337, column: 45, scope: !19347)
!19350 = !DILocalVariable(name: "cmd", arg: 2, scope: !19347, file: !3, line: 3337, type: !8489)
!19351 = !DILocation(line: 3337, column: 75, scope: !19347)
!19352 = !DILocalVariable(name: "bp", scope: !19347, file: !3, line: 3339, type: !10238)
!19353 = !DILocation(line: 3339, column: 15, scope: !19347)
!19354 = !DILocation(line: 3339, column: 32, scope: !19347)
!19355 = !DILocation(line: 3339, column: 20, scope: !19347)
!19356 = !DILocalVariable(name: "ret", scope: !19347, file: !3, line: 3340, type: !37)
!19357 = !DILocation(line: 3340, column: 6, scope: !19347)
!19358 = !DILocation(line: 3342, column: 10, scope: !19347)
!19359 = !DILocation(line: 3342, column: 15, scope: !19347)
!19360 = !DILocation(line: 3342, column: 2, scope: !19347)
!19361 = !DILocation(line: 3344, column: 8, scope: !19362)
!19362 = distinct !DILexicalBlock(scope: !19363, file: !3, line: 3344, column: 7)
!19363 = distinct !DILexicalBlock(scope: !19347, file: !3, line: 3342, column: 20)
!19364 = !DILocation(line: 3344, column: 13, scope: !19362)
!19365 = !DILocation(line: 3344, column: 16, scope: !19362)
!19366 = !DILocation(line: 3344, column: 28, scope: !19362)
!19367 = !DILocation(line: 3344, column: 32, scope: !19362)
!19368 = !DILocation(line: 3344, column: 25, scope: !19362)
!19369 = !DILocation(line: 3345, column: 5, scope: !19362)
!19370 = !DILocation(line: 3345, column: 9, scope: !19362)
!19371 = !DILocation(line: 3345, column: 14, scope: !19362)
!19372 = !DILocation(line: 3345, column: 17, scope: !19362)
!19373 = !DILocation(line: 3345, column: 32, scope: !19362)
!19374 = !DILocation(line: 3345, column: 36, scope: !19362)
!19375 = !DILocation(line: 3345, column: 29, scope: !19362)
!19376 = !DILocation(line: 3344, column: 7, scope: !19363)
!19377 = !DILocation(line: 3346, column: 8, scope: !19378)
!19378 = distinct !DILexicalBlock(scope: !19362, file: !3, line: 3345, column: 49)
!19379 = !DILocation(line: 3347, column: 4, scope: !19378)
!19380 = !DILocation(line: 3349, column: 29, scope: !19363)
!19381 = !DILocation(line: 3349, column: 37, scope: !19363)
!19382 = !DILocation(line: 3349, column: 9, scope: !19363)
!19383 = !DILocation(line: 3349, column: 7, scope: !19363)
!19384 = !DILocation(line: 3350, column: 3, scope: !19363)
!19385 = !DILocation(line: 3352, column: 29, scope: !19363)
!19386 = !DILocation(line: 3352, column: 37, scope: !19363)
!19387 = !DILocation(line: 3352, column: 9, scope: !19363)
!19388 = !DILocation(line: 3352, column: 7, scope: !19363)
!19389 = !DILocation(line: 3353, column: 3, scope: !19363)
!19390 = !DILocation(line: 3355, column: 14, scope: !19363)
!19391 = !DILocation(line: 3356, column: 49, scope: !19363)
!19392 = !DILocation(line: 3356, column: 54, scope: !19363)
!19393 = !DILocation(line: 3355, column: 3, scope: !19363)
!19394 = !DILocation(line: 3357, column: 7, scope: !19363)
!19395 = !DILocation(line: 3358, column: 2, scope: !19363)
!19396 = !DILocation(line: 3360, column: 9, scope: !19347)
!19397 = !DILocation(line: 3360, column: 2, scope: !19347)
!19398 = distinct !DISubprogram(name: "macb_get_ts_info", scope: !3, file: !3, line: 3048, type: !8664, scopeLine: 3050, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!19399 = !DILocalVariable(name: "netdev", arg: 1, scope: !19398, file: !3, line: 3048, type: !295)
!19400 = !DILocation(line: 3048, column: 48, scope: !19398)
!19401 = !DILocalVariable(name: "info", arg: 2, scope: !19398, file: !3, line: 3049, type: !8666)
!19402 = !DILocation(line: 3049, column: 32, scope: !19398)
!19403 = !DILocalVariable(name: "bp", scope: !19398, file: !3, line: 3051, type: !10238)
!19404 = !DILocation(line: 3051, column: 15, scope: !19398)
!19405 = !DILocation(line: 3051, column: 32, scope: !19398)
!19406 = !DILocation(line: 3051, column: 20, scope: !19398)
!19407 = !DILocation(line: 3053, column: 6, scope: !19408)
!19408 = distinct !DILexicalBlock(scope: !19398, file: !3, line: 3053, column: 6)
!19409 = !DILocation(line: 3053, column: 10, scope: !19408)
!19410 = !DILocation(line: 3053, column: 6, scope: !19398)
!19411 = !DILocation(line: 3054, column: 10, scope: !19408)
!19412 = !DILocation(line: 3054, column: 14, scope: !19408)
!19413 = !DILocation(line: 3054, column: 24, scope: !19408)
!19414 = !DILocation(line: 3054, column: 36, scope: !19408)
!19415 = !DILocation(line: 3054, column: 44, scope: !19408)
!19416 = !DILocation(line: 3054, column: 3, scope: !19408)
!19417 = !DILocation(line: 3056, column: 32, scope: !19398)
!19418 = !DILocation(line: 3056, column: 40, scope: !19398)
!19419 = !DILocation(line: 3056, column: 9, scope: !19398)
!19420 = !DILocation(line: 3056, column: 2, scope: !19398)
!19421 = !DILocation(line: 3057, column: 1, scope: !19398)
!19422 = distinct !DISubprogram(name: "macb_get_link_ksettings", scope: !3, file: !3, line: 2918, type: !8732, scopeLine: 2920, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!19423 = !DILocalVariable(name: "netdev", arg: 1, scope: !19422, file: !3, line: 2918, type: !295)
!19424 = !DILocation(line: 2918, column: 55, scope: !19422)
!19425 = !DILocalVariable(name: "kset", arg: 2, scope: !19422, file: !3, line: 2919, type: !8734)
!19426 = !DILocation(line: 2919, column: 39, scope: !19422)
!19427 = !DILocalVariable(name: "bp", scope: !19422, file: !3, line: 2921, type: !10238)
!19428 = !DILocation(line: 2921, column: 15, scope: !19422)
!19429 = !DILocation(line: 2921, column: 32, scope: !19422)
!19430 = !DILocation(line: 2921, column: 20, scope: !19422)
!19431 = !DILocation(line: 2923, column: 39, scope: !19422)
!19432 = !DILocation(line: 2923, column: 43, scope: !19422)
!19433 = !DILocation(line: 2923, column: 52, scope: !19422)
!19434 = !DILocation(line: 2923, column: 9, scope: !19422)
!19435 = !DILocation(line: 2923, column: 2, scope: !19422)
!19436 = distinct !DISubprogram(name: "macb_set_link_ksettings", scope: !3, file: !3, line: 2926, type: !8771, scopeLine: 2928, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!19437 = !DILocalVariable(name: "netdev", arg: 1, scope: !19436, file: !3, line: 2926, type: !295)
!19438 = !DILocation(line: 2926, column: 55, scope: !19436)
!19439 = !DILocalVariable(name: "kset", arg: 2, scope: !19436, file: !3, line: 2927, type: !8773)
!19440 = !DILocation(line: 2927, column: 45, scope: !19436)
!19441 = !DILocalVariable(name: "bp", scope: !19436, file: !3, line: 2929, type: !10238)
!19442 = !DILocation(line: 2929, column: 15, scope: !19436)
!19443 = !DILocation(line: 2929, column: 32, scope: !19436)
!19444 = !DILocation(line: 2929, column: 20, scope: !19436)
!19445 = !DILocation(line: 2931, column: 39, scope: !19436)
!19446 = !DILocation(line: 2931, column: 43, scope: !19436)
!19447 = !DILocation(line: 2931, column: 52, scope: !19436)
!19448 = !DILocation(line: 2931, column: 9, scope: !19436)
!19449 = !DILocation(line: 2931, column: 2, scope: !19436)
!19450 = distinct !DISubprogram(name: "macb_tx_dma", scope: !3, file: !3, line: 196, type: !19451, scopeLine: 197, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!19451 = !DISubroutineType(types: !19452)
!19452 = !{!7084, !10234, !7}
!19453 = !DILocalVariable(name: "queue", arg: 1, scope: !19450, file: !3, line: 196, type: !10234)
!19454 = !DILocation(line: 196, column: 50, scope: !19450)
!19455 = !DILocalVariable(name: "index", arg: 2, scope: !19450, file: !3, line: 196, type: !7)
!19456 = !DILocation(line: 196, column: 70, scope: !19450)
!19457 = !DILocalVariable(name: "offset", scope: !19450, file: !3, line: 198, type: !7084)
!19458 = !DILocation(line: 198, column: 13, scope: !19450)
!19459 = !DILocation(line: 200, column: 29, scope: !19450)
!19460 = !DILocation(line: 200, column: 36, scope: !19450)
!19461 = !DILocation(line: 200, column: 40, scope: !19450)
!19462 = !DILocation(line: 200, column: 11, scope: !19450)
!19463 = !DILocation(line: 201, column: 27, scope: !19450)
!19464 = !DILocation(line: 201, column: 34, scope: !19450)
!19465 = !DILocation(line: 201, column: 4, scope: !19450)
!19466 = !DILocation(line: 200, column: 47, scope: !19450)
!19467 = !DILocation(line: 200, column: 9, scope: !19450)
!19468 = !DILocation(line: 203, column: 9, scope: !19450)
!19469 = !DILocation(line: 203, column: 16, scope: !19450)
!19470 = !DILocation(line: 203, column: 30, scope: !19450)
!19471 = !DILocation(line: 203, column: 28, scope: !19450)
!19472 = !DILocation(line: 203, column: 2, scope: !19450)
!19473 = distinct !DISubprogram(name: "__ilog2_u32", scope: !16508, file: !16508, line: 22, type: !19474, scopeLine: 23, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!19474 = !DISubroutineType(types: !19475)
!19475 = !{!37, !707}
!19476 = !DILocalVariable(name: "x", arg: 1, scope: !19477, file: !14344, line: 324, type: !7)
!19477 = distinct !DISubprogram(name: "fls", scope: !14344, file: !14344, line: 324, type: !19478, scopeLine: 325, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!19478 = !DISubroutineType(types: !19479)
!19479 = !{!37, !7}
!19480 = !DILocation(line: 324, column: 45, scope: !19477, inlinedAt: !19481)
!19481 = distinct !DILocation(line: 24, column: 9, scope: !19473)
!19482 = !DILocalVariable(name: "r", scope: !19477, file: !14344, line: 326, type: !37)
!19483 = !DILocation(line: 326, column: 6, scope: !19477, inlinedAt: !19481)
!19484 = !DILocalVariable(name: "n", arg: 1, scope: !19473, file: !16508, line: 22, type: !707)
!19485 = !DILocation(line: 22, column: 21, scope: !19473)
!19486 = !DILocation(line: 24, column: 13, scope: !19473)
!19487 = !DILocation(line: 340, column: 14, scope: !19477, inlinedAt: !19481)
!19488 = !DILocation(line: 338, column: 2, scope: !19477, inlinedAt: !19481)
!19489 = !{i32 404551}
!19490 = !DILocation(line: 351, column: 9, scope: !19477, inlinedAt: !19481)
!19491 = !DILocation(line: 351, column: 11, scope: !19477, inlinedAt: !19481)
!19492 = !DILocation(line: 24, column: 16, scope: !19473)
!19493 = !DILocation(line: 24, column: 2, scope: !19473)
!19494 = distinct !DISubprogram(name: "__roundup_pow_of_two", scope: !16508, file: !16508, line: 55, type: !17774, scopeLine: 56, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!19495 = !DILocalVariable(name: "n", arg: 1, scope: !19494, file: !16508, line: 55, type: !317)
!19496 = !DILocation(line: 55, column: 50, scope: !19494)
!19497 = !DILocation(line: 57, column: 25, scope: !19494)
!19498 = !DILocation(line: 57, column: 27, scope: !19494)
!19499 = !DILocation(line: 57, column: 16, scope: !19494)
!19500 = !DILocation(line: 57, column: 13, scope: !19494)
!19501 = !DILocation(line: 57, column: 2, scope: !19494)
!19502 = distinct !DISubprogram(name: "fls_long", scope: !19503, file: !19503, line: 182, type: !19504, scopeLine: 183, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!19503 = !DIFile(filename: "./include/linux/bitops.h", directory: "/home/lizy2001/genbc/linux")
!19504 = !DISubroutineType(types: !19505)
!19505 = !{!7, !317}
!19506 = !DILocation(line: 366, column: 40, scope: !16470, inlinedAt: !19507)
!19507 = distinct !DILocation(line: 186, column: 9, scope: !19502)
!19508 = !DILocation(line: 368, column: 6, scope: !16470, inlinedAt: !19507)
!19509 = !DILocalVariable(name: "l", arg: 1, scope: !19502, file: !19503, line: 182, type: !317)
!19510 = !DILocation(line: 182, column: 47, scope: !19502)
!19511 = !DILocation(line: 186, column: 15, scope: !19502)
!19512 = !DILocation(line: 374, column: 2, scope: !16470, inlinedAt: !19507)
!19513 = !DILocation(line: 376, column: 14, scope: !16470, inlinedAt: !19507)
!19514 = !DILocation(line: 377, column: 9, scope: !16470, inlinedAt: !19507)
!19515 = !DILocation(line: 377, column: 16, scope: !16470, inlinedAt: !19507)
!19516 = !DILocation(line: 186, column: 2, scope: !19502)
!19517 = distinct !DISubprogram(name: "gem_get_flow_entry", scope: !3, file: !3, line: 3275, type: !8589, scopeLine: 3277, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!19518 = !DILocalVariable(name: "netdev", arg: 1, scope: !19517, file: !3, line: 3275, type: !295)
!19519 = !DILocation(line: 3275, column: 50, scope: !19517)
!19520 = !DILocalVariable(name: "cmd", arg: 2, scope: !19517, file: !3, line: 3276, type: !8489)
!19521 = !DILocation(line: 3276, column: 25, scope: !19517)
!19522 = !DILocalVariable(name: "bp", scope: !19517, file: !3, line: 3278, type: !10238)
!19523 = !DILocation(line: 3278, column: 15, scope: !19517)
!19524 = !DILocation(line: 3278, column: 32, scope: !19517)
!19525 = !DILocation(line: 3278, column: 20, scope: !19517)
!19526 = !DILocalVariable(name: "item", scope: !19517, file: !3, line: 3279, type: !10767)
!19527 = !DILocation(line: 3279, column: 29, scope: !19517)
!19528 = !DILocalVariable(name: "__mptr", scope: !19529, file: !3, line: 3281, type: !570)
!19529 = distinct !DILexicalBlock(scope: !19530, file: !3, line: 3281, column: 2)
!19530 = distinct !DILexicalBlock(scope: !19517, file: !3, line: 3281, column: 2)
!19531 = !DILocation(line: 3281, column: 2, scope: !19529)
!19532 = !DILocation(line: 3281, column: 2, scope: !19533)
!19533 = distinct !DILexicalBlock(scope: !19529, file: !3, line: 3281, column: 2)
!19534 = !DILocation(line: 3281, column: 2, scope: !19530)
!19535 = !DILocation(line: 3281, column: 2, scope: !19536)
!19536 = distinct !DILexicalBlock(scope: !19530, file: !3, line: 3281, column: 2)
!19537 = !DILocation(line: 3282, column: 7, scope: !19538)
!19538 = distinct !DILexicalBlock(scope: !19539, file: !3, line: 3282, column: 7)
!19539 = distinct !DILexicalBlock(scope: !19536, file: !3, line: 3281, column: 56)
!19540 = !DILocation(line: 3282, column: 13, scope: !19538)
!19541 = !DILocation(line: 3282, column: 16, scope: !19538)
!19542 = !DILocation(line: 3282, column: 28, scope: !19538)
!19543 = !DILocation(line: 3282, column: 33, scope: !19538)
!19544 = !DILocation(line: 3282, column: 36, scope: !19538)
!19545 = !DILocation(line: 3282, column: 25, scope: !19538)
!19546 = !DILocation(line: 3282, column: 7, scope: !19539)
!19547 = !DILocation(line: 3283, column: 12, scope: !19548)
!19548 = distinct !DILexicalBlock(scope: !19538, file: !3, line: 3282, column: 46)
!19549 = !DILocation(line: 3283, column: 17, scope: !19548)
!19550 = !DILocation(line: 3283, column: 4, scope: !19548)
!19551 = !DILocation(line: 3283, column: 22, scope: !19548)
!19552 = !DILocation(line: 3283, column: 28, scope: !19548)
!19553 = !DILocation(line: 3284, column: 4, scope: !19548)
!19554 = !DILocation(line: 3286, column: 2, scope: !19539)
!19555 = !DILocalVariable(name: "__mptr", scope: !19556, file: !3, line: 3281, type: !570)
!19556 = distinct !DILexicalBlock(scope: !19536, file: !3, line: 3281, column: 2)
!19557 = !DILocation(line: 3281, column: 2, scope: !19556)
!19558 = !DILocation(line: 3281, column: 2, scope: !19559)
!19559 = distinct !DILexicalBlock(scope: !19556, file: !3, line: 3281, column: 2)
!19560 = distinct !{!19560, !19534, !19561}
!19561 = !DILocation(line: 3286, column: 2, scope: !19530)
!19562 = !DILocation(line: 3287, column: 2, scope: !19517)
!19563 = !DILocation(line: 3288, column: 1, scope: !19517)
!19564 = distinct !DISubprogram(name: "gem_get_all_flow_entries", scope: !3, file: !3, line: 3290, type: !8487, scopeLine: 3292, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!19565 = !DILocalVariable(name: "netdev", arg: 1, scope: !19564, file: !3, line: 3290, type: !295)
!19566 = !DILocation(line: 3290, column: 56, scope: !19564)
!19567 = !DILocalVariable(name: "cmd", arg: 2, scope: !19564, file: !3, line: 3291, type: !8489)
!19568 = !DILocation(line: 3291, column: 25, scope: !19564)
!19569 = !DILocalVariable(name: "rule_locs", arg: 3, scope: !19564, file: !3, line: 3291, type: !1460)
!19570 = !DILocation(line: 3291, column: 35, scope: !19564)
!19571 = !DILocalVariable(name: "bp", scope: !19564, file: !3, line: 3293, type: !10238)
!19572 = !DILocation(line: 3293, column: 15, scope: !19564)
!19573 = !DILocation(line: 3293, column: 32, scope: !19564)
!19574 = !DILocation(line: 3293, column: 20, scope: !19564)
!19575 = !DILocalVariable(name: "item", scope: !19564, file: !3, line: 3294, type: !10767)
!19576 = !DILocation(line: 3294, column: 29, scope: !19564)
!19577 = !DILocalVariable(name: "cnt", scope: !19564, file: !3, line: 3295, type: !1650)
!19578 = !DILocation(line: 3295, column: 11, scope: !19564)
!19579 = !DILocalVariable(name: "__mptr", scope: !19580, file: !3, line: 3297, type: !570)
!19580 = distinct !DILexicalBlock(scope: !19581, file: !3, line: 3297, column: 2)
!19581 = distinct !DILexicalBlock(scope: !19564, file: !3, line: 3297, column: 2)
!19582 = !DILocation(line: 3297, column: 2, scope: !19580)
!19583 = !DILocation(line: 3297, column: 2, scope: !19584)
!19584 = distinct !DILexicalBlock(scope: !19580, file: !3, line: 3297, column: 2)
!19585 = !DILocation(line: 3297, column: 2, scope: !19581)
!19586 = !DILocation(line: 3297, column: 2, scope: !19587)
!19587 = distinct !DILexicalBlock(scope: !19581, file: !3, line: 3297, column: 2)
!19588 = !DILocation(line: 3298, column: 7, scope: !19589)
!19589 = distinct !DILexicalBlock(scope: !19590, file: !3, line: 3298, column: 7)
!19590 = distinct !DILexicalBlock(scope: !19587, file: !3, line: 3297, column: 56)
!19591 = !DILocation(line: 3298, column: 14, scope: !19589)
!19592 = !DILocation(line: 3298, column: 19, scope: !19589)
!19593 = !DILocation(line: 3298, column: 11, scope: !19589)
!19594 = !DILocation(line: 3298, column: 7, scope: !19590)
!19595 = !DILocation(line: 3299, column: 4, scope: !19589)
!19596 = !DILocation(line: 3300, column: 20, scope: !19590)
!19597 = !DILocation(line: 3300, column: 26, scope: !19590)
!19598 = !DILocation(line: 3300, column: 29, scope: !19590)
!19599 = !DILocation(line: 3300, column: 3, scope: !19590)
!19600 = !DILocation(line: 3300, column: 13, scope: !19590)
!19601 = !DILocation(line: 3300, column: 18, scope: !19590)
!19602 = !DILocation(line: 3301, column: 6, scope: !19590)
!19603 = !DILocation(line: 3302, column: 2, scope: !19590)
!19604 = !DILocalVariable(name: "__mptr", scope: !19605, file: !3, line: 3297, type: !570)
!19605 = distinct !DILexicalBlock(scope: !19587, file: !3, line: 3297, column: 2)
!19606 = !DILocation(line: 3297, column: 2, scope: !19605)
!19607 = !DILocation(line: 3297, column: 2, scope: !19608)
!19608 = distinct !DILexicalBlock(scope: !19605, file: !3, line: 3297, column: 2)
!19609 = distinct !{!19609, !19585, !19610}
!19610 = !DILocation(line: 3302, column: 2, scope: !19581)
!19611 = !DILocation(line: 3303, column: 14, scope: !19564)
!19612 = !DILocation(line: 3303, column: 18, scope: !19564)
!19613 = !DILocation(line: 3303, column: 2, scope: !19564)
!19614 = !DILocation(line: 3303, column: 7, scope: !19564)
!19615 = !DILocation(line: 3303, column: 12, scope: !19564)
!19616 = !DILocation(line: 3304, column: 18, scope: !19564)
!19617 = !DILocation(line: 3304, column: 2, scope: !19564)
!19618 = !DILocation(line: 3304, column: 7, scope: !19564)
!19619 = !DILocation(line: 3304, column: 16, scope: !19564)
!19620 = !DILocation(line: 3306, column: 2, scope: !19564)
!19621 = !DILocation(line: 3307, column: 1, scope: !19564)
!19622 = distinct !DISubprogram(name: "gem_add_flow_filter", scope: !3, file: !3, line: 3185, type: !8589, scopeLine: 3187, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!19623 = !DILocation(line: 407, column: 64, scope: !13125, inlinedAt: !19624)
!19624 = distinct !DILocation(line: 3234, column: 2, scope: !19622)
!19625 = !DILocation(line: 407, column: 84, scope: !13125, inlinedAt: !19624)
!19626 = !DILocation(line: 407, column: 64, scope: !13125, inlinedAt: !19627)
!19627 = distinct !DILocation(line: 3230, column: 2, scope: !19622)
!19628 = !DILocation(line: 407, column: 84, scope: !13125, inlinedAt: !19627)
!19629 = !DILocation(line: 327, column: 67, scope: !11066, inlinedAt: !19630)
!19630 = distinct !DILocation(line: 3207, column: 2, scope: !19631)
!19631 = distinct !DILexicalBlock(scope: !19632, file: !3, line: 3207, column: 2)
!19632 = distinct !DILexicalBlock(scope: !19633, file: !3, line: 3207, column: 2)
!19633 = distinct !DILexicalBlock(scope: !19634, file: !3, line: 3207, column: 2)
!19634 = distinct !DILexicalBlock(scope: !19635, file: !3, line: 3207, column: 2)
!19635 = distinct !DILexicalBlock(scope: !19622, file: !3, line: 3207, column: 2)
!19636 = !DILocation(line: 445, column: 72, scope: !15780, inlinedAt: !19637)
!19637 = distinct !DILocation(line: 552, column: 10, scope: !15785, inlinedAt: !19638)
!19638 = distinct !DILocation(line: 3195, column: 10, scope: !19622)
!19639 = !DILocation(line: 446, column: 9, scope: !15780, inlinedAt: !19637)
!19640 = !DILocation(line: 446, column: 23, scope: !15780, inlinedAt: !19637)
!19641 = !DILocation(line: 448, column: 8, scope: !15780, inlinedAt: !19637)
!19642 = !DILocation(line: 318, column: 67, scope: !15801, inlinedAt: !19643)
!19643 = distinct !DILocation(line: 553, column: 20, scope: !15785, inlinedAt: !19638)
!19644 = !DILocation(line: 346, column: 58, scope: !15807, inlinedAt: !19645)
!19645 = distinct !DILocation(line: 547, column: 11, scope: !15785, inlinedAt: !19638)
!19646 = !DILocation(line: 472, column: 28, scope: !15813, inlinedAt: !19647)
!19647 = distinct !DILocation(line: 481, column: 9, scope: !15818, inlinedAt: !19648)
!19648 = distinct !DILocation(line: 545, column: 11, scope: !15820, inlinedAt: !19638)
!19649 = !DILocation(line: 472, column: 40, scope: !15813, inlinedAt: !19647)
!19650 = !DILocation(line: 472, column: 60, scope: !15813, inlinedAt: !19647)
!19651 = !DILocation(line: 478, column: 51, scope: !15818, inlinedAt: !19648)
!19652 = !DILocation(line: 478, column: 63, scope: !15818, inlinedAt: !19648)
!19653 = !DILocation(line: 480, column: 15, scope: !15818, inlinedAt: !19648)
!19654 = !DILocation(line: 538, column: 45, scope: !15787, inlinedAt: !19638)
!19655 = !DILocation(line: 538, column: 57, scope: !15787, inlinedAt: !19638)
!19656 = !DILocation(line: 542, column: 16, scope: !15785, inlinedAt: !19638)
!19657 = !DILocalVariable(name: "netdev", arg: 1, scope: !19622, file: !3, line: 3185, type: !295)
!19658 = !DILocation(line: 3185, column: 51, scope: !19622)
!19659 = !DILocalVariable(name: "cmd", arg: 2, scope: !19622, file: !3, line: 3186, type: !8489)
!19660 = !DILocation(line: 3186, column: 25, scope: !19622)
!19661 = !DILocalVariable(name: "bp", scope: !19622, file: !3, line: 3188, type: !10238)
!19662 = !DILocation(line: 3188, column: 15, scope: !19622)
!19663 = !DILocation(line: 3188, column: 32, scope: !19622)
!19664 = !DILocation(line: 3188, column: 20, scope: !19622)
!19665 = !DILocalVariable(name: "fs", scope: !19622, file: !3, line: 3189, type: !18368)
!19666 = !DILocation(line: 3189, column: 31, scope: !19622)
!19667 = !DILocation(line: 3189, column: 37, scope: !19622)
!19668 = !DILocation(line: 3189, column: 42, scope: !19622)
!19669 = !DILocalVariable(name: "item", scope: !19622, file: !3, line: 3190, type: !10767)
!19670 = !DILocation(line: 3190, column: 29, scope: !19622)
!19671 = !DILocalVariable(name: "newfs", scope: !19622, file: !3, line: 3190, type: !10767)
!19672 = !DILocation(line: 3190, column: 36, scope: !19622)
!19673 = !DILocalVariable(name: "flags", scope: !19622, file: !3, line: 3191, type: !317)
!19674 = !DILocation(line: 3191, column: 16, scope: !19622)
!19675 = !DILocalVariable(name: "ret", scope: !19622, file: !3, line: 3192, type: !37)
!19676 = !DILocation(line: 3192, column: 6, scope: !19622)
!19677 = !DILocalVariable(name: "added", scope: !19622, file: !3, line: 3193, type: !540)
!19678 = !DILocation(line: 3193, column: 7, scope: !19622)
!19679 = !DILocation(line: 540, column: 27, scope: !15786, inlinedAt: !19638)
!19680 = !DILocation(line: 540, column: 6, scope: !15786, inlinedAt: !19638)
!19681 = !DILocation(line: 540, column: 6, scope: !15787, inlinedAt: !19638)
!19682 = !DILocation(line: 544, column: 7, scope: !15820, inlinedAt: !19638)
!19683 = !DILocation(line: 544, column: 12, scope: !15820, inlinedAt: !19638)
!19684 = !DILocation(line: 544, column: 7, scope: !15785, inlinedAt: !19638)
!19685 = !DILocation(line: 545, column: 25, scope: !15820, inlinedAt: !19638)
!19686 = !DILocation(line: 545, column: 31, scope: !15820, inlinedAt: !19638)
!19687 = !DILocation(line: 480, column: 33, scope: !15818, inlinedAt: !19648)
!19688 = !DILocation(line: 480, column: 23, scope: !15818, inlinedAt: !19648)
!19689 = !DILocation(line: 481, column: 29, scope: !15818, inlinedAt: !19648)
!19690 = !DILocation(line: 481, column: 35, scope: !15818, inlinedAt: !19648)
!19691 = !DILocation(line: 481, column: 42, scope: !15818, inlinedAt: !19648)
!19692 = !DILocation(line: 474, column: 23, scope: !15813, inlinedAt: !19647)
!19693 = !DILocation(line: 474, column: 29, scope: !15813, inlinedAt: !19647)
!19694 = !DILocation(line: 474, column: 36, scope: !15813, inlinedAt: !19647)
!19695 = !DILocation(line: 474, column: 9, scope: !15813, inlinedAt: !19647)
!19696 = !DILocation(line: 545, column: 4, scope: !15820, inlinedAt: !19638)
!19697 = !DILocation(line: 547, column: 25, scope: !15785, inlinedAt: !19638)
!19698 = !DILocation(line: 348, column: 7, scope: !15900, inlinedAt: !19645)
!19699 = !DILocation(line: 348, column: 6, scope: !15807, inlinedAt: !19645)
!19700 = !DILocation(line: 349, column: 3, scope: !15900, inlinedAt: !19645)
!19701 = !DILocation(line: 351, column: 6, scope: !15904, inlinedAt: !19645)
!19702 = !DILocation(line: 351, column: 11, scope: !15904, inlinedAt: !19645)
!19703 = !DILocation(line: 351, column: 6, scope: !15807, inlinedAt: !19645)
!19704 = !DILocation(line: 352, column: 3, scope: !15904, inlinedAt: !19645)
!19705 = !DILocation(line: 354, column: 32, scope: !15909, inlinedAt: !19645)
!19706 = !DILocation(line: 354, column: 37, scope: !15909, inlinedAt: !19645)
!19707 = !DILocation(line: 354, column: 42, scope: !15909, inlinedAt: !19645)
!19708 = !DILocation(line: 354, column: 45, scope: !15909, inlinedAt: !19645)
!19709 = !DILocation(line: 354, column: 50, scope: !15909, inlinedAt: !19645)
!19710 = !DILocation(line: 354, column: 6, scope: !15807, inlinedAt: !19645)
!19711 = !DILocation(line: 355, column: 3, scope: !15909, inlinedAt: !19645)
!19712 = !DILocation(line: 356, column: 32, scope: !15917, inlinedAt: !19645)
!19713 = !DILocation(line: 356, column: 37, scope: !15917, inlinedAt: !19645)
!19714 = !DILocation(line: 356, column: 43, scope: !15917, inlinedAt: !19645)
!19715 = !DILocation(line: 356, column: 46, scope: !15917, inlinedAt: !19645)
!19716 = !DILocation(line: 356, column: 51, scope: !15917, inlinedAt: !19645)
!19717 = !DILocation(line: 356, column: 6, scope: !15807, inlinedAt: !19645)
!19718 = !DILocation(line: 357, column: 3, scope: !15917, inlinedAt: !19645)
!19719 = !DILocation(line: 358, column: 6, scope: !15925, inlinedAt: !19645)
!19720 = !DILocation(line: 358, column: 11, scope: !15925, inlinedAt: !19645)
!19721 = !DILocation(line: 358, column: 6, scope: !15807, inlinedAt: !19645)
!19722 = !DILocation(line: 358, column: 26, scope: !15925, inlinedAt: !19645)
!19723 = !DILocation(line: 359, column: 6, scope: !15930, inlinedAt: !19645)
!19724 = !DILocation(line: 359, column: 11, scope: !15930, inlinedAt: !19645)
!19725 = !DILocation(line: 359, column: 6, scope: !15807, inlinedAt: !19645)
!19726 = !DILocation(line: 359, column: 26, scope: !15930, inlinedAt: !19645)
!19727 = !DILocation(line: 360, column: 6, scope: !15935, inlinedAt: !19645)
!19728 = !DILocation(line: 360, column: 11, scope: !15935, inlinedAt: !19645)
!19729 = !DILocation(line: 360, column: 6, scope: !15807, inlinedAt: !19645)
!19730 = !DILocation(line: 360, column: 26, scope: !15935, inlinedAt: !19645)
!19731 = !DILocation(line: 361, column: 6, scope: !15940, inlinedAt: !19645)
!19732 = !DILocation(line: 361, column: 11, scope: !15940, inlinedAt: !19645)
!19733 = !DILocation(line: 361, column: 6, scope: !15807, inlinedAt: !19645)
!19734 = !DILocation(line: 361, column: 26, scope: !15940, inlinedAt: !19645)
!19735 = !DILocation(line: 362, column: 6, scope: !15945, inlinedAt: !19645)
!19736 = !DILocation(line: 362, column: 11, scope: !15945, inlinedAt: !19645)
!19737 = !DILocation(line: 362, column: 6, scope: !15807, inlinedAt: !19645)
!19738 = !DILocation(line: 362, column: 26, scope: !15945, inlinedAt: !19645)
!19739 = !DILocation(line: 363, column: 6, scope: !15950, inlinedAt: !19645)
!19740 = !DILocation(line: 363, column: 11, scope: !15950, inlinedAt: !19645)
!19741 = !DILocation(line: 363, column: 6, scope: !15807, inlinedAt: !19645)
!19742 = !DILocation(line: 363, column: 26, scope: !15950, inlinedAt: !19645)
!19743 = !DILocation(line: 364, column: 6, scope: !15955, inlinedAt: !19645)
!19744 = !DILocation(line: 364, column: 11, scope: !15955, inlinedAt: !19645)
!19745 = !DILocation(line: 364, column: 6, scope: !15807, inlinedAt: !19645)
!19746 = !DILocation(line: 364, column: 26, scope: !15955, inlinedAt: !19645)
!19747 = !DILocation(line: 365, column: 6, scope: !15960, inlinedAt: !19645)
!19748 = !DILocation(line: 365, column: 11, scope: !15960, inlinedAt: !19645)
!19749 = !DILocation(line: 365, column: 6, scope: !15807, inlinedAt: !19645)
!19750 = !DILocation(line: 365, column: 26, scope: !15960, inlinedAt: !19645)
!19751 = !DILocation(line: 366, column: 6, scope: !15965, inlinedAt: !19645)
!19752 = !DILocation(line: 366, column: 11, scope: !15965, inlinedAt: !19645)
!19753 = !DILocation(line: 366, column: 6, scope: !15807, inlinedAt: !19645)
!19754 = !DILocation(line: 366, column: 26, scope: !15965, inlinedAt: !19645)
!19755 = !DILocation(line: 367, column: 6, scope: !15970, inlinedAt: !19645)
!19756 = !DILocation(line: 367, column: 11, scope: !15970, inlinedAt: !19645)
!19757 = !DILocation(line: 367, column: 6, scope: !15807, inlinedAt: !19645)
!19758 = !DILocation(line: 367, column: 26, scope: !15970, inlinedAt: !19645)
!19759 = !DILocation(line: 368, column: 6, scope: !15975, inlinedAt: !19645)
!19760 = !DILocation(line: 368, column: 11, scope: !15975, inlinedAt: !19645)
!19761 = !DILocation(line: 368, column: 6, scope: !15807, inlinedAt: !19645)
!19762 = !DILocation(line: 368, column: 26, scope: !15975, inlinedAt: !19645)
!19763 = !DILocation(line: 369, column: 6, scope: !15980, inlinedAt: !19645)
!19764 = !DILocation(line: 369, column: 11, scope: !15980, inlinedAt: !19645)
!19765 = !DILocation(line: 369, column: 6, scope: !15807, inlinedAt: !19645)
!19766 = !DILocation(line: 369, column: 26, scope: !15980, inlinedAt: !19645)
!19767 = !DILocation(line: 370, column: 6, scope: !15985, inlinedAt: !19645)
!19768 = !DILocation(line: 370, column: 11, scope: !15985, inlinedAt: !19645)
!19769 = !DILocation(line: 370, column: 6, scope: !15807, inlinedAt: !19645)
!19770 = !DILocation(line: 370, column: 26, scope: !15985, inlinedAt: !19645)
!19771 = !DILocation(line: 371, column: 6, scope: !15990, inlinedAt: !19645)
!19772 = !DILocation(line: 371, column: 11, scope: !15990, inlinedAt: !19645)
!19773 = !DILocation(line: 371, column: 6, scope: !15807, inlinedAt: !19645)
!19774 = !DILocation(line: 371, column: 26, scope: !15990, inlinedAt: !19645)
!19775 = !DILocation(line: 372, column: 6, scope: !15995, inlinedAt: !19645)
!19776 = !DILocation(line: 372, column: 11, scope: !15995, inlinedAt: !19645)
!19777 = !DILocation(line: 372, column: 6, scope: !15807, inlinedAt: !19645)
!19778 = !DILocation(line: 372, column: 26, scope: !15995, inlinedAt: !19645)
!19779 = !DILocation(line: 373, column: 6, scope: !16000, inlinedAt: !19645)
!19780 = !DILocation(line: 373, column: 11, scope: !16000, inlinedAt: !19645)
!19781 = !DILocation(line: 373, column: 6, scope: !15807, inlinedAt: !19645)
!19782 = !DILocation(line: 373, column: 26, scope: !16000, inlinedAt: !19645)
!19783 = !DILocation(line: 374, column: 6, scope: !16005, inlinedAt: !19645)
!19784 = !DILocation(line: 374, column: 11, scope: !16005, inlinedAt: !19645)
!19785 = !DILocation(line: 374, column: 6, scope: !15807, inlinedAt: !19645)
!19786 = !DILocation(line: 374, column: 26, scope: !16005, inlinedAt: !19645)
!19787 = !DILocation(line: 375, column: 6, scope: !16010, inlinedAt: !19645)
!19788 = !DILocation(line: 375, column: 11, scope: !16010, inlinedAt: !19645)
!19789 = !DILocation(line: 375, column: 6, scope: !15807, inlinedAt: !19645)
!19790 = !DILocation(line: 375, column: 27, scope: !16010, inlinedAt: !19645)
!19791 = !DILocation(line: 376, column: 6, scope: !16015, inlinedAt: !19645)
!19792 = !DILocation(line: 376, column: 11, scope: !16015, inlinedAt: !19645)
!19793 = !DILocation(line: 376, column: 6, scope: !15807, inlinedAt: !19645)
!19794 = !DILocation(line: 376, column: 32, scope: !16015, inlinedAt: !19645)
!19795 = !DILocation(line: 377, column: 6, scope: !16020, inlinedAt: !19645)
!19796 = !DILocation(line: 377, column: 11, scope: !16020, inlinedAt: !19645)
!19797 = !DILocation(line: 377, column: 6, scope: !15807, inlinedAt: !19645)
!19798 = !DILocation(line: 377, column: 32, scope: !16020, inlinedAt: !19645)
!19799 = !DILocation(line: 378, column: 6, scope: !16025, inlinedAt: !19645)
!19800 = !DILocation(line: 378, column: 11, scope: !16025, inlinedAt: !19645)
!19801 = !DILocation(line: 378, column: 6, scope: !15807, inlinedAt: !19645)
!19802 = !DILocation(line: 378, column: 32, scope: !16025, inlinedAt: !19645)
!19803 = !DILocation(line: 379, column: 6, scope: !16030, inlinedAt: !19645)
!19804 = !DILocation(line: 379, column: 11, scope: !16030, inlinedAt: !19645)
!19805 = !DILocation(line: 379, column: 6, scope: !15807, inlinedAt: !19645)
!19806 = !DILocation(line: 379, column: 33, scope: !16030, inlinedAt: !19645)
!19807 = !DILocation(line: 380, column: 6, scope: !16035, inlinedAt: !19645)
!19808 = !DILocation(line: 380, column: 11, scope: !16035, inlinedAt: !19645)
!19809 = !DILocation(line: 380, column: 6, scope: !15807, inlinedAt: !19645)
!19810 = !DILocation(line: 380, column: 33, scope: !16035, inlinedAt: !19645)
!19811 = !DILocation(line: 381, column: 6, scope: !16040, inlinedAt: !19645)
!19812 = !DILocation(line: 381, column: 11, scope: !16040, inlinedAt: !19645)
!19813 = !DILocation(line: 381, column: 6, scope: !15807, inlinedAt: !19645)
!19814 = !DILocation(line: 381, column: 33, scope: !16040, inlinedAt: !19645)
!19815 = !DILocation(line: 382, column: 2, scope: !16045, inlinedAt: !19645)
!19816 = !DILocation(line: 382, column: 2, scope: !16049, inlinedAt: !19645)
!19817 = !DILocation(line: 382, column: 2, scope: !16050, inlinedAt: !19645)
!19818 = !DILocation(line: 386, column: 1, scope: !15807, inlinedAt: !19645)
!19819 = !DILocation(line: 547, column: 9, scope: !15785, inlinedAt: !19638)
!19820 = !DILocation(line: 549, column: 8, scope: !16056, inlinedAt: !19638)
!19821 = !DILocation(line: 549, column: 7, scope: !15785, inlinedAt: !19638)
!19822 = !DILocation(line: 550, column: 4, scope: !16056, inlinedAt: !19638)
!19823 = !DILocation(line: 553, column: 33, scope: !15785, inlinedAt: !19638)
!19824 = !DILocation(line: 325, column: 6, scope: !16061, inlinedAt: !19643)
!19825 = !DILocation(line: 325, column: 6, scope: !15801, inlinedAt: !19643)
!19826 = !DILocation(line: 326, column: 3, scope: !16061, inlinedAt: !19643)
!19827 = !DILocation(line: 332, column: 9, scope: !15801, inlinedAt: !19643)
!19828 = !DILocation(line: 332, column: 15, scope: !15801, inlinedAt: !19643)
!19829 = !DILocation(line: 332, column: 2, scope: !15801, inlinedAt: !19643)
!19830 = !DILocation(line: 336, column: 1, scope: !15801, inlinedAt: !19643)
!19831 = !DILocation(line: 553, column: 5, scope: !15785, inlinedAt: !19638)
!19832 = !DILocation(line: 553, column: 41, scope: !15785, inlinedAt: !19638)
!19833 = !DILocation(line: 554, column: 5, scope: !15785, inlinedAt: !19638)
!19834 = !DILocation(line: 554, column: 12, scope: !15785, inlinedAt: !19638)
!19835 = !DILocation(line: 448, column: 31, scope: !15780, inlinedAt: !19637)
!19836 = !DILocation(line: 448, column: 34, scope: !15780, inlinedAt: !19637)
!19837 = !DILocation(line: 448, column: 14, scope: !15780, inlinedAt: !19637)
!19838 = !DILocation(line: 450, column: 22, scope: !15780, inlinedAt: !19637)
!19839 = !DILocation(line: 450, column: 25, scope: !15780, inlinedAt: !19637)
!19840 = !DILocation(line: 450, column: 30, scope: !15780, inlinedAt: !19637)
!19841 = !DILocation(line: 450, column: 36, scope: !15780, inlinedAt: !19637)
!19842 = !DILocation(line: 450, column: 8, scope: !15780, inlinedAt: !19637)
!19843 = !DILocation(line: 450, column: 6, scope: !15780, inlinedAt: !19637)
!19844 = !DILocation(line: 451, column: 9, scope: !15780, inlinedAt: !19637)
!19845 = !DILocation(line: 552, column: 3, scope: !15785, inlinedAt: !19638)
!19846 = !DILocation(line: 557, column: 19, scope: !15787, inlinedAt: !19638)
!19847 = !DILocation(line: 557, column: 25, scope: !15787, inlinedAt: !19638)
!19848 = !DILocation(line: 557, column: 9, scope: !15787, inlinedAt: !19638)
!19849 = !DILocation(line: 557, column: 2, scope: !15787, inlinedAt: !19638)
!19850 = !DILocation(line: 558, column: 1, scope: !15787, inlinedAt: !19638)
!19851 = !DILocation(line: 3195, column: 10, scope: !19622)
!19852 = !DILocation(line: 3195, column: 8, scope: !19622)
!19853 = !DILocation(line: 3196, column: 6, scope: !19854)
!19854 = distinct !DILexicalBlock(scope: !19622, file: !3, line: 3196, column: 6)
!19855 = !DILocation(line: 3196, column: 12, scope: !19854)
!19856 = !DILocation(line: 3196, column: 6, scope: !19622)
!19857 = !DILocation(line: 3197, column: 3, scope: !19854)
!19858 = !DILocation(line: 3198, column: 10, scope: !19622)
!19859 = !DILocation(line: 3198, column: 17, scope: !19622)
!19860 = !DILocation(line: 3198, column: 2, scope: !19622)
!19861 = !DILocation(line: 3198, column: 21, scope: !19622)
!19862 = !DILocation(line: 3207, column: 2, scope: !19622)
!19863 = !DILocation(line: 3207, column: 2, scope: !19635)
!19864 = !DILocalVariable(name: "__dummy", scope: !19865, file: !3, line: 3207, type: !317)
!19865 = distinct !DILexicalBlock(scope: !19634, file: !3, line: 3207, column: 2)
!19866 = !DILocation(line: 3207, column: 2, scope: !19865)
!19867 = !DILocalVariable(name: "__dummy2", scope: !19865, file: !3, line: 3207, type: !317)
!19868 = !DILocation(line: 3207, column: 2, scope: !19634)
!19869 = !DILocation(line: 3207, column: 2, scope: !19633)
!19870 = !DILocation(line: 3207, column: 2, scope: !19871)
!19871 = distinct !DILexicalBlock(scope: !19633, file: !3, line: 3207, column: 2)
!19872 = !DILocalVariable(name: "__dummy", scope: !19873, file: !3, line: 3207, type: !317)
!19873 = distinct !DILexicalBlock(scope: !19874, file: !3, line: 3207, column: 2)
!19874 = distinct !DILexicalBlock(scope: !19871, file: !3, line: 3207, column: 2)
!19875 = !DILocation(line: 3207, column: 2, scope: !19873)
!19876 = !DILocalVariable(name: "__dummy2", scope: !19873, file: !3, line: 3207, type: !317)
!19877 = !DILocation(line: 3207, column: 2, scope: !19874)
!19878 = !DILocation(line: 3207, column: 2, scope: !19632)
!19879 = !{i32 -2137543236}
!19880 = !DILocation(line: 3207, column: 2, scope: !19631)
!19881 = !DILocation(line: 329, column: 10, scope: !11066, inlinedAt: !19630)
!19882 = !DILocation(line: 329, column: 16, scope: !11066, inlinedAt: !19630)
!19883 = !DILocalVariable(name: "__mptr", scope: !19884, file: !3, line: 3210, type: !570)
!19884 = distinct !DILexicalBlock(scope: !19885, file: !3, line: 3210, column: 2)
!19885 = distinct !DILexicalBlock(scope: !19622, file: !3, line: 3210, column: 2)
!19886 = !DILocation(line: 3210, column: 2, scope: !19884)
!19887 = !DILocation(line: 3210, column: 2, scope: !19888)
!19888 = distinct !DILexicalBlock(scope: !19884, file: !3, line: 3210, column: 2)
!19889 = !DILocation(line: 3210, column: 2, scope: !19885)
!19890 = !DILocation(line: 3210, column: 2, scope: !19891)
!19891 = distinct !DILexicalBlock(scope: !19885, file: !3, line: 3210, column: 2)
!19892 = !DILocation(line: 3211, column: 7, scope: !19893)
!19893 = distinct !DILexicalBlock(scope: !19894, file: !3, line: 3211, column: 7)
!19894 = distinct !DILexicalBlock(scope: !19891, file: !3, line: 3210, column: 56)
!19895 = !DILocation(line: 3211, column: 13, scope: !19893)
!19896 = !DILocation(line: 3211, column: 16, scope: !19893)
!19897 = !DILocation(line: 3211, column: 27, scope: !19893)
!19898 = !DILocation(line: 3211, column: 34, scope: !19893)
!19899 = !DILocation(line: 3211, column: 37, scope: !19893)
!19900 = !DILocation(line: 3211, column: 25, scope: !19893)
!19901 = !DILocation(line: 3211, column: 7, scope: !19894)
!19902 = !DILocation(line: 3212, column: 19, scope: !19903)
!19903 = distinct !DILexicalBlock(scope: !19893, file: !3, line: 3211, column: 47)
!19904 = !DILocation(line: 3212, column: 26, scope: !19903)
!19905 = !DILocation(line: 3212, column: 33, scope: !19903)
!19906 = !DILocation(line: 3212, column: 39, scope: !19903)
!19907 = !DILocation(line: 3212, column: 4, scope: !19903)
!19908 = !DILocation(line: 3213, column: 10, scope: !19903)
!19909 = !DILocation(line: 3214, column: 4, scope: !19903)
!19910 = !DILocation(line: 3215, column: 14, scope: !19911)
!19911 = distinct !DILexicalBlock(scope: !19893, file: !3, line: 3215, column: 14)
!19912 = !DILocation(line: 3215, column: 20, scope: !19911)
!19913 = !DILocation(line: 3215, column: 23, scope: !19911)
!19914 = !DILocation(line: 3215, column: 35, scope: !19911)
!19915 = !DILocation(line: 3215, column: 39, scope: !19911)
!19916 = !DILocation(line: 3215, column: 32, scope: !19911)
!19917 = !DILocation(line: 3215, column: 14, scope: !19893)
!19918 = !DILocation(line: 3216, column: 15, scope: !19919)
!19919 = distinct !DILexicalBlock(scope: !19911, file: !3, line: 3215, column: 49)
!19920 = !DILocation(line: 3217, column: 6, scope: !19919)
!19921 = !DILocation(line: 3217, column: 10, scope: !19919)
!19922 = !DILocation(line: 3216, column: 4, scope: !19919)
!19923 = !DILocation(line: 3218, column: 8, scope: !19919)
!19924 = !DILocation(line: 3219, column: 4, scope: !19919)
!19925 = !DILocation(line: 3221, column: 2, scope: !19894)
!19926 = !DILocalVariable(name: "__mptr", scope: !19927, file: !3, line: 3210, type: !570)
!19927 = distinct !DILexicalBlock(scope: !19891, file: !3, line: 3210, column: 2)
!19928 = !DILocation(line: 3210, column: 2, scope: !19927)
!19929 = !DILocation(line: 3210, column: 2, scope: !19930)
!19930 = distinct !DILexicalBlock(scope: !19927, file: !3, line: 3210, column: 2)
!19931 = distinct !{!19931, !19889, !19932}
!19932 = !DILocation(line: 3221, column: 2, scope: !19885)
!19933 = !DILocation(line: 3222, column: 7, scope: !19934)
!19934 = distinct !DILexicalBlock(scope: !19622, file: !3, line: 3222, column: 6)
!19935 = !DILocation(line: 3222, column: 6, scope: !19622)
!19936 = !DILocation(line: 3223, column: 18, scope: !19934)
!19937 = !DILocation(line: 3223, column: 25, scope: !19934)
!19938 = !DILocation(line: 3223, column: 32, scope: !19934)
!19939 = !DILocation(line: 3223, column: 36, scope: !19934)
!19940 = !DILocation(line: 3223, column: 47, scope: !19934)
!19941 = !DILocation(line: 3223, column: 3, scope: !19934)
!19942 = !DILocation(line: 3225, column: 20, scope: !19622)
!19943 = !DILocation(line: 3225, column: 24, scope: !19622)
!19944 = !DILocation(line: 3225, column: 2, scope: !19622)
!19945 = !DILocation(line: 3226, column: 2, scope: !19622)
!19946 = !DILocation(line: 3226, column: 6, scope: !19622)
!19947 = !DILocation(line: 3226, column: 17, scope: !19622)
!19948 = !DILocation(line: 3226, column: 22, scope: !19622)
!19949 = !DILocation(line: 3228, column: 26, scope: !19622)
!19950 = !DILocation(line: 3228, column: 2, scope: !19622)
!19951 = !DILocation(line: 3230, column: 26, scope: !19622)
!19952 = !DILocation(line: 3230, column: 30, scope: !19622)
!19953 = !DILocation(line: 3230, column: 42, scope: !19622)
!19954 = !DILocation(line: 409, column: 2, scope: !13335, inlinedAt: !19627)
!19955 = !DILocation(line: 409, column: 2, scope: !13340, inlinedAt: !19627)
!19956 = !DILocation(line: 409, column: 2, scope: !13341, inlinedAt: !19627)
!19957 = !DILocation(line: 409, column: 2, scope: !13348, inlinedAt: !19627)
!19958 = !DILocation(line: 409, column: 2, scope: !13351, inlinedAt: !19627)
!19959 = !DILocation(line: 3231, column: 2, scope: !19622)
!19960 = !DILabel(scope: !19622, name: "err", file: !3, line: 3233)
!19961 = !DILocation(line: 3233, column: 1, scope: !19622)
!19962 = !DILocation(line: 3234, column: 26, scope: !19622)
!19963 = !DILocation(line: 3234, column: 30, scope: !19622)
!19964 = !DILocation(line: 3234, column: 42, scope: !19622)
!19965 = !DILocation(line: 409, column: 2, scope: !13335, inlinedAt: !19624)
!19966 = !DILocation(line: 409, column: 2, scope: !13340, inlinedAt: !19624)
!19967 = !DILocation(line: 409, column: 2, scope: !13341, inlinedAt: !19624)
!19968 = !DILocation(line: 409, column: 2, scope: !13348, inlinedAt: !19624)
!19969 = !DILocation(line: 409, column: 2, scope: !13351, inlinedAt: !19624)
!19970 = !DILocation(line: 3235, column: 8, scope: !19622)
!19971 = !DILocation(line: 3235, column: 2, scope: !19622)
!19972 = !DILocation(line: 3236, column: 9, scope: !19622)
!19973 = !DILocation(line: 3236, column: 2, scope: !19622)
!19974 = !DILocation(line: 3237, column: 1, scope: !19622)
!19975 = distinct !DISubprogram(name: "gem_del_flow_filter", scope: !3, file: !3, line: 3239, type: !8589, scopeLine: 3241, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!19976 = !DILocation(line: 407, column: 64, scope: !13125, inlinedAt: !19977)
!19977 = distinct !DILocation(line: 3265, column: 4, scope: !19978)
!19978 = distinct !DILexicalBlock(scope: !19979, file: !3, line: 3250, column: 46)
!19979 = distinct !DILexicalBlock(scope: !19980, file: !3, line: 3250, column: 7)
!19980 = distinct !DILexicalBlock(scope: !19981, file: !3, line: 3249, column: 56)
!19981 = distinct !DILexicalBlock(scope: !19982, file: !3, line: 3249, column: 2)
!19982 = distinct !DILexicalBlock(scope: !19975, file: !3, line: 3249, column: 2)
!19983 = !DILocation(line: 407, column: 84, scope: !13125, inlinedAt: !19977)
!19984 = !DILocation(line: 407, column: 64, scope: !13125, inlinedAt: !19985)
!19985 = distinct !DILocation(line: 3271, column: 2, scope: !19975)
!19986 = !DILocation(line: 407, column: 84, scope: !13125, inlinedAt: !19985)
!19987 = !DILocation(line: 327, column: 67, scope: !11066, inlinedAt: !19988)
!19988 = distinct !DILocation(line: 3247, column: 2, scope: !19989)
!19989 = distinct !DILexicalBlock(scope: !19990, file: !3, line: 3247, column: 2)
!19990 = distinct !DILexicalBlock(scope: !19991, file: !3, line: 3247, column: 2)
!19991 = distinct !DILexicalBlock(scope: !19992, file: !3, line: 3247, column: 2)
!19992 = distinct !DILexicalBlock(scope: !19993, file: !3, line: 3247, column: 2)
!19993 = distinct !DILexicalBlock(scope: !19975, file: !3, line: 3247, column: 2)
!19994 = !DILocalVariable(name: "netdev", arg: 1, scope: !19975, file: !3, line: 3239, type: !295)
!19995 = !DILocation(line: 3239, column: 51, scope: !19975)
!19996 = !DILocalVariable(name: "cmd", arg: 2, scope: !19975, file: !3, line: 3240, type: !8489)
!19997 = !DILocation(line: 3240, column: 25, scope: !19975)
!19998 = !DILocalVariable(name: "bp", scope: !19975, file: !3, line: 3242, type: !10238)
!19999 = !DILocation(line: 3242, column: 15, scope: !19975)
!20000 = !DILocation(line: 3242, column: 32, scope: !19975)
!20001 = !DILocation(line: 3242, column: 20, scope: !19975)
!20002 = !DILocalVariable(name: "item", scope: !19975, file: !3, line: 3243, type: !10767)
!20003 = !DILocation(line: 3243, column: 29, scope: !19975)
!20004 = !DILocalVariable(name: "fs", scope: !19975, file: !3, line: 3244, type: !18368)
!20005 = !DILocation(line: 3244, column: 31, scope: !19975)
!20006 = !DILocalVariable(name: "flags", scope: !19975, file: !3, line: 3245, type: !317)
!20007 = !DILocation(line: 3245, column: 16, scope: !19975)
!20008 = !DILocation(line: 3247, column: 2, scope: !19975)
!20009 = !DILocation(line: 3247, column: 2, scope: !19993)
!20010 = !DILocalVariable(name: "__dummy", scope: !20011, file: !3, line: 3247, type: !317)
!20011 = distinct !DILexicalBlock(scope: !19992, file: !3, line: 3247, column: 2)
!20012 = !DILocation(line: 3247, column: 2, scope: !20011)
!20013 = !DILocalVariable(name: "__dummy2", scope: !20011, file: !3, line: 3247, type: !317)
!20014 = !DILocation(line: 3247, column: 2, scope: !19992)
!20015 = !DILocation(line: 3247, column: 2, scope: !19991)
!20016 = !DILocation(line: 3247, column: 2, scope: !20017)
!20017 = distinct !DILexicalBlock(scope: !19991, file: !3, line: 3247, column: 2)
!20018 = !DILocalVariable(name: "__dummy", scope: !20019, file: !3, line: 3247, type: !317)
!20019 = distinct !DILexicalBlock(scope: !20020, file: !3, line: 3247, column: 2)
!20020 = distinct !DILexicalBlock(scope: !20017, file: !3, line: 3247, column: 2)
!20021 = !DILocation(line: 3247, column: 2, scope: !20019)
!20022 = !DILocalVariable(name: "__dummy2", scope: !20019, file: !3, line: 3247, type: !317)
!20023 = !DILocation(line: 3247, column: 2, scope: !20020)
!20024 = !DILocation(line: 3247, column: 2, scope: !19990)
!20025 = !{i32 -2137538228}
!20026 = !DILocation(line: 3247, column: 2, scope: !19989)
!20027 = !DILocation(line: 329, column: 10, scope: !11066, inlinedAt: !19988)
!20028 = !DILocation(line: 329, column: 16, scope: !11066, inlinedAt: !19988)
!20029 = !DILocalVariable(name: "__mptr", scope: !20030, file: !3, line: 3249, type: !570)
!20030 = distinct !DILexicalBlock(scope: !19982, file: !3, line: 3249, column: 2)
!20031 = !DILocation(line: 3249, column: 2, scope: !20030)
!20032 = !DILocation(line: 3249, column: 2, scope: !20033)
!20033 = distinct !DILexicalBlock(scope: !20030, file: !3, line: 3249, column: 2)
!20034 = !DILocation(line: 3249, column: 2, scope: !19982)
!20035 = !DILocation(line: 3249, column: 2, scope: !19981)
!20036 = !DILocation(line: 3250, column: 7, scope: !19979)
!20037 = !DILocation(line: 3250, column: 13, scope: !19979)
!20038 = !DILocation(line: 3250, column: 16, scope: !19979)
!20039 = !DILocation(line: 3250, column: 28, scope: !19979)
!20040 = !DILocation(line: 3250, column: 33, scope: !19979)
!20041 = !DILocation(line: 3250, column: 36, scope: !19979)
!20042 = !DILocation(line: 3250, column: 25, scope: !19979)
!20043 = !DILocation(line: 3250, column: 7, scope: !19980)
!20044 = !DILocation(line: 3252, column: 11, scope: !19978)
!20045 = !DILocation(line: 3252, column: 17, scope: !19978)
!20046 = !DILocation(line: 3252, column: 7, scope: !19978)
!20047 = !DILocation(line: 3261, column: 4, scope: !19978)
!20048 = !DILocation(line: 3263, column: 14, scope: !19978)
!20049 = !DILocation(line: 3263, column: 20, scope: !19978)
!20050 = !DILocation(line: 3263, column: 4, scope: !19978)
!20051 = !DILocation(line: 3264, column: 4, scope: !19978)
!20052 = !DILocation(line: 3264, column: 8, scope: !19978)
!20053 = !DILocation(line: 3264, column: 19, scope: !19978)
!20054 = !DILocation(line: 3264, column: 24, scope: !19978)
!20055 = !DILocation(line: 3265, column: 28, scope: !19978)
!20056 = !DILocation(line: 3265, column: 32, scope: !19978)
!20057 = !DILocation(line: 3265, column: 44, scope: !19978)
!20058 = !DILocation(line: 409, column: 2, scope: !13335, inlinedAt: !19977)
!20059 = !DILocation(line: 409, column: 2, scope: !13340, inlinedAt: !19977)
!20060 = !DILocation(line: 409, column: 2, scope: !13341, inlinedAt: !19977)
!20061 = !DILocation(line: 409, column: 2, scope: !13348, inlinedAt: !19977)
!20062 = !DILocation(line: 409, column: 2, scope: !13351, inlinedAt: !19977)
!20063 = !DILocation(line: 3266, column: 10, scope: !19978)
!20064 = !DILocation(line: 3266, column: 4, scope: !19978)
!20065 = !DILocation(line: 3267, column: 4, scope: !19978)
!20066 = !DILocation(line: 3269, column: 2, scope: !19980)
!20067 = !DILocalVariable(name: "__mptr", scope: !20068, file: !3, line: 3249, type: !570)
!20068 = distinct !DILexicalBlock(scope: !19981, file: !3, line: 3249, column: 2)
!20069 = !DILocation(line: 3249, column: 2, scope: !20068)
!20070 = !DILocation(line: 3249, column: 2, scope: !20071)
!20071 = distinct !DILexicalBlock(scope: !20068, file: !3, line: 3249, column: 2)
!20072 = distinct !{!20072, !20034, !20073}
!20073 = !DILocation(line: 3269, column: 2, scope: !19982)
!20074 = !DILocation(line: 3271, column: 26, scope: !19975)
!20075 = !DILocation(line: 3271, column: 30, scope: !19975)
!20076 = !DILocation(line: 3271, column: 42, scope: !19975)
!20077 = !DILocation(line: 409, column: 2, scope: !13335, inlinedAt: !19985)
!20078 = !DILocation(line: 409, column: 2, scope: !13340, inlinedAt: !19985)
!20079 = !DILocation(line: 409, column: 2, scope: !13341, inlinedAt: !19985)
!20080 = !DILocation(line: 409, column: 2, scope: !13348, inlinedAt: !19985)
!20081 = !DILocation(line: 409, column: 2, scope: !13351, inlinedAt: !19985)
!20082 = !DILocation(line: 3272, column: 2, scope: !19975)
!20083 = !DILocation(line: 3273, column: 1, scope: !19975)
!20084 = distinct !DISubprogram(name: "list_add_tail", scope: !13106, file: !13106, line: 98, type: !20085, scopeLine: 99, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!20085 = !DISubroutineType(types: !20086)
!20086 = !{null, !292, !292}
!20087 = !DILocalVariable(name: "new", arg: 1, scope: !20084, file: !13106, line: 98, type: !292)
!20088 = !DILocation(line: 98, column: 52, scope: !20084)
!20089 = !DILocalVariable(name: "head", arg: 2, scope: !20084, file: !13106, line: 98, type: !292)
!20090 = !DILocation(line: 98, column: 75, scope: !20084)
!20091 = !DILocation(line: 100, column: 13, scope: !20084)
!20092 = !DILocation(line: 100, column: 18, scope: !20084)
!20093 = !DILocation(line: 100, column: 24, scope: !20084)
!20094 = !DILocation(line: 100, column: 30, scope: !20084)
!20095 = !DILocation(line: 100, column: 2, scope: !20084)
!20096 = !DILocation(line: 101, column: 1, scope: !20084)
!20097 = distinct !DISubprogram(name: "gem_prog_cmp_regs", scope: !3, file: !3, line: 3105, type: !20098, scopeLine: 3106, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!20098 = !DISubroutineType(types: !20099)
!20099 = !{null, !10238, !18368}
!20100 = !DILocalVariable(name: "bp", arg: 1, scope: !20097, file: !3, line: 3105, type: !10238)
!20101 = !DILocation(line: 3105, column: 44, scope: !20097)
!20102 = !DILocalVariable(name: "fs", arg: 2, scope: !20097, file: !3, line: 3105, type: !18368)
!20103 = !DILocation(line: 3105, column: 77, scope: !20097)
!20104 = !DILocalVariable(name: "tp4sp_v", scope: !20097, file: !3, line: 3107, type: !18373)
!20105 = !DILocation(line: 3107, column: 30, scope: !20097)
!20106 = !DILocalVariable(name: "tp4sp_m", scope: !20097, file: !3, line: 3107, type: !18373)
!20107 = !DILocation(line: 3107, column: 40, scope: !20097)
!20108 = !DILocalVariable(name: "index", scope: !20097, file: !3, line: 3108, type: !10233)
!20109 = !DILocation(line: 3108, column: 11, scope: !20097)
!20110 = !DILocation(line: 3108, column: 19, scope: !20097)
!20111 = !DILocation(line: 3108, column: 23, scope: !20097)
!20112 = !DILocalVariable(name: "w0", scope: !20097, file: !3, line: 3109, type: !707)
!20113 = !DILocation(line: 3109, column: 6, scope: !20097)
!20114 = !DILocalVariable(name: "w1", scope: !20097, file: !3, line: 3109, type: !707)
!20115 = !DILocation(line: 3109, column: 10, scope: !20097)
!20116 = !DILocalVariable(name: "t2_scr", scope: !20097, file: !3, line: 3109, type: !707)
!20117 = !DILocation(line: 3109, column: 14, scope: !20097)
!20118 = !DILocalVariable(name: "cmp_a", scope: !20097, file: !3, line: 3110, type: !540)
!20119 = !DILocation(line: 3110, column: 7, scope: !20097)
!20120 = !DILocalVariable(name: "cmp_b", scope: !20097, file: !3, line: 3111, type: !540)
!20121 = !DILocation(line: 3111, column: 7, scope: !20097)
!20122 = !DILocalVariable(name: "cmp_c", scope: !20097, file: !3, line: 3112, type: !540)
!20123 = !DILocation(line: 3112, column: 7, scope: !20097)
!20124 = !DILocation(line: 3114, column: 14, scope: !20097)
!20125 = !DILocation(line: 3114, column: 18, scope: !20097)
!20126 = !DILocation(line: 3114, column: 22, scope: !20097)
!20127 = !DILocation(line: 3114, column: 10, scope: !20097)
!20128 = !DILocation(line: 3115, column: 14, scope: !20097)
!20129 = !DILocation(line: 3115, column: 18, scope: !20097)
!20130 = !DILocation(line: 3115, column: 22, scope: !20097)
!20131 = !DILocation(line: 3115, column: 10, scope: !20097)
!20132 = !DILocation(line: 3118, column: 6, scope: !20133)
!20133 = distinct !DILexicalBlock(scope: !20097, file: !3, line: 3118, column: 6)
!20134 = !DILocation(line: 3118, column: 15, scope: !20133)
!20135 = !DILocation(line: 3118, column: 22, scope: !20133)
!20136 = !DILocation(line: 3118, column: 6, scope: !20097)
!20137 = !DILocation(line: 3120, column: 6, scope: !20138)
!20138 = distinct !DILexicalBlock(scope: !20133, file: !3, line: 3118, column: 37)
!20139 = !DILocation(line: 3121, column: 6, scope: !20138)
!20140 = !DILocation(line: 3122, column: 8, scope: !20138)
!20141 = !DILocation(line: 3122, column: 17, scope: !20138)
!20142 = !DILocation(line: 3122, column: 6, scope: !20138)
!20143 = !DILocation(line: 3123, column: 8, scope: !20138)
!20144 = !DILocation(line: 3123, column: 6, scope: !20138)
!20145 = !DILocation(line: 3124, column: 8, scope: !20138)
!20146 = !DILocation(line: 3124, column: 6, scope: !20138)
!20147 = !DILocation(line: 3125, column: 8, scope: !20138)
!20148 = !DILocation(line: 3125, column: 6, scope: !20138)
!20149 = !DILocation(line: 3126, column: 3, scope: !20138)
!20150 = !DILocation(line: 3127, column: 3, scope: !20138)
!20151 = !DILocation(line: 3128, column: 9, scope: !20138)
!20152 = !DILocation(line: 3129, column: 2, scope: !20138)
!20153 = !DILocation(line: 3132, column: 6, scope: !20154)
!20154 = distinct !DILexicalBlock(scope: !20097, file: !3, line: 3132, column: 6)
!20155 = !DILocation(line: 3132, column: 15, scope: !20154)
!20156 = !DILocation(line: 3132, column: 22, scope: !20154)
!20157 = !DILocation(line: 3132, column: 6, scope: !20097)
!20158 = !DILocation(line: 3134, column: 6, scope: !20159)
!20159 = distinct !DILexicalBlock(scope: !20154, file: !3, line: 3132, column: 37)
!20160 = !DILocation(line: 3135, column: 6, scope: !20159)
!20161 = !DILocation(line: 3136, column: 8, scope: !20159)
!20162 = !DILocation(line: 3136, column: 17, scope: !20159)
!20163 = !DILocation(line: 3136, column: 6, scope: !20159)
!20164 = !DILocation(line: 3137, column: 8, scope: !20159)
!20165 = !DILocation(line: 3137, column: 6, scope: !20159)
!20166 = !DILocation(line: 3138, column: 8, scope: !20159)
!20167 = !DILocation(line: 3138, column: 6, scope: !20159)
!20168 = !DILocation(line: 3139, column: 8, scope: !20159)
!20169 = !DILocation(line: 3139, column: 6, scope: !20159)
!20170 = !DILocation(line: 3140, column: 3, scope: !20159)
!20171 = !DILocation(line: 3141, column: 3, scope: !20159)
!20172 = !DILocation(line: 3142, column: 9, scope: !20159)
!20173 = !DILocation(line: 3143, column: 2, scope: !20159)
!20174 = !DILocation(line: 3146, column: 7, scope: !20175)
!20175 = distinct !DILexicalBlock(scope: !20097, file: !3, line: 3146, column: 6)
!20176 = !DILocation(line: 3146, column: 16, scope: !20175)
!20177 = !DILocation(line: 3146, column: 21, scope: !20175)
!20178 = !DILocation(line: 3146, column: 32, scope: !20175)
!20179 = !DILocation(line: 3146, column: 36, scope: !20175)
!20180 = !DILocation(line: 3146, column: 45, scope: !20175)
!20181 = !DILocation(line: 3146, column: 50, scope: !20175)
!20182 = !DILocation(line: 3146, column: 6, scope: !20097)
!20183 = !DILocation(line: 3148, column: 6, scope: !20184)
!20184 = distinct !DILexicalBlock(scope: !20175, file: !3, line: 3146, column: 62)
!20185 = !DILocation(line: 3149, column: 6, scope: !20184)
!20186 = !DILocation(line: 3150, column: 8, scope: !20184)
!20187 = !DILocation(line: 3150, column: 6, scope: !20184)
!20188 = !DILocation(line: 3151, column: 7, scope: !20189)
!20189 = distinct !DILexicalBlock(scope: !20184, file: !3, line: 3151, column: 7)
!20190 = !DILocation(line: 3151, column: 16, scope: !20189)
!20191 = !DILocation(line: 3151, column: 24, scope: !20189)
!20192 = !DILocation(line: 3151, column: 33, scope: !20189)
!20193 = !DILocation(line: 3151, column: 21, scope: !20189)
!20194 = !DILocation(line: 3151, column: 7, scope: !20184)
!20195 = !DILocation(line: 3152, column: 9, scope: !20196)
!20196 = distinct !DILexicalBlock(scope: !20189, file: !3, line: 3151, column: 39)
!20197 = !DILocation(line: 3152, column: 7, scope: !20196)
!20198 = !DILocation(line: 3153, column: 9, scope: !20196)
!20199 = !DILocation(line: 3153, column: 7, scope: !20196)
!20200 = !DILocation(line: 3154, column: 9, scope: !20196)
!20201 = !DILocation(line: 3154, column: 7, scope: !20196)
!20202 = !DILocation(line: 3155, column: 9, scope: !20196)
!20203 = !DILocation(line: 3155, column: 7, scope: !20196)
!20204 = !DILocation(line: 3156, column: 3, scope: !20196)
!20205 = !DILocation(line: 3158, column: 9, scope: !20206)
!20206 = distinct !DILexicalBlock(scope: !20189, file: !3, line: 3156, column: 10)
!20207 = !DILocation(line: 3158, column: 7, scope: !20206)
!20208 = !DILocation(line: 3159, column: 9, scope: !20206)
!20209 = !DILocation(line: 3159, column: 7, scope: !20206)
!20210 = !DILocation(line: 3160, column: 8, scope: !20211)
!20211 = distinct !DILexicalBlock(scope: !20206, file: !3, line: 3160, column: 8)
!20212 = !DILocation(line: 3160, column: 17, scope: !20211)
!20213 = !DILocation(line: 3160, column: 22, scope: !20211)
!20214 = !DILocation(line: 3160, column: 8, scope: !20206)
!20215 = !DILocation(line: 3161, column: 10, scope: !20216)
!20216 = distinct !DILexicalBlock(scope: !20211, file: !3, line: 3160, column: 33)
!20217 = !DILocation(line: 3161, column: 8, scope: !20216)
!20218 = !DILocation(line: 3162, column: 10, scope: !20216)
!20219 = !DILocation(line: 3162, column: 8, scope: !20216)
!20220 = !DILocation(line: 3163, column: 4, scope: !20216)
!20221 = !DILocation(line: 3164, column: 10, scope: !20222)
!20222 = distinct !DILexicalBlock(scope: !20211, file: !3, line: 3163, column: 11)
!20223 = !DILocation(line: 3164, column: 8, scope: !20222)
!20224 = !DILocation(line: 3165, column: 10, scope: !20222)
!20225 = !DILocation(line: 3165, column: 8, scope: !20222)
!20226 = !DILocation(line: 3168, column: 3, scope: !20184)
!20227 = !DILocation(line: 3169, column: 3, scope: !20184)
!20228 = !DILocation(line: 3170, column: 9, scope: !20184)
!20229 = !DILocation(line: 3171, column: 2, scope: !20184)
!20230 = !DILocation(line: 3173, column: 9, scope: !20097)
!20231 = !DILocation(line: 3174, column: 11, scope: !20097)
!20232 = !DILocation(line: 3174, column: 9, scope: !20097)
!20233 = !DILocation(line: 3175, column: 11, scope: !20097)
!20234 = !DILocation(line: 3175, column: 9, scope: !20097)
!20235 = !DILocation(line: 3176, column: 6, scope: !20236)
!20236 = distinct !DILexicalBlock(scope: !20097, file: !3, line: 3176, column: 6)
!20237 = !DILocation(line: 3176, column: 6, scope: !20097)
!20238 = !DILocation(line: 3177, column: 12, scope: !20236)
!20239 = !DILocation(line: 3177, column: 10, scope: !20236)
!20240 = !DILocation(line: 3177, column: 3, scope: !20236)
!20241 = !DILocation(line: 3178, column: 6, scope: !20242)
!20242 = distinct !DILexicalBlock(scope: !20097, file: !3, line: 3178, column: 6)
!20243 = !DILocation(line: 3178, column: 6, scope: !20097)
!20244 = !DILocation(line: 3179, column: 12, scope: !20242)
!20245 = !DILocation(line: 3179, column: 10, scope: !20242)
!20246 = !DILocation(line: 3179, column: 3, scope: !20242)
!20247 = !DILocation(line: 3180, column: 6, scope: !20248)
!20248 = distinct !DILexicalBlock(scope: !20097, file: !3, line: 3180, column: 6)
!20249 = !DILocation(line: 3180, column: 6, scope: !20097)
!20250 = !DILocation(line: 3181, column: 12, scope: !20248)
!20251 = !DILocation(line: 3181, column: 10, scope: !20248)
!20252 = !DILocation(line: 3181, column: 3, scope: !20248)
!20253 = !DILocation(line: 3182, column: 2, scope: !20097)
!20254 = !DILocation(line: 3183, column: 1, scope: !20097)
!20255 = distinct !DISubprogram(name: "__list_add", scope: !13106, file: !13106, line: 63, type: !20256, scopeLine: 66, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!20256 = !DISubroutineType(types: !20257)
!20257 = !{null, !292, !292, !292}
!20258 = !DILocalVariable(name: "new", arg: 1, scope: !20255, file: !13106, line: 63, type: !292)
!20259 = !DILocation(line: 63, column: 49, scope: !20255)
!20260 = !DILocalVariable(name: "prev", arg: 2, scope: !20255, file: !13106, line: 64, type: !292)
!20261 = !DILocation(line: 64, column: 28, scope: !20255)
!20262 = !DILocalVariable(name: "next", arg: 3, scope: !20255, file: !13106, line: 65, type: !292)
!20263 = !DILocation(line: 65, column: 28, scope: !20255)
!20264 = !DILocation(line: 67, column: 24, scope: !20265)
!20265 = distinct !DILexicalBlock(scope: !20255, file: !13106, line: 67, column: 6)
!20266 = !DILocation(line: 67, column: 29, scope: !20265)
!20267 = !DILocation(line: 67, column: 35, scope: !20265)
!20268 = !DILocation(line: 67, column: 7, scope: !20265)
!20269 = !DILocation(line: 67, column: 6, scope: !20255)
!20270 = !DILocation(line: 68, column: 3, scope: !20265)
!20271 = !DILocation(line: 70, column: 15, scope: !20255)
!20272 = !DILocation(line: 70, column: 2, scope: !20255)
!20273 = !DILocation(line: 70, column: 8, scope: !20255)
!20274 = !DILocation(line: 70, column: 13, scope: !20255)
!20275 = !DILocation(line: 71, column: 14, scope: !20255)
!20276 = !DILocation(line: 71, column: 2, scope: !20255)
!20277 = !DILocation(line: 71, column: 7, scope: !20255)
!20278 = !DILocation(line: 71, column: 12, scope: !20255)
!20279 = !DILocation(line: 72, column: 14, scope: !20255)
!20280 = !DILocation(line: 72, column: 2, scope: !20255)
!20281 = !DILocation(line: 72, column: 7, scope: !20255)
!20282 = !DILocation(line: 72, column: 12, scope: !20255)
!20283 = !DILocation(line: 73, column: 2, scope: !20255)
!20284 = !DILocation(line: 73, column: 2, scope: !20285)
!20285 = distinct !DILexicalBlock(scope: !20255, file: !13106, line: 73, column: 2)
!20286 = !DILocation(line: 73, column: 2, scope: !20287)
!20287 = distinct !DILexicalBlock(scope: !20285, file: !13106, line: 73, column: 2)
!20288 = !DILocation(line: 73, column: 2, scope: !20289)
!20289 = distinct !DILexicalBlock(scope: !20285, file: !13106, line: 73, column: 2)
!20290 = !DILocation(line: 74, column: 1, scope: !20255)
!20291 = distinct !DISubprogram(name: "__list_add_valid", scope: !13106, file: !13106, line: 45, type: !20292, scopeLine: 48, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!20292 = !DISubroutineType(types: !20293)
!20293 = !{!540, !292, !292, !292}
!20294 = !DILocalVariable(name: "new", arg: 1, scope: !20291, file: !13106, line: 45, type: !292)
!20295 = !DILocation(line: 45, column: 55, scope: !20291)
!20296 = !DILocalVariable(name: "prev", arg: 2, scope: !20291, file: !13106, line: 46, type: !292)
!20297 = !DILocation(line: 46, column: 23, scope: !20291)
!20298 = !DILocalVariable(name: "next", arg: 3, scope: !20291, file: !13106, line: 47, type: !292)
!20299 = !DILocation(line: 47, column: 23, scope: !20291)
!20300 = !DILocation(line: 49, column: 2, scope: !20291)
!20301 = distinct !DISubprogram(name: "list_del", scope: !13106, file: !13106, line: 144, type: !13107, scopeLine: 145, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!20302 = !DILocalVariable(name: "entry", arg: 1, scope: !20301, file: !13106, line: 144, type: !292)
!20303 = !DILocation(line: 144, column: 47, scope: !20301)
!20304 = !DILocation(line: 146, column: 19, scope: !20301)
!20305 = !DILocation(line: 146, column: 2, scope: !20301)
!20306 = !DILocation(line: 147, column: 2, scope: !20301)
!20307 = !DILocation(line: 147, column: 9, scope: !20301)
!20308 = !DILocation(line: 147, column: 14, scope: !20301)
!20309 = !DILocation(line: 148, column: 2, scope: !20301)
!20310 = !DILocation(line: 148, column: 9, scope: !20301)
!20311 = !DILocation(line: 148, column: 14, scope: !20301)
!20312 = !DILocation(line: 149, column: 1, scope: !20301)
!20313 = distinct !DISubprogram(name: "__list_del_entry", scope: !13106, file: !13106, line: 130, type: !13107, scopeLine: 131, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!20314 = !DILocalVariable(name: "entry", arg: 1, scope: !20313, file: !13106, line: 130, type: !292)
!20315 = !DILocation(line: 130, column: 55, scope: !20313)
!20316 = !DILocation(line: 132, column: 30, scope: !20317)
!20317 = distinct !DILexicalBlock(scope: !20313, file: !13106, line: 132, column: 6)
!20318 = !DILocation(line: 132, column: 7, scope: !20317)
!20319 = !DILocation(line: 132, column: 6, scope: !20313)
!20320 = !DILocation(line: 133, column: 3, scope: !20317)
!20321 = !DILocation(line: 135, column: 13, scope: !20313)
!20322 = !DILocation(line: 135, column: 20, scope: !20313)
!20323 = !DILocation(line: 135, column: 26, scope: !20313)
!20324 = !DILocation(line: 135, column: 33, scope: !20313)
!20325 = !DILocation(line: 135, column: 2, scope: !20313)
!20326 = !DILocation(line: 136, column: 1, scope: !20313)
!20327 = distinct !DISubprogram(name: "__list_del_entry_valid", scope: !13106, file: !13106, line: 51, type: !20328, scopeLine: 52, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!20328 = !DISubroutineType(types: !20329)
!20329 = !{!540, !292}
!20330 = !DILocalVariable(name: "entry", arg: 1, scope: !20327, file: !13106, line: 51, type: !292)
!20331 = !DILocation(line: 51, column: 61, scope: !20327)
!20332 = !DILocation(line: 53, column: 2, scope: !20327)
!20333 = distinct !DISubprogram(name: "__list_del", scope: !13106, file: !13106, line: 110, type: !20085, scopeLine: 111, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!20334 = !DILocalVariable(name: "prev", arg: 1, scope: !20333, file: !13106, line: 110, type: !292)
!20335 = !DILocation(line: 110, column: 50, scope: !20333)
!20336 = !DILocalVariable(name: "next", arg: 2, scope: !20333, file: !13106, line: 110, type: !292)
!20337 = !DILocation(line: 110, column: 75, scope: !20333)
!20338 = !DILocation(line: 112, column: 15, scope: !20333)
!20339 = !DILocation(line: 112, column: 2, scope: !20333)
!20340 = !DILocation(line: 112, column: 8, scope: !20333)
!20341 = !DILocation(line: 112, column: 13, scope: !20333)
!20342 = !DILocation(line: 113, column: 2, scope: !20333)
!20343 = !DILocation(line: 113, column: 2, scope: !20344)
!20344 = distinct !DILexicalBlock(scope: !20333, file: !13106, line: 113, column: 2)
!20345 = !DILocation(line: 113, column: 2, scope: !20346)
!20346 = distinct !DILexicalBlock(scope: !20344, file: !13106, line: 113, column: 2)
!20347 = !DILocation(line: 113, column: 2, scope: !20348)
!20348 = distinct !DILexicalBlock(scope: !20344, file: !13106, line: 113, column: 2)
!20349 = !DILocation(line: 114, column: 1, scope: !20333)
!20350 = distinct !DISubprogram(name: "macb_init_rx_ring", scope: !3, file: !3, line: 1337, type: !14133, scopeLine: 1338, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!20351 = !DILocalVariable(name: "queue", arg: 1, scope: !20350, file: !3, line: 1337, type: !10234)
!20352 = !DILocation(line: 1337, column: 57, scope: !20350)
!20353 = !DILocalVariable(name: "bp", scope: !20350, file: !3, line: 1339, type: !10238)
!20354 = !DILocation(line: 1339, column: 15, scope: !20350)
!20355 = !DILocation(line: 1339, column: 20, scope: !20350)
!20356 = !DILocation(line: 1339, column: 27, scope: !20350)
!20357 = !DILocalVariable(name: "addr", scope: !20350, file: !3, line: 1340, type: !7084)
!20358 = !DILocation(line: 1340, column: 13, scope: !20350)
!20359 = !DILocalVariable(name: "desc", scope: !20350, file: !3, line: 1341, type: !10636)
!20360 = !DILocation(line: 1341, column: 24, scope: !20350)
!20361 = !DILocalVariable(name: "i", scope: !20350, file: !3, line: 1342, type: !37)
!20362 = !DILocation(line: 1342, column: 6, scope: !20350)
!20363 = !DILocation(line: 1344, column: 9, scope: !20350)
!20364 = !DILocation(line: 1344, column: 16, scope: !20350)
!20365 = !DILocation(line: 1344, column: 7, scope: !20350)
!20366 = !DILocation(line: 1345, column: 9, scope: !20367)
!20367 = distinct !DILexicalBlock(scope: !20350, file: !3, line: 1345, column: 2)
!20368 = !DILocation(line: 1345, column: 7, scope: !20367)
!20369 = !DILocation(line: 1345, column: 14, scope: !20370)
!20370 = distinct !DILexicalBlock(scope: !20367, file: !3, line: 1345, column: 2)
!20371 = !DILocation(line: 1345, column: 18, scope: !20370)
!20372 = !DILocation(line: 1345, column: 22, scope: !20370)
!20373 = !DILocation(line: 1345, column: 16, scope: !20370)
!20374 = !DILocation(line: 1345, column: 2, scope: !20367)
!20375 = !DILocation(line: 1346, column: 23, scope: !20376)
!20376 = distinct !DILexicalBlock(scope: !20370, file: !3, line: 1345, column: 41)
!20377 = !DILocation(line: 1346, column: 30, scope: !20376)
!20378 = !DILocation(line: 1346, column: 10, scope: !20376)
!20379 = !DILocation(line: 1346, column: 8, scope: !20376)
!20380 = !DILocation(line: 1347, column: 17, scope: !20376)
!20381 = !DILocation(line: 1347, column: 21, scope: !20376)
!20382 = !DILocation(line: 1347, column: 27, scope: !20376)
!20383 = !DILocation(line: 1347, column: 3, scope: !20376)
!20384 = !DILocation(line: 1348, column: 3, scope: !20376)
!20385 = !DILocation(line: 1348, column: 9, scope: !20376)
!20386 = !DILocation(line: 1348, column: 14, scope: !20376)
!20387 = !DILocation(line: 1349, column: 11, scope: !20376)
!20388 = !DILocation(line: 1349, column: 15, scope: !20376)
!20389 = !DILocation(line: 1349, column: 8, scope: !20376)
!20390 = !DILocation(line: 1350, column: 2, scope: !20376)
!20391 = !DILocation(line: 1345, column: 37, scope: !20370)
!20392 = !DILocation(line: 1345, column: 2, scope: !20370)
!20393 = distinct !{!20393, !20374, !20394}
!20394 = !DILocation(line: 1350, column: 2, scope: !20367)
!20395 = !DILocation(line: 1351, column: 2, scope: !20350)
!20396 = !DILocation(line: 1351, column: 8, scope: !20350)
!20397 = !DILocation(line: 1351, column: 13, scope: !20350)
!20398 = !DILocation(line: 1352, column: 2, scope: !20350)
!20399 = !DILocation(line: 1352, column: 9, scope: !20350)
!20400 = !DILocation(line: 1352, column: 17, scope: !20350)
!20401 = !DILocation(line: 1353, column: 1, scope: !20350)
!20402 = distinct !DISubprogram(name: "discard_partial_frame", scope: !3, file: !3, line: 1144, type: !20403, scopeLine: 1146, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!20403 = !DISubroutineType(types: !20404)
!20404 = !{null, !10234, !7, !7}
!20405 = !DILocalVariable(name: "queue", arg: 1, scope: !20402, file: !3, line: 1144, type: !10234)
!20406 = !DILocation(line: 1144, column: 54, scope: !20402)
!20407 = !DILocalVariable(name: "begin", arg: 2, scope: !20402, file: !3, line: 1144, type: !7)
!20408 = !DILocation(line: 1144, column: 74, scope: !20402)
!20409 = !DILocalVariable(name: "end", arg: 3, scope: !20402, file: !3, line: 1145, type: !7)
!20410 = !DILocation(line: 1145, column: 20, scope: !20402)
!20411 = !DILocalVariable(name: "frag", scope: !20402, file: !3, line: 1147, type: !7)
!20412 = !DILocation(line: 1147, column: 15, scope: !20402)
!20413 = !DILocation(line: 1149, column: 14, scope: !20414)
!20414 = distinct !DILexicalBlock(scope: !20402, file: !3, line: 1149, column: 2)
!20415 = !DILocation(line: 1149, column: 12, scope: !20414)
!20416 = !DILocation(line: 1149, column: 7, scope: !20414)
!20417 = !DILocation(line: 1149, column: 21, scope: !20418)
!20418 = distinct !DILexicalBlock(scope: !20414, file: !3, line: 1149, column: 2)
!20419 = !DILocation(line: 1149, column: 29, scope: !20418)
!20420 = !DILocation(line: 1149, column: 26, scope: !20418)
!20421 = !DILocation(line: 1149, column: 2, scope: !20414)
!20422 = !DILocalVariable(name: "desc", scope: !20423, file: !3, line: 1150, type: !10636)
!20423 = distinct !DILexicalBlock(scope: !20418, file: !3, line: 1149, column: 42)
!20424 = !DILocation(line: 1150, column: 25, scope: !20423)
!20425 = !DILocation(line: 1150, column: 45, scope: !20423)
!20426 = !DILocation(line: 1150, column: 52, scope: !20423)
!20427 = !DILocation(line: 1150, column: 32, scope: !20423)
!20428 = !DILocation(line: 1152, column: 3, scope: !20423)
!20429 = !DILocation(line: 1152, column: 9, scope: !20423)
!20430 = !DILocation(line: 1152, column: 14, scope: !20423)
!20431 = !DILocation(line: 1153, column: 2, scope: !20423)
!20432 = !DILocation(line: 1149, column: 38, scope: !20418)
!20433 = !DILocation(line: 1149, column: 2, scope: !20418)
!20434 = distinct !{!20434, !20421, !20435}
!20435 = !DILocation(line: 1153, column: 2, scope: !20414)
!20436 = !DILocation(line: 1156, column: 2, scope: !20402)
!20437 = !{i32 -2137647380}
!20438 = !DILocation(line: 1162, column: 1, scope: !20402)
!20439 = distinct !DISubprogram(name: "macb_rx_frame", scope: !3, file: !3, line: 1255, type: !20440, scopeLine: 1257, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!20440 = !DISubroutineType(types: !20441)
!20441 = !{!37, !10234, !10399, !7, !7}
!20442 = !DILocalVariable(name: "queue", arg: 1, scope: !20439, file: !3, line: 1255, type: !10234)
!20443 = !DILocation(line: 1255, column: 45, scope: !20439)
!20444 = !DILocalVariable(name: "napi", arg: 2, scope: !20439, file: !3, line: 1255, type: !10399)
!20445 = !DILocation(line: 1255, column: 72, scope: !20439)
!20446 = !DILocalVariable(name: "first_frag", arg: 3, scope: !20439, file: !3, line: 1256, type: !7)
!20447 = !DILocation(line: 1256, column: 18, scope: !20439)
!20448 = !DILocalVariable(name: "last_frag", arg: 4, scope: !20439, file: !3, line: 1256, type: !7)
!20449 = !DILocation(line: 1256, column: 43, scope: !20439)
!20450 = !DILocalVariable(name: "len", scope: !20439, file: !3, line: 1258, type: !7)
!20451 = !DILocation(line: 1258, column: 15, scope: !20439)
!20452 = !DILocalVariable(name: "frag", scope: !20439, file: !3, line: 1259, type: !7)
!20453 = !DILocation(line: 1259, column: 15, scope: !20439)
!20454 = !DILocalVariable(name: "offset", scope: !20439, file: !3, line: 1260, type: !7)
!20455 = !DILocation(line: 1260, column: 15, scope: !20439)
!20456 = !DILocalVariable(name: "skb", scope: !20439, file: !3, line: 1261, type: !420)
!20457 = !DILocation(line: 1261, column: 18, scope: !20439)
!20458 = !DILocalVariable(name: "desc", scope: !20439, file: !3, line: 1262, type: !10636)
!20459 = !DILocation(line: 1262, column: 24, scope: !20439)
!20460 = !DILocalVariable(name: "bp", scope: !20439, file: !3, line: 1263, type: !10238)
!20461 = !DILocation(line: 1263, column: 15, scope: !20439)
!20462 = !DILocation(line: 1263, column: 20, scope: !20439)
!20463 = !DILocation(line: 1263, column: 27, scope: !20439)
!20464 = !DILocation(line: 1265, column: 22, scope: !20439)
!20465 = !DILocation(line: 1265, column: 29, scope: !20439)
!20466 = !DILocation(line: 1265, column: 9, scope: !20439)
!20467 = !DILocation(line: 1265, column: 7, scope: !20439)
!20468 = !DILocation(line: 1266, column: 8, scope: !20439)
!20469 = !DILocation(line: 1266, column: 14, scope: !20439)
!20470 = !DILocation(line: 1266, column: 21, scope: !20439)
!20471 = !DILocation(line: 1266, column: 25, scope: !20439)
!20472 = !DILocation(line: 1266, column: 19, scope: !20439)
!20473 = !DILocation(line: 1266, column: 6, scope: !20439)
!20474 = !DILocation(line: 1268, column: 2, scope: !20475)
!20475 = distinct !DILexicalBlock(scope: !20476, file: !3, line: 1268, column: 2)
!20476 = distinct !DILexicalBlock(scope: !20439, file: !3, line: 1268, column: 2)
!20477 = !DILocation(line: 1268, column: 2, scope: !20476)
!20478 = !DILocation(line: 1280, column: 25, scope: !20439)
!20479 = !DILocation(line: 1280, column: 29, scope: !20439)
!20480 = !DILocation(line: 1280, column: 34, scope: !20439)
!20481 = !DILocation(line: 1280, column: 38, scope: !20439)
!20482 = !DILocation(line: 1280, column: 8, scope: !20439)
!20483 = !DILocation(line: 1280, column: 6, scope: !20439)
!20484 = !DILocation(line: 1281, column: 7, scope: !20485)
!20485 = distinct !DILexicalBlock(scope: !20439, file: !3, line: 1281, column: 6)
!20486 = !DILocation(line: 1281, column: 6, scope: !20439)
!20487 = !DILocation(line: 1282, column: 3, scope: !20488)
!20488 = distinct !DILexicalBlock(scope: !20485, file: !3, line: 1281, column: 12)
!20489 = !DILocation(line: 1282, column: 7, scope: !20488)
!20490 = !DILocation(line: 1282, column: 12, scope: !20488)
!20491 = !DILocation(line: 1282, column: 18, scope: !20488)
!20492 = !DILocation(line: 1282, column: 28, scope: !20488)
!20493 = !DILocation(line: 1283, column: 15, scope: !20494)
!20494 = distinct !DILexicalBlock(scope: !20488, file: !3, line: 1283, column: 3)
!20495 = !DILocation(line: 1283, column: 13, scope: !20494)
!20496 = !DILocation(line: 1283, column: 8, scope: !20494)
!20497 = !DILocation(line: 1284, column: 24, scope: !20498)
!20498 = distinct !DILexicalBlock(scope: !20499, file: !3, line: 1283, column: 37)
!20499 = distinct !DILexicalBlock(scope: !20494, file: !3, line: 1283, column: 3)
!20500 = !DILocation(line: 1284, column: 31, scope: !20498)
!20501 = !DILocation(line: 1284, column: 11, scope: !20498)
!20502 = !DILocation(line: 1284, column: 9, scope: !20498)
!20503 = !DILocation(line: 1285, column: 4, scope: !20498)
!20504 = !DILocation(line: 1285, column: 10, scope: !20498)
!20505 = !DILocation(line: 1285, column: 15, scope: !20498)
!20506 = !DILocation(line: 1286, column: 8, scope: !20507)
!20507 = distinct !DILexicalBlock(scope: !20498, file: !3, line: 1286, column: 8)
!20508 = !DILocation(line: 1286, column: 16, scope: !20507)
!20509 = !DILocation(line: 1286, column: 13, scope: !20507)
!20510 = !DILocation(line: 1286, column: 8, scope: !20498)
!20511 = !DILocation(line: 1287, column: 5, scope: !20507)
!20512 = !DILocation(line: 1288, column: 3, scope: !20498)
!20513 = !DILocation(line: 1283, column: 33, scope: !20499)
!20514 = !DILocation(line: 1283, column: 3, scope: !20499)
!20515 = distinct !{!20515, !20516, !20517}
!20516 = !DILocation(line: 1283, column: 3, scope: !20494)
!20517 = !DILocation(line: 1288, column: 3, scope: !20494)
!20518 = !DILocation(line: 1291, column: 3, scope: !20488)
!20519 = !{i32 -2137646211}
!20520 = !DILocation(line: 1293, column: 3, scope: !20488)
!20521 = !DILocation(line: 1296, column: 9, scope: !20439)
!20522 = !DILocation(line: 1297, column: 6, scope: !20439)
!20523 = !DILocation(line: 1298, column: 27, scope: !20439)
!20524 = !DILocation(line: 1298, column: 2, scope: !20439)
!20525 = !DILocation(line: 1299, column: 10, scope: !20439)
!20526 = !DILocation(line: 1299, column: 15, scope: !20439)
!20527 = !DILocation(line: 1299, column: 2, scope: !20439)
!20528 = !DILocation(line: 1301, column: 14, scope: !20529)
!20529 = distinct !DILexicalBlock(scope: !20439, file: !3, line: 1301, column: 2)
!20530 = !DILocation(line: 1301, column: 12, scope: !20529)
!20531 = !DILocation(line: 1301, column: 7, scope: !20529)
!20532 = !DILocalVariable(name: "frag_len", scope: !20533, file: !3, line: 1302, type: !7)
!20533 = distinct !DILexicalBlock(scope: !20534, file: !3, line: 1301, column: 36)
!20534 = distinct !DILexicalBlock(scope: !20529, file: !3, line: 1301, column: 2)
!20535 = !DILocation(line: 1302, column: 16, scope: !20533)
!20536 = !DILocation(line: 1302, column: 27, scope: !20533)
!20537 = !DILocation(line: 1302, column: 31, scope: !20533)
!20538 = !DILocation(line: 1304, column: 7, scope: !20539)
!20539 = distinct !DILexicalBlock(scope: !20533, file: !3, line: 1304, column: 7)
!20540 = !DILocation(line: 1304, column: 16, scope: !20539)
!20541 = !DILocation(line: 1304, column: 14, scope: !20539)
!20542 = !DILocation(line: 1304, column: 27, scope: !20539)
!20543 = !DILocation(line: 1304, column: 25, scope: !20539)
!20544 = !DILocation(line: 1304, column: 7, scope: !20533)
!20545 = !DILocation(line: 1305, column: 8, scope: !20546)
!20546 = distinct !DILexicalBlock(scope: !20547, file: !3, line: 1305, column: 8)
!20547 = distinct !DILexicalBlock(scope: !20539, file: !3, line: 1304, column: 32)
!20548 = !DILocation(line: 1305, column: 8, scope: !20547)
!20549 = !DILocation(line: 1306, column: 23, scope: !20550)
!20550 = distinct !DILexicalBlock(scope: !20546, file: !3, line: 1305, column: 37)
!20551 = !DILocation(line: 1306, column: 5, scope: !20550)
!20552 = !DILocation(line: 1307, column: 5, scope: !20550)
!20553 = !DILocation(line: 1309, column: 15, scope: !20547)
!20554 = !DILocation(line: 1309, column: 21, scope: !20547)
!20555 = !DILocation(line: 1309, column: 19, scope: !20547)
!20556 = !DILocation(line: 1309, column: 13, scope: !20547)
!20557 = !DILocation(line: 1310, column: 3, scope: !20547)
!20558 = !DILocation(line: 1311, column: 34, scope: !20533)
!20559 = !DILocation(line: 1311, column: 39, scope: !20533)
!20560 = !DILocation(line: 1312, column: 28, scope: !20533)
!20561 = !DILocation(line: 1312, column: 35, scope: !20533)
!20562 = !DILocation(line: 1312, column: 13, scope: !20533)
!20563 = !DILocation(line: 1313, column: 13, scope: !20533)
!20564 = !DILocation(line: 1311, column: 3, scope: !20533)
!20565 = !DILocation(line: 1314, column: 13, scope: !20533)
!20566 = !DILocation(line: 1314, column: 17, scope: !20533)
!20567 = !DILocation(line: 1314, column: 10, scope: !20533)
!20568 = !DILocation(line: 1315, column: 23, scope: !20533)
!20569 = !DILocation(line: 1315, column: 30, scope: !20533)
!20570 = !DILocation(line: 1315, column: 10, scope: !20533)
!20571 = !DILocation(line: 1315, column: 8, scope: !20533)
!20572 = !DILocation(line: 1316, column: 3, scope: !20533)
!20573 = !DILocation(line: 1316, column: 9, scope: !20533)
!20574 = !DILocation(line: 1316, column: 14, scope: !20533)
!20575 = !DILocation(line: 1318, column: 7, scope: !20576)
!20576 = distinct !DILexicalBlock(scope: !20533, file: !3, line: 1318, column: 7)
!20577 = !DILocation(line: 1318, column: 15, scope: !20576)
!20578 = !DILocation(line: 1318, column: 12, scope: !20576)
!20579 = !DILocation(line: 1318, column: 7, scope: !20533)
!20580 = !DILocation(line: 1319, column: 4, scope: !20576)
!20581 = !DILocation(line: 1320, column: 2, scope: !20533)
!20582 = !DILocation(line: 1301, column: 32, scope: !20534)
!20583 = !DILocation(line: 1301, column: 2, scope: !20534)
!20584 = distinct !{!20584, !20585, !20586}
!20585 = !DILocation(line: 1301, column: 2, scope: !20529)
!20586 = !DILocation(line: 1320, column: 2, scope: !20529)
!20587 = !DILocation(line: 1323, column: 2, scope: !20439)
!20588 = !{i32 -2137646070}
!20589 = !DILocation(line: 1325, column: 13, scope: !20439)
!20590 = !DILocation(line: 1325, column: 2, scope: !20439)
!20591 = !DILocation(line: 1326, column: 33, scope: !20439)
!20592 = !DILocation(line: 1326, column: 38, scope: !20439)
!20593 = !DILocation(line: 1326, column: 42, scope: !20439)
!20594 = !DILocation(line: 1326, column: 18, scope: !20439)
!20595 = !DILocation(line: 1326, column: 2, scope: !20439)
!20596 = !DILocation(line: 1326, column: 7, scope: !20439)
!20597 = !DILocation(line: 1326, column: 16, scope: !20439)
!20598 = !DILocation(line: 1328, column: 2, scope: !20439)
!20599 = !DILocation(line: 1328, column: 6, scope: !20439)
!20600 = !DILocation(line: 1328, column: 11, scope: !20439)
!20601 = !DILocation(line: 1328, column: 17, scope: !20439)
!20602 = !DILocation(line: 1328, column: 27, scope: !20439)
!20603 = !DILocation(line: 1329, column: 29, scope: !20439)
!20604 = !DILocation(line: 1329, column: 34, scope: !20439)
!20605 = !DILocation(line: 1329, column: 2, scope: !20439)
!20606 = !DILocation(line: 1329, column: 6, scope: !20439)
!20607 = !DILocation(line: 1329, column: 11, scope: !20439)
!20608 = !DILocation(line: 1329, column: 17, scope: !20439)
!20609 = !DILocation(line: 1329, column: 26, scope: !20439)
!20610 = !DILocation(line: 1330, column: 2, scope: !20611)
!20611 = distinct !DILexicalBlock(scope: !20612, file: !3, line: 1330, column: 2)
!20612 = distinct !DILexicalBlock(scope: !20439, file: !3, line: 1330, column: 2)
!20613 = !DILocation(line: 1330, column: 2, scope: !20612)
!20614 = !DILocation(line: 1332, column: 19, scope: !20439)
!20615 = !DILocation(line: 1332, column: 25, scope: !20439)
!20616 = !DILocation(line: 1332, column: 2, scope: !20439)
!20617 = !DILocation(line: 1334, column: 2, scope: !20439)
!20618 = !DILocation(line: 1335, column: 1, scope: !20439)
!20619 = distinct !DISubprogram(name: "skb_copy_to_linear_data_offset", scope: !422, file: !422, line: 3670, type: !20620, scopeLine: 3674, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!20620 = !DISubroutineType(types: !20621)
!20621 = !{null, !420, !17519, !2244, !5428}
!20622 = !DILocalVariable(name: "skb", arg: 1, scope: !20619, file: !422, line: 3670, type: !420)
!20623 = !DILocation(line: 3670, column: 67, scope: !20619)
!20624 = !DILocalVariable(name: "offset", arg: 2, scope: !20619, file: !422, line: 3671, type: !17519)
!20625 = !DILocation(line: 3671, column: 19, scope: !20619)
!20626 = !DILocalVariable(name: "from", arg: 3, scope: !20619, file: !422, line: 3672, type: !2244)
!20627 = !DILocation(line: 3672, column: 21, scope: !20619)
!20628 = !DILocalVariable(name: "len", arg: 4, scope: !20619, file: !422, line: 3673, type: !5428)
!20629 = !DILocation(line: 3673, column: 28, scope: !20619)
!20630 = !DILocation(line: 3675, column: 9, scope: !20619)
!20631 = !DILocation(line: 3675, column: 14, scope: !20619)
!20632 = !DILocation(line: 3675, column: 21, scope: !20619)
!20633 = !DILocation(line: 3675, column: 19, scope: !20619)
!20634 = !DILocation(line: 3675, column: 29, scope: !20619)
!20635 = !DILocation(line: 3675, column: 35, scope: !20619)
!20636 = !DILocation(line: 3675, column: 2, scope: !20619)
!20637 = !DILocation(line: 3676, column: 1, scope: !20619)
!20638 = distinct !DISubprogram(name: "macb_rx_buffer", scope: !3, file: !3, line: 218, type: !20639, scopeLine: 219, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!20639 = !DISubroutineType(types: !20640)
!20640 = !{!570, !10234, !7}
!20641 = !DILocalVariable(name: "queue", arg: 1, scope: !20638, file: !3, line: 218, type: !10234)
!20642 = !DILocation(line: 218, column: 48, scope: !20638)
!20643 = !DILocalVariable(name: "index", arg: 2, scope: !20638, file: !3, line: 218, type: !7)
!20644 = !DILocation(line: 218, column: 68, scope: !20638)
!20645 = !DILocation(line: 220, column: 9, scope: !20638)
!20646 = !DILocation(line: 220, column: 16, scope: !20638)
!20647 = !DILocation(line: 220, column: 29, scope: !20638)
!20648 = !DILocation(line: 220, column: 36, scope: !20638)
!20649 = !DILocation(line: 220, column: 40, scope: !20638)
!20650 = !DILocation(line: 221, column: 27, scope: !20638)
!20651 = !DILocation(line: 221, column: 34, scope: !20638)
!20652 = !DILocation(line: 221, column: 38, scope: !20638)
!20653 = !DILocation(line: 221, column: 9, scope: !20638)
!20654 = !DILocation(line: 220, column: 55, scope: !20638)
!20655 = !DILocation(line: 220, column: 27, scope: !20638)
!20656 = !DILocation(line: 220, column: 2, scope: !20638)
!20657 = distinct !DISubprogram(name: "__skb_pull", scope: !422, file: !422, line: 2294, type: !17538, scopeLine: 2295, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!20658 = !DILocalVariable(name: "skb", arg: 1, scope: !20657, file: !422, line: 2294, type: !420)
!20659 = !DILocation(line: 2294, column: 48, scope: !20657)
!20660 = !DILocalVariable(name: "len", arg: 2, scope: !20657, file: !422, line: 2294, type: !7)
!20661 = !DILocation(line: 2294, column: 66, scope: !20657)
!20662 = !DILocation(line: 2296, column: 14, scope: !20657)
!20663 = !DILocation(line: 2296, column: 2, scope: !20657)
!20664 = !DILocation(line: 2296, column: 7, scope: !20657)
!20665 = !DILocation(line: 2296, column: 11, scope: !20657)
!20666 = !DILocation(line: 2297, column: 2, scope: !20657)
!20667 = !DILocation(line: 2297, column: 2, scope: !20668)
!20668 = distinct !DILexicalBlock(scope: !20669, file: !422, line: 2297, column: 2)
!20669 = distinct !DILexicalBlock(scope: !20657, file: !422, line: 2297, column: 2)
!20670 = !DILocation(line: 2297, column: 2, scope: !20669)
!20671 = !DILocation(line: 2297, column: 2, scope: !20672)
!20672 = distinct !DILexicalBlock(scope: !20668, file: !422, line: 2297, column: 2)
!20673 = !DILocation(line: 2297, column: 2, scope: !20674)
!20674 = distinct !DILexicalBlock(scope: !20672, file: !422, line: 2297, column: 2)
!20675 = !DILocation(line: 2297, column: 2, scope: !20676)
!20676 = distinct !DILexicalBlock(scope: !20672, file: !422, line: 2297, column: 2)
!20677 = !{i32 -2140739922, i32 -2140739893, i32 -2140739847, i32 -2140739789, i32 -2140739735, i32 -2140739681, i32 -2140739626, i32 -2140739595}
!20678 = !DILocation(line: 2297, column: 2, scope: !20679)
!20679 = distinct !DILexicalBlock(scope: !20680, file: !422, line: 2297, column: 2)
!20680 = distinct !DILexicalBlock(scope: !20672, file: !422, line: 2297, column: 2)
!20681 = !{i32 -2140739149, i32 -2140739142, i32 -2140739088, i32 -2140739057, i32 -2140739027}
!20682 = !DILocation(line: 2297, column: 2, scope: !20680)
!20683 = !DILocation(line: 2298, column: 22, scope: !20657)
!20684 = !DILocation(line: 2298, column: 9, scope: !20657)
!20685 = !DILocation(line: 2298, column: 14, scope: !20657)
!20686 = !DILocation(line: 2298, column: 19, scope: !20657)
!20687 = !DILocation(line: 2298, column: 2, scope: !20657)
!20688 = distinct !DISubprogram(name: "gem_mdc_clk_div", scope: !3, file: !3, line: 2323, type: !14037, scopeLine: 2324, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!20689 = !DILocalVariable(name: "bp", arg: 1, scope: !20688, file: !3, line: 2323, type: !10238)
!20690 = !DILocation(line: 2323, column: 41, scope: !20688)
!20691 = !DILocalVariable(name: "config", scope: !20688, file: !3, line: 2325, type: !707)
!20692 = !DILocation(line: 2325, column: 6, scope: !20688)
!20693 = !DILocalVariable(name: "pclk_hz", scope: !20688, file: !3, line: 2326, type: !317)
!20694 = !DILocation(line: 2326, column: 16, scope: !20688)
!20695 = !DILocation(line: 2326, column: 39, scope: !20688)
!20696 = !DILocation(line: 2326, column: 43, scope: !20688)
!20697 = !DILocation(line: 2326, column: 26, scope: !20688)
!20698 = !DILocation(line: 2328, column: 6, scope: !20699)
!20699 = distinct !DILexicalBlock(scope: !20688, file: !3, line: 2328, column: 6)
!20700 = !DILocation(line: 2328, column: 14, scope: !20699)
!20701 = !DILocation(line: 2328, column: 6, scope: !20688)
!20702 = !DILocation(line: 2329, column: 10, scope: !20699)
!20703 = !DILocation(line: 2329, column: 3, scope: !20699)
!20704 = !DILocation(line: 2330, column: 11, scope: !20705)
!20705 = distinct !DILexicalBlock(scope: !20699, file: !3, line: 2330, column: 11)
!20706 = !DILocation(line: 2330, column: 19, scope: !20705)
!20707 = !DILocation(line: 2330, column: 11, scope: !20699)
!20708 = !DILocation(line: 2331, column: 10, scope: !20705)
!20709 = !DILocation(line: 2331, column: 3, scope: !20705)
!20710 = !DILocation(line: 2332, column: 11, scope: !20711)
!20711 = distinct !DILexicalBlock(scope: !20705, file: !3, line: 2332, column: 11)
!20712 = !DILocation(line: 2332, column: 19, scope: !20711)
!20713 = !DILocation(line: 2332, column: 11, scope: !20705)
!20714 = !DILocation(line: 2333, column: 10, scope: !20711)
!20715 = !DILocation(line: 2333, column: 3, scope: !20711)
!20716 = !DILocation(line: 2334, column: 11, scope: !20717)
!20717 = distinct !DILexicalBlock(scope: !20711, file: !3, line: 2334, column: 11)
!20718 = !DILocation(line: 2334, column: 19, scope: !20717)
!20719 = !DILocation(line: 2334, column: 11, scope: !20711)
!20720 = !DILocation(line: 2335, column: 10, scope: !20717)
!20721 = !DILocation(line: 2335, column: 3, scope: !20717)
!20722 = !DILocation(line: 2336, column: 11, scope: !20723)
!20723 = distinct !DILexicalBlock(scope: !20717, file: !3, line: 2336, column: 11)
!20724 = !DILocation(line: 2336, column: 19, scope: !20723)
!20725 = !DILocation(line: 2336, column: 11, scope: !20717)
!20726 = !DILocation(line: 2337, column: 10, scope: !20723)
!20727 = !DILocation(line: 2337, column: 3, scope: !20723)
!20728 = !DILocation(line: 2339, column: 10, scope: !20723)
!20729 = !DILocation(line: 2341, column: 9, scope: !20688)
!20730 = !DILocation(line: 2341, column: 2, scope: !20688)
!20731 = distinct !DISubprogram(name: "__writel", scope: !20732, file: !20732, line: 71, type: !20733, scopeLine: 71, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!20732 = !DIFile(filename: "./arch/x86/include/asm/io.h", directory: "/home/lizy2001/genbc/linux")
!20733 = !DISubroutineType(types: !20734)
!20734 = !{null, !7, !20735}
!20735 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11635, size: 64)
!20736 = !DILocalVariable(name: "val", arg: 1, scope: !20731, file: !20732, line: 71, type: !7)
!20737 = !DILocation(line: 71, column: 1, scope: !20731)
!20738 = !DILocalVariable(name: "addr", arg: 2, scope: !20731, file: !20732, line: 71, type: !20735)
!20739 = !{i32 -2143889005}
!20740 = distinct !DISubprogram(name: "__readl", scope: !20732, file: !20732, line: 63, type: !20741, scopeLine: 63, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!20741 = !DISubroutineType(types: !20742)
!20742 = !{!7, !11633}
!20743 = !DILocalVariable(name: "addr", arg: 1, scope: !20740, file: !20732, line: 63, type: !11633)
!20744 = !DILocation(line: 63, column: 1, scope: !20740)
!20745 = !DILocalVariable(name: "ret", scope: !20740, file: !20732, line: 63, type: !7)
!20746 = !{i32 -2143891308}
!20747 = distinct !DISubprogram(name: "hw_is_gem", scope: !3, file: !3, line: 262, type: !20748, scopeLine: 263, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!20748 = !DISubroutineType(types: !20749)
!20749 = !{!540, !570, !540}
!20750 = !DILocalVariable(name: "addr", arg: 1, scope: !20747, file: !3, line: 262, type: !570)
!20751 = !DILocation(line: 262, column: 37, scope: !20747)
!20752 = !DILocalVariable(name: "native_io", arg: 2, scope: !20747, file: !3, line: 262, type: !540)
!20753 = !DILocation(line: 262, column: 48, scope: !20747)
!20754 = !DILocalVariable(name: "id", scope: !20747, file: !3, line: 264, type: !707)
!20755 = !DILocation(line: 264, column: 6, scope: !20747)
!20756 = !DILocation(line: 266, column: 6, scope: !20757)
!20757 = distinct !DILexicalBlock(scope: !20747, file: !3, line: 266, column: 6)
!20758 = !DILocation(line: 266, column: 6, scope: !20747)
!20759 = !DILocation(line: 267, column: 20, scope: !20757)
!20760 = !DILocation(line: 267, column: 25, scope: !20757)
!20761 = !DILocation(line: 267, column: 8, scope: !20757)
!20762 = !DILocation(line: 267, column: 6, scope: !20757)
!20763 = !DILocation(line: 267, column: 3, scope: !20757)
!20764 = !DILocation(line: 269, column: 8, scope: !20757)
!20765 = !DILocation(line: 269, column: 6, scope: !20757)
!20766 = !DILocation(line: 271, column: 9, scope: !20747)
!20767 = !DILocation(line: 271, column: 31, scope: !20747)
!20768 = !DILocation(line: 271, column: 2, scope: !20747)
!20769 = distinct !DISubprogram(name: "gem_has_ptp", scope: !9997, file: !9997, line: 1299, type: !12155, scopeLine: 1300, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!20770 = !DILocalVariable(name: "bp", arg: 1, scope: !20769, file: !9997, line: 1299, type: !10238)
!20771 = !DILocation(line: 1299, column: 45, scope: !20769)
!20772 = !DILocation(line: 1301, column: 12, scope: !20769)
!20773 = !DILocation(line: 1301, column: 16, scope: !20769)
!20774 = !DILocation(line: 1301, column: 21, scope: !20769)
!20775 = !DILocation(line: 1301, column: 10, scope: !20769)
!20776 = !DILocation(line: 1301, column: 9, scope: !20769)
!20777 = !DILocation(line: 1301, column: 2, scope: !20769)
!20778 = distinct !DISubprogram(name: "gem_get_ptp_max_adj", scope: !3, file: !3, line: 3002, type: !10480, scopeLine: 3003, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!20779 = !DILocation(line: 3004, column: 2, scope: !20778)
!20780 = distinct !DISubprogram(name: "gem_get_tsu_rate", scope: !3, file: !3, line: 2985, type: !10484, scopeLine: 2986, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!20781 = !DILocalVariable(name: "bp", arg: 1, scope: !20780, file: !3, line: 2985, type: !10238)
!20782 = !DILocation(line: 2985, column: 51, scope: !20780)
!20783 = !DILocalVariable(name: "tsu_clk", scope: !20780, file: !3, line: 2987, type: !10300)
!20784 = !DILocation(line: 2987, column: 14, scope: !20780)
!20785 = !DILocalVariable(name: "tsu_rate", scope: !20780, file: !3, line: 2988, type: !7)
!20786 = !DILocation(line: 2988, column: 15, scope: !20780)
!20787 = !DILocation(line: 2990, column: 26, scope: !20780)
!20788 = !DILocation(line: 2990, column: 30, scope: !20780)
!20789 = !DILocation(line: 2990, column: 36, scope: !20780)
!20790 = !DILocation(line: 2990, column: 12, scope: !20780)
!20791 = !DILocation(line: 2990, column: 10, scope: !20780)
!20792 = !DILocation(line: 2991, column: 14, scope: !20793)
!20793 = distinct !DILexicalBlock(scope: !20780, file: !3, line: 2991, column: 6)
!20794 = !DILocation(line: 2991, column: 7, scope: !20793)
!20795 = !DILocation(line: 2991, column: 6, scope: !20780)
!20796 = !DILocation(line: 2992, column: 27, scope: !20793)
!20797 = !DILocation(line: 2992, column: 14, scope: !20793)
!20798 = !DILocation(line: 2992, column: 12, scope: !20793)
!20799 = !DILocation(line: 2992, column: 3, scope: !20793)
!20800 = !DILocation(line: 2994, column: 19, scope: !20801)
!20801 = distinct !DILexicalBlock(scope: !20793, file: !3, line: 2994, column: 11)
!20802 = !DILocation(line: 2994, column: 23, scope: !20801)
!20803 = !DILocation(line: 2994, column: 12, scope: !20801)
!20804 = !DILocation(line: 2994, column: 11, scope: !20793)
!20805 = !DILocation(line: 2995, column: 13, scope: !20806)
!20806 = distinct !DILexicalBlock(scope: !20801, file: !3, line: 2994, column: 30)
!20807 = !DILocation(line: 2995, column: 17, scope: !20806)
!20808 = !DILocation(line: 2995, column: 11, scope: !20806)
!20809 = !DILocation(line: 2996, column: 27, scope: !20806)
!20810 = !DILocation(line: 2996, column: 14, scope: !20806)
!20811 = !DILocation(line: 2996, column: 12, scope: !20806)
!20812 = !DILocation(line: 2997, column: 2, scope: !20806)
!20813 = !DILocation(line: 2998, column: 3, scope: !20801)
!20814 = !DILocation(line: 2999, column: 9, scope: !20780)
!20815 = !DILocation(line: 2999, column: 2, scope: !20780)
!20816 = !DILocation(line: 3000, column: 1, scope: !20780)
!20817 = distinct !DISubprogram(name: "gem_get_ts_info", scope: !3, file: !3, line: 3007, type: !8664, scopeLine: 3009, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!20818 = !DILocalVariable(name: "dev", arg: 1, scope: !20817, file: !3, line: 3007, type: !295)
!20819 = !DILocation(line: 3007, column: 47, scope: !20817)
!20820 = !DILocalVariable(name: "info", arg: 2, scope: !20817, file: !3, line: 3008, type: !8666)
!20821 = !DILocation(line: 3008, column: 31, scope: !20817)
!20822 = !DILocalVariable(name: "bp", scope: !20817, file: !3, line: 3010, type: !10238)
!20823 = !DILocation(line: 3010, column: 15, scope: !20817)
!20824 = !DILocation(line: 3010, column: 32, scope: !20817)
!20825 = !DILocation(line: 3010, column: 20, scope: !20817)
!20826 = !DILocation(line: 3012, column: 7, scope: !20827)
!20827 = distinct !DILexicalBlock(scope: !20817, file: !3, line: 3012, column: 6)
!20828 = !DILocation(line: 3012, column: 11, scope: !20827)
!20829 = !DILocation(line: 3012, column: 22, scope: !20827)
!20830 = !DILocation(line: 3012, column: 40, scope: !20827)
!20831 = !DILocation(line: 3012, column: 6, scope: !20817)
!20832 = !DILocation(line: 3013, column: 26, scope: !20833)
!20833 = distinct !DILexicalBlock(scope: !20827, file: !3, line: 3012, column: 46)
!20834 = !DILocation(line: 3013, column: 31, scope: !20833)
!20835 = !DILocation(line: 3013, column: 3, scope: !20833)
!20836 = !DILocation(line: 3014, column: 3, scope: !20833)
!20837 = !DILocation(line: 3017, column: 2, scope: !20817)
!20838 = !DILocation(line: 3017, column: 8, scope: !20817)
!20839 = !DILocation(line: 3017, column: 24, scope: !20817)
!20840 = !DILocation(line: 3024, column: 2, scope: !20817)
!20841 = !DILocation(line: 3024, column: 8, scope: !20817)
!20842 = !DILocation(line: 3024, column: 17, scope: !20817)
!20843 = !DILocation(line: 3028, column: 2, scope: !20817)
!20844 = !DILocation(line: 3028, column: 8, scope: !20817)
!20845 = !DILocation(line: 3028, column: 19, scope: !20817)
!20846 = !DILocation(line: 3032, column: 20, scope: !20817)
!20847 = !DILocation(line: 3032, column: 24, scope: !20817)
!20848 = !DILocation(line: 3032, column: 52, scope: !20817)
!20849 = !DILocation(line: 3032, column: 56, scope: !20817)
!20850 = !DILocation(line: 3032, column: 36, scope: !20817)
!20851 = !DILocation(line: 3032, column: 2, scope: !20817)
!20852 = !DILocation(line: 3032, column: 8, scope: !20817)
!20853 = !DILocation(line: 3032, column: 18, scope: !20817)
!20854 = !DILocation(line: 3034, column: 2, scope: !20817)
!20855 = !DILocation(line: 3035, column: 1, scope: !20817)
!20856 = distinct !DISubprogram(name: "dev_set_drvdata", scope: !3804, file: !3804, line: 660, type: !20857, scopeLine: 661, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!20857 = !DISubroutineType(types: !20858)
!20858 = !{null, !4172, !570}
!20859 = !DILocalVariable(name: "dev", arg: 1, scope: !20856, file: !3804, line: 660, type: !4172)
!20860 = !DILocation(line: 660, column: 51, scope: !20856)
!20861 = !DILocalVariable(name: "data", arg: 2, scope: !20856, file: !3804, line: 660, type: !570)
!20862 = !DILocation(line: 660, column: 62, scope: !20856)
!20863 = !DILocation(line: 662, column: 21, scope: !20856)
!20864 = !DILocation(line: 662, column: 2, scope: !20856)
!20865 = !DILocation(line: 662, column: 7, scope: !20856)
!20866 = !DILocation(line: 662, column: 19, scope: !20856)
!20867 = !DILocation(line: 663, column: 1, scope: !20856)
!20868 = distinct !DISubprogram(name: "is_valid_ether_addr", scope: !11882, file: !11882, line: 191, type: !20869, scopeLine: 192, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!20869 = !DISubroutineType(types: !20870)
!20870 = !{!540, !8615}
!20871 = !DILocalVariable(name: "addr", arg: 1, scope: !20868, file: !11882, line: 191, type: !8615)
!20872 = !DILocation(line: 191, column: 50, scope: !20868)
!20873 = !DILocation(line: 195, column: 34, scope: !20868)
!20874 = !DILocation(line: 195, column: 10, scope: !20868)
!20875 = !DILocation(line: 195, column: 40, scope: !20868)
!20876 = !DILocation(line: 195, column: 63, scope: !20868)
!20877 = !DILocation(line: 195, column: 44, scope: !20868)
!20878 = !DILocation(line: 195, column: 43, scope: !20868)
!20879 = !DILocation(line: 0, scope: !20868)
!20880 = !DILocation(line: 195, column: 2, scope: !20868)
!20881 = distinct !DISubprogram(name: "eth_hw_addr_random", scope: !11882, file: !11882, line: 263, type: !411, scopeLine: 264, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!20882 = !DILocalVariable(name: "dev", arg: 1, scope: !20881, file: !11882, line: 263, type: !295)
!20883 = !DILocation(line: 263, column: 58, scope: !20881)
!20884 = !DILocation(line: 265, column: 2, scope: !20881)
!20885 = !DILocation(line: 265, column: 7, scope: !20881)
!20886 = !DILocation(line: 265, column: 24, scope: !20881)
!20887 = !DILocation(line: 266, column: 18, scope: !20881)
!20888 = !DILocation(line: 266, column: 23, scope: !20881)
!20889 = !DILocation(line: 266, column: 2, scope: !20881)
!20890 = !DILocation(line: 267, column: 1, scope: !20881)
!20891 = distinct !DISubprogram(name: "is_multicast_ether_addr", scope: !11882, file: !11882, line: 116, type: !20869, scopeLine: 117, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!20892 = !DILocalVariable(name: "addr", arg: 1, scope: !20891, file: !11882, line: 116, type: !8615)
!20893 = !DILocation(line: 116, column: 54, scope: !20891)
!20894 = !DILocalVariable(name: "a", scope: !20891, file: !11882, line: 119, type: !707)
!20895 = !DILocation(line: 119, column: 6, scope: !20891)
!20896 = !DILocation(line: 119, column: 24, scope: !20891)
!20897 = !DILocation(line: 119, column: 10, scope: !20891)
!20898 = !DILocation(line: 126, column: 16, scope: !20891)
!20899 = !DILocation(line: 126, column: 14, scope: !20891)
!20900 = !DILocation(line: 126, column: 9, scope: !20891)
!20901 = !DILocation(line: 126, column: 2, scope: !20891)
!20902 = distinct !DISubprogram(name: "is_zero_ether_addr", scope: !11882, file: !11882, line: 98, type: !20869, scopeLine: 99, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!20903 = !DILocalVariable(name: "addr", arg: 1, scope: !20902, file: !11882, line: 98, type: !8615)
!20904 = !DILocation(line: 98, column: 49, scope: !20902)
!20905 = !DILocation(line: 101, column: 25, scope: !20902)
!20906 = !DILocation(line: 101, column: 11, scope: !20902)
!20907 = !DILocation(line: 101, column: 49, scope: !20902)
!20908 = !DILocation(line: 101, column: 54, scope: !20902)
!20909 = !DILocation(line: 101, column: 34, scope: !20902)
!20910 = !DILocation(line: 101, column: 33, scope: !20902)
!20911 = !DILocation(line: 101, column: 31, scope: !20902)
!20912 = !DILocation(line: 101, column: 61, scope: !20902)
!20913 = !DILocation(line: 101, column: 2, scope: !20902)
!20914 = distinct !DISubprogram(name: "eth_random_addr", scope: !11882, file: !11882, line: 223, type: !20915, scopeLine: 224, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!20915 = !DISubroutineType(types: !20916)
!20916 = !{null, !7949}
!20917 = !DILocalVariable(name: "addr", arg: 1, scope: !20914, file: !11882, line: 223, type: !7949)
!20918 = !DILocation(line: 223, column: 40, scope: !20914)
!20919 = !DILocation(line: 225, column: 19, scope: !20914)
!20920 = !DILocation(line: 225, column: 2, scope: !20914)
!20921 = !DILocation(line: 226, column: 2, scope: !20914)
!20922 = !DILocation(line: 226, column: 10, scope: !20914)
!20923 = !DILocation(line: 227, column: 2, scope: !20914)
!20924 = !DILocation(line: 227, column: 10, scope: !20914)
!20925 = !DILocation(line: 228, column: 1, scope: !20914)
!20926 = distinct !DISubprogram(name: "mdiobus_alloc", scope: !9465, file: !9465, line: 381, type: !20927, scopeLine: 382, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!20927 = !DISubroutineType(types: !20928)
!20928 = !{!9473}
!20929 = !DILocation(line: 383, column: 9, scope: !20926)
!20930 = !DILocation(line: 383, column: 2, scope: !20926)
!20931 = distinct !DISubprogram(name: "macb_mdio_read", scope: !3, file: !3, line: 330, type: !9485, scopeLine: 331, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!20932 = !DILocalVariable(name: "bus", arg: 1, scope: !20931, file: !3, line: 330, type: !9473)
!20933 = !DILocation(line: 330, column: 43, scope: !20931)
!20934 = !DILocalVariable(name: "mii_id", arg: 2, scope: !20931, file: !3, line: 330, type: !37)
!20935 = !DILocation(line: 330, column: 52, scope: !20931)
!20936 = !DILocalVariable(name: "regnum", arg: 3, scope: !20931, file: !3, line: 330, type: !37)
!20937 = !DILocation(line: 330, column: 64, scope: !20931)
!20938 = !DILocalVariable(name: "bp", scope: !20931, file: !3, line: 332, type: !10238)
!20939 = !DILocation(line: 332, column: 15, scope: !20931)
!20940 = !DILocation(line: 332, column: 20, scope: !20931)
!20941 = !DILocation(line: 332, column: 25, scope: !20931)
!20942 = !DILocalVariable(name: "status", scope: !20931, file: !3, line: 333, type: !37)
!20943 = !DILocation(line: 333, column: 6, scope: !20931)
!20944 = !DILocation(line: 335, column: 32, scope: !20931)
!20945 = !DILocation(line: 335, column: 36, scope: !20931)
!20946 = !DILocation(line: 335, column: 42, scope: !20931)
!20947 = !DILocation(line: 335, column: 11, scope: !20931)
!20948 = !DILocation(line: 335, column: 9, scope: !20931)
!20949 = !DILocation(line: 336, column: 6, scope: !20950)
!20950 = distinct !DILexicalBlock(scope: !20931, file: !3, line: 336, column: 6)
!20951 = !DILocation(line: 336, column: 13, scope: !20950)
!20952 = !DILocation(line: 336, column: 6, scope: !20931)
!20953 = !DILocation(line: 337, column: 26, scope: !20954)
!20954 = distinct !DILexicalBlock(scope: !20950, file: !3, line: 336, column: 18)
!20955 = !DILocation(line: 337, column: 30, scope: !20954)
!20956 = !DILocation(line: 337, column: 36, scope: !20954)
!20957 = !DILocation(line: 337, column: 3, scope: !20954)
!20958 = !DILocation(line: 338, column: 3, scope: !20954)
!20959 = !DILocation(line: 341, column: 35, scope: !20931)
!20960 = !DILocation(line: 341, column: 11, scope: !20931)
!20961 = !DILocation(line: 341, column: 9, scope: !20931)
!20962 = !DILocation(line: 342, column: 6, scope: !20963)
!20963 = distinct !DILexicalBlock(scope: !20931, file: !3, line: 342, column: 6)
!20964 = !DILocation(line: 342, column: 13, scope: !20963)
!20965 = !DILocation(line: 342, column: 6, scope: !20931)
!20966 = !DILocation(line: 343, column: 3, scope: !20963)
!20967 = !DILocation(line: 345, column: 6, scope: !20968)
!20968 = distinct !DILexicalBlock(scope: !20931, file: !3, line: 345, column: 6)
!20969 = !DILocation(line: 345, column: 13, scope: !20968)
!20970 = !DILocation(line: 345, column: 6, scope: !20931)
!20971 = !DILocation(line: 346, column: 3, scope: !20972)
!20972 = distinct !DILexicalBlock(scope: !20968, file: !3, line: 345, column: 29)
!20973 = !DILocation(line: 353, column: 36, scope: !20972)
!20974 = !DILocation(line: 353, column: 12, scope: !20972)
!20975 = !DILocation(line: 353, column: 10, scope: !20972)
!20976 = !DILocation(line: 354, column: 7, scope: !20977)
!20977 = distinct !DILexicalBlock(scope: !20972, file: !3, line: 354, column: 7)
!20978 = !DILocation(line: 354, column: 14, scope: !20977)
!20979 = !DILocation(line: 354, column: 7, scope: !20972)
!20980 = !DILocation(line: 355, column: 4, scope: !20977)
!20981 = !DILocation(line: 357, column: 3, scope: !20972)
!20982 = !DILocation(line: 362, column: 2, scope: !20972)
!20983 = !DILocation(line: 363, column: 3, scope: !20984)
!20984 = distinct !DILexicalBlock(scope: !20968, file: !3, line: 362, column: 9)
!20985 = !DILocation(line: 370, column: 35, scope: !20931)
!20986 = !DILocation(line: 370, column: 11, scope: !20931)
!20987 = !DILocation(line: 370, column: 9, scope: !20931)
!20988 = !DILocation(line: 371, column: 6, scope: !20989)
!20989 = distinct !DILexicalBlock(scope: !20931, file: !3, line: 371, column: 6)
!20990 = !DILocation(line: 371, column: 13, scope: !20989)
!20991 = !DILocation(line: 371, column: 6, scope: !20931)
!20992 = !DILocation(line: 372, column: 3, scope: !20989)
!20993 = !DILocation(line: 374, column: 11, scope: !20931)
!20994 = !DILocation(line: 374, column: 9, scope: !20931)
!20995 = !DILocation(line: 374, column: 2, scope: !20931)
!20996 = !DILabel(scope: !20931, name: "mdio_read_exit", file: !3, line: 376)
!20997 = !DILocation(line: 376, column: 1, scope: !20931)
!20998 = !DILocation(line: 377, column: 29, scope: !20931)
!20999 = !DILocation(line: 377, column: 33, scope: !20931)
!21000 = !DILocation(line: 377, column: 39, scope: !20931)
!21001 = !DILocation(line: 377, column: 2, scope: !20931)
!21002 = !DILocation(line: 378, column: 30, scope: !20931)
!21003 = !DILocation(line: 378, column: 34, scope: !20931)
!21004 = !DILocation(line: 378, column: 40, scope: !20931)
!21005 = !DILocation(line: 378, column: 2, scope: !20931)
!21006 = !DILabel(scope: !20931, name: "mdio_pm_exit", file: !3, line: 379)
!21007 = !DILocation(line: 379, column: 1, scope: !20931)
!21008 = !DILocation(line: 380, column: 9, scope: !20931)
!21009 = !DILocation(line: 380, column: 2, scope: !20931)
!21010 = distinct !DISubprogram(name: "macb_mdio_write", scope: !3, file: !3, line: 383, type: !9489, scopeLine: 385, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!21011 = !DILocalVariable(name: "bus", arg: 1, scope: !21010, file: !3, line: 383, type: !9473)
!21012 = !DILocation(line: 383, column: 44, scope: !21010)
!21013 = !DILocalVariable(name: "mii_id", arg: 2, scope: !21010, file: !3, line: 383, type: !37)
!21014 = !DILocation(line: 383, column: 53, scope: !21010)
!21015 = !DILocalVariable(name: "regnum", arg: 3, scope: !21010, file: !3, line: 383, type: !37)
!21016 = !DILocation(line: 383, column: 65, scope: !21010)
!21017 = !DILocalVariable(name: "value", arg: 4, scope: !21010, file: !3, line: 384, type: !1038)
!21018 = !DILocation(line: 384, column: 11, scope: !21010)
!21019 = !DILocalVariable(name: "bp", scope: !21010, file: !3, line: 386, type: !10238)
!21020 = !DILocation(line: 386, column: 15, scope: !21010)
!21021 = !DILocation(line: 386, column: 20, scope: !21010)
!21022 = !DILocation(line: 386, column: 25, scope: !21010)
!21023 = !DILocalVariable(name: "status", scope: !21010, file: !3, line: 387, type: !37)
!21024 = !DILocation(line: 387, column: 6, scope: !21010)
!21025 = !DILocation(line: 389, column: 32, scope: !21010)
!21026 = !DILocation(line: 389, column: 36, scope: !21010)
!21027 = !DILocation(line: 389, column: 42, scope: !21010)
!21028 = !DILocation(line: 389, column: 11, scope: !21010)
!21029 = !DILocation(line: 389, column: 9, scope: !21010)
!21030 = !DILocation(line: 390, column: 6, scope: !21031)
!21031 = distinct !DILexicalBlock(scope: !21010, file: !3, line: 390, column: 6)
!21032 = !DILocation(line: 390, column: 13, scope: !21031)
!21033 = !DILocation(line: 390, column: 6, scope: !21010)
!21034 = !DILocation(line: 391, column: 26, scope: !21035)
!21035 = distinct !DILexicalBlock(scope: !21031, file: !3, line: 390, column: 18)
!21036 = !DILocation(line: 391, column: 30, scope: !21035)
!21037 = !DILocation(line: 391, column: 36, scope: !21035)
!21038 = !DILocation(line: 391, column: 3, scope: !21035)
!21039 = !DILocation(line: 392, column: 3, scope: !21035)
!21040 = !DILocation(line: 395, column: 35, scope: !21010)
!21041 = !DILocation(line: 395, column: 11, scope: !21010)
!21042 = !DILocation(line: 395, column: 9, scope: !21010)
!21043 = !DILocation(line: 396, column: 6, scope: !21044)
!21044 = distinct !DILexicalBlock(scope: !21010, file: !3, line: 396, column: 6)
!21045 = !DILocation(line: 396, column: 13, scope: !21044)
!21046 = !DILocation(line: 396, column: 6, scope: !21010)
!21047 = !DILocation(line: 397, column: 3, scope: !21044)
!21048 = !DILocation(line: 399, column: 6, scope: !21049)
!21049 = distinct !DILexicalBlock(scope: !21010, file: !3, line: 399, column: 6)
!21050 = !DILocation(line: 399, column: 13, scope: !21049)
!21051 = !DILocation(line: 399, column: 6, scope: !21010)
!21052 = !DILocation(line: 400, column: 3, scope: !21053)
!21053 = distinct !DILexicalBlock(scope: !21049, file: !3, line: 399, column: 29)
!21054 = !DILocation(line: 407, column: 36, scope: !21053)
!21055 = !DILocation(line: 407, column: 12, scope: !21053)
!21056 = !DILocation(line: 407, column: 10, scope: !21053)
!21057 = !DILocation(line: 408, column: 7, scope: !21058)
!21058 = distinct !DILexicalBlock(scope: !21053, file: !3, line: 408, column: 7)
!21059 = !DILocation(line: 408, column: 14, scope: !21058)
!21060 = !DILocation(line: 408, column: 7, scope: !21053)
!21061 = !DILocation(line: 409, column: 4, scope: !21058)
!21062 = !DILocation(line: 411, column: 3, scope: !21053)
!21063 = !DILocation(line: 417, column: 2, scope: !21053)
!21064 = !DILocation(line: 418, column: 3, scope: !21065)
!21065 = distinct !DILexicalBlock(scope: !21049, file: !3, line: 417, column: 9)
!21066 = !DILocation(line: 426, column: 35, scope: !21010)
!21067 = !DILocation(line: 426, column: 11, scope: !21010)
!21068 = !DILocation(line: 426, column: 9, scope: !21010)
!21069 = !DILocation(line: 427, column: 6, scope: !21070)
!21070 = distinct !DILexicalBlock(scope: !21010, file: !3, line: 427, column: 6)
!21071 = !DILocation(line: 427, column: 13, scope: !21070)
!21072 = !DILocation(line: 427, column: 6, scope: !21010)
!21073 = !DILocation(line: 428, column: 3, scope: !21070)
!21074 = !DILocation(line: 427, column: 15, scope: !21070)
!21075 = !DILabel(scope: !21010, name: "mdio_write_exit", file: !3, line: 430)
!21076 = !DILocation(line: 430, column: 1, scope: !21010)
!21077 = !DILocation(line: 431, column: 29, scope: !21010)
!21078 = !DILocation(line: 431, column: 33, scope: !21010)
!21079 = !DILocation(line: 431, column: 39, scope: !21010)
!21080 = !DILocation(line: 431, column: 2, scope: !21010)
!21081 = !DILocation(line: 432, column: 30, scope: !21010)
!21082 = !DILocation(line: 432, column: 34, scope: !21010)
!21083 = !DILocation(line: 432, column: 40, scope: !21010)
!21084 = !DILocation(line: 432, column: 2, scope: !21010)
!21085 = !DILabel(scope: !21010, name: "mdio_pm_exit", file: !3, line: 433)
!21086 = !DILocation(line: 433, column: 1, scope: !21010)
!21087 = !DILocation(line: 434, column: 9, scope: !21010)
!21088 = !DILocation(line: 434, column: 2, scope: !21010)
!21089 = distinct !DISubprogram(name: "macb_mdiobus_register", scope: !3, file: !3, line: 741, type: !10388, scopeLine: 742, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!21090 = !DILocalVariable(name: "bp", arg: 1, scope: !21089, file: !3, line: 741, type: !10238)
!21091 = !DILocation(line: 741, column: 47, scope: !21089)
!21092 = !DILocalVariable(name: "child", scope: !21089, file: !3, line: 743, type: !4476)
!21093 = !DILocation(line: 743, column: 22, scope: !21089)
!21094 = !DILocalVariable(name: "np", scope: !21089, file: !3, line: 743, type: !4476)
!21095 = !DILocation(line: 743, column: 30, scope: !21089)
!21096 = !DILocation(line: 743, column: 35, scope: !21089)
!21097 = !DILocation(line: 743, column: 39, scope: !21089)
!21098 = !DILocation(line: 743, column: 45, scope: !21089)
!21099 = !DILocation(line: 743, column: 49, scope: !21089)
!21100 = !DILocation(line: 745, column: 27, scope: !21101)
!21101 = distinct !DILexicalBlock(scope: !21089, file: !3, line: 745, column: 6)
!21102 = !DILocation(line: 745, column: 6, scope: !21101)
!21103 = !DILocation(line: 745, column: 6, scope: !21089)
!21104 = !DILocation(line: 746, column: 10, scope: !21101)
!21105 = !DILocation(line: 746, column: 3, scope: !21101)
!21106 = !DILocation(line: 753, column: 2, scope: !21107)
!21107 = distinct !DILexicalBlock(scope: !21089, file: !3, line: 753, column: 2)
!21108 = !DILocation(line: 753, column: 2, scope: !21109)
!21109 = distinct !DILexicalBlock(scope: !21107, file: !3, line: 753, column: 2)
!21110 = !DILocation(line: 754, column: 31, scope: !21111)
!21111 = distinct !DILexicalBlock(scope: !21109, file: !3, line: 754, column: 7)
!21112 = !DILocation(line: 754, column: 7, scope: !21111)
!21113 = !DILocation(line: 754, column: 7, scope: !21109)
!21114 = !DILocation(line: 758, column: 16, scope: !21115)
!21115 = distinct !DILexicalBlock(scope: !21111, file: !3, line: 754, column: 39)
!21116 = !DILocation(line: 758, column: 4, scope: !21115)
!21117 = !DILocation(line: 760, column: 31, scope: !21115)
!21118 = !DILocation(line: 760, column: 35, scope: !21115)
!21119 = !DILocation(line: 760, column: 44, scope: !21115)
!21120 = !DILocation(line: 760, column: 11, scope: !21115)
!21121 = !DILocation(line: 760, column: 4, scope: !21115)
!21122 = !DILocation(line: 754, column: 36, scope: !21111)
!21123 = distinct !{!21123, !21106, !21124}
!21124 = !DILocation(line: 761, column: 3, scope: !21107)
!21125 = !DILocation(line: 763, column: 9, scope: !21089)
!21126 = !DILocation(line: 763, column: 2, scope: !21089)
!21127 = !DILocation(line: 764, column: 1, scope: !21089)
!21128 = distinct !DISubprogram(name: "macb_mii_probe", scope: !3, file: !3, line: 723, type: !407, scopeLine: 724, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!21129 = !DILocalVariable(name: "dev", arg: 1, scope: !21128, file: !3, line: 723, type: !295)
!21130 = !DILocation(line: 723, column: 46, scope: !21128)
!21131 = !DILocalVariable(name: "bp", scope: !21128, file: !3, line: 725, type: !10238)
!21132 = !DILocation(line: 725, column: 15, scope: !21128)
!21133 = !DILocation(line: 725, column: 32, scope: !21128)
!21134 = !DILocation(line: 725, column: 20, scope: !21128)
!21135 = !DILocation(line: 727, column: 28, scope: !21128)
!21136 = !DILocation(line: 727, column: 33, scope: !21128)
!21137 = !DILocation(line: 727, column: 2, scope: !21128)
!21138 = !DILocation(line: 727, column: 6, scope: !21128)
!21139 = !DILocation(line: 727, column: 21, scope: !21128)
!21140 = !DILocation(line: 727, column: 25, scope: !21128)
!21141 = !DILocation(line: 728, column: 2, scope: !21128)
!21142 = !DILocation(line: 728, column: 6, scope: !21128)
!21143 = !DILocation(line: 728, column: 21, scope: !21128)
!21144 = !DILocation(line: 728, column: 26, scope: !21128)
!21145 = !DILocation(line: 730, column: 32, scope: !21128)
!21146 = !DILocation(line: 730, column: 36, scope: !21128)
!21147 = !DILocation(line: 730, column: 52, scope: !21128)
!21148 = !DILocation(line: 730, column: 56, scope: !21128)
!21149 = !DILocation(line: 730, column: 62, scope: !21128)
!21150 = !DILocation(line: 730, column: 66, scope: !21128)
!21151 = !DILocation(line: 731, column: 10, scope: !21128)
!21152 = !DILocation(line: 731, column: 14, scope: !21128)
!21153 = !DILocation(line: 730, column: 16, scope: !21128)
!21154 = !DILocation(line: 730, column: 2, scope: !21128)
!21155 = !DILocation(line: 730, column: 6, scope: !21128)
!21156 = !DILocation(line: 730, column: 14, scope: !21128)
!21157 = !DILocation(line: 732, column: 13, scope: !21158)
!21158 = distinct !DILexicalBlock(scope: !21128, file: !3, line: 732, column: 6)
!21159 = !DILocation(line: 732, column: 17, scope: !21158)
!21160 = !DILocation(line: 732, column: 6, scope: !21158)
!21161 = !DILocation(line: 732, column: 6, scope: !21128)
!21162 = !DILocation(line: 733, column: 14, scope: !21163)
!21163 = distinct !DILexicalBlock(scope: !21158, file: !3, line: 732, column: 27)
!21164 = !DILocation(line: 734, column: 15, scope: !21163)
!21165 = !DILocation(line: 734, column: 19, scope: !21163)
!21166 = !DILocation(line: 734, column: 7, scope: !21163)
!21167 = !DILocation(line: 733, column: 3, scope: !21163)
!21168 = !DILocation(line: 735, column: 18, scope: !21163)
!21169 = !DILocation(line: 735, column: 22, scope: !21163)
!21170 = !DILocation(line: 735, column: 10, scope: !21163)
!21171 = !DILocation(line: 735, column: 3, scope: !21163)
!21172 = !DILocation(line: 738, column: 2, scope: !21128)
!21173 = !DILocation(line: 739, column: 1, scope: !21128)
!21174 = distinct !DISubprogram(name: "pm_runtime_put_noidle", scope: !11610, file: !11610, line: 103, type: !4195, scopeLine: 104, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!21175 = !DILocalVariable(name: "v", arg: 1, scope: !21176, file: !11619, line: 200, type: !11622)
!21176 = distinct !DISubprogram(name: "arch_atomic_try_cmpxchg", scope: !11619, file: !11619, line: 200, type: !21177, scopeLine: 201, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!21177 = !DISubroutineType(types: !21178)
!21178 = !{!540, !11622, !539, !37}
!21179 = !DILocation(line: 200, column: 63, scope: !21176, inlinedAt: !21180)
!21180 = distinct !DILocation(line: 1093, column: 12, scope: !21181, inlinedAt: !21185)
!21181 = distinct !DISubprogram(name: "arch_atomic_fetch_add_unless", scope: !21182, file: !21182, line: 1086, type: !21183, scopeLine: 1087, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!21182 = !DIFile(filename: "./include/linux/atomic-arch-fallback.h", directory: "/home/lizy2001/genbc/linux")
!21183 = !DISubroutineType(types: !21184)
!21184 = !{!37, !11622, !37, !37}
!21185 = distinct !DILocation(line: 1113, column: 9, scope: !21186, inlinedAt: !21189)
!21186 = distinct !DISubprogram(name: "arch_atomic_add_unless", scope: !21182, file: !21182, line: 1111, type: !21187, scopeLine: 1112, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!21187 = !DISubroutineType(types: !21188)
!21188 = !{!540, !11622, !37, !37}
!21189 = distinct !DILocation(line: 789, column: 9, scope: !21190, inlinedAt: !21191)
!21190 = distinct !DISubprogram(name: "atomic_add_unless", scope: !11626, file: !11626, line: 786, type: !21187, scopeLine: 787, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!21191 = distinct !DILocation(line: 105, column: 2, scope: !21174)
!21192 = !DILocalVariable(name: "old", arg: 2, scope: !21176, file: !11619, line: 200, type: !539)
!21193 = !DILocation(line: 200, column: 71, scope: !21176, inlinedAt: !21180)
!21194 = !DILocalVariable(name: "new", arg: 3, scope: !21176, file: !11619, line: 200, type: !37)
!21195 = !DILocation(line: 200, column: 80, scope: !21176, inlinedAt: !21180)
!21196 = !DILocalVariable(name: "success", scope: !21197, file: !11619, line: 202, type: !540)
!21197 = distinct !DILexicalBlock(scope: !21176, file: !11619, line: 202, column: 9)
!21198 = !DILocation(line: 202, column: 9, scope: !21197, inlinedAt: !21180)
!21199 = !DILocalVariable(name: "_old", scope: !21197, file: !11619, line: 202, type: !539)
!21200 = !DILocalVariable(name: "__old", scope: !21197, file: !11619, line: 202, type: !37)
!21201 = !DILocalVariable(name: "__new", scope: !21197, file: !11619, line: 202, type: !37)
!21202 = !DILocalVariable(name: "__ptr", scope: !21197, file: !11619, line: 202, type: !10776)
!21203 = !DILocation(line: 23, column: 61, scope: !17419, inlinedAt: !21204)
!21204 = distinct !DILocation(line: 1088, column: 10, scope: !21181, inlinedAt: !21185)
!21205 = !DILocalVariable(name: "v", arg: 1, scope: !21181, file: !21182, line: 1086, type: !11622)
!21206 = !DILocation(line: 1086, column: 40, scope: !21181, inlinedAt: !21185)
!21207 = !DILocalVariable(name: "a", arg: 2, scope: !21181, file: !21182, line: 1086, type: !37)
!21208 = !DILocation(line: 1086, column: 47, scope: !21181, inlinedAt: !21185)
!21209 = !DILocalVariable(name: "u", arg: 3, scope: !21181, file: !21182, line: 1086, type: !37)
!21210 = !DILocation(line: 1086, column: 54, scope: !21181, inlinedAt: !21185)
!21211 = !DILocalVariable(name: "c", scope: !21181, file: !21182, line: 1088, type: !37)
!21212 = !DILocation(line: 1088, column: 6, scope: !21181, inlinedAt: !21185)
!21213 = !DILocalVariable(name: "v", arg: 1, scope: !21186, file: !21182, line: 1111, type: !11622)
!21214 = !DILocation(line: 1111, column: 34, scope: !21186, inlinedAt: !21189)
!21215 = !DILocalVariable(name: "a", arg: 2, scope: !21186, file: !21182, line: 1111, type: !37)
!21216 = !DILocation(line: 1111, column: 41, scope: !21186, inlinedAt: !21189)
!21217 = !DILocalVariable(name: "u", arg: 3, scope: !21186, file: !21182, line: 1111, type: !37)
!21218 = !DILocation(line: 1111, column: 48, scope: !21186, inlinedAt: !21189)
!21219 = !DILocation(line: 99, column: 79, scope: !11629, inlinedAt: !21220)
!21220 = distinct !DILocation(line: 788, column: 2, scope: !21190, inlinedAt: !21191)
!21221 = !DILocation(line: 99, column: 89, scope: !11629, inlinedAt: !21220)
!21222 = !DILocalVariable(name: "v", arg: 1, scope: !21190, file: !11626, line: 786, type: !11622)
!21223 = !DILocation(line: 786, column: 29, scope: !21190, inlinedAt: !21191)
!21224 = !DILocalVariable(name: "a", arg: 2, scope: !21190, file: !11626, line: 786, type: !37)
!21225 = !DILocation(line: 786, column: 36, scope: !21190, inlinedAt: !21191)
!21226 = !DILocalVariable(name: "u", arg: 3, scope: !21190, file: !11626, line: 786, type: !37)
!21227 = !DILocation(line: 786, column: 43, scope: !21190, inlinedAt: !21191)
!21228 = !DILocalVariable(name: "dev", arg: 1, scope: !21174, file: !11610, line: 103, type: !4172)
!21229 = !DILocation(line: 103, column: 57, scope: !21174)
!21230 = !DILocation(line: 105, column: 21, scope: !21174)
!21231 = !DILocation(line: 105, column: 26, scope: !21174)
!21232 = !DILocation(line: 105, column: 32, scope: !21174)
!21233 = !DILocation(line: 788, column: 31, scope: !21190, inlinedAt: !21191)
!21234 = !DILocation(line: 101, column: 20, scope: !11629, inlinedAt: !21220)
!21235 = !DILocation(line: 101, column: 23, scope: !11629, inlinedAt: !21220)
!21236 = !DILocation(line: 101, column: 2, scope: !11629, inlinedAt: !21220)
!21237 = !DILocation(line: 102, column: 2, scope: !11629, inlinedAt: !21220)
!21238 = !DILocation(line: 789, column: 32, scope: !21190, inlinedAt: !21191)
!21239 = !DILocation(line: 789, column: 35, scope: !21190, inlinedAt: !21191)
!21240 = !DILocation(line: 789, column: 38, scope: !21190, inlinedAt: !21191)
!21241 = !DILocation(line: 1113, column: 38, scope: !21186, inlinedAt: !21189)
!21242 = !DILocation(line: 1113, column: 41, scope: !21186, inlinedAt: !21189)
!21243 = !DILocation(line: 1113, column: 44, scope: !21186, inlinedAt: !21189)
!21244 = !DILocation(line: 1088, column: 27, scope: !21181, inlinedAt: !21185)
!21245 = !DILocation(line: 29, column: 9, scope: !17419, inlinedAt: !21204)
!21246 = !DILocation(line: 1090, column: 2, scope: !21181, inlinedAt: !21185)
!21247 = !DILocation(line: 1091, column: 7, scope: !21248, inlinedAt: !21185)
!21248 = distinct !DILexicalBlock(scope: !21249, file: !21182, line: 1091, column: 7)
!21249 = distinct !DILexicalBlock(scope: !21181, file: !21182, line: 1090, column: 5)
!21250 = !DILocation(line: 1091, column: 7, scope: !21249, inlinedAt: !21185)
!21251 = !DILocation(line: 1092, column: 4, scope: !21248, inlinedAt: !21185)
!21252 = !DILocation(line: 1093, column: 36, scope: !21181, inlinedAt: !21185)
!21253 = !DILocation(line: 1093, column: 43, scope: !21181, inlinedAt: !21185)
!21254 = !DILocation(line: 1093, column: 47, scope: !21181, inlinedAt: !21185)
!21255 = !DILocation(line: 1093, column: 45, scope: !21181, inlinedAt: !21185)
!21256 = !{i32 -2146532711, i32 -2146532556}
!21257 = !DILocation(line: 202, column: 9, scope: !21258, inlinedAt: !21180)
!21258 = distinct !DILexicalBlock(scope: !21197, file: !11619, line: 202, column: 9)
!21259 = !DILocation(line: 202, column: 9, scope: !21176, inlinedAt: !21180)
!21260 = !DILocation(line: 1093, column: 11, scope: !21181, inlinedAt: !21185)
!21261 = !DILocation(line: 1093, column: 2, scope: !21249, inlinedAt: !21185)
!21262 = distinct !{!21262, !21246, !21263}
!21263 = !DILocation(line: 1093, column: 49, scope: !21181, inlinedAt: !21185)
!21264 = !DILocation(line: 1095, column: 9, scope: !21181, inlinedAt: !21185)
!21265 = !DILocation(line: 1113, column: 50, scope: !21186, inlinedAt: !21189)
!21266 = !DILocation(line: 1113, column: 47, scope: !21186, inlinedAt: !21189)
!21267 = !DILocation(line: 106, column: 1, scope: !21174)
!21268 = distinct !DISubprogram(name: "macb_mdio_wait_for_idle", scope: !3, file: !3, line: 322, type: !10388, scopeLine: 323, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!21269 = !DILocalVariable(name: "bp", arg: 1, scope: !21268, file: !3, line: 322, type: !10238)
!21270 = !DILocation(line: 322, column: 49, scope: !21268)
!21271 = !DILocalVariable(name: "val", scope: !21268, file: !3, line: 324, type: !707)
!21272 = !DILocation(line: 324, column: 6, scope: !21268)
!21273 = !DILocalVariable(name: "__timeout_us", scope: !21274, file: !3, line: 326, type: !336)
!21274 = distinct !DILexicalBlock(scope: !21268, file: !3, line: 326, column: 9)
!21275 = !DILocation(line: 326, column: 9, scope: !21274)
!21276 = !DILocalVariable(name: "__sleep_us", scope: !21274, file: !3, line: 326, type: !317)
!21277 = !DILocalVariable(name: "__timeout", scope: !21274, file: !3, line: 326, type: !1341)
!21278 = !DILocation(line: 326, column: 9, scope: !21279)
!21279 = distinct !DILexicalBlock(scope: !21280, file: !3, line: 326, column: 9)
!21280 = distinct !DILexicalBlock(scope: !21274, file: !3, line: 326, column: 9)
!21281 = !DILocation(line: 326, column: 9, scope: !21280)
!21282 = !DILocation(line: 326, column: 9, scope: !21283)
!21283 = distinct !DILexicalBlock(scope: !21279, file: !3, line: 326, column: 9)
!21284 = !DILocation(line: 326, column: 9, scope: !21285)
!21285 = distinct !DILexicalBlock(scope: !21283, file: !3, line: 326, column: 9)
!21286 = !DILocation(line: 326, column: 9, scope: !21287)
!21287 = distinct !DILexicalBlock(scope: !21288, file: !3, line: 326, column: 9)
!21288 = distinct !DILexicalBlock(scope: !21289, file: !3, line: 326, column: 9)
!21289 = distinct !DILexicalBlock(scope: !21274, file: !3, line: 326, column: 9)
!21290 = !DILocation(line: 326, column: 9, scope: !21291)
!21291 = distinct !DILexicalBlock(scope: !21287, file: !3, line: 326, column: 9)
!21292 = !DILocation(line: 326, column: 9, scope: !21293)
!21293 = distinct !DILexicalBlock(scope: !21287, file: !3, line: 326, column: 9)
!21294 = !DILocation(line: 326, column: 9, scope: !21295)
!21295 = distinct !DILexicalBlock(scope: !21293, file: !3, line: 326, column: 9)
!21296 = !DILocation(line: 326, column: 9, scope: !21297)
!21297 = distinct !DILexicalBlock(scope: !21287, file: !3, line: 326, column: 9)
!21298 = !DILocation(line: 326, column: 9, scope: !21288)
!21299 = distinct !{!21299, !21300, !21300}
!21300 = !DILocation(line: 326, column: 9, scope: !21289)
!21301 = !DILocation(line: 326, column: 2, scope: !21268)
!21302 = distinct !DISubprogram(name: "ktime_add_us", scope: !1342, file: !1342, line: 179, type: !21303, scopeLine: 180, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!21303 = !DISubroutineType(types: !21304)
!21304 = !{!1341, !21305, !21306}
!21305 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1341)
!21306 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !336)
!21307 = !DILocalVariable(name: "kt", arg: 1, scope: !21302, file: !1342, line: 179, type: !21305)
!21308 = !DILocation(line: 179, column: 50, scope: !21302)
!21309 = !DILocalVariable(name: "usec", arg: 2, scope: !21302, file: !1342, line: 179, type: !21306)
!21310 = !DILocation(line: 179, column: 64, scope: !21302)
!21311 = !DILocation(line: 181, column: 9, scope: !21302)
!21312 = !DILocation(line: 181, column: 2, scope: !21302)
!21313 = distinct !DISubprogram(name: "ktime_compare", scope: !1342, file: !1342, line: 95, type: !21314, scopeLine: 96, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!21314 = !DISubroutineType(types: !21315)
!21315 = !{!37, !21305, !21305}
!21316 = !DILocalVariable(name: "cmp1", arg: 1, scope: !21313, file: !1342, line: 95, type: !21305)
!21317 = !DILocation(line: 95, column: 47, scope: !21313)
!21318 = !DILocalVariable(name: "cmp2", arg: 2, scope: !21313, file: !1342, line: 95, type: !21305)
!21319 = !DILocation(line: 95, column: 67, scope: !21313)
!21320 = !DILocation(line: 97, column: 6, scope: !21321)
!21321 = distinct !DILexicalBlock(scope: !21313, file: !1342, line: 97, column: 6)
!21322 = !DILocation(line: 97, column: 13, scope: !21321)
!21323 = !DILocation(line: 97, column: 11, scope: !21321)
!21324 = !DILocation(line: 97, column: 6, scope: !21313)
!21325 = !DILocation(line: 98, column: 3, scope: !21321)
!21326 = !DILocation(line: 99, column: 6, scope: !21327)
!21327 = distinct !DILexicalBlock(scope: !21313, file: !1342, line: 99, column: 6)
!21328 = !DILocation(line: 99, column: 13, scope: !21327)
!21329 = !DILocation(line: 99, column: 11, scope: !21327)
!21330 = !DILocation(line: 99, column: 6, scope: !21313)
!21331 = !DILocation(line: 100, column: 3, scope: !21327)
!21332 = !DILocation(line: 101, column: 2, scope: !21313)
!21333 = !DILocation(line: 102, column: 1, scope: !21313)
!21334 = distinct !DISubprogram(name: "macb_validate", scope: !3, file: !3, line: 502, type: !10877, scopeLine: 505, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!21335 = !DILocalVariable(name: "config", arg: 1, scope: !21334, file: !3, line: 502, type: !10438)
!21336 = !DILocation(line: 502, column: 50, scope: !21334)
!21337 = !DILocalVariable(name: "supported", arg: 2, scope: !21334, file: !3, line: 503, type: !2427)
!21338 = !DILocation(line: 503, column: 21, scope: !21334)
!21339 = !DILocalVariable(name: "state", arg: 3, scope: !21334, file: !3, line: 504, type: !10439)
!21340 = !DILocation(line: 504, column: 33, scope: !21334)
!21341 = !DILocalVariable(name: "ndev", scope: !21334, file: !3, line: 506, type: !295)
!21342 = !DILocation(line: 506, column: 21, scope: !21334)
!21343 = !DILocalVariable(name: "__mptr", scope: !21344, file: !3, line: 506, type: !570)
!21344 = distinct !DILexicalBlock(scope: !21334, file: !3, line: 506, column: 28)
!21345 = !DILocation(line: 506, column: 28, scope: !21344)
!21346 = !DILocation(line: 506, column: 28, scope: !21347)
!21347 = distinct !DILexicalBlock(scope: !21344, file: !3, line: 506, column: 28)
!21348 = !DILocalVariable(name: "mask", scope: !21334, file: !3, line: 507, type: !8766)
!21349 = !DILocation(line: 507, column: 2, scope: !21334)
!21350 = !DILocalVariable(name: "bp", scope: !21334, file: !3, line: 508, type: !10238)
!21351 = !DILocation(line: 508, column: 15, scope: !21334)
!21352 = !DILocation(line: 508, column: 32, scope: !21334)
!21353 = !DILocation(line: 508, column: 20, scope: !21334)
!21354 = !DILocation(line: 511, column: 6, scope: !21355)
!21355 = distinct !DILexicalBlock(scope: !21334, file: !3, line: 511, column: 6)
!21356 = !DILocation(line: 511, column: 13, scope: !21355)
!21357 = !DILocation(line: 511, column: 23, scope: !21355)
!21358 = !DILocation(line: 511, column: 48, scope: !21355)
!21359 = !DILocation(line: 512, column: 6, scope: !21355)
!21360 = !DILocation(line: 512, column: 13, scope: !21355)
!21361 = !DILocation(line: 512, column: 23, scope: !21355)
!21362 = !DILocation(line: 512, column: 49, scope: !21355)
!21363 = !DILocation(line: 513, column: 6, scope: !21355)
!21364 = !DILocation(line: 513, column: 13, scope: !21355)
!21365 = !DILocation(line: 513, column: 23, scope: !21355)
!21366 = !DILocation(line: 513, column: 50, scope: !21355)
!21367 = !DILocation(line: 514, column: 6, scope: !21355)
!21368 = !DILocation(line: 514, column: 13, scope: !21355)
!21369 = !DILocation(line: 514, column: 23, scope: !21355)
!21370 = !DILocation(line: 514, column: 50, scope: !21355)
!21371 = !DILocation(line: 515, column: 6, scope: !21355)
!21372 = !DILocation(line: 515, column: 13, scope: !21355)
!21373 = !DILocation(line: 515, column: 23, scope: !21355)
!21374 = !DILocation(line: 515, column: 51, scope: !21355)
!21375 = !DILocation(line: 516, column: 35, scope: !21355)
!21376 = !DILocation(line: 516, column: 42, scope: !21355)
!21377 = !DILocation(line: 516, column: 7, scope: !21355)
!21378 = !DILocation(line: 511, column: 6, scope: !21334)
!21379 = !DILocation(line: 517, column: 15, scope: !21380)
!21380 = distinct !DILexicalBlock(scope: !21355, file: !3, line: 516, column: 54)
!21381 = !DILocation(line: 517, column: 3, scope: !21380)
!21382 = !DILocation(line: 518, column: 3, scope: !21380)
!21383 = !DILocation(line: 521, column: 19, scope: !21384)
!21384 = distinct !DILexicalBlock(scope: !21334, file: !3, line: 521, column: 6)
!21385 = !DILocation(line: 521, column: 7, scope: !21384)
!21386 = !DILocation(line: 521, column: 23, scope: !21384)
!21387 = !DILocation(line: 522, column: 7, scope: !21384)
!21388 = !DILocation(line: 522, column: 14, scope: !21384)
!21389 = !DILocation(line: 522, column: 24, scope: !21384)
!21390 = !DILocation(line: 522, column: 51, scope: !21384)
!21391 = !DILocation(line: 523, column: 35, scope: !21384)
!21392 = !DILocation(line: 523, column: 42, scope: !21384)
!21393 = !DILocation(line: 523, column: 7, scope: !21384)
!21394 = !DILocation(line: 521, column: 6, scope: !21334)
!21395 = !DILocation(line: 524, column: 15, scope: !21396)
!21396 = distinct !DILexicalBlock(scope: !21384, file: !3, line: 523, column: 55)
!21397 = !DILocation(line: 524, column: 3, scope: !21396)
!21398 = !DILocation(line: 525, column: 3, scope: !21396)
!21399 = !DILocation(line: 528, column: 25, scope: !21334)
!21400 = !DILocation(line: 528, column: 2, scope: !21334)
!21401 = !DILocation(line: 529, column: 2, scope: !21334)
!21402 = !DILocation(line: 530, column: 2, scope: !21334)
!21403 = !DILocation(line: 532, column: 2, scope: !21334)
!21404 = !DILocation(line: 533, column: 2, scope: !21334)
!21405 = !DILocation(line: 534, column: 2, scope: !21334)
!21406 = !DILocation(line: 535, column: 2, scope: !21334)
!21407 = !DILocation(line: 537, column: 6, scope: !21408)
!21408 = distinct !DILexicalBlock(scope: !21334, file: !3, line: 537, column: 6)
!21409 = !DILocation(line: 537, column: 10, scope: !21408)
!21410 = !DILocation(line: 537, column: 15, scope: !21408)
!21411 = !DILocation(line: 537, column: 50, scope: !21408)
!21412 = !DILocation(line: 538, column: 7, scope: !21408)
!21413 = !DILocation(line: 538, column: 14, scope: !21408)
!21414 = !DILocation(line: 538, column: 24, scope: !21408)
!21415 = !DILocation(line: 538, column: 49, scope: !21408)
!21416 = !DILocation(line: 539, column: 7, scope: !21408)
!21417 = !DILocation(line: 539, column: 14, scope: !21408)
!21418 = !DILocation(line: 539, column: 24, scope: !21408)
!21419 = !DILocation(line: 539, column: 51, scope: !21408)
!21420 = !DILocation(line: 540, column: 7, scope: !21408)
!21421 = !DILocation(line: 540, column: 14, scope: !21408)
!21422 = !DILocation(line: 540, column: 24, scope: !21408)
!21423 = !DILocation(line: 540, column: 52, scope: !21408)
!21424 = !DILocation(line: 541, column: 35, scope: !21408)
!21425 = !DILocation(line: 541, column: 42, scope: !21408)
!21426 = !DILocation(line: 541, column: 7, scope: !21408)
!21427 = !DILocation(line: 537, column: 6, scope: !21334)
!21428 = !DILocation(line: 542, column: 3, scope: !21429)
!21429 = distinct !DILexicalBlock(scope: !21408, file: !3, line: 541, column: 55)
!21430 = !DILocation(line: 543, column: 3, scope: !21429)
!21431 = !DILocation(line: 545, column: 9, scope: !21432)
!21432 = distinct !DILexicalBlock(scope: !21429, file: !3, line: 545, column: 7)
!21433 = !DILocation(line: 545, column: 13, scope: !21432)
!21434 = !DILocation(line: 545, column: 18, scope: !21432)
!21435 = !DILocation(line: 545, column: 7, scope: !21429)
!21436 = !DILocation(line: 546, column: 4, scope: !21432)
!21437 = !DILocation(line: 547, column: 2, scope: !21429)
!21438 = !DILocation(line: 549, column: 13, scope: !21334)
!21439 = !DILocation(line: 549, column: 24, scope: !21334)
!21440 = !DILocation(line: 549, column: 35, scope: !21334)
!21441 = !DILocation(line: 549, column: 2, scope: !21334)
!21442 = !DILocation(line: 550, column: 13, scope: !21334)
!21443 = !DILocation(line: 550, column: 20, scope: !21334)
!21444 = !DILocation(line: 550, column: 33, scope: !21334)
!21445 = !DILocation(line: 550, column: 40, scope: !21334)
!21446 = !DILocation(line: 550, column: 53, scope: !21334)
!21447 = !DILocation(line: 550, column: 2, scope: !21334)
!21448 = !DILocation(line: 552, column: 1, scope: !21334)
!21449 = distinct !DISubprogram(name: "macb_mac_pcs_get_state", scope: !3, file: !3, line: 554, type: !10436, scopeLine: 556, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!21450 = !DILocalVariable(name: "config", arg: 1, scope: !21449, file: !3, line: 554, type: !10438)
!21451 = !DILocation(line: 554, column: 59, scope: !21449)
!21452 = !DILocalVariable(name: "state", arg: 2, scope: !21449, file: !3, line: 555, type: !10439)
!21453 = !DILocation(line: 555, column: 35, scope: !21449)
!21454 = !DILocation(line: 557, column: 2, scope: !21449)
!21455 = !DILocation(line: 557, column: 9, scope: !21449)
!21456 = !DILocation(line: 557, column: 14, scope: !21449)
!21457 = !DILocation(line: 558, column: 1, scope: !21449)
!21458 = distinct !DISubprogram(name: "macb_mac_config", scope: !3, file: !3, line: 565, type: !10886, scopeLine: 567, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!21459 = !DILocation(line: 407, column: 64, scope: !13125, inlinedAt: !21460)
!21460 = distinct !DILocation(line: 591, column: 2, scope: !21458)
!21461 = !DILocation(line: 407, column: 84, scope: !13125, inlinedAt: !21460)
!21462 = !DILocation(line: 327, column: 67, scope: !11066, inlinedAt: !21463)
!21463 = distinct !DILocation(line: 573, column: 2, scope: !21464)
!21464 = distinct !DILexicalBlock(scope: !21465, file: !3, line: 573, column: 2)
!21465 = distinct !DILexicalBlock(scope: !21466, file: !3, line: 573, column: 2)
!21466 = distinct !DILexicalBlock(scope: !21467, file: !3, line: 573, column: 2)
!21467 = distinct !DILexicalBlock(scope: !21468, file: !3, line: 573, column: 2)
!21468 = distinct !DILexicalBlock(scope: !21458, file: !3, line: 573, column: 2)
!21469 = !DILocalVariable(name: "config", arg: 1, scope: !21458, file: !3, line: 565, type: !10438)
!21470 = !DILocation(line: 565, column: 52, scope: !21458)
!21471 = !DILocalVariable(name: "mode", arg: 2, scope: !21458, file: !3, line: 565, type: !7)
!21472 = !DILocation(line: 565, column: 73, scope: !21458)
!21473 = !DILocalVariable(name: "state", arg: 3, scope: !21458, file: !3, line: 566, type: !10888)
!21474 = !DILocation(line: 566, column: 41, scope: !21458)
!21475 = !DILocalVariable(name: "ndev", scope: !21458, file: !3, line: 568, type: !295)
!21476 = !DILocation(line: 568, column: 21, scope: !21458)
!21477 = !DILocalVariable(name: "__mptr", scope: !21478, file: !3, line: 568, type: !570)
!21478 = distinct !DILexicalBlock(scope: !21458, file: !3, line: 568, column: 28)
!21479 = !DILocation(line: 568, column: 28, scope: !21478)
!21480 = !DILocation(line: 568, column: 28, scope: !21481)
!21481 = distinct !DILexicalBlock(scope: !21478, file: !3, line: 568, column: 28)
!21482 = !DILocalVariable(name: "bp", scope: !21458, file: !3, line: 569, type: !10238)
!21483 = !DILocation(line: 569, column: 15, scope: !21458)
!21484 = !DILocation(line: 569, column: 32, scope: !21458)
!21485 = !DILocation(line: 569, column: 20, scope: !21458)
!21486 = !DILocalVariable(name: "flags", scope: !21458, file: !3, line: 570, type: !317)
!21487 = !DILocation(line: 570, column: 16, scope: !21458)
!21488 = !DILocalVariable(name: "old_ctrl", scope: !21458, file: !3, line: 571, type: !707)
!21489 = !DILocation(line: 571, column: 6, scope: !21458)
!21490 = !DILocalVariable(name: "ctrl", scope: !21458, file: !3, line: 571, type: !707)
!21491 = !DILocation(line: 571, column: 16, scope: !21458)
!21492 = !DILocation(line: 573, column: 2, scope: !21458)
!21493 = !DILocation(line: 573, column: 2, scope: !21468)
!21494 = !DILocalVariable(name: "__dummy", scope: !21495, file: !3, line: 573, type: !317)
!21495 = distinct !DILexicalBlock(scope: !21467, file: !3, line: 573, column: 2)
!21496 = !DILocation(line: 573, column: 2, scope: !21495)
!21497 = !DILocalVariable(name: "__dummy2", scope: !21495, file: !3, line: 573, type: !317)
!21498 = !DILocation(line: 573, column: 2, scope: !21467)
!21499 = !DILocation(line: 573, column: 2, scope: !21466)
!21500 = !DILocation(line: 573, column: 2, scope: !21501)
!21501 = distinct !DILexicalBlock(scope: !21466, file: !3, line: 573, column: 2)
!21502 = !DILocalVariable(name: "__dummy", scope: !21503, file: !3, line: 573, type: !317)
!21503 = distinct !DILexicalBlock(scope: !21504, file: !3, line: 573, column: 2)
!21504 = distinct !DILexicalBlock(scope: !21501, file: !3, line: 573, column: 2)
!21505 = !DILocation(line: 573, column: 2, scope: !21503)
!21506 = !DILocalVariable(name: "__dummy2", scope: !21503, file: !3, line: 573, type: !317)
!21507 = !DILocation(line: 573, column: 2, scope: !21504)
!21508 = !DILocation(line: 573, column: 2, scope: !21465)
!21509 = !{i32 -2137666034}
!21510 = !DILocation(line: 573, column: 2, scope: !21464)
!21511 = !DILocation(line: 329, column: 10, scope: !11066, inlinedAt: !21463)
!21512 = !DILocation(line: 329, column: 16, scope: !11066, inlinedAt: !21463)
!21513 = !DILocalVariable(name: "__v", scope: !21514, file: !3, line: 575, type: !707)
!21514 = distinct !DILexicalBlock(scope: !21458, file: !3, line: 575, column: 20)
!21515 = !DILocation(line: 575, column: 20, scope: !21514)
!21516 = !DILocation(line: 575, column: 20, scope: !21517)
!21517 = distinct !DILexicalBlock(scope: !21514, file: !3, line: 575, column: 20)
!21518 = !DILocation(line: 575, column: 18, scope: !21458)
!21519 = !DILocation(line: 575, column: 11, scope: !21458)
!21520 = !DILocation(line: 577, column: 6, scope: !21521)
!21521 = distinct !DILexicalBlock(scope: !21458, file: !3, line: 577, column: 6)
!21522 = !DILocation(line: 577, column: 10, scope: !21521)
!21523 = !DILocation(line: 577, column: 15, scope: !21521)
!21524 = !DILocation(line: 577, column: 6, scope: !21458)
!21525 = !DILocation(line: 578, column: 7, scope: !21526)
!21526 = distinct !DILexicalBlock(scope: !21527, file: !3, line: 578, column: 7)
!21527 = distinct !DILexicalBlock(scope: !21521, file: !3, line: 577, column: 41)
!21528 = !DILocation(line: 578, column: 14, scope: !21526)
!21529 = !DILocation(line: 578, column: 24, scope: !21526)
!21530 = !DILocation(line: 578, column: 7, scope: !21527)
!21531 = !DILocation(line: 579, column: 9, scope: !21526)
!21532 = !DILocation(line: 579, column: 4, scope: !21526)
!21533 = !DILocation(line: 580, column: 2, scope: !21527)
!21534 = !DILocation(line: 580, column: 25, scope: !21535)
!21535 = distinct !DILexicalBlock(scope: !21521, file: !3, line: 580, column: 13)
!21536 = !DILocation(line: 580, column: 13, scope: !21535)
!21537 = !DILocation(line: 580, column: 13, scope: !21521)
!21538 = !DILocation(line: 581, column: 8, scope: !21539)
!21539 = distinct !DILexicalBlock(scope: !21535, file: !3, line: 580, column: 30)
!21540 = !DILocation(line: 583, column: 7, scope: !21541)
!21541 = distinct !DILexicalBlock(scope: !21539, file: !3, line: 583, column: 7)
!21542 = !DILocation(line: 583, column: 14, scope: !21541)
!21543 = !DILocation(line: 583, column: 24, scope: !21541)
!21544 = !DILocation(line: 583, column: 7, scope: !21539)
!21545 = !DILocation(line: 584, column: 9, scope: !21541)
!21546 = !DILocation(line: 584, column: 4, scope: !21541)
!21547 = !DILocation(line: 585, column: 2, scope: !21539)
!21548 = !DILocation(line: 588, column: 6, scope: !21549)
!21549 = distinct !DILexicalBlock(scope: !21458, file: !3, line: 588, column: 6)
!21550 = !DILocation(line: 588, column: 17, scope: !21549)
!21551 = !DILocation(line: 588, column: 15, scope: !21549)
!21552 = !DILocation(line: 588, column: 6, scope: !21458)
!21553 = !DILocation(line: 589, column: 3, scope: !21554)
!21554 = distinct !DILexicalBlock(scope: !21555, file: !3, line: 589, column: 3)
!21555 = distinct !DILexicalBlock(scope: !21549, file: !3, line: 589, column: 3)
!21556 = !DILocation(line: 589, column: 3, scope: !21555)
!21557 = !DILocation(line: 589, column: 3, scope: !21549)
!21558 = !DILocation(line: 591, column: 26, scope: !21458)
!21559 = !DILocation(line: 591, column: 30, scope: !21458)
!21560 = !DILocation(line: 591, column: 36, scope: !21458)
!21561 = !DILocation(line: 409, column: 2, scope: !13335, inlinedAt: !21460)
!21562 = !DILocation(line: 409, column: 2, scope: !13340, inlinedAt: !21460)
!21563 = !DILocation(line: 409, column: 2, scope: !13341, inlinedAt: !21460)
!21564 = !DILocation(line: 409, column: 2, scope: !13348, inlinedAt: !21460)
!21565 = !DILocation(line: 409, column: 2, scope: !13351, inlinedAt: !21460)
!21566 = !DILocation(line: 592, column: 1, scope: !21458)
!21567 = distinct !DISubprogram(name: "macb_mac_an_restart", scope: !3, file: !3, line: 560, type: !10893, scopeLine: 561, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!21568 = !DILocalVariable(name: "config", arg: 1, scope: !21567, file: !3, line: 560, type: !10438)
!21569 = !DILocation(line: 560, column: 56, scope: !21567)
!21570 = !DILocation(line: 563, column: 1, scope: !21567)
!21571 = distinct !DISubprogram(name: "macb_mac_link_down", scope: !3, file: !3, line: 594, type: !10897, scopeLine: 596, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!21572 = !DILocalVariable(name: "config", arg: 1, scope: !21571, file: !3, line: 594, type: !10438)
!21573 = !DILocation(line: 594, column: 55, scope: !21571)
!21574 = !DILocalVariable(name: "mode", arg: 2, scope: !21571, file: !3, line: 594, type: !7)
!21575 = !DILocation(line: 594, column: 76, scope: !21571)
!21576 = !DILocalVariable(name: "interface", arg: 3, scope: !21571, file: !3, line: 595, type: !9706)
!21577 = !DILocation(line: 595, column: 27, scope: !21571)
!21578 = !DILocalVariable(name: "ndev", scope: !21571, file: !3, line: 597, type: !295)
!21579 = !DILocation(line: 597, column: 21, scope: !21571)
!21580 = !DILocalVariable(name: "__mptr", scope: !21581, file: !3, line: 597, type: !570)
!21581 = distinct !DILexicalBlock(scope: !21571, file: !3, line: 597, column: 28)
!21582 = !DILocation(line: 597, column: 28, scope: !21581)
!21583 = !DILocation(line: 597, column: 28, scope: !21584)
!21584 = distinct !DILexicalBlock(scope: !21581, file: !3, line: 597, column: 28)
!21585 = !DILocalVariable(name: "bp", scope: !21571, file: !3, line: 598, type: !10238)
!21586 = !DILocation(line: 598, column: 15, scope: !21571)
!21587 = !DILocation(line: 598, column: 32, scope: !21571)
!21588 = !DILocation(line: 598, column: 20, scope: !21571)
!21589 = !DILocalVariable(name: "queue", scope: !21571, file: !3, line: 599, type: !10234)
!21590 = !DILocation(line: 599, column: 21, scope: !21571)
!21591 = !DILocalVariable(name: "q", scope: !21571, file: !3, line: 600, type: !7)
!21592 = !DILocation(line: 600, column: 15, scope: !21571)
!21593 = !DILocalVariable(name: "ctrl", scope: !21571, file: !3, line: 601, type: !707)
!21594 = !DILocation(line: 601, column: 6, scope: !21571)
!21595 = !DILocation(line: 603, column: 8, scope: !21596)
!21596 = distinct !DILexicalBlock(scope: !21571, file: !3, line: 603, column: 6)
!21597 = !DILocation(line: 603, column: 12, scope: !21596)
!21598 = !DILocation(line: 603, column: 17, scope: !21596)
!21599 = !DILocation(line: 603, column: 6, scope: !21571)
!21600 = !DILocation(line: 604, column: 10, scope: !21601)
!21601 = distinct !DILexicalBlock(scope: !21596, file: !3, line: 604, column: 3)
!21602 = !DILocation(line: 604, column: 23, scope: !21601)
!21603 = !DILocation(line: 604, column: 27, scope: !21601)
!21604 = !DILocation(line: 604, column: 21, scope: !21601)
!21605 = !DILocation(line: 604, column: 8, scope: !21601)
!21606 = !DILocation(line: 604, column: 35, scope: !21607)
!21607 = distinct !DILexicalBlock(scope: !21601, file: !3, line: 604, column: 3)
!21608 = !DILocation(line: 604, column: 39, scope: !21607)
!21609 = !DILocation(line: 604, column: 43, scope: !21607)
!21610 = !DILocation(line: 604, column: 37, scope: !21607)
!21611 = !DILocation(line: 604, column: 3, scope: !21601)
!21612 = !DILocation(line: 605, column: 4, scope: !21607)
!21613 = !DILocation(line: 604, column: 55, scope: !21607)
!21614 = !DILocation(line: 604, column: 60, scope: !21607)
!21615 = !DILocation(line: 604, column: 3, scope: !21607)
!21616 = distinct !{!21616, !21611, !21617}
!21617 = !DILocation(line: 605, column: 4, scope: !21601)
!21618 = !DILocation(line: 609, column: 9, scope: !21571)
!21619 = !DILocation(line: 609, column: 29, scope: !21571)
!21620 = !DILocation(line: 609, column: 7, scope: !21571)
!21621 = !DILocation(line: 610, column: 2, scope: !21571)
!21622 = !DILocation(line: 612, column: 27, scope: !21571)
!21623 = !DILocation(line: 612, column: 2, scope: !21571)
!21624 = !DILocation(line: 613, column: 1, scope: !21571)
!21625 = distinct !DISubprogram(name: "macb_mac_link_up", scope: !3, file: !3, line: 615, type: !10901, scopeLine: 620, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!21626 = !DILocation(line: 407, column: 64, scope: !13125, inlinedAt: !21627)
!21627 = distinct !DILocation(line: 667, column: 2, scope: !21625)
!21628 = !DILocation(line: 407, column: 84, scope: !13125, inlinedAt: !21627)
!21629 = !DILocation(line: 327, column: 67, scope: !11066, inlinedAt: !21630)
!21630 = distinct !DILocation(line: 628, column: 2, scope: !21631)
!21631 = distinct !DILexicalBlock(scope: !21632, file: !3, line: 628, column: 2)
!21632 = distinct !DILexicalBlock(scope: !21633, file: !3, line: 628, column: 2)
!21633 = distinct !DILexicalBlock(scope: !21634, file: !3, line: 628, column: 2)
!21634 = distinct !DILexicalBlock(scope: !21635, file: !3, line: 628, column: 2)
!21635 = distinct !DILexicalBlock(scope: !21625, file: !3, line: 628, column: 2)
!21636 = !DILocalVariable(name: "config", arg: 1, scope: !21625, file: !3, line: 615, type: !10438)
!21637 = !DILocation(line: 615, column: 53, scope: !21625)
!21638 = !DILocalVariable(name: "phy", arg: 2, scope: !21625, file: !3, line: 616, type: !9463)
!21639 = !DILocation(line: 616, column: 28, scope: !21625)
!21640 = !DILocalVariable(name: "mode", arg: 3, scope: !21625, file: !3, line: 617, type: !7)
!21641 = !DILocation(line: 617, column: 22, scope: !21625)
!21642 = !DILocalVariable(name: "interface", arg: 4, scope: !21625, file: !3, line: 617, type: !9706)
!21643 = !DILocation(line: 617, column: 44, scope: !21625)
!21644 = !DILocalVariable(name: "speed", arg: 5, scope: !21625, file: !3, line: 618, type: !37)
!21645 = !DILocation(line: 618, column: 13, scope: !21625)
!21646 = !DILocalVariable(name: "duplex", arg: 6, scope: !21625, file: !3, line: 618, type: !37)
!21647 = !DILocation(line: 618, column: 24, scope: !21625)
!21648 = !DILocalVariable(name: "tx_pause", arg: 7, scope: !21625, file: !3, line: 619, type: !540)
!21649 = !DILocation(line: 619, column: 14, scope: !21625)
!21650 = !DILocalVariable(name: "rx_pause", arg: 8, scope: !21625, file: !3, line: 619, type: !540)
!21651 = !DILocation(line: 619, column: 29, scope: !21625)
!21652 = !DILocalVariable(name: "ndev", scope: !21625, file: !3, line: 621, type: !295)
!21653 = !DILocation(line: 621, column: 21, scope: !21625)
!21654 = !DILocalVariable(name: "__mptr", scope: !21655, file: !3, line: 621, type: !570)
!21655 = distinct !DILexicalBlock(scope: !21625, file: !3, line: 621, column: 28)
!21656 = !DILocation(line: 621, column: 28, scope: !21655)
!21657 = !DILocation(line: 621, column: 28, scope: !21658)
!21658 = distinct !DILexicalBlock(scope: !21655, file: !3, line: 621, column: 28)
!21659 = !DILocalVariable(name: "bp", scope: !21625, file: !3, line: 622, type: !10238)
!21660 = !DILocation(line: 622, column: 15, scope: !21625)
!21661 = !DILocation(line: 622, column: 32, scope: !21625)
!21662 = !DILocation(line: 622, column: 20, scope: !21625)
!21663 = !DILocalVariable(name: "queue", scope: !21625, file: !3, line: 623, type: !10234)
!21664 = !DILocation(line: 623, column: 21, scope: !21625)
!21665 = !DILocalVariable(name: "flags", scope: !21625, file: !3, line: 624, type: !317)
!21666 = !DILocation(line: 624, column: 16, scope: !21625)
!21667 = !DILocalVariable(name: "q", scope: !21625, file: !3, line: 625, type: !7)
!21668 = !DILocation(line: 625, column: 15, scope: !21625)
!21669 = !DILocalVariable(name: "ctrl", scope: !21625, file: !3, line: 626, type: !707)
!21670 = !DILocation(line: 626, column: 6, scope: !21625)
!21671 = !DILocation(line: 628, column: 2, scope: !21625)
!21672 = !DILocation(line: 628, column: 2, scope: !21635)
!21673 = !DILocalVariable(name: "__dummy", scope: !21674, file: !3, line: 628, type: !317)
!21674 = distinct !DILexicalBlock(scope: !21634, file: !3, line: 628, column: 2)
!21675 = !DILocation(line: 628, column: 2, scope: !21674)
!21676 = !DILocalVariable(name: "__dummy2", scope: !21674, file: !3, line: 628, type: !317)
!21677 = !DILocation(line: 628, column: 2, scope: !21634)
!21678 = !DILocation(line: 628, column: 2, scope: !21633)
!21679 = !DILocation(line: 628, column: 2, scope: !21680)
!21680 = distinct !DILexicalBlock(scope: !21633, file: !3, line: 628, column: 2)
!21681 = !DILocalVariable(name: "__dummy", scope: !21682, file: !3, line: 628, type: !317)
!21682 = distinct !DILexicalBlock(scope: !21683, file: !3, line: 628, column: 2)
!21683 = distinct !DILexicalBlock(scope: !21680, file: !3, line: 628, column: 2)
!21684 = !DILocation(line: 628, column: 2, scope: !21682)
!21685 = !DILocalVariable(name: "__dummy2", scope: !21682, file: !3, line: 628, type: !317)
!21686 = !DILocation(line: 628, column: 2, scope: !21683)
!21687 = !DILocation(line: 628, column: 2, scope: !21632)
!21688 = !{i32 -2137659992}
!21689 = !DILocation(line: 628, column: 2, scope: !21631)
!21690 = !DILocation(line: 329, column: 10, scope: !11066, inlinedAt: !21630)
!21691 = !DILocation(line: 329, column: 16, scope: !11066, inlinedAt: !21630)
!21692 = !DILocalVariable(name: "__v", scope: !21693, file: !3, line: 630, type: !707)
!21693 = distinct !DILexicalBlock(scope: !21625, file: !3, line: 630, column: 9)
!21694 = !DILocation(line: 630, column: 9, scope: !21693)
!21695 = !DILocation(line: 630, column: 9, scope: !21696)
!21696 = distinct !DILexicalBlock(scope: !21693, file: !3, line: 630, column: 9)
!21697 = !DILocation(line: 630, column: 7, scope: !21625)
!21698 = !DILocation(line: 632, column: 7, scope: !21625)
!21699 = !DILocation(line: 634, column: 6, scope: !21700)
!21700 = distinct !DILexicalBlock(scope: !21625, file: !3, line: 634, column: 6)
!21701 = !DILocation(line: 634, column: 12, scope: !21700)
!21702 = !DILocation(line: 634, column: 6, scope: !21625)
!21703 = !DILocation(line: 635, column: 8, scope: !21700)
!21704 = !DILocation(line: 635, column: 3, scope: !21700)
!21705 = !DILocation(line: 637, column: 6, scope: !21706)
!21706 = distinct !DILexicalBlock(scope: !21625, file: !3, line: 637, column: 6)
!21707 = !DILocation(line: 637, column: 6, scope: !21625)
!21708 = !DILocation(line: 638, column: 8, scope: !21706)
!21709 = !DILocation(line: 638, column: 3, scope: !21706)
!21710 = !DILocation(line: 640, column: 8, scope: !21711)
!21711 = distinct !DILexicalBlock(scope: !21625, file: !3, line: 640, column: 6)
!21712 = !DILocation(line: 640, column: 12, scope: !21711)
!21713 = !DILocation(line: 640, column: 17, scope: !21711)
!21714 = !DILocation(line: 640, column: 6, scope: !21625)
!21715 = !DILocation(line: 641, column: 8, scope: !21716)
!21716 = distinct !DILexicalBlock(scope: !21711, file: !3, line: 640, column: 44)
!21717 = !DILocation(line: 642, column: 19, scope: !21718)
!21718 = distinct !DILexicalBlock(scope: !21716, file: !3, line: 642, column: 7)
!21719 = !DILocation(line: 642, column: 7, scope: !21718)
!21720 = !DILocation(line: 642, column: 7, scope: !21716)
!21721 = !DILocation(line: 643, column: 9, scope: !21722)
!21722 = distinct !DILexicalBlock(scope: !21718, file: !3, line: 642, column: 24)
!21723 = !DILocation(line: 645, column: 8, scope: !21724)
!21724 = distinct !DILexicalBlock(scope: !21722, file: !3, line: 645, column: 8)
!21725 = !DILocation(line: 645, column: 14, scope: !21724)
!21726 = !DILocation(line: 645, column: 8, scope: !21722)
!21727 = !DILocation(line: 646, column: 10, scope: !21724)
!21728 = !DILocation(line: 646, column: 5, scope: !21724)
!21729 = !DILocation(line: 647, column: 3, scope: !21722)
!21730 = !DILocation(line: 649, column: 7, scope: !21731)
!21731 = distinct !DILexicalBlock(scope: !21716, file: !3, line: 649, column: 7)
!21732 = !DILocation(line: 649, column: 7, scope: !21716)
!21733 = !DILocation(line: 650, column: 9, scope: !21731)
!21734 = !DILocation(line: 650, column: 4, scope: !21731)
!21735 = !DILocation(line: 652, column: 19, scope: !21716)
!21736 = !DILocation(line: 652, column: 23, scope: !21716)
!21737 = !DILocation(line: 652, column: 31, scope: !21716)
!21738 = !DILocation(line: 652, column: 38, scope: !21716)
!21739 = !DILocation(line: 652, column: 3, scope: !21716)
!21740 = !DILocation(line: 657, column: 3, scope: !21716)
!21741 = !DILocation(line: 657, column: 7, scope: !21716)
!21742 = !DILocation(line: 657, column: 19, scope: !21716)
!21743 = !DILocation(line: 657, column: 34, scope: !21716)
!21744 = !DILocation(line: 658, column: 21, scope: !21716)
!21745 = !DILocation(line: 658, column: 3, scope: !21716)
!21746 = !DILocation(line: 660, column: 10, scope: !21747)
!21747 = distinct !DILexicalBlock(scope: !21716, file: !3, line: 660, column: 3)
!21748 = !DILocation(line: 660, column: 23, scope: !21747)
!21749 = !DILocation(line: 660, column: 27, scope: !21747)
!21750 = !DILocation(line: 660, column: 21, scope: !21747)
!21751 = !DILocation(line: 660, column: 8, scope: !21747)
!21752 = !DILocation(line: 660, column: 35, scope: !21753)
!21753 = distinct !DILexicalBlock(scope: !21747, file: !3, line: 660, column: 3)
!21754 = !DILocation(line: 660, column: 39, scope: !21753)
!21755 = !DILocation(line: 660, column: 43, scope: !21753)
!21756 = !DILocation(line: 660, column: 37, scope: !21753)
!21757 = !DILocation(line: 660, column: 3, scope: !21747)
!21758 = !DILocation(line: 661, column: 4, scope: !21753)
!21759 = !DILocation(line: 660, column: 55, scope: !21753)
!21760 = !DILocation(line: 660, column: 60, scope: !21753)
!21761 = !DILocation(line: 660, column: 3, scope: !21753)
!21762 = distinct !{!21762, !21757, !21763}
!21763 = !DILocation(line: 661, column: 4, scope: !21747)
!21764 = !DILocation(line: 663, column: 2, scope: !21716)
!21765 = !DILocation(line: 665, column: 2, scope: !21766)
!21766 = distinct !DILexicalBlock(scope: !21767, file: !3, line: 665, column: 2)
!21767 = distinct !DILexicalBlock(scope: !21625, file: !3, line: 665, column: 2)
!21768 = !DILocation(line: 665, column: 2, scope: !21767)
!21769 = !DILocation(line: 667, column: 26, scope: !21625)
!21770 = !DILocation(line: 667, column: 30, scope: !21625)
!21771 = !DILocation(line: 667, column: 36, scope: !21625)
!21772 = !DILocation(line: 409, column: 2, scope: !13335, inlinedAt: !21627)
!21773 = !DILocation(line: 409, column: 2, scope: !13340, inlinedAt: !21627)
!21774 = !DILocation(line: 409, column: 2, scope: !13341, inlinedAt: !21627)
!21775 = !DILocation(line: 409, column: 2, scope: !13348, inlinedAt: !21627)
!21776 = !DILocation(line: 409, column: 2, scope: !13351, inlinedAt: !21627)
!21777 = !DILocation(line: 670, column: 2, scope: !21625)
!21778 = !DILocation(line: 672, column: 27, scope: !21625)
!21779 = !DILocation(line: 672, column: 2, scope: !21625)
!21780 = !DILocation(line: 673, column: 1, scope: !21625)
!21781 = distinct !DISubprogram(name: "bitmap_zero", scope: !21782, file: !21782, line: 235, type: !21783, scopeLine: 236, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!21782 = !DIFile(filename: "./include/linux/bitmap.h", directory: "/home/lizy2001/genbc/linux")
!21783 = !DISubroutineType(types: !21784)
!21784 = !{null, !2427, !7}
!21785 = !DILocalVariable(name: "dst", arg: 1, scope: !21781, file: !21782, line: 235, type: !2427)
!21786 = !DILocation(line: 235, column: 47, scope: !21781)
!21787 = !DILocalVariable(name: "nbits", arg: 2, scope: !21781, file: !21782, line: 235, type: !7)
!21788 = !DILocation(line: 235, column: 65, scope: !21781)
!21789 = !DILocalVariable(name: "len", scope: !21781, file: !21782, line: 237, type: !7)
!21790 = !DILocation(line: 237, column: 15, scope: !21781)
!21791 = !DILocation(line: 237, column: 21, scope: !21781)
!21792 = !DILocation(line: 237, column: 42, scope: !21781)
!21793 = !DILocation(line: 238, column: 9, scope: !21781)
!21794 = !DILocation(line: 238, column: 2, scope: !21781)
!21795 = !DILocation(line: 238, column: 17, scope: !21781)
!21796 = !DILocation(line: 239, column: 1, scope: !21781)
!21797 = distinct !DISubprogram(name: "__set_bit", scope: !14336, file: !14336, line: 25, type: !14859, scopeLine: 26, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!21798 = !DILocalVariable(name: "nr", arg: 1, scope: !21799, file: !14344, line: 66, type: !513)
!21799 = distinct !DISubprogram(name: "arch___set_bit", scope: !14344, file: !14344, line: 66, type: !14859, scopeLine: 67, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!21800 = !DILocation(line: 66, column: 21, scope: !21799, inlinedAt: !21801)
!21801 = distinct !DILocation(line: 28, column: 2, scope: !21797)
!21802 = !DILocalVariable(name: "addr", arg: 2, scope: !21799, file: !14344, line: 66, type: !14635)
!21803 = !DILocation(line: 66, column: 49, scope: !21799, inlinedAt: !21801)
!21804 = !DILocalVariable(name: "v", arg: 1, scope: !21805, file: !11630, line: 39, type: !11633)
!21805 = distinct !DISubprogram(name: "instrument_write", scope: !11630, file: !11630, line: 39, type: !11631, scopeLine: 40, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!21806 = !DILocation(line: 39, column: 67, scope: !21805, inlinedAt: !21807)
!21807 = distinct !DILocation(line: 27, column: 2, scope: !21797)
!21808 = !DILocalVariable(name: "size", arg: 2, scope: !21805, file: !11630, line: 39, type: !594)
!21809 = !DILocation(line: 39, column: 77, scope: !21805, inlinedAt: !21807)
!21810 = !DILocalVariable(name: "nr", arg: 1, scope: !21797, file: !14336, line: 25, type: !513)
!21811 = !DILocation(line: 25, column: 35, scope: !21797)
!21812 = !DILocalVariable(name: "addr", arg: 2, scope: !21797, file: !14336, line: 25, type: !14635)
!21813 = !DILocation(line: 25, column: 63, scope: !21797)
!21814 = !DILocation(line: 27, column: 19, scope: !21797)
!21815 = !DILocation(line: 27, column: 26, scope: !21797)
!21816 = !DILocation(line: 27, column: 24, scope: !21797)
!21817 = !DILocation(line: 41, column: 20, scope: !21805, inlinedAt: !21807)
!21818 = !DILocation(line: 41, column: 23, scope: !21805, inlinedAt: !21807)
!21819 = !DILocation(line: 41, column: 2, scope: !21805, inlinedAt: !21807)
!21820 = !DILocation(line: 42, column: 2, scope: !21805, inlinedAt: !21807)
!21821 = !DILocation(line: 28, column: 17, scope: !21797)
!21822 = !DILocation(line: 28, column: 21, scope: !21797)
!21823 = !DILocation(line: 68, column: 44, scope: !21799, inlinedAt: !21801)
!21824 = !DILocation(line: 68, column: 56, scope: !21799, inlinedAt: !21801)
!21825 = !DILocation(line: 68, column: 2, scope: !21799, inlinedAt: !21801)
!21826 = !{i32 -2147046068}
!21827 = !DILocation(line: 29, column: 1, scope: !21797)
!21828 = distinct !DISubprogram(name: "bitmap_and", scope: !21782, file: !21782, line: 283, type: !21829, scopeLine: 285, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!21829 = !DISubroutineType(types: !21830)
!21830 = !{!37, !2427, !9574, !9574, !7}
!21831 = !DILocalVariable(name: "dst", arg: 1, scope: !21828, file: !21782, line: 283, type: !2427)
!21832 = !DILocation(line: 283, column: 45, scope: !21828)
!21833 = !DILocalVariable(name: "src1", arg: 2, scope: !21828, file: !21782, line: 283, type: !9574)
!21834 = !DILocation(line: 283, column: 71, scope: !21828)
!21835 = !DILocalVariable(name: "src2", arg: 3, scope: !21828, file: !21782, line: 284, type: !9574)
!21836 = !DILocation(line: 284, column: 25, scope: !21828)
!21837 = !DILocalVariable(name: "nbits", arg: 4, scope: !21828, file: !21782, line: 284, type: !7)
!21838 = !DILocation(line: 284, column: 44, scope: !21828)
!21839 = !DILocation(line: 286, column: 6, scope: !21840)
!21840 = distinct !DILexicalBlock(scope: !21828, file: !21782, line: 286, column: 6)
!21841 = !DILocation(line: 286, column: 6, scope: !21828)
!21842 = !DILocation(line: 287, column: 19, scope: !21840)
!21843 = !DILocation(line: 287, column: 18, scope: !21840)
!21844 = !DILocation(line: 287, column: 27, scope: !21840)
!21845 = !DILocation(line: 287, column: 26, scope: !21840)
!21846 = !DILocation(line: 287, column: 24, scope: !21840)
!21847 = !DILocation(line: 287, column: 34, scope: !21840)
!21848 = !DILocation(line: 287, column: 32, scope: !21840)
!21849 = !DILocation(line: 287, column: 12, scope: !21840)
!21850 = !DILocation(line: 287, column: 16, scope: !21840)
!21851 = !DILocation(line: 287, column: 64, scope: !21840)
!21852 = !DILocation(line: 287, column: 3, scope: !21840)
!21853 = !DILocation(line: 288, column: 22, scope: !21828)
!21854 = !DILocation(line: 288, column: 27, scope: !21828)
!21855 = !DILocation(line: 288, column: 33, scope: !21828)
!21856 = !DILocation(line: 288, column: 39, scope: !21828)
!21857 = !DILocation(line: 288, column: 9, scope: !21828)
!21858 = !DILocation(line: 288, column: 2, scope: !21828)
!21859 = !DILocation(line: 289, column: 1, scope: !21828)
!21860 = distinct !DISubprogram(name: "macb_set_tx_clk", scope: !3, file: !3, line: 464, type: !21861, scopeLine: 465, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!21861 = !DISubroutineType(types: !21862)
!21862 = !{null, !10300, !37, !295}
!21863 = !DILocalVariable(name: "clk", arg: 1, scope: !21860, file: !3, line: 464, type: !10300)
!21864 = !DILocation(line: 464, column: 41, scope: !21860)
!21865 = !DILocalVariable(name: "speed", arg: 2, scope: !21860, file: !3, line: 464, type: !37)
!21866 = !DILocation(line: 464, column: 50, scope: !21860)
!21867 = !DILocalVariable(name: "dev", arg: 3, scope: !21860, file: !3, line: 464, type: !295)
!21868 = !DILocation(line: 464, column: 76, scope: !21860)
!21869 = !DILocalVariable(name: "ferr", scope: !21860, file: !3, line: 466, type: !513)
!21870 = !DILocation(line: 466, column: 7, scope: !21860)
!21871 = !DILocalVariable(name: "rate", scope: !21860, file: !3, line: 466, type: !513)
!21872 = !DILocation(line: 466, column: 13, scope: !21860)
!21873 = !DILocalVariable(name: "rate_rounded", scope: !21860, file: !3, line: 466, type: !513)
!21874 = !DILocation(line: 466, column: 19, scope: !21860)
!21875 = !DILocation(line: 468, column: 7, scope: !21876)
!21876 = distinct !DILexicalBlock(scope: !21860, file: !3, line: 468, column: 6)
!21877 = !DILocation(line: 468, column: 6, scope: !21860)
!21878 = !DILocation(line: 469, column: 3, scope: !21876)
!21879 = !DILocation(line: 471, column: 10, scope: !21860)
!21880 = !DILocation(line: 471, column: 2, scope: !21860)
!21881 = !DILocation(line: 473, column: 8, scope: !21882)
!21882 = distinct !DILexicalBlock(scope: !21860, file: !3, line: 471, column: 17)
!21883 = !DILocation(line: 474, column: 3, scope: !21882)
!21884 = !DILocation(line: 476, column: 8, scope: !21882)
!21885 = !DILocation(line: 477, column: 3, scope: !21882)
!21886 = !DILocation(line: 479, column: 8, scope: !21882)
!21887 = !DILocation(line: 480, column: 3, scope: !21882)
!21888 = !DILocation(line: 482, column: 3, scope: !21882)
!21889 = !DILocation(line: 485, column: 32, scope: !21860)
!21890 = !DILocation(line: 485, column: 37, scope: !21860)
!21891 = !DILocation(line: 485, column: 17, scope: !21860)
!21892 = !DILocation(line: 485, column: 15, scope: !21860)
!21893 = !DILocation(line: 486, column: 6, scope: !21894)
!21894 = distinct !DILexicalBlock(scope: !21860, file: !3, line: 486, column: 6)
!21895 = !DILocation(line: 486, column: 19, scope: !21894)
!21896 = !DILocation(line: 486, column: 6, scope: !21860)
!21897 = !DILocation(line: 487, column: 3, scope: !21894)
!21898 = !DILocalVariable(name: "__x", scope: !21899, file: !3, line: 492, type: !513)
!21899 = distinct !DILexicalBlock(scope: !21860, file: !3, line: 492, column: 9)
!21900 = !DILocation(line: 492, column: 9, scope: !21899)
!21901 = !DILocation(line: 492, column: 7, scope: !21860)
!21902 = !DILocation(line: 493, column: 9, scope: !21860)
!21903 = !DILocation(line: 493, column: 7, scope: !21860)
!21904 = !DILocation(line: 494, column: 6, scope: !21905)
!21905 = distinct !DILexicalBlock(scope: !21860, file: !3, line: 494, column: 6)
!21906 = !DILocation(line: 494, column: 11, scope: !21905)
!21907 = !DILocation(line: 494, column: 6, scope: !21860)
!21908 = !DILocation(line: 495, column: 15, scope: !21905)
!21909 = !DILocation(line: 496, column: 8, scope: !21905)
!21910 = !DILocation(line: 495, column: 3, scope: !21905)
!21911 = !DILocation(line: 498, column: 19, scope: !21912)
!21912 = distinct !DILexicalBlock(scope: !21860, file: !3, line: 498, column: 6)
!21913 = !DILocation(line: 498, column: 24, scope: !21912)
!21914 = !DILocation(line: 498, column: 6, scope: !21912)
!21915 = !DILocation(line: 498, column: 6, scope: !21860)
!21916 = !DILocation(line: 499, column: 14, scope: !21912)
!21917 = !DILocation(line: 499, column: 3, scope: !21912)
!21918 = !DILocation(line: 500, column: 1, scope: !21860)
!21919 = distinct !DISubprogram(name: "macb_init_buffers", scope: !3, file: !3, line: 437, type: !10392, scopeLine: 438, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!21920 = !DILocalVariable(name: "bp", arg: 1, scope: !21919, file: !3, line: 437, type: !10238)
!21921 = !DILocation(line: 437, column: 44, scope: !21919)
!21922 = !DILocalVariable(name: "queue", scope: !21919, file: !3, line: 439, type: !10234)
!21923 = !DILocation(line: 439, column: 21, scope: !21919)
!21924 = !DILocalVariable(name: "q", scope: !21919, file: !3, line: 440, type: !7)
!21925 = !DILocation(line: 440, column: 15, scope: !21919)
!21926 = !DILocation(line: 442, column: 9, scope: !21927)
!21927 = distinct !DILexicalBlock(scope: !21919, file: !3, line: 442, column: 2)
!21928 = !DILocation(line: 442, column: 22, scope: !21927)
!21929 = !DILocation(line: 442, column: 26, scope: !21927)
!21930 = !DILocation(line: 442, column: 20, scope: !21927)
!21931 = !DILocation(line: 442, column: 7, scope: !21927)
!21932 = !DILocation(line: 442, column: 34, scope: !21933)
!21933 = distinct !DILexicalBlock(scope: !21927, file: !3, line: 442, column: 2)
!21934 = !DILocation(line: 442, column: 38, scope: !21933)
!21935 = !DILocation(line: 442, column: 42, scope: !21933)
!21936 = !DILocation(line: 442, column: 36, scope: !21933)
!21937 = !DILocation(line: 442, column: 2, scope: !21927)
!21938 = !DILocation(line: 443, column: 3, scope: !21939)
!21939 = distinct !DILexicalBlock(scope: !21933, file: !3, line: 442, column: 68)
!21940 = !DILocation(line: 445, column: 7, scope: !21941)
!21941 = distinct !DILexicalBlock(scope: !21939, file: !3, line: 445, column: 7)
!21942 = !DILocation(line: 445, column: 11, scope: !21941)
!21943 = !DILocation(line: 445, column: 22, scope: !21941)
!21944 = !DILocation(line: 445, column: 7, scope: !21939)
!21945 = !DILocation(line: 446, column: 4, scope: !21941)
!21946 = !DILocation(line: 449, column: 3, scope: !21939)
!21947 = !DILocation(line: 451, column: 7, scope: !21948)
!21948 = distinct !DILexicalBlock(scope: !21939, file: !3, line: 451, column: 7)
!21949 = !DILocation(line: 451, column: 11, scope: !21948)
!21950 = !DILocation(line: 451, column: 22, scope: !21948)
!21951 = !DILocation(line: 451, column: 7, scope: !21939)
!21952 = !DILocation(line: 452, column: 4, scope: !21948)
!21953 = !DILocation(line: 455, column: 2, scope: !21939)
!21954 = !DILocation(line: 442, column: 54, scope: !21933)
!21955 = !DILocation(line: 442, column: 59, scope: !21933)
!21956 = !DILocation(line: 442, column: 2, scope: !21933)
!21957 = distinct !{!21957, !21937, !21958}
!21958 = !DILocation(line: 455, column: 2, scope: !21927)
!21959 = !DILocation(line: 456, column: 1, scope: !21919)
!21960 = distinct !DISubprogram(name: "netif_tx_wake_all_queues", scope: !36, file: !36, line: 3314, type: !411, scopeLine: 3315, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!21961 = !DILocalVariable(name: "dev", arg: 1, scope: !21960, file: !36, line: 3314, type: !295)
!21962 = !DILocation(line: 3314, column: 64, scope: !21960)
!21963 = !DILocalVariable(name: "i", scope: !21960, file: !36, line: 3316, type: !7)
!21964 = !DILocation(line: 3316, column: 15, scope: !21960)
!21965 = !DILocation(line: 3318, column: 9, scope: !21966)
!21966 = distinct !DILexicalBlock(scope: !21960, file: !36, line: 3318, column: 2)
!21967 = !DILocation(line: 3318, column: 7, scope: !21966)
!21968 = !DILocation(line: 3318, column: 14, scope: !21969)
!21969 = distinct !DILexicalBlock(scope: !21966, file: !36, line: 3318, column: 2)
!21970 = !DILocation(line: 3318, column: 18, scope: !21969)
!21971 = !DILocation(line: 3318, column: 23, scope: !21969)
!21972 = !DILocation(line: 3318, column: 16, scope: !21969)
!21973 = !DILocation(line: 3318, column: 2, scope: !21966)
!21974 = !DILocalVariable(name: "txq", scope: !21975, file: !36, line: 3319, type: !8906)
!21975 = distinct !DILexicalBlock(scope: !21969, file: !36, line: 3318, column: 43)
!21976 = !DILocation(line: 3319, column: 24, scope: !21975)
!21977 = !DILocation(line: 3319, column: 50, scope: !21975)
!21978 = !DILocation(line: 3319, column: 55, scope: !21975)
!21979 = !DILocation(line: 3319, column: 30, scope: !21975)
!21980 = !DILocation(line: 3320, column: 23, scope: !21975)
!21981 = !DILocation(line: 3320, column: 3, scope: !21975)
!21982 = !DILocation(line: 3321, column: 2, scope: !21975)
!21983 = !DILocation(line: 3318, column: 39, scope: !21969)
!21984 = !DILocation(line: 3318, column: 2, scope: !21969)
!21985 = distinct !{!21985, !21973, !21986}
!21986 = !DILocation(line: 3321, column: 2, scope: !21966)
!21987 = !DILocation(line: 3322, column: 1, scope: !21960)
!21988 = distinct !DISubprogram(name: "pm_runtime_suspended", scope: !11610, file: !11610, line: 120, type: !21989, scopeLine: 121, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!21989 = !DISubroutineType(types: !21990)
!21990 = !{!540, !4172}
!21991 = !DILocalVariable(name: "dev", arg: 1, scope: !21988, file: !11610, line: 120, type: !4172)
!21992 = !DILocation(line: 120, column: 56, scope: !21988)
!21993 = !DILocation(line: 122, column: 9, scope: !21988)
!21994 = !DILocation(line: 122, column: 14, scope: !21988)
!21995 = !DILocation(line: 122, column: 20, scope: !21988)
!21996 = !DILocation(line: 122, column: 35, scope: !21988)
!21997 = !DILocation(line: 123, column: 3, scope: !21988)
!21998 = !DILocation(line: 123, column: 7, scope: !21988)
!21999 = !DILocation(line: 123, column: 12, scope: !21988)
!22000 = !DILocation(line: 123, column: 18, scope: !21988)
!22001 = !DILocation(line: 123, column: 6, scope: !21988)
!22002 = !DILocation(line: 0, scope: !21988)
!22003 = !DILocation(line: 122, column: 2, scope: !21988)
!22004 = distinct !DISubprogram(name: "at91ether_clk_init", scope: !3, file: !3, line: 4177, type: !10837, scopeLine: 4180, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!22005 = !DILocalVariable(name: "pdev", arg: 1, scope: !22004, file: !3, line: 4177, type: !10260)
!22006 = !DILocation(line: 4177, column: 55, scope: !22004)
!22007 = !DILocalVariable(name: "pclk", arg: 2, scope: !22004, file: !3, line: 4177, type: !10839)
!22008 = !DILocation(line: 4177, column: 74, scope: !22004)
!22009 = !DILocalVariable(name: "hclk", arg: 3, scope: !22004, file: !3, line: 4178, type: !10839)
!22010 = !DILocation(line: 4178, column: 23, scope: !22004)
!22011 = !DILocalVariable(name: "tx_clk", arg: 4, scope: !22004, file: !3, line: 4178, type: !10839)
!22012 = !DILocation(line: 4178, column: 42, scope: !22004)
!22013 = !DILocalVariable(name: "rx_clk", arg: 5, scope: !22004, file: !3, line: 4179, type: !10839)
!22014 = !DILocation(line: 4179, column: 23, scope: !22004)
!22015 = !DILocalVariable(name: "tsu_clk", arg: 6, scope: !22004, file: !3, line: 4179, type: !10839)
!22016 = !DILocation(line: 4179, column: 44, scope: !22004)
!22017 = !DILocalVariable(name: "err", scope: !22004, file: !3, line: 4181, type: !37)
!22018 = !DILocation(line: 4181, column: 6, scope: !22004)
!22019 = !DILocation(line: 4183, column: 3, scope: !22004)
!22020 = !DILocation(line: 4183, column: 8, scope: !22004)
!22021 = !DILocation(line: 4184, column: 3, scope: !22004)
!22022 = !DILocation(line: 4184, column: 10, scope: !22004)
!22023 = !DILocation(line: 4185, column: 3, scope: !22004)
!22024 = !DILocation(line: 4185, column: 10, scope: !22004)
!22025 = !DILocation(line: 4186, column: 3, scope: !22004)
!22026 = !DILocation(line: 4186, column: 11, scope: !22004)
!22027 = !DILocation(line: 4188, column: 24, scope: !22004)
!22028 = !DILocation(line: 4188, column: 30, scope: !22004)
!22029 = !DILocation(line: 4188, column: 10, scope: !22004)
!22030 = !DILocation(line: 4188, column: 3, scope: !22004)
!22031 = !DILocation(line: 4188, column: 8, scope: !22004)
!22032 = !DILocation(line: 4189, column: 14, scope: !22033)
!22033 = distinct !DILexicalBlock(scope: !22004, file: !3, line: 4189, column: 6)
!22034 = !DILocation(line: 4189, column: 13, scope: !22033)
!22035 = !DILocation(line: 4189, column: 6, scope: !22033)
!22036 = !DILocation(line: 4189, column: 6, scope: !22004)
!22037 = !DILocation(line: 4190, column: 19, scope: !22033)
!22038 = !DILocation(line: 4190, column: 18, scope: !22033)
!22039 = !DILocation(line: 4190, column: 10, scope: !22033)
!22040 = !DILocation(line: 4190, column: 3, scope: !22033)
!22041 = !DILocation(line: 4192, column: 28, scope: !22004)
!22042 = !DILocation(line: 4192, column: 27, scope: !22004)
!22043 = !DILocation(line: 4192, column: 8, scope: !22004)
!22044 = !DILocation(line: 4192, column: 6, scope: !22004)
!22045 = !DILocation(line: 4193, column: 6, scope: !22046)
!22046 = distinct !DILexicalBlock(scope: !22004, file: !3, line: 4193, column: 6)
!22047 = !DILocation(line: 4193, column: 6, scope: !22004)
!22048 = !DILocation(line: 4194, column: 3, scope: !22049)
!22049 = distinct !DILexicalBlock(scope: !22046, file: !3, line: 4193, column: 11)
!22050 = !DILocation(line: 4195, column: 10, scope: !22049)
!22051 = !DILocation(line: 4195, column: 3, scope: !22049)
!22052 = !DILocation(line: 4198, column: 2, scope: !22004)
!22053 = !DILocation(line: 4199, column: 1, scope: !22004)
!22054 = distinct !DISubprogram(name: "at91ether_init", scope: !3, file: !3, line: 4201, type: !10813, scopeLine: 4202, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!22055 = !DILocalVariable(name: "pdev", arg: 1, scope: !22054, file: !3, line: 4201, type: !10260)
!22056 = !DILocation(line: 4201, column: 51, scope: !22054)
!22057 = !DILocalVariable(name: "dev", scope: !22054, file: !3, line: 4203, type: !295)
!22058 = !DILocation(line: 4203, column: 21, scope: !22054)
!22059 = !DILocation(line: 4203, column: 48, scope: !22054)
!22060 = !DILocation(line: 4203, column: 27, scope: !22054)
!22061 = !DILocalVariable(name: "bp", scope: !22054, file: !3, line: 4204, type: !10238)
!22062 = !DILocation(line: 4204, column: 15, scope: !22054)
!22063 = !DILocation(line: 4204, column: 32, scope: !22054)
!22064 = !DILocation(line: 4204, column: 20, scope: !22054)
!22065 = !DILocalVariable(name: "err", scope: !22054, file: !3, line: 4205, type: !37)
!22066 = !DILocation(line: 4205, column: 6, scope: !22054)
!22067 = !DILocation(line: 4207, column: 21, scope: !22054)
!22068 = !DILocation(line: 4207, column: 2, scope: !22054)
!22069 = !DILocation(line: 4207, column: 6, scope: !22054)
!22070 = !DILocation(line: 4207, column: 16, scope: !22054)
!22071 = !DILocation(line: 4207, column: 19, scope: !22054)
!22072 = !DILocation(line: 4209, column: 2, scope: !22054)
!22073 = !DILocation(line: 4209, column: 7, scope: !22054)
!22074 = !DILocation(line: 4209, column: 18, scope: !22054)
!22075 = !DILocation(line: 4210, column: 2, scope: !22054)
!22076 = !DILocation(line: 4210, column: 7, scope: !22054)
!22077 = !DILocation(line: 4210, column: 19, scope: !22054)
!22078 = !DILocation(line: 4212, column: 26, scope: !22054)
!22079 = !DILocation(line: 4212, column: 32, scope: !22054)
!22080 = !DILocation(line: 4212, column: 37, scope: !22054)
!22081 = !DILocation(line: 4212, column: 42, scope: !22054)
!22082 = !DILocation(line: 4213, column: 14, scope: !22054)
!22083 = !DILocation(line: 4213, column: 19, scope: !22054)
!22084 = !DILocation(line: 4213, column: 25, scope: !22054)
!22085 = !DILocation(line: 4212, column: 8, scope: !22054)
!22086 = !DILocation(line: 4212, column: 6, scope: !22054)
!22087 = !DILocation(line: 4214, column: 6, scope: !22088)
!22088 = distinct !DILexicalBlock(scope: !22054, file: !3, line: 4214, column: 6)
!22089 = !DILocation(line: 4214, column: 6, scope: !22054)
!22090 = !DILocation(line: 4215, column: 10, scope: !22088)
!22091 = !DILocation(line: 4215, column: 3, scope: !22088)
!22092 = !DILocation(line: 4217, column: 2, scope: !22054)
!22093 = !DILocation(line: 4219, column: 2, scope: !22054)
!22094 = !DILocation(line: 4221, column: 2, scope: !22054)
!22095 = !DILocation(line: 4222, column: 1, scope: !22054)
!22096 = distinct !DISubprogram(name: "at91ether_interrupt", scope: !3, file: !3, line: 4084, type: !4845, scopeLine: 4085, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!22097 = !DILocation(line: 392, column: 53, scope: !12907, inlinedAt: !22098)
!22098 = distinct !DILocation(line: 4135, column: 3, scope: !22099)
!22099 = distinct !DILexicalBlock(scope: !22100, file: !3, line: 4103, column: 61)
!22100 = distinct !DILexicalBlock(scope: !22096, file: !3, line: 4103, column: 6)
!22101 = !DILocation(line: 352, column: 51, scope: !12913, inlinedAt: !22102)
!22102 = distinct !DILocation(line: 4108, column: 3, scope: !22099)
!22103 = !DILocalVariable(name: "irq", arg: 1, scope: !22096, file: !3, line: 4084, type: !37)
!22104 = !DILocation(line: 4084, column: 44, scope: !22096)
!22105 = !DILocalVariable(name: "dev_id", arg: 2, scope: !22096, file: !3, line: 4084, type: !570)
!22106 = !DILocation(line: 4084, column: 55, scope: !22096)
!22107 = !DILocalVariable(name: "dev", scope: !22096, file: !3, line: 4086, type: !295)
!22108 = !DILocation(line: 4086, column: 21, scope: !22096)
!22109 = !DILocation(line: 4086, column: 27, scope: !22096)
!22110 = !DILocalVariable(name: "lp", scope: !22096, file: !3, line: 4087, type: !10238)
!22111 = !DILocation(line: 4087, column: 15, scope: !22096)
!22112 = !DILocation(line: 4087, column: 32, scope: !22096)
!22113 = !DILocation(line: 4087, column: 20, scope: !22096)
!22114 = !DILocalVariable(name: "intstatus", scope: !22096, file: !3, line: 4088, type: !707)
!22115 = !DILocation(line: 4088, column: 6, scope: !22096)
!22116 = !DILocalVariable(name: "ctl", scope: !22096, file: !3, line: 4088, type: !707)
!22117 = !DILocation(line: 4088, column: 17, scope: !22096)
!22118 = !DILocalVariable(name: "desc", scope: !22096, file: !3, line: 4089, type: !7)
!22119 = !DILocation(line: 4089, column: 15, scope: !22096)
!22120 = !DILocalVariable(name: "qlen", scope: !22096, file: !3, line: 4090, type: !7)
!22121 = !DILocation(line: 4090, column: 15, scope: !22096)
!22122 = !DILocalVariable(name: "tsr", scope: !22096, file: !3, line: 4091, type: !707)
!22123 = !DILocation(line: 4091, column: 6, scope: !22096)
!22124 = !DILocation(line: 4096, column: 14, scope: !22096)
!22125 = !DILocation(line: 4096, column: 12, scope: !22096)
!22126 = !DILocation(line: 4099, column: 6, scope: !22127)
!22127 = distinct !DILexicalBlock(scope: !22096, file: !3, line: 4099, column: 6)
!22128 = !DILocation(line: 4099, column: 16, scope: !22127)
!22129 = !DILocation(line: 4099, column: 6, scope: !22096)
!22130 = !DILocation(line: 4100, column: 16, scope: !22127)
!22131 = !DILocation(line: 4100, column: 3, scope: !22127)
!22132 = !DILocation(line: 4103, column: 6, scope: !22100)
!22133 = !DILocation(line: 4103, column: 16, scope: !22100)
!22134 = !DILocation(line: 4103, column: 6, scope: !22096)
!22135 = !DILocation(line: 4105, column: 7, scope: !22136)
!22136 = distinct !DILexicalBlock(scope: !22099, file: !3, line: 4105, column: 7)
!22137 = !DILocation(line: 4105, column: 17, scope: !22136)
!22138 = !DILocation(line: 4105, column: 7, scope: !22099)
!22139 = !DILocation(line: 4106, column: 4, scope: !22136)
!22140 = !DILocation(line: 4106, column: 9, scope: !22136)
!22141 = !DILocation(line: 4106, column: 15, scope: !22136)
!22142 = !DILocation(line: 4106, column: 24, scope: !22136)
!22143 = !DILocation(line: 4108, column: 14, scope: !22099)
!22144 = !DILocation(line: 4108, column: 18, scope: !22099)
!22145 = !DILocation(line: 354, column: 2, scope: !12944, inlinedAt: !22102)
!22146 = !DILocation(line: 354, column: 2, scope: !12947, inlinedAt: !22102)
!22147 = !DILocation(line: 4110, column: 9, scope: !22099)
!22148 = !DILocation(line: 4110, column: 7, scope: !22099)
!22149 = !DILocation(line: 4118, column: 11, scope: !22099)
!22150 = !DILocation(line: 4118, column: 15, scope: !22099)
!22151 = !DILocation(line: 4118, column: 10, scope: !22099)
!22152 = !DILocation(line: 4119, column: 5, scope: !22099)
!22153 = !DILocation(line: 4119, column: 9, scope: !22099)
!22154 = !DILocation(line: 4119, column: 4, scope: !22099)
!22155 = !DILocation(line: 4118, column: 8, scope: !22099)
!22156 = !DILocation(line: 4121, column: 3, scope: !22099)
!22157 = !DILocation(line: 4121, column: 10, scope: !22099)
!22158 = !DILocation(line: 4121, column: 14, scope: !22099)
!22159 = !DILocation(line: 4121, column: 30, scope: !22099)
!22160 = !DILocation(line: 4121, column: 28, scope: !22099)
!22161 = !DILocation(line: 4122, column: 12, scope: !22162)
!22162 = distinct !DILexicalBlock(scope: !22099, file: !3, line: 4121, column: 36)
!22163 = !DILocation(line: 4122, column: 16, scope: !22162)
!22164 = !DILocation(line: 4122, column: 33, scope: !22162)
!22165 = !DILocation(line: 4122, column: 37, scope: !22162)
!22166 = !DILocation(line: 4122, column: 31, scope: !22162)
!22167 = !DILocation(line: 4122, column: 52, scope: !22162)
!22168 = !DILocation(line: 4122, column: 9, scope: !22162)
!22169 = !DILocation(line: 4123, column: 24, scope: !22162)
!22170 = !DILocation(line: 4123, column: 28, scope: !22162)
!22171 = !DILocation(line: 4123, column: 39, scope: !22162)
!22172 = !DILocation(line: 4123, column: 45, scope: !22162)
!22173 = !DILocation(line: 4123, column: 4, scope: !22162)
!22174 = !DILocation(line: 4124, column: 4, scope: !22162)
!22175 = !DILocation(line: 4124, column: 8, scope: !22162)
!22176 = !DILocation(line: 4124, column: 19, scope: !22162)
!22177 = !DILocation(line: 4124, column: 25, scope: !22162)
!22178 = !DILocation(line: 4124, column: 29, scope: !22162)
!22179 = !DILocation(line: 4125, column: 4, scope: !22162)
!22180 = !DILocation(line: 4127, column: 4, scope: !22162)
!22181 = !DILocation(line: 4127, column: 9, scope: !22162)
!22182 = !DILocation(line: 4127, column: 15, scope: !22162)
!22183 = !DILocation(line: 4127, column: 25, scope: !22162)
!22184 = !DILocation(line: 4128, column: 27, scope: !22162)
!22185 = !DILocation(line: 4128, column: 31, scope: !22162)
!22186 = !DILocation(line: 4128, column: 42, scope: !22162)
!22187 = !DILocation(line: 4128, column: 48, scope: !22162)
!22188 = !DILocation(line: 4128, column: 4, scope: !22162)
!22189 = !DILocation(line: 4128, column: 9, scope: !22162)
!22190 = !DILocation(line: 4128, column: 15, scope: !22162)
!22191 = !DILocation(line: 4128, column: 24, scope: !22162)
!22192 = !DILocation(line: 4129, column: 4, scope: !22162)
!22193 = !DILocation(line: 4129, column: 8, scope: !22162)
!22194 = !DILocation(line: 4129, column: 21, scope: !22162)
!22195 = distinct !{!22195, !22156, !22196}
!22196 = !DILocation(line: 4130, column: 3, scope: !22099)
!22197 = !DILocation(line: 4132, column: 7, scope: !22198)
!22198 = distinct !DILexicalBlock(scope: !22099, file: !3, line: 4132, column: 7)
!22199 = !DILocation(line: 4132, column: 11, scope: !22198)
!22200 = !DILocation(line: 4132, column: 25, scope: !22198)
!22201 = !DILocation(line: 4132, column: 29, scope: !22198)
!22202 = !DILocation(line: 4132, column: 52, scope: !22198)
!22203 = !DILocation(line: 4132, column: 32, scope: !22198)
!22204 = !DILocation(line: 4132, column: 7, scope: !22099)
!22205 = !DILocation(line: 4133, column: 21, scope: !22198)
!22206 = !DILocation(line: 4133, column: 4, scope: !22198)
!22207 = !DILocation(line: 4135, column: 16, scope: !22099)
!22208 = !DILocation(line: 4135, column: 20, scope: !22099)
!22209 = !DILocation(line: 394, column: 2, scope: !13091, inlinedAt: !22098)
!22210 = !DILocation(line: 394, column: 2, scope: !13094, inlinedAt: !22098)
!22211 = !DILocation(line: 4136, column: 2, scope: !22099)
!22212 = !DILocation(line: 4139, column: 6, scope: !22213)
!22213 = distinct !DILexicalBlock(scope: !22096, file: !3, line: 4139, column: 6)
!22214 = !DILocation(line: 4139, column: 16, scope: !22213)
!22215 = !DILocation(line: 4139, column: 6, scope: !22096)
!22216 = !DILocation(line: 4140, column: 9, scope: !22217)
!22217 = distinct !DILexicalBlock(scope: !22213, file: !3, line: 4139, column: 35)
!22218 = !DILocation(line: 4140, column: 7, scope: !22217)
!22219 = !DILocation(line: 4141, column: 3, scope: !22217)
!22220 = !DILocation(line: 4142, column: 3, scope: !22217)
!22221 = !{i32 -2137501531}
!22222 = !DILocation(line: 4143, column: 3, scope: !22217)
!22223 = !DILocation(line: 4144, column: 2, scope: !22217)
!22224 = !DILocation(line: 4146, column: 6, scope: !22225)
!22225 = distinct !DILexicalBlock(scope: !22096, file: !3, line: 4146, column: 6)
!22226 = !DILocation(line: 4146, column: 16, scope: !22225)
!22227 = !DILocation(line: 4146, column: 6, scope: !22096)
!22228 = !DILocation(line: 4147, column: 14, scope: !22225)
!22229 = !DILocation(line: 4147, column: 3, scope: !22225)
!22230 = !DILocation(line: 4149, column: 2, scope: !22096)
!22231 = distinct !DISubprogram(name: "at91ether_open", scope: !3, file: !3, line: 3942, type: !407, scopeLine: 3943, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!22232 = !DILocalVariable(name: "dev", arg: 1, scope: !22231, file: !3, line: 3942, type: !295)
!22233 = !DILocation(line: 3942, column: 46, scope: !22231)
!22234 = !DILocalVariable(name: "lp", scope: !22231, file: !3, line: 3944, type: !10238)
!22235 = !DILocation(line: 3944, column: 15, scope: !22231)
!22236 = !DILocation(line: 3944, column: 32, scope: !22231)
!22237 = !DILocation(line: 3944, column: 20, scope: !22231)
!22238 = !DILocalVariable(name: "ctl", scope: !22231, file: !3, line: 3945, type: !707)
!22239 = !DILocation(line: 3945, column: 6, scope: !22231)
!22240 = !DILocalVariable(name: "ret", scope: !22231, file: !3, line: 3946, type: !37)
!22241 = !DILocation(line: 3946, column: 6, scope: !22231)
!22242 = !DILocation(line: 3948, column: 29, scope: !22231)
!22243 = !DILocation(line: 3948, column: 33, scope: !22231)
!22244 = !DILocation(line: 3948, column: 39, scope: !22231)
!22245 = !DILocation(line: 3948, column: 8, scope: !22231)
!22246 = !DILocation(line: 3948, column: 6, scope: !22231)
!22247 = !DILocation(line: 3949, column: 6, scope: !22248)
!22248 = distinct !DILexicalBlock(scope: !22231, file: !3, line: 3949, column: 6)
!22249 = !DILocation(line: 3949, column: 10, scope: !22248)
!22250 = !DILocation(line: 3949, column: 6, scope: !22231)
!22251 = !DILocation(line: 3950, column: 26, scope: !22252)
!22252 = distinct !DILexicalBlock(scope: !22248, file: !3, line: 3949, column: 15)
!22253 = !DILocation(line: 3950, column: 30, scope: !22252)
!22254 = !DILocation(line: 3950, column: 36, scope: !22252)
!22255 = !DILocation(line: 3950, column: 3, scope: !22252)
!22256 = !DILocation(line: 3951, column: 10, scope: !22252)
!22257 = !DILocation(line: 3951, column: 3, scope: !22252)
!22258 = !DILocation(line: 3955, column: 8, scope: !22231)
!22259 = !DILocation(line: 3955, column: 6, scope: !22231)
!22260 = !DILocation(line: 3956, column: 2, scope: !22231)
!22261 = !DILocation(line: 3958, column: 18, scope: !22231)
!22262 = !DILocation(line: 3958, column: 2, scope: !22231)
!22263 = !DILocation(line: 3960, column: 24, scope: !22231)
!22264 = !DILocation(line: 3960, column: 8, scope: !22231)
!22265 = !DILocation(line: 3960, column: 6, scope: !22231)
!22266 = !DILocation(line: 3961, column: 6, scope: !22267)
!22267 = distinct !DILexicalBlock(scope: !22231, file: !3, line: 3961, column: 6)
!22268 = !DILocation(line: 3961, column: 6, scope: !22231)
!22269 = !DILocation(line: 3962, column: 3, scope: !22267)
!22270 = !DILocation(line: 3964, column: 29, scope: !22231)
!22271 = !DILocation(line: 3964, column: 8, scope: !22231)
!22272 = !DILocation(line: 3964, column: 6, scope: !22231)
!22273 = !DILocation(line: 3965, column: 6, scope: !22274)
!22274 = distinct !DILexicalBlock(scope: !22231, file: !3, line: 3965, column: 6)
!22275 = !DILocation(line: 3965, column: 6, scope: !22231)
!22276 = !DILocation(line: 3966, column: 3, scope: !22274)
!22277 = !DILocation(line: 3968, column: 20, scope: !22231)
!22278 = !DILocation(line: 3968, column: 2, scope: !22231)
!22279 = !DILocation(line: 3970, column: 2, scope: !22231)
!22280 = !DILabel(scope: !22231, name: "stop", file: !3, line: 3972)
!22281 = !DILocation(line: 3972, column: 1, scope: !22231)
!22282 = !DILocation(line: 3973, column: 17, scope: !22231)
!22283 = !DILocation(line: 3973, column: 2, scope: !22231)
!22284 = !DILabel(scope: !22231, name: "pm_exit", file: !3, line: 3974)
!22285 = !DILocation(line: 3974, column: 1, scope: !22231)
!22286 = !DILocation(line: 3975, column: 23, scope: !22231)
!22287 = !DILocation(line: 3975, column: 27, scope: !22231)
!22288 = !DILocation(line: 3975, column: 33, scope: !22231)
!22289 = !DILocation(line: 3975, column: 2, scope: !22231)
!22290 = !DILocation(line: 3976, column: 9, scope: !22231)
!22291 = !DILocation(line: 3976, column: 2, scope: !22231)
!22292 = !DILocation(line: 3977, column: 1, scope: !22231)
!22293 = distinct !DISubprogram(name: "at91ether_close", scope: !3, file: !3, line: 3980, type: !407, scopeLine: 3981, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!22294 = !DILocalVariable(name: "dev", arg: 1, scope: !22293, file: !3, line: 3980, type: !295)
!22295 = !DILocation(line: 3980, column: 47, scope: !22293)
!22296 = !DILocalVariable(name: "lp", scope: !22293, file: !3, line: 3982, type: !10238)
!22297 = !DILocation(line: 3982, column: 15, scope: !22293)
!22298 = !DILocation(line: 3982, column: 32, scope: !22293)
!22299 = !DILocation(line: 3982, column: 20, scope: !22293)
!22300 = !DILocation(line: 3984, column: 19, scope: !22293)
!22301 = !DILocation(line: 3984, column: 2, scope: !22293)
!22302 = !DILocation(line: 3986, column: 15, scope: !22293)
!22303 = !DILocation(line: 3986, column: 19, scope: !22293)
!22304 = !DILocation(line: 3986, column: 2, scope: !22293)
!22305 = !DILocation(line: 3987, column: 25, scope: !22293)
!22306 = !DILocation(line: 3987, column: 29, scope: !22293)
!22307 = !DILocation(line: 3987, column: 2, scope: !22293)
!22308 = !DILocation(line: 3989, column: 17, scope: !22293)
!22309 = !DILocation(line: 3989, column: 2, scope: !22293)
!22310 = !DILocation(line: 3991, column: 25, scope: !22293)
!22311 = !DILocation(line: 3991, column: 29, scope: !22293)
!22312 = !DILocation(line: 3991, column: 35, scope: !22293)
!22313 = !DILocation(line: 3991, column: 9, scope: !22293)
!22314 = !DILocation(line: 3991, column: 2, scope: !22293)
!22315 = distinct !DISubprogram(name: "at91ether_start_xmit", scope: !3, file: !3, line: 3995, type: !417, scopeLine: 3997, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!22316 = !DILocation(line: 407, column: 64, scope: !13125, inlinedAt: !22317)
!22317 = distinct !DILocation(line: 4023, column: 3, scope: !22318)
!22318 = distinct !DILexicalBlock(scope: !22319, file: !3, line: 4001, column: 29)
!22319 = distinct !DILexicalBlock(scope: !22315, file: !3, line: 4001, column: 6)
!22320 = !DILocation(line: 407, column: 84, scope: !13125, inlinedAt: !22317)
!22321 = !DILocation(line: 327, column: 67, scope: !11066, inlinedAt: !22322)
!22322 = distinct !DILocation(line: 4016, column: 3, scope: !22323)
!22323 = distinct !DILexicalBlock(scope: !22324, file: !3, line: 4016, column: 3)
!22324 = distinct !DILexicalBlock(scope: !22325, file: !3, line: 4016, column: 3)
!22325 = distinct !DILexicalBlock(scope: !22326, file: !3, line: 4016, column: 3)
!22326 = distinct !DILexicalBlock(scope: !22327, file: !3, line: 4016, column: 3)
!22327 = distinct !DILexicalBlock(scope: !22318, file: !3, line: 4016, column: 3)
!22328 = !DILocalVariable(name: "skb", arg: 1, scope: !22315, file: !3, line: 3995, type: !420)
!22329 = !DILocation(line: 3995, column: 57, scope: !22315)
!22330 = !DILocalVariable(name: "dev", arg: 2, scope: !22315, file: !3, line: 3996, type: !295)
!22331 = !DILocation(line: 3996, column: 25, scope: !22315)
!22332 = !DILocalVariable(name: "lp", scope: !22315, file: !3, line: 3998, type: !10238)
!22333 = !DILocation(line: 3998, column: 15, scope: !22315)
!22334 = !DILocation(line: 3998, column: 32, scope: !22315)
!22335 = !DILocation(line: 3998, column: 20, scope: !22315)
!22336 = !DILocalVariable(name: "flags", scope: !22315, file: !3, line: 3999, type: !317)
!22337 = !DILocation(line: 3999, column: 16, scope: !22315)
!22338 = !DILocation(line: 4001, column: 6, scope: !22319)
!22339 = !DILocation(line: 4001, column: 10, scope: !22319)
!22340 = !DILocation(line: 4001, column: 24, scope: !22319)
!22341 = !DILocation(line: 4001, column: 6, scope: !22315)
!22342 = !DILocalVariable(name: "desc", scope: !22318, file: !3, line: 4002, type: !37)
!22343 = !DILocation(line: 4002, column: 7, scope: !22318)
!22344 = !DILocation(line: 4002, column: 14, scope: !22318)
!22345 = !DILocation(line: 4002, column: 18, scope: !22318)
!22346 = !DILocation(line: 4005, column: 30, scope: !22318)
!22347 = !DILocation(line: 4005, column: 3, scope: !22318)
!22348 = !DILocation(line: 4005, column: 7, scope: !22318)
!22349 = !DILocation(line: 4005, column: 18, scope: !22318)
!22350 = !DILocation(line: 4005, column: 24, scope: !22318)
!22351 = !DILocation(line: 4005, column: 28, scope: !22318)
!22352 = !DILocation(line: 4006, column: 31, scope: !22318)
!22353 = !DILocation(line: 4006, column: 36, scope: !22318)
!22354 = !DILocation(line: 4006, column: 3, scope: !22318)
!22355 = !DILocation(line: 4006, column: 7, scope: !22318)
!22356 = !DILocation(line: 4006, column: 18, scope: !22318)
!22357 = !DILocation(line: 4006, column: 24, scope: !22318)
!22358 = !DILocation(line: 4006, column: 29, scope: !22318)
!22359 = !DILocation(line: 4007, column: 34, scope: !22318)
!22360 = !DILocation(line: 4007, column: 3, scope: !22318)
!22361 = !DILocation(line: 4007, column: 7, scope: !22318)
!22362 = !DILocation(line: 4007, column: 18, scope: !22318)
!22363 = !DILocation(line: 4007, column: 24, scope: !22318)
!22364 = !DILocation(line: 4007, column: 32, scope: !22318)
!22365 = !DILocation(line: 4009, column: 26, scope: !22366)
!22366 = distinct !DILexicalBlock(scope: !22318, file: !3, line: 4009, column: 7)
!22367 = !DILocation(line: 4009, column: 30, scope: !22366)
!22368 = !DILocation(line: 4009, column: 36, scope: !22366)
!22369 = !DILocation(line: 4009, column: 41, scope: !22366)
!22370 = !DILocation(line: 4009, column: 45, scope: !22366)
!22371 = !DILocation(line: 4009, column: 56, scope: !22366)
!22372 = !DILocation(line: 4009, column: 62, scope: !22366)
!22373 = !DILocation(line: 4009, column: 7, scope: !22366)
!22374 = !DILocation(line: 4009, column: 7, scope: !22318)
!22375 = !DILocation(line: 4010, column: 22, scope: !22376)
!22376 = distinct !DILexicalBlock(scope: !22366, file: !3, line: 4009, column: 72)
!22377 = !DILocation(line: 4010, column: 4, scope: !22376)
!22378 = !DILocation(line: 4011, column: 4, scope: !22376)
!22379 = !DILocation(line: 4011, column: 9, scope: !22376)
!22380 = !DILocation(line: 4011, column: 15, scope: !22376)
!22381 = !DILocation(line: 4011, column: 25, scope: !22376)
!22382 = !DILocation(line: 4012, column: 15, scope: !22376)
!22383 = !DILocation(line: 4012, column: 4, scope: !22376)
!22384 = !DILocation(line: 4013, column: 4, scope: !22376)
!22385 = !DILocation(line: 4016, column: 3, scope: !22318)
!22386 = !DILocation(line: 4016, column: 3, scope: !22327)
!22387 = !DILocalVariable(name: "__dummy", scope: !22388, file: !3, line: 4016, type: !317)
!22388 = distinct !DILexicalBlock(scope: !22326, file: !3, line: 4016, column: 3)
!22389 = !DILocation(line: 4016, column: 3, scope: !22388)
!22390 = !DILocalVariable(name: "__dummy2", scope: !22388, file: !3, line: 4016, type: !317)
!22391 = !DILocation(line: 4016, column: 3, scope: !22326)
!22392 = !DILocation(line: 4016, column: 3, scope: !22325)
!22393 = !DILocation(line: 4016, column: 3, scope: !22394)
!22394 = distinct !DILexicalBlock(scope: !22325, file: !3, line: 4016, column: 3)
!22395 = !DILocalVariable(name: "__dummy", scope: !22396, file: !3, line: 4016, type: !317)
!22396 = distinct !DILexicalBlock(scope: !22397, file: !3, line: 4016, column: 3)
!22397 = distinct !DILexicalBlock(scope: !22394, file: !3, line: 4016, column: 3)
!22398 = !DILocation(line: 4016, column: 3, scope: !22396)
!22399 = !DILocalVariable(name: "__dummy2", scope: !22396, file: !3, line: 4016, type: !317)
!22400 = !DILocation(line: 4016, column: 3, scope: !22397)
!22401 = !DILocation(line: 4016, column: 3, scope: !22324)
!22402 = !{i32 -2137503164}
!22403 = !DILocation(line: 4016, column: 3, scope: !22323)
!22404 = !DILocation(line: 329, column: 10, scope: !11066, inlinedAt: !22322)
!22405 = !DILocation(line: 329, column: 16, scope: !11066, inlinedAt: !22322)
!22406 = !DILocation(line: 4018, column: 25, scope: !22318)
!22407 = !DILocation(line: 4018, column: 30, scope: !22318)
!22408 = !DILocation(line: 4018, column: 35, scope: !22318)
!22409 = !DILocation(line: 4018, column: 3, scope: !22318)
!22410 = !DILocation(line: 4018, column: 7, scope: !22318)
!22411 = !DILocation(line: 4018, column: 22, scope: !22318)
!22412 = !DILocation(line: 4019, column: 3, scope: !22318)
!22413 = !DILocation(line: 4019, column: 7, scope: !22318)
!22414 = !DILocation(line: 4019, column: 20, scope: !22318)
!22415 = !DILocation(line: 4020, column: 7, scope: !22416)
!22416 = distinct !DILexicalBlock(scope: !22318, file: !3, line: 4020, column: 7)
!22417 = !DILocation(line: 4020, column: 11, scope: !22416)
!22418 = !DILocation(line: 4020, column: 25, scope: !22416)
!22419 = !DILocation(line: 4020, column: 7, scope: !22318)
!22420 = !DILocation(line: 4021, column: 21, scope: !22416)
!22421 = !DILocation(line: 4021, column: 4, scope: !22416)
!22422 = !DILocation(line: 4023, column: 27, scope: !22318)
!22423 = !DILocation(line: 4023, column: 31, scope: !22318)
!22424 = !DILocation(line: 4023, column: 37, scope: !22318)
!22425 = !DILocation(line: 409, column: 2, scope: !13335, inlinedAt: !22317)
!22426 = !DILocation(line: 409, column: 2, scope: !13340, inlinedAt: !22317)
!22427 = !DILocation(line: 409, column: 2, scope: !13341, inlinedAt: !22317)
!22428 = !DILocation(line: 409, column: 2, scope: !13348, inlinedAt: !22317)
!22429 = !DILocation(line: 409, column: 2, scope: !13351, inlinedAt: !22317)
!22430 = !DILocation(line: 4026, column: 3, scope: !22318)
!22431 = !DILocation(line: 4028, column: 3, scope: !22318)
!22432 = !DILocation(line: 4030, column: 2, scope: !22318)
!22433 = !DILocation(line: 4031, column: 14, scope: !22434)
!22434 = distinct !DILexicalBlock(scope: !22319, file: !3, line: 4030, column: 9)
!22435 = !DILocation(line: 4031, column: 3, scope: !22434)
!22436 = !DILocation(line: 4032, column: 3, scope: !22434)
!22437 = !DILocation(line: 4035, column: 2, scope: !22315)
!22438 = !DILocation(line: 4036, column: 1, scope: !22315)
!22439 = distinct !DISubprogram(name: "at91ether_start", scope: !3, file: !3, line: 3873, type: !10388, scopeLine: 3874, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!22440 = !DILocalVariable(name: "lp", arg: 1, scope: !22439, file: !3, line: 3873, type: !10238)
!22441 = !DILocation(line: 3873, column: 41, scope: !22439)
!22442 = !DILocalVariable(name: "q", scope: !22439, file: !3, line: 3875, type: !10234)
!22443 = !DILocation(line: 3875, column: 21, scope: !22439)
!22444 = !DILocation(line: 3875, column: 26, scope: !22439)
!22445 = !DILocation(line: 3875, column: 30, scope: !22439)
!22446 = !DILocalVariable(name: "desc", scope: !22439, file: !3, line: 3876, type: !10636)
!22447 = !DILocation(line: 3876, column: 24, scope: !22439)
!22448 = !DILocalVariable(name: "addr", scope: !22439, file: !3, line: 3877, type: !7084)
!22449 = !DILocation(line: 3877, column: 13, scope: !22439)
!22450 = !DILocalVariable(name: "ctl", scope: !22439, file: !3, line: 3878, type: !707)
!22451 = !DILocation(line: 3878, column: 6, scope: !22439)
!22452 = !DILocalVariable(name: "i", scope: !22439, file: !3, line: 3879, type: !37)
!22453 = !DILocation(line: 3879, column: 6, scope: !22439)
!22454 = !DILocalVariable(name: "ret", scope: !22439, file: !3, line: 3879, type: !37)
!22455 = !DILocation(line: 3879, column: 9, scope: !22439)
!22456 = !DILocation(line: 3881, column: 33, scope: !22439)
!22457 = !DILocation(line: 3881, column: 8, scope: !22439)
!22458 = !DILocation(line: 3881, column: 6, scope: !22439)
!22459 = !DILocation(line: 3882, column: 6, scope: !22460)
!22460 = distinct !DILexicalBlock(scope: !22439, file: !3, line: 3882, column: 6)
!22461 = !DILocation(line: 3882, column: 6, scope: !22439)
!22462 = !DILocation(line: 3883, column: 10, scope: !22460)
!22463 = !DILocation(line: 3883, column: 3, scope: !22460)
!22464 = !DILocation(line: 3885, column: 9, scope: !22439)
!22465 = !DILocation(line: 3885, column: 12, scope: !22439)
!22466 = !DILocation(line: 3885, column: 7, scope: !22439)
!22467 = !DILocation(line: 3886, column: 9, scope: !22468)
!22468 = distinct !DILexicalBlock(scope: !22439, file: !3, line: 3886, column: 2)
!22469 = !DILocation(line: 3886, column: 7, scope: !22468)
!22470 = !DILocation(line: 3886, column: 14, scope: !22471)
!22471 = distinct !DILexicalBlock(scope: !22468, file: !3, line: 3886, column: 2)
!22472 = !DILocation(line: 3886, column: 16, scope: !22471)
!22473 = !DILocation(line: 3886, column: 2, scope: !22468)
!22474 = !DILocation(line: 3887, column: 23, scope: !22475)
!22475 = distinct !DILexicalBlock(scope: !22471, file: !3, line: 3886, column: 47)
!22476 = !DILocation(line: 3887, column: 26, scope: !22475)
!22477 = !DILocation(line: 3887, column: 10, scope: !22475)
!22478 = !DILocation(line: 3887, column: 8, scope: !22475)
!22479 = !DILocation(line: 3888, column: 17, scope: !22475)
!22480 = !DILocation(line: 3888, column: 21, scope: !22475)
!22481 = !DILocation(line: 3888, column: 27, scope: !22475)
!22482 = !DILocation(line: 3888, column: 3, scope: !22475)
!22483 = !DILocation(line: 3889, column: 3, scope: !22475)
!22484 = !DILocation(line: 3889, column: 9, scope: !22475)
!22485 = !DILocation(line: 3889, column: 14, scope: !22475)
!22486 = !DILocation(line: 3890, column: 8, scope: !22475)
!22487 = !DILocation(line: 3891, column: 2, scope: !22475)
!22488 = !DILocation(line: 3886, column: 43, scope: !22471)
!22489 = !DILocation(line: 3886, column: 2, scope: !22471)
!22490 = distinct !{!22490, !22473, !22491}
!22491 = !DILocation(line: 3891, column: 2, scope: !22468)
!22492 = !DILocation(line: 3894, column: 2, scope: !22439)
!22493 = !DILocation(line: 3894, column: 8, scope: !22439)
!22494 = !DILocation(line: 3894, column: 13, scope: !22439)
!22495 = !DILocation(line: 3897, column: 2, scope: !22439)
!22496 = !DILocation(line: 3897, column: 5, scope: !22439)
!22497 = !DILocation(line: 3897, column: 13, scope: !22439)
!22498 = !DILocation(line: 3900, column: 2, scope: !22439)
!22499 = !DILocation(line: 3903, column: 8, scope: !22439)
!22500 = !DILocation(line: 3903, column: 6, scope: !22439)
!22501 = !DILocation(line: 3904, column: 2, scope: !22439)
!22502 = !DILocation(line: 3907, column: 2, scope: !22439)
!22503 = !DILocation(line: 3916, column: 2, scope: !22439)
!22504 = !DILocation(line: 3917, column: 1, scope: !22439)
!22505 = distinct !DISubprogram(name: "netif_start_queue", scope: !36, file: !36, line: 3285, type: !411, scopeLine: 3286, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!22506 = !DILocation(line: 3274, column: 71, scope: !14776, inlinedAt: !22507)
!22507 = distinct !DILocation(line: 3287, column: 2, scope: !22505)
!22508 = !DILocalVariable(name: "dev", arg: 1, scope: !22505, file: !36, line: 3285, type: !295)
!22509 = !DILocation(line: 3285, column: 57, scope: !22505)
!22510 = !DILocation(line: 3287, column: 43, scope: !22505)
!22511 = !DILocation(line: 3287, column: 23, scope: !22505)
!22512 = !DILocation(line: 3276, column: 37, scope: !14776, inlinedAt: !22507)
!22513 = !DILocation(line: 3276, column: 48, scope: !14776, inlinedAt: !22507)
!22514 = !DILocation(line: 3276, column: 2, scope: !14776, inlinedAt: !22507)
!22515 = !DILocation(line: 3288, column: 1, scope: !22505)
!22516 = distinct !DISubprogram(name: "at91ether_stop", scope: !3, file: !3, line: 3919, type: !10392, scopeLine: 3920, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!22517 = !DILocalVariable(name: "lp", arg: 1, scope: !22516, file: !3, line: 3919, type: !10238)
!22518 = !DILocation(line: 3919, column: 41, scope: !22516)
!22519 = !DILocalVariable(name: "ctl", scope: !22516, file: !3, line: 3921, type: !707)
!22520 = !DILocation(line: 3921, column: 6, scope: !22516)
!22521 = !DILocation(line: 3924, column: 2, scope: !22516)
!22522 = !DILocation(line: 3934, column: 8, scope: !22516)
!22523 = !DILocation(line: 3934, column: 6, scope: !22516)
!22524 = !DILocation(line: 3935, column: 2, scope: !22516)
!22525 = !DILocation(line: 3938, column: 26, scope: !22516)
!22526 = !DILocation(line: 3938, column: 2, scope: !22516)
!22527 = !DILocation(line: 3939, column: 1, scope: !22516)
!22528 = distinct !DISubprogram(name: "at91ether_alloc_coherent", scope: !3, file: !3, line: 3824, type: !10388, scopeLine: 3825, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!22529 = !DILocalVariable(name: "lp", arg: 1, scope: !22528, file: !3, line: 3824, type: !10238)
!22530 = !DILocation(line: 3824, column: 50, scope: !22528)
!22531 = !DILocalVariable(name: "q", scope: !22528, file: !3, line: 3826, type: !10234)
!22532 = !DILocation(line: 3826, column: 21, scope: !22528)
!22533 = !DILocation(line: 3826, column: 26, scope: !22528)
!22534 = !DILocation(line: 3826, column: 30, scope: !22528)
!22535 = !DILocation(line: 3828, column: 35, scope: !22528)
!22536 = !DILocation(line: 3828, column: 39, scope: !22528)
!22537 = !DILocation(line: 3828, column: 45, scope: !22528)
!22538 = !DILocation(line: 3830, column: 31, scope: !22528)
!22539 = !DILocation(line: 3830, column: 8, scope: !22528)
!22540 = !DILocation(line: 3829, column: 31, scope: !22528)
!22541 = !DILocation(line: 3829, column: 7, scope: !22528)
!22542 = !DILocation(line: 3831, column: 8, scope: !22528)
!22543 = !DILocation(line: 3831, column: 11, scope: !22528)
!22544 = !DILocation(line: 3828, column: 15, scope: !22528)
!22545 = !DILocation(line: 3828, column: 2, scope: !22528)
!22546 = !DILocation(line: 3828, column: 5, scope: !22528)
!22547 = !DILocation(line: 3828, column: 13, scope: !22528)
!22548 = !DILocation(line: 3832, column: 7, scope: !22549)
!22549 = distinct !DILexicalBlock(scope: !22528, file: !3, line: 3832, column: 6)
!22550 = !DILocation(line: 3832, column: 10, scope: !22549)
!22551 = !DILocation(line: 3832, column: 6, scope: !22528)
!22552 = !DILocation(line: 3833, column: 3, scope: !22549)
!22553 = !DILocation(line: 3835, column: 38, scope: !22528)
!22554 = !DILocation(line: 3835, column: 42, scope: !22528)
!22555 = !DILocation(line: 3835, column: 48, scope: !22528)
!22556 = !DILocation(line: 3838, column: 11, scope: !22528)
!22557 = !DILocation(line: 3838, column: 14, scope: !22528)
!22558 = !DILocation(line: 3835, column: 18, scope: !22528)
!22559 = !DILocation(line: 3835, column: 2, scope: !22528)
!22560 = !DILocation(line: 3835, column: 5, scope: !22528)
!22561 = !DILocation(line: 3835, column: 16, scope: !22528)
!22562 = !DILocation(line: 3839, column: 7, scope: !22563)
!22563 = distinct !DILexicalBlock(scope: !22528, file: !3, line: 3839, column: 6)
!22564 = !DILocation(line: 3839, column: 10, scope: !22563)
!22565 = !DILocation(line: 3839, column: 6, scope: !22528)
!22566 = !DILocation(line: 3840, column: 22, scope: !22567)
!22567 = distinct !DILexicalBlock(scope: !22563, file: !3, line: 3839, column: 22)
!22568 = !DILocation(line: 3840, column: 26, scope: !22567)
!22569 = !DILocation(line: 3840, column: 32, scope: !22567)
!22570 = !DILocation(line: 3842, column: 30, scope: !22567)
!22571 = !DILocation(line: 3842, column: 7, scope: !22567)
!22572 = !DILocation(line: 3841, column: 30, scope: !22567)
!22573 = !DILocation(line: 3841, column: 7, scope: !22567)
!22574 = !DILocation(line: 3843, column: 7, scope: !22567)
!22575 = !DILocation(line: 3843, column: 10, scope: !22567)
!22576 = !DILocation(line: 3843, column: 19, scope: !22567)
!22577 = !DILocation(line: 3843, column: 22, scope: !22567)
!22578 = !DILocation(line: 3840, column: 3, scope: !22567)
!22579 = !DILocation(line: 3844, column: 3, scope: !22567)
!22580 = !DILocation(line: 3844, column: 6, scope: !22567)
!22581 = !DILocation(line: 3844, column: 14, scope: !22567)
!22582 = !DILocation(line: 3845, column: 3, scope: !22567)
!22583 = !DILocation(line: 3848, column: 2, scope: !22528)
!22584 = !DILocation(line: 3849, column: 1, scope: !22528)
!22585 = distinct !DISubprogram(name: "at91ether_free_coherent", scope: !3, file: !3, line: 3851, type: !10392, scopeLine: 3852, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!22586 = !DILocalVariable(name: "lp", arg: 1, scope: !22585, file: !3, line: 3851, type: !10238)
!22587 = !DILocation(line: 3851, column: 50, scope: !22585)
!22588 = !DILocalVariable(name: "q", scope: !22585, file: !3, line: 3853, type: !10234)
!22589 = !DILocation(line: 3853, column: 21, scope: !22585)
!22590 = !DILocation(line: 3853, column: 26, scope: !22585)
!22591 = !DILocation(line: 3853, column: 30, scope: !22585)
!22592 = !DILocation(line: 3855, column: 6, scope: !22593)
!22593 = distinct !DILexicalBlock(scope: !22585, file: !3, line: 3855, column: 6)
!22594 = !DILocation(line: 3855, column: 9, scope: !22593)
!22595 = !DILocation(line: 3855, column: 6, scope: !22585)
!22596 = !DILocation(line: 3856, column: 22, scope: !22597)
!22597 = distinct !DILexicalBlock(scope: !22593, file: !3, line: 3855, column: 18)
!22598 = !DILocation(line: 3856, column: 26, scope: !22597)
!22599 = !DILocation(line: 3856, column: 32, scope: !22597)
!22600 = !DILocation(line: 3858, column: 30, scope: !22597)
!22601 = !DILocation(line: 3858, column: 7, scope: !22597)
!22602 = !DILocation(line: 3857, column: 30, scope: !22597)
!22603 = !DILocation(line: 3857, column: 7, scope: !22597)
!22604 = !DILocation(line: 3859, column: 7, scope: !22597)
!22605 = !DILocation(line: 3859, column: 10, scope: !22597)
!22606 = !DILocation(line: 3859, column: 19, scope: !22597)
!22607 = !DILocation(line: 3859, column: 22, scope: !22597)
!22608 = !DILocation(line: 3856, column: 3, scope: !22597)
!22609 = !DILocation(line: 3860, column: 3, scope: !22597)
!22610 = !DILocation(line: 3860, column: 6, scope: !22597)
!22611 = !DILocation(line: 3860, column: 14, scope: !22597)
!22612 = !DILocation(line: 3861, column: 2, scope: !22597)
!22613 = !DILocation(line: 3863, column: 6, scope: !22614)
!22614 = distinct !DILexicalBlock(scope: !22585, file: !3, line: 3863, column: 6)
!22615 = !DILocation(line: 3863, column: 9, scope: !22614)
!22616 = !DILocation(line: 3863, column: 6, scope: !22585)
!22617 = !DILocation(line: 3864, column: 22, scope: !22618)
!22618 = distinct !DILexicalBlock(scope: !22614, file: !3, line: 3863, column: 21)
!22619 = !DILocation(line: 3864, column: 26, scope: !22618)
!22620 = !DILocation(line: 3864, column: 32, scope: !22618)
!22621 = !DILocation(line: 3867, column: 7, scope: !22618)
!22622 = !DILocation(line: 3867, column: 10, scope: !22618)
!22623 = !DILocation(line: 3867, column: 22, scope: !22618)
!22624 = !DILocation(line: 3867, column: 25, scope: !22618)
!22625 = !DILocation(line: 3864, column: 3, scope: !22618)
!22626 = !DILocation(line: 3868, column: 3, scope: !22618)
!22627 = !DILocation(line: 3868, column: 6, scope: !22618)
!22628 = !DILocation(line: 3868, column: 17, scope: !22618)
!22629 = !DILocation(line: 3869, column: 2, scope: !22618)
!22630 = !DILocation(line: 3870, column: 1, scope: !22585)
!22631 = distinct !DISubprogram(name: "netif_stop_queue", scope: !36, file: !36, line: 3336, type: !411, scopeLine: 3337, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!22632 = !DILocation(line: 3324, column: 70, scope: !16973, inlinedAt: !22633)
!22633 = distinct !DILocation(line: 3338, column: 2, scope: !22631)
!22634 = !DILocalVariable(name: "dev", arg: 1, scope: !22631, file: !36, line: 3336, type: !295)
!22635 = !DILocation(line: 3336, column: 56, scope: !22631)
!22636 = !DILocation(line: 3338, column: 42, scope: !22631)
!22637 = !DILocation(line: 3338, column: 22, scope: !22631)
!22638 = !DILocation(line: 3326, column: 35, scope: !16973, inlinedAt: !22633)
!22639 = !DILocation(line: 3326, column: 46, scope: !16973, inlinedAt: !22633)
!22640 = !DILocation(line: 3326, column: 2, scope: !16973, inlinedAt: !22633)
!22641 = !DILocation(line: 3339, column: 1, scope: !22631)
!22642 = distinct !DISubprogram(name: "at91ether_rx", scope: !3, file: !3, line: 4041, type: !411, scopeLine: 4042, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!22643 = !DILocalVariable(name: "dev", arg: 1, scope: !22642, file: !3, line: 4041, type: !295)
!22644 = !DILocation(line: 4041, column: 45, scope: !22642)
!22645 = !DILocalVariable(name: "lp", scope: !22642, file: !3, line: 4043, type: !10238)
!22646 = !DILocation(line: 4043, column: 15, scope: !22642)
!22647 = !DILocation(line: 4043, column: 32, scope: !22642)
!22648 = !DILocation(line: 4043, column: 20, scope: !22642)
!22649 = !DILocalVariable(name: "q", scope: !22642, file: !3, line: 4044, type: !10234)
!22650 = !DILocation(line: 4044, column: 21, scope: !22642)
!22651 = !DILocation(line: 4044, column: 26, scope: !22642)
!22652 = !DILocation(line: 4044, column: 30, scope: !22642)
!22653 = !DILocalVariable(name: "desc", scope: !22642, file: !3, line: 4045, type: !10636)
!22654 = !DILocation(line: 4045, column: 24, scope: !22642)
!22655 = !DILocalVariable(name: "p_recv", scope: !22642, file: !3, line: 4046, type: !7745)
!22656 = !DILocation(line: 4046, column: 17, scope: !22642)
!22657 = !DILocalVariable(name: "skb", scope: !22642, file: !3, line: 4047, type: !420)
!22658 = !DILocation(line: 4047, column: 18, scope: !22642)
!22659 = !DILocalVariable(name: "pktlen", scope: !22642, file: !3, line: 4048, type: !7)
!22660 = !DILocation(line: 4048, column: 15, scope: !22642)
!22661 = !DILocation(line: 4050, column: 22, scope: !22642)
!22662 = !DILocation(line: 4050, column: 25, scope: !22642)
!22663 = !DILocation(line: 4050, column: 28, scope: !22642)
!22664 = !DILocation(line: 4050, column: 9, scope: !22642)
!22665 = !DILocation(line: 4050, column: 7, scope: !22642)
!22666 = !DILocation(line: 4051, column: 2, scope: !22642)
!22667 = !DILocation(line: 4051, column: 9, scope: !22642)
!22668 = !DILocation(line: 4051, column: 15, scope: !22642)
!22669 = !DILocation(line: 4051, column: 20, scope: !22642)
!22670 = !DILocation(line: 4052, column: 12, scope: !22671)
!22671 = distinct !DILexicalBlock(scope: !22642, file: !3, line: 4051, column: 41)
!22672 = !DILocation(line: 4052, column: 15, scope: !22671)
!22673 = !DILocation(line: 4052, column: 28, scope: !22671)
!22674 = !DILocation(line: 4052, column: 31, scope: !22671)
!22675 = !DILocation(line: 4052, column: 39, scope: !22671)
!22676 = !DILocation(line: 4052, column: 26, scope: !22671)
!22677 = !DILocation(line: 4052, column: 10, scope: !22671)
!22678 = !DILocation(line: 4053, column: 12, scope: !22671)
!22679 = !DILocation(line: 4053, column: 10, scope: !22671)
!22680 = !DILocation(line: 4054, column: 26, scope: !22671)
!22681 = !DILocation(line: 4054, column: 31, scope: !22671)
!22682 = !DILocation(line: 4054, column: 38, scope: !22671)
!22683 = !DILocation(line: 4054, column: 9, scope: !22671)
!22684 = !DILocation(line: 4054, column: 7, scope: !22671)
!22685 = !DILocation(line: 4055, column: 7, scope: !22686)
!22686 = distinct !DILexicalBlock(scope: !22671, file: !3, line: 4055, column: 7)
!22687 = !DILocation(line: 4055, column: 7, scope: !22671)
!22688 = !DILocation(line: 4056, column: 16, scope: !22689)
!22689 = distinct !DILexicalBlock(scope: !22686, file: !3, line: 4055, column: 12)
!22690 = !DILocation(line: 4056, column: 4, scope: !22689)
!22691 = !DILocation(line: 4057, column: 17, scope: !22689)
!22692 = !DILocation(line: 4057, column: 22, scope: !22689)
!22693 = !DILocation(line: 4057, column: 30, scope: !22689)
!22694 = !DILocation(line: 4057, column: 4, scope: !22689)
!22695 = !DILocation(line: 4059, column: 35, scope: !22689)
!22696 = !DILocation(line: 4059, column: 40, scope: !22689)
!22697 = !DILocation(line: 4059, column: 20, scope: !22689)
!22698 = !DILocation(line: 4059, column: 4, scope: !22689)
!22699 = !DILocation(line: 4059, column: 9, scope: !22689)
!22700 = !DILocation(line: 4059, column: 18, scope: !22689)
!22701 = !DILocation(line: 4060, column: 4, scope: !22689)
!22702 = !DILocation(line: 4060, column: 9, scope: !22689)
!22703 = !DILocation(line: 4060, column: 15, scope: !22689)
!22704 = !DILocation(line: 4060, column: 25, scope: !22689)
!22705 = !DILocation(line: 4061, column: 27, scope: !22689)
!22706 = !DILocation(line: 4061, column: 4, scope: !22689)
!22707 = !DILocation(line: 4061, column: 9, scope: !22689)
!22708 = !DILocation(line: 4061, column: 15, scope: !22689)
!22709 = !DILocation(line: 4061, column: 24, scope: !22689)
!22710 = !DILocation(line: 4062, column: 13, scope: !22689)
!22711 = !DILocation(line: 4062, column: 4, scope: !22689)
!22712 = !DILocation(line: 4063, column: 3, scope: !22689)
!22713 = !DILocation(line: 4064, column: 4, scope: !22714)
!22714 = distinct !DILexicalBlock(scope: !22686, file: !3, line: 4063, column: 10)
!22715 = !DILocation(line: 4064, column: 9, scope: !22714)
!22716 = !DILocation(line: 4064, column: 15, scope: !22714)
!22717 = !DILocation(line: 4064, column: 25, scope: !22714)
!22718 = !DILocation(line: 4067, column: 7, scope: !22719)
!22719 = distinct !DILexicalBlock(scope: !22671, file: !3, line: 4067, column: 7)
!22720 = !DILocation(line: 4067, column: 13, scope: !22719)
!22721 = !DILocation(line: 4067, column: 18, scope: !22719)
!22722 = !DILocation(line: 4067, column: 7, scope: !22671)
!22723 = !DILocation(line: 4068, column: 4, scope: !22719)
!22724 = !DILocation(line: 4068, column: 9, scope: !22719)
!22725 = !DILocation(line: 4068, column: 15, scope: !22719)
!22726 = !DILocation(line: 4068, column: 24, scope: !22719)
!22727 = !DILocation(line: 4071, column: 3, scope: !22671)
!22728 = !DILocation(line: 4071, column: 9, scope: !22671)
!22729 = !DILocation(line: 4071, column: 14, scope: !22671)
!22730 = !DILocation(line: 4074, column: 7, scope: !22731)
!22731 = distinct !DILexicalBlock(scope: !22671, file: !3, line: 4074, column: 7)
!22732 = !DILocation(line: 4074, column: 10, scope: !22731)
!22733 = !DILocation(line: 4074, column: 18, scope: !22731)
!22734 = !DILocation(line: 4074, column: 7, scope: !22671)
!22735 = !DILocation(line: 4075, column: 4, scope: !22731)
!22736 = !DILocation(line: 4075, column: 7, scope: !22731)
!22737 = !DILocation(line: 4075, column: 15, scope: !22731)
!22738 = !DILocation(line: 4077, column: 4, scope: !22731)
!22739 = !DILocation(line: 4077, column: 7, scope: !22731)
!22740 = !DILocation(line: 4077, column: 14, scope: !22731)
!22741 = !DILocation(line: 4079, column: 23, scope: !22671)
!22742 = !DILocation(line: 4079, column: 26, scope: !22671)
!22743 = !DILocation(line: 4079, column: 29, scope: !22671)
!22744 = !DILocation(line: 4079, column: 10, scope: !22671)
!22745 = !DILocation(line: 4079, column: 8, scope: !22671)
!22746 = distinct !{!22746, !22666, !22747}
!22747 = !DILocation(line: 4080, column: 2, scope: !22642)
!22748 = !DILocation(line: 4081, column: 1, scope: !22642)
!22749 = distinct !DISubprogram(name: "dev_consume_skb_irq", scope: !36, file: !36, line: 3812, type: !2650, scopeLine: 3813, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!22750 = !DILocalVariable(name: "skb", arg: 1, scope: !22749, file: !36, line: 3812, type: !420)
!22751 = !DILocation(line: 3812, column: 56, scope: !22749)
!22752 = !DILocation(line: 3814, column: 22, scope: !22749)
!22753 = !DILocation(line: 3814, column: 2, scope: !22749)
!22754 = !DILocation(line: 3815, column: 1, scope: !22749)
!22755 = distinct !DISubprogram(name: "netif_queue_stopped", scope: !36, file: !36, line: 3354, type: !14115, scopeLine: 3355, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!22756 = !DILocalVariable(name: "dev", arg: 1, scope: !22755, file: !36, line: 3354, type: !2682)
!22757 = !DILocation(line: 3354, column: 65, scope: !22755)
!22758 = !DILocation(line: 3356, column: 52, scope: !22755)
!22759 = !DILocation(line: 3356, column: 32, scope: !22755)
!22760 = !DILocation(line: 3356, column: 9, scope: !22755)
!22761 = !DILocation(line: 3356, column: 2, scope: !22755)
!22762 = distinct !DISubprogram(name: "netif_wake_queue", scope: !36, file: !36, line: 3309, type: !411, scopeLine: 3310, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!22763 = !DILocalVariable(name: "dev", arg: 1, scope: !22762, file: !36, line: 3309, type: !295)
!22764 = !DILocation(line: 3309, column: 56, scope: !22762)
!22765 = !DILocation(line: 3311, column: 42, scope: !22762)
!22766 = !DILocation(line: 3311, column: 22, scope: !22762)
!22767 = !DILocation(line: 3311, column: 2, scope: !22762)
!22768 = !DILocation(line: 3312, column: 1, scope: !22762)
!22769 = distinct !DISubprogram(name: "skb_put_data", scope: !422, file: !422, line: 2270, type: !22770, scopeLine: 2272, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!22770 = !DISubroutineType(types: !22771)
!22771 = !{!570, !420, !2244, !7}
!22772 = !DILocalVariable(name: "skb", arg: 1, scope: !22769, file: !422, line: 2270, type: !420)
!22773 = !DILocation(line: 2270, column: 50, scope: !22769)
!22774 = !DILocalVariable(name: "data", arg: 2, scope: !22769, file: !422, line: 2270, type: !2244)
!22775 = !DILocation(line: 2270, column: 67, scope: !22769)
!22776 = !DILocalVariable(name: "len", arg: 3, scope: !22769, file: !422, line: 2271, type: !7)
!22777 = !DILocation(line: 2271, column: 19, scope: !22769)
!22778 = !DILocalVariable(name: "tmp", scope: !22769, file: !422, line: 2273, type: !570)
!22779 = !DILocation(line: 2273, column: 8, scope: !22769)
!22780 = !DILocation(line: 2273, column: 22, scope: !22769)
!22781 = !DILocation(line: 2273, column: 27, scope: !22769)
!22782 = !DILocation(line: 2273, column: 14, scope: !22769)
!22783 = !DILocation(line: 2275, column: 9, scope: !22769)
!22784 = !DILocation(line: 2275, column: 14, scope: !22769)
!22785 = !DILocation(line: 2275, column: 20, scope: !22769)
!22786 = !DILocation(line: 2275, column: 2, scope: !22769)
!22787 = !DILocation(line: 2277, column: 9, scope: !22769)
!22788 = !DILocation(line: 2277, column: 2, scope: !22769)
!22789 = distinct !DISubprogram(name: "fu540_c000_clk_init", scope: !3, file: !3, line: 4274, type: !10837, scopeLine: 4277, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!22790 = !DILocalVariable(name: "pdev", arg: 1, scope: !22789, file: !3, line: 4274, type: !10260)
!22791 = !DILocation(line: 4274, column: 56, scope: !22789)
!22792 = !DILocalVariable(name: "pclk", arg: 2, scope: !22789, file: !3, line: 4274, type: !10839)
!22793 = !DILocation(line: 4274, column: 75, scope: !22789)
!22794 = !DILocalVariable(name: "hclk", arg: 3, scope: !22789, file: !3, line: 4275, type: !10839)
!22795 = !DILocation(line: 4275, column: 24, scope: !22789)
!22796 = !DILocalVariable(name: "tx_clk", arg: 4, scope: !22789, file: !3, line: 4275, type: !10839)
!22797 = !DILocation(line: 4275, column: 43, scope: !22789)
!22798 = !DILocalVariable(name: "rx_clk", arg: 5, scope: !22789, file: !3, line: 4276, type: !10839)
!22799 = !DILocation(line: 4276, column: 24, scope: !22789)
!22800 = !DILocalVariable(name: "tsu_clk", arg: 6, scope: !22789, file: !3, line: 4276, type: !10839)
!22801 = !DILocation(line: 4276, column: 45, scope: !22789)
!22802 = !DILocalVariable(name: "init", scope: !22789, file: !3, line: 4278, type: !10948)
!22803 = !DILocation(line: 4278, column: 23, scope: !22789)
!22804 = !DILocalVariable(name: "err", scope: !22789, file: !3, line: 4279, type: !37)
!22805 = !DILocation(line: 4279, column: 6, scope: !22789)
!22806 = !DILocation(line: 4281, column: 22, scope: !22789)
!22807 = !DILocation(line: 4281, column: 28, scope: !22789)
!22808 = !DILocation(line: 4281, column: 34, scope: !22789)
!22809 = !DILocation(line: 4281, column: 40, scope: !22789)
!22810 = !DILocation(line: 4281, column: 48, scope: !22789)
!22811 = !DILocation(line: 4281, column: 56, scope: !22789)
!22812 = !DILocation(line: 4281, column: 8, scope: !22789)
!22813 = !DILocation(line: 4281, column: 6, scope: !22789)
!22814 = !DILocation(line: 4282, column: 6, scope: !22815)
!22815 = distinct !DILexicalBlock(scope: !22789, file: !3, line: 4282, column: 6)
!22816 = !DILocation(line: 4282, column: 6, scope: !22789)
!22817 = !DILocation(line: 4283, column: 10, scope: !22815)
!22818 = !DILocation(line: 4283, column: 3, scope: !22815)
!22819 = !DILocation(line: 4285, column: 23, scope: !22789)
!22820 = !DILocation(line: 4285, column: 29, scope: !22789)
!22821 = !DILocation(line: 4285, column: 9, scope: !22789)
!22822 = !DILocation(line: 4285, column: 7, scope: !22789)
!22823 = !DILocation(line: 4286, column: 7, scope: !22824)
!22824 = distinct !DILexicalBlock(scope: !22789, file: !3, line: 4286, column: 6)
!22825 = !DILocation(line: 4286, column: 6, scope: !22789)
!22826 = !DILocation(line: 4287, column: 3, scope: !22824)
!22827 = !DILocation(line: 4289, column: 7, scope: !22789)
!22828 = !DILocation(line: 4289, column: 12, scope: !22789)
!22829 = !DILocation(line: 4290, column: 7, scope: !22789)
!22830 = !DILocation(line: 4290, column: 11, scope: !22789)
!22831 = !DILocation(line: 4291, column: 7, scope: !22789)
!22832 = !DILocation(line: 4291, column: 13, scope: !22789)
!22833 = !DILocation(line: 4292, column: 7, scope: !22789)
!22834 = !DILocation(line: 4292, column: 19, scope: !22789)
!22835 = !DILocation(line: 4294, column: 2, scope: !22789)
!22836 = !DILocation(line: 4294, column: 8, scope: !22789)
!22837 = !DILocation(line: 4294, column: 13, scope: !22789)
!22838 = !DILocation(line: 4295, column: 2, scope: !22789)
!22839 = !DILocation(line: 4295, column: 8, scope: !22789)
!22840 = !DILocation(line: 4295, column: 11, scope: !22789)
!22841 = !DILocation(line: 4295, column: 16, scope: !22789)
!22842 = !DILocation(line: 4297, column: 31, scope: !22789)
!22843 = !DILocation(line: 4297, column: 37, scope: !22789)
!22844 = !DILocation(line: 4297, column: 43, scope: !22789)
!22845 = !DILocation(line: 4297, column: 49, scope: !22789)
!22846 = !DILocation(line: 4297, column: 12, scope: !22789)
!22847 = !DILocation(line: 4297, column: 3, scope: !22789)
!22848 = !DILocation(line: 4297, column: 10, scope: !22789)
!22849 = !DILocation(line: 4298, column: 14, scope: !22850)
!22850 = distinct !DILexicalBlock(scope: !22789, file: !3, line: 4298, column: 6)
!22851 = !DILocation(line: 4298, column: 13, scope: !22850)
!22852 = !DILocation(line: 4298, column: 6, scope: !22850)
!22853 = !DILocation(line: 4298, column: 6, scope: !22789)
!22854 = !DILocation(line: 4299, column: 19, scope: !22850)
!22855 = !DILocation(line: 4299, column: 18, scope: !22850)
!22856 = !DILocation(line: 4299, column: 10, scope: !22850)
!22857 = !DILocation(line: 4299, column: 3, scope: !22850)
!22858 = !DILocation(line: 4301, column: 28, scope: !22789)
!22859 = !DILocation(line: 4301, column: 27, scope: !22789)
!22860 = !DILocation(line: 4301, column: 8, scope: !22789)
!22861 = !DILocation(line: 4301, column: 6, scope: !22789)
!22862 = !DILocation(line: 4302, column: 6, scope: !22863)
!22863 = distinct !DILexicalBlock(scope: !22789, file: !3, line: 4302, column: 6)
!22864 = !DILocation(line: 4302, column: 6, scope: !22789)
!22865 = !DILocation(line: 4303, column: 3, scope: !22863)
!22866 = !DILocation(line: 4305, column: 3, scope: !22863)
!22867 = !DILocation(line: 4307, column: 2, scope: !22789)
!22868 = !DILocation(line: 4308, column: 1, scope: !22789)
!22869 = distinct !DISubprogram(name: "fu540_c000_init", scope: !3, file: !3, line: 4310, type: !10813, scopeLine: 4311, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!22870 = !DILocalVariable(name: "pdev", arg: 1, scope: !22869, file: !3, line: 4310, type: !10260)
!22871 = !DILocation(line: 4310, column: 52, scope: !22869)
!22872 = !DILocation(line: 4312, column: 45, scope: !22869)
!22873 = !DILocation(line: 4312, column: 14, scope: !22869)
!22874 = !DILocation(line: 4312, column: 2, scope: !22869)
!22875 = !DILocation(line: 4312, column: 8, scope: !22869)
!22876 = !DILocation(line: 4312, column: 12, scope: !22869)
!22877 = !DILocation(line: 4313, column: 13, scope: !22878)
!22878 = distinct !DILexicalBlock(scope: !22869, file: !3, line: 4313, column: 6)
!22879 = !DILocation(line: 4313, column: 19, scope: !22878)
!22880 = !DILocation(line: 4313, column: 6, scope: !22878)
!22881 = !DILocation(line: 4313, column: 6, scope: !22869)
!22882 = !DILocation(line: 4314, column: 18, scope: !22878)
!22883 = !DILocation(line: 4314, column: 24, scope: !22878)
!22884 = !DILocation(line: 4314, column: 10, scope: !22878)
!22885 = !DILocation(line: 4314, column: 3, scope: !22878)
!22886 = !DILocation(line: 4316, column: 19, scope: !22869)
!22887 = !DILocation(line: 4316, column: 9, scope: !22869)
!22888 = !DILocation(line: 4316, column: 2, scope: !22869)
!22889 = !DILocation(line: 4317, column: 1, scope: !22869)
!22890 = distinct !DISubprogram(name: "devm_kzalloc", scope: !3804, file: !3804, line: 215, type: !22891, scopeLine: 216, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!22891 = !DISubroutineType(types: !22892)
!22892 = !{!570, !4172, !594, !1990}
!22893 = !DILocalVariable(name: "dev", arg: 1, scope: !22890, file: !3804, line: 215, type: !4172)
!22894 = !DILocation(line: 215, column: 49, scope: !22890)
!22895 = !DILocalVariable(name: "size", arg: 2, scope: !22890, file: !3804, line: 215, type: !594)
!22896 = !DILocation(line: 215, column: 61, scope: !22890)
!22897 = !DILocalVariable(name: "gfp", arg: 3, scope: !22890, file: !3804, line: 215, type: !1990)
!22898 = !DILocation(line: 215, column: 73, scope: !22890)
!22899 = !DILocation(line: 217, column: 22, scope: !22890)
!22900 = !DILocation(line: 217, column: 27, scope: !22890)
!22901 = !DILocation(line: 217, column: 33, scope: !22890)
!22902 = !DILocation(line: 217, column: 37, scope: !22890)
!22903 = !DILocation(line: 217, column: 9, scope: !22890)
!22904 = !DILocation(line: 217, column: 2, scope: !22890)
!22905 = distinct !DISubprogram(name: "fu540_macb_tx_recalc_rate", scope: !3, file: !3, line: 4224, type: !10975, scopeLine: 4226, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!22906 = !DILocalVariable(name: "hw", arg: 1, scope: !22905, file: !3, line: 4224, type: !10960)
!22907 = !DILocation(line: 4224, column: 63, scope: !22905)
!22908 = !DILocalVariable(name: "parent_rate", arg: 2, scope: !22905, file: !3, line: 4225, type: !317)
!22909 = !DILocation(line: 4225, column: 27, scope: !22905)
!22910 = !DILocation(line: 4227, column: 9, scope: !22905)
!22911 = !DILocation(line: 4227, column: 15, scope: !22905)
!22912 = !DILocation(line: 4227, column: 2, scope: !22905)
!22913 = distinct !DISubprogram(name: "fu540_macb_tx_round_rate", scope: !3, file: !3, line: 4230, type: !10979, scopeLine: 4232, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!22914 = !DILocalVariable(name: "hw", arg: 1, scope: !22913, file: !3, line: 4230, type: !10960)
!22915 = !DILocation(line: 4230, column: 53, scope: !22913)
!22916 = !DILocalVariable(name: "rate", arg: 2, scope: !22913, file: !3, line: 4230, type: !317)
!22917 = !DILocation(line: 4230, column: 71, scope: !22913)
!22918 = !DILocalVariable(name: "parent_rate", arg: 3, scope: !22913, file: !3, line: 4231, type: !2427)
!22919 = !DILocation(line: 4231, column: 25, scope: !22913)
!22920 = !DILocalVariable(name: "__ret_warn_on", scope: !22921, file: !3, line: 4233, type: !37)
!22921 = distinct !DILexicalBlock(scope: !22922, file: !3, line: 4233, column: 6)
!22922 = distinct !DILexicalBlock(scope: !22913, file: !3, line: 4233, column: 6)
!22923 = !DILocation(line: 4233, column: 6, scope: !22921)
!22924 = !DILocation(line: 4233, column: 6, scope: !22925)
!22925 = distinct !DILexicalBlock(scope: !22921, file: !3, line: 4233, column: 6)
!22926 = !DILocation(line: 4233, column: 6, scope: !22927)
!22927 = distinct !DILexicalBlock(scope: !22925, file: !3, line: 4233, column: 6)
!22928 = !DILocation(line: 4233, column: 6, scope: !22929)
!22929 = distinct !DILexicalBlock(scope: !22927, file: !3, line: 4233, column: 6)
!22930 = !DILocation(line: 4233, column: 6, scope: !22931)
!22931 = distinct !DILexicalBlock(scope: !22927, file: !3, line: 4233, column: 6)
!22932 = !{i32 -2137500255, i32 -2137500226, i32 -2137500180, i32 -2137500122, i32 -2137500068, i32 -2137500014, i32 -2137499959, i32 -2137499928}
!22933 = !DILocation(line: 4233, column: 6, scope: !22934)
!22934 = distinct !DILexicalBlock(scope: !22927, file: !3, line: 4233, column: 6)
!22935 = !{i32 -2137499505, i32 -2137499498, i32 -2137499446, i32 -2137499415, i32 -2137499385}
!22936 = !DILocation(line: 4233, column: 6, scope: !22937)
!22937 = distinct !DILexicalBlock(scope: !22927, file: !3, line: 4233, column: 6)
!22938 = !DILocation(line: 4233, column: 6, scope: !22922)
!22939 = !DILocation(line: 4233, column: 6, scope: !22913)
!22940 = !DILocation(line: 4234, column: 3, scope: !22922)
!22941 = !DILocation(line: 4235, column: 11, scope: !22942)
!22942 = distinct !DILexicalBlock(scope: !22922, file: !3, line: 4235, column: 11)
!22943 = !DILocation(line: 4235, column: 16, scope: !22942)
!22944 = !DILocation(line: 4235, column: 11, scope: !22922)
!22945 = !DILocation(line: 4236, column: 3, scope: !22942)
!22946 = !DILocalVariable(name: "__ret_warn_on", scope: !22947, file: !3, line: 4237, type: !37)
!22947 = distinct !DILexicalBlock(scope: !22948, file: !3, line: 4237, column: 11)
!22948 = distinct !DILexicalBlock(scope: !22942, file: !3, line: 4237, column: 11)
!22949 = !DILocation(line: 4237, column: 11, scope: !22947)
!22950 = !DILocation(line: 4237, column: 11, scope: !22951)
!22951 = distinct !DILexicalBlock(scope: !22947, file: !3, line: 4237, column: 11)
!22952 = !DILocation(line: 4237, column: 11, scope: !22953)
!22953 = distinct !DILexicalBlock(scope: !22951, file: !3, line: 4237, column: 11)
!22954 = !DILocation(line: 4237, column: 11, scope: !22955)
!22955 = distinct !DILexicalBlock(scope: !22953, file: !3, line: 4237, column: 11)
!22956 = !DILocation(line: 4237, column: 11, scope: !22957)
!22957 = distinct !DILexicalBlock(scope: !22953, file: !3, line: 4237, column: 11)
!22958 = !{i32 -2137498798, i32 -2137498769, i32 -2137498723, i32 -2137498665, i32 -2137498611, i32 -2137498557, i32 -2137498502, i32 -2137498471}
!22959 = !DILocation(line: 4237, column: 11, scope: !22960)
!22960 = distinct !DILexicalBlock(scope: !22953, file: !3, line: 4237, column: 11)
!22961 = !{i32 -2137498048, i32 -2137498041, i32 -2137497989, i32 -2137497958, i32 -2137497928}
!22962 = !DILocation(line: 4237, column: 11, scope: !22963)
!22963 = distinct !DILexicalBlock(scope: !22953, file: !3, line: 4237, column: 11)
!22964 = !DILocation(line: 4237, column: 11, scope: !22948)
!22965 = !DILocation(line: 4237, column: 11, scope: !22942)
!22966 = !DILocation(line: 4238, column: 3, scope: !22948)
!22967 = !DILocalVariable(name: "__ret_warn_on", scope: !22968, file: !3, line: 4239, type: !37)
!22968 = distinct !DILexicalBlock(scope: !22969, file: !3, line: 4239, column: 11)
!22969 = distinct !DILexicalBlock(scope: !22948, file: !3, line: 4239, column: 11)
!22970 = !DILocation(line: 4239, column: 11, scope: !22968)
!22971 = !DILocation(line: 4239, column: 11, scope: !22972)
!22972 = distinct !DILexicalBlock(scope: !22968, file: !3, line: 4239, column: 11)
!22973 = !DILocation(line: 4239, column: 11, scope: !22974)
!22974 = distinct !DILexicalBlock(scope: !22972, file: !3, line: 4239, column: 11)
!22975 = !DILocation(line: 4239, column: 11, scope: !22976)
!22976 = distinct !DILexicalBlock(scope: !22974, file: !3, line: 4239, column: 11)
!22977 = !DILocation(line: 4239, column: 11, scope: !22978)
!22978 = distinct !DILexicalBlock(scope: !22974, file: !3, line: 4239, column: 11)
!22979 = !{i32 -2137497341, i32 -2137497312, i32 -2137497266, i32 -2137497208, i32 -2137497154, i32 -2137497100, i32 -2137497045, i32 -2137497014}
!22980 = !DILocation(line: 4239, column: 11, scope: !22981)
!22981 = distinct !DILexicalBlock(scope: !22974, file: !3, line: 4239, column: 11)
!22982 = !{i32 -2137496591, i32 -2137496584, i32 -2137496532, i32 -2137496501, i32 -2137496471}
!22983 = !DILocation(line: 4239, column: 11, scope: !22984)
!22984 = distinct !DILexicalBlock(scope: !22974, file: !3, line: 4239, column: 11)
!22985 = !DILocation(line: 4239, column: 11, scope: !22969)
!22986 = !DILocation(line: 4239, column: 11, scope: !22948)
!22987 = !DILocation(line: 4240, column: 3, scope: !22969)
!22988 = !DILocation(line: 4241, column: 11, scope: !22989)
!22989 = distinct !DILexicalBlock(scope: !22969, file: !3, line: 4241, column: 11)
!22990 = !DILocation(line: 4241, column: 16, scope: !22989)
!22991 = !DILocation(line: 4241, column: 11, scope: !22969)
!22992 = !DILocation(line: 4242, column: 3, scope: !22989)
!22993 = !DILocalVariable(name: "__ret_warn_on", scope: !22994, file: !3, line: 4243, type: !37)
!22994 = distinct !DILexicalBlock(scope: !22995, file: !3, line: 4243, column: 11)
!22995 = distinct !DILexicalBlock(scope: !22989, file: !3, line: 4243, column: 11)
!22996 = !DILocation(line: 4243, column: 11, scope: !22994)
!22997 = !DILocation(line: 4243, column: 11, scope: !22998)
!22998 = distinct !DILexicalBlock(scope: !22994, file: !3, line: 4243, column: 11)
!22999 = !DILocation(line: 4243, column: 11, scope: !23000)
!23000 = distinct !DILexicalBlock(scope: !22998, file: !3, line: 4243, column: 11)
!23001 = !DILocation(line: 4243, column: 11, scope: !23002)
!23002 = distinct !DILexicalBlock(scope: !23000, file: !3, line: 4243, column: 11)
!23003 = !DILocation(line: 4243, column: 11, scope: !23004)
!23004 = distinct !DILexicalBlock(scope: !23000, file: !3, line: 4243, column: 11)
!23005 = !{i32 -2137495884, i32 -2137495855, i32 -2137495809, i32 -2137495751, i32 -2137495697, i32 -2137495643, i32 -2137495588, i32 -2137495557}
!23006 = !DILocation(line: 4243, column: 11, scope: !23007)
!23007 = distinct !DILexicalBlock(scope: !23000, file: !3, line: 4243, column: 11)
!23008 = !{i32 -2137495134, i32 -2137495127, i32 -2137495075, i32 -2137495044, i32 -2137495014}
!23009 = !DILocation(line: 4243, column: 11, scope: !23010)
!23010 = distinct !DILexicalBlock(scope: !23000, file: !3, line: 4243, column: 11)
!23011 = !DILocation(line: 4243, column: 11, scope: !22995)
!23012 = !DILocation(line: 4243, column: 11, scope: !22989)
!23013 = !DILocation(line: 4244, column: 3, scope: !22995)
!23014 = !DILocalVariable(name: "__ret_warn_on", scope: !23015, file: !3, line: 4245, type: !37)
!23015 = distinct !DILexicalBlock(scope: !23016, file: !3, line: 4245, column: 11)
!23016 = distinct !DILexicalBlock(scope: !22995, file: !3, line: 4245, column: 11)
!23017 = !DILocation(line: 4245, column: 11, scope: !23015)
!23018 = !DILocation(line: 4245, column: 11, scope: !23019)
!23019 = distinct !DILexicalBlock(scope: !23015, file: !3, line: 4245, column: 11)
!23020 = !DILocation(line: 4245, column: 11, scope: !23021)
!23021 = distinct !DILexicalBlock(scope: !23019, file: !3, line: 4245, column: 11)
!23022 = !DILocation(line: 4245, column: 11, scope: !23023)
!23023 = distinct !DILexicalBlock(scope: !23021, file: !3, line: 4245, column: 11)
!23024 = !DILocation(line: 4245, column: 11, scope: !23025)
!23025 = distinct !DILexicalBlock(scope: !23021, file: !3, line: 4245, column: 11)
!23026 = !{i32 -2137494426, i32 -2137494397, i32 -2137494351, i32 -2137494293, i32 -2137494239, i32 -2137494185, i32 -2137494130, i32 -2137494099}
!23027 = !DILocation(line: 4245, column: 11, scope: !23028)
!23028 = distinct !DILexicalBlock(scope: !23021, file: !3, line: 4245, column: 11)
!23029 = !{i32 -2137493676, i32 -2137493669, i32 -2137493617, i32 -2137493586, i32 -2137493556}
!23030 = !DILocation(line: 4245, column: 11, scope: !23031)
!23031 = distinct !DILexicalBlock(scope: !23021, file: !3, line: 4245, column: 11)
!23032 = !DILocation(line: 4245, column: 11, scope: !23016)
!23033 = !DILocation(line: 4245, column: 11, scope: !22995)
!23034 = !DILocation(line: 4246, column: 3, scope: !23016)
!23035 = !DILocation(line: 4247, column: 11, scope: !23036)
!23036 = distinct !DILexicalBlock(scope: !23016, file: !3, line: 4247, column: 11)
!23037 = !DILocation(line: 4247, column: 16, scope: !23036)
!23038 = !DILocation(line: 4247, column: 11, scope: !23016)
!23039 = !DILocation(line: 4248, column: 3, scope: !23036)
!23040 = !DILocalVariable(name: "__ret_warn_on", scope: !23041, file: !3, line: 4250, type: !37)
!23041 = distinct !DILexicalBlock(scope: !22913, file: !3, line: 4250, column: 2)
!23042 = !DILocation(line: 4250, column: 2, scope: !23041)
!23043 = !DILocation(line: 4250, column: 2, scope: !23044)
!23044 = distinct !DILexicalBlock(scope: !23041, file: !3, line: 4250, column: 2)
!23045 = !DILocation(line: 4250, column: 2, scope: !23046)
!23046 = distinct !DILexicalBlock(scope: !23044, file: !3, line: 4250, column: 2)
!23047 = !DILocation(line: 4250, column: 2, scope: !23048)
!23048 = distinct !DILexicalBlock(scope: !23046, file: !3, line: 4250, column: 2)
!23049 = !DILocation(line: 4250, column: 2, scope: !23050)
!23050 = distinct !DILexicalBlock(scope: !23046, file: !3, line: 4250, column: 2)
!23051 = !{i32 -2137492968, i32 -2137492939, i32 -2137492893, i32 -2137492835, i32 -2137492781, i32 -2137492727, i32 -2137492672, i32 -2137492641}
!23052 = !DILocation(line: 4250, column: 2, scope: !23053)
!23053 = distinct !DILexicalBlock(scope: !23046, file: !3, line: 4250, column: 2)
!23054 = !{i32 -2137492218, i32 -2137492211, i32 -2137492159, i32 -2137492128, i32 -2137492098}
!23055 = !DILocation(line: 4250, column: 2, scope: !23056)
!23056 = distinct !DILexicalBlock(scope: !23046, file: !3, line: 4250, column: 2)
!23057 = !DILocation(line: 4252, column: 2, scope: !22913)
!23058 = !DILocation(line: 4253, column: 1, scope: !22913)
!23059 = distinct !DISubprogram(name: "fu540_macb_tx_set_rate", scope: !3, file: !3, line: 4255, type: !11003, scopeLine: 4257, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!23060 = !DILocalVariable(name: "hw", arg: 1, scope: !23059, file: !3, line: 4255, type: !10960)
!23061 = !DILocation(line: 4255, column: 50, scope: !23059)
!23062 = !DILocalVariable(name: "rate", arg: 2, scope: !23059, file: !3, line: 4255, type: !317)
!23063 = !DILocation(line: 4255, column: 68, scope: !23059)
!23064 = !DILocalVariable(name: "parent_rate", arg: 3, scope: !23059, file: !3, line: 4256, type: !317)
!23065 = !DILocation(line: 4256, column: 21, scope: !23059)
!23066 = !DILocation(line: 4258, column: 34, scope: !23059)
!23067 = !DILocation(line: 4258, column: 38, scope: !23059)
!23068 = !DILocation(line: 4258, column: 9, scope: !23059)
!23069 = !DILocation(line: 4258, column: 7, scope: !23059)
!23070 = !DILocation(line: 4259, column: 6, scope: !23071)
!23071 = distinct !DILexicalBlock(scope: !23059, file: !3, line: 4259, column: 6)
!23072 = !DILocation(line: 4259, column: 11, scope: !23071)
!23073 = !DILocation(line: 4259, column: 6, scope: !23059)
!23074 = !DILocation(line: 4260, column: 16, scope: !23071)
!23075 = !DILocation(line: 4260, column: 22, scope: !23071)
!23076 = !DILocation(line: 4260, column: 3, scope: !23071)
!23077 = !DILocation(line: 4262, column: 16, scope: !23071)
!23078 = !DILocation(line: 4262, column: 22, scope: !23071)
!23079 = !DILocation(line: 4262, column: 3, scope: !23071)
!23080 = !DILocation(line: 4263, column: 15, scope: !23059)
!23081 = !DILocation(line: 4263, column: 2, scope: !23059)
!23082 = !DILocation(line: 4263, column: 8, scope: !23059)
!23083 = !DILocation(line: 4263, column: 13, scope: !23059)
!23084 = !DILocation(line: 4265, column: 2, scope: !23059)
!23085 = distinct !DISubprogram(name: "macb_suspend", scope: !3, file: !3, line: 4658, type: !4205, scopeLine: 4659, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!23086 = !DILocation(line: 407, column: 64, scope: !13125, inlinedAt: !23087)
!23087 = distinct !DILocation(line: 4728, column: 3, scope: !23088)
!23088 = distinct !DILexicalBlock(scope: !23089, file: !3, line: 4722, column: 37)
!23089 = distinct !DILexicalBlock(scope: !23085, file: !3, line: 4722, column: 6)
!23090 = !DILocation(line: 407, column: 84, scope: !13125, inlinedAt: !23087)
!23091 = !DILocation(line: 327, column: 67, scope: !11066, inlinedAt: !23092)
!23092 = distinct !DILocation(line: 4726, column: 3, scope: !23093)
!23093 = distinct !DILexicalBlock(scope: !23094, file: !3, line: 4726, column: 3)
!23094 = distinct !DILexicalBlock(scope: !23095, file: !3, line: 4726, column: 3)
!23095 = distinct !DILexicalBlock(scope: !23096, file: !3, line: 4726, column: 3)
!23096 = distinct !DILexicalBlock(scope: !23097, file: !3, line: 4726, column: 3)
!23097 = distinct !DILexicalBlock(scope: !23088, file: !3, line: 4726, column: 3)
!23098 = !DILocation(line: 407, column: 64, scope: !13125, inlinedAt: !23099)
!23099 = distinct !DILocation(line: 4712, column: 3, scope: !23100)
!23100 = distinct !DILexicalBlock(scope: !23101, file: !3, line: 4670, column: 34)
!23101 = distinct !DILexicalBlock(scope: !23085, file: !3, line: 4670, column: 6)
!23102 = !DILocation(line: 407, column: 84, scope: !13125, inlinedAt: !23099)
!23103 = !DILocation(line: 407, column: 64, scope: !13125, inlinedAt: !23104)
!23104 = distinct !DILocation(line: 4706, column: 5, scope: !23105)
!23105 = distinct !DILexicalBlock(scope: !23106, file: !3, line: 4702, column: 13)
!23106 = distinct !DILexicalBlock(scope: !23107, file: !3, line: 4702, column: 8)
!23107 = distinct !DILexicalBlock(scope: !23108, file: !3, line: 4699, column: 10)
!23108 = distinct !DILexicalBlock(scope: !23100, file: !3, line: 4687, column: 7)
!23109 = !DILocation(line: 407, column: 84, scope: !13125, inlinedAt: !23104)
!23110 = !DILocation(line: 407, column: 64, scope: !13125, inlinedAt: !23111)
!23111 = distinct !DILocation(line: 4694, column: 5, scope: !23112)
!23112 = distinct !DILexicalBlock(scope: !23113, file: !3, line: 4690, column: 13)
!23113 = distinct !DILexicalBlock(scope: !23114, file: !3, line: 4690, column: 8)
!23114 = distinct !DILexicalBlock(scope: !23108, file: !3, line: 4687, column: 24)
!23115 = !DILocation(line: 407, column: 84, scope: !13125, inlinedAt: !23111)
!23116 = !DILocation(line: 327, column: 67, scope: !11066, inlinedAt: !23117)
!23117 = distinct !DILocation(line: 4671, column: 3, scope: !23118)
!23118 = distinct !DILexicalBlock(scope: !23119, file: !3, line: 4671, column: 3)
!23119 = distinct !DILexicalBlock(scope: !23120, file: !3, line: 4671, column: 3)
!23120 = distinct !DILexicalBlock(scope: !23121, file: !3, line: 4671, column: 3)
!23121 = distinct !DILexicalBlock(scope: !23122, file: !3, line: 4671, column: 3)
!23122 = distinct !DILexicalBlock(scope: !23100, file: !3, line: 4671, column: 3)
!23123 = !DILocalVariable(name: "dev", arg: 1, scope: !23085, file: !3, line: 4658, type: !4172)
!23124 = !DILocation(line: 4658, column: 55, scope: !23085)
!23125 = !DILocalVariable(name: "netdev", scope: !23085, file: !3, line: 4660, type: !295)
!23126 = !DILocation(line: 4660, column: 21, scope: !23085)
!23127 = !DILocation(line: 4660, column: 46, scope: !23085)
!23128 = !DILocation(line: 4660, column: 30, scope: !23085)
!23129 = !DILocalVariable(name: "bp", scope: !23085, file: !3, line: 4661, type: !10238)
!23130 = !DILocation(line: 4661, column: 15, scope: !23085)
!23131 = !DILocation(line: 4661, column: 32, scope: !23085)
!23132 = !DILocation(line: 4661, column: 20, scope: !23085)
!23133 = !DILocalVariable(name: "queue", scope: !23085, file: !3, line: 4662, type: !10234)
!23134 = !DILocation(line: 4662, column: 21, scope: !23085)
!23135 = !DILocation(line: 4662, column: 29, scope: !23085)
!23136 = !DILocation(line: 4662, column: 33, scope: !23085)
!23137 = !DILocalVariable(name: "flags", scope: !23085, file: !3, line: 4663, type: !317)
!23138 = !DILocation(line: 4663, column: 16, scope: !23085)
!23139 = !DILocalVariable(name: "q", scope: !23085, file: !3, line: 4664, type: !7)
!23140 = !DILocation(line: 4664, column: 15, scope: !23085)
!23141 = !DILocalVariable(name: "err", scope: !23085, file: !3, line: 4665, type: !37)
!23142 = !DILocation(line: 4665, column: 6, scope: !23085)
!23143 = !DILocation(line: 4667, column: 21, scope: !23144)
!23144 = distinct !DILexicalBlock(scope: !23085, file: !3, line: 4667, column: 6)
!23145 = !DILocation(line: 4667, column: 7, scope: !23144)
!23146 = !DILocation(line: 4667, column: 6, scope: !23085)
!23147 = !DILocation(line: 4668, column: 3, scope: !23144)
!23148 = !DILocation(line: 4670, column: 6, scope: !23101)
!23149 = !DILocation(line: 4670, column: 10, scope: !23101)
!23150 = !DILocation(line: 4670, column: 14, scope: !23101)
!23151 = !DILocation(line: 4670, column: 6, scope: !23085)
!23152 = !DILocation(line: 4671, column: 3, scope: !23100)
!23153 = !DILocation(line: 4671, column: 3, scope: !23122)
!23154 = !DILocalVariable(name: "__dummy", scope: !23155, file: !3, line: 4671, type: !317)
!23155 = distinct !DILexicalBlock(scope: !23121, file: !3, line: 4671, column: 3)
!23156 = !DILocation(line: 4671, column: 3, scope: !23155)
!23157 = !DILocalVariable(name: "__dummy2", scope: !23155, file: !3, line: 4671, type: !317)
!23158 = !DILocation(line: 4671, column: 3, scope: !23121)
!23159 = !DILocation(line: 4671, column: 3, scope: !23120)
!23160 = !DILocation(line: 4671, column: 3, scope: !23161)
!23161 = distinct !DILexicalBlock(scope: !23120, file: !3, line: 4671, column: 3)
!23162 = !DILocalVariable(name: "__dummy", scope: !23163, file: !3, line: 4671, type: !317)
!23163 = distinct !DILexicalBlock(scope: !23164, file: !3, line: 4671, column: 3)
!23164 = distinct !DILexicalBlock(scope: !23161, file: !3, line: 4671, column: 3)
!23165 = !DILocation(line: 4671, column: 3, scope: !23163)
!23166 = !DILocalVariable(name: "__dummy2", scope: !23163, file: !3, line: 4671, type: !317)
!23167 = !DILocation(line: 4671, column: 3, scope: !23164)
!23168 = !DILocation(line: 4671, column: 3, scope: !23119)
!23169 = !{i32 -2137488364}
!23170 = !DILocation(line: 4671, column: 3, scope: !23118)
!23171 = !DILocation(line: 329, column: 10, scope: !11066, inlinedAt: !23117)
!23172 = !DILocation(line: 329, column: 16, scope: !11066, inlinedAt: !23117)
!23173 = !DILocation(line: 4673, column: 3, scope: !23100)
!23174 = !DILocation(line: 4674, column: 3, scope: !23100)
!23175 = !DILocation(line: 4675, column: 10, scope: !23176)
!23176 = distinct !DILexicalBlock(scope: !23100, file: !3, line: 4675, column: 3)
!23177 = !DILocation(line: 4675, column: 23, scope: !23176)
!23178 = !DILocation(line: 4675, column: 27, scope: !23176)
!23179 = !DILocation(line: 4675, column: 21, scope: !23176)
!23180 = !DILocation(line: 4675, column: 8, scope: !23176)
!23181 = !DILocation(line: 4675, column: 35, scope: !23182)
!23182 = distinct !DILexicalBlock(scope: !23176, file: !3, line: 4675, column: 3)
!23183 = !DILocation(line: 4675, column: 39, scope: !23182)
!23184 = !DILocation(line: 4675, column: 43, scope: !23182)
!23185 = !DILocation(line: 4675, column: 37, scope: !23182)
!23186 = !DILocation(line: 4675, column: 3, scope: !23176)
!23187 = !DILocation(line: 4678, column: 4, scope: !23188)
!23188 = distinct !DILexicalBlock(scope: !23182, file: !3, line: 4676, column: 22)
!23189 = !DILocation(line: 4679, column: 4, scope: !23188)
!23190 = !DILocation(line: 4680, column: 8, scope: !23191)
!23191 = distinct !DILexicalBlock(scope: !23188, file: !3, line: 4680, column: 8)
!23192 = !DILocation(line: 4680, column: 12, scope: !23191)
!23193 = !DILocation(line: 4680, column: 17, scope: !23191)
!23194 = !DILocation(line: 4680, column: 8, scope: !23188)
!23195 = !DILocation(line: 4681, column: 5, scope: !23191)
!23196 = !DILocation(line: 4682, column: 3, scope: !23188)
!23197 = !DILocation(line: 4676, column: 8, scope: !23182)
!23198 = !DILocation(line: 4676, column: 13, scope: !23182)
!23199 = !DILocation(line: 4675, column: 3, scope: !23182)
!23200 = distinct !{!23200, !23186, !23201}
!23201 = !DILocation(line: 4682, column: 3, scope: !23176)
!23202 = !DILocation(line: 4686, column: 17, scope: !23100)
!23203 = !DILocation(line: 4686, column: 22, scope: !23100)
!23204 = !DILocation(line: 4686, column: 26, scope: !23100)
!23205 = !DILocation(line: 4686, column: 36, scope: !23100)
!23206 = !DILocation(line: 4686, column: 41, scope: !23100)
!23207 = !DILocation(line: 4686, column: 45, scope: !23100)
!23208 = !DILocation(line: 4686, column: 3, scope: !23100)
!23209 = !DILocation(line: 4687, column: 19, scope: !23108)
!23210 = !DILocation(line: 4687, column: 7, scope: !23108)
!23211 = !DILocation(line: 4687, column: 7, scope: !23100)
!23212 = !DILocation(line: 4688, column: 27, scope: !23114)
!23213 = !DILocation(line: 4688, column: 32, scope: !23114)
!23214 = !DILocation(line: 4688, column: 36, scope: !23114)
!23215 = !DILocation(line: 4688, column: 46, scope: !23114)
!23216 = !DILocation(line: 4689, column: 26, scope: !23114)
!23217 = !DILocation(line: 4689, column: 34, scope: !23114)
!23218 = !DILocation(line: 4689, column: 40, scope: !23114)
!23219 = !DILocation(line: 4689, column: 44, scope: !23114)
!23220 = !DILocation(line: 4688, column: 10, scope: !23114)
!23221 = !DILocation(line: 4688, column: 8, scope: !23114)
!23222 = !DILocation(line: 4690, column: 8, scope: !23113)
!23223 = !DILocation(line: 4690, column: 8, scope: !23114)
!23224 = !DILocation(line: 4691, column: 5, scope: !23112)
!23225 = !DILocation(line: 4694, column: 29, scope: !23112)
!23226 = !DILocation(line: 4694, column: 33, scope: !23112)
!23227 = !DILocation(line: 4694, column: 39, scope: !23112)
!23228 = !DILocation(line: 409, column: 2, scope: !13335, inlinedAt: !23111)
!23229 = !DILocation(line: 409, column: 2, scope: !13340, inlinedAt: !23111)
!23230 = !DILocation(line: 409, column: 2, scope: !13341, inlinedAt: !23111)
!23231 = !DILocation(line: 409, column: 2, scope: !13348, inlinedAt: !23111)
!23232 = !DILocation(line: 409, column: 2, scope: !13351, inlinedAt: !23111)
!23233 = !DILocation(line: 4695, column: 12, scope: !23112)
!23234 = !DILocation(line: 4695, column: 5, scope: !23112)
!23235 = !DILocation(line: 4697, column: 4, scope: !23114)
!23236 = !DILocation(line: 4698, column: 4, scope: !23114)
!23237 = !DILocation(line: 4699, column: 3, scope: !23114)
!23238 = !DILocation(line: 4700, column: 27, scope: !23107)
!23239 = !DILocation(line: 4700, column: 32, scope: !23107)
!23240 = !DILocation(line: 4700, column: 36, scope: !23107)
!23241 = !DILocation(line: 4700, column: 46, scope: !23107)
!23242 = !DILocation(line: 4701, column: 26, scope: !23107)
!23243 = !DILocation(line: 4701, column: 34, scope: !23107)
!23244 = !DILocation(line: 4701, column: 40, scope: !23107)
!23245 = !DILocation(line: 4701, column: 44, scope: !23107)
!23246 = !DILocation(line: 4700, column: 10, scope: !23107)
!23247 = !DILocation(line: 4700, column: 8, scope: !23107)
!23248 = !DILocation(line: 4702, column: 8, scope: !23106)
!23249 = !DILocation(line: 4702, column: 8, scope: !23107)
!23250 = !DILocation(line: 4703, column: 5, scope: !23105)
!23251 = !DILocation(line: 4706, column: 29, scope: !23105)
!23252 = !DILocation(line: 4706, column: 33, scope: !23105)
!23253 = !DILocation(line: 4706, column: 39, scope: !23105)
!23254 = !DILocation(line: 409, column: 2, scope: !13335, inlinedAt: !23104)
!23255 = !DILocation(line: 409, column: 2, scope: !13340, inlinedAt: !23104)
!23256 = !DILocation(line: 409, column: 2, scope: !13341, inlinedAt: !23104)
!23257 = !DILocation(line: 409, column: 2, scope: !13348, inlinedAt: !23104)
!23258 = !DILocation(line: 409, column: 2, scope: !13351, inlinedAt: !23104)
!23259 = !DILocation(line: 4707, column: 12, scope: !23105)
!23260 = !DILocation(line: 4707, column: 5, scope: !23105)
!23261 = !DILocation(line: 4709, column: 4, scope: !23107)
!23262 = !DILocation(line: 4710, column: 4, scope: !23107)
!23263 = !DILocation(line: 4712, column: 27, scope: !23100)
!23264 = !DILocation(line: 4712, column: 31, scope: !23100)
!23265 = !DILocation(line: 4712, column: 37, scope: !23100)
!23266 = !DILocation(line: 409, column: 2, scope: !13335, inlinedAt: !23099)
!23267 = !DILocation(line: 409, column: 2, scope: !13340, inlinedAt: !23099)
!23268 = !DILocation(line: 409, column: 2, scope: !13341, inlinedAt: !23099)
!23269 = !DILocation(line: 409, column: 2, scope: !13348, inlinedAt: !23099)
!23270 = !DILocation(line: 409, column: 2, scope: !13351, inlinedAt: !23099)
!23271 = !DILocation(line: 4714, column: 19, scope: !23100)
!23272 = !DILocation(line: 4714, column: 23, scope: !23100)
!23273 = !DILocation(line: 4714, column: 33, scope: !23100)
!23274 = !DILocation(line: 4714, column: 3, scope: !23100)
!23275 = !DILocation(line: 4715, column: 2, scope: !23100)
!23276 = !DILocation(line: 4717, column: 22, scope: !23085)
!23277 = !DILocation(line: 4717, column: 2, scope: !23085)
!23278 = !DILocation(line: 4718, column: 9, scope: !23279)
!23279 = distinct !DILexicalBlock(scope: !23085, file: !3, line: 4718, column: 2)
!23280 = !DILocation(line: 4718, column: 22, scope: !23279)
!23281 = !DILocation(line: 4718, column: 26, scope: !23279)
!23282 = !DILocation(line: 4718, column: 20, scope: !23279)
!23283 = !DILocation(line: 4718, column: 7, scope: !23279)
!23284 = !DILocation(line: 4718, column: 34, scope: !23285)
!23285 = distinct !DILexicalBlock(scope: !23279, file: !3, line: 4718, column: 2)
!23286 = !DILocation(line: 4718, column: 38, scope: !23285)
!23287 = !DILocation(line: 4718, column: 42, scope: !23285)
!23288 = !DILocation(line: 4718, column: 36, scope: !23285)
!23289 = !DILocation(line: 4718, column: 2, scope: !23279)
!23290 = !DILocation(line: 4720, column: 17, scope: !23285)
!23291 = !DILocation(line: 4720, column: 24, scope: !23285)
!23292 = !DILocation(line: 4720, column: 3, scope: !23285)
!23293 = !DILocation(line: 4719, column: 7, scope: !23285)
!23294 = !DILocation(line: 4719, column: 12, scope: !23285)
!23295 = !DILocation(line: 4718, column: 2, scope: !23285)
!23296 = distinct !{!23296, !23289, !23297}
!23297 = !DILocation(line: 4720, column: 28, scope: !23279)
!23298 = !DILocation(line: 4722, column: 8, scope: !23089)
!23299 = !DILocation(line: 4722, column: 12, scope: !23089)
!23300 = !DILocation(line: 4722, column: 16, scope: !23089)
!23301 = !DILocation(line: 4722, column: 6, scope: !23085)
!23302 = !DILocation(line: 4723, column: 3, scope: !23088)
!23303 = !DILocation(line: 4724, column: 16, scope: !23088)
!23304 = !DILocation(line: 4724, column: 20, scope: !23088)
!23305 = !DILocation(line: 4724, column: 3, scope: !23088)
!23306 = !DILocation(line: 4725, column: 3, scope: !23088)
!23307 = !DILocation(line: 4726, column: 3, scope: !23088)
!23308 = !DILocation(line: 4726, column: 3, scope: !23097)
!23309 = !DILocalVariable(name: "__dummy", scope: !23310, file: !3, line: 4726, type: !317)
!23310 = distinct !DILexicalBlock(scope: !23096, file: !3, line: 4726, column: 3)
!23311 = !DILocation(line: 4726, column: 3, scope: !23310)
!23312 = !DILocalVariable(name: "__dummy2", scope: !23310, file: !3, line: 4726, type: !317)
!23313 = !DILocation(line: 4726, column: 3, scope: !23096)
!23314 = !DILocation(line: 4726, column: 3, scope: !23095)
!23315 = !DILocation(line: 4726, column: 3, scope: !23316)
!23316 = distinct !DILexicalBlock(scope: !23095, file: !3, line: 4726, column: 3)
!23317 = !DILocalVariable(name: "__dummy", scope: !23318, file: !3, line: 4726, type: !317)
!23318 = distinct !DILexicalBlock(scope: !23319, file: !3, line: 4726, column: 3)
!23319 = distinct !DILexicalBlock(scope: !23316, file: !3, line: 4726, column: 3)
!23320 = !DILocation(line: 4726, column: 3, scope: !23318)
!23321 = !DILocalVariable(name: "__dummy2", scope: !23318, file: !3, line: 4726, type: !317)
!23322 = !DILocation(line: 4726, column: 3, scope: !23319)
!23323 = !DILocation(line: 4726, column: 3, scope: !23094)
!23324 = !{i32 -2137485980}
!23325 = !DILocation(line: 4726, column: 3, scope: !23093)
!23326 = !DILocation(line: 329, column: 10, scope: !11066, inlinedAt: !23092)
!23327 = !DILocation(line: 329, column: 16, scope: !11066, inlinedAt: !23092)
!23328 = !DILocation(line: 4727, column: 17, scope: !23088)
!23329 = !DILocation(line: 4727, column: 3, scope: !23088)
!23330 = !DILocation(line: 4728, column: 27, scope: !23088)
!23331 = !DILocation(line: 4728, column: 31, scope: !23088)
!23332 = !DILocation(line: 4728, column: 37, scope: !23088)
!23333 = !DILocation(line: 409, column: 2, scope: !13335, inlinedAt: !23087)
!23334 = !DILocation(line: 409, column: 2, scope: !13340, inlinedAt: !23087)
!23335 = !DILocation(line: 409, column: 2, scope: !13341, inlinedAt: !23087)
!23336 = !DILocation(line: 409, column: 2, scope: !13348, inlinedAt: !23087)
!23337 = !DILocation(line: 409, column: 2, scope: !13351, inlinedAt: !23087)
!23338 = !DILocation(line: 4729, column: 2, scope: !23088)
!23339 = !DILocation(line: 4731, column: 8, scope: !23340)
!23340 = distinct !DILexicalBlock(scope: !23085, file: !3, line: 4731, column: 6)
!23341 = !DILocation(line: 4731, column: 12, scope: !23340)
!23342 = !DILocation(line: 4731, column: 17, scope: !23340)
!23343 = !DILocation(line: 4731, column: 6, scope: !23085)
!23344 = !DILocalVariable(name: "__v", scope: !23345, file: !3, line: 4732, type: !707)
!23345 = distinct !DILexicalBlock(scope: !23340, file: !3, line: 4732, column: 23)
!23346 = !DILocation(line: 4732, column: 23, scope: !23345)
!23347 = !DILocation(line: 4732, column: 23, scope: !23348)
!23348 = distinct !DILexicalBlock(scope: !23345, file: !3, line: 4732, column: 23)
!23349 = !DILocation(line: 4732, column: 3, scope: !23340)
!23350 = !DILocation(line: 4732, column: 7, scope: !23340)
!23351 = !DILocation(line: 4732, column: 15, scope: !23340)
!23352 = !DILocation(line: 4732, column: 21, scope: !23340)
!23353 = !DILocation(line: 4734, column: 6, scope: !23354)
!23354 = distinct !DILexicalBlock(scope: !23085, file: !3, line: 4734, column: 6)
!23355 = !DILocation(line: 4734, column: 14, scope: !23354)
!23356 = !DILocation(line: 4734, column: 26, scope: !23354)
!23357 = !DILocation(line: 4734, column: 6, scope: !23085)
!23358 = !DILocation(line: 4735, column: 23, scope: !23354)
!23359 = !DILocation(line: 4735, column: 3, scope: !23354)
!23360 = !DILocation(line: 4735, column: 7, scope: !23354)
!23361 = !DILocation(line: 4735, column: 15, scope: !23354)
!23362 = !DILocation(line: 4735, column: 21, scope: !23354)
!23363 = !DILocation(line: 4737, column: 6, scope: !23364)
!23364 = distinct !DILexicalBlock(scope: !23085, file: !3, line: 4737, column: 6)
!23365 = !DILocation(line: 4737, column: 10, scope: !23364)
!23366 = !DILocation(line: 4737, column: 6, scope: !23085)
!23367 = !DILocation(line: 4738, column: 3, scope: !23364)
!23368 = !DILocation(line: 4738, column: 7, scope: !23364)
!23369 = !DILocation(line: 4738, column: 17, scope: !23364)
!23370 = !DILocation(line: 4738, column: 28, scope: !23364)
!23371 = !DILocation(line: 4739, column: 25, scope: !23372)
!23372 = distinct !DILexicalBlock(scope: !23085, file: !3, line: 4739, column: 6)
!23373 = !DILocation(line: 4739, column: 7, scope: !23372)
!23374 = !DILocation(line: 4739, column: 6, scope: !23085)
!23375 = !DILocation(line: 4740, column: 28, scope: !23372)
!23376 = !DILocation(line: 4740, column: 3, scope: !23372)
!23377 = !DILocation(line: 4742, column: 2, scope: !23085)
!23378 = !DILocation(line: 4743, column: 1, scope: !23085)
!23379 = distinct !DISubprogram(name: "macb_resume", scope: !3, file: !3, line: 4745, type: !4205, scopeLine: 4746, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!23380 = !DILocation(line: 407, column: 64, scope: !13125, inlinedAt: !23381)
!23381 = distinct !DILocation(line: 4785, column: 3, scope: !23382)
!23382 = distinct !DILexicalBlock(scope: !23383, file: !3, line: 4760, column: 34)
!23383 = distinct !DILexicalBlock(scope: !23379, file: !3, line: 4760, column: 6)
!23384 = !DILocation(line: 407, column: 84, scope: !13125, inlinedAt: !23381)
!23385 = !DILocation(line: 407, column: 64, scope: !13125, inlinedAt: !23386)
!23386 = distinct !DILocation(line: 4782, column: 4, scope: !23387)
!23387 = distinct !DILexicalBlock(scope: !23388, file: !3, line: 4778, column: 12)
!23388 = distinct !DILexicalBlock(scope: !23382, file: !3, line: 4778, column: 7)
!23389 = !DILocation(line: 407, column: 84, scope: !13125, inlinedAt: !23386)
!23390 = !DILocation(line: 327, column: 67, scope: !11066, inlinedAt: !23391)
!23391 = distinct !DILocation(line: 4761, column: 3, scope: !23392)
!23392 = distinct !DILexicalBlock(scope: !23393, file: !3, line: 4761, column: 3)
!23393 = distinct !DILexicalBlock(scope: !23394, file: !3, line: 4761, column: 3)
!23394 = distinct !DILexicalBlock(scope: !23395, file: !3, line: 4761, column: 3)
!23395 = distinct !DILexicalBlock(scope: !23396, file: !3, line: 4761, column: 3)
!23396 = distinct !DILexicalBlock(scope: !23382, file: !3, line: 4761, column: 3)
!23397 = !DILocalVariable(name: "dev", arg: 1, scope: !23379, file: !3, line: 4745, type: !4172)
!23398 = !DILocation(line: 4745, column: 54, scope: !23379)
!23399 = !DILocalVariable(name: "netdev", scope: !23379, file: !3, line: 4747, type: !295)
!23400 = !DILocation(line: 4747, column: 21, scope: !23379)
!23401 = !DILocation(line: 4747, column: 46, scope: !23379)
!23402 = !DILocation(line: 4747, column: 30, scope: !23379)
!23403 = !DILocalVariable(name: "bp", scope: !23379, file: !3, line: 4748, type: !10238)
!23404 = !DILocation(line: 4748, column: 15, scope: !23379)
!23405 = !DILocation(line: 4748, column: 32, scope: !23379)
!23406 = !DILocation(line: 4748, column: 20, scope: !23379)
!23407 = !DILocalVariable(name: "queue", scope: !23379, file: !3, line: 4749, type: !10234)
!23408 = !DILocation(line: 4749, column: 21, scope: !23379)
!23409 = !DILocation(line: 4749, column: 29, scope: !23379)
!23410 = !DILocation(line: 4749, column: 33, scope: !23379)
!23411 = !DILocalVariable(name: "flags", scope: !23379, file: !3, line: 4750, type: !317)
!23412 = !DILocation(line: 4750, column: 16, scope: !23379)
!23413 = !DILocalVariable(name: "q", scope: !23379, file: !3, line: 4751, type: !7)
!23414 = !DILocation(line: 4751, column: 15, scope: !23379)
!23415 = !DILocalVariable(name: "err", scope: !23379, file: !3, line: 4752, type: !37)
!23416 = !DILocation(line: 4752, column: 6, scope: !23379)
!23417 = !DILocation(line: 4754, column: 21, scope: !23418)
!23418 = distinct !DILexicalBlock(scope: !23379, file: !3, line: 4754, column: 6)
!23419 = !DILocation(line: 4754, column: 7, scope: !23418)
!23420 = !DILocation(line: 4754, column: 6, scope: !23379)
!23421 = !DILocation(line: 4755, column: 3, scope: !23418)
!23422 = !DILocation(line: 4757, column: 25, scope: !23423)
!23423 = distinct !DILexicalBlock(scope: !23379, file: !3, line: 4757, column: 6)
!23424 = !DILocation(line: 4757, column: 7, scope: !23423)
!23425 = !DILocation(line: 4757, column: 6, scope: !23379)
!23426 = !DILocation(line: 4758, column: 27, scope: !23423)
!23427 = !DILocation(line: 4758, column: 3, scope: !23423)
!23428 = !DILocation(line: 4760, column: 6, scope: !23383)
!23429 = !DILocation(line: 4760, column: 10, scope: !23383)
!23430 = !DILocation(line: 4760, column: 14, scope: !23383)
!23431 = !DILocation(line: 4760, column: 6, scope: !23379)
!23432 = !DILocation(line: 4761, column: 3, scope: !23382)
!23433 = !DILocation(line: 4761, column: 3, scope: !23396)
!23434 = !DILocalVariable(name: "__dummy", scope: !23435, file: !3, line: 4761, type: !317)
!23435 = distinct !DILexicalBlock(scope: !23395, file: !3, line: 4761, column: 3)
!23436 = !DILocation(line: 4761, column: 3, scope: !23435)
!23437 = !DILocalVariable(name: "__dummy2", scope: !23435, file: !3, line: 4761, type: !317)
!23438 = !DILocation(line: 4761, column: 3, scope: !23395)
!23439 = !DILocation(line: 4761, column: 3, scope: !23394)
!23440 = !DILocation(line: 4761, column: 3, scope: !23441)
!23441 = distinct !DILexicalBlock(scope: !23394, file: !3, line: 4761, column: 3)
!23442 = !DILocalVariable(name: "__dummy", scope: !23443, file: !3, line: 4761, type: !317)
!23443 = distinct !DILexicalBlock(scope: !23444, file: !3, line: 4761, column: 3)
!23444 = distinct !DILexicalBlock(scope: !23441, file: !3, line: 4761, column: 3)
!23445 = !DILocation(line: 4761, column: 3, scope: !23443)
!23446 = !DILocalVariable(name: "__dummy2", scope: !23443, file: !3, line: 4761, type: !317)
!23447 = !DILocation(line: 4761, column: 3, scope: !23444)
!23448 = !DILocation(line: 4761, column: 3, scope: !23393)
!23449 = !{i32 -2137484386}
!23450 = !DILocation(line: 4761, column: 3, scope: !23392)
!23451 = !DILocation(line: 329, column: 10, scope: !11066, inlinedAt: !23391)
!23452 = !DILocation(line: 329, column: 16, scope: !11066, inlinedAt: !23391)
!23453 = !DILocation(line: 4763, column: 19, scope: !23454)
!23454 = distinct !DILexicalBlock(scope: !23382, file: !3, line: 4763, column: 7)
!23455 = !DILocation(line: 4763, column: 7, scope: !23454)
!23456 = !DILocation(line: 4763, column: 7, scope: !23382)
!23457 = !DILocation(line: 4764, column: 4, scope: !23458)
!23458 = distinct !DILexicalBlock(scope: !23454, file: !3, line: 4763, column: 24)
!23459 = !DILocation(line: 4765, column: 4, scope: !23458)
!23460 = !DILocation(line: 4766, column: 3, scope: !23458)
!23461 = !DILocation(line: 4767, column: 4, scope: !23462)
!23462 = distinct !DILexicalBlock(scope: !23454, file: !3, line: 4766, column: 10)
!23463 = !DILocation(line: 4768, column: 4, scope: !23462)
!23464 = !DILocation(line: 4771, column: 3, scope: !23382)
!23465 = !DILocation(line: 4772, column: 7, scope: !23466)
!23466 = distinct !DILexicalBlock(scope: !23382, file: !3, line: 4772, column: 7)
!23467 = !DILocation(line: 4772, column: 11, scope: !23466)
!23468 = !DILocation(line: 4772, column: 16, scope: !23466)
!23469 = !DILocation(line: 4772, column: 7, scope: !23382)
!23470 = !DILocation(line: 4773, column: 4, scope: !23466)
!23471 = !DILocation(line: 4775, column: 17, scope: !23382)
!23472 = !DILocation(line: 4775, column: 22, scope: !23382)
!23473 = !DILocation(line: 4775, column: 26, scope: !23382)
!23474 = !DILocation(line: 4775, column: 36, scope: !23382)
!23475 = !DILocation(line: 4775, column: 41, scope: !23382)
!23476 = !DILocation(line: 4775, column: 45, scope: !23382)
!23477 = !DILocation(line: 4775, column: 3, scope: !23382)
!23478 = !DILocation(line: 4776, column: 26, scope: !23382)
!23479 = !DILocation(line: 4776, column: 31, scope: !23382)
!23480 = !DILocation(line: 4776, column: 35, scope: !23382)
!23481 = !DILocation(line: 4776, column: 45, scope: !23382)
!23482 = !DILocation(line: 4777, column: 25, scope: !23382)
!23483 = !DILocation(line: 4777, column: 33, scope: !23382)
!23484 = !DILocation(line: 4777, column: 39, scope: !23382)
!23485 = !DILocation(line: 4777, column: 43, scope: !23382)
!23486 = !DILocation(line: 4776, column: 9, scope: !23382)
!23487 = !DILocation(line: 4776, column: 7, scope: !23382)
!23488 = !DILocation(line: 4778, column: 7, scope: !23388)
!23489 = !DILocation(line: 4778, column: 7, scope: !23382)
!23490 = !DILocation(line: 4779, column: 4, scope: !23387)
!23491 = !DILocation(line: 4782, column: 28, scope: !23387)
!23492 = !DILocation(line: 4782, column: 32, scope: !23387)
!23493 = !DILocation(line: 4782, column: 38, scope: !23387)
!23494 = !DILocation(line: 409, column: 2, scope: !13335, inlinedAt: !23386)
!23495 = !DILocation(line: 409, column: 2, scope: !13340, inlinedAt: !23386)
!23496 = !DILocation(line: 409, column: 2, scope: !13341, inlinedAt: !23386)
!23497 = !DILocation(line: 409, column: 2, scope: !13348, inlinedAt: !23386)
!23498 = !DILocation(line: 409, column: 2, scope: !13351, inlinedAt: !23386)
!23499 = !DILocation(line: 4783, column: 11, scope: !23387)
!23500 = !DILocation(line: 4783, column: 4, scope: !23387)
!23501 = !DILocation(line: 4785, column: 27, scope: !23382)
!23502 = !DILocation(line: 4785, column: 31, scope: !23382)
!23503 = !DILocation(line: 4785, column: 37, scope: !23382)
!23504 = !DILocation(line: 409, column: 2, scope: !13335, inlinedAt: !23381)
!23505 = !DILocation(line: 409, column: 2, scope: !13340, inlinedAt: !23381)
!23506 = !DILocation(line: 409, column: 2, scope: !13341, inlinedAt: !23381)
!23507 = !DILocation(line: 409, column: 2, scope: !13348, inlinedAt: !23381)
!23508 = !DILocation(line: 409, column: 2, scope: !13351, inlinedAt: !23381)
!23509 = !DILocation(line: 4787, column: 20, scope: !23382)
!23510 = !DILocation(line: 4787, column: 24, scope: !23382)
!23511 = !DILocation(line: 4787, column: 34, scope: !23382)
!23512 = !DILocation(line: 4787, column: 3, scope: !23382)
!23513 = !DILocation(line: 4792, column: 3, scope: !23382)
!23514 = !DILocation(line: 4793, column: 16, scope: !23382)
!23515 = !DILocation(line: 4793, column: 20, scope: !23382)
!23516 = !DILocation(line: 4793, column: 3, scope: !23382)
!23517 = !DILocation(line: 4794, column: 3, scope: !23382)
!23518 = !DILocation(line: 4795, column: 2, scope: !23382)
!23519 = !DILocation(line: 4797, column: 9, scope: !23520)
!23520 = distinct !DILexicalBlock(scope: !23379, file: !3, line: 4797, column: 2)
!23521 = !DILocation(line: 4797, column: 22, scope: !23520)
!23522 = !DILocation(line: 4797, column: 26, scope: !23520)
!23523 = !DILocation(line: 4797, column: 20, scope: !23520)
!23524 = !DILocation(line: 4797, column: 7, scope: !23520)
!23525 = !DILocation(line: 4797, column: 34, scope: !23526)
!23526 = distinct !DILexicalBlock(scope: !23520, file: !3, line: 4797, column: 2)
!23527 = !DILocation(line: 4797, column: 38, scope: !23526)
!23528 = !DILocation(line: 4797, column: 42, scope: !23526)
!23529 = !DILocation(line: 4797, column: 36, scope: !23526)
!23530 = !DILocation(line: 4797, column: 2, scope: !23520)
!23531 = !DILocation(line: 4799, column: 16, scope: !23526)
!23532 = !DILocation(line: 4799, column: 23, scope: !23526)
!23533 = !DILocation(line: 4799, column: 3, scope: !23526)
!23534 = !DILocation(line: 4798, column: 7, scope: !23526)
!23535 = !DILocation(line: 4798, column: 12, scope: !23526)
!23536 = !DILocation(line: 4797, column: 2, scope: !23526)
!23537 = distinct !{!23537, !23530, !23538}
!23538 = !DILocation(line: 4799, column: 27, scope: !23520)
!23539 = !DILocation(line: 4801, column: 6, scope: !23540)
!23540 = distinct !DILexicalBlock(scope: !23379, file: !3, line: 4801, column: 6)
!23541 = !DILocation(line: 4801, column: 14, scope: !23540)
!23542 = !DILocation(line: 4801, column: 26, scope: !23540)
!23543 = !DILocation(line: 4801, column: 6, scope: !23379)
!23544 = !DILocation(line: 4802, column: 3, scope: !23540)
!23545 = !DILocation(line: 4804, column: 8, scope: !23546)
!23546 = distinct !DILexicalBlock(scope: !23379, file: !3, line: 4804, column: 6)
!23547 = !DILocation(line: 4804, column: 12, scope: !23546)
!23548 = !DILocation(line: 4804, column: 17, scope: !23546)
!23549 = !DILocation(line: 4804, column: 6, scope: !23379)
!23550 = !DILocation(line: 4805, column: 3, scope: !23551)
!23551 = distinct !DILexicalBlock(scope: !23552, file: !3, line: 4805, column: 3)
!23552 = distinct !DILexicalBlock(scope: !23546, file: !3, line: 4805, column: 3)
!23553 = !DILocation(line: 4805, column: 3, scope: !23552)
!23554 = !DILocation(line: 4805, column: 3, scope: !23546)
!23555 = !DILocation(line: 4807, column: 2, scope: !23379)
!23556 = !DILocation(line: 4808, column: 15, scope: !23379)
!23557 = !DILocation(line: 4808, column: 2, scope: !23379)
!23558 = !DILocation(line: 4809, column: 19, scope: !23379)
!23559 = !DILocation(line: 4809, column: 2, scope: !23379)
!23560 = !DILocation(line: 4810, column: 24, scope: !23379)
!23561 = !DILocation(line: 4810, column: 2, scope: !23379)
!23562 = !DILocation(line: 4811, column: 2, scope: !23379)
!23563 = !DILocation(line: 4812, column: 16, scope: !23379)
!23564 = !DILocation(line: 4812, column: 20, scope: !23379)
!23565 = !DILocation(line: 4812, column: 2, scope: !23379)
!23566 = !DILocation(line: 4813, column: 2, scope: !23379)
!23567 = !DILocation(line: 4815, column: 22, scope: !23379)
!23568 = !DILocation(line: 4815, column: 2, scope: !23379)
!23569 = !DILocation(line: 4816, column: 6, scope: !23570)
!23570 = distinct !DILexicalBlock(scope: !23379, file: !3, line: 4816, column: 6)
!23571 = !DILocation(line: 4816, column: 10, scope: !23570)
!23572 = !DILocation(line: 4816, column: 6, scope: !23379)
!23573 = !DILocation(line: 4817, column: 3, scope: !23570)
!23574 = !DILocation(line: 4817, column: 7, scope: !23570)
!23575 = !DILocation(line: 4817, column: 17, scope: !23570)
!23576 = !DILocation(line: 4817, column: 26, scope: !23570)
!23577 = !DILocation(line: 4819, column: 2, scope: !23379)
!23578 = !DILocation(line: 4820, column: 1, scope: !23379)
!23579 = distinct !DISubprogram(name: "macb_runtime_suspend", scope: !3, file: !3, line: 4822, type: !4205, scopeLine: 4823, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!23580 = !DILocalVariable(name: "dev", arg: 1, scope: !23579, file: !3, line: 4822, type: !4172)
!23581 = !DILocation(line: 4822, column: 63, scope: !23579)
!23582 = !DILocalVariable(name: "netdev", scope: !23579, file: !3, line: 4824, type: !295)
!23583 = !DILocation(line: 4824, column: 21, scope: !23579)
!23584 = !DILocation(line: 4824, column: 46, scope: !23579)
!23585 = !DILocation(line: 4824, column: 30, scope: !23579)
!23586 = !DILocalVariable(name: "bp", scope: !23579, file: !3, line: 4825, type: !10238)
!23587 = !DILocation(line: 4825, column: 15, scope: !23579)
!23588 = !DILocation(line: 4825, column: 32, scope: !23579)
!23589 = !DILocation(line: 4825, column: 20, scope: !23579)
!23590 = !DILocation(line: 4827, column: 26, scope: !23591)
!23591 = distinct !DILexicalBlock(scope: !23579, file: !3, line: 4827, column: 6)
!23592 = !DILocation(line: 4827, column: 8, scope: !23591)
!23593 = !DILocation(line: 4827, column: 6, scope: !23579)
!23594 = !DILocation(line: 4828, column: 25, scope: !23595)
!23595 = distinct !DILexicalBlock(scope: !23591, file: !3, line: 4827, column: 33)
!23596 = !DILocation(line: 4828, column: 29, scope: !23595)
!23597 = !DILocation(line: 4828, column: 3, scope: !23595)
!23598 = !DILocation(line: 4829, column: 25, scope: !23595)
!23599 = !DILocation(line: 4829, column: 29, scope: !23595)
!23600 = !DILocation(line: 4829, column: 3, scope: !23595)
!23601 = !DILocation(line: 4830, column: 25, scope: !23595)
!23602 = !DILocation(line: 4830, column: 29, scope: !23595)
!23603 = !DILocation(line: 4830, column: 3, scope: !23595)
!23604 = !DILocation(line: 4831, column: 25, scope: !23595)
!23605 = !DILocation(line: 4831, column: 29, scope: !23595)
!23606 = !DILocation(line: 4831, column: 3, scope: !23595)
!23607 = !DILocation(line: 4832, column: 2, scope: !23595)
!23608 = !DILocation(line: 4833, column: 24, scope: !23579)
!23609 = !DILocation(line: 4833, column: 28, scope: !23579)
!23610 = !DILocation(line: 4833, column: 2, scope: !23579)
!23611 = !DILocation(line: 4835, column: 2, scope: !23579)
!23612 = distinct !DISubprogram(name: "macb_runtime_resume", scope: !3, file: !3, line: 4838, type: !4205, scopeLine: 4839, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!23613 = !DILocalVariable(name: "dev", arg: 1, scope: !23612, file: !3, line: 4838, type: !4172)
!23614 = !DILocation(line: 4838, column: 62, scope: !23612)
!23615 = !DILocalVariable(name: "netdev", scope: !23612, file: !3, line: 4840, type: !295)
!23616 = !DILocation(line: 4840, column: 21, scope: !23612)
!23617 = !DILocation(line: 4840, column: 46, scope: !23612)
!23618 = !DILocation(line: 4840, column: 30, scope: !23612)
!23619 = !DILocalVariable(name: "bp", scope: !23612, file: !3, line: 4841, type: !10238)
!23620 = !DILocation(line: 4841, column: 15, scope: !23612)
!23621 = !DILocation(line: 4841, column: 32, scope: !23612)
!23622 = !DILocation(line: 4841, column: 20, scope: !23612)
!23623 = !DILocation(line: 4843, column: 26, scope: !23624)
!23624 = distinct !DILexicalBlock(scope: !23612, file: !3, line: 4843, column: 6)
!23625 = !DILocation(line: 4843, column: 8, scope: !23624)
!23626 = !DILocation(line: 4843, column: 6, scope: !23612)
!23627 = !DILocation(line: 4844, column: 22, scope: !23628)
!23628 = distinct !DILexicalBlock(scope: !23624, file: !3, line: 4843, column: 33)
!23629 = !DILocation(line: 4844, column: 26, scope: !23628)
!23630 = !DILocation(line: 4844, column: 3, scope: !23628)
!23631 = !DILocation(line: 4845, column: 22, scope: !23628)
!23632 = !DILocation(line: 4845, column: 26, scope: !23628)
!23633 = !DILocation(line: 4845, column: 3, scope: !23628)
!23634 = !DILocation(line: 4846, column: 22, scope: !23628)
!23635 = !DILocation(line: 4846, column: 26, scope: !23628)
!23636 = !DILocation(line: 4846, column: 3, scope: !23628)
!23637 = !DILocation(line: 4847, column: 22, scope: !23628)
!23638 = !DILocation(line: 4847, column: 26, scope: !23628)
!23639 = !DILocation(line: 4847, column: 3, scope: !23628)
!23640 = !DILocation(line: 4848, column: 2, scope: !23628)
!23641 = !DILocation(line: 4849, column: 21, scope: !23612)
!23642 = !DILocation(line: 4849, column: 25, scope: !23612)
!23643 = !DILocation(line: 4849, column: 2, scope: !23612)
!23644 = !DILocation(line: 4851, column: 2, scope: !23612)
!23645 = distinct !DISubprogram(name: "gem_wol_interrupt", scope: !3, file: !3, line: 1550, type: !4845, scopeLine: 1551, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!23646 = !DILocation(line: 392, column: 53, scope: !12907, inlinedAt: !23647)
!23647 = distinct !DILocation(line: 1574, column: 2, scope: !23645)
!23648 = !DILocation(line: 352, column: 51, scope: !12913, inlinedAt: !23649)
!23649 = distinct !DILocation(line: 1561, column: 2, scope: !23645)
!23650 = !DILocalVariable(name: "irq", arg: 1, scope: !23645, file: !3, line: 1550, type: !37)
!23651 = !DILocation(line: 1550, column: 42, scope: !23645)
!23652 = !DILocalVariable(name: "dev_id", arg: 2, scope: !23645, file: !3, line: 1550, type: !570)
!23653 = !DILocation(line: 1550, column: 53, scope: !23645)
!23654 = !DILocalVariable(name: "queue", scope: !23645, file: !3, line: 1552, type: !10234)
!23655 = !DILocation(line: 1552, column: 21, scope: !23645)
!23656 = !DILocation(line: 1552, column: 29, scope: !23645)
!23657 = !DILocalVariable(name: "bp", scope: !23645, file: !3, line: 1553, type: !10238)
!23658 = !DILocation(line: 1553, column: 15, scope: !23645)
!23659 = !DILocation(line: 1553, column: 20, scope: !23645)
!23660 = !DILocation(line: 1553, column: 27, scope: !23645)
!23661 = !DILocalVariable(name: "status", scope: !23645, file: !3, line: 1554, type: !707)
!23662 = !DILocation(line: 1554, column: 6, scope: !23645)
!23663 = !DILocation(line: 1556, column: 11, scope: !23645)
!23664 = !DILocation(line: 1556, column: 9, scope: !23645)
!23665 = !DILocation(line: 1558, column: 6, scope: !23666)
!23666 = distinct !DILexicalBlock(scope: !23645, file: !3, line: 1558, column: 6)
!23667 = !DILocation(line: 1558, column: 6, scope: !23645)
!23668 = !DILocation(line: 1559, column: 3, scope: !23666)
!23669 = !DILocation(line: 1561, column: 13, scope: !23645)
!23670 = !DILocation(line: 1561, column: 17, scope: !23645)
!23671 = !DILocation(line: 354, column: 2, scope: !12944, inlinedAt: !23649)
!23672 = !DILocation(line: 354, column: 2, scope: !12947, inlinedAt: !23649)
!23673 = !DILocation(line: 1563, column: 6, scope: !23674)
!23674 = distinct !DILexicalBlock(scope: !23645, file: !3, line: 1563, column: 6)
!23675 = !DILocation(line: 1563, column: 13, scope: !23674)
!23676 = !DILocation(line: 1563, column: 6, scope: !23645)
!23677 = !DILocation(line: 1564, column: 3, scope: !23678)
!23678 = distinct !DILexicalBlock(scope: !23674, file: !3, line: 1563, column: 29)
!23679 = !DILocation(line: 1565, column: 3, scope: !23678)
!23680 = !DILocation(line: 1566, column: 3, scope: !23681)
!23681 = distinct !DILexicalBlock(scope: !23682, file: !3, line: 1566, column: 3)
!23682 = distinct !DILexicalBlock(scope: !23678, file: !3, line: 1566, column: 3)
!23683 = !DILocation(line: 1566, column: 3, scope: !23682)
!23684 = !DILocation(line: 1569, column: 7, scope: !23685)
!23685 = distinct !DILexicalBlock(scope: !23678, file: !3, line: 1569, column: 7)
!23686 = !DILocation(line: 1569, column: 11, scope: !23685)
!23687 = !DILocation(line: 1569, column: 16, scope: !23685)
!23688 = !DILocation(line: 1569, column: 7, scope: !23678)
!23689 = !DILocation(line: 1570, column: 4, scope: !23685)
!23690 = !DILocation(line: 1571, column: 20, scope: !23678)
!23691 = !DILocation(line: 1571, column: 24, scope: !23678)
!23692 = !DILocation(line: 1571, column: 30, scope: !23678)
!23693 = !DILocation(line: 1571, column: 3, scope: !23678)
!23694 = !DILocation(line: 1572, column: 2, scope: !23678)
!23695 = !DILocation(line: 1574, column: 15, scope: !23645)
!23696 = !DILocation(line: 1574, column: 19, scope: !23645)
!23697 = !DILocation(line: 394, column: 2, scope: !13091, inlinedAt: !23647)
!23698 = !DILocation(line: 394, column: 2, scope: !13094, inlinedAt: !23647)
!23699 = !DILocation(line: 1576, column: 2, scope: !23645)
!23700 = !DILocation(line: 1577, column: 1, scope: !23645)
!23701 = distinct !DISubprogram(name: "macb_wol_interrupt", scope: !3, file: !3, line: 1521, type: !4845, scopeLine: 1522, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!23702 = !DILocation(line: 392, column: 53, scope: !12907, inlinedAt: !23703)
!23703 = distinct !DILocation(line: 1545, column: 2, scope: !23701)
!23704 = !DILocation(line: 352, column: 51, scope: !12913, inlinedAt: !23705)
!23705 = distinct !DILocation(line: 1532, column: 2, scope: !23701)
!23706 = !DILocalVariable(name: "irq", arg: 1, scope: !23701, file: !3, line: 1521, type: !37)
!23707 = !DILocation(line: 1521, column: 43, scope: !23701)
!23708 = !DILocalVariable(name: "dev_id", arg: 2, scope: !23701, file: !3, line: 1521, type: !570)
!23709 = !DILocation(line: 1521, column: 54, scope: !23701)
!23710 = !DILocalVariable(name: "queue", scope: !23701, file: !3, line: 1523, type: !10234)
!23711 = !DILocation(line: 1523, column: 21, scope: !23701)
!23712 = !DILocation(line: 1523, column: 29, scope: !23701)
!23713 = !DILocalVariable(name: "bp", scope: !23701, file: !3, line: 1524, type: !10238)
!23714 = !DILocation(line: 1524, column: 15, scope: !23701)
!23715 = !DILocation(line: 1524, column: 20, scope: !23701)
!23716 = !DILocation(line: 1524, column: 27, scope: !23701)
!23717 = !DILocalVariable(name: "status", scope: !23701, file: !3, line: 1525, type: !707)
!23718 = !DILocation(line: 1525, column: 6, scope: !23701)
!23719 = !DILocation(line: 1527, column: 11, scope: !23701)
!23720 = !DILocation(line: 1527, column: 9, scope: !23701)
!23721 = !DILocation(line: 1529, column: 6, scope: !23722)
!23722 = distinct !DILexicalBlock(scope: !23701, file: !3, line: 1529, column: 6)
!23723 = !DILocation(line: 1529, column: 6, scope: !23701)
!23724 = !DILocation(line: 1530, column: 3, scope: !23722)
!23725 = !DILocation(line: 1532, column: 13, scope: !23701)
!23726 = !DILocation(line: 1532, column: 17, scope: !23701)
!23727 = !DILocation(line: 354, column: 2, scope: !12944, inlinedAt: !23705)
!23728 = !DILocation(line: 354, column: 2, scope: !12947, inlinedAt: !23705)
!23729 = !DILocation(line: 1534, column: 6, scope: !23730)
!23730 = distinct !DILexicalBlock(scope: !23701, file: !3, line: 1534, column: 6)
!23731 = !DILocation(line: 1534, column: 13, scope: !23730)
!23732 = !DILocation(line: 1534, column: 6, scope: !23701)
!23733 = !DILocation(line: 1535, column: 3, scope: !23734)
!23734 = distinct !DILexicalBlock(scope: !23730, file: !3, line: 1534, column: 30)
!23735 = !DILocation(line: 1536, column: 3, scope: !23734)
!23736 = !DILocation(line: 1537, column: 3, scope: !23737)
!23737 = distinct !DILexicalBlock(scope: !23738, file: !3, line: 1537, column: 3)
!23738 = distinct !DILexicalBlock(scope: !23734, file: !3, line: 1537, column: 3)
!23739 = !DILocation(line: 1537, column: 3, scope: !23738)
!23740 = !DILocation(line: 1540, column: 7, scope: !23741)
!23741 = distinct !DILexicalBlock(scope: !23734, file: !3, line: 1540, column: 7)
!23742 = !DILocation(line: 1540, column: 11, scope: !23741)
!23743 = !DILocation(line: 1540, column: 16, scope: !23741)
!23744 = !DILocation(line: 1540, column: 7, scope: !23734)
!23745 = !DILocation(line: 1541, column: 4, scope: !23741)
!23746 = !DILocation(line: 1542, column: 20, scope: !23734)
!23747 = !DILocation(line: 1542, column: 24, scope: !23734)
!23748 = !DILocation(line: 1542, column: 30, scope: !23734)
!23749 = !DILocation(line: 1542, column: 3, scope: !23734)
!23750 = !DILocation(line: 1543, column: 2, scope: !23734)
!23751 = !DILocation(line: 1545, column: 15, scope: !23701)
!23752 = !DILocation(line: 1545, column: 19, scope: !23701)
!23753 = !DILocation(line: 394, column: 2, scope: !13091, inlinedAt: !23703)
!23754 = !DILocation(line: 394, column: 2, scope: !13094, inlinedAt: !23703)
!23755 = !DILocation(line: 1547, column: 2, scope: !23701)
!23756 = !DILocation(line: 1548, column: 1, scope: !23701)
!23757 = distinct !DISubprogram(name: "enable_irq_wake", scope: !4722, file: !4722, line: 465, type: !19478, scopeLine: 466, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!23758 = !DILocalVariable(name: "irq", arg: 1, scope: !23757, file: !4722, line: 465, type: !7)
!23759 = !DILocation(line: 465, column: 48, scope: !23757)
!23760 = !DILocation(line: 467, column: 26, scope: !23757)
!23761 = !DILocation(line: 467, column: 9, scope: !23757)
!23762 = !DILocation(line: 467, column: 2, scope: !23757)
!23763 = distinct !DISubprogram(name: "device_may_wakeup", scope: !4361, file: !4361, line: 82, type: !21989, scopeLine: 83, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!23764 = !DILocalVariable(name: "dev", arg: 1, scope: !23763, file: !4361, line: 82, type: !4172)
!23765 = !DILocation(line: 82, column: 53, scope: !23763)
!23766 = !DILocation(line: 84, column: 9, scope: !23763)
!23767 = !DILocation(line: 84, column: 14, scope: !23763)
!23768 = !DILocation(line: 84, column: 20, scope: !23763)
!23769 = !DILocation(line: 84, column: 31, scope: !23763)
!23770 = !DILocation(line: 84, column: 36, scope: !23763)
!23771 = !DILocation(line: 84, column: 41, scope: !23763)
!23772 = !DILocation(line: 84, column: 47, scope: !23763)
!23773 = !DILocation(line: 84, column: 35, scope: !23763)
!23774 = !DILocation(line: 84, column: 34, scope: !23763)
!23775 = !DILocation(line: 0, scope: !23763)
!23776 = !DILocation(line: 84, column: 2, scope: !23763)
!23777 = distinct !DISubprogram(name: "pm_wakeup_event", scope: !4361, file: !4361, line: 200, type: !23778, scopeLine: 201, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!23778 = !DISubroutineType(types: !23779)
!23779 = !{null, !4172, !7}
!23780 = !DILocalVariable(name: "dev", arg: 1, scope: !23777, file: !4361, line: 200, type: !4172)
!23781 = !DILocation(line: 200, column: 51, scope: !23777)
!23782 = !DILocalVariable(name: "msec", arg: 2, scope: !23777, file: !4361, line: 200, type: !7)
!23783 = !DILocation(line: 200, column: 69, scope: !23777)
!23784 = !DILocation(line: 202, column: 29, scope: !23777)
!23785 = !DILocation(line: 202, column: 34, scope: !23777)
!23786 = !DILocation(line: 202, column: 9, scope: !23777)
!23787 = !DILocation(line: 202, column: 2, scope: !23777)
!23788 = distinct !DISubprogram(name: "disable_irq_wake", scope: !4722, file: !4722, line: 470, type: !19478, scopeLine: 471, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!23789 = !DILocalVariable(name: "irq", arg: 1, scope: !23788, file: !4722, line: 470, type: !7)
!23790 = !DILocation(line: 470, column: 49, scope: !23788)
!23791 = !DILocation(line: 472, column: 26, scope: !23788)
!23792 = !DILocation(line: 472, column: 9, scope: !23788)
!23793 = !DILocation(line: 472, column: 2, scope: !23788)
!23794 = distinct !DISubprogram(name: "macb_restore_features", scope: !3, file: !3, line: 3478, type: !10392, scopeLine: 3479, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !743)
!23795 = !DILocalVariable(name: "bp", arg: 1, scope: !23794, file: !3, line: 3478, type: !10238)
!23796 = !DILocation(line: 3478, column: 48, scope: !23794)
!23797 = !DILocalVariable(name: "netdev", scope: !23794, file: !3, line: 3480, type: !295)
!23798 = !DILocation(line: 3480, column: 21, scope: !23794)
!23799 = !DILocation(line: 3480, column: 30, scope: !23794)
!23800 = !DILocation(line: 3480, column: 34, scope: !23794)
!23801 = !DILocalVariable(name: "features", scope: !23794, file: !3, line: 3481, type: !334)
!23802 = !DILocation(line: 3481, column: 20, scope: !23794)
!23803 = !DILocation(line: 3481, column: 31, scope: !23794)
!23804 = !DILocation(line: 3481, column: 39, scope: !23794)
!23805 = !DILocation(line: 3484, column: 26, scope: !23794)
!23806 = !DILocation(line: 3484, column: 30, scope: !23794)
!23807 = !DILocation(line: 3484, column: 2, scope: !23794)
!23808 = !DILocation(line: 3487, column: 26, scope: !23794)
!23809 = !DILocation(line: 3487, column: 30, scope: !23794)
!23810 = !DILocation(line: 3487, column: 2, scope: !23794)
!23811 = !DILocation(line: 3490, column: 26, scope: !23794)
!23812 = !DILocation(line: 3490, column: 30, scope: !23794)
!23813 = !DILocation(line: 3490, column: 2, scope: !23794)
!23814 = !DILocation(line: 3491, column: 1, scope: !23794)
