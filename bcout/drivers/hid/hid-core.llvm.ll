; ModuleID = '../bcout/drivers/hid/hid-core.llvm.bc'
source_filename = "drivers/hid/hid-core.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64"

module asm ".section\09\22.initcall6.init\22, \22a\22\09"
module asm "__initcall_hid_init6:\09\09\09"
module asm ".long\09hid_init - .\09\09\09"
module asm ".previous\09\09\09\09\09"

%struct.kernel_param_ops = type { i32, i32 (i8*, %struct.kernel_param*)*, i32 (i8*, %struct.kernel_param*)*, void (i8*)* }
%struct.kernel_param = type { i8*, %struct.module*, %struct.kernel_param_ops*, i16, i8, i8, %union.anon }
%struct.module = type opaque
%union.anon = type { i8* }
%struct.hid_parser = type { %struct.hid_global, [4 x %struct.hid_global], i32, %struct.hid_local, i32*, i32, i32, %struct.hid_device*, i32 }
%struct.hid_global = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.hid_local = type { [12288 x i32], [12288 x i8], [12288 x i32], i32, i32, i32, i32 }
%struct.hid_device = type { i8*, i32, i8*, i32, %struct.hid_collection*, i32, i32, i32, i16, i16, i32, i32, i32, i32, i32, [3 x %struct.hid_report_enum], %struct.work_struct, %struct.semaphore, %struct.device, %struct.hid_driver*, %struct.hid_ll_driver*, %struct.mutex, i32, i64, i32, i32, i8, %struct.list_head, i8*, i8*, [128 x i8], [64 x i8], [64 x i8], i8*, i32 (%struct.hid_device*)*, i32 (%struct.hid_device*, i32)*, void (%struct.hid_device*)*, void (%struct.hid_device*, %struct.hid_field*, %struct.hid_usage*, i32)*, void (%struct.hid_device*, %struct.hid_report*)*, i16, %struct.dentry*, %struct.dentry*, %struct.dentry*, %struct.list_head, %struct.spinlock, %struct.wait_queue_head }
%struct.hid_collection = type { i32, i32, i32, i32 }
%struct.hid_report_enum = type { i32, %struct.list_head, [256 x %struct.hid_report*] }
%struct.hid_report = type { %struct.list_head, %struct.list_head, i32, i32, i32, [256 x %struct.hid_field*], i32, i32, %struct.hid_device* }
%struct.hid_field = type { i32, i32, i32, %struct.hid_usage*, i32, i32, i32, i32, i32, i32, i32*, i32, i32, i32, i32, i32, i32, %struct.hid_report*, i32, %struct.hid_input*, i16 }
%struct.hid_usage = type { i32, i32, i32, i8, i8, i16, i8, i8, i8, i8, i16 }
%struct.hid_input = type { %struct.list_head, %struct.hid_report*, %struct.input_dev*, i8*, i8, %struct.list_head, i32 }
%struct.input_dev = type { i8*, i8*, i8*, %struct.input_id, [1 x i64], [1 x i64], [12 x i64], [1 x i64], [1 x i64], [1 x i64], [1 x i64], [1 x i64], [2 x i64], [1 x i64], i32, i32, i32, i8*, i32 (%struct.input_dev*, %struct.input_keymap_entry*, i32*)*, i32 (%struct.input_dev*, %struct.input_keymap_entry*)*, %struct.ff_device*, %struct.input_dev_poller*, i32, %struct.timer_list, [2 x i32], %struct.input_mt*, %struct.input_absinfo*, [12 x i64], [1 x i64], [1 x i64], [1 x i64], i32 (%struct.input_dev*)*, void (%struct.input_dev*)*, i32 (%struct.input_dev*, %struct.file*)*, i32 (%struct.input_dev*, i32, i32, i32)*, %struct.input_handle*, %struct.spinlock, %struct.mutex, i32, i8, %struct.device, %struct.list_head, %struct.list_head, i32, i32, %struct.input_value*, i8, [3 x i64] }
%struct.input_id = type { i16, i16, i16, i16 }
%struct.input_keymap_entry = type { i8, i8, i16, i32, [32 x i8] }
%struct.ff_device = type { i32 (%struct.input_dev*, %struct.ff_effect*, %struct.ff_effect*)*, i32 (%struct.input_dev*, i32)*, i32 (%struct.input_dev*, i32, i32)*, void (%struct.input_dev*, i16)*, void (%struct.input_dev*, i16)*, void (%struct.ff_device*)*, i8*, [2 x i64], %struct.mutex, i32, %struct.ff_effect*, [0 x %struct.file*] }
%struct.ff_effect = type { i16, i16, i16, %struct.ff_trigger, %struct.ff_replay, %union.anon.0 }
%struct.ff_trigger = type { i16, i16 }
%struct.ff_replay = type { i16, i16 }
%union.anon.0 = type { %struct.ff_periodic_effect }
%struct.ff_periodic_effect = type { i16, i16, i16, i16, i16, %struct.ff_envelope, i32, i16* }
%struct.ff_envelope = type { i16, i16, i16, i16 }
%struct.file = type { %union.anon.2, %struct.path, %struct.inode*, %struct.file_operations*, %struct.spinlock, i32, %struct.atomic64_t, i32, i32, %struct.mutex, i64, %struct.fown_struct, %struct.cred*, %struct.file_ra_state, i64, i8*, %struct.list_head, %struct.list_head, %struct.address_space*, i32, i32 }
%union.anon.2 = type { %struct.callback_head }
%struct.callback_head = type { %struct.callback_head*, void (%struct.callback_head*)* }
%struct.path = type { %struct.vfsmount*, %struct.dentry* }
%struct.vfsmount = type opaque
%struct.inode = type { i16, i16, %struct.kuid_t, %struct.kgid_t, i32, %struct.inode_operations*, %struct.super_block*, %struct.address_space*, i64, %union.anon.56, i32, i64, %struct.timespec64, %struct.timespec64, %struct.timespec64, %struct.spinlock, i16, i8, i8, i64, i64, %struct.rw_semaphore, i64, i64, %struct.hlist_node, %struct.list_head, %struct.list_head, %struct.list_head, %struct.list_head, %union.anon.57, %struct.atomic64_t, %struct.atomic64_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %union.anon.58, %struct.file_lock_context*, %struct.address_space, %struct.list_head, %union.anon.61, i32, i32, %struct.fsnotify_mark_connector*, i8* }
%struct.kuid_t = type { i32 }
%struct.kgid_t = type { i32 }
%struct.inode_operations = type { %struct.dentry* (%struct.inode*, %struct.dentry*, i32)*, i8* (%struct.dentry*, %struct.inode*, %struct.delayed_call*)*, i32 (%struct.inode*, i32)*, %struct.posix_acl* (%struct.inode*, i32)*, i32 (%struct.dentry*, i8*, i32)*, i32 (%struct.inode*, %struct.dentry*, i16, i1)*, i32 (%struct.dentry*, %struct.inode*, %struct.dentry*)*, i32 (%struct.inode*, %struct.dentry*)*, i32 (%struct.inode*, %struct.dentry*, i8*)*, i32 (%struct.inode*, %struct.dentry*, i16)*, i32 (%struct.inode*, %struct.dentry*)*, i32 (%struct.inode*, %struct.dentry*, i16, i32)*, i32 (%struct.inode*, %struct.dentry*, %struct.inode*, %struct.dentry*, i32)*, i32 (%struct.dentry*, %struct.iattr*)*, i32 (%struct.path*, %struct.kstat*, i32, i32)*, i64 (%struct.dentry*, i8*, i64)*, i32 (%struct.inode*, %struct.fiemap_extent_info*, i64, i64)*, i32 (%struct.inode*, %struct.timespec64*, i32)*, i32 (%struct.inode*, %struct.dentry*, %struct.file*, i32, i16)*, i32 (%struct.inode*, %struct.dentry*, i16)*, i32 (%struct.inode*, %struct.posix_acl*, i32)*, [24 x i8] }
%struct.delayed_call = type { void (i8*)*, i8* }
%struct.posix_acl = type opaque
%struct.iattr = type { i32, i16, %struct.kuid_t, %struct.kgid_t, i64, %struct.timespec64, %struct.timespec64, %struct.timespec64, %struct.file* }
%struct.kstat = type { i32, i16, i32, i32, i64, i64, i64, i32, i32, %struct.kuid_t, %struct.kgid_t, i64, %struct.timespec64, %struct.timespec64, %struct.timespec64, %struct.timespec64, i64, i64 }
%struct.fiemap_extent_info = type opaque
%struct.super_block = type { %struct.list_head, i32, i8, i64, i64, %struct.file_system_type*, %struct.super_operations*, %struct.dquot_operations*, %struct.quotactl_ops*, %struct.export_operations*, i64, i64, i64, %struct.dentry*, %struct.rw_semaphore, i32, %struct.atomic_t, %struct.xattr_handler**, %struct.hlist_bl_head, %struct.list_head, %struct.block_device*, %struct.backing_dev_info*, %struct.mtd_info*, %struct.hlist_node, i32, %struct.quota_info, %struct.sb_writers, i8*, i32, i64, i64, i32, %struct.fsnotify_mark_connector*, [32 x i8], %struct.uuid_t, i32, i32, %struct.mutex, i8*, %struct.dentry_operations*, i32, %struct.shrinker, %struct.atomic64_t, %struct.atomic64_t, i32, i32, %struct.workqueue_struct*, %struct.hlist_head, %struct.user_namespace*, %struct.list_lru, %struct.list_lru, %struct.callback_head, %struct.work_struct, %struct.mutex, i32, %struct.spinlock, %struct.list_head, %struct.spinlock, %struct.list_head }
%struct.file_system_type = type { i8*, i32, i32 (%struct.fs_context*)*, %struct.fs_parameter_spec*, %struct.dentry* (%struct.file_system_type*, i32, i8*, i8*)*, void (%struct.super_block*)*, %struct.module*, %struct.file_system_type*, %struct.hlist_head, %struct.lock_class_key, %struct.lock_class_key, %struct.lock_class_key, [3 x %struct.lock_class_key], %struct.lock_class_key, %struct.lock_class_key, %struct.lock_class_key }
%struct.fs_context = type opaque
%struct.fs_parameter_spec = type opaque
%struct.lock_class_key = type {}
%struct.super_operations = type { %struct.inode* (%struct.super_block*)*, void (%struct.inode*)*, void (%struct.inode*)*, void (%struct.inode*, i32)*, i32 (%struct.inode*, %struct.writeback_control*)*, i32 (%struct.inode*)*, void (%struct.inode*)*, void (%struct.super_block*)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*)*, i32 (%struct.super_block*)*, i32 (%struct.super_block*)*, i32 (%struct.super_block*)*, i32 (%struct.dentry*, %struct.kstatfs*)*, i32 (%struct.super_block*, i32*, i8*)*, void (%struct.super_block*)*, i32 (%struct.seq_file*, %struct.dentry*)*, i32 (%struct.seq_file*, %struct.dentry*)*, i32 (%struct.seq_file*, %struct.dentry*)*, i32 (%struct.seq_file*, %struct.dentry*)*, i32 (%struct.super_block*, %struct.page*, i32)*, i64 (%struct.super_block*, %struct.shrink_control*)*, i64 (%struct.super_block*, %struct.shrink_control*)* }
%struct.writeback_control = type opaque
%struct.kstatfs = type opaque
%struct.seq_file = type opaque
%struct.page = type { i64, %union.anon.4, %union.anon.54, %struct.atomic_t, [8 x i8] }
%union.anon.4 = type { %struct.anon.5 }
%struct.anon.5 = type { %struct.list_head, %struct.address_space*, i64, i64 }
%union.anon.54 = type { %struct.atomic_t }
%struct.shrink_control = type { i32, i32, i64, i64, %struct.mem_cgroup* }
%struct.mem_cgroup = type opaque
%struct.dquot_operations = type { i32 (%struct.dquot*)*, %struct.dquot* (%struct.super_block*, i32)*, void (%struct.dquot*)*, i32 (%struct.dquot*)*, i32 (%struct.dquot*)*, i32 (%struct.dquot*)*, i32 (%struct.super_block*, i32)*, i64* (%struct.inode*)*, i32 (%struct.inode*, %struct.kprojid_t*)*, i32 (%struct.inode*, i64*)*, i32 (%struct.super_block*, %struct.kqid*)* }
%struct.dquot = type { %struct.hlist_node, %struct.list_head, %struct.list_head, %struct.list_head, %struct.mutex, %struct.spinlock, %struct.atomic_t, %struct.super_block*, %struct.kqid, i64, i64, %struct.mem_dqblk }
%struct.kqid = type { %union.anon.55, i32 }
%union.anon.55 = type { %struct.kuid_t }
%struct.mem_dqblk = type { i64, i64, i64, i64, i64, i64, i64, i64, i64 }
%struct.kprojid_t = type { i32 }
%struct.quotactl_ops = type { i32 (%struct.super_block*, i32, i32, %struct.path*)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32, %struct.qc_info*)*, i32 (%struct.super_block*, i64, %struct.qc_dqblk*)*, i32 (%struct.super_block*, %struct.kqid*, %struct.qc_dqblk*)*, i32 (%struct.super_block*, i64, %struct.qc_dqblk*)*, i32 (%struct.super_block*, %struct.qc_state*)*, i32 (%struct.super_block*, i32)* }
%struct.qc_info = type { i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.qc_dqblk = type { i32, i64, i64, i64, i64, i64, i64, i64, i64, i32, i32, i64, i64, i64, i64, i32 }
%struct.qc_state = type { i32, [3 x %struct.qc_type_state] }
%struct.qc_type_state = type { i32, i32, i32, i32, i32, i32, i32, i64, i64, i64 }
%struct.export_operations = type opaque
%struct.xattr_handler = type opaque
%struct.hlist_bl_head = type { %struct.hlist_bl_node* }
%struct.hlist_bl_node = type { %struct.hlist_bl_node*, %struct.hlist_bl_node** }
%struct.block_device = type opaque
%struct.backing_dev_info = type opaque
%struct.mtd_info = type opaque
%struct.quota_info = type { i32, %struct.rw_semaphore, [3 x %struct.inode*], [3 x %struct.mem_dqinfo], [3 x %struct.quota_format_ops*] }
%struct.mem_dqinfo = type { %struct.quota_format_type*, i32, %struct.list_head, i64, i32, i32, i64, i64, i8* }
%struct.quota_format_type = type { i32, %struct.quota_format_ops*, %struct.module*, %struct.quota_format_type* }
%struct.quota_format_ops = type { i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.dquot*)*, i32 (%struct.dquot*)*, i32 (%struct.dquot*)*, i32 (%struct.super_block*, %struct.kqid*)* }
%struct.sb_writers = type { i32, %struct.wait_queue_head, [3 x %struct.percpu_rw_semaphore] }
%struct.percpu_rw_semaphore = type { %struct.rcu_sync, i32*, %struct.rcuwait, %struct.wait_queue_head, %struct.atomic_t }
%struct.rcu_sync = type { i32, i32, %struct.wait_queue_head, %struct.callback_head }
%struct.rcuwait = type { %struct.task_struct* }
%struct.task_struct = type { %struct.thread_info, i64, i8*, %struct.refcount_struct, i32, i32, i32, i32, i32, i32, i32, %struct.sched_class*, %struct.sched_entity, %struct.sched_rt_entity, %struct.sched_dl_entity, i32, i32, %struct.cpumask*, %struct.cpumask, %struct.sched_info, %struct.list_head, %struct.mm_struct*, %struct.mm_struct*, %struct.vmacache, i32, i32, i32, i32, i64, i32, i8, [3 x i8], i8, i64, %struct.restart_block, i32, i32, i64, %struct.task_struct*, %struct.task_struct*, %struct.list_head, %struct.list_head, %struct.task_struct*, %struct.list_head, %struct.list_head, %struct.pid*, [4 x %struct.hlist_node], %struct.list_head, %struct.list_head, %struct.completion*, i32*, i32*, i64, i64, i64, %struct.prev_cputime, i64, i64, i64, i64, i64, i64, %struct.posix_cputimers, %struct.posix_cputimers_work, %struct.cred*, %struct.cred*, %struct.cred*, %struct.key*, [16 x i8], %struct.nameidata*, %struct.fs_struct*, %struct.files_struct*, %struct.io_uring_task*, %struct.nsproxy*, %struct.signal_struct*, %struct.sighand_struct*, %struct.sigset_t, %struct.sigset_t, %struct.sigset_t, %struct.sigpending, i64, i64, i32, %struct.callback_head*, %struct.seccomp, i64, i64, %struct.spinlock, %struct.raw_spinlock, %struct.wake_q_node, %struct.rb_root_cached, %struct.task_struct*, %struct.rt_mutex_waiter*, i8*, %struct.bio_list*, %struct.blk_plug*, %struct.reclaim_state*, %struct.backing_dev_info*, %struct.io_context*, %struct.capture_control*, i64, %struct.kernel_siginfo*, %struct.task_io_accounting, %struct.robust_list_head*, %struct.list_head, %struct.futex_pi_state*, %struct.mutex, i32, [2 x %struct.perf_event_context*], %struct.mutex, %struct.list_head, %struct.rseq*, i32, i64, %struct.tlbflush_unmap_batch, %union.anon.47, %struct.pipe_inode_info*, %struct.page_frag, i32, i32, i64, i64, i64, i32, %struct.task_struct*, %struct.vm_struct*, %struct.refcount_struct, i8*, i64, i64, i64, %struct.callback_head, [24 x i8], %struct.thread_struct }
%struct.thread_info = type { i64, i32 }
%struct.sched_class = type opaque
%struct.sched_entity = type { %struct.load_weight, %struct.rb_node, %struct.list_head, i32, i64, i64, i64, i64, i64, %struct.sched_statistics }
%struct.load_weight = type { i64, i32 }
%struct.rb_node = type { i64, %struct.rb_node*, %struct.rb_node* }
%struct.sched_statistics = type {}
%struct.sched_rt_entity = type { %struct.list_head, i64, i64, i32, i16, i16, %struct.sched_rt_entity* }
%struct.sched_dl_entity = type { %struct.rb_node, i64, i64, i64, i64, i64, i64, i64, i32, i8, %struct.hrtimer, %struct.hrtimer, %struct.sched_dl_entity* }
%struct.hrtimer = type { %struct.timerqueue_node, i64, i32 (%struct.hrtimer*)*, %struct.hrtimer_clock_base*, i8, i8, i8, i8 }
%struct.timerqueue_node = type { %struct.rb_node, i64 }
%struct.hrtimer_clock_base = type { %struct.hrtimer_cpu_base*, i32, i32, %struct.seqcount_raw_spinlock, %struct.hrtimer*, %struct.timerqueue_head, i64 ()*, i64 }
%struct.hrtimer_cpu_base = type { %struct.raw_spinlock, i32, i32, i32, i8, i64, %struct.hrtimer*, i64, %struct.hrtimer*, [16 x i8], [8 x %struct.hrtimer_clock_base] }
%struct.seqcount_raw_spinlock = type { %struct.seqcount }
%struct.seqcount = type { i32 }
%struct.timerqueue_head = type { %struct.rb_root_cached }
%struct.cpumask = type { [1 x i64] }
%struct.sched_info = type {}
%struct.mm_struct = type { %struct.anon.17, [0 x i64] }
%struct.anon.17 = type { %struct.vm_area_struct*, %struct.rb_root, i64, i64 (%struct.file*, i64, i64, i64, i64)*, i64, i64, i64, i64, %struct.pgd_t*, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic64_t, i32, %struct.spinlock, %struct.rw_semaphore, %struct.list_head, i64, i64, i64, i64, %struct.atomic64_t, i64, i64, i64, i64, %struct.spinlock, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, [44 x i64], %struct.mm_rss_stat, %struct.linux_binfmt*, %struct.mm_context_t, i64, %struct.core_state*, %struct.spinlock, %struct.kioctx_table*, %struct.user_namespace*, %struct.file*, %struct.mmu_notifier_subscriptions*, %struct.atomic_t, i8, %struct.uprobes_state, %struct.work_struct, i32 }
%struct.vm_area_struct = type { i64, i64, %struct.vm_area_struct*, %struct.vm_area_struct*, %struct.rb_node, i64, %struct.mm_struct*, %struct.pgprot, i64, %struct.anon.18, %struct.list_head, %struct.anon_vma*, %struct.vm_operations_struct*, i64, %struct.file*, i8*, %struct.atomic64_t, %struct.vm_userfaultfd_ctx }
%struct.pgprot = type { i64 }
%struct.anon.18 = type { %struct.rb_node, i64 }
%struct.anon_vma = type opaque
%struct.vm_operations_struct = type { void (%struct.vm_area_struct*)*, void (%struct.vm_area_struct*)*, i32 (%struct.vm_area_struct*, i64)*, i32 (%struct.vm_area_struct*)*, i32 (%struct.vm_fault*)*, i32 (%struct.vm_fault*, i32)*, void (%struct.vm_fault*, i64, i64)*, i64 (%struct.vm_area_struct*)*, i32 (%struct.vm_fault*)*, i32 (%struct.vm_fault*)*, i32 (%struct.vm_area_struct*, i64, i8*, i32, i32)*, i8* (%struct.vm_area_struct*)*, %struct.page* (%struct.vm_area_struct*, i64)* }
%struct.vm_fault = type { %struct.vm_area_struct*, i32, i32, i64, i64, %struct.pmd_t*, %struct.pud_t*, %struct.pte_t, %struct.page*, %struct.page*, %struct.pte_t*, %struct.spinlock*, %struct.page* }
%struct.pmd_t = type { i64 }
%struct.pud_t = type { i64 }
%struct.pte_t = type { i64 }
%struct.vm_userfaultfd_ctx = type {}
%struct.rb_root = type { %struct.rb_node* }
%struct.pgd_t = type { i64 }
%struct.mm_rss_stat = type { [4 x %struct.atomic64_t] }
%struct.linux_binfmt = type opaque
%struct.mm_context_t = type { i64, %struct.atomic64_t, %struct.rw_semaphore, %struct.ldt_struct*, i16, %struct.mutex, i8*, %struct.vdso_image*, %struct.atomic_t, i16, i16 }
%struct.ldt_struct = type opaque
%struct.vdso_image = type { i8*, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64 }
%struct.core_state = type { %struct.atomic_t, %struct.core_thread, %struct.completion }
%struct.core_thread = type { %struct.task_struct*, %struct.core_thread* }
%struct.completion = type { i32, %struct.swait_queue_head }
%struct.swait_queue_head = type { %struct.raw_spinlock, %struct.list_head }
%struct.kioctx_table = type opaque
%struct.mmu_notifier_subscriptions = type opaque
%struct.uprobes_state = type {}
%struct.vmacache = type { i64, [4 x %struct.vm_area_struct*] }
%struct.restart_block = type { i64 (%struct.restart_block*)*, %union.anon.19 }
%union.anon.19 = type { %struct.anon.20 }
%struct.anon.20 = type { i32*, i32, i32, i32, i64, i32* }
%struct.pid = type { %struct.refcount_struct, i32, %struct.spinlock, [4 x %struct.hlist_head], %struct.hlist_head, %struct.wait_queue_head, %struct.callback_head, [1 x %struct.upid] }
%struct.upid = type { i32, %struct.pid_namespace* }
%struct.pid_namespace = type opaque
%struct.prev_cputime = type { i64, i64, %struct.raw_spinlock }
%struct.posix_cputimers = type { [3 x %struct.posix_cputimer_base], i32, i32 }
%struct.posix_cputimer_base = type { i64, %struct.timerqueue_head }
%struct.posix_cputimers_work = type { %struct.callback_head, i32 }
%struct.key = type { %struct.refcount_struct, i32, %union.anon.24, %struct.rw_semaphore, %struct.key_user*, i8*, %union.anon.25, i64, %struct.kuid_t, %struct.kgid_t, i32, i16, i16, i16, i64, %union.anon.26, %union.anon.30, %struct.key_restriction* }
%union.anon.24 = type { %struct.rb_node }
%struct.key_user = type opaque
%union.anon.25 = type { i64 }
%union.anon.26 = type { %struct.keyring_index_key }
%struct.keyring_index_key = type { i64, %union.anon.27, %struct.key_type*, %struct.key_tag*, i8* }
%union.anon.27 = type { i64 }
%struct.key_type = type opaque
%struct.key_tag = type { %struct.callback_head, %struct.refcount_struct, i8 }
%union.anon.30 = type { %union.key_payload }
%union.key_payload = type { [4 x i8*] }
%struct.key_restriction = type { i32 (%struct.key*, %struct.key_type*, %union.key_payload*, %struct.key*)*, %struct.key*, %struct.key_type* }
%struct.nameidata = type opaque
%struct.fs_struct = type opaque
%struct.files_struct = type opaque
%struct.io_uring_task = type opaque
%struct.nsproxy = type opaque
%struct.signal_struct = type { %struct.refcount_struct, %struct.atomic_t, i32, %struct.list_head, %struct.wait_queue_head, %struct.task_struct*, %struct.sigpending, %struct.hlist_head, i32, i32, %struct.task_struct*, i32, i32, i8, i32, %struct.list_head, %struct.hrtimer, i64, [2 x %struct.cpu_itimer], %struct.thread_group_cputimer, %struct.posix_cputimers, [4 x %struct.pid*], %struct.pid*, i32, %struct.tty_struct*, %struct.seqlock_t, i64, i64, i64, i64, i64, i64, %struct.prev_cputime, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, %struct.task_io_accounting, i64, [16 x %struct.rlimit], i8, i16, i16, %struct.mm_struct*, %struct.mutex, %struct.mutex }
%struct.cpu_itimer = type { i64, i64 }
%struct.thread_group_cputimer = type { %struct.task_cputime_atomic }
%struct.task_cputime_atomic = type { %struct.atomic64_t, %struct.atomic64_t, %struct.atomic64_t }
%struct.tty_struct = type opaque
%struct.seqlock_t = type { %struct.seqcount_spinlock, %struct.spinlock }
%struct.seqcount_spinlock = type { %struct.seqcount }
%struct.rlimit = type { i64, i64 }
%struct.sighand_struct = type { %struct.spinlock, %struct.refcount_struct, %struct.wait_queue_head, [64 x %struct.k_sigaction] }
%struct.k_sigaction = type { %struct.sigaction }
%struct.sigaction = type { void (i32)*, i64, void ()*, %struct.sigset_t }
%struct.sigset_t = type { [1 x i64] }
%struct.sigpending = type { %struct.list_head, %struct.sigset_t }
%struct.seccomp = type { i32, %struct.atomic_t, %struct.seccomp_filter* }
%struct.seccomp_filter = type opaque
%struct.raw_spinlock = type { %struct.arch_spinlock_t }
%struct.arch_spinlock_t = type {}
%struct.wake_q_node = type { %struct.wake_q_node* }
%struct.rb_root_cached = type { %struct.rb_root, %struct.rb_node* }
%struct.rt_mutex_waiter = type opaque
%struct.bio_list = type opaque
%struct.blk_plug = type opaque
%struct.reclaim_state = type opaque
%struct.io_context = type { %struct.atomic64_t, %struct.atomic_t, %struct.atomic_t, %struct.spinlock, i16, %struct.xarray, %struct.io_cq*, %struct.hlist_head, %struct.work_struct }
%struct.xarray = type { %struct.spinlock, i32, i8* }
%struct.io_cq = type { %struct.request_queue*, %struct.io_context*, %union.anon.33, %union.anon.34, i32 }
%struct.request_queue = type opaque
%union.anon.33 = type { %struct.list_head }
%union.anon.34 = type { %struct.hlist_node }
%struct.capture_control = type opaque
%struct.kernel_siginfo = type { %struct.anon.35 }
%struct.anon.35 = type { i32, i32, i32, %union.__sifields }
%union.__sifields = type { %struct.anon.39 }
%struct.anon.39 = type { i32, i32, i32, i64, i64 }
%struct.task_io_accounting = type {}
%struct.robust_list_head = type opaque
%struct.futex_pi_state = type opaque
%struct.perf_event_context = type opaque
%struct.rseq = type { i32, i32, %union.anon.46, i32, [12 x i8] }
%union.anon.46 = type { i64 }
%struct.tlbflush_unmap_batch = type { %struct.arch_tlbflush_unmap_batch, i8, i8 }
%struct.arch_tlbflush_unmap_batch = type { %struct.cpumask }
%union.anon.47 = type { %struct.callback_head }
%struct.pipe_inode_info = type opaque
%struct.page_frag = type { %struct.page*, i32, i32 }
%struct.vm_struct = type { %struct.vm_struct*, i8*, i64, i64, %struct.page**, i32, i64, i8* }
%struct.refcount_struct = type { %struct.atomic_t }
%struct.thread_struct = type { [3 x %struct.desc_struct], i64, i16, i16, i16, i16, i64, i64, [4 x %struct.perf_event*], i64, i64, i64, i64, i64, %struct.io_bitmap*, i64, i8, [47 x i8], %struct.fpu }
%struct.desc_struct = type { i16, i16, i32 }
%struct.perf_event = type opaque
%struct.io_bitmap = type opaque
%struct.fpu = type { i32, i64, [48 x i8], %union.fpregs_state }
%union.fpregs_state = type { %struct.xregs_state, [3520 x i8] }
%struct.xregs_state = type { %struct.fxregs_state, %struct.xstate_header, [0 x i8] }
%struct.fxregs_state = type { i16, i16, i16, i16, %union.anon.48, i32, i32, [32 x i32], [64 x i32], [12 x i32], %union.anon.51 }
%union.anon.48 = type { %struct.anon.49 }
%struct.anon.49 = type { i64, i64 }
%union.anon.51 = type { [12 x i32] }
%struct.xstate_header = type { i64, i64, [6 x i64] }
%struct.uuid_t = type { [16 x i8] }
%struct.dentry_operations = type { i32 (%struct.dentry*, i32)*, i32 (%struct.dentry*, i32)*, i32 (%struct.dentry*, %struct.qstr*)*, i32 (%struct.dentry*, i32, i8*, %struct.qstr*)*, i32 (%struct.dentry*)*, i32 (%struct.dentry*)*, void (%struct.dentry*)*, void (%struct.dentry*)*, void (%struct.dentry*, %struct.inode*)*, i8* (%struct.dentry*, i8*, i32)*, %struct.vfsmount* (%struct.path*)*, i32 (%struct.path*, i1)*, %struct.dentry* (%struct.dentry*, %struct.inode*)*, [24 x i8] }
%struct.qstr = type { %union.anon.3, i8* }
%union.anon.3 = type { i64 }
%struct.shrinker = type { i64 (%struct.shrinker*, %struct.shrink_control*)*, i64 (%struct.shrinker*, %struct.shrink_control*)*, i64, i32, i32, %struct.list_head, %struct.atomic64_t* }
%struct.workqueue_struct = type opaque
%struct.hlist_head = type { %struct.hlist_node* }
%struct.user_namespace = type opaque
%struct.list_lru = type { %struct.list_lru_node* }
%struct.list_lru_node = type { %struct.spinlock, %struct.list_lru_one, i64 }
%struct.list_lru_one = type { %struct.list_head, i64 }
%union.anon.56 = type { i32 }
%struct.timespec64 = type { i64, i64 }
%struct.rw_semaphore = type { %struct.atomic64_t, %struct.atomic64_t, %struct.raw_spinlock, %struct.list_head }
%struct.hlist_node = type { %struct.hlist_node*, %struct.hlist_node** }
%union.anon.57 = type { %struct.callback_head }
%struct.atomic_t = type { i32 }
%union.anon.58 = type { %struct.file_operations* }
%struct.file_lock_context = type { %struct.spinlock, %struct.list_head, %struct.list_head, %struct.list_head }
%struct.address_space = type { %struct.inode*, %struct.xarray, i32, %struct.atomic_t, %struct.rb_root_cached, %struct.rw_semaphore, i64, i64, i64, %struct.address_space_operations*, i64, i32, %struct.spinlock, %struct.list_head, i8* }
%struct.address_space_operations = type { i32 (%struct.page*, %struct.writeback_control*)*, i32 (%struct.file*, %struct.page*)*, i32 (%struct.address_space*, %struct.writeback_control*)*, i32 (%struct.page*)*, i32 (%struct.file*, %struct.address_space*, %struct.list_head*, i32)*, void (%struct.readahead_control*)*, i32 (%struct.file*, %struct.address_space*, i64, i32, i32, %struct.page**, i8**)*, i32 (%struct.file*, %struct.address_space*, i64, i32, i32, %struct.page*, i8*)*, i64 (%struct.address_space*, i64)*, void (%struct.page*, i32, i32)*, i32 (%struct.page*, i32)*, void (%struct.page*)*, i64 (%struct.kiocb*, %struct.iov_iter*)*, i32 (%struct.address_space*, %struct.page*, %struct.page*, i32)*, i1 (%struct.page*, i32)*, void (%struct.page*)*, i32 (%struct.page*)*, i32 (%struct.page*, i64, i64)*, void (%struct.page*, i8*, i8*)*, i32 (%struct.address_space*, %struct.page*)*, i32 (%struct.swap_info_struct*, %struct.file*, i64*)*, void (%struct.file*)* }
%struct.readahead_control = type opaque
%struct.kiocb = type { %struct.file*, i64, void (%struct.kiocb*, i64, i64)*, i8*, i32, i16, i16, %union.anon.6 }
%union.anon.6 = type { %struct.wait_page_queue* }
%struct.wait_page_queue = type opaque
%struct.iov_iter = type opaque
%struct.swap_info_struct = type opaque
%union.anon.61 = type { %struct.pipe_inode_info* }
%struct.fsnotify_mark_connector = type opaque
%struct.file_operations = type { %struct.module*, i64 (%struct.file*, i64, i32)*, i64 (%struct.file*, i8*, i64, i64*)*, i64 (%struct.file*, i8*, i64, i64*)*, i64 (%struct.kiocb*, %struct.iov_iter*)*, i64 (%struct.kiocb*, %struct.iov_iter*)*, i32 (%struct.kiocb*, i1)*, i32 (%struct.file*, %struct.dir_context*)*, i32 (%struct.file*, %struct.dir_context*)*, i32 (%struct.file*, %struct.poll_table_struct*)*, i64 (%struct.file*, i32, i64)*, i64 (%struct.file*, i32, i64)*, i32 (%struct.file*, %struct.vm_area_struct*)*, i64, i32 (%struct.inode*, %struct.file*)*, i32 (%struct.file*, i8*)*, i32 (%struct.inode*, %struct.file*)*, i32 (%struct.file*, i64, i64, i32)*, i32 (i32, %struct.file*, i32)*, i32 (%struct.file*, i32, %struct.file_lock*)*, i64 (%struct.file*, %struct.page*, i32, i64, i64*, i32)*, i64 (%struct.file*, i64, i64, i64, i64)*, i32 (i32)*, i32 (%struct.file*, i32, %struct.file_lock*)*, i64 (%struct.pipe_inode_info*, %struct.file*, i64*, i64, i32)*, i64 (%struct.file*, i64*, %struct.pipe_inode_info*, i64, i32)*, i32 (%struct.file*, i64, %struct.file_lock**, i8**)*, i64 (%struct.file*, i32, i64, i64)*, void (%struct.seq_file*, %struct.file*)*, i64 (%struct.file*, i64, %struct.file*, i64, i64, i32)*, i64 (%struct.file*, i64, %struct.file*, i64, i64, i32)*, i32 (%struct.file*, i64, i64, i32)* }
%struct.dir_context = type { i32 (%struct.dir_context*, i8*, i32, i64, i64, i32)*, i64 }
%struct.poll_table_struct = type opaque
%struct.file_lock = type { %struct.file_lock*, %struct.list_head, %struct.hlist_node, %struct.list_head, %struct.list_head, i8*, i32, i8, i32, i32, %struct.wait_queue_head, %struct.file*, i64, i64, %struct.fasync_struct*, i64, i64, %struct.file_lock_operations*, %struct.lock_manager_operations*, %union.anon.59 }
%struct.fasync_struct = type { %struct.rwlock_t, i32, i32, %struct.fasync_struct*, %struct.file*, %struct.callback_head }
%struct.rwlock_t = type { %struct.arch_rwlock_t }
%struct.arch_rwlock_t = type {}
%struct.file_lock_operations = type { void (%struct.file_lock*, %struct.file_lock*)*, void (%struct.file_lock*)* }
%struct.lock_manager_operations = type { i8* (i8*)*, void (i8*)*, void (%struct.file_lock*)*, i32 (%struct.file_lock*, i32)*, i1 (%struct.file_lock*)*, i32 (%struct.file_lock*, i32, %struct.list_head*)*, void (%struct.file_lock*, i8**)*, i1 (%struct.file_lock*)* }
%union.anon.59 = type { %struct.nfs_lock_info }
%struct.nfs_lock_info = type { i32, %struct.nlm_lockowner*, %struct.list_head }
%struct.nlm_lockowner = type opaque
%struct.atomic64_t = type { i64 }
%struct.fown_struct = type { %struct.rwlock_t, %struct.pid*, i32, %struct.kuid_t, %struct.kuid_t, i32 }
%struct.cred = type { %struct.atomic_t, %struct.kuid_t, %struct.kgid_t, %struct.kuid_t, %struct.kgid_t, %struct.kuid_t, %struct.kgid_t, %struct.kuid_t, %struct.kgid_t, i32, %struct.kernel_cap_struct, %struct.kernel_cap_struct, %struct.kernel_cap_struct, %struct.kernel_cap_struct, %struct.kernel_cap_struct, i8, %struct.key*, %struct.key*, %struct.key*, %struct.key*, %struct.user_struct*, %struct.user_namespace*, %struct.group_info*, %union.anon.32 }
%struct.kernel_cap_struct = type { [2 x i32] }
%struct.user_struct = type { %struct.refcount_struct, %struct.atomic_t, %struct.atomic_t, %struct.atomic64_t, i64, i64, %struct.atomic64_t, %struct.hlist_node, %struct.kuid_t, %struct.atomic64_t, %struct.ratelimit_state }
%struct.ratelimit_state = type { %struct.raw_spinlock, i32, i32, i32, i32, i64, i64 }
%struct.group_info = type { %struct.atomic_t, i32, [0 x %struct.kgid_t] }
%union.anon.32 = type { %struct.callback_head }
%struct.file_ra_state = type { i64, i32, i32, i32, i32, i64 }
%struct.input_dev_poller = type opaque
%struct.timer_list = type { %struct.hlist_node, i64, void (%struct.timer_list*)*, i32 }
%struct.input_mt = type opaque
%struct.input_absinfo = type { i32, i32, i32, i32, i32, i32 }
%struct.input_handle = type { i8*, i32, i8*, %struct.input_dev*, %struct.input_handler*, %struct.list_head, %struct.list_head }
%struct.input_handler = type { i8*, void (%struct.input_handle*, i32, i32, i32)*, void (%struct.input_handle*, %struct.input_value*, i32)*, i1 (%struct.input_handle*, i32, i32, i32)*, i1 (%struct.input_handler*, %struct.input_dev*)*, i32 (%struct.input_handler*, %struct.input_dev*, %struct.input_device_id*)*, void (%struct.input_handle*)*, void (%struct.input_handle*)*, i8, i32, i8*, %struct.input_device_id*, %struct.list_head, %struct.list_head }
%struct.input_device_id = type { i64, i16, i16, i16, i16, [1 x i64], [12 x i64], [1 x i64], [1 x i64], [1 x i64], [1 x i64], [1 x i64], [2 x i64], [1 x i64], [1 x i64], i64 }
%struct.input_value = type { i16, i16, i32 }
%struct.work_struct = type { %struct.atomic64_t, %struct.list_head, void (%struct.work_struct*)* }
%struct.semaphore = type { %struct.raw_spinlock, i32, %struct.list_head }
%struct.device = type { %struct.kobject, %struct.device*, %struct.device_private*, i8*, %struct.device_type*, %struct.bus_type*, %struct.device_driver*, i8*, i8*, %struct.mutex, %struct.dev_links_info, %struct.dev_pm_info, %struct.dev_pm_domain*, %struct.irq_domain*, %struct.list_head, %struct.dma_map_ops*, i64*, i64, i64, %struct.bus_dma_region*, %struct.device_dma_parameters*, %struct.list_head, %struct.dev_archdata, %struct.device_node*, %struct.fwnode_handle*, i32, i32, %struct.spinlock, %struct.list_head, %struct.class*, %struct.attribute_group**, void (%struct.device*)*, %struct.iommu_group*, %struct.dev_iommu*, i8 }
%struct.kobject = type { i8*, %struct.list_head, %struct.kobject*, %struct.kset*, %struct.kobj_type*, %struct.kernfs_node*, %struct.kref, i8 }
%struct.kset = type { %struct.list_head, %struct.spinlock, %struct.kobject, %struct.kset_uevent_ops* }
%struct.kset_uevent_ops = type { i32 (%struct.kset*, %struct.kobject*)*, i8* (%struct.kset*, %struct.kobject*)*, i32 (%struct.kset*, %struct.kobject*, %struct.kobj_uevent_env*)* }
%struct.kobj_uevent_env = type { [3 x i8*], [64 x i8*], i32, [2048 x i8], i32 }
%struct.kobj_type = type { void (%struct.kobject*)*, %struct.sysfs_ops*, %struct.attribute**, %struct.attribute_group**, %struct.kobj_ns_type_operations* (%struct.kobject*)*, i8* (%struct.kobject*)*, void (%struct.kobject*, %struct.kuid_t*, %struct.kgid_t*)* }
%struct.sysfs_ops = type { i64 (%struct.kobject*, %struct.attribute*, i8*)*, i64 (%struct.kobject*, %struct.attribute*, i8*, i64)* }
%struct.attribute = type { i8*, i16 }
%struct.kobj_ns_type_operations = type { i32, i1 ()*, i8* ()*, i8* (%struct.sock*)*, i8* ()*, void (i8*)* }
%struct.sock = type opaque
%struct.kernfs_node = type { %struct.atomic_t, %struct.atomic_t, %struct.kernfs_node*, i8*, %struct.rb_node, i8*, i32, %union.anon.66, i8*, i64, i16, i16, %struct.kernfs_iattrs* }
%union.anon.66 = type { %struct.kernfs_elem_attr }
%struct.kernfs_elem_attr = type { %struct.kernfs_ops*, %struct.kernfs_open_node*, i64, %struct.kernfs_node* }
%struct.kernfs_ops = type { i32 (%struct.kernfs_open_file*)*, void (%struct.kernfs_open_file*)*, i32 (%struct.seq_file*, i8*)*, i8* (%struct.seq_file*, i64*)*, i8* (%struct.seq_file*, i8*, i64*)*, void (%struct.seq_file*, i8*)*, i64 (%struct.kernfs_open_file*, i8*, i64, i64)*, i64, i8, i64 (%struct.kernfs_open_file*, i8*, i64, i64)*, i32 (%struct.kernfs_open_file*, %struct.poll_table_struct*)*, i32 (%struct.kernfs_open_file*, %struct.vm_area_struct*)* }
%struct.kernfs_open_file = type { %struct.kernfs_node*, %struct.file*, %struct.seq_file*, i8*, %struct.mutex, %struct.mutex, i32, %struct.list_head, i8*, i64, i8, %struct.vm_operations_struct* }
%struct.kernfs_open_node = type opaque
%struct.kernfs_iattrs = type opaque
%struct.kref = type { %struct.refcount_struct }
%struct.device_private = type opaque
%struct.device_type = type { i8*, %struct.attribute_group**, i32 (%struct.device*, %struct.kobj_uevent_env*)*, i8* (%struct.device*, i16*, %struct.kuid_t*, %struct.kgid_t*)*, void (%struct.device*)*, %struct.dev_pm_ops* }
%struct.dev_pm_ops = type { i32 (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)* }
%struct.bus_type = type { i8*, i8*, %struct.device*, %struct.attribute_group**, %struct.attribute_group**, %struct.attribute_group**, i32 (%struct.device*, %struct.device_driver*)*, i32 (%struct.device*, %struct.kobj_uevent_env*)*, i32 (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*, i32)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, %struct.dev_pm_ops*, %struct.iommu_ops*, %struct.subsys_private*, %struct.lock_class_key, i8 }
%struct.iommu_ops = type opaque
%struct.subsys_private = type opaque
%struct.device_driver = type { i8*, %struct.bus_type*, %struct.module*, i8*, i8, i32, %struct.of_device_id*, %struct.acpi_device_id*, i32 (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*, i32)*, i32 (%struct.device*)*, %struct.attribute_group**, %struct.attribute_group**, %struct.dev_pm_ops*, void (%struct.device*)*, %struct.driver_private* }
%struct.of_device_id = type { [32 x i8], [32 x i8], [128 x i8], i8* }
%struct.acpi_device_id = type { [9 x i8], i64, i32, i32 }
%struct.driver_private = type opaque
%struct.dev_links_info = type { %struct.list_head, %struct.list_head, %struct.list_head, %struct.list_head, i8, i32 }
%struct.dev_pm_info = type { %struct.pm_message, i16, i32, %struct.spinlock, %struct.list_head, %struct.completion, %struct.wakeup_source*, i8, %struct.hrtimer, i64, %struct.work_struct, %struct.wait_queue_head, %struct.wake_irq*, %struct.atomic_t, %struct.atomic_t, i16, i32, i32, i32, i32, i32, i64, i64, i64, i64, %struct.pm_subsys_data*, void (%struct.device*, i32)*, %struct.dev_pm_qos* }
%struct.pm_message = type { i32 }
%struct.wakeup_source = type { i8*, i32, %struct.list_head, %struct.spinlock, %struct.wake_irq*, %struct.timer_list, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, %struct.device*, i8 }
%struct.wake_irq = type opaque
%struct.pm_subsys_data = type { %struct.spinlock, i32, %struct.list_head, %struct.pm_domain_data* }
%struct.pm_domain_data = type opaque
%struct.dev_pm_qos = type opaque
%struct.dev_pm_domain = type { %struct.dev_pm_ops, i32 (%struct.device*)*, void (%struct.device*, i1)*, i32 (%struct.device*)*, void (%struct.device*)*, void (%struct.device*)* }
%struct.irq_domain = type opaque
%struct.dma_map_ops = type opaque
%struct.bus_dma_region = type opaque
%struct.device_dma_parameters = type { i32, i64 }
%struct.dev_archdata = type {}
%struct.device_node = type opaque
%struct.fwnode_handle = type opaque
%struct.class = type { i8*, %struct.module*, %struct.attribute_group**, %struct.attribute_group**, %struct.kobject*, i32 (%struct.device*, %struct.kobj_uevent_env*)*, i8* (%struct.device*, i16*)*, void (%struct.class*)*, void (%struct.device*)*, i32 (%struct.device*)*, %struct.kobj_ns_type_operations*, i8* (%struct.device*)*, void (%struct.device*, %struct.kuid_t*, %struct.kgid_t*)*, %struct.dev_pm_ops*, %struct.subsys_private* }
%struct.attribute_group = type { i8*, i16 (%struct.kobject*, %struct.attribute*, i32)*, i16 (%struct.kobject*, %struct.bin_attribute*, i32)*, %struct.attribute**, %struct.bin_attribute** }
%struct.bin_attribute = type { %struct.attribute, i64, i8*, i64 (%struct.file*, %struct.kobject*, %struct.bin_attribute*, i8*, i64, i64)*, i64 (%struct.file*, %struct.kobject*, %struct.bin_attribute*, i8*, i64, i64)*, i32 (%struct.file*, %struct.kobject*, %struct.bin_attribute*, %struct.vm_area_struct*)* }
%struct.iommu_group = type opaque
%struct.dev_iommu = type opaque
%struct.hid_driver = type { i8*, %struct.hid_device_id*, %struct.list_head, %struct.spinlock, i1 (%struct.hid_device*, i1)*, i32 (%struct.hid_device*, %struct.hid_device_id*)*, void (%struct.hid_device*)*, %struct.hid_report_id*, i32 (%struct.hid_device*, %struct.hid_report*, i8*, i32)*, %struct.hid_usage_id*, i32 (%struct.hid_device*, %struct.hid_field*, %struct.hid_usage*, i32)*, void (%struct.hid_device*, %struct.hid_report*)*, i8* (%struct.hid_device*, i8*, i32*)*, i32 (%struct.hid_device*, %struct.hid_input*, %struct.hid_field*, %struct.hid_usage*, i64**, i32*)*, i32 (%struct.hid_device*, %struct.hid_input*, %struct.hid_field*, %struct.hid_usage*, i64**, i32*)*, i32 (%struct.hid_device*, %struct.hid_input*)*, void (%struct.hid_device*, %struct.hid_field*, %struct.hid_usage*)*, i32 (%struct.hid_device*, i32)*, i32 (%struct.hid_device*)*, i32 (%struct.hid_device*)*, %struct.device_driver }
%struct.hid_device_id = type { i16, i16, i32, i32, i64 }
%struct.hid_report_id = type { i32 }
%struct.hid_usage_id = type { i32, i32, i32 }
%struct.hid_ll_driver = type { i32 (%struct.hid_device*)*, void (%struct.hid_device*)*, i32 (%struct.hid_device*)*, void (%struct.hid_device*)*, i32 (%struct.hid_device*, i32)*, i32 (%struct.hid_device*)*, void (%struct.hid_device*, %struct.hid_report*, i32)*, i32 (%struct.hid_device*)*, i32 (%struct.hid_device*, i8, i8*, i64, i8, i32)*, i32 (%struct.hid_device*, i8*, i64)*, i32 (%struct.hid_device*, i32, i32, i32)* }
%struct.mutex = type { %struct.atomic64_t, %struct.spinlock, %struct.list_head }
%struct.dentry = type { i32, %struct.seqcount_spinlock, %struct.hlist_bl_node, %struct.dentry*, %struct.qstr, %struct.inode*, [32 x i8], %struct.lockref, %struct.dentry_operations*, %struct.super_block*, i64, i8*, %union.anon.64, %struct.list_head, %struct.list_head, %union.anon.65 }
%struct.lockref = type { %union.anon.62 }
%union.anon.62 = type { %struct.anon.63 }
%struct.anon.63 = type { %struct.spinlock, i32 }
%union.anon.64 = type { %struct.list_head }
%union.anon.65 = type { %struct.hlist_node }
%struct.list_head = type { %struct.list_head*, %struct.list_head* }
%struct.spinlock = type { %union.anon.1 }
%union.anon.1 = type { %struct.raw_spinlock }
%struct.wait_queue_head = type { %struct.spinlock, %struct.list_head }
%struct.hid_item = type { i32, i8, i8, i8, %union.anon.67 }
%union.anon.67 = type { i8* }
%struct.device_attribute = type { %struct.attribute, i64 (%struct.device*, %struct.device_attribute*, i8*)*, i64 (%struct.device*, %struct.device_attribute*, i8*, i64)* }
%struct.kmem_cache = type opaque
%struct.driver_attribute = type { %struct.attribute, i64 (%struct.device_driver*, i8*)*, i64 (%struct.device_driver*, i8*, i64)* }
%struct.hiddev = type { i32, i32, i32, %struct.mutex, %struct.wait_queue_head, %struct.hid_device*, %struct.list_head, %struct.spinlock, i8 }
%struct.hidraw = type { i32, i32, i32, %struct.wait_queue_head, %struct.hid_device*, %struct.device*, %struct.spinlock, %struct.list_head }
%struct.hid_dynid = type { %struct.list_head, %struct.hid_device_id }

@hid_debug = dso_local global i32 0, align 4, !dbg !0
@__param_str_debug = internal constant [10 x i8] c"hid.debug\00", align 1, !dbg !4401
@param_ops_int = external dso_local constant %struct.kernel_param_ops, align 8
@__param_debug = internal constant %struct.kernel_param { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @__param_str_debug, i32 0, i32 0), %struct.module* null, %struct.kernel_param_ops* @param_ops_int, i16 384, i8 -1, i8 0, %union.anon { i8* bitcast (i32* @hid_debug to i8*) } }, section "__param", align 8, !dbg !4220
@__UNIQUE_ID_debugtype228 = internal constant [23 x i8] c"hid.parmtype=debug:int\00", section ".modinfo", align 1, !dbg !4270
@__UNIQUE_ID_debug229 = internal constant [45 x i8] c"hid.parm=debug:toggle HID debugging messages\00", section ".modinfo", align 1, !dbg !4275
@__param_str_ignore_special_drivers = internal constant [27 x i8] c"hid.ignore_special_drivers\00", align 16, !dbg !4406
@hid_ignore_special_drivers = internal global i32 0, align 4, !dbg !4411
@__param_ignore_special_drivers = internal constant %struct.kernel_param { i8* getelementptr inbounds ([27 x i8], [27 x i8]* @__param_str_ignore_special_drivers, i32 0, i32 0), %struct.module* null, %struct.kernel_param_ops* @param_ops_int, i16 384, i8 -1, i8 0, %union.anon { i8* bitcast (i32* @hid_ignore_special_drivers to i8*) } }, section "__param", align 8, !dbg !4280
@__UNIQUE_ID_ignore_special_driverstype230 = internal constant [40 x i8] c"hid.parmtype=ignore_special_drivers:int\00", section ".modinfo", align 1, !dbg !4282
@__UNIQUE_ID_ignore_special_drivers231 = internal constant [100 x i8] c"hid.parm=ignore_special_drivers:Ignore any special drivers and handle all devices by generic driver\00", section ".modinfo", align 1, !dbg !4287
@.str = private unnamed_addr constant [28 x i8] c"invalid HID report type %u\0A\00", align 1
@.str.1 = private unnamed_addr constant [26 x i8] c"invalid HID report id %u\0A\00", align 1
@.str.2 = private unnamed_addr constant [15 x i8] c"missing %s %u\0A\00", align 1
@hid_report_names = internal constant [3 x i8*] [i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.44, i32 0, i32 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.45, i32 0, i32 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.46, i32 0, i32 0)], align 16, !dbg !4413
@.str.3 = private unnamed_addr constant [28 x i8] c"not enough fields in %s %u\0A\00", align 1
@.str.4 = private unnamed_addr constant [37 x i8] c"not enough values in %s %u field %u\0A\00", align 1
@hid_open_report.dispatch_type = internal global [4 x i32 (%struct.hid_parser*, %struct.hid_item*)*] [i32 (%struct.hid_parser*, %struct.hid_item*)* @hid_parser_main, i32 (%struct.hid_parser*, %struct.hid_item*)* @hid_parser_global, i32 (%struct.hid_parser*, %struct.hid_item*)* @hid_parser_local, i32 (%struct.hid_parser*, %struct.hid_item*)* @hid_parser_reserved], align 16, !dbg !4292
@.str.5 = private unnamed_addr constant [23 x i8] c"drivers/hid/hid-core.c\00", align 1
@.str.6 = private unnamed_addr constant [29 x i8] c"unexpected long global item\0A\00", align 1
@.str.7 = private unnamed_addr constant [33 x i8] c"item %u %u %u %u parsing failed\0A\00", align 1
@.str.8 = private unnamed_addr constant [52 x i8] c"unbalanced collection at end of report description\0A\00", align 1
@.str.9 = private unnamed_addr constant [51 x i8] c"unbalanced delimiter at end of report description\0A\00", align 1
@.str.10 = private unnamed_addr constant [38 x i8] c"item fetching failed at offset %u/%u\0A\00", align 1
@hid_field_extract.__print_once = internal global i8 0, section ".data..read_mostly", align 1, !dbg !4354
@.str.11 = private unnamed_addr constant [36 x i8] c"%s() called with n (%d) > 32! (%s)\0A\00", align 1
@__func__.hid_field_extract = private unnamed_addr constant [18 x i8] c"hid_field_extract\00", align 1
@.str.12 = private unnamed_addr constant [39 x i8] c"offset (%d) exceeds report_count (%d)\0A\00", align 1
@.str.13 = private unnamed_addr constant [26 x i8] c"value %d is out of range\0A\00", align 1
@.str.14 = private unnamed_addr constant [38 x i8] c"\017%s: unable to complete request: %d\0A\00", align 1
@.str.15 = private unnamed_addr constant [41 x i8] c"\017%s: report %d is too short, (%d < %d)\0A\00", align 1
@.str.16 = private unnamed_addr constant [20 x i8] c"\017%s: empty report\0A\00", align 1
@hid_connect.types = internal global [9 x i8*] [i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.17, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.18, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.19, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.17, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.20, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.21, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.22, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.23, i32 0, i32 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.24, i32 0, i32 0)], align 16, !dbg !4361
@.str.17 = private unnamed_addr constant [7 x i8] c"Device\00", align 1
@.str.18 = private unnamed_addr constant [8 x i8] c"Pointer\00", align 1
@.str.19 = private unnamed_addr constant [6 x i8] c"Mouse\00", align 1
@.str.20 = private unnamed_addr constant [9 x i8] c"Joystick\00", align 1
@.str.21 = private unnamed_addr constant [8 x i8] c"Gamepad\00", align 1
@.str.22 = private unnamed_addr constant [9 x i8] c"Keyboard\00", align 1
@.str.23 = private unnamed_addr constant [7 x i8] c"Keypad\00", align 1
@.str.24 = private unnamed_addr constant [22 x i8] c"Multi-Axis Controller\00", align 1
@.str.25 = private unnamed_addr constant [35 x i8] c"device has no listeners, quitting\0A\00", align 1
@.str.26 = private unnamed_addr constant [6 x i8] c"input\00", align 1
@.str.27 = private unnamed_addr constant [11 x i8] c"%shiddev%d\00", align 1
@.str.28 = private unnamed_addr constant [2 x i8] c",\00", align 1
@.str.29 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.30 = private unnamed_addr constant [11 x i8] c"%shidraw%d\00", align 1
@.str.31 = private unnamed_addr constant [4 x i8] c"USB\00", align 1
@.str.32 = private unnamed_addr constant [10 x i8] c"BLUETOOTH\00", align 1
@.str.33 = private unnamed_addr constant [4 x i8] c"I2C\00", align 1
@.str.34 = private unnamed_addr constant [10 x i8] c"<UNKNOWN>\00", align 1
@dev_attr_country = internal constant %struct.device_attribute { %struct.attribute { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.75, i32 0, i32 0), i16 292 }, i64 (%struct.device*, %struct.device_attribute*, i8*)* @show_country, i64 (%struct.device*, %struct.device_attribute*, i8*, i64)* null }, align 8, !dbg !4420
@.str.35 = private unnamed_addr constant [51 x i8] c"can't create sysfs country code attribute err: %d\0A\00", align 1
@.str.36 = private unnamed_addr constant [35 x i8] c"%s: %s HID v%x.%02x %s [%s] on %s\0A\00", align 1
@.str.37 = private unnamed_addr constant [4 x i8] c"hid\00", align 1
@hid_dev_groups = internal global [2 x %struct.attribute_group*] [%struct.attribute_group* @hid_dev_group, %struct.attribute_group* null], align 16, !dbg !4435
@hid_drv_groups = internal global [2 x %struct.attribute_group*] [%struct.attribute_group* @hid_drv_group, %struct.attribute_group* null], align 16, !dbg !4450
@hid_bus_type = dso_local global %struct.bus_type { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.37, i32 0, i32 0), i8* null, %struct.device* null, %struct.attribute_group** null, %struct.attribute_group** getelementptr inbounds ([2 x %struct.attribute_group*], [2 x %struct.attribute_group*]* @hid_dev_groups, i32 0, i32 0), %struct.attribute_group** getelementptr inbounds ([2 x %struct.attribute_group*], [2 x %struct.attribute_group*]* @hid_drv_groups, i32 0, i32 0), i32 (%struct.device*, %struct.device_driver*)* @hid_bus_match, i32 (%struct.device*, %struct.kobj_uevent_env*)* @hid_uevent, i32 (%struct.device*)* @hid_device_probe, void (%struct.device*)* null, i32 (%struct.device*)* @hid_device_remove, void (%struct.device*)* null, i32 (%struct.device*)* null, i32 (%struct.device*)* null, i32 (%struct.device*, i32)* null, i32 (%struct.device*)* null, i32 (%struct.device*)* null, i32 (%struct.device*)* null, %struct.dev_pm_ops* null, %struct.iommu_ops* null, %struct.subsys_private* null, %struct.lock_class_key zeroinitializer, i8 0 }, align 8, !dbg !4365
@hid_add_device.id = internal global %struct.atomic_t zeroinitializer, align 4, !dbg !4367
@.str.38 = private unnamed_addr constant [41 x i8] c"transport driver missing .raw_request()\0A\00", align 1
@.str.39 = private unnamed_addr constant [28 x i8] c"bad device descriptor (%d)\0A\00", align 1
@.str.40 = private unnamed_addr constant [20 x i8] c"%04X:%04X:%04X.%04X\00", align 1
@hid_allocate_device.__key = internal global %struct.lock_class_key zeroinitializer, align 1, !dbg !4370
@.str.41 = private unnamed_addr constant [18 x i8] c"&hdev->debug_wait\00", align 1
@hid_allocate_device.__key.42 = internal global %struct.lock_class_key zeroinitializer, align 1, !dbg !4375
@.str.43 = private unnamed_addr constant [20 x i8] c"&hdev->ll_open_lock\00", align 1
@__UNIQUE_ID___addressable_hid_init263 = internal global i8* bitcast (i32 ()* @hid_init to i8*), section ".discard.addressable", align 8, !dbg !4377
@__exitcall_hid_exit = internal global void ()* @hid_exit, section ".exitcall.exit", align 8, !dbg !4379
@__UNIQUE_ID_author264 = internal constant [23 x i8] c"hid.author=Andreas Gal\00", section ".modinfo", align 1, !dbg !4384
@__UNIQUE_ID_author265 = internal constant [26 x i8] c"hid.author=Vojtech Pavlik\00", section ".modinfo", align 1, !dbg !4386
@__UNIQUE_ID_author266 = internal constant [23 x i8] c"hid.author=Jiri Kosina\00", section ".modinfo", align 1, !dbg !4391
@__UNIQUE_ID_file267 = internal constant [25 x i8] c"hid.file=drivers/hid/hid\00", section ".modinfo", align 1, !dbg !4393
@__UNIQUE_ID_license268 = internal constant [16 x i8] c"hid.license=GPL\00", section ".modinfo", align 1, !dbg !4398
@.str.44 = private unnamed_addr constant [17 x i8] c"HID_INPUT_REPORT\00", align 1
@.str.45 = private unnamed_addr constant [18 x i8] c"HID_OUTPUT_REPORT\00", align 1
@.str.46 = private unnamed_addr constant [19 x i8] c"HID_FEATURE_REPORT\00", align 1
@.str.47 = private unnamed_addr constant [52 x i8] c"unsupported Resolution Multiplier unit exponent %d\0A\00", align 1
@.str.48 = private unnamed_addr constant [38 x i8] c"unsupported Resolution Multiplier %d\0A\00", align 1
@.str.49 = private unnamed_addr constant [28 x i8] c"unknown main item tag 0x%x\0A\00", align 1
@.str.50 = private unnamed_addr constant [39 x i8] c"failed to reallocate collection array\0A\00", align 1
@.str.51 = private unnamed_addr constant [28 x i8] c"collection stack underflow\0A\00", align 1
@.str.52 = private unnamed_addr constant [28 x i8] c"hid_register_report failed\0A\00", align 1
@.str.53 = private unnamed_addr constant [39 x i8] c"\017%s: logical range invalid 0x%x 0x%x\0A\00", align 1
@.str.54 = private unnamed_addr constant [20 x i8] c"report is too long\0A\00", align 1
@.str.55 = private unnamed_addr constant [27 x i8] c"too many fields in report\0A\00", align 1
@.str.56 = private unnamed_addr constant [35 x i8] c"global environment stack overflow\0A\00", align 1
@.str.57 = private unnamed_addr constant [36 x i8] c"global environment stack underflow\0A\00", align 1
@.str.58 = private unnamed_addr constant [24 x i8] c"invalid report_size %d\0A\00", align 1
@.str.59 = private unnamed_addr constant [25 x i8] c"invalid report_count %d\0A\00", align 1
@.str.60 = private unnamed_addr constant [25 x i8] c"report_id %u is invalid\0A\00", align 1
@.str.61 = private unnamed_addr constant [25 x i8] c"unknown global tag 0x%x\0A\00", align 1
@.str.62 = private unnamed_addr constant [19 x i8] c"nested delimiters\0A\00", align 1
@.str.63 = private unnamed_addr constant [23 x i8] c"bogus close delimiter\0A\00", align 1
@.str.64 = private unnamed_addr constant [33 x i8] c"\017%s: alternative usage ignored\0A\00", align 1
@.str.65 = private unnamed_addr constant [30 x i8] c"ignoring exceeding usage max\0A\00", align 1
@.str.66 = private unnamed_addr constant [31 x i8] c"no more usage index available\0A\00", align 1
@.str.67 = private unnamed_addr constant [28 x i8] c"\017%s: hid_add_usage failed\0A\00", align 1
@.str.68 = private unnamed_addr constant [35 x i8] c"\017%s: unknown local item tag 0x%x\0A\00", align 1
@.str.69 = private unnamed_addr constant [22 x i8] c"usage index exceeded\0A\00", align 1
@.str.70 = private unnamed_addr constant [36 x i8] c"\017%s: reserved item type, tag 0x%x\0A\00", align 1
@current_task = external dso_local global %struct.task_struct*, section ".data", align 8
@__func__.implement = private unnamed_addr constant [10 x i8] c"implement\00", align 1
@.str.71 = private unnamed_addr constant [51 x i8] c"%s() called with too large value %d (n: %d)! (%s)\0A\00", align 1
@kmalloc_caches = external dso_local global [3 x [14 x %struct.kmem_cache*]], align 16
@.str.72 = private unnamed_addr constant [21 x i8] c"include/linux/slab.h\00", align 1
@.str.73 = private unnamed_addr constant [39 x i8] c"\017%s: undefined report_id %u received\0A\00", align 1
@.str.74 = private unnamed_addr constant [27 x i8] c"%s's event failed with %d\0A\00", align 1
@hid_hiddev_list = internal constant [3 x %struct.hid_device_id] [%struct.hid_device_id { i16 3, i16 0, i32 1123, i32 65535, i64 0 }, %struct.hid_device_id { i16 3, i16 0, i32 1123, i32 1, i64 0 }, %struct.hid_device_id zeroinitializer], align 16, !dbg !4417
@.str.75 = private unnamed_addr constant [8 x i8] c"country\00", align 1
@.str.76 = private unnamed_addr constant [6 x i8] c"%02x\0A\00", align 1
@hid_dev_group = internal constant %struct.attribute_group { i8* null, i16 (%struct.kobject*, %struct.attribute*, i32)* null, i16 (%struct.kobject*, %struct.bin_attribute*, i32)* null, %struct.attribute** getelementptr inbounds ([2 x %struct.attribute*], [2 x %struct.attribute*]* @hid_dev_attrs, i32 0, i32 0), %struct.bin_attribute** getelementptr inbounds ([2 x %struct.bin_attribute*], [2 x %struct.bin_attribute*]* @hid_dev_bin_attrs, i32 0, i32 0) }, align 8, !dbg !4438
@hid_dev_attrs = internal global [2 x %struct.attribute*] [%struct.attribute* getelementptr inbounds (%struct.device_attribute, %struct.device_attribute* @dev_attr_modalias, i32 0, i32 0), %struct.attribute* null], align 16, !dbg !4440
@hid_dev_bin_attrs = internal global [2 x %struct.bin_attribute*] [%struct.bin_attribute* @dev_bin_attr_report_desc, %struct.bin_attribute* null], align 16, !dbg !4445
@dev_attr_modalias = internal global %struct.device_attribute { %struct.attribute { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.77, i32 0, i32 0), i16 292 }, i64 (%struct.device*, %struct.device_attribute*, i8*)* @modalias_show, i64 (%struct.device*, %struct.device_attribute*, i8*, i64)* null }, align 8, !dbg !4443
@.str.77 = private unnamed_addr constant [9 x i8] c"modalias\00", align 1
@.str.78 = private unnamed_addr constant [26 x i8] c"hid:b%04Xg%04Xv%08Xp%08X\0A\00", align 1
@dev_bin_attr_report_desc = internal global %struct.bin_attribute { %struct.attribute { i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.79, i32 0, i32 0), i16 292 }, i64 4096, i8* null, i64 (%struct.file*, %struct.kobject*, %struct.bin_attribute*, i8*, i64, i64)* @read_report_descriptor, i64 (%struct.file*, %struct.kobject*, %struct.bin_attribute*, i8*, i64, i64)* null, i32 (%struct.file*, %struct.kobject*, %struct.bin_attribute*, %struct.vm_area_struct*)* null }, align 8, !dbg !4448
@.str.79 = private unnamed_addr constant [18 x i8] c"report_descriptor\00", align 1
@hid_drv_group = internal constant %struct.attribute_group { i8* null, i16 (%struct.kobject*, %struct.attribute*, i32)* null, i16 (%struct.kobject*, %struct.bin_attribute*, i32)* null, %struct.attribute** getelementptr inbounds ([2 x %struct.attribute*], [2 x %struct.attribute*]* @hid_drv_attrs, i32 0, i32 0), %struct.bin_attribute** null }, align 8, !dbg !4452
@hid_drv_attrs = internal global [2 x %struct.attribute*] [%struct.attribute* getelementptr inbounds (%struct.driver_attribute, %struct.driver_attribute* @driver_attr_new_id, i32 0, i32 0), %struct.attribute* null], align 16, !dbg !4454
@driver_attr_new_id = internal global %struct.driver_attribute { %struct.attribute { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.80, i32 0, i32 0), i16 128 }, i64 (%struct.device_driver*, i8*)* null, i64 (%struct.device_driver*, i8*, i64)* @new_id_store }, align 8, !dbg !4456
@.str.80 = private unnamed_addr constant [7 x i8] c"new_id\00", align 1
@.str.81 = private unnamed_addr constant [13 x i8] c"%x %x %x %lx\00", align 1
@.str.82 = private unnamed_addr constant [22 x i8] c"HID_ID=%04X:%08X:%08X\00", align 1
@.str.83 = private unnamed_addr constant [12 x i8] c"HID_NAME=%s\00", align 1
@.str.84 = private unnamed_addr constant [12 x i8] c"HID_PHYS=%s\00", align 1
@.str.85 = private unnamed_addr constant [12 x i8] c"HID_UNIQ=%s\00", align 1
@.str.86 = private unnamed_addr constant [34 x i8] c"MODALIAS=hid:b%04Xg%04Xv%08Xp%08X\00", align 1
@hid_scan_report.dispatch_type = internal global [4 x i32 (%struct.hid_parser*, %struct.hid_item*)*] [i32 (%struct.hid_parser*, %struct.hid_item*)* @hid_scan_main, i32 (%struct.hid_parser*, %struct.hid_item*)* @hid_parser_global, i32 (%struct.hid_parser*, %struct.hid_item*)* @hid_parser_local, i32 (%struct.hid_parser*, %struct.hid_item*)* @hid_parser_reserved], align 16, !dbg !4469
@sema_init.__key = internal global %struct.lock_class_key zeroinitializer, align 1, !dbg !4472
@.str.87 = private unnamed_addr constant [16 x i8] c"semaphore->lock\00", align 1
@.str.88 = private unnamed_addr constant [145 x i8] c"\014hid: hid_debug is now used solely for parser and driver debugging.\0Adebugfs is now used for inspecting the device (report descriptor, reports)\0A\00", align 1
@.str.89 = private unnamed_addr constant [31 x i8] c"\013hid: can't register hid bus\0A\00", align 1
@llvm.used = appending global [14 x i8*] [i8* bitcast (%struct.kernel_param* @__param_debug to i8*), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @__UNIQUE_ID_debugtype228, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @__UNIQUE_ID_debug229, i32 0, i32 0), i8* bitcast (%struct.kernel_param* @__param_ignore_special_drivers to i8*), i8* getelementptr inbounds ([40 x i8], [40 x i8]* @__UNIQUE_ID_ignore_special_driverstype230, i32 0, i32 0), i8* getelementptr inbounds ([100 x i8], [100 x i8]* @__UNIQUE_ID_ignore_special_drivers231, i32 0, i32 0), i8* bitcast (void ()* @hid_exit to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_hid_init263 to i8*), i8* bitcast (void ()** @__exitcall_hid_exit to i8*), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @__UNIQUE_ID_author264, i32 0, i32 0), i8* getelementptr inbounds ([26 x i8], [26 x i8]* @__UNIQUE_ID_author265, i32 0, i32 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @__UNIQUE_ID_author266, i32 0, i32 0), i8* getelementptr inbounds ([25 x i8], [25 x i8]* @__UNIQUE_ID_file267, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @__UNIQUE_ID_license268, i32 0, i32 0)], section "llvm.metadata"

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local %struct.hid_report* @hid_register_report(%struct.hid_device* %device, i32 %type, i32 %id, i32 %application) #0 !dbg !4483 {
entry:
  %retval = alloca %struct.hid_report*, align 8
  %device.addr = alloca %struct.hid_device*, align 8
  %type.addr = alloca i32, align 4
  %id.addr = alloca i32, align 4
  %application.addr = alloca i32, align 4
  %report_enum = alloca %struct.hid_report_enum*, align 8
  %report = alloca %struct.hid_report*, align 8
  store %struct.hid_device* %device, %struct.hid_device** %device.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.hid_device** %device.addr, metadata !4486, metadata !DIExpression()), !dbg !4487
  store i32 %type, i32* %type.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %type.addr, metadata !4488, metadata !DIExpression()), !dbg !4489
  store i32 %id, i32* %id.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %id.addr, metadata !4490, metadata !DIExpression()), !dbg !4491
  store i32 %application, i32* %application.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %application.addr, metadata !4492, metadata !DIExpression()), !dbg !4493
  call void @llvm.dbg.declare(metadata %struct.hid_report_enum** %report_enum, metadata !4494, metadata !DIExpression()), !dbg !4496
  %0 = load %struct.hid_device*, %struct.hid_device** %device.addr, align 8, !dbg !4497
  %report_enum1 = getelementptr inbounds %struct.hid_device, %struct.hid_device* %0, i32 0, i32 15, !dbg !4498
  %arraydecay = getelementptr inbounds [3 x %struct.hid_report_enum], [3 x %struct.hid_report_enum]* %report_enum1, i64 0, i64 0, !dbg !4497
  %1 = load i32, i32* %type.addr, align 4, !dbg !4499
  %idx.ext = zext i32 %1 to i64, !dbg !4500
  %add.ptr = getelementptr %struct.hid_report_enum, %struct.hid_report_enum* %arraydecay, i64 %idx.ext, !dbg !4500
  store %struct.hid_report_enum* %add.ptr, %struct.hid_report_enum** %report_enum, align 8, !dbg !4496
  call void @llvm.dbg.declare(metadata %struct.hid_report** %report, metadata !4501, metadata !DIExpression()), !dbg !4502
  %2 = load i32, i32* %id.addr, align 4, !dbg !4503
  %cmp = icmp uge i32 %2, 256, !dbg !4505
  br i1 %cmp, label %if.then, label %if.end, !dbg !4506

if.then:                                          ; preds = %entry
  store %struct.hid_report* null, %struct.hid_report** %retval, align 8, !dbg !4507
  br label %return, !dbg !4507

if.end:                                           ; preds = %entry
  %3 = load %struct.hid_report_enum*, %struct.hid_report_enum** %report_enum, align 8, !dbg !4508
  %report_id_hash = getelementptr inbounds %struct.hid_report_enum, %struct.hid_report_enum* %3, i32 0, i32 2, !dbg !4510
  %4 = load i32, i32* %id.addr, align 4, !dbg !4511
  %idxprom = zext i32 %4 to i64, !dbg !4508
  %arrayidx = getelementptr [256 x %struct.hid_report*], [256 x %struct.hid_report*]* %report_id_hash, i64 0, i64 %idxprom, !dbg !4508
  %5 = load %struct.hid_report*, %struct.hid_report** %arrayidx, align 8, !dbg !4508
  %tobool = icmp ne %struct.hid_report* %5, null, !dbg !4508
  br i1 %tobool, label %if.then2, label %if.end6, !dbg !4512

if.then2:                                         ; preds = %if.end
  %6 = load %struct.hid_report_enum*, %struct.hid_report_enum** %report_enum, align 8, !dbg !4513
  %report_id_hash3 = getelementptr inbounds %struct.hid_report_enum, %struct.hid_report_enum* %6, i32 0, i32 2, !dbg !4514
  %7 = load i32, i32* %id.addr, align 4, !dbg !4515
  %idxprom4 = zext i32 %7 to i64, !dbg !4513
  %arrayidx5 = getelementptr [256 x %struct.hid_report*], [256 x %struct.hid_report*]* %report_id_hash3, i64 0, i64 %idxprom4, !dbg !4513
  %8 = load %struct.hid_report*, %struct.hid_report** %arrayidx5, align 8, !dbg !4513
  store %struct.hid_report* %8, %struct.hid_report** %retval, align 8, !dbg !4516
  br label %return, !dbg !4516

if.end6:                                          ; preds = %if.end
  %call = call i8* @kzalloc(i64 2112, i32 3264) #9, !dbg !4517
  %9 = bitcast i8* %call to %struct.hid_report*, !dbg !4517
  store %struct.hid_report* %9, %struct.hid_report** %report, align 8, !dbg !4518
  %10 = load %struct.hid_report*, %struct.hid_report** %report, align 8, !dbg !4519
  %tobool7 = icmp ne %struct.hid_report* %10, null, !dbg !4519
  br i1 %tobool7, label %if.end9, label %if.then8, !dbg !4521

if.then8:                                         ; preds = %if.end6
  store %struct.hid_report* null, %struct.hid_report** %retval, align 8, !dbg !4522
  br label %return, !dbg !4522

if.end9:                                          ; preds = %if.end6
  %11 = load i32, i32* %id.addr, align 4, !dbg !4523
  %cmp10 = icmp ne i32 %11, 0, !dbg !4525
  br i1 %cmp10, label %if.then11, label %if.end12, !dbg !4526

if.then11:                                        ; preds = %if.end9
  %12 = load %struct.hid_report_enum*, %struct.hid_report_enum** %report_enum, align 8, !dbg !4527
  %numbered = getelementptr inbounds %struct.hid_report_enum, %struct.hid_report_enum* %12, i32 0, i32 0, !dbg !4528
  store i32 1, i32* %numbered, align 8, !dbg !4529
  br label %if.end12, !dbg !4527

if.end12:                                         ; preds = %if.then11, %if.end9
  %13 = load i32, i32* %id.addr, align 4, !dbg !4530
  %14 = load %struct.hid_report*, %struct.hid_report** %report, align 8, !dbg !4531
  %id13 = getelementptr inbounds %struct.hid_report, %struct.hid_report* %14, i32 0, i32 2, !dbg !4532
  store i32 %13, i32* %id13, align 8, !dbg !4533
  %15 = load i32, i32* %type.addr, align 4, !dbg !4534
  %16 = load %struct.hid_report*, %struct.hid_report** %report, align 8, !dbg !4535
  %type14 = getelementptr inbounds %struct.hid_report, %struct.hid_report* %16, i32 0, i32 3, !dbg !4536
  store i32 %15, i32* %type14, align 4, !dbg !4537
  %17 = load %struct.hid_report*, %struct.hid_report** %report, align 8, !dbg !4538
  %size = getelementptr inbounds %struct.hid_report, %struct.hid_report* %17, i32 0, i32 7, !dbg !4539
  store i32 0, i32* %size, align 4, !dbg !4540
  %18 = load %struct.hid_device*, %struct.hid_device** %device.addr, align 8, !dbg !4541
  %19 = load %struct.hid_report*, %struct.hid_report** %report, align 8, !dbg !4542
  %device15 = getelementptr inbounds %struct.hid_report, %struct.hid_report* %19, i32 0, i32 8, !dbg !4543
  store %struct.hid_device* %18, %struct.hid_device** %device15, align 8, !dbg !4544
  %20 = load i32, i32* %application.addr, align 4, !dbg !4545
  %21 = load %struct.hid_report*, %struct.hid_report** %report, align 8, !dbg !4546
  %application16 = getelementptr inbounds %struct.hid_report, %struct.hid_report* %21, i32 0, i32 4, !dbg !4547
  store i32 %20, i32* %application16, align 8, !dbg !4548
  %22 = load %struct.hid_report*, %struct.hid_report** %report, align 8, !dbg !4549
  %23 = load %struct.hid_report_enum*, %struct.hid_report_enum** %report_enum, align 8, !dbg !4550
  %report_id_hash17 = getelementptr inbounds %struct.hid_report_enum, %struct.hid_report_enum* %23, i32 0, i32 2, !dbg !4551
  %24 = load i32, i32* %id.addr, align 4, !dbg !4552
  %idxprom18 = zext i32 %24 to i64, !dbg !4550
  %arrayidx19 = getelementptr [256 x %struct.hid_report*], [256 x %struct.hid_report*]* %report_id_hash17, i64 0, i64 %idxprom18, !dbg !4550
  store %struct.hid_report* %22, %struct.hid_report** %arrayidx19, align 8, !dbg !4553
  %25 = load %struct.hid_report*, %struct.hid_report** %report, align 8, !dbg !4554
  %list = getelementptr inbounds %struct.hid_report, %struct.hid_report* %25, i32 0, i32 0, !dbg !4555
  %26 = load %struct.hid_report_enum*, %struct.hid_report_enum** %report_enum, align 8, !dbg !4556
  %report_list = getelementptr inbounds %struct.hid_report_enum, %struct.hid_report_enum* %26, i32 0, i32 1, !dbg !4557
  call void @list_add_tail(%struct.list_head* %list, %struct.list_head* %report_list) #9, !dbg !4558
  %27 = load %struct.hid_report*, %struct.hid_report** %report, align 8, !dbg !4559
  store %struct.hid_report* %27, %struct.hid_report** %retval, align 8, !dbg !4560
  br label %return, !dbg !4560

return:                                           ; preds = %if.end12, %if.then8, %if.then2, %if.then
  %28 = load %struct.hid_report*, %struct.hid_report** %retval, align 8, !dbg !4561
  ret %struct.hid_report* %28, !dbg !4561
}

; Function Attrs: nounwind readnone speculatable willreturn
declare void @llvm.dbg.declare(metadata, metadata, metadata) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @kzalloc(i64 %size, i32 %flags) #0 !dbg !4562 {
entry:
  %s.addr.i.i = alloca %struct.kmem_cache*, align 8
  call void @llvm.dbg.declare(metadata %struct.kmem_cache** %s.addr.i.i, metadata !4565, metadata !DIExpression()), !dbg !4569
  %flags.addr.i17.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i17.i, metadata !4575, metadata !DIExpression()), !dbg !4576
  %size.addr.i18.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i18.i, metadata !4577, metadata !DIExpression()), !dbg !4578
  %ret.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %ret.i.i, metadata !4579, metadata !DIExpression()), !dbg !4580
  %retval.i12.i = alloca i32, align 4
  %flags.addr.i13.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i13.i, metadata !4581, metadata !DIExpression()), !dbg !4585
  %retval.i.i = alloca i32, align 4
  %size.addr.i11.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i11.i, metadata !4587, metadata !DIExpression()), !dbg !4591
  %size.addr.i.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i.i, metadata !4593, metadata !DIExpression()), !dbg !4597
  %flags.addr.i.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i.i.i, metadata !4602, metadata !DIExpression()), !dbg !4603
  %order.addr.i.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %order.addr.i.i.i, metadata !4604, metadata !DIExpression()), !dbg !4605
  %size.addr.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i, metadata !4606, metadata !DIExpression()), !dbg !4607
  %flags.addr.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i.i, metadata !4608, metadata !DIExpression()), !dbg !4609
  %order.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %order.i.i, metadata !4610, metadata !DIExpression()), !dbg !4611
  %retval.i = alloca i8*, align 8
  %size.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i, metadata !4612, metadata !DIExpression()), !dbg !4613
  %flags.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i, metadata !4614, metadata !DIExpression()), !dbg !4615
  %index.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %index.i, metadata !4616, metadata !DIExpression()), !dbg !4617
  %size.addr = alloca i64, align 8
  %flags.addr = alloca i32, align 4
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !4618, metadata !DIExpression()), !dbg !4619
  store i32 %flags, i32* %flags.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr, metadata !4620, metadata !DIExpression()), !dbg !4621
  %0 = load i64, i64* %size.addr, align 8, !dbg !4622
  %1 = load i32, i32* %flags.addr, align 4, !dbg !4623
  %or = or i32 %1, 256, !dbg !4624
  store i64 %0, i64* %size.addr.i, align 8
  store i32 %or, i32* %flags.addr.i, align 4
  %2 = load i64, i64* %size.addr.i, align 8, !dbg !4625
  %3 = call i1 @llvm.is.constant.i64(i64 %2) #10, !dbg !4626
  br i1 %3, label %if.then.i, label %if.end9.i, !dbg !4627

if.then.i:                                        ; preds = %entry
  %4 = load i64, i64* %size.addr.i, align 8, !dbg !4628
  %cmp.i = icmp ugt i64 %4, 8192, !dbg !4629
  br i1 %cmp.i, label %if.then1.i, label %if.end.i, !dbg !4630

if.then1.i:                                       ; preds = %if.then.i
  %5 = load i64, i64* %size.addr.i, align 8, !dbg !4631
  %6 = load i32, i32* %flags.addr.i, align 4, !dbg !4632
  store i64 %5, i64* %size.addr.i.i, align 8
  store i32 %6, i32* %flags.addr.i.i, align 4
  %7 = load i64, i64* %size.addr.i.i, align 8, !dbg !4633
  %call.i.i = call i32 @get_order(i64 %7) #11, !dbg !4634
  store i32 %call.i.i, i32* %order.i.i, align 4, !dbg !4611
  %8 = load i64, i64* %size.addr.i.i, align 8, !dbg !4635
  %9 = load i32, i32* %flags.addr.i.i, align 4, !dbg !4636
  %10 = load i32, i32* %order.i.i, align 4, !dbg !4637
  store i64 %8, i64* %size.addr.i.i.i, align 8
  store i32 %9, i32* %flags.addr.i.i.i, align 4
  store i32 %10, i32* %order.addr.i.i.i, align 4
  %11 = load i64, i64* %size.addr.i.i.i, align 8, !dbg !4638
  %12 = load i32, i32* %flags.addr.i.i.i, align 4, !dbg !4639
  %13 = load i32, i32* %order.addr.i.i.i, align 4, !dbg !4640
  %call.i.i.i = call noalias i8* @kmalloc_order(i64 %11, i32 %12, i32 %13) #12, !dbg !4641
  %ptrint.i.i.i = ptrtoint i8* %call.i.i.i to i64, !dbg !4641
  %maskedptr.i.i.i = and i64 %ptrint.i.i.i, 4095, !dbg !4641
  %maskcond.i.i.i = icmp eq i64 %maskedptr.i.i.i, 0, !dbg !4641
  call void @llvm.assume(i1 %maskcond.i.i.i) #10, !dbg !4641
  store i8* %call.i.i.i, i8** %retval.i, align 8, !dbg !4642
  br label %kmalloc.exit, !dbg !4642

if.end.i:                                         ; preds = %if.then.i
  %14 = load i64, i64* %size.addr.i, align 8, !dbg !4643
  store i64 %14, i64* %size.addr.i11.i, align 8
  %15 = load i64, i64* %size.addr.i11.i, align 8, !dbg !4644
  %tobool.i.i = icmp ne i64 %15, 0, !dbg !4644
  br i1 %tobool.i.i, label %if.end.i.i, label %if.then.i.i, !dbg !4646

if.then.i.i:                                      ; preds = %if.end.i
  store i32 0, i32* %retval.i.i, align 4, !dbg !4647
  br label %kmalloc_index.exit.i, !dbg !4647

if.end.i.i:                                       ; preds = %if.end.i
  %16 = load i64, i64* %size.addr.i11.i, align 8, !dbg !4648
  %cmp.i.i = icmp ule i64 %16, 8, !dbg !4650
  br i1 %cmp.i.i, label %if.then1.i.i, label %if.end2.i.i, !dbg !4651

if.then1.i.i:                                     ; preds = %if.end.i.i
  store i32 3, i32* %retval.i.i, align 4, !dbg !4652
  br label %kmalloc_index.exit.i, !dbg !4652

if.end2.i.i:                                      ; preds = %if.end.i.i
  %17 = load i64, i64* %size.addr.i11.i, align 8, !dbg !4653
  %cmp3.i.i = icmp ugt i64 %17, 64, !dbg !4655
  br i1 %cmp3.i.i, label %land.lhs.true.i.i, label %if.end6.i.i, !dbg !4656

land.lhs.true.i.i:                                ; preds = %if.end2.i.i
  %18 = load i64, i64* %size.addr.i11.i, align 8, !dbg !4657
  %cmp4.i.i = icmp ule i64 %18, 96, !dbg !4658
  br i1 %cmp4.i.i, label %if.then5.i.i, label %if.end6.i.i, !dbg !4659

if.then5.i.i:                                     ; preds = %land.lhs.true.i.i
  store i32 1, i32* %retval.i.i, align 4, !dbg !4660
  br label %kmalloc_index.exit.i, !dbg !4660

if.end6.i.i:                                      ; preds = %land.lhs.true.i.i, %if.end2.i.i
  %19 = load i64, i64* %size.addr.i11.i, align 8, !dbg !4661
  %cmp7.i.i = icmp ugt i64 %19, 128, !dbg !4663
  br i1 %cmp7.i.i, label %land.lhs.true8.i.i, label %if.end11.i.i, !dbg !4664

land.lhs.true8.i.i:                               ; preds = %if.end6.i.i
  %20 = load i64, i64* %size.addr.i11.i, align 8, !dbg !4665
  %cmp9.i.i = icmp ule i64 %20, 192, !dbg !4666
  br i1 %cmp9.i.i, label %if.then10.i.i, label %if.end11.i.i, !dbg !4667

if.then10.i.i:                                    ; preds = %land.lhs.true8.i.i
  store i32 2, i32* %retval.i.i, align 4, !dbg !4668
  br label %kmalloc_index.exit.i, !dbg !4668

if.end11.i.i:                                     ; preds = %land.lhs.true8.i.i, %if.end6.i.i
  %21 = load i64, i64* %size.addr.i11.i, align 8, !dbg !4669
  %cmp12.i.i = icmp ule i64 %21, 8, !dbg !4671
  br i1 %cmp12.i.i, label %if.then13.i.i, label %if.end14.i.i, !dbg !4672

if.then13.i.i:                                    ; preds = %if.end11.i.i
  store i32 3, i32* %retval.i.i, align 4, !dbg !4673
  br label %kmalloc_index.exit.i, !dbg !4673

if.end14.i.i:                                     ; preds = %if.end11.i.i
  %22 = load i64, i64* %size.addr.i11.i, align 8, !dbg !4674
  %cmp15.i.i = icmp ule i64 %22, 16, !dbg !4676
  br i1 %cmp15.i.i, label %if.then16.i.i, label %if.end17.i.i, !dbg !4677

if.then16.i.i:                                    ; preds = %if.end14.i.i
  store i32 4, i32* %retval.i.i, align 4, !dbg !4678
  br label %kmalloc_index.exit.i, !dbg !4678

if.end17.i.i:                                     ; preds = %if.end14.i.i
  %23 = load i64, i64* %size.addr.i11.i, align 8, !dbg !4679
  %cmp18.i.i = icmp ule i64 %23, 32, !dbg !4681
  br i1 %cmp18.i.i, label %if.then19.i.i, label %if.end20.i.i, !dbg !4682

if.then19.i.i:                                    ; preds = %if.end17.i.i
  store i32 5, i32* %retval.i.i, align 4, !dbg !4683
  br label %kmalloc_index.exit.i, !dbg !4683

if.end20.i.i:                                     ; preds = %if.end17.i.i
  %24 = load i64, i64* %size.addr.i11.i, align 8, !dbg !4684
  %cmp21.i.i = icmp ule i64 %24, 64, !dbg !4686
  br i1 %cmp21.i.i, label %if.then22.i.i, label %if.end23.i.i, !dbg !4687

if.then22.i.i:                                    ; preds = %if.end20.i.i
  store i32 6, i32* %retval.i.i, align 4, !dbg !4688
  br label %kmalloc_index.exit.i, !dbg !4688

if.end23.i.i:                                     ; preds = %if.end20.i.i
  %25 = load i64, i64* %size.addr.i11.i, align 8, !dbg !4689
  %cmp24.i.i = icmp ule i64 %25, 128, !dbg !4691
  br i1 %cmp24.i.i, label %if.then25.i.i, label %if.end26.i.i, !dbg !4692

if.then25.i.i:                                    ; preds = %if.end23.i.i
  store i32 7, i32* %retval.i.i, align 4, !dbg !4693
  br label %kmalloc_index.exit.i, !dbg !4693

if.end26.i.i:                                     ; preds = %if.end23.i.i
  %26 = load i64, i64* %size.addr.i11.i, align 8, !dbg !4694
  %cmp27.i.i = icmp ule i64 %26, 256, !dbg !4696
  br i1 %cmp27.i.i, label %if.then28.i.i, label %if.end29.i.i, !dbg !4697

if.then28.i.i:                                    ; preds = %if.end26.i.i
  store i32 8, i32* %retval.i.i, align 4, !dbg !4698
  br label %kmalloc_index.exit.i, !dbg !4698

if.end29.i.i:                                     ; preds = %if.end26.i.i
  %27 = load i64, i64* %size.addr.i11.i, align 8, !dbg !4699
  %cmp30.i.i = icmp ule i64 %27, 512, !dbg !4701
  br i1 %cmp30.i.i, label %if.then31.i.i, label %if.end32.i.i, !dbg !4702

if.then31.i.i:                                    ; preds = %if.end29.i.i
  store i32 9, i32* %retval.i.i, align 4, !dbg !4703
  br label %kmalloc_index.exit.i, !dbg !4703

if.end32.i.i:                                     ; preds = %if.end29.i.i
  %28 = load i64, i64* %size.addr.i11.i, align 8, !dbg !4704
  %cmp33.i.i = icmp ule i64 %28, 1024, !dbg !4706
  br i1 %cmp33.i.i, label %if.then34.i.i, label %if.end35.i.i, !dbg !4707

if.then34.i.i:                                    ; preds = %if.end32.i.i
  store i32 10, i32* %retval.i.i, align 4, !dbg !4708
  br label %kmalloc_index.exit.i, !dbg !4708

if.end35.i.i:                                     ; preds = %if.end32.i.i
  %29 = load i64, i64* %size.addr.i11.i, align 8, !dbg !4709
  %cmp36.i.i = icmp ule i64 %29, 2048, !dbg !4711
  br i1 %cmp36.i.i, label %if.then37.i.i, label %if.end38.i.i, !dbg !4712

if.then37.i.i:                                    ; preds = %if.end35.i.i
  store i32 11, i32* %retval.i.i, align 4, !dbg !4713
  br label %kmalloc_index.exit.i, !dbg !4713

if.end38.i.i:                                     ; preds = %if.end35.i.i
  %30 = load i64, i64* %size.addr.i11.i, align 8, !dbg !4714
  %cmp39.i.i = icmp ule i64 %30, 4096, !dbg !4716
  br i1 %cmp39.i.i, label %if.then40.i.i, label %if.end41.i.i, !dbg !4717

if.then40.i.i:                                    ; preds = %if.end38.i.i
  store i32 12, i32* %retval.i.i, align 4, !dbg !4718
  br label %kmalloc_index.exit.i, !dbg !4718

if.end41.i.i:                                     ; preds = %if.end38.i.i
  %31 = load i64, i64* %size.addr.i11.i, align 8, !dbg !4719
  %cmp42.i.i = icmp ule i64 %31, 8192, !dbg !4721
  br i1 %cmp42.i.i, label %if.then43.i.i, label %if.end44.i.i, !dbg !4722

if.then43.i.i:                                    ; preds = %if.end41.i.i
  store i32 13, i32* %retval.i.i, align 4, !dbg !4723
  br label %kmalloc_index.exit.i, !dbg !4723

if.end44.i.i:                                     ; preds = %if.end41.i.i
  %32 = load i64, i64* %size.addr.i11.i, align 8, !dbg !4724
  %cmp45.i.i = icmp ule i64 %32, 16384, !dbg !4726
  br i1 %cmp45.i.i, label %if.then46.i.i, label %if.end47.i.i, !dbg !4727

if.then46.i.i:                                    ; preds = %if.end44.i.i
  store i32 14, i32* %retval.i.i, align 4, !dbg !4728
  br label %kmalloc_index.exit.i, !dbg !4728

if.end47.i.i:                                     ; preds = %if.end44.i.i
  %33 = load i64, i64* %size.addr.i11.i, align 8, !dbg !4729
  %cmp48.i.i = icmp ule i64 %33, 32768, !dbg !4731
  br i1 %cmp48.i.i, label %if.then49.i.i, label %if.end50.i.i, !dbg !4732

if.then49.i.i:                                    ; preds = %if.end47.i.i
  store i32 15, i32* %retval.i.i, align 4, !dbg !4733
  br label %kmalloc_index.exit.i, !dbg !4733

if.end50.i.i:                                     ; preds = %if.end47.i.i
  %34 = load i64, i64* %size.addr.i11.i, align 8, !dbg !4734
  %cmp51.i.i = icmp ule i64 %34, 65536, !dbg !4736
  br i1 %cmp51.i.i, label %if.then52.i.i, label %if.end53.i.i, !dbg !4737

if.then52.i.i:                                    ; preds = %if.end50.i.i
  store i32 16, i32* %retval.i.i, align 4, !dbg !4738
  br label %kmalloc_index.exit.i, !dbg !4738

if.end53.i.i:                                     ; preds = %if.end50.i.i
  %35 = load i64, i64* %size.addr.i11.i, align 8, !dbg !4739
  %cmp54.i.i = icmp ule i64 %35, 131072, !dbg !4741
  br i1 %cmp54.i.i, label %if.then55.i.i, label %if.end56.i.i, !dbg !4742

if.then55.i.i:                                    ; preds = %if.end53.i.i
  store i32 17, i32* %retval.i.i, align 4, !dbg !4743
  br label %kmalloc_index.exit.i, !dbg !4743

if.end56.i.i:                                     ; preds = %if.end53.i.i
  %36 = load i64, i64* %size.addr.i11.i, align 8, !dbg !4744
  %cmp57.i.i = icmp ule i64 %36, 262144, !dbg !4746
  br i1 %cmp57.i.i, label %if.then58.i.i, label %if.end59.i.i, !dbg !4747

if.then58.i.i:                                    ; preds = %if.end56.i.i
  store i32 18, i32* %retval.i.i, align 4, !dbg !4748
  br label %kmalloc_index.exit.i, !dbg !4748

if.end59.i.i:                                     ; preds = %if.end56.i.i
  %37 = load i64, i64* %size.addr.i11.i, align 8, !dbg !4749
  %cmp60.i.i = icmp ule i64 %37, 524288, !dbg !4751
  br i1 %cmp60.i.i, label %if.then61.i.i, label %if.end62.i.i, !dbg !4752

if.then61.i.i:                                    ; preds = %if.end59.i.i
  store i32 19, i32* %retval.i.i, align 4, !dbg !4753
  br label %kmalloc_index.exit.i, !dbg !4753

if.end62.i.i:                                     ; preds = %if.end59.i.i
  %38 = load i64, i64* %size.addr.i11.i, align 8, !dbg !4754
  %cmp63.i.i = icmp ule i64 %38, 1048576, !dbg !4756
  br i1 %cmp63.i.i, label %if.then64.i.i, label %if.end65.i.i, !dbg !4757

if.then64.i.i:                                    ; preds = %if.end62.i.i
  store i32 20, i32* %retval.i.i, align 4, !dbg !4758
  br label %kmalloc_index.exit.i, !dbg !4758

if.end65.i.i:                                     ; preds = %if.end62.i.i
  %39 = load i64, i64* %size.addr.i11.i, align 8, !dbg !4759
  %cmp66.i.i = icmp ule i64 %39, 2097152, !dbg !4761
  br i1 %cmp66.i.i, label %if.then67.i.i, label %if.end68.i.i, !dbg !4762

if.then67.i.i:                                    ; preds = %if.end65.i.i
  store i32 21, i32* %retval.i.i, align 4, !dbg !4763
  br label %kmalloc_index.exit.i, !dbg !4763

if.end68.i.i:                                     ; preds = %if.end65.i.i
  %40 = load i64, i64* %size.addr.i11.i, align 8, !dbg !4764
  %cmp69.i.i = icmp ule i64 %40, 4194304, !dbg !4766
  br i1 %cmp69.i.i, label %if.then70.i.i, label %if.end71.i.i, !dbg !4767

if.then70.i.i:                                    ; preds = %if.end68.i.i
  store i32 22, i32* %retval.i.i, align 4, !dbg !4768
  br label %kmalloc_index.exit.i, !dbg !4768

if.end71.i.i:                                     ; preds = %if.end68.i.i
  %41 = load i64, i64* %size.addr.i11.i, align 8, !dbg !4769
  %cmp72.i.i = icmp ule i64 %41, 8388608, !dbg !4771
  br i1 %cmp72.i.i, label %if.then73.i.i, label %if.end74.i.i, !dbg !4772

if.then73.i.i:                                    ; preds = %if.end71.i.i
  store i32 23, i32* %retval.i.i, align 4, !dbg !4773
  br label %kmalloc_index.exit.i, !dbg !4773

if.end74.i.i:                                     ; preds = %if.end71.i.i
  %42 = load i64, i64* %size.addr.i11.i, align 8, !dbg !4774
  %cmp75.i.i = icmp ule i64 %42, 16777216, !dbg !4776
  br i1 %cmp75.i.i, label %if.then76.i.i, label %if.end77.i.i, !dbg !4777

if.then76.i.i:                                    ; preds = %if.end74.i.i
  store i32 24, i32* %retval.i.i, align 4, !dbg !4778
  br label %kmalloc_index.exit.i, !dbg !4778

if.end77.i.i:                                     ; preds = %if.end74.i.i
  %43 = load i64, i64* %size.addr.i11.i, align 8, !dbg !4779
  %cmp78.i.i = icmp ule i64 %43, 33554432, !dbg !4781
  br i1 %cmp78.i.i, label %if.then79.i.i, label %if.end80.i.i, !dbg !4782

if.then79.i.i:                                    ; preds = %if.end77.i.i
  store i32 25, i32* %retval.i.i, align 4, !dbg !4783
  br label %kmalloc_index.exit.i, !dbg !4783

if.end80.i.i:                                     ; preds = %if.end77.i.i
  %44 = load i64, i64* %size.addr.i11.i, align 8, !dbg !4784
  %cmp81.i.i = icmp ule i64 %44, 67108864, !dbg !4786
  br i1 %cmp81.i.i, label %if.then82.i.i, label %if.end83.i.i, !dbg !4787

if.then82.i.i:                                    ; preds = %if.end80.i.i
  store i32 26, i32* %retval.i.i, align 4, !dbg !4788
  br label %kmalloc_index.exit.i, !dbg !4788

if.end83.i.i:                                     ; preds = %if.end80.i.i
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.72, i64 0, i64 0), i32 382, i32 0, i64 12) #10, !dbg !4789, !srcloc !4792
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.unreachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 105) #10, !dbg !4793, !srcloc !4796
  unreachable, !dbg !4797

kmalloc_index.exit.i:                             ; preds = %if.then82.i.i, %if.then79.i.i, %if.then76.i.i, %if.then73.i.i, %if.then70.i.i, %if.then67.i.i, %if.then64.i.i, %if.then61.i.i, %if.then58.i.i, %if.then55.i.i, %if.then52.i.i, %if.then49.i.i, %if.then46.i.i, %if.then43.i.i, %if.then40.i.i, %if.then37.i.i, %if.then34.i.i, %if.then31.i.i, %if.then28.i.i, %if.then25.i.i, %if.then22.i.i, %if.then19.i.i, %if.then16.i.i, %if.then13.i.i, %if.then10.i.i, %if.then5.i.i, %if.then1.i.i, %if.then.i.i
  %45 = load i32, i32* %retval.i.i, align 4, !dbg !4798
  store i32 %45, i32* %index.i, align 4, !dbg !4799
  %46 = load i32, i32* %index.i, align 4, !dbg !4800
  %tobool.i = icmp ne i32 %46, 0, !dbg !4800
  br i1 %tobool.i, label %if.end4.i, label %if.then3.i, !dbg !4802

if.then3.i:                                       ; preds = %kmalloc_index.exit.i
  store i8* inttoptr (i64 16 to i8*), i8** %retval.i, align 8, !dbg !4803
  br label %kmalloc.exit, !dbg !4803

if.end4.i:                                        ; preds = %kmalloc_index.exit.i
  %47 = load i32, i32* %flags.addr.i, align 4, !dbg !4804
  store i32 %47, i32* %flags.addr.i13.i, align 4
  %48 = load i32, i32* %flags.addr.i13.i, align 4, !dbg !4805
  %and.i.i = and i32 %48, 17, !dbg !4805
  %cmp.i14.i = icmp eq i32 %and.i.i, 0, !dbg !4805
  %lnot.i.i = xor i1 %cmp.i14.i, true, !dbg !4805
  %lnot.ext.i.i = zext i1 %cmp.i14.i to i32, !dbg !4805
  %conv.i.i = sext i32 %lnot.ext.i.i to i64, !dbg !4805
  br i1 %cmp.i14.i, label %if.then.i15.i, label %if.end.i16.i, !dbg !4807

if.then.i15.i:                                    ; preds = %if.end4.i
  store i32 0, i32* %retval.i12.i, align 4, !dbg !4808
  br label %kmalloc_type.exit.i, !dbg !4808

if.end.i16.i:                                     ; preds = %if.end4.i
  %49 = load i32, i32* %flags.addr.i13.i, align 4, !dbg !4809
  %and2.i.i = and i32 %49, 1, !dbg !4810
  %tobool3.i.i = icmp ne i32 %and2.i.i, 0, !dbg !4809
  %50 = zext i1 %tobool3.i.i to i64, !dbg !4809
  %cond.i.i = select i1 %tobool3.i.i, i32 2, i32 1, !dbg !4809
  store i32 %cond.i.i, i32* %retval.i12.i, align 4, !dbg !4811
  br label %kmalloc_type.exit.i, !dbg !4811

kmalloc_type.exit.i:                              ; preds = %if.end.i16.i, %if.then.i15.i
  %51 = load i32, i32* %retval.i12.i, align 4, !dbg !4812
  %idxprom.i = zext i32 %51 to i64, !dbg !4813
  %arrayidx.i = getelementptr [3 x [14 x %struct.kmem_cache*]], [3 x [14 x %struct.kmem_cache*]]* @kmalloc_caches, i64 0, i64 %idxprom.i, !dbg !4813
  %52 = load i32, i32* %index.i, align 4, !dbg !4814
  %idxprom6.i = zext i32 %52 to i64, !dbg !4813
  %arrayidx7.i = getelementptr [14 x %struct.kmem_cache*], [14 x %struct.kmem_cache*]* %arrayidx.i, i64 0, i64 %idxprom6.i, !dbg !4813
  %53 = load %struct.kmem_cache*, %struct.kmem_cache** %arrayidx7.i, align 8, !dbg !4813
  %54 = load i32, i32* %flags.addr.i, align 4, !dbg !4815
  %55 = load i64, i64* %size.addr.i, align 8, !dbg !4816
  store %struct.kmem_cache* %53, %struct.kmem_cache** %s.addr.i.i, align 8
  store i32 %54, i32* %flags.addr.i17.i, align 4
  store i64 %55, i64* %size.addr.i18.i, align 8
  %56 = load %struct.kmem_cache*, %struct.kmem_cache** %s.addr.i.i, align 8, !dbg !4817
  %57 = load i32, i32* %flags.addr.i17.i, align 4, !dbg !4818
  %call.i19.i = call noalias i8* @kmem_cache_alloc(%struct.kmem_cache* %56, i32 %57) #12, !dbg !4819
  %ptrint.i.i = ptrtoint i8* %call.i19.i to i64, !dbg !4819
  %maskedptr.i.i = and i64 %ptrint.i.i, 7, !dbg !4819
  %maskcond.i.i = icmp eq i64 %maskedptr.i.i, 0, !dbg !4819
  call void @llvm.assume(i1 %maskcond.i.i) #10, !dbg !4819
  store i8* %call.i19.i, i8** %ret.i.i, align 8, !dbg !4580
  %58 = load %struct.kmem_cache*, %struct.kmem_cache** %s.addr.i.i, align 8, !dbg !4820
  %59 = load i8*, i8** %ret.i.i, align 8, !dbg !4821
  %60 = load i64, i64* %size.addr.i18.i, align 8, !dbg !4822
  %61 = load i32, i32* %flags.addr.i17.i, align 4, !dbg !4823
  %call1.i.i = call i8* @kasan_kmalloc(%struct.kmem_cache* %58, i8* %59, i64 %60, i32 %61) #12, !dbg !4824
  store i8* %call1.i.i, i8** %ret.i.i, align 8, !dbg !4825
  %62 = load i8*, i8** %ret.i.i, align 8, !dbg !4826
  store i8* %62, i8** %retval.i, align 8, !dbg !4827
  br label %kmalloc.exit, !dbg !4827

if.end9.i:                                        ; preds = %entry
  %63 = load i64, i64* %size.addr.i, align 8, !dbg !4828
  %64 = load i32, i32* %flags.addr.i, align 4, !dbg !4829
  %call10.i = call noalias i8* @__kmalloc(i64 %63, i32 %64) #12, !dbg !4830
  %ptrint.i = ptrtoint i8* %call10.i to i64, !dbg !4830
  %maskedptr.i = and i64 %ptrint.i, 7, !dbg !4830
  %maskcond.i = icmp eq i64 %maskedptr.i, 0, !dbg !4830
  call void @llvm.assume(i1 %maskcond.i) #10, !dbg !4830
  store i8* %call10.i, i8** %retval.i, align 8, !dbg !4831
  br label %kmalloc.exit, !dbg !4831

kmalloc.exit:                                     ; preds = %if.then1.i, %if.then3.i, %kmalloc_type.exit.i, %if.end9.i
  %65 = load i8*, i8** %retval.i, align 8, !dbg !4832
  ret i8* %65, !dbg !4833
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @list_add_tail(%struct.list_head* %new, %struct.list_head* %head) #0 !dbg !4834 {
entry:
  %new.addr = alloca %struct.list_head*, align 8
  %head.addr = alloca %struct.list_head*, align 8
  store %struct.list_head* %new, %struct.list_head** %new.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %new.addr, metadata !4838, metadata !DIExpression()), !dbg !4839
  store %struct.list_head* %head, %struct.list_head** %head.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %head.addr, metadata !4840, metadata !DIExpression()), !dbg !4841
  %0 = load %struct.list_head*, %struct.list_head** %new.addr, align 8, !dbg !4842
  %1 = load %struct.list_head*, %struct.list_head** %head.addr, align 8, !dbg !4843
  %prev = getelementptr inbounds %struct.list_head, %struct.list_head* %1, i32 0, i32 1, !dbg !4844
  %2 = load %struct.list_head*, %struct.list_head** %prev, align 8, !dbg !4844
  %3 = load %struct.list_head*, %struct.list_head** %head.addr, align 8, !dbg !4845
  call void @__list_add(%struct.list_head* %0, %struct.list_head* %2, %struct.list_head* %3) #9, !dbg !4846
  ret void, !dbg !4847
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @hid_parse_report(%struct.hid_device* %hid, i8* %start, i32 %size) #0 !dbg !4848 {
entry:
  %retval = alloca i32, align 4
  %hid.addr = alloca %struct.hid_device*, align 8
  %start.addr = alloca i8*, align 8
  %size.addr = alloca i32, align 4
  store %struct.hid_device* %hid, %struct.hid_device** %hid.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.hid_device** %hid.addr, metadata !4851, metadata !DIExpression()), !dbg !4852
  store i8* %start, i8** %start.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %start.addr, metadata !4853, metadata !DIExpression()), !dbg !4854
  store i32 %size, i32* %size.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %size.addr, metadata !4855, metadata !DIExpression()), !dbg !4856
  %0 = load i8*, i8** %start.addr, align 8, !dbg !4857
  %1 = load i32, i32* %size.addr, align 4, !dbg !4858
  %conv = zext i32 %1 to i64, !dbg !4858
  %call = call i8* @kmemdup(i8* %0, i64 %conv, i32 3264) #9, !dbg !4859
  %2 = load %struct.hid_device*, %struct.hid_device** %hid.addr, align 8, !dbg !4860
  %dev_rdesc = getelementptr inbounds %struct.hid_device, %struct.hid_device* %2, i32 0, i32 0, !dbg !4861
  store i8* %call, i8** %dev_rdesc, align 8, !dbg !4862
  %3 = load %struct.hid_device*, %struct.hid_device** %hid.addr, align 8, !dbg !4863
  %dev_rdesc1 = getelementptr inbounds %struct.hid_device, %struct.hid_device* %3, i32 0, i32 0, !dbg !4865
  %4 = load i8*, i8** %dev_rdesc1, align 8, !dbg !4865
  %tobool = icmp ne i8* %4, null, !dbg !4863
  br i1 %tobool, label %if.end, label %if.then, !dbg !4866

if.then:                                          ; preds = %entry
  store i32 -12, i32* %retval, align 4, !dbg !4867
  br label %return, !dbg !4867

if.end:                                           ; preds = %entry
  %5 = load i32, i32* %size.addr, align 4, !dbg !4868
  %6 = load %struct.hid_device*, %struct.hid_device** %hid.addr, align 8, !dbg !4869
  %dev_rsize = getelementptr inbounds %struct.hid_device, %struct.hid_device* %6, i32 0, i32 1, !dbg !4870
  store i32 %5, i32* %dev_rsize, align 8, !dbg !4871
  store i32 0, i32* %retval, align 4, !dbg !4872
  br label %return, !dbg !4872

return:                                           ; preds = %if.end, %if.then
  %7 = load i32, i32* %retval, align 4, !dbg !4873
  ret i32 %7, !dbg !4873
}

; Function Attrs: noredzone
declare dso_local i8* @kmemdup(i8*, i64, i32) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local %struct.hid_report* @hid_validate_values(%struct.hid_device* %hid, i32 %type, i32 %id, i32 %field_index, i32 %report_counts) #0 !dbg !4874 {
entry:
  %retval = alloca %struct.hid_report*, align 8
  %hid.addr = alloca %struct.hid_device*, align 8
  %type.addr = alloca i32, align 4
  %id.addr = alloca i32, align 4
  %field_index.addr = alloca i32, align 4
  %report_counts.addr = alloca i32, align 4
  %report = alloca %struct.hid_report*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.hid_report*, align 8
  store %struct.hid_device* %hid, %struct.hid_device** %hid.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.hid_device** %hid.addr, metadata !4877, metadata !DIExpression()), !dbg !4878
  store i32 %type, i32* %type.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %type.addr, metadata !4879, metadata !DIExpression()), !dbg !4880
  store i32 %id, i32* %id.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %id.addr, metadata !4881, metadata !DIExpression()), !dbg !4882
  store i32 %field_index, i32* %field_index.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %field_index.addr, metadata !4883, metadata !DIExpression()), !dbg !4884
  store i32 %report_counts, i32* %report_counts.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %report_counts.addr, metadata !4885, metadata !DIExpression()), !dbg !4886
  call void @llvm.dbg.declare(metadata %struct.hid_report** %report, metadata !4887, metadata !DIExpression()), !dbg !4888
  %0 = load i32, i32* %type.addr, align 4, !dbg !4889
  %cmp = icmp ugt i32 %0, 2, !dbg !4891
  br i1 %cmp, label %if.then, label %if.end, !dbg !4892

if.then:                                          ; preds = %entry
  %1 = load %struct.hid_device*, %struct.hid_device** %hid.addr, align 8, !dbg !4893
  %dev = getelementptr inbounds %struct.hid_device, %struct.hid_device* %1, i32 0, i32 18, !dbg !4893
  %2 = load i32, i32* %type.addr, align 4, !dbg !4893
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %dev, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str, i64 0, i64 0), i32 %2) #13, !dbg !4893
  store %struct.hid_report* null, %struct.hid_report** %retval, align 8, !dbg !4895
  br label %return, !dbg !4895

if.end:                                           ; preds = %entry
  %3 = load i32, i32* %id.addr, align 4, !dbg !4896
  %cmp1 = icmp uge i32 %3, 256, !dbg !4898
  br i1 %cmp1, label %if.then2, label %if.end4, !dbg !4899

if.then2:                                         ; preds = %if.end
  %4 = load %struct.hid_device*, %struct.hid_device** %hid.addr, align 8, !dbg !4900
  %dev3 = getelementptr inbounds %struct.hid_device, %struct.hid_device* %4, i32 0, i32 18, !dbg !4900
  %5 = load i32, i32* %id.addr, align 4, !dbg !4900
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %dev3, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.1, i64 0, i64 0), i32 %5) #13, !dbg !4900
  store %struct.hid_report* null, %struct.hid_report** %retval, align 8, !dbg !4902
  br label %return, !dbg !4902

if.end4:                                          ; preds = %if.end
  %6 = load i32, i32* %id.addr, align 4, !dbg !4903
  %cmp5 = icmp eq i32 %6, 0, !dbg !4905
  br i1 %cmp5, label %if.then6, label %if.else, !dbg !4906

if.then6:                                         ; preds = %if.end4
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !4907, metadata !DIExpression()), !dbg !4910
  %7 = load %struct.hid_device*, %struct.hid_device** %hid.addr, align 8, !dbg !4910
  %report_enum = getelementptr inbounds %struct.hid_device, %struct.hid_device* %7, i32 0, i32 15, !dbg !4910
  %8 = load i32, i32* %type.addr, align 4, !dbg !4910
  %idxprom = zext i32 %8 to i64, !dbg !4910
  %arrayidx = getelementptr [3 x %struct.hid_report_enum], [3 x %struct.hid_report_enum]* %report_enum, i64 0, i64 %idxprom, !dbg !4910
  %report_list = getelementptr inbounds %struct.hid_report_enum, %struct.hid_report_enum* %arrayidx, i32 0, i32 1, !dbg !4910
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %report_list, i32 0, i32 0, !dbg !4910
  %9 = load %struct.list_head*, %struct.list_head** %next, align 8, !dbg !4910
  %10 = bitcast %struct.list_head* %9 to i8*, !dbg !4910
  store i8* %10, i8** %__mptr, align 8, !dbg !4910
  br label %do.body, !dbg !4910

do.body:                                          ; preds = %if.then6
  br label %do.end, !dbg !4911

do.end:                                           ; preds = %do.body
  %11 = load i8*, i8** %__mptr, align 8, !dbg !4910
  %add.ptr = getelementptr i8, i8* %11, i64 0, !dbg !4910
  %12 = bitcast i8* %add.ptr to %struct.hid_report*, !dbg !4910
  store %struct.hid_report* %12, %struct.hid_report** %tmp, align 8, !dbg !4911
  %13 = load %struct.hid_report*, %struct.hid_report** %tmp, align 8, !dbg !4910
  store %struct.hid_report* %13, %struct.hid_report** %report, align 8, !dbg !4913
  br label %if.end12, !dbg !4914

if.else:                                          ; preds = %if.end4
  %14 = load %struct.hid_device*, %struct.hid_device** %hid.addr, align 8, !dbg !4915
  %report_enum7 = getelementptr inbounds %struct.hid_device, %struct.hid_device* %14, i32 0, i32 15, !dbg !4917
  %15 = load i32, i32* %type.addr, align 4, !dbg !4918
  %idxprom8 = zext i32 %15 to i64, !dbg !4915
  %arrayidx9 = getelementptr [3 x %struct.hid_report_enum], [3 x %struct.hid_report_enum]* %report_enum7, i64 0, i64 %idxprom8, !dbg !4915
  %report_id_hash = getelementptr inbounds %struct.hid_report_enum, %struct.hid_report_enum* %arrayidx9, i32 0, i32 2, !dbg !4919
  %16 = load i32, i32* %id.addr, align 4, !dbg !4920
  %idxprom10 = zext i32 %16 to i64, !dbg !4915
  %arrayidx11 = getelementptr [256 x %struct.hid_report*], [256 x %struct.hid_report*]* %report_id_hash, i64 0, i64 %idxprom10, !dbg !4915
  %17 = load %struct.hid_report*, %struct.hid_report** %arrayidx11, align 8, !dbg !4915
  store %struct.hid_report* %17, %struct.hid_report** %report, align 8, !dbg !4921
  br label %if.end12

if.end12:                                         ; preds = %if.else, %do.end
  %18 = load %struct.hid_report*, %struct.hid_report** %report, align 8, !dbg !4922
  %tobool = icmp ne %struct.hid_report* %18, null, !dbg !4922
  br i1 %tobool, label %if.end17, label %if.then13, !dbg !4924

if.then13:                                        ; preds = %if.end12
  %19 = load %struct.hid_device*, %struct.hid_device** %hid.addr, align 8, !dbg !4925
  %dev14 = getelementptr inbounds %struct.hid_device, %struct.hid_device* %19, i32 0, i32 18, !dbg !4925
  %20 = load i32, i32* %type.addr, align 4, !dbg !4925
  %idxprom15 = zext i32 %20 to i64, !dbg !4925
  %arrayidx16 = getelementptr [3 x i8*], [3 x i8*]* @hid_report_names, i64 0, i64 %idxprom15, !dbg !4925
  %21 = load i8*, i8** %arrayidx16, align 8, !dbg !4925
  %22 = load i32, i32* %id.addr, align 4, !dbg !4925
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %dev14, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.2, i64 0, i64 0), i8* %21, i32 %22) #13, !dbg !4925
  store %struct.hid_report* null, %struct.hid_report** %retval, align 8, !dbg !4927
  br label %return, !dbg !4927

if.end17:                                         ; preds = %if.end12
  %23 = load %struct.hid_report*, %struct.hid_report** %report, align 8, !dbg !4928
  %maxfield = getelementptr inbounds %struct.hid_report, %struct.hid_report* %23, i32 0, i32 6, !dbg !4930
  %24 = load i32, i32* %maxfield, align 8, !dbg !4930
  %25 = load i32, i32* %field_index.addr, align 4, !dbg !4931
  %cmp18 = icmp ule i32 %24, %25, !dbg !4932
  br i1 %cmp18, label %if.then19, label %if.end23, !dbg !4933

if.then19:                                        ; preds = %if.end17
  %26 = load %struct.hid_device*, %struct.hid_device** %hid.addr, align 8, !dbg !4934
  %dev20 = getelementptr inbounds %struct.hid_device, %struct.hid_device* %26, i32 0, i32 18, !dbg !4934
  %27 = load i32, i32* %type.addr, align 4, !dbg !4934
  %idxprom21 = zext i32 %27 to i64, !dbg !4934
  %arrayidx22 = getelementptr [3 x i8*], [3 x i8*]* @hid_report_names, i64 0, i64 %idxprom21, !dbg !4934
  %28 = load i8*, i8** %arrayidx22, align 8, !dbg !4934
  %29 = load i32, i32* %id.addr, align 4, !dbg !4934
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %dev20, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.3, i64 0, i64 0), i8* %28, i32 %29) #13, !dbg !4934
  store %struct.hid_report* null, %struct.hid_report** %retval, align 8, !dbg !4936
  br label %return, !dbg !4936

if.end23:                                         ; preds = %if.end17
  %30 = load %struct.hid_report*, %struct.hid_report** %report, align 8, !dbg !4937
  %field = getelementptr inbounds %struct.hid_report, %struct.hid_report* %30, i32 0, i32 5, !dbg !4939
  %31 = load i32, i32* %field_index.addr, align 4, !dbg !4940
  %idxprom24 = zext i32 %31 to i64, !dbg !4937
  %arrayidx25 = getelementptr [256 x %struct.hid_field*], [256 x %struct.hid_field*]* %field, i64 0, i64 %idxprom24, !dbg !4937
  %32 = load %struct.hid_field*, %struct.hid_field** %arrayidx25, align 8, !dbg !4937
  %report_count = getelementptr inbounds %struct.hid_field, %struct.hid_field* %32, i32 0, i32 8, !dbg !4941
  %33 = load i32, i32* %report_count, align 8, !dbg !4941
  %34 = load i32, i32* %report_counts.addr, align 4, !dbg !4942
  %cmp26 = icmp ult i32 %33, %34, !dbg !4943
  br i1 %cmp26, label %if.then27, label %if.end31, !dbg !4944

if.then27:                                        ; preds = %if.end23
  %35 = load %struct.hid_device*, %struct.hid_device** %hid.addr, align 8, !dbg !4945
  %dev28 = getelementptr inbounds %struct.hid_device, %struct.hid_device* %35, i32 0, i32 18, !dbg !4945
  %36 = load i32, i32* %type.addr, align 4, !dbg !4945
  %idxprom29 = zext i32 %36 to i64, !dbg !4945
  %arrayidx30 = getelementptr [3 x i8*], [3 x i8*]* @hid_report_names, i64 0, i64 %idxprom29, !dbg !4945
  %37 = load i8*, i8** %arrayidx30, align 8, !dbg !4945
  %38 = load i32, i32* %id.addr, align 4, !dbg !4945
  %39 = load i32, i32* %field_index.addr, align 4, !dbg !4945
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %dev28, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.4, i64 0, i64 0), i8* %37, i32 %38, i32 %39) #13, !dbg !4945
  store %struct.hid_report* null, %struct.hid_report** %retval, align 8, !dbg !4947
  br label %return, !dbg !4947

if.end31:                                         ; preds = %if.end23
  %40 = load %struct.hid_report*, %struct.hid_report** %report, align 8, !dbg !4948
  store %struct.hid_report* %40, %struct.hid_report** %retval, align 8, !dbg !4949
  br label %return, !dbg !4949

return:                                           ; preds = %if.end31, %if.then27, %if.then19, %if.then13, %if.then2, %if.then
  %41 = load %struct.hid_report*, %struct.hid_report** %retval, align 8, !dbg !4950
  ret %struct.hid_report* %41, !dbg !4950
}

; Function Attrs: cold noredzone
declare dso_local void @_dev_err(%struct.device*, i8*, ...) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @hid_setup_resolution_multiplier(%struct.hid_device* %hid) #0 !dbg !4951 {
entry:
  %hid.addr = alloca %struct.hid_device*, align 8
  %rep_enum = alloca %struct.hid_report_enum*, align 8
  %rep = alloca %struct.hid_report*, align 8
  %usage = alloca %struct.hid_usage*, align 8
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.hid_report*, align 8
  %__mptr30 = alloca i8*, align 8
  %tmp35 = alloca %struct.hid_report*, align 8
  store %struct.hid_device* %hid, %struct.hid_device** %hid.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.hid_device** %hid.addr, metadata !4952, metadata !DIExpression()), !dbg !4953
  call void @llvm.dbg.declare(metadata %struct.hid_report_enum** %rep_enum, metadata !4954, metadata !DIExpression()), !dbg !4955
  call void @llvm.dbg.declare(metadata %struct.hid_report** %rep, metadata !4956, metadata !DIExpression()), !dbg !4957
  call void @llvm.dbg.declare(metadata %struct.hid_usage** %usage, metadata !4958, metadata !DIExpression()), !dbg !4959
  call void @llvm.dbg.declare(metadata i32* %i, metadata !4960, metadata !DIExpression()), !dbg !4961
  call void @llvm.dbg.declare(metadata i32* %j, metadata !4962, metadata !DIExpression()), !dbg !4963
  %0 = load %struct.hid_device*, %struct.hid_device** %hid.addr, align 8, !dbg !4964
  %report_enum = getelementptr inbounds %struct.hid_device, %struct.hid_device* %0, i32 0, i32 15, !dbg !4965
  %arrayidx = getelementptr [3 x %struct.hid_report_enum], [3 x %struct.hid_report_enum]* %report_enum, i64 0, i64 2, !dbg !4964
  store %struct.hid_report_enum* %arrayidx, %struct.hid_report_enum** %rep_enum, align 8, !dbg !4966
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !4967, metadata !DIExpression()), !dbg !4970
  %1 = load %struct.hid_report_enum*, %struct.hid_report_enum** %rep_enum, align 8, !dbg !4970
  %report_list = getelementptr inbounds %struct.hid_report_enum, %struct.hid_report_enum* %1, i32 0, i32 1, !dbg !4970
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %report_list, i32 0, i32 0, !dbg !4970
  %2 = load %struct.list_head*, %struct.list_head** %next, align 8, !dbg !4970
  %3 = bitcast %struct.list_head* %2 to i8*, !dbg !4970
  store i8* %3, i8** %__mptr, align 8, !dbg !4970
  br label %do.body, !dbg !4970

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !4971

do.end:                                           ; preds = %do.body
  %4 = load i8*, i8** %__mptr, align 8, !dbg !4970
  %add.ptr = getelementptr i8, i8* %4, i64 0, !dbg !4970
  %5 = bitcast i8* %add.ptr to %struct.hid_report*, !dbg !4970
  store %struct.hid_report* %5, %struct.hid_report** %tmp, align 8, !dbg !4971
  %6 = load %struct.hid_report*, %struct.hid_report** %tmp, align 8, !dbg !4970
  store %struct.hid_report* %6, %struct.hid_report** %rep, align 8, !dbg !4973
  br label %for.cond, !dbg !4973

for.cond:                                         ; preds = %do.end34, %do.end
  %7 = load %struct.hid_report*, %struct.hid_report** %rep, align 8, !dbg !4974
  %list = getelementptr inbounds %struct.hid_report, %struct.hid_report* %7, i32 0, i32 0, !dbg !4974
  %8 = load %struct.hid_report_enum*, %struct.hid_report_enum** %rep_enum, align 8, !dbg !4974
  %report_list1 = getelementptr inbounds %struct.hid_report_enum, %struct.hid_report_enum* %8, i32 0, i32 1, !dbg !4974
  %cmp = icmp eq %struct.list_head* %list, %report_list1, !dbg !4974
  %lnot = xor i1 %cmp, true, !dbg !4974
  br i1 %lnot, label %for.body, label %for.end37, !dbg !4973

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %i, align 4, !dbg !4976
  br label %for.cond2, !dbg !4979

for.cond2:                                        ; preds = %for.inc26, %for.body
  %9 = load i32, i32* %i, align 4, !dbg !4980
  %10 = load %struct.hid_report*, %struct.hid_report** %rep, align 8, !dbg !4982
  %maxfield = getelementptr inbounds %struct.hid_report, %struct.hid_report* %10, i32 0, i32 6, !dbg !4983
  %11 = load i32, i32* %maxfield, align 8, !dbg !4983
  %cmp3 = icmp ult i32 %9, %11, !dbg !4984
  br i1 %cmp3, label %for.body4, label %for.end28, !dbg !4985

for.body4:                                        ; preds = %for.cond2
  %12 = load %struct.hid_report*, %struct.hid_report** %rep, align 8, !dbg !4986
  %field = getelementptr inbounds %struct.hid_report, %struct.hid_report* %12, i32 0, i32 5, !dbg !4989
  %13 = load i32, i32* %i, align 4, !dbg !4990
  %idxprom = sext i32 %13 to i64, !dbg !4986
  %arrayidx5 = getelementptr [256 x %struct.hid_field*], [256 x %struct.hid_field*]* %field, i64 0, i64 %idxprom, !dbg !4986
  %14 = load %struct.hid_field*, %struct.hid_field** %arrayidx5, align 8, !dbg !4986
  %report_count = getelementptr inbounds %struct.hid_field, %struct.hid_field* %14, i32 0, i32 8, !dbg !4991
  %15 = load i32, i32* %report_count, align 8, !dbg !4991
  %cmp6 = icmp ult i32 %15, 1, !dbg !4992
  br i1 %cmp6, label %if.then, label %if.end, !dbg !4993

if.then:                                          ; preds = %for.body4
  br label %for.inc26, !dbg !4994

if.end:                                           ; preds = %for.body4
  store i32 0, i32* %j, align 4, !dbg !4995
  br label %for.cond7, !dbg !4997

for.cond7:                                        ; preds = %for.inc, %if.end
  %16 = load i32, i32* %j, align 4, !dbg !4998
  %17 = load %struct.hid_report*, %struct.hid_report** %rep, align 8, !dbg !5000
  %field8 = getelementptr inbounds %struct.hid_report, %struct.hid_report* %17, i32 0, i32 5, !dbg !5001
  %18 = load i32, i32* %i, align 4, !dbg !5002
  %idxprom9 = sext i32 %18 to i64, !dbg !5000
  %arrayidx10 = getelementptr [256 x %struct.hid_field*], [256 x %struct.hid_field*]* %field8, i64 0, i64 %idxprom9, !dbg !5000
  %19 = load %struct.hid_field*, %struct.hid_field** %arrayidx10, align 8, !dbg !5000
  %maxusage = getelementptr inbounds %struct.hid_field, %struct.hid_field* %19, i32 0, i32 4, !dbg !5003
  %20 = load i32, i32* %maxusage, align 8, !dbg !5003
  %cmp11 = icmp ult i32 %16, %20, !dbg !5004
  br i1 %cmp11, label %for.body12, label %for.end, !dbg !5005

for.body12:                                       ; preds = %for.cond7
  %21 = load %struct.hid_report*, %struct.hid_report** %rep, align 8, !dbg !5006
  %field13 = getelementptr inbounds %struct.hid_report, %struct.hid_report* %21, i32 0, i32 5, !dbg !5008
  %22 = load i32, i32* %i, align 4, !dbg !5009
  %idxprom14 = sext i32 %22 to i64, !dbg !5006
  %arrayidx15 = getelementptr [256 x %struct.hid_field*], [256 x %struct.hid_field*]* %field13, i64 0, i64 %idxprom14, !dbg !5006
  %23 = load %struct.hid_field*, %struct.hid_field** %arrayidx15, align 8, !dbg !5006
  %usage16 = getelementptr inbounds %struct.hid_field, %struct.hid_field* %23, i32 0, i32 3, !dbg !5010
  %24 = load %struct.hid_usage*, %struct.hid_usage** %usage16, align 8, !dbg !5010
  %25 = load i32, i32* %j, align 4, !dbg !5011
  %idxprom17 = sext i32 %25 to i64, !dbg !5006
  %arrayidx18 = getelementptr %struct.hid_usage, %struct.hid_usage* %24, i64 %idxprom17, !dbg !5006
  store %struct.hid_usage* %arrayidx18, %struct.hid_usage** %usage, align 8, !dbg !5012
  %26 = load %struct.hid_usage*, %struct.hid_usage** %usage, align 8, !dbg !5013
  %hid19 = getelementptr inbounds %struct.hid_usage, %struct.hid_usage* %26, i32 0, i32 0, !dbg !5015
  %27 = load i32, i32* %hid19, align 4, !dbg !5015
  %cmp20 = icmp eq i32 %27, 65608, !dbg !5016
  br i1 %cmp20, label %if.then21, label %if.end25, !dbg !5017

if.then21:                                        ; preds = %for.body12
  %28 = load %struct.hid_device*, %struct.hid_device** %hid.addr, align 8, !dbg !5018
  %29 = load %struct.hid_report*, %struct.hid_report** %rep, align 8, !dbg !5019
  %field22 = getelementptr inbounds %struct.hid_report, %struct.hid_report* %29, i32 0, i32 5, !dbg !5020
  %30 = load i32, i32* %i, align 4, !dbg !5021
  %idxprom23 = sext i32 %30 to i64, !dbg !5019
  %arrayidx24 = getelementptr [256 x %struct.hid_field*], [256 x %struct.hid_field*]* %field22, i64 0, i64 %idxprom23, !dbg !5019
  %31 = load %struct.hid_field*, %struct.hid_field** %arrayidx24, align 8, !dbg !5019
  call void @hid_apply_multiplier(%struct.hid_device* %28, %struct.hid_field* %31) #9, !dbg !5022
  br label %if.end25, !dbg !5022

if.end25:                                         ; preds = %if.then21, %for.body12
  br label %for.inc, !dbg !5023

for.inc:                                          ; preds = %if.end25
  %32 = load i32, i32* %j, align 4, !dbg !5024
  %inc = add i32 %32, 1, !dbg !5024
  store i32 %inc, i32* %j, align 4, !dbg !5024
  br label %for.cond7, !dbg !5025, !llvm.loop !5026

for.end:                                          ; preds = %for.cond7
  br label %for.inc26, !dbg !5028

for.inc26:                                        ; preds = %for.end, %if.then
  %33 = load i32, i32* %i, align 4, !dbg !5029
  %inc27 = add i32 %33, 1, !dbg !5029
  store i32 %inc27, i32* %i, align 4, !dbg !5029
  br label %for.cond2, !dbg !5030, !llvm.loop !5031

for.end28:                                        ; preds = %for.cond2
  br label %for.inc29, !dbg !5033

for.inc29:                                        ; preds = %for.end28
  call void @llvm.dbg.declare(metadata i8** %__mptr30, metadata !5034, metadata !DIExpression()), !dbg !5036
  %34 = load %struct.hid_report*, %struct.hid_report** %rep, align 8, !dbg !5036
  %list31 = getelementptr inbounds %struct.hid_report, %struct.hid_report* %34, i32 0, i32 0, !dbg !5036
  %next32 = getelementptr inbounds %struct.list_head, %struct.list_head* %list31, i32 0, i32 0, !dbg !5036
  %35 = load %struct.list_head*, %struct.list_head** %next32, align 8, !dbg !5036
  %36 = bitcast %struct.list_head* %35 to i8*, !dbg !5036
  store i8* %36, i8** %__mptr30, align 8, !dbg !5036
  br label %do.body33, !dbg !5036

do.body33:                                        ; preds = %for.inc29
  br label %do.end34, !dbg !5037

do.end34:                                         ; preds = %do.body33
  %37 = load i8*, i8** %__mptr30, align 8, !dbg !5036
  %add.ptr36 = getelementptr i8, i8* %37, i64 0, !dbg !5036
  %38 = bitcast i8* %add.ptr36 to %struct.hid_report*, !dbg !5036
  store %struct.hid_report* %38, %struct.hid_report** %tmp35, align 8, !dbg !5037
  %39 = load %struct.hid_report*, %struct.hid_report** %tmp35, align 8, !dbg !5036
  store %struct.hid_report* %39, %struct.hid_report** %rep, align 8, !dbg !4974
  br label %for.cond, !dbg !4974, !llvm.loop !5039

for.end37:                                        ; preds = %for.cond
  ret void, !dbg !5041
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @hid_apply_multiplier(%struct.hid_device* %hid, %struct.hid_field* %multiplier) #0 !dbg !5042 {
entry:
  %hid.addr = alloca %struct.hid_device*, align 8
  %multiplier.addr = alloca %struct.hid_field*, align 8
  %rep_enum = alloca %struct.hid_report_enum*, align 8
  %rep = alloca %struct.hid_report*, align 8
  %field = alloca %struct.hid_field*, align 8
  %multiplier_collection = alloca %struct.hid_collection*, align 8
  %effective_multiplier = alloca i32, align 4
  %i = alloca i32, align 4
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.hid_report*, align 8
  %__mptr16 = alloca i8*, align 8
  %tmp21 = alloca %struct.hid_report*, align 8
  store %struct.hid_device* %hid, %struct.hid_device** %hid.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.hid_device** %hid.addr, metadata !5045, metadata !DIExpression()), !dbg !5046
  store %struct.hid_field* %multiplier, %struct.hid_field** %multiplier.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.hid_field** %multiplier.addr, metadata !5047, metadata !DIExpression()), !dbg !5048
  call void @llvm.dbg.declare(metadata %struct.hid_report_enum** %rep_enum, metadata !5049, metadata !DIExpression()), !dbg !5050
  call void @llvm.dbg.declare(metadata %struct.hid_report** %rep, metadata !5051, metadata !DIExpression()), !dbg !5052
  call void @llvm.dbg.declare(metadata %struct.hid_field** %field, metadata !5053, metadata !DIExpression()), !dbg !5054
  call void @llvm.dbg.declare(metadata %struct.hid_collection** %multiplier_collection, metadata !5055, metadata !DIExpression()), !dbg !5056
  call void @llvm.dbg.declare(metadata i32* %effective_multiplier, metadata !5057, metadata !DIExpression()), !dbg !5058
  call void @llvm.dbg.declare(metadata i32* %i, metadata !5059, metadata !DIExpression()), !dbg !5060
  %0 = load %struct.hid_device*, %struct.hid_device** %hid.addr, align 8, !dbg !5061
  %collection = getelementptr inbounds %struct.hid_device, %struct.hid_device* %0, i32 0, i32 4, !dbg !5062
  %1 = load %struct.hid_collection*, %struct.hid_collection** %collection, align 8, !dbg !5062
  %2 = load %struct.hid_field*, %struct.hid_field** %multiplier.addr, align 8, !dbg !5063
  %usage = getelementptr inbounds %struct.hid_field, %struct.hid_field* %2, i32 0, i32 3, !dbg !5064
  %3 = load %struct.hid_usage*, %struct.hid_usage** %usage, align 8, !dbg !5064
  %collection_index = getelementptr inbounds %struct.hid_usage, %struct.hid_usage* %3, i32 0, i32 1, !dbg !5065
  %4 = load i32, i32* %collection_index, align 4, !dbg !5065
  %idxprom = zext i32 %4 to i64, !dbg !5061
  %arrayidx = getelementptr %struct.hid_collection, %struct.hid_collection* %1, i64 %idxprom, !dbg !5061
  store %struct.hid_collection* %arrayidx, %struct.hid_collection** %multiplier_collection, align 8, !dbg !5066
  br label %while.cond, !dbg !5067

while.cond:                                       ; preds = %while.body, %entry
  %5 = load %struct.hid_collection*, %struct.hid_collection** %multiplier_collection, align 8, !dbg !5068
  %parent_idx = getelementptr inbounds %struct.hid_collection, %struct.hid_collection* %5, i32 0, i32 0, !dbg !5069
  %6 = load i32, i32* %parent_idx, align 4, !dbg !5069
  %cmp = icmp ne i32 %6, -1, !dbg !5070
  br i1 %cmp, label %land.rhs, label %land.end, !dbg !5071

land.rhs:                                         ; preds = %while.cond
  %7 = load %struct.hid_collection*, %struct.hid_collection** %multiplier_collection, align 8, !dbg !5072
  %type = getelementptr inbounds %struct.hid_collection, %struct.hid_collection* %7, i32 0, i32 1, !dbg !5073
  %8 = load i32, i32* %type, align 4, !dbg !5073
  %cmp1 = icmp ne i32 %8, 2, !dbg !5074
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond
  %9 = phi i1 [ false, %while.cond ], [ %cmp1, %land.rhs ], !dbg !5075
  br i1 %9, label %while.body, label %while.end, !dbg !5067

while.body:                                       ; preds = %land.end
  %10 = load %struct.hid_device*, %struct.hid_device** %hid.addr, align 8, !dbg !5076
  %collection2 = getelementptr inbounds %struct.hid_device, %struct.hid_device* %10, i32 0, i32 4, !dbg !5077
  %11 = load %struct.hid_collection*, %struct.hid_collection** %collection2, align 8, !dbg !5077
  %12 = load %struct.hid_collection*, %struct.hid_collection** %multiplier_collection, align 8, !dbg !5078
  %parent_idx3 = getelementptr inbounds %struct.hid_collection, %struct.hid_collection* %12, i32 0, i32 0, !dbg !5079
  %13 = load i32, i32* %parent_idx3, align 4, !dbg !5079
  %idxprom4 = sext i32 %13 to i64, !dbg !5076
  %arrayidx5 = getelementptr %struct.hid_collection, %struct.hid_collection* %11, i64 %idxprom4, !dbg !5076
  store %struct.hid_collection* %arrayidx5, %struct.hid_collection** %multiplier_collection, align 8, !dbg !5080
  br label %while.cond, !dbg !5067, !llvm.loop !5081

while.end:                                        ; preds = %land.end
  %14 = load %struct.hid_device*, %struct.hid_device** %hid.addr, align 8, !dbg !5083
  %15 = load %struct.hid_field*, %struct.hid_field** %multiplier.addr, align 8, !dbg !5084
  %call = call i32 @hid_calculate_multiplier(%struct.hid_device* %14, %struct.hid_field* %15) #9, !dbg !5085
  store i32 %call, i32* %effective_multiplier, align 4, !dbg !5086
  %16 = load %struct.hid_device*, %struct.hid_device** %hid.addr, align 8, !dbg !5087
  %report_enum = getelementptr inbounds %struct.hid_device, %struct.hid_device* %16, i32 0, i32 15, !dbg !5088
  %arrayidx6 = getelementptr [3 x %struct.hid_report_enum], [3 x %struct.hid_report_enum]* %report_enum, i64 0, i64 0, !dbg !5087
  store %struct.hid_report_enum* %arrayidx6, %struct.hid_report_enum** %rep_enum, align 8, !dbg !5089
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !5090, metadata !DIExpression()), !dbg !5093
  %17 = load %struct.hid_report_enum*, %struct.hid_report_enum** %rep_enum, align 8, !dbg !5093
  %report_list = getelementptr inbounds %struct.hid_report_enum, %struct.hid_report_enum* %17, i32 0, i32 1, !dbg !5093
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %report_list, i32 0, i32 0, !dbg !5093
  %18 = load %struct.list_head*, %struct.list_head** %next, align 8, !dbg !5093
  %19 = bitcast %struct.list_head* %18 to i8*, !dbg !5093
  store i8* %19, i8** %__mptr, align 8, !dbg !5093
  br label %do.body, !dbg !5093

do.body:                                          ; preds = %while.end
  br label %do.end, !dbg !5094

do.end:                                           ; preds = %do.body
  %20 = load i8*, i8** %__mptr, align 8, !dbg !5093
  %add.ptr = getelementptr i8, i8* %20, i64 0, !dbg !5093
  %21 = bitcast i8* %add.ptr to %struct.hid_report*, !dbg !5093
  store %struct.hid_report* %21, %struct.hid_report** %tmp, align 8, !dbg !5094
  %22 = load %struct.hid_report*, %struct.hid_report** %tmp, align 8, !dbg !5093
  store %struct.hid_report* %22, %struct.hid_report** %rep, align 8, !dbg !5096
  br label %for.cond, !dbg !5096

for.cond:                                         ; preds = %do.end20, %do.end
  %23 = load %struct.hid_report*, %struct.hid_report** %rep, align 8, !dbg !5097
  %list = getelementptr inbounds %struct.hid_report, %struct.hid_report* %23, i32 0, i32 0, !dbg !5097
  %24 = load %struct.hid_report_enum*, %struct.hid_report_enum** %rep_enum, align 8, !dbg !5097
  %report_list7 = getelementptr inbounds %struct.hid_report_enum, %struct.hid_report_enum* %24, i32 0, i32 1, !dbg !5097
  %cmp8 = icmp eq %struct.list_head* %list, %report_list7, !dbg !5097
  %lnot = xor i1 %cmp8, true, !dbg !5097
  br i1 %lnot, label %for.body, label %for.end23, !dbg !5096

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %i, align 4, !dbg !5099
  br label %for.cond9, !dbg !5102

for.cond9:                                        ; preds = %for.inc, %for.body
  %25 = load i32, i32* %i, align 4, !dbg !5103
  %26 = load %struct.hid_report*, %struct.hid_report** %rep, align 8, !dbg !5105
  %maxfield = getelementptr inbounds %struct.hid_report, %struct.hid_report* %26, i32 0, i32 6, !dbg !5106
  %27 = load i32, i32* %maxfield, align 8, !dbg !5106
  %cmp10 = icmp ult i32 %25, %27, !dbg !5107
  br i1 %cmp10, label %for.body11, label %for.end, !dbg !5108

for.body11:                                       ; preds = %for.cond9
  %28 = load %struct.hid_report*, %struct.hid_report** %rep, align 8, !dbg !5109
  %field12 = getelementptr inbounds %struct.hid_report, %struct.hid_report* %28, i32 0, i32 5, !dbg !5111
  %29 = load i32, i32* %i, align 4, !dbg !5112
  %idxprom13 = sext i32 %29 to i64, !dbg !5109
  %arrayidx14 = getelementptr [256 x %struct.hid_field*], [256 x %struct.hid_field*]* %field12, i64 0, i64 %idxprom13, !dbg !5109
  %30 = load %struct.hid_field*, %struct.hid_field** %arrayidx14, align 8, !dbg !5109
  store %struct.hid_field* %30, %struct.hid_field** %field, align 8, !dbg !5113
  %31 = load %struct.hid_device*, %struct.hid_device** %hid.addr, align 8, !dbg !5114
  %32 = load %struct.hid_field*, %struct.hid_field** %field, align 8, !dbg !5115
  %33 = load %struct.hid_collection*, %struct.hid_collection** %multiplier_collection, align 8, !dbg !5116
  %34 = load i32, i32* %effective_multiplier, align 4, !dbg !5117
  call void @hid_apply_multiplier_to_field(%struct.hid_device* %31, %struct.hid_field* %32, %struct.hid_collection* %33, i32 %34) #9, !dbg !5118
  br label %for.inc, !dbg !5119

for.inc:                                          ; preds = %for.body11
  %35 = load i32, i32* %i, align 4, !dbg !5120
  %inc = add i32 %35, 1, !dbg !5120
  store i32 %inc, i32* %i, align 4, !dbg !5120
  br label %for.cond9, !dbg !5121, !llvm.loop !5122

for.end:                                          ; preds = %for.cond9
  br label %for.inc15, !dbg !5124

for.inc15:                                        ; preds = %for.end
  call void @llvm.dbg.declare(metadata i8** %__mptr16, metadata !5125, metadata !DIExpression()), !dbg !5127
  %36 = load %struct.hid_report*, %struct.hid_report** %rep, align 8, !dbg !5127
  %list17 = getelementptr inbounds %struct.hid_report, %struct.hid_report* %36, i32 0, i32 0, !dbg !5127
  %next18 = getelementptr inbounds %struct.list_head, %struct.list_head* %list17, i32 0, i32 0, !dbg !5127
  %37 = load %struct.list_head*, %struct.list_head** %next18, align 8, !dbg !5127
  %38 = bitcast %struct.list_head* %37 to i8*, !dbg !5127
  store i8* %38, i8** %__mptr16, align 8, !dbg !5127
  br label %do.body19, !dbg !5127

do.body19:                                        ; preds = %for.inc15
  br label %do.end20, !dbg !5128

do.end20:                                         ; preds = %do.body19
  %39 = load i8*, i8** %__mptr16, align 8, !dbg !5127
  %add.ptr22 = getelementptr i8, i8* %39, i64 0, !dbg !5127
  %40 = bitcast i8* %add.ptr22 to %struct.hid_report*, !dbg !5127
  store %struct.hid_report* %40, %struct.hid_report** %tmp21, align 8, !dbg !5128
  %41 = load %struct.hid_report*, %struct.hid_report** %tmp21, align 8, !dbg !5127
  store %struct.hid_report* %41, %struct.hid_report** %rep, align 8, !dbg !5097
  br label %for.cond, !dbg !5097, !llvm.loop !5130

for.end23:                                        ; preds = %for.cond
  ret void, !dbg !5132
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @hid_open_report(%struct.hid_device* %device) #0 !dbg !4294 {
entry:
  %retval = alloca i32, align 4
  %device.addr = alloca %struct.hid_device*, align 8
  %parser = alloca %struct.hid_parser*, align 8
  %item = alloca %struct.hid_item, align 8
  %size = alloca i32, align 4
  %start = alloca i8*, align 8
  %buf = alloca i8*, align 8
  %end = alloca i8*, align 8
  %next = alloca i8*, align 8
  %ret = alloca i32, align 4
  %__ret_warn_on = alloca i32, align 4
  %tmp = alloca i64, align 8
  %__ret_warn_on23 = alloca i32, align 4
  %tmp48 = alloca i64, align 8
  store %struct.hid_device* %device, %struct.hid_device** %device.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.hid_device** %device.addr, metadata !5133, metadata !DIExpression()), !dbg !5134
  call void @llvm.dbg.declare(metadata %struct.hid_parser** %parser, metadata !5135, metadata !DIExpression()), !dbg !5136
  call void @llvm.dbg.declare(metadata %struct.hid_item* %item, metadata !5137, metadata !DIExpression()), !dbg !5138
  call void @llvm.dbg.declare(metadata i32* %size, metadata !5139, metadata !DIExpression()), !dbg !5140
  call void @llvm.dbg.declare(metadata i8** %start, metadata !5141, metadata !DIExpression()), !dbg !5142
  call void @llvm.dbg.declare(metadata i8** %buf, metadata !5143, metadata !DIExpression()), !dbg !5144
  call void @llvm.dbg.declare(metadata i8** %end, metadata !5145, metadata !DIExpression()), !dbg !5146
  call void @llvm.dbg.declare(metadata i8** %next, metadata !5147, metadata !DIExpression()), !dbg !5148
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !5149, metadata !DIExpression()), !dbg !5150
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on, metadata !5151, metadata !DIExpression()), !dbg !5154
  %0 = load %struct.hid_device*, %struct.hid_device** %device.addr, align 8, !dbg !5154
  %status = getelementptr inbounds %struct.hid_device, %struct.hid_device* %0, i32 0, i32 23, !dbg !5154
  %1 = load i64, i64* %status, align 8, !dbg !5154
  %and = and i64 %1, 2, !dbg !5154
  %tobool = icmp ne i64 %and, 0, !dbg !5154
  %lnot = xor i1 %tobool, true, !dbg !5154
  %lnot1 = xor i1 %lnot, true, !dbg !5154
  %lnot.ext = zext i1 %lnot1 to i32, !dbg !5154
  store i32 %lnot.ext, i32* %__ret_warn_on, align 4, !dbg !5154
  %2 = load i32, i32* %__ret_warn_on, align 4, !dbg !5155
  %tobool2 = icmp ne i32 %2, 0, !dbg !5155
  %lnot3 = xor i1 %tobool2, true, !dbg !5155
  %lnot5 = xor i1 %lnot3, true, !dbg !5155
  %lnot.ext6 = zext i1 %lnot5 to i32, !dbg !5155
  %conv = sext i32 %lnot.ext6 to i64, !dbg !5155
  %tobool7 = icmp ne i64 %conv, 0, !dbg !5155
  br i1 %tobool7, label %if.then, label %if.end, !dbg !5154

if.then:                                          ; preds = %entry
  br label %do.body, !dbg !5155

do.body:                                          ; preds = %if.then
  br label %do.body8, !dbg !5157

do.body8:                                         ; preds = %do.body
  br label %do.end, !dbg !5159

do.end:                                           ; preds = %do.body8
  br label %do.body9, !dbg !5157

do.body9:                                         ; preds = %do.end
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.5, i64 0, i64 0), i32 1208, i32 2305, i64 12) #10, !dbg !5161, !srcloc !5163
  br label %do.end10, !dbg !5161

do.end10:                                         ; preds = %do.body9
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 240) #10, !dbg !5164, !srcloc !5166
  br label %do.body11, !dbg !5157

do.body11:                                        ; preds = %do.end10
  br label %do.end12, !dbg !5167

do.end12:                                         ; preds = %do.body11
  br label %do.end13, !dbg !5157

do.end13:                                         ; preds = %do.end12
  br label %if.end, !dbg !5157

if.end:                                           ; preds = %do.end13, %entry
  %3 = load i32, i32* %__ret_warn_on, align 4, !dbg !5154
  %tobool14 = icmp ne i32 %3, 0, !dbg !5154
  %lnot15 = xor i1 %tobool14, true, !dbg !5154
  %lnot17 = xor i1 %lnot15, true, !dbg !5154
  %lnot.ext18 = zext i1 %lnot17 to i32, !dbg !5154
  %conv19 = sext i32 %lnot.ext18 to i64, !dbg !5154
  store i64 %conv19, i64* %tmp, align 8, !dbg !5155
  %4 = load i64, i64* %tmp, align 8, !dbg !5154
  %tobool20 = icmp ne i64 %4, 0, !dbg !5169
  br i1 %tobool20, label %if.then21, label %if.end22, !dbg !5170

if.then21:                                        ; preds = %if.end
  store i32 -16, i32* %retval, align 4, !dbg !5171
  br label %return, !dbg !5171

if.end22:                                         ; preds = %if.end
  %5 = load %struct.hid_device*, %struct.hid_device** %device.addr, align 8, !dbg !5172
  %dev_rdesc = getelementptr inbounds %struct.hid_device, %struct.hid_device* %5, i32 0, i32 0, !dbg !5173
  %6 = load i8*, i8** %dev_rdesc, align 8, !dbg !5173
  store i8* %6, i8** %start, align 8, !dbg !5174
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on23, metadata !5175, metadata !DIExpression()), !dbg !5178
  %7 = load i8*, i8** %start, align 8, !dbg !5178
  %tobool24 = icmp ne i8* %7, null, !dbg !5178
  %lnot25 = xor i1 %tobool24, true, !dbg !5178
  %lnot27 = xor i1 %lnot25, true, !dbg !5178
  %lnot29 = xor i1 %lnot27, true, !dbg !5178
  %lnot.ext30 = zext i1 %lnot29 to i32, !dbg !5178
  store i32 %lnot.ext30, i32* %__ret_warn_on23, align 4, !dbg !5178
  %8 = load i32, i32* %__ret_warn_on23, align 4, !dbg !5179
  %tobool31 = icmp ne i32 %8, 0, !dbg !5179
  %lnot32 = xor i1 %tobool31, true, !dbg !5179
  %lnot34 = xor i1 %lnot32, true, !dbg !5179
  %lnot.ext35 = zext i1 %lnot34 to i32, !dbg !5179
  %conv36 = sext i32 %lnot.ext35 to i64, !dbg !5179
  %tobool37 = icmp ne i64 %conv36, 0, !dbg !5179
  br i1 %tobool37, label %if.then38, label %if.end47, !dbg !5178

if.then38:                                        ; preds = %if.end22
  br label %do.body39, !dbg !5179

do.body39:                                        ; preds = %if.then38
  br label %do.body40, !dbg !5181

do.body40:                                        ; preds = %do.body39
  br label %do.end41, !dbg !5183

do.end41:                                         ; preds = %do.body40
  br label %do.body42, !dbg !5181

do.body42:                                        ; preds = %do.end41
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.5, i64 0, i64 0), i32 1212, i32 2305, i64 12) #10, !dbg !5185, !srcloc !5187
  br label %do.end43, !dbg !5185

do.end43:                                         ; preds = %do.body42
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 241) #10, !dbg !5188, !srcloc !5190
  br label %do.body44, !dbg !5181

do.body44:                                        ; preds = %do.end43
  br label %do.end45, !dbg !5191

do.end45:                                         ; preds = %do.body44
  br label %do.end46, !dbg !5181

do.end46:                                         ; preds = %do.end45
  br label %if.end47, !dbg !5181

if.end47:                                         ; preds = %do.end46, %if.end22
  %9 = load i32, i32* %__ret_warn_on23, align 4, !dbg !5178
  %tobool49 = icmp ne i32 %9, 0, !dbg !5178
  %lnot50 = xor i1 %tobool49, true, !dbg !5178
  %lnot52 = xor i1 %lnot50, true, !dbg !5178
  %lnot.ext53 = zext i1 %lnot52 to i32, !dbg !5178
  %conv54 = sext i32 %lnot.ext53 to i64, !dbg !5178
  store i64 %conv54, i64* %tmp48, align 8, !dbg !5179
  %10 = load i64, i64* %tmp48, align 8, !dbg !5178
  %tobool55 = icmp ne i64 %10, 0, !dbg !5193
  br i1 %tobool55, label %if.then56, label %if.end57, !dbg !5194

if.then56:                                        ; preds = %if.end47
  store i32 -19, i32* %retval, align 4, !dbg !5195
  br label %return, !dbg !5195

if.end57:                                         ; preds = %if.end47
  %11 = load %struct.hid_device*, %struct.hid_device** %device.addr, align 8, !dbg !5196
  %dev_rsize = getelementptr inbounds %struct.hid_device, %struct.hid_device* %11, i32 0, i32 1, !dbg !5197
  %12 = load i32, i32* %dev_rsize, align 8, !dbg !5197
  store i32 %12, i32* %size, align 4, !dbg !5198
  %13 = load i8*, i8** %start, align 8, !dbg !5199
  %14 = load i32, i32* %size, align 4, !dbg !5200
  %conv58 = zext i32 %14 to i64, !dbg !5200
  %call = call i8* @kmemdup(i8* %13, i64 %conv58, i32 3264) #9, !dbg !5201
  store i8* %call, i8** %buf, align 8, !dbg !5202
  %15 = load i8*, i8** %buf, align 8, !dbg !5203
  %cmp = icmp eq i8* %15, null, !dbg !5205
  br i1 %cmp, label %if.then60, label %if.end61, !dbg !5206

if.then60:                                        ; preds = %if.end57
  store i32 -12, i32* %retval, align 4, !dbg !5207
  br label %return, !dbg !5207

if.end61:                                         ; preds = %if.end57
  %16 = load %struct.hid_device*, %struct.hid_device** %device.addr, align 8, !dbg !5208
  %driver = getelementptr inbounds %struct.hid_device, %struct.hid_device* %16, i32 0, i32 19, !dbg !5210
  %17 = load %struct.hid_driver*, %struct.hid_driver** %driver, align 8, !dbg !5210
  %report_fixup = getelementptr inbounds %struct.hid_driver, %struct.hid_driver* %17, i32 0, i32 12, !dbg !5211
  %18 = load i8* (%struct.hid_device*, i8*, i32*)*, i8* (%struct.hid_device*, i8*, i32*)** %report_fixup, align 8, !dbg !5211
  %tobool62 = icmp ne i8* (%struct.hid_device*, i8*, i32*)* %18, null, !dbg !5208
  br i1 %tobool62, label %if.then63, label %if.else, !dbg !5212

if.then63:                                        ; preds = %if.end61
  %19 = load %struct.hid_device*, %struct.hid_device** %device.addr, align 8, !dbg !5213
  %driver64 = getelementptr inbounds %struct.hid_device, %struct.hid_device* %19, i32 0, i32 19, !dbg !5214
  %20 = load %struct.hid_driver*, %struct.hid_driver** %driver64, align 8, !dbg !5214
  %report_fixup65 = getelementptr inbounds %struct.hid_driver, %struct.hid_driver* %20, i32 0, i32 12, !dbg !5215
  %21 = load i8* (%struct.hid_device*, i8*, i32*)*, i8* (%struct.hid_device*, i8*, i32*)** %report_fixup65, align 8, !dbg !5215
  %22 = load %struct.hid_device*, %struct.hid_device** %device.addr, align 8, !dbg !5216
  %23 = load i8*, i8** %buf, align 8, !dbg !5217
  %call66 = call i8* %21(%struct.hid_device* %22, i8* %23, i32* %size) #9, !dbg !5213
  store i8* %call66, i8** %start, align 8, !dbg !5218
  br label %if.end67, !dbg !5219

if.else:                                          ; preds = %if.end61
  %24 = load i8*, i8** %buf, align 8, !dbg !5220
  store i8* %24, i8** %start, align 8, !dbg !5221
  br label %if.end67

if.end67:                                         ; preds = %if.else, %if.then63
  %25 = load i8*, i8** %start, align 8, !dbg !5222
  %26 = load i32, i32* %size, align 4, !dbg !5223
  %conv68 = zext i32 %26 to i64, !dbg !5223
  %call69 = call i8* @kmemdup(i8* %25, i64 %conv68, i32 3264) #9, !dbg !5224
  store i8* %call69, i8** %start, align 8, !dbg !5225
  %27 = load i8*, i8** %buf, align 8, !dbg !5226
  call void @kfree(i8* %27) #9, !dbg !5227
  %28 = load i8*, i8** %start, align 8, !dbg !5228
  %cmp70 = icmp eq i8* %28, null, !dbg !5230
  br i1 %cmp70, label %if.then72, label %if.end73, !dbg !5231

if.then72:                                        ; preds = %if.end67
  store i32 -12, i32* %retval, align 4, !dbg !5232
  br label %return, !dbg !5232

if.end73:                                         ; preds = %if.end67
  %29 = load i8*, i8** %start, align 8, !dbg !5233
  %30 = load %struct.hid_device*, %struct.hid_device** %device.addr, align 8, !dbg !5234
  %rdesc = getelementptr inbounds %struct.hid_device, %struct.hid_device* %30, i32 0, i32 2, !dbg !5235
  store i8* %29, i8** %rdesc, align 8, !dbg !5236
  %31 = load i32, i32* %size, align 4, !dbg !5237
  %32 = load %struct.hid_device*, %struct.hid_device** %device.addr, align 8, !dbg !5238
  %rsize = getelementptr inbounds %struct.hid_device, %struct.hid_device* %32, i32 0, i32 3, !dbg !5239
  store i32 %31, i32* %rsize, align 8, !dbg !5240
  %call74 = call i8* @vzalloc(i64 110848) #9, !dbg !5241
  %33 = bitcast i8* %call74 to %struct.hid_parser*, !dbg !5241
  store %struct.hid_parser* %33, %struct.hid_parser** %parser, align 8, !dbg !5242
  %34 = load %struct.hid_parser*, %struct.hid_parser** %parser, align 8, !dbg !5243
  %tobool75 = icmp ne %struct.hid_parser* %34, null, !dbg !5243
  br i1 %tobool75, label %if.end77, label %if.then76, !dbg !5245

if.then76:                                        ; preds = %if.end73
  store i32 -12, i32* %ret, align 4, !dbg !5246
  br label %alloc_err, !dbg !5248

if.end77:                                         ; preds = %if.end73
  %35 = load %struct.hid_device*, %struct.hid_device** %device.addr, align 8, !dbg !5249
  %36 = load %struct.hid_parser*, %struct.hid_parser** %parser, align 8, !dbg !5250
  %device78 = getelementptr inbounds %struct.hid_parser, %struct.hid_parser* %36, i32 0, i32 7, !dbg !5251
  store %struct.hid_device* %35, %struct.hid_device** %device78, align 8, !dbg !5252
  %37 = load i8*, i8** %start, align 8, !dbg !5253
  %38 = load i32, i32* %size, align 4, !dbg !5254
  %idx.ext = zext i32 %38 to i64, !dbg !5255
  %add.ptr = getelementptr i8, i8* %37, i64 %idx.ext, !dbg !5255
  store i8* %add.ptr, i8** %end, align 8, !dbg !5256
  %call79 = call i8* @kcalloc(i64 16, i64 16, i32 3264) #9, !dbg !5257
  %39 = bitcast i8* %call79 to %struct.hid_collection*, !dbg !5257
  %40 = load %struct.hid_device*, %struct.hid_device** %device.addr, align 8, !dbg !5258
  %collection = getelementptr inbounds %struct.hid_device, %struct.hid_device* %40, i32 0, i32 4, !dbg !5259
  store %struct.hid_collection* %39, %struct.hid_collection** %collection, align 8, !dbg !5260
  %41 = load %struct.hid_device*, %struct.hid_device** %device.addr, align 8, !dbg !5261
  %collection80 = getelementptr inbounds %struct.hid_device, %struct.hid_device* %41, i32 0, i32 4, !dbg !5263
  %42 = load %struct.hid_collection*, %struct.hid_collection** %collection80, align 8, !dbg !5263
  %tobool81 = icmp ne %struct.hid_collection* %42, null, !dbg !5261
  br i1 %tobool81, label %if.end83, label %if.then82, !dbg !5264

if.then82:                                        ; preds = %if.end77
  store i32 -12, i32* %ret, align 4, !dbg !5265
  br label %err, !dbg !5267

if.end83:                                         ; preds = %if.end77
  %43 = load %struct.hid_device*, %struct.hid_device** %device.addr, align 8, !dbg !5268
  %collection_size = getelementptr inbounds %struct.hid_device, %struct.hid_device* %43, i32 0, i32 5, !dbg !5269
  store i32 16, i32* %collection_size, align 8, !dbg !5270
  store i32 -22, i32* %ret, align 4, !dbg !5271
  br label %while.cond, !dbg !5272

while.cond:                                       ; preds = %if.end114, %if.end83
  %44 = load i8*, i8** %start, align 8, !dbg !5273
  %45 = load i8*, i8** %end, align 8, !dbg !5274
  %call84 = call i8* @fetch_item(i8* %44, i8* %45, %struct.hid_item* %item) #9, !dbg !5275
  store i8* %call84, i8** %next, align 8, !dbg !5276
  %cmp85 = icmp ne i8* %call84, null, !dbg !5277
  br i1 %cmp85, label %while.body, label %while.end, !dbg !5272

while.body:                                       ; preds = %while.cond
  %46 = load i8*, i8** %next, align 8, !dbg !5278
  store i8* %46, i8** %start, align 8, !dbg !5280
  %format = getelementptr inbounds %struct.hid_item, %struct.hid_item* %item, i32 0, i32 0, !dbg !5281
  %47 = load i32, i32* %format, align 8, !dbg !5281
  %cmp87 = icmp ne i32 %47, 0, !dbg !5283
  br i1 %cmp87, label %if.then89, label %if.end90, !dbg !5284

if.then89:                                        ; preds = %while.body
  %48 = load %struct.hid_device*, %struct.hid_device** %device.addr, align 8, !dbg !5285
  %dev = getelementptr inbounds %struct.hid_device, %struct.hid_device* %48, i32 0, i32 18, !dbg !5285
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %dev, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.6, i64 0, i64 0)) #13, !dbg !5285
  br label %err, !dbg !5287

if.end90:                                         ; preds = %while.body
  %type = getelementptr inbounds %struct.hid_item, %struct.hid_item* %item, i32 0, i32 2, !dbg !5288
  %49 = load i8, i8* %type, align 1, !dbg !5288
  %idxprom = zext i8 %49 to i64, !dbg !5290
  %arrayidx = getelementptr [4 x i32 (%struct.hid_parser*, %struct.hid_item*)*], [4 x i32 (%struct.hid_parser*, %struct.hid_item*)*]* @hid_open_report.dispatch_type, i64 0, i64 %idxprom, !dbg !5290
  %50 = load i32 (%struct.hid_parser*, %struct.hid_item*)*, i32 (%struct.hid_parser*, %struct.hid_item*)** %arrayidx, align 8, !dbg !5290
  %51 = load %struct.hid_parser*, %struct.hid_parser** %parser, align 8, !dbg !5291
  %call91 = call i32 %50(%struct.hid_parser* %51, %struct.hid_item* %item) #9, !dbg !5290
  %tobool92 = icmp ne i32 %call91, 0, !dbg !5290
  br i1 %tobool92, label %if.then93, label %if.end101, !dbg !5292

if.then93:                                        ; preds = %if.end90
  %52 = load %struct.hid_device*, %struct.hid_device** %device.addr, align 8, !dbg !5293
  %dev94 = getelementptr inbounds %struct.hid_device, %struct.hid_device* %52, i32 0, i32 18, !dbg !5293
  %format95 = getelementptr inbounds %struct.hid_item, %struct.hid_item* %item, i32 0, i32 0, !dbg !5293
  %53 = load i32, i32* %format95, align 8, !dbg !5293
  %size96 = getelementptr inbounds %struct.hid_item, %struct.hid_item* %item, i32 0, i32 1, !dbg !5293
  %54 = load i8, i8* %size96, align 4, !dbg !5293
  %conv97 = zext i8 %54 to i32, !dbg !5293
  %type98 = getelementptr inbounds %struct.hid_item, %struct.hid_item* %item, i32 0, i32 2, !dbg !5293
  %55 = load i8, i8* %type98, align 1, !dbg !5293
  %conv99 = zext i8 %55 to i32, !dbg !5293
  %tag = getelementptr inbounds %struct.hid_item, %struct.hid_item* %item, i32 0, i32 3, !dbg !5293
  %56 = load i8, i8* %tag, align 2, !dbg !5293
  %conv100 = zext i8 %56 to i32, !dbg !5293
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %dev94, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.7, i64 0, i64 0), i32 %53, i32 %conv97, i32 %conv99, i32 %conv100) #13, !dbg !5293
  br label %err, !dbg !5295

if.end101:                                        ; preds = %if.end90
  %57 = load i8*, i8** %start, align 8, !dbg !5296
  %58 = load i8*, i8** %end, align 8, !dbg !5298
  %cmp102 = icmp eq i8* %57, %58, !dbg !5299
  br i1 %cmp102, label %if.then104, label %if.end114, !dbg !5300

if.then104:                                       ; preds = %if.end101
  %59 = load %struct.hid_parser*, %struct.hid_parser** %parser, align 8, !dbg !5301
  %collection_stack_ptr = getelementptr inbounds %struct.hid_parser, %struct.hid_parser* %59, i32 0, i32 5, !dbg !5304
  %60 = load i32, i32* %collection_stack_ptr, align 8, !dbg !5304
  %tobool105 = icmp ne i32 %60, 0, !dbg !5301
  br i1 %tobool105, label %if.then106, label %if.end108, !dbg !5305

if.then106:                                       ; preds = %if.then104
  %61 = load %struct.hid_device*, %struct.hid_device** %device.addr, align 8, !dbg !5306
  %dev107 = getelementptr inbounds %struct.hid_device, %struct.hid_device* %61, i32 0, i32 18, !dbg !5306
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %dev107, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.8, i64 0, i64 0)) #13, !dbg !5306
  br label %err, !dbg !5308

if.end108:                                        ; preds = %if.then104
  %62 = load %struct.hid_parser*, %struct.hid_parser** %parser, align 8, !dbg !5309
  %local = getelementptr inbounds %struct.hid_parser, %struct.hid_parser* %62, i32 0, i32 3, !dbg !5311
  %delimiter_depth = getelementptr inbounds %struct.hid_local, %struct.hid_local* %local, i32 0, i32 5, !dbg !5312
  %63 = load i32, i32* %delimiter_depth, align 4, !dbg !5312
  %tobool109 = icmp ne i32 %63, 0, !dbg !5309
  br i1 %tobool109, label %if.then110, label %if.end112, !dbg !5313

if.then110:                                       ; preds = %if.end108
  %64 = load %struct.hid_device*, %struct.hid_device** %device.addr, align 8, !dbg !5314
  %dev111 = getelementptr inbounds %struct.hid_device, %struct.hid_device* %64, i32 0, i32 18, !dbg !5314
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %dev111, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.9, i64 0, i64 0)) #13, !dbg !5314
  br label %err, !dbg !5316

if.end112:                                        ; preds = %if.end108
  %65 = load %struct.hid_device*, %struct.hid_device** %device.addr, align 8, !dbg !5317
  call void @hid_setup_resolution_multiplier(%struct.hid_device* %65) #9, !dbg !5318
  %66 = load %struct.hid_parser*, %struct.hid_parser** %parser, align 8, !dbg !5319
  %collection_stack = getelementptr inbounds %struct.hid_parser, %struct.hid_parser* %66, i32 0, i32 4, !dbg !5320
  %67 = load i32*, i32** %collection_stack, align 8, !dbg !5320
  %68 = bitcast i32* %67 to i8*, !dbg !5319
  call void @kfree(i8* %68) #9, !dbg !5321
  %69 = load %struct.hid_parser*, %struct.hid_parser** %parser, align 8, !dbg !5322
  %70 = bitcast %struct.hid_parser* %69 to i8*, !dbg !5322
  call void @vfree(i8* %70) #9, !dbg !5323
  %71 = load %struct.hid_device*, %struct.hid_device** %device.addr, align 8, !dbg !5324
  %status113 = getelementptr inbounds %struct.hid_device, %struct.hid_device* %71, i32 0, i32 23, !dbg !5325
  %72 = load i64, i64* %status113, align 8, !dbg !5326
  %or = or i64 %72, 2, !dbg !5326
  store i64 %or, i64* %status113, align 8, !dbg !5326
  store i32 0, i32* %retval, align 4, !dbg !5327
  br label %return, !dbg !5327

if.end114:                                        ; preds = %if.end101
  br label %while.cond, !dbg !5272, !llvm.loop !5328

while.end:                                        ; preds = %while.cond
  %73 = load %struct.hid_device*, %struct.hid_device** %device.addr, align 8, !dbg !5330
  %dev115 = getelementptr inbounds %struct.hid_device, %struct.hid_device* %73, i32 0, i32 18, !dbg !5330
  %74 = load i32, i32* %size, align 4, !dbg !5330
  %75 = load i8*, i8** %end, align 8, !dbg !5330
  %76 = load i8*, i8** %start, align 8, !dbg !5330
  %sub.ptr.lhs.cast = ptrtoint i8* %75 to i64, !dbg !5330
  %sub.ptr.rhs.cast = ptrtoint i8* %76 to i64, !dbg !5330
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !5330
  %conv116 = trunc i64 %sub.ptr.sub to i32, !dbg !5330
  %sub = sub i32 %74, %conv116, !dbg !5330
  %77 = load i32, i32* %size, align 4, !dbg !5330
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %dev115, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.10, i64 0, i64 0), i32 %sub, i32 %77) #13, !dbg !5330
  br label %err, !dbg !5330

err:                                              ; preds = %while.end, %if.then110, %if.then106, %if.then93, %if.then89, %if.then82
  call void @llvm.dbg.label(metadata !5331), !dbg !5332
  %78 = load %struct.hid_parser*, %struct.hid_parser** %parser, align 8, !dbg !5333
  %collection_stack117 = getelementptr inbounds %struct.hid_parser, %struct.hid_parser* %78, i32 0, i32 4, !dbg !5334
  %79 = load i32*, i32** %collection_stack117, align 8, !dbg !5334
  %80 = bitcast i32* %79 to i8*, !dbg !5333
  call void @kfree(i8* %80) #9, !dbg !5335
  br label %alloc_err, !dbg !5335

alloc_err:                                        ; preds = %err, %if.then76
  call void @llvm.dbg.label(metadata !5336), !dbg !5337
  %81 = load %struct.hid_parser*, %struct.hid_parser** %parser, align 8, !dbg !5338
  %82 = bitcast %struct.hid_parser* %81 to i8*, !dbg !5338
  call void @vfree(i8* %82) #9, !dbg !5339
  %83 = load %struct.hid_device*, %struct.hid_device** %device.addr, align 8, !dbg !5340
  call void @hid_close_report(%struct.hid_device* %83) #9, !dbg !5341
  %84 = load i32, i32* %ret, align 4, !dbg !5342
  store i32 %84, i32* %retval, align 4, !dbg !5343
  br label %return, !dbg !5343

return:                                           ; preds = %alloc_err, %if.end112, %if.then72, %if.then60, %if.then56, %if.then21
  %85 = load i32, i32* %retval, align 4, !dbg !5344
  ret i32 %85, !dbg !5344
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @hid_parser_main(%struct.hid_parser* %parser, %struct.hid_item* %item) #0 !dbg !5345 {
entry:
  %parser.addr = alloca %struct.hid_parser*, align 8
  %item.addr = alloca %struct.hid_item*, align 8
  %data = alloca i32, align 4
  %ret = alloca i32, align 4
  store %struct.hid_parser* %parser, %struct.hid_parser** %parser.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.hid_parser** %parser.addr, metadata !5346, metadata !DIExpression()), !dbg !5347
  store %struct.hid_item* %item, %struct.hid_item** %item.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.hid_item** %item.addr, metadata !5348, metadata !DIExpression()), !dbg !5349
  call void @llvm.dbg.declare(metadata i32* %data, metadata !5350, metadata !DIExpression()), !dbg !5351
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !5352, metadata !DIExpression()), !dbg !5353
  %0 = load %struct.hid_parser*, %struct.hid_parser** %parser.addr, align 8, !dbg !5354
  call void @hid_concatenate_last_usage_page(%struct.hid_parser* %0) #9, !dbg !5355
  %1 = load %struct.hid_item*, %struct.hid_item** %item.addr, align 8, !dbg !5356
  %call = call i32 @item_udata(%struct.hid_item* %1) #9, !dbg !5357
  store i32 %call, i32* %data, align 4, !dbg !5358
  %2 = load %struct.hid_item*, %struct.hid_item** %item.addr, align 8, !dbg !5359
  %tag = getelementptr inbounds %struct.hid_item, %struct.hid_item* %2, i32 0, i32 3, !dbg !5360
  %3 = load i8, i8* %tag, align 2, !dbg !5360
  %conv = zext i8 %3 to i32, !dbg !5359
  switch i32 %conv, label %sw.default [
    i32 10, label %sw.bb
    i32 12, label %sw.bb2
    i32 8, label %sw.bb4
    i32 9, label %sw.bb6
    i32 11, label %sw.bb8
  ], !dbg !5361

sw.bb:                                            ; preds = %entry
  %4 = load %struct.hid_parser*, %struct.hid_parser** %parser.addr, align 8, !dbg !5362
  %5 = load i32, i32* %data, align 4, !dbg !5364
  %and = and i32 %5, 255, !dbg !5365
  %call1 = call i32 @open_collection(%struct.hid_parser* %4, i32 %and) #9, !dbg !5366
  store i32 %call1, i32* %ret, align 4, !dbg !5367
  br label %sw.epilog, !dbg !5368

sw.bb2:                                           ; preds = %entry
  %6 = load %struct.hid_parser*, %struct.hid_parser** %parser.addr, align 8, !dbg !5369
  %call3 = call i32 @close_collection(%struct.hid_parser* %6) #9, !dbg !5370
  store i32 %call3, i32* %ret, align 4, !dbg !5371
  br label %sw.epilog, !dbg !5372

sw.bb4:                                           ; preds = %entry
  %7 = load %struct.hid_parser*, %struct.hid_parser** %parser.addr, align 8, !dbg !5373
  %8 = load i32, i32* %data, align 4, !dbg !5374
  %call5 = call i32 @hid_add_field(%struct.hid_parser* %7, i32 0, i32 %8) #9, !dbg !5375
  store i32 %call5, i32* %ret, align 4, !dbg !5376
  br label %sw.epilog, !dbg !5377

sw.bb6:                                           ; preds = %entry
  %9 = load %struct.hid_parser*, %struct.hid_parser** %parser.addr, align 8, !dbg !5378
  %10 = load i32, i32* %data, align 4, !dbg !5379
  %call7 = call i32 @hid_add_field(%struct.hid_parser* %9, i32 1, i32 %10) #9, !dbg !5380
  store i32 %call7, i32* %ret, align 4, !dbg !5381
  br label %sw.epilog, !dbg !5382

sw.bb8:                                           ; preds = %entry
  %11 = load %struct.hid_parser*, %struct.hid_parser** %parser.addr, align 8, !dbg !5383
  %12 = load i32, i32* %data, align 4, !dbg !5384
  %call9 = call i32 @hid_add_field(%struct.hid_parser* %11, i32 2, i32 %12) #9, !dbg !5385
  store i32 %call9, i32* %ret, align 4, !dbg !5386
  br label %sw.epilog, !dbg !5387

sw.default:                                       ; preds = %entry
  %13 = load %struct.hid_parser*, %struct.hid_parser** %parser.addr, align 8, !dbg !5388
  %device = getelementptr inbounds %struct.hid_parser, %struct.hid_parser* %13, i32 0, i32 7, !dbg !5388
  %14 = load %struct.hid_device*, %struct.hid_device** %device, align 8, !dbg !5388
  %dev = getelementptr inbounds %struct.hid_device, %struct.hid_device* %14, i32 0, i32 18, !dbg !5388
  %15 = load %struct.hid_item*, %struct.hid_item** %item.addr, align 8, !dbg !5388
  %tag10 = getelementptr inbounds %struct.hid_item, %struct.hid_item* %15, i32 0, i32 3, !dbg !5388
  %16 = load i8, i8* %tag10, align 2, !dbg !5388
  %conv11 = zext i8 %16 to i32, !dbg !5388
  call void (%struct.device*, i8*, ...) @_dev_warn(%struct.device* %dev, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.49, i64 0, i64 0), i32 %conv11) #13, !dbg !5388
  store i32 0, i32* %ret, align 4, !dbg !5389
  br label %sw.epilog, !dbg !5390

sw.epilog:                                        ; preds = %sw.default, %sw.bb8, %sw.bb6, %sw.bb4, %sw.bb2, %sw.bb
  %17 = load %struct.hid_parser*, %struct.hid_parser** %parser.addr, align 8, !dbg !5391
  %local = getelementptr inbounds %struct.hid_parser, %struct.hid_parser* %17, i32 0, i32 3, !dbg !5392
  %18 = bitcast %struct.hid_local* %local to i8*, !dbg !5393
  call void @llvm.memset.p0i8.i64(i8* align 4 %18, i8 0, i64 110608, i1 false), !dbg !5393
  %19 = load i32, i32* %ret, align 4, !dbg !5394
  ret i32 %19, !dbg !5395
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @hid_parser_global(%struct.hid_parser* %parser, %struct.hid_item* %item) #0 !dbg !5396 {
entry:
  %retval = alloca i32, align 4
  %parser.addr = alloca %struct.hid_parser*, align 8
  %item.addr = alloca %struct.hid_item*, align 8
  %raw_value = alloca i32, align 4
  store %struct.hid_parser* %parser, %struct.hid_parser** %parser.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.hid_parser** %parser.addr, metadata !5397, metadata !DIExpression()), !dbg !5398
  store %struct.hid_item* %item, %struct.hid_item** %item.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.hid_item** %item.addr, metadata !5399, metadata !DIExpression()), !dbg !5400
  call void @llvm.dbg.declare(metadata i32* %raw_value, metadata !5401, metadata !DIExpression()), !dbg !5402
  %0 = load %struct.hid_item*, %struct.hid_item** %item.addr, align 8, !dbg !5403
  %tag = getelementptr inbounds %struct.hid_item, %struct.hid_item* %0, i32 0, i32 3, !dbg !5404
  %1 = load i8, i8* %tag, align 2, !dbg !5404
  %conv = zext i8 %1 to i32, !dbg !5403
  switch i32 %conv, label %sw.default [
    i32 10, label %sw.bb
    i32 11, label %sw.bb3
    i32 0, label %sw.bb15
    i32 1, label %sw.bb17
    i32 2, label %sw.bb20
    i32 3, label %sw.bb32
    i32 4, label %sw.bb35
    i32 5, label %sw.bb48
    i32 6, label %sw.bb58
    i32 7, label %sw.bb61
    i32 9, label %sw.bb74
    i32 8, label %sw.bb87
  ], !dbg !5405

sw.bb:                                            ; preds = %entry
  %2 = load %struct.hid_parser*, %struct.hid_parser** %parser.addr, align 8, !dbg !5406
  %global_stack_ptr = getelementptr inbounds %struct.hid_parser, %struct.hid_parser* %2, i32 0, i32 2, !dbg !5409
  %3 = load i32, i32* %global_stack_ptr, align 8, !dbg !5409
  %cmp = icmp eq i32 %3, 4, !dbg !5410
  br i1 %cmp, label %if.then, label %if.end, !dbg !5411

if.then:                                          ; preds = %sw.bb
  %4 = load %struct.hid_parser*, %struct.hid_parser** %parser.addr, align 8, !dbg !5412
  %device = getelementptr inbounds %struct.hid_parser, %struct.hid_parser* %4, i32 0, i32 7, !dbg !5412
  %5 = load %struct.hid_device*, %struct.hid_device** %device, align 8, !dbg !5412
  %dev = getelementptr inbounds %struct.hid_device, %struct.hid_device* %5, i32 0, i32 18, !dbg !5412
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %dev, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.56, i64 0, i64 0)) #13, !dbg !5412
  store i32 -1, i32* %retval, align 4, !dbg !5414
  br label %return, !dbg !5414

if.end:                                           ; preds = %sw.bb
  %6 = load %struct.hid_parser*, %struct.hid_parser** %parser.addr, align 8, !dbg !5415
  %global_stack = getelementptr inbounds %struct.hid_parser, %struct.hid_parser* %6, i32 0, i32 1, !dbg !5416
  %arraydecay = getelementptr inbounds [4 x %struct.hid_global], [4 x %struct.hid_global]* %global_stack, i64 0, i64 0, !dbg !5415
  %7 = load %struct.hid_parser*, %struct.hid_parser** %parser.addr, align 8, !dbg !5417
  %global_stack_ptr2 = getelementptr inbounds %struct.hid_parser, %struct.hid_parser* %7, i32 0, i32 2, !dbg !5418
  %8 = load i32, i32* %global_stack_ptr2, align 8, !dbg !5419
  %inc = add i32 %8, 1, !dbg !5419
  store i32 %inc, i32* %global_stack_ptr2, align 8, !dbg !5419
  %idx.ext = zext i32 %8 to i64, !dbg !5420
  %add.ptr = getelementptr %struct.hid_global, %struct.hid_global* %arraydecay, i64 %idx.ext, !dbg !5420
  %9 = bitcast %struct.hid_global* %add.ptr to i8*, !dbg !5421
  %10 = load %struct.hid_parser*, %struct.hid_parser** %parser.addr, align 8, !dbg !5422
  %global = getelementptr inbounds %struct.hid_parser, %struct.hid_parser* %10, i32 0, i32 0, !dbg !5423
  %11 = bitcast %struct.hid_global* %global to i8*, !dbg !5421
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %9, i8* align 8 %11, i64 40, i1 false), !dbg !5421
  store i32 0, i32* %retval, align 4, !dbg !5424
  br label %return, !dbg !5424

sw.bb3:                                           ; preds = %entry
  %12 = load %struct.hid_parser*, %struct.hid_parser** %parser.addr, align 8, !dbg !5425
  %global_stack_ptr4 = getelementptr inbounds %struct.hid_parser, %struct.hid_parser* %12, i32 0, i32 2, !dbg !5427
  %13 = load i32, i32* %global_stack_ptr4, align 8, !dbg !5427
  %tobool = icmp ne i32 %13, 0, !dbg !5425
  br i1 %tobool, label %if.end8, label %if.then5, !dbg !5428

if.then5:                                         ; preds = %sw.bb3
  %14 = load %struct.hid_parser*, %struct.hid_parser** %parser.addr, align 8, !dbg !5429
  %device6 = getelementptr inbounds %struct.hid_parser, %struct.hid_parser* %14, i32 0, i32 7, !dbg !5429
  %15 = load %struct.hid_device*, %struct.hid_device** %device6, align 8, !dbg !5429
  %dev7 = getelementptr inbounds %struct.hid_device, %struct.hid_device* %15, i32 0, i32 18, !dbg !5429
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %dev7, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.57, i64 0, i64 0)) #13, !dbg !5429
  store i32 -1, i32* %retval, align 4, !dbg !5431
  br label %return, !dbg !5431

if.end8:                                          ; preds = %sw.bb3
  %16 = load %struct.hid_parser*, %struct.hid_parser** %parser.addr, align 8, !dbg !5432
  %global9 = getelementptr inbounds %struct.hid_parser, %struct.hid_parser* %16, i32 0, i32 0, !dbg !5433
  %17 = bitcast %struct.hid_global* %global9 to i8*, !dbg !5434
  %18 = load %struct.hid_parser*, %struct.hid_parser** %parser.addr, align 8, !dbg !5435
  %global_stack10 = getelementptr inbounds %struct.hid_parser, %struct.hid_parser* %18, i32 0, i32 1, !dbg !5436
  %arraydecay11 = getelementptr inbounds [4 x %struct.hid_global], [4 x %struct.hid_global]* %global_stack10, i64 0, i64 0, !dbg !5435
  %19 = load %struct.hid_parser*, %struct.hid_parser** %parser.addr, align 8, !dbg !5437
  %global_stack_ptr12 = getelementptr inbounds %struct.hid_parser, %struct.hid_parser* %19, i32 0, i32 2, !dbg !5438
  %20 = load i32, i32* %global_stack_ptr12, align 8, !dbg !5439
  %dec = add i32 %20, -1, !dbg !5439
  store i32 %dec, i32* %global_stack_ptr12, align 8, !dbg !5439
  %idx.ext13 = zext i32 %dec to i64, !dbg !5440
  %add.ptr14 = getelementptr %struct.hid_global, %struct.hid_global* %arraydecay11, i64 %idx.ext13, !dbg !5440
  %21 = bitcast %struct.hid_global* %add.ptr14 to i8*, !dbg !5434
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %17, i8* align 4 %21, i64 40, i1 false), !dbg !5434
  store i32 0, i32* %retval, align 4, !dbg !5441
  br label %return, !dbg !5441

sw.bb15:                                          ; preds = %entry
  %22 = load %struct.hid_item*, %struct.hid_item** %item.addr, align 8, !dbg !5442
  %call = call i32 @item_udata(%struct.hid_item* %22) #9, !dbg !5443
  %23 = load %struct.hid_parser*, %struct.hid_parser** %parser.addr, align 8, !dbg !5444
  %global16 = getelementptr inbounds %struct.hid_parser, %struct.hid_parser* %23, i32 0, i32 0, !dbg !5445
  %usage_page = getelementptr inbounds %struct.hid_global, %struct.hid_global* %global16, i32 0, i32 0, !dbg !5446
  store i32 %call, i32* %usage_page, align 8, !dbg !5447
  store i32 0, i32* %retval, align 4, !dbg !5448
  br label %return, !dbg !5448

sw.bb17:                                          ; preds = %entry
  %24 = load %struct.hid_item*, %struct.hid_item** %item.addr, align 8, !dbg !5449
  %call18 = call i32 @item_sdata(%struct.hid_item* %24) #9, !dbg !5450
  %25 = load %struct.hid_parser*, %struct.hid_parser** %parser.addr, align 8, !dbg !5451
  %global19 = getelementptr inbounds %struct.hid_parser, %struct.hid_parser* %25, i32 0, i32 0, !dbg !5452
  %logical_minimum = getelementptr inbounds %struct.hid_global, %struct.hid_global* %global19, i32 0, i32 1, !dbg !5453
  store i32 %call18, i32* %logical_minimum, align 4, !dbg !5454
  store i32 0, i32* %retval, align 4, !dbg !5455
  br label %return, !dbg !5455

sw.bb20:                                          ; preds = %entry
  %26 = load %struct.hid_parser*, %struct.hid_parser** %parser.addr, align 8, !dbg !5456
  %global21 = getelementptr inbounds %struct.hid_parser, %struct.hid_parser* %26, i32 0, i32 0, !dbg !5458
  %logical_minimum22 = getelementptr inbounds %struct.hid_global, %struct.hid_global* %global21, i32 0, i32 1, !dbg !5459
  %27 = load i32, i32* %logical_minimum22, align 4, !dbg !5459
  %cmp23 = icmp slt i32 %27, 0, !dbg !5460
  br i1 %cmp23, label %if.then25, label %if.else, !dbg !5461

if.then25:                                        ; preds = %sw.bb20
  %28 = load %struct.hid_item*, %struct.hid_item** %item.addr, align 8, !dbg !5462
  %call26 = call i32 @item_sdata(%struct.hid_item* %28) #9, !dbg !5463
  %29 = load %struct.hid_parser*, %struct.hid_parser** %parser.addr, align 8, !dbg !5464
  %global27 = getelementptr inbounds %struct.hid_parser, %struct.hid_parser* %29, i32 0, i32 0, !dbg !5465
  %logical_maximum = getelementptr inbounds %struct.hid_global, %struct.hid_global* %global27, i32 0, i32 2, !dbg !5466
  store i32 %call26, i32* %logical_maximum, align 8, !dbg !5467
  br label %if.end31, !dbg !5464

if.else:                                          ; preds = %sw.bb20
  %30 = load %struct.hid_item*, %struct.hid_item** %item.addr, align 8, !dbg !5468
  %call28 = call i32 @item_udata(%struct.hid_item* %30) #9, !dbg !5469
  %31 = load %struct.hid_parser*, %struct.hid_parser** %parser.addr, align 8, !dbg !5470
  %global29 = getelementptr inbounds %struct.hid_parser, %struct.hid_parser* %31, i32 0, i32 0, !dbg !5471
  %logical_maximum30 = getelementptr inbounds %struct.hid_global, %struct.hid_global* %global29, i32 0, i32 2, !dbg !5472
  store i32 %call28, i32* %logical_maximum30, align 8, !dbg !5473
  br label %if.end31

if.end31:                                         ; preds = %if.else, %if.then25
  store i32 0, i32* %retval, align 4, !dbg !5474
  br label %return, !dbg !5474

sw.bb32:                                          ; preds = %entry
  %32 = load %struct.hid_item*, %struct.hid_item** %item.addr, align 8, !dbg !5475
  %call33 = call i32 @item_sdata(%struct.hid_item* %32) #9, !dbg !5476
  %33 = load %struct.hid_parser*, %struct.hid_parser** %parser.addr, align 8, !dbg !5477
  %global34 = getelementptr inbounds %struct.hid_parser, %struct.hid_parser* %33, i32 0, i32 0, !dbg !5478
  %physical_minimum = getelementptr inbounds %struct.hid_global, %struct.hid_global* %global34, i32 0, i32 3, !dbg !5479
  store i32 %call33, i32* %physical_minimum, align 4, !dbg !5480
  store i32 0, i32* %retval, align 4, !dbg !5481
  br label %return, !dbg !5481

sw.bb35:                                          ; preds = %entry
  %34 = load %struct.hid_parser*, %struct.hid_parser** %parser.addr, align 8, !dbg !5482
  %global36 = getelementptr inbounds %struct.hid_parser, %struct.hid_parser* %34, i32 0, i32 0, !dbg !5484
  %physical_minimum37 = getelementptr inbounds %struct.hid_global, %struct.hid_global* %global36, i32 0, i32 3, !dbg !5485
  %35 = load i32, i32* %physical_minimum37, align 4, !dbg !5485
  %cmp38 = icmp slt i32 %35, 0, !dbg !5486
  br i1 %cmp38, label %if.then40, label %if.else43, !dbg !5487

if.then40:                                        ; preds = %sw.bb35
  %36 = load %struct.hid_item*, %struct.hid_item** %item.addr, align 8, !dbg !5488
  %call41 = call i32 @item_sdata(%struct.hid_item* %36) #9, !dbg !5489
  %37 = load %struct.hid_parser*, %struct.hid_parser** %parser.addr, align 8, !dbg !5490
  %global42 = getelementptr inbounds %struct.hid_parser, %struct.hid_parser* %37, i32 0, i32 0, !dbg !5491
  %physical_maximum = getelementptr inbounds %struct.hid_global, %struct.hid_global* %global42, i32 0, i32 4, !dbg !5492
  store i32 %call41, i32* %physical_maximum, align 8, !dbg !5493
  br label %if.end47, !dbg !5490

if.else43:                                        ; preds = %sw.bb35
  %38 = load %struct.hid_item*, %struct.hid_item** %item.addr, align 8, !dbg !5494
  %call44 = call i32 @item_udata(%struct.hid_item* %38) #9, !dbg !5495
  %39 = load %struct.hid_parser*, %struct.hid_parser** %parser.addr, align 8, !dbg !5496
  %global45 = getelementptr inbounds %struct.hid_parser, %struct.hid_parser* %39, i32 0, i32 0, !dbg !5497
  %physical_maximum46 = getelementptr inbounds %struct.hid_global, %struct.hid_global* %global45, i32 0, i32 4, !dbg !5498
  store i32 %call44, i32* %physical_maximum46, align 8, !dbg !5499
  br label %if.end47

if.end47:                                         ; preds = %if.else43, %if.then40
  store i32 0, i32* %retval, align 4, !dbg !5500
  br label %return, !dbg !5500

sw.bb48:                                          ; preds = %entry
  %40 = load %struct.hid_item*, %struct.hid_item** %item.addr, align 8, !dbg !5501
  %call49 = call i32 @item_sdata(%struct.hid_item* %40) #9, !dbg !5502
  store i32 %call49, i32* %raw_value, align 4, !dbg !5503
  %41 = load i32, i32* %raw_value, align 4, !dbg !5504
  %and = and i32 %41, -16, !dbg !5506
  %tobool50 = icmp ne i32 %and, 0, !dbg !5506
  br i1 %tobool50, label %if.else54, label %if.then51, !dbg !5507

if.then51:                                        ; preds = %sw.bb48
  %42 = load i32, i32* %raw_value, align 4, !dbg !5508
  %call52 = call i32 @hid_snto32(i32 %42, i32 4) #9, !dbg !5509
  %43 = load %struct.hid_parser*, %struct.hid_parser** %parser.addr, align 8, !dbg !5510
  %global53 = getelementptr inbounds %struct.hid_parser, %struct.hid_parser* %43, i32 0, i32 0, !dbg !5511
  %unit_exponent = getelementptr inbounds %struct.hid_global, %struct.hid_global* %global53, i32 0, i32 5, !dbg !5512
  store i32 %call52, i32* %unit_exponent, align 4, !dbg !5513
  br label %if.end57, !dbg !5510

if.else54:                                        ; preds = %sw.bb48
  %44 = load i32, i32* %raw_value, align 4, !dbg !5514
  %45 = load %struct.hid_parser*, %struct.hid_parser** %parser.addr, align 8, !dbg !5515
  %global55 = getelementptr inbounds %struct.hid_parser, %struct.hid_parser* %45, i32 0, i32 0, !dbg !5516
  %unit_exponent56 = getelementptr inbounds %struct.hid_global, %struct.hid_global* %global55, i32 0, i32 5, !dbg !5517
  store i32 %44, i32* %unit_exponent56, align 4, !dbg !5518
  br label %if.end57

if.end57:                                         ; preds = %if.else54, %if.then51
  store i32 0, i32* %retval, align 4, !dbg !5519
  br label %return, !dbg !5519

sw.bb58:                                          ; preds = %entry
  %46 = load %struct.hid_item*, %struct.hid_item** %item.addr, align 8, !dbg !5520
  %call59 = call i32 @item_udata(%struct.hid_item* %46) #9, !dbg !5521
  %47 = load %struct.hid_parser*, %struct.hid_parser** %parser.addr, align 8, !dbg !5522
  %global60 = getelementptr inbounds %struct.hid_parser, %struct.hid_parser* %47, i32 0, i32 0, !dbg !5523
  %unit = getelementptr inbounds %struct.hid_global, %struct.hid_global* %global60, i32 0, i32 6, !dbg !5524
  store i32 %call59, i32* %unit, align 8, !dbg !5525
  store i32 0, i32* %retval, align 4, !dbg !5526
  br label %return, !dbg !5526

sw.bb61:                                          ; preds = %entry
  %48 = load %struct.hid_item*, %struct.hid_item** %item.addr, align 8, !dbg !5527
  %call62 = call i32 @item_udata(%struct.hid_item* %48) #9, !dbg !5528
  %49 = load %struct.hid_parser*, %struct.hid_parser** %parser.addr, align 8, !dbg !5529
  %global63 = getelementptr inbounds %struct.hid_parser, %struct.hid_parser* %49, i32 0, i32 0, !dbg !5530
  %report_size = getelementptr inbounds %struct.hid_global, %struct.hid_global* %global63, i32 0, i32 8, !dbg !5531
  store i32 %call62, i32* %report_size, align 8, !dbg !5532
  %50 = load %struct.hid_parser*, %struct.hid_parser** %parser.addr, align 8, !dbg !5533
  %global64 = getelementptr inbounds %struct.hid_parser, %struct.hid_parser* %50, i32 0, i32 0, !dbg !5535
  %report_size65 = getelementptr inbounds %struct.hid_global, %struct.hid_global* %global64, i32 0, i32 8, !dbg !5536
  %51 = load i32, i32* %report_size65, align 8, !dbg !5536
  %cmp66 = icmp ugt i32 %51, 256, !dbg !5537
  br i1 %cmp66, label %if.then68, label %if.end73, !dbg !5538

if.then68:                                        ; preds = %sw.bb61
  %52 = load %struct.hid_parser*, %struct.hid_parser** %parser.addr, align 8, !dbg !5539
  %device69 = getelementptr inbounds %struct.hid_parser, %struct.hid_parser* %52, i32 0, i32 7, !dbg !5539
  %53 = load %struct.hid_device*, %struct.hid_device** %device69, align 8, !dbg !5539
  %dev70 = getelementptr inbounds %struct.hid_device, %struct.hid_device* %53, i32 0, i32 18, !dbg !5539
  %54 = load %struct.hid_parser*, %struct.hid_parser** %parser.addr, align 8, !dbg !5539
  %global71 = getelementptr inbounds %struct.hid_parser, %struct.hid_parser* %54, i32 0, i32 0, !dbg !5539
  %report_size72 = getelementptr inbounds %struct.hid_global, %struct.hid_global* %global71, i32 0, i32 8, !dbg !5539
  %55 = load i32, i32* %report_size72, align 8, !dbg !5539
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %dev70, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.58, i64 0, i64 0), i32 %55) #13, !dbg !5539
  store i32 -1, i32* %retval, align 4, !dbg !5541
  br label %return, !dbg !5541

if.end73:                                         ; preds = %sw.bb61
  store i32 0, i32* %retval, align 4, !dbg !5542
  br label %return, !dbg !5542

sw.bb74:                                          ; preds = %entry
  %56 = load %struct.hid_item*, %struct.hid_item** %item.addr, align 8, !dbg !5543
  %call75 = call i32 @item_udata(%struct.hid_item* %56) #9, !dbg !5544
  %57 = load %struct.hid_parser*, %struct.hid_parser** %parser.addr, align 8, !dbg !5545
  %global76 = getelementptr inbounds %struct.hid_parser, %struct.hid_parser* %57, i32 0, i32 0, !dbg !5546
  %report_count = getelementptr inbounds %struct.hid_global, %struct.hid_global* %global76, i32 0, i32 9, !dbg !5547
  store i32 %call75, i32* %report_count, align 4, !dbg !5548
  %58 = load %struct.hid_parser*, %struct.hid_parser** %parser.addr, align 8, !dbg !5549
  %global77 = getelementptr inbounds %struct.hid_parser, %struct.hid_parser* %58, i32 0, i32 0, !dbg !5551
  %report_count78 = getelementptr inbounds %struct.hid_global, %struct.hid_global* %global77, i32 0, i32 9, !dbg !5552
  %59 = load i32, i32* %report_count78, align 4, !dbg !5552
  %cmp79 = icmp ugt i32 %59, 12288, !dbg !5553
  br i1 %cmp79, label %if.then81, label %if.end86, !dbg !5554

if.then81:                                        ; preds = %sw.bb74
  %60 = load %struct.hid_parser*, %struct.hid_parser** %parser.addr, align 8, !dbg !5555
  %device82 = getelementptr inbounds %struct.hid_parser, %struct.hid_parser* %60, i32 0, i32 7, !dbg !5555
  %61 = load %struct.hid_device*, %struct.hid_device** %device82, align 8, !dbg !5555
  %dev83 = getelementptr inbounds %struct.hid_device, %struct.hid_device* %61, i32 0, i32 18, !dbg !5555
  %62 = load %struct.hid_parser*, %struct.hid_parser** %parser.addr, align 8, !dbg !5555
  %global84 = getelementptr inbounds %struct.hid_parser, %struct.hid_parser* %62, i32 0, i32 0, !dbg !5555
  %report_count85 = getelementptr inbounds %struct.hid_global, %struct.hid_global* %global84, i32 0, i32 9, !dbg !5555
  %63 = load i32, i32* %report_count85, align 4, !dbg !5555
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %dev83, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.59, i64 0, i64 0), i32 %63) #13, !dbg !5555
  store i32 -1, i32* %retval, align 4, !dbg !5557
  br label %return, !dbg !5557

if.end86:                                         ; preds = %sw.bb74
  store i32 0, i32* %retval, align 4, !dbg !5558
  br label %return, !dbg !5558

sw.bb87:                                          ; preds = %entry
  %64 = load %struct.hid_item*, %struct.hid_item** %item.addr, align 8, !dbg !5559
  %call88 = call i32 @item_udata(%struct.hid_item* %64) #9, !dbg !5560
  %65 = load %struct.hid_parser*, %struct.hid_parser** %parser.addr, align 8, !dbg !5561
  %global89 = getelementptr inbounds %struct.hid_parser, %struct.hid_parser* %65, i32 0, i32 0, !dbg !5562
  %report_id = getelementptr inbounds %struct.hid_global, %struct.hid_global* %global89, i32 0, i32 7, !dbg !5563
  store i32 %call88, i32* %report_id, align 4, !dbg !5564
  %66 = load %struct.hid_parser*, %struct.hid_parser** %parser.addr, align 8, !dbg !5565
  %global90 = getelementptr inbounds %struct.hid_parser, %struct.hid_parser* %66, i32 0, i32 0, !dbg !5567
  %report_id91 = getelementptr inbounds %struct.hid_global, %struct.hid_global* %global90, i32 0, i32 7, !dbg !5568
  %67 = load i32, i32* %report_id91, align 4, !dbg !5568
  %cmp92 = icmp eq i32 %67, 0, !dbg !5569
  br i1 %cmp92, label %if.then98, label %lor.lhs.false, !dbg !5570

lor.lhs.false:                                    ; preds = %sw.bb87
  %68 = load %struct.hid_parser*, %struct.hid_parser** %parser.addr, align 8, !dbg !5571
  %global94 = getelementptr inbounds %struct.hid_parser, %struct.hid_parser* %68, i32 0, i32 0, !dbg !5572
  %report_id95 = getelementptr inbounds %struct.hid_global, %struct.hid_global* %global94, i32 0, i32 7, !dbg !5573
  %69 = load i32, i32* %report_id95, align 4, !dbg !5573
  %cmp96 = icmp uge i32 %69, 256, !dbg !5574
  br i1 %cmp96, label %if.then98, label %if.end103, !dbg !5575

if.then98:                                        ; preds = %lor.lhs.false, %sw.bb87
  %70 = load %struct.hid_parser*, %struct.hid_parser** %parser.addr, align 8, !dbg !5576
  %device99 = getelementptr inbounds %struct.hid_parser, %struct.hid_parser* %70, i32 0, i32 7, !dbg !5576
  %71 = load %struct.hid_device*, %struct.hid_device** %device99, align 8, !dbg !5576
  %dev100 = getelementptr inbounds %struct.hid_device, %struct.hid_device* %71, i32 0, i32 18, !dbg !5576
  %72 = load %struct.hid_parser*, %struct.hid_parser** %parser.addr, align 8, !dbg !5576
  %global101 = getelementptr inbounds %struct.hid_parser, %struct.hid_parser* %72, i32 0, i32 0, !dbg !5576
  %report_id102 = getelementptr inbounds %struct.hid_global, %struct.hid_global* %global101, i32 0, i32 7, !dbg !5576
  %73 = load i32, i32* %report_id102, align 4, !dbg !5576
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %dev100, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.60, i64 0, i64 0), i32 %73) #13, !dbg !5576
  store i32 -1, i32* %retval, align 4, !dbg !5578
  br label %return, !dbg !5578

if.end103:                                        ; preds = %lor.lhs.false
  store i32 0, i32* %retval, align 4, !dbg !5579
  br label %return, !dbg !5579

sw.default:                                       ; preds = %entry
  %74 = load %struct.hid_parser*, %struct.hid_parser** %parser.addr, align 8, !dbg !5580
  %device104 = getelementptr inbounds %struct.hid_parser, %struct.hid_parser* %74, i32 0, i32 7, !dbg !5580
  %75 = load %struct.hid_device*, %struct.hid_device** %device104, align 8, !dbg !5580
  %dev105 = getelementptr inbounds %struct.hid_device, %struct.hid_device* %75, i32 0, i32 18, !dbg !5580
  %76 = load %struct.hid_item*, %struct.hid_item** %item.addr, align 8, !dbg !5580
  %tag106 = getelementptr inbounds %struct.hid_item, %struct.hid_item* %76, i32 0, i32 3, !dbg !5580
  %77 = load i8, i8* %tag106, align 2, !dbg !5580
  %conv107 = zext i8 %77 to i32, !dbg !5580
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %dev105, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.61, i64 0, i64 0), i32 %conv107) #13, !dbg !5580
  store i32 -1, i32* %retval, align 4, !dbg !5581
  br label %return, !dbg !5581

return:                                           ; preds = %sw.default, %if.end103, %if.then98, %if.end86, %if.then81, %if.end73, %if.then68, %sw.bb58, %if.end57, %if.end47, %sw.bb32, %if.end31, %sw.bb17, %sw.bb15, %if.end8, %if.then5, %if.end, %if.then
  %78 = load i32, i32* %retval, align 4, !dbg !5582
  ret i32 %78, !dbg !5582
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @hid_parser_local(%struct.hid_parser* %parser, %struct.hid_item* %item) #0 !dbg !5583 {
entry:
  %retval = alloca i32, align 4
  %parser.addr = alloca %struct.hid_parser*, align 8
  %item.addr = alloca %struct.hid_item*, align 8
  %data = alloca i32, align 4
  %n = alloca i32, align 4
  %count = alloca i32, align 4
  store %struct.hid_parser* %parser, %struct.hid_parser** %parser.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.hid_parser** %parser.addr, metadata !5584, metadata !DIExpression()), !dbg !5585
  store %struct.hid_item* %item, %struct.hid_item** %item.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.hid_item** %item.addr, metadata !5586, metadata !DIExpression()), !dbg !5587
  call void @llvm.dbg.declare(metadata i32* %data, metadata !5588, metadata !DIExpression()), !dbg !5589
  call void @llvm.dbg.declare(metadata i32* %n, metadata !5590, metadata !DIExpression()), !dbg !5591
  call void @llvm.dbg.declare(metadata i32* %count, metadata !5592, metadata !DIExpression()), !dbg !5593
  %0 = load %struct.hid_item*, %struct.hid_item** %item.addr, align 8, !dbg !5594
  %call = call i32 @item_udata(%struct.hid_item* %0) #9, !dbg !5595
  store i32 %call, i32* %data, align 4, !dbg !5596
  %1 = load %struct.hid_item*, %struct.hid_item** %item.addr, align 8, !dbg !5597
  %tag = getelementptr inbounds %struct.hid_item, %struct.hid_item* %1, i32 0, i32 3, !dbg !5598
  %2 = load i8, i8* %tag, align 2, !dbg !5598
  %conv = zext i8 %2 to i32, !dbg !5597
  switch i32 %conv, label %sw.default [
    i32 10, label %sw.bb
    i32 0, label %sw.bb18
    i32 1, label %sw.bb30
    i32 2, label %sw.bb44
  ], !dbg !5599

sw.bb:                                            ; preds = %entry
  %3 = load i32, i32* %data, align 4, !dbg !5600
  %tobool = icmp ne i32 %3, 0, !dbg !5600
  br i1 %tobool, label %if.then, label %if.else, !dbg !5603

if.then:                                          ; preds = %sw.bb
  %4 = load %struct.hid_parser*, %struct.hid_parser** %parser.addr, align 8, !dbg !5604
  %local = getelementptr inbounds %struct.hid_parser, %struct.hid_parser* %4, i32 0, i32 3, !dbg !5607
  %delimiter_depth = getelementptr inbounds %struct.hid_local, %struct.hid_local* %local, i32 0, i32 5, !dbg !5608
  %5 = load i32, i32* %delimiter_depth, align 4, !dbg !5608
  %cmp = icmp ne i32 %5, 0, !dbg !5609
  br i1 %cmp, label %if.then2, label %if.end, !dbg !5610

if.then2:                                         ; preds = %if.then
  %6 = load %struct.hid_parser*, %struct.hid_parser** %parser.addr, align 8, !dbg !5611
  %device = getelementptr inbounds %struct.hid_parser, %struct.hid_parser* %6, i32 0, i32 7, !dbg !5611
  %7 = load %struct.hid_device*, %struct.hid_device** %device, align 8, !dbg !5611
  %dev = getelementptr inbounds %struct.hid_device, %struct.hid_device* %7, i32 0, i32 18, !dbg !5611
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %dev, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.62, i64 0, i64 0)) #13, !dbg !5611
  store i32 -1, i32* %retval, align 4, !dbg !5613
  br label %return, !dbg !5613

if.end:                                           ; preds = %if.then
  %8 = load %struct.hid_parser*, %struct.hid_parser** %parser.addr, align 8, !dbg !5614
  %local3 = getelementptr inbounds %struct.hid_parser, %struct.hid_parser* %8, i32 0, i32 3, !dbg !5615
  %delimiter_depth4 = getelementptr inbounds %struct.hid_local, %struct.hid_local* %local3, i32 0, i32 5, !dbg !5616
  %9 = load i32, i32* %delimiter_depth4, align 4, !dbg !5617
  %inc = add i32 %9, 1, !dbg !5617
  store i32 %inc, i32* %delimiter_depth4, align 4, !dbg !5617
  %10 = load %struct.hid_parser*, %struct.hid_parser** %parser.addr, align 8, !dbg !5618
  %local5 = getelementptr inbounds %struct.hid_parser, %struct.hid_parser* %10, i32 0, i32 3, !dbg !5619
  %delimiter_branch = getelementptr inbounds %struct.hid_local, %struct.hid_local* %local5, i32 0, i32 6, !dbg !5620
  %11 = load i32, i32* %delimiter_branch, align 4, !dbg !5621
  %inc6 = add i32 %11, 1, !dbg !5621
  store i32 %inc6, i32* %delimiter_branch, align 4, !dbg !5621
  br label %if.end17, !dbg !5622

if.else:                                          ; preds = %sw.bb
  %12 = load %struct.hid_parser*, %struct.hid_parser** %parser.addr, align 8, !dbg !5623
  %local7 = getelementptr inbounds %struct.hid_parser, %struct.hid_parser* %12, i32 0, i32 3, !dbg !5626
  %delimiter_depth8 = getelementptr inbounds %struct.hid_local, %struct.hid_local* %local7, i32 0, i32 5, !dbg !5627
  %13 = load i32, i32* %delimiter_depth8, align 4, !dbg !5627
  %cmp9 = icmp ult i32 %13, 1, !dbg !5628
  br i1 %cmp9, label %if.then11, label %if.end14, !dbg !5629

if.then11:                                        ; preds = %if.else
  %14 = load %struct.hid_parser*, %struct.hid_parser** %parser.addr, align 8, !dbg !5630
  %device12 = getelementptr inbounds %struct.hid_parser, %struct.hid_parser* %14, i32 0, i32 7, !dbg !5630
  %15 = load %struct.hid_device*, %struct.hid_device** %device12, align 8, !dbg !5630
  %dev13 = getelementptr inbounds %struct.hid_device, %struct.hid_device* %15, i32 0, i32 18, !dbg !5630
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %dev13, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.63, i64 0, i64 0)) #13, !dbg !5630
  store i32 -1, i32* %retval, align 4, !dbg !5632
  br label %return, !dbg !5632

if.end14:                                         ; preds = %if.else
  %16 = load %struct.hid_parser*, %struct.hid_parser** %parser.addr, align 8, !dbg !5633
  %local15 = getelementptr inbounds %struct.hid_parser, %struct.hid_parser* %16, i32 0, i32 3, !dbg !5634
  %delimiter_depth16 = getelementptr inbounds %struct.hid_local, %struct.hid_local* %local15, i32 0, i32 5, !dbg !5635
  %17 = load i32, i32* %delimiter_depth16, align 4, !dbg !5636
  %dec = add i32 %17, -1, !dbg !5636
  store i32 %dec, i32* %delimiter_depth16, align 4, !dbg !5636
  br label %if.end17

if.end17:                                         ; preds = %if.end14, %if.end
  store i32 0, i32* %retval, align 4, !dbg !5637
  br label %return, !dbg !5637

sw.bb18:                                          ; preds = %entry
  %18 = load %struct.hid_parser*, %struct.hid_parser** %parser.addr, align 8, !dbg !5638
  %local19 = getelementptr inbounds %struct.hid_parser, %struct.hid_parser* %18, i32 0, i32 3, !dbg !5640
  %delimiter_branch20 = getelementptr inbounds %struct.hid_local, %struct.hid_local* %local19, i32 0, i32 6, !dbg !5641
  %19 = load i32, i32* %delimiter_branch20, align 4, !dbg !5641
  %cmp21 = icmp ugt i32 %19, 1, !dbg !5642
  br i1 %cmp21, label %if.then23, label %if.end28, !dbg !5643

if.then23:                                        ; preds = %sw.bb18
  br label %do.body, !dbg !5644

do.body:                                          ; preds = %if.then23
  %20 = load i32, i32* @hid_debug, align 4, !dbg !5646
  %tobool24 = icmp ne i32 %20, 0, !dbg !5646
  br i1 %tobool24, label %if.then25, label %if.end27, !dbg !5649

if.then25:                                        ; preds = %do.body
  %call26 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.64, i64 0, i64 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.5, i64 0, i64 0)) #13, !dbg !5646
  br label %if.end27, !dbg !5646

if.end27:                                         ; preds = %if.then25, %do.body
  br label %do.end, !dbg !5649

do.end:                                           ; preds = %if.end27
  store i32 0, i32* %retval, align 4, !dbg !5650
  br label %return, !dbg !5650

if.end28:                                         ; preds = %sw.bb18
  %21 = load %struct.hid_parser*, %struct.hid_parser** %parser.addr, align 8, !dbg !5651
  %22 = load i32, i32* %data, align 4, !dbg !5652
  %23 = load %struct.hid_item*, %struct.hid_item** %item.addr, align 8, !dbg !5653
  %size = getelementptr inbounds %struct.hid_item, %struct.hid_item* %23, i32 0, i32 1, !dbg !5654
  %24 = load i8, i8* %size, align 4, !dbg !5654
  %call29 = call i32 @hid_add_usage(%struct.hid_parser* %21, i32 %22, i8 zeroext %24) #9, !dbg !5655
  store i32 %call29, i32* %retval, align 4, !dbg !5656
  br label %return, !dbg !5656

sw.bb30:                                          ; preds = %entry
  %25 = load %struct.hid_parser*, %struct.hid_parser** %parser.addr, align 8, !dbg !5657
  %local31 = getelementptr inbounds %struct.hid_parser, %struct.hid_parser* %25, i32 0, i32 3, !dbg !5659
  %delimiter_branch32 = getelementptr inbounds %struct.hid_local, %struct.hid_local* %local31, i32 0, i32 6, !dbg !5660
  %26 = load i32, i32* %delimiter_branch32, align 4, !dbg !5660
  %cmp33 = icmp ugt i32 %26, 1, !dbg !5661
  br i1 %cmp33, label %if.then35, label %if.end42, !dbg !5662

if.then35:                                        ; preds = %sw.bb30
  br label %do.body36, !dbg !5663

do.body36:                                        ; preds = %if.then35
  %27 = load i32, i32* @hid_debug, align 4, !dbg !5665
  %tobool37 = icmp ne i32 %27, 0, !dbg !5665
  br i1 %tobool37, label %if.then38, label %if.end40, !dbg !5668

if.then38:                                        ; preds = %do.body36
  %call39 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.64, i64 0, i64 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.5, i64 0, i64 0)) #13, !dbg !5665
  br label %if.end40, !dbg !5665

if.end40:                                         ; preds = %if.then38, %do.body36
  br label %do.end41, !dbg !5668

do.end41:                                         ; preds = %if.end40
  store i32 0, i32* %retval, align 4, !dbg !5669
  br label %return, !dbg !5669

if.end42:                                         ; preds = %sw.bb30
  %28 = load i32, i32* %data, align 4, !dbg !5670
  %29 = load %struct.hid_parser*, %struct.hid_parser** %parser.addr, align 8, !dbg !5671
  %local43 = getelementptr inbounds %struct.hid_parser, %struct.hid_parser* %29, i32 0, i32 3, !dbg !5672
  %usage_minimum = getelementptr inbounds %struct.hid_local, %struct.hid_local* %local43, i32 0, i32 4, !dbg !5673
  store i32 %28, i32* %usage_minimum, align 4, !dbg !5674
  store i32 0, i32* %retval, align 4, !dbg !5675
  br label %return, !dbg !5675

sw.bb44:                                          ; preds = %entry
  %30 = load %struct.hid_parser*, %struct.hid_parser** %parser.addr, align 8, !dbg !5676
  %local45 = getelementptr inbounds %struct.hid_parser, %struct.hid_parser* %30, i32 0, i32 3, !dbg !5678
  %delimiter_branch46 = getelementptr inbounds %struct.hid_local, %struct.hid_local* %local45, i32 0, i32 6, !dbg !5679
  %31 = load i32, i32* %delimiter_branch46, align 4, !dbg !5679
  %cmp47 = icmp ugt i32 %31, 1, !dbg !5680
  br i1 %cmp47, label %if.then49, label %if.end56, !dbg !5681

if.then49:                                        ; preds = %sw.bb44
  br label %do.body50, !dbg !5682

do.body50:                                        ; preds = %if.then49
  %32 = load i32, i32* @hid_debug, align 4, !dbg !5684
  %tobool51 = icmp ne i32 %32, 0, !dbg !5684
  br i1 %tobool51, label %if.then52, label %if.end54, !dbg !5687

if.then52:                                        ; preds = %do.body50
  %call53 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.64, i64 0, i64 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.5, i64 0, i64 0)) #13, !dbg !5684
  br label %if.end54, !dbg !5684

if.end54:                                         ; preds = %if.then52, %do.body50
  br label %do.end55, !dbg !5687

do.end55:                                         ; preds = %if.end54
  store i32 0, i32* %retval, align 4, !dbg !5688
  br label %return, !dbg !5688

if.end56:                                         ; preds = %sw.bb44
  %33 = load i32, i32* %data, align 4, !dbg !5689
  %34 = load %struct.hid_parser*, %struct.hid_parser** %parser.addr, align 8, !dbg !5690
  %local57 = getelementptr inbounds %struct.hid_parser, %struct.hid_parser* %34, i32 0, i32 3, !dbg !5691
  %usage_minimum58 = getelementptr inbounds %struct.hid_local, %struct.hid_local* %local57, i32 0, i32 4, !dbg !5692
  %35 = load i32, i32* %usage_minimum58, align 4, !dbg !5692
  %sub = sub i32 %33, %35, !dbg !5693
  store i32 %sub, i32* %count, align 4, !dbg !5694
  %36 = load i32, i32* %count, align 4, !dbg !5695
  %37 = load %struct.hid_parser*, %struct.hid_parser** %parser.addr, align 8, !dbg !5697
  %local59 = getelementptr inbounds %struct.hid_parser, %struct.hid_parser* %37, i32 0, i32 3, !dbg !5698
  %usage_index = getelementptr inbounds %struct.hid_local, %struct.hid_local* %local59, i32 0, i32 3, !dbg !5699
  %38 = load i32, i32* %usage_index, align 4, !dbg !5699
  %add = add i32 %36, %38, !dbg !5700
  %cmp60 = icmp uge i32 %add, 12288, !dbg !5701
  br i1 %cmp60, label %if.then62, label %if.end84, !dbg !5702

if.then62:                                        ; preds = %if.end56
  %39 = load %struct.hid_parser*, %struct.hid_parser** %parser.addr, align 8, !dbg !5703
  %device63 = getelementptr inbounds %struct.hid_parser, %struct.hid_parser* %39, i32 0, i32 7, !dbg !5706
  %40 = load %struct.hid_device*, %struct.hid_device** %device63, align 8, !dbg !5706
  %dev64 = getelementptr inbounds %struct.hid_device, %struct.hid_device* %40, i32 0, i32 18, !dbg !5707
  %call65 = call i8* @dev_name(%struct.device* %dev64) #9, !dbg !5708
  %tobool66 = icmp ne i8* %call65, null, !dbg !5708
  br i1 %tobool66, label %if.then67, label %if.end70, !dbg !5709

if.then67:                                        ; preds = %if.then62
  %41 = load %struct.hid_parser*, %struct.hid_parser** %parser.addr, align 8, !dbg !5710
  %device68 = getelementptr inbounds %struct.hid_parser, %struct.hid_parser* %41, i32 0, i32 7, !dbg !5710
  %42 = load %struct.hid_device*, %struct.hid_device** %device68, align 8, !dbg !5710
  %dev69 = getelementptr inbounds %struct.hid_device, %struct.hid_device* %42, i32 0, i32 18, !dbg !5710
  call void (%struct.device*, i8*, ...) @_dev_warn(%struct.device* %dev69, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.65, i64 0, i64 0)) #13, !dbg !5710
  br label %if.end70, !dbg !5710

if.end70:                                         ; preds = %if.then67, %if.then62
  %43 = load %struct.hid_parser*, %struct.hid_parser** %parser.addr, align 8, !dbg !5711
  %local71 = getelementptr inbounds %struct.hid_parser, %struct.hid_parser* %43, i32 0, i32 3, !dbg !5712
  %usage_index72 = getelementptr inbounds %struct.hid_local, %struct.hid_local* %local71, i32 0, i32 3, !dbg !5713
  %44 = load i32, i32* %usage_index72, align 4, !dbg !5713
  %sub73 = sub i32 12288, %44, !dbg !5714
  %45 = load %struct.hid_parser*, %struct.hid_parser** %parser.addr, align 8, !dbg !5715
  %local74 = getelementptr inbounds %struct.hid_parser, %struct.hid_parser* %45, i32 0, i32 3, !dbg !5716
  %usage_minimum75 = getelementptr inbounds %struct.hid_local, %struct.hid_local* %local74, i32 0, i32 4, !dbg !5717
  %46 = load i32, i32* %usage_minimum75, align 4, !dbg !5717
  %add76 = add i32 %sub73, %46, !dbg !5718
  %sub77 = sub i32 %add76, 1, !dbg !5719
  store i32 %sub77, i32* %data, align 4, !dbg !5720
  %47 = load i32, i32* %data, align 4, !dbg !5721
  %cmp78 = icmp ule i32 %47, 0, !dbg !5723
  br i1 %cmp78, label %if.then80, label %if.end83, !dbg !5724

if.then80:                                        ; preds = %if.end70
  %48 = load %struct.hid_parser*, %struct.hid_parser** %parser.addr, align 8, !dbg !5725
  %device81 = getelementptr inbounds %struct.hid_parser, %struct.hid_parser* %48, i32 0, i32 7, !dbg !5725
  %49 = load %struct.hid_device*, %struct.hid_device** %device81, align 8, !dbg !5725
  %dev82 = getelementptr inbounds %struct.hid_device, %struct.hid_device* %49, i32 0, i32 18, !dbg !5725
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %dev82, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.66, i64 0, i64 0)) #13, !dbg !5725
  store i32 -1, i32* %retval, align 4, !dbg !5727
  br label %return, !dbg !5727

if.end83:                                         ; preds = %if.end70
  br label %if.end84, !dbg !5728

if.end84:                                         ; preds = %if.end83, %if.end56
  %50 = load %struct.hid_parser*, %struct.hid_parser** %parser.addr, align 8, !dbg !5729
  %local85 = getelementptr inbounds %struct.hid_parser, %struct.hid_parser* %50, i32 0, i32 3, !dbg !5731
  %usage_minimum86 = getelementptr inbounds %struct.hid_local, %struct.hid_local* %local85, i32 0, i32 4, !dbg !5732
  %51 = load i32, i32* %usage_minimum86, align 4, !dbg !5732
  store i32 %51, i32* %n, align 4, !dbg !5733
  br label %for.cond, !dbg !5734

for.cond:                                         ; preds = %for.inc, %if.end84
  %52 = load i32, i32* %n, align 4, !dbg !5735
  %53 = load i32, i32* %data, align 4, !dbg !5737
  %cmp87 = icmp ule i32 %52, %53, !dbg !5738
  br i1 %cmp87, label %for.body, label %for.end, !dbg !5739

for.body:                                         ; preds = %for.cond
  %54 = load %struct.hid_parser*, %struct.hid_parser** %parser.addr, align 8, !dbg !5740
  %55 = load i32, i32* %n, align 4, !dbg !5742
  %56 = load %struct.hid_item*, %struct.hid_item** %item.addr, align 8, !dbg !5743
  %size89 = getelementptr inbounds %struct.hid_item, %struct.hid_item* %56, i32 0, i32 1, !dbg !5744
  %57 = load i8, i8* %size89, align 4, !dbg !5744
  %call90 = call i32 @hid_add_usage(%struct.hid_parser* %54, i32 %55, i8 zeroext %57) #9, !dbg !5745
  %tobool91 = icmp ne i32 %call90, 0, !dbg !5745
  br i1 %tobool91, label %if.then92, label %if.end99, !dbg !5746

if.then92:                                        ; preds = %for.body
  br label %do.body93, !dbg !5747

do.body93:                                        ; preds = %if.then92
  %58 = load i32, i32* @hid_debug, align 4, !dbg !5749
  %tobool94 = icmp ne i32 %58, 0, !dbg !5749
  br i1 %tobool94, label %if.then95, label %if.end97, !dbg !5752

if.then95:                                        ; preds = %do.body93
  %call96 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.67, i64 0, i64 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.5, i64 0, i64 0)) #13, !dbg !5749
  br label %if.end97, !dbg !5749

if.end97:                                         ; preds = %if.then95, %do.body93
  br label %do.end98, !dbg !5752

do.end98:                                         ; preds = %if.end97
  store i32 -1, i32* %retval, align 4, !dbg !5753
  br label %return, !dbg !5753

if.end99:                                         ; preds = %for.body
  br label %for.inc, !dbg !5754

for.inc:                                          ; preds = %if.end99
  %59 = load i32, i32* %n, align 4, !dbg !5755
  %inc100 = add i32 %59, 1, !dbg !5755
  store i32 %inc100, i32* %n, align 4, !dbg !5755
  br label %for.cond, !dbg !5756, !llvm.loop !5757

for.end:                                          ; preds = %for.cond
  store i32 0, i32* %retval, align 4, !dbg !5759
  br label %return, !dbg !5759

sw.default:                                       ; preds = %entry
  br label %do.body101, !dbg !5760

do.body101:                                       ; preds = %sw.default
  %60 = load i32, i32* @hid_debug, align 4, !dbg !5761
  %tobool102 = icmp ne i32 %60, 0, !dbg !5761
  br i1 %tobool102, label %if.then103, label %if.end107, !dbg !5764

if.then103:                                       ; preds = %do.body101
  %61 = load %struct.hid_item*, %struct.hid_item** %item.addr, align 8, !dbg !5761
  %tag104 = getelementptr inbounds %struct.hid_item, %struct.hid_item* %61, i32 0, i32 3, !dbg !5761
  %62 = load i8, i8* %tag104, align 2, !dbg !5761
  %conv105 = zext i8 %62 to i32, !dbg !5761
  %call106 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.68, i64 0, i64 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.5, i64 0, i64 0), i32 %conv105) #13, !dbg !5761
  br label %if.end107, !dbg !5761

if.end107:                                        ; preds = %if.then103, %do.body101
  br label %do.end108, !dbg !5764

do.end108:                                        ; preds = %if.end107
  store i32 0, i32* %retval, align 4, !dbg !5765
  br label %return, !dbg !5765

return:                                           ; preds = %do.end108, %for.end, %do.end98, %if.then80, %do.end55, %if.end42, %do.end41, %if.end28, %do.end, %if.end17, %if.then11, %if.then2
  %63 = load i32, i32* %retval, align 4, !dbg !5766
  ret i32 %63, !dbg !5766
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @hid_parser_reserved(%struct.hid_parser* %parser, %struct.hid_item* %item) #0 !dbg !5767 {
entry:
  %parser.addr = alloca %struct.hid_parser*, align 8
  %item.addr = alloca %struct.hid_item*, align 8
  store %struct.hid_parser* %parser, %struct.hid_parser** %parser.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.hid_parser** %parser.addr, metadata !5768, metadata !DIExpression()), !dbg !5769
  store %struct.hid_item* %item, %struct.hid_item** %item.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.hid_item** %item.addr, metadata !5770, metadata !DIExpression()), !dbg !5771
  br label %do.body, !dbg !5772

do.body:                                          ; preds = %entry
  %0 = load i32, i32* @hid_debug, align 4, !dbg !5773
  %tobool = icmp ne i32 %0, 0, !dbg !5773
  br i1 %tobool, label %if.then, label %if.end, !dbg !5776

if.then:                                          ; preds = %do.body
  %1 = load %struct.hid_item*, %struct.hid_item** %item.addr, align 8, !dbg !5773
  %tag = getelementptr inbounds %struct.hid_item, %struct.hid_item* %1, i32 0, i32 3, !dbg !5773
  %2 = load i8, i8* %tag, align 2, !dbg !5773
  %conv = zext i8 %2 to i32, !dbg !5773
  %call = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.70, i64 0, i64 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.5, i64 0, i64 0), i32 %conv) #13, !dbg !5773
  br label %if.end, !dbg !5773

if.end:                                           ; preds = %if.then, %do.body
  br label %do.end, !dbg !5776

do.end:                                           ; preds = %if.end
  ret i32 0, !dbg !5777
}

; Function Attrs: noredzone
declare dso_local void @kfree(i8*) #2

; Function Attrs: noredzone
declare dso_local i8* @vzalloc(i64) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @kcalloc(i64 %n, i64 %size, i32 %flags) #0 !dbg !5778 {
entry:
  %n.addr = alloca i64, align 8
  %size.addr = alloca i64, align 8
  %flags.addr = alloca i32, align 4
  store i64 %n, i64* %n.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %n.addr, metadata !5781, metadata !DIExpression()), !dbg !5782
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !5783, metadata !DIExpression()), !dbg !5784
  store i32 %flags, i32* %flags.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr, metadata !5785, metadata !DIExpression()), !dbg !5786
  %0 = load i64, i64* %n.addr, align 8, !dbg !5787
  %1 = load i64, i64* %size.addr, align 8, !dbg !5788
  %2 = load i32, i32* %flags.addr, align 4, !dbg !5789
  %or = or i32 %2, 256, !dbg !5790
  %call = call i8* @kmalloc_array(i64 %0, i64 %1, i32 %or) #9, !dbg !5791
  ret i8* %call, !dbg !5792
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @fetch_item(i8* %start, i8* %end, %struct.hid_item* %item) #0 !dbg !5793 {
entry:
  %p.addr.i.i72 = alloca i32*, align 8
  call void @llvm.dbg.declare(metadata i32** %p.addr.i.i72, metadata !5796, metadata !DIExpression()), !dbg !5803
  %p.addr.i73 = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %p.addr.i73, metadata !5811, metadata !DIExpression()), !dbg !5812
  %p.addr.i.i = alloca i16*, align 8
  call void @llvm.dbg.declare(metadata i16** %p.addr.i.i, metadata !5813, metadata !DIExpression()), !dbg !5819
  %p.addr.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %p.addr.i, metadata !5825, metadata !DIExpression()), !dbg !5826
  %retval = alloca i8*, align 8
  %start.addr = alloca i8*, align 8
  %end.addr = alloca i8*, align 8
  %item.addr = alloca %struct.hid_item*, align 8
  %b = alloca i8, align 1
  store i8* %start, i8** %start.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %start.addr, metadata !5827, metadata !DIExpression()), !dbg !5828
  store i8* %end, i8** %end.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %end.addr, metadata !5829, metadata !DIExpression()), !dbg !5830
  store %struct.hid_item* %item, %struct.hid_item** %item.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.hid_item** %item.addr, metadata !5831, metadata !DIExpression()), !dbg !5832
  call void @llvm.dbg.declare(metadata i8* %b, metadata !5833, metadata !DIExpression()), !dbg !5834
  %0 = load i8*, i8** %end.addr, align 8, !dbg !5835
  %1 = load i8*, i8** %start.addr, align 8, !dbg !5837
  %sub.ptr.lhs.cast = ptrtoint i8* %0 to i64, !dbg !5838
  %sub.ptr.rhs.cast = ptrtoint i8* %1 to i64, !dbg !5838
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !5838
  %cmp = icmp sle i64 %sub.ptr.sub, 0, !dbg !5839
  br i1 %cmp, label %if.then, label %if.end, !dbg !5840

if.then:                                          ; preds = %entry
  store i8* null, i8** %retval, align 8, !dbg !5841
  br label %return, !dbg !5841

if.end:                                           ; preds = %entry
  %2 = load i8*, i8** %start.addr, align 8, !dbg !5842
  %incdec.ptr = getelementptr i8, i8* %2, i32 1, !dbg !5842
  store i8* %incdec.ptr, i8** %start.addr, align 8, !dbg !5842
  %3 = load i8, i8* %2, align 1, !dbg !5843
  store i8 %3, i8* %b, align 1, !dbg !5844
  %4 = load i8, i8* %b, align 1, !dbg !5845
  %conv = zext i8 %4 to i32, !dbg !5845
  %shr = ashr i32 %conv, 2, !dbg !5846
  %and = and i32 %shr, 3, !dbg !5847
  %conv1 = trunc i32 %and to i8, !dbg !5848
  %5 = load %struct.hid_item*, %struct.hid_item** %item.addr, align 8, !dbg !5849
  %type = getelementptr inbounds %struct.hid_item, %struct.hid_item* %5, i32 0, i32 2, !dbg !5850
  store i8 %conv1, i8* %type, align 1, !dbg !5851
  %6 = load i8, i8* %b, align 1, !dbg !5852
  %conv2 = zext i8 %6 to i32, !dbg !5852
  %shr3 = ashr i32 %conv2, 4, !dbg !5853
  %and4 = and i32 %shr3, 15, !dbg !5854
  %conv5 = trunc i32 %and4 to i8, !dbg !5855
  %7 = load %struct.hid_item*, %struct.hid_item** %item.addr, align 8, !dbg !5856
  %tag = getelementptr inbounds %struct.hid_item, %struct.hid_item* %7, i32 0, i32 3, !dbg !5857
  store i8 %conv5, i8* %tag, align 2, !dbg !5858
  %8 = load %struct.hid_item*, %struct.hid_item** %item.addr, align 8, !dbg !5859
  %tag6 = getelementptr inbounds %struct.hid_item, %struct.hid_item* %8, i32 0, i32 3, !dbg !5861
  %9 = load i8, i8* %tag6, align 2, !dbg !5861
  %conv7 = zext i8 %9 to i32, !dbg !5859
  %cmp8 = icmp eq i32 %conv7, 15, !dbg !5862
  br i1 %cmp8, label %if.then10, label %if.end32, !dbg !5863

if.then10:                                        ; preds = %if.end
  %10 = load %struct.hid_item*, %struct.hid_item** %item.addr, align 8, !dbg !5864
  %format = getelementptr inbounds %struct.hid_item, %struct.hid_item* %10, i32 0, i32 0, !dbg !5866
  store i32 1, i32* %format, align 8, !dbg !5867
  %11 = load i8*, i8** %end.addr, align 8, !dbg !5868
  %12 = load i8*, i8** %start.addr, align 8, !dbg !5870
  %sub.ptr.lhs.cast11 = ptrtoint i8* %11 to i64, !dbg !5871
  %sub.ptr.rhs.cast12 = ptrtoint i8* %12 to i64, !dbg !5871
  %sub.ptr.sub13 = sub i64 %sub.ptr.lhs.cast11, %sub.ptr.rhs.cast12, !dbg !5871
  %cmp14 = icmp slt i64 %sub.ptr.sub13, 2, !dbg !5872
  br i1 %cmp14, label %if.then16, label %if.end17, !dbg !5873

if.then16:                                        ; preds = %if.then10
  store i8* null, i8** %retval, align 8, !dbg !5874
  br label %return, !dbg !5874

if.end17:                                         ; preds = %if.then10
  %13 = load i8*, i8** %start.addr, align 8, !dbg !5875
  %incdec.ptr18 = getelementptr i8, i8* %13, i32 1, !dbg !5875
  store i8* %incdec.ptr18, i8** %start.addr, align 8, !dbg !5875
  %14 = load i8, i8* %13, align 1, !dbg !5876
  %15 = load %struct.hid_item*, %struct.hid_item** %item.addr, align 8, !dbg !5877
  %size = getelementptr inbounds %struct.hid_item, %struct.hid_item* %15, i32 0, i32 1, !dbg !5878
  store i8 %14, i8* %size, align 4, !dbg !5879
  %16 = load i8*, i8** %start.addr, align 8, !dbg !5880
  %incdec.ptr19 = getelementptr i8, i8* %16, i32 1, !dbg !5880
  store i8* %incdec.ptr19, i8** %start.addr, align 8, !dbg !5880
  %17 = load i8, i8* %16, align 1, !dbg !5881
  %18 = load %struct.hid_item*, %struct.hid_item** %item.addr, align 8, !dbg !5882
  %tag20 = getelementptr inbounds %struct.hid_item, %struct.hid_item* %18, i32 0, i32 3, !dbg !5883
  store i8 %17, i8* %tag20, align 2, !dbg !5884
  %19 = load i8*, i8** %end.addr, align 8, !dbg !5885
  %20 = load i8*, i8** %start.addr, align 8, !dbg !5887
  %sub.ptr.lhs.cast21 = ptrtoint i8* %19 to i64, !dbg !5888
  %sub.ptr.rhs.cast22 = ptrtoint i8* %20 to i64, !dbg !5888
  %sub.ptr.sub23 = sub i64 %sub.ptr.lhs.cast21, %sub.ptr.rhs.cast22, !dbg !5888
  %21 = load %struct.hid_item*, %struct.hid_item** %item.addr, align 8, !dbg !5889
  %size24 = getelementptr inbounds %struct.hid_item, %struct.hid_item* %21, i32 0, i32 1, !dbg !5890
  %22 = load i8, i8* %size24, align 4, !dbg !5890
  %conv25 = zext i8 %22 to i64, !dbg !5889
  %cmp26 = icmp slt i64 %sub.ptr.sub23, %conv25, !dbg !5891
  br i1 %cmp26, label %if.then28, label %if.end29, !dbg !5892

if.then28:                                        ; preds = %if.end17
  store i8* null, i8** %retval, align 8, !dbg !5893
  br label %return, !dbg !5893

if.end29:                                         ; preds = %if.end17
  %23 = load i8*, i8** %start.addr, align 8, !dbg !5894
  %24 = load %struct.hid_item*, %struct.hid_item** %item.addr, align 8, !dbg !5895
  %data = getelementptr inbounds %struct.hid_item, %struct.hid_item* %24, i32 0, i32 4, !dbg !5896
  %longdata = bitcast %union.anon.67* %data to i8**, !dbg !5897
  store i8* %23, i8** %longdata, align 8, !dbg !5898
  %25 = load %struct.hid_item*, %struct.hid_item** %item.addr, align 8, !dbg !5899
  %size30 = getelementptr inbounds %struct.hid_item, %struct.hid_item* %25, i32 0, i32 1, !dbg !5900
  %26 = load i8, i8* %size30, align 4, !dbg !5900
  %conv31 = zext i8 %26 to i32, !dbg !5899
  %27 = load i8*, i8** %start.addr, align 8, !dbg !5901
  %idx.ext = sext i32 %conv31 to i64, !dbg !5901
  %add.ptr = getelementptr i8, i8* %27, i64 %idx.ext, !dbg !5901
  store i8* %add.ptr, i8** %start.addr, align 8, !dbg !5901
  %28 = load i8*, i8** %start.addr, align 8, !dbg !5902
  store i8* %28, i8** %retval, align 8, !dbg !5903
  br label %return, !dbg !5903

if.end32:                                         ; preds = %if.end
  %29 = load %struct.hid_item*, %struct.hid_item** %item.addr, align 8, !dbg !5904
  %format33 = getelementptr inbounds %struct.hid_item, %struct.hid_item* %29, i32 0, i32 0, !dbg !5905
  store i32 0, i32* %format33, align 8, !dbg !5906
  %30 = load i8, i8* %b, align 1, !dbg !5907
  %conv34 = zext i8 %30 to i32, !dbg !5907
  %and35 = and i32 %conv34, 3, !dbg !5908
  %conv36 = trunc i32 %and35 to i8, !dbg !5907
  %31 = load %struct.hid_item*, %struct.hid_item** %item.addr, align 8, !dbg !5909
  %size37 = getelementptr inbounds %struct.hid_item, %struct.hid_item* %31, i32 0, i32 1, !dbg !5910
  store i8 %conv36, i8* %size37, align 4, !dbg !5911
  %32 = load %struct.hid_item*, %struct.hid_item** %item.addr, align 8, !dbg !5912
  %size38 = getelementptr inbounds %struct.hid_item, %struct.hid_item* %32, i32 0, i32 1, !dbg !5913
  %33 = load i8, i8* %size38, align 4, !dbg !5913
  %conv39 = zext i8 %33 to i32, !dbg !5912
  switch i32 %conv39, label %sw.epilog [
    i32 0, label %sw.bb
    i32 1, label %sw.bb40
    i32 2, label %sw.bb50
    i32 3, label %sw.bb60
  ], !dbg !5914

sw.bb:                                            ; preds = %if.end32
  %34 = load i8*, i8** %start.addr, align 8, !dbg !5915
  store i8* %34, i8** %retval, align 8, !dbg !5916
  br label %return, !dbg !5916

sw.bb40:                                          ; preds = %if.end32
  %35 = load i8*, i8** %end.addr, align 8, !dbg !5917
  %36 = load i8*, i8** %start.addr, align 8, !dbg !5919
  %sub.ptr.lhs.cast41 = ptrtoint i8* %35 to i64, !dbg !5920
  %sub.ptr.rhs.cast42 = ptrtoint i8* %36 to i64, !dbg !5920
  %sub.ptr.sub43 = sub i64 %sub.ptr.lhs.cast41, %sub.ptr.rhs.cast42, !dbg !5920
  %cmp44 = icmp slt i64 %sub.ptr.sub43, 1, !dbg !5921
  br i1 %cmp44, label %if.then46, label %if.end47, !dbg !5922

if.then46:                                        ; preds = %sw.bb40
  store i8* null, i8** %retval, align 8, !dbg !5923
  br label %return, !dbg !5923

if.end47:                                         ; preds = %sw.bb40
  %37 = load i8*, i8** %start.addr, align 8, !dbg !5924
  %incdec.ptr48 = getelementptr i8, i8* %37, i32 1, !dbg !5924
  store i8* %incdec.ptr48, i8** %start.addr, align 8, !dbg !5924
  %38 = load i8, i8* %37, align 1, !dbg !5925
  %39 = load %struct.hid_item*, %struct.hid_item** %item.addr, align 8, !dbg !5926
  %data49 = getelementptr inbounds %struct.hid_item, %struct.hid_item* %39, i32 0, i32 4, !dbg !5927
  %u8 = bitcast %union.anon.67* %data49 to i8*, !dbg !5928
  store i8 %38, i8* %u8, align 8, !dbg !5929
  %40 = load i8*, i8** %start.addr, align 8, !dbg !5930
  store i8* %40, i8** %retval, align 8, !dbg !5931
  br label %return, !dbg !5931

sw.bb50:                                          ; preds = %if.end32
  %41 = load i8*, i8** %end.addr, align 8, !dbg !5932
  %42 = load i8*, i8** %start.addr, align 8, !dbg !5934
  %sub.ptr.lhs.cast51 = ptrtoint i8* %41 to i64, !dbg !5935
  %sub.ptr.rhs.cast52 = ptrtoint i8* %42 to i64, !dbg !5935
  %sub.ptr.sub53 = sub i64 %sub.ptr.lhs.cast51, %sub.ptr.rhs.cast52, !dbg !5935
  %cmp54 = icmp slt i64 %sub.ptr.sub53, 2, !dbg !5936
  br i1 %cmp54, label %if.then56, label %if.end57, !dbg !5937

if.then56:                                        ; preds = %sw.bb50
  store i8* null, i8** %retval, align 8, !dbg !5938
  br label %return, !dbg !5938

if.end57:                                         ; preds = %sw.bb50
  %43 = load i8*, i8** %start.addr, align 8, !dbg !5939
  store i8* %43, i8** %p.addr.i, align 8
  %44 = load i8*, i8** %p.addr.i, align 8, !dbg !5940
  %45 = bitcast i8* %44 to i16*, !dbg !5941
  store i16* %45, i16** %p.addr.i.i, align 8
  %46 = load i16*, i16** %p.addr.i.i, align 8, !dbg !5942
  %47 = load i16, i16* %46, align 2, !dbg !5943
  %48 = load %struct.hid_item*, %struct.hid_item** %item.addr, align 8, !dbg !5944
  %data58 = getelementptr inbounds %struct.hid_item, %struct.hid_item* %48, i32 0, i32 4, !dbg !5945
  %u16 = bitcast %union.anon.67* %data58 to i16*, !dbg !5946
  store i16 %47, i16* %u16, align 8, !dbg !5947
  %49 = load i8*, i8** %start.addr, align 8, !dbg !5948
  %50 = bitcast i8* %49 to i16*, !dbg !5949
  %add.ptr59 = getelementptr i16, i16* %50, i64 1, !dbg !5950
  %51 = bitcast i16* %add.ptr59 to i8*, !dbg !5951
  store i8* %51, i8** %start.addr, align 8, !dbg !5952
  %52 = load i8*, i8** %start.addr, align 8, !dbg !5953
  store i8* %52, i8** %retval, align 8, !dbg !5954
  br label %return, !dbg !5954

sw.bb60:                                          ; preds = %if.end32
  %53 = load %struct.hid_item*, %struct.hid_item** %item.addr, align 8, !dbg !5955
  %size61 = getelementptr inbounds %struct.hid_item, %struct.hid_item* %53, i32 0, i32 1, !dbg !5956
  %54 = load i8, i8* %size61, align 4, !dbg !5957
  %inc = add i8 %54, 1, !dbg !5957
  store i8 %inc, i8* %size61, align 4, !dbg !5957
  %55 = load i8*, i8** %end.addr, align 8, !dbg !5958
  %56 = load i8*, i8** %start.addr, align 8, !dbg !5960
  %sub.ptr.lhs.cast62 = ptrtoint i8* %55 to i64, !dbg !5961
  %sub.ptr.rhs.cast63 = ptrtoint i8* %56 to i64, !dbg !5961
  %sub.ptr.sub64 = sub i64 %sub.ptr.lhs.cast62, %sub.ptr.rhs.cast63, !dbg !5961
  %cmp65 = icmp slt i64 %sub.ptr.sub64, 4, !dbg !5962
  br i1 %cmp65, label %if.then67, label %if.end68, !dbg !5963

if.then67:                                        ; preds = %sw.bb60
  store i8* null, i8** %retval, align 8, !dbg !5964
  br label %return, !dbg !5964

if.end68:                                         ; preds = %sw.bb60
  %57 = load i8*, i8** %start.addr, align 8, !dbg !5965
  store i8* %57, i8** %p.addr.i73, align 8
  %58 = load i8*, i8** %p.addr.i73, align 8, !dbg !5966
  %59 = bitcast i8* %58 to i32*, !dbg !5967
  store i32* %59, i32** %p.addr.i.i72, align 8
  %60 = load i32*, i32** %p.addr.i.i72, align 8, !dbg !5968
  %61 = load i32, i32* %60, align 4, !dbg !5969
  %62 = load %struct.hid_item*, %struct.hid_item** %item.addr, align 8, !dbg !5970
  %data70 = getelementptr inbounds %struct.hid_item, %struct.hid_item* %62, i32 0, i32 4, !dbg !5971
  %u32 = bitcast %union.anon.67* %data70 to i32*, !dbg !5972
  store i32 %61, i32* %u32, align 8, !dbg !5973
  %63 = load i8*, i8** %start.addr, align 8, !dbg !5974
  %64 = bitcast i8* %63 to i32*, !dbg !5975
  %add.ptr71 = getelementptr i32, i32* %64, i64 1, !dbg !5976
  %65 = bitcast i32* %add.ptr71 to i8*, !dbg !5977
  store i8* %65, i8** %start.addr, align 8, !dbg !5978
  %66 = load i8*, i8** %start.addr, align 8, !dbg !5979
  store i8* %66, i8** %retval, align 8, !dbg !5980
  br label %return, !dbg !5980

sw.epilog:                                        ; preds = %if.end32
  store i8* null, i8** %retval, align 8, !dbg !5981
  br label %return, !dbg !5981

return:                                           ; preds = %sw.epilog, %if.end68, %if.then67, %if.end57, %if.then56, %if.end47, %if.then46, %sw.bb, %if.end29, %if.then28, %if.then16, %if.then
  %67 = load i8*, i8** %retval, align 8, !dbg !5982
  ret i8* %67, !dbg !5982
}

; Function Attrs: noredzone
declare dso_local void @vfree(i8*) #2

; Function Attrs: nounwind readnone speculatable willreturn
declare void @llvm.dbg.label(metadata) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @hid_close_report(%struct.hid_device* %device) #0 !dbg !5983 {
entry:
  %device.addr = alloca %struct.hid_device*, align 8
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %report_enum = alloca %struct.hid_report_enum*, align 8
  %report = alloca %struct.hid_report*, align 8
  store %struct.hid_device* %device, %struct.hid_device** %device.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.hid_device** %device.addr, metadata !5984, metadata !DIExpression()), !dbg !5985
  call void @llvm.dbg.declare(metadata i32* %i, metadata !5986, metadata !DIExpression()), !dbg !5987
  call void @llvm.dbg.declare(metadata i32* %j, metadata !5988, metadata !DIExpression()), !dbg !5989
  store i32 0, i32* %i, align 4, !dbg !5990
  br label %for.cond, !dbg !5992

for.cond:                                         ; preds = %for.inc5, %entry
  %0 = load i32, i32* %i, align 4, !dbg !5993
  %cmp = icmp ult i32 %0, 3, !dbg !5995
  br i1 %cmp, label %for.body, label %for.end7, !dbg !5996

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.hid_report_enum** %report_enum, metadata !5997, metadata !DIExpression()), !dbg !5999
  %1 = load %struct.hid_device*, %struct.hid_device** %device.addr, align 8, !dbg !6000
  %report_enum1 = getelementptr inbounds %struct.hid_device, %struct.hid_device* %1, i32 0, i32 15, !dbg !6001
  %arraydecay = getelementptr inbounds [3 x %struct.hid_report_enum], [3 x %struct.hid_report_enum]* %report_enum1, i64 0, i64 0, !dbg !6000
  %2 = load i32, i32* %i, align 4, !dbg !6002
  %idx.ext = zext i32 %2 to i64, !dbg !6003
  %add.ptr = getelementptr %struct.hid_report_enum, %struct.hid_report_enum* %arraydecay, i64 %idx.ext, !dbg !6003
  store %struct.hid_report_enum* %add.ptr, %struct.hid_report_enum** %report_enum, align 8, !dbg !5999
  store i32 0, i32* %j, align 4, !dbg !6004
  br label %for.cond2, !dbg !6006

for.cond2:                                        ; preds = %for.inc, %for.body
  %3 = load i32, i32* %j, align 4, !dbg !6007
  %cmp3 = icmp ult i32 %3, 256, !dbg !6009
  br i1 %cmp3, label %for.body4, label %for.end, !dbg !6010

for.body4:                                        ; preds = %for.cond2
  call void @llvm.dbg.declare(metadata %struct.hid_report** %report, metadata !6011, metadata !DIExpression()), !dbg !6013
  %4 = load %struct.hid_report_enum*, %struct.hid_report_enum** %report_enum, align 8, !dbg !6014
  %report_id_hash = getelementptr inbounds %struct.hid_report_enum, %struct.hid_report_enum* %4, i32 0, i32 2, !dbg !6015
  %5 = load i32, i32* %j, align 4, !dbg !6016
  %idxprom = zext i32 %5 to i64, !dbg !6014
  %arrayidx = getelementptr [256 x %struct.hid_report*], [256 x %struct.hid_report*]* %report_id_hash, i64 0, i64 %idxprom, !dbg !6014
  %6 = load %struct.hid_report*, %struct.hid_report** %arrayidx, align 8, !dbg !6014
  store %struct.hid_report* %6, %struct.hid_report** %report, align 8, !dbg !6013
  %7 = load %struct.hid_report*, %struct.hid_report** %report, align 8, !dbg !6017
  %tobool = icmp ne %struct.hid_report* %7, null, !dbg !6017
  br i1 %tobool, label %if.then, label %if.end, !dbg !6019

if.then:                                          ; preds = %for.body4
  %8 = load %struct.hid_report*, %struct.hid_report** %report, align 8, !dbg !6020
  call void @hid_free_report(%struct.hid_report* %8) #9, !dbg !6021
  br label %if.end, !dbg !6021

if.end:                                           ; preds = %if.then, %for.body4
  br label %for.inc, !dbg !6022

for.inc:                                          ; preds = %if.end
  %9 = load i32, i32* %j, align 4, !dbg !6023
  %inc = add i32 %9, 1, !dbg !6023
  store i32 %inc, i32* %j, align 4, !dbg !6023
  br label %for.cond2, !dbg !6024, !llvm.loop !6025

for.end:                                          ; preds = %for.cond2
  %10 = load %struct.hid_report_enum*, %struct.hid_report_enum** %report_enum, align 8, !dbg !6027
  %11 = bitcast %struct.hid_report_enum* %10 to i8*, !dbg !6028
  call void @llvm.memset.p0i8.i64(i8* align 8 %11, i8 0, i64 2072, i1 false), !dbg !6028
  %12 = load %struct.hid_report_enum*, %struct.hid_report_enum** %report_enum, align 8, !dbg !6029
  %report_list = getelementptr inbounds %struct.hid_report_enum, %struct.hid_report_enum* %12, i32 0, i32 1, !dbg !6030
  call void @INIT_LIST_HEAD(%struct.list_head* %report_list) #9, !dbg !6031
  br label %for.inc5, !dbg !6032

for.inc5:                                         ; preds = %for.end
  %13 = load i32, i32* %i, align 4, !dbg !6033
  %inc6 = add i32 %13, 1, !dbg !6033
  store i32 %inc6, i32* %i, align 4, !dbg !6033
  br label %for.cond, !dbg !6034, !llvm.loop !6035

for.end7:                                         ; preds = %for.cond
  %14 = load %struct.hid_device*, %struct.hid_device** %device.addr, align 8, !dbg !6037
  %rdesc = getelementptr inbounds %struct.hid_device, %struct.hid_device* %14, i32 0, i32 2, !dbg !6038
  %15 = load i8*, i8** %rdesc, align 8, !dbg !6038
  call void @kfree(i8* %15) #9, !dbg !6039
  %16 = load %struct.hid_device*, %struct.hid_device** %device.addr, align 8, !dbg !6040
  %rdesc8 = getelementptr inbounds %struct.hid_device, %struct.hid_device* %16, i32 0, i32 2, !dbg !6041
  store i8* null, i8** %rdesc8, align 8, !dbg !6042
  %17 = load %struct.hid_device*, %struct.hid_device** %device.addr, align 8, !dbg !6043
  %rsize = getelementptr inbounds %struct.hid_device, %struct.hid_device* %17, i32 0, i32 3, !dbg !6044
  store i32 0, i32* %rsize, align 8, !dbg !6045
  %18 = load %struct.hid_device*, %struct.hid_device** %device.addr, align 8, !dbg !6046
  %collection = getelementptr inbounds %struct.hid_device, %struct.hid_device* %18, i32 0, i32 4, !dbg !6047
  %19 = load %struct.hid_collection*, %struct.hid_collection** %collection, align 8, !dbg !6047
  %20 = bitcast %struct.hid_collection* %19 to i8*, !dbg !6046
  call void @kfree(i8* %20) #9, !dbg !6048
  %21 = load %struct.hid_device*, %struct.hid_device** %device.addr, align 8, !dbg !6049
  %collection9 = getelementptr inbounds %struct.hid_device, %struct.hid_device* %21, i32 0, i32 4, !dbg !6050
  store %struct.hid_collection* null, %struct.hid_collection** %collection9, align 8, !dbg !6051
  %22 = load %struct.hid_device*, %struct.hid_device** %device.addr, align 8, !dbg !6052
  %collection_size = getelementptr inbounds %struct.hid_device, %struct.hid_device* %22, i32 0, i32 5, !dbg !6053
  store i32 0, i32* %collection_size, align 8, !dbg !6054
  %23 = load %struct.hid_device*, %struct.hid_device** %device.addr, align 8, !dbg !6055
  %maxcollection = getelementptr inbounds %struct.hid_device, %struct.hid_device* %23, i32 0, i32 6, !dbg !6056
  store i32 0, i32* %maxcollection, align 4, !dbg !6057
  %24 = load %struct.hid_device*, %struct.hid_device** %device.addr, align 8, !dbg !6058
  %maxapplication = getelementptr inbounds %struct.hid_device, %struct.hid_device* %24, i32 0, i32 7, !dbg !6059
  store i32 0, i32* %maxapplication, align 8, !dbg !6060
  %25 = load %struct.hid_device*, %struct.hid_device** %device.addr, align 8, !dbg !6061
  %status = getelementptr inbounds %struct.hid_device, %struct.hid_device* %25, i32 0, i32 23, !dbg !6062
  %26 = load i64, i64* %status, align 8, !dbg !6063
  %and = and i64 %26, -3, !dbg !6063
  store i64 %and, i64* %status, align 8, !dbg !6063
  ret void, !dbg !6064
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @hid_snto32(i32 %value, i32 %n) #0 !dbg !6065 {
entry:
  %value.addr = alloca i32, align 4
  %n.addr = alloca i32, align 4
  store i32 %value, i32* %value.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %value.addr, metadata !6068, metadata !DIExpression()), !dbg !6069
  store i32 %n, i32* %n.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !6070, metadata !DIExpression()), !dbg !6071
  %0 = load i32, i32* %value.addr, align 4, !dbg !6072
  %1 = load i32, i32* %n.addr, align 4, !dbg !6073
  %call = call i32 @snto32(i32 %0, i32 %1) #9, !dbg !6074
  ret i32 %call, !dbg !6075
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @snto32(i32 %value, i32 %n) #0 !dbg !6076 {
entry:
  %retval = alloca i32, align 4
  %value.addr = alloca i32, align 4
  %n.addr = alloca i32, align 4
  store i32 %value, i32* %value.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %value.addr, metadata !6077, metadata !DIExpression()), !dbg !6078
  store i32 %n, i32* %n.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !6079, metadata !DIExpression()), !dbg !6080
  %0 = load i32, i32* %n.addr, align 4, !dbg !6081
  switch i32 %0, label %sw.epilog [
    i32 8, label %sw.bb
    i32 16, label %sw.bb2
    i32 32, label %sw.bb5
  ], !dbg !6082

sw.bb:                                            ; preds = %entry
  %1 = load i32, i32* %value.addr, align 4, !dbg !6083
  %conv = trunc i32 %1 to i8, !dbg !6085
  %conv1 = sext i8 %conv to i32, !dbg !6086
  store i32 %conv1, i32* %retval, align 4, !dbg !6087
  br label %return, !dbg !6087

sw.bb2:                                           ; preds = %entry
  %2 = load i32, i32* %value.addr, align 4, !dbg !6088
  %conv3 = trunc i32 %2 to i16, !dbg !6089
  %conv4 = sext i16 %conv3 to i32, !dbg !6090
  store i32 %conv4, i32* %retval, align 4, !dbg !6091
  br label %return, !dbg !6091

sw.bb5:                                           ; preds = %entry
  %3 = load i32, i32* %value.addr, align 4, !dbg !6092
  store i32 %3, i32* %retval, align 4, !dbg !6093
  br label %return, !dbg !6093

sw.epilog:                                        ; preds = %entry
  %4 = load i32, i32* %value.addr, align 4, !dbg !6094
  %5 = load i32, i32* %n.addr, align 4, !dbg !6095
  %sub = sub i32 %5, 1, !dbg !6096
  %shl = shl i32 1, %sub, !dbg !6097
  %and = and i32 %4, %shl, !dbg !6098
  %tobool = icmp ne i32 %and, 0, !dbg !6098
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !6094

cond.true:                                        ; preds = %sw.epilog
  %6 = load i32, i32* %value.addr, align 4, !dbg !6099
  %7 = load i32, i32* %n.addr, align 4, !dbg !6100
  %shl6 = shl i32 -1, %7, !dbg !6101
  %or = or i32 %6, %shl6, !dbg !6102
  br label %cond.end, !dbg !6094

cond.false:                                       ; preds = %sw.epilog
  %8 = load i32, i32* %value.addr, align 4, !dbg !6103
  br label %cond.end, !dbg !6094

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %or, %cond.true ], [ %8, %cond.false ], !dbg !6094
  store i32 %cond, i32* %retval, align 4, !dbg !6104
  br label %return, !dbg !6104

return:                                           ; preds = %cond.end, %sw.bb5, %sw.bb2, %sw.bb
  %9 = load i32, i32* %retval, align 4, !dbg !6105
  ret i32 %9, !dbg !6105
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @hid_field_extract(%struct.hid_device* %hid, i8* %report, i32 %offset, i32 %n) #0 !dbg !4356 {
entry:
  %pscr_ret__.i = alloca %struct.task_struct*, align 8
  call void @llvm.dbg.declare(metadata %struct.task_struct** %pscr_ret__.i, metadata !6106, metadata !DIExpression()), !dbg !6112
  %__vpp_verify.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %__vpp_verify.i, metadata !6119, metadata !DIExpression()), !dbg !6121
  %pfo_val__.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %pfo_val__.i, metadata !6122, metadata !DIExpression()), !dbg !6124
  %tmp.i = alloca %struct.task_struct*, align 8
  %tmp1.i = alloca %struct.task_struct*, align 8
  %hid.addr = alloca %struct.hid_device*, align 8
  %report.addr = alloca i8*, align 8
  %offset.addr = alloca i32, align 4
  %n.addr = alloca i32, align 4
  store %struct.hid_device* %hid, %struct.hid_device** %hid.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.hid_device** %hid.addr, metadata !6125, metadata !DIExpression()), !dbg !6126
  store i8* %report, i8** %report.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %report.addr, metadata !6127, metadata !DIExpression()), !dbg !6128
  store i32 %offset, i32* %offset.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %offset.addr, metadata !6129, metadata !DIExpression()), !dbg !6130
  store i32 %n, i32* %n.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !6131, metadata !DIExpression()), !dbg !6132
  %0 = load i32, i32* %n.addr, align 4, !dbg !6133
  %cmp = icmp ugt i32 %0, 32, !dbg !6134
  br i1 %cmp, label %if.then, label %if.end2, !dbg !6135

if.then:                                          ; preds = %entry
  br label %do.body, !dbg !6136

do.body:                                          ; preds = %if.then
  %1 = load i8, i8* @hid_field_extract.__print_once, align 1, !dbg !6137
  %tobool = trunc i8 %1 to i1, !dbg !6137
  br i1 %tobool, label %if.end, label %if.then1, !dbg !6138

if.then1:                                         ; preds = %do.body
  store i8 1, i8* @hid_field_extract.__print_once, align 1, !dbg !6139
  %2 = load %struct.hid_device*, %struct.hid_device** %hid.addr, align 8, !dbg !6139
  %dev = getelementptr inbounds %struct.hid_device, %struct.hid_device* %2, i32 0, i32 18, !dbg !6139
  %3 = load i32, i32* %n.addr, align 4, !dbg !6139
  store i8* null, i8** %__vpp_verify.i, align 8, !dbg !6121
  %4 = load i8*, i8** %__vpp_verify.i, align 8, !dbg !6121
  %5 = call i64 asm "movq ${1:P}, $0", "=r,im,~{dirflag},~{fpsr},~{flags}"(%struct.task_struct** @current_task) #14, !dbg !6124, !srcloc !6140
  store i64 %5, i64* %pfo_val__.i, align 8, !dbg !6124
  %6 = load i64, i64* %pfo_val__.i, align 8, !dbg !6124
  %7 = inttoptr i64 %6 to %struct.task_struct*, !dbg !6124
  store %struct.task_struct* %7, %struct.task_struct** %tmp.i, align 8, !dbg !6124
  %8 = load %struct.task_struct*, %struct.task_struct** %tmp.i, align 8, !dbg !6124
  store %struct.task_struct* %8, %struct.task_struct** %pscr_ret__.i, align 8, !dbg !6112
  %9 = load %struct.task_struct*, %struct.task_struct** %pscr_ret__.i, align 8, !dbg !6112
  store %struct.task_struct* %9, %struct.task_struct** %tmp1.i, align 8, !dbg !6112
  %10 = load %struct.task_struct*, %struct.task_struct** %tmp1.i, align 8, !dbg !6112
  %comm = getelementptr inbounds %struct.task_struct, %struct.task_struct* %10, i32 0, i32 68, !dbg !6139
  %arraydecay = getelementptr inbounds [16 x i8], [16 x i8]* %comm, i64 0, i64 0, !dbg !6139
  call void (%struct.device*, i8*, ...) @_dev_warn(%struct.device* %dev, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.11, i64 0, i64 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @__func__.hid_field_extract, i64 0, i64 0), i32 %3, i8* %arraydecay) #13, !dbg !6139
  br label %if.end, !dbg !6139

if.end:                                           ; preds = %if.then1, %do.body
  br label %do.end, !dbg !6138

do.end:                                           ; preds = %if.end
  store i32 32, i32* %n.addr, align 4, !dbg !6141
  br label %if.end2, !dbg !6142

if.end2:                                          ; preds = %do.end, %entry
  %11 = load i8*, i8** %report.addr, align 8, !dbg !6143
  %12 = load i32, i32* %offset.addr, align 4, !dbg !6144
  %13 = load i32, i32* %n.addr, align 4, !dbg !6145
  %call3 = call i32 @__extract(i8* %11, i32 %12, i32 %13) #9, !dbg !6146
  ret i32 %call3, !dbg !6147
}

; Function Attrs: cold noredzone
declare dso_local void @_dev_warn(%struct.device*, i8*, ...) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @__extract(i8* %report, i32 %offset, i32 %n) #0 !dbg !6148 {
entry:
  %report.addr = alloca i8*, align 8
  %offset.addr = alloca i32, align 4
  %n.addr = alloca i32, align 4
  %idx = alloca i32, align 4
  %bit_nr = alloca i32, align 4
  %bit_shift = alloca i32, align 4
  %bits_to_copy = alloca i32, align 4
  %value = alloca i32, align 4
  %mask = alloca i32, align 4
  store i8* %report, i8** %report.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %report.addr, metadata !6151, metadata !DIExpression()), !dbg !6152
  store i32 %offset, i32* %offset.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %offset.addr, metadata !6153, metadata !DIExpression()), !dbg !6154
  store i32 %n, i32* %n.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !6155, metadata !DIExpression()), !dbg !6156
  call void @llvm.dbg.declare(metadata i32* %idx, metadata !6157, metadata !DIExpression()), !dbg !6158
  %0 = load i32, i32* %offset.addr, align 4, !dbg !6159
  %div = udiv i32 %0, 8, !dbg !6160
  store i32 %div, i32* %idx, align 4, !dbg !6158
  call void @llvm.dbg.declare(metadata i32* %bit_nr, metadata !6161, metadata !DIExpression()), !dbg !6162
  store i32 0, i32* %bit_nr, align 4, !dbg !6162
  call void @llvm.dbg.declare(metadata i32* %bit_shift, metadata !6163, metadata !DIExpression()), !dbg !6164
  %1 = load i32, i32* %offset.addr, align 4, !dbg !6165
  %rem = urem i32 %1, 8, !dbg !6166
  store i32 %rem, i32* %bit_shift, align 4, !dbg !6164
  call void @llvm.dbg.declare(metadata i32* %bits_to_copy, metadata !6167, metadata !DIExpression()), !dbg !6168
  %2 = load i32, i32* %bit_shift, align 4, !dbg !6169
  %sub = sub i32 8, %2, !dbg !6170
  store i32 %sub, i32* %bits_to_copy, align 4, !dbg !6168
  call void @llvm.dbg.declare(metadata i32* %value, metadata !6171, metadata !DIExpression()), !dbg !6172
  store i32 0, i32* %value, align 4, !dbg !6172
  call void @llvm.dbg.declare(metadata i32* %mask, metadata !6173, metadata !DIExpression()), !dbg !6174
  %3 = load i32, i32* %n.addr, align 4, !dbg !6175
  %cmp = icmp slt i32 %3, 32, !dbg !6176
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !6175

cond.true:                                        ; preds = %entry
  %4 = load i32, i32* %n.addr, align 4, !dbg !6177
  %shl = shl i32 1, %4, !dbg !6178
  %sub1 = sub i32 %shl, 1, !dbg !6179
  br label %cond.end, !dbg !6175

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !6175

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %sub1, %cond.true ], [ -1, %cond.false ], !dbg !6175
  store i32 %cond, i32* %mask, align 4, !dbg !6174
  br label %while.cond, !dbg !6180

while.cond:                                       ; preds = %while.body, %cond.end
  %5 = load i32, i32* %n.addr, align 4, !dbg !6181
  %cmp2 = icmp sgt i32 %5, 0, !dbg !6182
  br i1 %cmp2, label %while.body, label %while.end, !dbg !6180

while.body:                                       ; preds = %while.cond
  %6 = load i8*, i8** %report.addr, align 8, !dbg !6183
  %7 = load i32, i32* %idx, align 4, !dbg !6185
  %idxprom = zext i32 %7 to i64, !dbg !6183
  %arrayidx = getelementptr i8, i8* %6, i64 %idxprom, !dbg !6183
  %8 = load i8, i8* %arrayidx, align 1, !dbg !6183
  %conv = zext i8 %8 to i32, !dbg !6186
  %9 = load i32, i32* %bit_shift, align 4, !dbg !6187
  %shr = lshr i32 %conv, %9, !dbg !6188
  %10 = load i32, i32* %bit_nr, align 4, !dbg !6189
  %shl3 = shl i32 %shr, %10, !dbg !6190
  %11 = load i32, i32* %value, align 4, !dbg !6191
  %or = or i32 %11, %shl3, !dbg !6191
  store i32 %or, i32* %value, align 4, !dbg !6191
  %12 = load i32, i32* %bits_to_copy, align 4, !dbg !6192
  %13 = load i32, i32* %n.addr, align 4, !dbg !6193
  %sub4 = sub i32 %13, %12, !dbg !6193
  store i32 %sub4, i32* %n.addr, align 4, !dbg !6193
  %14 = load i32, i32* %bits_to_copy, align 4, !dbg !6194
  %15 = load i32, i32* %bit_nr, align 4, !dbg !6195
  %add = add i32 %15, %14, !dbg !6195
  store i32 %add, i32* %bit_nr, align 4, !dbg !6195
  store i32 8, i32* %bits_to_copy, align 4, !dbg !6196
  store i32 0, i32* %bit_shift, align 4, !dbg !6197
  %16 = load i32, i32* %idx, align 4, !dbg !6198
  %inc = add i32 %16, 1, !dbg !6198
  store i32 %inc, i32* %idx, align 4, !dbg !6198
  br label %while.cond, !dbg !6180, !llvm.loop !6199

while.end:                                        ; preds = %while.cond
  %17 = load i32, i32* %value, align 4, !dbg !6201
  %18 = load i32, i32* %mask, align 4, !dbg !6202
  %and = and i32 %17, %18, !dbg !6203
  ret i32 %and, !dbg !6204
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @hid_output_report(%struct.hid_report* %report, i8* %data) #0 !dbg !6205 {
entry:
  %report.addr = alloca %struct.hid_report*, align 8
  %data.addr = alloca i8*, align 8
  %n = alloca i32, align 4
  store %struct.hid_report* %report, %struct.hid_report** %report.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.hid_report** %report.addr, metadata !6208, metadata !DIExpression()), !dbg !6209
  store i8* %data, i8** %data.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %data.addr, metadata !6210, metadata !DIExpression()), !dbg !6211
  call void @llvm.dbg.declare(metadata i32* %n, metadata !6212, metadata !DIExpression()), !dbg !6213
  %0 = load %struct.hid_report*, %struct.hid_report** %report.addr, align 8, !dbg !6214
  %id = getelementptr inbounds %struct.hid_report, %struct.hid_report* %0, i32 0, i32 2, !dbg !6216
  %1 = load i32, i32* %id, align 8, !dbg !6216
  %cmp = icmp ugt i32 %1, 0, !dbg !6217
  br i1 %cmp, label %if.then, label %if.end, !dbg !6218

if.then:                                          ; preds = %entry
  %2 = load %struct.hid_report*, %struct.hid_report** %report.addr, align 8, !dbg !6219
  %id1 = getelementptr inbounds %struct.hid_report, %struct.hid_report* %2, i32 0, i32 2, !dbg !6220
  %3 = load i32, i32* %id1, align 8, !dbg !6220
  %conv = trunc i32 %3 to i8, !dbg !6219
  %4 = load i8*, i8** %data.addr, align 8, !dbg !6221
  %incdec.ptr = getelementptr i8, i8* %4, i32 1, !dbg !6221
  store i8* %incdec.ptr, i8** %data.addr, align 8, !dbg !6221
  store i8 %conv, i8* %4, align 1, !dbg !6222
  br label %if.end, !dbg !6223

if.end:                                           ; preds = %if.then, %entry
  %5 = load i8*, i8** %data.addr, align 8, !dbg !6224
  %6 = load %struct.hid_report*, %struct.hid_report** %report.addr, align 8, !dbg !6225
  %call = call i64 @hid_compute_report_size(%struct.hid_report* %6) #9, !dbg !6226
  call void @llvm.memset.p0i8.i64(i8* align 1 %5, i8 0, i64 %call, i1 false), !dbg !6227
  store i32 0, i32* %n, align 4, !dbg !6228
  br label %for.cond, !dbg !6230

for.cond:                                         ; preds = %for.inc, %if.end
  %7 = load i32, i32* %n, align 4, !dbg !6231
  %8 = load %struct.hid_report*, %struct.hid_report** %report.addr, align 8, !dbg !6233
  %maxfield = getelementptr inbounds %struct.hid_report, %struct.hid_report* %8, i32 0, i32 6, !dbg !6234
  %9 = load i32, i32* %maxfield, align 8, !dbg !6234
  %cmp2 = icmp ult i32 %7, %9, !dbg !6235
  br i1 %cmp2, label %for.body, label %for.end, !dbg !6236

for.body:                                         ; preds = %for.cond
  %10 = load %struct.hid_report*, %struct.hid_report** %report.addr, align 8, !dbg !6237
  %device = getelementptr inbounds %struct.hid_report, %struct.hid_report* %10, i32 0, i32 8, !dbg !6238
  %11 = load %struct.hid_device*, %struct.hid_device** %device, align 8, !dbg !6238
  %12 = load %struct.hid_report*, %struct.hid_report** %report.addr, align 8, !dbg !6239
  %field = getelementptr inbounds %struct.hid_report, %struct.hid_report* %12, i32 0, i32 5, !dbg !6240
  %13 = load i32, i32* %n, align 4, !dbg !6241
  %idxprom = zext i32 %13 to i64, !dbg !6239
  %arrayidx = getelementptr [256 x %struct.hid_field*], [256 x %struct.hid_field*]* %field, i64 0, i64 %idxprom, !dbg !6239
  %14 = load %struct.hid_field*, %struct.hid_field** %arrayidx, align 8, !dbg !6239
  %15 = load i8*, i8** %data.addr, align 8, !dbg !6242
  call void @hid_output_field(%struct.hid_device* %11, %struct.hid_field* %14, i8* %15) #9, !dbg !6243
  br label %for.inc, !dbg !6243

for.inc:                                          ; preds = %for.body
  %16 = load i32, i32* %n, align 4, !dbg !6244
  %inc = add i32 %16, 1, !dbg !6244
  store i32 %inc, i32* %n, align 4, !dbg !6244
  br label %for.cond, !dbg !6245, !llvm.loop !6246

for.end:                                          ; preds = %for.cond
  ret void, !dbg !6248
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @hid_compute_report_size(%struct.hid_report* %report) #0 !dbg !6249 {
entry:
  %retval = alloca i64, align 8
  %report.addr = alloca %struct.hid_report*, align 8
  store %struct.hid_report* %report, %struct.hid_report** %report.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.hid_report** %report.addr, metadata !6252, metadata !DIExpression()), !dbg !6253
  %0 = load %struct.hid_report*, %struct.hid_report** %report.addr, align 8, !dbg !6254
  %size = getelementptr inbounds %struct.hid_report, %struct.hid_report* %0, i32 0, i32 7, !dbg !6256
  %1 = load i32, i32* %size, align 4, !dbg !6256
  %tobool = icmp ne i32 %1, 0, !dbg !6254
  br i1 %tobool, label %if.then, label %if.end, !dbg !6257

if.then:                                          ; preds = %entry
  %2 = load %struct.hid_report*, %struct.hid_report** %report.addr, align 8, !dbg !6258
  %size1 = getelementptr inbounds %struct.hid_report, %struct.hid_report* %2, i32 0, i32 7, !dbg !6259
  %3 = load i32, i32* %size1, align 4, !dbg !6259
  %sub = sub i32 %3, 1, !dbg !6260
  %shr = lshr i32 %sub, 3, !dbg !6261
  %add = add i32 %shr, 1, !dbg !6262
  %conv = zext i32 %add to i64, !dbg !6263
  store i64 %conv, i64* %retval, align 8, !dbg !6264
  br label %return, !dbg !6264

if.end:                                           ; preds = %entry
  store i64 0, i64* %retval, align 8, !dbg !6265
  br label %return, !dbg !6265

return:                                           ; preds = %if.end, %if.then
  %4 = load i64, i64* %retval, align 8, !dbg !6266
  ret i64 %4, !dbg !6266
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #4

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @hid_output_field(%struct.hid_device* %hid, %struct.hid_field* %field, i8* %data) #0 !dbg !6267 {
entry:
  %hid.addr = alloca %struct.hid_device*, align 8
  %field.addr = alloca %struct.hid_field*, align 8
  %data.addr = alloca i8*, align 8
  %count = alloca i32, align 4
  %offset = alloca i32, align 4
  %size = alloca i32, align 4
  %n = alloca i32, align 4
  store %struct.hid_device* %hid, %struct.hid_device** %hid.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.hid_device** %hid.addr, metadata !6270, metadata !DIExpression()), !dbg !6271
  store %struct.hid_field* %field, %struct.hid_field** %field.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.hid_field** %field.addr, metadata !6272, metadata !DIExpression()), !dbg !6273
  store i8* %data, i8** %data.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %data.addr, metadata !6274, metadata !DIExpression()), !dbg !6275
  call void @llvm.dbg.declare(metadata i32* %count, metadata !6276, metadata !DIExpression()), !dbg !6277
  %0 = load %struct.hid_field*, %struct.hid_field** %field.addr, align 8, !dbg !6278
  %report_count = getelementptr inbounds %struct.hid_field, %struct.hid_field* %0, i32 0, i32 8, !dbg !6279
  %1 = load i32, i32* %report_count, align 8, !dbg !6279
  store i32 %1, i32* %count, align 4, !dbg !6277
  call void @llvm.dbg.declare(metadata i32* %offset, metadata !6280, metadata !DIExpression()), !dbg !6281
  %2 = load %struct.hid_field*, %struct.hid_field** %field.addr, align 8, !dbg !6282
  %report_offset = getelementptr inbounds %struct.hid_field, %struct.hid_field* %2, i32 0, i32 6, !dbg !6283
  %3 = load i32, i32* %report_offset, align 8, !dbg !6283
  store i32 %3, i32* %offset, align 4, !dbg !6281
  call void @llvm.dbg.declare(metadata i32* %size, metadata !6284, metadata !DIExpression()), !dbg !6285
  %4 = load %struct.hid_field*, %struct.hid_field** %field.addr, align 8, !dbg !6286
  %report_size = getelementptr inbounds %struct.hid_field, %struct.hid_field* %4, i32 0, i32 7, !dbg !6287
  %5 = load i32, i32* %report_size, align 4, !dbg !6287
  store i32 %5, i32* %size, align 4, !dbg !6285
  call void @llvm.dbg.declare(metadata i32* %n, metadata !6288, metadata !DIExpression()), !dbg !6289
  store i32 0, i32* %n, align 4, !dbg !6290
  br label %for.cond, !dbg !6292

for.cond:                                         ; preds = %for.inc, %entry
  %6 = load i32, i32* %n, align 4, !dbg !6293
  %7 = load i32, i32* %count, align 4, !dbg !6295
  %cmp = icmp ult i32 %6, %7, !dbg !6296
  br i1 %cmp, label %for.body, label %for.end, !dbg !6297

for.body:                                         ; preds = %for.cond
  %8 = load %struct.hid_field*, %struct.hid_field** %field.addr, align 8, !dbg !6298
  %logical_minimum = getelementptr inbounds %struct.hid_field, %struct.hid_field* %8, i32 0, i32 11, !dbg !6301
  %9 = load i32, i32* %logical_minimum, align 8, !dbg !6301
  %cmp1 = icmp slt i32 %9, 0, !dbg !6302
  br i1 %cmp1, label %if.then, label %if.else, !dbg !6303

if.then:                                          ; preds = %for.body
  %10 = load %struct.hid_device*, %struct.hid_device** %hid.addr, align 8, !dbg !6304
  %11 = load i8*, i8** %data.addr, align 8, !dbg !6305
  %12 = load i32, i32* %offset, align 4, !dbg !6306
  %13 = load i32, i32* %n, align 4, !dbg !6307
  %14 = load i32, i32* %size, align 4, !dbg !6308
  %mul = mul i32 %13, %14, !dbg !6309
  %add = add i32 %12, %mul, !dbg !6310
  %15 = load i32, i32* %size, align 4, !dbg !6311
  %16 = load %struct.hid_field*, %struct.hid_field** %field.addr, align 8, !dbg !6312
  %value = getelementptr inbounds %struct.hid_field, %struct.hid_field* %16, i32 0, i32 10, !dbg !6313
  %17 = load i32*, i32** %value, align 8, !dbg !6313
  %18 = load i32, i32* %n, align 4, !dbg !6314
  %idxprom = zext i32 %18 to i64, !dbg !6312
  %arrayidx = getelementptr i32, i32* %17, i64 %idxprom, !dbg !6312
  %19 = load i32, i32* %arrayidx, align 4, !dbg !6312
  %20 = load i32, i32* %size, align 4, !dbg !6315
  %call = call i32 @s32ton(i32 %19, i32 %20) #9, !dbg !6316
  call void @implement(%struct.hid_device* %10, i8* %11, i32 %add, i32 %15, i32 %call) #9, !dbg !6317
  br label %if.end, !dbg !6317

if.else:                                          ; preds = %for.body
  %21 = load %struct.hid_device*, %struct.hid_device** %hid.addr, align 8, !dbg !6318
  %22 = load i8*, i8** %data.addr, align 8, !dbg !6319
  %23 = load i32, i32* %offset, align 4, !dbg !6320
  %24 = load i32, i32* %n, align 4, !dbg !6321
  %25 = load i32, i32* %size, align 4, !dbg !6322
  %mul2 = mul i32 %24, %25, !dbg !6323
  %add3 = add i32 %23, %mul2, !dbg !6324
  %26 = load i32, i32* %size, align 4, !dbg !6325
  %27 = load %struct.hid_field*, %struct.hid_field** %field.addr, align 8, !dbg !6326
  %value4 = getelementptr inbounds %struct.hid_field, %struct.hid_field* %27, i32 0, i32 10, !dbg !6327
  %28 = load i32*, i32** %value4, align 8, !dbg !6327
  %29 = load i32, i32* %n, align 4, !dbg !6328
  %idxprom5 = zext i32 %29 to i64, !dbg !6326
  %arrayidx6 = getelementptr i32, i32* %28, i64 %idxprom5, !dbg !6326
  %30 = load i32, i32* %arrayidx6, align 4, !dbg !6326
  call void @implement(%struct.hid_device* %21, i8* %22, i32 %add3, i32 %26, i32 %30) #9, !dbg !6329
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  br label %for.inc, !dbg !6330

for.inc:                                          ; preds = %if.end
  %31 = load i32, i32* %n, align 4, !dbg !6331
  %inc = add i32 %31, 1, !dbg !6331
  store i32 %inc, i32* %n, align 4, !dbg !6331
  br label %for.cond, !dbg !6332, !llvm.loop !6333

for.end:                                          ; preds = %for.cond
  ret void, !dbg !6335
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i8* @hid_alloc_report_buf(%struct.hid_report* %report, i32 %flags) #0 !dbg !6336 {
entry:
  %s.addr.i.i = alloca %struct.kmem_cache*, align 8
  call void @llvm.dbg.declare(metadata %struct.kmem_cache** %s.addr.i.i, metadata !4565, metadata !DIExpression()), !dbg !6339
  %flags.addr.i17.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i17.i, metadata !4575, metadata !DIExpression()), !dbg !6342
  %size.addr.i18.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i18.i, metadata !4577, metadata !DIExpression()), !dbg !6343
  %ret.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %ret.i.i, metadata !4579, metadata !DIExpression()), !dbg !6344
  %retval.i12.i = alloca i32, align 4
  %flags.addr.i13.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i13.i, metadata !4581, metadata !DIExpression()), !dbg !6345
  %retval.i.i = alloca i32, align 4
  %size.addr.i11.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i11.i, metadata !4587, metadata !DIExpression()), !dbg !6347
  %size.addr.i.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i.i, metadata !4593, metadata !DIExpression()), !dbg !6349
  %flags.addr.i.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i.i.i, metadata !4602, metadata !DIExpression()), !dbg !6352
  %order.addr.i.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %order.addr.i.i.i, metadata !4604, metadata !DIExpression()), !dbg !6353
  %size.addr.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i, metadata !4606, metadata !DIExpression()), !dbg !6354
  %flags.addr.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i.i, metadata !4608, metadata !DIExpression()), !dbg !6355
  %order.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %order.i.i, metadata !4610, metadata !DIExpression()), !dbg !6356
  %retval.i = alloca i8*, align 8
  %size.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i, metadata !4612, metadata !DIExpression()), !dbg !6357
  %flags.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i, metadata !4614, metadata !DIExpression()), !dbg !6358
  %index.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %index.i, metadata !4616, metadata !DIExpression()), !dbg !6359
  %report.addr = alloca %struct.hid_report*, align 8
  %flags.addr = alloca i32, align 4
  %len = alloca i32, align 4
  store %struct.hid_report* %report, %struct.hid_report** %report.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.hid_report** %report.addr, metadata !6360, metadata !DIExpression()), !dbg !6361
  store i32 %flags, i32* %flags.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr, metadata !6362, metadata !DIExpression()), !dbg !6363
  call void @llvm.dbg.declare(metadata i32* %len, metadata !6364, metadata !DIExpression()), !dbg !6365
  %0 = load %struct.hid_report*, %struct.hid_report** %report.addr, align 8, !dbg !6366
  %call = call i32 @hid_report_len(%struct.hid_report* %0) #9, !dbg !6367
  %add = add i32 %call, 7, !dbg !6368
  store i32 %add, i32* %len, align 4, !dbg !6365
  %1 = load i32, i32* %len, align 4, !dbg !6369
  %conv = zext i32 %1 to i64, !dbg !6369
  %2 = load i32, i32* %flags.addr, align 4, !dbg !6370
  store i64 %conv, i64* %size.addr.i, align 8
  store i32 %2, i32* %flags.addr.i, align 4
  %3 = load i64, i64* %size.addr.i, align 8, !dbg !6371
  %4 = call i1 @llvm.is.constant.i64(i64 %3) #10, !dbg !6372
  br i1 %4, label %if.then.i, label %if.end9.i, !dbg !6373

if.then.i:                                        ; preds = %entry
  %5 = load i64, i64* %size.addr.i, align 8, !dbg !6374
  %cmp.i = icmp ugt i64 %5, 8192, !dbg !6375
  br i1 %cmp.i, label %if.then1.i, label %if.end.i, !dbg !6376

if.then1.i:                                       ; preds = %if.then.i
  %6 = load i64, i64* %size.addr.i, align 8, !dbg !6377
  %7 = load i32, i32* %flags.addr.i, align 4, !dbg !6378
  store i64 %6, i64* %size.addr.i.i, align 8
  store i32 %7, i32* %flags.addr.i.i, align 4
  %8 = load i64, i64* %size.addr.i.i, align 8, !dbg !6379
  %call.i.i = call i32 @get_order(i64 %8) #11, !dbg !6380
  store i32 %call.i.i, i32* %order.i.i, align 4, !dbg !6356
  %9 = load i64, i64* %size.addr.i.i, align 8, !dbg !6381
  %10 = load i32, i32* %flags.addr.i.i, align 4, !dbg !6382
  %11 = load i32, i32* %order.i.i, align 4, !dbg !6383
  store i64 %9, i64* %size.addr.i.i.i, align 8
  store i32 %10, i32* %flags.addr.i.i.i, align 4
  store i32 %11, i32* %order.addr.i.i.i, align 4
  %12 = load i64, i64* %size.addr.i.i.i, align 8, !dbg !6384
  %13 = load i32, i32* %flags.addr.i.i.i, align 4, !dbg !6385
  %14 = load i32, i32* %order.addr.i.i.i, align 4, !dbg !6386
  %call.i.i.i = call noalias i8* @kmalloc_order(i64 %12, i32 %13, i32 %14) #12, !dbg !6387
  %ptrint.i.i.i = ptrtoint i8* %call.i.i.i to i64, !dbg !6387
  %maskedptr.i.i.i = and i64 %ptrint.i.i.i, 4095, !dbg !6387
  %maskcond.i.i.i = icmp eq i64 %maskedptr.i.i.i, 0, !dbg !6387
  call void @llvm.assume(i1 %maskcond.i.i.i) #10, !dbg !6387
  store i8* %call.i.i.i, i8** %retval.i, align 8, !dbg !6388
  br label %kmalloc.exit, !dbg !6388

if.end.i:                                         ; preds = %if.then.i
  %15 = load i64, i64* %size.addr.i, align 8, !dbg !6389
  store i64 %15, i64* %size.addr.i11.i, align 8
  %16 = load i64, i64* %size.addr.i11.i, align 8, !dbg !6390
  %tobool.i.i = icmp ne i64 %16, 0, !dbg !6390
  br i1 %tobool.i.i, label %if.end.i.i, label %if.then.i.i, !dbg !6391

if.then.i.i:                                      ; preds = %if.end.i
  store i32 0, i32* %retval.i.i, align 4, !dbg !6392
  br label %kmalloc_index.exit.i, !dbg !6392

if.end.i.i:                                       ; preds = %if.end.i
  %17 = load i64, i64* %size.addr.i11.i, align 8, !dbg !6393
  %cmp.i.i = icmp ule i64 %17, 8, !dbg !6394
  br i1 %cmp.i.i, label %if.then1.i.i, label %if.end2.i.i, !dbg !6395

if.then1.i.i:                                     ; preds = %if.end.i.i
  store i32 3, i32* %retval.i.i, align 4, !dbg !6396
  br label %kmalloc_index.exit.i, !dbg !6396

if.end2.i.i:                                      ; preds = %if.end.i.i
  %18 = load i64, i64* %size.addr.i11.i, align 8, !dbg !6397
  %cmp3.i.i = icmp ugt i64 %18, 64, !dbg !6398
  br i1 %cmp3.i.i, label %land.lhs.true.i.i, label %if.end6.i.i, !dbg !6399

land.lhs.true.i.i:                                ; preds = %if.end2.i.i
  %19 = load i64, i64* %size.addr.i11.i, align 8, !dbg !6400
  %cmp4.i.i = icmp ule i64 %19, 96, !dbg !6401
  br i1 %cmp4.i.i, label %if.then5.i.i, label %if.end6.i.i, !dbg !6402

if.then5.i.i:                                     ; preds = %land.lhs.true.i.i
  store i32 1, i32* %retval.i.i, align 4, !dbg !6403
  br label %kmalloc_index.exit.i, !dbg !6403

if.end6.i.i:                                      ; preds = %land.lhs.true.i.i, %if.end2.i.i
  %20 = load i64, i64* %size.addr.i11.i, align 8, !dbg !6404
  %cmp7.i.i = icmp ugt i64 %20, 128, !dbg !6405
  br i1 %cmp7.i.i, label %land.lhs.true8.i.i, label %if.end11.i.i, !dbg !6406

land.lhs.true8.i.i:                               ; preds = %if.end6.i.i
  %21 = load i64, i64* %size.addr.i11.i, align 8, !dbg !6407
  %cmp9.i.i = icmp ule i64 %21, 192, !dbg !6408
  br i1 %cmp9.i.i, label %if.then10.i.i, label %if.end11.i.i, !dbg !6409

if.then10.i.i:                                    ; preds = %land.lhs.true8.i.i
  store i32 2, i32* %retval.i.i, align 4, !dbg !6410
  br label %kmalloc_index.exit.i, !dbg !6410

if.end11.i.i:                                     ; preds = %land.lhs.true8.i.i, %if.end6.i.i
  %22 = load i64, i64* %size.addr.i11.i, align 8, !dbg !6411
  %cmp12.i.i = icmp ule i64 %22, 8, !dbg !6412
  br i1 %cmp12.i.i, label %if.then13.i.i, label %if.end14.i.i, !dbg !6413

if.then13.i.i:                                    ; preds = %if.end11.i.i
  store i32 3, i32* %retval.i.i, align 4, !dbg !6414
  br label %kmalloc_index.exit.i, !dbg !6414

if.end14.i.i:                                     ; preds = %if.end11.i.i
  %23 = load i64, i64* %size.addr.i11.i, align 8, !dbg !6415
  %cmp15.i.i = icmp ule i64 %23, 16, !dbg !6416
  br i1 %cmp15.i.i, label %if.then16.i.i, label %if.end17.i.i, !dbg !6417

if.then16.i.i:                                    ; preds = %if.end14.i.i
  store i32 4, i32* %retval.i.i, align 4, !dbg !6418
  br label %kmalloc_index.exit.i, !dbg !6418

if.end17.i.i:                                     ; preds = %if.end14.i.i
  %24 = load i64, i64* %size.addr.i11.i, align 8, !dbg !6419
  %cmp18.i.i = icmp ule i64 %24, 32, !dbg !6420
  br i1 %cmp18.i.i, label %if.then19.i.i, label %if.end20.i.i, !dbg !6421

if.then19.i.i:                                    ; preds = %if.end17.i.i
  store i32 5, i32* %retval.i.i, align 4, !dbg !6422
  br label %kmalloc_index.exit.i, !dbg !6422

if.end20.i.i:                                     ; preds = %if.end17.i.i
  %25 = load i64, i64* %size.addr.i11.i, align 8, !dbg !6423
  %cmp21.i.i = icmp ule i64 %25, 64, !dbg !6424
  br i1 %cmp21.i.i, label %if.then22.i.i, label %if.end23.i.i, !dbg !6425

if.then22.i.i:                                    ; preds = %if.end20.i.i
  store i32 6, i32* %retval.i.i, align 4, !dbg !6426
  br label %kmalloc_index.exit.i, !dbg !6426

if.end23.i.i:                                     ; preds = %if.end20.i.i
  %26 = load i64, i64* %size.addr.i11.i, align 8, !dbg !6427
  %cmp24.i.i = icmp ule i64 %26, 128, !dbg !6428
  br i1 %cmp24.i.i, label %if.then25.i.i, label %if.end26.i.i, !dbg !6429

if.then25.i.i:                                    ; preds = %if.end23.i.i
  store i32 7, i32* %retval.i.i, align 4, !dbg !6430
  br label %kmalloc_index.exit.i, !dbg !6430

if.end26.i.i:                                     ; preds = %if.end23.i.i
  %27 = load i64, i64* %size.addr.i11.i, align 8, !dbg !6431
  %cmp27.i.i = icmp ule i64 %27, 256, !dbg !6432
  br i1 %cmp27.i.i, label %if.then28.i.i, label %if.end29.i.i, !dbg !6433

if.then28.i.i:                                    ; preds = %if.end26.i.i
  store i32 8, i32* %retval.i.i, align 4, !dbg !6434
  br label %kmalloc_index.exit.i, !dbg !6434

if.end29.i.i:                                     ; preds = %if.end26.i.i
  %28 = load i64, i64* %size.addr.i11.i, align 8, !dbg !6435
  %cmp30.i.i = icmp ule i64 %28, 512, !dbg !6436
  br i1 %cmp30.i.i, label %if.then31.i.i, label %if.end32.i.i, !dbg !6437

if.then31.i.i:                                    ; preds = %if.end29.i.i
  store i32 9, i32* %retval.i.i, align 4, !dbg !6438
  br label %kmalloc_index.exit.i, !dbg !6438

if.end32.i.i:                                     ; preds = %if.end29.i.i
  %29 = load i64, i64* %size.addr.i11.i, align 8, !dbg !6439
  %cmp33.i.i = icmp ule i64 %29, 1024, !dbg !6440
  br i1 %cmp33.i.i, label %if.then34.i.i, label %if.end35.i.i, !dbg !6441

if.then34.i.i:                                    ; preds = %if.end32.i.i
  store i32 10, i32* %retval.i.i, align 4, !dbg !6442
  br label %kmalloc_index.exit.i, !dbg !6442

if.end35.i.i:                                     ; preds = %if.end32.i.i
  %30 = load i64, i64* %size.addr.i11.i, align 8, !dbg !6443
  %cmp36.i.i = icmp ule i64 %30, 2048, !dbg !6444
  br i1 %cmp36.i.i, label %if.then37.i.i, label %if.end38.i.i, !dbg !6445

if.then37.i.i:                                    ; preds = %if.end35.i.i
  store i32 11, i32* %retval.i.i, align 4, !dbg !6446
  br label %kmalloc_index.exit.i, !dbg !6446

if.end38.i.i:                                     ; preds = %if.end35.i.i
  %31 = load i64, i64* %size.addr.i11.i, align 8, !dbg !6447
  %cmp39.i.i = icmp ule i64 %31, 4096, !dbg !6448
  br i1 %cmp39.i.i, label %if.then40.i.i, label %if.end41.i.i, !dbg !6449

if.then40.i.i:                                    ; preds = %if.end38.i.i
  store i32 12, i32* %retval.i.i, align 4, !dbg !6450
  br label %kmalloc_index.exit.i, !dbg !6450

if.end41.i.i:                                     ; preds = %if.end38.i.i
  %32 = load i64, i64* %size.addr.i11.i, align 8, !dbg !6451
  %cmp42.i.i = icmp ule i64 %32, 8192, !dbg !6452
  br i1 %cmp42.i.i, label %if.then43.i.i, label %if.end44.i.i, !dbg !6453

if.then43.i.i:                                    ; preds = %if.end41.i.i
  store i32 13, i32* %retval.i.i, align 4, !dbg !6454
  br label %kmalloc_index.exit.i, !dbg !6454

if.end44.i.i:                                     ; preds = %if.end41.i.i
  %33 = load i64, i64* %size.addr.i11.i, align 8, !dbg !6455
  %cmp45.i.i = icmp ule i64 %33, 16384, !dbg !6456
  br i1 %cmp45.i.i, label %if.then46.i.i, label %if.end47.i.i, !dbg !6457

if.then46.i.i:                                    ; preds = %if.end44.i.i
  store i32 14, i32* %retval.i.i, align 4, !dbg !6458
  br label %kmalloc_index.exit.i, !dbg !6458

if.end47.i.i:                                     ; preds = %if.end44.i.i
  %34 = load i64, i64* %size.addr.i11.i, align 8, !dbg !6459
  %cmp48.i.i = icmp ule i64 %34, 32768, !dbg !6460
  br i1 %cmp48.i.i, label %if.then49.i.i, label %if.end50.i.i, !dbg !6461

if.then49.i.i:                                    ; preds = %if.end47.i.i
  store i32 15, i32* %retval.i.i, align 4, !dbg !6462
  br label %kmalloc_index.exit.i, !dbg !6462

if.end50.i.i:                                     ; preds = %if.end47.i.i
  %35 = load i64, i64* %size.addr.i11.i, align 8, !dbg !6463
  %cmp51.i.i = icmp ule i64 %35, 65536, !dbg !6464
  br i1 %cmp51.i.i, label %if.then52.i.i, label %if.end53.i.i, !dbg !6465

if.then52.i.i:                                    ; preds = %if.end50.i.i
  store i32 16, i32* %retval.i.i, align 4, !dbg !6466
  br label %kmalloc_index.exit.i, !dbg !6466

if.end53.i.i:                                     ; preds = %if.end50.i.i
  %36 = load i64, i64* %size.addr.i11.i, align 8, !dbg !6467
  %cmp54.i.i = icmp ule i64 %36, 131072, !dbg !6468
  br i1 %cmp54.i.i, label %if.then55.i.i, label %if.end56.i.i, !dbg !6469

if.then55.i.i:                                    ; preds = %if.end53.i.i
  store i32 17, i32* %retval.i.i, align 4, !dbg !6470
  br label %kmalloc_index.exit.i, !dbg !6470

if.end56.i.i:                                     ; preds = %if.end53.i.i
  %37 = load i64, i64* %size.addr.i11.i, align 8, !dbg !6471
  %cmp57.i.i = icmp ule i64 %37, 262144, !dbg !6472
  br i1 %cmp57.i.i, label %if.then58.i.i, label %if.end59.i.i, !dbg !6473

if.then58.i.i:                                    ; preds = %if.end56.i.i
  store i32 18, i32* %retval.i.i, align 4, !dbg !6474
  br label %kmalloc_index.exit.i, !dbg !6474

if.end59.i.i:                                     ; preds = %if.end56.i.i
  %38 = load i64, i64* %size.addr.i11.i, align 8, !dbg !6475
  %cmp60.i.i = icmp ule i64 %38, 524288, !dbg !6476
  br i1 %cmp60.i.i, label %if.then61.i.i, label %if.end62.i.i, !dbg !6477

if.then61.i.i:                                    ; preds = %if.end59.i.i
  store i32 19, i32* %retval.i.i, align 4, !dbg !6478
  br label %kmalloc_index.exit.i, !dbg !6478

if.end62.i.i:                                     ; preds = %if.end59.i.i
  %39 = load i64, i64* %size.addr.i11.i, align 8, !dbg !6479
  %cmp63.i.i = icmp ule i64 %39, 1048576, !dbg !6480
  br i1 %cmp63.i.i, label %if.then64.i.i, label %if.end65.i.i, !dbg !6481

if.then64.i.i:                                    ; preds = %if.end62.i.i
  store i32 20, i32* %retval.i.i, align 4, !dbg !6482
  br label %kmalloc_index.exit.i, !dbg !6482

if.end65.i.i:                                     ; preds = %if.end62.i.i
  %40 = load i64, i64* %size.addr.i11.i, align 8, !dbg !6483
  %cmp66.i.i = icmp ule i64 %40, 2097152, !dbg !6484
  br i1 %cmp66.i.i, label %if.then67.i.i, label %if.end68.i.i, !dbg !6485

if.then67.i.i:                                    ; preds = %if.end65.i.i
  store i32 21, i32* %retval.i.i, align 4, !dbg !6486
  br label %kmalloc_index.exit.i, !dbg !6486

if.end68.i.i:                                     ; preds = %if.end65.i.i
  %41 = load i64, i64* %size.addr.i11.i, align 8, !dbg !6487
  %cmp69.i.i = icmp ule i64 %41, 4194304, !dbg !6488
  br i1 %cmp69.i.i, label %if.then70.i.i, label %if.end71.i.i, !dbg !6489

if.then70.i.i:                                    ; preds = %if.end68.i.i
  store i32 22, i32* %retval.i.i, align 4, !dbg !6490
  br label %kmalloc_index.exit.i, !dbg !6490

if.end71.i.i:                                     ; preds = %if.end68.i.i
  %42 = load i64, i64* %size.addr.i11.i, align 8, !dbg !6491
  %cmp72.i.i = icmp ule i64 %42, 8388608, !dbg !6492
  br i1 %cmp72.i.i, label %if.then73.i.i, label %if.end74.i.i, !dbg !6493

if.then73.i.i:                                    ; preds = %if.end71.i.i
  store i32 23, i32* %retval.i.i, align 4, !dbg !6494
  br label %kmalloc_index.exit.i, !dbg !6494

if.end74.i.i:                                     ; preds = %if.end71.i.i
  %43 = load i64, i64* %size.addr.i11.i, align 8, !dbg !6495
  %cmp75.i.i = icmp ule i64 %43, 16777216, !dbg !6496
  br i1 %cmp75.i.i, label %if.then76.i.i, label %if.end77.i.i, !dbg !6497

if.then76.i.i:                                    ; preds = %if.end74.i.i
  store i32 24, i32* %retval.i.i, align 4, !dbg !6498
  br label %kmalloc_index.exit.i, !dbg !6498

if.end77.i.i:                                     ; preds = %if.end74.i.i
  %44 = load i64, i64* %size.addr.i11.i, align 8, !dbg !6499
  %cmp78.i.i = icmp ule i64 %44, 33554432, !dbg !6500
  br i1 %cmp78.i.i, label %if.then79.i.i, label %if.end80.i.i, !dbg !6501

if.then79.i.i:                                    ; preds = %if.end77.i.i
  store i32 25, i32* %retval.i.i, align 4, !dbg !6502
  br label %kmalloc_index.exit.i, !dbg !6502

if.end80.i.i:                                     ; preds = %if.end77.i.i
  %45 = load i64, i64* %size.addr.i11.i, align 8, !dbg !6503
  %cmp81.i.i = icmp ule i64 %45, 67108864, !dbg !6504
  br i1 %cmp81.i.i, label %if.then82.i.i, label %if.end83.i.i, !dbg !6505

if.then82.i.i:                                    ; preds = %if.end80.i.i
  store i32 26, i32* %retval.i.i, align 4, !dbg !6506
  br label %kmalloc_index.exit.i, !dbg !6506

if.end83.i.i:                                     ; preds = %if.end80.i.i
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.72, i64 0, i64 0), i32 382, i32 0, i64 12) #10, !dbg !6507, !srcloc !4792
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.unreachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 105) #10, !dbg !6508, !srcloc !4796
  unreachable, !dbg !6509

kmalloc_index.exit.i:                             ; preds = %if.then82.i.i, %if.then79.i.i, %if.then76.i.i, %if.then73.i.i, %if.then70.i.i, %if.then67.i.i, %if.then64.i.i, %if.then61.i.i, %if.then58.i.i, %if.then55.i.i, %if.then52.i.i, %if.then49.i.i, %if.then46.i.i, %if.then43.i.i, %if.then40.i.i, %if.then37.i.i, %if.then34.i.i, %if.then31.i.i, %if.then28.i.i, %if.then25.i.i, %if.then22.i.i, %if.then19.i.i, %if.then16.i.i, %if.then13.i.i, %if.then10.i.i, %if.then5.i.i, %if.then1.i.i, %if.then.i.i
  %46 = load i32, i32* %retval.i.i, align 4, !dbg !6510
  store i32 %46, i32* %index.i, align 4, !dbg !6511
  %47 = load i32, i32* %index.i, align 4, !dbg !6512
  %tobool.i = icmp ne i32 %47, 0, !dbg !6512
  br i1 %tobool.i, label %if.end4.i, label %if.then3.i, !dbg !6513

if.then3.i:                                       ; preds = %kmalloc_index.exit.i
  store i8* inttoptr (i64 16 to i8*), i8** %retval.i, align 8, !dbg !6514
  br label %kmalloc.exit, !dbg !6514

if.end4.i:                                        ; preds = %kmalloc_index.exit.i
  %48 = load i32, i32* %flags.addr.i, align 4, !dbg !6515
  store i32 %48, i32* %flags.addr.i13.i, align 4
  %49 = load i32, i32* %flags.addr.i13.i, align 4, !dbg !6516
  %and.i.i = and i32 %49, 17, !dbg !6516
  %cmp.i14.i = icmp eq i32 %and.i.i, 0, !dbg !6516
  %lnot.i.i = xor i1 %cmp.i14.i, true, !dbg !6516
  %lnot.ext.i.i = zext i1 %cmp.i14.i to i32, !dbg !6516
  %conv.i.i = sext i32 %lnot.ext.i.i to i64, !dbg !6516
  br i1 %cmp.i14.i, label %if.then.i15.i, label %if.end.i16.i, !dbg !6517

if.then.i15.i:                                    ; preds = %if.end4.i
  store i32 0, i32* %retval.i12.i, align 4, !dbg !6518
  br label %kmalloc_type.exit.i, !dbg !6518

if.end.i16.i:                                     ; preds = %if.end4.i
  %50 = load i32, i32* %flags.addr.i13.i, align 4, !dbg !6519
  %and2.i.i = and i32 %50, 1, !dbg !6520
  %tobool3.i.i = icmp ne i32 %and2.i.i, 0, !dbg !6519
  %51 = zext i1 %tobool3.i.i to i64, !dbg !6519
  %cond.i.i = select i1 %tobool3.i.i, i32 2, i32 1, !dbg !6519
  store i32 %cond.i.i, i32* %retval.i12.i, align 4, !dbg !6521
  br label %kmalloc_type.exit.i, !dbg !6521

kmalloc_type.exit.i:                              ; preds = %if.end.i16.i, %if.then.i15.i
  %52 = load i32, i32* %retval.i12.i, align 4, !dbg !6522
  %idxprom.i = zext i32 %52 to i64, !dbg !6523
  %arrayidx.i = getelementptr [3 x [14 x %struct.kmem_cache*]], [3 x [14 x %struct.kmem_cache*]]* @kmalloc_caches, i64 0, i64 %idxprom.i, !dbg !6523
  %53 = load i32, i32* %index.i, align 4, !dbg !6524
  %idxprom6.i = zext i32 %53 to i64, !dbg !6523
  %arrayidx7.i = getelementptr [14 x %struct.kmem_cache*], [14 x %struct.kmem_cache*]* %arrayidx.i, i64 0, i64 %idxprom6.i, !dbg !6523
  %54 = load %struct.kmem_cache*, %struct.kmem_cache** %arrayidx7.i, align 8, !dbg !6523
  %55 = load i32, i32* %flags.addr.i, align 4, !dbg !6525
  %56 = load i64, i64* %size.addr.i, align 8, !dbg !6526
  store %struct.kmem_cache* %54, %struct.kmem_cache** %s.addr.i.i, align 8
  store i32 %55, i32* %flags.addr.i17.i, align 4
  store i64 %56, i64* %size.addr.i18.i, align 8
  %57 = load %struct.kmem_cache*, %struct.kmem_cache** %s.addr.i.i, align 8, !dbg !6527
  %58 = load i32, i32* %flags.addr.i17.i, align 4, !dbg !6528
  %call.i19.i = call noalias i8* @kmem_cache_alloc(%struct.kmem_cache* %57, i32 %58) #12, !dbg !6529
  %ptrint.i.i = ptrtoint i8* %call.i19.i to i64, !dbg !6529
  %maskedptr.i.i = and i64 %ptrint.i.i, 7, !dbg !6529
  %maskcond.i.i = icmp eq i64 %maskedptr.i.i, 0, !dbg !6529
  call void @llvm.assume(i1 %maskcond.i.i) #10, !dbg !6529
  store i8* %call.i19.i, i8** %ret.i.i, align 8, !dbg !6344
  %59 = load %struct.kmem_cache*, %struct.kmem_cache** %s.addr.i.i, align 8, !dbg !6530
  %60 = load i8*, i8** %ret.i.i, align 8, !dbg !6531
  %61 = load i64, i64* %size.addr.i18.i, align 8, !dbg !6532
  %62 = load i32, i32* %flags.addr.i17.i, align 4, !dbg !6533
  %call1.i.i = call i8* @kasan_kmalloc(%struct.kmem_cache* %59, i8* %60, i64 %61, i32 %62) #12, !dbg !6534
  store i8* %call1.i.i, i8** %ret.i.i, align 8, !dbg !6535
  %63 = load i8*, i8** %ret.i.i, align 8, !dbg !6536
  store i8* %63, i8** %retval.i, align 8, !dbg !6537
  br label %kmalloc.exit, !dbg !6537

if.end9.i:                                        ; preds = %entry
  %64 = load i64, i64* %size.addr.i, align 8, !dbg !6538
  %65 = load i32, i32* %flags.addr.i, align 4, !dbg !6539
  %call10.i = call noalias i8* @__kmalloc(i64 %64, i32 %65) #12, !dbg !6540
  %ptrint.i = ptrtoint i8* %call10.i to i64, !dbg !6540
  %maskedptr.i = and i64 %ptrint.i, 7, !dbg !6540
  %maskcond.i = icmp eq i64 %maskedptr.i, 0, !dbg !6540
  call void @llvm.assume(i1 %maskcond.i) #10, !dbg !6540
  store i8* %call10.i, i8** %retval.i, align 8, !dbg !6541
  br label %kmalloc.exit, !dbg !6541

kmalloc.exit:                                     ; preds = %if.then1.i, %if.then3.i, %kmalloc_type.exit.i, %if.end9.i
  %66 = load i8*, i8** %retval.i, align 8, !dbg !6542
  ret i8* %66, !dbg !6543
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @hid_report_len(%struct.hid_report* %report) #0 !dbg !6544 {
entry:
  %report.addr = alloca %struct.hid_report*, align 8
  store %struct.hid_report* %report, %struct.hid_report** %report.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.hid_report** %report.addr, metadata !6547, metadata !DIExpression()), !dbg !6548
  %0 = load %struct.hid_report*, %struct.hid_report** %report.addr, align 8, !dbg !6549
  %size = getelementptr inbounds %struct.hid_report, %struct.hid_report* %0, i32 0, i32 7, !dbg !6550
  %1 = load i32, i32* %size, align 4, !dbg !6550
  %sub = sub i32 %1, 1, !dbg !6551
  %shr = lshr i32 %sub, 3, !dbg !6552
  %add = add i32 %shr, 1, !dbg !6553
  %2 = load %struct.hid_report*, %struct.hid_report** %report.addr, align 8, !dbg !6554
  %id = getelementptr inbounds %struct.hid_report, %struct.hid_report* %2, i32 0, i32 2, !dbg !6555
  %3 = load i32, i32* %id, align 8, !dbg !6555
  %cmp = icmp ugt i32 %3, 0, !dbg !6556
  %conv = zext i1 %cmp to i32, !dbg !6556
  %add1 = add i32 %add, %conv, !dbg !6557
  ret i32 %add1, !dbg !6558
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @hid_set_field(%struct.hid_field* %field, i32 %offset, i32 %value) #0 !dbg !6559 {
entry:
  %retval = alloca i32, align 4
  %field.addr = alloca %struct.hid_field*, align 8
  %offset.addr = alloca i32, align 4
  %value.addr = alloca i32, align 4
  %size = alloca i32, align 4
  store %struct.hid_field* %field, %struct.hid_field** %field.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.hid_field** %field.addr, metadata !6562, metadata !DIExpression()), !dbg !6563
  store i32 %offset, i32* %offset.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %offset.addr, metadata !6564, metadata !DIExpression()), !dbg !6565
  store i32 %value, i32* %value.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %value.addr, metadata !6566, metadata !DIExpression()), !dbg !6567
  call void @llvm.dbg.declare(metadata i32* %size, metadata !6568, metadata !DIExpression()), !dbg !6569
  %0 = load %struct.hid_field*, %struct.hid_field** %field.addr, align 8, !dbg !6570
  %tobool = icmp ne %struct.hid_field* %0, null, !dbg !6570
  br i1 %tobool, label %if.end, label %if.then, !dbg !6572

if.then:                                          ; preds = %entry
  store i32 -1, i32* %retval, align 4, !dbg !6573
  br label %return, !dbg !6573

if.end:                                           ; preds = %entry
  %1 = load %struct.hid_field*, %struct.hid_field** %field.addr, align 8, !dbg !6574
  %report_size = getelementptr inbounds %struct.hid_field, %struct.hid_field* %1, i32 0, i32 7, !dbg !6575
  %2 = load i32, i32* %report_size, align 4, !dbg !6575
  store i32 %2, i32* %size, align 4, !dbg !6576
  br label %do.body, !dbg !6577

do.body:                                          ; preds = %if.end
  br label %do.end, !dbg !6578

do.end:                                           ; preds = %do.body
  %3 = load i32, i32* %offset.addr, align 4, !dbg !6580
  %4 = load %struct.hid_field*, %struct.hid_field** %field.addr, align 8, !dbg !6582
  %report_count = getelementptr inbounds %struct.hid_field, %struct.hid_field* %4, i32 0, i32 8, !dbg !6583
  %5 = load i32, i32* %report_count, align 8, !dbg !6583
  %cmp = icmp uge i32 %3, %5, !dbg !6584
  br i1 %cmp, label %if.then1, label %if.end3, !dbg !6585

if.then1:                                         ; preds = %do.end
  %6 = load %struct.hid_field*, %struct.hid_field** %field.addr, align 8, !dbg !6586
  %report = getelementptr inbounds %struct.hid_field, %struct.hid_field* %6, i32 0, i32 17, !dbg !6586
  %7 = load %struct.hid_report*, %struct.hid_report** %report, align 8, !dbg !6586
  %device = getelementptr inbounds %struct.hid_report, %struct.hid_report* %7, i32 0, i32 8, !dbg !6586
  %8 = load %struct.hid_device*, %struct.hid_device** %device, align 8, !dbg !6586
  %dev = getelementptr inbounds %struct.hid_device, %struct.hid_device* %8, i32 0, i32 18, !dbg !6586
  %9 = load i32, i32* %offset.addr, align 4, !dbg !6586
  %10 = load %struct.hid_field*, %struct.hid_field** %field.addr, align 8, !dbg !6586
  %report_count2 = getelementptr inbounds %struct.hid_field, %struct.hid_field* %10, i32 0, i32 8, !dbg !6586
  %11 = load i32, i32* %report_count2, align 8, !dbg !6586
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %dev, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.12, i64 0, i64 0), i32 %9, i32 %11) #13, !dbg !6586
  store i32 -1, i32* %retval, align 4, !dbg !6588
  br label %return, !dbg !6588

if.end3:                                          ; preds = %do.end
  %12 = load %struct.hid_field*, %struct.hid_field** %field.addr, align 8, !dbg !6589
  %logical_minimum = getelementptr inbounds %struct.hid_field, %struct.hid_field* %12, i32 0, i32 11, !dbg !6591
  %13 = load i32, i32* %logical_minimum, align 8, !dbg !6591
  %cmp4 = icmp slt i32 %13, 0, !dbg !6592
  br i1 %cmp4, label %if.then5, label %if.end13, !dbg !6593

if.then5:                                         ; preds = %if.end3
  %14 = load i32, i32* %value.addr, align 4, !dbg !6594
  %15 = load i32, i32* %value.addr, align 4, !dbg !6597
  %16 = load i32, i32* %size, align 4, !dbg !6598
  %call = call i32 @s32ton(i32 %15, i32 %16) #9, !dbg !6599
  %17 = load i32, i32* %size, align 4, !dbg !6600
  %call6 = call i32 @snto32(i32 %call, i32 %17) #9, !dbg !6601
  %cmp7 = icmp ne i32 %14, %call6, !dbg !6602
  br i1 %cmp7, label %if.then8, label %if.end12, !dbg !6603

if.then8:                                         ; preds = %if.then5
  %18 = load %struct.hid_field*, %struct.hid_field** %field.addr, align 8, !dbg !6604
  %report9 = getelementptr inbounds %struct.hid_field, %struct.hid_field* %18, i32 0, i32 17, !dbg !6604
  %19 = load %struct.hid_report*, %struct.hid_report** %report9, align 8, !dbg !6604
  %device10 = getelementptr inbounds %struct.hid_report, %struct.hid_report* %19, i32 0, i32 8, !dbg !6604
  %20 = load %struct.hid_device*, %struct.hid_device** %device10, align 8, !dbg !6604
  %dev11 = getelementptr inbounds %struct.hid_device, %struct.hid_device* %20, i32 0, i32 18, !dbg !6604
  %21 = load i32, i32* %value.addr, align 4, !dbg !6604
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %dev11, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.13, i64 0, i64 0), i32 %21) #13, !dbg !6604
  store i32 -1, i32* %retval, align 4, !dbg !6606
  br label %return, !dbg !6606

if.end12:                                         ; preds = %if.then5
  br label %if.end13, !dbg !6607

if.end13:                                         ; preds = %if.end12, %if.end3
  %22 = load i32, i32* %value.addr, align 4, !dbg !6608
  %23 = load %struct.hid_field*, %struct.hid_field** %field.addr, align 8, !dbg !6609
  %value14 = getelementptr inbounds %struct.hid_field, %struct.hid_field* %23, i32 0, i32 10, !dbg !6610
  %24 = load i32*, i32** %value14, align 8, !dbg !6610
  %25 = load i32, i32* %offset.addr, align 4, !dbg !6611
  %idxprom = zext i32 %25 to i64, !dbg !6609
  %arrayidx = getelementptr i32, i32* %24, i64 %idxprom, !dbg !6609
  store i32 %22, i32* %arrayidx, align 4, !dbg !6612
  store i32 0, i32* %retval, align 4, !dbg !6613
  br label %return, !dbg !6613

return:                                           ; preds = %if.end13, %if.then8, %if.then1, %if.then
  %26 = load i32, i32* %retval, align 4, !dbg !6614
  ret i32 %26, !dbg !6614
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @s32ton(i32 %value, i32 %n) #0 !dbg !6615 {
entry:
  %retval = alloca i32, align 4
  %value.addr = alloca i32, align 4
  %n.addr = alloca i32, align 4
  %a = alloca i32, align 4
  store i32 %value, i32* %value.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %value.addr, metadata !6618, metadata !DIExpression()), !dbg !6619
  store i32 %n, i32* %n.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !6620, metadata !DIExpression()), !dbg !6621
  call void @llvm.dbg.declare(metadata i32* %a, metadata !6622, metadata !DIExpression()), !dbg !6623
  %0 = load i32, i32* %value.addr, align 4, !dbg !6624
  %1 = load i32, i32* %n.addr, align 4, !dbg !6625
  %sub = sub i32 %1, 1, !dbg !6626
  %shr = ashr i32 %0, %sub, !dbg !6627
  store i32 %shr, i32* %a, align 4, !dbg !6623
  %2 = load i32, i32* %a, align 4, !dbg !6628
  %tobool = icmp ne i32 %2, 0, !dbg !6628
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !6630

land.lhs.true:                                    ; preds = %entry
  %3 = load i32, i32* %a, align 4, !dbg !6631
  %cmp = icmp ne i32 %3, -1, !dbg !6632
  br i1 %cmp, label %if.then, label %if.end, !dbg !6633

if.then:                                          ; preds = %land.lhs.true
  %4 = load i32, i32* %value.addr, align 4, !dbg !6634
  %cmp1 = icmp slt i32 %4, 0, !dbg !6635
  br i1 %cmp1, label %cond.true, label %cond.false, !dbg !6634

cond.true:                                        ; preds = %if.then
  %5 = load i32, i32* %n.addr, align 4, !dbg !6636
  %sub2 = sub i32 %5, 1, !dbg !6637
  %shl = shl i32 1, %sub2, !dbg !6638
  br label %cond.end, !dbg !6634

cond.false:                                       ; preds = %if.then
  %6 = load i32, i32* %n.addr, align 4, !dbg !6639
  %sub3 = sub i32 %6, 1, !dbg !6640
  %shl4 = shl i32 1, %sub3, !dbg !6641
  %sub5 = sub i32 %shl4, 1, !dbg !6642
  br label %cond.end, !dbg !6634

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %shl, %cond.true ], [ %sub5, %cond.false ], !dbg !6634
  store i32 %cond, i32* %retval, align 4, !dbg !6643
  br label %return, !dbg !6643

if.end:                                           ; preds = %land.lhs.true, %entry
  %7 = load i32, i32* %value.addr, align 4, !dbg !6644
  %8 = load i32, i32* %n.addr, align 4, !dbg !6645
  %shl6 = shl i32 1, %8, !dbg !6646
  %sub7 = sub i32 %shl6, 1, !dbg !6647
  %and = and i32 %7, %sub7, !dbg !6648
  store i32 %and, i32* %retval, align 4, !dbg !6649
  br label %return, !dbg !6649

return:                                           ; preds = %if.end, %cond.end
  %9 = load i32, i32* %retval, align 4, !dbg !6650
  ret i32 %9, !dbg !6650
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @__hid_request(%struct.hid_device* %hid, %struct.hid_report* %report, i32 %reqtype) #0 !dbg !6651 {
entry:
  %retval = alloca i32, align 4
  %hid.addr = alloca %struct.hid_device*, align 8
  %report.addr = alloca %struct.hid_report*, align 8
  %reqtype.addr = alloca i32, align 4
  %buf = alloca i8*, align 8
  %ret = alloca i32, align 4
  %len = alloca i32, align 4
  store %struct.hid_device* %hid, %struct.hid_device** %hid.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.hid_device** %hid.addr, metadata !6654, metadata !DIExpression()), !dbg !6655
  store %struct.hid_report* %report, %struct.hid_report** %report.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.hid_report** %report.addr, metadata !6656, metadata !DIExpression()), !dbg !6657
  store i32 %reqtype, i32* %reqtype.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %reqtype.addr, metadata !6658, metadata !DIExpression()), !dbg !6659
  call void @llvm.dbg.declare(metadata i8** %buf, metadata !6660, metadata !DIExpression()), !dbg !6661
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !6662, metadata !DIExpression()), !dbg !6663
  call void @llvm.dbg.declare(metadata i32* %len, metadata !6664, metadata !DIExpression()), !dbg !6665
  %0 = load %struct.hid_report*, %struct.hid_report** %report.addr, align 8, !dbg !6666
  %call = call i8* @hid_alloc_report_buf(%struct.hid_report* %0, i32 3264) #9, !dbg !6667
  store i8* %call, i8** %buf, align 8, !dbg !6668
  %1 = load i8*, i8** %buf, align 8, !dbg !6669
  %tobool = icmp ne i8* %1, null, !dbg !6669
  br i1 %tobool, label %if.end, label %if.then, !dbg !6671

if.then:                                          ; preds = %entry
  store i32 -12, i32* %retval, align 4, !dbg !6672
  br label %return, !dbg !6672

if.end:                                           ; preds = %entry
  %2 = load %struct.hid_report*, %struct.hid_report** %report.addr, align 8, !dbg !6673
  %call1 = call i32 @hid_report_len(%struct.hid_report* %2) #9, !dbg !6674
  store i32 %call1, i32* %len, align 4, !dbg !6675
  %3 = load i32, i32* %reqtype.addr, align 4, !dbg !6676
  %cmp = icmp eq i32 %3, 9, !dbg !6678
  br i1 %cmp, label %if.then2, label %if.end3, !dbg !6679

if.then2:                                         ; preds = %if.end
  %4 = load %struct.hid_report*, %struct.hid_report** %report.addr, align 8, !dbg !6680
  %5 = load i8*, i8** %buf, align 8, !dbg !6681
  call void @hid_output_report(%struct.hid_report* %4, i8* %5) #9, !dbg !6682
  br label %if.end3, !dbg !6682

if.end3:                                          ; preds = %if.then2, %if.end
  %6 = load %struct.hid_device*, %struct.hid_device** %hid.addr, align 8, !dbg !6683
  %ll_driver = getelementptr inbounds %struct.hid_device, %struct.hid_device* %6, i32 0, i32 20, !dbg !6684
  %7 = load %struct.hid_ll_driver*, %struct.hid_ll_driver** %ll_driver, align 8, !dbg !6684
  %raw_request = getelementptr inbounds %struct.hid_ll_driver, %struct.hid_ll_driver* %7, i32 0, i32 8, !dbg !6685
  %8 = load i32 (%struct.hid_device*, i8, i8*, i64, i8, i32)*, i32 (%struct.hid_device*, i8, i8*, i64, i8, i32)** %raw_request, align 8, !dbg !6685
  %9 = load %struct.hid_device*, %struct.hid_device** %hid.addr, align 8, !dbg !6686
  %10 = load %struct.hid_report*, %struct.hid_report** %report.addr, align 8, !dbg !6687
  %id = getelementptr inbounds %struct.hid_report, %struct.hid_report* %10, i32 0, i32 2, !dbg !6688
  %11 = load i32, i32* %id, align 8, !dbg !6688
  %conv = trunc i32 %11 to i8, !dbg !6687
  %12 = load i8*, i8** %buf, align 8, !dbg !6689
  %13 = load i32, i32* %len, align 4, !dbg !6690
  %conv4 = zext i32 %13 to i64, !dbg !6690
  %14 = load %struct.hid_report*, %struct.hid_report** %report.addr, align 8, !dbg !6691
  %type = getelementptr inbounds %struct.hid_report, %struct.hid_report* %14, i32 0, i32 3, !dbg !6692
  %15 = load i32, i32* %type, align 4, !dbg !6692
  %conv5 = trunc i32 %15 to i8, !dbg !6691
  %16 = load i32, i32* %reqtype.addr, align 4, !dbg !6693
  %call6 = call i32 %8(%struct.hid_device* %9, i8 zeroext %conv, i8* %12, i64 %conv4, i8 zeroext %conv5, i32 %16) #9, !dbg !6683
  store i32 %call6, i32* %ret, align 4, !dbg !6694
  %17 = load i32, i32* %ret, align 4, !dbg !6695
  %cmp7 = icmp slt i32 %17, 0, !dbg !6697
  br i1 %cmp7, label %if.then9, label %if.end14, !dbg !6698

if.then9:                                         ; preds = %if.end3
  br label %do.body, !dbg !6699

do.body:                                          ; preds = %if.then9
  %18 = load i32, i32* @hid_debug, align 4, !dbg !6701
  %tobool10 = icmp ne i32 %18, 0, !dbg !6701
  br i1 %tobool10, label %if.then11, label %if.end13, !dbg !6704

if.then11:                                        ; preds = %do.body
  %19 = load i32, i32* %ret, align 4, !dbg !6701
  %call12 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.14, i64 0, i64 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.5, i64 0, i64 0), i32 %19) #13, !dbg !6701
  br label %if.end13, !dbg !6701

if.end13:                                         ; preds = %if.then11, %do.body
  br label %do.end, !dbg !6704

do.end:                                           ; preds = %if.end13
  br label %out, !dbg !6705

if.end14:                                         ; preds = %if.end3
  %20 = load i32, i32* %reqtype.addr, align 4, !dbg !6706
  %cmp15 = icmp eq i32 %20, 1, !dbg !6708
  br i1 %cmp15, label %if.then17, label %if.end20, !dbg !6709

if.then17:                                        ; preds = %if.end14
  %21 = load %struct.hid_device*, %struct.hid_device** %hid.addr, align 8, !dbg !6710
  %22 = load %struct.hid_report*, %struct.hid_report** %report.addr, align 8, !dbg !6711
  %type18 = getelementptr inbounds %struct.hid_report, %struct.hid_report* %22, i32 0, i32 3, !dbg !6712
  %23 = load i32, i32* %type18, align 4, !dbg !6712
  %24 = load i8*, i8** %buf, align 8, !dbg !6713
  %25 = load i32, i32* %ret, align 4, !dbg !6714
  %call19 = call i32 @hid_input_report(%struct.hid_device* %21, i32 %23, i8* %24, i32 %25, i32 0) #9, !dbg !6715
  br label %if.end20, !dbg !6715

if.end20:                                         ; preds = %if.then17, %if.end14
  store i32 0, i32* %ret, align 4, !dbg !6716
  br label %out, !dbg !6717

out:                                              ; preds = %if.end20, %do.end
  call void @llvm.dbg.label(metadata !6718), !dbg !6719
  %26 = load i8*, i8** %buf, align 8, !dbg !6720
  call void @kfree(i8* %26) #9, !dbg !6721
  %27 = load i32, i32* %ret, align 4, !dbg !6722
  store i32 %27, i32* %retval, align 4, !dbg !6723
  br label %return, !dbg !6723

return:                                           ; preds = %out, %if.then
  %28 = load i32, i32* %retval, align 4, !dbg !6724
  ret i32 %28, !dbg !6724
}

; Function Attrs: cold noredzone
declare dso_local i32 @printk(i8*, ...) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @hid_input_report(%struct.hid_device* %hid, i32 %type, i8* %data, i32 %size, i32 %interrupt) #0 !dbg !6725 {
entry:
  %retval = alloca i32, align 4
  %hid.addr = alloca %struct.hid_device*, align 8
  %type.addr = alloca i32, align 4
  %data.addr = alloca i8*, align 8
  %size.addr = alloca i32, align 4
  %interrupt.addr = alloca i32, align 4
  %report_enum = alloca %struct.hid_report_enum*, align 8
  %hdrv = alloca %struct.hid_driver*, align 8
  %report = alloca %struct.hid_report*, align 8
  %ret = alloca i32, align 4
  store %struct.hid_device* %hid, %struct.hid_device** %hid.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.hid_device** %hid.addr, metadata !6728, metadata !DIExpression()), !dbg !6729
  store i32 %type, i32* %type.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %type.addr, metadata !6730, metadata !DIExpression()), !dbg !6731
  store i8* %data, i8** %data.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %data.addr, metadata !6732, metadata !DIExpression()), !dbg !6733
  store i32 %size, i32* %size.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %size.addr, metadata !6734, metadata !DIExpression()), !dbg !6735
  store i32 %interrupt, i32* %interrupt.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %interrupt.addr, metadata !6736, metadata !DIExpression()), !dbg !6737
  call void @llvm.dbg.declare(metadata %struct.hid_report_enum** %report_enum, metadata !6738, metadata !DIExpression()), !dbg !6739
  call void @llvm.dbg.declare(metadata %struct.hid_driver** %hdrv, metadata !6740, metadata !DIExpression()), !dbg !6741
  call void @llvm.dbg.declare(metadata %struct.hid_report** %report, metadata !6742, metadata !DIExpression()), !dbg !6743
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !6744, metadata !DIExpression()), !dbg !6745
  store i32 0, i32* %ret, align 4, !dbg !6745
  %0 = load %struct.hid_device*, %struct.hid_device** %hid.addr, align 8, !dbg !6746
  %tobool = icmp ne %struct.hid_device* %0, null, !dbg !6746
  br i1 %tobool, label %if.end, label %if.then, !dbg !6748

if.then:                                          ; preds = %entry
  store i32 -19, i32* %retval, align 4, !dbg !6749
  br label %return, !dbg !6749

if.end:                                           ; preds = %entry
  %1 = load %struct.hid_device*, %struct.hid_device** %hid.addr, align 8, !dbg !6750
  %driver_input_lock = getelementptr inbounds %struct.hid_device, %struct.hid_device* %1, i32 0, i32 17, !dbg !6752
  %call = call i32 @down_trylock(%struct.semaphore* %driver_input_lock) #9, !dbg !6753
  %tobool1 = icmp ne i32 %call, 0, !dbg !6753
  br i1 %tobool1, label %if.then2, label %if.end3, !dbg !6754

if.then2:                                         ; preds = %if.end
  store i32 -16, i32* %retval, align 4, !dbg !6755
  br label %return, !dbg !6755

if.end3:                                          ; preds = %if.end
  %2 = load %struct.hid_device*, %struct.hid_device** %hid.addr, align 8, !dbg !6756
  %driver = getelementptr inbounds %struct.hid_device, %struct.hid_device* %2, i32 0, i32 19, !dbg !6758
  %3 = load %struct.hid_driver*, %struct.hid_driver** %driver, align 8, !dbg !6758
  %tobool4 = icmp ne %struct.hid_driver* %3, null, !dbg !6756
  br i1 %tobool4, label %if.end6, label %if.then5, !dbg !6759

if.then5:                                         ; preds = %if.end3
  store i32 -19, i32* %ret, align 4, !dbg !6760
  br label %unlock, !dbg !6762

if.end6:                                          ; preds = %if.end3
  %4 = load %struct.hid_device*, %struct.hid_device** %hid.addr, align 8, !dbg !6763
  %report_enum7 = getelementptr inbounds %struct.hid_device, %struct.hid_device* %4, i32 0, i32 15, !dbg !6764
  %arraydecay = getelementptr inbounds [3 x %struct.hid_report_enum], [3 x %struct.hid_report_enum]* %report_enum7, i64 0, i64 0, !dbg !6763
  %5 = load i32, i32* %type.addr, align 4, !dbg !6765
  %idx.ext = sext i32 %5 to i64, !dbg !6766
  %add.ptr = getelementptr %struct.hid_report_enum, %struct.hid_report_enum* %arraydecay, i64 %idx.ext, !dbg !6766
  store %struct.hid_report_enum* %add.ptr, %struct.hid_report_enum** %report_enum, align 8, !dbg !6767
  %6 = load %struct.hid_device*, %struct.hid_device** %hid.addr, align 8, !dbg !6768
  %driver8 = getelementptr inbounds %struct.hid_device, %struct.hid_device* %6, i32 0, i32 19, !dbg !6769
  %7 = load %struct.hid_driver*, %struct.hid_driver** %driver8, align 8, !dbg !6769
  store %struct.hid_driver* %7, %struct.hid_driver** %hdrv, align 8, !dbg !6770
  %8 = load i32, i32* %size.addr, align 4, !dbg !6771
  %tobool9 = icmp ne i32 %8, 0, !dbg !6771
  br i1 %tobool9, label %if.end15, label %if.then10, !dbg !6773

if.then10:                                        ; preds = %if.end6
  br label %do.body, !dbg !6774

do.body:                                          ; preds = %if.then10
  %9 = load i32, i32* @hid_debug, align 4, !dbg !6776
  %tobool11 = icmp ne i32 %9, 0, !dbg !6776
  br i1 %tobool11, label %if.then12, label %if.end14, !dbg !6779

if.then12:                                        ; preds = %do.body
  %call13 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.16, i64 0, i64 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.5, i64 0, i64 0)) #13, !dbg !6776
  br label %if.end14, !dbg !6776

if.end14:                                         ; preds = %if.then12, %do.body
  br label %do.end, !dbg !6779

do.end:                                           ; preds = %if.end14
  store i32 -1, i32* %ret, align 4, !dbg !6780
  br label %unlock, !dbg !6781

if.end15:                                         ; preds = %if.end6
  %10 = load %struct.hid_device*, %struct.hid_device** %hid.addr, align 8, !dbg !6782
  %debug_list = getelementptr inbounds %struct.hid_device, %struct.hid_device* %10, i32 0, i32 43, !dbg !6784
  %call16 = call i32 @list_empty(%struct.list_head* %debug_list) #9, !dbg !6785
  %tobool17 = icmp ne i32 %call16, 0, !dbg !6785
  br i1 %tobool17, label %if.end21, label %if.then18, !dbg !6786

if.then18:                                        ; preds = %if.end15
  br label %do.body19, !dbg !6787

do.body19:                                        ; preds = %if.then18
  br label %do.end20, !dbg !6788

do.end20:                                         ; preds = %do.body19
  br label %if.end21, !dbg !6788

if.end21:                                         ; preds = %do.end20, %if.end15
  %11 = load %struct.hid_report_enum*, %struct.hid_report_enum** %report_enum, align 8, !dbg !6790
  %12 = load i8*, i8** %data.addr, align 8, !dbg !6791
  %call22 = call %struct.hid_report* @hid_get_report(%struct.hid_report_enum* %11, i8* %12) #9, !dbg !6792
  store %struct.hid_report* %call22, %struct.hid_report** %report, align 8, !dbg !6793
  %13 = load %struct.hid_report*, %struct.hid_report** %report, align 8, !dbg !6794
  %tobool23 = icmp ne %struct.hid_report* %13, null, !dbg !6794
  br i1 %tobool23, label %if.end25, label %if.then24, !dbg !6796

if.then24:                                        ; preds = %if.end21
  store i32 -1, i32* %ret, align 4, !dbg !6797
  br label %unlock, !dbg !6799

if.end25:                                         ; preds = %if.end21
  %14 = load %struct.hid_driver*, %struct.hid_driver** %hdrv, align 8, !dbg !6800
  %tobool26 = icmp ne %struct.hid_driver* %14, null, !dbg !6800
  br i1 %tobool26, label %land.lhs.true, label %if.end36, !dbg !6802

land.lhs.true:                                    ; preds = %if.end25
  %15 = load %struct.hid_driver*, %struct.hid_driver** %hdrv, align 8, !dbg !6803
  %raw_event = getelementptr inbounds %struct.hid_driver, %struct.hid_driver* %15, i32 0, i32 8, !dbg !6804
  %16 = load i32 (%struct.hid_device*, %struct.hid_report*, i8*, i32)*, i32 (%struct.hid_device*, %struct.hid_report*, i8*, i32)** %raw_event, align 8, !dbg !6804
  %tobool27 = icmp ne i32 (%struct.hid_device*, %struct.hid_report*, i8*, i32)* %16, null, !dbg !6803
  br i1 %tobool27, label %land.lhs.true28, label %if.end36, !dbg !6805

land.lhs.true28:                                  ; preds = %land.lhs.true
  %17 = load %struct.hid_device*, %struct.hid_device** %hid.addr, align 8, !dbg !6806
  %18 = load %struct.hid_report*, %struct.hid_report** %report, align 8, !dbg !6807
  %call29 = call i32 @hid_match_report(%struct.hid_device* %17, %struct.hid_report* %18) #9, !dbg !6808
  %tobool30 = icmp ne i32 %call29, 0, !dbg !6808
  br i1 %tobool30, label %if.then31, label %if.end36, !dbg !6809

if.then31:                                        ; preds = %land.lhs.true28
  %19 = load %struct.hid_driver*, %struct.hid_driver** %hdrv, align 8, !dbg !6810
  %raw_event32 = getelementptr inbounds %struct.hid_driver, %struct.hid_driver* %19, i32 0, i32 8, !dbg !6812
  %20 = load i32 (%struct.hid_device*, %struct.hid_report*, i8*, i32)*, i32 (%struct.hid_device*, %struct.hid_report*, i8*, i32)** %raw_event32, align 8, !dbg !6812
  %21 = load %struct.hid_device*, %struct.hid_device** %hid.addr, align 8, !dbg !6813
  %22 = load %struct.hid_report*, %struct.hid_report** %report, align 8, !dbg !6814
  %23 = load i8*, i8** %data.addr, align 8, !dbg !6815
  %24 = load i32, i32* %size.addr, align 4, !dbg !6816
  %call33 = call i32 %20(%struct.hid_device* %21, %struct.hid_report* %22, i8* %23, i32 %24) #9, !dbg !6810
  store i32 %call33, i32* %ret, align 4, !dbg !6817
  %25 = load i32, i32* %ret, align 4, !dbg !6818
  %cmp = icmp slt i32 %25, 0, !dbg !6820
  br i1 %cmp, label %if.then34, label %if.end35, !dbg !6821

if.then34:                                        ; preds = %if.then31
  br label %unlock, !dbg !6822

if.end35:                                         ; preds = %if.then31
  br label %if.end36, !dbg !6823

if.end36:                                         ; preds = %if.end35, %land.lhs.true28, %land.lhs.true, %if.end25
  %26 = load %struct.hid_device*, %struct.hid_device** %hid.addr, align 8, !dbg !6824
  %27 = load i32, i32* %type.addr, align 4, !dbg !6825
  %28 = load i8*, i8** %data.addr, align 8, !dbg !6826
  %29 = load i32, i32* %size.addr, align 4, !dbg !6827
  %30 = load i32, i32* %interrupt.addr, align 4, !dbg !6828
  %call37 = call i32 @hid_report_raw_event(%struct.hid_device* %26, i32 %27, i8* %28, i32 %29, i32 %30) #9, !dbg !6829
  store i32 %call37, i32* %ret, align 4, !dbg !6830
  br label %unlock, !dbg !6831

unlock:                                           ; preds = %if.end36, %if.then34, %if.then24, %do.end, %if.then5
  call void @llvm.dbg.label(metadata !6832), !dbg !6833
  %31 = load %struct.hid_device*, %struct.hid_device** %hid.addr, align 8, !dbg !6834
  %driver_input_lock38 = getelementptr inbounds %struct.hid_device, %struct.hid_device* %31, i32 0, i32 17, !dbg !6835
  call void @up(%struct.semaphore* %driver_input_lock38) #9, !dbg !6836
  %32 = load i32, i32* %ret, align 4, !dbg !6837
  store i32 %32, i32* %retval, align 4, !dbg !6838
  br label %return, !dbg !6838

return:                                           ; preds = %unlock, %if.then2, %if.then
  %33 = load i32, i32* %retval, align 4, !dbg !6839
  ret i32 %33, !dbg !6839
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @hid_report_raw_event(%struct.hid_device* %hid, i32 %type, i8* %data, i32 %size, i32 %interrupt) #0 !dbg !6840 {
entry:
  %hid.addr = alloca %struct.hid_device*, align 8
  %type.addr = alloca i32, align 4
  %data.addr = alloca i8*, align 8
  %size.addr = alloca i32, align 4
  %interrupt.addr = alloca i32, align 4
  %report_enum = alloca %struct.hid_report_enum*, align 8
  %report = alloca %struct.hid_report*, align 8
  %hdrv = alloca %struct.hid_driver*, align 8
  %a = alloca i32, align 4
  %rsize = alloca i32, align 4
  %csize = alloca i32, align 4
  %cdata = alloca i8*, align 8
  %ret = alloca i32, align 4
  store %struct.hid_device* %hid, %struct.hid_device** %hid.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.hid_device** %hid.addr, metadata !6841, metadata !DIExpression()), !dbg !6842
  store i32 %type, i32* %type.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %type.addr, metadata !6843, metadata !DIExpression()), !dbg !6844
  store i8* %data, i8** %data.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %data.addr, metadata !6845, metadata !DIExpression()), !dbg !6846
  store i32 %size, i32* %size.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %size.addr, metadata !6847, metadata !DIExpression()), !dbg !6848
  store i32 %interrupt, i32* %interrupt.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %interrupt.addr, metadata !6849, metadata !DIExpression()), !dbg !6850
  call void @llvm.dbg.declare(metadata %struct.hid_report_enum** %report_enum, metadata !6851, metadata !DIExpression()), !dbg !6852
  %0 = load %struct.hid_device*, %struct.hid_device** %hid.addr, align 8, !dbg !6853
  %report_enum1 = getelementptr inbounds %struct.hid_device, %struct.hid_device* %0, i32 0, i32 15, !dbg !6854
  %arraydecay = getelementptr inbounds [3 x %struct.hid_report_enum], [3 x %struct.hid_report_enum]* %report_enum1, i64 0, i64 0, !dbg !6853
  %1 = load i32, i32* %type.addr, align 4, !dbg !6855
  %idx.ext = sext i32 %1 to i64, !dbg !6856
  %add.ptr = getelementptr %struct.hid_report_enum, %struct.hid_report_enum* %arraydecay, i64 %idx.ext, !dbg !6856
  store %struct.hid_report_enum* %add.ptr, %struct.hid_report_enum** %report_enum, align 8, !dbg !6852
  call void @llvm.dbg.declare(metadata %struct.hid_report** %report, metadata !6857, metadata !DIExpression()), !dbg !6858
  call void @llvm.dbg.declare(metadata %struct.hid_driver** %hdrv, metadata !6859, metadata !DIExpression()), !dbg !6860
  call void @llvm.dbg.declare(metadata i32* %a, metadata !6861, metadata !DIExpression()), !dbg !6862
  call void @llvm.dbg.declare(metadata i32* %rsize, metadata !6863, metadata !DIExpression()), !dbg !6864
  call void @llvm.dbg.declare(metadata i32* %csize, metadata !6865, metadata !DIExpression()), !dbg !6866
  %2 = load i32, i32* %size.addr, align 4, !dbg !6867
  store i32 %2, i32* %csize, align 4, !dbg !6866
  call void @llvm.dbg.declare(metadata i8** %cdata, metadata !6868, metadata !DIExpression()), !dbg !6869
  %3 = load i8*, i8** %data.addr, align 8, !dbg !6870
  store i8* %3, i8** %cdata, align 8, !dbg !6869
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !6871, metadata !DIExpression()), !dbg !6872
  store i32 0, i32* %ret, align 4, !dbg !6872
  %4 = load %struct.hid_report_enum*, %struct.hid_report_enum** %report_enum, align 8, !dbg !6873
  %5 = load i8*, i8** %data.addr, align 8, !dbg !6874
  %call = call %struct.hid_report* @hid_get_report(%struct.hid_report_enum* %4, i8* %5) #9, !dbg !6875
  store %struct.hid_report* %call, %struct.hid_report** %report, align 8, !dbg !6876
  %6 = load %struct.hid_report*, %struct.hid_report** %report, align 8, !dbg !6877
  %tobool = icmp ne %struct.hid_report* %6, null, !dbg !6877
  br i1 %tobool, label %if.end, label %if.then, !dbg !6879

if.then:                                          ; preds = %entry
  br label %out, !dbg !6880

if.end:                                           ; preds = %entry
  %7 = load %struct.hid_report_enum*, %struct.hid_report_enum** %report_enum, align 8, !dbg !6881
  %numbered = getelementptr inbounds %struct.hid_report_enum, %struct.hid_report_enum* %7, i32 0, i32 0, !dbg !6883
  %8 = load i32, i32* %numbered, align 8, !dbg !6883
  %tobool2 = icmp ne i32 %8, 0, !dbg !6881
  br i1 %tobool2, label %if.then3, label %if.end4, !dbg !6884

if.then3:                                         ; preds = %if.end
  %9 = load i8*, i8** %cdata, align 8, !dbg !6885
  %incdec.ptr = getelementptr i8, i8* %9, i32 1, !dbg !6885
  store i8* %incdec.ptr, i8** %cdata, align 8, !dbg !6885
  %10 = load i32, i32* %csize, align 4, !dbg !6887
  %dec = add i32 %10, -1, !dbg !6887
  store i32 %dec, i32* %csize, align 4, !dbg !6887
  br label %if.end4, !dbg !6888

if.end4:                                          ; preds = %if.then3, %if.end
  %11 = load %struct.hid_report*, %struct.hid_report** %report, align 8, !dbg !6889
  %call5 = call i64 @hid_compute_report_size(%struct.hid_report* %11) #9, !dbg !6890
  %conv = trunc i64 %call5 to i32, !dbg !6890
  store i32 %conv, i32* %rsize, align 4, !dbg !6891
  %12 = load %struct.hid_report_enum*, %struct.hid_report_enum** %report_enum, align 8, !dbg !6892
  %numbered6 = getelementptr inbounds %struct.hid_report_enum, %struct.hid_report_enum* %12, i32 0, i32 0, !dbg !6894
  %13 = load i32, i32* %numbered6, align 8, !dbg !6894
  %tobool7 = icmp ne i32 %13, 0, !dbg !6892
  br i1 %tobool7, label %land.lhs.true, label %if.else, !dbg !6895

land.lhs.true:                                    ; preds = %if.end4
  %14 = load i32, i32* %rsize, align 4, !dbg !6896
  %cmp = icmp uge i32 %14, 8192, !dbg !6897
  br i1 %cmp, label %if.then9, label %if.else, !dbg !6898

if.then9:                                         ; preds = %land.lhs.true
  store i32 8191, i32* %rsize, align 4, !dbg !6899
  br label %if.end14, !dbg !6900

if.else:                                          ; preds = %land.lhs.true, %if.end4
  %15 = load i32, i32* %rsize, align 4, !dbg !6901
  %cmp10 = icmp ugt i32 %15, 8192, !dbg !6903
  br i1 %cmp10, label %if.then12, label %if.end13, !dbg !6904

if.then12:                                        ; preds = %if.else
  store i32 8192, i32* %rsize, align 4, !dbg !6905
  br label %if.end13, !dbg !6906

if.end13:                                         ; preds = %if.then12, %if.else
  br label %if.end14

if.end14:                                         ; preds = %if.end13, %if.then9
  %16 = load i32, i32* %csize, align 4, !dbg !6907
  %17 = load i32, i32* %rsize, align 4, !dbg !6909
  %cmp15 = icmp ult i32 %16, %17, !dbg !6910
  br i1 %cmp15, label %if.then17, label %if.end25, !dbg !6911

if.then17:                                        ; preds = %if.end14
  br label %do.body, !dbg !6912

do.body:                                          ; preds = %if.then17
  %18 = load i32, i32* @hid_debug, align 4, !dbg !6914
  %tobool18 = icmp ne i32 %18, 0, !dbg !6914
  br i1 %tobool18, label %if.then19, label %if.end21, !dbg !6917

if.then19:                                        ; preds = %do.body
  %19 = load %struct.hid_report*, %struct.hid_report** %report, align 8, !dbg !6914
  %id = getelementptr inbounds %struct.hid_report, %struct.hid_report* %19, i32 0, i32 2, !dbg !6914
  %20 = load i32, i32* %id, align 8, !dbg !6914
  %21 = load i32, i32* %csize, align 4, !dbg !6914
  %22 = load i32, i32* %rsize, align 4, !dbg !6914
  %call20 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.15, i64 0, i64 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.5, i64 0, i64 0), i32 %20, i32 %21, i32 %22) #13, !dbg !6914
  br label %if.end21, !dbg !6914

if.end21:                                         ; preds = %if.then19, %do.body
  br label %do.end, !dbg !6917

do.end:                                           ; preds = %if.end21
  %23 = load i8*, i8** %cdata, align 8, !dbg !6918
  %24 = load i32, i32* %csize, align 4, !dbg !6919
  %idx.ext22 = zext i32 %24 to i64, !dbg !6920
  %add.ptr23 = getelementptr i8, i8* %23, i64 %idx.ext22, !dbg !6920
  %25 = load i32, i32* %rsize, align 4, !dbg !6921
  %26 = load i32, i32* %csize, align 4, !dbg !6922
  %sub = sub i32 %25, %26, !dbg !6923
  %conv24 = zext i32 %sub to i64, !dbg !6921
  call void @llvm.memset.p0i8.i64(i8* align 1 %add.ptr23, i8 0, i64 %conv24, i1 false), !dbg !6924
  br label %if.end25, !dbg !6925

if.end25:                                         ; preds = %do.end, %if.end14
  %27 = load %struct.hid_device*, %struct.hid_device** %hid.addr, align 8, !dbg !6926
  %claimed = getelementptr inbounds %struct.hid_device, %struct.hid_device* %27, i32 0, i32 24, !dbg !6928
  %28 = load i32, i32* %claimed, align 8, !dbg !6928
  %conv26 = zext i32 %28 to i64, !dbg !6926
  %and = and i64 %conv26, 2, !dbg !6929
  %tobool27 = icmp ne i64 %and, 0, !dbg !6929
  br i1 %tobool27, label %land.lhs.true28, label %if.end32, !dbg !6930

land.lhs.true28:                                  ; preds = %if.end25
  %29 = load %struct.hid_device*, %struct.hid_device** %hid.addr, align 8, !dbg !6931
  %hiddev_report_event = getelementptr inbounds %struct.hid_device, %struct.hid_device* %29, i32 0, i32 38, !dbg !6932
  %30 = load void (%struct.hid_device*, %struct.hid_report*)*, void (%struct.hid_device*, %struct.hid_report*)** %hiddev_report_event, align 8, !dbg !6932
  %tobool29 = icmp ne void (%struct.hid_device*, %struct.hid_report*)* %30, null, !dbg !6931
  br i1 %tobool29, label %if.then30, label %if.end32, !dbg !6933

if.then30:                                        ; preds = %land.lhs.true28
  %31 = load %struct.hid_device*, %struct.hid_device** %hid.addr, align 8, !dbg !6934
  %hiddev_report_event31 = getelementptr inbounds %struct.hid_device, %struct.hid_device* %31, i32 0, i32 38, !dbg !6935
  %32 = load void (%struct.hid_device*, %struct.hid_report*)*, void (%struct.hid_device*, %struct.hid_report*)** %hiddev_report_event31, align 8, !dbg !6935
  %33 = load %struct.hid_device*, %struct.hid_device** %hid.addr, align 8, !dbg !6936
  %34 = load %struct.hid_report*, %struct.hid_report** %report, align 8, !dbg !6937
  call void %32(%struct.hid_device* %33, %struct.hid_report* %34) #9, !dbg !6934
  br label %if.end32, !dbg !6934

if.end32:                                         ; preds = %if.then30, %land.lhs.true28, %if.end25
  %35 = load %struct.hid_device*, %struct.hid_device** %hid.addr, align 8, !dbg !6938
  %claimed33 = getelementptr inbounds %struct.hid_device, %struct.hid_device* %35, i32 0, i32 24, !dbg !6940
  %36 = load i32, i32* %claimed33, align 8, !dbg !6940
  %conv34 = zext i32 %36 to i64, !dbg !6938
  %and35 = and i64 %conv34, 4, !dbg !6941
  %tobool36 = icmp ne i64 %and35, 0, !dbg !6941
  br i1 %tobool36, label %if.then37, label %if.end42, !dbg !6942

if.then37:                                        ; preds = %if.end32
  %37 = load %struct.hid_device*, %struct.hid_device** %hid.addr, align 8, !dbg !6943
  %38 = load i8*, i8** %data.addr, align 8, !dbg !6945
  %39 = load i32, i32* %size.addr, align 4, !dbg !6946
  %call38 = call i32 @hidraw_report_event(%struct.hid_device* %37, i8* %38, i32 %39) #9, !dbg !6947
  store i32 %call38, i32* %ret, align 4, !dbg !6948
  %40 = load i32, i32* %ret, align 4, !dbg !6949
  %tobool39 = icmp ne i32 %40, 0, !dbg !6949
  br i1 %tobool39, label %if.then40, label %if.end41, !dbg !6951

if.then40:                                        ; preds = %if.then37
  br label %out, !dbg !6952

if.end41:                                         ; preds = %if.then37
  br label %if.end42, !dbg !6953

if.end42:                                         ; preds = %if.end41, %if.end32
  %41 = load %struct.hid_device*, %struct.hid_device** %hid.addr, align 8, !dbg !6954
  %claimed43 = getelementptr inbounds %struct.hid_device, %struct.hid_device* %41, i32 0, i32 24, !dbg !6956
  %42 = load i32, i32* %claimed43, align 8, !dbg !6956
  %conv44 = zext i32 %42 to i64, !dbg !6954
  %cmp45 = icmp ne i64 %conv44, 4, !dbg !6957
  br i1 %cmp45, label %land.lhs.true47, label %if.end60, !dbg !6958

land.lhs.true47:                                  ; preds = %if.end42
  %43 = load %struct.hid_report*, %struct.hid_report** %report, align 8, !dbg !6959
  %maxfield = getelementptr inbounds %struct.hid_report, %struct.hid_report* %43, i32 0, i32 6, !dbg !6960
  %44 = load i32, i32* %maxfield, align 8, !dbg !6960
  %tobool48 = icmp ne i32 %44, 0, !dbg !6959
  br i1 %tobool48, label %if.then49, label %if.end60, !dbg !6961

if.then49:                                        ; preds = %land.lhs.true47
  store i32 0, i32* %a, align 4, !dbg !6962
  br label %for.cond, !dbg !6965

for.cond:                                         ; preds = %for.inc, %if.then49
  %45 = load i32, i32* %a, align 4, !dbg !6966
  %46 = load %struct.hid_report*, %struct.hid_report** %report, align 8, !dbg !6968
  %maxfield50 = getelementptr inbounds %struct.hid_report, %struct.hid_report* %46, i32 0, i32 6, !dbg !6969
  %47 = load i32, i32* %maxfield50, align 8, !dbg !6969
  %cmp51 = icmp ult i32 %45, %47, !dbg !6970
  br i1 %cmp51, label %for.body, label %for.end, !dbg !6971

for.body:                                         ; preds = %for.cond
  %48 = load %struct.hid_device*, %struct.hid_device** %hid.addr, align 8, !dbg !6972
  %49 = load %struct.hid_report*, %struct.hid_report** %report, align 8, !dbg !6973
  %field = getelementptr inbounds %struct.hid_report, %struct.hid_report* %49, i32 0, i32 5, !dbg !6974
  %50 = load i32, i32* %a, align 4, !dbg !6975
  %idxprom = zext i32 %50 to i64, !dbg !6973
  %arrayidx = getelementptr [256 x %struct.hid_field*], [256 x %struct.hid_field*]* %field, i64 0, i64 %idxprom, !dbg !6973
  %51 = load %struct.hid_field*, %struct.hid_field** %arrayidx, align 8, !dbg !6973
  %52 = load i8*, i8** %cdata, align 8, !dbg !6976
  %53 = load i32, i32* %interrupt.addr, align 4, !dbg !6977
  call void @hid_input_field(%struct.hid_device* %48, %struct.hid_field* %51, i8* %52, i32 %53) #9, !dbg !6978
  br label %for.inc, !dbg !6978

for.inc:                                          ; preds = %for.body
  %54 = load i32, i32* %a, align 4, !dbg !6979
  %inc = add i32 %54, 1, !dbg !6979
  store i32 %inc, i32* %a, align 4, !dbg !6979
  br label %for.cond, !dbg !6980, !llvm.loop !6981

for.end:                                          ; preds = %for.cond
  %55 = load %struct.hid_device*, %struct.hid_device** %hid.addr, align 8, !dbg !6983
  %driver = getelementptr inbounds %struct.hid_device, %struct.hid_device* %55, i32 0, i32 19, !dbg !6984
  %56 = load %struct.hid_driver*, %struct.hid_driver** %driver, align 8, !dbg !6984
  store %struct.hid_driver* %56, %struct.hid_driver** %hdrv, align 8, !dbg !6985
  %57 = load %struct.hid_driver*, %struct.hid_driver** %hdrv, align 8, !dbg !6986
  %tobool53 = icmp ne %struct.hid_driver* %57, null, !dbg !6986
  br i1 %tobool53, label %land.lhs.true54, label %if.end59, !dbg !6988

land.lhs.true54:                                  ; preds = %for.end
  %58 = load %struct.hid_driver*, %struct.hid_driver** %hdrv, align 8, !dbg !6989
  %report55 = getelementptr inbounds %struct.hid_driver, %struct.hid_driver* %58, i32 0, i32 11, !dbg !6990
  %59 = load void (%struct.hid_device*, %struct.hid_report*)*, void (%struct.hid_device*, %struct.hid_report*)** %report55, align 8, !dbg !6990
  %tobool56 = icmp ne void (%struct.hid_device*, %struct.hid_report*)* %59, null, !dbg !6989
  br i1 %tobool56, label %if.then57, label %if.end59, !dbg !6991

if.then57:                                        ; preds = %land.lhs.true54
  %60 = load %struct.hid_driver*, %struct.hid_driver** %hdrv, align 8, !dbg !6992
  %report58 = getelementptr inbounds %struct.hid_driver, %struct.hid_driver* %60, i32 0, i32 11, !dbg !6993
  %61 = load void (%struct.hid_device*, %struct.hid_report*)*, void (%struct.hid_device*, %struct.hid_report*)** %report58, align 8, !dbg !6993
  %62 = load %struct.hid_device*, %struct.hid_device** %hid.addr, align 8, !dbg !6994
  %63 = load %struct.hid_report*, %struct.hid_report** %report, align 8, !dbg !6995
  call void %61(%struct.hid_device* %62, %struct.hid_report* %63) #9, !dbg !6992
  br label %if.end59, !dbg !6992

if.end59:                                         ; preds = %if.then57, %land.lhs.true54, %for.end
  br label %if.end60, !dbg !6996

if.end60:                                         ; preds = %if.end59, %land.lhs.true47, %if.end42
  %64 = load %struct.hid_device*, %struct.hid_device** %hid.addr, align 8, !dbg !6997
  %claimed61 = getelementptr inbounds %struct.hid_device, %struct.hid_device* %64, i32 0, i32 24, !dbg !6999
  %65 = load i32, i32* %claimed61, align 8, !dbg !6999
  %conv62 = zext i32 %65 to i64, !dbg !6997
  %and63 = and i64 %conv62, 1, !dbg !7000
  %tobool64 = icmp ne i64 %and63, 0, !dbg !7000
  br i1 %tobool64, label %if.then65, label %if.end66, !dbg !7001

if.then65:                                        ; preds = %if.end60
  %66 = load %struct.hid_device*, %struct.hid_device** %hid.addr, align 8, !dbg !7002
  %67 = load %struct.hid_report*, %struct.hid_report** %report, align 8, !dbg !7003
  call void @hidinput_report_event(%struct.hid_device* %66, %struct.hid_report* %67) #9, !dbg !7004
  br label %if.end66, !dbg !7004

if.end66:                                         ; preds = %if.then65, %if.end60
  br label %out, !dbg !7005

out:                                              ; preds = %if.end66, %if.then40, %if.then
  call void @llvm.dbg.label(metadata !7006), !dbg !7007
  %68 = load i32, i32* %ret, align 4, !dbg !7008
  ret i32 %68, !dbg !7009
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.hid_report* @hid_get_report(%struct.hid_report_enum* %report_enum, i8* %data) #0 !dbg !7010 {
entry:
  %report_enum.addr = alloca %struct.hid_report_enum*, align 8
  %data.addr = alloca i8*, align 8
  %report = alloca %struct.hid_report*, align 8
  %n = alloca i32, align 4
  store %struct.hid_report_enum* %report_enum, %struct.hid_report_enum** %report_enum.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.hid_report_enum** %report_enum.addr, metadata !7015, metadata !DIExpression()), !dbg !7016
  store i8* %data, i8** %data.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %data.addr, metadata !7017, metadata !DIExpression()), !dbg !7018
  call void @llvm.dbg.declare(metadata %struct.hid_report** %report, metadata !7019, metadata !DIExpression()), !dbg !7020
  call void @llvm.dbg.declare(metadata i32* %n, metadata !7021, metadata !DIExpression()), !dbg !7022
  store i32 0, i32* %n, align 4, !dbg !7022
  %0 = load %struct.hid_report_enum*, %struct.hid_report_enum** %report_enum.addr, align 8, !dbg !7023
  %numbered = getelementptr inbounds %struct.hid_report_enum, %struct.hid_report_enum* %0, i32 0, i32 0, !dbg !7025
  %1 = load i32, i32* %numbered, align 8, !dbg !7025
  %tobool = icmp ne i32 %1, 0, !dbg !7023
  br i1 %tobool, label %if.then, label %if.end, !dbg !7026

if.then:                                          ; preds = %entry
  %2 = load i8*, i8** %data.addr, align 8, !dbg !7027
  %3 = load i8, i8* %2, align 1, !dbg !7028
  %conv = zext i8 %3 to i32, !dbg !7028
  store i32 %conv, i32* %n, align 4, !dbg !7029
  br label %if.end, !dbg !7030

if.end:                                           ; preds = %if.then, %entry
  %4 = load %struct.hid_report_enum*, %struct.hid_report_enum** %report_enum.addr, align 8, !dbg !7031
  %report_id_hash = getelementptr inbounds %struct.hid_report_enum, %struct.hid_report_enum* %4, i32 0, i32 2, !dbg !7032
  %5 = load i32, i32* %n, align 4, !dbg !7033
  %idxprom = zext i32 %5 to i64, !dbg !7031
  %arrayidx = getelementptr [256 x %struct.hid_report*], [256 x %struct.hid_report*]* %report_id_hash, i64 0, i64 %idxprom, !dbg !7031
  %6 = load %struct.hid_report*, %struct.hid_report** %arrayidx, align 8, !dbg !7031
  store %struct.hid_report* %6, %struct.hid_report** %report, align 8, !dbg !7034
  %7 = load %struct.hid_report*, %struct.hid_report** %report, align 8, !dbg !7035
  %cmp = icmp eq %struct.hid_report* %7, null, !dbg !7037
  br i1 %cmp, label %if.then2, label %if.end6, !dbg !7038

if.then2:                                         ; preds = %if.end
  br label %do.body, !dbg !7039

do.body:                                          ; preds = %if.then2
  %8 = load i32, i32* @hid_debug, align 4, !dbg !7040
  %tobool3 = icmp ne i32 %8, 0, !dbg !7040
  br i1 %tobool3, label %if.then4, label %if.end5, !dbg !7043

if.then4:                                         ; preds = %do.body
  %9 = load i32, i32* %n, align 4, !dbg !7040
  %call = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.73, i64 0, i64 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.5, i64 0, i64 0), i32 %9) #13, !dbg !7040
  br label %if.end5, !dbg !7040

if.end5:                                          ; preds = %if.then4, %do.body
  br label %do.end, !dbg !7043

do.end:                                           ; preds = %if.end5
  br label %if.end6, !dbg !7043

if.end6:                                          ; preds = %do.end, %if.end
  %10 = load %struct.hid_report*, %struct.hid_report** %report, align 8, !dbg !7044
  ret %struct.hid_report* %10, !dbg !7045
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @hidraw_report_event(%struct.hid_device* %hid, i8* %data, i32 %len) #0 !dbg !7046 {
entry:
  %hid.addr = alloca %struct.hid_device*, align 8
  %data.addr = alloca i8*, align 8
  %len.addr = alloca i32, align 4
  store %struct.hid_device* %hid, %struct.hid_device** %hid.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.hid_device** %hid.addr, metadata !7049, metadata !DIExpression()), !dbg !7050
  store i8* %data, i8** %data.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %data.addr, metadata !7051, metadata !DIExpression()), !dbg !7052
  store i32 %len, i32* %len.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %len.addr, metadata !7053, metadata !DIExpression()), !dbg !7054
  ret i32 0, !dbg !7055
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @hid_input_field(%struct.hid_device* %hid, %struct.hid_field* %field, i8* %data, i32 %interrupt) #0 !dbg !7056 {
entry:
  %hid.addr = alloca %struct.hid_device*, align 8
  %field.addr = alloca %struct.hid_field*, align 8
  %data.addr = alloca i8*, align 8
  %interrupt.addr = alloca i32, align 4
  %n = alloca i32, align 4
  %count = alloca i32, align 4
  %offset = alloca i32, align 4
  %size = alloca i32, align 4
  %min = alloca i32, align 4
  %max = alloca i32, align 4
  %value = alloca i32*, align 8
  store %struct.hid_device* %hid, %struct.hid_device** %hid.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.hid_device** %hid.addr, metadata !7059, metadata !DIExpression()), !dbg !7060
  store %struct.hid_field* %field, %struct.hid_field** %field.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.hid_field** %field.addr, metadata !7061, metadata !DIExpression()), !dbg !7062
  store i8* %data, i8** %data.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %data.addr, metadata !7063, metadata !DIExpression()), !dbg !7064
  store i32 %interrupt, i32* %interrupt.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %interrupt.addr, metadata !7065, metadata !DIExpression()), !dbg !7066
  call void @llvm.dbg.declare(metadata i32* %n, metadata !7067, metadata !DIExpression()), !dbg !7068
  call void @llvm.dbg.declare(metadata i32* %count, metadata !7069, metadata !DIExpression()), !dbg !7070
  %0 = load %struct.hid_field*, %struct.hid_field** %field.addr, align 8, !dbg !7071
  %report_count = getelementptr inbounds %struct.hid_field, %struct.hid_field* %0, i32 0, i32 8, !dbg !7072
  %1 = load i32, i32* %report_count, align 8, !dbg !7072
  store i32 %1, i32* %count, align 4, !dbg !7070
  call void @llvm.dbg.declare(metadata i32* %offset, metadata !7073, metadata !DIExpression()), !dbg !7074
  %2 = load %struct.hid_field*, %struct.hid_field** %field.addr, align 8, !dbg !7075
  %report_offset = getelementptr inbounds %struct.hid_field, %struct.hid_field* %2, i32 0, i32 6, !dbg !7076
  %3 = load i32, i32* %report_offset, align 8, !dbg !7076
  store i32 %3, i32* %offset, align 4, !dbg !7074
  call void @llvm.dbg.declare(metadata i32* %size, metadata !7077, metadata !DIExpression()), !dbg !7078
  %4 = load %struct.hid_field*, %struct.hid_field** %field.addr, align 8, !dbg !7079
  %report_size = getelementptr inbounds %struct.hid_field, %struct.hid_field* %4, i32 0, i32 7, !dbg !7080
  %5 = load i32, i32* %report_size, align 4, !dbg !7080
  store i32 %5, i32* %size, align 4, !dbg !7078
  call void @llvm.dbg.declare(metadata i32* %min, metadata !7081, metadata !DIExpression()), !dbg !7082
  %6 = load %struct.hid_field*, %struct.hid_field** %field.addr, align 8, !dbg !7083
  %logical_minimum = getelementptr inbounds %struct.hid_field, %struct.hid_field* %6, i32 0, i32 11, !dbg !7084
  %7 = load i32, i32* %logical_minimum, align 8, !dbg !7084
  store i32 %7, i32* %min, align 4, !dbg !7082
  call void @llvm.dbg.declare(metadata i32* %max, metadata !7085, metadata !DIExpression()), !dbg !7086
  %8 = load %struct.hid_field*, %struct.hid_field** %field.addr, align 8, !dbg !7087
  %logical_maximum = getelementptr inbounds %struct.hid_field, %struct.hid_field* %8, i32 0, i32 12, !dbg !7088
  %9 = load i32, i32* %logical_maximum, align 4, !dbg !7088
  store i32 %9, i32* %max, align 4, !dbg !7086
  call void @llvm.dbg.declare(metadata i32** %value, metadata !7089, metadata !DIExpression()), !dbg !7090
  %10 = load i32, i32* %count, align 4, !dbg !7091
  %conv = zext i32 %10 to i64, !dbg !7091
  %call = call i8* @kmalloc_array(i64 %conv, i64 4, i32 2592) #9, !dbg !7092
  %11 = bitcast i8* %call to i32*, !dbg !7092
  store i32* %11, i32** %value, align 8, !dbg !7093
  %12 = load i32*, i32** %value, align 8, !dbg !7094
  %tobool = icmp ne i32* %12, null, !dbg !7094
  br i1 %tobool, label %if.end, label %if.then, !dbg !7096

if.then:                                          ; preds = %entry
  br label %return, !dbg !7097

if.end:                                           ; preds = %entry
  store i32 0, i32* %n, align 4, !dbg !7098
  br label %for.cond, !dbg !7100

for.cond:                                         ; preds = %for.inc, %if.end
  %13 = load i32, i32* %n, align 4, !dbg !7101
  %14 = load i32, i32* %count, align 4, !dbg !7103
  %cmp = icmp ult i32 %13, %14, !dbg !7104
  br i1 %cmp, label %for.body, label %for.end, !dbg !7105

for.body:                                         ; preds = %for.cond
  %15 = load i32, i32* %min, align 4, !dbg !7106
  %cmp2 = icmp slt i32 %15, 0, !dbg !7108
  br i1 %cmp2, label %cond.true, label %cond.false, !dbg !7106

cond.true:                                        ; preds = %for.body
  %16 = load %struct.hid_device*, %struct.hid_device** %hid.addr, align 8, !dbg !7109
  %17 = load i8*, i8** %data.addr, align 8, !dbg !7110
  %18 = load i32, i32* %offset, align 4, !dbg !7111
  %19 = load i32, i32* %n, align 4, !dbg !7112
  %20 = load i32, i32* %size, align 4, !dbg !7113
  %mul = mul i32 %19, %20, !dbg !7114
  %add = add i32 %18, %mul, !dbg !7115
  %21 = load i32, i32* %size, align 4, !dbg !7116
  %call4 = call i32 @hid_field_extract(%struct.hid_device* %16, i8* %17, i32 %add, i32 %21) #9, !dbg !7117
  %22 = load i32, i32* %size, align 4, !dbg !7118
  %call5 = call i32 @snto32(i32 %call4, i32 %22) #9, !dbg !7119
  br label %cond.end, !dbg !7106

cond.false:                                       ; preds = %for.body
  %23 = load %struct.hid_device*, %struct.hid_device** %hid.addr, align 8, !dbg !7120
  %24 = load i8*, i8** %data.addr, align 8, !dbg !7121
  %25 = load i32, i32* %offset, align 4, !dbg !7122
  %26 = load i32, i32* %n, align 4, !dbg !7123
  %27 = load i32, i32* %size, align 4, !dbg !7124
  %mul6 = mul i32 %26, %27, !dbg !7125
  %add7 = add i32 %25, %mul6, !dbg !7126
  %28 = load i32, i32* %size, align 4, !dbg !7127
  %call8 = call i32 @hid_field_extract(%struct.hid_device* %23, i8* %24, i32 %add7, i32 %28) #9, !dbg !7128
  br label %cond.end, !dbg !7106

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call5, %cond.true ], [ %call8, %cond.false ], !dbg !7106
  %29 = load i32*, i32** %value, align 8, !dbg !7129
  %30 = load i32, i32* %n, align 4, !dbg !7130
  %idxprom = zext i32 %30 to i64, !dbg !7129
  %arrayidx = getelementptr i32, i32* %29, i64 %idxprom, !dbg !7129
  store i32 %cond, i32* %arrayidx, align 4, !dbg !7131
  %31 = load %struct.hid_field*, %struct.hid_field** %field.addr, align 8, !dbg !7132
  %flags = getelementptr inbounds %struct.hid_field, %struct.hid_field* %31, i32 0, i32 5, !dbg !7134
  %32 = load i32, i32* %flags, align 4, !dbg !7134
  %and = and i32 %32, 2, !dbg !7135
  %tobool9 = icmp ne i32 %and, 0, !dbg !7135
  br i1 %tobool9, label %if.end34, label %land.lhs.true, !dbg !7136

land.lhs.true:                                    ; preds = %cond.end
  %33 = load i32*, i32** %value, align 8, !dbg !7137
  %34 = load i32, i32* %n, align 4, !dbg !7138
  %idxprom10 = zext i32 %34 to i64, !dbg !7137
  %arrayidx11 = getelementptr i32, i32* %33, i64 %idxprom10, !dbg !7137
  %35 = load i32, i32* %arrayidx11, align 4, !dbg !7137
  %36 = load i32, i32* %min, align 4, !dbg !7139
  %cmp12 = icmp sge i32 %35, %36, !dbg !7140
  br i1 %cmp12, label %land.lhs.true14, label %if.end34, !dbg !7141

land.lhs.true14:                                  ; preds = %land.lhs.true
  %37 = load i32*, i32** %value, align 8, !dbg !7142
  %38 = load i32, i32* %n, align 4, !dbg !7143
  %idxprom15 = zext i32 %38 to i64, !dbg !7142
  %arrayidx16 = getelementptr i32, i32* %37, i64 %idxprom15, !dbg !7142
  %39 = load i32, i32* %arrayidx16, align 4, !dbg !7142
  %40 = load i32, i32* %max, align 4, !dbg !7144
  %cmp17 = icmp sle i32 %39, %40, !dbg !7145
  br i1 %cmp17, label %land.lhs.true19, label %if.end34, !dbg !7146

land.lhs.true19:                                  ; preds = %land.lhs.true14
  %41 = load i32*, i32** %value, align 8, !dbg !7147
  %42 = load i32, i32* %n, align 4, !dbg !7148
  %idxprom20 = zext i32 %42 to i64, !dbg !7147
  %arrayidx21 = getelementptr i32, i32* %41, i64 %idxprom20, !dbg !7147
  %43 = load i32, i32* %arrayidx21, align 4, !dbg !7147
  %44 = load i32, i32* %min, align 4, !dbg !7149
  %sub = sub i32 %43, %44, !dbg !7150
  %45 = load %struct.hid_field*, %struct.hid_field** %field.addr, align 8, !dbg !7151
  %maxusage = getelementptr inbounds %struct.hid_field, %struct.hid_field* %45, i32 0, i32 4, !dbg !7152
  %46 = load i32, i32* %maxusage, align 8, !dbg !7152
  %cmp22 = icmp ult i32 %sub, %46, !dbg !7153
  br i1 %cmp22, label %land.lhs.true24, label %if.end34, !dbg !7154

land.lhs.true24:                                  ; preds = %land.lhs.true19
  %47 = load %struct.hid_field*, %struct.hid_field** %field.addr, align 8, !dbg !7155
  %usage = getelementptr inbounds %struct.hid_field, %struct.hid_field* %47, i32 0, i32 3, !dbg !7156
  %48 = load %struct.hid_usage*, %struct.hid_usage** %usage, align 8, !dbg !7156
  %49 = load i32*, i32** %value, align 8, !dbg !7157
  %50 = load i32, i32* %n, align 4, !dbg !7158
  %idxprom25 = zext i32 %50 to i64, !dbg !7157
  %arrayidx26 = getelementptr i32, i32* %49, i64 %idxprom25, !dbg !7157
  %51 = load i32, i32* %arrayidx26, align 4, !dbg !7157
  %52 = load i32, i32* %min, align 4, !dbg !7159
  %sub27 = sub i32 %51, %52, !dbg !7160
  %idxprom28 = sext i32 %sub27 to i64, !dbg !7155
  %arrayidx29 = getelementptr %struct.hid_usage, %struct.hid_usage* %48, i64 %idxprom28, !dbg !7155
  %hid30 = getelementptr inbounds %struct.hid_usage, %struct.hid_usage* %arrayidx29, i32 0, i32 0, !dbg !7161
  %53 = load i32, i32* %hid30, align 4, !dbg !7161
  %cmp31 = icmp eq i32 %53, 458753, !dbg !7162
  br i1 %cmp31, label %if.then33, label %if.end34, !dbg !7163

if.then33:                                        ; preds = %land.lhs.true24
  br label %exit, !dbg !7164

if.end34:                                         ; preds = %land.lhs.true24, %land.lhs.true19, %land.lhs.true14, %land.lhs.true, %cond.end
  br label %for.inc, !dbg !7165

for.inc:                                          ; preds = %if.end34
  %54 = load i32, i32* %n, align 4, !dbg !7166
  %inc = add i32 %54, 1, !dbg !7166
  store i32 %inc, i32* %n, align 4, !dbg !7166
  br label %for.cond, !dbg !7167, !llvm.loop !7168

for.end:                                          ; preds = %for.cond
  store i32 0, i32* %n, align 4, !dbg !7170
  br label %for.cond35, !dbg !7172

for.cond35:                                       ; preds = %for.inc132, %for.end
  %55 = load i32, i32* %n, align 4, !dbg !7173
  %56 = load i32, i32* %count, align 4, !dbg !7175
  %cmp36 = icmp ult i32 %55, %56, !dbg !7176
  br i1 %cmp36, label %for.body38, label %for.end134, !dbg !7177

for.body38:                                       ; preds = %for.cond35
  %57 = load %struct.hid_field*, %struct.hid_field** %field.addr, align 8, !dbg !7178
  %flags39 = getelementptr inbounds %struct.hid_field, %struct.hid_field* %57, i32 0, i32 5, !dbg !7181
  %58 = load i32, i32* %flags39, align 4, !dbg !7181
  %and40 = and i32 2, %58, !dbg !7182
  %tobool41 = icmp ne i32 %and40, 0, !dbg !7182
  br i1 %tobool41, label %if.then42, label %if.end48, !dbg !7183

if.then42:                                        ; preds = %for.body38
  %59 = load %struct.hid_device*, %struct.hid_device** %hid.addr, align 8, !dbg !7184
  %60 = load %struct.hid_field*, %struct.hid_field** %field.addr, align 8, !dbg !7186
  %61 = load %struct.hid_field*, %struct.hid_field** %field.addr, align 8, !dbg !7187
  %usage43 = getelementptr inbounds %struct.hid_field, %struct.hid_field* %61, i32 0, i32 3, !dbg !7188
  %62 = load %struct.hid_usage*, %struct.hid_usage** %usage43, align 8, !dbg !7188
  %63 = load i32, i32* %n, align 4, !dbg !7189
  %idxprom44 = zext i32 %63 to i64, !dbg !7187
  %arrayidx45 = getelementptr %struct.hid_usage, %struct.hid_usage* %62, i64 %idxprom44, !dbg !7187
  %64 = load i32*, i32** %value, align 8, !dbg !7190
  %65 = load i32, i32* %n, align 4, !dbg !7191
  %idxprom46 = zext i32 %65 to i64, !dbg !7190
  %arrayidx47 = getelementptr i32, i32* %64, i64 %idxprom46, !dbg !7190
  %66 = load i32, i32* %arrayidx47, align 4, !dbg !7190
  %67 = load i32, i32* %interrupt.addr, align 4, !dbg !7192
  call void @hid_process_event(%struct.hid_device* %59, %struct.hid_field* %60, %struct.hid_usage* %arrayidx45, i32 %66, i32 %67) #9, !dbg !7193
  br label %for.inc132, !dbg !7194

if.end48:                                         ; preds = %for.body38
  %68 = load %struct.hid_field*, %struct.hid_field** %field.addr, align 8, !dbg !7195
  %value49 = getelementptr inbounds %struct.hid_field, %struct.hid_field* %68, i32 0, i32 10, !dbg !7197
  %69 = load i32*, i32** %value49, align 8, !dbg !7197
  %70 = load i32, i32* %n, align 4, !dbg !7198
  %idxprom50 = zext i32 %70 to i64, !dbg !7195
  %arrayidx51 = getelementptr i32, i32* %69, i64 %idxprom50, !dbg !7195
  %71 = load i32, i32* %arrayidx51, align 4, !dbg !7195
  %72 = load i32, i32* %min, align 4, !dbg !7199
  %cmp52 = icmp sge i32 %71, %72, !dbg !7200
  br i1 %cmp52, label %land.lhs.true54, label %if.end92, !dbg !7201

land.lhs.true54:                                  ; preds = %if.end48
  %73 = load %struct.hid_field*, %struct.hid_field** %field.addr, align 8, !dbg !7202
  %value55 = getelementptr inbounds %struct.hid_field, %struct.hid_field* %73, i32 0, i32 10, !dbg !7203
  %74 = load i32*, i32** %value55, align 8, !dbg !7203
  %75 = load i32, i32* %n, align 4, !dbg !7204
  %idxprom56 = zext i32 %75 to i64, !dbg !7202
  %arrayidx57 = getelementptr i32, i32* %74, i64 %idxprom56, !dbg !7202
  %76 = load i32, i32* %arrayidx57, align 4, !dbg !7202
  %77 = load i32, i32* %max, align 4, !dbg !7205
  %cmp58 = icmp sle i32 %76, %77, !dbg !7206
  br i1 %cmp58, label %land.lhs.true60, label %if.end92, !dbg !7207

land.lhs.true60:                                  ; preds = %land.lhs.true54
  %78 = load %struct.hid_field*, %struct.hid_field** %field.addr, align 8, !dbg !7208
  %value61 = getelementptr inbounds %struct.hid_field, %struct.hid_field* %78, i32 0, i32 10, !dbg !7209
  %79 = load i32*, i32** %value61, align 8, !dbg !7209
  %80 = load i32, i32* %n, align 4, !dbg !7210
  %idxprom62 = zext i32 %80 to i64, !dbg !7208
  %arrayidx63 = getelementptr i32, i32* %79, i64 %idxprom62, !dbg !7208
  %81 = load i32, i32* %arrayidx63, align 4, !dbg !7208
  %82 = load i32, i32* %min, align 4, !dbg !7211
  %sub64 = sub i32 %81, %82, !dbg !7212
  %83 = load %struct.hid_field*, %struct.hid_field** %field.addr, align 8, !dbg !7213
  %maxusage65 = getelementptr inbounds %struct.hid_field, %struct.hid_field* %83, i32 0, i32 4, !dbg !7214
  %84 = load i32, i32* %maxusage65, align 8, !dbg !7214
  %cmp66 = icmp ult i32 %sub64, %84, !dbg !7215
  br i1 %cmp66, label %land.lhs.true68, label %if.end92, !dbg !7216

land.lhs.true68:                                  ; preds = %land.lhs.true60
  %85 = load %struct.hid_field*, %struct.hid_field** %field.addr, align 8, !dbg !7217
  %usage69 = getelementptr inbounds %struct.hid_field, %struct.hid_field* %85, i32 0, i32 3, !dbg !7218
  %86 = load %struct.hid_usage*, %struct.hid_usage** %usage69, align 8, !dbg !7218
  %87 = load %struct.hid_field*, %struct.hid_field** %field.addr, align 8, !dbg !7219
  %value70 = getelementptr inbounds %struct.hid_field, %struct.hid_field* %87, i32 0, i32 10, !dbg !7220
  %88 = load i32*, i32** %value70, align 8, !dbg !7220
  %89 = load i32, i32* %n, align 4, !dbg !7221
  %idxprom71 = zext i32 %89 to i64, !dbg !7219
  %arrayidx72 = getelementptr i32, i32* %88, i64 %idxprom71, !dbg !7219
  %90 = load i32, i32* %arrayidx72, align 4, !dbg !7219
  %91 = load i32, i32* %min, align 4, !dbg !7222
  %sub73 = sub i32 %90, %91, !dbg !7223
  %idxprom74 = sext i32 %sub73 to i64, !dbg !7217
  %arrayidx75 = getelementptr %struct.hid_usage, %struct.hid_usage* %86, i64 %idxprom74, !dbg !7217
  %hid76 = getelementptr inbounds %struct.hid_usage, %struct.hid_usage* %arrayidx75, i32 0, i32 0, !dbg !7224
  %92 = load i32, i32* %hid76, align 4, !dbg !7224
  %tobool77 = icmp ne i32 %92, 0, !dbg !7217
  br i1 %tobool77, label %land.lhs.true78, label %if.end92, !dbg !7225

land.lhs.true78:                                  ; preds = %land.lhs.true68
  %93 = load i32*, i32** %value, align 8, !dbg !7226
  %94 = load %struct.hid_field*, %struct.hid_field** %field.addr, align 8, !dbg !7227
  %value79 = getelementptr inbounds %struct.hid_field, %struct.hid_field* %94, i32 0, i32 10, !dbg !7228
  %95 = load i32*, i32** %value79, align 8, !dbg !7228
  %96 = load i32, i32* %n, align 4, !dbg !7229
  %idxprom80 = zext i32 %96 to i64, !dbg !7227
  %arrayidx81 = getelementptr i32, i32* %95, i64 %idxprom80, !dbg !7227
  %97 = load i32, i32* %arrayidx81, align 4, !dbg !7227
  %98 = load i32, i32* %count, align 4, !dbg !7230
  %call82 = call i32 @search(i32* %93, i32 %97, i32 %98) #9, !dbg !7231
  %tobool83 = icmp ne i32 %call82, 0, !dbg !7231
  br i1 %tobool83, label %if.then84, label %if.end92, !dbg !7232

if.then84:                                        ; preds = %land.lhs.true78
  %99 = load %struct.hid_device*, %struct.hid_device** %hid.addr, align 8, !dbg !7233
  %100 = load %struct.hid_field*, %struct.hid_field** %field.addr, align 8, !dbg !7234
  %101 = load %struct.hid_field*, %struct.hid_field** %field.addr, align 8, !dbg !7235
  %usage85 = getelementptr inbounds %struct.hid_field, %struct.hid_field* %101, i32 0, i32 3, !dbg !7236
  %102 = load %struct.hid_usage*, %struct.hid_usage** %usage85, align 8, !dbg !7236
  %103 = load %struct.hid_field*, %struct.hid_field** %field.addr, align 8, !dbg !7237
  %value86 = getelementptr inbounds %struct.hid_field, %struct.hid_field* %103, i32 0, i32 10, !dbg !7238
  %104 = load i32*, i32** %value86, align 8, !dbg !7238
  %105 = load i32, i32* %n, align 4, !dbg !7239
  %idxprom87 = zext i32 %105 to i64, !dbg !7237
  %arrayidx88 = getelementptr i32, i32* %104, i64 %idxprom87, !dbg !7237
  %106 = load i32, i32* %arrayidx88, align 4, !dbg !7237
  %107 = load i32, i32* %min, align 4, !dbg !7240
  %sub89 = sub i32 %106, %107, !dbg !7241
  %idxprom90 = sext i32 %sub89 to i64, !dbg !7235
  %arrayidx91 = getelementptr %struct.hid_usage, %struct.hid_usage* %102, i64 %idxprom90, !dbg !7235
  %108 = load i32, i32* %interrupt.addr, align 4, !dbg !7242
  call void @hid_process_event(%struct.hid_device* %99, %struct.hid_field* %100, %struct.hid_usage* %arrayidx91, i32 0, i32 %108) #9, !dbg !7243
  br label %if.end92, !dbg !7243

if.end92:                                         ; preds = %if.then84, %land.lhs.true78, %land.lhs.true68, %land.lhs.true60, %land.lhs.true54, %if.end48
  %109 = load i32*, i32** %value, align 8, !dbg !7244
  %110 = load i32, i32* %n, align 4, !dbg !7246
  %idxprom93 = zext i32 %110 to i64, !dbg !7244
  %arrayidx94 = getelementptr i32, i32* %109, i64 %idxprom93, !dbg !7244
  %111 = load i32, i32* %arrayidx94, align 4, !dbg !7244
  %112 = load i32, i32* %min, align 4, !dbg !7247
  %cmp95 = icmp sge i32 %111, %112, !dbg !7248
  br i1 %cmp95, label %land.lhs.true97, label %if.end131, !dbg !7249

land.lhs.true97:                                  ; preds = %if.end92
  %113 = load i32*, i32** %value, align 8, !dbg !7250
  %114 = load i32, i32* %n, align 4, !dbg !7251
  %idxprom98 = zext i32 %114 to i64, !dbg !7250
  %arrayidx99 = getelementptr i32, i32* %113, i64 %idxprom98, !dbg !7250
  %115 = load i32, i32* %arrayidx99, align 4, !dbg !7250
  %116 = load i32, i32* %max, align 4, !dbg !7252
  %cmp100 = icmp sle i32 %115, %116, !dbg !7253
  br i1 %cmp100, label %land.lhs.true102, label %if.end131, !dbg !7254

land.lhs.true102:                                 ; preds = %land.lhs.true97
  %117 = load i32*, i32** %value, align 8, !dbg !7255
  %118 = load i32, i32* %n, align 4, !dbg !7256
  %idxprom103 = zext i32 %118 to i64, !dbg !7255
  %arrayidx104 = getelementptr i32, i32* %117, i64 %idxprom103, !dbg !7255
  %119 = load i32, i32* %arrayidx104, align 4, !dbg !7255
  %120 = load i32, i32* %min, align 4, !dbg !7257
  %sub105 = sub i32 %119, %120, !dbg !7258
  %121 = load %struct.hid_field*, %struct.hid_field** %field.addr, align 8, !dbg !7259
  %maxusage106 = getelementptr inbounds %struct.hid_field, %struct.hid_field* %121, i32 0, i32 4, !dbg !7260
  %122 = load i32, i32* %maxusage106, align 8, !dbg !7260
  %cmp107 = icmp ult i32 %sub105, %122, !dbg !7261
  br i1 %cmp107, label %land.lhs.true109, label %if.end131, !dbg !7262

land.lhs.true109:                                 ; preds = %land.lhs.true102
  %123 = load %struct.hid_field*, %struct.hid_field** %field.addr, align 8, !dbg !7263
  %usage110 = getelementptr inbounds %struct.hid_field, %struct.hid_field* %123, i32 0, i32 3, !dbg !7264
  %124 = load %struct.hid_usage*, %struct.hid_usage** %usage110, align 8, !dbg !7264
  %125 = load i32*, i32** %value, align 8, !dbg !7265
  %126 = load i32, i32* %n, align 4, !dbg !7266
  %idxprom111 = zext i32 %126 to i64, !dbg !7265
  %arrayidx112 = getelementptr i32, i32* %125, i64 %idxprom111, !dbg !7265
  %127 = load i32, i32* %arrayidx112, align 4, !dbg !7265
  %128 = load i32, i32* %min, align 4, !dbg !7267
  %sub113 = sub i32 %127, %128, !dbg !7268
  %idxprom114 = sext i32 %sub113 to i64, !dbg !7263
  %arrayidx115 = getelementptr %struct.hid_usage, %struct.hid_usage* %124, i64 %idxprom114, !dbg !7263
  %hid116 = getelementptr inbounds %struct.hid_usage, %struct.hid_usage* %arrayidx115, i32 0, i32 0, !dbg !7269
  %129 = load i32, i32* %hid116, align 4, !dbg !7269
  %tobool117 = icmp ne i32 %129, 0, !dbg !7263
  br i1 %tobool117, label %land.lhs.true118, label %if.end131, !dbg !7270

land.lhs.true118:                                 ; preds = %land.lhs.true109
  %130 = load %struct.hid_field*, %struct.hid_field** %field.addr, align 8, !dbg !7271
  %value119 = getelementptr inbounds %struct.hid_field, %struct.hid_field* %130, i32 0, i32 10, !dbg !7272
  %131 = load i32*, i32** %value119, align 8, !dbg !7272
  %132 = load i32*, i32** %value, align 8, !dbg !7273
  %133 = load i32, i32* %n, align 4, !dbg !7274
  %idxprom120 = zext i32 %133 to i64, !dbg !7273
  %arrayidx121 = getelementptr i32, i32* %132, i64 %idxprom120, !dbg !7273
  %134 = load i32, i32* %arrayidx121, align 4, !dbg !7273
  %135 = load i32, i32* %count, align 4, !dbg !7275
  %call122 = call i32 @search(i32* %131, i32 %134, i32 %135) #9, !dbg !7276
  %tobool123 = icmp ne i32 %call122, 0, !dbg !7276
  br i1 %tobool123, label %if.then124, label %if.end131, !dbg !7277

if.then124:                                       ; preds = %land.lhs.true118
  %136 = load %struct.hid_device*, %struct.hid_device** %hid.addr, align 8, !dbg !7278
  %137 = load %struct.hid_field*, %struct.hid_field** %field.addr, align 8, !dbg !7279
  %138 = load %struct.hid_field*, %struct.hid_field** %field.addr, align 8, !dbg !7280
  %usage125 = getelementptr inbounds %struct.hid_field, %struct.hid_field* %138, i32 0, i32 3, !dbg !7281
  %139 = load %struct.hid_usage*, %struct.hid_usage** %usage125, align 8, !dbg !7281
  %140 = load i32*, i32** %value, align 8, !dbg !7282
  %141 = load i32, i32* %n, align 4, !dbg !7283
  %idxprom126 = zext i32 %141 to i64, !dbg !7282
  %arrayidx127 = getelementptr i32, i32* %140, i64 %idxprom126, !dbg !7282
  %142 = load i32, i32* %arrayidx127, align 4, !dbg !7282
  %143 = load i32, i32* %min, align 4, !dbg !7284
  %sub128 = sub i32 %142, %143, !dbg !7285
  %idxprom129 = sext i32 %sub128 to i64, !dbg !7280
  %arrayidx130 = getelementptr %struct.hid_usage, %struct.hid_usage* %139, i64 %idxprom129, !dbg !7280
  %144 = load i32, i32* %interrupt.addr, align 4, !dbg !7286
  call void @hid_process_event(%struct.hid_device* %136, %struct.hid_field* %137, %struct.hid_usage* %arrayidx130, i32 1, i32 %144) #9, !dbg !7287
  br label %if.end131, !dbg !7287

if.end131:                                        ; preds = %if.then124, %land.lhs.true118, %land.lhs.true109, %land.lhs.true102, %land.lhs.true97, %if.end92
  br label %for.inc132, !dbg !7288

for.inc132:                                       ; preds = %if.end131, %if.then42
  %145 = load i32, i32* %n, align 4, !dbg !7289
  %inc133 = add i32 %145, 1, !dbg !7289
  store i32 %inc133, i32* %n, align 4, !dbg !7289
  br label %for.cond35, !dbg !7290, !llvm.loop !7291

for.end134:                                       ; preds = %for.cond35
  %146 = load %struct.hid_field*, %struct.hid_field** %field.addr, align 8, !dbg !7293
  %value135 = getelementptr inbounds %struct.hid_field, %struct.hid_field* %146, i32 0, i32 10, !dbg !7294
  %147 = load i32*, i32** %value135, align 8, !dbg !7294
  %148 = bitcast i32* %147 to i8*, !dbg !7295
  %149 = load i32*, i32** %value, align 8, !dbg !7296
  %150 = bitcast i32* %149 to i8*, !dbg !7295
  %151 = load i32, i32* %count, align 4, !dbg !7297
  %conv136 = zext i32 %151 to i64, !dbg !7297
  %mul137 = mul i64 %conv136, 4, !dbg !7298
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %148, i8* align 4 %150, i64 %mul137, i1 false), !dbg !7295
  br label %exit, !dbg !7295

exit:                                             ; preds = %for.end134, %if.then33
  call void @llvm.dbg.label(metadata !7299), !dbg !7300
  %152 = load i32*, i32** %value, align 8, !dbg !7301
  %153 = bitcast i32* %152 to i8*, !dbg !7301
  call void @kfree(i8* %153) #9, !dbg !7302
  br label %return, !dbg !7303

return:                                           ; preds = %exit, %if.then
  ret void, !dbg !7303
}

; Function Attrs: noredzone
declare dso_local void @hidinput_report_event(%struct.hid_device*, %struct.hid_report*) #2

; Function Attrs: noredzone
declare dso_local i32 @down_trylock(%struct.semaphore*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @list_empty(%struct.list_head* %head) #0 !dbg !7304 {
entry:
  %head.addr = alloca %struct.list_head*, align 8
  %tmp = alloca %struct.list_head*, align 8
  store %struct.list_head* %head, %struct.list_head** %head.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %head.addr, metadata !7309, metadata !DIExpression()), !dbg !7310
  br label %do.body, !dbg !7311

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !7313

do.end:                                           ; preds = %do.body
  %0 = load %struct.list_head*, %struct.list_head** %head.addr, align 8, !dbg !7311
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %0, i32 0, i32 0, !dbg !7311
  %1 = load volatile %struct.list_head*, %struct.list_head** %next, align 8, !dbg !7311
  store %struct.list_head* %1, %struct.list_head** %tmp, align 8, !dbg !7313
  %2 = load %struct.list_head*, %struct.list_head** %tmp, align 8, !dbg !7311
  %3 = load %struct.list_head*, %struct.list_head** %head.addr, align 8, !dbg !7315
  %cmp = icmp eq %struct.list_head* %2, %3, !dbg !7316
  %conv = zext i1 %cmp to i32, !dbg !7316
  ret i32 %conv, !dbg !7317
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @hid_match_report(%struct.hid_device* %hid, %struct.hid_report* %report) #0 !dbg !7318 {
entry:
  %retval = alloca i32, align 4
  %hid.addr = alloca %struct.hid_device*, align 8
  %report.addr = alloca %struct.hid_report*, align 8
  %id = alloca %struct.hid_report_id*, align 8
  store %struct.hid_device* %hid, %struct.hid_device** %hid.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.hid_device** %hid.addr, metadata !7321, metadata !DIExpression()), !dbg !7322
  store %struct.hid_report* %report, %struct.hid_report** %report.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.hid_report** %report.addr, metadata !7323, metadata !DIExpression()), !dbg !7324
  call void @llvm.dbg.declare(metadata %struct.hid_report_id** %id, metadata !7325, metadata !DIExpression()), !dbg !7326
  %0 = load %struct.hid_device*, %struct.hid_device** %hid.addr, align 8, !dbg !7327
  %driver = getelementptr inbounds %struct.hid_device, %struct.hid_device* %0, i32 0, i32 19, !dbg !7328
  %1 = load %struct.hid_driver*, %struct.hid_driver** %driver, align 8, !dbg !7328
  %report_table = getelementptr inbounds %struct.hid_driver, %struct.hid_driver* %1, i32 0, i32 7, !dbg !7329
  %2 = load %struct.hid_report_id*, %struct.hid_report_id** %report_table, align 8, !dbg !7329
  store %struct.hid_report_id* %2, %struct.hid_report_id** %id, align 8, !dbg !7326
  %3 = load %struct.hid_report_id*, %struct.hid_report_id** %id, align 8, !dbg !7330
  %tobool = icmp ne %struct.hid_report_id* %3, null, !dbg !7330
  br i1 %tobool, label %if.end, label %if.then, !dbg !7332

if.then:                                          ; preds = %entry
  store i32 1, i32* %retval, align 4, !dbg !7333
  br label %return, !dbg !7333

if.end:                                           ; preds = %entry
  br label %for.cond, !dbg !7334

for.cond:                                         ; preds = %for.inc, %if.end
  %4 = load %struct.hid_report_id*, %struct.hid_report_id** %id, align 8, !dbg !7335
  %report_type = getelementptr inbounds %struct.hid_report_id, %struct.hid_report_id* %4, i32 0, i32 0, !dbg !7338
  %5 = load i32, i32* %report_type, align 4, !dbg !7338
  %cmp = icmp ne i32 %5, -2, !dbg !7339
  br i1 %cmp, label %for.body, label %for.end, !dbg !7340

for.body:                                         ; preds = %for.cond
  %6 = load %struct.hid_report_id*, %struct.hid_report_id** %id, align 8, !dbg !7341
  %report_type1 = getelementptr inbounds %struct.hid_report_id, %struct.hid_report_id* %6, i32 0, i32 0, !dbg !7343
  %7 = load i32, i32* %report_type1, align 4, !dbg !7343
  %cmp2 = icmp eq i32 %7, -1, !dbg !7344
  br i1 %cmp2, label %if.then5, label %lor.lhs.false, !dbg !7345

lor.lhs.false:                                    ; preds = %for.body
  %8 = load %struct.hid_report_id*, %struct.hid_report_id** %id, align 8, !dbg !7346
  %report_type3 = getelementptr inbounds %struct.hid_report_id, %struct.hid_report_id* %8, i32 0, i32 0, !dbg !7347
  %9 = load i32, i32* %report_type3, align 4, !dbg !7347
  %10 = load %struct.hid_report*, %struct.hid_report** %report.addr, align 8, !dbg !7348
  %type = getelementptr inbounds %struct.hid_report, %struct.hid_report* %10, i32 0, i32 3, !dbg !7349
  %11 = load i32, i32* %type, align 4, !dbg !7349
  %cmp4 = icmp eq i32 %9, %11, !dbg !7350
  br i1 %cmp4, label %if.then5, label %if.end6, !dbg !7351

if.then5:                                         ; preds = %lor.lhs.false, %for.body
  store i32 1, i32* %retval, align 4, !dbg !7352
  br label %return, !dbg !7352

if.end6:                                          ; preds = %lor.lhs.false
  br label %for.inc, !dbg !7349

for.inc:                                          ; preds = %if.end6
  %12 = load %struct.hid_report_id*, %struct.hid_report_id** %id, align 8, !dbg !7353
  %incdec.ptr = getelementptr %struct.hid_report_id, %struct.hid_report_id* %12, i32 1, !dbg !7353
  store %struct.hid_report_id* %incdec.ptr, %struct.hid_report_id** %id, align 8, !dbg !7353
  br label %for.cond, !dbg !7354, !llvm.loop !7355

for.end:                                          ; preds = %for.cond
  store i32 0, i32* %retval, align 4, !dbg !7357
  br label %return, !dbg !7357

return:                                           ; preds = %for.end, %if.then5, %if.then
  %13 = load i32, i32* %retval, align 4, !dbg !7358
  ret i32 %13, !dbg !7358
}

; Function Attrs: noredzone
declare dso_local void @up(%struct.semaphore*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local zeroext i1 @hid_match_one_id(%struct.hid_device* %hdev, %struct.hid_device_id* %id) #0 !dbg !7359 {
entry:
  %hdev.addr = alloca %struct.hid_device*, align 8
  %id.addr = alloca %struct.hid_device_id*, align 8
  store %struct.hid_device* %hdev, %struct.hid_device** %hdev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.hid_device** %hdev.addr, metadata !7362, metadata !DIExpression()), !dbg !7363
  store %struct.hid_device_id* %id, %struct.hid_device_id** %id.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.hid_device_id** %id.addr, metadata !7364, metadata !DIExpression()), !dbg !7365
  %0 = load %struct.hid_device_id*, %struct.hid_device_id** %id.addr, align 8, !dbg !7366
  %bus = getelementptr inbounds %struct.hid_device_id, %struct.hid_device_id* %0, i32 0, i32 0, !dbg !7367
  %1 = load i16, i16* %bus, align 8, !dbg !7367
  %conv = zext i16 %1 to i32, !dbg !7366
  %cmp = icmp eq i32 %conv, 65535, !dbg !7368
  br i1 %cmp, label %land.lhs.true, label %lor.lhs.false, !dbg !7369

lor.lhs.false:                                    ; preds = %entry
  %2 = load %struct.hid_device_id*, %struct.hid_device_id** %id.addr, align 8, !dbg !7370
  %bus2 = getelementptr inbounds %struct.hid_device_id, %struct.hid_device_id* %2, i32 0, i32 0, !dbg !7371
  %3 = load i16, i16* %bus2, align 8, !dbg !7371
  %conv3 = zext i16 %3 to i32, !dbg !7370
  %4 = load %struct.hid_device*, %struct.hid_device** %hdev.addr, align 8, !dbg !7372
  %bus4 = getelementptr inbounds %struct.hid_device, %struct.hid_device* %4, i32 0, i32 8, !dbg !7373
  %5 = load i16, i16* %bus4, align 4, !dbg !7373
  %conv5 = zext i16 %5 to i32, !dbg !7372
  %cmp6 = icmp eq i32 %conv3, %conv5, !dbg !7374
  br i1 %cmp6, label %land.lhs.true, label %land.end, !dbg !7375

land.lhs.true:                                    ; preds = %lor.lhs.false, %entry
  %6 = load %struct.hid_device_id*, %struct.hid_device_id** %id.addr, align 8, !dbg !7376
  %group = getelementptr inbounds %struct.hid_device_id, %struct.hid_device_id* %6, i32 0, i32 1, !dbg !7377
  %7 = load i16, i16* %group, align 2, !dbg !7377
  %conv8 = zext i16 %7 to i32, !dbg !7376
  %cmp9 = icmp eq i32 %conv8, 0, !dbg !7378
  br i1 %cmp9, label %land.lhs.true18, label %lor.lhs.false11, !dbg !7379

lor.lhs.false11:                                  ; preds = %land.lhs.true
  %8 = load %struct.hid_device_id*, %struct.hid_device_id** %id.addr, align 8, !dbg !7380
  %group12 = getelementptr inbounds %struct.hid_device_id, %struct.hid_device_id* %8, i32 0, i32 1, !dbg !7381
  %9 = load i16, i16* %group12, align 2, !dbg !7381
  %conv13 = zext i16 %9 to i32, !dbg !7380
  %10 = load %struct.hid_device*, %struct.hid_device** %hdev.addr, align 8, !dbg !7382
  %group14 = getelementptr inbounds %struct.hid_device, %struct.hid_device* %10, i32 0, i32 9, !dbg !7383
  %11 = load i16, i16* %group14, align 2, !dbg !7383
  %conv15 = zext i16 %11 to i32, !dbg !7382
  %cmp16 = icmp eq i32 %conv13, %conv15, !dbg !7384
  br i1 %cmp16, label %land.lhs.true18, label %land.end, !dbg !7385

land.lhs.true18:                                  ; preds = %lor.lhs.false11, %land.lhs.true
  %12 = load %struct.hid_device_id*, %struct.hid_device_id** %id.addr, align 8, !dbg !7386
  %vendor = getelementptr inbounds %struct.hid_device_id, %struct.hid_device_id* %12, i32 0, i32 2, !dbg !7387
  %13 = load i32, i32* %vendor, align 4, !dbg !7387
  %cmp19 = icmp eq i32 %13, -1, !dbg !7388
  br i1 %cmp19, label %land.rhs, label %lor.lhs.false21, !dbg !7389

lor.lhs.false21:                                  ; preds = %land.lhs.true18
  %14 = load %struct.hid_device_id*, %struct.hid_device_id** %id.addr, align 8, !dbg !7390
  %vendor22 = getelementptr inbounds %struct.hid_device_id, %struct.hid_device_id* %14, i32 0, i32 2, !dbg !7391
  %15 = load i32, i32* %vendor22, align 4, !dbg !7391
  %16 = load %struct.hid_device*, %struct.hid_device** %hdev.addr, align 8, !dbg !7392
  %vendor23 = getelementptr inbounds %struct.hid_device, %struct.hid_device* %16, i32 0, i32 10, !dbg !7393
  %17 = load i32, i32* %vendor23, align 8, !dbg !7393
  %cmp24 = icmp eq i32 %15, %17, !dbg !7394
  br i1 %cmp24, label %land.rhs, label %land.end, !dbg !7395

land.rhs:                                         ; preds = %lor.lhs.false21, %land.lhs.true18
  %18 = load %struct.hid_device_id*, %struct.hid_device_id** %id.addr, align 8, !dbg !7396
  %product = getelementptr inbounds %struct.hid_device_id, %struct.hid_device_id* %18, i32 0, i32 3, !dbg !7397
  %19 = load i32, i32* %product, align 8, !dbg !7397
  %cmp26 = icmp eq i32 %19, -1, !dbg !7398
  br i1 %cmp26, label %lor.end, label %lor.rhs, !dbg !7399

lor.rhs:                                          ; preds = %land.rhs
  %20 = load %struct.hid_device_id*, %struct.hid_device_id** %id.addr, align 8, !dbg !7400
  %product28 = getelementptr inbounds %struct.hid_device_id, %struct.hid_device_id* %20, i32 0, i32 3, !dbg !7401
  %21 = load i32, i32* %product28, align 8, !dbg !7401
  %22 = load %struct.hid_device*, %struct.hid_device** %hdev.addr, align 8, !dbg !7402
  %product29 = getelementptr inbounds %struct.hid_device, %struct.hid_device* %22, i32 0, i32 11, !dbg !7403
  %23 = load i32, i32* %product29, align 4, !dbg !7403
  %cmp30 = icmp eq i32 %21, %23, !dbg !7404
  br label %lor.end, !dbg !7399

lor.end:                                          ; preds = %lor.rhs, %land.rhs
  %24 = phi i1 [ true, %land.rhs ], [ %cmp30, %lor.rhs ]
  br label %land.end

land.end:                                         ; preds = %lor.end, %lor.lhs.false21, %lor.lhs.false11, %lor.lhs.false
  %25 = phi i1 [ false, %lor.lhs.false21 ], [ false, %lor.lhs.false11 ], [ false, %lor.lhs.false ], [ %24, %lor.end ], !dbg !7405
  ret i1 %25, !dbg !7406
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local %struct.hid_device_id* @hid_match_id(%struct.hid_device* %hdev, %struct.hid_device_id* %id) #0 !dbg !7407 {
entry:
  %retval = alloca %struct.hid_device_id*, align 8
  %hdev.addr = alloca %struct.hid_device*, align 8
  %id.addr = alloca %struct.hid_device_id*, align 8
  store %struct.hid_device* %hdev, %struct.hid_device** %hdev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.hid_device** %hdev.addr, metadata !7410, metadata !DIExpression()), !dbg !7411
  store %struct.hid_device_id* %id, %struct.hid_device_id** %id.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.hid_device_id** %id.addr, metadata !7412, metadata !DIExpression()), !dbg !7413
  br label %for.cond, !dbg !7414

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load %struct.hid_device_id*, %struct.hid_device_id** %id.addr, align 8, !dbg !7415
  %bus = getelementptr inbounds %struct.hid_device_id, %struct.hid_device_id* %0, i32 0, i32 0, !dbg !7418
  %1 = load i16, i16* %bus, align 8, !dbg !7418
  %tobool = icmp ne i16 %1, 0, !dbg !7419
  br i1 %tobool, label %for.body, label %for.end, !dbg !7419

for.body:                                         ; preds = %for.cond
  %2 = load %struct.hid_device*, %struct.hid_device** %hdev.addr, align 8, !dbg !7420
  %3 = load %struct.hid_device_id*, %struct.hid_device_id** %id.addr, align 8, !dbg !7422
  %call = call zeroext i1 @hid_match_one_id(%struct.hid_device* %2, %struct.hid_device_id* %3) #9, !dbg !7423
  br i1 %call, label %if.then, label %if.end, !dbg !7424

if.then:                                          ; preds = %for.body
  %4 = load %struct.hid_device_id*, %struct.hid_device_id** %id.addr, align 8, !dbg !7425
  store %struct.hid_device_id* %4, %struct.hid_device_id** %retval, align 8, !dbg !7426
  br label %return, !dbg !7426

if.end:                                           ; preds = %for.body
  br label %for.inc, !dbg !7427

for.inc:                                          ; preds = %if.end
  %5 = load %struct.hid_device_id*, %struct.hid_device_id** %id.addr, align 8, !dbg !7428
  %incdec.ptr = getelementptr %struct.hid_device_id, %struct.hid_device_id* %5, i32 1, !dbg !7428
  store %struct.hid_device_id* %incdec.ptr, %struct.hid_device_id** %id.addr, align 8, !dbg !7428
  br label %for.cond, !dbg !7429, !llvm.loop !7430

for.end:                                          ; preds = %for.cond
  store %struct.hid_device_id* null, %struct.hid_device_id** %retval, align 8, !dbg !7432
  br label %return, !dbg !7432

return:                                           ; preds = %for.end, %if.then
  %6 = load %struct.hid_device_id*, %struct.hid_device_id** %retval, align 8, !dbg !7433
  ret %struct.hid_device_id* %6, !dbg !7433
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @hid_connect(%struct.hid_device* %hdev, i32 %connect_mask) #0 !dbg !4363 {
entry:
  %retval = alloca i32, align 4
  %hdev.addr = alloca %struct.hid_device*, align 8
  %connect_mask.addr = alloca i32, align 4
  %type = alloca i8*, align 8
  %bus = alloca i8*, align 8
  %buf = alloca [64 x i8], align 16
  %i = alloca i32, align 4
  %len = alloca i32, align 4
  %ret = alloca i32, align 4
  %col = alloca %struct.hid_collection*, align 8
  store %struct.hid_device* %hdev, %struct.hid_device** %hdev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.hid_device** %hdev.addr, metadata !7434, metadata !DIExpression()), !dbg !7435
  store i32 %connect_mask, i32* %connect_mask.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %connect_mask.addr, metadata !7436, metadata !DIExpression()), !dbg !7437
  call void @llvm.dbg.declare(metadata i8** %type, metadata !7438, metadata !DIExpression()), !dbg !7439
  call void @llvm.dbg.declare(metadata i8** %bus, metadata !7440, metadata !DIExpression()), !dbg !7441
  call void @llvm.dbg.declare(metadata [64 x i8]* %buf, metadata !7442, metadata !DIExpression()), !dbg !7443
  %0 = bitcast [64 x i8]* %buf to i8*, !dbg !7443
  call void @llvm.memset.p0i8.i64(i8* align 16 %0, i8 0, i64 64, i1 false), !dbg !7443
  call void @llvm.dbg.declare(metadata i32* %i, metadata !7444, metadata !DIExpression()), !dbg !7445
  call void @llvm.dbg.declare(metadata i32* %len, metadata !7446, metadata !DIExpression()), !dbg !7447
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !7448, metadata !DIExpression()), !dbg !7449
  %1 = load %struct.hid_device*, %struct.hid_device** %hdev.addr, align 8, !dbg !7450
  %quirks = getelementptr inbounds %struct.hid_device, %struct.hid_device* %1, i32 0, i32 25, !dbg !7452
  %2 = load i32, i32* %quirks, align 4, !dbg !7452
  %conv = zext i32 %2 to i64, !dbg !7450
  %and = and i64 %conv, 16, !dbg !7453
  %tobool = icmp ne i64 %and, 0, !dbg !7453
  br i1 %tobool, label %if.then, label %if.end, !dbg !7454

if.then:                                          ; preds = %entry
  %3 = load i32, i32* %connect_mask.addr, align 4, !dbg !7455
  %conv1 = zext i32 %3 to i64, !dbg !7455
  %or = or i64 %conv1, 24, !dbg !7455
  %conv2 = trunc i64 %or to i32, !dbg !7455
  store i32 %conv2, i32* %connect_mask.addr, align 4, !dbg !7455
  br label %if.end, !dbg !7456

if.end:                                           ; preds = %if.then, %entry
  %4 = load %struct.hid_device*, %struct.hid_device** %hdev.addr, align 8, !dbg !7457
  %quirks3 = getelementptr inbounds %struct.hid_device, %struct.hid_device* %4, i32 0, i32 25, !dbg !7459
  %5 = load i32, i32* %quirks3, align 4, !dbg !7459
  %conv4 = zext i32 %5 to i64, !dbg !7457
  %and5 = and i64 %conv4, 128, !dbg !7460
  %tobool6 = icmp ne i64 %and5, 0, !dbg !7460
  br i1 %tobool6, label %if.then7, label %if.end11, !dbg !7461

if.then7:                                         ; preds = %if.end
  %6 = load i32, i32* %connect_mask.addr, align 4, !dbg !7462
  %conv8 = zext i32 %6 to i64, !dbg !7462
  %or9 = or i64 %conv8, 2, !dbg !7462
  %conv10 = trunc i64 %or9 to i32, !dbg !7462
  store i32 %conv10, i32* %connect_mask.addr, align 4, !dbg !7462
  br label %if.end11, !dbg !7463

if.end11:                                         ; preds = %if.then7, %if.end
  %7 = load %struct.hid_device*, %struct.hid_device** %hdev.addr, align 8, !dbg !7464
  %bus12 = getelementptr inbounds %struct.hid_device, %struct.hid_device* %7, i32 0, i32 8, !dbg !7466
  %8 = load i16, i16* %bus12, align 4, !dbg !7466
  %conv13 = zext i16 %8 to i32, !dbg !7464
  %cmp = icmp ne i32 %conv13, 3, !dbg !7467
  br i1 %cmp, label %if.then15, label %if.end19, !dbg !7468

if.then15:                                        ; preds = %if.end11
  %9 = load i32, i32* %connect_mask.addr, align 4, !dbg !7469
  %conv16 = zext i32 %9 to i64, !dbg !7469
  %and17 = and i64 %conv16, -9, !dbg !7469
  %conv18 = trunc i64 %and17 to i32, !dbg !7469
  store i32 %conv18, i32* %connect_mask.addr, align 4, !dbg !7469
  br label %if.end19, !dbg !7470

if.end19:                                         ; preds = %if.then15, %if.end11
  %10 = load %struct.hid_device*, %struct.hid_device** %hdev.addr, align 8, !dbg !7471
  %call = call zeroext i1 @hid_hiddev(%struct.hid_device* %10) #9, !dbg !7473
  br i1 %call, label %if.then20, label %if.end24, !dbg !7474

if.then20:                                        ; preds = %if.end19
  %11 = load i32, i32* %connect_mask.addr, align 4, !dbg !7475
  %conv21 = zext i32 %11 to i64, !dbg !7475
  %or22 = or i64 %conv21, 16, !dbg !7475
  %conv23 = trunc i64 %or22 to i32, !dbg !7475
  store i32 %conv23, i32* %connect_mask.addr, align 4, !dbg !7475
  br label %if.end24, !dbg !7476

if.end24:                                         ; preds = %if.then20, %if.end19
  %12 = load i32, i32* %connect_mask.addr, align 4, !dbg !7477
  %conv25 = zext i32 %12 to i64, !dbg !7477
  %and26 = and i64 %conv25, 1, !dbg !7479
  %tobool27 = icmp ne i64 %and26, 0, !dbg !7479
  br i1 %tobool27, label %land.lhs.true, label %if.end37, !dbg !7480

land.lhs.true:                                    ; preds = %if.end24
  %13 = load %struct.hid_device*, %struct.hid_device** %hdev.addr, align 8, !dbg !7481
  %14 = load i32, i32* %connect_mask.addr, align 4, !dbg !7482
  %conv28 = zext i32 %14 to i64, !dbg !7482
  %and29 = and i64 %conv28, 2, !dbg !7483
  %conv30 = trunc i64 %and29 to i32, !dbg !7482
  %call31 = call i32 @hidinput_connect(%struct.hid_device* %13, i32 %conv30) #9, !dbg !7484
  %tobool32 = icmp ne i32 %call31, 0, !dbg !7484
  br i1 %tobool32, label %if.end37, label %if.then33, !dbg !7485

if.then33:                                        ; preds = %land.lhs.true
  %15 = load %struct.hid_device*, %struct.hid_device** %hdev.addr, align 8, !dbg !7486
  %claimed = getelementptr inbounds %struct.hid_device, %struct.hid_device* %15, i32 0, i32 24, !dbg !7487
  %16 = load i32, i32* %claimed, align 8, !dbg !7488
  %conv34 = zext i32 %16 to i64, !dbg !7488
  %or35 = or i64 %conv34, 1, !dbg !7488
  %conv36 = trunc i64 %or35 to i32, !dbg !7488
  store i32 %conv36, i32* %claimed, align 8, !dbg !7488
  br label %if.end37, !dbg !7486

if.end37:                                         ; preds = %if.then33, %land.lhs.true, %if.end24
  %17 = load i32, i32* %connect_mask.addr, align 4, !dbg !7489
  %conv38 = zext i32 %17 to i64, !dbg !7489
  %and39 = and i64 %conv38, 8, !dbg !7491
  %tobool40 = icmp ne i64 %and39, 0, !dbg !7491
  br i1 %tobool40, label %land.lhs.true41, label %if.end55, !dbg !7492

land.lhs.true41:                                  ; preds = %if.end37
  %18 = load %struct.hid_device*, %struct.hid_device** %hdev.addr, align 8, !dbg !7493
  %hiddev_connect = getelementptr inbounds %struct.hid_device, %struct.hid_device* %18, i32 0, i32 35, !dbg !7494
  %19 = load i32 (%struct.hid_device*, i32)*, i32 (%struct.hid_device*, i32)** %hiddev_connect, align 8, !dbg !7494
  %tobool42 = icmp ne i32 (%struct.hid_device*, i32)* %19, null, !dbg !7493
  br i1 %tobool42, label %land.lhs.true43, label %if.end55, !dbg !7495

land.lhs.true43:                                  ; preds = %land.lhs.true41
  %20 = load %struct.hid_device*, %struct.hid_device** %hdev.addr, align 8, !dbg !7496
  %hiddev_connect44 = getelementptr inbounds %struct.hid_device, %struct.hid_device* %20, i32 0, i32 35, !dbg !7497
  %21 = load i32 (%struct.hid_device*, i32)*, i32 (%struct.hid_device*, i32)** %hiddev_connect44, align 8, !dbg !7497
  %22 = load %struct.hid_device*, %struct.hid_device** %hdev.addr, align 8, !dbg !7498
  %23 = load i32, i32* %connect_mask.addr, align 4, !dbg !7499
  %conv45 = zext i32 %23 to i64, !dbg !7499
  %and46 = and i64 %conv45, 16, !dbg !7500
  %conv47 = trunc i64 %and46 to i32, !dbg !7499
  %call48 = call i32 %21(%struct.hid_device* %22, i32 %conv47) #9, !dbg !7496
  %tobool49 = icmp ne i32 %call48, 0, !dbg !7496
  br i1 %tobool49, label %if.end55, label %if.then50, !dbg !7501

if.then50:                                        ; preds = %land.lhs.true43
  %24 = load %struct.hid_device*, %struct.hid_device** %hdev.addr, align 8, !dbg !7502
  %claimed51 = getelementptr inbounds %struct.hid_device, %struct.hid_device* %24, i32 0, i32 24, !dbg !7503
  %25 = load i32, i32* %claimed51, align 8, !dbg !7504
  %conv52 = zext i32 %25 to i64, !dbg !7504
  %or53 = or i64 %conv52, 2, !dbg !7504
  %conv54 = trunc i64 %or53 to i32, !dbg !7504
  store i32 %conv54, i32* %claimed51, align 8, !dbg !7504
  br label %if.end55, !dbg !7502

if.end55:                                         ; preds = %if.then50, %land.lhs.true43, %land.lhs.true41, %if.end37
  %26 = load i32, i32* %connect_mask.addr, align 4, !dbg !7505
  %conv56 = zext i32 %26 to i64, !dbg !7505
  %and57 = and i64 %conv56, 4, !dbg !7507
  %tobool58 = icmp ne i64 %and57, 0, !dbg !7507
  br i1 %tobool58, label %land.lhs.true59, label %if.end67, !dbg !7508

land.lhs.true59:                                  ; preds = %if.end55
  %27 = load %struct.hid_device*, %struct.hid_device** %hdev.addr, align 8, !dbg !7509
  %call60 = call i32 @hidraw_connect(%struct.hid_device* %27) #9, !dbg !7510
  %tobool61 = icmp ne i32 %call60, 0, !dbg !7510
  br i1 %tobool61, label %if.end67, label %if.then62, !dbg !7511

if.then62:                                        ; preds = %land.lhs.true59
  %28 = load %struct.hid_device*, %struct.hid_device** %hdev.addr, align 8, !dbg !7512
  %claimed63 = getelementptr inbounds %struct.hid_device, %struct.hid_device* %28, i32 0, i32 24, !dbg !7513
  %29 = load i32, i32* %claimed63, align 8, !dbg !7514
  %conv64 = zext i32 %29 to i64, !dbg !7514
  %or65 = or i64 %conv64, 4, !dbg !7514
  %conv66 = trunc i64 %or65 to i32, !dbg !7514
  store i32 %conv66, i32* %claimed63, align 8, !dbg !7514
  br label %if.end67, !dbg !7512

if.end67:                                         ; preds = %if.then62, %land.lhs.true59, %if.end55
  %30 = load i32, i32* %connect_mask.addr, align 4, !dbg !7515
  %conv68 = zext i32 %30 to i64, !dbg !7515
  %and69 = and i64 %conv68, 64, !dbg !7517
  %tobool70 = icmp ne i64 %and69, 0, !dbg !7517
  br i1 %tobool70, label %if.then71, label %if.end76, !dbg !7518

if.then71:                                        ; preds = %if.end67
  %31 = load %struct.hid_device*, %struct.hid_device** %hdev.addr, align 8, !dbg !7519
  %claimed72 = getelementptr inbounds %struct.hid_device, %struct.hid_device* %31, i32 0, i32 24, !dbg !7520
  %32 = load i32, i32* %claimed72, align 8, !dbg !7521
  %conv73 = zext i32 %32 to i64, !dbg !7521
  %or74 = or i64 %conv73, 8, !dbg !7521
  %conv75 = trunc i64 %or74 to i32, !dbg !7521
  store i32 %conv75, i32* %claimed72, align 8, !dbg !7521
  br label %if.end76, !dbg !7519

if.end76:                                         ; preds = %if.then71, %if.end67
  %33 = load %struct.hid_device*, %struct.hid_device** %hdev.addr, align 8, !dbg !7522
  %claimed77 = getelementptr inbounds %struct.hid_device, %struct.hid_device* %33, i32 0, i32 24, !dbg !7524
  %34 = load i32, i32* %claimed77, align 8, !dbg !7524
  %tobool78 = icmp ne i32 %34, 0, !dbg !7522
  br i1 %tobool78, label %if.end82, label %land.lhs.true79, !dbg !7525

land.lhs.true79:                                  ; preds = %if.end76
  %35 = load %struct.hid_device*, %struct.hid_device** %hdev.addr, align 8, !dbg !7526
  %driver = getelementptr inbounds %struct.hid_device, %struct.hid_device* %35, i32 0, i32 19, !dbg !7527
  %36 = load %struct.hid_driver*, %struct.hid_driver** %driver, align 8, !dbg !7527
  %raw_event = getelementptr inbounds %struct.hid_driver, %struct.hid_driver* %36, i32 0, i32 8, !dbg !7528
  %37 = load i32 (%struct.hid_device*, %struct.hid_report*, i8*, i32)*, i32 (%struct.hid_device*, %struct.hid_report*, i8*, i32)** %raw_event, align 8, !dbg !7528
  %tobool80 = icmp ne i32 (%struct.hid_device*, %struct.hid_report*, i8*, i32)* %37, null, !dbg !7526
  br i1 %tobool80, label %if.end82, label %if.then81, !dbg !7529

if.then81:                                        ; preds = %land.lhs.true79
  %38 = load %struct.hid_device*, %struct.hid_device** %hdev.addr, align 8, !dbg !7530
  %dev = getelementptr inbounds %struct.hid_device, %struct.hid_device* %38, i32 0, i32 18, !dbg !7530
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %dev, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.25, i64 0, i64 0)) #13, !dbg !7530
  store i32 -19, i32* %retval, align 4, !dbg !7532
  br label %return, !dbg !7532

if.end82:                                         ; preds = %land.lhs.true79, %if.end76
  %39 = load %struct.hid_device*, %struct.hid_device** %hdev.addr, align 8, !dbg !7533
  %claimed83 = getelementptr inbounds %struct.hid_device, %struct.hid_device* %39, i32 0, i32 24, !dbg !7535
  %40 = load i32, i32* %claimed83, align 8, !dbg !7535
  %conv84 = zext i32 %40 to i64, !dbg !7533
  %and85 = and i64 %conv84, 1, !dbg !7536
  %tobool86 = icmp ne i64 %and85, 0, !dbg !7536
  br i1 %tobool86, label %land.lhs.true87, label %if.end96, !dbg !7537

land.lhs.true87:                                  ; preds = %if.end82
  %41 = load i32, i32* %connect_mask.addr, align 4, !dbg !7538
  %conv88 = zext i32 %41 to i64, !dbg !7538
  %and89 = and i64 %conv88, 32, !dbg !7539
  %tobool90 = icmp ne i64 %and89, 0, !dbg !7539
  br i1 %tobool90, label %land.lhs.true91, label %if.end96, !dbg !7540

land.lhs.true91:                                  ; preds = %land.lhs.true87
  %42 = load %struct.hid_device*, %struct.hid_device** %hdev.addr, align 8, !dbg !7541
  %ff_init = getelementptr inbounds %struct.hid_device, %struct.hid_device* %42, i32 0, i32 34, !dbg !7542
  %43 = load i32 (%struct.hid_device*)*, i32 (%struct.hid_device*)** %ff_init, align 8, !dbg !7542
  %tobool92 = icmp ne i32 (%struct.hid_device*)* %43, null, !dbg !7541
  br i1 %tobool92, label %if.then93, label %if.end96, !dbg !7543

if.then93:                                        ; preds = %land.lhs.true91
  %44 = load %struct.hid_device*, %struct.hid_device** %hdev.addr, align 8, !dbg !7544
  %ff_init94 = getelementptr inbounds %struct.hid_device, %struct.hid_device* %44, i32 0, i32 34, !dbg !7545
  %45 = load i32 (%struct.hid_device*)*, i32 (%struct.hid_device*)** %ff_init94, align 8, !dbg !7545
  %46 = load %struct.hid_device*, %struct.hid_device** %hdev.addr, align 8, !dbg !7546
  %call95 = call i32 %45(%struct.hid_device* %46) #9, !dbg !7544
  br label %if.end96, !dbg !7544

if.end96:                                         ; preds = %if.then93, %land.lhs.true91, %land.lhs.true87, %if.end82
  store i32 0, i32* %len, align 4, !dbg !7547
  %47 = load %struct.hid_device*, %struct.hid_device** %hdev.addr, align 8, !dbg !7548
  %claimed97 = getelementptr inbounds %struct.hid_device, %struct.hid_device* %47, i32 0, i32 24, !dbg !7550
  %48 = load i32, i32* %claimed97, align 8, !dbg !7550
  %conv98 = zext i32 %48 to i64, !dbg !7548
  %and99 = and i64 %conv98, 1, !dbg !7551
  %tobool100 = icmp ne i64 %and99, 0, !dbg !7551
  br i1 %tobool100, label %if.then101, label %if.end103, !dbg !7552

if.then101:                                       ; preds = %if.end96
  %arraydecay = getelementptr inbounds [64 x i8], [64 x i8]* %buf, i64 0, i64 0, !dbg !7553
  %49 = load i32, i32* %len, align 4, !dbg !7554
  %idx.ext = sext i32 %49 to i64, !dbg !7555
  %add.ptr = getelementptr i8, i8* %arraydecay, i64 %idx.ext, !dbg !7555
  %call102 = call i32 (i8*, i8*, ...) @sprintf(i8* %add.ptr, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.26, i64 0, i64 0)) #9, !dbg !7556
  %50 = load i32, i32* %len, align 4, !dbg !7557
  %add = add i32 %50, %call102, !dbg !7557
  store i32 %add, i32* %len, align 4, !dbg !7557
  br label %if.end103, !dbg !7558

if.end103:                                        ; preds = %if.then101, %if.end96
  %51 = load %struct.hid_device*, %struct.hid_device** %hdev.addr, align 8, !dbg !7559
  %claimed104 = getelementptr inbounds %struct.hid_device, %struct.hid_device* %51, i32 0, i32 24, !dbg !7561
  %52 = load i32, i32* %claimed104, align 8, !dbg !7561
  %conv105 = zext i32 %52 to i64, !dbg !7559
  %and106 = and i64 %conv105, 2, !dbg !7562
  %tobool107 = icmp ne i64 %and106, 0, !dbg !7562
  br i1 %tobool107, label %if.then108, label %if.end115, !dbg !7563

if.then108:                                       ; preds = %if.end103
  %arraydecay109 = getelementptr inbounds [64 x i8], [64 x i8]* %buf, i64 0, i64 0, !dbg !7564
  %53 = load i32, i32* %len, align 4, !dbg !7565
  %idx.ext110 = sext i32 %53 to i64, !dbg !7566
  %add.ptr111 = getelementptr i8, i8* %arraydecay109, i64 %idx.ext110, !dbg !7566
  %54 = load i32, i32* %len, align 4, !dbg !7567
  %tobool112 = icmp ne i32 %54, 0, !dbg !7567
  %55 = zext i1 %tobool112 to i64, !dbg !7567
  %cond = select i1 %tobool112, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.28, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.29, i64 0, i64 0), !dbg !7567
  %56 = load %struct.hid_device*, %struct.hid_device** %hdev.addr, align 8, !dbg !7568
  %hiddev = getelementptr inbounds %struct.hid_device, %struct.hid_device* %56, i32 0, i32 28, !dbg !7569
  %57 = load i8*, i8** %hiddev, align 8, !dbg !7569
  %58 = bitcast i8* %57 to %struct.hiddev*, !dbg !7570
  %minor = getelementptr inbounds %struct.hiddev, %struct.hiddev* %58, i32 0, i32 0, !dbg !7571
  %59 = load i32, i32* %minor, align 8, !dbg !7571
  %call113 = call i32 (i8*, i8*, ...) @sprintf(i8* %add.ptr111, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.27, i64 0, i64 0), i8* %cond, i32 %59) #9, !dbg !7572
  %60 = load i32, i32* %len, align 4, !dbg !7573
  %add114 = add i32 %60, %call113, !dbg !7573
  store i32 %add114, i32* %len, align 4, !dbg !7573
  br label %if.end115, !dbg !7574

if.end115:                                        ; preds = %if.then108, %if.end103
  %61 = load %struct.hid_device*, %struct.hid_device** %hdev.addr, align 8, !dbg !7575
  %claimed116 = getelementptr inbounds %struct.hid_device, %struct.hid_device* %61, i32 0, i32 24, !dbg !7577
  %62 = load i32, i32* %claimed116, align 8, !dbg !7577
  %conv117 = zext i32 %62 to i64, !dbg !7575
  %and118 = and i64 %conv117, 4, !dbg !7578
  %tobool119 = icmp ne i64 %and118, 0, !dbg !7578
  br i1 %tobool119, label %if.then120, label %if.end129, !dbg !7579

if.then120:                                       ; preds = %if.end115
  %arraydecay121 = getelementptr inbounds [64 x i8], [64 x i8]* %buf, i64 0, i64 0, !dbg !7580
  %63 = load i32, i32* %len, align 4, !dbg !7581
  %idx.ext122 = sext i32 %63 to i64, !dbg !7582
  %add.ptr123 = getelementptr i8, i8* %arraydecay121, i64 %idx.ext122, !dbg !7582
  %64 = load i32, i32* %len, align 4, !dbg !7583
  %tobool124 = icmp ne i32 %64, 0, !dbg !7583
  %65 = zext i1 %tobool124 to i64, !dbg !7583
  %cond125 = select i1 %tobool124, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.28, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.29, i64 0, i64 0), !dbg !7583
  %66 = load %struct.hid_device*, %struct.hid_device** %hdev.addr, align 8, !dbg !7584
  %hidraw = getelementptr inbounds %struct.hid_device, %struct.hid_device* %66, i32 0, i32 29, !dbg !7585
  %67 = load i8*, i8** %hidraw, align 8, !dbg !7585
  %68 = bitcast i8* %67 to %struct.hidraw*, !dbg !7586
  %minor126 = getelementptr inbounds %struct.hidraw, %struct.hidraw* %68, i32 0, i32 0, !dbg !7587
  %69 = load i32, i32* %minor126, align 8, !dbg !7587
  %call127 = call i32 (i8*, i8*, ...) @sprintf(i8* %add.ptr123, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.30, i64 0, i64 0), i8* %cond125, i32 %69) #9, !dbg !7588
  %70 = load i32, i32* %len, align 4, !dbg !7589
  %add128 = add i32 %70, %call127, !dbg !7589
  store i32 %add128, i32* %len, align 4, !dbg !7589
  br label %if.end129, !dbg !7590

if.end129:                                        ; preds = %if.then120, %if.end115
  store i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.17, i64 0, i64 0), i8** %type, align 8, !dbg !7591
  store i32 0, i32* %i, align 4, !dbg !7592
  br label %for.cond, !dbg !7594

for.cond:                                         ; preds = %for.inc, %if.end129
  %71 = load i32, i32* %i, align 4, !dbg !7595
  %72 = load %struct.hid_device*, %struct.hid_device** %hdev.addr, align 8, !dbg !7597
  %maxcollection = getelementptr inbounds %struct.hid_device, %struct.hid_device* %72, i32 0, i32 6, !dbg !7598
  %73 = load i32, i32* %maxcollection, align 4, !dbg !7598
  %cmp130 = icmp ult i32 %71, %73, !dbg !7599
  br i1 %cmp130, label %for.body, label %for.end, !dbg !7600

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.hid_collection** %col, metadata !7601, metadata !DIExpression()), !dbg !7603
  %74 = load %struct.hid_device*, %struct.hid_device** %hdev.addr, align 8, !dbg !7604
  %collection = getelementptr inbounds %struct.hid_device, %struct.hid_device* %74, i32 0, i32 4, !dbg !7605
  %75 = load %struct.hid_collection*, %struct.hid_collection** %collection, align 8, !dbg !7605
  %76 = load i32, i32* %i, align 4, !dbg !7606
  %idxprom = zext i32 %76 to i64, !dbg !7604
  %arrayidx = getelementptr %struct.hid_collection, %struct.hid_collection* %75, i64 %idxprom, !dbg !7604
  store %struct.hid_collection* %arrayidx, %struct.hid_collection** %col, align 8, !dbg !7603
  %77 = load %struct.hid_collection*, %struct.hid_collection** %col, align 8, !dbg !7607
  %type132 = getelementptr inbounds %struct.hid_collection, %struct.hid_collection* %77, i32 0, i32 1, !dbg !7609
  %78 = load i32, i32* %type132, align 4, !dbg !7609
  %cmp133 = icmp eq i32 %78, 1, !dbg !7610
  br i1 %cmp133, label %land.lhs.true135, label %if.end150, !dbg !7611

land.lhs.true135:                                 ; preds = %for.body
  %79 = load %struct.hid_collection*, %struct.hid_collection** %col, align 8, !dbg !7612
  %usage = getelementptr inbounds %struct.hid_collection, %struct.hid_collection* %79, i32 0, i32 2, !dbg !7613
  %80 = load i32, i32* %usage, align 4, !dbg !7613
  %and136 = and i32 %80, -65536, !dbg !7614
  %cmp137 = icmp eq i32 %and136, 65536, !dbg !7615
  br i1 %cmp137, label %land.lhs.true139, label %if.end150, !dbg !7616

land.lhs.true139:                                 ; preds = %land.lhs.true135
  %81 = load %struct.hid_collection*, %struct.hid_collection** %col, align 8, !dbg !7617
  %usage140 = getelementptr inbounds %struct.hid_collection, %struct.hid_collection* %81, i32 0, i32 2, !dbg !7618
  %82 = load i32, i32* %usage140, align 4, !dbg !7618
  %and141 = and i32 %82, 65535, !dbg !7619
  %conv142 = zext i32 %and141 to i64, !dbg !7620
  %cmp143 = icmp ult i64 %conv142, 9, !dbg !7621
  br i1 %cmp143, label %if.then145, label %if.end150, !dbg !7622

if.then145:                                       ; preds = %land.lhs.true139
  %83 = load %struct.hid_collection*, %struct.hid_collection** %col, align 8, !dbg !7623
  %usage146 = getelementptr inbounds %struct.hid_collection, %struct.hid_collection* %83, i32 0, i32 2, !dbg !7625
  %84 = load i32, i32* %usage146, align 4, !dbg !7625
  %and147 = and i32 %84, 65535, !dbg !7626
  %idxprom148 = zext i32 %and147 to i64, !dbg !7627
  %arrayidx149 = getelementptr [9 x i8*], [9 x i8*]* @hid_connect.types, i64 0, i64 %idxprom148, !dbg !7627
  %85 = load i8*, i8** %arrayidx149, align 8, !dbg !7627
  store i8* %85, i8** %type, align 8, !dbg !7628
  br label %for.end, !dbg !7629

if.end150:                                        ; preds = %land.lhs.true139, %land.lhs.true135, %for.body
  br label %for.inc, !dbg !7630

for.inc:                                          ; preds = %if.end150
  %86 = load i32, i32* %i, align 4, !dbg !7631
  %inc = add i32 %86, 1, !dbg !7631
  store i32 %inc, i32* %i, align 4, !dbg !7631
  br label %for.cond, !dbg !7632, !llvm.loop !7633

for.end:                                          ; preds = %if.then145, %for.cond
  %87 = load %struct.hid_device*, %struct.hid_device** %hdev.addr, align 8, !dbg !7635
  %bus151 = getelementptr inbounds %struct.hid_device, %struct.hid_device* %87, i32 0, i32 8, !dbg !7636
  %88 = load i16, i16* %bus151, align 4, !dbg !7636
  %conv152 = zext i16 %88 to i32, !dbg !7635
  switch i32 %conv152, label %sw.default [
    i32 3, label %sw.bb
    i32 5, label %sw.bb153
    i32 24, label %sw.bb154
  ], !dbg !7637

sw.bb:                                            ; preds = %for.end
  store i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.31, i64 0, i64 0), i8** %bus, align 8, !dbg !7638
  br label %sw.epilog, !dbg !7640

sw.bb153:                                         ; preds = %for.end
  store i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.32, i64 0, i64 0), i8** %bus, align 8, !dbg !7641
  br label %sw.epilog, !dbg !7642

sw.bb154:                                         ; preds = %for.end
  store i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.33, i64 0, i64 0), i8** %bus, align 8, !dbg !7643
  br label %sw.epilog, !dbg !7644

sw.default:                                       ; preds = %for.end
  store i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.34, i64 0, i64 0), i8** %bus, align 8, !dbg !7645
  br label %sw.epilog, !dbg !7646

sw.epilog:                                        ; preds = %sw.default, %sw.bb154, %sw.bb153, %sw.bb
  %89 = load %struct.hid_device*, %struct.hid_device** %hdev.addr, align 8, !dbg !7647
  %dev155 = getelementptr inbounds %struct.hid_device, %struct.hid_device* %89, i32 0, i32 18, !dbg !7648
  %call156 = call i32 @device_create_file(%struct.device* %dev155, %struct.device_attribute* @dev_attr_country) #9, !dbg !7649
  store i32 %call156, i32* %ret, align 4, !dbg !7650
  %90 = load i32, i32* %ret, align 4, !dbg !7651
  %tobool157 = icmp ne i32 %90, 0, !dbg !7651
  br i1 %tobool157, label %if.then158, label %if.end160, !dbg !7653

if.then158:                                       ; preds = %sw.epilog
  %91 = load %struct.hid_device*, %struct.hid_device** %hdev.addr, align 8, !dbg !7654
  %dev159 = getelementptr inbounds %struct.hid_device, %struct.hid_device* %91, i32 0, i32 18, !dbg !7654
  %92 = load i32, i32* %ret, align 4, !dbg !7654
  call void (%struct.device*, i8*, ...) @_dev_warn(%struct.device* %dev159, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.35, i64 0, i64 0), i32 %92) #13, !dbg !7654
  br label %if.end160, !dbg !7654

if.end160:                                        ; preds = %if.then158, %sw.epilog
  %93 = load %struct.hid_device*, %struct.hid_device** %hdev.addr, align 8, !dbg !7655
  %dev161 = getelementptr inbounds %struct.hid_device, %struct.hid_device* %93, i32 0, i32 18, !dbg !7655
  %arraydecay162 = getelementptr inbounds [64 x i8], [64 x i8]* %buf, i64 0, i64 0, !dbg !7655
  %94 = load i8*, i8** %bus, align 8, !dbg !7655
  %95 = load %struct.hid_device*, %struct.hid_device** %hdev.addr, align 8, !dbg !7655
  %version = getelementptr inbounds %struct.hid_device, %struct.hid_device* %95, i32 0, i32 12, !dbg !7655
  %96 = load i32, i32* %version, align 8, !dbg !7655
  %shr = lshr i32 %96, 8, !dbg !7655
  %97 = load %struct.hid_device*, %struct.hid_device** %hdev.addr, align 8, !dbg !7655
  %version163 = getelementptr inbounds %struct.hid_device, %struct.hid_device* %97, i32 0, i32 12, !dbg !7655
  %98 = load i32, i32* %version163, align 8, !dbg !7655
  %and164 = and i32 %98, 255, !dbg !7655
  %99 = load i8*, i8** %type, align 8, !dbg !7655
  %100 = load %struct.hid_device*, %struct.hid_device** %hdev.addr, align 8, !dbg !7655
  %name = getelementptr inbounds %struct.hid_device, %struct.hid_device* %100, i32 0, i32 30, !dbg !7655
  %arraydecay165 = getelementptr inbounds [128 x i8], [128 x i8]* %name, i64 0, i64 0, !dbg !7655
  %101 = load %struct.hid_device*, %struct.hid_device** %hdev.addr, align 8, !dbg !7655
  %phys = getelementptr inbounds %struct.hid_device, %struct.hid_device* %101, i32 0, i32 31, !dbg !7655
  %arraydecay166 = getelementptr inbounds [64 x i8], [64 x i8]* %phys, i64 0, i64 0, !dbg !7655
  call void (%struct.device*, i8*, ...) @_dev_info(%struct.device* %dev161, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.36, i64 0, i64 0), i8* %arraydecay162, i8* %94, i32 %shr, i32 %and164, i8* %99, i8* %arraydecay165, i8* %arraydecay166) #13, !dbg !7655
  store i32 0, i32* %retval, align 4, !dbg !7656
  br label %return, !dbg !7656

return:                                           ; preds = %if.end160, %if.then81
  %102 = load i32, i32* %retval, align 4, !dbg !7657
  ret i32 %102, !dbg !7657
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @hid_hiddev(%struct.hid_device* %hdev) #0 !dbg !7658 {
entry:
  %hdev.addr = alloca %struct.hid_device*, align 8
  store %struct.hid_device* %hdev, %struct.hid_device** %hdev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.hid_device** %hdev.addr, metadata !7661, metadata !DIExpression()), !dbg !7662
  %0 = load %struct.hid_device*, %struct.hid_device** %hdev.addr, align 8, !dbg !7663
  %call = call %struct.hid_device_id* @hid_match_id(%struct.hid_device* %0, %struct.hid_device_id* getelementptr inbounds ([3 x %struct.hid_device_id], [3 x %struct.hid_device_id]* @hid_hiddev_list, i64 0, i64 0)) #9, !dbg !7664
  %tobool = icmp ne %struct.hid_device_id* %call, null, !dbg !7665
  %lnot = xor i1 %tobool, true, !dbg !7665
  %lnot1 = xor i1 %lnot, true, !dbg !7666
  ret i1 %lnot1, !dbg !7667
}

; Function Attrs: noredzone
declare dso_local i32 @hidinput_connect(%struct.hid_device*, i32) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @hidraw_connect(%struct.hid_device* %hid) #0 !dbg !7668 {
entry:
  %hid.addr = alloca %struct.hid_device*, align 8
  store %struct.hid_device* %hid, %struct.hid_device** %hid.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.hid_device** %hid.addr, metadata !7669, metadata !DIExpression()), !dbg !7670
  ret i32 -1, !dbg !7671
}

; Function Attrs: noredzone
declare dso_local i32 @sprintf(i8*, i8*, ...) #2

; Function Attrs: noredzone
declare dso_local i32 @device_create_file(%struct.device*, %struct.device_attribute*) #2

; Function Attrs: cold noredzone
declare dso_local void @_dev_info(%struct.device*, i8*, ...) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @hid_disconnect(%struct.hid_device* %hdev) #0 !dbg !7672 {
entry:
  %hdev.addr = alloca %struct.hid_device*, align 8
  store %struct.hid_device* %hdev, %struct.hid_device** %hdev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.hid_device** %hdev.addr, metadata !7673, metadata !DIExpression()), !dbg !7674
  %0 = load %struct.hid_device*, %struct.hid_device** %hdev.addr, align 8, !dbg !7675
  %dev = getelementptr inbounds %struct.hid_device, %struct.hid_device* %0, i32 0, i32 18, !dbg !7676
  call void @device_remove_file(%struct.device* %dev, %struct.device_attribute* @dev_attr_country) #9, !dbg !7677
  %1 = load %struct.hid_device*, %struct.hid_device** %hdev.addr, align 8, !dbg !7678
  %claimed = getelementptr inbounds %struct.hid_device, %struct.hid_device* %1, i32 0, i32 24, !dbg !7680
  %2 = load i32, i32* %claimed, align 8, !dbg !7680
  %conv = zext i32 %2 to i64, !dbg !7678
  %and = and i64 %conv, 1, !dbg !7681
  %tobool = icmp ne i64 %and, 0, !dbg !7681
  br i1 %tobool, label %if.then, label %if.end, !dbg !7682

if.then:                                          ; preds = %entry
  %3 = load %struct.hid_device*, %struct.hid_device** %hdev.addr, align 8, !dbg !7683
  call void @hidinput_disconnect(%struct.hid_device* %3) #9, !dbg !7684
  br label %if.end, !dbg !7684

if.end:                                           ; preds = %if.then, %entry
  %4 = load %struct.hid_device*, %struct.hid_device** %hdev.addr, align 8, !dbg !7685
  %claimed1 = getelementptr inbounds %struct.hid_device, %struct.hid_device* %4, i32 0, i32 24, !dbg !7687
  %5 = load i32, i32* %claimed1, align 8, !dbg !7687
  %conv2 = zext i32 %5 to i64, !dbg !7685
  %and3 = and i64 %conv2, 2, !dbg !7688
  %tobool4 = icmp ne i64 %and3, 0, !dbg !7688
  br i1 %tobool4, label %if.then5, label %if.end6, !dbg !7689

if.then5:                                         ; preds = %if.end
  %6 = load %struct.hid_device*, %struct.hid_device** %hdev.addr, align 8, !dbg !7690
  %hiddev_disconnect = getelementptr inbounds %struct.hid_device, %struct.hid_device* %6, i32 0, i32 36, !dbg !7691
  %7 = load void (%struct.hid_device*)*, void (%struct.hid_device*)** %hiddev_disconnect, align 8, !dbg !7691
  %8 = load %struct.hid_device*, %struct.hid_device** %hdev.addr, align 8, !dbg !7692
  call void %7(%struct.hid_device* %8) #9, !dbg !7690
  br label %if.end6, !dbg !7690

if.end6:                                          ; preds = %if.then5, %if.end
  %9 = load %struct.hid_device*, %struct.hid_device** %hdev.addr, align 8, !dbg !7693
  %claimed7 = getelementptr inbounds %struct.hid_device, %struct.hid_device* %9, i32 0, i32 24, !dbg !7695
  %10 = load i32, i32* %claimed7, align 8, !dbg !7695
  %conv8 = zext i32 %10 to i64, !dbg !7693
  %and9 = and i64 %conv8, 4, !dbg !7696
  %tobool10 = icmp ne i64 %and9, 0, !dbg !7696
  br i1 %tobool10, label %if.then11, label %if.end12, !dbg !7697

if.then11:                                        ; preds = %if.end6
  %11 = load %struct.hid_device*, %struct.hid_device** %hdev.addr, align 8, !dbg !7698
  call void @hidraw_disconnect(%struct.hid_device* %11) #9, !dbg !7699
  br label %if.end12, !dbg !7699

if.end12:                                         ; preds = %if.then11, %if.end6
  %12 = load %struct.hid_device*, %struct.hid_device** %hdev.addr, align 8, !dbg !7700
  %claimed13 = getelementptr inbounds %struct.hid_device, %struct.hid_device* %12, i32 0, i32 24, !dbg !7701
  store i32 0, i32* %claimed13, align 8, !dbg !7702
  ret void, !dbg !7703
}

; Function Attrs: noredzone
declare dso_local void @device_remove_file(%struct.device*, %struct.device_attribute*) #2

; Function Attrs: noredzone
declare dso_local void @hidinput_disconnect(%struct.hid_device*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @hidraw_disconnect(%struct.hid_device* %hid) #0 !dbg !7704 {
entry:
  %hid.addr = alloca %struct.hid_device*, align 8
  store %struct.hid_device* %hid, %struct.hid_device** %hid.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.hid_device** %hid.addr, metadata !7705, metadata !DIExpression()), !dbg !7706
  ret void, !dbg !7707
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @hid_hw_start(%struct.hid_device* %hdev, i32 %connect_mask) #0 !dbg !7708 {
entry:
  %retval = alloca i32, align 4
  %hdev.addr = alloca %struct.hid_device*, align 8
  %connect_mask.addr = alloca i32, align 4
  %error = alloca i32, align 4
  store %struct.hid_device* %hdev, %struct.hid_device** %hdev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.hid_device** %hdev.addr, metadata !7709, metadata !DIExpression()), !dbg !7710
  store i32 %connect_mask, i32* %connect_mask.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %connect_mask.addr, metadata !7711, metadata !DIExpression()), !dbg !7712
  call void @llvm.dbg.declare(metadata i32* %error, metadata !7713, metadata !DIExpression()), !dbg !7714
  %0 = load %struct.hid_device*, %struct.hid_device** %hdev.addr, align 8, !dbg !7715
  %ll_driver = getelementptr inbounds %struct.hid_device, %struct.hid_device* %0, i32 0, i32 20, !dbg !7716
  %1 = load %struct.hid_ll_driver*, %struct.hid_ll_driver** %ll_driver, align 8, !dbg !7716
  %start = getelementptr inbounds %struct.hid_ll_driver, %struct.hid_ll_driver* %1, i32 0, i32 0, !dbg !7717
  %2 = load i32 (%struct.hid_device*)*, i32 (%struct.hid_device*)** %start, align 8, !dbg !7717
  %3 = load %struct.hid_device*, %struct.hid_device** %hdev.addr, align 8, !dbg !7718
  %call = call i32 %2(%struct.hid_device* %3) #9, !dbg !7715
  store i32 %call, i32* %error, align 4, !dbg !7719
  %4 = load i32, i32* %error, align 4, !dbg !7720
  %tobool = icmp ne i32 %4, 0, !dbg !7720
  br i1 %tobool, label %if.then, label %if.end, !dbg !7722

if.then:                                          ; preds = %entry
  %5 = load i32, i32* %error, align 4, !dbg !7723
  store i32 %5, i32* %retval, align 4, !dbg !7724
  br label %return, !dbg !7724

if.end:                                           ; preds = %entry
  %6 = load i32, i32* %connect_mask.addr, align 4, !dbg !7725
  %tobool1 = icmp ne i32 %6, 0, !dbg !7725
  br i1 %tobool1, label %if.then2, label %if.end8, !dbg !7727

if.then2:                                         ; preds = %if.end
  %7 = load %struct.hid_device*, %struct.hid_device** %hdev.addr, align 8, !dbg !7728
  %8 = load i32, i32* %connect_mask.addr, align 4, !dbg !7730
  %call3 = call i32 @hid_connect(%struct.hid_device* %7, i32 %8) #9, !dbg !7731
  store i32 %call3, i32* %error, align 4, !dbg !7732
  %9 = load i32, i32* %error, align 4, !dbg !7733
  %tobool4 = icmp ne i32 %9, 0, !dbg !7733
  br i1 %tobool4, label %if.then5, label %if.end7, !dbg !7735

if.then5:                                         ; preds = %if.then2
  %10 = load %struct.hid_device*, %struct.hid_device** %hdev.addr, align 8, !dbg !7736
  %ll_driver6 = getelementptr inbounds %struct.hid_device, %struct.hid_device* %10, i32 0, i32 20, !dbg !7738
  %11 = load %struct.hid_ll_driver*, %struct.hid_ll_driver** %ll_driver6, align 8, !dbg !7738
  %stop = getelementptr inbounds %struct.hid_ll_driver, %struct.hid_ll_driver* %11, i32 0, i32 1, !dbg !7739
  %12 = load void (%struct.hid_device*)*, void (%struct.hid_device*)** %stop, align 8, !dbg !7739
  %13 = load %struct.hid_device*, %struct.hid_device** %hdev.addr, align 8, !dbg !7740
  call void %12(%struct.hid_device* %13) #9, !dbg !7736
  %14 = load i32, i32* %error, align 4, !dbg !7741
  store i32 %14, i32* %retval, align 4, !dbg !7742
  br label %return, !dbg !7742

if.end7:                                          ; preds = %if.then2
  br label %if.end8, !dbg !7743

if.end8:                                          ; preds = %if.end7, %if.end
  store i32 0, i32* %retval, align 4, !dbg !7744
  br label %return, !dbg !7744

return:                                           ; preds = %if.end8, %if.then5, %if.then
  %15 = load i32, i32* %retval, align 4, !dbg !7745
  ret i32 %15, !dbg !7745
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @hid_hw_stop(%struct.hid_device* %hdev) #0 !dbg !7746 {
entry:
  %hdev.addr = alloca %struct.hid_device*, align 8
  store %struct.hid_device* %hdev, %struct.hid_device** %hdev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.hid_device** %hdev.addr, metadata !7747, metadata !DIExpression()), !dbg !7748
  %0 = load %struct.hid_device*, %struct.hid_device** %hdev.addr, align 8, !dbg !7749
  call void @hid_disconnect(%struct.hid_device* %0) #9, !dbg !7750
  %1 = load %struct.hid_device*, %struct.hid_device** %hdev.addr, align 8, !dbg !7751
  %ll_driver = getelementptr inbounds %struct.hid_device, %struct.hid_device* %1, i32 0, i32 20, !dbg !7752
  %2 = load %struct.hid_ll_driver*, %struct.hid_ll_driver** %ll_driver, align 8, !dbg !7752
  %stop = getelementptr inbounds %struct.hid_ll_driver, %struct.hid_ll_driver* %2, i32 0, i32 1, !dbg !7753
  %3 = load void (%struct.hid_device*)*, void (%struct.hid_device*)** %stop, align 8, !dbg !7753
  %4 = load %struct.hid_device*, %struct.hid_device** %hdev.addr, align 8, !dbg !7754
  call void %3(%struct.hid_device* %4) #9, !dbg !7751
  ret void, !dbg !7755
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @hid_hw_open(%struct.hid_device* %hdev) #0 !dbg !7756 {
entry:
  %retval = alloca i32, align 4
  %hdev.addr = alloca %struct.hid_device*, align 8
  %ret = alloca i32, align 4
  store %struct.hid_device* %hdev, %struct.hid_device** %hdev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.hid_device** %hdev.addr, metadata !7757, metadata !DIExpression()), !dbg !7758
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !7759, metadata !DIExpression()), !dbg !7760
  %0 = load %struct.hid_device*, %struct.hid_device** %hdev.addr, align 8, !dbg !7761
  %ll_open_lock = getelementptr inbounds %struct.hid_device, %struct.hid_device* %0, i32 0, i32 21, !dbg !7762
  %call = call i32 @mutex_lock_killable(%struct.mutex* %ll_open_lock) #9, !dbg !7763
  store i32 %call, i32* %ret, align 4, !dbg !7764
  %1 = load i32, i32* %ret, align 4, !dbg !7765
  %tobool = icmp ne i32 %1, 0, !dbg !7765
  br i1 %tobool, label %if.then, label %if.end, !dbg !7767

if.then:                                          ; preds = %entry
  %2 = load i32, i32* %ret, align 4, !dbg !7768
  store i32 %2, i32* %retval, align 4, !dbg !7769
  br label %return, !dbg !7769

if.end:                                           ; preds = %entry
  %3 = load %struct.hid_device*, %struct.hid_device** %hdev.addr, align 8, !dbg !7770
  %ll_open_count = getelementptr inbounds %struct.hid_device, %struct.hid_device* %3, i32 0, i32 22, !dbg !7772
  %4 = load i32, i32* %ll_open_count, align 8, !dbg !7773
  %inc = add i32 %4, 1, !dbg !7773
  store i32 %inc, i32* %ll_open_count, align 8, !dbg !7773
  %tobool1 = icmp ne i32 %4, 0, !dbg !7773
  br i1 %tobool1, label %if.end8, label %if.then2, !dbg !7774

if.then2:                                         ; preds = %if.end
  %5 = load %struct.hid_device*, %struct.hid_device** %hdev.addr, align 8, !dbg !7775
  %ll_driver = getelementptr inbounds %struct.hid_device, %struct.hid_device* %5, i32 0, i32 20, !dbg !7777
  %6 = load %struct.hid_ll_driver*, %struct.hid_ll_driver** %ll_driver, align 8, !dbg !7777
  %open = getelementptr inbounds %struct.hid_ll_driver, %struct.hid_ll_driver* %6, i32 0, i32 2, !dbg !7778
  %7 = load i32 (%struct.hid_device*)*, i32 (%struct.hid_device*)** %open, align 8, !dbg !7778
  %8 = load %struct.hid_device*, %struct.hid_device** %hdev.addr, align 8, !dbg !7779
  %call3 = call i32 %7(%struct.hid_device* %8) #9, !dbg !7775
  store i32 %call3, i32* %ret, align 4, !dbg !7780
  %9 = load i32, i32* %ret, align 4, !dbg !7781
  %tobool4 = icmp ne i32 %9, 0, !dbg !7781
  br i1 %tobool4, label %if.then5, label %if.end7, !dbg !7783

if.then5:                                         ; preds = %if.then2
  %10 = load %struct.hid_device*, %struct.hid_device** %hdev.addr, align 8, !dbg !7784
  %ll_open_count6 = getelementptr inbounds %struct.hid_device, %struct.hid_device* %10, i32 0, i32 22, !dbg !7785
  %11 = load i32, i32* %ll_open_count6, align 8, !dbg !7786
  %dec = add i32 %11, -1, !dbg !7786
  store i32 %dec, i32* %ll_open_count6, align 8, !dbg !7786
  br label %if.end7, !dbg !7784

if.end7:                                          ; preds = %if.then5, %if.then2
  br label %if.end8, !dbg !7787

if.end8:                                          ; preds = %if.end7, %if.end
  %12 = load %struct.hid_device*, %struct.hid_device** %hdev.addr, align 8, !dbg !7788
  %ll_open_lock9 = getelementptr inbounds %struct.hid_device, %struct.hid_device* %12, i32 0, i32 21, !dbg !7789
  call void @mutex_unlock(%struct.mutex* %ll_open_lock9) #9, !dbg !7790
  %13 = load i32, i32* %ret, align 4, !dbg !7791
  store i32 %13, i32* %retval, align 4, !dbg !7792
  br label %return, !dbg !7792

return:                                           ; preds = %if.end8, %if.then
  %14 = load i32, i32* %retval, align 4, !dbg !7793
  ret i32 %14, !dbg !7793
}

; Function Attrs: noredzone
declare dso_local i32 @mutex_lock_killable(%struct.mutex*) #2

; Function Attrs: noredzone
declare dso_local void @mutex_unlock(%struct.mutex*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @hid_hw_close(%struct.hid_device* %hdev) #0 !dbg !7794 {
entry:
  %hdev.addr = alloca %struct.hid_device*, align 8
  store %struct.hid_device* %hdev, %struct.hid_device** %hdev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.hid_device** %hdev.addr, metadata !7795, metadata !DIExpression()), !dbg !7796
  %0 = load %struct.hid_device*, %struct.hid_device** %hdev.addr, align 8, !dbg !7797
  %ll_open_lock = getelementptr inbounds %struct.hid_device, %struct.hid_device* %0, i32 0, i32 21, !dbg !7798
  call void @mutex_lock(%struct.mutex* %ll_open_lock) #9, !dbg !7799
  %1 = load %struct.hid_device*, %struct.hid_device** %hdev.addr, align 8, !dbg !7800
  %ll_open_count = getelementptr inbounds %struct.hid_device, %struct.hid_device* %1, i32 0, i32 22, !dbg !7802
  %2 = load i32, i32* %ll_open_count, align 8, !dbg !7803
  %dec = add i32 %2, -1, !dbg !7803
  store i32 %dec, i32* %ll_open_count, align 8, !dbg !7803
  %tobool = icmp ne i32 %dec, 0, !dbg !7803
  br i1 %tobool, label %if.end, label %if.then, !dbg !7804

if.then:                                          ; preds = %entry
  %3 = load %struct.hid_device*, %struct.hid_device** %hdev.addr, align 8, !dbg !7805
  %ll_driver = getelementptr inbounds %struct.hid_device, %struct.hid_device* %3, i32 0, i32 20, !dbg !7806
  %4 = load %struct.hid_ll_driver*, %struct.hid_ll_driver** %ll_driver, align 8, !dbg !7806
  %close = getelementptr inbounds %struct.hid_ll_driver, %struct.hid_ll_driver* %4, i32 0, i32 3, !dbg !7807
  %5 = load void (%struct.hid_device*)*, void (%struct.hid_device*)** %close, align 8, !dbg !7807
  %6 = load %struct.hid_device*, %struct.hid_device** %hdev.addr, align 8, !dbg !7808
  call void %5(%struct.hid_device* %6) #9, !dbg !7805
  br label %if.end, !dbg !7805

if.end:                                           ; preds = %if.then, %entry
  %7 = load %struct.hid_device*, %struct.hid_device** %hdev.addr, align 8, !dbg !7809
  %ll_open_lock1 = getelementptr inbounds %struct.hid_device, %struct.hid_device* %7, i32 0, i32 21, !dbg !7810
  call void @mutex_unlock(%struct.mutex* %ll_open_lock1) #9, !dbg !7811
  ret void, !dbg !7812
}

; Function Attrs: noredzone
declare dso_local void @mutex_lock(%struct.mutex*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local %struct.hid_device_id* @hid_match_device(%struct.hid_device* %hdev, %struct.hid_driver* %hdrv) #0 !dbg !7813 {
entry:
  %lock.addr.i15 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i15, metadata !7816, metadata !DIExpression()), !dbg !7821
  %lock.addr.i13 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i13, metadata !7816, metadata !DIExpression()), !dbg !7823
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !7830, metadata !DIExpression()), !dbg !7832
  %retval = alloca %struct.hid_device_id*, align 8
  %hdev.addr = alloca %struct.hid_device*, align 8
  %hdrv.addr = alloca %struct.hid_driver*, align 8
  %dynid = alloca %struct.hid_dynid*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.hid_dynid*, align 8
  %__mptr4 = alloca i8*, align 8
  %tmp9 = alloca %struct.hid_dynid*, align 8
  store %struct.hid_device* %hdev, %struct.hid_device** %hdev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.hid_device** %hdev.addr, metadata !7834, metadata !DIExpression()), !dbg !7835
  store %struct.hid_driver* %hdrv, %struct.hid_driver** %hdrv.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.hid_driver** %hdrv.addr, metadata !7836, metadata !DIExpression()), !dbg !7837
  call void @llvm.dbg.declare(metadata %struct.hid_dynid** %dynid, metadata !7838, metadata !DIExpression()), !dbg !7839
  %0 = load %struct.hid_driver*, %struct.hid_driver** %hdrv.addr, align 8, !dbg !7840
  %dyn_lock = getelementptr inbounds %struct.hid_driver, %struct.hid_driver* %0, i32 0, i32 3, !dbg !7841
  store %struct.spinlock* %dyn_lock, %struct.spinlock** %lock.addr.i, align 8
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !7842, !srcloc !7844
  %1 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !7845
  %2 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %1, i32 0, i32 0, !dbg !7845
  %rlock.i = bitcast %union.anon.1* %2 to %struct.raw_spinlock*, !dbg !7845
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !7847, metadata !DIExpression()), !dbg !7849
  %3 = load %struct.hid_driver*, %struct.hid_driver** %hdrv.addr, align 8, !dbg !7849
  %dyn_list = getelementptr inbounds %struct.hid_driver, %struct.hid_driver* %3, i32 0, i32 2, !dbg !7849
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %dyn_list, i32 0, i32 0, !dbg !7849
  %4 = load %struct.list_head*, %struct.list_head** %next, align 8, !dbg !7849
  %5 = bitcast %struct.list_head* %4 to i8*, !dbg !7849
  store i8* %5, i8** %__mptr, align 8, !dbg !7849
  br label %do.body, !dbg !7849

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !7850

do.end:                                           ; preds = %do.body
  %6 = load i8*, i8** %__mptr, align 8, !dbg !7849
  %add.ptr = getelementptr i8, i8* %6, i64 0, !dbg !7849
  %7 = bitcast i8* %add.ptr to %struct.hid_dynid*, !dbg !7849
  store %struct.hid_dynid* %7, %struct.hid_dynid** %tmp, align 8, !dbg !7850
  %8 = load %struct.hid_dynid*, %struct.hid_dynid** %tmp, align 8, !dbg !7849
  store %struct.hid_dynid* %8, %struct.hid_dynid** %dynid, align 8, !dbg !7852
  br label %for.cond, !dbg !7852

for.cond:                                         ; preds = %do.end8, %do.end
  %9 = load %struct.hid_dynid*, %struct.hid_dynid** %dynid, align 8, !dbg !7853
  %list = getelementptr inbounds %struct.hid_dynid, %struct.hid_dynid* %9, i32 0, i32 0, !dbg !7853
  %10 = load %struct.hid_driver*, %struct.hid_driver** %hdrv.addr, align 8, !dbg !7853
  %dyn_list1 = getelementptr inbounds %struct.hid_driver, %struct.hid_driver* %10, i32 0, i32 2, !dbg !7853
  %cmp = icmp eq %struct.list_head* %list, %dyn_list1, !dbg !7853
  %lnot = xor i1 %cmp, true, !dbg !7853
  br i1 %lnot, label %for.body, label %for.end, !dbg !7852

for.body:                                         ; preds = %for.cond
  %11 = load %struct.hid_device*, %struct.hid_device** %hdev.addr, align 8, !dbg !7854
  %12 = load %struct.hid_dynid*, %struct.hid_dynid** %dynid, align 8, !dbg !7855
  %id = getelementptr inbounds %struct.hid_dynid, %struct.hid_dynid* %12, i32 0, i32 1, !dbg !7856
  %call = call zeroext i1 @hid_match_one_id(%struct.hid_device* %11, %struct.hid_device_id* %id) #9, !dbg !7857
  br i1 %call, label %if.then, label %if.end, !dbg !7858

if.then:                                          ; preds = %for.body
  %13 = load %struct.hid_driver*, %struct.hid_driver** %hdrv.addr, align 8, !dbg !7859
  %dyn_lock2 = getelementptr inbounds %struct.hid_driver, %struct.hid_driver* %13, i32 0, i32 3, !dbg !7860
  store %struct.spinlock* %dyn_lock2, %struct.spinlock** %lock.addr.i13, align 8
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !7861, !srcloc !7863
  %14 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i13, align 8, !dbg !7864
  %15 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %14, i32 0, i32 0, !dbg !7864
  %rlock.i14 = bitcast %union.anon.1* %15 to %struct.raw_spinlock*, !dbg !7864
  %16 = load %struct.hid_dynid*, %struct.hid_dynid** %dynid, align 8, !dbg !7866
  %id3 = getelementptr inbounds %struct.hid_dynid, %struct.hid_dynid* %16, i32 0, i32 1, !dbg !7867
  store %struct.hid_device_id* %id3, %struct.hid_device_id** %retval, align 8, !dbg !7868
  br label %return, !dbg !7868

if.end:                                           ; preds = %for.body
  br label %for.inc, !dbg !7869

for.inc:                                          ; preds = %if.end
  call void @llvm.dbg.declare(metadata i8** %__mptr4, metadata !7870, metadata !DIExpression()), !dbg !7872
  %17 = load %struct.hid_dynid*, %struct.hid_dynid** %dynid, align 8, !dbg !7872
  %list5 = getelementptr inbounds %struct.hid_dynid, %struct.hid_dynid* %17, i32 0, i32 0, !dbg !7872
  %next6 = getelementptr inbounds %struct.list_head, %struct.list_head* %list5, i32 0, i32 0, !dbg !7872
  %18 = load %struct.list_head*, %struct.list_head** %next6, align 8, !dbg !7872
  %19 = bitcast %struct.list_head* %18 to i8*, !dbg !7872
  store i8* %19, i8** %__mptr4, align 8, !dbg !7872
  br label %do.body7, !dbg !7872

do.body7:                                         ; preds = %for.inc
  br label %do.end8, !dbg !7873

do.end8:                                          ; preds = %do.body7
  %20 = load i8*, i8** %__mptr4, align 8, !dbg !7872
  %add.ptr10 = getelementptr i8, i8* %20, i64 0, !dbg !7872
  %21 = bitcast i8* %add.ptr10 to %struct.hid_dynid*, !dbg !7872
  store %struct.hid_dynid* %21, %struct.hid_dynid** %tmp9, align 8, !dbg !7873
  %22 = load %struct.hid_dynid*, %struct.hid_dynid** %tmp9, align 8, !dbg !7872
  store %struct.hid_dynid* %22, %struct.hid_dynid** %dynid, align 8, !dbg !7853
  br label %for.cond, !dbg !7853, !llvm.loop !7875

for.end:                                          ; preds = %for.cond
  %23 = load %struct.hid_driver*, %struct.hid_driver** %hdrv.addr, align 8, !dbg !7877
  %dyn_lock11 = getelementptr inbounds %struct.hid_driver, %struct.hid_driver* %23, i32 0, i32 3, !dbg !7878
  store %struct.spinlock* %dyn_lock11, %struct.spinlock** %lock.addr.i15, align 8
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !7879, !srcloc !7863
  %24 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i15, align 8, !dbg !7880
  %25 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %24, i32 0, i32 0, !dbg !7880
  %rlock.i16 = bitcast %union.anon.1* %25 to %struct.raw_spinlock*, !dbg !7880
  %26 = load %struct.hid_device*, %struct.hid_device** %hdev.addr, align 8, !dbg !7881
  %27 = load %struct.hid_driver*, %struct.hid_driver** %hdrv.addr, align 8, !dbg !7882
  %id_table = getelementptr inbounds %struct.hid_driver, %struct.hid_driver* %27, i32 0, i32 1, !dbg !7883
  %28 = load %struct.hid_device_id*, %struct.hid_device_id** %id_table, align 8, !dbg !7883
  %call12 = call %struct.hid_device_id* @hid_match_id(%struct.hid_device* %26, %struct.hid_device_id* %28) #9, !dbg !7884
  store %struct.hid_device_id* %call12, %struct.hid_device_id** %retval, align 8, !dbg !7885
  br label %return, !dbg !7885

return:                                           ; preds = %for.end, %if.then
  %29 = load %struct.hid_device_id*, %struct.hid_device_id** %retval, align 8, !dbg !7886
  ret %struct.hid_device_id* %29, !dbg !7886
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local zeroext i1 @hid_compare_device_paths(%struct.hid_device* %hdev_a, %struct.hid_device* %hdev_b, i8 signext %separator) #0 !dbg !7887 {
entry:
  %retval = alloca i1, align 1
  %hdev_a.addr = alloca %struct.hid_device*, align 8
  %hdev_b.addr = alloca %struct.hid_device*, align 8
  %separator.addr = alloca i8, align 1
  %n1 = alloca i32, align 4
  %n2 = alloca i32, align 4
  store %struct.hid_device* %hdev_a, %struct.hid_device** %hdev_a.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.hid_device** %hdev_a.addr, metadata !7890, metadata !DIExpression()), !dbg !7891
  store %struct.hid_device* %hdev_b, %struct.hid_device** %hdev_b.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.hid_device** %hdev_b.addr, metadata !7892, metadata !DIExpression()), !dbg !7893
  store i8 %separator, i8* %separator.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %separator.addr, metadata !7894, metadata !DIExpression()), !dbg !7895
  call void @llvm.dbg.declare(metadata i32* %n1, metadata !7896, metadata !DIExpression()), !dbg !7897
  %0 = load %struct.hid_device*, %struct.hid_device** %hdev_a.addr, align 8, !dbg !7898
  %phys = getelementptr inbounds %struct.hid_device, %struct.hid_device* %0, i32 0, i32 31, !dbg !7899
  %arraydecay = getelementptr inbounds [64 x i8], [64 x i8]* %phys, i64 0, i64 0, !dbg !7898
  %1 = load i8, i8* %separator.addr, align 1, !dbg !7900
  %conv = sext i8 %1 to i32, !dbg !7900
  %call = call i8* @strrchr(i8* %arraydecay, i32 %conv) #9, !dbg !7901
  %2 = load %struct.hid_device*, %struct.hid_device** %hdev_a.addr, align 8, !dbg !7902
  %phys1 = getelementptr inbounds %struct.hid_device, %struct.hid_device* %2, i32 0, i32 31, !dbg !7903
  %arraydecay2 = getelementptr inbounds [64 x i8], [64 x i8]* %phys1, i64 0, i64 0, !dbg !7902
  %sub.ptr.lhs.cast = ptrtoint i8* %call to i64, !dbg !7904
  %sub.ptr.rhs.cast = ptrtoint i8* %arraydecay2 to i64, !dbg !7904
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !7904
  %conv3 = trunc i64 %sub.ptr.sub to i32, !dbg !7901
  store i32 %conv3, i32* %n1, align 4, !dbg !7897
  call void @llvm.dbg.declare(metadata i32* %n2, metadata !7905, metadata !DIExpression()), !dbg !7906
  %3 = load %struct.hid_device*, %struct.hid_device** %hdev_b.addr, align 8, !dbg !7907
  %phys4 = getelementptr inbounds %struct.hid_device, %struct.hid_device* %3, i32 0, i32 31, !dbg !7908
  %arraydecay5 = getelementptr inbounds [64 x i8], [64 x i8]* %phys4, i64 0, i64 0, !dbg !7907
  %4 = load i8, i8* %separator.addr, align 1, !dbg !7909
  %conv6 = sext i8 %4 to i32, !dbg !7909
  %call7 = call i8* @strrchr(i8* %arraydecay5, i32 %conv6) #9, !dbg !7910
  %5 = load %struct.hid_device*, %struct.hid_device** %hdev_b.addr, align 8, !dbg !7911
  %phys8 = getelementptr inbounds %struct.hid_device, %struct.hid_device* %5, i32 0, i32 31, !dbg !7912
  %arraydecay9 = getelementptr inbounds [64 x i8], [64 x i8]* %phys8, i64 0, i64 0, !dbg !7911
  %sub.ptr.lhs.cast10 = ptrtoint i8* %call7 to i64, !dbg !7913
  %sub.ptr.rhs.cast11 = ptrtoint i8* %arraydecay9 to i64, !dbg !7913
  %sub.ptr.sub12 = sub i64 %sub.ptr.lhs.cast10, %sub.ptr.rhs.cast11, !dbg !7913
  %conv13 = trunc i64 %sub.ptr.sub12 to i32, !dbg !7910
  store i32 %conv13, i32* %n2, align 4, !dbg !7906
  %6 = load i32, i32* %n1, align 4, !dbg !7914
  %7 = load i32, i32* %n2, align 4, !dbg !7916
  %cmp = icmp ne i32 %6, %7, !dbg !7917
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !7918

lor.lhs.false:                                    ; preds = %entry
  %8 = load i32, i32* %n1, align 4, !dbg !7919
  %cmp15 = icmp sle i32 %8, 0, !dbg !7920
  br i1 %cmp15, label %if.then, label %lor.lhs.false17, !dbg !7921

lor.lhs.false17:                                  ; preds = %lor.lhs.false
  %9 = load i32, i32* %n2, align 4, !dbg !7922
  %cmp18 = icmp sle i32 %9, 0, !dbg !7923
  br i1 %cmp18, label %if.then, label %if.end, !dbg !7924

if.then:                                          ; preds = %lor.lhs.false17, %lor.lhs.false, %entry
  store i1 false, i1* %retval, align 1, !dbg !7925
  br label %return, !dbg !7925

if.end:                                           ; preds = %lor.lhs.false17
  %10 = load %struct.hid_device*, %struct.hid_device** %hdev_a.addr, align 8, !dbg !7926
  %phys20 = getelementptr inbounds %struct.hid_device, %struct.hid_device* %10, i32 0, i32 31, !dbg !7927
  %arraydecay21 = getelementptr inbounds [64 x i8], [64 x i8]* %phys20, i64 0, i64 0, !dbg !7926
  %11 = load %struct.hid_device*, %struct.hid_device** %hdev_b.addr, align 8, !dbg !7928
  %phys22 = getelementptr inbounds %struct.hid_device, %struct.hid_device* %11, i32 0, i32 31, !dbg !7929
  %arraydecay23 = getelementptr inbounds [64 x i8], [64 x i8]* %phys22, i64 0, i64 0, !dbg !7928
  %12 = load i32, i32* %n1, align 4, !dbg !7930
  %conv24 = sext i32 %12 to i64, !dbg !7930
  %call25 = call i32 @strncmp(i8* %arraydecay21, i8* %arraydecay23, i64 %conv24) #9, !dbg !7931
  %tobool = icmp ne i32 %call25, 0, !dbg !7932
  %lnot = xor i1 %tobool, true, !dbg !7932
  store i1 %lnot, i1* %retval, align 1, !dbg !7933
  br label %return, !dbg !7933

return:                                           ; preds = %if.end, %if.then
  %13 = load i1, i1* %retval, align 1, !dbg !7934
  ret i1 %13, !dbg !7934
}

; Function Attrs: noredzone
declare dso_local i8* @strrchr(i8*, i32) #2

; Function Attrs: noredzone
declare dso_local i32 @strncmp(i8*, i8*, i64) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @hid_bus_match(%struct.device* %dev, %struct.device_driver* %drv) #0 !dbg !7935 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %drv.addr = alloca %struct.device_driver*, align 8
  %hdrv = alloca %struct.hid_driver*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.hid_driver*, align 8
  %hdev = alloca %struct.hid_device*, align 8
  %__mptr1 = alloca i8*, align 8
  %tmp4 = alloca %struct.hid_device*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !7936, metadata !DIExpression()), !dbg !7937
  store %struct.device_driver* %drv, %struct.device_driver** %drv.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device_driver** %drv.addr, metadata !7938, metadata !DIExpression()), !dbg !7939
  call void @llvm.dbg.declare(metadata %struct.hid_driver** %hdrv, metadata !7940, metadata !DIExpression()), !dbg !7941
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !7942, metadata !DIExpression()), !dbg !7944
  %0 = load %struct.device_driver*, %struct.device_driver** %drv.addr, align 8, !dbg !7944
  %1 = bitcast %struct.device_driver* %0 to i8*, !dbg !7944
  store i8* %1, i8** %__mptr, align 8, !dbg !7944
  br label %do.body, !dbg !7944

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !7945

do.end:                                           ; preds = %do.body
  %2 = load i8*, i8** %__mptr, align 8, !dbg !7944
  %add.ptr = getelementptr i8, i8* %2, i64 -160, !dbg !7944
  %3 = bitcast i8* %add.ptr to %struct.hid_driver*, !dbg !7944
  store %struct.hid_driver* %3, %struct.hid_driver** %tmp, align 8, !dbg !7945
  %4 = load %struct.hid_driver*, %struct.hid_driver** %tmp, align 8, !dbg !7944
  store %struct.hid_driver* %4, %struct.hid_driver** %hdrv, align 8, !dbg !7941
  call void @llvm.dbg.declare(metadata %struct.hid_device** %hdev, metadata !7947, metadata !DIExpression()), !dbg !7948
  call void @llvm.dbg.declare(metadata i8** %__mptr1, metadata !7949, metadata !DIExpression()), !dbg !7951
  %5 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !7951
  %6 = bitcast %struct.device* %5 to i8*, !dbg !7951
  store i8* %6, i8** %__mptr1, align 8, !dbg !7951
  br label %do.body2, !dbg !7951

do.body2:                                         ; preds = %do.end
  br label %do.end3, !dbg !7952

do.end3:                                          ; preds = %do.body2
  %7 = load i8*, i8** %__mptr1, align 8, !dbg !7951
  %add.ptr5 = getelementptr i8, i8* %7, i64 -6352, !dbg !7951
  %8 = bitcast i8* %add.ptr5 to %struct.hid_device*, !dbg !7951
  store %struct.hid_device* %8, %struct.hid_device** %tmp4, align 8, !dbg !7952
  %9 = load %struct.hid_device*, %struct.hid_device** %tmp4, align 8, !dbg !7951
  store %struct.hid_device* %9, %struct.hid_device** %hdev, align 8, !dbg !7948
  %10 = load %struct.hid_device*, %struct.hid_device** %hdev, align 8, !dbg !7954
  %11 = load %struct.hid_driver*, %struct.hid_driver** %hdrv, align 8, !dbg !7955
  %call = call %struct.hid_device_id* @hid_match_device(%struct.hid_device* %10, %struct.hid_driver* %11) #9, !dbg !7956
  %cmp = icmp ne %struct.hid_device_id* %call, null, !dbg !7957
  %conv = zext i1 %cmp to i32, !dbg !7957
  ret i32 %conv, !dbg !7958
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @hid_uevent(%struct.device* %dev, %struct.kobj_uevent_env* %env) #0 !dbg !7959 {
entry:
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.device*, align 8
  %env.addr = alloca %struct.kobj_uevent_env*, align 8
  %hdev = alloca %struct.hid_device*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.hid_device*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !7960, metadata !DIExpression()), !dbg !7961
  store %struct.kobj_uevent_env* %env, %struct.kobj_uevent_env** %env.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.kobj_uevent_env** %env.addr, metadata !7962, metadata !DIExpression()), !dbg !7963
  call void @llvm.dbg.declare(metadata %struct.hid_device** %hdev, metadata !7964, metadata !DIExpression()), !dbg !7965
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !7966, metadata !DIExpression()), !dbg !7968
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !7968
  %1 = bitcast %struct.device* %0 to i8*, !dbg !7968
  store i8* %1, i8** %__mptr, align 8, !dbg !7968
  br label %do.body, !dbg !7968

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !7969

do.end:                                           ; preds = %do.body
  %2 = load i8*, i8** %__mptr, align 8, !dbg !7968
  %add.ptr = getelementptr i8, i8* %2, i64 -6352, !dbg !7968
  %3 = bitcast i8* %add.ptr to %struct.hid_device*, !dbg !7968
  store %struct.hid_device* %3, %struct.hid_device** %tmp, align 8, !dbg !7969
  %4 = load %struct.hid_device*, %struct.hid_device** %tmp, align 8, !dbg !7968
  store %struct.hid_device* %4, %struct.hid_device** %hdev, align 8, !dbg !7965
  %5 = load %struct.kobj_uevent_env*, %struct.kobj_uevent_env** %env.addr, align 8, !dbg !7971
  %6 = load %struct.hid_device*, %struct.hid_device** %hdev, align 8, !dbg !7973
  %bus = getelementptr inbounds %struct.hid_device, %struct.hid_device* %6, i32 0, i32 8, !dbg !7974
  %7 = load i16, i16* %bus, align 4, !dbg !7974
  %conv = zext i16 %7 to i32, !dbg !7973
  %8 = load %struct.hid_device*, %struct.hid_device** %hdev, align 8, !dbg !7975
  %vendor = getelementptr inbounds %struct.hid_device, %struct.hid_device* %8, i32 0, i32 10, !dbg !7976
  %9 = load i32, i32* %vendor, align 8, !dbg !7976
  %10 = load %struct.hid_device*, %struct.hid_device** %hdev, align 8, !dbg !7977
  %product = getelementptr inbounds %struct.hid_device, %struct.hid_device* %10, i32 0, i32 11, !dbg !7978
  %11 = load i32, i32* %product, align 4, !dbg !7978
  %call = call i32 (%struct.kobj_uevent_env*, i8*, ...) @add_uevent_var(%struct.kobj_uevent_env* %5, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.82, i64 0, i64 0), i32 %conv, i32 %9, i32 %11) #9, !dbg !7979
  %tobool = icmp ne i32 %call, 0, !dbg !7979
  br i1 %tobool, label %if.then, label %if.end, !dbg !7980

if.then:                                          ; preds = %do.end
  store i32 -12, i32* %retval, align 4, !dbg !7981
  br label %return, !dbg !7981

if.end:                                           ; preds = %do.end
  %12 = load %struct.kobj_uevent_env*, %struct.kobj_uevent_env** %env.addr, align 8, !dbg !7982
  %13 = load %struct.hid_device*, %struct.hid_device** %hdev, align 8, !dbg !7984
  %name = getelementptr inbounds %struct.hid_device, %struct.hid_device* %13, i32 0, i32 30, !dbg !7985
  %arraydecay = getelementptr inbounds [128 x i8], [128 x i8]* %name, i64 0, i64 0, !dbg !7984
  %call1 = call i32 (%struct.kobj_uevent_env*, i8*, ...) @add_uevent_var(%struct.kobj_uevent_env* %12, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.83, i64 0, i64 0), i8* %arraydecay) #9, !dbg !7986
  %tobool2 = icmp ne i32 %call1, 0, !dbg !7986
  br i1 %tobool2, label %if.then3, label %if.end4, !dbg !7987

if.then3:                                         ; preds = %if.end
  store i32 -12, i32* %retval, align 4, !dbg !7988
  br label %return, !dbg !7988

if.end4:                                          ; preds = %if.end
  %14 = load %struct.kobj_uevent_env*, %struct.kobj_uevent_env** %env.addr, align 8, !dbg !7989
  %15 = load %struct.hid_device*, %struct.hid_device** %hdev, align 8, !dbg !7991
  %phys = getelementptr inbounds %struct.hid_device, %struct.hid_device* %15, i32 0, i32 31, !dbg !7992
  %arraydecay5 = getelementptr inbounds [64 x i8], [64 x i8]* %phys, i64 0, i64 0, !dbg !7991
  %call6 = call i32 (%struct.kobj_uevent_env*, i8*, ...) @add_uevent_var(%struct.kobj_uevent_env* %14, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.84, i64 0, i64 0), i8* %arraydecay5) #9, !dbg !7993
  %tobool7 = icmp ne i32 %call6, 0, !dbg !7993
  br i1 %tobool7, label %if.then8, label %if.end9, !dbg !7994

if.then8:                                         ; preds = %if.end4
  store i32 -12, i32* %retval, align 4, !dbg !7995
  br label %return, !dbg !7995

if.end9:                                          ; preds = %if.end4
  %16 = load %struct.kobj_uevent_env*, %struct.kobj_uevent_env** %env.addr, align 8, !dbg !7996
  %17 = load %struct.hid_device*, %struct.hid_device** %hdev, align 8, !dbg !7998
  %uniq = getelementptr inbounds %struct.hid_device, %struct.hid_device* %17, i32 0, i32 32, !dbg !7999
  %arraydecay10 = getelementptr inbounds [64 x i8], [64 x i8]* %uniq, i64 0, i64 0, !dbg !7998
  %call11 = call i32 (%struct.kobj_uevent_env*, i8*, ...) @add_uevent_var(%struct.kobj_uevent_env* %16, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.85, i64 0, i64 0), i8* %arraydecay10) #9, !dbg !8000
  %tobool12 = icmp ne i32 %call11, 0, !dbg !8000
  br i1 %tobool12, label %if.then13, label %if.end14, !dbg !8001

if.then13:                                        ; preds = %if.end9
  store i32 -12, i32* %retval, align 4, !dbg !8002
  br label %return, !dbg !8002

if.end14:                                         ; preds = %if.end9
  %18 = load %struct.kobj_uevent_env*, %struct.kobj_uevent_env** %env.addr, align 8, !dbg !8003
  %19 = load %struct.hid_device*, %struct.hid_device** %hdev, align 8, !dbg !8005
  %bus15 = getelementptr inbounds %struct.hid_device, %struct.hid_device* %19, i32 0, i32 8, !dbg !8006
  %20 = load i16, i16* %bus15, align 4, !dbg !8006
  %conv16 = zext i16 %20 to i32, !dbg !8005
  %21 = load %struct.hid_device*, %struct.hid_device** %hdev, align 8, !dbg !8007
  %group = getelementptr inbounds %struct.hid_device, %struct.hid_device* %21, i32 0, i32 9, !dbg !8008
  %22 = load i16, i16* %group, align 2, !dbg !8008
  %conv17 = zext i16 %22 to i32, !dbg !8007
  %23 = load %struct.hid_device*, %struct.hid_device** %hdev, align 8, !dbg !8009
  %vendor18 = getelementptr inbounds %struct.hid_device, %struct.hid_device* %23, i32 0, i32 10, !dbg !8010
  %24 = load i32, i32* %vendor18, align 8, !dbg !8010
  %25 = load %struct.hid_device*, %struct.hid_device** %hdev, align 8, !dbg !8011
  %product19 = getelementptr inbounds %struct.hid_device, %struct.hid_device* %25, i32 0, i32 11, !dbg !8012
  %26 = load i32, i32* %product19, align 4, !dbg !8012
  %call20 = call i32 (%struct.kobj_uevent_env*, i8*, ...) @add_uevent_var(%struct.kobj_uevent_env* %18, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.86, i64 0, i64 0), i32 %conv16, i32 %conv17, i32 %24, i32 %26) #9, !dbg !8013
  %tobool21 = icmp ne i32 %call20, 0, !dbg !8013
  br i1 %tobool21, label %if.then22, label %if.end23, !dbg !8014

if.then22:                                        ; preds = %if.end14
  store i32 -12, i32* %retval, align 4, !dbg !8015
  br label %return, !dbg !8015

if.end23:                                         ; preds = %if.end14
  store i32 0, i32* %retval, align 4, !dbg !8016
  br label %return, !dbg !8016

return:                                           ; preds = %if.end23, %if.then22, %if.then13, %if.then8, %if.then3, %if.then
  %27 = load i32, i32* %retval, align 4, !dbg !8017
  ret i32 %27, !dbg !8017
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @hid_device_probe(%struct.device* %dev) #0 !dbg !8018 {
entry:
  %x.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i, metadata !8019, metadata !DIExpression()), !dbg !8022
  %r.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %r.i, metadata !8024, metadata !DIExpression()), !dbg !8025
  %dev.addr = alloca %struct.device*, align 8
  %hdrv = alloca %struct.hid_driver*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.hid_driver*, align 8
  %hdev = alloca %struct.hid_device*, align 8
  %__mptr1 = alloca i8*, align 8
  %tmp4 = alloca %struct.hid_device*, align 8
  %id = alloca %struct.hid_device_id*, align 8
  %ret = alloca i32, align 4
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !8026, metadata !DIExpression()), !dbg !8027
  call void @llvm.dbg.declare(metadata %struct.hid_driver** %hdrv, metadata !8028, metadata !DIExpression()), !dbg !8029
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !8030, metadata !DIExpression()), !dbg !8032
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !8032
  %driver = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 6, !dbg !8032
  %1 = load %struct.device_driver*, %struct.device_driver** %driver, align 8, !dbg !8032
  %2 = bitcast %struct.device_driver* %1 to i8*, !dbg !8032
  store i8* %2, i8** %__mptr, align 8, !dbg !8032
  br label %do.body, !dbg !8032

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !8033

do.end:                                           ; preds = %do.body
  %3 = load i8*, i8** %__mptr, align 8, !dbg !8032
  %add.ptr = getelementptr i8, i8* %3, i64 -160, !dbg !8032
  %4 = bitcast i8* %add.ptr to %struct.hid_driver*, !dbg !8032
  store %struct.hid_driver* %4, %struct.hid_driver** %tmp, align 8, !dbg !8033
  %5 = load %struct.hid_driver*, %struct.hid_driver** %tmp, align 8, !dbg !8032
  store %struct.hid_driver* %5, %struct.hid_driver** %hdrv, align 8, !dbg !8029
  call void @llvm.dbg.declare(metadata %struct.hid_device** %hdev, metadata !8035, metadata !DIExpression()), !dbg !8036
  call void @llvm.dbg.declare(metadata i8** %__mptr1, metadata !8037, metadata !DIExpression()), !dbg !8039
  %6 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !8039
  %7 = bitcast %struct.device* %6 to i8*, !dbg !8039
  store i8* %7, i8** %__mptr1, align 8, !dbg !8039
  br label %do.body2, !dbg !8039

do.body2:                                         ; preds = %do.end
  br label %do.end3, !dbg !8040

do.end3:                                          ; preds = %do.body2
  %8 = load i8*, i8** %__mptr1, align 8, !dbg !8039
  %add.ptr5 = getelementptr i8, i8* %8, i64 -6352, !dbg !8039
  %9 = bitcast i8* %add.ptr5 to %struct.hid_device*, !dbg !8039
  store %struct.hid_device* %9, %struct.hid_device** %tmp4, align 8, !dbg !8040
  %10 = load %struct.hid_device*, %struct.hid_device** %tmp4, align 8, !dbg !8039
  store %struct.hid_device* %10, %struct.hid_device** %hdev, align 8, !dbg !8036
  call void @llvm.dbg.declare(metadata %struct.hid_device_id** %id, metadata !8042, metadata !DIExpression()), !dbg !8043
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !8044, metadata !DIExpression()), !dbg !8045
  store i32 0, i32* %ret, align 4, !dbg !8045
  %11 = load %struct.hid_device*, %struct.hid_device** %hdev, align 8, !dbg !8046
  %driver_input_lock = getelementptr inbounds %struct.hid_device, %struct.hid_device* %11, i32 0, i32 17, !dbg !8048
  %call = call i32 @down_interruptible(%struct.semaphore* %driver_input_lock) #9, !dbg !8049
  %tobool = icmp ne i32 %call, 0, !dbg !8049
  br i1 %tobool, label %if.then, label %if.end, !dbg !8050

if.then:                                          ; preds = %do.end3
  store i32 -4, i32* %ret, align 4, !dbg !8051
  br label %end, !dbg !8053

if.end:                                           ; preds = %do.end3
  %12 = load %struct.hid_device*, %struct.hid_device** %hdev, align 8, !dbg !8054
  %io_started = getelementptr inbounds %struct.hid_device, %struct.hid_device* %12, i32 0, i32 26, !dbg !8055
  store i8 0, i8* %io_started, align 8, !dbg !8056
  store i32 8, i32* %x.addr.i, align 4
  %13 = load i32, i32* %x.addr.i, align 4, !dbg !8057
  %14 = call i32 asm "bsfl $1,$0", "=r,rm,0,~{dirflag},~{fpsr},~{flags}"(i32 %13, i32 -1) #15, !dbg !8058, !srcloc !8059
  store i32 %14, i32* %r.i, align 4, !dbg !8058
  %15 = load i32, i32* %r.i, align 4, !dbg !8060
  %add.i = add i32 %15, 1, !dbg !8061
  %conv = sext i32 %add.i to i64, !dbg !8062
  %16 = load %struct.hid_device*, %struct.hid_device** %hdev, align 8, !dbg !8063
  %status = getelementptr inbounds %struct.hid_device, %struct.hid_device* %16, i32 0, i32 23, !dbg !8064
  call void @clear_bit(i64 %conv, i64* %status) #9, !dbg !8065
  %17 = load %struct.hid_device*, %struct.hid_device** %hdev, align 8, !dbg !8066
  %driver7 = getelementptr inbounds %struct.hid_device, %struct.hid_device* %17, i32 0, i32 19, !dbg !8068
  %18 = load %struct.hid_driver*, %struct.hid_driver** %driver7, align 8, !dbg !8068
  %tobool8 = icmp ne %struct.hid_driver* %18, null, !dbg !8066
  br i1 %tobool8, label %if.end43, label %if.then9, !dbg !8069

if.then9:                                         ; preds = %if.end
  %19 = load %struct.hid_device*, %struct.hid_device** %hdev, align 8, !dbg !8070
  %20 = load %struct.hid_driver*, %struct.hid_driver** %hdrv, align 8, !dbg !8072
  %call10 = call %struct.hid_device_id* @hid_match_device(%struct.hid_device* %19, %struct.hid_driver* %20) #9, !dbg !8073
  store %struct.hid_device_id* %call10, %struct.hid_device_id** %id, align 8, !dbg !8074
  %21 = load %struct.hid_device_id*, %struct.hid_device_id** %id, align 8, !dbg !8075
  %cmp = icmp eq %struct.hid_device_id* %21, null, !dbg !8077
  br i1 %cmp, label %if.then12, label %if.end13, !dbg !8078

if.then12:                                        ; preds = %if.then9
  store i32 -19, i32* %ret, align 4, !dbg !8079
  br label %unlock, !dbg !8081

if.end13:                                         ; preds = %if.then9
  %22 = load %struct.hid_driver*, %struct.hid_driver** %hdrv, align 8, !dbg !8082
  %match = getelementptr inbounds %struct.hid_driver, %struct.hid_driver* %22, i32 0, i32 4, !dbg !8084
  %23 = load i1 (%struct.hid_device*, i1)*, i1 (%struct.hid_device*, i1)** %match, align 8, !dbg !8084
  %tobool14 = icmp ne i1 (%struct.hid_device*, i1)* %23, null, !dbg !8082
  br i1 %tobool14, label %if.then15, label %if.else, !dbg !8085

if.then15:                                        ; preds = %if.end13
  %24 = load %struct.hid_driver*, %struct.hid_driver** %hdrv, align 8, !dbg !8086
  %match16 = getelementptr inbounds %struct.hid_driver, %struct.hid_driver* %24, i32 0, i32 4, !dbg !8089
  %25 = load i1 (%struct.hid_device*, i1)*, i1 (%struct.hid_device*, i1)** %match16, align 8, !dbg !8089
  %26 = load %struct.hid_device*, %struct.hid_device** %hdev, align 8, !dbg !8090
  %27 = load i32, i32* @hid_ignore_special_drivers, align 4, !dbg !8091
  %tobool17 = icmp ne i32 %27, 0, !dbg !8091
  %call18 = call zeroext i1 %25(%struct.hid_device* %26, i1 zeroext %tobool17) #9, !dbg !8086
  br i1 %call18, label %if.end20, label %if.then19, !dbg !8092

if.then19:                                        ; preds = %if.then15
  store i32 -19, i32* %ret, align 4, !dbg !8093
  br label %unlock, !dbg !8095

if.end20:                                         ; preds = %if.then15
  br label %if.end24, !dbg !8096

if.else:                                          ; preds = %if.end13
  %28 = load i32, i32* @hid_ignore_special_drivers, align 4, !dbg !8097
  %tobool21 = icmp ne i32 %28, 0, !dbg !8097
  br i1 %tobool21, label %if.then22, label %if.end23, !dbg !8100

if.then22:                                        ; preds = %if.else
  store i32 -19, i32* %ret, align 4, !dbg !8101
  br label %unlock, !dbg !8103

if.end23:                                         ; preds = %if.else
  br label %if.end24

if.end24:                                         ; preds = %if.end23, %if.end20
  %29 = load %struct.hid_device*, %struct.hid_device** %hdev, align 8, !dbg !8104
  %call25 = call i64 @hid_lookup_quirk(%struct.hid_device* %29) #9, !dbg !8105
  %conv26 = trunc i64 %call25 to i32, !dbg !8105
  %30 = load %struct.hid_device*, %struct.hid_device** %hdev, align 8, !dbg !8106
  %quirks = getelementptr inbounds %struct.hid_device, %struct.hid_device* %30, i32 0, i32 25, !dbg !8107
  store i32 %conv26, i32* %quirks, align 4, !dbg !8108
  %31 = load %struct.hid_driver*, %struct.hid_driver** %hdrv, align 8, !dbg !8109
  %32 = load %struct.hid_device*, %struct.hid_device** %hdev, align 8, !dbg !8110
  %driver27 = getelementptr inbounds %struct.hid_device, %struct.hid_device* %32, i32 0, i32 19, !dbg !8111
  store %struct.hid_driver* %31, %struct.hid_driver** %driver27, align 8, !dbg !8112
  %33 = load %struct.hid_driver*, %struct.hid_driver** %hdrv, align 8, !dbg !8113
  %probe = getelementptr inbounds %struct.hid_driver, %struct.hid_driver* %33, i32 0, i32 5, !dbg !8115
  %34 = load i32 (%struct.hid_device*, %struct.hid_device_id*)*, i32 (%struct.hid_device*, %struct.hid_device_id*)** %probe, align 8, !dbg !8115
  %tobool28 = icmp ne i32 (%struct.hid_device*, %struct.hid_device_id*)* %34, null, !dbg !8113
  br i1 %tobool28, label %if.then29, label %if.else32, !dbg !8116

if.then29:                                        ; preds = %if.end24
  %35 = load %struct.hid_driver*, %struct.hid_driver** %hdrv, align 8, !dbg !8117
  %probe30 = getelementptr inbounds %struct.hid_driver, %struct.hid_driver* %35, i32 0, i32 5, !dbg !8119
  %36 = load i32 (%struct.hid_device*, %struct.hid_device_id*)*, i32 (%struct.hid_device*, %struct.hid_device_id*)** %probe30, align 8, !dbg !8119
  %37 = load %struct.hid_device*, %struct.hid_device** %hdev, align 8, !dbg !8120
  %38 = load %struct.hid_device_id*, %struct.hid_device_id** %id, align 8, !dbg !8121
  %call31 = call i32 %36(%struct.hid_device* %37, %struct.hid_device_id* %38) #9, !dbg !8117
  store i32 %call31, i32* %ret, align 4, !dbg !8122
  br label %if.end38, !dbg !8123

if.else32:                                        ; preds = %if.end24
  %39 = load %struct.hid_device*, %struct.hid_device** %hdev, align 8, !dbg !8124
  %call33 = call i32 @hid_open_report(%struct.hid_device* %39) #9, !dbg !8126
  store i32 %call33, i32* %ret, align 4, !dbg !8127
  %40 = load i32, i32* %ret, align 4, !dbg !8128
  %tobool34 = icmp ne i32 %40, 0, !dbg !8128
  br i1 %tobool34, label %if.end37, label %if.then35, !dbg !8130

if.then35:                                        ; preds = %if.else32
  %41 = load %struct.hid_device*, %struct.hid_device** %hdev, align 8, !dbg !8131
  %call36 = call i32 @hid_hw_start(%struct.hid_device* %41, i32 45) #9, !dbg !8132
  store i32 %call36, i32* %ret, align 4, !dbg !8133
  br label %if.end37, !dbg !8134

if.end37:                                         ; preds = %if.then35, %if.else32
  br label %if.end38

if.end38:                                         ; preds = %if.end37, %if.then29
  %42 = load i32, i32* %ret, align 4, !dbg !8135
  %tobool39 = icmp ne i32 %42, 0, !dbg !8135
  br i1 %tobool39, label %if.then40, label %if.end42, !dbg !8137

if.then40:                                        ; preds = %if.end38
  %43 = load %struct.hid_device*, %struct.hid_device** %hdev, align 8, !dbg !8138
  call void @hid_close_report(%struct.hid_device* %43) #9, !dbg !8140
  %44 = load %struct.hid_device*, %struct.hid_device** %hdev, align 8, !dbg !8141
  %driver41 = getelementptr inbounds %struct.hid_device, %struct.hid_device* %44, i32 0, i32 19, !dbg !8142
  store %struct.hid_driver* null, %struct.hid_driver** %driver41, align 8, !dbg !8143
  br label %if.end42, !dbg !8144

if.end42:                                         ; preds = %if.then40, %if.end38
  br label %if.end43, !dbg !8145

if.end43:                                         ; preds = %if.end42, %if.end
  br label %unlock, !dbg !8068

unlock:                                           ; preds = %if.end43, %if.then22, %if.then19, %if.then12
  call void @llvm.dbg.label(metadata !8146), !dbg !8147
  %45 = load %struct.hid_device*, %struct.hid_device** %hdev, align 8, !dbg !8148
  %io_started44 = getelementptr inbounds %struct.hid_device, %struct.hid_device* %45, i32 0, i32 26, !dbg !8150
  %46 = load i8, i8* %io_started44, align 8, !dbg !8150
  %tobool45 = trunc i8 %46 to i1, !dbg !8150
  br i1 %tobool45, label %if.end48, label %if.then46, !dbg !8151

if.then46:                                        ; preds = %unlock
  %47 = load %struct.hid_device*, %struct.hid_device** %hdev, align 8, !dbg !8152
  %driver_input_lock47 = getelementptr inbounds %struct.hid_device, %struct.hid_device* %47, i32 0, i32 17, !dbg !8153
  call void @up(%struct.semaphore* %driver_input_lock47) #9, !dbg !8154
  br label %if.end48, !dbg !8154

if.end48:                                         ; preds = %if.then46, %unlock
  br label %end, !dbg !8150

end:                                              ; preds = %if.end48, %if.then
  call void @llvm.dbg.label(metadata !8155), !dbg !8156
  %48 = load i32, i32* %ret, align 4, !dbg !8157
  ret i32 %48, !dbg !8158
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @hid_device_remove(%struct.device* %dev) #0 !dbg !8159 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %hdev = alloca %struct.hid_device*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.hid_device*, align 8
  %hdrv = alloca %struct.hid_driver*, align 8
  %ret = alloca i32, align 4
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !8160, metadata !DIExpression()), !dbg !8161
  call void @llvm.dbg.declare(metadata %struct.hid_device** %hdev, metadata !8162, metadata !DIExpression()), !dbg !8163
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !8164, metadata !DIExpression()), !dbg !8166
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !8166
  %1 = bitcast %struct.device* %0 to i8*, !dbg !8166
  store i8* %1, i8** %__mptr, align 8, !dbg !8166
  br label %do.body, !dbg !8166

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !8167

do.end:                                           ; preds = %do.body
  %2 = load i8*, i8** %__mptr, align 8, !dbg !8166
  %add.ptr = getelementptr i8, i8* %2, i64 -6352, !dbg !8166
  %3 = bitcast i8* %add.ptr to %struct.hid_device*, !dbg !8166
  store %struct.hid_device* %3, %struct.hid_device** %tmp, align 8, !dbg !8167
  %4 = load %struct.hid_device*, %struct.hid_device** %tmp, align 8, !dbg !8166
  store %struct.hid_device* %4, %struct.hid_device** %hdev, align 8, !dbg !8163
  call void @llvm.dbg.declare(metadata %struct.hid_driver** %hdrv, metadata !8169, metadata !DIExpression()), !dbg !8170
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !8171, metadata !DIExpression()), !dbg !8172
  store i32 0, i32* %ret, align 4, !dbg !8172
  %5 = load %struct.hid_device*, %struct.hid_device** %hdev, align 8, !dbg !8173
  %driver_input_lock = getelementptr inbounds %struct.hid_device, %struct.hid_device* %5, i32 0, i32 17, !dbg !8175
  %call = call i32 @down_interruptible(%struct.semaphore* %driver_input_lock) #9, !dbg !8176
  %tobool = icmp ne i32 %call, 0, !dbg !8176
  br i1 %tobool, label %if.then, label %if.end, !dbg !8177

if.then:                                          ; preds = %do.end
  store i32 -4, i32* %ret, align 4, !dbg !8178
  br label %end, !dbg !8180

if.end:                                           ; preds = %do.end
  %6 = load %struct.hid_device*, %struct.hid_device** %hdev, align 8, !dbg !8181
  %io_started = getelementptr inbounds %struct.hid_device, %struct.hid_device* %6, i32 0, i32 26, !dbg !8182
  store i8 0, i8* %io_started, align 8, !dbg !8183
  %7 = load %struct.hid_device*, %struct.hid_device** %hdev, align 8, !dbg !8184
  %driver = getelementptr inbounds %struct.hid_device, %struct.hid_device* %7, i32 0, i32 19, !dbg !8185
  %8 = load %struct.hid_driver*, %struct.hid_driver** %driver, align 8, !dbg !8185
  store %struct.hid_driver* %8, %struct.hid_driver** %hdrv, align 8, !dbg !8186
  %9 = load %struct.hid_driver*, %struct.hid_driver** %hdrv, align 8, !dbg !8187
  %tobool1 = icmp ne %struct.hid_driver* %9, null, !dbg !8187
  br i1 %tobool1, label %if.then2, label %if.end8, !dbg !8189

if.then2:                                         ; preds = %if.end
  %10 = load %struct.hid_driver*, %struct.hid_driver** %hdrv, align 8, !dbg !8190
  %remove = getelementptr inbounds %struct.hid_driver, %struct.hid_driver* %10, i32 0, i32 6, !dbg !8193
  %11 = load void (%struct.hid_device*)*, void (%struct.hid_device*)** %remove, align 8, !dbg !8193
  %tobool3 = icmp ne void (%struct.hid_device*)* %11, null, !dbg !8190
  br i1 %tobool3, label %if.then4, label %if.else, !dbg !8194

if.then4:                                         ; preds = %if.then2
  %12 = load %struct.hid_driver*, %struct.hid_driver** %hdrv, align 8, !dbg !8195
  %remove5 = getelementptr inbounds %struct.hid_driver, %struct.hid_driver* %12, i32 0, i32 6, !dbg !8196
  %13 = load void (%struct.hid_device*)*, void (%struct.hid_device*)** %remove5, align 8, !dbg !8196
  %14 = load %struct.hid_device*, %struct.hid_device** %hdev, align 8, !dbg !8197
  call void %13(%struct.hid_device* %14) #9, !dbg !8195
  br label %if.end6, !dbg !8195

if.else:                                          ; preds = %if.then2
  %15 = load %struct.hid_device*, %struct.hid_device** %hdev, align 8, !dbg !8198
  call void @hid_hw_stop(%struct.hid_device* %15) #9, !dbg !8199
  br label %if.end6

if.end6:                                          ; preds = %if.else, %if.then4
  %16 = load %struct.hid_device*, %struct.hid_device** %hdev, align 8, !dbg !8200
  call void @hid_close_report(%struct.hid_device* %16) #9, !dbg !8201
  %17 = load %struct.hid_device*, %struct.hid_device** %hdev, align 8, !dbg !8202
  %driver7 = getelementptr inbounds %struct.hid_device, %struct.hid_device* %17, i32 0, i32 19, !dbg !8203
  store %struct.hid_driver* null, %struct.hid_driver** %driver7, align 8, !dbg !8204
  br label %if.end8, !dbg !8205

if.end8:                                          ; preds = %if.end6, %if.end
  %18 = load %struct.hid_device*, %struct.hid_device** %hdev, align 8, !dbg !8206
  %io_started9 = getelementptr inbounds %struct.hid_device, %struct.hid_device* %18, i32 0, i32 26, !dbg !8208
  %19 = load i8, i8* %io_started9, align 8, !dbg !8208
  %tobool10 = trunc i8 %19 to i1, !dbg !8208
  br i1 %tobool10, label %if.end13, label %if.then11, !dbg !8209

if.then11:                                        ; preds = %if.end8
  %20 = load %struct.hid_device*, %struct.hid_device** %hdev, align 8, !dbg !8210
  %driver_input_lock12 = getelementptr inbounds %struct.hid_device, %struct.hid_device* %20, i32 0, i32 17, !dbg !8211
  call void @up(%struct.semaphore* %driver_input_lock12) #9, !dbg !8212
  br label %if.end13, !dbg !8212

if.end13:                                         ; preds = %if.then11, %if.end8
  br label %end, !dbg !8208

end:                                              ; preds = %if.end13, %if.then
  call void @llvm.dbg.label(metadata !8213), !dbg !8214
  %21 = load i32, i32* %ret, align 4, !dbg !8215
  ret i32 %21, !dbg !8216
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @hid_add_device(%struct.hid_device* %hdev) #0 !dbg !4369 {
entry:
  %i.addr.i.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %i.addr.i.i.i, metadata !8217, metadata !DIExpression()), !dbg !8223
  %v.addr.i.i.i = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i.i.i, metadata !8233, metadata !DIExpression()), !dbg !8234
  %__ret.i.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %__ret.i.i.i, metadata !8235, metadata !DIExpression()), !dbg !8237
  %tmp.i.i.i = alloca i32, align 4
  %v.addr.i1.i = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i1.i, metadata !8238, metadata !DIExpression()), !dbg !8239
  %v.addr.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %v.addr.i.i, metadata !8240, metadata !DIExpression()), !dbg !8248
  %size.addr.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i, metadata !8250, metadata !DIExpression()), !dbg !8251
  %v.addr.i = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i, metadata !8252, metadata !DIExpression()), !dbg !8253
  %retval = alloca i32, align 4
  %hdev.addr = alloca %struct.hid_device*, align 8
  %ret = alloca i32, align 4
  %__ret_warn_on = alloca i32, align 4
  %tmp = alloca i64, align 8
  store %struct.hid_device* %hdev, %struct.hid_device** %hdev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.hid_device** %hdev.addr, metadata !8254, metadata !DIExpression()), !dbg !8255
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !8256, metadata !DIExpression()), !dbg !8257
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on, metadata !8258, metadata !DIExpression()), !dbg !8261
  %0 = load %struct.hid_device*, %struct.hid_device** %hdev.addr, align 8, !dbg !8261
  %status = getelementptr inbounds %struct.hid_device, %struct.hid_device* %0, i32 0, i32 23, !dbg !8261
  %1 = load i64, i64* %status, align 8, !dbg !8261
  %and = and i64 %1, 1, !dbg !8261
  %tobool = icmp ne i64 %and, 0, !dbg !8261
  %lnot = xor i1 %tobool, true, !dbg !8261
  %lnot1 = xor i1 %lnot, true, !dbg !8261
  %lnot.ext = zext i1 %lnot1 to i32, !dbg !8261
  store i32 %lnot.ext, i32* %__ret_warn_on, align 4, !dbg !8261
  %2 = load i32, i32* %__ret_warn_on, align 4, !dbg !8262
  %tobool2 = icmp ne i32 %2, 0, !dbg !8262
  %lnot3 = xor i1 %tobool2, true, !dbg !8262
  %lnot5 = xor i1 %lnot3, true, !dbg !8262
  %lnot.ext6 = zext i1 %lnot5 to i32, !dbg !8262
  %conv = sext i32 %lnot.ext6 to i64, !dbg !8262
  %tobool7 = icmp ne i64 %conv, 0, !dbg !8262
  br i1 %tobool7, label %if.then, label %if.end, !dbg !8261

if.then:                                          ; preds = %entry
  br label %do.body, !dbg !8262

do.body:                                          ; preds = %if.then
  br label %do.body8, !dbg !8264

do.body8:                                         ; preds = %do.body
  br label %do.end, !dbg !8266

do.end:                                           ; preds = %do.body8
  br label %do.body9, !dbg !8264

do.body9:                                         ; preds = %do.end
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.5, i64 0, i64 0), i32 2391, i32 2305, i64 12) #10, !dbg !8268, !srcloc !8270
  br label %do.end10, !dbg !8268

do.end10:                                         ; preds = %do.body9
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 258) #10, !dbg !8271, !srcloc !8273
  br label %do.body11, !dbg !8264

do.body11:                                        ; preds = %do.end10
  br label %do.end12, !dbg !8274

do.end12:                                         ; preds = %do.body11
  br label %do.end13, !dbg !8264

do.end13:                                         ; preds = %do.end12
  br label %if.end, !dbg !8264

if.end:                                           ; preds = %do.end13, %entry
  %3 = load i32, i32* %__ret_warn_on, align 4, !dbg !8261
  %tobool14 = icmp ne i32 %3, 0, !dbg !8261
  %lnot15 = xor i1 %tobool14, true, !dbg !8261
  %lnot17 = xor i1 %lnot15, true, !dbg !8261
  %lnot.ext18 = zext i1 %lnot17 to i32, !dbg !8261
  %conv19 = sext i32 %lnot.ext18 to i64, !dbg !8261
  store i64 %conv19, i64* %tmp, align 8, !dbg !8262
  %4 = load i64, i64* %tmp, align 8, !dbg !8261
  %tobool20 = icmp ne i64 %4, 0, !dbg !8276
  br i1 %tobool20, label %if.then21, label %if.end22, !dbg !8277

if.then21:                                        ; preds = %if.end
  store i32 -16, i32* %retval, align 4, !dbg !8278
  br label %return, !dbg !8278

if.end22:                                         ; preds = %if.end
  %5 = load %struct.hid_device*, %struct.hid_device** %hdev.addr, align 8, !dbg !8279
  %call = call i64 @hid_lookup_quirk(%struct.hid_device* %5) #9, !dbg !8280
  %conv23 = trunc i64 %call to i32, !dbg !8280
  %6 = load %struct.hid_device*, %struct.hid_device** %hdev.addr, align 8, !dbg !8281
  %quirks = getelementptr inbounds %struct.hid_device, %struct.hid_device* %6, i32 0, i32 25, !dbg !8282
  store i32 %conv23, i32* %quirks, align 4, !dbg !8283
  %7 = load %struct.hid_device*, %struct.hid_device** %hdev.addr, align 8, !dbg !8284
  %call24 = call zeroext i1 @hid_ignore(%struct.hid_device* %7) #9, !dbg !8286
  br i1 %call24, label %if.then25, label %if.end26, !dbg !8287

if.then25:                                        ; preds = %if.end22
  store i32 -19, i32* %retval, align 4, !dbg !8288
  br label %return, !dbg !8288

if.end26:                                         ; preds = %if.end22
  %8 = load %struct.hid_device*, %struct.hid_device** %hdev.addr, align 8, !dbg !8289
  %ll_driver = getelementptr inbounds %struct.hid_device, %struct.hid_device* %8, i32 0, i32 20, !dbg !8291
  %9 = load %struct.hid_ll_driver*, %struct.hid_ll_driver** %ll_driver, align 8, !dbg !8291
  %raw_request = getelementptr inbounds %struct.hid_ll_driver, %struct.hid_ll_driver* %9, i32 0, i32 8, !dbg !8292
  %10 = load i32 (%struct.hid_device*, i8, i8*, i64, i8, i32)*, i32 (%struct.hid_device*, i8, i8*, i64, i8, i32)** %raw_request, align 8, !dbg !8292
  %tobool27 = icmp ne i32 (%struct.hid_device*, i8, i8*, i64, i8, i32)* %10, null, !dbg !8289
  br i1 %tobool27, label %if.end29, label %if.then28, !dbg !8293

if.then28:                                        ; preds = %if.end26
  %11 = load %struct.hid_device*, %struct.hid_device** %hdev.addr, align 8, !dbg !8294
  %dev = getelementptr inbounds %struct.hid_device, %struct.hid_device* %11, i32 0, i32 18, !dbg !8294
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %dev, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.38, i64 0, i64 0)) #13, !dbg !8294
  store i32 -22, i32* %retval, align 4, !dbg !8296
  br label %return, !dbg !8296

if.end29:                                         ; preds = %if.end26
  %12 = load %struct.hid_device*, %struct.hid_device** %hdev.addr, align 8, !dbg !8297
  %ll_driver30 = getelementptr inbounds %struct.hid_device, %struct.hid_device* %12, i32 0, i32 20, !dbg !8298
  %13 = load %struct.hid_ll_driver*, %struct.hid_ll_driver** %ll_driver30, align 8, !dbg !8298
  %parse = getelementptr inbounds %struct.hid_ll_driver, %struct.hid_ll_driver* %13, i32 0, i32 5, !dbg !8299
  %14 = load i32 (%struct.hid_device*)*, i32 (%struct.hid_device*)** %parse, align 8, !dbg !8299
  %15 = load %struct.hid_device*, %struct.hid_device** %hdev.addr, align 8, !dbg !8300
  %call31 = call i32 %14(%struct.hid_device* %15) #9, !dbg !8297
  store i32 %call31, i32* %ret, align 4, !dbg !8301
  %16 = load i32, i32* %ret, align 4, !dbg !8302
  %tobool32 = icmp ne i32 %16, 0, !dbg !8302
  br i1 %tobool32, label %if.then33, label %if.end34, !dbg !8304

if.then33:                                        ; preds = %if.end29
  %17 = load i32, i32* %ret, align 4, !dbg !8305
  store i32 %17, i32* %retval, align 4, !dbg !8306
  br label %return, !dbg !8306

if.end34:                                         ; preds = %if.end29
  %18 = load %struct.hid_device*, %struct.hid_device** %hdev.addr, align 8, !dbg !8307
  %dev_rdesc = getelementptr inbounds %struct.hid_device, %struct.hid_device* %18, i32 0, i32 0, !dbg !8309
  %19 = load i8*, i8** %dev_rdesc, align 8, !dbg !8309
  %tobool35 = icmp ne i8* %19, null, !dbg !8307
  br i1 %tobool35, label %if.end37, label %if.then36, !dbg !8310

if.then36:                                        ; preds = %if.end34
  store i32 -19, i32* %retval, align 4, !dbg !8311
  br label %return, !dbg !8311

if.end37:                                         ; preds = %if.end34
  %20 = load i32, i32* @hid_ignore_special_drivers, align 4, !dbg !8312
  %tobool38 = icmp ne i32 %20, 0, !dbg !8312
  br i1 %tobool38, label %if.then39, label %if.else, !dbg !8314

if.then39:                                        ; preds = %if.end37
  %21 = load %struct.hid_device*, %struct.hid_device** %hdev.addr, align 8, !dbg !8315
  %group = getelementptr inbounds %struct.hid_device, %struct.hid_device* %21, i32 0, i32 9, !dbg !8317
  store i16 1, i16* %group, align 2, !dbg !8318
  br label %if.end53, !dbg !8319

if.else:                                          ; preds = %if.end37
  %22 = load %struct.hid_device*, %struct.hid_device** %hdev.addr, align 8, !dbg !8320
  %group40 = getelementptr inbounds %struct.hid_device, %struct.hid_device* %22, i32 0, i32 9, !dbg !8322
  %23 = load i16, i16* %group40, align 2, !dbg !8322
  %tobool41 = icmp ne i16 %23, 0, !dbg !8320
  br i1 %tobool41, label %if.end52, label %land.lhs.true, !dbg !8323

land.lhs.true:                                    ; preds = %if.else
  %24 = load %struct.hid_device*, %struct.hid_device** %hdev.addr, align 8, !dbg !8324
  %quirks42 = getelementptr inbounds %struct.hid_device, %struct.hid_device* %24, i32 0, i32 25, !dbg !8325
  %25 = load i32, i32* %quirks42, align 4, !dbg !8325
  %conv43 = zext i32 %25 to i64, !dbg !8324
  %and44 = and i64 %conv43, 524288, !dbg !8326
  %tobool45 = icmp ne i64 %and44, 0, !dbg !8326
  br i1 %tobool45, label %if.end52, label %if.then46, !dbg !8327

if.then46:                                        ; preds = %land.lhs.true
  %26 = load %struct.hid_device*, %struct.hid_device** %hdev.addr, align 8, !dbg !8328
  %call47 = call i32 @hid_scan_report(%struct.hid_device* %26) #9, !dbg !8330
  store i32 %call47, i32* %ret, align 4, !dbg !8331
  %27 = load i32, i32* %ret, align 4, !dbg !8332
  %tobool48 = icmp ne i32 %27, 0, !dbg !8332
  br i1 %tobool48, label %if.then49, label %if.end51, !dbg !8334

if.then49:                                        ; preds = %if.then46
  %28 = load %struct.hid_device*, %struct.hid_device** %hdev.addr, align 8, !dbg !8335
  %dev50 = getelementptr inbounds %struct.hid_device, %struct.hid_device* %28, i32 0, i32 18, !dbg !8335
  %29 = load i32, i32* %ret, align 4, !dbg !8335
  call void (%struct.device*, i8*, ...) @_dev_warn(%struct.device* %dev50, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.39, i64 0, i64 0), i32 %29) #13, !dbg !8335
  br label %if.end51, !dbg !8335

if.end51:                                         ; preds = %if.then49, %if.then46
  br label %if.end52, !dbg !8336

if.end52:                                         ; preds = %if.end51, %land.lhs.true, %if.else
  br label %if.end53

if.end53:                                         ; preds = %if.end52, %if.then39
  %30 = load %struct.hid_device*, %struct.hid_device** %hdev.addr, align 8, !dbg !8337
  %dev54 = getelementptr inbounds %struct.hid_device, %struct.hid_device* %30, i32 0, i32 18, !dbg !8338
  %31 = load %struct.hid_device*, %struct.hid_device** %hdev.addr, align 8, !dbg !8339
  %bus = getelementptr inbounds %struct.hid_device, %struct.hid_device* %31, i32 0, i32 8, !dbg !8340
  %32 = load i16, i16* %bus, align 4, !dbg !8340
  %conv55 = zext i16 %32 to i32, !dbg !8339
  %33 = load %struct.hid_device*, %struct.hid_device** %hdev.addr, align 8, !dbg !8341
  %vendor = getelementptr inbounds %struct.hid_device, %struct.hid_device* %33, i32 0, i32 10, !dbg !8342
  %34 = load i32, i32* %vendor, align 8, !dbg !8342
  %35 = load %struct.hid_device*, %struct.hid_device** %hdev.addr, align 8, !dbg !8343
  %product = getelementptr inbounds %struct.hid_device, %struct.hid_device* %35, i32 0, i32 11, !dbg !8344
  %36 = load i32, i32* %product, align 4, !dbg !8344
  store %struct.atomic_t* @hid_add_device.id, %struct.atomic_t** %v.addr.i, align 8
  %37 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i, align 8, !dbg !8345
  %38 = bitcast %struct.atomic_t* %37 to i8*, !dbg !8345
  store i8* %38, i8** %v.addr.i.i, align 8
  store i64 4, i64* %size.addr.i.i, align 8
  %39 = load i8*, i8** %v.addr.i.i, align 8, !dbg !8346
  %40 = load i64, i64* %size.addr.i.i, align 8, !dbg !8347
  %conv.i.i = trunc i64 %40 to i32, !dbg !8347
  %call.i.i = call zeroext i1 @kasan_check_write(i8* %39, i32 %conv.i.i) #12, !dbg !8348
  %41 = load i8*, i8** %v.addr.i.i, align 8, !dbg !8349
  %42 = load i64, i64* %size.addr.i.i, align 8, !dbg !8349
  call void @kcsan_check_access(i8* %41, i64 %42, i32 7) #12, !dbg !8349
  %43 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i, align 8, !dbg !8350
  store %struct.atomic_t* %43, %struct.atomic_t** %v.addr.i1.i, align 8
  %44 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i1.i, align 8, !dbg !8351
  store i32 1, i32* %i.addr.i.i.i, align 4
  store %struct.atomic_t* %44, %struct.atomic_t** %v.addr.i.i.i, align 8
  %45 = load i32, i32* %i.addr.i.i.i, align 4, !dbg !8352
  %46 = load i32, i32* %i.addr.i.i.i, align 4, !dbg !8237
  store i32 %46, i32* %__ret.i.i.i, align 4, !dbg !8237
  %47 = load i32, i32* %__ret.i.i.i, align 4, !dbg !8237
  %48 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i.i.i, align 8, !dbg !8237
  %counter.i.i.i = getelementptr inbounds %struct.atomic_t, %struct.atomic_t* %48, i32 0, i32 0, !dbg !8237
  %49 = call i32 asm sideeffect "xaddl $0, $1\0A", "=r,=*m,0,*m,~{memory},~{cc},~{dirflag},~{fpsr},~{flags}"(i32* %counter.i.i.i, i32 %47, i32* %counter.i.i.i) #10, !dbg !8237, !srcloc !8353
  store i32 %49, i32* %__ret.i.i.i, align 4, !dbg !8237
  %50 = load i32, i32* %__ret.i.i.i, align 4, !dbg !8237
  store i32 %50, i32* %tmp.i.i.i, align 4, !dbg !8237
  %51 = load i32, i32* %tmp.i.i.i, align 4, !dbg !8237
  %add.i.i.i = add i32 %45, %51, !dbg !8354
  %call57 = call i32 (%struct.device*, i8*, ...) @dev_set_name(%struct.device* %dev54, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.40, i64 0, i64 0), i32 %conv55, i32 %34, i32 %36, i32 %add.i.i.i) #9, !dbg !8355
  br label %do.body58, !dbg !8356

do.body58:                                        ; preds = %if.end53
  br label %do.end59, !dbg !8357

do.end59:                                         ; preds = %do.body58
  %52 = load %struct.hid_device*, %struct.hid_device** %hdev.addr, align 8, !dbg !8359
  %dev60 = getelementptr inbounds %struct.hid_device, %struct.hid_device* %52, i32 0, i32 18, !dbg !8360
  %call61 = call i32 @device_add(%struct.device* %dev60) #9, !dbg !8361
  store i32 %call61, i32* %ret, align 4, !dbg !8362
  %53 = load i32, i32* %ret, align 4, !dbg !8363
  %tobool62 = icmp ne i32 %53, 0, !dbg !8363
  br i1 %tobool62, label %if.else65, label %if.then63, !dbg !8365

if.then63:                                        ; preds = %do.end59
  %54 = load %struct.hid_device*, %struct.hid_device** %hdev.addr, align 8, !dbg !8366
  %status64 = getelementptr inbounds %struct.hid_device, %struct.hid_device* %54, i32 0, i32 23, !dbg !8367
  %55 = load i64, i64* %status64, align 8, !dbg !8368
  %or = or i64 %55, 1, !dbg !8368
  store i64 %or, i64* %status64, align 8, !dbg !8368
  br label %if.end68, !dbg !8366

if.else65:                                        ; preds = %do.end59
  br label %do.body66, !dbg !8369

do.body66:                                        ; preds = %if.else65
  br label %do.end67, !dbg !8370

do.end67:                                         ; preds = %do.body66
  br label %if.end68

if.end68:                                         ; preds = %do.end67, %if.then63
  %56 = load i32, i32* %ret, align 4, !dbg !8372
  store i32 %56, i32* %retval, align 4, !dbg !8373
  br label %return, !dbg !8373

return:                                           ; preds = %if.end68, %if.then36, %if.then33, %if.then28, %if.then25, %if.then21
  %57 = load i32, i32* %retval, align 4, !dbg !8374
  ret i32 %57, !dbg !8374
}

; Function Attrs: noredzone
declare dso_local i64 @hid_lookup_quirk(%struct.hid_device*) #2

; Function Attrs: noredzone
declare dso_local zeroext i1 @hid_ignore(%struct.hid_device*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @hid_scan_report(%struct.hid_device* %hid) #0 !dbg !4471 {
entry:
  %retval = alloca i32, align 4
  %hid.addr = alloca %struct.hid_device*, align 8
  %parser = alloca %struct.hid_parser*, align 8
  %item = alloca %struct.hid_item, align 8
  %start = alloca i8*, align 8
  %end = alloca i8*, align 8
  store %struct.hid_device* %hid, %struct.hid_device** %hid.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.hid_device** %hid.addr, metadata !8375, metadata !DIExpression()), !dbg !8376
  call void @llvm.dbg.declare(metadata %struct.hid_parser** %parser, metadata !8377, metadata !DIExpression()), !dbg !8378
  call void @llvm.dbg.declare(metadata %struct.hid_item* %item, metadata !8379, metadata !DIExpression()), !dbg !8380
  call void @llvm.dbg.declare(metadata i8** %start, metadata !8381, metadata !DIExpression()), !dbg !8382
  %0 = load %struct.hid_device*, %struct.hid_device** %hid.addr, align 8, !dbg !8383
  %dev_rdesc = getelementptr inbounds %struct.hid_device, %struct.hid_device* %0, i32 0, i32 0, !dbg !8384
  %1 = load i8*, i8** %dev_rdesc, align 8, !dbg !8384
  store i8* %1, i8** %start, align 8, !dbg !8382
  call void @llvm.dbg.declare(metadata i8** %end, metadata !8385, metadata !DIExpression()), !dbg !8386
  %2 = load i8*, i8** %start, align 8, !dbg !8387
  %3 = load %struct.hid_device*, %struct.hid_device** %hid.addr, align 8, !dbg !8388
  %dev_rsize = getelementptr inbounds %struct.hid_device, %struct.hid_device* %3, i32 0, i32 1, !dbg !8389
  %4 = load i32, i32* %dev_rsize, align 8, !dbg !8389
  %idx.ext = zext i32 %4 to i64, !dbg !8390
  %add.ptr = getelementptr i8, i8* %2, i64 %idx.ext, !dbg !8390
  store i8* %add.ptr, i8** %end, align 8, !dbg !8386
  %call = call i8* @vzalloc(i64 110848) #9, !dbg !8391
  %5 = bitcast i8* %call to %struct.hid_parser*, !dbg !8391
  store %struct.hid_parser* %5, %struct.hid_parser** %parser, align 8, !dbg !8392
  %6 = load %struct.hid_parser*, %struct.hid_parser** %parser, align 8, !dbg !8393
  %tobool = icmp ne %struct.hid_parser* %6, null, !dbg !8393
  br i1 %tobool, label %if.end, label %if.then, !dbg !8395

if.then:                                          ; preds = %entry
  store i32 -12, i32* %retval, align 4, !dbg !8396
  br label %return, !dbg !8396

if.end:                                           ; preds = %entry
  %7 = load %struct.hid_device*, %struct.hid_device** %hid.addr, align 8, !dbg !8397
  %8 = load %struct.hid_parser*, %struct.hid_parser** %parser, align 8, !dbg !8398
  %device = getelementptr inbounds %struct.hid_parser, %struct.hid_parser* %8, i32 0, i32 7, !dbg !8399
  store %struct.hid_device* %7, %struct.hid_device** %device, align 8, !dbg !8400
  %9 = load %struct.hid_device*, %struct.hid_device** %hid.addr, align 8, !dbg !8401
  %group = getelementptr inbounds %struct.hid_device, %struct.hid_device* %9, i32 0, i32 9, !dbg !8402
  store i16 1, i16* %group, align 2, !dbg !8403
  br label %while.cond, !dbg !8404

while.cond:                                       ; preds = %while.body, %if.end
  %10 = load i8*, i8** %start, align 8, !dbg !8405
  %11 = load i8*, i8** %end, align 8, !dbg !8406
  %call1 = call i8* @fetch_item(i8* %10, i8* %11, %struct.hid_item* %item) #9, !dbg !8407
  store i8* %call1, i8** %start, align 8, !dbg !8408
  %cmp = icmp ne i8* %call1, null, !dbg !8409
  br i1 %cmp, label %while.body, label %while.end, !dbg !8404

while.body:                                       ; preds = %while.cond
  %type = getelementptr inbounds %struct.hid_item, %struct.hid_item* %item, i32 0, i32 2, !dbg !8410
  %12 = load i8, i8* %type, align 1, !dbg !8410
  %idxprom = zext i8 %12 to i64, !dbg !8411
  %arrayidx = getelementptr [4 x i32 (%struct.hid_parser*, %struct.hid_item*)*], [4 x i32 (%struct.hid_parser*, %struct.hid_item*)*]* @hid_scan_report.dispatch_type, i64 0, i64 %idxprom, !dbg !8411
  %13 = load i32 (%struct.hid_parser*, %struct.hid_item*)*, i32 (%struct.hid_parser*, %struct.hid_item*)** %arrayidx, align 8, !dbg !8411
  %14 = load %struct.hid_parser*, %struct.hid_parser** %parser, align 8, !dbg !8412
  %call2 = call i32 %13(%struct.hid_parser* %14, %struct.hid_item* %item) #9, !dbg !8411
  br label %while.cond, !dbg !8404, !llvm.loop !8413

while.end:                                        ; preds = %while.cond
  %15 = load %struct.hid_parser*, %struct.hid_parser** %parser, align 8, !dbg !8415
  %scan_flags = getelementptr inbounds %struct.hid_parser, %struct.hid_parser* %15, i32 0, i32 8, !dbg !8417
  %16 = load i32, i32* %scan_flags, align 8, !dbg !8417
  %conv = zext i32 %16 to i64, !dbg !8415
  %and = and i64 %conv, 1, !dbg !8418
  %tobool3 = icmp ne i64 %and, 0, !dbg !8418
  br i1 %tobool3, label %land.lhs.true, label %if.end10, !dbg !8419

land.lhs.true:                                    ; preds = %while.end
  %17 = load %struct.hid_device*, %struct.hid_device** %hid.addr, align 8, !dbg !8420
  %group4 = getelementptr inbounds %struct.hid_device, %struct.hid_device* %17, i32 0, i32 9, !dbg !8421
  %18 = load i16, i16* %group4, align 2, !dbg !8421
  %conv5 = zext i16 %18 to i32, !dbg !8420
  %cmp6 = icmp eq i32 %conv5, 2, !dbg !8422
  br i1 %cmp6, label %if.then8, label %if.end10, !dbg !8423

if.then8:                                         ; preds = %land.lhs.true
  %19 = load %struct.hid_device*, %struct.hid_device** %hid.addr, align 8, !dbg !8424
  %group9 = getelementptr inbounds %struct.hid_device, %struct.hid_device* %19, i32 0, i32 9, !dbg !8425
  store i16 4, i16* %group9, align 2, !dbg !8426
  br label %if.end10, !dbg !8424

if.end10:                                         ; preds = %if.then8, %land.lhs.true, %while.end
  %20 = load %struct.hid_device*, %struct.hid_device** %hid.addr, align 8, !dbg !8427
  %vendor = getelementptr inbounds %struct.hid_device, %struct.hid_device* %20, i32 0, i32 10, !dbg !8428
  %21 = load i32, i32* %vendor, align 8, !dbg !8428
  switch i32 %21, label %sw.epilog [
    i32 1386, label %sw.bb
    i32 1739, label %sw.bb12
  ], !dbg !8429

sw.bb:                                            ; preds = %if.end10
  %22 = load %struct.hid_device*, %struct.hid_device** %hid.addr, align 8, !dbg !8430
  %group11 = getelementptr inbounds %struct.hid_device, %struct.hid_device* %22, i32 0, i32 9, !dbg !8432
  store i16 257, i16* %group11, align 2, !dbg !8433
  br label %sw.epilog, !dbg !8434

sw.bb12:                                          ; preds = %if.end10
  %23 = load %struct.hid_device*, %struct.hid_device** %hid.addr, align 8, !dbg !8435
  %group13 = getelementptr inbounds %struct.hid_device, %struct.hid_device* %23, i32 0, i32 9, !dbg !8437
  %24 = load i16, i16* %group13, align 2, !dbg !8437
  %conv14 = zext i16 %24 to i32, !dbg !8435
  %cmp15 = icmp eq i32 %conv14, 1, !dbg !8438
  br i1 %cmp15, label %if.then17, label %if.end30, !dbg !8439

if.then17:                                        ; preds = %sw.bb12
  %25 = load %struct.hid_parser*, %struct.hid_parser** %parser, align 8, !dbg !8440
  %scan_flags18 = getelementptr inbounds %struct.hid_parser, %struct.hid_parser* %25, i32 0, i32 8, !dbg !8442
  %26 = load i32, i32* %scan_flags18, align 8, !dbg !8442
  %conv19 = zext i32 %26 to i64, !dbg !8440
  %and20 = and i64 %conv19, 2, !dbg !8443
  %tobool21 = icmp ne i64 %and20, 0, !dbg !8443
  br i1 %tobool21, label %land.lhs.true22, label %if.end29, !dbg !8444

land.lhs.true22:                                  ; preds = %if.then17
  %27 = load %struct.hid_parser*, %struct.hid_parser** %parser, align 8, !dbg !8445
  %scan_flags23 = getelementptr inbounds %struct.hid_parser, %struct.hid_parser* %27, i32 0, i32 8, !dbg !8446
  %28 = load i32, i32* %scan_flags23, align 8, !dbg !8446
  %conv24 = zext i32 %28 to i64, !dbg !8445
  %and25 = and i64 %conv24, 4, !dbg !8447
  %tobool26 = icmp ne i64 %and25, 0, !dbg !8447
  br i1 %tobool26, label %if.then27, label %if.end29, !dbg !8448

if.then27:                                        ; preds = %land.lhs.true22
  %29 = load %struct.hid_device*, %struct.hid_device** %hid.addr, align 8, !dbg !8449
  %group28 = getelementptr inbounds %struct.hid_device, %struct.hid_device* %29, i32 0, i32 9, !dbg !8450
  store i16 256, i16* %group28, align 2, !dbg !8451
  br label %if.end29, !dbg !8449

if.end29:                                         ; preds = %if.then27, %land.lhs.true22, %if.then17
  br label %if.end30, !dbg !8452

if.end30:                                         ; preds = %if.end29, %sw.bb12
  br label %sw.epilog, !dbg !8453

sw.epilog:                                        ; preds = %if.end10, %if.end30, %sw.bb
  %30 = load %struct.hid_parser*, %struct.hid_parser** %parser, align 8, !dbg !8454
  %collection_stack = getelementptr inbounds %struct.hid_parser, %struct.hid_parser* %30, i32 0, i32 4, !dbg !8455
  %31 = load i32*, i32** %collection_stack, align 8, !dbg !8455
  %32 = bitcast i32* %31 to i8*, !dbg !8454
  call void @kfree(i8* %32) #9, !dbg !8456
  %33 = load %struct.hid_parser*, %struct.hid_parser** %parser, align 8, !dbg !8457
  %34 = bitcast %struct.hid_parser* %33 to i8*, !dbg !8457
  call void @vfree(i8* %34) #9, !dbg !8458
  store i32 0, i32* %retval, align 4, !dbg !8459
  br label %return, !dbg !8459

return:                                           ; preds = %sw.epilog, %if.then
  %35 = load i32, i32* %retval, align 4, !dbg !8460
  ret i32 %35, !dbg !8460
}

; Function Attrs: noredzone
declare dso_local i32 @dev_set_name(%struct.device*, i8*, ...) #2

; Function Attrs: noredzone
declare dso_local i32 @device_add(%struct.device*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local %struct.hid_device* @hid_allocate_device() #0 !dbg !4372 {
entry:
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !8461, metadata !DIExpression()), !dbg !8466
  %retval = alloca %struct.hid_device*, align 8
  %hdev = alloca %struct.hid_device*, align 8
  %ret = alloca i32, align 4
  %.compoundliteral = alloca %struct.spinlock, align 1
  call void @llvm.dbg.declare(metadata %struct.hid_device** %hdev, metadata !8469, metadata !DIExpression()), !dbg !8470
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !8471, metadata !DIExpression()), !dbg !8472
  store i32 -12, i32* %ret, align 4, !dbg !8472
  %call = call i8* @kzalloc(i64 7520, i32 3264) #9, !dbg !8473
  %0 = bitcast i8* %call to %struct.hid_device*, !dbg !8473
  store %struct.hid_device* %0, %struct.hid_device** %hdev, align 8, !dbg !8474
  %1 = load %struct.hid_device*, %struct.hid_device** %hdev, align 8, !dbg !8475
  %cmp = icmp eq %struct.hid_device* %1, null, !dbg !8477
  br i1 %cmp, label %if.then, label %if.end, !dbg !8478

if.then:                                          ; preds = %entry
  %2 = load i32, i32* %ret, align 4, !dbg !8479
  %conv = sext i32 %2 to i64, !dbg !8479
  %call1 = call i8* @ERR_PTR(i64 %conv) #9, !dbg !8480
  %3 = bitcast i8* %call1 to %struct.hid_device*, !dbg !8480
  store %struct.hid_device* %3, %struct.hid_device** %retval, align 8, !dbg !8481
  br label %return, !dbg !8481

if.end:                                           ; preds = %entry
  %4 = load %struct.hid_device*, %struct.hid_device** %hdev, align 8, !dbg !8482
  %dev = getelementptr inbounds %struct.hid_device, %struct.hid_device* %4, i32 0, i32 18, !dbg !8483
  call void @device_initialize(%struct.device* %dev) #9, !dbg !8484
  %5 = load %struct.hid_device*, %struct.hid_device** %hdev, align 8, !dbg !8485
  %dev2 = getelementptr inbounds %struct.hid_device, %struct.hid_device* %5, i32 0, i32 18, !dbg !8486
  %release = getelementptr inbounds %struct.device, %struct.device* %dev2, i32 0, i32 31, !dbg !8487
  store void (%struct.device*)* @hid_device_release, void (%struct.device*)** %release, align 8, !dbg !8488
  %6 = load %struct.hid_device*, %struct.hid_device** %hdev, align 8, !dbg !8489
  %dev3 = getelementptr inbounds %struct.hid_device, %struct.hid_device* %6, i32 0, i32 18, !dbg !8490
  %bus = getelementptr inbounds %struct.device, %struct.device* %dev3, i32 0, i32 5, !dbg !8491
  store %struct.bus_type* @hid_bus_type, %struct.bus_type** %bus, align 8, !dbg !8492
  %7 = load %struct.hid_device*, %struct.hid_device** %hdev, align 8, !dbg !8493
  %dev4 = getelementptr inbounds %struct.hid_device, %struct.hid_device* %7, i32 0, i32 18, !dbg !8494
  call void @device_enable_async_suspend(%struct.device* %dev4) #9, !dbg !8495
  %8 = load %struct.hid_device*, %struct.hid_device** %hdev, align 8, !dbg !8496
  call void @hid_close_report(%struct.hid_device* %8) #9, !dbg !8497
  br label %do.body, !dbg !8498

do.body:                                          ; preds = %if.end
  %9 = load %struct.hid_device*, %struct.hid_device** %hdev, align 8, !dbg !8499
  %debug_wait = getelementptr inbounds %struct.hid_device, %struct.hid_device* %9, i32 0, i32 45, !dbg !8499
  call void @__init_waitqueue_head(%struct.wait_queue_head* %debug_wait, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.41, i64 0, i64 0), %struct.lock_class_key* @hid_allocate_device.__key) #9, !dbg !8499
  br label %do.end, !dbg !8499

do.end:                                           ; preds = %do.body
  %10 = load %struct.hid_device*, %struct.hid_device** %hdev, align 8, !dbg !8501
  %debug_list = getelementptr inbounds %struct.hid_device, %struct.hid_device* %10, i32 0, i32 43, !dbg !8502
  call void @INIT_LIST_HEAD(%struct.list_head* %debug_list) #9, !dbg !8503
  br label %do.body5, !dbg !8504

do.body5:                                         ; preds = %do.end
  %11 = load %struct.hid_device*, %struct.hid_device** %hdev, align 8, !dbg !8505
  %debug_list_lock = getelementptr inbounds %struct.hid_device, %struct.hid_device* %11, i32 0, i32 44, !dbg !8505
  store %struct.spinlock* %debug_list_lock, %struct.spinlock** %lock.addr.i, align 8
  %12 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !8506
  %13 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %12, i32 0, i32 0, !dbg !8507
  %rlock.i = bitcast %union.anon.1* %13 to %struct.raw_spinlock*, !dbg !8507
  %14 = load %struct.hid_device*, %struct.hid_device** %hdev, align 8, !dbg !8505
  %debug_list_lock7 = getelementptr inbounds %struct.hid_device, %struct.hid_device* %14, i32 0, i32 44, !dbg !8505
  %15 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %.compoundliteral, i32 0, i32 0, !dbg !8505
  %rlock = bitcast %union.anon.1* %15 to %struct.raw_spinlock*, !dbg !8505
  %16 = bitcast %struct.spinlock* %debug_list_lock7 to i8*, !dbg !8505
  %17 = bitcast %struct.spinlock* %.compoundliteral to i8*, !dbg !8505
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %16, i8* align 1 %17, i64 0, i1 false), !dbg !8505
  br label %do.end8, !dbg !8505

do.end8:                                          ; preds = %do.body5
  %18 = load %struct.hid_device*, %struct.hid_device** %hdev, align 8, !dbg !8508
  %driver_input_lock = getelementptr inbounds %struct.hid_device, %struct.hid_device* %18, i32 0, i32 17, !dbg !8509
  call void @sema_init(%struct.semaphore* %driver_input_lock, i32 1) #9, !dbg !8510
  br label %do.body9, !dbg !8511

do.body9:                                         ; preds = %do.end8
  %19 = load %struct.hid_device*, %struct.hid_device** %hdev, align 8, !dbg !8512
  %ll_open_lock = getelementptr inbounds %struct.hid_device, %struct.hid_device* %19, i32 0, i32 21, !dbg !8512
  call void @__mutex_init(%struct.mutex* %ll_open_lock, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.43, i64 0, i64 0), %struct.lock_class_key* @hid_allocate_device.__key.42) #9, !dbg !8512
  br label %do.end10, !dbg !8512

do.end10:                                         ; preds = %do.body9
  %20 = load %struct.hid_device*, %struct.hid_device** %hdev, align 8, !dbg !8514
  store %struct.hid_device* %20, %struct.hid_device** %retval, align 8, !dbg !8515
  br label %return, !dbg !8515

return:                                           ; preds = %do.end10, %if.then
  %21 = load %struct.hid_device*, %struct.hid_device** %retval, align 8, !dbg !8516
  ret %struct.hid_device* %21, !dbg !8516
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @ERR_PTR(i64 %error) #0 !dbg !8517 {
entry:
  %error.addr = alloca i64, align 8
  store i64 %error, i64* %error.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %error.addr, metadata !8521, metadata !DIExpression()), !dbg !8522
  %0 = load i64, i64* %error.addr, align 8, !dbg !8523
  %1 = inttoptr i64 %0 to i8*, !dbg !8524
  ret i8* %1, !dbg !8525
}

; Function Attrs: noredzone
declare dso_local void @device_initialize(%struct.device*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @hid_device_release(%struct.device* %dev) #0 !dbg !8526 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %hid = alloca %struct.hid_device*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.hid_device*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !8527, metadata !DIExpression()), !dbg !8528
  call void @llvm.dbg.declare(metadata %struct.hid_device** %hid, metadata !8529, metadata !DIExpression()), !dbg !8530
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !8531, metadata !DIExpression()), !dbg !8533
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !8533
  %1 = bitcast %struct.device* %0 to i8*, !dbg !8533
  store i8* %1, i8** %__mptr, align 8, !dbg !8533
  br label %do.body, !dbg !8533

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !8534

do.end:                                           ; preds = %do.body
  %2 = load i8*, i8** %__mptr, align 8, !dbg !8533
  %add.ptr = getelementptr i8, i8* %2, i64 -6352, !dbg !8533
  %3 = bitcast i8* %add.ptr to %struct.hid_device*, !dbg !8533
  store %struct.hid_device* %3, %struct.hid_device** %tmp, align 8, !dbg !8534
  %4 = load %struct.hid_device*, %struct.hid_device** %tmp, align 8, !dbg !8533
  store %struct.hid_device* %4, %struct.hid_device** %hid, align 8, !dbg !8530
  %5 = load %struct.hid_device*, %struct.hid_device** %hid, align 8, !dbg !8536
  call void @hid_close_report(%struct.hid_device* %5) #9, !dbg !8537
  %6 = load %struct.hid_device*, %struct.hid_device** %hid, align 8, !dbg !8538
  %dev_rdesc = getelementptr inbounds %struct.hid_device, %struct.hid_device* %6, i32 0, i32 0, !dbg !8539
  %7 = load i8*, i8** %dev_rdesc, align 8, !dbg !8539
  call void @kfree(i8* %7) #9, !dbg !8540
  %8 = load %struct.hid_device*, %struct.hid_device** %hid, align 8, !dbg !8541
  %9 = bitcast %struct.hid_device* %8 to i8*, !dbg !8541
  call void @kfree(i8* %9) #9, !dbg !8542
  ret void, !dbg !8543
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @device_enable_async_suspend(%struct.device* %dev) #0 !dbg !8544 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !8545, metadata !DIExpression()), !dbg !8546
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !8547
  %power = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 11, !dbg !8549
  %is_prepared = getelementptr inbounds %struct.dev_pm_info, %struct.dev_pm_info* %power, i32 0, i32 1, !dbg !8550
  %bf.load = load i16, i16* %is_prepared, align 4, !dbg !8550
  %bf.lshr = lshr i16 %bf.load, 3, !dbg !8550
  %bf.clear = and i16 %bf.lshr, 1, !dbg !8550
  %bf.cast = trunc i16 %bf.clear to i1, !dbg !8550
  br i1 %bf.cast, label %if.end, label %if.then, !dbg !8551

if.then:                                          ; preds = %entry
  %1 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !8552
  %power1 = getelementptr inbounds %struct.device, %struct.device* %1, i32 0, i32 11, !dbg !8553
  %async_suspend = getelementptr inbounds %struct.dev_pm_info, %struct.dev_pm_info* %power1, i32 0, i32 1, !dbg !8554
  %bf.load2 = load i16, i16* %async_suspend, align 4, !dbg !8555
  %bf.clear3 = and i16 %bf.load2, -3, !dbg !8555
  %bf.set = or i16 %bf.clear3, 2, !dbg !8555
  store i16 %bf.set, i16* %async_suspend, align 4, !dbg !8555
  br label %if.end, !dbg !8552

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !8556
}

; Function Attrs: noredzone
declare dso_local void @__init_waitqueue_head(%struct.wait_queue_head*, i8*, %struct.lock_class_key*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @INIT_LIST_HEAD(%struct.list_head* %list) #0 !dbg !8557 {
entry:
  %list.addr = alloca %struct.list_head*, align 8
  store %struct.list_head* %list, %struct.list_head** %list.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %list.addr, metadata !8560, metadata !DIExpression()), !dbg !8561
  br label %do.body, !dbg !8562

do.body:                                          ; preds = %entry
  br label %do.body1, !dbg !8563

do.body1:                                         ; preds = %do.body
  br label %do.end, !dbg !8565

do.end:                                           ; preds = %do.body1
  br label %do.body2, !dbg !8563

do.body2:                                         ; preds = %do.end
  %0 = load %struct.list_head*, %struct.list_head** %list.addr, align 8, !dbg !8567
  %1 = load %struct.list_head*, %struct.list_head** %list.addr, align 8, !dbg !8567
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %1, i32 0, i32 0, !dbg !8567
  store volatile %struct.list_head* %0, %struct.list_head** %next, align 8, !dbg !8567
  br label %do.end3, !dbg !8567

do.end3:                                          ; preds = %do.body2
  br label %do.end4, !dbg !8563

do.end4:                                          ; preds = %do.end3
  %2 = load %struct.list_head*, %struct.list_head** %list.addr, align 8, !dbg !8569
  %3 = load %struct.list_head*, %struct.list_head** %list.addr, align 8, !dbg !8570
  %prev = getelementptr inbounds %struct.list_head, %struct.list_head* %3, i32 0, i32 1, !dbg !8571
  store %struct.list_head* %2, %struct.list_head** %prev, align 8, !dbg !8572
  ret void, !dbg !8573
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* noalias nocapture writeonly, i8* noalias nocapture readonly, i64, i1 immarg) #4

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @sema_init(%struct.semaphore* %sem, i32 %val) #0 !dbg !4474 {
entry:
  %sem.addr = alloca %struct.semaphore*, align 8
  %val.addr = alloca i32, align 4
  %.compoundliteral = alloca %struct.semaphore, align 8
  store %struct.semaphore* %sem, %struct.semaphore** %sem.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.semaphore** %sem.addr, metadata !8574, metadata !DIExpression()), !dbg !8575
  store i32 %val, i32* %val.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %val.addr, metadata !8576, metadata !DIExpression()), !dbg !8577
  %0 = load %struct.semaphore*, %struct.semaphore** %sem.addr, align 8, !dbg !8578
  %count = getelementptr inbounds %struct.semaphore, %struct.semaphore* %.compoundliteral, i32 0, i32 1, !dbg !8579
  %1 = load i32, i32* %val.addr, align 4, !dbg !8579
  store i32 %1, i32* %count, align 8, !dbg !8579
  %wait_list = getelementptr inbounds %struct.semaphore, %struct.semaphore* %.compoundliteral, i32 0, i32 2, !dbg !8579
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %wait_list, i32 0, i32 0, !dbg !8579
  %2 = load %struct.semaphore*, %struct.semaphore** %sem.addr, align 8, !dbg !8579
  %wait_list1 = getelementptr inbounds %struct.semaphore, %struct.semaphore* %2, i32 0, i32 2, !dbg !8579
  store %struct.list_head* %wait_list1, %struct.list_head** %next, align 8, !dbg !8579
  %prev = getelementptr inbounds %struct.list_head, %struct.list_head* %wait_list, i32 0, i32 1, !dbg !8579
  %3 = load %struct.semaphore*, %struct.semaphore** %sem.addr, align 8, !dbg !8579
  %wait_list2 = getelementptr inbounds %struct.semaphore, %struct.semaphore* %3, i32 0, i32 2, !dbg !8579
  store %struct.list_head* %wait_list2, %struct.list_head** %prev, align 8, !dbg !8579
  %4 = bitcast %struct.semaphore* %0 to i8*, !dbg !8580
  %5 = bitcast %struct.semaphore* %.compoundliteral to i8*, !dbg !8580
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %4, i8* align 8 %5, i64 24, i1 false), !dbg !8580
  br label %do.body, !dbg !8581

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !8582

do.end:                                           ; preds = %do.body
  ret void, !dbg !8584
}

; Function Attrs: noredzone
declare dso_local void @__mutex_init(%struct.mutex*, i8*, %struct.lock_class_key*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @hid_destroy_device(%struct.hid_device* %hdev) #0 !dbg !8585 {
entry:
  %hdev.addr = alloca %struct.hid_device*, align 8
  store %struct.hid_device* %hdev, %struct.hid_device** %hdev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.hid_device** %hdev.addr, metadata !8586, metadata !DIExpression()), !dbg !8587
  %0 = load %struct.hid_device*, %struct.hid_device** %hdev.addr, align 8, !dbg !8588
  call void @hid_remove_device(%struct.hid_device* %0) #9, !dbg !8589
  %1 = load %struct.hid_device*, %struct.hid_device** %hdev.addr, align 8, !dbg !8590
  %dev = getelementptr inbounds %struct.hid_device, %struct.hid_device* %1, i32 0, i32 18, !dbg !8591
  call void @put_device(%struct.device* %dev) #9, !dbg !8592
  ret void, !dbg !8593
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @hid_remove_device(%struct.hid_device* %hdev) #0 !dbg !8594 {
entry:
  %hdev.addr = alloca %struct.hid_device*, align 8
  store %struct.hid_device* %hdev, %struct.hid_device** %hdev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.hid_device** %hdev.addr, metadata !8595, metadata !DIExpression()), !dbg !8596
  %0 = load %struct.hid_device*, %struct.hid_device** %hdev.addr, align 8, !dbg !8597
  %status = getelementptr inbounds %struct.hid_device, %struct.hid_device* %0, i32 0, i32 23, !dbg !8599
  %1 = load i64, i64* %status, align 8, !dbg !8599
  %and = and i64 %1, 1, !dbg !8600
  %tobool = icmp ne i64 %and, 0, !dbg !8600
  br i1 %tobool, label %if.then, label %if.end, !dbg !8601

if.then:                                          ; preds = %entry
  %2 = load %struct.hid_device*, %struct.hid_device** %hdev.addr, align 8, !dbg !8602
  %dev = getelementptr inbounds %struct.hid_device, %struct.hid_device* %2, i32 0, i32 18, !dbg !8604
  call void @device_del(%struct.device* %dev) #9, !dbg !8605
  br label %do.body, !dbg !8606

do.body:                                          ; preds = %if.then
  br label %do.end, !dbg !8607

do.end:                                           ; preds = %do.body
  %3 = load %struct.hid_device*, %struct.hid_device** %hdev.addr, align 8, !dbg !8609
  %status1 = getelementptr inbounds %struct.hid_device, %struct.hid_device* %3, i32 0, i32 23, !dbg !8610
  %4 = load i64, i64* %status1, align 8, !dbg !8611
  %and2 = and i64 %4, -2, !dbg !8611
  store i64 %and2, i64* %status1, align 8, !dbg !8611
  br label %if.end, !dbg !8612

if.end:                                           ; preds = %do.end, %entry
  %5 = load %struct.hid_device*, %struct.hid_device** %hdev.addr, align 8, !dbg !8613
  %dev_rdesc = getelementptr inbounds %struct.hid_device, %struct.hid_device* %5, i32 0, i32 0, !dbg !8614
  %6 = load i8*, i8** %dev_rdesc, align 8, !dbg !8614
  call void @kfree(i8* %6) #9, !dbg !8615
  %7 = load %struct.hid_device*, %struct.hid_device** %hdev.addr, align 8, !dbg !8616
  %dev_rdesc3 = getelementptr inbounds %struct.hid_device, %struct.hid_device* %7, i32 0, i32 0, !dbg !8617
  store i8* null, i8** %dev_rdesc3, align 8, !dbg !8618
  %8 = load %struct.hid_device*, %struct.hid_device** %hdev.addr, align 8, !dbg !8619
  %dev_rsize = getelementptr inbounds %struct.hid_device, %struct.hid_device* %8, i32 0, i32 1, !dbg !8620
  store i32 0, i32* %dev_rsize, align 8, !dbg !8621
  ret void, !dbg !8622
}

; Function Attrs: noredzone
declare dso_local void @put_device(%struct.device*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @__hid_register_driver(%struct.hid_driver* %hdrv, %struct.module* %owner, i8* %mod_name) #0 !dbg !8623 {
entry:
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !8461, metadata !DIExpression()), !dbg !8626
  %hdrv.addr = alloca %struct.hid_driver*, align 8
  %owner.addr = alloca %struct.module*, align 8
  %mod_name.addr = alloca i8*, align 8
  %ret = alloca i32, align 4
  %.compoundliteral = alloca %struct.spinlock, align 1
  store %struct.hid_driver* %hdrv, %struct.hid_driver** %hdrv.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.hid_driver** %hdrv.addr, metadata !8629, metadata !DIExpression()), !dbg !8630
  store %struct.module* %owner, %struct.module** %owner.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.module** %owner.addr, metadata !8631, metadata !DIExpression()), !dbg !8632
  store i8* %mod_name, i8** %mod_name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %mod_name.addr, metadata !8633, metadata !DIExpression()), !dbg !8634
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !8635, metadata !DIExpression()), !dbg !8636
  %0 = load %struct.hid_driver*, %struct.hid_driver** %hdrv.addr, align 8, !dbg !8637
  %name = getelementptr inbounds %struct.hid_driver, %struct.hid_driver* %0, i32 0, i32 0, !dbg !8638
  %1 = load i8*, i8** %name, align 8, !dbg !8638
  %2 = load %struct.hid_driver*, %struct.hid_driver** %hdrv.addr, align 8, !dbg !8639
  %driver = getelementptr inbounds %struct.hid_driver, %struct.hid_driver* %2, i32 0, i32 20, !dbg !8640
  %name1 = getelementptr inbounds %struct.device_driver, %struct.device_driver* %driver, i32 0, i32 0, !dbg !8641
  store i8* %1, i8** %name1, align 8, !dbg !8642
  %3 = load %struct.hid_driver*, %struct.hid_driver** %hdrv.addr, align 8, !dbg !8643
  %driver2 = getelementptr inbounds %struct.hid_driver, %struct.hid_driver* %3, i32 0, i32 20, !dbg !8644
  %bus = getelementptr inbounds %struct.device_driver, %struct.device_driver* %driver2, i32 0, i32 1, !dbg !8645
  store %struct.bus_type* @hid_bus_type, %struct.bus_type** %bus, align 8, !dbg !8646
  %4 = load %struct.module*, %struct.module** %owner.addr, align 8, !dbg !8647
  %5 = load %struct.hid_driver*, %struct.hid_driver** %hdrv.addr, align 8, !dbg !8648
  %driver3 = getelementptr inbounds %struct.hid_driver, %struct.hid_driver* %5, i32 0, i32 20, !dbg !8649
  %owner4 = getelementptr inbounds %struct.device_driver, %struct.device_driver* %driver3, i32 0, i32 2, !dbg !8650
  store %struct.module* %4, %struct.module** %owner4, align 8, !dbg !8651
  %6 = load i8*, i8** %mod_name.addr, align 8, !dbg !8652
  %7 = load %struct.hid_driver*, %struct.hid_driver** %hdrv.addr, align 8, !dbg !8653
  %driver5 = getelementptr inbounds %struct.hid_driver, %struct.hid_driver* %7, i32 0, i32 20, !dbg !8654
  %mod_name6 = getelementptr inbounds %struct.device_driver, %struct.device_driver* %driver5, i32 0, i32 3, !dbg !8655
  store i8* %6, i8** %mod_name6, align 8, !dbg !8656
  %8 = load %struct.hid_driver*, %struct.hid_driver** %hdrv.addr, align 8, !dbg !8657
  %dyn_list = getelementptr inbounds %struct.hid_driver, %struct.hid_driver* %8, i32 0, i32 2, !dbg !8658
  call void @INIT_LIST_HEAD(%struct.list_head* %dyn_list) #9, !dbg !8659
  br label %do.body, !dbg !8660

do.body:                                          ; preds = %entry
  %9 = load %struct.hid_driver*, %struct.hid_driver** %hdrv.addr, align 8, !dbg !8661
  %dyn_lock = getelementptr inbounds %struct.hid_driver, %struct.hid_driver* %9, i32 0, i32 3, !dbg !8661
  store %struct.spinlock* %dyn_lock, %struct.spinlock** %lock.addr.i, align 8
  %10 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !8662
  %11 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %10, i32 0, i32 0, !dbg !8663
  %rlock.i = bitcast %union.anon.1* %11 to %struct.raw_spinlock*, !dbg !8663
  %12 = load %struct.hid_driver*, %struct.hid_driver** %hdrv.addr, align 8, !dbg !8661
  %dyn_lock7 = getelementptr inbounds %struct.hid_driver, %struct.hid_driver* %12, i32 0, i32 3, !dbg !8661
  %13 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %.compoundliteral, i32 0, i32 0, !dbg !8661
  %rlock = bitcast %union.anon.1* %13 to %struct.raw_spinlock*, !dbg !8661
  %14 = bitcast %struct.spinlock* %dyn_lock7 to i8*, !dbg !8661
  %15 = bitcast %struct.spinlock* %.compoundliteral to i8*, !dbg !8661
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %14, i8* align 1 %15, i64 0, i1 false), !dbg !8661
  br label %do.end, !dbg !8661

do.end:                                           ; preds = %do.body
  %16 = load %struct.hid_driver*, %struct.hid_driver** %hdrv.addr, align 8, !dbg !8664
  %driver8 = getelementptr inbounds %struct.hid_driver, %struct.hid_driver* %16, i32 0, i32 20, !dbg !8665
  %call9 = call i32 @driver_register(%struct.device_driver* %driver8) #9, !dbg !8666
  store i32 %call9, i32* %ret, align 4, !dbg !8667
  %17 = load i32, i32* %ret, align 4, !dbg !8668
  %cmp = icmp eq i32 %17, 0, !dbg !8670
  br i1 %cmp, label %if.then, label %if.end, !dbg !8671

if.then:                                          ; preds = %do.end
  %call10 = call i32 @bus_for_each_drv(%struct.bus_type* @hid_bus_type, %struct.device_driver* null, i8* null, i32 (%struct.device_driver*, i8*)* @__hid_bus_driver_added) #9, !dbg !8672
  br label %if.end, !dbg !8672

if.end:                                           ; preds = %if.then, %do.end
  %18 = load i32, i32* %ret, align 4, !dbg !8673
  ret i32 %18, !dbg !8674
}

; Function Attrs: noredzone
declare dso_local i32 @driver_register(%struct.device_driver*) #2

; Function Attrs: noredzone
declare dso_local i32 @bus_for_each_drv(%struct.bus_type*, %struct.device_driver*, i8*, i32 (%struct.device_driver*, i8*)*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @__hid_bus_driver_added(%struct.device_driver* %drv, i8* %data) #0 !dbg !8675 {
entry:
  %drv.addr = alloca %struct.device_driver*, align 8
  %data.addr = alloca i8*, align 8
  %hdrv = alloca %struct.hid_driver*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.hid_driver*, align 8
  store %struct.device_driver* %drv, %struct.device_driver** %drv.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device_driver** %drv.addr, metadata !8678, metadata !DIExpression()), !dbg !8679
  store i8* %data, i8** %data.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %data.addr, metadata !8680, metadata !DIExpression()), !dbg !8681
  call void @llvm.dbg.declare(metadata %struct.hid_driver** %hdrv, metadata !8682, metadata !DIExpression()), !dbg !8683
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !8684, metadata !DIExpression()), !dbg !8686
  %0 = load %struct.device_driver*, %struct.device_driver** %drv.addr, align 8, !dbg !8686
  %1 = bitcast %struct.device_driver* %0 to i8*, !dbg !8686
  store i8* %1, i8** %__mptr, align 8, !dbg !8686
  br label %do.body, !dbg !8686

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !8687

do.end:                                           ; preds = %do.body
  %2 = load i8*, i8** %__mptr, align 8, !dbg !8686
  %add.ptr = getelementptr i8, i8* %2, i64 -160, !dbg !8686
  %3 = bitcast i8* %add.ptr to %struct.hid_driver*, !dbg !8686
  store %struct.hid_driver* %3, %struct.hid_driver** %tmp, align 8, !dbg !8687
  %4 = load %struct.hid_driver*, %struct.hid_driver** %tmp, align 8, !dbg !8686
  store %struct.hid_driver* %4, %struct.hid_driver** %hdrv, align 8, !dbg !8683
  %5 = load %struct.hid_driver*, %struct.hid_driver** %hdrv, align 8, !dbg !8689
  %match = getelementptr inbounds %struct.hid_driver, %struct.hid_driver* %5, i32 0, i32 4, !dbg !8691
  %6 = load i1 (%struct.hid_device*, i1)*, i1 (%struct.hid_device*, i1)** %match, align 8, !dbg !8691
  %tobool = icmp ne i1 (%struct.hid_device*, i1)* %6, null, !dbg !8689
  br i1 %tobool, label %if.then, label %if.end, !dbg !8692

if.then:                                          ; preds = %do.end
  %7 = load %struct.hid_driver*, %struct.hid_driver** %hdrv, align 8, !dbg !8693
  %8 = bitcast %struct.hid_driver* %7 to i8*, !dbg !8693
  %call = call i32 @bus_for_each_dev(%struct.bus_type* @hid_bus_type, %struct.device* null, i8* %8, i32 (%struct.device*, i8*)* @__hid_bus_reprobe_drivers) #9, !dbg !8695
  br label %if.end, !dbg !8696

if.end:                                           ; preds = %if.then, %do.end
  ret i32 0, !dbg !8697
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @hid_unregister_driver(%struct.hid_driver* %hdrv) #0 !dbg !8698 {
entry:
  %hdrv.addr = alloca %struct.hid_driver*, align 8
  store %struct.hid_driver* %hdrv, %struct.hid_driver** %hdrv.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.hid_driver** %hdrv.addr, metadata !8701, metadata !DIExpression()), !dbg !8702
  %0 = load %struct.hid_driver*, %struct.hid_driver** %hdrv.addr, align 8, !dbg !8703
  %driver = getelementptr inbounds %struct.hid_driver, %struct.hid_driver* %0, i32 0, i32 20, !dbg !8704
  call void @driver_unregister(%struct.device_driver* %driver) #9, !dbg !8705
  %1 = load %struct.hid_driver*, %struct.hid_driver** %hdrv.addr, align 8, !dbg !8706
  call void @hid_free_dynids(%struct.hid_driver* %1) #9, !dbg !8707
  %2 = load %struct.hid_driver*, %struct.hid_driver** %hdrv.addr, align 8, !dbg !8708
  %3 = bitcast %struct.hid_driver* %2 to i8*, !dbg !8708
  %call = call i32 @bus_for_each_drv(%struct.bus_type* @hid_bus_type, %struct.device_driver* null, i8* %3, i32 (%struct.device_driver*, i8*)* @__bus_removed_driver) #9, !dbg !8709
  ret void, !dbg !8710
}

; Function Attrs: noredzone
declare dso_local void @driver_unregister(%struct.device_driver*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @hid_free_dynids(%struct.hid_driver* %hdrv) #0 !dbg !8711 {
entry:
  %lock.addr.i18 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i18, metadata !7816, metadata !DIExpression()), !dbg !8712
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !7830, metadata !DIExpression()), !dbg !8714
  %hdrv.addr = alloca %struct.hid_driver*, align 8
  %dynid = alloca %struct.hid_dynid*, align 8
  %n = alloca %struct.hid_dynid*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.hid_dynid*, align 8
  %__mptr1 = alloca i8*, align 8
  %tmp5 = alloca %struct.hid_dynid*, align 8
  %__mptr10 = alloca i8*, align 8
  %tmp15 = alloca %struct.hid_dynid*, align 8
  store %struct.hid_driver* %hdrv, %struct.hid_driver** %hdrv.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.hid_driver** %hdrv.addr, metadata !8716, metadata !DIExpression()), !dbg !8717
  call void @llvm.dbg.declare(metadata %struct.hid_dynid** %dynid, metadata !8718, metadata !DIExpression()), !dbg !8719
  call void @llvm.dbg.declare(metadata %struct.hid_dynid** %n, metadata !8720, metadata !DIExpression()), !dbg !8721
  %0 = load %struct.hid_driver*, %struct.hid_driver** %hdrv.addr, align 8, !dbg !8722
  %dyn_lock = getelementptr inbounds %struct.hid_driver, %struct.hid_driver* %0, i32 0, i32 3, !dbg !8723
  store %struct.spinlock* %dyn_lock, %struct.spinlock** %lock.addr.i, align 8
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !8724, !srcloc !7844
  %1 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !8725
  %2 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %1, i32 0, i32 0, !dbg !8725
  %rlock.i = bitcast %union.anon.1* %2 to %struct.raw_spinlock*, !dbg !8725
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !8726, metadata !DIExpression()), !dbg !8729
  %3 = load %struct.hid_driver*, %struct.hid_driver** %hdrv.addr, align 8, !dbg !8729
  %dyn_list = getelementptr inbounds %struct.hid_driver, %struct.hid_driver* %3, i32 0, i32 2, !dbg !8729
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %dyn_list, i32 0, i32 0, !dbg !8729
  %4 = load %struct.list_head*, %struct.list_head** %next, align 8, !dbg !8729
  %5 = bitcast %struct.list_head* %4 to i8*, !dbg !8729
  store i8* %5, i8** %__mptr, align 8, !dbg !8729
  br label %do.body, !dbg !8729

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !8730

do.end:                                           ; preds = %do.body
  %6 = load i8*, i8** %__mptr, align 8, !dbg !8729
  %add.ptr = getelementptr i8, i8* %6, i64 0, !dbg !8729
  %7 = bitcast i8* %add.ptr to %struct.hid_dynid*, !dbg !8729
  store %struct.hid_dynid* %7, %struct.hid_dynid** %tmp, align 8, !dbg !8730
  %8 = load %struct.hid_dynid*, %struct.hid_dynid** %tmp, align 8, !dbg !8729
  store %struct.hid_dynid* %8, %struct.hid_dynid** %dynid, align 8, !dbg !8732
  call void @llvm.dbg.declare(metadata i8** %__mptr1, metadata !8733, metadata !DIExpression()), !dbg !8735
  %9 = load %struct.hid_dynid*, %struct.hid_dynid** %dynid, align 8, !dbg !8735
  %list = getelementptr inbounds %struct.hid_dynid, %struct.hid_dynid* %9, i32 0, i32 0, !dbg !8735
  %next2 = getelementptr inbounds %struct.list_head, %struct.list_head* %list, i32 0, i32 0, !dbg !8735
  %10 = load %struct.list_head*, %struct.list_head** %next2, align 8, !dbg !8735
  %11 = bitcast %struct.list_head* %10 to i8*, !dbg !8735
  store i8* %11, i8** %__mptr1, align 8, !dbg !8735
  br label %do.body3, !dbg !8735

do.body3:                                         ; preds = %do.end
  br label %do.end4, !dbg !8736

do.end4:                                          ; preds = %do.body3
  %12 = load i8*, i8** %__mptr1, align 8, !dbg !8735
  %add.ptr6 = getelementptr i8, i8* %12, i64 0, !dbg !8735
  %13 = bitcast i8* %add.ptr6 to %struct.hid_dynid*, !dbg !8735
  store %struct.hid_dynid* %13, %struct.hid_dynid** %tmp5, align 8, !dbg !8736
  %14 = load %struct.hid_dynid*, %struct.hid_dynid** %tmp5, align 8, !dbg !8735
  store %struct.hid_dynid* %14, %struct.hid_dynid** %n, align 8, !dbg !8732
  br label %for.cond, !dbg !8732

for.cond:                                         ; preds = %do.end14, %do.end4
  %15 = load %struct.hid_dynid*, %struct.hid_dynid** %dynid, align 8, !dbg !8738
  %list7 = getelementptr inbounds %struct.hid_dynid, %struct.hid_dynid* %15, i32 0, i32 0, !dbg !8738
  %16 = load %struct.hid_driver*, %struct.hid_driver** %hdrv.addr, align 8, !dbg !8738
  %dyn_list8 = getelementptr inbounds %struct.hid_driver, %struct.hid_driver* %16, i32 0, i32 2, !dbg !8738
  %cmp = icmp eq %struct.list_head* %list7, %dyn_list8, !dbg !8738
  %lnot = xor i1 %cmp, true, !dbg !8738
  br i1 %lnot, label %for.body, label %for.end, !dbg !8732

for.body:                                         ; preds = %for.cond
  %17 = load %struct.hid_dynid*, %struct.hid_dynid** %dynid, align 8, !dbg !8740
  %list9 = getelementptr inbounds %struct.hid_dynid, %struct.hid_dynid* %17, i32 0, i32 0, !dbg !8742
  call void @list_del(%struct.list_head* %list9) #9, !dbg !8743
  %18 = load %struct.hid_dynid*, %struct.hid_dynid** %dynid, align 8, !dbg !8744
  %19 = bitcast %struct.hid_dynid* %18 to i8*, !dbg !8744
  call void @kfree(i8* %19) #9, !dbg !8745
  br label %for.inc, !dbg !8746

for.inc:                                          ; preds = %for.body
  %20 = load %struct.hid_dynid*, %struct.hid_dynid** %n, align 8, !dbg !8738
  store %struct.hid_dynid* %20, %struct.hid_dynid** %dynid, align 8, !dbg !8738
  call void @llvm.dbg.declare(metadata i8** %__mptr10, metadata !8747, metadata !DIExpression()), !dbg !8749
  %21 = load %struct.hid_dynid*, %struct.hid_dynid** %n, align 8, !dbg !8749
  %list11 = getelementptr inbounds %struct.hid_dynid, %struct.hid_dynid* %21, i32 0, i32 0, !dbg !8749
  %next12 = getelementptr inbounds %struct.list_head, %struct.list_head* %list11, i32 0, i32 0, !dbg !8749
  %22 = load %struct.list_head*, %struct.list_head** %next12, align 8, !dbg !8749
  %23 = bitcast %struct.list_head* %22 to i8*, !dbg !8749
  store i8* %23, i8** %__mptr10, align 8, !dbg !8749
  br label %do.body13, !dbg !8749

do.body13:                                        ; preds = %for.inc
  br label %do.end14, !dbg !8750

do.end14:                                         ; preds = %do.body13
  %24 = load i8*, i8** %__mptr10, align 8, !dbg !8749
  %add.ptr16 = getelementptr i8, i8* %24, i64 0, !dbg !8749
  %25 = bitcast i8* %add.ptr16 to %struct.hid_dynid*, !dbg !8749
  store %struct.hid_dynid* %25, %struct.hid_dynid** %tmp15, align 8, !dbg !8750
  %26 = load %struct.hid_dynid*, %struct.hid_dynid** %tmp15, align 8, !dbg !8749
  store %struct.hid_dynid* %26, %struct.hid_dynid** %n, align 8, !dbg !8738
  br label %for.cond, !dbg !8738, !llvm.loop !8752

for.end:                                          ; preds = %for.cond
  %27 = load %struct.hid_driver*, %struct.hid_driver** %hdrv.addr, align 8, !dbg !8754
  %dyn_lock17 = getelementptr inbounds %struct.hid_driver, %struct.hid_driver* %27, i32 0, i32 3, !dbg !8755
  store %struct.spinlock* %dyn_lock17, %struct.spinlock** %lock.addr.i18, align 8
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !8756, !srcloc !7863
  %28 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i18, align 8, !dbg !8757
  %29 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %28, i32 0, i32 0, !dbg !8757
  %rlock.i19 = bitcast %union.anon.1* %29 to %struct.raw_spinlock*, !dbg !8757
  ret void, !dbg !8758
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @__bus_removed_driver(%struct.device_driver* %drv, i8* %data) #0 !dbg !8759 {
entry:
  %drv.addr = alloca %struct.device_driver*, align 8
  %data.addr = alloca i8*, align 8
  store %struct.device_driver* %drv, %struct.device_driver** %drv.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device_driver** %drv.addr, metadata !8760, metadata !DIExpression()), !dbg !8761
  store i8* %data, i8** %data.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %data.addr, metadata !8762, metadata !DIExpression()), !dbg !8763
  %call = call i32 @bus_rescan_devices(%struct.bus_type* @hid_bus_type) #9, !dbg !8764
  ret i32 %call, !dbg !8765
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @hid_check_keys_pressed(%struct.hid_device* %hid) #0 !dbg !8766 {
entry:
  %retval = alloca i32, align 4
  %hid.addr = alloca %struct.hid_device*, align 8
  %hidinput = alloca %struct.hid_input*, align 8
  %i = alloca i32, align 4
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.hid_input*, align 8
  %__mptr12 = alloca i8*, align 8
  %tmp17 = alloca %struct.hid_input*, align 8
  store %struct.hid_device* %hid, %struct.hid_device** %hid.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.hid_device** %hid.addr, metadata !8767, metadata !DIExpression()), !dbg !8768
  call void @llvm.dbg.declare(metadata %struct.hid_input** %hidinput, metadata !8769, metadata !DIExpression()), !dbg !8770
  call void @llvm.dbg.declare(metadata i32* %i, metadata !8771, metadata !DIExpression()), !dbg !8772
  %0 = load %struct.hid_device*, %struct.hid_device** %hid.addr, align 8, !dbg !8773
  %claimed = getelementptr inbounds %struct.hid_device, %struct.hid_device* %0, i32 0, i32 24, !dbg !8775
  %1 = load i32, i32* %claimed, align 8, !dbg !8775
  %conv = zext i32 %1 to i64, !dbg !8773
  %and = and i64 %conv, 1, !dbg !8776
  %tobool = icmp ne i64 %and, 0, !dbg !8776
  br i1 %tobool, label %if.end, label %if.then, !dbg !8777

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !8778
  br label %return, !dbg !8778

if.end:                                           ; preds = %entry
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !8779, metadata !DIExpression()), !dbg !8782
  %2 = load %struct.hid_device*, %struct.hid_device** %hid.addr, align 8, !dbg !8782
  %inputs = getelementptr inbounds %struct.hid_device, %struct.hid_device* %2, i32 0, i32 27, !dbg !8782
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %inputs, i32 0, i32 0, !dbg !8782
  %3 = load %struct.list_head*, %struct.list_head** %next, align 8, !dbg !8782
  %4 = bitcast %struct.list_head* %3 to i8*, !dbg !8782
  store i8* %4, i8** %__mptr, align 8, !dbg !8782
  br label %do.body, !dbg !8782

do.body:                                          ; preds = %if.end
  br label %do.end, !dbg !8783

do.end:                                           ; preds = %do.body
  %5 = load i8*, i8** %__mptr, align 8, !dbg !8782
  %add.ptr = getelementptr i8, i8* %5, i64 0, !dbg !8782
  %6 = bitcast i8* %add.ptr to %struct.hid_input*, !dbg !8782
  store %struct.hid_input* %6, %struct.hid_input** %tmp, align 8, !dbg !8783
  %7 = load %struct.hid_input*, %struct.hid_input** %tmp, align 8, !dbg !8782
  store %struct.hid_input* %7, %struct.hid_input** %hidinput, align 8, !dbg !8785
  br label %for.cond, !dbg !8785

for.cond:                                         ; preds = %do.end16, %do.end
  %8 = load %struct.hid_input*, %struct.hid_input** %hidinput, align 8, !dbg !8786
  %list = getelementptr inbounds %struct.hid_input, %struct.hid_input* %8, i32 0, i32 0, !dbg !8786
  %9 = load %struct.hid_device*, %struct.hid_device** %hid.addr, align 8, !dbg !8786
  %inputs1 = getelementptr inbounds %struct.hid_device, %struct.hid_device* %9, i32 0, i32 27, !dbg !8786
  %cmp = icmp eq %struct.list_head* %list, %inputs1, !dbg !8786
  %lnot = xor i1 %cmp, true, !dbg !8786
  br i1 %lnot, label %for.body, label %for.end19, !dbg !8785

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %i, align 4, !dbg !8788
  br label %for.cond3, !dbg !8791

for.cond3:                                        ; preds = %for.inc, %for.body
  %10 = load i32, i32* %i, align 4, !dbg !8792
  %conv4 = sext i32 %10 to i64, !dbg !8792
  %cmp5 = icmp ult i64 %conv4, 12, !dbg !8794
  br i1 %cmp5, label %for.body7, label %for.end, !dbg !8795

for.body7:                                        ; preds = %for.cond3
  %11 = load %struct.hid_input*, %struct.hid_input** %hidinput, align 8, !dbg !8796
  %input = getelementptr inbounds %struct.hid_input, %struct.hid_input* %11, i32 0, i32 2, !dbg !8798
  %12 = load %struct.input_dev*, %struct.input_dev** %input, align 8, !dbg !8798
  %key = getelementptr inbounds %struct.input_dev, %struct.input_dev* %12, i32 0, i32 27, !dbg !8799
  %13 = load i32, i32* %i, align 4, !dbg !8800
  %idxprom = sext i32 %13 to i64, !dbg !8796
  %arrayidx = getelementptr [12 x i64], [12 x i64]* %key, i64 0, i64 %idxprom, !dbg !8796
  %14 = load i64, i64* %arrayidx, align 8, !dbg !8796
  %tobool8 = icmp ne i64 %14, 0, !dbg !8796
  br i1 %tobool8, label %if.then9, label %if.end10, !dbg !8801

if.then9:                                         ; preds = %for.body7
  store i32 1, i32* %retval, align 4, !dbg !8802
  br label %return, !dbg !8802

if.end10:                                         ; preds = %for.body7
  br label %for.inc, !dbg !8803

for.inc:                                          ; preds = %if.end10
  %15 = load i32, i32* %i, align 4, !dbg !8804
  %inc = add i32 %15, 1, !dbg !8804
  store i32 %inc, i32* %i, align 4, !dbg !8804
  br label %for.cond3, !dbg !8805, !llvm.loop !8806

for.end:                                          ; preds = %for.cond3
  br label %for.inc11, !dbg !8808

for.inc11:                                        ; preds = %for.end
  call void @llvm.dbg.declare(metadata i8** %__mptr12, metadata !8809, metadata !DIExpression()), !dbg !8811
  %16 = load %struct.hid_input*, %struct.hid_input** %hidinput, align 8, !dbg !8811
  %list13 = getelementptr inbounds %struct.hid_input, %struct.hid_input* %16, i32 0, i32 0, !dbg !8811
  %next14 = getelementptr inbounds %struct.list_head, %struct.list_head* %list13, i32 0, i32 0, !dbg !8811
  %17 = load %struct.list_head*, %struct.list_head** %next14, align 8, !dbg !8811
  %18 = bitcast %struct.list_head* %17 to i8*, !dbg !8811
  store i8* %18, i8** %__mptr12, align 8, !dbg !8811
  br label %do.body15, !dbg !8811

do.body15:                                        ; preds = %for.inc11
  br label %do.end16, !dbg !8812

do.end16:                                         ; preds = %do.body15
  %19 = load i8*, i8** %__mptr12, align 8, !dbg !8811
  %add.ptr18 = getelementptr i8, i8* %19, i64 0, !dbg !8811
  %20 = bitcast i8* %add.ptr18 to %struct.hid_input*, !dbg !8811
  store %struct.hid_input* %20, %struct.hid_input** %tmp17, align 8, !dbg !8812
  %21 = load %struct.hid_input*, %struct.hid_input** %tmp17, align 8, !dbg !8811
  store %struct.hid_input* %21, %struct.hid_input** %hidinput, align 8, !dbg !8786
  br label %for.cond, !dbg !8786, !llvm.loop !8814

for.end19:                                        ; preds = %for.cond
  store i32 0, i32* %retval, align 4, !dbg !8816
  br label %return, !dbg !8816

return:                                           ; preds = %for.end19, %if.then9, %if.then
  %22 = load i32, i32* %retval, align 4, !dbg !8817
  ret i32 %22, !dbg !8817
}

; Function Attrs: cold noinline noredzone nounwind optnone sspstrong
define internal void @hid_exit() #5 section ".exit.text" !dbg !8818 {
entry:
  br label %do.body, !dbg !8819

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !8820

do.end:                                           ; preds = %do.body
  call void @hidraw_exit() #9, !dbg !8822
  call void @bus_unregister(%struct.bus_type* @hid_bus_type) #9, !dbg !8823
  call void @hid_quirks_exit(i16 zeroext -1) #9, !dbg !8824
  ret void, !dbg !8825
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @hidraw_exit() #0 !dbg !8826 {
entry:
  ret void, !dbg !8827
}

; Function Attrs: noredzone
declare dso_local void @bus_unregister(%struct.bus_type*) #2

; Function Attrs: noredzone
declare dso_local void @hid_quirks_exit(i16 zeroext) #2

; Function Attrs: cold noinline noredzone nounwind optnone sspstrong
define internal i32 @hid_init() #5 section ".init.text" !dbg !8828 {
entry:
  %retval = alloca i32, align 4
  %ret = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !8831, metadata !DIExpression()), !dbg !8832
  %0 = load i32, i32* @hid_debug, align 4, !dbg !8833
  %tobool = icmp ne i32 %0, 0, !dbg !8833
  br i1 %tobool, label %if.then, label %if.end, !dbg !8835

if.then:                                          ; preds = %entry
  %call = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([145 x i8], [145 x i8]* @.str.88, i64 0, i64 0)) #13, !dbg !8836
  br label %if.end, !dbg !8836

if.end:                                           ; preds = %if.then, %entry
  %call1 = call i32 @bus_register(%struct.bus_type* @hid_bus_type) #9, !dbg !8837
  store i32 %call1, i32* %ret, align 4, !dbg !8838
  %1 = load i32, i32* %ret, align 4, !dbg !8839
  %tobool2 = icmp ne i32 %1, 0, !dbg !8839
  br i1 %tobool2, label %if.then3, label %if.end5, !dbg !8841

if.then3:                                         ; preds = %if.end
  %call4 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.89, i64 0, i64 0)) #13, !dbg !8842
  br label %err, !dbg !8844

if.end5:                                          ; preds = %if.end
  %call6 = call i32 @hidraw_init() #9, !dbg !8845
  store i32 %call6, i32* %ret, align 4, !dbg !8846
  %2 = load i32, i32* %ret, align 4, !dbg !8847
  %tobool7 = icmp ne i32 %2, 0, !dbg !8847
  br i1 %tobool7, label %if.then8, label %if.end9, !dbg !8849

if.then8:                                         ; preds = %if.end5
  br label %err_bus, !dbg !8850

if.end9:                                          ; preds = %if.end5
  br label %do.body, !dbg !8851

do.body:                                          ; preds = %if.end9
  br label %do.end, !dbg !8852

do.end:                                           ; preds = %do.body
  store i32 0, i32* %retval, align 4, !dbg !8854
  br label %return, !dbg !8854

err_bus:                                          ; preds = %if.then8
  call void @llvm.dbg.label(metadata !8855), !dbg !8856
  call void @bus_unregister(%struct.bus_type* @hid_bus_type) #9, !dbg !8857
  br label %err, !dbg !8857

err:                                              ; preds = %err_bus, %if.then3
  call void @llvm.dbg.label(metadata !8858), !dbg !8859
  %3 = load i32, i32* %ret, align 4, !dbg !8860
  store i32 %3, i32* %retval, align 4, !dbg !8861
  br label %return, !dbg !8861

return:                                           ; preds = %err, %do.end
  %4 = load i32, i32* %retval, align 4, !dbg !8862
  ret i32 %4, !dbg !8862
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @__list_add(%struct.list_head* %new, %struct.list_head* %prev, %struct.list_head* %next) #0 !dbg !8863 {
entry:
  %new.addr = alloca %struct.list_head*, align 8
  %prev.addr = alloca %struct.list_head*, align 8
  %next.addr = alloca %struct.list_head*, align 8
  store %struct.list_head* %new, %struct.list_head** %new.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %new.addr, metadata !8866, metadata !DIExpression()), !dbg !8867
  store %struct.list_head* %prev, %struct.list_head** %prev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %prev.addr, metadata !8868, metadata !DIExpression()), !dbg !8869
  store %struct.list_head* %next, %struct.list_head** %next.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %next.addr, metadata !8870, metadata !DIExpression()), !dbg !8871
  %0 = load %struct.list_head*, %struct.list_head** %new.addr, align 8, !dbg !8872
  %1 = load %struct.list_head*, %struct.list_head** %prev.addr, align 8, !dbg !8874
  %2 = load %struct.list_head*, %struct.list_head** %next.addr, align 8, !dbg !8875
  %call = call zeroext i1 @__list_add_valid(%struct.list_head* %0, %struct.list_head* %1, %struct.list_head* %2) #9, !dbg !8876
  br i1 %call, label %if.end, label %if.then, !dbg !8877

if.then:                                          ; preds = %entry
  br label %do.end8, !dbg !8878

if.end:                                           ; preds = %entry
  %3 = load %struct.list_head*, %struct.list_head** %new.addr, align 8, !dbg !8879
  %4 = load %struct.list_head*, %struct.list_head** %next.addr, align 8, !dbg !8880
  %prev1 = getelementptr inbounds %struct.list_head, %struct.list_head* %4, i32 0, i32 1, !dbg !8881
  store %struct.list_head* %3, %struct.list_head** %prev1, align 8, !dbg !8882
  %5 = load %struct.list_head*, %struct.list_head** %next.addr, align 8, !dbg !8883
  %6 = load %struct.list_head*, %struct.list_head** %new.addr, align 8, !dbg !8884
  %next2 = getelementptr inbounds %struct.list_head, %struct.list_head* %6, i32 0, i32 0, !dbg !8885
  store %struct.list_head* %5, %struct.list_head** %next2, align 8, !dbg !8886
  %7 = load %struct.list_head*, %struct.list_head** %prev.addr, align 8, !dbg !8887
  %8 = load %struct.list_head*, %struct.list_head** %new.addr, align 8, !dbg !8888
  %prev3 = getelementptr inbounds %struct.list_head, %struct.list_head* %8, i32 0, i32 1, !dbg !8889
  store %struct.list_head* %7, %struct.list_head** %prev3, align 8, !dbg !8890
  br label %do.body, !dbg !8891

do.body:                                          ; preds = %if.end
  br label %do.body4, !dbg !8892

do.body4:                                         ; preds = %do.body
  br label %do.end, !dbg !8894

do.end:                                           ; preds = %do.body4
  br label %do.body5, !dbg !8892

do.body5:                                         ; preds = %do.end
  %9 = load %struct.list_head*, %struct.list_head** %new.addr, align 8, !dbg !8896
  %10 = load %struct.list_head*, %struct.list_head** %prev.addr, align 8, !dbg !8896
  %next6 = getelementptr inbounds %struct.list_head, %struct.list_head* %10, i32 0, i32 0, !dbg !8896
  store volatile %struct.list_head* %9, %struct.list_head** %next6, align 8, !dbg !8896
  br label %do.end7, !dbg !8896

do.end7:                                          ; preds = %do.body5
  br label %do.end8, !dbg !8892

do.end8:                                          ; preds = %if.then, %do.end7
  ret void, !dbg !8898
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @__list_add_valid(%struct.list_head* %new, %struct.list_head* %prev, %struct.list_head* %next) #0 !dbg !8899 {
entry:
  %new.addr = alloca %struct.list_head*, align 8
  %prev.addr = alloca %struct.list_head*, align 8
  %next.addr = alloca %struct.list_head*, align 8
  store %struct.list_head* %new, %struct.list_head** %new.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %new.addr, metadata !8902, metadata !DIExpression()), !dbg !8903
  store %struct.list_head* %prev, %struct.list_head** %prev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %prev.addr, metadata !8904, metadata !DIExpression()), !dbg !8905
  store %struct.list_head* %next, %struct.list_head** %next.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %next.addr, metadata !8906, metadata !DIExpression()), !dbg !8907
  ret i1 true, !dbg !8908
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @hid_calculate_multiplier(%struct.hid_device* %hid, %struct.hid_field* %multiplier) #0 !dbg !8909 {
entry:
  %retval = alloca i32, align 4
  %hid.addr = alloca %struct.hid_device*, align 8
  %multiplier.addr = alloca %struct.hid_field*, align 8
  %m = alloca i32, align 4
  %v = alloca i32, align 4
  %lmin = alloca i32, align 4
  %lmax = alloca i32, align 4
  %pmin = alloca i32, align 4
  %pmax = alloca i32, align 4
  store %struct.hid_device* %hid, %struct.hid_device** %hid.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.hid_device** %hid.addr, metadata !8912, metadata !DIExpression()), !dbg !8913
  store %struct.hid_field* %multiplier, %struct.hid_field** %multiplier.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.hid_field** %multiplier.addr, metadata !8914, metadata !DIExpression()), !dbg !8915
  call void @llvm.dbg.declare(metadata i32* %m, metadata !8916, metadata !DIExpression()), !dbg !8917
  call void @llvm.dbg.declare(metadata i32* %v, metadata !8918, metadata !DIExpression()), !dbg !8919
  %0 = load %struct.hid_field*, %struct.hid_field** %multiplier.addr, align 8, !dbg !8920
  %value = getelementptr inbounds %struct.hid_field, %struct.hid_field* %0, i32 0, i32 10, !dbg !8921
  %1 = load i32*, i32** %value, align 8, !dbg !8921
  %2 = load i32, i32* %1, align 4, !dbg !8922
  store i32 %2, i32* %v, align 4, !dbg !8919
  call void @llvm.dbg.declare(metadata i32* %lmin, metadata !8923, metadata !DIExpression()), !dbg !8924
  %3 = load %struct.hid_field*, %struct.hid_field** %multiplier.addr, align 8, !dbg !8925
  %logical_minimum = getelementptr inbounds %struct.hid_field, %struct.hid_field* %3, i32 0, i32 11, !dbg !8926
  %4 = load i32, i32* %logical_minimum, align 8, !dbg !8926
  store i32 %4, i32* %lmin, align 4, !dbg !8924
  call void @llvm.dbg.declare(metadata i32* %lmax, metadata !8927, metadata !DIExpression()), !dbg !8928
  %5 = load %struct.hid_field*, %struct.hid_field** %multiplier.addr, align 8, !dbg !8929
  %logical_maximum = getelementptr inbounds %struct.hid_field, %struct.hid_field* %5, i32 0, i32 12, !dbg !8930
  %6 = load i32, i32* %logical_maximum, align 4, !dbg !8930
  store i32 %6, i32* %lmax, align 4, !dbg !8928
  call void @llvm.dbg.declare(metadata i32* %pmin, metadata !8931, metadata !DIExpression()), !dbg !8932
  %7 = load %struct.hid_field*, %struct.hid_field** %multiplier.addr, align 8, !dbg !8933
  %physical_minimum = getelementptr inbounds %struct.hid_field, %struct.hid_field* %7, i32 0, i32 13, !dbg !8934
  %8 = load i32, i32* %physical_minimum, align 8, !dbg !8934
  store i32 %8, i32* %pmin, align 4, !dbg !8932
  call void @llvm.dbg.declare(metadata i32* %pmax, metadata !8935, metadata !DIExpression()), !dbg !8936
  %9 = load %struct.hid_field*, %struct.hid_field** %multiplier.addr, align 8, !dbg !8937
  %physical_maximum = getelementptr inbounds %struct.hid_field, %struct.hid_field* %9, i32 0, i32 14, !dbg !8938
  %10 = load i32, i32* %physical_maximum, align 4, !dbg !8938
  store i32 %10, i32* %pmax, align 4, !dbg !8936
  %11 = load i32, i32* %lmax, align 4, !dbg !8939
  %12 = load i32, i32* %lmin, align 4, !dbg !8941
  %sub = sub i32 %11, %12, !dbg !8942
  %cmp = icmp eq i32 %sub, 0, !dbg !8943
  br i1 %cmp, label %if.then, label %if.end, !dbg !8944

if.then:                                          ; preds = %entry
  store i32 1, i32* %retval, align 4, !dbg !8945
  br label %return, !dbg !8945

if.end:                                           ; preds = %entry
  %13 = load i32, i32* %v, align 4, !dbg !8946
  %14 = load i32, i32* %lmin, align 4, !dbg !8947
  %sub1 = sub i32 %13, %14, !dbg !8948
  %15 = load i32, i32* %lmax, align 4, !dbg !8949
  %16 = load i32, i32* %lmin, align 4, !dbg !8950
  %sub2 = sub i32 %15, %16, !dbg !8951
  %div = sdiv i32 %sub1, %sub2, !dbg !8952
  %17 = load i32, i32* %pmax, align 4, !dbg !8953
  %18 = load i32, i32* %pmin, align 4, !dbg !8954
  %sub3 = sub i32 %17, %18, !dbg !8955
  %mul = mul i32 %div, %sub3, !dbg !8956
  %19 = load i32, i32* %pmin, align 4, !dbg !8957
  %add = add i32 %mul, %19, !dbg !8958
  store i32 %add, i32* %m, align 4, !dbg !8959
  %20 = load %struct.hid_field*, %struct.hid_field** %multiplier.addr, align 8, !dbg !8960
  %unit_exponent = getelementptr inbounds %struct.hid_field, %struct.hid_field* %20, i32 0, i32 15, !dbg !8960
  %21 = load i32, i32* %unit_exponent, align 8, !dbg !8960
  %cmp4 = icmp ne i32 %21, 0, !dbg !8960
  %lnot = xor i1 %cmp4, true, !dbg !8960
  %lnot5 = xor i1 %lnot, true, !dbg !8960
  %lnot.ext = zext i1 %lnot5 to i32, !dbg !8960
  %conv = sext i32 %lnot.ext to i64, !dbg !8960
  %tobool = icmp ne i64 %conv, 0, !dbg !8960
  br i1 %tobool, label %if.then6, label %if.end8, !dbg !8962

if.then6:                                         ; preds = %if.end
  %22 = load %struct.hid_device*, %struct.hid_device** %hid.addr, align 8, !dbg !8963
  %dev = getelementptr inbounds %struct.hid_device, %struct.hid_device* %22, i32 0, i32 18, !dbg !8963
  %23 = load %struct.hid_field*, %struct.hid_field** %multiplier.addr, align 8, !dbg !8963
  %unit_exponent7 = getelementptr inbounds %struct.hid_field, %struct.hid_field* %23, i32 0, i32 15, !dbg !8963
  %24 = load i32, i32* %unit_exponent7, align 8, !dbg !8963
  call void (%struct.device*, i8*, ...) @_dev_warn(%struct.device* %dev, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.47, i64 0, i64 0), i32 %24) #13, !dbg !8963
  br label %if.end8, !dbg !8965

if.end8:                                          ; preds = %if.then6, %if.end
  %25 = load i32, i32* %m, align 4, !dbg !8966
  %cmp9 = icmp eq i32 %25, 0, !dbg !8966
  br i1 %cmp9, label %lor.end, label %lor.lhs.false, !dbg !8966

lor.lhs.false:                                    ; preds = %if.end8
  %26 = load i32, i32* %m, align 4, !dbg !8966
  %cmp11 = icmp sgt i32 %26, 255, !dbg !8966
  br i1 %cmp11, label %lor.end, label %lor.rhs, !dbg !8966

lor.rhs:                                          ; preds = %lor.lhs.false
  %27 = load i32, i32* %m, align 4, !dbg !8966
  %cmp13 = icmp slt i32 %27, -255, !dbg !8966
  br label %lor.end, !dbg !8966

lor.end:                                          ; preds = %lor.rhs, %lor.lhs.false, %if.end8
  %28 = phi i1 [ true, %lor.lhs.false ], [ true, %if.end8 ], [ %cmp13, %lor.rhs ]
  %lnot15 = xor i1 %28, true, !dbg !8966
  %lnot17 = xor i1 %lnot15, true, !dbg !8966
  %lnot.ext18 = zext i1 %lnot17 to i32, !dbg !8966
  %conv19 = sext i32 %lnot.ext18 to i64, !dbg !8966
  %tobool20 = icmp ne i64 %conv19, 0, !dbg !8966
  br i1 %tobool20, label %if.then21, label %if.end23, !dbg !8968

if.then21:                                        ; preds = %lor.end
  %29 = load %struct.hid_device*, %struct.hid_device** %hid.addr, align 8, !dbg !8969
  %dev22 = getelementptr inbounds %struct.hid_device, %struct.hid_device* %29, i32 0, i32 18, !dbg !8969
  %30 = load i32, i32* %m, align 4, !dbg !8969
  call void (%struct.device*, i8*, ...) @_dev_warn(%struct.device* %dev22, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.48, i64 0, i64 0), i32 %30) #13, !dbg !8969
  store i32 1, i32* %m, align 4, !dbg !8971
  br label %if.end23, !dbg !8972

if.end23:                                         ; preds = %if.then21, %lor.end
  %31 = load i32, i32* %m, align 4, !dbg !8973
  store i32 %31, i32* %retval, align 4, !dbg !8974
  br label %return, !dbg !8974

return:                                           ; preds = %if.end23, %if.then
  %32 = load i32, i32* %retval, align 4, !dbg !8975
  ret i32 %32, !dbg !8975
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @hid_apply_multiplier_to_field(%struct.hid_device* %hid, %struct.hid_field* %field, %struct.hid_collection* %multiplier_collection, i32 %effective_multiplier) #0 !dbg !8976 {
entry:
  %hid.addr = alloca %struct.hid_device*, align 8
  %field.addr = alloca %struct.hid_field*, align 8
  %multiplier_collection.addr = alloca %struct.hid_collection*, align 8
  %effective_multiplier.addr = alloca i32, align 4
  %collection = alloca %struct.hid_collection*, align 8
  %usage = alloca %struct.hid_usage*, align 8
  %i = alloca i32, align 4
  store %struct.hid_device* %hid, %struct.hid_device** %hid.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.hid_device** %hid.addr, metadata !8979, metadata !DIExpression()), !dbg !8980
  store %struct.hid_field* %field, %struct.hid_field** %field.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.hid_field** %field.addr, metadata !8981, metadata !DIExpression()), !dbg !8982
  store %struct.hid_collection* %multiplier_collection, %struct.hid_collection** %multiplier_collection.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.hid_collection** %multiplier_collection.addr, metadata !8983, metadata !DIExpression()), !dbg !8984
  store i32 %effective_multiplier, i32* %effective_multiplier.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %effective_multiplier.addr, metadata !8985, metadata !DIExpression()), !dbg !8986
  call void @llvm.dbg.declare(metadata %struct.hid_collection** %collection, metadata !8987, metadata !DIExpression()), !dbg !8988
  call void @llvm.dbg.declare(metadata %struct.hid_usage** %usage, metadata !8989, metadata !DIExpression()), !dbg !8990
  call void @llvm.dbg.declare(metadata i32* %i, metadata !8991, metadata !DIExpression()), !dbg !8992
  store i32 0, i32* %i, align 4, !dbg !8993
  br label %for.cond, !dbg !8995

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4, !dbg !8996
  %1 = load %struct.hid_field*, %struct.hid_field** %field.addr, align 8, !dbg !8998
  %maxusage = getelementptr inbounds %struct.hid_field, %struct.hid_field* %1, i32 0, i32 4, !dbg !8999
  %2 = load i32, i32* %maxusage, align 8, !dbg !8999
  %cmp = icmp ult i32 %0, %2, !dbg !9000
  br i1 %cmp, label %for.body, label %for.end, !dbg !9001

for.body:                                         ; preds = %for.cond
  %3 = load %struct.hid_field*, %struct.hid_field** %field.addr, align 8, !dbg !9002
  %usage1 = getelementptr inbounds %struct.hid_field, %struct.hid_field* %3, i32 0, i32 3, !dbg !9004
  %4 = load %struct.hid_usage*, %struct.hid_usage** %usage1, align 8, !dbg !9004
  %5 = load i32, i32* %i, align 4, !dbg !9005
  %idxprom = sext i32 %5 to i64, !dbg !9002
  %arrayidx = getelementptr %struct.hid_usage, %struct.hid_usage* %4, i64 %idxprom, !dbg !9002
  store %struct.hid_usage* %arrayidx, %struct.hid_usage** %usage, align 8, !dbg !9006
  %6 = load %struct.hid_device*, %struct.hid_device** %hid.addr, align 8, !dbg !9007
  %collection2 = getelementptr inbounds %struct.hid_device, %struct.hid_device* %6, i32 0, i32 4, !dbg !9008
  %7 = load %struct.hid_collection*, %struct.hid_collection** %collection2, align 8, !dbg !9008
  %8 = load %struct.hid_usage*, %struct.hid_usage** %usage, align 8, !dbg !9009
  %collection_index = getelementptr inbounds %struct.hid_usage, %struct.hid_usage* %8, i32 0, i32 1, !dbg !9010
  %9 = load i32, i32* %collection_index, align 4, !dbg !9010
  %idxprom3 = zext i32 %9 to i64, !dbg !9007
  %arrayidx4 = getelementptr %struct.hid_collection, %struct.hid_collection* %7, i64 %idxprom3, !dbg !9007
  store %struct.hid_collection* %arrayidx4, %struct.hid_collection** %collection, align 8, !dbg !9011
  br label %while.cond, !dbg !9012

while.cond:                                       ; preds = %while.body, %for.body
  %10 = load %struct.hid_collection*, %struct.hid_collection** %collection, align 8, !dbg !9013
  %parent_idx = getelementptr inbounds %struct.hid_collection, %struct.hid_collection* %10, i32 0, i32 0, !dbg !9014
  %11 = load i32, i32* %parent_idx, align 4, !dbg !9014
  %cmp5 = icmp ne i32 %11, -1, !dbg !9015
  br i1 %cmp5, label %land.rhs, label %land.end, !dbg !9016

land.rhs:                                         ; preds = %while.cond
  %12 = load %struct.hid_collection*, %struct.hid_collection** %collection, align 8, !dbg !9017
  %13 = load %struct.hid_collection*, %struct.hid_collection** %multiplier_collection.addr, align 8, !dbg !9018
  %cmp6 = icmp ne %struct.hid_collection* %12, %13, !dbg !9019
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond
  %14 = phi i1 [ false, %while.cond ], [ %cmp6, %land.rhs ], !dbg !9020
  br i1 %14, label %while.body, label %while.end, !dbg !9012

while.body:                                       ; preds = %land.end
  %15 = load %struct.hid_device*, %struct.hid_device** %hid.addr, align 8, !dbg !9021
  %collection7 = getelementptr inbounds %struct.hid_device, %struct.hid_device* %15, i32 0, i32 4, !dbg !9022
  %16 = load %struct.hid_collection*, %struct.hid_collection** %collection7, align 8, !dbg !9022
  %17 = load %struct.hid_collection*, %struct.hid_collection** %collection, align 8, !dbg !9023
  %parent_idx8 = getelementptr inbounds %struct.hid_collection, %struct.hid_collection* %17, i32 0, i32 0, !dbg !9024
  %18 = load i32, i32* %parent_idx8, align 4, !dbg !9024
  %idxprom9 = sext i32 %18 to i64, !dbg !9021
  %arrayidx10 = getelementptr %struct.hid_collection, %struct.hid_collection* %16, i64 %idxprom9, !dbg !9021
  store %struct.hid_collection* %arrayidx10, %struct.hid_collection** %collection, align 8, !dbg !9025
  br label %while.cond, !dbg !9012, !llvm.loop !9026

while.end:                                        ; preds = %land.end
  %19 = load %struct.hid_collection*, %struct.hid_collection** %collection, align 8, !dbg !9028
  %parent_idx11 = getelementptr inbounds %struct.hid_collection, %struct.hid_collection* %19, i32 0, i32 0, !dbg !9030
  %20 = load i32, i32* %parent_idx11, align 4, !dbg !9030
  %cmp12 = icmp ne i32 %20, -1, !dbg !9031
  br i1 %cmp12, label %if.then, label %lor.lhs.false, !dbg !9032

lor.lhs.false:                                    ; preds = %while.end
  %21 = load %struct.hid_collection*, %struct.hid_collection** %multiplier_collection.addr, align 8, !dbg !9033
  %cmp13 = icmp eq %struct.hid_collection* %21, null, !dbg !9034
  br i1 %cmp13, label %if.then, label %if.end, !dbg !9035

if.then:                                          ; preds = %lor.lhs.false, %while.end
  %22 = load i32, i32* %effective_multiplier.addr, align 4, !dbg !9036
  %conv = trunc i32 %22 to i8, !dbg !9036
  %23 = load %struct.hid_usage*, %struct.hid_usage** %usage, align 8, !dbg !9037
  %resolution_multiplier = getelementptr inbounds %struct.hid_usage, %struct.hid_usage* %23, i32 0, i32 3, !dbg !9038
  store i8 %conv, i8* %resolution_multiplier, align 4, !dbg !9039
  br label %if.end, !dbg !9037

if.end:                                           ; preds = %if.then, %lor.lhs.false
  br label %for.inc, !dbg !9040

for.inc:                                          ; preds = %if.end
  %24 = load i32, i32* %i, align 4, !dbg !9041
  %inc = add i32 %24, 1, !dbg !9041
  store i32 %inc, i32* %i, align 4, !dbg !9041
  br label %for.cond, !dbg !9042, !llvm.loop !9043

for.end:                                          ; preds = %for.cond
  ret void, !dbg !9045
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @hid_concatenate_last_usage_page(%struct.hid_parser* %parser) #0 !dbg !9046 {
entry:
  %parser.addr = alloca %struct.hid_parser*, align 8
  %i = alloca i32, align 4
  %usage_page = alloca i32, align 4
  %current_page = alloca i32, align 4
  store %struct.hid_parser* %parser, %struct.hid_parser** %parser.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.hid_parser** %parser.addr, metadata !9049, metadata !DIExpression()), !dbg !9050
  call void @llvm.dbg.declare(metadata i32* %i, metadata !9051, metadata !DIExpression()), !dbg !9052
  call void @llvm.dbg.declare(metadata i32* %usage_page, metadata !9053, metadata !DIExpression()), !dbg !9054
  call void @llvm.dbg.declare(metadata i32* %current_page, metadata !9055, metadata !DIExpression()), !dbg !9056
  %0 = load %struct.hid_parser*, %struct.hid_parser** %parser.addr, align 8, !dbg !9057
  %local = getelementptr inbounds %struct.hid_parser, %struct.hid_parser* %0, i32 0, i32 3, !dbg !9059
  %usage_index = getelementptr inbounds %struct.hid_local, %struct.hid_local* %local, i32 0, i32 3, !dbg !9060
  %1 = load i32, i32* %usage_index, align 4, !dbg !9060
  %tobool = icmp ne i32 %1, 0, !dbg !9057
  br i1 %tobool, label %if.end, label %if.then, !dbg !9061

if.then:                                          ; preds = %entry
  br label %for.end, !dbg !9062

if.end:                                           ; preds = %entry
  %2 = load %struct.hid_parser*, %struct.hid_parser** %parser.addr, align 8, !dbg !9063
  %global = getelementptr inbounds %struct.hid_parser, %struct.hid_parser* %2, i32 0, i32 0, !dbg !9064
  %usage_page1 = getelementptr inbounds %struct.hid_global, %struct.hid_global* %global, i32 0, i32 0, !dbg !9065
  %3 = load i32, i32* %usage_page1, align 8, !dbg !9065
  store i32 %3, i32* %usage_page, align 4, !dbg !9066
  %4 = load %struct.hid_parser*, %struct.hid_parser** %parser.addr, align 8, !dbg !9067
  %local2 = getelementptr inbounds %struct.hid_parser, %struct.hid_parser* %4, i32 0, i32 3, !dbg !9069
  %usage_index3 = getelementptr inbounds %struct.hid_local, %struct.hid_local* %local2, i32 0, i32 3, !dbg !9070
  %5 = load i32, i32* %usage_index3, align 4, !dbg !9070
  %sub = sub i32 %5, 1, !dbg !9071
  store i32 %sub, i32* %i, align 4, !dbg !9072
  br label %for.cond, !dbg !9073

for.cond:                                         ; preds = %for.inc, %if.end
  %6 = load i32, i32* %i, align 4, !dbg !9074
  %cmp = icmp sge i32 %6, 0, !dbg !9076
  br i1 %cmp, label %for.body, label %for.end, !dbg !9077

for.body:                                         ; preds = %for.cond
  %7 = load %struct.hid_parser*, %struct.hid_parser** %parser.addr, align 8, !dbg !9078
  %local4 = getelementptr inbounds %struct.hid_parser, %struct.hid_parser* %7, i32 0, i32 3, !dbg !9081
  %usage_size = getelementptr inbounds %struct.hid_local, %struct.hid_local* %local4, i32 0, i32 1, !dbg !9082
  %8 = load i32, i32* %i, align 4, !dbg !9083
  %idxprom = sext i32 %8 to i64, !dbg !9078
  %arrayidx = getelementptr [12288 x i8], [12288 x i8]* %usage_size, i64 0, i64 %idxprom, !dbg !9078
  %9 = load i8, i8* %arrayidx, align 1, !dbg !9078
  %conv = zext i8 %9 to i32, !dbg !9078
  %cmp5 = icmp sgt i32 %conv, 2, !dbg !9084
  br i1 %cmp5, label %if.then7, label %if.end8, !dbg !9085

if.then7:                                         ; preds = %for.body
  br label %for.inc, !dbg !9086

if.end8:                                          ; preds = %for.body
  %10 = load %struct.hid_parser*, %struct.hid_parser** %parser.addr, align 8, !dbg !9087
  %local9 = getelementptr inbounds %struct.hid_parser, %struct.hid_parser* %10, i32 0, i32 3, !dbg !9088
  %usage = getelementptr inbounds %struct.hid_local, %struct.hid_local* %local9, i32 0, i32 0, !dbg !9089
  %11 = load i32, i32* %i, align 4, !dbg !9090
  %idxprom10 = sext i32 %11 to i64, !dbg !9087
  %arrayidx11 = getelementptr [12288 x i32], [12288 x i32]* %usage, i64 0, i64 %idxprom10, !dbg !9087
  %12 = load i32, i32* %arrayidx11, align 4, !dbg !9087
  %shr = lshr i32 %12, 16, !dbg !9091
  store i32 %shr, i32* %current_page, align 4, !dbg !9092
  %13 = load i32, i32* %current_page, align 4, !dbg !9093
  %14 = load i32, i32* %usage_page, align 4, !dbg !9095
  %cmp12 = icmp eq i32 %13, %14, !dbg !9096
  br i1 %cmp12, label %if.then14, label %if.end15, !dbg !9097

if.then14:                                        ; preds = %if.end8
  br label %for.end, !dbg !9098

if.end15:                                         ; preds = %if.end8
  %15 = load %struct.hid_parser*, %struct.hid_parser** %parser.addr, align 8, !dbg !9099
  %16 = load i32, i32* %i, align 4, !dbg !9100
  call void @complete_usage(%struct.hid_parser* %15, i32 %16) #9, !dbg !9101
  br label %for.inc, !dbg !9102

for.inc:                                          ; preds = %if.end15, %if.then7
  %17 = load i32, i32* %i, align 4, !dbg !9103
  %dec = add i32 %17, -1, !dbg !9103
  store i32 %dec, i32* %i, align 4, !dbg !9103
  br label %for.cond, !dbg !9104, !llvm.loop !9105

for.end:                                          ; preds = %if.then, %if.then14, %for.cond
  ret void, !dbg !9107
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @item_udata(%struct.hid_item* %item) #0 !dbg !9108 {
entry:
  %retval = alloca i32, align 4
  %item.addr = alloca %struct.hid_item*, align 8
  store %struct.hid_item* %item, %struct.hid_item** %item.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.hid_item** %item.addr, metadata !9111, metadata !DIExpression()), !dbg !9112
  %0 = load %struct.hid_item*, %struct.hid_item** %item.addr, align 8, !dbg !9113
  %size = getelementptr inbounds %struct.hid_item, %struct.hid_item* %0, i32 0, i32 1, !dbg !9114
  %1 = load i8, i8* %size, align 4, !dbg !9114
  %conv = zext i8 %1 to i32, !dbg !9113
  switch i32 %conv, label %sw.epilog [
    i32 1, label %sw.bb
    i32 2, label %sw.bb2
    i32 4, label %sw.bb5
  ], !dbg !9115

sw.bb:                                            ; preds = %entry
  %2 = load %struct.hid_item*, %struct.hid_item** %item.addr, align 8, !dbg !9116
  %data = getelementptr inbounds %struct.hid_item, %struct.hid_item* %2, i32 0, i32 4, !dbg !9118
  %u8 = bitcast %union.anon.67* %data to i8*, !dbg !9119
  %3 = load i8, i8* %u8, align 8, !dbg !9119
  %conv1 = zext i8 %3 to i32, !dbg !9116
  store i32 %conv1, i32* %retval, align 4, !dbg !9120
  br label %return, !dbg !9120

sw.bb2:                                           ; preds = %entry
  %4 = load %struct.hid_item*, %struct.hid_item** %item.addr, align 8, !dbg !9121
  %data3 = getelementptr inbounds %struct.hid_item, %struct.hid_item* %4, i32 0, i32 4, !dbg !9122
  %u16 = bitcast %union.anon.67* %data3 to i16*, !dbg !9123
  %5 = load i16, i16* %u16, align 8, !dbg !9123
  %conv4 = zext i16 %5 to i32, !dbg !9121
  store i32 %conv4, i32* %retval, align 4, !dbg !9124
  br label %return, !dbg !9124

sw.bb5:                                           ; preds = %entry
  %6 = load %struct.hid_item*, %struct.hid_item** %item.addr, align 8, !dbg !9125
  %data6 = getelementptr inbounds %struct.hid_item, %struct.hid_item* %6, i32 0, i32 4, !dbg !9126
  %u32 = bitcast %union.anon.67* %data6 to i32*, !dbg !9127
  %7 = load i32, i32* %u32, align 8, !dbg !9127
  store i32 %7, i32* %retval, align 4, !dbg !9128
  br label %return, !dbg !9128

sw.epilog:                                        ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !9129
  br label %return, !dbg !9129

return:                                           ; preds = %sw.epilog, %sw.bb5, %sw.bb2, %sw.bb
  %8 = load i32, i32* %retval, align 4, !dbg !9130
  ret i32 %8, !dbg !9130
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @open_collection(%struct.hid_parser* %parser, i32 %type) #0 !dbg !9131 {
entry:
  %s.addr.i.i = alloca %struct.kmem_cache*, align 8
  call void @llvm.dbg.declare(metadata %struct.kmem_cache** %s.addr.i.i, metadata !4565, metadata !DIExpression()), !dbg !9134
  %flags.addr.i17.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i17.i, metadata !4575, metadata !DIExpression()), !dbg !9139
  %size.addr.i18.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i18.i, metadata !4577, metadata !DIExpression()), !dbg !9140
  %ret.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %ret.i.i, metadata !4579, metadata !DIExpression()), !dbg !9141
  %retval.i12.i = alloca i32, align 4
  %flags.addr.i13.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i13.i, metadata !4581, metadata !DIExpression()), !dbg !9142
  %retval.i.i = alloca i32, align 4
  %size.addr.i11.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i11.i, metadata !4587, metadata !DIExpression()), !dbg !9144
  %size.addr.i.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i.i, metadata !4593, metadata !DIExpression()), !dbg !9146
  %flags.addr.i.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i.i.i, metadata !4602, metadata !DIExpression()), !dbg !9149
  %order.addr.i.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %order.addr.i.i.i, metadata !4604, metadata !DIExpression()), !dbg !9150
  %size.addr.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i, metadata !4606, metadata !DIExpression()), !dbg !9151
  %flags.addr.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i.i, metadata !4608, metadata !DIExpression()), !dbg !9152
  %order.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %order.i.i, metadata !4610, metadata !DIExpression()), !dbg !9153
  %retval.i = alloca i8*, align 8
  %size.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i, metadata !4612, metadata !DIExpression()), !dbg !9154
  %flags.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i, metadata !4614, metadata !DIExpression()), !dbg !9155
  %index.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %index.i, metadata !4616, metadata !DIExpression()), !dbg !9156
  %retval = alloca i32, align 4
  %parser.addr = alloca %struct.hid_parser*, align 8
  %type.addr = alloca i32, align 4
  %collection = alloca %struct.hid_collection*, align 8
  %usage = alloca i32, align 4
  %collection_index = alloca i32, align 4
  %collection_stack = alloca i32*, align 8
  %new_size = alloca i32, align 4
  store %struct.hid_parser* %parser, %struct.hid_parser** %parser.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.hid_parser** %parser.addr, metadata !9157, metadata !DIExpression()), !dbg !9158
  store i32 %type, i32* %type.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %type.addr, metadata !9159, metadata !DIExpression()), !dbg !9160
  call void @llvm.dbg.declare(metadata %struct.hid_collection** %collection, metadata !9161, metadata !DIExpression()), !dbg !9162
  call void @llvm.dbg.declare(metadata i32* %usage, metadata !9163, metadata !DIExpression()), !dbg !9164
  call void @llvm.dbg.declare(metadata i32* %collection_index, metadata !9165, metadata !DIExpression()), !dbg !9166
  %0 = load %struct.hid_parser*, %struct.hid_parser** %parser.addr, align 8, !dbg !9167
  %local = getelementptr inbounds %struct.hid_parser, %struct.hid_parser* %0, i32 0, i32 3, !dbg !9168
  %usage1 = getelementptr inbounds %struct.hid_local, %struct.hid_local* %local, i32 0, i32 0, !dbg !9169
  %arrayidx = getelementptr [12288 x i32], [12288 x i32]* %usage1, i64 0, i64 0, !dbg !9167
  %1 = load i32, i32* %arrayidx, align 4, !dbg !9167
  store i32 %1, i32* %usage, align 4, !dbg !9170
  %2 = load %struct.hid_parser*, %struct.hid_parser** %parser.addr, align 8, !dbg !9171
  %collection_stack_ptr = getelementptr inbounds %struct.hid_parser, %struct.hid_parser* %2, i32 0, i32 5, !dbg !9173
  %3 = load i32, i32* %collection_stack_ptr, align 8, !dbg !9173
  %4 = load %struct.hid_parser*, %struct.hid_parser** %parser.addr, align 8, !dbg !9174
  %collection_stack_size = getelementptr inbounds %struct.hid_parser, %struct.hid_parser* %4, i32 0, i32 6, !dbg !9175
  %5 = load i32, i32* %collection_stack_size, align 4, !dbg !9175
  %cmp = icmp eq i32 %3, %5, !dbg !9176
  br i1 %cmp, label %if.then, label %if.end7, !dbg !9177

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i32** %collection_stack, metadata !9178, metadata !DIExpression()), !dbg !9180
  call void @llvm.dbg.declare(metadata i32* %new_size, metadata !9181, metadata !DIExpression()), !dbg !9182
  %6 = load %struct.hid_parser*, %struct.hid_parser** %parser.addr, align 8, !dbg !9183
  %collection_stack_size2 = getelementptr inbounds %struct.hid_parser, %struct.hid_parser* %6, i32 0, i32 6, !dbg !9184
  %7 = load i32, i32* %collection_stack_size2, align 4, !dbg !9184
  %add = add i32 %7, 4, !dbg !9185
  store i32 %add, i32* %new_size, align 4, !dbg !9182
  %8 = load %struct.hid_parser*, %struct.hid_parser** %parser.addr, align 8, !dbg !9186
  %collection_stack3 = getelementptr inbounds %struct.hid_parser, %struct.hid_parser* %8, i32 0, i32 4, !dbg !9187
  %9 = load i32*, i32** %collection_stack3, align 8, !dbg !9187
  %10 = bitcast i32* %9 to i8*, !dbg !9186
  %11 = load i32, i32* %new_size, align 4, !dbg !9188
  %conv = zext i32 %11 to i64, !dbg !9188
  %mul = mul i64 %conv, 4, !dbg !9189
  %call = call i8* @krealloc(i8* %10, i64 %mul, i32 3264) #9, !dbg !9190
  %12 = bitcast i8* %call to i32*, !dbg !9190
  store i32* %12, i32** %collection_stack, align 8, !dbg !9191
  %13 = load i32*, i32** %collection_stack, align 8, !dbg !9192
  %tobool = icmp ne i32* %13, null, !dbg !9192
  br i1 %tobool, label %if.end, label %if.then4, !dbg !9194

if.then4:                                         ; preds = %if.then
  store i32 -12, i32* %retval, align 4, !dbg !9195
  br label %return, !dbg !9195

if.end:                                           ; preds = %if.then
  %14 = load i32*, i32** %collection_stack, align 8, !dbg !9196
  %15 = load %struct.hid_parser*, %struct.hid_parser** %parser.addr, align 8, !dbg !9197
  %collection_stack5 = getelementptr inbounds %struct.hid_parser, %struct.hid_parser* %15, i32 0, i32 4, !dbg !9198
  store i32* %14, i32** %collection_stack5, align 8, !dbg !9199
  %16 = load i32, i32* %new_size, align 4, !dbg !9200
  %17 = load %struct.hid_parser*, %struct.hid_parser** %parser.addr, align 8, !dbg !9201
  %collection_stack_size6 = getelementptr inbounds %struct.hid_parser, %struct.hid_parser* %17, i32 0, i32 6, !dbg !9202
  store i32 %16, i32* %collection_stack_size6, align 4, !dbg !9203
  br label %if.end7, !dbg !9204

if.end7:                                          ; preds = %if.end, %entry
  %18 = load %struct.hid_parser*, %struct.hid_parser** %parser.addr, align 8, !dbg !9205
  %device = getelementptr inbounds %struct.hid_parser, %struct.hid_parser* %18, i32 0, i32 7, !dbg !9206
  %19 = load %struct.hid_device*, %struct.hid_device** %device, align 8, !dbg !9206
  %maxcollection = getelementptr inbounds %struct.hid_device, %struct.hid_device* %19, i32 0, i32 6, !dbg !9207
  %20 = load i32, i32* %maxcollection, align 4, !dbg !9207
  %21 = load %struct.hid_parser*, %struct.hid_parser** %parser.addr, align 8, !dbg !9208
  %device8 = getelementptr inbounds %struct.hid_parser, %struct.hid_parser* %21, i32 0, i32 7, !dbg !9209
  %22 = load %struct.hid_device*, %struct.hid_device** %device8, align 8, !dbg !9209
  %collection_size = getelementptr inbounds %struct.hid_device, %struct.hid_device* %22, i32 0, i32 5, !dbg !9210
  %23 = load i32, i32* %collection_size, align 8, !dbg !9210
  %cmp9 = icmp eq i32 %20, %23, !dbg !9211
  br i1 %cmp9, label %if.then11, label %if.end41, !dbg !9212

if.then11:                                        ; preds = %if.end7
  %24 = load %struct.hid_parser*, %struct.hid_parser** %parser.addr, align 8, !dbg !9213
  %device12 = getelementptr inbounds %struct.hid_parser, %struct.hid_parser* %24, i32 0, i32 7, !dbg !9214
  %25 = load %struct.hid_device*, %struct.hid_device** %device12, align 8, !dbg !9214
  %collection_size13 = getelementptr inbounds %struct.hid_device, %struct.hid_device* %25, i32 0, i32 5, !dbg !9215
  %26 = load i32, i32* %collection_size13, align 8, !dbg !9215
  %conv14 = zext i32 %26 to i64, !dbg !9213
  %call15 = call i64 @array3_size(i64 16, i64 %conv14, i64 2) #9, !dbg !9216
  store i64 %call15, i64* %size.addr.i, align 8
  store i32 3264, i32* %flags.addr.i, align 4
  %27 = load i64, i64* %size.addr.i, align 8, !dbg !9217
  %28 = call i1 @llvm.is.constant.i64(i64 %27) #10, !dbg !9218
  br i1 %28, label %if.then.i, label %if.end9.i, !dbg !9219

if.then.i:                                        ; preds = %if.then11
  %29 = load i64, i64* %size.addr.i, align 8, !dbg !9220
  %cmp.i = icmp ugt i64 %29, 8192, !dbg !9221
  br i1 %cmp.i, label %if.then1.i, label %if.end.i, !dbg !9222

if.then1.i:                                       ; preds = %if.then.i
  %30 = load i64, i64* %size.addr.i, align 8, !dbg !9223
  %31 = load i32, i32* %flags.addr.i, align 4, !dbg !9224
  store i64 %30, i64* %size.addr.i.i, align 8
  store i32 %31, i32* %flags.addr.i.i, align 4
  %32 = load i64, i64* %size.addr.i.i, align 8, !dbg !9225
  %call.i.i = call i32 @get_order(i64 %32) #11, !dbg !9226
  store i32 %call.i.i, i32* %order.i.i, align 4, !dbg !9153
  %33 = load i64, i64* %size.addr.i.i, align 8, !dbg !9227
  %34 = load i32, i32* %flags.addr.i.i, align 4, !dbg !9228
  %35 = load i32, i32* %order.i.i, align 4, !dbg !9229
  store i64 %33, i64* %size.addr.i.i.i, align 8
  store i32 %34, i32* %flags.addr.i.i.i, align 4
  store i32 %35, i32* %order.addr.i.i.i, align 4
  %36 = load i64, i64* %size.addr.i.i.i, align 8, !dbg !9230
  %37 = load i32, i32* %flags.addr.i.i.i, align 4, !dbg !9231
  %38 = load i32, i32* %order.addr.i.i.i, align 4, !dbg !9232
  %call.i.i.i = call noalias i8* @kmalloc_order(i64 %36, i32 %37, i32 %38) #12, !dbg !9233
  %ptrint.i.i.i = ptrtoint i8* %call.i.i.i to i64, !dbg !9233
  %maskedptr.i.i.i = and i64 %ptrint.i.i.i, 4095, !dbg !9233
  %maskcond.i.i.i = icmp eq i64 %maskedptr.i.i.i, 0, !dbg !9233
  call void @llvm.assume(i1 %maskcond.i.i.i) #10, !dbg !9233
  store i8* %call.i.i.i, i8** %retval.i, align 8, !dbg !9234
  br label %kmalloc.exit, !dbg !9234

if.end.i:                                         ; preds = %if.then.i
  %39 = load i64, i64* %size.addr.i, align 8, !dbg !9235
  store i64 %39, i64* %size.addr.i11.i, align 8
  %40 = load i64, i64* %size.addr.i11.i, align 8, !dbg !9236
  %tobool.i.i = icmp ne i64 %40, 0, !dbg !9236
  br i1 %tobool.i.i, label %if.end.i.i, label %if.then.i.i, !dbg !9237

if.then.i.i:                                      ; preds = %if.end.i
  store i32 0, i32* %retval.i.i, align 4, !dbg !9238
  br label %kmalloc_index.exit.i, !dbg !9238

if.end.i.i:                                       ; preds = %if.end.i
  %41 = load i64, i64* %size.addr.i11.i, align 8, !dbg !9239
  %cmp.i.i = icmp ule i64 %41, 8, !dbg !9240
  br i1 %cmp.i.i, label %if.then1.i.i, label %if.end2.i.i, !dbg !9241

if.then1.i.i:                                     ; preds = %if.end.i.i
  store i32 3, i32* %retval.i.i, align 4, !dbg !9242
  br label %kmalloc_index.exit.i, !dbg !9242

if.end2.i.i:                                      ; preds = %if.end.i.i
  %42 = load i64, i64* %size.addr.i11.i, align 8, !dbg !9243
  %cmp3.i.i = icmp ugt i64 %42, 64, !dbg !9244
  br i1 %cmp3.i.i, label %land.lhs.true.i.i, label %if.end6.i.i, !dbg !9245

land.lhs.true.i.i:                                ; preds = %if.end2.i.i
  %43 = load i64, i64* %size.addr.i11.i, align 8, !dbg !9246
  %cmp4.i.i = icmp ule i64 %43, 96, !dbg !9247
  br i1 %cmp4.i.i, label %if.then5.i.i, label %if.end6.i.i, !dbg !9248

if.then5.i.i:                                     ; preds = %land.lhs.true.i.i
  store i32 1, i32* %retval.i.i, align 4, !dbg !9249
  br label %kmalloc_index.exit.i, !dbg !9249

if.end6.i.i:                                      ; preds = %land.lhs.true.i.i, %if.end2.i.i
  %44 = load i64, i64* %size.addr.i11.i, align 8, !dbg !9250
  %cmp7.i.i = icmp ugt i64 %44, 128, !dbg !9251
  br i1 %cmp7.i.i, label %land.lhs.true8.i.i, label %if.end11.i.i, !dbg !9252

land.lhs.true8.i.i:                               ; preds = %if.end6.i.i
  %45 = load i64, i64* %size.addr.i11.i, align 8, !dbg !9253
  %cmp9.i.i = icmp ule i64 %45, 192, !dbg !9254
  br i1 %cmp9.i.i, label %if.then10.i.i, label %if.end11.i.i, !dbg !9255

if.then10.i.i:                                    ; preds = %land.lhs.true8.i.i
  store i32 2, i32* %retval.i.i, align 4, !dbg !9256
  br label %kmalloc_index.exit.i, !dbg !9256

if.end11.i.i:                                     ; preds = %land.lhs.true8.i.i, %if.end6.i.i
  %46 = load i64, i64* %size.addr.i11.i, align 8, !dbg !9257
  %cmp12.i.i = icmp ule i64 %46, 8, !dbg !9258
  br i1 %cmp12.i.i, label %if.then13.i.i, label %if.end14.i.i, !dbg !9259

if.then13.i.i:                                    ; preds = %if.end11.i.i
  store i32 3, i32* %retval.i.i, align 4, !dbg !9260
  br label %kmalloc_index.exit.i, !dbg !9260

if.end14.i.i:                                     ; preds = %if.end11.i.i
  %47 = load i64, i64* %size.addr.i11.i, align 8, !dbg !9261
  %cmp15.i.i = icmp ule i64 %47, 16, !dbg !9262
  br i1 %cmp15.i.i, label %if.then16.i.i, label %if.end17.i.i, !dbg !9263

if.then16.i.i:                                    ; preds = %if.end14.i.i
  store i32 4, i32* %retval.i.i, align 4, !dbg !9264
  br label %kmalloc_index.exit.i, !dbg !9264

if.end17.i.i:                                     ; preds = %if.end14.i.i
  %48 = load i64, i64* %size.addr.i11.i, align 8, !dbg !9265
  %cmp18.i.i = icmp ule i64 %48, 32, !dbg !9266
  br i1 %cmp18.i.i, label %if.then19.i.i, label %if.end20.i.i, !dbg !9267

if.then19.i.i:                                    ; preds = %if.end17.i.i
  store i32 5, i32* %retval.i.i, align 4, !dbg !9268
  br label %kmalloc_index.exit.i, !dbg !9268

if.end20.i.i:                                     ; preds = %if.end17.i.i
  %49 = load i64, i64* %size.addr.i11.i, align 8, !dbg !9269
  %cmp21.i.i = icmp ule i64 %49, 64, !dbg !9270
  br i1 %cmp21.i.i, label %if.then22.i.i, label %if.end23.i.i, !dbg !9271

if.then22.i.i:                                    ; preds = %if.end20.i.i
  store i32 6, i32* %retval.i.i, align 4, !dbg !9272
  br label %kmalloc_index.exit.i, !dbg !9272

if.end23.i.i:                                     ; preds = %if.end20.i.i
  %50 = load i64, i64* %size.addr.i11.i, align 8, !dbg !9273
  %cmp24.i.i = icmp ule i64 %50, 128, !dbg !9274
  br i1 %cmp24.i.i, label %if.then25.i.i, label %if.end26.i.i, !dbg !9275

if.then25.i.i:                                    ; preds = %if.end23.i.i
  store i32 7, i32* %retval.i.i, align 4, !dbg !9276
  br label %kmalloc_index.exit.i, !dbg !9276

if.end26.i.i:                                     ; preds = %if.end23.i.i
  %51 = load i64, i64* %size.addr.i11.i, align 8, !dbg !9277
  %cmp27.i.i = icmp ule i64 %51, 256, !dbg !9278
  br i1 %cmp27.i.i, label %if.then28.i.i, label %if.end29.i.i, !dbg !9279

if.then28.i.i:                                    ; preds = %if.end26.i.i
  store i32 8, i32* %retval.i.i, align 4, !dbg !9280
  br label %kmalloc_index.exit.i, !dbg !9280

if.end29.i.i:                                     ; preds = %if.end26.i.i
  %52 = load i64, i64* %size.addr.i11.i, align 8, !dbg !9281
  %cmp30.i.i = icmp ule i64 %52, 512, !dbg !9282
  br i1 %cmp30.i.i, label %if.then31.i.i, label %if.end32.i.i, !dbg !9283

if.then31.i.i:                                    ; preds = %if.end29.i.i
  store i32 9, i32* %retval.i.i, align 4, !dbg !9284
  br label %kmalloc_index.exit.i, !dbg !9284

if.end32.i.i:                                     ; preds = %if.end29.i.i
  %53 = load i64, i64* %size.addr.i11.i, align 8, !dbg !9285
  %cmp33.i.i = icmp ule i64 %53, 1024, !dbg !9286
  br i1 %cmp33.i.i, label %if.then34.i.i, label %if.end35.i.i, !dbg !9287

if.then34.i.i:                                    ; preds = %if.end32.i.i
  store i32 10, i32* %retval.i.i, align 4, !dbg !9288
  br label %kmalloc_index.exit.i, !dbg !9288

if.end35.i.i:                                     ; preds = %if.end32.i.i
  %54 = load i64, i64* %size.addr.i11.i, align 8, !dbg !9289
  %cmp36.i.i = icmp ule i64 %54, 2048, !dbg !9290
  br i1 %cmp36.i.i, label %if.then37.i.i, label %if.end38.i.i, !dbg !9291

if.then37.i.i:                                    ; preds = %if.end35.i.i
  store i32 11, i32* %retval.i.i, align 4, !dbg !9292
  br label %kmalloc_index.exit.i, !dbg !9292

if.end38.i.i:                                     ; preds = %if.end35.i.i
  %55 = load i64, i64* %size.addr.i11.i, align 8, !dbg !9293
  %cmp39.i.i = icmp ule i64 %55, 4096, !dbg !9294
  br i1 %cmp39.i.i, label %if.then40.i.i, label %if.end41.i.i, !dbg !9295

if.then40.i.i:                                    ; preds = %if.end38.i.i
  store i32 12, i32* %retval.i.i, align 4, !dbg !9296
  br label %kmalloc_index.exit.i, !dbg !9296

if.end41.i.i:                                     ; preds = %if.end38.i.i
  %56 = load i64, i64* %size.addr.i11.i, align 8, !dbg !9297
  %cmp42.i.i = icmp ule i64 %56, 8192, !dbg !9298
  br i1 %cmp42.i.i, label %if.then43.i.i, label %if.end44.i.i, !dbg !9299

if.then43.i.i:                                    ; preds = %if.end41.i.i
  store i32 13, i32* %retval.i.i, align 4, !dbg !9300
  br label %kmalloc_index.exit.i, !dbg !9300

if.end44.i.i:                                     ; preds = %if.end41.i.i
  %57 = load i64, i64* %size.addr.i11.i, align 8, !dbg !9301
  %cmp45.i.i = icmp ule i64 %57, 16384, !dbg !9302
  br i1 %cmp45.i.i, label %if.then46.i.i, label %if.end47.i.i, !dbg !9303

if.then46.i.i:                                    ; preds = %if.end44.i.i
  store i32 14, i32* %retval.i.i, align 4, !dbg !9304
  br label %kmalloc_index.exit.i, !dbg !9304

if.end47.i.i:                                     ; preds = %if.end44.i.i
  %58 = load i64, i64* %size.addr.i11.i, align 8, !dbg !9305
  %cmp48.i.i = icmp ule i64 %58, 32768, !dbg !9306
  br i1 %cmp48.i.i, label %if.then49.i.i, label %if.end50.i.i, !dbg !9307

if.then49.i.i:                                    ; preds = %if.end47.i.i
  store i32 15, i32* %retval.i.i, align 4, !dbg !9308
  br label %kmalloc_index.exit.i, !dbg !9308

if.end50.i.i:                                     ; preds = %if.end47.i.i
  %59 = load i64, i64* %size.addr.i11.i, align 8, !dbg !9309
  %cmp51.i.i = icmp ule i64 %59, 65536, !dbg !9310
  br i1 %cmp51.i.i, label %if.then52.i.i, label %if.end53.i.i, !dbg !9311

if.then52.i.i:                                    ; preds = %if.end50.i.i
  store i32 16, i32* %retval.i.i, align 4, !dbg !9312
  br label %kmalloc_index.exit.i, !dbg !9312

if.end53.i.i:                                     ; preds = %if.end50.i.i
  %60 = load i64, i64* %size.addr.i11.i, align 8, !dbg !9313
  %cmp54.i.i = icmp ule i64 %60, 131072, !dbg !9314
  br i1 %cmp54.i.i, label %if.then55.i.i, label %if.end56.i.i, !dbg !9315

if.then55.i.i:                                    ; preds = %if.end53.i.i
  store i32 17, i32* %retval.i.i, align 4, !dbg !9316
  br label %kmalloc_index.exit.i, !dbg !9316

if.end56.i.i:                                     ; preds = %if.end53.i.i
  %61 = load i64, i64* %size.addr.i11.i, align 8, !dbg !9317
  %cmp57.i.i = icmp ule i64 %61, 262144, !dbg !9318
  br i1 %cmp57.i.i, label %if.then58.i.i, label %if.end59.i.i, !dbg !9319

if.then58.i.i:                                    ; preds = %if.end56.i.i
  store i32 18, i32* %retval.i.i, align 4, !dbg !9320
  br label %kmalloc_index.exit.i, !dbg !9320

if.end59.i.i:                                     ; preds = %if.end56.i.i
  %62 = load i64, i64* %size.addr.i11.i, align 8, !dbg !9321
  %cmp60.i.i = icmp ule i64 %62, 524288, !dbg !9322
  br i1 %cmp60.i.i, label %if.then61.i.i, label %if.end62.i.i, !dbg !9323

if.then61.i.i:                                    ; preds = %if.end59.i.i
  store i32 19, i32* %retval.i.i, align 4, !dbg !9324
  br label %kmalloc_index.exit.i, !dbg !9324

if.end62.i.i:                                     ; preds = %if.end59.i.i
  %63 = load i64, i64* %size.addr.i11.i, align 8, !dbg !9325
  %cmp63.i.i = icmp ule i64 %63, 1048576, !dbg !9326
  br i1 %cmp63.i.i, label %if.then64.i.i, label %if.end65.i.i, !dbg !9327

if.then64.i.i:                                    ; preds = %if.end62.i.i
  store i32 20, i32* %retval.i.i, align 4, !dbg !9328
  br label %kmalloc_index.exit.i, !dbg !9328

if.end65.i.i:                                     ; preds = %if.end62.i.i
  %64 = load i64, i64* %size.addr.i11.i, align 8, !dbg !9329
  %cmp66.i.i = icmp ule i64 %64, 2097152, !dbg !9330
  br i1 %cmp66.i.i, label %if.then67.i.i, label %if.end68.i.i, !dbg !9331

if.then67.i.i:                                    ; preds = %if.end65.i.i
  store i32 21, i32* %retval.i.i, align 4, !dbg !9332
  br label %kmalloc_index.exit.i, !dbg !9332

if.end68.i.i:                                     ; preds = %if.end65.i.i
  %65 = load i64, i64* %size.addr.i11.i, align 8, !dbg !9333
  %cmp69.i.i = icmp ule i64 %65, 4194304, !dbg !9334
  br i1 %cmp69.i.i, label %if.then70.i.i, label %if.end71.i.i, !dbg !9335

if.then70.i.i:                                    ; preds = %if.end68.i.i
  store i32 22, i32* %retval.i.i, align 4, !dbg !9336
  br label %kmalloc_index.exit.i, !dbg !9336

if.end71.i.i:                                     ; preds = %if.end68.i.i
  %66 = load i64, i64* %size.addr.i11.i, align 8, !dbg !9337
  %cmp72.i.i = icmp ule i64 %66, 8388608, !dbg !9338
  br i1 %cmp72.i.i, label %if.then73.i.i, label %if.end74.i.i, !dbg !9339

if.then73.i.i:                                    ; preds = %if.end71.i.i
  store i32 23, i32* %retval.i.i, align 4, !dbg !9340
  br label %kmalloc_index.exit.i, !dbg !9340

if.end74.i.i:                                     ; preds = %if.end71.i.i
  %67 = load i64, i64* %size.addr.i11.i, align 8, !dbg !9341
  %cmp75.i.i = icmp ule i64 %67, 16777216, !dbg !9342
  br i1 %cmp75.i.i, label %if.then76.i.i, label %if.end77.i.i, !dbg !9343

if.then76.i.i:                                    ; preds = %if.end74.i.i
  store i32 24, i32* %retval.i.i, align 4, !dbg !9344
  br label %kmalloc_index.exit.i, !dbg !9344

if.end77.i.i:                                     ; preds = %if.end74.i.i
  %68 = load i64, i64* %size.addr.i11.i, align 8, !dbg !9345
  %cmp78.i.i = icmp ule i64 %68, 33554432, !dbg !9346
  br i1 %cmp78.i.i, label %if.then79.i.i, label %if.end80.i.i, !dbg !9347

if.then79.i.i:                                    ; preds = %if.end77.i.i
  store i32 25, i32* %retval.i.i, align 4, !dbg !9348
  br label %kmalloc_index.exit.i, !dbg !9348

if.end80.i.i:                                     ; preds = %if.end77.i.i
  %69 = load i64, i64* %size.addr.i11.i, align 8, !dbg !9349
  %cmp81.i.i = icmp ule i64 %69, 67108864, !dbg !9350
  br i1 %cmp81.i.i, label %if.then82.i.i, label %if.end83.i.i, !dbg !9351

if.then82.i.i:                                    ; preds = %if.end80.i.i
  store i32 26, i32* %retval.i.i, align 4, !dbg !9352
  br label %kmalloc_index.exit.i, !dbg !9352

if.end83.i.i:                                     ; preds = %if.end80.i.i
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.72, i64 0, i64 0), i32 382, i32 0, i64 12) #10, !dbg !9353, !srcloc !4792
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.unreachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 105) #10, !dbg !9354, !srcloc !4796
  unreachable, !dbg !9355

kmalloc_index.exit.i:                             ; preds = %if.then82.i.i, %if.then79.i.i, %if.then76.i.i, %if.then73.i.i, %if.then70.i.i, %if.then67.i.i, %if.then64.i.i, %if.then61.i.i, %if.then58.i.i, %if.then55.i.i, %if.then52.i.i, %if.then49.i.i, %if.then46.i.i, %if.then43.i.i, %if.then40.i.i, %if.then37.i.i, %if.then34.i.i, %if.then31.i.i, %if.then28.i.i, %if.then25.i.i, %if.then22.i.i, %if.then19.i.i, %if.then16.i.i, %if.then13.i.i, %if.then10.i.i, %if.then5.i.i, %if.then1.i.i, %if.then.i.i
  %70 = load i32, i32* %retval.i.i, align 4, !dbg !9356
  store i32 %70, i32* %index.i, align 4, !dbg !9357
  %71 = load i32, i32* %index.i, align 4, !dbg !9358
  %tobool.i = icmp ne i32 %71, 0, !dbg !9358
  br i1 %tobool.i, label %if.end4.i, label %if.then3.i, !dbg !9359

if.then3.i:                                       ; preds = %kmalloc_index.exit.i
  store i8* inttoptr (i64 16 to i8*), i8** %retval.i, align 8, !dbg !9360
  br label %kmalloc.exit, !dbg !9360

if.end4.i:                                        ; preds = %kmalloc_index.exit.i
  %72 = load i32, i32* %flags.addr.i, align 4, !dbg !9361
  store i32 %72, i32* %flags.addr.i13.i, align 4
  %73 = load i32, i32* %flags.addr.i13.i, align 4, !dbg !9362
  %and.i.i = and i32 %73, 17, !dbg !9362
  %cmp.i14.i = icmp eq i32 %and.i.i, 0, !dbg !9362
  %lnot.i.i = xor i1 %cmp.i14.i, true, !dbg !9362
  %lnot.ext.i.i = zext i1 %cmp.i14.i to i32, !dbg !9362
  %conv.i.i = sext i32 %lnot.ext.i.i to i64, !dbg !9362
  br i1 %cmp.i14.i, label %if.then.i15.i, label %if.end.i16.i, !dbg !9363

if.then.i15.i:                                    ; preds = %if.end4.i
  store i32 0, i32* %retval.i12.i, align 4, !dbg !9364
  br label %kmalloc_type.exit.i, !dbg !9364

if.end.i16.i:                                     ; preds = %if.end4.i
  %74 = load i32, i32* %flags.addr.i13.i, align 4, !dbg !9365
  %and2.i.i = and i32 %74, 1, !dbg !9366
  %tobool3.i.i = icmp ne i32 %and2.i.i, 0, !dbg !9365
  %75 = zext i1 %tobool3.i.i to i64, !dbg !9365
  %cond.i.i = select i1 %tobool3.i.i, i32 2, i32 1, !dbg !9365
  store i32 %cond.i.i, i32* %retval.i12.i, align 4, !dbg !9367
  br label %kmalloc_type.exit.i, !dbg !9367

kmalloc_type.exit.i:                              ; preds = %if.end.i16.i, %if.then.i15.i
  %76 = load i32, i32* %retval.i12.i, align 4, !dbg !9368
  %idxprom.i = zext i32 %76 to i64, !dbg !9369
  %arrayidx.i = getelementptr [3 x [14 x %struct.kmem_cache*]], [3 x [14 x %struct.kmem_cache*]]* @kmalloc_caches, i64 0, i64 %idxprom.i, !dbg !9369
  %77 = load i32, i32* %index.i, align 4, !dbg !9370
  %idxprom6.i = zext i32 %77 to i64, !dbg !9369
  %arrayidx7.i = getelementptr [14 x %struct.kmem_cache*], [14 x %struct.kmem_cache*]* %arrayidx.i, i64 0, i64 %idxprom6.i, !dbg !9369
  %78 = load %struct.kmem_cache*, %struct.kmem_cache** %arrayidx7.i, align 8, !dbg !9369
  %79 = load i32, i32* %flags.addr.i, align 4, !dbg !9371
  %80 = load i64, i64* %size.addr.i, align 8, !dbg !9372
  store %struct.kmem_cache* %78, %struct.kmem_cache** %s.addr.i.i, align 8
  store i32 %79, i32* %flags.addr.i17.i, align 4
  store i64 %80, i64* %size.addr.i18.i, align 8
  %81 = load %struct.kmem_cache*, %struct.kmem_cache** %s.addr.i.i, align 8, !dbg !9373
  %82 = load i32, i32* %flags.addr.i17.i, align 4, !dbg !9374
  %call.i19.i = call noalias i8* @kmem_cache_alloc(%struct.kmem_cache* %81, i32 %82) #12, !dbg !9375
  %ptrint.i.i = ptrtoint i8* %call.i19.i to i64, !dbg !9375
  %maskedptr.i.i = and i64 %ptrint.i.i, 7, !dbg !9375
  %maskcond.i.i = icmp eq i64 %maskedptr.i.i, 0, !dbg !9375
  call void @llvm.assume(i1 %maskcond.i.i) #10, !dbg !9375
  store i8* %call.i19.i, i8** %ret.i.i, align 8, !dbg !9141
  %83 = load %struct.kmem_cache*, %struct.kmem_cache** %s.addr.i.i, align 8, !dbg !9376
  %84 = load i8*, i8** %ret.i.i, align 8, !dbg !9377
  %85 = load i64, i64* %size.addr.i18.i, align 8, !dbg !9378
  %86 = load i32, i32* %flags.addr.i17.i, align 4, !dbg !9379
  %call1.i.i = call i8* @kasan_kmalloc(%struct.kmem_cache* %83, i8* %84, i64 %85, i32 %86) #12, !dbg !9380
  store i8* %call1.i.i, i8** %ret.i.i, align 8, !dbg !9381
  %87 = load i8*, i8** %ret.i.i, align 8, !dbg !9382
  store i8* %87, i8** %retval.i, align 8, !dbg !9383
  br label %kmalloc.exit, !dbg !9383

if.end9.i:                                        ; preds = %if.then11
  %88 = load i64, i64* %size.addr.i, align 8, !dbg !9384
  %89 = load i32, i32* %flags.addr.i, align 4, !dbg !9385
  %call10.i = call noalias i8* @__kmalloc(i64 %88, i32 %89) #12, !dbg !9386
  %ptrint.i = ptrtoint i8* %call10.i to i64, !dbg !9386
  %maskedptr.i = and i64 %ptrint.i, 7, !dbg !9386
  %maskcond.i = icmp eq i64 %maskedptr.i, 0, !dbg !9386
  call void @llvm.assume(i1 %maskcond.i) #10, !dbg !9386
  store i8* %call10.i, i8** %retval.i, align 8, !dbg !9387
  br label %kmalloc.exit, !dbg !9387

kmalloc.exit:                                     ; preds = %if.then1.i, %if.then3.i, %kmalloc_type.exit.i, %if.end9.i
  %90 = load i8*, i8** %retval.i, align 8, !dbg !9388
  %91 = bitcast i8* %90 to %struct.hid_collection*, !dbg !9389
  store %struct.hid_collection* %91, %struct.hid_collection** %collection, align 8, !dbg !9390
  %92 = load %struct.hid_collection*, %struct.hid_collection** %collection, align 8, !dbg !9391
  %cmp17 = icmp eq %struct.hid_collection* %92, null, !dbg !9393
  br i1 %cmp17, label %if.then19, label %if.end21, !dbg !9394

if.then19:                                        ; preds = %kmalloc.exit
  %93 = load %struct.hid_parser*, %struct.hid_parser** %parser.addr, align 8, !dbg !9395
  %device20 = getelementptr inbounds %struct.hid_parser, %struct.hid_parser* %93, i32 0, i32 7, !dbg !9395
  %94 = load %struct.hid_device*, %struct.hid_device** %device20, align 8, !dbg !9395
  %dev = getelementptr inbounds %struct.hid_device, %struct.hid_device* %94, i32 0, i32 18, !dbg !9395
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %dev, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.50, i64 0, i64 0)) #13, !dbg !9395
  store i32 -12, i32* %retval, align 4, !dbg !9397
  br label %return, !dbg !9397

if.end21:                                         ; preds = %kmalloc.exit
  %95 = load %struct.hid_collection*, %struct.hid_collection** %collection, align 8, !dbg !9398
  %96 = bitcast %struct.hid_collection* %95 to i8*, !dbg !9399
  %97 = load %struct.hid_parser*, %struct.hid_parser** %parser.addr, align 8, !dbg !9400
  %device22 = getelementptr inbounds %struct.hid_parser, %struct.hid_parser* %97, i32 0, i32 7, !dbg !9401
  %98 = load %struct.hid_device*, %struct.hid_device** %device22, align 8, !dbg !9401
  %collection23 = getelementptr inbounds %struct.hid_device, %struct.hid_device* %98, i32 0, i32 4, !dbg !9402
  %99 = load %struct.hid_collection*, %struct.hid_collection** %collection23, align 8, !dbg !9402
  %100 = bitcast %struct.hid_collection* %99 to i8*, !dbg !9399
  %101 = load %struct.hid_parser*, %struct.hid_parser** %parser.addr, align 8, !dbg !9403
  %device24 = getelementptr inbounds %struct.hid_parser, %struct.hid_parser* %101, i32 0, i32 7, !dbg !9404
  %102 = load %struct.hid_device*, %struct.hid_device** %device24, align 8, !dbg !9404
  %collection_size25 = getelementptr inbounds %struct.hid_device, %struct.hid_device* %102, i32 0, i32 5, !dbg !9405
  %103 = load i32, i32* %collection_size25, align 8, !dbg !9405
  %conv26 = zext i32 %103 to i64, !dbg !9403
  %mul27 = mul i64 16, %conv26, !dbg !9406
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %96, i8* align 4 %100, i64 %mul27, i1 false), !dbg !9399
  %104 = load %struct.hid_collection*, %struct.hid_collection** %collection, align 8, !dbg !9407
  %105 = load %struct.hid_parser*, %struct.hid_parser** %parser.addr, align 8, !dbg !9408
  %device28 = getelementptr inbounds %struct.hid_parser, %struct.hid_parser* %105, i32 0, i32 7, !dbg !9409
  %106 = load %struct.hid_device*, %struct.hid_device** %device28, align 8, !dbg !9409
  %collection_size29 = getelementptr inbounds %struct.hid_device, %struct.hid_device* %106, i32 0, i32 5, !dbg !9410
  %107 = load i32, i32* %collection_size29, align 8, !dbg !9410
  %idx.ext = zext i32 %107 to i64, !dbg !9411
  %add.ptr = getelementptr %struct.hid_collection, %struct.hid_collection* %104, i64 %idx.ext, !dbg !9411
  %108 = bitcast %struct.hid_collection* %add.ptr to i8*, !dbg !9412
  %109 = load %struct.hid_parser*, %struct.hid_parser** %parser.addr, align 8, !dbg !9413
  %device30 = getelementptr inbounds %struct.hid_parser, %struct.hid_parser* %109, i32 0, i32 7, !dbg !9414
  %110 = load %struct.hid_device*, %struct.hid_device** %device30, align 8, !dbg !9414
  %collection_size31 = getelementptr inbounds %struct.hid_device, %struct.hid_device* %110, i32 0, i32 5, !dbg !9415
  %111 = load i32, i32* %collection_size31, align 8, !dbg !9415
  %conv32 = zext i32 %111 to i64, !dbg !9413
  %mul33 = mul i64 16, %conv32, !dbg !9416
  call void @llvm.memset.p0i8.i64(i8* align 4 %108, i8 0, i64 %mul33, i1 false), !dbg !9412
  %112 = load %struct.hid_parser*, %struct.hid_parser** %parser.addr, align 8, !dbg !9417
  %device34 = getelementptr inbounds %struct.hid_parser, %struct.hid_parser* %112, i32 0, i32 7, !dbg !9418
  %113 = load %struct.hid_device*, %struct.hid_device** %device34, align 8, !dbg !9418
  %collection35 = getelementptr inbounds %struct.hid_device, %struct.hid_device* %113, i32 0, i32 4, !dbg !9419
  %114 = load %struct.hid_collection*, %struct.hid_collection** %collection35, align 8, !dbg !9419
  %115 = bitcast %struct.hid_collection* %114 to i8*, !dbg !9417
  call void @kfree(i8* %115) #9, !dbg !9420
  %116 = load %struct.hid_collection*, %struct.hid_collection** %collection, align 8, !dbg !9421
  %117 = load %struct.hid_parser*, %struct.hid_parser** %parser.addr, align 8, !dbg !9422
  %device36 = getelementptr inbounds %struct.hid_parser, %struct.hid_parser* %117, i32 0, i32 7, !dbg !9423
  %118 = load %struct.hid_device*, %struct.hid_device** %device36, align 8, !dbg !9423
  %collection37 = getelementptr inbounds %struct.hid_device, %struct.hid_device* %118, i32 0, i32 4, !dbg !9424
  store %struct.hid_collection* %116, %struct.hid_collection** %collection37, align 8, !dbg !9425
  %119 = load %struct.hid_parser*, %struct.hid_parser** %parser.addr, align 8, !dbg !9426
  %device38 = getelementptr inbounds %struct.hid_parser, %struct.hid_parser* %119, i32 0, i32 7, !dbg !9427
  %120 = load %struct.hid_device*, %struct.hid_device** %device38, align 8, !dbg !9427
  %collection_size39 = getelementptr inbounds %struct.hid_device, %struct.hid_device* %120, i32 0, i32 5, !dbg !9428
  %121 = load i32, i32* %collection_size39, align 8, !dbg !9429
  %mul40 = mul i32 %121, 2, !dbg !9429
  store i32 %mul40, i32* %collection_size39, align 8, !dbg !9429
  br label %if.end41, !dbg !9430

if.end41:                                         ; preds = %if.end21, %if.end7
  %122 = load %struct.hid_parser*, %struct.hid_parser** %parser.addr, align 8, !dbg !9431
  %device42 = getelementptr inbounds %struct.hid_parser, %struct.hid_parser* %122, i32 0, i32 7, !dbg !9432
  %123 = load %struct.hid_device*, %struct.hid_device** %device42, align 8, !dbg !9432
  %maxcollection43 = getelementptr inbounds %struct.hid_device, %struct.hid_device* %123, i32 0, i32 6, !dbg !9433
  %124 = load i32, i32* %maxcollection43, align 4, !dbg !9433
  %125 = load %struct.hid_parser*, %struct.hid_parser** %parser.addr, align 8, !dbg !9434
  %collection_stack44 = getelementptr inbounds %struct.hid_parser, %struct.hid_parser* %125, i32 0, i32 4, !dbg !9435
  %126 = load i32*, i32** %collection_stack44, align 8, !dbg !9435
  %127 = load %struct.hid_parser*, %struct.hid_parser** %parser.addr, align 8, !dbg !9436
  %collection_stack_ptr45 = getelementptr inbounds %struct.hid_parser, %struct.hid_parser* %127, i32 0, i32 5, !dbg !9437
  %128 = load i32, i32* %collection_stack_ptr45, align 8, !dbg !9438
  %inc = add i32 %128, 1, !dbg !9438
  store i32 %inc, i32* %collection_stack_ptr45, align 8, !dbg !9438
  %idxprom = zext i32 %128 to i64, !dbg !9434
  %arrayidx46 = getelementptr i32, i32* %126, i64 %idxprom, !dbg !9434
  store i32 %124, i32* %arrayidx46, align 4, !dbg !9439
  %129 = load %struct.hid_parser*, %struct.hid_parser** %parser.addr, align 8, !dbg !9440
  %device47 = getelementptr inbounds %struct.hid_parser, %struct.hid_parser* %129, i32 0, i32 7, !dbg !9441
  %130 = load %struct.hid_device*, %struct.hid_device** %device47, align 8, !dbg !9441
  %maxcollection48 = getelementptr inbounds %struct.hid_device, %struct.hid_device* %130, i32 0, i32 6, !dbg !9442
  %131 = load i32, i32* %maxcollection48, align 4, !dbg !9443
  %inc49 = add i32 %131, 1, !dbg !9443
  store i32 %inc49, i32* %maxcollection48, align 4, !dbg !9443
  store i32 %131, i32* %collection_index, align 4, !dbg !9444
  %132 = load %struct.hid_parser*, %struct.hid_parser** %parser.addr, align 8, !dbg !9445
  %device50 = getelementptr inbounds %struct.hid_parser, %struct.hid_parser* %132, i32 0, i32 7, !dbg !9446
  %133 = load %struct.hid_device*, %struct.hid_device** %device50, align 8, !dbg !9446
  %collection51 = getelementptr inbounds %struct.hid_device, %struct.hid_device* %133, i32 0, i32 4, !dbg !9447
  %134 = load %struct.hid_collection*, %struct.hid_collection** %collection51, align 8, !dbg !9447
  %135 = load i32, i32* %collection_index, align 4, !dbg !9448
  %idx.ext52 = sext i32 %135 to i64, !dbg !9449
  %add.ptr53 = getelementptr %struct.hid_collection, %struct.hid_collection* %134, i64 %idx.ext52, !dbg !9449
  store %struct.hid_collection* %add.ptr53, %struct.hid_collection** %collection, align 8, !dbg !9450
  %136 = load i32, i32* %type.addr, align 4, !dbg !9451
  %137 = load %struct.hid_collection*, %struct.hid_collection** %collection, align 8, !dbg !9452
  %type54 = getelementptr inbounds %struct.hid_collection, %struct.hid_collection* %137, i32 0, i32 1, !dbg !9453
  store i32 %136, i32* %type54, align 4, !dbg !9454
  %138 = load i32, i32* %usage, align 4, !dbg !9455
  %139 = load %struct.hid_collection*, %struct.hid_collection** %collection, align 8, !dbg !9456
  %usage55 = getelementptr inbounds %struct.hid_collection, %struct.hid_collection* %139, i32 0, i32 2, !dbg !9457
  store i32 %138, i32* %usage55, align 4, !dbg !9458
  %140 = load %struct.hid_parser*, %struct.hid_parser** %parser.addr, align 8, !dbg !9459
  %collection_stack_ptr56 = getelementptr inbounds %struct.hid_parser, %struct.hid_parser* %140, i32 0, i32 5, !dbg !9460
  %141 = load i32, i32* %collection_stack_ptr56, align 8, !dbg !9460
  %sub = sub i32 %141, 1, !dbg !9461
  %142 = load %struct.hid_collection*, %struct.hid_collection** %collection, align 8, !dbg !9462
  %level = getelementptr inbounds %struct.hid_collection, %struct.hid_collection* %142, i32 0, i32 3, !dbg !9463
  store i32 %sub, i32* %level, align 4, !dbg !9464
  %143 = load %struct.hid_collection*, %struct.hid_collection** %collection, align 8, !dbg !9465
  %level57 = getelementptr inbounds %struct.hid_collection, %struct.hid_collection* %143, i32 0, i32 3, !dbg !9466
  %144 = load i32, i32* %level57, align 4, !dbg !9466
  %cmp58 = icmp eq i32 %144, 0, !dbg !9467
  br i1 %cmp58, label %cond.true, label %cond.false, !dbg !9468

cond.true:                                        ; preds = %if.end41
  br label %cond.end, !dbg !9468

cond.false:                                       ; preds = %if.end41
  %145 = load %struct.hid_parser*, %struct.hid_parser** %parser.addr, align 8, !dbg !9469
  %collection_stack60 = getelementptr inbounds %struct.hid_parser, %struct.hid_parser* %145, i32 0, i32 4, !dbg !9470
  %146 = load i32*, i32** %collection_stack60, align 8, !dbg !9470
  %147 = load %struct.hid_collection*, %struct.hid_collection** %collection, align 8, !dbg !9471
  %level61 = getelementptr inbounds %struct.hid_collection, %struct.hid_collection* %147, i32 0, i32 3, !dbg !9472
  %148 = load i32, i32* %level61, align 4, !dbg !9472
  %sub62 = sub i32 %148, 1, !dbg !9473
  %idxprom63 = zext i32 %sub62 to i64, !dbg !9469
  %arrayidx64 = getelementptr i32, i32* %146, i64 %idxprom63, !dbg !9469
  %149 = load i32, i32* %arrayidx64, align 4, !dbg !9469
  br label %cond.end, !dbg !9468

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ -1, %cond.true ], [ %149, %cond.false ], !dbg !9468
  %150 = load %struct.hid_collection*, %struct.hid_collection** %collection, align 8, !dbg !9474
  %parent_idx = getelementptr inbounds %struct.hid_collection, %struct.hid_collection* %150, i32 0, i32 0, !dbg !9475
  store i32 %cond, i32* %parent_idx, align 4, !dbg !9476
  %151 = load i32, i32* %type.addr, align 4, !dbg !9477
  %cmp65 = icmp eq i32 %151, 1, !dbg !9479
  br i1 %cmp65, label %if.then67, label %if.end70, !dbg !9480

if.then67:                                        ; preds = %cond.end
  %152 = load %struct.hid_parser*, %struct.hid_parser** %parser.addr, align 8, !dbg !9481
  %device68 = getelementptr inbounds %struct.hid_parser, %struct.hid_parser* %152, i32 0, i32 7, !dbg !9482
  %153 = load %struct.hid_device*, %struct.hid_device** %device68, align 8, !dbg !9482
  %maxapplication = getelementptr inbounds %struct.hid_device, %struct.hid_device* %153, i32 0, i32 7, !dbg !9483
  %154 = load i32, i32* %maxapplication, align 8, !dbg !9484
  %inc69 = add i32 %154, 1, !dbg !9484
  store i32 %inc69, i32* %maxapplication, align 8, !dbg !9484
  br label %if.end70, !dbg !9481

if.end70:                                         ; preds = %if.then67, %cond.end
  store i32 0, i32* %retval, align 4, !dbg !9485
  br label %return, !dbg !9485

return:                                           ; preds = %if.end70, %if.then19, %if.then4
  %155 = load i32, i32* %retval, align 4, !dbg !9486
  ret i32 %155, !dbg !9486
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @close_collection(%struct.hid_parser* %parser) #0 !dbg !9487 {
entry:
  %retval = alloca i32, align 4
  %parser.addr = alloca %struct.hid_parser*, align 8
  store %struct.hid_parser* %parser, %struct.hid_parser** %parser.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.hid_parser** %parser.addr, metadata !9490, metadata !DIExpression()), !dbg !9491
  %0 = load %struct.hid_parser*, %struct.hid_parser** %parser.addr, align 8, !dbg !9492
  %collection_stack_ptr = getelementptr inbounds %struct.hid_parser, %struct.hid_parser* %0, i32 0, i32 5, !dbg !9494
  %1 = load i32, i32* %collection_stack_ptr, align 8, !dbg !9494
  %tobool = icmp ne i32 %1, 0, !dbg !9492
  br i1 %tobool, label %if.end, label %if.then, !dbg !9495

if.then:                                          ; preds = %entry
  %2 = load %struct.hid_parser*, %struct.hid_parser** %parser.addr, align 8, !dbg !9496
  %device = getelementptr inbounds %struct.hid_parser, %struct.hid_parser* %2, i32 0, i32 7, !dbg !9496
  %3 = load %struct.hid_device*, %struct.hid_device** %device, align 8, !dbg !9496
  %dev = getelementptr inbounds %struct.hid_device, %struct.hid_device* %3, i32 0, i32 18, !dbg !9496
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %dev, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.51, i64 0, i64 0)) #13, !dbg !9496
  store i32 -22, i32* %retval, align 4, !dbg !9498
  br label %return, !dbg !9498

if.end:                                           ; preds = %entry
  %4 = load %struct.hid_parser*, %struct.hid_parser** %parser.addr, align 8, !dbg !9499
  %collection_stack_ptr1 = getelementptr inbounds %struct.hid_parser, %struct.hid_parser* %4, i32 0, i32 5, !dbg !9500
  %5 = load i32, i32* %collection_stack_ptr1, align 8, !dbg !9501
  %dec = add i32 %5, -1, !dbg !9501
  store i32 %dec, i32* %collection_stack_ptr1, align 8, !dbg !9501
  store i32 0, i32* %retval, align 4, !dbg !9502
  br label %return, !dbg !9502

return:                                           ; preds = %if.end, %if.then
  %6 = load i32, i32* %retval, align 4, !dbg !9503
  ret i32 %6, !dbg !9503
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @hid_add_field(%struct.hid_parser* %parser, i32 %report_type, i32 %flags) #0 !dbg !9504 {
entry:
  %retval = alloca i32, align 4
  %parser.addr = alloca %struct.hid_parser*, align 8
  %report_type.addr = alloca i32, align 4
  %flags.addr = alloca i32, align 4
  %report = alloca %struct.hid_report*, align 8
  %field = alloca %struct.hid_field*, align 8
  %usages = alloca i32, align 4
  %offset = alloca i32, align 4
  %i = alloca i32, align 4
  %application = alloca i32, align 4
  %__UNIQUE_ID___x232 = alloca i32, align 4
  %__UNIQUE_ID___y233 = alloca i32, align 4
  %tmp = alloca i32, align 4
  %j = alloca i32, align 4
  store %struct.hid_parser* %parser, %struct.hid_parser** %parser.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.hid_parser** %parser.addr, metadata !9507, metadata !DIExpression()), !dbg !9508
  store i32 %report_type, i32* %report_type.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %report_type.addr, metadata !9509, metadata !DIExpression()), !dbg !9510
  store i32 %flags, i32* %flags.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr, metadata !9511, metadata !DIExpression()), !dbg !9512
  call void @llvm.dbg.declare(metadata %struct.hid_report** %report, metadata !9513, metadata !DIExpression()), !dbg !9514
  call void @llvm.dbg.declare(metadata %struct.hid_field** %field, metadata !9515, metadata !DIExpression()), !dbg !9516
  call void @llvm.dbg.declare(metadata i32* %usages, metadata !9517, metadata !DIExpression()), !dbg !9518
  call void @llvm.dbg.declare(metadata i32* %offset, metadata !9519, metadata !DIExpression()), !dbg !9520
  call void @llvm.dbg.declare(metadata i32* %i, metadata !9521, metadata !DIExpression()), !dbg !9522
  call void @llvm.dbg.declare(metadata i32* %application, metadata !9523, metadata !DIExpression()), !dbg !9524
  %0 = load %struct.hid_parser*, %struct.hid_parser** %parser.addr, align 8, !dbg !9525
  %call = call i32 @hid_lookup_collection(%struct.hid_parser* %0, i32 1) #9, !dbg !9526
  store i32 %call, i32* %application, align 4, !dbg !9527
  %1 = load %struct.hid_parser*, %struct.hid_parser** %parser.addr, align 8, !dbg !9528
  %device = getelementptr inbounds %struct.hid_parser, %struct.hid_parser* %1, i32 0, i32 7, !dbg !9529
  %2 = load %struct.hid_device*, %struct.hid_device** %device, align 8, !dbg !9529
  %3 = load i32, i32* %report_type.addr, align 4, !dbg !9530
  %4 = load %struct.hid_parser*, %struct.hid_parser** %parser.addr, align 8, !dbg !9531
  %global = getelementptr inbounds %struct.hid_parser, %struct.hid_parser* %4, i32 0, i32 0, !dbg !9532
  %report_id = getelementptr inbounds %struct.hid_global, %struct.hid_global* %global, i32 0, i32 7, !dbg !9533
  %5 = load i32, i32* %report_id, align 4, !dbg !9533
  %6 = load i32, i32* %application, align 4, !dbg !9534
  %call1 = call %struct.hid_report* @hid_register_report(%struct.hid_device* %2, i32 %3, i32 %5, i32 %6) #9, !dbg !9535
  store %struct.hid_report* %call1, %struct.hid_report** %report, align 8, !dbg !9536
  %7 = load %struct.hid_report*, %struct.hid_report** %report, align 8, !dbg !9537
  %tobool = icmp ne %struct.hid_report* %7, null, !dbg !9537
  br i1 %tobool, label %if.end, label %if.then, !dbg !9539

if.then:                                          ; preds = %entry
  %8 = load %struct.hid_parser*, %struct.hid_parser** %parser.addr, align 8, !dbg !9540
  %device2 = getelementptr inbounds %struct.hid_parser, %struct.hid_parser* %8, i32 0, i32 7, !dbg !9540
  %9 = load %struct.hid_device*, %struct.hid_device** %device2, align 8, !dbg !9540
  %dev = getelementptr inbounds %struct.hid_device, %struct.hid_device* %9, i32 0, i32 18, !dbg !9540
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %dev, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.52, i64 0, i64 0)) #13, !dbg !9540
  store i32 -1, i32* %retval, align 4, !dbg !9542
  br label %return, !dbg !9542

if.end:                                           ; preds = %entry
  %10 = load %struct.hid_parser*, %struct.hid_parser** %parser.addr, align 8, !dbg !9543
  %global3 = getelementptr inbounds %struct.hid_parser, %struct.hid_parser* %10, i32 0, i32 0, !dbg !9545
  %logical_minimum = getelementptr inbounds %struct.hid_global, %struct.hid_global* %global3, i32 0, i32 1, !dbg !9546
  %11 = load i32, i32* %logical_minimum, align 4, !dbg !9546
  %cmp = icmp slt i32 %11, 0, !dbg !9547
  br i1 %cmp, label %land.lhs.true, label %lor.lhs.false, !dbg !9548

land.lhs.true:                                    ; preds = %if.end
  %12 = load %struct.hid_parser*, %struct.hid_parser** %parser.addr, align 8, !dbg !9549
  %global4 = getelementptr inbounds %struct.hid_parser, %struct.hid_parser* %12, i32 0, i32 0, !dbg !9550
  %logical_maximum = getelementptr inbounds %struct.hid_global, %struct.hid_global* %global4, i32 0, i32 2, !dbg !9551
  %13 = load i32, i32* %logical_maximum, align 8, !dbg !9551
  %14 = load %struct.hid_parser*, %struct.hid_parser** %parser.addr, align 8, !dbg !9552
  %global5 = getelementptr inbounds %struct.hid_parser, %struct.hid_parser* %14, i32 0, i32 0, !dbg !9553
  %logical_minimum6 = getelementptr inbounds %struct.hid_global, %struct.hid_global* %global5, i32 0, i32 1, !dbg !9554
  %15 = load i32, i32* %logical_minimum6, align 4, !dbg !9554
  %cmp7 = icmp slt i32 %13, %15, !dbg !9555
  br i1 %cmp7, label %if.then17, label %lor.lhs.false, !dbg !9556

lor.lhs.false:                                    ; preds = %land.lhs.true, %if.end
  %16 = load %struct.hid_parser*, %struct.hid_parser** %parser.addr, align 8, !dbg !9557
  %global8 = getelementptr inbounds %struct.hid_parser, %struct.hid_parser* %16, i32 0, i32 0, !dbg !9558
  %logical_minimum9 = getelementptr inbounds %struct.hid_global, %struct.hid_global* %global8, i32 0, i32 1, !dbg !9559
  %17 = load i32, i32* %logical_minimum9, align 4, !dbg !9559
  %cmp10 = icmp sge i32 %17, 0, !dbg !9560
  br i1 %cmp10, label %land.lhs.true11, label %if.end26, !dbg !9561

land.lhs.true11:                                  ; preds = %lor.lhs.false
  %18 = load %struct.hid_parser*, %struct.hid_parser** %parser.addr, align 8, !dbg !9562
  %global12 = getelementptr inbounds %struct.hid_parser, %struct.hid_parser* %18, i32 0, i32 0, !dbg !9563
  %logical_maximum13 = getelementptr inbounds %struct.hid_global, %struct.hid_global* %global12, i32 0, i32 2, !dbg !9564
  %19 = load i32, i32* %logical_maximum13, align 8, !dbg !9564
  %20 = load %struct.hid_parser*, %struct.hid_parser** %parser.addr, align 8, !dbg !9565
  %global14 = getelementptr inbounds %struct.hid_parser, %struct.hid_parser* %20, i32 0, i32 0, !dbg !9566
  %logical_minimum15 = getelementptr inbounds %struct.hid_global, %struct.hid_global* %global14, i32 0, i32 1, !dbg !9567
  %21 = load i32, i32* %logical_minimum15, align 4, !dbg !9567
  %cmp16 = icmp ult i32 %19, %21, !dbg !9568
  br i1 %cmp16, label %if.then17, label %if.end26, !dbg !9569

if.then17:                                        ; preds = %land.lhs.true11, %land.lhs.true
  br label %do.body, !dbg !9570

do.body:                                          ; preds = %if.then17
  %22 = load i32, i32* @hid_debug, align 4, !dbg !9572
  %tobool18 = icmp ne i32 %22, 0, !dbg !9572
  br i1 %tobool18, label %if.then19, label %if.end25, !dbg !9575

if.then19:                                        ; preds = %do.body
  %23 = load %struct.hid_parser*, %struct.hid_parser** %parser.addr, align 8, !dbg !9572
  %global20 = getelementptr inbounds %struct.hid_parser, %struct.hid_parser* %23, i32 0, i32 0, !dbg !9572
  %logical_minimum21 = getelementptr inbounds %struct.hid_global, %struct.hid_global* %global20, i32 0, i32 1, !dbg !9572
  %24 = load i32, i32* %logical_minimum21, align 4, !dbg !9572
  %25 = load %struct.hid_parser*, %struct.hid_parser** %parser.addr, align 8, !dbg !9572
  %global22 = getelementptr inbounds %struct.hid_parser, %struct.hid_parser* %25, i32 0, i32 0, !dbg !9572
  %logical_maximum23 = getelementptr inbounds %struct.hid_global, %struct.hid_global* %global22, i32 0, i32 2, !dbg !9572
  %26 = load i32, i32* %logical_maximum23, align 8, !dbg !9572
  %call24 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.53, i64 0, i64 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.5, i64 0, i64 0), i32 %24, i32 %26) #13, !dbg !9572
  br label %if.end25, !dbg !9572

if.end25:                                         ; preds = %if.then19, %do.body
  br label %do.end, !dbg !9575

do.end:                                           ; preds = %if.end25
  store i32 -1, i32* %retval, align 4, !dbg !9576
  br label %return, !dbg !9576

if.end26:                                         ; preds = %land.lhs.true11, %lor.lhs.false
  %27 = load %struct.hid_report*, %struct.hid_report** %report, align 8, !dbg !9577
  %size = getelementptr inbounds %struct.hid_report, %struct.hid_report* %27, i32 0, i32 7, !dbg !9578
  %28 = load i32, i32* %size, align 4, !dbg !9578
  store i32 %28, i32* %offset, align 4, !dbg !9579
  %29 = load %struct.hid_parser*, %struct.hid_parser** %parser.addr, align 8, !dbg !9580
  %global27 = getelementptr inbounds %struct.hid_parser, %struct.hid_parser* %29, i32 0, i32 0, !dbg !9581
  %report_size = getelementptr inbounds %struct.hid_global, %struct.hid_global* %global27, i32 0, i32 8, !dbg !9582
  %30 = load i32, i32* %report_size, align 8, !dbg !9582
  %31 = load %struct.hid_parser*, %struct.hid_parser** %parser.addr, align 8, !dbg !9583
  %global28 = getelementptr inbounds %struct.hid_parser, %struct.hid_parser* %31, i32 0, i32 0, !dbg !9584
  %report_count = getelementptr inbounds %struct.hid_global, %struct.hid_global* %global28, i32 0, i32 9, !dbg !9585
  %32 = load i32, i32* %report_count, align 4, !dbg !9585
  %mul = mul i32 %30, %32, !dbg !9586
  %33 = load %struct.hid_report*, %struct.hid_report** %report, align 8, !dbg !9587
  %size29 = getelementptr inbounds %struct.hid_report, %struct.hid_report* %33, i32 0, i32 7, !dbg !9588
  %34 = load i32, i32* %size29, align 4, !dbg !9589
  %add = add i32 %34, %mul, !dbg !9589
  store i32 %add, i32* %size29, align 4, !dbg !9589
  %35 = load %struct.hid_report*, %struct.hid_report** %report, align 8, !dbg !9590
  %size30 = getelementptr inbounds %struct.hid_report, %struct.hid_report* %35, i32 0, i32 7, !dbg !9592
  %36 = load i32, i32* %size30, align 4, !dbg !9592
  %cmp31 = icmp ugt i32 %36, 65528, !dbg !9593
  br i1 %cmp31, label %if.then32, label %if.end35, !dbg !9594

if.then32:                                        ; preds = %if.end26
  %37 = load %struct.hid_parser*, %struct.hid_parser** %parser.addr, align 8, !dbg !9595
  %device33 = getelementptr inbounds %struct.hid_parser, %struct.hid_parser* %37, i32 0, i32 7, !dbg !9595
  %38 = load %struct.hid_device*, %struct.hid_device** %device33, align 8, !dbg !9595
  %dev34 = getelementptr inbounds %struct.hid_device, %struct.hid_device* %38, i32 0, i32 18, !dbg !9595
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %dev34, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.54, i64 0, i64 0)) #13, !dbg !9595
  store i32 -1, i32* %retval, align 4, !dbg !9597
  br label %return, !dbg !9597

if.end35:                                         ; preds = %if.end26
  %39 = load %struct.hid_parser*, %struct.hid_parser** %parser.addr, align 8, !dbg !9598
  %local = getelementptr inbounds %struct.hid_parser, %struct.hid_parser* %39, i32 0, i32 3, !dbg !9600
  %usage_index = getelementptr inbounds %struct.hid_local, %struct.hid_local* %local, i32 0, i32 3, !dbg !9601
  %40 = load i32, i32* %usage_index, align 4, !dbg !9601
  %tobool36 = icmp ne i32 %40, 0, !dbg !9598
  br i1 %tobool36, label %if.end38, label %if.then37, !dbg !9602

if.then37:                                        ; preds = %if.end35
  store i32 0, i32* %retval, align 4, !dbg !9603
  br label %return, !dbg !9603

if.end38:                                         ; preds = %if.end35
  call void @llvm.dbg.declare(metadata i32* %__UNIQUE_ID___x232, metadata !9604, metadata !DIExpression()), !dbg !9606
  %41 = load %struct.hid_parser*, %struct.hid_parser** %parser.addr, align 8, !dbg !9606
  %local39 = getelementptr inbounds %struct.hid_parser, %struct.hid_parser* %41, i32 0, i32 3, !dbg !9606
  %usage_index40 = getelementptr inbounds %struct.hid_local, %struct.hid_local* %local39, i32 0, i32 3, !dbg !9606
  %42 = load i32, i32* %usage_index40, align 4, !dbg !9606
  store i32 %42, i32* %__UNIQUE_ID___x232, align 4, !dbg !9606
  call void @llvm.dbg.declare(metadata i32* %__UNIQUE_ID___y233, metadata !9607, metadata !DIExpression()), !dbg !9606
  %43 = load %struct.hid_parser*, %struct.hid_parser** %parser.addr, align 8, !dbg !9606
  %global41 = getelementptr inbounds %struct.hid_parser, %struct.hid_parser* %43, i32 0, i32 0, !dbg !9606
  %report_count42 = getelementptr inbounds %struct.hid_global, %struct.hid_global* %global41, i32 0, i32 9, !dbg !9606
  %44 = load i32, i32* %report_count42, align 4, !dbg !9606
  store i32 %44, i32* %__UNIQUE_ID___y233, align 4, !dbg !9606
  %45 = load i32, i32* %__UNIQUE_ID___x232, align 4, !dbg !9606
  %46 = load i32, i32* %__UNIQUE_ID___y233, align 4, !dbg !9606
  %cmp43 = icmp ugt i32 %45, %46, !dbg !9606
  br i1 %cmp43, label %cond.true, label %cond.false, !dbg !9606

cond.true:                                        ; preds = %if.end38
  %47 = load i32, i32* %__UNIQUE_ID___x232, align 4, !dbg !9606
  br label %cond.end, !dbg !9606

cond.false:                                       ; preds = %if.end38
  %48 = load i32, i32* %__UNIQUE_ID___y233, align 4, !dbg !9606
  br label %cond.end, !dbg !9606

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %47, %cond.true ], [ %48, %cond.false ], !dbg !9606
  store i32 %cond, i32* %tmp, align 4, !dbg !9606
  %49 = load i32, i32* %tmp, align 4, !dbg !9606
  store i32 %49, i32* %usages, align 4, !dbg !9608
  %50 = load %struct.hid_report*, %struct.hid_report** %report, align 8, !dbg !9609
  %51 = load i32, i32* %usages, align 4, !dbg !9610
  %52 = load %struct.hid_parser*, %struct.hid_parser** %parser.addr, align 8, !dbg !9611
  %global44 = getelementptr inbounds %struct.hid_parser, %struct.hid_parser* %52, i32 0, i32 0, !dbg !9612
  %report_count45 = getelementptr inbounds %struct.hid_global, %struct.hid_global* %global44, i32 0, i32 9, !dbg !9613
  %53 = load i32, i32* %report_count45, align 4, !dbg !9613
  %call46 = call %struct.hid_field* @hid_register_field(%struct.hid_report* %50, i32 %51, i32 %53) #9, !dbg !9614
  store %struct.hid_field* %call46, %struct.hid_field** %field, align 8, !dbg !9615
  %54 = load %struct.hid_field*, %struct.hid_field** %field, align 8, !dbg !9616
  %tobool47 = icmp ne %struct.hid_field* %54, null, !dbg !9616
  br i1 %tobool47, label %if.end49, label %if.then48, !dbg !9618

if.then48:                                        ; preds = %cond.end
  store i32 0, i32* %retval, align 4, !dbg !9619
  br label %return, !dbg !9619

if.end49:                                         ; preds = %cond.end
  %55 = load %struct.hid_parser*, %struct.hid_parser** %parser.addr, align 8, !dbg !9620
  %call50 = call i32 @hid_lookup_collection(%struct.hid_parser* %55, i32 0) #9, !dbg !9621
  %56 = load %struct.hid_field*, %struct.hid_field** %field, align 8, !dbg !9622
  %physical = getelementptr inbounds %struct.hid_field, %struct.hid_field* %56, i32 0, i32 0, !dbg !9623
  store i32 %call50, i32* %physical, align 8, !dbg !9624
  %57 = load %struct.hid_parser*, %struct.hid_parser** %parser.addr, align 8, !dbg !9625
  %call51 = call i32 @hid_lookup_collection(%struct.hid_parser* %57, i32 2) #9, !dbg !9626
  %58 = load %struct.hid_field*, %struct.hid_field** %field, align 8, !dbg !9627
  %logical = getelementptr inbounds %struct.hid_field, %struct.hid_field* %58, i32 0, i32 1, !dbg !9628
  store i32 %call51, i32* %logical, align 4, !dbg !9629
  %59 = load i32, i32* %application, align 4, !dbg !9630
  %60 = load %struct.hid_field*, %struct.hid_field** %field, align 8, !dbg !9631
  %application52 = getelementptr inbounds %struct.hid_field, %struct.hid_field* %60, i32 0, i32 2, !dbg !9632
  store i32 %59, i32* %application52, align 8, !dbg !9633
  store i32 0, i32* %i, align 4, !dbg !9634
  br label %for.cond, !dbg !9636

for.cond:                                         ; preds = %for.inc, %if.end49
  %61 = load i32, i32* %i, align 4, !dbg !9637
  %62 = load i32, i32* %usages, align 4, !dbg !9639
  %cmp53 = icmp ult i32 %61, %62, !dbg !9640
  br i1 %cmp53, label %for.body, label %for.end, !dbg !9641

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i32* %j, metadata !9642, metadata !DIExpression()), !dbg !9644
  %63 = load i32, i32* %i, align 4, !dbg !9645
  store i32 %63, i32* %j, align 4, !dbg !9644
  %64 = load i32, i32* %i, align 4, !dbg !9646
  %65 = load %struct.hid_parser*, %struct.hid_parser** %parser.addr, align 8, !dbg !9648
  %local54 = getelementptr inbounds %struct.hid_parser, %struct.hid_parser* %65, i32 0, i32 3, !dbg !9649
  %usage_index55 = getelementptr inbounds %struct.hid_local, %struct.hid_local* %local54, i32 0, i32 3, !dbg !9650
  %66 = load i32, i32* %usage_index55, align 4, !dbg !9650
  %cmp56 = icmp uge i32 %64, %66, !dbg !9651
  br i1 %cmp56, label %if.then57, label %if.end60, !dbg !9652

if.then57:                                        ; preds = %for.body
  %67 = load %struct.hid_parser*, %struct.hid_parser** %parser.addr, align 8, !dbg !9653
  %local58 = getelementptr inbounds %struct.hid_parser, %struct.hid_parser* %67, i32 0, i32 3, !dbg !9654
  %usage_index59 = getelementptr inbounds %struct.hid_local, %struct.hid_local* %local58, i32 0, i32 3, !dbg !9655
  %68 = load i32, i32* %usage_index59, align 4, !dbg !9655
  %sub = sub i32 %68, 1, !dbg !9656
  store i32 %sub, i32* %j, align 4, !dbg !9657
  br label %if.end60, !dbg !9658

if.end60:                                         ; preds = %if.then57, %for.body
  %69 = load %struct.hid_parser*, %struct.hid_parser** %parser.addr, align 8, !dbg !9659
  %local61 = getelementptr inbounds %struct.hid_parser, %struct.hid_parser* %69, i32 0, i32 3, !dbg !9660
  %usage = getelementptr inbounds %struct.hid_local, %struct.hid_local* %local61, i32 0, i32 0, !dbg !9661
  %70 = load i32, i32* %j, align 4, !dbg !9662
  %idxprom = zext i32 %70 to i64, !dbg !9659
  %arrayidx = getelementptr [12288 x i32], [12288 x i32]* %usage, i64 0, i64 %idxprom, !dbg !9659
  %71 = load i32, i32* %arrayidx, align 4, !dbg !9659
  %72 = load %struct.hid_field*, %struct.hid_field** %field, align 8, !dbg !9663
  %usage62 = getelementptr inbounds %struct.hid_field, %struct.hid_field* %72, i32 0, i32 3, !dbg !9664
  %73 = load %struct.hid_usage*, %struct.hid_usage** %usage62, align 8, !dbg !9664
  %74 = load i32, i32* %i, align 4, !dbg !9665
  %idxprom63 = zext i32 %74 to i64, !dbg !9663
  %arrayidx64 = getelementptr %struct.hid_usage, %struct.hid_usage* %73, i64 %idxprom63, !dbg !9663
  %hid = getelementptr inbounds %struct.hid_usage, %struct.hid_usage* %arrayidx64, i32 0, i32 0, !dbg !9666
  store i32 %71, i32* %hid, align 4, !dbg !9667
  %75 = load %struct.hid_parser*, %struct.hid_parser** %parser.addr, align 8, !dbg !9668
  %local65 = getelementptr inbounds %struct.hid_parser, %struct.hid_parser* %75, i32 0, i32 3, !dbg !9669
  %collection_index = getelementptr inbounds %struct.hid_local, %struct.hid_local* %local65, i32 0, i32 2, !dbg !9670
  %76 = load i32, i32* %j, align 4, !dbg !9671
  %idxprom66 = zext i32 %76 to i64, !dbg !9668
  %arrayidx67 = getelementptr [12288 x i32], [12288 x i32]* %collection_index, i64 0, i64 %idxprom66, !dbg !9668
  %77 = load i32, i32* %arrayidx67, align 4, !dbg !9668
  %78 = load %struct.hid_field*, %struct.hid_field** %field, align 8, !dbg !9672
  %usage68 = getelementptr inbounds %struct.hid_field, %struct.hid_field* %78, i32 0, i32 3, !dbg !9673
  %79 = load %struct.hid_usage*, %struct.hid_usage** %usage68, align 8, !dbg !9673
  %80 = load i32, i32* %i, align 4, !dbg !9674
  %idxprom69 = zext i32 %80 to i64, !dbg !9672
  %arrayidx70 = getelementptr %struct.hid_usage, %struct.hid_usage* %79, i64 %idxprom69, !dbg !9672
  %collection_index71 = getelementptr inbounds %struct.hid_usage, %struct.hid_usage* %arrayidx70, i32 0, i32 1, !dbg !9675
  store i32 %77, i32* %collection_index71, align 4, !dbg !9676
  %81 = load i32, i32* %i, align 4, !dbg !9677
  %82 = load %struct.hid_field*, %struct.hid_field** %field, align 8, !dbg !9678
  %usage72 = getelementptr inbounds %struct.hid_field, %struct.hid_field* %82, i32 0, i32 3, !dbg !9679
  %83 = load %struct.hid_usage*, %struct.hid_usage** %usage72, align 8, !dbg !9679
  %84 = load i32, i32* %i, align 4, !dbg !9680
  %idxprom73 = zext i32 %84 to i64, !dbg !9678
  %arrayidx74 = getelementptr %struct.hid_usage, %struct.hid_usage* %83, i64 %idxprom73, !dbg !9678
  %usage_index75 = getelementptr inbounds %struct.hid_usage, %struct.hid_usage* %arrayidx74, i32 0, i32 2, !dbg !9681
  store i32 %81, i32* %usage_index75, align 4, !dbg !9682
  %85 = load %struct.hid_field*, %struct.hid_field** %field, align 8, !dbg !9683
  %usage76 = getelementptr inbounds %struct.hid_field, %struct.hid_field* %85, i32 0, i32 3, !dbg !9684
  %86 = load %struct.hid_usage*, %struct.hid_usage** %usage76, align 8, !dbg !9684
  %87 = load i32, i32* %i, align 4, !dbg !9685
  %idxprom77 = zext i32 %87 to i64, !dbg !9683
  %arrayidx78 = getelementptr %struct.hid_usage, %struct.hid_usage* %86, i64 %idxprom77, !dbg !9683
  %resolution_multiplier = getelementptr inbounds %struct.hid_usage, %struct.hid_usage* %arrayidx78, i32 0, i32 3, !dbg !9686
  store i8 1, i8* %resolution_multiplier, align 4, !dbg !9687
  br label %for.inc, !dbg !9688

for.inc:                                          ; preds = %if.end60
  %88 = load i32, i32* %i, align 4, !dbg !9689
  %inc = add i32 %88, 1, !dbg !9689
  store i32 %inc, i32* %i, align 4, !dbg !9689
  br label %for.cond, !dbg !9690, !llvm.loop !9691

for.end:                                          ; preds = %for.cond
  %89 = load i32, i32* %usages, align 4, !dbg !9693
  %90 = load %struct.hid_field*, %struct.hid_field** %field, align 8, !dbg !9694
  %maxusage = getelementptr inbounds %struct.hid_field, %struct.hid_field* %90, i32 0, i32 4, !dbg !9695
  store i32 %89, i32* %maxusage, align 8, !dbg !9696
  %91 = load i32, i32* %flags.addr, align 4, !dbg !9697
  %92 = load %struct.hid_field*, %struct.hid_field** %field, align 8, !dbg !9698
  %flags79 = getelementptr inbounds %struct.hid_field, %struct.hid_field* %92, i32 0, i32 5, !dbg !9699
  store i32 %91, i32* %flags79, align 4, !dbg !9700
  %93 = load i32, i32* %offset, align 4, !dbg !9701
  %94 = load %struct.hid_field*, %struct.hid_field** %field, align 8, !dbg !9702
  %report_offset = getelementptr inbounds %struct.hid_field, %struct.hid_field* %94, i32 0, i32 6, !dbg !9703
  store i32 %93, i32* %report_offset, align 8, !dbg !9704
  %95 = load i32, i32* %report_type.addr, align 4, !dbg !9705
  %96 = load %struct.hid_field*, %struct.hid_field** %field, align 8, !dbg !9706
  %report_type80 = getelementptr inbounds %struct.hid_field, %struct.hid_field* %96, i32 0, i32 9, !dbg !9707
  store i32 %95, i32* %report_type80, align 4, !dbg !9708
  %97 = load %struct.hid_parser*, %struct.hid_parser** %parser.addr, align 8, !dbg !9709
  %global81 = getelementptr inbounds %struct.hid_parser, %struct.hid_parser* %97, i32 0, i32 0, !dbg !9710
  %report_size82 = getelementptr inbounds %struct.hid_global, %struct.hid_global* %global81, i32 0, i32 8, !dbg !9711
  %98 = load i32, i32* %report_size82, align 8, !dbg !9711
  %99 = load %struct.hid_field*, %struct.hid_field** %field, align 8, !dbg !9712
  %report_size83 = getelementptr inbounds %struct.hid_field, %struct.hid_field* %99, i32 0, i32 7, !dbg !9713
  store i32 %98, i32* %report_size83, align 4, !dbg !9714
  %100 = load %struct.hid_parser*, %struct.hid_parser** %parser.addr, align 8, !dbg !9715
  %global84 = getelementptr inbounds %struct.hid_parser, %struct.hid_parser* %100, i32 0, i32 0, !dbg !9716
  %report_count85 = getelementptr inbounds %struct.hid_global, %struct.hid_global* %global84, i32 0, i32 9, !dbg !9717
  %101 = load i32, i32* %report_count85, align 4, !dbg !9717
  %102 = load %struct.hid_field*, %struct.hid_field** %field, align 8, !dbg !9718
  %report_count86 = getelementptr inbounds %struct.hid_field, %struct.hid_field* %102, i32 0, i32 8, !dbg !9719
  store i32 %101, i32* %report_count86, align 8, !dbg !9720
  %103 = load %struct.hid_parser*, %struct.hid_parser** %parser.addr, align 8, !dbg !9721
  %global87 = getelementptr inbounds %struct.hid_parser, %struct.hid_parser* %103, i32 0, i32 0, !dbg !9722
  %logical_minimum88 = getelementptr inbounds %struct.hid_global, %struct.hid_global* %global87, i32 0, i32 1, !dbg !9723
  %104 = load i32, i32* %logical_minimum88, align 4, !dbg !9723
  %105 = load %struct.hid_field*, %struct.hid_field** %field, align 8, !dbg !9724
  %logical_minimum89 = getelementptr inbounds %struct.hid_field, %struct.hid_field* %105, i32 0, i32 11, !dbg !9725
  store i32 %104, i32* %logical_minimum89, align 8, !dbg !9726
  %106 = load %struct.hid_parser*, %struct.hid_parser** %parser.addr, align 8, !dbg !9727
  %global90 = getelementptr inbounds %struct.hid_parser, %struct.hid_parser* %106, i32 0, i32 0, !dbg !9728
  %logical_maximum91 = getelementptr inbounds %struct.hid_global, %struct.hid_global* %global90, i32 0, i32 2, !dbg !9729
  %107 = load i32, i32* %logical_maximum91, align 8, !dbg !9729
  %108 = load %struct.hid_field*, %struct.hid_field** %field, align 8, !dbg !9730
  %logical_maximum92 = getelementptr inbounds %struct.hid_field, %struct.hid_field* %108, i32 0, i32 12, !dbg !9731
  store i32 %107, i32* %logical_maximum92, align 4, !dbg !9732
  %109 = load %struct.hid_parser*, %struct.hid_parser** %parser.addr, align 8, !dbg !9733
  %global93 = getelementptr inbounds %struct.hid_parser, %struct.hid_parser* %109, i32 0, i32 0, !dbg !9734
  %physical_minimum = getelementptr inbounds %struct.hid_global, %struct.hid_global* %global93, i32 0, i32 3, !dbg !9735
  %110 = load i32, i32* %physical_minimum, align 4, !dbg !9735
  %111 = load %struct.hid_field*, %struct.hid_field** %field, align 8, !dbg !9736
  %physical_minimum94 = getelementptr inbounds %struct.hid_field, %struct.hid_field* %111, i32 0, i32 13, !dbg !9737
  store i32 %110, i32* %physical_minimum94, align 8, !dbg !9738
  %112 = load %struct.hid_parser*, %struct.hid_parser** %parser.addr, align 8, !dbg !9739
  %global95 = getelementptr inbounds %struct.hid_parser, %struct.hid_parser* %112, i32 0, i32 0, !dbg !9740
  %physical_maximum = getelementptr inbounds %struct.hid_global, %struct.hid_global* %global95, i32 0, i32 4, !dbg !9741
  %113 = load i32, i32* %physical_maximum, align 8, !dbg !9741
  %114 = load %struct.hid_field*, %struct.hid_field** %field, align 8, !dbg !9742
  %physical_maximum96 = getelementptr inbounds %struct.hid_field, %struct.hid_field* %114, i32 0, i32 14, !dbg !9743
  store i32 %113, i32* %physical_maximum96, align 4, !dbg !9744
  %115 = load %struct.hid_parser*, %struct.hid_parser** %parser.addr, align 8, !dbg !9745
  %global97 = getelementptr inbounds %struct.hid_parser, %struct.hid_parser* %115, i32 0, i32 0, !dbg !9746
  %unit_exponent = getelementptr inbounds %struct.hid_global, %struct.hid_global* %global97, i32 0, i32 5, !dbg !9747
  %116 = load i32, i32* %unit_exponent, align 4, !dbg !9747
  %117 = load %struct.hid_field*, %struct.hid_field** %field, align 8, !dbg !9748
  %unit_exponent98 = getelementptr inbounds %struct.hid_field, %struct.hid_field* %117, i32 0, i32 15, !dbg !9749
  store i32 %116, i32* %unit_exponent98, align 8, !dbg !9750
  %118 = load %struct.hid_parser*, %struct.hid_parser** %parser.addr, align 8, !dbg !9751
  %global99 = getelementptr inbounds %struct.hid_parser, %struct.hid_parser* %118, i32 0, i32 0, !dbg !9752
  %unit = getelementptr inbounds %struct.hid_global, %struct.hid_global* %global99, i32 0, i32 6, !dbg !9753
  %119 = load i32, i32* %unit, align 8, !dbg !9753
  %120 = load %struct.hid_field*, %struct.hid_field** %field, align 8, !dbg !9754
  %unit100 = getelementptr inbounds %struct.hid_field, %struct.hid_field* %120, i32 0, i32 16, !dbg !9755
  store i32 %119, i32* %unit100, align 4, !dbg !9756
  store i32 0, i32* %retval, align 4, !dbg !9757
  br label %return, !dbg !9757

return:                                           ; preds = %for.end, %if.then48, %if.then37, %if.then32, %do.end, %if.then
  %121 = load i32, i32* %retval, align 4, !dbg !9758
  ret i32 %121, !dbg !9758
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @complete_usage(%struct.hid_parser* %parser, i32 %index) #0 !dbg !9759 {
entry:
  %parser.addr = alloca %struct.hid_parser*, align 8
  %index.addr = alloca i32, align 4
  store %struct.hid_parser* %parser, %struct.hid_parser** %parser.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.hid_parser** %parser.addr, metadata !9762, metadata !DIExpression()), !dbg !9763
  store i32 %index, i32* %index.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %index.addr, metadata !9764, metadata !DIExpression()), !dbg !9765
  %0 = load %struct.hid_parser*, %struct.hid_parser** %parser.addr, align 8, !dbg !9766
  %local = getelementptr inbounds %struct.hid_parser, %struct.hid_parser* %0, i32 0, i32 3, !dbg !9767
  %usage = getelementptr inbounds %struct.hid_local, %struct.hid_local* %local, i32 0, i32 0, !dbg !9768
  %1 = load i32, i32* %index.addr, align 4, !dbg !9769
  %idxprom = zext i32 %1 to i64, !dbg !9766
  %arrayidx = getelementptr [12288 x i32], [12288 x i32]* %usage, i64 0, i64 %idxprom, !dbg !9766
  %2 = load i32, i32* %arrayidx, align 4, !dbg !9770
  %and = and i32 %2, 65535, !dbg !9770
  store i32 %and, i32* %arrayidx, align 4, !dbg !9770
  %3 = load %struct.hid_parser*, %struct.hid_parser** %parser.addr, align 8, !dbg !9771
  %global = getelementptr inbounds %struct.hid_parser, %struct.hid_parser* %3, i32 0, i32 0, !dbg !9772
  %usage_page = getelementptr inbounds %struct.hid_global, %struct.hid_global* %global, i32 0, i32 0, !dbg !9773
  %4 = load i32, i32* %usage_page, align 8, !dbg !9773
  %and1 = and i32 %4, 65535, !dbg !9774
  %shl = shl i32 %and1, 16, !dbg !9775
  %5 = load %struct.hid_parser*, %struct.hid_parser** %parser.addr, align 8, !dbg !9776
  %local2 = getelementptr inbounds %struct.hid_parser, %struct.hid_parser* %5, i32 0, i32 3, !dbg !9777
  %usage3 = getelementptr inbounds %struct.hid_local, %struct.hid_local* %local2, i32 0, i32 0, !dbg !9778
  %6 = load i32, i32* %index.addr, align 4, !dbg !9779
  %idxprom4 = zext i32 %6 to i64, !dbg !9776
  %arrayidx5 = getelementptr [12288 x i32], [12288 x i32]* %usage3, i64 0, i64 %idxprom4, !dbg !9776
  %7 = load i32, i32* %arrayidx5, align 4, !dbg !9780
  %or = or i32 %7, %shl, !dbg !9780
  store i32 %or, i32* %arrayidx5, align 4, !dbg !9780
  ret void, !dbg !9781
}

; Function Attrs: noredzone
declare dso_local i8* @krealloc(i8*, i64, i32) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @array3_size(i64 %a, i64 %b, i64 %c) #0 !dbg !9782 {
entry:
  %retval = alloca i64, align 8
  %a.addr = alloca i64, align 8
  %b.addr = alloca i64, align 8
  %c.addr = alloca i64, align 8
  %bytes = alloca i64, align 8
  %__a = alloca i64, align 8
  %__b = alloca i64, align 8
  %__d = alloca i64*, align 8
  %tmp = alloca i8, align 1
  %__a3 = alloca i64, align 8
  %__b4 = alloca i64, align 8
  %__d5 = alloca i64*, align 8
  %tmp10 = alloca i8, align 1
  store i64 %a, i64* %a.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %a.addr, metadata !9786, metadata !DIExpression()), !dbg !9787
  store i64 %b, i64* %b.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %b.addr, metadata !9788, metadata !DIExpression()), !dbg !9789
  store i64 %c, i64* %c.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %c.addr, metadata !9790, metadata !DIExpression()), !dbg !9791
  call void @llvm.dbg.declare(metadata i64* %bytes, metadata !9792, metadata !DIExpression()), !dbg !9793
  call void @llvm.dbg.declare(metadata i64* %__a, metadata !9794, metadata !DIExpression()), !dbg !9797
  %0 = load i64, i64* %a.addr, align 8, !dbg !9797
  store i64 %0, i64* %__a, align 8, !dbg !9797
  call void @llvm.dbg.declare(metadata i64* %__b, metadata !9798, metadata !DIExpression()), !dbg !9797
  %1 = load i64, i64* %b.addr, align 8, !dbg !9797
  store i64 %1, i64* %__b, align 8, !dbg !9797
  call void @llvm.dbg.declare(metadata i64** %__d, metadata !9799, metadata !DIExpression()), !dbg !9797
  store i64* %bytes, i64** %__d, align 8, !dbg !9797
  %cmp = icmp eq i64* %__a, %__b, !dbg !9797
  %conv = zext i1 %cmp to i32, !dbg !9797
  %2 = load i64*, i64** %__d, align 8, !dbg !9797
  %cmp1 = icmp eq i64* %__a, %2, !dbg !9797
  %conv2 = zext i1 %cmp1 to i32, !dbg !9797
  %3 = load i64, i64* %__a, align 8, !dbg !9797
  %4 = load i64, i64* %__b, align 8, !dbg !9797
  %5 = load i64*, i64** %__d, align 8, !dbg !9797
  %6 = call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %3, i64 %4), !dbg !9797
  %7 = extractvalue { i64, i1 } %6, 1, !dbg !9797
  %8 = extractvalue { i64, i1 } %6, 0, !dbg !9797
  store i64 %8, i64* %5, align 8, !dbg !9797
  %frombool = zext i1 %7 to i8, !dbg !9797
  store i8 %frombool, i8* %tmp, align 1, !dbg !9797
  %9 = load i8, i8* %tmp, align 1, !dbg !9797
  %tobool = trunc i8 %9 to i1, !dbg !9797
  %call = call zeroext i1 @__must_check_overflow(i1 zeroext %tobool) #9, !dbg !9801
  br i1 %call, label %if.then, label %if.end, !dbg !9802

if.then:                                          ; preds = %entry
  store i64 -1, i64* %retval, align 8, !dbg !9803
  br label %return, !dbg !9803

if.end:                                           ; preds = %entry
  call void @llvm.dbg.declare(metadata i64* %__a3, metadata !9804, metadata !DIExpression()), !dbg !9807
  %10 = load i64, i64* %bytes, align 8, !dbg !9807
  store i64 %10, i64* %__a3, align 8, !dbg !9807
  call void @llvm.dbg.declare(metadata i64* %__b4, metadata !9808, metadata !DIExpression()), !dbg !9807
  %11 = load i64, i64* %c.addr, align 8, !dbg !9807
  store i64 %11, i64* %__b4, align 8, !dbg !9807
  call void @llvm.dbg.declare(metadata i64** %__d5, metadata !9809, metadata !DIExpression()), !dbg !9807
  store i64* %bytes, i64** %__d5, align 8, !dbg !9807
  %cmp6 = icmp eq i64* %__a3, %__b4, !dbg !9807
  %conv7 = zext i1 %cmp6 to i32, !dbg !9807
  %12 = load i64*, i64** %__d5, align 8, !dbg !9807
  %cmp8 = icmp eq i64* %__a3, %12, !dbg !9807
  %conv9 = zext i1 %cmp8 to i32, !dbg !9807
  %13 = load i64, i64* %__a3, align 8, !dbg !9807
  %14 = load i64, i64* %__b4, align 8, !dbg !9807
  %15 = load i64*, i64** %__d5, align 8, !dbg !9807
  %16 = call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %13, i64 %14), !dbg !9807
  %17 = extractvalue { i64, i1 } %16, 1, !dbg !9807
  %18 = extractvalue { i64, i1 } %16, 0, !dbg !9807
  store i64 %18, i64* %15, align 8, !dbg !9807
  %frombool11 = zext i1 %17 to i8, !dbg !9807
  store i8 %frombool11, i8* %tmp10, align 1, !dbg !9807
  %19 = load i8, i8* %tmp10, align 1, !dbg !9807
  %tobool12 = trunc i8 %19 to i1, !dbg !9807
  %call13 = call zeroext i1 @__must_check_overflow(i1 zeroext %tobool12) #9, !dbg !9810
  br i1 %call13, label %if.then14, label %if.end15, !dbg !9811

if.then14:                                        ; preds = %if.end
  store i64 -1, i64* %retval, align 8, !dbg !9812
  br label %return, !dbg !9812

if.end15:                                         ; preds = %if.end
  %20 = load i64, i64* %bytes, align 8, !dbg !9813
  store i64 %20, i64* %retval, align 8, !dbg !9814
  br label %return, !dbg !9814

return:                                           ; preds = %if.end15, %if.then14, %if.then
  %21 = load i64, i64* %retval, align 8, !dbg !9815
  ret i64 %21, !dbg !9815
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @__must_check_overflow(i1 zeroext %overflow) #0 !dbg !9816 {
entry:
  %overflow.addr = alloca i8, align 1
  %frombool = zext i1 %overflow to i8
  store i8 %frombool, i8* %overflow.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %overflow.addr, metadata !9819, metadata !DIExpression()), !dbg !9820
  %0 = load i8, i8* %overflow.addr, align 1, !dbg !9821
  %tobool = trunc i8 %0 to i1, !dbg !9821
  %lnot = xor i1 %tobool, true, !dbg !9821
  %lnot1 = xor i1 %lnot, true, !dbg !9821
  %lnot.ext = zext i1 %lnot1 to i32, !dbg !9821
  %conv = sext i32 %lnot.ext to i64, !dbg !9821
  %tobool2 = icmp ne i64 %conv, 0, !dbg !9821
  ret i1 %tobool2, !dbg !9822
}

; Function Attrs: nounwind readnone speculatable willreturn
declare { i64, i1 } @llvm.umul.with.overflow.i64(i64, i64) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @hid_lookup_collection(%struct.hid_parser* %parser, i32 %type) #0 !dbg !9823 {
entry:
  %retval = alloca i32, align 4
  %parser.addr = alloca %struct.hid_parser*, align 8
  %type.addr = alloca i32, align 4
  %collection = alloca %struct.hid_collection*, align 8
  %n = alloca i32, align 4
  %index = alloca i32, align 4
  store %struct.hid_parser* %parser, %struct.hid_parser** %parser.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.hid_parser** %parser.addr, metadata !9826, metadata !DIExpression()), !dbg !9827
  store i32 %type, i32* %type.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %type.addr, metadata !9828, metadata !DIExpression()), !dbg !9829
  call void @llvm.dbg.declare(metadata %struct.hid_collection** %collection, metadata !9830, metadata !DIExpression()), !dbg !9831
  %0 = load %struct.hid_parser*, %struct.hid_parser** %parser.addr, align 8, !dbg !9832
  %device = getelementptr inbounds %struct.hid_parser, %struct.hid_parser* %0, i32 0, i32 7, !dbg !9833
  %1 = load %struct.hid_device*, %struct.hid_device** %device, align 8, !dbg !9833
  %collection1 = getelementptr inbounds %struct.hid_device, %struct.hid_device* %1, i32 0, i32 4, !dbg !9834
  %2 = load %struct.hid_collection*, %struct.hid_collection** %collection1, align 8, !dbg !9834
  store %struct.hid_collection* %2, %struct.hid_collection** %collection, align 8, !dbg !9831
  call void @llvm.dbg.declare(metadata i32* %n, metadata !9835, metadata !DIExpression()), !dbg !9836
  %3 = load %struct.hid_parser*, %struct.hid_parser** %parser.addr, align 8, !dbg !9837
  %collection_stack_ptr = getelementptr inbounds %struct.hid_parser, %struct.hid_parser* %3, i32 0, i32 5, !dbg !9839
  %4 = load i32, i32* %collection_stack_ptr, align 8, !dbg !9839
  %sub = sub i32 %4, 1, !dbg !9840
  store i32 %sub, i32* %n, align 4, !dbg !9841
  br label %for.cond, !dbg !9842

for.cond:                                         ; preds = %for.inc, %entry
  %5 = load i32, i32* %n, align 4, !dbg !9843
  %cmp = icmp sge i32 %5, 0, !dbg !9845
  br i1 %cmp, label %for.body, label %for.end, !dbg !9846

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i32* %index, metadata !9847, metadata !DIExpression()), !dbg !9849
  %6 = load %struct.hid_parser*, %struct.hid_parser** %parser.addr, align 8, !dbg !9850
  %collection_stack = getelementptr inbounds %struct.hid_parser, %struct.hid_parser* %6, i32 0, i32 4, !dbg !9851
  %7 = load i32*, i32** %collection_stack, align 8, !dbg !9851
  %8 = load i32, i32* %n, align 4, !dbg !9852
  %idxprom = sext i32 %8 to i64, !dbg !9850
  %arrayidx = getelementptr i32, i32* %7, i64 %idxprom, !dbg !9850
  %9 = load i32, i32* %arrayidx, align 4, !dbg !9850
  store i32 %9, i32* %index, align 4, !dbg !9849
  %10 = load %struct.hid_collection*, %struct.hid_collection** %collection, align 8, !dbg !9853
  %11 = load i32, i32* %index, align 4, !dbg !9855
  %idxprom2 = zext i32 %11 to i64, !dbg !9853
  %arrayidx3 = getelementptr %struct.hid_collection, %struct.hid_collection* %10, i64 %idxprom2, !dbg !9853
  %type4 = getelementptr inbounds %struct.hid_collection, %struct.hid_collection* %arrayidx3, i32 0, i32 1, !dbg !9856
  %12 = load i32, i32* %type4, align 4, !dbg !9856
  %13 = load i32, i32* %type.addr, align 4, !dbg !9857
  %cmp5 = icmp eq i32 %12, %13, !dbg !9858
  br i1 %cmp5, label %if.then, label %if.end, !dbg !9859

if.then:                                          ; preds = %for.body
  %14 = load %struct.hid_collection*, %struct.hid_collection** %collection, align 8, !dbg !9860
  %15 = load i32, i32* %index, align 4, !dbg !9861
  %idxprom6 = zext i32 %15 to i64, !dbg !9860
  %arrayidx7 = getelementptr %struct.hid_collection, %struct.hid_collection* %14, i64 %idxprom6, !dbg !9860
  %usage = getelementptr inbounds %struct.hid_collection, %struct.hid_collection* %arrayidx7, i32 0, i32 2, !dbg !9862
  %16 = load i32, i32* %usage, align 4, !dbg !9862
  store i32 %16, i32* %retval, align 4, !dbg !9863
  br label %return, !dbg !9863

if.end:                                           ; preds = %for.body
  br label %for.inc, !dbg !9864

for.inc:                                          ; preds = %if.end
  %17 = load i32, i32* %n, align 4, !dbg !9865
  %dec = add i32 %17, -1, !dbg !9865
  store i32 %dec, i32* %n, align 4, !dbg !9865
  br label %for.cond, !dbg !9866, !llvm.loop !9867

for.end:                                          ; preds = %for.cond
  store i32 0, i32* %retval, align 4, !dbg !9869
  br label %return, !dbg !9869

return:                                           ; preds = %for.end, %if.then
  %18 = load i32, i32* %retval, align 4, !dbg !9870
  ret i32 %18, !dbg !9870
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.hid_field* @hid_register_field(%struct.hid_report* %report, i32 %usages, i32 %values) #0 !dbg !9871 {
entry:
  %retval = alloca %struct.hid_field*, align 8
  %report.addr = alloca %struct.hid_report*, align 8
  %usages.addr = alloca i32, align 4
  %values.addr = alloca i32, align 4
  %field = alloca %struct.hid_field*, align 8
  store %struct.hid_report* %report, %struct.hid_report** %report.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.hid_report** %report.addr, metadata !9874, metadata !DIExpression()), !dbg !9875
  store i32 %usages, i32* %usages.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %usages.addr, metadata !9876, metadata !DIExpression()), !dbg !9877
  store i32 %values, i32* %values.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %values.addr, metadata !9878, metadata !DIExpression()), !dbg !9879
  call void @llvm.dbg.declare(metadata %struct.hid_field** %field, metadata !9880, metadata !DIExpression()), !dbg !9881
  %0 = load %struct.hid_report*, %struct.hid_report** %report.addr, align 8, !dbg !9882
  %maxfield = getelementptr inbounds %struct.hid_report, %struct.hid_report* %0, i32 0, i32 6, !dbg !9884
  %1 = load i32, i32* %maxfield, align 8, !dbg !9884
  %cmp = icmp eq i32 %1, 256, !dbg !9885
  br i1 %cmp, label %if.then, label %if.end, !dbg !9886

if.then:                                          ; preds = %entry
  %2 = load %struct.hid_report*, %struct.hid_report** %report.addr, align 8, !dbg !9887
  %device = getelementptr inbounds %struct.hid_report, %struct.hid_report* %2, i32 0, i32 8, !dbg !9887
  %3 = load %struct.hid_device*, %struct.hid_device** %device, align 8, !dbg !9887
  %dev = getelementptr inbounds %struct.hid_device, %struct.hid_device* %3, i32 0, i32 18, !dbg !9887
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %dev, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.55, i64 0, i64 0)) #13, !dbg !9887
  store %struct.hid_field* null, %struct.hid_field** %retval, align 8, !dbg !9889
  br label %return, !dbg !9889

if.end:                                           ; preds = %entry
  %4 = load i32, i32* %usages.addr, align 4, !dbg !9890
  %conv = zext i32 %4 to i64, !dbg !9890
  %mul = mul i64 %conv, 24, !dbg !9891
  %add = add i64 112, %mul, !dbg !9892
  %5 = load i32, i32* %values.addr, align 4, !dbg !9893
  %conv1 = zext i32 %5 to i64, !dbg !9893
  %mul2 = mul i64 %conv1, 4, !dbg !9894
  %add3 = add i64 %add, %mul2, !dbg !9895
  %call = call i8* @kzalloc(i64 %add3, i32 3264) #9, !dbg !9896
  %6 = bitcast i8* %call to %struct.hid_field*, !dbg !9896
  store %struct.hid_field* %6, %struct.hid_field** %field, align 8, !dbg !9897
  %7 = load %struct.hid_field*, %struct.hid_field** %field, align 8, !dbg !9898
  %tobool = icmp ne %struct.hid_field* %7, null, !dbg !9898
  br i1 %tobool, label %if.end5, label %if.then4, !dbg !9900

if.then4:                                         ; preds = %if.end
  store %struct.hid_field* null, %struct.hid_field** %retval, align 8, !dbg !9901
  br label %return, !dbg !9901

if.end5:                                          ; preds = %if.end
  %8 = load %struct.hid_report*, %struct.hid_report** %report.addr, align 8, !dbg !9902
  %maxfield6 = getelementptr inbounds %struct.hid_report, %struct.hid_report* %8, i32 0, i32 6, !dbg !9903
  %9 = load i32, i32* %maxfield6, align 8, !dbg !9904
  %inc = add i32 %9, 1, !dbg !9904
  store i32 %inc, i32* %maxfield6, align 8, !dbg !9904
  %10 = load %struct.hid_field*, %struct.hid_field** %field, align 8, !dbg !9905
  %index = getelementptr inbounds %struct.hid_field, %struct.hid_field* %10, i32 0, i32 18, !dbg !9906
  store i32 %9, i32* %index, align 8, !dbg !9907
  %11 = load %struct.hid_field*, %struct.hid_field** %field, align 8, !dbg !9908
  %12 = load %struct.hid_report*, %struct.hid_report** %report.addr, align 8, !dbg !9909
  %field7 = getelementptr inbounds %struct.hid_report, %struct.hid_report* %12, i32 0, i32 5, !dbg !9910
  %13 = load %struct.hid_field*, %struct.hid_field** %field, align 8, !dbg !9911
  %index8 = getelementptr inbounds %struct.hid_field, %struct.hid_field* %13, i32 0, i32 18, !dbg !9912
  %14 = load i32, i32* %index8, align 8, !dbg !9912
  %idxprom = zext i32 %14 to i64, !dbg !9909
  %arrayidx = getelementptr [256 x %struct.hid_field*], [256 x %struct.hid_field*]* %field7, i64 0, i64 %idxprom, !dbg !9909
  store %struct.hid_field* %11, %struct.hid_field** %arrayidx, align 8, !dbg !9913
  %15 = load %struct.hid_field*, %struct.hid_field** %field, align 8, !dbg !9914
  %add.ptr = getelementptr %struct.hid_field, %struct.hid_field* %15, i64 1, !dbg !9915
  %16 = bitcast %struct.hid_field* %add.ptr to %struct.hid_usage*, !dbg !9916
  %17 = load %struct.hid_field*, %struct.hid_field** %field, align 8, !dbg !9917
  %usage = getelementptr inbounds %struct.hid_field, %struct.hid_field* %17, i32 0, i32 3, !dbg !9918
  store %struct.hid_usage* %16, %struct.hid_usage** %usage, align 8, !dbg !9919
  %18 = load %struct.hid_field*, %struct.hid_field** %field, align 8, !dbg !9920
  %usage9 = getelementptr inbounds %struct.hid_field, %struct.hid_field* %18, i32 0, i32 3, !dbg !9921
  %19 = load %struct.hid_usage*, %struct.hid_usage** %usage9, align 8, !dbg !9921
  %20 = load i32, i32* %usages.addr, align 4, !dbg !9922
  %idx.ext = zext i32 %20 to i64, !dbg !9923
  %add.ptr10 = getelementptr %struct.hid_usage, %struct.hid_usage* %19, i64 %idx.ext, !dbg !9923
  %21 = bitcast %struct.hid_usage* %add.ptr10 to i32*, !dbg !9924
  %22 = load %struct.hid_field*, %struct.hid_field** %field, align 8, !dbg !9925
  %value = getelementptr inbounds %struct.hid_field, %struct.hid_field* %22, i32 0, i32 10, !dbg !9926
  store i32* %21, i32** %value, align 8, !dbg !9927
  %23 = load %struct.hid_report*, %struct.hid_report** %report.addr, align 8, !dbg !9928
  %24 = load %struct.hid_field*, %struct.hid_field** %field, align 8, !dbg !9929
  %report11 = getelementptr inbounds %struct.hid_field, %struct.hid_field* %24, i32 0, i32 17, !dbg !9930
  store %struct.hid_report* %23, %struct.hid_report** %report11, align 8, !dbg !9931
  %25 = load %struct.hid_field*, %struct.hid_field** %field, align 8, !dbg !9932
  store %struct.hid_field* %25, %struct.hid_field** %retval, align 8, !dbg !9933
  br label %return, !dbg !9933

return:                                           ; preds = %if.end5, %if.then4, %if.then
  %26 = load %struct.hid_field*, %struct.hid_field** %retval, align 8, !dbg !9934
  ret %struct.hid_field* %26, !dbg !9934
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @item_sdata(%struct.hid_item* %item) #0 !dbg !9935 {
entry:
  %retval = alloca i32, align 4
  %item.addr = alloca %struct.hid_item*, align 8
  store %struct.hid_item* %item, %struct.hid_item** %item.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.hid_item** %item.addr, metadata !9938, metadata !DIExpression()), !dbg !9939
  %0 = load %struct.hid_item*, %struct.hid_item** %item.addr, align 8, !dbg !9940
  %size = getelementptr inbounds %struct.hid_item, %struct.hid_item* %0, i32 0, i32 1, !dbg !9941
  %1 = load i8, i8* %size, align 4, !dbg !9941
  %conv = zext i8 %1 to i32, !dbg !9940
  switch i32 %conv, label %sw.epilog [
    i32 1, label %sw.bb
    i32 2, label %sw.bb2
    i32 4, label %sw.bb5
  ], !dbg !9942

sw.bb:                                            ; preds = %entry
  %2 = load %struct.hid_item*, %struct.hid_item** %item.addr, align 8, !dbg !9943
  %data = getelementptr inbounds %struct.hid_item, %struct.hid_item* %2, i32 0, i32 4, !dbg !9945
  %s8 = bitcast %union.anon.67* %data to i8*, !dbg !9946
  %3 = load i8, i8* %s8, align 8, !dbg !9946
  %conv1 = sext i8 %3 to i32, !dbg !9943
  store i32 %conv1, i32* %retval, align 4, !dbg !9947
  br label %return, !dbg !9947

sw.bb2:                                           ; preds = %entry
  %4 = load %struct.hid_item*, %struct.hid_item** %item.addr, align 8, !dbg !9948
  %data3 = getelementptr inbounds %struct.hid_item, %struct.hid_item* %4, i32 0, i32 4, !dbg !9949
  %s16 = bitcast %union.anon.67* %data3 to i16*, !dbg !9950
  %5 = load i16, i16* %s16, align 8, !dbg !9950
  %conv4 = sext i16 %5 to i32, !dbg !9948
  store i32 %conv4, i32* %retval, align 4, !dbg !9951
  br label %return, !dbg !9951

sw.bb5:                                           ; preds = %entry
  %6 = load %struct.hid_item*, %struct.hid_item** %item.addr, align 8, !dbg !9952
  %data6 = getelementptr inbounds %struct.hid_item, %struct.hid_item* %6, i32 0, i32 4, !dbg !9953
  %s32 = bitcast %union.anon.67* %data6 to i32*, !dbg !9954
  %7 = load i32, i32* %s32, align 8, !dbg !9954
  store i32 %7, i32* %retval, align 4, !dbg !9955
  br label %return, !dbg !9955

sw.epilog:                                        ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !9956
  br label %return, !dbg !9956

return:                                           ; preds = %sw.epilog, %sw.bb5, %sw.bb2, %sw.bb
  %8 = load i32, i32* %retval, align 4, !dbg !9957
  ret i32 %8, !dbg !9957
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @hid_add_usage(%struct.hid_parser* %parser, i32 %usage, i8 zeroext %size) #0 !dbg !9958 {
entry:
  %retval = alloca i32, align 4
  %parser.addr = alloca %struct.hid_parser*, align 8
  %usage.addr = alloca i32, align 4
  %size.addr = alloca i8, align 1
  store %struct.hid_parser* %parser, %struct.hid_parser** %parser.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.hid_parser** %parser.addr, metadata !9961, metadata !DIExpression()), !dbg !9962
  store i32 %usage, i32* %usage.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %usage.addr, metadata !9963, metadata !DIExpression()), !dbg !9964
  store i8 %size, i8* %size.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %size.addr, metadata !9965, metadata !DIExpression()), !dbg !9966
  %0 = load %struct.hid_parser*, %struct.hid_parser** %parser.addr, align 8, !dbg !9967
  %local = getelementptr inbounds %struct.hid_parser, %struct.hid_parser* %0, i32 0, i32 3, !dbg !9969
  %usage_index = getelementptr inbounds %struct.hid_local, %struct.hid_local* %local, i32 0, i32 3, !dbg !9970
  %1 = load i32, i32* %usage_index, align 4, !dbg !9970
  %cmp = icmp uge i32 %1, 12288, !dbg !9971
  br i1 %cmp, label %if.then, label %if.end, !dbg !9972

if.then:                                          ; preds = %entry
  %2 = load %struct.hid_parser*, %struct.hid_parser** %parser.addr, align 8, !dbg !9973
  %device = getelementptr inbounds %struct.hid_parser, %struct.hid_parser* %2, i32 0, i32 7, !dbg !9973
  %3 = load %struct.hid_device*, %struct.hid_device** %device, align 8, !dbg !9973
  %dev = getelementptr inbounds %struct.hid_device, %struct.hid_device* %3, i32 0, i32 18, !dbg !9973
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %dev, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.69, i64 0, i64 0)) #13, !dbg !9973
  store i32 -1, i32* %retval, align 4, !dbg !9975
  br label %return, !dbg !9975

if.end:                                           ; preds = %entry
  %4 = load i32, i32* %usage.addr, align 4, !dbg !9976
  %5 = load %struct.hid_parser*, %struct.hid_parser** %parser.addr, align 8, !dbg !9977
  %local1 = getelementptr inbounds %struct.hid_parser, %struct.hid_parser* %5, i32 0, i32 3, !dbg !9978
  %usage2 = getelementptr inbounds %struct.hid_local, %struct.hid_local* %local1, i32 0, i32 0, !dbg !9979
  %6 = load %struct.hid_parser*, %struct.hid_parser** %parser.addr, align 8, !dbg !9980
  %local3 = getelementptr inbounds %struct.hid_parser, %struct.hid_parser* %6, i32 0, i32 3, !dbg !9981
  %usage_index4 = getelementptr inbounds %struct.hid_local, %struct.hid_local* %local3, i32 0, i32 3, !dbg !9982
  %7 = load i32, i32* %usage_index4, align 4, !dbg !9982
  %idxprom = zext i32 %7 to i64, !dbg !9977
  %arrayidx = getelementptr [12288 x i32], [12288 x i32]* %usage2, i64 0, i64 %idxprom, !dbg !9977
  store i32 %4, i32* %arrayidx, align 4, !dbg !9983
  %8 = load i8, i8* %size.addr, align 1, !dbg !9984
  %conv = zext i8 %8 to i32, !dbg !9984
  %cmp5 = icmp sle i32 %conv, 2, !dbg !9986
  br i1 %cmp5, label %if.then7, label %if.end10, !dbg !9987

if.then7:                                         ; preds = %if.end
  %9 = load %struct.hid_parser*, %struct.hid_parser** %parser.addr, align 8, !dbg !9988
  %10 = load %struct.hid_parser*, %struct.hid_parser** %parser.addr, align 8, !dbg !9989
  %local8 = getelementptr inbounds %struct.hid_parser, %struct.hid_parser* %10, i32 0, i32 3, !dbg !9990
  %usage_index9 = getelementptr inbounds %struct.hid_local, %struct.hid_local* %local8, i32 0, i32 3, !dbg !9991
  %11 = load i32, i32* %usage_index9, align 4, !dbg !9991
  call void @complete_usage(%struct.hid_parser* %9, i32 %11) #9, !dbg !9992
  br label %if.end10, !dbg !9992

if.end10:                                         ; preds = %if.then7, %if.end
  %12 = load i8, i8* %size.addr, align 1, !dbg !9993
  %13 = load %struct.hid_parser*, %struct.hid_parser** %parser.addr, align 8, !dbg !9994
  %local11 = getelementptr inbounds %struct.hid_parser, %struct.hid_parser* %13, i32 0, i32 3, !dbg !9995
  %usage_size = getelementptr inbounds %struct.hid_local, %struct.hid_local* %local11, i32 0, i32 1, !dbg !9996
  %14 = load %struct.hid_parser*, %struct.hid_parser** %parser.addr, align 8, !dbg !9997
  %local12 = getelementptr inbounds %struct.hid_parser, %struct.hid_parser* %14, i32 0, i32 3, !dbg !9998
  %usage_index13 = getelementptr inbounds %struct.hid_local, %struct.hid_local* %local12, i32 0, i32 3, !dbg !9999
  %15 = load i32, i32* %usage_index13, align 4, !dbg !9999
  %idxprom14 = zext i32 %15 to i64, !dbg !9994
  %arrayidx15 = getelementptr [12288 x i8], [12288 x i8]* %usage_size, i64 0, i64 %idxprom14, !dbg !9994
  store i8 %12, i8* %arrayidx15, align 1, !dbg !10000
  %16 = load %struct.hid_parser*, %struct.hid_parser** %parser.addr, align 8, !dbg !10001
  %collection_stack_ptr = getelementptr inbounds %struct.hid_parser, %struct.hid_parser* %16, i32 0, i32 5, !dbg !10002
  %17 = load i32, i32* %collection_stack_ptr, align 8, !dbg !10002
  %tobool = icmp ne i32 %17, 0, !dbg !10001
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !10001

cond.true:                                        ; preds = %if.end10
  %18 = load %struct.hid_parser*, %struct.hid_parser** %parser.addr, align 8, !dbg !10003
  %collection_stack = getelementptr inbounds %struct.hid_parser, %struct.hid_parser* %18, i32 0, i32 4, !dbg !10004
  %19 = load i32*, i32** %collection_stack, align 8, !dbg !10004
  %20 = load %struct.hid_parser*, %struct.hid_parser** %parser.addr, align 8, !dbg !10005
  %collection_stack_ptr16 = getelementptr inbounds %struct.hid_parser, %struct.hid_parser* %20, i32 0, i32 5, !dbg !10006
  %21 = load i32, i32* %collection_stack_ptr16, align 8, !dbg !10006
  %sub = sub i32 %21, 1, !dbg !10007
  %idxprom17 = zext i32 %sub to i64, !dbg !10003
  %arrayidx18 = getelementptr i32, i32* %19, i64 %idxprom17, !dbg !10003
  %22 = load i32, i32* %arrayidx18, align 4, !dbg !10003
  br label %cond.end, !dbg !10001

cond.false:                                       ; preds = %if.end10
  br label %cond.end, !dbg !10001

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %22, %cond.true ], [ 0, %cond.false ], !dbg !10001
  %23 = load %struct.hid_parser*, %struct.hid_parser** %parser.addr, align 8, !dbg !10008
  %local19 = getelementptr inbounds %struct.hid_parser, %struct.hid_parser* %23, i32 0, i32 3, !dbg !10009
  %collection_index = getelementptr inbounds %struct.hid_local, %struct.hid_local* %local19, i32 0, i32 2, !dbg !10010
  %24 = load %struct.hid_parser*, %struct.hid_parser** %parser.addr, align 8, !dbg !10011
  %local20 = getelementptr inbounds %struct.hid_parser, %struct.hid_parser* %24, i32 0, i32 3, !dbg !10012
  %usage_index21 = getelementptr inbounds %struct.hid_local, %struct.hid_local* %local20, i32 0, i32 3, !dbg !10013
  %25 = load i32, i32* %usage_index21, align 4, !dbg !10013
  %idxprom22 = zext i32 %25 to i64, !dbg !10008
  %arrayidx23 = getelementptr [12288 x i32], [12288 x i32]* %collection_index, i64 0, i64 %idxprom22, !dbg !10008
  store i32 %cond, i32* %arrayidx23, align 4, !dbg !10014
  %26 = load %struct.hid_parser*, %struct.hid_parser** %parser.addr, align 8, !dbg !10015
  %local24 = getelementptr inbounds %struct.hid_parser, %struct.hid_parser* %26, i32 0, i32 3, !dbg !10016
  %usage_index25 = getelementptr inbounds %struct.hid_local, %struct.hid_local* %local24, i32 0, i32 3, !dbg !10017
  %27 = load i32, i32* %usage_index25, align 4, !dbg !10018
  %inc = add i32 %27, 1, !dbg !10018
  store i32 %inc, i32* %usage_index25, align 4, !dbg !10018
  store i32 0, i32* %retval, align 4, !dbg !10019
  br label %return, !dbg !10019

return:                                           ; preds = %cond.end, %if.then
  %28 = load i32, i32* %retval, align 4, !dbg !10020
  ret i32 %28, !dbg !10020
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @dev_name(%struct.device* %dev) #0 !dbg !10021 {
entry:
  %retval = alloca i8*, align 8
  %dev.addr = alloca %struct.device*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !10026, metadata !DIExpression()), !dbg !10027
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !10028
  %init_name = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 3, !dbg !10030
  %1 = load i8*, i8** %init_name, align 8, !dbg !10030
  %tobool = icmp ne i8* %1, null, !dbg !10028
  br i1 %tobool, label %if.then, label %if.end, !dbg !10031

if.then:                                          ; preds = %entry
  %2 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !10032
  %init_name1 = getelementptr inbounds %struct.device, %struct.device* %2, i32 0, i32 3, !dbg !10033
  %3 = load i8*, i8** %init_name1, align 8, !dbg !10033
  store i8* %3, i8** %retval, align 8, !dbg !10034
  br label %return, !dbg !10034

if.end:                                           ; preds = %entry
  %4 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !10035
  %kobj = getelementptr inbounds %struct.device, %struct.device* %4, i32 0, i32 0, !dbg !10036
  %call = call i8* @kobject_name(%struct.kobject* %kobj) #9, !dbg !10037
  store i8* %call, i8** %retval, align 8, !dbg !10038
  br label %return, !dbg !10038

return:                                           ; preds = %if.end, %if.then
  %5 = load i8*, i8** %retval, align 8, !dbg !10039
  ret i8* %5, !dbg !10039
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @kobject_name(%struct.kobject* %kobj) #0 !dbg !10040 {
entry:
  %kobj.addr = alloca %struct.kobject*, align 8
  store %struct.kobject* %kobj, %struct.kobject** %kobj.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.kobject** %kobj.addr, metadata !10045, metadata !DIExpression()), !dbg !10046
  %0 = load %struct.kobject*, %struct.kobject** %kobj.addr, align 8, !dbg !10047
  %name = getelementptr inbounds %struct.kobject, %struct.kobject* %0, i32 0, i32 0, !dbg !10048
  %1 = load i8*, i8** %name, align 8, !dbg !10048
  ret i8* %1, !dbg !10049
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @kmalloc_array(i64 %n, i64 %size, i32 %flags) #0 !dbg !10050 {
entry:
  %s.addr.i.i = alloca %struct.kmem_cache*, align 8
  call void @llvm.dbg.declare(metadata %struct.kmem_cache** %s.addr.i.i, metadata !4565, metadata !DIExpression()), !dbg !10051
  %flags.addr.i17.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i17.i, metadata !4575, metadata !DIExpression()), !dbg !10055
  %size.addr.i18.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i18.i, metadata !4577, metadata !DIExpression()), !dbg !10056
  %ret.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %ret.i.i, metadata !4579, metadata !DIExpression()), !dbg !10057
  %retval.i12.i = alloca i32, align 4
  %flags.addr.i13.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i13.i, metadata !4581, metadata !DIExpression()), !dbg !10058
  %retval.i.i = alloca i32, align 4
  %size.addr.i11.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i11.i, metadata !4587, metadata !DIExpression()), !dbg !10060
  %size.addr.i.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i.i, metadata !4593, metadata !DIExpression()), !dbg !10062
  %flags.addr.i.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i.i.i, metadata !4602, metadata !DIExpression()), !dbg !10065
  %order.addr.i.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %order.addr.i.i.i, metadata !4604, metadata !DIExpression()), !dbg !10066
  %size.addr.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i, metadata !4606, metadata !DIExpression()), !dbg !10067
  %flags.addr.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i.i, metadata !4608, metadata !DIExpression()), !dbg !10068
  %order.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %order.i.i, metadata !4610, metadata !DIExpression()), !dbg !10069
  %retval.i = alloca i8*, align 8
  %size.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i, metadata !4612, metadata !DIExpression()), !dbg !10070
  %flags.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i, metadata !4614, metadata !DIExpression()), !dbg !10071
  %index.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %index.i, metadata !4616, metadata !DIExpression()), !dbg !10072
  %retval = alloca i8*, align 8
  %n.addr = alloca i64, align 8
  %size.addr = alloca i64, align 8
  %flags.addr = alloca i32, align 4
  %bytes = alloca i64, align 8
  %__a = alloca i64, align 8
  %__b = alloca i64, align 8
  %__d = alloca i64*, align 8
  %tmp = alloca i8, align 1
  store i64 %n, i64* %n.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %n.addr, metadata !10073, metadata !DIExpression()), !dbg !10074
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !10075, metadata !DIExpression()), !dbg !10076
  store i32 %flags, i32* %flags.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr, metadata !10077, metadata !DIExpression()), !dbg !10078
  call void @llvm.dbg.declare(metadata i64* %bytes, metadata !10079, metadata !DIExpression()), !dbg !10080
  call void @llvm.dbg.declare(metadata i64* %__a, metadata !10081, metadata !DIExpression()), !dbg !10084
  %0 = load i64, i64* %n.addr, align 8, !dbg !10084
  store i64 %0, i64* %__a, align 8, !dbg !10084
  call void @llvm.dbg.declare(metadata i64* %__b, metadata !10085, metadata !DIExpression()), !dbg !10084
  %1 = load i64, i64* %size.addr, align 8, !dbg !10084
  store i64 %1, i64* %__b, align 8, !dbg !10084
  call void @llvm.dbg.declare(metadata i64** %__d, metadata !10086, metadata !DIExpression()), !dbg !10084
  store i64* %bytes, i64** %__d, align 8, !dbg !10084
  %cmp = icmp eq i64* %__a, %__b, !dbg !10084
  %conv = zext i1 %cmp to i32, !dbg !10084
  %2 = load i64*, i64** %__d, align 8, !dbg !10084
  %cmp1 = icmp eq i64* %__a, %2, !dbg !10084
  %conv2 = zext i1 %cmp1 to i32, !dbg !10084
  %3 = load i64, i64* %__a, align 8, !dbg !10084
  %4 = load i64, i64* %__b, align 8, !dbg !10084
  %5 = load i64*, i64** %__d, align 8, !dbg !10084
  %6 = call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %3, i64 %4), !dbg !10084
  %7 = extractvalue { i64, i1 } %6, 1, !dbg !10084
  %8 = extractvalue { i64, i1 } %6, 0, !dbg !10084
  store i64 %8, i64* %5, align 8, !dbg !10084
  %frombool = zext i1 %7 to i8, !dbg !10084
  store i8 %frombool, i8* %tmp, align 1, !dbg !10084
  %9 = load i8, i8* %tmp, align 1, !dbg !10084
  %tobool = trunc i8 %9 to i1, !dbg !10084
  %call = call zeroext i1 @__must_check_overflow(i1 zeroext %tobool) #9, !dbg !10087
  %lnot = xor i1 %call, true, !dbg !10087
  %lnot3 = xor i1 %lnot, true, !dbg !10087
  %lnot.ext = zext i1 %lnot3 to i32, !dbg !10087
  %conv4 = sext i32 %lnot.ext to i64, !dbg !10087
  %tobool5 = icmp ne i64 %conv4, 0, !dbg !10087
  br i1 %tobool5, label %if.then, label %if.end, !dbg !10088

if.then:                                          ; preds = %entry
  store i8* null, i8** %retval, align 8, !dbg !10089
  br label %return, !dbg !10089

if.end:                                           ; preds = %entry
  %10 = load i64, i64* %n.addr, align 8, !dbg !10090
  %11 = call i1 @llvm.is.constant.i64(i64 %10), !dbg !10091
  br i1 %11, label %land.lhs.true, label %if.end8, !dbg !10092

land.lhs.true:                                    ; preds = %if.end
  %12 = load i64, i64* %size.addr, align 8, !dbg !10093
  %13 = call i1 @llvm.is.constant.i64(i64 %12), !dbg !10094
  br i1 %13, label %if.then6, label %if.end8, !dbg !10095

if.then6:                                         ; preds = %land.lhs.true
  %14 = load i64, i64* %bytes, align 8, !dbg !10096
  %15 = load i32, i32* %flags.addr, align 4, !dbg !10097
  store i64 %14, i64* %size.addr.i, align 8
  store i32 %15, i32* %flags.addr.i, align 4
  %16 = load i64, i64* %size.addr.i, align 8, !dbg !10098
  %17 = call i1 @llvm.is.constant.i64(i64 %16) #10, !dbg !10099
  br i1 %17, label %if.then.i, label %if.end9.i, !dbg !10100

if.then.i:                                        ; preds = %if.then6
  %18 = load i64, i64* %size.addr.i, align 8, !dbg !10101
  %cmp.i = icmp ugt i64 %18, 8192, !dbg !10102
  br i1 %cmp.i, label %if.then1.i, label %if.end.i, !dbg !10103

if.then1.i:                                       ; preds = %if.then.i
  %19 = load i64, i64* %size.addr.i, align 8, !dbg !10104
  %20 = load i32, i32* %flags.addr.i, align 4, !dbg !10105
  store i64 %19, i64* %size.addr.i.i, align 8
  store i32 %20, i32* %flags.addr.i.i, align 4
  %21 = load i64, i64* %size.addr.i.i, align 8, !dbg !10106
  %call.i.i = call i32 @get_order(i64 %21) #11, !dbg !10107
  store i32 %call.i.i, i32* %order.i.i, align 4, !dbg !10069
  %22 = load i64, i64* %size.addr.i.i, align 8, !dbg !10108
  %23 = load i32, i32* %flags.addr.i.i, align 4, !dbg !10109
  %24 = load i32, i32* %order.i.i, align 4, !dbg !10110
  store i64 %22, i64* %size.addr.i.i.i, align 8
  store i32 %23, i32* %flags.addr.i.i.i, align 4
  store i32 %24, i32* %order.addr.i.i.i, align 4
  %25 = load i64, i64* %size.addr.i.i.i, align 8, !dbg !10111
  %26 = load i32, i32* %flags.addr.i.i.i, align 4, !dbg !10112
  %27 = load i32, i32* %order.addr.i.i.i, align 4, !dbg !10113
  %call.i.i.i = call noalias i8* @kmalloc_order(i64 %25, i32 %26, i32 %27) #12, !dbg !10114
  %ptrint.i.i.i = ptrtoint i8* %call.i.i.i to i64, !dbg !10114
  %maskedptr.i.i.i = and i64 %ptrint.i.i.i, 4095, !dbg !10114
  %maskcond.i.i.i = icmp eq i64 %maskedptr.i.i.i, 0, !dbg !10114
  call void @llvm.assume(i1 %maskcond.i.i.i) #10, !dbg !10114
  store i8* %call.i.i.i, i8** %retval.i, align 8, !dbg !10115
  br label %kmalloc.exit, !dbg !10115

if.end.i:                                         ; preds = %if.then.i
  %28 = load i64, i64* %size.addr.i, align 8, !dbg !10116
  store i64 %28, i64* %size.addr.i11.i, align 8
  %29 = load i64, i64* %size.addr.i11.i, align 8, !dbg !10117
  %tobool.i.i = icmp ne i64 %29, 0, !dbg !10117
  br i1 %tobool.i.i, label %if.end.i.i, label %if.then.i.i, !dbg !10118

if.then.i.i:                                      ; preds = %if.end.i
  store i32 0, i32* %retval.i.i, align 4, !dbg !10119
  br label %kmalloc_index.exit.i, !dbg !10119

if.end.i.i:                                       ; preds = %if.end.i
  %30 = load i64, i64* %size.addr.i11.i, align 8, !dbg !10120
  %cmp.i.i = icmp ule i64 %30, 8, !dbg !10121
  br i1 %cmp.i.i, label %if.then1.i.i, label %if.end2.i.i, !dbg !10122

if.then1.i.i:                                     ; preds = %if.end.i.i
  store i32 3, i32* %retval.i.i, align 4, !dbg !10123
  br label %kmalloc_index.exit.i, !dbg !10123

if.end2.i.i:                                      ; preds = %if.end.i.i
  %31 = load i64, i64* %size.addr.i11.i, align 8, !dbg !10124
  %cmp3.i.i = icmp ugt i64 %31, 64, !dbg !10125
  br i1 %cmp3.i.i, label %land.lhs.true.i.i, label %if.end6.i.i, !dbg !10126

land.lhs.true.i.i:                                ; preds = %if.end2.i.i
  %32 = load i64, i64* %size.addr.i11.i, align 8, !dbg !10127
  %cmp4.i.i = icmp ule i64 %32, 96, !dbg !10128
  br i1 %cmp4.i.i, label %if.then5.i.i, label %if.end6.i.i, !dbg !10129

if.then5.i.i:                                     ; preds = %land.lhs.true.i.i
  store i32 1, i32* %retval.i.i, align 4, !dbg !10130
  br label %kmalloc_index.exit.i, !dbg !10130

if.end6.i.i:                                      ; preds = %land.lhs.true.i.i, %if.end2.i.i
  %33 = load i64, i64* %size.addr.i11.i, align 8, !dbg !10131
  %cmp7.i.i = icmp ugt i64 %33, 128, !dbg !10132
  br i1 %cmp7.i.i, label %land.lhs.true8.i.i, label %if.end11.i.i, !dbg !10133

land.lhs.true8.i.i:                               ; preds = %if.end6.i.i
  %34 = load i64, i64* %size.addr.i11.i, align 8, !dbg !10134
  %cmp9.i.i = icmp ule i64 %34, 192, !dbg !10135
  br i1 %cmp9.i.i, label %if.then10.i.i, label %if.end11.i.i, !dbg !10136

if.then10.i.i:                                    ; preds = %land.lhs.true8.i.i
  store i32 2, i32* %retval.i.i, align 4, !dbg !10137
  br label %kmalloc_index.exit.i, !dbg !10137

if.end11.i.i:                                     ; preds = %land.lhs.true8.i.i, %if.end6.i.i
  %35 = load i64, i64* %size.addr.i11.i, align 8, !dbg !10138
  %cmp12.i.i = icmp ule i64 %35, 8, !dbg !10139
  br i1 %cmp12.i.i, label %if.then13.i.i, label %if.end14.i.i, !dbg !10140

if.then13.i.i:                                    ; preds = %if.end11.i.i
  store i32 3, i32* %retval.i.i, align 4, !dbg !10141
  br label %kmalloc_index.exit.i, !dbg !10141

if.end14.i.i:                                     ; preds = %if.end11.i.i
  %36 = load i64, i64* %size.addr.i11.i, align 8, !dbg !10142
  %cmp15.i.i = icmp ule i64 %36, 16, !dbg !10143
  br i1 %cmp15.i.i, label %if.then16.i.i, label %if.end17.i.i, !dbg !10144

if.then16.i.i:                                    ; preds = %if.end14.i.i
  store i32 4, i32* %retval.i.i, align 4, !dbg !10145
  br label %kmalloc_index.exit.i, !dbg !10145

if.end17.i.i:                                     ; preds = %if.end14.i.i
  %37 = load i64, i64* %size.addr.i11.i, align 8, !dbg !10146
  %cmp18.i.i = icmp ule i64 %37, 32, !dbg !10147
  br i1 %cmp18.i.i, label %if.then19.i.i, label %if.end20.i.i, !dbg !10148

if.then19.i.i:                                    ; preds = %if.end17.i.i
  store i32 5, i32* %retval.i.i, align 4, !dbg !10149
  br label %kmalloc_index.exit.i, !dbg !10149

if.end20.i.i:                                     ; preds = %if.end17.i.i
  %38 = load i64, i64* %size.addr.i11.i, align 8, !dbg !10150
  %cmp21.i.i = icmp ule i64 %38, 64, !dbg !10151
  br i1 %cmp21.i.i, label %if.then22.i.i, label %if.end23.i.i, !dbg !10152

if.then22.i.i:                                    ; preds = %if.end20.i.i
  store i32 6, i32* %retval.i.i, align 4, !dbg !10153
  br label %kmalloc_index.exit.i, !dbg !10153

if.end23.i.i:                                     ; preds = %if.end20.i.i
  %39 = load i64, i64* %size.addr.i11.i, align 8, !dbg !10154
  %cmp24.i.i = icmp ule i64 %39, 128, !dbg !10155
  br i1 %cmp24.i.i, label %if.then25.i.i, label %if.end26.i.i, !dbg !10156

if.then25.i.i:                                    ; preds = %if.end23.i.i
  store i32 7, i32* %retval.i.i, align 4, !dbg !10157
  br label %kmalloc_index.exit.i, !dbg !10157

if.end26.i.i:                                     ; preds = %if.end23.i.i
  %40 = load i64, i64* %size.addr.i11.i, align 8, !dbg !10158
  %cmp27.i.i = icmp ule i64 %40, 256, !dbg !10159
  br i1 %cmp27.i.i, label %if.then28.i.i, label %if.end29.i.i, !dbg !10160

if.then28.i.i:                                    ; preds = %if.end26.i.i
  store i32 8, i32* %retval.i.i, align 4, !dbg !10161
  br label %kmalloc_index.exit.i, !dbg !10161

if.end29.i.i:                                     ; preds = %if.end26.i.i
  %41 = load i64, i64* %size.addr.i11.i, align 8, !dbg !10162
  %cmp30.i.i = icmp ule i64 %41, 512, !dbg !10163
  br i1 %cmp30.i.i, label %if.then31.i.i, label %if.end32.i.i, !dbg !10164

if.then31.i.i:                                    ; preds = %if.end29.i.i
  store i32 9, i32* %retval.i.i, align 4, !dbg !10165
  br label %kmalloc_index.exit.i, !dbg !10165

if.end32.i.i:                                     ; preds = %if.end29.i.i
  %42 = load i64, i64* %size.addr.i11.i, align 8, !dbg !10166
  %cmp33.i.i = icmp ule i64 %42, 1024, !dbg !10167
  br i1 %cmp33.i.i, label %if.then34.i.i, label %if.end35.i.i, !dbg !10168

if.then34.i.i:                                    ; preds = %if.end32.i.i
  store i32 10, i32* %retval.i.i, align 4, !dbg !10169
  br label %kmalloc_index.exit.i, !dbg !10169

if.end35.i.i:                                     ; preds = %if.end32.i.i
  %43 = load i64, i64* %size.addr.i11.i, align 8, !dbg !10170
  %cmp36.i.i = icmp ule i64 %43, 2048, !dbg !10171
  br i1 %cmp36.i.i, label %if.then37.i.i, label %if.end38.i.i, !dbg !10172

if.then37.i.i:                                    ; preds = %if.end35.i.i
  store i32 11, i32* %retval.i.i, align 4, !dbg !10173
  br label %kmalloc_index.exit.i, !dbg !10173

if.end38.i.i:                                     ; preds = %if.end35.i.i
  %44 = load i64, i64* %size.addr.i11.i, align 8, !dbg !10174
  %cmp39.i.i = icmp ule i64 %44, 4096, !dbg !10175
  br i1 %cmp39.i.i, label %if.then40.i.i, label %if.end41.i.i, !dbg !10176

if.then40.i.i:                                    ; preds = %if.end38.i.i
  store i32 12, i32* %retval.i.i, align 4, !dbg !10177
  br label %kmalloc_index.exit.i, !dbg !10177

if.end41.i.i:                                     ; preds = %if.end38.i.i
  %45 = load i64, i64* %size.addr.i11.i, align 8, !dbg !10178
  %cmp42.i.i = icmp ule i64 %45, 8192, !dbg !10179
  br i1 %cmp42.i.i, label %if.then43.i.i, label %if.end44.i.i, !dbg !10180

if.then43.i.i:                                    ; preds = %if.end41.i.i
  store i32 13, i32* %retval.i.i, align 4, !dbg !10181
  br label %kmalloc_index.exit.i, !dbg !10181

if.end44.i.i:                                     ; preds = %if.end41.i.i
  %46 = load i64, i64* %size.addr.i11.i, align 8, !dbg !10182
  %cmp45.i.i = icmp ule i64 %46, 16384, !dbg !10183
  br i1 %cmp45.i.i, label %if.then46.i.i, label %if.end47.i.i, !dbg !10184

if.then46.i.i:                                    ; preds = %if.end44.i.i
  store i32 14, i32* %retval.i.i, align 4, !dbg !10185
  br label %kmalloc_index.exit.i, !dbg !10185

if.end47.i.i:                                     ; preds = %if.end44.i.i
  %47 = load i64, i64* %size.addr.i11.i, align 8, !dbg !10186
  %cmp48.i.i = icmp ule i64 %47, 32768, !dbg !10187
  br i1 %cmp48.i.i, label %if.then49.i.i, label %if.end50.i.i, !dbg !10188

if.then49.i.i:                                    ; preds = %if.end47.i.i
  store i32 15, i32* %retval.i.i, align 4, !dbg !10189
  br label %kmalloc_index.exit.i, !dbg !10189

if.end50.i.i:                                     ; preds = %if.end47.i.i
  %48 = load i64, i64* %size.addr.i11.i, align 8, !dbg !10190
  %cmp51.i.i = icmp ule i64 %48, 65536, !dbg !10191
  br i1 %cmp51.i.i, label %if.then52.i.i, label %if.end53.i.i, !dbg !10192

if.then52.i.i:                                    ; preds = %if.end50.i.i
  store i32 16, i32* %retval.i.i, align 4, !dbg !10193
  br label %kmalloc_index.exit.i, !dbg !10193

if.end53.i.i:                                     ; preds = %if.end50.i.i
  %49 = load i64, i64* %size.addr.i11.i, align 8, !dbg !10194
  %cmp54.i.i = icmp ule i64 %49, 131072, !dbg !10195
  br i1 %cmp54.i.i, label %if.then55.i.i, label %if.end56.i.i, !dbg !10196

if.then55.i.i:                                    ; preds = %if.end53.i.i
  store i32 17, i32* %retval.i.i, align 4, !dbg !10197
  br label %kmalloc_index.exit.i, !dbg !10197

if.end56.i.i:                                     ; preds = %if.end53.i.i
  %50 = load i64, i64* %size.addr.i11.i, align 8, !dbg !10198
  %cmp57.i.i = icmp ule i64 %50, 262144, !dbg !10199
  br i1 %cmp57.i.i, label %if.then58.i.i, label %if.end59.i.i, !dbg !10200

if.then58.i.i:                                    ; preds = %if.end56.i.i
  store i32 18, i32* %retval.i.i, align 4, !dbg !10201
  br label %kmalloc_index.exit.i, !dbg !10201

if.end59.i.i:                                     ; preds = %if.end56.i.i
  %51 = load i64, i64* %size.addr.i11.i, align 8, !dbg !10202
  %cmp60.i.i = icmp ule i64 %51, 524288, !dbg !10203
  br i1 %cmp60.i.i, label %if.then61.i.i, label %if.end62.i.i, !dbg !10204

if.then61.i.i:                                    ; preds = %if.end59.i.i
  store i32 19, i32* %retval.i.i, align 4, !dbg !10205
  br label %kmalloc_index.exit.i, !dbg !10205

if.end62.i.i:                                     ; preds = %if.end59.i.i
  %52 = load i64, i64* %size.addr.i11.i, align 8, !dbg !10206
  %cmp63.i.i = icmp ule i64 %52, 1048576, !dbg !10207
  br i1 %cmp63.i.i, label %if.then64.i.i, label %if.end65.i.i, !dbg !10208

if.then64.i.i:                                    ; preds = %if.end62.i.i
  store i32 20, i32* %retval.i.i, align 4, !dbg !10209
  br label %kmalloc_index.exit.i, !dbg !10209

if.end65.i.i:                                     ; preds = %if.end62.i.i
  %53 = load i64, i64* %size.addr.i11.i, align 8, !dbg !10210
  %cmp66.i.i = icmp ule i64 %53, 2097152, !dbg !10211
  br i1 %cmp66.i.i, label %if.then67.i.i, label %if.end68.i.i, !dbg !10212

if.then67.i.i:                                    ; preds = %if.end65.i.i
  store i32 21, i32* %retval.i.i, align 4, !dbg !10213
  br label %kmalloc_index.exit.i, !dbg !10213

if.end68.i.i:                                     ; preds = %if.end65.i.i
  %54 = load i64, i64* %size.addr.i11.i, align 8, !dbg !10214
  %cmp69.i.i = icmp ule i64 %54, 4194304, !dbg !10215
  br i1 %cmp69.i.i, label %if.then70.i.i, label %if.end71.i.i, !dbg !10216

if.then70.i.i:                                    ; preds = %if.end68.i.i
  store i32 22, i32* %retval.i.i, align 4, !dbg !10217
  br label %kmalloc_index.exit.i, !dbg !10217

if.end71.i.i:                                     ; preds = %if.end68.i.i
  %55 = load i64, i64* %size.addr.i11.i, align 8, !dbg !10218
  %cmp72.i.i = icmp ule i64 %55, 8388608, !dbg !10219
  br i1 %cmp72.i.i, label %if.then73.i.i, label %if.end74.i.i, !dbg !10220

if.then73.i.i:                                    ; preds = %if.end71.i.i
  store i32 23, i32* %retval.i.i, align 4, !dbg !10221
  br label %kmalloc_index.exit.i, !dbg !10221

if.end74.i.i:                                     ; preds = %if.end71.i.i
  %56 = load i64, i64* %size.addr.i11.i, align 8, !dbg !10222
  %cmp75.i.i = icmp ule i64 %56, 16777216, !dbg !10223
  br i1 %cmp75.i.i, label %if.then76.i.i, label %if.end77.i.i, !dbg !10224

if.then76.i.i:                                    ; preds = %if.end74.i.i
  store i32 24, i32* %retval.i.i, align 4, !dbg !10225
  br label %kmalloc_index.exit.i, !dbg !10225

if.end77.i.i:                                     ; preds = %if.end74.i.i
  %57 = load i64, i64* %size.addr.i11.i, align 8, !dbg !10226
  %cmp78.i.i = icmp ule i64 %57, 33554432, !dbg !10227
  br i1 %cmp78.i.i, label %if.then79.i.i, label %if.end80.i.i, !dbg !10228

if.then79.i.i:                                    ; preds = %if.end77.i.i
  store i32 25, i32* %retval.i.i, align 4, !dbg !10229
  br label %kmalloc_index.exit.i, !dbg !10229

if.end80.i.i:                                     ; preds = %if.end77.i.i
  %58 = load i64, i64* %size.addr.i11.i, align 8, !dbg !10230
  %cmp81.i.i = icmp ule i64 %58, 67108864, !dbg !10231
  br i1 %cmp81.i.i, label %if.then82.i.i, label %if.end83.i.i, !dbg !10232

if.then82.i.i:                                    ; preds = %if.end80.i.i
  store i32 26, i32* %retval.i.i, align 4, !dbg !10233
  br label %kmalloc_index.exit.i, !dbg !10233

if.end83.i.i:                                     ; preds = %if.end80.i.i
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.72, i64 0, i64 0), i32 382, i32 0, i64 12) #10, !dbg !10234, !srcloc !4792
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.unreachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 105) #10, !dbg !10235, !srcloc !4796
  unreachable, !dbg !10236

kmalloc_index.exit.i:                             ; preds = %if.then82.i.i, %if.then79.i.i, %if.then76.i.i, %if.then73.i.i, %if.then70.i.i, %if.then67.i.i, %if.then64.i.i, %if.then61.i.i, %if.then58.i.i, %if.then55.i.i, %if.then52.i.i, %if.then49.i.i, %if.then46.i.i, %if.then43.i.i, %if.then40.i.i, %if.then37.i.i, %if.then34.i.i, %if.then31.i.i, %if.then28.i.i, %if.then25.i.i, %if.then22.i.i, %if.then19.i.i, %if.then16.i.i, %if.then13.i.i, %if.then10.i.i, %if.then5.i.i, %if.then1.i.i, %if.then.i.i
  %59 = load i32, i32* %retval.i.i, align 4, !dbg !10237
  store i32 %59, i32* %index.i, align 4, !dbg !10238
  %60 = load i32, i32* %index.i, align 4, !dbg !10239
  %tobool.i = icmp ne i32 %60, 0, !dbg !10239
  br i1 %tobool.i, label %if.end4.i, label %if.then3.i, !dbg !10240

if.then3.i:                                       ; preds = %kmalloc_index.exit.i
  store i8* inttoptr (i64 16 to i8*), i8** %retval.i, align 8, !dbg !10241
  br label %kmalloc.exit, !dbg !10241

if.end4.i:                                        ; preds = %kmalloc_index.exit.i
  %61 = load i32, i32* %flags.addr.i, align 4, !dbg !10242
  store i32 %61, i32* %flags.addr.i13.i, align 4
  %62 = load i32, i32* %flags.addr.i13.i, align 4, !dbg !10243
  %and.i.i = and i32 %62, 17, !dbg !10243
  %cmp.i14.i = icmp eq i32 %and.i.i, 0, !dbg !10243
  %lnot.i.i = xor i1 %cmp.i14.i, true, !dbg !10243
  %lnot.ext.i.i = zext i1 %cmp.i14.i to i32, !dbg !10243
  %conv.i.i = sext i32 %lnot.ext.i.i to i64, !dbg !10243
  br i1 %cmp.i14.i, label %if.then.i15.i, label %if.end.i16.i, !dbg !10244

if.then.i15.i:                                    ; preds = %if.end4.i
  store i32 0, i32* %retval.i12.i, align 4, !dbg !10245
  br label %kmalloc_type.exit.i, !dbg !10245

if.end.i16.i:                                     ; preds = %if.end4.i
  %63 = load i32, i32* %flags.addr.i13.i, align 4, !dbg !10246
  %and2.i.i = and i32 %63, 1, !dbg !10247
  %tobool3.i.i = icmp ne i32 %and2.i.i, 0, !dbg !10246
  %64 = zext i1 %tobool3.i.i to i64, !dbg !10246
  %cond.i.i = select i1 %tobool3.i.i, i32 2, i32 1, !dbg !10246
  store i32 %cond.i.i, i32* %retval.i12.i, align 4, !dbg !10248
  br label %kmalloc_type.exit.i, !dbg !10248

kmalloc_type.exit.i:                              ; preds = %if.end.i16.i, %if.then.i15.i
  %65 = load i32, i32* %retval.i12.i, align 4, !dbg !10249
  %idxprom.i = zext i32 %65 to i64, !dbg !10250
  %arrayidx.i = getelementptr [3 x [14 x %struct.kmem_cache*]], [3 x [14 x %struct.kmem_cache*]]* @kmalloc_caches, i64 0, i64 %idxprom.i, !dbg !10250
  %66 = load i32, i32* %index.i, align 4, !dbg !10251
  %idxprom6.i = zext i32 %66 to i64, !dbg !10250
  %arrayidx7.i = getelementptr [14 x %struct.kmem_cache*], [14 x %struct.kmem_cache*]* %arrayidx.i, i64 0, i64 %idxprom6.i, !dbg !10250
  %67 = load %struct.kmem_cache*, %struct.kmem_cache** %arrayidx7.i, align 8, !dbg !10250
  %68 = load i32, i32* %flags.addr.i, align 4, !dbg !10252
  %69 = load i64, i64* %size.addr.i, align 8, !dbg !10253
  store %struct.kmem_cache* %67, %struct.kmem_cache** %s.addr.i.i, align 8
  store i32 %68, i32* %flags.addr.i17.i, align 4
  store i64 %69, i64* %size.addr.i18.i, align 8
  %70 = load %struct.kmem_cache*, %struct.kmem_cache** %s.addr.i.i, align 8, !dbg !10254
  %71 = load i32, i32* %flags.addr.i17.i, align 4, !dbg !10255
  %call.i19.i = call noalias i8* @kmem_cache_alloc(%struct.kmem_cache* %70, i32 %71) #12, !dbg !10256
  %ptrint.i.i = ptrtoint i8* %call.i19.i to i64, !dbg !10256
  %maskedptr.i.i = and i64 %ptrint.i.i, 7, !dbg !10256
  %maskcond.i.i = icmp eq i64 %maskedptr.i.i, 0, !dbg !10256
  call void @llvm.assume(i1 %maskcond.i.i) #10, !dbg !10256
  store i8* %call.i19.i, i8** %ret.i.i, align 8, !dbg !10057
  %72 = load %struct.kmem_cache*, %struct.kmem_cache** %s.addr.i.i, align 8, !dbg !10257
  %73 = load i8*, i8** %ret.i.i, align 8, !dbg !10258
  %74 = load i64, i64* %size.addr.i18.i, align 8, !dbg !10259
  %75 = load i32, i32* %flags.addr.i17.i, align 4, !dbg !10260
  %call1.i.i = call i8* @kasan_kmalloc(%struct.kmem_cache* %72, i8* %73, i64 %74, i32 %75) #12, !dbg !10261
  store i8* %call1.i.i, i8** %ret.i.i, align 8, !dbg !10262
  %76 = load i8*, i8** %ret.i.i, align 8, !dbg !10263
  store i8* %76, i8** %retval.i, align 8, !dbg !10264
  br label %kmalloc.exit, !dbg !10264

if.end9.i:                                        ; preds = %if.then6
  %77 = load i64, i64* %size.addr.i, align 8, !dbg !10265
  %78 = load i32, i32* %flags.addr.i, align 4, !dbg !10266
  %call10.i = call noalias i8* @__kmalloc(i64 %77, i32 %78) #12, !dbg !10267
  %ptrint.i = ptrtoint i8* %call10.i to i64, !dbg !10267
  %maskedptr.i = and i64 %ptrint.i, 7, !dbg !10267
  %maskcond.i = icmp eq i64 %maskedptr.i, 0, !dbg !10267
  call void @llvm.assume(i1 %maskcond.i) #10, !dbg !10267
  store i8* %call10.i, i8** %retval.i, align 8, !dbg !10268
  br label %kmalloc.exit, !dbg !10268

kmalloc.exit:                                     ; preds = %if.then1.i, %if.then3.i, %kmalloc_type.exit.i, %if.end9.i
  %79 = load i8*, i8** %retval.i, align 8, !dbg !10269
  store i8* %79, i8** %retval, align 8, !dbg !10270
  br label %return, !dbg !10270

if.end8:                                          ; preds = %land.lhs.true, %if.end
  %80 = load i64, i64* %bytes, align 8, !dbg !10271
  %81 = load i32, i32* %flags.addr, align 4, !dbg !10272
  %call9 = call noalias i8* @__kmalloc(i64 %80, i32 %81) #9, !dbg !10273
  %ptrint = ptrtoint i8* %call9 to i64, !dbg !10273
  %maskedptr = and i64 %ptrint, 7, !dbg !10273
  %maskcond = icmp eq i64 %maskedptr, 0, !dbg !10273
  call void @llvm.assume(i1 %maskcond), !dbg !10273
  store i8* %call9, i8** %retval, align 8, !dbg !10274
  br label %return, !dbg !10274

return:                                           ; preds = %if.end8, %kmalloc.exit, %if.then
  %82 = load i8*, i8** %retval, align 8, !dbg !10275
  ret i8* %82, !dbg !10275
}

; Function Attrs: nounwind readnone willreturn
declare i1 @llvm.is.constant.i64(i64) #6

; Function Attrs: noredzone
declare dso_local noalias i8* @__kmalloc(i64, i32) #2

; Function Attrs: nounwind willreturn
declare void @llvm.assume(i1) #7

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @hid_free_report(%struct.hid_report* %report) #0 !dbg !10276 {
entry:
  %report.addr = alloca %struct.hid_report*, align 8
  %n = alloca i32, align 4
  store %struct.hid_report* %report, %struct.hid_report** %report.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.hid_report** %report.addr, metadata !10279, metadata !DIExpression()), !dbg !10280
  call void @llvm.dbg.declare(metadata i32* %n, metadata !10281, metadata !DIExpression()), !dbg !10282
  store i32 0, i32* %n, align 4, !dbg !10283
  br label %for.cond, !dbg !10285

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %n, align 4, !dbg !10286
  %1 = load %struct.hid_report*, %struct.hid_report** %report.addr, align 8, !dbg !10288
  %maxfield = getelementptr inbounds %struct.hid_report, %struct.hid_report* %1, i32 0, i32 6, !dbg !10289
  %2 = load i32, i32* %maxfield, align 8, !dbg !10289
  %cmp = icmp ult i32 %0, %2, !dbg !10290
  br i1 %cmp, label %for.body, label %for.end, !dbg !10291

for.body:                                         ; preds = %for.cond
  %3 = load %struct.hid_report*, %struct.hid_report** %report.addr, align 8, !dbg !10292
  %field = getelementptr inbounds %struct.hid_report, %struct.hid_report* %3, i32 0, i32 5, !dbg !10293
  %4 = load i32, i32* %n, align 4, !dbg !10294
  %idxprom = zext i32 %4 to i64, !dbg !10292
  %arrayidx = getelementptr [256 x %struct.hid_field*], [256 x %struct.hid_field*]* %field, i64 0, i64 %idxprom, !dbg !10292
  %5 = load %struct.hid_field*, %struct.hid_field** %arrayidx, align 8, !dbg !10292
  %6 = bitcast %struct.hid_field* %5 to i8*, !dbg !10292
  call void @kfree(i8* %6) #9, !dbg !10295
  br label %for.inc, !dbg !10295

for.inc:                                          ; preds = %for.body
  %7 = load i32, i32* %n, align 4, !dbg !10296
  %inc = add i32 %7, 1, !dbg !10296
  store i32 %inc, i32* %n, align 4, !dbg !10296
  br label %for.cond, !dbg !10297, !llvm.loop !10298

for.end:                                          ; preds = %for.cond
  %8 = load %struct.hid_report*, %struct.hid_report** %report.addr, align 8, !dbg !10300
  %9 = bitcast %struct.hid_report* %8 to i8*, !dbg !10300
  call void @kfree(i8* %9) #9, !dbg !10301
  ret void, !dbg !10302
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @implement(%struct.hid_device* %hid, i8* %report, i32 %offset, i32 %n, i32 %value) #0 !dbg !10303 {
entry:
  %pscr_ret__.i41 = alloca %struct.task_struct*, align 8
  call void @llvm.dbg.declare(metadata %struct.task_struct** %pscr_ret__.i41, metadata !6106, metadata !DIExpression()), !dbg !10306
  %__vpp_verify.i42 = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %__vpp_verify.i42, metadata !6119, metadata !DIExpression()), !dbg !10313
  %pfo_val__.i43 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %pfo_val__.i43, metadata !6122, metadata !DIExpression()), !dbg !10314
  %tmp.i44 = alloca %struct.task_struct*, align 8
  %tmp1.i45 = alloca %struct.task_struct*, align 8
  %pscr_ret__.i = alloca %struct.task_struct*, align 8
  call void @llvm.dbg.declare(metadata %struct.task_struct** %pscr_ret__.i, metadata !6106, metadata !DIExpression()), !dbg !10315
  %__vpp_verify.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %__vpp_verify.i, metadata !6119, metadata !DIExpression()), !dbg !10318
  %pfo_val__.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %pfo_val__.i, metadata !6122, metadata !DIExpression()), !dbg !10319
  %tmp.i = alloca %struct.task_struct*, align 8
  %tmp1.i = alloca %struct.task_struct*, align 8
  %hid.addr = alloca %struct.hid_device*, align 8
  %report.addr = alloca i8*, align 8
  %offset.addr = alloca i32, align 4
  %n.addr = alloca i32, align 4
  %value.addr = alloca i32, align 4
  %m = alloca i32, align 4
  %__ret_warn_on = alloca i32, align 4
  %tmp = alloca i64, align 8
  store %struct.hid_device* %hid, %struct.hid_device** %hid.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.hid_device** %hid.addr, metadata !10320, metadata !DIExpression()), !dbg !10321
  store i8* %report, i8** %report.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %report.addr, metadata !10322, metadata !DIExpression()), !dbg !10323
  store i32 %offset, i32* %offset.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %offset.addr, metadata !10324, metadata !DIExpression()), !dbg !10325
  store i32 %n, i32* %n.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !10326, metadata !DIExpression()), !dbg !10327
  store i32 %value, i32* %value.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %value.addr, metadata !10328, metadata !DIExpression()), !dbg !10329
  %0 = load i32, i32* %n.addr, align 4, !dbg !10330
  %cmp = icmp ugt i32 %0, 32, !dbg !10330
  %lnot = xor i1 %cmp, true, !dbg !10330
  %lnot1 = xor i1 %lnot, true, !dbg !10330
  %lnot.ext = zext i1 %lnot1 to i32, !dbg !10330
  %conv = sext i32 %lnot.ext to i64, !dbg !10330
  %tobool = icmp ne i64 %conv, 0, !dbg !10330
  br i1 %tobool, label %if.then, label %if.else, !dbg !10331

if.then:                                          ; preds = %entry
  %1 = load %struct.hid_device*, %struct.hid_device** %hid.addr, align 8, !dbg !10332
  %dev = getelementptr inbounds %struct.hid_device, %struct.hid_device* %1, i32 0, i32 18, !dbg !10332
  %2 = load i32, i32* %n.addr, align 4, !dbg !10332
  store i8* null, i8** %__vpp_verify.i, align 8, !dbg !10318
  %3 = load i8*, i8** %__vpp_verify.i, align 8, !dbg !10318
  %4 = call i64 asm "movq ${1:P}, $0", "=r,im,~{dirflag},~{fpsr},~{flags}"(%struct.task_struct** @current_task) #14, !dbg !10319, !srcloc !6140
  store i64 %4, i64* %pfo_val__.i, align 8, !dbg !10319
  %5 = load i64, i64* %pfo_val__.i, align 8, !dbg !10319
  %6 = inttoptr i64 %5 to %struct.task_struct*, !dbg !10319
  store %struct.task_struct* %6, %struct.task_struct** %tmp.i, align 8, !dbg !10319
  %7 = load %struct.task_struct*, %struct.task_struct** %tmp.i, align 8, !dbg !10319
  store %struct.task_struct* %7, %struct.task_struct** %pscr_ret__.i, align 8, !dbg !10315
  %8 = load %struct.task_struct*, %struct.task_struct** %pscr_ret__.i, align 8, !dbg !10315
  store %struct.task_struct* %8, %struct.task_struct** %tmp1.i, align 8, !dbg !10315
  %9 = load %struct.task_struct*, %struct.task_struct** %tmp1.i, align 8, !dbg !10315
  %comm = getelementptr inbounds %struct.task_struct, %struct.task_struct* %9, i32 0, i32 68, !dbg !10332
  %arraydecay = getelementptr inbounds [16 x i8], [16 x i8]* %comm, i64 0, i64 0, !dbg !10332
  call void (%struct.device*, i8*, ...) @_dev_warn(%struct.device* %dev, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.11, i64 0, i64 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @__func__.implement, i64 0, i64 0), i32 %2, i8* %arraydecay) #13, !dbg !10332
  store i32 32, i32* %n.addr, align 4, !dbg !10333
  br label %if.end40, !dbg !10334

if.else:                                          ; preds = %entry
  %10 = load i32, i32* %n.addr, align 4, !dbg !10335
  %cmp2 = icmp ult i32 %10, 32, !dbg !10336
  br i1 %cmp2, label %if.then4, label %if.end39, !dbg !10337

if.then4:                                         ; preds = %if.else
  call void @llvm.dbg.declare(metadata i32* %m, metadata !10338, metadata !DIExpression()), !dbg !10339
  %11 = load i32, i32* %n.addr, align 4, !dbg !10340
  %shl = shl i32 1, %11, !dbg !10341
  %sub = sub i32 %shl, 1, !dbg !10342
  store i32 %sub, i32* %m, align 4, !dbg !10339
  %12 = load i32, i32* %value.addr, align 4, !dbg !10343
  %13 = load i32, i32* %m, align 4, !dbg !10343
  %cmp5 = icmp ugt i32 %12, %13, !dbg !10343
  %lnot7 = xor i1 %cmp5, true, !dbg !10343
  %lnot9 = xor i1 %lnot7, true, !dbg !10343
  %lnot.ext10 = zext i1 %lnot9 to i32, !dbg !10343
  %conv11 = sext i32 %lnot.ext10 to i64, !dbg !10343
  %tobool12 = icmp ne i64 %conv11, 0, !dbg !10343
  br i1 %tobool12, label %if.then13, label %if.end38, !dbg !10344

if.then13:                                        ; preds = %if.then4
  %14 = load %struct.hid_device*, %struct.hid_device** %hid.addr, align 8, !dbg !10345
  %dev14 = getelementptr inbounds %struct.hid_device, %struct.hid_device* %14, i32 0, i32 18, !dbg !10345
  %15 = load i32, i32* %value.addr, align 4, !dbg !10345
  %16 = load i32, i32* %n.addr, align 4, !dbg !10345
  store i8* null, i8** %__vpp_verify.i42, align 8, !dbg !10313
  %17 = load i8*, i8** %__vpp_verify.i42, align 8, !dbg !10313
  %18 = call i64 asm "movq ${1:P}, $0", "=r,im,~{dirflag},~{fpsr},~{flags}"(%struct.task_struct** @current_task) #14, !dbg !10314, !srcloc !6140
  store i64 %18, i64* %pfo_val__.i43, align 8, !dbg !10314
  %19 = load i64, i64* %pfo_val__.i43, align 8, !dbg !10314
  %20 = inttoptr i64 %19 to %struct.task_struct*, !dbg !10314
  store %struct.task_struct* %20, %struct.task_struct** %tmp.i44, align 8, !dbg !10314
  %21 = load %struct.task_struct*, %struct.task_struct** %tmp.i44, align 8, !dbg !10314
  store %struct.task_struct* %21, %struct.task_struct** %pscr_ret__.i41, align 8, !dbg !10306
  %22 = load %struct.task_struct*, %struct.task_struct** %pscr_ret__.i41, align 8, !dbg !10306
  store %struct.task_struct* %22, %struct.task_struct** %tmp1.i45, align 8, !dbg !10306
  %23 = load %struct.task_struct*, %struct.task_struct** %tmp1.i45, align 8, !dbg !10306
  %comm16 = getelementptr inbounds %struct.task_struct, %struct.task_struct* %23, i32 0, i32 68, !dbg !10345
  %arraydecay17 = getelementptr inbounds [16 x i8], [16 x i8]* %comm16, i64 0, i64 0, !dbg !10345
  call void (%struct.device*, i8*, ...) @_dev_warn(%struct.device* %dev14, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.71, i64 0, i64 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @__func__.implement, i64 0, i64 0), i32 %15, i32 %16, i8* %arraydecay17) #13, !dbg !10345
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on, metadata !10346, metadata !DIExpression()), !dbg !10348
  store i32 1, i32* %__ret_warn_on, align 4, !dbg !10348
  %24 = load i32, i32* %__ret_warn_on, align 4, !dbg !10349
  %tobool18 = icmp ne i32 %24, 0, !dbg !10349
  %lnot19 = xor i1 %tobool18, true, !dbg !10349
  %lnot21 = xor i1 %lnot19, true, !dbg !10349
  %lnot.ext22 = zext i1 %lnot21 to i32, !dbg !10349
  %conv23 = sext i32 %lnot.ext22 to i64, !dbg !10349
  %tobool24 = icmp ne i64 %conv23, 0, !dbg !10349
  br i1 %tobool24, label %if.then25, label %if.end, !dbg !10348

if.then25:                                        ; preds = %if.then13
  br label %do.body, !dbg !10349

do.body:                                          ; preds = %if.then25
  br label %do.body26, !dbg !10351

do.body26:                                        ; preds = %do.body
  br label %do.end, !dbg !10353

do.end:                                           ; preds = %do.body26
  br label %do.body27, !dbg !10351

do.body27:                                        ; preds = %do.end
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.5, i64 0, i64 0), i32 1429, i32 2305, i64 12) #10, !dbg !10355, !srcloc !10357
  br label %do.end28, !dbg !10355

do.end28:                                         ; preds = %do.body27
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 242) #10, !dbg !10358, !srcloc !10360
  br label %do.body29, !dbg !10351

do.body29:                                        ; preds = %do.end28
  br label %do.end30, !dbg !10361

do.end30:                                         ; preds = %do.body29
  br label %do.end31, !dbg !10351

do.end31:                                         ; preds = %do.end30
  br label %if.end, !dbg !10351

if.end:                                           ; preds = %do.end31, %if.then13
  %25 = load i32, i32* %__ret_warn_on, align 4, !dbg !10348
  %tobool32 = icmp ne i32 %25, 0, !dbg !10348
  %lnot33 = xor i1 %tobool32, true, !dbg !10348
  %lnot35 = xor i1 %lnot33, true, !dbg !10348
  %lnot.ext36 = zext i1 %lnot35 to i32, !dbg !10348
  %conv37 = sext i32 %lnot.ext36 to i64, !dbg !10348
  store i64 %conv37, i64* %tmp, align 8, !dbg !10349
  %26 = load i64, i64* %tmp, align 8, !dbg !10348
  %27 = load i32, i32* %m, align 4, !dbg !10363
  %28 = load i32, i32* %value.addr, align 4, !dbg !10364
  %and = and i32 %28, %27, !dbg !10364
  store i32 %and, i32* %value.addr, align 4, !dbg !10364
  br label %if.end38, !dbg !10365

if.end38:                                         ; preds = %if.end, %if.then4
  br label %if.end39, !dbg !10366

if.end39:                                         ; preds = %if.end38, %if.else
  br label %if.end40

if.end40:                                         ; preds = %if.end39, %if.then
  %29 = load i8*, i8** %report.addr, align 8, !dbg !10367
  %30 = load i32, i32* %offset.addr, align 4, !dbg !10368
  %31 = load i32, i32* %n.addr, align 4, !dbg !10369
  %32 = load i32, i32* %value.addr, align 4, !dbg !10370
  call void @__implement(i8* %29, i32 %30, i32 %31, i32 %32) #9, !dbg !10371
  ret void, !dbg !10372
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @__implement(i8* %report, i32 %offset, i32 %n, i32 %value) #0 !dbg !10373 {
entry:
  %report.addr = alloca i8*, align 8
  %offset.addr = alloca i32, align 4
  %n.addr = alloca i32, align 4
  %value.addr = alloca i32, align 4
  %idx = alloca i32, align 4
  %bit_shift = alloca i32, align 4
  %bits_to_set = alloca i32, align 4
  %bit_mask = alloca i8, align 1
  store i8* %report, i8** %report.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %report.addr, metadata !10376, metadata !DIExpression()), !dbg !10377
  store i32 %offset, i32* %offset.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %offset.addr, metadata !10378, metadata !DIExpression()), !dbg !10379
  store i32 %n, i32* %n.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !10380, metadata !DIExpression()), !dbg !10381
  store i32 %value, i32* %value.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %value.addr, metadata !10382, metadata !DIExpression()), !dbg !10383
  call void @llvm.dbg.declare(metadata i32* %idx, metadata !10384, metadata !DIExpression()), !dbg !10385
  %0 = load i32, i32* %offset.addr, align 4, !dbg !10386
  %div = udiv i32 %0, 8, !dbg !10387
  store i32 %div, i32* %idx, align 4, !dbg !10385
  call void @llvm.dbg.declare(metadata i32* %bit_shift, metadata !10388, metadata !DIExpression()), !dbg !10389
  %1 = load i32, i32* %offset.addr, align 4, !dbg !10390
  %rem = urem i32 %1, 8, !dbg !10391
  store i32 %rem, i32* %bit_shift, align 4, !dbg !10389
  call void @llvm.dbg.declare(metadata i32* %bits_to_set, metadata !10392, metadata !DIExpression()), !dbg !10393
  %2 = load i32, i32* %bit_shift, align 4, !dbg !10394
  %sub = sub i32 8, %2, !dbg !10395
  store i32 %sub, i32* %bits_to_set, align 4, !dbg !10393
  br label %while.cond, !dbg !10396

while.cond:                                       ; preds = %while.body, %entry
  %3 = load i32, i32* %n.addr, align 4, !dbg !10397
  %4 = load i32, i32* %bits_to_set, align 4, !dbg !10398
  %sub1 = sub i32 %3, %4, !dbg !10399
  %cmp = icmp sge i32 %sub1, 0, !dbg !10400
  br i1 %cmp, label %while.body, label %while.end, !dbg !10396

while.body:                                       ; preds = %while.cond
  %5 = load i32, i32* %bit_shift, align 4, !dbg !10401
  %shl = shl i32 255, %5, !dbg !10403
  %neg = xor i32 %shl, -1, !dbg !10404
  %6 = load i8*, i8** %report.addr, align 8, !dbg !10405
  %7 = load i32, i32* %idx, align 4, !dbg !10406
  %idxprom = zext i32 %7 to i64, !dbg !10405
  %arrayidx = getelementptr i8, i8* %6, i64 %idxprom, !dbg !10405
  %8 = load i8, i8* %arrayidx, align 1, !dbg !10407
  %conv = zext i8 %8 to i32, !dbg !10407
  %and = and i32 %conv, %neg, !dbg !10407
  %conv2 = trunc i32 %and to i8, !dbg !10407
  store i8 %conv2, i8* %arrayidx, align 1, !dbg !10407
  %9 = load i32, i32* %value.addr, align 4, !dbg !10408
  %10 = load i32, i32* %bit_shift, align 4, !dbg !10409
  %shl3 = shl i32 %9, %10, !dbg !10410
  %11 = load i8*, i8** %report.addr, align 8, !dbg !10411
  %12 = load i32, i32* %idx, align 4, !dbg !10412
  %idxprom4 = zext i32 %12 to i64, !dbg !10411
  %arrayidx5 = getelementptr i8, i8* %11, i64 %idxprom4, !dbg !10411
  %13 = load i8, i8* %arrayidx5, align 1, !dbg !10413
  %conv6 = zext i8 %13 to i32, !dbg !10413
  %or = or i32 %conv6, %shl3, !dbg !10413
  %conv7 = trunc i32 %or to i8, !dbg !10413
  store i8 %conv7, i8* %arrayidx5, align 1, !dbg !10413
  %14 = load i32, i32* %bits_to_set, align 4, !dbg !10414
  %15 = load i32, i32* %value.addr, align 4, !dbg !10415
  %shr = lshr i32 %15, %14, !dbg !10415
  store i32 %shr, i32* %value.addr, align 4, !dbg !10415
  %16 = load i32, i32* %bits_to_set, align 4, !dbg !10416
  %17 = load i32, i32* %n.addr, align 4, !dbg !10417
  %sub8 = sub i32 %17, %16, !dbg !10417
  store i32 %sub8, i32* %n.addr, align 4, !dbg !10417
  store i32 8, i32* %bits_to_set, align 4, !dbg !10418
  store i32 0, i32* %bit_shift, align 4, !dbg !10419
  %18 = load i32, i32* %idx, align 4, !dbg !10420
  %inc = add i32 %18, 1, !dbg !10420
  store i32 %inc, i32* %idx, align 4, !dbg !10420
  br label %while.cond, !dbg !10396, !llvm.loop !10421

while.end:                                        ; preds = %while.cond
  %19 = load i32, i32* %n.addr, align 4, !dbg !10423
  %tobool = icmp ne i32 %19, 0, !dbg !10423
  br i1 %tobool, label %if.then, label %if.end, !dbg !10425

if.then:                                          ; preds = %while.end
  call void @llvm.dbg.declare(metadata i8* %bit_mask, metadata !10426, metadata !DIExpression()), !dbg !10428
  %20 = load i32, i32* %n.addr, align 4, !dbg !10429
  %shl9 = shl i32 1, %20, !dbg !10430
  %sub10 = sub i32 %shl9, 1, !dbg !10431
  %conv11 = trunc i32 %sub10 to i8, !dbg !10432
  store i8 %conv11, i8* %bit_mask, align 1, !dbg !10428
  %21 = load i8, i8* %bit_mask, align 1, !dbg !10433
  %conv12 = zext i8 %21 to i32, !dbg !10433
  %22 = load i32, i32* %bit_shift, align 4, !dbg !10434
  %shl13 = shl i32 %conv12, %22, !dbg !10435
  %neg14 = xor i32 %shl13, -1, !dbg !10436
  %23 = load i8*, i8** %report.addr, align 8, !dbg !10437
  %24 = load i32, i32* %idx, align 4, !dbg !10438
  %idxprom15 = zext i32 %24 to i64, !dbg !10437
  %arrayidx16 = getelementptr i8, i8* %23, i64 %idxprom15, !dbg !10437
  %25 = load i8, i8* %arrayidx16, align 1, !dbg !10439
  %conv17 = zext i8 %25 to i32, !dbg !10439
  %and18 = and i32 %conv17, %neg14, !dbg !10439
  %conv19 = trunc i32 %and18 to i8, !dbg !10439
  store i8 %conv19, i8* %arrayidx16, align 1, !dbg !10439
  %26 = load i32, i32* %value.addr, align 4, !dbg !10440
  %27 = load i32, i32* %bit_shift, align 4, !dbg !10441
  %shl20 = shl i32 %26, %27, !dbg !10442
  %28 = load i8*, i8** %report.addr, align 8, !dbg !10443
  %29 = load i32, i32* %idx, align 4, !dbg !10444
  %idxprom21 = zext i32 %29 to i64, !dbg !10443
  %arrayidx22 = getelementptr i8, i8* %28, i64 %idxprom21, !dbg !10443
  %30 = load i8, i8* %arrayidx22, align 1, !dbg !10445
  %conv23 = zext i8 %30 to i32, !dbg !10445
  %or24 = or i32 %conv23, %shl20, !dbg !10445
  %conv25 = trunc i32 %or24 to i8, !dbg !10445
  store i8 %conv25, i8* %arrayidx22, align 1, !dbg !10445
  br label %if.end, !dbg !10446

if.end:                                           ; preds = %if.then, %while.end
  ret void, !dbg !10447
}

; Function Attrs: noinline noredzone nounwind optnone readnone sspstrong
define internal i32 @get_order(i64 %size) #8 !dbg !10448 {
entry:
  %x.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %x.addr.i, metadata !10452, metadata !DIExpression()), !dbg !10456
  %bitpos.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %bitpos.i, metadata !10458, metadata !DIExpression()), !dbg !10459
  %retval = alloca i32, align 4
  %size.addr = alloca i64, align 8
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !10460, metadata !DIExpression()), !dbg !10461
  %0 = load i64, i64* %size.addr, align 8, !dbg !10462
  %1 = call i1 @llvm.is.constant.i64(i64 %0), !dbg !10464
  br i1 %1, label %if.then, label %if.end447, !dbg !10465

if.then:                                          ; preds = %entry
  %2 = load i64, i64* %size.addr, align 8, !dbg !10466
  %tobool = icmp ne i64 %2, 0, !dbg !10466
  br i1 %tobool, label %if.end, label %if.then1, !dbg !10469

if.then1:                                         ; preds = %if.then
  store i32 52, i32* %retval, align 4, !dbg !10470
  br label %return, !dbg !10470

if.end:                                           ; preds = %if.then
  %3 = load i64, i64* %size.addr, align 8, !dbg !10471
  %cmp = icmp ult i64 %3, 4096, !dbg !10473
  br i1 %cmp, label %if.then2, label %if.end3, !dbg !10474

if.then2:                                         ; preds = %if.end
  store i32 0, i32* %retval, align 4, !dbg !10475
  br label %return, !dbg !10475

if.end3:                                          ; preds = %if.end
  %4 = load i64, i64* %size.addr, align 8, !dbg !10476
  %sub = sub i64 %4, 1, !dbg !10476
  %5 = call i1 @llvm.is.constant.i64(i64 %sub), !dbg !10476
  br i1 %5, label %cond.true, label %cond.false442, !dbg !10476

cond.true:                                        ; preds = %if.end3
  %6 = load i64, i64* %size.addr, align 8, !dbg !10476
  %sub4 = sub i64 %6, 1, !dbg !10476
  %7 = call i1 @llvm.is.constant.i64(i64 %sub4), !dbg !10476
  br i1 %7, label %cond.true5, label %cond.false439, !dbg !10476

cond.true5:                                       ; preds = %cond.true
  %8 = load i64, i64* %size.addr, align 8, !dbg !10476
  %sub6 = sub i64 %8, 1, !dbg !10476
  %cmp7 = icmp ult i64 %sub6, 2, !dbg !10476
  br i1 %cmp7, label %cond.true8, label %cond.false, !dbg !10476

cond.true8:                                       ; preds = %cond.true5
  br label %cond.end437, !dbg !10476

cond.false:                                       ; preds = %cond.true5
  %9 = load i64, i64* %size.addr, align 8, !dbg !10476
  %sub9 = sub i64 %9, 1, !dbg !10476
  %and = and i64 %sub9, -9223372036854775808, !dbg !10476
  %tobool10 = icmp ne i64 %and, 0, !dbg !10476
  br i1 %tobool10, label %cond.true11, label %cond.false12, !dbg !10476

cond.true11:                                      ; preds = %cond.false
  br label %cond.end435, !dbg !10476

cond.false12:                                     ; preds = %cond.false
  %10 = load i64, i64* %size.addr, align 8, !dbg !10476
  %sub13 = sub i64 %10, 1, !dbg !10476
  %and14 = and i64 %sub13, 4611686018427387904, !dbg !10476
  %tobool15 = icmp ne i64 %and14, 0, !dbg !10476
  br i1 %tobool15, label %cond.true16, label %cond.false17, !dbg !10476

cond.true16:                                      ; preds = %cond.false12
  br label %cond.end433, !dbg !10476

cond.false17:                                     ; preds = %cond.false12
  %11 = load i64, i64* %size.addr, align 8, !dbg !10476
  %sub18 = sub i64 %11, 1, !dbg !10476
  %and19 = and i64 %sub18, 2305843009213693952, !dbg !10476
  %tobool20 = icmp ne i64 %and19, 0, !dbg !10476
  br i1 %tobool20, label %cond.true21, label %cond.false22, !dbg !10476

cond.true21:                                      ; preds = %cond.false17
  br label %cond.end431, !dbg !10476

cond.false22:                                     ; preds = %cond.false17
  %12 = load i64, i64* %size.addr, align 8, !dbg !10476
  %sub23 = sub i64 %12, 1, !dbg !10476
  %and24 = and i64 %sub23, 1152921504606846976, !dbg !10476
  %tobool25 = icmp ne i64 %and24, 0, !dbg !10476
  br i1 %tobool25, label %cond.true26, label %cond.false27, !dbg !10476

cond.true26:                                      ; preds = %cond.false22
  br label %cond.end429, !dbg !10476

cond.false27:                                     ; preds = %cond.false22
  %13 = load i64, i64* %size.addr, align 8, !dbg !10476
  %sub28 = sub i64 %13, 1, !dbg !10476
  %and29 = and i64 %sub28, 576460752303423488, !dbg !10476
  %tobool30 = icmp ne i64 %and29, 0, !dbg !10476
  br i1 %tobool30, label %cond.true31, label %cond.false32, !dbg !10476

cond.true31:                                      ; preds = %cond.false27
  br label %cond.end427, !dbg !10476

cond.false32:                                     ; preds = %cond.false27
  %14 = load i64, i64* %size.addr, align 8, !dbg !10476
  %sub33 = sub i64 %14, 1, !dbg !10476
  %and34 = and i64 %sub33, 288230376151711744, !dbg !10476
  %tobool35 = icmp ne i64 %and34, 0, !dbg !10476
  br i1 %tobool35, label %cond.true36, label %cond.false37, !dbg !10476

cond.true36:                                      ; preds = %cond.false32
  br label %cond.end425, !dbg !10476

cond.false37:                                     ; preds = %cond.false32
  %15 = load i64, i64* %size.addr, align 8, !dbg !10476
  %sub38 = sub i64 %15, 1, !dbg !10476
  %and39 = and i64 %sub38, 144115188075855872, !dbg !10476
  %tobool40 = icmp ne i64 %and39, 0, !dbg !10476
  br i1 %tobool40, label %cond.true41, label %cond.false42, !dbg !10476

cond.true41:                                      ; preds = %cond.false37
  br label %cond.end423, !dbg !10476

cond.false42:                                     ; preds = %cond.false37
  %16 = load i64, i64* %size.addr, align 8, !dbg !10476
  %sub43 = sub i64 %16, 1, !dbg !10476
  %and44 = and i64 %sub43, 72057594037927936, !dbg !10476
  %tobool45 = icmp ne i64 %and44, 0, !dbg !10476
  br i1 %tobool45, label %cond.true46, label %cond.false47, !dbg !10476

cond.true46:                                      ; preds = %cond.false42
  br label %cond.end421, !dbg !10476

cond.false47:                                     ; preds = %cond.false42
  %17 = load i64, i64* %size.addr, align 8, !dbg !10476
  %sub48 = sub i64 %17, 1, !dbg !10476
  %and49 = and i64 %sub48, 36028797018963968, !dbg !10476
  %tobool50 = icmp ne i64 %and49, 0, !dbg !10476
  br i1 %tobool50, label %cond.true51, label %cond.false52, !dbg !10476

cond.true51:                                      ; preds = %cond.false47
  br label %cond.end419, !dbg !10476

cond.false52:                                     ; preds = %cond.false47
  %18 = load i64, i64* %size.addr, align 8, !dbg !10476
  %sub53 = sub i64 %18, 1, !dbg !10476
  %and54 = and i64 %sub53, 18014398509481984, !dbg !10476
  %tobool55 = icmp ne i64 %and54, 0, !dbg !10476
  br i1 %tobool55, label %cond.true56, label %cond.false57, !dbg !10476

cond.true56:                                      ; preds = %cond.false52
  br label %cond.end417, !dbg !10476

cond.false57:                                     ; preds = %cond.false52
  %19 = load i64, i64* %size.addr, align 8, !dbg !10476
  %sub58 = sub i64 %19, 1, !dbg !10476
  %and59 = and i64 %sub58, 9007199254740992, !dbg !10476
  %tobool60 = icmp ne i64 %and59, 0, !dbg !10476
  br i1 %tobool60, label %cond.true61, label %cond.false62, !dbg !10476

cond.true61:                                      ; preds = %cond.false57
  br label %cond.end415, !dbg !10476

cond.false62:                                     ; preds = %cond.false57
  %20 = load i64, i64* %size.addr, align 8, !dbg !10476
  %sub63 = sub i64 %20, 1, !dbg !10476
  %and64 = and i64 %sub63, 4503599627370496, !dbg !10476
  %tobool65 = icmp ne i64 %and64, 0, !dbg !10476
  br i1 %tobool65, label %cond.true66, label %cond.false67, !dbg !10476

cond.true66:                                      ; preds = %cond.false62
  br label %cond.end413, !dbg !10476

cond.false67:                                     ; preds = %cond.false62
  %21 = load i64, i64* %size.addr, align 8, !dbg !10476
  %sub68 = sub i64 %21, 1, !dbg !10476
  %and69 = and i64 %sub68, 2251799813685248, !dbg !10476
  %tobool70 = icmp ne i64 %and69, 0, !dbg !10476
  br i1 %tobool70, label %cond.true71, label %cond.false72, !dbg !10476

cond.true71:                                      ; preds = %cond.false67
  br label %cond.end411, !dbg !10476

cond.false72:                                     ; preds = %cond.false67
  %22 = load i64, i64* %size.addr, align 8, !dbg !10476
  %sub73 = sub i64 %22, 1, !dbg !10476
  %and74 = and i64 %sub73, 1125899906842624, !dbg !10476
  %tobool75 = icmp ne i64 %and74, 0, !dbg !10476
  br i1 %tobool75, label %cond.true76, label %cond.false77, !dbg !10476

cond.true76:                                      ; preds = %cond.false72
  br label %cond.end409, !dbg !10476

cond.false77:                                     ; preds = %cond.false72
  %23 = load i64, i64* %size.addr, align 8, !dbg !10476
  %sub78 = sub i64 %23, 1, !dbg !10476
  %and79 = and i64 %sub78, 562949953421312, !dbg !10476
  %tobool80 = icmp ne i64 %and79, 0, !dbg !10476
  br i1 %tobool80, label %cond.true81, label %cond.false82, !dbg !10476

cond.true81:                                      ; preds = %cond.false77
  br label %cond.end407, !dbg !10476

cond.false82:                                     ; preds = %cond.false77
  %24 = load i64, i64* %size.addr, align 8, !dbg !10476
  %sub83 = sub i64 %24, 1, !dbg !10476
  %and84 = and i64 %sub83, 281474976710656, !dbg !10476
  %tobool85 = icmp ne i64 %and84, 0, !dbg !10476
  br i1 %tobool85, label %cond.true86, label %cond.false87, !dbg !10476

cond.true86:                                      ; preds = %cond.false82
  br label %cond.end405, !dbg !10476

cond.false87:                                     ; preds = %cond.false82
  %25 = load i64, i64* %size.addr, align 8, !dbg !10476
  %sub88 = sub i64 %25, 1, !dbg !10476
  %and89 = and i64 %sub88, 140737488355328, !dbg !10476
  %tobool90 = icmp ne i64 %and89, 0, !dbg !10476
  br i1 %tobool90, label %cond.true91, label %cond.false92, !dbg !10476

cond.true91:                                      ; preds = %cond.false87
  br label %cond.end403, !dbg !10476

cond.false92:                                     ; preds = %cond.false87
  %26 = load i64, i64* %size.addr, align 8, !dbg !10476
  %sub93 = sub i64 %26, 1, !dbg !10476
  %and94 = and i64 %sub93, 70368744177664, !dbg !10476
  %tobool95 = icmp ne i64 %and94, 0, !dbg !10476
  br i1 %tobool95, label %cond.true96, label %cond.false97, !dbg !10476

cond.true96:                                      ; preds = %cond.false92
  br label %cond.end401, !dbg !10476

cond.false97:                                     ; preds = %cond.false92
  %27 = load i64, i64* %size.addr, align 8, !dbg !10476
  %sub98 = sub i64 %27, 1, !dbg !10476
  %and99 = and i64 %sub98, 35184372088832, !dbg !10476
  %tobool100 = icmp ne i64 %and99, 0, !dbg !10476
  br i1 %tobool100, label %cond.true101, label %cond.false102, !dbg !10476

cond.true101:                                     ; preds = %cond.false97
  br label %cond.end399, !dbg !10476

cond.false102:                                    ; preds = %cond.false97
  %28 = load i64, i64* %size.addr, align 8, !dbg !10476
  %sub103 = sub i64 %28, 1, !dbg !10476
  %and104 = and i64 %sub103, 17592186044416, !dbg !10476
  %tobool105 = icmp ne i64 %and104, 0, !dbg !10476
  br i1 %tobool105, label %cond.true106, label %cond.false107, !dbg !10476

cond.true106:                                     ; preds = %cond.false102
  br label %cond.end397, !dbg !10476

cond.false107:                                    ; preds = %cond.false102
  %29 = load i64, i64* %size.addr, align 8, !dbg !10476
  %sub108 = sub i64 %29, 1, !dbg !10476
  %and109 = and i64 %sub108, 8796093022208, !dbg !10476
  %tobool110 = icmp ne i64 %and109, 0, !dbg !10476
  br i1 %tobool110, label %cond.true111, label %cond.false112, !dbg !10476

cond.true111:                                     ; preds = %cond.false107
  br label %cond.end395, !dbg !10476

cond.false112:                                    ; preds = %cond.false107
  %30 = load i64, i64* %size.addr, align 8, !dbg !10476
  %sub113 = sub i64 %30, 1, !dbg !10476
  %and114 = and i64 %sub113, 4398046511104, !dbg !10476
  %tobool115 = icmp ne i64 %and114, 0, !dbg !10476
  br i1 %tobool115, label %cond.true116, label %cond.false117, !dbg !10476

cond.true116:                                     ; preds = %cond.false112
  br label %cond.end393, !dbg !10476

cond.false117:                                    ; preds = %cond.false112
  %31 = load i64, i64* %size.addr, align 8, !dbg !10476
  %sub118 = sub i64 %31, 1, !dbg !10476
  %and119 = and i64 %sub118, 2199023255552, !dbg !10476
  %tobool120 = icmp ne i64 %and119, 0, !dbg !10476
  br i1 %tobool120, label %cond.true121, label %cond.false122, !dbg !10476

cond.true121:                                     ; preds = %cond.false117
  br label %cond.end391, !dbg !10476

cond.false122:                                    ; preds = %cond.false117
  %32 = load i64, i64* %size.addr, align 8, !dbg !10476
  %sub123 = sub i64 %32, 1, !dbg !10476
  %and124 = and i64 %sub123, 1099511627776, !dbg !10476
  %tobool125 = icmp ne i64 %and124, 0, !dbg !10476
  br i1 %tobool125, label %cond.true126, label %cond.false127, !dbg !10476

cond.true126:                                     ; preds = %cond.false122
  br label %cond.end389, !dbg !10476

cond.false127:                                    ; preds = %cond.false122
  %33 = load i64, i64* %size.addr, align 8, !dbg !10476
  %sub128 = sub i64 %33, 1, !dbg !10476
  %and129 = and i64 %sub128, 549755813888, !dbg !10476
  %tobool130 = icmp ne i64 %and129, 0, !dbg !10476
  br i1 %tobool130, label %cond.true131, label %cond.false132, !dbg !10476

cond.true131:                                     ; preds = %cond.false127
  br label %cond.end387, !dbg !10476

cond.false132:                                    ; preds = %cond.false127
  %34 = load i64, i64* %size.addr, align 8, !dbg !10476
  %sub133 = sub i64 %34, 1, !dbg !10476
  %and134 = and i64 %sub133, 274877906944, !dbg !10476
  %tobool135 = icmp ne i64 %and134, 0, !dbg !10476
  br i1 %tobool135, label %cond.true136, label %cond.false137, !dbg !10476

cond.true136:                                     ; preds = %cond.false132
  br label %cond.end385, !dbg !10476

cond.false137:                                    ; preds = %cond.false132
  %35 = load i64, i64* %size.addr, align 8, !dbg !10476
  %sub138 = sub i64 %35, 1, !dbg !10476
  %and139 = and i64 %sub138, 137438953472, !dbg !10476
  %tobool140 = icmp ne i64 %and139, 0, !dbg !10476
  br i1 %tobool140, label %cond.true141, label %cond.false142, !dbg !10476

cond.true141:                                     ; preds = %cond.false137
  br label %cond.end383, !dbg !10476

cond.false142:                                    ; preds = %cond.false137
  %36 = load i64, i64* %size.addr, align 8, !dbg !10476
  %sub143 = sub i64 %36, 1, !dbg !10476
  %and144 = and i64 %sub143, 68719476736, !dbg !10476
  %tobool145 = icmp ne i64 %and144, 0, !dbg !10476
  br i1 %tobool145, label %cond.true146, label %cond.false147, !dbg !10476

cond.true146:                                     ; preds = %cond.false142
  br label %cond.end381, !dbg !10476

cond.false147:                                    ; preds = %cond.false142
  %37 = load i64, i64* %size.addr, align 8, !dbg !10476
  %sub148 = sub i64 %37, 1, !dbg !10476
  %and149 = and i64 %sub148, 34359738368, !dbg !10476
  %tobool150 = icmp ne i64 %and149, 0, !dbg !10476
  br i1 %tobool150, label %cond.true151, label %cond.false152, !dbg !10476

cond.true151:                                     ; preds = %cond.false147
  br label %cond.end379, !dbg !10476

cond.false152:                                    ; preds = %cond.false147
  %38 = load i64, i64* %size.addr, align 8, !dbg !10476
  %sub153 = sub i64 %38, 1, !dbg !10476
  %and154 = and i64 %sub153, 17179869184, !dbg !10476
  %tobool155 = icmp ne i64 %and154, 0, !dbg !10476
  br i1 %tobool155, label %cond.true156, label %cond.false157, !dbg !10476

cond.true156:                                     ; preds = %cond.false152
  br label %cond.end377, !dbg !10476

cond.false157:                                    ; preds = %cond.false152
  %39 = load i64, i64* %size.addr, align 8, !dbg !10476
  %sub158 = sub i64 %39, 1, !dbg !10476
  %and159 = and i64 %sub158, 8589934592, !dbg !10476
  %tobool160 = icmp ne i64 %and159, 0, !dbg !10476
  br i1 %tobool160, label %cond.true161, label %cond.false162, !dbg !10476

cond.true161:                                     ; preds = %cond.false157
  br label %cond.end375, !dbg !10476

cond.false162:                                    ; preds = %cond.false157
  %40 = load i64, i64* %size.addr, align 8, !dbg !10476
  %sub163 = sub i64 %40, 1, !dbg !10476
  %and164 = and i64 %sub163, 4294967296, !dbg !10476
  %tobool165 = icmp ne i64 %and164, 0, !dbg !10476
  br i1 %tobool165, label %cond.true166, label %cond.false167, !dbg !10476

cond.true166:                                     ; preds = %cond.false162
  br label %cond.end373, !dbg !10476

cond.false167:                                    ; preds = %cond.false162
  %41 = load i64, i64* %size.addr, align 8, !dbg !10476
  %sub168 = sub i64 %41, 1, !dbg !10476
  %and169 = and i64 %sub168, 2147483648, !dbg !10476
  %tobool170 = icmp ne i64 %and169, 0, !dbg !10476
  br i1 %tobool170, label %cond.true171, label %cond.false172, !dbg !10476

cond.true171:                                     ; preds = %cond.false167
  br label %cond.end371, !dbg !10476

cond.false172:                                    ; preds = %cond.false167
  %42 = load i64, i64* %size.addr, align 8, !dbg !10476
  %sub173 = sub i64 %42, 1, !dbg !10476
  %and174 = and i64 %sub173, 1073741824, !dbg !10476
  %tobool175 = icmp ne i64 %and174, 0, !dbg !10476
  br i1 %tobool175, label %cond.true176, label %cond.false177, !dbg !10476

cond.true176:                                     ; preds = %cond.false172
  br label %cond.end369, !dbg !10476

cond.false177:                                    ; preds = %cond.false172
  %43 = load i64, i64* %size.addr, align 8, !dbg !10476
  %sub178 = sub i64 %43, 1, !dbg !10476
  %and179 = and i64 %sub178, 536870912, !dbg !10476
  %tobool180 = icmp ne i64 %and179, 0, !dbg !10476
  br i1 %tobool180, label %cond.true181, label %cond.false182, !dbg !10476

cond.true181:                                     ; preds = %cond.false177
  br label %cond.end367, !dbg !10476

cond.false182:                                    ; preds = %cond.false177
  %44 = load i64, i64* %size.addr, align 8, !dbg !10476
  %sub183 = sub i64 %44, 1, !dbg !10476
  %and184 = and i64 %sub183, 268435456, !dbg !10476
  %tobool185 = icmp ne i64 %and184, 0, !dbg !10476
  br i1 %tobool185, label %cond.true186, label %cond.false187, !dbg !10476

cond.true186:                                     ; preds = %cond.false182
  br label %cond.end365, !dbg !10476

cond.false187:                                    ; preds = %cond.false182
  %45 = load i64, i64* %size.addr, align 8, !dbg !10476
  %sub188 = sub i64 %45, 1, !dbg !10476
  %and189 = and i64 %sub188, 134217728, !dbg !10476
  %tobool190 = icmp ne i64 %and189, 0, !dbg !10476
  br i1 %tobool190, label %cond.true191, label %cond.false192, !dbg !10476

cond.true191:                                     ; preds = %cond.false187
  br label %cond.end363, !dbg !10476

cond.false192:                                    ; preds = %cond.false187
  %46 = load i64, i64* %size.addr, align 8, !dbg !10476
  %sub193 = sub i64 %46, 1, !dbg !10476
  %and194 = and i64 %sub193, 67108864, !dbg !10476
  %tobool195 = icmp ne i64 %and194, 0, !dbg !10476
  br i1 %tobool195, label %cond.true196, label %cond.false197, !dbg !10476

cond.true196:                                     ; preds = %cond.false192
  br label %cond.end361, !dbg !10476

cond.false197:                                    ; preds = %cond.false192
  %47 = load i64, i64* %size.addr, align 8, !dbg !10476
  %sub198 = sub i64 %47, 1, !dbg !10476
  %and199 = and i64 %sub198, 33554432, !dbg !10476
  %tobool200 = icmp ne i64 %and199, 0, !dbg !10476
  br i1 %tobool200, label %cond.true201, label %cond.false202, !dbg !10476

cond.true201:                                     ; preds = %cond.false197
  br label %cond.end359, !dbg !10476

cond.false202:                                    ; preds = %cond.false197
  %48 = load i64, i64* %size.addr, align 8, !dbg !10476
  %sub203 = sub i64 %48, 1, !dbg !10476
  %and204 = and i64 %sub203, 16777216, !dbg !10476
  %tobool205 = icmp ne i64 %and204, 0, !dbg !10476
  br i1 %tobool205, label %cond.true206, label %cond.false207, !dbg !10476

cond.true206:                                     ; preds = %cond.false202
  br label %cond.end357, !dbg !10476

cond.false207:                                    ; preds = %cond.false202
  %49 = load i64, i64* %size.addr, align 8, !dbg !10476
  %sub208 = sub i64 %49, 1, !dbg !10476
  %and209 = and i64 %sub208, 8388608, !dbg !10476
  %tobool210 = icmp ne i64 %and209, 0, !dbg !10476
  br i1 %tobool210, label %cond.true211, label %cond.false212, !dbg !10476

cond.true211:                                     ; preds = %cond.false207
  br label %cond.end355, !dbg !10476

cond.false212:                                    ; preds = %cond.false207
  %50 = load i64, i64* %size.addr, align 8, !dbg !10476
  %sub213 = sub i64 %50, 1, !dbg !10476
  %and214 = and i64 %sub213, 4194304, !dbg !10476
  %tobool215 = icmp ne i64 %and214, 0, !dbg !10476
  br i1 %tobool215, label %cond.true216, label %cond.false217, !dbg !10476

cond.true216:                                     ; preds = %cond.false212
  br label %cond.end353, !dbg !10476

cond.false217:                                    ; preds = %cond.false212
  %51 = load i64, i64* %size.addr, align 8, !dbg !10476
  %sub218 = sub i64 %51, 1, !dbg !10476
  %and219 = and i64 %sub218, 2097152, !dbg !10476
  %tobool220 = icmp ne i64 %and219, 0, !dbg !10476
  br i1 %tobool220, label %cond.true221, label %cond.false222, !dbg !10476

cond.true221:                                     ; preds = %cond.false217
  br label %cond.end351, !dbg !10476

cond.false222:                                    ; preds = %cond.false217
  %52 = load i64, i64* %size.addr, align 8, !dbg !10476
  %sub223 = sub i64 %52, 1, !dbg !10476
  %and224 = and i64 %sub223, 1048576, !dbg !10476
  %tobool225 = icmp ne i64 %and224, 0, !dbg !10476
  br i1 %tobool225, label %cond.true226, label %cond.false227, !dbg !10476

cond.true226:                                     ; preds = %cond.false222
  br label %cond.end349, !dbg !10476

cond.false227:                                    ; preds = %cond.false222
  %53 = load i64, i64* %size.addr, align 8, !dbg !10476
  %sub228 = sub i64 %53, 1, !dbg !10476
  %and229 = and i64 %sub228, 524288, !dbg !10476
  %tobool230 = icmp ne i64 %and229, 0, !dbg !10476
  br i1 %tobool230, label %cond.true231, label %cond.false232, !dbg !10476

cond.true231:                                     ; preds = %cond.false227
  br label %cond.end347, !dbg !10476

cond.false232:                                    ; preds = %cond.false227
  %54 = load i64, i64* %size.addr, align 8, !dbg !10476
  %sub233 = sub i64 %54, 1, !dbg !10476
  %and234 = and i64 %sub233, 262144, !dbg !10476
  %tobool235 = icmp ne i64 %and234, 0, !dbg !10476
  br i1 %tobool235, label %cond.true236, label %cond.false237, !dbg !10476

cond.true236:                                     ; preds = %cond.false232
  br label %cond.end345, !dbg !10476

cond.false237:                                    ; preds = %cond.false232
  %55 = load i64, i64* %size.addr, align 8, !dbg !10476
  %sub238 = sub i64 %55, 1, !dbg !10476
  %and239 = and i64 %sub238, 131072, !dbg !10476
  %tobool240 = icmp ne i64 %and239, 0, !dbg !10476
  br i1 %tobool240, label %cond.true241, label %cond.false242, !dbg !10476

cond.true241:                                     ; preds = %cond.false237
  br label %cond.end343, !dbg !10476

cond.false242:                                    ; preds = %cond.false237
  %56 = load i64, i64* %size.addr, align 8, !dbg !10476
  %sub243 = sub i64 %56, 1, !dbg !10476
  %and244 = and i64 %sub243, 65536, !dbg !10476
  %tobool245 = icmp ne i64 %and244, 0, !dbg !10476
  br i1 %tobool245, label %cond.true246, label %cond.false247, !dbg !10476

cond.true246:                                     ; preds = %cond.false242
  br label %cond.end341, !dbg !10476

cond.false247:                                    ; preds = %cond.false242
  %57 = load i64, i64* %size.addr, align 8, !dbg !10476
  %sub248 = sub i64 %57, 1, !dbg !10476
  %and249 = and i64 %sub248, 32768, !dbg !10476
  %tobool250 = icmp ne i64 %and249, 0, !dbg !10476
  br i1 %tobool250, label %cond.true251, label %cond.false252, !dbg !10476

cond.true251:                                     ; preds = %cond.false247
  br label %cond.end339, !dbg !10476

cond.false252:                                    ; preds = %cond.false247
  %58 = load i64, i64* %size.addr, align 8, !dbg !10476
  %sub253 = sub i64 %58, 1, !dbg !10476
  %and254 = and i64 %sub253, 16384, !dbg !10476
  %tobool255 = icmp ne i64 %and254, 0, !dbg !10476
  br i1 %tobool255, label %cond.true256, label %cond.false257, !dbg !10476

cond.true256:                                     ; preds = %cond.false252
  br label %cond.end337, !dbg !10476

cond.false257:                                    ; preds = %cond.false252
  %59 = load i64, i64* %size.addr, align 8, !dbg !10476
  %sub258 = sub i64 %59, 1, !dbg !10476
  %and259 = and i64 %sub258, 8192, !dbg !10476
  %tobool260 = icmp ne i64 %and259, 0, !dbg !10476
  br i1 %tobool260, label %cond.true261, label %cond.false262, !dbg !10476

cond.true261:                                     ; preds = %cond.false257
  br label %cond.end335, !dbg !10476

cond.false262:                                    ; preds = %cond.false257
  %60 = load i64, i64* %size.addr, align 8, !dbg !10476
  %sub263 = sub i64 %60, 1, !dbg !10476
  %and264 = and i64 %sub263, 4096, !dbg !10476
  %tobool265 = icmp ne i64 %and264, 0, !dbg !10476
  br i1 %tobool265, label %cond.true266, label %cond.false267, !dbg !10476

cond.true266:                                     ; preds = %cond.false262
  br label %cond.end333, !dbg !10476

cond.false267:                                    ; preds = %cond.false262
  %61 = load i64, i64* %size.addr, align 8, !dbg !10476
  %sub268 = sub i64 %61, 1, !dbg !10476
  %and269 = and i64 %sub268, 2048, !dbg !10476
  %tobool270 = icmp ne i64 %and269, 0, !dbg !10476
  br i1 %tobool270, label %cond.true271, label %cond.false272, !dbg !10476

cond.true271:                                     ; preds = %cond.false267
  br label %cond.end331, !dbg !10476

cond.false272:                                    ; preds = %cond.false267
  %62 = load i64, i64* %size.addr, align 8, !dbg !10476
  %sub273 = sub i64 %62, 1, !dbg !10476
  %and274 = and i64 %sub273, 1024, !dbg !10476
  %tobool275 = icmp ne i64 %and274, 0, !dbg !10476
  br i1 %tobool275, label %cond.true276, label %cond.false277, !dbg !10476

cond.true276:                                     ; preds = %cond.false272
  br label %cond.end329, !dbg !10476

cond.false277:                                    ; preds = %cond.false272
  %63 = load i64, i64* %size.addr, align 8, !dbg !10476
  %sub278 = sub i64 %63, 1, !dbg !10476
  %and279 = and i64 %sub278, 512, !dbg !10476
  %tobool280 = icmp ne i64 %and279, 0, !dbg !10476
  br i1 %tobool280, label %cond.true281, label %cond.false282, !dbg !10476

cond.true281:                                     ; preds = %cond.false277
  br label %cond.end327, !dbg !10476

cond.false282:                                    ; preds = %cond.false277
  %64 = load i64, i64* %size.addr, align 8, !dbg !10476
  %sub283 = sub i64 %64, 1, !dbg !10476
  %and284 = and i64 %sub283, 256, !dbg !10476
  %tobool285 = icmp ne i64 %and284, 0, !dbg !10476
  br i1 %tobool285, label %cond.true286, label %cond.false287, !dbg !10476

cond.true286:                                     ; preds = %cond.false282
  br label %cond.end325, !dbg !10476

cond.false287:                                    ; preds = %cond.false282
  %65 = load i64, i64* %size.addr, align 8, !dbg !10476
  %sub288 = sub i64 %65, 1, !dbg !10476
  %and289 = and i64 %sub288, 128, !dbg !10476
  %tobool290 = icmp ne i64 %and289, 0, !dbg !10476
  br i1 %tobool290, label %cond.true291, label %cond.false292, !dbg !10476

cond.true291:                                     ; preds = %cond.false287
  br label %cond.end323, !dbg !10476

cond.false292:                                    ; preds = %cond.false287
  %66 = load i64, i64* %size.addr, align 8, !dbg !10476
  %sub293 = sub i64 %66, 1, !dbg !10476
  %and294 = and i64 %sub293, 64, !dbg !10476
  %tobool295 = icmp ne i64 %and294, 0, !dbg !10476
  br i1 %tobool295, label %cond.true296, label %cond.false297, !dbg !10476

cond.true296:                                     ; preds = %cond.false292
  br label %cond.end321, !dbg !10476

cond.false297:                                    ; preds = %cond.false292
  %67 = load i64, i64* %size.addr, align 8, !dbg !10476
  %sub298 = sub i64 %67, 1, !dbg !10476
  %and299 = and i64 %sub298, 32, !dbg !10476
  %tobool300 = icmp ne i64 %and299, 0, !dbg !10476
  br i1 %tobool300, label %cond.true301, label %cond.false302, !dbg !10476

cond.true301:                                     ; preds = %cond.false297
  br label %cond.end319, !dbg !10476

cond.false302:                                    ; preds = %cond.false297
  %68 = load i64, i64* %size.addr, align 8, !dbg !10476
  %sub303 = sub i64 %68, 1, !dbg !10476
  %and304 = and i64 %sub303, 16, !dbg !10476
  %tobool305 = icmp ne i64 %and304, 0, !dbg !10476
  br i1 %tobool305, label %cond.true306, label %cond.false307, !dbg !10476

cond.true306:                                     ; preds = %cond.false302
  br label %cond.end317, !dbg !10476

cond.false307:                                    ; preds = %cond.false302
  %69 = load i64, i64* %size.addr, align 8, !dbg !10476
  %sub308 = sub i64 %69, 1, !dbg !10476
  %and309 = and i64 %sub308, 8, !dbg !10476
  %tobool310 = icmp ne i64 %and309, 0, !dbg !10476
  br i1 %tobool310, label %cond.true311, label %cond.false312, !dbg !10476

cond.true311:                                     ; preds = %cond.false307
  br label %cond.end, !dbg !10476

cond.false312:                                    ; preds = %cond.false307
  %70 = load i64, i64* %size.addr, align 8, !dbg !10476
  %sub313 = sub i64 %70, 1, !dbg !10476
  %and314 = and i64 %sub313, 4, !dbg !10476
  %tobool315 = icmp ne i64 %and314, 0, !dbg !10476
  %71 = zext i1 %tobool315 to i64, !dbg !10476
  %cond = select i1 %tobool315, i32 2, i32 1, !dbg !10476
  br label %cond.end, !dbg !10476

cond.end:                                         ; preds = %cond.false312, %cond.true311
  %cond316 = phi i32 [ 3, %cond.true311 ], [ %cond, %cond.false312 ], !dbg !10476
  br label %cond.end317, !dbg !10476

cond.end317:                                      ; preds = %cond.end, %cond.true306
  %cond318 = phi i32 [ 4, %cond.true306 ], [ %cond316, %cond.end ], !dbg !10476
  br label %cond.end319, !dbg !10476

cond.end319:                                      ; preds = %cond.end317, %cond.true301
  %cond320 = phi i32 [ 5, %cond.true301 ], [ %cond318, %cond.end317 ], !dbg !10476
  br label %cond.end321, !dbg !10476

cond.end321:                                      ; preds = %cond.end319, %cond.true296
  %cond322 = phi i32 [ 6, %cond.true296 ], [ %cond320, %cond.end319 ], !dbg !10476
  br label %cond.end323, !dbg !10476

cond.end323:                                      ; preds = %cond.end321, %cond.true291
  %cond324 = phi i32 [ 7, %cond.true291 ], [ %cond322, %cond.end321 ], !dbg !10476
  br label %cond.end325, !dbg !10476

cond.end325:                                      ; preds = %cond.end323, %cond.true286
  %cond326 = phi i32 [ 8, %cond.true286 ], [ %cond324, %cond.end323 ], !dbg !10476
  br label %cond.end327, !dbg !10476

cond.end327:                                      ; preds = %cond.end325, %cond.true281
  %cond328 = phi i32 [ 9, %cond.true281 ], [ %cond326, %cond.end325 ], !dbg !10476
  br label %cond.end329, !dbg !10476

cond.end329:                                      ; preds = %cond.end327, %cond.true276
  %cond330 = phi i32 [ 10, %cond.true276 ], [ %cond328, %cond.end327 ], !dbg !10476
  br label %cond.end331, !dbg !10476

cond.end331:                                      ; preds = %cond.end329, %cond.true271
  %cond332 = phi i32 [ 11, %cond.true271 ], [ %cond330, %cond.end329 ], !dbg !10476
  br label %cond.end333, !dbg !10476

cond.end333:                                      ; preds = %cond.end331, %cond.true266
  %cond334 = phi i32 [ 12, %cond.true266 ], [ %cond332, %cond.end331 ], !dbg !10476
  br label %cond.end335, !dbg !10476

cond.end335:                                      ; preds = %cond.end333, %cond.true261
  %cond336 = phi i32 [ 13, %cond.true261 ], [ %cond334, %cond.end333 ], !dbg !10476
  br label %cond.end337, !dbg !10476

cond.end337:                                      ; preds = %cond.end335, %cond.true256
  %cond338 = phi i32 [ 14, %cond.true256 ], [ %cond336, %cond.end335 ], !dbg !10476
  br label %cond.end339, !dbg !10476

cond.end339:                                      ; preds = %cond.end337, %cond.true251
  %cond340 = phi i32 [ 15, %cond.true251 ], [ %cond338, %cond.end337 ], !dbg !10476
  br label %cond.end341, !dbg !10476

cond.end341:                                      ; preds = %cond.end339, %cond.true246
  %cond342 = phi i32 [ 16, %cond.true246 ], [ %cond340, %cond.end339 ], !dbg !10476
  br label %cond.end343, !dbg !10476

cond.end343:                                      ; preds = %cond.end341, %cond.true241
  %cond344 = phi i32 [ 17, %cond.true241 ], [ %cond342, %cond.end341 ], !dbg !10476
  br label %cond.end345, !dbg !10476

cond.end345:                                      ; preds = %cond.end343, %cond.true236
  %cond346 = phi i32 [ 18, %cond.true236 ], [ %cond344, %cond.end343 ], !dbg !10476
  br label %cond.end347, !dbg !10476

cond.end347:                                      ; preds = %cond.end345, %cond.true231
  %cond348 = phi i32 [ 19, %cond.true231 ], [ %cond346, %cond.end345 ], !dbg !10476
  br label %cond.end349, !dbg !10476

cond.end349:                                      ; preds = %cond.end347, %cond.true226
  %cond350 = phi i32 [ 20, %cond.true226 ], [ %cond348, %cond.end347 ], !dbg !10476
  br label %cond.end351, !dbg !10476

cond.end351:                                      ; preds = %cond.end349, %cond.true221
  %cond352 = phi i32 [ 21, %cond.true221 ], [ %cond350, %cond.end349 ], !dbg !10476
  br label %cond.end353, !dbg !10476

cond.end353:                                      ; preds = %cond.end351, %cond.true216
  %cond354 = phi i32 [ 22, %cond.true216 ], [ %cond352, %cond.end351 ], !dbg !10476
  br label %cond.end355, !dbg !10476

cond.end355:                                      ; preds = %cond.end353, %cond.true211
  %cond356 = phi i32 [ 23, %cond.true211 ], [ %cond354, %cond.end353 ], !dbg !10476
  br label %cond.end357, !dbg !10476

cond.end357:                                      ; preds = %cond.end355, %cond.true206
  %cond358 = phi i32 [ 24, %cond.true206 ], [ %cond356, %cond.end355 ], !dbg !10476
  br label %cond.end359, !dbg !10476

cond.end359:                                      ; preds = %cond.end357, %cond.true201
  %cond360 = phi i32 [ 25, %cond.true201 ], [ %cond358, %cond.end357 ], !dbg !10476
  br label %cond.end361, !dbg !10476

cond.end361:                                      ; preds = %cond.end359, %cond.true196
  %cond362 = phi i32 [ 26, %cond.true196 ], [ %cond360, %cond.end359 ], !dbg !10476
  br label %cond.end363, !dbg !10476

cond.end363:                                      ; preds = %cond.end361, %cond.true191
  %cond364 = phi i32 [ 27, %cond.true191 ], [ %cond362, %cond.end361 ], !dbg !10476
  br label %cond.end365, !dbg !10476

cond.end365:                                      ; preds = %cond.end363, %cond.true186
  %cond366 = phi i32 [ 28, %cond.true186 ], [ %cond364, %cond.end363 ], !dbg !10476
  br label %cond.end367, !dbg !10476

cond.end367:                                      ; preds = %cond.end365, %cond.true181
  %cond368 = phi i32 [ 29, %cond.true181 ], [ %cond366, %cond.end365 ], !dbg !10476
  br label %cond.end369, !dbg !10476

cond.end369:                                      ; preds = %cond.end367, %cond.true176
  %cond370 = phi i32 [ 30, %cond.true176 ], [ %cond368, %cond.end367 ], !dbg !10476
  br label %cond.end371, !dbg !10476

cond.end371:                                      ; preds = %cond.end369, %cond.true171
  %cond372 = phi i32 [ 31, %cond.true171 ], [ %cond370, %cond.end369 ], !dbg !10476
  br label %cond.end373, !dbg !10476

cond.end373:                                      ; preds = %cond.end371, %cond.true166
  %cond374 = phi i32 [ 32, %cond.true166 ], [ %cond372, %cond.end371 ], !dbg !10476
  br label %cond.end375, !dbg !10476

cond.end375:                                      ; preds = %cond.end373, %cond.true161
  %cond376 = phi i32 [ 33, %cond.true161 ], [ %cond374, %cond.end373 ], !dbg !10476
  br label %cond.end377, !dbg !10476

cond.end377:                                      ; preds = %cond.end375, %cond.true156
  %cond378 = phi i32 [ 34, %cond.true156 ], [ %cond376, %cond.end375 ], !dbg !10476
  br label %cond.end379, !dbg !10476

cond.end379:                                      ; preds = %cond.end377, %cond.true151
  %cond380 = phi i32 [ 35, %cond.true151 ], [ %cond378, %cond.end377 ], !dbg !10476
  br label %cond.end381, !dbg !10476

cond.end381:                                      ; preds = %cond.end379, %cond.true146
  %cond382 = phi i32 [ 36, %cond.true146 ], [ %cond380, %cond.end379 ], !dbg !10476
  br label %cond.end383, !dbg !10476

cond.end383:                                      ; preds = %cond.end381, %cond.true141
  %cond384 = phi i32 [ 37, %cond.true141 ], [ %cond382, %cond.end381 ], !dbg !10476
  br label %cond.end385, !dbg !10476

cond.end385:                                      ; preds = %cond.end383, %cond.true136
  %cond386 = phi i32 [ 38, %cond.true136 ], [ %cond384, %cond.end383 ], !dbg !10476
  br label %cond.end387, !dbg !10476

cond.end387:                                      ; preds = %cond.end385, %cond.true131
  %cond388 = phi i32 [ 39, %cond.true131 ], [ %cond386, %cond.end385 ], !dbg !10476
  br label %cond.end389, !dbg !10476

cond.end389:                                      ; preds = %cond.end387, %cond.true126
  %cond390 = phi i32 [ 40, %cond.true126 ], [ %cond388, %cond.end387 ], !dbg !10476
  br label %cond.end391, !dbg !10476

cond.end391:                                      ; preds = %cond.end389, %cond.true121
  %cond392 = phi i32 [ 41, %cond.true121 ], [ %cond390, %cond.end389 ], !dbg !10476
  br label %cond.end393, !dbg !10476

cond.end393:                                      ; preds = %cond.end391, %cond.true116
  %cond394 = phi i32 [ 42, %cond.true116 ], [ %cond392, %cond.end391 ], !dbg !10476
  br label %cond.end395, !dbg !10476

cond.end395:                                      ; preds = %cond.end393, %cond.true111
  %cond396 = phi i32 [ 43, %cond.true111 ], [ %cond394, %cond.end393 ], !dbg !10476
  br label %cond.end397, !dbg !10476

cond.end397:                                      ; preds = %cond.end395, %cond.true106
  %cond398 = phi i32 [ 44, %cond.true106 ], [ %cond396, %cond.end395 ], !dbg !10476
  br label %cond.end399, !dbg !10476

cond.end399:                                      ; preds = %cond.end397, %cond.true101
  %cond400 = phi i32 [ 45, %cond.true101 ], [ %cond398, %cond.end397 ], !dbg !10476
  br label %cond.end401, !dbg !10476

cond.end401:                                      ; preds = %cond.end399, %cond.true96
  %cond402 = phi i32 [ 46, %cond.true96 ], [ %cond400, %cond.end399 ], !dbg !10476
  br label %cond.end403, !dbg !10476

cond.end403:                                      ; preds = %cond.end401, %cond.true91
  %cond404 = phi i32 [ 47, %cond.true91 ], [ %cond402, %cond.end401 ], !dbg !10476
  br label %cond.end405, !dbg !10476

cond.end405:                                      ; preds = %cond.end403, %cond.true86
  %cond406 = phi i32 [ 48, %cond.true86 ], [ %cond404, %cond.end403 ], !dbg !10476
  br label %cond.end407, !dbg !10476

cond.end407:                                      ; preds = %cond.end405, %cond.true81
  %cond408 = phi i32 [ 49, %cond.true81 ], [ %cond406, %cond.end405 ], !dbg !10476
  br label %cond.end409, !dbg !10476

cond.end409:                                      ; preds = %cond.end407, %cond.true76
  %cond410 = phi i32 [ 50, %cond.true76 ], [ %cond408, %cond.end407 ], !dbg !10476
  br label %cond.end411, !dbg !10476

cond.end411:                                      ; preds = %cond.end409, %cond.true71
  %cond412 = phi i32 [ 51, %cond.true71 ], [ %cond410, %cond.end409 ], !dbg !10476
  br label %cond.end413, !dbg !10476

cond.end413:                                      ; preds = %cond.end411, %cond.true66
  %cond414 = phi i32 [ 52, %cond.true66 ], [ %cond412, %cond.end411 ], !dbg !10476
  br label %cond.end415, !dbg !10476

cond.end415:                                      ; preds = %cond.end413, %cond.true61
  %cond416 = phi i32 [ 53, %cond.true61 ], [ %cond414, %cond.end413 ], !dbg !10476
  br label %cond.end417, !dbg !10476

cond.end417:                                      ; preds = %cond.end415, %cond.true56
  %cond418 = phi i32 [ 54, %cond.true56 ], [ %cond416, %cond.end415 ], !dbg !10476
  br label %cond.end419, !dbg !10476

cond.end419:                                      ; preds = %cond.end417, %cond.true51
  %cond420 = phi i32 [ 55, %cond.true51 ], [ %cond418, %cond.end417 ], !dbg !10476
  br label %cond.end421, !dbg !10476

cond.end421:                                      ; preds = %cond.end419, %cond.true46
  %cond422 = phi i32 [ 56, %cond.true46 ], [ %cond420, %cond.end419 ], !dbg !10476
  br label %cond.end423, !dbg !10476

cond.end423:                                      ; preds = %cond.end421, %cond.true41
  %cond424 = phi i32 [ 57, %cond.true41 ], [ %cond422, %cond.end421 ], !dbg !10476
  br label %cond.end425, !dbg !10476

cond.end425:                                      ; preds = %cond.end423, %cond.true36
  %cond426 = phi i32 [ 58, %cond.true36 ], [ %cond424, %cond.end423 ], !dbg !10476
  br label %cond.end427, !dbg !10476

cond.end427:                                      ; preds = %cond.end425, %cond.true31
  %cond428 = phi i32 [ 59, %cond.true31 ], [ %cond426, %cond.end425 ], !dbg !10476
  br label %cond.end429, !dbg !10476

cond.end429:                                      ; preds = %cond.end427, %cond.true26
  %cond430 = phi i32 [ 60, %cond.true26 ], [ %cond428, %cond.end427 ], !dbg !10476
  br label %cond.end431, !dbg !10476

cond.end431:                                      ; preds = %cond.end429, %cond.true21
  %cond432 = phi i32 [ 61, %cond.true21 ], [ %cond430, %cond.end429 ], !dbg !10476
  br label %cond.end433, !dbg !10476

cond.end433:                                      ; preds = %cond.end431, %cond.true16
  %cond434 = phi i32 [ 62, %cond.true16 ], [ %cond432, %cond.end431 ], !dbg !10476
  br label %cond.end435, !dbg !10476

cond.end435:                                      ; preds = %cond.end433, %cond.true11
  %cond436 = phi i32 [ 63, %cond.true11 ], [ %cond434, %cond.end433 ], !dbg !10476
  br label %cond.end437, !dbg !10476

cond.end437:                                      ; preds = %cond.end435, %cond.true8
  %cond438 = phi i32 [ 0, %cond.true8 ], [ %cond436, %cond.end435 ], !dbg !10476
  br label %cond.end440, !dbg !10476

cond.false439:                                    ; preds = %cond.true
  br label %cond.end440, !dbg !10476

cond.end440:                                      ; preds = %cond.false439, %cond.end437
  %cond441 = phi i32 [ %cond438, %cond.end437 ], [ -1, %cond.false439 ], !dbg !10476
  br label %cond.end444, !dbg !10476

cond.false442:                                    ; preds = %if.end3
  %72 = load i64, i64* %size.addr, align 8, !dbg !10476
  %sub443 = sub i64 %72, 1, !dbg !10476
  %call = call i32 @__ilog2_u64(i64 %sub443) #11, !dbg !10476
  br label %cond.end444, !dbg !10476

cond.end444:                                      ; preds = %cond.false442, %cond.end440
  %cond445 = phi i32 [ %cond441, %cond.end440 ], [ %call, %cond.false442 ], !dbg !10476
  %sub446 = sub i32 %cond445, 12, !dbg !10477
  %add = add i32 %sub446, 1, !dbg !10478
  store i32 %add, i32* %retval, align 4, !dbg !10479
  br label %return, !dbg !10479

if.end447:                                        ; preds = %entry
  %73 = load i64, i64* %size.addr, align 8, !dbg !10480
  %dec = add i64 %73, -1, !dbg !10480
  store i64 %dec, i64* %size.addr, align 8, !dbg !10480
  %74 = load i64, i64* %size.addr, align 8, !dbg !10481
  %shr = lshr i64 %74, 12, !dbg !10481
  store i64 %shr, i64* %size.addr, align 8, !dbg !10481
  %75 = load i64, i64* %size.addr, align 8, !dbg !10482
  store i64 %75, i64* %x.addr.i, align 8
  store i32 -1, i32* %bitpos.i, align 4, !dbg !10459
  %76 = load i32, i32* %bitpos.i, align 4, !dbg !10483
  %77 = load i64, i64* %x.addr.i, align 8, !dbg !10484
  %78 = call i32 asm "bsrq $1,${0:q}", "=r,rm,0,~{dirflag},~{fpsr},~{flags}"(i64 %77, i32 %76) #15, !dbg !10483, !srcloc !10485
  store i32 %78, i32* %bitpos.i, align 4, !dbg !10483
  %79 = load i32, i32* %bitpos.i, align 4, !dbg !10486
  %add.i = add i32 %79, 1, !dbg !10487
  store i32 %add.i, i32* %retval, align 4, !dbg !10488
  br label %return, !dbg !10488

return:                                           ; preds = %if.end447, %cond.end444, %if.then2, %if.then1
  %80 = load i32, i32* %retval, align 4, !dbg !10489
  ret i32 %80, !dbg !10489
}

; Function Attrs: noinline noredzone nounwind optnone readnone sspstrong
define internal i32 @__ilog2_u64(i64 %n) #8 !dbg !10490 {
entry:
  %x.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %x.addr.i, metadata !10452, metadata !DIExpression()), !dbg !10494
  %bitpos.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %bitpos.i, metadata !10458, metadata !DIExpression()), !dbg !10496
  %n.addr = alloca i64, align 8
  store i64 %n, i64* %n.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %n.addr, metadata !10497, metadata !DIExpression()), !dbg !10498
  %0 = load i64, i64* %n.addr, align 8, !dbg !10499
  store i64 %0, i64* %x.addr.i, align 8
  store i32 -1, i32* %bitpos.i, align 4, !dbg !10496
  %1 = load i32, i32* %bitpos.i, align 4, !dbg !10500
  %2 = load i64, i64* %x.addr.i, align 8, !dbg !10501
  %3 = call i32 asm "bsrq $1,${0:q}", "=r,rm,0,~{dirflag},~{fpsr},~{flags}"(i64 %2, i32 %1) #15, !dbg !10500, !srcloc !10485
  store i32 %3, i32* %bitpos.i, align 4, !dbg !10500
  %4 = load i32, i32* %bitpos.i, align 4, !dbg !10502
  %add.i = add i32 %4, 1, !dbg !10503
  %sub = sub i32 %add.i, 1, !dbg !10504
  ret i32 %sub, !dbg !10505
}

; Function Attrs: noredzone
declare dso_local noalias i8* @kmalloc_order(i64, i32, i32) #2

; Function Attrs: noredzone
declare dso_local noalias i8* @kmem_cache_alloc(%struct.kmem_cache*, i32) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @kasan_kmalloc(%struct.kmem_cache* %s, i8* %object, i64 %size, i32 %flags) #0 !dbg !10506 {
entry:
  %s.addr = alloca %struct.kmem_cache*, align 8
  %object.addr = alloca i8*, align 8
  %size.addr = alloca i64, align 8
  %flags.addr = alloca i32, align 4
  store %struct.kmem_cache* %s, %struct.kmem_cache** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.kmem_cache** %s.addr, metadata !10510, metadata !DIExpression()), !dbg !10511
  store i8* %object, i8** %object.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %object.addr, metadata !10512, metadata !DIExpression()), !dbg !10513
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !10514, metadata !DIExpression()), !dbg !10515
  store i32 %flags, i32* %flags.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr, metadata !10516, metadata !DIExpression()), !dbg !10517
  %0 = load i8*, i8** %object.addr, align 8, !dbg !10518
  ret i8* %0, !dbg !10519
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @hid_process_event(%struct.hid_device* %hid, %struct.hid_field* %field, %struct.hid_usage* %usage, i32 %value, i32 %interrupt) #0 !dbg !10520 {
entry:
  %hid.addr = alloca %struct.hid_device*, align 8
  %field.addr = alloca %struct.hid_field*, align 8
  %usage.addr = alloca %struct.hid_usage*, align 8
  %value.addr = alloca i32, align 4
  %interrupt.addr = alloca i32, align 4
  %hdrv = alloca %struct.hid_driver*, align 8
  %ret = alloca i32, align 4
  store %struct.hid_device* %hid, %struct.hid_device** %hid.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.hid_device** %hid.addr, metadata !10523, metadata !DIExpression()), !dbg !10524
  store %struct.hid_field* %field, %struct.hid_field** %field.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.hid_field** %field.addr, metadata !10525, metadata !DIExpression()), !dbg !10526
  store %struct.hid_usage* %usage, %struct.hid_usage** %usage.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.hid_usage** %usage.addr, metadata !10527, metadata !DIExpression()), !dbg !10528
  store i32 %value, i32* %value.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %value.addr, metadata !10529, metadata !DIExpression()), !dbg !10530
  store i32 %interrupt, i32* %interrupt.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %interrupt.addr, metadata !10531, metadata !DIExpression()), !dbg !10532
  call void @llvm.dbg.declare(metadata %struct.hid_driver** %hdrv, metadata !10533, metadata !DIExpression()), !dbg !10534
  %0 = load %struct.hid_device*, %struct.hid_device** %hid.addr, align 8, !dbg !10535
  %driver = getelementptr inbounds %struct.hid_device, %struct.hid_device* %0, i32 0, i32 19, !dbg !10536
  %1 = load %struct.hid_driver*, %struct.hid_driver** %driver, align 8, !dbg !10536
  store %struct.hid_driver* %1, %struct.hid_driver** %hdrv, align 8, !dbg !10534
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !10537, metadata !DIExpression()), !dbg !10538
  %2 = load %struct.hid_device*, %struct.hid_device** %hid.addr, align 8, !dbg !10539
  %debug_list = getelementptr inbounds %struct.hid_device, %struct.hid_device* %2, i32 0, i32 43, !dbg !10541
  %call = call i32 @list_empty(%struct.list_head* %debug_list) #9, !dbg !10542
  %tobool = icmp ne i32 %call, 0, !dbg !10542
  br i1 %tobool, label %if.end, label %if.then, !dbg !10543

if.then:                                          ; preds = %entry
  br label %do.body, !dbg !10544

do.body:                                          ; preds = %if.then
  br label %do.end, !dbg !10545

do.end:                                           ; preds = %do.body
  br label %if.end, !dbg !10545

if.end:                                           ; preds = %do.end, %entry
  %3 = load %struct.hid_driver*, %struct.hid_driver** %hdrv, align 8, !dbg !10547
  %tobool1 = icmp ne %struct.hid_driver* %3, null, !dbg !10547
  br i1 %tobool1, label %land.lhs.true, label %if.end14, !dbg !10549

land.lhs.true:                                    ; preds = %if.end
  %4 = load %struct.hid_driver*, %struct.hid_driver** %hdrv, align 8, !dbg !10550
  %event = getelementptr inbounds %struct.hid_driver, %struct.hid_driver* %4, i32 0, i32 10, !dbg !10551
  %5 = load i32 (%struct.hid_device*, %struct.hid_field*, %struct.hid_usage*, i32)*, i32 (%struct.hid_device*, %struct.hid_field*, %struct.hid_usage*, i32)** %event, align 8, !dbg !10551
  %tobool2 = icmp ne i32 (%struct.hid_device*, %struct.hid_field*, %struct.hid_usage*, i32)* %5, null, !dbg !10550
  br i1 %tobool2, label %land.lhs.true3, label %if.end14, !dbg !10552

land.lhs.true3:                                   ; preds = %land.lhs.true
  %6 = load %struct.hid_device*, %struct.hid_device** %hid.addr, align 8, !dbg !10553
  %7 = load %struct.hid_usage*, %struct.hid_usage** %usage.addr, align 8, !dbg !10554
  %call4 = call i32 @hid_match_usage(%struct.hid_device* %6, %struct.hid_usage* %7) #9, !dbg !10555
  %tobool5 = icmp ne i32 %call4, 0, !dbg !10555
  br i1 %tobool5, label %if.then6, label %if.end14, !dbg !10556

if.then6:                                         ; preds = %land.lhs.true3
  %8 = load %struct.hid_driver*, %struct.hid_driver** %hdrv, align 8, !dbg !10557
  %event7 = getelementptr inbounds %struct.hid_driver, %struct.hid_driver* %8, i32 0, i32 10, !dbg !10559
  %9 = load i32 (%struct.hid_device*, %struct.hid_field*, %struct.hid_usage*, i32)*, i32 (%struct.hid_device*, %struct.hid_field*, %struct.hid_usage*, i32)** %event7, align 8, !dbg !10559
  %10 = load %struct.hid_device*, %struct.hid_device** %hid.addr, align 8, !dbg !10560
  %11 = load %struct.hid_field*, %struct.hid_field** %field.addr, align 8, !dbg !10561
  %12 = load %struct.hid_usage*, %struct.hid_usage** %usage.addr, align 8, !dbg !10562
  %13 = load i32, i32* %value.addr, align 4, !dbg !10563
  %call8 = call i32 %9(%struct.hid_device* %10, %struct.hid_field* %11, %struct.hid_usage* %12, i32 %13) #9, !dbg !10557
  store i32 %call8, i32* %ret, align 4, !dbg !10564
  %14 = load i32, i32* %ret, align 4, !dbg !10565
  %cmp = icmp ne i32 %14, 0, !dbg !10567
  br i1 %cmp, label %if.then9, label %if.end13, !dbg !10568

if.then9:                                         ; preds = %if.then6
  %15 = load i32, i32* %ret, align 4, !dbg !10569
  %cmp10 = icmp slt i32 %15, 0, !dbg !10572
  br i1 %cmp10, label %if.then11, label %if.end12, !dbg !10573

if.then11:                                        ; preds = %if.then9
  %16 = load %struct.hid_device*, %struct.hid_device** %hid.addr, align 8, !dbg !10574
  %dev = getelementptr inbounds %struct.hid_device, %struct.hid_device* %16, i32 0, i32 18, !dbg !10574
  %17 = load %struct.hid_driver*, %struct.hid_driver** %hdrv, align 8, !dbg !10574
  %name = getelementptr inbounds %struct.hid_driver, %struct.hid_driver* %17, i32 0, i32 0, !dbg !10574
  %18 = load i8*, i8** %name, align 8, !dbg !10574
  %19 = load i32, i32* %ret, align 4, !dbg !10574
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %dev, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.74, i64 0, i64 0), i8* %18, i32 %19) #13, !dbg !10574
  br label %if.end12, !dbg !10574

if.end12:                                         ; preds = %if.then11, %if.then9
  br label %if.end28, !dbg !10575

if.end13:                                         ; preds = %if.then6
  br label %if.end14, !dbg !10576

if.end14:                                         ; preds = %if.end13, %land.lhs.true3, %land.lhs.true, %if.end
  %20 = load %struct.hid_device*, %struct.hid_device** %hid.addr, align 8, !dbg !10577
  %claimed = getelementptr inbounds %struct.hid_device, %struct.hid_device* %20, i32 0, i32 24, !dbg !10579
  %21 = load i32, i32* %claimed, align 8, !dbg !10579
  %conv = zext i32 %21 to i64, !dbg !10577
  %and = and i64 %conv, 1, !dbg !10580
  %tobool15 = icmp ne i64 %and, 0, !dbg !10580
  br i1 %tobool15, label %if.then16, label %if.end17, !dbg !10581

if.then16:                                        ; preds = %if.end14
  %22 = load %struct.hid_device*, %struct.hid_device** %hid.addr, align 8, !dbg !10582
  %23 = load %struct.hid_field*, %struct.hid_field** %field.addr, align 8, !dbg !10583
  %24 = load %struct.hid_usage*, %struct.hid_usage** %usage.addr, align 8, !dbg !10584
  %25 = load i32, i32* %value.addr, align 4, !dbg !10585
  call void @hidinput_hid_event(%struct.hid_device* %22, %struct.hid_field* %23, %struct.hid_usage* %24, i32 %25) #9, !dbg !10586
  br label %if.end17, !dbg !10586

if.end17:                                         ; preds = %if.then16, %if.end14
  %26 = load %struct.hid_device*, %struct.hid_device** %hid.addr, align 8, !dbg !10587
  %claimed18 = getelementptr inbounds %struct.hid_device, %struct.hid_device* %26, i32 0, i32 24, !dbg !10589
  %27 = load i32, i32* %claimed18, align 8, !dbg !10589
  %conv19 = zext i32 %27 to i64, !dbg !10587
  %and20 = and i64 %conv19, 2, !dbg !10590
  %tobool21 = icmp ne i64 %and20, 0, !dbg !10590
  br i1 %tobool21, label %land.lhs.true22, label %if.end28, !dbg !10591

land.lhs.true22:                                  ; preds = %if.end17
  %28 = load i32, i32* %interrupt.addr, align 4, !dbg !10592
  %tobool23 = icmp ne i32 %28, 0, !dbg !10592
  br i1 %tobool23, label %land.lhs.true24, label %if.end28, !dbg !10593

land.lhs.true24:                                  ; preds = %land.lhs.true22
  %29 = load %struct.hid_device*, %struct.hid_device** %hid.addr, align 8, !dbg !10594
  %hiddev_hid_event = getelementptr inbounds %struct.hid_device, %struct.hid_device* %29, i32 0, i32 37, !dbg !10595
  %30 = load void (%struct.hid_device*, %struct.hid_field*, %struct.hid_usage*, i32)*, void (%struct.hid_device*, %struct.hid_field*, %struct.hid_usage*, i32)** %hiddev_hid_event, align 8, !dbg !10595
  %tobool25 = icmp ne void (%struct.hid_device*, %struct.hid_field*, %struct.hid_usage*, i32)* %30, null, !dbg !10594
  br i1 %tobool25, label %if.then26, label %if.end28, !dbg !10596

if.then26:                                        ; preds = %land.lhs.true24
  %31 = load %struct.hid_device*, %struct.hid_device** %hid.addr, align 8, !dbg !10597
  %hiddev_hid_event27 = getelementptr inbounds %struct.hid_device, %struct.hid_device* %31, i32 0, i32 37, !dbg !10598
  %32 = load void (%struct.hid_device*, %struct.hid_field*, %struct.hid_usage*, i32)*, void (%struct.hid_device*, %struct.hid_field*, %struct.hid_usage*, i32)** %hiddev_hid_event27, align 8, !dbg !10598
  %33 = load %struct.hid_device*, %struct.hid_device** %hid.addr, align 8, !dbg !10599
  %34 = load %struct.hid_field*, %struct.hid_field** %field.addr, align 8, !dbg !10600
  %35 = load %struct.hid_usage*, %struct.hid_usage** %usage.addr, align 8, !dbg !10601
  %36 = load i32, i32* %value.addr, align 4, !dbg !10602
  call void %32(%struct.hid_device* %33, %struct.hid_field* %34, %struct.hid_usage* %35, i32 %36) #9, !dbg !10597
  br label %if.end28, !dbg !10597

if.end28:                                         ; preds = %if.end12, %if.then26, %land.lhs.true24, %land.lhs.true22, %if.end17
  ret void, !dbg !10603
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @search(i32* %array, i32 %value, i32 %n) #0 !dbg !10604 {
entry:
  %retval = alloca i32, align 4
  %array.addr = alloca i32*, align 8
  %value.addr = alloca i32, align 4
  %n.addr = alloca i32, align 4
  store i32* %array, i32** %array.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %array.addr, metadata !10607, metadata !DIExpression()), !dbg !10608
  store i32 %value, i32* %value.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %value.addr, metadata !10609, metadata !DIExpression()), !dbg !10610
  store i32 %n, i32* %n.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !10611, metadata !DIExpression()), !dbg !10612
  br label %while.cond, !dbg !10613

while.cond:                                       ; preds = %if.end, %entry
  %0 = load i32, i32* %n.addr, align 4, !dbg !10614
  %dec = add i32 %0, -1, !dbg !10614
  store i32 %dec, i32* %n.addr, align 4, !dbg !10614
  %tobool = icmp ne i32 %0, 0, !dbg !10613
  br i1 %tobool, label %while.body, label %while.end, !dbg !10613

while.body:                                       ; preds = %while.cond
  %1 = load i32*, i32** %array.addr, align 8, !dbg !10615
  %incdec.ptr = getelementptr i32, i32* %1, i32 1, !dbg !10615
  store i32* %incdec.ptr, i32** %array.addr, align 8, !dbg !10615
  %2 = load i32, i32* %1, align 4, !dbg !10618
  %3 = load i32, i32* %value.addr, align 4, !dbg !10619
  %cmp = icmp eq i32 %2, %3, !dbg !10620
  br i1 %cmp, label %if.then, label %if.end, !dbg !10621

if.then:                                          ; preds = %while.body
  store i32 0, i32* %retval, align 4, !dbg !10622
  br label %return, !dbg !10622

if.end:                                           ; preds = %while.body
  br label %while.cond, !dbg !10613, !llvm.loop !10623

while.end:                                        ; preds = %while.cond
  store i32 -1, i32* %retval, align 4, !dbg !10625
  br label %return, !dbg !10625

return:                                           ; preds = %while.end, %if.then
  %4 = load i32, i32* %retval, align 4, !dbg !10626
  ret i32 %4, !dbg !10626
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @hid_match_usage(%struct.hid_device* %hid, %struct.hid_usage* %usage) #0 !dbg !10627 {
entry:
  %retval = alloca i32, align 4
  %hid.addr = alloca %struct.hid_device*, align 8
  %usage.addr = alloca %struct.hid_usage*, align 8
  %id = alloca %struct.hid_usage_id*, align 8
  store %struct.hid_device* %hid, %struct.hid_device** %hid.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.hid_device** %hid.addr, metadata !10630, metadata !DIExpression()), !dbg !10631
  store %struct.hid_usage* %usage, %struct.hid_usage** %usage.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.hid_usage** %usage.addr, metadata !10632, metadata !DIExpression()), !dbg !10633
  call void @llvm.dbg.declare(metadata %struct.hid_usage_id** %id, metadata !10634, metadata !DIExpression()), !dbg !10635
  %0 = load %struct.hid_device*, %struct.hid_device** %hid.addr, align 8, !dbg !10636
  %driver = getelementptr inbounds %struct.hid_device, %struct.hid_device* %0, i32 0, i32 19, !dbg !10637
  %1 = load %struct.hid_driver*, %struct.hid_driver** %driver, align 8, !dbg !10637
  %usage_table = getelementptr inbounds %struct.hid_driver, %struct.hid_driver* %1, i32 0, i32 9, !dbg !10638
  %2 = load %struct.hid_usage_id*, %struct.hid_usage_id** %usage_table, align 8, !dbg !10638
  store %struct.hid_usage_id* %2, %struct.hid_usage_id** %id, align 8, !dbg !10635
  %3 = load %struct.hid_usage_id*, %struct.hid_usage_id** %id, align 8, !dbg !10639
  %tobool = icmp ne %struct.hid_usage_id* %3, null, !dbg !10639
  br i1 %tobool, label %if.end, label %if.then, !dbg !10641

if.then:                                          ; preds = %entry
  store i32 1, i32* %retval, align 4, !dbg !10642
  br label %return, !dbg !10642

if.end:                                           ; preds = %entry
  br label %for.cond, !dbg !10643

for.cond:                                         ; preds = %for.inc, %if.end
  %4 = load %struct.hid_usage_id*, %struct.hid_usage_id** %id, align 8, !dbg !10644
  %usage_type = getelementptr inbounds %struct.hid_usage_id, %struct.hid_usage_id* %4, i32 0, i32 1, !dbg !10647
  %5 = load i32, i32* %usage_type, align 4, !dbg !10647
  %cmp = icmp ne i32 %5, -2, !dbg !10648
  br i1 %cmp, label %for.body, label %for.end, !dbg !10649

for.body:                                         ; preds = %for.cond
  %6 = load %struct.hid_usage_id*, %struct.hid_usage_id** %id, align 8, !dbg !10650
  %usage_hid = getelementptr inbounds %struct.hid_usage_id, %struct.hid_usage_id* %6, i32 0, i32 0, !dbg !10652
  %7 = load i32, i32* %usage_hid, align 4, !dbg !10652
  %cmp1 = icmp eq i32 %7, -1, !dbg !10653
  br i1 %cmp1, label %land.lhs.true, label %lor.lhs.false, !dbg !10654

lor.lhs.false:                                    ; preds = %for.body
  %8 = load %struct.hid_usage_id*, %struct.hid_usage_id** %id, align 8, !dbg !10655
  %usage_hid2 = getelementptr inbounds %struct.hid_usage_id, %struct.hid_usage_id* %8, i32 0, i32 0, !dbg !10656
  %9 = load i32, i32* %usage_hid2, align 4, !dbg !10656
  %10 = load %struct.hid_usage*, %struct.hid_usage** %usage.addr, align 8, !dbg !10657
  %hid3 = getelementptr inbounds %struct.hid_usage, %struct.hid_usage* %10, i32 0, i32 0, !dbg !10658
  %11 = load i32, i32* %hid3, align 4, !dbg !10658
  %cmp4 = icmp eq i32 %9, %11, !dbg !10659
  br i1 %cmp4, label %land.lhs.true, label %if.end20, !dbg !10660

land.lhs.true:                                    ; preds = %lor.lhs.false, %for.body
  %12 = load %struct.hid_usage_id*, %struct.hid_usage_id** %id, align 8, !dbg !10661
  %usage_type5 = getelementptr inbounds %struct.hid_usage_id, %struct.hid_usage_id* %12, i32 0, i32 1, !dbg !10662
  %13 = load i32, i32* %usage_type5, align 4, !dbg !10662
  %cmp6 = icmp eq i32 %13, -1, !dbg !10663
  br i1 %cmp6, label %land.lhs.true11, label %lor.lhs.false7, !dbg !10664

lor.lhs.false7:                                   ; preds = %land.lhs.true
  %14 = load %struct.hid_usage_id*, %struct.hid_usage_id** %id, align 8, !dbg !10665
  %usage_type8 = getelementptr inbounds %struct.hid_usage_id, %struct.hid_usage_id* %14, i32 0, i32 1, !dbg !10666
  %15 = load i32, i32* %usage_type8, align 4, !dbg !10666
  %16 = load %struct.hid_usage*, %struct.hid_usage** %usage.addr, align 8, !dbg !10667
  %type = getelementptr inbounds %struct.hid_usage, %struct.hid_usage* %16, i32 0, i32 6, !dbg !10668
  %17 = load i8, i8* %type, align 4, !dbg !10668
  %conv = zext i8 %17 to i32, !dbg !10667
  %cmp9 = icmp eq i32 %15, %conv, !dbg !10669
  br i1 %cmp9, label %land.lhs.true11, label %if.end20, !dbg !10670

land.lhs.true11:                                  ; preds = %lor.lhs.false7, %land.lhs.true
  %18 = load %struct.hid_usage_id*, %struct.hid_usage_id** %id, align 8, !dbg !10671
  %usage_code = getelementptr inbounds %struct.hid_usage_id, %struct.hid_usage_id* %18, i32 0, i32 2, !dbg !10672
  %19 = load i32, i32* %usage_code, align 4, !dbg !10672
  %cmp12 = icmp eq i32 %19, -1, !dbg !10673
  br i1 %cmp12, label %if.then19, label %lor.lhs.false14, !dbg !10674

lor.lhs.false14:                                  ; preds = %land.lhs.true11
  %20 = load %struct.hid_usage_id*, %struct.hid_usage_id** %id, align 8, !dbg !10675
  %usage_code15 = getelementptr inbounds %struct.hid_usage_id, %struct.hid_usage_id* %20, i32 0, i32 2, !dbg !10676
  %21 = load i32, i32* %usage_code15, align 4, !dbg !10676
  %22 = load %struct.hid_usage*, %struct.hid_usage** %usage.addr, align 8, !dbg !10677
  %code = getelementptr inbounds %struct.hid_usage, %struct.hid_usage* %22, i32 0, i32 5, !dbg !10678
  %23 = load i16, i16* %code, align 2, !dbg !10678
  %conv16 = zext i16 %23 to i32, !dbg !10677
  %cmp17 = icmp eq i32 %21, %conv16, !dbg !10679
  br i1 %cmp17, label %if.then19, label %if.end20, !dbg !10680

if.then19:                                        ; preds = %lor.lhs.false14, %land.lhs.true11
  store i32 1, i32* %retval, align 4, !dbg !10681
  br label %return, !dbg !10681

if.end20:                                         ; preds = %lor.lhs.false14, %lor.lhs.false7, %lor.lhs.false
  br label %for.inc, !dbg !10682

for.inc:                                          ; preds = %if.end20
  %24 = load %struct.hid_usage_id*, %struct.hid_usage_id** %id, align 8, !dbg !10683
  %incdec.ptr = getelementptr %struct.hid_usage_id, %struct.hid_usage_id* %24, i32 1, !dbg !10683
  store %struct.hid_usage_id* %incdec.ptr, %struct.hid_usage_id** %id, align 8, !dbg !10683
  br label %for.cond, !dbg !10684, !llvm.loop !10685

for.end:                                          ; preds = %for.cond
  store i32 0, i32* %retval, align 4, !dbg !10687
  br label %return, !dbg !10687

return:                                           ; preds = %for.end, %if.then19, %if.then
  %25 = load i32, i32* %retval, align 4, !dbg !10688
  ret i32 %25, !dbg !10688
}

; Function Attrs: noredzone
declare dso_local void @hidinput_hid_event(%struct.hid_device*, %struct.hid_field*, %struct.hid_usage*, i32) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @show_country(%struct.device* %dev, %struct.device_attribute* %attr, i8* %buf) #0 !dbg !10689 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %attr.addr = alloca %struct.device_attribute*, align 8
  %buf.addr = alloca i8*, align 8
  %hdev = alloca %struct.hid_device*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.hid_device*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !10690, metadata !DIExpression()), !dbg !10691
  store %struct.device_attribute* %attr, %struct.device_attribute** %attr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device_attribute** %attr.addr, metadata !10692, metadata !DIExpression()), !dbg !10693
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !10694, metadata !DIExpression()), !dbg !10695
  call void @llvm.dbg.declare(metadata %struct.hid_device** %hdev, metadata !10696, metadata !DIExpression()), !dbg !10697
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !10698, metadata !DIExpression()), !dbg !10700
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !10700
  %1 = bitcast %struct.device* %0 to i8*, !dbg !10700
  store i8* %1, i8** %__mptr, align 8, !dbg !10700
  br label %do.body, !dbg !10700

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !10701

do.end:                                           ; preds = %do.body
  %2 = load i8*, i8** %__mptr, align 8, !dbg !10700
  %add.ptr = getelementptr i8, i8* %2, i64 -6352, !dbg !10700
  %3 = bitcast i8* %add.ptr to %struct.hid_device*, !dbg !10700
  store %struct.hid_device* %3, %struct.hid_device** %tmp, align 8, !dbg !10701
  %4 = load %struct.hid_device*, %struct.hid_device** %tmp, align 8, !dbg !10700
  store %struct.hid_device* %4, %struct.hid_device** %hdev, align 8, !dbg !10697
  %5 = load i8*, i8** %buf.addr, align 8, !dbg !10703
  %6 = load %struct.hid_device*, %struct.hid_device** %hdev, align 8, !dbg !10704
  %country = getelementptr inbounds %struct.hid_device, %struct.hid_device* %6, i32 0, i32 14, !dbg !10705
  %7 = load i32, i32* %country, align 8, !dbg !10705
  %and = and i32 %7, 255, !dbg !10706
  %call = call i32 (i8*, i8*, ...) @sprintf(i8* %5, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.76, i64 0, i64 0), i32 %and) #9, !dbg !10707
  %conv = sext i32 %call to i64, !dbg !10707
  ret i64 %conv, !dbg !10708
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @modalias_show(%struct.device* %dev, %struct.device_attribute* %a, i8* %buf) #0 !dbg !10709 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %a.addr = alloca %struct.device_attribute*, align 8
  %buf.addr = alloca i8*, align 8
  %hdev = alloca %struct.hid_device*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.hid_device*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !10710, metadata !DIExpression()), !dbg !10711
  store %struct.device_attribute* %a, %struct.device_attribute** %a.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device_attribute** %a.addr, metadata !10712, metadata !DIExpression()), !dbg !10713
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !10714, metadata !DIExpression()), !dbg !10715
  call void @llvm.dbg.declare(metadata %struct.hid_device** %hdev, metadata !10716, metadata !DIExpression()), !dbg !10717
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !10718, metadata !DIExpression()), !dbg !10720
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !10720
  %1 = bitcast %struct.device* %0 to i8*, !dbg !10720
  store i8* %1, i8** %__mptr, align 8, !dbg !10720
  br label %do.body, !dbg !10720

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !10721

do.end:                                           ; preds = %do.body
  %2 = load i8*, i8** %__mptr, align 8, !dbg !10720
  %add.ptr = getelementptr i8, i8* %2, i64 -6352, !dbg !10720
  %3 = bitcast i8* %add.ptr to %struct.hid_device*, !dbg !10720
  store %struct.hid_device* %3, %struct.hid_device** %tmp, align 8, !dbg !10721
  %4 = load %struct.hid_device*, %struct.hid_device** %tmp, align 8, !dbg !10720
  store %struct.hid_device* %4, %struct.hid_device** %hdev, align 8, !dbg !10717
  %5 = load i8*, i8** %buf.addr, align 8, !dbg !10723
  %6 = load %struct.hid_device*, %struct.hid_device** %hdev, align 8, !dbg !10724
  %bus = getelementptr inbounds %struct.hid_device, %struct.hid_device* %6, i32 0, i32 8, !dbg !10725
  %7 = load i16, i16* %bus, align 4, !dbg !10725
  %conv = zext i16 %7 to i32, !dbg !10724
  %8 = load %struct.hid_device*, %struct.hid_device** %hdev, align 8, !dbg !10726
  %group = getelementptr inbounds %struct.hid_device, %struct.hid_device* %8, i32 0, i32 9, !dbg !10727
  %9 = load i16, i16* %group, align 2, !dbg !10727
  %conv1 = zext i16 %9 to i32, !dbg !10726
  %10 = load %struct.hid_device*, %struct.hid_device** %hdev, align 8, !dbg !10728
  %vendor = getelementptr inbounds %struct.hid_device, %struct.hid_device* %10, i32 0, i32 10, !dbg !10729
  %11 = load i32, i32* %vendor, align 8, !dbg !10729
  %12 = load %struct.hid_device*, %struct.hid_device** %hdev, align 8, !dbg !10730
  %product = getelementptr inbounds %struct.hid_device, %struct.hid_device* %12, i32 0, i32 11, !dbg !10731
  %13 = load i32, i32* %product, align 4, !dbg !10731
  %call = call i32 (i8*, i64, i8*, ...) @scnprintf(i8* %5, i64 4096, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.78, i64 0, i64 0), i32 %conv, i32 %conv1, i32 %11, i32 %13) #9, !dbg !10732
  %conv2 = sext i32 %call to i64, !dbg !10732
  ret i64 %conv2, !dbg !10733
}

; Function Attrs: noredzone
declare dso_local i32 @scnprintf(i8*, i64, i8*, ...) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @read_report_descriptor(%struct.file* %filp, %struct.kobject* %kobj, %struct.bin_attribute* %attr, i8* %buf, i64 %off, i64 %count) #0 !dbg !10734 {
entry:
  %retval = alloca i64, align 8
  %filp.addr = alloca %struct.file*, align 8
  %kobj.addr = alloca %struct.kobject*, align 8
  %attr.addr = alloca %struct.bin_attribute*, align 8
  %buf.addr = alloca i8*, align 8
  %off.addr = alloca i64, align 8
  %count.addr = alloca i64, align 8
  %dev = alloca %struct.device*, align 8
  %hdev = alloca %struct.hid_device*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.hid_device*, align 8
  store %struct.file* %filp, %struct.file** %filp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.file** %filp.addr, metadata !10735, metadata !DIExpression()), !dbg !10736
  store %struct.kobject* %kobj, %struct.kobject** %kobj.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.kobject** %kobj.addr, metadata !10737, metadata !DIExpression()), !dbg !10738
  store %struct.bin_attribute* %attr, %struct.bin_attribute** %attr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bin_attribute** %attr.addr, metadata !10739, metadata !DIExpression()), !dbg !10740
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !10741, metadata !DIExpression()), !dbg !10742
  store i64 %off, i64* %off.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %off.addr, metadata !10743, metadata !DIExpression()), !dbg !10744
  store i64 %count, i64* %count.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %count.addr, metadata !10745, metadata !DIExpression()), !dbg !10746
  call void @llvm.dbg.declare(metadata %struct.device** %dev, metadata !10747, metadata !DIExpression()), !dbg !10748
  %0 = load %struct.kobject*, %struct.kobject** %kobj.addr, align 8, !dbg !10749
  %call = call %struct.device* @kobj_to_dev(%struct.kobject* %0) #9, !dbg !10750
  store %struct.device* %call, %struct.device** %dev, align 8, !dbg !10748
  call void @llvm.dbg.declare(metadata %struct.hid_device** %hdev, metadata !10751, metadata !DIExpression()), !dbg !10752
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !10753, metadata !DIExpression()), !dbg !10755
  %1 = load %struct.device*, %struct.device** %dev, align 8, !dbg !10755
  %2 = bitcast %struct.device* %1 to i8*, !dbg !10755
  store i8* %2, i8** %__mptr, align 8, !dbg !10755
  br label %do.body, !dbg !10755

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !10756

do.end:                                           ; preds = %do.body
  %3 = load i8*, i8** %__mptr, align 8, !dbg !10755
  %add.ptr = getelementptr i8, i8* %3, i64 -6352, !dbg !10755
  %4 = bitcast i8* %add.ptr to %struct.hid_device*, !dbg !10755
  store %struct.hid_device* %4, %struct.hid_device** %tmp, align 8, !dbg !10756
  %5 = load %struct.hid_device*, %struct.hid_device** %tmp, align 8, !dbg !10755
  store %struct.hid_device* %5, %struct.hid_device** %hdev, align 8, !dbg !10752
  %6 = load i64, i64* %off.addr, align 8, !dbg !10758
  %7 = load %struct.hid_device*, %struct.hid_device** %hdev, align 8, !dbg !10760
  %rsize = getelementptr inbounds %struct.hid_device, %struct.hid_device* %7, i32 0, i32 3, !dbg !10761
  %8 = load i32, i32* %rsize, align 8, !dbg !10761
  %conv = zext i32 %8 to i64, !dbg !10760
  %cmp = icmp sge i64 %6, %conv, !dbg !10762
  br i1 %cmp, label %if.then, label %if.end, !dbg !10763

if.then:                                          ; preds = %do.end
  store i64 0, i64* %retval, align 8, !dbg !10764
  br label %return, !dbg !10764

if.end:                                           ; preds = %do.end
  %9 = load i64, i64* %off.addr, align 8, !dbg !10765
  %10 = load i64, i64* %count.addr, align 8, !dbg !10767
  %add = add i64 %9, %10, !dbg !10768
  %11 = load %struct.hid_device*, %struct.hid_device** %hdev, align 8, !dbg !10769
  %rsize2 = getelementptr inbounds %struct.hid_device, %struct.hid_device* %11, i32 0, i32 3, !dbg !10770
  %12 = load i32, i32* %rsize2, align 8, !dbg !10770
  %conv3 = zext i32 %12 to i64, !dbg !10769
  %cmp4 = icmp ugt i64 %add, %conv3, !dbg !10771
  br i1 %cmp4, label %if.then6, label %if.end9, !dbg !10772

if.then6:                                         ; preds = %if.end
  %13 = load %struct.hid_device*, %struct.hid_device** %hdev, align 8, !dbg !10773
  %rsize7 = getelementptr inbounds %struct.hid_device, %struct.hid_device* %13, i32 0, i32 3, !dbg !10774
  %14 = load i32, i32* %rsize7, align 8, !dbg !10774
  %conv8 = zext i32 %14 to i64, !dbg !10773
  %15 = load i64, i64* %off.addr, align 8, !dbg !10775
  %sub = sub i64 %conv8, %15, !dbg !10776
  store i64 %sub, i64* %count.addr, align 8, !dbg !10777
  br label %if.end9, !dbg !10778

if.end9:                                          ; preds = %if.then6, %if.end
  %16 = load i8*, i8** %buf.addr, align 8, !dbg !10779
  %17 = load %struct.hid_device*, %struct.hid_device** %hdev, align 8, !dbg !10780
  %rdesc = getelementptr inbounds %struct.hid_device, %struct.hid_device* %17, i32 0, i32 2, !dbg !10781
  %18 = load i8*, i8** %rdesc, align 8, !dbg !10781
  %19 = load i64, i64* %off.addr, align 8, !dbg !10782
  %add.ptr10 = getelementptr i8, i8* %18, i64 %19, !dbg !10783
  %20 = load i64, i64* %count.addr, align 8, !dbg !10784
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %16, i8* align 1 %add.ptr10, i64 %20, i1 false), !dbg !10785
  %21 = load i64, i64* %count.addr, align 8, !dbg !10786
  store i64 %21, i64* %retval, align 8, !dbg !10787
  br label %return, !dbg !10787

return:                                           ; preds = %if.end9, %if.then
  %22 = load i64, i64* %retval, align 8, !dbg !10788
  ret i64 %22, !dbg !10788
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.device* @kobj_to_dev(%struct.kobject* %kobj) #0 !dbg !10789 {
entry:
  %kobj.addr = alloca %struct.kobject*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.device*, align 8
  store %struct.kobject* %kobj, %struct.kobject** %kobj.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.kobject** %kobj.addr, metadata !10792, metadata !DIExpression()), !dbg !10793
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !10794, metadata !DIExpression()), !dbg !10796
  %0 = load %struct.kobject*, %struct.kobject** %kobj.addr, align 8, !dbg !10796
  %1 = bitcast %struct.kobject* %0 to i8*, !dbg !10796
  store i8* %1, i8** %__mptr, align 8, !dbg !10796
  br label %do.body, !dbg !10796

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !10797

do.end:                                           ; preds = %do.body
  %2 = load i8*, i8** %__mptr, align 8, !dbg !10796
  %add.ptr = getelementptr i8, i8* %2, i64 0, !dbg !10796
  %3 = bitcast i8* %add.ptr to %struct.device*, !dbg !10796
  store %struct.device* %3, %struct.device** %tmp, align 8, !dbg !10797
  %4 = load %struct.device*, %struct.device** %tmp, align 8, !dbg !10796
  ret %struct.device* %4, !dbg !10799
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @new_id_store(%struct.device_driver* %drv, i8* %buf, i64 %count) #0 !dbg !10800 {
entry:
  %lock.addr.i16 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i16, metadata !7816, metadata !DIExpression()), !dbg !10801
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !7830, metadata !DIExpression()), !dbg !10803
  %retval = alloca i64, align 8
  %drv.addr = alloca %struct.device_driver*, align 8
  %buf.addr = alloca i8*, align 8
  %count.addr = alloca i64, align 8
  %hdrv = alloca %struct.hid_driver*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.hid_driver*, align 8
  %dynid = alloca %struct.hid_dynid*, align 8
  %bus = alloca i32, align 4
  %vendor = alloca i32, align 4
  %product = alloca i32, align 4
  %driver_data = alloca i64, align 8
  %ret = alloca i32, align 4
  store %struct.device_driver* %drv, %struct.device_driver** %drv.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device_driver** %drv.addr, metadata !10805, metadata !DIExpression()), !dbg !10806
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !10807, metadata !DIExpression()), !dbg !10808
  store i64 %count, i64* %count.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %count.addr, metadata !10809, metadata !DIExpression()), !dbg !10810
  call void @llvm.dbg.declare(metadata %struct.hid_driver** %hdrv, metadata !10811, metadata !DIExpression()), !dbg !10812
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !10813, metadata !DIExpression()), !dbg !10815
  %0 = load %struct.device_driver*, %struct.device_driver** %drv.addr, align 8, !dbg !10815
  %1 = bitcast %struct.device_driver* %0 to i8*, !dbg !10815
  store i8* %1, i8** %__mptr, align 8, !dbg !10815
  br label %do.body, !dbg !10815

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !10816

do.end:                                           ; preds = %do.body
  %2 = load i8*, i8** %__mptr, align 8, !dbg !10815
  %add.ptr = getelementptr i8, i8* %2, i64 -160, !dbg !10815
  %3 = bitcast i8* %add.ptr to %struct.hid_driver*, !dbg !10815
  store %struct.hid_driver* %3, %struct.hid_driver** %tmp, align 8, !dbg !10816
  %4 = load %struct.hid_driver*, %struct.hid_driver** %tmp, align 8, !dbg !10815
  store %struct.hid_driver* %4, %struct.hid_driver** %hdrv, align 8, !dbg !10812
  call void @llvm.dbg.declare(metadata %struct.hid_dynid** %dynid, metadata !10818, metadata !DIExpression()), !dbg !10819
  call void @llvm.dbg.declare(metadata i32* %bus, metadata !10820, metadata !DIExpression()), !dbg !10821
  call void @llvm.dbg.declare(metadata i32* %vendor, metadata !10822, metadata !DIExpression()), !dbg !10823
  call void @llvm.dbg.declare(metadata i32* %product, metadata !10824, metadata !DIExpression()), !dbg !10825
  call void @llvm.dbg.declare(metadata i64* %driver_data, metadata !10826, metadata !DIExpression()), !dbg !10827
  store i64 0, i64* %driver_data, align 8, !dbg !10827
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !10828, metadata !DIExpression()), !dbg !10829
  %5 = load i8*, i8** %buf.addr, align 8, !dbg !10830
  %call = call i32 (i8*, i8*, ...) @sscanf(i8* %5, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.81, i64 0, i64 0), i32* %bus, i32* %vendor, i32* %product, i64* %driver_data) #9, !dbg !10831
  store i32 %call, i32* %ret, align 4, !dbg !10832
  %6 = load i32, i32* %ret, align 4, !dbg !10833
  %cmp = icmp slt i32 %6, 3, !dbg !10835
  br i1 %cmp, label %if.then, label %if.end, !dbg !10836

if.then:                                          ; preds = %do.end
  store i64 -22, i64* %retval, align 8, !dbg !10837
  br label %return, !dbg !10837

if.end:                                           ; preds = %do.end
  %call1 = call i8* @kzalloc(i64 40, i32 3264) #9, !dbg !10838
  %7 = bitcast i8* %call1 to %struct.hid_dynid*, !dbg !10838
  store %struct.hid_dynid* %7, %struct.hid_dynid** %dynid, align 8, !dbg !10839
  %8 = load %struct.hid_dynid*, %struct.hid_dynid** %dynid, align 8, !dbg !10840
  %tobool = icmp ne %struct.hid_dynid* %8, null, !dbg !10840
  br i1 %tobool, label %if.end3, label %if.then2, !dbg !10842

if.then2:                                         ; preds = %if.end
  store i64 -12, i64* %retval, align 8, !dbg !10843
  br label %return, !dbg !10843

if.end3:                                          ; preds = %if.end
  %9 = load i32, i32* %bus, align 4, !dbg !10844
  %conv = trunc i32 %9 to i16, !dbg !10844
  %10 = load %struct.hid_dynid*, %struct.hid_dynid** %dynid, align 8, !dbg !10845
  %id = getelementptr inbounds %struct.hid_dynid, %struct.hid_dynid* %10, i32 0, i32 1, !dbg !10846
  %bus4 = getelementptr inbounds %struct.hid_device_id, %struct.hid_device_id* %id, i32 0, i32 0, !dbg !10847
  store i16 %conv, i16* %bus4, align 8, !dbg !10848
  %11 = load %struct.hid_dynid*, %struct.hid_dynid** %dynid, align 8, !dbg !10849
  %id5 = getelementptr inbounds %struct.hid_dynid, %struct.hid_dynid* %11, i32 0, i32 1, !dbg !10850
  %group = getelementptr inbounds %struct.hid_device_id, %struct.hid_device_id* %id5, i32 0, i32 1, !dbg !10851
  store i16 0, i16* %group, align 2, !dbg !10852
  %12 = load i32, i32* %vendor, align 4, !dbg !10853
  %13 = load %struct.hid_dynid*, %struct.hid_dynid** %dynid, align 8, !dbg !10854
  %id6 = getelementptr inbounds %struct.hid_dynid, %struct.hid_dynid* %13, i32 0, i32 1, !dbg !10855
  %vendor7 = getelementptr inbounds %struct.hid_device_id, %struct.hid_device_id* %id6, i32 0, i32 2, !dbg !10856
  store i32 %12, i32* %vendor7, align 4, !dbg !10857
  %14 = load i32, i32* %product, align 4, !dbg !10858
  %15 = load %struct.hid_dynid*, %struct.hid_dynid** %dynid, align 8, !dbg !10859
  %id8 = getelementptr inbounds %struct.hid_dynid, %struct.hid_dynid* %15, i32 0, i32 1, !dbg !10860
  %product9 = getelementptr inbounds %struct.hid_device_id, %struct.hid_device_id* %id8, i32 0, i32 3, !dbg !10861
  store i32 %14, i32* %product9, align 8, !dbg !10862
  %16 = load i64, i64* %driver_data, align 8, !dbg !10863
  %17 = load %struct.hid_dynid*, %struct.hid_dynid** %dynid, align 8, !dbg !10864
  %id10 = getelementptr inbounds %struct.hid_dynid, %struct.hid_dynid* %17, i32 0, i32 1, !dbg !10865
  %driver_data11 = getelementptr inbounds %struct.hid_device_id, %struct.hid_device_id* %id10, i32 0, i32 4, !dbg !10866
  store i64 %16, i64* %driver_data11, align 8, !dbg !10867
  %18 = load %struct.hid_driver*, %struct.hid_driver** %hdrv, align 8, !dbg !10868
  %dyn_lock = getelementptr inbounds %struct.hid_driver, %struct.hid_driver* %18, i32 0, i32 3, !dbg !10869
  store %struct.spinlock* %dyn_lock, %struct.spinlock** %lock.addr.i, align 8
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !10870, !srcloc !7844
  %19 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !10871
  %20 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %19, i32 0, i32 0, !dbg !10871
  %rlock.i = bitcast %union.anon.1* %20 to %struct.raw_spinlock*, !dbg !10871
  %21 = load %struct.hid_dynid*, %struct.hid_dynid** %dynid, align 8, !dbg !10872
  %list = getelementptr inbounds %struct.hid_dynid, %struct.hid_dynid* %21, i32 0, i32 0, !dbg !10873
  %22 = load %struct.hid_driver*, %struct.hid_driver** %hdrv, align 8, !dbg !10874
  %dyn_list = getelementptr inbounds %struct.hid_driver, %struct.hid_driver* %22, i32 0, i32 2, !dbg !10875
  call void @list_add_tail(%struct.list_head* %list, %struct.list_head* %dyn_list) #9, !dbg !10876
  %23 = load %struct.hid_driver*, %struct.hid_driver** %hdrv, align 8, !dbg !10877
  %dyn_lock12 = getelementptr inbounds %struct.hid_driver, %struct.hid_driver* %23, i32 0, i32 3, !dbg !10878
  store %struct.spinlock* %dyn_lock12, %struct.spinlock** %lock.addr.i16, align 8
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !10879, !srcloc !7863
  %24 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i16, align 8, !dbg !10880
  %25 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %24, i32 0, i32 0, !dbg !10880
  %rlock.i17 = bitcast %union.anon.1* %25 to %struct.raw_spinlock*, !dbg !10880
  %26 = load %struct.hid_driver*, %struct.hid_driver** %hdrv, align 8, !dbg !10881
  %driver = getelementptr inbounds %struct.hid_driver, %struct.hid_driver* %26, i32 0, i32 20, !dbg !10882
  %call13 = call i32 @driver_attach(%struct.device_driver* %driver) #9, !dbg !10883
  store i32 %call13, i32* %ret, align 4, !dbg !10884
  %27 = load i32, i32* %ret, align 4, !dbg !10885
  %tobool14 = icmp ne i32 %27, 0, !dbg !10885
  br i1 %tobool14, label %cond.true, label %cond.false, !dbg !10885

cond.true:                                        ; preds = %if.end3
  %conv15 = sext i32 %27 to i64, !dbg !10885
  br label %cond.end, !dbg !10885

cond.false:                                       ; preds = %if.end3
  %28 = load i64, i64* %count.addr, align 8, !dbg !10886
  br label %cond.end, !dbg !10885

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ %conv15, %cond.true ], [ %28, %cond.false ], !dbg !10885
  store i64 %cond, i64* %retval, align 8, !dbg !10887
  br label %return, !dbg !10887

return:                                           ; preds = %cond.end, %if.then2, %if.then
  %29 = load i64, i64* %retval, align 8, !dbg !10888
  ret i64 %29, !dbg !10888
}

; Function Attrs: noredzone
declare dso_local i32 @sscanf(i8*, i8*, ...) #2

; Function Attrs: noredzone
declare dso_local i32 @driver_attach(%struct.device_driver*) #2

; Function Attrs: noredzone
declare dso_local i32 @add_uevent_var(%struct.kobj_uevent_env*, i8*, ...) #2

; Function Attrs: noredzone
declare dso_local i32 @down_interruptible(%struct.semaphore*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @clear_bit(i64 %nr, i64* %addr) #0 !dbg !10889 {
entry:
  %nr.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %nr.addr.i, metadata !10895, metadata !DIExpression()), !dbg !10897
  %addr.addr.i = alloca i64*, align 8
  call void @llvm.dbg.declare(metadata i64** %addr.addr.i, metadata !10899, metadata !DIExpression()), !dbg !10900
  %v.addr.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %v.addr.i, metadata !10901, metadata !DIExpression()), !dbg !10903
  %size.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i, metadata !10905, metadata !DIExpression()), !dbg !10906
  %nr.addr = alloca i64, align 8
  %addr.addr = alloca i64*, align 8
  store i64 %nr, i64* %nr.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %nr.addr, metadata !10907, metadata !DIExpression()), !dbg !10908
  store i64* %addr, i64** %addr.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %addr.addr, metadata !10909, metadata !DIExpression()), !dbg !10910
  %0 = load i64*, i64** %addr.addr, align 8, !dbg !10911
  %1 = load i64, i64* %nr.addr, align 8, !dbg !10912
  %div = sdiv i64 %1, 64, !dbg !10912
  %add.ptr = getelementptr i64, i64* %0, i64 %div, !dbg !10913
  %2 = bitcast i64* %add.ptr to i8*, !dbg !10911
  store i8* %2, i8** %v.addr.i, align 8
  store i64 8, i64* %size.addr.i, align 8
  %3 = load i8*, i8** %v.addr.i, align 8, !dbg !10914
  %4 = load i64, i64* %size.addr.i, align 8, !dbg !10915
  %conv.i = trunc i64 %4 to i32, !dbg !10915
  %call.i = call zeroext i1 @kasan_check_write(i8* %3, i32 %conv.i) #12, !dbg !10916
  %5 = load i8*, i8** %v.addr.i, align 8, !dbg !10917
  %6 = load i64, i64* %size.addr.i, align 8, !dbg !10917
  call void @kcsan_check_access(i8* %5, i64 %6, i32 5) #12, !dbg !10917
  %7 = load i64, i64* %nr.addr, align 8, !dbg !10918
  %8 = load i64*, i64** %addr.addr, align 8, !dbg !10919
  store i64 %7, i64* %nr.addr.i, align 8
  store i64* %8, i64** %addr.addr.i, align 8
  %9 = load i64, i64* %nr.addr.i, align 8, !dbg !10920
  %10 = call i1 @llvm.is.constant.i64(i64 %9) #10, !dbg !10922
  br i1 %10, label %if.then.i, label %if.else.i, !dbg !10923

if.then.i:                                        ; preds = %entry
  %11 = load i64*, i64** %addr.addr.i, align 8, !dbg !10924
  %12 = bitcast i64* %11 to i8*, !dbg !10924
  %13 = load i64, i64* %nr.addr.i, align 8, !dbg !10924
  %shr.i = ashr i64 %13, 3, !dbg !10924
  %add.ptr.i = getelementptr i8, i8* %12, i64 %shr.i, !dbg !10924
  %14 = load i64, i64* %nr.addr.i, align 8, !dbg !10926
  %and.i = and i64 %14, 7, !dbg !10926
  %sh_prom.i = trunc i64 %and.i to i32, !dbg !10926
  %shl.i = shl i32 1, %sh_prom.i, !dbg !10926
  %neg.i = xor i32 %shl.i, -1, !dbg !10927
  call void asm sideeffect "andb ${1:b},$0", "=*m,iq,*m,~{dirflag},~{fpsr},~{flags}"(i8* %add.ptr.i, i32 %neg.i, i8* %add.ptr.i) #10, !dbg !10928, !srcloc !10929
  br label %arch_clear_bit.exit, !dbg !10930

if.else.i:                                        ; preds = %entry
  %15 = load i64*, i64** %addr.addr.i, align 8, !dbg !10931
  %16 = load i64, i64* %nr.addr.i, align 8, !dbg !10933
  call void asm sideeffect " btrq  $1,$0", "*m,Ir,~{memory},~{dirflag},~{fpsr},~{flags}"(i64* %15, i64 %16) #10, !dbg !10934, !srcloc !10935
  br label %arch_clear_bit.exit

arch_clear_bit.exit:                              ; preds = %if.then.i, %if.else.i
  ret void, !dbg !10936
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @kasan_check_write(i8* %p, i32 %size) #0 !dbg !10937 {
entry:
  %p.addr = alloca i8*, align 8
  %size.addr = alloca i32, align 4
  store i8* %p, i8** %p.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %p.addr, metadata !10941, metadata !DIExpression()), !dbg !10942
  store i32 %size, i32* %size.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %size.addr, metadata !10943, metadata !DIExpression()), !dbg !10944
  ret i1 true, !dbg !10945
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @kcsan_check_access(i8* %ptr, i64 %size, i32 %type) #0 !dbg !10946 {
entry:
  %ptr.addr = alloca i8*, align 8
  %size.addr = alloca i64, align 8
  %type.addr = alloca i32, align 4
  store i8* %ptr, i8** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %ptr.addr, metadata !10950, metadata !DIExpression()), !dbg !10951
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !10952, metadata !DIExpression()), !dbg !10953
  store i32 %type, i32* %type.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %type.addr, metadata !10954, metadata !DIExpression()), !dbg !10955
  ret void, !dbg !10956
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @hid_scan_main(%struct.hid_parser* %parser, %struct.hid_item* %item) #0 !dbg !10957 {
entry:
  %parser.addr = alloca %struct.hid_parser*, align 8
  %item.addr = alloca %struct.hid_item*, align 8
  %data = alloca i32, align 4
  %i = alloca i32, align 4
  store %struct.hid_parser* %parser, %struct.hid_parser** %parser.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.hid_parser** %parser.addr, metadata !10958, metadata !DIExpression()), !dbg !10959
  store %struct.hid_item* %item, %struct.hid_item** %item.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.hid_item** %item.addr, metadata !10960, metadata !DIExpression()), !dbg !10961
  call void @llvm.dbg.declare(metadata i32* %data, metadata !10962, metadata !DIExpression()), !dbg !10963
  call void @llvm.dbg.declare(metadata i32* %i, metadata !10964, metadata !DIExpression()), !dbg !10965
  %0 = load %struct.hid_parser*, %struct.hid_parser** %parser.addr, align 8, !dbg !10966
  call void @hid_concatenate_last_usage_page(%struct.hid_parser* %0) #9, !dbg !10967
  %1 = load %struct.hid_item*, %struct.hid_item** %item.addr, align 8, !dbg !10968
  %call = call i32 @item_udata(%struct.hid_item* %1) #9, !dbg !10969
  store i32 %call, i32* %data, align 4, !dbg !10970
  %2 = load %struct.hid_item*, %struct.hid_item** %item.addr, align 8, !dbg !10971
  %tag = getelementptr inbounds %struct.hid_item, %struct.hid_item* %2, i32 0, i32 3, !dbg !10972
  %3 = load i8, i8* %tag, align 2, !dbg !10972
  %conv = zext i8 %3 to i32, !dbg !10971
  switch i32 %conv, label %sw.epilog [
    i32 10, label %sw.bb
    i32 12, label %sw.bb1
    i32 8, label %sw.bb2
    i32 9, label %sw.bb6
    i32 11, label %sw.bb7
  ], !dbg !10973

sw.bb:                                            ; preds = %entry
  %4 = load %struct.hid_parser*, %struct.hid_parser** %parser.addr, align 8, !dbg !10974
  %5 = load i32, i32* %data, align 4, !dbg !10976
  %and = and i32 %5, 255, !dbg !10977
  call void @hid_scan_collection(%struct.hid_parser* %4, i32 %and) #9, !dbg !10978
  br label %sw.epilog, !dbg !10979

sw.bb1:                                           ; preds = %entry
  br label %sw.epilog, !dbg !10980

sw.bb2:                                           ; preds = %entry
  %6 = load i32, i32* %data, align 4, !dbg !10981
  %and3 = and i32 %6, 1, !dbg !10983
  %tobool = icmp ne i32 %and3, 0, !dbg !10983
  br i1 %tobool, label %if.then, label %if.end, !dbg !10984

if.then:                                          ; preds = %sw.bb2
  br label %sw.epilog, !dbg !10985

if.end:                                           ; preds = %sw.bb2
  store i32 0, i32* %i, align 4, !dbg !10986
  br label %for.cond, !dbg !10988

for.cond:                                         ; preds = %for.inc, %if.end
  %7 = load i32, i32* %i, align 4, !dbg !10989
  %8 = load %struct.hid_parser*, %struct.hid_parser** %parser.addr, align 8, !dbg !10991
  %local = getelementptr inbounds %struct.hid_parser, %struct.hid_parser* %8, i32 0, i32 3, !dbg !10992
  %usage_index = getelementptr inbounds %struct.hid_local, %struct.hid_local* %local, i32 0, i32 3, !dbg !10993
  %9 = load i32, i32* %usage_index, align 4, !dbg !10993
  %cmp = icmp ult i32 %7, %9, !dbg !10994
  br i1 %cmp, label %for.body, label %for.end, !dbg !10995

for.body:                                         ; preds = %for.cond
  %10 = load %struct.hid_parser*, %struct.hid_parser** %parser.addr, align 8, !dbg !10996
  %11 = load %struct.hid_parser*, %struct.hid_parser** %parser.addr, align 8, !dbg !10997
  %local5 = getelementptr inbounds %struct.hid_parser, %struct.hid_parser* %11, i32 0, i32 3, !dbg !10998
  %usage = getelementptr inbounds %struct.hid_local, %struct.hid_local* %local5, i32 0, i32 0, !dbg !10999
  %12 = load i32, i32* %i, align 4, !dbg !11000
  %idxprom = sext i32 %12 to i64, !dbg !10997
  %arrayidx = getelementptr [12288 x i32], [12288 x i32]* %usage, i64 0, i64 %idxprom, !dbg !10997
  %13 = load i32, i32* %arrayidx, align 4, !dbg !10997
  call void @hid_scan_input_usage(%struct.hid_parser* %10, i32 %13) #9, !dbg !11001
  br label %for.inc, !dbg !11001

for.inc:                                          ; preds = %for.body
  %14 = load i32, i32* %i, align 4, !dbg !11002
  %inc = add i32 %14, 1, !dbg !11002
  store i32 %inc, i32* %i, align 4, !dbg !11002
  br label %for.cond, !dbg !11003, !llvm.loop !11004

for.end:                                          ; preds = %for.cond
  br label %sw.epilog, !dbg !11006

sw.bb6:                                           ; preds = %entry
  br label %sw.epilog, !dbg !11007

sw.bb7:                                           ; preds = %entry
  store i32 0, i32* %i, align 4, !dbg !11008
  br label %for.cond8, !dbg !11010

for.cond8:                                        ; preds = %for.inc18, %sw.bb7
  %15 = load i32, i32* %i, align 4, !dbg !11011
  %16 = load %struct.hid_parser*, %struct.hid_parser** %parser.addr, align 8, !dbg !11013
  %local9 = getelementptr inbounds %struct.hid_parser, %struct.hid_parser* %16, i32 0, i32 3, !dbg !11014
  %usage_index10 = getelementptr inbounds %struct.hid_local, %struct.hid_local* %local9, i32 0, i32 3, !dbg !11015
  %17 = load i32, i32* %usage_index10, align 4, !dbg !11015
  %cmp11 = icmp ult i32 %15, %17, !dbg !11016
  br i1 %cmp11, label %for.body13, label %for.end20, !dbg !11017

for.body13:                                       ; preds = %for.cond8
  %18 = load %struct.hid_parser*, %struct.hid_parser** %parser.addr, align 8, !dbg !11018
  %19 = load %struct.hid_parser*, %struct.hid_parser** %parser.addr, align 8, !dbg !11019
  %local14 = getelementptr inbounds %struct.hid_parser, %struct.hid_parser* %19, i32 0, i32 3, !dbg !11020
  %usage15 = getelementptr inbounds %struct.hid_local, %struct.hid_local* %local14, i32 0, i32 0, !dbg !11021
  %20 = load i32, i32* %i, align 4, !dbg !11022
  %idxprom16 = sext i32 %20 to i64, !dbg !11019
  %arrayidx17 = getelementptr [12288 x i32], [12288 x i32]* %usage15, i64 0, i64 %idxprom16, !dbg !11019
  %21 = load i32, i32* %arrayidx17, align 4, !dbg !11019
  call void @hid_scan_feature_usage(%struct.hid_parser* %18, i32 %21) #9, !dbg !11023
  br label %for.inc18, !dbg !11023

for.inc18:                                        ; preds = %for.body13
  %22 = load i32, i32* %i, align 4, !dbg !11024
  %inc19 = add i32 %22, 1, !dbg !11024
  store i32 %inc19, i32* %i, align 4, !dbg !11024
  br label %for.cond8, !dbg !11025, !llvm.loop !11026

for.end20:                                        ; preds = %for.cond8
  br label %sw.epilog, !dbg !11028

sw.epilog:                                        ; preds = %entry, %for.end20, %sw.bb6, %for.end, %if.then, %sw.bb1, %sw.bb
  %23 = load %struct.hid_parser*, %struct.hid_parser** %parser.addr, align 8, !dbg !11029
  %local21 = getelementptr inbounds %struct.hid_parser, %struct.hid_parser* %23, i32 0, i32 3, !dbg !11030
  %24 = bitcast %struct.hid_local* %local21 to i8*, !dbg !11031
  call void @llvm.memset.p0i8.i64(i8* align 4 %24, i8 0, i64 110608, i1 false), !dbg !11031
  ret i32 0, !dbg !11032
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @hid_scan_collection(%struct.hid_parser* %parser, i32 %type) #0 !dbg !11033 {
entry:
  %parser.addr = alloca %struct.hid_parser*, align 8
  %type.addr = alloca i32, align 4
  %hid = alloca %struct.hid_device*, align 8
  %i = alloca i32, align 4
  store %struct.hid_parser* %parser, %struct.hid_parser** %parser.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.hid_parser** %parser.addr, metadata !11034, metadata !DIExpression()), !dbg !11035
  store i32 %type, i32* %type.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %type.addr, metadata !11036, metadata !DIExpression()), !dbg !11037
  call void @llvm.dbg.declare(metadata %struct.hid_device** %hid, metadata !11038, metadata !DIExpression()), !dbg !11039
  %0 = load %struct.hid_parser*, %struct.hid_parser** %parser.addr, align 8, !dbg !11040
  %device = getelementptr inbounds %struct.hid_parser, %struct.hid_parser* %0, i32 0, i32 7, !dbg !11041
  %1 = load %struct.hid_device*, %struct.hid_device** %device, align 8, !dbg !11041
  store %struct.hid_device* %1, %struct.hid_device** %hid, align 8, !dbg !11039
  call void @llvm.dbg.declare(metadata i32* %i, metadata !11042, metadata !DIExpression()), !dbg !11043
  %2 = load %struct.hid_parser*, %struct.hid_parser** %parser.addr, align 8, !dbg !11044
  %global = getelementptr inbounds %struct.hid_parser, %struct.hid_parser* %2, i32 0, i32 0, !dbg !11046
  %usage_page = getelementptr inbounds %struct.hid_global, %struct.hid_global* %global, i32 0, i32 0, !dbg !11047
  %3 = load i32, i32* %usage_page, align 8, !dbg !11047
  %shl = shl i32 %3, 16, !dbg !11048
  %cmp = icmp eq i32 %shl, 2097152, !dbg !11049
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !11050

land.lhs.true:                                    ; preds = %entry
  %4 = load i32, i32* %type.addr, align 4, !dbg !11051
  %cmp1 = icmp eq i32 %4, 0, !dbg !11052
  br i1 %cmp1, label %if.then, label %if.end, !dbg !11053

if.then:                                          ; preds = %land.lhs.true
  %5 = load %struct.hid_device*, %struct.hid_device** %hid, align 8, !dbg !11054
  %group = getelementptr inbounds %struct.hid_device, %struct.hid_device* %5, i32 0, i32 9, !dbg !11055
  store i16 3, i16* %group, align 2, !dbg !11056
  br label %if.end, !dbg !11054

if.end:                                           ; preds = %if.then, %land.lhs.true, %entry
  %6 = load %struct.hid_device*, %struct.hid_device** %hid, align 8, !dbg !11057
  %vendor = getelementptr inbounds %struct.hid_device, %struct.hid_device* %6, i32 0, i32 10, !dbg !11059
  %7 = load i32, i32* %vendor, align 8, !dbg !11059
  %cmp2 = icmp eq i32 %7, 1118, !dbg !11060
  br i1 %cmp2, label %land.lhs.true3, label %if.end11, !dbg !11061

land.lhs.true3:                                   ; preds = %if.end
  %8 = load %struct.hid_device*, %struct.hid_device** %hid, align 8, !dbg !11062
  %product = getelementptr inbounds %struct.hid_device, %struct.hid_device* %8, i32 0, i32 11, !dbg !11063
  %9 = load i32, i32* %product, align 4, !dbg !11063
  %cmp4 = icmp eq i32 %9, 2010, !dbg !11064
  br i1 %cmp4, label %land.lhs.true5, label %if.end11, !dbg !11065

land.lhs.true5:                                   ; preds = %land.lhs.true3
  %10 = load %struct.hid_device*, %struct.hid_device** %hid, align 8, !dbg !11066
  %group6 = getelementptr inbounds %struct.hid_device, %struct.hid_device* %10, i32 0, i32 9, !dbg !11067
  %11 = load i16, i16* %group6, align 2, !dbg !11067
  %conv = zext i16 %11 to i32, !dbg !11066
  %cmp7 = icmp eq i32 %conv, 2, !dbg !11068
  br i1 %cmp7, label %if.then9, label %if.end11, !dbg !11069

if.then9:                                         ; preds = %land.lhs.true5
  %12 = load %struct.hid_device*, %struct.hid_device** %hid, align 8, !dbg !11070
  %group10 = getelementptr inbounds %struct.hid_device, %struct.hid_device* %12, i32 0, i32 9, !dbg !11071
  store i16 1, i16* %group10, align 2, !dbg !11072
  br label %if.end11, !dbg !11070

if.end11:                                         ; preds = %if.then9, %land.lhs.true5, %land.lhs.true3, %if.end
  %13 = load %struct.hid_parser*, %struct.hid_parser** %parser.addr, align 8, !dbg !11073
  %global12 = getelementptr inbounds %struct.hid_parser, %struct.hid_parser* %13, i32 0, i32 0, !dbg !11075
  %usage_page13 = getelementptr inbounds %struct.hid_global, %struct.hid_global* %global12, i32 0, i32 0, !dbg !11076
  %14 = load i32, i32* %usage_page13, align 8, !dbg !11076
  %shl14 = shl i32 %14, 16, !dbg !11077
  %cmp15 = icmp eq i32 %shl14, 65536, !dbg !11078
  br i1 %cmp15, label %if.then17, label %if.end27, !dbg !11079

if.then17:                                        ; preds = %if.end11
  store i32 0, i32* %i, align 4, !dbg !11080
  br label %for.cond, !dbg !11082

for.cond:                                         ; preds = %for.inc, %if.then17
  %15 = load i32, i32* %i, align 4, !dbg !11083
  %16 = load %struct.hid_parser*, %struct.hid_parser** %parser.addr, align 8, !dbg !11085
  %local = getelementptr inbounds %struct.hid_parser, %struct.hid_parser* %16, i32 0, i32 3, !dbg !11086
  %usage_index = getelementptr inbounds %struct.hid_local, %struct.hid_local* %local, i32 0, i32 3, !dbg !11087
  %17 = load i32, i32* %usage_index, align 4, !dbg !11087
  %cmp18 = icmp ult i32 %15, %17, !dbg !11088
  br i1 %cmp18, label %for.body, label %for.end, !dbg !11089

for.body:                                         ; preds = %for.cond
  %18 = load %struct.hid_parser*, %struct.hid_parser** %parser.addr, align 8, !dbg !11090
  %local20 = getelementptr inbounds %struct.hid_parser, %struct.hid_parser* %18, i32 0, i32 3, !dbg !11092
  %usage = getelementptr inbounds %struct.hid_local, %struct.hid_local* %local20, i32 0, i32 0, !dbg !11093
  %19 = load i32, i32* %i, align 4, !dbg !11094
  %idxprom = sext i32 %19 to i64, !dbg !11090
  %arrayidx = getelementptr [12288 x i32], [12288 x i32]* %usage, i64 0, i64 %idxprom, !dbg !11090
  %20 = load i32, i32* %arrayidx, align 4, !dbg !11090
  %cmp21 = icmp eq i32 %20, 65537, !dbg !11095
  br i1 %cmp21, label %if.then23, label %if.end26, !dbg !11096

if.then23:                                        ; preds = %for.body
  %21 = load %struct.hid_parser*, %struct.hid_parser** %parser.addr, align 8, !dbg !11097
  %scan_flags = getelementptr inbounds %struct.hid_parser, %struct.hid_parser* %21, i32 0, i32 8, !dbg !11098
  %22 = load i32, i32* %scan_flags, align 8, !dbg !11099
  %conv24 = zext i32 %22 to i64, !dbg !11099
  %or = or i64 %conv24, 4, !dbg !11099
  %conv25 = trunc i64 %or to i32, !dbg !11099
  store i32 %conv25, i32* %scan_flags, align 8, !dbg !11099
  br label %if.end26, !dbg !11097

if.end26:                                         ; preds = %if.then23, %for.body
  br label %for.inc, !dbg !11100

for.inc:                                          ; preds = %if.end26
  %23 = load i32, i32* %i, align 4, !dbg !11101
  %inc = add i32 %23, 1, !dbg !11101
  store i32 %inc, i32* %i, align 4, !dbg !11101
  br label %for.cond, !dbg !11102, !llvm.loop !11103

for.end:                                          ; preds = %for.cond
  br label %if.end27, !dbg !11104

if.end27:                                         ; preds = %for.end, %if.end11
  %24 = load %struct.hid_parser*, %struct.hid_parser** %parser.addr, align 8, !dbg !11105
  %global28 = getelementptr inbounds %struct.hid_parser, %struct.hid_parser* %24, i32 0, i32 0, !dbg !11107
  %usage_page29 = getelementptr inbounds %struct.hid_global, %struct.hid_global* %global28, i32 0, i32 0, !dbg !11108
  %25 = load i32, i32* %usage_page29, align 8, !dbg !11108
  %shl30 = shl i32 %25, 16, !dbg !11109
  %cmp31 = icmp uge i32 %shl30, -16777216, !dbg !11110
  br i1 %cmp31, label %if.then33, label %if.end38, !dbg !11111

if.then33:                                        ; preds = %if.end27
  %26 = load %struct.hid_parser*, %struct.hid_parser** %parser.addr, align 8, !dbg !11112
  %scan_flags34 = getelementptr inbounds %struct.hid_parser, %struct.hid_parser* %26, i32 0, i32 8, !dbg !11113
  %27 = load i32, i32* %scan_flags34, align 8, !dbg !11114
  %conv35 = zext i32 %27 to i64, !dbg !11114
  %or36 = or i64 %conv35, 2, !dbg !11114
  %conv37 = trunc i64 %or36 to i32, !dbg !11114
  store i32 %conv37, i32* %scan_flags34, align 8, !dbg !11114
  br label %if.end38, !dbg !11112

if.end38:                                         ; preds = %if.then33, %if.end27
  %28 = load %struct.hid_parser*, %struct.hid_parser** %parser.addr, align 8, !dbg !11115
  %global39 = getelementptr inbounds %struct.hid_parser, %struct.hid_parser* %28, i32 0, i32 0, !dbg !11117
  %usage_page40 = getelementptr inbounds %struct.hid_global, %struct.hid_global* %global39, i32 0, i32 0, !dbg !11118
  %29 = load i32, i32* %usage_page40, align 8, !dbg !11118
  %shl41 = shl i32 %29, 16, !dbg !11119
  %cmp42 = icmp eq i32 %shl41, -3080192, !dbg !11120
  br i1 %cmp42, label %if.then44, label %if.end64, !dbg !11121

if.then44:                                        ; preds = %if.end38
  store i32 0, i32* %i, align 4, !dbg !11122
  br label %for.cond45, !dbg !11124

for.cond45:                                       ; preds = %for.inc61, %if.then44
  %30 = load i32, i32* %i, align 4, !dbg !11125
  %31 = load %struct.hid_parser*, %struct.hid_parser** %parser.addr, align 8, !dbg !11127
  %local46 = getelementptr inbounds %struct.hid_parser, %struct.hid_parser* %31, i32 0, i32 3, !dbg !11128
  %usage_index47 = getelementptr inbounds %struct.hid_local, %struct.hid_local* %local46, i32 0, i32 3, !dbg !11129
  %32 = load i32, i32* %usage_index47, align 4, !dbg !11129
  %cmp48 = icmp ult i32 %30, %32, !dbg !11130
  br i1 %cmp48, label %for.body50, label %for.end63, !dbg !11131

for.body50:                                       ; preds = %for.cond45
  %33 = load %struct.hid_parser*, %struct.hid_parser** %parser.addr, align 8, !dbg !11132
  %local51 = getelementptr inbounds %struct.hid_parser, %struct.hid_parser* %33, i32 0, i32 3, !dbg !11134
  %usage52 = getelementptr inbounds %struct.hid_local, %struct.hid_local* %local51, i32 0, i32 0, !dbg !11135
  %34 = load i32, i32* %i, align 4, !dbg !11136
  %idxprom53 = sext i32 %34 to i64, !dbg !11132
  %arrayidx54 = getelementptr [12288 x i32], [12288 x i32]* %usage52, i64 0, i64 %idxprom53, !dbg !11132
  %35 = load i32, i32* %arrayidx54, align 4, !dbg !11132
  %cmp55 = icmp eq i32 %35, -3080191, !dbg !11137
  br i1 %cmp55, label %if.then57, label %if.end60, !dbg !11138

if.then57:                                        ; preds = %for.body50
  %36 = load %struct.hid_parser*, %struct.hid_parser** %parser.addr, align 8, !dbg !11139
  %device58 = getelementptr inbounds %struct.hid_parser, %struct.hid_parser* %36, i32 0, i32 7, !dbg !11140
  %37 = load %struct.hid_device*, %struct.hid_device** %device58, align 8, !dbg !11140
  %group59 = getelementptr inbounds %struct.hid_device, %struct.hid_device* %37, i32 0, i32 9, !dbg !11141
  store i16 261, i16* %group59, align 2, !dbg !11142
  br label %if.end60, !dbg !11139

if.end60:                                         ; preds = %if.then57, %for.body50
  br label %for.inc61, !dbg !11143

for.inc61:                                        ; preds = %if.end60
  %38 = load i32, i32* %i, align 4, !dbg !11144
  %inc62 = add i32 %38, 1, !dbg !11144
  store i32 %inc62, i32* %i, align 4, !dbg !11144
  br label %for.cond45, !dbg !11145, !llvm.loop !11146

for.end63:                                        ; preds = %for.cond45
  br label %if.end64, !dbg !11147

if.end64:                                         ; preds = %for.end63, %if.end38
  ret void, !dbg !11148
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @hid_scan_input_usage(%struct.hid_parser* %parser, i32 %usage) #0 !dbg !11149 {
entry:
  %parser.addr = alloca %struct.hid_parser*, align 8
  %usage.addr = alloca i32, align 4
  %hid = alloca %struct.hid_device*, align 8
  store %struct.hid_parser* %parser, %struct.hid_parser** %parser.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.hid_parser** %parser.addr, metadata !11152, metadata !DIExpression()), !dbg !11153
  store i32 %usage, i32* %usage.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %usage.addr, metadata !11154, metadata !DIExpression()), !dbg !11155
  call void @llvm.dbg.declare(metadata %struct.hid_device** %hid, metadata !11156, metadata !DIExpression()), !dbg !11157
  %0 = load %struct.hid_parser*, %struct.hid_parser** %parser.addr, align 8, !dbg !11158
  %device = getelementptr inbounds %struct.hid_parser, %struct.hid_parser* %0, i32 0, i32 7, !dbg !11159
  %1 = load %struct.hid_device*, %struct.hid_device** %device, align 8, !dbg !11159
  store %struct.hid_device* %1, %struct.hid_device** %hid, align 8, !dbg !11157
  %2 = load i32, i32* %usage.addr, align 4, !dbg !11160
  %cmp = icmp eq i32 %2, 852049, !dbg !11162
  br i1 %cmp, label %if.then, label %if.end, !dbg !11163

if.then:                                          ; preds = %entry
  %3 = load %struct.hid_device*, %struct.hid_device** %hid, align 8, !dbg !11164
  %group = getelementptr inbounds %struct.hid_device, %struct.hid_device* %3, i32 0, i32 9, !dbg !11165
  store i16 2, i16* %group, align 2, !dbg !11166
  br label %if.end, !dbg !11164

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !11167
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @hid_scan_feature_usage(%struct.hid_parser* %parser, i32 %usage) #0 !dbg !11168 {
entry:
  %parser.addr = alloca %struct.hid_parser*, align 8
  %usage.addr = alloca i32, align 4
  store %struct.hid_parser* %parser, %struct.hid_parser** %parser.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.hid_parser** %parser.addr, metadata !11169, metadata !DIExpression()), !dbg !11170
  store i32 %usage, i32* %usage.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %usage.addr, metadata !11171, metadata !DIExpression()), !dbg !11172
  %0 = load i32, i32* %usage.addr, align 4, !dbg !11173
  %cmp = icmp eq i32 %0, -16777019, !dbg !11175
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !11176

land.lhs.true:                                    ; preds = %entry
  %1 = load %struct.hid_parser*, %struct.hid_parser** %parser.addr, align 8, !dbg !11177
  %global = getelementptr inbounds %struct.hid_parser, %struct.hid_parser* %1, i32 0, i32 0, !dbg !11178
  %report_count = getelementptr inbounds %struct.hid_global, %struct.hid_global* %global, i32 0, i32 9, !dbg !11179
  %2 = load i32, i32* %report_count, align 4, !dbg !11179
  %cmp1 = icmp eq i32 %2, 256, !dbg !11180
  br i1 %cmp1, label %land.lhs.true2, label %if.end, !dbg !11181

land.lhs.true2:                                   ; preds = %land.lhs.true
  %3 = load %struct.hid_parser*, %struct.hid_parser** %parser.addr, align 8, !dbg !11182
  %global3 = getelementptr inbounds %struct.hid_parser, %struct.hid_parser* %3, i32 0, i32 0, !dbg !11183
  %report_size = getelementptr inbounds %struct.hid_global, %struct.hid_global* %global3, i32 0, i32 8, !dbg !11184
  %4 = load i32, i32* %report_size, align 8, !dbg !11184
  %cmp4 = icmp eq i32 %4, 8, !dbg !11185
  br i1 %cmp4, label %if.then, label %if.end, !dbg !11186

if.then:                                          ; preds = %land.lhs.true2
  %5 = load %struct.hid_parser*, %struct.hid_parser** %parser.addr, align 8, !dbg !11187
  %scan_flags = getelementptr inbounds %struct.hid_parser, %struct.hid_parser* %5, i32 0, i32 8, !dbg !11188
  %6 = load i32, i32* %scan_flags, align 8, !dbg !11189
  %conv = zext i32 %6 to i64, !dbg !11189
  %or = or i64 %conv, 1, !dbg !11189
  %conv5 = trunc i64 %or to i32, !dbg !11189
  store i32 %conv5, i32* %scan_flags, align 8, !dbg !11189
  br label %if.end, !dbg !11187

if.end:                                           ; preds = %if.then, %land.lhs.true2, %land.lhs.true, %entry
  %7 = load i32, i32* %usage.addr, align 4, !dbg !11190
  %cmp6 = icmp eq i32 %7, -16777018, !dbg !11192
  br i1 %cmp6, label %land.lhs.true8, label %if.end23, !dbg !11193

land.lhs.true8:                                   ; preds = %if.end
  %8 = load %struct.hid_parser*, %struct.hid_parser** %parser.addr, align 8, !dbg !11194
  %global9 = getelementptr inbounds %struct.hid_parser, %struct.hid_parser* %8, i32 0, i32 0, !dbg !11195
  %report_count10 = getelementptr inbounds %struct.hid_global, %struct.hid_global* %global9, i32 0, i32 9, !dbg !11196
  %9 = load i32, i32* %report_count10, align 4, !dbg !11196
  %cmp11 = icmp eq i32 %9, 1, !dbg !11197
  br i1 %cmp11, label %land.lhs.true13, label %if.end23, !dbg !11198

land.lhs.true13:                                  ; preds = %land.lhs.true8
  %10 = load %struct.hid_parser*, %struct.hid_parser** %parser.addr, align 8, !dbg !11199
  %global14 = getelementptr inbounds %struct.hid_parser, %struct.hid_parser* %10, i32 0, i32 0, !dbg !11200
  %report_size15 = getelementptr inbounds %struct.hid_global, %struct.hid_global* %global14, i32 0, i32 8, !dbg !11201
  %11 = load i32, i32* %report_size15, align 8, !dbg !11201
  %cmp16 = icmp eq i32 %11, 8, !dbg !11202
  br i1 %cmp16, label %if.then18, label %if.end23, !dbg !11203

if.then18:                                        ; preds = %land.lhs.true13
  %12 = load %struct.hid_parser*, %struct.hid_parser** %parser.addr, align 8, !dbg !11204
  %scan_flags19 = getelementptr inbounds %struct.hid_parser, %struct.hid_parser* %12, i32 0, i32 8, !dbg !11205
  %13 = load i32, i32* %scan_flags19, align 8, !dbg !11206
  %conv20 = zext i32 %13 to i64, !dbg !11206
  %or21 = or i64 %conv20, 1, !dbg !11206
  %conv22 = trunc i64 %or21 to i32, !dbg !11206
  store i32 %conv22, i32* %scan_flags19, align 8, !dbg !11206
  br label %if.end23, !dbg !11204

if.end23:                                         ; preds = %if.then18, %land.lhs.true13, %land.lhs.true8, %if.end
  ret void, !dbg !11207
}

; Function Attrs: noredzone
declare dso_local void @device_del(%struct.device*) #2

; Function Attrs: noredzone
declare dso_local i32 @bus_for_each_dev(%struct.bus_type*, %struct.device*, i8*, i32 (%struct.device*, i8*)*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @__hid_bus_reprobe_drivers(%struct.device* %dev, i8* %data) #0 !dbg !11208 {
entry:
  %x.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i, metadata !8019, metadata !DIExpression()), !dbg !11211
  %r.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %r.i, metadata !8024, metadata !DIExpression()), !dbg !11214
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.device*, align 8
  %data.addr = alloca i8*, align 8
  %hdrv = alloca %struct.hid_driver*, align 8
  %hdev = alloca %struct.hid_device*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.hid_device*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !11215, metadata !DIExpression()), !dbg !11216
  store i8* %data, i8** %data.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %data.addr, metadata !11217, metadata !DIExpression()), !dbg !11218
  call void @llvm.dbg.declare(metadata %struct.hid_driver** %hdrv, metadata !11219, metadata !DIExpression()), !dbg !11220
  %0 = load i8*, i8** %data.addr, align 8, !dbg !11221
  %1 = bitcast i8* %0 to %struct.hid_driver*, !dbg !11221
  store %struct.hid_driver* %1, %struct.hid_driver** %hdrv, align 8, !dbg !11220
  call void @llvm.dbg.declare(metadata %struct.hid_device** %hdev, metadata !11222, metadata !DIExpression()), !dbg !11223
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !11224, metadata !DIExpression()), !dbg !11226
  %2 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !11226
  %3 = bitcast %struct.device* %2 to i8*, !dbg !11226
  store i8* %3, i8** %__mptr, align 8, !dbg !11226
  br label %do.body, !dbg !11226

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !11227

do.end:                                           ; preds = %do.body
  %4 = load i8*, i8** %__mptr, align 8, !dbg !11226
  %add.ptr = getelementptr i8, i8* %4, i64 -6352, !dbg !11226
  %5 = bitcast i8* %add.ptr to %struct.hid_device*, !dbg !11226
  store %struct.hid_device* %5, %struct.hid_device** %tmp, align 8, !dbg !11227
  %6 = load %struct.hid_device*, %struct.hid_device** %tmp, align 8, !dbg !11226
  store %struct.hid_device* %6, %struct.hid_device** %hdev, align 8, !dbg !11223
  %7 = load %struct.hid_device*, %struct.hid_device** %hdev, align 8, !dbg !11229
  %driver = getelementptr inbounds %struct.hid_device, %struct.hid_device* %7, i32 0, i32 19, !dbg !11230
  %8 = load %struct.hid_driver*, %struct.hid_driver** %driver, align 8, !dbg !11230
  %9 = load %struct.hid_driver*, %struct.hid_driver** %hdrv, align 8, !dbg !11231
  %cmp = icmp eq %struct.hid_driver* %8, %9, !dbg !11232
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !11233

land.lhs.true:                                    ; preds = %do.end
  %10 = load %struct.hid_driver*, %struct.hid_driver** %hdrv, align 8, !dbg !11234
  %match = getelementptr inbounds %struct.hid_driver, %struct.hid_driver* %10, i32 0, i32 4, !dbg !11235
  %11 = load i1 (%struct.hid_device*, i1)*, i1 (%struct.hid_device*, i1)** %match, align 8, !dbg !11235
  %12 = load %struct.hid_device*, %struct.hid_device** %hdev, align 8, !dbg !11236
  %13 = load i32, i32* @hid_ignore_special_drivers, align 4, !dbg !11237
  %tobool = icmp ne i32 %13, 0, !dbg !11237
  %call = call zeroext i1 %11(%struct.hid_device* %12, i1 zeroext %tobool) #9, !dbg !11234
  br i1 %call, label %if.end, label %land.lhs.true1, !dbg !11238

land.lhs.true1:                                   ; preds = %land.lhs.true
  store i32 8, i32* %x.addr.i, align 4
  %14 = load i32, i32* %x.addr.i, align 4, !dbg !11239
  %15 = call i32 asm "bsfl $1,$0", "=r,rm,0,~{dirflag},~{fpsr},~{flags}"(i32 %14, i32 -1) #15, !dbg !11240, !srcloc !8059
  store i32 %15, i32* %r.i, align 4, !dbg !11240
  %16 = load i32, i32* %r.i, align 4, !dbg !11241
  %add.i = add i32 %16, 1, !dbg !11242
  %conv = sext i32 %add.i to i64, !dbg !11243
  %17 = load %struct.hid_device*, %struct.hid_device** %hdev, align 8, !dbg !11244
  %status = getelementptr inbounds %struct.hid_device, %struct.hid_device* %17, i32 0, i32 23, !dbg !11245
  %call3 = call zeroext i1 @test_and_set_bit(i64 %conv, i64* %status) #9, !dbg !11246
  br i1 %call3, label %if.end, label %if.then, !dbg !11247

if.then:                                          ; preds = %land.lhs.true1
  %18 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !11248
  %call4 = call i32 @device_reprobe(%struct.device* %18) #9, !dbg !11249
  store i32 %call4, i32* %retval, align 4, !dbg !11250
  br label %return, !dbg !11250

if.end:                                           ; preds = %land.lhs.true1, %land.lhs.true, %do.end
  store i32 0, i32* %retval, align 4, !dbg !11251
  br label %return, !dbg !11251

return:                                           ; preds = %if.end, %if.then
  %19 = load i32, i32* %retval, align 4, !dbg !11252
  ret i32 %19, !dbg !11252
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @test_and_set_bit(i64 %nr, i64* %addr) #0 !dbg !11253 {
entry:
  %nr.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %nr.addr.i, metadata !11256, metadata !DIExpression()), !dbg !11258
  %addr.addr.i = alloca i64*, align 8
  call void @llvm.dbg.declare(metadata i64** %addr.addr.i, metadata !11260, metadata !DIExpression()), !dbg !11261
  %c.i = alloca i8, align 1
  call void @llvm.dbg.declare(metadata i8* %c.i, metadata !11262, metadata !DIExpression()), !dbg !11264
  %tmp.i = alloca i8, align 1
  %v.addr.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %v.addr.i, metadata !8240, metadata !DIExpression()), !dbg !11265
  %size.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i, metadata !8250, metadata !DIExpression()), !dbg !11267
  %nr.addr = alloca i64, align 8
  %addr.addr = alloca i64*, align 8
  store i64 %nr, i64* %nr.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %nr.addr, metadata !11268, metadata !DIExpression()), !dbg !11269
  store i64* %addr, i64** %addr.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %addr.addr, metadata !11270, metadata !DIExpression()), !dbg !11271
  %0 = load i64*, i64** %addr.addr, align 8, !dbg !11272
  %1 = load i64, i64* %nr.addr, align 8, !dbg !11273
  %div = sdiv i64 %1, 64, !dbg !11273
  %add.ptr = getelementptr i64, i64* %0, i64 %div, !dbg !11274
  %2 = bitcast i64* %add.ptr to i8*, !dbg !11272
  store i8* %2, i8** %v.addr.i, align 8
  store i64 8, i64* %size.addr.i, align 8
  %3 = load i8*, i8** %v.addr.i, align 8, !dbg !11275
  %4 = load i64, i64* %size.addr.i, align 8, !dbg !11276
  %conv.i = trunc i64 %4 to i32, !dbg !11276
  %call.i = call zeroext i1 @kasan_check_write(i8* %3, i32 %conv.i) #12, !dbg !11277
  %5 = load i8*, i8** %v.addr.i, align 8, !dbg !11278
  %6 = load i64, i64* %size.addr.i, align 8, !dbg !11278
  call void @kcsan_check_access(i8* %5, i64 %6, i32 7) #12, !dbg !11278
  %7 = load i64, i64* %nr.addr, align 8, !dbg !11279
  %8 = load i64*, i64** %addr.addr, align 8, !dbg !11280
  store i64 %7, i64* %nr.addr.i, align 8
  store i64* %8, i64** %addr.addr.i, align 8
  %9 = load i64*, i64** %addr.addr.i, align 8, !dbg !11264
  %10 = load i64, i64* %nr.addr.i, align 8, !dbg !11264
  %11 = call i8 asm sideeffect " btsq  $2, $0\0A\09/* output condition code c*/\0A", "=*m,={@ccc},Ir,*m,~{memory},~{dirflag},~{fpsr},~{flags}"(i64* %9, i64 %10, i64* %9) #10, !dbg !11264, !srcloc !11281
  store i8 %11, i8* %c.i, align 1, !dbg !11264
  %12 = load i8, i8* %c.i, align 1, !dbg !11264
  %tobool.i = trunc i8 %12 to i1, !dbg !11264
  %frombool.i = zext i1 %tobool.i to i8, !dbg !11264
  store i8 %frombool.i, i8* %tmp.i, align 1, !dbg !11264
  %13 = load i8, i8* %tmp.i, align 1, !dbg !11264
  %tobool1.i = trunc i8 %13 to i1, !dbg !11264
  ret i1 %tobool1.i, !dbg !11282
}

; Function Attrs: noredzone
declare dso_local i32 @device_reprobe(%struct.device*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @list_del(%struct.list_head* %entry1) #0 !dbg !11283 {
entry:
  %entry.addr = alloca %struct.list_head*, align 8
  store %struct.list_head* %entry1, %struct.list_head** %entry.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %entry.addr, metadata !11284, metadata !DIExpression()), !dbg !11285
  %0 = load %struct.list_head*, %struct.list_head** %entry.addr, align 8, !dbg !11286
  call void @__list_del_entry(%struct.list_head* %0) #9, !dbg !11287
  %1 = load %struct.list_head*, %struct.list_head** %entry.addr, align 8, !dbg !11288
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %1, i32 0, i32 0, !dbg !11289
  store %struct.list_head* bitcast (i8* getelementptr (i8, i8* inttoptr (i64 256 to i8*), i64 -2401263026318606336) to %struct.list_head*), %struct.list_head** %next, align 8, !dbg !11290
  %2 = load %struct.list_head*, %struct.list_head** %entry.addr, align 8, !dbg !11291
  %prev = getelementptr inbounds %struct.list_head, %struct.list_head* %2, i32 0, i32 1, !dbg !11292
  store %struct.list_head* bitcast (i8* getelementptr (i8, i8* inttoptr (i64 290 to i8*), i64 -2401263026318606336) to %struct.list_head*), %struct.list_head** %prev, align 8, !dbg !11293
  ret void, !dbg !11294
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @__list_del_entry(%struct.list_head* %entry1) #0 !dbg !11295 {
entry:
  %entry.addr = alloca %struct.list_head*, align 8
  store %struct.list_head* %entry1, %struct.list_head** %entry.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %entry.addr, metadata !11296, metadata !DIExpression()), !dbg !11297
  %0 = load %struct.list_head*, %struct.list_head** %entry.addr, align 8, !dbg !11298
  %call = call zeroext i1 @__list_del_entry_valid(%struct.list_head* %0) #9, !dbg !11300
  br i1 %call, label %if.end, label %if.then, !dbg !11301

if.then:                                          ; preds = %entry
  br label %return, !dbg !11302

if.end:                                           ; preds = %entry
  %1 = load %struct.list_head*, %struct.list_head** %entry.addr, align 8, !dbg !11303
  %prev = getelementptr inbounds %struct.list_head, %struct.list_head* %1, i32 0, i32 1, !dbg !11304
  %2 = load %struct.list_head*, %struct.list_head** %prev, align 8, !dbg !11304
  %3 = load %struct.list_head*, %struct.list_head** %entry.addr, align 8, !dbg !11305
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %3, i32 0, i32 0, !dbg !11306
  %4 = load %struct.list_head*, %struct.list_head** %next, align 8, !dbg !11306
  call void @__list_del(%struct.list_head* %2, %struct.list_head* %4) #9, !dbg !11307
  br label %return, !dbg !11308

return:                                           ; preds = %if.end, %if.then
  ret void, !dbg !11308
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @__list_del_entry_valid(%struct.list_head* %entry1) #0 !dbg !11309 {
entry:
  %entry.addr = alloca %struct.list_head*, align 8
  store %struct.list_head* %entry1, %struct.list_head** %entry.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %entry.addr, metadata !11312, metadata !DIExpression()), !dbg !11313
  ret i1 true, !dbg !11314
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @__list_del(%struct.list_head* %prev, %struct.list_head* %next) #0 !dbg !11315 {
entry:
  %prev.addr = alloca %struct.list_head*, align 8
  %next.addr = alloca %struct.list_head*, align 8
  store %struct.list_head* %prev, %struct.list_head** %prev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %prev.addr, metadata !11316, metadata !DIExpression()), !dbg !11317
  store %struct.list_head* %next, %struct.list_head** %next.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %next.addr, metadata !11318, metadata !DIExpression()), !dbg !11319
  %0 = load %struct.list_head*, %struct.list_head** %prev.addr, align 8, !dbg !11320
  %1 = load %struct.list_head*, %struct.list_head** %next.addr, align 8, !dbg !11321
  %prev1 = getelementptr inbounds %struct.list_head, %struct.list_head* %1, i32 0, i32 1, !dbg !11322
  store %struct.list_head* %0, %struct.list_head** %prev1, align 8, !dbg !11323
  br label %do.body, !dbg !11324

do.body:                                          ; preds = %entry
  br label %do.body2, !dbg !11325

do.body2:                                         ; preds = %do.body
  br label %do.end, !dbg !11327

do.end:                                           ; preds = %do.body2
  br label %do.body3, !dbg !11325

do.body3:                                         ; preds = %do.end
  %2 = load %struct.list_head*, %struct.list_head** %next.addr, align 8, !dbg !11329
  %3 = load %struct.list_head*, %struct.list_head** %prev.addr, align 8, !dbg !11329
  %next4 = getelementptr inbounds %struct.list_head, %struct.list_head* %3, i32 0, i32 0, !dbg !11329
  store volatile %struct.list_head* %2, %struct.list_head** %next4, align 8, !dbg !11329
  br label %do.end5, !dbg !11329

do.end5:                                          ; preds = %do.body3
  br label %do.end6, !dbg !11325

do.end6:                                          ; preds = %do.end5
  ret void, !dbg !11331
}

; Function Attrs: noredzone
declare dso_local i32 @bus_rescan_devices(%struct.bus_type*) #2

; Function Attrs: noredzone
declare dso_local i32 @bus_register(%struct.bus_type*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @hidraw_init() #0 !dbg !11332 {
entry:
  ret i32 0, !dbg !11333
}

attributes #0 = { noinline noredzone nounwind optnone sspstrong "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="true" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,-3dnow,-3dnowa,-aes,-avx,-avx2,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-f16c,-fma,-fma4,-gfni,-mmx,-pclmul,-sha,-sse,-sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-ssse3,-vaes,-vpclmulqdq,-x87,-xop,-xsave,-xsaveopt" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind readnone speculatable willreturn }
attributes #2 = { noredzone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,-3dnow,-3dnowa,-aes,-avx,-avx2,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-f16c,-fma,-fma4,-gfni,-mmx,-pclmul,-sha,-sse,-sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-ssse3,-vaes,-vpclmulqdq,-x87,-xop,-xsave,-xsaveopt" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { cold noredzone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,-3dnow,-3dnowa,-aes,-avx,-avx2,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-f16c,-fma,-fma4,-gfni,-mmx,-pclmul,-sha,-sse,-sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-ssse3,-vaes,-vpclmulqdq,-x87,-xop,-xsave,-xsaveopt" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { argmemonly nounwind willreturn }
attributes #5 = { cold noinline noredzone nounwind optnone sspstrong "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="true" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,-3dnow,-3dnowa,-aes,-avx,-avx2,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-f16c,-fma,-fma4,-gfni,-mmx,-pclmul,-sha,-sse,-sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-ssse3,-vaes,-vpclmulqdq,-x87,-xop,-xsave,-xsaveopt" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind readnone willreturn }
attributes #7 = { nounwind willreturn }
attributes #8 = { noinline noredzone nounwind optnone readnone sspstrong "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="true" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,-3dnow,-3dnowa,-aes,-avx,-avx2,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-f16c,-fma,-fma4,-gfni,-mmx,-pclmul,-sha,-sse,-sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-ssse3,-vaes,-vpclmulqdq,-x87,-xop,-xsave,-xsaveopt" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { noredzone }
attributes #10 = { nounwind }
attributes #11 = { noredzone nounwind readnone }
attributes #12 = { noredzone nounwind }
attributes #13 = { cold noredzone }
attributes #14 = { nounwind readnone }
attributes #15 = { nounwind readonly }

!llvm.dbg.cu = !{!2}
!llvm.module.flags = !{!4478, !4479, !4480, !4481}
!llvm.ident = !{!4482}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "hid_debug", scope: !2, file: !3, line: 44, type: !169, isLocal: false, isDefinition: true)
!2 = distinct !DICompileUnit(language: DW_LANG_C89, file: !3, producer: "clang version 10.0.1 (https://github.com/llvm/llvm-project.git ef32c611aa214dea855364efd7ba451ec5ec3f74)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !111, globals: !4219, splitDebugInlining: false, nameTableKind: None)
!3 = !DIFile(filename: "drivers/hid/hid-core.c", directory: "/home/lizy2001/genbc/linux")
!4 = !{!5, !13, !19, !24, !30, !37, !43, !52, !60, !66, !72, !79, !87, !93, !99, !104}
!5 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "migrate_mode", file: !6, line: 15, baseType: !7, size: 32, elements: !8)
!6 = !DIFile(filename: "./include/linux/migrate_mode.h", directory: "/home/lizy2001/genbc/linux")
!7 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!8 = !{!9, !10, !11, !12}
!9 = !DIEnumerator(name: "MIGRATE_ASYNC", value: 0, isUnsigned: true)
!10 = !DIEnumerator(name: "MIGRATE_SYNC_LIGHT", value: 1, isUnsigned: true)
!11 = !DIEnumerator(name: "MIGRATE_SYNC", value: 2, isUnsigned: true)
!12 = !DIEnumerator(name: "MIGRATE_SYNC_NO_COPY", value: 3, isUnsigned: true)
!13 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "page_entry_size", file: !14, line: 546, baseType: !7, size: 32, elements: !15)
!14 = !DIFile(filename: "./include/linux/mm.h", directory: "/home/lizy2001/genbc/linux")
!15 = !{!16, !17, !18}
!16 = !DIEnumerator(name: "PE_SIZE_PTE", value: 0, isUnsigned: true)
!17 = !DIEnumerator(name: "PE_SIZE_PMD", value: 1, isUnsigned: true)
!18 = !DIEnumerator(name: "PE_SIZE_PUD", value: 2, isUnsigned: true)
!19 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "hrtimer_restart", file: !20, line: 65, baseType: !7, size: 32, elements: !21)
!20 = !DIFile(filename: "./include/linux/hrtimer.h", directory: "/home/lizy2001/genbc/linux")
!21 = !{!22, !23}
!22 = !DIEnumerator(name: "HRTIMER_NORESTART", value: 0, isUnsigned: true)
!23 = !DIEnumerator(name: "HRTIMER_RESTART", value: 1, isUnsigned: true)
!24 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "timespec_type", file: !25, line: 16, baseType: !7, size: 32, elements: !26)
!25 = !DIFile(filename: "./include/linux/restart_block.h", directory: "/home/lizy2001/genbc/linux")
!26 = !{!27, !28, !29}
!27 = !DIEnumerator(name: "TT_NONE", value: 0, isUnsigned: true)
!28 = !DIEnumerator(name: "TT_NATIVE", value: 1, isUnsigned: true)
!29 = !DIEnumerator(name: "TT_COMPAT", value: 2, isUnsigned: true)
!30 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "memory_type", file: !31, line: 59, baseType: !7, size: 32, elements: !32)
!31 = !DIFile(filename: "./include/linux/memremap.h", directory: "/home/lizy2001/genbc/linux")
!32 = !{!33, !34, !35, !36}
!33 = !DIEnumerator(name: "MEMORY_DEVICE_PRIVATE", value: 1, isUnsigned: true)
!34 = !DIEnumerator(name: "MEMORY_DEVICE_FS_DAX", value: 2, isUnsigned: true)
!35 = !DIEnumerator(name: "MEMORY_DEVICE_GENERIC", value: 3, isUnsigned: true)
!36 = !DIEnumerator(name: "MEMORY_DEVICE_PCI_P2PDMA", value: 4, isUnsigned: true)
!37 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "quota_type", file: !38, line: 54, baseType: !7, size: 32, elements: !39)
!38 = !DIFile(filename: "./include/linux/quota.h", directory: "/home/lizy2001/genbc/linux")
!39 = !{!40, !41, !42}
!40 = !DIEnumerator(name: "USRQUOTA", value: 0, isUnsigned: true)
!41 = !DIEnumerator(name: "GRPQUOTA", value: 1, isUnsigned: true)
!42 = !DIEnumerator(name: "PRJQUOTA", value: 2, isUnsigned: true)
!43 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "rw_hint", file: !44, line: 296, baseType: !7, size: 32, elements: !45)
!44 = !DIFile(filename: "./include/linux/fs.h", directory: "/home/lizy2001/genbc/linux")
!45 = !{!46, !47, !48, !49, !50, !51}
!46 = !DIEnumerator(name: "WRITE_LIFE_NOT_SET", value: 0, isUnsigned: true)
!47 = !DIEnumerator(name: "WRITE_LIFE_NONE", value: 1, isUnsigned: true)
!48 = !DIEnumerator(name: "WRITE_LIFE_SHORT", value: 2, isUnsigned: true)
!49 = !DIEnumerator(name: "WRITE_LIFE_MEDIUM", value: 3, isUnsigned: true)
!50 = !DIEnumerator(name: "WRITE_LIFE_LONG", value: 4, isUnsigned: true)
!51 = !DIEnumerator(name: "WRITE_LIFE_EXTREME", value: 5, isUnsigned: true)
!52 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "pid_type", file: !53, line: 9, baseType: !7, size: 32, elements: !54)
!53 = !DIFile(filename: "./include/linux/pid.h", directory: "/home/lizy2001/genbc/linux")
!54 = !{!55, !56, !57, !58, !59}
!55 = !DIEnumerator(name: "PIDTYPE_PID", value: 0, isUnsigned: true)
!56 = !DIEnumerator(name: "PIDTYPE_TGID", value: 1, isUnsigned: true)
!57 = !DIEnumerator(name: "PIDTYPE_PGID", value: 2, isUnsigned: true)
!58 = !DIEnumerator(name: "PIDTYPE_SID", value: 3, isUnsigned: true)
!59 = !DIEnumerator(name: "PIDTYPE_MAX", value: 4, isUnsigned: true)
!60 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "kobj_ns_type", file: !61, line: 26, baseType: !7, size: 32, elements: !62)
!61 = !DIFile(filename: "./include/linux/kobject_ns.h", directory: "/home/lizy2001/genbc/linux")
!62 = !{!63, !64, !65}
!63 = !DIEnumerator(name: "KOBJ_NS_TYPE_NONE", value: 0, isUnsigned: true)
!64 = !DIEnumerator(name: "KOBJ_NS_TYPE_NET", value: 1, isUnsigned: true)
!65 = !DIEnumerator(name: "KOBJ_NS_TYPES", value: 2, isUnsigned: true)
!66 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "probe_type", file: !67, line: 44, baseType: !7, size: 32, elements: !68)
!67 = !DIFile(filename: "./include/linux/device/driver.h", directory: "/home/lizy2001/genbc/linux")
!68 = !{!69, !70, !71}
!69 = !DIEnumerator(name: "PROBE_DEFAULT_STRATEGY", value: 0, isUnsigned: true)
!70 = !DIEnumerator(name: "PROBE_PREFER_ASYNCHRONOUS", value: 1, isUnsigned: true)
!71 = !DIEnumerator(name: "PROBE_FORCE_SYNCHRONOUS", value: 2, isUnsigned: true)
!72 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "dl_dev_state", file: !73, line: 343, baseType: !7, size: 32, elements: !74)
!73 = !DIFile(filename: "./include/linux/device.h", directory: "/home/lizy2001/genbc/linux")
!74 = !{!75, !76, !77, !78}
!75 = !DIEnumerator(name: "DL_DEV_NO_DRIVER", value: 0, isUnsigned: true)
!76 = !DIEnumerator(name: "DL_DEV_PROBING", value: 1, isUnsigned: true)
!77 = !DIEnumerator(name: "DL_DEV_DRIVER_BOUND", value: 2, isUnsigned: true)
!78 = !DIEnumerator(name: "DL_DEV_UNBINDING", value: 3, isUnsigned: true)
!79 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "rpm_request", file: !80, line: 524, baseType: !7, size: 32, elements: !81)
!80 = !DIFile(filename: "./include/linux/pm.h", directory: "/home/lizy2001/genbc/linux")
!81 = !{!82, !83, !84, !85, !86}
!82 = !DIEnumerator(name: "RPM_REQ_NONE", value: 0, isUnsigned: true)
!83 = !DIEnumerator(name: "RPM_REQ_IDLE", value: 1, isUnsigned: true)
!84 = !DIEnumerator(name: "RPM_REQ_SUSPEND", value: 2, isUnsigned: true)
!85 = !DIEnumerator(name: "RPM_REQ_AUTOSUSPEND", value: 3, isUnsigned: true)
!86 = !DIEnumerator(name: "RPM_REQ_RESUME", value: 4, isUnsigned: true)
!87 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "rpm_status", file: !80, line: 502, baseType: !7, size: 32, elements: !88)
!88 = !{!89, !90, !91, !92}
!89 = !DIEnumerator(name: "RPM_ACTIVE", value: 0, isUnsigned: true)
!90 = !DIEnumerator(name: "RPM_RESUMING", value: 1, isUnsigned: true)
!91 = !DIEnumerator(name: "RPM_SUSPENDED", value: 2, isUnsigned: true)
!92 = !DIEnumerator(name: "RPM_SUSPENDING", value: 3, isUnsigned: true)
!93 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "hid_type", file: !94, line: 532, baseType: !7, size: 32, elements: !95)
!94 = !DIFile(filename: "./include/linux/hid.h", directory: "/home/lizy2001/genbc/linux")
!95 = !{!96, !97, !98}
!96 = !DIEnumerator(name: "HID_TYPE_OTHER", value: 0, isUnsigned: true)
!97 = !DIEnumerator(name: "HID_TYPE_USBMOUSE", value: 1, isUnsigned: true)
!98 = !DIEnumerator(name: "HID_TYPE_USBNONE", value: 2, isUnsigned: true)
!99 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !100, line: 10, baseType: !7, size: 32, elements: !101)
!100 = !DIFile(filename: "./include/linux/stddef.h", directory: "/home/lizy2001/genbc/linux")
!101 = !{!102, !103}
!102 = !DIEnumerator(name: "false", value: 0, isUnsigned: true)
!103 = !DIEnumerator(name: "true", value: 1, isUnsigned: true)
!104 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "kmalloc_cache_type", file: !105, line: 305, baseType: !7, size: 32, elements: !106)
!105 = !DIFile(filename: "./include/linux/slab.h", directory: "/home/lizy2001/genbc/linux")
!106 = !{!107, !108, !109, !110}
!107 = !DIEnumerator(name: "KMALLOC_NORMAL", value: 0, isUnsigned: true)
!108 = !DIEnumerator(name: "KMALLOC_RECLAIM", value: 1, isUnsigned: true)
!109 = !DIEnumerator(name: "KMALLOC_DMA", value: 2, isUnsigned: true)
!110 = !DIEnumerator(name: "NR_KMALLOC_TYPES", value: 3, isUnsigned: true)
!111 = !{!112, !114, !115, !7, !4176, !4189, !169, !4201, !179, !4206, !604, !239, !137, !4208, !3990, !4209, !4211, !149, !144, !158, !168, !4213, !1233, !205, !440, !4214, !3986, !3620, !4030, !4216, !4218}
!112 = !DIDerivedType(tag: DW_TAG_typedef, name: "gfp_t", file: !113, line: 148, baseType: !7)
!113 = !DIFile(filename: "./include/linux/types.h", directory: "/home/lizy2001/genbc/linux")
!114 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 64)
!115 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !116, size: 64)
!116 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hid_report", file: !94, line: 476, size: 16896, elements: !117)
!117 = !{!118, !124, !125, !126, !127, !128, !3983, !3984, !3985}
!118 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !116, file: !94, line: 477, baseType: !119, size: 128)
!119 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "list_head", file: !113, line: 178, size: 128, elements: !120)
!120 = !{!121, !123}
!121 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !119, file: !113, line: 179, baseType: !122, size: 64)
!122 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !119, size: 64)
!123 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !119, file: !113, line: 179, baseType: !122, size: 64, offset: 64)
!124 = !DIDerivedType(tag: DW_TAG_member, name: "hidinput_list", scope: !116, file: !94, line: 478, baseType: !119, size: 128, offset: 128)
!125 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !116, file: !94, line: 479, baseType: !7, size: 32, offset: 256)
!126 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !116, file: !94, line: 480, baseType: !7, size: 32, offset: 288)
!127 = !DIDerivedType(tag: DW_TAG_member, name: "application", scope: !116, file: !94, line: 481, baseType: !7, size: 32, offset: 320)
!128 = !DIDerivedType(tag: DW_TAG_member, name: "field", scope: !116, file: !94, line: 482, baseType: !129, size: 16384, offset: 384)
!129 = !DICompositeType(tag: DW_TAG_array_type, baseType: !130, size: 16384, elements: !3981)
!130 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !131, size: 64)
!131 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hid_field", file: !94, line: 449, size: 896, elements: !132)
!132 = !{!133, !134, !135, !136, !160, !161, !162, !163, !164, !165, !166, !170, !171, !172, !173, !174, !175, !176, !177, !178, !3980}
!133 = !DIDerivedType(tag: DW_TAG_member, name: "physical", scope: !131, file: !94, line: 450, baseType: !7, size: 32)
!134 = !DIDerivedType(tag: DW_TAG_member, name: "logical", scope: !131, file: !94, line: 451, baseType: !7, size: 32, offset: 32)
!135 = !DIDerivedType(tag: DW_TAG_member, name: "application", scope: !131, file: !94, line: 452, baseType: !7, size: 32, offset: 64)
!136 = !DIDerivedType(tag: DW_TAG_member, name: "usage", scope: !131, file: !94, line: 453, baseType: !137, size: 64, offset: 128)
!137 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !138, size: 64)
!138 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hid_usage", file: !94, line: 431, size: 192, elements: !139)
!139 = !{!140, !141, !142, !143, !147, !148, !151, !154, !155, !156, !157}
!140 = !DIDerivedType(tag: DW_TAG_member, name: "hid", scope: !138, file: !94, line: 432, baseType: !7, size: 32)
!141 = !DIDerivedType(tag: DW_TAG_member, name: "collection_index", scope: !138, file: !94, line: 433, baseType: !7, size: 32, offset: 32)
!142 = !DIDerivedType(tag: DW_TAG_member, name: "usage_index", scope: !138, file: !94, line: 434, baseType: !7, size: 32, offset: 64)
!143 = !DIDerivedType(tag: DW_TAG_member, name: "resolution_multiplier", scope: !138, file: !94, line: 435, baseType: !144, size: 8, offset: 96)
!144 = !DIDerivedType(tag: DW_TAG_typedef, name: "__s8", file: !145, line: 20, baseType: !146)
!145 = !DIFile(filename: "./include/uapi/asm-generic/int-ll64.h", directory: "/home/lizy2001/genbc/linux")
!146 = !DIBasicType(name: "signed char", size: 8, encoding: DW_ATE_signed_char)
!147 = !DIDerivedType(tag: DW_TAG_member, name: "wheel_factor", scope: !138, file: !94, line: 438, baseType: !144, size: 8, offset: 104)
!148 = !DIDerivedType(tag: DW_TAG_member, name: "code", scope: !138, file: !94, line: 439, baseType: !149, size: 16, offset: 112)
!149 = !DIDerivedType(tag: DW_TAG_typedef, name: "__u16", file: !145, line: 24, baseType: !150)
!150 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!151 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !138, file: !94, line: 440, baseType: !152, size: 8, offset: 128)
!152 = !DIDerivedType(tag: DW_TAG_typedef, name: "__u8", file: !145, line: 21, baseType: !153)
!153 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!154 = !DIDerivedType(tag: DW_TAG_member, name: "hat_min", scope: !138, file: !94, line: 441, baseType: !144, size: 8, offset: 136)
!155 = !DIDerivedType(tag: DW_TAG_member, name: "hat_max", scope: !138, file: !94, line: 442, baseType: !144, size: 8, offset: 144)
!156 = !DIDerivedType(tag: DW_TAG_member, name: "hat_dir", scope: !138, file: !94, line: 443, baseType: !144, size: 8, offset: 152)
!157 = !DIDerivedType(tag: DW_TAG_member, name: "wheel_accumulated", scope: !138, file: !94, line: 444, baseType: !158, size: 16, offset: 160)
!158 = !DIDerivedType(tag: DW_TAG_typedef, name: "__s16", file: !145, line: 23, baseType: !159)
!159 = !DIBasicType(name: "short", size: 16, encoding: DW_ATE_signed)
!160 = !DIDerivedType(tag: DW_TAG_member, name: "maxusage", scope: !131, file: !94, line: 454, baseType: !7, size: 32, offset: 192)
!161 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !131, file: !94, line: 455, baseType: !7, size: 32, offset: 224)
!162 = !DIDerivedType(tag: DW_TAG_member, name: "report_offset", scope: !131, file: !94, line: 456, baseType: !7, size: 32, offset: 256)
!163 = !DIDerivedType(tag: DW_TAG_member, name: "report_size", scope: !131, file: !94, line: 457, baseType: !7, size: 32, offset: 288)
!164 = !DIDerivedType(tag: DW_TAG_member, name: "report_count", scope: !131, file: !94, line: 458, baseType: !7, size: 32, offset: 320)
!165 = !DIDerivedType(tag: DW_TAG_member, name: "report_type", scope: !131, file: !94, line: 459, baseType: !7, size: 32, offset: 352)
!166 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !131, file: !94, line: 460, baseType: !167, size: 64, offset: 384)
!167 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !168, size: 64)
!168 = !DIDerivedType(tag: DW_TAG_typedef, name: "__s32", file: !145, line: 26, baseType: !169)
!169 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!170 = !DIDerivedType(tag: DW_TAG_member, name: "logical_minimum", scope: !131, file: !94, line: 461, baseType: !168, size: 32, offset: 448)
!171 = !DIDerivedType(tag: DW_TAG_member, name: "logical_maximum", scope: !131, file: !94, line: 462, baseType: !168, size: 32, offset: 480)
!172 = !DIDerivedType(tag: DW_TAG_member, name: "physical_minimum", scope: !131, file: !94, line: 463, baseType: !168, size: 32, offset: 512)
!173 = !DIDerivedType(tag: DW_TAG_member, name: "physical_maximum", scope: !131, file: !94, line: 464, baseType: !168, size: 32, offset: 544)
!174 = !DIDerivedType(tag: DW_TAG_member, name: "unit_exponent", scope: !131, file: !94, line: 465, baseType: !168, size: 32, offset: 576)
!175 = !DIDerivedType(tag: DW_TAG_member, name: "unit", scope: !131, file: !94, line: 466, baseType: !7, size: 32, offset: 608)
!176 = !DIDerivedType(tag: DW_TAG_member, name: "report", scope: !131, file: !94, line: 467, baseType: !115, size: 64, offset: 640)
!177 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !131, file: !94, line: 468, baseType: !7, size: 32, offset: 704)
!178 = !DIDerivedType(tag: DW_TAG_member, name: "hidinput", scope: !131, file: !94, line: 470, baseType: !179, size: 64, offset: 768)
!179 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !180, size: 64)
!180 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hid_input", file: !94, line: 522, size: 576, elements: !181)
!181 = !{!182, !183, !184, !3976, !3977, !3978, !3979}
!182 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !180, file: !94, line: 523, baseType: !119, size: 128)
!183 = !DIDerivedType(tag: DW_TAG_member, name: "report", scope: !180, file: !94, line: 524, baseType: !115, size: 64, offset: 128)
!184 = !DIDerivedType(tag: DW_TAG_member, name: "input", scope: !180, file: !94, line: 525, baseType: !185, size: 64, offset: 192)
!185 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !186, size: 64)
!186 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "input_dev", file: !187, line: 131, size: 10432, elements: !188)
!187 = !DIFile(filename: "./include/linux/input.h", directory: "/home/lizy2001/genbc/linux")
!188 = !{!189, !193, !194, !195, !203, !208, !209, !213, !214, !215, !216, !217, !218, !222, !223, !224, !225, !226, !227, !245, !250, !3186, !3189, !3190, !3202, !3204, !3207, !3217, !3218, !3219, !3220, !3221, !3225, !3229, !3233, !3237, !3315, !3316, !3317, !3318, !3319, !3967, !3968, !3969, !3970, !3971, !3973, !3974}
!189 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !186, file: !187, line: 132, baseType: !190, size: 64)
!190 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !191, size: 64)
!191 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !192)
!192 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_signed_char)
!193 = !DIDerivedType(tag: DW_TAG_member, name: "phys", scope: !186, file: !187, line: 133, baseType: !190, size: 64, offset: 64)
!194 = !DIDerivedType(tag: DW_TAG_member, name: "uniq", scope: !186, file: !187, line: 134, baseType: !190, size: 64, offset: 128)
!195 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !186, file: !187, line: 135, baseType: !196, size: 64, offset: 192)
!196 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "input_id", file: !197, line: 59, size: 64, elements: !198)
!197 = !DIFile(filename: "./include/uapi/linux/input.h", directory: "/home/lizy2001/genbc/linux")
!198 = !{!199, !200, !201, !202}
!199 = !DIDerivedType(tag: DW_TAG_member, name: "bustype", scope: !196, file: !197, line: 60, baseType: !149, size: 16)
!200 = !DIDerivedType(tag: DW_TAG_member, name: "vendor", scope: !196, file: !197, line: 61, baseType: !149, size: 16, offset: 16)
!201 = !DIDerivedType(tag: DW_TAG_member, name: "product", scope: !196, file: !197, line: 62, baseType: !149, size: 16, offset: 32)
!202 = !DIDerivedType(tag: DW_TAG_member, name: "version", scope: !196, file: !197, line: 63, baseType: !149, size: 16, offset: 48)
!203 = !DIDerivedType(tag: DW_TAG_member, name: "propbit", scope: !186, file: !187, line: 137, baseType: !204, size: 64, offset: 256)
!204 = !DICompositeType(tag: DW_TAG_array_type, baseType: !205, size: 64, elements: !206)
!205 = !DIBasicType(name: "long unsigned int", size: 64, encoding: DW_ATE_unsigned)
!206 = !{!207}
!207 = !DISubrange(count: 1)
!208 = !DIDerivedType(tag: DW_TAG_member, name: "evbit", scope: !186, file: !187, line: 139, baseType: !204, size: 64, offset: 320)
!209 = !DIDerivedType(tag: DW_TAG_member, name: "keybit", scope: !186, file: !187, line: 140, baseType: !210, size: 768, offset: 384)
!210 = !DICompositeType(tag: DW_TAG_array_type, baseType: !205, size: 768, elements: !211)
!211 = !{!212}
!212 = !DISubrange(count: 12)
!213 = !DIDerivedType(tag: DW_TAG_member, name: "relbit", scope: !186, file: !187, line: 141, baseType: !204, size: 64, offset: 1152)
!214 = !DIDerivedType(tag: DW_TAG_member, name: "absbit", scope: !186, file: !187, line: 142, baseType: !204, size: 64, offset: 1216)
!215 = !DIDerivedType(tag: DW_TAG_member, name: "mscbit", scope: !186, file: !187, line: 143, baseType: !204, size: 64, offset: 1280)
!216 = !DIDerivedType(tag: DW_TAG_member, name: "ledbit", scope: !186, file: !187, line: 144, baseType: !204, size: 64, offset: 1344)
!217 = !DIDerivedType(tag: DW_TAG_member, name: "sndbit", scope: !186, file: !187, line: 145, baseType: !204, size: 64, offset: 1408)
!218 = !DIDerivedType(tag: DW_TAG_member, name: "ffbit", scope: !186, file: !187, line: 146, baseType: !219, size: 128, offset: 1472)
!219 = !DICompositeType(tag: DW_TAG_array_type, baseType: !205, size: 128, elements: !220)
!220 = !{!221}
!221 = !DISubrange(count: 2)
!222 = !DIDerivedType(tag: DW_TAG_member, name: "swbit", scope: !186, file: !187, line: 147, baseType: !204, size: 64, offset: 1600)
!223 = !DIDerivedType(tag: DW_TAG_member, name: "hint_events_per_packet", scope: !186, file: !187, line: 149, baseType: !7, size: 32, offset: 1664)
!224 = !DIDerivedType(tag: DW_TAG_member, name: "keycodemax", scope: !186, file: !187, line: 151, baseType: !7, size: 32, offset: 1696)
!225 = !DIDerivedType(tag: DW_TAG_member, name: "keycodesize", scope: !186, file: !187, line: 152, baseType: !7, size: 32, offset: 1728)
!226 = !DIDerivedType(tag: DW_TAG_member, name: "keycode", scope: !186, file: !187, line: 153, baseType: !114, size: 64, offset: 1792)
!227 = !DIDerivedType(tag: DW_TAG_member, name: "setkeycode", scope: !186, file: !187, line: 155, baseType: !228, size: 64, offset: 1856)
!228 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !229, size: 64)
!229 = !DISubroutineType(types: !230)
!230 = !{!169, !185, !231, !244}
!231 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !232, size: 64)
!232 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !233)
!233 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "input_keymap_entry", file: !197, line: 114, size: 320, elements: !234)
!234 = !{!235, !236, !237, !238, !240}
!235 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !233, file: !197, line: 116, baseType: !152, size: 8)
!236 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !233, file: !197, line: 117, baseType: !152, size: 8, offset: 8)
!237 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !233, file: !197, line: 118, baseType: !149, size: 16, offset: 16)
!238 = !DIDerivedType(tag: DW_TAG_member, name: "keycode", scope: !233, file: !197, line: 119, baseType: !239, size: 32, offset: 32)
!239 = !DIDerivedType(tag: DW_TAG_typedef, name: "__u32", file: !145, line: 27, baseType: !7)
!240 = !DIDerivedType(tag: DW_TAG_member, name: "scancode", scope: !233, file: !197, line: 120, baseType: !241, size: 256, offset: 64)
!241 = !DICompositeType(tag: DW_TAG_array_type, baseType: !152, size: 256, elements: !242)
!242 = !{!243}
!243 = !DISubrange(count: 32)
!244 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7, size: 64)
!245 = !DIDerivedType(tag: DW_TAG_member, name: "getkeycode", scope: !186, file: !187, line: 158, baseType: !246, size: 64, offset: 1920)
!246 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !247, size: 64)
!247 = !DISubroutineType(types: !248)
!248 = !{!169, !185, !249}
!249 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !233, size: 64)
!250 = !DIDerivedType(tag: DW_TAG_member, name: "ff", scope: !186, file: !187, line: 161, baseType: !251, size: 64, offset: 1984)
!251 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !252, size: 64)
!252 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ff_device", file: !187, line: 534, size: 896, elements: !253)
!253 = !{!254, !321, !325, !329, !335, !336, !340, !341, !342, !373, !374, !375}
!254 = !DIDerivedType(tag: DW_TAG_member, name: "upload", scope: !252, file: !187, line: 535, baseType: !255, size: 64)
!255 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !256, size: 64)
!256 = !DISubroutineType(types: !257)
!257 = !{!169, !185, !258, !258}
!258 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !259, size: 64)
!259 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ff_effect", file: !197, line: 450, size: 384, elements: !260)
!260 = !{!261, !262, !263, !264, !269, !274}
!261 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !259, file: !197, line: 451, baseType: !149, size: 16)
!262 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !259, file: !197, line: 452, baseType: !158, size: 16, offset: 16)
!263 = !DIDerivedType(tag: DW_TAG_member, name: "direction", scope: !259, file: !197, line: 453, baseType: !149, size: 16, offset: 32)
!264 = !DIDerivedType(tag: DW_TAG_member, name: "trigger", scope: !259, file: !197, line: 454, baseType: !265, size: 32, offset: 48)
!265 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ff_trigger", file: !197, line: 316, size: 32, elements: !266)
!266 = !{!267, !268}
!267 = !DIDerivedType(tag: DW_TAG_member, name: "button", scope: !265, file: !197, line: 317, baseType: !149, size: 16)
!268 = !DIDerivedType(tag: DW_TAG_member, name: "interval", scope: !265, file: !197, line: 318, baseType: !149, size: 16, offset: 16)
!269 = !DIDerivedType(tag: DW_TAG_member, name: "replay", scope: !259, file: !197, line: 455, baseType: !270, size: 32, offset: 80)
!270 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ff_replay", file: !197, line: 306, size: 32, elements: !271)
!271 = !{!272, !273}
!272 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !270, file: !197, line: 307, baseType: !149, size: 16)
!273 = !DIDerivedType(tag: DW_TAG_member, name: "delay", scope: !270, file: !197, line: 308, baseType: !149, size: 16, offset: 16)
!274 = !DIDerivedType(tag: DW_TAG_member, name: "u", scope: !259, file: !197, line: 463, baseType: !275, size: 256, offset: 128)
!275 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !259, file: !197, line: 457, size: 256, elements: !276)
!276 = !{!277, !288, !294, !306, !316}
!277 = !DIDerivedType(tag: DW_TAG_member, name: "constant", scope: !275, file: !197, line: 458, baseType: !278, size: 80)
!278 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ff_constant_effect", file: !197, line: 345, size: 80, elements: !279)
!279 = !{!280, !281}
!280 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !278, file: !197, line: 346, baseType: !158, size: 16)
!281 = !DIDerivedType(tag: DW_TAG_member, name: "envelope", scope: !278, file: !197, line: 347, baseType: !282, size: 64, offset: 16)
!282 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ff_envelope", file: !197, line: 333, size: 64, elements: !283)
!283 = !{!284, !285, !286, !287}
!284 = !DIDerivedType(tag: DW_TAG_member, name: "attack_length", scope: !282, file: !197, line: 334, baseType: !149, size: 16)
!285 = !DIDerivedType(tag: DW_TAG_member, name: "attack_level", scope: !282, file: !197, line: 335, baseType: !149, size: 16, offset: 16)
!286 = !DIDerivedType(tag: DW_TAG_member, name: "fade_length", scope: !282, file: !197, line: 336, baseType: !149, size: 16, offset: 32)
!287 = !DIDerivedType(tag: DW_TAG_member, name: "fade_level", scope: !282, file: !197, line: 337, baseType: !149, size: 16, offset: 48)
!288 = !DIDerivedType(tag: DW_TAG_member, name: "ramp", scope: !275, file: !197, line: 459, baseType: !289, size: 96)
!289 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ff_ramp_effect", file: !197, line: 356, size: 96, elements: !290)
!290 = !{!291, !292, !293}
!291 = !DIDerivedType(tag: DW_TAG_member, name: "start_level", scope: !289, file: !197, line: 357, baseType: !158, size: 16)
!292 = !DIDerivedType(tag: DW_TAG_member, name: "end_level", scope: !289, file: !197, line: 358, baseType: !158, size: 16, offset: 16)
!293 = !DIDerivedType(tag: DW_TAG_member, name: "envelope", scope: !289, file: !197, line: 359, baseType: !282, size: 64, offset: 32)
!294 = !DIDerivedType(tag: DW_TAG_member, name: "periodic", scope: !275, file: !197, line: 460, baseType: !295, size: 256)
!295 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ff_periodic_effect", file: !197, line: 401, size: 256, elements: !296)
!296 = !{!297, !298, !299, !300, !301, !302, !303, !304}
!297 = !DIDerivedType(tag: DW_TAG_member, name: "waveform", scope: !295, file: !197, line: 402, baseType: !149, size: 16)
!298 = !DIDerivedType(tag: DW_TAG_member, name: "period", scope: !295, file: !197, line: 403, baseType: !149, size: 16, offset: 16)
!299 = !DIDerivedType(tag: DW_TAG_member, name: "magnitude", scope: !295, file: !197, line: 404, baseType: !158, size: 16, offset: 32)
!300 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !295, file: !197, line: 405, baseType: !158, size: 16, offset: 48)
!301 = !DIDerivedType(tag: DW_TAG_member, name: "phase", scope: !295, file: !197, line: 406, baseType: !149, size: 16, offset: 64)
!302 = !DIDerivedType(tag: DW_TAG_member, name: "envelope", scope: !295, file: !197, line: 408, baseType: !282, size: 64, offset: 80)
!303 = !DIDerivedType(tag: DW_TAG_member, name: "custom_len", scope: !295, file: !197, line: 410, baseType: !239, size: 32, offset: 160)
!304 = !DIDerivedType(tag: DW_TAG_member, name: "custom_data", scope: !295, file: !197, line: 411, baseType: !305, size: 64, offset: 192)
!305 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !158, size: 64)
!306 = !DIDerivedType(tag: DW_TAG_member, name: "condition", scope: !275, file: !197, line: 461, baseType: !307, size: 192)
!307 = !DICompositeType(tag: DW_TAG_array_type, baseType: !308, size: 192, elements: !220)
!308 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ff_condition_effect", file: !197, line: 372, size: 96, elements: !309)
!309 = !{!310, !311, !312, !313, !314, !315}
!310 = !DIDerivedType(tag: DW_TAG_member, name: "right_saturation", scope: !308, file: !197, line: 373, baseType: !149, size: 16)
!311 = !DIDerivedType(tag: DW_TAG_member, name: "left_saturation", scope: !308, file: !197, line: 374, baseType: !149, size: 16, offset: 16)
!312 = !DIDerivedType(tag: DW_TAG_member, name: "right_coeff", scope: !308, file: !197, line: 376, baseType: !158, size: 16, offset: 32)
!313 = !DIDerivedType(tag: DW_TAG_member, name: "left_coeff", scope: !308, file: !197, line: 377, baseType: !158, size: 16, offset: 48)
!314 = !DIDerivedType(tag: DW_TAG_member, name: "deadband", scope: !308, file: !197, line: 379, baseType: !149, size: 16, offset: 64)
!315 = !DIDerivedType(tag: DW_TAG_member, name: "center", scope: !308, file: !197, line: 380, baseType: !158, size: 16, offset: 80)
!316 = !DIDerivedType(tag: DW_TAG_member, name: "rumble", scope: !275, file: !197, line: 462, baseType: !317, size: 32)
!317 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ff_rumble_effect", file: !197, line: 422, size: 32, elements: !318)
!318 = !{!319, !320}
!319 = !DIDerivedType(tag: DW_TAG_member, name: "strong_magnitude", scope: !317, file: !197, line: 423, baseType: !149, size: 16)
!320 = !DIDerivedType(tag: DW_TAG_member, name: "weak_magnitude", scope: !317, file: !197, line: 424, baseType: !149, size: 16, offset: 16)
!321 = !DIDerivedType(tag: DW_TAG_member, name: "erase", scope: !252, file: !187, line: 537, baseType: !322, size: 64, offset: 64)
!322 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !323, size: 64)
!323 = !DISubroutineType(types: !324)
!324 = !{!169, !185, !169}
!325 = !DIDerivedType(tag: DW_TAG_member, name: "playback", scope: !252, file: !187, line: 539, baseType: !326, size: 64, offset: 128)
!326 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !327, size: 64)
!327 = !DISubroutineType(types: !328)
!328 = !{!169, !185, !169, !169}
!329 = !DIDerivedType(tag: DW_TAG_member, name: "set_gain", scope: !252, file: !187, line: 540, baseType: !330, size: 64, offset: 192)
!330 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !331, size: 64)
!331 = !DISubroutineType(types: !332)
!332 = !{null, !185, !333}
!333 = !DIDerivedType(tag: DW_TAG_typedef, name: "u16", file: !334, line: 19, baseType: !149)
!334 = !DIFile(filename: "./include/asm-generic/int-ll64.h", directory: "/home/lizy2001/genbc/linux")
!335 = !DIDerivedType(tag: DW_TAG_member, name: "set_autocenter", scope: !252, file: !187, line: 541, baseType: !330, size: 64, offset: 256)
!336 = !DIDerivedType(tag: DW_TAG_member, name: "destroy", scope: !252, file: !187, line: 543, baseType: !337, size: 64, offset: 320)
!337 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !338, size: 64)
!338 = !DISubroutineType(types: !339)
!339 = !{null, !251}
!340 = !DIDerivedType(tag: DW_TAG_member, name: "private", scope: !252, file: !187, line: 545, baseType: !114, size: 64, offset: 384)
!341 = !DIDerivedType(tag: DW_TAG_member, name: "ffbit", scope: !252, file: !187, line: 547, baseType: !219, size: 128, offset: 448)
!342 = !DIDerivedType(tag: DW_TAG_member, name: "mutex", scope: !252, file: !187, line: 549, baseType: !343, size: 192, offset: 576)
!343 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mutex", file: !344, line: 53, size: 192, elements: !345)
!344 = !DIFile(filename: "./include/linux/mutex.h", directory: "/home/lizy2001/genbc/linux")
!345 = !{!346, !356, !372}
!346 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !343, file: !344, line: 54, baseType: !347, size: 64)
!347 = !DIDerivedType(tag: DW_TAG_typedef, name: "atomic_long_t", file: !348, line: 13, baseType: !349)
!348 = !DIFile(filename: "./include/asm-generic/atomic-long.h", directory: "/home/lizy2001/genbc/linux")
!349 = !DIDerivedType(tag: DW_TAG_typedef, name: "atomic64_t", file: !113, line: 175, baseType: !350)
!350 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !113, line: 173, size: 64, elements: !351)
!351 = !{!352}
!352 = !DIDerivedType(tag: DW_TAG_member, name: "counter", scope: !350, file: !113, line: 174, baseType: !353, size: 64)
!353 = !DIDerivedType(tag: DW_TAG_typedef, name: "s64", file: !334, line: 22, baseType: !354)
!354 = !DIDerivedType(tag: DW_TAG_typedef, name: "__s64", file: !145, line: 30, baseType: !355)
!355 = !DIBasicType(name: "long long int", size: 64, encoding: DW_ATE_signed)
!356 = !DIDerivedType(tag: DW_TAG_member, name: "wait_lock", scope: !343, file: !344, line: 55, baseType: !357, offset: 64)
!357 = !DIDerivedType(tag: DW_TAG_typedef, name: "spinlock_t", file: !358, line: 83, baseType: !359)
!358 = !DIFile(filename: "./include/linux/spinlock_types.h", directory: "/home/lizy2001/genbc/linux")
!359 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "spinlock", file: !358, line: 71, elements: !360)
!360 = !{!361}
!361 = !DIDerivedType(tag: DW_TAG_member, scope: !359, file: !358, line: 72, baseType: !362)
!362 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !359, file: !358, line: 72, elements: !363)
!363 = !{!364}
!364 = !DIDerivedType(tag: DW_TAG_member, name: "rlock", scope: !362, file: !358, line: 73, baseType: !365)
!365 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "raw_spinlock", file: !358, line: 20, elements: !366)
!366 = !{!367}
!367 = !DIDerivedType(tag: DW_TAG_member, name: "raw_lock", scope: !365, file: !358, line: 21, baseType: !368)
!368 = !DIDerivedType(tag: DW_TAG_typedef, name: "arch_spinlock_t", file: !369, line: 25, baseType: !370)
!369 = !DIFile(filename: "./include/linux/spinlock_types_up.h", directory: "/home/lizy2001/genbc/linux")
!370 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !369, line: 25, elements: !371)
!371 = !{}
!372 = !DIDerivedType(tag: DW_TAG_member, name: "wait_list", scope: !343, file: !344, line: 59, baseType: !119, size: 128, offset: 64)
!373 = !DIDerivedType(tag: DW_TAG_member, name: "max_effects", scope: !252, file: !187, line: 551, baseType: !169, size: 32, offset: 768)
!374 = !DIDerivedType(tag: DW_TAG_member, name: "effects", scope: !252, file: !187, line: 552, baseType: !258, size: 64, offset: 832)
!375 = !DIDerivedType(tag: DW_TAG_member, name: "effect_owners", scope: !252, file: !187, line: 553, baseType: !376, offset: 896)
!376 = !DICompositeType(tag: DW_TAG_array_type, baseType: !377, elements: !2341)
!377 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !378, size: 64)
!378 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file", file: !44, line: 916, size: 1856, align: 32, elements: !379)
!379 = !{!380, !398, !3151, !3152, !3153, !3154, !3155, !3156, !3157, !3158, !3159, !3160, !3169, !3170, !3179, !3180, !3181, !3182, !3183, !3184, !3185}
!380 = !DIDerivedType(tag: DW_TAG_member, name: "f_u", scope: !378, file: !44, line: 920, baseType: !381, size: 128)
!381 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !378, file: !44, line: 917, size: 128, elements: !382)
!382 = !{!383, !389}
!383 = !DIDerivedType(tag: DW_TAG_member, name: "fu_llist", scope: !381, file: !44, line: 918, baseType: !384, size: 64)
!384 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "llist_node", file: !385, line: 58, size: 64, elements: !386)
!385 = !DIFile(filename: "./include/linux/llist.h", directory: "/home/lizy2001/genbc/linux")
!386 = !{!387}
!387 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !384, file: !385, line: 59, baseType: !388, size: 64)
!388 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !384, size: 64)
!389 = !DIDerivedType(tag: DW_TAG_member, name: "fu_rcuhead", scope: !381, file: !44, line: 919, baseType: !390, size: 128, align: 64)
!390 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "callback_head", file: !113, line: 216, size: 128, align: 64, elements: !391)
!391 = !{!392, !394}
!392 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !390, file: !113, line: 217, baseType: !393, size: 64)
!393 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !390, size: 64)
!394 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !390, file: !113, line: 218, baseType: !395, size: 64, offset: 64)
!395 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !396, size: 64)
!396 = !DISubroutineType(types: !397)
!397 = !{null, !393}
!398 = !DIDerivedType(tag: DW_TAG_member, name: "f_path", scope: !378, file: !44, line: 921, baseType: !399, size: 128, offset: 128)
!399 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "path", file: !400, line: 8, size: 128, elements: !401)
!400 = !DIFile(filename: "./include/linux/path.h", directory: "/home/lizy2001/genbc/linux")
!401 = !{!402, !406}
!402 = !DIDerivedType(tag: DW_TAG_member, name: "mnt", scope: !399, file: !400, line: 9, baseType: !403, size: 64)
!403 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !404, size: 64)
!404 = !DICompositeType(tag: DW_TAG_structure_type, name: "vfsmount", file: !405, line: 18, flags: DIFlagFwdDecl)
!405 = !DIFile(filename: "./include/linux/dcache.h", directory: "/home/lizy2001/genbc/linux")
!406 = !DIDerivedType(tag: DW_TAG_member, name: "dentry", scope: !399, file: !400, line: 10, baseType: !407, size: 64, offset: 64)
!407 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !408, size: 64)
!408 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dentry", file: !405, line: 89, size: 1536, elements: !409)
!409 = !{!410, !411, !421, !429, !430, !449, !3119, !3121, !3133, !3134, !3135, !3136, !3137, !3143, !3144, !3145}
!410 = !DIDerivedType(tag: DW_TAG_member, name: "d_flags", scope: !408, file: !405, line: 91, baseType: !7, size: 32)
!411 = !DIDerivedType(tag: DW_TAG_member, name: "d_seq", scope: !408, file: !405, line: 92, baseType: !412, size: 32, offset: 32)
!412 = !DIDerivedType(tag: DW_TAG_typedef, name: "seqcount_spinlock_t", file: !413, line: 277, baseType: !414)
!413 = !DIFile(filename: "./include/linux/seqlock.h", directory: "/home/lizy2001/genbc/linux")
!414 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seqcount_spinlock", file: !413, line: 277, size: 32, elements: !415)
!415 = !{!416}
!416 = !DIDerivedType(tag: DW_TAG_member, name: "seqcount", scope: !414, file: !413, line: 277, baseType: !417, size: 32)
!417 = !DIDerivedType(tag: DW_TAG_typedef, name: "seqcount_t", file: !413, line: 70, baseType: !418)
!418 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seqcount", file: !413, line: 65, size: 32, elements: !419)
!419 = !{!420}
!420 = !DIDerivedType(tag: DW_TAG_member, name: "sequence", scope: !418, file: !413, line: 66, baseType: !7, size: 32)
!421 = !DIDerivedType(tag: DW_TAG_member, name: "d_hash", scope: !408, file: !405, line: 93, baseType: !422, size: 128, offset: 64)
!422 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hlist_bl_node", file: !423, line: 38, size: 128, elements: !424)
!423 = !DIFile(filename: "./include/linux/list_bl.h", directory: "/home/lizy2001/genbc/linux")
!424 = !{!425, !427}
!425 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !422, file: !423, line: 39, baseType: !426, size: 64)
!426 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !422, size: 64)
!427 = !DIDerivedType(tag: DW_TAG_member, name: "pprev", scope: !422, file: !423, line: 39, baseType: !428, size: 64, offset: 64)
!428 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !426, size: 64)
!429 = !DIDerivedType(tag: DW_TAG_member, name: "d_parent", scope: !408, file: !405, line: 94, baseType: !407, size: 64, offset: 192)
!430 = !DIDerivedType(tag: DW_TAG_member, name: "d_name", scope: !408, file: !405, line: 95, baseType: !431, size: 128, offset: 256)
!431 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "qstr", file: !405, line: 47, size: 128, elements: !432)
!432 = !{!433, !446}
!433 = !DIDerivedType(tag: DW_TAG_member, scope: !431, file: !405, line: 48, baseType: !434, size: 64)
!434 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !431, file: !405, line: 48, size: 64, elements: !435)
!435 = !{!436, !442}
!436 = !DIDerivedType(tag: DW_TAG_member, scope: !434, file: !405, line: 49, baseType: !437, size: 64)
!437 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !434, file: !405, line: 49, size: 64, elements: !438)
!438 = !{!439, !441}
!439 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !437, file: !405, line: 50, baseType: !440, size: 32)
!440 = !DIDerivedType(tag: DW_TAG_typedef, name: "u32", file: !334, line: 21, baseType: !239)
!441 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !437, file: !405, line: 50, baseType: !440, size: 32, offset: 32)
!442 = !DIDerivedType(tag: DW_TAG_member, name: "hash_len", scope: !434, file: !405, line: 52, baseType: !443, size: 64)
!443 = !DIDerivedType(tag: DW_TAG_typedef, name: "u64", file: !334, line: 23, baseType: !444)
!444 = !DIDerivedType(tag: DW_TAG_typedef, name: "__u64", file: !145, line: 31, baseType: !445)
!445 = !DIBasicType(name: "long long unsigned int", size: 64, encoding: DW_ATE_unsigned)
!446 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !431, file: !405, line: 54, baseType: !447, size: 64, offset: 64)
!447 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !448, size: 64)
!448 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !153)
!449 = !DIDerivedType(tag: DW_TAG_member, name: "d_inode", scope: !408, file: !405, line: 96, baseType: !450, size: 64, offset: 384)
!450 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !451, size: 64)
!451 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "inode", file: !44, line: 610, size: 4224, elements: !452)
!452 = !{!453, !455, !456, !465, !472, !473, !627, !2830, !2831, !2832, !2838, !2839, !2840, !2841, !2842, !2843, !2844, !2845, !2846, !2847, !2848, !2849, !2850, !2851, !2852, !2853, !2854, !2855, !2856, !2857, !2862, !2863, !2864, !2865, !2866, !2867, !2868, !3095, !3103, !3104, !3105, !3115, !3116, !3117, !3118}
!453 = !DIDerivedType(tag: DW_TAG_member, name: "i_mode", scope: !451, file: !44, line: 611, baseType: !454, size: 16)
!454 = !DIDerivedType(tag: DW_TAG_typedef, name: "umode_t", file: !113, line: 19, baseType: !150)
!455 = !DIDerivedType(tag: DW_TAG_member, name: "i_opflags", scope: !451, file: !44, line: 612, baseType: !150, size: 16, offset: 16)
!456 = !DIDerivedType(tag: DW_TAG_member, name: "i_uid", scope: !451, file: !44, line: 613, baseType: !457, size: 32, offset: 32)
!457 = !DIDerivedType(tag: DW_TAG_typedef, name: "kuid_t", file: !458, line: 23, baseType: !459)
!458 = !DIFile(filename: "./include/linux/uidgid.h", directory: "/home/lizy2001/genbc/linux")
!459 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !458, line: 21, size: 32, elements: !460)
!460 = !{!461}
!461 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !459, file: !458, line: 22, baseType: !462, size: 32)
!462 = !DIDerivedType(tag: DW_TAG_typedef, name: "uid_t", file: !113, line: 32, baseType: !463)
!463 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_uid32_t", file: !464, line: 49, baseType: !7)
!464 = !DIFile(filename: "./include/uapi/asm-generic/posix_types.h", directory: "/home/lizy2001/genbc/linux")
!465 = !DIDerivedType(tag: DW_TAG_member, name: "i_gid", scope: !451, file: !44, line: 614, baseType: !466, size: 32, offset: 64)
!466 = !DIDerivedType(tag: DW_TAG_typedef, name: "kgid_t", file: !458, line: 28, baseType: !467)
!467 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !458, line: 26, size: 32, elements: !468)
!468 = !{!469}
!469 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !467, file: !458, line: 27, baseType: !470, size: 32)
!470 = !DIDerivedType(tag: DW_TAG_typedef, name: "gid_t", file: !113, line: 33, baseType: !471)
!471 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_gid32_t", file: !464, line: 50, baseType: !7)
!472 = !DIDerivedType(tag: DW_TAG_member, name: "i_flags", scope: !451, file: !44, line: 615, baseType: !7, size: 32, offset: 96)
!473 = !DIDerivedType(tag: DW_TAG_member, name: "i_op", scope: !451, file: !44, line: 622, baseType: !474, size: 64, offset: 128)
!474 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !475, size: 64)
!475 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !476)
!476 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "inode_operations", file: !44, line: 1864, size: 1536, align: 512, elements: !477)
!477 = !{!478, !482, !495, !499, !505, !510, !516, !520, !524, !528, !532, !533, !539, !543, !568, !597, !607, !613, !618, !622, !623}
!478 = !DIDerivedType(tag: DW_TAG_member, name: "lookup", scope: !476, file: !44, line: 1865, baseType: !479, size: 64)
!479 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !480, size: 64)
!480 = !DISubroutineType(types: !481)
!481 = !{!407, !450, !407, !7}
!482 = !DIDerivedType(tag: DW_TAG_member, name: "get_link", scope: !476, file: !44, line: 1866, baseType: !483, size: 64, offset: 64)
!483 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !484, size: 64)
!484 = !DISubroutineType(types: !485)
!485 = !{!190, !407, !450, !486}
!486 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !487, size: 64)
!487 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "delayed_call", file: !488, line: 10, size: 128, elements: !489)
!488 = !DIFile(filename: "./include/linux/delayed_call.h", directory: "/home/lizy2001/genbc/linux")
!489 = !{!490, !494}
!490 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !487, file: !488, line: 11, baseType: !491, size: 64)
!491 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !492, size: 64)
!492 = !DISubroutineType(types: !493)
!493 = !{null, !114}
!494 = !DIDerivedType(tag: DW_TAG_member, name: "arg", scope: !487, file: !488, line: 12, baseType: !114, size: 64, offset: 64)
!495 = !DIDerivedType(tag: DW_TAG_member, name: "permission", scope: !476, file: !44, line: 1867, baseType: !496, size: 64, offset: 128)
!496 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !497, size: 64)
!497 = !DISubroutineType(types: !498)
!498 = !{!169, !450, !169}
!499 = !DIDerivedType(tag: DW_TAG_member, name: "get_acl", scope: !476, file: !44, line: 1868, baseType: !500, size: 64, offset: 192)
!500 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !501, size: 64)
!501 = !DISubroutineType(types: !502)
!502 = !{!503, !450, !169}
!503 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !504, size: 64)
!504 = !DICompositeType(tag: DW_TAG_structure_type, name: "posix_acl", file: !44, line: 581, flags: DIFlagFwdDecl)
!505 = !DIDerivedType(tag: DW_TAG_member, name: "readlink", scope: !476, file: !44, line: 1870, baseType: !506, size: 64, offset: 256)
!506 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !507, size: 64)
!507 = !DISubroutineType(types: !508)
!508 = !{!169, !407, !509, !169}
!509 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !192, size: 64)
!510 = !DIDerivedType(tag: DW_TAG_member, name: "create", scope: !476, file: !44, line: 1872, baseType: !511, size: 64, offset: 320)
!511 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !512, size: 64)
!512 = !DISubroutineType(types: !513)
!513 = !{!169, !450, !407, !454, !514}
!514 = !DIDerivedType(tag: DW_TAG_typedef, name: "bool", file: !113, line: 30, baseType: !515)
!515 = !DIBasicType(name: "_Bool", size: 8, encoding: DW_ATE_boolean)
!516 = !DIDerivedType(tag: DW_TAG_member, name: "link", scope: !476, file: !44, line: 1873, baseType: !517, size: 64, offset: 384)
!517 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !518, size: 64)
!518 = !DISubroutineType(types: !519)
!519 = !{!169, !407, !450, !407}
!520 = !DIDerivedType(tag: DW_TAG_member, name: "unlink", scope: !476, file: !44, line: 1874, baseType: !521, size: 64, offset: 448)
!521 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !522, size: 64)
!522 = !DISubroutineType(types: !523)
!523 = !{!169, !450, !407}
!524 = !DIDerivedType(tag: DW_TAG_member, name: "symlink", scope: !476, file: !44, line: 1875, baseType: !525, size: 64, offset: 512)
!525 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !526, size: 64)
!526 = !DISubroutineType(types: !527)
!527 = !{!169, !450, !407, !190}
!528 = !DIDerivedType(tag: DW_TAG_member, name: "mkdir", scope: !476, file: !44, line: 1876, baseType: !529, size: 64, offset: 576)
!529 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !530, size: 64)
!530 = !DISubroutineType(types: !531)
!531 = !{!169, !450, !407, !454}
!532 = !DIDerivedType(tag: DW_TAG_member, name: "rmdir", scope: !476, file: !44, line: 1877, baseType: !521, size: 64, offset: 640)
!533 = !DIDerivedType(tag: DW_TAG_member, name: "mknod", scope: !476, file: !44, line: 1878, baseType: !534, size: 64, offset: 704)
!534 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !535, size: 64)
!535 = !DISubroutineType(types: !536)
!536 = !{!169, !450, !407, !454, !537}
!537 = !DIDerivedType(tag: DW_TAG_typedef, name: "dev_t", file: !113, line: 16, baseType: !538)
!538 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_dev_t", file: !113, line: 13, baseType: !440)
!539 = !DIDerivedType(tag: DW_TAG_member, name: "rename", scope: !476, file: !44, line: 1879, baseType: !540, size: 64, offset: 768)
!540 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !541, size: 64)
!541 = !DISubroutineType(types: !542)
!542 = !{!169, !450, !407, !450, !407, !7}
!543 = !DIDerivedType(tag: DW_TAG_member, name: "setattr", scope: !476, file: !44, line: 1881, baseType: !544, size: 64, offset: 832)
!544 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !545, size: 64)
!545 = !DISubroutineType(types: !546)
!546 = !{!169, !407, !547}
!547 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !548, size: 64)
!548 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "iattr", file: !44, line: 219, size: 640, elements: !549)
!549 = !{!550, !551, !552, !553, !554, !557, !565, !566, !567}
!550 = !DIDerivedType(tag: DW_TAG_member, name: "ia_valid", scope: !548, file: !44, line: 220, baseType: !7, size: 32)
!551 = !DIDerivedType(tag: DW_TAG_member, name: "ia_mode", scope: !548, file: !44, line: 221, baseType: !454, size: 16, offset: 32)
!552 = !DIDerivedType(tag: DW_TAG_member, name: "ia_uid", scope: !548, file: !44, line: 222, baseType: !457, size: 32, offset: 64)
!553 = !DIDerivedType(tag: DW_TAG_member, name: "ia_gid", scope: !548, file: !44, line: 223, baseType: !466, size: 32, offset: 96)
!554 = !DIDerivedType(tag: DW_TAG_member, name: "ia_size", scope: !548, file: !44, line: 224, baseType: !555, size: 64, offset: 128)
!555 = !DIDerivedType(tag: DW_TAG_typedef, name: "loff_t", file: !113, line: 46, baseType: !556)
!556 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_loff_t", file: !464, line: 88, baseType: !355)
!557 = !DIDerivedType(tag: DW_TAG_member, name: "ia_atime", scope: !548, file: !44, line: 225, baseType: !558, size: 128, offset: 192)
!558 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timespec64", file: !559, line: 13, size: 128, elements: !560)
!559 = !DIFile(filename: "./include/linux/time64.h", directory: "/home/lizy2001/genbc/linux")
!560 = !{!561, !563}
!561 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !558, file: !559, line: 14, baseType: !562, size: 64)
!562 = !DIDerivedType(tag: DW_TAG_typedef, name: "time64_t", file: !559, line: 8, baseType: !354)
!563 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !558, file: !559, line: 15, baseType: !564, size: 64, offset: 64)
!564 = !DIBasicType(name: "long int", size: 64, encoding: DW_ATE_signed)
!565 = !DIDerivedType(tag: DW_TAG_member, name: "ia_mtime", scope: !548, file: !44, line: 226, baseType: !558, size: 128, offset: 320)
!566 = !DIDerivedType(tag: DW_TAG_member, name: "ia_ctime", scope: !548, file: !44, line: 227, baseType: !558, size: 128, offset: 448)
!567 = !DIDerivedType(tag: DW_TAG_member, name: "ia_file", scope: !548, file: !44, line: 234, baseType: !377, size: 64, offset: 576)
!568 = !DIDerivedType(tag: DW_TAG_member, name: "getattr", scope: !476, file: !44, line: 1882, baseType: !569, size: 64, offset: 896)
!569 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !570, size: 64)
!570 = !DISubroutineType(types: !571)
!571 = !{!169, !572, !574, !440, !7}
!572 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !573, size: 64)
!573 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !399)
!574 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !575, size: 64)
!575 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kstat", file: !576, line: 22, size: 1152, elements: !577)
!576 = !DIFile(filename: "./include/linux/stat.h", directory: "/home/lizy2001/genbc/linux")
!577 = !{!578, !579, !580, !581, !583, !584, !585, !586, !587, !588, !589, !590, !591, !592, !593, !594, !595, !596}
!578 = !DIDerivedType(tag: DW_TAG_member, name: "result_mask", scope: !575, file: !576, line: 23, baseType: !440, size: 32)
!579 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !575, file: !576, line: 24, baseType: !454, size: 16, offset: 32)
!580 = !DIDerivedType(tag: DW_TAG_member, name: "nlink", scope: !575, file: !576, line: 25, baseType: !7, size: 32, offset: 64)
!581 = !DIDerivedType(tag: DW_TAG_member, name: "blksize", scope: !575, file: !576, line: 26, baseType: !582, size: 32, offset: 96)
!582 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint32_t", file: !113, line: 104, baseType: !440)
!583 = !DIDerivedType(tag: DW_TAG_member, name: "attributes", scope: !575, file: !576, line: 27, baseType: !443, size: 64, offset: 128)
!584 = !DIDerivedType(tag: DW_TAG_member, name: "attributes_mask", scope: !575, file: !576, line: 28, baseType: !443, size: 64, offset: 192)
!585 = !DIDerivedType(tag: DW_TAG_member, name: "ino", scope: !575, file: !576, line: 37, baseType: !443, size: 64, offset: 256)
!586 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !575, file: !576, line: 38, baseType: !537, size: 32, offset: 320)
!587 = !DIDerivedType(tag: DW_TAG_member, name: "rdev", scope: !575, file: !576, line: 39, baseType: !537, size: 32, offset: 352)
!588 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !575, file: !576, line: 40, baseType: !457, size: 32, offset: 384)
!589 = !DIDerivedType(tag: DW_TAG_member, name: "gid", scope: !575, file: !576, line: 41, baseType: !466, size: 32, offset: 416)
!590 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !575, file: !576, line: 42, baseType: !555, size: 64, offset: 448)
!591 = !DIDerivedType(tag: DW_TAG_member, name: "atime", scope: !575, file: !576, line: 43, baseType: !558, size: 128, offset: 512)
!592 = !DIDerivedType(tag: DW_TAG_member, name: "mtime", scope: !575, file: !576, line: 44, baseType: !558, size: 128, offset: 640)
!593 = !DIDerivedType(tag: DW_TAG_member, name: "ctime", scope: !575, file: !576, line: 45, baseType: !558, size: 128, offset: 768)
!594 = !DIDerivedType(tag: DW_TAG_member, name: "btime", scope: !575, file: !576, line: 46, baseType: !558, size: 128, offset: 896)
!595 = !DIDerivedType(tag: DW_TAG_member, name: "blocks", scope: !575, file: !576, line: 47, baseType: !443, size: 64, offset: 1024)
!596 = !DIDerivedType(tag: DW_TAG_member, name: "mnt_id", scope: !575, file: !576, line: 48, baseType: !443, size: 64, offset: 1088)
!597 = !DIDerivedType(tag: DW_TAG_member, name: "listxattr", scope: !476, file: !44, line: 1883, baseType: !598, size: 64, offset: 960)
!598 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !599, size: 64)
!599 = !DISubroutineType(types: !600)
!600 = !{!601, !407, !509, !604}
!601 = !DIDerivedType(tag: DW_TAG_typedef, name: "ssize_t", file: !113, line: 60, baseType: !602)
!602 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_ssize_t", file: !464, line: 73, baseType: !603)
!603 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_long_t", file: !464, line: 15, baseType: !564)
!604 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !113, line: 55, baseType: !605)
!605 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_size_t", file: !464, line: 72, baseType: !606)
!606 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_ulong_t", file: !464, line: 16, baseType: !205)
!607 = !DIDerivedType(tag: DW_TAG_member, name: "fiemap", scope: !476, file: !44, line: 1884, baseType: !608, size: 64, offset: 1024)
!608 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !609, size: 64)
!609 = !DISubroutineType(types: !610)
!610 = !{!169, !450, !611, !443, !443}
!611 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !612, size: 64)
!612 = !DICompositeType(tag: DW_TAG_structure_type, name: "fiemap_extent_info", file: !44, line: 50, flags: DIFlagFwdDecl)
!613 = !DIDerivedType(tag: DW_TAG_member, name: "update_time", scope: !476, file: !44, line: 1886, baseType: !614, size: 64, offset: 1088)
!614 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !615, size: 64)
!615 = !DISubroutineType(types: !616)
!616 = !{!169, !450, !617, !169}
!617 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !558, size: 64)
!618 = !DIDerivedType(tag: DW_TAG_member, name: "atomic_open", scope: !476, file: !44, line: 1887, baseType: !619, size: 64, offset: 1152)
!619 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !620, size: 64)
!620 = !DISubroutineType(types: !621)
!621 = !{!169, !450, !407, !377, !7, !454}
!622 = !DIDerivedType(tag: DW_TAG_member, name: "tmpfile", scope: !476, file: !44, line: 1890, baseType: !529, size: 64, offset: 1216)
!623 = !DIDerivedType(tag: DW_TAG_member, name: "set_acl", scope: !476, file: !44, line: 1891, baseType: !624, size: 64, offset: 1280)
!624 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !625, size: 64)
!625 = !DISubroutineType(types: !626)
!626 = !{!169, !450, !503, !169}
!627 = !DIDerivedType(tag: DW_TAG_member, name: "i_sb", scope: !451, file: !44, line: 623, baseType: !628, size: 64, offset: 192)
!628 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !629, size: 64)
!629 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "super_block", file: !44, line: 1416, size: 9472, elements: !630)
!630 = !{!631, !632, !633, !634, !635, !636, !688, !2438, !2520, !2603, !2607, !2608, !2609, !2610, !2611, !2612, !2613, !2614, !2619, !2623, !2624, !2627, !2628, !2631, !2632, !2633, !2674, !2700, !2701, !2702, !2703, !2704, !2705, !2708, !2710, !2717, !2718, !2720, !2721, !2722, !2781, !2782, !2797, !2798, !2799, !2800, !2801, !2804, !2805, !2806, !2821, !2822, !2823, !2824, !2825, !2826, !2827, !2828, !2829}
!631 = !DIDerivedType(tag: DW_TAG_member, name: "s_list", scope: !629, file: !44, line: 1417, baseType: !119, size: 128)
!632 = !DIDerivedType(tag: DW_TAG_member, name: "s_dev", scope: !629, file: !44, line: 1418, baseType: !537, size: 32, offset: 128)
!633 = !DIDerivedType(tag: DW_TAG_member, name: "s_blocksize_bits", scope: !629, file: !44, line: 1419, baseType: !153, size: 8, offset: 160)
!634 = !DIDerivedType(tag: DW_TAG_member, name: "s_blocksize", scope: !629, file: !44, line: 1420, baseType: !205, size: 64, offset: 192)
!635 = !DIDerivedType(tag: DW_TAG_member, name: "s_maxbytes", scope: !629, file: !44, line: 1421, baseType: !555, size: 64, offset: 256)
!636 = !DIDerivedType(tag: DW_TAG_member, name: "s_type", scope: !629, file: !44, line: 1422, baseType: !637, size: 64, offset: 320)
!637 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !638, size: 64)
!638 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_system_type", file: !44, line: 2228, size: 576, elements: !639)
!639 = !{!640, !641, !642, !649, !653, !657, !661, !665, !666, !676, !679, !680, !681, !685, !686, !687}
!640 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !638, file: !44, line: 2229, baseType: !190, size: 64)
!641 = !DIDerivedType(tag: DW_TAG_member, name: "fs_flags", scope: !638, file: !44, line: 2230, baseType: !169, size: 32, offset: 64)
!642 = !DIDerivedType(tag: DW_TAG_member, name: "init_fs_context", scope: !638, file: !44, line: 2238, baseType: !643, size: 64, offset: 128)
!643 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !644, size: 64)
!644 = !DISubroutineType(types: !645)
!645 = !{!169, !646}
!646 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !647, size: 64)
!647 = !DICompositeType(tag: DW_TAG_structure_type, name: "fs_context", file: !648, line: 28, flags: DIFlagFwdDecl)
!648 = !DIFile(filename: "./include/linux/kernfs.h", directory: "/home/lizy2001/genbc/linux")
!649 = !DIDerivedType(tag: DW_TAG_member, name: "parameters", scope: !638, file: !44, line: 2239, baseType: !650, size: 64, offset: 192)
!650 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !651, size: 64)
!651 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !652)
!652 = !DICompositeType(tag: DW_TAG_structure_type, name: "fs_parameter_spec", file: !44, line: 70, flags: DIFlagFwdDecl)
!653 = !DIDerivedType(tag: DW_TAG_member, name: "mount", scope: !638, file: !44, line: 2240, baseType: !654, size: 64, offset: 256)
!654 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !655, size: 64)
!655 = !DISubroutineType(types: !656)
!656 = !{!407, !637, !169, !190, !114}
!657 = !DIDerivedType(tag: DW_TAG_member, name: "kill_sb", scope: !638, file: !44, line: 2242, baseType: !658, size: 64, offset: 320)
!658 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !659, size: 64)
!659 = !DISubroutineType(types: !660)
!660 = !{null, !628}
!661 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !638, file: !44, line: 2243, baseType: !662, size: 64, offset: 384)
!662 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !663, size: 64)
!663 = !DICompositeType(tag: DW_TAG_structure_type, name: "module", file: !664, line: 76, flags: DIFlagFwdDecl)
!664 = !DIFile(filename: "./arch/x86/include/asm/alternative.h", directory: "/home/lizy2001/genbc/linux")
!665 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !638, file: !44, line: 2244, baseType: !637, size: 64, offset: 448)
!666 = !DIDerivedType(tag: DW_TAG_member, name: "fs_supers", scope: !638, file: !44, line: 2245, baseType: !667, size: 64, offset: 512)
!667 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hlist_head", file: !113, line: 182, size: 64, elements: !668)
!668 = !{!669}
!669 = !DIDerivedType(tag: DW_TAG_member, name: "first", scope: !667, file: !113, line: 183, baseType: !670, size: 64)
!670 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !671, size: 64)
!671 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hlist_node", file: !113, line: 186, size: 128, elements: !672)
!672 = !{!673, !674}
!673 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !671, file: !113, line: 187, baseType: !670, size: 64)
!674 = !DIDerivedType(tag: DW_TAG_member, name: "pprev", scope: !671, file: !113, line: 187, baseType: !675, size: 64, offset: 64)
!675 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !670, size: 64)
!676 = !DIDerivedType(tag: DW_TAG_member, name: "s_lock_key", scope: !638, file: !44, line: 2247, baseType: !677, offset: 576)
!677 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lock_class_key", file: !678, line: 187, elements: !371)
!678 = !DIFile(filename: "./include/linux/lockdep_types.h", directory: "/home/lizy2001/genbc/linux")
!679 = !DIDerivedType(tag: DW_TAG_member, name: "s_umount_key", scope: !638, file: !44, line: 2248, baseType: !677, offset: 576)
!680 = !DIDerivedType(tag: DW_TAG_member, name: "s_vfs_rename_key", scope: !638, file: !44, line: 2249, baseType: !677, offset: 576)
!681 = !DIDerivedType(tag: DW_TAG_member, name: "s_writers_key", scope: !638, file: !44, line: 2250, baseType: !682, offset: 576)
!682 = !DICompositeType(tag: DW_TAG_array_type, baseType: !677, elements: !683)
!683 = !{!684}
!684 = !DISubrange(count: 3)
!685 = !DIDerivedType(tag: DW_TAG_member, name: "i_lock_key", scope: !638, file: !44, line: 2252, baseType: !677, offset: 576)
!686 = !DIDerivedType(tag: DW_TAG_member, name: "i_mutex_key", scope: !638, file: !44, line: 2253, baseType: !677, offset: 576)
!687 = !DIDerivedType(tag: DW_TAG_member, name: "i_mutex_dir_key", scope: !638, file: !44, line: 2254, baseType: !677, offset: 576)
!688 = !DIDerivedType(tag: DW_TAG_member, name: "s_op", scope: !629, file: !44, line: 1423, baseType: !689, size: 64, offset: 384)
!689 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !690, size: 64)
!690 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !691)
!691 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "super_operations", file: !44, line: 1935, size: 1472, elements: !692)
!692 = !{!693, !697, !701, !702, !706, !712, !716, !717, !718, !722, !726, !727, !728, !729, !735, !740, !741, !748, !749, !750, !751, !2422, !2437}
!693 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_inode", scope: !691, file: !44, line: 1936, baseType: !694, size: 64)
!694 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !695, size: 64)
!695 = !DISubroutineType(types: !696)
!696 = !{!450, !628}
!697 = !DIDerivedType(tag: DW_TAG_member, name: "destroy_inode", scope: !691, file: !44, line: 1937, baseType: !698, size: 64, offset: 64)
!698 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !699, size: 64)
!699 = !DISubroutineType(types: !700)
!700 = !{null, !450}
!701 = !DIDerivedType(tag: DW_TAG_member, name: "free_inode", scope: !691, file: !44, line: 1938, baseType: !698, size: 64, offset: 128)
!702 = !DIDerivedType(tag: DW_TAG_member, name: "dirty_inode", scope: !691, file: !44, line: 1940, baseType: !703, size: 64, offset: 192)
!703 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !704, size: 64)
!704 = !DISubroutineType(types: !705)
!705 = !{null, !450, !169}
!706 = !DIDerivedType(tag: DW_TAG_member, name: "write_inode", scope: !691, file: !44, line: 1941, baseType: !707, size: 64, offset: 256)
!707 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !708, size: 64)
!708 = !DISubroutineType(types: !709)
!709 = !{!169, !450, !710}
!710 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !711, size: 64)
!711 = !DICompositeType(tag: DW_TAG_structure_type, name: "writeback_control", file: !14, line: 40, flags: DIFlagFwdDecl)
!712 = !DIDerivedType(tag: DW_TAG_member, name: "drop_inode", scope: !691, file: !44, line: 1942, baseType: !713, size: 64, offset: 320)
!713 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !714, size: 64)
!714 = !DISubroutineType(types: !715)
!715 = !{!169, !450}
!716 = !DIDerivedType(tag: DW_TAG_member, name: "evict_inode", scope: !691, file: !44, line: 1943, baseType: !698, size: 64, offset: 384)
!717 = !DIDerivedType(tag: DW_TAG_member, name: "put_super", scope: !691, file: !44, line: 1944, baseType: !658, size: 64, offset: 448)
!718 = !DIDerivedType(tag: DW_TAG_member, name: "sync_fs", scope: !691, file: !44, line: 1945, baseType: !719, size: 64, offset: 512)
!719 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !720, size: 64)
!720 = !DISubroutineType(types: !721)
!721 = !{!169, !628, !169}
!722 = !DIDerivedType(tag: DW_TAG_member, name: "freeze_super", scope: !691, file: !44, line: 1946, baseType: !723, size: 64, offset: 576)
!723 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !724, size: 64)
!724 = !DISubroutineType(types: !725)
!725 = !{!169, !628}
!726 = !DIDerivedType(tag: DW_TAG_member, name: "freeze_fs", scope: !691, file: !44, line: 1947, baseType: !723, size: 64, offset: 640)
!727 = !DIDerivedType(tag: DW_TAG_member, name: "thaw_super", scope: !691, file: !44, line: 1948, baseType: !723, size: 64, offset: 704)
!728 = !DIDerivedType(tag: DW_TAG_member, name: "unfreeze_fs", scope: !691, file: !44, line: 1949, baseType: !723, size: 64, offset: 768)
!729 = !DIDerivedType(tag: DW_TAG_member, name: "statfs", scope: !691, file: !44, line: 1950, baseType: !730, size: 64, offset: 832)
!730 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !731, size: 64)
!731 = !DISubroutineType(types: !732)
!732 = !{!169, !407, !733}
!733 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !734, size: 64)
!734 = !DICompositeType(tag: DW_TAG_structure_type, name: "kstatfs", file: !44, line: 57, flags: DIFlagFwdDecl)
!735 = !DIDerivedType(tag: DW_TAG_member, name: "remount_fs", scope: !691, file: !44, line: 1951, baseType: !736, size: 64, offset: 896)
!736 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !737, size: 64)
!737 = !DISubroutineType(types: !738)
!738 = !{!169, !628, !739, !509}
!739 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !169, size: 64)
!740 = !DIDerivedType(tag: DW_TAG_member, name: "umount_begin", scope: !691, file: !44, line: 1952, baseType: !658, size: 64, offset: 960)
!741 = !DIDerivedType(tag: DW_TAG_member, name: "show_options", scope: !691, file: !44, line: 1954, baseType: !742, size: 64, offset: 1024)
!742 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !743, size: 64)
!743 = !DISubroutineType(types: !744)
!744 = !{!169, !745, !407}
!745 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !746, size: 64)
!746 = !DICompositeType(tag: DW_TAG_structure_type, name: "seq_file", file: !747, line: 539, flags: DIFlagFwdDecl)
!747 = !DIFile(filename: "./arch/x86/include/asm/pgtable_types.h", directory: "/home/lizy2001/genbc/linux")
!748 = !DIDerivedType(tag: DW_TAG_member, name: "show_devname", scope: !691, file: !44, line: 1955, baseType: !742, size: 64, offset: 1088)
!749 = !DIDerivedType(tag: DW_TAG_member, name: "show_path", scope: !691, file: !44, line: 1956, baseType: !742, size: 64, offset: 1152)
!750 = !DIDerivedType(tag: DW_TAG_member, name: "show_stats", scope: !691, file: !44, line: 1957, baseType: !742, size: 64, offset: 1216)
!751 = !DIDerivedType(tag: DW_TAG_member, name: "bdev_try_to_free_page", scope: !691, file: !44, line: 1963, baseType: !752, size: 64, offset: 1280)
!752 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !753, size: 64)
!753 = !DISubroutineType(types: !754)
!754 = !{!169, !628, !755, !112}
!755 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !756, size: 64)
!756 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "page", file: !757, line: 68, size: 512, align: 128, elements: !758)
!757 = !DIFile(filename: "./include/linux/mm_types.h", directory: "/home/lizy2001/genbc/linux")
!758 = !{!759, !760, !2414, !2421}
!759 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !756, file: !757, line: 69, baseType: !205, size: 64)
!760 = !DIDerivedType(tag: DW_TAG_member, scope: !756, file: !757, line: 77, baseType: !761, size: 320, offset: 64)
!761 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !756, file: !757, line: 77, size: 320, elements: !762)
!762 = !{!763, !941, !946, !974, !982, !988, !2345, !2413}
!763 = !DIDerivedType(tag: DW_TAG_member, scope: !761, file: !757, line: 78, baseType: !764, size: 320)
!764 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !761, file: !757, line: 78, size: 320, elements: !765)
!765 = !{!766, !767, !939, !940}
!766 = !DIDerivedType(tag: DW_TAG_member, name: "lru", scope: !764, file: !757, line: 84, baseType: !119, size: 128)
!767 = !DIDerivedType(tag: DW_TAG_member, name: "mapping", scope: !764, file: !757, line: 86, baseType: !768, size: 64, offset: 128)
!768 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !769, size: 64)
!769 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "address_space", file: !44, line: 451, size: 1216, align: 64, elements: !770)
!770 = !{!771, !772, !779, !780, !785, !800, !809, !810, !811, !812, !932, !933, !936, !937, !938}
!771 = !DIDerivedType(tag: DW_TAG_member, name: "host", scope: !769, file: !44, line: 452, baseType: !450, size: 64)
!772 = !DIDerivedType(tag: DW_TAG_member, name: "i_pages", scope: !769, file: !44, line: 453, baseType: !773, size: 128, offset: 64)
!773 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xarray", file: !774, line: 292, size: 128, elements: !775)
!774 = !DIFile(filename: "./include/linux/xarray.h", directory: "/home/lizy2001/genbc/linux")
!775 = !{!776, !777, !778}
!776 = !DIDerivedType(tag: DW_TAG_member, name: "xa_lock", scope: !773, file: !774, line: 293, baseType: !357)
!777 = !DIDerivedType(tag: DW_TAG_member, name: "xa_flags", scope: !773, file: !774, line: 295, baseType: !112, size: 32)
!778 = !DIDerivedType(tag: DW_TAG_member, name: "xa_head", scope: !773, file: !774, line: 296, baseType: !114, size: 64, offset: 64)
!779 = !DIDerivedType(tag: DW_TAG_member, name: "gfp_mask", scope: !769, file: !44, line: 454, baseType: !112, size: 32, offset: 192)
!780 = !DIDerivedType(tag: DW_TAG_member, name: "i_mmap_writable", scope: !769, file: !44, line: 455, baseType: !781, size: 32, offset: 224)
!781 = !DIDerivedType(tag: DW_TAG_typedef, name: "atomic_t", file: !113, line: 168, baseType: !782)
!782 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !113, line: 166, size: 32, elements: !783)
!783 = !{!784}
!784 = !DIDerivedType(tag: DW_TAG_member, name: "counter", scope: !782, file: !113, line: 167, baseType: !169, size: 32)
!785 = !DIDerivedType(tag: DW_TAG_member, name: "i_mmap", scope: !769, file: !44, line: 460, baseType: !786, size: 128, offset: 256)
!786 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rb_root_cached", file: !787, line: 125, size: 128, elements: !788)
!787 = !DIFile(filename: "./include/linux/rbtree.h", directory: "/home/lizy2001/genbc/linux")
!788 = !{!789, !799}
!789 = !DIDerivedType(tag: DW_TAG_member, name: "rb_root", scope: !786, file: !787, line: 126, baseType: !790, size: 64)
!790 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rb_root", file: !787, line: 31, size: 64, elements: !791)
!791 = !{!792}
!792 = !DIDerivedType(tag: DW_TAG_member, name: "rb_node", scope: !790, file: !787, line: 32, baseType: !793, size: 64)
!793 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !794, size: 64)
!794 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rb_node", file: !787, line: 24, size: 192, align: 64, elements: !795)
!795 = !{!796, !797, !798}
!796 = !DIDerivedType(tag: DW_TAG_member, name: "__rb_parent_color", scope: !794, file: !787, line: 25, baseType: !205, size: 64)
!797 = !DIDerivedType(tag: DW_TAG_member, name: "rb_right", scope: !794, file: !787, line: 26, baseType: !793, size: 64, offset: 64)
!798 = !DIDerivedType(tag: DW_TAG_member, name: "rb_left", scope: !794, file: !787, line: 27, baseType: !793, size: 64, offset: 128)
!799 = !DIDerivedType(tag: DW_TAG_member, name: "rb_leftmost", scope: !786, file: !787, line: 127, baseType: !793, size: 64, offset: 64)
!800 = !DIDerivedType(tag: DW_TAG_member, name: "i_mmap_rwsem", scope: !769, file: !44, line: 461, baseType: !801, size: 256, offset: 384)
!801 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rw_semaphore", file: !802, line: 35, size: 256, elements: !803)
!802 = !DIFile(filename: "./include/linux/rwsem.h", directory: "/home/lizy2001/genbc/linux")
!803 = !{!804, !805, !806, !808}
!804 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !801, file: !802, line: 36, baseType: !347, size: 64)
!805 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !801, file: !802, line: 42, baseType: !347, size: 64, offset: 64)
!806 = !DIDerivedType(tag: DW_TAG_member, name: "wait_lock", scope: !801, file: !802, line: 46, baseType: !807, offset: 128)
!807 = !DIDerivedType(tag: DW_TAG_typedef, name: "raw_spinlock_t", file: !358, line: 29, baseType: !365)
!808 = !DIDerivedType(tag: DW_TAG_member, name: "wait_list", scope: !801, file: !802, line: 47, baseType: !119, size: 128, offset: 128)
!809 = !DIDerivedType(tag: DW_TAG_member, name: "nrpages", scope: !769, file: !44, line: 462, baseType: !205, size: 64, offset: 640)
!810 = !DIDerivedType(tag: DW_TAG_member, name: "nrexceptional", scope: !769, file: !44, line: 463, baseType: !205, size: 64, offset: 704)
!811 = !DIDerivedType(tag: DW_TAG_member, name: "writeback_index", scope: !769, file: !44, line: 464, baseType: !205, size: 64, offset: 768)
!812 = !DIDerivedType(tag: DW_TAG_member, name: "a_ops", scope: !769, file: !44, line: 465, baseType: !813, size: 64, offset: 832)
!813 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !814, size: 64)
!814 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !815)
!815 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "address_space_operations", file: !44, line: 367, size: 1408, elements: !816)
!816 = !{!817, !821, !825, !829, !833, !837, !843, !849, !853, !858, !862, !866, !870, !896, !900, !906, !907, !908, !912, !917, !921, !928}
!817 = !DIDerivedType(tag: DW_TAG_member, name: "writepage", scope: !815, file: !44, line: 368, baseType: !818, size: 64)
!818 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !819, size: 64)
!819 = !DISubroutineType(types: !820)
!820 = !{!169, !755, !710}
!821 = !DIDerivedType(tag: DW_TAG_member, name: "readpage", scope: !815, file: !44, line: 369, baseType: !822, size: 64, offset: 64)
!822 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !823, size: 64)
!823 = !DISubroutineType(types: !824)
!824 = !{!169, !377, !755}
!825 = !DIDerivedType(tag: DW_TAG_member, name: "writepages", scope: !815, file: !44, line: 372, baseType: !826, size: 64, offset: 128)
!826 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !827, size: 64)
!827 = !DISubroutineType(types: !828)
!828 = !{!169, !768, !710}
!829 = !DIDerivedType(tag: DW_TAG_member, name: "set_page_dirty", scope: !815, file: !44, line: 375, baseType: !830, size: 64, offset: 192)
!830 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !831, size: 64)
!831 = !DISubroutineType(types: !832)
!832 = !{!169, !755}
!833 = !DIDerivedType(tag: DW_TAG_member, name: "readpages", scope: !815, file: !44, line: 381, baseType: !834, size: 64, offset: 256)
!834 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !835, size: 64)
!835 = !DISubroutineType(types: !836)
!836 = !{!169, !377, !768, !122, !7}
!837 = !DIDerivedType(tag: DW_TAG_member, name: "readahead", scope: !815, file: !44, line: 383, baseType: !838, size: 64, offset: 320)
!838 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !839, size: 64)
!839 = !DISubroutineType(types: !840)
!840 = !{null, !841}
!841 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !842, size: 64)
!842 = !DICompositeType(tag: DW_TAG_structure_type, name: "readahead_control", file: !44, line: 290, flags: DIFlagFwdDecl)
!843 = !DIDerivedType(tag: DW_TAG_member, name: "write_begin", scope: !815, file: !44, line: 385, baseType: !844, size: 64, offset: 384)
!844 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !845, size: 64)
!845 = !DISubroutineType(types: !846)
!846 = !{!169, !377, !768, !555, !7, !7, !847, !848}
!847 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !755, size: 64)
!848 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !114, size: 64)
!849 = !DIDerivedType(tag: DW_TAG_member, name: "write_end", scope: !815, file: !44, line: 388, baseType: !850, size: 64, offset: 448)
!850 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !851, size: 64)
!851 = !DISubroutineType(types: !852)
!852 = !{!169, !377, !768, !555, !7, !7, !755, !114}
!853 = !DIDerivedType(tag: DW_TAG_member, name: "bmap", scope: !815, file: !44, line: 393, baseType: !854, size: 64, offset: 512)
!854 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !855, size: 64)
!855 = !DISubroutineType(types: !856)
!856 = !{!857, !768, !857}
!857 = !DIDerivedType(tag: DW_TAG_typedef, name: "sector_t", file: !113, line: 125, baseType: !443)
!858 = !DIDerivedType(tag: DW_TAG_member, name: "invalidatepage", scope: !815, file: !44, line: 394, baseType: !859, size: 64, offset: 576)
!859 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !860, size: 64)
!860 = !DISubroutineType(types: !861)
!861 = !{null, !755, !7, !7}
!862 = !DIDerivedType(tag: DW_TAG_member, name: "releasepage", scope: !815, file: !44, line: 395, baseType: !863, size: 64, offset: 640)
!863 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !864, size: 64)
!864 = !DISubroutineType(types: !865)
!865 = !{!169, !755, !112}
!866 = !DIDerivedType(tag: DW_TAG_member, name: "freepage", scope: !815, file: !44, line: 396, baseType: !867, size: 64, offset: 704)
!867 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !868, size: 64)
!868 = !DISubroutineType(types: !869)
!869 = !{null, !755}
!870 = !DIDerivedType(tag: DW_TAG_member, name: "direct_IO", scope: !815, file: !44, line: 397, baseType: !871, size: 64, offset: 768)
!871 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !872, size: 64)
!872 = !DISubroutineType(types: !873)
!873 = !{!601, !874, !894}
!874 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !875, size: 64)
!875 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kiocb", file: !44, line: 320, size: 384, elements: !876)
!876 = !{!877, !878, !879, !883, !884, !885, !886, !887}
!877 = !DIDerivedType(tag: DW_TAG_member, name: "ki_filp", scope: !875, file: !44, line: 321, baseType: !377, size: 64)
!878 = !DIDerivedType(tag: DW_TAG_member, name: "ki_pos", scope: !875, file: !44, line: 326, baseType: !555, size: 64, offset: 64)
!879 = !DIDerivedType(tag: DW_TAG_member, name: "ki_complete", scope: !875, file: !44, line: 327, baseType: !880, size: 64, offset: 128)
!880 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !881, size: 64)
!881 = !DISubroutineType(types: !882)
!882 = !{null, !874, !564, !564}
!883 = !DIDerivedType(tag: DW_TAG_member, name: "private", scope: !875, file: !44, line: 328, baseType: !114, size: 64, offset: 192)
!884 = !DIDerivedType(tag: DW_TAG_member, name: "ki_flags", scope: !875, file: !44, line: 329, baseType: !169, size: 32, offset: 256)
!885 = !DIDerivedType(tag: DW_TAG_member, name: "ki_hint", scope: !875, file: !44, line: 330, baseType: !333, size: 16, offset: 288)
!886 = !DIDerivedType(tag: DW_TAG_member, name: "ki_ioprio", scope: !875, file: !44, line: 331, baseType: !333, size: 16, offset: 304)
!887 = !DIDerivedType(tag: DW_TAG_member, scope: !875, file: !44, line: 332, baseType: !888, size: 64, offset: 320)
!888 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !875, file: !44, line: 332, size: 64, elements: !889)
!889 = !{!890, !891}
!890 = !DIDerivedType(tag: DW_TAG_member, name: "ki_cookie", scope: !888, file: !44, line: 333, baseType: !7, size: 32)
!891 = !DIDerivedType(tag: DW_TAG_member, name: "ki_waitq", scope: !888, file: !44, line: 334, baseType: !892, size: 64)
!892 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !893, size: 64)
!893 = !DICompositeType(tag: DW_TAG_structure_type, name: "wait_page_queue", file: !44, line: 334, flags: DIFlagFwdDecl)
!894 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !895, size: 64)
!895 = !DICompositeType(tag: DW_TAG_structure_type, name: "iov_iter", file: !44, line: 64, flags: DIFlagFwdDecl)
!896 = !DIDerivedType(tag: DW_TAG_member, name: "migratepage", scope: !815, file: !44, line: 402, baseType: !897, size: 64, offset: 832)
!897 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !898, size: 64)
!898 = !DISubroutineType(types: !899)
!899 = !{!169, !768, !755, !755, !5}
!900 = !DIDerivedType(tag: DW_TAG_member, name: "isolate_page", scope: !815, file: !44, line: 404, baseType: !901, size: 64, offset: 896)
!901 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !902, size: 64)
!902 = !DISubroutineType(types: !903)
!903 = !{!514, !755, !904}
!904 = !DIDerivedType(tag: DW_TAG_typedef, name: "isolate_mode_t", file: !905, line: 305, baseType: !7)
!905 = !DIFile(filename: "./include/linux/mmzone.h", directory: "/home/lizy2001/genbc/linux")
!906 = !DIDerivedType(tag: DW_TAG_member, name: "putback_page", scope: !815, file: !44, line: 405, baseType: !867, size: 64, offset: 960)
!907 = !DIDerivedType(tag: DW_TAG_member, name: "launder_page", scope: !815, file: !44, line: 406, baseType: !830, size: 64, offset: 1024)
!908 = !DIDerivedType(tag: DW_TAG_member, name: "is_partially_uptodate", scope: !815, file: !44, line: 407, baseType: !909, size: 64, offset: 1088)
!909 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !910, size: 64)
!910 = !DISubroutineType(types: !911)
!911 = !{!169, !755, !205, !205}
!912 = !DIDerivedType(tag: DW_TAG_member, name: "is_dirty_writeback", scope: !815, file: !44, line: 409, baseType: !913, size: 64, offset: 1152)
!913 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !914, size: 64)
!914 = !DISubroutineType(types: !915)
!915 = !{null, !755, !916, !916}
!916 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !514, size: 64)
!917 = !DIDerivedType(tag: DW_TAG_member, name: "error_remove_page", scope: !815, file: !44, line: 410, baseType: !918, size: 64, offset: 1216)
!918 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !919, size: 64)
!919 = !DISubroutineType(types: !920)
!920 = !{!169, !768, !755}
!921 = !DIDerivedType(tag: DW_TAG_member, name: "swap_activate", scope: !815, file: !44, line: 413, baseType: !922, size: 64, offset: 1280)
!922 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !923, size: 64)
!923 = !DISubroutineType(types: !924)
!924 = !{!169, !925, !377, !927}
!925 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !926, size: 64)
!926 = !DICompositeType(tag: DW_TAG_structure_type, name: "swap_info_struct", file: !44, line: 61, flags: DIFlagFwdDecl)
!927 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !857, size: 64)
!928 = !DIDerivedType(tag: DW_TAG_member, name: "swap_deactivate", scope: !815, file: !44, line: 415, baseType: !929, size: 64, offset: 1344)
!929 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !930, size: 64)
!930 = !DISubroutineType(types: !931)
!931 = !{null, !377}
!932 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !769, file: !44, line: 466, baseType: !205, size: 64, offset: 896)
!933 = !DIDerivedType(tag: DW_TAG_member, name: "wb_err", scope: !769, file: !44, line: 467, baseType: !934, size: 32, offset: 960)
!934 = !DIDerivedType(tag: DW_TAG_typedef, name: "errseq_t", file: !935, line: 8, baseType: !440)
!935 = !DIFile(filename: "./include/linux/errseq.h", directory: "/home/lizy2001/genbc/linux")
!936 = !DIDerivedType(tag: DW_TAG_member, name: "private_lock", scope: !769, file: !44, line: 468, baseType: !357, offset: 992)
!937 = !DIDerivedType(tag: DW_TAG_member, name: "private_list", scope: !769, file: !44, line: 469, baseType: !119, size: 128, offset: 1024)
!938 = !DIDerivedType(tag: DW_TAG_member, name: "private_data", scope: !769, file: !44, line: 470, baseType: !114, size: 64, offset: 1152)
!939 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !764, file: !757, line: 87, baseType: !205, size: 64, offset: 192)
!940 = !DIDerivedType(tag: DW_TAG_member, name: "private", scope: !764, file: !757, line: 94, baseType: !205, size: 64, offset: 256)
!941 = !DIDerivedType(tag: DW_TAG_member, scope: !761, file: !757, line: 96, baseType: !942, size: 64)
!942 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !761, file: !757, line: 96, size: 64, elements: !943)
!943 = !{!944}
!944 = !DIDerivedType(tag: DW_TAG_member, name: "dma_addr", scope: !942, file: !757, line: 101, baseType: !945, size: 64)
!945 = !DIDerivedType(tag: DW_TAG_typedef, name: "dma_addr_t", file: !113, line: 143, baseType: !443)
!946 = !DIDerivedType(tag: DW_TAG_member, scope: !761, file: !757, line: 103, baseType: !947, size: 320)
!947 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !761, file: !757, line: 103, size: 320, elements: !948)
!948 = !{!949, !959, !962, !963}
!949 = !DIDerivedType(tag: DW_TAG_member, scope: !947, file: !757, line: 104, baseType: !950, size: 128)
!950 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !947, file: !757, line: 104, size: 128, elements: !951)
!951 = !{!952, !953}
!952 = !DIDerivedType(tag: DW_TAG_member, name: "slab_list", scope: !950, file: !757, line: 105, baseType: !119, size: 128)
!953 = !DIDerivedType(tag: DW_TAG_member, scope: !950, file: !757, line: 106, baseType: !954, size: 128)
!954 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !950, file: !757, line: 106, size: 128, elements: !955)
!955 = !{!956, !957, !958}
!956 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !954, file: !757, line: 107, baseType: !755, size: 64)
!957 = !DIDerivedType(tag: DW_TAG_member, name: "pages", scope: !954, file: !757, line: 109, baseType: !169, size: 32, offset: 64)
!958 = !DIDerivedType(tag: DW_TAG_member, name: "pobjects", scope: !954, file: !757, line: 110, baseType: !169, size: 32, offset: 96)
!959 = !DIDerivedType(tag: DW_TAG_member, name: "slab_cache", scope: !947, file: !757, line: 117, baseType: !960, size: 64, offset: 128)
!960 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !961, size: 64)
!961 = !DICompositeType(tag: DW_TAG_structure_type, name: "kmem_cache", file: !757, line: 117, flags: DIFlagFwdDecl)
!962 = !DIDerivedType(tag: DW_TAG_member, name: "freelist", scope: !947, file: !757, line: 119, baseType: !114, size: 64, offset: 192)
!963 = !DIDerivedType(tag: DW_TAG_member, scope: !947, file: !757, line: 120, baseType: !964, size: 64, offset: 256)
!964 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !947, file: !757, line: 120, size: 64, elements: !965)
!965 = !{!966, !967, !968}
!966 = !DIDerivedType(tag: DW_TAG_member, name: "s_mem", scope: !964, file: !757, line: 121, baseType: !114, size: 64)
!967 = !DIDerivedType(tag: DW_TAG_member, name: "counters", scope: !964, file: !757, line: 122, baseType: !205, size: 64)
!968 = !DIDerivedType(tag: DW_TAG_member, scope: !964, file: !757, line: 123, baseType: !969, size: 32)
!969 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !964, file: !757, line: 123, size: 32, elements: !970)
!970 = !{!971, !972, !973}
!971 = !DIDerivedType(tag: DW_TAG_member, name: "inuse", scope: !969, file: !757, line: 124, baseType: !7, size: 16, flags: DIFlagBitField, extraData: i64 0)
!972 = !DIDerivedType(tag: DW_TAG_member, name: "objects", scope: !969, file: !757, line: 125, baseType: !7, size: 15, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!973 = !DIDerivedType(tag: DW_TAG_member, name: "frozen", scope: !969, file: !757, line: 126, baseType: !7, size: 1, offset: 31, flags: DIFlagBitField, extraData: i64 0)
!974 = !DIDerivedType(tag: DW_TAG_member, scope: !761, file: !757, line: 130, baseType: !975, size: 192)
!975 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !761, file: !757, line: 130, size: 192, elements: !976)
!976 = !{!977, !978, !979, !980, !981}
!977 = !DIDerivedType(tag: DW_TAG_member, name: "compound_head", scope: !975, file: !757, line: 131, baseType: !205, size: 64)
!978 = !DIDerivedType(tag: DW_TAG_member, name: "compound_dtor", scope: !975, file: !757, line: 134, baseType: !153, size: 8, offset: 64)
!979 = !DIDerivedType(tag: DW_TAG_member, name: "compound_order", scope: !975, file: !757, line: 135, baseType: !153, size: 8, offset: 72)
!980 = !DIDerivedType(tag: DW_TAG_member, name: "compound_mapcount", scope: !975, file: !757, line: 136, baseType: !781, size: 32, offset: 96)
!981 = !DIDerivedType(tag: DW_TAG_member, name: "compound_nr", scope: !975, file: !757, line: 137, baseType: !7, size: 32, offset: 128)
!982 = !DIDerivedType(tag: DW_TAG_member, scope: !761, file: !757, line: 139, baseType: !983, size: 256)
!983 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !761, file: !757, line: 139, size: 256, elements: !984)
!984 = !{!985, !986, !987}
!985 = !DIDerivedType(tag: DW_TAG_member, name: "_compound_pad_1", scope: !983, file: !757, line: 140, baseType: !205, size: 64)
!986 = !DIDerivedType(tag: DW_TAG_member, name: "hpage_pinned_refcount", scope: !983, file: !757, line: 141, baseType: !781, size: 32, offset: 64)
!987 = !DIDerivedType(tag: DW_TAG_member, name: "deferred_list", scope: !983, file: !757, line: 143, baseType: !119, size: 128, offset: 128)
!988 = !DIDerivedType(tag: DW_TAG_member, scope: !761, file: !757, line: 145, baseType: !989, size: 256)
!989 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !761, file: !757, line: 145, size: 256, elements: !990)
!990 = !{!991, !992, !994, !995, !2344}
!991 = !DIDerivedType(tag: DW_TAG_member, name: "_pt_pad_1", scope: !989, file: !757, line: 146, baseType: !205, size: 64)
!992 = !DIDerivedType(tag: DW_TAG_member, name: "pmd_huge_pte", scope: !989, file: !757, line: 147, baseType: !993, size: 64, offset: 64)
!993 = !DIDerivedType(tag: DW_TAG_typedef, name: "pgtable_t", file: !747, line: 509, baseType: !755)
!994 = !DIDerivedType(tag: DW_TAG_member, name: "_pt_pad_2", scope: !989, file: !757, line: 148, baseType: !205, size: 64, offset: 128)
!995 = !DIDerivedType(tag: DW_TAG_member, scope: !989, file: !757, line: 149, baseType: !996, size: 64, offset: 192)
!996 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !989, file: !757, line: 149, size: 64, elements: !997)
!997 = !{!998, !2343}
!998 = !DIDerivedType(tag: DW_TAG_member, name: "pt_mm", scope: !996, file: !757, line: 150, baseType: !999, size: 64)
!999 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1000, size: 64)
!1000 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mm_struct", file: !757, line: 388, size: 7296, elements: !1001)
!1001 = !{!1002, !2339}
!1002 = !DIDerivedType(tag: DW_TAG_member, scope: !1000, file: !757, line: 389, baseType: !1003, size: 7296)
!1003 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1000, file: !757, line: 389, size: 7296, elements: !1004)
!1004 = !{!1005, !1123, !1124, !1125, !1129, !1130, !1131, !1132, !1133, !1140, !1141, !1142, !1143, !1144, !1145, !1146, !1147, !1148, !1149, !1150, !1151, !1152, !1153, !1154, !1155, !1156, !1157, !1158, !1159, !1160, !1161, !1162, !1163, !1164, !1165, !1166, !1167, !1168, !1169, !1170, !1174, !1182, !1185, !1223, !1224, !2323, !2324, !2327, !2328, !2329, !2332, !2333, !2334, !2337, !2338}
!1005 = !DIDerivedType(tag: DW_TAG_member, name: "mmap", scope: !1003, file: !757, line: 390, baseType: !1006, size: 64)
!1006 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1007, size: 64)
!1007 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vm_area_struct", file: !757, line: 305, size: 1472, elements: !1008)
!1008 = !{!1009, !1010, !1011, !1012, !1013, !1014, !1015, !1016, !1023, !1024, !1029, !1030, !1033, !1117, !1118, !1119, !1120, !1121}
!1009 = !DIDerivedType(tag: DW_TAG_member, name: "vm_start", scope: !1007, file: !757, line: 308, baseType: !205, size: 64)
!1010 = !DIDerivedType(tag: DW_TAG_member, name: "vm_end", scope: !1007, file: !757, line: 309, baseType: !205, size: 64, offset: 64)
!1011 = !DIDerivedType(tag: DW_TAG_member, name: "vm_next", scope: !1007, file: !757, line: 313, baseType: !1006, size: 64, offset: 128)
!1012 = !DIDerivedType(tag: DW_TAG_member, name: "vm_prev", scope: !1007, file: !757, line: 313, baseType: !1006, size: 64, offset: 192)
!1013 = !DIDerivedType(tag: DW_TAG_member, name: "vm_rb", scope: !1007, file: !757, line: 315, baseType: !794, size: 192, align: 64, offset: 256)
!1014 = !DIDerivedType(tag: DW_TAG_member, name: "rb_subtree_gap", scope: !1007, file: !757, line: 323, baseType: !205, size: 64, offset: 448)
!1015 = !DIDerivedType(tag: DW_TAG_member, name: "vm_mm", scope: !1007, file: !757, line: 327, baseType: !999, size: 64, offset: 512)
!1016 = !DIDerivedType(tag: DW_TAG_member, name: "vm_page_prot", scope: !1007, file: !757, line: 333, baseType: !1017, size: 64, offset: 576)
!1017 = !DIDerivedType(tag: DW_TAG_typedef, name: "pgprot_t", file: !747, line: 284, baseType: !1018)
!1018 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pgprot", file: !747, line: 284, size: 64, elements: !1019)
!1019 = !{!1020}
!1020 = !DIDerivedType(tag: DW_TAG_member, name: "pgprot", scope: !1018, file: !747, line: 284, baseType: !1021, size: 64)
!1021 = !DIDerivedType(tag: DW_TAG_typedef, name: "pgprotval_t", file: !1022, line: 19, baseType: !205)
!1022 = !DIFile(filename: "./arch/x86/include/asm/pgtable_64_types.h", directory: "/home/lizy2001/genbc/linux")
!1023 = !DIDerivedType(tag: DW_TAG_member, name: "vm_flags", scope: !1007, file: !757, line: 334, baseType: !205, size: 64, offset: 640)
!1024 = !DIDerivedType(tag: DW_TAG_member, name: "shared", scope: !1007, file: !757, line: 343, baseType: !1025, size: 256, offset: 704)
!1025 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1007, file: !757, line: 340, size: 256, elements: !1026)
!1026 = !{!1027, !1028}
!1027 = !DIDerivedType(tag: DW_TAG_member, name: "rb", scope: !1025, file: !757, line: 341, baseType: !794, size: 192, align: 64)
!1028 = !DIDerivedType(tag: DW_TAG_member, name: "rb_subtree_last", scope: !1025, file: !757, line: 342, baseType: !205, size: 64, offset: 192)
!1029 = !DIDerivedType(tag: DW_TAG_member, name: "anon_vma_chain", scope: !1007, file: !757, line: 351, baseType: !119, size: 128, offset: 960)
!1030 = !DIDerivedType(tag: DW_TAG_member, name: "anon_vma", scope: !1007, file: !757, line: 353, baseType: !1031, size: 64, offset: 1088)
!1031 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1032, size: 64)
!1032 = !DICompositeType(tag: DW_TAG_structure_type, name: "anon_vma", file: !757, line: 353, flags: DIFlagFwdDecl)
!1033 = !DIDerivedType(tag: DW_TAG_member, name: "vm_ops", scope: !1007, file: !757, line: 356, baseType: !1034, size: 64, offset: 1152)
!1034 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1035, size: 64)
!1035 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1036)
!1036 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vm_operations_struct", file: !14, line: 557, size: 832, elements: !1037)
!1037 = !{!1038, !1042, !1043, !1047, !1051, !1091, !1095, !1099, !1103, !1104, !1105, !1109, !1113}
!1038 = !DIDerivedType(tag: DW_TAG_member, name: "open", scope: !1036, file: !14, line: 558, baseType: !1039, size: 64)
!1039 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1040, size: 64)
!1040 = !DISubroutineType(types: !1041)
!1041 = !{null, !1006}
!1042 = !DIDerivedType(tag: DW_TAG_member, name: "close", scope: !1036, file: !14, line: 559, baseType: !1039, size: 64, offset: 64)
!1043 = !DIDerivedType(tag: DW_TAG_member, name: "split", scope: !1036, file: !14, line: 560, baseType: !1044, size: 64, offset: 128)
!1044 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1045, size: 64)
!1045 = !DISubroutineType(types: !1046)
!1046 = !{!169, !1006, !205}
!1047 = !DIDerivedType(tag: DW_TAG_member, name: "mremap", scope: !1036, file: !14, line: 561, baseType: !1048, size: 64, offset: 192)
!1048 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1049, size: 64)
!1049 = !DISubroutineType(types: !1050)
!1050 = !{!169, !1006}
!1051 = !DIDerivedType(tag: DW_TAG_member, name: "fault", scope: !1036, file: !14, line: 562, baseType: !1052, size: 64, offset: 256)
!1052 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1053, size: 64)
!1053 = !DISubroutineType(types: !1054)
!1054 = !{!1055, !1056}
!1055 = !DIDerivedType(tag: DW_TAG_typedef, name: "vm_fault_t", file: !757, line: 682, baseType: !7)
!1056 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1057, size: 64)
!1057 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vm_fault", file: !14, line: 508, size: 768, elements: !1058)
!1058 = !{!1059, !1060, !1061, !1062, !1063, !1064, !1071, !1078, !1084, !1085, !1086, !1088, !1090}
!1059 = !DIDerivedType(tag: DW_TAG_member, name: "vma", scope: !1057, file: !14, line: 509, baseType: !1006, size: 64)
!1060 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1057, file: !14, line: 510, baseType: !7, size: 32, offset: 64)
!1061 = !DIDerivedType(tag: DW_TAG_member, name: "gfp_mask", scope: !1057, file: !14, line: 511, baseType: !112, size: 32, offset: 96)
!1062 = !DIDerivedType(tag: DW_TAG_member, name: "pgoff", scope: !1057, file: !14, line: 512, baseType: !205, size: 64, offset: 128)
!1063 = !DIDerivedType(tag: DW_TAG_member, name: "address", scope: !1057, file: !14, line: 513, baseType: !205, size: 64, offset: 192)
!1064 = !DIDerivedType(tag: DW_TAG_member, name: "pmd", scope: !1057, file: !14, line: 514, baseType: !1065, size: 64, offset: 256)
!1065 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1066, size: 64)
!1066 = !DIDerivedType(tag: DW_TAG_typedef, name: "pmd_t", file: !747, line: 385, baseType: !1067)
!1067 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !747, line: 385, size: 64, elements: !1068)
!1068 = !{!1069}
!1069 = !DIDerivedType(tag: DW_TAG_member, name: "pmd", scope: !1067, file: !747, line: 385, baseType: !1070, size: 64)
!1070 = !DIDerivedType(tag: DW_TAG_typedef, name: "pmdval_t", file: !1022, line: 15, baseType: !205)
!1071 = !DIDerivedType(tag: DW_TAG_member, name: "pud", scope: !1057, file: !14, line: 516, baseType: !1072, size: 64, offset: 320)
!1072 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1073, size: 64)
!1073 = !DIDerivedType(tag: DW_TAG_typedef, name: "pud_t", file: !747, line: 359, baseType: !1074)
!1074 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !747, line: 359, size: 64, elements: !1075)
!1075 = !{!1076}
!1076 = !DIDerivedType(tag: DW_TAG_member, name: "pud", scope: !1074, file: !747, line: 359, baseType: !1077, size: 64)
!1077 = !DIDerivedType(tag: DW_TAG_typedef, name: "pudval_t", file: !1022, line: 16, baseType: !205)
!1078 = !DIDerivedType(tag: DW_TAG_member, name: "orig_pte", scope: !1057, file: !14, line: 519, baseType: !1079, size: 64, offset: 384)
!1079 = !DIDerivedType(tag: DW_TAG_typedef, name: "pte_t", file: !1022, line: 21, baseType: !1080)
!1080 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1022, line: 21, size: 64, elements: !1081)
!1081 = !{!1082}
!1082 = !DIDerivedType(tag: DW_TAG_member, name: "pte", scope: !1080, file: !1022, line: 21, baseType: !1083, size: 64)
!1083 = !DIDerivedType(tag: DW_TAG_typedef, name: "pteval_t", file: !1022, line: 14, baseType: !205)
!1084 = !DIDerivedType(tag: DW_TAG_member, name: "cow_page", scope: !1057, file: !14, line: 521, baseType: !755, size: 64, offset: 448)
!1085 = !DIDerivedType(tag: DW_TAG_member, name: "page", scope: !1057, file: !14, line: 522, baseType: !755, size: 64, offset: 512)
!1086 = !DIDerivedType(tag: DW_TAG_member, name: "pte", scope: !1057, file: !14, line: 528, baseType: !1087, size: 64, offset: 576)
!1087 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1079, size: 64)
!1088 = !DIDerivedType(tag: DW_TAG_member, name: "ptl", scope: !1057, file: !14, line: 532, baseType: !1089, size: 64, offset: 640)
!1089 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !357, size: 64)
!1090 = !DIDerivedType(tag: DW_TAG_member, name: "prealloc_pte", scope: !1057, file: !14, line: 536, baseType: !993, size: 64, offset: 704)
!1091 = !DIDerivedType(tag: DW_TAG_member, name: "huge_fault", scope: !1036, file: !14, line: 563, baseType: !1092, size: 64, offset: 320)
!1092 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1093, size: 64)
!1093 = !DISubroutineType(types: !1094)
!1094 = !{!1055, !1056, !13}
!1095 = !DIDerivedType(tag: DW_TAG_member, name: "map_pages", scope: !1036, file: !14, line: 565, baseType: !1096, size: 64, offset: 384)
!1096 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1097, size: 64)
!1097 = !DISubroutineType(types: !1098)
!1098 = !{null, !1056, !205, !205}
!1099 = !DIDerivedType(tag: DW_TAG_member, name: "pagesize", scope: !1036, file: !14, line: 567, baseType: !1100, size: 64, offset: 448)
!1100 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1101, size: 64)
!1101 = !DISubroutineType(types: !1102)
!1102 = !{!205, !1006}
!1103 = !DIDerivedType(tag: DW_TAG_member, name: "page_mkwrite", scope: !1036, file: !14, line: 571, baseType: !1052, size: 64, offset: 512)
!1104 = !DIDerivedType(tag: DW_TAG_member, name: "pfn_mkwrite", scope: !1036, file: !14, line: 574, baseType: !1052, size: 64, offset: 576)
!1105 = !DIDerivedType(tag: DW_TAG_member, name: "access", scope: !1036, file: !14, line: 579, baseType: !1106, size: 64, offset: 640)
!1106 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1107, size: 64)
!1107 = !DISubroutineType(types: !1108)
!1108 = !{!169, !1006, !205, !114, !169, !169}
!1109 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1036, file: !14, line: 585, baseType: !1110, size: 64, offset: 704)
!1110 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1111, size: 64)
!1111 = !DISubroutineType(types: !1112)
!1112 = !{!190, !1006}
!1113 = !DIDerivedType(tag: DW_TAG_member, name: "find_special_page", scope: !1036, file: !14, line: 615, baseType: !1114, size: 64, offset: 768)
!1114 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1115, size: 64)
!1115 = !DISubroutineType(types: !1116)
!1116 = !{!755, !1006, !205}
!1117 = !DIDerivedType(tag: DW_TAG_member, name: "vm_pgoff", scope: !1007, file: !757, line: 359, baseType: !205, size: 64, offset: 1216)
!1118 = !DIDerivedType(tag: DW_TAG_member, name: "vm_file", scope: !1007, file: !757, line: 361, baseType: !377, size: 64, offset: 1280)
!1119 = !DIDerivedType(tag: DW_TAG_member, name: "vm_private_data", scope: !1007, file: !757, line: 362, baseType: !114, size: 64, offset: 1344)
!1120 = !DIDerivedType(tag: DW_TAG_member, name: "swap_readahead_info", scope: !1007, file: !757, line: 365, baseType: !347, size: 64, offset: 1408)
!1121 = !DIDerivedType(tag: DW_TAG_member, name: "vm_userfaultfd_ctx", scope: !1007, file: !757, line: 373, baseType: !1122, offset: 1472)
!1122 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vm_userfaultfd_ctx", file: !757, line: 296, elements: !371)
!1123 = !DIDerivedType(tag: DW_TAG_member, name: "mm_rb", scope: !1003, file: !757, line: 391, baseType: !790, size: 64, offset: 64)
!1124 = !DIDerivedType(tag: DW_TAG_member, name: "vmacache_seqnum", scope: !1003, file: !757, line: 392, baseType: !443, size: 64, offset: 128)
!1125 = !DIDerivedType(tag: DW_TAG_member, name: "get_unmapped_area", scope: !1003, file: !757, line: 394, baseType: !1126, size: 64, offset: 192)
!1126 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1127, size: 64)
!1127 = !DISubroutineType(types: !1128)
!1128 = !{!205, !377, !205, !205, !205, !205}
!1129 = !DIDerivedType(tag: DW_TAG_member, name: "mmap_base", scope: !1003, file: !757, line: 398, baseType: !205, size: 64, offset: 256)
!1130 = !DIDerivedType(tag: DW_TAG_member, name: "mmap_legacy_base", scope: !1003, file: !757, line: 399, baseType: !205, size: 64, offset: 320)
!1131 = !DIDerivedType(tag: DW_TAG_member, name: "task_size", scope: !1003, file: !757, line: 405, baseType: !205, size: 64, offset: 384)
!1132 = !DIDerivedType(tag: DW_TAG_member, name: "highest_vm_end", scope: !1003, file: !757, line: 406, baseType: !205, size: 64, offset: 448)
!1133 = !DIDerivedType(tag: DW_TAG_member, name: "pgd", scope: !1003, file: !757, line: 407, baseType: !1134, size: 64, offset: 512)
!1134 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1135, size: 64)
!1135 = !DIDerivedType(tag: DW_TAG_typedef, name: "pgd_t", file: !747, line: 286, baseType: !1136)
!1136 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !747, line: 286, size: 64, elements: !1137)
!1137 = !{!1138}
!1138 = !DIDerivedType(tag: DW_TAG_member, name: "pgd", scope: !1136, file: !747, line: 286, baseType: !1139, size: 64)
!1139 = !DIDerivedType(tag: DW_TAG_typedef, name: "pgdval_t", file: !1022, line: 18, baseType: !205)
!1140 = !DIDerivedType(tag: DW_TAG_member, name: "membarrier_state", scope: !1003, file: !757, line: 416, baseType: !781, size: 32, offset: 576)
!1141 = !DIDerivedType(tag: DW_TAG_member, name: "mm_users", scope: !1003, file: !757, line: 428, baseType: !781, size: 32, offset: 608)
!1142 = !DIDerivedType(tag: DW_TAG_member, name: "mm_count", scope: !1003, file: !757, line: 437, baseType: !781, size: 32, offset: 640)
!1143 = !DIDerivedType(tag: DW_TAG_member, name: "has_pinned", scope: !1003, file: !757, line: 447, baseType: !781, size: 32, offset: 672)
!1144 = !DIDerivedType(tag: DW_TAG_member, name: "pgtables_bytes", scope: !1003, file: !757, line: 450, baseType: !347, size: 64, offset: 704)
!1145 = !DIDerivedType(tag: DW_TAG_member, name: "map_count", scope: !1003, file: !757, line: 452, baseType: !169, size: 32, offset: 768)
!1146 = !DIDerivedType(tag: DW_TAG_member, name: "page_table_lock", scope: !1003, file: !757, line: 454, baseType: !357, offset: 800)
!1147 = !DIDerivedType(tag: DW_TAG_member, name: "mmap_lock", scope: !1003, file: !757, line: 457, baseType: !801, size: 256, offset: 832)
!1148 = !DIDerivedType(tag: DW_TAG_member, name: "mmlist", scope: !1003, file: !757, line: 459, baseType: !119, size: 128, offset: 1088)
!1149 = !DIDerivedType(tag: DW_TAG_member, name: "hiwater_rss", scope: !1003, file: !757, line: 466, baseType: !205, size: 64, offset: 1216)
!1150 = !DIDerivedType(tag: DW_TAG_member, name: "hiwater_vm", scope: !1003, file: !757, line: 467, baseType: !205, size: 64, offset: 1280)
!1151 = !DIDerivedType(tag: DW_TAG_member, name: "total_vm", scope: !1003, file: !757, line: 469, baseType: !205, size: 64, offset: 1344)
!1152 = !DIDerivedType(tag: DW_TAG_member, name: "locked_vm", scope: !1003, file: !757, line: 470, baseType: !205, size: 64, offset: 1408)
!1153 = !DIDerivedType(tag: DW_TAG_member, name: "pinned_vm", scope: !1003, file: !757, line: 471, baseType: !349, size: 64, offset: 1472)
!1154 = !DIDerivedType(tag: DW_TAG_member, name: "data_vm", scope: !1003, file: !757, line: 472, baseType: !205, size: 64, offset: 1536)
!1155 = !DIDerivedType(tag: DW_TAG_member, name: "exec_vm", scope: !1003, file: !757, line: 473, baseType: !205, size: 64, offset: 1600)
!1156 = !DIDerivedType(tag: DW_TAG_member, name: "stack_vm", scope: !1003, file: !757, line: 474, baseType: !205, size: 64, offset: 1664)
!1157 = !DIDerivedType(tag: DW_TAG_member, name: "def_flags", scope: !1003, file: !757, line: 475, baseType: !205, size: 64, offset: 1728)
!1158 = !DIDerivedType(tag: DW_TAG_member, name: "arg_lock", scope: !1003, file: !757, line: 477, baseType: !357, offset: 1792)
!1159 = !DIDerivedType(tag: DW_TAG_member, name: "start_code", scope: !1003, file: !757, line: 478, baseType: !205, size: 64, offset: 1792)
!1160 = !DIDerivedType(tag: DW_TAG_member, name: "end_code", scope: !1003, file: !757, line: 478, baseType: !205, size: 64, offset: 1856)
!1161 = !DIDerivedType(tag: DW_TAG_member, name: "start_data", scope: !1003, file: !757, line: 478, baseType: !205, size: 64, offset: 1920)
!1162 = !DIDerivedType(tag: DW_TAG_member, name: "end_data", scope: !1003, file: !757, line: 478, baseType: !205, size: 64, offset: 1984)
!1163 = !DIDerivedType(tag: DW_TAG_member, name: "start_brk", scope: !1003, file: !757, line: 479, baseType: !205, size: 64, offset: 2048)
!1164 = !DIDerivedType(tag: DW_TAG_member, name: "brk", scope: !1003, file: !757, line: 479, baseType: !205, size: 64, offset: 2112)
!1165 = !DIDerivedType(tag: DW_TAG_member, name: "start_stack", scope: !1003, file: !757, line: 479, baseType: !205, size: 64, offset: 2176)
!1166 = !DIDerivedType(tag: DW_TAG_member, name: "arg_start", scope: !1003, file: !757, line: 480, baseType: !205, size: 64, offset: 2240)
!1167 = !DIDerivedType(tag: DW_TAG_member, name: "arg_end", scope: !1003, file: !757, line: 480, baseType: !205, size: 64, offset: 2304)
!1168 = !DIDerivedType(tag: DW_TAG_member, name: "env_start", scope: !1003, file: !757, line: 480, baseType: !205, size: 64, offset: 2368)
!1169 = !DIDerivedType(tag: DW_TAG_member, name: "env_end", scope: !1003, file: !757, line: 480, baseType: !205, size: 64, offset: 2432)
!1170 = !DIDerivedType(tag: DW_TAG_member, name: "saved_auxv", scope: !1003, file: !757, line: 482, baseType: !1171, size: 2816, offset: 2496)
!1171 = !DICompositeType(tag: DW_TAG_array_type, baseType: !205, size: 2816, elements: !1172)
!1172 = !{!1173}
!1173 = !DISubrange(count: 44)
!1174 = !DIDerivedType(tag: DW_TAG_member, name: "rss_stat", scope: !1003, file: !757, line: 488, baseType: !1175, size: 256, offset: 5312)
!1175 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mm_rss_stat", file: !1176, line: 60, size: 256, elements: !1177)
!1176 = !DIFile(filename: "./include/linux/mm_types_task.h", directory: "/home/lizy2001/genbc/linux")
!1177 = !{!1178}
!1178 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !1175, file: !1176, line: 61, baseType: !1179, size: 256)
!1179 = !DICompositeType(tag: DW_TAG_array_type, baseType: !347, size: 256, elements: !1180)
!1180 = !{!1181}
!1181 = !DISubrange(count: 4)
!1182 = !DIDerivedType(tag: DW_TAG_member, name: "binfmt", scope: !1003, file: !757, line: 490, baseType: !1183, size: 64, offset: 5568)
!1183 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1184, size: 64)
!1184 = !DICompositeType(tag: DW_TAG_structure_type, name: "linux_binfmt", file: !757, line: 490, flags: DIFlagFwdDecl)
!1185 = !DIDerivedType(tag: DW_TAG_member, name: "context", scope: !1003, file: !757, line: 493, baseType: !1186, size: 896, offset: 5632)
!1186 = !DIDerivedType(tag: DW_TAG_typedef, name: "mm_context_t", file: !1187, line: 53, baseType: !1188)
!1187 = !DIFile(filename: "./arch/x86/include/asm/mmu.h", directory: "/home/lizy2001/genbc/linux")
!1188 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1187, line: 13, size: 896, elements: !1189)
!1189 = !{!1190, !1191, !1192, !1193, !1196, !1197, !1198, !1199, !1219, !1220, !1221}
!1190 = !DIDerivedType(tag: DW_TAG_member, name: "ctx_id", scope: !1188, file: !1187, line: 18, baseType: !443, size: 64)
!1191 = !DIDerivedType(tag: DW_TAG_member, name: "tlb_gen", scope: !1188, file: !1187, line: 28, baseType: !349, size: 64, offset: 64)
!1192 = !DIDerivedType(tag: DW_TAG_member, name: "ldt_usr_sem", scope: !1188, file: !1187, line: 31, baseType: !801, size: 256, offset: 128)
!1193 = !DIDerivedType(tag: DW_TAG_member, name: "ldt", scope: !1188, file: !1187, line: 32, baseType: !1194, size: 64, offset: 384)
!1194 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1195, size: 64)
!1195 = !DICompositeType(tag: DW_TAG_structure_type, name: "ldt_struct", file: !1187, line: 32, flags: DIFlagFwdDecl)
!1196 = !DIDerivedType(tag: DW_TAG_member, name: "ia32_compat", scope: !1188, file: !1187, line: 37, baseType: !150, size: 16, offset: 448)
!1197 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1188, file: !1187, line: 40, baseType: !343, size: 192, offset: 512)
!1198 = !DIDerivedType(tag: DW_TAG_member, name: "vdso", scope: !1188, file: !1187, line: 41, baseType: !114, size: 64, offset: 704)
!1199 = !DIDerivedType(tag: DW_TAG_member, name: "vdso_image", scope: !1188, file: !1187, line: 42, baseType: !1200, size: 64, offset: 768)
!1200 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1201, size: 64)
!1201 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1202)
!1202 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vdso_image", file: !1203, line: 13, size: 896, elements: !1204)
!1203 = !DIFile(filename: "./arch/x86/include/asm/vdso.h", directory: "/home/lizy2001/genbc/linux")
!1204 = !{!1205, !1206, !1207, !1208, !1209, !1210, !1211, !1212, !1213, !1214, !1215, !1216, !1217, !1218}
!1205 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1202, file: !1203, line: 14, baseType: !114, size: 64)
!1206 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1202, file: !1203, line: 15, baseType: !205, size: 64, offset: 64)
!1207 = !DIDerivedType(tag: DW_TAG_member, name: "alt", scope: !1202, file: !1203, line: 17, baseType: !205, size: 64, offset: 128)
!1208 = !DIDerivedType(tag: DW_TAG_member, name: "alt_len", scope: !1202, file: !1203, line: 17, baseType: !205, size: 64, offset: 192)
!1209 = !DIDerivedType(tag: DW_TAG_member, name: "sym_vvar_start", scope: !1202, file: !1203, line: 19, baseType: !564, size: 64, offset: 256)
!1210 = !DIDerivedType(tag: DW_TAG_member, name: "sym_vvar_page", scope: !1202, file: !1203, line: 21, baseType: !564, size: 64, offset: 320)
!1211 = !DIDerivedType(tag: DW_TAG_member, name: "sym_pvclock_page", scope: !1202, file: !1203, line: 22, baseType: !564, size: 64, offset: 384)
!1212 = !DIDerivedType(tag: DW_TAG_member, name: "sym_hvclock_page", scope: !1202, file: !1203, line: 23, baseType: !564, size: 64, offset: 448)
!1213 = !DIDerivedType(tag: DW_TAG_member, name: "sym_timens_page", scope: !1202, file: !1203, line: 24, baseType: !564, size: 64, offset: 512)
!1214 = !DIDerivedType(tag: DW_TAG_member, name: "sym_VDSO32_NOTE_MASK", scope: !1202, file: !1203, line: 25, baseType: !564, size: 64, offset: 576)
!1215 = !DIDerivedType(tag: DW_TAG_member, name: "sym___kernel_sigreturn", scope: !1202, file: !1203, line: 26, baseType: !564, size: 64, offset: 640)
!1216 = !DIDerivedType(tag: DW_TAG_member, name: "sym___kernel_rt_sigreturn", scope: !1202, file: !1203, line: 27, baseType: !564, size: 64, offset: 704)
!1217 = !DIDerivedType(tag: DW_TAG_member, name: "sym___kernel_vsyscall", scope: !1202, file: !1203, line: 28, baseType: !564, size: 64, offset: 768)
!1218 = !DIDerivedType(tag: DW_TAG_member, name: "sym_int80_landing_pad", scope: !1202, file: !1203, line: 29, baseType: !564, size: 64, offset: 832)
!1219 = !DIDerivedType(tag: DW_TAG_member, name: "perf_rdpmc_allowed", scope: !1188, file: !1187, line: 44, baseType: !781, size: 32, offset: 832)
!1220 = !DIDerivedType(tag: DW_TAG_member, name: "pkey_allocation_map", scope: !1188, file: !1187, line: 50, baseType: !333, size: 16, offset: 864)
!1221 = !DIDerivedType(tag: DW_TAG_member, name: "execute_only_pkey", scope: !1188, file: !1187, line: 51, baseType: !1222, size: 16, offset: 880)
!1222 = !DIDerivedType(tag: DW_TAG_typedef, name: "s16", file: !334, line: 18, baseType: !158)
!1223 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1003, file: !757, line: 495, baseType: !205, size: 64, offset: 6528)
!1224 = !DIDerivedType(tag: DW_TAG_member, name: "core_state", scope: !1003, file: !757, line: 497, baseType: !1225, size: 64, offset: 6592)
!1225 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1226, size: 64)
!1226 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "core_state", file: !757, line: 381, size: 384, elements: !1227)
!1227 = !{!1228, !1229, !2322}
!1228 = !DIDerivedType(tag: DW_TAG_member, name: "nr_threads", scope: !1226, file: !757, line: 382, baseType: !781, size: 32)
!1229 = !DIDerivedType(tag: DW_TAG_member, name: "dumper", scope: !1226, file: !757, line: 383, baseType: !1230, size: 128, offset: 64)
!1230 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "core_thread", file: !757, line: 376, size: 128, elements: !1231)
!1231 = !{!1232, !2320}
!1232 = !DIDerivedType(tag: DW_TAG_member, name: "task", scope: !1230, file: !757, line: 377, baseType: !1233, size: 64)
!1233 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1234, size: 64)
!1234 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "task_struct", file: !1235, line: 640, size: 48640, elements: !1236)
!1235 = !DIFile(filename: "./include/linux/sched.h", directory: "/home/lizy2001/genbc/linux")
!1236 = !{!1237, !1243, !1245, !1246, !1252, !1253, !1254, !1255, !1256, !1257, !1258, !1259, !1263, !1281, !1292, !1376, !1377, !1378, !1386, !1387, !1389, !1390, !1391, !1392, !1398, !1399, !1400, !1401, !1402, !1403, !1404, !1405, !1406, !1407, !1408, !1409, !1410, !1411, !1412, !1413, !1470, !1473, !1474, !1475, !1476, !1477, !1478, !1479, !1480, !1481, !1482, !1508, !1510, !1511, !1512, !1524, !1525, !1526, !1527, !1528, !1529, !1535, !1536, !1537, !1538, !1539, !1540, !1541, !1553, !1558, !1740, !1741, !1742, !1743, !1747, !1750, !1753, !1756, !1759, !1763, !1864, !1895, !1896, !1897, !1898, !1899, !1900, !1901, !1902, !1903, !1912, !1913, !1914, !1915, !1916, !1921, !1922, !1923, !1926, !1927, !1930, !1933, !1936, !1939, !1982, !1985, !1986, !2065, !2066, !2069, !2070, !2073, !2074, !2075, !2079, !2080, !2081, !2094, !2095, !2096, !2106, !2111, !2114, !2120, !2121, !2122, !2123, !2124, !2125, !2126, !2127, !2143, !2144, !2145, !2146, !2147, !2148, !2149, !2150, !2151}
!1237 = !DIDerivedType(tag: DW_TAG_member, name: "thread_info", scope: !1234, file: !1235, line: 646, baseType: !1238, size: 128)
!1238 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "thread_info", file: !1239, line: 56, size: 128, elements: !1240)
!1239 = !DIFile(filename: "./arch/x86/include/asm/thread_info.h", directory: "/home/lizy2001/genbc/linux")
!1240 = !{!1241, !1242}
!1241 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1238, file: !1239, line: 57, baseType: !205, size: 64)
!1242 = !DIDerivedType(tag: DW_TAG_member, name: "status", scope: !1238, file: !1239, line: 58, baseType: !440, size: 32, offset: 64)
!1243 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1234, file: !1235, line: 649, baseType: !1244, size: 64, offset: 128)
!1244 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !564)
!1245 = !DIDerivedType(tag: DW_TAG_member, name: "stack", scope: !1234, file: !1235, line: 657, baseType: !114, size: 64, offset: 192)
!1246 = !DIDerivedType(tag: DW_TAG_member, name: "usage", scope: !1234, file: !1235, line: 658, baseType: !1247, size: 32, offset: 256)
!1247 = !DIDerivedType(tag: DW_TAG_typedef, name: "refcount_t", file: !1248, line: 113, baseType: !1249)
!1248 = !DIFile(filename: "./include/linux/refcount.h", directory: "/home/lizy2001/genbc/linux")
!1249 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "refcount_struct", file: !1248, line: 111, size: 32, elements: !1250)
!1250 = !{!1251}
!1251 = !DIDerivedType(tag: DW_TAG_member, name: "refs", scope: !1249, file: !1248, line: 112, baseType: !781, size: 32)
!1252 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1234, file: !1235, line: 660, baseType: !7, size: 32, offset: 288)
!1253 = !DIDerivedType(tag: DW_TAG_member, name: "ptrace", scope: !1234, file: !1235, line: 661, baseType: !7, size: 32, offset: 320)
!1254 = !DIDerivedType(tag: DW_TAG_member, name: "on_rq", scope: !1234, file: !1235, line: 684, baseType: !169, size: 32, offset: 352)
!1255 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !1234, file: !1235, line: 686, baseType: !169, size: 32, offset: 384)
!1256 = !DIDerivedType(tag: DW_TAG_member, name: "static_prio", scope: !1234, file: !1235, line: 687, baseType: !169, size: 32, offset: 416)
!1257 = !DIDerivedType(tag: DW_TAG_member, name: "normal_prio", scope: !1234, file: !1235, line: 688, baseType: !169, size: 32, offset: 448)
!1258 = !DIDerivedType(tag: DW_TAG_member, name: "rt_priority", scope: !1234, file: !1235, line: 689, baseType: !7, size: 32, offset: 480)
!1259 = !DIDerivedType(tag: DW_TAG_member, name: "sched_class", scope: !1234, file: !1235, line: 691, baseType: !1260, size: 64, offset: 512)
!1260 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1261, size: 64)
!1261 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1262)
!1262 = !DICompositeType(tag: DW_TAG_structure_type, name: "sched_class", file: !1235, line: 691, flags: DIFlagFwdDecl)
!1263 = !DIDerivedType(tag: DW_TAG_member, name: "se", scope: !1234, file: !1235, line: 692, baseType: !1264, size: 832, offset: 576)
!1264 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sched_entity", file: !1235, line: 451, size: 832, elements: !1265)
!1265 = !{!1266, !1271, !1272, !1273, !1274, !1275, !1276, !1277, !1278, !1279}
!1266 = !DIDerivedType(tag: DW_TAG_member, name: "load", scope: !1264, file: !1235, line: 453, baseType: !1267, size: 128)
!1267 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "load_weight", file: !1235, line: 325, size: 128, elements: !1268)
!1268 = !{!1269, !1270}
!1269 = !DIDerivedType(tag: DW_TAG_member, name: "weight", scope: !1267, file: !1235, line: 326, baseType: !205, size: 64)
!1270 = !DIDerivedType(tag: DW_TAG_member, name: "inv_weight", scope: !1267, file: !1235, line: 327, baseType: !440, size: 32, offset: 64)
!1271 = !DIDerivedType(tag: DW_TAG_member, name: "run_node", scope: !1264, file: !1235, line: 454, baseType: !794, size: 192, align: 64, offset: 128)
!1272 = !DIDerivedType(tag: DW_TAG_member, name: "group_node", scope: !1264, file: !1235, line: 455, baseType: !119, size: 128, offset: 320)
!1273 = !DIDerivedType(tag: DW_TAG_member, name: "on_rq", scope: !1264, file: !1235, line: 456, baseType: !7, size: 32, offset: 448)
!1274 = !DIDerivedType(tag: DW_TAG_member, name: "exec_start", scope: !1264, file: !1235, line: 458, baseType: !443, size: 64, offset: 512)
!1275 = !DIDerivedType(tag: DW_TAG_member, name: "sum_exec_runtime", scope: !1264, file: !1235, line: 459, baseType: !443, size: 64, offset: 576)
!1276 = !DIDerivedType(tag: DW_TAG_member, name: "vruntime", scope: !1264, file: !1235, line: 460, baseType: !443, size: 64, offset: 640)
!1277 = !DIDerivedType(tag: DW_TAG_member, name: "prev_sum_exec_runtime", scope: !1264, file: !1235, line: 461, baseType: !443, size: 64, offset: 704)
!1278 = !DIDerivedType(tag: DW_TAG_member, name: "nr_migrations", scope: !1264, file: !1235, line: 463, baseType: !443, size: 64, offset: 768)
!1279 = !DIDerivedType(tag: DW_TAG_member, name: "statistics", scope: !1264, file: !1235, line: 465, baseType: !1280, offset: 832)
!1280 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sched_statistics", file: !1235, line: 415, elements: !371)
!1281 = !DIDerivedType(tag: DW_TAG_member, name: "rt", scope: !1234, file: !1235, line: 693, baseType: !1282, size: 384, offset: 1408)
!1282 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sched_rt_entity", file: !1235, line: 489, size: 384, elements: !1283)
!1283 = !{!1284, !1285, !1286, !1287, !1288, !1289, !1290}
!1284 = !DIDerivedType(tag: DW_TAG_member, name: "run_list", scope: !1282, file: !1235, line: 490, baseType: !119, size: 128)
!1285 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !1282, file: !1235, line: 491, baseType: !205, size: 64, offset: 128)
!1286 = !DIDerivedType(tag: DW_TAG_member, name: "watchdog_stamp", scope: !1282, file: !1235, line: 492, baseType: !205, size: 64, offset: 192)
!1287 = !DIDerivedType(tag: DW_TAG_member, name: "time_slice", scope: !1282, file: !1235, line: 493, baseType: !7, size: 32, offset: 256)
!1288 = !DIDerivedType(tag: DW_TAG_member, name: "on_rq", scope: !1282, file: !1235, line: 494, baseType: !150, size: 16, offset: 288)
!1289 = !DIDerivedType(tag: DW_TAG_member, name: "on_list", scope: !1282, file: !1235, line: 495, baseType: !150, size: 16, offset: 304)
!1290 = !DIDerivedType(tag: DW_TAG_member, name: "back", scope: !1282, file: !1235, line: 497, baseType: !1291, size: 64, offset: 320)
!1291 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1282, size: 64)
!1292 = !DIDerivedType(tag: DW_TAG_member, name: "dl", scope: !1234, file: !1235, line: 697, baseType: !1293, size: 1792, offset: 1792)
!1293 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sched_dl_entity", file: !1235, line: 507, size: 1792, elements: !1294)
!1294 = !{!1295, !1296, !1297, !1298, !1299, !1300, !1301, !1302, !1303, !1304, !1305, !1306, !1307, !1308, !1373, !1374}
!1295 = !DIDerivedType(tag: DW_TAG_member, name: "rb_node", scope: !1293, file: !1235, line: 508, baseType: !794, size: 192, align: 64)
!1296 = !DIDerivedType(tag: DW_TAG_member, name: "dl_runtime", scope: !1293, file: !1235, line: 515, baseType: !443, size: 64, offset: 192)
!1297 = !DIDerivedType(tag: DW_TAG_member, name: "dl_deadline", scope: !1293, file: !1235, line: 516, baseType: !443, size: 64, offset: 256)
!1298 = !DIDerivedType(tag: DW_TAG_member, name: "dl_period", scope: !1293, file: !1235, line: 517, baseType: !443, size: 64, offset: 320)
!1299 = !DIDerivedType(tag: DW_TAG_member, name: "dl_bw", scope: !1293, file: !1235, line: 518, baseType: !443, size: 64, offset: 384)
!1300 = !DIDerivedType(tag: DW_TAG_member, name: "dl_density", scope: !1293, file: !1235, line: 519, baseType: !443, size: 64, offset: 448)
!1301 = !DIDerivedType(tag: DW_TAG_member, name: "runtime", scope: !1293, file: !1235, line: 526, baseType: !353, size: 64, offset: 512)
!1302 = !DIDerivedType(tag: DW_TAG_member, name: "deadline", scope: !1293, file: !1235, line: 527, baseType: !443, size: 64, offset: 576)
!1303 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1293, file: !1235, line: 528, baseType: !7, size: 32, offset: 640)
!1304 = !DIDerivedType(tag: DW_TAG_member, name: "dl_throttled", scope: !1293, file: !1235, line: 554, baseType: !7, size: 1, offset: 672, flags: DIFlagBitField, extraData: i64 672)
!1305 = !DIDerivedType(tag: DW_TAG_member, name: "dl_yielded", scope: !1293, file: !1235, line: 555, baseType: !7, size: 1, offset: 673, flags: DIFlagBitField, extraData: i64 672)
!1306 = !DIDerivedType(tag: DW_TAG_member, name: "dl_non_contending", scope: !1293, file: !1235, line: 556, baseType: !7, size: 1, offset: 674, flags: DIFlagBitField, extraData: i64 672)
!1307 = !DIDerivedType(tag: DW_TAG_member, name: "dl_overrun", scope: !1293, file: !1235, line: 557, baseType: !7, size: 1, offset: 675, flags: DIFlagBitField, extraData: i64 672)
!1308 = !DIDerivedType(tag: DW_TAG_member, name: "dl_timer", scope: !1293, file: !1235, line: 563, baseType: !1309, size: 512, offset: 704)
!1309 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hrtimer", file: !20, line: 118, size: 512, elements: !1310)
!1310 = !{!1311, !1319, !1320, !1325, !1368, !1370, !1371, !1372}
!1311 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !1309, file: !20, line: 119, baseType: !1312, size: 256)
!1312 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timerqueue_node", file: !1313, line: 9, size: 256, elements: !1314)
!1313 = !DIFile(filename: "./include/linux/timerqueue.h", directory: "/home/lizy2001/genbc/linux")
!1314 = !{!1315, !1316}
!1315 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !1312, file: !1313, line: 10, baseType: !794, size: 192, align: 64)
!1316 = !DIDerivedType(tag: DW_TAG_member, name: "expires", scope: !1312, file: !1313, line: 11, baseType: !1317, size: 64, offset: 192)
!1317 = !DIDerivedType(tag: DW_TAG_typedef, name: "ktime_t", file: !1318, line: 29, baseType: !353)
!1318 = !DIFile(filename: "./include/linux/ktime.h", directory: "/home/lizy2001/genbc/linux")
!1319 = !DIDerivedType(tag: DW_TAG_member, name: "_softexpires", scope: !1309, file: !20, line: 120, baseType: !1317, size: 64, offset: 256)
!1320 = !DIDerivedType(tag: DW_TAG_member, name: "function", scope: !1309, file: !20, line: 121, baseType: !1321, size: 64, offset: 320)
!1321 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1322, size: 64)
!1322 = !DISubroutineType(types: !1323)
!1323 = !{!19, !1324}
!1324 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1309, size: 64)
!1325 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1309, file: !20, line: 122, baseType: !1326, size: 64, offset: 384)
!1326 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1327, size: 64)
!1327 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hrtimer_clock_base", file: !20, line: 159, size: 512, align: 512, elements: !1328)
!1328 = !{!1329, !1349, !1350, !1353, !1358, !1359, !1363, !1367}
!1329 = !DIDerivedType(tag: DW_TAG_member, name: "cpu_base", scope: !1327, file: !20, line: 160, baseType: !1330, size: 64)
!1330 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1331, size: 64)
!1331 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hrtimer_cpu_base", file: !20, line: 214, size: 4608, align: 512, elements: !1332)
!1332 = !{!1333, !1334, !1335, !1336, !1337, !1338, !1339, !1340, !1341, !1342, !1343, !1344, !1345}
!1333 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1331, file: !20, line: 215, baseType: !807)
!1334 = !DIDerivedType(tag: DW_TAG_member, name: "cpu", scope: !1331, file: !20, line: 216, baseType: !7, size: 32)
!1335 = !DIDerivedType(tag: DW_TAG_member, name: "active_bases", scope: !1331, file: !20, line: 217, baseType: !7, size: 32, offset: 32)
!1336 = !DIDerivedType(tag: DW_TAG_member, name: "clock_was_set_seq", scope: !1331, file: !20, line: 218, baseType: !7, size: 32, offset: 64)
!1337 = !DIDerivedType(tag: DW_TAG_member, name: "hres_active", scope: !1331, file: !20, line: 219, baseType: !7, size: 1, offset: 96, flags: DIFlagBitField, extraData: i64 96)
!1338 = !DIDerivedType(tag: DW_TAG_member, name: "in_hrtirq", scope: !1331, file: !20, line: 220, baseType: !7, size: 1, offset: 97, flags: DIFlagBitField, extraData: i64 96)
!1339 = !DIDerivedType(tag: DW_TAG_member, name: "hang_detected", scope: !1331, file: !20, line: 221, baseType: !7, size: 1, offset: 98, flags: DIFlagBitField, extraData: i64 96)
!1340 = !DIDerivedType(tag: DW_TAG_member, name: "softirq_activated", scope: !1331, file: !20, line: 222, baseType: !7, size: 1, offset: 99, flags: DIFlagBitField, extraData: i64 96)
!1341 = !DIDerivedType(tag: DW_TAG_member, name: "expires_next", scope: !1331, file: !20, line: 233, baseType: !1317, size: 64, offset: 128)
!1342 = !DIDerivedType(tag: DW_TAG_member, name: "next_timer", scope: !1331, file: !20, line: 234, baseType: !1324, size: 64, offset: 192)
!1343 = !DIDerivedType(tag: DW_TAG_member, name: "softirq_expires_next", scope: !1331, file: !20, line: 235, baseType: !1317, size: 64, offset: 256)
!1344 = !DIDerivedType(tag: DW_TAG_member, name: "softirq_next_timer", scope: !1331, file: !20, line: 236, baseType: !1324, size: 64, offset: 320)
!1345 = !DIDerivedType(tag: DW_TAG_member, name: "clock_base", scope: !1331, file: !20, line: 237, baseType: !1346, size: 4096, offset: 512)
!1346 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1327, size: 4096, elements: !1347)
!1347 = !{!1348}
!1348 = !DISubrange(count: 8)
!1349 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !1327, file: !20, line: 161, baseType: !7, size: 32, offset: 64)
!1350 = !DIDerivedType(tag: DW_TAG_member, name: "clockid", scope: !1327, file: !20, line: 162, baseType: !1351, size: 32, offset: 96)
!1351 = !DIDerivedType(tag: DW_TAG_typedef, name: "clockid_t", file: !113, line: 27, baseType: !1352)
!1352 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_clockid_t", file: !464, line: 96, baseType: !169)
!1353 = !DIDerivedType(tag: DW_TAG_member, name: "seq", scope: !1327, file: !20, line: 163, baseType: !1354, size: 32, offset: 128)
!1354 = !DIDerivedType(tag: DW_TAG_typedef, name: "seqcount_raw_spinlock_t", file: !413, line: 276, baseType: !1355)
!1355 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seqcount_raw_spinlock", file: !413, line: 276, size: 32, elements: !1356)
!1356 = !{!1357}
!1357 = !DIDerivedType(tag: DW_TAG_member, name: "seqcount", scope: !1355, file: !413, line: 276, baseType: !417, size: 32)
!1358 = !DIDerivedType(tag: DW_TAG_member, name: "running", scope: !1327, file: !20, line: 164, baseType: !1324, size: 64, offset: 192)
!1359 = !DIDerivedType(tag: DW_TAG_member, name: "active", scope: !1327, file: !20, line: 165, baseType: !1360, size: 128, offset: 256)
!1360 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timerqueue_head", file: !1313, line: 14, size: 128, elements: !1361)
!1361 = !{!1362}
!1362 = !DIDerivedType(tag: DW_TAG_member, name: "rb_root", scope: !1360, file: !1313, line: 15, baseType: !786, size: 128)
!1363 = !DIDerivedType(tag: DW_TAG_member, name: "get_time", scope: !1327, file: !20, line: 166, baseType: !1364, size: 64, offset: 384)
!1364 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1365, size: 64)
!1365 = !DISubroutineType(types: !1366)
!1366 = !{!1317}
!1367 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1327, file: !20, line: 167, baseType: !1317, size: 64, offset: 448)
!1368 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1309, file: !20, line: 123, baseType: !1369, size: 8, offset: 448)
!1369 = !DIDerivedType(tag: DW_TAG_typedef, name: "u8", file: !334, line: 17, baseType: !152)
!1370 = !DIDerivedType(tag: DW_TAG_member, name: "is_rel", scope: !1309, file: !20, line: 124, baseType: !1369, size: 8, offset: 456)
!1371 = !DIDerivedType(tag: DW_TAG_member, name: "is_soft", scope: !1309, file: !20, line: 125, baseType: !1369, size: 8, offset: 464)
!1372 = !DIDerivedType(tag: DW_TAG_member, name: "is_hard", scope: !1309, file: !20, line: 126, baseType: !1369, size: 8, offset: 472)
!1373 = !DIDerivedType(tag: DW_TAG_member, name: "inactive_timer", scope: !1293, file: !1235, line: 572, baseType: !1309, size: 512, offset: 1216)
!1374 = !DIDerivedType(tag: DW_TAG_member, name: "pi_se", scope: !1293, file: !1235, line: 580, baseType: !1375, size: 64, offset: 1728)
!1375 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1293, size: 64)
!1376 = !DIDerivedType(tag: DW_TAG_member, name: "policy", scope: !1234, file: !1235, line: 721, baseType: !7, size: 32, offset: 3584)
!1377 = !DIDerivedType(tag: DW_TAG_member, name: "nr_cpus_allowed", scope: !1234, file: !1235, line: 722, baseType: !169, size: 32, offset: 3616)
!1378 = !DIDerivedType(tag: DW_TAG_member, name: "cpus_ptr", scope: !1234, file: !1235, line: 723, baseType: !1379, size: 64, offset: 3648)
!1379 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1380, size: 64)
!1380 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1381)
!1381 = !DIDerivedType(tag: DW_TAG_typedef, name: "cpumask_t", file: !1382, line: 17, baseType: !1383)
!1382 = !DIFile(filename: "./include/linux/cpumask.h", directory: "/home/lizy2001/genbc/linux")
!1383 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cpumask", file: !1382, line: 17, size: 64, elements: !1384)
!1384 = !{!1385}
!1385 = !DIDerivedType(tag: DW_TAG_member, name: "bits", scope: !1383, file: !1382, line: 17, baseType: !204, size: 64)
!1386 = !DIDerivedType(tag: DW_TAG_member, name: "cpus_mask", scope: !1234, file: !1235, line: 724, baseType: !1381, size: 64, offset: 3712)
!1387 = !DIDerivedType(tag: DW_TAG_member, name: "sched_info", scope: !1234, file: !1235, line: 749, baseType: !1388, offset: 3776)
!1388 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sched_info", file: !1235, line: 290, elements: !371)
!1389 = !DIDerivedType(tag: DW_TAG_member, name: "tasks", scope: !1234, file: !1235, line: 751, baseType: !119, size: 128, offset: 3776)
!1390 = !DIDerivedType(tag: DW_TAG_member, name: "mm", scope: !1234, file: !1235, line: 757, baseType: !999, size: 64, offset: 3904)
!1391 = !DIDerivedType(tag: DW_TAG_member, name: "active_mm", scope: !1234, file: !1235, line: 758, baseType: !999, size: 64, offset: 3968)
!1392 = !DIDerivedType(tag: DW_TAG_member, name: "vmacache", scope: !1234, file: !1235, line: 761, baseType: !1393, size: 320, offset: 4032)
!1393 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vmacache", file: !1176, line: 34, size: 320, elements: !1394)
!1394 = !{!1395, !1396}
!1395 = !DIDerivedType(tag: DW_TAG_member, name: "seqnum", scope: !1393, file: !1176, line: 35, baseType: !443, size: 64)
!1396 = !DIDerivedType(tag: DW_TAG_member, name: "vmas", scope: !1393, file: !1176, line: 36, baseType: !1397, size: 256, offset: 64)
!1397 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1006, size: 256, elements: !1180)
!1398 = !DIDerivedType(tag: DW_TAG_member, name: "exit_state", scope: !1234, file: !1235, line: 766, baseType: !169, size: 32, offset: 4352)
!1399 = !DIDerivedType(tag: DW_TAG_member, name: "exit_code", scope: !1234, file: !1235, line: 767, baseType: !169, size: 32, offset: 4384)
!1400 = !DIDerivedType(tag: DW_TAG_member, name: "exit_signal", scope: !1234, file: !1235, line: 768, baseType: !169, size: 32, offset: 4416)
!1401 = !DIDerivedType(tag: DW_TAG_member, name: "pdeath_signal", scope: !1234, file: !1235, line: 770, baseType: !169, size: 32, offset: 4448)
!1402 = !DIDerivedType(tag: DW_TAG_member, name: "jobctl", scope: !1234, file: !1235, line: 772, baseType: !205, size: 64, offset: 4480)
!1403 = !DIDerivedType(tag: DW_TAG_member, name: "personality", scope: !1234, file: !1235, line: 775, baseType: !7, size: 32, offset: 4544)
!1404 = !DIDerivedType(tag: DW_TAG_member, name: "sched_reset_on_fork", scope: !1234, file: !1235, line: 778, baseType: !7, size: 1, offset: 4576, flags: DIFlagBitField, extraData: i64 4576)
!1405 = !DIDerivedType(tag: DW_TAG_member, name: "sched_contributes_to_load", scope: !1234, file: !1235, line: 779, baseType: !7, size: 1, offset: 4577, flags: DIFlagBitField, extraData: i64 4576)
!1406 = !DIDerivedType(tag: DW_TAG_member, name: "sched_migrated", scope: !1234, file: !1235, line: 780, baseType: !7, size: 1, offset: 4578, flags: DIFlagBitField, extraData: i64 4576)
!1407 = !DIDerivedType(tag: DW_TAG_member, name: "sched_remote_wakeup", scope: !1234, file: !1235, line: 803, baseType: !7, size: 1, offset: 4608, flags: DIFlagBitField, extraData: i64 4608)
!1408 = !DIDerivedType(tag: DW_TAG_member, name: "in_execve", scope: !1234, file: !1235, line: 806, baseType: !7, size: 1, offset: 4609, flags: DIFlagBitField, extraData: i64 4608)
!1409 = !DIDerivedType(tag: DW_TAG_member, name: "in_iowait", scope: !1234, file: !1235, line: 807, baseType: !7, size: 1, offset: 4610, flags: DIFlagBitField, extraData: i64 4608)
!1410 = !DIDerivedType(tag: DW_TAG_member, name: "restore_sigmask", scope: !1234, file: !1235, line: 809, baseType: !7, size: 1, offset: 4611, flags: DIFlagBitField, extraData: i64 4608)
!1411 = !DIDerivedType(tag: DW_TAG_member, name: "brk_randomized", scope: !1234, file: !1235, line: 815, baseType: !7, size: 1, offset: 4612, flags: DIFlagBitField, extraData: i64 4608)
!1412 = !DIDerivedType(tag: DW_TAG_member, name: "atomic_flags", scope: !1234, file: !1235, line: 831, baseType: !205, size: 64, offset: 4672)
!1413 = !DIDerivedType(tag: DW_TAG_member, name: "restart_block", scope: !1234, file: !1235, line: 833, baseType: !1414, size: 384, offset: 4736)
!1414 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "restart_block", file: !25, line: 25, size: 384, elements: !1415)
!1415 = !{!1416, !1421}
!1416 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !1414, file: !25, line: 26, baseType: !1417, size: 64)
!1417 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1418, size: 64)
!1418 = !DISubroutineType(types: !1419)
!1419 = !{!564, !1420}
!1420 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1414, size: 64)
!1421 = !DIDerivedType(tag: DW_TAG_member, scope: !1414, file: !25, line: 27, baseType: !1422, size: 320, offset: 64)
!1422 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1414, file: !25, line: 27, size: 320, elements: !1423)
!1423 = !{!1424, !1434, !1460}
!1424 = !DIDerivedType(tag: DW_TAG_member, name: "futex", scope: !1422, file: !25, line: 36, baseType: !1425, size: 320)
!1425 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1422, file: !25, line: 29, size: 320, elements: !1426)
!1426 = !{!1427, !1429, !1430, !1431, !1432, !1433}
!1427 = !DIDerivedType(tag: DW_TAG_member, name: "uaddr", scope: !1425, file: !25, line: 30, baseType: !1428, size: 64)
!1428 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !440, size: 64)
!1429 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !1425, file: !25, line: 31, baseType: !440, size: 32, offset: 64)
!1430 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1425, file: !25, line: 32, baseType: !440, size: 32, offset: 96)
!1431 = !DIDerivedType(tag: DW_TAG_member, name: "bitset", scope: !1425, file: !25, line: 33, baseType: !440, size: 32, offset: 128)
!1432 = !DIDerivedType(tag: DW_TAG_member, name: "time", scope: !1425, file: !25, line: 34, baseType: !443, size: 64, offset: 192)
!1433 = !DIDerivedType(tag: DW_TAG_member, name: "uaddr2", scope: !1425, file: !25, line: 35, baseType: !1428, size: 64, offset: 256)
!1434 = !DIDerivedType(tag: DW_TAG_member, name: "nanosleep", scope: !1422, file: !25, line: 46, baseType: !1435, size: 192)
!1435 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1422, file: !25, line: 38, size: 192, elements: !1436)
!1436 = !{!1437, !1438, !1439, !1459}
!1437 = !DIDerivedType(tag: DW_TAG_member, name: "clockid", scope: !1435, file: !25, line: 39, baseType: !1351, size: 32)
!1438 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1435, file: !25, line: 40, baseType: !24, size: 32, offset: 32)
!1439 = !DIDerivedType(tag: DW_TAG_member, scope: !1435, file: !25, line: 41, baseType: !1440, size: 64, offset: 64)
!1440 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1435, file: !25, line: 41, size: 64, elements: !1441)
!1441 = !{!1442, !1450}
!1442 = !DIDerivedType(tag: DW_TAG_member, name: "rmtp", scope: !1440, file: !25, line: 42, baseType: !1443, size: 64)
!1443 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1444, size: 64)
!1444 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__kernel_timespec", file: !1445, line: 7, size: 128, elements: !1446)
!1445 = !DIFile(filename: "./include/uapi/linux/time_types.h", directory: "/home/lizy2001/genbc/linux")
!1446 = !{!1447, !1449}
!1447 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !1444, file: !1445, line: 8, baseType: !1448, size: 64)
!1448 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_time64_t", file: !464, line: 93, baseType: !355)
!1449 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !1444, file: !1445, line: 9, baseType: !355, size: 64, offset: 64)
!1450 = !DIDerivedType(tag: DW_TAG_member, name: "compat_rmtp", scope: !1440, file: !25, line: 43, baseType: !1451, size: 64)
!1451 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1452, size: 64)
!1452 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "old_timespec32", file: !1453, line: 7, size: 64, elements: !1454)
!1453 = !DIFile(filename: "./include/vdso/time32.h", directory: "/home/lizy2001/genbc/linux")
!1454 = !{!1455, !1458}
!1455 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !1452, file: !1453, line: 8, baseType: !1456, size: 32)
!1456 = !DIDerivedType(tag: DW_TAG_typedef, name: "old_time32_t", file: !1453, line: 5, baseType: !1457)
!1457 = !DIDerivedType(tag: DW_TAG_typedef, name: "s32", file: !334, line: 20, baseType: !168)
!1458 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !1452, file: !1453, line: 9, baseType: !1457, size: 32, offset: 32)
!1459 = !DIDerivedType(tag: DW_TAG_member, name: "expires", scope: !1435, file: !25, line: 45, baseType: !443, size: 64, offset: 128)
!1460 = !DIDerivedType(tag: DW_TAG_member, name: "poll", scope: !1422, file: !25, line: 54, baseType: !1461, size: 256)
!1461 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1422, file: !25, line: 48, size: 256, elements: !1462)
!1462 = !{!1463, !1466, !1467, !1468, !1469}
!1463 = !DIDerivedType(tag: DW_TAG_member, name: "ufds", scope: !1461, file: !25, line: 49, baseType: !1464, size: 64)
!1464 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1465, size: 64)
!1465 = !DICompositeType(tag: DW_TAG_structure_type, name: "pollfd", file: !25, line: 14, flags: DIFlagFwdDecl)
!1466 = !DIDerivedType(tag: DW_TAG_member, name: "nfds", scope: !1461, file: !25, line: 50, baseType: !169, size: 32, offset: 64)
!1467 = !DIDerivedType(tag: DW_TAG_member, name: "has_timeout", scope: !1461, file: !25, line: 51, baseType: !169, size: 32, offset: 96)
!1468 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !1461, file: !25, line: 52, baseType: !205, size: 64, offset: 128)
!1469 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !1461, file: !25, line: 53, baseType: !205, size: 64, offset: 192)
!1470 = !DIDerivedType(tag: DW_TAG_member, name: "pid", scope: !1234, file: !1235, line: 835, baseType: !1471, size: 32, offset: 5120)
!1471 = !DIDerivedType(tag: DW_TAG_typedef, name: "pid_t", file: !113, line: 22, baseType: !1472)
!1472 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_pid_t", file: !464, line: 28, baseType: !169)
!1473 = !DIDerivedType(tag: DW_TAG_member, name: "tgid", scope: !1234, file: !1235, line: 836, baseType: !1471, size: 32, offset: 5152)
!1474 = !DIDerivedType(tag: DW_TAG_member, name: "stack_canary", scope: !1234, file: !1235, line: 840, baseType: !205, size: 64, offset: 5184)
!1475 = !DIDerivedType(tag: DW_TAG_member, name: "real_parent", scope: !1234, file: !1235, line: 849, baseType: !1233, size: 64, offset: 5248)
!1476 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !1234, file: !1235, line: 852, baseType: !1233, size: 64, offset: 5312)
!1477 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !1234, file: !1235, line: 857, baseType: !119, size: 128, offset: 5376)
!1478 = !DIDerivedType(tag: DW_TAG_member, name: "sibling", scope: !1234, file: !1235, line: 858, baseType: !119, size: 128, offset: 5504)
!1479 = !DIDerivedType(tag: DW_TAG_member, name: "group_leader", scope: !1234, file: !1235, line: 859, baseType: !1233, size: 64, offset: 5632)
!1480 = !DIDerivedType(tag: DW_TAG_member, name: "ptraced", scope: !1234, file: !1235, line: 867, baseType: !119, size: 128, offset: 5696)
!1481 = !DIDerivedType(tag: DW_TAG_member, name: "ptrace_entry", scope: !1234, file: !1235, line: 868, baseType: !119, size: 128, offset: 5824)
!1482 = !DIDerivedType(tag: DW_TAG_member, name: "thread_pid", scope: !1234, file: !1235, line: 871, baseType: !1483, size: 64, offset: 5952)
!1483 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1484, size: 64)
!1484 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pid", file: !53, line: 59, size: 768, elements: !1485)
!1485 = !{!1486, !1487, !1488, !1489, !1491, !1492, !1499, !1500}
!1486 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !1484, file: !53, line: 61, baseType: !1247, size: 32)
!1487 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !1484, file: !53, line: 62, baseType: !7, size: 32, offset: 32)
!1488 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1484, file: !53, line: 63, baseType: !357, offset: 64)
!1489 = !DIDerivedType(tag: DW_TAG_member, name: "tasks", scope: !1484, file: !53, line: 65, baseType: !1490, size: 256, offset: 64)
!1490 = !DICompositeType(tag: DW_TAG_array_type, baseType: !667, size: 256, elements: !1180)
!1491 = !DIDerivedType(tag: DW_TAG_member, name: "inodes", scope: !1484, file: !53, line: 66, baseType: !667, size: 64, offset: 320)
!1492 = !DIDerivedType(tag: DW_TAG_member, name: "wait_pidfd", scope: !1484, file: !53, line: 68, baseType: !1493, size: 128, offset: 384)
!1493 = !DIDerivedType(tag: DW_TAG_typedef, name: "wait_queue_head_t", file: !1494, line: 40, baseType: !1495)
!1494 = !DIFile(filename: "./include/linux/wait.h", directory: "/home/lizy2001/genbc/linux")
!1495 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wait_queue_head", file: !1494, line: 36, size: 128, elements: !1496)
!1496 = !{!1497, !1498}
!1497 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1495, file: !1494, line: 37, baseType: !357)
!1498 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !1495, file: !1494, line: 38, baseType: !119, size: 128)
!1499 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !1484, file: !53, line: 69, baseType: !390, size: 128, align: 64, offset: 512)
!1500 = !DIDerivedType(tag: DW_TAG_member, name: "numbers", scope: !1484, file: !53, line: 70, baseType: !1501, size: 128, offset: 640)
!1501 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1502, size: 128, elements: !206)
!1502 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "upid", file: !53, line: 54, size: 128, elements: !1503)
!1503 = !{!1504, !1505}
!1504 = !DIDerivedType(tag: DW_TAG_member, name: "nr", scope: !1502, file: !53, line: 55, baseType: !169, size: 32)
!1505 = !DIDerivedType(tag: DW_TAG_member, name: "ns", scope: !1502, file: !53, line: 56, baseType: !1506, size: 64, offset: 64)
!1506 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1507, size: 64)
!1507 = !DICompositeType(tag: DW_TAG_structure_type, name: "pid_namespace", file: !53, line: 56, flags: DIFlagFwdDecl)
!1508 = !DIDerivedType(tag: DW_TAG_member, name: "pid_links", scope: !1234, file: !1235, line: 872, baseType: !1509, size: 512, offset: 6016)
!1509 = !DICompositeType(tag: DW_TAG_array_type, baseType: !671, size: 512, elements: !1180)
!1510 = !DIDerivedType(tag: DW_TAG_member, name: "thread_group", scope: !1234, file: !1235, line: 873, baseType: !119, size: 128, offset: 6528)
!1511 = !DIDerivedType(tag: DW_TAG_member, name: "thread_node", scope: !1234, file: !1235, line: 874, baseType: !119, size: 128, offset: 6656)
!1512 = !DIDerivedType(tag: DW_TAG_member, name: "vfork_done", scope: !1234, file: !1235, line: 876, baseType: !1513, size: 64, offset: 6784)
!1513 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1514, size: 64)
!1514 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "completion", file: !1515, line: 26, size: 192, elements: !1516)
!1515 = !DIFile(filename: "./include/linux/completion.h", directory: "/home/lizy2001/genbc/linux")
!1516 = !{!1517, !1518}
!1517 = !DIDerivedType(tag: DW_TAG_member, name: "done", scope: !1514, file: !1515, line: 27, baseType: !7, size: 32)
!1518 = !DIDerivedType(tag: DW_TAG_member, name: "wait", scope: !1514, file: !1515, line: 28, baseType: !1519, size: 128, offset: 64)
!1519 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "swait_queue_head", file: !1520, line: 43, size: 128, elements: !1521)
!1520 = !DIFile(filename: "./include/linux/swait.h", directory: "/home/lizy2001/genbc/linux")
!1521 = !{!1522, !1523}
!1522 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1519, file: !1520, line: 44, baseType: !807)
!1523 = !DIDerivedType(tag: DW_TAG_member, name: "task_list", scope: !1519, file: !1520, line: 45, baseType: !119, size: 128)
!1524 = !DIDerivedType(tag: DW_TAG_member, name: "set_child_tid", scope: !1234, file: !1235, line: 879, baseType: !739, size: 64, offset: 6848)
!1525 = !DIDerivedType(tag: DW_TAG_member, name: "clear_child_tid", scope: !1234, file: !1235, line: 882, baseType: !739, size: 64, offset: 6912)
!1526 = !DIDerivedType(tag: DW_TAG_member, name: "utime", scope: !1234, file: !1235, line: 884, baseType: !443, size: 64, offset: 6976)
!1527 = !DIDerivedType(tag: DW_TAG_member, name: "stime", scope: !1234, file: !1235, line: 885, baseType: !443, size: 64, offset: 7040)
!1528 = !DIDerivedType(tag: DW_TAG_member, name: "gtime", scope: !1234, file: !1235, line: 890, baseType: !443, size: 64, offset: 7104)
!1529 = !DIDerivedType(tag: DW_TAG_member, name: "prev_cputime", scope: !1234, file: !1235, line: 891, baseType: !1530, size: 128, offset: 7168)
!1530 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "prev_cputime", file: !1235, line: 242, size: 128, elements: !1531)
!1531 = !{!1532, !1533, !1534}
!1532 = !DIDerivedType(tag: DW_TAG_member, name: "utime", scope: !1530, file: !1235, line: 244, baseType: !443, size: 64)
!1533 = !DIDerivedType(tag: DW_TAG_member, name: "stime", scope: !1530, file: !1235, line: 245, baseType: !443, size: 64, offset: 64)
!1534 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1530, file: !1235, line: 246, baseType: !807, offset: 128)
!1535 = !DIDerivedType(tag: DW_TAG_member, name: "nvcsw", scope: !1234, file: !1235, line: 900, baseType: !205, size: 64, offset: 7296)
!1536 = !DIDerivedType(tag: DW_TAG_member, name: "nivcsw", scope: !1234, file: !1235, line: 901, baseType: !205, size: 64, offset: 7360)
!1537 = !DIDerivedType(tag: DW_TAG_member, name: "start_time", scope: !1234, file: !1235, line: 904, baseType: !443, size: 64, offset: 7424)
!1538 = !DIDerivedType(tag: DW_TAG_member, name: "start_boottime", scope: !1234, file: !1235, line: 907, baseType: !443, size: 64, offset: 7488)
!1539 = !DIDerivedType(tag: DW_TAG_member, name: "min_flt", scope: !1234, file: !1235, line: 910, baseType: !205, size: 64, offset: 7552)
!1540 = !DIDerivedType(tag: DW_TAG_member, name: "maj_flt", scope: !1234, file: !1235, line: 911, baseType: !205, size: 64, offset: 7616)
!1541 = !DIDerivedType(tag: DW_TAG_member, name: "posix_cputimers", scope: !1234, file: !1235, line: 914, baseType: !1542, size: 640, offset: 7680)
!1542 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "posix_cputimers", file: !1543, line: 123, size: 640, elements: !1544)
!1543 = !DIFile(filename: "./include/linux/posix-timers.h", directory: "/home/lizy2001/genbc/linux")
!1544 = !{!1545, !1551, !1552}
!1545 = !DIDerivedType(tag: DW_TAG_member, name: "bases", scope: !1542, file: !1543, line: 124, baseType: !1546, size: 576)
!1546 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1547, size: 576, elements: !683)
!1547 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "posix_cputimer_base", file: !1543, line: 108, size: 192, elements: !1548)
!1548 = !{!1549, !1550}
!1549 = !DIDerivedType(tag: DW_TAG_member, name: "nextevt", scope: !1547, file: !1543, line: 109, baseType: !443, size: 64)
!1550 = !DIDerivedType(tag: DW_TAG_member, name: "tqhead", scope: !1547, file: !1543, line: 110, baseType: !1360, size: 128, offset: 64)
!1551 = !DIDerivedType(tag: DW_TAG_member, name: "timers_active", scope: !1542, file: !1543, line: 125, baseType: !7, size: 32, offset: 576)
!1552 = !DIDerivedType(tag: DW_TAG_member, name: "expiry_active", scope: !1542, file: !1543, line: 126, baseType: !7, size: 32, offset: 608)
!1553 = !DIDerivedType(tag: DW_TAG_member, name: "posix_cputimers_work", scope: !1234, file: !1235, line: 917, baseType: !1554, size: 192, offset: 8320)
!1554 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "posix_cputimers_work", file: !1543, line: 134, size: 192, elements: !1555)
!1555 = !{!1556, !1557}
!1556 = !DIDerivedType(tag: DW_TAG_member, name: "work", scope: !1554, file: !1543, line: 135, baseType: !390, size: 128, align: 64)
!1557 = !DIDerivedType(tag: DW_TAG_member, name: "scheduled", scope: !1554, file: !1543, line: 136, baseType: !7, size: 32, offset: 128)
!1558 = !DIDerivedType(tag: DW_TAG_member, name: "ptracer_cred", scope: !1234, file: !1235, line: 923, baseType: !1559, size: 64, offset: 8512)
!1559 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1560, size: 64)
!1560 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1561)
!1561 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cred", file: !1562, line: 111, size: 1280, elements: !1563)
!1562 = !DIFile(filename: "./include/linux/cred.h", directory: "/home/lizy2001/genbc/linux")
!1563 = !{!1564, !1565, !1566, !1567, !1568, !1569, !1570, !1571, !1572, !1573, !1574, !1581, !1582, !1583, !1584, !1585, !1586, !1693, !1694, !1695, !1696, !1722, !1725, !1735}
!1564 = !DIDerivedType(tag: DW_TAG_member, name: "usage", scope: !1561, file: !1562, line: 112, baseType: !781, size: 32)
!1565 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !1561, file: !1562, line: 120, baseType: !457, size: 32, offset: 32)
!1566 = !DIDerivedType(tag: DW_TAG_member, name: "gid", scope: !1561, file: !1562, line: 121, baseType: !466, size: 32, offset: 64)
!1567 = !DIDerivedType(tag: DW_TAG_member, name: "suid", scope: !1561, file: !1562, line: 122, baseType: !457, size: 32, offset: 96)
!1568 = !DIDerivedType(tag: DW_TAG_member, name: "sgid", scope: !1561, file: !1562, line: 123, baseType: !466, size: 32, offset: 128)
!1569 = !DIDerivedType(tag: DW_TAG_member, name: "euid", scope: !1561, file: !1562, line: 124, baseType: !457, size: 32, offset: 160)
!1570 = !DIDerivedType(tag: DW_TAG_member, name: "egid", scope: !1561, file: !1562, line: 125, baseType: !466, size: 32, offset: 192)
!1571 = !DIDerivedType(tag: DW_TAG_member, name: "fsuid", scope: !1561, file: !1562, line: 126, baseType: !457, size: 32, offset: 224)
!1572 = !DIDerivedType(tag: DW_TAG_member, name: "fsgid", scope: !1561, file: !1562, line: 127, baseType: !466, size: 32, offset: 256)
!1573 = !DIDerivedType(tag: DW_TAG_member, name: "securebits", scope: !1561, file: !1562, line: 128, baseType: !7, size: 32, offset: 288)
!1574 = !DIDerivedType(tag: DW_TAG_member, name: "cap_inheritable", scope: !1561, file: !1562, line: 129, baseType: !1575, size: 64, offset: 320)
!1575 = !DIDerivedType(tag: DW_TAG_typedef, name: "kernel_cap_t", file: !1576, line: 26, baseType: !1577)
!1576 = !DIFile(filename: "./include/linux/capability.h", directory: "/home/lizy2001/genbc/linux")
!1577 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernel_cap_struct", file: !1576, line: 24, size: 64, elements: !1578)
!1578 = !{!1579}
!1579 = !DIDerivedType(tag: DW_TAG_member, name: "cap", scope: !1577, file: !1576, line: 25, baseType: !1580, size: 64)
!1580 = !DICompositeType(tag: DW_TAG_array_type, baseType: !239, size: 64, elements: !220)
!1581 = !DIDerivedType(tag: DW_TAG_member, name: "cap_permitted", scope: !1561, file: !1562, line: 130, baseType: !1575, size: 64, offset: 384)
!1582 = !DIDerivedType(tag: DW_TAG_member, name: "cap_effective", scope: !1561, file: !1562, line: 131, baseType: !1575, size: 64, offset: 448)
!1583 = !DIDerivedType(tag: DW_TAG_member, name: "cap_bset", scope: !1561, file: !1562, line: 132, baseType: !1575, size: 64, offset: 512)
!1584 = !DIDerivedType(tag: DW_TAG_member, name: "cap_ambient", scope: !1561, file: !1562, line: 133, baseType: !1575, size: 64, offset: 576)
!1585 = !DIDerivedType(tag: DW_TAG_member, name: "jit_keyring", scope: !1561, file: !1562, line: 135, baseType: !153, size: 8, offset: 640)
!1586 = !DIDerivedType(tag: DW_TAG_member, name: "session_keyring", scope: !1561, file: !1562, line: 137, baseType: !1587, size: 64, offset: 704)
!1587 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1588, size: 64)
!1588 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "key", file: !1589, line: 189, size: 1664, elements: !1590)
!1589 = !DIFile(filename: "./include/linux/key.h", directory: "/home/lizy2001/genbc/linux")
!1590 = !{!1591, !1592, !1595, !1600, !1601, !1604, !1605, !1610, !1611, !1612, !1613, !1615, !1616, !1617, !1618, !1619, !1657, !1678}
!1591 = !DIDerivedType(tag: DW_TAG_member, name: "usage", scope: !1588, file: !1589, line: 190, baseType: !1247, size: 32)
!1592 = !DIDerivedType(tag: DW_TAG_member, name: "serial", scope: !1588, file: !1589, line: 191, baseType: !1593, size: 32, offset: 32)
!1593 = !DIDerivedType(tag: DW_TAG_typedef, name: "key_serial_t", file: !1589, line: 28, baseType: !1594)
!1594 = !DIDerivedType(tag: DW_TAG_typedef, name: "int32_t", file: !113, line: 98, baseType: !1457)
!1595 = !DIDerivedType(tag: DW_TAG_member, scope: !1588, file: !1589, line: 192, baseType: !1596, size: 192, offset: 64)
!1596 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1588, file: !1589, line: 192, size: 192, elements: !1597)
!1597 = !{!1598, !1599}
!1598 = !DIDerivedType(tag: DW_TAG_member, name: "graveyard_link", scope: !1596, file: !1589, line: 193, baseType: !119, size: 128)
!1599 = !DIDerivedType(tag: DW_TAG_member, name: "serial_node", scope: !1596, file: !1589, line: 194, baseType: !794, size: 192, align: 64)
!1600 = !DIDerivedType(tag: DW_TAG_member, name: "sem", scope: !1588, file: !1589, line: 199, baseType: !801, size: 256, offset: 256)
!1601 = !DIDerivedType(tag: DW_TAG_member, name: "user", scope: !1588, file: !1589, line: 200, baseType: !1602, size: 64, offset: 512)
!1602 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1603, size: 64)
!1603 = !DICompositeType(tag: DW_TAG_structure_type, name: "key_user", file: !1589, line: 200, flags: DIFlagFwdDecl)
!1604 = !DIDerivedType(tag: DW_TAG_member, name: "security", scope: !1588, file: !1589, line: 201, baseType: !114, size: 64, offset: 576)
!1605 = !DIDerivedType(tag: DW_TAG_member, scope: !1588, file: !1589, line: 202, baseType: !1606, size: 64, offset: 640)
!1606 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1588, file: !1589, line: 202, size: 64, elements: !1607)
!1607 = !{!1608, !1609}
!1608 = !DIDerivedType(tag: DW_TAG_member, name: "expiry", scope: !1606, file: !1589, line: 203, baseType: !562, size: 64)
!1609 = !DIDerivedType(tag: DW_TAG_member, name: "revoked_at", scope: !1606, file: !1589, line: 204, baseType: !562, size: 64)
!1610 = !DIDerivedType(tag: DW_TAG_member, name: "last_used_at", scope: !1588, file: !1589, line: 206, baseType: !562, size: 64, offset: 704)
!1611 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !1588, file: !1589, line: 207, baseType: !457, size: 32, offset: 768)
!1612 = !DIDerivedType(tag: DW_TAG_member, name: "gid", scope: !1588, file: !1589, line: 208, baseType: !466, size: 32, offset: 800)
!1613 = !DIDerivedType(tag: DW_TAG_member, name: "perm", scope: !1588, file: !1589, line: 209, baseType: !1614, size: 32, offset: 832)
!1614 = !DIDerivedType(tag: DW_TAG_typedef, name: "key_perm_t", file: !1589, line: 31, baseType: !582)
!1615 = !DIDerivedType(tag: DW_TAG_member, name: "quotalen", scope: !1588, file: !1589, line: 210, baseType: !150, size: 16, offset: 864)
!1616 = !DIDerivedType(tag: DW_TAG_member, name: "datalen", scope: !1588, file: !1589, line: 211, baseType: !150, size: 16, offset: 880)
!1617 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1588, file: !1589, line: 215, baseType: !159, size: 16, offset: 896)
!1618 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1588, file: !1589, line: 222, baseType: !205, size: 64, offset: 960)
!1619 = !DIDerivedType(tag: DW_TAG_member, scope: !1588, file: !1589, line: 239, baseType: !1620, size: 320, offset: 1024)
!1620 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1588, file: !1589, line: 239, size: 320, elements: !1621)
!1621 = !{!1622, !1649}
!1622 = !DIDerivedType(tag: DW_TAG_member, name: "index_key", scope: !1620, file: !1589, line: 240, baseType: !1623, size: 320)
!1623 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "keyring_index_key", file: !1589, line: 108, size: 320, elements: !1624)
!1624 = !{!1625, !1626, !1638, !1641, !1648}
!1625 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !1623, file: !1589, line: 110, baseType: !205, size: 64)
!1626 = !DIDerivedType(tag: DW_TAG_member, scope: !1623, file: !1589, line: 111, baseType: !1627, size: 64, offset: 64)
!1627 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1623, file: !1589, line: 111, size: 64, elements: !1628)
!1628 = !{!1629, !1637}
!1629 = !DIDerivedType(tag: DW_TAG_member, scope: !1627, file: !1589, line: 112, baseType: !1630, size: 64)
!1630 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1627, file: !1589, line: 112, size: 64, elements: !1631)
!1631 = !{!1632, !1633}
!1632 = !DIDerivedType(tag: DW_TAG_member, name: "desc_len", scope: !1630, file: !1589, line: 114, baseType: !333, size: 16)
!1633 = !DIDerivedType(tag: DW_TAG_member, name: "desc", scope: !1630, file: !1589, line: 115, baseType: !1634, size: 48, offset: 16)
!1634 = !DICompositeType(tag: DW_TAG_array_type, baseType: !192, size: 48, elements: !1635)
!1635 = !{!1636}
!1636 = !DISubrange(count: 6)
!1637 = !DIDerivedType(tag: DW_TAG_member, name: "x", scope: !1627, file: !1589, line: 121, baseType: !205, size: 64)
!1638 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1623, file: !1589, line: 123, baseType: !1639, size: 64, offset: 128)
!1639 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1640, size: 64)
!1640 = !DICompositeType(tag: DW_TAG_structure_type, name: "key_type", file: !1589, line: 96, flags: DIFlagFwdDecl)
!1641 = !DIDerivedType(tag: DW_TAG_member, name: "domain_tag", scope: !1623, file: !1589, line: 124, baseType: !1642, size: 64, offset: 192)
!1642 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1643, size: 64)
!1643 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "key_tag", file: !1589, line: 102, size: 192, elements: !1644)
!1644 = !{!1645, !1646, !1647}
!1645 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !1643, file: !1589, line: 103, baseType: !390, size: 128, align: 64)
!1646 = !DIDerivedType(tag: DW_TAG_member, name: "usage", scope: !1643, file: !1589, line: 104, baseType: !1247, size: 32, offset: 128)
!1647 = !DIDerivedType(tag: DW_TAG_member, name: "removed", scope: !1643, file: !1589, line: 105, baseType: !514, size: 8, offset: 160)
!1648 = !DIDerivedType(tag: DW_TAG_member, name: "description", scope: !1623, file: !1589, line: 125, baseType: !190, size: 64, offset: 256)
!1649 = !DIDerivedType(tag: DW_TAG_member, scope: !1620, file: !1589, line: 241, baseType: !1650, size: 320)
!1650 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1620, file: !1589, line: 241, size: 320, elements: !1651)
!1651 = !{!1652, !1653, !1654, !1655, !1656}
!1652 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !1650, file: !1589, line: 242, baseType: !205, size: 64)
!1653 = !DIDerivedType(tag: DW_TAG_member, name: "len_desc", scope: !1650, file: !1589, line: 243, baseType: !205, size: 64, offset: 64)
!1654 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1650, file: !1589, line: 244, baseType: !1639, size: 64, offset: 128)
!1655 = !DIDerivedType(tag: DW_TAG_member, name: "domain_tag", scope: !1650, file: !1589, line: 245, baseType: !1642, size: 64, offset: 192)
!1656 = !DIDerivedType(tag: DW_TAG_member, name: "description", scope: !1650, file: !1589, line: 246, baseType: !509, size: 64, offset: 256)
!1657 = !DIDerivedType(tag: DW_TAG_member, scope: !1588, file: !1589, line: 254, baseType: !1658, size: 256, offset: 1344)
!1658 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1588, file: !1589, line: 254, size: 256, elements: !1659)
!1659 = !{!1660, !1666}
!1660 = !DIDerivedType(tag: DW_TAG_member, name: "payload", scope: !1658, file: !1589, line: 255, baseType: !1661, size: 256)
!1661 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "key_payload", file: !1589, line: 128, size: 256, elements: !1662)
!1662 = !{!1663, !1664}
!1663 = !DIDerivedType(tag: DW_TAG_member, name: "rcu_data0", scope: !1661, file: !1589, line: 129, baseType: !114, size: 64)
!1664 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1661, file: !1589, line: 130, baseType: !1665, size: 256)
!1665 = !DICompositeType(tag: DW_TAG_array_type, baseType: !114, size: 256, elements: !1180)
!1666 = !DIDerivedType(tag: DW_TAG_member, scope: !1658, file: !1589, line: 256, baseType: !1667, size: 256)
!1667 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1658, file: !1589, line: 256, size: 256, elements: !1668)
!1668 = !{!1669, !1670}
!1669 = !DIDerivedType(tag: DW_TAG_member, name: "name_link", scope: !1667, file: !1589, line: 258, baseType: !119, size: 128)
!1670 = !DIDerivedType(tag: DW_TAG_member, name: "keys", scope: !1667, file: !1589, line: 259, baseType: !1671, size: 128, offset: 128)
!1671 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "assoc_array", file: !1672, line: 22, size: 128, elements: !1673)
!1672 = !DIFile(filename: "./include/linux/assoc_array.h", directory: "/home/lizy2001/genbc/linux")
!1673 = !{!1674, !1677}
!1674 = !DIDerivedType(tag: DW_TAG_member, name: "root", scope: !1671, file: !1672, line: 23, baseType: !1675, size: 64)
!1675 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1676, size: 64)
!1676 = !DICompositeType(tag: DW_TAG_structure_type, name: "assoc_array_ptr", file: !1672, line: 23, flags: DIFlagFwdDecl)
!1677 = !DIDerivedType(tag: DW_TAG_member, name: "nr_leaves_on_tree", scope: !1671, file: !1672, line: 24, baseType: !205, size: 64, offset: 64)
!1678 = !DIDerivedType(tag: DW_TAG_member, name: "restrict_link", scope: !1588, file: !1589, line: 274, baseType: !1679, size: 64, offset: 1600)
!1679 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1680, size: 64)
!1680 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "key_restriction", file: !1589, line: 170, size: 192, elements: !1681)
!1681 = !{!1682, !1691, !1692}
!1682 = !DIDerivedType(tag: DW_TAG_member, name: "check", scope: !1680, file: !1589, line: 171, baseType: !1683, size: 64)
!1683 = !DIDerivedType(tag: DW_TAG_typedef, name: "key_restrict_link_func_t", file: !1589, line: 165, baseType: !1684)
!1684 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1685, size: 64)
!1685 = !DISubroutineType(types: !1686)
!1686 = !{!169, !1587, !1687, !1689, !1587}
!1687 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1688, size: 64)
!1688 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1640)
!1689 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1690, size: 64)
!1690 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1661)
!1691 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !1680, file: !1589, line: 172, baseType: !1587, size: 64, offset: 64)
!1692 = !DIDerivedType(tag: DW_TAG_member, name: "keytype", scope: !1680, file: !1589, line: 173, baseType: !1639, size: 64, offset: 128)
!1693 = !DIDerivedType(tag: DW_TAG_member, name: "process_keyring", scope: !1561, file: !1562, line: 138, baseType: !1587, size: 64, offset: 768)
!1694 = !DIDerivedType(tag: DW_TAG_member, name: "thread_keyring", scope: !1561, file: !1562, line: 139, baseType: !1587, size: 64, offset: 832)
!1695 = !DIDerivedType(tag: DW_TAG_member, name: "request_key_auth", scope: !1561, file: !1562, line: 140, baseType: !1587, size: 64, offset: 896)
!1696 = !DIDerivedType(tag: DW_TAG_member, name: "user", scope: !1561, file: !1562, line: 145, baseType: !1697, size: 64, offset: 960)
!1697 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1698, size: 64)
!1698 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "user_struct", file: !1699, line: 13, size: 896, elements: !1700)
!1699 = !DIFile(filename: "./include/linux/sched/user.h", directory: "/home/lizy2001/genbc/linux")
!1700 = !{!1701, !1702, !1703, !1704, !1705, !1706, !1707, !1708, !1709, !1710, !1711}
!1701 = !DIDerivedType(tag: DW_TAG_member, name: "__count", scope: !1698, file: !1699, line: 14, baseType: !1247, size: 32)
!1702 = !DIDerivedType(tag: DW_TAG_member, name: "processes", scope: !1698, file: !1699, line: 15, baseType: !781, size: 32, offset: 32)
!1703 = !DIDerivedType(tag: DW_TAG_member, name: "sigpending", scope: !1698, file: !1699, line: 16, baseType: !781, size: 32, offset: 64)
!1704 = !DIDerivedType(tag: DW_TAG_member, name: "epoll_watches", scope: !1698, file: !1699, line: 21, baseType: !347, size: 64, offset: 128)
!1705 = !DIDerivedType(tag: DW_TAG_member, name: "locked_shm", scope: !1698, file: !1699, line: 27, baseType: !205, size: 64, offset: 192)
!1706 = !DIDerivedType(tag: DW_TAG_member, name: "unix_inflight", scope: !1698, file: !1699, line: 28, baseType: !205, size: 64, offset: 256)
!1707 = !DIDerivedType(tag: DW_TAG_member, name: "pipe_bufs", scope: !1698, file: !1699, line: 29, baseType: !347, size: 64, offset: 320)
!1708 = !DIDerivedType(tag: DW_TAG_member, name: "uidhash_node", scope: !1698, file: !1699, line: 32, baseType: !671, size: 128, offset: 384)
!1709 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !1698, file: !1699, line: 33, baseType: !457, size: 32, offset: 512)
!1710 = !DIDerivedType(tag: DW_TAG_member, name: "locked_vm", scope: !1698, file: !1699, line: 37, baseType: !347, size: 64, offset: 576)
!1711 = !DIDerivedType(tag: DW_TAG_member, name: "ratelimit", scope: !1698, file: !1699, line: 44, baseType: !1712, size: 256, offset: 640)
!1712 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ratelimit_state", file: !1713, line: 15, size: 256, elements: !1714)
!1713 = !DIFile(filename: "./include/linux/ratelimit_types.h", directory: "/home/lizy2001/genbc/linux")
!1714 = !{!1715, !1716, !1717, !1718, !1719, !1720, !1721}
!1715 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1712, file: !1713, line: 16, baseType: !807)
!1716 = !DIDerivedType(tag: DW_TAG_member, name: "interval", scope: !1712, file: !1713, line: 18, baseType: !169, size: 32)
!1717 = !DIDerivedType(tag: DW_TAG_member, name: "burst", scope: !1712, file: !1713, line: 19, baseType: !169, size: 32, offset: 32)
!1718 = !DIDerivedType(tag: DW_TAG_member, name: "printed", scope: !1712, file: !1713, line: 20, baseType: !169, size: 32, offset: 64)
!1719 = !DIDerivedType(tag: DW_TAG_member, name: "missed", scope: !1712, file: !1713, line: 21, baseType: !169, size: 32, offset: 96)
!1720 = !DIDerivedType(tag: DW_TAG_member, name: "begin", scope: !1712, file: !1713, line: 22, baseType: !205, size: 64, offset: 128)
!1721 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1712, file: !1713, line: 23, baseType: !205, size: 64, offset: 192)
!1722 = !DIDerivedType(tag: DW_TAG_member, name: "user_ns", scope: !1561, file: !1562, line: 146, baseType: !1723, size: 64, offset: 1024)
!1723 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1724, size: 64)
!1724 = !DICompositeType(tag: DW_TAG_structure_type, name: "user_namespace", file: !458, line: 18, flags: DIFlagFwdDecl)
!1725 = !DIDerivedType(tag: DW_TAG_member, name: "group_info", scope: !1561, file: !1562, line: 147, baseType: !1726, size: 64, offset: 1088)
!1726 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1727, size: 64)
!1727 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "group_info", file: !1562, line: 25, size: 64, elements: !1728)
!1728 = !{!1729, !1730, !1731}
!1729 = !DIDerivedType(tag: DW_TAG_member, name: "usage", scope: !1727, file: !1562, line: 26, baseType: !781, size: 32)
!1730 = !DIDerivedType(tag: DW_TAG_member, name: "ngroups", scope: !1727, file: !1562, line: 27, baseType: !169, size: 32, offset: 32)
!1731 = !DIDerivedType(tag: DW_TAG_member, name: "gid", scope: !1727, file: !1562, line: 28, baseType: !1732, offset: 64)
!1732 = !DICompositeType(tag: DW_TAG_array_type, baseType: !466, elements: !1733)
!1733 = !{!1734}
!1734 = !DISubrange(count: 0)
!1735 = !DIDerivedType(tag: DW_TAG_member, scope: !1561, file: !1562, line: 149, baseType: !1736, size: 128, offset: 1152)
!1736 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1561, file: !1562, line: 149, size: 128, elements: !1737)
!1737 = !{!1738, !1739}
!1738 = !DIDerivedType(tag: DW_TAG_member, name: "non_rcu", scope: !1736, file: !1562, line: 150, baseType: !169, size: 32)
!1739 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !1736, file: !1562, line: 151, baseType: !390, size: 128, align: 64)
!1740 = !DIDerivedType(tag: DW_TAG_member, name: "real_cred", scope: !1234, file: !1235, line: 926, baseType: !1559, size: 64, offset: 8576)
!1741 = !DIDerivedType(tag: DW_TAG_member, name: "cred", scope: !1234, file: !1235, line: 929, baseType: !1559, size: 64, offset: 8640)
!1742 = !DIDerivedType(tag: DW_TAG_member, name: "cached_requested_key", scope: !1234, file: !1235, line: 933, baseType: !1587, size: 64, offset: 8704)
!1743 = !DIDerivedType(tag: DW_TAG_member, name: "comm", scope: !1234, file: !1235, line: 943, baseType: !1744, size: 128, offset: 8768)
!1744 = !DICompositeType(tag: DW_TAG_array_type, baseType: !192, size: 128, elements: !1745)
!1745 = !{!1746}
!1746 = !DISubrange(count: 16)
!1747 = !DIDerivedType(tag: DW_TAG_member, name: "nameidata", scope: !1234, file: !1235, line: 945, baseType: !1748, size: 64, offset: 8896)
!1748 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1749, size: 64)
!1749 = !DICompositeType(tag: DW_TAG_structure_type, name: "nameidata", file: !1235, line: 49, flags: DIFlagFwdDecl)
!1750 = !DIDerivedType(tag: DW_TAG_member, name: "fs", scope: !1234, file: !1235, line: 956, baseType: !1751, size: 64, offset: 8960)
!1751 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1752, size: 64)
!1752 = !DICompositeType(tag: DW_TAG_structure_type, name: "fs_struct", file: !1235, line: 45, flags: DIFlagFwdDecl)
!1753 = !DIDerivedType(tag: DW_TAG_member, name: "files", scope: !1234, file: !1235, line: 959, baseType: !1754, size: 64, offset: 9024)
!1754 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1755, size: 64)
!1755 = !DICompositeType(tag: DW_TAG_structure_type, name: "files_struct", file: !1235, line: 959, flags: DIFlagFwdDecl)
!1756 = !DIDerivedType(tag: DW_TAG_member, name: "io_uring", scope: !1234, file: !1235, line: 962, baseType: !1757, size: 64, offset: 9088)
!1757 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1758, size: 64)
!1758 = !DICompositeType(tag: DW_TAG_structure_type, name: "io_uring_task", file: !1235, line: 66, flags: DIFlagFwdDecl)
!1759 = !DIDerivedType(tag: DW_TAG_member, name: "nsproxy", scope: !1234, file: !1235, line: 966, baseType: !1760, size: 64, offset: 9152)
!1760 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1761, size: 64)
!1761 = !DICompositeType(tag: DW_TAG_structure_type, name: "nsproxy", file: !1762, line: 35, flags: DIFlagFwdDecl)
!1762 = !DIFile(filename: "./include/linux/sysctl.h", directory: "/home/lizy2001/genbc/linux")
!1763 = !DIDerivedType(tag: DW_TAG_member, name: "signal", scope: !1234, file: !1235, line: 969, baseType: !1764, size: 64, offset: 9216)
!1764 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1765, size: 64)
!1765 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "signal_struct", file: !1766, line: 82, size: 7296, elements: !1767)
!1766 = !DIFile(filename: "./include/linux/sched/signal.h", directory: "/home/lizy2001/genbc/linux")
!1767 = !{!1768, !1769, !1770, !1771, !1772, !1773, !1774, !1785, !1786, !1787, !1788, !1789, !1790, !1791, !1792, !1793, !1794, !1795, !1796, !1797, !1803, !1812, !1813, !1815, !1816, !1817, !1820, !1826, !1827, !1828, !1829, !1830, !1831, !1832, !1833, !1834, !1835, !1836, !1837, !1838, !1839, !1840, !1841, !1842, !1843, !1844, !1845, !1846, !1847, !1850, !1851, !1858, !1859, !1860, !1861, !1862, !1863}
!1768 = !DIDerivedType(tag: DW_TAG_member, name: "sigcnt", scope: !1765, file: !1766, line: 83, baseType: !1247, size: 32)
!1769 = !DIDerivedType(tag: DW_TAG_member, name: "live", scope: !1765, file: !1766, line: 84, baseType: !781, size: 32, offset: 32)
!1770 = !DIDerivedType(tag: DW_TAG_member, name: "nr_threads", scope: !1765, file: !1766, line: 85, baseType: !169, size: 32, offset: 64)
!1771 = !DIDerivedType(tag: DW_TAG_member, name: "thread_head", scope: !1765, file: !1766, line: 86, baseType: !119, size: 128, offset: 128)
!1772 = !DIDerivedType(tag: DW_TAG_member, name: "wait_chldexit", scope: !1765, file: !1766, line: 88, baseType: !1493, size: 128, offset: 256)
!1773 = !DIDerivedType(tag: DW_TAG_member, name: "curr_target", scope: !1765, file: !1766, line: 91, baseType: !1233, size: 64, offset: 384)
!1774 = !DIDerivedType(tag: DW_TAG_member, name: "shared_pending", scope: !1765, file: !1766, line: 94, baseType: !1775, size: 192, offset: 448)
!1775 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sigpending", file: !1776, line: 30, size: 192, elements: !1777)
!1776 = !DIFile(filename: "./include/linux/signal_types.h", directory: "/home/lizy2001/genbc/linux")
!1777 = !{!1778, !1779}
!1778 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !1775, file: !1776, line: 31, baseType: !119, size: 128)
!1779 = !DIDerivedType(tag: DW_TAG_member, name: "signal", scope: !1775, file: !1776, line: 32, baseType: !1780, size: 64, offset: 128)
!1780 = !DIDerivedType(tag: DW_TAG_typedef, name: "sigset_t", file: !1781, line: 25, baseType: !1782)
!1781 = !DIFile(filename: "./arch/x86/include/asm/signal.h", directory: "/home/lizy2001/genbc/linux")
!1782 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1781, line: 23, size: 64, elements: !1783)
!1783 = !{!1784}
!1784 = !DIDerivedType(tag: DW_TAG_member, name: "sig", scope: !1782, file: !1781, line: 24, baseType: !204, size: 64)
!1785 = !DIDerivedType(tag: DW_TAG_member, name: "multiprocess", scope: !1765, file: !1766, line: 97, baseType: !667, size: 64, offset: 640)
!1786 = !DIDerivedType(tag: DW_TAG_member, name: "group_exit_code", scope: !1765, file: !1766, line: 100, baseType: !169, size: 32, offset: 704)
!1787 = !DIDerivedType(tag: DW_TAG_member, name: "notify_count", scope: !1765, file: !1766, line: 106, baseType: !169, size: 32, offset: 736)
!1788 = !DIDerivedType(tag: DW_TAG_member, name: "group_exit_task", scope: !1765, file: !1766, line: 107, baseType: !1233, size: 64, offset: 768)
!1789 = !DIDerivedType(tag: DW_TAG_member, name: "group_stop_count", scope: !1765, file: !1766, line: 110, baseType: !169, size: 32, offset: 832)
!1790 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1765, file: !1766, line: 111, baseType: !7, size: 32, offset: 864)
!1791 = !DIDerivedType(tag: DW_TAG_member, name: "is_child_subreaper", scope: !1765, file: !1766, line: 122, baseType: !7, size: 1, offset: 896, flags: DIFlagBitField, extraData: i64 896)
!1792 = !DIDerivedType(tag: DW_TAG_member, name: "has_child_subreaper", scope: !1765, file: !1766, line: 123, baseType: !7, size: 1, offset: 897, flags: DIFlagBitField, extraData: i64 896)
!1793 = !DIDerivedType(tag: DW_TAG_member, name: "posix_timer_id", scope: !1765, file: !1766, line: 128, baseType: !169, size: 32, offset: 928)
!1794 = !DIDerivedType(tag: DW_TAG_member, name: "posix_timers", scope: !1765, file: !1766, line: 129, baseType: !119, size: 128, offset: 960)
!1795 = !DIDerivedType(tag: DW_TAG_member, name: "real_timer", scope: !1765, file: !1766, line: 132, baseType: !1309, size: 512, offset: 1088)
!1796 = !DIDerivedType(tag: DW_TAG_member, name: "it_real_incr", scope: !1765, file: !1766, line: 133, baseType: !1317, size: 64, offset: 1600)
!1797 = !DIDerivedType(tag: DW_TAG_member, name: "it", scope: !1765, file: !1766, line: 140, baseType: !1798, size: 256, offset: 1664)
!1798 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1799, size: 256, elements: !220)
!1799 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cpu_itimer", file: !1766, line: 38, size: 128, elements: !1800)
!1800 = !{!1801, !1802}
!1801 = !DIDerivedType(tag: DW_TAG_member, name: "expires", scope: !1799, file: !1766, line: 39, baseType: !443, size: 64)
!1802 = !DIDerivedType(tag: DW_TAG_member, name: "incr", scope: !1799, file: !1766, line: 40, baseType: !443, size: 64, offset: 64)
!1803 = !DIDerivedType(tag: DW_TAG_member, name: "cputimer", scope: !1765, file: !1766, line: 146, baseType: !1804, size: 192, offset: 1920)
!1804 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "thread_group_cputimer", file: !1766, line: 66, size: 192, elements: !1805)
!1805 = !{!1806}
!1806 = !DIDerivedType(tag: DW_TAG_member, name: "cputime_atomic", scope: !1804, file: !1766, line: 67, baseType: !1807, size: 192)
!1807 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "task_cputime_atomic", file: !1766, line: 47, size: 192, elements: !1808)
!1808 = !{!1809, !1810, !1811}
!1809 = !DIDerivedType(tag: DW_TAG_member, name: "utime", scope: !1807, file: !1766, line: 48, baseType: !349, size: 64)
!1810 = !DIDerivedType(tag: DW_TAG_member, name: "stime", scope: !1807, file: !1766, line: 49, baseType: !349, size: 64, offset: 64)
!1811 = !DIDerivedType(tag: DW_TAG_member, name: "sum_exec_runtime", scope: !1807, file: !1766, line: 50, baseType: !349, size: 64, offset: 128)
!1812 = !DIDerivedType(tag: DW_TAG_member, name: "posix_cputimers", scope: !1765, file: !1766, line: 150, baseType: !1542, size: 640, offset: 2112)
!1813 = !DIDerivedType(tag: DW_TAG_member, name: "pids", scope: !1765, file: !1766, line: 153, baseType: !1814, size: 256, offset: 2752)
!1814 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1483, size: 256, elements: !1180)
!1815 = !DIDerivedType(tag: DW_TAG_member, name: "tty_old_pgrp", scope: !1765, file: !1766, line: 159, baseType: !1483, size: 64, offset: 3008)
!1816 = !DIDerivedType(tag: DW_TAG_member, name: "leader", scope: !1765, file: !1766, line: 162, baseType: !169, size: 32, offset: 3072)
!1817 = !DIDerivedType(tag: DW_TAG_member, name: "tty", scope: !1765, file: !1766, line: 164, baseType: !1818, size: 64, offset: 3136)
!1818 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1819, size: 64)
!1819 = !DICompositeType(tag: DW_TAG_structure_type, name: "tty_struct", file: !1766, line: 164, flags: DIFlagFwdDecl)
!1820 = !DIDerivedType(tag: DW_TAG_member, name: "stats_lock", scope: !1765, file: !1766, line: 175, baseType: !1821, size: 32, offset: 3200)
!1821 = !DIDerivedType(tag: DW_TAG_typedef, name: "seqlock_t", file: !413, line: 805, baseType: !1822)
!1822 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !413, line: 798, size: 32, elements: !1823)
!1823 = !{!1824, !1825}
!1824 = !DIDerivedType(tag: DW_TAG_member, name: "seqcount", scope: !1822, file: !413, line: 803, baseType: !412, size: 32)
!1825 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1822, file: !413, line: 804, baseType: !357, offset: 32)
!1826 = !DIDerivedType(tag: DW_TAG_member, name: "utime", scope: !1765, file: !1766, line: 176, baseType: !443, size: 64, offset: 3264)
!1827 = !DIDerivedType(tag: DW_TAG_member, name: "stime", scope: !1765, file: !1766, line: 176, baseType: !443, size: 64, offset: 3328)
!1828 = !DIDerivedType(tag: DW_TAG_member, name: "cutime", scope: !1765, file: !1766, line: 176, baseType: !443, size: 64, offset: 3392)
!1829 = !DIDerivedType(tag: DW_TAG_member, name: "cstime", scope: !1765, file: !1766, line: 176, baseType: !443, size: 64, offset: 3456)
!1830 = !DIDerivedType(tag: DW_TAG_member, name: "gtime", scope: !1765, file: !1766, line: 177, baseType: !443, size: 64, offset: 3520)
!1831 = !DIDerivedType(tag: DW_TAG_member, name: "cgtime", scope: !1765, file: !1766, line: 178, baseType: !443, size: 64, offset: 3584)
!1832 = !DIDerivedType(tag: DW_TAG_member, name: "prev_cputime", scope: !1765, file: !1766, line: 179, baseType: !1530, size: 128, offset: 3648)
!1833 = !DIDerivedType(tag: DW_TAG_member, name: "nvcsw", scope: !1765, file: !1766, line: 180, baseType: !205, size: 64, offset: 3776)
!1834 = !DIDerivedType(tag: DW_TAG_member, name: "nivcsw", scope: !1765, file: !1766, line: 180, baseType: !205, size: 64, offset: 3840)
!1835 = !DIDerivedType(tag: DW_TAG_member, name: "cnvcsw", scope: !1765, file: !1766, line: 180, baseType: !205, size: 64, offset: 3904)
!1836 = !DIDerivedType(tag: DW_TAG_member, name: "cnivcsw", scope: !1765, file: !1766, line: 180, baseType: !205, size: 64, offset: 3968)
!1837 = !DIDerivedType(tag: DW_TAG_member, name: "min_flt", scope: !1765, file: !1766, line: 181, baseType: !205, size: 64, offset: 4032)
!1838 = !DIDerivedType(tag: DW_TAG_member, name: "maj_flt", scope: !1765, file: !1766, line: 181, baseType: !205, size: 64, offset: 4096)
!1839 = !DIDerivedType(tag: DW_TAG_member, name: "cmin_flt", scope: !1765, file: !1766, line: 181, baseType: !205, size: 64, offset: 4160)
!1840 = !DIDerivedType(tag: DW_TAG_member, name: "cmaj_flt", scope: !1765, file: !1766, line: 181, baseType: !205, size: 64, offset: 4224)
!1841 = !DIDerivedType(tag: DW_TAG_member, name: "inblock", scope: !1765, file: !1766, line: 182, baseType: !205, size: 64, offset: 4288)
!1842 = !DIDerivedType(tag: DW_TAG_member, name: "oublock", scope: !1765, file: !1766, line: 182, baseType: !205, size: 64, offset: 4352)
!1843 = !DIDerivedType(tag: DW_TAG_member, name: "cinblock", scope: !1765, file: !1766, line: 182, baseType: !205, size: 64, offset: 4416)
!1844 = !DIDerivedType(tag: DW_TAG_member, name: "coublock", scope: !1765, file: !1766, line: 182, baseType: !205, size: 64, offset: 4480)
!1845 = !DIDerivedType(tag: DW_TAG_member, name: "maxrss", scope: !1765, file: !1766, line: 183, baseType: !205, size: 64, offset: 4544)
!1846 = !DIDerivedType(tag: DW_TAG_member, name: "cmaxrss", scope: !1765, file: !1766, line: 183, baseType: !205, size: 64, offset: 4608)
!1847 = !DIDerivedType(tag: DW_TAG_member, name: "ioac", scope: !1765, file: !1766, line: 184, baseType: !1848, offset: 4672)
!1848 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "task_io_accounting", file: !1849, line: 12, elements: !371)
!1849 = !DIFile(filename: "./include/linux/task_io_accounting.h", directory: "/home/lizy2001/genbc/linux")
!1850 = !DIDerivedType(tag: DW_TAG_member, name: "sum_sched_runtime", scope: !1765, file: !1766, line: 192, baseType: !445, size: 64, offset: 4672)
!1851 = !DIDerivedType(tag: DW_TAG_member, name: "rlim", scope: !1765, file: !1766, line: 203, baseType: !1852, size: 2048, offset: 4736)
!1852 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1853, size: 2048, elements: !1745)
!1853 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rlimit", file: !1854, line: 43, size: 128, elements: !1855)
!1854 = !DIFile(filename: "./include/uapi/linux/resource.h", directory: "/home/lizy2001/genbc/linux")
!1855 = !{!1856, !1857}
!1856 = !DIDerivedType(tag: DW_TAG_member, name: "rlim_cur", scope: !1853, file: !1854, line: 44, baseType: !606, size: 64)
!1857 = !DIDerivedType(tag: DW_TAG_member, name: "rlim_max", scope: !1853, file: !1854, line: 45, baseType: !606, size: 64, offset: 64)
!1858 = !DIDerivedType(tag: DW_TAG_member, name: "oom_flag_origin", scope: !1765, file: !1766, line: 220, baseType: !514, size: 8, offset: 6784)
!1859 = !DIDerivedType(tag: DW_TAG_member, name: "oom_score_adj", scope: !1765, file: !1766, line: 221, baseType: !159, size: 16, offset: 6800)
!1860 = !DIDerivedType(tag: DW_TAG_member, name: "oom_score_adj_min", scope: !1765, file: !1766, line: 222, baseType: !159, size: 16, offset: 6816)
!1861 = !DIDerivedType(tag: DW_TAG_member, name: "oom_mm", scope: !1765, file: !1766, line: 224, baseType: !999, size: 64, offset: 6848)
!1862 = !DIDerivedType(tag: DW_TAG_member, name: "cred_guard_mutex", scope: !1765, file: !1766, line: 227, baseType: !343, size: 192, offset: 6912)
!1863 = !DIDerivedType(tag: DW_TAG_member, name: "exec_update_mutex", scope: !1765, file: !1766, line: 233, baseType: !343, size: 192, offset: 7104)
!1864 = !DIDerivedType(tag: DW_TAG_member, name: "sighand", scope: !1234, file: !1235, line: 970, baseType: !1865, size: 64, offset: 9280)
!1865 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1866, size: 64)
!1866 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sighand_struct", file: !1766, line: 20, size: 16576, elements: !1867)
!1867 = !{!1868, !1869, !1870, !1871}
!1868 = !DIDerivedType(tag: DW_TAG_member, name: "siglock", scope: !1866, file: !1766, line: 21, baseType: !357)
!1869 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !1866, file: !1766, line: 22, baseType: !1247, size: 32)
!1870 = !DIDerivedType(tag: DW_TAG_member, name: "signalfd_wqh", scope: !1866, file: !1766, line: 23, baseType: !1493, size: 128, offset: 64)
!1871 = !DIDerivedType(tag: DW_TAG_member, name: "action", scope: !1866, file: !1766, line: 24, baseType: !1872, size: 16384, offset: 192)
!1872 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1873, size: 16384, elements: !1893)
!1873 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_sigaction", file: !1776, line: 49, size: 256, elements: !1874)
!1874 = !{!1875}
!1875 = !DIDerivedType(tag: DW_TAG_member, name: "sa", scope: !1873, file: !1776, line: 50, baseType: !1876, size: 256)
!1876 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sigaction", file: !1776, line: 35, size: 256, elements: !1877)
!1877 = !{!1878, !1885, !1886, !1892}
!1878 = !DIDerivedType(tag: DW_TAG_member, name: "sa_handler", scope: !1876, file: !1776, line: 37, baseType: !1879, size: 64)
!1879 = !DIDerivedType(tag: DW_TAG_typedef, name: "__sighandler_t", file: !1880, line: 19, baseType: !1881)
!1880 = !DIFile(filename: "./include/uapi/asm-generic/signal-defs.h", directory: "/home/lizy2001/genbc/linux")
!1881 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1882, size: 64)
!1882 = !DIDerivedType(tag: DW_TAG_typedef, name: "__signalfn_t", file: !1880, line: 18, baseType: !1883)
!1883 = !DISubroutineType(types: !1884)
!1884 = !{null, !169}
!1885 = !DIDerivedType(tag: DW_TAG_member, name: "sa_flags", scope: !1876, file: !1776, line: 38, baseType: !205, size: 64, offset: 64)
!1886 = !DIDerivedType(tag: DW_TAG_member, name: "sa_restorer", scope: !1876, file: !1776, line: 44, baseType: !1887, size: 64, offset: 128)
!1887 = !DIDerivedType(tag: DW_TAG_typedef, name: "__sigrestore_t", file: !1880, line: 22, baseType: !1888)
!1888 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1889, size: 64)
!1889 = !DIDerivedType(tag: DW_TAG_typedef, name: "__restorefn_t", file: !1880, line: 21, baseType: !1890)
!1890 = !DISubroutineType(types: !1891)
!1891 = !{null}
!1892 = !DIDerivedType(tag: DW_TAG_member, name: "sa_mask", scope: !1876, file: !1776, line: 46, baseType: !1780, size: 64, offset: 192)
!1893 = !{!1894}
!1894 = !DISubrange(count: 64)
!1895 = !DIDerivedType(tag: DW_TAG_member, name: "blocked", scope: !1234, file: !1235, line: 971, baseType: !1780, size: 64, offset: 9344)
!1896 = !DIDerivedType(tag: DW_TAG_member, name: "real_blocked", scope: !1234, file: !1235, line: 972, baseType: !1780, size: 64, offset: 9408)
!1897 = !DIDerivedType(tag: DW_TAG_member, name: "saved_sigmask", scope: !1234, file: !1235, line: 974, baseType: !1780, size: 64, offset: 9472)
!1898 = !DIDerivedType(tag: DW_TAG_member, name: "pending", scope: !1234, file: !1235, line: 975, baseType: !1775, size: 192, offset: 9536)
!1899 = !DIDerivedType(tag: DW_TAG_member, name: "sas_ss_sp", scope: !1234, file: !1235, line: 976, baseType: !205, size: 64, offset: 9728)
!1900 = !DIDerivedType(tag: DW_TAG_member, name: "sas_ss_size", scope: !1234, file: !1235, line: 977, baseType: !604, size: 64, offset: 9792)
!1901 = !DIDerivedType(tag: DW_TAG_member, name: "sas_ss_flags", scope: !1234, file: !1235, line: 978, baseType: !7, size: 32, offset: 9856)
!1902 = !DIDerivedType(tag: DW_TAG_member, name: "task_works", scope: !1234, file: !1235, line: 980, baseType: !393, size: 64, offset: 9920)
!1903 = !DIDerivedType(tag: DW_TAG_member, name: "seccomp", scope: !1234, file: !1235, line: 989, baseType: !1904, size: 128, offset: 9984)
!1904 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seccomp", file: !1905, line: 35, size: 128, elements: !1906)
!1905 = !DIFile(filename: "./include/linux/seccomp.h", directory: "/home/lizy2001/genbc/linux")
!1906 = !{!1907, !1908, !1909}
!1907 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !1904, file: !1905, line: 36, baseType: !169, size: 32)
!1908 = !DIDerivedType(tag: DW_TAG_member, name: "filter_count", scope: !1904, file: !1905, line: 37, baseType: !781, size: 32, offset: 32)
!1909 = !DIDerivedType(tag: DW_TAG_member, name: "filter", scope: !1904, file: !1905, line: 38, baseType: !1910, size: 64, offset: 64)
!1910 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1911, size: 64)
!1911 = !DICompositeType(tag: DW_TAG_structure_type, name: "seccomp_filter", file: !1905, line: 23, flags: DIFlagFwdDecl)
!1912 = !DIDerivedType(tag: DW_TAG_member, name: "parent_exec_id", scope: !1234, file: !1235, line: 992, baseType: !443, size: 64, offset: 10112)
!1913 = !DIDerivedType(tag: DW_TAG_member, name: "self_exec_id", scope: !1234, file: !1235, line: 993, baseType: !443, size: 64, offset: 10176)
!1914 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_lock", scope: !1234, file: !1235, line: 996, baseType: !357, offset: 10240)
!1915 = !DIDerivedType(tag: DW_TAG_member, name: "pi_lock", scope: !1234, file: !1235, line: 999, baseType: !807, offset: 10240)
!1916 = !DIDerivedType(tag: DW_TAG_member, name: "wake_q", scope: !1234, file: !1235, line: 1001, baseType: !1917, size: 64, offset: 10240)
!1917 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wake_q_node", file: !1235, line: 636, size: 64, elements: !1918)
!1918 = !{!1919}
!1919 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1917, file: !1235, line: 637, baseType: !1920, size: 64)
!1920 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1917, size: 64)
!1921 = !DIDerivedType(tag: DW_TAG_member, name: "pi_waiters", scope: !1234, file: !1235, line: 1005, baseType: !786, size: 128, offset: 10304)
!1922 = !DIDerivedType(tag: DW_TAG_member, name: "pi_top_task", scope: !1234, file: !1235, line: 1007, baseType: !1233, size: 64, offset: 10432)
!1923 = !DIDerivedType(tag: DW_TAG_member, name: "pi_blocked_on", scope: !1234, file: !1235, line: 1009, baseType: !1924, size: 64, offset: 10496)
!1924 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1925, size: 64)
!1925 = !DICompositeType(tag: DW_TAG_structure_type, name: "rt_mutex_waiter", file: !1235, line: 1009, flags: DIFlagFwdDecl)
!1926 = !DIDerivedType(tag: DW_TAG_member, name: "journal_info", scope: !1234, file: !1235, line: 1043, baseType: !114, size: 64, offset: 10560)
!1927 = !DIDerivedType(tag: DW_TAG_member, name: "bio_list", scope: !1234, file: !1235, line: 1046, baseType: !1928, size: 64, offset: 10624)
!1928 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1929, size: 64)
!1929 = !DICompositeType(tag: DW_TAG_structure_type, name: "bio_list", file: !1235, line: 41, flags: DIFlagFwdDecl)
!1930 = !DIDerivedType(tag: DW_TAG_member, name: "plug", scope: !1234, file: !1235, line: 1050, baseType: !1931, size: 64, offset: 10688)
!1931 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1932, size: 64)
!1932 = !DICompositeType(tag: DW_TAG_structure_type, name: "blk_plug", file: !1235, line: 42, flags: DIFlagFwdDecl)
!1933 = !DIDerivedType(tag: DW_TAG_member, name: "reclaim_state", scope: !1234, file: !1235, line: 1054, baseType: !1934, size: 64, offset: 10752)
!1934 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1935, size: 64)
!1935 = !DICompositeType(tag: DW_TAG_structure_type, name: "reclaim_state", file: !1235, line: 55, flags: DIFlagFwdDecl)
!1936 = !DIDerivedType(tag: DW_TAG_member, name: "backing_dev_info", scope: !1234, file: !1235, line: 1056, baseType: !1937, size: 64, offset: 10816)
!1937 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1938, size: 64)
!1938 = !DICompositeType(tag: DW_TAG_structure_type, name: "backing_dev_info", file: !1235, line: 40, flags: DIFlagFwdDecl)
!1939 = !DIDerivedType(tag: DW_TAG_member, name: "io_context", scope: !1234, file: !1235, line: 1058, baseType: !1940, size: 64, offset: 10880)
!1940 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1941, size: 64)
!1941 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "io_context", file: !1942, line: 99, size: 704, elements: !1943)
!1942 = !DIFile(filename: "./include/linux/iocontext.h", directory: "/home/lizy2001/genbc/linux")
!1943 = !{!1944, !1945, !1946, !1947, !1948, !1949, !1950, !1969, !1970}
!1944 = !DIDerivedType(tag: DW_TAG_member, name: "refcount", scope: !1941, file: !1942, line: 100, baseType: !347, size: 64)
!1945 = !DIDerivedType(tag: DW_TAG_member, name: "active_ref", scope: !1941, file: !1942, line: 101, baseType: !781, size: 32, offset: 64)
!1946 = !DIDerivedType(tag: DW_TAG_member, name: "nr_tasks", scope: !1941, file: !1942, line: 102, baseType: !781, size: 32, offset: 96)
!1947 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1941, file: !1942, line: 105, baseType: !357, offset: 128)
!1948 = !DIDerivedType(tag: DW_TAG_member, name: "ioprio", scope: !1941, file: !1942, line: 107, baseType: !150, size: 16, offset: 128)
!1949 = !DIDerivedType(tag: DW_TAG_member, name: "icq_tree", scope: !1941, file: !1942, line: 109, baseType: !773, size: 128, offset: 192)
!1950 = !DIDerivedType(tag: DW_TAG_member, name: "icq_hint", scope: !1941, file: !1942, line: 110, baseType: !1951, size: 64, offset: 320)
!1951 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1952, size: 64)
!1952 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "io_cq", file: !1942, line: 73, size: 448, elements: !1953)
!1953 = !{!1954, !1957, !1958, !1963, !1968}
!1954 = !DIDerivedType(tag: DW_TAG_member, name: "q", scope: !1952, file: !1942, line: 74, baseType: !1955, size: 64)
!1955 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1956, size: 64)
!1956 = !DICompositeType(tag: DW_TAG_structure_type, name: "request_queue", file: !1942, line: 74, flags: DIFlagFwdDecl)
!1957 = !DIDerivedType(tag: DW_TAG_member, name: "ioc", scope: !1952, file: !1942, line: 75, baseType: !1940, size: 64, offset: 64)
!1958 = !DIDerivedType(tag: DW_TAG_member, scope: !1952, file: !1942, line: 83, baseType: !1959, size: 128, offset: 128)
!1959 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1952, file: !1942, line: 83, size: 128, elements: !1960)
!1960 = !{!1961, !1962}
!1961 = !DIDerivedType(tag: DW_TAG_member, name: "q_node", scope: !1959, file: !1942, line: 84, baseType: !119, size: 128)
!1962 = !DIDerivedType(tag: DW_TAG_member, name: "__rcu_icq_cache", scope: !1959, file: !1942, line: 85, baseType: !960, size: 64)
!1963 = !DIDerivedType(tag: DW_TAG_member, scope: !1952, file: !1942, line: 87, baseType: !1964, size: 128, offset: 256)
!1964 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1952, file: !1942, line: 87, size: 128, elements: !1965)
!1965 = !{!1966, !1967}
!1966 = !DIDerivedType(tag: DW_TAG_member, name: "ioc_node", scope: !1964, file: !1942, line: 88, baseType: !671, size: 128)
!1967 = !DIDerivedType(tag: DW_TAG_member, name: "__rcu_head", scope: !1964, file: !1942, line: 89, baseType: !390, size: 128, align: 64)
!1968 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1952, file: !1942, line: 92, baseType: !7, size: 32, offset: 384)
!1969 = !DIDerivedType(tag: DW_TAG_member, name: "icq_list", scope: !1941, file: !1942, line: 111, baseType: !667, size: 64, offset: 384)
!1970 = !DIDerivedType(tag: DW_TAG_member, name: "release_work", scope: !1941, file: !1942, line: 113, baseType: !1971, size: 256, offset: 448)
!1971 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "work_struct", file: !1972, line: 102, size: 256, elements: !1973)
!1972 = !DIFile(filename: "./include/linux/workqueue.h", directory: "/home/lizy2001/genbc/linux")
!1973 = !{!1974, !1975, !1976}
!1974 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1971, file: !1972, line: 103, baseType: !347, size: 64)
!1975 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !1971, file: !1972, line: 104, baseType: !119, size: 128, offset: 64)
!1976 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !1971, file: !1972, line: 105, baseType: !1977, size: 64, offset: 192)
!1977 = !DIDerivedType(tag: DW_TAG_typedef, name: "work_func_t", file: !1972, line: 21, baseType: !1978)
!1978 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1979, size: 64)
!1979 = !DISubroutineType(types: !1980)
!1980 = !{null, !1981}
!1981 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1971, size: 64)
!1982 = !DIDerivedType(tag: DW_TAG_member, name: "capture_control", scope: !1234, file: !1235, line: 1061, baseType: !1983, size: 64, offset: 10944)
!1983 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1984, size: 64)
!1984 = !DICompositeType(tag: DW_TAG_structure_type, name: "capture_control", file: !1235, line: 43, flags: DIFlagFwdDecl)
!1985 = !DIDerivedType(tag: DW_TAG_member, name: "ptrace_message", scope: !1234, file: !1235, line: 1064, baseType: !205, size: 64, offset: 11008)
!1986 = !DIDerivedType(tag: DW_TAG_member, name: "last_siginfo", scope: !1234, file: !1235, line: 1065, baseType: !1987, size: 64, offset: 11072)
!1987 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1988, size: 64)
!1988 = !DIDerivedType(tag: DW_TAG_typedef, name: "kernel_siginfo_t", file: !1776, line: 14, baseType: !1989)
!1989 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernel_siginfo", file: !1776, line: 12, size: 384, elements: !1990)
!1990 = !{!1991}
!1991 = !DIDerivedType(tag: DW_TAG_member, scope: !1989, file: !1776, line: 13, baseType: !1992, size: 384)
!1992 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1989, file: !1776, line: 13, size: 384, elements: !1993)
!1993 = !{!1994, !1995, !1996, !1997}
!1994 = !DIDerivedType(tag: DW_TAG_member, name: "si_signo", scope: !1992, file: !1776, line: 13, baseType: !169, size: 32)
!1995 = !DIDerivedType(tag: DW_TAG_member, name: "si_errno", scope: !1992, file: !1776, line: 13, baseType: !169, size: 32, offset: 32)
!1996 = !DIDerivedType(tag: DW_TAG_member, name: "si_code", scope: !1992, file: !1776, line: 13, baseType: !169, size: 32, offset: 64)
!1997 = !DIDerivedType(tag: DW_TAG_member, name: "_sifields", scope: !1992, file: !1776, line: 13, baseType: !1998, size: 256, offset: 128)
!1998 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "__sifields", file: !1999, line: 32, size: 256, elements: !2000)
!1999 = !DIFile(filename: "./include/uapi/asm-generic/siginfo.h", directory: "/home/lizy2001/genbc/linux")
!2000 = !{!2001, !2006, !2019, !2025, !2034, !2054, !2059}
!2001 = !DIDerivedType(tag: DW_TAG_member, name: "_kill", scope: !1998, file: !1999, line: 37, baseType: !2002, size: 64)
!2002 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1998, file: !1999, line: 34, size: 64, elements: !2003)
!2003 = !{!2004, !2005}
!2004 = !DIDerivedType(tag: DW_TAG_member, name: "_pid", scope: !2002, file: !1999, line: 35, baseType: !1472, size: 32)
!2005 = !DIDerivedType(tag: DW_TAG_member, name: "_uid", scope: !2002, file: !1999, line: 36, baseType: !463, size: 32, offset: 32)
!2006 = !DIDerivedType(tag: DW_TAG_member, name: "_timer", scope: !1998, file: !1999, line: 45, baseType: !2007, size: 192)
!2007 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1998, file: !1999, line: 40, size: 192, elements: !2008)
!2008 = !{!2009, !2011, !2012, !2018}
!2009 = !DIDerivedType(tag: DW_TAG_member, name: "_tid", scope: !2007, file: !1999, line: 41, baseType: !2010, size: 32)
!2010 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_timer_t", file: !464, line: 95, baseType: !169)
!2011 = !DIDerivedType(tag: DW_TAG_member, name: "_overrun", scope: !2007, file: !1999, line: 42, baseType: !169, size: 32, offset: 32)
!2012 = !DIDerivedType(tag: DW_TAG_member, name: "_sigval", scope: !2007, file: !1999, line: 43, baseType: !2013, size: 64, offset: 64)
!2013 = !DIDerivedType(tag: DW_TAG_typedef, name: "sigval_t", file: !1999, line: 11, baseType: !2014)
!2014 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "sigval", file: !1999, line: 8, size: 64, elements: !2015)
!2015 = !{!2016, !2017}
!2016 = !DIDerivedType(tag: DW_TAG_member, name: "sival_int", scope: !2014, file: !1999, line: 9, baseType: !169, size: 32)
!2017 = !DIDerivedType(tag: DW_TAG_member, name: "sival_ptr", scope: !2014, file: !1999, line: 10, baseType: !114, size: 64)
!2018 = !DIDerivedType(tag: DW_TAG_member, name: "_sys_private", scope: !2007, file: !1999, line: 44, baseType: !169, size: 32, offset: 128)
!2019 = !DIDerivedType(tag: DW_TAG_member, name: "_rt", scope: !1998, file: !1999, line: 52, baseType: !2020, size: 128)
!2020 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1998, file: !1999, line: 48, size: 128, elements: !2021)
!2021 = !{!2022, !2023, !2024}
!2022 = !DIDerivedType(tag: DW_TAG_member, name: "_pid", scope: !2020, file: !1999, line: 49, baseType: !1472, size: 32)
!2023 = !DIDerivedType(tag: DW_TAG_member, name: "_uid", scope: !2020, file: !1999, line: 50, baseType: !463, size: 32, offset: 32)
!2024 = !DIDerivedType(tag: DW_TAG_member, name: "_sigval", scope: !2020, file: !1999, line: 51, baseType: !2013, size: 64, offset: 64)
!2025 = !DIDerivedType(tag: DW_TAG_member, name: "_sigchld", scope: !1998, file: !1999, line: 61, baseType: !2026, size: 256)
!2026 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1998, file: !1999, line: 55, size: 256, elements: !2027)
!2027 = !{!2028, !2029, !2030, !2031, !2033}
!2028 = !DIDerivedType(tag: DW_TAG_member, name: "_pid", scope: !2026, file: !1999, line: 56, baseType: !1472, size: 32)
!2029 = !DIDerivedType(tag: DW_TAG_member, name: "_uid", scope: !2026, file: !1999, line: 57, baseType: !463, size: 32, offset: 32)
!2030 = !DIDerivedType(tag: DW_TAG_member, name: "_status", scope: !2026, file: !1999, line: 58, baseType: !169, size: 32, offset: 64)
!2031 = !DIDerivedType(tag: DW_TAG_member, name: "_utime", scope: !2026, file: !1999, line: 59, baseType: !2032, size: 64, offset: 128)
!2032 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_clock_t", file: !464, line: 94, baseType: !603)
!2033 = !DIDerivedType(tag: DW_TAG_member, name: "_stime", scope: !2026, file: !1999, line: 60, baseType: !2032, size: 64, offset: 192)
!2034 = !DIDerivedType(tag: DW_TAG_member, name: "_sigfault", scope: !1998, file: !1999, line: 95, baseType: !2035, size: 256)
!2035 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1998, file: !1999, line: 64, size: 256, elements: !2036)
!2036 = !{!2037, !2038}
!2037 = !DIDerivedType(tag: DW_TAG_member, name: "_addr", scope: !2035, file: !1999, line: 65, baseType: !114, size: 64)
!2038 = !DIDerivedType(tag: DW_TAG_member, scope: !2035, file: !1999, line: 77, baseType: !2039, size: 192, offset: 64)
!2039 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2035, file: !1999, line: 77, size: 192, elements: !2040)
!2040 = !{!2041, !2042, !2049}
!2041 = !DIDerivedType(tag: DW_TAG_member, name: "_addr_lsb", scope: !2039, file: !1999, line: 82, baseType: !159, size: 16)
!2042 = !DIDerivedType(tag: DW_TAG_member, name: "_addr_bnd", scope: !2039, file: !1999, line: 88, baseType: !2043, size: 192)
!2043 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2039, file: !1999, line: 84, size: 192, elements: !2044)
!2044 = !{!2045, !2047, !2048}
!2045 = !DIDerivedType(tag: DW_TAG_member, name: "_dummy_bnd", scope: !2043, file: !1999, line: 85, baseType: !2046, size: 64)
!2046 = !DICompositeType(tag: DW_TAG_array_type, baseType: !192, size: 64, elements: !1347)
!2047 = !DIDerivedType(tag: DW_TAG_member, name: "_lower", scope: !2043, file: !1999, line: 86, baseType: !114, size: 64, offset: 64)
!2048 = !DIDerivedType(tag: DW_TAG_member, name: "_upper", scope: !2043, file: !1999, line: 87, baseType: !114, size: 64, offset: 128)
!2049 = !DIDerivedType(tag: DW_TAG_member, name: "_addr_pkey", scope: !2039, file: !1999, line: 93, baseType: !2050, size: 96)
!2050 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2039, file: !1999, line: 90, size: 96, elements: !2051)
!2051 = !{!2052, !2053}
!2052 = !DIDerivedType(tag: DW_TAG_member, name: "_dummy_pkey", scope: !2050, file: !1999, line: 91, baseType: !2046, size: 64)
!2053 = !DIDerivedType(tag: DW_TAG_member, name: "_pkey", scope: !2050, file: !1999, line: 92, baseType: !239, size: 32, offset: 64)
!2054 = !DIDerivedType(tag: DW_TAG_member, name: "_sigpoll", scope: !1998, file: !1999, line: 101, baseType: !2055, size: 128)
!2055 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1998, file: !1999, line: 98, size: 128, elements: !2056)
!2056 = !{!2057, !2058}
!2057 = !DIDerivedType(tag: DW_TAG_member, name: "_band", scope: !2055, file: !1999, line: 99, baseType: !564, size: 64)
!2058 = !DIDerivedType(tag: DW_TAG_member, name: "_fd", scope: !2055, file: !1999, line: 100, baseType: !169, size: 32, offset: 64)
!2059 = !DIDerivedType(tag: DW_TAG_member, name: "_sigsys", scope: !1998, file: !1999, line: 108, baseType: !2060, size: 128)
!2060 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1998, file: !1999, line: 104, size: 128, elements: !2061)
!2061 = !{!2062, !2063, !2064}
!2062 = !DIDerivedType(tag: DW_TAG_member, name: "_call_addr", scope: !2060, file: !1999, line: 105, baseType: !114, size: 64)
!2063 = !DIDerivedType(tag: DW_TAG_member, name: "_syscall", scope: !2060, file: !1999, line: 106, baseType: !169, size: 32, offset: 64)
!2064 = !DIDerivedType(tag: DW_TAG_member, name: "_arch", scope: !2060, file: !1999, line: 107, baseType: !7, size: 32, offset: 96)
!2065 = !DIDerivedType(tag: DW_TAG_member, name: "ioac", scope: !1234, file: !1235, line: 1067, baseType: !1848, offset: 11136)
!2066 = !DIDerivedType(tag: DW_TAG_member, name: "robust_list", scope: !1234, file: !1235, line: 1099, baseType: !2067, size: 64, offset: 11136)
!2067 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2068, size: 64)
!2068 = !DICompositeType(tag: DW_TAG_structure_type, name: "robust_list_head", file: !1235, line: 56, flags: DIFlagFwdDecl)
!2069 = !DIDerivedType(tag: DW_TAG_member, name: "pi_state_list", scope: !1234, file: !1235, line: 1103, baseType: !119, size: 128, offset: 11200)
!2070 = !DIDerivedType(tag: DW_TAG_member, name: "pi_state_cache", scope: !1234, file: !1235, line: 1104, baseType: !2071, size: 64, offset: 11328)
!2071 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2072, size: 64)
!2072 = !DICompositeType(tag: DW_TAG_structure_type, name: "futex_pi_state", file: !1235, line: 46, flags: DIFlagFwdDecl)
!2073 = !DIDerivedType(tag: DW_TAG_member, name: "futex_exit_mutex", scope: !1234, file: !1235, line: 1105, baseType: !343, size: 192, offset: 11392)
!2074 = !DIDerivedType(tag: DW_TAG_member, name: "futex_state", scope: !1234, file: !1235, line: 1106, baseType: !7, size: 32, offset: 11584)
!2075 = !DIDerivedType(tag: DW_TAG_member, name: "perf_event_ctxp", scope: !1234, file: !1235, line: 1109, baseType: !2076, size: 128, offset: 11648)
!2076 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2077, size: 128, elements: !220)
!2077 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2078, size: 64)
!2078 = !DICompositeType(tag: DW_TAG_structure_type, name: "perf_event_context", file: !1235, line: 51, flags: DIFlagFwdDecl)
!2079 = !DIDerivedType(tag: DW_TAG_member, name: "perf_event_mutex", scope: !1234, file: !1235, line: 1110, baseType: !343, size: 192, offset: 11776)
!2080 = !DIDerivedType(tag: DW_TAG_member, name: "perf_event_list", scope: !1234, file: !1235, line: 1111, baseType: !119, size: 128, offset: 11968)
!2081 = !DIDerivedType(tag: DW_TAG_member, name: "rseq", scope: !1234, file: !1235, line: 1173, baseType: !2082, size: 64, offset: 12096)
!2082 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2083, size: 64)
!2083 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rseq", file: !2084, line: 62, size: 256, align: 256, elements: !2085)
!2084 = !DIFile(filename: "./include/uapi/linux/rseq.h", directory: "/home/lizy2001/genbc/linux")
!2085 = !{!2086, !2087, !2088, !2093}
!2086 = !DIDerivedType(tag: DW_TAG_member, name: "cpu_id_start", scope: !2083, file: !2084, line: 75, baseType: !239, size: 32)
!2087 = !DIDerivedType(tag: DW_TAG_member, name: "cpu_id", scope: !2083, file: !2084, line: 90, baseType: !239, size: 32, offset: 32)
!2088 = !DIDerivedType(tag: DW_TAG_member, name: "rseq_cs", scope: !2083, file: !2084, line: 124, baseType: !2089, size: 64, offset: 64)
!2089 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2083, file: !2084, line: 109, size: 64, elements: !2090)
!2090 = !{!2091, !2092}
!2091 = !DIDerivedType(tag: DW_TAG_member, name: "ptr64", scope: !2089, file: !2084, line: 110, baseType: !444, size: 64)
!2092 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !2089, file: !2084, line: 112, baseType: !444, size: 64)
!2093 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2083, file: !2084, line: 144, baseType: !239, size: 32, offset: 128)
!2094 = !DIDerivedType(tag: DW_TAG_member, name: "rseq_sig", scope: !1234, file: !1235, line: 1174, baseType: !440, size: 32, offset: 12160)
!2095 = !DIDerivedType(tag: DW_TAG_member, name: "rseq_event_mask", scope: !1234, file: !1235, line: 1179, baseType: !205, size: 64, offset: 12224)
!2096 = !DIDerivedType(tag: DW_TAG_member, name: "tlb_ubc", scope: !1234, file: !1235, line: 1182, baseType: !2097, size: 128, offset: 12288)
!2097 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tlbflush_unmap_batch", file: !1176, line: 76, size: 128, elements: !2098)
!2098 = !{!2099, !2104, !2105}
!2099 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !2097, file: !1176, line: 85, baseType: !2100, size: 64)
!2100 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arch_tlbflush_unmap_batch", file: !2101, line: 7, size: 64, elements: !2102)
!2101 = !DIFile(filename: "./arch/x86/include/asm/tlbbatch.h", directory: "/home/lizy2001/genbc/linux")
!2102 = !{!2103}
!2103 = !DIDerivedType(tag: DW_TAG_member, name: "cpumask", scope: !2100, file: !2101, line: 12, baseType: !1383, size: 64)
!2104 = !DIDerivedType(tag: DW_TAG_member, name: "flush_required", scope: !2097, file: !1176, line: 88, baseType: !514, size: 8, offset: 64)
!2105 = !DIDerivedType(tag: DW_TAG_member, name: "writable", scope: !2097, file: !1176, line: 95, baseType: !514, size: 8, offset: 72)
!2106 = !DIDerivedType(tag: DW_TAG_member, scope: !1234, file: !1235, line: 1184, baseType: !2107, size: 128, offset: 12416)
!2107 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1234, file: !1235, line: 1184, size: 128, elements: !2108)
!2108 = !{!2109, !2110}
!2109 = !DIDerivedType(tag: DW_TAG_member, name: "rcu_users", scope: !2107, file: !1235, line: 1185, baseType: !1247, size: 32)
!2110 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !2107, file: !1235, line: 1186, baseType: !390, size: 128, align: 64)
!2111 = !DIDerivedType(tag: DW_TAG_member, name: "splice_pipe", scope: !1234, file: !1235, line: 1190, baseType: !2112, size: 64, offset: 12544)
!2112 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2113, size: 64)
!2113 = !DICompositeType(tag: DW_TAG_structure_type, name: "pipe_inode_info", file: !1235, line: 53, flags: DIFlagFwdDecl)
!2114 = !DIDerivedType(tag: DW_TAG_member, name: "task_frag", scope: !1234, file: !1235, line: 1192, baseType: !2115, size: 128, offset: 12608)
!2115 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "page_frag", file: !1176, line: 64, size: 128, elements: !2116)
!2116 = !{!2117, !2118, !2119}
!2117 = !DIDerivedType(tag: DW_TAG_member, name: "page", scope: !2115, file: !1176, line: 65, baseType: !755, size: 64)
!2118 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !2115, file: !1176, line: 67, baseType: !239, size: 32, offset: 64)
!2119 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2115, file: !1176, line: 68, baseType: !239, size: 32, offset: 96)
!2120 = !DIDerivedType(tag: DW_TAG_member, name: "nr_dirtied", scope: !1234, file: !1235, line: 1206, baseType: !169, size: 32, offset: 12736)
!2121 = !DIDerivedType(tag: DW_TAG_member, name: "nr_dirtied_pause", scope: !1234, file: !1235, line: 1207, baseType: !169, size: 32, offset: 12768)
!2122 = !DIDerivedType(tag: DW_TAG_member, name: "dirty_paused_when", scope: !1234, file: !1235, line: 1209, baseType: !205, size: 64, offset: 12800)
!2123 = !DIDerivedType(tag: DW_TAG_member, name: "timer_slack_ns", scope: !1234, file: !1235, line: 1219, baseType: !443, size: 64, offset: 12864)
!2124 = !DIDerivedType(tag: DW_TAG_member, name: "default_timer_slack_ns", scope: !1234, file: !1235, line: 1220, baseType: !443, size: 64, offset: 12928)
!2125 = !DIDerivedType(tag: DW_TAG_member, name: "pagefault_disabled", scope: !1234, file: !1235, line: 1317, baseType: !169, size: 32, offset: 12992)
!2126 = !DIDerivedType(tag: DW_TAG_member, name: "oom_reaper_list", scope: !1234, file: !1235, line: 1319, baseType: !1233, size: 64, offset: 13056)
!2127 = !DIDerivedType(tag: DW_TAG_member, name: "stack_vm_area", scope: !1234, file: !1235, line: 1322, baseType: !2128, size: 64, offset: 13120)
!2128 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2129, size: 64)
!2129 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vm_struct", file: !2130, line: 56, size: 512, elements: !2131)
!2130 = !DIFile(filename: "./include/linux/vmalloc.h", directory: "/home/lizy2001/genbc/linux")
!2131 = !{!2132, !2133, !2134, !2135, !2136, !2137, !2138, !2140}
!2132 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2129, file: !2130, line: 57, baseType: !2128, size: 64)
!2133 = !DIDerivedType(tag: DW_TAG_member, name: "addr", scope: !2129, file: !2130, line: 58, baseType: !114, size: 64, offset: 64)
!2134 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2129, file: !2130, line: 59, baseType: !205, size: 64, offset: 128)
!2135 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2129, file: !2130, line: 60, baseType: !205, size: 64, offset: 192)
!2136 = !DIDerivedType(tag: DW_TAG_member, name: "pages", scope: !2129, file: !2130, line: 61, baseType: !847, size: 64, offset: 256)
!2137 = !DIDerivedType(tag: DW_TAG_member, name: "nr_pages", scope: !2129, file: !2130, line: 62, baseType: !7, size: 32, offset: 320)
!2138 = !DIDerivedType(tag: DW_TAG_member, name: "phys_addr", scope: !2129, file: !2130, line: 63, baseType: !2139, size: 64, offset: 384)
!2139 = !DIDerivedType(tag: DW_TAG_typedef, name: "phys_addr_t", file: !113, line: 153, baseType: !443)
!2140 = !DIDerivedType(tag: DW_TAG_member, name: "caller", scope: !2129, file: !2130, line: 64, baseType: !2141, size: 64, offset: 448)
!2141 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2142, size: 64)
!2142 = !DIDerivedType(tag: DW_TAG_const_type, baseType: null)
!2143 = !DIDerivedType(tag: DW_TAG_member, name: "stack_refcount", scope: !1234, file: !1235, line: 1326, baseType: !1247, size: 32, offset: 13184)
!2144 = !DIDerivedType(tag: DW_TAG_member, name: "mce_vaddr", scope: !1234, file: !1235, line: 1342, baseType: !114, size: 64, offset: 13248)
!2145 = !DIDerivedType(tag: DW_TAG_member, name: "mce_kflags", scope: !1234, file: !1235, line: 1343, baseType: !444, size: 64, offset: 13312)
!2146 = !DIDerivedType(tag: DW_TAG_member, name: "mce_addr", scope: !1234, file: !1235, line: 1344, baseType: !443, size: 64, offset: 13376)
!2147 = !DIDerivedType(tag: DW_TAG_member, name: "mce_ripv", scope: !1234, file: !1235, line: 1345, baseType: !444, size: 1, offset: 13440, flags: DIFlagBitField, extraData: i64 13440)
!2148 = !DIDerivedType(tag: DW_TAG_member, name: "mce_whole_page", scope: !1234, file: !1235, line: 1346, baseType: !444, size: 1, offset: 13441, flags: DIFlagBitField, extraData: i64 13440)
!2149 = !DIDerivedType(tag: DW_TAG_member, name: "__mce_reserved", scope: !1234, file: !1235, line: 1347, baseType: !444, size: 62, offset: 13442, flags: DIFlagBitField, extraData: i64 13440)
!2150 = !DIDerivedType(tag: DW_TAG_member, name: "mce_kill_me", scope: !1234, file: !1235, line: 1348, baseType: !390, size: 128, align: 64, offset: 13504)
!2151 = !DIDerivedType(tag: DW_TAG_member, name: "thread", scope: !1234, file: !1235, line: 1358, baseType: !2152, size: 34816, offset: 13824)
!2152 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "thread_struct", file: !2153, line: 485, size: 34816, elements: !2154)
!2153 = !DIFile(filename: "./arch/x86/include/asm/processor.h", directory: "/home/lizy2001/genbc/linux")
!2154 = !{!2155, !2173, !2174, !2175, !2176, !2177, !2178, !2179, !2180, !2184, !2185, !2186, !2187, !2188, !2189, !2192, !2193, !2194}
!2155 = !DIDerivedType(tag: DW_TAG_member, name: "tls_array", scope: !2152, file: !2153, line: 487, baseType: !2156, size: 192)
!2156 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2157, size: 192, elements: !683)
!2157 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "desc_struct", file: !2158, line: 16, size: 64, elements: !2159)
!2158 = !DIFile(filename: "./arch/x86/include/asm/desc_defs.h", directory: "/home/lizy2001/genbc/linux")
!2159 = !{!2160, !2161, !2162, !2163, !2164, !2165, !2166, !2167, !2168, !2169, !2170, !2171, !2172}
!2160 = !DIDerivedType(tag: DW_TAG_member, name: "limit0", scope: !2157, file: !2158, line: 17, baseType: !333, size: 16)
!2161 = !DIDerivedType(tag: DW_TAG_member, name: "base0", scope: !2157, file: !2158, line: 18, baseType: !333, size: 16, offset: 16)
!2162 = !DIDerivedType(tag: DW_TAG_member, name: "base1", scope: !2157, file: !2158, line: 19, baseType: !333, size: 8, offset: 32, flags: DIFlagBitField, extraData: i64 32)
!2163 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2157, file: !2158, line: 19, baseType: !333, size: 4, offset: 40, flags: DIFlagBitField, extraData: i64 32)
!2164 = !DIDerivedType(tag: DW_TAG_member, name: "s", scope: !2157, file: !2158, line: 19, baseType: !333, size: 1, offset: 44, flags: DIFlagBitField, extraData: i64 32)
!2165 = !DIDerivedType(tag: DW_TAG_member, name: "dpl", scope: !2157, file: !2158, line: 19, baseType: !333, size: 2, offset: 45, flags: DIFlagBitField, extraData: i64 32)
!2166 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !2157, file: !2158, line: 19, baseType: !333, size: 1, offset: 47, flags: DIFlagBitField, extraData: i64 32)
!2167 = !DIDerivedType(tag: DW_TAG_member, name: "limit1", scope: !2157, file: !2158, line: 20, baseType: !333, size: 4, offset: 48, flags: DIFlagBitField, extraData: i64 32)
!2168 = !DIDerivedType(tag: DW_TAG_member, name: "avl", scope: !2157, file: !2158, line: 20, baseType: !333, size: 1, offset: 52, flags: DIFlagBitField, extraData: i64 32)
!2169 = !DIDerivedType(tag: DW_TAG_member, name: "l", scope: !2157, file: !2158, line: 20, baseType: !333, size: 1, offset: 53, flags: DIFlagBitField, extraData: i64 32)
!2170 = !DIDerivedType(tag: DW_TAG_member, name: "d", scope: !2157, file: !2158, line: 20, baseType: !333, size: 1, offset: 54, flags: DIFlagBitField, extraData: i64 32)
!2171 = !DIDerivedType(tag: DW_TAG_member, name: "g", scope: !2157, file: !2158, line: 20, baseType: !333, size: 1, offset: 55, flags: DIFlagBitField, extraData: i64 32)
!2172 = !DIDerivedType(tag: DW_TAG_member, name: "base2", scope: !2157, file: !2158, line: 20, baseType: !333, size: 8, offset: 56, flags: DIFlagBitField, extraData: i64 32)
!2173 = !DIDerivedType(tag: DW_TAG_member, name: "sp", scope: !2152, file: !2153, line: 491, baseType: !205, size: 64, offset: 192)
!2174 = !DIDerivedType(tag: DW_TAG_member, name: "es", scope: !2152, file: !2153, line: 495, baseType: !150, size: 16, offset: 256)
!2175 = !DIDerivedType(tag: DW_TAG_member, name: "ds", scope: !2152, file: !2153, line: 496, baseType: !150, size: 16, offset: 272)
!2176 = !DIDerivedType(tag: DW_TAG_member, name: "fsindex", scope: !2152, file: !2153, line: 497, baseType: !150, size: 16, offset: 288)
!2177 = !DIDerivedType(tag: DW_TAG_member, name: "gsindex", scope: !2152, file: !2153, line: 498, baseType: !150, size: 16, offset: 304)
!2178 = !DIDerivedType(tag: DW_TAG_member, name: "fsbase", scope: !2152, file: !2153, line: 502, baseType: !205, size: 64, offset: 320)
!2179 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !2152, file: !2153, line: 503, baseType: !205, size: 64, offset: 384)
!2180 = !DIDerivedType(tag: DW_TAG_member, name: "ptrace_bps", scope: !2152, file: !2153, line: 514, baseType: !2181, size: 256, offset: 448)
!2181 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2182, size: 256, elements: !1180)
!2182 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2183, size: 64)
!2183 = !DICompositeType(tag: DW_TAG_structure_type, name: "perf_event", file: !2153, line: 483, flags: DIFlagFwdDecl)
!2184 = !DIDerivedType(tag: DW_TAG_member, name: "virtual_dr6", scope: !2152, file: !2153, line: 516, baseType: !205, size: 64, offset: 704)
!2185 = !DIDerivedType(tag: DW_TAG_member, name: "ptrace_dr7", scope: !2152, file: !2153, line: 518, baseType: !205, size: 64, offset: 768)
!2186 = !DIDerivedType(tag: DW_TAG_member, name: "cr2", scope: !2152, file: !2153, line: 520, baseType: !205, size: 64, offset: 832)
!2187 = !DIDerivedType(tag: DW_TAG_member, name: "trap_nr", scope: !2152, file: !2153, line: 521, baseType: !205, size: 64, offset: 896)
!2188 = !DIDerivedType(tag: DW_TAG_member, name: "error_code", scope: !2152, file: !2153, line: 522, baseType: !205, size: 64, offset: 960)
!2189 = !DIDerivedType(tag: DW_TAG_member, name: "io_bitmap", scope: !2152, file: !2153, line: 528, baseType: !2190, size: 64, offset: 1024)
!2190 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2191, size: 64)
!2191 = !DICompositeType(tag: DW_TAG_structure_type, name: "io_bitmap", file: !2153, line: 10, flags: DIFlagFwdDecl)
!2192 = !DIDerivedType(tag: DW_TAG_member, name: "iopl_emul", scope: !2152, file: !2153, line: 535, baseType: !205, size: 64, offset: 1088)
!2193 = !DIDerivedType(tag: DW_TAG_member, name: "sig_on_uaccess_err", scope: !2152, file: !2153, line: 537, baseType: !7, size: 1, offset: 1152, flags: DIFlagBitField, extraData: i64 1152)
!2194 = !DIDerivedType(tag: DW_TAG_member, name: "fpu", scope: !2152, file: !2153, line: 540, baseType: !2195, size: 33280, offset: 1536)
!2195 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fpu", file: !2196, line: 317, size: 33280, elements: !2197)
!2196 = !DIFile(filename: "./arch/x86/include/asm/fpu/types.h", directory: "/home/lizy2001/genbc/linux")
!2197 = !{!2198, !2199, !2200}
!2198 = !DIDerivedType(tag: DW_TAG_member, name: "last_cpu", scope: !2195, file: !2196, line: 330, baseType: !7, size: 32)
!2199 = !DIDerivedType(tag: DW_TAG_member, name: "avx512_timestamp", scope: !2195, file: !2196, line: 337, baseType: !205, size: 64, offset: 64)
!2200 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !2195, file: !2196, line: 348, baseType: !2201, size: 32768, offset: 512)
!2201 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "fpregs_state", file: !2196, line: 304, size: 32768, elements: !2202)
!2202 = !{!2203, !2218, !2253, !2303, !2316}
!2203 = !DIDerivedType(tag: DW_TAG_member, name: "fsave", scope: !2201, file: !2196, line: 305, baseType: !2204, size: 896)
!2204 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fregs_state", file: !2196, line: 12, size: 896, elements: !2205)
!2205 = !{!2206, !2207, !2208, !2209, !2210, !2211, !2212, !2213, !2217}
!2206 = !DIDerivedType(tag: DW_TAG_member, name: "cwd", scope: !2204, file: !2196, line: 13, baseType: !440, size: 32)
!2207 = !DIDerivedType(tag: DW_TAG_member, name: "swd", scope: !2204, file: !2196, line: 14, baseType: !440, size: 32, offset: 32)
!2208 = !DIDerivedType(tag: DW_TAG_member, name: "twd", scope: !2204, file: !2196, line: 15, baseType: !440, size: 32, offset: 64)
!2209 = !DIDerivedType(tag: DW_TAG_member, name: "fip", scope: !2204, file: !2196, line: 16, baseType: !440, size: 32, offset: 96)
!2210 = !DIDerivedType(tag: DW_TAG_member, name: "fcs", scope: !2204, file: !2196, line: 17, baseType: !440, size: 32, offset: 128)
!2211 = !DIDerivedType(tag: DW_TAG_member, name: "foo", scope: !2204, file: !2196, line: 18, baseType: !440, size: 32, offset: 160)
!2212 = !DIDerivedType(tag: DW_TAG_member, name: "fos", scope: !2204, file: !2196, line: 19, baseType: !440, size: 32, offset: 192)
!2213 = !DIDerivedType(tag: DW_TAG_member, name: "st_space", scope: !2204, file: !2196, line: 22, baseType: !2214, size: 640, offset: 224)
!2214 = !DICompositeType(tag: DW_TAG_array_type, baseType: !440, size: 640, elements: !2215)
!2215 = !{!2216}
!2216 = !DISubrange(count: 20)
!2217 = !DIDerivedType(tag: DW_TAG_member, name: "status", scope: !2204, file: !2196, line: 25, baseType: !440, size: 32, offset: 864)
!2218 = !DIDerivedType(tag: DW_TAG_member, name: "fxsave", scope: !2201, file: !2196, line: 306, baseType: !2219, size: 4096, align: 128)
!2219 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fxregs_state", file: !2196, line: 34, size: 4096, align: 128, elements: !2220)
!2220 = !{!2221, !2222, !2223, !2224, !2225, !2240, !2241, !2242, !2244, !2246, !2248}
!2221 = !DIDerivedType(tag: DW_TAG_member, name: "cwd", scope: !2219, file: !2196, line: 35, baseType: !333, size: 16)
!2222 = !DIDerivedType(tag: DW_TAG_member, name: "swd", scope: !2219, file: !2196, line: 36, baseType: !333, size: 16, offset: 16)
!2223 = !DIDerivedType(tag: DW_TAG_member, name: "twd", scope: !2219, file: !2196, line: 37, baseType: !333, size: 16, offset: 32)
!2224 = !DIDerivedType(tag: DW_TAG_member, name: "fop", scope: !2219, file: !2196, line: 38, baseType: !333, size: 16, offset: 48)
!2225 = !DIDerivedType(tag: DW_TAG_member, scope: !2219, file: !2196, line: 39, baseType: !2226, size: 128, offset: 64)
!2226 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2219, file: !2196, line: 39, size: 128, elements: !2227)
!2227 = !{!2228, !2233}
!2228 = !DIDerivedType(tag: DW_TAG_member, scope: !2226, file: !2196, line: 40, baseType: !2229, size: 128)
!2229 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2226, file: !2196, line: 40, size: 128, elements: !2230)
!2230 = !{!2231, !2232}
!2231 = !DIDerivedType(tag: DW_TAG_member, name: "rip", scope: !2229, file: !2196, line: 41, baseType: !443, size: 64)
!2232 = !DIDerivedType(tag: DW_TAG_member, name: "rdp", scope: !2229, file: !2196, line: 42, baseType: !443, size: 64, offset: 64)
!2233 = !DIDerivedType(tag: DW_TAG_member, scope: !2226, file: !2196, line: 44, baseType: !2234, size: 128)
!2234 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2226, file: !2196, line: 44, size: 128, elements: !2235)
!2235 = !{!2236, !2237, !2238, !2239}
!2236 = !DIDerivedType(tag: DW_TAG_member, name: "fip", scope: !2234, file: !2196, line: 45, baseType: !440, size: 32)
!2237 = !DIDerivedType(tag: DW_TAG_member, name: "fcs", scope: !2234, file: !2196, line: 46, baseType: !440, size: 32, offset: 32)
!2238 = !DIDerivedType(tag: DW_TAG_member, name: "foo", scope: !2234, file: !2196, line: 47, baseType: !440, size: 32, offset: 64)
!2239 = !DIDerivedType(tag: DW_TAG_member, name: "fos", scope: !2234, file: !2196, line: 48, baseType: !440, size: 32, offset: 96)
!2240 = !DIDerivedType(tag: DW_TAG_member, name: "mxcsr", scope: !2219, file: !2196, line: 51, baseType: !440, size: 32, offset: 192)
!2241 = !DIDerivedType(tag: DW_TAG_member, name: "mxcsr_mask", scope: !2219, file: !2196, line: 52, baseType: !440, size: 32, offset: 224)
!2242 = !DIDerivedType(tag: DW_TAG_member, name: "st_space", scope: !2219, file: !2196, line: 55, baseType: !2243, size: 1024, offset: 256)
!2243 = !DICompositeType(tag: DW_TAG_array_type, baseType: !440, size: 1024, elements: !242)
!2244 = !DIDerivedType(tag: DW_TAG_member, name: "xmm_space", scope: !2219, file: !2196, line: 58, baseType: !2245, size: 2048, offset: 1280)
!2245 = !DICompositeType(tag: DW_TAG_array_type, baseType: !440, size: 2048, elements: !1893)
!2246 = !DIDerivedType(tag: DW_TAG_member, name: "padding", scope: !2219, file: !2196, line: 60, baseType: !2247, size: 384, offset: 3328)
!2247 = !DICompositeType(tag: DW_TAG_array_type, baseType: !440, size: 384, elements: !211)
!2248 = !DIDerivedType(tag: DW_TAG_member, scope: !2219, file: !2196, line: 62, baseType: !2249, size: 384, offset: 3712)
!2249 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2219, file: !2196, line: 62, size: 384, elements: !2250)
!2250 = !{!2251, !2252}
!2251 = !DIDerivedType(tag: DW_TAG_member, name: "padding1", scope: !2249, file: !2196, line: 63, baseType: !2247, size: 384)
!2252 = !DIDerivedType(tag: DW_TAG_member, name: "sw_reserved", scope: !2249, file: !2196, line: 64, baseType: !2247, size: 384)
!2253 = !DIDerivedType(tag: DW_TAG_member, name: "soft", scope: !2201, file: !2196, line: 307, baseType: !2254, size: 1088)
!2254 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "swregs_state", file: !2196, line: 79, size: 1088, elements: !2255)
!2255 = !{!2256, !2257, !2258, !2259, !2260, !2261, !2262, !2263, !2264, !2265, !2266, !2267, !2268, !2269, !2270, !2302}
!2256 = !DIDerivedType(tag: DW_TAG_member, name: "cwd", scope: !2254, file: !2196, line: 80, baseType: !440, size: 32)
!2257 = !DIDerivedType(tag: DW_TAG_member, name: "swd", scope: !2254, file: !2196, line: 81, baseType: !440, size: 32, offset: 32)
!2258 = !DIDerivedType(tag: DW_TAG_member, name: "twd", scope: !2254, file: !2196, line: 82, baseType: !440, size: 32, offset: 64)
!2259 = !DIDerivedType(tag: DW_TAG_member, name: "fip", scope: !2254, file: !2196, line: 83, baseType: !440, size: 32, offset: 96)
!2260 = !DIDerivedType(tag: DW_TAG_member, name: "fcs", scope: !2254, file: !2196, line: 84, baseType: !440, size: 32, offset: 128)
!2261 = !DIDerivedType(tag: DW_TAG_member, name: "foo", scope: !2254, file: !2196, line: 85, baseType: !440, size: 32, offset: 160)
!2262 = !DIDerivedType(tag: DW_TAG_member, name: "fos", scope: !2254, file: !2196, line: 86, baseType: !440, size: 32, offset: 192)
!2263 = !DIDerivedType(tag: DW_TAG_member, name: "st_space", scope: !2254, file: !2196, line: 88, baseType: !2214, size: 640, offset: 224)
!2264 = !DIDerivedType(tag: DW_TAG_member, name: "ftop", scope: !2254, file: !2196, line: 89, baseType: !1369, size: 8, offset: 864)
!2265 = !DIDerivedType(tag: DW_TAG_member, name: "changed", scope: !2254, file: !2196, line: 90, baseType: !1369, size: 8, offset: 872)
!2266 = !DIDerivedType(tag: DW_TAG_member, name: "lookahead", scope: !2254, file: !2196, line: 91, baseType: !1369, size: 8, offset: 880)
!2267 = !DIDerivedType(tag: DW_TAG_member, name: "no_update", scope: !2254, file: !2196, line: 92, baseType: !1369, size: 8, offset: 888)
!2268 = !DIDerivedType(tag: DW_TAG_member, name: "rm", scope: !2254, file: !2196, line: 93, baseType: !1369, size: 8, offset: 896)
!2269 = !DIDerivedType(tag: DW_TAG_member, name: "alimit", scope: !2254, file: !2196, line: 94, baseType: !1369, size: 8, offset: 904)
!2270 = !DIDerivedType(tag: DW_TAG_member, name: "info", scope: !2254, file: !2196, line: 95, baseType: !2271, size: 64, offset: 960)
!2271 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2272, size: 64)
!2272 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "math_emu_info", file: !2273, line: 11, size: 128, elements: !2274)
!2273 = !DIFile(filename: "./arch/x86/include/asm/math_emu.h", directory: "/home/lizy2001/genbc/linux")
!2274 = !{!2275, !2276}
!2275 = !DIDerivedType(tag: DW_TAG_member, name: "___orig_eip", scope: !2272, file: !2273, line: 12, baseType: !564, size: 64)
!2276 = !DIDerivedType(tag: DW_TAG_member, name: "regs", scope: !2272, file: !2273, line: 13, baseType: !2277, size: 64, offset: 64)
!2277 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2278, size: 64)
!2278 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pt_regs", file: !2279, line: 56, size: 1344, elements: !2280)
!2279 = !DIFile(filename: "./arch/x86/include/asm/ptrace.h", directory: "/home/lizy2001/genbc/linux")
!2280 = !{!2281, !2282, !2283, !2284, !2285, !2286, !2287, !2288, !2289, !2290, !2291, !2292, !2293, !2294, !2295, !2296, !2297, !2298, !2299, !2300, !2301}
!2281 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !2278, file: !2279, line: 61, baseType: !205, size: 64)
!2282 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !2278, file: !2279, line: 62, baseType: !205, size: 64, offset: 64)
!2283 = !DIDerivedType(tag: DW_TAG_member, name: "r13", scope: !2278, file: !2279, line: 63, baseType: !205, size: 64, offset: 128)
!2284 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !2278, file: !2279, line: 64, baseType: !205, size: 64, offset: 192)
!2285 = !DIDerivedType(tag: DW_TAG_member, name: "bp", scope: !2278, file: !2279, line: 65, baseType: !205, size: 64, offset: 256)
!2286 = !DIDerivedType(tag: DW_TAG_member, name: "bx", scope: !2278, file: !2279, line: 66, baseType: !205, size: 64, offset: 320)
!2287 = !DIDerivedType(tag: DW_TAG_member, name: "r11", scope: !2278, file: !2279, line: 68, baseType: !205, size: 64, offset: 384)
!2288 = !DIDerivedType(tag: DW_TAG_member, name: "r10", scope: !2278, file: !2279, line: 69, baseType: !205, size: 64, offset: 448)
!2289 = !DIDerivedType(tag: DW_TAG_member, name: "r9", scope: !2278, file: !2279, line: 70, baseType: !205, size: 64, offset: 512)
!2290 = !DIDerivedType(tag: DW_TAG_member, name: "r8", scope: !2278, file: !2279, line: 71, baseType: !205, size: 64, offset: 576)
!2291 = !DIDerivedType(tag: DW_TAG_member, name: "ax", scope: !2278, file: !2279, line: 72, baseType: !205, size: 64, offset: 640)
!2292 = !DIDerivedType(tag: DW_TAG_member, name: "cx", scope: !2278, file: !2279, line: 73, baseType: !205, size: 64, offset: 704)
!2293 = !DIDerivedType(tag: DW_TAG_member, name: "dx", scope: !2278, file: !2279, line: 74, baseType: !205, size: 64, offset: 768)
!2294 = !DIDerivedType(tag: DW_TAG_member, name: "si", scope: !2278, file: !2279, line: 75, baseType: !205, size: 64, offset: 832)
!2295 = !DIDerivedType(tag: DW_TAG_member, name: "di", scope: !2278, file: !2279, line: 76, baseType: !205, size: 64, offset: 896)
!2296 = !DIDerivedType(tag: DW_TAG_member, name: "orig_ax", scope: !2278, file: !2279, line: 81, baseType: !205, size: 64, offset: 960)
!2297 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !2278, file: !2279, line: 83, baseType: !205, size: 64, offset: 1024)
!2298 = !DIDerivedType(tag: DW_TAG_member, name: "cs", scope: !2278, file: !2279, line: 84, baseType: !205, size: 64, offset: 1088)
!2299 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2278, file: !2279, line: 85, baseType: !205, size: 64, offset: 1152)
!2300 = !DIDerivedType(tag: DW_TAG_member, name: "sp", scope: !2278, file: !2279, line: 86, baseType: !205, size: 64, offset: 1216)
!2301 = !DIDerivedType(tag: DW_TAG_member, name: "ss", scope: !2278, file: !2279, line: 87, baseType: !205, size: 64, offset: 1280)
!2302 = !DIDerivedType(tag: DW_TAG_member, name: "entry_eip", scope: !2254, file: !2196, line: 96, baseType: !440, size: 32, offset: 1024)
!2303 = !DIDerivedType(tag: DW_TAG_member, name: "xsave", scope: !2201, file: !2196, line: 308, baseType: !2304, size: 4608, align: 512)
!2304 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xregs_state", file: !2196, line: 289, size: 4608, align: 512, elements: !2305)
!2305 = !{!2306, !2307, !2314}
!2306 = !DIDerivedType(tag: DW_TAG_member, name: "i387", scope: !2304, file: !2196, line: 290, baseType: !2219, size: 4096, align: 128)
!2307 = !DIDerivedType(tag: DW_TAG_member, name: "header", scope: !2304, file: !2196, line: 291, baseType: !2308, size: 512, offset: 4096)
!2308 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xstate_header", file: !2196, line: 268, size: 512, elements: !2309)
!2309 = !{!2310, !2311, !2312}
!2310 = !DIDerivedType(tag: DW_TAG_member, name: "xfeatures", scope: !2308, file: !2196, line: 269, baseType: !443, size: 64)
!2311 = !DIDerivedType(tag: DW_TAG_member, name: "xcomp_bv", scope: !2308, file: !2196, line: 270, baseType: !443, size: 64, offset: 64)
!2312 = !DIDerivedType(tag: DW_TAG_member, name: "reserved", scope: !2308, file: !2196, line: 271, baseType: !2313, size: 384, offset: 128)
!2313 = !DICompositeType(tag: DW_TAG_array_type, baseType: !443, size: 384, elements: !1635)
!2314 = !DIDerivedType(tag: DW_TAG_member, name: "extended_state_area", scope: !2304, file: !2196, line: 292, baseType: !2315, offset: 4608)
!2315 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1369, elements: !1733)
!2316 = !DIDerivedType(tag: DW_TAG_member, name: "__padding", scope: !2201, file: !2196, line: 309, baseType: !2317, size: 32768)
!2317 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1369, size: 32768, elements: !2318)
!2318 = !{!2319}
!2319 = !DISubrange(count: 4096)
!2320 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1230, file: !757, line: 378, baseType: !2321, size: 64, offset: 64)
!2321 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1230, size: 64)
!2322 = !DIDerivedType(tag: DW_TAG_member, name: "startup", scope: !1226, file: !757, line: 384, baseType: !1514, size: 192, offset: 192)
!2323 = !DIDerivedType(tag: DW_TAG_member, name: "ioctx_lock", scope: !1003, file: !757, line: 500, baseType: !357, offset: 6656)
!2324 = !DIDerivedType(tag: DW_TAG_member, name: "ioctx_table", scope: !1003, file: !757, line: 501, baseType: !2325, size: 64, offset: 6656)
!2325 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2326, size: 64)
!2326 = !DICompositeType(tag: DW_TAG_structure_type, name: "kioctx_table", file: !757, line: 387, flags: DIFlagFwdDecl)
!2327 = !DIDerivedType(tag: DW_TAG_member, name: "user_ns", scope: !1003, file: !757, line: 516, baseType: !1723, size: 64, offset: 6720)
!2328 = !DIDerivedType(tag: DW_TAG_member, name: "exe_file", scope: !1003, file: !757, line: 519, baseType: !377, size: 64, offset: 6784)
!2329 = !DIDerivedType(tag: DW_TAG_member, name: "notifier_subscriptions", scope: !1003, file: !757, line: 521, baseType: !2330, size: 64, offset: 6848)
!2330 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2331, size: 64)
!2331 = !DICompositeType(tag: DW_TAG_structure_type, name: "mmu_notifier_subscriptions", file: !757, line: 521, flags: DIFlagFwdDecl)
!2332 = !DIDerivedType(tag: DW_TAG_member, name: "tlb_flush_pending", scope: !1003, file: !757, line: 545, baseType: !781, size: 32, offset: 6912)
!2333 = !DIDerivedType(tag: DW_TAG_member, name: "tlb_flush_batched", scope: !1003, file: !757, line: 548, baseType: !514, size: 8, offset: 6944)
!2334 = !DIDerivedType(tag: DW_TAG_member, name: "uprobes_state", scope: !1003, file: !757, line: 550, baseType: !2335, offset: 6952)
!2335 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uprobes_state", file: !2336, line: 142, elements: !371)
!2336 = !DIFile(filename: "./include/linux/uprobes.h", directory: "/home/lizy2001/genbc/linux")
!2337 = !DIDerivedType(tag: DW_TAG_member, name: "async_put_work", scope: !1003, file: !757, line: 554, baseType: !1971, size: 256, offset: 6976)
!2338 = !DIDerivedType(tag: DW_TAG_member, name: "pasid", scope: !1003, file: !757, line: 557, baseType: !440, size: 32, offset: 7232)
!2339 = !DIDerivedType(tag: DW_TAG_member, name: "cpu_bitmap", scope: !1000, file: !757, line: 565, baseType: !2340, offset: 7296)
!2340 = !DICompositeType(tag: DW_TAG_array_type, baseType: !205, elements: !2341)
!2341 = !{!2342}
!2342 = !DISubrange(count: -1)
!2343 = !DIDerivedType(tag: DW_TAG_member, name: "pt_frag_refcount", scope: !996, file: !757, line: 151, baseType: !781, size: 32)
!2344 = !DIDerivedType(tag: DW_TAG_member, name: "ptl", scope: !989, file: !757, line: 156, baseType: !357, offset: 256)
!2345 = !DIDerivedType(tag: DW_TAG_member, scope: !761, file: !757, line: 159, baseType: !2346, size: 128)
!2346 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !761, file: !757, line: 159, size: 128, elements: !2347)
!2347 = !{!2348, !2412}
!2348 = !DIDerivedType(tag: DW_TAG_member, name: "pgmap", scope: !2346, file: !757, line: 161, baseType: !2349, size: 64)
!2349 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2350, size: 64)
!2350 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pagemap", file: !31, line: 110, size: 1152, elements: !2351)
!2351 = !{!2352, !2362, !2383, !2384, !2385, !2386, !2387, !2399, !2400, !2401}
!2352 = !DIDerivedType(tag: DW_TAG_member, name: "altmap", scope: !2350, file: !31, line: 111, baseType: !2353, size: 384)
!2353 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vmem_altmap", file: !31, line: 19, size: 384, elements: !2354)
!2354 = !{!2355, !2357, !2358, !2359, !2360, !2361}
!2355 = !DIDerivedType(tag: DW_TAG_member, name: "base_pfn", scope: !2353, file: !31, line: 20, baseType: !2356, size: 64)
!2356 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !205)
!2357 = !DIDerivedType(tag: DW_TAG_member, name: "end_pfn", scope: !2353, file: !31, line: 21, baseType: !2356, size: 64, offset: 64)
!2358 = !DIDerivedType(tag: DW_TAG_member, name: "reserve", scope: !2353, file: !31, line: 22, baseType: !2356, size: 64, offset: 128)
!2359 = !DIDerivedType(tag: DW_TAG_member, name: "free", scope: !2353, file: !31, line: 23, baseType: !205, size: 64, offset: 192)
!2360 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !2353, file: !31, line: 24, baseType: !205, size: 64, offset: 256)
!2361 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !2353, file: !31, line: 25, baseType: !205, size: 64, offset: 320)
!2362 = !DIDerivedType(tag: DW_TAG_member, name: "ref", scope: !2350, file: !31, line: 112, baseType: !2363, size: 64, offset: 384)
!2363 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2364, size: 64)
!2364 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "percpu_ref", file: !2365, line: 105, size: 128, elements: !2366)
!2365 = !DIFile(filename: "./include/linux/percpu-refcount.h", directory: "/home/lizy2001/genbc/linux")
!2366 = !{!2367, !2368}
!2367 = !DIDerivedType(tag: DW_TAG_member, name: "percpu_count_ptr", scope: !2364, file: !2365, line: 110, baseType: !205, size: 64)
!2368 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !2364, file: !2365, line: 118, baseType: !2369, size: 64, offset: 64)
!2369 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2370, size: 64)
!2370 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "percpu_ref_data", file: !2365, line: 95, size: 448, elements: !2371)
!2371 = !{!2372, !2373, !2378, !2379, !2380, !2381, !2382}
!2372 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !2370, file: !2365, line: 96, baseType: !347, size: 64)
!2373 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !2370, file: !2365, line: 97, baseType: !2374, size: 64, offset: 64)
!2374 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2375, size: 64)
!2375 = !DIDerivedType(tag: DW_TAG_typedef, name: "percpu_ref_func_t", file: !2365, line: 60, baseType: !2376)
!2376 = !DISubroutineType(types: !2377)
!2377 = !{null, !2363}
!2378 = !DIDerivedType(tag: DW_TAG_member, name: "confirm_switch", scope: !2370, file: !2365, line: 98, baseType: !2374, size: 64, offset: 128)
!2379 = !DIDerivedType(tag: DW_TAG_member, name: "force_atomic", scope: !2370, file: !2365, line: 99, baseType: !514, size: 1, offset: 192, flags: DIFlagBitField, extraData: i64 192)
!2380 = !DIDerivedType(tag: DW_TAG_member, name: "allow_reinit", scope: !2370, file: !2365, line: 100, baseType: !514, size: 1, offset: 193, flags: DIFlagBitField, extraData: i64 192)
!2381 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !2370, file: !2365, line: 101, baseType: !390, size: 128, align: 64, offset: 256)
!2382 = !DIDerivedType(tag: DW_TAG_member, name: "ref", scope: !2370, file: !2365, line: 102, baseType: !2363, size: 64, offset: 384)
!2383 = !DIDerivedType(tag: DW_TAG_member, name: "internal_ref", scope: !2350, file: !31, line: 113, baseType: !2364, size: 128, offset: 448)
!2384 = !DIDerivedType(tag: DW_TAG_member, name: "done", scope: !2350, file: !31, line: 114, baseType: !1514, size: 192, offset: 576)
!2385 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2350, file: !31, line: 115, baseType: !30, size: 32, offset: 768)
!2386 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2350, file: !31, line: 116, baseType: !7, size: 32, offset: 800)
!2387 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !2350, file: !31, line: 117, baseType: !2388, size: 64, offset: 832)
!2388 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2389, size: 64)
!2389 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2390)
!2390 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pagemap_ops", file: !31, line: 67, size: 256, elements: !2391)
!2391 = !{!2392, !2393, !2397, !2398}
!2392 = !DIDerivedType(tag: DW_TAG_member, name: "page_free", scope: !2390, file: !31, line: 73, baseType: !867, size: 64)
!2393 = !DIDerivedType(tag: DW_TAG_member, name: "kill", scope: !2390, file: !31, line: 78, baseType: !2394, size: 64, offset: 64)
!2394 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2395, size: 64)
!2395 = !DISubroutineType(types: !2396)
!2396 = !{null, !2349}
!2397 = !DIDerivedType(tag: DW_TAG_member, name: "cleanup", scope: !2390, file: !31, line: 83, baseType: !2394, size: 64, offset: 128)
!2398 = !DIDerivedType(tag: DW_TAG_member, name: "migrate_to_ram", scope: !2390, file: !31, line: 89, baseType: !1052, size: 64, offset: 192)
!2399 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !2350, file: !31, line: 118, baseType: !114, size: 64, offset: 896)
!2400 = !DIDerivedType(tag: DW_TAG_member, name: "nr_range", scope: !2350, file: !31, line: 119, baseType: !169, size: 32, offset: 960)
!2401 = !DIDerivedType(tag: DW_TAG_member, scope: !2350, file: !31, line: 120, baseType: !2402, size: 128, offset: 1024)
!2402 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2350, file: !31, line: 120, size: 128, elements: !2403)
!2403 = !{!2404, !2410}
!2404 = !DIDerivedType(tag: DW_TAG_member, name: "range", scope: !2402, file: !31, line: 121, baseType: !2405, size: 128)
!2405 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "range", file: !2406, line: 6, size: 128, elements: !2407)
!2406 = !DIFile(filename: "./include/linux/range.h", directory: "/home/lizy2001/genbc/linux")
!2407 = !{!2408, !2409}
!2408 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !2405, file: !2406, line: 7, baseType: !443, size: 64)
!2409 = !DIDerivedType(tag: DW_TAG_member, name: "end", scope: !2405, file: !2406, line: 8, baseType: !443, size: 64, offset: 64)
!2410 = !DIDerivedType(tag: DW_TAG_member, name: "ranges", scope: !2402, file: !31, line: 122, baseType: !2411)
!2411 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2405, elements: !1733)
!2412 = !DIDerivedType(tag: DW_TAG_member, name: "zone_device_data", scope: !2346, file: !757, line: 162, baseType: !114, size: 64, offset: 64)
!2413 = !DIDerivedType(tag: DW_TAG_member, name: "callback_head", scope: !761, file: !757, line: 176, baseType: !390, size: 128, align: 64)
!2414 = !DIDerivedType(tag: DW_TAG_member, scope: !756, file: !757, line: 179, baseType: !2415, size: 32, offset: 384)
!2415 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !756, file: !757, line: 179, size: 32, elements: !2416)
!2416 = !{!2417, !2418, !2419, !2420}
!2417 = !DIDerivedType(tag: DW_TAG_member, name: "_mapcount", scope: !2415, file: !757, line: 184, baseType: !781, size: 32)
!2418 = !DIDerivedType(tag: DW_TAG_member, name: "page_type", scope: !2415, file: !757, line: 192, baseType: !7, size: 32)
!2419 = !DIDerivedType(tag: DW_TAG_member, name: "active", scope: !2415, file: !757, line: 194, baseType: !7, size: 32)
!2420 = !DIDerivedType(tag: DW_TAG_member, name: "units", scope: !2415, file: !757, line: 195, baseType: !169, size: 32)
!2421 = !DIDerivedType(tag: DW_TAG_member, name: "_refcount", scope: !756, file: !757, line: 199, baseType: !781, size: 32, offset: 416)
!2422 = !DIDerivedType(tag: DW_TAG_member, name: "nr_cached_objects", scope: !691, file: !44, line: 1964, baseType: !2423, size: 64, offset: 1344)
!2423 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2424, size: 64)
!2424 = !DISubroutineType(types: !2425)
!2425 = !{!564, !628, !2426}
!2426 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2427, size: 64)
!2427 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "shrink_control", file: !2428, line: 12, size: 256, elements: !2429)
!2428 = !DIFile(filename: "./include/linux/shrinker.h", directory: "/home/lizy2001/genbc/linux")
!2429 = !{!2430, !2431, !2432, !2433, !2434}
!2430 = !DIDerivedType(tag: DW_TAG_member, name: "gfp_mask", scope: !2427, file: !2428, line: 13, baseType: !112, size: 32)
!2431 = !DIDerivedType(tag: DW_TAG_member, name: "nid", scope: !2427, file: !2428, line: 16, baseType: !169, size: 32, offset: 32)
!2432 = !DIDerivedType(tag: DW_TAG_member, name: "nr_to_scan", scope: !2427, file: !2428, line: 23, baseType: !205, size: 64, offset: 64)
!2433 = !DIDerivedType(tag: DW_TAG_member, name: "nr_scanned", scope: !2427, file: !2428, line: 30, baseType: !205, size: 64, offset: 128)
!2434 = !DIDerivedType(tag: DW_TAG_member, name: "memcg", scope: !2427, file: !2428, line: 33, baseType: !2435, size: 64, offset: 192)
!2435 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2436, size: 64)
!2436 = !DICompositeType(tag: DW_TAG_structure_type, name: "mem_cgroup", file: !757, line: 27, flags: DIFlagFwdDecl)
!2437 = !DIDerivedType(tag: DW_TAG_member, name: "free_cached_objects", scope: !691, file: !44, line: 1966, baseType: !2423, size: 64, offset: 1408)
!2438 = !DIDerivedType(tag: DW_TAG_member, name: "dq_op", scope: !629, file: !44, line: 1424, baseType: !2439, size: 64, offset: 448)
!2439 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2440, size: 64)
!2440 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2441)
!2441 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dquot_operations", file: !38, line: 322, size: 704, elements: !2442)
!2442 = !{!2443, !2489, !2493, !2497, !2498, !2499, !2500, !2501, !2506, !2511, !2515}
!2443 = !DIDerivedType(tag: DW_TAG_member, name: "write_dquot", scope: !2441, file: !38, line: 323, baseType: !2444, size: 64)
!2444 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2445, size: 64)
!2445 = !DISubroutineType(types: !2446)
!2446 = !{!169, !2447}
!2447 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2448, size: 64)
!2448 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dquot", file: !38, line: 294, size: 1600, elements: !2449)
!2449 = !{!2450, !2451, !2452, !2453, !2454, !2455, !2456, !2457, !2458, !2474, !2475, !2476}
!2450 = !DIDerivedType(tag: DW_TAG_member, name: "dq_hash", scope: !2448, file: !38, line: 295, baseType: !671, size: 128)
!2451 = !DIDerivedType(tag: DW_TAG_member, name: "dq_inuse", scope: !2448, file: !38, line: 296, baseType: !119, size: 128, offset: 128)
!2452 = !DIDerivedType(tag: DW_TAG_member, name: "dq_free", scope: !2448, file: !38, line: 297, baseType: !119, size: 128, offset: 256)
!2453 = !DIDerivedType(tag: DW_TAG_member, name: "dq_dirty", scope: !2448, file: !38, line: 298, baseType: !119, size: 128, offset: 384)
!2454 = !DIDerivedType(tag: DW_TAG_member, name: "dq_lock", scope: !2448, file: !38, line: 299, baseType: !343, size: 192, offset: 512)
!2455 = !DIDerivedType(tag: DW_TAG_member, name: "dq_dqb_lock", scope: !2448, file: !38, line: 300, baseType: !357, offset: 704)
!2456 = !DIDerivedType(tag: DW_TAG_member, name: "dq_count", scope: !2448, file: !38, line: 301, baseType: !781, size: 32, offset: 704)
!2457 = !DIDerivedType(tag: DW_TAG_member, name: "dq_sb", scope: !2448, file: !38, line: 302, baseType: !628, size: 64, offset: 768)
!2458 = !DIDerivedType(tag: DW_TAG_member, name: "dq_id", scope: !2448, file: !38, line: 303, baseType: !2459, size: 64, offset: 832)
!2459 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kqid", file: !38, line: 68, size: 64, elements: !2460)
!2460 = !{!2461, !2473}
!2461 = !DIDerivedType(tag: DW_TAG_member, scope: !2459, file: !38, line: 69, baseType: !2462, size: 32)
!2462 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2459, file: !38, line: 69, size: 32, elements: !2463)
!2463 = !{!2464, !2465, !2466}
!2464 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !2462, file: !38, line: 70, baseType: !457, size: 32)
!2465 = !DIDerivedType(tag: DW_TAG_member, name: "gid", scope: !2462, file: !38, line: 71, baseType: !466, size: 32)
!2466 = !DIDerivedType(tag: DW_TAG_member, name: "projid", scope: !2462, file: !38, line: 72, baseType: !2467, size: 32)
!2467 = !DIDerivedType(tag: DW_TAG_typedef, name: "kprojid_t", file: !2468, line: 24, baseType: !2469)
!2468 = !DIFile(filename: "./include/linux/projid.h", directory: "/home/lizy2001/genbc/linux")
!2469 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2468, line: 22, size: 32, elements: !2470)
!2470 = !{!2471}
!2471 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !2469, file: !2468, line: 23, baseType: !2472, size: 32)
!2472 = !DIDerivedType(tag: DW_TAG_typedef, name: "projid_t", file: !2468, line: 20, baseType: !463)
!2473 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2459, file: !38, line: 74, baseType: !37, size: 32, offset: 32)
!2474 = !DIDerivedType(tag: DW_TAG_member, name: "dq_off", scope: !2448, file: !38, line: 304, baseType: !555, size: 64, offset: 896)
!2475 = !DIDerivedType(tag: DW_TAG_member, name: "dq_flags", scope: !2448, file: !38, line: 305, baseType: !205, size: 64, offset: 960)
!2476 = !DIDerivedType(tag: DW_TAG_member, name: "dq_dqb", scope: !2448, file: !38, line: 306, baseType: !2477, size: 576, offset: 1024)
!2477 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mem_dqblk", file: !38, line: 205, size: 576, elements: !2478)
!2478 = !{!2479, !2481, !2482, !2483, !2484, !2485, !2486, !2487, !2488}
!2479 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_bhardlimit", scope: !2477, file: !38, line: 206, baseType: !2480, size: 64)
!2480 = !DIDerivedType(tag: DW_TAG_typedef, name: "qsize_t", file: !38, line: 66, baseType: !355)
!2481 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_bsoftlimit", scope: !2477, file: !38, line: 207, baseType: !2480, size: 64, offset: 64)
!2482 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_curspace", scope: !2477, file: !38, line: 208, baseType: !2480, size: 64, offset: 128)
!2483 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_rsvspace", scope: !2477, file: !38, line: 209, baseType: !2480, size: 64, offset: 192)
!2484 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_ihardlimit", scope: !2477, file: !38, line: 210, baseType: !2480, size: 64, offset: 256)
!2485 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_isoftlimit", scope: !2477, file: !38, line: 211, baseType: !2480, size: 64, offset: 320)
!2486 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_curinodes", scope: !2477, file: !38, line: 212, baseType: !2480, size: 64, offset: 384)
!2487 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_btime", scope: !2477, file: !38, line: 213, baseType: !562, size: 64, offset: 448)
!2488 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_itime", scope: !2477, file: !38, line: 214, baseType: !562, size: 64, offset: 512)
!2489 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_dquot", scope: !2441, file: !38, line: 324, baseType: !2490, size: 64, offset: 64)
!2490 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2491, size: 64)
!2491 = !DISubroutineType(types: !2492)
!2492 = !{!2447, !628, !169}
!2493 = !DIDerivedType(tag: DW_TAG_member, name: "destroy_dquot", scope: !2441, file: !38, line: 325, baseType: !2494, size: 64, offset: 128)
!2494 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2495, size: 64)
!2495 = !DISubroutineType(types: !2496)
!2496 = !{null, !2447}
!2497 = !DIDerivedType(tag: DW_TAG_member, name: "acquire_dquot", scope: !2441, file: !38, line: 326, baseType: !2444, size: 64, offset: 192)
!2498 = !DIDerivedType(tag: DW_TAG_member, name: "release_dquot", scope: !2441, file: !38, line: 327, baseType: !2444, size: 64, offset: 256)
!2499 = !DIDerivedType(tag: DW_TAG_member, name: "mark_dirty", scope: !2441, file: !38, line: 328, baseType: !2444, size: 64, offset: 320)
!2500 = !DIDerivedType(tag: DW_TAG_member, name: "write_info", scope: !2441, file: !38, line: 329, baseType: !719, size: 64, offset: 384)
!2501 = !DIDerivedType(tag: DW_TAG_member, name: "get_reserved_space", scope: !2441, file: !38, line: 332, baseType: !2502, size: 64, offset: 448)
!2502 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2503, size: 64)
!2503 = !DISubroutineType(types: !2504)
!2504 = !{!2505, !450}
!2505 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2480, size: 64)
!2506 = !DIDerivedType(tag: DW_TAG_member, name: "get_projid", scope: !2441, file: !38, line: 333, baseType: !2507, size: 64, offset: 512)
!2507 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2508, size: 64)
!2508 = !DISubroutineType(types: !2509)
!2509 = !{!169, !450, !2510}
!2510 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2467, size: 64)
!2511 = !DIDerivedType(tag: DW_TAG_member, name: "get_inode_usage", scope: !2441, file: !38, line: 335, baseType: !2512, size: 64, offset: 576)
!2512 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2513, size: 64)
!2513 = !DISubroutineType(types: !2514)
!2514 = !{!169, !450, !2505}
!2515 = !DIDerivedType(tag: DW_TAG_member, name: "get_next_id", scope: !2441, file: !38, line: 337, baseType: !2516, size: 64, offset: 640)
!2516 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2517, size: 64)
!2517 = !DISubroutineType(types: !2518)
!2518 = !{!169, !628, !2519}
!2519 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2459, size: 64)
!2520 = !DIDerivedType(tag: DW_TAG_member, name: "s_qcop", scope: !629, file: !44, line: 1425, baseType: !2521, size: 64, offset: 512)
!2521 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2522, size: 64)
!2522 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2523)
!2523 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quotactl_ops", file: !38, line: 428, size: 704, elements: !2524)
!2524 = !{!2525, !2529, !2530, !2534, !2535, !2536, !2551, !2574, !2578, !2579, !2602}
!2525 = !DIDerivedType(tag: DW_TAG_member, name: "quota_on", scope: !2523, file: !38, line: 429, baseType: !2526, size: 64)
!2526 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2527, size: 64)
!2527 = !DISubroutineType(types: !2528)
!2528 = !{!169, !628, !169, !169, !572}
!2529 = !DIDerivedType(tag: DW_TAG_member, name: "quota_off", scope: !2523, file: !38, line: 430, baseType: !719, size: 64, offset: 64)
!2530 = !DIDerivedType(tag: DW_TAG_member, name: "quota_enable", scope: !2523, file: !38, line: 431, baseType: !2531, size: 64, offset: 128)
!2531 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2532, size: 64)
!2532 = !DISubroutineType(types: !2533)
!2533 = !{!169, !628, !7}
!2534 = !DIDerivedType(tag: DW_TAG_member, name: "quota_disable", scope: !2523, file: !38, line: 432, baseType: !2531, size: 64, offset: 192)
!2535 = !DIDerivedType(tag: DW_TAG_member, name: "quota_sync", scope: !2523, file: !38, line: 433, baseType: !719, size: 64, offset: 256)
!2536 = !DIDerivedType(tag: DW_TAG_member, name: "set_info", scope: !2523, file: !38, line: 434, baseType: !2537, size: 64, offset: 320)
!2537 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2538, size: 64)
!2538 = !DISubroutineType(types: !2539)
!2539 = !{!169, !628, !169, !2540}
!2540 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2541, size: 64)
!2541 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "qc_info", file: !38, line: 415, size: 256, elements: !2542)
!2542 = !{!2543, !2544, !2545, !2546, !2547, !2548, !2549, !2550}
!2543 = !DIDerivedType(tag: DW_TAG_member, name: "i_fieldmask", scope: !2541, file: !38, line: 416, baseType: !169, size: 32)
!2544 = !DIDerivedType(tag: DW_TAG_member, name: "i_flags", scope: !2541, file: !38, line: 417, baseType: !7, size: 32, offset: 32)
!2545 = !DIDerivedType(tag: DW_TAG_member, name: "i_spc_timelimit", scope: !2541, file: !38, line: 418, baseType: !7, size: 32, offset: 64)
!2546 = !DIDerivedType(tag: DW_TAG_member, name: "i_ino_timelimit", scope: !2541, file: !38, line: 420, baseType: !7, size: 32, offset: 96)
!2547 = !DIDerivedType(tag: DW_TAG_member, name: "i_rt_spc_timelimit", scope: !2541, file: !38, line: 421, baseType: !7, size: 32, offset: 128)
!2548 = !DIDerivedType(tag: DW_TAG_member, name: "i_spc_warnlimit", scope: !2541, file: !38, line: 422, baseType: !7, size: 32, offset: 160)
!2549 = !DIDerivedType(tag: DW_TAG_member, name: "i_ino_warnlimit", scope: !2541, file: !38, line: 423, baseType: !7, size: 32, offset: 192)
!2550 = !DIDerivedType(tag: DW_TAG_member, name: "i_rt_spc_warnlimit", scope: !2541, file: !38, line: 424, baseType: !7, size: 32, offset: 224)
!2551 = !DIDerivedType(tag: DW_TAG_member, name: "get_dqblk", scope: !2523, file: !38, line: 435, baseType: !2552, size: 64, offset: 384)
!2552 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2553, size: 64)
!2553 = !DISubroutineType(types: !2554)
!2554 = !{!169, !628, !2459, !2555}
!2555 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2556, size: 64)
!2556 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "qc_dqblk", file: !38, line: 343, size: 960, elements: !2557)
!2557 = !{!2558, !2559, !2560, !2561, !2562, !2563, !2564, !2565, !2566, !2567, !2568, !2569, !2570, !2571, !2572, !2573}
!2558 = !DIDerivedType(tag: DW_TAG_member, name: "d_fieldmask", scope: !2556, file: !38, line: 344, baseType: !169, size: 32)
!2559 = !DIDerivedType(tag: DW_TAG_member, name: "d_spc_hardlimit", scope: !2556, file: !38, line: 345, baseType: !443, size: 64, offset: 64)
!2560 = !DIDerivedType(tag: DW_TAG_member, name: "d_spc_softlimit", scope: !2556, file: !38, line: 346, baseType: !443, size: 64, offset: 128)
!2561 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino_hardlimit", scope: !2556, file: !38, line: 347, baseType: !443, size: 64, offset: 192)
!2562 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino_softlimit", scope: !2556, file: !38, line: 348, baseType: !443, size: 64, offset: 256)
!2563 = !DIDerivedType(tag: DW_TAG_member, name: "d_space", scope: !2556, file: !38, line: 349, baseType: !443, size: 64, offset: 320)
!2564 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino_count", scope: !2556, file: !38, line: 350, baseType: !443, size: 64, offset: 384)
!2565 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino_timer", scope: !2556, file: !38, line: 351, baseType: !353, size: 64, offset: 448)
!2566 = !DIDerivedType(tag: DW_TAG_member, name: "d_spc_timer", scope: !2556, file: !38, line: 353, baseType: !353, size: 64, offset: 512)
!2567 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino_warns", scope: !2556, file: !38, line: 354, baseType: !169, size: 32, offset: 576)
!2568 = !DIDerivedType(tag: DW_TAG_member, name: "d_spc_warns", scope: !2556, file: !38, line: 355, baseType: !169, size: 32, offset: 608)
!2569 = !DIDerivedType(tag: DW_TAG_member, name: "d_rt_spc_hardlimit", scope: !2556, file: !38, line: 356, baseType: !443, size: 64, offset: 640)
!2570 = !DIDerivedType(tag: DW_TAG_member, name: "d_rt_spc_softlimit", scope: !2556, file: !38, line: 357, baseType: !443, size: 64, offset: 704)
!2571 = !DIDerivedType(tag: DW_TAG_member, name: "d_rt_space", scope: !2556, file: !38, line: 358, baseType: !443, size: 64, offset: 768)
!2572 = !DIDerivedType(tag: DW_TAG_member, name: "d_rt_spc_timer", scope: !2556, file: !38, line: 359, baseType: !353, size: 64, offset: 832)
!2573 = !DIDerivedType(tag: DW_TAG_member, name: "d_rt_spc_warns", scope: !2556, file: !38, line: 360, baseType: !169, size: 32, offset: 896)
!2574 = !DIDerivedType(tag: DW_TAG_member, name: "get_nextdqblk", scope: !2523, file: !38, line: 436, baseType: !2575, size: 64, offset: 448)
!2575 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2576, size: 64)
!2576 = !DISubroutineType(types: !2577)
!2577 = !{!169, !628, !2519, !2555}
!2578 = !DIDerivedType(tag: DW_TAG_member, name: "set_dqblk", scope: !2523, file: !38, line: 438, baseType: !2552, size: 64, offset: 512)
!2579 = !DIDerivedType(tag: DW_TAG_member, name: "get_state", scope: !2523, file: !38, line: 439, baseType: !2580, size: 64, offset: 576)
!2580 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2581, size: 64)
!2581 = !DISubroutineType(types: !2582)
!2582 = !{!169, !628, !2583}
!2583 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2584, size: 64)
!2584 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "qc_state", file: !38, line: 409, size: 1408, elements: !2585)
!2585 = !{!2586, !2587}
!2586 = !DIDerivedType(tag: DW_TAG_member, name: "s_incoredqs", scope: !2584, file: !38, line: 410, baseType: !7, size: 32)
!2587 = !DIDerivedType(tag: DW_TAG_member, name: "s_state", scope: !2584, file: !38, line: 411, baseType: !2588, size: 1344, offset: 64)
!2588 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2589, size: 1344, elements: !683)
!2589 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "qc_type_state", file: !38, line: 395, size: 448, elements: !2590)
!2590 = !{!2591, !2592, !2593, !2594, !2595, !2596, !2597, !2598, !2599, !2601}
!2591 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2589, file: !38, line: 396, baseType: !7, size: 32)
!2592 = !DIDerivedType(tag: DW_TAG_member, name: "spc_timelimit", scope: !2589, file: !38, line: 397, baseType: !7, size: 32, offset: 32)
!2593 = !DIDerivedType(tag: DW_TAG_member, name: "ino_timelimit", scope: !2589, file: !38, line: 399, baseType: !7, size: 32, offset: 64)
!2594 = !DIDerivedType(tag: DW_TAG_member, name: "rt_spc_timelimit", scope: !2589, file: !38, line: 400, baseType: !7, size: 32, offset: 96)
!2595 = !DIDerivedType(tag: DW_TAG_member, name: "spc_warnlimit", scope: !2589, file: !38, line: 401, baseType: !7, size: 32, offset: 128)
!2596 = !DIDerivedType(tag: DW_TAG_member, name: "ino_warnlimit", scope: !2589, file: !38, line: 402, baseType: !7, size: 32, offset: 160)
!2597 = !DIDerivedType(tag: DW_TAG_member, name: "rt_spc_warnlimit", scope: !2589, file: !38, line: 403, baseType: !7, size: 32, offset: 192)
!2598 = !DIDerivedType(tag: DW_TAG_member, name: "ino", scope: !2589, file: !38, line: 404, baseType: !445, size: 64, offset: 256)
!2599 = !DIDerivedType(tag: DW_TAG_member, name: "blocks", scope: !2589, file: !38, line: 405, baseType: !2600, size: 64, offset: 320)
!2600 = !DIDerivedType(tag: DW_TAG_typedef, name: "blkcnt_t", file: !113, line: 126, baseType: !443)
!2601 = !DIDerivedType(tag: DW_TAG_member, name: "nextents", scope: !2589, file: !38, line: 406, baseType: !2600, size: 64, offset: 384)
!2602 = !DIDerivedType(tag: DW_TAG_member, name: "rm_xquota", scope: !2523, file: !38, line: 440, baseType: !2531, size: 64, offset: 640)
!2603 = !DIDerivedType(tag: DW_TAG_member, name: "s_export_op", scope: !629, file: !44, line: 1426, baseType: !2604, size: 64, offset: 576)
!2604 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2605, size: 64)
!2605 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2606)
!2606 = !DICompositeType(tag: DW_TAG_structure_type, name: "export_operations", file: !44, line: 49, flags: DIFlagFwdDecl)
!2607 = !DIDerivedType(tag: DW_TAG_member, name: "s_flags", scope: !629, file: !44, line: 1427, baseType: !205, size: 64, offset: 640)
!2608 = !DIDerivedType(tag: DW_TAG_member, name: "s_iflags", scope: !629, file: !44, line: 1428, baseType: !205, size: 64, offset: 704)
!2609 = !DIDerivedType(tag: DW_TAG_member, name: "s_magic", scope: !629, file: !44, line: 1429, baseType: !205, size: 64, offset: 768)
!2610 = !DIDerivedType(tag: DW_TAG_member, name: "s_root", scope: !629, file: !44, line: 1430, baseType: !407, size: 64, offset: 832)
!2611 = !DIDerivedType(tag: DW_TAG_member, name: "s_umount", scope: !629, file: !44, line: 1431, baseType: !801, size: 256, offset: 896)
!2612 = !DIDerivedType(tag: DW_TAG_member, name: "s_count", scope: !629, file: !44, line: 1432, baseType: !169, size: 32, offset: 1152)
!2613 = !DIDerivedType(tag: DW_TAG_member, name: "s_active", scope: !629, file: !44, line: 1433, baseType: !781, size: 32, offset: 1184)
!2614 = !DIDerivedType(tag: DW_TAG_member, name: "s_xattr", scope: !629, file: !44, line: 1437, baseType: !2615, size: 64, offset: 1216)
!2615 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2616, size: 64)
!2616 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2617, size: 64)
!2617 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2618)
!2618 = !DICompositeType(tag: DW_TAG_structure_type, name: "xattr_handler", file: !44, line: 1437, flags: DIFlagFwdDecl)
!2619 = !DIDerivedType(tag: DW_TAG_member, name: "s_roots", scope: !629, file: !44, line: 1449, baseType: !2620, size: 64, offset: 1280)
!2620 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hlist_bl_head", file: !423, line: 34, size: 64, elements: !2621)
!2621 = !{!2622}
!2622 = !DIDerivedType(tag: DW_TAG_member, name: "first", scope: !2620, file: !423, line: 35, baseType: !426, size: 64)
!2623 = !DIDerivedType(tag: DW_TAG_member, name: "s_mounts", scope: !629, file: !44, line: 1450, baseType: !119, size: 128, offset: 1344)
!2624 = !DIDerivedType(tag: DW_TAG_member, name: "s_bdev", scope: !629, file: !44, line: 1451, baseType: !2625, size: 64, offset: 1472)
!2625 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2626, size: 64)
!2626 = !DICompositeType(tag: DW_TAG_structure_type, name: "block_device", file: !44, line: 699, flags: DIFlagFwdDecl)
!2627 = !DIDerivedType(tag: DW_TAG_member, name: "s_bdi", scope: !629, file: !44, line: 1452, baseType: !1937, size: 64, offset: 1536)
!2628 = !DIDerivedType(tag: DW_TAG_member, name: "s_mtd", scope: !629, file: !44, line: 1453, baseType: !2629, size: 64, offset: 1600)
!2629 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2630, size: 64)
!2630 = !DICompositeType(tag: DW_TAG_structure_type, name: "mtd_info", file: !44, line: 1453, flags: DIFlagFwdDecl)
!2631 = !DIDerivedType(tag: DW_TAG_member, name: "s_instances", scope: !629, file: !44, line: 1454, baseType: !671, size: 128, offset: 1664)
!2632 = !DIDerivedType(tag: DW_TAG_member, name: "s_quota_types", scope: !629, file: !44, line: 1455, baseType: !7, size: 32, offset: 1792)
!2633 = !DIDerivedType(tag: DW_TAG_member, name: "s_dquot", scope: !629, file: !44, line: 1456, baseType: !2634, size: 2432, offset: 1856)
!2634 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quota_info", file: !38, line: 518, size: 2432, elements: !2635)
!2635 = !{!2636, !2637, !2638, !2640, !2672}
!2636 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2634, file: !38, line: 519, baseType: !7, size: 32)
!2637 = !DIDerivedType(tag: DW_TAG_member, name: "dqio_sem", scope: !2634, file: !38, line: 520, baseType: !801, size: 256, offset: 64)
!2638 = !DIDerivedType(tag: DW_TAG_member, name: "files", scope: !2634, file: !38, line: 521, baseType: !2639, size: 192, offset: 320)
!2639 = !DICompositeType(tag: DW_TAG_array_type, baseType: !450, size: 192, elements: !683)
!2640 = !DIDerivedType(tag: DW_TAG_member, name: "info", scope: !2634, file: !38, line: 522, baseType: !2641, size: 1728, offset: 512)
!2641 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2642, size: 1728, elements: !683)
!2642 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mem_dqinfo", file: !38, line: 222, size: 576, elements: !2643)
!2643 = !{!2644, !2664, !2665, !2666, !2667, !2668, !2669, !2670, !2671}
!2644 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_format", scope: !2642, file: !38, line: 223, baseType: !2645, size: 64)
!2645 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2646, size: 64)
!2646 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quota_format_type", file: !38, line: 443, size: 256, elements: !2647)
!2647 = !{!2648, !2649, !2662, !2663}
!2648 = !DIDerivedType(tag: DW_TAG_member, name: "qf_fmt_id", scope: !2646, file: !38, line: 444, baseType: !169, size: 32)
!2649 = !DIDerivedType(tag: DW_TAG_member, name: "qf_ops", scope: !2646, file: !38, line: 445, baseType: !2650, size: 64, offset: 64)
!2650 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2651, size: 64)
!2651 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2652)
!2652 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quota_format_ops", file: !38, line: 310, size: 512, elements: !2653)
!2653 = !{!2654, !2655, !2656, !2657, !2658, !2659, !2660, !2661}
!2654 = !DIDerivedType(tag: DW_TAG_member, name: "check_quota_file", scope: !2652, file: !38, line: 311, baseType: !719, size: 64)
!2655 = !DIDerivedType(tag: DW_TAG_member, name: "read_file_info", scope: !2652, file: !38, line: 312, baseType: !719, size: 64, offset: 64)
!2656 = !DIDerivedType(tag: DW_TAG_member, name: "write_file_info", scope: !2652, file: !38, line: 313, baseType: !719, size: 64, offset: 128)
!2657 = !DIDerivedType(tag: DW_TAG_member, name: "free_file_info", scope: !2652, file: !38, line: 314, baseType: !719, size: 64, offset: 192)
!2658 = !DIDerivedType(tag: DW_TAG_member, name: "read_dqblk", scope: !2652, file: !38, line: 315, baseType: !2444, size: 64, offset: 256)
!2659 = !DIDerivedType(tag: DW_TAG_member, name: "commit_dqblk", scope: !2652, file: !38, line: 316, baseType: !2444, size: 64, offset: 320)
!2660 = !DIDerivedType(tag: DW_TAG_member, name: "release_dqblk", scope: !2652, file: !38, line: 317, baseType: !2444, size: 64, offset: 384)
!2661 = !DIDerivedType(tag: DW_TAG_member, name: "get_next_id", scope: !2652, file: !38, line: 318, baseType: !2516, size: 64, offset: 448)
!2662 = !DIDerivedType(tag: DW_TAG_member, name: "qf_owner", scope: !2646, file: !38, line: 446, baseType: !662, size: 64, offset: 128)
!2663 = !DIDerivedType(tag: DW_TAG_member, name: "qf_next", scope: !2646, file: !38, line: 447, baseType: !2645, size: 64, offset: 192)
!2664 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_fmt_id", scope: !2642, file: !38, line: 224, baseType: !169, size: 32, offset: 64)
!2665 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_dirty_list", scope: !2642, file: !38, line: 226, baseType: !119, size: 128, offset: 128)
!2666 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_flags", scope: !2642, file: !38, line: 227, baseType: !205, size: 64, offset: 256)
!2667 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_bgrace", scope: !2642, file: !38, line: 228, baseType: !7, size: 32, offset: 320)
!2668 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_igrace", scope: !2642, file: !38, line: 229, baseType: !7, size: 32, offset: 352)
!2669 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_max_spc_limit", scope: !2642, file: !38, line: 230, baseType: !2480, size: 64, offset: 384)
!2670 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_max_ino_limit", scope: !2642, file: !38, line: 231, baseType: !2480, size: 64, offset: 448)
!2671 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_priv", scope: !2642, file: !38, line: 232, baseType: !114, size: 64, offset: 512)
!2672 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !2634, file: !38, line: 523, baseType: !2673, size: 192, offset: 2240)
!2673 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2650, size: 192, elements: !683)
!2674 = !DIDerivedType(tag: DW_TAG_member, name: "s_writers", scope: !629, file: !44, line: 1458, baseType: !2675, size: 2112, offset: 4288)
!2675 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sb_writers", file: !44, line: 1410, size: 2112, elements: !2676)
!2676 = !{!2677, !2678, !2679}
!2677 = !DIDerivedType(tag: DW_TAG_member, name: "frozen", scope: !2675, file: !44, line: 1411, baseType: !169, size: 32)
!2678 = !DIDerivedType(tag: DW_TAG_member, name: "wait_unfrozen", scope: !2675, file: !44, line: 1412, baseType: !1493, size: 128, offset: 64)
!2679 = !DIDerivedType(tag: DW_TAG_member, name: "rw_sem", scope: !2675, file: !44, line: 1413, baseType: !2680, size: 1920, offset: 192)
!2680 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2681, size: 1920, elements: !683)
!2681 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "percpu_rw_semaphore", file: !2682, line: 12, size: 640, elements: !2683)
!2682 = !DIFile(filename: "./include/linux/percpu-rwsem.h", directory: "/home/lizy2001/genbc/linux")
!2683 = !{!2684, !2692, !2693, !2698, !2699}
!2684 = !DIDerivedType(tag: DW_TAG_member, name: "rss", scope: !2681, file: !2682, line: 13, baseType: !2685, size: 320)
!2685 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rcu_sync", file: !2686, line: 17, size: 320, elements: !2687)
!2686 = !DIFile(filename: "./include/linux/rcu_sync.h", directory: "/home/lizy2001/genbc/linux")
!2687 = !{!2688, !2689, !2690, !2691}
!2688 = !DIDerivedType(tag: DW_TAG_member, name: "gp_state", scope: !2685, file: !2686, line: 18, baseType: !169, size: 32)
!2689 = !DIDerivedType(tag: DW_TAG_member, name: "gp_count", scope: !2685, file: !2686, line: 19, baseType: !169, size: 32, offset: 32)
!2690 = !DIDerivedType(tag: DW_TAG_member, name: "gp_wait", scope: !2685, file: !2686, line: 20, baseType: !1493, size: 128, offset: 64)
!2691 = !DIDerivedType(tag: DW_TAG_member, name: "cb_head", scope: !2685, file: !2686, line: 22, baseType: !390, size: 128, align: 64, offset: 192)
!2692 = !DIDerivedType(tag: DW_TAG_member, name: "read_count", scope: !2681, file: !2682, line: 14, baseType: !244, size: 64, offset: 320)
!2693 = !DIDerivedType(tag: DW_TAG_member, name: "writer", scope: !2681, file: !2682, line: 15, baseType: !2694, size: 64, offset: 384)
!2694 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rcuwait", file: !2695, line: 16, size: 64, elements: !2696)
!2695 = !DIFile(filename: "./include/linux/rcuwait.h", directory: "/home/lizy2001/genbc/linux")
!2696 = !{!2697}
!2697 = !DIDerivedType(tag: DW_TAG_member, name: "task", scope: !2694, file: !2695, line: 17, baseType: !1233, size: 64)
!2698 = !DIDerivedType(tag: DW_TAG_member, name: "waiters", scope: !2681, file: !2682, line: 16, baseType: !1493, size: 128, offset: 448)
!2699 = !DIDerivedType(tag: DW_TAG_member, name: "block", scope: !2681, file: !2682, line: 17, baseType: !781, size: 32, offset: 576)
!2700 = !DIDerivedType(tag: DW_TAG_member, name: "s_fs_info", scope: !629, file: !44, line: 1465, baseType: !114, size: 64, offset: 6400)
!2701 = !DIDerivedType(tag: DW_TAG_member, name: "s_time_gran", scope: !629, file: !44, line: 1468, baseType: !440, size: 32, offset: 6464)
!2702 = !DIDerivedType(tag: DW_TAG_member, name: "s_time_min", scope: !629, file: !44, line: 1470, baseType: !562, size: 64, offset: 6528)
!2703 = !DIDerivedType(tag: DW_TAG_member, name: "s_time_max", scope: !629, file: !44, line: 1471, baseType: !562, size: 64, offset: 6592)
!2704 = !DIDerivedType(tag: DW_TAG_member, name: "s_fsnotify_mask", scope: !629, file: !44, line: 1473, baseType: !239, size: 32, offset: 6656)
!2705 = !DIDerivedType(tag: DW_TAG_member, name: "s_fsnotify_marks", scope: !629, file: !44, line: 1474, baseType: !2706, size: 64, offset: 6720)
!2706 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2707, size: 64)
!2707 = !DICompositeType(tag: DW_TAG_structure_type, name: "fsnotify_mark_connector", file: !44, line: 603, flags: DIFlagFwdDecl)
!2708 = !DIDerivedType(tag: DW_TAG_member, name: "s_id", scope: !629, file: !44, line: 1477, baseType: !2709, size: 256, offset: 6784)
!2709 = !DICompositeType(tag: DW_TAG_array_type, baseType: !192, size: 256, elements: !242)
!2710 = !DIDerivedType(tag: DW_TAG_member, name: "s_uuid", scope: !629, file: !44, line: 1478, baseType: !2711, size: 128, offset: 7040)
!2711 = !DIDerivedType(tag: DW_TAG_typedef, name: "uuid_t", file: !2712, line: 18, baseType: !2713)
!2712 = !DIFile(filename: "./include/linux/uuid.h", directory: "/home/lizy2001/genbc/linux")
!2713 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2712, line: 16, size: 128, elements: !2714)
!2714 = !{!2715}
!2715 = !DIDerivedType(tag: DW_TAG_member, name: "b", scope: !2713, file: !2712, line: 17, baseType: !2716, size: 128)
!2716 = !DICompositeType(tag: DW_TAG_array_type, baseType: !152, size: 128, elements: !1745)
!2717 = !DIDerivedType(tag: DW_TAG_member, name: "s_max_links", scope: !629, file: !44, line: 1480, baseType: !7, size: 32, offset: 7168)
!2718 = !DIDerivedType(tag: DW_TAG_member, name: "s_mode", scope: !629, file: !44, line: 1481, baseType: !2719, size: 32, offset: 7200)
!2719 = !DIDerivedType(tag: DW_TAG_typedef, name: "fmode_t", file: !113, line: 150, baseType: !7)
!2720 = !DIDerivedType(tag: DW_TAG_member, name: "s_vfs_rename_mutex", scope: !629, file: !44, line: 1487, baseType: !343, size: 192, offset: 7232)
!2721 = !DIDerivedType(tag: DW_TAG_member, name: "s_subtype", scope: !629, file: !44, line: 1493, baseType: !190, size: 64, offset: 7424)
!2722 = !DIDerivedType(tag: DW_TAG_member, name: "s_d_op", scope: !629, file: !44, line: 1495, baseType: !2723, size: 64, offset: 7488)
!2723 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2724, size: 64)
!2724 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2725)
!2725 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dentry_operations", file: !405, line: 135, size: 1024, align: 512, elements: !2726)
!2726 = !{!2727, !2731, !2732, !2739, !2745, !2749, !2753, !2757, !2758, !2762, !2766, !2771, !2775}
!2727 = !DIDerivedType(tag: DW_TAG_member, name: "d_revalidate", scope: !2725, file: !405, line: 136, baseType: !2728, size: 64)
!2728 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2729, size: 64)
!2729 = !DISubroutineType(types: !2730)
!2730 = !{!169, !407, !7}
!2731 = !DIDerivedType(tag: DW_TAG_member, name: "d_weak_revalidate", scope: !2725, file: !405, line: 137, baseType: !2728, size: 64, offset: 64)
!2732 = !DIDerivedType(tag: DW_TAG_member, name: "d_hash", scope: !2725, file: !405, line: 138, baseType: !2733, size: 64, offset: 128)
!2733 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2734, size: 64)
!2734 = !DISubroutineType(types: !2735)
!2735 = !{!169, !2736, !2738}
!2736 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2737, size: 64)
!2737 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !408)
!2738 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !431, size: 64)
!2739 = !DIDerivedType(tag: DW_TAG_member, name: "d_compare", scope: !2725, file: !405, line: 139, baseType: !2740, size: 64, offset: 192)
!2740 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2741, size: 64)
!2741 = !DISubroutineType(types: !2742)
!2742 = !{!169, !2736, !7, !190, !2743}
!2743 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2744, size: 64)
!2744 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !431)
!2745 = !DIDerivedType(tag: DW_TAG_member, name: "d_delete", scope: !2725, file: !405, line: 141, baseType: !2746, size: 64, offset: 256)
!2746 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2747, size: 64)
!2747 = !DISubroutineType(types: !2748)
!2748 = !{!169, !2736}
!2749 = !DIDerivedType(tag: DW_TAG_member, name: "d_init", scope: !2725, file: !405, line: 142, baseType: !2750, size: 64, offset: 320)
!2750 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2751, size: 64)
!2751 = !DISubroutineType(types: !2752)
!2752 = !{!169, !407}
!2753 = !DIDerivedType(tag: DW_TAG_member, name: "d_release", scope: !2725, file: !405, line: 143, baseType: !2754, size: 64, offset: 384)
!2754 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2755, size: 64)
!2755 = !DISubroutineType(types: !2756)
!2756 = !{null, !407}
!2757 = !DIDerivedType(tag: DW_TAG_member, name: "d_prune", scope: !2725, file: !405, line: 144, baseType: !2754, size: 64, offset: 448)
!2758 = !DIDerivedType(tag: DW_TAG_member, name: "d_iput", scope: !2725, file: !405, line: 145, baseType: !2759, size: 64, offset: 512)
!2759 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2760, size: 64)
!2760 = !DISubroutineType(types: !2761)
!2761 = !{null, !407, !450}
!2762 = !DIDerivedType(tag: DW_TAG_member, name: "d_dname", scope: !2725, file: !405, line: 146, baseType: !2763, size: 64, offset: 576)
!2763 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2764, size: 64)
!2764 = !DISubroutineType(types: !2765)
!2765 = !{!509, !407, !509, !169}
!2766 = !DIDerivedType(tag: DW_TAG_member, name: "d_automount", scope: !2725, file: !405, line: 147, baseType: !2767, size: 64, offset: 640)
!2767 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2768, size: 64)
!2768 = !DISubroutineType(types: !2769)
!2769 = !{!403, !2770}
!2770 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !399, size: 64)
!2771 = !DIDerivedType(tag: DW_TAG_member, name: "d_manage", scope: !2725, file: !405, line: 148, baseType: !2772, size: 64, offset: 704)
!2772 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2773, size: 64)
!2773 = !DISubroutineType(types: !2774)
!2774 = !{!169, !572, !514}
!2775 = !DIDerivedType(tag: DW_TAG_member, name: "d_real", scope: !2725, file: !405, line: 149, baseType: !2776, size: 64, offset: 768)
!2776 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2777, size: 64)
!2777 = !DISubroutineType(types: !2778)
!2778 = !{!407, !407, !2779}
!2779 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2780, size: 64)
!2780 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !451)
!2781 = !DIDerivedType(tag: DW_TAG_member, name: "cleancache_poolid", scope: !629, file: !44, line: 1500, baseType: !169, size: 32, offset: 7552)
!2782 = !DIDerivedType(tag: DW_TAG_member, name: "s_shrink", scope: !629, file: !44, line: 1502, baseType: !2783, size: 448, offset: 7616)
!2783 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "shrinker", file: !2428, line: 60, size: 448, elements: !2784)
!2784 = !{!2785, !2790, !2791, !2792, !2793, !2794, !2795}
!2785 = !DIDerivedType(tag: DW_TAG_member, name: "count_objects", scope: !2783, file: !2428, line: 61, baseType: !2786, size: 64)
!2786 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2787, size: 64)
!2787 = !DISubroutineType(types: !2788)
!2788 = !{!205, !2789, !2426}
!2789 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2783, size: 64)
!2790 = !DIDerivedType(tag: DW_TAG_member, name: "scan_objects", scope: !2783, file: !2428, line: 63, baseType: !2786, size: 64, offset: 64)
!2791 = !DIDerivedType(tag: DW_TAG_member, name: "batch", scope: !2783, file: !2428, line: 66, baseType: !564, size: 64, offset: 128)
!2792 = !DIDerivedType(tag: DW_TAG_member, name: "seeks", scope: !2783, file: !2428, line: 67, baseType: !169, size: 32, offset: 192)
!2793 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2783, file: !2428, line: 68, baseType: !7, size: 32, offset: 224)
!2794 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !2783, file: !2428, line: 71, baseType: !119, size: 128, offset: 256)
!2795 = !DIDerivedType(tag: DW_TAG_member, name: "nr_deferred", scope: !2783, file: !2428, line: 77, baseType: !2796, size: 64, offset: 384)
!2796 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !347, size: 64)
!2797 = !DIDerivedType(tag: DW_TAG_member, name: "s_remove_count", scope: !629, file: !44, line: 1505, baseType: !347, size: 64, offset: 8064)
!2798 = !DIDerivedType(tag: DW_TAG_member, name: "s_fsnotify_inode_refs", scope: !629, file: !44, line: 1508, baseType: !347, size: 64, offset: 8128)
!2799 = !DIDerivedType(tag: DW_TAG_member, name: "s_readonly_remount", scope: !629, file: !44, line: 1511, baseType: !169, size: 32, offset: 8192)
!2800 = !DIDerivedType(tag: DW_TAG_member, name: "s_wb_err", scope: !629, file: !44, line: 1514, baseType: !934, size: 32, offset: 8224)
!2801 = !DIDerivedType(tag: DW_TAG_member, name: "s_dio_done_wq", scope: !629, file: !44, line: 1517, baseType: !2802, size: 64, offset: 8256)
!2802 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2803, size: 64)
!2803 = !DICompositeType(tag: DW_TAG_structure_type, name: "workqueue_struct", file: !1972, line: 18, flags: DIFlagFwdDecl)
!2804 = !DIDerivedType(tag: DW_TAG_member, name: "s_pins", scope: !629, file: !44, line: 1518, baseType: !667, size: 64, offset: 8320)
!2805 = !DIDerivedType(tag: DW_TAG_member, name: "s_user_ns", scope: !629, file: !44, line: 1525, baseType: !1723, size: 64, offset: 8384)
!2806 = !DIDerivedType(tag: DW_TAG_member, name: "s_dentry_lru", scope: !629, file: !44, line: 1532, baseType: !2807, size: 64, offset: 8448)
!2807 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "list_lru", file: !2808, line: 52, size: 64, elements: !2809)
!2808 = !DIFile(filename: "./include/linux/list_lru.h", directory: "/home/lizy2001/genbc/linux")
!2809 = !{!2810}
!2810 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2807, file: !2808, line: 53, baseType: !2811, size: 64)
!2811 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2812, size: 64)
!2812 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "list_lru_node", file: !2808, line: 40, size: 256, elements: !2813)
!2813 = !{!2814, !2815, !2820}
!2814 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2812, file: !2808, line: 42, baseType: !357)
!2815 = !DIDerivedType(tag: DW_TAG_member, name: "lru", scope: !2812, file: !2808, line: 44, baseType: !2816, size: 192)
!2816 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "list_lru_one", file: !2808, line: 28, size: 192, elements: !2817)
!2817 = !{!2818, !2819}
!2818 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !2816, file: !2808, line: 29, baseType: !119, size: 128)
!2819 = !DIDerivedType(tag: DW_TAG_member, name: "nr_items", scope: !2816, file: !2808, line: 31, baseType: !564, size: 64, offset: 128)
!2820 = !DIDerivedType(tag: DW_TAG_member, name: "nr_items", scope: !2812, file: !2808, line: 49, baseType: !564, size: 64, offset: 192)
!2821 = !DIDerivedType(tag: DW_TAG_member, name: "s_inode_lru", scope: !629, file: !44, line: 1533, baseType: !2807, size: 64, offset: 8512)
!2822 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !629, file: !44, line: 1534, baseType: !390, size: 128, align: 64, offset: 8576)
!2823 = !DIDerivedType(tag: DW_TAG_member, name: "destroy_work", scope: !629, file: !44, line: 1535, baseType: !1971, size: 256, offset: 8704)
!2824 = !DIDerivedType(tag: DW_TAG_member, name: "s_sync_lock", scope: !629, file: !44, line: 1537, baseType: !343, size: 192, offset: 8960)
!2825 = !DIDerivedType(tag: DW_TAG_member, name: "s_stack_depth", scope: !629, file: !44, line: 1542, baseType: !169, size: 32, offset: 9152)
!2826 = !DIDerivedType(tag: DW_TAG_member, name: "s_inode_list_lock", scope: !629, file: !44, line: 1545, baseType: !357, offset: 9184)
!2827 = !DIDerivedType(tag: DW_TAG_member, name: "s_inodes", scope: !629, file: !44, line: 1546, baseType: !119, size: 128, offset: 9216)
!2828 = !DIDerivedType(tag: DW_TAG_member, name: "s_inode_wblist_lock", scope: !629, file: !44, line: 1548, baseType: !357, offset: 9344)
!2829 = !DIDerivedType(tag: DW_TAG_member, name: "s_inodes_wb", scope: !629, file: !44, line: 1549, baseType: !119, size: 128, offset: 9344)
!2830 = !DIDerivedType(tag: DW_TAG_member, name: "i_mapping", scope: !451, file: !44, line: 624, baseType: !768, size: 64, offset: 256)
!2831 = !DIDerivedType(tag: DW_TAG_member, name: "i_ino", scope: !451, file: !44, line: 631, baseType: !205, size: 64, offset: 320)
!2832 = !DIDerivedType(tag: DW_TAG_member, scope: !451, file: !44, line: 639, baseType: !2833, size: 32, offset: 384)
!2833 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !451, file: !44, line: 639, size: 32, elements: !2834)
!2834 = !{!2835, !2837}
!2835 = !DIDerivedType(tag: DW_TAG_member, name: "i_nlink", scope: !2833, file: !44, line: 640, baseType: !2836, size: 32)
!2836 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7)
!2837 = !DIDerivedType(tag: DW_TAG_member, name: "__i_nlink", scope: !2833, file: !44, line: 641, baseType: !7, size: 32)
!2838 = !DIDerivedType(tag: DW_TAG_member, name: "i_rdev", scope: !451, file: !44, line: 643, baseType: !537, size: 32, offset: 416)
!2839 = !DIDerivedType(tag: DW_TAG_member, name: "i_size", scope: !451, file: !44, line: 644, baseType: !555, size: 64, offset: 448)
!2840 = !DIDerivedType(tag: DW_TAG_member, name: "i_atime", scope: !451, file: !44, line: 645, baseType: !558, size: 128, offset: 512)
!2841 = !DIDerivedType(tag: DW_TAG_member, name: "i_mtime", scope: !451, file: !44, line: 646, baseType: !558, size: 128, offset: 640)
!2842 = !DIDerivedType(tag: DW_TAG_member, name: "i_ctime", scope: !451, file: !44, line: 647, baseType: !558, size: 128, offset: 768)
!2843 = !DIDerivedType(tag: DW_TAG_member, name: "i_lock", scope: !451, file: !44, line: 648, baseType: !357, offset: 896)
!2844 = !DIDerivedType(tag: DW_TAG_member, name: "i_bytes", scope: !451, file: !44, line: 649, baseType: !150, size: 16, offset: 896)
!2845 = !DIDerivedType(tag: DW_TAG_member, name: "i_blkbits", scope: !451, file: !44, line: 650, baseType: !1369, size: 8, offset: 912)
!2846 = !DIDerivedType(tag: DW_TAG_member, name: "i_write_hint", scope: !451, file: !44, line: 651, baseType: !1369, size: 8, offset: 920)
!2847 = !DIDerivedType(tag: DW_TAG_member, name: "i_blocks", scope: !451, file: !44, line: 652, baseType: !2600, size: 64, offset: 960)
!2848 = !DIDerivedType(tag: DW_TAG_member, name: "i_state", scope: !451, file: !44, line: 659, baseType: !205, size: 64, offset: 1024)
!2849 = !DIDerivedType(tag: DW_TAG_member, name: "i_rwsem", scope: !451, file: !44, line: 660, baseType: !801, size: 256, offset: 1088)
!2850 = !DIDerivedType(tag: DW_TAG_member, name: "dirtied_when", scope: !451, file: !44, line: 662, baseType: !205, size: 64, offset: 1344)
!2851 = !DIDerivedType(tag: DW_TAG_member, name: "dirtied_time_when", scope: !451, file: !44, line: 663, baseType: !205, size: 64, offset: 1408)
!2852 = !DIDerivedType(tag: DW_TAG_member, name: "i_hash", scope: !451, file: !44, line: 665, baseType: !671, size: 128, offset: 1472)
!2853 = !DIDerivedType(tag: DW_TAG_member, name: "i_io_list", scope: !451, file: !44, line: 666, baseType: !119, size: 128, offset: 1600)
!2854 = !DIDerivedType(tag: DW_TAG_member, name: "i_lru", scope: !451, file: !44, line: 675, baseType: !119, size: 128, offset: 1728)
!2855 = !DIDerivedType(tag: DW_TAG_member, name: "i_sb_list", scope: !451, file: !44, line: 676, baseType: !119, size: 128, offset: 1856)
!2856 = !DIDerivedType(tag: DW_TAG_member, name: "i_wb_list", scope: !451, file: !44, line: 677, baseType: !119, size: 128, offset: 1984)
!2857 = !DIDerivedType(tag: DW_TAG_member, scope: !451, file: !44, line: 678, baseType: !2858, size: 128, offset: 2112)
!2858 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !451, file: !44, line: 678, size: 128, elements: !2859)
!2859 = !{!2860, !2861}
!2860 = !DIDerivedType(tag: DW_TAG_member, name: "i_dentry", scope: !2858, file: !44, line: 679, baseType: !667, size: 64)
!2861 = !DIDerivedType(tag: DW_TAG_member, name: "i_rcu", scope: !2858, file: !44, line: 680, baseType: !390, size: 128, align: 64)
!2862 = !DIDerivedType(tag: DW_TAG_member, name: "i_version", scope: !451, file: !44, line: 682, baseType: !349, size: 64, offset: 2240)
!2863 = !DIDerivedType(tag: DW_TAG_member, name: "i_sequence", scope: !451, file: !44, line: 683, baseType: !349, size: 64, offset: 2304)
!2864 = !DIDerivedType(tag: DW_TAG_member, name: "i_count", scope: !451, file: !44, line: 684, baseType: !781, size: 32, offset: 2368)
!2865 = !DIDerivedType(tag: DW_TAG_member, name: "i_dio_count", scope: !451, file: !44, line: 685, baseType: !781, size: 32, offset: 2400)
!2866 = !DIDerivedType(tag: DW_TAG_member, name: "i_writecount", scope: !451, file: !44, line: 686, baseType: !781, size: 32, offset: 2432)
!2867 = !DIDerivedType(tag: DW_TAG_member, name: "i_readcount", scope: !451, file: !44, line: 688, baseType: !781, size: 32, offset: 2464)
!2868 = !DIDerivedType(tag: DW_TAG_member, scope: !451, file: !44, line: 690, baseType: !2869, size: 64, offset: 2496)
!2869 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !451, file: !44, line: 690, size: 64, elements: !2870)
!2870 = !{!2871, !3094}
!2871 = !DIDerivedType(tag: DW_TAG_member, name: "i_fop", scope: !2869, file: !44, line: 691, baseType: !2872, size: 64)
!2872 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2873, size: 64)
!2873 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2874)
!2874 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_operations", file: !44, line: 1822, size: 2048, elements: !2875)
!2875 = !{!2876, !2877, !2881, !2886, !2890, !2891, !2892, !2896, !2909, !2910, !2918, !2922, !2923, !2927, !2928, !2932, !2937, !2938, !2942, !2946, !3054, !3058, !3059, !3063, !3064, !3068, !3072, !3077, !3081, !3085, !3089, !3093}
!2876 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !2874, file: !44, line: 1823, baseType: !662, size: 64)
!2877 = !DIDerivedType(tag: DW_TAG_member, name: "llseek", scope: !2874, file: !44, line: 1824, baseType: !2878, size: 64, offset: 64)
!2878 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2879, size: 64)
!2879 = !DISubroutineType(types: !2880)
!2880 = !{!555, !377, !555, !169}
!2881 = !DIDerivedType(tag: DW_TAG_member, name: "read", scope: !2874, file: !44, line: 1825, baseType: !2882, size: 64, offset: 128)
!2882 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2883, size: 64)
!2883 = !DISubroutineType(types: !2884)
!2884 = !{!601, !377, !509, !604, !2885}
!2885 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !555, size: 64)
!2886 = !DIDerivedType(tag: DW_TAG_member, name: "write", scope: !2874, file: !44, line: 1826, baseType: !2887, size: 64, offset: 192)
!2887 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2888, size: 64)
!2888 = !DISubroutineType(types: !2889)
!2889 = !{!601, !377, !190, !604, !2885}
!2890 = !DIDerivedType(tag: DW_TAG_member, name: "read_iter", scope: !2874, file: !44, line: 1827, baseType: !871, size: 64, offset: 256)
!2891 = !DIDerivedType(tag: DW_TAG_member, name: "write_iter", scope: !2874, file: !44, line: 1828, baseType: !871, size: 64, offset: 320)
!2892 = !DIDerivedType(tag: DW_TAG_member, name: "iopoll", scope: !2874, file: !44, line: 1829, baseType: !2893, size: 64, offset: 384)
!2893 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2894, size: 64)
!2894 = !DISubroutineType(types: !2895)
!2895 = !{!169, !874, !514}
!2896 = !DIDerivedType(tag: DW_TAG_member, name: "iterate", scope: !2874, file: !44, line: 1830, baseType: !2897, size: 64, offset: 448)
!2897 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2898, size: 64)
!2898 = !DISubroutineType(types: !2899)
!2899 = !{!169, !377, !2900}
!2900 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2901, size: 64)
!2901 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dir_context", file: !44, line: 1776, size: 128, elements: !2902)
!2902 = !{!2903, !2908}
!2903 = !DIDerivedType(tag: DW_TAG_member, name: "actor", scope: !2901, file: !44, line: 1777, baseType: !2904, size: 64)
!2904 = !DIDerivedType(tag: DW_TAG_typedef, name: "filldir_t", file: !44, line: 1773, baseType: !2905)
!2905 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2906, size: 64)
!2906 = !DISubroutineType(types: !2907)
!2907 = !{!169, !2900, !190, !169, !555, !443, !7}
!2908 = !DIDerivedType(tag: DW_TAG_member, name: "pos", scope: !2901, file: !44, line: 1778, baseType: !555, size: 64, offset: 64)
!2909 = !DIDerivedType(tag: DW_TAG_member, name: "iterate_shared", scope: !2874, file: !44, line: 1831, baseType: !2897, size: 64, offset: 512)
!2910 = !DIDerivedType(tag: DW_TAG_member, name: "poll", scope: !2874, file: !44, line: 1832, baseType: !2911, size: 64, offset: 576)
!2911 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2912, size: 64)
!2912 = !DISubroutineType(types: !2913)
!2913 = !{!2914, !377, !2916}
!2914 = !DIDerivedType(tag: DW_TAG_typedef, name: "__poll_t", file: !2915, line: 52, baseType: !7)
!2915 = !DIFile(filename: "./include/uapi/linux/types.h", directory: "/home/lizy2001/genbc/linux")
!2916 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2917, size: 64)
!2917 = !DICompositeType(tag: DW_TAG_structure_type, name: "poll_table_struct", file: !648, line: 27, flags: DIFlagFwdDecl)
!2918 = !DIDerivedType(tag: DW_TAG_member, name: "unlocked_ioctl", scope: !2874, file: !44, line: 1833, baseType: !2919, size: 64, offset: 640)
!2919 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2920, size: 64)
!2920 = !DISubroutineType(types: !2921)
!2921 = !{!564, !377, !7, !205}
!2922 = !DIDerivedType(tag: DW_TAG_member, name: "compat_ioctl", scope: !2874, file: !44, line: 1834, baseType: !2919, size: 64, offset: 704)
!2923 = !DIDerivedType(tag: DW_TAG_member, name: "mmap", scope: !2874, file: !44, line: 1835, baseType: !2924, size: 64, offset: 768)
!2924 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2925, size: 64)
!2925 = !DISubroutineType(types: !2926)
!2926 = !{!169, !377, !1006}
!2927 = !DIDerivedType(tag: DW_TAG_member, name: "mmap_supported_flags", scope: !2874, file: !44, line: 1836, baseType: !205, size: 64, offset: 832)
!2928 = !DIDerivedType(tag: DW_TAG_member, name: "open", scope: !2874, file: !44, line: 1837, baseType: !2929, size: 64, offset: 896)
!2929 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2930, size: 64)
!2930 = !DISubroutineType(types: !2931)
!2931 = !{!169, !450, !377}
!2932 = !DIDerivedType(tag: DW_TAG_member, name: "flush", scope: !2874, file: !44, line: 1838, baseType: !2933, size: 64, offset: 960)
!2933 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2934, size: 64)
!2934 = !DISubroutineType(types: !2935)
!2935 = !{!169, !377, !2936}
!2936 = !DIDerivedType(tag: DW_TAG_typedef, name: "fl_owner_t", file: !44, line: 1007, baseType: !114)
!2937 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !2874, file: !44, line: 1839, baseType: !2929, size: 64, offset: 1024)
!2938 = !DIDerivedType(tag: DW_TAG_member, name: "fsync", scope: !2874, file: !44, line: 1840, baseType: !2939, size: 64, offset: 1088)
!2939 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2940, size: 64)
!2940 = !DISubroutineType(types: !2941)
!2941 = !{!169, !377, !555, !555, !169}
!2942 = !DIDerivedType(tag: DW_TAG_member, name: "fasync", scope: !2874, file: !44, line: 1841, baseType: !2943, size: 64, offset: 1152)
!2943 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2944, size: 64)
!2944 = !DISubroutineType(types: !2945)
!2945 = !{!169, !169, !377, !169}
!2946 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2874, file: !44, line: 1842, baseType: !2947, size: 64, offset: 1216)
!2947 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2948, size: 64)
!2948 = !DISubroutineType(types: !2949)
!2949 = !{!169, !377, !169, !2950}
!2950 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2951, size: 64)
!2951 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_lock", file: !44, line: 1062, size: 1664, elements: !2952)
!2952 = !{!2953, !2954, !2955, !2956, !2957, !2958, !2959, !2960, !2961, !2962, !2963, !2964, !2965, !2966, !2967, !2984, !2985, !2986, !2999, !3030}
!2953 = !DIDerivedType(tag: DW_TAG_member, name: "fl_blocker", scope: !2951, file: !44, line: 1063, baseType: !2950, size: 64)
!2954 = !DIDerivedType(tag: DW_TAG_member, name: "fl_list", scope: !2951, file: !44, line: 1064, baseType: !119, size: 128, offset: 64)
!2955 = !DIDerivedType(tag: DW_TAG_member, name: "fl_link", scope: !2951, file: !44, line: 1065, baseType: !671, size: 128, offset: 192)
!2956 = !DIDerivedType(tag: DW_TAG_member, name: "fl_blocked_requests", scope: !2951, file: !44, line: 1066, baseType: !119, size: 128, offset: 320)
!2957 = !DIDerivedType(tag: DW_TAG_member, name: "fl_blocked_member", scope: !2951, file: !44, line: 1069, baseType: !119, size: 128, offset: 448)
!2958 = !DIDerivedType(tag: DW_TAG_member, name: "fl_owner", scope: !2951, file: !44, line: 1072, baseType: !2936, size: 64, offset: 576)
!2959 = !DIDerivedType(tag: DW_TAG_member, name: "fl_flags", scope: !2951, file: !44, line: 1073, baseType: !7, size: 32, offset: 640)
!2960 = !DIDerivedType(tag: DW_TAG_member, name: "fl_type", scope: !2951, file: !44, line: 1074, baseType: !153, size: 8, offset: 672)
!2961 = !DIDerivedType(tag: DW_TAG_member, name: "fl_pid", scope: !2951, file: !44, line: 1075, baseType: !7, size: 32, offset: 704)
!2962 = !DIDerivedType(tag: DW_TAG_member, name: "fl_link_cpu", scope: !2951, file: !44, line: 1076, baseType: !169, size: 32, offset: 736)
!2963 = !DIDerivedType(tag: DW_TAG_member, name: "fl_wait", scope: !2951, file: !44, line: 1077, baseType: !1493, size: 128, offset: 768)
!2964 = !DIDerivedType(tag: DW_TAG_member, name: "fl_file", scope: !2951, file: !44, line: 1078, baseType: !377, size: 64, offset: 896)
!2965 = !DIDerivedType(tag: DW_TAG_member, name: "fl_start", scope: !2951, file: !44, line: 1079, baseType: !555, size: 64, offset: 960)
!2966 = !DIDerivedType(tag: DW_TAG_member, name: "fl_end", scope: !2951, file: !44, line: 1080, baseType: !555, size: 64, offset: 1024)
!2967 = !DIDerivedType(tag: DW_TAG_member, name: "fl_fasync", scope: !2951, file: !44, line: 1082, baseType: !2968, size: 64, offset: 1088)
!2968 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2969, size: 64)
!2969 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fasync_struct", file: !44, line: 1314, size: 320, elements: !2970)
!2970 = !{!2971, !2979, !2980, !2981, !2982, !2983}
!2971 = !DIDerivedType(tag: DW_TAG_member, name: "fa_lock", scope: !2969, file: !44, line: 1315, baseType: !2972)
!2972 = !DIDerivedType(tag: DW_TAG_typedef, name: "rwlock_t", file: !2973, line: 20, baseType: !2974)
!2973 = !DIFile(filename: "./include/linux/rwlock_types.h", directory: "/home/lizy2001/genbc/linux")
!2974 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2973, line: 11, elements: !2975)
!2975 = !{!2976}
!2976 = !DIDerivedType(tag: DW_TAG_member, name: "raw_lock", scope: !2974, file: !2973, line: 12, baseType: !2977)
!2977 = !DIDerivedType(tag: DW_TAG_typedef, name: "arch_rwlock_t", file: !369, line: 33, baseType: !2978)
!2978 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !369, line: 31, elements: !371)
!2979 = !DIDerivedType(tag: DW_TAG_member, name: "magic", scope: !2969, file: !44, line: 1316, baseType: !169, size: 32)
!2980 = !DIDerivedType(tag: DW_TAG_member, name: "fa_fd", scope: !2969, file: !44, line: 1317, baseType: !169, size: 32, offset: 32)
!2981 = !DIDerivedType(tag: DW_TAG_member, name: "fa_next", scope: !2969, file: !44, line: 1318, baseType: !2968, size: 64, offset: 64)
!2982 = !DIDerivedType(tag: DW_TAG_member, name: "fa_file", scope: !2969, file: !44, line: 1319, baseType: !377, size: 64, offset: 128)
!2983 = !DIDerivedType(tag: DW_TAG_member, name: "fa_rcu", scope: !2969, file: !44, line: 1320, baseType: !390, size: 128, align: 64, offset: 192)
!2984 = !DIDerivedType(tag: DW_TAG_member, name: "fl_break_time", scope: !2951, file: !44, line: 1084, baseType: !205, size: 64, offset: 1152)
!2985 = !DIDerivedType(tag: DW_TAG_member, name: "fl_downgrade_time", scope: !2951, file: !44, line: 1085, baseType: !205, size: 64, offset: 1216)
!2986 = !DIDerivedType(tag: DW_TAG_member, name: "fl_ops", scope: !2951, file: !44, line: 1087, baseType: !2987, size: 64, offset: 1280)
!2987 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2988, size: 64)
!2988 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2989)
!2989 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_lock_operations", file: !44, line: 1011, size: 128, elements: !2990)
!2990 = !{!2991, !2995}
!2991 = !DIDerivedType(tag: DW_TAG_member, name: "fl_copy_lock", scope: !2989, file: !44, line: 1012, baseType: !2992, size: 64)
!2992 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2993, size: 64)
!2993 = !DISubroutineType(types: !2994)
!2994 = !{null, !2950, !2950}
!2995 = !DIDerivedType(tag: DW_TAG_member, name: "fl_release_private", scope: !2989, file: !44, line: 1013, baseType: !2996, size: 64, offset: 64)
!2996 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2997, size: 64)
!2997 = !DISubroutineType(types: !2998)
!2998 = !{null, !2950}
!2999 = !DIDerivedType(tag: DW_TAG_member, name: "fl_lmops", scope: !2951, file: !44, line: 1088, baseType: !3000, size: 64, offset: 1344)
!3000 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3001, size: 64)
!3001 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3002)
!3002 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lock_manager_operations", file: !44, line: 1016, size: 512, elements: !3003)
!3003 = !{!3004, !3008, !3012, !3013, !3017, !3021, !3025, !3029}
!3004 = !DIDerivedType(tag: DW_TAG_member, name: "lm_get_owner", scope: !3002, file: !44, line: 1017, baseType: !3005, size: 64)
!3005 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3006, size: 64)
!3006 = !DISubroutineType(types: !3007)
!3007 = !{!2936, !2936}
!3008 = !DIDerivedType(tag: DW_TAG_member, name: "lm_put_owner", scope: !3002, file: !44, line: 1018, baseType: !3009, size: 64, offset: 64)
!3009 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3010, size: 64)
!3010 = !DISubroutineType(types: !3011)
!3011 = !{null, !2936}
!3012 = !DIDerivedType(tag: DW_TAG_member, name: "lm_notify", scope: !3002, file: !44, line: 1019, baseType: !2996, size: 64, offset: 128)
!3013 = !DIDerivedType(tag: DW_TAG_member, name: "lm_grant", scope: !3002, file: !44, line: 1020, baseType: !3014, size: 64, offset: 192)
!3014 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3015, size: 64)
!3015 = !DISubroutineType(types: !3016)
!3016 = !{!169, !2950, !169}
!3017 = !DIDerivedType(tag: DW_TAG_member, name: "lm_break", scope: !3002, file: !44, line: 1021, baseType: !3018, size: 64, offset: 256)
!3018 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3019, size: 64)
!3019 = !DISubroutineType(types: !3020)
!3020 = !{!514, !2950}
!3021 = !DIDerivedType(tag: DW_TAG_member, name: "lm_change", scope: !3002, file: !44, line: 1022, baseType: !3022, size: 64, offset: 320)
!3022 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3023, size: 64)
!3023 = !DISubroutineType(types: !3024)
!3024 = !{!169, !2950, !169, !122}
!3025 = !DIDerivedType(tag: DW_TAG_member, name: "lm_setup", scope: !3002, file: !44, line: 1023, baseType: !3026, size: 64, offset: 384)
!3026 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3027, size: 64)
!3027 = !DISubroutineType(types: !3028)
!3028 = !{null, !2950, !848}
!3029 = !DIDerivedType(tag: DW_TAG_member, name: "lm_breaker_owns_lease", scope: !3002, file: !44, line: 1024, baseType: !3018, size: 64, offset: 448)
!3030 = !DIDerivedType(tag: DW_TAG_member, name: "fl_u", scope: !2951, file: !44, line: 1097, baseType: !3031, size: 256, offset: 1408)
!3031 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2951, file: !44, line: 1089, size: 256, elements: !3032)
!3032 = !{!3033, !3042, !3048}
!3033 = !DIDerivedType(tag: DW_TAG_member, name: "nfs_fl", scope: !3031, file: !44, line: 1090, baseType: !3034, size: 256)
!3034 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "nfs_lock_info", file: !3035, line: 10, size: 256, elements: !3036)
!3035 = !DIFile(filename: "./include/linux/nfs_fs_i.h", directory: "/home/lizy2001/genbc/linux")
!3036 = !{!3037, !3038, !3041}
!3037 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !3034, file: !3035, line: 11, baseType: !440, size: 32)
!3038 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !3034, file: !3035, line: 12, baseType: !3039, size: 64, offset: 64)
!3039 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3040, size: 64)
!3040 = !DICompositeType(tag: DW_TAG_structure_type, name: "nlm_lockowner", file: !3035, line: 5, flags: DIFlagFwdDecl)
!3041 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !3034, file: !3035, line: 13, baseType: !119, size: 128, offset: 128)
!3042 = !DIDerivedType(tag: DW_TAG_member, name: "nfs4_fl", scope: !3031, file: !44, line: 1091, baseType: !3043, size: 64)
!3043 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "nfs4_lock_info", file: !3035, line: 17, size: 64, elements: !3044)
!3044 = !{!3045}
!3045 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !3043, file: !3035, line: 18, baseType: !3046, size: 64)
!3046 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3047, size: 64)
!3047 = !DICompositeType(tag: DW_TAG_structure_type, name: "nfs4_lock_state", file: !3035, line: 16, flags: DIFlagFwdDecl)
!3048 = !DIDerivedType(tag: DW_TAG_member, name: "afs", scope: !3031, file: !44, line: 1096, baseType: !3049, size: 192)
!3049 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3031, file: !44, line: 1092, size: 192, elements: !3050)
!3050 = !{!3051, !3052, !3053}
!3051 = !DIDerivedType(tag: DW_TAG_member, name: "link", scope: !3049, file: !44, line: 1093, baseType: !119, size: 128)
!3052 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !3049, file: !44, line: 1094, baseType: !169, size: 32, offset: 128)
!3053 = !DIDerivedType(tag: DW_TAG_member, name: "debug_id", scope: !3049, file: !44, line: 1095, baseType: !7, size: 32, offset: 160)
!3054 = !DIDerivedType(tag: DW_TAG_member, name: "sendpage", scope: !2874, file: !44, line: 1843, baseType: !3055, size: 64, offset: 1280)
!3055 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3056, size: 64)
!3056 = !DISubroutineType(types: !3057)
!3057 = !{!601, !377, !755, !169, !604, !2885, !169}
!3058 = !DIDerivedType(tag: DW_TAG_member, name: "get_unmapped_area", scope: !2874, file: !44, line: 1844, baseType: !1126, size: 64, offset: 1344)
!3059 = !DIDerivedType(tag: DW_TAG_member, name: "check_flags", scope: !2874, file: !44, line: 1845, baseType: !3060, size: 64, offset: 1408)
!3060 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3061, size: 64)
!3061 = !DISubroutineType(types: !3062)
!3062 = !{!169, !169}
!3063 = !DIDerivedType(tag: DW_TAG_member, name: "flock", scope: !2874, file: !44, line: 1846, baseType: !2947, size: 64, offset: 1472)
!3064 = !DIDerivedType(tag: DW_TAG_member, name: "splice_write", scope: !2874, file: !44, line: 1847, baseType: !3065, size: 64, offset: 1536)
!3065 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3066, size: 64)
!3066 = !DISubroutineType(types: !3067)
!3067 = !{!601, !2112, !377, !2885, !604, !7}
!3068 = !DIDerivedType(tag: DW_TAG_member, name: "splice_read", scope: !2874, file: !44, line: 1848, baseType: !3069, size: 64, offset: 1600)
!3069 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3070, size: 64)
!3070 = !DISubroutineType(types: !3071)
!3071 = !{!601, !377, !2885, !2112, !604, !7}
!3072 = !DIDerivedType(tag: DW_TAG_member, name: "setlease", scope: !2874, file: !44, line: 1849, baseType: !3073, size: 64, offset: 1664)
!3073 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3074, size: 64)
!3074 = !DISubroutineType(types: !3075)
!3075 = !{!169, !377, !564, !3076, !848}
!3076 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2950, size: 64)
!3077 = !DIDerivedType(tag: DW_TAG_member, name: "fallocate", scope: !2874, file: !44, line: 1850, baseType: !3078, size: 64, offset: 1728)
!3078 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3079, size: 64)
!3079 = !DISubroutineType(types: !3080)
!3080 = !{!564, !377, !169, !555, !555}
!3081 = !DIDerivedType(tag: DW_TAG_member, name: "show_fdinfo", scope: !2874, file: !44, line: 1852, baseType: !3082, size: 64, offset: 1792)
!3082 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3083, size: 64)
!3083 = !DISubroutineType(types: !3084)
!3084 = !{null, !745, !377}
!3085 = !DIDerivedType(tag: DW_TAG_member, name: "copy_file_range", scope: !2874, file: !44, line: 1856, baseType: !3086, size: 64, offset: 1856)
!3086 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3087, size: 64)
!3087 = !DISubroutineType(types: !3088)
!3088 = !{!601, !377, !555, !377, !555, !604, !7}
!3089 = !DIDerivedType(tag: DW_TAG_member, name: "remap_file_range", scope: !2874, file: !44, line: 1858, baseType: !3090, size: 64, offset: 1920)
!3090 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3091, size: 64)
!3091 = !DISubroutineType(types: !3092)
!3092 = !{!555, !377, !555, !377, !555, !555, !7}
!3093 = !DIDerivedType(tag: DW_TAG_member, name: "fadvise", scope: !2874, file: !44, line: 1861, baseType: !2939, size: 64, offset: 1984)
!3094 = !DIDerivedType(tag: DW_TAG_member, name: "free_inode", scope: !2869, file: !44, line: 692, baseType: !698, size: 64)
!3095 = !DIDerivedType(tag: DW_TAG_member, name: "i_flctx", scope: !451, file: !44, line: 694, baseType: !3096, size: 64, offset: 2560)
!3096 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3097, size: 64)
!3097 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_lock_context", file: !44, line: 1100, size: 384, elements: !3098)
!3098 = !{!3099, !3100, !3101, !3102}
!3099 = !DIDerivedType(tag: DW_TAG_member, name: "flc_lock", scope: !3097, file: !44, line: 1101, baseType: !357)
!3100 = !DIDerivedType(tag: DW_TAG_member, name: "flc_flock", scope: !3097, file: !44, line: 1102, baseType: !119, size: 128)
!3101 = !DIDerivedType(tag: DW_TAG_member, name: "flc_posix", scope: !3097, file: !44, line: 1103, baseType: !119, size: 128, offset: 128)
!3102 = !DIDerivedType(tag: DW_TAG_member, name: "flc_lease", scope: !3097, file: !44, line: 1104, baseType: !119, size: 128, offset: 256)
!3103 = !DIDerivedType(tag: DW_TAG_member, name: "i_data", scope: !451, file: !44, line: 695, baseType: !769, size: 1216, align: 64, offset: 2624)
!3104 = !DIDerivedType(tag: DW_TAG_member, name: "i_devices", scope: !451, file: !44, line: 696, baseType: !119, size: 128, offset: 3840)
!3105 = !DIDerivedType(tag: DW_TAG_member, scope: !451, file: !44, line: 697, baseType: !3106, size: 64, offset: 3968)
!3106 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !451, file: !44, line: 697, size: 64, elements: !3107)
!3107 = !{!3108, !3109, !3110, !3113, !3114}
!3108 = !DIDerivedType(tag: DW_TAG_member, name: "i_pipe", scope: !3106, file: !44, line: 698, baseType: !2112, size: 64)
!3109 = !DIDerivedType(tag: DW_TAG_member, name: "i_bdev", scope: !3106, file: !44, line: 699, baseType: !2625, size: 64)
!3110 = !DIDerivedType(tag: DW_TAG_member, name: "i_cdev", scope: !3106, file: !44, line: 700, baseType: !3111, size: 64)
!3111 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3112, size: 64)
!3112 = !DICompositeType(tag: DW_TAG_structure_type, name: "cdev", file: !44, line: 700, flags: DIFlagFwdDecl)
!3113 = !DIDerivedType(tag: DW_TAG_member, name: "i_link", scope: !3106, file: !44, line: 701, baseType: !509, size: 64)
!3114 = !DIDerivedType(tag: DW_TAG_member, name: "i_dir_seq", scope: !3106, file: !44, line: 702, baseType: !7, size: 32)
!3115 = !DIDerivedType(tag: DW_TAG_member, name: "i_generation", scope: !451, file: !44, line: 705, baseType: !239, size: 32, offset: 4032)
!3116 = !DIDerivedType(tag: DW_TAG_member, name: "i_fsnotify_mask", scope: !451, file: !44, line: 708, baseType: !239, size: 32, offset: 4064)
!3117 = !DIDerivedType(tag: DW_TAG_member, name: "i_fsnotify_marks", scope: !451, file: !44, line: 709, baseType: !2706, size: 64, offset: 4096)
!3118 = !DIDerivedType(tag: DW_TAG_member, name: "i_private", scope: !451, file: !44, line: 720, baseType: !114, size: 64, offset: 4160)
!3119 = !DIDerivedType(tag: DW_TAG_member, name: "d_iname", scope: !408, file: !405, line: 98, baseType: !3120, size: 256, offset: 448)
!3120 = !DICompositeType(tag: DW_TAG_array_type, baseType: !153, size: 256, elements: !242)
!3121 = !DIDerivedType(tag: DW_TAG_member, name: "d_lockref", scope: !408, file: !405, line: 101, baseType: !3122, size: 32, offset: 704)
!3122 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lockref", file: !3123, line: 25, size: 32, elements: !3124)
!3123 = !DIFile(filename: "./include/linux/lockref.h", directory: "/home/lizy2001/genbc/linux")
!3124 = !{!3125}
!3125 = !DIDerivedType(tag: DW_TAG_member, scope: !3122, file: !3123, line: 26, baseType: !3126, size: 32)
!3126 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3122, file: !3123, line: 26, size: 32, elements: !3127)
!3127 = !{!3128}
!3128 = !DIDerivedType(tag: DW_TAG_member, scope: !3126, file: !3123, line: 30, baseType: !3129, size: 32)
!3129 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3126, file: !3123, line: 30, size: 32, elements: !3130)
!3130 = !{!3131, !3132}
!3131 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3129, file: !3123, line: 31, baseType: !357)
!3132 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !3129, file: !3123, line: 32, baseType: !169, size: 32)
!3133 = !DIDerivedType(tag: DW_TAG_member, name: "d_op", scope: !408, file: !405, line: 102, baseType: !2723, size: 64, offset: 768)
!3134 = !DIDerivedType(tag: DW_TAG_member, name: "d_sb", scope: !408, file: !405, line: 103, baseType: !628, size: 64, offset: 832)
!3135 = !DIDerivedType(tag: DW_TAG_member, name: "d_time", scope: !408, file: !405, line: 104, baseType: !205, size: 64, offset: 896)
!3136 = !DIDerivedType(tag: DW_TAG_member, name: "d_fsdata", scope: !408, file: !405, line: 105, baseType: !114, size: 64, offset: 960)
!3137 = !DIDerivedType(tag: DW_TAG_member, scope: !408, file: !405, line: 107, baseType: !3138, size: 128, offset: 1024)
!3138 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !408, file: !405, line: 107, size: 128, elements: !3139)
!3139 = !{!3140, !3141}
!3140 = !DIDerivedType(tag: DW_TAG_member, name: "d_lru", scope: !3138, file: !405, line: 108, baseType: !119, size: 128)
!3141 = !DIDerivedType(tag: DW_TAG_member, name: "d_wait", scope: !3138, file: !405, line: 109, baseType: !3142, size: 64)
!3142 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1493, size: 64)
!3143 = !DIDerivedType(tag: DW_TAG_member, name: "d_child", scope: !408, file: !405, line: 111, baseType: !119, size: 128, offset: 1152)
!3144 = !DIDerivedType(tag: DW_TAG_member, name: "d_subdirs", scope: !408, file: !405, line: 112, baseType: !119, size: 128, offset: 1280)
!3145 = !DIDerivedType(tag: DW_TAG_member, name: "d_u", scope: !408, file: !405, line: 120, baseType: !3146, size: 128, offset: 1408)
!3146 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !408, file: !405, line: 116, size: 128, elements: !3147)
!3147 = !{!3148, !3149, !3150}
!3148 = !DIDerivedType(tag: DW_TAG_member, name: "d_alias", scope: !3146, file: !405, line: 117, baseType: !671, size: 128)
!3149 = !DIDerivedType(tag: DW_TAG_member, name: "d_in_lookup_hash", scope: !3146, file: !405, line: 118, baseType: !422, size: 128)
!3150 = !DIDerivedType(tag: DW_TAG_member, name: "d_rcu", scope: !3146, file: !405, line: 119, baseType: !390, size: 128, align: 64)
!3151 = !DIDerivedType(tag: DW_TAG_member, name: "f_inode", scope: !378, file: !44, line: 922, baseType: !450, size: 64, offset: 256)
!3152 = !DIDerivedType(tag: DW_TAG_member, name: "f_op", scope: !378, file: !44, line: 923, baseType: !2872, size: 64, offset: 320)
!3153 = !DIDerivedType(tag: DW_TAG_member, name: "f_lock", scope: !378, file: !44, line: 929, baseType: !357, offset: 384)
!3154 = !DIDerivedType(tag: DW_TAG_member, name: "f_write_hint", scope: !378, file: !44, line: 930, baseType: !43, size: 32, offset: 384)
!3155 = !DIDerivedType(tag: DW_TAG_member, name: "f_count", scope: !378, file: !44, line: 931, baseType: !347, size: 64, offset: 448)
!3156 = !DIDerivedType(tag: DW_TAG_member, name: "f_flags", scope: !378, file: !44, line: 932, baseType: !7, size: 32, offset: 512)
!3157 = !DIDerivedType(tag: DW_TAG_member, name: "f_mode", scope: !378, file: !44, line: 933, baseType: !2719, size: 32, offset: 544)
!3158 = !DIDerivedType(tag: DW_TAG_member, name: "f_pos_lock", scope: !378, file: !44, line: 934, baseType: !343, size: 192, offset: 576)
!3159 = !DIDerivedType(tag: DW_TAG_member, name: "f_pos", scope: !378, file: !44, line: 935, baseType: !555, size: 64, offset: 768)
!3160 = !DIDerivedType(tag: DW_TAG_member, name: "f_owner", scope: !378, file: !44, line: 936, baseType: !3161, size: 192, offset: 832)
!3161 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fown_struct", file: !44, line: 885, size: 192, elements: !3162)
!3162 = !{!3163, !3164, !3165, !3166, !3167, !3168}
!3163 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3161, file: !44, line: 886, baseType: !2972)
!3164 = !DIDerivedType(tag: DW_TAG_member, name: "pid", scope: !3161, file: !44, line: 887, baseType: !1483, size: 64)
!3165 = !DIDerivedType(tag: DW_TAG_member, name: "pid_type", scope: !3161, file: !44, line: 888, baseType: !52, size: 32, offset: 64)
!3166 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !3161, file: !44, line: 889, baseType: !457, size: 32, offset: 96)
!3167 = !DIDerivedType(tag: DW_TAG_member, name: "euid", scope: !3161, file: !44, line: 889, baseType: !457, size: 32, offset: 128)
!3168 = !DIDerivedType(tag: DW_TAG_member, name: "signum", scope: !3161, file: !44, line: 890, baseType: !169, size: 32, offset: 160)
!3169 = !DIDerivedType(tag: DW_TAG_member, name: "f_cred", scope: !378, file: !44, line: 937, baseType: !1559, size: 64, offset: 1024)
!3170 = !DIDerivedType(tag: DW_TAG_member, name: "f_ra", scope: !378, file: !44, line: 938, baseType: !3171, size: 256, offset: 1088)
!3171 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_ra_state", file: !44, line: 896, size: 256, elements: !3172)
!3172 = !{!3173, !3174, !3175, !3176, !3177, !3178}
!3173 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !3171, file: !44, line: 897, baseType: !205, size: 64)
!3174 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !3171, file: !44, line: 898, baseType: !7, size: 32, offset: 64)
!3175 = !DIDerivedType(tag: DW_TAG_member, name: "async_size", scope: !3171, file: !44, line: 899, baseType: !7, size: 32, offset: 96)
!3176 = !DIDerivedType(tag: DW_TAG_member, name: "ra_pages", scope: !3171, file: !44, line: 902, baseType: !7, size: 32, offset: 128)
!3177 = !DIDerivedType(tag: DW_TAG_member, name: "mmap_miss", scope: !3171, file: !44, line: 903, baseType: !7, size: 32, offset: 160)
!3178 = !DIDerivedType(tag: DW_TAG_member, name: "prev_pos", scope: !3171, file: !44, line: 904, baseType: !555, size: 64, offset: 192)
!3179 = !DIDerivedType(tag: DW_TAG_member, name: "f_version", scope: !378, file: !44, line: 940, baseType: !443, size: 64, offset: 1344)
!3180 = !DIDerivedType(tag: DW_TAG_member, name: "private_data", scope: !378, file: !44, line: 945, baseType: !114, size: 64, offset: 1408)
!3181 = !DIDerivedType(tag: DW_TAG_member, name: "f_ep_links", scope: !378, file: !44, line: 949, baseType: !119, size: 128, offset: 1472)
!3182 = !DIDerivedType(tag: DW_TAG_member, name: "f_tfile_llink", scope: !378, file: !44, line: 950, baseType: !119, size: 128, offset: 1600)
!3183 = !DIDerivedType(tag: DW_TAG_member, name: "f_mapping", scope: !378, file: !44, line: 952, baseType: !768, size: 64, offset: 1728)
!3184 = !DIDerivedType(tag: DW_TAG_member, name: "f_wb_err", scope: !378, file: !44, line: 953, baseType: !934, size: 32, offset: 1792)
!3185 = !DIDerivedType(tag: DW_TAG_member, name: "f_sb_err", scope: !378, file: !44, line: 954, baseType: !934, size: 32, offset: 1824)
!3186 = !DIDerivedType(tag: DW_TAG_member, name: "poller", scope: !186, file: !187, line: 163, baseType: !3187, size: 64, offset: 2048)
!3187 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3188, size: 64)
!3188 = !DICompositeType(tag: DW_TAG_structure_type, name: "input_dev_poller", file: !187, line: 24, flags: DIFlagFwdDecl)
!3189 = !DIDerivedType(tag: DW_TAG_member, name: "repeat_key", scope: !186, file: !187, line: 165, baseType: !7, size: 32, offset: 2112)
!3190 = !DIDerivedType(tag: DW_TAG_member, name: "timer", scope: !186, file: !187, line: 166, baseType: !3191, size: 320, offset: 2176)
!3191 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timer_list", file: !3192, line: 11, size: 320, elements: !3193)
!3192 = !DIFile(filename: "./include/linux/timer.h", directory: "/home/lizy2001/genbc/linux")
!3193 = !{!3194, !3195, !3196, !3201}
!3194 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !3191, file: !3192, line: 16, baseType: !671, size: 128)
!3195 = !DIDerivedType(tag: DW_TAG_member, name: "expires", scope: !3191, file: !3192, line: 17, baseType: !205, size: 64, offset: 128)
!3196 = !DIDerivedType(tag: DW_TAG_member, name: "function", scope: !3191, file: !3192, line: 18, baseType: !3197, size: 64, offset: 192)
!3197 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3198, size: 64)
!3198 = !DISubroutineType(types: !3199)
!3199 = !{null, !3200}
!3200 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3191, size: 64)
!3201 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3191, file: !3192, line: 19, baseType: !440, size: 32, offset: 256)
!3202 = !DIDerivedType(tag: DW_TAG_member, name: "rep", scope: !186, file: !187, line: 168, baseType: !3203, size: 64, offset: 2496)
!3203 = !DICompositeType(tag: DW_TAG_array_type, baseType: !169, size: 64, elements: !220)
!3204 = !DIDerivedType(tag: DW_TAG_member, name: "mt", scope: !186, file: !187, line: 170, baseType: !3205, size: 64, offset: 2560)
!3205 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3206, size: 64)
!3206 = !DICompositeType(tag: DW_TAG_structure_type, name: "input_mt", file: !187, line: 170, flags: DIFlagFwdDecl)
!3207 = !DIDerivedType(tag: DW_TAG_member, name: "absinfo", scope: !186, file: !187, line: 172, baseType: !3208, size: 64, offset: 2624)
!3208 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3209, size: 64)
!3209 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "input_absinfo", file: !197, line: 90, size: 192, elements: !3210)
!3210 = !{!3211, !3212, !3213, !3214, !3215, !3216}
!3211 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !3209, file: !197, line: 91, baseType: !168, size: 32)
!3212 = !DIDerivedType(tag: DW_TAG_member, name: "minimum", scope: !3209, file: !197, line: 92, baseType: !168, size: 32, offset: 32)
!3213 = !DIDerivedType(tag: DW_TAG_member, name: "maximum", scope: !3209, file: !197, line: 93, baseType: !168, size: 32, offset: 64)
!3214 = !DIDerivedType(tag: DW_TAG_member, name: "fuzz", scope: !3209, file: !197, line: 94, baseType: !168, size: 32, offset: 96)
!3215 = !DIDerivedType(tag: DW_TAG_member, name: "flat", scope: !3209, file: !197, line: 95, baseType: !168, size: 32, offset: 128)
!3216 = !DIDerivedType(tag: DW_TAG_member, name: "resolution", scope: !3209, file: !197, line: 96, baseType: !168, size: 32, offset: 160)
!3217 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !186, file: !187, line: 174, baseType: !210, size: 768, offset: 2688)
!3218 = !DIDerivedType(tag: DW_TAG_member, name: "led", scope: !186, file: !187, line: 175, baseType: !204, size: 64, offset: 3456)
!3219 = !DIDerivedType(tag: DW_TAG_member, name: "snd", scope: !186, file: !187, line: 176, baseType: !204, size: 64, offset: 3520)
!3220 = !DIDerivedType(tag: DW_TAG_member, name: "sw", scope: !186, file: !187, line: 177, baseType: !204, size: 64, offset: 3584)
!3221 = !DIDerivedType(tag: DW_TAG_member, name: "open", scope: !186, file: !187, line: 179, baseType: !3222, size: 64, offset: 3648)
!3222 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3223, size: 64)
!3223 = !DISubroutineType(types: !3224)
!3224 = !{!169, !185}
!3225 = !DIDerivedType(tag: DW_TAG_member, name: "close", scope: !186, file: !187, line: 180, baseType: !3226, size: 64, offset: 3712)
!3226 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3227, size: 64)
!3227 = !DISubroutineType(types: !3228)
!3228 = !{null, !185}
!3229 = !DIDerivedType(tag: DW_TAG_member, name: "flush", scope: !186, file: !187, line: 181, baseType: !3230, size: 64, offset: 3776)
!3230 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3231, size: 64)
!3231 = !DISubroutineType(types: !3232)
!3232 = !{!169, !185, !377}
!3233 = !DIDerivedType(tag: DW_TAG_member, name: "event", scope: !186, file: !187, line: 182, baseType: !3234, size: 64, offset: 3840)
!3234 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3235, size: 64)
!3235 = !DISubroutineType(types: !3236)
!3236 = !{!169, !185, !7, !7, !169}
!3237 = !DIDerivedType(tag: DW_TAG_member, name: "grab", scope: !186, file: !187, line: 184, baseType: !3238, size: 64, offset: 3904)
!3238 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3239, size: 64)
!3239 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "input_handle", file: !187, line: 337, size: 576, elements: !3240)
!3240 = !{!3241, !3242, !3243, !3244, !3245, !3313, !3314}
!3241 = !DIDerivedType(tag: DW_TAG_member, name: "private", scope: !3239, file: !187, line: 339, baseType: !114, size: 64)
!3242 = !DIDerivedType(tag: DW_TAG_member, name: "open", scope: !3239, file: !187, line: 341, baseType: !169, size: 32, offset: 64)
!3243 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3239, file: !187, line: 342, baseType: !190, size: 64, offset: 128)
!3244 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !3239, file: !187, line: 344, baseType: !185, size: 64, offset: 192)
!3245 = !DIDerivedType(tag: DW_TAG_member, name: "handler", scope: !3239, file: !187, line: 345, baseType: !3246, size: 64, offset: 256)
!3246 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3247, size: 64)
!3247 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "input_handler", file: !187, line: 302, size: 960, elements: !3248)
!3248 = !{!3249, !3250, !3254, !3265, !3269, !3273, !3302, !3306, !3307, !3308, !3309, !3310, !3311, !3312}
!3249 = !DIDerivedType(tag: DW_TAG_member, name: "private", scope: !3247, file: !187, line: 304, baseType: !114, size: 64)
!3250 = !DIDerivedType(tag: DW_TAG_member, name: "event", scope: !3247, file: !187, line: 306, baseType: !3251, size: 64, offset: 64)
!3251 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3252, size: 64)
!3252 = !DISubroutineType(types: !3253)
!3253 = !{null, !3238, !7, !7, !169}
!3254 = !DIDerivedType(tag: DW_TAG_member, name: "events", scope: !3247, file: !187, line: 307, baseType: !3255, size: 64, offset: 128)
!3255 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3256, size: 64)
!3256 = !DISubroutineType(types: !3257)
!3257 = !{null, !3238, !3258, !7}
!3258 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3259, size: 64)
!3259 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3260)
!3260 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "input_value", file: !187, line: 32, size: 64, elements: !3261)
!3261 = !{!3262, !3263, !3264}
!3262 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !3260, file: !187, line: 33, baseType: !149, size: 16)
!3263 = !DIDerivedType(tag: DW_TAG_member, name: "code", scope: !3260, file: !187, line: 34, baseType: !149, size: 16, offset: 16)
!3264 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !3260, file: !187, line: 35, baseType: !168, size: 32, offset: 32)
!3265 = !DIDerivedType(tag: DW_TAG_member, name: "filter", scope: !3247, file: !187, line: 309, baseType: !3266, size: 64, offset: 192)
!3266 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3267, size: 64)
!3267 = !DISubroutineType(types: !3268)
!3268 = !{!514, !3238, !7, !7, !169}
!3269 = !DIDerivedType(tag: DW_TAG_member, name: "match", scope: !3247, file: !187, line: 310, baseType: !3270, size: 64, offset: 256)
!3270 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3271, size: 64)
!3271 = !DISubroutineType(types: !3272)
!3272 = !{!514, !3246, !185}
!3273 = !DIDerivedType(tag: DW_TAG_member, name: "connect", scope: !3247, file: !187, line: 311, baseType: !3274, size: 64, offset: 320)
!3274 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3275, size: 64)
!3275 = !DISubroutineType(types: !3276)
!3276 = !{!169, !3246, !185, !3277}
!3277 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3278, size: 64)
!3278 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3279)
!3279 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "input_device_id", file: !3280, line: 342, size: 1600, elements: !3281)
!3280 = !DIFile(filename: "./include/linux/mod_devicetable.h", directory: "/home/lizy2001/genbc/linux")
!3281 = !{!3282, !3284, !3285, !3286, !3287, !3288, !3290, !3292, !3293, !3294, !3295, !3296, !3297, !3299, !3300, !3301}
!3282 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3279, file: !3280, line: 344, baseType: !3283, size: 64)
!3283 = !DIDerivedType(tag: DW_TAG_typedef, name: "kernel_ulong_t", file: !3280, line: 14, baseType: !205)
!3284 = !DIDerivedType(tag: DW_TAG_member, name: "bustype", scope: !3279, file: !3280, line: 346, baseType: !149, size: 16, offset: 64)
!3285 = !DIDerivedType(tag: DW_TAG_member, name: "vendor", scope: !3279, file: !3280, line: 347, baseType: !149, size: 16, offset: 80)
!3286 = !DIDerivedType(tag: DW_TAG_member, name: "product", scope: !3279, file: !3280, line: 348, baseType: !149, size: 16, offset: 96)
!3287 = !DIDerivedType(tag: DW_TAG_member, name: "version", scope: !3279, file: !3280, line: 349, baseType: !149, size: 16, offset: 112)
!3288 = !DIDerivedType(tag: DW_TAG_member, name: "evbit", scope: !3279, file: !3280, line: 351, baseType: !3289, size: 64, offset: 128)
!3289 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3283, size: 64, elements: !206)
!3290 = !DIDerivedType(tag: DW_TAG_member, name: "keybit", scope: !3279, file: !3280, line: 352, baseType: !3291, size: 768, offset: 192)
!3291 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3283, size: 768, elements: !211)
!3292 = !DIDerivedType(tag: DW_TAG_member, name: "relbit", scope: !3279, file: !3280, line: 353, baseType: !3289, size: 64, offset: 960)
!3293 = !DIDerivedType(tag: DW_TAG_member, name: "absbit", scope: !3279, file: !3280, line: 354, baseType: !3289, size: 64, offset: 1024)
!3294 = !DIDerivedType(tag: DW_TAG_member, name: "mscbit", scope: !3279, file: !3280, line: 355, baseType: !3289, size: 64, offset: 1088)
!3295 = !DIDerivedType(tag: DW_TAG_member, name: "ledbit", scope: !3279, file: !3280, line: 356, baseType: !3289, size: 64, offset: 1152)
!3296 = !DIDerivedType(tag: DW_TAG_member, name: "sndbit", scope: !3279, file: !3280, line: 357, baseType: !3289, size: 64, offset: 1216)
!3297 = !DIDerivedType(tag: DW_TAG_member, name: "ffbit", scope: !3279, file: !3280, line: 358, baseType: !3298, size: 128, offset: 1280)
!3298 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3283, size: 128, elements: !220)
!3299 = !DIDerivedType(tag: DW_TAG_member, name: "swbit", scope: !3279, file: !3280, line: 359, baseType: !3289, size: 64, offset: 1408)
!3300 = !DIDerivedType(tag: DW_TAG_member, name: "propbit", scope: !3279, file: !3280, line: 360, baseType: !3289, size: 64, offset: 1472)
!3301 = !DIDerivedType(tag: DW_TAG_member, name: "driver_info", scope: !3279, file: !3280, line: 362, baseType: !3283, size: 64, offset: 1536)
!3302 = !DIDerivedType(tag: DW_TAG_member, name: "disconnect", scope: !3247, file: !187, line: 312, baseType: !3303, size: 64, offset: 384)
!3303 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3304, size: 64)
!3304 = !DISubroutineType(types: !3305)
!3305 = !{null, !3238}
!3306 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !3247, file: !187, line: 313, baseType: !3303, size: 64, offset: 448)
!3307 = !DIDerivedType(tag: DW_TAG_member, name: "legacy_minors", scope: !3247, file: !187, line: 315, baseType: !514, size: 8, offset: 512)
!3308 = !DIDerivedType(tag: DW_TAG_member, name: "minor", scope: !3247, file: !187, line: 316, baseType: !169, size: 32, offset: 544)
!3309 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3247, file: !187, line: 317, baseType: !190, size: 64, offset: 576)
!3310 = !DIDerivedType(tag: DW_TAG_member, name: "id_table", scope: !3247, file: !187, line: 319, baseType: !3277, size: 64, offset: 640)
!3311 = !DIDerivedType(tag: DW_TAG_member, name: "h_list", scope: !3247, file: !187, line: 321, baseType: !119, size: 128, offset: 704)
!3312 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !3247, file: !187, line: 322, baseType: !119, size: 128, offset: 832)
!3313 = !DIDerivedType(tag: DW_TAG_member, name: "d_node", scope: !3239, file: !187, line: 347, baseType: !119, size: 128, offset: 320)
!3314 = !DIDerivedType(tag: DW_TAG_member, name: "h_node", scope: !3239, file: !187, line: 348, baseType: !119, size: 128, offset: 448)
!3315 = !DIDerivedType(tag: DW_TAG_member, name: "event_lock", scope: !186, file: !187, line: 186, baseType: !357, offset: 3968)
!3316 = !DIDerivedType(tag: DW_TAG_member, name: "mutex", scope: !186, file: !187, line: 187, baseType: !343, size: 192, offset: 3968)
!3317 = !DIDerivedType(tag: DW_TAG_member, name: "users", scope: !186, file: !187, line: 189, baseType: !7, size: 32, offset: 4160)
!3318 = !DIDerivedType(tag: DW_TAG_member, name: "going_away", scope: !186, file: !187, line: 190, baseType: !514, size: 8, offset: 4192)
!3319 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !186, file: !187, line: 192, baseType: !3320, size: 5568, offset: 4224)
!3320 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !73, line: 461, size: 5568, elements: !3321)
!3321 = !{!3322, !3619, !3621, !3624, !3625, !3676, !3765, !3766, !3767, !3768, !3769, !3778, !3872, !3885, !3889, !3890, !3894, !3896, !3897, !3898, !3902, !3908, !3909, !3912, !3916, !3919, !3920, !3921, !3922, !3923, !3955, !3956, !3957, !3960, !3963, !3964, !3965, !3966}
!3322 = !DIDerivedType(tag: DW_TAG_member, name: "kobj", scope: !3320, file: !73, line: 462, baseType: !3323, size: 512)
!3323 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kobject", file: !3324, line: 64, size: 512, elements: !3325)
!3324 = !DIFile(filename: "./include/linux/kobject.h", directory: "/home/lizy2001/genbc/linux")
!3325 = !{!3326, !3327, !3328, !3330, !3370, !3470, !3609, !3614, !3615, !3616, !3617, !3618}
!3326 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3323, file: !3324, line: 65, baseType: !190, size: 64)
!3327 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !3323, file: !3324, line: 66, baseType: !119, size: 128, offset: 64)
!3328 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !3323, file: !3324, line: 67, baseType: !3329, size: 64, offset: 192)
!3329 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3323, size: 64)
!3330 = !DIDerivedType(tag: DW_TAG_member, name: "kset", scope: !3323, file: !3324, line: 68, baseType: !3331, size: 64, offset: 256)
!3331 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3332, size: 64)
!3332 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kset", file: !3324, line: 192, size: 704, elements: !3333)
!3333 = !{!3334, !3335, !3336, !3337}
!3334 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !3332, file: !3324, line: 193, baseType: !119, size: 128)
!3335 = !DIDerivedType(tag: DW_TAG_member, name: "list_lock", scope: !3332, file: !3324, line: 194, baseType: !357, offset: 128)
!3336 = !DIDerivedType(tag: DW_TAG_member, name: "kobj", scope: !3332, file: !3324, line: 195, baseType: !3323, size: 512, offset: 128)
!3337 = !DIDerivedType(tag: DW_TAG_member, name: "uevent_ops", scope: !3332, file: !3324, line: 196, baseType: !3338, size: 64, offset: 640)
!3338 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3339, size: 64)
!3339 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3340)
!3340 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kset_uevent_ops", file: !3324, line: 156, size: 192, elements: !3341)
!3341 = !{!3342, !3347, !3352}
!3342 = !DIDerivedType(tag: DW_TAG_member, name: "filter", scope: !3340, file: !3324, line: 157, baseType: !3343, size: 64)
!3343 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3344)
!3344 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3345, size: 64)
!3345 = !DISubroutineType(types: !3346)
!3346 = !{!169, !3331, !3329}
!3347 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3340, file: !3324, line: 158, baseType: !3348, size: 64, offset: 64)
!3348 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3349)
!3349 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3350, size: 64)
!3350 = !DISubroutineType(types: !3351)
!3351 = !{!190, !3331, !3329}
!3352 = !DIDerivedType(tag: DW_TAG_member, name: "uevent", scope: !3340, file: !3324, line: 159, baseType: !3353, size: 64, offset: 128)
!3353 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3354)
!3354 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3355, size: 64)
!3355 = !DISubroutineType(types: !3356)
!3356 = !{!169, !3331, !3329, !3357}
!3357 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3358, size: 64)
!3358 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kobj_uevent_env", file: !3324, line: 148, size: 20736, elements: !3359)
!3359 = !{!3360, !3362, !3364, !3365, !3369}
!3360 = !DIDerivedType(tag: DW_TAG_member, name: "argv", scope: !3358, file: !3324, line: 149, baseType: !3361, size: 192)
!3361 = !DICompositeType(tag: DW_TAG_array_type, baseType: !509, size: 192, elements: !683)
!3362 = !DIDerivedType(tag: DW_TAG_member, name: "envp", scope: !3358, file: !3324, line: 150, baseType: !3363, size: 4096, offset: 192)
!3363 = !DICompositeType(tag: DW_TAG_array_type, baseType: !509, size: 4096, elements: !1893)
!3364 = !DIDerivedType(tag: DW_TAG_member, name: "envp_idx", scope: !3358, file: !3324, line: 151, baseType: !169, size: 32, offset: 4288)
!3365 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !3358, file: !3324, line: 152, baseType: !3366, size: 16384, offset: 4320)
!3366 = !DICompositeType(tag: DW_TAG_array_type, baseType: !192, size: 16384, elements: !3367)
!3367 = !{!3368}
!3368 = !DISubrange(count: 2048)
!3369 = !DIDerivedType(tag: DW_TAG_member, name: "buflen", scope: !3358, file: !3324, line: 153, baseType: !169, size: 32, offset: 20704)
!3370 = !DIDerivedType(tag: DW_TAG_member, name: "ktype", scope: !3323, file: !3324, line: 69, baseType: !3371, size: 64, offset: 320)
!3371 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3372, size: 64)
!3372 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kobj_type", file: !3324, line: 138, size: 448, elements: !3373)
!3373 = !{!3374, !3378, !3397, !3399, !3432, !3460, !3464}
!3374 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !3372, file: !3324, line: 139, baseType: !3375, size: 64)
!3375 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3376, size: 64)
!3376 = !DISubroutineType(types: !3377)
!3377 = !{null, !3329}
!3378 = !DIDerivedType(tag: DW_TAG_member, name: "sysfs_ops", scope: !3372, file: !3324, line: 140, baseType: !3379, size: 64, offset: 64)
!3379 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3380, size: 64)
!3380 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3381)
!3381 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sysfs_ops", file: !3382, line: 230, size: 128, elements: !3383)
!3382 = !DIFile(filename: "./include/linux/sysfs.h", directory: "/home/lizy2001/genbc/linux")
!3383 = !{!3384, !3393}
!3384 = !DIDerivedType(tag: DW_TAG_member, name: "show", scope: !3381, file: !3382, line: 231, baseType: !3385, size: 64)
!3385 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3386, size: 64)
!3386 = !DISubroutineType(types: !3387)
!3387 = !{!601, !3329, !3388, !509}
!3388 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3389, size: 64)
!3389 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "attribute", file: !3382, line: 30, size: 128, elements: !3390)
!3390 = !{!3391, !3392}
!3391 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3389, file: !3382, line: 31, baseType: !190, size: 64)
!3392 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !3389, file: !3382, line: 32, baseType: !454, size: 16, offset: 64)
!3393 = !DIDerivedType(tag: DW_TAG_member, name: "store", scope: !3381, file: !3382, line: 232, baseType: !3394, size: 64, offset: 64)
!3394 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3395, size: 64)
!3395 = !DISubroutineType(types: !3396)
!3396 = !{!601, !3329, !3388, !190, !604}
!3397 = !DIDerivedType(tag: DW_TAG_member, name: "default_attrs", scope: !3372, file: !3324, line: 141, baseType: !3398, size: 64, offset: 128)
!3398 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3388, size: 64)
!3399 = !DIDerivedType(tag: DW_TAG_member, name: "default_groups", scope: !3372, file: !3324, line: 142, baseType: !3400, size: 64, offset: 192)
!3400 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3401, size: 64)
!3401 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3402, size: 64)
!3402 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3403)
!3403 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "attribute_group", file: !3382, line: 84, size: 320, elements: !3404)
!3404 = !{!3405, !3406, !3410, !3429, !3430}
!3405 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3403, file: !3382, line: 85, baseType: !190, size: 64)
!3406 = !DIDerivedType(tag: DW_TAG_member, name: "is_visible", scope: !3403, file: !3382, line: 86, baseType: !3407, size: 64, offset: 64)
!3407 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3408, size: 64)
!3408 = !DISubroutineType(types: !3409)
!3409 = !{!454, !3329, !3388, !169}
!3410 = !DIDerivedType(tag: DW_TAG_member, name: "is_bin_visible", scope: !3403, file: !3382, line: 88, baseType: !3411, size: 64, offset: 128)
!3411 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3412, size: 64)
!3412 = !DISubroutineType(types: !3413)
!3413 = !{!454, !3329, !3414, !169}
!3414 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3415, size: 64)
!3415 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bin_attribute", file: !3382, line: 168, size: 448, elements: !3416)
!3416 = !{!3417, !3418, !3419, !3420, !3424, !3425}
!3417 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !3415, file: !3382, line: 169, baseType: !3389, size: 128)
!3418 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !3415, file: !3382, line: 170, baseType: !604, size: 64, offset: 128)
!3419 = !DIDerivedType(tag: DW_TAG_member, name: "private", scope: !3415, file: !3382, line: 171, baseType: !114, size: 64, offset: 192)
!3420 = !DIDerivedType(tag: DW_TAG_member, name: "read", scope: !3415, file: !3382, line: 172, baseType: !3421, size: 64, offset: 256)
!3421 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3422, size: 64)
!3422 = !DISubroutineType(types: !3423)
!3423 = !{!601, !377, !3329, !3414, !509, !555, !604}
!3424 = !DIDerivedType(tag: DW_TAG_member, name: "write", scope: !3415, file: !3382, line: 174, baseType: !3421, size: 64, offset: 320)
!3425 = !DIDerivedType(tag: DW_TAG_member, name: "mmap", scope: !3415, file: !3382, line: 176, baseType: !3426, size: 64, offset: 384)
!3426 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3427, size: 64)
!3427 = !DISubroutineType(types: !3428)
!3428 = !{!169, !377, !3329, !3414, !1006}
!3429 = !DIDerivedType(tag: DW_TAG_member, name: "attrs", scope: !3403, file: !3382, line: 90, baseType: !3398, size: 64, offset: 192)
!3430 = !DIDerivedType(tag: DW_TAG_member, name: "bin_attrs", scope: !3403, file: !3382, line: 91, baseType: !3431, size: 64, offset: 256)
!3431 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3414, size: 64)
!3432 = !DIDerivedType(tag: DW_TAG_member, name: "child_ns_type", scope: !3372, file: !3324, line: 143, baseType: !3433, size: 64, offset: 256)
!3433 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3434, size: 64)
!3434 = !DISubroutineType(types: !3435)
!3435 = !{!3436, !3329}
!3436 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3437, size: 64)
!3437 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3438)
!3438 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kobj_ns_type_operations", file: !61, line: 39, size: 384, elements: !3439)
!3439 = !{!3440, !3441, !3445, !3449, !3455, !3459}
!3440 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !3438, file: !61, line: 40, baseType: !60, size: 32)
!3441 = !DIDerivedType(tag: DW_TAG_member, name: "current_may_mount", scope: !3438, file: !61, line: 41, baseType: !3442, size: 64, offset: 64)
!3442 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3443, size: 64)
!3443 = !DISubroutineType(types: !3444)
!3444 = !{!514}
!3445 = !DIDerivedType(tag: DW_TAG_member, name: "grab_current_ns", scope: !3438, file: !61, line: 42, baseType: !3446, size: 64, offset: 128)
!3446 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3447, size: 64)
!3447 = !DISubroutineType(types: !3448)
!3448 = !{!114}
!3449 = !DIDerivedType(tag: DW_TAG_member, name: "netlink_ns", scope: !3438, file: !61, line: 43, baseType: !3450, size: 64, offset: 192)
!3450 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3451, size: 64)
!3451 = !DISubroutineType(types: !3452)
!3452 = !{!2141, !3453}
!3453 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3454, size: 64)
!3454 = !DICompositeType(tag: DW_TAG_structure_type, name: "sock", file: !61, line: 19, flags: DIFlagFwdDecl)
!3455 = !DIDerivedType(tag: DW_TAG_member, name: "initial_ns", scope: !3438, file: !61, line: 44, baseType: !3456, size: 64, offset: 256)
!3456 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3457, size: 64)
!3457 = !DISubroutineType(types: !3458)
!3458 = !{!2141}
!3459 = !DIDerivedType(tag: DW_TAG_member, name: "drop_ns", scope: !3438, file: !61, line: 45, baseType: !491, size: 64, offset: 320)
!3460 = !DIDerivedType(tag: DW_TAG_member, name: "namespace", scope: !3372, file: !3324, line: 144, baseType: !3461, size: 64, offset: 320)
!3461 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3462, size: 64)
!3462 = !DISubroutineType(types: !3463)
!3463 = !{!2141, !3329}
!3464 = !DIDerivedType(tag: DW_TAG_member, name: "get_ownership", scope: !3372, file: !3324, line: 145, baseType: !3465, size: 64, offset: 384)
!3465 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3466, size: 64)
!3466 = !DISubroutineType(types: !3467)
!3467 = !{null, !3329, !3468, !3469}
!3468 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !457, size: 64)
!3469 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !466, size: 64)
!3470 = !DIDerivedType(tag: DW_TAG_member, name: "sd", scope: !3323, file: !3324, line: 70, baseType: !3471, size: 64, offset: 384)
!3471 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3472, size: 64)
!3472 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_node", file: !648, line: 123, size: 1024, elements: !3473)
!3473 = !{!3474, !3475, !3476, !3477, !3478, !3479, !3480, !3481, !3602, !3603, !3604, !3605, !3606}
!3474 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !3472, file: !648, line: 124, baseType: !781, size: 32)
!3475 = !DIDerivedType(tag: DW_TAG_member, name: "active", scope: !3472, file: !648, line: 125, baseType: !781, size: 32, offset: 32)
!3476 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !3472, file: !648, line: 135, baseType: !3471, size: 64, offset: 64)
!3477 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3472, file: !648, line: 136, baseType: !190, size: 64, offset: 128)
!3478 = !DIDerivedType(tag: DW_TAG_member, name: "rb", scope: !3472, file: !648, line: 138, baseType: !794, size: 192, align: 64, offset: 192)
!3479 = !DIDerivedType(tag: DW_TAG_member, name: "ns", scope: !3472, file: !648, line: 140, baseType: !2141, size: 64, offset: 384)
!3480 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !3472, file: !648, line: 141, baseType: !7, size: 32, offset: 448)
!3481 = !DIDerivedType(tag: DW_TAG_member, scope: !3472, file: !648, line: 142, baseType: !3482, size: 256, offset: 512)
!3482 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3472, file: !648, line: 142, size: 256, elements: !3483)
!3483 = !{!3484, !3530, !3534}
!3484 = !DIDerivedType(tag: DW_TAG_member, name: "dir", scope: !3482, file: !648, line: 143, baseType: !3485, size: 192)
!3485 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_elem_dir", file: !648, line: 91, size: 192, elements: !3486)
!3486 = !{!3487, !3488, !3489}
!3487 = !DIDerivedType(tag: DW_TAG_member, name: "subdirs", scope: !3485, file: !648, line: 92, baseType: !205, size: 64)
!3488 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !3485, file: !648, line: 94, baseType: !790, size: 64, offset: 64)
!3489 = !DIDerivedType(tag: DW_TAG_member, name: "root", scope: !3485, file: !648, line: 100, baseType: !3490, size: 64, offset: 128)
!3490 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3491, size: 64)
!3491 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_root", file: !648, line: 180, size: 704, elements: !3492)
!3492 = !{!3493, !3494, !3495, !3502, !3503, !3504, !3528, !3529}
!3493 = !DIDerivedType(tag: DW_TAG_member, name: "kn", scope: !3491, file: !648, line: 182, baseType: !3471, size: 64)
!3494 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3491, file: !648, line: 183, baseType: !7, size: 32, offset: 64)
!3495 = !DIDerivedType(tag: DW_TAG_member, name: "ino_idr", scope: !3491, file: !648, line: 186, baseType: !3496, size: 192, offset: 128)
!3496 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "idr", file: !3497, line: 19, size: 192, elements: !3498)
!3497 = !DIFile(filename: "./include/linux/idr.h", directory: "/home/lizy2001/genbc/linux")
!3498 = !{!3499, !3500, !3501}
!3499 = !DIDerivedType(tag: DW_TAG_member, name: "idr_rt", scope: !3496, file: !3497, line: 20, baseType: !773, size: 128)
!3500 = !DIDerivedType(tag: DW_TAG_member, name: "idr_base", scope: !3496, file: !3497, line: 21, baseType: !7, size: 32, offset: 128)
!3501 = !DIDerivedType(tag: DW_TAG_member, name: "idr_next", scope: !3496, file: !3497, line: 22, baseType: !7, size: 32, offset: 160)
!3502 = !DIDerivedType(tag: DW_TAG_member, name: "last_id_lowbits", scope: !3491, file: !648, line: 187, baseType: !440, size: 32, offset: 320)
!3503 = !DIDerivedType(tag: DW_TAG_member, name: "id_highbits", scope: !3491, file: !648, line: 188, baseType: !440, size: 32, offset: 352)
!3504 = !DIDerivedType(tag: DW_TAG_member, name: "syscall_ops", scope: !3491, file: !648, line: 189, baseType: !3505, size: 64, offset: 384)
!3505 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3506, size: 64)
!3506 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_syscall_ops", file: !648, line: 168, size: 320, elements: !3507)
!3507 = !{!3508, !3512, !3516, !3520, !3524}
!3508 = !DIDerivedType(tag: DW_TAG_member, name: "show_options", scope: !3506, file: !648, line: 169, baseType: !3509, size: 64)
!3509 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3510, size: 64)
!3510 = !DISubroutineType(types: !3511)
!3511 = !{!169, !745, !3490}
!3512 = !DIDerivedType(tag: DW_TAG_member, name: "mkdir", scope: !3506, file: !648, line: 171, baseType: !3513, size: 64, offset: 64)
!3513 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3514, size: 64)
!3514 = !DISubroutineType(types: !3515)
!3515 = !{!169, !3471, !190, !454}
!3516 = !DIDerivedType(tag: DW_TAG_member, name: "rmdir", scope: !3506, file: !648, line: 173, baseType: !3517, size: 64, offset: 128)
!3517 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3518, size: 64)
!3518 = !DISubroutineType(types: !3519)
!3519 = !{!169, !3471}
!3520 = !DIDerivedType(tag: DW_TAG_member, name: "rename", scope: !3506, file: !648, line: 174, baseType: !3521, size: 64, offset: 192)
!3521 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3522, size: 64)
!3522 = !DISubroutineType(types: !3523)
!3523 = !{!169, !3471, !3471, !190}
!3524 = !DIDerivedType(tag: DW_TAG_member, name: "show_path", scope: !3506, file: !648, line: 176, baseType: !3525, size: 64, offset: 256)
!3525 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3526, size: 64)
!3526 = !DISubroutineType(types: !3527)
!3527 = !{!169, !745, !3471, !3490}
!3528 = !DIDerivedType(tag: DW_TAG_member, name: "supers", scope: !3491, file: !648, line: 192, baseType: !119, size: 128, offset: 448)
!3529 = !DIDerivedType(tag: DW_TAG_member, name: "deactivate_waitq", scope: !3491, file: !648, line: 194, baseType: !1493, size: 128, offset: 576)
!3530 = !DIDerivedType(tag: DW_TAG_member, name: "symlink", scope: !3482, file: !648, line: 144, baseType: !3531, size: 64)
!3531 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_elem_symlink", file: !648, line: 103, size: 64, elements: !3532)
!3532 = !{!3533}
!3533 = !DIDerivedType(tag: DW_TAG_member, name: "target_kn", scope: !3531, file: !648, line: 104, baseType: !3471, size: 64)
!3534 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !3482, file: !648, line: 145, baseType: !3535, size: 256)
!3535 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_elem_attr", file: !648, line: 107, size: 256, elements: !3536)
!3536 = !{!3537, !3597, !3600, !3601}
!3537 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !3535, file: !648, line: 108, baseType: !3538, size: 64)
!3538 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3539, size: 64)
!3539 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3540)
!3540 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_ops", file: !648, line: 217, size: 768, elements: !3541)
!3541 = !{!3542, !3562, !3566, !3570, !3574, !3578, !3582, !3586, !3587, !3588, !3589, !3593}
!3542 = !DIDerivedType(tag: DW_TAG_member, name: "open", scope: !3540, file: !648, line: 222, baseType: !3543, size: 64)
!3543 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3544, size: 64)
!3544 = !DISubroutineType(types: !3545)
!3545 = !{!169, !3546}
!3546 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3547, size: 64)
!3547 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_open_file", file: !648, line: 197, size: 1088, elements: !3548)
!3548 = !{!3549, !3550, !3551, !3552, !3553, !3554, !3555, !3556, !3557, !3558, !3559, !3560, !3561}
!3549 = !DIDerivedType(tag: DW_TAG_member, name: "kn", scope: !3547, file: !648, line: 199, baseType: !3471, size: 64)
!3550 = !DIDerivedType(tag: DW_TAG_member, name: "file", scope: !3547, file: !648, line: 200, baseType: !377, size: 64, offset: 64)
!3551 = !DIDerivedType(tag: DW_TAG_member, name: "seq_file", scope: !3547, file: !648, line: 201, baseType: !745, size: 64, offset: 128)
!3552 = !DIDerivedType(tag: DW_TAG_member, name: "priv", scope: !3547, file: !648, line: 202, baseType: !114, size: 64, offset: 192)
!3553 = !DIDerivedType(tag: DW_TAG_member, name: "mutex", scope: !3547, file: !648, line: 205, baseType: !343, size: 192, offset: 256)
!3554 = !DIDerivedType(tag: DW_TAG_member, name: "prealloc_mutex", scope: !3547, file: !648, line: 206, baseType: !343, size: 192, offset: 448)
!3555 = !DIDerivedType(tag: DW_TAG_member, name: "event", scope: !3547, file: !648, line: 207, baseType: !169, size: 32, offset: 640)
!3556 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !3547, file: !648, line: 208, baseType: !119, size: 128, offset: 704)
!3557 = !DIDerivedType(tag: DW_TAG_member, name: "prealloc_buf", scope: !3547, file: !648, line: 209, baseType: !509, size: 64, offset: 832)
!3558 = !DIDerivedType(tag: DW_TAG_member, name: "atomic_write_len", scope: !3547, file: !648, line: 211, baseType: !604, size: 64, offset: 896)
!3559 = !DIDerivedType(tag: DW_TAG_member, name: "mmapped", scope: !3547, file: !648, line: 212, baseType: !514, size: 1, offset: 960, flags: DIFlagBitField, extraData: i64 960)
!3560 = !DIDerivedType(tag: DW_TAG_member, name: "released", scope: !3547, file: !648, line: 213, baseType: !514, size: 1, offset: 961, flags: DIFlagBitField, extraData: i64 960)
!3561 = !DIDerivedType(tag: DW_TAG_member, name: "vm_ops", scope: !3547, file: !648, line: 214, baseType: !1034, size: 64, offset: 1024)
!3562 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !3540, file: !648, line: 223, baseType: !3563, size: 64, offset: 64)
!3563 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3564, size: 64)
!3564 = !DISubroutineType(types: !3565)
!3565 = !{null, !3546}
!3566 = !DIDerivedType(tag: DW_TAG_member, name: "seq_show", scope: !3540, file: !648, line: 236, baseType: !3567, size: 64, offset: 128)
!3567 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3568, size: 64)
!3568 = !DISubroutineType(types: !3569)
!3569 = !{!169, !745, !114}
!3570 = !DIDerivedType(tag: DW_TAG_member, name: "seq_start", scope: !3540, file: !648, line: 238, baseType: !3571, size: 64, offset: 192)
!3571 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3572, size: 64)
!3572 = !DISubroutineType(types: !3573)
!3573 = !{!114, !745, !2885}
!3574 = !DIDerivedType(tag: DW_TAG_member, name: "seq_next", scope: !3540, file: !648, line: 239, baseType: !3575, size: 64, offset: 256)
!3575 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3576, size: 64)
!3576 = !DISubroutineType(types: !3577)
!3577 = !{!114, !745, !114, !2885}
!3578 = !DIDerivedType(tag: DW_TAG_member, name: "seq_stop", scope: !3540, file: !648, line: 240, baseType: !3579, size: 64, offset: 320)
!3579 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3580, size: 64)
!3580 = !DISubroutineType(types: !3581)
!3581 = !{null, !745, !114}
!3582 = !DIDerivedType(tag: DW_TAG_member, name: "read", scope: !3540, file: !648, line: 242, baseType: !3583, size: 64, offset: 384)
!3583 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3584, size: 64)
!3584 = !DISubroutineType(types: !3585)
!3585 = !{!601, !3546, !509, !604, !555}
!3586 = !DIDerivedType(tag: DW_TAG_member, name: "atomic_write_len", scope: !3540, file: !648, line: 252, baseType: !604, size: 64, offset: 448)
!3587 = !DIDerivedType(tag: DW_TAG_member, name: "prealloc", scope: !3540, file: !648, line: 259, baseType: !514, size: 8, offset: 512)
!3588 = !DIDerivedType(tag: DW_TAG_member, name: "write", scope: !3540, file: !648, line: 260, baseType: !3583, size: 64, offset: 576)
!3589 = !DIDerivedType(tag: DW_TAG_member, name: "poll", scope: !3540, file: !648, line: 263, baseType: !3590, size: 64, offset: 640)
!3590 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3591, size: 64)
!3591 = !DISubroutineType(types: !3592)
!3592 = !{!2914, !3546, !2916}
!3593 = !DIDerivedType(tag: DW_TAG_member, name: "mmap", scope: !3540, file: !648, line: 266, baseType: !3594, size: 64, offset: 704)
!3594 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3595, size: 64)
!3595 = !DISubroutineType(types: !3596)
!3596 = !{!169, !3546, !1006}
!3597 = !DIDerivedType(tag: DW_TAG_member, name: "open", scope: !3535, file: !648, line: 109, baseType: !3598, size: 64, offset: 64)
!3598 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3599, size: 64)
!3599 = !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_open_node", file: !648, line: 31, flags: DIFlagFwdDecl)
!3600 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !3535, file: !648, line: 110, baseType: !555, size: 64, offset: 128)
!3601 = !DIDerivedType(tag: DW_TAG_member, name: "notify_next", scope: !3535, file: !648, line: 111, baseType: !3471, size: 64, offset: 192)
!3602 = !DIDerivedType(tag: DW_TAG_member, name: "priv", scope: !3472, file: !648, line: 148, baseType: !114, size: 64, offset: 768)
!3603 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !3472, file: !648, line: 154, baseType: !443, size: 64, offset: 832)
!3604 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3472, file: !648, line: 156, baseType: !150, size: 16, offset: 896)
!3605 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !3472, file: !648, line: 157, baseType: !454, size: 16, offset: 912)
!3606 = !DIDerivedType(tag: DW_TAG_member, name: "iattr", scope: !3472, file: !648, line: 158, baseType: !3607, size: 64, offset: 960)
!3607 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3608, size: 64)
!3608 = !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_iattrs", file: !648, line: 32, flags: DIFlagFwdDecl)
!3609 = !DIDerivedType(tag: DW_TAG_member, name: "kref", scope: !3323, file: !3324, line: 71, baseType: !3610, size: 32, offset: 448)
!3610 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kref", file: !3611, line: 19, size: 32, elements: !3612)
!3611 = !DIFile(filename: "./include/linux/kref.h", directory: "/home/lizy2001/genbc/linux")
!3612 = !{!3613}
!3613 = !DIDerivedType(tag: DW_TAG_member, name: "refcount", scope: !3610, file: !3611, line: 20, baseType: !1247, size: 32)
!3614 = !DIDerivedType(tag: DW_TAG_member, name: "state_initialized", scope: !3323, file: !3324, line: 75, baseType: !7, size: 1, offset: 480, flags: DIFlagBitField, extraData: i64 480)
!3615 = !DIDerivedType(tag: DW_TAG_member, name: "state_in_sysfs", scope: !3323, file: !3324, line: 76, baseType: !7, size: 1, offset: 481, flags: DIFlagBitField, extraData: i64 480)
!3616 = !DIDerivedType(tag: DW_TAG_member, name: "state_add_uevent_sent", scope: !3323, file: !3324, line: 77, baseType: !7, size: 1, offset: 482, flags: DIFlagBitField, extraData: i64 480)
!3617 = !DIDerivedType(tag: DW_TAG_member, name: "state_remove_uevent_sent", scope: !3323, file: !3324, line: 78, baseType: !7, size: 1, offset: 483, flags: DIFlagBitField, extraData: i64 480)
!3618 = !DIDerivedType(tag: DW_TAG_member, name: "uevent_suppress", scope: !3323, file: !3324, line: 79, baseType: !7, size: 1, offset: 484, flags: DIFlagBitField, extraData: i64 480)
!3619 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !3320, file: !73, line: 463, baseType: !3620, size: 64, offset: 512)
!3620 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3320, size: 64)
!3621 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !3320, file: !73, line: 465, baseType: !3622, size: 64, offset: 576)
!3622 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3623, size: 64)
!3623 = !DICompositeType(tag: DW_TAG_structure_type, name: "device_private", file: !73, line: 36, flags: DIFlagFwdDecl)
!3624 = !DIDerivedType(tag: DW_TAG_member, name: "init_name", scope: !3320, file: !73, line: 467, baseType: !190, size: 64, offset: 640)
!3625 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !3320, file: !73, line: 468, baseType: !3626, size: 64, offset: 704)
!3626 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3627, size: 64)
!3627 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3628)
!3628 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_type", file: !73, line: 87, size: 384, elements: !3629)
!3629 = !{!3630, !3631, !3632, !3636, !3641, !3645}
!3630 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3628, file: !73, line: 88, baseType: !190, size: 64)
!3631 = !DIDerivedType(tag: DW_TAG_member, name: "groups", scope: !3628, file: !73, line: 89, baseType: !3400, size: 64, offset: 64)
!3632 = !DIDerivedType(tag: DW_TAG_member, name: "uevent", scope: !3628, file: !73, line: 90, baseType: !3633, size: 64, offset: 128)
!3633 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3634, size: 64)
!3634 = !DISubroutineType(types: !3635)
!3635 = !{!169, !3620, !3357}
!3636 = !DIDerivedType(tag: DW_TAG_member, name: "devnode", scope: !3628, file: !73, line: 91, baseType: !3637, size: 64, offset: 192)
!3637 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3638, size: 64)
!3638 = !DISubroutineType(types: !3639)
!3639 = !{!509, !3620, !3640, !3468, !3469}
!3640 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !454, size: 64)
!3641 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !3628, file: !73, line: 93, baseType: !3642, size: 64, offset: 256)
!3642 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3643, size: 64)
!3643 = !DISubroutineType(types: !3644)
!3644 = !{null, !3620}
!3645 = !DIDerivedType(tag: DW_TAG_member, name: "pm", scope: !3628, file: !73, line: 95, baseType: !3646, size: 64, offset: 320)
!3646 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3647, size: 64)
!3647 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3648)
!3648 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pm_ops", file: !80, line: 278, size: 1472, elements: !3649)
!3649 = !{!3650, !3654, !3655, !3656, !3657, !3658, !3659, !3660, !3661, !3662, !3663, !3664, !3665, !3666, !3667, !3668, !3669, !3670, !3671, !3672, !3673, !3674, !3675}
!3650 = !DIDerivedType(tag: DW_TAG_member, name: "prepare", scope: !3648, file: !80, line: 279, baseType: !3651, size: 64)
!3651 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3652, size: 64)
!3652 = !DISubroutineType(types: !3653)
!3653 = !{!169, !3620}
!3654 = !DIDerivedType(tag: DW_TAG_member, name: "complete", scope: !3648, file: !80, line: 280, baseType: !3642, size: 64, offset: 64)
!3655 = !DIDerivedType(tag: DW_TAG_member, name: "suspend", scope: !3648, file: !80, line: 281, baseType: !3651, size: 64, offset: 128)
!3656 = !DIDerivedType(tag: DW_TAG_member, name: "resume", scope: !3648, file: !80, line: 282, baseType: !3651, size: 64, offset: 192)
!3657 = !DIDerivedType(tag: DW_TAG_member, name: "freeze", scope: !3648, file: !80, line: 283, baseType: !3651, size: 64, offset: 256)
!3658 = !DIDerivedType(tag: DW_TAG_member, name: "thaw", scope: !3648, file: !80, line: 284, baseType: !3651, size: 64, offset: 320)
!3659 = !DIDerivedType(tag: DW_TAG_member, name: "poweroff", scope: !3648, file: !80, line: 285, baseType: !3651, size: 64, offset: 384)
!3660 = !DIDerivedType(tag: DW_TAG_member, name: "restore", scope: !3648, file: !80, line: 286, baseType: !3651, size: 64, offset: 448)
!3661 = !DIDerivedType(tag: DW_TAG_member, name: "suspend_late", scope: !3648, file: !80, line: 287, baseType: !3651, size: 64, offset: 512)
!3662 = !DIDerivedType(tag: DW_TAG_member, name: "resume_early", scope: !3648, file: !80, line: 288, baseType: !3651, size: 64, offset: 576)
!3663 = !DIDerivedType(tag: DW_TAG_member, name: "freeze_late", scope: !3648, file: !80, line: 289, baseType: !3651, size: 64, offset: 640)
!3664 = !DIDerivedType(tag: DW_TAG_member, name: "thaw_early", scope: !3648, file: !80, line: 290, baseType: !3651, size: 64, offset: 704)
!3665 = !DIDerivedType(tag: DW_TAG_member, name: "poweroff_late", scope: !3648, file: !80, line: 291, baseType: !3651, size: 64, offset: 768)
!3666 = !DIDerivedType(tag: DW_TAG_member, name: "restore_early", scope: !3648, file: !80, line: 292, baseType: !3651, size: 64, offset: 832)
!3667 = !DIDerivedType(tag: DW_TAG_member, name: "suspend_noirq", scope: !3648, file: !80, line: 293, baseType: !3651, size: 64, offset: 896)
!3668 = !DIDerivedType(tag: DW_TAG_member, name: "resume_noirq", scope: !3648, file: !80, line: 294, baseType: !3651, size: 64, offset: 960)
!3669 = !DIDerivedType(tag: DW_TAG_member, name: "freeze_noirq", scope: !3648, file: !80, line: 295, baseType: !3651, size: 64, offset: 1024)
!3670 = !DIDerivedType(tag: DW_TAG_member, name: "thaw_noirq", scope: !3648, file: !80, line: 296, baseType: !3651, size: 64, offset: 1088)
!3671 = !DIDerivedType(tag: DW_TAG_member, name: "poweroff_noirq", scope: !3648, file: !80, line: 297, baseType: !3651, size: 64, offset: 1152)
!3672 = !DIDerivedType(tag: DW_TAG_member, name: "restore_noirq", scope: !3648, file: !80, line: 298, baseType: !3651, size: 64, offset: 1216)
!3673 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_suspend", scope: !3648, file: !80, line: 299, baseType: !3651, size: 64, offset: 1280)
!3674 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_resume", scope: !3648, file: !80, line: 300, baseType: !3651, size: 64, offset: 1344)
!3675 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_idle", scope: !3648, file: !80, line: 301, baseType: !3651, size: 64, offset: 1408)
!3676 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !3320, file: !73, line: 470, baseType: !3677, size: 64, offset: 768)
!3677 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3678, size: 64)
!3678 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bus_type", file: !3679, line: 82, size: 1408, elements: !3680)
!3679 = !DIFile(filename: "./include/linux/device/bus.h", directory: "/home/lizy2001/genbc/linux")
!3680 = !{!3681, !3682, !3683, !3684, !3685, !3686, !3687, !3744, !3745, !3746, !3747, !3748, !3749, !3750, !3751, !3752, !3753, !3754, !3755, !3756, !3760, !3763, !3764}
!3681 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3678, file: !3679, line: 83, baseType: !190, size: 64)
!3682 = !DIDerivedType(tag: DW_TAG_member, name: "dev_name", scope: !3678, file: !3679, line: 84, baseType: !190, size: 64, offset: 64)
!3683 = !DIDerivedType(tag: DW_TAG_member, name: "dev_root", scope: !3678, file: !3679, line: 85, baseType: !3620, size: 64, offset: 128)
!3684 = !DIDerivedType(tag: DW_TAG_member, name: "bus_groups", scope: !3678, file: !3679, line: 86, baseType: !3400, size: 64, offset: 192)
!3685 = !DIDerivedType(tag: DW_TAG_member, name: "dev_groups", scope: !3678, file: !3679, line: 87, baseType: !3400, size: 64, offset: 256)
!3686 = !DIDerivedType(tag: DW_TAG_member, name: "drv_groups", scope: !3678, file: !3679, line: 88, baseType: !3400, size: 64, offset: 320)
!3687 = !DIDerivedType(tag: DW_TAG_member, name: "match", scope: !3678, file: !3679, line: 90, baseType: !3688, size: 64, offset: 384)
!3688 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3689, size: 64)
!3689 = !DISubroutineType(types: !3690)
!3690 = !{!169, !3620, !3691}
!3691 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3692, size: 64)
!3692 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_driver", file: !67, line: 95, size: 1152, elements: !3693)
!3693 = !{!3694, !3695, !3696, !3697, !3698, !3699, !3700, !3712, !3724, !3725, !3726, !3727, !3728, !3736, !3737, !3738, !3739, !3740, !3741}
!3694 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3692, file: !67, line: 96, baseType: !190, size: 64)
!3695 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !3692, file: !67, line: 97, baseType: !3677, size: 64, offset: 64)
!3696 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !3692, file: !67, line: 99, baseType: !662, size: 64, offset: 128)
!3697 = !DIDerivedType(tag: DW_TAG_member, name: "mod_name", scope: !3692, file: !67, line: 100, baseType: !190, size: 64, offset: 192)
!3698 = !DIDerivedType(tag: DW_TAG_member, name: "suppress_bind_attrs", scope: !3692, file: !67, line: 102, baseType: !514, size: 8, offset: 256)
!3699 = !DIDerivedType(tag: DW_TAG_member, name: "probe_type", scope: !3692, file: !67, line: 103, baseType: !66, size: 32, offset: 288)
!3700 = !DIDerivedType(tag: DW_TAG_member, name: "of_match_table", scope: !3692, file: !67, line: 105, baseType: !3701, size: 64, offset: 320)
!3701 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3702, size: 64)
!3702 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3703)
!3703 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "of_device_id", file: !3280, line: 262, size: 1600, elements: !3704)
!3704 = !{!3705, !3706, !3707, !3711}
!3705 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3703, file: !3280, line: 263, baseType: !2709, size: 256)
!3706 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !3703, file: !3280, line: 264, baseType: !2709, size: 256, offset: 256)
!3707 = !DIDerivedType(tag: DW_TAG_member, name: "compatible", scope: !3703, file: !3280, line: 265, baseType: !3708, size: 1024, offset: 512)
!3708 = !DICompositeType(tag: DW_TAG_array_type, baseType: !192, size: 1024, elements: !3709)
!3709 = !{!3710}
!3710 = !DISubrange(count: 128)
!3711 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !3703, file: !3280, line: 266, baseType: !2141, size: 64, offset: 1536)
!3712 = !DIDerivedType(tag: DW_TAG_member, name: "acpi_match_table", scope: !3692, file: !67, line: 106, baseType: !3713, size: 64, offset: 384)
!3713 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3714, size: 64)
!3714 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3715)
!3715 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "acpi_device_id", file: !3280, line: 210, size: 256, elements: !3716)
!3716 = !{!3717, !3721, !3722, !3723}
!3717 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !3715, file: !3280, line: 211, baseType: !3718, size: 72)
!3718 = !DICompositeType(tag: DW_TAG_array_type, baseType: !152, size: 72, elements: !3719)
!3719 = !{!3720}
!3720 = !DISubrange(count: 9)
!3721 = !DIDerivedType(tag: DW_TAG_member, name: "driver_data", scope: !3715, file: !3280, line: 212, baseType: !3283, size: 64, offset: 128)
!3722 = !DIDerivedType(tag: DW_TAG_member, name: "cls", scope: !3715, file: !3280, line: 213, baseType: !239, size: 32, offset: 192)
!3723 = !DIDerivedType(tag: DW_TAG_member, name: "cls_msk", scope: !3715, file: !3280, line: 214, baseType: !239, size: 32, offset: 224)
!3724 = !DIDerivedType(tag: DW_TAG_member, name: "probe", scope: !3692, file: !67, line: 108, baseType: !3651, size: 64, offset: 448)
!3725 = !DIDerivedType(tag: DW_TAG_member, name: "sync_state", scope: !3692, file: !67, line: 109, baseType: !3642, size: 64, offset: 512)
!3726 = !DIDerivedType(tag: DW_TAG_member, name: "remove", scope: !3692, file: !67, line: 110, baseType: !3651, size: 64, offset: 576)
!3727 = !DIDerivedType(tag: DW_TAG_member, name: "shutdown", scope: !3692, file: !67, line: 111, baseType: !3642, size: 64, offset: 640)
!3728 = !DIDerivedType(tag: DW_TAG_member, name: "suspend", scope: !3692, file: !67, line: 112, baseType: !3729, size: 64, offset: 704)
!3729 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3730, size: 64)
!3730 = !DISubroutineType(types: !3731)
!3731 = !{!169, !3620, !3732}
!3732 = !DIDerivedType(tag: DW_TAG_typedef, name: "pm_message_t", file: !80, line: 52, baseType: !3733)
!3733 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pm_message", file: !80, line: 50, size: 32, elements: !3734)
!3734 = !{!3735}
!3735 = !DIDerivedType(tag: DW_TAG_member, name: "event", scope: !3733, file: !80, line: 51, baseType: !169, size: 32)
!3736 = !DIDerivedType(tag: DW_TAG_member, name: "resume", scope: !3692, file: !67, line: 113, baseType: !3651, size: 64, offset: 768)
!3737 = !DIDerivedType(tag: DW_TAG_member, name: "groups", scope: !3692, file: !67, line: 114, baseType: !3400, size: 64, offset: 832)
!3738 = !DIDerivedType(tag: DW_TAG_member, name: "dev_groups", scope: !3692, file: !67, line: 115, baseType: !3400, size: 64, offset: 896)
!3739 = !DIDerivedType(tag: DW_TAG_member, name: "pm", scope: !3692, file: !67, line: 117, baseType: !3646, size: 64, offset: 960)
!3740 = !DIDerivedType(tag: DW_TAG_member, name: "coredump", scope: !3692, file: !67, line: 118, baseType: !3642, size: 64, offset: 1024)
!3741 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !3692, file: !67, line: 120, baseType: !3742, size: 64, offset: 1088)
!3742 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3743, size: 64)
!3743 = !DICompositeType(tag: DW_TAG_structure_type, name: "driver_private", file: !67, line: 120, flags: DIFlagFwdDecl)
!3744 = !DIDerivedType(tag: DW_TAG_member, name: "uevent", scope: !3678, file: !3679, line: 91, baseType: !3633, size: 64, offset: 448)
!3745 = !DIDerivedType(tag: DW_TAG_member, name: "probe", scope: !3678, file: !3679, line: 92, baseType: !3651, size: 64, offset: 512)
!3746 = !DIDerivedType(tag: DW_TAG_member, name: "sync_state", scope: !3678, file: !3679, line: 93, baseType: !3642, size: 64, offset: 576)
!3747 = !DIDerivedType(tag: DW_TAG_member, name: "remove", scope: !3678, file: !3679, line: 94, baseType: !3651, size: 64, offset: 640)
!3748 = !DIDerivedType(tag: DW_TAG_member, name: "shutdown", scope: !3678, file: !3679, line: 95, baseType: !3642, size: 64, offset: 704)
!3749 = !DIDerivedType(tag: DW_TAG_member, name: "online", scope: !3678, file: !3679, line: 97, baseType: !3651, size: 64, offset: 768)
!3750 = !DIDerivedType(tag: DW_TAG_member, name: "offline", scope: !3678, file: !3679, line: 98, baseType: !3651, size: 64, offset: 832)
!3751 = !DIDerivedType(tag: DW_TAG_member, name: "suspend", scope: !3678, file: !3679, line: 100, baseType: !3729, size: 64, offset: 896)
!3752 = !DIDerivedType(tag: DW_TAG_member, name: "resume", scope: !3678, file: !3679, line: 101, baseType: !3651, size: 64, offset: 960)
!3753 = !DIDerivedType(tag: DW_TAG_member, name: "num_vf", scope: !3678, file: !3679, line: 103, baseType: !3651, size: 64, offset: 1024)
!3754 = !DIDerivedType(tag: DW_TAG_member, name: "dma_configure", scope: !3678, file: !3679, line: 105, baseType: !3651, size: 64, offset: 1088)
!3755 = !DIDerivedType(tag: DW_TAG_member, name: "pm", scope: !3678, file: !3679, line: 107, baseType: !3646, size: 64, offset: 1152)
!3756 = !DIDerivedType(tag: DW_TAG_member, name: "iommu_ops", scope: !3678, file: !3679, line: 109, baseType: !3757, size: 64, offset: 1216)
!3757 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3758, size: 64)
!3758 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3759)
!3759 = !DICompositeType(tag: DW_TAG_structure_type, name: "iommu_ops", file: !3679, line: 109, flags: DIFlagFwdDecl)
!3760 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !3678, file: !3679, line: 111, baseType: !3761, size: 64, offset: 1280)
!3761 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3762, size: 64)
!3762 = !DICompositeType(tag: DW_TAG_structure_type, name: "subsys_private", file: !3679, line: 111, flags: DIFlagFwdDecl)
!3763 = !DIDerivedType(tag: DW_TAG_member, name: "lock_key", scope: !3678, file: !3679, line: 112, baseType: !677, offset: 1344)
!3764 = !DIDerivedType(tag: DW_TAG_member, name: "need_parent_lock", scope: !3678, file: !3679, line: 114, baseType: !514, size: 8, offset: 1344)
!3765 = !DIDerivedType(tag: DW_TAG_member, name: "driver", scope: !3320, file: !73, line: 471, baseType: !3691, size: 64, offset: 832)
!3766 = !DIDerivedType(tag: DW_TAG_member, name: "platform_data", scope: !3320, file: !73, line: 473, baseType: !114, size: 64, offset: 896)
!3767 = !DIDerivedType(tag: DW_TAG_member, name: "driver_data", scope: !3320, file: !73, line: 475, baseType: !114, size: 64, offset: 960)
!3768 = !DIDerivedType(tag: DW_TAG_member, name: "mutex", scope: !3320, file: !73, line: 480, baseType: !343, size: 192, offset: 1024)
!3769 = !DIDerivedType(tag: DW_TAG_member, name: "links", scope: !3320, file: !73, line: 484, baseType: !3770, size: 576, offset: 1216)
!3770 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_links_info", file: !73, line: 361, size: 576, elements: !3771)
!3771 = !{!3772, !3773, !3774, !3775, !3776, !3777}
!3772 = !DIDerivedType(tag: DW_TAG_member, name: "suppliers", scope: !3770, file: !73, line: 362, baseType: !119, size: 128)
!3773 = !DIDerivedType(tag: DW_TAG_member, name: "consumers", scope: !3770, file: !73, line: 363, baseType: !119, size: 128, offset: 128)
!3774 = !DIDerivedType(tag: DW_TAG_member, name: "needs_suppliers", scope: !3770, file: !73, line: 364, baseType: !119, size: 128, offset: 256)
!3775 = !DIDerivedType(tag: DW_TAG_member, name: "defer_hook", scope: !3770, file: !73, line: 365, baseType: !119, size: 128, offset: 384)
!3776 = !DIDerivedType(tag: DW_TAG_member, name: "need_for_probe", scope: !3770, file: !73, line: 366, baseType: !514, size: 8, offset: 512)
!3777 = !DIDerivedType(tag: DW_TAG_member, name: "status", scope: !3770, file: !73, line: 367, baseType: !72, size: 32, offset: 544)
!3778 = !DIDerivedType(tag: DW_TAG_member, name: "power", scope: !3320, file: !73, line: 485, baseType: !3779, size: 2304, offset: 1792)
!3779 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pm_info", file: !80, line: 565, size: 2304, elements: !3780)
!3780 = !{!3781, !3782, !3783, !3784, !3785, !3786, !3787, !3788, !3789, !3790, !3791, !3792, !3793, !3794, !3795, !3796, !3823, !3824, !3825, !3826, !3827, !3828, !3829, !3830, !3831, !3832, !3833, !3834, !3835, !3836, !3837, !3838, !3839, !3840, !3841, !3842, !3843, !3844, !3845, !3846, !3847, !3848, !3849, !3850, !3851, !3852, !3853, !3854, !3855, !3865, !3869}
!3781 = !DIDerivedType(tag: DW_TAG_member, name: "power_state", scope: !3779, file: !80, line: 566, baseType: !3732, size: 32)
!3782 = !DIDerivedType(tag: DW_TAG_member, name: "can_wakeup", scope: !3779, file: !80, line: 567, baseType: !7, size: 1, offset: 32, flags: DIFlagBitField, extraData: i64 32)
!3783 = !DIDerivedType(tag: DW_TAG_member, name: "async_suspend", scope: !3779, file: !80, line: 568, baseType: !7, size: 1, offset: 33, flags: DIFlagBitField, extraData: i64 32)
!3784 = !DIDerivedType(tag: DW_TAG_member, name: "in_dpm_list", scope: !3779, file: !80, line: 569, baseType: !514, size: 1, offset: 34, flags: DIFlagBitField, extraData: i64 32)
!3785 = !DIDerivedType(tag: DW_TAG_member, name: "is_prepared", scope: !3779, file: !80, line: 570, baseType: !514, size: 1, offset: 35, flags: DIFlagBitField, extraData: i64 32)
!3786 = !DIDerivedType(tag: DW_TAG_member, name: "is_suspended", scope: !3779, file: !80, line: 571, baseType: !514, size: 1, offset: 36, flags: DIFlagBitField, extraData: i64 32)
!3787 = !DIDerivedType(tag: DW_TAG_member, name: "is_noirq_suspended", scope: !3779, file: !80, line: 572, baseType: !514, size: 1, offset: 37, flags: DIFlagBitField, extraData: i64 32)
!3788 = !DIDerivedType(tag: DW_TAG_member, name: "is_late_suspended", scope: !3779, file: !80, line: 573, baseType: !514, size: 1, offset: 38, flags: DIFlagBitField, extraData: i64 32)
!3789 = !DIDerivedType(tag: DW_TAG_member, name: "no_pm", scope: !3779, file: !80, line: 574, baseType: !514, size: 1, offset: 39, flags: DIFlagBitField, extraData: i64 32)
!3790 = !DIDerivedType(tag: DW_TAG_member, name: "early_init", scope: !3779, file: !80, line: 575, baseType: !514, size: 1, offset: 40, flags: DIFlagBitField, extraData: i64 32)
!3791 = !DIDerivedType(tag: DW_TAG_member, name: "direct_complete", scope: !3779, file: !80, line: 576, baseType: !514, size: 1, offset: 41, flags: DIFlagBitField, extraData: i64 32)
!3792 = !DIDerivedType(tag: DW_TAG_member, name: "driver_flags", scope: !3779, file: !80, line: 577, baseType: !440, size: 32, offset: 64)
!3793 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3779, file: !80, line: 578, baseType: !357, offset: 96)
!3794 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !3779, file: !80, line: 580, baseType: !119, size: 128, offset: 128)
!3795 = !DIDerivedType(tag: DW_TAG_member, name: "completion", scope: !3779, file: !80, line: 581, baseType: !1514, size: 192, offset: 256)
!3796 = !DIDerivedType(tag: DW_TAG_member, name: "wakeup", scope: !3779, file: !80, line: 582, baseType: !3797, size: 64, offset: 448)
!3797 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3798, size: 64)
!3798 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wakeup_source", file: !3799, line: 43, size: 1472, elements: !3800)
!3799 = !DIFile(filename: "./include/linux/pm_wakeup.h", directory: "/home/lizy2001/genbc/linux")
!3800 = !{!3801, !3802, !3803, !3804, !3805, !3808, !3809, !3810, !3811, !3812, !3813, !3814, !3815, !3816, !3817, !3818, !3819, !3820, !3821, !3822}
!3801 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3798, file: !3799, line: 44, baseType: !190, size: 64)
!3802 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !3798, file: !3799, line: 45, baseType: !169, size: 32, offset: 64)
!3803 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !3798, file: !3799, line: 46, baseType: !119, size: 128, offset: 128)
!3804 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3798, file: !3799, line: 47, baseType: !357, offset: 256)
!3805 = !DIDerivedType(tag: DW_TAG_member, name: "wakeirq", scope: !3798, file: !3799, line: 48, baseType: !3806, size: 64, offset: 256)
!3806 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3807, size: 64)
!3807 = !DICompositeType(tag: DW_TAG_structure_type, name: "wake_irq", file: !80, line: 533, flags: DIFlagFwdDecl)
!3808 = !DIDerivedType(tag: DW_TAG_member, name: "timer", scope: !3798, file: !3799, line: 49, baseType: !3191, size: 320, offset: 320)
!3809 = !DIDerivedType(tag: DW_TAG_member, name: "timer_expires", scope: !3798, file: !3799, line: 50, baseType: !205, size: 64, offset: 640)
!3810 = !DIDerivedType(tag: DW_TAG_member, name: "total_time", scope: !3798, file: !3799, line: 51, baseType: !1317, size: 64, offset: 704)
!3811 = !DIDerivedType(tag: DW_TAG_member, name: "max_time", scope: !3798, file: !3799, line: 52, baseType: !1317, size: 64, offset: 768)
!3812 = !DIDerivedType(tag: DW_TAG_member, name: "last_time", scope: !3798, file: !3799, line: 53, baseType: !1317, size: 64, offset: 832)
!3813 = !DIDerivedType(tag: DW_TAG_member, name: "start_prevent_time", scope: !3798, file: !3799, line: 54, baseType: !1317, size: 64, offset: 896)
!3814 = !DIDerivedType(tag: DW_TAG_member, name: "prevent_sleep_time", scope: !3798, file: !3799, line: 55, baseType: !1317, size: 64, offset: 960)
!3815 = !DIDerivedType(tag: DW_TAG_member, name: "event_count", scope: !3798, file: !3799, line: 56, baseType: !205, size: 64, offset: 1024)
!3816 = !DIDerivedType(tag: DW_TAG_member, name: "active_count", scope: !3798, file: !3799, line: 57, baseType: !205, size: 64, offset: 1088)
!3817 = !DIDerivedType(tag: DW_TAG_member, name: "relax_count", scope: !3798, file: !3799, line: 58, baseType: !205, size: 64, offset: 1152)
!3818 = !DIDerivedType(tag: DW_TAG_member, name: "expire_count", scope: !3798, file: !3799, line: 59, baseType: !205, size: 64, offset: 1216)
!3819 = !DIDerivedType(tag: DW_TAG_member, name: "wakeup_count", scope: !3798, file: !3799, line: 60, baseType: !205, size: 64, offset: 1280)
!3820 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !3798, file: !3799, line: 61, baseType: !3620, size: 64, offset: 1344)
!3821 = !DIDerivedType(tag: DW_TAG_member, name: "active", scope: !3798, file: !3799, line: 62, baseType: !514, size: 1, offset: 1408, flags: DIFlagBitField, extraData: i64 1408)
!3822 = !DIDerivedType(tag: DW_TAG_member, name: "autosleep_enabled", scope: !3798, file: !3799, line: 63, baseType: !514, size: 1, offset: 1409, flags: DIFlagBitField, extraData: i64 1408)
!3823 = !DIDerivedType(tag: DW_TAG_member, name: "wakeup_path", scope: !3779, file: !80, line: 583, baseType: !514, size: 1, offset: 512, flags: DIFlagBitField, extraData: i64 512)
!3824 = !DIDerivedType(tag: DW_TAG_member, name: "syscore", scope: !3779, file: !80, line: 584, baseType: !514, size: 1, offset: 513, flags: DIFlagBitField, extraData: i64 512)
!3825 = !DIDerivedType(tag: DW_TAG_member, name: "no_pm_callbacks", scope: !3779, file: !80, line: 585, baseType: !514, size: 1, offset: 514, flags: DIFlagBitField, extraData: i64 512)
!3826 = !DIDerivedType(tag: DW_TAG_member, name: "must_resume", scope: !3779, file: !80, line: 586, baseType: !7, size: 1, offset: 515, flags: DIFlagBitField, extraData: i64 512)
!3827 = !DIDerivedType(tag: DW_TAG_member, name: "may_skip_resume", scope: !3779, file: !80, line: 587, baseType: !7, size: 1, offset: 516, flags: DIFlagBitField, extraData: i64 512)
!3828 = !DIDerivedType(tag: DW_TAG_member, name: "suspend_timer", scope: !3779, file: !80, line: 592, baseType: !1309, size: 512, offset: 576)
!3829 = !DIDerivedType(tag: DW_TAG_member, name: "timer_expires", scope: !3779, file: !80, line: 593, baseType: !443, size: 64, offset: 1088)
!3830 = !DIDerivedType(tag: DW_TAG_member, name: "work", scope: !3779, file: !80, line: 594, baseType: !1971, size: 256, offset: 1152)
!3831 = !DIDerivedType(tag: DW_TAG_member, name: "wait_queue", scope: !3779, file: !80, line: 595, baseType: !1493, size: 128, offset: 1408)
!3832 = !DIDerivedType(tag: DW_TAG_member, name: "wakeirq", scope: !3779, file: !80, line: 596, baseType: !3806, size: 64, offset: 1536)
!3833 = !DIDerivedType(tag: DW_TAG_member, name: "usage_count", scope: !3779, file: !80, line: 597, baseType: !781, size: 32, offset: 1600)
!3834 = !DIDerivedType(tag: DW_TAG_member, name: "child_count", scope: !3779, file: !80, line: 598, baseType: !781, size: 32, offset: 1632)
!3835 = !DIDerivedType(tag: DW_TAG_member, name: "disable_depth", scope: !3779, file: !80, line: 599, baseType: !7, size: 3, offset: 1664, flags: DIFlagBitField, extraData: i64 1664)
!3836 = !DIDerivedType(tag: DW_TAG_member, name: "idle_notification", scope: !3779, file: !80, line: 600, baseType: !7, size: 1, offset: 1667, flags: DIFlagBitField, extraData: i64 1664)
!3837 = !DIDerivedType(tag: DW_TAG_member, name: "request_pending", scope: !3779, file: !80, line: 601, baseType: !7, size: 1, offset: 1668, flags: DIFlagBitField, extraData: i64 1664)
!3838 = !DIDerivedType(tag: DW_TAG_member, name: "deferred_resume", scope: !3779, file: !80, line: 602, baseType: !7, size: 1, offset: 1669, flags: DIFlagBitField, extraData: i64 1664)
!3839 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_auto", scope: !3779, file: !80, line: 603, baseType: !7, size: 1, offset: 1670, flags: DIFlagBitField, extraData: i64 1664)
!3840 = !DIDerivedType(tag: DW_TAG_member, name: "ignore_children", scope: !3779, file: !80, line: 604, baseType: !514, size: 1, offset: 1671, flags: DIFlagBitField, extraData: i64 1664)
!3841 = !DIDerivedType(tag: DW_TAG_member, name: "no_callbacks", scope: !3779, file: !80, line: 605, baseType: !7, size: 1, offset: 1672, flags: DIFlagBitField, extraData: i64 1664)
!3842 = !DIDerivedType(tag: DW_TAG_member, name: "irq_safe", scope: !3779, file: !80, line: 606, baseType: !7, size: 1, offset: 1673, flags: DIFlagBitField, extraData: i64 1664)
!3843 = !DIDerivedType(tag: DW_TAG_member, name: "use_autosuspend", scope: !3779, file: !80, line: 607, baseType: !7, size: 1, offset: 1674, flags: DIFlagBitField, extraData: i64 1664)
!3844 = !DIDerivedType(tag: DW_TAG_member, name: "timer_autosuspends", scope: !3779, file: !80, line: 608, baseType: !7, size: 1, offset: 1675, flags: DIFlagBitField, extraData: i64 1664)
!3845 = !DIDerivedType(tag: DW_TAG_member, name: "memalloc_noio", scope: !3779, file: !80, line: 609, baseType: !7, size: 1, offset: 1676, flags: DIFlagBitField, extraData: i64 1664)
!3846 = !DIDerivedType(tag: DW_TAG_member, name: "links_count", scope: !3779, file: !80, line: 610, baseType: !7, size: 32, offset: 1696)
!3847 = !DIDerivedType(tag: DW_TAG_member, name: "request", scope: !3779, file: !80, line: 611, baseType: !79, size: 32, offset: 1728)
!3848 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_status", scope: !3779, file: !80, line: 612, baseType: !87, size: 32, offset: 1760)
!3849 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_error", scope: !3779, file: !80, line: 613, baseType: !169, size: 32, offset: 1792)
!3850 = !DIDerivedType(tag: DW_TAG_member, name: "autosuspend_delay", scope: !3779, file: !80, line: 614, baseType: !169, size: 32, offset: 1824)
!3851 = !DIDerivedType(tag: DW_TAG_member, name: "last_busy", scope: !3779, file: !80, line: 615, baseType: !443, size: 64, offset: 1856)
!3852 = !DIDerivedType(tag: DW_TAG_member, name: "active_time", scope: !3779, file: !80, line: 616, baseType: !443, size: 64, offset: 1920)
!3853 = !DIDerivedType(tag: DW_TAG_member, name: "suspended_time", scope: !3779, file: !80, line: 617, baseType: !443, size: 64, offset: 1984)
!3854 = !DIDerivedType(tag: DW_TAG_member, name: "accounting_timestamp", scope: !3779, file: !80, line: 618, baseType: !443, size: 64, offset: 2048)
!3855 = !DIDerivedType(tag: DW_TAG_member, name: "subsys_data", scope: !3779, file: !80, line: 620, baseType: !3856, size: 64, offset: 2112)
!3856 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3857, size: 64)
!3857 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pm_subsys_data", file: !80, line: 536, size: 256, elements: !3858)
!3858 = !{!3859, !3860, !3861, !3862}
!3859 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3857, file: !80, line: 537, baseType: !357)
!3860 = !DIDerivedType(tag: DW_TAG_member, name: "refcount", scope: !3857, file: !80, line: 538, baseType: !7, size: 32)
!3861 = !DIDerivedType(tag: DW_TAG_member, name: "clock_list", scope: !3857, file: !80, line: 540, baseType: !119, size: 128, offset: 64)
!3862 = !DIDerivedType(tag: DW_TAG_member, name: "domain_data", scope: !3857, file: !80, line: 543, baseType: !3863, size: 64, offset: 192)
!3863 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3864, size: 64)
!3864 = !DICompositeType(tag: DW_TAG_structure_type, name: "pm_domain_data", file: !80, line: 534, flags: DIFlagFwdDecl)
!3865 = !DIDerivedType(tag: DW_TAG_member, name: "set_latency_tolerance", scope: !3779, file: !80, line: 621, baseType: !3866, size: 64, offset: 2176)
!3866 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3867, size: 64)
!3867 = !DISubroutineType(types: !3868)
!3868 = !{null, !3620, !1457}
!3869 = !DIDerivedType(tag: DW_TAG_member, name: "qos", scope: !3779, file: !80, line: 622, baseType: !3870, size: 64, offset: 2240)
!3870 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3871, size: 64)
!3871 = !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pm_qos", file: !80, line: 622, flags: DIFlagFwdDecl)
!3872 = !DIDerivedType(tag: DW_TAG_member, name: "pm_domain", scope: !3320, file: !73, line: 486, baseType: !3873, size: 64, offset: 4096)
!3873 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3874, size: 64)
!3874 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pm_domain", file: !80, line: 642, size: 1792, elements: !3875)
!3875 = !{!3876, !3877, !3878, !3882, !3883, !3884}
!3876 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !3874, file: !80, line: 643, baseType: !3648, size: 1472)
!3877 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !3874, file: !80, line: 644, baseType: !3651, size: 64, offset: 1472)
!3878 = !DIDerivedType(tag: DW_TAG_member, name: "detach", scope: !3874, file: !80, line: 645, baseType: !3879, size: 64, offset: 1536)
!3879 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3880, size: 64)
!3880 = !DISubroutineType(types: !3881)
!3881 = !{null, !3620, !514}
!3882 = !DIDerivedType(tag: DW_TAG_member, name: "activate", scope: !3874, file: !80, line: 646, baseType: !3651, size: 64, offset: 1600)
!3883 = !DIDerivedType(tag: DW_TAG_member, name: "sync", scope: !3874, file: !80, line: 647, baseType: !3642, size: 64, offset: 1664)
!3884 = !DIDerivedType(tag: DW_TAG_member, name: "dismiss", scope: !3874, file: !80, line: 648, baseType: !3642, size: 64, offset: 1728)
!3885 = !DIDerivedType(tag: DW_TAG_member, name: "msi_domain", scope: !3320, file: !73, line: 493, baseType: !3886, size: 64, offset: 4160)
!3886 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3887, size: 64)
!3887 = !DICompositeType(tag: DW_TAG_structure_type, name: "irq_domain", file: !3888, line: 13, flags: DIFlagFwdDecl)
!3888 = !DIFile(filename: "./arch/x86/include/asm/x86_init.h", directory: "/home/lizy2001/genbc/linux")
!3889 = !DIDerivedType(tag: DW_TAG_member, name: "msi_list", scope: !3320, file: !73, line: 499, baseType: !119, size: 128, offset: 4224)
!3890 = !DIDerivedType(tag: DW_TAG_member, name: "dma_ops", scope: !3320, file: !73, line: 502, baseType: !3891, size: 64, offset: 4352)
!3891 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3892, size: 64)
!3892 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3893)
!3893 = !DICompositeType(tag: DW_TAG_structure_type, name: "dma_map_ops", file: !73, line: 502, flags: DIFlagFwdDecl)
!3894 = !DIDerivedType(tag: DW_TAG_member, name: "dma_mask", scope: !3320, file: !73, line: 504, baseType: !3895, size: 64, offset: 4416)
!3895 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !443, size: 64)
!3896 = !DIDerivedType(tag: DW_TAG_member, name: "coherent_dma_mask", scope: !3320, file: !73, line: 505, baseType: !443, size: 64, offset: 4480)
!3897 = !DIDerivedType(tag: DW_TAG_member, name: "bus_dma_limit", scope: !3320, file: !73, line: 510, baseType: !443, size: 64, offset: 4544)
!3898 = !DIDerivedType(tag: DW_TAG_member, name: "dma_range_map", scope: !3320, file: !73, line: 511, baseType: !3899, size: 64, offset: 4608)
!3899 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3900, size: 64)
!3900 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3901)
!3901 = !DICompositeType(tag: DW_TAG_structure_type, name: "bus_dma_region", file: !73, line: 511, flags: DIFlagFwdDecl)
!3902 = !DIDerivedType(tag: DW_TAG_member, name: "dma_parms", scope: !3320, file: !73, line: 513, baseType: !3903, size: 64, offset: 4672)
!3903 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3904, size: 64)
!3904 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_dma_parameters", file: !73, line: 288, size: 128, elements: !3905)
!3905 = !{!3906, !3907}
!3906 = !DIDerivedType(tag: DW_TAG_member, name: "max_segment_size", scope: !3904, file: !73, line: 293, baseType: !7, size: 32)
!3907 = !DIDerivedType(tag: DW_TAG_member, name: "segment_boundary_mask", scope: !3904, file: !73, line: 294, baseType: !205, size: 64, offset: 64)
!3908 = !DIDerivedType(tag: DW_TAG_member, name: "dma_pools", scope: !3320, file: !73, line: 515, baseType: !119, size: 128, offset: 4736)
!3909 = !DIDerivedType(tag: DW_TAG_member, name: "archdata", scope: !3320, file: !73, line: 526, baseType: !3910, offset: 4864)
!3910 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_archdata", file: !3911, line: 5, elements: !371)
!3911 = !DIFile(filename: "./arch/x86/include/asm/device.h", directory: "/home/lizy2001/genbc/linux")
!3912 = !DIDerivedType(tag: DW_TAG_member, name: "of_node", scope: !3320, file: !73, line: 528, baseType: !3913, size: 64, offset: 4864)
!3913 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3914, size: 64)
!3914 = !DICompositeType(tag: DW_TAG_structure_type, name: "device_node", file: !3915, line: 14, flags: DIFlagFwdDecl)
!3915 = !DIFile(filename: "./include/linux/arch_topology.h", directory: "/home/lizy2001/genbc/linux")
!3916 = !DIDerivedType(tag: DW_TAG_member, name: "fwnode", scope: !3320, file: !73, line: 529, baseType: !3917, size: 64, offset: 4928)
!3917 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3918, size: 64)
!3918 = !DICompositeType(tag: DW_TAG_structure_type, name: "fwnode_handle", file: !3679, line: 22, flags: DIFlagFwdDecl)
!3919 = !DIDerivedType(tag: DW_TAG_member, name: "devt", scope: !3320, file: !73, line: 534, baseType: !537, size: 32, offset: 4992)
!3920 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !3320, file: !73, line: 535, baseType: !440, size: 32, offset: 5024)
!3921 = !DIDerivedType(tag: DW_TAG_member, name: "devres_lock", scope: !3320, file: !73, line: 537, baseType: !357, offset: 5056)
!3922 = !DIDerivedType(tag: DW_TAG_member, name: "devres_head", scope: !3320, file: !73, line: 538, baseType: !119, size: 128, offset: 5056)
!3923 = !DIDerivedType(tag: DW_TAG_member, name: "class", scope: !3320, file: !73, line: 540, baseType: !3924, size: 64, offset: 5184)
!3924 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3925, size: 64)
!3925 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "class", file: !3926, line: 54, size: 960, elements: !3927)
!3926 = !DIFile(filename: "./include/linux/device/class.h", directory: "/home/lizy2001/genbc/linux")
!3927 = !{!3928, !3929, !3930, !3931, !3932, !3933, !3934, !3938, !3942, !3943, !3944, !3945, !3949, !3953, !3954}
!3928 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3925, file: !3926, line: 55, baseType: !190, size: 64)
!3929 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !3925, file: !3926, line: 56, baseType: !662, size: 64, offset: 64)
!3930 = !DIDerivedType(tag: DW_TAG_member, name: "class_groups", scope: !3925, file: !3926, line: 58, baseType: !3400, size: 64, offset: 128)
!3931 = !DIDerivedType(tag: DW_TAG_member, name: "dev_groups", scope: !3925, file: !3926, line: 59, baseType: !3400, size: 64, offset: 192)
!3932 = !DIDerivedType(tag: DW_TAG_member, name: "dev_kobj", scope: !3925, file: !3926, line: 60, baseType: !3329, size: 64, offset: 256)
!3933 = !DIDerivedType(tag: DW_TAG_member, name: "dev_uevent", scope: !3925, file: !3926, line: 62, baseType: !3633, size: 64, offset: 320)
!3934 = !DIDerivedType(tag: DW_TAG_member, name: "devnode", scope: !3925, file: !3926, line: 63, baseType: !3935, size: 64, offset: 384)
!3935 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3936, size: 64)
!3936 = !DISubroutineType(types: !3937)
!3937 = !{!509, !3620, !3640}
!3938 = !DIDerivedType(tag: DW_TAG_member, name: "class_release", scope: !3925, file: !3926, line: 65, baseType: !3939, size: 64, offset: 448)
!3939 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3940, size: 64)
!3940 = !DISubroutineType(types: !3941)
!3941 = !{null, !3924}
!3942 = !DIDerivedType(tag: DW_TAG_member, name: "dev_release", scope: !3925, file: !3926, line: 66, baseType: !3642, size: 64, offset: 512)
!3943 = !DIDerivedType(tag: DW_TAG_member, name: "shutdown_pre", scope: !3925, file: !3926, line: 68, baseType: !3651, size: 64, offset: 576)
!3944 = !DIDerivedType(tag: DW_TAG_member, name: "ns_type", scope: !3925, file: !3926, line: 70, baseType: !3436, size: 64, offset: 640)
!3945 = !DIDerivedType(tag: DW_TAG_member, name: "namespace", scope: !3925, file: !3926, line: 71, baseType: !3946, size: 64, offset: 704)
!3946 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3947, size: 64)
!3947 = !DISubroutineType(types: !3948)
!3948 = !{!2141, !3620}
!3949 = !DIDerivedType(tag: DW_TAG_member, name: "get_ownership", scope: !3925, file: !3926, line: 73, baseType: !3950, size: 64, offset: 768)
!3950 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3951, size: 64)
!3951 = !DISubroutineType(types: !3952)
!3952 = !{null, !3620, !3468, !3469}
!3953 = !DIDerivedType(tag: DW_TAG_member, name: "pm", scope: !3925, file: !3926, line: 75, baseType: !3646, size: 64, offset: 832)
!3954 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !3925, file: !3926, line: 77, baseType: !3761, size: 64, offset: 896)
!3955 = !DIDerivedType(tag: DW_TAG_member, name: "groups", scope: !3320, file: !73, line: 541, baseType: !3400, size: 64, offset: 5248)
!3956 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !3320, file: !73, line: 543, baseType: !3642, size: 64, offset: 5312)
!3957 = !DIDerivedType(tag: DW_TAG_member, name: "iommu_group", scope: !3320, file: !73, line: 544, baseType: !3958, size: 64, offset: 5376)
!3958 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3959, size: 64)
!3959 = !DICompositeType(tag: DW_TAG_structure_type, name: "iommu_group", file: !73, line: 45, flags: DIFlagFwdDecl)
!3960 = !DIDerivedType(tag: DW_TAG_member, name: "iommu", scope: !3320, file: !73, line: 545, baseType: !3961, size: 64, offset: 5440)
!3961 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3962, size: 64)
!3962 = !DICompositeType(tag: DW_TAG_structure_type, name: "dev_iommu", file: !73, line: 47, flags: DIFlagFwdDecl)
!3963 = !DIDerivedType(tag: DW_TAG_member, name: "offline_disabled", scope: !3320, file: !73, line: 547, baseType: !514, size: 1, offset: 5504, flags: DIFlagBitField, extraData: i64 5504)
!3964 = !DIDerivedType(tag: DW_TAG_member, name: "offline", scope: !3320, file: !73, line: 548, baseType: !514, size: 1, offset: 5505, flags: DIFlagBitField, extraData: i64 5504)
!3965 = !DIDerivedType(tag: DW_TAG_member, name: "of_node_reused", scope: !3320, file: !73, line: 549, baseType: !514, size: 1, offset: 5506, flags: DIFlagBitField, extraData: i64 5504)
!3966 = !DIDerivedType(tag: DW_TAG_member, name: "state_synced", scope: !3320, file: !73, line: 550, baseType: !514, size: 1, offset: 5507, flags: DIFlagBitField, extraData: i64 5504)
!3967 = !DIDerivedType(tag: DW_TAG_member, name: "h_list", scope: !186, file: !187, line: 194, baseType: !119, size: 128, offset: 9792)
!3968 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !186, file: !187, line: 195, baseType: !119, size: 128, offset: 9920)
!3969 = !DIDerivedType(tag: DW_TAG_member, name: "num_vals", scope: !186, file: !187, line: 197, baseType: !7, size: 32, offset: 10048)
!3970 = !DIDerivedType(tag: DW_TAG_member, name: "max_vals", scope: !186, file: !187, line: 198, baseType: !7, size: 32, offset: 10080)
!3971 = !DIDerivedType(tag: DW_TAG_member, name: "vals", scope: !186, file: !187, line: 199, baseType: !3972, size: 64, offset: 10112)
!3972 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3260, size: 64)
!3973 = !DIDerivedType(tag: DW_TAG_member, name: "devres_managed", scope: !186, file: !187, line: 201, baseType: !514, size: 8, offset: 10176)
!3974 = !DIDerivedType(tag: DW_TAG_member, name: "timestamp", scope: !186, file: !187, line: 203, baseType: !3975, size: 192, offset: 10240)
!3975 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1317, size: 192, elements: !683)
!3976 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !180, file: !94, line: 526, baseType: !190, size: 64, offset: 256)
!3977 = !DIDerivedType(tag: DW_TAG_member, name: "registered", scope: !180, file: !94, line: 527, baseType: !514, size: 8, offset: 320)
!3978 = !DIDerivedType(tag: DW_TAG_member, name: "reports", scope: !180, file: !94, line: 528, baseType: !119, size: 128, offset: 384)
!3979 = !DIDerivedType(tag: DW_TAG_member, name: "application", scope: !180, file: !94, line: 529, baseType: !7, size: 32, offset: 512)
!3980 = !DIDerivedType(tag: DW_TAG_member, name: "dpad", scope: !131, file: !94, line: 471, baseType: !149, size: 16, offset: 832)
!3981 = !{!3982}
!3982 = !DISubrange(count: 256)
!3983 = !DIDerivedType(tag: DW_TAG_member, name: "maxfield", scope: !116, file: !94, line: 483, baseType: !7, size: 32, offset: 16768)
!3984 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !116, file: !94, line: 484, baseType: !7, size: 32, offset: 16800)
!3985 = !DIDerivedType(tag: DW_TAG_member, name: "device", scope: !116, file: !94, line: 485, baseType: !3986, size: 64, offset: 16832)
!3986 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3987, size: 64)
!3987 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hid_device", file: !94, line: 547, size: 60160, elements: !3988)
!3988 = !{!3989, !3991, !3992, !3993, !3994, !4002, !4003, !4004, !4005, !4006, !4007, !4008, !4009, !4010, !4011, !4012, !4020, !4021, !4028, !4029, !4114, !4144, !4145, !4146, !4147, !4148, !4149, !4150, !4151, !4152, !4153, !4154, !4156, !4157, !4158, !4159, !4163, !4164, !4168, !4169, !4170, !4171, !4172, !4173, !4174, !4175}
!3989 = !DIDerivedType(tag: DW_TAG_member, name: "dev_rdesc", scope: !3987, file: !94, line: 548, baseType: !3990, size: 64)
!3990 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !152, size: 64)
!3991 = !DIDerivedType(tag: DW_TAG_member, name: "dev_rsize", scope: !3987, file: !94, line: 549, baseType: !7, size: 32, offset: 64)
!3992 = !DIDerivedType(tag: DW_TAG_member, name: "rdesc", scope: !3987, file: !94, line: 550, baseType: !3990, size: 64, offset: 128)
!3993 = !DIDerivedType(tag: DW_TAG_member, name: "rsize", scope: !3987, file: !94, line: 551, baseType: !7, size: 32, offset: 192)
!3994 = !DIDerivedType(tag: DW_TAG_member, name: "collection", scope: !3987, file: !94, line: 552, baseType: !3995, size: 64, offset: 256)
!3995 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3996, size: 64)
!3996 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hid_collection", file: !94, line: 424, size: 128, elements: !3997)
!3997 = !{!3998, !3999, !4000, !4001}
!3998 = !DIDerivedType(tag: DW_TAG_member, name: "parent_idx", scope: !3996, file: !94, line: 425, baseType: !169, size: 32)
!3999 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !3996, file: !94, line: 426, baseType: !7, size: 32, offset: 32)
!4000 = !DIDerivedType(tag: DW_TAG_member, name: "usage", scope: !3996, file: !94, line: 427, baseType: !7, size: 32, offset: 64)
!4001 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !3996, file: !94, line: 428, baseType: !7, size: 32, offset: 96)
!4002 = !DIDerivedType(tag: DW_TAG_member, name: "collection_size", scope: !3987, file: !94, line: 553, baseType: !7, size: 32, offset: 320)
!4003 = !DIDerivedType(tag: DW_TAG_member, name: "maxcollection", scope: !3987, file: !94, line: 554, baseType: !7, size: 32, offset: 352)
!4004 = !DIDerivedType(tag: DW_TAG_member, name: "maxapplication", scope: !3987, file: !94, line: 555, baseType: !7, size: 32, offset: 384)
!4005 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !3987, file: !94, line: 556, baseType: !149, size: 16, offset: 416)
!4006 = !DIDerivedType(tag: DW_TAG_member, name: "group", scope: !3987, file: !94, line: 557, baseType: !149, size: 16, offset: 432)
!4007 = !DIDerivedType(tag: DW_TAG_member, name: "vendor", scope: !3987, file: !94, line: 558, baseType: !239, size: 32, offset: 448)
!4008 = !DIDerivedType(tag: DW_TAG_member, name: "product", scope: !3987, file: !94, line: 559, baseType: !239, size: 32, offset: 480)
!4009 = !DIDerivedType(tag: DW_TAG_member, name: "version", scope: !3987, file: !94, line: 560, baseType: !239, size: 32, offset: 512)
!4010 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !3987, file: !94, line: 561, baseType: !93, size: 32, offset: 544)
!4011 = !DIDerivedType(tag: DW_TAG_member, name: "country", scope: !3987, file: !94, line: 562, baseType: !7, size: 32, offset: 576)
!4012 = !DIDerivedType(tag: DW_TAG_member, name: "report_enum", scope: !3987, file: !94, line: 563, baseType: !4013, size: 49728, offset: 640)
!4013 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4014, size: 49728, elements: !683)
!4014 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hid_report_enum", file: !94, line: 490, size: 16576, elements: !4015)
!4015 = !{!4016, !4017, !4018}
!4016 = !DIDerivedType(tag: DW_TAG_member, name: "numbered", scope: !4014, file: !94, line: 491, baseType: !7, size: 32)
!4017 = !DIDerivedType(tag: DW_TAG_member, name: "report_list", scope: !4014, file: !94, line: 492, baseType: !119, size: 128, offset: 64)
!4018 = !DIDerivedType(tag: DW_TAG_member, name: "report_id_hash", scope: !4014, file: !94, line: 493, baseType: !4019, size: 16384, offset: 192)
!4019 = !DICompositeType(tag: DW_TAG_array_type, baseType: !115, size: 16384, elements: !3981)
!4020 = !DIDerivedType(tag: DW_TAG_member, name: "led_work", scope: !3987, file: !94, line: 564, baseType: !1971, size: 256, offset: 50368)
!4021 = !DIDerivedType(tag: DW_TAG_member, name: "driver_input_lock", scope: !3987, file: !94, line: 566, baseType: !4022, size: 192, offset: 50624)
!4022 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "semaphore", file: !4023, line: 15, size: 192, elements: !4024)
!4023 = !DIFile(filename: "./include/linux/semaphore.h", directory: "/home/lizy2001/genbc/linux")
!4024 = !{!4025, !4026, !4027}
!4025 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !4022, file: !4023, line: 16, baseType: !807)
!4026 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !4022, file: !4023, line: 17, baseType: !7, size: 32)
!4027 = !DIDerivedType(tag: DW_TAG_member, name: "wait_list", scope: !4022, file: !4023, line: 18, baseType: !119, size: 128, offset: 64)
!4028 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !3987, file: !94, line: 567, baseType: !3320, size: 5568, offset: 50816)
!4029 = !DIDerivedType(tag: DW_TAG_member, name: "driver", scope: !3987, file: !94, line: 568, baseType: !4030, size: 64, offset: 56384)
!4030 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4031, size: 64)
!4031 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hid_driver", file: !94, line: 738, size: 2432, elements: !4032)
!4032 = !{!4033, !4034, !4044, !4045, !4046, !4050, !4054, !4058, !4064, !4069, !4077, !4081, !4085, !4089, !4095, !4096, !4100, !4104, !4108, !4112, !4113}
!4033 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !4031, file: !94, line: 739, baseType: !509, size: 64)
!4034 = !DIDerivedType(tag: DW_TAG_member, name: "id_table", scope: !4031, file: !94, line: 740, baseType: !4035, size: 64, offset: 64)
!4035 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4036, size: 64)
!4036 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4037)
!4037 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hid_device_id", file: !3280, line: 166, size: 192, elements: !4038)
!4038 = !{!4039, !4040, !4041, !4042, !4043}
!4039 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !4037, file: !3280, line: 167, baseType: !149, size: 16)
!4040 = !DIDerivedType(tag: DW_TAG_member, name: "group", scope: !4037, file: !3280, line: 168, baseType: !149, size: 16, offset: 16)
!4041 = !DIDerivedType(tag: DW_TAG_member, name: "vendor", scope: !4037, file: !3280, line: 169, baseType: !239, size: 32, offset: 32)
!4042 = !DIDerivedType(tag: DW_TAG_member, name: "product", scope: !4037, file: !3280, line: 170, baseType: !239, size: 32, offset: 64)
!4043 = !DIDerivedType(tag: DW_TAG_member, name: "driver_data", scope: !4037, file: !3280, line: 171, baseType: !3283, size: 64, offset: 128)
!4044 = !DIDerivedType(tag: DW_TAG_member, name: "dyn_list", scope: !4031, file: !94, line: 742, baseType: !119, size: 128, offset: 128)
!4045 = !DIDerivedType(tag: DW_TAG_member, name: "dyn_lock", scope: !4031, file: !94, line: 743, baseType: !357, offset: 256)
!4046 = !DIDerivedType(tag: DW_TAG_member, name: "match", scope: !4031, file: !94, line: 745, baseType: !4047, size: 64, offset: 256)
!4047 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4048, size: 64)
!4048 = !DISubroutineType(types: !4049)
!4049 = !{!514, !3986, !514}
!4050 = !DIDerivedType(tag: DW_TAG_member, name: "probe", scope: !4031, file: !94, line: 746, baseType: !4051, size: 64, offset: 320)
!4051 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4052, size: 64)
!4052 = !DISubroutineType(types: !4053)
!4053 = !{!169, !3986, !4035}
!4054 = !DIDerivedType(tag: DW_TAG_member, name: "remove", scope: !4031, file: !94, line: 747, baseType: !4055, size: 64, offset: 384)
!4055 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4056, size: 64)
!4056 = !DISubroutineType(types: !4057)
!4057 = !{null, !3986}
!4058 = !DIDerivedType(tag: DW_TAG_member, name: "report_table", scope: !4031, file: !94, line: 749, baseType: !4059, size: 64, offset: 448)
!4059 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4060, size: 64)
!4060 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4061)
!4061 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hid_report_id", file: !94, line: 688, size: 32, elements: !4062)
!4062 = !{!4063}
!4063 = !DIDerivedType(tag: DW_TAG_member, name: "report_type", scope: !4061, file: !94, line: 689, baseType: !239, size: 32)
!4064 = !DIDerivedType(tag: DW_TAG_member, name: "raw_event", scope: !4031, file: !94, line: 750, baseType: !4065, size: 64, offset: 512)
!4065 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4066, size: 64)
!4066 = !DISubroutineType(types: !4067)
!4067 = !{!169, !3986, !115, !4068, !169}
!4068 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1369, size: 64)
!4069 = !DIDerivedType(tag: DW_TAG_member, name: "usage_table", scope: !4031, file: !94, line: 752, baseType: !4070, size: 64, offset: 576)
!4070 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4071, size: 64)
!4071 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4072)
!4072 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hid_usage_id", file: !94, line: 691, size: 96, elements: !4073)
!4073 = !{!4074, !4075, !4076}
!4074 = !DIDerivedType(tag: DW_TAG_member, name: "usage_hid", scope: !4072, file: !94, line: 692, baseType: !239, size: 32)
!4075 = !DIDerivedType(tag: DW_TAG_member, name: "usage_type", scope: !4072, file: !94, line: 693, baseType: !239, size: 32, offset: 32)
!4076 = !DIDerivedType(tag: DW_TAG_member, name: "usage_code", scope: !4072, file: !94, line: 694, baseType: !239, size: 32, offset: 64)
!4077 = !DIDerivedType(tag: DW_TAG_member, name: "event", scope: !4031, file: !94, line: 753, baseType: !4078, size: 64, offset: 640)
!4078 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4079, size: 64)
!4079 = !DISubroutineType(types: !4080)
!4080 = !{!169, !3986, !130, !137, !168}
!4081 = !DIDerivedType(tag: DW_TAG_member, name: "report", scope: !4031, file: !94, line: 755, baseType: !4082, size: 64, offset: 704)
!4082 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4083, size: 64)
!4083 = !DISubroutineType(types: !4084)
!4084 = !{null, !3986, !115}
!4085 = !DIDerivedType(tag: DW_TAG_member, name: "report_fixup", scope: !4031, file: !94, line: 757, baseType: !4086, size: 64, offset: 768)
!4086 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4087, size: 64)
!4087 = !DISubroutineType(types: !4088)
!4088 = !{!3990, !3986, !3990, !244}
!4089 = !DIDerivedType(tag: DW_TAG_member, name: "input_mapping", scope: !4031, file: !94, line: 760, baseType: !4090, size: 64, offset: 832)
!4090 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4091, size: 64)
!4091 = !DISubroutineType(types: !4092)
!4092 = !{!169, !3986, !179, !130, !137, !4093, !739}
!4093 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4094, size: 64)
!4094 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !205, size: 64)
!4095 = !DIDerivedType(tag: DW_TAG_member, name: "input_mapped", scope: !4031, file: !94, line: 763, baseType: !4090, size: 64, offset: 896)
!4096 = !DIDerivedType(tag: DW_TAG_member, name: "input_configured", scope: !4031, file: !94, line: 766, baseType: !4097, size: 64, offset: 960)
!4097 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4098, size: 64)
!4098 = !DISubroutineType(types: !4099)
!4099 = !{!169, !3986, !179}
!4100 = !DIDerivedType(tag: DW_TAG_member, name: "feature_mapping", scope: !4031, file: !94, line: 768, baseType: !4101, size: 64, offset: 1024)
!4101 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4102, size: 64)
!4102 = !DISubroutineType(types: !4103)
!4103 = !{null, !3986, !130, !137}
!4104 = !DIDerivedType(tag: DW_TAG_member, name: "suspend", scope: !4031, file: !94, line: 772, baseType: !4105, size: 64, offset: 1088)
!4105 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4106, size: 64)
!4106 = !DISubroutineType(types: !4107)
!4107 = !{!169, !3986, !3732}
!4108 = !DIDerivedType(tag: DW_TAG_member, name: "resume", scope: !4031, file: !94, line: 773, baseType: !4109, size: 64, offset: 1152)
!4109 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4110, size: 64)
!4110 = !DISubroutineType(types: !4111)
!4111 = !{!169, !3986}
!4112 = !DIDerivedType(tag: DW_TAG_member, name: "reset_resume", scope: !4031, file: !94, line: 774, baseType: !4109, size: 64, offset: 1216)
!4113 = !DIDerivedType(tag: DW_TAG_member, name: "driver", scope: !4031, file: !94, line: 777, baseType: !3692, size: 1152, offset: 1280)
!4114 = !DIDerivedType(tag: DW_TAG_member, name: "ll_driver", scope: !3987, file: !94, line: 570, baseType: !4115, size: 64, offset: 56448)
!4115 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4116, size: 64)
!4116 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hid_ll_driver", file: !94, line: 798, size: 704, elements: !4117)
!4117 = !{!4118, !4119, !4120, !4121, !4122, !4126, !4127, !4131, !4132, !4136, !4140}
!4118 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !4116, file: !94, line: 799, baseType: !4109, size: 64)
!4119 = !DIDerivedType(tag: DW_TAG_member, name: "stop", scope: !4116, file: !94, line: 800, baseType: !4055, size: 64, offset: 64)
!4120 = !DIDerivedType(tag: DW_TAG_member, name: "open", scope: !4116, file: !94, line: 802, baseType: !4109, size: 64, offset: 128)
!4121 = !DIDerivedType(tag: DW_TAG_member, name: "close", scope: !4116, file: !94, line: 803, baseType: !4055, size: 64, offset: 192)
!4122 = !DIDerivedType(tag: DW_TAG_member, name: "power", scope: !4116, file: !94, line: 805, baseType: !4123, size: 64, offset: 256)
!4123 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4124, size: 64)
!4124 = !DISubroutineType(types: !4125)
!4125 = !{!169, !3986, !169}
!4126 = !DIDerivedType(tag: DW_TAG_member, name: "parse", scope: !4116, file: !94, line: 807, baseType: !4109, size: 64, offset: 320)
!4127 = !DIDerivedType(tag: DW_TAG_member, name: "request", scope: !4116, file: !94, line: 809, baseType: !4128, size: 64, offset: 384)
!4128 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4129, size: 64)
!4129 = !DISubroutineType(types: !4130)
!4130 = !{null, !3986, !115, !169}
!4131 = !DIDerivedType(tag: DW_TAG_member, name: "wait", scope: !4116, file: !94, line: 812, baseType: !4109, size: 64, offset: 448)
!4132 = !DIDerivedType(tag: DW_TAG_member, name: "raw_request", scope: !4116, file: !94, line: 814, baseType: !4133, size: 64, offset: 512)
!4133 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4134, size: 64)
!4134 = !DISubroutineType(types: !4135)
!4135 = !{!169, !3986, !153, !3990, !604, !153, !169}
!4136 = !DIDerivedType(tag: DW_TAG_member, name: "output_report", scope: !4116, file: !94, line: 818, baseType: !4137, size: 64, offset: 576)
!4137 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4138, size: 64)
!4138 = !DISubroutineType(types: !4139)
!4139 = !{!169, !3986, !3990, !604}
!4140 = !DIDerivedType(tag: DW_TAG_member, name: "idle", scope: !4116, file: !94, line: 820, baseType: !4141, size: 64, offset: 640)
!4141 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4142, size: 64)
!4142 = !DISubroutineType(types: !4143)
!4143 = !{!169, !3986, !169, !169, !169}
!4144 = !DIDerivedType(tag: DW_TAG_member, name: "ll_open_lock", scope: !3987, file: !94, line: 571, baseType: !343, size: 192, offset: 56512)
!4145 = !DIDerivedType(tag: DW_TAG_member, name: "ll_open_count", scope: !3987, file: !94, line: 572, baseType: !7, size: 32, offset: 56704)
!4146 = !DIDerivedType(tag: DW_TAG_member, name: "status", scope: !3987, file: !94, line: 590, baseType: !205, size: 64, offset: 56768)
!4147 = !DIDerivedType(tag: DW_TAG_member, name: "claimed", scope: !3987, file: !94, line: 591, baseType: !7, size: 32, offset: 56832)
!4148 = !DIDerivedType(tag: DW_TAG_member, name: "quirks", scope: !3987, file: !94, line: 592, baseType: !7, size: 32, offset: 56864)
!4149 = !DIDerivedType(tag: DW_TAG_member, name: "io_started", scope: !3987, file: !94, line: 593, baseType: !514, size: 8, offset: 56896)
!4150 = !DIDerivedType(tag: DW_TAG_member, name: "inputs", scope: !3987, file: !94, line: 595, baseType: !119, size: 128, offset: 56960)
!4151 = !DIDerivedType(tag: DW_TAG_member, name: "hiddev", scope: !3987, file: !94, line: 596, baseType: !114, size: 64, offset: 57088)
!4152 = !DIDerivedType(tag: DW_TAG_member, name: "hidraw", scope: !3987, file: !94, line: 597, baseType: !114, size: 64, offset: 57152)
!4153 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3987, file: !94, line: 599, baseType: !3708, size: 1024, offset: 57216)
!4154 = !DIDerivedType(tag: DW_TAG_member, name: "phys", scope: !3987, file: !94, line: 600, baseType: !4155, size: 512, offset: 58240)
!4155 = !DICompositeType(tag: DW_TAG_array_type, baseType: !192, size: 512, elements: !1893)
!4156 = !DIDerivedType(tag: DW_TAG_member, name: "uniq", scope: !3987, file: !94, line: 601, baseType: !4155, size: 512, offset: 58752)
!4157 = !DIDerivedType(tag: DW_TAG_member, name: "driver_data", scope: !3987, file: !94, line: 603, baseType: !114, size: 64, offset: 59264)
!4158 = !DIDerivedType(tag: DW_TAG_member, name: "ff_init", scope: !3987, file: !94, line: 606, baseType: !4109, size: 64, offset: 59328)
!4159 = !DIDerivedType(tag: DW_TAG_member, name: "hiddev_connect", scope: !3987, file: !94, line: 609, baseType: !4160, size: 64, offset: 59392)
!4160 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4161, size: 64)
!4161 = !DISubroutineType(types: !4162)
!4162 = !{!169, !3986, !7}
!4163 = !DIDerivedType(tag: DW_TAG_member, name: "hiddev_disconnect", scope: !3987, file: !94, line: 610, baseType: !4055, size: 64, offset: 59456)
!4164 = !DIDerivedType(tag: DW_TAG_member, name: "hiddev_hid_event", scope: !3987, file: !94, line: 611, baseType: !4165, size: 64, offset: 59520)
!4165 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4166, size: 64)
!4166 = !DISubroutineType(types: !4167)
!4167 = !{null, !3986, !130, !137, !168}
!4168 = !DIDerivedType(tag: DW_TAG_member, name: "hiddev_report_event", scope: !3987, file: !94, line: 613, baseType: !4082, size: 64, offset: 59584)
!4169 = !DIDerivedType(tag: DW_TAG_member, name: "debug", scope: !3987, file: !94, line: 616, baseType: !150, size: 16, offset: 59648)
!4170 = !DIDerivedType(tag: DW_TAG_member, name: "debug_dir", scope: !3987, file: !94, line: 617, baseType: !407, size: 64, offset: 59712)
!4171 = !DIDerivedType(tag: DW_TAG_member, name: "debug_rdesc", scope: !3987, file: !94, line: 618, baseType: !407, size: 64, offset: 59776)
!4172 = !DIDerivedType(tag: DW_TAG_member, name: "debug_events", scope: !3987, file: !94, line: 619, baseType: !407, size: 64, offset: 59840)
!4173 = !DIDerivedType(tag: DW_TAG_member, name: "debug_list", scope: !3987, file: !94, line: 620, baseType: !119, size: 128, offset: 59904)
!4174 = !DIDerivedType(tag: DW_TAG_member, name: "debug_list_lock", scope: !3987, file: !94, line: 621, baseType: !357, offset: 60032)
!4175 = !DIDerivedType(tag: DW_TAG_member, name: "debug_wait", scope: !3987, file: !94, line: 622, baseType: !1493, size: 128, offset: 60032)
!4176 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4177, size: 64)
!4177 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hiddev", file: !4178, line: 23, size: 704, elements: !4179)
!4178 = !DIFile(filename: "./include/linux/hiddev.h", directory: "/home/lizy2001/genbc/linux")
!4179 = !{!4180, !4181, !4182, !4183, !4184, !4185, !4186, !4187, !4188}
!4180 = !DIDerivedType(tag: DW_TAG_member, name: "minor", scope: !4177, file: !4178, line: 24, baseType: !169, size: 32)
!4181 = !DIDerivedType(tag: DW_TAG_member, name: "exist", scope: !4177, file: !4178, line: 25, baseType: !169, size: 32, offset: 32)
!4182 = !DIDerivedType(tag: DW_TAG_member, name: "open", scope: !4177, file: !4178, line: 26, baseType: !169, size: 32, offset: 64)
!4183 = !DIDerivedType(tag: DW_TAG_member, name: "existancelock", scope: !4177, file: !4178, line: 27, baseType: !343, size: 192, offset: 128)
!4184 = !DIDerivedType(tag: DW_TAG_member, name: "wait", scope: !4177, file: !4178, line: 28, baseType: !1493, size: 128, offset: 320)
!4185 = !DIDerivedType(tag: DW_TAG_member, name: "hid", scope: !4177, file: !4178, line: 29, baseType: !3986, size: 64, offset: 448)
!4186 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !4177, file: !4178, line: 30, baseType: !119, size: 128, offset: 512)
!4187 = !DIDerivedType(tag: DW_TAG_member, name: "list_lock", scope: !4177, file: !4178, line: 31, baseType: !357, offset: 640)
!4188 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !4177, file: !4178, line: 32, baseType: !514, size: 8, offset: 640)
!4189 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4190, size: 64)
!4190 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hidraw", file: !4191, line: 11, size: 512, elements: !4192)
!4191 = !DIFile(filename: "./include/linux/hidraw.h", directory: "/home/lizy2001/genbc/linux")
!4192 = !{!4193, !4194, !4195, !4196, !4197, !4198, !4199, !4200}
!4193 = !DIDerivedType(tag: DW_TAG_member, name: "minor", scope: !4190, file: !4191, line: 12, baseType: !7, size: 32)
!4194 = !DIDerivedType(tag: DW_TAG_member, name: "exist", scope: !4190, file: !4191, line: 13, baseType: !169, size: 32, offset: 32)
!4195 = !DIDerivedType(tag: DW_TAG_member, name: "open", scope: !4190, file: !4191, line: 14, baseType: !169, size: 32, offset: 64)
!4196 = !DIDerivedType(tag: DW_TAG_member, name: "wait", scope: !4190, file: !4191, line: 15, baseType: !1493, size: 128, offset: 128)
!4197 = !DIDerivedType(tag: DW_TAG_member, name: "hid", scope: !4190, file: !4191, line: 16, baseType: !3986, size: 64, offset: 256)
!4198 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !4190, file: !4191, line: 17, baseType: !3620, size: 64, offset: 320)
!4199 = !DIDerivedType(tag: DW_TAG_member, name: "list_lock", scope: !4190, file: !4191, line: 18, baseType: !357, offset: 384)
!4200 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !4190, file: !4191, line: 19, baseType: !119, size: 128, offset: 384)
!4201 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4202, size: 64)
!4202 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hid_dynid", file: !3, line: 2123, size: 320, elements: !4203)
!4203 = !{!4204, !4205}
!4204 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !4202, file: !3, line: 2124, baseType: !119, size: 128)
!4205 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !4202, file: !3, line: 2125, baseType: !4037, size: 192, offset: 128)
!4206 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4207, size: 64)
!4207 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !122)
!4208 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1457, size: 64)
!4209 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4210, size: 64)
!4210 = !DIDerivedType(tag: DW_TAG_typedef, name: "__le16", file: !2915, line: 29, baseType: !149)
!4211 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4212, size: 64)
!4212 = !DIDerivedType(tag: DW_TAG_typedef, name: "__le32", file: !2915, line: 31, baseType: !239)
!4213 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1233, size: 64)
!4214 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4215, size: 64)
!4215 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4207)
!4216 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4217, size: 64)
!4217 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !192)
!4218 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1244, size: 64)
!4219 = !{!0, !4220, !4270, !4275, !4280, !4282, !4287, !4292, !4354, !4361, !4365, !4367, !4370, !4375, !4377, !4379, !4384, !4386, !4391, !4393, !4398, !4401, !4406, !4411, !4413, !4417, !4420, !4435, !4438, !4440, !4443, !4445, !4448, !4450, !4452, !4454, !4456, !4469, !4472}
!4220 = !DIGlobalVariableExpression(var: !4221, expr: !DIExpression())
!4221 = distinct !DIGlobalVariable(name: "__param_debug", scope: !2, file: !3, line: 45, type: !4222, isLocal: true, isDefinition: true, align: 64)
!4222 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4223)
!4223 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernel_param", file: !4224, line: 69, size: 320, elements: !4225)
!4224 = !DIFile(filename: "./include/linux/moduleparam.h", directory: "/home/lizy2001/genbc/linux")
!4225 = !{!4226, !4227, !4228, !4244, !4246, !4248, !4249}
!4226 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !4223, file: !4224, line: 70, baseType: !190, size: 64)
!4227 = !DIDerivedType(tag: DW_TAG_member, name: "mod", scope: !4223, file: !4224, line: 71, baseType: !662, size: 64, offset: 64)
!4228 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !4223, file: !4224, line: 72, baseType: !4229, size: 64, offset: 128)
!4229 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4230, size: 64)
!4230 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4231)
!4231 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernel_param_ops", file: !4224, line: 47, size: 256, elements: !4232)
!4232 = !{!4233, !4234, !4239, !4243}
!4233 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !4231, file: !4224, line: 49, baseType: !7, size: 32)
!4234 = !DIDerivedType(tag: DW_TAG_member, name: "set", scope: !4231, file: !4224, line: 51, baseType: !4235, size: 64, offset: 64)
!4235 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4236, size: 64)
!4236 = !DISubroutineType(types: !4237)
!4237 = !{!169, !190, !4238}
!4238 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4222, size: 64)
!4239 = !DIDerivedType(tag: DW_TAG_member, name: "get", scope: !4231, file: !4224, line: 53, baseType: !4240, size: 64, offset: 128)
!4240 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4241, size: 64)
!4241 = !DISubroutineType(types: !4242)
!4242 = !{!169, !509, !4238}
!4243 = !DIDerivedType(tag: DW_TAG_member, name: "free", scope: !4231, file: !4224, line: 55, baseType: !491, size: 64, offset: 192)
!4244 = !DIDerivedType(tag: DW_TAG_member, name: "perm", scope: !4223, file: !4224, line: 73, baseType: !4245, size: 16, offset: 192)
!4245 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !333)
!4246 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !4223, file: !4224, line: 74, baseType: !4247, size: 8, offset: 208)
!4247 = !DIDerivedType(tag: DW_TAG_typedef, name: "s8", file: !334, line: 16, baseType: !144)
!4248 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !4223, file: !4224, line: 75, baseType: !1369, size: 8, offset: 216)
!4249 = !DIDerivedType(tag: DW_TAG_member, scope: !4223, file: !4224, line: 76, baseType: !4250, size: 64, offset: 256)
!4250 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4223, file: !4224, line: 76, size: 64, elements: !4251)
!4251 = !{!4252, !4253, !4260}
!4252 = !DIDerivedType(tag: DW_TAG_member, name: "arg", scope: !4250, file: !4224, line: 77, baseType: !114, size: 64)
!4253 = !DIDerivedType(tag: DW_TAG_member, name: "str", scope: !4250, file: !4224, line: 78, baseType: !4254, size: 64)
!4254 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4255, size: 64)
!4255 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4256)
!4256 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kparam_string", file: !4224, line: 86, size: 128, elements: !4257)
!4257 = !{!4258, !4259}
!4258 = !DIDerivedType(tag: DW_TAG_member, name: "maxlen", scope: !4256, file: !4224, line: 87, baseType: !7, size: 32)
!4259 = !DIDerivedType(tag: DW_TAG_member, name: "string", scope: !4256, file: !4224, line: 88, baseType: !509, size: 64, offset: 64)
!4260 = !DIDerivedType(tag: DW_TAG_member, name: "arr", scope: !4250, file: !4224, line: 79, baseType: !4261, size: 64)
!4261 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4262, size: 64)
!4262 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4263)
!4263 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kparam_array", file: !4224, line: 92, size: 256, elements: !4264)
!4264 = !{!4265, !4266, !4267, !4268, !4269}
!4265 = !DIDerivedType(tag: DW_TAG_member, name: "max", scope: !4263, file: !4224, line: 94, baseType: !7, size: 32)
!4266 = !DIDerivedType(tag: DW_TAG_member, name: "elemsize", scope: !4263, file: !4224, line: 95, baseType: !7, size: 32, offset: 32)
!4267 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !4263, file: !4224, line: 96, baseType: !244, size: 64, offset: 64)
!4268 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !4263, file: !4224, line: 97, baseType: !4229, size: 64, offset: 128)
!4269 = !DIDerivedType(tag: DW_TAG_member, name: "elem", scope: !4263, file: !4224, line: 98, baseType: !114, size: 64, offset: 192)
!4270 = !DIGlobalVariableExpression(var: !4271, expr: !DIExpression())
!4271 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_debugtype228", scope: !2, file: !3, line: 45, type: !4272, isLocal: true, isDefinition: true, align: 8)
!4272 = !DICompositeType(tag: DW_TAG_array_type, baseType: !191, size: 184, elements: !4273)
!4273 = !{!4274}
!4274 = !DISubrange(count: 23)
!4275 = !DIGlobalVariableExpression(var: !4276, expr: !DIExpression())
!4276 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_debug229", scope: !2, file: !3, line: 46, type: !4277, isLocal: true, isDefinition: true, align: 8)
!4277 = !DICompositeType(tag: DW_TAG_array_type, baseType: !191, size: 360, elements: !4278)
!4278 = !{!4279}
!4279 = !DISubrange(count: 45)
!4280 = !DIGlobalVariableExpression(var: !4281, expr: !DIExpression())
!4281 = distinct !DIGlobalVariable(name: "__param_ignore_special_drivers", scope: !2, file: !3, line: 50, type: !4222, isLocal: true, isDefinition: true, align: 64)
!4282 = !DIGlobalVariableExpression(var: !4283, expr: !DIExpression())
!4283 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_ignore_special_driverstype230", scope: !2, file: !3, line: 50, type: !4284, isLocal: true, isDefinition: true, align: 8)
!4284 = !DICompositeType(tag: DW_TAG_array_type, baseType: !191, size: 320, elements: !4285)
!4285 = !{!4286}
!4286 = !DISubrange(count: 40)
!4287 = !DIGlobalVariableExpression(var: !4288, expr: !DIExpression())
!4288 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_ignore_special_drivers231", scope: !2, file: !3, line: 51, type: !4289, isLocal: true, isDefinition: true, align: 8)
!4289 = !DICompositeType(tag: DW_TAG_array_type, baseType: !191, size: 800, elements: !4290)
!4290 = !{!4291}
!4291 = !DISubrange(count: 100)
!4292 = !DIGlobalVariableExpression(var: !4293, expr: !DIExpression())
!4293 = distinct !DIGlobalVariable(name: "dispatch_type", scope: !4294, file: !3, line: 1200, type: !4295, isLocal: true, isDefinition: true)
!4294 = distinct !DISubprogram(name: "hid_open_report", scope: !3, file: !3, line: 1190, type: !4110, scopeLine: 1191, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !371)
!4295 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4296, size: 256, elements: !1180)
!4296 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4297, size: 64)
!4297 = !DISubroutineType(types: !4298)
!4298 = !{!169, !4299, !4337}
!4299 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4300, size: 64)
!4300 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hid_parser", file: !94, line: 645, size: 886784, elements: !4301)
!4301 = !{!4302, !4315, !4317, !4318, !4332, !4333, !4334, !4335, !4336}
!4302 = !DIDerivedType(tag: DW_TAG_member, name: "global", scope: !4300, file: !94, line: 646, baseType: !4303, size: 320)
!4303 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hid_global", file: !94, line: 389, size: 320, elements: !4304)
!4304 = !{!4305, !4306, !4307, !4308, !4309, !4310, !4311, !4312, !4313, !4314}
!4305 = !DIDerivedType(tag: DW_TAG_member, name: "usage_page", scope: !4303, file: !94, line: 390, baseType: !7, size: 32)
!4306 = !DIDerivedType(tag: DW_TAG_member, name: "logical_minimum", scope: !4303, file: !94, line: 391, baseType: !168, size: 32, offset: 32)
!4307 = !DIDerivedType(tag: DW_TAG_member, name: "logical_maximum", scope: !4303, file: !94, line: 392, baseType: !168, size: 32, offset: 64)
!4308 = !DIDerivedType(tag: DW_TAG_member, name: "physical_minimum", scope: !4303, file: !94, line: 393, baseType: !168, size: 32, offset: 96)
!4309 = !DIDerivedType(tag: DW_TAG_member, name: "physical_maximum", scope: !4303, file: !94, line: 394, baseType: !168, size: 32, offset: 128)
!4310 = !DIDerivedType(tag: DW_TAG_member, name: "unit_exponent", scope: !4303, file: !94, line: 395, baseType: !168, size: 32, offset: 160)
!4311 = !DIDerivedType(tag: DW_TAG_member, name: "unit", scope: !4303, file: !94, line: 396, baseType: !7, size: 32, offset: 192)
!4312 = !DIDerivedType(tag: DW_TAG_member, name: "report_id", scope: !4303, file: !94, line: 397, baseType: !7, size: 32, offset: 224)
!4313 = !DIDerivedType(tag: DW_TAG_member, name: "report_size", scope: !4303, file: !94, line: 398, baseType: !7, size: 32, offset: 256)
!4314 = !DIDerivedType(tag: DW_TAG_member, name: "report_count", scope: !4303, file: !94, line: 399, baseType: !7, size: 32, offset: 288)
!4315 = !DIDerivedType(tag: DW_TAG_member, name: "global_stack", scope: !4300, file: !94, line: 647, baseType: !4316, size: 1280, offset: 320)
!4316 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4303, size: 1280, elements: !1180)
!4317 = !DIDerivedType(tag: DW_TAG_member, name: "global_stack_ptr", scope: !4300, file: !94, line: 648, baseType: !7, size: 32, offset: 1600)
!4318 = !DIDerivedType(tag: DW_TAG_member, name: "local", scope: !4300, file: !94, line: 649, baseType: !4319, size: 884864, offset: 1632)
!4319 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hid_local", file: !94, line: 409, size: 884864, elements: !4320)
!4320 = !{!4321, !4325, !4327, !4328, !4329, !4330, !4331}
!4321 = !DIDerivedType(tag: DW_TAG_member, name: "usage", scope: !4319, file: !94, line: 410, baseType: !4322, size: 393216)
!4322 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7, size: 393216, elements: !4323)
!4323 = !{!4324}
!4324 = !DISubrange(count: 12288)
!4325 = !DIDerivedType(tag: DW_TAG_member, name: "usage_size", scope: !4319, file: !94, line: 411, baseType: !4326, size: 98304, offset: 393216)
!4326 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1369, size: 98304, elements: !4323)
!4327 = !DIDerivedType(tag: DW_TAG_member, name: "collection_index", scope: !4319, file: !94, line: 412, baseType: !4322, size: 393216, offset: 491520)
!4328 = !DIDerivedType(tag: DW_TAG_member, name: "usage_index", scope: !4319, file: !94, line: 413, baseType: !7, size: 32, offset: 884736)
!4329 = !DIDerivedType(tag: DW_TAG_member, name: "usage_minimum", scope: !4319, file: !94, line: 414, baseType: !7, size: 32, offset: 884768)
!4330 = !DIDerivedType(tag: DW_TAG_member, name: "delimiter_depth", scope: !4319, file: !94, line: 415, baseType: !7, size: 32, offset: 884800)
!4331 = !DIDerivedType(tag: DW_TAG_member, name: "delimiter_branch", scope: !4319, file: !94, line: 416, baseType: !7, size: 32, offset: 884832)
!4332 = !DIDerivedType(tag: DW_TAG_member, name: "collection_stack", scope: !4300, file: !94, line: 650, baseType: !244, size: 64, offset: 886528)
!4333 = !DIDerivedType(tag: DW_TAG_member, name: "collection_stack_ptr", scope: !4300, file: !94, line: 651, baseType: !7, size: 32, offset: 886592)
!4334 = !DIDerivedType(tag: DW_TAG_member, name: "collection_stack_size", scope: !4300, file: !94, line: 652, baseType: !7, size: 32, offset: 886624)
!4335 = !DIDerivedType(tag: DW_TAG_member, name: "device", scope: !4300, file: !94, line: 653, baseType: !3986, size: 64, offset: 886656)
!4336 = !DIDerivedType(tag: DW_TAG_member, name: "scan_flags", scope: !4300, file: !94, line: 654, baseType: !7, size: 32, offset: 886720)
!4337 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4338, size: 64)
!4338 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hid_item", file: !94, line: 36, size: 128, elements: !4339)
!4339 = !{!4340, !4341, !4342, !4343, !4344}
!4340 = !DIDerivedType(tag: DW_TAG_member, name: "format", scope: !4338, file: !94, line: 37, baseType: !7, size: 32)
!4341 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !4338, file: !94, line: 38, baseType: !152, size: 8, offset: 32)
!4342 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !4338, file: !94, line: 39, baseType: !152, size: 8, offset: 40)
!4343 = !DIDerivedType(tag: DW_TAG_member, name: "tag", scope: !4338, file: !94, line: 40, baseType: !152, size: 8, offset: 48)
!4344 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !4338, file: !94, line: 49, baseType: !4345, size: 64, offset: 64)
!4345 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4338, file: !94, line: 41, size: 64, elements: !4346)
!4346 = !{!4347, !4348, !4349, !4350, !4351, !4352, !4353}
!4347 = !DIDerivedType(tag: DW_TAG_member, name: "u8", scope: !4345, file: !94, line: 42, baseType: !152, size: 8)
!4348 = !DIDerivedType(tag: DW_TAG_member, name: "s8", scope: !4345, file: !94, line: 43, baseType: !144, size: 8)
!4349 = !DIDerivedType(tag: DW_TAG_member, name: "u16", scope: !4345, file: !94, line: 44, baseType: !149, size: 16)
!4350 = !DIDerivedType(tag: DW_TAG_member, name: "s16", scope: !4345, file: !94, line: 45, baseType: !158, size: 16)
!4351 = !DIDerivedType(tag: DW_TAG_member, name: "u32", scope: !4345, file: !94, line: 46, baseType: !239, size: 32)
!4352 = !DIDerivedType(tag: DW_TAG_member, name: "s32", scope: !4345, file: !94, line: 47, baseType: !168, size: 32)
!4353 = !DIDerivedType(tag: DW_TAG_member, name: "longdata", scope: !4345, file: !94, line: 48, baseType: !3990, size: 64)
!4354 = !DIGlobalVariableExpression(var: !4355, expr: !DIExpression())
!4355 = distinct !DIGlobalVariable(name: "__print_once", scope: !4356, file: !3, line: 1373, type: !514, isLocal: true, isDefinition: true)
!4356 = distinct !DISubprogram(name: "hid_field_extract", scope: !3, file: !3, line: 1369, type: !4357, scopeLine: 1371, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !371)
!4357 = !DISubroutineType(types: !4358)
!4358 = !{!239, !4359, !4068, !7, !7}
!4359 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4360, size: 64)
!4360 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3987)
!4361 = !DIGlobalVariableExpression(var: !4362, expr: !DIExpression())
!4362 = distinct !DIGlobalVariable(name: "types", scope: !4363, file: !3, line: 1930, type: !4364, isLocal: true, isDefinition: true)
!4363 = distinct !DISubprogram(name: "hid_connect", scope: !3, file: !3, line: 1928, type: !4161, scopeLine: 1929, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !371)
!4364 = !DICompositeType(tag: DW_TAG_array_type, baseType: !190, size: 576, elements: !3719)
!4365 = !DIGlobalVariableExpression(var: !4366, expr: !DIExpression())
!4366 = distinct !DIGlobalVariable(name: "hid_bus_type", scope: !2, file: !3, line: 2375, type: !3678, isLocal: false, isDefinition: true)
!4367 = !DIGlobalVariableExpression(var: !4368, expr: !DIExpression())
!4368 = distinct !DIGlobalVariable(name: "id", scope: !4369, file: !3, line: 2388, type: !781, isLocal: true, isDefinition: true)
!4369 = distinct !DISubprogram(name: "hid_add_device", scope: !3, file: !3, line: 2386, type: !4110, scopeLine: 2387, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !371)
!4370 = !DIGlobalVariableExpression(var: !4371, expr: !DIExpression())
!4371 = distinct !DIGlobalVariable(name: "__key", scope: !4372, file: !3, line: 2472, type: !677, isLocal: true, isDefinition: true)
!4372 = distinct !DISubprogram(name: "hid_allocate_device", scope: !3, file: !3, line: 2456, type: !4373, scopeLine: 2457, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !371)
!4373 = !DISubroutineType(types: !4374)
!4374 = !{!3986}
!4375 = !DIGlobalVariableExpression(var: !4376, expr: !DIExpression())
!4376 = distinct !DIGlobalVariable(name: "__key", scope: !4372, file: !3, line: 2476, type: !677, isLocal: true, isDefinition: true)
!4377 = !DIGlobalVariableExpression(var: !4378, expr: !DIExpression())
!4378 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_hid_init263", scope: !2, file: !3, line: 2626, type: !114, isLocal: true, isDefinition: true)
!4379 = !DIGlobalVariableExpression(var: !4380, expr: !DIExpression())
!4380 = distinct !DIGlobalVariable(name: "__exitcall_hid_exit", scope: !2, file: !3, line: 2627, type: !4381, isLocal: true, isDefinition: true)
!4381 = !DIDerivedType(tag: DW_TAG_typedef, name: "exitcall_t", file: !4382, line: 117, baseType: !4383)
!4382 = !DIFile(filename: "./include/linux/init.h", directory: "/home/lizy2001/genbc/linux")
!4383 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1890, size: 64)
!4384 = !DIGlobalVariableExpression(var: !4385, expr: !DIExpression())
!4385 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_author264", scope: !2, file: !3, line: 2629, type: !4272, isLocal: true, isDefinition: true, align: 8)
!4386 = !DIGlobalVariableExpression(var: !4387, expr: !DIExpression())
!4387 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_author265", scope: !2, file: !3, line: 2630, type: !4388, isLocal: true, isDefinition: true, align: 8)
!4388 = !DICompositeType(tag: DW_TAG_array_type, baseType: !191, size: 208, elements: !4389)
!4389 = !{!4390}
!4390 = !DISubrange(count: 26)
!4391 = !DIGlobalVariableExpression(var: !4392, expr: !DIExpression())
!4392 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_author266", scope: !2, file: !3, line: 2631, type: !4272, isLocal: true, isDefinition: true, align: 8)
!4393 = !DIGlobalVariableExpression(var: !4394, expr: !DIExpression())
!4394 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_file267", scope: !2, file: !3, line: 2632, type: !4395, isLocal: true, isDefinition: true, align: 8)
!4395 = !DICompositeType(tag: DW_TAG_array_type, baseType: !191, size: 200, elements: !4396)
!4396 = !{!4397}
!4397 = !DISubrange(count: 25)
!4398 = !DIGlobalVariableExpression(var: !4399, expr: !DIExpression())
!4399 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_license268", scope: !2, file: !3, line: 2632, type: !4400, isLocal: true, isDefinition: true, align: 8)
!4400 = !DICompositeType(tag: DW_TAG_array_type, baseType: !191, size: 128, elements: !1745)
!4401 = !DIGlobalVariableExpression(var: !4402, expr: !DIExpression())
!4402 = distinct !DIGlobalVariable(name: "__param_str_debug", scope: !2, file: !3, line: 45, type: !4403, isLocal: true, isDefinition: true)
!4403 = !DICompositeType(tag: DW_TAG_array_type, baseType: !191, size: 80, elements: !4404)
!4404 = !{!4405}
!4405 = !DISubrange(count: 10)
!4406 = !DIGlobalVariableExpression(var: !4407, expr: !DIExpression())
!4407 = distinct !DIGlobalVariable(name: "__param_str_ignore_special_drivers", scope: !2, file: !3, line: 50, type: !4408, isLocal: true, isDefinition: true)
!4408 = !DICompositeType(tag: DW_TAG_array_type, baseType: !191, size: 216, elements: !4409)
!4409 = !{!4410}
!4410 = !DISubrange(count: 27)
!4411 = !DIGlobalVariableExpression(var: !4412, expr: !DIExpression())
!4412 = distinct !DIGlobalVariable(name: "hid_ignore_special_drivers", scope: !2, file: !3, line: 49, type: !169, isLocal: true, isDefinition: true)
!4413 = !DIGlobalVariableExpression(var: !4414, expr: !DIExpression())
!4414 = distinct !DIGlobalVariable(name: "hid_report_names", scope: !2, file: !3, line: 947, type: !4415, isLocal: true, isDefinition: true)
!4415 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4416, size: 192, elements: !683)
!4416 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !190)
!4417 = !DIGlobalVariableExpression(var: !4418, expr: !DIExpression())
!4418 = distinct !DIGlobalVariable(name: "hid_hiddev_list", scope: !2, file: !3, line: 1877, type: !4419, isLocal: true, isDefinition: true)
!4419 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4036, size: 576, elements: !683)
!4420 = !DIGlobalVariableExpression(var: !4421, expr: !DIExpression())
!4421 = distinct !DIGlobalVariable(name: "dev_attr_country", scope: !2, file: !3, line: 1923, type: !4422, isLocal: true, isDefinition: true)
!4422 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4423)
!4423 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_attribute", file: !73, line: 99, size: 256, elements: !4424)
!4424 = !{!4425, !4426, !4431}
!4425 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !4423, file: !73, line: 100, baseType: !3389, size: 128)
!4426 = !DIDerivedType(tag: DW_TAG_member, name: "show", scope: !4423, file: !73, line: 101, baseType: !4427, size: 64, offset: 128)
!4427 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4428, size: 64)
!4428 = !DISubroutineType(types: !4429)
!4429 = !{!601, !3620, !4430, !509}
!4430 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4423, size: 64)
!4431 = !DIDerivedType(tag: DW_TAG_member, name: "store", scope: !4423, file: !73, line: 103, baseType: !4432, size: 64, offset: 192)
!4432 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4433, size: 64)
!4433 = !DISubroutineType(types: !4434)
!4434 = !{!601, !3620, !4430, !190, !604}
!4435 = !DIGlobalVariableExpression(var: !4436, expr: !DIExpression())
!4436 = distinct !DIGlobalVariable(name: "hid_dev_groups", scope: !2, file: !3, line: 2349, type: !4437, isLocal: true, isDefinition: true)
!4437 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3401, size: 128, elements: !220)
!4438 = !DIGlobalVariableExpression(var: !4439, expr: !DIExpression())
!4439 = distinct !DIGlobalVariable(name: "hid_dev_group", scope: !2, file: !3, line: 2345, type: !3402, isLocal: true, isDefinition: true)
!4440 = !DIGlobalVariableExpression(var: !4441, expr: !DIExpression())
!4441 = distinct !DIGlobalVariable(name: "hid_dev_attrs", scope: !2, file: !3, line: 2337, type: !4442, isLocal: true, isDefinition: true)
!4442 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3388, size: 128, elements: !220)
!4443 = !DIGlobalVariableExpression(var: !4444, expr: !DIExpression())
!4444 = distinct !DIGlobalVariable(name: "dev_attr_modalias", scope: !2, file: !3, line: 2335, type: !4423, isLocal: true, isDefinition: true)
!4445 = !DIGlobalVariableExpression(var: !4446, expr: !DIExpression())
!4446 = distinct !DIGlobalVariable(name: "hid_dev_bin_attrs", scope: !2, file: !3, line: 2341, type: !4447, isLocal: true, isDefinition: true)
!4447 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3414, size: 128, elements: !220)
!4448 = !DIGlobalVariableExpression(var: !4449, expr: !DIExpression())
!4449 = distinct !DIGlobalVariable(name: "dev_bin_attr_report_desc", scope: !2, file: !3, line: 1917, type: !3415, isLocal: true, isDefinition: true)
!4450 = !DIGlobalVariableExpression(var: !4451, expr: !DIExpression())
!4451 = distinct !DIGlobalVariable(name: "hid_drv_groups", scope: !2, file: !3, line: 2175, type: !4437, isLocal: true, isDefinition: true)
!4452 = !DIGlobalVariableExpression(var: !4453, expr: !DIExpression())
!4453 = distinct !DIGlobalVariable(name: "hid_drv_group", scope: !2, file: !3, line: 2175, type: !3402, isLocal: true, isDefinition: true)
!4454 = !DIGlobalVariableExpression(var: !4455, expr: !DIExpression())
!4455 = distinct !DIGlobalVariable(name: "hid_drv_attrs", scope: !2, file: !3, line: 2171, type: !4442, isLocal: true, isDefinition: true)
!4456 = !DIGlobalVariableExpression(var: !4457, expr: !DIExpression())
!4457 = distinct !DIGlobalVariable(name: "driver_attr_new_id", scope: !2, file: !3, line: 2169, type: !4458, isLocal: true, isDefinition: true)
!4458 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "driver_attribute", file: !67, line: 134, size: 256, elements: !4459)
!4459 = !{!4460, !4461, !4465}
!4460 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !4458, file: !67, line: 135, baseType: !3389, size: 128)
!4461 = !DIDerivedType(tag: DW_TAG_member, name: "show", scope: !4458, file: !67, line: 136, baseType: !4462, size: 64, offset: 128)
!4462 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4463, size: 64)
!4463 = !DISubroutineType(types: !4464)
!4464 = !{!601, !3691, !509}
!4465 = !DIDerivedType(tag: DW_TAG_member, name: "store", scope: !4458, file: !67, line: 137, baseType: !4466, size: 64, offset: 192)
!4466 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4467, size: 64)
!4467 = !DISubroutineType(types: !4468)
!4468 = !{!601, !3691, !190, !604}
!4469 = !DIGlobalVariableExpression(var: !4470, expr: !DIExpression())
!4470 = distinct !DIGlobalVariable(name: "dispatch_type", scope: !4471, file: !3, line: 873, type: !4295, isLocal: true, isDefinition: true)
!4471 = distinct !DISubprogram(name: "hid_scan_report", scope: !3, file: !3, line: 867, type: !4110, scopeLine: 868, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !371)
!4472 = !DIGlobalVariableExpression(var: !4473, expr: !DIExpression())
!4473 = distinct !DIGlobalVariable(name: "__key", scope: !4474, file: !4023, line: 33, type: !677, isLocal: true, isDefinition: true)
!4474 = distinct !DISubprogram(name: "sema_init", scope: !4023, file: !4023, line: 31, type: !4475, scopeLine: 32, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !371)
!4475 = !DISubroutineType(types: !4476)
!4476 = !{null, !4477, !169}
!4477 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4022, size: 64)
!4478 = !{i32 7, !"Dwarf Version", i32 4}
!4479 = !{i32 2, !"Debug Info Version", i32 3}
!4480 = !{i32 1, !"wchar_size", i32 2}
!4481 = !{i32 1, !"Code Model", i32 2}
!4482 = !{!"clang version 10.0.1 (https://github.com/llvm/llvm-project.git ef32c611aa214dea855364efd7ba451ec5ec3f74)"}
!4483 = distinct !DISubprogram(name: "hid_register_report", scope: !3, file: !3, line: 57, type: !4484, scopeLine: 60, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !371)
!4484 = !DISubroutineType(types: !4485)
!4485 = !{!115, !3986, !7, !7, !7}
!4486 = !DILocalVariable(name: "device", arg: 1, scope: !4483, file: !3, line: 57, type: !3986)
!4487 = !DILocation(line: 57, column: 59, scope: !4483)
!4488 = !DILocalVariable(name: "type", arg: 2, scope: !4483, file: !3, line: 58, type: !7)
!4489 = !DILocation(line: 58, column: 25, scope: !4483)
!4490 = !DILocalVariable(name: "id", arg: 3, scope: !4483, file: !3, line: 58, type: !7)
!4491 = !DILocation(line: 58, column: 44, scope: !4483)
!4492 = !DILocalVariable(name: "application", arg: 4, scope: !4483, file: !3, line: 59, type: !7)
!4493 = !DILocation(line: 59, column: 25, scope: !4483)
!4494 = !DILocalVariable(name: "report_enum", scope: !4483, file: !3, line: 61, type: !4495)
!4495 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4014, size: 64)
!4496 = !DILocation(line: 61, column: 26, scope: !4483)
!4497 = !DILocation(line: 61, column: 40, scope: !4483)
!4498 = !DILocation(line: 61, column: 48, scope: !4483)
!4499 = !DILocation(line: 61, column: 62, scope: !4483)
!4500 = !DILocation(line: 61, column: 60, scope: !4483)
!4501 = !DILocalVariable(name: "report", scope: !4483, file: !3, line: 62, type: !115)
!4502 = !DILocation(line: 62, column: 21, scope: !4483)
!4503 = !DILocation(line: 64, column: 6, scope: !4504)
!4504 = distinct !DILexicalBlock(scope: !4483, file: !3, line: 64, column: 6)
!4505 = !DILocation(line: 64, column: 9, scope: !4504)
!4506 = !DILocation(line: 64, column: 6, scope: !4483)
!4507 = !DILocation(line: 65, column: 3, scope: !4504)
!4508 = !DILocation(line: 66, column: 6, scope: !4509)
!4509 = distinct !DILexicalBlock(scope: !4483, file: !3, line: 66, column: 6)
!4510 = !DILocation(line: 66, column: 19, scope: !4509)
!4511 = !DILocation(line: 66, column: 34, scope: !4509)
!4512 = !DILocation(line: 66, column: 6, scope: !4483)
!4513 = !DILocation(line: 67, column: 10, scope: !4509)
!4514 = !DILocation(line: 67, column: 23, scope: !4509)
!4515 = !DILocation(line: 67, column: 38, scope: !4509)
!4516 = !DILocation(line: 67, column: 3, scope: !4509)
!4517 = !DILocation(line: 69, column: 11, scope: !4483)
!4518 = !DILocation(line: 69, column: 9, scope: !4483)
!4519 = !DILocation(line: 70, column: 7, scope: !4520)
!4520 = distinct !DILexicalBlock(scope: !4483, file: !3, line: 70, column: 6)
!4521 = !DILocation(line: 70, column: 6, scope: !4483)
!4522 = !DILocation(line: 71, column: 3, scope: !4520)
!4523 = !DILocation(line: 73, column: 6, scope: !4524)
!4524 = distinct !DILexicalBlock(scope: !4483, file: !3, line: 73, column: 6)
!4525 = !DILocation(line: 73, column: 9, scope: !4524)
!4526 = !DILocation(line: 73, column: 6, scope: !4483)
!4527 = !DILocation(line: 74, column: 3, scope: !4524)
!4528 = !DILocation(line: 74, column: 16, scope: !4524)
!4529 = !DILocation(line: 74, column: 25, scope: !4524)
!4530 = !DILocation(line: 76, column: 15, scope: !4483)
!4531 = !DILocation(line: 76, column: 2, scope: !4483)
!4532 = !DILocation(line: 76, column: 10, scope: !4483)
!4533 = !DILocation(line: 76, column: 13, scope: !4483)
!4534 = !DILocation(line: 77, column: 17, scope: !4483)
!4535 = !DILocation(line: 77, column: 2, scope: !4483)
!4536 = !DILocation(line: 77, column: 10, scope: !4483)
!4537 = !DILocation(line: 77, column: 15, scope: !4483)
!4538 = !DILocation(line: 78, column: 2, scope: !4483)
!4539 = !DILocation(line: 78, column: 10, scope: !4483)
!4540 = !DILocation(line: 78, column: 15, scope: !4483)
!4541 = !DILocation(line: 79, column: 19, scope: !4483)
!4542 = !DILocation(line: 79, column: 2, scope: !4483)
!4543 = !DILocation(line: 79, column: 10, scope: !4483)
!4544 = !DILocation(line: 79, column: 17, scope: !4483)
!4545 = !DILocation(line: 80, column: 24, scope: !4483)
!4546 = !DILocation(line: 80, column: 2, scope: !4483)
!4547 = !DILocation(line: 80, column: 10, scope: !4483)
!4548 = !DILocation(line: 80, column: 22, scope: !4483)
!4549 = !DILocation(line: 81, column: 36, scope: !4483)
!4550 = !DILocation(line: 81, column: 2, scope: !4483)
!4551 = !DILocation(line: 81, column: 15, scope: !4483)
!4552 = !DILocation(line: 81, column: 30, scope: !4483)
!4553 = !DILocation(line: 81, column: 34, scope: !4483)
!4554 = !DILocation(line: 83, column: 17, scope: !4483)
!4555 = !DILocation(line: 83, column: 25, scope: !4483)
!4556 = !DILocation(line: 83, column: 32, scope: !4483)
!4557 = !DILocation(line: 83, column: 45, scope: !4483)
!4558 = !DILocation(line: 83, column: 2, scope: !4483)
!4559 = !DILocation(line: 85, column: 9, scope: !4483)
!4560 = !DILocation(line: 85, column: 2, scope: !4483)
!4561 = !DILocation(line: 86, column: 1, scope: !4483)
!4562 = distinct !DISubprogram(name: "kzalloc", scope: !105, file: !105, line: 662, type: !4563, scopeLine: 663, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !371)
!4563 = !DISubroutineType(types: !4564)
!4564 = !{!114, !604, !112}
!4565 = !DILocalVariable(name: "s", arg: 1, scope: !4566, file: !105, line: 445, type: !960)
!4566 = distinct !DISubprogram(name: "kmem_cache_alloc_trace", scope: !105, file: !105, line: 445, type: !4567, scopeLine: 447, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !371)
!4567 = !DISubroutineType(types: !4568)
!4568 = !{!114, !960, !112, !604}
!4569 = !DILocation(line: 445, column: 72, scope: !4566, inlinedAt: !4570)
!4570 = distinct !DILocation(line: 552, column: 10, scope: !4571, inlinedAt: !4574)
!4571 = distinct !DILexicalBlock(scope: !4572, file: !105, line: 540, column: 34)
!4572 = distinct !DILexicalBlock(scope: !4573, file: !105, line: 540, column: 6)
!4573 = distinct !DISubprogram(name: "kmalloc", scope: !105, file: !105, line: 538, type: !4563, scopeLine: 539, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !371)
!4574 = distinct !DILocation(line: 664, column: 9, scope: !4562)
!4575 = !DILocalVariable(name: "flags", arg: 2, scope: !4566, file: !105, line: 446, type: !112)
!4576 = !DILocation(line: 446, column: 9, scope: !4566, inlinedAt: !4570)
!4577 = !DILocalVariable(name: "size", arg: 3, scope: !4566, file: !105, line: 446, type: !604)
!4578 = !DILocation(line: 446, column: 23, scope: !4566, inlinedAt: !4570)
!4579 = !DILocalVariable(name: "ret", scope: !4566, file: !105, line: 448, type: !114)
!4580 = !DILocation(line: 448, column: 8, scope: !4566, inlinedAt: !4570)
!4581 = !DILocalVariable(name: "flags", arg: 1, scope: !4582, file: !105, line: 318, type: !112)
!4582 = distinct !DISubprogram(name: "kmalloc_type", scope: !105, file: !105, line: 318, type: !4583, scopeLine: 319, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !371)
!4583 = !DISubroutineType(types: !4584)
!4584 = !{!104, !112}
!4585 = !DILocation(line: 318, column: 67, scope: !4582, inlinedAt: !4586)
!4586 = distinct !DILocation(line: 553, column: 20, scope: !4571, inlinedAt: !4574)
!4587 = !DILocalVariable(name: "size", arg: 1, scope: !4588, file: !105, line: 346, type: !604)
!4588 = distinct !DISubprogram(name: "kmalloc_index", scope: !105, file: !105, line: 346, type: !4589, scopeLine: 347, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !371)
!4589 = !DISubroutineType(types: !4590)
!4590 = !{!7, !604}
!4591 = !DILocation(line: 346, column: 58, scope: !4588, inlinedAt: !4592)
!4592 = distinct !DILocation(line: 547, column: 11, scope: !4571, inlinedAt: !4574)
!4593 = !DILocalVariable(name: "size", arg: 1, scope: !4594, file: !105, line: 472, type: !604)
!4594 = distinct !DISubprogram(name: "kmalloc_order_trace", scope: !105, file: !105, line: 472, type: !4595, scopeLine: 473, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !371)
!4595 = !DISubroutineType(types: !4596)
!4596 = !{!114, !604, !112, !7}
!4597 = !DILocation(line: 472, column: 28, scope: !4594, inlinedAt: !4598)
!4598 = distinct !DILocation(line: 481, column: 9, scope: !4599, inlinedAt: !4600)
!4599 = distinct !DISubprogram(name: "kmalloc_large", scope: !105, file: !105, line: 478, type: !4563, scopeLine: 479, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !371)
!4600 = distinct !DILocation(line: 545, column: 11, scope: !4601, inlinedAt: !4574)
!4601 = distinct !DILexicalBlock(scope: !4571, file: !105, line: 544, column: 7)
!4602 = !DILocalVariable(name: "flags", arg: 2, scope: !4594, file: !105, line: 472, type: !112)
!4603 = !DILocation(line: 472, column: 40, scope: !4594, inlinedAt: !4598)
!4604 = !DILocalVariable(name: "order", arg: 3, scope: !4594, file: !105, line: 472, type: !7)
!4605 = !DILocation(line: 472, column: 60, scope: !4594, inlinedAt: !4598)
!4606 = !DILocalVariable(name: "size", arg: 1, scope: !4599, file: !105, line: 478, type: !604)
!4607 = !DILocation(line: 478, column: 51, scope: !4599, inlinedAt: !4600)
!4608 = !DILocalVariable(name: "flags", arg: 2, scope: !4599, file: !105, line: 478, type: !112)
!4609 = !DILocation(line: 478, column: 63, scope: !4599, inlinedAt: !4600)
!4610 = !DILocalVariable(name: "order", scope: !4599, file: !105, line: 480, type: !7)
!4611 = !DILocation(line: 480, column: 15, scope: !4599, inlinedAt: !4600)
!4612 = !DILocalVariable(name: "size", arg: 1, scope: !4573, file: !105, line: 538, type: !604)
!4613 = !DILocation(line: 538, column: 45, scope: !4573, inlinedAt: !4574)
!4614 = !DILocalVariable(name: "flags", arg: 2, scope: !4573, file: !105, line: 538, type: !112)
!4615 = !DILocation(line: 538, column: 57, scope: !4573, inlinedAt: !4574)
!4616 = !DILocalVariable(name: "index", scope: !4571, file: !105, line: 542, type: !7)
!4617 = !DILocation(line: 542, column: 16, scope: !4571, inlinedAt: !4574)
!4618 = !DILocalVariable(name: "size", arg: 1, scope: !4562, file: !105, line: 662, type: !604)
!4619 = !DILocation(line: 662, column: 36, scope: !4562)
!4620 = !DILocalVariable(name: "flags", arg: 2, scope: !4562, file: !105, line: 662, type: !112)
!4621 = !DILocation(line: 662, column: 48, scope: !4562)
!4622 = !DILocation(line: 664, column: 17, scope: !4562)
!4623 = !DILocation(line: 664, column: 23, scope: !4562)
!4624 = !DILocation(line: 664, column: 29, scope: !4562)
!4625 = !DILocation(line: 540, column: 27, scope: !4572, inlinedAt: !4574)
!4626 = !DILocation(line: 540, column: 6, scope: !4572, inlinedAt: !4574)
!4627 = !DILocation(line: 540, column: 6, scope: !4573, inlinedAt: !4574)
!4628 = !DILocation(line: 544, column: 7, scope: !4601, inlinedAt: !4574)
!4629 = !DILocation(line: 544, column: 12, scope: !4601, inlinedAt: !4574)
!4630 = !DILocation(line: 544, column: 7, scope: !4571, inlinedAt: !4574)
!4631 = !DILocation(line: 545, column: 25, scope: !4601, inlinedAt: !4574)
!4632 = !DILocation(line: 545, column: 31, scope: !4601, inlinedAt: !4574)
!4633 = !DILocation(line: 480, column: 33, scope: !4599, inlinedAt: !4600)
!4634 = !DILocation(line: 480, column: 23, scope: !4599, inlinedAt: !4600)
!4635 = !DILocation(line: 481, column: 29, scope: !4599, inlinedAt: !4600)
!4636 = !DILocation(line: 481, column: 35, scope: !4599, inlinedAt: !4600)
!4637 = !DILocation(line: 481, column: 42, scope: !4599, inlinedAt: !4600)
!4638 = !DILocation(line: 474, column: 23, scope: !4594, inlinedAt: !4598)
!4639 = !DILocation(line: 474, column: 29, scope: !4594, inlinedAt: !4598)
!4640 = !DILocation(line: 474, column: 36, scope: !4594, inlinedAt: !4598)
!4641 = !DILocation(line: 474, column: 9, scope: !4594, inlinedAt: !4598)
!4642 = !DILocation(line: 545, column: 4, scope: !4601, inlinedAt: !4574)
!4643 = !DILocation(line: 547, column: 25, scope: !4571, inlinedAt: !4574)
!4644 = !DILocation(line: 348, column: 7, scope: !4645, inlinedAt: !4592)
!4645 = distinct !DILexicalBlock(scope: !4588, file: !105, line: 348, column: 6)
!4646 = !DILocation(line: 348, column: 6, scope: !4588, inlinedAt: !4592)
!4647 = !DILocation(line: 349, column: 3, scope: !4645, inlinedAt: !4592)
!4648 = !DILocation(line: 351, column: 6, scope: !4649, inlinedAt: !4592)
!4649 = distinct !DILexicalBlock(scope: !4588, file: !105, line: 351, column: 6)
!4650 = !DILocation(line: 351, column: 11, scope: !4649, inlinedAt: !4592)
!4651 = !DILocation(line: 351, column: 6, scope: !4588, inlinedAt: !4592)
!4652 = !DILocation(line: 352, column: 3, scope: !4649, inlinedAt: !4592)
!4653 = !DILocation(line: 354, column: 32, scope: !4654, inlinedAt: !4592)
!4654 = distinct !DILexicalBlock(scope: !4588, file: !105, line: 354, column: 6)
!4655 = !DILocation(line: 354, column: 37, scope: !4654, inlinedAt: !4592)
!4656 = !DILocation(line: 354, column: 42, scope: !4654, inlinedAt: !4592)
!4657 = !DILocation(line: 354, column: 45, scope: !4654, inlinedAt: !4592)
!4658 = !DILocation(line: 354, column: 50, scope: !4654, inlinedAt: !4592)
!4659 = !DILocation(line: 354, column: 6, scope: !4588, inlinedAt: !4592)
!4660 = !DILocation(line: 355, column: 3, scope: !4654, inlinedAt: !4592)
!4661 = !DILocation(line: 356, column: 32, scope: !4662, inlinedAt: !4592)
!4662 = distinct !DILexicalBlock(scope: !4588, file: !105, line: 356, column: 6)
!4663 = !DILocation(line: 356, column: 37, scope: !4662, inlinedAt: !4592)
!4664 = !DILocation(line: 356, column: 43, scope: !4662, inlinedAt: !4592)
!4665 = !DILocation(line: 356, column: 46, scope: !4662, inlinedAt: !4592)
!4666 = !DILocation(line: 356, column: 51, scope: !4662, inlinedAt: !4592)
!4667 = !DILocation(line: 356, column: 6, scope: !4588, inlinedAt: !4592)
!4668 = !DILocation(line: 357, column: 3, scope: !4662, inlinedAt: !4592)
!4669 = !DILocation(line: 358, column: 6, scope: !4670, inlinedAt: !4592)
!4670 = distinct !DILexicalBlock(scope: !4588, file: !105, line: 358, column: 6)
!4671 = !DILocation(line: 358, column: 11, scope: !4670, inlinedAt: !4592)
!4672 = !DILocation(line: 358, column: 6, scope: !4588, inlinedAt: !4592)
!4673 = !DILocation(line: 358, column: 26, scope: !4670, inlinedAt: !4592)
!4674 = !DILocation(line: 359, column: 6, scope: !4675, inlinedAt: !4592)
!4675 = distinct !DILexicalBlock(scope: !4588, file: !105, line: 359, column: 6)
!4676 = !DILocation(line: 359, column: 11, scope: !4675, inlinedAt: !4592)
!4677 = !DILocation(line: 359, column: 6, scope: !4588, inlinedAt: !4592)
!4678 = !DILocation(line: 359, column: 26, scope: !4675, inlinedAt: !4592)
!4679 = !DILocation(line: 360, column: 6, scope: !4680, inlinedAt: !4592)
!4680 = distinct !DILexicalBlock(scope: !4588, file: !105, line: 360, column: 6)
!4681 = !DILocation(line: 360, column: 11, scope: !4680, inlinedAt: !4592)
!4682 = !DILocation(line: 360, column: 6, scope: !4588, inlinedAt: !4592)
!4683 = !DILocation(line: 360, column: 26, scope: !4680, inlinedAt: !4592)
!4684 = !DILocation(line: 361, column: 6, scope: !4685, inlinedAt: !4592)
!4685 = distinct !DILexicalBlock(scope: !4588, file: !105, line: 361, column: 6)
!4686 = !DILocation(line: 361, column: 11, scope: !4685, inlinedAt: !4592)
!4687 = !DILocation(line: 361, column: 6, scope: !4588, inlinedAt: !4592)
!4688 = !DILocation(line: 361, column: 26, scope: !4685, inlinedAt: !4592)
!4689 = !DILocation(line: 362, column: 6, scope: !4690, inlinedAt: !4592)
!4690 = distinct !DILexicalBlock(scope: !4588, file: !105, line: 362, column: 6)
!4691 = !DILocation(line: 362, column: 11, scope: !4690, inlinedAt: !4592)
!4692 = !DILocation(line: 362, column: 6, scope: !4588, inlinedAt: !4592)
!4693 = !DILocation(line: 362, column: 26, scope: !4690, inlinedAt: !4592)
!4694 = !DILocation(line: 363, column: 6, scope: !4695, inlinedAt: !4592)
!4695 = distinct !DILexicalBlock(scope: !4588, file: !105, line: 363, column: 6)
!4696 = !DILocation(line: 363, column: 11, scope: !4695, inlinedAt: !4592)
!4697 = !DILocation(line: 363, column: 6, scope: !4588, inlinedAt: !4592)
!4698 = !DILocation(line: 363, column: 26, scope: !4695, inlinedAt: !4592)
!4699 = !DILocation(line: 364, column: 6, scope: !4700, inlinedAt: !4592)
!4700 = distinct !DILexicalBlock(scope: !4588, file: !105, line: 364, column: 6)
!4701 = !DILocation(line: 364, column: 11, scope: !4700, inlinedAt: !4592)
!4702 = !DILocation(line: 364, column: 6, scope: !4588, inlinedAt: !4592)
!4703 = !DILocation(line: 364, column: 26, scope: !4700, inlinedAt: !4592)
!4704 = !DILocation(line: 365, column: 6, scope: !4705, inlinedAt: !4592)
!4705 = distinct !DILexicalBlock(scope: !4588, file: !105, line: 365, column: 6)
!4706 = !DILocation(line: 365, column: 11, scope: !4705, inlinedAt: !4592)
!4707 = !DILocation(line: 365, column: 6, scope: !4588, inlinedAt: !4592)
!4708 = !DILocation(line: 365, column: 26, scope: !4705, inlinedAt: !4592)
!4709 = !DILocation(line: 366, column: 6, scope: !4710, inlinedAt: !4592)
!4710 = distinct !DILexicalBlock(scope: !4588, file: !105, line: 366, column: 6)
!4711 = !DILocation(line: 366, column: 11, scope: !4710, inlinedAt: !4592)
!4712 = !DILocation(line: 366, column: 6, scope: !4588, inlinedAt: !4592)
!4713 = !DILocation(line: 366, column: 26, scope: !4710, inlinedAt: !4592)
!4714 = !DILocation(line: 367, column: 6, scope: !4715, inlinedAt: !4592)
!4715 = distinct !DILexicalBlock(scope: !4588, file: !105, line: 367, column: 6)
!4716 = !DILocation(line: 367, column: 11, scope: !4715, inlinedAt: !4592)
!4717 = !DILocation(line: 367, column: 6, scope: !4588, inlinedAt: !4592)
!4718 = !DILocation(line: 367, column: 26, scope: !4715, inlinedAt: !4592)
!4719 = !DILocation(line: 368, column: 6, scope: !4720, inlinedAt: !4592)
!4720 = distinct !DILexicalBlock(scope: !4588, file: !105, line: 368, column: 6)
!4721 = !DILocation(line: 368, column: 11, scope: !4720, inlinedAt: !4592)
!4722 = !DILocation(line: 368, column: 6, scope: !4588, inlinedAt: !4592)
!4723 = !DILocation(line: 368, column: 26, scope: !4720, inlinedAt: !4592)
!4724 = !DILocation(line: 369, column: 6, scope: !4725, inlinedAt: !4592)
!4725 = distinct !DILexicalBlock(scope: !4588, file: !105, line: 369, column: 6)
!4726 = !DILocation(line: 369, column: 11, scope: !4725, inlinedAt: !4592)
!4727 = !DILocation(line: 369, column: 6, scope: !4588, inlinedAt: !4592)
!4728 = !DILocation(line: 369, column: 26, scope: !4725, inlinedAt: !4592)
!4729 = !DILocation(line: 370, column: 6, scope: !4730, inlinedAt: !4592)
!4730 = distinct !DILexicalBlock(scope: !4588, file: !105, line: 370, column: 6)
!4731 = !DILocation(line: 370, column: 11, scope: !4730, inlinedAt: !4592)
!4732 = !DILocation(line: 370, column: 6, scope: !4588, inlinedAt: !4592)
!4733 = !DILocation(line: 370, column: 26, scope: !4730, inlinedAt: !4592)
!4734 = !DILocation(line: 371, column: 6, scope: !4735, inlinedAt: !4592)
!4735 = distinct !DILexicalBlock(scope: !4588, file: !105, line: 371, column: 6)
!4736 = !DILocation(line: 371, column: 11, scope: !4735, inlinedAt: !4592)
!4737 = !DILocation(line: 371, column: 6, scope: !4588, inlinedAt: !4592)
!4738 = !DILocation(line: 371, column: 26, scope: !4735, inlinedAt: !4592)
!4739 = !DILocation(line: 372, column: 6, scope: !4740, inlinedAt: !4592)
!4740 = distinct !DILexicalBlock(scope: !4588, file: !105, line: 372, column: 6)
!4741 = !DILocation(line: 372, column: 11, scope: !4740, inlinedAt: !4592)
!4742 = !DILocation(line: 372, column: 6, scope: !4588, inlinedAt: !4592)
!4743 = !DILocation(line: 372, column: 26, scope: !4740, inlinedAt: !4592)
!4744 = !DILocation(line: 373, column: 6, scope: !4745, inlinedAt: !4592)
!4745 = distinct !DILexicalBlock(scope: !4588, file: !105, line: 373, column: 6)
!4746 = !DILocation(line: 373, column: 11, scope: !4745, inlinedAt: !4592)
!4747 = !DILocation(line: 373, column: 6, scope: !4588, inlinedAt: !4592)
!4748 = !DILocation(line: 373, column: 26, scope: !4745, inlinedAt: !4592)
!4749 = !DILocation(line: 374, column: 6, scope: !4750, inlinedAt: !4592)
!4750 = distinct !DILexicalBlock(scope: !4588, file: !105, line: 374, column: 6)
!4751 = !DILocation(line: 374, column: 11, scope: !4750, inlinedAt: !4592)
!4752 = !DILocation(line: 374, column: 6, scope: !4588, inlinedAt: !4592)
!4753 = !DILocation(line: 374, column: 26, scope: !4750, inlinedAt: !4592)
!4754 = !DILocation(line: 375, column: 6, scope: !4755, inlinedAt: !4592)
!4755 = distinct !DILexicalBlock(scope: !4588, file: !105, line: 375, column: 6)
!4756 = !DILocation(line: 375, column: 11, scope: !4755, inlinedAt: !4592)
!4757 = !DILocation(line: 375, column: 6, scope: !4588, inlinedAt: !4592)
!4758 = !DILocation(line: 375, column: 27, scope: !4755, inlinedAt: !4592)
!4759 = !DILocation(line: 376, column: 6, scope: !4760, inlinedAt: !4592)
!4760 = distinct !DILexicalBlock(scope: !4588, file: !105, line: 376, column: 6)
!4761 = !DILocation(line: 376, column: 11, scope: !4760, inlinedAt: !4592)
!4762 = !DILocation(line: 376, column: 6, scope: !4588, inlinedAt: !4592)
!4763 = !DILocation(line: 376, column: 32, scope: !4760, inlinedAt: !4592)
!4764 = !DILocation(line: 377, column: 6, scope: !4765, inlinedAt: !4592)
!4765 = distinct !DILexicalBlock(scope: !4588, file: !105, line: 377, column: 6)
!4766 = !DILocation(line: 377, column: 11, scope: !4765, inlinedAt: !4592)
!4767 = !DILocation(line: 377, column: 6, scope: !4588, inlinedAt: !4592)
!4768 = !DILocation(line: 377, column: 32, scope: !4765, inlinedAt: !4592)
!4769 = !DILocation(line: 378, column: 6, scope: !4770, inlinedAt: !4592)
!4770 = distinct !DILexicalBlock(scope: !4588, file: !105, line: 378, column: 6)
!4771 = !DILocation(line: 378, column: 11, scope: !4770, inlinedAt: !4592)
!4772 = !DILocation(line: 378, column: 6, scope: !4588, inlinedAt: !4592)
!4773 = !DILocation(line: 378, column: 32, scope: !4770, inlinedAt: !4592)
!4774 = !DILocation(line: 379, column: 6, scope: !4775, inlinedAt: !4592)
!4775 = distinct !DILexicalBlock(scope: !4588, file: !105, line: 379, column: 6)
!4776 = !DILocation(line: 379, column: 11, scope: !4775, inlinedAt: !4592)
!4777 = !DILocation(line: 379, column: 6, scope: !4588, inlinedAt: !4592)
!4778 = !DILocation(line: 379, column: 33, scope: !4775, inlinedAt: !4592)
!4779 = !DILocation(line: 380, column: 6, scope: !4780, inlinedAt: !4592)
!4780 = distinct !DILexicalBlock(scope: !4588, file: !105, line: 380, column: 6)
!4781 = !DILocation(line: 380, column: 11, scope: !4780, inlinedAt: !4592)
!4782 = !DILocation(line: 380, column: 6, scope: !4588, inlinedAt: !4592)
!4783 = !DILocation(line: 380, column: 33, scope: !4780, inlinedAt: !4592)
!4784 = !DILocation(line: 381, column: 6, scope: !4785, inlinedAt: !4592)
!4785 = distinct !DILexicalBlock(scope: !4588, file: !105, line: 381, column: 6)
!4786 = !DILocation(line: 381, column: 11, scope: !4785, inlinedAt: !4592)
!4787 = !DILocation(line: 381, column: 6, scope: !4588, inlinedAt: !4592)
!4788 = !DILocation(line: 381, column: 33, scope: !4785, inlinedAt: !4592)
!4789 = !DILocation(line: 382, column: 2, scope: !4790, inlinedAt: !4592)
!4790 = distinct !DILexicalBlock(scope: !4791, file: !105, line: 382, column: 2)
!4791 = distinct !DILexicalBlock(scope: !4588, file: !105, line: 382, column: 2)
!4792 = !{i32 -2144181601, i32 -2144181572, i32 -2144181526, i32 -2144181468, i32 -2144181414, i32 -2144181360, i32 -2144181305, i32 -2144181274}
!4793 = !DILocation(line: 382, column: 2, scope: !4794, inlinedAt: !4592)
!4794 = distinct !DILexicalBlock(scope: !4795, file: !105, line: 382, column: 2)
!4795 = distinct !DILexicalBlock(scope: !4791, file: !105, line: 382, column: 2)
!4796 = !{i32 -2144180831, i32 -2144180824, i32 -2144180770, i32 -2144180739, i32 -2144180709}
!4797 = !DILocation(line: 382, column: 2, scope: !4795, inlinedAt: !4592)
!4798 = !DILocation(line: 386, column: 1, scope: !4588, inlinedAt: !4592)
!4799 = !DILocation(line: 547, column: 9, scope: !4571, inlinedAt: !4574)
!4800 = !DILocation(line: 549, column: 8, scope: !4801, inlinedAt: !4574)
!4801 = distinct !DILexicalBlock(scope: !4571, file: !105, line: 549, column: 7)
!4802 = !DILocation(line: 549, column: 7, scope: !4571, inlinedAt: !4574)
!4803 = !DILocation(line: 550, column: 4, scope: !4801, inlinedAt: !4574)
!4804 = !DILocation(line: 553, column: 33, scope: !4571, inlinedAt: !4574)
!4805 = !DILocation(line: 325, column: 6, scope: !4806, inlinedAt: !4586)
!4806 = distinct !DILexicalBlock(scope: !4582, file: !105, line: 325, column: 6)
!4807 = !DILocation(line: 325, column: 6, scope: !4582, inlinedAt: !4586)
!4808 = !DILocation(line: 326, column: 3, scope: !4806, inlinedAt: !4586)
!4809 = !DILocation(line: 332, column: 9, scope: !4582, inlinedAt: !4586)
!4810 = !DILocation(line: 332, column: 15, scope: !4582, inlinedAt: !4586)
!4811 = !DILocation(line: 332, column: 2, scope: !4582, inlinedAt: !4586)
!4812 = !DILocation(line: 336, column: 1, scope: !4582, inlinedAt: !4586)
!4813 = !DILocation(line: 553, column: 5, scope: !4571, inlinedAt: !4574)
!4814 = !DILocation(line: 553, column: 41, scope: !4571, inlinedAt: !4574)
!4815 = !DILocation(line: 554, column: 5, scope: !4571, inlinedAt: !4574)
!4816 = !DILocation(line: 554, column: 12, scope: !4571, inlinedAt: !4574)
!4817 = !DILocation(line: 448, column: 31, scope: !4566, inlinedAt: !4570)
!4818 = !DILocation(line: 448, column: 34, scope: !4566, inlinedAt: !4570)
!4819 = !DILocation(line: 448, column: 14, scope: !4566, inlinedAt: !4570)
!4820 = !DILocation(line: 450, column: 22, scope: !4566, inlinedAt: !4570)
!4821 = !DILocation(line: 450, column: 25, scope: !4566, inlinedAt: !4570)
!4822 = !DILocation(line: 450, column: 30, scope: !4566, inlinedAt: !4570)
!4823 = !DILocation(line: 450, column: 36, scope: !4566, inlinedAt: !4570)
!4824 = !DILocation(line: 450, column: 8, scope: !4566, inlinedAt: !4570)
!4825 = !DILocation(line: 450, column: 6, scope: !4566, inlinedAt: !4570)
!4826 = !DILocation(line: 451, column: 9, scope: !4566, inlinedAt: !4570)
!4827 = !DILocation(line: 552, column: 3, scope: !4571, inlinedAt: !4574)
!4828 = !DILocation(line: 557, column: 19, scope: !4573, inlinedAt: !4574)
!4829 = !DILocation(line: 557, column: 25, scope: !4573, inlinedAt: !4574)
!4830 = !DILocation(line: 557, column: 9, scope: !4573, inlinedAt: !4574)
!4831 = !DILocation(line: 557, column: 2, scope: !4573, inlinedAt: !4574)
!4832 = !DILocation(line: 558, column: 1, scope: !4573, inlinedAt: !4574)
!4833 = !DILocation(line: 664, column: 2, scope: !4562)
!4834 = distinct !DISubprogram(name: "list_add_tail", scope: !4835, file: !4835, line: 98, type: !4836, scopeLine: 99, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !371)
!4835 = !DIFile(filename: "./include/linux/list.h", directory: "/home/lizy2001/genbc/linux")
!4836 = !DISubroutineType(types: !4837)
!4837 = !{null, !122, !122}
!4838 = !DILocalVariable(name: "new", arg: 1, scope: !4834, file: !4835, line: 98, type: !122)
!4839 = !DILocation(line: 98, column: 52, scope: !4834)
!4840 = !DILocalVariable(name: "head", arg: 2, scope: !4834, file: !4835, line: 98, type: !122)
!4841 = !DILocation(line: 98, column: 75, scope: !4834)
!4842 = !DILocation(line: 100, column: 13, scope: !4834)
!4843 = !DILocation(line: 100, column: 18, scope: !4834)
!4844 = !DILocation(line: 100, column: 24, scope: !4834)
!4845 = !DILocation(line: 100, column: 30, scope: !4834)
!4846 = !DILocation(line: 100, column: 2, scope: !4834)
!4847 = !DILocation(line: 101, column: 1, scope: !4834)
!4848 = distinct !DISubprogram(name: "hid_parse_report", scope: !3, file: !3, line: 937, type: !4849, scopeLine: 938, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !371)
!4849 = !DISubroutineType(types: !4850)
!4850 = !{!169, !3986, !3990, !7}
!4851 = !DILocalVariable(name: "hid", arg: 1, scope: !4848, file: !3, line: 937, type: !3986)
!4852 = !DILocation(line: 937, column: 41, scope: !4848)
!4853 = !DILocalVariable(name: "start", arg: 2, scope: !4848, file: !3, line: 937, type: !3990)
!4854 = !DILocation(line: 937, column: 52, scope: !4848)
!4855 = !DILocalVariable(name: "size", arg: 3, scope: !4848, file: !3, line: 937, type: !7)
!4856 = !DILocation(line: 937, column: 68, scope: !4848)
!4857 = !DILocation(line: 939, column: 27, scope: !4848)
!4858 = !DILocation(line: 939, column: 34, scope: !4848)
!4859 = !DILocation(line: 939, column: 19, scope: !4848)
!4860 = !DILocation(line: 939, column: 2, scope: !4848)
!4861 = !DILocation(line: 939, column: 7, scope: !4848)
!4862 = !DILocation(line: 939, column: 17, scope: !4848)
!4863 = !DILocation(line: 940, column: 7, scope: !4864)
!4864 = distinct !DILexicalBlock(scope: !4848, file: !3, line: 940, column: 6)
!4865 = !DILocation(line: 940, column: 12, scope: !4864)
!4866 = !DILocation(line: 940, column: 6, scope: !4848)
!4867 = !DILocation(line: 941, column: 3, scope: !4864)
!4868 = !DILocation(line: 942, column: 19, scope: !4848)
!4869 = !DILocation(line: 942, column: 2, scope: !4848)
!4870 = !DILocation(line: 942, column: 7, scope: !4848)
!4871 = !DILocation(line: 942, column: 17, scope: !4848)
!4872 = !DILocation(line: 943, column: 2, scope: !4848)
!4873 = !DILocation(line: 944, column: 1, scope: !4848)
!4874 = distinct !DISubprogram(name: "hid_validate_values", scope: !3, file: !3, line: 964, type: !4875, scopeLine: 968, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !371)
!4875 = !DISubroutineType(types: !4876)
!4876 = !{!115, !3986, !7, !7, !7, !7}
!4877 = !DILocalVariable(name: "hid", arg: 1, scope: !4874, file: !3, line: 964, type: !3986)
!4878 = !DILocation(line: 964, column: 59, scope: !4874)
!4879 = !DILocalVariable(name: "type", arg: 2, scope: !4874, file: !3, line: 965, type: !7)
!4880 = !DILocation(line: 965, column: 25, scope: !4874)
!4881 = !DILocalVariable(name: "id", arg: 3, scope: !4874, file: !3, line: 965, type: !7)
!4882 = !DILocation(line: 965, column: 44, scope: !4874)
!4883 = !DILocalVariable(name: "field_index", arg: 4, scope: !4874, file: !3, line: 966, type: !7)
!4884 = !DILocation(line: 966, column: 25, scope: !4874)
!4885 = !DILocalVariable(name: "report_counts", arg: 5, scope: !4874, file: !3, line: 967, type: !7)
!4886 = !DILocation(line: 967, column: 25, scope: !4874)
!4887 = !DILocalVariable(name: "report", scope: !4874, file: !3, line: 969, type: !115)
!4888 = !DILocation(line: 969, column: 21, scope: !4874)
!4889 = !DILocation(line: 971, column: 6, scope: !4890)
!4890 = distinct !DILexicalBlock(scope: !4874, file: !3, line: 971, column: 6)
!4891 = !DILocation(line: 971, column: 11, scope: !4890)
!4892 = !DILocation(line: 971, column: 6, scope: !4874)
!4893 = !DILocation(line: 972, column: 3, scope: !4894)
!4894 = distinct !DILexicalBlock(scope: !4890, file: !3, line: 971, column: 33)
!4895 = !DILocation(line: 973, column: 3, scope: !4894)
!4896 = !DILocation(line: 976, column: 6, scope: !4897)
!4897 = distinct !DILexicalBlock(scope: !4874, file: !3, line: 976, column: 6)
!4898 = !DILocation(line: 976, column: 9, scope: !4897)
!4899 = !DILocation(line: 976, column: 6, scope: !4874)
!4900 = !DILocation(line: 977, column: 3, scope: !4901)
!4901 = distinct !DILexicalBlock(scope: !4897, file: !3, line: 976, column: 25)
!4902 = !DILocation(line: 978, column: 3, scope: !4901)
!4903 = !DILocation(line: 986, column: 6, scope: !4904)
!4904 = distinct !DILexicalBlock(scope: !4874, file: !3, line: 986, column: 6)
!4905 = !DILocation(line: 986, column: 9, scope: !4904)
!4906 = !DILocation(line: 986, column: 6, scope: !4874)
!4907 = !DILocalVariable(name: "__mptr", scope: !4908, file: !3, line: 991, type: !114)
!4908 = distinct !DILexicalBlock(scope: !4909, file: !3, line: 991, column: 12)
!4909 = distinct !DILexicalBlock(scope: !4904, file: !3, line: 986, column: 15)
!4910 = !DILocation(line: 991, column: 12, scope: !4908)
!4911 = !DILocation(line: 991, column: 12, scope: !4912)
!4912 = distinct !DILexicalBlock(scope: !4908, file: !3, line: 991, column: 12)
!4913 = !DILocation(line: 991, column: 10, scope: !4909)
!4914 = !DILocation(line: 994, column: 2, scope: !4909)
!4915 = !DILocation(line: 995, column: 12, scope: !4916)
!4916 = distinct !DILexicalBlock(scope: !4904, file: !3, line: 994, column: 9)
!4917 = !DILocation(line: 995, column: 17, scope: !4916)
!4918 = !DILocation(line: 995, column: 29, scope: !4916)
!4919 = !DILocation(line: 995, column: 35, scope: !4916)
!4920 = !DILocation(line: 995, column: 50, scope: !4916)
!4921 = !DILocation(line: 995, column: 10, scope: !4916)
!4922 = !DILocation(line: 997, column: 7, scope: !4923)
!4923 = distinct !DILexicalBlock(scope: !4874, file: !3, line: 997, column: 6)
!4924 = !DILocation(line: 997, column: 6, scope: !4874)
!4925 = !DILocation(line: 998, column: 3, scope: !4926)
!4926 = distinct !DILexicalBlock(scope: !4923, file: !3, line: 997, column: 15)
!4927 = !DILocation(line: 999, column: 3, scope: !4926)
!4928 = !DILocation(line: 1001, column: 6, scope: !4929)
!4929 = distinct !DILexicalBlock(scope: !4874, file: !3, line: 1001, column: 6)
!4930 = !DILocation(line: 1001, column: 14, scope: !4929)
!4931 = !DILocation(line: 1001, column: 26, scope: !4929)
!4932 = !DILocation(line: 1001, column: 23, scope: !4929)
!4933 = !DILocation(line: 1001, column: 6, scope: !4874)
!4934 = !DILocation(line: 1002, column: 3, scope: !4935)
!4935 = distinct !DILexicalBlock(scope: !4929, file: !3, line: 1001, column: 39)
!4936 = !DILocation(line: 1004, column: 3, scope: !4935)
!4937 = !DILocation(line: 1006, column: 6, scope: !4938)
!4938 = distinct !DILexicalBlock(scope: !4874, file: !3, line: 1006, column: 6)
!4939 = !DILocation(line: 1006, column: 14, scope: !4938)
!4940 = !DILocation(line: 1006, column: 20, scope: !4938)
!4941 = !DILocation(line: 1006, column: 34, scope: !4938)
!4942 = !DILocation(line: 1006, column: 49, scope: !4938)
!4943 = !DILocation(line: 1006, column: 47, scope: !4938)
!4944 = !DILocation(line: 1006, column: 6, scope: !4874)
!4945 = !DILocation(line: 1007, column: 3, scope: !4946)
!4946 = distinct !DILexicalBlock(scope: !4938, file: !3, line: 1006, column: 64)
!4947 = !DILocation(line: 1009, column: 3, scope: !4946)
!4948 = !DILocation(line: 1011, column: 9, scope: !4874)
!4949 = !DILocation(line: 1011, column: 2, scope: !4874)
!4950 = !DILocation(line: 1012, column: 1, scope: !4874)
!4951 = distinct !DISubprogram(name: "hid_setup_resolution_multiplier", scope: !3, file: !3, line: 1153, type: !4056, scopeLine: 1154, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !371)
!4952 = !DILocalVariable(name: "hid", arg: 1, scope: !4951, file: !3, line: 1153, type: !3986)
!4953 = !DILocation(line: 1153, column: 57, scope: !4951)
!4954 = !DILocalVariable(name: "rep_enum", scope: !4951, file: !3, line: 1155, type: !4495)
!4955 = !DILocation(line: 1155, column: 26, scope: !4951)
!4956 = !DILocalVariable(name: "rep", scope: !4951, file: !3, line: 1156, type: !115)
!4957 = !DILocation(line: 1156, column: 21, scope: !4951)
!4958 = !DILocalVariable(name: "usage", scope: !4951, file: !3, line: 1157, type: !137)
!4959 = !DILocation(line: 1157, column: 20, scope: !4951)
!4960 = !DILocalVariable(name: "i", scope: !4951, file: !3, line: 1158, type: !169)
!4961 = !DILocation(line: 1158, column: 6, scope: !4951)
!4962 = !DILocalVariable(name: "j", scope: !4951, file: !3, line: 1158, type: !169)
!4963 = !DILocation(line: 1158, column: 9, scope: !4951)
!4964 = !DILocation(line: 1160, column: 14, scope: !4951)
!4965 = !DILocation(line: 1160, column: 19, scope: !4951)
!4966 = !DILocation(line: 1160, column: 11, scope: !4951)
!4967 = !DILocalVariable(name: "__mptr", scope: !4968, file: !3, line: 1161, type: !114)
!4968 = distinct !DILexicalBlock(scope: !4969, file: !3, line: 1161, column: 2)
!4969 = distinct !DILexicalBlock(scope: !4951, file: !3, line: 1161, column: 2)
!4970 = !DILocation(line: 1161, column: 2, scope: !4968)
!4971 = !DILocation(line: 1161, column: 2, scope: !4972)
!4972 = distinct !DILexicalBlock(scope: !4968, file: !3, line: 1161, column: 2)
!4973 = !DILocation(line: 1161, column: 2, scope: !4969)
!4974 = !DILocation(line: 1161, column: 2, scope: !4975)
!4975 = distinct !DILexicalBlock(scope: !4969, file: !3, line: 1161, column: 2)
!4976 = !DILocation(line: 1162, column: 10, scope: !4977)
!4977 = distinct !DILexicalBlock(scope: !4978, file: !3, line: 1162, column: 3)
!4978 = distinct !DILexicalBlock(scope: !4975, file: !3, line: 1161, column: 57)
!4979 = !DILocation(line: 1162, column: 8, scope: !4977)
!4980 = !DILocation(line: 1162, column: 15, scope: !4981)
!4981 = distinct !DILexicalBlock(scope: !4977, file: !3, line: 1162, column: 3)
!4982 = !DILocation(line: 1162, column: 19, scope: !4981)
!4983 = !DILocation(line: 1162, column: 24, scope: !4981)
!4984 = !DILocation(line: 1162, column: 17, scope: !4981)
!4985 = !DILocation(line: 1162, column: 3, scope: !4977)
!4986 = !DILocation(line: 1164, column: 8, scope: !4987)
!4987 = distinct !DILexicalBlock(scope: !4988, file: !3, line: 1164, column: 8)
!4988 = distinct !DILexicalBlock(scope: !4981, file: !3, line: 1162, column: 39)
!4989 = !DILocation(line: 1164, column: 13, scope: !4987)
!4990 = !DILocation(line: 1164, column: 19, scope: !4987)
!4991 = !DILocation(line: 1164, column: 23, scope: !4987)
!4992 = !DILocation(line: 1164, column: 36, scope: !4987)
!4993 = !DILocation(line: 1164, column: 8, scope: !4988)
!4994 = !DILocation(line: 1165, column: 5, scope: !4987)
!4995 = !DILocation(line: 1167, column: 11, scope: !4996)
!4996 = distinct !DILexicalBlock(scope: !4988, file: !3, line: 1167, column: 4)
!4997 = !DILocation(line: 1167, column: 9, scope: !4996)
!4998 = !DILocation(line: 1167, column: 16, scope: !4999)
!4999 = distinct !DILexicalBlock(scope: !4996, file: !3, line: 1167, column: 4)
!5000 = !DILocation(line: 1167, column: 20, scope: !4999)
!5001 = !DILocation(line: 1167, column: 25, scope: !4999)
!5002 = !DILocation(line: 1167, column: 31, scope: !4999)
!5003 = !DILocation(line: 1167, column: 35, scope: !4999)
!5004 = !DILocation(line: 1167, column: 18, scope: !4999)
!5005 = !DILocation(line: 1167, column: 4, scope: !4996)
!5006 = !DILocation(line: 1168, column: 14, scope: !5007)
!5007 = distinct !DILexicalBlock(scope: !4999, file: !3, line: 1167, column: 50)
!5008 = !DILocation(line: 1168, column: 19, scope: !5007)
!5009 = !DILocation(line: 1168, column: 25, scope: !5007)
!5010 = !DILocation(line: 1168, column: 29, scope: !5007)
!5011 = !DILocation(line: 1168, column: 35, scope: !5007)
!5012 = !DILocation(line: 1168, column: 11, scope: !5007)
!5013 = !DILocation(line: 1169, column: 9, scope: !5014)
!5014 = distinct !DILexicalBlock(scope: !5007, file: !3, line: 1169, column: 9)
!5015 = !DILocation(line: 1169, column: 16, scope: !5014)
!5016 = !DILocation(line: 1169, column: 20, scope: !5014)
!5017 = !DILocation(line: 1169, column: 9, scope: !5007)
!5018 = !DILocation(line: 1170, column: 27, scope: !5014)
!5019 = !DILocation(line: 1171, column: 13, scope: !5014)
!5020 = !DILocation(line: 1171, column: 18, scope: !5014)
!5021 = !DILocation(line: 1171, column: 24, scope: !5014)
!5022 = !DILocation(line: 1170, column: 6, scope: !5014)
!5023 = !DILocation(line: 1172, column: 4, scope: !5007)
!5024 = !DILocation(line: 1167, column: 46, scope: !4999)
!5025 = !DILocation(line: 1167, column: 4, scope: !4999)
!5026 = distinct !{!5026, !5005, !5027}
!5027 = !DILocation(line: 1172, column: 4, scope: !4996)
!5028 = !DILocation(line: 1173, column: 3, scope: !4988)
!5029 = !DILocation(line: 1162, column: 35, scope: !4981)
!5030 = !DILocation(line: 1162, column: 3, scope: !4981)
!5031 = distinct !{!5031, !4985, !5032}
!5032 = !DILocation(line: 1173, column: 3, scope: !4977)
!5033 = !DILocation(line: 1174, column: 2, scope: !4978)
!5034 = !DILocalVariable(name: "__mptr", scope: !5035, file: !3, line: 1161, type: !114)
!5035 = distinct !DILexicalBlock(scope: !4975, file: !3, line: 1161, column: 2)
!5036 = !DILocation(line: 1161, column: 2, scope: !5035)
!5037 = !DILocation(line: 1161, column: 2, scope: !5038)
!5038 = distinct !DILexicalBlock(scope: !5035, file: !3, line: 1161, column: 2)
!5039 = distinct !{!5039, !4973, !5040}
!5040 = !DILocation(line: 1174, column: 2, scope: !4969)
!5041 = !DILocation(line: 1175, column: 1, scope: !4951)
!5042 = distinct !DISubprogram(name: "hid_apply_multiplier", scope: !3, file: !3, line: 1084, type: !5043, scopeLine: 1086, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !371)
!5043 = !DISubroutineType(types: !5044)
!5044 = !{null, !3986, !130}
!5045 = !DILocalVariable(name: "hid", arg: 1, scope: !5042, file: !3, line: 1084, type: !3986)
!5046 = !DILocation(line: 1084, column: 53, scope: !5042)
!5047 = !DILocalVariable(name: "multiplier", arg: 2, scope: !5042, file: !3, line: 1085, type: !130)
!5048 = !DILocation(line: 1085, column: 24, scope: !5042)
!5049 = !DILocalVariable(name: "rep_enum", scope: !5042, file: !3, line: 1087, type: !4495)
!5050 = !DILocation(line: 1087, column: 26, scope: !5042)
!5051 = !DILocalVariable(name: "rep", scope: !5042, file: !3, line: 1088, type: !115)
!5052 = !DILocation(line: 1088, column: 21, scope: !5042)
!5053 = !DILocalVariable(name: "field", scope: !5042, file: !3, line: 1089, type: !130)
!5054 = !DILocation(line: 1089, column: 20, scope: !5042)
!5055 = !DILocalVariable(name: "multiplier_collection", scope: !5042, file: !3, line: 1090, type: !3995)
!5056 = !DILocation(line: 1090, column: 25, scope: !5042)
!5057 = !DILocalVariable(name: "effective_multiplier", scope: !5042, file: !3, line: 1091, type: !169)
!5058 = !DILocation(line: 1091, column: 6, scope: !5042)
!5059 = !DILocalVariable(name: "i", scope: !5042, file: !3, line: 1092, type: !169)
!5060 = !DILocation(line: 1092, column: 6, scope: !5042)
!5061 = !DILocation(line: 1112, column: 27, scope: !5042)
!5062 = !DILocation(line: 1112, column: 32, scope: !5042)
!5063 = !DILocation(line: 1112, column: 43, scope: !5042)
!5064 = !DILocation(line: 1112, column: 55, scope: !5042)
!5065 = !DILocation(line: 1112, column: 62, scope: !5042)
!5066 = !DILocation(line: 1112, column: 24, scope: !5042)
!5067 = !DILocation(line: 1113, column: 2, scope: !5042)
!5068 = !DILocation(line: 1113, column: 9, scope: !5042)
!5069 = !DILocation(line: 1113, column: 32, scope: !5042)
!5070 = !DILocation(line: 1113, column: 43, scope: !5042)
!5071 = !DILocation(line: 1113, column: 49, scope: !5042)
!5072 = !DILocation(line: 1114, column: 9, scope: !5042)
!5073 = !DILocation(line: 1114, column: 32, scope: !5042)
!5074 = !DILocation(line: 1114, column: 37, scope: !5042)
!5075 = !DILocation(line: 0, scope: !5042)
!5076 = !DILocation(line: 1115, column: 28, scope: !5042)
!5077 = !DILocation(line: 1115, column: 33, scope: !5042)
!5078 = !DILocation(line: 1115, column: 44, scope: !5042)
!5079 = !DILocation(line: 1115, column: 67, scope: !5042)
!5080 = !DILocation(line: 1115, column: 25, scope: !5042)
!5081 = distinct !{!5081, !5067, !5082}
!5082 = !DILocation(line: 1115, column: 77, scope: !5042)
!5083 = !DILocation(line: 1117, column: 50, scope: !5042)
!5084 = !DILocation(line: 1117, column: 55, scope: !5042)
!5085 = !DILocation(line: 1117, column: 25, scope: !5042)
!5086 = !DILocation(line: 1117, column: 23, scope: !5042)
!5087 = !DILocation(line: 1119, column: 14, scope: !5042)
!5088 = !DILocation(line: 1119, column: 19, scope: !5042)
!5089 = !DILocation(line: 1119, column: 11, scope: !5042)
!5090 = !DILocalVariable(name: "__mptr", scope: !5091, file: !3, line: 1120, type: !114)
!5091 = distinct !DILexicalBlock(scope: !5092, file: !3, line: 1120, column: 2)
!5092 = distinct !DILexicalBlock(scope: !5042, file: !3, line: 1120, column: 2)
!5093 = !DILocation(line: 1120, column: 2, scope: !5091)
!5094 = !DILocation(line: 1120, column: 2, scope: !5095)
!5095 = distinct !DILexicalBlock(scope: !5091, file: !3, line: 1120, column: 2)
!5096 = !DILocation(line: 1120, column: 2, scope: !5092)
!5097 = !DILocation(line: 1120, column: 2, scope: !5098)
!5098 = distinct !DILexicalBlock(scope: !5092, file: !3, line: 1120, column: 2)
!5099 = !DILocation(line: 1121, column: 10, scope: !5100)
!5100 = distinct !DILexicalBlock(scope: !5101, file: !3, line: 1121, column: 3)
!5101 = distinct !DILexicalBlock(scope: !5098, file: !3, line: 1120, column: 57)
!5102 = !DILocation(line: 1121, column: 8, scope: !5100)
!5103 = !DILocation(line: 1121, column: 15, scope: !5104)
!5104 = distinct !DILexicalBlock(scope: !5100, file: !3, line: 1121, column: 3)
!5105 = !DILocation(line: 1121, column: 19, scope: !5104)
!5106 = !DILocation(line: 1121, column: 24, scope: !5104)
!5107 = !DILocation(line: 1121, column: 17, scope: !5104)
!5108 = !DILocation(line: 1121, column: 3, scope: !5100)
!5109 = !DILocation(line: 1122, column: 12, scope: !5110)
!5110 = distinct !DILexicalBlock(scope: !5104, file: !3, line: 1121, column: 39)
!5111 = !DILocation(line: 1122, column: 17, scope: !5110)
!5112 = !DILocation(line: 1122, column: 23, scope: !5110)
!5113 = !DILocation(line: 1122, column: 10, scope: !5110)
!5114 = !DILocation(line: 1123, column: 34, scope: !5110)
!5115 = !DILocation(line: 1123, column: 39, scope: !5110)
!5116 = !DILocation(line: 1124, column: 13, scope: !5110)
!5117 = !DILocation(line: 1125, column: 13, scope: !5110)
!5118 = !DILocation(line: 1123, column: 4, scope: !5110)
!5119 = !DILocation(line: 1126, column: 3, scope: !5110)
!5120 = !DILocation(line: 1121, column: 35, scope: !5104)
!5121 = !DILocation(line: 1121, column: 3, scope: !5104)
!5122 = distinct !{!5122, !5108, !5123}
!5123 = !DILocation(line: 1126, column: 3, scope: !5100)
!5124 = !DILocation(line: 1127, column: 2, scope: !5101)
!5125 = !DILocalVariable(name: "__mptr", scope: !5126, file: !3, line: 1120, type: !114)
!5126 = distinct !DILexicalBlock(scope: !5098, file: !3, line: 1120, column: 2)
!5127 = !DILocation(line: 1120, column: 2, scope: !5126)
!5128 = !DILocation(line: 1120, column: 2, scope: !5129)
!5129 = distinct !DILexicalBlock(scope: !5126, file: !3, line: 1120, column: 2)
!5130 = distinct !{!5130, !5096, !5131}
!5131 = !DILocation(line: 1127, column: 2, scope: !5092)
!5132 = !DILocation(line: 1128, column: 1, scope: !5042)
!5133 = !DILocalVariable(name: "device", arg: 1, scope: !4294, file: !3, line: 1190, type: !3986)
!5134 = !DILocation(line: 1190, column: 40, scope: !4294)
!5135 = !DILocalVariable(name: "parser", scope: !4294, file: !3, line: 1192, type: !4299)
!5136 = !DILocation(line: 1192, column: 21, scope: !4294)
!5137 = !DILocalVariable(name: "item", scope: !4294, file: !3, line: 1193, type: !4338)
!5138 = !DILocation(line: 1193, column: 18, scope: !4294)
!5139 = !DILocalVariable(name: "size", scope: !4294, file: !3, line: 1194, type: !7)
!5140 = !DILocation(line: 1194, column: 15, scope: !4294)
!5141 = !DILocalVariable(name: "start", scope: !4294, file: !3, line: 1195, type: !3990)
!5142 = !DILocation(line: 1195, column: 8, scope: !4294)
!5143 = !DILocalVariable(name: "buf", scope: !4294, file: !3, line: 1196, type: !3990)
!5144 = !DILocation(line: 1196, column: 8, scope: !4294)
!5145 = !DILocalVariable(name: "end", scope: !4294, file: !3, line: 1197, type: !3990)
!5146 = !DILocation(line: 1197, column: 8, scope: !4294)
!5147 = !DILocalVariable(name: "next", scope: !4294, file: !3, line: 1198, type: !3990)
!5148 = !DILocation(line: 1198, column: 8, scope: !4294)
!5149 = !DILocalVariable(name: "ret", scope: !4294, file: !3, line: 1199, type: !169)
!5150 = !DILocation(line: 1199, column: 6, scope: !4294)
!5151 = !DILocalVariable(name: "__ret_warn_on", scope: !5152, file: !3, line: 1208, type: !169)
!5152 = distinct !DILexicalBlock(scope: !5153, file: !3, line: 1208, column: 6)
!5153 = distinct !DILexicalBlock(scope: !4294, file: !3, line: 1208, column: 6)
!5154 = !DILocation(line: 1208, column: 6, scope: !5152)
!5155 = !DILocation(line: 1208, column: 6, scope: !5156)
!5156 = distinct !DILexicalBlock(scope: !5152, file: !3, line: 1208, column: 6)
!5157 = !DILocation(line: 1208, column: 6, scope: !5158)
!5158 = distinct !DILexicalBlock(scope: !5156, file: !3, line: 1208, column: 6)
!5159 = !DILocation(line: 1208, column: 6, scope: !5160)
!5160 = distinct !DILexicalBlock(scope: !5158, file: !3, line: 1208, column: 6)
!5161 = !DILocation(line: 1208, column: 6, scope: !5162)
!5162 = distinct !DILexicalBlock(scope: !5158, file: !3, line: 1208, column: 6)
!5163 = !{i32 -2141923089, i32 -2141923060, i32 -2141923014, i32 -2141922956, i32 -2141922902, i32 -2141922848, i32 -2141922793, i32 -2141922762}
!5164 = !DILocation(line: 1208, column: 6, scope: !5165)
!5165 = distinct !DILexicalBlock(scope: !5158, file: !3, line: 1208, column: 6)
!5166 = !{i32 -2141922357, i32 -2141922350, i32 -2141922298, i32 -2141922267, i32 -2141922237}
!5167 = !DILocation(line: 1208, column: 6, scope: !5168)
!5168 = distinct !DILexicalBlock(scope: !5158, file: !3, line: 1208, column: 6)
!5169 = !DILocation(line: 1208, column: 6, scope: !5153)
!5170 = !DILocation(line: 1208, column: 6, scope: !4294)
!5171 = !DILocation(line: 1209, column: 3, scope: !5153)
!5172 = !DILocation(line: 1211, column: 10, scope: !4294)
!5173 = !DILocation(line: 1211, column: 18, scope: !4294)
!5174 = !DILocation(line: 1211, column: 8, scope: !4294)
!5175 = !DILocalVariable(name: "__ret_warn_on", scope: !5176, file: !3, line: 1212, type: !169)
!5176 = distinct !DILexicalBlock(scope: !5177, file: !3, line: 1212, column: 6)
!5177 = distinct !DILexicalBlock(scope: !4294, file: !3, line: 1212, column: 6)
!5178 = !DILocation(line: 1212, column: 6, scope: !5176)
!5179 = !DILocation(line: 1212, column: 6, scope: !5180)
!5180 = distinct !DILexicalBlock(scope: !5176, file: !3, line: 1212, column: 6)
!5181 = !DILocation(line: 1212, column: 6, scope: !5182)
!5182 = distinct !DILexicalBlock(scope: !5180, file: !3, line: 1212, column: 6)
!5183 = !DILocation(line: 1212, column: 6, scope: !5184)
!5184 = distinct !DILexicalBlock(scope: !5182, file: !3, line: 1212, column: 6)
!5185 = !DILocation(line: 1212, column: 6, scope: !5186)
!5186 = distinct !DILexicalBlock(scope: !5182, file: !3, line: 1212, column: 6)
!5187 = !{i32 -2141921656, i32 -2141921627, i32 -2141921581, i32 -2141921523, i32 -2141921469, i32 -2141921415, i32 -2141921360, i32 -2141921329}
!5188 = !DILocation(line: 1212, column: 6, scope: !5189)
!5189 = distinct !DILexicalBlock(scope: !5182, file: !3, line: 1212, column: 6)
!5190 = !{i32 -2141920924, i32 -2141920917, i32 -2141920865, i32 -2141920834, i32 -2141920804}
!5191 = !DILocation(line: 1212, column: 6, scope: !5192)
!5192 = distinct !DILexicalBlock(scope: !5182, file: !3, line: 1212, column: 6)
!5193 = !DILocation(line: 1212, column: 6, scope: !5177)
!5194 = !DILocation(line: 1212, column: 6, scope: !4294)
!5195 = !DILocation(line: 1213, column: 3, scope: !5177)
!5196 = !DILocation(line: 1214, column: 9, scope: !4294)
!5197 = !DILocation(line: 1214, column: 17, scope: !4294)
!5198 = !DILocation(line: 1214, column: 7, scope: !4294)
!5199 = !DILocation(line: 1216, column: 16, scope: !4294)
!5200 = !DILocation(line: 1216, column: 23, scope: !4294)
!5201 = !DILocation(line: 1216, column: 8, scope: !4294)
!5202 = !DILocation(line: 1216, column: 6, scope: !4294)
!5203 = !DILocation(line: 1217, column: 6, scope: !5204)
!5204 = distinct !DILexicalBlock(scope: !4294, file: !3, line: 1217, column: 6)
!5205 = !DILocation(line: 1217, column: 10, scope: !5204)
!5206 = !DILocation(line: 1217, column: 6, scope: !4294)
!5207 = !DILocation(line: 1218, column: 3, scope: !5204)
!5208 = !DILocation(line: 1220, column: 6, scope: !5209)
!5209 = distinct !DILexicalBlock(scope: !4294, file: !3, line: 1220, column: 6)
!5210 = !DILocation(line: 1220, column: 14, scope: !5209)
!5211 = !DILocation(line: 1220, column: 22, scope: !5209)
!5212 = !DILocation(line: 1220, column: 6, scope: !4294)
!5213 = !DILocation(line: 1221, column: 11, scope: !5209)
!5214 = !DILocation(line: 1221, column: 19, scope: !5209)
!5215 = !DILocation(line: 1221, column: 27, scope: !5209)
!5216 = !DILocation(line: 1221, column: 40, scope: !5209)
!5217 = !DILocation(line: 1221, column: 48, scope: !5209)
!5218 = !DILocation(line: 1221, column: 9, scope: !5209)
!5219 = !DILocation(line: 1221, column: 3, scope: !5209)
!5220 = !DILocation(line: 1223, column: 11, scope: !5209)
!5221 = !DILocation(line: 1223, column: 9, scope: !5209)
!5222 = !DILocation(line: 1225, column: 18, scope: !4294)
!5223 = !DILocation(line: 1225, column: 25, scope: !4294)
!5224 = !DILocation(line: 1225, column: 10, scope: !4294)
!5225 = !DILocation(line: 1225, column: 8, scope: !4294)
!5226 = !DILocation(line: 1226, column: 8, scope: !4294)
!5227 = !DILocation(line: 1226, column: 2, scope: !4294)
!5228 = !DILocation(line: 1227, column: 6, scope: !5229)
!5229 = distinct !DILexicalBlock(scope: !4294, file: !3, line: 1227, column: 6)
!5230 = !DILocation(line: 1227, column: 12, scope: !5229)
!5231 = !DILocation(line: 1227, column: 6, scope: !4294)
!5232 = !DILocation(line: 1228, column: 3, scope: !5229)
!5233 = !DILocation(line: 1230, column: 18, scope: !4294)
!5234 = !DILocation(line: 1230, column: 2, scope: !4294)
!5235 = !DILocation(line: 1230, column: 10, scope: !4294)
!5236 = !DILocation(line: 1230, column: 16, scope: !4294)
!5237 = !DILocation(line: 1231, column: 18, scope: !4294)
!5238 = !DILocation(line: 1231, column: 2, scope: !4294)
!5239 = !DILocation(line: 1231, column: 10, scope: !4294)
!5240 = !DILocation(line: 1231, column: 16, scope: !4294)
!5241 = !DILocation(line: 1233, column: 11, scope: !4294)
!5242 = !DILocation(line: 1233, column: 9, scope: !4294)
!5243 = !DILocation(line: 1234, column: 7, scope: !5244)
!5244 = distinct !DILexicalBlock(scope: !4294, file: !3, line: 1234, column: 6)
!5245 = !DILocation(line: 1234, column: 6, scope: !4294)
!5246 = !DILocation(line: 1235, column: 7, scope: !5247)
!5247 = distinct !DILexicalBlock(scope: !5244, file: !3, line: 1234, column: 15)
!5248 = !DILocation(line: 1236, column: 3, scope: !5247)
!5249 = !DILocation(line: 1239, column: 19, scope: !4294)
!5250 = !DILocation(line: 1239, column: 2, scope: !4294)
!5251 = !DILocation(line: 1239, column: 10, scope: !4294)
!5252 = !DILocation(line: 1239, column: 17, scope: !4294)
!5253 = !DILocation(line: 1241, column: 8, scope: !4294)
!5254 = !DILocation(line: 1241, column: 16, scope: !4294)
!5255 = !DILocation(line: 1241, column: 14, scope: !4294)
!5256 = !DILocation(line: 1241, column: 6, scope: !4294)
!5257 = !DILocation(line: 1243, column: 23, scope: !4294)
!5258 = !DILocation(line: 1243, column: 2, scope: !4294)
!5259 = !DILocation(line: 1243, column: 10, scope: !4294)
!5260 = !DILocation(line: 1243, column: 21, scope: !4294)
!5261 = !DILocation(line: 1245, column: 7, scope: !5262)
!5262 = distinct !DILexicalBlock(scope: !4294, file: !3, line: 1245, column: 6)
!5263 = !DILocation(line: 1245, column: 15, scope: !5262)
!5264 = !DILocation(line: 1245, column: 6, scope: !4294)
!5265 = !DILocation(line: 1246, column: 7, scope: !5266)
!5266 = distinct !DILexicalBlock(scope: !5262, file: !3, line: 1245, column: 27)
!5267 = !DILocation(line: 1247, column: 3, scope: !5266)
!5268 = !DILocation(line: 1249, column: 2, scope: !4294)
!5269 = !DILocation(line: 1249, column: 10, scope: !4294)
!5270 = !DILocation(line: 1249, column: 26, scope: !4294)
!5271 = !DILocation(line: 1251, column: 6, scope: !4294)
!5272 = !DILocation(line: 1252, column: 2, scope: !4294)
!5273 = !DILocation(line: 1252, column: 28, scope: !4294)
!5274 = !DILocation(line: 1252, column: 35, scope: !4294)
!5275 = !DILocation(line: 1252, column: 17, scope: !4294)
!5276 = !DILocation(line: 1252, column: 15, scope: !4294)
!5277 = !DILocation(line: 1252, column: 48, scope: !4294)
!5278 = !DILocation(line: 1253, column: 11, scope: !5279)
!5279 = distinct !DILexicalBlock(scope: !4294, file: !3, line: 1252, column: 57)
!5280 = !DILocation(line: 1253, column: 9, scope: !5279)
!5281 = !DILocation(line: 1255, column: 12, scope: !5282)
!5282 = distinct !DILexicalBlock(scope: !5279, file: !3, line: 1255, column: 7)
!5283 = !DILocation(line: 1255, column: 19, scope: !5282)
!5284 = !DILocation(line: 1255, column: 7, scope: !5279)
!5285 = !DILocation(line: 1256, column: 4, scope: !5286)
!5286 = distinct !DILexicalBlock(scope: !5282, file: !3, line: 1255, column: 45)
!5287 = !DILocation(line: 1257, column: 4, scope: !5286)
!5288 = !DILocation(line: 1260, column: 26, scope: !5289)
!5289 = distinct !DILexicalBlock(scope: !5279, file: !3, line: 1260, column: 7)
!5290 = !DILocation(line: 1260, column: 7, scope: !5289)
!5291 = !DILocation(line: 1260, column: 32, scope: !5289)
!5292 = !DILocation(line: 1260, column: 7, scope: !5279)
!5293 = !DILocation(line: 1261, column: 4, scope: !5294)
!5294 = distinct !DILexicalBlock(scope: !5289, file: !3, line: 1260, column: 48)
!5295 = !DILocation(line: 1264, column: 4, scope: !5294)
!5296 = !DILocation(line: 1267, column: 7, scope: !5297)
!5297 = distinct !DILexicalBlock(scope: !5279, file: !3, line: 1267, column: 7)
!5298 = !DILocation(line: 1267, column: 16, scope: !5297)
!5299 = !DILocation(line: 1267, column: 13, scope: !5297)
!5300 = !DILocation(line: 1267, column: 7, scope: !5279)
!5301 = !DILocation(line: 1268, column: 8, scope: !5302)
!5302 = distinct !DILexicalBlock(scope: !5303, file: !3, line: 1268, column: 8)
!5303 = distinct !DILexicalBlock(scope: !5297, file: !3, line: 1267, column: 21)
!5304 = !DILocation(line: 1268, column: 16, scope: !5302)
!5305 = !DILocation(line: 1268, column: 8, scope: !5303)
!5306 = !DILocation(line: 1269, column: 5, scope: !5307)
!5307 = distinct !DILexicalBlock(scope: !5302, file: !3, line: 1268, column: 38)
!5308 = !DILocation(line: 1270, column: 5, scope: !5307)
!5309 = !DILocation(line: 1272, column: 8, scope: !5310)
!5310 = distinct !DILexicalBlock(scope: !5303, file: !3, line: 1272, column: 8)
!5311 = !DILocation(line: 1272, column: 16, scope: !5310)
!5312 = !DILocation(line: 1272, column: 22, scope: !5310)
!5313 = !DILocation(line: 1272, column: 8, scope: !5303)
!5314 = !DILocation(line: 1273, column: 5, scope: !5315)
!5315 = distinct !DILexicalBlock(scope: !5310, file: !3, line: 1272, column: 39)
!5316 = !DILocation(line: 1274, column: 5, scope: !5315)
!5317 = !DILocation(line: 1281, column: 36, scope: !5303)
!5318 = !DILocation(line: 1281, column: 4, scope: !5303)
!5319 = !DILocation(line: 1283, column: 10, scope: !5303)
!5320 = !DILocation(line: 1283, column: 18, scope: !5303)
!5321 = !DILocation(line: 1283, column: 4, scope: !5303)
!5322 = !DILocation(line: 1284, column: 10, scope: !5303)
!5323 = !DILocation(line: 1284, column: 4, scope: !5303)
!5324 = !DILocation(line: 1285, column: 4, scope: !5303)
!5325 = !DILocation(line: 1285, column: 12, scope: !5303)
!5326 = !DILocation(line: 1285, column: 19, scope: !5303)
!5327 = !DILocation(line: 1287, column: 4, scope: !5303)
!5328 = distinct !{!5328, !5272, !5329}
!5329 = !DILocation(line: 1289, column: 2, scope: !4294)
!5330 = !DILocation(line: 1291, column: 2, scope: !4294)
!5331 = !DILabel(scope: !4294, name: "err", file: !3, line: 1293)
!5332 = !DILocation(line: 1293, column: 1, scope: !4294)
!5333 = !DILocation(line: 1294, column: 8, scope: !4294)
!5334 = !DILocation(line: 1294, column: 16, scope: !4294)
!5335 = !DILocation(line: 1294, column: 2, scope: !4294)
!5336 = !DILabel(scope: !4294, name: "alloc_err", file: !3, line: 1295)
!5337 = !DILocation(line: 1295, column: 1, scope: !4294)
!5338 = !DILocation(line: 1296, column: 8, scope: !4294)
!5339 = !DILocation(line: 1296, column: 2, scope: !4294)
!5340 = !DILocation(line: 1297, column: 19, scope: !4294)
!5341 = !DILocation(line: 1297, column: 2, scope: !4294)
!5342 = !DILocation(line: 1298, column: 9, scope: !4294)
!5343 = !DILocation(line: 1298, column: 2, scope: !4294)
!5344 = !DILocation(line: 1299, column: 1, scope: !4294)
!5345 = distinct !DISubprogram(name: "hid_parser_main", scope: !3, file: !3, line: 604, type: !4297, scopeLine: 605, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !371)
!5346 = !DILocalVariable(name: "parser", arg: 1, scope: !5345, file: !3, line: 604, type: !4299)
!5347 = !DILocation(line: 604, column: 47, scope: !5345)
!5348 = !DILocalVariable(name: "item", arg: 2, scope: !5345, file: !3, line: 604, type: !4337)
!5349 = !DILocation(line: 604, column: 72, scope: !5345)
!5350 = !DILocalVariable(name: "data", scope: !5345, file: !3, line: 606, type: !239)
!5351 = !DILocation(line: 606, column: 8, scope: !5345)
!5352 = !DILocalVariable(name: "ret", scope: !5345, file: !3, line: 607, type: !169)
!5353 = !DILocation(line: 607, column: 6, scope: !5345)
!5354 = !DILocation(line: 609, column: 34, scope: !5345)
!5355 = !DILocation(line: 609, column: 2, scope: !5345)
!5356 = !DILocation(line: 611, column: 20, scope: !5345)
!5357 = !DILocation(line: 611, column: 9, scope: !5345)
!5358 = !DILocation(line: 611, column: 7, scope: !5345)
!5359 = !DILocation(line: 613, column: 10, scope: !5345)
!5360 = !DILocation(line: 613, column: 16, scope: !5345)
!5361 = !DILocation(line: 613, column: 2, scope: !5345)
!5362 = !DILocation(line: 615, column: 25, scope: !5363)
!5363 = distinct !DILexicalBlock(scope: !5345, file: !3, line: 613, column: 21)
!5364 = !DILocation(line: 615, column: 33, scope: !5363)
!5365 = !DILocation(line: 615, column: 38, scope: !5363)
!5366 = !DILocation(line: 615, column: 9, scope: !5363)
!5367 = !DILocation(line: 615, column: 7, scope: !5363)
!5368 = !DILocation(line: 616, column: 3, scope: !5363)
!5369 = !DILocation(line: 618, column: 26, scope: !5363)
!5370 = !DILocation(line: 618, column: 9, scope: !5363)
!5371 = !DILocation(line: 618, column: 7, scope: !5363)
!5372 = !DILocation(line: 619, column: 3, scope: !5363)
!5373 = !DILocation(line: 621, column: 23, scope: !5363)
!5374 = !DILocation(line: 621, column: 49, scope: !5363)
!5375 = !DILocation(line: 621, column: 9, scope: !5363)
!5376 = !DILocation(line: 621, column: 7, scope: !5363)
!5377 = !DILocation(line: 622, column: 3, scope: !5363)
!5378 = !DILocation(line: 624, column: 23, scope: !5363)
!5379 = !DILocation(line: 624, column: 50, scope: !5363)
!5380 = !DILocation(line: 624, column: 9, scope: !5363)
!5381 = !DILocation(line: 624, column: 7, scope: !5363)
!5382 = !DILocation(line: 625, column: 3, scope: !5363)
!5383 = !DILocation(line: 627, column: 23, scope: !5363)
!5384 = !DILocation(line: 627, column: 51, scope: !5363)
!5385 = !DILocation(line: 627, column: 9, scope: !5363)
!5386 = !DILocation(line: 627, column: 7, scope: !5363)
!5387 = !DILocation(line: 628, column: 3, scope: !5363)
!5388 = !DILocation(line: 630, column: 3, scope: !5363)
!5389 = !DILocation(line: 631, column: 7, scope: !5363)
!5390 = !DILocation(line: 632, column: 2, scope: !5363)
!5391 = !DILocation(line: 634, column: 10, scope: !5345)
!5392 = !DILocation(line: 634, column: 18, scope: !5345)
!5393 = !DILocation(line: 634, column: 2, scope: !5345)
!5394 = !DILocation(line: 636, column: 9, scope: !5345)
!5395 = !DILocation(line: 636, column: 2, scope: !5345)
!5396 = distinct !DISubprogram(name: "hid_parser_global", scope: !3, file: !3, line: 367, type: !4297, scopeLine: 368, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !371)
!5397 = !DILocalVariable(name: "parser", arg: 1, scope: !5396, file: !3, line: 367, type: !4299)
!5398 = !DILocation(line: 367, column: 49, scope: !5396)
!5399 = !DILocalVariable(name: "item", arg: 2, scope: !5396, file: !3, line: 367, type: !4337)
!5400 = !DILocation(line: 367, column: 74, scope: !5396)
!5401 = !DILocalVariable(name: "raw_value", scope: !5396, file: !3, line: 369, type: !168)
!5402 = !DILocation(line: 369, column: 8, scope: !5396)
!5403 = !DILocation(line: 370, column: 10, scope: !5396)
!5404 = !DILocation(line: 370, column: 16, scope: !5396)
!5405 = !DILocation(line: 370, column: 2, scope: !5396)
!5406 = !DILocation(line: 373, column: 7, scope: !5407)
!5407 = distinct !DILexicalBlock(scope: !5408, file: !3, line: 373, column: 7)
!5408 = distinct !DILexicalBlock(scope: !5396, file: !3, line: 370, column: 21)
!5409 = !DILocation(line: 373, column: 15, scope: !5407)
!5410 = !DILocation(line: 373, column: 32, scope: !5407)
!5411 = !DILocation(line: 373, column: 7, scope: !5408)
!5412 = !DILocation(line: 374, column: 4, scope: !5413)
!5413 = distinct !DILexicalBlock(scope: !5407, file: !3, line: 373, column: 58)
!5414 = !DILocation(line: 375, column: 4, scope: !5413)
!5415 = !DILocation(line: 378, column: 10, scope: !5408)
!5416 = !DILocation(line: 378, column: 18, scope: !5408)
!5417 = !DILocation(line: 378, column: 33, scope: !5408)
!5418 = !DILocation(line: 378, column: 41, scope: !5408)
!5419 = !DILocation(line: 378, column: 57, scope: !5408)
!5420 = !DILocation(line: 378, column: 31, scope: !5408)
!5421 = !DILocation(line: 378, column: 3, scope: !5408)
!5422 = !DILocation(line: 379, column: 5, scope: !5408)
!5423 = !DILocation(line: 379, column: 13, scope: !5408)
!5424 = !DILocation(line: 380, column: 3, scope: !5408)
!5425 = !DILocation(line: 384, column: 8, scope: !5426)
!5426 = distinct !DILexicalBlock(scope: !5408, file: !3, line: 384, column: 7)
!5427 = !DILocation(line: 384, column: 16, scope: !5426)
!5428 = !DILocation(line: 384, column: 7, scope: !5408)
!5429 = !DILocation(line: 385, column: 4, scope: !5430)
!5430 = distinct !DILexicalBlock(scope: !5426, file: !3, line: 384, column: 34)
!5431 = !DILocation(line: 386, column: 4, scope: !5430)
!5432 = !DILocation(line: 389, column: 11, scope: !5408)
!5433 = !DILocation(line: 389, column: 19, scope: !5408)
!5434 = !DILocation(line: 389, column: 3, scope: !5408)
!5435 = !DILocation(line: 389, column: 27, scope: !5408)
!5436 = !DILocation(line: 389, column: 35, scope: !5408)
!5437 = !DILocation(line: 390, column: 6, scope: !5408)
!5438 = !DILocation(line: 390, column: 14, scope: !5408)
!5439 = !DILocation(line: 390, column: 4, scope: !5408)
!5440 = !DILocation(line: 389, column: 48, scope: !5408)
!5441 = !DILocation(line: 391, column: 3, scope: !5408)
!5442 = !DILocation(line: 394, column: 42, scope: !5408)
!5443 = !DILocation(line: 394, column: 31, scope: !5408)
!5444 = !DILocation(line: 394, column: 3, scope: !5408)
!5445 = !DILocation(line: 394, column: 11, scope: !5408)
!5446 = !DILocation(line: 394, column: 18, scope: !5408)
!5447 = !DILocation(line: 394, column: 29, scope: !5408)
!5448 = !DILocation(line: 395, column: 3, scope: !5408)
!5449 = !DILocation(line: 398, column: 47, scope: !5408)
!5450 = !DILocation(line: 398, column: 36, scope: !5408)
!5451 = !DILocation(line: 398, column: 3, scope: !5408)
!5452 = !DILocation(line: 398, column: 11, scope: !5408)
!5453 = !DILocation(line: 398, column: 18, scope: !5408)
!5454 = !DILocation(line: 398, column: 34, scope: !5408)
!5455 = !DILocation(line: 399, column: 3, scope: !5408)
!5456 = !DILocation(line: 402, column: 7, scope: !5457)
!5457 = distinct !DILexicalBlock(scope: !5408, file: !3, line: 402, column: 7)
!5458 = !DILocation(line: 402, column: 15, scope: !5457)
!5459 = !DILocation(line: 402, column: 22, scope: !5457)
!5460 = !DILocation(line: 402, column: 38, scope: !5457)
!5461 = !DILocation(line: 402, column: 7, scope: !5408)
!5462 = !DILocation(line: 403, column: 48, scope: !5457)
!5463 = !DILocation(line: 403, column: 37, scope: !5457)
!5464 = !DILocation(line: 403, column: 4, scope: !5457)
!5465 = !DILocation(line: 403, column: 12, scope: !5457)
!5466 = !DILocation(line: 403, column: 19, scope: !5457)
!5467 = !DILocation(line: 403, column: 35, scope: !5457)
!5468 = !DILocation(line: 405, column: 48, scope: !5457)
!5469 = !DILocation(line: 405, column: 37, scope: !5457)
!5470 = !DILocation(line: 405, column: 4, scope: !5457)
!5471 = !DILocation(line: 405, column: 12, scope: !5457)
!5472 = !DILocation(line: 405, column: 19, scope: !5457)
!5473 = !DILocation(line: 405, column: 35, scope: !5457)
!5474 = !DILocation(line: 406, column: 3, scope: !5408)
!5475 = !DILocation(line: 409, column: 48, scope: !5408)
!5476 = !DILocation(line: 409, column: 37, scope: !5408)
!5477 = !DILocation(line: 409, column: 3, scope: !5408)
!5478 = !DILocation(line: 409, column: 11, scope: !5408)
!5479 = !DILocation(line: 409, column: 18, scope: !5408)
!5480 = !DILocation(line: 409, column: 35, scope: !5408)
!5481 = !DILocation(line: 410, column: 3, scope: !5408)
!5482 = !DILocation(line: 413, column: 7, scope: !5483)
!5483 = distinct !DILexicalBlock(scope: !5408, file: !3, line: 413, column: 7)
!5484 = !DILocation(line: 413, column: 15, scope: !5483)
!5485 = !DILocation(line: 413, column: 22, scope: !5483)
!5486 = !DILocation(line: 413, column: 39, scope: !5483)
!5487 = !DILocation(line: 413, column: 7, scope: !5408)
!5488 = !DILocation(line: 414, column: 49, scope: !5483)
!5489 = !DILocation(line: 414, column: 38, scope: !5483)
!5490 = !DILocation(line: 414, column: 4, scope: !5483)
!5491 = !DILocation(line: 414, column: 12, scope: !5483)
!5492 = !DILocation(line: 414, column: 19, scope: !5483)
!5493 = !DILocation(line: 414, column: 36, scope: !5483)
!5494 = !DILocation(line: 416, column: 49, scope: !5483)
!5495 = !DILocation(line: 416, column: 38, scope: !5483)
!5496 = !DILocation(line: 416, column: 4, scope: !5483)
!5497 = !DILocation(line: 416, column: 12, scope: !5483)
!5498 = !DILocation(line: 416, column: 19, scope: !5483)
!5499 = !DILocation(line: 416, column: 36, scope: !5483)
!5500 = !DILocation(line: 417, column: 3, scope: !5408)
!5501 = !DILocation(line: 424, column: 26, scope: !5408)
!5502 = !DILocation(line: 424, column: 15, scope: !5408)
!5503 = !DILocation(line: 424, column: 13, scope: !5408)
!5504 = !DILocation(line: 425, column: 9, scope: !5505)
!5505 = distinct !DILexicalBlock(scope: !5408, file: !3, line: 425, column: 7)
!5506 = !DILocation(line: 425, column: 19, scope: !5505)
!5507 = !DILocation(line: 425, column: 7, scope: !5408)
!5508 = !DILocation(line: 426, column: 46, scope: !5505)
!5509 = !DILocation(line: 426, column: 35, scope: !5505)
!5510 = !DILocation(line: 426, column: 4, scope: !5505)
!5511 = !DILocation(line: 426, column: 12, scope: !5505)
!5512 = !DILocation(line: 426, column: 19, scope: !5505)
!5513 = !DILocation(line: 426, column: 33, scope: !5505)
!5514 = !DILocation(line: 428, column: 35, scope: !5505)
!5515 = !DILocation(line: 428, column: 4, scope: !5505)
!5516 = !DILocation(line: 428, column: 12, scope: !5505)
!5517 = !DILocation(line: 428, column: 19, scope: !5505)
!5518 = !DILocation(line: 428, column: 33, scope: !5505)
!5519 = !DILocation(line: 429, column: 3, scope: !5408)
!5520 = !DILocation(line: 432, column: 36, scope: !5408)
!5521 = !DILocation(line: 432, column: 25, scope: !5408)
!5522 = !DILocation(line: 432, column: 3, scope: !5408)
!5523 = !DILocation(line: 432, column: 11, scope: !5408)
!5524 = !DILocation(line: 432, column: 18, scope: !5408)
!5525 = !DILocation(line: 432, column: 23, scope: !5408)
!5526 = !DILocation(line: 433, column: 3, scope: !5408)
!5527 = !DILocation(line: 436, column: 43, scope: !5408)
!5528 = !DILocation(line: 436, column: 32, scope: !5408)
!5529 = !DILocation(line: 436, column: 3, scope: !5408)
!5530 = !DILocation(line: 436, column: 11, scope: !5408)
!5531 = !DILocation(line: 436, column: 18, scope: !5408)
!5532 = !DILocation(line: 436, column: 30, scope: !5408)
!5533 = !DILocation(line: 437, column: 7, scope: !5534)
!5534 = distinct !DILexicalBlock(scope: !5408, file: !3, line: 437, column: 7)
!5535 = !DILocation(line: 437, column: 15, scope: !5534)
!5536 = !DILocation(line: 437, column: 22, scope: !5534)
!5537 = !DILocation(line: 437, column: 34, scope: !5534)
!5538 = !DILocation(line: 437, column: 7, scope: !5408)
!5539 = !DILocation(line: 438, column: 4, scope: !5540)
!5540 = distinct !DILexicalBlock(scope: !5534, file: !3, line: 437, column: 41)
!5541 = !DILocation(line: 440, column: 4, scope: !5540)
!5542 = !DILocation(line: 442, column: 3, scope: !5408)
!5543 = !DILocation(line: 445, column: 44, scope: !5408)
!5544 = !DILocation(line: 445, column: 33, scope: !5408)
!5545 = !DILocation(line: 445, column: 3, scope: !5408)
!5546 = !DILocation(line: 445, column: 11, scope: !5408)
!5547 = !DILocation(line: 445, column: 18, scope: !5408)
!5548 = !DILocation(line: 445, column: 31, scope: !5408)
!5549 = !DILocation(line: 446, column: 7, scope: !5550)
!5550 = distinct !DILexicalBlock(scope: !5408, file: !3, line: 446, column: 7)
!5551 = !DILocation(line: 446, column: 15, scope: !5550)
!5552 = !DILocation(line: 446, column: 22, scope: !5550)
!5553 = !DILocation(line: 446, column: 35, scope: !5550)
!5554 = !DILocation(line: 446, column: 7, scope: !5408)
!5555 = !DILocation(line: 447, column: 4, scope: !5556)
!5556 = distinct !DILexicalBlock(scope: !5550, file: !3, line: 446, column: 53)
!5557 = !DILocation(line: 449, column: 4, scope: !5556)
!5558 = !DILocation(line: 451, column: 3, scope: !5408)
!5559 = !DILocation(line: 454, column: 41, scope: !5408)
!5560 = !DILocation(line: 454, column: 30, scope: !5408)
!5561 = !DILocation(line: 454, column: 3, scope: !5408)
!5562 = !DILocation(line: 454, column: 11, scope: !5408)
!5563 = !DILocation(line: 454, column: 18, scope: !5408)
!5564 = !DILocation(line: 454, column: 28, scope: !5408)
!5565 = !DILocation(line: 455, column: 7, scope: !5566)
!5566 = distinct !DILexicalBlock(scope: !5408, file: !3, line: 455, column: 7)
!5567 = !DILocation(line: 455, column: 15, scope: !5566)
!5568 = !DILocation(line: 455, column: 22, scope: !5566)
!5569 = !DILocation(line: 455, column: 32, scope: !5566)
!5570 = !DILocation(line: 455, column: 37, scope: !5566)
!5571 = !DILocation(line: 456, column: 7, scope: !5566)
!5572 = !DILocation(line: 456, column: 15, scope: !5566)
!5573 = !DILocation(line: 456, column: 22, scope: !5566)
!5574 = !DILocation(line: 456, column: 32, scope: !5566)
!5575 = !DILocation(line: 455, column: 7, scope: !5408)
!5576 = !DILocation(line: 457, column: 4, scope: !5577)
!5577 = distinct !DILexicalBlock(scope: !5566, file: !3, line: 456, column: 48)
!5578 = !DILocation(line: 459, column: 4, scope: !5577)
!5579 = !DILocation(line: 461, column: 3, scope: !5408)
!5580 = !DILocation(line: 464, column: 3, scope: !5408)
!5581 = !DILocation(line: 465, column: 3, scope: !5408)
!5582 = !DILocation(line: 467, column: 1, scope: !5396)
!5583 = distinct !DISubprogram(name: "hid_parser_local", scope: !3, file: !3, line: 473, type: !4297, scopeLine: 474, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !371)
!5584 = !DILocalVariable(name: "parser", arg: 1, scope: !5583, file: !3, line: 473, type: !4299)
!5585 = !DILocation(line: 473, column: 48, scope: !5583)
!5586 = !DILocalVariable(name: "item", arg: 2, scope: !5583, file: !3, line: 473, type: !4337)
!5587 = !DILocation(line: 473, column: 73, scope: !5583)
!5588 = !DILocalVariable(name: "data", scope: !5583, file: !3, line: 475, type: !239)
!5589 = !DILocation(line: 475, column: 8, scope: !5583)
!5590 = !DILocalVariable(name: "n", scope: !5583, file: !3, line: 476, type: !7)
!5591 = !DILocation(line: 476, column: 11, scope: !5583)
!5592 = !DILocalVariable(name: "count", scope: !5583, file: !3, line: 477, type: !239)
!5593 = !DILocation(line: 477, column: 8, scope: !5583)
!5594 = !DILocation(line: 479, column: 20, scope: !5583)
!5595 = !DILocation(line: 479, column: 9, scope: !5583)
!5596 = !DILocation(line: 479, column: 7, scope: !5583)
!5597 = !DILocation(line: 481, column: 10, scope: !5583)
!5598 = !DILocation(line: 481, column: 16, scope: !5583)
!5599 = !DILocation(line: 481, column: 2, scope: !5583)
!5600 = !DILocation(line: 484, column: 7, scope: !5601)
!5601 = distinct !DILexicalBlock(scope: !5602, file: !3, line: 484, column: 7)
!5602 = distinct !DILexicalBlock(scope: !5583, file: !3, line: 481, column: 21)
!5603 = !DILocation(line: 484, column: 7, scope: !5602)
!5604 = !DILocation(line: 491, column: 8, scope: !5605)
!5605 = distinct !DILexicalBlock(scope: !5606, file: !3, line: 491, column: 8)
!5606 = distinct !DILexicalBlock(scope: !5601, file: !3, line: 484, column: 13)
!5607 = !DILocation(line: 491, column: 16, scope: !5605)
!5608 = !DILocation(line: 491, column: 22, scope: !5605)
!5609 = !DILocation(line: 491, column: 38, scope: !5605)
!5610 = !DILocation(line: 491, column: 8, scope: !5606)
!5611 = !DILocation(line: 492, column: 5, scope: !5612)
!5612 = distinct !DILexicalBlock(scope: !5605, file: !3, line: 491, column: 44)
!5613 = !DILocation(line: 493, column: 5, scope: !5612)
!5614 = !DILocation(line: 495, column: 4, scope: !5606)
!5615 = !DILocation(line: 495, column: 12, scope: !5606)
!5616 = !DILocation(line: 495, column: 18, scope: !5606)
!5617 = !DILocation(line: 495, column: 33, scope: !5606)
!5618 = !DILocation(line: 496, column: 4, scope: !5606)
!5619 = !DILocation(line: 496, column: 12, scope: !5606)
!5620 = !DILocation(line: 496, column: 18, scope: !5606)
!5621 = !DILocation(line: 496, column: 34, scope: !5606)
!5622 = !DILocation(line: 497, column: 3, scope: !5606)
!5623 = !DILocation(line: 498, column: 8, scope: !5624)
!5624 = distinct !DILexicalBlock(scope: !5625, file: !3, line: 498, column: 8)
!5625 = distinct !DILexicalBlock(scope: !5601, file: !3, line: 497, column: 10)
!5626 = !DILocation(line: 498, column: 16, scope: !5624)
!5627 = !DILocation(line: 498, column: 22, scope: !5624)
!5628 = !DILocation(line: 498, column: 38, scope: !5624)
!5629 = !DILocation(line: 498, column: 8, scope: !5625)
!5630 = !DILocation(line: 499, column: 5, scope: !5631)
!5631 = distinct !DILexicalBlock(scope: !5624, file: !3, line: 498, column: 43)
!5632 = !DILocation(line: 500, column: 5, scope: !5631)
!5633 = !DILocation(line: 502, column: 4, scope: !5625)
!5634 = !DILocation(line: 502, column: 12, scope: !5625)
!5635 = !DILocation(line: 502, column: 18, scope: !5625)
!5636 = !DILocation(line: 502, column: 33, scope: !5625)
!5637 = !DILocation(line: 504, column: 3, scope: !5602)
!5638 = !DILocation(line: 508, column: 7, scope: !5639)
!5639 = distinct !DILexicalBlock(scope: !5602, file: !3, line: 508, column: 7)
!5640 = !DILocation(line: 508, column: 15, scope: !5639)
!5641 = !DILocation(line: 508, column: 21, scope: !5639)
!5642 = !DILocation(line: 508, column: 38, scope: !5639)
!5643 = !DILocation(line: 508, column: 7, scope: !5602)
!5644 = !DILocation(line: 509, column: 4, scope: !5645)
!5645 = distinct !DILexicalBlock(scope: !5639, file: !3, line: 508, column: 43)
!5646 = !DILocation(line: 509, column: 4, scope: !5647)
!5647 = distinct !DILexicalBlock(scope: !5648, file: !3, line: 509, column: 4)
!5648 = distinct !DILexicalBlock(scope: !5645, file: !3, line: 509, column: 4)
!5649 = !DILocation(line: 509, column: 4, scope: !5648)
!5650 = !DILocation(line: 510, column: 4, scope: !5645)
!5651 = !DILocation(line: 513, column: 24, scope: !5602)
!5652 = !DILocation(line: 513, column: 32, scope: !5602)
!5653 = !DILocation(line: 513, column: 38, scope: !5602)
!5654 = !DILocation(line: 513, column: 44, scope: !5602)
!5655 = !DILocation(line: 513, column: 10, scope: !5602)
!5656 = !DILocation(line: 513, column: 3, scope: !5602)
!5657 = !DILocation(line: 517, column: 7, scope: !5658)
!5658 = distinct !DILexicalBlock(scope: !5602, file: !3, line: 517, column: 7)
!5659 = !DILocation(line: 517, column: 15, scope: !5658)
!5660 = !DILocation(line: 517, column: 21, scope: !5658)
!5661 = !DILocation(line: 517, column: 38, scope: !5658)
!5662 = !DILocation(line: 517, column: 7, scope: !5602)
!5663 = !DILocation(line: 518, column: 4, scope: !5664)
!5664 = distinct !DILexicalBlock(scope: !5658, file: !3, line: 517, column: 43)
!5665 = !DILocation(line: 518, column: 4, scope: !5666)
!5666 = distinct !DILexicalBlock(scope: !5667, file: !3, line: 518, column: 4)
!5667 = distinct !DILexicalBlock(scope: !5664, file: !3, line: 518, column: 4)
!5668 = !DILocation(line: 518, column: 4, scope: !5667)
!5669 = !DILocation(line: 519, column: 4, scope: !5664)
!5670 = !DILocation(line: 522, column: 33, scope: !5602)
!5671 = !DILocation(line: 522, column: 3, scope: !5602)
!5672 = !DILocation(line: 522, column: 11, scope: !5602)
!5673 = !DILocation(line: 522, column: 17, scope: !5602)
!5674 = !DILocation(line: 522, column: 31, scope: !5602)
!5675 = !DILocation(line: 523, column: 3, scope: !5602)
!5676 = !DILocation(line: 527, column: 7, scope: !5677)
!5677 = distinct !DILexicalBlock(scope: !5602, file: !3, line: 527, column: 7)
!5678 = !DILocation(line: 527, column: 15, scope: !5677)
!5679 = !DILocation(line: 527, column: 21, scope: !5677)
!5680 = !DILocation(line: 527, column: 38, scope: !5677)
!5681 = !DILocation(line: 527, column: 7, scope: !5602)
!5682 = !DILocation(line: 528, column: 4, scope: !5683)
!5683 = distinct !DILexicalBlock(scope: !5677, file: !3, line: 527, column: 43)
!5684 = !DILocation(line: 528, column: 4, scope: !5685)
!5685 = distinct !DILexicalBlock(scope: !5686, file: !3, line: 528, column: 4)
!5686 = distinct !DILexicalBlock(scope: !5683, file: !3, line: 528, column: 4)
!5687 = !DILocation(line: 528, column: 4, scope: !5686)
!5688 = !DILocation(line: 529, column: 4, scope: !5683)
!5689 = !DILocation(line: 532, column: 11, scope: !5602)
!5690 = !DILocation(line: 532, column: 18, scope: !5602)
!5691 = !DILocation(line: 532, column: 26, scope: !5602)
!5692 = !DILocation(line: 532, column: 32, scope: !5602)
!5693 = !DILocation(line: 532, column: 16, scope: !5602)
!5694 = !DILocation(line: 532, column: 9, scope: !5602)
!5695 = !DILocation(line: 533, column: 7, scope: !5696)
!5696 = distinct !DILexicalBlock(scope: !5602, file: !3, line: 533, column: 7)
!5697 = !DILocation(line: 533, column: 15, scope: !5696)
!5698 = !DILocation(line: 533, column: 23, scope: !5696)
!5699 = !DILocation(line: 533, column: 29, scope: !5696)
!5700 = !DILocation(line: 533, column: 13, scope: !5696)
!5701 = !DILocation(line: 533, column: 41, scope: !5696)
!5702 = !DILocation(line: 533, column: 7, scope: !5602)
!5703 = !DILocation(line: 538, column: 18, scope: !5704)
!5704 = distinct !DILexicalBlock(scope: !5705, file: !3, line: 538, column: 8)
!5705 = distinct !DILexicalBlock(scope: !5696, file: !3, line: 533, column: 60)
!5706 = !DILocation(line: 538, column: 26, scope: !5704)
!5707 = !DILocation(line: 538, column: 34, scope: !5704)
!5708 = !DILocation(line: 538, column: 8, scope: !5704)
!5709 = !DILocation(line: 538, column: 8, scope: !5705)
!5710 = !DILocation(line: 539, column: 5, scope: !5704)
!5711 = !DILocation(line: 541, column: 28, scope: !5705)
!5712 = !DILocation(line: 541, column: 36, scope: !5705)
!5713 = !DILocation(line: 541, column: 42, scope: !5705)
!5714 = !DILocation(line: 541, column: 26, scope: !5705)
!5715 = !DILocation(line: 542, column: 5, scope: !5705)
!5716 = !DILocation(line: 542, column: 13, scope: !5705)
!5717 = !DILocation(line: 542, column: 19, scope: !5705)
!5718 = !DILocation(line: 541, column: 54, scope: !5705)
!5719 = !DILocation(line: 542, column: 33, scope: !5705)
!5720 = !DILocation(line: 541, column: 9, scope: !5705)
!5721 = !DILocation(line: 543, column: 8, scope: !5722)
!5722 = distinct !DILexicalBlock(scope: !5705, file: !3, line: 543, column: 8)
!5723 = !DILocation(line: 543, column: 13, scope: !5722)
!5724 = !DILocation(line: 543, column: 8, scope: !5705)
!5725 = !DILocation(line: 544, column: 5, scope: !5726)
!5726 = distinct !DILexicalBlock(scope: !5722, file: !3, line: 543, column: 19)
!5727 = !DILocation(line: 546, column: 5, scope: !5726)
!5728 = !DILocation(line: 548, column: 3, scope: !5705)
!5729 = !DILocation(line: 550, column: 12, scope: !5730)
!5730 = distinct !DILexicalBlock(scope: !5602, file: !3, line: 550, column: 3)
!5731 = !DILocation(line: 550, column: 20, scope: !5730)
!5732 = !DILocation(line: 550, column: 26, scope: !5730)
!5733 = !DILocation(line: 550, column: 10, scope: !5730)
!5734 = !DILocation(line: 550, column: 8, scope: !5730)
!5735 = !DILocation(line: 550, column: 41, scope: !5736)
!5736 = distinct !DILexicalBlock(scope: !5730, file: !3, line: 550, column: 3)
!5737 = !DILocation(line: 550, column: 46, scope: !5736)
!5738 = !DILocation(line: 550, column: 43, scope: !5736)
!5739 = !DILocation(line: 550, column: 3, scope: !5730)
!5740 = !DILocation(line: 551, column: 22, scope: !5741)
!5741 = distinct !DILexicalBlock(scope: !5736, file: !3, line: 551, column: 8)
!5742 = !DILocation(line: 551, column: 30, scope: !5741)
!5743 = !DILocation(line: 551, column: 33, scope: !5741)
!5744 = !DILocation(line: 551, column: 39, scope: !5741)
!5745 = !DILocation(line: 551, column: 8, scope: !5741)
!5746 = !DILocation(line: 551, column: 8, scope: !5736)
!5747 = !DILocation(line: 552, column: 5, scope: !5748)
!5748 = distinct !DILexicalBlock(scope: !5741, file: !3, line: 551, column: 46)
!5749 = !DILocation(line: 552, column: 5, scope: !5750)
!5750 = distinct !DILexicalBlock(scope: !5751, file: !3, line: 552, column: 5)
!5751 = distinct !DILexicalBlock(scope: !5748, file: !3, line: 552, column: 5)
!5752 = !DILocation(line: 552, column: 5, scope: !5751)
!5753 = !DILocation(line: 553, column: 5, scope: !5748)
!5754 = !DILocation(line: 551, column: 43, scope: !5741)
!5755 = !DILocation(line: 550, column: 53, scope: !5736)
!5756 = !DILocation(line: 550, column: 3, scope: !5736)
!5757 = distinct !{!5757, !5739, !5758}
!5758 = !DILocation(line: 554, column: 4, scope: !5730)
!5759 = !DILocation(line: 555, column: 3, scope: !5602)
!5760 = !DILocation(line: 559, column: 3, scope: !5602)
!5761 = !DILocation(line: 559, column: 3, scope: !5762)
!5762 = distinct !DILexicalBlock(scope: !5763, file: !3, line: 559, column: 3)
!5763 = distinct !DILexicalBlock(scope: !5602, file: !3, line: 559, column: 3)
!5764 = !DILocation(line: 559, column: 3, scope: !5763)
!5765 = !DILocation(line: 560, column: 3, scope: !5602)
!5766 = !DILocation(line: 563, column: 1, scope: !5583)
!5767 = distinct !DISubprogram(name: "hid_parser_reserved", scope: !3, file: !3, line: 643, type: !4297, scopeLine: 644, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !371)
!5768 = !DILocalVariable(name: "parser", arg: 1, scope: !5767, file: !3, line: 643, type: !4299)
!5769 = !DILocation(line: 643, column: 51, scope: !5767)
!5770 = !DILocalVariable(name: "item", arg: 2, scope: !5767, file: !3, line: 643, type: !4337)
!5771 = !DILocation(line: 643, column: 76, scope: !5767)
!5772 = !DILocation(line: 645, column: 2, scope: !5767)
!5773 = !DILocation(line: 645, column: 2, scope: !5774)
!5774 = distinct !DILexicalBlock(scope: !5775, file: !3, line: 645, column: 2)
!5775 = distinct !DILexicalBlock(scope: !5767, file: !3, line: 645, column: 2)
!5776 = !DILocation(line: 645, column: 2, scope: !5775)
!5777 = !DILocation(line: 646, column: 2, scope: !5767)
!5778 = distinct !DISubprogram(name: "kcalloc", scope: !105, file: !105, line: 601, type: !5779, scopeLine: 602, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !371)
!5779 = !DISubroutineType(types: !5780)
!5780 = !{!114, !604, !604, !112}
!5781 = !DILocalVariable(name: "n", arg: 1, scope: !5778, file: !105, line: 601, type: !604)
!5782 = !DILocation(line: 601, column: 36, scope: !5778)
!5783 = !DILocalVariable(name: "size", arg: 2, scope: !5778, file: !105, line: 601, type: !604)
!5784 = !DILocation(line: 601, column: 46, scope: !5778)
!5785 = !DILocalVariable(name: "flags", arg: 3, scope: !5778, file: !105, line: 601, type: !112)
!5786 = !DILocation(line: 601, column: 58, scope: !5778)
!5787 = !DILocation(line: 603, column: 23, scope: !5778)
!5788 = !DILocation(line: 603, column: 26, scope: !5778)
!5789 = !DILocation(line: 603, column: 32, scope: !5778)
!5790 = !DILocation(line: 603, column: 38, scope: !5778)
!5791 = !DILocation(line: 603, column: 9, scope: !5778)
!5792 = !DILocation(line: 603, column: 2, scope: !5778)
!5793 = distinct !DISubprogram(name: "fetch_item", scope: !3, file: !3, line: 715, type: !5794, scopeLine: 716, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !371)
!5794 = !DISubroutineType(types: !5795)
!5795 = !{!4068, !3990, !3990, !4337}
!5796 = !DILocalVariable(name: "p", arg: 1, scope: !5797, file: !5798, line: 56, type: !5801)
!5797 = distinct !DISubprogram(name: "__le32_to_cpup", scope: !5798, file: !5798, line: 56, type: !5799, scopeLine: 57, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !371)
!5798 = !DIFile(filename: "./include/uapi/linux/byteorder/little_endian.h", directory: "/home/lizy2001/genbc/linux")
!5799 = !DISubroutineType(types: !5800)
!5800 = !{!239, !5801}
!5801 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5802, size: 64)
!5802 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4212)
!5803 = !DILocation(line: 56, column: 59, scope: !5797, inlinedAt: !5804)
!5804 = distinct !DILocation(line: 15, column: 9, scope: !5805, inlinedAt: !5809)
!5805 = distinct !DISubprogram(name: "get_unaligned_le32", scope: !5806, file: !5806, line: 13, type: !5807, scopeLine: 14, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !371)
!5806 = !DIFile(filename: "./include/linux/unaligned/access_ok.h", directory: "/home/lizy2001/genbc/linux")
!5807 = !DISubroutineType(types: !5808)
!5808 = !{!440, !2141}
!5809 = distinct !DILocation(line: 769, column: 20, scope: !5810)
!5810 = distinct !DILexicalBlock(scope: !5793, file: !3, line: 748, column: 22)
!5811 = !DILocalVariable(name: "p", arg: 1, scope: !5805, file: !5806, line: 13, type: !2141)
!5812 = !DILocation(line: 13, column: 59, scope: !5805, inlinedAt: !5809)
!5813 = !DILocalVariable(name: "p", arg: 1, scope: !5814, file: !5798, line: 64, type: !5817)
!5814 = distinct !DISubprogram(name: "__le16_to_cpup", scope: !5798, file: !5798, line: 64, type: !5815, scopeLine: 65, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !371)
!5815 = !DISubroutineType(types: !5816)
!5816 = !{!149, !5817}
!5817 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5818, size: 64)
!5818 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4210)
!5819 = !DILocation(line: 64, column: 59, scope: !5814, inlinedAt: !5820)
!5820 = distinct !DILocation(line: 10, column: 9, scope: !5821, inlinedAt: !5824)
!5821 = distinct !DISubprogram(name: "get_unaligned_le16", scope: !5806, file: !5806, line: 8, type: !5822, scopeLine: 9, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !371)
!5822 = !DISubroutineType(types: !5823)
!5823 = !{!333, !2141}
!5824 = distinct !DILocation(line: 761, column: 20, scope: !5810)
!5825 = !DILocalVariable(name: "p", arg: 1, scope: !5821, file: !5806, line: 8, type: !2141)
!5826 = !DILocation(line: 8, column: 59, scope: !5821, inlinedAt: !5824)
!5827 = !DILocalVariable(name: "start", arg: 1, scope: !5793, file: !3, line: 715, type: !3990)
!5828 = !DILocation(line: 715, column: 29, scope: !5793)
!5829 = !DILocalVariable(name: "end", arg: 2, scope: !5793, file: !3, line: 715, type: !3990)
!5830 = !DILocation(line: 715, column: 42, scope: !5793)
!5831 = !DILocalVariable(name: "item", arg: 3, scope: !5793, file: !3, line: 715, type: !4337)
!5832 = !DILocation(line: 715, column: 64, scope: !5793)
!5833 = !DILocalVariable(name: "b", scope: !5793, file: !3, line: 717, type: !1369)
!5834 = !DILocation(line: 717, column: 5, scope: !5793)
!5835 = !DILocation(line: 719, column: 7, scope: !5836)
!5836 = distinct !DILexicalBlock(scope: !5793, file: !3, line: 719, column: 6)
!5837 = !DILocation(line: 719, column: 13, scope: !5836)
!5838 = !DILocation(line: 719, column: 11, scope: !5836)
!5839 = !DILocation(line: 719, column: 20, scope: !5836)
!5840 = !DILocation(line: 719, column: 6, scope: !5793)
!5841 = !DILocation(line: 720, column: 3, scope: !5836)
!5842 = !DILocation(line: 722, column: 12, scope: !5793)
!5843 = !DILocation(line: 722, column: 6, scope: !5793)
!5844 = !DILocation(line: 722, column: 4, scope: !5793)
!5845 = !DILocation(line: 724, column: 16, scope: !5793)
!5846 = !DILocation(line: 724, column: 18, scope: !5793)
!5847 = !DILocation(line: 724, column: 24, scope: !5793)
!5848 = !DILocation(line: 724, column: 15, scope: !5793)
!5849 = !DILocation(line: 724, column: 2, scope: !5793)
!5850 = !DILocation(line: 724, column: 8, scope: !5793)
!5851 = !DILocation(line: 724, column: 13, scope: !5793)
!5852 = !DILocation(line: 725, column: 16, scope: !5793)
!5853 = !DILocation(line: 725, column: 18, scope: !5793)
!5854 = !DILocation(line: 725, column: 24, scope: !5793)
!5855 = !DILocation(line: 725, column: 15, scope: !5793)
!5856 = !DILocation(line: 725, column: 2, scope: !5793)
!5857 = !DILocation(line: 725, column: 8, scope: !5793)
!5858 = !DILocation(line: 725, column: 13, scope: !5793)
!5859 = !DILocation(line: 727, column: 6, scope: !5860)
!5860 = distinct !DILexicalBlock(scope: !5793, file: !3, line: 727, column: 6)
!5861 = !DILocation(line: 727, column: 12, scope: !5860)
!5862 = !DILocation(line: 727, column: 16, scope: !5860)
!5863 = !DILocation(line: 727, column: 6, scope: !5793)
!5864 = !DILocation(line: 729, column: 3, scope: !5865)
!5865 = distinct !DILexicalBlock(scope: !5860, file: !3, line: 727, column: 38)
!5866 = !DILocation(line: 729, column: 9, scope: !5865)
!5867 = !DILocation(line: 729, column: 16, scope: !5865)
!5868 = !DILocation(line: 731, column: 8, scope: !5869)
!5869 = distinct !DILexicalBlock(scope: !5865, file: !3, line: 731, column: 7)
!5870 = !DILocation(line: 731, column: 14, scope: !5869)
!5871 = !DILocation(line: 731, column: 12, scope: !5869)
!5872 = !DILocation(line: 731, column: 21, scope: !5869)
!5873 = !DILocation(line: 731, column: 7, scope: !5865)
!5874 = !DILocation(line: 732, column: 4, scope: !5869)
!5875 = !DILocation(line: 734, column: 22, scope: !5865)
!5876 = !DILocation(line: 734, column: 16, scope: !5865)
!5877 = !DILocation(line: 734, column: 3, scope: !5865)
!5878 = !DILocation(line: 734, column: 9, scope: !5865)
!5879 = !DILocation(line: 734, column: 14, scope: !5865)
!5880 = !DILocation(line: 735, column: 22, scope: !5865)
!5881 = !DILocation(line: 735, column: 16, scope: !5865)
!5882 = !DILocation(line: 735, column: 3, scope: !5865)
!5883 = !DILocation(line: 735, column: 9, scope: !5865)
!5884 = !DILocation(line: 735, column: 14, scope: !5865)
!5885 = !DILocation(line: 737, column: 8, scope: !5886)
!5886 = distinct !DILexicalBlock(scope: !5865, file: !3, line: 737, column: 7)
!5887 = !DILocation(line: 737, column: 14, scope: !5886)
!5888 = !DILocation(line: 737, column: 12, scope: !5886)
!5889 = !DILocation(line: 737, column: 23, scope: !5886)
!5890 = !DILocation(line: 737, column: 29, scope: !5886)
!5891 = !DILocation(line: 737, column: 21, scope: !5886)
!5892 = !DILocation(line: 737, column: 7, scope: !5865)
!5893 = !DILocation(line: 738, column: 4, scope: !5886)
!5894 = !DILocation(line: 740, column: 25, scope: !5865)
!5895 = !DILocation(line: 740, column: 3, scope: !5865)
!5896 = !DILocation(line: 740, column: 9, scope: !5865)
!5897 = !DILocation(line: 740, column: 14, scope: !5865)
!5898 = !DILocation(line: 740, column: 23, scope: !5865)
!5899 = !DILocation(line: 741, column: 12, scope: !5865)
!5900 = !DILocation(line: 741, column: 18, scope: !5865)
!5901 = !DILocation(line: 741, column: 9, scope: !5865)
!5902 = !DILocation(line: 742, column: 10, scope: !5865)
!5903 = !DILocation(line: 742, column: 3, scope: !5865)
!5904 = !DILocation(line: 745, column: 2, scope: !5793)
!5905 = !DILocation(line: 745, column: 8, scope: !5793)
!5906 = !DILocation(line: 745, column: 15, scope: !5793)
!5907 = !DILocation(line: 746, column: 15, scope: !5793)
!5908 = !DILocation(line: 746, column: 17, scope: !5793)
!5909 = !DILocation(line: 746, column: 2, scope: !5793)
!5910 = !DILocation(line: 746, column: 8, scope: !5793)
!5911 = !DILocation(line: 746, column: 13, scope: !5793)
!5912 = !DILocation(line: 748, column: 10, scope: !5793)
!5913 = !DILocation(line: 748, column: 16, scope: !5793)
!5914 = !DILocation(line: 748, column: 2, scope: !5793)
!5915 = !DILocation(line: 750, column: 10, scope: !5810)
!5916 = !DILocation(line: 750, column: 3, scope: !5810)
!5917 = !DILocation(line: 753, column: 8, scope: !5918)
!5918 = distinct !DILexicalBlock(scope: !5810, file: !3, line: 753, column: 7)
!5919 = !DILocation(line: 753, column: 14, scope: !5918)
!5920 = !DILocation(line: 753, column: 12, scope: !5918)
!5921 = !DILocation(line: 753, column: 21, scope: !5918)
!5922 = !DILocation(line: 753, column: 7, scope: !5810)
!5923 = !DILocation(line: 754, column: 4, scope: !5918)
!5924 = !DILocation(line: 755, column: 25, scope: !5810)
!5925 = !DILocation(line: 755, column: 19, scope: !5810)
!5926 = !DILocation(line: 755, column: 3, scope: !5810)
!5927 = !DILocation(line: 755, column: 9, scope: !5810)
!5928 = !DILocation(line: 755, column: 14, scope: !5810)
!5929 = !DILocation(line: 755, column: 17, scope: !5810)
!5930 = !DILocation(line: 756, column: 10, scope: !5810)
!5931 = !DILocation(line: 756, column: 3, scope: !5810)
!5932 = !DILocation(line: 759, column: 8, scope: !5933)
!5933 = distinct !DILexicalBlock(scope: !5810, file: !3, line: 759, column: 7)
!5934 = !DILocation(line: 759, column: 14, scope: !5933)
!5935 = !DILocation(line: 759, column: 12, scope: !5933)
!5936 = !DILocation(line: 759, column: 21, scope: !5933)
!5937 = !DILocation(line: 759, column: 7, scope: !5810)
!5938 = !DILocation(line: 760, column: 4, scope: !5933)
!5939 = !DILocation(line: 761, column: 39, scope: !5810)
!5940 = !DILocation(line: 10, column: 32, scope: !5821, inlinedAt: !5824)
!5941 = !DILocation(line: 10, column: 22, scope: !5821, inlinedAt: !5824)
!5942 = !DILocation(line: 66, column: 25, scope: !5814, inlinedAt: !5820)
!5943 = !DILocation(line: 66, column: 24, scope: !5814, inlinedAt: !5820)
!5944 = !DILocation(line: 761, column: 3, scope: !5810)
!5945 = !DILocation(line: 761, column: 9, scope: !5810)
!5946 = !DILocation(line: 761, column: 14, scope: !5810)
!5947 = !DILocation(line: 761, column: 18, scope: !5810)
!5948 = !DILocation(line: 762, column: 30, scope: !5810)
!5949 = !DILocation(line: 762, column: 20, scope: !5810)
!5950 = !DILocation(line: 762, column: 36, scope: !5810)
!5951 = !DILocation(line: 762, column: 11, scope: !5810)
!5952 = !DILocation(line: 762, column: 9, scope: !5810)
!5953 = !DILocation(line: 763, column: 10, scope: !5810)
!5954 = !DILocation(line: 763, column: 3, scope: !5810)
!5955 = !DILocation(line: 766, column: 3, scope: !5810)
!5956 = !DILocation(line: 766, column: 9, scope: !5810)
!5957 = !DILocation(line: 766, column: 13, scope: !5810)
!5958 = !DILocation(line: 767, column: 8, scope: !5959)
!5959 = distinct !DILexicalBlock(scope: !5810, file: !3, line: 767, column: 7)
!5960 = !DILocation(line: 767, column: 14, scope: !5959)
!5961 = !DILocation(line: 767, column: 12, scope: !5959)
!5962 = !DILocation(line: 767, column: 21, scope: !5959)
!5963 = !DILocation(line: 767, column: 7, scope: !5810)
!5964 = !DILocation(line: 768, column: 4, scope: !5959)
!5965 = !DILocation(line: 769, column: 39, scope: !5810)
!5966 = !DILocation(line: 15, column: 32, scope: !5805, inlinedAt: !5809)
!5967 = !DILocation(line: 15, column: 22, scope: !5805, inlinedAt: !5809)
!5968 = !DILocation(line: 58, column: 25, scope: !5797, inlinedAt: !5804)
!5969 = !DILocation(line: 58, column: 24, scope: !5797, inlinedAt: !5804)
!5970 = !DILocation(line: 769, column: 3, scope: !5810)
!5971 = !DILocation(line: 769, column: 9, scope: !5810)
!5972 = !DILocation(line: 769, column: 14, scope: !5810)
!5973 = !DILocation(line: 769, column: 18, scope: !5810)
!5974 = !DILocation(line: 770, column: 30, scope: !5810)
!5975 = !DILocation(line: 770, column: 20, scope: !5810)
!5976 = !DILocation(line: 770, column: 36, scope: !5810)
!5977 = !DILocation(line: 770, column: 11, scope: !5810)
!5978 = !DILocation(line: 770, column: 9, scope: !5810)
!5979 = !DILocation(line: 771, column: 10, scope: !5810)
!5980 = !DILocation(line: 771, column: 3, scope: !5810)
!5981 = !DILocation(line: 774, column: 2, scope: !5793)
!5982 = !DILocation(line: 775, column: 1, scope: !5793)
!5983 = distinct !DISubprogram(name: "hid_close_report", scope: !3, file: !3, line: 668, type: !4056, scopeLine: 669, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !371)
!5984 = !DILocalVariable(name: "device", arg: 1, scope: !5983, file: !3, line: 668, type: !3986)
!5985 = !DILocation(line: 668, column: 49, scope: !5983)
!5986 = !DILocalVariable(name: "i", scope: !5983, file: !3, line: 670, type: !7)
!5987 = !DILocation(line: 670, column: 11, scope: !5983)
!5988 = !DILocalVariable(name: "j", scope: !5983, file: !3, line: 670, type: !7)
!5989 = !DILocation(line: 670, column: 14, scope: !5983)
!5990 = !DILocation(line: 672, column: 9, scope: !5991)
!5991 = distinct !DILexicalBlock(scope: !5983, file: !3, line: 672, column: 2)
!5992 = !DILocation(line: 672, column: 7, scope: !5991)
!5993 = !DILocation(line: 672, column: 14, scope: !5994)
!5994 = distinct !DILexicalBlock(scope: !5991, file: !3, line: 672, column: 2)
!5995 = !DILocation(line: 672, column: 16, scope: !5994)
!5996 = !DILocation(line: 672, column: 2, scope: !5991)
!5997 = !DILocalVariable(name: "report_enum", scope: !5998, file: !3, line: 673, type: !4495)
!5998 = distinct !DILexicalBlock(scope: !5994, file: !3, line: 672, column: 41)
!5999 = !DILocation(line: 673, column: 27, scope: !5998)
!6000 = !DILocation(line: 673, column: 41, scope: !5998)
!6001 = !DILocation(line: 673, column: 49, scope: !5998)
!6002 = !DILocation(line: 673, column: 63, scope: !5998)
!6003 = !DILocation(line: 673, column: 61, scope: !5998)
!6004 = !DILocation(line: 675, column: 10, scope: !6005)
!6005 = distinct !DILexicalBlock(scope: !5998, file: !3, line: 675, column: 3)
!6006 = !DILocation(line: 675, column: 8, scope: !6005)
!6007 = !DILocation(line: 675, column: 15, scope: !6008)
!6008 = distinct !DILexicalBlock(scope: !6005, file: !3, line: 675, column: 3)
!6009 = !DILocation(line: 675, column: 17, scope: !6008)
!6010 = !DILocation(line: 675, column: 3, scope: !6005)
!6011 = !DILocalVariable(name: "report", scope: !6012, file: !3, line: 676, type: !115)
!6012 = distinct !DILexicalBlock(scope: !6008, file: !3, line: 675, column: 37)
!6013 = !DILocation(line: 676, column: 23, scope: !6012)
!6014 = !DILocation(line: 676, column: 32, scope: !6012)
!6015 = !DILocation(line: 676, column: 45, scope: !6012)
!6016 = !DILocation(line: 676, column: 60, scope: !6012)
!6017 = !DILocation(line: 677, column: 8, scope: !6018)
!6018 = distinct !DILexicalBlock(scope: !6012, file: !3, line: 677, column: 8)
!6019 = !DILocation(line: 677, column: 8, scope: !6012)
!6020 = !DILocation(line: 678, column: 21, scope: !6018)
!6021 = !DILocation(line: 678, column: 5, scope: !6018)
!6022 = !DILocation(line: 679, column: 3, scope: !6012)
!6023 = !DILocation(line: 675, column: 33, scope: !6008)
!6024 = !DILocation(line: 675, column: 3, scope: !6008)
!6025 = distinct !{!6025, !6010, !6026}
!6026 = !DILocation(line: 679, column: 3, scope: !6005)
!6027 = !DILocation(line: 680, column: 10, scope: !5998)
!6028 = !DILocation(line: 680, column: 3, scope: !5998)
!6029 = !DILocation(line: 681, column: 19, scope: !5998)
!6030 = !DILocation(line: 681, column: 32, scope: !5998)
!6031 = !DILocation(line: 681, column: 3, scope: !5998)
!6032 = !DILocation(line: 682, column: 2, scope: !5998)
!6033 = !DILocation(line: 672, column: 37, scope: !5994)
!6034 = !DILocation(line: 672, column: 2, scope: !5994)
!6035 = distinct !{!6035, !5996, !6036}
!6036 = !DILocation(line: 682, column: 2, scope: !5991)
!6037 = !DILocation(line: 684, column: 8, scope: !5983)
!6038 = !DILocation(line: 684, column: 16, scope: !5983)
!6039 = !DILocation(line: 684, column: 2, scope: !5983)
!6040 = !DILocation(line: 685, column: 2, scope: !5983)
!6041 = !DILocation(line: 685, column: 10, scope: !5983)
!6042 = !DILocation(line: 685, column: 16, scope: !5983)
!6043 = !DILocation(line: 686, column: 2, scope: !5983)
!6044 = !DILocation(line: 686, column: 10, scope: !5983)
!6045 = !DILocation(line: 686, column: 16, scope: !5983)
!6046 = !DILocation(line: 688, column: 8, scope: !5983)
!6047 = !DILocation(line: 688, column: 16, scope: !5983)
!6048 = !DILocation(line: 688, column: 2, scope: !5983)
!6049 = !DILocation(line: 689, column: 2, scope: !5983)
!6050 = !DILocation(line: 689, column: 10, scope: !5983)
!6051 = !DILocation(line: 689, column: 21, scope: !5983)
!6052 = !DILocation(line: 690, column: 2, scope: !5983)
!6053 = !DILocation(line: 690, column: 10, scope: !5983)
!6054 = !DILocation(line: 690, column: 26, scope: !5983)
!6055 = !DILocation(line: 691, column: 2, scope: !5983)
!6056 = !DILocation(line: 691, column: 10, scope: !5983)
!6057 = !DILocation(line: 691, column: 24, scope: !5983)
!6058 = !DILocation(line: 692, column: 2, scope: !5983)
!6059 = !DILocation(line: 692, column: 10, scope: !5983)
!6060 = !DILocation(line: 692, column: 25, scope: !5983)
!6061 = !DILocation(line: 694, column: 2, scope: !5983)
!6062 = !DILocation(line: 694, column: 10, scope: !5983)
!6063 = !DILocation(line: 694, column: 17, scope: !5983)
!6064 = !DILocation(line: 695, column: 1, scope: !5983)
!6065 = distinct !DISubprogram(name: "hid_snto32", scope: !3, file: !3, line: 1318, type: !6066, scopeLine: 1319, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !371)
!6066 = !DISubroutineType(types: !6067)
!6067 = !{!1457, !239, !7}
!6068 = !DILocalVariable(name: "value", arg: 1, scope: !6065, file: !3, line: 1318, type: !239)
!6069 = !DILocation(line: 1318, column: 22, scope: !6065)
!6070 = !DILocalVariable(name: "n", arg: 2, scope: !6065, file: !3, line: 1318, type: !7)
!6071 = !DILocation(line: 1318, column: 38, scope: !6065)
!6072 = !DILocation(line: 1320, column: 16, scope: !6065)
!6073 = !DILocation(line: 1320, column: 23, scope: !6065)
!6074 = !DILocation(line: 1320, column: 9, scope: !6065)
!6075 = !DILocation(line: 1320, column: 2, scope: !6065)
!6076 = distinct !DISubprogram(name: "snto32", scope: !3, file: !3, line: 1308, type: !6066, scopeLine: 1309, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !371)
!6077 = !DILocalVariable(name: "value", arg: 1, scope: !6076, file: !3, line: 1308, type: !239)
!6078 = !DILocation(line: 1308, column: 25, scope: !6076)
!6079 = !DILocalVariable(name: "n", arg: 2, scope: !6076, file: !3, line: 1308, type: !7)
!6080 = !DILocation(line: 1308, column: 41, scope: !6076)
!6081 = !DILocation(line: 1310, column: 10, scope: !6076)
!6082 = !DILocation(line: 1310, column: 2, scope: !6076)
!6083 = !DILocation(line: 1311, column: 25, scope: !6084)
!6084 = distinct !DILexicalBlock(scope: !6076, file: !3, line: 1310, column: 13)
!6085 = !DILocation(line: 1311, column: 19, scope: !6084)
!6086 = !DILocation(line: 1311, column: 18, scope: !6084)
!6087 = !DILocation(line: 1311, column: 11, scope: !6084)
!6088 = !DILocation(line: 1312, column: 26, scope: !6084)
!6089 = !DILocation(line: 1312, column: 19, scope: !6084)
!6090 = !DILocation(line: 1312, column: 18, scope: !6084)
!6091 = !DILocation(line: 1312, column: 11, scope: !6084)
!6092 = !DILocation(line: 1313, column: 26, scope: !6084)
!6093 = !DILocation(line: 1313, column: 11, scope: !6084)
!6094 = !DILocation(line: 1315, column: 9, scope: !6076)
!6095 = !DILocation(line: 1315, column: 24, scope: !6076)
!6096 = !DILocation(line: 1315, column: 26, scope: !6076)
!6097 = !DILocation(line: 1315, column: 20, scope: !6076)
!6098 = !DILocation(line: 1315, column: 15, scope: !6076)
!6099 = !DILocation(line: 1315, column: 34, scope: !6076)
!6100 = !DILocation(line: 1315, column: 50, scope: !6076)
!6101 = !DILocation(line: 1315, column: 47, scope: !6076)
!6102 = !DILocation(line: 1315, column: 40, scope: !6076)
!6103 = !DILocation(line: 1315, column: 55, scope: !6076)
!6104 = !DILocation(line: 1315, column: 2, scope: !6076)
!6105 = !DILocation(line: 1316, column: 1, scope: !6076)
!6106 = !DILocalVariable(name: "pscr_ret__", scope: !6107, file: !6108, line: 15, type: !1233)
!6107 = distinct !DILexicalBlock(scope: !6109, file: !6108, line: 15, column: 9)
!6108 = !DIFile(filename: "./arch/x86/include/asm/current.h", directory: "/home/lizy2001/genbc/linux")
!6109 = distinct !DISubprogram(name: "get_current", scope: !6108, file: !6108, line: 13, type: !6110, scopeLine: 14, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !371)
!6110 = !DISubroutineType(types: !6111)
!6111 = !{!1233}
!6112 = !DILocation(line: 15, column: 9, scope: !6107, inlinedAt: !6113)
!6113 = distinct !DILocation(line: 1373, column: 3, scope: !6114)
!6114 = distinct !DILexicalBlock(scope: !6115, file: !3, line: 1373, column: 3)
!6115 = distinct !DILexicalBlock(scope: !6116, file: !3, line: 1373, column: 3)
!6116 = distinct !DILexicalBlock(scope: !6117, file: !3, line: 1373, column: 3)
!6117 = distinct !DILexicalBlock(scope: !6118, file: !3, line: 1372, column: 14)
!6118 = distinct !DILexicalBlock(scope: !4356, file: !3, line: 1372, column: 6)
!6119 = !DILocalVariable(name: "__vpp_verify", scope: !6120, file: !6108, line: 15, type: !2141)
!6120 = distinct !DILexicalBlock(scope: !6107, file: !6108, line: 15, column: 9)
!6121 = !DILocation(line: 15, column: 9, scope: !6120, inlinedAt: !6113)
!6122 = !DILocalVariable(name: "pfo_val__", scope: !6123, file: !6108, line: 15, type: !443)
!6123 = distinct !DILexicalBlock(scope: !6107, file: !6108, line: 15, column: 9)
!6124 = !DILocation(line: 15, column: 9, scope: !6123, inlinedAt: !6113)
!6125 = !DILocalVariable(name: "hid", arg: 1, scope: !4356, file: !3, line: 1369, type: !4359)
!6126 = !DILocation(line: 1369, column: 48, scope: !4356)
!6127 = !DILocalVariable(name: "report", arg: 2, scope: !4356, file: !3, line: 1369, type: !4068)
!6128 = !DILocation(line: 1369, column: 57, scope: !4356)
!6129 = !DILocalVariable(name: "offset", arg: 3, scope: !4356, file: !3, line: 1370, type: !7)
!6130 = !DILocation(line: 1370, column: 13, scope: !4356)
!6131 = !DILocalVariable(name: "n", arg: 4, scope: !4356, file: !3, line: 1370, type: !7)
!6132 = !DILocation(line: 1370, column: 30, scope: !4356)
!6133 = !DILocation(line: 1372, column: 6, scope: !6118)
!6134 = !DILocation(line: 1372, column: 8, scope: !6118)
!6135 = !DILocation(line: 1372, column: 6, scope: !4356)
!6136 = !DILocation(line: 1373, column: 3, scope: !6117)
!6137 = !DILocation(line: 1373, column: 3, scope: !6115)
!6138 = !DILocation(line: 1373, column: 3, scope: !6116)
!6139 = !DILocation(line: 1373, column: 3, scope: !6114)
!6140 = !{i32 -2146166113}
!6141 = !DILocation(line: 1375, column: 5, scope: !6117)
!6142 = !DILocation(line: 1376, column: 2, scope: !6117)
!6143 = !DILocation(line: 1378, column: 19, scope: !4356)
!6144 = !DILocation(line: 1378, column: 27, scope: !4356)
!6145 = !DILocation(line: 1378, column: 35, scope: !4356)
!6146 = !DILocation(line: 1378, column: 9, scope: !4356)
!6147 = !DILocation(line: 1378, column: 2, scope: !4356)
!6148 = distinct !DISubprogram(name: "__extract", scope: !3, file: !3, line: 1348, type: !6149, scopeLine: 1349, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !371)
!6149 = !DISubroutineType(types: !6150)
!6150 = !{!440, !4068, !7, !169}
!6151 = !DILocalVariable(name: "report", arg: 1, scope: !6148, file: !3, line: 1348, type: !4068)
!6152 = !DILocation(line: 1348, column: 26, scope: !6148)
!6153 = !DILocalVariable(name: "offset", arg: 2, scope: !6148, file: !3, line: 1348, type: !7)
!6154 = !DILocation(line: 1348, column: 43, scope: !6148)
!6155 = !DILocalVariable(name: "n", arg: 3, scope: !6148, file: !3, line: 1348, type: !169)
!6156 = !DILocation(line: 1348, column: 55, scope: !6148)
!6157 = !DILocalVariable(name: "idx", scope: !6148, file: !3, line: 1350, type: !7)
!6158 = !DILocation(line: 1350, column: 15, scope: !6148)
!6159 = !DILocation(line: 1350, column: 21, scope: !6148)
!6160 = !DILocation(line: 1350, column: 28, scope: !6148)
!6161 = !DILocalVariable(name: "bit_nr", scope: !6148, file: !3, line: 1351, type: !7)
!6162 = !DILocation(line: 1351, column: 15, scope: !6148)
!6163 = !DILocalVariable(name: "bit_shift", scope: !6148, file: !3, line: 1352, type: !7)
!6164 = !DILocation(line: 1352, column: 15, scope: !6148)
!6165 = !DILocation(line: 1352, column: 27, scope: !6148)
!6166 = !DILocation(line: 1352, column: 34, scope: !6148)
!6167 = !DILocalVariable(name: "bits_to_copy", scope: !6148, file: !3, line: 1353, type: !169)
!6168 = !DILocation(line: 1353, column: 6, scope: !6148)
!6169 = !DILocation(line: 1353, column: 25, scope: !6148)
!6170 = !DILocation(line: 1353, column: 23, scope: !6148)
!6171 = !DILocalVariable(name: "value", scope: !6148, file: !3, line: 1354, type: !440)
!6172 = !DILocation(line: 1354, column: 6, scope: !6148)
!6173 = !DILocalVariable(name: "mask", scope: !6148, file: !3, line: 1355, type: !440)
!6174 = !DILocation(line: 1355, column: 6, scope: !6148)
!6175 = !DILocation(line: 1355, column: 13, scope: !6148)
!6176 = !DILocation(line: 1355, column: 15, scope: !6148)
!6177 = !DILocation(line: 1355, column: 29, scope: !6148)
!6178 = !DILocation(line: 1355, column: 26, scope: !6148)
!6179 = !DILocation(line: 1355, column: 32, scope: !6148)
!6180 = !DILocation(line: 1357, column: 2, scope: !6148)
!6181 = !DILocation(line: 1357, column: 9, scope: !6148)
!6182 = !DILocation(line: 1357, column: 11, scope: !6148)
!6183 = !DILocation(line: 1358, column: 18, scope: !6184)
!6184 = distinct !DILexicalBlock(scope: !6148, file: !3, line: 1357, column: 16)
!6185 = !DILocation(line: 1358, column: 25, scope: !6184)
!6186 = !DILocation(line: 1358, column: 13, scope: !6184)
!6187 = !DILocation(line: 1358, column: 33, scope: !6184)
!6188 = !DILocation(line: 1358, column: 30, scope: !6184)
!6189 = !DILocation(line: 1358, column: 47, scope: !6184)
!6190 = !DILocation(line: 1358, column: 44, scope: !6184)
!6191 = !DILocation(line: 1358, column: 9, scope: !6184)
!6192 = !DILocation(line: 1359, column: 8, scope: !6184)
!6193 = !DILocation(line: 1359, column: 5, scope: !6184)
!6194 = !DILocation(line: 1360, column: 13, scope: !6184)
!6195 = !DILocation(line: 1360, column: 10, scope: !6184)
!6196 = !DILocation(line: 1361, column: 16, scope: !6184)
!6197 = !DILocation(line: 1362, column: 13, scope: !6184)
!6198 = !DILocation(line: 1363, column: 6, scope: !6184)
!6199 = distinct !{!6199, !6180, !6200}
!6200 = !DILocation(line: 1364, column: 2, scope: !6148)
!6201 = !DILocation(line: 1366, column: 9, scope: !6148)
!6202 = !DILocation(line: 1366, column: 17, scope: !6148)
!6203 = !DILocation(line: 1366, column: 15, scope: !6148)
!6204 = !DILocation(line: 1366, column: 2, scope: !6148)
!6205 = distinct !DISubprogram(name: "hid_output_report", scope: !3, file: !3, line: 1623, type: !6206, scopeLine: 1624, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !371)
!6206 = !DISubroutineType(types: !6207)
!6207 = !{null, !115, !3990}
!6208 = !DILocalVariable(name: "report", arg: 1, scope: !6205, file: !3, line: 1623, type: !115)
!6209 = !DILocation(line: 1623, column: 43, scope: !6205)
!6210 = !DILocalVariable(name: "data", arg: 2, scope: !6205, file: !3, line: 1623, type: !3990)
!6211 = !DILocation(line: 1623, column: 57, scope: !6205)
!6212 = !DILocalVariable(name: "n", scope: !6205, file: !3, line: 1625, type: !7)
!6213 = !DILocation(line: 1625, column: 11, scope: !6205)
!6214 = !DILocation(line: 1627, column: 6, scope: !6215)
!6215 = distinct !DILexicalBlock(scope: !6205, file: !3, line: 1627, column: 6)
!6216 = !DILocation(line: 1627, column: 14, scope: !6215)
!6217 = !DILocation(line: 1627, column: 17, scope: !6215)
!6218 = !DILocation(line: 1627, column: 6, scope: !6205)
!6219 = !DILocation(line: 1628, column: 13, scope: !6215)
!6220 = !DILocation(line: 1628, column: 21, scope: !6215)
!6221 = !DILocation(line: 1628, column: 8, scope: !6215)
!6222 = !DILocation(line: 1628, column: 11, scope: !6215)
!6223 = !DILocation(line: 1628, column: 3, scope: !6215)
!6224 = !DILocation(line: 1630, column: 9, scope: !6205)
!6225 = !DILocation(line: 1630, column: 42, scope: !6205)
!6226 = !DILocation(line: 1630, column: 18, scope: !6205)
!6227 = !DILocation(line: 1630, column: 2, scope: !6205)
!6228 = !DILocation(line: 1631, column: 9, scope: !6229)
!6229 = distinct !DILexicalBlock(scope: !6205, file: !3, line: 1631, column: 2)
!6230 = !DILocation(line: 1631, column: 7, scope: !6229)
!6231 = !DILocation(line: 1631, column: 14, scope: !6232)
!6232 = distinct !DILexicalBlock(scope: !6229, file: !3, line: 1631, column: 2)
!6233 = !DILocation(line: 1631, column: 18, scope: !6232)
!6234 = !DILocation(line: 1631, column: 26, scope: !6232)
!6235 = !DILocation(line: 1631, column: 16, scope: !6232)
!6236 = !DILocation(line: 1631, column: 2, scope: !6229)
!6237 = !DILocation(line: 1632, column: 20, scope: !6232)
!6238 = !DILocation(line: 1632, column: 28, scope: !6232)
!6239 = !DILocation(line: 1632, column: 36, scope: !6232)
!6240 = !DILocation(line: 1632, column: 44, scope: !6232)
!6241 = !DILocation(line: 1632, column: 50, scope: !6232)
!6242 = !DILocation(line: 1632, column: 54, scope: !6232)
!6243 = !DILocation(line: 1632, column: 3, scope: !6232)
!6244 = !DILocation(line: 1631, column: 37, scope: !6232)
!6245 = !DILocation(line: 1631, column: 2, scope: !6232)
!6246 = distinct !{!6246, !6236, !6247}
!6247 = !DILocation(line: 1632, column: 58, scope: !6229)
!6248 = !DILocation(line: 1633, column: 1, scope: !6205)
!6249 = distinct !DISubprogram(name: "hid_compute_report_size", scope: !3, file: !3, line: 1610, type: !6250, scopeLine: 1611, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !371)
!6250 = !DISubroutineType(types: !6251)
!6251 = !{!604, !115}
!6252 = !DILocalVariable(name: "report", arg: 1, scope: !6249, file: !3, line: 1610, type: !115)
!6253 = !DILocation(line: 1610, column: 58, scope: !6249)
!6254 = !DILocation(line: 1612, column: 6, scope: !6255)
!6255 = distinct !DILexicalBlock(scope: !6249, file: !3, line: 1612, column: 6)
!6256 = !DILocation(line: 1612, column: 14, scope: !6255)
!6257 = !DILocation(line: 1612, column: 6, scope: !6249)
!6258 = !DILocation(line: 1613, column: 12, scope: !6255)
!6259 = !DILocation(line: 1613, column: 20, scope: !6255)
!6260 = !DILocation(line: 1613, column: 25, scope: !6255)
!6261 = !DILocation(line: 1613, column: 30, scope: !6255)
!6262 = !DILocation(line: 1613, column: 36, scope: !6255)
!6263 = !DILocation(line: 1613, column: 10, scope: !6255)
!6264 = !DILocation(line: 1613, column: 3, scope: !6255)
!6265 = !DILocation(line: 1615, column: 2, scope: !6249)
!6266 = !DILocation(line: 1616, column: 1, scope: !6249)
!6267 = distinct !DISubprogram(name: "hid_output_field", scope: !3, file: !3, line: 1589, type: !6268, scopeLine: 1591, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !371)
!6268 = !DISubroutineType(types: !6269)
!6269 = !{null, !4359, !130, !3990}
!6270 = !DILocalVariable(name: "hid", arg: 1, scope: !6267, file: !3, line: 1589, type: !4359)
!6271 = !DILocation(line: 1589, column: 55, scope: !6267)
!6272 = !DILocalVariable(name: "field", arg: 2, scope: !6267, file: !3, line: 1590, type: !130)
!6273 = !DILocation(line: 1590, column: 27, scope: !6267)
!6274 = !DILocalVariable(name: "data", arg: 3, scope: !6267, file: !3, line: 1590, type: !3990)
!6275 = !DILocation(line: 1590, column: 40, scope: !6267)
!6276 = !DILocalVariable(name: "count", scope: !6267, file: !3, line: 1592, type: !7)
!6277 = !DILocation(line: 1592, column: 11, scope: !6267)
!6278 = !DILocation(line: 1592, column: 19, scope: !6267)
!6279 = !DILocation(line: 1592, column: 26, scope: !6267)
!6280 = !DILocalVariable(name: "offset", scope: !6267, file: !3, line: 1593, type: !7)
!6281 = !DILocation(line: 1593, column: 11, scope: !6267)
!6282 = !DILocation(line: 1593, column: 20, scope: !6267)
!6283 = !DILocation(line: 1593, column: 27, scope: !6267)
!6284 = !DILocalVariable(name: "size", scope: !6267, file: !3, line: 1594, type: !7)
!6285 = !DILocation(line: 1594, column: 11, scope: !6267)
!6286 = !DILocation(line: 1594, column: 18, scope: !6267)
!6287 = !DILocation(line: 1594, column: 25, scope: !6267)
!6288 = !DILocalVariable(name: "n", scope: !6267, file: !3, line: 1595, type: !7)
!6289 = !DILocation(line: 1595, column: 11, scope: !6267)
!6290 = !DILocation(line: 1597, column: 9, scope: !6291)
!6291 = distinct !DILexicalBlock(scope: !6267, file: !3, line: 1597, column: 2)
!6292 = !DILocation(line: 1597, column: 7, scope: !6291)
!6293 = !DILocation(line: 1597, column: 14, scope: !6294)
!6294 = distinct !DILexicalBlock(scope: !6291, file: !3, line: 1597, column: 2)
!6295 = !DILocation(line: 1597, column: 18, scope: !6294)
!6296 = !DILocation(line: 1597, column: 16, scope: !6294)
!6297 = !DILocation(line: 1597, column: 2, scope: !6291)
!6298 = !DILocation(line: 1598, column: 7, scope: !6299)
!6299 = distinct !DILexicalBlock(scope: !6300, file: !3, line: 1598, column: 7)
!6300 = distinct !DILexicalBlock(scope: !6294, file: !3, line: 1597, column: 30)
!6301 = !DILocation(line: 1598, column: 14, scope: !6299)
!6302 = !DILocation(line: 1598, column: 30, scope: !6299)
!6303 = !DILocation(line: 1598, column: 7, scope: !6300)
!6304 = !DILocation(line: 1599, column: 14, scope: !6299)
!6305 = !DILocation(line: 1599, column: 19, scope: !6299)
!6306 = !DILocation(line: 1599, column: 25, scope: !6299)
!6307 = !DILocation(line: 1599, column: 34, scope: !6299)
!6308 = !DILocation(line: 1599, column: 38, scope: !6299)
!6309 = !DILocation(line: 1599, column: 36, scope: !6299)
!6310 = !DILocation(line: 1599, column: 32, scope: !6299)
!6311 = !DILocation(line: 1599, column: 44, scope: !6299)
!6312 = !DILocation(line: 1600, column: 14, scope: !6299)
!6313 = !DILocation(line: 1600, column: 21, scope: !6299)
!6314 = !DILocation(line: 1600, column: 27, scope: !6299)
!6315 = !DILocation(line: 1600, column: 31, scope: !6299)
!6316 = !DILocation(line: 1600, column: 7, scope: !6299)
!6317 = !DILocation(line: 1599, column: 4, scope: !6299)
!6318 = !DILocation(line: 1602, column: 14, scope: !6299)
!6319 = !DILocation(line: 1602, column: 19, scope: !6299)
!6320 = !DILocation(line: 1602, column: 25, scope: !6299)
!6321 = !DILocation(line: 1602, column: 34, scope: !6299)
!6322 = !DILocation(line: 1602, column: 38, scope: !6299)
!6323 = !DILocation(line: 1602, column: 36, scope: !6299)
!6324 = !DILocation(line: 1602, column: 32, scope: !6299)
!6325 = !DILocation(line: 1602, column: 44, scope: !6299)
!6326 = !DILocation(line: 1603, column: 7, scope: !6299)
!6327 = !DILocation(line: 1603, column: 14, scope: !6299)
!6328 = !DILocation(line: 1603, column: 20, scope: !6299)
!6329 = !DILocation(line: 1602, column: 4, scope: !6299)
!6330 = !DILocation(line: 1604, column: 2, scope: !6300)
!6331 = !DILocation(line: 1597, column: 26, scope: !6294)
!6332 = !DILocation(line: 1597, column: 2, scope: !6294)
!6333 = distinct !{!6333, !6297, !6334}
!6334 = !DILocation(line: 1604, column: 2, scope: !6291)
!6335 = !DILocation(line: 1605, column: 1, scope: !6267)
!6336 = distinct !DISubprogram(name: "hid_alloc_report_buf", scope: !3, file: !3, line: 1639, type: !6337, scopeLine: 1640, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !371)
!6337 = !DISubroutineType(types: !6338)
!6338 = !{!4068, !115, !112}
!6339 = !DILocation(line: 445, column: 72, scope: !4566, inlinedAt: !6340)
!6340 = distinct !DILocation(line: 552, column: 10, scope: !4571, inlinedAt: !6341)
!6341 = distinct !DILocation(line: 1648, column: 9, scope: !6336)
!6342 = !DILocation(line: 446, column: 9, scope: !4566, inlinedAt: !6340)
!6343 = !DILocation(line: 446, column: 23, scope: !4566, inlinedAt: !6340)
!6344 = !DILocation(line: 448, column: 8, scope: !4566, inlinedAt: !6340)
!6345 = !DILocation(line: 318, column: 67, scope: !4582, inlinedAt: !6346)
!6346 = distinct !DILocation(line: 553, column: 20, scope: !4571, inlinedAt: !6341)
!6347 = !DILocation(line: 346, column: 58, scope: !4588, inlinedAt: !6348)
!6348 = distinct !DILocation(line: 547, column: 11, scope: !4571, inlinedAt: !6341)
!6349 = !DILocation(line: 472, column: 28, scope: !4594, inlinedAt: !6350)
!6350 = distinct !DILocation(line: 481, column: 9, scope: !4599, inlinedAt: !6351)
!6351 = distinct !DILocation(line: 545, column: 11, scope: !4601, inlinedAt: !6341)
!6352 = !DILocation(line: 472, column: 40, scope: !4594, inlinedAt: !6350)
!6353 = !DILocation(line: 472, column: 60, scope: !4594, inlinedAt: !6350)
!6354 = !DILocation(line: 478, column: 51, scope: !4599, inlinedAt: !6351)
!6355 = !DILocation(line: 478, column: 63, scope: !4599, inlinedAt: !6351)
!6356 = !DILocation(line: 480, column: 15, scope: !4599, inlinedAt: !6351)
!6357 = !DILocation(line: 538, column: 45, scope: !4573, inlinedAt: !6341)
!6358 = !DILocation(line: 538, column: 57, scope: !4573, inlinedAt: !6341)
!6359 = !DILocation(line: 542, column: 16, scope: !4571, inlinedAt: !6341)
!6360 = !DILocalVariable(name: "report", arg: 1, scope: !6336, file: !3, line: 1639, type: !115)
!6361 = !DILocation(line: 1639, column: 45, scope: !6336)
!6362 = !DILocalVariable(name: "flags", arg: 2, scope: !6336, file: !3, line: 1639, type: !112)
!6363 = !DILocation(line: 1639, column: 59, scope: !6336)
!6364 = !DILocalVariable(name: "len", scope: !6336, file: !3, line: 1646, type: !440)
!6365 = !DILocation(line: 1646, column: 6, scope: !6336)
!6366 = !DILocation(line: 1646, column: 27, scope: !6336)
!6367 = !DILocation(line: 1646, column: 12, scope: !6336)
!6368 = !DILocation(line: 1646, column: 35, scope: !6336)
!6369 = !DILocation(line: 1648, column: 17, scope: !6336)
!6370 = !DILocation(line: 1648, column: 22, scope: !6336)
!6371 = !DILocation(line: 540, column: 27, scope: !4572, inlinedAt: !6341)
!6372 = !DILocation(line: 540, column: 6, scope: !4572, inlinedAt: !6341)
!6373 = !DILocation(line: 540, column: 6, scope: !4573, inlinedAt: !6341)
!6374 = !DILocation(line: 544, column: 7, scope: !4601, inlinedAt: !6341)
!6375 = !DILocation(line: 544, column: 12, scope: !4601, inlinedAt: !6341)
!6376 = !DILocation(line: 544, column: 7, scope: !4571, inlinedAt: !6341)
!6377 = !DILocation(line: 545, column: 25, scope: !4601, inlinedAt: !6341)
!6378 = !DILocation(line: 545, column: 31, scope: !4601, inlinedAt: !6341)
!6379 = !DILocation(line: 480, column: 33, scope: !4599, inlinedAt: !6351)
!6380 = !DILocation(line: 480, column: 23, scope: !4599, inlinedAt: !6351)
!6381 = !DILocation(line: 481, column: 29, scope: !4599, inlinedAt: !6351)
!6382 = !DILocation(line: 481, column: 35, scope: !4599, inlinedAt: !6351)
!6383 = !DILocation(line: 481, column: 42, scope: !4599, inlinedAt: !6351)
!6384 = !DILocation(line: 474, column: 23, scope: !4594, inlinedAt: !6350)
!6385 = !DILocation(line: 474, column: 29, scope: !4594, inlinedAt: !6350)
!6386 = !DILocation(line: 474, column: 36, scope: !4594, inlinedAt: !6350)
!6387 = !DILocation(line: 474, column: 9, scope: !4594, inlinedAt: !6350)
!6388 = !DILocation(line: 545, column: 4, scope: !4601, inlinedAt: !6341)
!6389 = !DILocation(line: 547, column: 25, scope: !4571, inlinedAt: !6341)
!6390 = !DILocation(line: 348, column: 7, scope: !4645, inlinedAt: !6348)
!6391 = !DILocation(line: 348, column: 6, scope: !4588, inlinedAt: !6348)
!6392 = !DILocation(line: 349, column: 3, scope: !4645, inlinedAt: !6348)
!6393 = !DILocation(line: 351, column: 6, scope: !4649, inlinedAt: !6348)
!6394 = !DILocation(line: 351, column: 11, scope: !4649, inlinedAt: !6348)
!6395 = !DILocation(line: 351, column: 6, scope: !4588, inlinedAt: !6348)
!6396 = !DILocation(line: 352, column: 3, scope: !4649, inlinedAt: !6348)
!6397 = !DILocation(line: 354, column: 32, scope: !4654, inlinedAt: !6348)
!6398 = !DILocation(line: 354, column: 37, scope: !4654, inlinedAt: !6348)
!6399 = !DILocation(line: 354, column: 42, scope: !4654, inlinedAt: !6348)
!6400 = !DILocation(line: 354, column: 45, scope: !4654, inlinedAt: !6348)
!6401 = !DILocation(line: 354, column: 50, scope: !4654, inlinedAt: !6348)
!6402 = !DILocation(line: 354, column: 6, scope: !4588, inlinedAt: !6348)
!6403 = !DILocation(line: 355, column: 3, scope: !4654, inlinedAt: !6348)
!6404 = !DILocation(line: 356, column: 32, scope: !4662, inlinedAt: !6348)
!6405 = !DILocation(line: 356, column: 37, scope: !4662, inlinedAt: !6348)
!6406 = !DILocation(line: 356, column: 43, scope: !4662, inlinedAt: !6348)
!6407 = !DILocation(line: 356, column: 46, scope: !4662, inlinedAt: !6348)
!6408 = !DILocation(line: 356, column: 51, scope: !4662, inlinedAt: !6348)
!6409 = !DILocation(line: 356, column: 6, scope: !4588, inlinedAt: !6348)
!6410 = !DILocation(line: 357, column: 3, scope: !4662, inlinedAt: !6348)
!6411 = !DILocation(line: 358, column: 6, scope: !4670, inlinedAt: !6348)
!6412 = !DILocation(line: 358, column: 11, scope: !4670, inlinedAt: !6348)
!6413 = !DILocation(line: 358, column: 6, scope: !4588, inlinedAt: !6348)
!6414 = !DILocation(line: 358, column: 26, scope: !4670, inlinedAt: !6348)
!6415 = !DILocation(line: 359, column: 6, scope: !4675, inlinedAt: !6348)
!6416 = !DILocation(line: 359, column: 11, scope: !4675, inlinedAt: !6348)
!6417 = !DILocation(line: 359, column: 6, scope: !4588, inlinedAt: !6348)
!6418 = !DILocation(line: 359, column: 26, scope: !4675, inlinedAt: !6348)
!6419 = !DILocation(line: 360, column: 6, scope: !4680, inlinedAt: !6348)
!6420 = !DILocation(line: 360, column: 11, scope: !4680, inlinedAt: !6348)
!6421 = !DILocation(line: 360, column: 6, scope: !4588, inlinedAt: !6348)
!6422 = !DILocation(line: 360, column: 26, scope: !4680, inlinedAt: !6348)
!6423 = !DILocation(line: 361, column: 6, scope: !4685, inlinedAt: !6348)
!6424 = !DILocation(line: 361, column: 11, scope: !4685, inlinedAt: !6348)
!6425 = !DILocation(line: 361, column: 6, scope: !4588, inlinedAt: !6348)
!6426 = !DILocation(line: 361, column: 26, scope: !4685, inlinedAt: !6348)
!6427 = !DILocation(line: 362, column: 6, scope: !4690, inlinedAt: !6348)
!6428 = !DILocation(line: 362, column: 11, scope: !4690, inlinedAt: !6348)
!6429 = !DILocation(line: 362, column: 6, scope: !4588, inlinedAt: !6348)
!6430 = !DILocation(line: 362, column: 26, scope: !4690, inlinedAt: !6348)
!6431 = !DILocation(line: 363, column: 6, scope: !4695, inlinedAt: !6348)
!6432 = !DILocation(line: 363, column: 11, scope: !4695, inlinedAt: !6348)
!6433 = !DILocation(line: 363, column: 6, scope: !4588, inlinedAt: !6348)
!6434 = !DILocation(line: 363, column: 26, scope: !4695, inlinedAt: !6348)
!6435 = !DILocation(line: 364, column: 6, scope: !4700, inlinedAt: !6348)
!6436 = !DILocation(line: 364, column: 11, scope: !4700, inlinedAt: !6348)
!6437 = !DILocation(line: 364, column: 6, scope: !4588, inlinedAt: !6348)
!6438 = !DILocation(line: 364, column: 26, scope: !4700, inlinedAt: !6348)
!6439 = !DILocation(line: 365, column: 6, scope: !4705, inlinedAt: !6348)
!6440 = !DILocation(line: 365, column: 11, scope: !4705, inlinedAt: !6348)
!6441 = !DILocation(line: 365, column: 6, scope: !4588, inlinedAt: !6348)
!6442 = !DILocation(line: 365, column: 26, scope: !4705, inlinedAt: !6348)
!6443 = !DILocation(line: 366, column: 6, scope: !4710, inlinedAt: !6348)
!6444 = !DILocation(line: 366, column: 11, scope: !4710, inlinedAt: !6348)
!6445 = !DILocation(line: 366, column: 6, scope: !4588, inlinedAt: !6348)
!6446 = !DILocation(line: 366, column: 26, scope: !4710, inlinedAt: !6348)
!6447 = !DILocation(line: 367, column: 6, scope: !4715, inlinedAt: !6348)
!6448 = !DILocation(line: 367, column: 11, scope: !4715, inlinedAt: !6348)
!6449 = !DILocation(line: 367, column: 6, scope: !4588, inlinedAt: !6348)
!6450 = !DILocation(line: 367, column: 26, scope: !4715, inlinedAt: !6348)
!6451 = !DILocation(line: 368, column: 6, scope: !4720, inlinedAt: !6348)
!6452 = !DILocation(line: 368, column: 11, scope: !4720, inlinedAt: !6348)
!6453 = !DILocation(line: 368, column: 6, scope: !4588, inlinedAt: !6348)
!6454 = !DILocation(line: 368, column: 26, scope: !4720, inlinedAt: !6348)
!6455 = !DILocation(line: 369, column: 6, scope: !4725, inlinedAt: !6348)
!6456 = !DILocation(line: 369, column: 11, scope: !4725, inlinedAt: !6348)
!6457 = !DILocation(line: 369, column: 6, scope: !4588, inlinedAt: !6348)
!6458 = !DILocation(line: 369, column: 26, scope: !4725, inlinedAt: !6348)
!6459 = !DILocation(line: 370, column: 6, scope: !4730, inlinedAt: !6348)
!6460 = !DILocation(line: 370, column: 11, scope: !4730, inlinedAt: !6348)
!6461 = !DILocation(line: 370, column: 6, scope: !4588, inlinedAt: !6348)
!6462 = !DILocation(line: 370, column: 26, scope: !4730, inlinedAt: !6348)
!6463 = !DILocation(line: 371, column: 6, scope: !4735, inlinedAt: !6348)
!6464 = !DILocation(line: 371, column: 11, scope: !4735, inlinedAt: !6348)
!6465 = !DILocation(line: 371, column: 6, scope: !4588, inlinedAt: !6348)
!6466 = !DILocation(line: 371, column: 26, scope: !4735, inlinedAt: !6348)
!6467 = !DILocation(line: 372, column: 6, scope: !4740, inlinedAt: !6348)
!6468 = !DILocation(line: 372, column: 11, scope: !4740, inlinedAt: !6348)
!6469 = !DILocation(line: 372, column: 6, scope: !4588, inlinedAt: !6348)
!6470 = !DILocation(line: 372, column: 26, scope: !4740, inlinedAt: !6348)
!6471 = !DILocation(line: 373, column: 6, scope: !4745, inlinedAt: !6348)
!6472 = !DILocation(line: 373, column: 11, scope: !4745, inlinedAt: !6348)
!6473 = !DILocation(line: 373, column: 6, scope: !4588, inlinedAt: !6348)
!6474 = !DILocation(line: 373, column: 26, scope: !4745, inlinedAt: !6348)
!6475 = !DILocation(line: 374, column: 6, scope: !4750, inlinedAt: !6348)
!6476 = !DILocation(line: 374, column: 11, scope: !4750, inlinedAt: !6348)
!6477 = !DILocation(line: 374, column: 6, scope: !4588, inlinedAt: !6348)
!6478 = !DILocation(line: 374, column: 26, scope: !4750, inlinedAt: !6348)
!6479 = !DILocation(line: 375, column: 6, scope: !4755, inlinedAt: !6348)
!6480 = !DILocation(line: 375, column: 11, scope: !4755, inlinedAt: !6348)
!6481 = !DILocation(line: 375, column: 6, scope: !4588, inlinedAt: !6348)
!6482 = !DILocation(line: 375, column: 27, scope: !4755, inlinedAt: !6348)
!6483 = !DILocation(line: 376, column: 6, scope: !4760, inlinedAt: !6348)
!6484 = !DILocation(line: 376, column: 11, scope: !4760, inlinedAt: !6348)
!6485 = !DILocation(line: 376, column: 6, scope: !4588, inlinedAt: !6348)
!6486 = !DILocation(line: 376, column: 32, scope: !4760, inlinedAt: !6348)
!6487 = !DILocation(line: 377, column: 6, scope: !4765, inlinedAt: !6348)
!6488 = !DILocation(line: 377, column: 11, scope: !4765, inlinedAt: !6348)
!6489 = !DILocation(line: 377, column: 6, scope: !4588, inlinedAt: !6348)
!6490 = !DILocation(line: 377, column: 32, scope: !4765, inlinedAt: !6348)
!6491 = !DILocation(line: 378, column: 6, scope: !4770, inlinedAt: !6348)
!6492 = !DILocation(line: 378, column: 11, scope: !4770, inlinedAt: !6348)
!6493 = !DILocation(line: 378, column: 6, scope: !4588, inlinedAt: !6348)
!6494 = !DILocation(line: 378, column: 32, scope: !4770, inlinedAt: !6348)
!6495 = !DILocation(line: 379, column: 6, scope: !4775, inlinedAt: !6348)
!6496 = !DILocation(line: 379, column: 11, scope: !4775, inlinedAt: !6348)
!6497 = !DILocation(line: 379, column: 6, scope: !4588, inlinedAt: !6348)
!6498 = !DILocation(line: 379, column: 33, scope: !4775, inlinedAt: !6348)
!6499 = !DILocation(line: 380, column: 6, scope: !4780, inlinedAt: !6348)
!6500 = !DILocation(line: 380, column: 11, scope: !4780, inlinedAt: !6348)
!6501 = !DILocation(line: 380, column: 6, scope: !4588, inlinedAt: !6348)
!6502 = !DILocation(line: 380, column: 33, scope: !4780, inlinedAt: !6348)
!6503 = !DILocation(line: 381, column: 6, scope: !4785, inlinedAt: !6348)
!6504 = !DILocation(line: 381, column: 11, scope: !4785, inlinedAt: !6348)
!6505 = !DILocation(line: 381, column: 6, scope: !4588, inlinedAt: !6348)
!6506 = !DILocation(line: 381, column: 33, scope: !4785, inlinedAt: !6348)
!6507 = !DILocation(line: 382, column: 2, scope: !4790, inlinedAt: !6348)
!6508 = !DILocation(line: 382, column: 2, scope: !4794, inlinedAt: !6348)
!6509 = !DILocation(line: 382, column: 2, scope: !4795, inlinedAt: !6348)
!6510 = !DILocation(line: 386, column: 1, scope: !4588, inlinedAt: !6348)
!6511 = !DILocation(line: 547, column: 9, scope: !4571, inlinedAt: !6341)
!6512 = !DILocation(line: 549, column: 8, scope: !4801, inlinedAt: !6341)
!6513 = !DILocation(line: 549, column: 7, scope: !4571, inlinedAt: !6341)
!6514 = !DILocation(line: 550, column: 4, scope: !4801, inlinedAt: !6341)
!6515 = !DILocation(line: 553, column: 33, scope: !4571, inlinedAt: !6341)
!6516 = !DILocation(line: 325, column: 6, scope: !4806, inlinedAt: !6346)
!6517 = !DILocation(line: 325, column: 6, scope: !4582, inlinedAt: !6346)
!6518 = !DILocation(line: 326, column: 3, scope: !4806, inlinedAt: !6346)
!6519 = !DILocation(line: 332, column: 9, scope: !4582, inlinedAt: !6346)
!6520 = !DILocation(line: 332, column: 15, scope: !4582, inlinedAt: !6346)
!6521 = !DILocation(line: 332, column: 2, scope: !4582, inlinedAt: !6346)
!6522 = !DILocation(line: 336, column: 1, scope: !4582, inlinedAt: !6346)
!6523 = !DILocation(line: 553, column: 5, scope: !4571, inlinedAt: !6341)
!6524 = !DILocation(line: 553, column: 41, scope: !4571, inlinedAt: !6341)
!6525 = !DILocation(line: 554, column: 5, scope: !4571, inlinedAt: !6341)
!6526 = !DILocation(line: 554, column: 12, scope: !4571, inlinedAt: !6341)
!6527 = !DILocation(line: 448, column: 31, scope: !4566, inlinedAt: !6340)
!6528 = !DILocation(line: 448, column: 34, scope: !4566, inlinedAt: !6340)
!6529 = !DILocation(line: 448, column: 14, scope: !4566, inlinedAt: !6340)
!6530 = !DILocation(line: 450, column: 22, scope: !4566, inlinedAt: !6340)
!6531 = !DILocation(line: 450, column: 25, scope: !4566, inlinedAt: !6340)
!6532 = !DILocation(line: 450, column: 30, scope: !4566, inlinedAt: !6340)
!6533 = !DILocation(line: 450, column: 36, scope: !4566, inlinedAt: !6340)
!6534 = !DILocation(line: 450, column: 8, scope: !4566, inlinedAt: !6340)
!6535 = !DILocation(line: 450, column: 6, scope: !4566, inlinedAt: !6340)
!6536 = !DILocation(line: 451, column: 9, scope: !4566, inlinedAt: !6340)
!6537 = !DILocation(line: 552, column: 3, scope: !4571, inlinedAt: !6341)
!6538 = !DILocation(line: 557, column: 19, scope: !4573, inlinedAt: !6341)
!6539 = !DILocation(line: 557, column: 25, scope: !4573, inlinedAt: !6341)
!6540 = !DILocation(line: 557, column: 9, scope: !4573, inlinedAt: !6341)
!6541 = !DILocation(line: 557, column: 2, scope: !4573, inlinedAt: !6341)
!6542 = !DILocation(line: 558, column: 1, scope: !4573, inlinedAt: !6341)
!6543 = !DILocation(line: 1648, column: 2, scope: !6336)
!6544 = distinct !DISubprogram(name: "hid_report_len", scope: !94, file: !94, line: 1155, type: !6545, scopeLine: 1156, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !371)
!6545 = !DISubroutineType(types: !6546)
!6546 = !{!440, !115}
!6547 = !DILocalVariable(name: "report", arg: 1, scope: !6544, file: !94, line: 1155, type: !115)
!6548 = !DILocation(line: 1155, column: 53, scope: !6544)
!6549 = !DILocation(line: 1158, column: 11, scope: !6544)
!6550 = !DILocation(line: 1158, column: 19, scope: !6544)
!6551 = !DILocation(line: 1158, column: 24, scope: !6544)
!6552 = !DILocation(line: 1158, column: 29, scope: !6544)
!6553 = !DILocation(line: 1158, column: 35, scope: !6544)
!6554 = !DILocation(line: 1158, column: 42, scope: !6544)
!6555 = !DILocation(line: 1158, column: 50, scope: !6544)
!6556 = !DILocation(line: 1158, column: 53, scope: !6544)
!6557 = !DILocation(line: 1158, column: 39, scope: !6544)
!6558 = !DILocation(line: 1158, column: 2, scope: !6544)
!6559 = distinct !DISubprogram(name: "hid_set_field", scope: !3, file: !3, line: 1658, type: !6560, scopeLine: 1659, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !371)
!6560 = !DISubroutineType(types: !6561)
!6561 = !{!169, !130, !7, !168}
!6562 = !DILocalVariable(name: "field", arg: 1, scope: !6559, file: !3, line: 1658, type: !130)
!6563 = !DILocation(line: 1658, column: 37, scope: !6559)
!6564 = !DILocalVariable(name: "offset", arg: 2, scope: !6559, file: !3, line: 1658, type: !7)
!6565 = !DILocation(line: 1658, column: 53, scope: !6559)
!6566 = !DILocalVariable(name: "value", arg: 3, scope: !6559, file: !3, line: 1658, type: !168)
!6567 = !DILocation(line: 1658, column: 67, scope: !6559)
!6568 = !DILocalVariable(name: "size", scope: !6559, file: !3, line: 1660, type: !7)
!6569 = !DILocation(line: 1660, column: 11, scope: !6559)
!6570 = !DILocation(line: 1662, column: 7, scope: !6571)
!6571 = distinct !DILexicalBlock(scope: !6559, file: !3, line: 1662, column: 6)
!6572 = !DILocation(line: 1662, column: 6, scope: !6559)
!6573 = !DILocation(line: 1663, column: 3, scope: !6571)
!6574 = !DILocation(line: 1665, column: 9, scope: !6559)
!6575 = !DILocation(line: 1665, column: 16, scope: !6559)
!6576 = !DILocation(line: 1665, column: 7, scope: !6559)
!6577 = !DILocation(line: 1667, column: 2, scope: !6559)
!6578 = !DILocation(line: 1667, column: 2, scope: !6579)
!6579 = distinct !DILexicalBlock(scope: !6559, file: !3, line: 1667, column: 2)
!6580 = !DILocation(line: 1669, column: 6, scope: !6581)
!6581 = distinct !DILexicalBlock(scope: !6559, file: !3, line: 1669, column: 6)
!6582 = !DILocation(line: 1669, column: 16, scope: !6581)
!6583 = !DILocation(line: 1669, column: 23, scope: !6581)
!6584 = !DILocation(line: 1669, column: 13, scope: !6581)
!6585 = !DILocation(line: 1669, column: 6, scope: !6559)
!6586 = !DILocation(line: 1670, column: 3, scope: !6587)
!6587 = distinct !DILexicalBlock(scope: !6581, file: !3, line: 1669, column: 37)
!6588 = !DILocation(line: 1672, column: 3, scope: !6587)
!6589 = !DILocation(line: 1674, column: 6, scope: !6590)
!6590 = distinct !DILexicalBlock(scope: !6559, file: !3, line: 1674, column: 6)
!6591 = !DILocation(line: 1674, column: 13, scope: !6590)
!6592 = !DILocation(line: 1674, column: 29, scope: !6590)
!6593 = !DILocation(line: 1674, column: 6, scope: !6559)
!6594 = !DILocation(line: 1675, column: 7, scope: !6595)
!6595 = distinct !DILexicalBlock(scope: !6596, file: !3, line: 1675, column: 7)
!6596 = distinct !DILexicalBlock(scope: !6590, file: !3, line: 1674, column: 34)
!6597 = !DILocation(line: 1675, column: 30, scope: !6595)
!6598 = !DILocation(line: 1675, column: 37, scope: !6595)
!6599 = !DILocation(line: 1675, column: 23, scope: !6595)
!6600 = !DILocation(line: 1675, column: 44, scope: !6595)
!6601 = !DILocation(line: 1675, column: 16, scope: !6595)
!6602 = !DILocation(line: 1675, column: 13, scope: !6595)
!6603 = !DILocation(line: 1675, column: 7, scope: !6596)
!6604 = !DILocation(line: 1676, column: 4, scope: !6605)
!6605 = distinct !DILexicalBlock(scope: !6595, file: !3, line: 1675, column: 51)
!6606 = !DILocation(line: 1677, column: 4, scope: !6605)
!6607 = !DILocation(line: 1679, column: 2, scope: !6596)
!6608 = !DILocation(line: 1680, column: 25, scope: !6559)
!6609 = !DILocation(line: 1680, column: 2, scope: !6559)
!6610 = !DILocation(line: 1680, column: 9, scope: !6559)
!6611 = !DILocation(line: 1680, column: 15, scope: !6559)
!6612 = !DILocation(line: 1680, column: 23, scope: !6559)
!6613 = !DILocation(line: 1681, column: 2, scope: !6559)
!6614 = !DILocation(line: 1682, column: 1, scope: !6559)
!6615 = distinct !DISubprogram(name: "s32ton", scope: !3, file: !3, line: 1328, type: !6616, scopeLine: 1329, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !371)
!6616 = !DISubroutineType(types: !6617)
!6617 = !{!440, !168, !7}
!6618 = !DILocalVariable(name: "value", arg: 1, scope: !6615, file: !3, line: 1328, type: !168)
!6619 = !DILocation(line: 1328, column: 25, scope: !6615)
!6620 = !DILocalVariable(name: "n", arg: 2, scope: !6615, file: !3, line: 1328, type: !7)
!6621 = !DILocation(line: 1328, column: 41, scope: !6615)
!6622 = !DILocalVariable(name: "a", scope: !6615, file: !3, line: 1330, type: !1457)
!6623 = !DILocation(line: 1330, column: 6, scope: !6615)
!6624 = !DILocation(line: 1330, column: 10, scope: !6615)
!6625 = !DILocation(line: 1330, column: 20, scope: !6615)
!6626 = !DILocation(line: 1330, column: 22, scope: !6615)
!6627 = !DILocation(line: 1330, column: 16, scope: !6615)
!6628 = !DILocation(line: 1331, column: 6, scope: !6629)
!6629 = distinct !DILexicalBlock(scope: !6615, file: !3, line: 1331, column: 6)
!6630 = !DILocation(line: 1331, column: 8, scope: !6629)
!6631 = !DILocation(line: 1331, column: 11, scope: !6629)
!6632 = !DILocation(line: 1331, column: 13, scope: !6629)
!6633 = !DILocation(line: 1331, column: 6, scope: !6615)
!6634 = !DILocation(line: 1332, column: 10, scope: !6629)
!6635 = !DILocation(line: 1332, column: 16, scope: !6629)
!6636 = !DILocation(line: 1332, column: 28, scope: !6629)
!6637 = !DILocation(line: 1332, column: 30, scope: !6629)
!6638 = !DILocation(line: 1332, column: 24, scope: !6629)
!6639 = !DILocation(line: 1332, column: 44, scope: !6629)
!6640 = !DILocation(line: 1332, column: 46, scope: !6629)
!6641 = !DILocation(line: 1332, column: 40, scope: !6629)
!6642 = !DILocation(line: 1332, column: 52, scope: !6629)
!6643 = !DILocation(line: 1332, column: 3, scope: !6629)
!6644 = !DILocation(line: 1333, column: 9, scope: !6615)
!6645 = !DILocation(line: 1333, column: 24, scope: !6615)
!6646 = !DILocation(line: 1333, column: 21, scope: !6615)
!6647 = !DILocation(line: 1333, column: 27, scope: !6615)
!6648 = !DILocation(line: 1333, column: 15, scope: !6615)
!6649 = !DILocation(line: 1333, column: 2, scope: !6615)
!6650 = !DILocation(line: 1334, column: 1, scope: !6615)
!6651 = distinct !DISubprogram(name: "__hid_request", scope: !3, file: !3, line: 1706, type: !6652, scopeLine: 1708, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !371)
!6652 = !DISubroutineType(types: !6653)
!6653 = !{!169, !3986, !115, !169}
!6654 = !DILocalVariable(name: "hid", arg: 1, scope: !6651, file: !3, line: 1706, type: !3986)
!6655 = !DILocation(line: 1706, column: 38, scope: !6651)
!6656 = !DILocalVariable(name: "report", arg: 2, scope: !6651, file: !3, line: 1706, type: !115)
!6657 = !DILocation(line: 1706, column: 62, scope: !6651)
!6658 = !DILocalVariable(name: "reqtype", arg: 3, scope: !6651, file: !3, line: 1707, type: !169)
!6659 = !DILocation(line: 1707, column: 7, scope: !6651)
!6660 = !DILocalVariable(name: "buf", scope: !6651, file: !3, line: 1709, type: !509)
!6661 = !DILocation(line: 1709, column: 8, scope: !6651)
!6662 = !DILocalVariable(name: "ret", scope: !6651, file: !3, line: 1710, type: !169)
!6663 = !DILocation(line: 1710, column: 6, scope: !6651)
!6664 = !DILocalVariable(name: "len", scope: !6651, file: !3, line: 1711, type: !440)
!6665 = !DILocation(line: 1711, column: 6, scope: !6651)
!6666 = !DILocation(line: 1713, column: 29, scope: !6651)
!6667 = !DILocation(line: 1713, column: 8, scope: !6651)
!6668 = !DILocation(line: 1713, column: 6, scope: !6651)
!6669 = !DILocation(line: 1714, column: 7, scope: !6670)
!6670 = distinct !DILexicalBlock(scope: !6651, file: !3, line: 1714, column: 6)
!6671 = !DILocation(line: 1714, column: 6, scope: !6651)
!6672 = !DILocation(line: 1715, column: 3, scope: !6670)
!6673 = !DILocation(line: 1717, column: 23, scope: !6651)
!6674 = !DILocation(line: 1717, column: 8, scope: !6651)
!6675 = !DILocation(line: 1717, column: 6, scope: !6651)
!6676 = !DILocation(line: 1719, column: 6, scope: !6677)
!6677 = distinct !DILexicalBlock(scope: !6651, file: !3, line: 1719, column: 6)
!6678 = !DILocation(line: 1719, column: 14, scope: !6677)
!6679 = !DILocation(line: 1719, column: 6, scope: !6651)
!6680 = !DILocation(line: 1720, column: 21, scope: !6677)
!6681 = !DILocation(line: 1720, column: 29, scope: !6677)
!6682 = !DILocation(line: 1720, column: 3, scope: !6677)
!6683 = !DILocation(line: 1722, column: 8, scope: !6651)
!6684 = !DILocation(line: 1722, column: 13, scope: !6651)
!6685 = !DILocation(line: 1722, column: 24, scope: !6651)
!6686 = !DILocation(line: 1722, column: 36, scope: !6651)
!6687 = !DILocation(line: 1722, column: 41, scope: !6651)
!6688 = !DILocation(line: 1722, column: 49, scope: !6651)
!6689 = !DILocation(line: 1722, column: 53, scope: !6651)
!6690 = !DILocation(line: 1722, column: 58, scope: !6651)
!6691 = !DILocation(line: 1723, column: 8, scope: !6651)
!6692 = !DILocation(line: 1723, column: 16, scope: !6651)
!6693 = !DILocation(line: 1723, column: 22, scope: !6651)
!6694 = !DILocation(line: 1722, column: 6, scope: !6651)
!6695 = !DILocation(line: 1724, column: 6, scope: !6696)
!6696 = distinct !DILexicalBlock(scope: !6651, file: !3, line: 1724, column: 6)
!6697 = !DILocation(line: 1724, column: 10, scope: !6696)
!6698 = !DILocation(line: 1724, column: 6, scope: !6651)
!6699 = !DILocation(line: 1725, column: 3, scope: !6700)
!6700 = distinct !DILexicalBlock(scope: !6696, file: !3, line: 1724, column: 15)
!6701 = !DILocation(line: 1725, column: 3, scope: !6702)
!6702 = distinct !DILexicalBlock(scope: !6703, file: !3, line: 1725, column: 3)
!6703 = distinct !DILexicalBlock(scope: !6700, file: !3, line: 1725, column: 3)
!6704 = !DILocation(line: 1725, column: 3, scope: !6703)
!6705 = !DILocation(line: 1726, column: 3, scope: !6700)
!6706 = !DILocation(line: 1729, column: 6, scope: !6707)
!6707 = distinct !DILexicalBlock(scope: !6651, file: !3, line: 1729, column: 6)
!6708 = !DILocation(line: 1729, column: 14, scope: !6707)
!6709 = !DILocation(line: 1729, column: 6, scope: !6651)
!6710 = !DILocation(line: 1730, column: 20, scope: !6707)
!6711 = !DILocation(line: 1730, column: 25, scope: !6707)
!6712 = !DILocation(line: 1730, column: 33, scope: !6707)
!6713 = !DILocation(line: 1730, column: 39, scope: !6707)
!6714 = !DILocation(line: 1730, column: 44, scope: !6707)
!6715 = !DILocation(line: 1730, column: 3, scope: !6707)
!6716 = !DILocation(line: 1732, column: 6, scope: !6651)
!6717 = !DILocation(line: 1732, column: 2, scope: !6651)
!6718 = !DILabel(scope: !6651, name: "out", file: !3, line: 1734)
!6719 = !DILocation(line: 1734, column: 1, scope: !6651)
!6720 = !DILocation(line: 1735, column: 8, scope: !6651)
!6721 = !DILocation(line: 1735, column: 2, scope: !6651)
!6722 = !DILocation(line: 1736, column: 9, scope: !6651)
!6723 = !DILocation(line: 1736, column: 2, scope: !6651)
!6724 = !DILocation(line: 1737, column: 1, scope: !6651)
!6725 = distinct !DISubprogram(name: "hid_input_report", scope: !3, file: !3, line: 1807, type: !6726, scopeLine: 1808, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !371)
!6726 = !DISubroutineType(types: !6727)
!6727 = !{!169, !3986, !169, !4068, !440, !169}
!6728 = !DILocalVariable(name: "hid", arg: 1, scope: !6725, file: !3, line: 1807, type: !3986)
!6729 = !DILocation(line: 1807, column: 41, scope: !6725)
!6730 = !DILocalVariable(name: "type", arg: 2, scope: !6725, file: !3, line: 1807, type: !169)
!6731 = !DILocation(line: 1807, column: 50, scope: !6725)
!6732 = !DILocalVariable(name: "data", arg: 3, scope: !6725, file: !3, line: 1807, type: !4068)
!6733 = !DILocation(line: 1807, column: 60, scope: !6725)
!6734 = !DILocalVariable(name: "size", arg: 4, scope: !6725, file: !3, line: 1807, type: !440)
!6735 = !DILocation(line: 1807, column: 70, scope: !6725)
!6736 = !DILocalVariable(name: "interrupt", arg: 5, scope: !6725, file: !3, line: 1807, type: !169)
!6737 = !DILocation(line: 1807, column: 80, scope: !6725)
!6738 = !DILocalVariable(name: "report_enum", scope: !6725, file: !3, line: 1809, type: !4495)
!6739 = !DILocation(line: 1809, column: 26, scope: !6725)
!6740 = !DILocalVariable(name: "hdrv", scope: !6725, file: !3, line: 1810, type: !4030)
!6741 = !DILocation(line: 1810, column: 21, scope: !6725)
!6742 = !DILocalVariable(name: "report", scope: !6725, file: !3, line: 1811, type: !115)
!6743 = !DILocation(line: 1811, column: 21, scope: !6725)
!6744 = !DILocalVariable(name: "ret", scope: !6725, file: !3, line: 1812, type: !169)
!6745 = !DILocation(line: 1812, column: 6, scope: !6725)
!6746 = !DILocation(line: 1814, column: 7, scope: !6747)
!6747 = distinct !DILexicalBlock(scope: !6725, file: !3, line: 1814, column: 6)
!6748 = !DILocation(line: 1814, column: 6, scope: !6725)
!6749 = !DILocation(line: 1815, column: 3, scope: !6747)
!6750 = !DILocation(line: 1817, column: 20, scope: !6751)
!6751 = distinct !DILexicalBlock(scope: !6725, file: !3, line: 1817, column: 6)
!6752 = !DILocation(line: 1817, column: 25, scope: !6751)
!6753 = !DILocation(line: 1817, column: 6, scope: !6751)
!6754 = !DILocation(line: 1817, column: 6, scope: !6725)
!6755 = !DILocation(line: 1818, column: 3, scope: !6751)
!6756 = !DILocation(line: 1820, column: 7, scope: !6757)
!6757 = distinct !DILexicalBlock(scope: !6725, file: !3, line: 1820, column: 6)
!6758 = !DILocation(line: 1820, column: 12, scope: !6757)
!6759 = !DILocation(line: 1820, column: 6, scope: !6725)
!6760 = !DILocation(line: 1821, column: 7, scope: !6761)
!6761 = distinct !DILexicalBlock(scope: !6757, file: !3, line: 1820, column: 20)
!6762 = !DILocation(line: 1822, column: 3, scope: !6761)
!6763 = !DILocation(line: 1824, column: 16, scope: !6725)
!6764 = !DILocation(line: 1824, column: 21, scope: !6725)
!6765 = !DILocation(line: 1824, column: 35, scope: !6725)
!6766 = !DILocation(line: 1824, column: 33, scope: !6725)
!6767 = !DILocation(line: 1824, column: 14, scope: !6725)
!6768 = !DILocation(line: 1825, column: 9, scope: !6725)
!6769 = !DILocation(line: 1825, column: 14, scope: !6725)
!6770 = !DILocation(line: 1825, column: 7, scope: !6725)
!6771 = !DILocation(line: 1827, column: 7, scope: !6772)
!6772 = distinct !DILexicalBlock(scope: !6725, file: !3, line: 1827, column: 6)
!6773 = !DILocation(line: 1827, column: 6, scope: !6725)
!6774 = !DILocation(line: 1828, column: 3, scope: !6775)
!6775 = distinct !DILexicalBlock(scope: !6772, file: !3, line: 1827, column: 13)
!6776 = !DILocation(line: 1828, column: 3, scope: !6777)
!6777 = distinct !DILexicalBlock(scope: !6778, file: !3, line: 1828, column: 3)
!6778 = distinct !DILexicalBlock(scope: !6775, file: !3, line: 1828, column: 3)
!6779 = !DILocation(line: 1828, column: 3, scope: !6778)
!6780 = !DILocation(line: 1829, column: 7, scope: !6775)
!6781 = !DILocation(line: 1830, column: 3, scope: !6775)
!6782 = !DILocation(line: 1834, column: 19, scope: !6783)
!6783 = distinct !DILexicalBlock(scope: !6725, file: !3, line: 1834, column: 6)
!6784 = !DILocation(line: 1834, column: 24, scope: !6783)
!6785 = !DILocation(line: 1834, column: 7, scope: !6783)
!6786 = !DILocation(line: 1834, column: 6, scope: !6725)
!6787 = !DILocation(line: 1835, column: 3, scope: !6783)
!6788 = !DILocation(line: 1835, column: 3, scope: !6789)
!6789 = distinct !DILexicalBlock(scope: !6783, file: !3, line: 1835, column: 3)
!6790 = !DILocation(line: 1837, column: 26, scope: !6725)
!6791 = !DILocation(line: 1837, column: 39, scope: !6725)
!6792 = !DILocation(line: 1837, column: 11, scope: !6725)
!6793 = !DILocation(line: 1837, column: 9, scope: !6725)
!6794 = !DILocation(line: 1839, column: 7, scope: !6795)
!6795 = distinct !DILexicalBlock(scope: !6725, file: !3, line: 1839, column: 6)
!6796 = !DILocation(line: 1839, column: 6, scope: !6725)
!6797 = !DILocation(line: 1840, column: 7, scope: !6798)
!6798 = distinct !DILexicalBlock(scope: !6795, file: !3, line: 1839, column: 15)
!6799 = !DILocation(line: 1841, column: 3, scope: !6798)
!6800 = !DILocation(line: 1844, column: 6, scope: !6801)
!6801 = distinct !DILexicalBlock(scope: !6725, file: !3, line: 1844, column: 6)
!6802 = !DILocation(line: 1844, column: 11, scope: !6801)
!6803 = !DILocation(line: 1844, column: 14, scope: !6801)
!6804 = !DILocation(line: 1844, column: 20, scope: !6801)
!6805 = !DILocation(line: 1844, column: 30, scope: !6801)
!6806 = !DILocation(line: 1844, column: 50, scope: !6801)
!6807 = !DILocation(line: 1844, column: 55, scope: !6801)
!6808 = !DILocation(line: 1844, column: 33, scope: !6801)
!6809 = !DILocation(line: 1844, column: 6, scope: !6725)
!6810 = !DILocation(line: 1845, column: 9, scope: !6811)
!6811 = distinct !DILexicalBlock(scope: !6801, file: !3, line: 1844, column: 64)
!6812 = !DILocation(line: 1845, column: 15, scope: !6811)
!6813 = !DILocation(line: 1845, column: 25, scope: !6811)
!6814 = !DILocation(line: 1845, column: 30, scope: !6811)
!6815 = !DILocation(line: 1845, column: 38, scope: !6811)
!6816 = !DILocation(line: 1845, column: 44, scope: !6811)
!6817 = !DILocation(line: 1845, column: 7, scope: !6811)
!6818 = !DILocation(line: 1846, column: 7, scope: !6819)
!6819 = distinct !DILexicalBlock(scope: !6811, file: !3, line: 1846, column: 7)
!6820 = !DILocation(line: 1846, column: 11, scope: !6819)
!6821 = !DILocation(line: 1846, column: 7, scope: !6811)
!6822 = !DILocation(line: 1847, column: 4, scope: !6819)
!6823 = !DILocation(line: 1848, column: 2, scope: !6811)
!6824 = !DILocation(line: 1850, column: 29, scope: !6725)
!6825 = !DILocation(line: 1850, column: 34, scope: !6725)
!6826 = !DILocation(line: 1850, column: 40, scope: !6725)
!6827 = !DILocation(line: 1850, column: 46, scope: !6725)
!6828 = !DILocation(line: 1850, column: 52, scope: !6725)
!6829 = !DILocation(line: 1850, column: 8, scope: !6725)
!6830 = !DILocation(line: 1850, column: 6, scope: !6725)
!6831 = !DILocation(line: 1850, column: 2, scope: !6725)
!6832 = !DILabel(scope: !6725, name: "unlock", file: !3, line: 1852)
!6833 = !DILocation(line: 1852, column: 1, scope: !6725)
!6834 = !DILocation(line: 1853, column: 6, scope: !6725)
!6835 = !DILocation(line: 1853, column: 11, scope: !6725)
!6836 = !DILocation(line: 1853, column: 2, scope: !6725)
!6837 = !DILocation(line: 1854, column: 9, scope: !6725)
!6838 = !DILocation(line: 1854, column: 2, scope: !6725)
!6839 = !DILocation(line: 1855, column: 1, scope: !6725)
!6840 = distinct !DISubprogram(name: "hid_report_raw_event", scope: !3, file: !3, line: 1740, type: !6726, scopeLine: 1742, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !371)
!6841 = !DILocalVariable(name: "hid", arg: 1, scope: !6840, file: !3, line: 1740, type: !3986)
!6842 = !DILocation(line: 1740, column: 45, scope: !6840)
!6843 = !DILocalVariable(name: "type", arg: 2, scope: !6840, file: !3, line: 1740, type: !169)
!6844 = !DILocation(line: 1740, column: 54, scope: !6840)
!6845 = !DILocalVariable(name: "data", arg: 3, scope: !6840, file: !3, line: 1740, type: !4068)
!6846 = !DILocation(line: 1740, column: 64, scope: !6840)
!6847 = !DILocalVariable(name: "size", arg: 4, scope: !6840, file: !3, line: 1740, type: !440)
!6848 = !DILocation(line: 1740, column: 74, scope: !6840)
!6849 = !DILocalVariable(name: "interrupt", arg: 5, scope: !6840, file: !3, line: 1741, type: !169)
!6850 = !DILocation(line: 1741, column: 7, scope: !6840)
!6851 = !DILocalVariable(name: "report_enum", scope: !6840, file: !3, line: 1743, type: !4495)
!6852 = !DILocation(line: 1743, column: 26, scope: !6840)
!6853 = !DILocation(line: 1743, column: 40, scope: !6840)
!6854 = !DILocation(line: 1743, column: 45, scope: !6840)
!6855 = !DILocation(line: 1743, column: 59, scope: !6840)
!6856 = !DILocation(line: 1743, column: 57, scope: !6840)
!6857 = !DILocalVariable(name: "report", scope: !6840, file: !3, line: 1744, type: !115)
!6858 = !DILocation(line: 1744, column: 21, scope: !6840)
!6859 = !DILocalVariable(name: "hdrv", scope: !6840, file: !3, line: 1745, type: !4030)
!6860 = !DILocation(line: 1745, column: 21, scope: !6840)
!6861 = !DILocalVariable(name: "a", scope: !6840, file: !3, line: 1746, type: !7)
!6862 = !DILocation(line: 1746, column: 15, scope: !6840)
!6863 = !DILocalVariable(name: "rsize", scope: !6840, file: !3, line: 1747, type: !440)
!6864 = !DILocation(line: 1747, column: 6, scope: !6840)
!6865 = !DILocalVariable(name: "csize", scope: !6840, file: !3, line: 1747, type: !440)
!6866 = !DILocation(line: 1747, column: 13, scope: !6840)
!6867 = !DILocation(line: 1747, column: 21, scope: !6840)
!6868 = !DILocalVariable(name: "cdata", scope: !6840, file: !3, line: 1748, type: !4068)
!6869 = !DILocation(line: 1748, column: 6, scope: !6840)
!6870 = !DILocation(line: 1748, column: 14, scope: !6840)
!6871 = !DILocalVariable(name: "ret", scope: !6840, file: !3, line: 1749, type: !169)
!6872 = !DILocation(line: 1749, column: 6, scope: !6840)
!6873 = !DILocation(line: 1751, column: 26, scope: !6840)
!6874 = !DILocation(line: 1751, column: 39, scope: !6840)
!6875 = !DILocation(line: 1751, column: 11, scope: !6840)
!6876 = !DILocation(line: 1751, column: 9, scope: !6840)
!6877 = !DILocation(line: 1752, column: 7, scope: !6878)
!6878 = distinct !DILexicalBlock(scope: !6840, file: !3, line: 1752, column: 6)
!6879 = !DILocation(line: 1752, column: 6, scope: !6840)
!6880 = !DILocation(line: 1753, column: 3, scope: !6878)
!6881 = !DILocation(line: 1755, column: 6, scope: !6882)
!6882 = distinct !DILexicalBlock(scope: !6840, file: !3, line: 1755, column: 6)
!6883 = !DILocation(line: 1755, column: 19, scope: !6882)
!6884 = !DILocation(line: 1755, column: 6, scope: !6840)
!6885 = !DILocation(line: 1756, column: 8, scope: !6886)
!6886 = distinct !DILexicalBlock(scope: !6882, file: !3, line: 1755, column: 29)
!6887 = !DILocation(line: 1757, column: 8, scope: !6886)
!6888 = !DILocation(line: 1758, column: 2, scope: !6886)
!6889 = !DILocation(line: 1760, column: 34, scope: !6840)
!6890 = !DILocation(line: 1760, column: 10, scope: !6840)
!6891 = !DILocation(line: 1760, column: 8, scope: !6840)
!6892 = !DILocation(line: 1762, column: 6, scope: !6893)
!6893 = distinct !DILexicalBlock(scope: !6840, file: !3, line: 1762, column: 6)
!6894 = !DILocation(line: 1762, column: 19, scope: !6893)
!6895 = !DILocation(line: 1762, column: 28, scope: !6893)
!6896 = !DILocation(line: 1762, column: 31, scope: !6893)
!6897 = !DILocation(line: 1762, column: 37, scope: !6893)
!6898 = !DILocation(line: 1762, column: 6, scope: !6840)
!6899 = !DILocation(line: 1763, column: 9, scope: !6893)
!6900 = !DILocation(line: 1763, column: 3, scope: !6893)
!6901 = !DILocation(line: 1764, column: 11, scope: !6902)
!6902 = distinct !DILexicalBlock(scope: !6893, file: !3, line: 1764, column: 11)
!6903 = !DILocation(line: 1764, column: 17, scope: !6902)
!6904 = !DILocation(line: 1764, column: 11, scope: !6893)
!6905 = !DILocation(line: 1765, column: 9, scope: !6902)
!6906 = !DILocation(line: 1765, column: 3, scope: !6902)
!6907 = !DILocation(line: 1767, column: 6, scope: !6908)
!6908 = distinct !DILexicalBlock(scope: !6840, file: !3, line: 1767, column: 6)
!6909 = !DILocation(line: 1767, column: 14, scope: !6908)
!6910 = !DILocation(line: 1767, column: 12, scope: !6908)
!6911 = !DILocation(line: 1767, column: 6, scope: !6840)
!6912 = !DILocation(line: 1768, column: 3, scope: !6913)
!6913 = distinct !DILexicalBlock(scope: !6908, file: !3, line: 1767, column: 21)
!6914 = !DILocation(line: 1768, column: 3, scope: !6915)
!6915 = distinct !DILexicalBlock(scope: !6916, file: !3, line: 1768, column: 3)
!6916 = distinct !DILexicalBlock(scope: !6913, file: !3, line: 1768, column: 3)
!6917 = !DILocation(line: 1768, column: 3, scope: !6916)
!6918 = !DILocation(line: 1770, column: 10, scope: !6913)
!6919 = !DILocation(line: 1770, column: 18, scope: !6913)
!6920 = !DILocation(line: 1770, column: 16, scope: !6913)
!6921 = !DILocation(line: 1770, column: 28, scope: !6913)
!6922 = !DILocation(line: 1770, column: 36, scope: !6913)
!6923 = !DILocation(line: 1770, column: 34, scope: !6913)
!6924 = !DILocation(line: 1770, column: 3, scope: !6913)
!6925 = !DILocation(line: 1771, column: 2, scope: !6913)
!6926 = !DILocation(line: 1773, column: 7, scope: !6927)
!6927 = distinct !DILexicalBlock(scope: !6840, file: !3, line: 1773, column: 6)
!6928 = !DILocation(line: 1773, column: 12, scope: !6927)
!6929 = !DILocation(line: 1773, column: 20, scope: !6927)
!6930 = !DILocation(line: 1773, column: 42, scope: !6927)
!6931 = !DILocation(line: 1773, column: 45, scope: !6927)
!6932 = !DILocation(line: 1773, column: 50, scope: !6927)
!6933 = !DILocation(line: 1773, column: 6, scope: !6840)
!6934 = !DILocation(line: 1774, column: 3, scope: !6927)
!6935 = !DILocation(line: 1774, column: 8, scope: !6927)
!6936 = !DILocation(line: 1774, column: 28, scope: !6927)
!6937 = !DILocation(line: 1774, column: 33, scope: !6927)
!6938 = !DILocation(line: 1775, column: 6, scope: !6939)
!6939 = distinct !DILexicalBlock(scope: !6840, file: !3, line: 1775, column: 6)
!6940 = !DILocation(line: 1775, column: 11, scope: !6939)
!6941 = !DILocation(line: 1775, column: 19, scope: !6939)
!6942 = !DILocation(line: 1775, column: 6, scope: !6840)
!6943 = !DILocation(line: 1776, column: 29, scope: !6944)
!6944 = distinct !DILexicalBlock(scope: !6939, file: !3, line: 1775, column: 41)
!6945 = !DILocation(line: 1776, column: 34, scope: !6944)
!6946 = !DILocation(line: 1776, column: 40, scope: !6944)
!6947 = !DILocation(line: 1776, column: 9, scope: !6944)
!6948 = !DILocation(line: 1776, column: 7, scope: !6944)
!6949 = !DILocation(line: 1777, column: 7, scope: !6950)
!6950 = distinct !DILexicalBlock(scope: !6944, file: !3, line: 1777, column: 7)
!6951 = !DILocation(line: 1777, column: 7, scope: !6944)
!6952 = !DILocation(line: 1778, column: 4, scope: !6950)
!6953 = !DILocation(line: 1779, column: 2, scope: !6944)
!6954 = !DILocation(line: 1781, column: 6, scope: !6955)
!6955 = distinct !DILexicalBlock(scope: !6840, file: !3, line: 1781, column: 6)
!6956 = !DILocation(line: 1781, column: 11, scope: !6955)
!6957 = !DILocation(line: 1781, column: 19, scope: !6955)
!6958 = !DILocation(line: 1781, column: 41, scope: !6955)
!6959 = !DILocation(line: 1781, column: 44, scope: !6955)
!6960 = !DILocation(line: 1781, column: 52, scope: !6955)
!6961 = !DILocation(line: 1781, column: 6, scope: !6840)
!6962 = !DILocation(line: 1782, column: 10, scope: !6963)
!6963 = distinct !DILexicalBlock(scope: !6964, file: !3, line: 1782, column: 3)
!6964 = distinct !DILexicalBlock(scope: !6955, file: !3, line: 1781, column: 62)
!6965 = !DILocation(line: 1782, column: 8, scope: !6963)
!6966 = !DILocation(line: 1782, column: 15, scope: !6967)
!6967 = distinct !DILexicalBlock(scope: !6963, file: !3, line: 1782, column: 3)
!6968 = !DILocation(line: 1782, column: 19, scope: !6967)
!6969 = !DILocation(line: 1782, column: 27, scope: !6967)
!6970 = !DILocation(line: 1782, column: 17, scope: !6967)
!6971 = !DILocation(line: 1782, column: 3, scope: !6963)
!6972 = !DILocation(line: 1783, column: 20, scope: !6967)
!6973 = !DILocation(line: 1783, column: 25, scope: !6967)
!6974 = !DILocation(line: 1783, column: 33, scope: !6967)
!6975 = !DILocation(line: 1783, column: 39, scope: !6967)
!6976 = !DILocation(line: 1783, column: 43, scope: !6967)
!6977 = !DILocation(line: 1783, column: 50, scope: !6967)
!6978 = !DILocation(line: 1783, column: 4, scope: !6967)
!6979 = !DILocation(line: 1782, column: 38, scope: !6967)
!6980 = !DILocation(line: 1782, column: 3, scope: !6967)
!6981 = distinct !{!6981, !6971, !6982}
!6982 = !DILocation(line: 1783, column: 59, scope: !6963)
!6983 = !DILocation(line: 1784, column: 10, scope: !6964)
!6984 = !DILocation(line: 1784, column: 15, scope: !6964)
!6985 = !DILocation(line: 1784, column: 8, scope: !6964)
!6986 = !DILocation(line: 1785, column: 7, scope: !6987)
!6987 = distinct !DILexicalBlock(scope: !6964, file: !3, line: 1785, column: 7)
!6988 = !DILocation(line: 1785, column: 12, scope: !6987)
!6989 = !DILocation(line: 1785, column: 15, scope: !6987)
!6990 = !DILocation(line: 1785, column: 21, scope: !6987)
!6991 = !DILocation(line: 1785, column: 7, scope: !6964)
!6992 = !DILocation(line: 1786, column: 4, scope: !6987)
!6993 = !DILocation(line: 1786, column: 10, scope: !6987)
!6994 = !DILocation(line: 1786, column: 17, scope: !6987)
!6995 = !DILocation(line: 1786, column: 22, scope: !6987)
!6996 = !DILocation(line: 1787, column: 2, scope: !6964)
!6997 = !DILocation(line: 1789, column: 6, scope: !6998)
!6998 = distinct !DILexicalBlock(scope: !6840, file: !3, line: 1789, column: 6)
!6999 = !DILocation(line: 1789, column: 11, scope: !6998)
!7000 = !DILocation(line: 1789, column: 19, scope: !6998)
!7001 = !DILocation(line: 1789, column: 6, scope: !6840)
!7002 = !DILocation(line: 1790, column: 25, scope: !6998)
!7003 = !DILocation(line: 1790, column: 30, scope: !6998)
!7004 = !DILocation(line: 1790, column: 3, scope: !6998)
!7005 = !DILocation(line: 1789, column: 21, scope: !6998)
!7006 = !DILabel(scope: !6840, name: "out", file: !3, line: 1791)
!7007 = !DILocation(line: 1791, column: 1, scope: !6840)
!7008 = !DILocation(line: 1792, column: 9, scope: !6840)
!7009 = !DILocation(line: 1792, column: 2, scope: !6840)
!7010 = distinct !DISubprogram(name: "hid_get_report", scope: !3, file: !3, line: 1685, type: !7011, scopeLine: 1687, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !371)
!7011 = !DISubroutineType(types: !7012)
!7012 = !{!115, !4495, !7013}
!7013 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7014, size: 64)
!7014 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1369)
!7015 = !DILocalVariable(name: "report_enum", arg: 1, scope: !7010, file: !3, line: 1685, type: !4495)
!7016 = !DILocation(line: 1685, column: 66, scope: !7010)
!7017 = !DILocalVariable(name: "data", arg: 2, scope: !7010, file: !3, line: 1686, type: !7013)
!7018 = !DILocation(line: 1686, column: 13, scope: !7010)
!7019 = !DILocalVariable(name: "report", scope: !7010, file: !3, line: 1688, type: !115)
!7020 = !DILocation(line: 1688, column: 21, scope: !7010)
!7021 = !DILocalVariable(name: "n", scope: !7010, file: !3, line: 1689, type: !7)
!7022 = !DILocation(line: 1689, column: 15, scope: !7010)
!7023 = !DILocation(line: 1692, column: 6, scope: !7024)
!7024 = distinct !DILexicalBlock(scope: !7010, file: !3, line: 1692, column: 6)
!7025 = !DILocation(line: 1692, column: 19, scope: !7024)
!7026 = !DILocation(line: 1692, column: 6, scope: !7010)
!7027 = !DILocation(line: 1693, column: 8, scope: !7024)
!7028 = !DILocation(line: 1693, column: 7, scope: !7024)
!7029 = !DILocation(line: 1693, column: 5, scope: !7024)
!7030 = !DILocation(line: 1693, column: 3, scope: !7024)
!7031 = !DILocation(line: 1695, column: 11, scope: !7010)
!7032 = !DILocation(line: 1695, column: 24, scope: !7010)
!7033 = !DILocation(line: 1695, column: 39, scope: !7010)
!7034 = !DILocation(line: 1695, column: 9, scope: !7010)
!7035 = !DILocation(line: 1696, column: 6, scope: !7036)
!7036 = distinct !DILexicalBlock(scope: !7010, file: !3, line: 1696, column: 6)
!7037 = !DILocation(line: 1696, column: 13, scope: !7036)
!7038 = !DILocation(line: 1696, column: 6, scope: !7010)
!7039 = !DILocation(line: 1697, column: 3, scope: !7036)
!7040 = !DILocation(line: 1697, column: 3, scope: !7041)
!7041 = distinct !DILexicalBlock(scope: !7042, file: !3, line: 1697, column: 3)
!7042 = distinct !DILexicalBlock(scope: !7036, file: !3, line: 1697, column: 3)
!7043 = !DILocation(line: 1697, column: 3, scope: !7042)
!7044 = !DILocation(line: 1699, column: 9, scope: !7010)
!7045 = !DILocation(line: 1699, column: 2, scope: !7010)
!7046 = distinct !DISubprogram(name: "hidraw_report_event", scope: !4191, file: !4191, line: 46, type: !7047, scopeLine: 46, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !371)
!7047 = !DISubroutineType(types: !7048)
!7048 = !{!169, !3986, !4068, !169}
!7049 = !DILocalVariable(name: "hid", arg: 1, scope: !7046, file: !4191, line: 46, type: !3986)
!7050 = !DILocation(line: 46, column: 58, scope: !7046)
!7051 = !DILocalVariable(name: "data", arg: 2, scope: !7046, file: !4191, line: 46, type: !4068)
!7052 = !DILocation(line: 46, column: 67, scope: !7046)
!7053 = !DILocalVariable(name: "len", arg: 3, scope: !7046, file: !4191, line: 46, type: !169)
!7054 = !DILocation(line: 46, column: 77, scope: !7046)
!7055 = !DILocation(line: 46, column: 84, scope: !7046)
!7056 = distinct !DISubprogram(name: "hid_input_field", scope: !3, file: !3, line: 1530, type: !7057, scopeLine: 1532, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !371)
!7057 = !DISubroutineType(types: !7058)
!7058 = !{null, !3986, !130, !3990, !169}
!7059 = !DILocalVariable(name: "hid", arg: 1, scope: !7056, file: !3, line: 1530, type: !3986)
!7060 = !DILocation(line: 1530, column: 48, scope: !7056)
!7061 = !DILocalVariable(name: "field", arg: 2, scope: !7056, file: !3, line: 1530, type: !130)
!7062 = !DILocation(line: 1530, column: 71, scope: !7056)
!7063 = !DILocalVariable(name: "data", arg: 3, scope: !7056, file: !3, line: 1531, type: !3990)
!7064 = !DILocation(line: 1531, column: 14, scope: !7056)
!7065 = !DILocalVariable(name: "interrupt", arg: 4, scope: !7056, file: !3, line: 1531, type: !169)
!7066 = !DILocation(line: 1531, column: 24, scope: !7056)
!7067 = !DILocalVariable(name: "n", scope: !7056, file: !3, line: 1533, type: !7)
!7068 = !DILocation(line: 1533, column: 11, scope: !7056)
!7069 = !DILocalVariable(name: "count", scope: !7056, file: !3, line: 1534, type: !7)
!7070 = !DILocation(line: 1534, column: 11, scope: !7056)
!7071 = !DILocation(line: 1534, column: 19, scope: !7056)
!7072 = !DILocation(line: 1534, column: 26, scope: !7056)
!7073 = !DILocalVariable(name: "offset", scope: !7056, file: !3, line: 1535, type: !7)
!7074 = !DILocation(line: 1535, column: 11, scope: !7056)
!7075 = !DILocation(line: 1535, column: 20, scope: !7056)
!7076 = !DILocation(line: 1535, column: 27, scope: !7056)
!7077 = !DILocalVariable(name: "size", scope: !7056, file: !3, line: 1536, type: !7)
!7078 = !DILocation(line: 1536, column: 11, scope: !7056)
!7079 = !DILocation(line: 1536, column: 18, scope: !7056)
!7080 = !DILocation(line: 1536, column: 25, scope: !7056)
!7081 = !DILocalVariable(name: "min", scope: !7056, file: !3, line: 1537, type: !168)
!7082 = !DILocation(line: 1537, column: 8, scope: !7056)
!7083 = !DILocation(line: 1537, column: 14, scope: !7056)
!7084 = !DILocation(line: 1537, column: 21, scope: !7056)
!7085 = !DILocalVariable(name: "max", scope: !7056, file: !3, line: 1538, type: !168)
!7086 = !DILocation(line: 1538, column: 8, scope: !7056)
!7087 = !DILocation(line: 1538, column: 14, scope: !7056)
!7088 = !DILocation(line: 1538, column: 21, scope: !7056)
!7089 = !DILocalVariable(name: "value", scope: !7056, file: !3, line: 1539, type: !167)
!7090 = !DILocation(line: 1539, column: 9, scope: !7056)
!7091 = !DILocation(line: 1541, column: 24, scope: !7056)
!7092 = !DILocation(line: 1541, column: 10, scope: !7056)
!7093 = !DILocation(line: 1541, column: 8, scope: !7056)
!7094 = !DILocation(line: 1542, column: 7, scope: !7095)
!7095 = distinct !DILexicalBlock(scope: !7056, file: !3, line: 1542, column: 6)
!7096 = !DILocation(line: 1542, column: 6, scope: !7056)
!7097 = !DILocation(line: 1543, column: 3, scope: !7095)
!7098 = !DILocation(line: 1545, column: 9, scope: !7099)
!7099 = distinct !DILexicalBlock(scope: !7056, file: !3, line: 1545, column: 2)
!7100 = !DILocation(line: 1545, column: 7, scope: !7099)
!7101 = !DILocation(line: 1545, column: 14, scope: !7102)
!7102 = distinct !DILexicalBlock(scope: !7099, file: !3, line: 1545, column: 2)
!7103 = !DILocation(line: 1545, column: 18, scope: !7102)
!7104 = !DILocation(line: 1545, column: 16, scope: !7102)
!7105 = !DILocation(line: 1545, column: 2, scope: !7099)
!7106 = !DILocation(line: 1547, column: 14, scope: !7107)
!7107 = distinct !DILexicalBlock(scope: !7102, file: !3, line: 1545, column: 30)
!7108 = !DILocation(line: 1547, column: 18, scope: !7107)
!7109 = !DILocation(line: 1548, column: 29, scope: !7107)
!7110 = !DILocation(line: 1548, column: 34, scope: !7107)
!7111 = !DILocation(line: 1548, column: 40, scope: !7107)
!7112 = !DILocation(line: 1548, column: 49, scope: !7107)
!7113 = !DILocation(line: 1548, column: 53, scope: !7107)
!7114 = !DILocation(line: 1548, column: 51, scope: !7107)
!7115 = !DILocation(line: 1548, column: 47, scope: !7107)
!7116 = !DILocation(line: 1549, column: 11, scope: !7107)
!7117 = !DILocation(line: 1548, column: 11, scope: !7107)
!7118 = !DILocation(line: 1549, column: 18, scope: !7107)
!7119 = !DILocation(line: 1548, column: 4, scope: !7107)
!7120 = !DILocation(line: 1550, column: 22, scope: !7107)
!7121 = !DILocation(line: 1550, column: 27, scope: !7107)
!7122 = !DILocation(line: 1550, column: 33, scope: !7107)
!7123 = !DILocation(line: 1550, column: 42, scope: !7107)
!7124 = !DILocation(line: 1550, column: 46, scope: !7107)
!7125 = !DILocation(line: 1550, column: 44, scope: !7107)
!7126 = !DILocation(line: 1550, column: 40, scope: !7107)
!7127 = !DILocation(line: 1550, column: 52, scope: !7107)
!7128 = !DILocation(line: 1550, column: 4, scope: !7107)
!7129 = !DILocation(line: 1547, column: 3, scope: !7107)
!7130 = !DILocation(line: 1547, column: 9, scope: !7107)
!7131 = !DILocation(line: 1547, column: 12, scope: !7107)
!7132 = !DILocation(line: 1553, column: 9, scope: !7133)
!7133 = distinct !DILexicalBlock(scope: !7107, file: !3, line: 1553, column: 7)
!7134 = !DILocation(line: 1553, column: 16, scope: !7133)
!7135 = !DILocation(line: 1553, column: 22, scope: !7133)
!7136 = !DILocation(line: 1553, column: 48, scope: !7133)
!7137 = !DILocation(line: 1554, column: 7, scope: !7133)
!7138 = !DILocation(line: 1554, column: 13, scope: !7133)
!7139 = !DILocation(line: 1554, column: 19, scope: !7133)
!7140 = !DILocation(line: 1554, column: 16, scope: !7133)
!7141 = !DILocation(line: 1554, column: 23, scope: !7133)
!7142 = !DILocation(line: 1554, column: 26, scope: !7133)
!7143 = !DILocation(line: 1554, column: 32, scope: !7133)
!7144 = !DILocation(line: 1554, column: 38, scope: !7133)
!7145 = !DILocation(line: 1554, column: 35, scope: !7133)
!7146 = !DILocation(line: 1554, column: 42, scope: !7133)
!7147 = !DILocation(line: 1555, column: 7, scope: !7133)
!7148 = !DILocation(line: 1555, column: 13, scope: !7133)
!7149 = !DILocation(line: 1555, column: 18, scope: !7133)
!7150 = !DILocation(line: 1555, column: 16, scope: !7133)
!7151 = !DILocation(line: 1555, column: 24, scope: !7133)
!7152 = !DILocation(line: 1555, column: 31, scope: !7133)
!7153 = !DILocation(line: 1555, column: 22, scope: !7133)
!7154 = !DILocation(line: 1555, column: 40, scope: !7133)
!7155 = !DILocation(line: 1556, column: 7, scope: !7133)
!7156 = !DILocation(line: 1556, column: 14, scope: !7133)
!7157 = !DILocation(line: 1556, column: 20, scope: !7133)
!7158 = !DILocation(line: 1556, column: 26, scope: !7133)
!7159 = !DILocation(line: 1556, column: 31, scope: !7133)
!7160 = !DILocation(line: 1556, column: 29, scope: !7133)
!7161 = !DILocation(line: 1556, column: 36, scope: !7133)
!7162 = !DILocation(line: 1556, column: 40, scope: !7133)
!7163 = !DILocation(line: 1553, column: 7, scope: !7107)
!7164 = !DILocation(line: 1557, column: 4, scope: !7133)
!7165 = !DILocation(line: 1558, column: 2, scope: !7107)
!7166 = !DILocation(line: 1545, column: 26, scope: !7102)
!7167 = !DILocation(line: 1545, column: 2, scope: !7102)
!7168 = distinct !{!7168, !7105, !7169}
!7169 = !DILocation(line: 1558, column: 2, scope: !7099)
!7170 = !DILocation(line: 1560, column: 9, scope: !7171)
!7171 = distinct !DILexicalBlock(scope: !7056, file: !3, line: 1560, column: 2)
!7172 = !DILocation(line: 1560, column: 7, scope: !7171)
!7173 = !DILocation(line: 1560, column: 14, scope: !7174)
!7174 = distinct !DILexicalBlock(scope: !7171, file: !3, line: 1560, column: 2)
!7175 = !DILocation(line: 1560, column: 18, scope: !7174)
!7176 = !DILocation(line: 1560, column: 16, scope: !7174)
!7177 = !DILocation(line: 1560, column: 2, scope: !7171)
!7178 = !DILocation(line: 1562, column: 32, scope: !7179)
!7179 = distinct !DILexicalBlock(scope: !7180, file: !3, line: 1562, column: 7)
!7180 = distinct !DILexicalBlock(scope: !7174, file: !3, line: 1560, column: 30)
!7181 = !DILocation(line: 1562, column: 39, scope: !7179)
!7182 = !DILocation(line: 1562, column: 30, scope: !7179)
!7183 = !DILocation(line: 1562, column: 7, scope: !7180)
!7184 = !DILocation(line: 1563, column: 22, scope: !7185)
!7185 = distinct !DILexicalBlock(scope: !7179, file: !3, line: 1562, column: 46)
!7186 = !DILocation(line: 1563, column: 27, scope: !7185)
!7187 = !DILocation(line: 1563, column: 35, scope: !7185)
!7188 = !DILocation(line: 1563, column: 42, scope: !7185)
!7189 = !DILocation(line: 1563, column: 48, scope: !7185)
!7190 = !DILocation(line: 1563, column: 52, scope: !7185)
!7191 = !DILocation(line: 1563, column: 58, scope: !7185)
!7192 = !DILocation(line: 1563, column: 62, scope: !7185)
!7193 = !DILocation(line: 1563, column: 4, scope: !7185)
!7194 = !DILocation(line: 1564, column: 4, scope: !7185)
!7195 = !DILocation(line: 1567, column: 7, scope: !7196)
!7196 = distinct !DILexicalBlock(scope: !7180, file: !3, line: 1567, column: 7)
!7197 = !DILocation(line: 1567, column: 14, scope: !7196)
!7198 = !DILocation(line: 1567, column: 20, scope: !7196)
!7199 = !DILocation(line: 1567, column: 26, scope: !7196)
!7200 = !DILocation(line: 1567, column: 23, scope: !7196)
!7201 = !DILocation(line: 1567, column: 30, scope: !7196)
!7202 = !DILocation(line: 1567, column: 33, scope: !7196)
!7203 = !DILocation(line: 1567, column: 40, scope: !7196)
!7204 = !DILocation(line: 1567, column: 46, scope: !7196)
!7205 = !DILocation(line: 1567, column: 52, scope: !7196)
!7206 = !DILocation(line: 1567, column: 49, scope: !7196)
!7207 = !DILocation(line: 1568, column: 4, scope: !7196)
!7208 = !DILocation(line: 1568, column: 7, scope: !7196)
!7209 = !DILocation(line: 1568, column: 14, scope: !7196)
!7210 = !DILocation(line: 1568, column: 20, scope: !7196)
!7211 = !DILocation(line: 1568, column: 25, scope: !7196)
!7212 = !DILocation(line: 1568, column: 23, scope: !7196)
!7213 = !DILocation(line: 1568, column: 31, scope: !7196)
!7214 = !DILocation(line: 1568, column: 38, scope: !7196)
!7215 = !DILocation(line: 1568, column: 29, scope: !7196)
!7216 = !DILocation(line: 1569, column: 4, scope: !7196)
!7217 = !DILocation(line: 1569, column: 7, scope: !7196)
!7218 = !DILocation(line: 1569, column: 14, scope: !7196)
!7219 = !DILocation(line: 1569, column: 20, scope: !7196)
!7220 = !DILocation(line: 1569, column: 27, scope: !7196)
!7221 = !DILocation(line: 1569, column: 33, scope: !7196)
!7222 = !DILocation(line: 1569, column: 38, scope: !7196)
!7223 = !DILocation(line: 1569, column: 36, scope: !7196)
!7224 = !DILocation(line: 1569, column: 43, scope: !7196)
!7225 = !DILocation(line: 1570, column: 4, scope: !7196)
!7226 = !DILocation(line: 1570, column: 14, scope: !7196)
!7227 = !DILocation(line: 1570, column: 21, scope: !7196)
!7228 = !DILocation(line: 1570, column: 28, scope: !7196)
!7229 = !DILocation(line: 1570, column: 34, scope: !7196)
!7230 = !DILocation(line: 1570, column: 38, scope: !7196)
!7231 = !DILocation(line: 1570, column: 7, scope: !7196)
!7232 = !DILocation(line: 1567, column: 7, scope: !7180)
!7233 = !DILocation(line: 1571, column: 23, scope: !7196)
!7234 = !DILocation(line: 1571, column: 28, scope: !7196)
!7235 = !DILocation(line: 1571, column: 36, scope: !7196)
!7236 = !DILocation(line: 1571, column: 43, scope: !7196)
!7237 = !DILocation(line: 1571, column: 49, scope: !7196)
!7238 = !DILocation(line: 1571, column: 56, scope: !7196)
!7239 = !DILocation(line: 1571, column: 62, scope: !7196)
!7240 = !DILocation(line: 1571, column: 67, scope: !7196)
!7241 = !DILocation(line: 1571, column: 65, scope: !7196)
!7242 = !DILocation(line: 1571, column: 76, scope: !7196)
!7243 = !DILocation(line: 1571, column: 5, scope: !7196)
!7244 = !DILocation(line: 1573, column: 7, scope: !7245)
!7245 = distinct !DILexicalBlock(scope: !7180, file: !3, line: 1573, column: 7)
!7246 = !DILocation(line: 1573, column: 13, scope: !7245)
!7247 = !DILocation(line: 1573, column: 19, scope: !7245)
!7248 = !DILocation(line: 1573, column: 16, scope: !7245)
!7249 = !DILocation(line: 1573, column: 23, scope: !7245)
!7250 = !DILocation(line: 1573, column: 26, scope: !7245)
!7251 = !DILocation(line: 1573, column: 32, scope: !7245)
!7252 = !DILocation(line: 1573, column: 38, scope: !7245)
!7253 = !DILocation(line: 1573, column: 35, scope: !7245)
!7254 = !DILocation(line: 1574, column: 4, scope: !7245)
!7255 = !DILocation(line: 1574, column: 7, scope: !7245)
!7256 = !DILocation(line: 1574, column: 13, scope: !7245)
!7257 = !DILocation(line: 1574, column: 18, scope: !7245)
!7258 = !DILocation(line: 1574, column: 16, scope: !7245)
!7259 = !DILocation(line: 1574, column: 24, scope: !7245)
!7260 = !DILocation(line: 1574, column: 31, scope: !7245)
!7261 = !DILocation(line: 1574, column: 22, scope: !7245)
!7262 = !DILocation(line: 1575, column: 4, scope: !7245)
!7263 = !DILocation(line: 1575, column: 7, scope: !7245)
!7264 = !DILocation(line: 1575, column: 14, scope: !7245)
!7265 = !DILocation(line: 1575, column: 20, scope: !7245)
!7266 = !DILocation(line: 1575, column: 26, scope: !7245)
!7267 = !DILocation(line: 1575, column: 31, scope: !7245)
!7268 = !DILocation(line: 1575, column: 29, scope: !7245)
!7269 = !DILocation(line: 1575, column: 36, scope: !7245)
!7270 = !DILocation(line: 1576, column: 4, scope: !7245)
!7271 = !DILocation(line: 1576, column: 14, scope: !7245)
!7272 = !DILocation(line: 1576, column: 21, scope: !7245)
!7273 = !DILocation(line: 1576, column: 28, scope: !7245)
!7274 = !DILocation(line: 1576, column: 34, scope: !7245)
!7275 = !DILocation(line: 1576, column: 38, scope: !7245)
!7276 = !DILocation(line: 1576, column: 7, scope: !7245)
!7277 = !DILocation(line: 1573, column: 7, scope: !7180)
!7278 = !DILocation(line: 1577, column: 23, scope: !7245)
!7279 = !DILocation(line: 1577, column: 28, scope: !7245)
!7280 = !DILocation(line: 1577, column: 36, scope: !7245)
!7281 = !DILocation(line: 1577, column: 43, scope: !7245)
!7282 = !DILocation(line: 1577, column: 49, scope: !7245)
!7283 = !DILocation(line: 1577, column: 55, scope: !7245)
!7284 = !DILocation(line: 1577, column: 60, scope: !7245)
!7285 = !DILocation(line: 1577, column: 58, scope: !7245)
!7286 = !DILocation(line: 1577, column: 69, scope: !7245)
!7287 = !DILocation(line: 1577, column: 5, scope: !7245)
!7288 = !DILocation(line: 1578, column: 2, scope: !7180)
!7289 = !DILocation(line: 1560, column: 26, scope: !7174)
!7290 = !DILocation(line: 1560, column: 2, scope: !7174)
!7291 = distinct !{!7291, !7177, !7292}
!7292 = !DILocation(line: 1578, column: 2, scope: !7171)
!7293 = !DILocation(line: 1580, column: 9, scope: !7056)
!7294 = !DILocation(line: 1580, column: 16, scope: !7056)
!7295 = !DILocation(line: 1580, column: 2, scope: !7056)
!7296 = !DILocation(line: 1580, column: 23, scope: !7056)
!7297 = !DILocation(line: 1580, column: 30, scope: !7056)
!7298 = !DILocation(line: 1580, column: 36, scope: !7056)
!7299 = !DILabel(scope: !7056, name: "exit", file: !3, line: 1581)
!7300 = !DILocation(line: 1581, column: 1, scope: !7056)
!7301 = !DILocation(line: 1582, column: 8, scope: !7056)
!7302 = !DILocation(line: 1582, column: 2, scope: !7056)
!7303 = !DILocation(line: 1583, column: 1, scope: !7056)
!7304 = distinct !DISubprogram(name: "list_empty", scope: !4835, file: !4835, line: 280, type: !7305, scopeLine: 281, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !371)
!7305 = !DISubroutineType(types: !7306)
!7306 = !{!169, !7307}
!7307 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7308, size: 64)
!7308 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !119)
!7309 = !DILocalVariable(name: "head", arg: 1, scope: !7304, file: !4835, line: 280, type: !7307)
!7310 = !DILocation(line: 280, column: 54, scope: !7304)
!7311 = !DILocation(line: 282, column: 9, scope: !7312)
!7312 = distinct !DILexicalBlock(scope: !7304, file: !4835, line: 282, column: 9)
!7313 = !DILocation(line: 282, column: 9, scope: !7314)
!7314 = distinct !DILexicalBlock(scope: !7312, file: !4835, line: 282, column: 9)
!7315 = !DILocation(line: 282, column: 34, scope: !7304)
!7316 = !DILocation(line: 282, column: 31, scope: !7304)
!7317 = !DILocation(line: 282, column: 2, scope: !7304)
!7318 = distinct !DISubprogram(name: "hid_match_report", scope: !3, file: !3, line: 1458, type: !7319, scopeLine: 1459, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !371)
!7319 = !DISubroutineType(types: !7320)
!7320 = !{!169, !3986, !115}
!7321 = !DILocalVariable(name: "hid", arg: 1, scope: !7318, file: !3, line: 1458, type: !3986)
!7322 = !DILocation(line: 1458, column: 48, scope: !7318)
!7323 = !DILocalVariable(name: "report", arg: 2, scope: !7318, file: !3, line: 1458, type: !115)
!7324 = !DILocation(line: 1458, column: 72, scope: !7318)
!7325 = !DILocalVariable(name: "id", scope: !7318, file: !3, line: 1460, type: !4059)
!7326 = !DILocation(line: 1460, column: 30, scope: !7318)
!7327 = !DILocation(line: 1460, column: 35, scope: !7318)
!7328 = !DILocation(line: 1460, column: 40, scope: !7318)
!7329 = !DILocation(line: 1460, column: 48, scope: !7318)
!7330 = !DILocation(line: 1462, column: 7, scope: !7331)
!7331 = distinct !DILexicalBlock(scope: !7318, file: !3, line: 1462, column: 6)
!7332 = !DILocation(line: 1462, column: 6, scope: !7318)
!7333 = !DILocation(line: 1463, column: 3, scope: !7331)
!7334 = !DILocation(line: 1465, column: 2, scope: !7318)
!7335 = !DILocation(line: 1465, column: 9, scope: !7336)
!7336 = distinct !DILexicalBlock(scope: !7337, file: !3, line: 1465, column: 2)
!7337 = distinct !DILexicalBlock(scope: !7318, file: !3, line: 1465, column: 2)
!7338 = !DILocation(line: 1465, column: 13, scope: !7336)
!7339 = !DILocation(line: 1465, column: 25, scope: !7336)
!7340 = !DILocation(line: 1465, column: 2, scope: !7337)
!7341 = !DILocation(line: 1466, column: 7, scope: !7342)
!7342 = distinct !DILexicalBlock(scope: !7336, file: !3, line: 1466, column: 7)
!7343 = !DILocation(line: 1466, column: 11, scope: !7342)
!7344 = !DILocation(line: 1466, column: 23, scope: !7342)
!7345 = !DILocation(line: 1466, column: 37, scope: !7342)
!7346 = !DILocation(line: 1467, column: 5, scope: !7342)
!7347 = !DILocation(line: 1467, column: 9, scope: !7342)
!7348 = !DILocation(line: 1467, column: 24, scope: !7342)
!7349 = !DILocation(line: 1467, column: 32, scope: !7342)
!7350 = !DILocation(line: 1467, column: 21, scope: !7342)
!7351 = !DILocation(line: 1466, column: 7, scope: !7336)
!7352 = !DILocation(line: 1468, column: 4, scope: !7342)
!7353 = !DILocation(line: 1465, column: 46, scope: !7336)
!7354 = !DILocation(line: 1465, column: 2, scope: !7336)
!7355 = distinct !{!7355, !7340, !7356}
!7356 = !DILocation(line: 1468, column: 11, scope: !7337)
!7357 = !DILocation(line: 1469, column: 2, scope: !7318)
!7358 = !DILocation(line: 1470, column: 1, scope: !7318)
!7359 = distinct !DISubprogram(name: "hid_match_one_id", scope: !3, file: !3, line: 1858, type: !7360, scopeLine: 1860, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !371)
!7360 = !DISubroutineType(types: !7361)
!7361 = !{!514, !4359, !4035}
!7362 = !DILocalVariable(name: "hdev", arg: 1, scope: !7359, file: !3, line: 1858, type: !4359)
!7363 = !DILocation(line: 1858, column: 48, scope: !7359)
!7364 = !DILocalVariable(name: "id", arg: 2, scope: !7359, file: !3, line: 1859, type: !4035)
!7365 = !DILocation(line: 1859, column: 37, scope: !7359)
!7366 = !DILocation(line: 1861, column: 10, scope: !7359)
!7367 = !DILocation(line: 1861, column: 14, scope: !7359)
!7368 = !DILocation(line: 1861, column: 18, scope: !7359)
!7369 = !DILocation(line: 1861, column: 33, scope: !7359)
!7370 = !DILocation(line: 1861, column: 36, scope: !7359)
!7371 = !DILocation(line: 1861, column: 40, scope: !7359)
!7372 = !DILocation(line: 1861, column: 47, scope: !7359)
!7373 = !DILocation(line: 1861, column: 53, scope: !7359)
!7374 = !DILocation(line: 1861, column: 44, scope: !7359)
!7375 = !DILocation(line: 1861, column: 58, scope: !7359)
!7376 = !DILocation(line: 1862, column: 4, scope: !7359)
!7377 = !DILocation(line: 1862, column: 8, scope: !7359)
!7378 = !DILocation(line: 1862, column: 14, scope: !7359)
!7379 = !DILocation(line: 1862, column: 31, scope: !7359)
!7380 = !DILocation(line: 1862, column: 34, scope: !7359)
!7381 = !DILocation(line: 1862, column: 38, scope: !7359)
!7382 = !DILocation(line: 1862, column: 47, scope: !7359)
!7383 = !DILocation(line: 1862, column: 53, scope: !7359)
!7384 = !DILocation(line: 1862, column: 44, scope: !7359)
!7385 = !DILocation(line: 1862, column: 60, scope: !7359)
!7386 = !DILocation(line: 1863, column: 4, scope: !7359)
!7387 = !DILocation(line: 1863, column: 8, scope: !7359)
!7388 = !DILocation(line: 1863, column: 15, scope: !7359)
!7389 = !DILocation(line: 1863, column: 29, scope: !7359)
!7390 = !DILocation(line: 1863, column: 32, scope: !7359)
!7391 = !DILocation(line: 1863, column: 36, scope: !7359)
!7392 = !DILocation(line: 1863, column: 46, scope: !7359)
!7393 = !DILocation(line: 1863, column: 52, scope: !7359)
!7394 = !DILocation(line: 1863, column: 43, scope: !7359)
!7395 = !DILocation(line: 1863, column: 60, scope: !7359)
!7396 = !DILocation(line: 1864, column: 4, scope: !7359)
!7397 = !DILocation(line: 1864, column: 8, scope: !7359)
!7398 = !DILocation(line: 1864, column: 16, scope: !7359)
!7399 = !DILocation(line: 1864, column: 30, scope: !7359)
!7400 = !DILocation(line: 1864, column: 33, scope: !7359)
!7401 = !DILocation(line: 1864, column: 37, scope: !7359)
!7402 = !DILocation(line: 1864, column: 48, scope: !7359)
!7403 = !DILocation(line: 1864, column: 54, scope: !7359)
!7404 = !DILocation(line: 1864, column: 45, scope: !7359)
!7405 = !DILocation(line: 0, scope: !7359)
!7406 = !DILocation(line: 1861, column: 2, scope: !7359)
!7407 = distinct !DISubprogram(name: "hid_match_id", scope: !3, file: !3, line: 1867, type: !7408, scopeLine: 1869, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !371)
!7408 = !DISubroutineType(types: !7409)
!7409 = !{!4035, !4359, !4035}
!7410 = !DILocalVariable(name: "hdev", arg: 1, scope: !7407, file: !3, line: 1867, type: !4359)
!7411 = !DILocation(line: 1867, column: 67, scope: !7407)
!7412 = !DILocalVariable(name: "id", arg: 2, scope: !7407, file: !3, line: 1868, type: !4035)
!7413 = !DILocation(line: 1868, column: 31, scope: !7407)
!7414 = !DILocation(line: 1870, column: 2, scope: !7407)
!7415 = !DILocation(line: 1870, column: 9, scope: !7416)
!7416 = distinct !DILexicalBlock(scope: !7417, file: !3, line: 1870, column: 2)
!7417 = distinct !DILexicalBlock(scope: !7407, file: !3, line: 1870, column: 2)
!7418 = !DILocation(line: 1870, column: 13, scope: !7416)
!7419 = !DILocation(line: 1870, column: 2, scope: !7417)
!7420 = !DILocation(line: 1871, column: 24, scope: !7421)
!7421 = distinct !DILexicalBlock(scope: !7416, file: !3, line: 1871, column: 7)
!7422 = !DILocation(line: 1871, column: 30, scope: !7421)
!7423 = !DILocation(line: 1871, column: 7, scope: !7421)
!7424 = !DILocation(line: 1871, column: 7, scope: !7416)
!7425 = !DILocation(line: 1872, column: 11, scope: !7421)
!7426 = !DILocation(line: 1872, column: 4, scope: !7421)
!7427 = !DILocation(line: 1871, column: 32, scope: !7421)
!7428 = !DILocation(line: 1870, column: 20, scope: !7416)
!7429 = !DILocation(line: 1870, column: 2, scope: !7416)
!7430 = distinct !{!7430, !7419, !7431}
!7431 = !DILocation(line: 1872, column: 11, scope: !7417)
!7432 = !DILocation(line: 1874, column: 2, scope: !7407)
!7433 = !DILocation(line: 1875, column: 1, scope: !7407)
!7434 = !DILocalVariable(name: "hdev", arg: 1, scope: !4363, file: !3, line: 1928, type: !3986)
!7435 = !DILocation(line: 1928, column: 36, scope: !4363)
!7436 = !DILocalVariable(name: "connect_mask", arg: 2, scope: !4363, file: !3, line: 1928, type: !7)
!7437 = !DILocation(line: 1928, column: 55, scope: !4363)
!7438 = !DILocalVariable(name: "type", scope: !4363, file: !3, line: 1934, type: !190)
!7439 = !DILocation(line: 1934, column: 14, scope: !4363)
!7440 = !DILocalVariable(name: "bus", scope: !4363, file: !3, line: 1934, type: !190)
!7441 = !DILocation(line: 1934, column: 21, scope: !4363)
!7442 = !DILocalVariable(name: "buf", scope: !4363, file: !3, line: 1935, type: !4155)
!7443 = !DILocation(line: 1935, column: 7, scope: !4363)
!7444 = !DILocalVariable(name: "i", scope: !4363, file: !3, line: 1936, type: !7)
!7445 = !DILocation(line: 1936, column: 15, scope: !4363)
!7446 = !DILocalVariable(name: "len", scope: !4363, file: !3, line: 1937, type: !169)
!7447 = !DILocation(line: 1937, column: 6, scope: !4363)
!7448 = !DILocalVariable(name: "ret", scope: !4363, file: !3, line: 1938, type: !169)
!7449 = !DILocation(line: 1938, column: 6, scope: !4363)
!7450 = !DILocation(line: 1940, column: 6, scope: !7451)
!7451 = distinct !DILexicalBlock(scope: !4363, file: !3, line: 1940, column: 6)
!7452 = !DILocation(line: 1940, column: 12, scope: !7451)
!7453 = !DILocation(line: 1940, column: 19, scope: !7451)
!7454 = !DILocation(line: 1940, column: 6, scope: !4363)
!7455 = !DILocation(line: 1941, column: 16, scope: !7451)
!7456 = !DILocation(line: 1941, column: 3, scope: !7451)
!7457 = !DILocation(line: 1942, column: 6, scope: !7458)
!7458 = distinct !DILexicalBlock(scope: !4363, file: !3, line: 1942, column: 6)
!7459 = !DILocation(line: 1942, column: 12, scope: !7458)
!7460 = !DILocation(line: 1942, column: 19, scope: !7458)
!7461 = !DILocation(line: 1942, column: 6, scope: !4363)
!7462 = !DILocation(line: 1943, column: 16, scope: !7458)
!7463 = !DILocation(line: 1943, column: 3, scope: !7458)
!7464 = !DILocation(line: 1944, column: 6, scope: !7465)
!7465 = distinct !DILexicalBlock(scope: !4363, file: !3, line: 1944, column: 6)
!7466 = !DILocation(line: 1944, column: 12, scope: !7465)
!7467 = !DILocation(line: 1944, column: 16, scope: !7465)
!7468 = !DILocation(line: 1944, column: 6, scope: !4363)
!7469 = !DILocation(line: 1945, column: 16, scope: !7465)
!7470 = !DILocation(line: 1945, column: 3, scope: !7465)
!7471 = !DILocation(line: 1946, column: 17, scope: !7472)
!7472 = distinct !DILexicalBlock(scope: !4363, file: !3, line: 1946, column: 6)
!7473 = !DILocation(line: 1946, column: 6, scope: !7472)
!7474 = !DILocation(line: 1946, column: 6, scope: !4363)
!7475 = !DILocation(line: 1947, column: 16, scope: !7472)
!7476 = !DILocation(line: 1947, column: 3, scope: !7472)
!7477 = !DILocation(line: 1949, column: 7, scope: !7478)
!7478 = distinct !DILexicalBlock(scope: !4363, file: !3, line: 1949, column: 6)
!7479 = !DILocation(line: 1949, column: 20, scope: !7478)
!7480 = !DILocation(line: 1949, column: 44, scope: !7478)
!7481 = !DILocation(line: 1949, column: 65, scope: !7478)
!7482 = !DILocation(line: 1950, column: 5, scope: !7478)
!7483 = !DILocation(line: 1950, column: 18, scope: !7478)
!7484 = !DILocation(line: 1949, column: 48, scope: !7478)
!7485 = !DILocation(line: 1949, column: 6, scope: !4363)
!7486 = !DILocation(line: 1951, column: 3, scope: !7478)
!7487 = !DILocation(line: 1951, column: 9, scope: !7478)
!7488 = !DILocation(line: 1951, column: 17, scope: !7478)
!7489 = !DILocation(line: 1953, column: 7, scope: !7490)
!7490 = distinct !DILexicalBlock(scope: !4363, file: !3, line: 1953, column: 6)
!7491 = !DILocation(line: 1953, column: 20, scope: !7490)
!7492 = !DILocation(line: 1953, column: 42, scope: !7490)
!7493 = !DILocation(line: 1953, column: 45, scope: !7490)
!7494 = !DILocation(line: 1953, column: 51, scope: !7490)
!7495 = !DILocation(line: 1953, column: 66, scope: !7490)
!7496 = !DILocation(line: 1954, column: 5, scope: !7490)
!7497 = !DILocation(line: 1954, column: 11, scope: !7490)
!7498 = !DILocation(line: 1954, column: 26, scope: !7490)
!7499 = !DILocation(line: 1955, column: 5, scope: !7490)
!7500 = !DILocation(line: 1955, column: 18, scope: !7490)
!7501 = !DILocation(line: 1953, column: 6, scope: !4363)
!7502 = !DILocation(line: 1956, column: 3, scope: !7490)
!7503 = !DILocation(line: 1956, column: 9, scope: !7490)
!7504 = !DILocation(line: 1956, column: 17, scope: !7490)
!7505 = !DILocation(line: 1957, column: 7, scope: !7506)
!7506 = distinct !DILexicalBlock(scope: !4363, file: !3, line: 1957, column: 6)
!7507 = !DILocation(line: 1957, column: 20, scope: !7506)
!7508 = !DILocation(line: 1957, column: 42, scope: !7506)
!7509 = !DILocation(line: 1957, column: 61, scope: !7506)
!7510 = !DILocation(line: 1957, column: 46, scope: !7506)
!7511 = !DILocation(line: 1957, column: 6, scope: !4363)
!7512 = !DILocation(line: 1958, column: 3, scope: !7506)
!7513 = !DILocation(line: 1958, column: 9, scope: !7506)
!7514 = !DILocation(line: 1958, column: 17, scope: !7506)
!7515 = !DILocation(line: 1960, column: 6, scope: !7516)
!7516 = distinct !DILexicalBlock(scope: !4363, file: !3, line: 1960, column: 6)
!7517 = !DILocation(line: 1960, column: 19, scope: !7516)
!7518 = !DILocation(line: 1960, column: 6, scope: !4363)
!7519 = !DILocation(line: 1961, column: 3, scope: !7516)
!7520 = !DILocation(line: 1961, column: 9, scope: !7516)
!7521 = !DILocation(line: 1961, column: 17, scope: !7516)
!7522 = !DILocation(line: 1965, column: 7, scope: !7523)
!7523 = distinct !DILexicalBlock(scope: !4363, file: !3, line: 1965, column: 6)
!7524 = !DILocation(line: 1965, column: 13, scope: !7523)
!7525 = !DILocation(line: 1965, column: 21, scope: !7523)
!7526 = !DILocation(line: 1965, column: 25, scope: !7523)
!7527 = !DILocation(line: 1965, column: 31, scope: !7523)
!7528 = !DILocation(line: 1965, column: 39, scope: !7523)
!7529 = !DILocation(line: 1965, column: 6, scope: !4363)
!7530 = !DILocation(line: 1966, column: 3, scope: !7531)
!7531 = distinct !DILexicalBlock(scope: !7523, file: !3, line: 1965, column: 50)
!7532 = !DILocation(line: 1967, column: 3, scope: !7531)
!7533 = !DILocation(line: 1970, column: 7, scope: !7534)
!7534 = distinct !DILexicalBlock(scope: !4363, file: !3, line: 1970, column: 6)
!7535 = !DILocation(line: 1970, column: 13, scope: !7534)
!7536 = !DILocation(line: 1970, column: 21, scope: !7534)
!7537 = !DILocation(line: 1970, column: 42, scope: !7534)
!7538 = !DILocation(line: 1971, column: 5, scope: !7534)
!7539 = !DILocation(line: 1971, column: 18, scope: !7534)
!7540 = !DILocation(line: 1971, column: 36, scope: !7534)
!7541 = !DILocation(line: 1971, column: 39, scope: !7534)
!7542 = !DILocation(line: 1971, column: 45, scope: !7534)
!7543 = !DILocation(line: 1970, column: 6, scope: !4363)
!7544 = !DILocation(line: 1972, column: 3, scope: !7534)
!7545 = !DILocation(line: 1972, column: 9, scope: !7534)
!7546 = !DILocation(line: 1972, column: 17, scope: !7534)
!7547 = !DILocation(line: 1974, column: 6, scope: !4363)
!7548 = !DILocation(line: 1975, column: 6, scope: !7549)
!7549 = distinct !DILexicalBlock(scope: !4363, file: !3, line: 1975, column: 6)
!7550 = !DILocation(line: 1975, column: 12, scope: !7549)
!7551 = !DILocation(line: 1975, column: 20, scope: !7549)
!7552 = !DILocation(line: 1975, column: 6, scope: !4363)
!7553 = !DILocation(line: 1976, column: 18, scope: !7549)
!7554 = !DILocation(line: 1976, column: 24, scope: !7549)
!7555 = !DILocation(line: 1976, column: 22, scope: !7549)
!7556 = !DILocation(line: 1976, column: 10, scope: !7549)
!7557 = !DILocation(line: 1976, column: 7, scope: !7549)
!7558 = !DILocation(line: 1976, column: 3, scope: !7549)
!7559 = !DILocation(line: 1977, column: 6, scope: !7560)
!7560 = distinct !DILexicalBlock(scope: !4363, file: !3, line: 1977, column: 6)
!7561 = !DILocation(line: 1977, column: 12, scope: !7560)
!7562 = !DILocation(line: 1977, column: 20, scope: !7560)
!7563 = !DILocation(line: 1977, column: 6, scope: !4363)
!7564 = !DILocation(line: 1978, column: 18, scope: !7560)
!7565 = !DILocation(line: 1978, column: 24, scope: !7560)
!7566 = !DILocation(line: 1978, column: 22, scope: !7560)
!7567 = !DILocation(line: 1978, column: 43, scope: !7560)
!7568 = !DILocation(line: 1979, column: 23, scope: !7560)
!7569 = !DILocation(line: 1979, column: 29, scope: !7560)
!7570 = !DILocation(line: 1979, column: 6, scope: !7560)
!7571 = !DILocation(line: 1979, column: 38, scope: !7560)
!7572 = !DILocation(line: 1978, column: 10, scope: !7560)
!7573 = !DILocation(line: 1978, column: 7, scope: !7560)
!7574 = !DILocation(line: 1978, column: 3, scope: !7560)
!7575 = !DILocation(line: 1980, column: 6, scope: !7576)
!7576 = distinct !DILexicalBlock(scope: !4363, file: !3, line: 1980, column: 6)
!7577 = !DILocation(line: 1980, column: 12, scope: !7576)
!7578 = !DILocation(line: 1980, column: 20, scope: !7576)
!7579 = !DILocation(line: 1980, column: 6, scope: !4363)
!7580 = !DILocation(line: 1981, column: 18, scope: !7576)
!7581 = !DILocation(line: 1981, column: 24, scope: !7576)
!7582 = !DILocation(line: 1981, column: 22, scope: !7576)
!7583 = !DILocation(line: 1981, column: 43, scope: !7576)
!7584 = !DILocation(line: 1982, column: 23, scope: !7576)
!7585 = !DILocation(line: 1982, column: 29, scope: !7576)
!7586 = !DILocation(line: 1982, column: 6, scope: !7576)
!7587 = !DILocation(line: 1982, column: 38, scope: !7576)
!7588 = !DILocation(line: 1981, column: 10, scope: !7576)
!7589 = !DILocation(line: 1981, column: 7, scope: !7576)
!7590 = !DILocation(line: 1981, column: 3, scope: !7576)
!7591 = !DILocation(line: 1984, column: 7, scope: !4363)
!7592 = !DILocation(line: 1985, column: 9, scope: !7593)
!7593 = distinct !DILexicalBlock(scope: !4363, file: !3, line: 1985, column: 2)
!7594 = !DILocation(line: 1985, column: 7, scope: !7593)
!7595 = !DILocation(line: 1985, column: 14, scope: !7596)
!7596 = distinct !DILexicalBlock(scope: !7593, file: !3, line: 1985, column: 2)
!7597 = !DILocation(line: 1985, column: 18, scope: !7596)
!7598 = !DILocation(line: 1985, column: 24, scope: !7596)
!7599 = !DILocation(line: 1985, column: 16, scope: !7596)
!7600 = !DILocation(line: 1985, column: 2, scope: !7593)
!7601 = !DILocalVariable(name: "col", scope: !7602, file: !3, line: 1986, type: !3995)
!7602 = distinct !DILexicalBlock(scope: !7596, file: !3, line: 1985, column: 44)
!7603 = !DILocation(line: 1986, column: 26, scope: !7602)
!7604 = !DILocation(line: 1986, column: 33, scope: !7602)
!7605 = !DILocation(line: 1986, column: 39, scope: !7602)
!7606 = !DILocation(line: 1986, column: 50, scope: !7602)
!7607 = !DILocation(line: 1987, column: 7, scope: !7608)
!7608 = distinct !DILexicalBlock(scope: !7602, file: !3, line: 1987, column: 7)
!7609 = !DILocation(line: 1987, column: 12, scope: !7608)
!7610 = !DILocation(line: 1987, column: 17, scope: !7608)
!7611 = !DILocation(line: 1987, column: 47, scope: !7608)
!7612 = !DILocation(line: 1988, column: 7, scope: !7608)
!7613 = !DILocation(line: 1988, column: 12, scope: !7608)
!7614 = !DILocation(line: 1988, column: 18, scope: !7608)
!7615 = !DILocation(line: 1988, column: 36, scope: !7608)
!7616 = !DILocation(line: 1988, column: 54, scope: !7608)
!7617 = !DILocation(line: 1989, column: 7, scope: !7608)
!7618 = !DILocation(line: 1989, column: 12, scope: !7608)
!7619 = !DILocation(line: 1989, column: 18, scope: !7608)
!7620 = !DILocation(line: 1989, column: 6, scope: !7608)
!7621 = !DILocation(line: 1989, column: 28, scope: !7608)
!7622 = !DILocation(line: 1987, column: 7, scope: !7602)
!7623 = !DILocation(line: 1990, column: 17, scope: !7624)
!7624 = distinct !DILexicalBlock(scope: !7608, file: !3, line: 1989, column: 49)
!7625 = !DILocation(line: 1990, column: 22, scope: !7624)
!7626 = !DILocation(line: 1990, column: 28, scope: !7624)
!7627 = !DILocation(line: 1990, column: 11, scope: !7624)
!7628 = !DILocation(line: 1990, column: 9, scope: !7624)
!7629 = !DILocation(line: 1991, column: 4, scope: !7624)
!7630 = !DILocation(line: 1993, column: 2, scope: !7602)
!7631 = !DILocation(line: 1985, column: 40, scope: !7596)
!7632 = !DILocation(line: 1985, column: 2, scope: !7596)
!7633 = distinct !{!7633, !7600, !7634}
!7634 = !DILocation(line: 1993, column: 2, scope: !7593)
!7635 = !DILocation(line: 1995, column: 10, scope: !4363)
!7636 = !DILocation(line: 1995, column: 16, scope: !4363)
!7637 = !DILocation(line: 1995, column: 2, scope: !4363)
!7638 = !DILocation(line: 1997, column: 7, scope: !7639)
!7639 = distinct !DILexicalBlock(scope: !4363, file: !3, line: 1995, column: 21)
!7640 = !DILocation(line: 1998, column: 3, scope: !7639)
!7641 = !DILocation(line: 2000, column: 7, scope: !7639)
!7642 = !DILocation(line: 2001, column: 3, scope: !7639)
!7643 = !DILocation(line: 2003, column: 7, scope: !7639)
!7644 = !DILocation(line: 2004, column: 3, scope: !7639)
!7645 = !DILocation(line: 2006, column: 7, scope: !7639)
!7646 = !DILocation(line: 2007, column: 2, scope: !7639)
!7647 = !DILocation(line: 2009, column: 28, scope: !4363)
!7648 = !DILocation(line: 2009, column: 34, scope: !4363)
!7649 = !DILocation(line: 2009, column: 8, scope: !4363)
!7650 = !DILocation(line: 2009, column: 6, scope: !4363)
!7651 = !DILocation(line: 2010, column: 6, scope: !7652)
!7652 = distinct !DILexicalBlock(scope: !4363, file: !3, line: 2010, column: 6)
!7653 = !DILocation(line: 2010, column: 6, scope: !4363)
!7654 = !DILocation(line: 2011, column: 3, scope: !7652)
!7655 = !DILocation(line: 2014, column: 2, scope: !4363)
!7656 = !DILocation(line: 2018, column: 2, scope: !4363)
!7657 = !DILocation(line: 2019, column: 1, scope: !4363)
!7658 = distinct !DISubprogram(name: "hid_hiddev", scope: !3, file: !3, line: 1883, type: !7659, scopeLine: 1884, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !371)
!7659 = !DISubroutineType(types: !7660)
!7660 = !{!514, !3986}
!7661 = !DILocalVariable(name: "hdev", arg: 1, scope: !7658, file: !3, line: 1883, type: !3986)
!7662 = !DILocation(line: 1883, column: 43, scope: !7658)
!7663 = !DILocation(line: 1885, column: 24, scope: !7658)
!7664 = !DILocation(line: 1885, column: 11, scope: !7658)
!7665 = !DILocation(line: 1885, column: 10, scope: !7658)
!7666 = !DILocation(line: 1885, column: 9, scope: !7658)
!7667 = !DILocation(line: 1885, column: 2, scope: !7658)
!7668 = distinct !DISubprogram(name: "hidraw_connect", scope: !4191, file: !4191, line: 47, type: !4110, scopeLine: 47, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !371)
!7669 = !DILocalVariable(name: "hid", arg: 1, scope: !7668, file: !4191, line: 47, type: !3986)
!7670 = !DILocation(line: 47, column: 53, scope: !7668)
!7671 = !DILocation(line: 47, column: 60, scope: !7668)
!7672 = distinct !DISubprogram(name: "hid_disconnect", scope: !3, file: !3, line: 2022, type: !4056, scopeLine: 2023, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !371)
!7673 = !DILocalVariable(name: "hdev", arg: 1, scope: !7672, file: !3, line: 2022, type: !3986)
!7674 = !DILocation(line: 2022, column: 40, scope: !7672)
!7675 = !DILocation(line: 2024, column: 22, scope: !7672)
!7676 = !DILocation(line: 2024, column: 28, scope: !7672)
!7677 = !DILocation(line: 2024, column: 2, scope: !7672)
!7678 = !DILocation(line: 2025, column: 6, scope: !7679)
!7679 = distinct !DILexicalBlock(scope: !7672, file: !3, line: 2025, column: 6)
!7680 = !DILocation(line: 2025, column: 12, scope: !7679)
!7681 = !DILocation(line: 2025, column: 20, scope: !7679)
!7682 = !DILocation(line: 2025, column: 6, scope: !7672)
!7683 = !DILocation(line: 2026, column: 23, scope: !7679)
!7684 = !DILocation(line: 2026, column: 3, scope: !7679)
!7685 = !DILocation(line: 2027, column: 6, scope: !7686)
!7686 = distinct !DILexicalBlock(scope: !7672, file: !3, line: 2027, column: 6)
!7687 = !DILocation(line: 2027, column: 12, scope: !7686)
!7688 = !DILocation(line: 2027, column: 20, scope: !7686)
!7689 = !DILocation(line: 2027, column: 6, scope: !7672)
!7690 = !DILocation(line: 2028, column: 3, scope: !7686)
!7691 = !DILocation(line: 2028, column: 9, scope: !7686)
!7692 = !DILocation(line: 2028, column: 27, scope: !7686)
!7693 = !DILocation(line: 2029, column: 6, scope: !7694)
!7694 = distinct !DILexicalBlock(scope: !7672, file: !3, line: 2029, column: 6)
!7695 = !DILocation(line: 2029, column: 12, scope: !7694)
!7696 = !DILocation(line: 2029, column: 20, scope: !7694)
!7697 = !DILocation(line: 2029, column: 6, scope: !7672)
!7698 = !DILocation(line: 2030, column: 21, scope: !7694)
!7699 = !DILocation(line: 2030, column: 3, scope: !7694)
!7700 = !DILocation(line: 2031, column: 2, scope: !7672)
!7701 = !DILocation(line: 2031, column: 8, scope: !7672)
!7702 = !DILocation(line: 2031, column: 16, scope: !7672)
!7703 = !DILocation(line: 2032, column: 1, scope: !7672)
!7704 = distinct !DISubprogram(name: "hidraw_disconnect", scope: !4191, file: !4191, line: 48, type: !4056, scopeLine: 48, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !371)
!7705 = !DILocalVariable(name: "hid", arg: 1, scope: !7704, file: !4191, line: 48, type: !3986)
!7706 = !DILocation(line: 48, column: 57, scope: !7704)
!7707 = !DILocation(line: 48, column: 64, scope: !7704)
!7708 = distinct !DISubprogram(name: "hid_hw_start", scope: !3, file: !3, line: 2044, type: !4161, scopeLine: 2045, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !371)
!7709 = !DILocalVariable(name: "hdev", arg: 1, scope: !7708, file: !3, line: 2044, type: !3986)
!7710 = !DILocation(line: 2044, column: 37, scope: !7708)
!7711 = !DILocalVariable(name: "connect_mask", arg: 2, scope: !7708, file: !3, line: 2044, type: !7)
!7712 = !DILocation(line: 2044, column: 56, scope: !7708)
!7713 = !DILocalVariable(name: "error", scope: !7708, file: !3, line: 2046, type: !169)
!7714 = !DILocation(line: 2046, column: 6, scope: !7708)
!7715 = !DILocation(line: 2048, column: 10, scope: !7708)
!7716 = !DILocation(line: 2048, column: 16, scope: !7708)
!7717 = !DILocation(line: 2048, column: 27, scope: !7708)
!7718 = !DILocation(line: 2048, column: 33, scope: !7708)
!7719 = !DILocation(line: 2048, column: 8, scope: !7708)
!7720 = !DILocation(line: 2049, column: 6, scope: !7721)
!7721 = distinct !DILexicalBlock(scope: !7708, file: !3, line: 2049, column: 6)
!7722 = !DILocation(line: 2049, column: 6, scope: !7708)
!7723 = !DILocation(line: 2050, column: 10, scope: !7721)
!7724 = !DILocation(line: 2050, column: 3, scope: !7721)
!7725 = !DILocation(line: 2052, column: 6, scope: !7726)
!7726 = distinct !DILexicalBlock(scope: !7708, file: !3, line: 2052, column: 6)
!7727 = !DILocation(line: 2052, column: 6, scope: !7708)
!7728 = !DILocation(line: 2053, column: 23, scope: !7729)
!7729 = distinct !DILexicalBlock(scope: !7726, file: !3, line: 2052, column: 20)
!7730 = !DILocation(line: 2053, column: 29, scope: !7729)
!7731 = !DILocation(line: 2053, column: 11, scope: !7729)
!7732 = !DILocation(line: 2053, column: 9, scope: !7729)
!7733 = !DILocation(line: 2054, column: 7, scope: !7734)
!7734 = distinct !DILexicalBlock(scope: !7729, file: !3, line: 2054, column: 7)
!7735 = !DILocation(line: 2054, column: 7, scope: !7729)
!7736 = !DILocation(line: 2055, column: 4, scope: !7737)
!7737 = distinct !DILexicalBlock(scope: !7734, file: !3, line: 2054, column: 14)
!7738 = !DILocation(line: 2055, column: 10, scope: !7737)
!7739 = !DILocation(line: 2055, column: 21, scope: !7737)
!7740 = !DILocation(line: 2055, column: 26, scope: !7737)
!7741 = !DILocation(line: 2056, column: 11, scope: !7737)
!7742 = !DILocation(line: 2056, column: 4, scope: !7737)
!7743 = !DILocation(line: 2058, column: 2, scope: !7729)
!7744 = !DILocation(line: 2060, column: 2, scope: !7708)
!7745 = !DILocation(line: 2061, column: 1, scope: !7708)
!7746 = distinct !DISubprogram(name: "hid_hw_stop", scope: !3, file: !3, line: 2071, type: !4056, scopeLine: 2072, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !371)
!7747 = !DILocalVariable(name: "hdev", arg: 1, scope: !7746, file: !3, line: 2071, type: !3986)
!7748 = !DILocation(line: 2071, column: 37, scope: !7746)
!7749 = !DILocation(line: 2073, column: 17, scope: !7746)
!7750 = !DILocation(line: 2073, column: 2, scope: !7746)
!7751 = !DILocation(line: 2074, column: 2, scope: !7746)
!7752 = !DILocation(line: 2074, column: 8, scope: !7746)
!7753 = !DILocation(line: 2074, column: 19, scope: !7746)
!7754 = !DILocation(line: 2074, column: 24, scope: !7746)
!7755 = !DILocation(line: 2075, column: 1, scope: !7746)
!7756 = distinct !DISubprogram(name: "hid_hw_open", scope: !3, file: !3, line: 2086, type: !4110, scopeLine: 2087, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !371)
!7757 = !DILocalVariable(name: "hdev", arg: 1, scope: !7756, file: !3, line: 2086, type: !3986)
!7758 = !DILocation(line: 2086, column: 36, scope: !7756)
!7759 = !DILocalVariable(name: "ret", scope: !7756, file: !3, line: 2088, type: !169)
!7760 = !DILocation(line: 2088, column: 6, scope: !7756)
!7761 = !DILocation(line: 2090, column: 29, scope: !7756)
!7762 = !DILocation(line: 2090, column: 35, scope: !7756)
!7763 = !DILocation(line: 2090, column: 8, scope: !7756)
!7764 = !DILocation(line: 2090, column: 6, scope: !7756)
!7765 = !DILocation(line: 2091, column: 6, scope: !7766)
!7766 = distinct !DILexicalBlock(scope: !7756, file: !3, line: 2091, column: 6)
!7767 = !DILocation(line: 2091, column: 6, scope: !7756)
!7768 = !DILocation(line: 2092, column: 10, scope: !7766)
!7769 = !DILocation(line: 2092, column: 3, scope: !7766)
!7770 = !DILocation(line: 2094, column: 7, scope: !7771)
!7771 = distinct !DILexicalBlock(scope: !7756, file: !3, line: 2094, column: 6)
!7772 = !DILocation(line: 2094, column: 13, scope: !7771)
!7773 = !DILocation(line: 2094, column: 26, scope: !7771)
!7774 = !DILocation(line: 2094, column: 6, scope: !7756)
!7775 = !DILocation(line: 2095, column: 9, scope: !7776)
!7776 = distinct !DILexicalBlock(scope: !7771, file: !3, line: 2094, column: 30)
!7777 = !DILocation(line: 2095, column: 15, scope: !7776)
!7778 = !DILocation(line: 2095, column: 26, scope: !7776)
!7779 = !DILocation(line: 2095, column: 31, scope: !7776)
!7780 = !DILocation(line: 2095, column: 7, scope: !7776)
!7781 = !DILocation(line: 2096, column: 7, scope: !7782)
!7782 = distinct !DILexicalBlock(scope: !7776, file: !3, line: 2096, column: 7)
!7783 = !DILocation(line: 2096, column: 7, scope: !7776)
!7784 = !DILocation(line: 2097, column: 4, scope: !7782)
!7785 = !DILocation(line: 2097, column: 10, scope: !7782)
!7786 = !DILocation(line: 2097, column: 23, scope: !7782)
!7787 = !DILocation(line: 2098, column: 2, scope: !7776)
!7788 = !DILocation(line: 2100, column: 16, scope: !7756)
!7789 = !DILocation(line: 2100, column: 22, scope: !7756)
!7790 = !DILocation(line: 2100, column: 2, scope: !7756)
!7791 = !DILocation(line: 2101, column: 9, scope: !7756)
!7792 = !DILocation(line: 2101, column: 2, scope: !7756)
!7793 = !DILocation(line: 2102, column: 1, scope: !7756)
!7794 = distinct !DISubprogram(name: "hid_hw_close", scope: !3, file: !3, line: 2114, type: !4056, scopeLine: 2115, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !371)
!7795 = !DILocalVariable(name: "hdev", arg: 1, scope: !7794, file: !3, line: 2114, type: !3986)
!7796 = !DILocation(line: 2114, column: 38, scope: !7794)
!7797 = !DILocation(line: 2116, column: 14, scope: !7794)
!7798 = !DILocation(line: 2116, column: 20, scope: !7794)
!7799 = !DILocation(line: 2116, column: 2, scope: !7794)
!7800 = !DILocation(line: 2117, column: 9, scope: !7801)
!7801 = distinct !DILexicalBlock(scope: !7794, file: !3, line: 2117, column: 6)
!7802 = !DILocation(line: 2117, column: 15, scope: !7801)
!7803 = !DILocation(line: 2117, column: 7, scope: !7801)
!7804 = !DILocation(line: 2117, column: 6, scope: !7794)
!7805 = !DILocation(line: 2118, column: 3, scope: !7801)
!7806 = !DILocation(line: 2118, column: 9, scope: !7801)
!7807 = !DILocation(line: 2118, column: 20, scope: !7801)
!7808 = !DILocation(line: 2118, column: 26, scope: !7801)
!7809 = !DILocation(line: 2119, column: 16, scope: !7794)
!7810 = !DILocation(line: 2119, column: 22, scope: !7794)
!7811 = !DILocation(line: 2119, column: 2, scope: !7794)
!7812 = !DILocation(line: 2120, column: 1, scope: !7794)
!7813 = distinct !DISubprogram(name: "hid_match_device", scope: !3, file: !3, line: 2189, type: !7814, scopeLine: 2191, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !371)
!7814 = !DISubroutineType(types: !7815)
!7815 = !{!4035, !3986, !4030}
!7816 = !DILocalVariable(name: "lock", arg: 1, scope: !7817, file: !7818, line: 392, type: !1089)
!7817 = distinct !DISubprogram(name: "spin_unlock", scope: !7818, file: !7818, line: 392, type: !7819, scopeLine: 393, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !371)
!7818 = !DIFile(filename: "./include/linux/spinlock.h", directory: "/home/lizy2001/genbc/linux")
!7819 = !DISubroutineType(types: !7820)
!7820 = !{null, !1089}
!7821 = !DILocation(line: 392, column: 53, scope: !7817, inlinedAt: !7822)
!7822 = distinct !DILocation(line: 2201, column: 2, scope: !7813)
!7823 = !DILocation(line: 392, column: 53, scope: !7817, inlinedAt: !7824)
!7824 = distinct !DILocation(line: 2197, column: 4, scope: !7825)
!7825 = distinct !DILexicalBlock(scope: !7826, file: !3, line: 2196, column: 43)
!7826 = distinct !DILexicalBlock(scope: !7827, file: !3, line: 2196, column: 7)
!7827 = distinct !DILexicalBlock(scope: !7828, file: !3, line: 2195, column: 52)
!7828 = distinct !DILexicalBlock(scope: !7829, file: !3, line: 2195, column: 2)
!7829 = distinct !DILexicalBlock(scope: !7813, file: !3, line: 2195, column: 2)
!7830 = !DILocalVariable(name: "lock", arg: 1, scope: !7831, file: !7818, line: 352, type: !1089)
!7831 = distinct !DISubprogram(name: "spin_lock", scope: !7818, file: !7818, line: 352, type: !7819, scopeLine: 353, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !371)
!7832 = !DILocation(line: 352, column: 51, scope: !7831, inlinedAt: !7833)
!7833 = distinct !DILocation(line: 2194, column: 2, scope: !7813)
!7834 = !DILocalVariable(name: "hdev", arg: 1, scope: !7813, file: !3, line: 2189, type: !3986)
!7835 = !DILocation(line: 2189, column: 65, scope: !7813)
!7836 = !DILocalVariable(name: "hdrv", arg: 2, scope: !7813, file: !3, line: 2190, type: !4030)
!7837 = !DILocation(line: 2190, column: 30, scope: !7813)
!7838 = !DILocalVariable(name: "dynid", scope: !7813, file: !3, line: 2192, type: !4201)
!7839 = !DILocation(line: 2192, column: 20, scope: !7813)
!7840 = !DILocation(line: 2194, column: 13, scope: !7813)
!7841 = !DILocation(line: 2194, column: 19, scope: !7813)
!7842 = !DILocation(line: 354, column: 2, scope: !7843, inlinedAt: !7833)
!7843 = distinct !DILexicalBlock(scope: !7831, file: !7818, line: 354, column: 2)
!7844 = !{i32 -2145416379}
!7845 = !DILocation(line: 354, column: 2, scope: !7846, inlinedAt: !7833)
!7846 = distinct !DILexicalBlock(scope: !7843, file: !7818, line: 354, column: 2)
!7847 = !DILocalVariable(name: "__mptr", scope: !7848, file: !3, line: 2195, type: !114)
!7848 = distinct !DILexicalBlock(scope: !7829, file: !3, line: 2195, column: 2)
!7849 = !DILocation(line: 2195, column: 2, scope: !7848)
!7850 = !DILocation(line: 2195, column: 2, scope: !7851)
!7851 = distinct !DILexicalBlock(scope: !7848, file: !3, line: 2195, column: 2)
!7852 = !DILocation(line: 2195, column: 2, scope: !7829)
!7853 = !DILocation(line: 2195, column: 2, scope: !7828)
!7854 = !DILocation(line: 2196, column: 24, scope: !7826)
!7855 = !DILocation(line: 2196, column: 31, scope: !7826)
!7856 = !DILocation(line: 2196, column: 38, scope: !7826)
!7857 = !DILocation(line: 2196, column: 7, scope: !7826)
!7858 = !DILocation(line: 2196, column: 7, scope: !7827)
!7859 = !DILocation(line: 2197, column: 17, scope: !7825)
!7860 = !DILocation(line: 2197, column: 23, scope: !7825)
!7861 = !DILocation(line: 394, column: 2, scope: !7862, inlinedAt: !7824)
!7862 = distinct !DILexicalBlock(scope: !7817, file: !7818, line: 394, column: 2)
!7863 = !{i32 -2145414018}
!7864 = !DILocation(line: 394, column: 2, scope: !7865, inlinedAt: !7824)
!7865 = distinct !DILexicalBlock(scope: !7862, file: !7818, line: 394, column: 2)
!7866 = !DILocation(line: 2198, column: 12, scope: !7825)
!7867 = !DILocation(line: 2198, column: 19, scope: !7825)
!7868 = !DILocation(line: 2198, column: 4, scope: !7825)
!7869 = !DILocation(line: 2200, column: 2, scope: !7827)
!7870 = !DILocalVariable(name: "__mptr", scope: !7871, file: !3, line: 2195, type: !114)
!7871 = distinct !DILexicalBlock(scope: !7828, file: !3, line: 2195, column: 2)
!7872 = !DILocation(line: 2195, column: 2, scope: !7871)
!7873 = !DILocation(line: 2195, column: 2, scope: !7874)
!7874 = distinct !DILexicalBlock(scope: !7871, file: !3, line: 2195, column: 2)
!7875 = distinct !{!7875, !7852, !7876}
!7876 = !DILocation(line: 2200, column: 2, scope: !7829)
!7877 = !DILocation(line: 2201, column: 15, scope: !7813)
!7878 = !DILocation(line: 2201, column: 21, scope: !7813)
!7879 = !DILocation(line: 394, column: 2, scope: !7862, inlinedAt: !7822)
!7880 = !DILocation(line: 394, column: 2, scope: !7865, inlinedAt: !7822)
!7881 = !DILocation(line: 2203, column: 22, scope: !7813)
!7882 = !DILocation(line: 2203, column: 28, scope: !7813)
!7883 = !DILocation(line: 2203, column: 34, scope: !7813)
!7884 = !DILocation(line: 2203, column: 9, scope: !7813)
!7885 = !DILocation(line: 2203, column: 2, scope: !7813)
!7886 = !DILocation(line: 2204, column: 1, scope: !7813)
!7887 = distinct !DISubprogram(name: "hid_compare_device_paths", scope: !3, file: !3, line: 2225, type: !7888, scopeLine: 2227, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !371)
!7888 = !DISubroutineType(types: !7889)
!7889 = !{!514, !3986, !3986, !192}
!7890 = !DILocalVariable(name: "hdev_a", arg: 1, scope: !7887, file: !3, line: 2225, type: !3986)
!7891 = !DILocation(line: 2225, column: 50, scope: !7887)
!7892 = !DILocalVariable(name: "hdev_b", arg: 2, scope: !7887, file: !3, line: 2226, type: !3986)
!7893 = !DILocation(line: 2226, column: 29, scope: !7887)
!7894 = !DILocalVariable(name: "separator", arg: 3, scope: !7887, file: !3, line: 2226, type: !192)
!7895 = !DILocation(line: 2226, column: 42, scope: !7887)
!7896 = !DILocalVariable(name: "n1", scope: !7887, file: !3, line: 2228, type: !169)
!7897 = !DILocation(line: 2228, column: 6, scope: !7887)
!7898 = !DILocation(line: 2228, column: 19, scope: !7887)
!7899 = !DILocation(line: 2228, column: 27, scope: !7887)
!7900 = !DILocation(line: 2228, column: 33, scope: !7887)
!7901 = !DILocation(line: 2228, column: 11, scope: !7887)
!7902 = !DILocation(line: 2228, column: 46, scope: !7887)
!7903 = !DILocation(line: 2228, column: 54, scope: !7887)
!7904 = !DILocation(line: 2228, column: 44, scope: !7887)
!7905 = !DILocalVariable(name: "n2", scope: !7887, file: !3, line: 2229, type: !169)
!7906 = !DILocation(line: 2229, column: 6, scope: !7887)
!7907 = !DILocation(line: 2229, column: 19, scope: !7887)
!7908 = !DILocation(line: 2229, column: 27, scope: !7887)
!7909 = !DILocation(line: 2229, column: 33, scope: !7887)
!7910 = !DILocation(line: 2229, column: 11, scope: !7887)
!7911 = !DILocation(line: 2229, column: 46, scope: !7887)
!7912 = !DILocation(line: 2229, column: 54, scope: !7887)
!7913 = !DILocation(line: 2229, column: 44, scope: !7887)
!7914 = !DILocation(line: 2231, column: 6, scope: !7915)
!7915 = distinct !DILexicalBlock(scope: !7887, file: !3, line: 2231, column: 6)
!7916 = !DILocation(line: 2231, column: 12, scope: !7915)
!7917 = !DILocation(line: 2231, column: 9, scope: !7915)
!7918 = !DILocation(line: 2231, column: 15, scope: !7915)
!7919 = !DILocation(line: 2231, column: 18, scope: !7915)
!7920 = !DILocation(line: 2231, column: 21, scope: !7915)
!7921 = !DILocation(line: 2231, column: 26, scope: !7915)
!7922 = !DILocation(line: 2231, column: 29, scope: !7915)
!7923 = !DILocation(line: 2231, column: 32, scope: !7915)
!7924 = !DILocation(line: 2231, column: 6, scope: !7887)
!7925 = !DILocation(line: 2232, column: 3, scope: !7915)
!7926 = !DILocation(line: 2234, column: 18, scope: !7887)
!7927 = !DILocation(line: 2234, column: 26, scope: !7887)
!7928 = !DILocation(line: 2234, column: 32, scope: !7887)
!7929 = !DILocation(line: 2234, column: 40, scope: !7887)
!7930 = !DILocation(line: 2234, column: 46, scope: !7887)
!7931 = !DILocation(line: 2234, column: 10, scope: !7887)
!7932 = !DILocation(line: 2234, column: 9, scope: !7887)
!7933 = !DILocation(line: 2234, column: 2, scope: !7887)
!7934 = !DILocation(line: 2235, column: 1, scope: !7887)
!7935 = distinct !DISubprogram(name: "hid_bus_match", scope: !3, file: !3, line: 2207, type: !3689, scopeLine: 2208, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !371)
!7936 = !DILocalVariable(name: "dev", arg: 1, scope: !7935, file: !3, line: 2207, type: !3620)
!7937 = !DILocation(line: 2207, column: 41, scope: !7935)
!7938 = !DILocalVariable(name: "drv", arg: 2, scope: !7935, file: !3, line: 2207, type: !3691)
!7939 = !DILocation(line: 2207, column: 68, scope: !7935)
!7940 = !DILocalVariable(name: "hdrv", scope: !7935, file: !3, line: 2209, type: !4030)
!7941 = !DILocation(line: 2209, column: 21, scope: !7935)
!7942 = !DILocalVariable(name: "__mptr", scope: !7943, file: !3, line: 2209, type: !114)
!7943 = distinct !DILexicalBlock(scope: !7935, file: !3, line: 2209, column: 28)
!7944 = !DILocation(line: 2209, column: 28, scope: !7943)
!7945 = !DILocation(line: 2209, column: 28, scope: !7946)
!7946 = distinct !DILexicalBlock(scope: !7943, file: !3, line: 2209, column: 28)
!7947 = !DILocalVariable(name: "hdev", scope: !7935, file: !3, line: 2210, type: !3986)
!7948 = !DILocation(line: 2210, column: 21, scope: !7935)
!7949 = !DILocalVariable(name: "__mptr", scope: !7950, file: !3, line: 2210, type: !114)
!7950 = distinct !DILexicalBlock(scope: !7935, file: !3, line: 2210, column: 28)
!7951 = !DILocation(line: 2210, column: 28, scope: !7950)
!7952 = !DILocation(line: 2210, column: 28, scope: !7953)
!7953 = distinct !DILexicalBlock(scope: !7950, file: !3, line: 2210, column: 28)
!7954 = !DILocation(line: 2212, column: 26, scope: !7935)
!7955 = !DILocation(line: 2212, column: 32, scope: !7935)
!7956 = !DILocation(line: 2212, column: 9, scope: !7935)
!7957 = !DILocation(line: 2212, column: 38, scope: !7935)
!7958 = !DILocation(line: 2212, column: 2, scope: !7935)
!7959 = distinct !DISubprogram(name: "hid_uevent", scope: !3, file: !3, line: 2351, type: !3634, scopeLine: 2352, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !371)
!7960 = !DILocalVariable(name: "dev", arg: 1, scope: !7959, file: !3, line: 2351, type: !3620)
!7961 = !DILocation(line: 2351, column: 38, scope: !7959)
!7962 = !DILocalVariable(name: "env", arg: 2, scope: !7959, file: !3, line: 2351, type: !3357)
!7963 = !DILocation(line: 2351, column: 67, scope: !7959)
!7964 = !DILocalVariable(name: "hdev", scope: !7959, file: !3, line: 2353, type: !3986)
!7965 = !DILocation(line: 2353, column: 21, scope: !7959)
!7966 = !DILocalVariable(name: "__mptr", scope: !7967, file: !3, line: 2353, type: !114)
!7967 = distinct !DILexicalBlock(scope: !7959, file: !3, line: 2353, column: 28)
!7968 = !DILocation(line: 2353, column: 28, scope: !7967)
!7969 = !DILocation(line: 2353, column: 28, scope: !7970)
!7970 = distinct !DILexicalBlock(scope: !7967, file: !3, line: 2353, column: 28)
!7971 = !DILocation(line: 2355, column: 21, scope: !7972)
!7972 = distinct !DILexicalBlock(scope: !7959, file: !3, line: 2355, column: 6)
!7973 = !DILocation(line: 2356, column: 4, scope: !7972)
!7974 = !DILocation(line: 2356, column: 10, scope: !7972)
!7975 = !DILocation(line: 2356, column: 15, scope: !7972)
!7976 = !DILocation(line: 2356, column: 21, scope: !7972)
!7977 = !DILocation(line: 2356, column: 29, scope: !7972)
!7978 = !DILocation(line: 2356, column: 35, scope: !7972)
!7979 = !DILocation(line: 2355, column: 6, scope: !7972)
!7980 = !DILocation(line: 2355, column: 6, scope: !7959)
!7981 = !DILocation(line: 2357, column: 3, scope: !7972)
!7982 = !DILocation(line: 2359, column: 21, scope: !7983)
!7983 = distinct !DILexicalBlock(scope: !7959, file: !3, line: 2359, column: 6)
!7984 = !DILocation(line: 2359, column: 41, scope: !7983)
!7985 = !DILocation(line: 2359, column: 47, scope: !7983)
!7986 = !DILocation(line: 2359, column: 6, scope: !7983)
!7987 = !DILocation(line: 2359, column: 6, scope: !7959)
!7988 = !DILocation(line: 2360, column: 3, scope: !7983)
!7989 = !DILocation(line: 2362, column: 21, scope: !7990)
!7990 = distinct !DILexicalBlock(scope: !7959, file: !3, line: 2362, column: 6)
!7991 = !DILocation(line: 2362, column: 41, scope: !7990)
!7992 = !DILocation(line: 2362, column: 47, scope: !7990)
!7993 = !DILocation(line: 2362, column: 6, scope: !7990)
!7994 = !DILocation(line: 2362, column: 6, scope: !7959)
!7995 = !DILocation(line: 2363, column: 3, scope: !7990)
!7996 = !DILocation(line: 2365, column: 21, scope: !7997)
!7997 = distinct !DILexicalBlock(scope: !7959, file: !3, line: 2365, column: 6)
!7998 = !DILocation(line: 2365, column: 41, scope: !7997)
!7999 = !DILocation(line: 2365, column: 47, scope: !7997)
!8000 = !DILocation(line: 2365, column: 6, scope: !7997)
!8001 = !DILocation(line: 2365, column: 6, scope: !7959)
!8002 = !DILocation(line: 2366, column: 3, scope: !7997)
!8003 = !DILocation(line: 2368, column: 21, scope: !8004)
!8004 = distinct !DILexicalBlock(scope: !7959, file: !3, line: 2368, column: 6)
!8005 = !DILocation(line: 2369, column: 7, scope: !8004)
!8006 = !DILocation(line: 2369, column: 13, scope: !8004)
!8007 = !DILocation(line: 2369, column: 18, scope: !8004)
!8008 = !DILocation(line: 2369, column: 24, scope: !8004)
!8009 = !DILocation(line: 2369, column: 31, scope: !8004)
!8010 = !DILocation(line: 2369, column: 37, scope: !8004)
!8011 = !DILocation(line: 2369, column: 45, scope: !8004)
!8012 = !DILocation(line: 2369, column: 51, scope: !8004)
!8013 = !DILocation(line: 2368, column: 6, scope: !8004)
!8014 = !DILocation(line: 2368, column: 6, scope: !7959)
!8015 = !DILocation(line: 2370, column: 3, scope: !8004)
!8016 = !DILocation(line: 2372, column: 2, scope: !7959)
!8017 = !DILocation(line: 2373, column: 1, scope: !7959)
!8018 = distinct !DISubprogram(name: "hid_device_probe", scope: !3, file: !3, line: 2238, type: !3652, scopeLine: 2239, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !371)
!8019 = !DILocalVariable(name: "x", arg: 1, scope: !8020, file: !8021, line: 283, type: !169)
!8020 = distinct !DISubprogram(name: "ffs", scope: !8021, file: !8021, line: 283, type: !3061, scopeLine: 284, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !371)
!8021 = !DIFile(filename: "./arch/x86/include/asm/bitops.h", directory: "/home/lizy2001/genbc/linux")
!8022 = !DILocation(line: 283, column: 36, scope: !8020, inlinedAt: !8023)
!8023 = distinct !DILocation(line: 2251, column: 12, scope: !8018)
!8024 = !DILocalVariable(name: "r", scope: !8020, file: !8021, line: 285, type: !169)
!8025 = !DILocation(line: 285, column: 6, scope: !8020, inlinedAt: !8023)
!8026 = !DILocalVariable(name: "dev", arg: 1, scope: !8018, file: !3, line: 2238, type: !3620)
!8027 = !DILocation(line: 2238, column: 44, scope: !8018)
!8028 = !DILocalVariable(name: "hdrv", scope: !8018, file: !3, line: 2240, type: !4030)
!8029 = !DILocation(line: 2240, column: 21, scope: !8018)
!8030 = !DILocalVariable(name: "__mptr", scope: !8031, file: !3, line: 2240, type: !114)
!8031 = distinct !DILexicalBlock(scope: !8018, file: !3, line: 2240, column: 28)
!8032 = !DILocation(line: 2240, column: 28, scope: !8031)
!8033 = !DILocation(line: 2240, column: 28, scope: !8034)
!8034 = distinct !DILexicalBlock(scope: !8031, file: !3, line: 2240, column: 28)
!8035 = !DILocalVariable(name: "hdev", scope: !8018, file: !3, line: 2241, type: !3986)
!8036 = !DILocation(line: 2241, column: 21, scope: !8018)
!8037 = !DILocalVariable(name: "__mptr", scope: !8038, file: !3, line: 2241, type: !114)
!8038 = distinct !DILexicalBlock(scope: !8018, file: !3, line: 2241, column: 28)
!8039 = !DILocation(line: 2241, column: 28, scope: !8038)
!8040 = !DILocation(line: 2241, column: 28, scope: !8041)
!8041 = distinct !DILexicalBlock(scope: !8038, file: !3, line: 2241, column: 28)
!8042 = !DILocalVariable(name: "id", scope: !8018, file: !3, line: 2242, type: !4035)
!8043 = !DILocation(line: 2242, column: 30, scope: !8018)
!8044 = !DILocalVariable(name: "ret", scope: !8018, file: !3, line: 2243, type: !169)
!8045 = !DILocation(line: 2243, column: 6, scope: !8018)
!8046 = !DILocation(line: 2245, column: 26, scope: !8047)
!8047 = distinct !DILexicalBlock(scope: !8018, file: !3, line: 2245, column: 6)
!8048 = !DILocation(line: 2245, column: 32, scope: !8047)
!8049 = !DILocation(line: 2245, column: 6, scope: !8047)
!8050 = !DILocation(line: 2245, column: 6, scope: !8018)
!8051 = !DILocation(line: 2246, column: 7, scope: !8052)
!8052 = distinct !DILexicalBlock(scope: !8047, file: !3, line: 2245, column: 52)
!8053 = !DILocation(line: 2247, column: 3, scope: !8052)
!8054 = !DILocation(line: 2249, column: 2, scope: !8018)
!8055 = !DILocation(line: 2249, column: 8, scope: !8018)
!8056 = !DILocation(line: 2249, column: 19, scope: !8018)
!8057 = !DILocation(line: 299, column: 14, scope: !8020, inlinedAt: !8023)
!8058 = !DILocation(line: 297, column: 2, scope: !8020, inlinedAt: !8023)
!8059 = !{i32 360631}
!8060 = !DILocation(line: 310, column: 9, scope: !8020, inlinedAt: !8023)
!8061 = !DILocation(line: 310, column: 11, scope: !8020, inlinedAt: !8023)
!8062 = !DILocation(line: 2251, column: 12, scope: !8018)
!8063 = !DILocation(line: 2251, column: 37, scope: !8018)
!8064 = !DILocation(line: 2251, column: 43, scope: !8018)
!8065 = !DILocation(line: 2251, column: 2, scope: !8018)
!8066 = !DILocation(line: 2253, column: 7, scope: !8067)
!8067 = distinct !DILexicalBlock(scope: !8018, file: !3, line: 2253, column: 6)
!8068 = !DILocation(line: 2253, column: 13, scope: !8067)
!8069 = !DILocation(line: 2253, column: 6, scope: !8018)
!8070 = !DILocation(line: 2254, column: 25, scope: !8071)
!8071 = distinct !DILexicalBlock(scope: !8067, file: !3, line: 2253, column: 21)
!8072 = !DILocation(line: 2254, column: 31, scope: !8071)
!8073 = !DILocation(line: 2254, column: 8, scope: !8071)
!8074 = !DILocation(line: 2254, column: 6, scope: !8071)
!8075 = !DILocation(line: 2255, column: 7, scope: !8076)
!8076 = distinct !DILexicalBlock(scope: !8071, file: !3, line: 2255, column: 7)
!8077 = !DILocation(line: 2255, column: 10, scope: !8076)
!8078 = !DILocation(line: 2255, column: 7, scope: !8071)
!8079 = !DILocation(line: 2256, column: 8, scope: !8080)
!8080 = distinct !DILexicalBlock(scope: !8076, file: !3, line: 2255, column: 19)
!8081 = !DILocation(line: 2257, column: 4, scope: !8080)
!8082 = !DILocation(line: 2260, column: 7, scope: !8083)
!8083 = distinct !DILexicalBlock(scope: !8071, file: !3, line: 2260, column: 7)
!8084 = !DILocation(line: 2260, column: 13, scope: !8083)
!8085 = !DILocation(line: 2260, column: 7, scope: !8071)
!8086 = !DILocation(line: 2261, column: 9, scope: !8087)
!8087 = distinct !DILexicalBlock(scope: !8088, file: !3, line: 2261, column: 8)
!8088 = distinct !DILexicalBlock(scope: !8083, file: !3, line: 2260, column: 20)
!8089 = !DILocation(line: 2261, column: 15, scope: !8087)
!8090 = !DILocation(line: 2261, column: 21, scope: !8087)
!8091 = !DILocation(line: 2261, column: 27, scope: !8087)
!8092 = !DILocation(line: 2261, column: 8, scope: !8088)
!8093 = !DILocation(line: 2262, column: 9, scope: !8094)
!8094 = distinct !DILexicalBlock(scope: !8087, file: !3, line: 2261, column: 56)
!8095 = !DILocation(line: 2263, column: 5, scope: !8094)
!8096 = !DILocation(line: 2265, column: 3, scope: !8088)
!8097 = !DILocation(line: 2271, column: 8, scope: !8098)
!8098 = distinct !DILexicalBlock(scope: !8099, file: !3, line: 2271, column: 8)
!8099 = distinct !DILexicalBlock(scope: !8083, file: !3, line: 2265, column: 10)
!8100 = !DILocation(line: 2271, column: 8, scope: !8099)
!8101 = !DILocation(line: 2272, column: 9, scope: !8102)
!8102 = distinct !DILexicalBlock(scope: !8098, file: !3, line: 2271, column: 36)
!8103 = !DILocation(line: 2273, column: 5, scope: !8102)
!8104 = !DILocation(line: 2278, column: 35, scope: !8071)
!8105 = !DILocation(line: 2278, column: 18, scope: !8071)
!8106 = !DILocation(line: 2278, column: 3, scope: !8071)
!8107 = !DILocation(line: 2278, column: 9, scope: !8071)
!8108 = !DILocation(line: 2278, column: 16, scope: !8071)
!8109 = !DILocation(line: 2279, column: 18, scope: !8071)
!8110 = !DILocation(line: 2279, column: 3, scope: !8071)
!8111 = !DILocation(line: 2279, column: 9, scope: !8071)
!8112 = !DILocation(line: 2279, column: 16, scope: !8071)
!8113 = !DILocation(line: 2280, column: 7, scope: !8114)
!8114 = distinct !DILexicalBlock(scope: !8071, file: !3, line: 2280, column: 7)
!8115 = !DILocation(line: 2280, column: 13, scope: !8114)
!8116 = !DILocation(line: 2280, column: 7, scope: !8071)
!8117 = !DILocation(line: 2281, column: 10, scope: !8118)
!8118 = distinct !DILexicalBlock(scope: !8114, file: !3, line: 2280, column: 20)
!8119 = !DILocation(line: 2281, column: 16, scope: !8118)
!8120 = !DILocation(line: 2281, column: 22, scope: !8118)
!8121 = !DILocation(line: 2281, column: 28, scope: !8118)
!8122 = !DILocation(line: 2281, column: 8, scope: !8118)
!8123 = !DILocation(line: 2282, column: 3, scope: !8118)
!8124 = !DILocation(line: 2283, column: 26, scope: !8125)
!8125 = distinct !DILexicalBlock(scope: !8114, file: !3, line: 2282, column: 10)
!8126 = !DILocation(line: 2283, column: 10, scope: !8125)
!8127 = !DILocation(line: 2283, column: 8, scope: !8125)
!8128 = !DILocation(line: 2284, column: 9, scope: !8129)
!8129 = distinct !DILexicalBlock(scope: !8125, file: !3, line: 2284, column: 8)
!8130 = !DILocation(line: 2284, column: 8, scope: !8125)
!8131 = !DILocation(line: 2285, column: 24, scope: !8129)
!8132 = !DILocation(line: 2285, column: 11, scope: !8129)
!8133 = !DILocation(line: 2285, column: 9, scope: !8129)
!8134 = !DILocation(line: 2285, column: 5, scope: !8129)
!8135 = !DILocation(line: 2287, column: 7, scope: !8136)
!8136 = distinct !DILexicalBlock(scope: !8071, file: !3, line: 2287, column: 7)
!8137 = !DILocation(line: 2287, column: 7, scope: !8071)
!8138 = !DILocation(line: 2288, column: 21, scope: !8139)
!8139 = distinct !DILexicalBlock(scope: !8136, file: !3, line: 2287, column: 12)
!8140 = !DILocation(line: 2288, column: 4, scope: !8139)
!8141 = !DILocation(line: 2289, column: 4, scope: !8139)
!8142 = !DILocation(line: 2289, column: 10, scope: !8139)
!8143 = !DILocation(line: 2289, column: 17, scope: !8139)
!8144 = !DILocation(line: 2290, column: 3, scope: !8139)
!8145 = !DILocation(line: 2291, column: 2, scope: !8071)
!8146 = !DILabel(scope: !8018, name: "unlock", file: !3, line: 2292)
!8147 = !DILocation(line: 2292, column: 1, scope: !8018)
!8148 = !DILocation(line: 2293, column: 7, scope: !8149)
!8149 = distinct !DILexicalBlock(scope: !8018, file: !3, line: 2293, column: 6)
!8150 = !DILocation(line: 2293, column: 13, scope: !8149)
!8151 = !DILocation(line: 2293, column: 6, scope: !8018)
!8152 = !DILocation(line: 2294, column: 7, scope: !8149)
!8153 = !DILocation(line: 2294, column: 13, scope: !8149)
!8154 = !DILocation(line: 2294, column: 3, scope: !8149)
!8155 = !DILabel(scope: !8018, name: "end", file: !3, line: 2295)
!8156 = !DILocation(line: 2295, column: 1, scope: !8018)
!8157 = !DILocation(line: 2296, column: 9, scope: !8018)
!8158 = !DILocation(line: 2296, column: 2, scope: !8018)
!8159 = distinct !DISubprogram(name: "hid_device_remove", scope: !3, file: !3, line: 2299, type: !3652, scopeLine: 2300, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !371)
!8160 = !DILocalVariable(name: "dev", arg: 1, scope: !8159, file: !3, line: 2299, type: !3620)
!8161 = !DILocation(line: 2299, column: 45, scope: !8159)
!8162 = !DILocalVariable(name: "hdev", scope: !8159, file: !3, line: 2301, type: !3986)
!8163 = !DILocation(line: 2301, column: 21, scope: !8159)
!8164 = !DILocalVariable(name: "__mptr", scope: !8165, file: !3, line: 2301, type: !114)
!8165 = distinct !DILexicalBlock(scope: !8159, file: !3, line: 2301, column: 28)
!8166 = !DILocation(line: 2301, column: 28, scope: !8165)
!8167 = !DILocation(line: 2301, column: 28, scope: !8168)
!8168 = distinct !DILexicalBlock(scope: !8165, file: !3, line: 2301, column: 28)
!8169 = !DILocalVariable(name: "hdrv", scope: !8159, file: !3, line: 2302, type: !4030)
!8170 = !DILocation(line: 2302, column: 21, scope: !8159)
!8171 = !DILocalVariable(name: "ret", scope: !8159, file: !3, line: 2303, type: !169)
!8172 = !DILocation(line: 2303, column: 6, scope: !8159)
!8173 = !DILocation(line: 2305, column: 26, scope: !8174)
!8174 = distinct !DILexicalBlock(scope: !8159, file: !3, line: 2305, column: 6)
!8175 = !DILocation(line: 2305, column: 32, scope: !8174)
!8176 = !DILocation(line: 2305, column: 6, scope: !8174)
!8177 = !DILocation(line: 2305, column: 6, scope: !8159)
!8178 = !DILocation(line: 2306, column: 7, scope: !8179)
!8179 = distinct !DILexicalBlock(scope: !8174, file: !3, line: 2305, column: 52)
!8180 = !DILocation(line: 2307, column: 3, scope: !8179)
!8181 = !DILocation(line: 2309, column: 2, scope: !8159)
!8182 = !DILocation(line: 2309, column: 8, scope: !8159)
!8183 = !DILocation(line: 2309, column: 19, scope: !8159)
!8184 = !DILocation(line: 2311, column: 9, scope: !8159)
!8185 = !DILocation(line: 2311, column: 15, scope: !8159)
!8186 = !DILocation(line: 2311, column: 7, scope: !8159)
!8187 = !DILocation(line: 2312, column: 6, scope: !8188)
!8188 = distinct !DILexicalBlock(scope: !8159, file: !3, line: 2312, column: 6)
!8189 = !DILocation(line: 2312, column: 6, scope: !8159)
!8190 = !DILocation(line: 2313, column: 7, scope: !8191)
!8191 = distinct !DILexicalBlock(scope: !8192, file: !3, line: 2313, column: 7)
!8192 = distinct !DILexicalBlock(scope: !8188, file: !3, line: 2312, column: 12)
!8193 = !DILocation(line: 2313, column: 13, scope: !8191)
!8194 = !DILocation(line: 2313, column: 7, scope: !8192)
!8195 = !DILocation(line: 2314, column: 4, scope: !8191)
!8196 = !DILocation(line: 2314, column: 10, scope: !8191)
!8197 = !DILocation(line: 2314, column: 17, scope: !8191)
!8198 = !DILocation(line: 2316, column: 16, scope: !8191)
!8199 = !DILocation(line: 2316, column: 4, scope: !8191)
!8200 = !DILocation(line: 2317, column: 20, scope: !8192)
!8201 = !DILocation(line: 2317, column: 3, scope: !8192)
!8202 = !DILocation(line: 2318, column: 3, scope: !8192)
!8203 = !DILocation(line: 2318, column: 9, scope: !8192)
!8204 = !DILocation(line: 2318, column: 16, scope: !8192)
!8205 = !DILocation(line: 2319, column: 2, scope: !8192)
!8206 = !DILocation(line: 2321, column: 7, scope: !8207)
!8207 = distinct !DILexicalBlock(scope: !8159, file: !3, line: 2321, column: 6)
!8208 = !DILocation(line: 2321, column: 13, scope: !8207)
!8209 = !DILocation(line: 2321, column: 6, scope: !8159)
!8210 = !DILocation(line: 2322, column: 7, scope: !8207)
!8211 = !DILocation(line: 2322, column: 13, scope: !8207)
!8212 = !DILocation(line: 2322, column: 3, scope: !8207)
!8213 = !DILabel(scope: !8159, name: "end", file: !3, line: 2323)
!8214 = !DILocation(line: 2323, column: 1, scope: !8159)
!8215 = !DILocation(line: 2324, column: 9, scope: !8159)
!8216 = !DILocation(line: 2324, column: 2, scope: !8159)
!8217 = !DILocalVariable(name: "i", arg: 1, scope: !8218, file: !8219, line: 163, type: !169)
!8218 = distinct !DISubprogram(name: "arch_atomic_add_return", scope: !8219, file: !8219, line: 163, type: !8220, scopeLine: 164, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !371)
!8219 = !DIFile(filename: "./arch/x86/include/asm/atomic.h", directory: "/home/lizy2001/genbc/linux")
!8220 = !DISubroutineType(types: !8221)
!8221 = !{!169, !169, !8222}
!8222 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !781, size: 64)
!8223 = !DILocation(line: 163, column: 55, scope: !8218, inlinedAt: !8224)
!8224 = distinct !DILocation(line: 286, column: 9, scope: !8225, inlinedAt: !8229)
!8225 = distinct !DISubprogram(name: "arch_atomic_inc_return", scope: !8226, file: !8226, line: 284, type: !8227, scopeLine: 285, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !371)
!8226 = !DIFile(filename: "./include/linux/atomic-arch-fallback.h", directory: "/home/lizy2001/genbc/linux")
!8227 = !DISubroutineType(types: !8228)
!8228 = !{!169, !8222}
!8229 = distinct !DILocation(line: 251, column: 9, scope: !8230, inlinedAt: !8232)
!8230 = distinct !DISubprogram(name: "atomic_inc_return", scope: !8231, file: !8231, line: 248, type: !8227, scopeLine: 249, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !371)
!8231 = !DIFile(filename: "./include/asm-generic/atomic-instrumented.h", directory: "/home/lizy2001/genbc/linux")
!8232 = distinct !DILocation(line: 2434, column: 37, scope: !4369)
!8233 = !DILocalVariable(name: "v", arg: 2, scope: !8218, file: !8219, line: 163, type: !8222)
!8234 = !DILocation(line: 163, column: 68, scope: !8218, inlinedAt: !8224)
!8235 = !DILocalVariable(name: "__ret", scope: !8236, file: !8219, line: 165, type: !169)
!8236 = distinct !DILexicalBlock(scope: !8218, file: !8219, line: 165, column: 13)
!8237 = !DILocation(line: 165, column: 13, scope: !8236, inlinedAt: !8224)
!8238 = !DILocalVariable(name: "v", arg: 1, scope: !8225, file: !8226, line: 284, type: !8222)
!8239 = !DILocation(line: 284, column: 34, scope: !8225, inlinedAt: !8229)
!8240 = !DILocalVariable(name: "v", arg: 1, scope: !8241, file: !8242, line: 99, type: !8245)
!8241 = distinct !DISubprogram(name: "instrument_atomic_read_write", scope: !8242, file: !8242, line: 99, type: !8243, scopeLine: 100, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !371)
!8242 = !DIFile(filename: "./include/linux/instrumented.h", directory: "/home/lizy2001/genbc/linux")
!8243 = !DISubroutineType(types: !8244)
!8244 = !{null, !8245, !604}
!8245 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8246, size: 64)
!8246 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !8247)
!8247 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: null)
!8248 = !DILocation(line: 99, column: 79, scope: !8241, inlinedAt: !8249)
!8249 = distinct !DILocation(line: 250, column: 2, scope: !8230, inlinedAt: !8232)
!8250 = !DILocalVariable(name: "size", arg: 2, scope: !8241, file: !8242, line: 99, type: !604)
!8251 = !DILocation(line: 99, column: 89, scope: !8241, inlinedAt: !8249)
!8252 = !DILocalVariable(name: "v", arg: 1, scope: !8230, file: !8231, line: 248, type: !8222)
!8253 = !DILocation(line: 248, column: 29, scope: !8230, inlinedAt: !8232)
!8254 = !DILocalVariable(name: "hdev", arg: 1, scope: !4369, file: !3, line: 2386, type: !3986)
!8255 = !DILocation(line: 2386, column: 39, scope: !4369)
!8256 = !DILocalVariable(name: "ret", scope: !4369, file: !3, line: 2389, type: !169)
!8257 = !DILocation(line: 2389, column: 6, scope: !4369)
!8258 = !DILocalVariable(name: "__ret_warn_on", scope: !8259, file: !3, line: 2391, type: !169)
!8259 = distinct !DILexicalBlock(scope: !8260, file: !3, line: 2391, column: 6)
!8260 = distinct !DILexicalBlock(scope: !4369, file: !3, line: 2391, column: 6)
!8261 = !DILocation(line: 2391, column: 6, scope: !8259)
!8262 = !DILocation(line: 2391, column: 6, scope: !8263)
!8263 = distinct !DILexicalBlock(scope: !8259, file: !3, line: 2391, column: 6)
!8264 = !DILocation(line: 2391, column: 6, scope: !8265)
!8265 = distinct !DILexicalBlock(scope: !8263, file: !3, line: 2391, column: 6)
!8266 = !DILocation(line: 2391, column: 6, scope: !8267)
!8267 = distinct !DILexicalBlock(scope: !8265, file: !3, line: 2391, column: 6)
!8268 = !DILocation(line: 2391, column: 6, scope: !8269)
!8269 = distinct !DILexicalBlock(scope: !8265, file: !3, line: 2391, column: 6)
!8270 = !{i32 -2141880767, i32 -2141880738, i32 -2141880692, i32 -2141880634, i32 -2141880580, i32 -2141880526, i32 -2141880471, i32 -2141880440}
!8271 = !DILocation(line: 2391, column: 6, scope: !8272)
!8272 = distinct !DILexicalBlock(scope: !8265, file: !3, line: 2391, column: 6)
!8273 = !{i32 -2141880035, i32 -2141880028, i32 -2141879976, i32 -2141879945, i32 -2141879915}
!8274 = !DILocation(line: 2391, column: 6, scope: !8275)
!8275 = distinct !DILexicalBlock(scope: !8265, file: !3, line: 2391, column: 6)
!8276 = !DILocation(line: 2391, column: 6, scope: !8260)
!8277 = !DILocation(line: 2391, column: 6, scope: !4369)
!8278 = !DILocation(line: 2392, column: 3, scope: !8260)
!8279 = !DILocation(line: 2394, column: 34, scope: !4369)
!8280 = !DILocation(line: 2394, column: 17, scope: !4369)
!8281 = !DILocation(line: 2394, column: 2, scope: !4369)
!8282 = !DILocation(line: 2394, column: 8, scope: !4369)
!8283 = !DILocation(line: 2394, column: 15, scope: !4369)
!8284 = !DILocation(line: 2398, column: 17, scope: !8285)
!8285 = distinct !DILexicalBlock(scope: !4369, file: !3, line: 2398, column: 6)
!8286 = !DILocation(line: 2398, column: 6, scope: !8285)
!8287 = !DILocation(line: 2398, column: 6, scope: !4369)
!8288 = !DILocation(line: 2399, column: 3, scope: !8285)
!8289 = !DILocation(line: 2404, column: 8, scope: !8290)
!8290 = distinct !DILexicalBlock(scope: !4369, file: !3, line: 2404, column: 7)
!8291 = !DILocation(line: 2404, column: 14, scope: !8290)
!8292 = !DILocation(line: 2404, column: 25, scope: !8290)
!8293 = !DILocation(line: 2404, column: 7, scope: !4369)
!8294 = !DILocation(line: 2405, column: 3, scope: !8295)
!8295 = distinct !DILexicalBlock(scope: !8290, file: !3, line: 2404, column: 38)
!8296 = !DILocation(line: 2406, column: 3, scope: !8295)
!8297 = !DILocation(line: 2413, column: 8, scope: !4369)
!8298 = !DILocation(line: 2413, column: 14, scope: !4369)
!8299 = !DILocation(line: 2413, column: 25, scope: !4369)
!8300 = !DILocation(line: 2413, column: 31, scope: !4369)
!8301 = !DILocation(line: 2413, column: 6, scope: !4369)
!8302 = !DILocation(line: 2414, column: 6, scope: !8303)
!8303 = distinct !DILexicalBlock(scope: !4369, file: !3, line: 2414, column: 6)
!8304 = !DILocation(line: 2414, column: 6, scope: !4369)
!8305 = !DILocation(line: 2415, column: 10, scope: !8303)
!8306 = !DILocation(line: 2415, column: 3, scope: !8303)
!8307 = !DILocation(line: 2416, column: 7, scope: !8308)
!8308 = distinct !DILexicalBlock(scope: !4369, file: !3, line: 2416, column: 6)
!8309 = !DILocation(line: 2416, column: 13, scope: !8308)
!8310 = !DILocation(line: 2416, column: 6, scope: !4369)
!8311 = !DILocation(line: 2417, column: 3, scope: !8308)
!8312 = !DILocation(line: 2422, column: 6, scope: !8313)
!8313 = distinct !DILexicalBlock(scope: !4369, file: !3, line: 2422, column: 6)
!8314 = !DILocation(line: 2422, column: 6, scope: !4369)
!8315 = !DILocation(line: 2423, column: 3, scope: !8316)
!8316 = distinct !DILexicalBlock(scope: !8313, file: !3, line: 2422, column: 34)
!8317 = !DILocation(line: 2423, column: 9, scope: !8316)
!8318 = !DILocation(line: 2423, column: 15, scope: !8316)
!8319 = !DILocation(line: 2424, column: 2, scope: !8316)
!8320 = !DILocation(line: 2424, column: 14, scope: !8321)
!8321 = distinct !DILexicalBlock(scope: !8313, file: !3, line: 2424, column: 13)
!8322 = !DILocation(line: 2424, column: 20, scope: !8321)
!8323 = !DILocation(line: 2424, column: 26, scope: !8321)
!8324 = !DILocation(line: 2425, column: 8, scope: !8321)
!8325 = !DILocation(line: 2425, column: 14, scope: !8321)
!8326 = !DILocation(line: 2425, column: 21, scope: !8321)
!8327 = !DILocation(line: 2424, column: 13, scope: !8313)
!8328 = !DILocation(line: 2426, column: 25, scope: !8329)
!8329 = distinct !DILexicalBlock(scope: !8321, file: !3, line: 2425, column: 55)
!8330 = !DILocation(line: 2426, column: 9, scope: !8329)
!8331 = !DILocation(line: 2426, column: 7, scope: !8329)
!8332 = !DILocation(line: 2427, column: 7, scope: !8333)
!8333 = distinct !DILexicalBlock(scope: !8329, file: !3, line: 2427, column: 7)
!8334 = !DILocation(line: 2427, column: 7, scope: !8329)
!8335 = !DILocation(line: 2428, column: 4, scope: !8333)
!8336 = !DILocation(line: 2429, column: 2, scope: !8329)
!8337 = !DILocation(line: 2433, column: 16, scope: !4369)
!8338 = !DILocation(line: 2433, column: 22, scope: !4369)
!8339 = !DILocation(line: 2433, column: 50, scope: !4369)
!8340 = !DILocation(line: 2433, column: 56, scope: !4369)
!8341 = !DILocation(line: 2434, column: 8, scope: !4369)
!8342 = !DILocation(line: 2434, column: 14, scope: !4369)
!8343 = !DILocation(line: 2434, column: 22, scope: !4369)
!8344 = !DILocation(line: 2434, column: 28, scope: !4369)
!8345 = !DILocation(line: 250, column: 31, scope: !8230, inlinedAt: !8232)
!8346 = !DILocation(line: 101, column: 20, scope: !8241, inlinedAt: !8249)
!8347 = !DILocation(line: 101, column: 23, scope: !8241, inlinedAt: !8249)
!8348 = !DILocation(line: 101, column: 2, scope: !8241, inlinedAt: !8249)
!8349 = !DILocation(line: 102, column: 2, scope: !8241, inlinedAt: !8249)
!8350 = !DILocation(line: 251, column: 32, scope: !8230, inlinedAt: !8232)
!8351 = !DILocation(line: 286, column: 35, scope: !8225, inlinedAt: !8229)
!8352 = !DILocation(line: 165, column: 9, scope: !8218, inlinedAt: !8224)
!8353 = !{i32 -2146561046}
!8354 = !DILocation(line: 165, column: 11, scope: !8218, inlinedAt: !8224)
!8355 = !DILocation(line: 2433, column: 2, scope: !4369)
!8356 = !DILocation(line: 2436, column: 2, scope: !4369)
!8357 = !DILocation(line: 2436, column: 2, scope: !8358)
!8358 = distinct !DILexicalBlock(scope: !4369, file: !3, line: 2436, column: 2)
!8359 = !DILocation(line: 2437, column: 20, scope: !4369)
!8360 = !DILocation(line: 2437, column: 26, scope: !4369)
!8361 = !DILocation(line: 2437, column: 8, scope: !4369)
!8362 = !DILocation(line: 2437, column: 6, scope: !4369)
!8363 = !DILocation(line: 2438, column: 7, scope: !8364)
!8364 = distinct !DILexicalBlock(scope: !4369, file: !3, line: 2438, column: 6)
!8365 = !DILocation(line: 2438, column: 6, scope: !4369)
!8366 = !DILocation(line: 2439, column: 3, scope: !8364)
!8367 = !DILocation(line: 2439, column: 9, scope: !8364)
!8368 = !DILocation(line: 2439, column: 16, scope: !8364)
!8369 = !DILocation(line: 2441, column: 3, scope: !8364)
!8370 = !DILocation(line: 2441, column: 3, scope: !8371)
!8371 = distinct !DILexicalBlock(scope: !8364, file: !3, line: 2441, column: 3)
!8372 = !DILocation(line: 2443, column: 9, scope: !4369)
!8373 = !DILocation(line: 2443, column: 2, scope: !4369)
!8374 = !DILocation(line: 2444, column: 1, scope: !4369)
!8375 = !DILocalVariable(name: "hid", arg: 1, scope: !4471, file: !3, line: 867, type: !3986)
!8376 = !DILocation(line: 867, column: 47, scope: !4471)
!8377 = !DILocalVariable(name: "parser", scope: !4471, file: !3, line: 869, type: !4299)
!8378 = !DILocation(line: 869, column: 21, scope: !4471)
!8379 = !DILocalVariable(name: "item", scope: !4471, file: !3, line: 870, type: !4338)
!8380 = !DILocation(line: 870, column: 18, scope: !4471)
!8381 = !DILocalVariable(name: "start", scope: !4471, file: !3, line: 871, type: !3990)
!8382 = !DILocation(line: 871, column: 8, scope: !4471)
!8383 = !DILocation(line: 871, column: 16, scope: !4471)
!8384 = !DILocation(line: 871, column: 21, scope: !4471)
!8385 = !DILocalVariable(name: "end", scope: !4471, file: !3, line: 872, type: !3990)
!8386 = !DILocation(line: 872, column: 8, scope: !4471)
!8387 = !DILocation(line: 872, column: 14, scope: !4471)
!8388 = !DILocation(line: 872, column: 22, scope: !4471)
!8389 = !DILocation(line: 872, column: 27, scope: !4471)
!8390 = !DILocation(line: 872, column: 20, scope: !4471)
!8391 = !DILocation(line: 881, column: 11, scope: !4471)
!8392 = !DILocation(line: 881, column: 9, scope: !4471)
!8393 = !DILocation(line: 882, column: 7, scope: !8394)
!8394 = distinct !DILexicalBlock(scope: !4471, file: !3, line: 882, column: 6)
!8395 = !DILocation(line: 882, column: 6, scope: !4471)
!8396 = !DILocation(line: 883, column: 3, scope: !8394)
!8397 = !DILocation(line: 885, column: 19, scope: !4471)
!8398 = !DILocation(line: 885, column: 2, scope: !4471)
!8399 = !DILocation(line: 885, column: 10, scope: !4471)
!8400 = !DILocation(line: 885, column: 17, scope: !4471)
!8401 = !DILocation(line: 886, column: 2, scope: !4471)
!8402 = !DILocation(line: 886, column: 7, scope: !4471)
!8403 = !DILocation(line: 886, column: 13, scope: !4471)
!8404 = !DILocation(line: 893, column: 2, scope: !4471)
!8405 = !DILocation(line: 893, column: 29, scope: !4471)
!8406 = !DILocation(line: 893, column: 36, scope: !4471)
!8407 = !DILocation(line: 893, column: 18, scope: !4471)
!8408 = !DILocation(line: 893, column: 16, scope: !4471)
!8409 = !DILocation(line: 893, column: 49, scope: !4471)
!8410 = !DILocation(line: 894, column: 22, scope: !4471)
!8411 = !DILocation(line: 894, column: 3, scope: !4471)
!8412 = !DILocation(line: 894, column: 28, scope: !4471)
!8413 = distinct !{!8413, !8404, !8414}
!8414 = !DILocation(line: 894, column: 41, scope: !4471)
!8415 = !DILocation(line: 899, column: 7, scope: !8416)
!8416 = distinct !DILexicalBlock(scope: !4471, file: !3, line: 899, column: 6)
!8417 = !DILocation(line: 899, column: 15, scope: !8416)
!8418 = !DILocation(line: 899, column: 26, scope: !8416)
!8419 = !DILocation(line: 899, column: 52, scope: !8416)
!8420 = !DILocation(line: 900, column: 7, scope: !8416)
!8421 = !DILocation(line: 900, column: 12, scope: !8416)
!8422 = !DILocation(line: 900, column: 18, scope: !8416)
!8423 = !DILocation(line: 899, column: 6, scope: !4471)
!8424 = !DILocation(line: 901, column: 3, scope: !8416)
!8425 = !DILocation(line: 901, column: 8, scope: !8416)
!8426 = !DILocation(line: 901, column: 14, scope: !8416)
!8427 = !DILocation(line: 906, column: 10, scope: !4471)
!8428 = !DILocation(line: 906, column: 15, scope: !4471)
!8429 = !DILocation(line: 906, column: 2, scope: !4471)
!8430 = !DILocation(line: 908, column: 3, scope: !8431)
!8431 = distinct !DILexicalBlock(scope: !4471, file: !3, line: 906, column: 23)
!8432 = !DILocation(line: 908, column: 8, scope: !8431)
!8433 = !DILocation(line: 908, column: 14, scope: !8431)
!8434 = !DILocation(line: 909, column: 3, scope: !8431)
!8435 = !DILocation(line: 911, column: 7, scope: !8436)
!8436 = distinct !DILexicalBlock(scope: !8431, file: !3, line: 911, column: 7)
!8437 = !DILocation(line: 911, column: 12, scope: !8436)
!8438 = !DILocation(line: 911, column: 18, scope: !8436)
!8439 = !DILocation(line: 911, column: 7, scope: !8431)
!8440 = !DILocation(line: 912, column: 9, scope: !8441)
!8441 = distinct !DILexicalBlock(scope: !8436, file: !3, line: 912, column: 8)
!8442 = !DILocation(line: 912, column: 17, scope: !8441)
!8443 = !DILocation(line: 912, column: 28, scope: !8441)
!8444 = !DILocation(line: 913, column: 8, scope: !8441)
!8445 = !DILocation(line: 913, column: 12, scope: !8441)
!8446 = !DILocation(line: 913, column: 20, scope: !8441)
!8447 = !DILocation(line: 913, column: 31, scope: !8441)
!8448 = !DILocation(line: 912, column: 8, scope: !8436)
!8449 = !DILocation(line: 918, column: 5, scope: !8441)
!8450 = !DILocation(line: 918, column: 10, scope: !8441)
!8451 = !DILocation(line: 918, column: 16, scope: !8441)
!8452 = !DILocation(line: 913, column: 57, scope: !8441)
!8453 = !DILocation(line: 919, column: 3, scope: !8431)
!8454 = !DILocation(line: 922, column: 8, scope: !4471)
!8455 = !DILocation(line: 922, column: 16, scope: !4471)
!8456 = !DILocation(line: 922, column: 2, scope: !4471)
!8457 = !DILocation(line: 923, column: 8, scope: !4471)
!8458 = !DILocation(line: 923, column: 2, scope: !4471)
!8459 = !DILocation(line: 924, column: 2, scope: !4471)
!8460 = !DILocation(line: 925, column: 1, scope: !4471)
!8461 = !DILocalVariable(name: "lock", arg: 1, scope: !8462, file: !7818, line: 327, type: !1089)
!8462 = distinct !DISubprogram(name: "spinlock_check", scope: !7818, file: !7818, line: 327, type: !8463, scopeLine: 328, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !371)
!8463 = !DISubroutineType(types: !8464)
!8464 = !{!8465, !1089}
!8465 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !807, size: 64)
!8466 = !DILocation(line: 327, column: 67, scope: !8462, inlinedAt: !8467)
!8467 = distinct !DILocation(line: 2474, column: 2, scope: !8468)
!8468 = distinct !DILexicalBlock(scope: !4372, file: !3, line: 2474, column: 2)
!8469 = !DILocalVariable(name: "hdev", scope: !4372, file: !3, line: 2458, type: !3986)
!8470 = !DILocation(line: 2458, column: 21, scope: !4372)
!8471 = !DILocalVariable(name: "ret", scope: !4372, file: !3, line: 2459, type: !169)
!8472 = !DILocation(line: 2459, column: 6, scope: !4372)
!8473 = !DILocation(line: 2461, column: 9, scope: !4372)
!8474 = !DILocation(line: 2461, column: 7, scope: !4372)
!8475 = !DILocation(line: 2462, column: 6, scope: !8476)
!8476 = distinct !DILexicalBlock(scope: !4372, file: !3, line: 2462, column: 6)
!8477 = !DILocation(line: 2462, column: 11, scope: !8476)
!8478 = !DILocation(line: 2462, column: 6, scope: !4372)
!8479 = !DILocation(line: 2463, column: 18, scope: !8476)
!8480 = !DILocation(line: 2463, column: 10, scope: !8476)
!8481 = !DILocation(line: 2463, column: 3, scope: !8476)
!8482 = !DILocation(line: 2465, column: 21, scope: !4372)
!8483 = !DILocation(line: 2465, column: 27, scope: !4372)
!8484 = !DILocation(line: 2465, column: 2, scope: !4372)
!8485 = !DILocation(line: 2466, column: 2, scope: !4372)
!8486 = !DILocation(line: 2466, column: 8, scope: !4372)
!8487 = !DILocation(line: 2466, column: 12, scope: !4372)
!8488 = !DILocation(line: 2466, column: 20, scope: !4372)
!8489 = !DILocation(line: 2467, column: 2, scope: !4372)
!8490 = !DILocation(line: 2467, column: 8, scope: !4372)
!8491 = !DILocation(line: 2467, column: 12, scope: !4372)
!8492 = !DILocation(line: 2467, column: 16, scope: !4372)
!8493 = !DILocation(line: 2468, column: 31, scope: !4372)
!8494 = !DILocation(line: 2468, column: 37, scope: !4372)
!8495 = !DILocation(line: 2468, column: 2, scope: !4372)
!8496 = !DILocation(line: 2470, column: 19, scope: !4372)
!8497 = !DILocation(line: 2470, column: 2, scope: !4372)
!8498 = !DILocation(line: 2472, column: 2, scope: !4372)
!8499 = !DILocation(line: 2472, column: 2, scope: !8500)
!8500 = distinct !DILexicalBlock(scope: !4372, file: !3, line: 2472, column: 2)
!8501 = !DILocation(line: 2473, column: 18, scope: !4372)
!8502 = !DILocation(line: 2473, column: 24, scope: !4372)
!8503 = !DILocation(line: 2473, column: 2, scope: !4372)
!8504 = !DILocation(line: 2474, column: 2, scope: !4372)
!8505 = !DILocation(line: 2474, column: 2, scope: !8468)
!8506 = !DILocation(line: 329, column: 10, scope: !8462, inlinedAt: !8467)
!8507 = !DILocation(line: 329, column: 16, scope: !8462, inlinedAt: !8467)
!8508 = !DILocation(line: 2475, column: 13, scope: !4372)
!8509 = !DILocation(line: 2475, column: 19, scope: !4372)
!8510 = !DILocation(line: 2475, column: 2, scope: !4372)
!8511 = !DILocation(line: 2476, column: 2, scope: !4372)
!8512 = !DILocation(line: 2476, column: 2, scope: !8513)
!8513 = distinct !DILexicalBlock(scope: !4372, file: !3, line: 2476, column: 2)
!8514 = !DILocation(line: 2478, column: 9, scope: !4372)
!8515 = !DILocation(line: 2478, column: 2, scope: !4372)
!8516 = !DILocation(line: 2479, column: 1, scope: !4372)
!8517 = distinct !DISubprogram(name: "ERR_PTR", scope: !8518, file: !8518, line: 24, type: !8519, scopeLine: 25, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !371)
!8518 = !DIFile(filename: "./include/linux/err.h", directory: "/home/lizy2001/genbc/linux")
!8519 = !DISubroutineType(types: !8520)
!8520 = !{!114, !564}
!8521 = !DILocalVariable(name: "error", arg: 1, scope: !8517, file: !8518, line: 24, type: !564)
!8522 = !DILocation(line: 24, column: 48, scope: !8517)
!8523 = !DILocation(line: 26, column: 18, scope: !8517)
!8524 = !DILocation(line: 26, column: 9, scope: !8517)
!8525 = !DILocation(line: 26, column: 2, scope: !8517)
!8526 = distinct !DISubprogram(name: "hid_device_release", scope: !3, file: !3, line: 701, type: !3643, scopeLine: 702, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !371)
!8527 = !DILocalVariable(name: "dev", arg: 1, scope: !8526, file: !3, line: 701, type: !3620)
!8528 = !DILocation(line: 701, column: 47, scope: !8526)
!8529 = !DILocalVariable(name: "hid", scope: !8526, file: !3, line: 703, type: !3986)
!8530 = !DILocation(line: 703, column: 21, scope: !8526)
!8531 = !DILocalVariable(name: "__mptr", scope: !8532, file: !3, line: 703, type: !114)
!8532 = distinct !DILexicalBlock(scope: !8526, file: !3, line: 703, column: 27)
!8533 = !DILocation(line: 703, column: 27, scope: !8532)
!8534 = !DILocation(line: 703, column: 27, scope: !8535)
!8535 = distinct !DILexicalBlock(scope: !8532, file: !3, line: 703, column: 27)
!8536 = !DILocation(line: 705, column: 19, scope: !8526)
!8537 = !DILocation(line: 705, column: 2, scope: !8526)
!8538 = !DILocation(line: 706, column: 8, scope: !8526)
!8539 = !DILocation(line: 706, column: 13, scope: !8526)
!8540 = !DILocation(line: 706, column: 2, scope: !8526)
!8541 = !DILocation(line: 707, column: 8, scope: !8526)
!8542 = !DILocation(line: 707, column: 2, scope: !8526)
!8543 = !DILocation(line: 708, column: 1, scope: !8526)
!8544 = distinct !DISubprogram(name: "device_enable_async_suspend", scope: !73, file: !73, line: 685, type: !3643, scopeLine: 686, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !371)
!8545 = !DILocalVariable(name: "dev", arg: 1, scope: !8544, file: !73, line: 685, type: !3620)
!8546 = !DILocation(line: 685, column: 63, scope: !8544)
!8547 = !DILocation(line: 687, column: 7, scope: !8548)
!8548 = distinct !DILexicalBlock(scope: !8544, file: !73, line: 687, column: 6)
!8549 = !DILocation(line: 687, column: 12, scope: !8548)
!8550 = !DILocation(line: 687, column: 18, scope: !8548)
!8551 = !DILocation(line: 687, column: 6, scope: !8544)
!8552 = !DILocation(line: 688, column: 3, scope: !8548)
!8553 = !DILocation(line: 688, column: 8, scope: !8548)
!8554 = !DILocation(line: 688, column: 14, scope: !8548)
!8555 = !DILocation(line: 688, column: 28, scope: !8548)
!8556 = !DILocation(line: 689, column: 1, scope: !8544)
!8557 = distinct !DISubprogram(name: "INIT_LIST_HEAD", scope: !4835, file: !4835, line: 33, type: !8558, scopeLine: 34, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !371)
!8558 = !DISubroutineType(types: !8559)
!8559 = !{null, !122}
!8560 = !DILocalVariable(name: "list", arg: 1, scope: !8557, file: !4835, line: 33, type: !122)
!8561 = !DILocation(line: 33, column: 53, scope: !8557)
!8562 = !DILocation(line: 35, column: 2, scope: !8557)
!8563 = !DILocation(line: 35, column: 2, scope: !8564)
!8564 = distinct !DILexicalBlock(scope: !8557, file: !4835, line: 35, column: 2)
!8565 = !DILocation(line: 35, column: 2, scope: !8566)
!8566 = distinct !DILexicalBlock(scope: !8564, file: !4835, line: 35, column: 2)
!8567 = !DILocation(line: 35, column: 2, scope: !8568)
!8568 = distinct !DILexicalBlock(scope: !8564, file: !4835, line: 35, column: 2)
!8569 = !DILocation(line: 36, column: 15, scope: !8557)
!8570 = !DILocation(line: 36, column: 2, scope: !8557)
!8571 = !DILocation(line: 36, column: 8, scope: !8557)
!8572 = !DILocation(line: 36, column: 13, scope: !8557)
!8573 = !DILocation(line: 37, column: 1, scope: !8557)
!8574 = !DILocalVariable(name: "sem", arg: 1, scope: !4474, file: !4023, line: 31, type: !4477)
!8575 = !DILocation(line: 31, column: 48, scope: !4474)
!8576 = !DILocalVariable(name: "val", arg: 2, scope: !4474, file: !4023, line: 31, type: !169)
!8577 = !DILocation(line: 31, column: 57, scope: !4474)
!8578 = !DILocation(line: 34, column: 3, scope: !4474)
!8579 = !DILocation(line: 34, column: 28, scope: !4474)
!8580 = !DILocation(line: 34, column: 9, scope: !4474)
!8581 = !DILocation(line: 35, column: 2, scope: !4474)
!8582 = !DILocation(line: 35, column: 2, scope: !8583)
!8583 = distinct !DILexicalBlock(scope: !4474, file: !4023, line: 35, column: 2)
!8584 = !DILocation(line: 36, column: 1, scope: !4474)
!8585 = distinct !DISubprogram(name: "hid_destroy_device", scope: !3, file: !3, line: 2502, type: !4056, scopeLine: 2503, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !371)
!8586 = !DILocalVariable(name: "hdev", arg: 1, scope: !8585, file: !3, line: 2502, type: !3986)
!8587 = !DILocation(line: 2502, column: 44, scope: !8585)
!8588 = !DILocation(line: 2504, column: 20, scope: !8585)
!8589 = !DILocation(line: 2504, column: 2, scope: !8585)
!8590 = !DILocation(line: 2505, column: 14, scope: !8585)
!8591 = !DILocation(line: 2505, column: 20, scope: !8585)
!8592 = !DILocation(line: 2505, column: 2, scope: !8585)
!8593 = !DILocation(line: 2506, column: 1, scope: !8585)
!8594 = distinct !DISubprogram(name: "hid_remove_device", scope: !3, file: !3, line: 2482, type: !4056, scopeLine: 2483, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !371)
!8595 = !DILocalVariable(name: "hdev", arg: 1, scope: !8594, file: !3, line: 2482, type: !3986)
!8596 = !DILocation(line: 2482, column: 50, scope: !8594)
!8597 = !DILocation(line: 2484, column: 6, scope: !8598)
!8598 = distinct !DILexicalBlock(scope: !8594, file: !3, line: 2484, column: 6)
!8599 = !DILocation(line: 2484, column: 12, scope: !8598)
!8600 = !DILocation(line: 2484, column: 19, scope: !8598)
!8601 = !DILocation(line: 2484, column: 6, scope: !8594)
!8602 = !DILocation(line: 2485, column: 15, scope: !8603)
!8603 = distinct !DILexicalBlock(scope: !8598, file: !3, line: 2484, column: 37)
!8604 = !DILocation(line: 2485, column: 21, scope: !8603)
!8605 = !DILocation(line: 2485, column: 3, scope: !8603)
!8606 = !DILocation(line: 2486, column: 3, scope: !8603)
!8607 = !DILocation(line: 2486, column: 3, scope: !8608)
!8608 = distinct !DILexicalBlock(scope: !8603, file: !3, line: 2486, column: 3)
!8609 = !DILocation(line: 2487, column: 3, scope: !8603)
!8610 = !DILocation(line: 2487, column: 9, scope: !8603)
!8611 = !DILocation(line: 2487, column: 16, scope: !8603)
!8612 = !DILocation(line: 2488, column: 2, scope: !8603)
!8613 = !DILocation(line: 2489, column: 8, scope: !8594)
!8614 = !DILocation(line: 2489, column: 14, scope: !8594)
!8615 = !DILocation(line: 2489, column: 2, scope: !8594)
!8616 = !DILocation(line: 2490, column: 2, scope: !8594)
!8617 = !DILocation(line: 2490, column: 8, scope: !8594)
!8618 = !DILocation(line: 2490, column: 18, scope: !8594)
!8619 = !DILocation(line: 2491, column: 2, scope: !8594)
!8620 = !DILocation(line: 2491, column: 8, scope: !8594)
!8621 = !DILocation(line: 2491, column: 18, scope: !8594)
!8622 = !DILocation(line: 2492, column: 1, scope: !8594)
!8623 = distinct !DISubprogram(name: "__hid_register_driver", scope: !3, file: !3, line: 2540, type: !8624, scopeLine: 2542, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !371)
!8624 = !DISubroutineType(types: !8625)
!8625 = !{!169, !4030, !662, !190}
!8626 = !DILocation(line: 327, column: 67, scope: !8462, inlinedAt: !8627)
!8627 = distinct !DILocation(line: 2551, column: 2, scope: !8628)
!8628 = distinct !DILexicalBlock(scope: !8623, file: !3, line: 2551, column: 2)
!8629 = !DILocalVariable(name: "hdrv", arg: 1, scope: !8623, file: !3, line: 2540, type: !4030)
!8630 = !DILocation(line: 2540, column: 46, scope: !8623)
!8631 = !DILocalVariable(name: "owner", arg: 2, scope: !8623, file: !3, line: 2540, type: !662)
!8632 = !DILocation(line: 2540, column: 67, scope: !8623)
!8633 = !DILocalVariable(name: "mod_name", arg: 3, scope: !8623, file: !3, line: 2541, type: !190)
!8634 = !DILocation(line: 2541, column: 15, scope: !8623)
!8635 = !DILocalVariable(name: "ret", scope: !8623, file: !3, line: 2543, type: !169)
!8636 = !DILocation(line: 2543, column: 6, scope: !8623)
!8637 = !DILocation(line: 2545, column: 22, scope: !8623)
!8638 = !DILocation(line: 2545, column: 28, scope: !8623)
!8639 = !DILocation(line: 2545, column: 2, scope: !8623)
!8640 = !DILocation(line: 2545, column: 8, scope: !8623)
!8641 = !DILocation(line: 2545, column: 15, scope: !8623)
!8642 = !DILocation(line: 2545, column: 20, scope: !8623)
!8643 = !DILocation(line: 2546, column: 2, scope: !8623)
!8644 = !DILocation(line: 2546, column: 8, scope: !8623)
!8645 = !DILocation(line: 2546, column: 15, scope: !8623)
!8646 = !DILocation(line: 2546, column: 19, scope: !8623)
!8647 = !DILocation(line: 2547, column: 23, scope: !8623)
!8648 = !DILocation(line: 2547, column: 2, scope: !8623)
!8649 = !DILocation(line: 2547, column: 8, scope: !8623)
!8650 = !DILocation(line: 2547, column: 15, scope: !8623)
!8651 = !DILocation(line: 2547, column: 21, scope: !8623)
!8652 = !DILocation(line: 2548, column: 26, scope: !8623)
!8653 = !DILocation(line: 2548, column: 2, scope: !8623)
!8654 = !DILocation(line: 2548, column: 8, scope: !8623)
!8655 = !DILocation(line: 2548, column: 15, scope: !8623)
!8656 = !DILocation(line: 2548, column: 24, scope: !8623)
!8657 = !DILocation(line: 2550, column: 18, scope: !8623)
!8658 = !DILocation(line: 2550, column: 24, scope: !8623)
!8659 = !DILocation(line: 2550, column: 2, scope: !8623)
!8660 = !DILocation(line: 2551, column: 2, scope: !8623)
!8661 = !DILocation(line: 2551, column: 2, scope: !8628)
!8662 = !DILocation(line: 329, column: 10, scope: !8462, inlinedAt: !8627)
!8663 = !DILocation(line: 329, column: 16, scope: !8462, inlinedAt: !8627)
!8664 = !DILocation(line: 2553, column: 25, scope: !8623)
!8665 = !DILocation(line: 2553, column: 31, scope: !8623)
!8666 = !DILocation(line: 2553, column: 8, scope: !8623)
!8667 = !DILocation(line: 2553, column: 6, scope: !8623)
!8668 = !DILocation(line: 2555, column: 6, scope: !8669)
!8669 = distinct !DILexicalBlock(scope: !8623, file: !3, line: 2555, column: 6)
!8670 = !DILocation(line: 2555, column: 10, scope: !8669)
!8671 = !DILocation(line: 2555, column: 6, scope: !8623)
!8672 = !DILocation(line: 2556, column: 3, scope: !8669)
!8673 = !DILocation(line: 2559, column: 9, scope: !8623)
!8674 = !DILocation(line: 2559, column: 2, scope: !8623)
!8675 = distinct !DISubprogram(name: "__hid_bus_driver_added", scope: !3, file: !3, line: 2523, type: !8676, scopeLine: 2524, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !371)
!8676 = !DISubroutineType(types: !8677)
!8677 = !{!169, !3691, !114}
!8678 = !DILocalVariable(name: "drv", arg: 1, scope: !8675, file: !3, line: 2523, type: !3691)
!8679 = !DILocation(line: 2523, column: 57, scope: !8675)
!8680 = !DILocalVariable(name: "data", arg: 2, scope: !8675, file: !3, line: 2523, type: !114)
!8681 = !DILocation(line: 2523, column: 68, scope: !8675)
!8682 = !DILocalVariable(name: "hdrv", scope: !8675, file: !3, line: 2525, type: !4030)
!8683 = !DILocation(line: 2525, column: 21, scope: !8675)
!8684 = !DILocalVariable(name: "__mptr", scope: !8685, file: !3, line: 2525, type: !114)
!8685 = distinct !DILexicalBlock(scope: !8675, file: !3, line: 2525, column: 28)
!8686 = !DILocation(line: 2525, column: 28, scope: !8685)
!8687 = !DILocation(line: 2525, column: 28, scope: !8688)
!8688 = distinct !DILexicalBlock(scope: !8685, file: !3, line: 2525, column: 28)
!8689 = !DILocation(line: 2527, column: 6, scope: !8690)
!8690 = distinct !DILexicalBlock(scope: !8675, file: !3, line: 2527, column: 6)
!8691 = !DILocation(line: 2527, column: 12, scope: !8690)
!8692 = !DILocation(line: 2527, column: 6, scope: !8675)
!8693 = !DILocation(line: 2528, column: 41, scope: !8694)
!8694 = distinct !DILexicalBlock(scope: !8690, file: !3, line: 2527, column: 19)
!8695 = !DILocation(line: 2528, column: 3, scope: !8694)
!8696 = !DILocation(line: 2530, column: 2, scope: !8694)
!8697 = !DILocation(line: 2532, column: 2, scope: !8675)
!8698 = distinct !DISubprogram(name: "hid_unregister_driver", scope: !3, file: !3, line: 2563, type: !8699, scopeLine: 2564, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !371)
!8699 = !DISubroutineType(types: !8700)
!8700 = !{null, !4030}
!8701 = !DILocalVariable(name: "hdrv", arg: 1, scope: !8698, file: !3, line: 2563, type: !4030)
!8702 = !DILocation(line: 2563, column: 47, scope: !8698)
!8703 = !DILocation(line: 2565, column: 21, scope: !8698)
!8704 = !DILocation(line: 2565, column: 27, scope: !8698)
!8705 = !DILocation(line: 2565, column: 2, scope: !8698)
!8706 = !DILocation(line: 2566, column: 18, scope: !8698)
!8707 = !DILocation(line: 2566, column: 2, scope: !8698)
!8708 = !DILocation(line: 2568, column: 40, scope: !8698)
!8709 = !DILocation(line: 2568, column: 2, scope: !8698)
!8710 = !DILocation(line: 2569, column: 1, scope: !8698)
!8711 = distinct !DISubprogram(name: "hid_free_dynids", scope: !3, file: !3, line: 2177, type: !8699, scopeLine: 2178, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !371)
!8712 = !DILocation(line: 392, column: 53, scope: !7817, inlinedAt: !8713)
!8713 = distinct !DILocation(line: 2186, column: 2, scope: !8711)
!8714 = !DILocation(line: 352, column: 51, scope: !7831, inlinedAt: !8715)
!8715 = distinct !DILocation(line: 2181, column: 2, scope: !8711)
!8716 = !DILocalVariable(name: "hdrv", arg: 1, scope: !8711, file: !3, line: 2177, type: !4030)
!8717 = !DILocation(line: 2177, column: 48, scope: !8711)
!8718 = !DILocalVariable(name: "dynid", scope: !8711, file: !3, line: 2179, type: !4201)
!8719 = !DILocation(line: 2179, column: 20, scope: !8711)
!8720 = !DILocalVariable(name: "n", scope: !8711, file: !3, line: 2179, type: !4201)
!8721 = !DILocation(line: 2179, column: 28, scope: !8711)
!8722 = !DILocation(line: 2181, column: 13, scope: !8711)
!8723 = !DILocation(line: 2181, column: 19, scope: !8711)
!8724 = !DILocation(line: 354, column: 2, scope: !7843, inlinedAt: !8715)
!8725 = !DILocation(line: 354, column: 2, scope: !7846, inlinedAt: !8715)
!8726 = !DILocalVariable(name: "__mptr", scope: !8727, file: !3, line: 2182, type: !114)
!8727 = distinct !DILexicalBlock(scope: !8728, file: !3, line: 2182, column: 2)
!8728 = distinct !DILexicalBlock(scope: !8711, file: !3, line: 2182, column: 2)
!8729 = !DILocation(line: 2182, column: 2, scope: !8727)
!8730 = !DILocation(line: 2182, column: 2, scope: !8731)
!8731 = distinct !DILexicalBlock(scope: !8727, file: !3, line: 2182, column: 2)
!8732 = !DILocation(line: 2182, column: 2, scope: !8728)
!8733 = !DILocalVariable(name: "__mptr", scope: !8734, file: !3, line: 2182, type: !114)
!8734 = distinct !DILexicalBlock(scope: !8728, file: !3, line: 2182, column: 2)
!8735 = !DILocation(line: 2182, column: 2, scope: !8734)
!8736 = !DILocation(line: 2182, column: 2, scope: !8737)
!8737 = distinct !DILexicalBlock(scope: !8734, file: !3, line: 2182, column: 2)
!8738 = !DILocation(line: 2182, column: 2, scope: !8739)
!8739 = distinct !DILexicalBlock(scope: !8728, file: !3, line: 2182, column: 2)
!8740 = !DILocation(line: 2183, column: 13, scope: !8741)
!8741 = distinct !DILexicalBlock(scope: !8739, file: !3, line: 2182, column: 60)
!8742 = !DILocation(line: 2183, column: 20, scope: !8741)
!8743 = !DILocation(line: 2183, column: 3, scope: !8741)
!8744 = !DILocation(line: 2184, column: 9, scope: !8741)
!8745 = !DILocation(line: 2184, column: 3, scope: !8741)
!8746 = !DILocation(line: 2185, column: 2, scope: !8741)
!8747 = !DILocalVariable(name: "__mptr", scope: !8748, file: !3, line: 2182, type: !114)
!8748 = distinct !DILexicalBlock(scope: !8739, file: !3, line: 2182, column: 2)
!8749 = !DILocation(line: 2182, column: 2, scope: !8748)
!8750 = !DILocation(line: 2182, column: 2, scope: !8751)
!8751 = distinct !DILexicalBlock(scope: !8748, file: !3, line: 2182, column: 2)
!8752 = distinct !{!8752, !8732, !8753}
!8753 = !DILocation(line: 2185, column: 2, scope: !8728)
!8754 = !DILocation(line: 2186, column: 15, scope: !8711)
!8755 = !DILocation(line: 2186, column: 21, scope: !8711)
!8756 = !DILocation(line: 394, column: 2, scope: !7862, inlinedAt: !8713)
!8757 = !DILocation(line: 394, column: 2, scope: !7865, inlinedAt: !8713)
!8758 = !DILocation(line: 2187, column: 1, scope: !8711)
!8759 = distinct !DISubprogram(name: "__bus_removed_driver", scope: !3, file: !3, line: 2535, type: !8676, scopeLine: 2536, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !371)
!8760 = !DILocalVariable(name: "drv", arg: 1, scope: !8759, file: !3, line: 2535, type: !3691)
!8761 = !DILocation(line: 2535, column: 55, scope: !8759)
!8762 = !DILocalVariable(name: "data", arg: 2, scope: !8759, file: !3, line: 2535, type: !114)
!8763 = !DILocation(line: 2535, column: 66, scope: !8759)
!8764 = !DILocation(line: 2537, column: 9, scope: !8759)
!8765 = !DILocation(line: 2537, column: 2, scope: !8759)
!8766 = distinct !DISubprogram(name: "hid_check_keys_pressed", scope: !3, file: !3, line: 2572, type: !4110, scopeLine: 2573, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !371)
!8767 = !DILocalVariable(name: "hid", arg: 1, scope: !8766, file: !3, line: 2572, type: !3986)
!8768 = !DILocation(line: 2572, column: 47, scope: !8766)
!8769 = !DILocalVariable(name: "hidinput", scope: !8766, file: !3, line: 2574, type: !179)
!8770 = !DILocation(line: 2574, column: 20, scope: !8766)
!8771 = !DILocalVariable(name: "i", scope: !8766, file: !3, line: 2575, type: !169)
!8772 = !DILocation(line: 2575, column: 6, scope: !8766)
!8773 = !DILocation(line: 2577, column: 8, scope: !8774)
!8774 = distinct !DILexicalBlock(scope: !8766, file: !3, line: 2577, column: 6)
!8775 = !DILocation(line: 2577, column: 13, scope: !8774)
!8776 = !DILocation(line: 2577, column: 21, scope: !8774)
!8777 = !DILocation(line: 2577, column: 6, scope: !8766)
!8778 = !DILocation(line: 2578, column: 3, scope: !8774)
!8779 = !DILocalVariable(name: "__mptr", scope: !8780, file: !3, line: 2580, type: !114)
!8780 = distinct !DILexicalBlock(scope: !8781, file: !3, line: 2580, column: 2)
!8781 = distinct !DILexicalBlock(scope: !8766, file: !3, line: 2580, column: 2)
!8782 = !DILocation(line: 2580, column: 2, scope: !8780)
!8783 = !DILocation(line: 2580, column: 2, scope: !8784)
!8784 = distinct !DILexicalBlock(scope: !8780, file: !3, line: 2580, column: 2)
!8785 = !DILocation(line: 2580, column: 2, scope: !8781)
!8786 = !DILocation(line: 2580, column: 2, scope: !8787)
!8787 = distinct !DILexicalBlock(scope: !8781, file: !3, line: 2580, column: 2)
!8788 = !DILocation(line: 2581, column: 10, scope: !8789)
!8789 = distinct !DILexicalBlock(scope: !8790, file: !3, line: 2581, column: 3)
!8790 = distinct !DILexicalBlock(scope: !8787, file: !3, line: 2580, column: 52)
!8791 = !DILocation(line: 2581, column: 8, scope: !8789)
!8792 = !DILocation(line: 2581, column: 15, scope: !8793)
!8793 = distinct !DILexicalBlock(scope: !8789, file: !3, line: 2581, column: 3)
!8794 = !DILocation(line: 2581, column: 17, scope: !8793)
!8795 = !DILocation(line: 2581, column: 3, scope: !8789)
!8796 = !DILocation(line: 2582, column: 8, scope: !8797)
!8797 = distinct !DILexicalBlock(scope: !8793, file: !3, line: 2582, column: 8)
!8798 = !DILocation(line: 2582, column: 18, scope: !8797)
!8799 = !DILocation(line: 2582, column: 25, scope: !8797)
!8800 = !DILocation(line: 2582, column: 29, scope: !8797)
!8801 = !DILocation(line: 2582, column: 8, scope: !8793)
!8802 = !DILocation(line: 2583, column: 5, scope: !8797)
!8803 = !DILocation(line: 2582, column: 30, scope: !8797)
!8804 = !DILocation(line: 2581, column: 44, scope: !8793)
!8805 = !DILocation(line: 2581, column: 3, scope: !8793)
!8806 = distinct !{!8806, !8795, !8807}
!8807 = !DILocation(line: 2583, column: 12, scope: !8789)
!8808 = !DILocation(line: 2584, column: 2, scope: !8790)
!8809 = !DILocalVariable(name: "__mptr", scope: !8810, file: !3, line: 2580, type: !114)
!8810 = distinct !DILexicalBlock(scope: !8787, file: !3, line: 2580, column: 2)
!8811 = !DILocation(line: 2580, column: 2, scope: !8810)
!8812 = !DILocation(line: 2580, column: 2, scope: !8813)
!8813 = distinct !DILexicalBlock(scope: !8810, file: !3, line: 2580, column: 2)
!8814 = distinct !{!8814, !8785, !8815}
!8815 = !DILocation(line: 2584, column: 2, scope: !8781)
!8816 = !DILocation(line: 2586, column: 2, scope: !8766)
!8817 = !DILocation(line: 2587, column: 1, scope: !8766)
!8818 = distinct !DISubprogram(name: "hid_exit", scope: !3, file: !3, line: 2618, type: !1890, scopeLine: 2619, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !371)
!8819 = !DILocation(line: 2620, column: 2, scope: !8818)
!8820 = !DILocation(line: 2620, column: 2, scope: !8821)
!8821 = distinct !DILexicalBlock(scope: !8818, file: !3, line: 2620, column: 2)
!8822 = !DILocation(line: 2621, column: 2, scope: !8818)
!8823 = !DILocation(line: 2622, column: 2, scope: !8818)
!8824 = !DILocation(line: 2623, column: 2, scope: !8818)
!8825 = !DILocation(line: 2624, column: 1, scope: !8818)
!8826 = distinct !DISubprogram(name: "hidraw_exit", scope: !4191, file: !4191, line: 45, type: !1890, scopeLine: 45, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !371)
!8827 = !DILocation(line: 45, column: 40, scope: !8826)
!8828 = distinct !DISubprogram(name: "hid_init", scope: !3, file: !3, line: 2591, type: !8829, scopeLine: 2592, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !371)
!8829 = !DISubroutineType(types: !8830)
!8830 = !{!169}
!8831 = !DILocalVariable(name: "ret", scope: !8828, file: !3, line: 2593, type: !169)
!8832 = !DILocation(line: 2593, column: 6, scope: !8828)
!8833 = !DILocation(line: 2595, column: 6, scope: !8834)
!8834 = distinct !DILexicalBlock(scope: !8828, file: !3, line: 2595, column: 6)
!8835 = !DILocation(line: 2595, column: 6, scope: !8828)
!8836 = !DILocation(line: 2596, column: 3, scope: !8834)
!8837 = !DILocation(line: 2599, column: 8, scope: !8828)
!8838 = !DILocation(line: 2599, column: 6, scope: !8828)
!8839 = !DILocation(line: 2600, column: 6, scope: !8840)
!8840 = distinct !DILexicalBlock(scope: !8828, file: !3, line: 2600, column: 6)
!8841 = !DILocation(line: 2600, column: 6, scope: !8828)
!8842 = !DILocation(line: 2601, column: 3, scope: !8843)
!8843 = distinct !DILexicalBlock(scope: !8840, file: !3, line: 2600, column: 11)
!8844 = !DILocation(line: 2602, column: 3, scope: !8843)
!8845 = !DILocation(line: 2605, column: 8, scope: !8828)
!8846 = !DILocation(line: 2605, column: 6, scope: !8828)
!8847 = !DILocation(line: 2606, column: 6, scope: !8848)
!8848 = distinct !DILexicalBlock(scope: !8828, file: !3, line: 2606, column: 6)
!8849 = !DILocation(line: 2606, column: 6, scope: !8828)
!8850 = !DILocation(line: 2607, column: 3, scope: !8848)
!8851 = !DILocation(line: 2609, column: 2, scope: !8828)
!8852 = !DILocation(line: 2609, column: 2, scope: !8853)
!8853 = distinct !DILexicalBlock(scope: !8828, file: !3, line: 2609, column: 2)
!8854 = !DILocation(line: 2611, column: 2, scope: !8828)
!8855 = !DILabel(scope: !8828, name: "err_bus", file: !3, line: 2612)
!8856 = !DILocation(line: 2612, column: 1, scope: !8828)
!8857 = !DILocation(line: 2613, column: 2, scope: !8828)
!8858 = !DILabel(scope: !8828, name: "err", file: !3, line: 2614)
!8859 = !DILocation(line: 2614, column: 1, scope: !8828)
!8860 = !DILocation(line: 2615, column: 9, scope: !8828)
!8861 = !DILocation(line: 2615, column: 2, scope: !8828)
!8862 = !DILocation(line: 2616, column: 1, scope: !8828)
!8863 = distinct !DISubprogram(name: "__list_add", scope: !4835, file: !4835, line: 63, type: !8864, scopeLine: 66, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !371)
!8864 = !DISubroutineType(types: !8865)
!8865 = !{null, !122, !122, !122}
!8866 = !DILocalVariable(name: "new", arg: 1, scope: !8863, file: !4835, line: 63, type: !122)
!8867 = !DILocation(line: 63, column: 49, scope: !8863)
!8868 = !DILocalVariable(name: "prev", arg: 2, scope: !8863, file: !4835, line: 64, type: !122)
!8869 = !DILocation(line: 64, column: 28, scope: !8863)
!8870 = !DILocalVariable(name: "next", arg: 3, scope: !8863, file: !4835, line: 65, type: !122)
!8871 = !DILocation(line: 65, column: 28, scope: !8863)
!8872 = !DILocation(line: 67, column: 24, scope: !8873)
!8873 = distinct !DILexicalBlock(scope: !8863, file: !4835, line: 67, column: 6)
!8874 = !DILocation(line: 67, column: 29, scope: !8873)
!8875 = !DILocation(line: 67, column: 35, scope: !8873)
!8876 = !DILocation(line: 67, column: 7, scope: !8873)
!8877 = !DILocation(line: 67, column: 6, scope: !8863)
!8878 = !DILocation(line: 68, column: 3, scope: !8873)
!8879 = !DILocation(line: 70, column: 15, scope: !8863)
!8880 = !DILocation(line: 70, column: 2, scope: !8863)
!8881 = !DILocation(line: 70, column: 8, scope: !8863)
!8882 = !DILocation(line: 70, column: 13, scope: !8863)
!8883 = !DILocation(line: 71, column: 14, scope: !8863)
!8884 = !DILocation(line: 71, column: 2, scope: !8863)
!8885 = !DILocation(line: 71, column: 7, scope: !8863)
!8886 = !DILocation(line: 71, column: 12, scope: !8863)
!8887 = !DILocation(line: 72, column: 14, scope: !8863)
!8888 = !DILocation(line: 72, column: 2, scope: !8863)
!8889 = !DILocation(line: 72, column: 7, scope: !8863)
!8890 = !DILocation(line: 72, column: 12, scope: !8863)
!8891 = !DILocation(line: 73, column: 2, scope: !8863)
!8892 = !DILocation(line: 73, column: 2, scope: !8893)
!8893 = distinct !DILexicalBlock(scope: !8863, file: !4835, line: 73, column: 2)
!8894 = !DILocation(line: 73, column: 2, scope: !8895)
!8895 = distinct !DILexicalBlock(scope: !8893, file: !4835, line: 73, column: 2)
!8896 = !DILocation(line: 73, column: 2, scope: !8897)
!8897 = distinct !DILexicalBlock(scope: !8893, file: !4835, line: 73, column: 2)
!8898 = !DILocation(line: 74, column: 1, scope: !8863)
!8899 = distinct !DISubprogram(name: "__list_add_valid", scope: !4835, file: !4835, line: 45, type: !8900, scopeLine: 48, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !371)
!8900 = !DISubroutineType(types: !8901)
!8901 = !{!514, !122, !122, !122}
!8902 = !DILocalVariable(name: "new", arg: 1, scope: !8899, file: !4835, line: 45, type: !122)
!8903 = !DILocation(line: 45, column: 55, scope: !8899)
!8904 = !DILocalVariable(name: "prev", arg: 2, scope: !8899, file: !4835, line: 46, type: !122)
!8905 = !DILocation(line: 46, column: 23, scope: !8899)
!8906 = !DILocalVariable(name: "next", arg: 3, scope: !8899, file: !4835, line: 47, type: !122)
!8907 = !DILocation(line: 47, column: 23, scope: !8899)
!8908 = !DILocation(line: 49, column: 2, scope: !8899)
!8909 = distinct !DISubprogram(name: "hid_calculate_multiplier", scope: !3, file: !3, line: 1015, type: !8910, scopeLine: 1017, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !371)
!8910 = !DISubroutineType(types: !8911)
!8911 = !{!169, !3986, !130}
!8912 = !DILocalVariable(name: "hid", arg: 1, scope: !8909, file: !3, line: 1015, type: !3986)
!8913 = !DILocation(line: 1015, column: 56, scope: !8909)
!8914 = !DILocalVariable(name: "multiplier", arg: 2, scope: !8909, file: !3, line: 1016, type: !130)
!8915 = !DILocation(line: 1016, column: 28, scope: !8909)
!8916 = !DILocalVariable(name: "m", scope: !8909, file: !3, line: 1018, type: !169)
!8917 = !DILocation(line: 1018, column: 6, scope: !8909)
!8918 = !DILocalVariable(name: "v", scope: !8909, file: !3, line: 1019, type: !168)
!8919 = !DILocation(line: 1019, column: 8, scope: !8909)
!8920 = !DILocation(line: 1019, column: 13, scope: !8909)
!8921 = !DILocation(line: 1019, column: 25, scope: !8909)
!8922 = !DILocation(line: 1019, column: 12, scope: !8909)
!8923 = !DILocalVariable(name: "lmin", scope: !8909, file: !3, line: 1020, type: !168)
!8924 = !DILocation(line: 1020, column: 8, scope: !8909)
!8925 = !DILocation(line: 1020, column: 15, scope: !8909)
!8926 = !DILocation(line: 1020, column: 27, scope: !8909)
!8927 = !DILocalVariable(name: "lmax", scope: !8909, file: !3, line: 1021, type: !168)
!8928 = !DILocation(line: 1021, column: 8, scope: !8909)
!8929 = !DILocation(line: 1021, column: 15, scope: !8909)
!8930 = !DILocation(line: 1021, column: 27, scope: !8909)
!8931 = !DILocalVariable(name: "pmin", scope: !8909, file: !3, line: 1022, type: !168)
!8932 = !DILocation(line: 1022, column: 8, scope: !8909)
!8933 = !DILocation(line: 1022, column: 15, scope: !8909)
!8934 = !DILocation(line: 1022, column: 27, scope: !8909)
!8935 = !DILocalVariable(name: "pmax", scope: !8909, file: !3, line: 1023, type: !168)
!8936 = !DILocation(line: 1023, column: 8, scope: !8909)
!8937 = !DILocation(line: 1023, column: 15, scope: !8909)
!8938 = !DILocation(line: 1023, column: 27, scope: !8909)
!8939 = !DILocation(line: 1032, column: 6, scope: !8940)
!8940 = distinct !DILexicalBlock(scope: !8909, file: !3, line: 1032, column: 6)
!8941 = !DILocation(line: 1032, column: 13, scope: !8940)
!8942 = !DILocation(line: 1032, column: 11, scope: !8940)
!8943 = !DILocation(line: 1032, column: 18, scope: !8940)
!8944 = !DILocation(line: 1032, column: 6, scope: !8909)
!8945 = !DILocation(line: 1033, column: 3, scope: !8940)
!8946 = !DILocation(line: 1038, column: 8, scope: !8909)
!8947 = !DILocation(line: 1038, column: 12, scope: !8909)
!8948 = !DILocation(line: 1038, column: 10, scope: !8909)
!8949 = !DILocation(line: 1038, column: 19, scope: !8909)
!8950 = !DILocation(line: 1038, column: 26, scope: !8909)
!8951 = !DILocation(line: 1038, column: 24, scope: !8909)
!8952 = !DILocation(line: 1038, column: 17, scope: !8909)
!8953 = !DILocation(line: 1038, column: 35, scope: !8909)
!8954 = !DILocation(line: 1038, column: 42, scope: !8909)
!8955 = !DILocation(line: 1038, column: 40, scope: !8909)
!8956 = !DILocation(line: 1038, column: 32, scope: !8909)
!8957 = !DILocation(line: 1038, column: 50, scope: !8909)
!8958 = !DILocation(line: 1038, column: 48, scope: !8909)
!8959 = !DILocation(line: 1038, column: 4, scope: !8909)
!8960 = !DILocation(line: 1039, column: 6, scope: !8961)
!8961 = distinct !DILexicalBlock(scope: !8909, file: !3, line: 1039, column: 6)
!8962 = !DILocation(line: 1039, column: 6, scope: !8909)
!8963 = !DILocation(line: 1040, column: 3, scope: !8964)
!8964 = distinct !DILexicalBlock(scope: !8961, file: !3, line: 1039, column: 48)
!8965 = !DILocation(line: 1043, column: 2, scope: !8964)
!8966 = !DILocation(line: 1046, column: 6, scope: !8967)
!8967 = distinct !DILexicalBlock(scope: !8909, file: !3, line: 1046, column: 6)
!8968 = !DILocation(line: 1046, column: 6, scope: !8909)
!8969 = !DILocation(line: 1047, column: 3, scope: !8970)
!8970 = distinct !DILexicalBlock(scope: !8967, file: !3, line: 1046, column: 47)
!8971 = !DILocation(line: 1048, column: 5, scope: !8970)
!8972 = !DILocation(line: 1049, column: 2, scope: !8970)
!8973 = !DILocation(line: 1051, column: 9, scope: !8909)
!8974 = !DILocation(line: 1051, column: 2, scope: !8909)
!8975 = !DILocation(line: 1052, column: 1, scope: !8909)
!8976 = distinct !DISubprogram(name: "hid_apply_multiplier_to_field", scope: !3, file: !3, line: 1054, type: !8977, scopeLine: 1058, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !371)
!8977 = !DISubroutineType(types: !8978)
!8978 = !{null, !3986, !130, !3995, !169}
!8979 = !DILocalVariable(name: "hid", arg: 1, scope: !8976, file: !3, line: 1054, type: !3986)
!8980 = !DILocation(line: 1054, column: 62, scope: !8976)
!8981 = !DILocalVariable(name: "field", arg: 2, scope: !8976, file: !3, line: 1055, type: !130)
!8982 = !DILocation(line: 1055, column: 26, scope: !8976)
!8983 = !DILocalVariable(name: "multiplier_collection", arg: 3, scope: !8976, file: !3, line: 1056, type: !3995)
!8984 = !DILocation(line: 1056, column: 31, scope: !8976)
!8985 = !DILocalVariable(name: "effective_multiplier", arg: 4, scope: !8976, file: !3, line: 1057, type: !169)
!8986 = !DILocation(line: 1057, column: 12, scope: !8976)
!8987 = !DILocalVariable(name: "collection", scope: !8976, file: !3, line: 1059, type: !3995)
!8988 = !DILocation(line: 1059, column: 25, scope: !8976)
!8989 = !DILocalVariable(name: "usage", scope: !8976, file: !3, line: 1060, type: !137)
!8990 = !DILocation(line: 1060, column: 20, scope: !8976)
!8991 = !DILocalVariable(name: "i", scope: !8976, file: !3, line: 1061, type: !169)
!8992 = !DILocation(line: 1061, column: 6, scope: !8976)
!8993 = !DILocation(line: 1069, column: 9, scope: !8994)
!8994 = distinct !DILexicalBlock(scope: !8976, file: !3, line: 1069, column: 2)
!8995 = !DILocation(line: 1069, column: 7, scope: !8994)
!8996 = !DILocation(line: 1069, column: 14, scope: !8997)
!8997 = distinct !DILexicalBlock(scope: !8994, file: !3, line: 1069, column: 2)
!8998 = !DILocation(line: 1069, column: 18, scope: !8997)
!8999 = !DILocation(line: 1069, column: 25, scope: !8997)
!9000 = !DILocation(line: 1069, column: 16, scope: !8997)
!9001 = !DILocation(line: 1069, column: 2, scope: !8994)
!9002 = !DILocation(line: 1070, column: 12, scope: !9003)
!9003 = distinct !DILexicalBlock(scope: !8997, file: !3, line: 1069, column: 40)
!9004 = !DILocation(line: 1070, column: 19, scope: !9003)
!9005 = !DILocation(line: 1070, column: 25, scope: !9003)
!9006 = !DILocation(line: 1070, column: 9, scope: !9003)
!9007 = !DILocation(line: 1072, column: 17, scope: !9003)
!9008 = !DILocation(line: 1072, column: 22, scope: !9003)
!9009 = !DILocation(line: 1072, column: 33, scope: !9003)
!9010 = !DILocation(line: 1072, column: 40, scope: !9003)
!9011 = !DILocation(line: 1072, column: 14, scope: !9003)
!9012 = !DILocation(line: 1073, column: 3, scope: !9003)
!9013 = !DILocation(line: 1073, column: 10, scope: !9003)
!9014 = !DILocation(line: 1073, column: 22, scope: !9003)
!9015 = !DILocation(line: 1073, column: 33, scope: !9003)
!9016 = !DILocation(line: 1073, column: 39, scope: !9003)
!9017 = !DILocation(line: 1074, column: 10, scope: !9003)
!9018 = !DILocation(line: 1074, column: 24, scope: !9003)
!9019 = !DILocation(line: 1074, column: 21, scope: !9003)
!9020 = !DILocation(line: 0, scope: !9003)
!9021 = !DILocation(line: 1075, column: 18, scope: !9003)
!9022 = !DILocation(line: 1075, column: 23, scope: !9003)
!9023 = !DILocation(line: 1075, column: 34, scope: !9003)
!9024 = !DILocation(line: 1075, column: 46, scope: !9003)
!9025 = !DILocation(line: 1075, column: 15, scope: !9003)
!9026 = distinct !{!9026, !9012, !9027}
!9027 = !DILocation(line: 1075, column: 56, scope: !9003)
!9028 = !DILocation(line: 1077, column: 7, scope: !9029)
!9029 = distinct !DILexicalBlock(scope: !9003, file: !3, line: 1077, column: 7)
!9030 = !DILocation(line: 1077, column: 19, scope: !9029)
!9031 = !DILocation(line: 1077, column: 30, scope: !9029)
!9032 = !DILocation(line: 1077, column: 36, scope: !9029)
!9033 = !DILocation(line: 1078, column: 7, scope: !9029)
!9034 = !DILocation(line: 1078, column: 29, scope: !9029)
!9035 = !DILocation(line: 1077, column: 7, scope: !9003)
!9036 = !DILocation(line: 1079, column: 35, scope: !9029)
!9037 = !DILocation(line: 1079, column: 4, scope: !9029)
!9038 = !DILocation(line: 1079, column: 11, scope: !9029)
!9039 = !DILocation(line: 1079, column: 33, scope: !9029)
!9040 = !DILocation(line: 1081, column: 2, scope: !9003)
!9041 = !DILocation(line: 1069, column: 36, scope: !8997)
!9042 = !DILocation(line: 1069, column: 2, scope: !8997)
!9043 = distinct !{!9043, !9001, !9044}
!9044 = !DILocation(line: 1081, column: 2, scope: !8994)
!9045 = !DILocation(line: 1082, column: 1, scope: !8976)
!9046 = distinct !DISubprogram(name: "hid_concatenate_last_usage_page", scope: !3, file: !3, line: 572, type: !9047, scopeLine: 573, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !371)
!9047 = !DISubroutineType(types: !9048)
!9048 = !{null, !4299}
!9049 = !DILocalVariable(name: "parser", arg: 1, scope: !9046, file: !3, line: 572, type: !4299)
!9050 = !DILocation(line: 572, column: 64, scope: !9046)
!9051 = !DILocalVariable(name: "i", scope: !9046, file: !3, line: 574, type: !169)
!9052 = !DILocation(line: 574, column: 6, scope: !9046)
!9053 = !DILocalVariable(name: "usage_page", scope: !9046, file: !3, line: 575, type: !7)
!9054 = !DILocation(line: 575, column: 15, scope: !9046)
!9055 = !DILocalVariable(name: "current_page", scope: !9046, file: !3, line: 576, type: !7)
!9056 = !DILocation(line: 576, column: 15, scope: !9046)
!9057 = !DILocation(line: 578, column: 7, scope: !9058)
!9058 = distinct !DILexicalBlock(scope: !9046, file: !3, line: 578, column: 6)
!9059 = !DILocation(line: 578, column: 15, scope: !9058)
!9060 = !DILocation(line: 578, column: 21, scope: !9058)
!9061 = !DILocation(line: 578, column: 6, scope: !9046)
!9062 = !DILocation(line: 579, column: 3, scope: !9058)
!9063 = !DILocation(line: 581, column: 15, scope: !9046)
!9064 = !DILocation(line: 581, column: 23, scope: !9046)
!9065 = !DILocation(line: 581, column: 30, scope: !9046)
!9066 = !DILocation(line: 581, column: 13, scope: !9046)
!9067 = !DILocation(line: 587, column: 11, scope: !9068)
!9068 = distinct !DILexicalBlock(scope: !9046, file: !3, line: 587, column: 2)
!9069 = !DILocation(line: 587, column: 19, scope: !9068)
!9070 = !DILocation(line: 587, column: 25, scope: !9068)
!9071 = !DILocation(line: 587, column: 37, scope: !9068)
!9072 = !DILocation(line: 587, column: 9, scope: !9068)
!9073 = !DILocation(line: 587, column: 7, scope: !9068)
!9074 = !DILocation(line: 587, column: 42, scope: !9075)
!9075 = distinct !DILexicalBlock(scope: !9068, file: !3, line: 587, column: 2)
!9076 = !DILocation(line: 587, column: 44, scope: !9075)
!9077 = !DILocation(line: 587, column: 2, scope: !9068)
!9078 = !DILocation(line: 588, column: 7, scope: !9079)
!9079 = distinct !DILexicalBlock(scope: !9080, file: !3, line: 588, column: 7)
!9080 = distinct !DILexicalBlock(scope: !9075, file: !3, line: 587, column: 55)
!9081 = !DILocation(line: 588, column: 15, scope: !9079)
!9082 = !DILocation(line: 588, column: 21, scope: !9079)
!9083 = !DILocation(line: 588, column: 32, scope: !9079)
!9084 = !DILocation(line: 588, column: 35, scope: !9079)
!9085 = !DILocation(line: 588, column: 7, scope: !9080)
!9086 = !DILocation(line: 590, column: 4, scope: !9079)
!9087 = !DILocation(line: 592, column: 18, scope: !9080)
!9088 = !DILocation(line: 592, column: 26, scope: !9080)
!9089 = !DILocation(line: 592, column: 32, scope: !9080)
!9090 = !DILocation(line: 592, column: 38, scope: !9080)
!9091 = !DILocation(line: 592, column: 41, scope: !9080)
!9092 = !DILocation(line: 592, column: 16, scope: !9080)
!9093 = !DILocation(line: 593, column: 7, scope: !9094)
!9094 = distinct !DILexicalBlock(scope: !9080, file: !3, line: 593, column: 7)
!9095 = !DILocation(line: 593, column: 23, scope: !9094)
!9096 = !DILocation(line: 593, column: 20, scope: !9094)
!9097 = !DILocation(line: 593, column: 7, scope: !9080)
!9098 = !DILocation(line: 594, column: 4, scope: !9094)
!9099 = !DILocation(line: 596, column: 18, scope: !9080)
!9100 = !DILocation(line: 596, column: 26, scope: !9080)
!9101 = !DILocation(line: 596, column: 3, scope: !9080)
!9102 = !DILocation(line: 597, column: 2, scope: !9080)
!9103 = !DILocation(line: 587, column: 51, scope: !9075)
!9104 = !DILocation(line: 587, column: 2, scope: !9075)
!9105 = distinct !{!9105, !9077, !9106}
!9106 = !DILocation(line: 597, column: 2, scope: !9068)
!9107 = !DILocation(line: 598, column: 1, scope: !9046)
!9108 = distinct !DISubprogram(name: "item_udata", scope: !3, file: !3, line: 343, type: !9109, scopeLine: 344, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !371)
!9109 = !DISubroutineType(types: !9110)
!9110 = !{!440, !4337}
!9111 = !DILocalVariable(name: "item", arg: 1, scope: !9108, file: !3, line: 343, type: !4337)
!9112 = !DILocation(line: 343, column: 40, scope: !9108)
!9113 = !DILocation(line: 345, column: 10, scope: !9108)
!9114 = !DILocation(line: 345, column: 16, scope: !9108)
!9115 = !DILocation(line: 345, column: 2, scope: !9108)
!9116 = !DILocation(line: 346, column: 17, scope: !9117)
!9117 = distinct !DILexicalBlock(scope: !9108, file: !3, line: 345, column: 22)
!9118 = !DILocation(line: 346, column: 23, scope: !9117)
!9119 = !DILocation(line: 346, column: 28, scope: !9117)
!9120 = !DILocation(line: 346, column: 10, scope: !9117)
!9121 = !DILocation(line: 347, column: 17, scope: !9117)
!9122 = !DILocation(line: 347, column: 23, scope: !9117)
!9123 = !DILocation(line: 347, column: 28, scope: !9117)
!9124 = !DILocation(line: 347, column: 10, scope: !9117)
!9125 = !DILocation(line: 348, column: 17, scope: !9117)
!9126 = !DILocation(line: 348, column: 23, scope: !9117)
!9127 = !DILocation(line: 348, column: 28, scope: !9117)
!9128 = !DILocation(line: 348, column: 10, scope: !9117)
!9129 = !DILocation(line: 350, column: 2, scope: !9108)
!9130 = !DILocation(line: 351, column: 1, scope: !9108)
!9131 = distinct !DISubprogram(name: "open_collection", scope: !3, file: !3, line: 121, type: !9132, scopeLine: 122, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !371)
!9132 = !DISubroutineType(types: !9133)
!9133 = !{!169, !4299, !7}
!9134 = !DILocation(line: 445, column: 72, scope: !4566, inlinedAt: !9135)
!9135 = distinct !DILocation(line: 552, column: 10, scope: !4571, inlinedAt: !9136)
!9136 = distinct !DILocation(line: 145, column: 16, scope: !9137)
!9137 = distinct !DILexicalBlock(scope: !9138, file: !3, line: 144, column: 72)
!9138 = distinct !DILexicalBlock(scope: !9131, file: !3, line: 144, column: 6)
!9139 = !DILocation(line: 446, column: 9, scope: !4566, inlinedAt: !9135)
!9140 = !DILocation(line: 446, column: 23, scope: !4566, inlinedAt: !9135)
!9141 = !DILocation(line: 448, column: 8, scope: !4566, inlinedAt: !9135)
!9142 = !DILocation(line: 318, column: 67, scope: !4582, inlinedAt: !9143)
!9143 = distinct !DILocation(line: 553, column: 20, scope: !4571, inlinedAt: !9136)
!9144 = !DILocation(line: 346, column: 58, scope: !4588, inlinedAt: !9145)
!9145 = distinct !DILocation(line: 547, column: 11, scope: !4571, inlinedAt: !9136)
!9146 = !DILocation(line: 472, column: 28, scope: !4594, inlinedAt: !9147)
!9147 = distinct !DILocation(line: 481, column: 9, scope: !4599, inlinedAt: !9148)
!9148 = distinct !DILocation(line: 545, column: 11, scope: !4601, inlinedAt: !9136)
!9149 = !DILocation(line: 472, column: 40, scope: !4594, inlinedAt: !9147)
!9150 = !DILocation(line: 472, column: 60, scope: !4594, inlinedAt: !9147)
!9151 = !DILocation(line: 478, column: 51, scope: !4599, inlinedAt: !9148)
!9152 = !DILocation(line: 478, column: 63, scope: !4599, inlinedAt: !9148)
!9153 = !DILocation(line: 480, column: 15, scope: !4599, inlinedAt: !9148)
!9154 = !DILocation(line: 538, column: 45, scope: !4573, inlinedAt: !9136)
!9155 = !DILocation(line: 538, column: 57, scope: !4573, inlinedAt: !9136)
!9156 = !DILocation(line: 542, column: 16, scope: !4571, inlinedAt: !9136)
!9157 = !DILocalVariable(name: "parser", arg: 1, scope: !9131, file: !3, line: 121, type: !4299)
!9158 = !DILocation(line: 121, column: 47, scope: !9131)
!9159 = !DILocalVariable(name: "type", arg: 2, scope: !9131, file: !3, line: 121, type: !7)
!9160 = !DILocation(line: 121, column: 64, scope: !9131)
!9161 = !DILocalVariable(name: "collection", scope: !9131, file: !3, line: 123, type: !3995)
!9162 = !DILocation(line: 123, column: 25, scope: !9131)
!9163 = !DILocalVariable(name: "usage", scope: !9131, file: !3, line: 124, type: !7)
!9164 = !DILocation(line: 124, column: 11, scope: !9131)
!9165 = !DILocalVariable(name: "collection_index", scope: !9131, file: !3, line: 125, type: !169)
!9166 = !DILocation(line: 125, column: 6, scope: !9131)
!9167 = !DILocation(line: 127, column: 10, scope: !9131)
!9168 = !DILocation(line: 127, column: 18, scope: !9131)
!9169 = !DILocation(line: 127, column: 24, scope: !9131)
!9170 = !DILocation(line: 127, column: 8, scope: !9131)
!9171 = !DILocation(line: 129, column: 6, scope: !9172)
!9172 = distinct !DILexicalBlock(scope: !9131, file: !3, line: 129, column: 6)
!9173 = !DILocation(line: 129, column: 14, scope: !9172)
!9174 = !DILocation(line: 129, column: 38, scope: !9172)
!9175 = !DILocation(line: 129, column: 46, scope: !9172)
!9176 = !DILocation(line: 129, column: 35, scope: !9172)
!9177 = !DILocation(line: 129, column: 6, scope: !9131)
!9178 = !DILocalVariable(name: "collection_stack", scope: !9179, file: !3, line: 130, type: !244)
!9179 = distinct !DILexicalBlock(scope: !9172, file: !3, line: 129, column: 69)
!9180 = !DILocation(line: 130, column: 17, scope: !9179)
!9181 = !DILocalVariable(name: "new_size", scope: !9179, file: !3, line: 131, type: !7)
!9182 = !DILocation(line: 131, column: 16, scope: !9179)
!9183 = !DILocation(line: 131, column: 27, scope: !9179)
!9184 = !DILocation(line: 131, column: 35, scope: !9179)
!9185 = !DILocation(line: 131, column: 57, scope: !9179)
!9186 = !DILocation(line: 134, column: 31, scope: !9179)
!9187 = !DILocation(line: 134, column: 39, scope: !9179)
!9188 = !DILocation(line: 135, column: 10, scope: !9179)
!9189 = !DILocation(line: 135, column: 19, scope: !9179)
!9190 = !DILocation(line: 134, column: 22, scope: !9179)
!9191 = !DILocation(line: 134, column: 20, scope: !9179)
!9192 = !DILocation(line: 137, column: 8, scope: !9193)
!9193 = distinct !DILexicalBlock(scope: !9179, file: !3, line: 137, column: 7)
!9194 = !DILocation(line: 137, column: 7, scope: !9179)
!9195 = !DILocation(line: 138, column: 4, scope: !9193)
!9196 = !DILocation(line: 140, column: 30, scope: !9179)
!9197 = !DILocation(line: 140, column: 3, scope: !9179)
!9198 = !DILocation(line: 140, column: 11, scope: !9179)
!9199 = !DILocation(line: 140, column: 28, scope: !9179)
!9200 = !DILocation(line: 141, column: 35, scope: !9179)
!9201 = !DILocation(line: 141, column: 3, scope: !9179)
!9202 = !DILocation(line: 141, column: 11, scope: !9179)
!9203 = !DILocation(line: 141, column: 33, scope: !9179)
!9204 = !DILocation(line: 142, column: 2, scope: !9179)
!9205 = !DILocation(line: 144, column: 6, scope: !9138)
!9206 = !DILocation(line: 144, column: 14, scope: !9138)
!9207 = !DILocation(line: 144, column: 22, scope: !9138)
!9208 = !DILocation(line: 144, column: 39, scope: !9138)
!9209 = !DILocation(line: 144, column: 47, scope: !9138)
!9210 = !DILocation(line: 144, column: 55, scope: !9138)
!9211 = !DILocation(line: 144, column: 36, scope: !9138)
!9212 = !DILocation(line: 144, column: 6, scope: !9131)
!9213 = !DILocation(line: 147, column: 10, scope: !9137)
!9214 = !DILocation(line: 147, column: 18, scope: !9137)
!9215 = !DILocation(line: 147, column: 26, scope: !9137)
!9216 = !DILocation(line: 146, column: 5, scope: !9137)
!9217 = !DILocation(line: 540, column: 27, scope: !4572, inlinedAt: !9136)
!9218 = !DILocation(line: 540, column: 6, scope: !4572, inlinedAt: !9136)
!9219 = !DILocation(line: 540, column: 6, scope: !4573, inlinedAt: !9136)
!9220 = !DILocation(line: 544, column: 7, scope: !4601, inlinedAt: !9136)
!9221 = !DILocation(line: 544, column: 12, scope: !4601, inlinedAt: !9136)
!9222 = !DILocation(line: 544, column: 7, scope: !4571, inlinedAt: !9136)
!9223 = !DILocation(line: 545, column: 25, scope: !4601, inlinedAt: !9136)
!9224 = !DILocation(line: 545, column: 31, scope: !4601, inlinedAt: !9136)
!9225 = !DILocation(line: 480, column: 33, scope: !4599, inlinedAt: !9148)
!9226 = !DILocation(line: 480, column: 23, scope: !4599, inlinedAt: !9148)
!9227 = !DILocation(line: 481, column: 29, scope: !4599, inlinedAt: !9148)
!9228 = !DILocation(line: 481, column: 35, scope: !4599, inlinedAt: !9148)
!9229 = !DILocation(line: 481, column: 42, scope: !4599, inlinedAt: !9148)
!9230 = !DILocation(line: 474, column: 23, scope: !4594, inlinedAt: !9147)
!9231 = !DILocation(line: 474, column: 29, scope: !4594, inlinedAt: !9147)
!9232 = !DILocation(line: 474, column: 36, scope: !4594, inlinedAt: !9147)
!9233 = !DILocation(line: 474, column: 9, scope: !4594, inlinedAt: !9147)
!9234 = !DILocation(line: 545, column: 4, scope: !4601, inlinedAt: !9136)
!9235 = !DILocation(line: 547, column: 25, scope: !4571, inlinedAt: !9136)
!9236 = !DILocation(line: 348, column: 7, scope: !4645, inlinedAt: !9145)
!9237 = !DILocation(line: 348, column: 6, scope: !4588, inlinedAt: !9145)
!9238 = !DILocation(line: 349, column: 3, scope: !4645, inlinedAt: !9145)
!9239 = !DILocation(line: 351, column: 6, scope: !4649, inlinedAt: !9145)
!9240 = !DILocation(line: 351, column: 11, scope: !4649, inlinedAt: !9145)
!9241 = !DILocation(line: 351, column: 6, scope: !4588, inlinedAt: !9145)
!9242 = !DILocation(line: 352, column: 3, scope: !4649, inlinedAt: !9145)
!9243 = !DILocation(line: 354, column: 32, scope: !4654, inlinedAt: !9145)
!9244 = !DILocation(line: 354, column: 37, scope: !4654, inlinedAt: !9145)
!9245 = !DILocation(line: 354, column: 42, scope: !4654, inlinedAt: !9145)
!9246 = !DILocation(line: 354, column: 45, scope: !4654, inlinedAt: !9145)
!9247 = !DILocation(line: 354, column: 50, scope: !4654, inlinedAt: !9145)
!9248 = !DILocation(line: 354, column: 6, scope: !4588, inlinedAt: !9145)
!9249 = !DILocation(line: 355, column: 3, scope: !4654, inlinedAt: !9145)
!9250 = !DILocation(line: 356, column: 32, scope: !4662, inlinedAt: !9145)
!9251 = !DILocation(line: 356, column: 37, scope: !4662, inlinedAt: !9145)
!9252 = !DILocation(line: 356, column: 43, scope: !4662, inlinedAt: !9145)
!9253 = !DILocation(line: 356, column: 46, scope: !4662, inlinedAt: !9145)
!9254 = !DILocation(line: 356, column: 51, scope: !4662, inlinedAt: !9145)
!9255 = !DILocation(line: 356, column: 6, scope: !4588, inlinedAt: !9145)
!9256 = !DILocation(line: 357, column: 3, scope: !4662, inlinedAt: !9145)
!9257 = !DILocation(line: 358, column: 6, scope: !4670, inlinedAt: !9145)
!9258 = !DILocation(line: 358, column: 11, scope: !4670, inlinedAt: !9145)
!9259 = !DILocation(line: 358, column: 6, scope: !4588, inlinedAt: !9145)
!9260 = !DILocation(line: 358, column: 26, scope: !4670, inlinedAt: !9145)
!9261 = !DILocation(line: 359, column: 6, scope: !4675, inlinedAt: !9145)
!9262 = !DILocation(line: 359, column: 11, scope: !4675, inlinedAt: !9145)
!9263 = !DILocation(line: 359, column: 6, scope: !4588, inlinedAt: !9145)
!9264 = !DILocation(line: 359, column: 26, scope: !4675, inlinedAt: !9145)
!9265 = !DILocation(line: 360, column: 6, scope: !4680, inlinedAt: !9145)
!9266 = !DILocation(line: 360, column: 11, scope: !4680, inlinedAt: !9145)
!9267 = !DILocation(line: 360, column: 6, scope: !4588, inlinedAt: !9145)
!9268 = !DILocation(line: 360, column: 26, scope: !4680, inlinedAt: !9145)
!9269 = !DILocation(line: 361, column: 6, scope: !4685, inlinedAt: !9145)
!9270 = !DILocation(line: 361, column: 11, scope: !4685, inlinedAt: !9145)
!9271 = !DILocation(line: 361, column: 6, scope: !4588, inlinedAt: !9145)
!9272 = !DILocation(line: 361, column: 26, scope: !4685, inlinedAt: !9145)
!9273 = !DILocation(line: 362, column: 6, scope: !4690, inlinedAt: !9145)
!9274 = !DILocation(line: 362, column: 11, scope: !4690, inlinedAt: !9145)
!9275 = !DILocation(line: 362, column: 6, scope: !4588, inlinedAt: !9145)
!9276 = !DILocation(line: 362, column: 26, scope: !4690, inlinedAt: !9145)
!9277 = !DILocation(line: 363, column: 6, scope: !4695, inlinedAt: !9145)
!9278 = !DILocation(line: 363, column: 11, scope: !4695, inlinedAt: !9145)
!9279 = !DILocation(line: 363, column: 6, scope: !4588, inlinedAt: !9145)
!9280 = !DILocation(line: 363, column: 26, scope: !4695, inlinedAt: !9145)
!9281 = !DILocation(line: 364, column: 6, scope: !4700, inlinedAt: !9145)
!9282 = !DILocation(line: 364, column: 11, scope: !4700, inlinedAt: !9145)
!9283 = !DILocation(line: 364, column: 6, scope: !4588, inlinedAt: !9145)
!9284 = !DILocation(line: 364, column: 26, scope: !4700, inlinedAt: !9145)
!9285 = !DILocation(line: 365, column: 6, scope: !4705, inlinedAt: !9145)
!9286 = !DILocation(line: 365, column: 11, scope: !4705, inlinedAt: !9145)
!9287 = !DILocation(line: 365, column: 6, scope: !4588, inlinedAt: !9145)
!9288 = !DILocation(line: 365, column: 26, scope: !4705, inlinedAt: !9145)
!9289 = !DILocation(line: 366, column: 6, scope: !4710, inlinedAt: !9145)
!9290 = !DILocation(line: 366, column: 11, scope: !4710, inlinedAt: !9145)
!9291 = !DILocation(line: 366, column: 6, scope: !4588, inlinedAt: !9145)
!9292 = !DILocation(line: 366, column: 26, scope: !4710, inlinedAt: !9145)
!9293 = !DILocation(line: 367, column: 6, scope: !4715, inlinedAt: !9145)
!9294 = !DILocation(line: 367, column: 11, scope: !4715, inlinedAt: !9145)
!9295 = !DILocation(line: 367, column: 6, scope: !4588, inlinedAt: !9145)
!9296 = !DILocation(line: 367, column: 26, scope: !4715, inlinedAt: !9145)
!9297 = !DILocation(line: 368, column: 6, scope: !4720, inlinedAt: !9145)
!9298 = !DILocation(line: 368, column: 11, scope: !4720, inlinedAt: !9145)
!9299 = !DILocation(line: 368, column: 6, scope: !4588, inlinedAt: !9145)
!9300 = !DILocation(line: 368, column: 26, scope: !4720, inlinedAt: !9145)
!9301 = !DILocation(line: 369, column: 6, scope: !4725, inlinedAt: !9145)
!9302 = !DILocation(line: 369, column: 11, scope: !4725, inlinedAt: !9145)
!9303 = !DILocation(line: 369, column: 6, scope: !4588, inlinedAt: !9145)
!9304 = !DILocation(line: 369, column: 26, scope: !4725, inlinedAt: !9145)
!9305 = !DILocation(line: 370, column: 6, scope: !4730, inlinedAt: !9145)
!9306 = !DILocation(line: 370, column: 11, scope: !4730, inlinedAt: !9145)
!9307 = !DILocation(line: 370, column: 6, scope: !4588, inlinedAt: !9145)
!9308 = !DILocation(line: 370, column: 26, scope: !4730, inlinedAt: !9145)
!9309 = !DILocation(line: 371, column: 6, scope: !4735, inlinedAt: !9145)
!9310 = !DILocation(line: 371, column: 11, scope: !4735, inlinedAt: !9145)
!9311 = !DILocation(line: 371, column: 6, scope: !4588, inlinedAt: !9145)
!9312 = !DILocation(line: 371, column: 26, scope: !4735, inlinedAt: !9145)
!9313 = !DILocation(line: 372, column: 6, scope: !4740, inlinedAt: !9145)
!9314 = !DILocation(line: 372, column: 11, scope: !4740, inlinedAt: !9145)
!9315 = !DILocation(line: 372, column: 6, scope: !4588, inlinedAt: !9145)
!9316 = !DILocation(line: 372, column: 26, scope: !4740, inlinedAt: !9145)
!9317 = !DILocation(line: 373, column: 6, scope: !4745, inlinedAt: !9145)
!9318 = !DILocation(line: 373, column: 11, scope: !4745, inlinedAt: !9145)
!9319 = !DILocation(line: 373, column: 6, scope: !4588, inlinedAt: !9145)
!9320 = !DILocation(line: 373, column: 26, scope: !4745, inlinedAt: !9145)
!9321 = !DILocation(line: 374, column: 6, scope: !4750, inlinedAt: !9145)
!9322 = !DILocation(line: 374, column: 11, scope: !4750, inlinedAt: !9145)
!9323 = !DILocation(line: 374, column: 6, scope: !4588, inlinedAt: !9145)
!9324 = !DILocation(line: 374, column: 26, scope: !4750, inlinedAt: !9145)
!9325 = !DILocation(line: 375, column: 6, scope: !4755, inlinedAt: !9145)
!9326 = !DILocation(line: 375, column: 11, scope: !4755, inlinedAt: !9145)
!9327 = !DILocation(line: 375, column: 6, scope: !4588, inlinedAt: !9145)
!9328 = !DILocation(line: 375, column: 27, scope: !4755, inlinedAt: !9145)
!9329 = !DILocation(line: 376, column: 6, scope: !4760, inlinedAt: !9145)
!9330 = !DILocation(line: 376, column: 11, scope: !4760, inlinedAt: !9145)
!9331 = !DILocation(line: 376, column: 6, scope: !4588, inlinedAt: !9145)
!9332 = !DILocation(line: 376, column: 32, scope: !4760, inlinedAt: !9145)
!9333 = !DILocation(line: 377, column: 6, scope: !4765, inlinedAt: !9145)
!9334 = !DILocation(line: 377, column: 11, scope: !4765, inlinedAt: !9145)
!9335 = !DILocation(line: 377, column: 6, scope: !4588, inlinedAt: !9145)
!9336 = !DILocation(line: 377, column: 32, scope: !4765, inlinedAt: !9145)
!9337 = !DILocation(line: 378, column: 6, scope: !4770, inlinedAt: !9145)
!9338 = !DILocation(line: 378, column: 11, scope: !4770, inlinedAt: !9145)
!9339 = !DILocation(line: 378, column: 6, scope: !4588, inlinedAt: !9145)
!9340 = !DILocation(line: 378, column: 32, scope: !4770, inlinedAt: !9145)
!9341 = !DILocation(line: 379, column: 6, scope: !4775, inlinedAt: !9145)
!9342 = !DILocation(line: 379, column: 11, scope: !4775, inlinedAt: !9145)
!9343 = !DILocation(line: 379, column: 6, scope: !4588, inlinedAt: !9145)
!9344 = !DILocation(line: 379, column: 33, scope: !4775, inlinedAt: !9145)
!9345 = !DILocation(line: 380, column: 6, scope: !4780, inlinedAt: !9145)
!9346 = !DILocation(line: 380, column: 11, scope: !4780, inlinedAt: !9145)
!9347 = !DILocation(line: 380, column: 6, scope: !4588, inlinedAt: !9145)
!9348 = !DILocation(line: 380, column: 33, scope: !4780, inlinedAt: !9145)
!9349 = !DILocation(line: 381, column: 6, scope: !4785, inlinedAt: !9145)
!9350 = !DILocation(line: 381, column: 11, scope: !4785, inlinedAt: !9145)
!9351 = !DILocation(line: 381, column: 6, scope: !4588, inlinedAt: !9145)
!9352 = !DILocation(line: 381, column: 33, scope: !4785, inlinedAt: !9145)
!9353 = !DILocation(line: 382, column: 2, scope: !4790, inlinedAt: !9145)
!9354 = !DILocation(line: 382, column: 2, scope: !4794, inlinedAt: !9145)
!9355 = !DILocation(line: 382, column: 2, scope: !4795, inlinedAt: !9145)
!9356 = !DILocation(line: 386, column: 1, scope: !4588, inlinedAt: !9145)
!9357 = !DILocation(line: 547, column: 9, scope: !4571, inlinedAt: !9136)
!9358 = !DILocation(line: 549, column: 8, scope: !4801, inlinedAt: !9136)
!9359 = !DILocation(line: 549, column: 7, scope: !4571, inlinedAt: !9136)
!9360 = !DILocation(line: 550, column: 4, scope: !4801, inlinedAt: !9136)
!9361 = !DILocation(line: 553, column: 33, scope: !4571, inlinedAt: !9136)
!9362 = !DILocation(line: 325, column: 6, scope: !4806, inlinedAt: !9143)
!9363 = !DILocation(line: 325, column: 6, scope: !4582, inlinedAt: !9143)
!9364 = !DILocation(line: 326, column: 3, scope: !4806, inlinedAt: !9143)
!9365 = !DILocation(line: 332, column: 9, scope: !4582, inlinedAt: !9143)
!9366 = !DILocation(line: 332, column: 15, scope: !4582, inlinedAt: !9143)
!9367 = !DILocation(line: 332, column: 2, scope: !4582, inlinedAt: !9143)
!9368 = !DILocation(line: 336, column: 1, scope: !4582, inlinedAt: !9143)
!9369 = !DILocation(line: 553, column: 5, scope: !4571, inlinedAt: !9136)
!9370 = !DILocation(line: 553, column: 41, scope: !4571, inlinedAt: !9136)
!9371 = !DILocation(line: 554, column: 5, scope: !4571, inlinedAt: !9136)
!9372 = !DILocation(line: 554, column: 12, scope: !4571, inlinedAt: !9136)
!9373 = !DILocation(line: 448, column: 31, scope: !4566, inlinedAt: !9135)
!9374 = !DILocation(line: 448, column: 34, scope: !4566, inlinedAt: !9135)
!9375 = !DILocation(line: 448, column: 14, scope: !4566, inlinedAt: !9135)
!9376 = !DILocation(line: 450, column: 22, scope: !4566, inlinedAt: !9135)
!9377 = !DILocation(line: 450, column: 25, scope: !4566, inlinedAt: !9135)
!9378 = !DILocation(line: 450, column: 30, scope: !4566, inlinedAt: !9135)
!9379 = !DILocation(line: 450, column: 36, scope: !4566, inlinedAt: !9135)
!9380 = !DILocation(line: 450, column: 8, scope: !4566, inlinedAt: !9135)
!9381 = !DILocation(line: 450, column: 6, scope: !4566, inlinedAt: !9135)
!9382 = !DILocation(line: 451, column: 9, scope: !4566, inlinedAt: !9135)
!9383 = !DILocation(line: 552, column: 3, scope: !4571, inlinedAt: !9136)
!9384 = !DILocation(line: 557, column: 19, scope: !4573, inlinedAt: !9136)
!9385 = !DILocation(line: 557, column: 25, scope: !4573, inlinedAt: !9136)
!9386 = !DILocation(line: 557, column: 9, scope: !4573, inlinedAt: !9136)
!9387 = !DILocation(line: 557, column: 2, scope: !4573, inlinedAt: !9136)
!9388 = !DILocation(line: 558, column: 1, scope: !4573, inlinedAt: !9136)
!9389 = !DILocation(line: 145, column: 16, scope: !9137)
!9390 = !DILocation(line: 145, column: 14, scope: !9137)
!9391 = !DILocation(line: 150, column: 7, scope: !9392)
!9392 = distinct !DILexicalBlock(scope: !9137, file: !3, line: 150, column: 7)
!9393 = !DILocation(line: 150, column: 18, scope: !9392)
!9394 = !DILocation(line: 150, column: 7, scope: !9137)
!9395 = !DILocation(line: 151, column: 4, scope: !9396)
!9396 = distinct !DILexicalBlock(scope: !9392, file: !3, line: 150, column: 27)
!9397 = !DILocation(line: 152, column: 4, scope: !9396)
!9398 = !DILocation(line: 154, column: 10, scope: !9137)
!9399 = !DILocation(line: 154, column: 3, scope: !9137)
!9400 = !DILocation(line: 154, column: 22, scope: !9137)
!9401 = !DILocation(line: 154, column: 30, scope: !9137)
!9402 = !DILocation(line: 154, column: 38, scope: !9137)
!9403 = !DILocation(line: 156, column: 4, scope: !9137)
!9404 = !DILocation(line: 156, column: 12, scope: !9137)
!9405 = !DILocation(line: 156, column: 20, scope: !9137)
!9406 = !DILocation(line: 155, column: 34, scope: !9137)
!9407 = !DILocation(line: 157, column: 10, scope: !9137)
!9408 = !DILocation(line: 157, column: 23, scope: !9137)
!9409 = !DILocation(line: 157, column: 31, scope: !9137)
!9410 = !DILocation(line: 157, column: 39, scope: !9137)
!9411 = !DILocation(line: 157, column: 21, scope: !9137)
!9412 = !DILocation(line: 157, column: 3, scope: !9137)
!9413 = !DILocation(line: 159, column: 4, scope: !9137)
!9414 = !DILocation(line: 159, column: 12, scope: !9137)
!9415 = !DILocation(line: 159, column: 20, scope: !9137)
!9416 = !DILocation(line: 158, column: 34, scope: !9137)
!9417 = !DILocation(line: 160, column: 9, scope: !9137)
!9418 = !DILocation(line: 160, column: 17, scope: !9137)
!9419 = !DILocation(line: 160, column: 25, scope: !9137)
!9420 = !DILocation(line: 160, column: 3, scope: !9137)
!9421 = !DILocation(line: 161, column: 32, scope: !9137)
!9422 = !DILocation(line: 161, column: 3, scope: !9137)
!9423 = !DILocation(line: 161, column: 11, scope: !9137)
!9424 = !DILocation(line: 161, column: 19, scope: !9137)
!9425 = !DILocation(line: 161, column: 30, scope: !9137)
!9426 = !DILocation(line: 162, column: 3, scope: !9137)
!9427 = !DILocation(line: 162, column: 11, scope: !9137)
!9428 = !DILocation(line: 162, column: 19, scope: !9137)
!9429 = !DILocation(line: 162, column: 35, scope: !9137)
!9430 = !DILocation(line: 163, column: 2, scope: !9137)
!9431 = !DILocation(line: 166, column: 3, scope: !9131)
!9432 = !DILocation(line: 166, column: 11, scope: !9131)
!9433 = !DILocation(line: 166, column: 19, scope: !9131)
!9434 = !DILocation(line: 165, column: 2, scope: !9131)
!9435 = !DILocation(line: 165, column: 10, scope: !9131)
!9436 = !DILocation(line: 165, column: 27, scope: !9131)
!9437 = !DILocation(line: 165, column: 35, scope: !9131)
!9438 = !DILocation(line: 165, column: 55, scope: !9131)
!9439 = !DILocation(line: 165, column: 59, scope: !9131)
!9440 = !DILocation(line: 168, column: 21, scope: !9131)
!9441 = !DILocation(line: 168, column: 29, scope: !9131)
!9442 = !DILocation(line: 168, column: 37, scope: !9131)
!9443 = !DILocation(line: 168, column: 50, scope: !9131)
!9444 = !DILocation(line: 168, column: 19, scope: !9131)
!9445 = !DILocation(line: 169, column: 15, scope: !9131)
!9446 = !DILocation(line: 169, column: 23, scope: !9131)
!9447 = !DILocation(line: 169, column: 31, scope: !9131)
!9448 = !DILocation(line: 169, column: 44, scope: !9131)
!9449 = !DILocation(line: 169, column: 42, scope: !9131)
!9450 = !DILocation(line: 169, column: 13, scope: !9131)
!9451 = !DILocation(line: 170, column: 21, scope: !9131)
!9452 = !DILocation(line: 170, column: 2, scope: !9131)
!9453 = !DILocation(line: 170, column: 14, scope: !9131)
!9454 = !DILocation(line: 170, column: 19, scope: !9131)
!9455 = !DILocation(line: 171, column: 22, scope: !9131)
!9456 = !DILocation(line: 171, column: 2, scope: !9131)
!9457 = !DILocation(line: 171, column: 14, scope: !9131)
!9458 = !DILocation(line: 171, column: 20, scope: !9131)
!9459 = !DILocation(line: 172, column: 22, scope: !9131)
!9460 = !DILocation(line: 172, column: 30, scope: !9131)
!9461 = !DILocation(line: 172, column: 51, scope: !9131)
!9462 = !DILocation(line: 172, column: 2, scope: !9131)
!9463 = !DILocation(line: 172, column: 14, scope: !9131)
!9464 = !DILocation(line: 172, column: 20, scope: !9131)
!9465 = !DILocation(line: 173, column: 28, scope: !9131)
!9466 = !DILocation(line: 173, column: 40, scope: !9131)
!9467 = !DILocation(line: 173, column: 46, scope: !9131)
!9468 = !DILocation(line: 173, column: 27, scope: !9131)
!9469 = !DILocation(line: 174, column: 3, scope: !9131)
!9470 = !DILocation(line: 174, column: 11, scope: !9131)
!9471 = !DILocation(line: 174, column: 28, scope: !9131)
!9472 = !DILocation(line: 174, column: 40, scope: !9131)
!9473 = !DILocation(line: 174, column: 46, scope: !9131)
!9474 = !DILocation(line: 173, column: 2, scope: !9131)
!9475 = !DILocation(line: 173, column: 14, scope: !9131)
!9476 = !DILocation(line: 173, column: 25, scope: !9131)
!9477 = !DILocation(line: 176, column: 6, scope: !9478)
!9478 = distinct !DILexicalBlock(scope: !9131, file: !3, line: 176, column: 6)
!9479 = !DILocation(line: 176, column: 11, scope: !9478)
!9480 = !DILocation(line: 176, column: 6, scope: !9131)
!9481 = !DILocation(line: 177, column: 3, scope: !9478)
!9482 = !DILocation(line: 177, column: 11, scope: !9478)
!9483 = !DILocation(line: 177, column: 19, scope: !9478)
!9484 = !DILocation(line: 177, column: 33, scope: !9478)
!9485 = !DILocation(line: 179, column: 2, scope: !9131)
!9486 = !DILocation(line: 180, column: 1, scope: !9131)
!9487 = distinct !DISubprogram(name: "close_collection", scope: !3, file: !3, line: 186, type: !9488, scopeLine: 187, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !371)
!9488 = !DISubroutineType(types: !9489)
!9489 = !{!169, !4299}
!9490 = !DILocalVariable(name: "parser", arg: 1, scope: !9487, file: !3, line: 186, type: !4299)
!9491 = !DILocation(line: 186, column: 48, scope: !9487)
!9492 = !DILocation(line: 188, column: 7, scope: !9493)
!9493 = distinct !DILexicalBlock(scope: !9487, file: !3, line: 188, column: 6)
!9494 = !DILocation(line: 188, column: 15, scope: !9493)
!9495 = !DILocation(line: 188, column: 6, scope: !9487)
!9496 = !DILocation(line: 189, column: 3, scope: !9497)
!9497 = distinct !DILexicalBlock(scope: !9493, file: !3, line: 188, column: 37)
!9498 = !DILocation(line: 190, column: 3, scope: !9497)
!9499 = !DILocation(line: 192, column: 2, scope: !9487)
!9500 = !DILocation(line: 192, column: 10, scope: !9487)
!9501 = !DILocation(line: 192, column: 30, scope: !9487)
!9502 = !DILocation(line: 193, column: 2, scope: !9487)
!9503 = !DILocation(line: 194, column: 1, scope: !9487)
!9504 = distinct !DISubprogram(name: "hid_add_field", scope: !3, file: !3, line: 257, type: !9505, scopeLine: 258, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !371)
!9505 = !DISubroutineType(types: !9506)
!9506 = !{!169, !4299, !7, !7}
!9507 = !DILocalVariable(name: "parser", arg: 1, scope: !9504, file: !3, line: 257, type: !4299)
!9508 = !DILocation(line: 257, column: 45, scope: !9504)
!9509 = !DILocalVariable(name: "report_type", arg: 2, scope: !9504, file: !3, line: 257, type: !7)
!9510 = !DILocation(line: 257, column: 62, scope: !9504)
!9511 = !DILocalVariable(name: "flags", arg: 3, scope: !9504, file: !3, line: 257, type: !7)
!9512 = !DILocation(line: 257, column: 84, scope: !9504)
!9513 = !DILocalVariable(name: "report", scope: !9504, file: !3, line: 259, type: !115)
!9514 = !DILocation(line: 259, column: 21, scope: !9504)
!9515 = !DILocalVariable(name: "field", scope: !9504, file: !3, line: 260, type: !130)
!9516 = !DILocation(line: 260, column: 20, scope: !9504)
!9517 = !DILocalVariable(name: "usages", scope: !9504, file: !3, line: 261, type: !7)
!9518 = !DILocation(line: 261, column: 15, scope: !9504)
!9519 = !DILocalVariable(name: "offset", scope: !9504, file: !3, line: 262, type: !7)
!9520 = !DILocation(line: 262, column: 15, scope: !9504)
!9521 = !DILocalVariable(name: "i", scope: !9504, file: !3, line: 263, type: !7)
!9522 = !DILocation(line: 263, column: 15, scope: !9504)
!9523 = !DILocalVariable(name: "application", scope: !9504, file: !3, line: 264, type: !7)
!9524 = !DILocation(line: 264, column: 15, scope: !9504)
!9525 = !DILocation(line: 266, column: 38, scope: !9504)
!9526 = !DILocation(line: 266, column: 16, scope: !9504)
!9527 = !DILocation(line: 266, column: 14, scope: !9504)
!9528 = !DILocation(line: 268, column: 31, scope: !9504)
!9529 = !DILocation(line: 268, column: 39, scope: !9504)
!9530 = !DILocation(line: 268, column: 47, scope: !9504)
!9531 = !DILocation(line: 269, column: 10, scope: !9504)
!9532 = !DILocation(line: 269, column: 18, scope: !9504)
!9533 = !DILocation(line: 269, column: 25, scope: !9504)
!9534 = !DILocation(line: 269, column: 36, scope: !9504)
!9535 = !DILocation(line: 268, column: 11, scope: !9504)
!9536 = !DILocation(line: 268, column: 9, scope: !9504)
!9537 = !DILocation(line: 270, column: 7, scope: !9538)
!9538 = distinct !DILexicalBlock(scope: !9504, file: !3, line: 270, column: 6)
!9539 = !DILocation(line: 270, column: 6, scope: !9504)
!9540 = !DILocation(line: 271, column: 3, scope: !9541)
!9541 = distinct !DILexicalBlock(scope: !9538, file: !3, line: 270, column: 15)
!9542 = !DILocation(line: 272, column: 3, scope: !9541)
!9543 = !DILocation(line: 276, column: 7, scope: !9544)
!9544 = distinct !DILexicalBlock(scope: !9504, file: !3, line: 276, column: 6)
!9545 = !DILocation(line: 276, column: 15, scope: !9544)
!9546 = !DILocation(line: 276, column: 22, scope: !9544)
!9547 = !DILocation(line: 276, column: 38, scope: !9544)
!9548 = !DILocation(line: 276, column: 42, scope: !9544)
!9549 = !DILocation(line: 277, column: 3, scope: !9544)
!9550 = !DILocation(line: 277, column: 11, scope: !9544)
!9551 = !DILocation(line: 277, column: 18, scope: !9544)
!9552 = !DILocation(line: 278, column: 3, scope: !9544)
!9553 = !DILocation(line: 278, column: 11, scope: !9544)
!9554 = !DILocation(line: 278, column: 18, scope: !9544)
!9555 = !DILocation(line: 277, column: 34, scope: !9544)
!9556 = !DILocation(line: 278, column: 35, scope: !9544)
!9557 = !DILocation(line: 279, column: 4, scope: !9544)
!9558 = !DILocation(line: 279, column: 12, scope: !9544)
!9559 = !DILocation(line: 279, column: 19, scope: !9544)
!9560 = !DILocation(line: 279, column: 35, scope: !9544)
!9561 = !DILocation(line: 279, column: 40, scope: !9544)
!9562 = !DILocation(line: 280, column: 10, scope: !9544)
!9563 = !DILocation(line: 280, column: 18, scope: !9544)
!9564 = !DILocation(line: 280, column: 25, scope: !9544)
!9565 = !DILocation(line: 281, column: 10, scope: !9544)
!9566 = !DILocation(line: 281, column: 18, scope: !9544)
!9567 = !DILocation(line: 281, column: 25, scope: !9544)
!9568 = !DILocation(line: 280, column: 41, scope: !9544)
!9569 = !DILocation(line: 276, column: 6, scope: !9504)
!9570 = !DILocation(line: 282, column: 3, scope: !9571)
!9571 = distinct !DILexicalBlock(scope: !9544, file: !3, line: 281, column: 43)
!9572 = !DILocation(line: 282, column: 3, scope: !9573)
!9573 = distinct !DILexicalBlock(scope: !9574, file: !3, line: 282, column: 3)
!9574 = distinct !DILexicalBlock(scope: !9571, file: !3, line: 282, column: 3)
!9575 = !DILocation(line: 282, column: 3, scope: !9574)
!9576 = !DILocation(line: 285, column: 3, scope: !9571)
!9577 = !DILocation(line: 288, column: 11, scope: !9504)
!9578 = !DILocation(line: 288, column: 19, scope: !9504)
!9579 = !DILocation(line: 288, column: 9, scope: !9504)
!9580 = !DILocation(line: 289, column: 18, scope: !9504)
!9581 = !DILocation(line: 289, column: 26, scope: !9504)
!9582 = !DILocation(line: 289, column: 33, scope: !9504)
!9583 = !DILocation(line: 289, column: 47, scope: !9504)
!9584 = !DILocation(line: 289, column: 55, scope: !9504)
!9585 = !DILocation(line: 289, column: 62, scope: !9504)
!9586 = !DILocation(line: 289, column: 45, scope: !9504)
!9587 = !DILocation(line: 289, column: 2, scope: !9504)
!9588 = !DILocation(line: 289, column: 10, scope: !9504)
!9589 = !DILocation(line: 289, column: 15, scope: !9504)
!9590 = !DILocation(line: 292, column: 6, scope: !9591)
!9591 = distinct !DILexicalBlock(scope: !9504, file: !3, line: 292, column: 6)
!9592 = !DILocation(line: 292, column: 14, scope: !9591)
!9593 = !DILocation(line: 292, column: 19, scope: !9591)
!9594 = !DILocation(line: 292, column: 6, scope: !9504)
!9595 = !DILocation(line: 293, column: 3, scope: !9596)
!9596 = distinct !DILexicalBlock(scope: !9591, file: !3, line: 292, column: 53)
!9597 = !DILocation(line: 294, column: 3, scope: !9596)
!9598 = !DILocation(line: 297, column: 7, scope: !9599)
!9599 = distinct !DILexicalBlock(scope: !9504, file: !3, line: 297, column: 6)
!9600 = !DILocation(line: 297, column: 15, scope: !9599)
!9601 = !DILocation(line: 297, column: 21, scope: !9599)
!9602 = !DILocation(line: 297, column: 6, scope: !9504)
!9603 = !DILocation(line: 298, column: 3, scope: !9599)
!9604 = !DILocalVariable(name: "__UNIQUE_ID___x232", scope: !9605, file: !3, line: 300, type: !7)
!9605 = distinct !DILexicalBlock(scope: !9504, file: !3, line: 300, column: 11)
!9606 = !DILocation(line: 300, column: 11, scope: !9605)
!9607 = !DILocalVariable(name: "__UNIQUE_ID___y233", scope: !9605, file: !3, line: 300, type: !7)
!9608 = !DILocation(line: 300, column: 9, scope: !9504)
!9609 = !DILocation(line: 303, column: 29, scope: !9504)
!9610 = !DILocation(line: 303, column: 37, scope: !9504)
!9611 = !DILocation(line: 303, column: 45, scope: !9504)
!9612 = !DILocation(line: 303, column: 53, scope: !9504)
!9613 = !DILocation(line: 303, column: 60, scope: !9504)
!9614 = !DILocation(line: 303, column: 10, scope: !9504)
!9615 = !DILocation(line: 303, column: 8, scope: !9504)
!9616 = !DILocation(line: 304, column: 7, scope: !9617)
!9617 = distinct !DILexicalBlock(scope: !9504, file: !3, line: 304, column: 6)
!9618 = !DILocation(line: 304, column: 6, scope: !9504)
!9619 = !DILocation(line: 305, column: 3, scope: !9617)
!9620 = !DILocation(line: 307, column: 42, scope: !9504)
!9621 = !DILocation(line: 307, column: 20, scope: !9504)
!9622 = !DILocation(line: 307, column: 2, scope: !9504)
!9623 = !DILocation(line: 307, column: 9, scope: !9504)
!9624 = !DILocation(line: 307, column: 18, scope: !9504)
!9625 = !DILocation(line: 308, column: 41, scope: !9504)
!9626 = !DILocation(line: 308, column: 19, scope: !9504)
!9627 = !DILocation(line: 308, column: 2, scope: !9504)
!9628 = !DILocation(line: 308, column: 9, scope: !9504)
!9629 = !DILocation(line: 308, column: 17, scope: !9504)
!9630 = !DILocation(line: 309, column: 23, scope: !9504)
!9631 = !DILocation(line: 309, column: 2, scope: !9504)
!9632 = !DILocation(line: 309, column: 9, scope: !9504)
!9633 = !DILocation(line: 309, column: 21, scope: !9504)
!9634 = !DILocation(line: 311, column: 9, scope: !9635)
!9635 = distinct !DILexicalBlock(scope: !9504, file: !3, line: 311, column: 2)
!9636 = !DILocation(line: 311, column: 7, scope: !9635)
!9637 = !DILocation(line: 311, column: 14, scope: !9638)
!9638 = distinct !DILexicalBlock(scope: !9635, file: !3, line: 311, column: 2)
!9639 = !DILocation(line: 311, column: 18, scope: !9638)
!9640 = !DILocation(line: 311, column: 16, scope: !9638)
!9641 = !DILocation(line: 311, column: 2, scope: !9635)
!9642 = !DILocalVariable(name: "j", scope: !9643, file: !3, line: 312, type: !7)
!9643 = distinct !DILexicalBlock(scope: !9638, file: !3, line: 311, column: 31)
!9644 = !DILocation(line: 312, column: 12, scope: !9643)
!9645 = !DILocation(line: 312, column: 16, scope: !9643)
!9646 = !DILocation(line: 314, column: 7, scope: !9647)
!9647 = distinct !DILexicalBlock(scope: !9643, file: !3, line: 314, column: 7)
!9648 = !DILocation(line: 314, column: 12, scope: !9647)
!9649 = !DILocation(line: 314, column: 20, scope: !9647)
!9650 = !DILocation(line: 314, column: 26, scope: !9647)
!9651 = !DILocation(line: 314, column: 9, scope: !9647)
!9652 = !DILocation(line: 314, column: 7, scope: !9643)
!9653 = !DILocation(line: 315, column: 8, scope: !9647)
!9654 = !DILocation(line: 315, column: 16, scope: !9647)
!9655 = !DILocation(line: 315, column: 22, scope: !9647)
!9656 = !DILocation(line: 315, column: 34, scope: !9647)
!9657 = !DILocation(line: 315, column: 6, scope: !9647)
!9658 = !DILocation(line: 315, column: 4, scope: !9647)
!9659 = !DILocation(line: 316, column: 25, scope: !9643)
!9660 = !DILocation(line: 316, column: 33, scope: !9643)
!9661 = !DILocation(line: 316, column: 39, scope: !9643)
!9662 = !DILocation(line: 316, column: 45, scope: !9643)
!9663 = !DILocation(line: 316, column: 3, scope: !9643)
!9664 = !DILocation(line: 316, column: 10, scope: !9643)
!9665 = !DILocation(line: 316, column: 16, scope: !9643)
!9666 = !DILocation(line: 316, column: 19, scope: !9643)
!9667 = !DILocation(line: 316, column: 23, scope: !9643)
!9668 = !DILocation(line: 318, column: 4, scope: !9643)
!9669 = !DILocation(line: 318, column: 12, scope: !9643)
!9670 = !DILocation(line: 318, column: 18, scope: !9643)
!9671 = !DILocation(line: 318, column: 35, scope: !9643)
!9672 = !DILocation(line: 317, column: 3, scope: !9643)
!9673 = !DILocation(line: 317, column: 10, scope: !9643)
!9674 = !DILocation(line: 317, column: 16, scope: !9643)
!9675 = !DILocation(line: 317, column: 19, scope: !9643)
!9676 = !DILocation(line: 317, column: 36, scope: !9643)
!9677 = !DILocation(line: 319, column: 33, scope: !9643)
!9678 = !DILocation(line: 319, column: 3, scope: !9643)
!9679 = !DILocation(line: 319, column: 10, scope: !9643)
!9680 = !DILocation(line: 319, column: 16, scope: !9643)
!9681 = !DILocation(line: 319, column: 19, scope: !9643)
!9682 = !DILocation(line: 319, column: 31, scope: !9643)
!9683 = !DILocation(line: 320, column: 3, scope: !9643)
!9684 = !DILocation(line: 320, column: 10, scope: !9643)
!9685 = !DILocation(line: 320, column: 16, scope: !9643)
!9686 = !DILocation(line: 320, column: 19, scope: !9643)
!9687 = !DILocation(line: 320, column: 41, scope: !9643)
!9688 = !DILocation(line: 321, column: 2, scope: !9643)
!9689 = !DILocation(line: 311, column: 27, scope: !9638)
!9690 = !DILocation(line: 311, column: 2, scope: !9638)
!9691 = distinct !{!9691, !9641, !9692}
!9692 = !DILocation(line: 321, column: 2, scope: !9635)
!9693 = !DILocation(line: 323, column: 20, scope: !9504)
!9694 = !DILocation(line: 323, column: 2, scope: !9504)
!9695 = !DILocation(line: 323, column: 9, scope: !9504)
!9696 = !DILocation(line: 323, column: 18, scope: !9504)
!9697 = !DILocation(line: 324, column: 17, scope: !9504)
!9698 = !DILocation(line: 324, column: 2, scope: !9504)
!9699 = !DILocation(line: 324, column: 9, scope: !9504)
!9700 = !DILocation(line: 324, column: 15, scope: !9504)
!9701 = !DILocation(line: 325, column: 25, scope: !9504)
!9702 = !DILocation(line: 325, column: 2, scope: !9504)
!9703 = !DILocation(line: 325, column: 9, scope: !9504)
!9704 = !DILocation(line: 325, column: 23, scope: !9504)
!9705 = !DILocation(line: 326, column: 23, scope: !9504)
!9706 = !DILocation(line: 326, column: 2, scope: !9504)
!9707 = !DILocation(line: 326, column: 9, scope: !9504)
!9708 = !DILocation(line: 326, column: 21, scope: !9504)
!9709 = !DILocation(line: 327, column: 23, scope: !9504)
!9710 = !DILocation(line: 327, column: 31, scope: !9504)
!9711 = !DILocation(line: 327, column: 38, scope: !9504)
!9712 = !DILocation(line: 327, column: 2, scope: !9504)
!9713 = !DILocation(line: 327, column: 9, scope: !9504)
!9714 = !DILocation(line: 327, column: 21, scope: !9504)
!9715 = !DILocation(line: 328, column: 24, scope: !9504)
!9716 = !DILocation(line: 328, column: 32, scope: !9504)
!9717 = !DILocation(line: 328, column: 39, scope: !9504)
!9718 = !DILocation(line: 328, column: 2, scope: !9504)
!9719 = !DILocation(line: 328, column: 9, scope: !9504)
!9720 = !DILocation(line: 328, column: 22, scope: !9504)
!9721 = !DILocation(line: 329, column: 27, scope: !9504)
!9722 = !DILocation(line: 329, column: 35, scope: !9504)
!9723 = !DILocation(line: 329, column: 42, scope: !9504)
!9724 = !DILocation(line: 329, column: 2, scope: !9504)
!9725 = !DILocation(line: 329, column: 9, scope: !9504)
!9726 = !DILocation(line: 329, column: 25, scope: !9504)
!9727 = !DILocation(line: 330, column: 27, scope: !9504)
!9728 = !DILocation(line: 330, column: 35, scope: !9504)
!9729 = !DILocation(line: 330, column: 42, scope: !9504)
!9730 = !DILocation(line: 330, column: 2, scope: !9504)
!9731 = !DILocation(line: 330, column: 9, scope: !9504)
!9732 = !DILocation(line: 330, column: 25, scope: !9504)
!9733 = !DILocation(line: 331, column: 28, scope: !9504)
!9734 = !DILocation(line: 331, column: 36, scope: !9504)
!9735 = !DILocation(line: 331, column: 43, scope: !9504)
!9736 = !DILocation(line: 331, column: 2, scope: !9504)
!9737 = !DILocation(line: 331, column: 9, scope: !9504)
!9738 = !DILocation(line: 331, column: 26, scope: !9504)
!9739 = !DILocation(line: 332, column: 28, scope: !9504)
!9740 = !DILocation(line: 332, column: 36, scope: !9504)
!9741 = !DILocation(line: 332, column: 43, scope: !9504)
!9742 = !DILocation(line: 332, column: 2, scope: !9504)
!9743 = !DILocation(line: 332, column: 9, scope: !9504)
!9744 = !DILocation(line: 332, column: 26, scope: !9504)
!9745 = !DILocation(line: 333, column: 25, scope: !9504)
!9746 = !DILocation(line: 333, column: 33, scope: !9504)
!9747 = !DILocation(line: 333, column: 40, scope: !9504)
!9748 = !DILocation(line: 333, column: 2, scope: !9504)
!9749 = !DILocation(line: 333, column: 9, scope: !9504)
!9750 = !DILocation(line: 333, column: 23, scope: !9504)
!9751 = !DILocation(line: 334, column: 16, scope: !9504)
!9752 = !DILocation(line: 334, column: 24, scope: !9504)
!9753 = !DILocation(line: 334, column: 31, scope: !9504)
!9754 = !DILocation(line: 334, column: 2, scope: !9504)
!9755 = !DILocation(line: 334, column: 9, scope: !9504)
!9756 = !DILocation(line: 334, column: 14, scope: !9504)
!9757 = !DILocation(line: 336, column: 2, scope: !9504)
!9758 = !DILocation(line: 337, column: 1, scope: !9504)
!9759 = distinct !DISubprogram(name: "complete_usage", scope: !3, file: !3, line: 219, type: !9760, scopeLine: 220, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !371)
!9760 = !DISubroutineType(types: !9761)
!9761 = !{null, !4299, !7}
!9762 = !DILocalVariable(name: "parser", arg: 1, scope: !9759, file: !3, line: 219, type: !4299)
!9763 = !DILocation(line: 219, column: 47, scope: !9759)
!9764 = !DILocalVariable(name: "index", arg: 2, scope: !9759, file: !3, line: 219, type: !7)
!9765 = !DILocation(line: 219, column: 68, scope: !9759)
!9766 = !DILocation(line: 221, column: 2, scope: !9759)
!9767 = !DILocation(line: 221, column: 10, scope: !9759)
!9768 = !DILocation(line: 221, column: 16, scope: !9759)
!9769 = !DILocation(line: 221, column: 22, scope: !9759)
!9770 = !DILocation(line: 221, column: 29, scope: !9759)
!9771 = !DILocation(line: 223, column: 4, scope: !9759)
!9772 = !DILocation(line: 223, column: 12, scope: !9759)
!9773 = !DILocation(line: 223, column: 19, scope: !9759)
!9774 = !DILocation(line: 223, column: 30, scope: !9759)
!9775 = !DILocation(line: 223, column: 40, scope: !9759)
!9776 = !DILocation(line: 222, column: 2, scope: !9759)
!9777 = !DILocation(line: 222, column: 10, scope: !9759)
!9778 = !DILocation(line: 222, column: 16, scope: !9759)
!9779 = !DILocation(line: 222, column: 22, scope: !9759)
!9780 = !DILocation(line: 222, column: 29, scope: !9759)
!9781 = !DILocation(line: 224, column: 1, scope: !9759)
!9782 = distinct !DISubprogram(name: "array3_size", scope: !9783, file: !9783, line: 285, type: !9784, scopeLine: 286, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !371)
!9783 = !DIFile(filename: "./include/linux/overflow.h", directory: "/home/lizy2001/genbc/linux")
!9784 = !DISubroutineType(types: !9785)
!9785 = !{!604, !604, !604, !604}
!9786 = !DILocalVariable(name: "a", arg: 1, scope: !9782, file: !9783, line: 285, type: !604)
!9787 = !DILocation(line: 285, column: 54, scope: !9782)
!9788 = !DILocalVariable(name: "b", arg: 2, scope: !9782, file: !9783, line: 285, type: !604)
!9789 = !DILocation(line: 285, column: 64, scope: !9782)
!9790 = !DILocalVariable(name: "c", arg: 3, scope: !9782, file: !9783, line: 285, type: !604)
!9791 = !DILocation(line: 285, column: 74, scope: !9782)
!9792 = !DILocalVariable(name: "bytes", scope: !9782, file: !9783, line: 287, type: !604)
!9793 = !DILocation(line: 287, column: 9, scope: !9782)
!9794 = !DILocalVariable(name: "__a", scope: !9795, file: !9783, line: 289, type: !604)
!9795 = distinct !DILexicalBlock(scope: !9796, file: !9783, line: 289, column: 6)
!9796 = distinct !DILexicalBlock(scope: !9782, file: !9783, line: 289, column: 6)
!9797 = !DILocation(line: 289, column: 6, scope: !9795)
!9798 = !DILocalVariable(name: "__b", scope: !9795, file: !9783, line: 289, type: !604)
!9799 = !DILocalVariable(name: "__d", scope: !9795, file: !9783, line: 289, type: !9800)
!9800 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !604, size: 64)
!9801 = !DILocation(line: 289, column: 6, scope: !9796)
!9802 = !DILocation(line: 289, column: 6, scope: !9782)
!9803 = !DILocation(line: 290, column: 3, scope: !9796)
!9804 = !DILocalVariable(name: "__a", scope: !9805, file: !9783, line: 291, type: !604)
!9805 = distinct !DILexicalBlock(scope: !9806, file: !9783, line: 291, column: 6)
!9806 = distinct !DILexicalBlock(scope: !9782, file: !9783, line: 291, column: 6)
!9807 = !DILocation(line: 291, column: 6, scope: !9805)
!9808 = !DILocalVariable(name: "__b", scope: !9805, file: !9783, line: 291, type: !604)
!9809 = !DILocalVariable(name: "__d", scope: !9805, file: !9783, line: 291, type: !9800)
!9810 = !DILocation(line: 291, column: 6, scope: !9806)
!9811 = !DILocation(line: 291, column: 6, scope: !9782)
!9812 = !DILocation(line: 292, column: 3, scope: !9806)
!9813 = !DILocation(line: 294, column: 9, scope: !9782)
!9814 = !DILocation(line: 294, column: 2, scope: !9782)
!9815 = !DILocation(line: 295, column: 1, scope: !9782)
!9816 = distinct !DISubprogram(name: "__must_check_overflow", scope: !9783, file: !9783, line: 52, type: !9817, scopeLine: 53, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !371)
!9817 = !DISubroutineType(types: !9818)
!9818 = !{!514, !514}
!9819 = !DILocalVariable(name: "overflow", arg: 1, scope: !9816, file: !9783, line: 52, type: !514)
!9820 = !DILocation(line: 52, column: 60, scope: !9816)
!9821 = !DILocation(line: 54, column: 9, scope: !9816)
!9822 = !DILocation(line: 54, column: 2, scope: !9816)
!9823 = distinct !DISubprogram(name: "hid_lookup_collection", scope: !3, file: !3, line: 201, type: !9824, scopeLine: 202, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !371)
!9824 = !DISubroutineType(types: !9825)
!9825 = !{!7, !4299, !7}
!9826 = !DILocalVariable(name: "parser", arg: 1, scope: !9823, file: !3, line: 201, type: !4299)
!9827 = !DILocation(line: 201, column: 58, scope: !9823)
!9828 = !DILocalVariable(name: "type", arg: 2, scope: !9823, file: !3, line: 201, type: !7)
!9829 = !DILocation(line: 201, column: 75, scope: !9823)
!9830 = !DILocalVariable(name: "collection", scope: !9823, file: !3, line: 203, type: !3995)
!9831 = !DILocation(line: 203, column: 25, scope: !9823)
!9832 = !DILocation(line: 203, column: 38, scope: !9823)
!9833 = !DILocation(line: 203, column: 46, scope: !9823)
!9834 = !DILocation(line: 203, column: 54, scope: !9823)
!9835 = !DILocalVariable(name: "n", scope: !9823, file: !3, line: 204, type: !169)
!9836 = !DILocation(line: 204, column: 6, scope: !9823)
!9837 = !DILocation(line: 206, column: 11, scope: !9838)
!9838 = distinct !DILexicalBlock(scope: !9823, file: !3, line: 206, column: 2)
!9839 = !DILocation(line: 206, column: 19, scope: !9838)
!9840 = !DILocation(line: 206, column: 40, scope: !9838)
!9841 = !DILocation(line: 206, column: 9, scope: !9838)
!9842 = !DILocation(line: 206, column: 7, scope: !9838)
!9843 = !DILocation(line: 206, column: 45, scope: !9844)
!9844 = distinct !DILexicalBlock(scope: !9838, file: !3, line: 206, column: 2)
!9845 = !DILocation(line: 206, column: 47, scope: !9844)
!9846 = !DILocation(line: 206, column: 2, scope: !9838)
!9847 = !DILocalVariable(name: "index", scope: !9848, file: !3, line: 207, type: !7)
!9848 = distinct !DILexicalBlock(scope: !9844, file: !3, line: 206, column: 58)
!9849 = !DILocation(line: 207, column: 12, scope: !9848)
!9850 = !DILocation(line: 207, column: 20, scope: !9848)
!9851 = !DILocation(line: 207, column: 28, scope: !9848)
!9852 = !DILocation(line: 207, column: 45, scope: !9848)
!9853 = !DILocation(line: 208, column: 7, scope: !9854)
!9854 = distinct !DILexicalBlock(scope: !9848, file: !3, line: 208, column: 7)
!9855 = !DILocation(line: 208, column: 18, scope: !9854)
!9856 = !DILocation(line: 208, column: 25, scope: !9854)
!9857 = !DILocation(line: 208, column: 33, scope: !9854)
!9858 = !DILocation(line: 208, column: 30, scope: !9854)
!9859 = !DILocation(line: 208, column: 7, scope: !9848)
!9860 = !DILocation(line: 209, column: 11, scope: !9854)
!9861 = !DILocation(line: 209, column: 22, scope: !9854)
!9862 = !DILocation(line: 209, column: 29, scope: !9854)
!9863 = !DILocation(line: 209, column: 4, scope: !9854)
!9864 = !DILocation(line: 210, column: 2, scope: !9848)
!9865 = !DILocation(line: 206, column: 54, scope: !9844)
!9866 = !DILocation(line: 206, column: 2, scope: !9844)
!9867 = distinct !{!9867, !9846, !9868}
!9868 = !DILocation(line: 210, column: 2, scope: !9838)
!9869 = !DILocation(line: 211, column: 2, scope: !9823)
!9870 = !DILocation(line: 212, column: 1, scope: !9823)
!9871 = distinct !DISubprogram(name: "hid_register_field", scope: !3, file: !3, line: 93, type: !9872, scopeLine: 94, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !371)
!9872 = !DISubroutineType(types: !9873)
!9873 = !{!130, !115, !7, !7}
!9874 = !DILocalVariable(name: "report", arg: 1, scope: !9871, file: !3, line: 93, type: !115)
!9875 = !DILocation(line: 93, column: 64, scope: !9871)
!9876 = !DILocalVariable(name: "usages", arg: 2, scope: !9871, file: !3, line: 93, type: !7)
!9877 = !DILocation(line: 93, column: 81, scope: !9871)
!9878 = !DILocalVariable(name: "values", arg: 3, scope: !9871, file: !3, line: 93, type: !7)
!9879 = !DILocation(line: 93, column: 98, scope: !9871)
!9880 = !DILocalVariable(name: "field", scope: !9871, file: !3, line: 95, type: !130)
!9881 = !DILocation(line: 95, column: 20, scope: !9871)
!9882 = !DILocation(line: 97, column: 6, scope: !9883)
!9883 = distinct !DILexicalBlock(scope: !9871, file: !3, line: 97, column: 6)
!9884 = !DILocation(line: 97, column: 14, scope: !9883)
!9885 = !DILocation(line: 97, column: 23, scope: !9883)
!9886 = !DILocation(line: 97, column: 6, scope: !9871)
!9887 = !DILocation(line: 98, column: 3, scope: !9888)
!9888 = distinct !DILexicalBlock(scope: !9883, file: !3, line: 97, column: 42)
!9889 = !DILocation(line: 99, column: 3, scope: !9888)
!9890 = !DILocation(line: 103, column: 5, scope: !9871)
!9891 = !DILocation(line: 103, column: 12, scope: !9871)
!9892 = !DILocation(line: 102, column: 44, scope: !9871)
!9893 = !DILocation(line: 104, column: 5, scope: !9871)
!9894 = !DILocation(line: 104, column: 12, scope: !9871)
!9895 = !DILocation(line: 103, column: 39, scope: !9871)
!9896 = !DILocation(line: 102, column: 10, scope: !9871)
!9897 = !DILocation(line: 102, column: 8, scope: !9871)
!9898 = !DILocation(line: 105, column: 7, scope: !9899)
!9899 = distinct !DILexicalBlock(scope: !9871, file: !3, line: 105, column: 6)
!9900 = !DILocation(line: 105, column: 6, scope: !9871)
!9901 = !DILocation(line: 106, column: 3, scope: !9899)
!9902 = !DILocation(line: 108, column: 17, scope: !9871)
!9903 = !DILocation(line: 108, column: 25, scope: !9871)
!9904 = !DILocation(line: 108, column: 33, scope: !9871)
!9905 = !DILocation(line: 108, column: 2, scope: !9871)
!9906 = !DILocation(line: 108, column: 9, scope: !9871)
!9907 = !DILocation(line: 108, column: 15, scope: !9871)
!9908 = !DILocation(line: 109, column: 32, scope: !9871)
!9909 = !DILocation(line: 109, column: 2, scope: !9871)
!9910 = !DILocation(line: 109, column: 10, scope: !9871)
!9911 = !DILocation(line: 109, column: 16, scope: !9871)
!9912 = !DILocation(line: 109, column: 23, scope: !9871)
!9913 = !DILocation(line: 109, column: 30, scope: !9871)
!9914 = !DILocation(line: 110, column: 38, scope: !9871)
!9915 = !DILocation(line: 110, column: 44, scope: !9871)
!9916 = !DILocation(line: 110, column: 17, scope: !9871)
!9917 = !DILocation(line: 110, column: 2, scope: !9871)
!9918 = !DILocation(line: 110, column: 9, scope: !9871)
!9919 = !DILocation(line: 110, column: 15, scope: !9871)
!9920 = !DILocation(line: 111, column: 25, scope: !9871)
!9921 = !DILocation(line: 111, column: 32, scope: !9871)
!9922 = !DILocation(line: 111, column: 40, scope: !9871)
!9923 = !DILocation(line: 111, column: 38, scope: !9871)
!9924 = !DILocation(line: 111, column: 17, scope: !9871)
!9925 = !DILocation(line: 111, column: 2, scope: !9871)
!9926 = !DILocation(line: 111, column: 9, scope: !9871)
!9927 = !DILocation(line: 111, column: 15, scope: !9871)
!9928 = !DILocation(line: 112, column: 18, scope: !9871)
!9929 = !DILocation(line: 112, column: 2, scope: !9871)
!9930 = !DILocation(line: 112, column: 9, scope: !9871)
!9931 = !DILocation(line: 112, column: 16, scope: !9871)
!9932 = !DILocation(line: 114, column: 9, scope: !9871)
!9933 = !DILocation(line: 114, column: 2, scope: !9871)
!9934 = !DILocation(line: 115, column: 1, scope: !9871)
!9935 = distinct !DISubprogram(name: "item_sdata", scope: !3, file: !3, line: 353, type: !9936, scopeLine: 354, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !371)
!9936 = !DISubroutineType(types: !9937)
!9937 = !{!1457, !4337}
!9938 = !DILocalVariable(name: "item", arg: 1, scope: !9935, file: !3, line: 353, type: !4337)
!9939 = !DILocation(line: 353, column: 40, scope: !9935)
!9940 = !DILocation(line: 355, column: 10, scope: !9935)
!9941 = !DILocation(line: 355, column: 16, scope: !9935)
!9942 = !DILocation(line: 355, column: 2, scope: !9935)
!9943 = !DILocation(line: 356, column: 17, scope: !9944)
!9944 = distinct !DILexicalBlock(scope: !9935, file: !3, line: 355, column: 22)
!9945 = !DILocation(line: 356, column: 23, scope: !9944)
!9946 = !DILocation(line: 356, column: 28, scope: !9944)
!9947 = !DILocation(line: 356, column: 10, scope: !9944)
!9948 = !DILocation(line: 357, column: 17, scope: !9944)
!9949 = !DILocation(line: 357, column: 23, scope: !9944)
!9950 = !DILocation(line: 357, column: 28, scope: !9944)
!9951 = !DILocation(line: 357, column: 10, scope: !9944)
!9952 = !DILocation(line: 358, column: 17, scope: !9944)
!9953 = !DILocation(line: 358, column: 23, scope: !9944)
!9954 = !DILocation(line: 358, column: 28, scope: !9944)
!9955 = !DILocation(line: 358, column: 10, scope: !9944)
!9956 = !DILocation(line: 360, column: 2, scope: !9935)
!9957 = !DILocation(line: 361, column: 1, scope: !9935)
!9958 = distinct !DISubprogram(name: "hid_add_usage", scope: !3, file: !3, line: 230, type: !9959, scopeLine: 231, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !371)
!9959 = !DISubroutineType(types: !9960)
!9960 = !{!169, !4299, !7, !1369}
!9961 = !DILocalVariable(name: "parser", arg: 1, scope: !9958, file: !3, line: 230, type: !4299)
!9962 = !DILocation(line: 230, column: 45, scope: !9958)
!9963 = !DILocalVariable(name: "usage", arg: 2, scope: !9958, file: !3, line: 230, type: !7)
!9964 = !DILocation(line: 230, column: 62, scope: !9958)
!9965 = !DILocalVariable(name: "size", arg: 3, scope: !9958, file: !3, line: 230, type: !1369)
!9966 = !DILocation(line: 230, column: 72, scope: !9958)
!9967 = !DILocation(line: 232, column: 6, scope: !9968)
!9968 = distinct !DILexicalBlock(scope: !9958, file: !3, line: 232, column: 6)
!9969 = !DILocation(line: 232, column: 14, scope: !9968)
!9970 = !DILocation(line: 232, column: 20, scope: !9968)
!9971 = !DILocation(line: 232, column: 32, scope: !9968)
!9972 = !DILocation(line: 232, column: 6, scope: !9958)
!9973 = !DILocation(line: 233, column: 3, scope: !9974)
!9974 = distinct !DILexicalBlock(scope: !9968, file: !3, line: 232, column: 51)
!9975 = !DILocation(line: 234, column: 3, scope: !9974)
!9976 = !DILocation(line: 236, column: 51, scope: !9958)
!9977 = !DILocation(line: 236, column: 2, scope: !9958)
!9978 = !DILocation(line: 236, column: 10, scope: !9958)
!9979 = !DILocation(line: 236, column: 16, scope: !9958)
!9980 = !DILocation(line: 236, column: 22, scope: !9958)
!9981 = !DILocation(line: 236, column: 30, scope: !9958)
!9982 = !DILocation(line: 236, column: 36, scope: !9958)
!9983 = !DILocation(line: 236, column: 49, scope: !9958)
!9984 = !DILocation(line: 242, column: 6, scope: !9985)
!9985 = distinct !DILexicalBlock(scope: !9958, file: !3, line: 242, column: 6)
!9986 = !DILocation(line: 242, column: 11, scope: !9985)
!9987 = !DILocation(line: 242, column: 6, scope: !9958)
!9988 = !DILocation(line: 243, column: 18, scope: !9985)
!9989 = !DILocation(line: 243, column: 26, scope: !9985)
!9990 = !DILocation(line: 243, column: 34, scope: !9985)
!9991 = !DILocation(line: 243, column: 40, scope: !9985)
!9992 = !DILocation(line: 243, column: 3, scope: !9985)
!9993 = !DILocation(line: 245, column: 56, scope: !9958)
!9994 = !DILocation(line: 245, column: 2, scope: !9958)
!9995 = !DILocation(line: 245, column: 10, scope: !9958)
!9996 = !DILocation(line: 245, column: 16, scope: !9958)
!9997 = !DILocation(line: 245, column: 27, scope: !9958)
!9998 = !DILocation(line: 245, column: 35, scope: !9958)
!9999 = !DILocation(line: 245, column: 41, scope: !9958)
!10000 = !DILocation(line: 245, column: 54, scope: !9958)
!10001 = !DILocation(line: 247, column: 3, scope: !9958)
!10002 = !DILocation(line: 247, column: 11, scope: !9958)
!10003 = !DILocation(line: 248, column: 3, scope: !9958)
!10004 = !DILocation(line: 248, column: 11, scope: !9958)
!10005 = !DILocation(line: 248, column: 28, scope: !9958)
!10006 = !DILocation(line: 248, column: 36, scope: !9958)
!10007 = !DILocation(line: 248, column: 57, scope: !9958)
!10008 = !DILocation(line: 246, column: 2, scope: !9958)
!10009 = !DILocation(line: 246, column: 10, scope: !9958)
!10010 = !DILocation(line: 246, column: 16, scope: !9958)
!10011 = !DILocation(line: 246, column: 33, scope: !9958)
!10012 = !DILocation(line: 246, column: 41, scope: !9958)
!10013 = !DILocation(line: 246, column: 47, scope: !9958)
!10014 = !DILocation(line: 246, column: 60, scope: !9958)
!10015 = !DILocation(line: 249, column: 2, scope: !9958)
!10016 = !DILocation(line: 249, column: 10, scope: !9958)
!10017 = !DILocation(line: 249, column: 16, scope: !9958)
!10018 = !DILocation(line: 249, column: 27, scope: !9958)
!10019 = !DILocation(line: 250, column: 2, scope: !9958)
!10020 = !DILocation(line: 251, column: 1, scope: !9958)
!10021 = distinct !DISubprogram(name: "dev_name", scope: !73, file: !73, line: 609, type: !10022, scopeLine: 610, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !371)
!10022 = !DISubroutineType(types: !10023)
!10023 = !{!190, !10024}
!10024 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10025, size: 64)
!10025 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3320)
!10026 = !DILocalVariable(name: "dev", arg: 1, scope: !10021, file: !73, line: 609, type: !10024)
!10027 = !DILocation(line: 609, column: 57, scope: !10021)
!10028 = !DILocation(line: 612, column: 6, scope: !10029)
!10029 = distinct !DILexicalBlock(scope: !10021, file: !73, line: 612, column: 6)
!10030 = !DILocation(line: 612, column: 11, scope: !10029)
!10031 = !DILocation(line: 612, column: 6, scope: !10021)
!10032 = !DILocation(line: 613, column: 10, scope: !10029)
!10033 = !DILocation(line: 613, column: 15, scope: !10029)
!10034 = !DILocation(line: 613, column: 3, scope: !10029)
!10035 = !DILocation(line: 615, column: 23, scope: !10021)
!10036 = !DILocation(line: 615, column: 28, scope: !10021)
!10037 = !DILocation(line: 615, column: 9, scope: !10021)
!10038 = !DILocation(line: 615, column: 2, scope: !10021)
!10039 = !DILocation(line: 616, column: 1, scope: !10021)
!10040 = distinct !DISubprogram(name: "kobject_name", scope: !3324, file: !3324, line: 88, type: !10041, scopeLine: 89, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !371)
!10041 = !DISubroutineType(types: !10042)
!10042 = !{!190, !10043}
!10043 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10044, size: 64)
!10044 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3323)
!10045 = !DILocalVariable(name: "kobj", arg: 1, scope: !10040, file: !3324, line: 88, type: !10043)
!10046 = !DILocation(line: 88, column: 62, scope: !10040)
!10047 = !DILocation(line: 90, column: 9, scope: !10040)
!10048 = !DILocation(line: 90, column: 15, scope: !10040)
!10049 = !DILocation(line: 90, column: 2, scope: !10040)
!10050 = distinct !DISubprogram(name: "kmalloc_array", scope: !105, file: !105, line: 584, type: !5779, scopeLine: 585, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !371)
!10051 = !DILocation(line: 445, column: 72, scope: !4566, inlinedAt: !10052)
!10052 = distinct !DILocation(line: 552, column: 10, scope: !4571, inlinedAt: !10053)
!10053 = distinct !DILocation(line: 591, column: 10, scope: !10054)
!10054 = distinct !DILexicalBlock(scope: !10050, file: !105, line: 590, column: 6)
!10055 = !DILocation(line: 446, column: 9, scope: !4566, inlinedAt: !10052)
!10056 = !DILocation(line: 446, column: 23, scope: !4566, inlinedAt: !10052)
!10057 = !DILocation(line: 448, column: 8, scope: !4566, inlinedAt: !10052)
!10058 = !DILocation(line: 318, column: 67, scope: !4582, inlinedAt: !10059)
!10059 = distinct !DILocation(line: 553, column: 20, scope: !4571, inlinedAt: !10053)
!10060 = !DILocation(line: 346, column: 58, scope: !4588, inlinedAt: !10061)
!10061 = distinct !DILocation(line: 547, column: 11, scope: !4571, inlinedAt: !10053)
!10062 = !DILocation(line: 472, column: 28, scope: !4594, inlinedAt: !10063)
!10063 = distinct !DILocation(line: 481, column: 9, scope: !4599, inlinedAt: !10064)
!10064 = distinct !DILocation(line: 545, column: 11, scope: !4601, inlinedAt: !10053)
!10065 = !DILocation(line: 472, column: 40, scope: !4594, inlinedAt: !10063)
!10066 = !DILocation(line: 472, column: 60, scope: !4594, inlinedAt: !10063)
!10067 = !DILocation(line: 478, column: 51, scope: !4599, inlinedAt: !10064)
!10068 = !DILocation(line: 478, column: 63, scope: !4599, inlinedAt: !10064)
!10069 = !DILocation(line: 480, column: 15, scope: !4599, inlinedAt: !10064)
!10070 = !DILocation(line: 538, column: 45, scope: !4573, inlinedAt: !10053)
!10071 = !DILocation(line: 538, column: 57, scope: !4573, inlinedAt: !10053)
!10072 = !DILocation(line: 542, column: 16, scope: !4571, inlinedAt: !10053)
!10073 = !DILocalVariable(name: "n", arg: 1, scope: !10050, file: !105, line: 584, type: !604)
!10074 = !DILocation(line: 584, column: 42, scope: !10050)
!10075 = !DILocalVariable(name: "size", arg: 2, scope: !10050, file: !105, line: 584, type: !604)
!10076 = !DILocation(line: 584, column: 52, scope: !10050)
!10077 = !DILocalVariable(name: "flags", arg: 3, scope: !10050, file: !105, line: 584, type: !112)
!10078 = !DILocation(line: 584, column: 64, scope: !10050)
!10079 = !DILocalVariable(name: "bytes", scope: !10050, file: !105, line: 586, type: !604)
!10080 = !DILocation(line: 586, column: 9, scope: !10050)
!10081 = !DILocalVariable(name: "__a", scope: !10082, file: !105, line: 588, type: !604)
!10082 = distinct !DILexicalBlock(scope: !10083, file: !105, line: 588, column: 6)
!10083 = distinct !DILexicalBlock(scope: !10050, file: !105, line: 588, column: 6)
!10084 = !DILocation(line: 588, column: 6, scope: !10082)
!10085 = !DILocalVariable(name: "__b", scope: !10082, file: !105, line: 588, type: !604)
!10086 = !DILocalVariable(name: "__d", scope: !10082, file: !105, line: 588, type: !9800)
!10087 = !DILocation(line: 588, column: 6, scope: !10083)
!10088 = !DILocation(line: 588, column: 6, scope: !10050)
!10089 = !DILocation(line: 589, column: 3, scope: !10083)
!10090 = !DILocation(line: 590, column: 27, scope: !10054)
!10091 = !DILocation(line: 590, column: 6, scope: !10054)
!10092 = !DILocation(line: 590, column: 30, scope: !10054)
!10093 = !DILocation(line: 590, column: 54, scope: !10054)
!10094 = !DILocation(line: 590, column: 33, scope: !10054)
!10095 = !DILocation(line: 590, column: 6, scope: !10050)
!10096 = !DILocation(line: 591, column: 18, scope: !10054)
!10097 = !DILocation(line: 591, column: 25, scope: !10054)
!10098 = !DILocation(line: 540, column: 27, scope: !4572, inlinedAt: !10053)
!10099 = !DILocation(line: 540, column: 6, scope: !4572, inlinedAt: !10053)
!10100 = !DILocation(line: 540, column: 6, scope: !4573, inlinedAt: !10053)
!10101 = !DILocation(line: 544, column: 7, scope: !4601, inlinedAt: !10053)
!10102 = !DILocation(line: 544, column: 12, scope: !4601, inlinedAt: !10053)
!10103 = !DILocation(line: 544, column: 7, scope: !4571, inlinedAt: !10053)
!10104 = !DILocation(line: 545, column: 25, scope: !4601, inlinedAt: !10053)
!10105 = !DILocation(line: 545, column: 31, scope: !4601, inlinedAt: !10053)
!10106 = !DILocation(line: 480, column: 33, scope: !4599, inlinedAt: !10064)
!10107 = !DILocation(line: 480, column: 23, scope: !4599, inlinedAt: !10064)
!10108 = !DILocation(line: 481, column: 29, scope: !4599, inlinedAt: !10064)
!10109 = !DILocation(line: 481, column: 35, scope: !4599, inlinedAt: !10064)
!10110 = !DILocation(line: 481, column: 42, scope: !4599, inlinedAt: !10064)
!10111 = !DILocation(line: 474, column: 23, scope: !4594, inlinedAt: !10063)
!10112 = !DILocation(line: 474, column: 29, scope: !4594, inlinedAt: !10063)
!10113 = !DILocation(line: 474, column: 36, scope: !4594, inlinedAt: !10063)
!10114 = !DILocation(line: 474, column: 9, scope: !4594, inlinedAt: !10063)
!10115 = !DILocation(line: 545, column: 4, scope: !4601, inlinedAt: !10053)
!10116 = !DILocation(line: 547, column: 25, scope: !4571, inlinedAt: !10053)
!10117 = !DILocation(line: 348, column: 7, scope: !4645, inlinedAt: !10061)
!10118 = !DILocation(line: 348, column: 6, scope: !4588, inlinedAt: !10061)
!10119 = !DILocation(line: 349, column: 3, scope: !4645, inlinedAt: !10061)
!10120 = !DILocation(line: 351, column: 6, scope: !4649, inlinedAt: !10061)
!10121 = !DILocation(line: 351, column: 11, scope: !4649, inlinedAt: !10061)
!10122 = !DILocation(line: 351, column: 6, scope: !4588, inlinedAt: !10061)
!10123 = !DILocation(line: 352, column: 3, scope: !4649, inlinedAt: !10061)
!10124 = !DILocation(line: 354, column: 32, scope: !4654, inlinedAt: !10061)
!10125 = !DILocation(line: 354, column: 37, scope: !4654, inlinedAt: !10061)
!10126 = !DILocation(line: 354, column: 42, scope: !4654, inlinedAt: !10061)
!10127 = !DILocation(line: 354, column: 45, scope: !4654, inlinedAt: !10061)
!10128 = !DILocation(line: 354, column: 50, scope: !4654, inlinedAt: !10061)
!10129 = !DILocation(line: 354, column: 6, scope: !4588, inlinedAt: !10061)
!10130 = !DILocation(line: 355, column: 3, scope: !4654, inlinedAt: !10061)
!10131 = !DILocation(line: 356, column: 32, scope: !4662, inlinedAt: !10061)
!10132 = !DILocation(line: 356, column: 37, scope: !4662, inlinedAt: !10061)
!10133 = !DILocation(line: 356, column: 43, scope: !4662, inlinedAt: !10061)
!10134 = !DILocation(line: 356, column: 46, scope: !4662, inlinedAt: !10061)
!10135 = !DILocation(line: 356, column: 51, scope: !4662, inlinedAt: !10061)
!10136 = !DILocation(line: 356, column: 6, scope: !4588, inlinedAt: !10061)
!10137 = !DILocation(line: 357, column: 3, scope: !4662, inlinedAt: !10061)
!10138 = !DILocation(line: 358, column: 6, scope: !4670, inlinedAt: !10061)
!10139 = !DILocation(line: 358, column: 11, scope: !4670, inlinedAt: !10061)
!10140 = !DILocation(line: 358, column: 6, scope: !4588, inlinedAt: !10061)
!10141 = !DILocation(line: 358, column: 26, scope: !4670, inlinedAt: !10061)
!10142 = !DILocation(line: 359, column: 6, scope: !4675, inlinedAt: !10061)
!10143 = !DILocation(line: 359, column: 11, scope: !4675, inlinedAt: !10061)
!10144 = !DILocation(line: 359, column: 6, scope: !4588, inlinedAt: !10061)
!10145 = !DILocation(line: 359, column: 26, scope: !4675, inlinedAt: !10061)
!10146 = !DILocation(line: 360, column: 6, scope: !4680, inlinedAt: !10061)
!10147 = !DILocation(line: 360, column: 11, scope: !4680, inlinedAt: !10061)
!10148 = !DILocation(line: 360, column: 6, scope: !4588, inlinedAt: !10061)
!10149 = !DILocation(line: 360, column: 26, scope: !4680, inlinedAt: !10061)
!10150 = !DILocation(line: 361, column: 6, scope: !4685, inlinedAt: !10061)
!10151 = !DILocation(line: 361, column: 11, scope: !4685, inlinedAt: !10061)
!10152 = !DILocation(line: 361, column: 6, scope: !4588, inlinedAt: !10061)
!10153 = !DILocation(line: 361, column: 26, scope: !4685, inlinedAt: !10061)
!10154 = !DILocation(line: 362, column: 6, scope: !4690, inlinedAt: !10061)
!10155 = !DILocation(line: 362, column: 11, scope: !4690, inlinedAt: !10061)
!10156 = !DILocation(line: 362, column: 6, scope: !4588, inlinedAt: !10061)
!10157 = !DILocation(line: 362, column: 26, scope: !4690, inlinedAt: !10061)
!10158 = !DILocation(line: 363, column: 6, scope: !4695, inlinedAt: !10061)
!10159 = !DILocation(line: 363, column: 11, scope: !4695, inlinedAt: !10061)
!10160 = !DILocation(line: 363, column: 6, scope: !4588, inlinedAt: !10061)
!10161 = !DILocation(line: 363, column: 26, scope: !4695, inlinedAt: !10061)
!10162 = !DILocation(line: 364, column: 6, scope: !4700, inlinedAt: !10061)
!10163 = !DILocation(line: 364, column: 11, scope: !4700, inlinedAt: !10061)
!10164 = !DILocation(line: 364, column: 6, scope: !4588, inlinedAt: !10061)
!10165 = !DILocation(line: 364, column: 26, scope: !4700, inlinedAt: !10061)
!10166 = !DILocation(line: 365, column: 6, scope: !4705, inlinedAt: !10061)
!10167 = !DILocation(line: 365, column: 11, scope: !4705, inlinedAt: !10061)
!10168 = !DILocation(line: 365, column: 6, scope: !4588, inlinedAt: !10061)
!10169 = !DILocation(line: 365, column: 26, scope: !4705, inlinedAt: !10061)
!10170 = !DILocation(line: 366, column: 6, scope: !4710, inlinedAt: !10061)
!10171 = !DILocation(line: 366, column: 11, scope: !4710, inlinedAt: !10061)
!10172 = !DILocation(line: 366, column: 6, scope: !4588, inlinedAt: !10061)
!10173 = !DILocation(line: 366, column: 26, scope: !4710, inlinedAt: !10061)
!10174 = !DILocation(line: 367, column: 6, scope: !4715, inlinedAt: !10061)
!10175 = !DILocation(line: 367, column: 11, scope: !4715, inlinedAt: !10061)
!10176 = !DILocation(line: 367, column: 6, scope: !4588, inlinedAt: !10061)
!10177 = !DILocation(line: 367, column: 26, scope: !4715, inlinedAt: !10061)
!10178 = !DILocation(line: 368, column: 6, scope: !4720, inlinedAt: !10061)
!10179 = !DILocation(line: 368, column: 11, scope: !4720, inlinedAt: !10061)
!10180 = !DILocation(line: 368, column: 6, scope: !4588, inlinedAt: !10061)
!10181 = !DILocation(line: 368, column: 26, scope: !4720, inlinedAt: !10061)
!10182 = !DILocation(line: 369, column: 6, scope: !4725, inlinedAt: !10061)
!10183 = !DILocation(line: 369, column: 11, scope: !4725, inlinedAt: !10061)
!10184 = !DILocation(line: 369, column: 6, scope: !4588, inlinedAt: !10061)
!10185 = !DILocation(line: 369, column: 26, scope: !4725, inlinedAt: !10061)
!10186 = !DILocation(line: 370, column: 6, scope: !4730, inlinedAt: !10061)
!10187 = !DILocation(line: 370, column: 11, scope: !4730, inlinedAt: !10061)
!10188 = !DILocation(line: 370, column: 6, scope: !4588, inlinedAt: !10061)
!10189 = !DILocation(line: 370, column: 26, scope: !4730, inlinedAt: !10061)
!10190 = !DILocation(line: 371, column: 6, scope: !4735, inlinedAt: !10061)
!10191 = !DILocation(line: 371, column: 11, scope: !4735, inlinedAt: !10061)
!10192 = !DILocation(line: 371, column: 6, scope: !4588, inlinedAt: !10061)
!10193 = !DILocation(line: 371, column: 26, scope: !4735, inlinedAt: !10061)
!10194 = !DILocation(line: 372, column: 6, scope: !4740, inlinedAt: !10061)
!10195 = !DILocation(line: 372, column: 11, scope: !4740, inlinedAt: !10061)
!10196 = !DILocation(line: 372, column: 6, scope: !4588, inlinedAt: !10061)
!10197 = !DILocation(line: 372, column: 26, scope: !4740, inlinedAt: !10061)
!10198 = !DILocation(line: 373, column: 6, scope: !4745, inlinedAt: !10061)
!10199 = !DILocation(line: 373, column: 11, scope: !4745, inlinedAt: !10061)
!10200 = !DILocation(line: 373, column: 6, scope: !4588, inlinedAt: !10061)
!10201 = !DILocation(line: 373, column: 26, scope: !4745, inlinedAt: !10061)
!10202 = !DILocation(line: 374, column: 6, scope: !4750, inlinedAt: !10061)
!10203 = !DILocation(line: 374, column: 11, scope: !4750, inlinedAt: !10061)
!10204 = !DILocation(line: 374, column: 6, scope: !4588, inlinedAt: !10061)
!10205 = !DILocation(line: 374, column: 26, scope: !4750, inlinedAt: !10061)
!10206 = !DILocation(line: 375, column: 6, scope: !4755, inlinedAt: !10061)
!10207 = !DILocation(line: 375, column: 11, scope: !4755, inlinedAt: !10061)
!10208 = !DILocation(line: 375, column: 6, scope: !4588, inlinedAt: !10061)
!10209 = !DILocation(line: 375, column: 27, scope: !4755, inlinedAt: !10061)
!10210 = !DILocation(line: 376, column: 6, scope: !4760, inlinedAt: !10061)
!10211 = !DILocation(line: 376, column: 11, scope: !4760, inlinedAt: !10061)
!10212 = !DILocation(line: 376, column: 6, scope: !4588, inlinedAt: !10061)
!10213 = !DILocation(line: 376, column: 32, scope: !4760, inlinedAt: !10061)
!10214 = !DILocation(line: 377, column: 6, scope: !4765, inlinedAt: !10061)
!10215 = !DILocation(line: 377, column: 11, scope: !4765, inlinedAt: !10061)
!10216 = !DILocation(line: 377, column: 6, scope: !4588, inlinedAt: !10061)
!10217 = !DILocation(line: 377, column: 32, scope: !4765, inlinedAt: !10061)
!10218 = !DILocation(line: 378, column: 6, scope: !4770, inlinedAt: !10061)
!10219 = !DILocation(line: 378, column: 11, scope: !4770, inlinedAt: !10061)
!10220 = !DILocation(line: 378, column: 6, scope: !4588, inlinedAt: !10061)
!10221 = !DILocation(line: 378, column: 32, scope: !4770, inlinedAt: !10061)
!10222 = !DILocation(line: 379, column: 6, scope: !4775, inlinedAt: !10061)
!10223 = !DILocation(line: 379, column: 11, scope: !4775, inlinedAt: !10061)
!10224 = !DILocation(line: 379, column: 6, scope: !4588, inlinedAt: !10061)
!10225 = !DILocation(line: 379, column: 33, scope: !4775, inlinedAt: !10061)
!10226 = !DILocation(line: 380, column: 6, scope: !4780, inlinedAt: !10061)
!10227 = !DILocation(line: 380, column: 11, scope: !4780, inlinedAt: !10061)
!10228 = !DILocation(line: 380, column: 6, scope: !4588, inlinedAt: !10061)
!10229 = !DILocation(line: 380, column: 33, scope: !4780, inlinedAt: !10061)
!10230 = !DILocation(line: 381, column: 6, scope: !4785, inlinedAt: !10061)
!10231 = !DILocation(line: 381, column: 11, scope: !4785, inlinedAt: !10061)
!10232 = !DILocation(line: 381, column: 6, scope: !4588, inlinedAt: !10061)
!10233 = !DILocation(line: 381, column: 33, scope: !4785, inlinedAt: !10061)
!10234 = !DILocation(line: 382, column: 2, scope: !4790, inlinedAt: !10061)
!10235 = !DILocation(line: 382, column: 2, scope: !4794, inlinedAt: !10061)
!10236 = !DILocation(line: 382, column: 2, scope: !4795, inlinedAt: !10061)
!10237 = !DILocation(line: 386, column: 1, scope: !4588, inlinedAt: !10061)
!10238 = !DILocation(line: 547, column: 9, scope: !4571, inlinedAt: !10053)
!10239 = !DILocation(line: 549, column: 8, scope: !4801, inlinedAt: !10053)
!10240 = !DILocation(line: 549, column: 7, scope: !4571, inlinedAt: !10053)
!10241 = !DILocation(line: 550, column: 4, scope: !4801, inlinedAt: !10053)
!10242 = !DILocation(line: 553, column: 33, scope: !4571, inlinedAt: !10053)
!10243 = !DILocation(line: 325, column: 6, scope: !4806, inlinedAt: !10059)
!10244 = !DILocation(line: 325, column: 6, scope: !4582, inlinedAt: !10059)
!10245 = !DILocation(line: 326, column: 3, scope: !4806, inlinedAt: !10059)
!10246 = !DILocation(line: 332, column: 9, scope: !4582, inlinedAt: !10059)
!10247 = !DILocation(line: 332, column: 15, scope: !4582, inlinedAt: !10059)
!10248 = !DILocation(line: 332, column: 2, scope: !4582, inlinedAt: !10059)
!10249 = !DILocation(line: 336, column: 1, scope: !4582, inlinedAt: !10059)
!10250 = !DILocation(line: 553, column: 5, scope: !4571, inlinedAt: !10053)
!10251 = !DILocation(line: 553, column: 41, scope: !4571, inlinedAt: !10053)
!10252 = !DILocation(line: 554, column: 5, scope: !4571, inlinedAt: !10053)
!10253 = !DILocation(line: 554, column: 12, scope: !4571, inlinedAt: !10053)
!10254 = !DILocation(line: 448, column: 31, scope: !4566, inlinedAt: !10052)
!10255 = !DILocation(line: 448, column: 34, scope: !4566, inlinedAt: !10052)
!10256 = !DILocation(line: 448, column: 14, scope: !4566, inlinedAt: !10052)
!10257 = !DILocation(line: 450, column: 22, scope: !4566, inlinedAt: !10052)
!10258 = !DILocation(line: 450, column: 25, scope: !4566, inlinedAt: !10052)
!10259 = !DILocation(line: 450, column: 30, scope: !4566, inlinedAt: !10052)
!10260 = !DILocation(line: 450, column: 36, scope: !4566, inlinedAt: !10052)
!10261 = !DILocation(line: 450, column: 8, scope: !4566, inlinedAt: !10052)
!10262 = !DILocation(line: 450, column: 6, scope: !4566, inlinedAt: !10052)
!10263 = !DILocation(line: 451, column: 9, scope: !4566, inlinedAt: !10052)
!10264 = !DILocation(line: 552, column: 3, scope: !4571, inlinedAt: !10053)
!10265 = !DILocation(line: 557, column: 19, scope: !4573, inlinedAt: !10053)
!10266 = !DILocation(line: 557, column: 25, scope: !4573, inlinedAt: !10053)
!10267 = !DILocation(line: 557, column: 9, scope: !4573, inlinedAt: !10053)
!10268 = !DILocation(line: 557, column: 2, scope: !4573, inlinedAt: !10053)
!10269 = !DILocation(line: 558, column: 1, scope: !4573, inlinedAt: !10053)
!10270 = !DILocation(line: 591, column: 3, scope: !10054)
!10271 = !DILocation(line: 592, column: 19, scope: !10050)
!10272 = !DILocation(line: 592, column: 26, scope: !10050)
!10273 = !DILocation(line: 592, column: 9, scope: !10050)
!10274 = !DILocation(line: 592, column: 2, scope: !10050)
!10275 = !DILocation(line: 593, column: 1, scope: !10050)
!10276 = distinct !DISubprogram(name: "hid_free_report", scope: !3, file: !3, line: 655, type: !10277, scopeLine: 656, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !371)
!10277 = !DISubroutineType(types: !10278)
!10278 = !{null, !115}
!10279 = !DILocalVariable(name: "report", arg: 1, scope: !10276, file: !3, line: 655, type: !115)
!10280 = !DILocation(line: 655, column: 48, scope: !10276)
!10281 = !DILocalVariable(name: "n", scope: !10276, file: !3, line: 657, type: !7)
!10282 = !DILocation(line: 657, column: 11, scope: !10276)
!10283 = !DILocation(line: 659, column: 9, scope: !10284)
!10284 = distinct !DILexicalBlock(scope: !10276, file: !3, line: 659, column: 2)
!10285 = !DILocation(line: 659, column: 7, scope: !10284)
!10286 = !DILocation(line: 659, column: 14, scope: !10287)
!10287 = distinct !DILexicalBlock(scope: !10284, file: !3, line: 659, column: 2)
!10288 = !DILocation(line: 659, column: 18, scope: !10287)
!10289 = !DILocation(line: 659, column: 26, scope: !10287)
!10290 = !DILocation(line: 659, column: 16, scope: !10287)
!10291 = !DILocation(line: 659, column: 2, scope: !10284)
!10292 = !DILocation(line: 660, column: 9, scope: !10287)
!10293 = !DILocation(line: 660, column: 17, scope: !10287)
!10294 = !DILocation(line: 660, column: 23, scope: !10287)
!10295 = !DILocation(line: 660, column: 3, scope: !10287)
!10296 = !DILocation(line: 659, column: 37, scope: !10287)
!10297 = !DILocation(line: 659, column: 2, scope: !10287)
!10298 = distinct !{!10298, !10291, !10299}
!10299 = !DILocation(line: 660, column: 25, scope: !10284)
!10300 = !DILocation(line: 661, column: 8, scope: !10276)
!10301 = !DILocation(line: 661, column: 2, scope: !10276)
!10302 = !DILocation(line: 662, column: 1, scope: !10276)
!10303 = distinct !DISubprogram(name: "implement", scope: !3, file: !3, line: 1415, type: !10304, scopeLine: 1417, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !371)
!10304 = !DISubroutineType(types: !10305)
!10305 = !{null, !4359, !4068, !7, !7, !440}
!10306 = !DILocation(line: 15, column: 9, scope: !6107, inlinedAt: !10307)
!10307 = distinct !DILocation(line: 1426, column: 4, scope: !10308)
!10308 = distinct !DILexicalBlock(scope: !10309, file: !3, line: 1425, column: 28)
!10309 = distinct !DILexicalBlock(scope: !10310, file: !3, line: 1425, column: 7)
!10310 = distinct !DILexicalBlock(scope: !10311, file: !3, line: 1422, column: 21)
!10311 = distinct !DILexicalBlock(scope: !10312, file: !3, line: 1422, column: 13)
!10312 = distinct !DILexicalBlock(scope: !10303, file: !3, line: 1418, column: 6)
!10313 = !DILocation(line: 15, column: 9, scope: !6120, inlinedAt: !10307)
!10314 = !DILocation(line: 15, column: 9, scope: !6123, inlinedAt: !10307)
!10315 = !DILocation(line: 15, column: 9, scope: !6107, inlinedAt: !10316)
!10316 = distinct !DILocation(line: 1419, column: 3, scope: !10317)
!10317 = distinct !DILexicalBlock(scope: !10312, file: !3, line: 1418, column: 24)
!10318 = !DILocation(line: 15, column: 9, scope: !6120, inlinedAt: !10316)
!10319 = !DILocation(line: 15, column: 9, scope: !6123, inlinedAt: !10316)
!10320 = !DILocalVariable(name: "hid", arg: 1, scope: !10303, file: !3, line: 1415, type: !4359)
!10321 = !DILocation(line: 1415, column: 48, scope: !10303)
!10322 = !DILocalVariable(name: "report", arg: 2, scope: !10303, file: !3, line: 1415, type: !4068)
!10323 = !DILocation(line: 1415, column: 57, scope: !10303)
!10324 = !DILocalVariable(name: "offset", arg: 3, scope: !10303, file: !3, line: 1416, type: !7)
!10325 = !DILocation(line: 1416, column: 18, scope: !10303)
!10326 = !DILocalVariable(name: "n", arg: 4, scope: !10303, file: !3, line: 1416, type: !7)
!10327 = !DILocation(line: 1416, column: 35, scope: !10303)
!10328 = !DILocalVariable(name: "value", arg: 5, scope: !10303, file: !3, line: 1416, type: !440)
!10329 = !DILocation(line: 1416, column: 42, scope: !10303)
!10330 = !DILocation(line: 1418, column: 6, scope: !10312)
!10331 = !DILocation(line: 1418, column: 6, scope: !10303)
!10332 = !DILocation(line: 1419, column: 3, scope: !10317)
!10333 = !DILocation(line: 1421, column: 5, scope: !10317)
!10334 = !DILocation(line: 1422, column: 2, scope: !10317)
!10335 = !DILocation(line: 1422, column: 13, scope: !10311)
!10336 = !DILocation(line: 1422, column: 15, scope: !10311)
!10337 = !DILocation(line: 1422, column: 13, scope: !10312)
!10338 = !DILocalVariable(name: "m", scope: !10310, file: !3, line: 1423, type: !440)
!10339 = !DILocation(line: 1423, column: 7, scope: !10310)
!10340 = !DILocation(line: 1423, column: 18, scope: !10310)
!10341 = !DILocation(line: 1423, column: 15, scope: !10310)
!10342 = !DILocation(line: 1423, column: 21, scope: !10310)
!10343 = !DILocation(line: 1425, column: 7, scope: !10309)
!10344 = !DILocation(line: 1425, column: 7, scope: !10310)
!10345 = !DILocation(line: 1426, column: 4, scope: !10308)
!10346 = !DILocalVariable(name: "__ret_warn_on", scope: !10347, file: !3, line: 1429, type: !169)
!10347 = distinct !DILexicalBlock(scope: !10308, file: !3, line: 1429, column: 4)
!10348 = !DILocation(line: 1429, column: 4, scope: !10347)
!10349 = !DILocation(line: 1429, column: 4, scope: !10350)
!10350 = distinct !DILexicalBlock(scope: !10347, file: !3, line: 1429, column: 4)
!10351 = !DILocation(line: 1429, column: 4, scope: !10352)
!10352 = distinct !DILexicalBlock(scope: !10350, file: !3, line: 1429, column: 4)
!10353 = !DILocation(line: 1429, column: 4, scope: !10354)
!10354 = distinct !DILexicalBlock(scope: !10352, file: !3, line: 1429, column: 4)
!10355 = !DILocation(line: 1429, column: 4, scope: !10356)
!10356 = distinct !DILexicalBlock(scope: !10352, file: !3, line: 1429, column: 4)
!10357 = !{i32 -2141916285, i32 -2141916256, i32 -2141916210, i32 -2141916152, i32 -2141916098, i32 -2141916044, i32 -2141915989, i32 -2141915958}
!10358 = !DILocation(line: 1429, column: 4, scope: !10359)
!10359 = distinct !DILexicalBlock(scope: !10352, file: !3, line: 1429, column: 4)
!10360 = !{i32 -2141915553, i32 -2141915546, i32 -2141915494, i32 -2141915463, i32 -2141915433}
!10361 = !DILocation(line: 1429, column: 4, scope: !10362)
!10362 = distinct !DILexicalBlock(scope: !10352, file: !3, line: 1429, column: 4)
!10363 = !DILocation(line: 1430, column: 13, scope: !10308)
!10364 = !DILocation(line: 1430, column: 10, scope: !10308)
!10365 = !DILocation(line: 1431, column: 3, scope: !10308)
!10366 = !DILocation(line: 1432, column: 2, scope: !10310)
!10367 = !DILocation(line: 1434, column: 14, scope: !10303)
!10368 = !DILocation(line: 1434, column: 22, scope: !10303)
!10369 = !DILocation(line: 1434, column: 30, scope: !10303)
!10370 = !DILocation(line: 1434, column: 33, scope: !10303)
!10371 = !DILocation(line: 1434, column: 2, scope: !10303)
!10372 = !DILocation(line: 1435, column: 1, scope: !10303)
!10373 = distinct !DISubprogram(name: "__implement", scope: !3, file: !3, line: 1391, type: !10374, scopeLine: 1392, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !371)
!10374 = !DISubroutineType(types: !10375)
!10375 = !{null, !4068, !7, !169, !440}
!10376 = !DILocalVariable(name: "report", arg: 1, scope: !10373, file: !3, line: 1391, type: !4068)
!10377 = !DILocation(line: 1391, column: 29, scope: !10373)
!10378 = !DILocalVariable(name: "offset", arg: 2, scope: !10373, file: !3, line: 1391, type: !7)
!10379 = !DILocation(line: 1391, column: 46, scope: !10373)
!10380 = !DILocalVariable(name: "n", arg: 3, scope: !10373, file: !3, line: 1391, type: !169)
!10381 = !DILocation(line: 1391, column: 58, scope: !10373)
!10382 = !DILocalVariable(name: "value", arg: 4, scope: !10373, file: !3, line: 1391, type: !440)
!10383 = !DILocation(line: 1391, column: 65, scope: !10373)
!10384 = !DILocalVariable(name: "idx", scope: !10373, file: !3, line: 1393, type: !7)
!10385 = !DILocation(line: 1393, column: 15, scope: !10373)
!10386 = !DILocation(line: 1393, column: 21, scope: !10373)
!10387 = !DILocation(line: 1393, column: 28, scope: !10373)
!10388 = !DILocalVariable(name: "bit_shift", scope: !10373, file: !3, line: 1394, type: !7)
!10389 = !DILocation(line: 1394, column: 15, scope: !10373)
!10390 = !DILocation(line: 1394, column: 27, scope: !10373)
!10391 = !DILocation(line: 1394, column: 34, scope: !10373)
!10392 = !DILocalVariable(name: "bits_to_set", scope: !10373, file: !3, line: 1395, type: !169)
!10393 = !DILocation(line: 1395, column: 6, scope: !10373)
!10394 = !DILocation(line: 1395, column: 24, scope: !10373)
!10395 = !DILocation(line: 1395, column: 22, scope: !10373)
!10396 = !DILocation(line: 1397, column: 2, scope: !10373)
!10397 = !DILocation(line: 1397, column: 9, scope: !10373)
!10398 = !DILocation(line: 1397, column: 13, scope: !10373)
!10399 = !DILocation(line: 1397, column: 11, scope: !10373)
!10400 = !DILocation(line: 1397, column: 25, scope: !10373)
!10401 = !DILocation(line: 1398, column: 28, scope: !10402)
!10402 = distinct !DILexicalBlock(scope: !10373, file: !3, line: 1397, column: 31)
!10403 = !DILocation(line: 1398, column: 25, scope: !10402)
!10404 = !DILocation(line: 1398, column: 18, scope: !10402)
!10405 = !DILocation(line: 1398, column: 3, scope: !10402)
!10406 = !DILocation(line: 1398, column: 10, scope: !10402)
!10407 = !DILocation(line: 1398, column: 15, scope: !10402)
!10408 = !DILocation(line: 1399, column: 18, scope: !10402)
!10409 = !DILocation(line: 1399, column: 27, scope: !10402)
!10410 = !DILocation(line: 1399, column: 24, scope: !10402)
!10411 = !DILocation(line: 1399, column: 3, scope: !10402)
!10412 = !DILocation(line: 1399, column: 10, scope: !10402)
!10413 = !DILocation(line: 1399, column: 15, scope: !10402)
!10414 = !DILocation(line: 1400, column: 13, scope: !10402)
!10415 = !DILocation(line: 1400, column: 9, scope: !10402)
!10416 = !DILocation(line: 1401, column: 8, scope: !10402)
!10417 = !DILocation(line: 1401, column: 5, scope: !10402)
!10418 = !DILocation(line: 1402, column: 15, scope: !10402)
!10419 = !DILocation(line: 1403, column: 13, scope: !10402)
!10420 = !DILocation(line: 1404, column: 6, scope: !10402)
!10421 = distinct !{!10421, !10396, !10422}
!10422 = !DILocation(line: 1405, column: 2, scope: !10373)
!10423 = !DILocation(line: 1408, column: 6, scope: !10424)
!10424 = distinct !DILexicalBlock(scope: !10373, file: !3, line: 1408, column: 6)
!10425 = !DILocation(line: 1408, column: 6, scope: !10373)
!10426 = !DILocalVariable(name: "bit_mask", scope: !10427, file: !3, line: 1409, type: !1369)
!10427 = distinct !DILexicalBlock(scope: !10424, file: !3, line: 1408, column: 9)
!10428 = !DILocation(line: 1409, column: 6, scope: !10427)
!10429 = !DILocation(line: 1409, column: 25, scope: !10427)
!10430 = !DILocation(line: 1409, column: 22, scope: !10427)
!10431 = !DILocation(line: 1409, column: 28, scope: !10427)
!10432 = !DILocation(line: 1409, column: 17, scope: !10427)
!10433 = !DILocation(line: 1410, column: 20, scope: !10427)
!10434 = !DILocation(line: 1410, column: 32, scope: !10427)
!10435 = !DILocation(line: 1410, column: 29, scope: !10427)
!10436 = !DILocation(line: 1410, column: 18, scope: !10427)
!10437 = !DILocation(line: 1410, column: 3, scope: !10427)
!10438 = !DILocation(line: 1410, column: 10, scope: !10427)
!10439 = !DILocation(line: 1410, column: 15, scope: !10427)
!10440 = !DILocation(line: 1411, column: 18, scope: !10427)
!10441 = !DILocation(line: 1411, column: 27, scope: !10427)
!10442 = !DILocation(line: 1411, column: 24, scope: !10427)
!10443 = !DILocation(line: 1411, column: 3, scope: !10427)
!10444 = !DILocation(line: 1411, column: 10, scope: !10427)
!10445 = !DILocation(line: 1411, column: 15, scope: !10427)
!10446 = !DILocation(line: 1412, column: 2, scope: !10427)
!10447 = !DILocation(line: 1413, column: 1, scope: !10373)
!10448 = distinct !DISubprogram(name: "get_order", scope: !10449, file: !10449, line: 29, type: !10450, scopeLine: 30, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !371)
!10449 = !DIFile(filename: "./include/asm-generic/getorder.h", directory: "/home/lizy2001/genbc/linux")
!10450 = !DISubroutineType(types: !10451)
!10451 = !{!169, !205}
!10452 = !DILocalVariable(name: "x", arg: 1, scope: !10453, file: !8021, line: 366, type: !444)
!10453 = distinct !DISubprogram(name: "fls64", scope: !8021, file: !8021, line: 366, type: !10454, scopeLine: 367, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !371)
!10454 = !DISubroutineType(types: !10455)
!10455 = !{!169, !444}
!10456 = !DILocation(line: 366, column: 40, scope: !10453, inlinedAt: !10457)
!10457 = distinct !DILocation(line: 46, column: 9, scope: !10448)
!10458 = !DILocalVariable(name: "bitpos", scope: !10453, file: !8021, line: 368, type: !169)
!10459 = !DILocation(line: 368, column: 6, scope: !10453, inlinedAt: !10457)
!10460 = !DILocalVariable(name: "size", arg: 1, scope: !10448, file: !10449, line: 29, type: !205)
!10461 = !DILocation(line: 29, column: 63, scope: !10448)
!10462 = !DILocation(line: 31, column: 27, scope: !10463)
!10463 = distinct !DILexicalBlock(scope: !10448, file: !10449, line: 31, column: 6)
!10464 = !DILocation(line: 31, column: 6, scope: !10463)
!10465 = !DILocation(line: 31, column: 6, scope: !10448)
!10466 = !DILocation(line: 32, column: 8, scope: !10467)
!10467 = distinct !DILexicalBlock(scope: !10468, file: !10449, line: 32, column: 7)
!10468 = distinct !DILexicalBlock(scope: !10463, file: !10449, line: 31, column: 34)
!10469 = !DILocation(line: 32, column: 7, scope: !10468)
!10470 = !DILocation(line: 33, column: 4, scope: !10467)
!10471 = !DILocation(line: 35, column: 7, scope: !10472)
!10472 = distinct !DILexicalBlock(scope: !10468, file: !10449, line: 35, column: 7)
!10473 = !DILocation(line: 35, column: 12, scope: !10472)
!10474 = !DILocation(line: 35, column: 7, scope: !10468)
!10475 = !DILocation(line: 36, column: 4, scope: !10472)
!10476 = !DILocation(line: 38, column: 10, scope: !10468)
!10477 = !DILocation(line: 38, column: 28, scope: !10468)
!10478 = !DILocation(line: 38, column: 41, scope: !10468)
!10479 = !DILocation(line: 38, column: 3, scope: !10468)
!10480 = !DILocation(line: 41, column: 6, scope: !10448)
!10481 = !DILocation(line: 42, column: 7, scope: !10448)
!10482 = !DILocation(line: 46, column: 15, scope: !10448)
!10483 = !DILocation(line: 374, column: 2, scope: !10453, inlinedAt: !10457)
!10484 = !DILocation(line: 376, column: 14, scope: !10453, inlinedAt: !10457)
!10485 = !{i32 362698}
!10486 = !DILocation(line: 377, column: 9, scope: !10453, inlinedAt: !10457)
!10487 = !DILocation(line: 377, column: 16, scope: !10453, inlinedAt: !10457)
!10488 = !DILocation(line: 46, column: 2, scope: !10448)
!10489 = !DILocation(line: 48, column: 1, scope: !10448)
!10490 = distinct !DISubprogram(name: "__ilog2_u64", scope: !10491, file: !10491, line: 30, type: !10492, scopeLine: 31, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !371)
!10491 = !DIFile(filename: "./include/linux/log2.h", directory: "/home/lizy2001/genbc/linux")
!10492 = !DISubroutineType(types: !10493)
!10493 = !{!169, !443}
!10494 = !DILocation(line: 366, column: 40, scope: !10453, inlinedAt: !10495)
!10495 = distinct !DILocation(line: 32, column: 9, scope: !10490)
!10496 = !DILocation(line: 368, column: 6, scope: !10453, inlinedAt: !10495)
!10497 = !DILocalVariable(name: "n", arg: 1, scope: !10490, file: !10491, line: 30, type: !443)
!10498 = !DILocation(line: 30, column: 21, scope: !10490)
!10499 = !DILocation(line: 32, column: 15, scope: !10490)
!10500 = !DILocation(line: 374, column: 2, scope: !10453, inlinedAt: !10495)
!10501 = !DILocation(line: 376, column: 14, scope: !10453, inlinedAt: !10495)
!10502 = !DILocation(line: 377, column: 9, scope: !10453, inlinedAt: !10495)
!10503 = !DILocation(line: 377, column: 16, scope: !10453, inlinedAt: !10495)
!10504 = !DILocation(line: 32, column: 18, scope: !10490)
!10505 = !DILocation(line: 32, column: 2, scope: !10490)
!10506 = distinct !DISubprogram(name: "kasan_kmalloc", scope: !10507, file: !10507, line: 137, type: !10508, scopeLine: 139, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !371)
!10507 = !DIFile(filename: "./include/linux/kasan.h", directory: "/home/lizy2001/genbc/linux")
!10508 = !DISubroutineType(types: !10509)
!10509 = !{!114, !960, !2141, !604, !112}
!10510 = !DILocalVariable(name: "s", arg: 1, scope: !10506, file: !10507, line: 137, type: !960)
!10511 = !DILocation(line: 137, column: 54, scope: !10506)
!10512 = !DILocalVariable(name: "object", arg: 2, scope: !10506, file: !10507, line: 137, type: !2141)
!10513 = !DILocation(line: 137, column: 69, scope: !10506)
!10514 = !DILocalVariable(name: "size", arg: 3, scope: !10506, file: !10507, line: 138, type: !604)
!10515 = !DILocation(line: 138, column: 12, scope: !10506)
!10516 = !DILocalVariable(name: "flags", arg: 4, scope: !10506, file: !10507, line: 138, type: !112)
!10517 = !DILocation(line: 138, column: 24, scope: !10506)
!10518 = !DILocation(line: 140, column: 17, scope: !10506)
!10519 = !DILocation(line: 140, column: 2, scope: !10506)
!10520 = distinct !DISubprogram(name: "hid_process_event", scope: !3, file: !3, line: 1499, type: !10521, scopeLine: 1501, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !371)
!10521 = !DISubroutineType(types: !10522)
!10522 = !{null, !3986, !130, !137, !168, !169}
!10523 = !DILocalVariable(name: "hid", arg: 1, scope: !10520, file: !3, line: 1499, type: !3986)
!10524 = !DILocation(line: 1499, column: 50, scope: !10520)
!10525 = !DILocalVariable(name: "field", arg: 2, scope: !10520, file: !3, line: 1499, type: !130)
!10526 = !DILocation(line: 1499, column: 73, scope: !10520)
!10527 = !DILocalVariable(name: "usage", arg: 3, scope: !10520, file: !3, line: 1500, type: !137)
!10528 = !DILocation(line: 1500, column: 21, scope: !10520)
!10529 = !DILocalVariable(name: "value", arg: 4, scope: !10520, file: !3, line: 1500, type: !168)
!10530 = !DILocation(line: 1500, column: 34, scope: !10520)
!10531 = !DILocalVariable(name: "interrupt", arg: 5, scope: !10520, file: !3, line: 1500, type: !169)
!10532 = !DILocation(line: 1500, column: 45, scope: !10520)
!10533 = !DILocalVariable(name: "hdrv", scope: !10520, file: !3, line: 1502, type: !4030)
!10534 = !DILocation(line: 1502, column: 21, scope: !10520)
!10535 = !DILocation(line: 1502, column: 28, scope: !10520)
!10536 = !DILocation(line: 1502, column: 33, scope: !10520)
!10537 = !DILocalVariable(name: "ret", scope: !10520, file: !3, line: 1503, type: !169)
!10538 = !DILocation(line: 1503, column: 6, scope: !10520)
!10539 = !DILocation(line: 1505, column: 19, scope: !10540)
!10540 = distinct !DILexicalBlock(scope: !10520, file: !3, line: 1505, column: 6)
!10541 = !DILocation(line: 1505, column: 24, scope: !10540)
!10542 = !DILocation(line: 1505, column: 7, scope: !10540)
!10543 = !DILocation(line: 1505, column: 6, scope: !10520)
!10544 = !DILocation(line: 1506, column: 3, scope: !10540)
!10545 = !DILocation(line: 1506, column: 3, scope: !10546)
!10546 = distinct !DILexicalBlock(scope: !10540, file: !3, line: 1506, column: 3)
!10547 = !DILocation(line: 1508, column: 6, scope: !10548)
!10548 = distinct !DILexicalBlock(scope: !10520, file: !3, line: 1508, column: 6)
!10549 = !DILocation(line: 1508, column: 11, scope: !10548)
!10550 = !DILocation(line: 1508, column: 14, scope: !10548)
!10551 = !DILocation(line: 1508, column: 20, scope: !10548)
!10552 = !DILocation(line: 1508, column: 26, scope: !10548)
!10553 = !DILocation(line: 1508, column: 45, scope: !10548)
!10554 = !DILocation(line: 1508, column: 50, scope: !10548)
!10555 = !DILocation(line: 1508, column: 29, scope: !10548)
!10556 = !DILocation(line: 1508, column: 6, scope: !10520)
!10557 = !DILocation(line: 1509, column: 9, scope: !10558)
!10558 = distinct !DILexicalBlock(scope: !10548, file: !3, line: 1508, column: 58)
!10559 = !DILocation(line: 1509, column: 15, scope: !10558)
!10560 = !DILocation(line: 1509, column: 21, scope: !10558)
!10561 = !DILocation(line: 1509, column: 26, scope: !10558)
!10562 = !DILocation(line: 1509, column: 33, scope: !10558)
!10563 = !DILocation(line: 1509, column: 40, scope: !10558)
!10564 = !DILocation(line: 1509, column: 7, scope: !10558)
!10565 = !DILocation(line: 1510, column: 7, scope: !10566)
!10566 = distinct !DILexicalBlock(scope: !10558, file: !3, line: 1510, column: 7)
!10567 = !DILocation(line: 1510, column: 11, scope: !10566)
!10568 = !DILocation(line: 1510, column: 7, scope: !10558)
!10569 = !DILocation(line: 1511, column: 8, scope: !10570)
!10570 = distinct !DILexicalBlock(scope: !10571, file: !3, line: 1511, column: 8)
!10571 = distinct !DILexicalBlock(scope: !10566, file: !3, line: 1510, column: 17)
!10572 = !DILocation(line: 1511, column: 12, scope: !10570)
!10573 = !DILocation(line: 1511, column: 8, scope: !10571)
!10574 = !DILocation(line: 1512, column: 5, scope: !10570)
!10575 = !DILocation(line: 1514, column: 4, scope: !10571)
!10576 = !DILocation(line: 1516, column: 2, scope: !10558)
!10577 = !DILocation(line: 1518, column: 6, scope: !10578)
!10578 = distinct !DILexicalBlock(scope: !10520, file: !3, line: 1518, column: 6)
!10579 = !DILocation(line: 1518, column: 11, scope: !10578)
!10580 = !DILocation(line: 1518, column: 19, scope: !10578)
!10581 = !DILocation(line: 1518, column: 6, scope: !10520)
!10582 = !DILocation(line: 1519, column: 22, scope: !10578)
!10583 = !DILocation(line: 1519, column: 27, scope: !10578)
!10584 = !DILocation(line: 1519, column: 34, scope: !10578)
!10585 = !DILocation(line: 1519, column: 41, scope: !10578)
!10586 = !DILocation(line: 1519, column: 3, scope: !10578)
!10587 = !DILocation(line: 1520, column: 6, scope: !10588)
!10588 = distinct !DILexicalBlock(scope: !10520, file: !3, line: 1520, column: 6)
!10589 = !DILocation(line: 1520, column: 11, scope: !10588)
!10590 = !DILocation(line: 1520, column: 19, scope: !10588)
!10591 = !DILocation(line: 1520, column: 40, scope: !10588)
!10592 = !DILocation(line: 1520, column: 43, scope: !10588)
!10593 = !DILocation(line: 1520, column: 53, scope: !10588)
!10594 = !DILocation(line: 1520, column: 56, scope: !10588)
!10595 = !DILocation(line: 1520, column: 61, scope: !10588)
!10596 = !DILocation(line: 1520, column: 6, scope: !10520)
!10597 = !DILocation(line: 1521, column: 3, scope: !10588)
!10598 = !DILocation(line: 1521, column: 8, scope: !10588)
!10599 = !DILocation(line: 1521, column: 25, scope: !10588)
!10600 = !DILocation(line: 1521, column: 30, scope: !10588)
!10601 = !DILocation(line: 1521, column: 37, scope: !10588)
!10602 = !DILocation(line: 1521, column: 44, scope: !10588)
!10603 = !DILocation(line: 1522, column: 1, scope: !10520)
!10604 = distinct !DISubprogram(name: "search", scope: !3, file: !3, line: 1441, type: !10605, scopeLine: 1442, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !371)
!10605 = !DISubroutineType(types: !10606)
!10606 = !{!169, !167, !168, !7}
!10607 = !DILocalVariable(name: "array", arg: 1, scope: !10604, file: !3, line: 1441, type: !167)
!10608 = !DILocation(line: 1441, column: 26, scope: !10604)
!10609 = !DILocalVariable(name: "value", arg: 2, scope: !10604, file: !3, line: 1441, type: !168)
!10610 = !DILocation(line: 1441, column: 39, scope: !10604)
!10611 = !DILocalVariable(name: "n", arg: 3, scope: !10604, file: !3, line: 1441, type: !7)
!10612 = !DILocation(line: 1441, column: 55, scope: !10604)
!10613 = !DILocation(line: 1443, column: 2, scope: !10604)
!10614 = !DILocation(line: 1443, column: 10, scope: !10604)
!10615 = !DILocation(line: 1444, column: 13, scope: !10616)
!10616 = distinct !DILexicalBlock(scope: !10617, file: !3, line: 1444, column: 7)
!10617 = distinct !DILexicalBlock(scope: !10604, file: !3, line: 1443, column: 14)
!10618 = !DILocation(line: 1444, column: 7, scope: !10616)
!10619 = !DILocation(line: 1444, column: 19, scope: !10616)
!10620 = !DILocation(line: 1444, column: 16, scope: !10616)
!10621 = !DILocation(line: 1444, column: 7, scope: !10617)
!10622 = !DILocation(line: 1445, column: 4, scope: !10616)
!10623 = distinct !{!10623, !10613, !10624}
!10624 = !DILocation(line: 1446, column: 2, scope: !10604)
!10625 = !DILocation(line: 1447, column: 2, scope: !10604)
!10626 = !DILocation(line: 1448, column: 1, scope: !10604)
!10627 = distinct !DISubprogram(name: "hid_match_usage", scope: !3, file: !3, line: 1481, type: !10628, scopeLine: 1482, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !371)
!10628 = !DISubroutineType(types: !10629)
!10629 = !{!169, !3986, !137}
!10630 = !DILocalVariable(name: "hid", arg: 1, scope: !10627, file: !3, line: 1481, type: !3986)
!10631 = !DILocation(line: 1481, column: 47, scope: !10627)
!10632 = !DILocalVariable(name: "usage", arg: 2, scope: !10627, file: !3, line: 1481, type: !137)
!10633 = !DILocation(line: 1481, column: 70, scope: !10627)
!10634 = !DILocalVariable(name: "id", scope: !10627, file: !3, line: 1483, type: !4070)
!10635 = !DILocation(line: 1483, column: 29, scope: !10627)
!10636 = !DILocation(line: 1483, column: 34, scope: !10627)
!10637 = !DILocation(line: 1483, column: 39, scope: !10627)
!10638 = !DILocation(line: 1483, column: 47, scope: !10627)
!10639 = !DILocation(line: 1485, column: 7, scope: !10640)
!10640 = distinct !DILexicalBlock(scope: !10627, file: !3, line: 1485, column: 6)
!10641 = !DILocation(line: 1485, column: 6, scope: !10627)
!10642 = !DILocation(line: 1486, column: 3, scope: !10640)
!10643 = !DILocation(line: 1488, column: 2, scope: !10627)
!10644 = !DILocation(line: 1488, column: 9, scope: !10645)
!10645 = distinct !DILexicalBlock(scope: !10646, file: !3, line: 1488, column: 2)
!10646 = distinct !DILexicalBlock(scope: !10627, file: !3, line: 1488, column: 2)
!10647 = !DILocation(line: 1488, column: 13, scope: !10645)
!10648 = !DILocation(line: 1488, column: 24, scope: !10645)
!10649 = !DILocation(line: 1488, column: 2, scope: !10646)
!10650 = !DILocation(line: 1489, column: 8, scope: !10651)
!10651 = distinct !DILexicalBlock(scope: !10645, file: !3, line: 1489, column: 7)
!10652 = !DILocation(line: 1489, column: 12, scope: !10651)
!10653 = !DILocation(line: 1489, column: 22, scope: !10651)
!10654 = !DILocation(line: 1489, column: 36, scope: !10651)
!10655 = !DILocation(line: 1490, column: 5, scope: !10651)
!10656 = !DILocation(line: 1490, column: 9, scope: !10651)
!10657 = !DILocation(line: 1490, column: 22, scope: !10651)
!10658 = !DILocation(line: 1490, column: 29, scope: !10651)
!10659 = !DILocation(line: 1490, column: 19, scope: !10651)
!10660 = !DILocation(line: 1490, column: 34, scope: !10651)
!10661 = !DILocation(line: 1491, column: 6, scope: !10651)
!10662 = !DILocation(line: 1491, column: 10, scope: !10651)
!10663 = !DILocation(line: 1491, column: 21, scope: !10651)
!10664 = !DILocation(line: 1491, column: 35, scope: !10651)
!10665 = !DILocation(line: 1492, column: 5, scope: !10651)
!10666 = !DILocation(line: 1492, column: 9, scope: !10651)
!10667 = !DILocation(line: 1492, column: 23, scope: !10651)
!10668 = !DILocation(line: 1492, column: 30, scope: !10651)
!10669 = !DILocation(line: 1492, column: 20, scope: !10651)
!10670 = !DILocation(line: 1492, column: 36, scope: !10651)
!10671 = !DILocation(line: 1493, column: 6, scope: !10651)
!10672 = !DILocation(line: 1493, column: 10, scope: !10651)
!10673 = !DILocation(line: 1493, column: 21, scope: !10651)
!10674 = !DILocation(line: 1493, column: 35, scope: !10651)
!10675 = !DILocation(line: 1494, column: 6, scope: !10651)
!10676 = !DILocation(line: 1494, column: 10, scope: !10651)
!10677 = !DILocation(line: 1494, column: 24, scope: !10651)
!10678 = !DILocation(line: 1494, column: 31, scope: !10651)
!10679 = !DILocation(line: 1494, column: 21, scope: !10651)
!10680 = !DILocation(line: 1489, column: 7, scope: !10645)
!10681 = !DILocation(line: 1495, column: 4, scope: !10651)
!10682 = !DILocation(line: 1494, column: 35, scope: !10651)
!10683 = !DILocation(line: 1488, column: 45, scope: !10645)
!10684 = !DILocation(line: 1488, column: 2, scope: !10645)
!10685 = distinct !{!10685, !10649, !10686}
!10686 = !DILocation(line: 1495, column: 11, scope: !10646)
!10687 = !DILocation(line: 1496, column: 2, scope: !10627)
!10688 = !DILocation(line: 1497, column: 1, scope: !10627)
!10689 = distinct !DISubprogram(name: "show_country", scope: !3, file: !3, line: 1909, type: !4428, scopeLine: 1911, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !371)
!10690 = !DILocalVariable(name: "dev", arg: 1, scope: !10689, file: !3, line: 1909, type: !3620)
!10691 = !DILocation(line: 1909, column: 29, scope: !10689)
!10692 = !DILocalVariable(name: "attr", arg: 2, scope: !10689, file: !3, line: 1909, type: !4430)
!10693 = !DILocation(line: 1909, column: 59, scope: !10689)
!10694 = !DILocalVariable(name: "buf", arg: 3, scope: !10689, file: !3, line: 1910, type: !509)
!10695 = !DILocation(line: 1910, column: 9, scope: !10689)
!10696 = !DILocalVariable(name: "hdev", scope: !10689, file: !3, line: 1912, type: !3986)
!10697 = !DILocation(line: 1912, column: 21, scope: !10689)
!10698 = !DILocalVariable(name: "__mptr", scope: !10699, file: !3, line: 1912, type: !114)
!10699 = distinct !DILexicalBlock(scope: !10689, file: !3, line: 1912, column: 28)
!10700 = !DILocation(line: 1912, column: 28, scope: !10699)
!10701 = !DILocation(line: 1912, column: 28, scope: !10702)
!10702 = distinct !DILexicalBlock(scope: !10699, file: !3, line: 1912, column: 28)
!10703 = !DILocation(line: 1914, column: 17, scope: !10689)
!10704 = !DILocation(line: 1914, column: 32, scope: !10689)
!10705 = !DILocation(line: 1914, column: 38, scope: !10689)
!10706 = !DILocation(line: 1914, column: 46, scope: !10689)
!10707 = !DILocation(line: 1914, column: 9, scope: !10689)
!10708 = !DILocation(line: 1914, column: 2, scope: !10689)
!10709 = distinct !DISubprogram(name: "modalias_show", scope: !3, file: !3, line: 2327, type: !4428, scopeLine: 2329, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !371)
!10710 = !DILocalVariable(name: "dev", arg: 1, scope: !10709, file: !3, line: 2327, type: !3620)
!10711 = !DILocation(line: 2327, column: 45, scope: !10709)
!10712 = !DILocalVariable(name: "a", arg: 2, scope: !10709, file: !3, line: 2327, type: !4430)
!10713 = !DILocation(line: 2327, column: 75, scope: !10709)
!10714 = !DILocalVariable(name: "buf", arg: 3, scope: !10709, file: !3, line: 2328, type: !509)
!10715 = !DILocation(line: 2328, column: 15, scope: !10709)
!10716 = !DILocalVariable(name: "hdev", scope: !10709, file: !3, line: 2330, type: !3986)
!10717 = !DILocation(line: 2330, column: 21, scope: !10709)
!10718 = !DILocalVariable(name: "__mptr", scope: !10719, file: !3, line: 2330, type: !114)
!10719 = distinct !DILexicalBlock(scope: !10709, file: !3, line: 2330, column: 28)
!10720 = !DILocation(line: 2330, column: 28, scope: !10719)
!10721 = !DILocation(line: 2330, column: 28, scope: !10722)
!10722 = distinct !DILexicalBlock(scope: !10719, file: !3, line: 2330, column: 28)
!10723 = !DILocation(line: 2332, column: 19, scope: !10709)
!10724 = !DILocation(line: 2333, column: 5, scope: !10709)
!10725 = !DILocation(line: 2333, column: 11, scope: !10709)
!10726 = !DILocation(line: 2333, column: 16, scope: !10709)
!10727 = !DILocation(line: 2333, column: 22, scope: !10709)
!10728 = !DILocation(line: 2333, column: 29, scope: !10709)
!10729 = !DILocation(line: 2333, column: 35, scope: !10709)
!10730 = !DILocation(line: 2333, column: 43, scope: !10709)
!10731 = !DILocation(line: 2333, column: 49, scope: !10709)
!10732 = !DILocation(line: 2332, column: 9, scope: !10709)
!10733 = !DILocation(line: 2332, column: 2, scope: !10709)
!10734 = distinct !DISubprogram(name: "read_report_descriptor", scope: !3, file: !3, line: 1890, type: !3422, scopeLine: 1893, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !371)
!10735 = !DILocalVariable(name: "filp", arg: 1, scope: !10734, file: !3, line: 1890, type: !377)
!10736 = !DILocation(line: 1890, column: 37, scope: !10734)
!10737 = !DILocalVariable(name: "kobj", arg: 2, scope: !10734, file: !3, line: 1890, type: !3329)
!10738 = !DILocation(line: 1890, column: 59, scope: !10734)
!10739 = !DILocalVariable(name: "attr", arg: 3, scope: !10734, file: !3, line: 1891, type: !3414)
!10740 = !DILocation(line: 1891, column: 25, scope: !10734)
!10741 = !DILocalVariable(name: "buf", arg: 4, scope: !10734, file: !3, line: 1892, type: !509)
!10742 = !DILocation(line: 1892, column: 9, scope: !10734)
!10743 = !DILocalVariable(name: "off", arg: 5, scope: !10734, file: !3, line: 1892, type: !555)
!10744 = !DILocation(line: 1892, column: 21, scope: !10734)
!10745 = !DILocalVariable(name: "count", arg: 6, scope: !10734, file: !3, line: 1892, type: !604)
!10746 = !DILocation(line: 1892, column: 33, scope: !10734)
!10747 = !DILocalVariable(name: "dev", scope: !10734, file: !3, line: 1894, type: !3620)
!10748 = !DILocation(line: 1894, column: 17, scope: !10734)
!10749 = !DILocation(line: 1894, column: 35, scope: !10734)
!10750 = !DILocation(line: 1894, column: 23, scope: !10734)
!10751 = !DILocalVariable(name: "hdev", scope: !10734, file: !3, line: 1895, type: !3986)
!10752 = !DILocation(line: 1895, column: 21, scope: !10734)
!10753 = !DILocalVariable(name: "__mptr", scope: !10754, file: !3, line: 1895, type: !114)
!10754 = distinct !DILexicalBlock(scope: !10734, file: !3, line: 1895, column: 28)
!10755 = !DILocation(line: 1895, column: 28, scope: !10754)
!10756 = !DILocation(line: 1895, column: 28, scope: !10757)
!10757 = distinct !DILexicalBlock(scope: !10754, file: !3, line: 1895, column: 28)
!10758 = !DILocation(line: 1897, column: 6, scope: !10759)
!10759 = distinct !DILexicalBlock(scope: !10734, file: !3, line: 1897, column: 6)
!10760 = !DILocation(line: 1897, column: 13, scope: !10759)
!10761 = !DILocation(line: 1897, column: 19, scope: !10759)
!10762 = !DILocation(line: 1897, column: 10, scope: !10759)
!10763 = !DILocation(line: 1897, column: 6, scope: !10734)
!10764 = !DILocation(line: 1898, column: 3, scope: !10759)
!10765 = !DILocation(line: 1900, column: 6, scope: !10766)
!10766 = distinct !DILexicalBlock(scope: !10734, file: !3, line: 1900, column: 6)
!10767 = !DILocation(line: 1900, column: 12, scope: !10766)
!10768 = !DILocation(line: 1900, column: 10, scope: !10766)
!10769 = !DILocation(line: 1900, column: 20, scope: !10766)
!10770 = !DILocation(line: 1900, column: 26, scope: !10766)
!10771 = !DILocation(line: 1900, column: 18, scope: !10766)
!10772 = !DILocation(line: 1900, column: 6, scope: !10734)
!10773 = !DILocation(line: 1901, column: 11, scope: !10766)
!10774 = !DILocation(line: 1901, column: 17, scope: !10766)
!10775 = !DILocation(line: 1901, column: 25, scope: !10766)
!10776 = !DILocation(line: 1901, column: 23, scope: !10766)
!10777 = !DILocation(line: 1901, column: 9, scope: !10766)
!10778 = !DILocation(line: 1901, column: 3, scope: !10766)
!10779 = !DILocation(line: 1903, column: 9, scope: !10734)
!10780 = !DILocation(line: 1903, column: 14, scope: !10734)
!10781 = !DILocation(line: 1903, column: 20, scope: !10734)
!10782 = !DILocation(line: 1903, column: 28, scope: !10734)
!10783 = !DILocation(line: 1903, column: 26, scope: !10734)
!10784 = !DILocation(line: 1903, column: 33, scope: !10734)
!10785 = !DILocation(line: 1903, column: 2, scope: !10734)
!10786 = !DILocation(line: 1905, column: 9, scope: !10734)
!10787 = !DILocation(line: 1905, column: 2, scope: !10734)
!10788 = !DILocation(line: 1906, column: 1, scope: !10734)
!10789 = distinct !DISubprogram(name: "kobj_to_dev", scope: !73, file: !73, line: 591, type: !10790, scopeLine: 592, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !371)
!10790 = !DISubroutineType(types: !10791)
!10791 = !{!3620, !3329}
!10792 = !DILocalVariable(name: "kobj", arg: 1, scope: !10789, file: !73, line: 591, type: !3329)
!10793 = !DILocation(line: 591, column: 58, scope: !10789)
!10794 = !DILocalVariable(name: "__mptr", scope: !10795, file: !73, line: 593, type: !114)
!10795 = distinct !DILexicalBlock(scope: !10789, file: !73, line: 593, column: 9)
!10796 = !DILocation(line: 593, column: 9, scope: !10795)
!10797 = !DILocation(line: 593, column: 9, scope: !10798)
!10798 = distinct !DILexicalBlock(scope: !10795, file: !73, line: 593, column: 9)
!10799 = !DILocation(line: 593, column: 2, scope: !10789)
!10800 = distinct !DISubprogram(name: "new_id_store", scope: !3, file: !3, line: 2137, type: !4467, scopeLine: 2139, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !371)
!10801 = !DILocation(line: 392, column: 53, scope: !7817, inlinedAt: !10802)
!10802 = distinct !DILocation(line: 2163, column: 2, scope: !10800)
!10803 = !DILocation(line: 352, column: 51, scope: !7831, inlinedAt: !10804)
!10804 = distinct !DILocation(line: 2161, column: 2, scope: !10800)
!10805 = !DILocalVariable(name: "drv", arg: 1, scope: !10800, file: !3, line: 2137, type: !3691)
!10806 = !DILocation(line: 2137, column: 51, scope: !10800)
!10807 = !DILocalVariable(name: "buf", arg: 2, scope: !10800, file: !3, line: 2137, type: !190)
!10808 = !DILocation(line: 2137, column: 68, scope: !10800)
!10809 = !DILocalVariable(name: "count", arg: 3, scope: !10800, file: !3, line: 2138, type: !604)
!10810 = !DILocation(line: 2138, column: 10, scope: !10800)
!10811 = !DILocalVariable(name: "hdrv", scope: !10800, file: !3, line: 2140, type: !4030)
!10812 = !DILocation(line: 2140, column: 21, scope: !10800)
!10813 = !DILocalVariable(name: "__mptr", scope: !10814, file: !3, line: 2140, type: !114)
!10814 = distinct !DILexicalBlock(scope: !10800, file: !3, line: 2140, column: 28)
!10815 = !DILocation(line: 2140, column: 28, scope: !10814)
!10816 = !DILocation(line: 2140, column: 28, scope: !10817)
!10817 = distinct !DILexicalBlock(scope: !10814, file: !3, line: 2140, column: 28)
!10818 = !DILocalVariable(name: "dynid", scope: !10800, file: !3, line: 2141, type: !4201)
!10819 = !DILocation(line: 2141, column: 20, scope: !10800)
!10820 = !DILocalVariable(name: "bus", scope: !10800, file: !3, line: 2142, type: !239)
!10821 = !DILocation(line: 2142, column: 8, scope: !10800)
!10822 = !DILocalVariable(name: "vendor", scope: !10800, file: !3, line: 2142, type: !239)
!10823 = !DILocation(line: 2142, column: 13, scope: !10800)
!10824 = !DILocalVariable(name: "product", scope: !10800, file: !3, line: 2142, type: !239)
!10825 = !DILocation(line: 2142, column: 21, scope: !10800)
!10826 = !DILocalVariable(name: "driver_data", scope: !10800, file: !3, line: 2143, type: !205)
!10827 = !DILocation(line: 2143, column: 16, scope: !10800)
!10828 = !DILocalVariable(name: "ret", scope: !10800, file: !3, line: 2144, type: !169)
!10829 = !DILocation(line: 2144, column: 6, scope: !10800)
!10830 = !DILocation(line: 2146, column: 15, scope: !10800)
!10831 = !DILocation(line: 2146, column: 8, scope: !10800)
!10832 = !DILocation(line: 2146, column: 6, scope: !10800)
!10833 = !DILocation(line: 2148, column: 6, scope: !10834)
!10834 = distinct !DILexicalBlock(scope: !10800, file: !3, line: 2148, column: 6)
!10835 = !DILocation(line: 2148, column: 10, scope: !10834)
!10836 = !DILocation(line: 2148, column: 6, scope: !10800)
!10837 = !DILocation(line: 2149, column: 3, scope: !10834)
!10838 = !DILocation(line: 2151, column: 10, scope: !10800)
!10839 = !DILocation(line: 2151, column: 8, scope: !10800)
!10840 = !DILocation(line: 2152, column: 7, scope: !10841)
!10841 = distinct !DILexicalBlock(scope: !10800, file: !3, line: 2152, column: 6)
!10842 = !DILocation(line: 2152, column: 6, scope: !10800)
!10843 = !DILocation(line: 2153, column: 3, scope: !10841)
!10844 = !DILocation(line: 2155, column: 18, scope: !10800)
!10845 = !DILocation(line: 2155, column: 2, scope: !10800)
!10846 = !DILocation(line: 2155, column: 9, scope: !10800)
!10847 = !DILocation(line: 2155, column: 12, scope: !10800)
!10848 = !DILocation(line: 2155, column: 16, scope: !10800)
!10849 = !DILocation(line: 2156, column: 2, scope: !10800)
!10850 = !DILocation(line: 2156, column: 9, scope: !10800)
!10851 = !DILocation(line: 2156, column: 12, scope: !10800)
!10852 = !DILocation(line: 2156, column: 18, scope: !10800)
!10853 = !DILocation(line: 2157, column: 21, scope: !10800)
!10854 = !DILocation(line: 2157, column: 2, scope: !10800)
!10855 = !DILocation(line: 2157, column: 9, scope: !10800)
!10856 = !DILocation(line: 2157, column: 12, scope: !10800)
!10857 = !DILocation(line: 2157, column: 19, scope: !10800)
!10858 = !DILocation(line: 2158, column: 22, scope: !10800)
!10859 = !DILocation(line: 2158, column: 2, scope: !10800)
!10860 = !DILocation(line: 2158, column: 9, scope: !10800)
!10861 = !DILocation(line: 2158, column: 12, scope: !10800)
!10862 = !DILocation(line: 2158, column: 20, scope: !10800)
!10863 = !DILocation(line: 2159, column: 26, scope: !10800)
!10864 = !DILocation(line: 2159, column: 2, scope: !10800)
!10865 = !DILocation(line: 2159, column: 9, scope: !10800)
!10866 = !DILocation(line: 2159, column: 12, scope: !10800)
!10867 = !DILocation(line: 2159, column: 24, scope: !10800)
!10868 = !DILocation(line: 2161, column: 13, scope: !10800)
!10869 = !DILocation(line: 2161, column: 19, scope: !10800)
!10870 = !DILocation(line: 354, column: 2, scope: !7843, inlinedAt: !10804)
!10871 = !DILocation(line: 354, column: 2, scope: !7846, inlinedAt: !10804)
!10872 = !DILocation(line: 2162, column: 17, scope: !10800)
!10873 = !DILocation(line: 2162, column: 24, scope: !10800)
!10874 = !DILocation(line: 2162, column: 31, scope: !10800)
!10875 = !DILocation(line: 2162, column: 37, scope: !10800)
!10876 = !DILocation(line: 2162, column: 2, scope: !10800)
!10877 = !DILocation(line: 2163, column: 15, scope: !10800)
!10878 = !DILocation(line: 2163, column: 21, scope: !10800)
!10879 = !DILocation(line: 394, column: 2, scope: !7862, inlinedAt: !10802)
!10880 = !DILocation(line: 394, column: 2, scope: !7865, inlinedAt: !10802)
!10881 = !DILocation(line: 2165, column: 23, scope: !10800)
!10882 = !DILocation(line: 2165, column: 29, scope: !10800)
!10883 = !DILocation(line: 2165, column: 8, scope: !10800)
!10884 = !DILocation(line: 2165, column: 6, scope: !10800)
!10885 = !DILocation(line: 2167, column: 9, scope: !10800)
!10886 = !DILocation(line: 2167, column: 17, scope: !10800)
!10887 = !DILocation(line: 2167, column: 2, scope: !10800)
!10888 = !DILocation(line: 2168, column: 1, scope: !10800)
!10889 = distinct !DISubprogram(name: "clear_bit", scope: !10890, file: !10890, line: 39, type: !10891, scopeLine: 40, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !371)
!10890 = !DIFile(filename: "./include/asm-generic/bitops/instrumented-atomic.h", directory: "/home/lizy2001/genbc/linux")
!10891 = !DISubroutineType(types: !10892)
!10892 = !{null, !564, !10893}
!10893 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10894, size: 64)
!10894 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !205)
!10895 = !DILocalVariable(name: "nr", arg: 1, scope: !10896, file: !8021, line: 72, type: !564)
!10896 = distinct !DISubprogram(name: "arch_clear_bit", scope: !8021, file: !8021, line: 72, type: !10891, scopeLine: 73, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !371)
!10897 = !DILocation(line: 72, column: 21, scope: !10896, inlinedAt: !10898)
!10898 = distinct !DILocation(line: 42, column: 2, scope: !10889)
!10899 = !DILocalVariable(name: "addr", arg: 2, scope: !10896, file: !8021, line: 72, type: !10893)
!10900 = !DILocation(line: 72, column: 49, scope: !10896, inlinedAt: !10898)
!10901 = !DILocalVariable(name: "v", arg: 1, scope: !10902, file: !8242, line: 84, type: !8245)
!10902 = distinct !DISubprogram(name: "instrument_atomic_write", scope: !8242, file: !8242, line: 84, type: !8243, scopeLine: 85, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !371)
!10903 = !DILocation(line: 84, column: 74, scope: !10902, inlinedAt: !10904)
!10904 = distinct !DILocation(line: 41, column: 2, scope: !10889)
!10905 = !DILocalVariable(name: "size", arg: 2, scope: !10902, file: !8242, line: 84, type: !604)
!10906 = !DILocation(line: 84, column: 84, scope: !10902, inlinedAt: !10904)
!10907 = !DILocalVariable(name: "nr", arg: 1, scope: !10889, file: !10890, line: 39, type: !564)
!10908 = !DILocation(line: 39, column: 35, scope: !10889)
!10909 = !DILocalVariable(name: "addr", arg: 2, scope: !10889, file: !10890, line: 39, type: !10893)
!10910 = !DILocation(line: 39, column: 63, scope: !10889)
!10911 = !DILocation(line: 41, column: 26, scope: !10889)
!10912 = !DILocation(line: 41, column: 33, scope: !10889)
!10913 = !DILocation(line: 41, column: 31, scope: !10889)
!10914 = !DILocation(line: 86, column: 20, scope: !10902, inlinedAt: !10904)
!10915 = !DILocation(line: 86, column: 23, scope: !10902, inlinedAt: !10904)
!10916 = !DILocation(line: 86, column: 2, scope: !10902, inlinedAt: !10904)
!10917 = !DILocation(line: 87, column: 2, scope: !10902, inlinedAt: !10904)
!10918 = !DILocation(line: 42, column: 17, scope: !10889)
!10919 = !DILocation(line: 42, column: 21, scope: !10889)
!10920 = !DILocation(line: 74, column: 27, scope: !10921, inlinedAt: !10898)
!10921 = distinct !DILexicalBlock(scope: !10896, file: !8021, line: 74, column: 6)
!10922 = !DILocation(line: 74, column: 6, scope: !10921, inlinedAt: !10898)
!10923 = !DILocation(line: 74, column: 6, scope: !10896, inlinedAt: !10898)
!10924 = !DILocation(line: 76, column: 6, scope: !10925, inlinedAt: !10898)
!10925 = distinct !DILexicalBlock(scope: !10921, file: !8021, line: 74, column: 32)
!10926 = !DILocation(line: 77, column: 13, scope: !10925, inlinedAt: !10898)
!10927 = !DILocation(line: 77, column: 12, scope: !10925, inlinedAt: !10898)
!10928 = !DILocation(line: 75, column: 3, scope: !10925, inlinedAt: !10898)
!10929 = !{i32 -2147088569}
!10930 = !DILocation(line: 78, column: 2, scope: !10925, inlinedAt: !10898)
!10931 = !DILocation(line: 80, column: 8, scope: !10932, inlinedAt: !10898)
!10932 = distinct !DILexicalBlock(scope: !10921, file: !8021, line: 78, column: 9)
!10933 = !DILocation(line: 80, column: 32, scope: !10932, inlinedAt: !10898)
!10934 = !DILocation(line: 79, column: 3, scope: !10932, inlinedAt: !10898)
!10935 = !{i32 -2147088437}
!10936 = !DILocation(line: 43, column: 1, scope: !10889)
!10937 = distinct !DISubprogram(name: "kasan_check_write", scope: !10938, file: !10938, line: 38, type: !10939, scopeLine: 39, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !371)
!10938 = !DIFile(filename: "./include/linux/kasan-checks.h", directory: "/home/lizy2001/genbc/linux")
!10939 = !DISubroutineType(types: !10940)
!10940 = !{!514, !8245, !7}
!10941 = !DILocalVariable(name: "p", arg: 1, scope: !10937, file: !10938, line: 38, type: !8245)
!10942 = !DILocation(line: 38, column: 59, scope: !10937)
!10943 = !DILocalVariable(name: "size", arg: 2, scope: !10937, file: !10938, line: 38, type: !7)
!10944 = !DILocation(line: 38, column: 75, scope: !10937)
!10945 = !DILocation(line: 40, column: 2, scope: !10937)
!10946 = distinct !DISubprogram(name: "kcsan_check_access", scope: !10947, file: !10947, line: 178, type: !10948, scopeLine: 179, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !371)
!10947 = !DIFile(filename: "./include/linux/kcsan-checks.h", directory: "/home/lizy2001/genbc/linux")
!10948 = !DISubroutineType(types: !10949)
!10949 = !{null, !8245, !604, !169}
!10950 = !DILocalVariable(name: "ptr", arg: 1, scope: !10946, file: !10947, line: 178, type: !8245)
!10951 = !DILocation(line: 178, column: 60, scope: !10946)
!10952 = !DILocalVariable(name: "size", arg: 2, scope: !10946, file: !10947, line: 178, type: !604)
!10953 = !DILocation(line: 178, column: 72, scope: !10946)
!10954 = !DILocalVariable(name: "type", arg: 3, scope: !10946, file: !10947, line: 179, type: !169)
!10955 = !DILocation(line: 179, column: 15, scope: !10946)
!10956 = !DILocation(line: 179, column: 23, scope: !10946)
!10957 = distinct !DISubprogram(name: "hid_scan_main", scope: !3, file: !3, line: 826, type: !4297, scopeLine: 827, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !371)
!10958 = !DILocalVariable(name: "parser", arg: 1, scope: !10957, file: !3, line: 826, type: !4299)
!10959 = !DILocation(line: 826, column: 45, scope: !10957)
!10960 = !DILocalVariable(name: "item", arg: 2, scope: !10957, file: !3, line: 826, type: !4337)
!10961 = !DILocation(line: 826, column: 70, scope: !10957)
!10962 = !DILocalVariable(name: "data", scope: !10957, file: !3, line: 828, type: !239)
!10963 = !DILocation(line: 828, column: 8, scope: !10957)
!10964 = !DILocalVariable(name: "i", scope: !10957, file: !3, line: 829, type: !169)
!10965 = !DILocation(line: 829, column: 6, scope: !10957)
!10966 = !DILocation(line: 831, column: 34, scope: !10957)
!10967 = !DILocation(line: 831, column: 2, scope: !10957)
!10968 = !DILocation(line: 833, column: 20, scope: !10957)
!10969 = !DILocation(line: 833, column: 9, scope: !10957)
!10970 = !DILocation(line: 833, column: 7, scope: !10957)
!10971 = !DILocation(line: 835, column: 10, scope: !10957)
!10972 = !DILocation(line: 835, column: 16, scope: !10957)
!10973 = !DILocation(line: 835, column: 2, scope: !10957)
!10974 = !DILocation(line: 837, column: 23, scope: !10975)
!10975 = distinct !DILexicalBlock(scope: !10957, file: !3, line: 835, column: 21)
!10976 = !DILocation(line: 837, column: 31, scope: !10975)
!10977 = !DILocation(line: 837, column: 36, scope: !10975)
!10978 = !DILocation(line: 837, column: 3, scope: !10975)
!10979 = !DILocation(line: 838, column: 3, scope: !10975)
!10980 = !DILocation(line: 840, column: 3, scope: !10975)
!10981 = !DILocation(line: 843, column: 7, scope: !10982)
!10982 = distinct !DILexicalBlock(scope: !10975, file: !3, line: 843, column: 7)
!10983 = !DILocation(line: 843, column: 12, scope: !10982)
!10984 = !DILocation(line: 843, column: 7, scope: !10975)
!10985 = !DILocation(line: 844, column: 4, scope: !10982)
!10986 = !DILocation(line: 845, column: 10, scope: !10987)
!10987 = distinct !DILexicalBlock(scope: !10975, file: !3, line: 845, column: 3)
!10988 = !DILocation(line: 845, column: 8, scope: !10987)
!10989 = !DILocation(line: 845, column: 15, scope: !10990)
!10990 = distinct !DILexicalBlock(scope: !10987, file: !3, line: 845, column: 3)
!10991 = !DILocation(line: 845, column: 19, scope: !10990)
!10992 = !DILocation(line: 845, column: 27, scope: !10990)
!10993 = !DILocation(line: 845, column: 33, scope: !10990)
!10994 = !DILocation(line: 845, column: 17, scope: !10990)
!10995 = !DILocation(line: 845, column: 3, scope: !10987)
!10996 = !DILocation(line: 846, column: 25, scope: !10990)
!10997 = !DILocation(line: 846, column: 33, scope: !10990)
!10998 = !DILocation(line: 846, column: 41, scope: !10990)
!10999 = !DILocation(line: 846, column: 47, scope: !10990)
!11000 = !DILocation(line: 846, column: 53, scope: !10990)
!11001 = !DILocation(line: 846, column: 4, scope: !10990)
!11002 = !DILocation(line: 845, column: 47, scope: !10990)
!11003 = !DILocation(line: 845, column: 3, scope: !10990)
!11004 = distinct !{!11004, !10995, !11005}
!11005 = !DILocation(line: 846, column: 55, scope: !10987)
!11006 = !DILocation(line: 847, column: 3, scope: !10975)
!11007 = !DILocation(line: 849, column: 3, scope: !10975)
!11008 = !DILocation(line: 851, column: 10, scope: !11009)
!11009 = distinct !DILexicalBlock(scope: !10975, file: !3, line: 851, column: 3)
!11010 = !DILocation(line: 851, column: 8, scope: !11009)
!11011 = !DILocation(line: 851, column: 15, scope: !11012)
!11012 = distinct !DILexicalBlock(scope: !11009, file: !3, line: 851, column: 3)
!11013 = !DILocation(line: 851, column: 19, scope: !11012)
!11014 = !DILocation(line: 851, column: 27, scope: !11012)
!11015 = !DILocation(line: 851, column: 33, scope: !11012)
!11016 = !DILocation(line: 851, column: 17, scope: !11012)
!11017 = !DILocation(line: 851, column: 3, scope: !11009)
!11018 = !DILocation(line: 852, column: 27, scope: !11012)
!11019 = !DILocation(line: 852, column: 35, scope: !11012)
!11020 = !DILocation(line: 852, column: 43, scope: !11012)
!11021 = !DILocation(line: 852, column: 49, scope: !11012)
!11022 = !DILocation(line: 852, column: 55, scope: !11012)
!11023 = !DILocation(line: 852, column: 4, scope: !11012)
!11024 = !DILocation(line: 851, column: 47, scope: !11012)
!11025 = !DILocation(line: 851, column: 3, scope: !11012)
!11026 = distinct !{!11026, !11017, !11027}
!11027 = !DILocation(line: 852, column: 57, scope: !11009)
!11028 = !DILocation(line: 853, column: 3, scope: !10975)
!11029 = !DILocation(line: 857, column: 10, scope: !10957)
!11030 = !DILocation(line: 857, column: 18, scope: !10957)
!11031 = !DILocation(line: 857, column: 2, scope: !10957)
!11032 = !DILocation(line: 859, column: 2, scope: !10957)
!11033 = distinct !DISubprogram(name: "hid_scan_collection", scope: !3, file: !3, line: 796, type: !9760, scopeLine: 797, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !371)
!11034 = !DILocalVariable(name: "parser", arg: 1, scope: !11033, file: !3, line: 796, type: !4299)
!11035 = !DILocation(line: 796, column: 52, scope: !11033)
!11036 = !DILocalVariable(name: "type", arg: 2, scope: !11033, file: !3, line: 796, type: !7)
!11037 = !DILocation(line: 796, column: 69, scope: !11033)
!11038 = !DILocalVariable(name: "hid", scope: !11033, file: !3, line: 798, type: !3986)
!11039 = !DILocation(line: 798, column: 21, scope: !11033)
!11040 = !DILocation(line: 798, column: 27, scope: !11033)
!11041 = !DILocation(line: 798, column: 35, scope: !11033)
!11042 = !DILocalVariable(name: "i", scope: !11033, file: !3, line: 799, type: !169)
!11043 = !DILocation(line: 799, column: 6, scope: !11033)
!11044 = !DILocation(line: 801, column: 8, scope: !11045)
!11045 = distinct !DILexicalBlock(scope: !11033, file: !3, line: 801, column: 6)
!11046 = !DILocation(line: 801, column: 16, scope: !11045)
!11047 = !DILocation(line: 801, column: 23, scope: !11045)
!11048 = !DILocation(line: 801, column: 34, scope: !11045)
!11049 = !DILocation(line: 801, column: 41, scope: !11045)
!11050 = !DILocation(line: 801, column: 59, scope: !11045)
!11051 = !DILocation(line: 802, column: 6, scope: !11045)
!11052 = !DILocation(line: 802, column: 11, scope: !11045)
!11053 = !DILocation(line: 801, column: 6, scope: !11033)
!11054 = !DILocation(line: 803, column: 3, scope: !11045)
!11055 = !DILocation(line: 803, column: 8, scope: !11045)
!11056 = !DILocation(line: 803, column: 14, scope: !11045)
!11057 = !DILocation(line: 805, column: 6, scope: !11058)
!11058 = distinct !DILexicalBlock(scope: !11033, file: !3, line: 805, column: 6)
!11059 = !DILocation(line: 805, column: 11, scope: !11058)
!11060 = !DILocation(line: 805, column: 18, scope: !11058)
!11061 = !DILocation(line: 805, column: 45, scope: !11058)
!11062 = !DILocation(line: 806, column: 6, scope: !11058)
!11063 = !DILocation(line: 806, column: 11, scope: !11058)
!11064 = !DILocation(line: 806, column: 19, scope: !11058)
!11065 = !DILocation(line: 806, column: 51, scope: !11058)
!11066 = !DILocation(line: 807, column: 6, scope: !11058)
!11067 = !DILocation(line: 807, column: 11, scope: !11058)
!11068 = !DILocation(line: 807, column: 17, scope: !11058)
!11069 = !DILocation(line: 805, column: 6, scope: !11033)
!11070 = !DILocation(line: 808, column: 3, scope: !11058)
!11071 = !DILocation(line: 808, column: 8, scope: !11058)
!11072 = !DILocation(line: 808, column: 14, scope: !11058)
!11073 = !DILocation(line: 810, column: 7, scope: !11074)
!11074 = distinct !DILexicalBlock(scope: !11033, file: !3, line: 810, column: 6)
!11075 = !DILocation(line: 810, column: 15, scope: !11074)
!11076 = !DILocation(line: 810, column: 22, scope: !11074)
!11077 = !DILocation(line: 810, column: 33, scope: !11074)
!11078 = !DILocation(line: 810, column: 40, scope: !11074)
!11079 = !DILocation(line: 810, column: 6, scope: !11033)
!11080 = !DILocation(line: 811, column: 10, scope: !11081)
!11081 = distinct !DILexicalBlock(scope: !11074, file: !3, line: 811, column: 3)
!11082 = !DILocation(line: 811, column: 8, scope: !11081)
!11083 = !DILocation(line: 811, column: 15, scope: !11084)
!11084 = distinct !DILexicalBlock(scope: !11081, file: !3, line: 811, column: 3)
!11085 = !DILocation(line: 811, column: 19, scope: !11084)
!11086 = !DILocation(line: 811, column: 27, scope: !11084)
!11087 = !DILocation(line: 811, column: 33, scope: !11084)
!11088 = !DILocation(line: 811, column: 17, scope: !11084)
!11089 = !DILocation(line: 811, column: 3, scope: !11081)
!11090 = !DILocation(line: 812, column: 8, scope: !11091)
!11091 = distinct !DILexicalBlock(scope: !11084, file: !3, line: 812, column: 8)
!11092 = !DILocation(line: 812, column: 16, scope: !11091)
!11093 = !DILocation(line: 812, column: 22, scope: !11091)
!11094 = !DILocation(line: 812, column: 28, scope: !11091)
!11095 = !DILocation(line: 812, column: 31, scope: !11091)
!11096 = !DILocation(line: 812, column: 8, scope: !11084)
!11097 = !DILocation(line: 813, column: 5, scope: !11091)
!11098 = !DILocation(line: 813, column: 13, scope: !11091)
!11099 = !DILocation(line: 813, column: 24, scope: !11091)
!11100 = !DILocation(line: 812, column: 34, scope: !11091)
!11101 = !DILocation(line: 811, column: 47, scope: !11084)
!11102 = !DILocation(line: 811, column: 3, scope: !11084)
!11103 = distinct !{!11103, !11089, !11104}
!11104 = !DILocation(line: 813, column: 27, scope: !11081)
!11105 = !DILocation(line: 815, column: 7, scope: !11106)
!11106 = distinct !DILexicalBlock(scope: !11033, file: !3, line: 815, column: 6)
!11107 = !DILocation(line: 815, column: 15, scope: !11106)
!11108 = !DILocation(line: 815, column: 22, scope: !11106)
!11109 = !DILocation(line: 815, column: 33, scope: !11106)
!11110 = !DILocation(line: 815, column: 40, scope: !11106)
!11111 = !DILocation(line: 815, column: 6, scope: !11033)
!11112 = !DILocation(line: 816, column: 3, scope: !11106)
!11113 = !DILocation(line: 816, column: 11, scope: !11106)
!11114 = !DILocation(line: 816, column: 22, scope: !11106)
!11115 = !DILocation(line: 818, column: 7, scope: !11116)
!11116 = distinct !DILexicalBlock(scope: !11033, file: !3, line: 818, column: 6)
!11117 = !DILocation(line: 818, column: 15, scope: !11116)
!11118 = !DILocation(line: 818, column: 22, scope: !11116)
!11119 = !DILocation(line: 818, column: 33, scope: !11116)
!11120 = !DILocation(line: 818, column: 40, scope: !11116)
!11121 = !DILocation(line: 818, column: 6, scope: !11033)
!11122 = !DILocation(line: 819, column: 10, scope: !11123)
!11123 = distinct !DILexicalBlock(scope: !11116, file: !3, line: 819, column: 3)
!11124 = !DILocation(line: 819, column: 8, scope: !11123)
!11125 = !DILocation(line: 819, column: 15, scope: !11126)
!11126 = distinct !DILexicalBlock(scope: !11123, file: !3, line: 819, column: 3)
!11127 = !DILocation(line: 819, column: 19, scope: !11126)
!11128 = !DILocation(line: 819, column: 27, scope: !11126)
!11129 = !DILocation(line: 819, column: 33, scope: !11126)
!11130 = !DILocation(line: 819, column: 17, scope: !11126)
!11131 = !DILocation(line: 819, column: 3, scope: !11123)
!11132 = !DILocation(line: 820, column: 8, scope: !11133)
!11133 = distinct !DILexicalBlock(scope: !11126, file: !3, line: 820, column: 8)
!11134 = !DILocation(line: 820, column: 16, scope: !11133)
!11135 = !DILocation(line: 820, column: 22, scope: !11133)
!11136 = !DILocation(line: 820, column: 28, scope: !11133)
!11137 = !DILocation(line: 820, column: 31, scope: !11133)
!11138 = !DILocation(line: 820, column: 8, scope: !11126)
!11139 = !DILocation(line: 822, column: 5, scope: !11133)
!11140 = !DILocation(line: 822, column: 13, scope: !11133)
!11141 = !DILocation(line: 822, column: 21, scope: !11133)
!11142 = !DILocation(line: 822, column: 27, scope: !11133)
!11143 = !DILocation(line: 821, column: 35, scope: !11133)
!11144 = !DILocation(line: 819, column: 47, scope: !11126)
!11145 = !DILocation(line: 819, column: 3, scope: !11126)
!11146 = distinct !{!11146, !11131, !11147}
!11147 = !DILocation(line: 823, column: 6, scope: !11123)
!11148 = !DILocation(line: 824, column: 1, scope: !11033)
!11149 = distinct !DISubprogram(name: "hid_scan_input_usage", scope: !3, file: !3, line: 777, type: !11150, scopeLine: 778, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !371)
!11150 = !DISubroutineType(types: !11151)
!11151 = !{null, !4299, !440}
!11152 = !DILocalVariable(name: "parser", arg: 1, scope: !11149, file: !3, line: 777, type: !4299)
!11153 = !DILocation(line: 777, column: 53, scope: !11149)
!11154 = !DILocalVariable(name: "usage", arg: 2, scope: !11149, file: !3, line: 777, type: !440)
!11155 = !DILocation(line: 777, column: 65, scope: !11149)
!11156 = !DILocalVariable(name: "hid", scope: !11149, file: !3, line: 779, type: !3986)
!11157 = !DILocation(line: 779, column: 21, scope: !11149)
!11158 = !DILocation(line: 779, column: 27, scope: !11149)
!11159 = !DILocation(line: 779, column: 35, scope: !11149)
!11160 = !DILocation(line: 781, column: 6, scope: !11161)
!11161 = distinct !DILexicalBlock(scope: !11149, file: !3, line: 781, column: 6)
!11162 = !DILocation(line: 781, column: 12, scope: !11161)
!11163 = !DILocation(line: 781, column: 6, scope: !11149)
!11164 = !DILocation(line: 782, column: 3, scope: !11161)
!11165 = !DILocation(line: 782, column: 8, scope: !11161)
!11166 = !DILocation(line: 782, column: 14, scope: !11161)
!11167 = !DILocation(line: 783, column: 1, scope: !11149)
!11168 = distinct !DISubprogram(name: "hid_scan_feature_usage", scope: !3, file: !3, line: 785, type: !11150, scopeLine: 786, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !371)
!11169 = !DILocalVariable(name: "parser", arg: 1, scope: !11168, file: !3, line: 785, type: !4299)
!11170 = !DILocation(line: 785, column: 55, scope: !11168)
!11171 = !DILocalVariable(name: "usage", arg: 2, scope: !11168, file: !3, line: 785, type: !440)
!11172 = !DILocation(line: 785, column: 67, scope: !11168)
!11173 = !DILocation(line: 787, column: 6, scope: !11174)
!11174 = distinct !DILexicalBlock(scope: !11168, file: !3, line: 787, column: 6)
!11175 = !DILocation(line: 787, column: 12, scope: !11174)
!11176 = !DILocation(line: 787, column: 26, scope: !11174)
!11177 = !DILocation(line: 787, column: 29, scope: !11174)
!11178 = !DILocation(line: 787, column: 37, scope: !11174)
!11179 = !DILocation(line: 787, column: 44, scope: !11174)
!11180 = !DILocation(line: 787, column: 57, scope: !11174)
!11181 = !DILocation(line: 787, column: 64, scope: !11174)
!11182 = !DILocation(line: 788, column: 6, scope: !11174)
!11183 = !DILocation(line: 788, column: 14, scope: !11174)
!11184 = !DILocation(line: 788, column: 21, scope: !11174)
!11185 = !DILocation(line: 788, column: 33, scope: !11174)
!11186 = !DILocation(line: 787, column: 6, scope: !11168)
!11187 = !DILocation(line: 789, column: 3, scope: !11174)
!11188 = !DILocation(line: 789, column: 11, scope: !11174)
!11189 = !DILocation(line: 789, column: 22, scope: !11174)
!11190 = !DILocation(line: 791, column: 6, scope: !11191)
!11191 = distinct !DILexicalBlock(scope: !11168, file: !3, line: 791, column: 6)
!11192 = !DILocation(line: 791, column: 12, scope: !11191)
!11193 = !DILocation(line: 791, column: 26, scope: !11191)
!11194 = !DILocation(line: 791, column: 29, scope: !11191)
!11195 = !DILocation(line: 791, column: 37, scope: !11191)
!11196 = !DILocation(line: 791, column: 44, scope: !11191)
!11197 = !DILocation(line: 791, column: 57, scope: !11191)
!11198 = !DILocation(line: 791, column: 62, scope: !11191)
!11199 = !DILocation(line: 792, column: 6, scope: !11191)
!11200 = !DILocation(line: 792, column: 14, scope: !11191)
!11201 = !DILocation(line: 792, column: 21, scope: !11191)
!11202 = !DILocation(line: 792, column: 33, scope: !11191)
!11203 = !DILocation(line: 791, column: 6, scope: !11168)
!11204 = !DILocation(line: 793, column: 3, scope: !11191)
!11205 = !DILocation(line: 793, column: 11, scope: !11191)
!11206 = !DILocation(line: 793, column: 22, scope: !11191)
!11207 = !DILocation(line: 794, column: 1, scope: !11168)
!11208 = distinct !DISubprogram(name: "__hid_bus_reprobe_drivers", scope: !3, file: !3, line: 2510, type: !11209, scopeLine: 2511, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !371)
!11209 = !DISubroutineType(types: !11210)
!11210 = !{!169, !3620, !114}
!11211 = !DILocation(line: 283, column: 36, scope: !8020, inlinedAt: !11212)
!11212 = distinct !DILocation(line: 2517, column: 24, scope: !11213)
!11213 = distinct !DILexicalBlock(scope: !11208, file: !3, line: 2515, column: 6)
!11214 = !DILocation(line: 285, column: 6, scope: !8020, inlinedAt: !11212)
!11215 = !DILocalVariable(name: "dev", arg: 1, scope: !11208, file: !3, line: 2510, type: !3620)
!11216 = !DILocation(line: 2510, column: 53, scope: !11208)
!11217 = !DILocalVariable(name: "data", arg: 2, scope: !11208, file: !3, line: 2510, type: !114)
!11218 = !DILocation(line: 2510, column: 64, scope: !11208)
!11219 = !DILocalVariable(name: "hdrv", scope: !11208, file: !3, line: 2512, type: !4030)
!11220 = !DILocation(line: 2512, column: 21, scope: !11208)
!11221 = !DILocation(line: 2512, column: 28, scope: !11208)
!11222 = !DILocalVariable(name: "hdev", scope: !11208, file: !3, line: 2513, type: !3986)
!11223 = !DILocation(line: 2513, column: 21, scope: !11208)
!11224 = !DILocalVariable(name: "__mptr", scope: !11225, file: !3, line: 2513, type: !114)
!11225 = distinct !DILexicalBlock(scope: !11208, file: !3, line: 2513, column: 28)
!11226 = !DILocation(line: 2513, column: 28, scope: !11225)
!11227 = !DILocation(line: 2513, column: 28, scope: !11228)
!11228 = distinct !DILexicalBlock(scope: !11225, file: !3, line: 2513, column: 28)
!11229 = !DILocation(line: 2515, column: 6, scope: !11213)
!11230 = !DILocation(line: 2515, column: 12, scope: !11213)
!11231 = !DILocation(line: 2515, column: 22, scope: !11213)
!11232 = !DILocation(line: 2515, column: 19, scope: !11213)
!11233 = !DILocation(line: 2515, column: 27, scope: !11213)
!11234 = !DILocation(line: 2516, column: 7, scope: !11213)
!11235 = !DILocation(line: 2516, column: 13, scope: !11213)
!11236 = !DILocation(line: 2516, column: 19, scope: !11213)
!11237 = !DILocation(line: 2516, column: 25, scope: !11213)
!11238 = !DILocation(line: 2516, column: 53, scope: !11213)
!11239 = !DILocation(line: 299, column: 14, scope: !8020, inlinedAt: !11212)
!11240 = !DILocation(line: 297, column: 2, scope: !8020, inlinedAt: !11212)
!11241 = !DILocation(line: 310, column: 9, scope: !8020, inlinedAt: !11212)
!11242 = !DILocation(line: 310, column: 11, scope: !8020, inlinedAt: !11212)
!11243 = !DILocation(line: 2517, column: 24, scope: !11213)
!11244 = !DILocation(line: 2517, column: 49, scope: !11213)
!11245 = !DILocation(line: 2517, column: 55, scope: !11213)
!11246 = !DILocation(line: 2517, column: 7, scope: !11213)
!11247 = !DILocation(line: 2515, column: 6, scope: !11208)
!11248 = !DILocation(line: 2518, column: 25, scope: !11213)
!11249 = !DILocation(line: 2518, column: 10, scope: !11213)
!11250 = !DILocation(line: 2518, column: 3, scope: !11213)
!11251 = !DILocation(line: 2520, column: 2, scope: !11208)
!11252 = !DILocation(line: 2521, column: 1, scope: !11208)
!11253 = distinct !DISubprogram(name: "test_and_set_bit", scope: !10890, file: !10890, line: 68, type: !11254, scopeLine: 69, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !371)
!11254 = !DISubroutineType(types: !11255)
!11255 = !{!514, !564, !10893}
!11256 = !DILocalVariable(name: "nr", arg: 1, scope: !11257, file: !8021, line: 136, type: !564)
!11257 = distinct !DISubprogram(name: "arch_test_and_set_bit", scope: !8021, file: !8021, line: 136, type: !11254, scopeLine: 137, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !371)
!11258 = !DILocation(line: 136, column: 28, scope: !11257, inlinedAt: !11259)
!11259 = distinct !DILocation(line: 71, column: 9, scope: !11253)
!11260 = !DILocalVariable(name: "addr", arg: 2, scope: !11257, file: !8021, line: 136, type: !10893)
!11261 = !DILocation(line: 136, column: 56, scope: !11257, inlinedAt: !11259)
!11262 = !DILocalVariable(name: "c", scope: !11263, file: !8021, line: 138, type: !514)
!11263 = distinct !DILexicalBlock(scope: !11257, file: !8021, line: 138, column: 9)
!11264 = !DILocation(line: 138, column: 9, scope: !11263, inlinedAt: !11259)
!11265 = !DILocation(line: 99, column: 79, scope: !8241, inlinedAt: !11266)
!11266 = distinct !DILocation(line: 70, column: 2, scope: !11253)
!11267 = !DILocation(line: 99, column: 89, scope: !8241, inlinedAt: !11266)
!11268 = !DILocalVariable(name: "nr", arg: 1, scope: !11253, file: !10890, line: 68, type: !564)
!11269 = !DILocation(line: 68, column: 42, scope: !11253)
!11270 = !DILocalVariable(name: "addr", arg: 2, scope: !11253, file: !10890, line: 68, type: !10893)
!11271 = !DILocation(line: 68, column: 70, scope: !11253)
!11272 = !DILocation(line: 70, column: 31, scope: !11253)
!11273 = !DILocation(line: 70, column: 38, scope: !11253)
!11274 = !DILocation(line: 70, column: 36, scope: !11253)
!11275 = !DILocation(line: 101, column: 20, scope: !8241, inlinedAt: !11266)
!11276 = !DILocation(line: 101, column: 23, scope: !8241, inlinedAt: !11266)
!11277 = !DILocation(line: 101, column: 2, scope: !8241, inlinedAt: !11266)
!11278 = !DILocation(line: 102, column: 2, scope: !8241, inlinedAt: !11266)
!11279 = !DILocation(line: 71, column: 31, scope: !11253)
!11280 = !DILocation(line: 71, column: 35, scope: !11253)
!11281 = !{i32 -2147085037, i32 -2147084941}
!11282 = !DILocation(line: 71, column: 2, scope: !11253)
!11283 = distinct !DISubprogram(name: "list_del", scope: !4835, file: !4835, line: 144, type: !8558, scopeLine: 145, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !371)
!11284 = !DILocalVariable(name: "entry", arg: 1, scope: !11283, file: !4835, line: 144, type: !122)
!11285 = !DILocation(line: 144, column: 47, scope: !11283)
!11286 = !DILocation(line: 146, column: 19, scope: !11283)
!11287 = !DILocation(line: 146, column: 2, scope: !11283)
!11288 = !DILocation(line: 147, column: 2, scope: !11283)
!11289 = !DILocation(line: 147, column: 9, scope: !11283)
!11290 = !DILocation(line: 147, column: 14, scope: !11283)
!11291 = !DILocation(line: 148, column: 2, scope: !11283)
!11292 = !DILocation(line: 148, column: 9, scope: !11283)
!11293 = !DILocation(line: 148, column: 14, scope: !11283)
!11294 = !DILocation(line: 149, column: 1, scope: !11283)
!11295 = distinct !DISubprogram(name: "__list_del_entry", scope: !4835, file: !4835, line: 130, type: !8558, scopeLine: 131, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !371)
!11296 = !DILocalVariable(name: "entry", arg: 1, scope: !11295, file: !4835, line: 130, type: !122)
!11297 = !DILocation(line: 130, column: 55, scope: !11295)
!11298 = !DILocation(line: 132, column: 30, scope: !11299)
!11299 = distinct !DILexicalBlock(scope: !11295, file: !4835, line: 132, column: 6)
!11300 = !DILocation(line: 132, column: 7, scope: !11299)
!11301 = !DILocation(line: 132, column: 6, scope: !11295)
!11302 = !DILocation(line: 133, column: 3, scope: !11299)
!11303 = !DILocation(line: 135, column: 13, scope: !11295)
!11304 = !DILocation(line: 135, column: 20, scope: !11295)
!11305 = !DILocation(line: 135, column: 26, scope: !11295)
!11306 = !DILocation(line: 135, column: 33, scope: !11295)
!11307 = !DILocation(line: 135, column: 2, scope: !11295)
!11308 = !DILocation(line: 136, column: 1, scope: !11295)
!11309 = distinct !DISubprogram(name: "__list_del_entry_valid", scope: !4835, file: !4835, line: 51, type: !11310, scopeLine: 52, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !371)
!11310 = !DISubroutineType(types: !11311)
!11311 = !{!514, !122}
!11312 = !DILocalVariable(name: "entry", arg: 1, scope: !11309, file: !4835, line: 51, type: !122)
!11313 = !DILocation(line: 51, column: 61, scope: !11309)
!11314 = !DILocation(line: 53, column: 2, scope: !11309)
!11315 = distinct !DISubprogram(name: "__list_del", scope: !4835, file: !4835, line: 110, type: !4836, scopeLine: 111, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !371)
!11316 = !DILocalVariable(name: "prev", arg: 1, scope: !11315, file: !4835, line: 110, type: !122)
!11317 = !DILocation(line: 110, column: 50, scope: !11315)
!11318 = !DILocalVariable(name: "next", arg: 2, scope: !11315, file: !4835, line: 110, type: !122)
!11319 = !DILocation(line: 110, column: 75, scope: !11315)
!11320 = !DILocation(line: 112, column: 15, scope: !11315)
!11321 = !DILocation(line: 112, column: 2, scope: !11315)
!11322 = !DILocation(line: 112, column: 8, scope: !11315)
!11323 = !DILocation(line: 112, column: 13, scope: !11315)
!11324 = !DILocation(line: 113, column: 2, scope: !11315)
!11325 = !DILocation(line: 113, column: 2, scope: !11326)
!11326 = distinct !DILexicalBlock(scope: !11315, file: !4835, line: 113, column: 2)
!11327 = !DILocation(line: 113, column: 2, scope: !11328)
!11328 = distinct !DILexicalBlock(scope: !11326, file: !4835, line: 113, column: 2)
!11329 = !DILocation(line: 113, column: 2, scope: !11330)
!11330 = distinct !DILexicalBlock(scope: !11326, file: !4835, line: 113, column: 2)
!11331 = !DILocation(line: 114, column: 1, scope: !11315)
!11332 = distinct !DISubprogram(name: "hidraw_init", scope: !4191, file: !4191, line: 44, type: !8829, scopeLine: 44, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !371)
!11333 = !DILocation(line: 44, column: 39, scope: !11332)
