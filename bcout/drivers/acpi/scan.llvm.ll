; ModuleID = '../bcout/drivers/acpi/scan.llvm.bc'
source_filename = "drivers/acpi/scan.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64"

%struct.list_head = type { %struct.list_head*, %struct.list_head* }
%struct.mutex = type { %struct.atomic64_t, %struct.spinlock, %struct.list_head }
%struct.atomic64_t = type { i64 }
%struct.spinlock = type { %union.anon }
%union.anon = type { %struct.raw_spinlock }
%struct.raw_spinlock = type { %struct.arch_spinlock_t }
%struct.arch_spinlock_t = type {}
%struct.lock_class_key = type {}
%struct.bus_type = type { i8*, i8*, %struct.device*, %struct.attribute_group**, %struct.attribute_group**, %struct.attribute_group**, i32 (%struct.device*, %struct.device_driver*)*, i32 (%struct.device*, %struct.kobj_uevent_env*)*, i32 (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*, i32)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, %struct.dev_pm_ops*, %struct.iommu_ops*, %struct.subsys_private*, %struct.lock_class_key, i8 }
%struct.device = type { %struct.kobject, %struct.device*, %struct.device_private*, i8*, %struct.device_type*, %struct.bus_type*, %struct.device_driver*, i8*, i8*, %struct.mutex, %struct.dev_links_info, %struct.dev_pm_info, %struct.dev_pm_domain*, %struct.irq_domain*, %struct.list_head, %struct.dma_map_ops*, i64*, i64, i64, %struct.bus_dma_region*, %struct.device_dma_parameters*, %struct.list_head, %struct.dev_archdata, %struct.device_node*, %struct.fwnode_handle*, i32, i32, %struct.spinlock, %struct.list_head, %struct.class*, %struct.attribute_group**, void (%struct.device*)*, %struct.iommu_group*, %struct.dev_iommu*, i8 }
%struct.kobject = type { i8*, %struct.list_head, %struct.kobject*, %struct.kset*, %struct.kobj_type*, %struct.kernfs_node*, %struct.kref, i8 }
%struct.kset = type { %struct.list_head, %struct.spinlock, %struct.kobject, %struct.kset_uevent_ops* }
%struct.kset_uevent_ops = type { i32 (%struct.kset*, %struct.kobject*)*, i8* (%struct.kset*, %struct.kobject*)*, i32 (%struct.kset*, %struct.kobject*, %struct.kobj_uevent_env*)* }
%struct.kobj_uevent_env = type { [3 x i8*], [64 x i8*], i32, [2048 x i8], i32 }
%struct.kobj_type = type { void (%struct.kobject*)*, %struct.sysfs_ops*, %struct.attribute**, %struct.attribute_group**, %struct.kobj_ns_type_operations* (%struct.kobject*)*, i8* (%struct.kobject*)*, void (%struct.kobject*, %struct.kuid_t*, %struct.kgid_t*)* }
%struct.sysfs_ops = type { i64 (%struct.kobject*, %struct.attribute*, i8*)*, i64 (%struct.kobject*, %struct.attribute*, i8*, i64)* }
%struct.attribute = type { i8*, i16 }
%struct.kobj_ns_type_operations = type { i32, i1 ()*, i8* ()*, i8* (%struct.sock*)*, i8* ()*, void (i8*)* }
%struct.sock = type opaque
%struct.kuid_t = type { i32 }
%struct.kgid_t = type { i32 }
%struct.kernfs_node = type { %struct.atomic_t, %struct.atomic_t, %struct.kernfs_node*, i8*, %struct.rb_node, i8*, i32, %union.anon.64, i8*, i64, i16, i16, %struct.kernfs_iattrs* }
%struct.atomic_t = type { i32 }
%struct.rb_node = type { i64, %struct.rb_node*, %struct.rb_node* }
%union.anon.64 = type { %struct.kernfs_elem_attr }
%struct.kernfs_elem_attr = type { %struct.kernfs_ops*, %struct.kernfs_open_node*, i64, %struct.kernfs_node* }
%struct.kernfs_ops = type { i32 (%struct.kernfs_open_file*)*, void (%struct.kernfs_open_file*)*, i32 (%struct.seq_file*, i8*)*, i8* (%struct.seq_file*, i64*)*, i8* (%struct.seq_file*, i8*, i64*)*, void (%struct.seq_file*, i8*)*, i64 (%struct.kernfs_open_file*, i8*, i64, i64)*, i64, i8, i64 (%struct.kernfs_open_file*, i8*, i64, i64)*, i32 (%struct.kernfs_open_file*, %struct.poll_table_struct*)*, i32 (%struct.kernfs_open_file*, %struct.vm_area_struct*)* }
%struct.kernfs_open_file = type { %struct.kernfs_node*, %struct.file*, %struct.seq_file*, i8*, %struct.mutex, %struct.mutex, i32, %struct.list_head, i8*, i64, i8, %struct.vm_operations_struct* }
%struct.file = type { %union.anon.0, %struct.path, %struct.inode*, %struct.file_operations*, %struct.spinlock, i32, %struct.atomic64_t, i32, i32, %struct.mutex, i64, %struct.fown_struct, %struct.cred*, %struct.file_ra_state, i64, i8*, %struct.list_head, %struct.list_head, %struct.address_space*, i32, i32 }
%union.anon.0 = type { %struct.callback_head }
%struct.callback_head = type { %struct.callback_head*, void (%struct.callback_head*)* }
%struct.path = type { %struct.vfsmount*, %struct.dentry* }
%struct.vfsmount = type opaque
%struct.dentry = type { i32, %struct.seqcount_spinlock, %struct.hlist_bl_node, %struct.dentry*, %struct.qstr, %struct.inode*, [32 x i8], %struct.lockref, %struct.dentry_operations*, %struct.super_block*, i64, i8*, %union.anon.62, %struct.list_head, %struct.list_head, %union.anon.63 }
%struct.seqcount_spinlock = type { %struct.seqcount }
%struct.seqcount = type { i32 }
%struct.hlist_bl_node = type { %struct.hlist_bl_node*, %struct.hlist_bl_node** }
%struct.qstr = type { %union.anon.1, i8* }
%union.anon.1 = type { i64 }
%struct.lockref = type { %union.anon.60 }
%union.anon.60 = type { %struct.anon.61 }
%struct.anon.61 = type { %struct.spinlock, i32 }
%struct.dentry_operations = type { i32 (%struct.dentry*, i32)*, i32 (%struct.dentry*, i32)*, i32 (%struct.dentry*, %struct.qstr*)*, i32 (%struct.dentry*, i32, i8*, %struct.qstr*)*, i32 (%struct.dentry*)*, i32 (%struct.dentry*)*, void (%struct.dentry*)*, void (%struct.dentry*)*, void (%struct.dentry*, %struct.inode*)*, i8* (%struct.dentry*, i8*, i32)*, %struct.vfsmount* (%struct.path*)*, i32 (%struct.path*, i1)*, %struct.dentry* (%struct.dentry*, %struct.inode*)*, [24 x i8] }
%struct.super_block = type { %struct.list_head, i32, i8, i64, i64, %struct.file_system_type*, %struct.super_operations*, %struct.dquot_operations*, %struct.quotactl_ops*, %struct.export_operations*, i64, i64, i64, %struct.dentry*, %struct.rw_semaphore, i32, %struct.atomic_t, %struct.xattr_handler**, %struct.hlist_bl_head, %struct.list_head, %struct.block_device*, %struct.backing_dev_info*, %struct.mtd_info*, %struct.hlist_node, i32, %struct.quota_info, %struct.sb_writers, i8*, i32, i64, i64, i32, %struct.fsnotify_mark_connector*, [32 x i8], %struct.uuid_t, i32, i32, %struct.mutex, i8*, %struct.dentry_operations*, i32, %struct.shrinker, %struct.atomic64_t, %struct.atomic64_t, i32, i32, %struct.workqueue_struct*, %struct.hlist_head, %struct.user_namespace*, %struct.list_lru, %struct.list_lru, %struct.callback_head, %struct.work_struct, %struct.mutex, i32, %struct.spinlock, %struct.list_head, %struct.spinlock, %struct.list_head }
%struct.file_system_type = type { i8*, i32, i32 (%struct.fs_context*)*, %struct.fs_parameter_spec*, %struct.dentry* (%struct.file_system_type*, i32, i8*, i8*)*, void (%struct.super_block*)*, %struct.module*, %struct.file_system_type*, %struct.hlist_head, %struct.lock_class_key, %struct.lock_class_key, %struct.lock_class_key, [3 x %struct.lock_class_key], %struct.lock_class_key, %struct.lock_class_key, %struct.lock_class_key }
%struct.fs_context = type opaque
%struct.fs_parameter_spec = type opaque
%struct.module = type opaque
%struct.super_operations = type { %struct.inode* (%struct.super_block*)*, void (%struct.inode*)*, void (%struct.inode*)*, void (%struct.inode*, i32)*, i32 (%struct.inode*, %struct.writeback_control*)*, i32 (%struct.inode*)*, void (%struct.inode*)*, void (%struct.super_block*)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*)*, i32 (%struct.super_block*)*, i32 (%struct.super_block*)*, i32 (%struct.super_block*)*, i32 (%struct.dentry*, %struct.kstatfs*)*, i32 (%struct.super_block*, i32*, i8*)*, void (%struct.super_block*)*, i32 (%struct.seq_file*, %struct.dentry*)*, i32 (%struct.seq_file*, %struct.dentry*)*, i32 (%struct.seq_file*, %struct.dentry*)*, i32 (%struct.seq_file*, %struct.dentry*)*, i32 (%struct.super_block*, %struct.page*, i32)*, i64 (%struct.super_block*, %struct.shrink_control*)*, i64 (%struct.super_block*, %struct.shrink_control*)* }
%struct.writeback_control = type opaque
%struct.kstatfs = type opaque
%struct.page = type { i64, %union.anon.2, %union.anon.52, %struct.atomic_t, [8 x i8] }
%union.anon.2 = type { %struct.anon.3 }
%struct.anon.3 = type { %struct.list_head, %struct.address_space*, i64, i64 }
%union.anon.52 = type { %struct.atomic_t }
%struct.shrink_control = type { i32, i32, i64, i64, %struct.mem_cgroup* }
%struct.mem_cgroup = type opaque
%struct.dquot_operations = type { i32 (%struct.dquot*)*, %struct.dquot* (%struct.super_block*, i32)*, void (%struct.dquot*)*, i32 (%struct.dquot*)*, i32 (%struct.dquot*)*, i32 (%struct.dquot*)*, i32 (%struct.super_block*, i32)*, i64* (%struct.inode*)*, i32 (%struct.inode*, %struct.kprojid_t*)*, i32 (%struct.inode*, i64*)*, i32 (%struct.super_block*, %struct.kqid*)* }
%struct.dquot = type { %struct.hlist_node, %struct.list_head, %struct.list_head, %struct.list_head, %struct.mutex, %struct.spinlock, %struct.atomic_t, %struct.super_block*, %struct.kqid, i64, i64, %struct.mem_dqblk }
%struct.kqid = type { %union.anon.53, i32 }
%union.anon.53 = type { %struct.kuid_t }
%struct.mem_dqblk = type { i64, i64, i64, i64, i64, i64, i64, i64, i64 }
%struct.kprojid_t = type { i32 }
%struct.quotactl_ops = type { i32 (%struct.super_block*, i32, i32, %struct.path*)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32, %struct.qc_info*)*, i32 (%struct.super_block*, i64, %struct.qc_dqblk*)*, i32 (%struct.super_block*, %struct.kqid*, %struct.qc_dqblk*)*, i32 (%struct.super_block*, i64, %struct.qc_dqblk*)*, i32 (%struct.super_block*, %struct.qc_state*)*, i32 (%struct.super_block*, i32)* }
%struct.qc_info = type { i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.qc_dqblk = type { i32, i64, i64, i64, i64, i64, i64, i64, i64, i32, i32, i64, i64, i64, i64, i32 }
%struct.qc_state = type { i32, [3 x %struct.qc_type_state] }
%struct.qc_type_state = type { i32, i32, i32, i32, i32, i32, i32, i64, i64, i64 }
%struct.export_operations = type opaque
%struct.rw_semaphore = type { %struct.atomic64_t, %struct.atomic64_t, %struct.raw_spinlock, %struct.list_head }
%struct.xattr_handler = type opaque
%struct.hlist_bl_head = type { %struct.hlist_bl_node* }
%struct.block_device = type opaque
%struct.backing_dev_info = type opaque
%struct.mtd_info = type opaque
%struct.hlist_node = type { %struct.hlist_node*, %struct.hlist_node** }
%struct.quota_info = type { i32, %struct.rw_semaphore, [3 x %struct.inode*], [3 x %struct.mem_dqinfo], [3 x %struct.quota_format_ops*] }
%struct.mem_dqinfo = type { %struct.quota_format_type*, i32, %struct.list_head, i64, i32, i32, i64, i64, i8* }
%struct.quota_format_type = type { i32, %struct.quota_format_ops*, %struct.module*, %struct.quota_format_type* }
%struct.quota_format_ops = type { i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.dquot*)*, i32 (%struct.dquot*)*, i32 (%struct.dquot*)*, i32 (%struct.super_block*, %struct.kqid*)* }
%struct.sb_writers = type { i32, %struct.wait_queue_head, [3 x %struct.percpu_rw_semaphore] }
%struct.wait_queue_head = type { %struct.spinlock, %struct.list_head }
%struct.percpu_rw_semaphore = type { %struct.rcu_sync, i32*, %struct.rcuwait, %struct.wait_queue_head, %struct.atomic_t }
%struct.rcu_sync = type { i32, i32, %struct.wait_queue_head, %struct.callback_head }
%struct.rcuwait = type { %struct.task_struct* }
%struct.task_struct = type { %struct.thread_info, i64, i8*, %struct.refcount_struct, i32, i32, i32, i32, i32, i32, i32, %struct.sched_class*, %struct.sched_entity, %struct.sched_rt_entity, %struct.sched_dl_entity, i32, i32, %struct.cpumask*, %struct.cpumask, %struct.sched_info, %struct.list_head, %struct.mm_struct*, %struct.mm_struct*, %struct.vmacache, i32, i32, i32, i32, i64, i32, i8, [3 x i8], i8, i64, %struct.restart_block, i32, i32, i64, %struct.task_struct*, %struct.task_struct*, %struct.list_head, %struct.list_head, %struct.task_struct*, %struct.list_head, %struct.list_head, %struct.pid*, [4 x %struct.hlist_node], %struct.list_head, %struct.list_head, %struct.completion*, i32*, i32*, i64, i64, i64, %struct.prev_cputime, i64, i64, i64, i64, i64, i64, %struct.posix_cputimers, %struct.posix_cputimers_work, %struct.cred*, %struct.cred*, %struct.cred*, %struct.key*, [16 x i8], %struct.nameidata*, %struct.fs_struct*, %struct.files_struct*, %struct.io_uring_task*, %struct.nsproxy*, %struct.signal_struct*, %struct.sighand_struct*, %struct.sigset_t, %struct.sigset_t, %struct.sigset_t, %struct.sigpending, i64, i64, i32, %struct.callback_head*, %struct.seccomp, i64, i64, %struct.spinlock, %struct.raw_spinlock, %struct.wake_q_node, %struct.rb_root_cached, %struct.task_struct*, %struct.rt_mutex_waiter*, i8*, %struct.bio_list*, %struct.blk_plug*, %struct.reclaim_state*, %struct.backing_dev_info*, %struct.io_context*, %struct.capture_control*, i64, %struct.kernel_siginfo*, %struct.task_io_accounting, %struct.robust_list_head*, %struct.list_head, %struct.futex_pi_state*, %struct.mutex, i32, [2 x %struct.perf_event_context*], %struct.mutex, %struct.list_head, %struct.rseq*, i32, i64, %struct.tlbflush_unmap_batch, %union.anon.45, %struct.pipe_inode_info*, %struct.page_frag, i32, i32, i64, i64, i64, i32, %struct.task_struct*, %struct.vm_struct*, %struct.refcount_struct, i8*, i64, i64, i64, %struct.callback_head, [24 x i8], %struct.thread_struct }
%struct.thread_info = type { i64, i32 }
%struct.sched_class = type opaque
%struct.sched_entity = type { %struct.load_weight, %struct.rb_node, %struct.list_head, i32, i64, i64, i64, i64, i64, %struct.sched_statistics }
%struct.load_weight = type { i64, i32 }
%struct.sched_statistics = type {}
%struct.sched_rt_entity = type { %struct.list_head, i64, i64, i32, i16, i16, %struct.sched_rt_entity* }
%struct.sched_dl_entity = type { %struct.rb_node, i64, i64, i64, i64, i64, i64, i64, i32, i8, %struct.hrtimer, %struct.hrtimer, %struct.sched_dl_entity* }
%struct.hrtimer = type { %struct.timerqueue_node, i64, i32 (%struct.hrtimer*)*, %struct.hrtimer_clock_base*, i8, i8, i8, i8 }
%struct.timerqueue_node = type { %struct.rb_node, i64 }
%struct.hrtimer_clock_base = type { %struct.hrtimer_cpu_base*, i32, i32, %struct.seqcount_raw_spinlock, %struct.hrtimer*, %struct.timerqueue_head, i64 ()*, i64 }
%struct.hrtimer_cpu_base = type { %struct.raw_spinlock, i32, i32, i32, i8, i64, %struct.hrtimer*, i64, %struct.hrtimer*, [16 x i8], [8 x %struct.hrtimer_clock_base] }
%struct.seqcount_raw_spinlock = type { %struct.seqcount }
%struct.timerqueue_head = type { %struct.rb_root_cached }
%struct.cpumask = type { [1 x i64] }
%struct.sched_info = type {}
%struct.mm_struct = type { %struct.anon.15, [0 x i64] }
%struct.anon.15 = type { %struct.vm_area_struct*, %struct.rb_root, i64, i64 (%struct.file*, i64, i64, i64, i64)*, i64, i64, i64, i64, %struct.pgd_t*, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic64_t, i32, %struct.spinlock, %struct.rw_semaphore, %struct.list_head, i64, i64, i64, i64, %struct.atomic64_t, i64, i64, i64, i64, %struct.spinlock, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, [44 x i64], %struct.mm_rss_stat, %struct.linux_binfmt*, %struct.mm_context_t, i64, %struct.core_state*, %struct.spinlock, %struct.kioctx_table*, %struct.user_namespace*, %struct.file*, %struct.mmu_notifier_subscriptions*, %struct.atomic_t, i8, %struct.uprobes_state, %struct.work_struct, i32 }
%struct.vm_area_struct = type { i64, i64, %struct.vm_area_struct*, %struct.vm_area_struct*, %struct.rb_node, i64, %struct.mm_struct*, %struct.pgprot, i64, %struct.anon.16, %struct.list_head, %struct.anon_vma*, %struct.vm_operations_struct*, i64, %struct.file*, i8*, %struct.atomic64_t, %struct.vm_userfaultfd_ctx }
%struct.pgprot = type { i64 }
%struct.anon.16 = type { %struct.rb_node, i64 }
%struct.anon_vma = type opaque
%struct.vm_userfaultfd_ctx = type {}
%struct.rb_root = type { %struct.rb_node* }
%struct.pgd_t = type { i64 }
%struct.mm_rss_stat = type { [4 x %struct.atomic64_t] }
%struct.linux_binfmt = type opaque
%struct.mm_context_t = type { i64, %struct.atomic64_t, %struct.rw_semaphore, %struct.ldt_struct*, i16, %struct.mutex, i8*, %struct.vdso_image*, %struct.atomic_t, i16, i16 }
%struct.ldt_struct = type opaque
%struct.vdso_image = type { i8*, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64 }
%struct.core_state = type { %struct.atomic_t, %struct.core_thread, %struct.completion }
%struct.core_thread = type { %struct.task_struct*, %struct.core_thread* }
%struct.completion = type { i32, %struct.swait_queue_head }
%struct.swait_queue_head = type { %struct.raw_spinlock, %struct.list_head }
%struct.kioctx_table = type opaque
%struct.mmu_notifier_subscriptions = type opaque
%struct.uprobes_state = type {}
%struct.vmacache = type { i64, [4 x %struct.vm_area_struct*] }
%struct.restart_block = type { i64 (%struct.restart_block*)*, %union.anon.17 }
%union.anon.17 = type { %struct.anon.18 }
%struct.anon.18 = type { i32*, i32, i32, i32, i64, i32* }
%struct.pid = type { %struct.refcount_struct, i32, %struct.spinlock, [4 x %struct.hlist_head], %struct.hlist_head, %struct.wait_queue_head, %struct.callback_head, [1 x %struct.upid] }
%struct.upid = type { i32, %struct.pid_namespace* }
%struct.pid_namespace = type opaque
%struct.prev_cputime = type { i64, i64, %struct.raw_spinlock }
%struct.posix_cputimers = type { [3 x %struct.posix_cputimer_base], i32, i32 }
%struct.posix_cputimer_base = type { i64, %struct.timerqueue_head }
%struct.posix_cputimers_work = type { %struct.callback_head, i32 }
%struct.key = type { %struct.refcount_struct, i32, %union.anon.22, %struct.rw_semaphore, %struct.key_user*, i8*, %union.anon.23, i64, %struct.kuid_t, %struct.kgid_t, i32, i16, i16, i16, i64, %union.anon.24, %union.anon.28, %struct.key_restriction* }
%union.anon.22 = type { %struct.rb_node }
%struct.key_user = type opaque
%union.anon.23 = type { i64 }
%union.anon.24 = type { %struct.keyring_index_key }
%struct.keyring_index_key = type { i64, %union.anon.25, %struct.key_type*, %struct.key_tag*, i8* }
%union.anon.25 = type { i64 }
%struct.key_type = type opaque
%struct.key_tag = type { %struct.callback_head, %struct.refcount_struct, i8 }
%union.anon.28 = type { %union.key_payload }
%union.key_payload = type { [4 x i8*] }
%struct.key_restriction = type { i32 (%struct.key*, %struct.key_type*, %union.key_payload*, %struct.key*)*, %struct.key*, %struct.key_type* }
%struct.nameidata = type opaque
%struct.fs_struct = type opaque
%struct.files_struct = type opaque
%struct.io_uring_task = type opaque
%struct.nsproxy = type opaque
%struct.signal_struct = type { %struct.refcount_struct, %struct.atomic_t, i32, %struct.list_head, %struct.wait_queue_head, %struct.task_struct*, %struct.sigpending, %struct.hlist_head, i32, i32, %struct.task_struct*, i32, i32, i8, i32, %struct.list_head, %struct.hrtimer, i64, [2 x %struct.cpu_itimer], %struct.thread_group_cputimer, %struct.posix_cputimers, [4 x %struct.pid*], %struct.pid*, i32, %struct.tty_struct*, %struct.seqlock_t, i64, i64, i64, i64, i64, i64, %struct.prev_cputime, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, %struct.task_io_accounting, i64, [16 x %struct.rlimit], i8, i16, i16, %struct.mm_struct*, %struct.mutex, %struct.mutex }
%struct.cpu_itimer = type { i64, i64 }
%struct.thread_group_cputimer = type { %struct.task_cputime_atomic }
%struct.task_cputime_atomic = type { %struct.atomic64_t, %struct.atomic64_t, %struct.atomic64_t }
%struct.tty_struct = type opaque
%struct.seqlock_t = type { %struct.seqcount_spinlock, %struct.spinlock }
%struct.rlimit = type { i64, i64 }
%struct.sighand_struct = type { %struct.spinlock, %struct.refcount_struct, %struct.wait_queue_head, [64 x %struct.k_sigaction] }
%struct.k_sigaction = type { %struct.sigaction }
%struct.sigaction = type { void (i32)*, i64, void ()*, %struct.sigset_t }
%struct.sigset_t = type { [1 x i64] }
%struct.sigpending = type { %struct.list_head, %struct.sigset_t }
%struct.seccomp = type { i32, %struct.atomic_t, %struct.seccomp_filter* }
%struct.seccomp_filter = type opaque
%struct.wake_q_node = type { %struct.wake_q_node* }
%struct.rb_root_cached = type { %struct.rb_root, %struct.rb_node* }
%struct.rt_mutex_waiter = type opaque
%struct.bio_list = type opaque
%struct.blk_plug = type opaque
%struct.reclaim_state = type opaque
%struct.io_context = type { %struct.atomic64_t, %struct.atomic_t, %struct.atomic_t, %struct.spinlock, i16, %struct.xarray, %struct.io_cq*, %struct.hlist_head, %struct.work_struct }
%struct.xarray = type { %struct.spinlock, i32, i8* }
%struct.io_cq = type { %struct.request_queue*, %struct.io_context*, %union.anon.31, %union.anon.32, i32 }
%struct.request_queue = type opaque
%union.anon.31 = type { %struct.list_head }
%union.anon.32 = type { %struct.hlist_node }
%struct.capture_control = type opaque
%struct.kernel_siginfo = type { %struct.anon.33 }
%struct.anon.33 = type { i32, i32, i32, %union.__sifields }
%union.__sifields = type { %struct.anon.37 }
%struct.anon.37 = type { i32, i32, i32, i64, i64 }
%struct.task_io_accounting = type {}
%struct.robust_list_head = type opaque
%struct.futex_pi_state = type opaque
%struct.perf_event_context = type opaque
%struct.rseq = type { i32, i32, %union.anon.44, i32, [12 x i8] }
%union.anon.44 = type { i64 }
%struct.tlbflush_unmap_batch = type { %struct.arch_tlbflush_unmap_batch, i8, i8 }
%struct.arch_tlbflush_unmap_batch = type { %struct.cpumask }
%union.anon.45 = type { %struct.callback_head }
%struct.pipe_inode_info = type opaque
%struct.page_frag = type { %struct.page*, i32, i32 }
%struct.vm_struct = type { %struct.vm_struct*, i8*, i64, i64, %struct.page**, i32, i64, i8* }
%struct.refcount_struct = type { %struct.atomic_t }
%struct.thread_struct = type { [3 x %struct.desc_struct], i64, i16, i16, i16, i16, i64, i64, [4 x %struct.perf_event*], i64, i64, i64, i64, i64, %struct.io_bitmap*, i64, i8, [47 x i8], %struct.fpu }
%struct.desc_struct = type { i16, i16, i32 }
%struct.perf_event = type opaque
%struct.io_bitmap = type opaque
%struct.fpu = type { i32, i64, [48 x i8], %union.fpregs_state }
%union.fpregs_state = type { %struct.xregs_state, [3520 x i8] }
%struct.xregs_state = type { %struct.fxregs_state, %struct.xstate_header, [0 x i8] }
%struct.fxregs_state = type { i16, i16, i16, i16, %union.anon.46, i32, i32, [32 x i32], [64 x i32], [12 x i32], %union.anon.49 }
%union.anon.46 = type { %struct.anon.47 }
%struct.anon.47 = type { i64, i64 }
%union.anon.49 = type { [12 x i32] }
%struct.xstate_header = type { i64, i64, [6 x i64] }
%struct.fsnotify_mark_connector = type opaque
%struct.uuid_t = type { [16 x i8] }
%struct.shrinker = type { i64 (%struct.shrinker*, %struct.shrink_control*)*, i64 (%struct.shrinker*, %struct.shrink_control*)*, i64, i32, i32, %struct.list_head, %struct.atomic64_t* }
%struct.workqueue_struct = type opaque
%struct.hlist_head = type { %struct.hlist_node* }
%struct.user_namespace = type opaque
%struct.list_lru = type { %struct.list_lru_node* }
%struct.list_lru_node = type { %struct.spinlock, %struct.list_lru_one, i64 }
%struct.list_lru_one = type { %struct.list_head, i64 }
%struct.work_struct = type { %struct.atomic64_t, %struct.list_head, void (%struct.work_struct*)* }
%union.anon.62 = type { %struct.list_head }
%union.anon.63 = type { %struct.hlist_node }
%struct.inode = type { i16, i16, %struct.kuid_t, %struct.kgid_t, i32, %struct.inode_operations*, %struct.super_block*, %struct.address_space*, i64, %union.anon.54, i32, i64, %struct.timespec64, %struct.timespec64, %struct.timespec64, %struct.spinlock, i16, i8, i8, i64, i64, %struct.rw_semaphore, i64, i64, %struct.hlist_node, %struct.list_head, %struct.list_head, %struct.list_head, %struct.list_head, %union.anon.55, %struct.atomic64_t, %struct.atomic64_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %union.anon.56, %struct.file_lock_context*, %struct.address_space, %struct.list_head, %union.anon.59, i32, i32, %struct.fsnotify_mark_connector*, i8* }
%struct.inode_operations = type { %struct.dentry* (%struct.inode*, %struct.dentry*, i32)*, i8* (%struct.dentry*, %struct.inode*, %struct.delayed_call*)*, i32 (%struct.inode*, i32)*, %struct.posix_acl* (%struct.inode*, i32)*, i32 (%struct.dentry*, i8*, i32)*, i32 (%struct.inode*, %struct.dentry*, i16, i1)*, i32 (%struct.dentry*, %struct.inode*, %struct.dentry*)*, i32 (%struct.inode*, %struct.dentry*)*, i32 (%struct.inode*, %struct.dentry*, i8*)*, i32 (%struct.inode*, %struct.dentry*, i16)*, i32 (%struct.inode*, %struct.dentry*)*, i32 (%struct.inode*, %struct.dentry*, i16, i32)*, i32 (%struct.inode*, %struct.dentry*, %struct.inode*, %struct.dentry*, i32)*, i32 (%struct.dentry*, %struct.iattr*)*, i32 (%struct.path*, %struct.kstat*, i32, i32)*, i64 (%struct.dentry*, i8*, i64)*, i32 (%struct.inode*, %struct.fiemap_extent_info*, i64, i64)*, i32 (%struct.inode*, %struct.timespec64*, i32)*, i32 (%struct.inode*, %struct.dentry*, %struct.file*, i32, i16)*, i32 (%struct.inode*, %struct.dentry*, i16)*, i32 (%struct.inode*, %struct.posix_acl*, i32)*, [24 x i8] }
%struct.delayed_call = type { void (i8*)*, i8* }
%struct.posix_acl = type opaque
%struct.iattr = type { i32, i16, %struct.kuid_t, %struct.kgid_t, i64, %struct.timespec64, %struct.timespec64, %struct.timespec64, %struct.file* }
%struct.kstat = type { i32, i16, i32, i32, i64, i64, i64, i32, i32, %struct.kuid_t, %struct.kgid_t, i64, %struct.timespec64, %struct.timespec64, %struct.timespec64, %struct.timespec64, i64, i64 }
%struct.fiemap_extent_info = type opaque
%union.anon.54 = type { i32 }
%struct.timespec64 = type { i64, i64 }
%union.anon.55 = type { %struct.callback_head }
%union.anon.56 = type { %struct.file_operations* }
%struct.file_lock_context = type { %struct.spinlock, %struct.list_head, %struct.list_head, %struct.list_head }
%struct.address_space = type { %struct.inode*, %struct.xarray, i32, %struct.atomic_t, %struct.rb_root_cached, %struct.rw_semaphore, i64, i64, i64, %struct.address_space_operations*, i64, i32, %struct.spinlock, %struct.list_head, i8* }
%struct.address_space_operations = type { i32 (%struct.page*, %struct.writeback_control*)*, i32 (%struct.file*, %struct.page*)*, i32 (%struct.address_space*, %struct.writeback_control*)*, i32 (%struct.page*)*, i32 (%struct.file*, %struct.address_space*, %struct.list_head*, i32)*, void (%struct.readahead_control*)*, i32 (%struct.file*, %struct.address_space*, i64, i32, i32, %struct.page**, i8**)*, i32 (%struct.file*, %struct.address_space*, i64, i32, i32, %struct.page*, i8*)*, i64 (%struct.address_space*, i64)*, void (%struct.page*, i32, i32)*, i32 (%struct.page*, i32)*, void (%struct.page*)*, i64 (%struct.kiocb*, %struct.iov_iter*)*, i32 (%struct.address_space*, %struct.page*, %struct.page*, i32)*, i1 (%struct.page*, i32)*, void (%struct.page*)*, i32 (%struct.page*)*, i32 (%struct.page*, i64, i64)*, void (%struct.page*, i8*, i8*)*, i32 (%struct.address_space*, %struct.page*)*, i32 (%struct.swap_info_struct*, %struct.file*, i64*)*, void (%struct.file*)* }
%struct.readahead_control = type opaque
%struct.kiocb = type { %struct.file*, i64, void (%struct.kiocb*, i64, i64)*, i8*, i32, i16, i16, %union.anon.4 }
%union.anon.4 = type { %struct.wait_page_queue* }
%struct.wait_page_queue = type opaque
%struct.iov_iter = type opaque
%struct.swap_info_struct = type opaque
%union.anon.59 = type { %struct.pipe_inode_info* }
%struct.file_operations = type { %struct.module*, i64 (%struct.file*, i64, i32)*, i64 (%struct.file*, i8*, i64, i64*)*, i64 (%struct.file*, i8*, i64, i64*)*, i64 (%struct.kiocb*, %struct.iov_iter*)*, i64 (%struct.kiocb*, %struct.iov_iter*)*, i32 (%struct.kiocb*, i1)*, i32 (%struct.file*, %struct.dir_context*)*, i32 (%struct.file*, %struct.dir_context*)*, i32 (%struct.file*, %struct.poll_table_struct*)*, i64 (%struct.file*, i32, i64)*, i64 (%struct.file*, i32, i64)*, i32 (%struct.file*, %struct.vm_area_struct*)*, i64, i32 (%struct.inode*, %struct.file*)*, i32 (%struct.file*, i8*)*, i32 (%struct.inode*, %struct.file*)*, i32 (%struct.file*, i64, i64, i32)*, i32 (i32, %struct.file*, i32)*, i32 (%struct.file*, i32, %struct.file_lock*)*, i64 (%struct.file*, %struct.page*, i32, i64, i64*, i32)*, i64 (%struct.file*, i64, i64, i64, i64)*, i32 (i32)*, i32 (%struct.file*, i32, %struct.file_lock*)*, i64 (%struct.pipe_inode_info*, %struct.file*, i64*, i64, i32)*, i64 (%struct.file*, i64*, %struct.pipe_inode_info*, i64, i32)*, i32 (%struct.file*, i64, %struct.file_lock**, i8**)*, i64 (%struct.file*, i32, i64, i64)*, void (%struct.seq_file*, %struct.file*)*, i64 (%struct.file*, i64, %struct.file*, i64, i64, i32)*, i64 (%struct.file*, i64, %struct.file*, i64, i64, i32)*, i32 (%struct.file*, i64, i64, i32)* }
%struct.dir_context = type { i32 (%struct.dir_context*, i8*, i32, i64, i64, i32)*, i64 }
%struct.poll_table_struct = type opaque
%struct.file_lock = type { %struct.file_lock*, %struct.list_head, %struct.hlist_node, %struct.list_head, %struct.list_head, i8*, i32, i8, i32, i32, %struct.wait_queue_head, %struct.file*, i64, i64, %struct.fasync_struct*, i64, i64, %struct.file_lock_operations*, %struct.lock_manager_operations*, %union.anon.57 }
%struct.fasync_struct = type { %struct.rwlock_t, i32, i32, %struct.fasync_struct*, %struct.file*, %struct.callback_head }
%struct.rwlock_t = type { %struct.arch_rwlock_t }
%struct.arch_rwlock_t = type {}
%struct.file_lock_operations = type { void (%struct.file_lock*, %struct.file_lock*)*, void (%struct.file_lock*)* }
%struct.lock_manager_operations = type { i8* (i8*)*, void (i8*)*, void (%struct.file_lock*)*, i32 (%struct.file_lock*, i32)*, i1 (%struct.file_lock*)*, i32 (%struct.file_lock*, i32, %struct.list_head*)*, void (%struct.file_lock*, i8**)*, i1 (%struct.file_lock*)* }
%union.anon.57 = type { %struct.nfs_lock_info }
%struct.nfs_lock_info = type { i32, %struct.nlm_lockowner*, %struct.list_head }
%struct.nlm_lockowner = type opaque
%struct.fown_struct = type { %struct.rwlock_t, %struct.pid*, i32, %struct.kuid_t, %struct.kuid_t, i32 }
%struct.cred = type { %struct.atomic_t, %struct.kuid_t, %struct.kgid_t, %struct.kuid_t, %struct.kgid_t, %struct.kuid_t, %struct.kgid_t, %struct.kuid_t, %struct.kgid_t, i32, %struct.kernel_cap_struct, %struct.kernel_cap_struct, %struct.kernel_cap_struct, %struct.kernel_cap_struct, %struct.kernel_cap_struct, i8, %struct.key*, %struct.key*, %struct.key*, %struct.key*, %struct.user_struct*, %struct.user_namespace*, %struct.group_info*, %union.anon.30 }
%struct.kernel_cap_struct = type { [2 x i32] }
%struct.user_struct = type { %struct.refcount_struct, %struct.atomic_t, %struct.atomic_t, %struct.atomic64_t, i64, i64, %struct.atomic64_t, %struct.hlist_node, %struct.kuid_t, %struct.atomic64_t, %struct.ratelimit_state }
%struct.ratelimit_state = type { %struct.raw_spinlock, i32, i32, i32, i32, i64, i64 }
%struct.group_info = type { %struct.atomic_t, i32, [0 x %struct.kgid_t] }
%union.anon.30 = type { %struct.callback_head }
%struct.file_ra_state = type { i64, i32, i32, i32, i32, i64 }
%struct.seq_file = type opaque
%struct.vm_operations_struct = type { void (%struct.vm_area_struct*)*, void (%struct.vm_area_struct*)*, i32 (%struct.vm_area_struct*, i64)*, i32 (%struct.vm_area_struct*)*, i32 (%struct.vm_fault*)*, i32 (%struct.vm_fault*, i32)*, void (%struct.vm_fault*, i64, i64)*, i64 (%struct.vm_area_struct*)*, i32 (%struct.vm_fault*)*, i32 (%struct.vm_fault*)*, i32 (%struct.vm_area_struct*, i64, i8*, i32, i32)*, i8* (%struct.vm_area_struct*)*, %struct.page* (%struct.vm_area_struct*, i64)* }
%struct.vm_fault = type { %struct.vm_area_struct*, i32, i32, i64, i64, %struct.pmd_t*, %struct.pud_t*, %struct.pte_t, %struct.page*, %struct.page*, %struct.pte_t*, %struct.spinlock*, %struct.page* }
%struct.pmd_t = type { i64 }
%struct.pud_t = type { i64 }
%struct.pte_t = type { i64 }
%struct.kernfs_open_node = type opaque
%struct.kernfs_iattrs = type opaque
%struct.kref = type { %struct.refcount_struct }
%struct.device_private = type opaque
%struct.device_type = type { i8*, %struct.attribute_group**, i32 (%struct.device*, %struct.kobj_uevent_env*)*, i8* (%struct.device*, i16*, %struct.kuid_t*, %struct.kgid_t*)*, void (%struct.device*)*, %struct.dev_pm_ops* }
%struct.device_driver = type { i8*, %struct.bus_type*, %struct.module*, i8*, i8, i32, %struct.of_device_id*, %struct.acpi_device_id*, i32 (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*, i32)*, i32 (%struct.device*)*, %struct.attribute_group**, %struct.attribute_group**, %struct.dev_pm_ops*, void (%struct.device*)*, %struct.driver_private* }
%struct.of_device_id = type { [32 x i8], [32 x i8], [128 x i8], i8* }
%struct.acpi_device_id = type { [9 x i8], i64, i32, i32 }
%struct.driver_private = type opaque
%struct.dev_links_info = type { %struct.list_head, %struct.list_head, %struct.list_head, %struct.list_head, i8, i32 }
%struct.dev_pm_info = type { %struct.pm_message, i16, i32, %struct.spinlock, %struct.list_head, %struct.completion, %struct.wakeup_source*, i8, %struct.hrtimer, i64, %struct.work_struct, %struct.wait_queue_head, %struct.wake_irq*, %struct.atomic_t, %struct.atomic_t, i16, i32, i32, i32, i32, i32, i64, i64, i64, i64, %struct.pm_subsys_data*, void (%struct.device*, i32)*, %struct.dev_pm_qos* }
%struct.pm_message = type { i32 }
%struct.wakeup_source = type { i8*, i32, %struct.list_head, %struct.spinlock, %struct.wake_irq*, %struct.timer_list, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, %struct.device*, i8 }
%struct.timer_list = type { %struct.hlist_node, i64, void (%struct.timer_list*)*, i32 }
%struct.wake_irq = type opaque
%struct.pm_subsys_data = type { %struct.spinlock, i32, %struct.list_head, %struct.pm_domain_data* }
%struct.pm_domain_data = type opaque
%struct.dev_pm_qos = type opaque
%struct.dev_pm_domain = type { %struct.dev_pm_ops, i32 (%struct.device*)*, void (%struct.device*, i1)*, i32 (%struct.device*)*, void (%struct.device*)*, void (%struct.device*)* }
%struct.dev_pm_ops = type { i32 (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)* }
%struct.irq_domain = type { %struct.list_head, i8*, %struct.irq_domain_ops*, i8*, i32, i32, %struct.fwnode_handle*, i32, %struct.irq_domain_chip_generic*, %struct.irq_domain*, i64, i32, i32, %struct.xarray, %struct.mutex, [0 x i32] }
%struct.irq_domain_ops = type { i32 (%struct.irq_domain*, %struct.device_node*, i32)*, i32 (%struct.irq_domain*, %struct.irq_fwspec*, i32)*, i32 (%struct.irq_domain*, i32, i64)*, void (%struct.irq_domain*, i32)*, i32 (%struct.irq_domain*, %struct.device_node*, i32*, i32, i64*, i32*)*, i32 (%struct.irq_domain*, i32, i32, i8*)*, void (%struct.irq_domain*, i32, i32)*, i32 (%struct.irq_domain*, %struct.irq_data*, i1)*, void (%struct.irq_domain*, %struct.irq_data*)*, i32 (%struct.irq_domain*, %struct.irq_fwspec*, i64*, i32*)* }
%struct.irq_fwspec = type { %struct.fwnode_handle*, i32, [16 x i32] }
%struct.irq_data = type opaque
%struct.irq_domain_chip_generic = type opaque
%struct.dma_map_ops = type { i8* (%struct.device*, i64, i64*, i32, i64)*, void (%struct.device*, i64, i8*, i64, i64)*, %struct.page* (%struct.device*, i64, i64*, i32, i32)*, void (%struct.device*, i64, %struct.page*, i64, i32)*, i8* (%struct.device*, i64, i64*, i32, i32)*, void (%struct.device*, i64, i8*, i64, i32)*, i32 (%struct.device*, %struct.vm_area_struct*, i8*, i64, i64, i64)*, i32 (%struct.device*, %struct.sg_table*, i8*, i64, i64, i64)*, i64 (%struct.device*, %struct.page*, i64, i64, i32, i64)*, void (%struct.device*, i64, i64, i32, i64)*, i32 (%struct.device*, %struct.scatterlist*, i32, i32, i64)*, void (%struct.device*, %struct.scatterlist*, i32, i32, i64)*, i64 (%struct.device*, i64, i64, i32, i64)*, void (%struct.device*, i64, i64, i32, i64)*, void (%struct.device*, i64, i64, i32)*, void (%struct.device*, i64, i64, i32)*, void (%struct.device*, %struct.scatterlist*, i32, i32)*, void (%struct.device*, %struct.scatterlist*, i32, i32)*, void (%struct.device*, i8*, i64, i32)*, i32 (%struct.device*, i64)*, i64 (%struct.device*)*, i64 (%struct.device*)*, i64 (%struct.device*)* }
%struct.sg_table = type { %struct.scatterlist*, i32, i32 }
%struct.scatterlist = type { i64, i32, i32, i64, i32 }
%struct.bus_dma_region = type opaque
%struct.device_dma_parameters = type { i32, i64 }
%struct.dev_archdata = type {}
%struct.device_node = type { i8*, i32, i8*, %struct.fwnode_handle, %struct.property*, %struct.property*, %struct.device_node*, %struct.device_node*, %struct.device_node*, %struct.kobject, i64, i8* }
%struct.fwnode_handle = type { %struct.fwnode_handle*, %struct.fwnode_operations*, %struct.device* }
%struct.fwnode_operations = type { %struct.fwnode_handle* (%struct.fwnode_handle*)*, void (%struct.fwnode_handle*)*, i1 (%struct.fwnode_handle*)*, i8* (%struct.fwnode_handle*, %struct.device*)*, i1 (%struct.fwnode_handle*, i8*)*, i32 (%struct.fwnode_handle*, i8*, i32, i8*, i64)*, i32 (%struct.fwnode_handle*, i8*, i8**, i64)*, i8* (%struct.fwnode_handle*)*, i8* (%struct.fwnode_handle*)*, %struct.fwnode_handle* (%struct.fwnode_handle*)*, %struct.fwnode_handle* (%struct.fwnode_handle*, %struct.fwnode_handle*)*, %struct.fwnode_handle* (%struct.fwnode_handle*, i8*)*, i32 (%struct.fwnode_handle*, i8*, i8*, i32, i32, %struct.fwnode_reference_args*)*, %struct.fwnode_handle* (%struct.fwnode_handle*, %struct.fwnode_handle*)*, %struct.fwnode_handle* (%struct.fwnode_handle*)*, %struct.fwnode_handle* (%struct.fwnode_handle*)*, i32 (%struct.fwnode_handle*, %struct.fwnode_endpoint*)*, i32 (%struct.fwnode_handle*, %struct.device*)* }
%struct.fwnode_reference_args = type { %struct.fwnode_handle*, i32, [8 x i64] }
%struct.fwnode_endpoint = type { i32, i32, %struct.fwnode_handle* }
%struct.property = type { i8*, i32, i8*, %struct.property*, %struct.bin_attribute }
%struct.bin_attribute = type { %struct.attribute, i64, i8*, i64 (%struct.file*, %struct.kobject*, %struct.bin_attribute*, i8*, i64, i64)*, i64 (%struct.file*, %struct.kobject*, %struct.bin_attribute*, i8*, i64, i64)*, i32 (%struct.file*, %struct.kobject*, %struct.bin_attribute*, %struct.vm_area_struct*)* }
%struct.class = type { i8*, %struct.module*, %struct.attribute_group**, %struct.attribute_group**, %struct.kobject*, i32 (%struct.device*, %struct.kobj_uevent_env*)*, i8* (%struct.device*, i16*)*, void (%struct.class*)*, void (%struct.device*)*, i32 (%struct.device*)*, %struct.kobj_ns_type_operations*, i8* (%struct.device*)*, void (%struct.device*, %struct.kuid_t*, %struct.kgid_t*)*, %struct.dev_pm_ops*, %struct.subsys_private* }
%struct.iommu_group = type opaque
%struct.dev_iommu = type opaque
%struct.attribute_group = type { i8*, i16 (%struct.kobject*, %struct.attribute*, i32)*, i16 (%struct.kobject*, %struct.bin_attribute*, i32)*, %struct.attribute**, %struct.bin_attribute** }
%struct.iommu_ops = type opaque
%struct.subsys_private = type opaque
%struct.acpi_buffer = type { i64, i8* }
%struct.acpi_scan_handler = type { %struct.acpi_device_id*, %struct.list_head, i1 (i8*, %struct.acpi_device_id**)*, i32 (%struct.acpi_device*, %struct.acpi_device_id*)*, void (%struct.acpi_device*)*, void (%struct.device*)*, void (%struct.device*)*, %struct.acpi_hotplug_profile }
%struct.acpi_device = type { i32, i8*, %struct.fwnode_handle, %struct.acpi_device*, %struct.list_head, %struct.list_head, %struct.list_head, %struct.list_head, %struct.acpi_device_status, %struct.acpi_device_flags, %struct.acpi_device_pnp, %struct.acpi_device_power, %struct.acpi_device_wakeup, %struct.acpi_device_perf, %struct.acpi_device_dir, %struct.acpi_device_data, %struct.acpi_scan_handler*, %struct.acpi_hotplug_context*, %struct.acpi_driver*, %struct.acpi_gpio_mapping*, i8*, %struct.device, i32, i32, %struct.list_head, %struct.mutex, void (%struct.acpi_device*)* }
%struct.acpi_device_status = type { i32 }
%struct.acpi_device_flags = type { i32 }
%struct.acpi_device_pnp = type { [8 x i8], %struct.acpi_pnp_type, i64, i8*, %struct.list_head, [40 x i8], [20 x i8], %union.acpi_object* }
%struct.acpi_pnp_type = type { i32 }
%union.acpi_object = type { %struct.anon.70 }
%struct.anon.70 = type { i32, i32, i64, i32 }
%struct.acpi_device_power = type { i32, %struct.acpi_device_power_flags, [5 x %struct.acpi_device_power_state] }
%struct.acpi_device_power_flags = type { i32 }
%struct.acpi_device_power_state = type { %struct.anon.72, i32, i32, %struct.list_head }
%struct.anon.72 = type { i8 }
%struct.acpi_device_wakeup = type { i8*, i64, i64, %struct.list_head, %struct.acpi_device_wakeup_flags, %struct.acpi_device_wakeup_context, %struct.wakeup_source*, i32, i32 }
%struct.acpi_device_wakeup_flags = type { i8 }
%struct.acpi_device_wakeup_context = type { void (%struct.acpi_device_wakeup_context*)*, %struct.device* }
%struct.acpi_device_perf = type { i32, %struct.acpi_device_perf_flags, i32, %struct.acpi_device_perf_state* }
%struct.acpi_device_perf_flags = type { i8 }
%struct.acpi_device_perf_state = type { %struct.anon.73, i8, i8, i32 }
%struct.anon.73 = type { i8 }
%struct.acpi_device_dir = type { %struct.proc_dir_entry* }
%struct.proc_dir_entry = type opaque
%struct.acpi_device_data = type { %union.acpi_object*, %struct.list_head, %union.acpi_object*, %struct.list_head }
%struct.acpi_hotplug_context = type { %struct.acpi_device*, i32 (%struct.acpi_device*, i32)*, void (%struct.acpi_device*, i32)*, void (%struct.acpi_device*)* }
%struct.acpi_driver = type { [80 x i8], [80 x i8], %struct.acpi_device_id*, i32, %struct.acpi_device_ops, %struct.device_driver, %struct.module* }
%struct.acpi_device_ops = type { i32 (%struct.acpi_device*)*, i32 (%struct.acpi_device*)*, void (%struct.acpi_device*, i32)* }
%struct.acpi_gpio_mapping = type opaque
%struct.acpi_hotplug_profile = type { %struct.kobject, i32 (%struct.acpi_device*)*, void (%struct.acpi_device*)*, i8 }
%struct.acpi_probe_entry = type { [5 x i8], i8, i1 (%struct.acpi_subtable_header*, %struct.acpi_probe_entry*)*, %union.anon.74, i64 }
%struct.acpi_subtable_header = type { i8, i8 }
%union.anon.74 = type { i32 (%struct.acpi_table_header*)* }
%struct.acpi_table_header = type { [4 x i8], i32, i8, i8, [6 x i8], [8 x i8], i32, [4 x i8], i32 }
%struct.blocking_notifier_head = type { %struct.rw_semaphore, %struct.notifier_block* }
%struct.notifier_block = type { i32 (%struct.notifier_block*, i64, i8*)*, %struct.notifier_block*, i32 }
%struct.acpi_table_fadt = type <{ %struct.acpi_table_header, i32, i32, i8, i8, i16, i32, i8, i8, i8, i8, i32, i32, i32, i32, i32, i32, i32, i32, i8, i8, i8, i8, i8, i8, i8, i8, i16, i16, i16, i16, i8, i8, i8, i8, i8, i16, i8, i32, %struct.acpi_generic_address, i8, i16, i8, i64, i64, %struct.acpi_generic_address, %struct.acpi_generic_address, %struct.acpi_generic_address, %struct.acpi_generic_address, %struct.acpi_generic_address, %struct.acpi_generic_address, %struct.acpi_generic_address, %struct.acpi_generic_address, %struct.acpi_generic_address, %struct.acpi_generic_address, i64 }>
%struct.acpi_generic_address = type <{ i8, i8, i8, i8, i64 }>
%struct.kmem_cache = type opaque
%struct.acpi_device_physical_node = type { i32, %struct.list_head, %struct.device*, i8 }
%struct.acpi_device_bus_id = type { [15 x i8], i32, %struct.list_head }
%struct.acpi_hardware_id = type { %struct.list_head, i8* }
%struct.acpi_object_list = type { i32, %union.acpi_object* }
%struct.anon.66 = type { i32, i32, i8* }
%struct.resource_entry = type { %struct.list_head, %struct.resource*, i64, %struct.resource }
%struct.resource = type { i64, i64, i8*, i64, i64, %struct.resource*, %struct.resource*, %struct.resource* }
%struct.acpi_device_info = type { i32, i32, i32, i8, i16, i8, [4 x i8], [5 x i8], i64, %struct.acpi_pnp_device_id, %struct.acpi_pnp_device_id, %struct.acpi_pnp_device_id, %struct.acpi_pnp_device_id_list }
%struct.acpi_pnp_device_id = type { i32, i8* }
%struct.acpi_pnp_device_id_list = type { i32, i32, [0 x %struct.acpi_pnp_device_id] }
%struct.acpi_dep_data = type { %struct.list_head, i8*, i8* }
%struct.acpi_table_stao = type <{ %struct.acpi_table_header, i8 }>
%struct.acpi_table_spcr = type <{ %struct.acpi_table_header, i8, [3 x i8], %struct.acpi_generic_address, i8, i8, i32, i8, i8, i8, i8, i8, i8, i16, i16, i8, i8, i8, i32, i8, i32 }>
%union.acpi_subtable_headers = type { %struct.acpi_hmat_structure }
%struct.acpi_hmat_structure = type { i16, i16, i32 }
%struct.acpi_table_events_work = type { %struct.work_struct, i8*, i32 }
%struct.acpi_resource = type { i32, i32, %union.acpi_resource_data }
%union.acpi_resource_data = type { %struct.acpi_resource_vendor_typed, [40 x i8] }
%struct.acpi_resource_vendor_typed = type { i16, i8, [16 x i8], [1 x i8] }
%struct.platform_device = type opaque
%struct.property_entry = type { i8*, i64, i8, i32, %union.anon.75 }
%union.anon.75 = type { i8* }
%struct.acpi_handle_list = type { i32, [10 x i8*] }
%struct.anon.68 = type { i32, i32, %union.acpi_object* }
%struct.anon.69 = type { i32, i32, i8* }
%struct.anon.65 = type { i32, i64 }

@acpi_bus_id_list = dso_local global %struct.list_head { %struct.list_head* @acpi_bus_id_list, %struct.list_head* @acpi_bus_id_list }, align 8, !dbg !0
@acpi_device_lock = dso_local global %struct.mutex { %struct.atomic64_t zeroinitializer, %struct.spinlock undef, %struct.list_head { %struct.list_head* bitcast (i8* getelementptr (i8, i8* bitcast (%struct.mutex* @acpi_device_lock to i8*), i64 8) to %struct.list_head*), %struct.list_head* bitcast (i8* getelementptr (i8, i8* bitcast (%struct.mutex* @acpi_device_lock to i8*), i64 8) to %struct.list_head*) } }, align 8, !dbg !4368
@acpi_wakeup_device_list = dso_local global %struct.list_head { %struct.list_head* @acpi_wakeup_device_list, %struct.list_head* @acpi_wakeup_device_list }, align 8, !dbg !4370
@acpi_scan_lock = internal global %struct.mutex { %struct.atomic64_t zeroinitializer, %struct.spinlock undef, %struct.list_head { %struct.list_head* bitcast (i8* getelementptr (i8, i8* bitcast (%struct.mutex* @acpi_scan_lock to i8*), i64 8) to %struct.list_head*), %struct.list_head* bitcast (i8* getelementptr (i8, i8* bitcast (%struct.mutex* @acpi_scan_lock to i8*), i64 8) to %struct.list_head*) } }, align 8, !dbg !4424
@acpi_hp_context_lock = internal global %struct.mutex { %struct.atomic64_t zeroinitializer, %struct.spinlock undef, %struct.list_head { %struct.list_head* bitcast (i8* getelementptr (i8, i8* bitcast (%struct.mutex* @acpi_hp_context_lock to i8*), i64 8) to %struct.list_head*), %struct.list_head* bitcast (i8* getelementptr (i8, i8* bitcast (%struct.mutex* @acpi_hp_context_lock to i8*), i64 8) to %struct.list_head*) } }, align 8, !dbg !4426
@acpi_scan_handlers_list = internal global %struct.list_head { %struct.list_head* @acpi_scan_handlers_list, %struct.list_head* @acpi_scan_handlers_list }, align 8, !dbg !4428
@.str = private unnamed_addr constant [14 x i8] c"EVENT=offline\00", align 1
@__const.acpi_scan_is_offline.envp = private unnamed_addr constant [2 x i8*] [i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str, i32 0, i32 0), i8* null], align 16
@empty_zero_page = external dso_local global [512 x i64], align 16
@.str.1 = private unnamed_addr constant [3 x i8] c"\013\00", align 1
@.str.2 = private unnamed_addr constant [30 x i8] c"Unable to attach device data\0A\00", align 1
@acpi_device_add.__key = internal global %struct.lock_class_key zeroinitializer, align 1, !dbg !4372
@.str.3 = private unnamed_addr constant [28 x i8] c"&device->physical_node_lock\00", align 1
@.str.4 = private unnamed_addr constant [33 x i8] c"\013ACPI: Memory allocation error\0A\00", align 1
@.str.5 = private unnamed_addr constant [8 x i8] c"%s:%02x\00", align 1
@acpi_bus_type = external dso_local global %struct.bus_type, align 8
@.str.6 = private unnamed_addr constant [26 x i8] c"Error registering device\0A\00", align 1
@.str.7 = private unnamed_addr constant [54 x i8] c"\013ACPI: Error creating sysfs interface for device %s\0A\00", align 1
@__const.acpi_bus_get_ejd.buffer = private unnamed_addr constant %struct.acpi_buffer { i64 -1, i8* null }, align 8
@.str.8 = private unnamed_addr constant [5 x i8] c"_EJD\00", align 1
@.str.9 = private unnamed_addr constant [5 x i8] c"_GTF\00", align 1
@.str.10 = private unnamed_addr constant [5 x i8] c"_GTM\00", align 1
@.str.11 = private unnamed_addr constant [5 x i8] c"_STM\00", align 1
@.str.12 = private unnamed_addr constant [5 x i8] c"_SDD\00", align 1
@.str.13 = private unnamed_addr constant [5 x i8] c"_EJ0\00", align 1
@.str.14 = private unnamed_addr constant [8 x i8] c"PNP0C0A\00", align 1
@.str.15 = private unnamed_addr constant [5 x i8] c"_DCK\00", align 1
@.str.16 = private unnamed_addr constant [5 x i8] c"_DOD\00", align 1
@.str.17 = private unnamed_addr constant [5 x i8] c"_DOS\00", align 1
@.str.18 = private unnamed_addr constant [5 x i8] c"_ROM\00", align 1
@.str.19 = private unnamed_addr constant [5 x i8] c"_VPO\00", align 1
@.str.20 = private unnamed_addr constant [5 x i8] c"_GPD\00", align 1
@.str.21 = private unnamed_addr constant [5 x i8] c"_SPD\00", align 1
@dummy_hid = internal global i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.42, i32 0, i32 0), align 8, !dbg !4439
@.str.22 = private unnamed_addr constant [5 x i8] c"_DMA\00", align 1
@.str.23 = private unnamed_addr constant [5 x i8] c"_CRS\00", align 1
@.str.24 = private unnamed_addr constant [3 x i8] c"\014\00", align 1
@.str.25 = private unnamed_addr constant [39 x i8] c"_DMA is valid only if _CRS is present\0A\00", align 1
@.str.26 = private unnamed_addr constant [54 x i8] c"Can't handle multiple windows with different offsets\0A\00", align 1
@dma_dummy_ops = external dso_local constant %struct.dma_map_ops, align 8
@acpi_device_fwnode_ops = external dso_local constant %struct.fwnode_operations, align 8
@acpi_dep_list_lock = internal global %struct.mutex { %struct.atomic64_t zeroinitializer, %struct.spinlock undef, %struct.list_head { %struct.list_head* bitcast (i8* getelementptr (i8, i8* bitcast (%struct.mutex* @acpi_dep_list_lock to i8*), i64 8) to %struct.list_head*), %struct.list_head* bitcast (i8* getelementptr (i8, i8* bitcast (%struct.mutex* @acpi_dep_list_lock to i8*), i64 8) to %struct.list_head*) } }, align 8, !dbg !4451
@acpi_dep_list = internal global %struct.list_head { %struct.list_head* @acpi_dep_list, %struct.list_head* @acpi_dep_list }, align 8, !dbg !4453
@generic_device_handler = internal global %struct.acpi_scan_handler { %struct.acpi_device_id* getelementptr inbounds ([2 x %struct.acpi_device_id], [2 x %struct.acpi_device_id]* @generic_device_ids, i32 0, i32 0), %struct.list_head zeroinitializer, i1 (i8*, %struct.acpi_device_id**)* null, i32 (%struct.acpi_device*, %struct.acpi_device_id*)* @acpi_generic_device_attach, void (%struct.acpi_device*)* null, void (%struct.device*)* null, void (%struct.device*)* null, %struct.acpi_hotplug_profile zeroinitializer }, align 8, !dbg !4464
@.str.27 = private unnamed_addr constant [5 x i8] c"STAO\00", align 1
@.str.28 = private unnamed_addr constant [43 x i8] c"\016ACPI: STAO Name List not yet supported.\0A\00", align 1
@acpi_root = external dso_local global %struct.acpi_device*, align 8
@acpi_gbl_reduced_hardware = external dso_local global i8, align 1
@acpi_scan_initialized = internal global i8 0, align 1, !dbg !4377
@acpi_disabled = external dso_local global i32, align 4
@acpi_probe_mutex = internal global %struct.mutex { %struct.atomic64_t zeroinitializer, %struct.spinlock undef, %struct.list_head { %struct.list_head* bitcast (i8* getelementptr (i8, i8* bitcast (%struct.mutex* @acpi_probe_mutex to i8*), i64 8) to %struct.list_head*), %struct.list_head* bitcast (i8* getelementptr (i8, i8* bitcast (%struct.mutex* @acpi_probe_mutex to i8*), i64 8) to %struct.list_head*) } }, align 8, !dbg !4468
@ape = internal global %struct.acpi_probe_entry* null, align 8, !dbg !4379
@.str.29 = private unnamed_addr constant [5 x i8] c"APIC\00", align 1
@acpi_probe_count = internal global i32 0, align 4, !dbg !4422
@acpi_reconfig_chain = internal global %struct.blocking_notifier_head { %struct.rw_semaphore { %struct.atomic64_t zeroinitializer, %struct.atomic64_t zeroinitializer, %struct.raw_spinlock undef, %struct.list_head { %struct.list_head* bitcast (i8* getelementptr (i8, i8* bitcast (%struct.blocking_notifier_head* @acpi_reconfig_chain to i8*), i64 16) to %struct.list_head*), %struct.list_head* bitcast (i8* getelementptr (i8, i8* bitcast (%struct.blocking_notifier_head* @acpi_reconfig_chain to i8*), i64 16) to %struct.list_head*) } }, %struct.notifier_block* null }, align 8, !dbg !4470
@.str.30 = private unnamed_addr constant [16 x i8] c"Eject disabled\0A\00", align 1
@.str.31 = private unnamed_addr constant [24 x i8] c"Namespace scan failure\0A\00", align 1
@.str.32 = private unnamed_addr constant [19 x i8] c"Still not present\0A\00", align 1
@.str.33 = private unnamed_addr constant [20 x i8] c"Already enumerated\0A\00", align 1
@.str.34 = private unnamed_addr constant [21 x i8] c"Enumeration failure\0A\00", align 1
@.str.35 = private unnamed_addr constant [5 x i8] c"_STA\00", align 1
@.str.36 = private unnamed_addr constant [40 x i8] c"Status check after eject failed (0x%x)\0A\00", align 1
@.str.37 = private unnamed_addr constant [34 x i8] c"Eject incomplete - status 0x%llx\0A\00", align 1
@.str.38 = private unnamed_addr constant [19 x i8] c"Offline disabled.\0A\00", align 1
@.str.39 = private unnamed_addr constant [17 x i8] c"Offline failed.\0A\00", align 1
@acpi_scan_drop_device.work = internal global %struct.work_struct { %struct.atomic64_t { i64 68719476704 }, %struct.list_head { %struct.list_head* bitcast (i8* getelementptr (i8, i8* bitcast (%struct.work_struct* @acpi_scan_drop_device.work to i8*), i64 8) to %struct.list_head*), %struct.list_head* bitcast (i8* getelementptr (i8, i8* bitcast (%struct.work_struct* @acpi_scan_drop_device.work to i8*), i64 8) to %struct.list_head*) }, void (%struct.work_struct*)* @acpi_device_del_work_fn }, align 8, !dbg !4430
@acpi_device_del_lock = internal global %struct.mutex { %struct.atomic64_t zeroinitializer, %struct.spinlock undef, %struct.list_head { %struct.list_head* bitcast (i8* getelementptr (i8, i8* bitcast (%struct.mutex* @acpi_device_del_lock to i8*), i64 8) to %struct.list_head*), %struct.list_head* bitcast (i8* getelementptr (i8, i8* bitcast (%struct.mutex* @acpi_device_del_lock to i8*), i64 8) to %struct.list_head*) } }, align 8, !dbg !4435
@acpi_device_del_list = internal global %struct.list_head { %struct.list_head* @acpi_device_del_list, %struct.list_head* @acpi_device_del_list }, align 8, !dbg !4437
@.str.40 = private unnamed_addr constant [5 x i8] c"_BCM\00", align 1
@.str.41 = private unnamed_addr constant [5 x i8] c"_BCL\00", align 1
@.str.42 = private unnamed_addr constant [7 x i8] c"device\00", align 1
@__const.acpi_device_get_busid.bus_id = private unnamed_addr constant [5 x i8] c"?\00\00\00\00", align 1
@.str.43 = private unnamed_addr constant [5 x i8] c"ACPI\00", align 1
@.str.44 = private unnamed_addr constant [5 x i8] c"PWRF\00", align 1
@.str.45 = private unnamed_addr constant [5 x i8] c"SLPF\00", align 1
@.str.46 = private unnamed_addr constant [5 x i8] c"ECDT\00", align 1
@.str.47 = private unnamed_addr constant [9 x i8] c"LNXSYSTM\00", align 1
@.str.48 = private unnamed_addr constant [39 x i8] c"\013ACPI: %s: Error reading device info\0A\00", align 1
@__func__.acpi_set_pnp_ids = private unnamed_addr constant [17 x i8] c"acpi_set_pnp_ids\00", align 1
@.str.49 = private unnamed_addr constant [9 x i8] c"LNXVIDEO\00", align 1
@.str.50 = private unnamed_addr constant [9 x i8] c"LNXIOBAY\00", align 1
@.str.51 = private unnamed_addr constant [8 x i8] c"LNXDOCK\00", align 1
@.str.52 = private unnamed_addr constant [9 x i8] c"SMBUSIBM\00", align 1
@.str.53 = private unnamed_addr constant [9 x i8] c"LNXSYBUS\00", align 1
@.str.54 = private unnamed_addr constant [11 x i8] c"System Bus\00", align 1
@.str.55 = private unnamed_addr constant [11 x i8] c"system_bus\00", align 1
@.str.56 = private unnamed_addr constant [9 x i8] c"LNXPOWER\00", align 1
@.str.57 = private unnamed_addr constant [7 x i8] c"LNXCPU\00", align 1
@.str.58 = private unnamed_addr constant [9 x i8] c"LNXTHERM\00", align 1
@.str.59 = private unnamed_addr constant [9 x i8] c"LNXPWRBN\00", align 1
@.str.60 = private unnamed_addr constant [9 x i8] c"LNXSLPBN\00", align 1
@.str.61 = private unnamed_addr constant [6 x i8] c"LNXEC\00", align 1
@.str.62 = private unnamed_addr constant [4 x i8] c"IBM\00", align 1
@.str.63 = private unnamed_addr constant [5 x i8] c"SMBS\00", align 1
@.str.64 = private unnamed_addr constant [4 x i8] c"SBI\00", align 1
@.str.65 = private unnamed_addr constant [4 x i8] c"SBR\00", align 1
@.str.66 = private unnamed_addr constant [4 x i8] c"SBW\00", align 1
@.str.67 = private unnamed_addr constant [5 x i8] c"\\_SB\00", align 1
@.str.68 = private unnamed_addr constant [5 x i8] c"\\_TZ\00", align 1
@.str.69 = private unnamed_addr constant [5 x i8] c"_RMV\00", align 1
@acpi_device_enumeration_by_parent.i2c_multi_instantiate_ids = internal constant [5 x %struct.acpi_device_id] [%struct.acpi_device_id { [9 x i8] c"BSG1160\00\00", i64 0, i32 0, i32 0 }, %struct.acpi_device_id { [9 x i8] c"BSG2150\00\00", i64 0, i32 0, i32 0 }, %struct.acpi_device_id { [9 x i8] c"INT33FE\00\00", i64 0, i32 0, i32 0 }, %struct.acpi_device_id { [9 x i8] c"INT3515\00\00", i64 0, i32 0, i32 0 }, %struct.acpi_device_id zeroinitializer], align 16, !dbg !4441
@x86_apple_machine = external dso_local global i8, align 1
@.str.70 = private unnamed_addr constant [14 x i8] c"spiSclkPeriod\00", align 1
@.str.71 = private unnamed_addr constant [11 x i8] c"i2cAddress\00", align 1
@.str.72 = private unnamed_addr constant [5 x i8] c"baud\00", align 1
@acpi_is_indirect_io_slave.indirect_io_hosts = internal constant [2 x %struct.acpi_device_id] [%struct.acpi_device_id { [9 x i8] c"HISI0191\00", i64 0, i32 0, i32 0 }, %struct.acpi_device_id zeroinitializer], align 16, !dbg !4447
@.str.73 = private unnamed_addr constant [5 x i8] c"_CCA\00", align 1
@spcr_uart_addr = internal global i64 0, align 8, !dbg !4455
@.str.74 = private unnamed_addr constant [3 x i8] c"\016\00", align 1
@.str.75 = private unnamed_addr constant [51 x i8] c"The UART device @%pa in SPCR table will be hidden\0A\00", align 1
@.str.76 = private unnamed_addr constant [5 x i8] c"_DEP\00", align 1
@.str.77 = private unnamed_addr constant [8 x i8] c"INT3396\00", align 1
@__const.acpi_add_single_object.buffer = private unnamed_addr constant %struct.acpi_buffer { i64 -1, i8* null }, align 8
@.str.78 = private unnamed_addr constant [5 x i8] c"_PS0\00", align 1
@.str.79 = private unnamed_addr constant [5 x i8] c"_PR0\00", align 1
@.str.80 = private unnamed_addr constant [5 x i8] c"_PSC\00", align 1
@.str.81 = private unnamed_addr constant [5 x i8] c"_IRC\00", align 1
@.str.82 = private unnamed_addr constant [5 x i8] c"_DSW\00", align 1
@__const.acpi_bus_init_power_state.buffer = private unnamed_addr constant %struct.acpi_buffer { i64 -1, i8* null }, align 8
@.str.83 = private unnamed_addr constant [5 x i8] c"_PRW\00", align 1
@.str.84 = private unnamed_addr constant [27 x i8] c"_PRW evaluation error: %d\0A\00", align 1
@__const.acpi_bus_extract_wakeup_device_power_package.buffer = private unnamed_addr constant %struct.acpi_buffer { i64 -1, i8* null }, align 8
@_acpi_module_name = internal constant [5 x i8] c"scan\00", align 1, !dbg !4457
@.str.85 = private unnamed_addr constant [16 x i8] c"Evaluating _PRW\00", align 1
@.str.86 = private unnamed_addr constant [60 x i8] c"Retrieving current states of wakeup power resources failed\0A\00", align 1
@.str.87 = private unnamed_addr constant [63 x i8] c"Overriding _PRW sleep state (S%d) by S%d from power resources\0A\00", align 1
@acpi_wakeup_gpe_init.button_device_ids = internal constant [4 x %struct.acpi_device_id] [%struct.acpi_device_id { [9 x i8] c"PNP0C0C\00\00", i64 0, i32 0, i32 0 }, %struct.acpi_device_id { [9 x i8] c"PNP0C0D\00\00", i64 0, i32 0, i32 0 }, %struct.acpi_device_id { [9 x i8] c"PNP0C0E\00\00", i64 0, i32 0, i32 0 }, %struct.acpi_device_id zeroinitializer], align 16, !dbg !4460
@generic_device_ids = internal constant [2 x %struct.acpi_device_id] [%struct.acpi_device_id { [9 x i8] c"PRP0001\00\00", i64 0, i32 0, i32 0 }, %struct.acpi_device_id zeroinitializer], align 16, !dbg !4466
@.str.88 = private unnamed_addr constant [5 x i8] c"SPCR\00", align 1
@.str.89 = private unnamed_addr constant [49 x i8] c"\014ACPI: STAO table present, but SPCR is missing\0A\00", align 1
@acpi_gbl_FADT = external dso_local global %struct.acpi_table_fadt, align 1
@kmalloc_caches = external dso_local global [3 x [14 x %struct.kmem_cache*]], align 16
@.str.90 = private unnamed_addr constant [21 x i8] c"include/linux/slab.h\00", align 1
@system_wq = external dso_local global %struct.workqueue_struct*, align 8

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @acpi_scan_lock_acquire() #0 !dbg !4492 {
entry:
  call void @mutex_lock(%struct.mutex* @acpi_scan_lock) #9, !dbg !4493
  ret void, !dbg !4494
}

; Function Attrs: noredzone
declare dso_local void @mutex_lock(%struct.mutex*) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @acpi_scan_lock_release() #0 !dbg !4495 {
entry:
  call void @mutex_unlock(%struct.mutex* @acpi_scan_lock) #9, !dbg !4496
  ret void, !dbg !4497
}

; Function Attrs: noredzone
declare dso_local void @mutex_unlock(%struct.mutex*) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @acpi_lock_hp_context() #0 !dbg !4498 {
entry:
  call void @mutex_lock(%struct.mutex* @acpi_hp_context_lock) #9, !dbg !4499
  ret void, !dbg !4500
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @acpi_unlock_hp_context() #0 !dbg !4501 {
entry:
  call void @mutex_unlock(%struct.mutex* @acpi_hp_context_lock) #9, !dbg !4502
  ret void, !dbg !4503
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @acpi_initialize_hp_context(%struct.acpi_device* %adev, %struct.acpi_hotplug_context* %hp, i32 (%struct.acpi_device*, i32)* %notify, void (%struct.acpi_device*, i32)* %uevent) #0 !dbg !4504 {
entry:
  %adev.addr = alloca %struct.acpi_device*, align 8
  %hp.addr = alloca %struct.acpi_hotplug_context*, align 8
  %notify.addr = alloca i32 (%struct.acpi_device*, i32)*, align 8
  %uevent.addr = alloca void (%struct.acpi_device*, i32)*, align 8
  store %struct.acpi_device* %adev, %struct.acpi_device** %adev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.acpi_device** %adev.addr, metadata !4507, metadata !DIExpression()), !dbg !4508
  store %struct.acpi_hotplug_context* %hp, %struct.acpi_hotplug_context** %hp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.acpi_hotplug_context** %hp.addr, metadata !4509, metadata !DIExpression()), !dbg !4510
  store i32 (%struct.acpi_device*, i32)* %notify, i32 (%struct.acpi_device*, i32)** %notify.addr, align 8
  call void @llvm.dbg.declare(metadata i32 (%struct.acpi_device*, i32)** %notify.addr, metadata !4511, metadata !DIExpression()), !dbg !4512
  store void (%struct.acpi_device*, i32)* %uevent, void (%struct.acpi_device*, i32)** %uevent.addr, align 8
  call void @llvm.dbg.declare(metadata void (%struct.acpi_device*, i32)** %uevent.addr, metadata !4513, metadata !DIExpression()), !dbg !4514
  call void @acpi_lock_hp_context() #9, !dbg !4515
  %0 = load i32 (%struct.acpi_device*, i32)*, i32 (%struct.acpi_device*, i32)** %notify.addr, align 8, !dbg !4516
  %1 = load %struct.acpi_hotplug_context*, %struct.acpi_hotplug_context** %hp.addr, align 8, !dbg !4517
  %notify1 = getelementptr inbounds %struct.acpi_hotplug_context, %struct.acpi_hotplug_context* %1, i32 0, i32 1, !dbg !4518
  store i32 (%struct.acpi_device*, i32)* %0, i32 (%struct.acpi_device*, i32)** %notify1, align 8, !dbg !4519
  %2 = load void (%struct.acpi_device*, i32)*, void (%struct.acpi_device*, i32)** %uevent.addr, align 8, !dbg !4520
  %3 = load %struct.acpi_hotplug_context*, %struct.acpi_hotplug_context** %hp.addr, align 8, !dbg !4521
  %uevent2 = getelementptr inbounds %struct.acpi_hotplug_context, %struct.acpi_hotplug_context* %3, i32 0, i32 2, !dbg !4522
  store void (%struct.acpi_device*, i32)* %2, void (%struct.acpi_device*, i32)** %uevent2, align 8, !dbg !4523
  %4 = load %struct.acpi_device*, %struct.acpi_device** %adev.addr, align 8, !dbg !4524
  %5 = load %struct.acpi_hotplug_context*, %struct.acpi_hotplug_context** %hp.addr, align 8, !dbg !4525
  call void @acpi_set_hp_context(%struct.acpi_device* %4, %struct.acpi_hotplug_context* %5) #9, !dbg !4526
  call void @acpi_unlock_hp_context() #9, !dbg !4527
  ret void, !dbg !4528
}

; Function Attrs: nounwind readnone speculatable willreturn
declare void @llvm.dbg.declare(metadata, metadata, metadata) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @acpi_set_hp_context(%struct.acpi_device* %adev, %struct.acpi_hotplug_context* %hp) #0 !dbg !4529 {
entry:
  %adev.addr = alloca %struct.acpi_device*, align 8
  %hp.addr = alloca %struct.acpi_hotplug_context*, align 8
  store %struct.acpi_device* %adev, %struct.acpi_device** %adev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.acpi_device** %adev.addr, metadata !4532, metadata !DIExpression()), !dbg !4533
  store %struct.acpi_hotplug_context* %hp, %struct.acpi_hotplug_context** %hp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.acpi_hotplug_context** %hp.addr, metadata !4534, metadata !DIExpression()), !dbg !4535
  %0 = load %struct.acpi_device*, %struct.acpi_device** %adev.addr, align 8, !dbg !4536
  %1 = load %struct.acpi_hotplug_context*, %struct.acpi_hotplug_context** %hp.addr, align 8, !dbg !4537
  %self = getelementptr inbounds %struct.acpi_hotplug_context, %struct.acpi_hotplug_context* %1, i32 0, i32 0, !dbg !4538
  store %struct.acpi_device* %0, %struct.acpi_device** %self, align 8, !dbg !4539
  %2 = load %struct.acpi_hotplug_context*, %struct.acpi_hotplug_context** %hp.addr, align 8, !dbg !4540
  %3 = load %struct.acpi_device*, %struct.acpi_device** %adev.addr, align 8, !dbg !4541
  %hp1 = getelementptr inbounds %struct.acpi_device, %struct.acpi_device* %3, i32 0, i32 17, !dbg !4542
  store %struct.acpi_hotplug_context* %2, %struct.acpi_hotplug_context** %hp1, align 8, !dbg !4543
  ret void, !dbg !4544
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @acpi_scan_add_handler(%struct.acpi_scan_handler* %handler) #0 !dbg !4545 {
entry:
  %retval = alloca i32, align 4
  %handler.addr = alloca %struct.acpi_scan_handler*, align 8
  store %struct.acpi_scan_handler* %handler, %struct.acpi_scan_handler** %handler.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.acpi_scan_handler** %handler.addr, metadata !4548, metadata !DIExpression()), !dbg !4549
  %0 = load %struct.acpi_scan_handler*, %struct.acpi_scan_handler** %handler.addr, align 8, !dbg !4550
  %tobool = icmp ne %struct.acpi_scan_handler* %0, null, !dbg !4550
  br i1 %tobool, label %if.end, label %if.then, !dbg !4552

if.then:                                          ; preds = %entry
  store i32 -22, i32* %retval, align 4, !dbg !4553
  br label %return, !dbg !4553

if.end:                                           ; preds = %entry
  %1 = load %struct.acpi_scan_handler*, %struct.acpi_scan_handler** %handler.addr, align 8, !dbg !4554
  %list_node = getelementptr inbounds %struct.acpi_scan_handler, %struct.acpi_scan_handler* %1, i32 0, i32 1, !dbg !4555
  call void @list_add_tail(%struct.list_head* %list_node, %struct.list_head* @acpi_scan_handlers_list) #9, !dbg !4556
  store i32 0, i32* %retval, align 4, !dbg !4557
  br label %return, !dbg !4557

return:                                           ; preds = %if.end, %if.then
  %2 = load i32, i32* %retval, align 4, !dbg !4558
  ret i32 %2, !dbg !4558
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @list_add_tail(%struct.list_head* %new, %struct.list_head* %head) #0 !dbg !4559 {
entry:
  %new.addr = alloca %struct.list_head*, align 8
  %head.addr = alloca %struct.list_head*, align 8
  store %struct.list_head* %new, %struct.list_head** %new.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %new.addr, metadata !4563, metadata !DIExpression()), !dbg !4564
  store %struct.list_head* %head, %struct.list_head** %head.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %head.addr, metadata !4565, metadata !DIExpression()), !dbg !4566
  %0 = load %struct.list_head*, %struct.list_head** %new.addr, align 8, !dbg !4567
  %1 = load %struct.list_head*, %struct.list_head** %head.addr, align 8, !dbg !4568
  %prev = getelementptr inbounds %struct.list_head, %struct.list_head* %1, i32 0, i32 1, !dbg !4569
  %2 = load %struct.list_head*, %struct.list_head** %prev, align 8, !dbg !4569
  %3 = load %struct.list_head*, %struct.list_head** %head.addr, align 8, !dbg !4570
  call void @__list_add(%struct.list_head* %0, %struct.list_head* %2, %struct.list_head* %3) #9, !dbg !4571
  ret void, !dbg !4572
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @acpi_scan_add_handler_with_hotplug(%struct.acpi_scan_handler* %handler, i8* %hotplug_profile_name) #0 !dbg !4573 {
entry:
  %retval = alloca i32, align 4
  %handler.addr = alloca %struct.acpi_scan_handler*, align 8
  %hotplug_profile_name.addr = alloca i8*, align 8
  %error = alloca i32, align 4
  store %struct.acpi_scan_handler* %handler, %struct.acpi_scan_handler** %handler.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.acpi_scan_handler** %handler.addr, metadata !4576, metadata !DIExpression()), !dbg !4577
  store i8* %hotplug_profile_name, i8** %hotplug_profile_name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %hotplug_profile_name.addr, metadata !4578, metadata !DIExpression()), !dbg !4579
  call void @llvm.dbg.declare(metadata i32* %error, metadata !4580, metadata !DIExpression()), !dbg !4581
  %0 = load %struct.acpi_scan_handler*, %struct.acpi_scan_handler** %handler.addr, align 8, !dbg !4582
  %call = call i32 @acpi_scan_add_handler(%struct.acpi_scan_handler* %0) #9, !dbg !4583
  store i32 %call, i32* %error, align 4, !dbg !4584
  %1 = load i32, i32* %error, align 4, !dbg !4585
  %tobool = icmp ne i32 %1, 0, !dbg !4585
  br i1 %tobool, label %if.then, label %if.end, !dbg !4587

if.then:                                          ; preds = %entry
  %2 = load i32, i32* %error, align 4, !dbg !4588
  store i32 %2, i32* %retval, align 4, !dbg !4589
  br label %return, !dbg !4589

if.end:                                           ; preds = %entry
  %3 = load %struct.acpi_scan_handler*, %struct.acpi_scan_handler** %handler.addr, align 8, !dbg !4590
  %hotplug = getelementptr inbounds %struct.acpi_scan_handler, %struct.acpi_scan_handler* %3, i32 0, i32 7, !dbg !4591
  %4 = load i8*, i8** %hotplug_profile_name.addr, align 8, !dbg !4592
  call void @acpi_sysfs_add_hotplug_profile(%struct.acpi_hotplug_profile* %hotplug, i8* %4) #9, !dbg !4593
  store i32 0, i32* %retval, align 4, !dbg !4594
  br label %return, !dbg !4594

return:                                           ; preds = %if.end, %if.then
  %5 = load i32, i32* %retval, align 4, !dbg !4595
  ret i32 %5, !dbg !4595
}

; Function Attrs: noredzone
declare dso_local void @acpi_sysfs_add_hotplug_profile(%struct.acpi_hotplug_profile*, i8*) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local zeroext i1 @acpi_scan_is_offline(%struct.acpi_device* %adev, i1 zeroext %uevent) #0 !dbg !4596 {
entry:
  %adev.addr = alloca %struct.acpi_device*, align 8
  %uevent.addr = alloca i8, align 1
  %pn = alloca %struct.acpi_device_physical_node*, align 8
  %offline = alloca i8, align 1
  %envp = alloca [2 x i8*], align 16
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.acpi_device_physical_node*, align 8
  %__mptr8 = alloca i8*, align 8
  %tmp13 = alloca %struct.acpi_device_physical_node*, align 8
  store %struct.acpi_device* %adev, %struct.acpi_device** %adev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.acpi_device** %adev.addr, metadata !4599, metadata !DIExpression()), !dbg !4600
  %frombool = zext i1 %uevent to i8
  store i8 %frombool, i8* %uevent.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %uevent.addr, metadata !4601, metadata !DIExpression()), !dbg !4602
  call void @llvm.dbg.declare(metadata %struct.acpi_device_physical_node** %pn, metadata !4603, metadata !DIExpression()), !dbg !4604
  call void @llvm.dbg.declare(metadata i8* %offline, metadata !4605, metadata !DIExpression()), !dbg !4606
  store i8 1, i8* %offline, align 1, !dbg !4606
  call void @llvm.dbg.declare(metadata [2 x i8*]* %envp, metadata !4607, metadata !DIExpression()), !dbg !4609
  %0 = bitcast [2 x i8*]* %envp to i8*, !dbg !4609
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %0, i8* align 16 bitcast ([2 x i8*]* @__const.acpi_scan_is_offline.envp to i8*), i64 16, i1 false), !dbg !4609
  %1 = load %struct.acpi_device*, %struct.acpi_device** %adev.addr, align 8, !dbg !4610
  %physical_node_lock = getelementptr inbounds %struct.acpi_device, %struct.acpi_device* %1, i32 0, i32 25, !dbg !4610
  call void @mutex_lock(%struct.mutex* %physical_node_lock) #9, !dbg !4610
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !4611, metadata !DIExpression()), !dbg !4614
  %2 = load %struct.acpi_device*, %struct.acpi_device** %adev.addr, align 8, !dbg !4614
  %physical_node_list = getelementptr inbounds %struct.acpi_device, %struct.acpi_device* %2, i32 0, i32 24, !dbg !4614
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %physical_node_list, i32 0, i32 0, !dbg !4614
  %3 = load %struct.list_head*, %struct.list_head** %next, align 8, !dbg !4614
  %4 = bitcast %struct.list_head* %3 to i8*, !dbg !4614
  store i8* %4, i8** %__mptr, align 8, !dbg !4614
  br label %do.body, !dbg !4614

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !4615

do.end:                                           ; preds = %do.body
  %5 = load i8*, i8** %__mptr, align 8, !dbg !4614
  %add.ptr = getelementptr i8, i8* %5, i64 -8, !dbg !4614
  %6 = bitcast i8* %add.ptr to %struct.acpi_device_physical_node*, !dbg !4614
  store %struct.acpi_device_physical_node* %6, %struct.acpi_device_physical_node** %tmp, align 8, !dbg !4615
  %7 = load %struct.acpi_device_physical_node*, %struct.acpi_device_physical_node** %tmp, align 8, !dbg !4614
  store %struct.acpi_device_physical_node* %7, %struct.acpi_device_physical_node** %pn, align 8, !dbg !4617
  br label %for.cond, !dbg !4617

for.cond:                                         ; preds = %do.end12, %do.end
  %8 = load %struct.acpi_device_physical_node*, %struct.acpi_device_physical_node** %pn, align 8, !dbg !4618
  %node = getelementptr inbounds %struct.acpi_device_physical_node, %struct.acpi_device_physical_node* %8, i32 0, i32 1, !dbg !4618
  %9 = load %struct.acpi_device*, %struct.acpi_device** %adev.addr, align 8, !dbg !4618
  %physical_node_list1 = getelementptr inbounds %struct.acpi_device, %struct.acpi_device* %9, i32 0, i32 24, !dbg !4618
  %cmp = icmp eq %struct.list_head* %node, %physical_node_list1, !dbg !4618
  %lnot = xor i1 %cmp, true, !dbg !4618
  br i1 %lnot, label %for.body, label %for.end, !dbg !4617

for.body:                                         ; preds = %for.cond
  %10 = load %struct.acpi_device_physical_node*, %struct.acpi_device_physical_node** %pn, align 8, !dbg !4620
  %dev = getelementptr inbounds %struct.acpi_device_physical_node, %struct.acpi_device_physical_node* %10, i32 0, i32 2, !dbg !4622
  %11 = load %struct.device*, %struct.device** %dev, align 8, !dbg !4622
  %call = call zeroext i1 @device_supports_offline(%struct.device* %11) #9, !dbg !4623
  br i1 %call, label %land.lhs.true, label %if.end7, !dbg !4624

land.lhs.true:                                    ; preds = %for.body
  %12 = load %struct.acpi_device_physical_node*, %struct.acpi_device_physical_node** %pn, align 8, !dbg !4625
  %dev2 = getelementptr inbounds %struct.acpi_device_physical_node, %struct.acpi_device_physical_node* %12, i32 0, i32 2, !dbg !4626
  %13 = load %struct.device*, %struct.device** %dev2, align 8, !dbg !4626
  %offline3 = getelementptr inbounds %struct.device, %struct.device* %13, i32 0, i32 34, !dbg !4627
  %bf.load = load i8, i8* %offline3, align 8, !dbg !4627
  %bf.lshr = lshr i8 %bf.load, 1, !dbg !4627
  %bf.clear = and i8 %bf.lshr, 1, !dbg !4627
  %bf.cast = trunc i8 %bf.clear to i1, !dbg !4627
  br i1 %bf.cast, label %if.end7, label %if.then, !dbg !4628

if.then:                                          ; preds = %land.lhs.true
  %14 = load i8, i8* %uevent.addr, align 1, !dbg !4629
  %tobool = trunc i8 %14 to i1, !dbg !4629
  br i1 %tobool, label %if.then4, label %if.end, !dbg !4632

if.then4:                                         ; preds = %if.then
  %15 = load %struct.acpi_device_physical_node*, %struct.acpi_device_physical_node** %pn, align 8, !dbg !4633
  %dev5 = getelementptr inbounds %struct.acpi_device_physical_node, %struct.acpi_device_physical_node* %15, i32 0, i32 2, !dbg !4634
  %16 = load %struct.device*, %struct.device** %dev5, align 8, !dbg !4634
  %kobj = getelementptr inbounds %struct.device, %struct.device* %16, i32 0, i32 0, !dbg !4635
  %arraydecay = getelementptr inbounds [2 x i8*], [2 x i8*]* %envp, i64 0, i64 0, !dbg !4636
  %call6 = call i32 @kobject_uevent_env(%struct.kobject* %kobj, i32 2, i8** %arraydecay) #9, !dbg !4637
  br label %if.end, !dbg !4637

if.end:                                           ; preds = %if.then4, %if.then
  store i8 0, i8* %offline, align 1, !dbg !4638
  br label %for.end, !dbg !4639

if.end7:                                          ; preds = %land.lhs.true, %for.body
  br label %for.inc, !dbg !4627

for.inc:                                          ; preds = %if.end7
  call void @llvm.dbg.declare(metadata i8** %__mptr8, metadata !4640, metadata !DIExpression()), !dbg !4642
  %17 = load %struct.acpi_device_physical_node*, %struct.acpi_device_physical_node** %pn, align 8, !dbg !4642
  %node9 = getelementptr inbounds %struct.acpi_device_physical_node, %struct.acpi_device_physical_node* %17, i32 0, i32 1, !dbg !4642
  %next10 = getelementptr inbounds %struct.list_head, %struct.list_head* %node9, i32 0, i32 0, !dbg !4642
  %18 = load %struct.list_head*, %struct.list_head** %next10, align 8, !dbg !4642
  %19 = bitcast %struct.list_head* %18 to i8*, !dbg !4642
  store i8* %19, i8** %__mptr8, align 8, !dbg !4642
  br label %do.body11, !dbg !4642

do.body11:                                        ; preds = %for.inc
  br label %do.end12, !dbg !4643

do.end12:                                         ; preds = %do.body11
  %20 = load i8*, i8** %__mptr8, align 8, !dbg !4642
  %add.ptr14 = getelementptr i8, i8* %20, i64 -8, !dbg !4642
  %21 = bitcast i8* %add.ptr14 to %struct.acpi_device_physical_node*, !dbg !4642
  store %struct.acpi_device_physical_node* %21, %struct.acpi_device_physical_node** %tmp13, align 8, !dbg !4643
  %22 = load %struct.acpi_device_physical_node*, %struct.acpi_device_physical_node** %tmp13, align 8, !dbg !4642
  store %struct.acpi_device_physical_node* %22, %struct.acpi_device_physical_node** %pn, align 8, !dbg !4618
  br label %for.cond, !dbg !4618, !llvm.loop !4645

for.end:                                          ; preds = %if.end, %for.cond
  %23 = load %struct.acpi_device*, %struct.acpi_device** %adev.addr, align 8, !dbg !4647
  %physical_node_lock15 = getelementptr inbounds %struct.acpi_device, %struct.acpi_device* %23, i32 0, i32 25, !dbg !4648
  call void @mutex_unlock(%struct.mutex* %physical_node_lock15) #9, !dbg !4649
  %24 = load i8, i8* %offline, align 1, !dbg !4650
  %tobool16 = trunc i8 %24 to i1, !dbg !4650
  ret i1 %tobool16, !dbg !4651
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* noalias nocapture writeonly, i8* noalias nocapture readonly, i64, i1 immarg) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @device_supports_offline(%struct.device* %dev) #0 !dbg !4652 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !4655, metadata !DIExpression()), !dbg !4656
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !4657
  %bus = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 5, !dbg !4658
  %1 = load %struct.bus_type*, %struct.bus_type** %bus, align 8, !dbg !4658
  %tobool = icmp ne %struct.bus_type* %1, null, !dbg !4657
  br i1 %tobool, label %land.lhs.true, label %land.end, !dbg !4659

land.lhs.true:                                    ; preds = %entry
  %2 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !4660
  %bus1 = getelementptr inbounds %struct.device, %struct.device* %2, i32 0, i32 5, !dbg !4661
  %3 = load %struct.bus_type*, %struct.bus_type** %bus1, align 8, !dbg !4661
  %offline = getelementptr inbounds %struct.bus_type, %struct.bus_type* %3, i32 0, i32 13, !dbg !4662
  %4 = load i32 (%struct.device*)*, i32 (%struct.device*)** %offline, align 8, !dbg !4662
  %tobool2 = icmp ne i32 (%struct.device*)* %4, null, !dbg !4660
  br i1 %tobool2, label %land.rhs, label %land.end, !dbg !4663

land.rhs:                                         ; preds = %land.lhs.true
  %5 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !4664
  %bus3 = getelementptr inbounds %struct.device, %struct.device* %5, i32 0, i32 5, !dbg !4665
  %6 = load %struct.bus_type*, %struct.bus_type** %bus3, align 8, !dbg !4665
  %online = getelementptr inbounds %struct.bus_type, %struct.bus_type* %6, i32 0, i32 12, !dbg !4666
  %7 = load i32 (%struct.device*)*, i32 (%struct.device*)** %online, align 8, !dbg !4666
  %tobool4 = icmp ne i32 (%struct.device*)* %7, null, !dbg !4663
  br label %land.end

land.end:                                         ; preds = %land.rhs, %land.lhs.true, %entry
  %8 = phi i1 [ false, %land.lhs.true ], [ false, %entry ], [ %tobool4, %land.rhs ], !dbg !4667
  ret i1 %8, !dbg !4668
}

; Function Attrs: noredzone
declare dso_local i32 @kobject_uevent_env(%struct.kobject*, i32, i8**) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @acpi_device_hotplug(%struct.acpi_device* %adev, i32 %src) #0 !dbg !4669 {
entry:
  %adev.addr = alloca %struct.acpi_device*, align 8
  %src.addr = alloca i32, align 4
  %ost_code = alloca i32, align 4
  %error = alloca i32, align 4
  %notify = alloca i32 (%struct.acpi_device*, i32)*, align 8
  store %struct.acpi_device* %adev, %struct.acpi_device** %adev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.acpi_device** %adev.addr, metadata !4670, metadata !DIExpression()), !dbg !4671
  store i32 %src, i32* %src.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %src.addr, metadata !4672, metadata !DIExpression()), !dbg !4673
  call void @llvm.dbg.declare(metadata i32* %ost_code, metadata !4674, metadata !DIExpression()), !dbg !4675
  store i32 1, i32* %ost_code, align 4, !dbg !4675
  call void @llvm.dbg.declare(metadata i32* %error, metadata !4676, metadata !DIExpression()), !dbg !4677
  store i32 -19, i32* %error, align 4, !dbg !4677
  call void @lock_device_hotplug() #9, !dbg !4678
  call void @mutex_lock(%struct.mutex* @acpi_scan_lock) #9, !dbg !4679
  %0 = load %struct.acpi_device*, %struct.acpi_device** %adev.addr, align 8, !dbg !4680
  %handle = getelementptr inbounds %struct.acpi_device, %struct.acpi_device* %0, i32 0, i32 1, !dbg !4682
  %1 = load i8*, i8** %handle, align 8, !dbg !4682
  %cmp = icmp eq i8* %1, bitcast ([512 x i64]* @empty_zero_page to i8*), !dbg !4683
  br i1 %cmp, label %if.then, label %if.end, !dbg !4684

if.then:                                          ; preds = %entry
  br label %err_out, !dbg !4685

if.end:                                           ; preds = %entry
  %2 = load %struct.acpi_device*, %struct.acpi_device** %adev.addr, align 8, !dbg !4686
  %flags = getelementptr inbounds %struct.acpi_device, %struct.acpi_device* %2, i32 0, i32 9, !dbg !4688
  %3 = bitcast %struct.acpi_device_flags* %flags to i32*, !dbg !4689
  %bf.load = load i32, i32* %3, align 4, !dbg !4689
  %bf.lshr = lshr i32 %bf.load, 8, !dbg !4689
  %bf.clear = and i32 %bf.lshr, 1, !dbg !4689
  %tobool = icmp ne i32 %bf.clear, 0, !dbg !4686
  br i1 %tobool, label %if.then1, label %if.else, !dbg !4690

if.then1:                                         ; preds = %if.end
  %4 = load %struct.acpi_device*, %struct.acpi_device** %adev.addr, align 8, !dbg !4691
  %5 = load i32, i32* %src.addr, align 4, !dbg !4693
  %call = call i32 @dock_notify(%struct.acpi_device* %4, i32 %5) #9, !dbg !4694
  store i32 %call, i32* %error, align 4, !dbg !4695
  br label %if.end19, !dbg !4696

if.else:                                          ; preds = %if.end
  %6 = load %struct.acpi_device*, %struct.acpi_device** %adev.addr, align 8, !dbg !4697
  %flags2 = getelementptr inbounds %struct.acpi_device, %struct.acpi_device* %6, i32 0, i32 9, !dbg !4699
  %7 = bitcast %struct.acpi_device_flags* %flags2 to i32*, !dbg !4700
  %bf.load3 = load i32, i32* %7, align 4, !dbg !4700
  %bf.lshr4 = lshr i32 %bf.load3, 7, !dbg !4700
  %bf.clear5 = and i32 %bf.lshr4, 1, !dbg !4700
  %tobool6 = icmp ne i32 %bf.clear5, 0, !dbg !4697
  br i1 %tobool6, label %if.then7, label %if.else9, !dbg !4701

if.then7:                                         ; preds = %if.else
  %8 = load %struct.acpi_device*, %struct.acpi_device** %adev.addr, align 8, !dbg !4702
  %9 = load i32, i32* %src.addr, align 4, !dbg !4704
  %call8 = call i32 @acpi_generic_hotplug_event(%struct.acpi_device* %8, i32 %9) #9, !dbg !4705
  store i32 %call8, i32* %error, align 4, !dbg !4706
  br label %if.end18, !dbg !4707

if.else9:                                         ; preds = %if.else
  call void @llvm.dbg.declare(metadata i32 (%struct.acpi_device*, i32)** %notify, metadata !4708, metadata !DIExpression()), !dbg !4710
  call void @acpi_lock_hp_context() #9, !dbg !4711
  %10 = load %struct.acpi_device*, %struct.acpi_device** %adev.addr, align 8, !dbg !4712
  %hp = getelementptr inbounds %struct.acpi_device, %struct.acpi_device* %10, i32 0, i32 17, !dbg !4713
  %11 = load %struct.acpi_hotplug_context*, %struct.acpi_hotplug_context** %hp, align 8, !dbg !4713
  %tobool10 = icmp ne %struct.acpi_hotplug_context* %11, null, !dbg !4712
  br i1 %tobool10, label %cond.true, label %cond.false, !dbg !4712

cond.true:                                        ; preds = %if.else9
  %12 = load %struct.acpi_device*, %struct.acpi_device** %adev.addr, align 8, !dbg !4714
  %hp11 = getelementptr inbounds %struct.acpi_device, %struct.acpi_device* %12, i32 0, i32 17, !dbg !4715
  %13 = load %struct.acpi_hotplug_context*, %struct.acpi_hotplug_context** %hp11, align 8, !dbg !4715
  %notify12 = getelementptr inbounds %struct.acpi_hotplug_context, %struct.acpi_hotplug_context* %13, i32 0, i32 1, !dbg !4716
  %14 = load i32 (%struct.acpi_device*, i32)*, i32 (%struct.acpi_device*, i32)** %notify12, align 8, !dbg !4716
  br label %cond.end, !dbg !4712

cond.false:                                       ; preds = %if.else9
  br label %cond.end, !dbg !4712

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 (%struct.acpi_device*, i32)* [ %14, %cond.true ], [ null, %cond.false ], !dbg !4712
  store i32 (%struct.acpi_device*, i32)* %cond, i32 (%struct.acpi_device*, i32)** %notify, align 8, !dbg !4717
  call void @acpi_unlock_hp_context() #9, !dbg !4718
  %15 = load i32 (%struct.acpi_device*, i32)*, i32 (%struct.acpi_device*, i32)** %notify, align 8, !dbg !4719
  %tobool13 = icmp ne i32 (%struct.acpi_device*, i32)* %15, null, !dbg !4719
  br i1 %tobool13, label %if.then14, label %if.else16, !dbg !4721

if.then14:                                        ; preds = %cond.end
  %16 = load i32 (%struct.acpi_device*, i32)*, i32 (%struct.acpi_device*, i32)** %notify, align 8, !dbg !4722
  %17 = load %struct.acpi_device*, %struct.acpi_device** %adev.addr, align 8, !dbg !4723
  %18 = load i32, i32* %src.addr, align 4, !dbg !4724
  %call15 = call i32 %16(%struct.acpi_device* %17, i32 %18) #9, !dbg !4722
  store i32 %call15, i32* %error, align 4, !dbg !4725
  br label %if.end17, !dbg !4726

if.else16:                                        ; preds = %cond.end
  br label %out, !dbg !4727

if.end17:                                         ; preds = %if.then14
  br label %if.end18

if.end18:                                         ; preds = %if.end17, %if.then7
  br label %if.end19

if.end19:                                         ; preds = %if.end18, %if.then1
  %19 = load i32, i32* %error, align 4, !dbg !4728
  switch i32 %19, label %sw.default [
    i32 0, label %sw.bb
    i32 -1, label %sw.bb20
    i32 -16, label %sw.bb21
  ], !dbg !4729

sw.bb:                                            ; preds = %if.end19
  store i32 0, i32* %ost_code, align 4, !dbg !4730
  br label %sw.epilog, !dbg !4732

sw.bb20:                                          ; preds = %if.end19
  store i32 128, i32* %ost_code, align 4, !dbg !4733
  br label %sw.epilog, !dbg !4734

sw.bb21:                                          ; preds = %if.end19
  store i32 130, i32* %ost_code, align 4, !dbg !4735
  br label %sw.epilog, !dbg !4736

sw.default:                                       ; preds = %if.end19
  store i32 1, i32* %ost_code, align 4, !dbg !4737
  br label %sw.epilog, !dbg !4738

sw.epilog:                                        ; preds = %sw.default, %sw.bb21, %sw.bb20, %sw.bb
  br label %err_out, !dbg !4739

err_out:                                          ; preds = %sw.epilog, %if.then
  call void @llvm.dbg.label(metadata !4740), !dbg !4741
  %20 = load %struct.acpi_device*, %struct.acpi_device** %adev.addr, align 8, !dbg !4742
  %handle22 = getelementptr inbounds %struct.acpi_device, %struct.acpi_device* %20, i32 0, i32 1, !dbg !4743
  %21 = load i8*, i8** %handle22, align 8, !dbg !4743
  %22 = load i32, i32* %src.addr, align 4, !dbg !4744
  %23 = load i32, i32* %ost_code, align 4, !dbg !4745
  %call23 = call i32 @acpi_evaluate_ost(i8* %21, i32 %22, i32 %23, %struct.acpi_buffer* null) #9, !dbg !4746
  br label %out, !dbg !4746

out:                                              ; preds = %err_out, %if.else16
  call void @llvm.dbg.label(metadata !4747), !dbg !4748
  %24 = load %struct.acpi_device*, %struct.acpi_device** %adev.addr, align 8, !dbg !4749
  call void @acpi_bus_put_acpi_device(%struct.acpi_device* %24) #9, !dbg !4750
  call void @mutex_unlock(%struct.mutex* @acpi_scan_lock) #9, !dbg !4751
  call void @unlock_device_hotplug() #9, !dbg !4752
  ret void, !dbg !4753
}

; Function Attrs: noredzone
declare dso_local void @lock_device_hotplug() #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @dock_notify(%struct.acpi_device* %adev, i32 %event) #0 !dbg !4754 {
entry:
  %adev.addr = alloca %struct.acpi_device*, align 8
  %event.addr = alloca i32, align 4
  store %struct.acpi_device* %adev, %struct.acpi_device** %adev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.acpi_device** %adev.addr, metadata !4755, metadata !DIExpression()), !dbg !4756
  store i32 %event, i32* %event.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %event.addr, metadata !4757, metadata !DIExpression()), !dbg !4758
  ret i32 -19, !dbg !4759
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @acpi_generic_hotplug_event(%struct.acpi_device* %adev, i32 %type) #0 !dbg !4760 {
entry:
  %retval = alloca i32, align 4
  %adev.addr = alloca %struct.acpi_device*, align 8
  %type.addr = alloca i32, align 4
  store %struct.acpi_device* %adev, %struct.acpi_device** %adev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.acpi_device** %adev.addr, metadata !4761, metadata !DIExpression()), !dbg !4762
  store i32 %type, i32* %type.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %type.addr, metadata !4763, metadata !DIExpression()), !dbg !4764
  %0 = load i32, i32* %type.addr, align 4, !dbg !4765
  switch i32 %0, label %sw.epilog [
    i32 0, label %sw.bb
    i32 1, label %sw.bb1
    i32 3, label %sw.bb3
    i32 259, label %sw.bb3
  ], !dbg !4766

sw.bb:                                            ; preds = %entry
  %1 = load %struct.acpi_device*, %struct.acpi_device** %adev.addr, align 8, !dbg !4767
  %call = call i32 @acpi_scan_bus_check(%struct.acpi_device* %1) #9, !dbg !4769
  store i32 %call, i32* %retval, align 4, !dbg !4770
  br label %return, !dbg !4770

sw.bb1:                                           ; preds = %entry
  %2 = load %struct.acpi_device*, %struct.acpi_device** %adev.addr, align 8, !dbg !4771
  %call2 = call i32 @acpi_scan_device_check(%struct.acpi_device* %2) #9, !dbg !4772
  store i32 %call2, i32* %retval, align 4, !dbg !4773
  br label %return, !dbg !4773

sw.bb3:                                           ; preds = %entry, %entry
  %3 = load %struct.acpi_device*, %struct.acpi_device** %adev.addr, align 8, !dbg !4774
  %handler = getelementptr inbounds %struct.acpi_device, %struct.acpi_device* %3, i32 0, i32 16, !dbg !4776
  %4 = load %struct.acpi_scan_handler*, %struct.acpi_scan_handler** %handler, align 8, !dbg !4776
  %tobool = icmp ne %struct.acpi_scan_handler* %4, null, !dbg !4774
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !4777

land.lhs.true:                                    ; preds = %sw.bb3
  %5 = load %struct.acpi_device*, %struct.acpi_device** %adev.addr, align 8, !dbg !4778
  %handler4 = getelementptr inbounds %struct.acpi_device, %struct.acpi_device* %5, i32 0, i32 16, !dbg !4779
  %6 = load %struct.acpi_scan_handler*, %struct.acpi_scan_handler** %handler4, align 8, !dbg !4779
  %hotplug = getelementptr inbounds %struct.acpi_scan_handler, %struct.acpi_scan_handler* %6, i32 0, i32 7, !dbg !4780
  %enabled = getelementptr inbounds %struct.acpi_hotplug_profile, %struct.acpi_hotplug_profile* %hotplug, i32 0, i32 3, !dbg !4781
  %bf.load = load i8, i8* %enabled, align 8, !dbg !4781
  %bf.clear = and i8 %bf.load, 1, !dbg !4781
  %bf.cast = trunc i8 %bf.clear to i1, !dbg !4781
  br i1 %bf.cast, label %if.end, label %if.then, !dbg !4782

if.then:                                          ; preds = %land.lhs.true
  %7 = load %struct.acpi_device*, %struct.acpi_device** %adev.addr, align 8, !dbg !4783
  %dev = getelementptr inbounds %struct.acpi_device, %struct.acpi_device* %7, i32 0, i32 21, !dbg !4783
  call void (%struct.device*, i8*, ...) @_dev_info(%struct.device* %dev, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.30, i64 0, i64 0)) #10, !dbg !4783
  store i32 -1, i32* %retval, align 4, !dbg !4785
  br label %return, !dbg !4785

if.end:                                           ; preds = %land.lhs.true, %sw.bb3
  %8 = load %struct.acpi_device*, %struct.acpi_device** %adev.addr, align 8, !dbg !4786
  %handle = getelementptr inbounds %struct.acpi_device, %struct.acpi_device* %8, i32 0, i32 1, !dbg !4787
  %9 = load i8*, i8** %handle, align 8, !dbg !4787
  %call5 = call i32 @acpi_evaluate_ost(i8* %9, i32 3, i32 132, %struct.acpi_buffer* null) #9, !dbg !4788
  %10 = load %struct.acpi_device*, %struct.acpi_device** %adev.addr, align 8, !dbg !4789
  %call6 = call i32 @acpi_scan_hot_remove(%struct.acpi_device* %10) #9, !dbg !4790
  store i32 %call6, i32* %retval, align 4, !dbg !4791
  br label %return, !dbg !4791

sw.epilog:                                        ; preds = %entry
  store i32 -22, i32* %retval, align 4, !dbg !4792
  br label %return, !dbg !4792

return:                                           ; preds = %sw.epilog, %if.end, %if.then, %sw.bb1, %sw.bb
  %11 = load i32, i32* %retval, align 4, !dbg !4793
  ret i32 %11, !dbg !4793
}

; Function Attrs: nounwind readnone speculatable willreturn
declare void @llvm.dbg.label(metadata) #2

; Function Attrs: noredzone
declare dso_local i32 @acpi_evaluate_ost(i8*, i32, i32, %struct.acpi_buffer*) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @acpi_bus_put_acpi_device(%struct.acpi_device* %adev) #0 !dbg !4794 {
entry:
  %adev.addr = alloca %struct.acpi_device*, align 8
  store %struct.acpi_device* %adev, %struct.acpi_device** %adev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.acpi_device** %adev.addr, metadata !4795, metadata !DIExpression()), !dbg !4796
  %0 = load %struct.acpi_device*, %struct.acpi_device** %adev.addr, align 8, !dbg !4797
  %dev = getelementptr inbounds %struct.acpi_device, %struct.acpi_device* %0, i32 0, i32 21, !dbg !4798
  call void @put_device(%struct.device* %dev) #9, !dbg !4799
  ret void, !dbg !4800
}

; Function Attrs: noredzone
declare dso_local void @unlock_device_hotplug() #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @acpi_bus_get_device(i8* %handle, %struct.acpi_device** %device) #0 !dbg !4801 {
entry:
  %handle.addr = alloca i8*, align 8
  %device.addr = alloca %struct.acpi_device**, align 8
  store i8* %handle, i8** %handle.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %handle.addr, metadata !4805, metadata !DIExpression()), !dbg !4806
  store %struct.acpi_device** %device, %struct.acpi_device*** %device.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.acpi_device*** %device.addr, metadata !4807, metadata !DIExpression()), !dbg !4808
  %0 = load i8*, i8** %handle.addr, align 8, !dbg !4809
  %1 = load %struct.acpi_device**, %struct.acpi_device*** %device.addr, align 8, !dbg !4810
  %call = call i32 @acpi_get_device_data(i8* %0, %struct.acpi_device** %1, void (i8*)* null) #9, !dbg !4811
  ret i32 %call, !dbg !4812
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @acpi_get_device_data(i8* %handle, %struct.acpi_device** %device, void (i8*)* %callback) #0 !dbg !4813 {
entry:
  %retval = alloca i32, align 4
  %handle.addr = alloca i8*, align 8
  %device.addr = alloca %struct.acpi_device**, align 8
  %callback.addr = alloca void (i8*)*, align 8
  %status = alloca i32, align 4
  store i8* %handle, i8** %handle.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %handle.addr, metadata !4816, metadata !DIExpression()), !dbg !4817
  store %struct.acpi_device** %device, %struct.acpi_device*** %device.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.acpi_device*** %device.addr, metadata !4818, metadata !DIExpression()), !dbg !4819
  store void (i8*)* %callback, void (i8*)** %callback.addr, align 8
  call void @llvm.dbg.declare(metadata void (i8*)** %callback.addr, metadata !4820, metadata !DIExpression()), !dbg !4821
  call void @llvm.dbg.declare(metadata i32* %status, metadata !4822, metadata !DIExpression()), !dbg !4823
  %0 = load %struct.acpi_device**, %struct.acpi_device*** %device.addr, align 8, !dbg !4824
  %tobool = icmp ne %struct.acpi_device** %0, null, !dbg !4824
  br i1 %tobool, label %if.end, label %if.then, !dbg !4826

if.then:                                          ; preds = %entry
  store i32 -22, i32* %retval, align 4, !dbg !4827
  br label %return, !dbg !4827

if.end:                                           ; preds = %entry
  %1 = load i8*, i8** %handle.addr, align 8, !dbg !4828
  %2 = load %struct.acpi_device**, %struct.acpi_device*** %device.addr, align 8, !dbg !4829
  %3 = bitcast %struct.acpi_device** %2 to i8**, !dbg !4830
  %4 = load void (i8*)*, void (i8*)** %callback.addr, align 8, !dbg !4831
  %call = call i32 @acpi_get_data_full(i8* %1, void (i8*, i8*)* @acpi_scan_drop_device, i8** %3, void (i8*)* %4) #9, !dbg !4832
  store i32 %call, i32* %status, align 4, !dbg !4833
  %5 = load i32, i32* %status, align 4, !dbg !4834
  %tobool1 = icmp ne i32 %5, 0, !dbg !4834
  br i1 %tobool1, label %if.then3, label %lor.lhs.false, !dbg !4836

lor.lhs.false:                                    ; preds = %if.end
  %6 = load %struct.acpi_device**, %struct.acpi_device*** %device.addr, align 8, !dbg !4837
  %7 = load %struct.acpi_device*, %struct.acpi_device** %6, align 8, !dbg !4838
  %tobool2 = icmp ne %struct.acpi_device* %7, null, !dbg !4838
  br i1 %tobool2, label %if.end4, label %if.then3, !dbg !4839

if.then3:                                         ; preds = %lor.lhs.false, %if.end
  store i32 -19, i32* %retval, align 4, !dbg !4840
  br label %return, !dbg !4840

if.end4:                                          ; preds = %lor.lhs.false
  store i32 0, i32* %retval, align 4, !dbg !4842
  br label %return, !dbg !4842

return:                                           ; preds = %if.end4, %if.then3, %if.then
  %8 = load i32, i32* %retval, align 4, !dbg !4843
  ret i32 %8, !dbg !4843
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local %struct.acpi_device* @acpi_bus_get_acpi_device(i8* %handle) #0 !dbg !4844 {
entry:
  %handle.addr = alloca i8*, align 8
  %adev = alloca %struct.acpi_device*, align 8
  store i8* %handle, i8** %handle.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %handle.addr, metadata !4847, metadata !DIExpression()), !dbg !4848
  call void @llvm.dbg.declare(metadata %struct.acpi_device** %adev, metadata !4849, metadata !DIExpression()), !dbg !4850
  store %struct.acpi_device* null, %struct.acpi_device** %adev, align 8, !dbg !4850
  %0 = load i8*, i8** %handle.addr, align 8, !dbg !4851
  %call = call i32 @acpi_get_device_data(i8* %0, %struct.acpi_device** %adev, void (i8*)* @get_acpi_device) #9, !dbg !4852
  %1 = load %struct.acpi_device*, %struct.acpi_device** %adev, align 8, !dbg !4853
  ret %struct.acpi_device* %1, !dbg !4854
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @get_acpi_device(i8* %dev) #0 !dbg !4855 {
entry:
  %dev.addr = alloca i8*, align 8
  store i8* %dev, i8** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %dev.addr, metadata !4856, metadata !DIExpression()), !dbg !4857
  %0 = load i8*, i8** %dev.addr, align 8, !dbg !4858
  %tobool = icmp ne i8* %0, null, !dbg !4858
  br i1 %tobool, label %if.then, label %if.end, !dbg !4860

if.then:                                          ; preds = %entry
  %1 = load i8*, i8** %dev.addr, align 8, !dbg !4861
  %2 = bitcast i8* %1 to %struct.acpi_device*, !dbg !4862
  %dev1 = getelementptr inbounds %struct.acpi_device, %struct.acpi_device* %2, i32 0, i32 21, !dbg !4863
  %call = call %struct.device* @get_device(%struct.device* %dev1) #9, !dbg !4864
  br label %if.end, !dbg !4864

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !4865
}

; Function Attrs: noredzone
declare dso_local void @put_device(%struct.device*) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @acpi_device_add(%struct.acpi_device* %device, void (%struct.device*)* %release) #0 !dbg !4374 {
entry:
  %retval = alloca i32, align 4
  %device.addr = alloca %struct.acpi_device*, align 8
  %release.addr = alloca void (%struct.device*)*, align 8
  %result = alloca i32, align 4
  %acpi_device_bus_id = alloca %struct.acpi_device_bus_id*, align 8
  %new_bus_id = alloca %struct.acpi_device_bus_id*, align 8
  %found = alloca i32, align 4
  %status = alloca i32, align 4
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.acpi_device_bus_id*, align 8
  %__mptr19 = alloca i8*, align 8
  %tmp23 = alloca %struct.acpi_device_bus_id*, align 8
  store %struct.acpi_device* %device, %struct.acpi_device** %device.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.acpi_device** %device.addr, metadata !4866, metadata !DIExpression()), !dbg !4867
  store void (%struct.device*)* %release, void (%struct.device*)** %release.addr, align 8
  call void @llvm.dbg.declare(metadata void (%struct.device*)** %release.addr, metadata !4868, metadata !DIExpression()), !dbg !4869
  call void @llvm.dbg.declare(metadata i32* %result, metadata !4870, metadata !DIExpression()), !dbg !4871
  call void @llvm.dbg.declare(metadata %struct.acpi_device_bus_id** %acpi_device_bus_id, metadata !4872, metadata !DIExpression()), !dbg !4873
  call void @llvm.dbg.declare(metadata %struct.acpi_device_bus_id** %new_bus_id, metadata !4874, metadata !DIExpression()), !dbg !4875
  call void @llvm.dbg.declare(metadata i32* %found, metadata !4876, metadata !DIExpression()), !dbg !4877
  store i32 0, i32* %found, align 4, !dbg !4877
  %0 = load %struct.acpi_device*, %struct.acpi_device** %device.addr, align 8, !dbg !4878
  %handle = getelementptr inbounds %struct.acpi_device, %struct.acpi_device* %0, i32 0, i32 1, !dbg !4880
  %1 = load i8*, i8** %handle, align 8, !dbg !4880
  %tobool = icmp ne i8* %1, null, !dbg !4878
  br i1 %tobool, label %if.then, label %if.end5, !dbg !4881

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i32* %status, metadata !4882, metadata !DIExpression()), !dbg !4884
  %2 = load %struct.acpi_device*, %struct.acpi_device** %device.addr, align 8, !dbg !4885
  %handle1 = getelementptr inbounds %struct.acpi_device, %struct.acpi_device* %2, i32 0, i32 1, !dbg !4886
  %3 = load i8*, i8** %handle1, align 8, !dbg !4886
  %4 = load %struct.acpi_device*, %struct.acpi_device** %device.addr, align 8, !dbg !4887
  %5 = bitcast %struct.acpi_device* %4 to i8*, !dbg !4887
  %call = call i32 @acpi_attach_data(i8* %3, void (i8*, i8*)* @acpi_scan_drop_device, i8* %5) #9, !dbg !4888
  store i32 %call, i32* %status, align 4, !dbg !4889
  %6 = load i32, i32* %status, align 4, !dbg !4890
  %tobool2 = icmp ne i32 %6, 0, !dbg !4890
  br i1 %tobool2, label %if.then3, label %if.end, !dbg !4892

if.then3:                                         ; preds = %if.then
  %7 = load %struct.acpi_device*, %struct.acpi_device** %device.addr, align 8, !dbg !4893
  %handle4 = getelementptr inbounds %struct.acpi_device, %struct.acpi_device* %7, i32 0, i32 1, !dbg !4893
  %8 = load i8*, i8** %handle4, align 8, !dbg !4893
  call void (i8*, i8*, i8*, ...) @acpi_handle_printk(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i64 0, i64 0), i8* %8, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.2, i64 0, i64 0)) #9, !dbg !4893
  store i32 -19, i32* %retval, align 4, !dbg !4895
  br label %return, !dbg !4895

if.end:                                           ; preds = %if.then
  br label %if.end5, !dbg !4896

if.end5:                                          ; preds = %if.end, %entry
  %9 = load %struct.acpi_device*, %struct.acpi_device** %device.addr, align 8, !dbg !4897
  %children = getelementptr inbounds %struct.acpi_device, %struct.acpi_device* %9, i32 0, i32 4, !dbg !4898
  call void @INIT_LIST_HEAD(%struct.list_head* %children) #9, !dbg !4899
  %10 = load %struct.acpi_device*, %struct.acpi_device** %device.addr, align 8, !dbg !4900
  %node = getelementptr inbounds %struct.acpi_device, %struct.acpi_device* %10, i32 0, i32 5, !dbg !4901
  call void @INIT_LIST_HEAD(%struct.list_head* %node) #9, !dbg !4902
  %11 = load %struct.acpi_device*, %struct.acpi_device** %device.addr, align 8, !dbg !4903
  %wakeup_list = getelementptr inbounds %struct.acpi_device, %struct.acpi_device* %11, i32 0, i32 6, !dbg !4904
  call void @INIT_LIST_HEAD(%struct.list_head* %wakeup_list) #9, !dbg !4905
  %12 = load %struct.acpi_device*, %struct.acpi_device** %device.addr, align 8, !dbg !4906
  %physical_node_list = getelementptr inbounds %struct.acpi_device, %struct.acpi_device* %12, i32 0, i32 24, !dbg !4907
  call void @INIT_LIST_HEAD(%struct.list_head* %physical_node_list) #9, !dbg !4908
  %13 = load %struct.acpi_device*, %struct.acpi_device** %device.addr, align 8, !dbg !4909
  %del_list = getelementptr inbounds %struct.acpi_device, %struct.acpi_device* %13, i32 0, i32 7, !dbg !4910
  call void @INIT_LIST_HEAD(%struct.list_head* %del_list) #9, !dbg !4911
  br label %do.body, !dbg !4912

do.body:                                          ; preds = %if.end5
  %14 = load %struct.acpi_device*, %struct.acpi_device** %device.addr, align 8, !dbg !4913
  %physical_node_lock = getelementptr inbounds %struct.acpi_device, %struct.acpi_device* %14, i32 0, i32 25, !dbg !4913
  call void @__mutex_init(%struct.mutex* %physical_node_lock, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.3, i64 0, i64 0), %struct.lock_class_key* @acpi_device_add.__key) #9, !dbg !4913
  br label %do.end, !dbg !4913

do.end:                                           ; preds = %do.body
  %call6 = call i8* @kzalloc(i64 40, i32 3264) #9, !dbg !4915
  %15 = bitcast i8* %call6 to %struct.acpi_device_bus_id*, !dbg !4915
  store %struct.acpi_device_bus_id* %15, %struct.acpi_device_bus_id** %new_bus_id, align 8, !dbg !4916
  %16 = load %struct.acpi_device_bus_id*, %struct.acpi_device_bus_id** %new_bus_id, align 8, !dbg !4917
  %tobool7 = icmp ne %struct.acpi_device_bus_id* %16, null, !dbg !4917
  br i1 %tobool7, label %if.end10, label %if.then8, !dbg !4919

if.then8:                                         ; preds = %do.end
  %call9 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.4, i64 0, i64 0)) #10, !dbg !4920
  store i32 -12, i32* %result, align 4, !dbg !4922
  br label %err_detach, !dbg !4923

if.end10:                                         ; preds = %do.end
  call void @mutex_lock(%struct.mutex* @acpi_device_lock) #9, !dbg !4924
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !4925, metadata !DIExpression()), !dbg !4928
  %17 = load %struct.list_head*, %struct.list_head** getelementptr inbounds (%struct.list_head, %struct.list_head* @acpi_bus_id_list, i32 0, i32 0), align 8, !dbg !4928
  %18 = bitcast %struct.list_head* %17 to i8*, !dbg !4928
  store i8* %18, i8** %__mptr, align 8, !dbg !4928
  br label %do.body11, !dbg !4928

do.body11:                                        ; preds = %if.end10
  br label %do.end12, !dbg !4929

do.end12:                                         ; preds = %do.body11
  %19 = load i8*, i8** %__mptr, align 8, !dbg !4928
  %add.ptr = getelementptr i8, i8* %19, i64 -24, !dbg !4928
  %20 = bitcast i8* %add.ptr to %struct.acpi_device_bus_id*, !dbg !4928
  store %struct.acpi_device_bus_id* %20, %struct.acpi_device_bus_id** %tmp, align 8, !dbg !4929
  %21 = load %struct.acpi_device_bus_id*, %struct.acpi_device_bus_id** %tmp, align 8, !dbg !4928
  store %struct.acpi_device_bus_id* %21, %struct.acpi_device_bus_id** %acpi_device_bus_id, align 8, !dbg !4931
  br label %for.cond, !dbg !4931

for.cond:                                         ; preds = %do.end22, %do.end12
  %22 = load %struct.acpi_device_bus_id*, %struct.acpi_device_bus_id** %acpi_device_bus_id, align 8, !dbg !4932
  %node13 = getelementptr inbounds %struct.acpi_device_bus_id, %struct.acpi_device_bus_id* %22, i32 0, i32 2, !dbg !4932
  %cmp = icmp eq %struct.list_head* %node13, @acpi_bus_id_list, !dbg !4932
  %lnot = xor i1 %cmp, true, !dbg !4932
  br i1 %lnot, label %for.body, label %for.end, !dbg !4931

for.body:                                         ; preds = %for.cond
  %23 = load %struct.acpi_device_bus_id*, %struct.acpi_device_bus_id** %acpi_device_bus_id, align 8, !dbg !4934
  %bus_id = getelementptr inbounds %struct.acpi_device_bus_id, %struct.acpi_device_bus_id* %23, i32 0, i32 0, !dbg !4937
  %arraydecay = getelementptr inbounds [15 x i8], [15 x i8]* %bus_id, i64 0, i64 0, !dbg !4934
  %24 = load %struct.acpi_device*, %struct.acpi_device** %device.addr, align 8, !dbg !4938
  %call14 = call i8* @acpi_device_hid(%struct.acpi_device* %24) #9, !dbg !4939
  %call15 = call i32 @strcmp(i8* %arraydecay, i8* %call14) #9, !dbg !4940
  %tobool16 = icmp ne i32 %call15, 0, !dbg !4940
  br i1 %tobool16, label %if.end18, label %if.then17, !dbg !4941

if.then17:                                        ; preds = %for.body
  %25 = load %struct.acpi_device_bus_id*, %struct.acpi_device_bus_id** %acpi_device_bus_id, align 8, !dbg !4942
  %instance_no = getelementptr inbounds %struct.acpi_device_bus_id, %struct.acpi_device_bus_id* %25, i32 0, i32 1, !dbg !4944
  %26 = load i32, i32* %instance_no, align 8, !dbg !4945
  %inc = add i32 %26, 1, !dbg !4945
  store i32 %inc, i32* %instance_no, align 8, !dbg !4945
  store i32 1, i32* %found, align 4, !dbg !4946
  %27 = load %struct.acpi_device_bus_id*, %struct.acpi_device_bus_id** %new_bus_id, align 8, !dbg !4947
  %28 = bitcast %struct.acpi_device_bus_id* %27 to i8*, !dbg !4947
  call void @kfree(i8* %28) #9, !dbg !4948
  br label %for.end, !dbg !4949

if.end18:                                         ; preds = %for.body
  br label %for.inc, !dbg !4950

for.inc:                                          ; preds = %if.end18
  call void @llvm.dbg.declare(metadata i8** %__mptr19, metadata !4951, metadata !DIExpression()), !dbg !4953
  %29 = load %struct.acpi_device_bus_id*, %struct.acpi_device_bus_id** %acpi_device_bus_id, align 8, !dbg !4953
  %node20 = getelementptr inbounds %struct.acpi_device_bus_id, %struct.acpi_device_bus_id* %29, i32 0, i32 2, !dbg !4953
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %node20, i32 0, i32 0, !dbg !4953
  %30 = load %struct.list_head*, %struct.list_head** %next, align 8, !dbg !4953
  %31 = bitcast %struct.list_head* %30 to i8*, !dbg !4953
  store i8* %31, i8** %__mptr19, align 8, !dbg !4953
  br label %do.body21, !dbg !4953

do.body21:                                        ; preds = %for.inc
  br label %do.end22, !dbg !4954

do.end22:                                         ; preds = %do.body21
  %32 = load i8*, i8** %__mptr19, align 8, !dbg !4953
  %add.ptr24 = getelementptr i8, i8* %32, i64 -24, !dbg !4953
  %33 = bitcast i8* %add.ptr24 to %struct.acpi_device_bus_id*, !dbg !4953
  store %struct.acpi_device_bus_id* %33, %struct.acpi_device_bus_id** %tmp23, align 8, !dbg !4954
  %34 = load %struct.acpi_device_bus_id*, %struct.acpi_device_bus_id** %tmp23, align 8, !dbg !4953
  store %struct.acpi_device_bus_id* %34, %struct.acpi_device_bus_id** %acpi_device_bus_id, align 8, !dbg !4932
  br label %for.cond, !dbg !4932, !llvm.loop !4956

for.end:                                          ; preds = %if.then17, %for.cond
  %35 = load i32, i32* %found, align 4, !dbg !4958
  %tobool25 = icmp ne i32 %35, 0, !dbg !4958
  br i1 %tobool25, label %if.end33, label %if.then26, !dbg !4960

if.then26:                                        ; preds = %for.end
  %36 = load %struct.acpi_device_bus_id*, %struct.acpi_device_bus_id** %new_bus_id, align 8, !dbg !4961
  store %struct.acpi_device_bus_id* %36, %struct.acpi_device_bus_id** %acpi_device_bus_id, align 8, !dbg !4963
  %37 = load %struct.acpi_device_bus_id*, %struct.acpi_device_bus_id** %acpi_device_bus_id, align 8, !dbg !4964
  %bus_id27 = getelementptr inbounds %struct.acpi_device_bus_id, %struct.acpi_device_bus_id* %37, i32 0, i32 0, !dbg !4965
  %arraydecay28 = getelementptr inbounds [15 x i8], [15 x i8]* %bus_id27, i64 0, i64 0, !dbg !4964
  %38 = load %struct.acpi_device*, %struct.acpi_device** %device.addr, align 8, !dbg !4966
  %call29 = call i8* @acpi_device_hid(%struct.acpi_device* %38) #9, !dbg !4967
  %call30 = call i8* @strcpy(i8* %arraydecay28, i8* %call29) #9, !dbg !4968
  %39 = load %struct.acpi_device_bus_id*, %struct.acpi_device_bus_id** %acpi_device_bus_id, align 8, !dbg !4969
  %instance_no31 = getelementptr inbounds %struct.acpi_device_bus_id, %struct.acpi_device_bus_id* %39, i32 0, i32 1, !dbg !4970
  store i32 0, i32* %instance_no31, align 8, !dbg !4971
  %40 = load %struct.acpi_device_bus_id*, %struct.acpi_device_bus_id** %acpi_device_bus_id, align 8, !dbg !4972
  %node32 = getelementptr inbounds %struct.acpi_device_bus_id, %struct.acpi_device_bus_id* %40, i32 0, i32 2, !dbg !4973
  call void @list_add_tail(%struct.list_head* %node32, %struct.list_head* @acpi_bus_id_list) #9, !dbg !4974
  br label %if.end33, !dbg !4975

if.end33:                                         ; preds = %if.then26, %for.end
  %41 = load %struct.acpi_device*, %struct.acpi_device** %device.addr, align 8, !dbg !4976
  %dev = getelementptr inbounds %struct.acpi_device, %struct.acpi_device* %41, i32 0, i32 21, !dbg !4977
  %42 = load %struct.acpi_device_bus_id*, %struct.acpi_device_bus_id** %acpi_device_bus_id, align 8, !dbg !4978
  %bus_id34 = getelementptr inbounds %struct.acpi_device_bus_id, %struct.acpi_device_bus_id* %42, i32 0, i32 0, !dbg !4979
  %arraydecay35 = getelementptr inbounds [15 x i8], [15 x i8]* %bus_id34, i64 0, i64 0, !dbg !4978
  %43 = load %struct.acpi_device_bus_id*, %struct.acpi_device_bus_id** %acpi_device_bus_id, align 8, !dbg !4980
  %instance_no36 = getelementptr inbounds %struct.acpi_device_bus_id, %struct.acpi_device_bus_id* %43, i32 0, i32 1, !dbg !4981
  %44 = load i32, i32* %instance_no36, align 8, !dbg !4981
  %call37 = call i32 (%struct.device*, i8*, ...) @dev_set_name(%struct.device* %dev, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.5, i64 0, i64 0), i8* %arraydecay35, i32 %44) #9, !dbg !4982
  %45 = load %struct.acpi_device*, %struct.acpi_device** %device.addr, align 8, !dbg !4983
  %parent = getelementptr inbounds %struct.acpi_device, %struct.acpi_device* %45, i32 0, i32 3, !dbg !4985
  %46 = load %struct.acpi_device*, %struct.acpi_device** %parent, align 8, !dbg !4985
  %tobool38 = icmp ne %struct.acpi_device* %46, null, !dbg !4983
  br i1 %tobool38, label %if.then39, label %if.end43, !dbg !4986

if.then39:                                        ; preds = %if.end33
  %47 = load %struct.acpi_device*, %struct.acpi_device** %device.addr, align 8, !dbg !4987
  %node40 = getelementptr inbounds %struct.acpi_device, %struct.acpi_device* %47, i32 0, i32 5, !dbg !4988
  %48 = load %struct.acpi_device*, %struct.acpi_device** %device.addr, align 8, !dbg !4989
  %parent41 = getelementptr inbounds %struct.acpi_device, %struct.acpi_device* %48, i32 0, i32 3, !dbg !4990
  %49 = load %struct.acpi_device*, %struct.acpi_device** %parent41, align 8, !dbg !4990
  %children42 = getelementptr inbounds %struct.acpi_device, %struct.acpi_device* %49, i32 0, i32 4, !dbg !4991
  call void @list_add_tail(%struct.list_head* %node40, %struct.list_head* %children42) #9, !dbg !4992
  br label %if.end43, !dbg !4992

if.end43:                                         ; preds = %if.then39, %if.end33
  %50 = load %struct.acpi_device*, %struct.acpi_device** %device.addr, align 8, !dbg !4993
  %wakeup = getelementptr inbounds %struct.acpi_device, %struct.acpi_device* %50, i32 0, i32 12, !dbg !4995
  %flags = getelementptr inbounds %struct.acpi_device_wakeup, %struct.acpi_device_wakeup* %wakeup, i32 0, i32 4, !dbg !4996
  %51 = bitcast %struct.acpi_device_wakeup_flags* %flags to i8*, !dbg !4997
  %bf.load = load i8, i8* %51, align 8, !dbg !4997
  %bf.clear = and i8 %bf.load, 1, !dbg !4997
  %tobool44 = icmp ne i8 %bf.clear, 0, !dbg !4993
  br i1 %tobool44, label %if.then45, label %if.end47, !dbg !4998

if.then45:                                        ; preds = %if.end43
  %52 = load %struct.acpi_device*, %struct.acpi_device** %device.addr, align 8, !dbg !4999
  %wakeup_list46 = getelementptr inbounds %struct.acpi_device, %struct.acpi_device* %52, i32 0, i32 6, !dbg !5000
  call void @list_add_tail(%struct.list_head* %wakeup_list46, %struct.list_head* @acpi_wakeup_device_list) #9, !dbg !5001
  br label %if.end47, !dbg !5001

if.end47:                                         ; preds = %if.then45, %if.end43
  call void @mutex_unlock(%struct.mutex* @acpi_device_lock) #9, !dbg !5002
  %53 = load %struct.acpi_device*, %struct.acpi_device** %device.addr, align 8, !dbg !5003
  %parent48 = getelementptr inbounds %struct.acpi_device, %struct.acpi_device* %53, i32 0, i32 3, !dbg !5005
  %54 = load %struct.acpi_device*, %struct.acpi_device** %parent48, align 8, !dbg !5005
  %tobool49 = icmp ne %struct.acpi_device* %54, null, !dbg !5003
  br i1 %tobool49, label %if.then50, label %if.end55, !dbg !5006

if.then50:                                        ; preds = %if.end47
  %55 = load %struct.acpi_device*, %struct.acpi_device** %device.addr, align 8, !dbg !5007
  %parent51 = getelementptr inbounds %struct.acpi_device, %struct.acpi_device* %55, i32 0, i32 3, !dbg !5008
  %56 = load %struct.acpi_device*, %struct.acpi_device** %parent51, align 8, !dbg !5008
  %dev52 = getelementptr inbounds %struct.acpi_device, %struct.acpi_device* %56, i32 0, i32 21, !dbg !5009
  %57 = load %struct.acpi_device*, %struct.acpi_device** %device.addr, align 8, !dbg !5010
  %dev53 = getelementptr inbounds %struct.acpi_device, %struct.acpi_device* %57, i32 0, i32 21, !dbg !5011
  %parent54 = getelementptr inbounds %struct.device, %struct.device* %dev53, i32 0, i32 1, !dbg !5012
  store %struct.device* %dev52, %struct.device** %parent54, align 8, !dbg !5013
  br label %if.end55, !dbg !5010

if.end55:                                         ; preds = %if.then50, %if.end47
  %58 = load %struct.acpi_device*, %struct.acpi_device** %device.addr, align 8, !dbg !5014
  %dev56 = getelementptr inbounds %struct.acpi_device, %struct.acpi_device* %58, i32 0, i32 21, !dbg !5015
  %bus = getelementptr inbounds %struct.device, %struct.device* %dev56, i32 0, i32 5, !dbg !5016
  store %struct.bus_type* @acpi_bus_type, %struct.bus_type** %bus, align 8, !dbg !5017
  %59 = load void (%struct.device*)*, void (%struct.device*)** %release.addr, align 8, !dbg !5018
  %60 = load %struct.acpi_device*, %struct.acpi_device** %device.addr, align 8, !dbg !5019
  %dev57 = getelementptr inbounds %struct.acpi_device, %struct.acpi_device* %60, i32 0, i32 21, !dbg !5020
  %release58 = getelementptr inbounds %struct.device, %struct.device* %dev57, i32 0, i32 31, !dbg !5021
  store void (%struct.device*)* %59, void (%struct.device*)** %release58, align 8, !dbg !5022
  %61 = load %struct.acpi_device*, %struct.acpi_device** %device.addr, align 8, !dbg !5023
  %dev59 = getelementptr inbounds %struct.acpi_device, %struct.acpi_device* %61, i32 0, i32 21, !dbg !5024
  %call60 = call i32 @device_add(%struct.device* %dev59) #9, !dbg !5025
  store i32 %call60, i32* %result, align 4, !dbg !5026
  %62 = load i32, i32* %result, align 4, !dbg !5027
  %tobool61 = icmp ne i32 %62, 0, !dbg !5027
  br i1 %tobool61, label %if.then62, label %if.end64, !dbg !5029

if.then62:                                        ; preds = %if.end55
  %63 = load %struct.acpi_device*, %struct.acpi_device** %device.addr, align 8, !dbg !5030
  %dev63 = getelementptr inbounds %struct.acpi_device, %struct.acpi_device* %63, i32 0, i32 21, !dbg !5030
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %dev63, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.6, i64 0, i64 0)) #10, !dbg !5030
  br label %err, !dbg !5032

if.end64:                                         ; preds = %if.end55
  %64 = load %struct.acpi_device*, %struct.acpi_device** %device.addr, align 8, !dbg !5033
  %call65 = call i32 @acpi_device_setup_files(%struct.acpi_device* %64) #9, !dbg !5034
  store i32 %call65, i32* %result, align 4, !dbg !5035
  %65 = load i32, i32* %result, align 4, !dbg !5036
  %tobool66 = icmp ne i32 %65, 0, !dbg !5036
  br i1 %tobool66, label %if.then67, label %if.end71, !dbg !5038

if.then67:                                        ; preds = %if.end64
  %66 = load %struct.acpi_device*, %struct.acpi_device** %device.addr, align 8, !dbg !5039
  %dev68 = getelementptr inbounds %struct.acpi_device, %struct.acpi_device* %66, i32 0, i32 21, !dbg !5040
  %call69 = call i8* @dev_name(%struct.device* %dev68) #9, !dbg !5041
  %call70 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.7, i64 0, i64 0), i8* %call69) #10, !dbg !5042
  br label %if.end71, !dbg !5042

if.end71:                                         ; preds = %if.then67, %if.end64
  store i32 0, i32* %retval, align 4, !dbg !5043
  br label %return, !dbg !5043

err:                                              ; preds = %if.then62
  call void @llvm.dbg.label(metadata !5044), !dbg !5045
  call void @mutex_lock(%struct.mutex* @acpi_device_lock) #9, !dbg !5046
  %67 = load %struct.acpi_device*, %struct.acpi_device** %device.addr, align 8, !dbg !5047
  %parent72 = getelementptr inbounds %struct.acpi_device, %struct.acpi_device* %67, i32 0, i32 3, !dbg !5049
  %68 = load %struct.acpi_device*, %struct.acpi_device** %parent72, align 8, !dbg !5049
  %tobool73 = icmp ne %struct.acpi_device* %68, null, !dbg !5047
  br i1 %tobool73, label %if.then74, label %if.end76, !dbg !5050

if.then74:                                        ; preds = %err
  %69 = load %struct.acpi_device*, %struct.acpi_device** %device.addr, align 8, !dbg !5051
  %node75 = getelementptr inbounds %struct.acpi_device, %struct.acpi_device* %69, i32 0, i32 5, !dbg !5052
  call void @list_del(%struct.list_head* %node75) #9, !dbg !5053
  br label %if.end76, !dbg !5053

if.end76:                                         ; preds = %if.then74, %err
  %70 = load %struct.acpi_device*, %struct.acpi_device** %device.addr, align 8, !dbg !5054
  %wakeup_list77 = getelementptr inbounds %struct.acpi_device, %struct.acpi_device* %70, i32 0, i32 6, !dbg !5055
  call void @list_del(%struct.list_head* %wakeup_list77) #9, !dbg !5056
  call void @mutex_unlock(%struct.mutex* @acpi_device_lock) #9, !dbg !5057
  br label %err_detach, !dbg !5057

err_detach:                                       ; preds = %if.end76, %if.then8
  call void @llvm.dbg.label(metadata !5058), !dbg !5059
  %71 = load %struct.acpi_device*, %struct.acpi_device** %device.addr, align 8, !dbg !5060
  %handle78 = getelementptr inbounds %struct.acpi_device, %struct.acpi_device* %71, i32 0, i32 1, !dbg !5061
  %72 = load i8*, i8** %handle78, align 8, !dbg !5061
  %call79 = call i32 @acpi_detach_data(i8* %72, void (i8*, i8*)* @acpi_scan_drop_device) #9, !dbg !5062
  %73 = load i32, i32* %result, align 4, !dbg !5063
  store i32 %73, i32* %retval, align 4, !dbg !5064
  br label %return, !dbg !5064

return:                                           ; preds = %err_detach, %if.end71, %if.then3
  %74 = load i32, i32* %retval, align 4, !dbg !5065
  ret i32 %74, !dbg !5065
}

; Function Attrs: noredzone
declare dso_local i32 @acpi_attach_data(i8*, void (i8*, i8*)*, i8*) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @acpi_scan_drop_device(i8* %handle, i8* %context) #0 !dbg !4432 {
entry:
  %handle.addr = alloca i8*, align 8
  %context.addr = alloca i8*, align 8
  %adev = alloca %struct.acpi_device*, align 8
  store i8* %handle, i8** %handle.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %handle.addr, metadata !5066, metadata !DIExpression()), !dbg !5067
  store i8* %context, i8** %context.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %context.addr, metadata !5068, metadata !DIExpression()), !dbg !5069
  call void @llvm.dbg.declare(metadata %struct.acpi_device** %adev, metadata !5070, metadata !DIExpression()), !dbg !5071
  %0 = load i8*, i8** %context.addr, align 8, !dbg !5072
  %1 = bitcast i8* %0 to %struct.acpi_device*, !dbg !5072
  store %struct.acpi_device* %1, %struct.acpi_device** %adev, align 8, !dbg !5071
  call void @mutex_lock(%struct.mutex* @acpi_device_del_lock) #9, !dbg !5073
  %call = call i32 @list_empty(%struct.list_head* @acpi_device_del_list) #9, !dbg !5074
  %tobool = icmp ne i32 %call, 0, !dbg !5074
  br i1 %tobool, label %if.then, label %if.end, !dbg !5076

if.then:                                          ; preds = %entry
  %call1 = call zeroext i1 @acpi_queue_hotplug_work(%struct.work_struct* @acpi_scan_drop_device.work) #9, !dbg !5077
  br label %if.end, !dbg !5077

if.end:                                           ; preds = %if.then, %entry
  %2 = load %struct.acpi_device*, %struct.acpi_device** %adev, align 8, !dbg !5078
  %del_list = getelementptr inbounds %struct.acpi_device, %struct.acpi_device* %2, i32 0, i32 7, !dbg !5079
  call void @list_add_tail(%struct.list_head* %del_list, %struct.list_head* @acpi_device_del_list) #9, !dbg !5080
  %3 = load %struct.acpi_device*, %struct.acpi_device** %adev, align 8, !dbg !5081
  %handle2 = getelementptr inbounds %struct.acpi_device, %struct.acpi_device* %3, i32 0, i32 1, !dbg !5082
  store i8* bitcast ([512 x i64]* @empty_zero_page to i8*), i8** %handle2, align 8, !dbg !5083
  call void @mutex_unlock(%struct.mutex* @acpi_device_del_lock) #9, !dbg !5084
  ret void, !dbg !5085
}

; Function Attrs: noredzone
declare dso_local void @acpi_handle_printk(i8*, i8*, i8*, ...) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @INIT_LIST_HEAD(%struct.list_head* %list) #0 !dbg !5086 {
entry:
  %list.addr = alloca %struct.list_head*, align 8
  store %struct.list_head* %list, %struct.list_head** %list.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %list.addr, metadata !5089, metadata !DIExpression()), !dbg !5090
  br label %do.body, !dbg !5091

do.body:                                          ; preds = %entry
  br label %do.body1, !dbg !5092

do.body1:                                         ; preds = %do.body
  br label %do.end, !dbg !5094

do.end:                                           ; preds = %do.body1
  br label %do.body2, !dbg !5092

do.body2:                                         ; preds = %do.end
  %0 = load %struct.list_head*, %struct.list_head** %list.addr, align 8, !dbg !5096
  %1 = load %struct.list_head*, %struct.list_head** %list.addr, align 8, !dbg !5096
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %1, i32 0, i32 0, !dbg !5096
  store volatile %struct.list_head* %0, %struct.list_head** %next, align 8, !dbg !5096
  br label %do.end3, !dbg !5096

do.end3:                                          ; preds = %do.body2
  br label %do.end4, !dbg !5092

do.end4:                                          ; preds = %do.end3
  %2 = load %struct.list_head*, %struct.list_head** %list.addr, align 8, !dbg !5098
  %3 = load %struct.list_head*, %struct.list_head** %list.addr, align 8, !dbg !5099
  %prev = getelementptr inbounds %struct.list_head, %struct.list_head* %3, i32 0, i32 1, !dbg !5100
  store %struct.list_head* %2, %struct.list_head** %prev, align 8, !dbg !5101
  ret void, !dbg !5102
}

; Function Attrs: noredzone
declare dso_local void @__mutex_init(%struct.mutex*, i8*, %struct.lock_class_key*) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @kzalloc(i64 %size, i32 %flags) #0 !dbg !5103 {
entry:
  %s.addr.i.i = alloca %struct.kmem_cache*, align 8
  call void @llvm.dbg.declare(metadata %struct.kmem_cache** %s.addr.i.i, metadata !5106, metadata !DIExpression()), !dbg !5110
  %flags.addr.i17.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i17.i, metadata !5116, metadata !DIExpression()), !dbg !5117
  %size.addr.i18.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i18.i, metadata !5118, metadata !DIExpression()), !dbg !5119
  %ret.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %ret.i.i, metadata !5120, metadata !DIExpression()), !dbg !5121
  %retval.i12.i = alloca i32, align 4
  %flags.addr.i13.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i13.i, metadata !5122, metadata !DIExpression()), !dbg !5126
  %retval.i.i = alloca i32, align 4
  %size.addr.i11.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i11.i, metadata !5128, metadata !DIExpression()), !dbg !5132
  %size.addr.i.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i.i, metadata !5134, metadata !DIExpression()), !dbg !5138
  %flags.addr.i.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i.i.i, metadata !5143, metadata !DIExpression()), !dbg !5144
  %order.addr.i.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %order.addr.i.i.i, metadata !5145, metadata !DIExpression()), !dbg !5146
  %size.addr.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i, metadata !5147, metadata !DIExpression()), !dbg !5148
  %flags.addr.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i.i, metadata !5149, metadata !DIExpression()), !dbg !5150
  %order.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %order.i.i, metadata !5151, metadata !DIExpression()), !dbg !5152
  %retval.i = alloca i8*, align 8
  %size.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i, metadata !5153, metadata !DIExpression()), !dbg !5154
  %flags.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i, metadata !5155, metadata !DIExpression()), !dbg !5156
  %index.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %index.i, metadata !5157, metadata !DIExpression()), !dbg !5158
  %size.addr = alloca i64, align 8
  %flags.addr = alloca i32, align 4
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !5159, metadata !DIExpression()), !dbg !5160
  store i32 %flags, i32* %flags.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr, metadata !5161, metadata !DIExpression()), !dbg !5162
  %0 = load i64, i64* %size.addr, align 8, !dbg !5163
  %1 = load i32, i32* %flags.addr, align 4, !dbg !5164
  %or = or i32 %1, 256, !dbg !5165
  store i64 %0, i64* %size.addr.i, align 8
  store i32 %or, i32* %flags.addr.i, align 4
  %2 = load i64, i64* %size.addr.i, align 8, !dbg !5166
  %3 = call i1 @llvm.is.constant.i64(i64 %2) #11, !dbg !5167
  br i1 %3, label %if.then.i, label %if.end9.i, !dbg !5168

if.then.i:                                        ; preds = %entry
  %4 = load i64, i64* %size.addr.i, align 8, !dbg !5169
  %cmp.i = icmp ugt i64 %4, 8192, !dbg !5170
  br i1 %cmp.i, label %if.then1.i, label %if.end.i, !dbg !5171

if.then1.i:                                       ; preds = %if.then.i
  %5 = load i64, i64* %size.addr.i, align 8, !dbg !5172
  %6 = load i32, i32* %flags.addr.i, align 4, !dbg !5173
  store i64 %5, i64* %size.addr.i.i, align 8
  store i32 %6, i32* %flags.addr.i.i, align 4
  %7 = load i64, i64* %size.addr.i.i, align 8, !dbg !5174
  %call.i.i = call i32 @get_order(i64 %7) #12, !dbg !5175
  store i32 %call.i.i, i32* %order.i.i, align 4, !dbg !5152
  %8 = load i64, i64* %size.addr.i.i, align 8, !dbg !5176
  %9 = load i32, i32* %flags.addr.i.i, align 4, !dbg !5177
  %10 = load i32, i32* %order.i.i, align 4, !dbg !5178
  store i64 %8, i64* %size.addr.i.i.i, align 8
  store i32 %9, i32* %flags.addr.i.i.i, align 4
  store i32 %10, i32* %order.addr.i.i.i, align 4
  %11 = load i64, i64* %size.addr.i.i.i, align 8, !dbg !5179
  %12 = load i32, i32* %flags.addr.i.i.i, align 4, !dbg !5180
  %13 = load i32, i32* %order.addr.i.i.i, align 4, !dbg !5181
  %call.i.i.i = call noalias i8* @kmalloc_order(i64 %11, i32 %12, i32 %13) #13, !dbg !5182
  %ptrint.i.i.i = ptrtoint i8* %call.i.i.i to i64, !dbg !5182
  %maskedptr.i.i.i = and i64 %ptrint.i.i.i, 4095, !dbg !5182
  %maskcond.i.i.i = icmp eq i64 %maskedptr.i.i.i, 0, !dbg !5182
  call void @llvm.assume(i1 %maskcond.i.i.i) #11, !dbg !5182
  store i8* %call.i.i.i, i8** %retval.i, align 8, !dbg !5183
  br label %kmalloc.exit, !dbg !5183

if.end.i:                                         ; preds = %if.then.i
  %14 = load i64, i64* %size.addr.i, align 8, !dbg !5184
  store i64 %14, i64* %size.addr.i11.i, align 8
  %15 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5185
  %tobool.i.i = icmp ne i64 %15, 0, !dbg !5185
  br i1 %tobool.i.i, label %if.end.i.i, label %if.then.i.i, !dbg !5187

if.then.i.i:                                      ; preds = %if.end.i
  store i32 0, i32* %retval.i.i, align 4, !dbg !5188
  br label %kmalloc_index.exit.i, !dbg !5188

if.end.i.i:                                       ; preds = %if.end.i
  %16 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5189
  %cmp.i.i = icmp ule i64 %16, 8, !dbg !5191
  br i1 %cmp.i.i, label %if.then1.i.i, label %if.end2.i.i, !dbg !5192

if.then1.i.i:                                     ; preds = %if.end.i.i
  store i32 3, i32* %retval.i.i, align 4, !dbg !5193
  br label %kmalloc_index.exit.i, !dbg !5193

if.end2.i.i:                                      ; preds = %if.end.i.i
  %17 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5194
  %cmp3.i.i = icmp ugt i64 %17, 64, !dbg !5196
  br i1 %cmp3.i.i, label %land.lhs.true.i.i, label %if.end6.i.i, !dbg !5197

land.lhs.true.i.i:                                ; preds = %if.end2.i.i
  %18 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5198
  %cmp4.i.i = icmp ule i64 %18, 96, !dbg !5199
  br i1 %cmp4.i.i, label %if.then5.i.i, label %if.end6.i.i, !dbg !5200

if.then5.i.i:                                     ; preds = %land.lhs.true.i.i
  store i32 1, i32* %retval.i.i, align 4, !dbg !5201
  br label %kmalloc_index.exit.i, !dbg !5201

if.end6.i.i:                                      ; preds = %land.lhs.true.i.i, %if.end2.i.i
  %19 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5202
  %cmp7.i.i = icmp ugt i64 %19, 128, !dbg !5204
  br i1 %cmp7.i.i, label %land.lhs.true8.i.i, label %if.end11.i.i, !dbg !5205

land.lhs.true8.i.i:                               ; preds = %if.end6.i.i
  %20 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5206
  %cmp9.i.i = icmp ule i64 %20, 192, !dbg !5207
  br i1 %cmp9.i.i, label %if.then10.i.i, label %if.end11.i.i, !dbg !5208

if.then10.i.i:                                    ; preds = %land.lhs.true8.i.i
  store i32 2, i32* %retval.i.i, align 4, !dbg !5209
  br label %kmalloc_index.exit.i, !dbg !5209

if.end11.i.i:                                     ; preds = %land.lhs.true8.i.i, %if.end6.i.i
  %21 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5210
  %cmp12.i.i = icmp ule i64 %21, 8, !dbg !5212
  br i1 %cmp12.i.i, label %if.then13.i.i, label %if.end14.i.i, !dbg !5213

if.then13.i.i:                                    ; preds = %if.end11.i.i
  store i32 3, i32* %retval.i.i, align 4, !dbg !5214
  br label %kmalloc_index.exit.i, !dbg !5214

if.end14.i.i:                                     ; preds = %if.end11.i.i
  %22 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5215
  %cmp15.i.i = icmp ule i64 %22, 16, !dbg !5217
  br i1 %cmp15.i.i, label %if.then16.i.i, label %if.end17.i.i, !dbg !5218

if.then16.i.i:                                    ; preds = %if.end14.i.i
  store i32 4, i32* %retval.i.i, align 4, !dbg !5219
  br label %kmalloc_index.exit.i, !dbg !5219

if.end17.i.i:                                     ; preds = %if.end14.i.i
  %23 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5220
  %cmp18.i.i = icmp ule i64 %23, 32, !dbg !5222
  br i1 %cmp18.i.i, label %if.then19.i.i, label %if.end20.i.i, !dbg !5223

if.then19.i.i:                                    ; preds = %if.end17.i.i
  store i32 5, i32* %retval.i.i, align 4, !dbg !5224
  br label %kmalloc_index.exit.i, !dbg !5224

if.end20.i.i:                                     ; preds = %if.end17.i.i
  %24 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5225
  %cmp21.i.i = icmp ule i64 %24, 64, !dbg !5227
  br i1 %cmp21.i.i, label %if.then22.i.i, label %if.end23.i.i, !dbg !5228

if.then22.i.i:                                    ; preds = %if.end20.i.i
  store i32 6, i32* %retval.i.i, align 4, !dbg !5229
  br label %kmalloc_index.exit.i, !dbg !5229

if.end23.i.i:                                     ; preds = %if.end20.i.i
  %25 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5230
  %cmp24.i.i = icmp ule i64 %25, 128, !dbg !5232
  br i1 %cmp24.i.i, label %if.then25.i.i, label %if.end26.i.i, !dbg !5233

if.then25.i.i:                                    ; preds = %if.end23.i.i
  store i32 7, i32* %retval.i.i, align 4, !dbg !5234
  br label %kmalloc_index.exit.i, !dbg !5234

if.end26.i.i:                                     ; preds = %if.end23.i.i
  %26 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5235
  %cmp27.i.i = icmp ule i64 %26, 256, !dbg !5237
  br i1 %cmp27.i.i, label %if.then28.i.i, label %if.end29.i.i, !dbg !5238

if.then28.i.i:                                    ; preds = %if.end26.i.i
  store i32 8, i32* %retval.i.i, align 4, !dbg !5239
  br label %kmalloc_index.exit.i, !dbg !5239

if.end29.i.i:                                     ; preds = %if.end26.i.i
  %27 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5240
  %cmp30.i.i = icmp ule i64 %27, 512, !dbg !5242
  br i1 %cmp30.i.i, label %if.then31.i.i, label %if.end32.i.i, !dbg !5243

if.then31.i.i:                                    ; preds = %if.end29.i.i
  store i32 9, i32* %retval.i.i, align 4, !dbg !5244
  br label %kmalloc_index.exit.i, !dbg !5244

if.end32.i.i:                                     ; preds = %if.end29.i.i
  %28 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5245
  %cmp33.i.i = icmp ule i64 %28, 1024, !dbg !5247
  br i1 %cmp33.i.i, label %if.then34.i.i, label %if.end35.i.i, !dbg !5248

if.then34.i.i:                                    ; preds = %if.end32.i.i
  store i32 10, i32* %retval.i.i, align 4, !dbg !5249
  br label %kmalloc_index.exit.i, !dbg !5249

if.end35.i.i:                                     ; preds = %if.end32.i.i
  %29 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5250
  %cmp36.i.i = icmp ule i64 %29, 2048, !dbg !5252
  br i1 %cmp36.i.i, label %if.then37.i.i, label %if.end38.i.i, !dbg !5253

if.then37.i.i:                                    ; preds = %if.end35.i.i
  store i32 11, i32* %retval.i.i, align 4, !dbg !5254
  br label %kmalloc_index.exit.i, !dbg !5254

if.end38.i.i:                                     ; preds = %if.end35.i.i
  %30 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5255
  %cmp39.i.i = icmp ule i64 %30, 4096, !dbg !5257
  br i1 %cmp39.i.i, label %if.then40.i.i, label %if.end41.i.i, !dbg !5258

if.then40.i.i:                                    ; preds = %if.end38.i.i
  store i32 12, i32* %retval.i.i, align 4, !dbg !5259
  br label %kmalloc_index.exit.i, !dbg !5259

if.end41.i.i:                                     ; preds = %if.end38.i.i
  %31 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5260
  %cmp42.i.i = icmp ule i64 %31, 8192, !dbg !5262
  br i1 %cmp42.i.i, label %if.then43.i.i, label %if.end44.i.i, !dbg !5263

if.then43.i.i:                                    ; preds = %if.end41.i.i
  store i32 13, i32* %retval.i.i, align 4, !dbg !5264
  br label %kmalloc_index.exit.i, !dbg !5264

if.end44.i.i:                                     ; preds = %if.end41.i.i
  %32 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5265
  %cmp45.i.i = icmp ule i64 %32, 16384, !dbg !5267
  br i1 %cmp45.i.i, label %if.then46.i.i, label %if.end47.i.i, !dbg !5268

if.then46.i.i:                                    ; preds = %if.end44.i.i
  store i32 14, i32* %retval.i.i, align 4, !dbg !5269
  br label %kmalloc_index.exit.i, !dbg !5269

if.end47.i.i:                                     ; preds = %if.end44.i.i
  %33 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5270
  %cmp48.i.i = icmp ule i64 %33, 32768, !dbg !5272
  br i1 %cmp48.i.i, label %if.then49.i.i, label %if.end50.i.i, !dbg !5273

if.then49.i.i:                                    ; preds = %if.end47.i.i
  store i32 15, i32* %retval.i.i, align 4, !dbg !5274
  br label %kmalloc_index.exit.i, !dbg !5274

if.end50.i.i:                                     ; preds = %if.end47.i.i
  %34 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5275
  %cmp51.i.i = icmp ule i64 %34, 65536, !dbg !5277
  br i1 %cmp51.i.i, label %if.then52.i.i, label %if.end53.i.i, !dbg !5278

if.then52.i.i:                                    ; preds = %if.end50.i.i
  store i32 16, i32* %retval.i.i, align 4, !dbg !5279
  br label %kmalloc_index.exit.i, !dbg !5279

if.end53.i.i:                                     ; preds = %if.end50.i.i
  %35 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5280
  %cmp54.i.i = icmp ule i64 %35, 131072, !dbg !5282
  br i1 %cmp54.i.i, label %if.then55.i.i, label %if.end56.i.i, !dbg !5283

if.then55.i.i:                                    ; preds = %if.end53.i.i
  store i32 17, i32* %retval.i.i, align 4, !dbg !5284
  br label %kmalloc_index.exit.i, !dbg !5284

if.end56.i.i:                                     ; preds = %if.end53.i.i
  %36 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5285
  %cmp57.i.i = icmp ule i64 %36, 262144, !dbg !5287
  br i1 %cmp57.i.i, label %if.then58.i.i, label %if.end59.i.i, !dbg !5288

if.then58.i.i:                                    ; preds = %if.end56.i.i
  store i32 18, i32* %retval.i.i, align 4, !dbg !5289
  br label %kmalloc_index.exit.i, !dbg !5289

if.end59.i.i:                                     ; preds = %if.end56.i.i
  %37 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5290
  %cmp60.i.i = icmp ule i64 %37, 524288, !dbg !5292
  br i1 %cmp60.i.i, label %if.then61.i.i, label %if.end62.i.i, !dbg !5293

if.then61.i.i:                                    ; preds = %if.end59.i.i
  store i32 19, i32* %retval.i.i, align 4, !dbg !5294
  br label %kmalloc_index.exit.i, !dbg !5294

if.end62.i.i:                                     ; preds = %if.end59.i.i
  %38 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5295
  %cmp63.i.i = icmp ule i64 %38, 1048576, !dbg !5297
  br i1 %cmp63.i.i, label %if.then64.i.i, label %if.end65.i.i, !dbg !5298

if.then64.i.i:                                    ; preds = %if.end62.i.i
  store i32 20, i32* %retval.i.i, align 4, !dbg !5299
  br label %kmalloc_index.exit.i, !dbg !5299

if.end65.i.i:                                     ; preds = %if.end62.i.i
  %39 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5300
  %cmp66.i.i = icmp ule i64 %39, 2097152, !dbg !5302
  br i1 %cmp66.i.i, label %if.then67.i.i, label %if.end68.i.i, !dbg !5303

if.then67.i.i:                                    ; preds = %if.end65.i.i
  store i32 21, i32* %retval.i.i, align 4, !dbg !5304
  br label %kmalloc_index.exit.i, !dbg !5304

if.end68.i.i:                                     ; preds = %if.end65.i.i
  %40 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5305
  %cmp69.i.i = icmp ule i64 %40, 4194304, !dbg !5307
  br i1 %cmp69.i.i, label %if.then70.i.i, label %if.end71.i.i, !dbg !5308

if.then70.i.i:                                    ; preds = %if.end68.i.i
  store i32 22, i32* %retval.i.i, align 4, !dbg !5309
  br label %kmalloc_index.exit.i, !dbg !5309

if.end71.i.i:                                     ; preds = %if.end68.i.i
  %41 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5310
  %cmp72.i.i = icmp ule i64 %41, 8388608, !dbg !5312
  br i1 %cmp72.i.i, label %if.then73.i.i, label %if.end74.i.i, !dbg !5313

if.then73.i.i:                                    ; preds = %if.end71.i.i
  store i32 23, i32* %retval.i.i, align 4, !dbg !5314
  br label %kmalloc_index.exit.i, !dbg !5314

if.end74.i.i:                                     ; preds = %if.end71.i.i
  %42 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5315
  %cmp75.i.i = icmp ule i64 %42, 16777216, !dbg !5317
  br i1 %cmp75.i.i, label %if.then76.i.i, label %if.end77.i.i, !dbg !5318

if.then76.i.i:                                    ; preds = %if.end74.i.i
  store i32 24, i32* %retval.i.i, align 4, !dbg !5319
  br label %kmalloc_index.exit.i, !dbg !5319

if.end77.i.i:                                     ; preds = %if.end74.i.i
  %43 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5320
  %cmp78.i.i = icmp ule i64 %43, 33554432, !dbg !5322
  br i1 %cmp78.i.i, label %if.then79.i.i, label %if.end80.i.i, !dbg !5323

if.then79.i.i:                                    ; preds = %if.end77.i.i
  store i32 25, i32* %retval.i.i, align 4, !dbg !5324
  br label %kmalloc_index.exit.i, !dbg !5324

if.end80.i.i:                                     ; preds = %if.end77.i.i
  %44 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5325
  %cmp81.i.i = icmp ule i64 %44, 67108864, !dbg !5327
  br i1 %cmp81.i.i, label %if.then82.i.i, label %if.end83.i.i, !dbg !5328

if.then82.i.i:                                    ; preds = %if.end80.i.i
  store i32 26, i32* %retval.i.i, align 4, !dbg !5329
  br label %kmalloc_index.exit.i, !dbg !5329

if.end83.i.i:                                     ; preds = %if.end80.i.i
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.90, i64 0, i64 0), i32 382, i32 0, i64 12) #11, !dbg !5330, !srcloc !5333
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.unreachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 105) #11, !dbg !5334, !srcloc !5337
  unreachable, !dbg !5338

kmalloc_index.exit.i:                             ; preds = %if.then82.i.i, %if.then79.i.i, %if.then76.i.i, %if.then73.i.i, %if.then70.i.i, %if.then67.i.i, %if.then64.i.i, %if.then61.i.i, %if.then58.i.i, %if.then55.i.i, %if.then52.i.i, %if.then49.i.i, %if.then46.i.i, %if.then43.i.i, %if.then40.i.i, %if.then37.i.i, %if.then34.i.i, %if.then31.i.i, %if.then28.i.i, %if.then25.i.i, %if.then22.i.i, %if.then19.i.i, %if.then16.i.i, %if.then13.i.i, %if.then10.i.i, %if.then5.i.i, %if.then1.i.i, %if.then.i.i
  %45 = load i32, i32* %retval.i.i, align 4, !dbg !5339
  store i32 %45, i32* %index.i, align 4, !dbg !5340
  %46 = load i32, i32* %index.i, align 4, !dbg !5341
  %tobool.i = icmp ne i32 %46, 0, !dbg !5341
  br i1 %tobool.i, label %if.end4.i, label %if.then3.i, !dbg !5343

if.then3.i:                                       ; preds = %kmalloc_index.exit.i
  store i8* inttoptr (i64 16 to i8*), i8** %retval.i, align 8, !dbg !5344
  br label %kmalloc.exit, !dbg !5344

if.end4.i:                                        ; preds = %kmalloc_index.exit.i
  %47 = load i32, i32* %flags.addr.i, align 4, !dbg !5345
  store i32 %47, i32* %flags.addr.i13.i, align 4
  %48 = load i32, i32* %flags.addr.i13.i, align 4, !dbg !5346
  %and.i.i = and i32 %48, 17, !dbg !5346
  %cmp.i14.i = icmp eq i32 %and.i.i, 0, !dbg !5346
  %lnot.i.i = xor i1 %cmp.i14.i, true, !dbg !5346
  %lnot.ext.i.i = zext i1 %cmp.i14.i to i32, !dbg !5346
  %conv.i.i = sext i32 %lnot.ext.i.i to i64, !dbg !5346
  br i1 %cmp.i14.i, label %if.then.i15.i, label %if.end.i16.i, !dbg !5348

if.then.i15.i:                                    ; preds = %if.end4.i
  store i32 0, i32* %retval.i12.i, align 4, !dbg !5349
  br label %kmalloc_type.exit.i, !dbg !5349

if.end.i16.i:                                     ; preds = %if.end4.i
  %49 = load i32, i32* %flags.addr.i13.i, align 4, !dbg !5350
  %and2.i.i = and i32 %49, 1, !dbg !5351
  %tobool3.i.i = icmp ne i32 %and2.i.i, 0, !dbg !5350
  %50 = zext i1 %tobool3.i.i to i64, !dbg !5350
  %cond.i.i = select i1 %tobool3.i.i, i32 2, i32 1, !dbg !5350
  store i32 %cond.i.i, i32* %retval.i12.i, align 4, !dbg !5352
  br label %kmalloc_type.exit.i, !dbg !5352

kmalloc_type.exit.i:                              ; preds = %if.end.i16.i, %if.then.i15.i
  %51 = load i32, i32* %retval.i12.i, align 4, !dbg !5353
  %idxprom.i = zext i32 %51 to i64, !dbg !5354
  %arrayidx.i = getelementptr [3 x [14 x %struct.kmem_cache*]], [3 x [14 x %struct.kmem_cache*]]* @kmalloc_caches, i64 0, i64 %idxprom.i, !dbg !5354
  %52 = load i32, i32* %index.i, align 4, !dbg !5355
  %idxprom6.i = zext i32 %52 to i64, !dbg !5354
  %arrayidx7.i = getelementptr [14 x %struct.kmem_cache*], [14 x %struct.kmem_cache*]* %arrayidx.i, i64 0, i64 %idxprom6.i, !dbg !5354
  %53 = load %struct.kmem_cache*, %struct.kmem_cache** %arrayidx7.i, align 8, !dbg !5354
  %54 = load i32, i32* %flags.addr.i, align 4, !dbg !5356
  %55 = load i64, i64* %size.addr.i, align 8, !dbg !5357
  store %struct.kmem_cache* %53, %struct.kmem_cache** %s.addr.i.i, align 8
  store i32 %54, i32* %flags.addr.i17.i, align 4
  store i64 %55, i64* %size.addr.i18.i, align 8
  %56 = load %struct.kmem_cache*, %struct.kmem_cache** %s.addr.i.i, align 8, !dbg !5358
  %57 = load i32, i32* %flags.addr.i17.i, align 4, !dbg !5359
  %call.i19.i = call noalias i8* @kmem_cache_alloc(%struct.kmem_cache* %56, i32 %57) #13, !dbg !5360
  %ptrint.i.i = ptrtoint i8* %call.i19.i to i64, !dbg !5360
  %maskedptr.i.i = and i64 %ptrint.i.i, 7, !dbg !5360
  %maskcond.i.i = icmp eq i64 %maskedptr.i.i, 0, !dbg !5360
  call void @llvm.assume(i1 %maskcond.i.i) #11, !dbg !5360
  store i8* %call.i19.i, i8** %ret.i.i, align 8, !dbg !5121
  %58 = load %struct.kmem_cache*, %struct.kmem_cache** %s.addr.i.i, align 8, !dbg !5361
  %59 = load i8*, i8** %ret.i.i, align 8, !dbg !5362
  %60 = load i64, i64* %size.addr.i18.i, align 8, !dbg !5363
  %61 = load i32, i32* %flags.addr.i17.i, align 4, !dbg !5364
  %call1.i.i = call i8* @kasan_kmalloc(%struct.kmem_cache* %58, i8* %59, i64 %60, i32 %61) #13, !dbg !5365
  store i8* %call1.i.i, i8** %ret.i.i, align 8, !dbg !5366
  %62 = load i8*, i8** %ret.i.i, align 8, !dbg !5367
  store i8* %62, i8** %retval.i, align 8, !dbg !5368
  br label %kmalloc.exit, !dbg !5368

if.end9.i:                                        ; preds = %entry
  %63 = load i64, i64* %size.addr.i, align 8, !dbg !5369
  %64 = load i32, i32* %flags.addr.i, align 4, !dbg !5370
  %call10.i = call noalias i8* @__kmalloc(i64 %63, i32 %64) #13, !dbg !5371
  %ptrint.i = ptrtoint i8* %call10.i to i64, !dbg !5371
  %maskedptr.i = and i64 %ptrint.i, 7, !dbg !5371
  %maskcond.i = icmp eq i64 %maskedptr.i, 0, !dbg !5371
  call void @llvm.assume(i1 %maskcond.i) #11, !dbg !5371
  store i8* %call10.i, i8** %retval.i, align 8, !dbg !5372
  br label %kmalloc.exit, !dbg !5372

kmalloc.exit:                                     ; preds = %if.then1.i, %if.then3.i, %kmalloc_type.exit.i, %if.end9.i
  %65 = load i8*, i8** %retval.i, align 8, !dbg !5373
  ret i8* %65, !dbg !5374
}

; Function Attrs: cold noredzone
declare dso_local i32 @printk(i8*, ...) #4

; Function Attrs: noredzone
declare dso_local i32 @strcmp(i8*, i8*) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i8* @acpi_device_hid(%struct.acpi_device* %device) #0 !dbg !5375 {
entry:
  %retval = alloca i8*, align 8
  %device.addr = alloca %struct.acpi_device*, align 8
  %hid = alloca %struct.acpi_hardware_id*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.acpi_hardware_id*, align 8
  store %struct.acpi_device* %device, %struct.acpi_device** %device.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.acpi_device** %device.addr, metadata !5378, metadata !DIExpression()), !dbg !5379
  call void @llvm.dbg.declare(metadata %struct.acpi_hardware_id** %hid, metadata !5380, metadata !DIExpression()), !dbg !5381
  %0 = load %struct.acpi_device*, %struct.acpi_device** %device.addr, align 8, !dbg !5382
  %pnp = getelementptr inbounds %struct.acpi_device, %struct.acpi_device* %0, i32 0, i32 10, !dbg !5384
  %ids = getelementptr inbounds %struct.acpi_device_pnp, %struct.acpi_device_pnp* %pnp, i32 0, i32 4, !dbg !5385
  %call = call i32 @list_empty(%struct.list_head* %ids) #9, !dbg !5386
  %tobool = icmp ne i32 %call, 0, !dbg !5386
  br i1 %tobool, label %if.then, label %if.end, !dbg !5387

if.then:                                          ; preds = %entry
  %1 = load i8*, i8** @dummy_hid, align 8, !dbg !5388
  store i8* %1, i8** %retval, align 8, !dbg !5389
  br label %return, !dbg !5389

if.end:                                           ; preds = %entry
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !5390, metadata !DIExpression()), !dbg !5392
  %2 = load %struct.acpi_device*, %struct.acpi_device** %device.addr, align 8, !dbg !5392
  %pnp1 = getelementptr inbounds %struct.acpi_device, %struct.acpi_device* %2, i32 0, i32 10, !dbg !5392
  %ids2 = getelementptr inbounds %struct.acpi_device_pnp, %struct.acpi_device_pnp* %pnp1, i32 0, i32 4, !dbg !5392
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %ids2, i32 0, i32 0, !dbg !5392
  %3 = load %struct.list_head*, %struct.list_head** %next, align 8, !dbg !5392
  %4 = bitcast %struct.list_head* %3 to i8*, !dbg !5392
  store i8* %4, i8** %__mptr, align 8, !dbg !5392
  br label %do.body, !dbg !5392

do.body:                                          ; preds = %if.end
  br label %do.end, !dbg !5393

do.end:                                           ; preds = %do.body
  %5 = load i8*, i8** %__mptr, align 8, !dbg !5392
  %add.ptr = getelementptr i8, i8* %5, i64 0, !dbg !5392
  %6 = bitcast i8* %add.ptr to %struct.acpi_hardware_id*, !dbg !5392
  store %struct.acpi_hardware_id* %6, %struct.acpi_hardware_id** %tmp, align 8, !dbg !5393
  %7 = load %struct.acpi_hardware_id*, %struct.acpi_hardware_id** %tmp, align 8, !dbg !5392
  store %struct.acpi_hardware_id* %7, %struct.acpi_hardware_id** %hid, align 8, !dbg !5395
  %8 = load %struct.acpi_hardware_id*, %struct.acpi_hardware_id** %hid, align 8, !dbg !5396
  %id = getelementptr inbounds %struct.acpi_hardware_id, %struct.acpi_hardware_id* %8, i32 0, i32 1, !dbg !5397
  %9 = load i8*, i8** %id, align 8, !dbg !5397
  store i8* %9, i8** %retval, align 8, !dbg !5398
  br label %return, !dbg !5398

return:                                           ; preds = %do.end, %if.then
  %10 = load i8*, i8** %retval, align 8, !dbg !5399
  ret i8* %10, !dbg !5399
}

; Function Attrs: noredzone
declare dso_local void @kfree(i8*) #1

; Function Attrs: noredzone
declare dso_local i8* @strcpy(i8*, i8*) #1

; Function Attrs: noredzone
declare dso_local i32 @dev_set_name(%struct.device*, i8*, ...) #1

; Function Attrs: noredzone
declare dso_local i32 @device_add(%struct.device*) #1

; Function Attrs: cold noredzone
declare dso_local void @_dev_err(%struct.device*, i8*, ...) #4

; Function Attrs: noredzone
declare dso_local i32 @acpi_device_setup_files(%struct.acpi_device*) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @dev_name(%struct.device* %dev) #0 !dbg !5400 {
entry:
  %retval = alloca i8*, align 8
  %dev.addr = alloca %struct.device*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !5403, metadata !DIExpression()), !dbg !5404
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !5405
  %init_name = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 3, !dbg !5407
  %1 = load i8*, i8** %init_name, align 8, !dbg !5407
  %tobool = icmp ne i8* %1, null, !dbg !5405
  br i1 %tobool, label %if.then, label %if.end, !dbg !5408

if.then:                                          ; preds = %entry
  %2 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !5409
  %init_name1 = getelementptr inbounds %struct.device, %struct.device* %2, i32 0, i32 3, !dbg !5410
  %3 = load i8*, i8** %init_name1, align 8, !dbg !5410
  store i8* %3, i8** %retval, align 8, !dbg !5411
  br label %return, !dbg !5411

if.end:                                           ; preds = %entry
  %4 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !5412
  %kobj = getelementptr inbounds %struct.device, %struct.device* %4, i32 0, i32 0, !dbg !5413
  %call = call i8* @kobject_name(%struct.kobject* %kobj) #9, !dbg !5414
  store i8* %call, i8** %retval, align 8, !dbg !5415
  br label %return, !dbg !5415

return:                                           ; preds = %if.end, %if.then
  %5 = load i8*, i8** %retval, align 8, !dbg !5416
  ret i8* %5, !dbg !5416
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @list_del(%struct.list_head* %entry1) #0 !dbg !5417 {
entry:
  %entry.addr = alloca %struct.list_head*, align 8
  store %struct.list_head* %entry1, %struct.list_head** %entry.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %entry.addr, metadata !5418, metadata !DIExpression()), !dbg !5419
  %0 = load %struct.list_head*, %struct.list_head** %entry.addr, align 8, !dbg !5420
  call void @__list_del_entry(%struct.list_head* %0) #9, !dbg !5421
  %1 = load %struct.list_head*, %struct.list_head** %entry.addr, align 8, !dbg !5422
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %1, i32 0, i32 0, !dbg !5423
  store %struct.list_head* bitcast (i8* getelementptr (i8, i8* inttoptr (i64 256 to i8*), i64 -2401263026318606336) to %struct.list_head*), %struct.list_head** %next, align 8, !dbg !5424
  %2 = load %struct.list_head*, %struct.list_head** %entry.addr, align 8, !dbg !5425
  %prev = getelementptr inbounds %struct.list_head, %struct.list_head* %2, i32 0, i32 1, !dbg !5426
  store %struct.list_head* bitcast (i8* getelementptr (i8, i8* inttoptr (i64 290 to i8*), i64 -2401263026318606336) to %struct.list_head*), %struct.list_head** %prev, align 8, !dbg !5427
  ret void, !dbg !5428
}

; Function Attrs: noredzone
declare dso_local i32 @acpi_detach_data(i8*, void (i8*, i8*)*) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @acpi_bus_get_ejd(i8* %handle, i8** %ejd) #0 !dbg !5429 {
entry:
  %retval = alloca i32, align 4
  %handle.addr = alloca i8*, align 8
  %ejd.addr = alloca i8**, align 8
  %status = alloca i32, align 4
  %tmp = alloca i8*, align 8
  %buffer = alloca %struct.acpi_buffer, align 8
  %obj = alloca %union.acpi_object*, align 8
  store i8* %handle, i8** %handle.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %handle.addr, metadata !5433, metadata !DIExpression()), !dbg !5434
  store i8** %ejd, i8*** %ejd.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %ejd.addr, metadata !5435, metadata !DIExpression()), !dbg !5436
  call void @llvm.dbg.declare(metadata i32* %status, metadata !5437, metadata !DIExpression()), !dbg !5438
  call void @llvm.dbg.declare(metadata i8** %tmp, metadata !5439, metadata !DIExpression()), !dbg !5440
  call void @llvm.dbg.declare(metadata %struct.acpi_buffer* %buffer, metadata !5441, metadata !DIExpression()), !dbg !5446
  %0 = bitcast %struct.acpi_buffer* %buffer to i8*, !dbg !5446
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %0, i8* align 8 bitcast (%struct.acpi_buffer* @__const.acpi_bus_get_ejd.buffer to i8*), i64 16, i1 false), !dbg !5446
  call void @llvm.dbg.declare(metadata %union.acpi_object** %obj, metadata !5447, metadata !DIExpression()), !dbg !5448
  %1 = load i8*, i8** %handle.addr, align 8, !dbg !5449
  %call = call i32 @acpi_get_handle(i8* %1, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.8, i64 0, i64 0), i8** %tmp) #9, !dbg !5450
  store i32 %call, i32* %status, align 4, !dbg !5451
  %2 = load i32, i32* %status, align 4, !dbg !5452
  %tobool = icmp ne i32 %2, 0, !dbg !5452
  br i1 %tobool, label %if.then, label %if.end, !dbg !5454

if.then:                                          ; preds = %entry
  %3 = load i32, i32* %status, align 4, !dbg !5455
  store i32 %3, i32* %retval, align 4, !dbg !5456
  br label %return, !dbg !5456

if.end:                                           ; preds = %entry
  %4 = load i8*, i8** %handle.addr, align 8, !dbg !5457
  %call1 = call i32 @acpi_evaluate_object(i8* %4, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.8, i64 0, i64 0), %struct.acpi_object_list* null, %struct.acpi_buffer* %buffer) #9, !dbg !5458
  store i32 %call1, i32* %status, align 4, !dbg !5459
  %5 = load i32, i32* %status, align 4, !dbg !5460
  %tobool2 = icmp ne i32 %5, 0, !dbg !5460
  br i1 %tobool2, label %if.end7, label %if.then3, !dbg !5462

if.then3:                                         ; preds = %if.end
  %pointer = getelementptr inbounds %struct.acpi_buffer, %struct.acpi_buffer* %buffer, i32 0, i32 1, !dbg !5463
  %6 = load i8*, i8** %pointer, align 8, !dbg !5463
  %7 = bitcast i8* %6 to %union.acpi_object*, !dbg !5465
  store %union.acpi_object* %7, %union.acpi_object** %obj, align 8, !dbg !5466
  %8 = load %union.acpi_object*, %union.acpi_object** %obj, align 8, !dbg !5467
  %string = bitcast %union.acpi_object* %8 to %struct.anon.66*, !dbg !5468
  %pointer4 = getelementptr inbounds %struct.anon.66, %struct.anon.66* %string, i32 0, i32 2, !dbg !5469
  %9 = load i8*, i8** %pointer4, align 8, !dbg !5469
  %10 = load i8**, i8*** %ejd.addr, align 8, !dbg !5470
  %call5 = call i32 @acpi_get_handle(i8* inttoptr (i64 -1 to i8*), i8* %9, i8** %10) #9, !dbg !5471
  store i32 %call5, i32* %status, align 4, !dbg !5472
  %pointer6 = getelementptr inbounds %struct.acpi_buffer, %struct.acpi_buffer* %buffer, i32 0, i32 1, !dbg !5473
  %11 = load i8*, i8** %pointer6, align 8, !dbg !5473
  call void @kfree(i8* %11) #9, !dbg !5474
  br label %if.end7, !dbg !5475

if.end7:                                          ; preds = %if.then3, %if.end
  %12 = load i32, i32* %status, align 4, !dbg !5476
  store i32 %12, i32* %retval, align 4, !dbg !5477
  br label %return, !dbg !5477

return:                                           ; preds = %if.end7, %if.then
  %13 = load i32, i32* %retval, align 4, !dbg !5478
  ret i32 %13, !dbg !5478
}

; Function Attrs: noredzone
declare dso_local i32 @acpi_get_handle(i8*, i8*, i8**) #1

; Function Attrs: noredzone
declare dso_local i32 @acpi_evaluate_object(i8*, i8*, %struct.acpi_object_list*, %struct.acpi_buffer*) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local zeroext i1 @acpi_ata_match(i8* %handle) #0 !dbg !5479 {
entry:
  %handle.addr = alloca i8*, align 8
  store i8* %handle, i8** %handle.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %handle.addr, metadata !5482, metadata !DIExpression()), !dbg !5483
  %0 = load i8*, i8** %handle.addr, align 8, !dbg !5484
  %call = call zeroext i1 @acpi_has_method(i8* %0, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.9, i64 0, i64 0)) #9, !dbg !5485
  br i1 %call, label %lor.end, label %lor.lhs.false, !dbg !5486

lor.lhs.false:                                    ; preds = %entry
  %1 = load i8*, i8** %handle.addr, align 8, !dbg !5487
  %call1 = call zeroext i1 @acpi_has_method(i8* %1, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.10, i64 0, i64 0)) #9, !dbg !5488
  br i1 %call1, label %lor.end, label %lor.lhs.false2, !dbg !5489

lor.lhs.false2:                                   ; preds = %lor.lhs.false
  %2 = load i8*, i8** %handle.addr, align 8, !dbg !5490
  %call3 = call zeroext i1 @acpi_has_method(i8* %2, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.11, i64 0, i64 0)) #9, !dbg !5491
  br i1 %call3, label %lor.end, label %lor.rhs, !dbg !5492

lor.rhs:                                          ; preds = %lor.lhs.false2
  %3 = load i8*, i8** %handle.addr, align 8, !dbg !5493
  %call4 = call zeroext i1 @acpi_has_method(i8* %3, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.12, i64 0, i64 0)) #9, !dbg !5494
  br label %lor.end, !dbg !5492

lor.end:                                          ; preds = %lor.rhs, %lor.lhs.false2, %lor.lhs.false, %entry
  %4 = phi i1 [ true, %lor.lhs.false2 ], [ true, %lor.lhs.false ], [ true, %entry ], [ %call4, %lor.rhs ]
  ret i1 %4, !dbg !5495
}

; Function Attrs: noredzone
declare dso_local zeroext i1 @acpi_has_method(i8*, i8*) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local zeroext i1 @acpi_bay_match(i8* %handle) #0 !dbg !5496 {
entry:
  %retval = alloca i1, align 1
  %handle.addr = alloca i8*, align 8
  %phandle = alloca i8*, align 8
  store i8* %handle, i8** %handle.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %handle.addr, metadata !5497, metadata !DIExpression()), !dbg !5498
  call void @llvm.dbg.declare(metadata i8** %phandle, metadata !5499, metadata !DIExpression()), !dbg !5500
  %0 = load i8*, i8** %handle.addr, align 8, !dbg !5501
  %call = call zeroext i1 @acpi_has_method(i8* %0, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.13, i64 0, i64 0)) #9, !dbg !5503
  br i1 %call, label %if.end, label %if.then, !dbg !5504

if.then:                                          ; preds = %entry
  store i1 false, i1* %retval, align 1, !dbg !5505
  br label %return, !dbg !5505

if.end:                                           ; preds = %entry
  %1 = load i8*, i8** %handle.addr, align 8, !dbg !5506
  %call1 = call zeroext i1 @acpi_ata_match(i8* %1) #9, !dbg !5508
  br i1 %call1, label %if.then2, label %if.end3, !dbg !5509

if.then2:                                         ; preds = %if.end
  store i1 true, i1* %retval, align 1, !dbg !5510
  br label %return, !dbg !5510

if.end3:                                          ; preds = %if.end
  %2 = load i8*, i8** %handle.addr, align 8, !dbg !5511
  %call4 = call i32 @acpi_get_parent(i8* %2, i8** %phandle) #9, !dbg !5511
  %tobool = icmp ne i32 %call4, 0, !dbg !5511
  br i1 %tobool, label %if.then5, label %if.end6, !dbg !5513

if.then5:                                         ; preds = %if.end3
  store i1 false, i1* %retval, align 1, !dbg !5514
  br label %return, !dbg !5514

if.end6:                                          ; preds = %if.end3
  %3 = load i8*, i8** %phandle, align 8, !dbg !5515
  %call7 = call zeroext i1 @acpi_ata_match(i8* %3) #9, !dbg !5516
  store i1 %call7, i1* %retval, align 1, !dbg !5517
  br label %return, !dbg !5517

return:                                           ; preds = %if.end6, %if.then5, %if.then2, %if.then
  %4 = load i1, i1* %retval, align 1, !dbg !5518
  ret i1 %4, !dbg !5518
}

; Function Attrs: noredzone
declare dso_local i32 @acpi_get_parent(i8*, i8**) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local zeroext i1 @acpi_device_is_battery(%struct.acpi_device* %adev) #0 !dbg !5519 {
entry:
  %retval = alloca i1, align 1
  %adev.addr = alloca %struct.acpi_device*, align 8
  %hwid = alloca %struct.acpi_hardware_id*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.acpi_hardware_id*, align 8
  %__mptr3 = alloca i8*, align 8
  %tmp8 = alloca %struct.acpi_hardware_id*, align 8
  store %struct.acpi_device* %adev, %struct.acpi_device** %adev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.acpi_device** %adev.addr, metadata !5520, metadata !DIExpression()), !dbg !5521
  call void @llvm.dbg.declare(metadata %struct.acpi_hardware_id** %hwid, metadata !5522, metadata !DIExpression()), !dbg !5523
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !5524, metadata !DIExpression()), !dbg !5527
  %0 = load %struct.acpi_device*, %struct.acpi_device** %adev.addr, align 8, !dbg !5527
  %pnp = getelementptr inbounds %struct.acpi_device, %struct.acpi_device* %0, i32 0, i32 10, !dbg !5527
  %ids = getelementptr inbounds %struct.acpi_device_pnp, %struct.acpi_device_pnp* %pnp, i32 0, i32 4, !dbg !5527
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %ids, i32 0, i32 0, !dbg !5527
  %1 = load %struct.list_head*, %struct.list_head** %next, align 8, !dbg !5527
  %2 = bitcast %struct.list_head* %1 to i8*, !dbg !5527
  store i8* %2, i8** %__mptr, align 8, !dbg !5527
  br label %do.body, !dbg !5527

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !5528

do.end:                                           ; preds = %do.body
  %3 = load i8*, i8** %__mptr, align 8, !dbg !5527
  %add.ptr = getelementptr i8, i8* %3, i64 0, !dbg !5527
  %4 = bitcast i8* %add.ptr to %struct.acpi_hardware_id*, !dbg !5527
  store %struct.acpi_hardware_id* %4, %struct.acpi_hardware_id** %tmp, align 8, !dbg !5528
  %5 = load %struct.acpi_hardware_id*, %struct.acpi_hardware_id** %tmp, align 8, !dbg !5527
  store %struct.acpi_hardware_id* %5, %struct.acpi_hardware_id** %hwid, align 8, !dbg !5530
  br label %for.cond, !dbg !5530

for.cond:                                         ; preds = %do.end7, %do.end
  %6 = load %struct.acpi_hardware_id*, %struct.acpi_hardware_id** %hwid, align 8, !dbg !5531
  %list = getelementptr inbounds %struct.acpi_hardware_id, %struct.acpi_hardware_id* %6, i32 0, i32 0, !dbg !5531
  %7 = load %struct.acpi_device*, %struct.acpi_device** %adev.addr, align 8, !dbg !5531
  %pnp1 = getelementptr inbounds %struct.acpi_device, %struct.acpi_device* %7, i32 0, i32 10, !dbg !5531
  %ids2 = getelementptr inbounds %struct.acpi_device_pnp, %struct.acpi_device_pnp* %pnp1, i32 0, i32 4, !dbg !5531
  %cmp = icmp eq %struct.list_head* %list, %ids2, !dbg !5531
  %lnot = xor i1 %cmp, true, !dbg !5531
  br i1 %lnot, label %for.body, label %for.end, !dbg !5530

for.body:                                         ; preds = %for.cond
  %8 = load %struct.acpi_hardware_id*, %struct.acpi_hardware_id** %hwid, align 8, !dbg !5533
  %id = getelementptr inbounds %struct.acpi_hardware_id, %struct.acpi_hardware_id* %8, i32 0, i32 1, !dbg !5535
  %9 = load i8*, i8** %id, align 8, !dbg !5535
  %call = call i32 @strcmp(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.14, i64 0, i64 0), i8* %9) #9, !dbg !5536
  %tobool = icmp ne i32 %call, 0, !dbg !5536
  br i1 %tobool, label %if.end, label %if.then, !dbg !5537

if.then:                                          ; preds = %for.body
  store i1 true, i1* %retval, align 1, !dbg !5538
  br label %return, !dbg !5538

if.end:                                           ; preds = %for.body
  br label %for.inc, !dbg !5539

for.inc:                                          ; preds = %if.end
  call void @llvm.dbg.declare(metadata i8** %__mptr3, metadata !5540, metadata !DIExpression()), !dbg !5542
  %10 = load %struct.acpi_hardware_id*, %struct.acpi_hardware_id** %hwid, align 8, !dbg !5542
  %list4 = getelementptr inbounds %struct.acpi_hardware_id, %struct.acpi_hardware_id* %10, i32 0, i32 0, !dbg !5542
  %next5 = getelementptr inbounds %struct.list_head, %struct.list_head* %list4, i32 0, i32 0, !dbg !5542
  %11 = load %struct.list_head*, %struct.list_head** %next5, align 8, !dbg !5542
  %12 = bitcast %struct.list_head* %11 to i8*, !dbg !5542
  store i8* %12, i8** %__mptr3, align 8, !dbg !5542
  br label %do.body6, !dbg !5542

do.body6:                                         ; preds = %for.inc
  br label %do.end7, !dbg !5543

do.end7:                                          ; preds = %do.body6
  %13 = load i8*, i8** %__mptr3, align 8, !dbg !5542
  %add.ptr9 = getelementptr i8, i8* %13, i64 0, !dbg !5542
  %14 = bitcast i8* %add.ptr9 to %struct.acpi_hardware_id*, !dbg !5542
  store %struct.acpi_hardware_id* %14, %struct.acpi_hardware_id** %tmp8, align 8, !dbg !5543
  %15 = load %struct.acpi_hardware_id*, %struct.acpi_hardware_id** %tmp8, align 8, !dbg !5542
  store %struct.acpi_hardware_id* %15, %struct.acpi_hardware_id** %hwid, align 8, !dbg !5531
  br label %for.cond, !dbg !5531, !llvm.loop !5545

for.end:                                          ; preds = %for.cond
  store i1 false, i1* %retval, align 1, !dbg !5547
  br label %return, !dbg !5547

return:                                           ; preds = %for.end, %if.then
  %16 = load i1, i1* %retval, align 1, !dbg !5548
  ret i1 %16, !dbg !5548
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local zeroext i1 @acpi_dock_match(i8* %handle) #0 !dbg !5549 {
entry:
  %handle.addr = alloca i8*, align 8
  store i8* %handle, i8** %handle.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %handle.addr, metadata !5550, metadata !DIExpression()), !dbg !5551
  %0 = load i8*, i8** %handle.addr, align 8, !dbg !5552
  %call = call zeroext i1 @acpi_has_method(i8* %0, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.15, i64 0, i64 0)) #9, !dbg !5553
  ret i1 %call, !dbg !5554
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i64 @acpi_is_video_device(i8* %handle) #0 !dbg !5555 {
entry:
  %handle.addr = alloca i8*, align 8
  %video_caps = alloca i64, align 8
  store i8* %handle, i8** %handle.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %handle.addr, metadata !5558, metadata !DIExpression()), !dbg !5559
  call void @llvm.dbg.declare(metadata i64* %video_caps, metadata !5560, metadata !DIExpression()), !dbg !5561
  store i64 0, i64* %video_caps, align 8, !dbg !5561
  %0 = load i8*, i8** %handle.addr, align 8, !dbg !5562
  %call = call zeroext i1 @acpi_has_method(i8* %0, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.16, i64 0, i64 0)) #9, !dbg !5564
  br i1 %call, label %if.then, label %lor.lhs.false, !dbg !5565

lor.lhs.false:                                    ; preds = %entry
  %1 = load i8*, i8** %handle.addr, align 8, !dbg !5566
  %call1 = call zeroext i1 @acpi_has_method(i8* %1, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.17, i64 0, i64 0)) #9, !dbg !5567
  br i1 %call1, label %if.then, label %if.end, !dbg !5568

if.then:                                          ; preds = %lor.lhs.false, %entry
  %2 = load i64, i64* %video_caps, align 8, !dbg !5569
  %or = or i64 %2, 1, !dbg !5569
  store i64 %or, i64* %video_caps, align 8, !dbg !5569
  br label %if.end, !dbg !5570

if.end:                                           ; preds = %if.then, %lor.lhs.false
  %3 = load i8*, i8** %handle.addr, align 8, !dbg !5571
  %call2 = call zeroext i1 @acpi_has_method(i8* %3, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.18, i64 0, i64 0)) #9, !dbg !5573
  br i1 %call2, label %if.then3, label %if.end5, !dbg !5574

if.then3:                                         ; preds = %if.end
  %4 = load i64, i64* %video_caps, align 8, !dbg !5575
  %or4 = or i64 %4, 4, !dbg !5575
  store i64 %or4, i64* %video_caps, align 8, !dbg !5575
  br label %if.end5, !dbg !5576

if.end5:                                          ; preds = %if.then3, %if.end
  %5 = load i8*, i8** %handle.addr, align 8, !dbg !5577
  %call6 = call zeroext i1 @acpi_has_method(i8* %5, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.19, i64 0, i64 0)) #9, !dbg !5579
  br i1 %call6, label %land.lhs.true, label %if.end12, !dbg !5580

land.lhs.true:                                    ; preds = %if.end5
  %6 = load i8*, i8** %handle.addr, align 8, !dbg !5581
  %call7 = call zeroext i1 @acpi_has_method(i8* %6, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.20, i64 0, i64 0)) #9, !dbg !5582
  br i1 %call7, label %land.lhs.true8, label %if.end12, !dbg !5583

land.lhs.true8:                                   ; preds = %land.lhs.true
  %7 = load i8*, i8** %handle.addr, align 8, !dbg !5584
  %call9 = call zeroext i1 @acpi_has_method(i8* %7, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.21, i64 0, i64 0)) #9, !dbg !5585
  br i1 %call9, label %if.then10, label %if.end12, !dbg !5586

if.then10:                                        ; preds = %land.lhs.true8
  %8 = load i64, i64* %video_caps, align 8, !dbg !5587
  %or11 = or i64 %8, 2, !dbg !5587
  store i64 %or11, i64* %video_caps, align 8, !dbg !5587
  br label %if.end12, !dbg !5588

if.end12:                                         ; preds = %if.then10, %land.lhs.true8, %land.lhs.true, %if.end5
  %9 = load i64, i64* %video_caps, align 8, !dbg !5589
  %tobool = icmp ne i64 %9, 0, !dbg !5589
  br i1 %tobool, label %if.then13, label %if.end15, !dbg !5591

if.then13:                                        ; preds = %if.end12
  %10 = load i8*, i8** %handle.addr, align 8, !dbg !5592
  %11 = bitcast i64* %video_caps to i8*, !dbg !5593
  %call14 = call i32 @acpi_walk_namespace(i32 6, i8* %10, i32 -1, i32 (i8*, i32, i8*, i8**)* @acpi_backlight_cap_match, i32 (i8*, i32, i8*, i8**)* null, i8* %11, i8** null) #9, !dbg !5594
  br label %if.end15, !dbg !5594

if.end15:                                         ; preds = %if.then13, %if.end12
  %12 = load i64, i64* %video_caps, align 8, !dbg !5595
  ret i64 %12, !dbg !5596
}

; Function Attrs: noredzone
declare dso_local i32 @acpi_walk_namespace(i32, i8*, i32, i32 (i8*, i32, i8*, i8**)*, i32 (i8*, i32, i8*, i8**)*, i8*, i8**) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @acpi_backlight_cap_match(i8* %handle, i32 %level, i8* %context, i8** %return_value) #0 !dbg !5597 {
entry:
  %retval = alloca i32, align 4
  %handle.addr = alloca i8*, align 8
  %level.addr = alloca i32, align 4
  %context.addr = alloca i8*, align 8
  %return_value.addr = alloca i8**, align 8
  %cap = alloca i64*, align 8
  store i8* %handle, i8** %handle.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %handle.addr, metadata !5600, metadata !DIExpression()), !dbg !5601
  store i32 %level, i32* %level.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %level.addr, metadata !5602, metadata !DIExpression()), !dbg !5603
  store i8* %context, i8** %context.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %context.addr, metadata !5604, metadata !DIExpression()), !dbg !5605
  store i8** %return_value, i8*** %return_value.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %return_value.addr, metadata !5606, metadata !DIExpression()), !dbg !5607
  call void @llvm.dbg.declare(metadata i64** %cap, metadata !5608, metadata !DIExpression()), !dbg !5610
  %0 = load i8*, i8** %context.addr, align 8, !dbg !5611
  %1 = bitcast i8* %0 to i64*, !dbg !5611
  store i64* %1, i64** %cap, align 8, !dbg !5610
  %2 = load i8*, i8** %handle.addr, align 8, !dbg !5612
  %call = call zeroext i1 @acpi_has_method(i8* %2, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.40, i64 0, i64 0)) #9, !dbg !5614
  br i1 %call, label %land.lhs.true, label %if.end, !dbg !5615

land.lhs.true:                                    ; preds = %entry
  %3 = load i8*, i8** %handle.addr, align 8, !dbg !5616
  %call1 = call zeroext i1 @acpi_has_method(i8* %3, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.41, i64 0, i64 0)) #9, !dbg !5617
  br i1 %call1, label %if.then, label %if.end, !dbg !5618

if.then:                                          ; preds = %land.lhs.true
  %4 = load i64*, i64** %cap, align 8, !dbg !5619
  %5 = load i64, i64* %4, align 8, !dbg !5621
  %or = or i64 %5, 8, !dbg !5621
  store i64 %or, i64* %4, align 8, !dbg !5621
  store i32 16387, i32* %retval, align 4, !dbg !5622
  br label %return, !dbg !5622

if.end:                                           ; preds = %land.lhs.true, %entry
  store i32 0, i32* %retval, align 4, !dbg !5623
  br label %return, !dbg !5623

return:                                           ; preds = %if.end, %if.then
  %6 = load i32, i32* %retval, align 4, !dbg !5624
  ret i32 %6, !dbg !5624
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @list_empty(%struct.list_head* %head) #0 !dbg !5625 {
entry:
  %head.addr = alloca %struct.list_head*, align 8
  %tmp = alloca %struct.list_head*, align 8
  store %struct.list_head* %head, %struct.list_head** %head.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %head.addr, metadata !5630, metadata !DIExpression()), !dbg !5631
  br label %do.body, !dbg !5632

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !5634

do.end:                                           ; preds = %do.body
  %0 = load %struct.list_head*, %struct.list_head** %head.addr, align 8, !dbg !5632
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %0, i32 0, i32 0, !dbg !5632
  %1 = load volatile %struct.list_head*, %struct.list_head** %next, align 8, !dbg !5632
  store %struct.list_head* %1, %struct.list_head** %tmp, align 8, !dbg !5634
  %2 = load %struct.list_head*, %struct.list_head** %tmp, align 8, !dbg !5632
  %3 = load %struct.list_head*, %struct.list_head** %head.addr, align 8, !dbg !5636
  %cmp = icmp eq %struct.list_head* %2, %3, !dbg !5637
  %conv = zext i1 %cmp to i32, !dbg !5637
  ret i32 %conv, !dbg !5638
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @acpi_free_pnp_ids(%struct.acpi_device_pnp* %pnp) #0 !dbg !5639 {
entry:
  %pnp.addr = alloca %struct.acpi_device_pnp*, align 8
  %id = alloca %struct.acpi_hardware_id*, align 8
  %tmp = alloca %struct.acpi_hardware_id*, align 8
  %__mptr = alloca i8*, align 8
  %tmp1 = alloca %struct.acpi_hardware_id*, align 8
  %__mptr2 = alloca i8*, align 8
  %tmp6 = alloca %struct.acpi_hardware_id*, align 8
  %__mptr11 = alloca i8*, align 8
  %tmp16 = alloca %struct.acpi_hardware_id*, align 8
  store %struct.acpi_device_pnp* %pnp, %struct.acpi_device_pnp** %pnp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.acpi_device_pnp** %pnp.addr, metadata !5643, metadata !DIExpression()), !dbg !5644
  call void @llvm.dbg.declare(metadata %struct.acpi_hardware_id** %id, metadata !5645, metadata !DIExpression()), !dbg !5646
  call void @llvm.dbg.declare(metadata %struct.acpi_hardware_id** %tmp, metadata !5647, metadata !DIExpression()), !dbg !5648
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !5649, metadata !DIExpression()), !dbg !5652
  %0 = load %struct.acpi_device_pnp*, %struct.acpi_device_pnp** %pnp.addr, align 8, !dbg !5652
  %ids = getelementptr inbounds %struct.acpi_device_pnp, %struct.acpi_device_pnp* %0, i32 0, i32 4, !dbg !5652
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %ids, i32 0, i32 0, !dbg !5652
  %1 = load %struct.list_head*, %struct.list_head** %next, align 8, !dbg !5652
  %2 = bitcast %struct.list_head* %1 to i8*, !dbg !5652
  store i8* %2, i8** %__mptr, align 8, !dbg !5652
  br label %do.body, !dbg !5652

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !5653

do.end:                                           ; preds = %do.body
  %3 = load i8*, i8** %__mptr, align 8, !dbg !5652
  %add.ptr = getelementptr i8, i8* %3, i64 0, !dbg !5652
  %4 = bitcast i8* %add.ptr to %struct.acpi_hardware_id*, !dbg !5652
  store %struct.acpi_hardware_id* %4, %struct.acpi_hardware_id** %tmp1, align 8, !dbg !5653
  %5 = load %struct.acpi_hardware_id*, %struct.acpi_hardware_id** %tmp1, align 8, !dbg !5652
  store %struct.acpi_hardware_id* %5, %struct.acpi_hardware_id** %id, align 8, !dbg !5655
  call void @llvm.dbg.declare(metadata i8** %__mptr2, metadata !5656, metadata !DIExpression()), !dbg !5658
  %6 = load %struct.acpi_hardware_id*, %struct.acpi_hardware_id** %id, align 8, !dbg !5658
  %list = getelementptr inbounds %struct.acpi_hardware_id, %struct.acpi_hardware_id* %6, i32 0, i32 0, !dbg !5658
  %next3 = getelementptr inbounds %struct.list_head, %struct.list_head* %list, i32 0, i32 0, !dbg !5658
  %7 = load %struct.list_head*, %struct.list_head** %next3, align 8, !dbg !5658
  %8 = bitcast %struct.list_head* %7 to i8*, !dbg !5658
  store i8* %8, i8** %__mptr2, align 8, !dbg !5658
  br label %do.body4, !dbg !5658

do.body4:                                         ; preds = %do.end
  br label %do.end5, !dbg !5659

do.end5:                                          ; preds = %do.body4
  %9 = load i8*, i8** %__mptr2, align 8, !dbg !5658
  %add.ptr7 = getelementptr i8, i8* %9, i64 0, !dbg !5658
  %10 = bitcast i8* %add.ptr7 to %struct.acpi_hardware_id*, !dbg !5658
  store %struct.acpi_hardware_id* %10, %struct.acpi_hardware_id** %tmp6, align 8, !dbg !5659
  %11 = load %struct.acpi_hardware_id*, %struct.acpi_hardware_id** %tmp6, align 8, !dbg !5658
  store %struct.acpi_hardware_id* %11, %struct.acpi_hardware_id** %tmp, align 8, !dbg !5655
  br label %for.cond, !dbg !5655

for.cond:                                         ; preds = %do.end15, %do.end5
  %12 = load %struct.acpi_hardware_id*, %struct.acpi_hardware_id** %id, align 8, !dbg !5661
  %list8 = getelementptr inbounds %struct.acpi_hardware_id, %struct.acpi_hardware_id* %12, i32 0, i32 0, !dbg !5661
  %13 = load %struct.acpi_device_pnp*, %struct.acpi_device_pnp** %pnp.addr, align 8, !dbg !5661
  %ids9 = getelementptr inbounds %struct.acpi_device_pnp, %struct.acpi_device_pnp* %13, i32 0, i32 4, !dbg !5661
  %cmp = icmp eq %struct.list_head* %list8, %ids9, !dbg !5661
  %lnot = xor i1 %cmp, true, !dbg !5661
  br i1 %lnot, label %for.body, label %for.end, !dbg !5655

for.body:                                         ; preds = %for.cond
  %14 = load %struct.acpi_hardware_id*, %struct.acpi_hardware_id** %id, align 8, !dbg !5663
  %id10 = getelementptr inbounds %struct.acpi_hardware_id, %struct.acpi_hardware_id* %14, i32 0, i32 1, !dbg !5665
  %15 = load i8*, i8** %id10, align 8, !dbg !5665
  call void @kfree_const(i8* %15) #9, !dbg !5666
  %16 = load %struct.acpi_hardware_id*, %struct.acpi_hardware_id** %id, align 8, !dbg !5667
  %17 = bitcast %struct.acpi_hardware_id* %16 to i8*, !dbg !5667
  call void @kfree(i8* %17) #9, !dbg !5668
  br label %for.inc, !dbg !5669

for.inc:                                          ; preds = %for.body
  %18 = load %struct.acpi_hardware_id*, %struct.acpi_hardware_id** %tmp, align 8, !dbg !5661
  store %struct.acpi_hardware_id* %18, %struct.acpi_hardware_id** %id, align 8, !dbg !5661
  call void @llvm.dbg.declare(metadata i8** %__mptr11, metadata !5670, metadata !DIExpression()), !dbg !5672
  %19 = load %struct.acpi_hardware_id*, %struct.acpi_hardware_id** %tmp, align 8, !dbg !5672
  %list12 = getelementptr inbounds %struct.acpi_hardware_id, %struct.acpi_hardware_id* %19, i32 0, i32 0, !dbg !5672
  %next13 = getelementptr inbounds %struct.list_head, %struct.list_head* %list12, i32 0, i32 0, !dbg !5672
  %20 = load %struct.list_head*, %struct.list_head** %next13, align 8, !dbg !5672
  %21 = bitcast %struct.list_head* %20 to i8*, !dbg !5672
  store i8* %21, i8** %__mptr11, align 8, !dbg !5672
  br label %do.body14, !dbg !5672

do.body14:                                        ; preds = %for.inc
  br label %do.end15, !dbg !5673

do.end15:                                         ; preds = %do.body14
  %22 = load i8*, i8** %__mptr11, align 8, !dbg !5672
  %add.ptr17 = getelementptr i8, i8* %22, i64 0, !dbg !5672
  %23 = bitcast i8* %add.ptr17 to %struct.acpi_hardware_id*, !dbg !5672
  store %struct.acpi_hardware_id* %23, %struct.acpi_hardware_id** %tmp16, align 8, !dbg !5673
  %24 = load %struct.acpi_hardware_id*, %struct.acpi_hardware_id** %tmp16, align 8, !dbg !5672
  store %struct.acpi_hardware_id* %24, %struct.acpi_hardware_id** %tmp, align 8, !dbg !5661
  br label %for.cond, !dbg !5661, !llvm.loop !5675

for.end:                                          ; preds = %for.cond
  %25 = load %struct.acpi_device_pnp*, %struct.acpi_device_pnp** %pnp.addr, align 8, !dbg !5677
  %unique_id = getelementptr inbounds %struct.acpi_device_pnp, %struct.acpi_device_pnp* %25, i32 0, i32 3, !dbg !5678
  %26 = load i8*, i8** %unique_id, align 8, !dbg !5678
  call void @kfree(i8* %26) #9, !dbg !5679
  ret void, !dbg !5680
}

; Function Attrs: noredzone
declare dso_local void @kfree_const(i8*) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local zeroext i1 @acpi_dma_supported(%struct.acpi_device* %adev) #0 !dbg !5681 {
entry:
  %retval = alloca i1, align 1
  %adev.addr = alloca %struct.acpi_device*, align 8
  store %struct.acpi_device* %adev, %struct.acpi_device** %adev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.acpi_device** %adev.addr, metadata !5682, metadata !DIExpression()), !dbg !5683
  %0 = load %struct.acpi_device*, %struct.acpi_device** %adev.addr, align 8, !dbg !5684
  %tobool = icmp ne %struct.acpi_device* %0, null, !dbg !5684
  br i1 %tobool, label %if.end, label %if.then, !dbg !5686

if.then:                                          ; preds = %entry
  store i1 false, i1* %retval, align 1, !dbg !5687
  br label %return, !dbg !5687

if.end:                                           ; preds = %entry
  %1 = load %struct.acpi_device*, %struct.acpi_device** %adev.addr, align 8, !dbg !5688
  %flags = getelementptr inbounds %struct.acpi_device, %struct.acpi_device* %1, i32 0, i32 9, !dbg !5690
  %2 = bitcast %struct.acpi_device_flags* %flags to i32*, !dbg !5691
  %bf.load = load i32, i32* %2, align 4, !dbg !5691
  %bf.lshr = lshr i32 %bf.load, 11, !dbg !5691
  %bf.clear = and i32 %bf.lshr, 1, !dbg !5691
  %tobool1 = icmp ne i32 %bf.clear, 0, !dbg !5688
  br i1 %tobool1, label %if.then2, label %if.end3, !dbg !5692

if.then2:                                         ; preds = %if.end
  store i1 true, i1* %retval, align 1, !dbg !5693
  br label %return, !dbg !5693

if.end3:                                          ; preds = %if.end
  store i1 true, i1* %retval, align 1, !dbg !5694
  br label %return, !dbg !5694

return:                                           ; preds = %if.end3, %if.then2, %if.then
  %3 = load i1, i1* %retval, align 1, !dbg !5696
  ret i1 %3, !dbg !5696
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @acpi_get_dma_attr(%struct.acpi_device* %adev) #0 !dbg !5697 {
entry:
  %retval = alloca i32, align 4
  %adev.addr = alloca %struct.acpi_device*, align 8
  store %struct.acpi_device* %adev, %struct.acpi_device** %adev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.acpi_device** %adev.addr, metadata !5700, metadata !DIExpression()), !dbg !5701
  %0 = load %struct.acpi_device*, %struct.acpi_device** %adev.addr, align 8, !dbg !5702
  %call = call zeroext i1 @acpi_dma_supported(%struct.acpi_device* %0) #9, !dbg !5704
  br i1 %call, label %if.end, label %if.then, !dbg !5705

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !5706
  br label %return, !dbg !5706

if.end:                                           ; preds = %entry
  %1 = load %struct.acpi_device*, %struct.acpi_device** %adev.addr, align 8, !dbg !5707
  %flags = getelementptr inbounds %struct.acpi_device, %struct.acpi_device* %1, i32 0, i32 9, !dbg !5709
  %2 = bitcast %struct.acpi_device_flags* %flags to i32*, !dbg !5710
  %bf.load = load i32, i32* %2, align 4, !dbg !5710
  %bf.lshr = lshr i32 %bf.load, 10, !dbg !5710
  %bf.clear = and i32 %bf.lshr, 1, !dbg !5710
  %tobool = icmp ne i32 %bf.clear, 0, !dbg !5707
  br i1 %tobool, label %if.then1, label %if.else, !dbg !5711

if.then1:                                         ; preds = %if.end
  store i32 2, i32* %retval, align 4, !dbg !5712
  br label %return, !dbg !5712

if.else:                                          ; preds = %if.end
  store i32 1, i32* %retval, align 4, !dbg !5713
  br label %return, !dbg !5713

return:                                           ; preds = %if.else, %if.then1, %if.then
  %3 = load i32, i32* %retval, align 4, !dbg !5714
  ret i32 %3, !dbg !5714
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @acpi_dma_get_range(%struct.device* %dev, i64* %dma_addr, i64* %offset, i64* %size) #0 !dbg !5715 {
entry:
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.device*, align 8
  %dma_addr.addr = alloca i64*, align 8
  %offset.addr = alloca i64*, align 8
  %size.addr = alloca i64*, align 8
  %adev = alloca %struct.acpi_device*, align 8
  %list = alloca %struct.list_head, align 8
  %rentry = alloca %struct.resource_entry*, align 8
  %ret = alloca i32, align 4
  %dma_dev = alloca %struct.device*, align 8
  %len = alloca i64, align 8
  %dma_start = alloca i64, align 8
  %dma_end = alloca i64, align 8
  %dma_offset = alloca i64, align 8
  %__to_acpi_device_node_fwnode = alloca %struct.fwnode_handle*, align 8
  %tmp = alloca %struct.acpi_device*, align 8
  %__mptr = alloca i8*, align 8
  %tmp2 = alloca %struct.acpi_device*, align 8
  %__mptr16 = alloca i8*, align 8
  %tmp21 = alloca %struct.resource_entry*, align 8
  %__mptr42 = alloca i8*, align 8
  %tmp48 = alloca %struct.resource_entry*, align 8
  %__UNIQUE_ID___x260 = alloca i64, align 8
  %__UNIQUE_ID___y261 = alloca i64, align 8
  %tmp54 = alloca i64, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !5718, metadata !DIExpression()), !dbg !5719
  store i64* %dma_addr, i64** %dma_addr.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %dma_addr.addr, metadata !5720, metadata !DIExpression()), !dbg !5721
  store i64* %offset, i64** %offset.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %offset.addr, metadata !5722, metadata !DIExpression()), !dbg !5723
  store i64* %size, i64** %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %size.addr, metadata !5724, metadata !DIExpression()), !dbg !5725
  call void @llvm.dbg.declare(metadata %struct.acpi_device** %adev, metadata !5726, metadata !DIExpression()), !dbg !5727
  call void @llvm.dbg.declare(metadata %struct.list_head* %list, metadata !5728, metadata !DIExpression()), !dbg !5729
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %list, i32 0, i32 0, !dbg !5729
  store %struct.list_head* %list, %struct.list_head** %next, align 8, !dbg !5729
  %prev = getelementptr inbounds %struct.list_head, %struct.list_head* %list, i32 0, i32 1, !dbg !5729
  store %struct.list_head* %list, %struct.list_head** %prev, align 8, !dbg !5729
  call void @llvm.dbg.declare(metadata %struct.resource_entry** %rentry, metadata !5730, metadata !DIExpression()), !dbg !5731
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !5732, metadata !DIExpression()), !dbg !5733
  call void @llvm.dbg.declare(metadata %struct.device** %dma_dev, metadata !5734, metadata !DIExpression()), !dbg !5735
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !5736
  store %struct.device* %0, %struct.device** %dma_dev, align 8, !dbg !5735
  call void @llvm.dbg.declare(metadata i64* %len, metadata !5737, metadata !DIExpression()), !dbg !5738
  call void @llvm.dbg.declare(metadata i64* %dma_start, metadata !5739, metadata !DIExpression()), !dbg !5740
  store i64 -1, i64* %dma_start, align 8, !dbg !5740
  call void @llvm.dbg.declare(metadata i64* %dma_end, metadata !5741, metadata !DIExpression()), !dbg !5742
  store i64 0, i64* %dma_end, align 8, !dbg !5742
  call void @llvm.dbg.declare(metadata i64* %dma_offset, metadata !5743, metadata !DIExpression()), !dbg !5744
  store i64 0, i64* %dma_offset, align 8, !dbg !5744
  br label %do.body, !dbg !5745

do.body:                                          ; preds = %do.cond, %entry
  call void @llvm.dbg.declare(metadata %struct.fwnode_handle** %__to_acpi_device_node_fwnode, metadata !5746, metadata !DIExpression()), !dbg !5749
  %1 = load %struct.device*, %struct.device** %dma_dev, align 8, !dbg !5749
  %fwnode = getelementptr inbounds %struct.device, %struct.device* %1, i32 0, i32 24, !dbg !5749
  %2 = load %struct.fwnode_handle*, %struct.fwnode_handle** %fwnode, align 8, !dbg !5749
  store %struct.fwnode_handle* %2, %struct.fwnode_handle** %__to_acpi_device_node_fwnode, align 8, !dbg !5749
  %3 = load %struct.fwnode_handle*, %struct.fwnode_handle** %__to_acpi_device_node_fwnode, align 8, !dbg !5749
  %call = call zeroext i1 @is_acpi_device_node(%struct.fwnode_handle* %3) #9, !dbg !5749
  br i1 %call, label %cond.true, label %cond.false, !dbg !5749

cond.true:                                        ; preds = %do.body
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !5750, metadata !DIExpression()), !dbg !5752
  %4 = load %struct.fwnode_handle*, %struct.fwnode_handle** %__to_acpi_device_node_fwnode, align 8, !dbg !5752
  %5 = bitcast %struct.fwnode_handle* %4 to i8*, !dbg !5752
  store i8* %5, i8** %__mptr, align 8, !dbg !5752
  br label %do.body1, !dbg !5752

do.body1:                                         ; preds = %cond.true
  br label %do.end, !dbg !5753

do.end:                                           ; preds = %do.body1
  %6 = load i8*, i8** %__mptr, align 8, !dbg !5752
  %add.ptr = getelementptr i8, i8* %6, i64 -16, !dbg !5752
  %7 = bitcast i8* %add.ptr to %struct.acpi_device*, !dbg !5752
  store %struct.acpi_device* %7, %struct.acpi_device** %tmp2, align 8, !dbg !5753
  %8 = load %struct.acpi_device*, %struct.acpi_device** %tmp2, align 8, !dbg !5752
  br label %cond.end, !dbg !5749

cond.false:                                       ; preds = %do.body
  br label %cond.end, !dbg !5749

cond.end:                                         ; preds = %cond.false, %do.end
  %cond = phi %struct.acpi_device* [ %8, %do.end ], [ null, %cond.false ], !dbg !5749
  store %struct.acpi_device* %cond, %struct.acpi_device** %tmp, align 8, !dbg !5749
  %9 = load %struct.acpi_device*, %struct.acpi_device** %tmp, align 8, !dbg !5749
  store %struct.acpi_device* %9, %struct.acpi_device** %adev, align 8, !dbg !5755
  %10 = load %struct.acpi_device*, %struct.acpi_device** %adev, align 8, !dbg !5756
  %tobool = icmp ne %struct.acpi_device* %10, null, !dbg !5756
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !5758

land.lhs.true:                                    ; preds = %cond.end
  %11 = load %struct.acpi_device*, %struct.acpi_device** %adev, align 8, !dbg !5759
  %handle = getelementptr inbounds %struct.acpi_device, %struct.acpi_device* %11, i32 0, i32 1, !dbg !5760
  %12 = load i8*, i8** %handle, align 8, !dbg !5760
  %call3 = call zeroext i1 @acpi_has_method(i8* %12, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.22, i64 0, i64 0)) #9, !dbg !5761
  br i1 %call3, label %if.then, label %if.end, !dbg !5762

if.then:                                          ; preds = %land.lhs.true
  br label %do.end5, !dbg !5763

if.end:                                           ; preds = %land.lhs.true, %cond.end
  %13 = load %struct.device*, %struct.device** %dma_dev, align 8, !dbg !5764
  %parent = getelementptr inbounds %struct.device, %struct.device* %13, i32 0, i32 1, !dbg !5765
  %14 = load %struct.device*, %struct.device** %parent, align 8, !dbg !5765
  store %struct.device* %14, %struct.device** %dma_dev, align 8, !dbg !5766
  br label %do.cond, !dbg !5767

do.cond:                                          ; preds = %if.end
  %15 = load %struct.device*, %struct.device** %dma_dev, align 8, !dbg !5768
  %tobool4 = icmp ne %struct.device* %15, null, !dbg !5767
  br i1 %tobool4, label %do.body, label %do.end5, !dbg !5767, !llvm.loop !5769

do.end5:                                          ; preds = %do.cond, %if.then
  %16 = load %struct.device*, %struct.device** %dma_dev, align 8, !dbg !5771
  %tobool6 = icmp ne %struct.device* %16, null, !dbg !5771
  br i1 %tobool6, label %if.end8, label %if.then7, !dbg !5773

if.then7:                                         ; preds = %do.end5
  store i32 -19, i32* %retval, align 4, !dbg !5774
  br label %return, !dbg !5774

if.end8:                                          ; preds = %do.end5
  %17 = load %struct.acpi_device*, %struct.acpi_device** %adev, align 8, !dbg !5775
  %handle9 = getelementptr inbounds %struct.acpi_device, %struct.acpi_device* %17, i32 0, i32 1, !dbg !5777
  %18 = load i8*, i8** %handle9, align 8, !dbg !5777
  %call10 = call zeroext i1 @acpi_has_method(i8* %18, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.23, i64 0, i64 0)) #9, !dbg !5778
  br i1 %call10, label %if.end13, label %if.then11, !dbg !5779

if.then11:                                        ; preds = %if.end8
  %19 = load %struct.acpi_device*, %struct.acpi_device** %adev, align 8, !dbg !5780
  %handle12 = getelementptr inbounds %struct.acpi_device, %struct.acpi_device* %19, i32 0, i32 1, !dbg !5780
  %20 = load i8*, i8** %handle12, align 8, !dbg !5780
  call void (i8*, i8*, i8*, ...) @acpi_handle_printk(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.24, i64 0, i64 0), i8* %20, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.25, i64 0, i64 0)) #9, !dbg !5780
  store i32 -22, i32* %retval, align 4, !dbg !5782
  br label %return, !dbg !5782

if.end13:                                         ; preds = %if.end8
  %21 = load %struct.acpi_device*, %struct.acpi_device** %adev, align 8, !dbg !5783
  %call14 = call i32 @acpi_dev_get_dma_resources(%struct.acpi_device* %21, %struct.list_head* %list) #9, !dbg !5784
  store i32 %call14, i32* %ret, align 4, !dbg !5785
  %22 = load i32, i32* %ret, align 4, !dbg !5786
  %cmp = icmp sgt i32 %22, 0, !dbg !5788
  br i1 %cmp, label %if.then15, label %if.end60, !dbg !5789

if.then15:                                        ; preds = %if.end13
  call void @llvm.dbg.declare(metadata i8** %__mptr16, metadata !5790, metadata !DIExpression()), !dbg !5794
  %next17 = getelementptr inbounds %struct.list_head, %struct.list_head* %list, i32 0, i32 0, !dbg !5794
  %23 = load %struct.list_head*, %struct.list_head** %next17, align 8, !dbg !5794
  %24 = bitcast %struct.list_head* %23 to i8*, !dbg !5794
  store i8* %24, i8** %__mptr16, align 8, !dbg !5794
  br label %do.body18, !dbg !5794

do.body18:                                        ; preds = %if.then15
  br label %do.end20, !dbg !5795

do.end20:                                         ; preds = %do.body18
  %25 = load i8*, i8** %__mptr16, align 8, !dbg !5794
  %add.ptr22 = getelementptr i8, i8* %25, i64 0, !dbg !5794
  %26 = bitcast i8* %add.ptr22 to %struct.resource_entry*, !dbg !5794
  store %struct.resource_entry* %26, %struct.resource_entry** %tmp21, align 8, !dbg !5795
  %27 = load %struct.resource_entry*, %struct.resource_entry** %tmp21, align 8, !dbg !5794
  store %struct.resource_entry* %27, %struct.resource_entry** %rentry, align 8, !dbg !5797
  br label %for.cond, !dbg !5797

for.cond:                                         ; preds = %do.end47, %do.end20
  %28 = load %struct.resource_entry*, %struct.resource_entry** %rentry, align 8, !dbg !5798
  %node = getelementptr inbounds %struct.resource_entry, %struct.resource_entry* %28, i32 0, i32 0, !dbg !5798
  %cmp23 = icmp eq %struct.list_head* %node, %list, !dbg !5798
  %lnot = xor i1 %cmp23, true, !dbg !5798
  br i1 %lnot, label %for.body, label %for.end, !dbg !5797

for.body:                                         ; preds = %for.cond
  %29 = load i64, i64* %dma_offset, align 8, !dbg !5800
  %tobool24 = icmp ne i64 %29, 0, !dbg !5800
  br i1 %tobool24, label %land.lhs.true25, label %if.end29, !dbg !5803

land.lhs.true25:                                  ; preds = %for.body
  %30 = load %struct.resource_entry*, %struct.resource_entry** %rentry, align 8, !dbg !5804
  %offset26 = getelementptr inbounds %struct.resource_entry, %struct.resource_entry* %30, i32 0, i32 2, !dbg !5805
  %31 = load i64, i64* %offset26, align 8, !dbg !5805
  %32 = load i64, i64* %dma_offset, align 8, !dbg !5806
  %cmp27 = icmp ne i64 %31, %32, !dbg !5807
  br i1 %cmp27, label %if.then28, label %if.end29, !dbg !5808

if.then28:                                        ; preds = %land.lhs.true25
  store i32 -22, i32* %ret, align 4, !dbg !5809
  %33 = load %struct.device*, %struct.device** %dma_dev, align 8, !dbg !5811
  call void (%struct.device*, i8*, ...) @_dev_warn(%struct.device* %33, i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.26, i64 0, i64 0)) #10, !dbg !5811
  br label %out, !dbg !5812

if.end29:                                         ; preds = %land.lhs.true25, %for.body
  %34 = load %struct.resource_entry*, %struct.resource_entry** %rentry, align 8, !dbg !5813
  %offset30 = getelementptr inbounds %struct.resource_entry, %struct.resource_entry* %34, i32 0, i32 2, !dbg !5814
  %35 = load i64, i64* %offset30, align 8, !dbg !5814
  store i64 %35, i64* %dma_offset, align 8, !dbg !5815
  %36 = load %struct.resource_entry*, %struct.resource_entry** %rentry, align 8, !dbg !5816
  %res = getelementptr inbounds %struct.resource_entry, %struct.resource_entry* %36, i32 0, i32 1, !dbg !5818
  %37 = load %struct.resource*, %struct.resource** %res, align 8, !dbg !5818
  %start = getelementptr inbounds %struct.resource, %struct.resource* %37, i32 0, i32 0, !dbg !5819
  %38 = load i64, i64* %start, align 8, !dbg !5819
  %39 = load i64, i64* %dma_start, align 8, !dbg !5820
  %cmp31 = icmp ult i64 %38, %39, !dbg !5821
  br i1 %cmp31, label %if.then32, label %if.end35, !dbg !5822

if.then32:                                        ; preds = %if.end29
  %40 = load %struct.resource_entry*, %struct.resource_entry** %rentry, align 8, !dbg !5823
  %res33 = getelementptr inbounds %struct.resource_entry, %struct.resource_entry* %40, i32 0, i32 1, !dbg !5824
  %41 = load %struct.resource*, %struct.resource** %res33, align 8, !dbg !5824
  %start34 = getelementptr inbounds %struct.resource, %struct.resource* %41, i32 0, i32 0, !dbg !5825
  %42 = load i64, i64* %start34, align 8, !dbg !5825
  store i64 %42, i64* %dma_start, align 8, !dbg !5826
  br label %if.end35, !dbg !5827

if.end35:                                         ; preds = %if.then32, %if.end29
  %43 = load %struct.resource_entry*, %struct.resource_entry** %rentry, align 8, !dbg !5828
  %res36 = getelementptr inbounds %struct.resource_entry, %struct.resource_entry* %43, i32 0, i32 1, !dbg !5830
  %44 = load %struct.resource*, %struct.resource** %res36, align 8, !dbg !5830
  %end = getelementptr inbounds %struct.resource, %struct.resource* %44, i32 0, i32 1, !dbg !5831
  %45 = load i64, i64* %end, align 8, !dbg !5831
  %46 = load i64, i64* %dma_end, align 8, !dbg !5832
  %cmp37 = icmp ugt i64 %45, %46, !dbg !5833
  br i1 %cmp37, label %if.then38, label %if.end41, !dbg !5834

if.then38:                                        ; preds = %if.end35
  %47 = load %struct.resource_entry*, %struct.resource_entry** %rentry, align 8, !dbg !5835
  %res39 = getelementptr inbounds %struct.resource_entry, %struct.resource_entry* %47, i32 0, i32 1, !dbg !5836
  %48 = load %struct.resource*, %struct.resource** %res39, align 8, !dbg !5836
  %end40 = getelementptr inbounds %struct.resource, %struct.resource* %48, i32 0, i32 1, !dbg !5837
  %49 = load i64, i64* %end40, align 8, !dbg !5837
  store i64 %49, i64* %dma_end, align 8, !dbg !5838
  br label %if.end41, !dbg !5839

if.end41:                                         ; preds = %if.then38, %if.end35
  br label %for.inc, !dbg !5840

for.inc:                                          ; preds = %if.end41
  call void @llvm.dbg.declare(metadata i8** %__mptr42, metadata !5841, metadata !DIExpression()), !dbg !5843
  %50 = load %struct.resource_entry*, %struct.resource_entry** %rentry, align 8, !dbg !5843
  %node43 = getelementptr inbounds %struct.resource_entry, %struct.resource_entry* %50, i32 0, i32 0, !dbg !5843
  %next44 = getelementptr inbounds %struct.list_head, %struct.list_head* %node43, i32 0, i32 0, !dbg !5843
  %51 = load %struct.list_head*, %struct.list_head** %next44, align 8, !dbg !5843
  %52 = bitcast %struct.list_head* %51 to i8*, !dbg !5843
  store i8* %52, i8** %__mptr42, align 8, !dbg !5843
  br label %do.body45, !dbg !5843

do.body45:                                        ; preds = %for.inc
  br label %do.end47, !dbg !5844

do.end47:                                         ; preds = %do.body45
  %53 = load i8*, i8** %__mptr42, align 8, !dbg !5843
  %add.ptr49 = getelementptr i8, i8* %53, i64 0, !dbg !5843
  %54 = bitcast i8* %add.ptr49 to %struct.resource_entry*, !dbg !5843
  store %struct.resource_entry* %54, %struct.resource_entry** %tmp48, align 8, !dbg !5844
  %55 = load %struct.resource_entry*, %struct.resource_entry** %tmp48, align 8, !dbg !5843
  store %struct.resource_entry* %55, %struct.resource_entry** %rentry, align 8, !dbg !5798
  br label %for.cond, !dbg !5798, !llvm.loop !5846

for.end:                                          ; preds = %for.cond
  %56 = load i64, i64* %dma_start, align 8, !dbg !5848
  %57 = load i64, i64* %dma_end, align 8, !dbg !5850
  %cmp50 = icmp uge i64 %56, %57, !dbg !5851
  br i1 %cmp50, label %if.then51, label %if.end52, !dbg !5852

if.then51:                                        ; preds = %for.end
  store i32 -22, i32* %ret, align 4, !dbg !5853
  br label %out, !dbg !5855

if.end52:                                         ; preds = %for.end
  %58 = load i64, i64* %dma_start, align 8, !dbg !5856
  %59 = load i64, i64* %dma_offset, align 8, !dbg !5857
  %sub = sub i64 %58, %59, !dbg !5858
  %60 = load i64*, i64** %dma_addr.addr, align 8, !dbg !5859
  store i64 %sub, i64* %60, align 8, !dbg !5860
  %61 = load i64, i64* %dma_end, align 8, !dbg !5861
  %62 = load i64, i64* %dma_start, align 8, !dbg !5862
  %sub53 = sub i64 %61, %62, !dbg !5863
  store i64 %sub53, i64* %len, align 8, !dbg !5864
  call void @llvm.dbg.declare(metadata i64* %__UNIQUE_ID___x260, metadata !5865, metadata !DIExpression()), !dbg !5867
  %63 = load i64, i64* %len, align 8, !dbg !5867
  store i64 %63, i64* %__UNIQUE_ID___x260, align 8, !dbg !5867
  call void @llvm.dbg.declare(metadata i64* %__UNIQUE_ID___y261, metadata !5868, metadata !DIExpression()), !dbg !5867
  %64 = load i64, i64* %len, align 8, !dbg !5867
  %add = add i64 %64, 1, !dbg !5867
  store i64 %add, i64* %__UNIQUE_ID___y261, align 8, !dbg !5867
  %65 = load i64, i64* %__UNIQUE_ID___x260, align 8, !dbg !5867
  %66 = load i64, i64* %__UNIQUE_ID___y261, align 8, !dbg !5867
  %cmp55 = icmp ugt i64 %65, %66, !dbg !5867
  br i1 %cmp55, label %cond.true56, label %cond.false57, !dbg !5867

cond.true56:                                      ; preds = %if.end52
  %67 = load i64, i64* %__UNIQUE_ID___x260, align 8, !dbg !5867
  br label %cond.end58, !dbg !5867

cond.false57:                                     ; preds = %if.end52
  %68 = load i64, i64* %__UNIQUE_ID___y261, align 8, !dbg !5867
  br label %cond.end58, !dbg !5867

cond.end58:                                       ; preds = %cond.false57, %cond.true56
  %cond59 = phi i64 [ %67, %cond.true56 ], [ %68, %cond.false57 ], !dbg !5867
  store i64 %cond59, i64* %tmp54, align 8, !dbg !5867
  %69 = load i64, i64* %tmp54, align 8, !dbg !5867
  %70 = load i64*, i64** %size.addr, align 8, !dbg !5869
  store i64 %69, i64* %70, align 8, !dbg !5870
  %71 = load i64, i64* %dma_offset, align 8, !dbg !5871
  %72 = load i64*, i64** %offset.addr, align 8, !dbg !5872
  store i64 %71, i64* %72, align 8, !dbg !5873
  br label %if.end60, !dbg !5874

if.end60:                                         ; preds = %cond.end58, %if.end13
  br label %out, !dbg !5875

out:                                              ; preds = %if.end60, %if.then51, %if.then28
  call void @llvm.dbg.label(metadata !5876), !dbg !5877
  call void @acpi_dev_free_resource_list(%struct.list_head* %list) #9, !dbg !5878
  %73 = load i32, i32* %ret, align 4, !dbg !5879
  %cmp61 = icmp sge i32 %73, 0, !dbg !5880
  br i1 %cmp61, label %cond.true62, label %cond.false63, !dbg !5879

cond.true62:                                      ; preds = %out
  br label %cond.end64, !dbg !5879

cond.false63:                                     ; preds = %out
  %74 = load i32, i32* %ret, align 4, !dbg !5881
  br label %cond.end64, !dbg !5879

cond.end64:                                       ; preds = %cond.false63, %cond.true62
  %cond65 = phi i32 [ 0, %cond.true62 ], [ %74, %cond.false63 ], !dbg !5879
  store i32 %cond65, i32* %retval, align 4, !dbg !5882
  br label %return, !dbg !5882

return:                                           ; preds = %cond.end64, %if.then11, %if.then7
  %75 = load i32, i32* %retval, align 4, !dbg !5883
  ret i32 %75, !dbg !5883
}

; Function Attrs: noredzone
declare dso_local zeroext i1 @is_acpi_device_node(%struct.fwnode_handle*) #1

; Function Attrs: noredzone
declare dso_local i32 @acpi_dev_get_dma_resources(%struct.acpi_device*, %struct.list_head*) #1

; Function Attrs: cold noredzone
declare dso_local void @_dev_warn(%struct.device*, i8*, ...) #4

; Function Attrs: noredzone
declare dso_local void @acpi_dev_free_resource_list(%struct.list_head*) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @acpi_dma_configure_id(%struct.device* %dev, i32 %attr, i32* %input_id) #0 !dbg !5884 {
entry:
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.device*, align 8
  %attr.addr = alloca i32, align 4
  %input_id.addr = alloca i32*, align 8
  %iommu = alloca %struct.iommu_ops*, align 8
  %dma_addr = alloca i64, align 8
  %size = alloca i64, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !5887, metadata !DIExpression()), !dbg !5888
  store i32 %attr, i32* %attr.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %attr.addr, metadata !5889, metadata !DIExpression()), !dbg !5890
  store i32* %input_id, i32** %input_id.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %input_id.addr, metadata !5891, metadata !DIExpression()), !dbg !5892
  call void @llvm.dbg.declare(metadata %struct.iommu_ops** %iommu, metadata !5893, metadata !DIExpression()), !dbg !5894
  call void @llvm.dbg.declare(metadata i64* %dma_addr, metadata !5895, metadata !DIExpression()), !dbg !5896
  store i64 0, i64* %dma_addr, align 8, !dbg !5896
  call void @llvm.dbg.declare(metadata i64* %size, metadata !5897, metadata !DIExpression()), !dbg !5898
  store i64 0, i64* %size, align 8, !dbg !5898
  %0 = load i32, i32* %attr.addr, align 4, !dbg !5899
  %cmp = icmp eq i32 %0, 0, !dbg !5901
  br i1 %cmp, label %if.then, label %if.end, !dbg !5902

if.then:                                          ; preds = %entry
  %1 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !5903
  call void @set_dma_ops(%struct.device* %1, %struct.dma_map_ops* @dma_dummy_ops) #9, !dbg !5905
  store i32 0, i32* %retval, align 4, !dbg !5906
  br label %return, !dbg !5906

if.end:                                           ; preds = %entry
  %2 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !5907
  call void @iort_dma_setup(%struct.device* %2, i64* %dma_addr, i64* %size) #9, !dbg !5908
  %3 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !5909
  %4 = load i32*, i32** %input_id.addr, align 8, !dbg !5910
  %call = call %struct.iommu_ops* @iort_iommu_configure_id(%struct.device* %3, i32* %4) #9, !dbg !5911
  store %struct.iommu_ops* %call, %struct.iommu_ops** %iommu, align 8, !dbg !5912
  %5 = load %struct.iommu_ops*, %struct.iommu_ops** %iommu, align 8, !dbg !5913
  %6 = bitcast %struct.iommu_ops* %5 to i8*, !dbg !5913
  %call1 = call i64 @PTR_ERR(i8* %6) #9, !dbg !5915
  %cmp2 = icmp eq i64 %call1, -517, !dbg !5916
  br i1 %cmp2, label %if.then3, label %if.end4, !dbg !5917

if.then3:                                         ; preds = %if.end
  store i32 -517, i32* %retval, align 4, !dbg !5918
  br label %return, !dbg !5918

if.end4:                                          ; preds = %if.end
  %7 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !5919
  %8 = load i64, i64* %dma_addr, align 8, !dbg !5920
  %9 = load i64, i64* %size, align 8, !dbg !5921
  %10 = load %struct.iommu_ops*, %struct.iommu_ops** %iommu, align 8, !dbg !5922
  %11 = load i32, i32* %attr.addr, align 4, !dbg !5923
  %cmp5 = icmp eq i32 %11, 2, !dbg !5924
  call void @arch_setup_dma_ops(%struct.device* %7, i64 %8, i64 %9, %struct.iommu_ops* %10, i1 zeroext %cmp5) #9, !dbg !5925
  store i32 0, i32* %retval, align 4, !dbg !5926
  br label %return, !dbg !5926

return:                                           ; preds = %if.end4, %if.then3, %if.then
  %12 = load i32, i32* %retval, align 4, !dbg !5927
  ret i32 %12, !dbg !5927
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @set_dma_ops(%struct.device* %dev, %struct.dma_map_ops* %dma_ops) #0 !dbg !5928 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %dma_ops.addr = alloca %struct.dma_map_ops*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !5931, metadata !DIExpression()), !dbg !5932
  store %struct.dma_map_ops* %dma_ops, %struct.dma_map_ops** %dma_ops.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dma_map_ops** %dma_ops.addr, metadata !5933, metadata !DIExpression()), !dbg !5934
  %0 = load %struct.dma_map_ops*, %struct.dma_map_ops** %dma_ops.addr, align 8, !dbg !5935
  %1 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !5936
  %dma_ops1 = getelementptr inbounds %struct.device, %struct.device* %1, i32 0, i32 15, !dbg !5937
  store %struct.dma_map_ops* %0, %struct.dma_map_ops** %dma_ops1, align 8, !dbg !5938
  ret void, !dbg !5939
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @iort_dma_setup(%struct.device* %dev, i64* %dma_addr, i64* %size) #0 !dbg !5940 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %dma_addr.addr = alloca i64*, align 8
  %size.addr = alloca i64*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !5944, metadata !DIExpression()), !dbg !5945
  store i64* %dma_addr, i64** %dma_addr.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %dma_addr.addr, metadata !5946, metadata !DIExpression()), !dbg !5947
  store i64* %size, i64** %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %size.addr, metadata !5948, metadata !DIExpression()), !dbg !5949
  ret void, !dbg !5950
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.iommu_ops* @iort_iommu_configure_id(%struct.device* %dev, i32* %id_in) #0 !dbg !5951 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %id_in.addr = alloca i32*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !5954, metadata !DIExpression()), !dbg !5955
  store i32* %id_in, i32** %id_in.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %id_in.addr, metadata !5956, metadata !DIExpression()), !dbg !5957
  ret %struct.iommu_ops* null, !dbg !5958
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @PTR_ERR(i8* %ptr) #0 !dbg !5959 {
entry:
  %ptr.addr = alloca i8*, align 8
  store i8* %ptr, i8** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %ptr.addr, metadata !5963, metadata !DIExpression()), !dbg !5964
  %0 = load i8*, i8** %ptr.addr, align 8, !dbg !5965
  %1 = ptrtoint i8* %0 to i64, !dbg !5966
  ret i64 %1, !dbg !5967
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @arch_setup_dma_ops(%struct.device* %dev, i64 %dma_base, i64 %size, %struct.iommu_ops* %iommu, i1 zeroext %coherent) #0 !dbg !5968 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %dma_base.addr = alloca i64, align 8
  %size.addr = alloca i64, align 8
  %iommu.addr = alloca %struct.iommu_ops*, align 8
  %coherent.addr = alloca i8, align 1
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !5971, metadata !DIExpression()), !dbg !5972
  store i64 %dma_base, i64* %dma_base.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %dma_base.addr, metadata !5973, metadata !DIExpression()), !dbg !5974
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !5975, metadata !DIExpression()), !dbg !5976
  store %struct.iommu_ops* %iommu, %struct.iommu_ops** %iommu.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.iommu_ops** %iommu.addr, metadata !5977, metadata !DIExpression()), !dbg !5978
  %frombool = zext i1 %coherent to i8
  store i8 %frombool, i8* %coherent.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %coherent.addr, metadata !5979, metadata !DIExpression()), !dbg !5980
  ret void, !dbg !5981
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @acpi_init_device_object(%struct.acpi_device* %device, i8* %handle, i32 %type, i64 %sta) #0 !dbg !5982 {
entry:
  %device.addr = alloca %struct.acpi_device*, align 8
  %handle.addr = alloca i8*, align 8
  %type.addr = alloca i32, align 4
  %sta.addr = alloca i64, align 8
  store %struct.acpi_device* %device, %struct.acpi_device** %device.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.acpi_device** %device.addr, metadata !5985, metadata !DIExpression()), !dbg !5986
  store i8* %handle, i8** %handle.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %handle.addr, metadata !5987, metadata !DIExpression()), !dbg !5988
  store i32 %type, i32* %type.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %type.addr, metadata !5989, metadata !DIExpression()), !dbg !5990
  store i64 %sta, i64* %sta.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %sta.addr, metadata !5991, metadata !DIExpression()), !dbg !5992
  %0 = load %struct.acpi_device*, %struct.acpi_device** %device.addr, align 8, !dbg !5993
  %pnp = getelementptr inbounds %struct.acpi_device, %struct.acpi_device* %0, i32 0, i32 10, !dbg !5994
  %ids = getelementptr inbounds %struct.acpi_device_pnp, %struct.acpi_device_pnp* %pnp, i32 0, i32 4, !dbg !5995
  call void @INIT_LIST_HEAD(%struct.list_head* %ids) #9, !dbg !5996
  %1 = load i32, i32* %type.addr, align 4, !dbg !5997
  %2 = load %struct.acpi_device*, %struct.acpi_device** %device.addr, align 8, !dbg !5998
  %device_type = getelementptr inbounds %struct.acpi_device, %struct.acpi_device* %2, i32 0, i32 0, !dbg !5999
  store i32 %1, i32* %device_type, align 8, !dbg !6000
  %3 = load i8*, i8** %handle.addr, align 8, !dbg !6001
  %4 = load %struct.acpi_device*, %struct.acpi_device** %device.addr, align 8, !dbg !6002
  %handle1 = getelementptr inbounds %struct.acpi_device, %struct.acpi_device* %4, i32 0, i32 1, !dbg !6003
  store i8* %3, i8** %handle1, align 8, !dbg !6004
  %5 = load i8*, i8** %handle.addr, align 8, !dbg !6005
  %call = call %struct.acpi_device* @acpi_bus_get_parent(i8* %5) #9, !dbg !6006
  %6 = load %struct.acpi_device*, %struct.acpi_device** %device.addr, align 8, !dbg !6007
  %parent = getelementptr inbounds %struct.acpi_device, %struct.acpi_device* %6, i32 0, i32 3, !dbg !6008
  store %struct.acpi_device* %call, %struct.acpi_device** %parent, align 8, !dbg !6009
  %7 = load %struct.acpi_device*, %struct.acpi_device** %device.addr, align 8, !dbg !6010
  %fwnode = getelementptr inbounds %struct.acpi_device, %struct.acpi_device* %7, i32 0, i32 2, !dbg !6011
  %ops = getelementptr inbounds %struct.fwnode_handle, %struct.fwnode_handle* %fwnode, i32 0, i32 1, !dbg !6012
  store %struct.fwnode_operations* @acpi_device_fwnode_ops, %struct.fwnode_operations** %ops, align 8, !dbg !6013
  %8 = load %struct.acpi_device*, %struct.acpi_device** %device.addr, align 8, !dbg !6014
  %9 = load i64, i64* %sta.addr, align 8, !dbg !6015
  %conv = trunc i64 %9 to i32, !dbg !6015
  call void @acpi_set_device_status(%struct.acpi_device* %8, i32 %conv) #9, !dbg !6016
  %10 = load %struct.acpi_device*, %struct.acpi_device** %device.addr, align 8, !dbg !6017
  call void @acpi_device_get_busid(%struct.acpi_device* %10) #9, !dbg !6018
  %11 = load i8*, i8** %handle.addr, align 8, !dbg !6019
  %12 = load %struct.acpi_device*, %struct.acpi_device** %device.addr, align 8, !dbg !6020
  %pnp2 = getelementptr inbounds %struct.acpi_device, %struct.acpi_device* %12, i32 0, i32 10, !dbg !6021
  %13 = load i32, i32* %type.addr, align 4, !dbg !6022
  call void @acpi_set_pnp_ids(i8* %11, %struct.acpi_device_pnp* %pnp2, i32 %13) #9, !dbg !6023
  %14 = load %struct.acpi_device*, %struct.acpi_device** %device.addr, align 8, !dbg !6024
  call void @acpi_init_properties(%struct.acpi_device* %14) #9, !dbg !6025
  %15 = load %struct.acpi_device*, %struct.acpi_device** %device.addr, align 8, !dbg !6026
  call void @acpi_bus_get_flags(%struct.acpi_device* %15) #9, !dbg !6027
  %16 = load %struct.acpi_device*, %struct.acpi_device** %device.addr, align 8, !dbg !6028
  %flags = getelementptr inbounds %struct.acpi_device, %struct.acpi_device* %16, i32 0, i32 9, !dbg !6029
  %17 = bitcast %struct.acpi_device_flags* %flags to i32*, !dbg !6030
  %bf.load = load i32, i32* %17, align 4, !dbg !6031
  %bf.clear = and i32 %bf.load, -17, !dbg !6031
  store i32 %bf.clear, i32* %17, align 4, !dbg !6031
  %18 = load %struct.acpi_device*, %struct.acpi_device** %device.addr, align 8, !dbg !6032
  %flags3 = getelementptr inbounds %struct.acpi_device, %struct.acpi_device* %18, i32 0, i32 9, !dbg !6033
  %19 = bitcast %struct.acpi_device_flags* %flags3 to i32*, !dbg !6034
  %bf.load4 = load i32, i32* %19, align 4, !dbg !6035
  %bf.clear5 = and i32 %bf.load4, -33, !dbg !6035
  %bf.set = or i32 %bf.clear5, 32, !dbg !6035
  store i32 %bf.set, i32* %19, align 4, !dbg !6035
  %20 = load %struct.acpi_device*, %struct.acpi_device** %device.addr, align 8, !dbg !6036
  %call6 = call zeroext i1 @acpi_device_enumeration_by_parent(%struct.acpi_device* %20) #9, !dbg !6037
  %conv7 = zext i1 %call6 to i32, !dbg !6037
  %21 = load %struct.acpi_device*, %struct.acpi_device** %device.addr, align 8, !dbg !6038
  %flags8 = getelementptr inbounds %struct.acpi_device, %struct.acpi_device* %21, i32 0, i32 9, !dbg !6039
  %22 = bitcast %struct.acpi_device_flags* %flags8 to i32*, !dbg !6040
  %bf.load9 = load i32, i32* %22, align 4, !dbg !6041
  %bf.value = and i32 %conv7, 1, !dbg !6041
  %bf.shl = shl i32 %bf.value, 12, !dbg !6041
  %bf.clear10 = and i32 %bf.load9, -4097, !dbg !6041
  %bf.set11 = or i32 %bf.clear10, %bf.shl, !dbg !6041
  store i32 %bf.set11, i32* %22, align 4, !dbg !6041
  %23 = load %struct.acpi_device*, %struct.acpi_device** %device.addr, align 8, !dbg !6042
  call void @acpi_device_clear_enumerated(%struct.acpi_device* %23) #9, !dbg !6043
  %24 = load %struct.acpi_device*, %struct.acpi_device** %device.addr, align 8, !dbg !6044
  %dev = getelementptr inbounds %struct.acpi_device, %struct.acpi_device* %24, i32 0, i32 21, !dbg !6045
  call void @device_initialize(%struct.device* %dev) #9, !dbg !6046
  %25 = load %struct.acpi_device*, %struct.acpi_device** %device.addr, align 8, !dbg !6047
  %dev12 = getelementptr inbounds %struct.acpi_device, %struct.acpi_device* %25, i32 0, i32 21, !dbg !6048
  call void @dev_set_uevent_suppress(%struct.device* %dev12, i32 1) #9, !dbg !6049
  %26 = load %struct.acpi_device*, %struct.acpi_device** %device.addr, align 8, !dbg !6050
  call void @acpi_init_coherency(%struct.acpi_device* %26) #9, !dbg !6051
  %27 = load %struct.acpi_device*, %struct.acpi_device** %device.addr, align 8, !dbg !6052
  %dep_unmet = getelementptr inbounds %struct.acpi_device, %struct.acpi_device* %27, i32 0, i32 23, !dbg !6053
  store i32 1, i32* %dep_unmet, align 4, !dbg !6054
  ret void, !dbg !6055
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.acpi_device* @acpi_bus_get_parent(i8* %handle) #0 !dbg !6056 {
entry:
  %retval = alloca %struct.acpi_device*, align 8
  %handle.addr = alloca i8*, align 8
  %device = alloca %struct.acpi_device*, align 8
  %status = alloca i32, align 4
  store i8* %handle, i8** %handle.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %handle.addr, metadata !6057, metadata !DIExpression()), !dbg !6058
  call void @llvm.dbg.declare(metadata %struct.acpi_device** %device, metadata !6059, metadata !DIExpression()), !dbg !6060
  store %struct.acpi_device* null, %struct.acpi_device** %device, align 8, !dbg !6060
  call void @llvm.dbg.declare(metadata i32* %status, metadata !6061, metadata !DIExpression()), !dbg !6062
  %0 = load i8*, i8** %handle.addr, align 8, !dbg !6063
  %tobool = icmp ne i8* %0, null, !dbg !6063
  br i1 %tobool, label %if.end, label %if.then, !dbg !6065

if.then:                                          ; preds = %entry
  %1 = load %struct.acpi_device*, %struct.acpi_device** @acpi_root, align 8, !dbg !6066
  store %struct.acpi_device* %1, %struct.acpi_device** %retval, align 8, !dbg !6067
  br label %return, !dbg !6067

if.end:                                           ; preds = %entry
  br label %do.body, !dbg !6068

do.body:                                          ; preds = %do.cond, %if.end
  %2 = load i8*, i8** %handle.addr, align 8, !dbg !6069
  %call = call i32 @acpi_get_parent(i8* %2, i8** %handle.addr) #9, !dbg !6071
  store i32 %call, i32* %status, align 4, !dbg !6072
  %3 = load i32, i32* %status, align 4, !dbg !6073
  %tobool1 = icmp ne i32 %3, 0, !dbg !6073
  br i1 %tobool1, label %if.then2, label %if.end3, !dbg !6075

if.then2:                                         ; preds = %do.body
  %4 = load i32, i32* %status, align 4, !dbg !6076
  %cmp = icmp eq i32 %4, 10, !dbg !6077
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !6076

cond.true:                                        ; preds = %if.then2
  br label %cond.end, !dbg !6076

cond.false:                                       ; preds = %if.then2
  %5 = load %struct.acpi_device*, %struct.acpi_device** @acpi_root, align 8, !dbg !6078
  br label %cond.end, !dbg !6076

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.acpi_device* [ null, %cond.true ], [ %5, %cond.false ], !dbg !6076
  store %struct.acpi_device* %cond, %struct.acpi_device** %retval, align 8, !dbg !6079
  br label %return, !dbg !6079

if.end3:                                          ; preds = %do.body
  br label %do.cond, !dbg !6080

do.cond:                                          ; preds = %if.end3
  %6 = load i8*, i8** %handle.addr, align 8, !dbg !6081
  %call4 = call i32 @acpi_bus_get_device(i8* %6, %struct.acpi_device** %device) #9, !dbg !6082
  %tobool5 = icmp ne i32 %call4, 0, !dbg !6080
  br i1 %tobool5, label %do.body, label %do.end, !dbg !6080, !llvm.loop !6083

do.end:                                           ; preds = %do.cond
  %7 = load %struct.acpi_device*, %struct.acpi_device** %device, align 8, !dbg !6085
  store %struct.acpi_device* %7, %struct.acpi_device** %retval, align 8, !dbg !6086
  br label %return, !dbg !6086

return:                                           ; preds = %do.end, %cond.end, %if.then
  %8 = load %struct.acpi_device*, %struct.acpi_device** %retval, align 8, !dbg !6087
  ret %struct.acpi_device* %8, !dbg !6087
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @acpi_set_device_status(%struct.acpi_device* %adev, i32 %sta) #0 !dbg !6088 {
entry:
  %adev.addr = alloca %struct.acpi_device*, align 8
  %sta.addr = alloca i32, align 4
  store %struct.acpi_device* %adev, %struct.acpi_device** %adev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.acpi_device** %adev.addr, metadata !6089, metadata !DIExpression()), !dbg !6090
  store i32 %sta, i32* %sta.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %sta.addr, metadata !6091, metadata !DIExpression()), !dbg !6092
  %0 = load i32, i32* %sta.addr, align 4, !dbg !6093
  %1 = load %struct.acpi_device*, %struct.acpi_device** %adev.addr, align 8, !dbg !6094
  %status = getelementptr inbounds %struct.acpi_device, %struct.acpi_device* %1, i32 0, i32 8, !dbg !6095
  %2 = bitcast %struct.acpi_device_status* %status to i32*, !dbg !6096
  store i32 %0, i32* %2, align 8, !dbg !6097
  ret void, !dbg !6098
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @acpi_device_get_busid(%struct.acpi_device* %device) #0 !dbg !6099 {
entry:
  %device.addr = alloca %struct.acpi_device*, align 8
  %bus_id = alloca [5 x i8], align 1
  %buffer = alloca %struct.acpi_buffer, align 8
  %i = alloca i32, align 4
  store %struct.acpi_device* %device, %struct.acpi_device** %device.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.acpi_device** %device.addr, metadata !6100, metadata !DIExpression()), !dbg !6101
  call void @llvm.dbg.declare(metadata [5 x i8]* %bus_id, metadata !6102, metadata !DIExpression()), !dbg !6104
  %0 = bitcast [5 x i8]* %bus_id to i8*, !dbg !6104
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %0, i8* align 1 getelementptr inbounds ([5 x i8], [5 x i8]* @__const.acpi_device_get_busid.bus_id, i32 0, i32 0), i64 5, i1 false), !dbg !6104
  call void @llvm.dbg.declare(metadata %struct.acpi_buffer* %buffer, metadata !6105, metadata !DIExpression()), !dbg !6106
  %length = getelementptr inbounds %struct.acpi_buffer, %struct.acpi_buffer* %buffer, i32 0, i32 0, !dbg !6107
  store i64 5, i64* %length, align 8, !dbg !6107
  %pointer = getelementptr inbounds %struct.acpi_buffer, %struct.acpi_buffer* %buffer, i32 0, i32 1, !dbg !6107
  %arraydecay = getelementptr inbounds [5 x i8], [5 x i8]* %bus_id, i64 0, i64 0, !dbg !6108
  store i8* %arraydecay, i8** %pointer, align 8, !dbg !6107
  call void @llvm.dbg.declare(metadata i32* %i, metadata !6109, metadata !DIExpression()), !dbg !6110
  store i32 0, i32* %i, align 4, !dbg !6110
  %1 = load %struct.acpi_device*, %struct.acpi_device** %device.addr, align 8, !dbg !6111
  %parent = getelementptr inbounds %struct.acpi_device, %struct.acpi_device* %1, i32 0, i32 3, !dbg !6111
  %2 = load %struct.acpi_device*, %struct.acpi_device** %parent, align 8, !dbg !6111
  %tobool = icmp ne %struct.acpi_device* %2, null, !dbg !6111
  br i1 %tobool, label %if.end, label %if.then, !dbg !6113

if.then:                                          ; preds = %entry
  %3 = load %struct.acpi_device*, %struct.acpi_device** %device.addr, align 8, !dbg !6114
  %pnp = getelementptr inbounds %struct.acpi_device, %struct.acpi_device* %3, i32 0, i32 10, !dbg !6116
  %bus_id1 = getelementptr inbounds %struct.acpi_device_pnp, %struct.acpi_device_pnp* %pnp, i32 0, i32 0, !dbg !6117
  %arraydecay2 = getelementptr inbounds [8 x i8], [8 x i8]* %bus_id1, i64 0, i64 0, !dbg !6114
  %call = call i8* @strcpy(i8* %arraydecay2, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.43, i64 0, i64 0)) #9, !dbg !6118
  br label %sw.epilog, !dbg !6119

if.end:                                           ; preds = %entry
  %4 = load %struct.acpi_device*, %struct.acpi_device** %device.addr, align 8, !dbg !6120
  %device_type = getelementptr inbounds %struct.acpi_device, %struct.acpi_device* %4, i32 0, i32 0, !dbg !6121
  %5 = load i32, i32* %device_type, align 8, !dbg !6121
  switch i32 %5, label %sw.default [
    i32 4, label %sw.bb
    i32 5, label %sw.bb7
    i32 6, label %sw.bb12
  ], !dbg !6122

sw.bb:                                            ; preds = %if.end
  %6 = load %struct.acpi_device*, %struct.acpi_device** %device.addr, align 8, !dbg !6123
  %pnp3 = getelementptr inbounds %struct.acpi_device, %struct.acpi_device* %6, i32 0, i32 10, !dbg !6125
  %bus_id4 = getelementptr inbounds %struct.acpi_device_pnp, %struct.acpi_device_pnp* %pnp3, i32 0, i32 0, !dbg !6126
  %arraydecay5 = getelementptr inbounds [8 x i8], [8 x i8]* %bus_id4, i64 0, i64 0, !dbg !6123
  %call6 = call i8* @strcpy(i8* %arraydecay5, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.44, i64 0, i64 0)) #9, !dbg !6127
  br label %sw.epilog, !dbg !6128

sw.bb7:                                           ; preds = %if.end
  %7 = load %struct.acpi_device*, %struct.acpi_device** %device.addr, align 8, !dbg !6129
  %pnp8 = getelementptr inbounds %struct.acpi_device, %struct.acpi_device* %7, i32 0, i32 10, !dbg !6130
  %bus_id9 = getelementptr inbounds %struct.acpi_device_pnp, %struct.acpi_device_pnp* %pnp8, i32 0, i32 0, !dbg !6131
  %arraydecay10 = getelementptr inbounds [8 x i8], [8 x i8]* %bus_id9, i64 0, i64 0, !dbg !6129
  %call11 = call i8* @strcpy(i8* %arraydecay10, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.45, i64 0, i64 0)) #9, !dbg !6132
  br label %sw.epilog, !dbg !6133

sw.bb12:                                          ; preds = %if.end
  %8 = load %struct.acpi_device*, %struct.acpi_device** %device.addr, align 8, !dbg !6134
  %pnp13 = getelementptr inbounds %struct.acpi_device, %struct.acpi_device* %8, i32 0, i32 10, !dbg !6135
  %bus_id14 = getelementptr inbounds %struct.acpi_device_pnp, %struct.acpi_device_pnp* %pnp13, i32 0, i32 0, !dbg !6136
  %arraydecay15 = getelementptr inbounds [8 x i8], [8 x i8]* %bus_id14, i64 0, i64 0, !dbg !6134
  %call16 = call i8* @strcpy(i8* %arraydecay15, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.46, i64 0, i64 0)) #9, !dbg !6137
  br label %sw.epilog, !dbg !6138

sw.default:                                       ; preds = %if.end
  %9 = load %struct.acpi_device*, %struct.acpi_device** %device.addr, align 8, !dbg !6139
  %handle = getelementptr inbounds %struct.acpi_device, %struct.acpi_device* %9, i32 0, i32 1, !dbg !6140
  %10 = load i8*, i8** %handle, align 8, !dbg !6140
  %call17 = call i32 @acpi_get_name(i8* %10, i32 1, %struct.acpi_buffer* %buffer) #9, !dbg !6141
  store i32 3, i32* %i, align 4, !dbg !6142
  br label %for.cond, !dbg !6144

for.cond:                                         ; preds = %for.inc, %sw.default
  %11 = load i32, i32* %i, align 4, !dbg !6145
  %cmp = icmp sgt i32 %11, 1, !dbg !6147
  br i1 %cmp, label %for.body, label %for.end, !dbg !6148

for.body:                                         ; preds = %for.cond
  %12 = load i32, i32* %i, align 4, !dbg !6149
  %idxprom = sext i32 %12 to i64, !dbg !6152
  %arrayidx = getelementptr [5 x i8], [5 x i8]* %bus_id, i64 0, i64 %idxprom, !dbg !6152
  %13 = load i8, i8* %arrayidx, align 1, !dbg !6152
  %conv = sext i8 %13 to i32, !dbg !6152
  %cmp18 = icmp eq i32 %conv, 95, !dbg !6153
  br i1 %cmp18, label %if.then20, label %if.else, !dbg !6154

if.then20:                                        ; preds = %for.body
  %14 = load i32, i32* %i, align 4, !dbg !6155
  %idxprom21 = sext i32 %14 to i64, !dbg !6156
  %arrayidx22 = getelementptr [5 x i8], [5 x i8]* %bus_id, i64 0, i64 %idxprom21, !dbg !6156
  store i8 0, i8* %arrayidx22, align 1, !dbg !6157
  br label %if.end23, !dbg !6156

if.else:                                          ; preds = %for.body
  br label %for.end, !dbg !6158

if.end23:                                         ; preds = %if.then20
  br label %for.inc, !dbg !6159

for.inc:                                          ; preds = %if.end23
  %15 = load i32, i32* %i, align 4, !dbg !6160
  %dec = add i32 %15, -1, !dbg !6160
  store i32 %dec, i32* %i, align 4, !dbg !6160
  br label %for.cond, !dbg !6161, !llvm.loop !6162

for.end:                                          ; preds = %if.else, %for.cond
  %16 = load %struct.acpi_device*, %struct.acpi_device** %device.addr, align 8, !dbg !6164
  %pnp24 = getelementptr inbounds %struct.acpi_device, %struct.acpi_device* %16, i32 0, i32 10, !dbg !6165
  %bus_id25 = getelementptr inbounds %struct.acpi_device_pnp, %struct.acpi_device_pnp* %pnp24, i32 0, i32 0, !dbg !6166
  %arraydecay26 = getelementptr inbounds [8 x i8], [8 x i8]* %bus_id25, i64 0, i64 0, !dbg !6164
  %arraydecay27 = getelementptr inbounds [5 x i8], [5 x i8]* %bus_id, i64 0, i64 0, !dbg !6167
  %call28 = call i8* @strcpy(i8* %arraydecay26, i8* %arraydecay27) #9, !dbg !6168
  br label %sw.epilog, !dbg !6169

sw.epilog:                                        ; preds = %if.then, %for.end, %sw.bb12, %sw.bb7, %sw.bb
  ret void, !dbg !6170
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @acpi_set_pnp_ids(i8* %handle, %struct.acpi_device_pnp* %pnp, i32 %device_type) #0 !dbg !6171 {
entry:
  %handle.addr = alloca i8*, align 8
  %pnp.addr = alloca %struct.acpi_device_pnp*, align 8
  %device_type.addr = alloca i32, align 4
  %status = alloca i32, align 4
  %info = alloca %struct.acpi_device_info*, align 8
  %cid_list = alloca %struct.acpi_pnp_device_id_list*, align 8
  %i = alloca i32, align 4
  store i8* %handle, i8** %handle.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %handle.addr, metadata !6174, metadata !DIExpression()), !dbg !6175
  store %struct.acpi_device_pnp* %pnp, %struct.acpi_device_pnp** %pnp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.acpi_device_pnp** %pnp.addr, metadata !6176, metadata !DIExpression()), !dbg !6177
  store i32 %device_type, i32* %device_type.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %device_type.addr, metadata !6178, metadata !DIExpression()), !dbg !6179
  call void @llvm.dbg.declare(metadata i32* %status, metadata !6180, metadata !DIExpression()), !dbg !6181
  call void @llvm.dbg.declare(metadata %struct.acpi_device_info** %info, metadata !6182, metadata !DIExpression()), !dbg !6211
  call void @llvm.dbg.declare(metadata %struct.acpi_pnp_device_id_list** %cid_list, metadata !6212, metadata !DIExpression()), !dbg !6214
  call void @llvm.dbg.declare(metadata i32* %i, metadata !6215, metadata !DIExpression()), !dbg !6216
  %0 = load i32, i32* %device_type.addr, align 4, !dbg !6217
  switch i32 %0, label %sw.epilog [
    i32 0, label %sw.bb
    i32 1, label %sw.bb68
    i32 2, label %sw.bb69
    i32 3, label %sw.bb70
    i32 4, label %sw.bb71
    i32 5, label %sw.bb72
    i32 6, label %sw.bb73
  ], !dbg !6218

sw.bb:                                            ; preds = %entry
  %1 = load i8*, i8** %handle.addr, align 8, !dbg !6219
  %cmp = icmp eq i8* %1, inttoptr (i64 -1 to i8*), !dbg !6222
  br i1 %cmp, label %if.then, label %if.end, !dbg !6223

if.then:                                          ; preds = %sw.bb
  %2 = load %struct.acpi_device_pnp*, %struct.acpi_device_pnp** %pnp.addr, align 8, !dbg !6224
  call void @acpi_add_id(%struct.acpi_device_pnp* %2, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.47, i64 0, i64 0)) #9, !dbg !6226
  br label %sw.epilog, !dbg !6227

if.end:                                           ; preds = %sw.bb
  %3 = load i8*, i8** %handle.addr, align 8, !dbg !6228
  %call = call i32 @acpi_get_object_info(i8* %3, %struct.acpi_device_info** %info) #9, !dbg !6229
  store i32 %call, i32* %status, align 4, !dbg !6230
  %4 = load i32, i32* %status, align 4, !dbg !6231
  %tobool = icmp ne i32 %4, 0, !dbg !6231
  br i1 %tobool, label %if.then1, label %if.end3, !dbg !6233

if.then1:                                         ; preds = %if.end
  %call2 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.48, i64 0, i64 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @__func__.acpi_set_pnp_ids, i64 0, i64 0)) #10, !dbg !6234
  br label %sw.epilog, !dbg !6236

if.end3:                                          ; preds = %if.end
  %5 = load %struct.acpi_device_info*, %struct.acpi_device_info** %info, align 8, !dbg !6237
  %valid = getelementptr inbounds %struct.acpi_device_info, %struct.acpi_device_info* %5, i32 0, i32 4, !dbg !6239
  %6 = load i16, i16* %valid, align 2, !dbg !6239
  %conv = zext i16 %6 to i32, !dbg !6237
  %and = and i32 %conv, 4, !dbg !6240
  %tobool4 = icmp ne i32 %and, 0, !dbg !6240
  br i1 %tobool4, label %if.then5, label %if.end6, !dbg !6241

if.then5:                                         ; preds = %if.end3
  %7 = load %struct.acpi_device_pnp*, %struct.acpi_device_pnp** %pnp.addr, align 8, !dbg !6242
  %8 = load %struct.acpi_device_info*, %struct.acpi_device_info** %info, align 8, !dbg !6244
  %hardware_id = getelementptr inbounds %struct.acpi_device_info, %struct.acpi_device_info* %8, i32 0, i32 9, !dbg !6245
  %string = getelementptr inbounds %struct.acpi_pnp_device_id, %struct.acpi_pnp_device_id* %hardware_id, i32 0, i32 1, !dbg !6246
  %9 = load i8*, i8** %string, align 8, !dbg !6246
  call void @acpi_add_id(%struct.acpi_device_pnp* %7, i8* %9) #9, !dbg !6247
  %10 = load %struct.acpi_device_pnp*, %struct.acpi_device_pnp** %pnp.addr, align 8, !dbg !6248
  %type = getelementptr inbounds %struct.acpi_device_pnp, %struct.acpi_device_pnp* %10, i32 0, i32 1, !dbg !6249
  %11 = bitcast %struct.acpi_pnp_type* %type to i32*, !dbg !6250
  %bf.load = load i32, i32* %11, align 8, !dbg !6251
  %bf.clear = and i32 %bf.load, -5, !dbg !6251
  %bf.set = or i32 %bf.clear, 4, !dbg !6251
  store i32 %bf.set, i32* %11, align 8, !dbg !6251
  br label %if.end6, !dbg !6252

if.end6:                                          ; preds = %if.then5, %if.end3
  %12 = load %struct.acpi_device_info*, %struct.acpi_device_info** %info, align 8, !dbg !6253
  %valid7 = getelementptr inbounds %struct.acpi_device_info, %struct.acpi_device_info* %12, i32 0, i32 4, !dbg !6255
  %13 = load i16, i16* %valid7, align 2, !dbg !6255
  %conv8 = zext i16 %13 to i32, !dbg !6253
  %and9 = and i32 %conv8, 32, !dbg !6256
  %tobool10 = icmp ne i32 %and9, 0, !dbg !6256
  br i1 %tobool10, label %if.then11, label %if.end15, !dbg !6257

if.then11:                                        ; preds = %if.end6
  %14 = load %struct.acpi_device_info*, %struct.acpi_device_info** %info, align 8, !dbg !6258
  %compatible_id_list = getelementptr inbounds %struct.acpi_device_info, %struct.acpi_device_info* %14, i32 0, i32 12, !dbg !6260
  store %struct.acpi_pnp_device_id_list* %compatible_id_list, %struct.acpi_pnp_device_id_list** %cid_list, align 8, !dbg !6261
  store i32 0, i32* %i, align 4, !dbg !6262
  br label %for.cond, !dbg !6264

for.cond:                                         ; preds = %for.inc, %if.then11
  %15 = load i32, i32* %i, align 4, !dbg !6265
  %16 = load %struct.acpi_pnp_device_id_list*, %struct.acpi_pnp_device_id_list** %cid_list, align 8, !dbg !6267
  %count = getelementptr inbounds %struct.acpi_pnp_device_id_list, %struct.acpi_pnp_device_id_list* %16, i32 0, i32 0, !dbg !6268
  %17 = load i32, i32* %count, align 8, !dbg !6268
  %cmp12 = icmp ult i32 %15, %17, !dbg !6269
  br i1 %cmp12, label %for.body, label %for.end, !dbg !6270

for.body:                                         ; preds = %for.cond
  %18 = load %struct.acpi_device_pnp*, %struct.acpi_device_pnp** %pnp.addr, align 8, !dbg !6271
  %19 = load %struct.acpi_pnp_device_id_list*, %struct.acpi_pnp_device_id_list** %cid_list, align 8, !dbg !6272
  %ids = getelementptr inbounds %struct.acpi_pnp_device_id_list, %struct.acpi_pnp_device_id_list* %19, i32 0, i32 2, !dbg !6273
  %20 = load i32, i32* %i, align 4, !dbg !6274
  %idxprom = sext i32 %20 to i64, !dbg !6272
  %arrayidx = getelementptr [0 x %struct.acpi_pnp_device_id], [0 x %struct.acpi_pnp_device_id]* %ids, i64 0, i64 %idxprom, !dbg !6272
  %string14 = getelementptr inbounds %struct.acpi_pnp_device_id, %struct.acpi_pnp_device_id* %arrayidx, i32 0, i32 1, !dbg !6275
  %21 = load i8*, i8** %string14, align 8, !dbg !6275
  call void @acpi_add_id(%struct.acpi_device_pnp* %18, i8* %21) #9, !dbg !6276
  br label %for.inc, !dbg !6276

for.inc:                                          ; preds = %for.body
  %22 = load i32, i32* %i, align 4, !dbg !6277
  %inc = add i32 %22, 1, !dbg !6277
  store i32 %inc, i32* %i, align 4, !dbg !6277
  br label %for.cond, !dbg !6278, !llvm.loop !6279

for.end:                                          ; preds = %for.cond
  br label %if.end15, !dbg !6281

if.end15:                                         ; preds = %for.end, %if.end6
  %23 = load %struct.acpi_device_info*, %struct.acpi_device_info** %info, align 8, !dbg !6282
  %valid16 = getelementptr inbounds %struct.acpi_device_info, %struct.acpi_device_info* %23, i32 0, i32 4, !dbg !6284
  %24 = load i16, i16* %valid16, align 2, !dbg !6284
  %conv17 = zext i16 %24 to i32, !dbg !6282
  %and18 = and i32 %conv17, 2, !dbg !6285
  %tobool19 = icmp ne i32 %and18, 0, !dbg !6285
  br i1 %tobool19, label %if.then20, label %if.end25, !dbg !6286

if.then20:                                        ; preds = %if.end15
  %25 = load %struct.acpi_device_info*, %struct.acpi_device_info** %info, align 8, !dbg !6287
  %address = getelementptr inbounds %struct.acpi_device_info, %struct.acpi_device_info* %25, i32 0, i32 8, !dbg !6289
  %26 = load i64, i64* %address, align 8, !dbg !6289
  %27 = load %struct.acpi_device_pnp*, %struct.acpi_device_pnp** %pnp.addr, align 8, !dbg !6290
  %bus_address = getelementptr inbounds %struct.acpi_device_pnp, %struct.acpi_device_pnp* %27, i32 0, i32 2, !dbg !6291
  store i64 %26, i64* %bus_address, align 8, !dbg !6292
  %28 = load %struct.acpi_device_pnp*, %struct.acpi_device_pnp** %pnp.addr, align 8, !dbg !6293
  %type21 = getelementptr inbounds %struct.acpi_device_pnp, %struct.acpi_device_pnp* %28, i32 0, i32 1, !dbg !6294
  %29 = bitcast %struct.acpi_pnp_type* %type21 to i32*, !dbg !6295
  %bf.load22 = load i32, i32* %29, align 8, !dbg !6296
  %bf.clear23 = and i32 %bf.load22, -3, !dbg !6296
  %bf.set24 = or i32 %bf.clear23, 2, !dbg !6296
  store i32 %bf.set24, i32* %29, align 8, !dbg !6296
  br label %if.end25, !dbg !6297

if.end25:                                         ; preds = %if.then20, %if.end15
  %30 = load %struct.acpi_device_info*, %struct.acpi_device_info** %info, align 8, !dbg !6298
  %valid26 = getelementptr inbounds %struct.acpi_device_info, %struct.acpi_device_info* %30, i32 0, i32 4, !dbg !6300
  %31 = load i16, i16* %valid26, align 2, !dbg !6300
  %conv27 = zext i16 %31 to i32, !dbg !6298
  %and28 = and i32 %conv27, 8, !dbg !6301
  %tobool29 = icmp ne i32 %and28, 0, !dbg !6301
  br i1 %tobool29, label %if.then30, label %if.end34, !dbg !6302

if.then30:                                        ; preds = %if.end25
  %32 = load %struct.acpi_device_info*, %struct.acpi_device_info** %info, align 8, !dbg !6303
  %unique_id = getelementptr inbounds %struct.acpi_device_info, %struct.acpi_device_info* %32, i32 0, i32 10, !dbg !6304
  %string31 = getelementptr inbounds %struct.acpi_pnp_device_id, %struct.acpi_pnp_device_id* %unique_id, i32 0, i32 1, !dbg !6305
  %33 = load i8*, i8** %string31, align 8, !dbg !6305
  %call32 = call noalias i8* @kstrdup(i8* %33, i32 3264) #9, !dbg !6306
  %34 = load %struct.acpi_device_pnp*, %struct.acpi_device_pnp** %pnp.addr, align 8, !dbg !6307
  %unique_id33 = getelementptr inbounds %struct.acpi_device_pnp, %struct.acpi_device_pnp* %34, i32 0, i32 3, !dbg !6308
  store i8* %call32, i8** %unique_id33, align 8, !dbg !6309
  br label %if.end34, !dbg !6307

if.end34:                                         ; preds = %if.then30, %if.end25
  %35 = load %struct.acpi_device_info*, %struct.acpi_device_info** %info, align 8, !dbg !6310
  %valid35 = getelementptr inbounds %struct.acpi_device_info, %struct.acpi_device_info* %35, i32 0, i32 4, !dbg !6312
  %36 = load i16, i16* %valid35, align 2, !dbg !6312
  %conv36 = zext i16 %36 to i32, !dbg !6310
  %and37 = and i32 %conv36, 64, !dbg !6313
  %tobool38 = icmp ne i32 %and37, 0, !dbg !6313
  br i1 %tobool38, label %if.then39, label %if.end41, !dbg !6314

if.then39:                                        ; preds = %if.end34
  %37 = load %struct.acpi_device_pnp*, %struct.acpi_device_pnp** %pnp.addr, align 8, !dbg !6315
  %38 = load %struct.acpi_device_info*, %struct.acpi_device_info** %info, align 8, !dbg !6316
  %class_code = getelementptr inbounds %struct.acpi_device_info, %struct.acpi_device_info* %38, i32 0, i32 11, !dbg !6317
  %string40 = getelementptr inbounds %struct.acpi_pnp_device_id, %struct.acpi_pnp_device_id* %class_code, i32 0, i32 1, !dbg !6318
  %39 = load i8*, i8** %string40, align 8, !dbg !6318
  call void @acpi_add_id(%struct.acpi_device_pnp* %37, i8* %39) #9, !dbg !6319
  br label %if.end41, !dbg !6319

if.end41:                                         ; preds = %if.then39, %if.end34
  %40 = load %struct.acpi_device_info*, %struct.acpi_device_info** %info, align 8, !dbg !6320
  %41 = bitcast %struct.acpi_device_info* %40 to i8*, !dbg !6320
  call void @kfree(i8* %41) #9, !dbg !6321
  %42 = load i8*, i8** %handle.addr, align 8, !dbg !6322
  %call42 = call i64 @acpi_is_video_device(i8* %42) #9, !dbg !6324
  %tobool43 = icmp ne i64 %call42, 0, !dbg !6324
  br i1 %tobool43, label %if.then44, label %if.else, !dbg !6325

if.then44:                                        ; preds = %if.end41
  %43 = load %struct.acpi_device_pnp*, %struct.acpi_device_pnp** %pnp.addr, align 8, !dbg !6326
  call void @acpi_add_id(%struct.acpi_device_pnp* %43, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.49, i64 0, i64 0)) #9, !dbg !6327
  br label %if.end67, !dbg !6327

if.else:                                          ; preds = %if.end41
  %44 = load i8*, i8** %handle.addr, align 8, !dbg !6328
  %call45 = call zeroext i1 @acpi_bay_match(i8* %44) #9, !dbg !6330
  br i1 %call45, label %if.then46, label %if.else47, !dbg !6331

if.then46:                                        ; preds = %if.else
  %45 = load %struct.acpi_device_pnp*, %struct.acpi_device_pnp** %pnp.addr, align 8, !dbg !6332
  call void @acpi_add_id(%struct.acpi_device_pnp* %45, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.50, i64 0, i64 0)) #9, !dbg !6333
  br label %if.end66, !dbg !6333

if.else47:                                        ; preds = %if.else
  %46 = load i8*, i8** %handle.addr, align 8, !dbg !6334
  %call48 = call zeroext i1 @acpi_dock_match(i8* %46) #9, !dbg !6336
  br i1 %call48, label %if.then49, label %if.else50, !dbg !6337

if.then49:                                        ; preds = %if.else47
  %47 = load %struct.acpi_device_pnp*, %struct.acpi_device_pnp** %pnp.addr, align 8, !dbg !6338
  call void @acpi_add_id(%struct.acpi_device_pnp* %47, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.51, i64 0, i64 0)) #9, !dbg !6339
  br label %if.end65, !dbg !6339

if.else50:                                        ; preds = %if.else47
  %48 = load i8*, i8** %handle.addr, align 8, !dbg !6340
  %call51 = call zeroext i1 @acpi_ibm_smbus_match(i8* %48) #9, !dbg !6342
  br i1 %call51, label %if.then52, label %if.else53, !dbg !6343

if.then52:                                        ; preds = %if.else50
  %49 = load %struct.acpi_device_pnp*, %struct.acpi_device_pnp** %pnp.addr, align 8, !dbg !6344
  call void @acpi_add_id(%struct.acpi_device_pnp* %49, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.52, i64 0, i64 0)) #9, !dbg !6345
  br label %if.end64, !dbg !6345

if.else53:                                        ; preds = %if.else50
  %50 = load %struct.acpi_device_pnp*, %struct.acpi_device_pnp** %pnp.addr, align 8, !dbg !6346
  %ids54 = getelementptr inbounds %struct.acpi_device_pnp, %struct.acpi_device_pnp* %50, i32 0, i32 4, !dbg !6348
  %call55 = call i32 @list_empty(%struct.list_head* %ids54) #9, !dbg !6349
  %tobool56 = icmp ne i32 %call55, 0, !dbg !6349
  br i1 %tobool56, label %land.lhs.true, label %if.end63, !dbg !6350

land.lhs.true:                                    ; preds = %if.else53
  %51 = load i8*, i8** %handle.addr, align 8, !dbg !6351
  %call57 = call zeroext i1 @acpi_object_is_system_bus(i8* %51) #9, !dbg !6352
  br i1 %call57, label %if.then59, label %if.end63, !dbg !6353

if.then59:                                        ; preds = %land.lhs.true
  %52 = load %struct.acpi_device_pnp*, %struct.acpi_device_pnp** %pnp.addr, align 8, !dbg !6354
  call void @acpi_add_id(%struct.acpi_device_pnp* %52, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.53, i64 0, i64 0)) #9, !dbg !6356
  %53 = load %struct.acpi_device_pnp*, %struct.acpi_device_pnp** %pnp.addr, align 8, !dbg !6357
  %device_name = getelementptr inbounds %struct.acpi_device_pnp, %struct.acpi_device_pnp* %53, i32 0, i32 5, !dbg !6358
  %arraydecay = getelementptr inbounds [40 x i8], [40 x i8]* %device_name, i64 0, i64 0, !dbg !6357
  %call60 = call i8* @strcpy(i8* %arraydecay, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.54, i64 0, i64 0)) #9, !dbg !6359
  %54 = load %struct.acpi_device_pnp*, %struct.acpi_device_pnp** %pnp.addr, align 8, !dbg !6360
  %device_class = getelementptr inbounds %struct.acpi_device_pnp, %struct.acpi_device_pnp* %54, i32 0, i32 6, !dbg !6361
  %arraydecay61 = getelementptr inbounds [20 x i8], [20 x i8]* %device_class, i64 0, i64 0, !dbg !6360
  %call62 = call i8* @strcpy(i8* %arraydecay61, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.55, i64 0, i64 0)) #9, !dbg !6362
  br label %if.end63, !dbg !6363

if.end63:                                         ; preds = %if.then59, %land.lhs.true, %if.else53
  br label %if.end64

if.end64:                                         ; preds = %if.end63, %if.then52
  br label %if.end65

if.end65:                                         ; preds = %if.end64, %if.then49
  br label %if.end66

if.end66:                                         ; preds = %if.end65, %if.then46
  br label %if.end67

if.end67:                                         ; preds = %if.end66, %if.then44
  br label %sw.epilog, !dbg !6364

sw.bb68:                                          ; preds = %entry
  %55 = load %struct.acpi_device_pnp*, %struct.acpi_device_pnp** %pnp.addr, align 8, !dbg !6365
  call void @acpi_add_id(%struct.acpi_device_pnp* %55, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.56, i64 0, i64 0)) #9, !dbg !6366
  br label %sw.epilog, !dbg !6367

sw.bb69:                                          ; preds = %entry
  %56 = load %struct.acpi_device_pnp*, %struct.acpi_device_pnp** %pnp.addr, align 8, !dbg !6368
  call void @acpi_add_id(%struct.acpi_device_pnp* %56, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.57, i64 0, i64 0)) #9, !dbg !6369
  br label %sw.epilog, !dbg !6370

sw.bb70:                                          ; preds = %entry
  %57 = load %struct.acpi_device_pnp*, %struct.acpi_device_pnp** %pnp.addr, align 8, !dbg !6371
  call void @acpi_add_id(%struct.acpi_device_pnp* %57, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.58, i64 0, i64 0)) #9, !dbg !6372
  br label %sw.epilog, !dbg !6373

sw.bb71:                                          ; preds = %entry
  %58 = load %struct.acpi_device_pnp*, %struct.acpi_device_pnp** %pnp.addr, align 8, !dbg !6374
  call void @acpi_add_id(%struct.acpi_device_pnp* %58, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.59, i64 0, i64 0)) #9, !dbg !6375
  br label %sw.epilog, !dbg !6376

sw.bb72:                                          ; preds = %entry
  %59 = load %struct.acpi_device_pnp*, %struct.acpi_device_pnp** %pnp.addr, align 8, !dbg !6377
  call void @acpi_add_id(%struct.acpi_device_pnp* %59, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.60, i64 0, i64 0)) #9, !dbg !6378
  br label %sw.epilog, !dbg !6379

sw.bb73:                                          ; preds = %entry
  %60 = load %struct.acpi_device_pnp*, %struct.acpi_device_pnp** %pnp.addr, align 8, !dbg !6380
  call void @acpi_add_id(%struct.acpi_device_pnp* %60, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.61, i64 0, i64 0)) #9, !dbg !6381
  br label %sw.epilog, !dbg !6382

sw.epilog:                                        ; preds = %if.then1, %entry, %sw.bb73, %sw.bb72, %sw.bb71, %sw.bb70, %sw.bb69, %sw.bb68, %if.end67, %if.then
  ret void, !dbg !6383
}

; Function Attrs: noredzone
declare dso_local void @acpi_init_properties(%struct.acpi_device*) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @acpi_bus_get_flags(%struct.acpi_device* %device) #0 !dbg !6384 {
entry:
  %device.addr = alloca %struct.acpi_device*, align 8
  store %struct.acpi_device* %device, %struct.acpi_device** %device.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.acpi_device** %device.addr, metadata !6385, metadata !DIExpression()), !dbg !6386
  %0 = load %struct.acpi_device*, %struct.acpi_device** %device.addr, align 8, !dbg !6387
  %handle = getelementptr inbounds %struct.acpi_device, %struct.acpi_device* %0, i32 0, i32 1, !dbg !6389
  %1 = load i8*, i8** %handle, align 8, !dbg !6389
  %call = call zeroext i1 @acpi_has_method(i8* %1, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.35, i64 0, i64 0)) #9, !dbg !6390
  br i1 %call, label %if.then, label %if.end, !dbg !6391

if.then:                                          ; preds = %entry
  %2 = load %struct.acpi_device*, %struct.acpi_device** %device.addr, align 8, !dbg !6392
  %flags = getelementptr inbounds %struct.acpi_device, %struct.acpi_device* %2, i32 0, i32 9, !dbg !6393
  %3 = bitcast %struct.acpi_device_flags* %flags to i32*, !dbg !6394
  %bf.load = load i32, i32* %3, align 4, !dbg !6395
  %bf.clear = and i32 %bf.load, -2, !dbg !6395
  %bf.set = or i32 %bf.clear, 1, !dbg !6395
  store i32 %bf.set, i32* %3, align 4, !dbg !6395
  br label %if.end, !dbg !6392

if.end:                                           ; preds = %if.then, %entry
  %4 = load %struct.acpi_device*, %struct.acpi_device** %device.addr, align 8, !dbg !6396
  %handle1 = getelementptr inbounds %struct.acpi_device, %struct.acpi_device* %4, i32 0, i32 1, !dbg !6398
  %5 = load i8*, i8** %handle1, align 8, !dbg !6398
  %call2 = call zeroext i1 @acpi_has_method(i8* %5, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.69, i64 0, i64 0)) #9, !dbg !6399
  br i1 %call2, label %if.then3, label %if.end8, !dbg !6400

if.then3:                                         ; preds = %if.end
  %6 = load %struct.acpi_device*, %struct.acpi_device** %device.addr, align 8, !dbg !6401
  %flags4 = getelementptr inbounds %struct.acpi_device, %struct.acpi_device* %6, i32 0, i32 9, !dbg !6402
  %7 = bitcast %struct.acpi_device_flags* %flags4 to i32*, !dbg !6403
  %bf.load5 = load i32, i32* %7, align 4, !dbg !6404
  %bf.clear6 = and i32 %bf.load5, -3, !dbg !6404
  %bf.set7 = or i32 %bf.clear6, 2, !dbg !6404
  store i32 %bf.set7, i32* %7, align 4, !dbg !6404
  br label %if.end8, !dbg !6401

if.end8:                                          ; preds = %if.then3, %if.end
  %8 = load %struct.acpi_device*, %struct.acpi_device** %device.addr, align 8, !dbg !6405
  %handle9 = getelementptr inbounds %struct.acpi_device, %struct.acpi_device* %8, i32 0, i32 1, !dbg !6407
  %9 = load i8*, i8** %handle9, align 8, !dbg !6407
  %call10 = call zeroext i1 @acpi_has_method(i8* %9, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.8, i64 0, i64 0)) #9, !dbg !6408
  br i1 %call10, label %if.then13, label %lor.lhs.false, !dbg !6409

lor.lhs.false:                                    ; preds = %if.end8
  %10 = load %struct.acpi_device*, %struct.acpi_device** %device.addr, align 8, !dbg !6410
  %handle11 = getelementptr inbounds %struct.acpi_device, %struct.acpi_device* %10, i32 0, i32 1, !dbg !6411
  %11 = load i8*, i8** %handle11, align 8, !dbg !6411
  %call12 = call zeroext i1 @acpi_has_method(i8* %11, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.13, i64 0, i64 0)) #9, !dbg !6412
  br i1 %call12, label %if.then13, label %if.end18, !dbg !6413

if.then13:                                        ; preds = %lor.lhs.false, %if.end8
  %12 = load %struct.acpi_device*, %struct.acpi_device** %device.addr, align 8, !dbg !6414
  %flags14 = getelementptr inbounds %struct.acpi_device, %struct.acpi_device* %12, i32 0, i32 9, !dbg !6415
  %13 = bitcast %struct.acpi_device_flags* %flags14 to i32*, !dbg !6416
  %bf.load15 = load i32, i32* %13, align 4, !dbg !6417
  %bf.clear16 = and i32 %bf.load15, -5, !dbg !6417
  %bf.set17 = or i32 %bf.clear16, 4, !dbg !6417
  store i32 %bf.set17, i32* %13, align 4, !dbg !6417
  br label %if.end18, !dbg !6414

if.end18:                                         ; preds = %if.then13, %lor.lhs.false
  ret void, !dbg !6418
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @acpi_device_enumeration_by_parent(%struct.acpi_device* %device) #0 !dbg !4443 {
entry:
  %retval = alloca i1, align 1
  %device.addr = alloca %struct.acpi_device*, align 8
  %resource_list = alloca %struct.list_head, align 8
  %is_serial_bus_slave = alloca i8, align 1
  store %struct.acpi_device* %device, %struct.acpi_device** %device.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.acpi_device** %device.addr, metadata !6419, metadata !DIExpression()), !dbg !6420
  call void @llvm.dbg.declare(metadata %struct.list_head* %resource_list, metadata !6421, metadata !DIExpression()), !dbg !6422
  call void @llvm.dbg.declare(metadata i8* %is_serial_bus_slave, metadata !6423, metadata !DIExpression()), !dbg !6424
  store i8 0, i8* %is_serial_bus_slave, align 1, !dbg !6424
  %0 = load %struct.acpi_device*, %struct.acpi_device** %device.addr, align 8, !dbg !6425
  %call = call zeroext i1 @acpi_is_indirect_io_slave(%struct.acpi_device* %0) #9, !dbg !6427
  br i1 %call, label %if.then, label %if.end, !dbg !6428

if.then:                                          ; preds = %entry
  store i1 true, i1* %retval, align 1, !dbg !6429
  br label %return, !dbg !6429

if.end:                                           ; preds = %entry
  %1 = load i8, i8* @x86_apple_machine, align 1, !dbg !6430
  %tobool = trunc i8 %1 to i1, !dbg !6430
  br i1 %tobool, label %land.lhs.true, label %if.end8, !dbg !6432

land.lhs.true:                                    ; preds = %if.end
  %2 = load %struct.acpi_device*, %struct.acpi_device** %device.addr, align 8, !dbg !6433
  %fwnode = getelementptr inbounds %struct.acpi_device, %struct.acpi_device* %2, i32 0, i32 2, !dbg !6434
  %call1 = call zeroext i1 @fwnode_property_present(%struct.fwnode_handle* %fwnode, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.70, i64 0, i64 0)) #9, !dbg !6435
  br i1 %call1, label %if.then7, label %lor.lhs.false, !dbg !6436

lor.lhs.false:                                    ; preds = %land.lhs.true
  %3 = load %struct.acpi_device*, %struct.acpi_device** %device.addr, align 8, !dbg !6437
  %fwnode2 = getelementptr inbounds %struct.acpi_device, %struct.acpi_device* %3, i32 0, i32 2, !dbg !6438
  %call3 = call zeroext i1 @fwnode_property_present(%struct.fwnode_handle* %fwnode2, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.71, i64 0, i64 0)) #9, !dbg !6439
  br i1 %call3, label %if.then7, label %lor.lhs.false4, !dbg !6440

lor.lhs.false4:                                   ; preds = %lor.lhs.false
  %4 = load %struct.acpi_device*, %struct.acpi_device** %device.addr, align 8, !dbg !6441
  %fwnode5 = getelementptr inbounds %struct.acpi_device, %struct.acpi_device* %4, i32 0, i32 2, !dbg !6442
  %call6 = call zeroext i1 @fwnode_property_present(%struct.fwnode_handle* %fwnode5, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.72, i64 0, i64 0)) #9, !dbg !6443
  br i1 %call6, label %if.then7, label %if.end8, !dbg !6444

if.then7:                                         ; preds = %lor.lhs.false4, %lor.lhs.false, %land.lhs.true
  store i1 true, i1* %retval, align 1, !dbg !6445
  br label %return, !dbg !6445

if.end8:                                          ; preds = %lor.lhs.false4, %if.end
  %5 = load %struct.acpi_device*, %struct.acpi_device** %device.addr, align 8, !dbg !6446
  %call9 = call i32 @acpi_match_device_ids(%struct.acpi_device* %5, %struct.acpi_device_id* getelementptr inbounds ([5 x %struct.acpi_device_id], [5 x %struct.acpi_device_id]* @acpi_device_enumeration_by_parent.i2c_multi_instantiate_ids, i64 0, i64 0)) #9, !dbg !6448
  %tobool10 = icmp ne i32 %call9, 0, !dbg !6448
  br i1 %tobool10, label %if.end12, label %if.then11, !dbg !6449

if.then11:                                        ; preds = %if.end8
  store i1 false, i1* %retval, align 1, !dbg !6450
  br label %return, !dbg !6450

if.end12:                                         ; preds = %if.end8
  call void @INIT_LIST_HEAD(%struct.list_head* %resource_list) #9, !dbg !6451
  %6 = load %struct.acpi_device*, %struct.acpi_device** %device.addr, align 8, !dbg !6452
  %call13 = call i32 @acpi_dev_get_resources(%struct.acpi_device* %6, %struct.list_head* %resource_list, i32 (%struct.acpi_resource*, i8*)* @acpi_check_serial_bus_slave, i8* %is_serial_bus_slave) #9, !dbg !6453
  call void @acpi_dev_free_resource_list(%struct.list_head* %resource_list) #9, !dbg !6454
  %7 = load i8, i8* %is_serial_bus_slave, align 1, !dbg !6455
  %tobool14 = trunc i8 %7 to i1, !dbg !6455
  store i1 %tobool14, i1* %retval, align 1, !dbg !6456
  br label %return, !dbg !6456

return:                                           ; preds = %if.end12, %if.then11, %if.then7, %if.then
  %8 = load i1, i1* %retval, align 1, !dbg !6457
  ret i1 %8, !dbg !6457
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @acpi_device_clear_enumerated(%struct.acpi_device* %adev) #0 !dbg !6458 {
entry:
  %adev.addr = alloca %struct.acpi_device*, align 8
  store %struct.acpi_device* %adev, %struct.acpi_device** %adev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.acpi_device** %adev.addr, metadata !6459, metadata !DIExpression()), !dbg !6460
  %0 = load %struct.acpi_device*, %struct.acpi_device** %adev.addr, align 8, !dbg !6461
  %flags = getelementptr inbounds %struct.acpi_device, %struct.acpi_device* %0, i32 0, i32 9, !dbg !6462
  %1 = bitcast %struct.acpi_device_flags* %flags to i32*, !dbg !6463
  %bf.load = load i32, i32* %1, align 4, !dbg !6464
  %bf.clear = and i32 %bf.load, -65, !dbg !6464
  store i32 %bf.clear, i32* %1, align 4, !dbg !6464
  ret void, !dbg !6465
}

; Function Attrs: noredzone
declare dso_local void @device_initialize(%struct.device*) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @dev_set_uevent_suppress(%struct.device* %dev, i32 %val) #0 !dbg !6466 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %val.addr = alloca i32, align 4
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !6469, metadata !DIExpression()), !dbg !6470
  store i32 %val, i32* %val.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %val.addr, metadata !6471, metadata !DIExpression()), !dbg !6472
  %0 = load i32, i32* %val.addr, align 4, !dbg !6473
  %1 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !6474
  %kobj = getelementptr inbounds %struct.device, %struct.device* %1, i32 0, i32 0, !dbg !6475
  %uevent_suppress = getelementptr inbounds %struct.kobject, %struct.kobject* %kobj, i32 0, i32 7, !dbg !6476
  %2 = trunc i32 %0 to i8, !dbg !6477
  %bf.load = load i8, i8* %uevent_suppress, align 4, !dbg !6477
  %bf.value = and i8 %2, 1, !dbg !6477
  %bf.shl = shl i8 %bf.value, 4, !dbg !6477
  %bf.clear = and i8 %bf.load, -17, !dbg !6477
  %bf.set = or i8 %bf.clear, %bf.shl, !dbg !6477
  store i8 %bf.set, i8* %uevent_suppress, align 4, !dbg !6477
  %bf.result.cast = zext i8 %bf.value to i32, !dbg !6477
  ret void, !dbg !6478
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @acpi_init_coherency(%struct.acpi_device* %adev) #0 !dbg !6479 {
entry:
  %adev.addr = alloca %struct.acpi_device*, align 8
  %cca = alloca i64, align 8
  %status = alloca i32, align 4
  %parent = alloca %struct.acpi_device*, align 8
  store %struct.acpi_device* %adev, %struct.acpi_device** %adev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.acpi_device** %adev.addr, metadata !6480, metadata !DIExpression()), !dbg !6481
  call void @llvm.dbg.declare(metadata i64* %cca, metadata !6482, metadata !DIExpression()), !dbg !6483
  store i64 0, i64* %cca, align 8, !dbg !6483
  call void @llvm.dbg.declare(metadata i32* %status, metadata !6484, metadata !DIExpression()), !dbg !6485
  call void @llvm.dbg.declare(metadata %struct.acpi_device** %parent, metadata !6486, metadata !DIExpression()), !dbg !6487
  %0 = load %struct.acpi_device*, %struct.acpi_device** %adev.addr, align 8, !dbg !6488
  %parent1 = getelementptr inbounds %struct.acpi_device, %struct.acpi_device* %0, i32 0, i32 3, !dbg !6489
  %1 = load %struct.acpi_device*, %struct.acpi_device** %parent1, align 8, !dbg !6489
  store %struct.acpi_device* %1, %struct.acpi_device** %parent, align 8, !dbg !6487
  %2 = load %struct.acpi_device*, %struct.acpi_device** %parent, align 8, !dbg !6490
  %tobool = icmp ne %struct.acpi_device* %2, null, !dbg !6490
  br i1 %tobool, label %land.lhs.true, label %if.else, !dbg !6492

land.lhs.true:                                    ; preds = %entry
  %3 = load %struct.acpi_device*, %struct.acpi_device** %parent, align 8, !dbg !6493
  %flags = getelementptr inbounds %struct.acpi_device, %struct.acpi_device* %3, i32 0, i32 9, !dbg !6494
  %4 = bitcast %struct.acpi_device_flags* %flags to i32*, !dbg !6495
  %bf.load = load i32, i32* %4, align 4, !dbg !6495
  %bf.lshr = lshr i32 %bf.load, 11, !dbg !6495
  %bf.clear = and i32 %bf.lshr, 1, !dbg !6495
  %tobool2 = icmp ne i32 %bf.clear, 0, !dbg !6493
  br i1 %tobool2, label %if.then, label %if.else, !dbg !6496

if.then:                                          ; preds = %land.lhs.true
  %5 = load %struct.acpi_device*, %struct.acpi_device** %adev.addr, align 8, !dbg !6497
  %flags3 = getelementptr inbounds %struct.acpi_device, %struct.acpi_device* %5, i32 0, i32 9, !dbg !6499
  %6 = bitcast %struct.acpi_device_flags* %flags3 to i32*, !dbg !6500
  %bf.load4 = load i32, i32* %6, align 4, !dbg !6501
  %bf.clear5 = and i32 %bf.load4, -2049, !dbg !6501
  %bf.set = or i32 %bf.clear5, 2048, !dbg !6501
  store i32 %bf.set, i32* %6, align 4, !dbg !6501
  %7 = load %struct.acpi_device*, %struct.acpi_device** %parent, align 8, !dbg !6502
  %flags6 = getelementptr inbounds %struct.acpi_device, %struct.acpi_device* %7, i32 0, i32 9, !dbg !6503
  %8 = bitcast %struct.acpi_device_flags* %flags6 to i32*, !dbg !6504
  %bf.load7 = load i32, i32* %8, align 4, !dbg !6504
  %bf.lshr8 = lshr i32 %bf.load7, 10, !dbg !6504
  %bf.clear9 = and i32 %bf.lshr8, 1, !dbg !6504
  %conv = zext i32 %bf.clear9 to i64, !dbg !6502
  store i64 %conv, i64* %cca, align 8, !dbg !6505
  br label %if.end17, !dbg !6506

if.else:                                          ; preds = %land.lhs.true, %entry
  %9 = load %struct.acpi_device*, %struct.acpi_device** %adev.addr, align 8, !dbg !6507
  %handle = getelementptr inbounds %struct.acpi_device, %struct.acpi_device* %9, i32 0, i32 1, !dbg !6509
  %10 = load i8*, i8** %handle, align 8, !dbg !6509
  %call = call i32 @acpi_evaluate_integer(i8* %10, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.73, i64 0, i64 0), %struct.acpi_object_list* null, i64* %cca) #9, !dbg !6510
  store i32 %call, i32* %status, align 4, !dbg !6511
  %11 = load i32, i32* %status, align 4, !dbg !6512
  %tobool10 = icmp ne i32 %11, 0, !dbg !6512
  br i1 %tobool10, label %if.else16, label %if.then11, !dbg !6514

if.then11:                                        ; preds = %if.else
  %12 = load %struct.acpi_device*, %struct.acpi_device** %adev.addr, align 8, !dbg !6515
  %flags12 = getelementptr inbounds %struct.acpi_device, %struct.acpi_device* %12, i32 0, i32 9, !dbg !6516
  %13 = bitcast %struct.acpi_device_flags* %flags12 to i32*, !dbg !6517
  %bf.load13 = load i32, i32* %13, align 4, !dbg !6518
  %bf.clear14 = and i32 %bf.load13, -2049, !dbg !6518
  %bf.set15 = or i32 %bf.clear14, 2048, !dbg !6518
  store i32 %bf.set15, i32* %13, align 4, !dbg !6518
  br label %if.end, !dbg !6515

if.else16:                                        ; preds = %if.else
  store i64 1, i64* %cca, align 8, !dbg !6519
  br label %if.end

if.end:                                           ; preds = %if.else16, %if.then11
  br label %if.end17

if.end17:                                         ; preds = %if.end, %if.then
  %14 = load i64, i64* %cca, align 8, !dbg !6521
  %conv18 = trunc i64 %14 to i32, !dbg !6521
  %15 = load %struct.acpi_device*, %struct.acpi_device** %adev.addr, align 8, !dbg !6522
  %flags19 = getelementptr inbounds %struct.acpi_device, %struct.acpi_device* %15, i32 0, i32 9, !dbg !6523
  %16 = bitcast %struct.acpi_device_flags* %flags19 to i32*, !dbg !6524
  %bf.load20 = load i32, i32* %16, align 4, !dbg !6525
  %bf.value = and i32 %conv18, 1, !dbg !6525
  %bf.shl = shl i32 %bf.value, 10, !dbg !6525
  %bf.clear21 = and i32 %bf.load20, -1025, !dbg !6525
  %bf.set22 = or i32 %bf.clear21, %bf.shl, !dbg !6525
  store i32 %bf.set22, i32* %16, align 4, !dbg !6525
  ret void, !dbg !6526
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @acpi_device_add_finalize(%struct.acpi_device* %device) #0 !dbg !6527 {
entry:
  %device.addr = alloca %struct.acpi_device*, align 8
  store %struct.acpi_device* %device, %struct.acpi_device** %device.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.acpi_device** %device.addr, metadata !6528, metadata !DIExpression()), !dbg !6529
  %0 = load %struct.acpi_device*, %struct.acpi_device** %device.addr, align 8, !dbg !6530
  %dev = getelementptr inbounds %struct.acpi_device, %struct.acpi_device* %0, i32 0, i32 21, !dbg !6531
  call void @dev_set_uevent_suppress(%struct.device* %dev, i32 0) #9, !dbg !6532
  %1 = load %struct.acpi_device*, %struct.acpi_device** %device.addr, align 8, !dbg !6533
  %dev1 = getelementptr inbounds %struct.acpi_device, %struct.acpi_device* %1, i32 0, i32 21, !dbg !6534
  %kobj = getelementptr inbounds %struct.device, %struct.device* %dev1, i32 0, i32 0, !dbg !6535
  %call = call i32 @kobject_uevent(%struct.kobject* %kobj, i32 0) #9, !dbg !6536
  ret void, !dbg !6537
}

; Function Attrs: noredzone
declare dso_local i32 @kobject_uevent(%struct.kobject*, i32) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local zeroext i1 @acpi_device_is_present(%struct.acpi_device* %adev) #0 !dbg !6538 {
entry:
  %adev.addr = alloca %struct.acpi_device*, align 8
  store %struct.acpi_device* %adev, %struct.acpi_device** %adev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.acpi_device** %adev.addr, metadata !6543, metadata !DIExpression()), !dbg !6544
  %0 = load %struct.acpi_device*, %struct.acpi_device** %adev.addr, align 8, !dbg !6545
  %status = getelementptr inbounds %struct.acpi_device, %struct.acpi_device* %0, i32 0, i32 8, !dbg !6546
  %1 = bitcast %struct.acpi_device_status* %status to i32*, !dbg !6547
  %bf.load = load i32, i32* %1, align 8, !dbg !6547
  %bf.clear = and i32 %bf.load, 1, !dbg !6547
  %tobool = icmp ne i32 %bf.clear, 0, !dbg !6545
  br i1 %tobool, label %lor.end, label %lor.rhs, !dbg !6548

lor.rhs:                                          ; preds = %entry
  %2 = load %struct.acpi_device*, %struct.acpi_device** %adev.addr, align 8, !dbg !6549
  %status1 = getelementptr inbounds %struct.acpi_device, %struct.acpi_device* %2, i32 0, i32 8, !dbg !6550
  %3 = bitcast %struct.acpi_device_status* %status1 to i32*, !dbg !6551
  %bf.load2 = load i32, i32* %3, align 8, !dbg !6551
  %bf.lshr = lshr i32 %bf.load2, 3, !dbg !6551
  %bf.clear3 = and i32 %bf.lshr, 1, !dbg !6551
  %tobool4 = icmp ne i32 %bf.clear3, 0, !dbg !6548
  br label %lor.end, !dbg !6548

lor.end:                                          ; preds = %lor.rhs, %entry
  %4 = phi i1 [ true, %entry ], [ %tobool4, %lor.rhs ]
  ret i1 %4, !dbg !6552
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @acpi_scan_hotplug_enabled(%struct.acpi_hotplug_profile* %hotplug, i1 zeroext %val) #0 !dbg !6553 {
entry:
  %hotplug.addr = alloca %struct.acpi_hotplug_profile*, align 8
  %val.addr = alloca i8, align 1
  store %struct.acpi_hotplug_profile* %hotplug, %struct.acpi_hotplug_profile** %hotplug.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.acpi_hotplug_profile** %hotplug.addr, metadata !6557, metadata !DIExpression()), !dbg !6558
  %frombool = zext i1 %val to i8
  store i8 %frombool, i8* %val.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %val.addr, metadata !6559, metadata !DIExpression()), !dbg !6560
  %0 = load %struct.acpi_hotplug_profile*, %struct.acpi_hotplug_profile** %hotplug.addr, align 8, !dbg !6561
  %enabled = getelementptr inbounds %struct.acpi_hotplug_profile, %struct.acpi_hotplug_profile* %0, i32 0, i32 3, !dbg !6563
  %bf.load = load i8, i8* %enabled, align 8, !dbg !6563
  %bf.clear = and i8 %bf.load, 1, !dbg !6563
  %bf.cast = trunc i8 %bf.clear to i1, !dbg !6563
  %lnot = xor i1 %bf.cast, true, !dbg !6564
  %lnot1 = xor i1 %lnot, true, !dbg !6565
  %lnot.ext = zext i1 %lnot1 to i32, !dbg !6565
  %1 = load i8, i8* %val.addr, align 1, !dbg !6566
  %tobool = trunc i8 %1 to i1, !dbg !6566
  %lnot2 = xor i1 %tobool, true, !dbg !6567
  %lnot4 = xor i1 %lnot2, true, !dbg !6568
  %lnot.ext5 = zext i1 %lnot4 to i32, !dbg !6568
  %cmp = icmp eq i32 %lnot.ext, %lnot.ext5, !dbg !6569
  br i1 %cmp, label %if.then, label %if.end, !dbg !6570

if.then:                                          ; preds = %entry
  br label %return, !dbg !6571

if.end:                                           ; preds = %entry
  call void @mutex_lock(%struct.mutex* @acpi_scan_lock) #9, !dbg !6572
  %2 = load i8, i8* %val.addr, align 1, !dbg !6573
  %tobool6 = trunc i8 %2 to i1, !dbg !6573
  %3 = load %struct.acpi_hotplug_profile*, %struct.acpi_hotplug_profile** %hotplug.addr, align 8, !dbg !6574
  %enabled7 = getelementptr inbounds %struct.acpi_hotplug_profile, %struct.acpi_hotplug_profile* %3, i32 0, i32 3, !dbg !6575
  %4 = zext i1 %tobool6 to i8, !dbg !6576
  %bf.load8 = load i8, i8* %enabled7, align 8, !dbg !6576
  %bf.clear9 = and i8 %bf.load8, -2, !dbg !6576
  %bf.set = or i8 %bf.clear9, %4, !dbg !6576
  store i8 %bf.set, i8* %enabled7, align 8, !dbg !6576
  %tobool10 = trunc i8 %4 to i1, !dbg !6576
  call void @mutex_unlock(%struct.mutex* @acpi_scan_lock) #9, !dbg !6577
  br label %return, !dbg !6578

return:                                           ; preds = %if.end, %if.then
  ret void, !dbg !6578
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @acpi_walk_dep_device_list(i8* %handle) #0 !dbg !6579 {
entry:
  %handle.addr = alloca i8*, align 8
  %dep = alloca %struct.acpi_dep_data*, align 8
  %tmp = alloca %struct.acpi_dep_data*, align 8
  %adev = alloca %struct.acpi_device*, align 8
  %__mptr = alloca i8*, align 8
  %tmp1 = alloca %struct.acpi_dep_data*, align 8
  %__mptr2 = alloca i8*, align 8
  %tmp5 = alloca %struct.acpi_dep_data*, align 8
  %__mptr16 = alloca i8*, align 8
  %tmp21 = alloca %struct.acpi_dep_data*, align 8
  store i8* %handle, i8** %handle.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %handle.addr, metadata !6582, metadata !DIExpression()), !dbg !6583
  call void @llvm.dbg.declare(metadata %struct.acpi_dep_data** %dep, metadata !6584, metadata !DIExpression()), !dbg !6585
  call void @llvm.dbg.declare(metadata %struct.acpi_dep_data** %tmp, metadata !6586, metadata !DIExpression()), !dbg !6587
  call void @llvm.dbg.declare(metadata %struct.acpi_device** %adev, metadata !6588, metadata !DIExpression()), !dbg !6589
  call void @mutex_lock(%struct.mutex* @acpi_dep_list_lock) #9, !dbg !6590
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !6591, metadata !DIExpression()), !dbg !6594
  %0 = load %struct.list_head*, %struct.list_head** getelementptr inbounds (%struct.list_head, %struct.list_head* @acpi_dep_list, i32 0, i32 0), align 8, !dbg !6594
  %1 = bitcast %struct.list_head* %0 to i8*, !dbg !6594
  store i8* %1, i8** %__mptr, align 8, !dbg !6594
  br label %do.body, !dbg !6594

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !6595

do.end:                                           ; preds = %do.body
  %2 = load i8*, i8** %__mptr, align 8, !dbg !6594
  %add.ptr = getelementptr i8, i8* %2, i64 0, !dbg !6594
  %3 = bitcast i8* %add.ptr to %struct.acpi_dep_data*, !dbg !6594
  store %struct.acpi_dep_data* %3, %struct.acpi_dep_data** %tmp1, align 8, !dbg !6595
  %4 = load %struct.acpi_dep_data*, %struct.acpi_dep_data** %tmp1, align 8, !dbg !6594
  store %struct.acpi_dep_data* %4, %struct.acpi_dep_data** %dep, align 8, !dbg !6597
  call void @llvm.dbg.declare(metadata i8** %__mptr2, metadata !6598, metadata !DIExpression()), !dbg !6600
  %5 = load %struct.acpi_dep_data*, %struct.acpi_dep_data** %dep, align 8, !dbg !6600
  %node = getelementptr inbounds %struct.acpi_dep_data, %struct.acpi_dep_data* %5, i32 0, i32 0, !dbg !6600
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %node, i32 0, i32 0, !dbg !6600
  %6 = load %struct.list_head*, %struct.list_head** %next, align 8, !dbg !6600
  %7 = bitcast %struct.list_head* %6 to i8*, !dbg !6600
  store i8* %7, i8** %__mptr2, align 8, !dbg !6600
  br label %do.body3, !dbg !6600

do.body3:                                         ; preds = %do.end
  br label %do.end4, !dbg !6601

do.end4:                                          ; preds = %do.body3
  %8 = load i8*, i8** %__mptr2, align 8, !dbg !6600
  %add.ptr6 = getelementptr i8, i8* %8, i64 0, !dbg !6600
  %9 = bitcast i8* %add.ptr6 to %struct.acpi_dep_data*, !dbg !6600
  store %struct.acpi_dep_data* %9, %struct.acpi_dep_data** %tmp5, align 8, !dbg !6601
  %10 = load %struct.acpi_dep_data*, %struct.acpi_dep_data** %tmp5, align 8, !dbg !6600
  store %struct.acpi_dep_data* %10, %struct.acpi_dep_data** %tmp, align 8, !dbg !6597
  br label %for.cond, !dbg !6597

for.cond:                                         ; preds = %do.end20, %do.end4
  %11 = load %struct.acpi_dep_data*, %struct.acpi_dep_data** %dep, align 8, !dbg !6603
  %node7 = getelementptr inbounds %struct.acpi_dep_data, %struct.acpi_dep_data* %11, i32 0, i32 0, !dbg !6603
  %cmp = icmp eq %struct.list_head* %node7, @acpi_dep_list, !dbg !6603
  %lnot = xor i1 %cmp, true, !dbg !6603
  br i1 %lnot, label %for.body, label %for.end, !dbg !6597

for.body:                                         ; preds = %for.cond
  %12 = load %struct.acpi_dep_data*, %struct.acpi_dep_data** %dep, align 8, !dbg !6605
  %master = getelementptr inbounds %struct.acpi_dep_data, %struct.acpi_dep_data* %12, i32 0, i32 1, !dbg !6608
  %13 = load i8*, i8** %master, align 8, !dbg !6608
  %14 = load i8*, i8** %handle.addr, align 8, !dbg !6609
  %cmp8 = icmp eq i8* %13, %14, !dbg !6610
  br i1 %cmp8, label %if.then, label %if.end15, !dbg !6611

if.then:                                          ; preds = %for.body
  %15 = load %struct.acpi_dep_data*, %struct.acpi_dep_data** %dep, align 8, !dbg !6612
  %slave = getelementptr inbounds %struct.acpi_dep_data, %struct.acpi_dep_data* %15, i32 0, i32 2, !dbg !6614
  %16 = load i8*, i8** %slave, align 8, !dbg !6614
  %call = call i32 @acpi_bus_get_device(i8* %16, %struct.acpi_device** %adev) #9, !dbg !6615
  %17 = load %struct.acpi_device*, %struct.acpi_device** %adev, align 8, !dbg !6616
  %tobool = icmp ne %struct.acpi_device* %17, null, !dbg !6616
  br i1 %tobool, label %if.end, label %if.then9, !dbg !6618

if.then9:                                         ; preds = %if.then
  br label %for.inc, !dbg !6619

if.end:                                           ; preds = %if.then
  %18 = load %struct.acpi_device*, %struct.acpi_device** %adev, align 8, !dbg !6620
  %dep_unmet = getelementptr inbounds %struct.acpi_device, %struct.acpi_device* %18, i32 0, i32 23, !dbg !6621
  %19 = load i32, i32* %dep_unmet, align 4, !dbg !6622
  %dec = add i32 %19, -1, !dbg !6622
  store i32 %dec, i32* %dep_unmet, align 4, !dbg !6622
  %20 = load %struct.acpi_device*, %struct.acpi_device** %adev, align 8, !dbg !6623
  %dep_unmet10 = getelementptr inbounds %struct.acpi_device, %struct.acpi_device* %20, i32 0, i32 23, !dbg !6625
  %21 = load i32, i32* %dep_unmet10, align 4, !dbg !6625
  %tobool11 = icmp ne i32 %21, 0, !dbg !6623
  br i1 %tobool11, label %if.end13, label %if.then12, !dbg !6626

if.then12:                                        ; preds = %if.end
  %22 = load %struct.acpi_device*, %struct.acpi_device** %adev, align 8, !dbg !6627
  call void @acpi_bus_attach(%struct.acpi_device* %22) #9, !dbg !6628
  br label %if.end13, !dbg !6628

if.end13:                                         ; preds = %if.then12, %if.end
  %23 = load %struct.acpi_dep_data*, %struct.acpi_dep_data** %dep, align 8, !dbg !6629
  %node14 = getelementptr inbounds %struct.acpi_dep_data, %struct.acpi_dep_data* %23, i32 0, i32 0, !dbg !6630
  call void @list_del(%struct.list_head* %node14) #9, !dbg !6631
  %24 = load %struct.acpi_dep_data*, %struct.acpi_dep_data** %dep, align 8, !dbg !6632
  %25 = bitcast %struct.acpi_dep_data* %24 to i8*, !dbg !6632
  call void @kfree(i8* %25) #9, !dbg !6633
  br label %if.end15, !dbg !6634

if.end15:                                         ; preds = %if.end13, %for.body
  br label %for.inc, !dbg !6635

for.inc:                                          ; preds = %if.end15, %if.then9
  %26 = load %struct.acpi_dep_data*, %struct.acpi_dep_data** %tmp, align 8, !dbg !6603
  store %struct.acpi_dep_data* %26, %struct.acpi_dep_data** %dep, align 8, !dbg !6603
  call void @llvm.dbg.declare(metadata i8** %__mptr16, metadata !6636, metadata !DIExpression()), !dbg !6638
  %27 = load %struct.acpi_dep_data*, %struct.acpi_dep_data** %tmp, align 8, !dbg !6638
  %node17 = getelementptr inbounds %struct.acpi_dep_data, %struct.acpi_dep_data* %27, i32 0, i32 0, !dbg !6638
  %next18 = getelementptr inbounds %struct.list_head, %struct.list_head* %node17, i32 0, i32 0, !dbg !6638
  %28 = load %struct.list_head*, %struct.list_head** %next18, align 8, !dbg !6638
  %29 = bitcast %struct.list_head* %28 to i8*, !dbg !6638
  store i8* %29, i8** %__mptr16, align 8, !dbg !6638
  br label %do.body19, !dbg !6638

do.body19:                                        ; preds = %for.inc
  br label %do.end20, !dbg !6639

do.end20:                                         ; preds = %do.body19
  %30 = load i8*, i8** %__mptr16, align 8, !dbg !6638
  %add.ptr22 = getelementptr i8, i8* %30, i64 0, !dbg !6638
  %31 = bitcast i8* %add.ptr22 to %struct.acpi_dep_data*, !dbg !6638
  store %struct.acpi_dep_data* %31, %struct.acpi_dep_data** %tmp21, align 8, !dbg !6639
  %32 = load %struct.acpi_dep_data*, %struct.acpi_dep_data** %tmp21, align 8, !dbg !6638
  store %struct.acpi_dep_data* %32, %struct.acpi_dep_data** %tmp, align 8, !dbg !6603
  br label %for.cond, !dbg !6603, !llvm.loop !6641

for.end:                                          ; preds = %for.cond
  call void @mutex_unlock(%struct.mutex* @acpi_dep_list_lock) #9, !dbg !6643
  ret void, !dbg !6644
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @acpi_bus_attach(%struct.acpi_device* %device) #0 !dbg !6645 {
entry:
  %device.addr = alloca %struct.acpi_device*, align 8
  %child = alloca %struct.acpi_device*, align 8
  %ejd = alloca i8*, align 8
  %ret = alloca i32, align 4
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.acpi_device*, align 8
  %__mptr78 = alloca i8*, align 8
  %tmp83 = alloca %struct.acpi_device*, align 8
  store %struct.acpi_device* %device, %struct.acpi_device** %device.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.acpi_device** %device.addr, metadata !6646, metadata !DIExpression()), !dbg !6647
  call void @llvm.dbg.declare(metadata %struct.acpi_device** %child, metadata !6648, metadata !DIExpression()), !dbg !6649
  call void @llvm.dbg.declare(metadata i8** %ejd, metadata !6650, metadata !DIExpression()), !dbg !6651
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !6652, metadata !DIExpression()), !dbg !6653
  %0 = load %struct.acpi_device*, %struct.acpi_device** %device.addr, align 8, !dbg !6654
  %handle = getelementptr inbounds %struct.acpi_device, %struct.acpi_device* %0, i32 0, i32 1, !dbg !6654
  %1 = load i8*, i8** %handle, align 8, !dbg !6654
  %call = call i32 @acpi_bus_get_ejd(i8* %1, i8** %ejd) #9, !dbg !6654
  %tobool = icmp ne i32 %call, 0, !dbg !6654
  br i1 %tobool, label %if.end, label %if.then, !dbg !6656

if.then:                                          ; preds = %entry
  %2 = load %struct.acpi_device*, %struct.acpi_device** %device.addr, align 8, !dbg !6657
  %3 = load i8*, i8** %ejd, align 8, !dbg !6658
  call void @register_dock_dependent_device(%struct.acpi_device* %2, i8* %3) #9, !dbg !6659
  br label %if.end, !dbg !6659

if.end:                                           ; preds = %if.then, %entry
  %4 = load %struct.acpi_device*, %struct.acpi_device** %device.addr, align 8, !dbg !6660
  %call1 = call i32 @acpi_bus_get_status(%struct.acpi_device* %4) #9, !dbg !6661
  %5 = load %struct.acpi_device*, %struct.acpi_device** %device.addr, align 8, !dbg !6662
  %call2 = call zeroext i1 @acpi_device_is_present(%struct.acpi_device* %5) #9, !dbg !6664
  br i1 %call2, label %if.end7, label %if.then3, !dbg !6665

if.then3:                                         ; preds = %if.end
  %6 = load %struct.acpi_device*, %struct.acpi_device** %device.addr, align 8, !dbg !6666
  %flags = getelementptr inbounds %struct.acpi_device, %struct.acpi_device* %6, i32 0, i32 9, !dbg !6668
  %7 = bitcast %struct.acpi_device_flags* %flags to i32*, !dbg !6669
  %bf.load = load i32, i32* %7, align 4, !dbg !6670
  %bf.clear = and i32 %bf.load, -33, !dbg !6670
  store i32 %bf.clear, i32* %7, align 4, !dbg !6670
  %8 = load %struct.acpi_device*, %struct.acpi_device** %device.addr, align 8, !dbg !6671
  call void @acpi_device_clear_enumerated(%struct.acpi_device* %8) #9, !dbg !6672
  %9 = load %struct.acpi_device*, %struct.acpi_device** %device.addr, align 8, !dbg !6673
  %flags4 = getelementptr inbounds %struct.acpi_device, %struct.acpi_device* %9, i32 0, i32 9, !dbg !6674
  %10 = bitcast %struct.acpi_device_flags* %flags4 to i32*, !dbg !6675
  %bf.load5 = load i32, i32* %10, align 4, !dbg !6676
  %bf.clear6 = and i32 %bf.load5, -9, !dbg !6676
  store i32 %bf.clear6, i32* %10, align 4, !dbg !6676
  br label %if.end94, !dbg !6677

if.end7:                                          ; preds = %if.end
  %11 = load %struct.acpi_device*, %struct.acpi_device** %device.addr, align 8, !dbg !6678
  %handler = getelementptr inbounds %struct.acpi_device, %struct.acpi_device* %11, i32 0, i32 16, !dbg !6680
  %12 = load %struct.acpi_scan_handler*, %struct.acpi_scan_handler** %handler, align 8, !dbg !6680
  %tobool8 = icmp ne %struct.acpi_scan_handler* %12, null, !dbg !6678
  br i1 %tobool8, label %if.then9, label %if.end10, !dbg !6681

if.then9:                                         ; preds = %if.end7
  br label %ok, !dbg !6682

if.end10:                                         ; preds = %if.end7
  %13 = load %struct.acpi_device*, %struct.acpi_device** %device.addr, align 8, !dbg !6683
  %flags11 = getelementptr inbounds %struct.acpi_device, %struct.acpi_device* %13, i32 0, i32 9, !dbg !6685
  %14 = bitcast %struct.acpi_device_flags* %flags11 to i32*, !dbg !6686
  %bf.load12 = load i32, i32* %14, align 4, !dbg !6686
  %bf.lshr = lshr i32 %bf.load12, 5, !dbg !6686
  %bf.clear13 = and i32 %bf.lshr, 1, !dbg !6686
  %tobool14 = icmp ne i32 %bf.clear13, 0, !dbg !6683
  br i1 %tobool14, label %if.else, label %if.then15, !dbg !6687

if.then15:                                        ; preds = %if.end10
  %15 = load %struct.acpi_device*, %struct.acpi_device** %device.addr, align 8, !dbg !6688
  %power = getelementptr inbounds %struct.acpi_device, %struct.acpi_device* %15, i32 0, i32 11, !dbg !6690
  %states = getelementptr inbounds %struct.acpi_device_power, %struct.acpi_device_power* %power, i32 0, i32 2, !dbg !6691
  %arrayidx = getelementptr [5 x %struct.acpi_device_power_state], [5 x %struct.acpi_device_power_state]* %states, i64 0, i64 0, !dbg !6688
  %flags16 = getelementptr inbounds %struct.acpi_device_power_state, %struct.acpi_device_power_state* %arrayidx, i32 0, i32 0, !dbg !6692
  %16 = bitcast %struct.anon.72* %flags16 to i8*, !dbg !6693
  %bf.load17 = load i8, i8* %16, align 8, !dbg !6693
  %bf.clear18 = and i8 %bf.load17, 1, !dbg !6693
  %conv = zext i8 %bf.clear18 to i32, !dbg !6688
  %17 = load %struct.acpi_device*, %struct.acpi_device** %device.addr, align 8, !dbg !6694
  %flags19 = getelementptr inbounds %struct.acpi_device, %struct.acpi_device* %17, i32 0, i32 9, !dbg !6695
  %18 = bitcast %struct.acpi_device_flags* %flags19 to i32*, !dbg !6696
  %bf.load20 = load i32, i32* %18, align 4, !dbg !6697
  %bf.value = and i32 %conv, 1, !dbg !6697
  %bf.shl = shl i32 %bf.value, 3, !dbg !6697
  %bf.clear21 = and i32 %bf.load20, -9, !dbg !6697
  %bf.set = or i32 %bf.clear21, %bf.shl, !dbg !6697
  store i32 %bf.set, i32* %18, align 4, !dbg !6697
  %19 = load %struct.acpi_device*, %struct.acpi_device** %device.addr, align 8, !dbg !6698
  %call22 = call i32 @acpi_bus_init_power(%struct.acpi_device* %19) #9, !dbg !6700
  %tobool23 = icmp ne i32 %call22, 0, !dbg !6700
  br i1 %tobool23, label %if.then24, label %if.end28, !dbg !6701

if.then24:                                        ; preds = %if.then15
  %20 = load %struct.acpi_device*, %struct.acpi_device** %device.addr, align 8, !dbg !6702
  %flags25 = getelementptr inbounds %struct.acpi_device, %struct.acpi_device* %20, i32 0, i32 9, !dbg !6703
  %21 = bitcast %struct.acpi_device_flags* %flags25 to i32*, !dbg !6704
  %bf.load26 = load i32, i32* %21, align 4, !dbg !6705
  %bf.clear27 = and i32 %bf.load26, -9, !dbg !6705
  store i32 %bf.clear27, i32* %21, align 4, !dbg !6705
  br label %if.end28, !dbg !6702

if.end28:                                         ; preds = %if.then24, %if.then15
  %22 = load %struct.acpi_device*, %struct.acpi_device** %device.addr, align 8, !dbg !6706
  %flags29 = getelementptr inbounds %struct.acpi_device, %struct.acpi_device* %22, i32 0, i32 9, !dbg !6707
  %23 = bitcast %struct.acpi_device_flags* %flags29 to i32*, !dbg !6708
  %bf.load30 = load i32, i32* %23, align 4, !dbg !6709
  %bf.clear31 = and i32 %bf.load30, -33, !dbg !6709
  %bf.set32 = or i32 %bf.clear31, 32, !dbg !6709
  store i32 %bf.set32, i32* %23, align 4, !dbg !6709
  br label %if.end40, !dbg !6710

if.else:                                          ; preds = %if.end10
  %24 = load %struct.acpi_device*, %struct.acpi_device** %device.addr, align 8, !dbg !6711
  %flags33 = getelementptr inbounds %struct.acpi_device, %struct.acpi_device* %24, i32 0, i32 9, !dbg !6713
  %25 = bitcast %struct.acpi_device_flags* %flags33 to i32*, !dbg !6714
  %bf.load34 = load i32, i32* %25, align 4, !dbg !6714
  %bf.lshr35 = lshr i32 %bf.load34, 6, !dbg !6714
  %bf.clear36 = and i32 %bf.lshr35, 1, !dbg !6714
  %tobool37 = icmp ne i32 %bf.clear36, 0, !dbg !6711
  br i1 %tobool37, label %if.then38, label %if.end39, !dbg !6715

if.then38:                                        ; preds = %if.else
  br label %ok, !dbg !6716

if.end39:                                         ; preds = %if.else
  br label %if.end40

if.end40:                                         ; preds = %if.end39, %if.end28
  %26 = load %struct.acpi_device*, %struct.acpi_device** %device.addr, align 8, !dbg !6718
  %call41 = call i32 @acpi_scan_attach_handler(%struct.acpi_device* %26) #9, !dbg !6719
  store i32 %call41, i32* %ret, align 4, !dbg !6720
  %27 = load i32, i32* %ret, align 4, !dbg !6721
  %cmp = icmp slt i32 %27, 0, !dbg !6723
  br i1 %cmp, label %if.then43, label %if.end44, !dbg !6724

if.then43:                                        ; preds = %if.end40
  br label %if.end94, !dbg !6725

if.end44:                                         ; preds = %if.end40
  %28 = load %struct.acpi_device*, %struct.acpi_device** %device.addr, align 8, !dbg !6726
  %flags45 = getelementptr inbounds %struct.acpi_device, %struct.acpi_device* %28, i32 0, i32 9, !dbg !6727
  %29 = bitcast %struct.acpi_device_flags* %flags45 to i32*, !dbg !6728
  %bf.load46 = load i32, i32* %29, align 4, !dbg !6729
  %bf.clear47 = and i32 %bf.load46, -17, !dbg !6729
  %bf.set48 = or i32 %bf.clear47, 16, !dbg !6729
  store i32 %bf.set48, i32* %29, align 4, !dbg !6729
  %30 = load i32, i32* %ret, align 4, !dbg !6730
  %cmp49 = icmp sgt i32 %30, 0, !dbg !6732
  br i1 %cmp49, label %land.lhs.true, label %if.end57, !dbg !6733

land.lhs.true:                                    ; preds = %if.end44
  %31 = load %struct.acpi_device*, %struct.acpi_device** %device.addr, align 8, !dbg !6734
  %flags51 = getelementptr inbounds %struct.acpi_device, %struct.acpi_device* %31, i32 0, i32 9, !dbg !6735
  %32 = bitcast %struct.acpi_device_flags* %flags51 to i32*, !dbg !6736
  %bf.load52 = load i32, i32* %32, align 4, !dbg !6736
  %bf.lshr53 = lshr i32 %bf.load52, 12, !dbg !6736
  %bf.clear54 = and i32 %bf.lshr53, 1, !dbg !6736
  %tobool55 = icmp ne i32 %bf.clear54, 0, !dbg !6734
  br i1 %tobool55, label %if.end57, label %if.then56, !dbg !6737

if.then56:                                        ; preds = %land.lhs.true
  %33 = load %struct.acpi_device*, %struct.acpi_device** %device.addr, align 8, !dbg !6738
  call void @acpi_device_set_enumerated(%struct.acpi_device* %33) #9, !dbg !6740
  br label %ok, !dbg !6741

if.end57:                                         ; preds = %land.lhs.true, %if.end44
  %34 = load %struct.acpi_device*, %struct.acpi_device** %device.addr, align 8, !dbg !6742
  %dev = getelementptr inbounds %struct.acpi_device, %struct.acpi_device* %34, i32 0, i32 21, !dbg !6743
  %call58 = call i32 @device_attach(%struct.device* %dev) #9, !dbg !6744
  store i32 %call58, i32* %ret, align 4, !dbg !6745
  %35 = load i32, i32* %ret, align 4, !dbg !6746
  %cmp59 = icmp slt i32 %35, 0, !dbg !6748
  br i1 %cmp59, label %if.then61, label %if.end62, !dbg !6749

if.then61:                                        ; preds = %if.end57
  br label %if.end94, !dbg !6750

if.end62:                                         ; preds = %if.end57
  %36 = load %struct.acpi_device*, %struct.acpi_device** %device.addr, align 8, !dbg !6751
  %pnp = getelementptr inbounds %struct.acpi_device, %struct.acpi_device* %36, i32 0, i32 10, !dbg !6753
  %type = getelementptr inbounds %struct.acpi_device_pnp, %struct.acpi_device_pnp* %pnp, i32 0, i32 1, !dbg !6754
  %37 = bitcast %struct.acpi_pnp_type* %type to i32*, !dbg !6755
  %bf.load63 = load i32, i32* %37, align 8, !dbg !6755
  %bf.lshr64 = lshr i32 %bf.load63, 2, !dbg !6755
  %bf.clear65 = and i32 %bf.lshr64, 1, !dbg !6755
  %tobool66 = icmp ne i32 %bf.clear65, 0, !dbg !6751
  br i1 %tobool66, label %if.then72, label %lor.lhs.false, !dbg !6756

lor.lhs.false:                                    ; preds = %if.end62
  %38 = load %struct.acpi_device*, %struct.acpi_device** %device.addr, align 8, !dbg !6757
  %flags67 = getelementptr inbounds %struct.acpi_device, %struct.acpi_device* %38, i32 0, i32 9, !dbg !6758
  %39 = bitcast %struct.acpi_device_flags* %flags67 to i32*, !dbg !6759
  %bf.load68 = load i32, i32* %39, align 4, !dbg !6759
  %bf.lshr69 = lshr i32 %bf.load68, 12, !dbg !6759
  %bf.clear70 = and i32 %bf.lshr69, 1, !dbg !6759
  %tobool71 = icmp ne i32 %bf.clear70, 0, !dbg !6757
  br i1 %tobool71, label %if.then72, label %if.else73, !dbg !6760

if.then72:                                        ; preds = %lor.lhs.false, %if.end62
  %40 = load %struct.acpi_device*, %struct.acpi_device** %device.addr, align 8, !dbg !6761
  call void @acpi_default_enumeration(%struct.acpi_device* %40) #9, !dbg !6762
  br label %if.end74, !dbg !6762

if.else73:                                        ; preds = %lor.lhs.false
  %41 = load %struct.acpi_device*, %struct.acpi_device** %device.addr, align 8, !dbg !6763
  call void @acpi_device_set_enumerated(%struct.acpi_device* %41) #9, !dbg !6764
  br label %if.end74

if.end74:                                         ; preds = %if.else73, %if.then72
  br label %ok, !dbg !6759

ok:                                               ; preds = %if.end74, %if.then56, %if.then38, %if.then9
  call void @llvm.dbg.label(metadata !6765), !dbg !6766
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !6767, metadata !DIExpression()), !dbg !6770
  %42 = load %struct.acpi_device*, %struct.acpi_device** %device.addr, align 8, !dbg !6770
  %children = getelementptr inbounds %struct.acpi_device, %struct.acpi_device* %42, i32 0, i32 4, !dbg !6770
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %children, i32 0, i32 0, !dbg !6770
  %43 = load %struct.list_head*, %struct.list_head** %next, align 8, !dbg !6770
  %44 = bitcast %struct.list_head* %43 to i8*, !dbg !6770
  store i8* %44, i8** %__mptr, align 8, !dbg !6770
  br label %do.body, !dbg !6770

do.body:                                          ; preds = %ok
  br label %do.end, !dbg !6771

do.end:                                           ; preds = %do.body
  %45 = load i8*, i8** %__mptr, align 8, !dbg !6770
  %add.ptr = getelementptr i8, i8* %45, i64 -64, !dbg !6770
  %46 = bitcast i8* %add.ptr to %struct.acpi_device*, !dbg !6770
  store %struct.acpi_device* %46, %struct.acpi_device** %tmp, align 8, !dbg !6771
  %47 = load %struct.acpi_device*, %struct.acpi_device** %tmp, align 8, !dbg !6770
  store %struct.acpi_device* %47, %struct.acpi_device** %child, align 8, !dbg !6773
  br label %for.cond, !dbg !6773

for.cond:                                         ; preds = %do.end82, %do.end
  %48 = load %struct.acpi_device*, %struct.acpi_device** %child, align 8, !dbg !6774
  %node = getelementptr inbounds %struct.acpi_device, %struct.acpi_device* %48, i32 0, i32 5, !dbg !6774
  %49 = load %struct.acpi_device*, %struct.acpi_device** %device.addr, align 8, !dbg !6774
  %children75 = getelementptr inbounds %struct.acpi_device, %struct.acpi_device* %49, i32 0, i32 4, !dbg !6774
  %cmp76 = icmp eq %struct.list_head* %node, %children75, !dbg !6774
  %lnot = xor i1 %cmp76, true, !dbg !6774
  br i1 %lnot, label %for.body, label %for.end, !dbg !6773

for.body:                                         ; preds = %for.cond
  %50 = load %struct.acpi_device*, %struct.acpi_device** %child, align 8, !dbg !6776
  call void @acpi_bus_attach(%struct.acpi_device* %50) #9, !dbg !6777
  br label %for.inc, !dbg !6777

for.inc:                                          ; preds = %for.body
  call void @llvm.dbg.declare(metadata i8** %__mptr78, metadata !6778, metadata !DIExpression()), !dbg !6780
  %51 = load %struct.acpi_device*, %struct.acpi_device** %child, align 8, !dbg !6780
  %node79 = getelementptr inbounds %struct.acpi_device, %struct.acpi_device* %51, i32 0, i32 5, !dbg !6780
  %next80 = getelementptr inbounds %struct.list_head, %struct.list_head* %node79, i32 0, i32 0, !dbg !6780
  %52 = load %struct.list_head*, %struct.list_head** %next80, align 8, !dbg !6780
  %53 = bitcast %struct.list_head* %52 to i8*, !dbg !6780
  store i8* %53, i8** %__mptr78, align 8, !dbg !6780
  br label %do.body81, !dbg !6780

do.body81:                                        ; preds = %for.inc
  br label %do.end82, !dbg !6781

do.end82:                                         ; preds = %do.body81
  %54 = load i8*, i8** %__mptr78, align 8, !dbg !6780
  %add.ptr84 = getelementptr i8, i8* %54, i64 -64, !dbg !6780
  %55 = bitcast i8* %add.ptr84 to %struct.acpi_device*, !dbg !6780
  store %struct.acpi_device* %55, %struct.acpi_device** %tmp83, align 8, !dbg !6781
  %56 = load %struct.acpi_device*, %struct.acpi_device** %tmp83, align 8, !dbg !6780
  store %struct.acpi_device* %56, %struct.acpi_device** %child, align 8, !dbg !6774
  br label %for.cond, !dbg !6774, !llvm.loop !6783

for.end:                                          ; preds = %for.cond
  %57 = load %struct.acpi_device*, %struct.acpi_device** %device.addr, align 8, !dbg !6785
  %handler85 = getelementptr inbounds %struct.acpi_device, %struct.acpi_device* %57, i32 0, i32 16, !dbg !6787
  %58 = load %struct.acpi_scan_handler*, %struct.acpi_scan_handler** %handler85, align 8, !dbg !6787
  %tobool86 = icmp ne %struct.acpi_scan_handler* %58, null, !dbg !6785
  br i1 %tobool86, label %land.lhs.true87, label %if.end94, !dbg !6788

land.lhs.true87:                                  ; preds = %for.end
  %59 = load %struct.acpi_device*, %struct.acpi_device** %device.addr, align 8, !dbg !6789
  %handler88 = getelementptr inbounds %struct.acpi_device, %struct.acpi_device* %59, i32 0, i32 16, !dbg !6790
  %60 = load %struct.acpi_scan_handler*, %struct.acpi_scan_handler** %handler88, align 8, !dbg !6790
  %hotplug = getelementptr inbounds %struct.acpi_scan_handler, %struct.acpi_scan_handler* %60, i32 0, i32 7, !dbg !6791
  %notify_online = getelementptr inbounds %struct.acpi_hotplug_profile, %struct.acpi_hotplug_profile* %hotplug, i32 0, i32 2, !dbg !6792
  %61 = load void (%struct.acpi_device*)*, void (%struct.acpi_device*)** %notify_online, align 8, !dbg !6792
  %tobool89 = icmp ne void (%struct.acpi_device*)* %61, null, !dbg !6789
  br i1 %tobool89, label %if.then90, label %if.end94, !dbg !6793

if.then90:                                        ; preds = %land.lhs.true87
  %62 = load %struct.acpi_device*, %struct.acpi_device** %device.addr, align 8, !dbg !6794
  %handler91 = getelementptr inbounds %struct.acpi_device, %struct.acpi_device* %62, i32 0, i32 16, !dbg !6795
  %63 = load %struct.acpi_scan_handler*, %struct.acpi_scan_handler** %handler91, align 8, !dbg !6795
  %hotplug92 = getelementptr inbounds %struct.acpi_scan_handler, %struct.acpi_scan_handler* %63, i32 0, i32 7, !dbg !6796
  %notify_online93 = getelementptr inbounds %struct.acpi_hotplug_profile, %struct.acpi_hotplug_profile* %hotplug92, i32 0, i32 2, !dbg !6797
  %64 = load void (%struct.acpi_device*)*, void (%struct.acpi_device*)** %notify_online93, align 8, !dbg !6797
  %65 = load %struct.acpi_device*, %struct.acpi_device** %device.addr, align 8, !dbg !6798
  call void %64(%struct.acpi_device* %65) #9, !dbg !6794
  br label %if.end94, !dbg !6794

if.end94:                                         ; preds = %if.then3, %if.then43, %if.then61, %if.then90, %land.lhs.true87, %for.end
  ret void, !dbg !6799
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @acpi_bus_scan(i8* %handle) #0 !dbg !6800 {
entry:
  %retval = alloca i32, align 4
  %handle.addr = alloca i8*, align 8
  %device = alloca i8*, align 8
  store i8* %handle, i8** %handle.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %handle.addr, metadata !6803, metadata !DIExpression()), !dbg !6804
  call void @llvm.dbg.declare(metadata i8** %device, metadata !6805, metadata !DIExpression()), !dbg !6806
  store i8* null, i8** %device, align 8, !dbg !6806
  %0 = load i8*, i8** %handle.addr, align 8, !dbg !6807
  %call = call i32 @acpi_bus_check_add(i8* %0, i32 0, i8* null, i8** %device) #9, !dbg !6807
  %tobool = icmp ne i32 %call, 0, !dbg !6807
  br i1 %tobool, label %if.end, label %if.then, !dbg !6809

if.then:                                          ; preds = %entry
  %1 = load i8*, i8** %handle.addr, align 8, !dbg !6810
  %call1 = call i32 @acpi_walk_namespace(i32 0, i8* %1, i32 -1, i32 (i8*, i32, i8*, i8**)* @acpi_bus_check_add, i32 (i8*, i32, i8*, i8**)* null, i8* null, i8** %device) #9, !dbg !6811
  br label %if.end, !dbg !6811

if.end:                                           ; preds = %if.then, %entry
  %2 = load i8*, i8** %device, align 8, !dbg !6812
  %tobool2 = icmp ne i8* %2, null, !dbg !6812
  br i1 %tobool2, label %if.then3, label %if.end4, !dbg !6814

if.then3:                                         ; preds = %if.end
  %3 = load i8*, i8** %device, align 8, !dbg !6815
  %4 = bitcast i8* %3 to %struct.acpi_device*, !dbg !6815
  call void @acpi_bus_attach(%struct.acpi_device* %4) #9, !dbg !6817
  store i32 0, i32* %retval, align 4, !dbg !6818
  br label %return, !dbg !6818

if.end4:                                          ; preds = %if.end
  store i32 -19, i32* %retval, align 4, !dbg !6819
  br label %return, !dbg !6819

return:                                           ; preds = %if.end4, %if.then3
  %5 = load i32, i32* %retval, align 4, !dbg !6820
  ret i32 %5, !dbg !6820
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @acpi_bus_check_add(i8* %handle, i32 %lvl_not_used, i8* %not_used, i8** %return_value) #0 !dbg !6821 {
entry:
  %retval = alloca i32, align 4
  %handle.addr = alloca i8*, align 8
  %lvl_not_used.addr = alloca i32, align 4
  %not_used.addr = alloca i8*, align 8
  %return_value.addr = alloca i8**, align 8
  %device = alloca %struct.acpi_device*, align 8
  %type = alloca i32, align 4
  %sta = alloca i64, align 8
  %result = alloca i32, align 4
  store i8* %handle, i8** %handle.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %handle.addr, metadata !6822, metadata !DIExpression()), !dbg !6823
  store i32 %lvl_not_used, i32* %lvl_not_used.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %lvl_not_used.addr, metadata !6824, metadata !DIExpression()), !dbg !6825
  store i8* %not_used, i8** %not_used.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %not_used.addr, metadata !6826, metadata !DIExpression()), !dbg !6827
  store i8** %return_value, i8*** %return_value.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %return_value.addr, metadata !6828, metadata !DIExpression()), !dbg !6829
  call void @llvm.dbg.declare(metadata %struct.acpi_device** %device, metadata !6830, metadata !DIExpression()), !dbg !6831
  store %struct.acpi_device* null, %struct.acpi_device** %device, align 8, !dbg !6831
  call void @llvm.dbg.declare(metadata i32* %type, metadata !6832, metadata !DIExpression()), !dbg !6833
  call void @llvm.dbg.declare(metadata i64* %sta, metadata !6834, metadata !DIExpression()), !dbg !6835
  call void @llvm.dbg.declare(metadata i32* %result, metadata !6836, metadata !DIExpression()), !dbg !6837
  %0 = load i8*, i8** %handle.addr, align 8, !dbg !6838
  %call = call i32 @acpi_bus_get_device(i8* %0, %struct.acpi_device** %device) #9, !dbg !6839
  %1 = load %struct.acpi_device*, %struct.acpi_device** %device, align 8, !dbg !6840
  %tobool = icmp ne %struct.acpi_device* %1, null, !dbg !6840
  br i1 %tobool, label %if.then, label %if.end, !dbg !6842

if.then:                                          ; preds = %entry
  br label %out, !dbg !6843

if.end:                                           ; preds = %entry
  %2 = load i8*, i8** %handle.addr, align 8, !dbg !6844
  %call1 = call i32 @acpi_bus_type_and_status(i8* %2, i32* %type, i64* %sta) #9, !dbg !6845
  store i32 %call1, i32* %result, align 4, !dbg !6846
  %3 = load i32, i32* %result, align 4, !dbg !6847
  %tobool2 = icmp ne i32 %3, 0, !dbg !6847
  br i1 %tobool2, label %if.then3, label %if.end4, !dbg !6849

if.then3:                                         ; preds = %if.end
  store i32 0, i32* %retval, align 4, !dbg !6850
  br label %return, !dbg !6850

if.end4:                                          ; preds = %if.end
  %4 = load i32, i32* %type, align 4, !dbg !6851
  %cmp = icmp eq i32 %4, 1, !dbg !6853
  br i1 %cmp, label %if.then5, label %if.end7, !dbg !6854

if.then5:                                         ; preds = %if.end4
  %5 = load i8*, i8** %handle.addr, align 8, !dbg !6855
  %call6 = call i32 @acpi_add_power_resource(i8* %5) #9, !dbg !6857
  store i32 0, i32* %retval, align 4, !dbg !6858
  br label %return, !dbg !6858

if.end7:                                          ; preds = %if.end4
  %6 = load i8*, i8** %handle.addr, align 8, !dbg !6859
  %7 = load i32, i32* %type, align 4, !dbg !6860
  %8 = load i64, i64* %sta, align 8, !dbg !6861
  %call8 = call i32 @acpi_add_single_object(%struct.acpi_device** %device, i8* %6, i32 %7, i64 %8) #9, !dbg !6862
  %9 = load %struct.acpi_device*, %struct.acpi_device** %device, align 8, !dbg !6863
  %tobool9 = icmp ne %struct.acpi_device* %9, null, !dbg !6863
  br i1 %tobool9, label %if.end11, label %if.then10, !dbg !6865

if.then10:                                        ; preds = %if.end7
  store i32 16390, i32* %retval, align 4, !dbg !6866
  br label %return, !dbg !6866

if.end11:                                         ; preds = %if.end7
  %10 = load %struct.acpi_device*, %struct.acpi_device** %device, align 8, !dbg !6867
  call void @acpi_scan_init_hotplug(%struct.acpi_device* %10) #9, !dbg !6868
  %11 = load %struct.acpi_device*, %struct.acpi_device** %device, align 8, !dbg !6869
  call void @acpi_device_dep_initialize(%struct.acpi_device* %11) #9, !dbg !6870
  br label %out, !dbg !6870

out:                                              ; preds = %if.end11, %if.then
  call void @llvm.dbg.label(metadata !6871), !dbg !6872
  %12 = load i8**, i8*** %return_value.addr, align 8, !dbg !6873
  %13 = load i8*, i8** %12, align 8, !dbg !6875
  %tobool12 = icmp ne i8* %13, null, !dbg !6875
  br i1 %tobool12, label %if.end14, label %if.then13, !dbg !6876

if.then13:                                        ; preds = %out
  %14 = load %struct.acpi_device*, %struct.acpi_device** %device, align 8, !dbg !6877
  %15 = bitcast %struct.acpi_device* %14 to i8*, !dbg !6877
  %16 = load i8**, i8*** %return_value.addr, align 8, !dbg !6878
  store i8* %15, i8** %16, align 8, !dbg !6879
  br label %if.end14, !dbg !6880

if.end14:                                         ; preds = %if.then13, %out
  store i32 0, i32* %retval, align 4, !dbg !6881
  br label %return, !dbg !6881

return:                                           ; preds = %if.end14, %if.then10, %if.then5, %if.then3
  %17 = load i32, i32* %retval, align 4, !dbg !6882
  ret i32 %17, !dbg !6882
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @acpi_bus_trim(%struct.acpi_device* %adev) #0 !dbg !6883 {
entry:
  %adev.addr = alloca %struct.acpi_device*, align 8
  %handler = alloca %struct.acpi_scan_handler*, align 8
  %child = alloca %struct.acpi_device*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.acpi_device*, align 8
  %__mptr3 = alloca i8*, align 8
  %tmp8 = alloca %struct.acpi_device*, align 8
  store %struct.acpi_device* %adev, %struct.acpi_device** %adev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.acpi_device** %adev.addr, metadata !6884, metadata !DIExpression()), !dbg !6885
  call void @llvm.dbg.declare(metadata %struct.acpi_scan_handler** %handler, metadata !6886, metadata !DIExpression()), !dbg !6887
  %0 = load %struct.acpi_device*, %struct.acpi_device** %adev.addr, align 8, !dbg !6888
  %handler1 = getelementptr inbounds %struct.acpi_device, %struct.acpi_device* %0, i32 0, i32 16, !dbg !6889
  %1 = load %struct.acpi_scan_handler*, %struct.acpi_scan_handler** %handler1, align 8, !dbg !6889
  store %struct.acpi_scan_handler* %1, %struct.acpi_scan_handler** %handler, align 8, !dbg !6887
  call void @llvm.dbg.declare(metadata %struct.acpi_device** %child, metadata !6890, metadata !DIExpression()), !dbg !6891
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !6892, metadata !DIExpression()), !dbg !6895
  %2 = load %struct.acpi_device*, %struct.acpi_device** %adev.addr, align 8, !dbg !6895
  %children = getelementptr inbounds %struct.acpi_device, %struct.acpi_device* %2, i32 0, i32 4, !dbg !6895
  %prev = getelementptr inbounds %struct.list_head, %struct.list_head* %children, i32 0, i32 1, !dbg !6895
  %3 = load %struct.list_head*, %struct.list_head** %prev, align 8, !dbg !6895
  %4 = bitcast %struct.list_head* %3 to i8*, !dbg !6895
  store i8* %4, i8** %__mptr, align 8, !dbg !6895
  br label %do.body, !dbg !6895

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !6896

do.end:                                           ; preds = %do.body
  %5 = load i8*, i8** %__mptr, align 8, !dbg !6895
  %add.ptr = getelementptr i8, i8* %5, i64 -64, !dbg !6895
  %6 = bitcast i8* %add.ptr to %struct.acpi_device*, !dbg !6895
  store %struct.acpi_device* %6, %struct.acpi_device** %tmp, align 8, !dbg !6896
  %7 = load %struct.acpi_device*, %struct.acpi_device** %tmp, align 8, !dbg !6895
  store %struct.acpi_device* %7, %struct.acpi_device** %child, align 8, !dbg !6898
  br label %for.cond, !dbg !6898

for.cond:                                         ; preds = %do.end7, %do.end
  %8 = load %struct.acpi_device*, %struct.acpi_device** %child, align 8, !dbg !6899
  %node = getelementptr inbounds %struct.acpi_device, %struct.acpi_device* %8, i32 0, i32 5, !dbg !6899
  %9 = load %struct.acpi_device*, %struct.acpi_device** %adev.addr, align 8, !dbg !6899
  %children2 = getelementptr inbounds %struct.acpi_device, %struct.acpi_device* %9, i32 0, i32 4, !dbg !6899
  %cmp = icmp eq %struct.list_head* %node, %children2, !dbg !6899
  %lnot = xor i1 %cmp, true, !dbg !6899
  br i1 %lnot, label %for.body, label %for.end, !dbg !6898

for.body:                                         ; preds = %for.cond
  %10 = load %struct.acpi_device*, %struct.acpi_device** %child, align 8, !dbg !6901
  call void @acpi_bus_trim(%struct.acpi_device* %10) #9, !dbg !6902
  br label %for.inc, !dbg !6902

for.inc:                                          ; preds = %for.body
  call void @llvm.dbg.declare(metadata i8** %__mptr3, metadata !6903, metadata !DIExpression()), !dbg !6905
  %11 = load %struct.acpi_device*, %struct.acpi_device** %child, align 8, !dbg !6905
  %node4 = getelementptr inbounds %struct.acpi_device, %struct.acpi_device* %11, i32 0, i32 5, !dbg !6905
  %prev5 = getelementptr inbounds %struct.list_head, %struct.list_head* %node4, i32 0, i32 1, !dbg !6905
  %12 = load %struct.list_head*, %struct.list_head** %prev5, align 8, !dbg !6905
  %13 = bitcast %struct.list_head* %12 to i8*, !dbg !6905
  store i8* %13, i8** %__mptr3, align 8, !dbg !6905
  br label %do.body6, !dbg !6905

do.body6:                                         ; preds = %for.inc
  br label %do.end7, !dbg !6906

do.end7:                                          ; preds = %do.body6
  %14 = load i8*, i8** %__mptr3, align 8, !dbg !6905
  %add.ptr9 = getelementptr i8, i8* %14, i64 -64, !dbg !6905
  %15 = bitcast i8* %add.ptr9 to %struct.acpi_device*, !dbg !6905
  store %struct.acpi_device* %15, %struct.acpi_device** %tmp8, align 8, !dbg !6906
  %16 = load %struct.acpi_device*, %struct.acpi_device** %tmp8, align 8, !dbg !6905
  store %struct.acpi_device* %16, %struct.acpi_device** %child, align 8, !dbg !6899
  br label %for.cond, !dbg !6899, !llvm.loop !6908

for.end:                                          ; preds = %for.cond
  %17 = load %struct.acpi_device*, %struct.acpi_device** %adev.addr, align 8, !dbg !6910
  %flags = getelementptr inbounds %struct.acpi_device, %struct.acpi_device* %17, i32 0, i32 9, !dbg !6911
  %18 = bitcast %struct.acpi_device_flags* %flags to i32*, !dbg !6912
  %bf.load = load i32, i32* %18, align 4, !dbg !6913
  %bf.clear = and i32 %bf.load, -17, !dbg !6913
  store i32 %bf.clear, i32* %18, align 4, !dbg !6913
  %19 = load %struct.acpi_scan_handler*, %struct.acpi_scan_handler** %handler, align 8, !dbg !6914
  %tobool = icmp ne %struct.acpi_scan_handler* %19, null, !dbg !6914
  br i1 %tobool, label %if.then, label %if.else, !dbg !6916

if.then:                                          ; preds = %for.end
  %20 = load %struct.acpi_scan_handler*, %struct.acpi_scan_handler** %handler, align 8, !dbg !6917
  %detach = getelementptr inbounds %struct.acpi_scan_handler, %struct.acpi_scan_handler* %20, i32 0, i32 4, !dbg !6920
  %21 = load void (%struct.acpi_device*)*, void (%struct.acpi_device*)** %detach, align 8, !dbg !6920
  %tobool10 = icmp ne void (%struct.acpi_device*)* %21, null, !dbg !6917
  br i1 %tobool10, label %if.then11, label %if.end, !dbg !6921

if.then11:                                        ; preds = %if.then
  %22 = load %struct.acpi_scan_handler*, %struct.acpi_scan_handler** %handler, align 8, !dbg !6922
  %detach12 = getelementptr inbounds %struct.acpi_scan_handler, %struct.acpi_scan_handler* %22, i32 0, i32 4, !dbg !6923
  %23 = load void (%struct.acpi_device*)*, void (%struct.acpi_device*)** %detach12, align 8, !dbg !6923
  %24 = load %struct.acpi_device*, %struct.acpi_device** %adev.addr, align 8, !dbg !6924
  call void %23(%struct.acpi_device* %24) #9, !dbg !6922
  br label %if.end, !dbg !6922

if.end:                                           ; preds = %if.then11, %if.then
  %25 = load %struct.acpi_device*, %struct.acpi_device** %adev.addr, align 8, !dbg !6925
  %handler13 = getelementptr inbounds %struct.acpi_device, %struct.acpi_device* %25, i32 0, i32 16, !dbg !6926
  store %struct.acpi_scan_handler* null, %struct.acpi_scan_handler** %handler13, align 8, !dbg !6927
  br label %if.end14, !dbg !6928

if.else:                                          ; preds = %for.end
  %26 = load %struct.acpi_device*, %struct.acpi_device** %adev.addr, align 8, !dbg !6929
  %dev = getelementptr inbounds %struct.acpi_device, %struct.acpi_device* %26, i32 0, i32 21, !dbg !6931
  call void @device_release_driver(%struct.device* %dev) #9, !dbg !6932
  br label %if.end14

if.end14:                                         ; preds = %if.else, %if.end
  %27 = load %struct.acpi_device*, %struct.acpi_device** %adev.addr, align 8, !dbg !6933
  %call = call i32 @acpi_device_set_power(%struct.acpi_device* %27, i32 4) #9, !dbg !6934
  %28 = load %struct.acpi_device*, %struct.acpi_device** %adev.addr, align 8, !dbg !6935
  %flags15 = getelementptr inbounds %struct.acpi_device, %struct.acpi_device* %28, i32 0, i32 9, !dbg !6936
  %29 = bitcast %struct.acpi_device_flags* %flags15 to i32*, !dbg !6937
  %bf.load16 = load i32, i32* %29, align 4, !dbg !6938
  %bf.clear17 = and i32 %bf.load16, -33, !dbg !6938
  store i32 %bf.clear17, i32* %29, align 4, !dbg !6938
  %30 = load %struct.acpi_device*, %struct.acpi_device** %adev.addr, align 8, !dbg !6939
  call void @acpi_device_clear_enumerated(%struct.acpi_device* %30) #9, !dbg !6940
  ret void, !dbg !6941
}

; Function Attrs: noredzone
declare dso_local void @device_release_driver(%struct.device*) #1

; Function Attrs: noredzone
declare dso_local i32 @acpi_device_set_power(%struct.acpi_device*, i32) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @acpi_bus_register_early_device(i32 %type) #0 !dbg !6942 {
entry:
  %retval = alloca i32, align 4
  %type.addr = alloca i32, align 4
  %device = alloca %struct.acpi_device*, align 8
  %result = alloca i32, align 4
  store i32 %type, i32* %type.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %type.addr, metadata !6943, metadata !DIExpression()), !dbg !6944
  call void @llvm.dbg.declare(metadata %struct.acpi_device** %device, metadata !6945, metadata !DIExpression()), !dbg !6946
  store %struct.acpi_device* null, %struct.acpi_device** %device, align 8, !dbg !6946
  call void @llvm.dbg.declare(metadata i32* %result, metadata !6947, metadata !DIExpression()), !dbg !6948
  %0 = load i32, i32* %type.addr, align 4, !dbg !6949
  %call = call i32 @acpi_add_single_object(%struct.acpi_device** %device, i8* null, i32 %0, i64 15) #9, !dbg !6950
  store i32 %call, i32* %result, align 4, !dbg !6951
  %1 = load i32, i32* %result, align 4, !dbg !6952
  %tobool = icmp ne i32 %1, 0, !dbg !6952
  br i1 %tobool, label %if.then, label %if.end, !dbg !6954

if.then:                                          ; preds = %entry
  %2 = load i32, i32* %result, align 4, !dbg !6955
  store i32 %2, i32* %retval, align 4, !dbg !6956
  br label %return, !dbg !6956

if.end:                                           ; preds = %entry
  %3 = load %struct.acpi_device*, %struct.acpi_device** %device, align 8, !dbg !6957
  %flags = getelementptr inbounds %struct.acpi_device, %struct.acpi_device* %3, i32 0, i32 9, !dbg !6958
  %4 = bitcast %struct.acpi_device_flags* %flags to i32*, !dbg !6959
  %bf.load = load i32, i32* %4, align 4, !dbg !6960
  %bf.clear = and i32 %bf.load, -17, !dbg !6960
  %bf.set = or i32 %bf.clear, 16, !dbg !6960
  store i32 %bf.set, i32* %4, align 4, !dbg !6960
  %5 = load %struct.acpi_device*, %struct.acpi_device** %device, align 8, !dbg !6961
  %dev = getelementptr inbounds %struct.acpi_device, %struct.acpi_device* %5, i32 0, i32 21, !dbg !6962
  %call1 = call i32 @device_attach(%struct.device* %dev) #9, !dbg !6963
  store i32 %call1, i32* %retval, align 4, !dbg !6964
  br label %return, !dbg !6964

return:                                           ; preds = %if.end, %if.then
  %6 = load i32, i32* %retval, align 4, !dbg !6965
  ret i32 %6, !dbg !6965
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @acpi_add_single_object(%struct.acpi_device** %child, i8* %handle, i32 %type, i64 %sta) #0 !dbg !6966 {
entry:
  %retval = alloca i32, align 4
  %child.addr = alloca %struct.acpi_device**, align 8
  %handle.addr = alloca i8*, align 8
  %type.addr = alloca i32, align 4
  %sta.addr = alloca i64, align 8
  %result = alloca i32, align 4
  %device = alloca %struct.acpi_device*, align 8
  %buffer = alloca %struct.acpi_buffer, align 8
  store %struct.acpi_device** %child, %struct.acpi_device*** %child.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.acpi_device*** %child.addr, metadata !6969, metadata !DIExpression()), !dbg !6970
  store i8* %handle, i8** %handle.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %handle.addr, metadata !6971, metadata !DIExpression()), !dbg !6972
  store i32 %type, i32* %type.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %type.addr, metadata !6973, metadata !DIExpression()), !dbg !6974
  store i64 %sta, i64* %sta.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %sta.addr, metadata !6975, metadata !DIExpression()), !dbg !6976
  call void @llvm.dbg.declare(metadata i32* %result, metadata !6977, metadata !DIExpression()), !dbg !6978
  call void @llvm.dbg.declare(metadata %struct.acpi_device** %device, metadata !6979, metadata !DIExpression()), !dbg !6980
  call void @llvm.dbg.declare(metadata %struct.acpi_buffer* %buffer, metadata !6981, metadata !DIExpression()), !dbg !6982
  %0 = bitcast %struct.acpi_buffer* %buffer to i8*, !dbg !6982
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %0, i8* align 8 bitcast (%struct.acpi_buffer* @__const.acpi_add_single_object.buffer to i8*), i64 16, i1 false), !dbg !6982
  %call = call i8* @kzalloc(i64 1360, i32 3264) #9, !dbg !6983
  %1 = bitcast i8* %call to %struct.acpi_device*, !dbg !6983
  store %struct.acpi_device* %1, %struct.acpi_device** %device, align 8, !dbg !6984
  %2 = load %struct.acpi_device*, %struct.acpi_device** %device, align 8, !dbg !6985
  %tobool = icmp ne %struct.acpi_device* %2, null, !dbg !6985
  br i1 %tobool, label %if.end, label %if.then, !dbg !6987

if.then:                                          ; preds = %entry
  %call1 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.4, i64 0, i64 0)) #10, !dbg !6988
  store i32 -12, i32* %retval, align 4, !dbg !6990
  br label %return, !dbg !6990

if.end:                                           ; preds = %entry
  %3 = load %struct.acpi_device*, %struct.acpi_device** %device, align 8, !dbg !6991
  %4 = load i8*, i8** %handle.addr, align 8, !dbg !6992
  %5 = load i32, i32* %type.addr, align 4, !dbg !6993
  %6 = load i64, i64* %sta.addr, align 8, !dbg !6994
  call void @acpi_init_device_object(%struct.acpi_device* %3, i8* %4, i32 %5, i64 %6) #9, !dbg !6995
  %7 = load i32, i32* %type.addr, align 4, !dbg !6996
  %cmp = icmp eq i32 %7, 0, !dbg !6998
  br i1 %cmp, label %if.then2, label %if.end7, !dbg !6999

if.then2:                                         ; preds = %if.end
  %8 = load %struct.acpi_device*, %struct.acpi_device** %device, align 8, !dbg !7000
  %call3 = call i32 @acpi_bus_get_status(%struct.acpi_device* %8) #9, !dbg !7002
  %cmp4 = icmp slt i32 %call3, 0, !dbg !7003
  br i1 %cmp4, label %if.then5, label %if.end6, !dbg !7004

if.then5:                                         ; preds = %if.then2
  %9 = load %struct.acpi_device*, %struct.acpi_device** %device, align 8, !dbg !7005
  call void @acpi_set_device_status(%struct.acpi_device* %9, i32 0) #9, !dbg !7006
  br label %if.end6, !dbg !7006

if.end6:                                          ; preds = %if.then5, %if.then2
  br label %if.end7, !dbg !7007

if.end7:                                          ; preds = %if.end6, %if.end
  %10 = load %struct.acpi_device*, %struct.acpi_device** %device, align 8, !dbg !7008
  call void @acpi_bus_get_power_flags(%struct.acpi_device* %10) #9, !dbg !7009
  %11 = load %struct.acpi_device*, %struct.acpi_device** %device, align 8, !dbg !7010
  call void @acpi_bus_get_wakeup_device_flags(%struct.acpi_device* %11) #9, !dbg !7011
  %12 = load %struct.acpi_device*, %struct.acpi_device** %device, align 8, !dbg !7012
  %call8 = call i32 @acpi_device_add(%struct.acpi_device* %12, void (%struct.device*)* @acpi_device_release) #9, !dbg !7013
  store i32 %call8, i32* %result, align 4, !dbg !7014
  %13 = load i32, i32* %result, align 4, !dbg !7015
  %tobool9 = icmp ne i32 %13, 0, !dbg !7015
  br i1 %tobool9, label %if.then10, label %if.end11, !dbg !7017

if.then10:                                        ; preds = %if.end7
  %14 = load %struct.acpi_device*, %struct.acpi_device** %device, align 8, !dbg !7018
  %dev = getelementptr inbounds %struct.acpi_device, %struct.acpi_device* %14, i32 0, i32 21, !dbg !7020
  call void @acpi_device_release(%struct.device* %dev) #9, !dbg !7021
  %15 = load i32, i32* %result, align 4, !dbg !7022
  store i32 %15, i32* %retval, align 4, !dbg !7023
  br label %return, !dbg !7023

if.end11:                                         ; preds = %if.end7
  %16 = load %struct.acpi_device*, %struct.acpi_device** %device, align 8, !dbg !7024
  call void @acpi_power_add_remove_device(%struct.acpi_device* %16, i1 zeroext true) #9, !dbg !7025
  %17 = load %struct.acpi_device*, %struct.acpi_device** %device, align 8, !dbg !7026
  call void @acpi_device_add_finalize(%struct.acpi_device* %17) #9, !dbg !7027
  %18 = load i8*, i8** %handle.addr, align 8, !dbg !7028
  %call12 = call i32 @acpi_get_name(i8* %18, i32 0, %struct.acpi_buffer* %buffer) #9, !dbg !7029
  %pointer = getelementptr inbounds %struct.acpi_buffer, %struct.acpi_buffer* %buffer, i32 0, i32 1, !dbg !7030
  %19 = load i8*, i8** %pointer, align 8, !dbg !7030
  call void @kfree(i8* %19) #9, !dbg !7031
  %20 = load %struct.acpi_device*, %struct.acpi_device** %device, align 8, !dbg !7032
  %21 = load %struct.acpi_device**, %struct.acpi_device*** %child.addr, align 8, !dbg !7033
  store %struct.acpi_device* %20, %struct.acpi_device** %21, align 8, !dbg !7034
  store i32 0, i32* %retval, align 4, !dbg !7035
  br label %return, !dbg !7035

return:                                           ; preds = %if.end11, %if.then10, %if.then
  %22 = load i32, i32* %retval, align 4, !dbg !7036
  ret i32 %22, !dbg !7036
}

; Function Attrs: noredzone
declare dso_local i32 @device_attach(%struct.device*) #1

; Function Attrs: cold noinline noredzone nounwind optnone sspstrong
define dso_local i32 @acpi_scan_init() #5 section ".init.text" !dbg !7037 {
entry:
  %result = alloca i32, align 4
  %status = alloca i32, align 4
  %stao_ptr = alloca %struct.acpi_table_stao*, align 8
  call void @llvm.dbg.declare(metadata i32* %result, metadata !7040, metadata !DIExpression()), !dbg !7041
  call void @llvm.dbg.declare(metadata i32* %status, metadata !7042, metadata !DIExpression()), !dbg !7043
  call void @llvm.dbg.declare(metadata %struct.acpi_table_stao** %stao_ptr, metadata !7044, metadata !DIExpression()), !dbg !7051
  call void @acpi_pci_root_init() #9, !dbg !7052
  call void @acpi_pci_link_init() #9, !dbg !7053
  call void @acpi_processor_init() #9, !dbg !7054
  call void @acpi_platform_init() #9, !dbg !7055
  call void @acpi_lpss_init() #9, !dbg !7056
  call void @acpi_apd_init() #9, !dbg !7057
  call void @acpi_cmos_rtc_init() #9, !dbg !7058
  call void @acpi_container_init() #9, !dbg !7059
  call void @acpi_memory_hotplug_init() #9, !dbg !7060
  call void @acpi_watchdog_init() #9, !dbg !7061
  call void @acpi_pnp_init() #9, !dbg !7062
  call void @acpi_int340x_thermal_init() #9, !dbg !7063
  call void @acpi_amba_init() #9, !dbg !7064
  call void @acpi_init_lpit() #9, !dbg !7065
  %call = call i32 @acpi_scan_add_handler(%struct.acpi_scan_handler* @generic_device_handler) #9, !dbg !7066
  %0 = bitcast %struct.acpi_table_stao** %stao_ptr to %struct.acpi_table_header**, !dbg !7067
  %call1 = call i32 @acpi_get_table(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.27, i64 0, i64 0), i32 0, %struct.acpi_table_header** %0) #9, !dbg !7068
  store i32 %call1, i32* %status, align 4, !dbg !7069
  %1 = load i32, i32* %status, align 4, !dbg !7070
  %tobool = icmp ne i32 %1, 0, !dbg !7070
  br i1 %tobool, label %if.end8, label %if.then, !dbg !7072

if.then:                                          ; preds = %entry
  %2 = load %struct.acpi_table_stao*, %struct.acpi_table_stao** %stao_ptr, align 8, !dbg !7073
  %header = getelementptr inbounds %struct.acpi_table_stao, %struct.acpi_table_stao* %2, i32 0, i32 0, !dbg !7076
  %length = getelementptr inbounds %struct.acpi_table_header, %struct.acpi_table_header* %header, i32 0, i32 1, !dbg !7077
  %3 = load i32, i32* %length, align 1, !dbg !7077
  %conv = zext i32 %3 to i64, !dbg !7073
  %cmp = icmp ugt i64 %conv, 37, !dbg !7078
  br i1 %cmp, label %if.then3, label %if.end, !dbg !7079

if.then3:                                         ; preds = %if.then
  %call4 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.28, i64 0, i64 0)) #10, !dbg !7080
  br label %if.end, !dbg !7080

if.end:                                           ; preds = %if.then3, %if.then
  %4 = load %struct.acpi_table_stao*, %struct.acpi_table_stao** %stao_ptr, align 8, !dbg !7081
  %ignore_uart = getelementptr inbounds %struct.acpi_table_stao, %struct.acpi_table_stao* %4, i32 0, i32 1, !dbg !7083
  %5 = load i8, i8* %ignore_uart, align 1, !dbg !7083
  %tobool5 = icmp ne i8 %5, 0, !dbg !7081
  br i1 %tobool5, label %if.then6, label %if.end7, !dbg !7084

if.then6:                                         ; preds = %if.end
  call void @acpi_get_spcr_uart_addr() #10, !dbg !7085
  br label %if.end7, !dbg !7085

if.end7:                                          ; preds = %if.then6, %if.end
  %6 = load %struct.acpi_table_stao*, %struct.acpi_table_stao** %stao_ptr, align 8, !dbg !7086
  %7 = bitcast %struct.acpi_table_stao* %6 to %struct.acpi_table_header*, !dbg !7087
  call void @acpi_put_table(%struct.acpi_table_header* %7) #9, !dbg !7088
  br label %if.end8, !dbg !7089

if.end8:                                          ; preds = %if.end7, %entry
  call void @acpi_gpe_apply_masked_gpes() #9, !dbg !7090
  %call9 = call i32 @acpi_update_all_gpes() #9, !dbg !7091
  call void @mutex_lock(%struct.mutex* @acpi_scan_lock) #9, !dbg !7092
  %call10 = call i32 @acpi_bus_scan(i8* inttoptr (i64 -1 to i8*)) #9, !dbg !7093
  store i32 %call10, i32* %result, align 4, !dbg !7094
  %8 = load i32, i32* %result, align 4, !dbg !7095
  %tobool11 = icmp ne i32 %8, 0, !dbg !7095
  br i1 %tobool11, label %if.then12, label %if.end13, !dbg !7097

if.then12:                                        ; preds = %if.end8
  br label %out, !dbg !7098

if.end13:                                         ; preds = %if.end8
  %call14 = call i32 @acpi_bus_get_device(i8* inttoptr (i64 -1 to i8*), %struct.acpi_device** @acpi_root) #9, !dbg !7099
  store i32 %call14, i32* %result, align 4, !dbg !7100
  %9 = load i32, i32* %result, align 4, !dbg !7101
  %tobool15 = icmp ne i32 %9, 0, !dbg !7101
  br i1 %tobool15, label %if.then16, label %if.end17, !dbg !7103

if.then16:                                        ; preds = %if.end13
  br label %out, !dbg !7104

if.end17:                                         ; preds = %if.end13
  %10 = load i8, i8* @acpi_gbl_reduced_hardware, align 1, !dbg !7105
  %tobool18 = icmp ne i8 %10, 0, !dbg !7105
  br i1 %tobool18, label %if.end25, label %if.then19, !dbg !7107

if.then19:                                        ; preds = %if.end17
  %call20 = call i32 @acpi_bus_scan_fixed() #9, !dbg !7108
  store i32 %call20, i32* %result, align 4, !dbg !7110
  %11 = load i32, i32* %result, align 4, !dbg !7111
  %tobool21 = icmp ne i32 %11, 0, !dbg !7111
  br i1 %tobool21, label %if.then22, label %if.end24, !dbg !7113

if.then22:                                        ; preds = %if.then19
  %12 = load %struct.acpi_device*, %struct.acpi_device** @acpi_root, align 8, !dbg !7114
  %handle = getelementptr inbounds %struct.acpi_device, %struct.acpi_device* %12, i32 0, i32 1, !dbg !7116
  %13 = load i8*, i8** %handle, align 8, !dbg !7116
  %call23 = call i32 @acpi_detach_data(i8* %13, void (i8*, i8*)* @acpi_scan_drop_device) #9, !dbg !7117
  %14 = load %struct.acpi_device*, %struct.acpi_device** @acpi_root, align 8, !dbg !7118
  call void @acpi_device_del(%struct.acpi_device* %14) #9, !dbg !7119
  %15 = load %struct.acpi_device*, %struct.acpi_device** @acpi_root, align 8, !dbg !7120
  %dev = getelementptr inbounds %struct.acpi_device, %struct.acpi_device* %15, i32 0, i32 21, !dbg !7121
  call void @put_device(%struct.device* %dev) #9, !dbg !7122
  br label %out, !dbg !7123

if.end24:                                         ; preds = %if.then19
  br label %if.end25, !dbg !7124

if.end25:                                         ; preds = %if.end24, %if.end17
  store i8 1, i8* @acpi_scan_initialized, align 1, !dbg !7125
  br label %out, !dbg !7126

out:                                              ; preds = %if.end25, %if.then22, %if.then16, %if.then12
  call void @llvm.dbg.label(metadata !7127), !dbg !7128
  call void @mutex_unlock(%struct.mutex* @acpi_scan_lock) #9, !dbg !7129
  %16 = load i32, i32* %result, align 4, !dbg !7130
  ret i32 %16, !dbg !7131
}

; Function Attrs: noredzone
declare dso_local void @acpi_pci_root_init() #1

; Function Attrs: noredzone
declare dso_local void @acpi_pci_link_init() #1

; Function Attrs: noredzone
declare dso_local void @acpi_processor_init() #1

; Function Attrs: noredzone
declare dso_local void @acpi_platform_init() #1

; Function Attrs: noredzone
declare dso_local void @acpi_lpss_init() #1

; Function Attrs: noredzone
declare dso_local void @acpi_apd_init() #1

; Function Attrs: noredzone
declare dso_local void @acpi_cmos_rtc_init() #1

; Function Attrs: noredzone
declare dso_local void @acpi_container_init() #1

; Function Attrs: noredzone
declare dso_local void @acpi_memory_hotplug_init() #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @acpi_watchdog_init() #0 !dbg !7132 {
entry:
  ret void, !dbg !7133
}

; Function Attrs: noredzone
declare dso_local void @acpi_pnp_init() #1

; Function Attrs: noredzone
declare dso_local void @acpi_int340x_thermal_init() #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @acpi_amba_init() #0 !dbg !7134 {
entry:
  ret void, !dbg !7135
}

; Function Attrs: noredzone
declare dso_local void @acpi_init_lpit() #1

; Function Attrs: noredzone
declare dso_local i32 @acpi_get_table(i8*, i32, %struct.acpi_table_header**) #1

; Function Attrs: cold noinline noredzone nounwind optnone sspstrong
define internal void @acpi_get_spcr_uart_addr() #5 section ".init.text" !dbg !7136 {
entry:
  %status = alloca i32, align 4
  %spcr_ptr = alloca %struct.acpi_table_spcr*, align 8
  call void @llvm.dbg.declare(metadata i32* %status, metadata !7137, metadata !DIExpression()), !dbg !7138
  call void @llvm.dbg.declare(metadata %struct.acpi_table_spcr** %spcr_ptr, metadata !7139, metadata !DIExpression()), !dbg !7172
  %0 = bitcast %struct.acpi_table_spcr** %spcr_ptr to %struct.acpi_table_header**, !dbg !7173
  %call = call i32 @acpi_get_table(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.88, i64 0, i64 0), i32 0, %struct.acpi_table_header** %0) #9, !dbg !7174
  store i32 %call, i32* %status, align 4, !dbg !7175
  %1 = load i32, i32* %status, align 4, !dbg !7176
  %tobool = icmp ne i32 %1, 0, !dbg !7176
  br i1 %tobool, label %if.then, label %if.end, !dbg !7178

if.then:                                          ; preds = %entry
  %call1 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.89, i64 0, i64 0)) #10, !dbg !7179
  br label %return, !dbg !7181

if.end:                                           ; preds = %entry
  %2 = load %struct.acpi_table_spcr*, %struct.acpi_table_spcr** %spcr_ptr, align 8, !dbg !7182
  %serial_port = getelementptr inbounds %struct.acpi_table_spcr, %struct.acpi_table_spcr* %2, i32 0, i32 3, !dbg !7183
  %address = getelementptr inbounds %struct.acpi_generic_address, %struct.acpi_generic_address* %serial_port, i32 0, i32 4, !dbg !7184
  %3 = load i64, i64* %address, align 1, !dbg !7184
  store i64 %3, i64* @spcr_uart_addr, align 8, !dbg !7185
  %4 = load %struct.acpi_table_spcr*, %struct.acpi_table_spcr** %spcr_ptr, align 8, !dbg !7186
  %5 = bitcast %struct.acpi_table_spcr* %4 to %struct.acpi_table_header*, !dbg !7187
  call void @acpi_put_table(%struct.acpi_table_header* %5) #9, !dbg !7188
  br label %return, !dbg !7189

return:                                           ; preds = %if.end, %if.then
  ret void, !dbg !7189
}

; Function Attrs: noredzone
declare dso_local void @acpi_put_table(%struct.acpi_table_header*) #1

; Function Attrs: noredzone
declare dso_local void @acpi_gpe_apply_masked_gpes() #1

; Function Attrs: noredzone
declare dso_local i32 @acpi_update_all_gpes() #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @acpi_bus_scan_fixed() #0 !dbg !7190 {
entry:
  %retval = alloca i32, align 4
  %result = alloca i32, align 4
  %device = alloca %struct.acpi_device*, align 8
  %device12 = alloca %struct.acpi_device*, align 8
  call void @llvm.dbg.declare(metadata i32* %result, metadata !7191, metadata !DIExpression()), !dbg !7192
  store i32 0, i32* %result, align 4, !dbg !7192
  %0 = load i32, i32* getelementptr inbounds (%struct.acpi_table_fadt, %struct.acpi_table_fadt* @acpi_gbl_FADT, i32 0, i32 38), align 1, !dbg !7193
  %and = and i32 %0, 16, !dbg !7195
  %tobool = icmp ne i32 %and, 0, !dbg !7195
  br i1 %tobool, label %if.end8, label %if.then, !dbg !7196

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata %struct.acpi_device** %device, metadata !7197, metadata !DIExpression()), !dbg !7199
  store %struct.acpi_device* null, %struct.acpi_device** %device, align 8, !dbg !7199
  %call = call i32 @acpi_add_single_object(%struct.acpi_device** %device, i8* null, i32 4, i64 15) #9, !dbg !7200
  store i32 %call, i32* %result, align 4, !dbg !7201
  %1 = load i32, i32* %result, align 4, !dbg !7202
  %tobool1 = icmp ne i32 %1, 0, !dbg !7202
  br i1 %tobool1, label %if.then2, label %if.end, !dbg !7204

if.then2:                                         ; preds = %if.then
  %2 = load i32, i32* %result, align 4, !dbg !7205
  store i32 %2, i32* %retval, align 4, !dbg !7206
  br label %return, !dbg !7206

if.end:                                           ; preds = %if.then
  %3 = load %struct.acpi_device*, %struct.acpi_device** %device, align 8, !dbg !7207
  %flags = getelementptr inbounds %struct.acpi_device, %struct.acpi_device* %3, i32 0, i32 9, !dbg !7208
  %4 = bitcast %struct.acpi_device_flags* %flags to i32*, !dbg !7209
  %bf.load = load i32, i32* %4, align 4, !dbg !7210
  %bf.clear = and i32 %bf.load, -17, !dbg !7210
  %bf.set = or i32 %bf.clear, 16, !dbg !7210
  store i32 %bf.set, i32* %4, align 4, !dbg !7210
  %5 = load %struct.acpi_device*, %struct.acpi_device** %device, align 8, !dbg !7211
  %dev = getelementptr inbounds %struct.acpi_device, %struct.acpi_device* %5, i32 0, i32 21, !dbg !7212
  %call3 = call i32 @device_attach(%struct.device* %dev) #9, !dbg !7213
  store i32 %call3, i32* %result, align 4, !dbg !7214
  %6 = load i32, i32* %result, align 4, !dbg !7215
  %cmp = icmp slt i32 %6, 0, !dbg !7217
  br i1 %cmp, label %if.then4, label %if.end5, !dbg !7218

if.then4:                                         ; preds = %if.end
  %7 = load i32, i32* %result, align 4, !dbg !7219
  store i32 %7, i32* %retval, align 4, !dbg !7220
  br label %return, !dbg !7220

if.end5:                                          ; preds = %if.end
  %8 = load %struct.acpi_device*, %struct.acpi_device** %device, align 8, !dbg !7221
  %dev6 = getelementptr inbounds %struct.acpi_device, %struct.acpi_device* %8, i32 0, i32 21, !dbg !7222
  %call7 = call i32 @device_init_wakeup(%struct.device* %dev6, i1 zeroext true) #9, !dbg !7223
  br label %if.end8, !dbg !7224

if.end8:                                          ; preds = %if.end5, %entry
  %9 = load i32, i32* getelementptr inbounds (%struct.acpi_table_fadt, %struct.acpi_table_fadt* @acpi_gbl_FADT, i32 0, i32 38), align 1, !dbg !7225
  %and9 = and i32 %9, 32, !dbg !7227
  %tobool10 = icmp ne i32 %and9, 0, !dbg !7227
  br i1 %tobool10, label %if.end23, label %if.then11, !dbg !7228

if.then11:                                        ; preds = %if.end8
  call void @llvm.dbg.declare(metadata %struct.acpi_device** %device12, metadata !7229, metadata !DIExpression()), !dbg !7231
  store %struct.acpi_device* null, %struct.acpi_device** %device12, align 8, !dbg !7231
  %call13 = call i32 @acpi_add_single_object(%struct.acpi_device** %device12, i8* null, i32 5, i64 15) #9, !dbg !7232
  store i32 %call13, i32* %result, align 4, !dbg !7233
  %10 = load i32, i32* %result, align 4, !dbg !7234
  %tobool14 = icmp ne i32 %10, 0, !dbg !7234
  br i1 %tobool14, label %if.then15, label %if.end16, !dbg !7236

if.then15:                                        ; preds = %if.then11
  %11 = load i32, i32* %result, align 4, !dbg !7237
  store i32 %11, i32* %retval, align 4, !dbg !7238
  br label %return, !dbg !7238

if.end16:                                         ; preds = %if.then11
  %12 = load %struct.acpi_device*, %struct.acpi_device** %device12, align 8, !dbg !7239
  %flags17 = getelementptr inbounds %struct.acpi_device, %struct.acpi_device* %12, i32 0, i32 9, !dbg !7240
  %13 = bitcast %struct.acpi_device_flags* %flags17 to i32*, !dbg !7241
  %bf.load18 = load i32, i32* %13, align 4, !dbg !7242
  %bf.clear19 = and i32 %bf.load18, -17, !dbg !7242
  %bf.set20 = or i32 %bf.clear19, 16, !dbg !7242
  store i32 %bf.set20, i32* %13, align 4, !dbg !7242
  %14 = load %struct.acpi_device*, %struct.acpi_device** %device12, align 8, !dbg !7243
  %dev21 = getelementptr inbounds %struct.acpi_device, %struct.acpi_device* %14, i32 0, i32 21, !dbg !7244
  %call22 = call i32 @device_attach(%struct.device* %dev21) #9, !dbg !7245
  store i32 %call22, i32* %result, align 4, !dbg !7246
  br label %if.end23, !dbg !7247

if.end23:                                         ; preds = %if.end16, %if.end8
  %15 = load i32, i32* %result, align 4, !dbg !7248
  %cmp24 = icmp slt i32 %15, 0, !dbg !7249
  br i1 %cmp24, label %cond.true, label %cond.false, !dbg !7248

cond.true:                                        ; preds = %if.end23
  %16 = load i32, i32* %result, align 4, !dbg !7250
  br label %cond.end, !dbg !7248

cond.false:                                       ; preds = %if.end23
  br label %cond.end, !dbg !7248

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %16, %cond.true ], [ 0, %cond.false ], !dbg !7248
  store i32 %cond, i32* %retval, align 4, !dbg !7251
  br label %return, !dbg !7251

return:                                           ; preds = %cond.end, %if.then15, %if.then4, %if.then2
  %17 = load i32, i32* %retval, align 4, !dbg !7252
  ret i32 %17, !dbg !7252
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @acpi_device_del(%struct.acpi_device* %device) #0 !dbg !7253 {
entry:
  %device.addr = alloca %struct.acpi_device*, align 8
  %acpi_device_bus_id = alloca %struct.acpi_device_bus_id*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.acpi_device_bus_id*, align 8
  %__mptr11 = alloca i8*, align 8
  %tmp15 = alloca %struct.acpi_device_bus_id*, align 8
  store %struct.acpi_device* %device, %struct.acpi_device** %device.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.acpi_device** %device.addr, metadata !7254, metadata !DIExpression()), !dbg !7255
  call void @llvm.dbg.declare(metadata %struct.acpi_device_bus_id** %acpi_device_bus_id, metadata !7256, metadata !DIExpression()), !dbg !7257
  call void @mutex_lock(%struct.mutex* @acpi_device_lock) #9, !dbg !7258
  %0 = load %struct.acpi_device*, %struct.acpi_device** %device.addr, align 8, !dbg !7259
  %parent = getelementptr inbounds %struct.acpi_device, %struct.acpi_device* %0, i32 0, i32 3, !dbg !7261
  %1 = load %struct.acpi_device*, %struct.acpi_device** %parent, align 8, !dbg !7261
  %tobool = icmp ne %struct.acpi_device* %1, null, !dbg !7259
  br i1 %tobool, label %if.then, label %if.end, !dbg !7262

if.then:                                          ; preds = %entry
  %2 = load %struct.acpi_device*, %struct.acpi_device** %device.addr, align 8, !dbg !7263
  %node = getelementptr inbounds %struct.acpi_device, %struct.acpi_device* %2, i32 0, i32 5, !dbg !7264
  call void @list_del(%struct.list_head* %node) #9, !dbg !7265
  br label %if.end, !dbg !7265

if.end:                                           ; preds = %if.then, %entry
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !7266, metadata !DIExpression()), !dbg !7269
  %3 = load %struct.list_head*, %struct.list_head** getelementptr inbounds (%struct.list_head, %struct.list_head* @acpi_bus_id_list, i32 0, i32 0), align 8, !dbg !7269
  %4 = bitcast %struct.list_head* %3 to i8*, !dbg !7269
  store i8* %4, i8** %__mptr, align 8, !dbg !7269
  br label %do.body, !dbg !7269

do.body:                                          ; preds = %if.end
  br label %do.end, !dbg !7270

do.end:                                           ; preds = %do.body
  %5 = load i8*, i8** %__mptr, align 8, !dbg !7269
  %add.ptr = getelementptr i8, i8* %5, i64 -24, !dbg !7269
  %6 = bitcast i8* %add.ptr to %struct.acpi_device_bus_id*, !dbg !7269
  store %struct.acpi_device_bus_id* %6, %struct.acpi_device_bus_id** %tmp, align 8, !dbg !7270
  %7 = load %struct.acpi_device_bus_id*, %struct.acpi_device_bus_id** %tmp, align 8, !dbg !7269
  store %struct.acpi_device_bus_id* %7, %struct.acpi_device_bus_id** %acpi_device_bus_id, align 8, !dbg !7272
  br label %for.cond, !dbg !7272

for.cond:                                         ; preds = %do.end14, %do.end
  %8 = load %struct.acpi_device_bus_id*, %struct.acpi_device_bus_id** %acpi_device_bus_id, align 8, !dbg !7273
  %node1 = getelementptr inbounds %struct.acpi_device_bus_id, %struct.acpi_device_bus_id* %8, i32 0, i32 2, !dbg !7273
  %cmp = icmp eq %struct.list_head* %node1, @acpi_bus_id_list, !dbg !7273
  %lnot = xor i1 %cmp, true, !dbg !7273
  br i1 %lnot, label %for.body, label %for.end, !dbg !7272

for.body:                                         ; preds = %for.cond
  %9 = load %struct.acpi_device_bus_id*, %struct.acpi_device_bus_id** %acpi_device_bus_id, align 8, !dbg !7275
  %bus_id = getelementptr inbounds %struct.acpi_device_bus_id, %struct.acpi_device_bus_id* %9, i32 0, i32 0, !dbg !7277
  %arraydecay = getelementptr inbounds [15 x i8], [15 x i8]* %bus_id, i64 0, i64 0, !dbg !7275
  %10 = load %struct.acpi_device*, %struct.acpi_device** %device.addr, align 8, !dbg !7278
  %call = call i8* @acpi_device_hid(%struct.acpi_device* %10) #9, !dbg !7279
  %call2 = call i32 @strcmp(i8* %arraydecay, i8* %call) #9, !dbg !7280
  %tobool3 = icmp ne i32 %call2, 0, !dbg !7280
  br i1 %tobool3, label %if.end10, label %if.then4, !dbg !7281

if.then4:                                         ; preds = %for.body
  %11 = load %struct.acpi_device_bus_id*, %struct.acpi_device_bus_id** %acpi_device_bus_id, align 8, !dbg !7282
  %instance_no = getelementptr inbounds %struct.acpi_device_bus_id, %struct.acpi_device_bus_id* %11, i32 0, i32 1, !dbg !7285
  %12 = load i32, i32* %instance_no, align 8, !dbg !7285
  %cmp5 = icmp ugt i32 %12, 0, !dbg !7286
  br i1 %cmp5, label %if.then6, label %if.else, !dbg !7287

if.then6:                                         ; preds = %if.then4
  %13 = load %struct.acpi_device_bus_id*, %struct.acpi_device_bus_id** %acpi_device_bus_id, align 8, !dbg !7288
  %instance_no7 = getelementptr inbounds %struct.acpi_device_bus_id, %struct.acpi_device_bus_id* %13, i32 0, i32 1, !dbg !7289
  %14 = load i32, i32* %instance_no7, align 8, !dbg !7290
  %dec = add i32 %14, -1, !dbg !7290
  store i32 %dec, i32* %instance_no7, align 8, !dbg !7290
  br label %if.end9, !dbg !7288

if.else:                                          ; preds = %if.then4
  %15 = load %struct.acpi_device_bus_id*, %struct.acpi_device_bus_id** %acpi_device_bus_id, align 8, !dbg !7291
  %node8 = getelementptr inbounds %struct.acpi_device_bus_id, %struct.acpi_device_bus_id* %15, i32 0, i32 2, !dbg !7293
  call void @list_del(%struct.list_head* %node8) #9, !dbg !7294
  %16 = load %struct.acpi_device_bus_id*, %struct.acpi_device_bus_id** %acpi_device_bus_id, align 8, !dbg !7295
  %17 = bitcast %struct.acpi_device_bus_id* %16 to i8*, !dbg !7295
  call void @kfree(i8* %17) #9, !dbg !7296
  br label %if.end9

if.end9:                                          ; preds = %if.else, %if.then6
  br label %for.end, !dbg !7297

if.end10:                                         ; preds = %for.body
  br label %for.inc, !dbg !7298

for.inc:                                          ; preds = %if.end10
  call void @llvm.dbg.declare(metadata i8** %__mptr11, metadata !7299, metadata !DIExpression()), !dbg !7301
  %18 = load %struct.acpi_device_bus_id*, %struct.acpi_device_bus_id** %acpi_device_bus_id, align 8, !dbg !7301
  %node12 = getelementptr inbounds %struct.acpi_device_bus_id, %struct.acpi_device_bus_id* %18, i32 0, i32 2, !dbg !7301
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %node12, i32 0, i32 0, !dbg !7301
  %19 = load %struct.list_head*, %struct.list_head** %next, align 8, !dbg !7301
  %20 = bitcast %struct.list_head* %19 to i8*, !dbg !7301
  store i8* %20, i8** %__mptr11, align 8, !dbg !7301
  br label %do.body13, !dbg !7301

do.body13:                                        ; preds = %for.inc
  br label %do.end14, !dbg !7302

do.end14:                                         ; preds = %do.body13
  %21 = load i8*, i8** %__mptr11, align 8, !dbg !7301
  %add.ptr16 = getelementptr i8, i8* %21, i64 -24, !dbg !7301
  %22 = bitcast i8* %add.ptr16 to %struct.acpi_device_bus_id*, !dbg !7301
  store %struct.acpi_device_bus_id* %22, %struct.acpi_device_bus_id** %tmp15, align 8, !dbg !7302
  %23 = load %struct.acpi_device_bus_id*, %struct.acpi_device_bus_id** %tmp15, align 8, !dbg !7301
  store %struct.acpi_device_bus_id* %23, %struct.acpi_device_bus_id** %acpi_device_bus_id, align 8, !dbg !7273
  br label %for.cond, !dbg !7273, !llvm.loop !7304

for.end:                                          ; preds = %if.end9, %for.cond
  %24 = load %struct.acpi_device*, %struct.acpi_device** %device.addr, align 8, !dbg !7306
  %wakeup_list = getelementptr inbounds %struct.acpi_device, %struct.acpi_device* %24, i32 0, i32 6, !dbg !7307
  call void @list_del(%struct.list_head* %wakeup_list) #9, !dbg !7308
  call void @mutex_unlock(%struct.mutex* @acpi_device_lock) #9, !dbg !7309
  %25 = load %struct.acpi_device*, %struct.acpi_device** %device.addr, align 8, !dbg !7310
  call void @acpi_power_add_remove_device(%struct.acpi_device* %25, i1 zeroext false) #9, !dbg !7311
  %26 = load %struct.acpi_device*, %struct.acpi_device** %device.addr, align 8, !dbg !7312
  call void @acpi_device_remove_files(%struct.acpi_device* %26) #9, !dbg !7313
  %27 = load %struct.acpi_device*, %struct.acpi_device** %device.addr, align 8, !dbg !7314
  %remove = getelementptr inbounds %struct.acpi_device, %struct.acpi_device* %27, i32 0, i32 26, !dbg !7316
  %28 = load void (%struct.acpi_device*)*, void (%struct.acpi_device*)** %remove, align 8, !dbg !7316
  %tobool17 = icmp ne void (%struct.acpi_device*)* %28, null, !dbg !7314
  br i1 %tobool17, label %if.then18, label %if.end20, !dbg !7317

if.then18:                                        ; preds = %for.end
  %29 = load %struct.acpi_device*, %struct.acpi_device** %device.addr, align 8, !dbg !7318
  %remove19 = getelementptr inbounds %struct.acpi_device, %struct.acpi_device* %29, i32 0, i32 26, !dbg !7319
  %30 = load void (%struct.acpi_device*)*, void (%struct.acpi_device*)** %remove19, align 8, !dbg !7319
  %31 = load %struct.acpi_device*, %struct.acpi_device** %device.addr, align 8, !dbg !7320
  call void %30(%struct.acpi_device* %31) #9, !dbg !7318
  br label %if.end20, !dbg !7318

if.end20:                                         ; preds = %if.then18, %for.end
  %32 = load %struct.acpi_device*, %struct.acpi_device** %device.addr, align 8, !dbg !7321
  %dev = getelementptr inbounds %struct.acpi_device, %struct.acpi_device* %32, i32 0, i32 21, !dbg !7322
  call void @device_del(%struct.device* %dev) #9, !dbg !7323
  ret void, !dbg !7324
}

; Function Attrs: cold noinline noredzone nounwind optnone sspstrong
define dso_local i32 @__acpi_probe_device_table(%struct.acpi_probe_entry* %ap_head, i32 %nr) #5 section ".init.text" !dbg !7325 {
entry:
  %retval = alloca i32, align 4
  %ap_head.addr = alloca %struct.acpi_probe_entry*, align 8
  %nr.addr = alloca i32, align 4
  %count = alloca i32, align 4
  %res = alloca i32, align 4
  store %struct.acpi_probe_entry* %ap_head, %struct.acpi_probe_entry** %ap_head.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.acpi_probe_entry** %ap_head.addr, metadata !7328, metadata !DIExpression()), !dbg !7329
  store i32 %nr, i32* %nr.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %nr.addr, metadata !7330, metadata !DIExpression()), !dbg !7331
  call void @llvm.dbg.declare(metadata i32* %count, metadata !7332, metadata !DIExpression()), !dbg !7333
  store i32 0, i32* %count, align 4, !dbg !7333
  %0 = load i32, i32* @acpi_disabled, align 4, !dbg !7334
  %tobool = icmp ne i32 %0, 0, !dbg !7334
  br i1 %tobool, label %if.then, label %if.end, !dbg !7336

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !7337
  br label %return, !dbg !7337

if.end:                                           ; preds = %entry
  call void @mutex_lock(%struct.mutex* @acpi_probe_mutex) #9, !dbg !7338
  %1 = load %struct.acpi_probe_entry*, %struct.acpi_probe_entry** %ap_head.addr, align 8, !dbg !7339
  store %struct.acpi_probe_entry* %1, %struct.acpi_probe_entry** @ape, align 8, !dbg !7341
  br label %for.cond, !dbg !7342

for.cond:                                         ; preds = %for.inc, %if.end
  %2 = load i32, i32* %nr.addr, align 4, !dbg !7343
  %tobool1 = icmp ne i32 %2, 0, !dbg !7345
  br i1 %tobool1, label %for.body, label %for.end, !dbg !7345

for.body:                                         ; preds = %for.cond
  %3 = load i32, i32* bitcast ([5 x i8]* @.str.29 to i32*), align 4, !dbg !7346
  %4 = load %struct.acpi_probe_entry*, %struct.acpi_probe_entry** @ape, align 8, !dbg !7346
  %id = getelementptr inbounds %struct.acpi_probe_entry, %struct.acpi_probe_entry* %4, i32 0, i32 0, !dbg !7346
  %arraydecay = getelementptr inbounds [5 x i8], [5 x i8]* %id, i64 0, i64 0, !dbg !7346
  %5 = bitcast i8* %arraydecay to i32*, !dbg !7346
  %6 = load i32, i32* %5, align 4, !dbg !7346
  %cmp = icmp eq i32 %3, %6, !dbg !7346
  br i1 %cmp, label %if.then2, label %if.else, !dbg !7349

if.then2:                                         ; preds = %for.body
  store i32 0, i32* @acpi_probe_count, align 4, !dbg !7350
  %7 = load %struct.acpi_probe_entry*, %struct.acpi_probe_entry** @ape, align 8, !dbg !7352
  %type = getelementptr inbounds %struct.acpi_probe_entry, %struct.acpi_probe_entry* %7, i32 0, i32 1, !dbg !7353
  %8 = load i8, i8* %type, align 1, !dbg !7353
  %conv = zext i8 %8 to i32, !dbg !7352
  %call = call i32 @acpi_table_parse_madt(i32 %conv, i32 (%union.acpi_subtable_headers*, i64)* @acpi_match_madt, i32 0) #9, !dbg !7354
  %9 = load i32, i32* @acpi_probe_count, align 4, !dbg !7355
  %10 = load i32, i32* %count, align 4, !dbg !7356
  %add = add i32 %10, %9, !dbg !7356
  store i32 %add, i32* %count, align 4, !dbg !7356
  br label %if.end9, !dbg !7357

if.else:                                          ; preds = %for.body
  call void @llvm.dbg.declare(metadata i32* %res, metadata !7358, metadata !DIExpression()), !dbg !7360
  %11 = load %struct.acpi_probe_entry*, %struct.acpi_probe_entry** @ape, align 8, !dbg !7361
  %id3 = getelementptr inbounds %struct.acpi_probe_entry, %struct.acpi_probe_entry* %11, i32 0, i32 0, !dbg !7362
  %arraydecay4 = getelementptr inbounds [5 x i8], [5 x i8]* %id3, i64 0, i64 0, !dbg !7361
  %12 = load %struct.acpi_probe_entry*, %struct.acpi_probe_entry** @ape, align 8, !dbg !7363
  %13 = getelementptr inbounds %struct.acpi_probe_entry, %struct.acpi_probe_entry* %12, i32 0, i32 3, !dbg !7364
  %probe_table = bitcast %union.anon.74* %13 to i32 (%struct.acpi_table_header*)**, !dbg !7364
  %14 = load i32 (%struct.acpi_table_header*)*, i32 (%struct.acpi_table_header*)** %probe_table, align 8, !dbg !7364
  %call5 = call i32 @acpi_table_parse(i8* %arraydecay4, i32 (%struct.acpi_table_header*)* %14) #9, !dbg !7365
  store i32 %call5, i32* %res, align 4, !dbg !7366
  %15 = load i32, i32* %res, align 4, !dbg !7367
  %tobool6 = icmp ne i32 %15, 0, !dbg !7367
  br i1 %tobool6, label %if.end8, label %if.then7, !dbg !7369

if.then7:                                         ; preds = %if.else
  %16 = load i32, i32* %count, align 4, !dbg !7370
  %inc = add i32 %16, 1, !dbg !7370
  store i32 %inc, i32* %count, align 4, !dbg !7370
  br label %if.end8, !dbg !7371

if.end8:                                          ; preds = %if.then7, %if.else
  br label %if.end9

if.end9:                                          ; preds = %if.end8, %if.then2
  br label %for.inc, !dbg !7372

for.inc:                                          ; preds = %if.end9
  %17 = load %struct.acpi_probe_entry*, %struct.acpi_probe_entry** @ape, align 8, !dbg !7373
  %incdec.ptr = getelementptr %struct.acpi_probe_entry, %struct.acpi_probe_entry* %17, i32 1, !dbg !7373
  store %struct.acpi_probe_entry* %incdec.ptr, %struct.acpi_probe_entry** @ape, align 8, !dbg !7373
  %18 = load i32, i32* %nr.addr, align 4, !dbg !7374
  %dec = add i32 %18, -1, !dbg !7374
  store i32 %dec, i32* %nr.addr, align 4, !dbg !7374
  br label %for.cond, !dbg !7375, !llvm.loop !7376

for.end:                                          ; preds = %for.cond
  call void @mutex_unlock(%struct.mutex* @acpi_probe_mutex) #9, !dbg !7378
  %19 = load i32, i32* %count, align 4, !dbg !7379
  store i32 %19, i32* %retval, align 4, !dbg !7380
  br label %return, !dbg !7380

return:                                           ; preds = %for.end, %if.then
  %20 = load i32, i32* %retval, align 4, !dbg !7381
  ret i32 %20, !dbg !7381
}

; Function Attrs: noredzone
declare dso_local i32 @acpi_table_parse_madt(i32, i32 (%union.acpi_subtable_headers*, i64)*, i32) #1

; Function Attrs: cold noinline noredzone nounwind optnone sspstrong
define internal i32 @acpi_match_madt(%union.acpi_subtable_headers* %header, i64 %end) #5 section ".init.text" !dbg !7382 {
entry:
  %header.addr = alloca %union.acpi_subtable_headers*, align 8
  %end.addr = alloca i64, align 8
  store %union.acpi_subtable_headers* %header, %union.acpi_subtable_headers** %header.addr, align 8
  call void @llvm.dbg.declare(metadata %union.acpi_subtable_headers** %header.addr, metadata !7383, metadata !DIExpression()), !dbg !7384
  store i64 %end, i64* %end.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %end.addr, metadata !7385, metadata !DIExpression()), !dbg !7386
  %0 = load %struct.acpi_probe_entry*, %struct.acpi_probe_entry** @ape, align 8, !dbg !7387
  %subtable_valid = getelementptr inbounds %struct.acpi_probe_entry, %struct.acpi_probe_entry* %0, i32 0, i32 2, !dbg !7389
  %1 = load i1 (%struct.acpi_subtable_header*, %struct.acpi_probe_entry*)*, i1 (%struct.acpi_subtable_header*, %struct.acpi_probe_entry*)** %subtable_valid, align 8, !dbg !7389
  %tobool = icmp ne i1 (%struct.acpi_subtable_header*, %struct.acpi_probe_entry*)* %1, null, !dbg !7387
  br i1 %tobool, label %lor.lhs.false, label %if.then, !dbg !7390

lor.lhs.false:                                    ; preds = %entry
  %2 = load %struct.acpi_probe_entry*, %struct.acpi_probe_entry** @ape, align 8, !dbg !7391
  %subtable_valid1 = getelementptr inbounds %struct.acpi_probe_entry, %struct.acpi_probe_entry* %2, i32 0, i32 2, !dbg !7392
  %3 = load i1 (%struct.acpi_subtable_header*, %struct.acpi_probe_entry*)*, i1 (%struct.acpi_subtable_header*, %struct.acpi_probe_entry*)** %subtable_valid1, align 8, !dbg !7392
  %4 = load %union.acpi_subtable_headers*, %union.acpi_subtable_headers** %header.addr, align 8, !dbg !7393
  %common = bitcast %union.acpi_subtable_headers* %4 to %struct.acpi_subtable_header*, !dbg !7394
  %5 = load %struct.acpi_probe_entry*, %struct.acpi_probe_entry** @ape, align 8, !dbg !7395
  %call = call zeroext i1 %3(%struct.acpi_subtable_header* %common, %struct.acpi_probe_entry* %5) #9, !dbg !7391
  br i1 %call, label %if.then, label %if.end5, !dbg !7396

if.then:                                          ; preds = %lor.lhs.false, %entry
  %6 = load %struct.acpi_probe_entry*, %struct.acpi_probe_entry** @ape, align 8, !dbg !7397
  %7 = getelementptr inbounds %struct.acpi_probe_entry, %struct.acpi_probe_entry* %6, i32 0, i32 3, !dbg !7399
  %probe_subtbl = bitcast %union.anon.74* %7 to i32 (%union.acpi_subtable_headers*, i64)**, !dbg !7399
  %8 = load i32 (%union.acpi_subtable_headers*, i64)*, i32 (%union.acpi_subtable_headers*, i64)** %probe_subtbl, align 8, !dbg !7399
  %9 = load %union.acpi_subtable_headers*, %union.acpi_subtable_headers** %header.addr, align 8, !dbg !7400
  %10 = load i64, i64* %end.addr, align 8, !dbg !7401
  %call2 = call i32 %8(%union.acpi_subtable_headers* %9, i64 %10) #9, !dbg !7397
  %tobool3 = icmp ne i32 %call2, 0, !dbg !7397
  br i1 %tobool3, label %if.end, label %if.then4, !dbg !7402

if.then4:                                         ; preds = %if.then
  %11 = load i32, i32* @acpi_probe_count, align 4, !dbg !7403
  %inc = add i32 %11, 1, !dbg !7403
  store i32 %inc, i32* @acpi_probe_count, align 4, !dbg !7403
  br label %if.end, !dbg !7404

if.end:                                           ; preds = %if.then4, %if.then
  br label %if.end5, !dbg !7405

if.end5:                                          ; preds = %if.end, %lor.lhs.false
  ret i32 0, !dbg !7406
}

; Function Attrs: noredzone
declare dso_local i32 @acpi_table_parse(i8*, i32 (%struct.acpi_table_header*)*) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @acpi_scan_table_handler(i32 %event, i8* %table, i8* %context) #0 !dbg !7407 {
entry:
  %s.addr.i.i = alloca %struct.kmem_cache*, align 8
  call void @llvm.dbg.declare(metadata %struct.kmem_cache** %s.addr.i.i, metadata !5106, metadata !DIExpression()), !dbg !7410
  %flags.addr.i17.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i17.i, metadata !5116, metadata !DIExpression()), !dbg !7413
  %size.addr.i18.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i18.i, metadata !5118, metadata !DIExpression()), !dbg !7414
  %ret.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %ret.i.i, metadata !5120, metadata !DIExpression()), !dbg !7415
  %retval.i12.i = alloca i32, align 4
  %flags.addr.i13.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i13.i, metadata !5122, metadata !DIExpression()), !dbg !7416
  %retval.i.i = alloca i32, align 4
  %size.addr.i11.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i11.i, metadata !5128, metadata !DIExpression()), !dbg !7418
  %size.addr.i.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i.i, metadata !5134, metadata !DIExpression()), !dbg !7420
  %flags.addr.i.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i.i.i, metadata !5143, metadata !DIExpression()), !dbg !7423
  %order.addr.i.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %order.addr.i.i.i, metadata !5145, metadata !DIExpression()), !dbg !7424
  %size.addr.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i, metadata !5147, metadata !DIExpression()), !dbg !7425
  %flags.addr.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i.i, metadata !5149, metadata !DIExpression()), !dbg !7426
  %order.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %order.i.i, metadata !5151, metadata !DIExpression()), !dbg !7427
  %retval.i = alloca i8*, align 8
  %size.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i, metadata !5153, metadata !DIExpression()), !dbg !7428
  %flags.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i, metadata !5155, metadata !DIExpression()), !dbg !7429
  %index.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %index.i, metadata !5157, metadata !DIExpression()), !dbg !7430
  %event.addr = alloca i32, align 4
  %table.addr = alloca i8*, align 8
  %context.addr = alloca i8*, align 8
  %tew = alloca %struct.acpi_table_events_work*, align 8
  %.compoundliteral = alloca %struct.atomic64_t, align 8
  store i32 %event, i32* %event.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %event.addr, metadata !7431, metadata !DIExpression()), !dbg !7432
  store i8* %table, i8** %table.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %table.addr, metadata !7433, metadata !DIExpression()), !dbg !7434
  store i8* %context, i8** %context.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %context.addr, metadata !7435, metadata !DIExpression()), !dbg !7436
  call void @llvm.dbg.declare(metadata %struct.acpi_table_events_work** %tew, metadata !7437, metadata !DIExpression()), !dbg !7438
  %0 = load i8, i8* @acpi_scan_initialized, align 1, !dbg !7439
  %tobool = trunc i8 %0 to i1, !dbg !7439
  br i1 %tobool, label %if.end, label %if.then, !dbg !7441

if.then:                                          ; preds = %entry
  br label %return, !dbg !7442

if.end:                                           ; preds = %entry
  %1 = load i32, i32* %event.addr, align 4, !dbg !7443
  %cmp = icmp ne i32 %1, 0, !dbg !7445
  br i1 %cmp, label %if.then1, label %if.end2, !dbg !7446

if.then1:                                         ; preds = %if.end
  br label %return, !dbg !7447

if.end2:                                          ; preds = %if.end
  store i64 48, i64* %size.addr.i, align 8
  store i32 3264, i32* %flags.addr.i, align 4
  %2 = load i64, i64* %size.addr.i, align 8, !dbg !7448
  %3 = call i1 @llvm.is.constant.i64(i64 %2) #11, !dbg !7449
  br i1 %3, label %if.then.i, label %if.end9.i, !dbg !7450

if.then.i:                                        ; preds = %if.end2
  %4 = load i64, i64* %size.addr.i, align 8, !dbg !7451
  %cmp.i = icmp ugt i64 %4, 8192, !dbg !7452
  br i1 %cmp.i, label %if.then1.i, label %if.end.i, !dbg !7453

if.then1.i:                                       ; preds = %if.then.i
  %5 = load i64, i64* %size.addr.i, align 8, !dbg !7454
  %6 = load i32, i32* %flags.addr.i, align 4, !dbg !7455
  store i64 %5, i64* %size.addr.i.i, align 8
  store i32 %6, i32* %flags.addr.i.i, align 4
  %7 = load i64, i64* %size.addr.i.i, align 8, !dbg !7456
  %call.i.i = call i32 @get_order(i64 %7) #12, !dbg !7457
  store i32 %call.i.i, i32* %order.i.i, align 4, !dbg !7427
  %8 = load i64, i64* %size.addr.i.i, align 8, !dbg !7458
  %9 = load i32, i32* %flags.addr.i.i, align 4, !dbg !7459
  %10 = load i32, i32* %order.i.i, align 4, !dbg !7460
  store i64 %8, i64* %size.addr.i.i.i, align 8
  store i32 %9, i32* %flags.addr.i.i.i, align 4
  store i32 %10, i32* %order.addr.i.i.i, align 4
  %11 = load i64, i64* %size.addr.i.i.i, align 8, !dbg !7461
  %12 = load i32, i32* %flags.addr.i.i.i, align 4, !dbg !7462
  %13 = load i32, i32* %order.addr.i.i.i, align 4, !dbg !7463
  %call.i.i.i = call noalias i8* @kmalloc_order(i64 %11, i32 %12, i32 %13) #13, !dbg !7464
  %ptrint.i.i.i = ptrtoint i8* %call.i.i.i to i64, !dbg !7464
  %maskedptr.i.i.i = and i64 %ptrint.i.i.i, 4095, !dbg !7464
  %maskcond.i.i.i = icmp eq i64 %maskedptr.i.i.i, 0, !dbg !7464
  call void @llvm.assume(i1 %maskcond.i.i.i) #11, !dbg !7464
  store i8* %call.i.i.i, i8** %retval.i, align 8, !dbg !7465
  br label %kmalloc.exit, !dbg !7465

if.end.i:                                         ; preds = %if.then.i
  %14 = load i64, i64* %size.addr.i, align 8, !dbg !7466
  store i64 %14, i64* %size.addr.i11.i, align 8
  %15 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7467
  %tobool.i.i = icmp ne i64 %15, 0, !dbg !7467
  br i1 %tobool.i.i, label %if.end.i.i, label %if.then.i.i, !dbg !7468

if.then.i.i:                                      ; preds = %if.end.i
  store i32 0, i32* %retval.i.i, align 4, !dbg !7469
  br label %kmalloc_index.exit.i, !dbg !7469

if.end.i.i:                                       ; preds = %if.end.i
  %16 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7470
  %cmp.i.i = icmp ule i64 %16, 8, !dbg !7471
  br i1 %cmp.i.i, label %if.then1.i.i, label %if.end2.i.i, !dbg !7472

if.then1.i.i:                                     ; preds = %if.end.i.i
  store i32 3, i32* %retval.i.i, align 4, !dbg !7473
  br label %kmalloc_index.exit.i, !dbg !7473

if.end2.i.i:                                      ; preds = %if.end.i.i
  %17 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7474
  %cmp3.i.i = icmp ugt i64 %17, 64, !dbg !7475
  br i1 %cmp3.i.i, label %land.lhs.true.i.i, label %if.end6.i.i, !dbg !7476

land.lhs.true.i.i:                                ; preds = %if.end2.i.i
  %18 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7477
  %cmp4.i.i = icmp ule i64 %18, 96, !dbg !7478
  br i1 %cmp4.i.i, label %if.then5.i.i, label %if.end6.i.i, !dbg !7479

if.then5.i.i:                                     ; preds = %land.lhs.true.i.i
  store i32 1, i32* %retval.i.i, align 4, !dbg !7480
  br label %kmalloc_index.exit.i, !dbg !7480

if.end6.i.i:                                      ; preds = %land.lhs.true.i.i, %if.end2.i.i
  %19 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7481
  %cmp7.i.i = icmp ugt i64 %19, 128, !dbg !7482
  br i1 %cmp7.i.i, label %land.lhs.true8.i.i, label %if.end11.i.i, !dbg !7483

land.lhs.true8.i.i:                               ; preds = %if.end6.i.i
  %20 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7484
  %cmp9.i.i = icmp ule i64 %20, 192, !dbg !7485
  br i1 %cmp9.i.i, label %if.then10.i.i, label %if.end11.i.i, !dbg !7486

if.then10.i.i:                                    ; preds = %land.lhs.true8.i.i
  store i32 2, i32* %retval.i.i, align 4, !dbg !7487
  br label %kmalloc_index.exit.i, !dbg !7487

if.end11.i.i:                                     ; preds = %land.lhs.true8.i.i, %if.end6.i.i
  %21 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7488
  %cmp12.i.i = icmp ule i64 %21, 8, !dbg !7489
  br i1 %cmp12.i.i, label %if.then13.i.i, label %if.end14.i.i, !dbg !7490

if.then13.i.i:                                    ; preds = %if.end11.i.i
  store i32 3, i32* %retval.i.i, align 4, !dbg !7491
  br label %kmalloc_index.exit.i, !dbg !7491

if.end14.i.i:                                     ; preds = %if.end11.i.i
  %22 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7492
  %cmp15.i.i = icmp ule i64 %22, 16, !dbg !7493
  br i1 %cmp15.i.i, label %if.then16.i.i, label %if.end17.i.i, !dbg !7494

if.then16.i.i:                                    ; preds = %if.end14.i.i
  store i32 4, i32* %retval.i.i, align 4, !dbg !7495
  br label %kmalloc_index.exit.i, !dbg !7495

if.end17.i.i:                                     ; preds = %if.end14.i.i
  %23 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7496
  %cmp18.i.i = icmp ule i64 %23, 32, !dbg !7497
  br i1 %cmp18.i.i, label %if.then19.i.i, label %if.end20.i.i, !dbg !7498

if.then19.i.i:                                    ; preds = %if.end17.i.i
  store i32 5, i32* %retval.i.i, align 4, !dbg !7499
  br label %kmalloc_index.exit.i, !dbg !7499

if.end20.i.i:                                     ; preds = %if.end17.i.i
  %24 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7500
  %cmp21.i.i = icmp ule i64 %24, 64, !dbg !7501
  br i1 %cmp21.i.i, label %if.then22.i.i, label %if.end23.i.i, !dbg !7502

if.then22.i.i:                                    ; preds = %if.end20.i.i
  store i32 6, i32* %retval.i.i, align 4, !dbg !7503
  br label %kmalloc_index.exit.i, !dbg !7503

if.end23.i.i:                                     ; preds = %if.end20.i.i
  %25 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7504
  %cmp24.i.i = icmp ule i64 %25, 128, !dbg !7505
  br i1 %cmp24.i.i, label %if.then25.i.i, label %if.end26.i.i, !dbg !7506

if.then25.i.i:                                    ; preds = %if.end23.i.i
  store i32 7, i32* %retval.i.i, align 4, !dbg !7507
  br label %kmalloc_index.exit.i, !dbg !7507

if.end26.i.i:                                     ; preds = %if.end23.i.i
  %26 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7508
  %cmp27.i.i = icmp ule i64 %26, 256, !dbg !7509
  br i1 %cmp27.i.i, label %if.then28.i.i, label %if.end29.i.i, !dbg !7510

if.then28.i.i:                                    ; preds = %if.end26.i.i
  store i32 8, i32* %retval.i.i, align 4, !dbg !7511
  br label %kmalloc_index.exit.i, !dbg !7511

if.end29.i.i:                                     ; preds = %if.end26.i.i
  %27 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7512
  %cmp30.i.i = icmp ule i64 %27, 512, !dbg !7513
  br i1 %cmp30.i.i, label %if.then31.i.i, label %if.end32.i.i, !dbg !7514

if.then31.i.i:                                    ; preds = %if.end29.i.i
  store i32 9, i32* %retval.i.i, align 4, !dbg !7515
  br label %kmalloc_index.exit.i, !dbg !7515

if.end32.i.i:                                     ; preds = %if.end29.i.i
  %28 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7516
  %cmp33.i.i = icmp ule i64 %28, 1024, !dbg !7517
  br i1 %cmp33.i.i, label %if.then34.i.i, label %if.end35.i.i, !dbg !7518

if.then34.i.i:                                    ; preds = %if.end32.i.i
  store i32 10, i32* %retval.i.i, align 4, !dbg !7519
  br label %kmalloc_index.exit.i, !dbg !7519

if.end35.i.i:                                     ; preds = %if.end32.i.i
  %29 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7520
  %cmp36.i.i = icmp ule i64 %29, 2048, !dbg !7521
  br i1 %cmp36.i.i, label %if.then37.i.i, label %if.end38.i.i, !dbg !7522

if.then37.i.i:                                    ; preds = %if.end35.i.i
  store i32 11, i32* %retval.i.i, align 4, !dbg !7523
  br label %kmalloc_index.exit.i, !dbg !7523

if.end38.i.i:                                     ; preds = %if.end35.i.i
  %30 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7524
  %cmp39.i.i = icmp ule i64 %30, 4096, !dbg !7525
  br i1 %cmp39.i.i, label %if.then40.i.i, label %if.end41.i.i, !dbg !7526

if.then40.i.i:                                    ; preds = %if.end38.i.i
  store i32 12, i32* %retval.i.i, align 4, !dbg !7527
  br label %kmalloc_index.exit.i, !dbg !7527

if.end41.i.i:                                     ; preds = %if.end38.i.i
  %31 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7528
  %cmp42.i.i = icmp ule i64 %31, 8192, !dbg !7529
  br i1 %cmp42.i.i, label %if.then43.i.i, label %if.end44.i.i, !dbg !7530

if.then43.i.i:                                    ; preds = %if.end41.i.i
  store i32 13, i32* %retval.i.i, align 4, !dbg !7531
  br label %kmalloc_index.exit.i, !dbg !7531

if.end44.i.i:                                     ; preds = %if.end41.i.i
  %32 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7532
  %cmp45.i.i = icmp ule i64 %32, 16384, !dbg !7533
  br i1 %cmp45.i.i, label %if.then46.i.i, label %if.end47.i.i, !dbg !7534

if.then46.i.i:                                    ; preds = %if.end44.i.i
  store i32 14, i32* %retval.i.i, align 4, !dbg !7535
  br label %kmalloc_index.exit.i, !dbg !7535

if.end47.i.i:                                     ; preds = %if.end44.i.i
  %33 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7536
  %cmp48.i.i = icmp ule i64 %33, 32768, !dbg !7537
  br i1 %cmp48.i.i, label %if.then49.i.i, label %if.end50.i.i, !dbg !7538

if.then49.i.i:                                    ; preds = %if.end47.i.i
  store i32 15, i32* %retval.i.i, align 4, !dbg !7539
  br label %kmalloc_index.exit.i, !dbg !7539

if.end50.i.i:                                     ; preds = %if.end47.i.i
  %34 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7540
  %cmp51.i.i = icmp ule i64 %34, 65536, !dbg !7541
  br i1 %cmp51.i.i, label %if.then52.i.i, label %if.end53.i.i, !dbg !7542

if.then52.i.i:                                    ; preds = %if.end50.i.i
  store i32 16, i32* %retval.i.i, align 4, !dbg !7543
  br label %kmalloc_index.exit.i, !dbg !7543

if.end53.i.i:                                     ; preds = %if.end50.i.i
  %35 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7544
  %cmp54.i.i = icmp ule i64 %35, 131072, !dbg !7545
  br i1 %cmp54.i.i, label %if.then55.i.i, label %if.end56.i.i, !dbg !7546

if.then55.i.i:                                    ; preds = %if.end53.i.i
  store i32 17, i32* %retval.i.i, align 4, !dbg !7547
  br label %kmalloc_index.exit.i, !dbg !7547

if.end56.i.i:                                     ; preds = %if.end53.i.i
  %36 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7548
  %cmp57.i.i = icmp ule i64 %36, 262144, !dbg !7549
  br i1 %cmp57.i.i, label %if.then58.i.i, label %if.end59.i.i, !dbg !7550

if.then58.i.i:                                    ; preds = %if.end56.i.i
  store i32 18, i32* %retval.i.i, align 4, !dbg !7551
  br label %kmalloc_index.exit.i, !dbg !7551

if.end59.i.i:                                     ; preds = %if.end56.i.i
  %37 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7552
  %cmp60.i.i = icmp ule i64 %37, 524288, !dbg !7553
  br i1 %cmp60.i.i, label %if.then61.i.i, label %if.end62.i.i, !dbg !7554

if.then61.i.i:                                    ; preds = %if.end59.i.i
  store i32 19, i32* %retval.i.i, align 4, !dbg !7555
  br label %kmalloc_index.exit.i, !dbg !7555

if.end62.i.i:                                     ; preds = %if.end59.i.i
  %38 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7556
  %cmp63.i.i = icmp ule i64 %38, 1048576, !dbg !7557
  br i1 %cmp63.i.i, label %if.then64.i.i, label %if.end65.i.i, !dbg !7558

if.then64.i.i:                                    ; preds = %if.end62.i.i
  store i32 20, i32* %retval.i.i, align 4, !dbg !7559
  br label %kmalloc_index.exit.i, !dbg !7559

if.end65.i.i:                                     ; preds = %if.end62.i.i
  %39 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7560
  %cmp66.i.i = icmp ule i64 %39, 2097152, !dbg !7561
  br i1 %cmp66.i.i, label %if.then67.i.i, label %if.end68.i.i, !dbg !7562

if.then67.i.i:                                    ; preds = %if.end65.i.i
  store i32 21, i32* %retval.i.i, align 4, !dbg !7563
  br label %kmalloc_index.exit.i, !dbg !7563

if.end68.i.i:                                     ; preds = %if.end65.i.i
  %40 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7564
  %cmp69.i.i = icmp ule i64 %40, 4194304, !dbg !7565
  br i1 %cmp69.i.i, label %if.then70.i.i, label %if.end71.i.i, !dbg !7566

if.then70.i.i:                                    ; preds = %if.end68.i.i
  store i32 22, i32* %retval.i.i, align 4, !dbg !7567
  br label %kmalloc_index.exit.i, !dbg !7567

if.end71.i.i:                                     ; preds = %if.end68.i.i
  %41 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7568
  %cmp72.i.i = icmp ule i64 %41, 8388608, !dbg !7569
  br i1 %cmp72.i.i, label %if.then73.i.i, label %if.end74.i.i, !dbg !7570

if.then73.i.i:                                    ; preds = %if.end71.i.i
  store i32 23, i32* %retval.i.i, align 4, !dbg !7571
  br label %kmalloc_index.exit.i, !dbg !7571

if.end74.i.i:                                     ; preds = %if.end71.i.i
  %42 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7572
  %cmp75.i.i = icmp ule i64 %42, 16777216, !dbg !7573
  br i1 %cmp75.i.i, label %if.then76.i.i, label %if.end77.i.i, !dbg !7574

if.then76.i.i:                                    ; preds = %if.end74.i.i
  store i32 24, i32* %retval.i.i, align 4, !dbg !7575
  br label %kmalloc_index.exit.i, !dbg !7575

if.end77.i.i:                                     ; preds = %if.end74.i.i
  %43 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7576
  %cmp78.i.i = icmp ule i64 %43, 33554432, !dbg !7577
  br i1 %cmp78.i.i, label %if.then79.i.i, label %if.end80.i.i, !dbg !7578

if.then79.i.i:                                    ; preds = %if.end77.i.i
  store i32 25, i32* %retval.i.i, align 4, !dbg !7579
  br label %kmalloc_index.exit.i, !dbg !7579

if.end80.i.i:                                     ; preds = %if.end77.i.i
  %44 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7580
  %cmp81.i.i = icmp ule i64 %44, 67108864, !dbg !7581
  br i1 %cmp81.i.i, label %if.then82.i.i, label %if.end83.i.i, !dbg !7582

if.then82.i.i:                                    ; preds = %if.end80.i.i
  store i32 26, i32* %retval.i.i, align 4, !dbg !7583
  br label %kmalloc_index.exit.i, !dbg !7583

if.end83.i.i:                                     ; preds = %if.end80.i.i
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.90, i64 0, i64 0), i32 382, i32 0, i64 12) #11, !dbg !7584, !srcloc !5333
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.unreachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 105) #11, !dbg !7585, !srcloc !5337
  unreachable, !dbg !7586

kmalloc_index.exit.i:                             ; preds = %if.then82.i.i, %if.then79.i.i, %if.then76.i.i, %if.then73.i.i, %if.then70.i.i, %if.then67.i.i, %if.then64.i.i, %if.then61.i.i, %if.then58.i.i, %if.then55.i.i, %if.then52.i.i, %if.then49.i.i, %if.then46.i.i, %if.then43.i.i, %if.then40.i.i, %if.then37.i.i, %if.then34.i.i, %if.then31.i.i, %if.then28.i.i, %if.then25.i.i, %if.then22.i.i, %if.then19.i.i, %if.then16.i.i, %if.then13.i.i, %if.then10.i.i, %if.then5.i.i, %if.then1.i.i, %if.then.i.i
  %45 = load i32, i32* %retval.i.i, align 4, !dbg !7587
  store i32 %45, i32* %index.i, align 4, !dbg !7588
  %46 = load i32, i32* %index.i, align 4, !dbg !7589
  %tobool.i = icmp ne i32 %46, 0, !dbg !7589
  br i1 %tobool.i, label %if.end4.i, label %if.then3.i, !dbg !7590

if.then3.i:                                       ; preds = %kmalloc_index.exit.i
  store i8* inttoptr (i64 16 to i8*), i8** %retval.i, align 8, !dbg !7591
  br label %kmalloc.exit, !dbg !7591

if.end4.i:                                        ; preds = %kmalloc_index.exit.i
  %47 = load i32, i32* %flags.addr.i, align 4, !dbg !7592
  store i32 %47, i32* %flags.addr.i13.i, align 4
  %48 = load i32, i32* %flags.addr.i13.i, align 4, !dbg !7593
  %and.i.i = and i32 %48, 17, !dbg !7593
  %cmp.i14.i = icmp eq i32 %and.i.i, 0, !dbg !7593
  %lnot.i.i = xor i1 %cmp.i14.i, true, !dbg !7593
  %lnot.ext.i.i = zext i1 %cmp.i14.i to i32, !dbg !7593
  %conv.i.i = sext i32 %lnot.ext.i.i to i64, !dbg !7593
  br i1 %cmp.i14.i, label %if.then.i15.i, label %if.end.i16.i, !dbg !7594

if.then.i15.i:                                    ; preds = %if.end4.i
  store i32 0, i32* %retval.i12.i, align 4, !dbg !7595
  br label %kmalloc_type.exit.i, !dbg !7595

if.end.i16.i:                                     ; preds = %if.end4.i
  %49 = load i32, i32* %flags.addr.i13.i, align 4, !dbg !7596
  %and2.i.i = and i32 %49, 1, !dbg !7597
  %tobool3.i.i = icmp ne i32 %and2.i.i, 0, !dbg !7596
  %50 = zext i1 %tobool3.i.i to i64, !dbg !7596
  %cond.i.i = select i1 %tobool3.i.i, i32 2, i32 1, !dbg !7596
  store i32 %cond.i.i, i32* %retval.i12.i, align 4, !dbg !7598
  br label %kmalloc_type.exit.i, !dbg !7598

kmalloc_type.exit.i:                              ; preds = %if.end.i16.i, %if.then.i15.i
  %51 = load i32, i32* %retval.i12.i, align 4, !dbg !7599
  %idxprom.i = zext i32 %51 to i64, !dbg !7600
  %arrayidx.i = getelementptr [3 x [14 x %struct.kmem_cache*]], [3 x [14 x %struct.kmem_cache*]]* @kmalloc_caches, i64 0, i64 %idxprom.i, !dbg !7600
  %52 = load i32, i32* %index.i, align 4, !dbg !7601
  %idxprom6.i = zext i32 %52 to i64, !dbg !7600
  %arrayidx7.i = getelementptr [14 x %struct.kmem_cache*], [14 x %struct.kmem_cache*]* %arrayidx.i, i64 0, i64 %idxprom6.i, !dbg !7600
  %53 = load %struct.kmem_cache*, %struct.kmem_cache** %arrayidx7.i, align 8, !dbg !7600
  %54 = load i32, i32* %flags.addr.i, align 4, !dbg !7602
  %55 = load i64, i64* %size.addr.i, align 8, !dbg !7603
  store %struct.kmem_cache* %53, %struct.kmem_cache** %s.addr.i.i, align 8
  store i32 %54, i32* %flags.addr.i17.i, align 4
  store i64 %55, i64* %size.addr.i18.i, align 8
  %56 = load %struct.kmem_cache*, %struct.kmem_cache** %s.addr.i.i, align 8, !dbg !7604
  %57 = load i32, i32* %flags.addr.i17.i, align 4, !dbg !7605
  %call.i19.i = call noalias i8* @kmem_cache_alloc(%struct.kmem_cache* %56, i32 %57) #13, !dbg !7606
  %ptrint.i.i = ptrtoint i8* %call.i19.i to i64, !dbg !7606
  %maskedptr.i.i = and i64 %ptrint.i.i, 7, !dbg !7606
  %maskcond.i.i = icmp eq i64 %maskedptr.i.i, 0, !dbg !7606
  call void @llvm.assume(i1 %maskcond.i.i) #11, !dbg !7606
  store i8* %call.i19.i, i8** %ret.i.i, align 8, !dbg !7415
  %58 = load %struct.kmem_cache*, %struct.kmem_cache** %s.addr.i.i, align 8, !dbg !7607
  %59 = load i8*, i8** %ret.i.i, align 8, !dbg !7608
  %60 = load i64, i64* %size.addr.i18.i, align 8, !dbg !7609
  %61 = load i32, i32* %flags.addr.i17.i, align 4, !dbg !7610
  %call1.i.i = call i8* @kasan_kmalloc(%struct.kmem_cache* %58, i8* %59, i64 %60, i32 %61) #13, !dbg !7611
  store i8* %call1.i.i, i8** %ret.i.i, align 8, !dbg !7612
  %62 = load i8*, i8** %ret.i.i, align 8, !dbg !7613
  store i8* %62, i8** %retval.i, align 8, !dbg !7614
  br label %kmalloc.exit, !dbg !7614

if.end9.i:                                        ; preds = %if.end2
  %63 = load i64, i64* %size.addr.i, align 8, !dbg !7615
  %64 = load i32, i32* %flags.addr.i, align 4, !dbg !7616
  %call10.i = call noalias i8* @__kmalloc(i64 %63, i32 %64) #13, !dbg !7617
  %ptrint.i = ptrtoint i8* %call10.i to i64, !dbg !7617
  %maskedptr.i = and i64 %ptrint.i, 7, !dbg !7617
  %maskcond.i = icmp eq i64 %maskedptr.i, 0, !dbg !7617
  call void @llvm.assume(i1 %maskcond.i) #11, !dbg !7617
  store i8* %call10.i, i8** %retval.i, align 8, !dbg !7618
  br label %kmalloc.exit, !dbg !7618

kmalloc.exit:                                     ; preds = %if.then1.i, %if.then3.i, %kmalloc_type.exit.i, %if.end9.i
  %65 = load i8*, i8** %retval.i, align 8, !dbg !7619
  %66 = bitcast i8* %65 to %struct.acpi_table_events_work*, !dbg !7620
  store %struct.acpi_table_events_work* %66, %struct.acpi_table_events_work** %tew, align 8, !dbg !7621
  %67 = load %struct.acpi_table_events_work*, %struct.acpi_table_events_work** %tew, align 8, !dbg !7622
  %tobool3 = icmp ne %struct.acpi_table_events_work* %67, null, !dbg !7622
  br i1 %tobool3, label %if.end5, label %if.then4, !dbg !7624

if.then4:                                         ; preds = %kmalloc.exit
  br label %return, !dbg !7625

if.end5:                                          ; preds = %kmalloc.exit
  br label %do.body, !dbg !7626

do.body:                                          ; preds = %if.end5
  %68 = load %struct.acpi_table_events_work*, %struct.acpi_table_events_work** %tew, align 8, !dbg !7627
  %work = getelementptr inbounds %struct.acpi_table_events_work, %struct.acpi_table_events_work* %68, i32 0, i32 0, !dbg !7627
  call void @__init_work(%struct.work_struct* %work, i32 0) #9, !dbg !7627
  %69 = load %struct.acpi_table_events_work*, %struct.acpi_table_events_work** %tew, align 8, !dbg !7627
  %work6 = getelementptr inbounds %struct.acpi_table_events_work, %struct.acpi_table_events_work* %69, i32 0, i32 0, !dbg !7627
  %data = getelementptr inbounds %struct.work_struct, %struct.work_struct* %work6, i32 0, i32 0, !dbg !7627
  %counter = getelementptr inbounds %struct.atomic64_t, %struct.atomic64_t* %.compoundliteral, i32 0, i32 0, !dbg !7627
  store i64 68719476704, i64* %counter, align 8, !dbg !7627
  %70 = bitcast %struct.atomic64_t* %data to i8*, !dbg !7627
  %71 = bitcast %struct.atomic64_t* %.compoundliteral to i8*, !dbg !7627
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %70, i8* align 8 %71, i64 8, i1 false), !dbg !7627
  %72 = load %struct.acpi_table_events_work*, %struct.acpi_table_events_work** %tew, align 8, !dbg !7627
  %work7 = getelementptr inbounds %struct.acpi_table_events_work, %struct.acpi_table_events_work* %72, i32 0, i32 0, !dbg !7627
  %entry8 = getelementptr inbounds %struct.work_struct, %struct.work_struct* %work7, i32 0, i32 1, !dbg !7627
  call void @INIT_LIST_HEAD(%struct.list_head* %entry8) #9, !dbg !7627
  %73 = load %struct.acpi_table_events_work*, %struct.acpi_table_events_work** %tew, align 8, !dbg !7627
  %work9 = getelementptr inbounds %struct.acpi_table_events_work, %struct.acpi_table_events_work* %73, i32 0, i32 0, !dbg !7627
  %func = getelementptr inbounds %struct.work_struct, %struct.work_struct* %work9, i32 0, i32 2, !dbg !7627
  store void (%struct.work_struct*)* @acpi_table_events_fn, void (%struct.work_struct*)** %func, align 8, !dbg !7627
  br label %do.end, !dbg !7627

do.end:                                           ; preds = %do.body
  %74 = load i8*, i8** %table.addr, align 8, !dbg !7629
  %75 = load %struct.acpi_table_events_work*, %struct.acpi_table_events_work** %tew, align 8, !dbg !7630
  %table10 = getelementptr inbounds %struct.acpi_table_events_work, %struct.acpi_table_events_work* %75, i32 0, i32 1, !dbg !7631
  store i8* %74, i8** %table10, align 8, !dbg !7632
  %76 = load i32, i32* %event.addr, align 4, !dbg !7633
  %77 = load %struct.acpi_table_events_work*, %struct.acpi_table_events_work** %tew, align 8, !dbg !7634
  %event11 = getelementptr inbounds %struct.acpi_table_events_work, %struct.acpi_table_events_work* %77, i32 0, i32 2, !dbg !7635
  store i32 %76, i32* %event11, align 8, !dbg !7636
  %78 = load %struct.acpi_table_events_work*, %struct.acpi_table_events_work** %tew, align 8, !dbg !7637
  %work12 = getelementptr inbounds %struct.acpi_table_events_work, %struct.acpi_table_events_work* %78, i32 0, i32 0, !dbg !7638
  %call13 = call zeroext i1 @schedule_work(%struct.work_struct* %work12) #9, !dbg !7639
  br label %return, !dbg !7640

return:                                           ; preds = %do.end, %if.then4, %if.then1, %if.then
  ret void, !dbg !7640
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @__init_work(%struct.work_struct* %work, i32 %onstack) #0 !dbg !7641 {
entry:
  %work.addr = alloca %struct.work_struct*, align 8
  %onstack.addr = alloca i32, align 4
  store %struct.work_struct* %work, %struct.work_struct** %work.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.work_struct** %work.addr, metadata !7644, metadata !DIExpression()), !dbg !7645
  store i32 %onstack, i32* %onstack.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %onstack.addr, metadata !7646, metadata !DIExpression()), !dbg !7647
  ret void, !dbg !7648
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @acpi_table_events_fn(%struct.work_struct* %work) #0 !dbg !7649 {
entry:
  %work.addr = alloca %struct.work_struct*, align 8
  %tew = alloca %struct.acpi_table_events_work*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.acpi_table_events_work*, align 8
  store %struct.work_struct* %work, %struct.work_struct** %work.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.work_struct** %work.addr, metadata !7650, metadata !DIExpression()), !dbg !7651
  call void @llvm.dbg.declare(metadata %struct.acpi_table_events_work** %tew, metadata !7652, metadata !DIExpression()), !dbg !7653
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !7654, metadata !DIExpression()), !dbg !7656
  %0 = load %struct.work_struct*, %struct.work_struct** %work.addr, align 8, !dbg !7656
  %1 = bitcast %struct.work_struct* %0 to i8*, !dbg !7656
  store i8* %1, i8** %__mptr, align 8, !dbg !7656
  br label %do.body, !dbg !7656

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !7657

do.end:                                           ; preds = %do.body
  %2 = load i8*, i8** %__mptr, align 8, !dbg !7656
  %add.ptr = getelementptr i8, i8* %2, i64 0, !dbg !7656
  %3 = bitcast i8* %add.ptr to %struct.acpi_table_events_work*, !dbg !7656
  store %struct.acpi_table_events_work* %3, %struct.acpi_table_events_work** %tmp, align 8, !dbg !7657
  %4 = load %struct.acpi_table_events_work*, %struct.acpi_table_events_work** %tmp, align 8, !dbg !7656
  store %struct.acpi_table_events_work* %4, %struct.acpi_table_events_work** %tew, align 8, !dbg !7659
  %5 = load %struct.acpi_table_events_work*, %struct.acpi_table_events_work** %tew, align 8, !dbg !7660
  %event = getelementptr inbounds %struct.acpi_table_events_work, %struct.acpi_table_events_work* %5, i32 0, i32 2, !dbg !7662
  %6 = load i32, i32* %event, align 8, !dbg !7662
  %cmp = icmp eq i32 %6, 0, !dbg !7663
  br i1 %cmp, label %if.then, label %if.end, !dbg !7664

if.then:                                          ; preds = %do.end
  call void @acpi_scan_lock_acquire() #9, !dbg !7665
  %call = call i32 @acpi_bus_scan(i8* inttoptr (i64 -1 to i8*)) #9, !dbg !7667
  call void @acpi_scan_lock_release() #9, !dbg !7668
  br label %if.end, !dbg !7669

if.end:                                           ; preds = %if.then, %do.end
  %7 = load %struct.acpi_table_events_work*, %struct.acpi_table_events_work** %tew, align 8, !dbg !7670
  %8 = bitcast %struct.acpi_table_events_work* %7 to i8*, !dbg !7670
  call void @kfree(i8* %8) #9, !dbg !7671
  ret void, !dbg !7672
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @schedule_work(%struct.work_struct* %work) #0 !dbg !7673 {
entry:
  %work.addr = alloca %struct.work_struct*, align 8
  store %struct.work_struct* %work, %struct.work_struct** %work.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.work_struct** %work.addr, metadata !7676, metadata !DIExpression()), !dbg !7677
  %0 = load %struct.workqueue_struct*, %struct.workqueue_struct** @system_wq, align 8, !dbg !7678
  %1 = load %struct.work_struct*, %struct.work_struct** %work.addr, align 8, !dbg !7679
  %call = call zeroext i1 @queue_work(%struct.workqueue_struct* %0, %struct.work_struct* %1) #9, !dbg !7680
  ret i1 %call, !dbg !7681
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @acpi_reconfig_notifier_register(%struct.notifier_block* %nb) #0 !dbg !7682 {
entry:
  %nb.addr = alloca %struct.notifier_block*, align 8
  store %struct.notifier_block* %nb, %struct.notifier_block** %nb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.notifier_block** %nb.addr, metadata !7685, metadata !DIExpression()), !dbg !7686
  %0 = load %struct.notifier_block*, %struct.notifier_block** %nb.addr, align 8, !dbg !7687
  %call = call i32 @blocking_notifier_chain_register(%struct.blocking_notifier_head* @acpi_reconfig_chain, %struct.notifier_block* %0) #9, !dbg !7688
  ret i32 %call, !dbg !7689
}

; Function Attrs: noredzone
declare dso_local i32 @blocking_notifier_chain_register(%struct.blocking_notifier_head*, %struct.notifier_block*) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @acpi_reconfig_notifier_unregister(%struct.notifier_block* %nb) #0 !dbg !7690 {
entry:
  %nb.addr = alloca %struct.notifier_block*, align 8
  store %struct.notifier_block* %nb, %struct.notifier_block** %nb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.notifier_block** %nb.addr, metadata !7691, metadata !DIExpression()), !dbg !7692
  %0 = load %struct.notifier_block*, %struct.notifier_block** %nb.addr, align 8, !dbg !7693
  %call = call i32 @blocking_notifier_chain_unregister(%struct.blocking_notifier_head* @acpi_reconfig_chain, %struct.notifier_block* %0) #9, !dbg !7694
  ret i32 %call, !dbg !7695
}

; Function Attrs: noredzone
declare dso_local i32 @blocking_notifier_chain_unregister(%struct.blocking_notifier_head*, %struct.notifier_block*) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @__list_add(%struct.list_head* %new, %struct.list_head* %prev, %struct.list_head* %next) #0 !dbg !7696 {
entry:
  %new.addr = alloca %struct.list_head*, align 8
  %prev.addr = alloca %struct.list_head*, align 8
  %next.addr = alloca %struct.list_head*, align 8
  store %struct.list_head* %new, %struct.list_head** %new.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %new.addr, metadata !7699, metadata !DIExpression()), !dbg !7700
  store %struct.list_head* %prev, %struct.list_head** %prev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %prev.addr, metadata !7701, metadata !DIExpression()), !dbg !7702
  store %struct.list_head* %next, %struct.list_head** %next.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %next.addr, metadata !7703, metadata !DIExpression()), !dbg !7704
  %0 = load %struct.list_head*, %struct.list_head** %new.addr, align 8, !dbg !7705
  %1 = load %struct.list_head*, %struct.list_head** %prev.addr, align 8, !dbg !7707
  %2 = load %struct.list_head*, %struct.list_head** %next.addr, align 8, !dbg !7708
  %call = call zeroext i1 @__list_add_valid(%struct.list_head* %0, %struct.list_head* %1, %struct.list_head* %2) #9, !dbg !7709
  br i1 %call, label %if.end, label %if.then, !dbg !7710

if.then:                                          ; preds = %entry
  br label %do.end8, !dbg !7711

if.end:                                           ; preds = %entry
  %3 = load %struct.list_head*, %struct.list_head** %new.addr, align 8, !dbg !7712
  %4 = load %struct.list_head*, %struct.list_head** %next.addr, align 8, !dbg !7713
  %prev1 = getelementptr inbounds %struct.list_head, %struct.list_head* %4, i32 0, i32 1, !dbg !7714
  store %struct.list_head* %3, %struct.list_head** %prev1, align 8, !dbg !7715
  %5 = load %struct.list_head*, %struct.list_head** %next.addr, align 8, !dbg !7716
  %6 = load %struct.list_head*, %struct.list_head** %new.addr, align 8, !dbg !7717
  %next2 = getelementptr inbounds %struct.list_head, %struct.list_head* %6, i32 0, i32 0, !dbg !7718
  store %struct.list_head* %5, %struct.list_head** %next2, align 8, !dbg !7719
  %7 = load %struct.list_head*, %struct.list_head** %prev.addr, align 8, !dbg !7720
  %8 = load %struct.list_head*, %struct.list_head** %new.addr, align 8, !dbg !7721
  %prev3 = getelementptr inbounds %struct.list_head, %struct.list_head* %8, i32 0, i32 1, !dbg !7722
  store %struct.list_head* %7, %struct.list_head** %prev3, align 8, !dbg !7723
  br label %do.body, !dbg !7724

do.body:                                          ; preds = %if.end
  br label %do.body4, !dbg !7725

do.body4:                                         ; preds = %do.body
  br label %do.end, !dbg !7727

do.end:                                           ; preds = %do.body4
  br label %do.body5, !dbg !7725

do.body5:                                         ; preds = %do.end
  %9 = load %struct.list_head*, %struct.list_head** %new.addr, align 8, !dbg !7729
  %10 = load %struct.list_head*, %struct.list_head** %prev.addr, align 8, !dbg !7729
  %next6 = getelementptr inbounds %struct.list_head, %struct.list_head* %10, i32 0, i32 0, !dbg !7729
  store volatile %struct.list_head* %9, %struct.list_head** %next6, align 8, !dbg !7729
  br label %do.end7, !dbg !7729

do.end7:                                          ; preds = %do.body5
  br label %do.end8, !dbg !7725

do.end8:                                          ; preds = %if.then, %do.end7
  ret void, !dbg !7731
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @__list_add_valid(%struct.list_head* %new, %struct.list_head* %prev, %struct.list_head* %next) #0 !dbg !7732 {
entry:
  %new.addr = alloca %struct.list_head*, align 8
  %prev.addr = alloca %struct.list_head*, align 8
  %next.addr = alloca %struct.list_head*, align 8
  store %struct.list_head* %new, %struct.list_head** %new.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %new.addr, metadata !7735, metadata !DIExpression()), !dbg !7736
  store %struct.list_head* %prev, %struct.list_head** %prev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %prev.addr, metadata !7737, metadata !DIExpression()), !dbg !7738
  store %struct.list_head* %next, %struct.list_head** %next.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %next.addr, metadata !7739, metadata !DIExpression()), !dbg !7740
  ret i1 true, !dbg !7741
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @acpi_scan_bus_check(%struct.acpi_device* %adev) #0 !dbg !7742 {
entry:
  %retval = alloca i32, align 4
  %adev.addr = alloca %struct.acpi_device*, align 8
  %handler = alloca %struct.acpi_scan_handler*, align 8
  %child = alloca %struct.acpi_device*, align 8
  %error = alloca i32, align 4
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.acpi_device*, align 8
  %__mptr23 = alloca i8*, align 8
  %tmp28 = alloca %struct.acpi_device*, align 8
  store %struct.acpi_device* %adev, %struct.acpi_device** %adev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.acpi_device** %adev.addr, metadata !7743, metadata !DIExpression()), !dbg !7744
  call void @llvm.dbg.declare(metadata %struct.acpi_scan_handler** %handler, metadata !7745, metadata !DIExpression()), !dbg !7746
  %0 = load %struct.acpi_device*, %struct.acpi_device** %adev.addr, align 8, !dbg !7747
  %handler1 = getelementptr inbounds %struct.acpi_device, %struct.acpi_device* %0, i32 0, i32 16, !dbg !7748
  %1 = load %struct.acpi_scan_handler*, %struct.acpi_scan_handler** %handler1, align 8, !dbg !7748
  store %struct.acpi_scan_handler* %1, %struct.acpi_scan_handler** %handler, align 8, !dbg !7746
  call void @llvm.dbg.declare(metadata %struct.acpi_device** %child, metadata !7749, metadata !DIExpression()), !dbg !7750
  call void @llvm.dbg.declare(metadata i32* %error, metadata !7751, metadata !DIExpression()), !dbg !7752
  %2 = load %struct.acpi_device*, %struct.acpi_device** %adev.addr, align 8, !dbg !7753
  %call = call i32 @acpi_bus_get_status(%struct.acpi_device* %2) #9, !dbg !7754
  %3 = load %struct.acpi_device*, %struct.acpi_device** %adev.addr, align 8, !dbg !7755
  %status = getelementptr inbounds %struct.acpi_device, %struct.acpi_device* %3, i32 0, i32 8, !dbg !7757
  %4 = bitcast %struct.acpi_device_status* %status to i32*, !dbg !7758
  %bf.load = load i32, i32* %4, align 8, !dbg !7758
  %bf.clear = and i32 %bf.load, 1, !dbg !7758
  %tobool = icmp ne i32 %bf.clear, 0, !dbg !7755
  br i1 %tobool, label %if.end, label %lor.lhs.false, !dbg !7759

lor.lhs.false:                                    ; preds = %entry
  %5 = load %struct.acpi_device*, %struct.acpi_device** %adev.addr, align 8, !dbg !7760
  %status2 = getelementptr inbounds %struct.acpi_device, %struct.acpi_device* %5, i32 0, i32 8, !dbg !7761
  %6 = bitcast %struct.acpi_device_status* %status2 to i32*, !dbg !7762
  %bf.load3 = load i32, i32* %6, align 8, !dbg !7762
  %bf.lshr = lshr i32 %bf.load3, 3, !dbg !7762
  %bf.clear4 = and i32 %bf.lshr, 1, !dbg !7762
  %tobool5 = icmp ne i32 %bf.clear4, 0, !dbg !7760
  br i1 %tobool5, label %if.end, label %if.then, !dbg !7763

if.then:                                          ; preds = %lor.lhs.false
  %7 = load %struct.acpi_device*, %struct.acpi_device** %adev.addr, align 8, !dbg !7764
  %call6 = call i32 @acpi_scan_device_not_present(%struct.acpi_device* %7) #9, !dbg !7766
  store i32 0, i32* %retval, align 4, !dbg !7767
  br label %return, !dbg !7767

if.end:                                           ; preds = %lor.lhs.false, %entry
  %8 = load %struct.acpi_scan_handler*, %struct.acpi_scan_handler** %handler, align 8, !dbg !7768
  %tobool7 = icmp ne %struct.acpi_scan_handler* %8, null, !dbg !7768
  br i1 %tobool7, label %land.lhs.true, label %if.end13, !dbg !7770

land.lhs.true:                                    ; preds = %if.end
  %9 = load %struct.acpi_scan_handler*, %struct.acpi_scan_handler** %handler, align 8, !dbg !7771
  %hotplug = getelementptr inbounds %struct.acpi_scan_handler, %struct.acpi_scan_handler* %9, i32 0, i32 7, !dbg !7772
  %scan_dependent = getelementptr inbounds %struct.acpi_hotplug_profile, %struct.acpi_hotplug_profile* %hotplug, i32 0, i32 1, !dbg !7773
  %10 = load i32 (%struct.acpi_device*)*, i32 (%struct.acpi_device*)** %scan_dependent, align 8, !dbg !7773
  %tobool8 = icmp ne i32 (%struct.acpi_device*)* %10, null, !dbg !7771
  br i1 %tobool8, label %if.then9, label %if.end13, !dbg !7774

if.then9:                                         ; preds = %land.lhs.true
  %11 = load %struct.acpi_scan_handler*, %struct.acpi_scan_handler** %handler, align 8, !dbg !7775
  %hotplug10 = getelementptr inbounds %struct.acpi_scan_handler, %struct.acpi_scan_handler* %11, i32 0, i32 7, !dbg !7776
  %scan_dependent11 = getelementptr inbounds %struct.acpi_hotplug_profile, %struct.acpi_hotplug_profile* %hotplug10, i32 0, i32 1, !dbg !7777
  %12 = load i32 (%struct.acpi_device*)*, i32 (%struct.acpi_device*)** %scan_dependent11, align 8, !dbg !7777
  %13 = load %struct.acpi_device*, %struct.acpi_device** %adev.addr, align 8, !dbg !7778
  %call12 = call i32 %12(%struct.acpi_device* %13) #9, !dbg !7775
  store i32 %call12, i32* %retval, align 4, !dbg !7779
  br label %return, !dbg !7779

if.end13:                                         ; preds = %land.lhs.true, %if.end
  %14 = load %struct.acpi_device*, %struct.acpi_device** %adev.addr, align 8, !dbg !7780
  %handle = getelementptr inbounds %struct.acpi_device, %struct.acpi_device* %14, i32 0, i32 1, !dbg !7781
  %15 = load i8*, i8** %handle, align 8, !dbg !7781
  %call14 = call i32 @acpi_bus_scan(i8* %15) #9, !dbg !7782
  store i32 %call14, i32* %error, align 4, !dbg !7783
  %16 = load i32, i32* %error, align 4, !dbg !7784
  %tobool15 = icmp ne i32 %16, 0, !dbg !7784
  br i1 %tobool15, label %if.then16, label %if.end17, !dbg !7786

if.then16:                                        ; preds = %if.end13
  %17 = load %struct.acpi_device*, %struct.acpi_device** %adev.addr, align 8, !dbg !7787
  %dev = getelementptr inbounds %struct.acpi_device, %struct.acpi_device* %17, i32 0, i32 21, !dbg !7787
  call void (%struct.device*, i8*, ...) @_dev_warn(%struct.device* %dev, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.31, i64 0, i64 0)) #10, !dbg !7787
  %18 = load i32, i32* %error, align 4, !dbg !7789
  store i32 %18, i32* %retval, align 4, !dbg !7790
  br label %return, !dbg !7790

if.end17:                                         ; preds = %if.end13
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !7791, metadata !DIExpression()), !dbg !7794
  %19 = load %struct.acpi_device*, %struct.acpi_device** %adev.addr, align 8, !dbg !7794
  %children = getelementptr inbounds %struct.acpi_device, %struct.acpi_device* %19, i32 0, i32 4, !dbg !7794
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %children, i32 0, i32 0, !dbg !7794
  %20 = load %struct.list_head*, %struct.list_head** %next, align 8, !dbg !7794
  %21 = bitcast %struct.list_head* %20 to i8*, !dbg !7794
  store i8* %21, i8** %__mptr, align 8, !dbg !7794
  br label %do.body, !dbg !7794

do.body:                                          ; preds = %if.end17
  br label %do.end, !dbg !7795

do.end:                                           ; preds = %do.body
  %22 = load i8*, i8** %__mptr, align 8, !dbg !7794
  %add.ptr = getelementptr i8, i8* %22, i64 -64, !dbg !7794
  %23 = bitcast i8* %add.ptr to %struct.acpi_device*, !dbg !7794
  store %struct.acpi_device* %23, %struct.acpi_device** %tmp, align 8, !dbg !7795
  %24 = load %struct.acpi_device*, %struct.acpi_device** %tmp, align 8, !dbg !7794
  store %struct.acpi_device* %24, %struct.acpi_device** %child, align 8, !dbg !7797
  br label %for.cond, !dbg !7797

for.cond:                                         ; preds = %do.end27, %do.end
  %25 = load %struct.acpi_device*, %struct.acpi_device** %child, align 8, !dbg !7798
  %node = getelementptr inbounds %struct.acpi_device, %struct.acpi_device* %25, i32 0, i32 5, !dbg !7798
  %26 = load %struct.acpi_device*, %struct.acpi_device** %adev.addr, align 8, !dbg !7798
  %children18 = getelementptr inbounds %struct.acpi_device, %struct.acpi_device* %26, i32 0, i32 4, !dbg !7798
  %cmp = icmp eq %struct.list_head* %node, %children18, !dbg !7798
  %lnot = xor i1 %cmp, true, !dbg !7798
  br i1 %lnot, label %for.body, label %for.end, !dbg !7797

for.body:                                         ; preds = %for.cond
  %27 = load %struct.acpi_device*, %struct.acpi_device** %child, align 8, !dbg !7800
  %call19 = call i32 @acpi_scan_bus_check(%struct.acpi_device* %27) #9, !dbg !7802
  store i32 %call19, i32* %error, align 4, !dbg !7803
  %28 = load i32, i32* %error, align 4, !dbg !7804
  %tobool20 = icmp ne i32 %28, 0, !dbg !7804
  br i1 %tobool20, label %if.then21, label %if.end22, !dbg !7806

if.then21:                                        ; preds = %for.body
  %29 = load i32, i32* %error, align 4, !dbg !7807
  store i32 %29, i32* %retval, align 4, !dbg !7808
  br label %return, !dbg !7808

if.end22:                                         ; preds = %for.body
  br label %for.inc, !dbg !7809

for.inc:                                          ; preds = %if.end22
  call void @llvm.dbg.declare(metadata i8** %__mptr23, metadata !7810, metadata !DIExpression()), !dbg !7812
  %30 = load %struct.acpi_device*, %struct.acpi_device** %child, align 8, !dbg !7812
  %node24 = getelementptr inbounds %struct.acpi_device, %struct.acpi_device* %30, i32 0, i32 5, !dbg !7812
  %next25 = getelementptr inbounds %struct.list_head, %struct.list_head* %node24, i32 0, i32 0, !dbg !7812
  %31 = load %struct.list_head*, %struct.list_head** %next25, align 8, !dbg !7812
  %32 = bitcast %struct.list_head* %31 to i8*, !dbg !7812
  store i8* %32, i8** %__mptr23, align 8, !dbg !7812
  br label %do.body26, !dbg !7812

do.body26:                                        ; preds = %for.inc
  br label %do.end27, !dbg !7813

do.end27:                                         ; preds = %do.body26
  %33 = load i8*, i8** %__mptr23, align 8, !dbg !7812
  %add.ptr29 = getelementptr i8, i8* %33, i64 -64, !dbg !7812
  %34 = bitcast i8* %add.ptr29 to %struct.acpi_device*, !dbg !7812
  store %struct.acpi_device* %34, %struct.acpi_device** %tmp28, align 8, !dbg !7813
  %35 = load %struct.acpi_device*, %struct.acpi_device** %tmp28, align 8, !dbg !7812
  store %struct.acpi_device* %35, %struct.acpi_device** %child, align 8, !dbg !7798
  br label %for.cond, !dbg !7798, !llvm.loop !7815

for.end:                                          ; preds = %for.cond
  store i32 0, i32* %retval, align 4, !dbg !7817
  br label %return, !dbg !7817

return:                                           ; preds = %for.end, %if.then21, %if.then16, %if.then9, %if.then
  %36 = load i32, i32* %retval, align 4, !dbg !7818
  ret i32 %36, !dbg !7818
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @acpi_scan_device_check(%struct.acpi_device* %adev) #0 !dbg !7819 {
entry:
  %retval = alloca i32, align 4
  %adev.addr = alloca %struct.acpi_device*, align 8
  %error = alloca i32, align 4
  store %struct.acpi_device* %adev, %struct.acpi_device** %adev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.acpi_device** %adev.addr, metadata !7820, metadata !DIExpression()), !dbg !7821
  call void @llvm.dbg.declare(metadata i32* %error, metadata !7822, metadata !DIExpression()), !dbg !7823
  %0 = load %struct.acpi_device*, %struct.acpi_device** %adev.addr, align 8, !dbg !7824
  %call = call i32 @acpi_bus_get_status(%struct.acpi_device* %0) #9, !dbg !7825
  %1 = load %struct.acpi_device*, %struct.acpi_device** %adev.addr, align 8, !dbg !7826
  %status = getelementptr inbounds %struct.acpi_device, %struct.acpi_device* %1, i32 0, i32 8, !dbg !7828
  %2 = bitcast %struct.acpi_device_status* %status to i32*, !dbg !7829
  %bf.load = load i32, i32* %2, align 8, !dbg !7829
  %bf.clear = and i32 %bf.load, 1, !dbg !7829
  %tobool = icmp ne i32 %bf.clear, 0, !dbg !7826
  br i1 %tobool, label %if.then, label %lor.lhs.false, !dbg !7830

lor.lhs.false:                                    ; preds = %entry
  %3 = load %struct.acpi_device*, %struct.acpi_device** %adev.addr, align 8, !dbg !7831
  %status1 = getelementptr inbounds %struct.acpi_device, %struct.acpi_device* %3, i32 0, i32 8, !dbg !7832
  %4 = bitcast %struct.acpi_device_status* %status1 to i32*, !dbg !7833
  %bf.load2 = load i32, i32* %4, align 8, !dbg !7833
  %bf.lshr = lshr i32 %bf.load2, 3, !dbg !7833
  %bf.clear3 = and i32 %bf.lshr, 1, !dbg !7833
  %tobool4 = icmp ne i32 %bf.clear3, 0, !dbg !7831
  br i1 %tobool4, label %if.then, label %if.else, !dbg !7834

if.then:                                          ; preds = %lor.lhs.false, %entry
  %5 = load %struct.acpi_device*, %struct.acpi_device** %adev.addr, align 8, !dbg !7835
  %handler = getelementptr inbounds %struct.acpi_device, %struct.acpi_device* %5, i32 0, i32 16, !dbg !7838
  %6 = load %struct.acpi_scan_handler*, %struct.acpi_scan_handler** %handler, align 8, !dbg !7838
  %tobool5 = icmp ne %struct.acpi_scan_handler* %6, null, !dbg !7835
  br i1 %tobool5, label %if.then6, label %if.end, !dbg !7839

if.then6:                                         ; preds = %if.then
  %7 = load %struct.acpi_device*, %struct.acpi_device** %adev.addr, align 8, !dbg !7840
  %dev = getelementptr inbounds %struct.acpi_device, %struct.acpi_device* %7, i32 0, i32 21, !dbg !7840
  call void (%struct.device*, i8*, ...) @_dev_warn(%struct.device* %dev, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.33, i64 0, i64 0)) #10, !dbg !7840
  store i32 -114, i32* %retval, align 4, !dbg !7842
  br label %return, !dbg !7842

if.end:                                           ; preds = %if.then
  %8 = load %struct.acpi_device*, %struct.acpi_device** %adev.addr, align 8, !dbg !7843
  %handle = getelementptr inbounds %struct.acpi_device, %struct.acpi_device* %8, i32 0, i32 1, !dbg !7844
  %9 = load i8*, i8** %handle, align 8, !dbg !7844
  %call7 = call i32 @acpi_bus_scan(i8* %9) #9, !dbg !7845
  store i32 %call7, i32* %error, align 4, !dbg !7846
  %10 = load i32, i32* %error, align 4, !dbg !7847
  %tobool8 = icmp ne i32 %10, 0, !dbg !7847
  br i1 %tobool8, label %if.then9, label %if.end11, !dbg !7849

if.then9:                                         ; preds = %if.end
  %11 = load %struct.acpi_device*, %struct.acpi_device** %adev.addr, align 8, !dbg !7850
  %dev10 = getelementptr inbounds %struct.acpi_device, %struct.acpi_device* %11, i32 0, i32 21, !dbg !7850
  call void (%struct.device*, i8*, ...) @_dev_warn(%struct.device* %dev10, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.31, i64 0, i64 0)) #10, !dbg !7850
  %12 = load i32, i32* %error, align 4, !dbg !7852
  store i32 %12, i32* %retval, align 4, !dbg !7853
  br label %return, !dbg !7853

if.end11:                                         ; preds = %if.end
  %13 = load %struct.acpi_device*, %struct.acpi_device** %adev.addr, align 8, !dbg !7854
  %handler12 = getelementptr inbounds %struct.acpi_device, %struct.acpi_device* %13, i32 0, i32 16, !dbg !7856
  %14 = load %struct.acpi_scan_handler*, %struct.acpi_scan_handler** %handler12, align 8, !dbg !7856
  %tobool13 = icmp ne %struct.acpi_scan_handler* %14, null, !dbg !7854
  br i1 %tobool13, label %if.end16, label %if.then14, !dbg !7857

if.then14:                                        ; preds = %if.end11
  %15 = load %struct.acpi_device*, %struct.acpi_device** %adev.addr, align 8, !dbg !7858
  %dev15 = getelementptr inbounds %struct.acpi_device, %struct.acpi_device* %15, i32 0, i32 21, !dbg !7858
  call void (%struct.device*, i8*, ...) @_dev_warn(%struct.device* %dev15, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.34, i64 0, i64 0)) #10, !dbg !7858
  store i32 -19, i32* %error, align 4, !dbg !7860
  br label %if.end16, !dbg !7861

if.end16:                                         ; preds = %if.then14, %if.end11
  br label %if.end18, !dbg !7862

if.else:                                          ; preds = %lor.lhs.false
  %16 = load %struct.acpi_device*, %struct.acpi_device** %adev.addr, align 8, !dbg !7863
  %call17 = call i32 @acpi_scan_device_not_present(%struct.acpi_device* %16) #9, !dbg !7865
  store i32 %call17, i32* %error, align 4, !dbg !7866
  br label %if.end18

if.end18:                                         ; preds = %if.else, %if.end16
  %17 = load i32, i32* %error, align 4, !dbg !7867
  store i32 %17, i32* %retval, align 4, !dbg !7868
  br label %return, !dbg !7868

return:                                           ; preds = %if.end18, %if.then9, %if.then6
  %18 = load i32, i32* %retval, align 4, !dbg !7869
  ret i32 %18, !dbg !7869
}

; Function Attrs: cold noredzone
declare dso_local void @_dev_info(%struct.device*, i8*, ...) #4

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @acpi_scan_hot_remove(%struct.acpi_device* %device) #0 !dbg !7870 {
entry:
  %retval = alloca i32, align 4
  %device.addr = alloca %struct.acpi_device*, align 8
  %handle = alloca i8*, align 8
  %sta = alloca i64, align 8
  %status = alloca i32, align 4
  %error = alloca i32, align 4
  store %struct.acpi_device* %device, %struct.acpi_device** %device.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.acpi_device** %device.addr, metadata !7871, metadata !DIExpression()), !dbg !7872
  call void @llvm.dbg.declare(metadata i8** %handle, metadata !7873, metadata !DIExpression()), !dbg !7874
  %0 = load %struct.acpi_device*, %struct.acpi_device** %device.addr, align 8, !dbg !7875
  %handle1 = getelementptr inbounds %struct.acpi_device, %struct.acpi_device* %0, i32 0, i32 1, !dbg !7876
  %1 = load i8*, i8** %handle1, align 8, !dbg !7876
  store i8* %1, i8** %handle, align 8, !dbg !7874
  call void @llvm.dbg.declare(metadata i64* %sta, metadata !7877, metadata !DIExpression()), !dbg !7878
  call void @llvm.dbg.declare(metadata i32* %status, metadata !7879, metadata !DIExpression()), !dbg !7880
  %2 = load %struct.acpi_device*, %struct.acpi_device** %device.addr, align 8, !dbg !7881
  %handler = getelementptr inbounds %struct.acpi_device, %struct.acpi_device* %2, i32 0, i32 16, !dbg !7883
  %3 = load %struct.acpi_scan_handler*, %struct.acpi_scan_handler** %handler, align 8, !dbg !7883
  %tobool = icmp ne %struct.acpi_scan_handler* %3, null, !dbg !7881
  br i1 %tobool, label %land.lhs.true, label %if.else, !dbg !7884

land.lhs.true:                                    ; preds = %entry
  %4 = load %struct.acpi_device*, %struct.acpi_device** %device.addr, align 8, !dbg !7885
  %handler2 = getelementptr inbounds %struct.acpi_device, %struct.acpi_device* %4, i32 0, i32 16, !dbg !7886
  %5 = load %struct.acpi_scan_handler*, %struct.acpi_scan_handler** %handler2, align 8, !dbg !7886
  %hotplug = getelementptr inbounds %struct.acpi_scan_handler, %struct.acpi_scan_handler* %5, i32 0, i32 7, !dbg !7887
  %demand_offline = getelementptr inbounds %struct.acpi_hotplug_profile, %struct.acpi_hotplug_profile* %hotplug, i32 0, i32 3, !dbg !7888
  %bf.load = load i8, i8* %demand_offline, align 8, !dbg !7888
  %bf.lshr = lshr i8 %bf.load, 1, !dbg !7888
  %bf.clear = and i8 %bf.lshr, 1, !dbg !7888
  %bf.cast = trunc i8 %bf.clear to i1, !dbg !7888
  br i1 %bf.cast, label %if.then, label %if.else, !dbg !7889

if.then:                                          ; preds = %land.lhs.true
  %6 = load %struct.acpi_device*, %struct.acpi_device** %device.addr, align 8, !dbg !7890
  %call = call zeroext i1 @acpi_scan_is_offline(%struct.acpi_device* %6, i1 zeroext true) #9, !dbg !7893
  br i1 %call, label %if.end, label %if.then3, !dbg !7894

if.then3:                                         ; preds = %if.then
  store i32 -16, i32* %retval, align 4, !dbg !7895
  br label %return, !dbg !7895

if.end:                                           ; preds = %if.then
  br label %if.end8, !dbg !7896

if.else:                                          ; preds = %land.lhs.true, %entry
  call void @llvm.dbg.declare(metadata i32* %error, metadata !7897, metadata !DIExpression()), !dbg !7899
  %7 = load %struct.acpi_device*, %struct.acpi_device** %device.addr, align 8, !dbg !7900
  %call4 = call i32 @acpi_scan_try_to_offline(%struct.acpi_device* %7) #9, !dbg !7901
  store i32 %call4, i32* %error, align 4, !dbg !7899
  %8 = load i32, i32* %error, align 4, !dbg !7902
  %tobool5 = icmp ne i32 %8, 0, !dbg !7902
  br i1 %tobool5, label %if.then6, label %if.end7, !dbg !7904

if.then6:                                         ; preds = %if.else
  %9 = load i32, i32* %error, align 4, !dbg !7905
  store i32 %9, i32* %retval, align 4, !dbg !7906
  br label %return, !dbg !7906

if.end7:                                          ; preds = %if.else
  br label %if.end8

if.end8:                                          ; preds = %if.end7, %if.end
  %10 = load %struct.acpi_device*, %struct.acpi_device** %device.addr, align 8, !dbg !7907
  call void @acpi_bus_trim(%struct.acpi_device* %10) #9, !dbg !7908
  %11 = load i8*, i8** %handle, align 8, !dbg !7909
  %call9 = call i32 @acpi_evaluate_lck(i8* %11, i32 0) #9, !dbg !7910
  %12 = load i8*, i8** %handle, align 8, !dbg !7911
  %call10 = call i32 @acpi_evaluate_ej0(i8* %12) #9, !dbg !7912
  store i32 %call10, i32* %status, align 4, !dbg !7913
  %13 = load i32, i32* %status, align 4, !dbg !7914
  %cmp = icmp eq i32 %13, 5, !dbg !7916
  br i1 %cmp, label %if.then11, label %if.else12, !dbg !7917

if.then11:                                        ; preds = %if.end8
  store i32 -19, i32* %retval, align 4, !dbg !7918
  br label %return, !dbg !7918

if.else12:                                        ; preds = %if.end8
  %14 = load i32, i32* %status, align 4, !dbg !7919
  %tobool13 = icmp ne i32 %14, 0, !dbg !7919
  br i1 %tobool13, label %if.then14, label %if.end15, !dbg !7921

if.then14:                                        ; preds = %if.else12
  store i32 -5, i32* %retval, align 4, !dbg !7922
  br label %return, !dbg !7922

if.end15:                                         ; preds = %if.else12
  br label %if.end16

if.end16:                                         ; preds = %if.end15
  %15 = load i8*, i8** %handle, align 8, !dbg !7923
  %call17 = call i32 @acpi_evaluate_integer(i8* %15, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.35, i64 0, i64 0), %struct.acpi_object_list* null, i64* %sta) #9, !dbg !7924
  store i32 %call17, i32* %status, align 4, !dbg !7925
  %16 = load i32, i32* %status, align 4, !dbg !7926
  %tobool18 = icmp ne i32 %16, 0, !dbg !7926
  br i1 %tobool18, label %if.then19, label %if.else20, !dbg !7928

if.then19:                                        ; preds = %if.end16
  %17 = load i8*, i8** %handle, align 8, !dbg !7929
  %18 = load i32, i32* %status, align 4, !dbg !7929
  call void (i8*, i8*, i8*, ...) @acpi_handle_printk(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.24, i64 0, i64 0), i8* %17, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.36, i64 0, i64 0), i32 %18) #9, !dbg !7929
  br label %if.end24, !dbg !7931

if.else20:                                        ; preds = %if.end16
  %19 = load i64, i64* %sta, align 8, !dbg !7932
  %and = and i64 %19, 2, !dbg !7934
  %tobool21 = icmp ne i64 %and, 0, !dbg !7934
  br i1 %tobool21, label %if.then22, label %if.end23, !dbg !7935

if.then22:                                        ; preds = %if.else20
  %20 = load i8*, i8** %handle, align 8, !dbg !7936
  %21 = load i64, i64* %sta, align 8, !dbg !7936
  call void (i8*, i8*, i8*, ...) @acpi_handle_printk(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.24, i64 0, i64 0), i8* %20, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.37, i64 0, i64 0), i64 %21) #9, !dbg !7936
  br label %if.end23, !dbg !7938

if.end23:                                         ; preds = %if.then22, %if.else20
  br label %if.end24

if.end24:                                         ; preds = %if.end23, %if.then19
  store i32 0, i32* %retval, align 4, !dbg !7939
  br label %return, !dbg !7939

return:                                           ; preds = %if.end24, %if.then14, %if.then11, %if.then6, %if.then3
  %22 = load i32, i32* %retval, align 4, !dbg !7940
  ret i32 %22, !dbg !7940
}

; Function Attrs: noredzone
declare dso_local i32 @acpi_bus_get_status(%struct.acpi_device*) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @acpi_scan_device_not_present(%struct.acpi_device* %adev) #0 !dbg !7941 {
entry:
  %retval = alloca i32, align 4
  %adev.addr = alloca %struct.acpi_device*, align 8
  store %struct.acpi_device* %adev, %struct.acpi_device** %adev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.acpi_device** %adev.addr, metadata !7942, metadata !DIExpression()), !dbg !7943
  %0 = load %struct.acpi_device*, %struct.acpi_device** %adev.addr, align 8, !dbg !7944
  %call = call zeroext i1 @acpi_device_enumerated(%struct.acpi_device* %0) #9, !dbg !7946
  br i1 %call, label %if.end, label %if.then, !dbg !7947

if.then:                                          ; preds = %entry
  %1 = load %struct.acpi_device*, %struct.acpi_device** %adev.addr, align 8, !dbg !7948
  %dev = getelementptr inbounds %struct.acpi_device, %struct.acpi_device* %1, i32 0, i32 21, !dbg !7948
  call void (%struct.device*, i8*, ...) @_dev_warn(%struct.device* %dev, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.32, i64 0, i64 0)) #10, !dbg !7948
  store i32 -114, i32* %retval, align 4, !dbg !7950
  br label %return, !dbg !7950

if.end:                                           ; preds = %entry
  %2 = load %struct.acpi_device*, %struct.acpi_device** %adev.addr, align 8, !dbg !7951
  call void @acpi_bus_trim(%struct.acpi_device* %2) #9, !dbg !7952
  store i32 0, i32* %retval, align 4, !dbg !7953
  br label %return, !dbg !7953

return:                                           ; preds = %if.end, %if.then
  %3 = load i32, i32* %retval, align 4, !dbg !7954
  ret i32 %3, !dbg !7954
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @acpi_device_enumerated(%struct.acpi_device* %adev) #0 !dbg !7955 {
entry:
  %adev.addr = alloca %struct.acpi_device*, align 8
  store %struct.acpi_device* %adev, %struct.acpi_device** %adev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.acpi_device** %adev.addr, metadata !7956, metadata !DIExpression()), !dbg !7957
  %0 = load %struct.acpi_device*, %struct.acpi_device** %adev.addr, align 8, !dbg !7958
  %tobool = icmp ne %struct.acpi_device* %0, null, !dbg !7958
  br i1 %tobool, label %land.lhs.true, label %land.end, !dbg !7959

land.lhs.true:                                    ; preds = %entry
  %1 = load %struct.acpi_device*, %struct.acpi_device** %adev.addr, align 8, !dbg !7960
  %flags = getelementptr inbounds %struct.acpi_device, %struct.acpi_device* %1, i32 0, i32 9, !dbg !7961
  %2 = bitcast %struct.acpi_device_flags* %flags to i32*, !dbg !7962
  %bf.load = load i32, i32* %2, align 4, !dbg !7962
  %bf.lshr = lshr i32 %bf.load, 5, !dbg !7962
  %bf.clear = and i32 %bf.lshr, 1, !dbg !7962
  %tobool1 = icmp ne i32 %bf.clear, 0, !dbg !7960
  br i1 %tobool1, label %land.rhs, label %land.end, !dbg !7963

land.rhs:                                         ; preds = %land.lhs.true
  %3 = load %struct.acpi_device*, %struct.acpi_device** %adev.addr, align 8, !dbg !7964
  %flags2 = getelementptr inbounds %struct.acpi_device, %struct.acpi_device* %3, i32 0, i32 9, !dbg !7965
  %4 = bitcast %struct.acpi_device_flags* %flags2 to i32*, !dbg !7966
  %bf.load3 = load i32, i32* %4, align 4, !dbg !7966
  %bf.lshr4 = lshr i32 %bf.load3, 6, !dbg !7966
  %bf.clear5 = and i32 %bf.lshr4, 1, !dbg !7966
  %tobool6 = icmp ne i32 %bf.clear5, 0, !dbg !7963
  br label %land.end

land.end:                                         ; preds = %land.rhs, %land.lhs.true, %entry
  %5 = phi i1 [ false, %land.lhs.true ], [ false, %entry ], [ %tobool6, %land.rhs ], !dbg !7967
  ret i1 %5, !dbg !7968
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @acpi_scan_try_to_offline(%struct.acpi_device* %device) #0 !dbg !7969 {
entry:
  %retval = alloca i32, align 4
  %device.addr = alloca %struct.acpi_device*, align 8
  %handle = alloca i8*, align 8
  %errdev = alloca %struct.device*, align 8
  %status = alloca i32, align 4
  store %struct.acpi_device* %device, %struct.acpi_device** %device.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.acpi_device** %device.addr, metadata !7970, metadata !DIExpression()), !dbg !7971
  call void @llvm.dbg.declare(metadata i8** %handle, metadata !7972, metadata !DIExpression()), !dbg !7973
  %0 = load %struct.acpi_device*, %struct.acpi_device** %device.addr, align 8, !dbg !7974
  %handle1 = getelementptr inbounds %struct.acpi_device, %struct.acpi_device* %0, i32 0, i32 1, !dbg !7975
  %1 = load i8*, i8** %handle1, align 8, !dbg !7975
  store i8* %1, i8** %handle, align 8, !dbg !7973
  call void @llvm.dbg.declare(metadata %struct.device** %errdev, metadata !7976, metadata !DIExpression()), !dbg !7977
  store %struct.device* null, %struct.device** %errdev, align 8, !dbg !7977
  call void @llvm.dbg.declare(metadata i32* %status, metadata !7978, metadata !DIExpression()), !dbg !7979
  %2 = load i8*, i8** %handle, align 8, !dbg !7980
  %3 = bitcast %struct.device** %errdev to i8**, !dbg !7981
  %call = call i32 @acpi_walk_namespace(i32 0, i8* %2, i32 -1, i32 (i8*, i32, i8*, i8**)* null, i32 (i8*, i32, i8*, i8**)* @acpi_bus_offline, i8* null, i8** %3) #9, !dbg !7982
  store i32 %call, i32* %status, align 4, !dbg !7983
  %4 = load i32, i32* %status, align 4, !dbg !7984
  %cmp = icmp eq i32 %4, 15, !dbg !7986
  br i1 %cmp, label %if.then, label %if.end, !dbg !7987

if.then:                                          ; preds = %entry
  %5 = load %struct.device*, %struct.device** %errdev, align 8, !dbg !7988
  call void (%struct.device*, i8*, ...) @_dev_warn(%struct.device* %5, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.38, i64 0, i64 0)) #10, !dbg !7988
  %6 = load i8*, i8** %handle, align 8, !dbg !7990
  %call2 = call i32 @acpi_walk_namespace(i32 0, i8* %6, i32 -1, i32 (i8*, i32, i8*, i8**)* @acpi_bus_online, i32 (i8*, i32, i8*, i8**)* null, i8* null, i8** null) #9, !dbg !7991
  store i32 -1, i32* %retval, align 4, !dbg !7992
  br label %return, !dbg !7992

if.end:                                           ; preds = %entry
  %7 = load i8*, i8** %handle, align 8, !dbg !7993
  %8 = bitcast %struct.device** %errdev to i8**, !dbg !7994
  %call3 = call i32 @acpi_bus_offline(i8* %7, i32 0, i8* null, i8** %8) #9, !dbg !7995
  %9 = load %struct.device*, %struct.device** %errdev, align 8, !dbg !7996
  %tobool = icmp ne %struct.device* %9, null, !dbg !7996
  br i1 %tobool, label %if.then4, label %if.end15, !dbg !7998

if.then4:                                         ; preds = %if.end
  store %struct.device* null, %struct.device** %errdev, align 8, !dbg !7999
  %10 = load i8*, i8** %handle, align 8, !dbg !8001
  %11 = bitcast %struct.device** %errdev to i8**, !dbg !8002
  %call5 = call i32 @acpi_walk_namespace(i32 0, i8* %10, i32 -1, i32 (i8*, i32, i8*, i8**)* null, i32 (i8*, i32, i8*, i8**)* @acpi_bus_offline, i8* inttoptr (i64 1 to i8*), i8** %11) #9, !dbg !8003
  %12 = load %struct.device*, %struct.device** %errdev, align 8, !dbg !8004
  %tobool6 = icmp ne %struct.device* %12, null, !dbg !8004
  br i1 %tobool6, label %if.end9, label %if.then7, !dbg !8006

if.then7:                                         ; preds = %if.then4
  %13 = load i8*, i8** %handle, align 8, !dbg !8007
  %14 = bitcast %struct.device** %errdev to i8**, !dbg !8008
  %call8 = call i32 @acpi_bus_offline(i8* %13, i32 0, i8* inttoptr (i64 1 to i8*), i8** %14) #9, !dbg !8009
  br label %if.end9, !dbg !8009

if.end9:                                          ; preds = %if.then7, %if.then4
  %15 = load %struct.device*, %struct.device** %errdev, align 8, !dbg !8010
  %tobool10 = icmp ne %struct.device* %15, null, !dbg !8010
  br i1 %tobool10, label %if.then11, label %if.end14, !dbg !8012

if.then11:                                        ; preds = %if.end9
  %16 = load %struct.device*, %struct.device** %errdev, align 8, !dbg !8013
  call void (%struct.device*, i8*, ...) @_dev_warn(%struct.device* %16, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.39, i64 0, i64 0)) #10, !dbg !8013
  %17 = load i8*, i8** %handle, align 8, !dbg !8015
  %call12 = call i32 @acpi_bus_online(i8* %17, i32 0, i8* null, i8** null) #9, !dbg !8016
  %18 = load i8*, i8** %handle, align 8, !dbg !8017
  %call13 = call i32 @acpi_walk_namespace(i32 0, i8* %18, i32 -1, i32 (i8*, i32, i8*, i8**)* @acpi_bus_online, i32 (i8*, i32, i8*, i8**)* null, i8* null, i8** null) #9, !dbg !8018
  store i32 -16, i32* %retval, align 4, !dbg !8019
  br label %return, !dbg !8019

if.end14:                                         ; preds = %if.end9
  br label %if.end15, !dbg !8020

if.end15:                                         ; preds = %if.end14, %if.end
  store i32 0, i32* %retval, align 4, !dbg !8021
  br label %return, !dbg !8021

return:                                           ; preds = %if.end15, %if.then11, %if.then
  %19 = load i32, i32* %retval, align 4, !dbg !8022
  ret i32 %19, !dbg !8022
}

; Function Attrs: noredzone
declare dso_local i32 @acpi_evaluate_lck(i8*, i32) #1

; Function Attrs: noredzone
declare dso_local i32 @acpi_evaluate_ej0(i8*) #1

; Function Attrs: noredzone
declare dso_local i32 @acpi_evaluate_integer(i8*, i8*, %struct.acpi_object_list*, i64*) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @acpi_bus_offline(i8* %handle, i32 %lvl, i8* %data, i8** %ret_p) #0 !dbg !8023 {
entry:
  %retval = alloca i32, align 4
  %handle.addr = alloca i8*, align 8
  %lvl.addr = alloca i32, align 4
  %data.addr = alloca i8*, align 8
  %ret_p.addr = alloca i8**, align 8
  %device = alloca %struct.acpi_device*, align 8
  %pn = alloca %struct.acpi_device_physical_node*, align 8
  %second_pass = alloca i8, align 1
  %status = alloca i32, align 4
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.acpi_device_physical_node*, align 8
  %ret = alloca i32, align 4
  %__mptr34 = alloca i8*, align 8
  %tmp39 = alloca %struct.acpi_device_physical_node*, align 8
  store i8* %handle, i8** %handle.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %handle.addr, metadata !8024, metadata !DIExpression()), !dbg !8025
  store i32 %lvl, i32* %lvl.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %lvl.addr, metadata !8026, metadata !DIExpression()), !dbg !8027
  store i8* %data, i8** %data.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %data.addr, metadata !8028, metadata !DIExpression()), !dbg !8029
  store i8** %ret_p, i8*** %ret_p.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %ret_p.addr, metadata !8030, metadata !DIExpression()), !dbg !8031
  call void @llvm.dbg.declare(metadata %struct.acpi_device** %device, metadata !8032, metadata !DIExpression()), !dbg !8033
  store %struct.acpi_device* null, %struct.acpi_device** %device, align 8, !dbg !8033
  call void @llvm.dbg.declare(metadata %struct.acpi_device_physical_node** %pn, metadata !8034, metadata !DIExpression()), !dbg !8035
  call void @llvm.dbg.declare(metadata i8* %second_pass, metadata !8036, metadata !DIExpression()), !dbg !8037
  %0 = load i8*, i8** %data.addr, align 8, !dbg !8038
  %tobool = icmp ne i8* %0, null, !dbg !8039
  %frombool = zext i1 %tobool to i8, !dbg !8037
  store i8 %frombool, i8* %second_pass, align 1, !dbg !8037
  call void @llvm.dbg.declare(metadata i32* %status, metadata !8040, metadata !DIExpression()), !dbg !8041
  store i32 0, i32* %status, align 4, !dbg !8041
  %1 = load i8*, i8** %handle.addr, align 8, !dbg !8042
  %call = call i32 @acpi_bus_get_device(i8* %1, %struct.acpi_device** %device) #9, !dbg !8044
  %tobool1 = icmp ne i32 %call, 0, !dbg !8044
  br i1 %tobool1, label %if.then, label %if.end, !dbg !8045

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !8046
  br label %return, !dbg !8046

if.end:                                           ; preds = %entry
  %2 = load %struct.acpi_device*, %struct.acpi_device** %device, align 8, !dbg !8047
  %handler = getelementptr inbounds %struct.acpi_device, %struct.acpi_device* %2, i32 0, i32 16, !dbg !8049
  %3 = load %struct.acpi_scan_handler*, %struct.acpi_scan_handler** %handler, align 8, !dbg !8049
  %tobool2 = icmp ne %struct.acpi_scan_handler* %3, null, !dbg !8047
  br i1 %tobool2, label %land.lhs.true, label %if.end5, !dbg !8050

land.lhs.true:                                    ; preds = %if.end
  %4 = load %struct.acpi_device*, %struct.acpi_device** %device, align 8, !dbg !8051
  %handler3 = getelementptr inbounds %struct.acpi_device, %struct.acpi_device* %4, i32 0, i32 16, !dbg !8052
  %5 = load %struct.acpi_scan_handler*, %struct.acpi_scan_handler** %handler3, align 8, !dbg !8052
  %hotplug = getelementptr inbounds %struct.acpi_scan_handler, %struct.acpi_scan_handler* %5, i32 0, i32 7, !dbg !8053
  %enabled = getelementptr inbounds %struct.acpi_hotplug_profile, %struct.acpi_hotplug_profile* %hotplug, i32 0, i32 3, !dbg !8054
  %bf.load = load i8, i8* %enabled, align 8, !dbg !8054
  %bf.clear = and i8 %bf.load, 1, !dbg !8054
  %bf.cast = trunc i8 %bf.clear to i1, !dbg !8054
  br i1 %bf.cast, label %if.end5, label %if.then4, !dbg !8055

if.then4:                                         ; preds = %land.lhs.true
  %6 = load %struct.acpi_device*, %struct.acpi_device** %device, align 8, !dbg !8056
  %dev = getelementptr inbounds %struct.acpi_device, %struct.acpi_device* %6, i32 0, i32 21, !dbg !8058
  %7 = bitcast %struct.device* %dev to i8*, !dbg !8059
  %8 = load i8**, i8*** %ret_p.addr, align 8, !dbg !8060
  store i8* %7, i8** %8, align 8, !dbg !8061
  store i32 15, i32* %retval, align 4, !dbg !8062
  br label %return, !dbg !8062

if.end5:                                          ; preds = %land.lhs.true, %if.end
  %9 = load %struct.acpi_device*, %struct.acpi_device** %device, align 8, !dbg !8063
  %physical_node_lock = getelementptr inbounds %struct.acpi_device, %struct.acpi_device* %9, i32 0, i32 25, !dbg !8064
  call void @mutex_lock(%struct.mutex* %physical_node_lock) #9, !dbg !8065
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !8066, metadata !DIExpression()), !dbg !8069
  %10 = load %struct.acpi_device*, %struct.acpi_device** %device, align 8, !dbg !8069
  %physical_node_list = getelementptr inbounds %struct.acpi_device, %struct.acpi_device* %10, i32 0, i32 24, !dbg !8069
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %physical_node_list, i32 0, i32 0, !dbg !8069
  %11 = load %struct.list_head*, %struct.list_head** %next, align 8, !dbg !8069
  %12 = bitcast %struct.list_head* %11 to i8*, !dbg !8069
  store i8* %12, i8** %__mptr, align 8, !dbg !8069
  br label %do.body, !dbg !8069

do.body:                                          ; preds = %if.end5
  br label %do.end, !dbg !8070

do.end:                                           ; preds = %do.body
  %13 = load i8*, i8** %__mptr, align 8, !dbg !8069
  %add.ptr = getelementptr i8, i8* %13, i64 -8, !dbg !8069
  %14 = bitcast i8* %add.ptr to %struct.acpi_device_physical_node*, !dbg !8069
  store %struct.acpi_device_physical_node* %14, %struct.acpi_device_physical_node** %tmp, align 8, !dbg !8070
  %15 = load %struct.acpi_device_physical_node*, %struct.acpi_device_physical_node** %tmp, align 8, !dbg !8069
  store %struct.acpi_device_physical_node* %15, %struct.acpi_device_physical_node** %pn, align 8, !dbg !8072
  br label %for.cond, !dbg !8072

for.cond:                                         ; preds = %do.end38, %do.end
  %16 = load %struct.acpi_device_physical_node*, %struct.acpi_device_physical_node** %pn, align 8, !dbg !8073
  %node = getelementptr inbounds %struct.acpi_device_physical_node, %struct.acpi_device_physical_node* %16, i32 0, i32 1, !dbg !8073
  %17 = load %struct.acpi_device*, %struct.acpi_device** %device, align 8, !dbg !8073
  %physical_node_list6 = getelementptr inbounds %struct.acpi_device, %struct.acpi_device* %17, i32 0, i32 24, !dbg !8073
  %cmp = icmp eq %struct.list_head* %node, %physical_node_list6, !dbg !8073
  %lnot = xor i1 %cmp, true, !dbg !8073
  br i1 %lnot, label %for.body, label %for.end, !dbg !8072

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !8075, metadata !DIExpression()), !dbg !8077
  %18 = load i8, i8* %second_pass, align 1, !dbg !8078
  %tobool7 = trunc i8 %18 to i1, !dbg !8078
  br i1 %tobool7, label %if.then8, label %if.else, !dbg !8080

if.then8:                                         ; preds = %for.body
  %19 = load %struct.acpi_device_physical_node*, %struct.acpi_device_physical_node** %pn, align 8, !dbg !8081
  %put_online = getelementptr inbounds %struct.acpi_device_physical_node, %struct.acpi_device_physical_node* %19, i32 0, i32 3, !dbg !8084
  %bf.load9 = load i8, i8* %put_online, align 8, !dbg !8084
  %bf.clear10 = and i8 %bf.load9, 1, !dbg !8084
  %bf.cast11 = trunc i8 %bf.clear10 to i1, !dbg !8084
  br i1 %bf.cast11, label %if.then12, label %if.end13, !dbg !8085

if.then12:                                        ; preds = %if.then8
  br label %for.inc, !dbg !8086

if.end13:                                         ; preds = %if.then8
  br label %if.end17, !dbg !8087

if.else:                                          ; preds = %for.body
  %20 = load %struct.acpi_device_physical_node*, %struct.acpi_device_physical_node** %pn, align 8, !dbg !8088
  %put_online14 = getelementptr inbounds %struct.acpi_device_physical_node, %struct.acpi_device_physical_node* %20, i32 0, i32 3, !dbg !8090
  %bf.load15 = load i8, i8* %put_online14, align 8, !dbg !8091
  %bf.clear16 = and i8 %bf.load15, -2, !dbg !8091
  store i8 %bf.clear16, i8* %put_online14, align 8, !dbg !8091
  br label %if.end17

if.end17:                                         ; preds = %if.else, %if.end13
  %21 = load %struct.acpi_device_physical_node*, %struct.acpi_device_physical_node** %pn, align 8, !dbg !8092
  %dev18 = getelementptr inbounds %struct.acpi_device_physical_node, %struct.acpi_device_physical_node* %21, i32 0, i32 2, !dbg !8093
  %22 = load %struct.device*, %struct.device** %dev18, align 8, !dbg !8093
  %call19 = call i32 @device_offline(%struct.device* %22) #9, !dbg !8094
  store i32 %call19, i32* %ret, align 4, !dbg !8095
  %23 = load i32, i32* %ret, align 4, !dbg !8096
  %cmp20 = icmp sge i32 %23, 0, !dbg !8098
  br i1 %cmp20, label %if.then21, label %if.else28, !dbg !8099

if.then21:                                        ; preds = %if.end17
  %24 = load i32, i32* %ret, align 4, !dbg !8100
  %tobool22 = icmp ne i32 %24, 0, !dbg !8102
  %lnot23 = xor i1 %tobool22, true, !dbg !8102
  %25 = load %struct.acpi_device_physical_node*, %struct.acpi_device_physical_node** %pn, align 8, !dbg !8103
  %put_online24 = getelementptr inbounds %struct.acpi_device_physical_node, %struct.acpi_device_physical_node* %25, i32 0, i32 3, !dbg !8104
  %26 = zext i1 %lnot23 to i8, !dbg !8105
  %bf.load25 = load i8, i8* %put_online24, align 8, !dbg !8105
  %bf.clear26 = and i8 %bf.load25, -2, !dbg !8105
  %bf.set = or i8 %bf.clear26, %26, !dbg !8105
  store i8 %bf.set, i8* %put_online24, align 8, !dbg !8105
  %tobool27 = trunc i8 %26 to i1, !dbg !8105
  br label %if.end33, !dbg !8106

if.else28:                                        ; preds = %if.end17
  %27 = load %struct.acpi_device_physical_node*, %struct.acpi_device_physical_node** %pn, align 8, !dbg !8107
  %dev29 = getelementptr inbounds %struct.acpi_device_physical_node, %struct.acpi_device_physical_node* %27, i32 0, i32 2, !dbg !8109
  %28 = load %struct.device*, %struct.device** %dev29, align 8, !dbg !8109
  %29 = bitcast %struct.device* %28 to i8*, !dbg !8107
  %30 = load i8**, i8*** %ret_p.addr, align 8, !dbg !8110
  store i8* %29, i8** %30, align 8, !dbg !8111
  %31 = load i8, i8* %second_pass, align 1, !dbg !8112
  %tobool30 = trunc i8 %31 to i1, !dbg !8112
  br i1 %tobool30, label %if.then31, label %if.end32, !dbg !8114

if.then31:                                        ; preds = %if.else28
  store i32 1, i32* %status, align 4, !dbg !8115
  br label %for.end, !dbg !8117

if.end32:                                         ; preds = %if.else28
  br label %if.end33

if.end33:                                         ; preds = %if.end32, %if.then21
  br label %for.inc, !dbg !8118

for.inc:                                          ; preds = %if.end33, %if.then12
  call void @llvm.dbg.declare(metadata i8** %__mptr34, metadata !8119, metadata !DIExpression()), !dbg !8121
  %32 = load %struct.acpi_device_physical_node*, %struct.acpi_device_physical_node** %pn, align 8, !dbg !8121
  %node35 = getelementptr inbounds %struct.acpi_device_physical_node, %struct.acpi_device_physical_node* %32, i32 0, i32 1, !dbg !8121
  %next36 = getelementptr inbounds %struct.list_head, %struct.list_head* %node35, i32 0, i32 0, !dbg !8121
  %33 = load %struct.list_head*, %struct.list_head** %next36, align 8, !dbg !8121
  %34 = bitcast %struct.list_head* %33 to i8*, !dbg !8121
  store i8* %34, i8** %__mptr34, align 8, !dbg !8121
  br label %do.body37, !dbg !8121

do.body37:                                        ; preds = %for.inc
  br label %do.end38, !dbg !8122

do.end38:                                         ; preds = %do.body37
  %35 = load i8*, i8** %__mptr34, align 8, !dbg !8121
  %add.ptr40 = getelementptr i8, i8* %35, i64 -8, !dbg !8121
  %36 = bitcast i8* %add.ptr40 to %struct.acpi_device_physical_node*, !dbg !8121
  store %struct.acpi_device_physical_node* %36, %struct.acpi_device_physical_node** %tmp39, align 8, !dbg !8122
  %37 = load %struct.acpi_device_physical_node*, %struct.acpi_device_physical_node** %tmp39, align 8, !dbg !8121
  store %struct.acpi_device_physical_node* %37, %struct.acpi_device_physical_node** %pn, align 8, !dbg !8073
  br label %for.cond, !dbg !8073, !llvm.loop !8124

for.end:                                          ; preds = %if.then31, %for.cond
  %38 = load %struct.acpi_device*, %struct.acpi_device** %device, align 8, !dbg !8126
  %physical_node_lock41 = getelementptr inbounds %struct.acpi_device, %struct.acpi_device* %38, i32 0, i32 25, !dbg !8127
  call void @mutex_unlock(%struct.mutex* %physical_node_lock41) #9, !dbg !8128
  %39 = load i32, i32* %status, align 4, !dbg !8129
  store i32 %39, i32* %retval, align 4, !dbg !8130
  br label %return, !dbg !8130

return:                                           ; preds = %for.end, %if.then4, %if.then
  %40 = load i32, i32* %retval, align 4, !dbg !8131
  ret i32 %40, !dbg !8131
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @acpi_bus_online(i8* %handle, i32 %lvl, i8* %data, i8** %ret_p) #0 !dbg !8132 {
entry:
  %retval = alloca i32, align 4
  %handle.addr = alloca i8*, align 8
  %lvl.addr = alloca i32, align 4
  %data.addr = alloca i8*, align 8
  %ret_p.addr = alloca i8**, align 8
  %device = alloca %struct.acpi_device*, align 8
  %pn = alloca %struct.acpi_device_physical_node*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.acpi_device_physical_node*, align 8
  %__mptr8 = alloca i8*, align 8
  %tmp13 = alloca %struct.acpi_device_physical_node*, align 8
  store i8* %handle, i8** %handle.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %handle.addr, metadata !8133, metadata !DIExpression()), !dbg !8134
  store i32 %lvl, i32* %lvl.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %lvl.addr, metadata !8135, metadata !DIExpression()), !dbg !8136
  store i8* %data, i8** %data.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %data.addr, metadata !8137, metadata !DIExpression()), !dbg !8138
  store i8** %ret_p, i8*** %ret_p.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %ret_p.addr, metadata !8139, metadata !DIExpression()), !dbg !8140
  call void @llvm.dbg.declare(metadata %struct.acpi_device** %device, metadata !8141, metadata !DIExpression()), !dbg !8142
  store %struct.acpi_device* null, %struct.acpi_device** %device, align 8, !dbg !8142
  call void @llvm.dbg.declare(metadata %struct.acpi_device_physical_node** %pn, metadata !8143, metadata !DIExpression()), !dbg !8144
  %0 = load i8*, i8** %handle.addr, align 8, !dbg !8145
  %call = call i32 @acpi_bus_get_device(i8* %0, %struct.acpi_device** %device) #9, !dbg !8147
  %tobool = icmp ne i32 %call, 0, !dbg !8147
  br i1 %tobool, label %if.then, label %if.end, !dbg !8148

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !8149
  br label %return, !dbg !8149

if.end:                                           ; preds = %entry
  %1 = load %struct.acpi_device*, %struct.acpi_device** %device, align 8, !dbg !8150
  %physical_node_lock = getelementptr inbounds %struct.acpi_device, %struct.acpi_device* %1, i32 0, i32 25, !dbg !8151
  call void @mutex_lock(%struct.mutex* %physical_node_lock) #9, !dbg !8152
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !8153, metadata !DIExpression()), !dbg !8156
  %2 = load %struct.acpi_device*, %struct.acpi_device** %device, align 8, !dbg !8156
  %physical_node_list = getelementptr inbounds %struct.acpi_device, %struct.acpi_device* %2, i32 0, i32 24, !dbg !8156
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %physical_node_list, i32 0, i32 0, !dbg !8156
  %3 = load %struct.list_head*, %struct.list_head** %next, align 8, !dbg !8156
  %4 = bitcast %struct.list_head* %3 to i8*, !dbg !8156
  store i8* %4, i8** %__mptr, align 8, !dbg !8156
  br label %do.body, !dbg !8156

do.body:                                          ; preds = %if.end
  br label %do.end, !dbg !8157

do.end:                                           ; preds = %do.body
  %5 = load i8*, i8** %__mptr, align 8, !dbg !8156
  %add.ptr = getelementptr i8, i8* %5, i64 -8, !dbg !8156
  %6 = bitcast i8* %add.ptr to %struct.acpi_device_physical_node*, !dbg !8156
  store %struct.acpi_device_physical_node* %6, %struct.acpi_device_physical_node** %tmp, align 8, !dbg !8157
  %7 = load %struct.acpi_device_physical_node*, %struct.acpi_device_physical_node** %tmp, align 8, !dbg !8156
  store %struct.acpi_device_physical_node* %7, %struct.acpi_device_physical_node** %pn, align 8, !dbg !8159
  br label %for.cond, !dbg !8159

for.cond:                                         ; preds = %do.end12, %do.end
  %8 = load %struct.acpi_device_physical_node*, %struct.acpi_device_physical_node** %pn, align 8, !dbg !8160
  %node = getelementptr inbounds %struct.acpi_device_physical_node, %struct.acpi_device_physical_node* %8, i32 0, i32 1, !dbg !8160
  %9 = load %struct.acpi_device*, %struct.acpi_device** %device, align 8, !dbg !8160
  %physical_node_list1 = getelementptr inbounds %struct.acpi_device, %struct.acpi_device* %9, i32 0, i32 24, !dbg !8160
  %cmp = icmp eq %struct.list_head* %node, %physical_node_list1, !dbg !8160
  %lnot = xor i1 %cmp, true, !dbg !8160
  br i1 %lnot, label %for.body, label %for.end, !dbg !8159

for.body:                                         ; preds = %for.cond
  %10 = load %struct.acpi_device_physical_node*, %struct.acpi_device_physical_node** %pn, align 8, !dbg !8162
  %put_online = getelementptr inbounds %struct.acpi_device_physical_node, %struct.acpi_device_physical_node* %10, i32 0, i32 3, !dbg !8164
  %bf.load = load i8, i8* %put_online, align 8, !dbg !8164
  %bf.clear = and i8 %bf.load, 1, !dbg !8164
  %bf.cast = trunc i8 %bf.clear to i1, !dbg !8164
  br i1 %bf.cast, label %if.then2, label %if.end7, !dbg !8165

if.then2:                                         ; preds = %for.body
  %11 = load %struct.acpi_device_physical_node*, %struct.acpi_device_physical_node** %pn, align 8, !dbg !8166
  %dev = getelementptr inbounds %struct.acpi_device_physical_node, %struct.acpi_device_physical_node* %11, i32 0, i32 2, !dbg !8168
  %12 = load %struct.device*, %struct.device** %dev, align 8, !dbg !8168
  %call3 = call i32 @device_online(%struct.device* %12) #9, !dbg !8169
  %13 = load %struct.acpi_device_physical_node*, %struct.acpi_device_physical_node** %pn, align 8, !dbg !8170
  %put_online4 = getelementptr inbounds %struct.acpi_device_physical_node, %struct.acpi_device_physical_node* %13, i32 0, i32 3, !dbg !8171
  %bf.load5 = load i8, i8* %put_online4, align 8, !dbg !8172
  %bf.clear6 = and i8 %bf.load5, -2, !dbg !8172
  store i8 %bf.clear6, i8* %put_online4, align 8, !dbg !8172
  br label %if.end7, !dbg !8173

if.end7:                                          ; preds = %if.then2, %for.body
  br label %for.inc, !dbg !8164

for.inc:                                          ; preds = %if.end7
  call void @llvm.dbg.declare(metadata i8** %__mptr8, metadata !8174, metadata !DIExpression()), !dbg !8176
  %14 = load %struct.acpi_device_physical_node*, %struct.acpi_device_physical_node** %pn, align 8, !dbg !8176
  %node9 = getelementptr inbounds %struct.acpi_device_physical_node, %struct.acpi_device_physical_node* %14, i32 0, i32 1, !dbg !8176
  %next10 = getelementptr inbounds %struct.list_head, %struct.list_head* %node9, i32 0, i32 0, !dbg !8176
  %15 = load %struct.list_head*, %struct.list_head** %next10, align 8, !dbg !8176
  %16 = bitcast %struct.list_head* %15 to i8*, !dbg !8176
  store i8* %16, i8** %__mptr8, align 8, !dbg !8176
  br label %do.body11, !dbg !8176

do.body11:                                        ; preds = %for.inc
  br label %do.end12, !dbg !8177

do.end12:                                         ; preds = %do.body11
  %17 = load i8*, i8** %__mptr8, align 8, !dbg !8176
  %add.ptr14 = getelementptr i8, i8* %17, i64 -8, !dbg !8176
  %18 = bitcast i8* %add.ptr14 to %struct.acpi_device_physical_node*, !dbg !8176
  store %struct.acpi_device_physical_node* %18, %struct.acpi_device_physical_node** %tmp13, align 8, !dbg !8177
  %19 = load %struct.acpi_device_physical_node*, %struct.acpi_device_physical_node** %tmp13, align 8, !dbg !8176
  store %struct.acpi_device_physical_node* %19, %struct.acpi_device_physical_node** %pn, align 8, !dbg !8160
  br label %for.cond, !dbg !8160, !llvm.loop !8179

for.end:                                          ; preds = %for.cond
  %20 = load %struct.acpi_device*, %struct.acpi_device** %device, align 8, !dbg !8181
  %physical_node_lock15 = getelementptr inbounds %struct.acpi_device, %struct.acpi_device* %20, i32 0, i32 25, !dbg !8182
  call void @mutex_unlock(%struct.mutex* %physical_node_lock15) #9, !dbg !8183
  store i32 0, i32* %retval, align 4, !dbg !8184
  br label %return, !dbg !8184

return:                                           ; preds = %for.end, %if.then
  %21 = load i32, i32* %retval, align 4, !dbg !8185
  ret i32 %21, !dbg !8185
}

; Function Attrs: noredzone
declare dso_local i32 @device_offline(%struct.device*) #1

; Function Attrs: noredzone
declare dso_local i32 @device_online(%struct.device*) #1

; Function Attrs: noredzone
declare dso_local i32 @acpi_get_data_full(i8*, void (i8*, i8*)*, i8**, void (i8*)*) #1

; Function Attrs: noredzone
declare dso_local %struct.device* @get_device(%struct.device*) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @acpi_device_del_work_fn(%struct.work_struct* %work_not_used) #0 !dbg !8186 {
entry:
  %work_not_used.addr = alloca %struct.work_struct*, align 8
  %adev = alloca %struct.acpi_device*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.acpi_device*, align 8
  store %struct.work_struct* %work_not_used, %struct.work_struct** %work_not_used.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.work_struct** %work_not_used.addr, metadata !8187, metadata !DIExpression()), !dbg !8188
  br label %for.cond, !dbg !8189

for.cond:                                         ; preds = %do.end, %entry
  call void @llvm.dbg.declare(metadata %struct.acpi_device** %adev, metadata !8190, metadata !DIExpression()), !dbg !8194
  call void @mutex_lock(%struct.mutex* @acpi_device_del_lock) #9, !dbg !8195
  %call = call i32 @list_empty(%struct.list_head* @acpi_device_del_list) #9, !dbg !8196
  %tobool = icmp ne i32 %call, 0, !dbg !8196
  br i1 %tobool, label %if.then, label %if.end, !dbg !8198

if.then:                                          ; preds = %for.cond
  call void @mutex_unlock(%struct.mutex* @acpi_device_del_lock) #9, !dbg !8199
  br label %for.end, !dbg !8201

if.end:                                           ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !8202, metadata !DIExpression()), !dbg !8204
  %0 = load %struct.list_head*, %struct.list_head** getelementptr inbounds (%struct.list_head, %struct.list_head* @acpi_device_del_list, i32 0, i32 0), align 8, !dbg !8204
  %1 = bitcast %struct.list_head* %0 to i8*, !dbg !8204
  store i8* %1, i8** %__mptr, align 8, !dbg !8204
  br label %do.body, !dbg !8204

do.body:                                          ; preds = %if.end
  br label %do.end, !dbg !8205

do.end:                                           ; preds = %do.body
  %2 = load i8*, i8** %__mptr, align 8, !dbg !8204
  %add.ptr = getelementptr i8, i8* %2, i64 -96, !dbg !8204
  %3 = bitcast i8* %add.ptr to %struct.acpi_device*, !dbg !8204
  store %struct.acpi_device* %3, %struct.acpi_device** %tmp, align 8, !dbg !8205
  %4 = load %struct.acpi_device*, %struct.acpi_device** %tmp, align 8, !dbg !8204
  store %struct.acpi_device* %4, %struct.acpi_device** %adev, align 8, !dbg !8207
  %5 = load %struct.acpi_device*, %struct.acpi_device** %adev, align 8, !dbg !8208
  %del_list = getelementptr inbounds %struct.acpi_device, %struct.acpi_device* %5, i32 0, i32 7, !dbg !8209
  call void @list_del(%struct.list_head* %del_list) #9, !dbg !8210
  call void @mutex_unlock(%struct.mutex* @acpi_device_del_lock) #9, !dbg !8211
  %6 = load %struct.acpi_device*, %struct.acpi_device** %adev, align 8, !dbg !8212
  %7 = bitcast %struct.acpi_device* %6 to i8*, !dbg !8212
  %call1 = call i32 @blocking_notifier_call_chain(%struct.blocking_notifier_head* @acpi_reconfig_chain, i64 1, i8* %7) #9, !dbg !8213
  %8 = load %struct.acpi_device*, %struct.acpi_device** %adev, align 8, !dbg !8214
  call void @acpi_device_del(%struct.acpi_device* %8) #9, !dbg !8215
  %9 = load %struct.acpi_device*, %struct.acpi_device** %adev, align 8, !dbg !8216
  %call2 = call i32 @acpi_power_transition(%struct.acpi_device* %9, i32 4) #9, !dbg !8217
  %10 = load %struct.acpi_device*, %struct.acpi_device** %adev, align 8, !dbg !8218
  %dev = getelementptr inbounds %struct.acpi_device, %struct.acpi_device* %10, i32 0, i32 21, !dbg !8219
  call void @put_device(%struct.device* %dev) #9, !dbg !8220
  br label %for.cond, !dbg !8221, !llvm.loop !8222

for.end:                                          ; preds = %if.then
  ret void, !dbg !8225
}

; Function Attrs: noredzone
declare dso_local zeroext i1 @acpi_queue_hotplug_work(%struct.work_struct*) #1

; Function Attrs: noredzone
declare dso_local i32 @blocking_notifier_call_chain(%struct.blocking_notifier_head*, i64, i8*) #1

; Function Attrs: noredzone
declare dso_local i32 @acpi_power_transition(%struct.acpi_device*, i32) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @kobject_name(%struct.kobject* %kobj) #0 !dbg !8226 {
entry:
  %kobj.addr = alloca %struct.kobject*, align 8
  store %struct.kobject* %kobj, %struct.kobject** %kobj.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.kobject** %kobj.addr, metadata !8231, metadata !DIExpression()), !dbg !8232
  %0 = load %struct.kobject*, %struct.kobject** %kobj.addr, align 8, !dbg !8233
  %name = getelementptr inbounds %struct.kobject, %struct.kobject* %0, i32 0, i32 0, !dbg !8234
  %1 = load i8*, i8** %name, align 8, !dbg !8234
  ret i8* %1, !dbg !8235
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @__list_del_entry(%struct.list_head* %entry1) #0 !dbg !8236 {
entry:
  %entry.addr = alloca %struct.list_head*, align 8
  store %struct.list_head* %entry1, %struct.list_head** %entry.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %entry.addr, metadata !8237, metadata !DIExpression()), !dbg !8238
  %0 = load %struct.list_head*, %struct.list_head** %entry.addr, align 8, !dbg !8239
  %call = call zeroext i1 @__list_del_entry_valid(%struct.list_head* %0) #9, !dbg !8241
  br i1 %call, label %if.end, label %if.then, !dbg !8242

if.then:                                          ; preds = %entry
  br label %return, !dbg !8243

if.end:                                           ; preds = %entry
  %1 = load %struct.list_head*, %struct.list_head** %entry.addr, align 8, !dbg !8244
  %prev = getelementptr inbounds %struct.list_head, %struct.list_head* %1, i32 0, i32 1, !dbg !8245
  %2 = load %struct.list_head*, %struct.list_head** %prev, align 8, !dbg !8245
  %3 = load %struct.list_head*, %struct.list_head** %entry.addr, align 8, !dbg !8246
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %3, i32 0, i32 0, !dbg !8247
  %4 = load %struct.list_head*, %struct.list_head** %next, align 8, !dbg !8247
  call void @__list_del(%struct.list_head* %2, %struct.list_head* %4) #9, !dbg !8248
  br label %return, !dbg !8249

return:                                           ; preds = %if.end, %if.then
  ret void, !dbg !8249
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @__list_del_entry_valid(%struct.list_head* %entry1) #0 !dbg !8250 {
entry:
  %entry.addr = alloca %struct.list_head*, align 8
  store %struct.list_head* %entry1, %struct.list_head** %entry.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %entry.addr, metadata !8253, metadata !DIExpression()), !dbg !8254
  ret i1 true, !dbg !8255
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @__list_del(%struct.list_head* %prev, %struct.list_head* %next) #0 !dbg !8256 {
entry:
  %prev.addr = alloca %struct.list_head*, align 8
  %next.addr = alloca %struct.list_head*, align 8
  store %struct.list_head* %prev, %struct.list_head** %prev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %prev.addr, metadata !8257, metadata !DIExpression()), !dbg !8258
  store %struct.list_head* %next, %struct.list_head** %next.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %next.addr, metadata !8259, metadata !DIExpression()), !dbg !8260
  %0 = load %struct.list_head*, %struct.list_head** %prev.addr, align 8, !dbg !8261
  %1 = load %struct.list_head*, %struct.list_head** %next.addr, align 8, !dbg !8262
  %prev1 = getelementptr inbounds %struct.list_head, %struct.list_head* %1, i32 0, i32 1, !dbg !8263
  store %struct.list_head* %0, %struct.list_head** %prev1, align 8, !dbg !8264
  br label %do.body, !dbg !8265

do.body:                                          ; preds = %entry
  br label %do.body2, !dbg !8266

do.body2:                                         ; preds = %do.body
  br label %do.end, !dbg !8268

do.end:                                           ; preds = %do.body2
  br label %do.body3, !dbg !8266

do.body3:                                         ; preds = %do.end
  %2 = load %struct.list_head*, %struct.list_head** %next.addr, align 8, !dbg !8270
  %3 = load %struct.list_head*, %struct.list_head** %prev.addr, align 8, !dbg !8270
  %next4 = getelementptr inbounds %struct.list_head, %struct.list_head* %3, i32 0, i32 0, !dbg !8270
  store volatile %struct.list_head* %2, %struct.list_head** %next4, align 8, !dbg !8270
  br label %do.end5, !dbg !8270

do.end5:                                          ; preds = %do.body3
  br label %do.end6, !dbg !8266

do.end6:                                          ; preds = %do.end5
  ret void, !dbg !8272
}

; Function Attrs: noredzone
declare dso_local i32 @acpi_get_name(i8*, i32, %struct.acpi_buffer*) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @acpi_add_id(%struct.acpi_device_pnp* %pnp, i8* %dev_id) #0 !dbg !8273 {
entry:
  %s.addr.i.i = alloca %struct.kmem_cache*, align 8
  call void @llvm.dbg.declare(metadata %struct.kmem_cache** %s.addr.i.i, metadata !5106, metadata !DIExpression()), !dbg !8276
  %flags.addr.i17.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i17.i, metadata !5116, metadata !DIExpression()), !dbg !8279
  %size.addr.i18.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i18.i, metadata !5118, metadata !DIExpression()), !dbg !8280
  %ret.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %ret.i.i, metadata !5120, metadata !DIExpression()), !dbg !8281
  %retval.i12.i = alloca i32, align 4
  %flags.addr.i13.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i13.i, metadata !5122, metadata !DIExpression()), !dbg !8282
  %retval.i.i = alloca i32, align 4
  %size.addr.i11.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i11.i, metadata !5128, metadata !DIExpression()), !dbg !8284
  %size.addr.i.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i.i, metadata !5134, metadata !DIExpression()), !dbg !8286
  %flags.addr.i.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i.i.i, metadata !5143, metadata !DIExpression()), !dbg !8289
  %order.addr.i.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %order.addr.i.i.i, metadata !5145, metadata !DIExpression()), !dbg !8290
  %size.addr.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i, metadata !5147, metadata !DIExpression()), !dbg !8291
  %flags.addr.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i.i, metadata !5149, metadata !DIExpression()), !dbg !8292
  %order.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %order.i.i, metadata !5151, metadata !DIExpression()), !dbg !8293
  %retval.i = alloca i8*, align 8
  %size.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i, metadata !5153, metadata !DIExpression()), !dbg !8294
  %flags.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i, metadata !5155, metadata !DIExpression()), !dbg !8295
  %index.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %index.i, metadata !5157, metadata !DIExpression()), !dbg !8296
  %pnp.addr = alloca %struct.acpi_device_pnp*, align 8
  %dev_id.addr = alloca i8*, align 8
  %id = alloca %struct.acpi_hardware_id*, align 8
  store %struct.acpi_device_pnp* %pnp, %struct.acpi_device_pnp** %pnp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.acpi_device_pnp** %pnp.addr, metadata !8297, metadata !DIExpression()), !dbg !8298
  store i8* %dev_id, i8** %dev_id.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %dev_id.addr, metadata !8299, metadata !DIExpression()), !dbg !8300
  call void @llvm.dbg.declare(metadata %struct.acpi_hardware_id** %id, metadata !8301, metadata !DIExpression()), !dbg !8302
  store i64 24, i64* %size.addr.i, align 8
  store i32 3264, i32* %flags.addr.i, align 4
  %0 = load i64, i64* %size.addr.i, align 8, !dbg !8303
  %1 = call i1 @llvm.is.constant.i64(i64 %0) #11, !dbg !8304
  br i1 %1, label %if.then.i, label %if.end9.i, !dbg !8305

if.then.i:                                        ; preds = %entry
  %2 = load i64, i64* %size.addr.i, align 8, !dbg !8306
  %cmp.i = icmp ugt i64 %2, 8192, !dbg !8307
  br i1 %cmp.i, label %if.then1.i, label %if.end.i, !dbg !8308

if.then1.i:                                       ; preds = %if.then.i
  %3 = load i64, i64* %size.addr.i, align 8, !dbg !8309
  %4 = load i32, i32* %flags.addr.i, align 4, !dbg !8310
  store i64 %3, i64* %size.addr.i.i, align 8
  store i32 %4, i32* %flags.addr.i.i, align 4
  %5 = load i64, i64* %size.addr.i.i, align 8, !dbg !8311
  %call.i.i = call i32 @get_order(i64 %5) #12, !dbg !8312
  store i32 %call.i.i, i32* %order.i.i, align 4, !dbg !8293
  %6 = load i64, i64* %size.addr.i.i, align 8, !dbg !8313
  %7 = load i32, i32* %flags.addr.i.i, align 4, !dbg !8314
  %8 = load i32, i32* %order.i.i, align 4, !dbg !8315
  store i64 %6, i64* %size.addr.i.i.i, align 8
  store i32 %7, i32* %flags.addr.i.i.i, align 4
  store i32 %8, i32* %order.addr.i.i.i, align 4
  %9 = load i64, i64* %size.addr.i.i.i, align 8, !dbg !8316
  %10 = load i32, i32* %flags.addr.i.i.i, align 4, !dbg !8317
  %11 = load i32, i32* %order.addr.i.i.i, align 4, !dbg !8318
  %call.i.i.i = call noalias i8* @kmalloc_order(i64 %9, i32 %10, i32 %11) #13, !dbg !8319
  %ptrint.i.i.i = ptrtoint i8* %call.i.i.i to i64, !dbg !8319
  %maskedptr.i.i.i = and i64 %ptrint.i.i.i, 4095, !dbg !8319
  %maskcond.i.i.i = icmp eq i64 %maskedptr.i.i.i, 0, !dbg !8319
  call void @llvm.assume(i1 %maskcond.i.i.i) #11, !dbg !8319
  store i8* %call.i.i.i, i8** %retval.i, align 8, !dbg !8320
  br label %kmalloc.exit, !dbg !8320

if.end.i:                                         ; preds = %if.then.i
  %12 = load i64, i64* %size.addr.i, align 8, !dbg !8321
  store i64 %12, i64* %size.addr.i11.i, align 8
  %13 = load i64, i64* %size.addr.i11.i, align 8, !dbg !8322
  %tobool.i.i = icmp ne i64 %13, 0, !dbg !8322
  br i1 %tobool.i.i, label %if.end.i.i, label %if.then.i.i, !dbg !8323

if.then.i.i:                                      ; preds = %if.end.i
  store i32 0, i32* %retval.i.i, align 4, !dbg !8324
  br label %kmalloc_index.exit.i, !dbg !8324

if.end.i.i:                                       ; preds = %if.end.i
  %14 = load i64, i64* %size.addr.i11.i, align 8, !dbg !8325
  %cmp.i.i = icmp ule i64 %14, 8, !dbg !8326
  br i1 %cmp.i.i, label %if.then1.i.i, label %if.end2.i.i, !dbg !8327

if.then1.i.i:                                     ; preds = %if.end.i.i
  store i32 3, i32* %retval.i.i, align 4, !dbg !8328
  br label %kmalloc_index.exit.i, !dbg !8328

if.end2.i.i:                                      ; preds = %if.end.i.i
  %15 = load i64, i64* %size.addr.i11.i, align 8, !dbg !8329
  %cmp3.i.i = icmp ugt i64 %15, 64, !dbg !8330
  br i1 %cmp3.i.i, label %land.lhs.true.i.i, label %if.end6.i.i, !dbg !8331

land.lhs.true.i.i:                                ; preds = %if.end2.i.i
  %16 = load i64, i64* %size.addr.i11.i, align 8, !dbg !8332
  %cmp4.i.i = icmp ule i64 %16, 96, !dbg !8333
  br i1 %cmp4.i.i, label %if.then5.i.i, label %if.end6.i.i, !dbg !8334

if.then5.i.i:                                     ; preds = %land.lhs.true.i.i
  store i32 1, i32* %retval.i.i, align 4, !dbg !8335
  br label %kmalloc_index.exit.i, !dbg !8335

if.end6.i.i:                                      ; preds = %land.lhs.true.i.i, %if.end2.i.i
  %17 = load i64, i64* %size.addr.i11.i, align 8, !dbg !8336
  %cmp7.i.i = icmp ugt i64 %17, 128, !dbg !8337
  br i1 %cmp7.i.i, label %land.lhs.true8.i.i, label %if.end11.i.i, !dbg !8338

land.lhs.true8.i.i:                               ; preds = %if.end6.i.i
  %18 = load i64, i64* %size.addr.i11.i, align 8, !dbg !8339
  %cmp9.i.i = icmp ule i64 %18, 192, !dbg !8340
  br i1 %cmp9.i.i, label %if.then10.i.i, label %if.end11.i.i, !dbg !8341

if.then10.i.i:                                    ; preds = %land.lhs.true8.i.i
  store i32 2, i32* %retval.i.i, align 4, !dbg !8342
  br label %kmalloc_index.exit.i, !dbg !8342

if.end11.i.i:                                     ; preds = %land.lhs.true8.i.i, %if.end6.i.i
  %19 = load i64, i64* %size.addr.i11.i, align 8, !dbg !8343
  %cmp12.i.i = icmp ule i64 %19, 8, !dbg !8344
  br i1 %cmp12.i.i, label %if.then13.i.i, label %if.end14.i.i, !dbg !8345

if.then13.i.i:                                    ; preds = %if.end11.i.i
  store i32 3, i32* %retval.i.i, align 4, !dbg !8346
  br label %kmalloc_index.exit.i, !dbg !8346

if.end14.i.i:                                     ; preds = %if.end11.i.i
  %20 = load i64, i64* %size.addr.i11.i, align 8, !dbg !8347
  %cmp15.i.i = icmp ule i64 %20, 16, !dbg !8348
  br i1 %cmp15.i.i, label %if.then16.i.i, label %if.end17.i.i, !dbg !8349

if.then16.i.i:                                    ; preds = %if.end14.i.i
  store i32 4, i32* %retval.i.i, align 4, !dbg !8350
  br label %kmalloc_index.exit.i, !dbg !8350

if.end17.i.i:                                     ; preds = %if.end14.i.i
  %21 = load i64, i64* %size.addr.i11.i, align 8, !dbg !8351
  %cmp18.i.i = icmp ule i64 %21, 32, !dbg !8352
  br i1 %cmp18.i.i, label %if.then19.i.i, label %if.end20.i.i, !dbg !8353

if.then19.i.i:                                    ; preds = %if.end17.i.i
  store i32 5, i32* %retval.i.i, align 4, !dbg !8354
  br label %kmalloc_index.exit.i, !dbg !8354

if.end20.i.i:                                     ; preds = %if.end17.i.i
  %22 = load i64, i64* %size.addr.i11.i, align 8, !dbg !8355
  %cmp21.i.i = icmp ule i64 %22, 64, !dbg !8356
  br i1 %cmp21.i.i, label %if.then22.i.i, label %if.end23.i.i, !dbg !8357

if.then22.i.i:                                    ; preds = %if.end20.i.i
  store i32 6, i32* %retval.i.i, align 4, !dbg !8358
  br label %kmalloc_index.exit.i, !dbg !8358

if.end23.i.i:                                     ; preds = %if.end20.i.i
  %23 = load i64, i64* %size.addr.i11.i, align 8, !dbg !8359
  %cmp24.i.i = icmp ule i64 %23, 128, !dbg !8360
  br i1 %cmp24.i.i, label %if.then25.i.i, label %if.end26.i.i, !dbg !8361

if.then25.i.i:                                    ; preds = %if.end23.i.i
  store i32 7, i32* %retval.i.i, align 4, !dbg !8362
  br label %kmalloc_index.exit.i, !dbg !8362

if.end26.i.i:                                     ; preds = %if.end23.i.i
  %24 = load i64, i64* %size.addr.i11.i, align 8, !dbg !8363
  %cmp27.i.i = icmp ule i64 %24, 256, !dbg !8364
  br i1 %cmp27.i.i, label %if.then28.i.i, label %if.end29.i.i, !dbg !8365

if.then28.i.i:                                    ; preds = %if.end26.i.i
  store i32 8, i32* %retval.i.i, align 4, !dbg !8366
  br label %kmalloc_index.exit.i, !dbg !8366

if.end29.i.i:                                     ; preds = %if.end26.i.i
  %25 = load i64, i64* %size.addr.i11.i, align 8, !dbg !8367
  %cmp30.i.i = icmp ule i64 %25, 512, !dbg !8368
  br i1 %cmp30.i.i, label %if.then31.i.i, label %if.end32.i.i, !dbg !8369

if.then31.i.i:                                    ; preds = %if.end29.i.i
  store i32 9, i32* %retval.i.i, align 4, !dbg !8370
  br label %kmalloc_index.exit.i, !dbg !8370

if.end32.i.i:                                     ; preds = %if.end29.i.i
  %26 = load i64, i64* %size.addr.i11.i, align 8, !dbg !8371
  %cmp33.i.i = icmp ule i64 %26, 1024, !dbg !8372
  br i1 %cmp33.i.i, label %if.then34.i.i, label %if.end35.i.i, !dbg !8373

if.then34.i.i:                                    ; preds = %if.end32.i.i
  store i32 10, i32* %retval.i.i, align 4, !dbg !8374
  br label %kmalloc_index.exit.i, !dbg !8374

if.end35.i.i:                                     ; preds = %if.end32.i.i
  %27 = load i64, i64* %size.addr.i11.i, align 8, !dbg !8375
  %cmp36.i.i = icmp ule i64 %27, 2048, !dbg !8376
  br i1 %cmp36.i.i, label %if.then37.i.i, label %if.end38.i.i, !dbg !8377

if.then37.i.i:                                    ; preds = %if.end35.i.i
  store i32 11, i32* %retval.i.i, align 4, !dbg !8378
  br label %kmalloc_index.exit.i, !dbg !8378

if.end38.i.i:                                     ; preds = %if.end35.i.i
  %28 = load i64, i64* %size.addr.i11.i, align 8, !dbg !8379
  %cmp39.i.i = icmp ule i64 %28, 4096, !dbg !8380
  br i1 %cmp39.i.i, label %if.then40.i.i, label %if.end41.i.i, !dbg !8381

if.then40.i.i:                                    ; preds = %if.end38.i.i
  store i32 12, i32* %retval.i.i, align 4, !dbg !8382
  br label %kmalloc_index.exit.i, !dbg !8382

if.end41.i.i:                                     ; preds = %if.end38.i.i
  %29 = load i64, i64* %size.addr.i11.i, align 8, !dbg !8383
  %cmp42.i.i = icmp ule i64 %29, 8192, !dbg !8384
  br i1 %cmp42.i.i, label %if.then43.i.i, label %if.end44.i.i, !dbg !8385

if.then43.i.i:                                    ; preds = %if.end41.i.i
  store i32 13, i32* %retval.i.i, align 4, !dbg !8386
  br label %kmalloc_index.exit.i, !dbg !8386

if.end44.i.i:                                     ; preds = %if.end41.i.i
  %30 = load i64, i64* %size.addr.i11.i, align 8, !dbg !8387
  %cmp45.i.i = icmp ule i64 %30, 16384, !dbg !8388
  br i1 %cmp45.i.i, label %if.then46.i.i, label %if.end47.i.i, !dbg !8389

if.then46.i.i:                                    ; preds = %if.end44.i.i
  store i32 14, i32* %retval.i.i, align 4, !dbg !8390
  br label %kmalloc_index.exit.i, !dbg !8390

if.end47.i.i:                                     ; preds = %if.end44.i.i
  %31 = load i64, i64* %size.addr.i11.i, align 8, !dbg !8391
  %cmp48.i.i = icmp ule i64 %31, 32768, !dbg !8392
  br i1 %cmp48.i.i, label %if.then49.i.i, label %if.end50.i.i, !dbg !8393

if.then49.i.i:                                    ; preds = %if.end47.i.i
  store i32 15, i32* %retval.i.i, align 4, !dbg !8394
  br label %kmalloc_index.exit.i, !dbg !8394

if.end50.i.i:                                     ; preds = %if.end47.i.i
  %32 = load i64, i64* %size.addr.i11.i, align 8, !dbg !8395
  %cmp51.i.i = icmp ule i64 %32, 65536, !dbg !8396
  br i1 %cmp51.i.i, label %if.then52.i.i, label %if.end53.i.i, !dbg !8397

if.then52.i.i:                                    ; preds = %if.end50.i.i
  store i32 16, i32* %retval.i.i, align 4, !dbg !8398
  br label %kmalloc_index.exit.i, !dbg !8398

if.end53.i.i:                                     ; preds = %if.end50.i.i
  %33 = load i64, i64* %size.addr.i11.i, align 8, !dbg !8399
  %cmp54.i.i = icmp ule i64 %33, 131072, !dbg !8400
  br i1 %cmp54.i.i, label %if.then55.i.i, label %if.end56.i.i, !dbg !8401

if.then55.i.i:                                    ; preds = %if.end53.i.i
  store i32 17, i32* %retval.i.i, align 4, !dbg !8402
  br label %kmalloc_index.exit.i, !dbg !8402

if.end56.i.i:                                     ; preds = %if.end53.i.i
  %34 = load i64, i64* %size.addr.i11.i, align 8, !dbg !8403
  %cmp57.i.i = icmp ule i64 %34, 262144, !dbg !8404
  br i1 %cmp57.i.i, label %if.then58.i.i, label %if.end59.i.i, !dbg !8405

if.then58.i.i:                                    ; preds = %if.end56.i.i
  store i32 18, i32* %retval.i.i, align 4, !dbg !8406
  br label %kmalloc_index.exit.i, !dbg !8406

if.end59.i.i:                                     ; preds = %if.end56.i.i
  %35 = load i64, i64* %size.addr.i11.i, align 8, !dbg !8407
  %cmp60.i.i = icmp ule i64 %35, 524288, !dbg !8408
  br i1 %cmp60.i.i, label %if.then61.i.i, label %if.end62.i.i, !dbg !8409

if.then61.i.i:                                    ; preds = %if.end59.i.i
  store i32 19, i32* %retval.i.i, align 4, !dbg !8410
  br label %kmalloc_index.exit.i, !dbg !8410

if.end62.i.i:                                     ; preds = %if.end59.i.i
  %36 = load i64, i64* %size.addr.i11.i, align 8, !dbg !8411
  %cmp63.i.i = icmp ule i64 %36, 1048576, !dbg !8412
  br i1 %cmp63.i.i, label %if.then64.i.i, label %if.end65.i.i, !dbg !8413

if.then64.i.i:                                    ; preds = %if.end62.i.i
  store i32 20, i32* %retval.i.i, align 4, !dbg !8414
  br label %kmalloc_index.exit.i, !dbg !8414

if.end65.i.i:                                     ; preds = %if.end62.i.i
  %37 = load i64, i64* %size.addr.i11.i, align 8, !dbg !8415
  %cmp66.i.i = icmp ule i64 %37, 2097152, !dbg !8416
  br i1 %cmp66.i.i, label %if.then67.i.i, label %if.end68.i.i, !dbg !8417

if.then67.i.i:                                    ; preds = %if.end65.i.i
  store i32 21, i32* %retval.i.i, align 4, !dbg !8418
  br label %kmalloc_index.exit.i, !dbg !8418

if.end68.i.i:                                     ; preds = %if.end65.i.i
  %38 = load i64, i64* %size.addr.i11.i, align 8, !dbg !8419
  %cmp69.i.i = icmp ule i64 %38, 4194304, !dbg !8420
  br i1 %cmp69.i.i, label %if.then70.i.i, label %if.end71.i.i, !dbg !8421

if.then70.i.i:                                    ; preds = %if.end68.i.i
  store i32 22, i32* %retval.i.i, align 4, !dbg !8422
  br label %kmalloc_index.exit.i, !dbg !8422

if.end71.i.i:                                     ; preds = %if.end68.i.i
  %39 = load i64, i64* %size.addr.i11.i, align 8, !dbg !8423
  %cmp72.i.i = icmp ule i64 %39, 8388608, !dbg !8424
  br i1 %cmp72.i.i, label %if.then73.i.i, label %if.end74.i.i, !dbg !8425

if.then73.i.i:                                    ; preds = %if.end71.i.i
  store i32 23, i32* %retval.i.i, align 4, !dbg !8426
  br label %kmalloc_index.exit.i, !dbg !8426

if.end74.i.i:                                     ; preds = %if.end71.i.i
  %40 = load i64, i64* %size.addr.i11.i, align 8, !dbg !8427
  %cmp75.i.i = icmp ule i64 %40, 16777216, !dbg !8428
  br i1 %cmp75.i.i, label %if.then76.i.i, label %if.end77.i.i, !dbg !8429

if.then76.i.i:                                    ; preds = %if.end74.i.i
  store i32 24, i32* %retval.i.i, align 4, !dbg !8430
  br label %kmalloc_index.exit.i, !dbg !8430

if.end77.i.i:                                     ; preds = %if.end74.i.i
  %41 = load i64, i64* %size.addr.i11.i, align 8, !dbg !8431
  %cmp78.i.i = icmp ule i64 %41, 33554432, !dbg !8432
  br i1 %cmp78.i.i, label %if.then79.i.i, label %if.end80.i.i, !dbg !8433

if.then79.i.i:                                    ; preds = %if.end77.i.i
  store i32 25, i32* %retval.i.i, align 4, !dbg !8434
  br label %kmalloc_index.exit.i, !dbg !8434

if.end80.i.i:                                     ; preds = %if.end77.i.i
  %42 = load i64, i64* %size.addr.i11.i, align 8, !dbg !8435
  %cmp81.i.i = icmp ule i64 %42, 67108864, !dbg !8436
  br i1 %cmp81.i.i, label %if.then82.i.i, label %if.end83.i.i, !dbg !8437

if.then82.i.i:                                    ; preds = %if.end80.i.i
  store i32 26, i32* %retval.i.i, align 4, !dbg !8438
  br label %kmalloc_index.exit.i, !dbg !8438

if.end83.i.i:                                     ; preds = %if.end80.i.i
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.90, i64 0, i64 0), i32 382, i32 0, i64 12) #11, !dbg !8439, !srcloc !5333
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.unreachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 105) #11, !dbg !8440, !srcloc !5337
  unreachable, !dbg !8441

kmalloc_index.exit.i:                             ; preds = %if.then82.i.i, %if.then79.i.i, %if.then76.i.i, %if.then73.i.i, %if.then70.i.i, %if.then67.i.i, %if.then64.i.i, %if.then61.i.i, %if.then58.i.i, %if.then55.i.i, %if.then52.i.i, %if.then49.i.i, %if.then46.i.i, %if.then43.i.i, %if.then40.i.i, %if.then37.i.i, %if.then34.i.i, %if.then31.i.i, %if.then28.i.i, %if.then25.i.i, %if.then22.i.i, %if.then19.i.i, %if.then16.i.i, %if.then13.i.i, %if.then10.i.i, %if.then5.i.i, %if.then1.i.i, %if.then.i.i
  %43 = load i32, i32* %retval.i.i, align 4, !dbg !8442
  store i32 %43, i32* %index.i, align 4, !dbg !8443
  %44 = load i32, i32* %index.i, align 4, !dbg !8444
  %tobool.i = icmp ne i32 %44, 0, !dbg !8444
  br i1 %tobool.i, label %if.end4.i, label %if.then3.i, !dbg !8445

if.then3.i:                                       ; preds = %kmalloc_index.exit.i
  store i8* inttoptr (i64 16 to i8*), i8** %retval.i, align 8, !dbg !8446
  br label %kmalloc.exit, !dbg !8446

if.end4.i:                                        ; preds = %kmalloc_index.exit.i
  %45 = load i32, i32* %flags.addr.i, align 4, !dbg !8447
  store i32 %45, i32* %flags.addr.i13.i, align 4
  %46 = load i32, i32* %flags.addr.i13.i, align 4, !dbg !8448
  %and.i.i = and i32 %46, 17, !dbg !8448
  %cmp.i14.i = icmp eq i32 %and.i.i, 0, !dbg !8448
  %lnot.i.i = xor i1 %cmp.i14.i, true, !dbg !8448
  %lnot.ext.i.i = zext i1 %cmp.i14.i to i32, !dbg !8448
  %conv.i.i = sext i32 %lnot.ext.i.i to i64, !dbg !8448
  br i1 %cmp.i14.i, label %if.then.i15.i, label %if.end.i16.i, !dbg !8449

if.then.i15.i:                                    ; preds = %if.end4.i
  store i32 0, i32* %retval.i12.i, align 4, !dbg !8450
  br label %kmalloc_type.exit.i, !dbg !8450

if.end.i16.i:                                     ; preds = %if.end4.i
  %47 = load i32, i32* %flags.addr.i13.i, align 4, !dbg !8451
  %and2.i.i = and i32 %47, 1, !dbg !8452
  %tobool3.i.i = icmp ne i32 %and2.i.i, 0, !dbg !8451
  %48 = zext i1 %tobool3.i.i to i64, !dbg !8451
  %cond.i.i = select i1 %tobool3.i.i, i32 2, i32 1, !dbg !8451
  store i32 %cond.i.i, i32* %retval.i12.i, align 4, !dbg !8453
  br label %kmalloc_type.exit.i, !dbg !8453

kmalloc_type.exit.i:                              ; preds = %if.end.i16.i, %if.then.i15.i
  %49 = load i32, i32* %retval.i12.i, align 4, !dbg !8454
  %idxprom.i = zext i32 %49 to i64, !dbg !8455
  %arrayidx.i = getelementptr [3 x [14 x %struct.kmem_cache*]], [3 x [14 x %struct.kmem_cache*]]* @kmalloc_caches, i64 0, i64 %idxprom.i, !dbg !8455
  %50 = load i32, i32* %index.i, align 4, !dbg !8456
  %idxprom6.i = zext i32 %50 to i64, !dbg !8455
  %arrayidx7.i = getelementptr [14 x %struct.kmem_cache*], [14 x %struct.kmem_cache*]* %arrayidx.i, i64 0, i64 %idxprom6.i, !dbg !8455
  %51 = load %struct.kmem_cache*, %struct.kmem_cache** %arrayidx7.i, align 8, !dbg !8455
  %52 = load i32, i32* %flags.addr.i, align 4, !dbg !8457
  %53 = load i64, i64* %size.addr.i, align 8, !dbg !8458
  store %struct.kmem_cache* %51, %struct.kmem_cache** %s.addr.i.i, align 8
  store i32 %52, i32* %flags.addr.i17.i, align 4
  store i64 %53, i64* %size.addr.i18.i, align 8
  %54 = load %struct.kmem_cache*, %struct.kmem_cache** %s.addr.i.i, align 8, !dbg !8459
  %55 = load i32, i32* %flags.addr.i17.i, align 4, !dbg !8460
  %call.i19.i = call noalias i8* @kmem_cache_alloc(%struct.kmem_cache* %54, i32 %55) #13, !dbg !8461
  %ptrint.i.i = ptrtoint i8* %call.i19.i to i64, !dbg !8461
  %maskedptr.i.i = and i64 %ptrint.i.i, 7, !dbg !8461
  %maskcond.i.i = icmp eq i64 %maskedptr.i.i, 0, !dbg !8461
  call void @llvm.assume(i1 %maskcond.i.i) #11, !dbg !8461
  store i8* %call.i19.i, i8** %ret.i.i, align 8, !dbg !8281
  %56 = load %struct.kmem_cache*, %struct.kmem_cache** %s.addr.i.i, align 8, !dbg !8462
  %57 = load i8*, i8** %ret.i.i, align 8, !dbg !8463
  %58 = load i64, i64* %size.addr.i18.i, align 8, !dbg !8464
  %59 = load i32, i32* %flags.addr.i17.i, align 4, !dbg !8465
  %call1.i.i = call i8* @kasan_kmalloc(%struct.kmem_cache* %56, i8* %57, i64 %58, i32 %59) #13, !dbg !8466
  store i8* %call1.i.i, i8** %ret.i.i, align 8, !dbg !8467
  %60 = load i8*, i8** %ret.i.i, align 8, !dbg !8468
  store i8* %60, i8** %retval.i, align 8, !dbg !8469
  br label %kmalloc.exit, !dbg !8469

if.end9.i:                                        ; preds = %entry
  %61 = load i64, i64* %size.addr.i, align 8, !dbg !8470
  %62 = load i32, i32* %flags.addr.i, align 4, !dbg !8471
  %call10.i = call noalias i8* @__kmalloc(i64 %61, i32 %62) #13, !dbg !8472
  %ptrint.i = ptrtoint i8* %call10.i to i64, !dbg !8472
  %maskedptr.i = and i64 %ptrint.i, 7, !dbg !8472
  %maskcond.i = icmp eq i64 %maskedptr.i, 0, !dbg !8472
  call void @llvm.assume(i1 %maskcond.i) #11, !dbg !8472
  store i8* %call10.i, i8** %retval.i, align 8, !dbg !8473
  br label %kmalloc.exit, !dbg !8473

kmalloc.exit:                                     ; preds = %if.then1.i, %if.then3.i, %kmalloc_type.exit.i, %if.end9.i
  %63 = load i8*, i8** %retval.i, align 8, !dbg !8474
  %64 = bitcast i8* %63 to %struct.acpi_hardware_id*, !dbg !8475
  store %struct.acpi_hardware_id* %64, %struct.acpi_hardware_id** %id, align 8, !dbg !8476
  %65 = load %struct.acpi_hardware_id*, %struct.acpi_hardware_id** %id, align 8, !dbg !8477
  %tobool = icmp ne %struct.acpi_hardware_id* %65, null, !dbg !8477
  br i1 %tobool, label %if.end, label %if.then, !dbg !8479

if.then:                                          ; preds = %kmalloc.exit
  br label %return, !dbg !8480

if.end:                                           ; preds = %kmalloc.exit
  %66 = load i8*, i8** %dev_id.addr, align 8, !dbg !8481
  %call1 = call i8* @kstrdup_const(i8* %66, i32 3264) #9, !dbg !8482
  %67 = load %struct.acpi_hardware_id*, %struct.acpi_hardware_id** %id, align 8, !dbg !8483
  %id2 = getelementptr inbounds %struct.acpi_hardware_id, %struct.acpi_hardware_id* %67, i32 0, i32 1, !dbg !8484
  store i8* %call1, i8** %id2, align 8, !dbg !8485
  %68 = load %struct.acpi_hardware_id*, %struct.acpi_hardware_id** %id, align 8, !dbg !8486
  %id3 = getelementptr inbounds %struct.acpi_hardware_id, %struct.acpi_hardware_id* %68, i32 0, i32 1, !dbg !8488
  %69 = load i8*, i8** %id3, align 8, !dbg !8488
  %tobool4 = icmp ne i8* %69, null, !dbg !8486
  br i1 %tobool4, label %if.end6, label %if.then5, !dbg !8489

if.then5:                                         ; preds = %if.end
  %70 = load %struct.acpi_hardware_id*, %struct.acpi_hardware_id** %id, align 8, !dbg !8490
  %71 = bitcast %struct.acpi_hardware_id* %70 to i8*, !dbg !8490
  call void @kfree(i8* %71) #9, !dbg !8492
  br label %return, !dbg !8493

if.end6:                                          ; preds = %if.end
  %72 = load %struct.acpi_hardware_id*, %struct.acpi_hardware_id** %id, align 8, !dbg !8494
  %list = getelementptr inbounds %struct.acpi_hardware_id, %struct.acpi_hardware_id* %72, i32 0, i32 0, !dbg !8495
  %73 = load %struct.acpi_device_pnp*, %struct.acpi_device_pnp** %pnp.addr, align 8, !dbg !8496
  %ids = getelementptr inbounds %struct.acpi_device_pnp, %struct.acpi_device_pnp* %73, i32 0, i32 4, !dbg !8497
  call void @list_add_tail(%struct.list_head* %list, %struct.list_head* %ids) #9, !dbg !8498
  %74 = load %struct.acpi_device_pnp*, %struct.acpi_device_pnp** %pnp.addr, align 8, !dbg !8499
  %type = getelementptr inbounds %struct.acpi_device_pnp, %struct.acpi_device_pnp* %74, i32 0, i32 1, !dbg !8500
  %75 = bitcast %struct.acpi_pnp_type* %type to i32*, !dbg !8501
  %bf.load = load i32, i32* %75, align 8, !dbg !8502
  %bf.clear = and i32 %bf.load, -2, !dbg !8502
  %bf.set = or i32 %bf.clear, 1, !dbg !8502
  store i32 %bf.set, i32* %75, align 8, !dbg !8502
  br label %return, !dbg !8503

return:                                           ; preds = %if.end6, %if.then5, %if.then
  ret void, !dbg !8503
}

; Function Attrs: noredzone
declare dso_local i32 @acpi_get_object_info(i8*, %struct.acpi_device_info**) #1

; Function Attrs: noredzone
declare dso_local noalias i8* @kstrdup(i8*, i32) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @acpi_ibm_smbus_match(i8* %handle) #0 !dbg !8504 {
entry:
  %retval = alloca i1, align 1
  %handle.addr = alloca i8*, align 8
  %node_name = alloca [5 x i8], align 1
  %path = alloca %struct.acpi_buffer, align 8
  store i8* %handle, i8** %handle.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %handle.addr, metadata !8505, metadata !DIExpression()), !dbg !8506
  call void @llvm.dbg.declare(metadata [5 x i8]* %node_name, metadata !8507, metadata !DIExpression()), !dbg !8508
  call void @llvm.dbg.declare(metadata %struct.acpi_buffer* %path, metadata !8509, metadata !DIExpression()), !dbg !8510
  %length = getelementptr inbounds %struct.acpi_buffer, %struct.acpi_buffer* %path, i32 0, i32 0, !dbg !8511
  store i64 5, i64* %length, align 8, !dbg !8511
  %pointer = getelementptr inbounds %struct.acpi_buffer, %struct.acpi_buffer* %path, i32 0, i32 1, !dbg !8511
  %arraydecay = getelementptr inbounds [5 x i8], [5 x i8]* %node_name, i64 0, i64 0, !dbg !8512
  store i8* %arraydecay, i8** %pointer, align 8, !dbg !8511
  %call = call i32 @dmi_name_in_vendors(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.62, i64 0, i64 0)) #9, !dbg !8513
  %tobool = icmp ne i32 %call, 0, !dbg !8513
  br i1 %tobool, label %if.end, label %if.then, !dbg !8515

if.then:                                          ; preds = %entry
  store i1 false, i1* %retval, align 1, !dbg !8516
  br label %return, !dbg !8516

if.end:                                           ; preds = %entry
  %0 = load i8*, i8** %handle.addr, align 8, !dbg !8517
  %call1 = call i32 @acpi_get_name(i8* %0, i32 1, %struct.acpi_buffer* %path) #9, !dbg !8517
  %tobool2 = icmp ne i32 %call1, 0, !dbg !8517
  br i1 %tobool2, label %if.then6, label %lor.lhs.false, !dbg !8519

lor.lhs.false:                                    ; preds = %if.end
  %pointer3 = getelementptr inbounds %struct.acpi_buffer, %struct.acpi_buffer* %path, i32 0, i32 1, !dbg !8520
  %1 = load i8*, i8** %pointer3, align 8, !dbg !8520
  %call4 = call i32 @strcmp(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.63, i64 0, i64 0), i8* %1) #9, !dbg !8521
  %tobool5 = icmp ne i32 %call4, 0, !dbg !8521
  br i1 %tobool5, label %if.then6, label %if.end7, !dbg !8522

if.then6:                                         ; preds = %lor.lhs.false, %if.end
  store i1 false, i1* %retval, align 1, !dbg !8523
  br label %return, !dbg !8523

if.end7:                                          ; preds = %lor.lhs.false
  %2 = load i8*, i8** %handle.addr, align 8, !dbg !8524
  %call8 = call zeroext i1 @acpi_has_method(i8* %2, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.64, i64 0, i64 0)) #9, !dbg !8526
  br i1 %call8, label %land.lhs.true, label %if.end13, !dbg !8527

land.lhs.true:                                    ; preds = %if.end7
  %3 = load i8*, i8** %handle.addr, align 8, !dbg !8528
  %call9 = call zeroext i1 @acpi_has_method(i8* %3, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.65, i64 0, i64 0)) #9, !dbg !8529
  br i1 %call9, label %land.lhs.true10, label %if.end13, !dbg !8530

land.lhs.true10:                                  ; preds = %land.lhs.true
  %4 = load i8*, i8** %handle.addr, align 8, !dbg !8531
  %call11 = call zeroext i1 @acpi_has_method(i8* %4, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.66, i64 0, i64 0)) #9, !dbg !8532
  br i1 %call11, label %if.then12, label %if.end13, !dbg !8533

if.then12:                                        ; preds = %land.lhs.true10
  store i1 true, i1* %retval, align 1, !dbg !8534
  br label %return, !dbg !8534

if.end13:                                         ; preds = %land.lhs.true10, %land.lhs.true, %if.end7
  store i1 false, i1* %retval, align 1, !dbg !8535
  br label %return, !dbg !8535

return:                                           ; preds = %if.end13, %if.then12, %if.then6, %if.then
  %5 = load i1, i1* %retval, align 1, !dbg !8536
  ret i1 %5, !dbg !8536
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @acpi_object_is_system_bus(i8* %handle) #0 !dbg !8537 {
entry:
  %retval = alloca i1, align 1
  %handle.addr = alloca i8*, align 8
  %tmp = alloca i8*, align 8
  store i8* %handle, i8** %handle.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %handle.addr, metadata !8538, metadata !DIExpression()), !dbg !8539
  call void @llvm.dbg.declare(metadata i8** %tmp, metadata !8540, metadata !DIExpression()), !dbg !8541
  %call = call i32 @acpi_get_handle(i8* null, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.67, i64 0, i64 0), i8** %tmp) #9, !dbg !8542
  %tobool = icmp ne i32 %call, 0, !dbg !8542
  br i1 %tobool, label %if.end, label %land.lhs.true, !dbg !8544

land.lhs.true:                                    ; preds = %entry
  %0 = load i8*, i8** %tmp, align 8, !dbg !8545
  %1 = load i8*, i8** %handle.addr, align 8, !dbg !8546
  %cmp = icmp eq i8* %0, %1, !dbg !8547
  br i1 %cmp, label %if.then, label %if.end, !dbg !8548

if.then:                                          ; preds = %land.lhs.true
  store i1 true, i1* %retval, align 1, !dbg !8549
  br label %return, !dbg !8549

if.end:                                           ; preds = %land.lhs.true, %entry
  %call1 = call i32 @acpi_get_handle(i8* null, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.68, i64 0, i64 0), i8** %tmp) #9, !dbg !8550
  %tobool2 = icmp ne i32 %call1, 0, !dbg !8550
  br i1 %tobool2, label %if.end6, label %land.lhs.true3, !dbg !8552

land.lhs.true3:                                   ; preds = %if.end
  %2 = load i8*, i8** %tmp, align 8, !dbg !8553
  %3 = load i8*, i8** %handle.addr, align 8, !dbg !8554
  %cmp4 = icmp eq i8* %2, %3, !dbg !8555
  br i1 %cmp4, label %if.then5, label %if.end6, !dbg !8556

if.then5:                                         ; preds = %land.lhs.true3
  store i1 true, i1* %retval, align 1, !dbg !8557
  br label %return, !dbg !8557

if.end6:                                          ; preds = %land.lhs.true3, %if.end
  store i1 false, i1* %retval, align 1, !dbg !8558
  br label %return, !dbg !8558

return:                                           ; preds = %if.end6, %if.then5, %if.then
  %4 = load i1, i1* %retval, align 1, !dbg !8559
  ret i1 %4, !dbg !8559
}

; Function Attrs: noredzone
declare dso_local i8* @kstrdup_const(i8*, i32) #1

; Function Attrs: noredzone
declare dso_local i32 @dmi_name_in_vendors(i8*) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @acpi_is_indirect_io_slave(%struct.acpi_device* %device) #0 !dbg !4449 {
entry:
  %device.addr = alloca %struct.acpi_device*, align 8
  %parent = alloca %struct.acpi_device*, align 8
  store %struct.acpi_device* %device, %struct.acpi_device** %device.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.acpi_device** %device.addr, metadata !8560, metadata !DIExpression()), !dbg !8561
  call void @llvm.dbg.declare(metadata %struct.acpi_device** %parent, metadata !8562, metadata !DIExpression()), !dbg !8563
  %0 = load %struct.acpi_device*, %struct.acpi_device** %device.addr, align 8, !dbg !8564
  %parent1 = getelementptr inbounds %struct.acpi_device, %struct.acpi_device* %0, i32 0, i32 3, !dbg !8565
  %1 = load %struct.acpi_device*, %struct.acpi_device** %parent1, align 8, !dbg !8565
  store %struct.acpi_device* %1, %struct.acpi_device** %parent, align 8, !dbg !8563
  %2 = load %struct.acpi_device*, %struct.acpi_device** %parent, align 8, !dbg !8566
  %tobool = icmp ne %struct.acpi_device* %2, null, !dbg !8566
  br i1 %tobool, label %land.rhs, label %land.end, !dbg !8567

land.rhs:                                         ; preds = %entry
  %3 = load %struct.acpi_device*, %struct.acpi_device** %parent, align 8, !dbg !8568
  %call = call i32 @acpi_match_device_ids(%struct.acpi_device* %3, %struct.acpi_device_id* getelementptr inbounds ([2 x %struct.acpi_device_id], [2 x %struct.acpi_device_id]* @acpi_is_indirect_io_slave.indirect_io_hosts, i64 0, i64 0)) #9, !dbg !8569
  %tobool2 = icmp ne i32 %call, 0, !dbg !8570
  %lnot = xor i1 %tobool2, true, !dbg !8570
  br label %land.end

land.end:                                         ; preds = %land.rhs, %entry
  %4 = phi i1 [ false, %entry ], [ %lnot, %land.rhs ], !dbg !8571
  ret i1 %4, !dbg !8572
}

; Function Attrs: noredzone
declare dso_local zeroext i1 @fwnode_property_present(%struct.fwnode_handle*, i8*) #1

; Function Attrs: noredzone
declare dso_local i32 @acpi_match_device_ids(%struct.acpi_device*, %struct.acpi_device_id*) #1

; Function Attrs: noredzone
declare dso_local i32 @acpi_dev_get_resources(%struct.acpi_device*, %struct.list_head*, i32 (%struct.acpi_resource*, i8*)*, i8*) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @acpi_check_serial_bus_slave(%struct.acpi_resource* %ares, i8* %data) #0 !dbg !8573 {
entry:
  %retval = alloca i32, align 4
  %ares.addr = alloca %struct.acpi_resource*, align 8
  %data.addr = alloca i8*, align 8
  %is_serial_bus_slave_p = alloca i8*, align 8
  store %struct.acpi_resource* %ares, %struct.acpi_resource** %ares.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.acpi_resource** %ares.addr, metadata !8938, metadata !DIExpression()), !dbg !8939
  store i8* %data, i8** %data.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %data.addr, metadata !8940, metadata !DIExpression()), !dbg !8941
  call void @llvm.dbg.declare(metadata i8** %is_serial_bus_slave_p, metadata !8942, metadata !DIExpression()), !dbg !8943
  %0 = load i8*, i8** %data.addr, align 8, !dbg !8944
  store i8* %0, i8** %is_serial_bus_slave_p, align 8, !dbg !8943
  %1 = load %struct.acpi_resource*, %struct.acpi_resource** %ares.addr, align 8, !dbg !8945
  %type = getelementptr inbounds %struct.acpi_resource, %struct.acpi_resource* %1, i32 0, i32 0, !dbg !8947
  %2 = load i32, i32* %type, align 1, !dbg !8947
  %cmp = icmp ne i32 %2, 19, !dbg !8948
  br i1 %cmp, label %if.then, label %if.end, !dbg !8949

if.then:                                          ; preds = %entry
  store i32 1, i32* %retval, align 4, !dbg !8950
  br label %return, !dbg !8950

if.end:                                           ; preds = %entry
  %3 = load i8*, i8** %is_serial_bus_slave_p, align 8, !dbg !8951
  store i8 1, i8* %3, align 1, !dbg !8952
  store i32 -1, i32* %retval, align 4, !dbg !8953
  br label %return, !dbg !8953

return:                                           ; preds = %if.end, %if.then
  %4 = load i32, i32* %retval, align 4, !dbg !8954
  ret i32 %4, !dbg !8954
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @register_dock_dependent_device(%struct.acpi_device* %adev, i8* %dshandle) #0 !dbg !8955 {
entry:
  %adev.addr = alloca %struct.acpi_device*, align 8
  %dshandle.addr = alloca i8*, align 8
  store %struct.acpi_device* %adev, %struct.acpi_device** %adev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.acpi_device** %adev.addr, metadata !8958, metadata !DIExpression()), !dbg !8959
  store i8* %dshandle, i8** %dshandle.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %dshandle.addr, metadata !8960, metadata !DIExpression()), !dbg !8961
  ret void, !dbg !8962
}

; Function Attrs: noredzone
declare dso_local i32 @acpi_bus_init_power(%struct.acpi_device*) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @acpi_scan_attach_handler(%struct.acpi_device* %device) #0 !dbg !8963 {
entry:
  %device.addr = alloca %struct.acpi_device*, align 8
  %hwid = alloca %struct.acpi_hardware_id*, align 8
  %ret = alloca i32, align 4
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.acpi_hardware_id*, align 8
  %devid = alloca %struct.acpi_device_id*, align 8
  %handler = alloca %struct.acpi_scan_handler*, align 8
  %__mptr17 = alloca i8*, align 8
  %tmp22 = alloca %struct.acpi_hardware_id*, align 8
  store %struct.acpi_device* %device, %struct.acpi_device** %device.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.acpi_device** %device.addr, metadata !8964, metadata !DIExpression()), !dbg !8965
  call void @llvm.dbg.declare(metadata %struct.acpi_hardware_id** %hwid, metadata !8966, metadata !DIExpression()), !dbg !8967
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !8968, metadata !DIExpression()), !dbg !8969
  store i32 0, i32* %ret, align 4, !dbg !8969
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !8970, metadata !DIExpression()), !dbg !8973
  %0 = load %struct.acpi_device*, %struct.acpi_device** %device.addr, align 8, !dbg !8973
  %pnp = getelementptr inbounds %struct.acpi_device, %struct.acpi_device* %0, i32 0, i32 10, !dbg !8973
  %ids = getelementptr inbounds %struct.acpi_device_pnp, %struct.acpi_device_pnp* %pnp, i32 0, i32 4, !dbg !8973
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %ids, i32 0, i32 0, !dbg !8973
  %1 = load %struct.list_head*, %struct.list_head** %next, align 8, !dbg !8973
  %2 = bitcast %struct.list_head* %1 to i8*, !dbg !8973
  store i8* %2, i8** %__mptr, align 8, !dbg !8973
  br label %do.body, !dbg !8973

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !8974

do.end:                                           ; preds = %do.body
  %3 = load i8*, i8** %__mptr, align 8, !dbg !8973
  %add.ptr = getelementptr i8, i8* %3, i64 0, !dbg !8973
  %4 = bitcast i8* %add.ptr to %struct.acpi_hardware_id*, !dbg !8973
  store %struct.acpi_hardware_id* %4, %struct.acpi_hardware_id** %tmp, align 8, !dbg !8974
  %5 = load %struct.acpi_hardware_id*, %struct.acpi_hardware_id** %tmp, align 8, !dbg !8973
  store %struct.acpi_hardware_id* %5, %struct.acpi_hardware_id** %hwid, align 8, !dbg !8976
  br label %for.cond, !dbg !8976

for.cond:                                         ; preds = %do.end21, %do.end
  %6 = load %struct.acpi_hardware_id*, %struct.acpi_hardware_id** %hwid, align 8, !dbg !8977
  %list = getelementptr inbounds %struct.acpi_hardware_id, %struct.acpi_hardware_id* %6, i32 0, i32 0, !dbg !8977
  %7 = load %struct.acpi_device*, %struct.acpi_device** %device.addr, align 8, !dbg !8977
  %pnp1 = getelementptr inbounds %struct.acpi_device, %struct.acpi_device* %7, i32 0, i32 10, !dbg !8977
  %ids2 = getelementptr inbounds %struct.acpi_device_pnp, %struct.acpi_device_pnp* %pnp1, i32 0, i32 4, !dbg !8977
  %cmp = icmp eq %struct.list_head* %list, %ids2, !dbg !8977
  %lnot = xor i1 %cmp, true, !dbg !8977
  br i1 %lnot, label %for.body, label %for.end, !dbg !8976

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.acpi_device_id** %devid, metadata !8979, metadata !DIExpression()), !dbg !8981
  call void @llvm.dbg.declare(metadata %struct.acpi_scan_handler** %handler, metadata !8982, metadata !DIExpression()), !dbg !8983
  %8 = load %struct.acpi_hardware_id*, %struct.acpi_hardware_id** %hwid, align 8, !dbg !8984
  %id = getelementptr inbounds %struct.acpi_hardware_id, %struct.acpi_hardware_id* %8, i32 0, i32 1, !dbg !8985
  %9 = load i8*, i8** %id, align 8, !dbg !8985
  %call = call %struct.acpi_scan_handler* @acpi_scan_match_handler(i8* %9, %struct.acpi_device_id** %devid) #9, !dbg !8986
  store %struct.acpi_scan_handler* %call, %struct.acpi_scan_handler** %handler, align 8, !dbg !8987
  %10 = load %struct.acpi_scan_handler*, %struct.acpi_scan_handler** %handler, align 8, !dbg !8988
  %tobool = icmp ne %struct.acpi_scan_handler* %10, null, !dbg !8988
  br i1 %tobool, label %if.then, label %if.end16, !dbg !8990

if.then:                                          ; preds = %for.body
  %11 = load %struct.acpi_scan_handler*, %struct.acpi_scan_handler** %handler, align 8, !dbg !8991
  %attach = getelementptr inbounds %struct.acpi_scan_handler, %struct.acpi_scan_handler* %11, i32 0, i32 3, !dbg !8994
  %12 = load i32 (%struct.acpi_device*, %struct.acpi_device_id*)*, i32 (%struct.acpi_device*, %struct.acpi_device_id*)** %attach, align 8, !dbg !8994
  %tobool3 = icmp ne i32 (%struct.acpi_device*, %struct.acpi_device_id*)* %12, null, !dbg !8991
  br i1 %tobool3, label %if.end, label %if.then4, !dbg !8995

if.then4:                                         ; preds = %if.then
  %13 = load %struct.acpi_device*, %struct.acpi_device** %device.addr, align 8, !dbg !8996
  %pnp5 = getelementptr inbounds %struct.acpi_device, %struct.acpi_device* %13, i32 0, i32 10, !dbg !8998
  %type = getelementptr inbounds %struct.acpi_device_pnp, %struct.acpi_device_pnp* %pnp5, i32 0, i32 1, !dbg !8999
  %14 = bitcast %struct.acpi_pnp_type* %type to i32*, !dbg !9000
  %bf.load = load i32, i32* %14, align 8, !dbg !9001
  %bf.clear = and i32 %bf.load, -5, !dbg !9001
  store i32 %bf.clear, i32* %14, align 8, !dbg !9001
  br label %for.inc, !dbg !9002

if.end:                                           ; preds = %if.then
  %15 = load %struct.acpi_scan_handler*, %struct.acpi_scan_handler** %handler, align 8, !dbg !9003
  %16 = load %struct.acpi_device*, %struct.acpi_device** %device.addr, align 8, !dbg !9004
  %handler6 = getelementptr inbounds %struct.acpi_device, %struct.acpi_device* %16, i32 0, i32 16, !dbg !9005
  store %struct.acpi_scan_handler* %15, %struct.acpi_scan_handler** %handler6, align 8, !dbg !9006
  %17 = load %struct.acpi_scan_handler*, %struct.acpi_scan_handler** %handler, align 8, !dbg !9007
  %attach7 = getelementptr inbounds %struct.acpi_scan_handler, %struct.acpi_scan_handler* %17, i32 0, i32 3, !dbg !9008
  %18 = load i32 (%struct.acpi_device*, %struct.acpi_device_id*)*, i32 (%struct.acpi_device*, %struct.acpi_device_id*)** %attach7, align 8, !dbg !9008
  %19 = load %struct.acpi_device*, %struct.acpi_device** %device.addr, align 8, !dbg !9009
  %20 = load %struct.acpi_device_id*, %struct.acpi_device_id** %devid, align 8, !dbg !9010
  %call8 = call i32 %18(%struct.acpi_device* %19, %struct.acpi_device_id* %20) #9, !dbg !9007
  store i32 %call8, i32* %ret, align 4, !dbg !9011
  %21 = load i32, i32* %ret, align 4, !dbg !9012
  %cmp9 = icmp sgt i32 %21, 0, !dbg !9014
  br i1 %cmp9, label %if.then10, label %if.end11, !dbg !9015

if.then10:                                        ; preds = %if.end
  br label %for.end, !dbg !9016

if.end11:                                         ; preds = %if.end
  %22 = load %struct.acpi_device*, %struct.acpi_device** %device.addr, align 8, !dbg !9017
  %handler12 = getelementptr inbounds %struct.acpi_device, %struct.acpi_device* %22, i32 0, i32 16, !dbg !9018
  store %struct.acpi_scan_handler* null, %struct.acpi_scan_handler** %handler12, align 8, !dbg !9019
  %23 = load i32, i32* %ret, align 4, !dbg !9020
  %cmp13 = icmp slt i32 %23, 0, !dbg !9022
  br i1 %cmp13, label %if.then14, label %if.end15, !dbg !9023

if.then14:                                        ; preds = %if.end11
  br label %for.end, !dbg !9024

if.end15:                                         ; preds = %if.end11
  br label %if.end16, !dbg !9025

if.end16:                                         ; preds = %if.end15, %for.body
  br label %for.inc, !dbg !9026

for.inc:                                          ; preds = %if.end16, %if.then4
  call void @llvm.dbg.declare(metadata i8** %__mptr17, metadata !9027, metadata !DIExpression()), !dbg !9029
  %24 = load %struct.acpi_hardware_id*, %struct.acpi_hardware_id** %hwid, align 8, !dbg !9029
  %list18 = getelementptr inbounds %struct.acpi_hardware_id, %struct.acpi_hardware_id* %24, i32 0, i32 0, !dbg !9029
  %next19 = getelementptr inbounds %struct.list_head, %struct.list_head* %list18, i32 0, i32 0, !dbg !9029
  %25 = load %struct.list_head*, %struct.list_head** %next19, align 8, !dbg !9029
  %26 = bitcast %struct.list_head* %25 to i8*, !dbg !9029
  store i8* %26, i8** %__mptr17, align 8, !dbg !9029
  br label %do.body20, !dbg !9029

do.body20:                                        ; preds = %for.inc
  br label %do.end21, !dbg !9030

do.end21:                                         ; preds = %do.body20
  %27 = load i8*, i8** %__mptr17, align 8, !dbg !9029
  %add.ptr23 = getelementptr i8, i8* %27, i64 0, !dbg !9029
  %28 = bitcast i8* %add.ptr23 to %struct.acpi_hardware_id*, !dbg !9029
  store %struct.acpi_hardware_id* %28, %struct.acpi_hardware_id** %tmp22, align 8, !dbg !9030
  %29 = load %struct.acpi_hardware_id*, %struct.acpi_hardware_id** %tmp22, align 8, !dbg !9029
  store %struct.acpi_hardware_id* %29, %struct.acpi_hardware_id** %hwid, align 8, !dbg !8977
  br label %for.cond, !dbg !8977, !llvm.loop !9032

for.end:                                          ; preds = %if.then14, %if.then10, %for.cond
  %30 = load i32, i32* %ret, align 4, !dbg !9034
  ret i32 %30, !dbg !9035
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @acpi_device_set_enumerated(%struct.acpi_device* %adev) #0 !dbg !9036 {
entry:
  %adev.addr = alloca %struct.acpi_device*, align 8
  store %struct.acpi_device* %adev, %struct.acpi_device** %adev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.acpi_device** %adev.addr, metadata !9037, metadata !DIExpression()), !dbg !9038
  %0 = load %struct.acpi_device*, %struct.acpi_device** %adev.addr, align 8, !dbg !9039
  %flags = getelementptr inbounds %struct.acpi_device, %struct.acpi_device* %0, i32 0, i32 9, !dbg !9040
  %1 = bitcast %struct.acpi_device_flags* %flags to i32*, !dbg !9041
  %bf.load = load i32, i32* %1, align 4, !dbg !9042
  %bf.clear = and i32 %bf.load, -65, !dbg !9042
  %bf.set = or i32 %bf.clear, 64, !dbg !9042
  store i32 %bf.set, i32* %1, align 4, !dbg !9042
  ret void, !dbg !9043
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @acpi_default_enumeration(%struct.acpi_device* %device) #0 !dbg !9044 {
entry:
  %device.addr = alloca %struct.acpi_device*, align 8
  store %struct.acpi_device* %device, %struct.acpi_device** %device.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.acpi_device** %device.addr, metadata !9045, metadata !DIExpression()), !dbg !9046
  %0 = load %struct.acpi_device*, %struct.acpi_device** %device.addr, align 8, !dbg !9047
  %flags = getelementptr inbounds %struct.acpi_device, %struct.acpi_device* %0, i32 0, i32 9, !dbg !9049
  %1 = bitcast %struct.acpi_device_flags* %flags to i32*, !dbg !9050
  %bf.load = load i32, i32* %1, align 4, !dbg !9050
  %bf.lshr = lshr i32 %bf.load, 12, !dbg !9050
  %bf.clear = and i32 %bf.lshr, 1, !dbg !9050
  %tobool = icmp ne i32 %bf.clear, 0, !dbg !9047
  br i1 %tobool, label %if.else, label %if.then, !dbg !9051

if.then:                                          ; preds = %entry
  %2 = load %struct.acpi_device*, %struct.acpi_device** %device.addr, align 8, !dbg !9052
  %call = call %struct.platform_device* @acpi_create_platform_device(%struct.acpi_device* %2, %struct.property_entry* null) #9, !dbg !9054
  %3 = load %struct.acpi_device*, %struct.acpi_device** %device.addr, align 8, !dbg !9055
  call void @acpi_device_set_enumerated(%struct.acpi_device* %3) #9, !dbg !9056
  br label %if.end, !dbg !9057

if.else:                                          ; preds = %entry
  %4 = load %struct.acpi_device*, %struct.acpi_device** %device.addr, align 8, !dbg !9058
  %5 = bitcast %struct.acpi_device* %4 to i8*, !dbg !9058
  %call1 = call i32 @blocking_notifier_call_chain(%struct.blocking_notifier_head* @acpi_reconfig_chain, i64 0, i8* %5) #9, !dbg !9060
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  ret void, !dbg !9061
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.acpi_scan_handler* @acpi_scan_match_handler(i8* %idstr, %struct.acpi_device_id** %matchid) #0 !dbg !9062 {
entry:
  %retval = alloca %struct.acpi_scan_handler*, align 8
  %idstr.addr = alloca i8*, align 8
  %matchid.addr = alloca %struct.acpi_device_id**, align 8
  %handler = alloca %struct.acpi_scan_handler*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.acpi_scan_handler*, align 8
  %__mptr1 = alloca i8*, align 8
  %tmp5 = alloca %struct.acpi_scan_handler*, align 8
  store i8* %idstr, i8** %idstr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %idstr.addr, metadata !9065, metadata !DIExpression()), !dbg !9066
  store %struct.acpi_device_id** %matchid, %struct.acpi_device_id*** %matchid.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.acpi_device_id*** %matchid.addr, metadata !9067, metadata !DIExpression()), !dbg !9068
  call void @llvm.dbg.declare(metadata %struct.acpi_scan_handler** %handler, metadata !9069, metadata !DIExpression()), !dbg !9070
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !9071, metadata !DIExpression()), !dbg !9074
  %0 = load %struct.list_head*, %struct.list_head** getelementptr inbounds (%struct.list_head, %struct.list_head* @acpi_scan_handlers_list, i32 0, i32 0), align 8, !dbg !9074
  %1 = bitcast %struct.list_head* %0 to i8*, !dbg !9074
  store i8* %1, i8** %__mptr, align 8, !dbg !9074
  br label %do.body, !dbg !9074

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !9075

do.end:                                           ; preds = %do.body
  %2 = load i8*, i8** %__mptr, align 8, !dbg !9074
  %add.ptr = getelementptr i8, i8* %2, i64 -8, !dbg !9074
  %3 = bitcast i8* %add.ptr to %struct.acpi_scan_handler*, !dbg !9074
  store %struct.acpi_scan_handler* %3, %struct.acpi_scan_handler** %tmp, align 8, !dbg !9075
  %4 = load %struct.acpi_scan_handler*, %struct.acpi_scan_handler** %tmp, align 8, !dbg !9074
  store %struct.acpi_scan_handler* %4, %struct.acpi_scan_handler** %handler, align 8, !dbg !9077
  br label %for.cond, !dbg !9077

for.cond:                                         ; preds = %do.end4, %do.end
  %5 = load %struct.acpi_scan_handler*, %struct.acpi_scan_handler** %handler, align 8, !dbg !9078
  %list_node = getelementptr inbounds %struct.acpi_scan_handler, %struct.acpi_scan_handler* %5, i32 0, i32 1, !dbg !9078
  %cmp = icmp eq %struct.list_head* %list_node, @acpi_scan_handlers_list, !dbg !9078
  %lnot = xor i1 %cmp, true, !dbg !9078
  br i1 %lnot, label %for.body, label %for.end, !dbg !9077

for.body:                                         ; preds = %for.cond
  %6 = load %struct.acpi_scan_handler*, %struct.acpi_scan_handler** %handler, align 8, !dbg !9080
  %7 = load i8*, i8** %idstr.addr, align 8, !dbg !9082
  %8 = load %struct.acpi_device_id**, %struct.acpi_device_id*** %matchid.addr, align 8, !dbg !9083
  %call = call zeroext i1 @acpi_scan_handler_matching(%struct.acpi_scan_handler* %6, i8* %7, %struct.acpi_device_id** %8) #9, !dbg !9084
  br i1 %call, label %if.then, label %if.end, !dbg !9085

if.then:                                          ; preds = %for.body
  %9 = load %struct.acpi_scan_handler*, %struct.acpi_scan_handler** %handler, align 8, !dbg !9086
  store %struct.acpi_scan_handler* %9, %struct.acpi_scan_handler** %retval, align 8, !dbg !9087
  br label %return, !dbg !9087

if.end:                                           ; preds = %for.body
  br label %for.inc, !dbg !9088

for.inc:                                          ; preds = %if.end
  call void @llvm.dbg.declare(metadata i8** %__mptr1, metadata !9089, metadata !DIExpression()), !dbg !9091
  %10 = load %struct.acpi_scan_handler*, %struct.acpi_scan_handler** %handler, align 8, !dbg !9091
  %list_node2 = getelementptr inbounds %struct.acpi_scan_handler, %struct.acpi_scan_handler* %10, i32 0, i32 1, !dbg !9091
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %list_node2, i32 0, i32 0, !dbg !9091
  %11 = load %struct.list_head*, %struct.list_head** %next, align 8, !dbg !9091
  %12 = bitcast %struct.list_head* %11 to i8*, !dbg !9091
  store i8* %12, i8** %__mptr1, align 8, !dbg !9091
  br label %do.body3, !dbg !9091

do.body3:                                         ; preds = %for.inc
  br label %do.end4, !dbg !9092

do.end4:                                          ; preds = %do.body3
  %13 = load i8*, i8** %__mptr1, align 8, !dbg !9091
  %add.ptr6 = getelementptr i8, i8* %13, i64 -8, !dbg !9091
  %14 = bitcast i8* %add.ptr6 to %struct.acpi_scan_handler*, !dbg !9091
  store %struct.acpi_scan_handler* %14, %struct.acpi_scan_handler** %tmp5, align 8, !dbg !9092
  %15 = load %struct.acpi_scan_handler*, %struct.acpi_scan_handler** %tmp5, align 8, !dbg !9091
  store %struct.acpi_scan_handler* %15, %struct.acpi_scan_handler** %handler, align 8, !dbg !9078
  br label %for.cond, !dbg !9078, !llvm.loop !9094

for.end:                                          ; preds = %for.cond
  store %struct.acpi_scan_handler* null, %struct.acpi_scan_handler** %retval, align 8, !dbg !9096
  br label %return, !dbg !9096

return:                                           ; preds = %for.end, %if.then
  %16 = load %struct.acpi_scan_handler*, %struct.acpi_scan_handler** %retval, align 8, !dbg !9097
  ret %struct.acpi_scan_handler* %16, !dbg !9097
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @acpi_scan_handler_matching(%struct.acpi_scan_handler* %handler, i8* %idstr, %struct.acpi_device_id** %matchid) #0 !dbg !9098 {
entry:
  %retval = alloca i1, align 1
  %handler.addr = alloca %struct.acpi_scan_handler*, align 8
  %idstr.addr = alloca i8*, align 8
  %matchid.addr = alloca %struct.acpi_device_id**, align 8
  %devid = alloca %struct.acpi_device_id*, align 8
  store %struct.acpi_scan_handler* %handler, %struct.acpi_scan_handler** %handler.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.acpi_scan_handler** %handler.addr, metadata !9101, metadata !DIExpression()), !dbg !9102
  store i8* %idstr, i8** %idstr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %idstr.addr, metadata !9103, metadata !DIExpression()), !dbg !9104
  store %struct.acpi_device_id** %matchid, %struct.acpi_device_id*** %matchid.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.acpi_device_id*** %matchid.addr, metadata !9105, metadata !DIExpression()), !dbg !9106
  call void @llvm.dbg.declare(metadata %struct.acpi_device_id** %devid, metadata !9107, metadata !DIExpression()), !dbg !9108
  %0 = load %struct.acpi_scan_handler*, %struct.acpi_scan_handler** %handler.addr, align 8, !dbg !9109
  %match = getelementptr inbounds %struct.acpi_scan_handler, %struct.acpi_scan_handler* %0, i32 0, i32 2, !dbg !9111
  %1 = load i1 (i8*, %struct.acpi_device_id**)*, i1 (i8*, %struct.acpi_device_id**)** %match, align 8, !dbg !9111
  %tobool = icmp ne i1 (i8*, %struct.acpi_device_id**)* %1, null, !dbg !9109
  br i1 %tobool, label %if.then, label %if.end, !dbg !9112

if.then:                                          ; preds = %entry
  %2 = load %struct.acpi_scan_handler*, %struct.acpi_scan_handler** %handler.addr, align 8, !dbg !9113
  %match1 = getelementptr inbounds %struct.acpi_scan_handler, %struct.acpi_scan_handler* %2, i32 0, i32 2, !dbg !9114
  %3 = load i1 (i8*, %struct.acpi_device_id**)*, i1 (i8*, %struct.acpi_device_id**)** %match1, align 8, !dbg !9114
  %4 = load i8*, i8** %idstr.addr, align 8, !dbg !9115
  %5 = load %struct.acpi_device_id**, %struct.acpi_device_id*** %matchid.addr, align 8, !dbg !9116
  %call = call zeroext i1 %3(i8* %4, %struct.acpi_device_id** %5) #9, !dbg !9113
  store i1 %call, i1* %retval, align 1, !dbg !9117
  br label %return, !dbg !9117

if.end:                                           ; preds = %entry
  %6 = load %struct.acpi_scan_handler*, %struct.acpi_scan_handler** %handler.addr, align 8, !dbg !9118
  %ids = getelementptr inbounds %struct.acpi_scan_handler, %struct.acpi_scan_handler* %6, i32 0, i32 0, !dbg !9120
  %7 = load %struct.acpi_device_id*, %struct.acpi_device_id** %ids, align 8, !dbg !9120
  store %struct.acpi_device_id* %7, %struct.acpi_device_id** %devid, align 8, !dbg !9121
  br label %for.cond, !dbg !9122

for.cond:                                         ; preds = %for.inc, %if.end
  %8 = load %struct.acpi_device_id*, %struct.acpi_device_id** %devid, align 8, !dbg !9123
  %id = getelementptr inbounds %struct.acpi_device_id, %struct.acpi_device_id* %8, i32 0, i32 0, !dbg !9125
  %arrayidx = getelementptr [9 x i8], [9 x i8]* %id, i64 0, i64 0, !dbg !9123
  %9 = load i8, i8* %arrayidx, align 8, !dbg !9123
  %tobool2 = icmp ne i8 %9, 0, !dbg !9126
  br i1 %tobool2, label %for.body, label %for.end, !dbg !9126

for.body:                                         ; preds = %for.cond
  %10 = load %struct.acpi_device_id*, %struct.acpi_device_id** %devid, align 8, !dbg !9127
  %id3 = getelementptr inbounds %struct.acpi_device_id, %struct.acpi_device_id* %10, i32 0, i32 0, !dbg !9129
  %arraydecay = getelementptr inbounds [9 x i8], [9 x i8]* %id3, i64 0, i64 0, !dbg !9127
  %11 = load i8*, i8** %idstr.addr, align 8, !dbg !9130
  %call4 = call i32 @strcmp(i8* %arraydecay, i8* %11) #9, !dbg !9131
  %tobool5 = icmp ne i32 %call4, 0, !dbg !9131
  br i1 %tobool5, label %if.end10, label %if.then6, !dbg !9132

if.then6:                                         ; preds = %for.body
  %12 = load %struct.acpi_device_id**, %struct.acpi_device_id*** %matchid.addr, align 8, !dbg !9133
  %tobool7 = icmp ne %struct.acpi_device_id** %12, null, !dbg !9133
  br i1 %tobool7, label %if.then8, label %if.end9, !dbg !9136

if.then8:                                         ; preds = %if.then6
  %13 = load %struct.acpi_device_id*, %struct.acpi_device_id** %devid, align 8, !dbg !9137
  %14 = load %struct.acpi_device_id**, %struct.acpi_device_id*** %matchid.addr, align 8, !dbg !9138
  store %struct.acpi_device_id* %13, %struct.acpi_device_id** %14, align 8, !dbg !9139
  br label %if.end9, !dbg !9140

if.end9:                                          ; preds = %if.then8, %if.then6
  store i1 true, i1* %retval, align 1, !dbg !9141
  br label %return, !dbg !9141

if.end10:                                         ; preds = %for.body
  br label %for.inc, !dbg !9142

for.inc:                                          ; preds = %if.end10
  %15 = load %struct.acpi_device_id*, %struct.acpi_device_id** %devid, align 8, !dbg !9143
  %incdec.ptr = getelementptr %struct.acpi_device_id, %struct.acpi_device_id* %15, i32 1, !dbg !9143
  store %struct.acpi_device_id* %incdec.ptr, %struct.acpi_device_id** %devid, align 8, !dbg !9143
  br label %for.cond, !dbg !9144, !llvm.loop !9145

for.end:                                          ; preds = %for.cond
  store i1 false, i1* %retval, align 1, !dbg !9147
  br label %return, !dbg !9147

return:                                           ; preds = %for.end, %if.end9, %if.then
  %16 = load i1, i1* %retval, align 1, !dbg !9148
  ret i1 %16, !dbg !9148
}

; Function Attrs: noredzone
declare dso_local %struct.platform_device* @acpi_create_platform_device(%struct.acpi_device*, %struct.property_entry*) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @acpi_bus_type_and_status(i8* %handle, i32* %type, i64* %sta) #0 !dbg !9149 {
entry:
  %retval = alloca i32, align 4
  %handle.addr = alloca i8*, align 8
  %type.addr = alloca i32*, align 8
  %sta.addr = alloca i64*, align 8
  %status = alloca i32, align 4
  %acpi_type = alloca i32, align 4
  store i8* %handle, i8** %handle.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %handle.addr, metadata !9153, metadata !DIExpression()), !dbg !9154
  store i32* %type, i32** %type.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %type.addr, metadata !9155, metadata !DIExpression()), !dbg !9156
  store i64* %sta, i64** %sta.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %sta.addr, metadata !9157, metadata !DIExpression()), !dbg !9158
  call void @llvm.dbg.declare(metadata i32* %status, metadata !9159, metadata !DIExpression()), !dbg !9160
  call void @llvm.dbg.declare(metadata i32* %acpi_type, metadata !9161, metadata !DIExpression()), !dbg !9162
  %0 = load i8*, i8** %handle.addr, align 8, !dbg !9163
  %call = call i32 @acpi_get_type(i8* %0, i32* %acpi_type) #9, !dbg !9164
  store i32 %call, i32* %status, align 4, !dbg !9165
  %1 = load i32, i32* %status, align 4, !dbg !9166
  %tobool = icmp ne i32 %1, 0, !dbg !9166
  br i1 %tobool, label %if.then, label %if.end, !dbg !9168

if.then:                                          ; preds = %entry
  store i32 -19, i32* %retval, align 4, !dbg !9169
  br label %return, !dbg !9169

if.end:                                           ; preds = %entry
  %2 = load i32, i32* %acpi_type, align 4, !dbg !9170
  switch i32 %2, label %sw.default [
    i32 0, label %sw.bb
    i32 6, label %sw.bb
    i32 12, label %sw.bb4
    i32 13, label %sw.bb9
    i32 11, label %sw.bb10
  ], !dbg !9171

sw.bb:                                            ; preds = %if.end, %if.end
  %3 = load i8*, i8** %handle.addr, align 8, !dbg !9172
  %call1 = call zeroext i1 @acpi_device_should_be_hidden(i8* %3) #9, !dbg !9175
  br i1 %call1, label %if.then2, label %if.end3, !dbg !9176

if.then2:                                         ; preds = %sw.bb
  store i32 -19, i32* %retval, align 4, !dbg !9177
  br label %return, !dbg !9177

if.end3:                                          ; preds = %sw.bb
  %4 = load i32*, i32** %type.addr, align 8, !dbg !9178
  store i32 0, i32* %4, align 4, !dbg !9179
  %5 = load i64*, i64** %sta.addr, align 8, !dbg !9180
  store i64 15, i64* %5, align 8, !dbg !9181
  br label %sw.epilog, !dbg !9182

sw.bb4:                                           ; preds = %if.end
  %6 = load i32*, i32** %type.addr, align 8, !dbg !9183
  store i32 2, i32* %6, align 4, !dbg !9184
  %7 = load i8*, i8** %handle.addr, align 8, !dbg !9185
  %8 = load i64*, i64** %sta.addr, align 8, !dbg !9186
  %call5 = call i32 @acpi_bus_get_status_handle(i8* %7, i64* %8) #9, !dbg !9187
  store i32 %call5, i32* %status, align 4, !dbg !9188
  %9 = load i32, i32* %status, align 4, !dbg !9189
  %tobool6 = icmp ne i32 %9, 0, !dbg !9189
  br i1 %tobool6, label %if.then7, label %if.end8, !dbg !9191

if.then7:                                         ; preds = %sw.bb4
  store i32 -19, i32* %retval, align 4, !dbg !9192
  br label %return, !dbg !9192

if.end8:                                          ; preds = %sw.bb4
  br label %sw.epilog, !dbg !9193

sw.bb9:                                           ; preds = %if.end
  %10 = load i32*, i32** %type.addr, align 8, !dbg !9194
  store i32 3, i32* %10, align 4, !dbg !9195
  %11 = load i64*, i64** %sta.addr, align 8, !dbg !9196
  store i64 15, i64* %11, align 8, !dbg !9197
  br label %sw.epilog, !dbg !9198

sw.bb10:                                          ; preds = %if.end
  %12 = load i32*, i32** %type.addr, align 8, !dbg !9199
  store i32 1, i32* %12, align 4, !dbg !9200
  %13 = load i64*, i64** %sta.addr, align 8, !dbg !9201
  store i64 15, i64* %13, align 8, !dbg !9202
  br label %sw.epilog, !dbg !9203

sw.default:                                       ; preds = %if.end
  store i32 -19, i32* %retval, align 4, !dbg !9204
  br label %return, !dbg !9204

sw.epilog:                                        ; preds = %sw.bb10, %sw.bb9, %if.end8, %if.end3
  store i32 0, i32* %retval, align 4, !dbg !9205
  br label %return, !dbg !9205

return:                                           ; preds = %sw.epilog, %sw.default, %if.then7, %if.then2, %if.then
  %14 = load i32, i32* %retval, align 4, !dbg !9206
  ret i32 %14, !dbg !9206
}

; Function Attrs: noredzone
declare dso_local i32 @acpi_add_power_resource(i8*) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @acpi_scan_init_hotplug(%struct.acpi_device* %adev) #0 !dbg !9207 {
entry:
  %adev.addr = alloca %struct.acpi_device*, align 8
  %hwid = alloca %struct.acpi_hardware_id*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.acpi_hardware_id*, align 8
  %handler = alloca %struct.acpi_scan_handler*, align 8
  %__mptr7 = alloca i8*, align 8
  %tmp12 = alloca %struct.acpi_hardware_id*, align 8
  store %struct.acpi_device* %adev, %struct.acpi_device** %adev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.acpi_device** %adev.addr, metadata !9208, metadata !DIExpression()), !dbg !9209
  call void @llvm.dbg.declare(metadata %struct.acpi_hardware_id** %hwid, metadata !9210, metadata !DIExpression()), !dbg !9211
  %0 = load %struct.acpi_device*, %struct.acpi_device** %adev.addr, align 8, !dbg !9212
  %handle = getelementptr inbounds %struct.acpi_device, %struct.acpi_device* %0, i32 0, i32 1, !dbg !9214
  %1 = load i8*, i8** %handle, align 8, !dbg !9214
  %call = call zeroext i1 @acpi_dock_match(i8* %1) #9, !dbg !9215
  br i1 %call, label %if.then, label %lor.lhs.false, !dbg !9216

lor.lhs.false:                                    ; preds = %entry
  %2 = load %struct.acpi_device*, %struct.acpi_device** %adev.addr, align 8, !dbg !9217
  %call1 = call zeroext i1 @is_ejectable_bay(%struct.acpi_device* %2) #9, !dbg !9218
  br i1 %call1, label %if.then, label %if.end, !dbg !9219

if.then:                                          ; preds = %lor.lhs.false, %entry
  %3 = load %struct.acpi_device*, %struct.acpi_device** %adev.addr, align 8, !dbg !9220
  call void @acpi_dock_add(%struct.acpi_device* %3) #9, !dbg !9222
  br label %for.end, !dbg !9223

if.end:                                           ; preds = %lor.lhs.false
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !9224, metadata !DIExpression()), !dbg !9227
  %4 = load %struct.acpi_device*, %struct.acpi_device** %adev.addr, align 8, !dbg !9227
  %pnp = getelementptr inbounds %struct.acpi_device, %struct.acpi_device* %4, i32 0, i32 10, !dbg !9227
  %ids = getelementptr inbounds %struct.acpi_device_pnp, %struct.acpi_device_pnp* %pnp, i32 0, i32 4, !dbg !9227
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %ids, i32 0, i32 0, !dbg !9227
  %5 = load %struct.list_head*, %struct.list_head** %next, align 8, !dbg !9227
  %6 = bitcast %struct.list_head* %5 to i8*, !dbg !9227
  store i8* %6, i8** %__mptr, align 8, !dbg !9227
  br label %do.body, !dbg !9227

do.body:                                          ; preds = %if.end
  br label %do.end, !dbg !9228

do.end:                                           ; preds = %do.body
  %7 = load i8*, i8** %__mptr, align 8, !dbg !9227
  %add.ptr = getelementptr i8, i8* %7, i64 0, !dbg !9227
  %8 = bitcast i8* %add.ptr to %struct.acpi_hardware_id*, !dbg !9227
  store %struct.acpi_hardware_id* %8, %struct.acpi_hardware_id** %tmp, align 8, !dbg !9228
  %9 = load %struct.acpi_hardware_id*, %struct.acpi_hardware_id** %tmp, align 8, !dbg !9227
  store %struct.acpi_hardware_id* %9, %struct.acpi_hardware_id** %hwid, align 8, !dbg !9230
  br label %for.cond, !dbg !9230

for.cond:                                         ; preds = %do.end11, %do.end
  %10 = load %struct.acpi_hardware_id*, %struct.acpi_hardware_id** %hwid, align 8, !dbg !9231
  %list = getelementptr inbounds %struct.acpi_hardware_id, %struct.acpi_hardware_id* %10, i32 0, i32 0, !dbg !9231
  %11 = load %struct.acpi_device*, %struct.acpi_device** %adev.addr, align 8, !dbg !9231
  %pnp2 = getelementptr inbounds %struct.acpi_device, %struct.acpi_device* %11, i32 0, i32 10, !dbg !9231
  %ids3 = getelementptr inbounds %struct.acpi_device_pnp, %struct.acpi_device_pnp* %pnp2, i32 0, i32 4, !dbg !9231
  %cmp = icmp eq %struct.list_head* %list, %ids3, !dbg !9231
  %lnot = xor i1 %cmp, true, !dbg !9231
  br i1 %lnot, label %for.body, label %for.end, !dbg !9230

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.acpi_scan_handler** %handler, metadata !9233, metadata !DIExpression()), !dbg !9235
  %12 = load %struct.acpi_hardware_id*, %struct.acpi_hardware_id** %hwid, align 8, !dbg !9236
  %id = getelementptr inbounds %struct.acpi_hardware_id, %struct.acpi_hardware_id* %12, i32 0, i32 1, !dbg !9237
  %13 = load i8*, i8** %id, align 8, !dbg !9237
  %call4 = call %struct.acpi_scan_handler* @acpi_scan_match_handler(i8* %13, %struct.acpi_device_id** null) #9, !dbg !9238
  store %struct.acpi_scan_handler* %call4, %struct.acpi_scan_handler** %handler, align 8, !dbg !9239
  %14 = load %struct.acpi_scan_handler*, %struct.acpi_scan_handler** %handler, align 8, !dbg !9240
  %tobool = icmp ne %struct.acpi_scan_handler* %14, null, !dbg !9240
  br i1 %tobool, label %if.then5, label %if.end6, !dbg !9242

if.then5:                                         ; preds = %for.body
  %15 = load %struct.acpi_device*, %struct.acpi_device** %adev.addr, align 8, !dbg !9243
  %flags = getelementptr inbounds %struct.acpi_device, %struct.acpi_device* %15, i32 0, i32 9, !dbg !9245
  %16 = bitcast %struct.acpi_device_flags* %flags to i32*, !dbg !9246
  %bf.load = load i32, i32* %16, align 4, !dbg !9247
  %bf.clear = and i32 %bf.load, -129, !dbg !9247
  %bf.set = or i32 %bf.clear, 128, !dbg !9247
  store i32 %bf.set, i32* %16, align 4, !dbg !9247
  br label %for.end, !dbg !9248

if.end6:                                          ; preds = %for.body
  br label %for.inc, !dbg !9249

for.inc:                                          ; preds = %if.end6
  call void @llvm.dbg.declare(metadata i8** %__mptr7, metadata !9250, metadata !DIExpression()), !dbg !9252
  %17 = load %struct.acpi_hardware_id*, %struct.acpi_hardware_id** %hwid, align 8, !dbg !9252
  %list8 = getelementptr inbounds %struct.acpi_hardware_id, %struct.acpi_hardware_id* %17, i32 0, i32 0, !dbg !9252
  %next9 = getelementptr inbounds %struct.list_head, %struct.list_head* %list8, i32 0, i32 0, !dbg !9252
  %18 = load %struct.list_head*, %struct.list_head** %next9, align 8, !dbg !9252
  %19 = bitcast %struct.list_head* %18 to i8*, !dbg !9252
  store i8* %19, i8** %__mptr7, align 8, !dbg !9252
  br label %do.body10, !dbg !9252

do.body10:                                        ; preds = %for.inc
  br label %do.end11, !dbg !9253

do.end11:                                         ; preds = %do.body10
  %20 = load i8*, i8** %__mptr7, align 8, !dbg !9252
  %add.ptr13 = getelementptr i8, i8* %20, i64 0, !dbg !9252
  %21 = bitcast i8* %add.ptr13 to %struct.acpi_hardware_id*, !dbg !9252
  store %struct.acpi_hardware_id* %21, %struct.acpi_hardware_id** %tmp12, align 8, !dbg !9253
  %22 = load %struct.acpi_hardware_id*, %struct.acpi_hardware_id** %tmp12, align 8, !dbg !9252
  store %struct.acpi_hardware_id* %22, %struct.acpi_hardware_id** %hwid, align 8, !dbg !9231
  br label %for.cond, !dbg !9231, !llvm.loop !9255

for.end:                                          ; preds = %if.then, %if.then5, %for.cond
  ret void, !dbg !9257
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @acpi_device_dep_initialize(%struct.acpi_device* %adev) #0 !dbg !9258 {
entry:
  %adev.addr = alloca %struct.acpi_device*, align 8
  %dep = alloca %struct.acpi_dep_data*, align 8
  %dep_devices = alloca %struct.acpi_handle_list, align 8
  %status = alloca i32, align 4
  %i = alloca i32, align 4
  %info = alloca %struct.acpi_device_info*, align 8
  %skip = alloca i32, align 4
  store %struct.acpi_device* %adev, %struct.acpi_device** %adev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.acpi_device** %adev.addr, metadata !9259, metadata !DIExpression()), !dbg !9260
  call void @llvm.dbg.declare(metadata %struct.acpi_dep_data** %dep, metadata !9261, metadata !DIExpression()), !dbg !9262
  call void @llvm.dbg.declare(metadata %struct.acpi_handle_list* %dep_devices, metadata !9263, metadata !DIExpression()), !dbg !9271
  call void @llvm.dbg.declare(metadata i32* %status, metadata !9272, metadata !DIExpression()), !dbg !9273
  call void @llvm.dbg.declare(metadata i32* %i, metadata !9274, metadata !DIExpression()), !dbg !9275
  %0 = load %struct.acpi_device*, %struct.acpi_device** %adev.addr, align 8, !dbg !9276
  %dep_unmet = getelementptr inbounds %struct.acpi_device, %struct.acpi_device* %0, i32 0, i32 23, !dbg !9277
  store i32 0, i32* %dep_unmet, align 4, !dbg !9278
  %1 = load %struct.acpi_device*, %struct.acpi_device** %adev.addr, align 8, !dbg !9279
  %handle = getelementptr inbounds %struct.acpi_device, %struct.acpi_device* %1, i32 0, i32 1, !dbg !9281
  %2 = load i8*, i8** %handle, align 8, !dbg !9281
  %call = call zeroext i1 @acpi_has_method(i8* %2, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.76, i64 0, i64 0)) #9, !dbg !9282
  br i1 %call, label %if.end, label %if.then, !dbg !9283

if.then:                                          ; preds = %entry
  br label %for.end, !dbg !9284

if.end:                                           ; preds = %entry
  %3 = load %struct.acpi_device*, %struct.acpi_device** %adev.addr, align 8, !dbg !9285
  %handle1 = getelementptr inbounds %struct.acpi_device, %struct.acpi_device* %3, i32 0, i32 1, !dbg !9286
  %4 = load i8*, i8** %handle1, align 8, !dbg !9286
  %call2 = call i32 @acpi_evaluate_reference(i8* %4, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.76, i64 0, i64 0), %struct.acpi_object_list* null, %struct.acpi_handle_list* %dep_devices) #9, !dbg !9287
  store i32 %call2, i32* %status, align 4, !dbg !9288
  %5 = load i32, i32* %status, align 4, !dbg !9289
  %tobool = icmp ne i32 %5, 0, !dbg !9289
  br i1 %tobool, label %if.then3, label %if.end4, !dbg !9291

if.then3:                                         ; preds = %if.end
  br label %for.end, !dbg !9292

if.end4:                                          ; preds = %if.end
  store i32 0, i32* %i, align 4, !dbg !9294
  br label %for.cond, !dbg !9296

for.cond:                                         ; preds = %for.inc, %if.end4
  %6 = load i32, i32* %i, align 4, !dbg !9297
  %count = getelementptr inbounds %struct.acpi_handle_list, %struct.acpi_handle_list* %dep_devices, i32 0, i32 0, !dbg !9299
  %7 = load i32, i32* %count, align 8, !dbg !9299
  %cmp = icmp ult i32 %6, %7, !dbg !9300
  br i1 %cmp, label %for.body, label %for.end, !dbg !9301

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.acpi_device_info** %info, metadata !9302, metadata !DIExpression()), !dbg !9304
  call void @llvm.dbg.declare(metadata i32* %skip, metadata !9305, metadata !DIExpression()), !dbg !9306
  %handles = getelementptr inbounds %struct.acpi_handle_list, %struct.acpi_handle_list* %dep_devices, i32 0, i32 1, !dbg !9307
  %8 = load i32, i32* %i, align 4, !dbg !9308
  %idxprom = sext i32 %8 to i64, !dbg !9309
  %arrayidx = getelementptr [10 x i8*], [10 x i8*]* %handles, i64 0, i64 %idxprom, !dbg !9309
  %9 = load i8*, i8** %arrayidx, align 8, !dbg !9309
  %call5 = call i32 @acpi_get_object_info(i8* %9, %struct.acpi_device_info** %info) #9, !dbg !9310
  store i32 %call5, i32* %status, align 4, !dbg !9311
  %10 = load i32, i32* %status, align 4, !dbg !9312
  %tobool6 = icmp ne i32 %10, 0, !dbg !9312
  br i1 %tobool6, label %if.then7, label %if.end8, !dbg !9314

if.then7:                                         ; preds = %for.body
  br label %for.inc, !dbg !9315

if.end8:                                          ; preds = %for.body
  %11 = load %struct.acpi_device_info*, %struct.acpi_device_info** %info, align 8, !dbg !9317
  %valid = getelementptr inbounds %struct.acpi_device_info, %struct.acpi_device_info* %11, i32 0, i32 4, !dbg !9318
  %12 = load i16, i16* %valid, align 2, !dbg !9318
  %conv = zext i16 %12 to i32, !dbg !9317
  %and = and i32 %conv, 4, !dbg !9319
  %tobool9 = icmp ne i32 %and, 0, !dbg !9319
  br i1 %tobool9, label %land.rhs, label %land.end, !dbg !9320

land.rhs:                                         ; preds = %if.end8
  %13 = load %struct.acpi_device_info*, %struct.acpi_device_info** %info, align 8, !dbg !9321
  %hardware_id = getelementptr inbounds %struct.acpi_device_info, %struct.acpi_device_info* %13, i32 0, i32 9, !dbg !9322
  %string = getelementptr inbounds %struct.acpi_pnp_device_id, %struct.acpi_pnp_device_id* %hardware_id, i32 0, i32 1, !dbg !9323
  %14 = load i8*, i8** %string, align 8, !dbg !9323
  %call10 = call i32 @strcmp(i8* %14, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.77, i64 0, i64 0)) #9, !dbg !9324
  %tobool11 = icmp ne i32 %call10, 0, !dbg !9325
  %lnot = xor i1 %tobool11, true, !dbg !9325
  br label %land.end

land.end:                                         ; preds = %land.rhs, %if.end8
  %15 = phi i1 [ false, %if.end8 ], [ %lnot, %land.rhs ], !dbg !9326
  %land.ext = zext i1 %15 to i32, !dbg !9320
  store i32 %land.ext, i32* %skip, align 4, !dbg !9327
  %16 = load %struct.acpi_device_info*, %struct.acpi_device_info** %info, align 8, !dbg !9328
  %17 = bitcast %struct.acpi_device_info* %16 to i8*, !dbg !9328
  call void @kfree(i8* %17) #9, !dbg !9329
  %18 = load i32, i32* %skip, align 4, !dbg !9330
  %tobool12 = icmp ne i32 %18, 0, !dbg !9330
  br i1 %tobool12, label %if.then13, label %if.end14, !dbg !9332

if.then13:                                        ; preds = %land.end
  br label %for.inc, !dbg !9333

if.end14:                                         ; preds = %land.end
  %call15 = call i8* @kzalloc(i64 32, i32 3264) #9, !dbg !9334
  %19 = bitcast i8* %call15 to %struct.acpi_dep_data*, !dbg !9334
  store %struct.acpi_dep_data* %19, %struct.acpi_dep_data** %dep, align 8, !dbg !9335
  %20 = load %struct.acpi_dep_data*, %struct.acpi_dep_data** %dep, align 8, !dbg !9336
  %tobool16 = icmp ne %struct.acpi_dep_data* %20, null, !dbg !9336
  br i1 %tobool16, label %if.end18, label %if.then17, !dbg !9338

if.then17:                                        ; preds = %if.end14
  br label %for.end, !dbg !9339

if.end18:                                         ; preds = %if.end14
  %handles19 = getelementptr inbounds %struct.acpi_handle_list, %struct.acpi_handle_list* %dep_devices, i32 0, i32 1, !dbg !9340
  %21 = load i32, i32* %i, align 4, !dbg !9341
  %idxprom20 = sext i32 %21 to i64, !dbg !9342
  %arrayidx21 = getelementptr [10 x i8*], [10 x i8*]* %handles19, i64 0, i64 %idxprom20, !dbg !9342
  %22 = load i8*, i8** %arrayidx21, align 8, !dbg !9342
  %23 = load %struct.acpi_dep_data*, %struct.acpi_dep_data** %dep, align 8, !dbg !9343
  %master = getelementptr inbounds %struct.acpi_dep_data, %struct.acpi_dep_data* %23, i32 0, i32 1, !dbg !9344
  store i8* %22, i8** %master, align 8, !dbg !9345
  %24 = load %struct.acpi_device*, %struct.acpi_device** %adev.addr, align 8, !dbg !9346
  %handle22 = getelementptr inbounds %struct.acpi_device, %struct.acpi_device* %24, i32 0, i32 1, !dbg !9347
  %25 = load i8*, i8** %handle22, align 8, !dbg !9347
  %26 = load %struct.acpi_dep_data*, %struct.acpi_dep_data** %dep, align 8, !dbg !9348
  %slave = getelementptr inbounds %struct.acpi_dep_data, %struct.acpi_dep_data* %26, i32 0, i32 2, !dbg !9349
  store i8* %25, i8** %slave, align 8, !dbg !9350
  %27 = load %struct.acpi_device*, %struct.acpi_device** %adev.addr, align 8, !dbg !9351
  %dep_unmet23 = getelementptr inbounds %struct.acpi_device, %struct.acpi_device* %27, i32 0, i32 23, !dbg !9352
  %28 = load i32, i32* %dep_unmet23, align 4, !dbg !9353
  %inc = add i32 %28, 1, !dbg !9353
  store i32 %inc, i32* %dep_unmet23, align 4, !dbg !9353
  call void @mutex_lock(%struct.mutex* @acpi_dep_list_lock) #9, !dbg !9354
  %29 = load %struct.acpi_dep_data*, %struct.acpi_dep_data** %dep, align 8, !dbg !9355
  %node = getelementptr inbounds %struct.acpi_dep_data, %struct.acpi_dep_data* %29, i32 0, i32 0, !dbg !9356
  call void @list_add_tail(%struct.list_head* %node, %struct.list_head* @acpi_dep_list) #9, !dbg !9357
  call void @mutex_unlock(%struct.mutex* @acpi_dep_list_lock) #9, !dbg !9358
  br label %for.inc, !dbg !9359

for.inc:                                          ; preds = %if.end18, %if.then13, %if.then7
  %30 = load i32, i32* %i, align 4, !dbg !9360
  %inc24 = add i32 %30, 1, !dbg !9360
  store i32 %inc24, i32* %i, align 4, !dbg !9360
  br label %for.cond, !dbg !9361, !llvm.loop !9362

for.end:                                          ; preds = %if.then, %if.then3, %if.then17, %for.cond
  ret void, !dbg !9364
}

; Function Attrs: noredzone
declare dso_local i32 @acpi_get_type(i8*, i32*) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @acpi_device_should_be_hidden(i8* %handle) #0 !dbg !9365 {
entry:
  %retval = alloca i1, align 1
  %handle.addr = alloca i8*, align 8
  %status = alloca i32, align 4
  %res = alloca %struct.resource, align 8
  store i8* %handle, i8** %handle.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %handle.addr, metadata !9366, metadata !DIExpression()), !dbg !9367
  call void @llvm.dbg.declare(metadata i32* %status, metadata !9368, metadata !DIExpression()), !dbg !9369
  call void @llvm.dbg.declare(metadata %struct.resource* %res, metadata !9370, metadata !DIExpression()), !dbg !9371
  %0 = load i64, i64* @spcr_uart_addr, align 8, !dbg !9372
  %tobool = icmp ne i64 %0, 0, !dbg !9372
  br i1 %tobool, label %land.lhs.true, label %if.then, !dbg !9374

land.lhs.true:                                    ; preds = %entry
  %1 = load i8*, i8** %handle.addr, align 8, !dbg !9375
  %call = call zeroext i1 @acpi_has_method(i8* %1, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.23, i64 0, i64 0)) #9, !dbg !9376
  br i1 %call, label %if.end, label %if.then, !dbg !9377

if.then:                                          ; preds = %land.lhs.true, %entry
  store i1 false, i1* %retval, align 1, !dbg !9378
  br label %return, !dbg !9378

if.end:                                           ; preds = %land.lhs.true
  %2 = load i8*, i8** %handle.addr, align 8, !dbg !9379
  %3 = bitcast %struct.resource* %res to i8*, !dbg !9380
  %call1 = call i32 @acpi_walk_resources(i8* %2, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.23, i64 0, i64 0), i32 (%struct.acpi_resource*, i8*)* @acpi_get_resource_memory, i8* %3) #9, !dbg !9381
  store i32 %call1, i32* %status, align 4, !dbg !9382
  %4 = load i32, i32* %status, align 4, !dbg !9383
  %tobool2 = icmp ne i32 %4, 0, !dbg !9383
  br i1 %tobool2, label %if.then3, label %lor.lhs.false, !dbg !9385

lor.lhs.false:                                    ; preds = %if.end
  %start = getelementptr inbounds %struct.resource, %struct.resource* %res, i32 0, i32 0, !dbg !9386
  %5 = load i64, i64* %start, align 8, !dbg !9386
  %6 = load i64, i64* @spcr_uart_addr, align 8, !dbg !9387
  %cmp = icmp ne i64 %5, %6, !dbg !9388
  br i1 %cmp, label %if.then3, label %if.end4, !dbg !9389

if.then3:                                         ; preds = %lor.lhs.false, %if.end
  store i1 false, i1* %retval, align 1, !dbg !9390
  br label %return, !dbg !9390

if.end4:                                          ; preds = %lor.lhs.false
  %7 = load i8*, i8** %handle.addr, align 8, !dbg !9391
  %start5 = getelementptr inbounds %struct.resource, %struct.resource* %res, i32 0, i32 0, !dbg !9391
  call void (i8*, i8*, i8*, ...) @acpi_handle_printk(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.74, i64 0, i64 0), i8* %7, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.75, i64 0, i64 0), i64* %start5) #9, !dbg !9391
  store i1 true, i1* %retval, align 1, !dbg !9392
  br label %return, !dbg !9392

return:                                           ; preds = %if.end4, %if.then3, %if.then
  %8 = load i1, i1* %retval, align 1, !dbg !9393
  ret i1 %8, !dbg !9393
}

; Function Attrs: noredzone
declare dso_local i32 @acpi_bus_get_status_handle(i8*, i64*) #1

; Function Attrs: noredzone
declare dso_local i32 @acpi_walk_resources(i8*, i8*, i32 (%struct.acpi_resource*, i8*)*, i8*) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @acpi_get_resource_memory(%struct.acpi_resource* %ares, i8* %context) #0 !dbg !9394 {
entry:
  %retval = alloca i32, align 4
  %ares.addr = alloca %struct.acpi_resource*, align 8
  %context.addr = alloca i8*, align 8
  %res = alloca %struct.resource*, align 8
  store %struct.acpi_resource* %ares, %struct.acpi_resource** %ares.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.acpi_resource** %ares.addr, metadata !9397, metadata !DIExpression()), !dbg !9398
  store i8* %context, i8** %context.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %context.addr, metadata !9399, metadata !DIExpression()), !dbg !9400
  call void @llvm.dbg.declare(metadata %struct.resource** %res, metadata !9401, metadata !DIExpression()), !dbg !9402
  %0 = load i8*, i8** %context.addr, align 8, !dbg !9403
  %1 = bitcast i8* %0 to %struct.resource*, !dbg !9403
  store %struct.resource* %1, %struct.resource** %res, align 8, !dbg !9402
  %2 = load %struct.acpi_resource*, %struct.acpi_resource** %ares.addr, align 8, !dbg !9404
  %3 = load %struct.resource*, %struct.resource** %res, align 8, !dbg !9406
  %call = call zeroext i1 @acpi_dev_resource_memory(%struct.acpi_resource* %2, %struct.resource* %3) #9, !dbg !9407
  br i1 %call, label %if.then, label %if.end, !dbg !9408

if.then:                                          ; preds = %entry
  store i32 16387, i32* %retval, align 4, !dbg !9409
  br label %return, !dbg !9409

if.end:                                           ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !9410
  br label %return, !dbg !9410

return:                                           ; preds = %if.end, %if.then
  %4 = load i32, i32* %retval, align 4, !dbg !9411
  ret i32 %4, !dbg !9411
}

; Function Attrs: noredzone
declare dso_local zeroext i1 @acpi_dev_resource_memory(%struct.acpi_resource*, %struct.resource*) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @is_ejectable_bay(%struct.acpi_device* %adev) #0 !dbg !9412 {
entry:
  %retval = alloca i1, align 1
  %adev.addr = alloca %struct.acpi_device*, align 8
  %handle = alloca i8*, align 8
  store %struct.acpi_device* %adev, %struct.acpi_device** %adev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.acpi_device** %adev.addr, metadata !9413, metadata !DIExpression()), !dbg !9414
  call void @llvm.dbg.declare(metadata i8** %handle, metadata !9415, metadata !DIExpression()), !dbg !9416
  %0 = load %struct.acpi_device*, %struct.acpi_device** %adev.addr, align 8, !dbg !9417
  %handle1 = getelementptr inbounds %struct.acpi_device, %struct.acpi_device* %0, i32 0, i32 1, !dbg !9418
  %1 = load i8*, i8** %handle1, align 8, !dbg !9418
  store i8* %1, i8** %handle, align 8, !dbg !9416
  %2 = load i8*, i8** %handle, align 8, !dbg !9419
  %call = call zeroext i1 @acpi_has_method(i8* %2, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.13, i64 0, i64 0)) #9, !dbg !9421
  br i1 %call, label %land.lhs.true, label %if.end, !dbg !9422

land.lhs.true:                                    ; preds = %entry
  %3 = load %struct.acpi_device*, %struct.acpi_device** %adev.addr, align 8, !dbg !9423
  %call2 = call zeroext i1 @acpi_device_is_battery(%struct.acpi_device* %3) #9, !dbg !9424
  br i1 %call2, label %if.then, label %if.end, !dbg !9425

if.then:                                          ; preds = %land.lhs.true
  store i1 true, i1* %retval, align 1, !dbg !9426
  br label %return, !dbg !9426

if.end:                                           ; preds = %land.lhs.true, %entry
  %4 = load i8*, i8** %handle, align 8, !dbg !9427
  %call3 = call zeroext i1 @acpi_bay_match(i8* %4) #9, !dbg !9428
  store i1 %call3, i1* %retval, align 1, !dbg !9429
  br label %return, !dbg !9429

return:                                           ; preds = %if.end, %if.then
  %5 = load i1, i1* %retval, align 1, !dbg !9430
  ret i1 %5, !dbg !9430
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @acpi_dock_add(%struct.acpi_device* %adev) #0 !dbg !9431 {
entry:
  %adev.addr = alloca %struct.acpi_device*, align 8
  store %struct.acpi_device* %adev, %struct.acpi_device** %adev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.acpi_device** %adev.addr, metadata !9432, metadata !DIExpression()), !dbg !9433
  ret void, !dbg !9434
}

; Function Attrs: noredzone
declare dso_local i32 @acpi_evaluate_reference(i8*, i8*, %struct.acpi_object_list*, %struct.acpi_handle_list*) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @acpi_bus_get_power_flags(%struct.acpi_device* %device) #0 !dbg !9435 {
entry:
  %device.addr = alloca %struct.acpi_device*, align 8
  %i = alloca i32, align 4
  store %struct.acpi_device* %device, %struct.acpi_device** %device.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.acpi_device** %device.addr, metadata !9436, metadata !DIExpression()), !dbg !9437
  call void @llvm.dbg.declare(metadata i32* %i, metadata !9438, metadata !DIExpression()), !dbg !9439
  %0 = load %struct.acpi_device*, %struct.acpi_device** %device.addr, align 8, !dbg !9440
  %handle = getelementptr inbounds %struct.acpi_device, %struct.acpi_device* %0, i32 0, i32 1, !dbg !9442
  %1 = load i8*, i8** %handle, align 8, !dbg !9442
  %call = call zeroext i1 @acpi_has_method(i8* %1, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.78, i64 0, i64 0)) #9, !dbg !9443
  br i1 %call, label %if.end, label %land.lhs.true, !dbg !9444

land.lhs.true:                                    ; preds = %entry
  %2 = load %struct.acpi_device*, %struct.acpi_device** %device.addr, align 8, !dbg !9445
  %handle1 = getelementptr inbounds %struct.acpi_device, %struct.acpi_device* %2, i32 0, i32 1, !dbg !9446
  %3 = load i8*, i8** %handle1, align 8, !dbg !9446
  %call2 = call zeroext i1 @acpi_has_method(i8* %3, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.79, i64 0, i64 0)) #9, !dbg !9447
  br i1 %call2, label %if.end, label %if.then, !dbg !9448

if.then:                                          ; preds = %land.lhs.true
  br label %if.end81, !dbg !9449

if.end:                                           ; preds = %land.lhs.true, %entry
  %4 = load %struct.acpi_device*, %struct.acpi_device** %device.addr, align 8, !dbg !9450
  %flags = getelementptr inbounds %struct.acpi_device, %struct.acpi_device* %4, i32 0, i32 9, !dbg !9451
  %5 = bitcast %struct.acpi_device_flags* %flags to i32*, !dbg !9452
  %bf.load = load i32, i32* %5, align 4, !dbg !9453
  %bf.clear = and i32 %bf.load, -9, !dbg !9453
  %bf.set = or i32 %bf.clear, 8, !dbg !9453
  store i32 %bf.set, i32* %5, align 4, !dbg !9453
  %6 = load %struct.acpi_device*, %struct.acpi_device** %device.addr, align 8, !dbg !9454
  %handle3 = getelementptr inbounds %struct.acpi_device, %struct.acpi_device* %6, i32 0, i32 1, !dbg !9456
  %7 = load i8*, i8** %handle3, align 8, !dbg !9456
  %call4 = call zeroext i1 @acpi_has_method(i8* %7, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.80, i64 0, i64 0)) #9, !dbg !9457
  br i1 %call4, label %if.then5, label %if.end10, !dbg !9458

if.then5:                                         ; preds = %if.end
  %8 = load %struct.acpi_device*, %struct.acpi_device** %device.addr, align 8, !dbg !9459
  %power = getelementptr inbounds %struct.acpi_device, %struct.acpi_device* %8, i32 0, i32 11, !dbg !9460
  %flags6 = getelementptr inbounds %struct.acpi_device_power, %struct.acpi_device_power* %power, i32 0, i32 1, !dbg !9461
  %9 = bitcast %struct.acpi_device_power_flags* %flags6 to i32*, !dbg !9462
  %bf.load7 = load i32, i32* %9, align 4, !dbg !9463
  %bf.clear8 = and i32 %bf.load7, -2, !dbg !9463
  %bf.set9 = or i32 %bf.clear8, 1, !dbg !9463
  store i32 %bf.set9, i32* %9, align 4, !dbg !9463
  br label %if.end10, !dbg !9459

if.end10:                                         ; preds = %if.then5, %if.end
  %10 = load %struct.acpi_device*, %struct.acpi_device** %device.addr, align 8, !dbg !9464
  %handle11 = getelementptr inbounds %struct.acpi_device, %struct.acpi_device* %10, i32 0, i32 1, !dbg !9466
  %11 = load i8*, i8** %handle11, align 8, !dbg !9466
  %call12 = call zeroext i1 @acpi_has_method(i8* %11, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.81, i64 0, i64 0)) #9, !dbg !9467
  br i1 %call12, label %if.then13, label %if.end19, !dbg !9468

if.then13:                                        ; preds = %if.end10
  %12 = load %struct.acpi_device*, %struct.acpi_device** %device.addr, align 8, !dbg !9469
  %power14 = getelementptr inbounds %struct.acpi_device, %struct.acpi_device* %12, i32 0, i32 11, !dbg !9470
  %flags15 = getelementptr inbounds %struct.acpi_device_power, %struct.acpi_device_power* %power14, i32 0, i32 1, !dbg !9471
  %13 = bitcast %struct.acpi_device_power_flags* %flags15 to i32*, !dbg !9472
  %bf.load16 = load i32, i32* %13, align 4, !dbg !9473
  %bf.clear17 = and i32 %bf.load16, -5, !dbg !9473
  %bf.set18 = or i32 %bf.clear17, 4, !dbg !9473
  store i32 %bf.set18, i32* %13, align 4, !dbg !9473
  br label %if.end19, !dbg !9469

if.end19:                                         ; preds = %if.then13, %if.end10
  %14 = load %struct.acpi_device*, %struct.acpi_device** %device.addr, align 8, !dbg !9474
  %handle20 = getelementptr inbounds %struct.acpi_device, %struct.acpi_device* %14, i32 0, i32 1, !dbg !9476
  %15 = load i8*, i8** %handle20, align 8, !dbg !9476
  %call21 = call zeroext i1 @acpi_has_method(i8* %15, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.82, i64 0, i64 0)) #9, !dbg !9477
  br i1 %call21, label %if.then22, label %if.end28, !dbg !9478

if.then22:                                        ; preds = %if.end19
  %16 = load %struct.acpi_device*, %struct.acpi_device** %device.addr, align 8, !dbg !9479
  %power23 = getelementptr inbounds %struct.acpi_device, %struct.acpi_device* %16, i32 0, i32 11, !dbg !9480
  %flags24 = getelementptr inbounds %struct.acpi_device_power, %struct.acpi_device_power* %power23, i32 0, i32 1, !dbg !9481
  %17 = bitcast %struct.acpi_device_power_flags* %flags24 to i32*, !dbg !9482
  %bf.load25 = load i32, i32* %17, align 4, !dbg !9483
  %bf.clear26 = and i32 %bf.load25, -33, !dbg !9483
  %bf.set27 = or i32 %bf.clear26, 32, !dbg !9483
  store i32 %bf.set27, i32* %17, align 4, !dbg !9483
  br label %if.end28, !dbg !9479

if.end28:                                         ; preds = %if.then22, %if.end19
  store i32 0, i32* %i, align 4, !dbg !9484
  br label %for.cond, !dbg !9486

for.cond:                                         ; preds = %for.inc, %if.end28
  %18 = load i32, i32* %i, align 4, !dbg !9487
  %cmp = icmp ule i32 %18, 3, !dbg !9489
  br i1 %cmp, label %for.body, label %for.end, !dbg !9490

for.body:                                         ; preds = %for.cond
  %19 = load %struct.acpi_device*, %struct.acpi_device** %device.addr, align 8, !dbg !9491
  %20 = load i32, i32* %i, align 4, !dbg !9492
  call void @acpi_bus_init_power_state(%struct.acpi_device* %19, i32 %20) #9, !dbg !9493
  br label %for.inc, !dbg !9493

for.inc:                                          ; preds = %for.body
  %21 = load i32, i32* %i, align 4, !dbg !9494
  %inc = add i32 %21, 1, !dbg !9494
  store i32 %inc, i32* %i, align 4, !dbg !9494
  br label %for.cond, !dbg !9495, !llvm.loop !9496

for.end:                                          ; preds = %for.cond
  %22 = load %struct.acpi_device*, %struct.acpi_device** %device.addr, align 8, !dbg !9498
  %power29 = getelementptr inbounds %struct.acpi_device, %struct.acpi_device* %22, i32 0, i32 11, !dbg !9499
  %states = getelementptr inbounds %struct.acpi_device_power, %struct.acpi_device_power* %power29, i32 0, i32 2, !dbg !9500
  %arrayidx = getelementptr [5 x %struct.acpi_device_power_state], [5 x %struct.acpi_device_power_state]* %states, i64 0, i64 4, !dbg !9498
  %resources = getelementptr inbounds %struct.acpi_device_power_state, %struct.acpi_device_power_state* %arrayidx, i32 0, i32 3, !dbg !9501
  call void @INIT_LIST_HEAD(%struct.list_head* %resources) #9, !dbg !9502
  %23 = load %struct.acpi_device*, %struct.acpi_device** %device.addr, align 8, !dbg !9503
  %power30 = getelementptr inbounds %struct.acpi_device, %struct.acpi_device* %23, i32 0, i32 11, !dbg !9504
  %states31 = getelementptr inbounds %struct.acpi_device_power, %struct.acpi_device_power* %power30, i32 0, i32 2, !dbg !9505
  %arrayidx32 = getelementptr [5 x %struct.acpi_device_power_state], [5 x %struct.acpi_device_power_state]* %states31, i64 0, i64 0, !dbg !9503
  %flags33 = getelementptr inbounds %struct.acpi_device_power_state, %struct.acpi_device_power_state* %arrayidx32, i32 0, i32 0, !dbg !9506
  %24 = bitcast %struct.anon.72* %flags33 to i8*, !dbg !9507
  %bf.load34 = load i8, i8* %24, align 8, !dbg !9508
  %bf.clear35 = and i8 %bf.load34, -2, !dbg !9508
  %bf.set36 = or i8 %bf.clear35, 1, !dbg !9508
  store i8 %bf.set36, i8* %24, align 8, !dbg !9508
  %25 = load %struct.acpi_device*, %struct.acpi_device** %device.addr, align 8, !dbg !9509
  %power37 = getelementptr inbounds %struct.acpi_device, %struct.acpi_device* %25, i32 0, i32 11, !dbg !9510
  %states38 = getelementptr inbounds %struct.acpi_device_power, %struct.acpi_device_power* %power37, i32 0, i32 2, !dbg !9511
  %arrayidx39 = getelementptr [5 x %struct.acpi_device_power_state], [5 x %struct.acpi_device_power_state]* %states38, i64 0, i64 0, !dbg !9509
  %power40 = getelementptr inbounds %struct.acpi_device_power_state, %struct.acpi_device_power_state* %arrayidx39, i32 0, i32 1, !dbg !9512
  store i32 100, i32* %power40, align 4, !dbg !9513
  %26 = load %struct.acpi_device*, %struct.acpi_device** %device.addr, align 8, !dbg !9514
  %power41 = getelementptr inbounds %struct.acpi_device, %struct.acpi_device* %26, i32 0, i32 11, !dbg !9515
  %states42 = getelementptr inbounds %struct.acpi_device_power, %struct.acpi_device_power* %power41, i32 0, i32 2, !dbg !9516
  %arrayidx43 = getelementptr [5 x %struct.acpi_device_power_state], [5 x %struct.acpi_device_power_state]* %states42, i64 0, i64 3, !dbg !9514
  %flags44 = getelementptr inbounds %struct.acpi_device_power_state, %struct.acpi_device_power_state* %arrayidx43, i32 0, i32 0, !dbg !9517
  %27 = bitcast %struct.anon.72* %flags44 to i8*, !dbg !9518
  %bf.load45 = load i8, i8* %27, align 8, !dbg !9519
  %bf.clear46 = and i8 %bf.load45, -2, !dbg !9519
  %bf.set47 = or i8 %bf.clear46, 1, !dbg !9519
  store i8 %bf.set47, i8* %27, align 8, !dbg !9519
  %28 = load %struct.acpi_device*, %struct.acpi_device** %device.addr, align 8, !dbg !9520
  %power48 = getelementptr inbounds %struct.acpi_device, %struct.acpi_device* %28, i32 0, i32 11, !dbg !9522
  %states49 = getelementptr inbounds %struct.acpi_device_power, %struct.acpi_device_power* %power48, i32 0, i32 2, !dbg !9523
  %arrayidx50 = getelementptr [5 x %struct.acpi_device_power_state], [5 x %struct.acpi_device_power_state]* %states49, i64 0, i64 0, !dbg !9520
  %resources51 = getelementptr inbounds %struct.acpi_device_power_state, %struct.acpi_device_power_state* %arrayidx50, i32 0, i32 3, !dbg !9524
  %call52 = call i32 @list_empty(%struct.list_head* %resources51) #9, !dbg !9525
  %tobool = icmp ne i32 %call52, 0, !dbg !9525
  br i1 %tobool, label %if.end74, label %if.then53, !dbg !9526

if.then53:                                        ; preds = %for.end
  %29 = load %struct.acpi_device*, %struct.acpi_device** %device.addr, align 8, !dbg !9527
  %power54 = getelementptr inbounds %struct.acpi_device, %struct.acpi_device* %29, i32 0, i32 11, !dbg !9529
  %flags55 = getelementptr inbounds %struct.acpi_device_power, %struct.acpi_device_power* %power54, i32 0, i32 1, !dbg !9530
  %30 = bitcast %struct.acpi_device_power_flags* %flags55 to i32*, !dbg !9531
  %bf.load56 = load i32, i32* %30, align 4, !dbg !9532
  %bf.clear57 = and i32 %bf.load56, -3, !dbg !9532
  %bf.set58 = or i32 %bf.clear57, 2, !dbg !9532
  store i32 %bf.set58, i32* %30, align 4, !dbg !9532
  %31 = load %struct.acpi_device*, %struct.acpi_device** %device.addr, align 8, !dbg !9533
  %power59 = getelementptr inbounds %struct.acpi_device, %struct.acpi_device* %31, i32 0, i32 11, !dbg !9535
  %states60 = getelementptr inbounds %struct.acpi_device_power, %struct.acpi_device_power* %power59, i32 0, i32 2, !dbg !9536
  %arrayidx61 = getelementptr [5 x %struct.acpi_device_power_state], [5 x %struct.acpi_device_power_state]* %states60, i64 0, i64 3, !dbg !9533
  %resources62 = getelementptr inbounds %struct.acpi_device_power_state, %struct.acpi_device_power_state* %arrayidx61, i32 0, i32 3, !dbg !9537
  %call63 = call i32 @list_empty(%struct.list_head* %resources62) #9, !dbg !9538
  %tobool64 = icmp ne i32 %call63, 0, !dbg !9538
  br i1 %tobool64, label %if.end73, label %if.then65, !dbg !9539

if.then65:                                        ; preds = %if.then53
  %32 = load %struct.acpi_device*, %struct.acpi_device** %device.addr, align 8, !dbg !9540
  %power66 = getelementptr inbounds %struct.acpi_device, %struct.acpi_device* %32, i32 0, i32 11, !dbg !9541
  %states67 = getelementptr inbounds %struct.acpi_device_power, %struct.acpi_device_power* %power66, i32 0, i32 2, !dbg !9542
  %arrayidx68 = getelementptr [5 x %struct.acpi_device_power_state], [5 x %struct.acpi_device_power_state]* %states67, i64 0, i64 4, !dbg !9540
  %flags69 = getelementptr inbounds %struct.acpi_device_power_state, %struct.acpi_device_power_state* %arrayidx68, i32 0, i32 0, !dbg !9543
  %33 = bitcast %struct.anon.72* %flags69 to i8*, !dbg !9544
  %bf.load70 = load i8, i8* %33, align 8, !dbg !9545
  %bf.clear71 = and i8 %bf.load70, -2, !dbg !9545
  %bf.set72 = or i8 %bf.clear71, 1, !dbg !9545
  store i8 %bf.set72, i8* %33, align 8, !dbg !9545
  br label %if.end73, !dbg !9540

if.end73:                                         ; preds = %if.then65, %if.then53
  br label %if.end74, !dbg !9546

if.end74:                                         ; preds = %if.end73, %for.end
  %34 = load %struct.acpi_device*, %struct.acpi_device** %device.addr, align 8, !dbg !9547
  %call75 = call i32 @acpi_bus_init_power(%struct.acpi_device* %34) #9, !dbg !9549
  %tobool76 = icmp ne i32 %call75, 0, !dbg !9549
  br i1 %tobool76, label %if.then77, label %if.end81, !dbg !9550

if.then77:                                        ; preds = %if.end74
  %35 = load %struct.acpi_device*, %struct.acpi_device** %device.addr, align 8, !dbg !9551
  %flags78 = getelementptr inbounds %struct.acpi_device, %struct.acpi_device* %35, i32 0, i32 9, !dbg !9552
  %36 = bitcast %struct.acpi_device_flags* %flags78 to i32*, !dbg !9553
  %bf.load79 = load i32, i32* %36, align 4, !dbg !9554
  %bf.clear80 = and i32 %bf.load79, -9, !dbg !9554
  store i32 %bf.clear80, i32* %36, align 4, !dbg !9554
  br label %if.end81, !dbg !9551

if.end81:                                         ; preds = %if.then, %if.then77, %if.end74
  ret void, !dbg !9555
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @acpi_bus_get_wakeup_device_flags(%struct.acpi_device* %device) #0 !dbg !9556 {
entry:
  %device.addr = alloca %struct.acpi_device*, align 8
  %err = alloca i32, align 4
  %tmp = alloca i32, align 4
  store %struct.acpi_device* %device, %struct.acpi_device** %device.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.acpi_device** %device.addr, metadata !9557, metadata !DIExpression()), !dbg !9558
  call void @llvm.dbg.declare(metadata i32* %err, metadata !9559, metadata !DIExpression()), !dbg !9560
  %0 = load %struct.acpi_device*, %struct.acpi_device** %device.addr, align 8, !dbg !9561
  %handle = getelementptr inbounds %struct.acpi_device, %struct.acpi_device* %0, i32 0, i32 1, !dbg !9563
  %1 = load i8*, i8** %handle, align 8, !dbg !9563
  %call = call zeroext i1 @acpi_has_method(i8* %1, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.83, i64 0, i64 0)) #9, !dbg !9564
  br i1 %call, label %if.end, label %if.then, !dbg !9565

if.then:                                          ; preds = %entry
  br label %if.end9, !dbg !9566

if.end:                                           ; preds = %entry
  %2 = load %struct.acpi_device*, %struct.acpi_device** %device.addr, align 8, !dbg !9567
  %call1 = call i32 @acpi_bus_extract_wakeup_device_power_package(%struct.acpi_device* %2) #9, !dbg !9568
  store i32 %call1, i32* %err, align 4, !dbg !9569
  %3 = load i32, i32* %err, align 4, !dbg !9570
  %tobool = icmp ne i32 %3, 0, !dbg !9570
  br i1 %tobool, label %if.then2, label %if.end3, !dbg !9572

if.then2:                                         ; preds = %if.end
  %4 = load %struct.acpi_device*, %struct.acpi_device** %device.addr, align 8, !dbg !9573
  %dev = getelementptr inbounds %struct.acpi_device, %struct.acpi_device* %4, i32 0, i32 21, !dbg !9573
  %5 = load i32, i32* %err, align 4, !dbg !9573
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %dev, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.84, i64 0, i64 0), i32 %5) #10, !dbg !9573
  br label %if.end9, !dbg !9575

if.end3:                                          ; preds = %if.end
  %6 = load %struct.acpi_device*, %struct.acpi_device** %device.addr, align 8, !dbg !9576
  %call4 = call zeroext i1 @acpi_wakeup_gpe_init(%struct.acpi_device* %6) #9, !dbg !9577
  %conv = zext i1 %call4 to i8, !dbg !9577
  %7 = load %struct.acpi_device*, %struct.acpi_device** %device.addr, align 8, !dbg !9578
  %wakeup = getelementptr inbounds %struct.acpi_device, %struct.acpi_device* %7, i32 0, i32 12, !dbg !9579
  %flags = getelementptr inbounds %struct.acpi_device_wakeup, %struct.acpi_device_wakeup* %wakeup, i32 0, i32 4, !dbg !9580
  %8 = bitcast %struct.acpi_device_wakeup_flags* %flags to i8*, !dbg !9581
  %bf.load = load i8, i8* %8, align 8, !dbg !9582
  %bf.value = and i8 %conv, 1, !dbg !9582
  %bf.clear = and i8 %bf.load, -2, !dbg !9582
  %bf.set = or i8 %bf.clear, %bf.value, !dbg !9582
  store i8 %bf.set, i8* %8, align 8, !dbg !9582
  %9 = load %struct.acpi_device*, %struct.acpi_device** %device.addr, align 8, !dbg !9583
  %wakeup5 = getelementptr inbounds %struct.acpi_device, %struct.acpi_device* %9, i32 0, i32 12, !dbg !9584
  %prepare_count = getelementptr inbounds %struct.acpi_device_wakeup, %struct.acpi_device_wakeup* %wakeup5, i32 0, i32 7, !dbg !9585
  store i32 0, i32* %prepare_count, align 8, !dbg !9586
  %10 = load %struct.acpi_device*, %struct.acpi_device** %device.addr, align 8, !dbg !9587
  %call6 = call i32 @acpi_device_sleep_wake(%struct.acpi_device* %10, i32 0, i32 0, i32 0) #9, !dbg !9588
  store i32 %call6, i32* %err, align 4, !dbg !9589
  %11 = load i32, i32* %err, align 4, !dbg !9590
  %tobool7 = icmp ne i32 %11, 0, !dbg !9590
  br i1 %tobool7, label %if.then8, label %if.end9, !dbg !9592

if.then8:                                         ; preds = %if.end3
  store i32 0, i32* %tmp, align 4, !dbg !9593
  %12 = load i32, i32* %tmp, align 4, !dbg !9596
  br label %if.end9, !dbg !9597

if.end9:                                          ; preds = %if.then, %if.then2, %if.then8, %if.end3
  ret void, !dbg !9598
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @acpi_device_release(%struct.device* %dev) #0 !dbg !9599 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %acpi_dev = alloca %struct.acpi_device*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.acpi_device*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !9600, metadata !DIExpression()), !dbg !9601
  call void @llvm.dbg.declare(metadata %struct.acpi_device** %acpi_dev, metadata !9602, metadata !DIExpression()), !dbg !9603
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !9604, metadata !DIExpression()), !dbg !9606
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !9606
  %1 = bitcast %struct.device* %0 to i8*, !dbg !9606
  store i8* %1, i8** %__mptr, align 8, !dbg !9606
  br label %do.body, !dbg !9606

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !9607

do.end:                                           ; preds = %do.body
  %2 = load i8*, i8** %__mptr, align 8, !dbg !9606
  %add.ptr = getelementptr i8, i8* %2, i64 -608, !dbg !9606
  %3 = bitcast i8* %add.ptr to %struct.acpi_device*, !dbg !9606
  store %struct.acpi_device* %3, %struct.acpi_device** %tmp, align 8, !dbg !9607
  %4 = load %struct.acpi_device*, %struct.acpi_device** %tmp, align 8, !dbg !9606
  store %struct.acpi_device* %4, %struct.acpi_device** %acpi_dev, align 8, !dbg !9603
  %5 = load %struct.acpi_device*, %struct.acpi_device** %acpi_dev, align 8, !dbg !9609
  call void @acpi_free_properties(%struct.acpi_device* %5) #9, !dbg !9610
  %6 = load %struct.acpi_device*, %struct.acpi_device** %acpi_dev, align 8, !dbg !9611
  %pnp = getelementptr inbounds %struct.acpi_device, %struct.acpi_device* %6, i32 0, i32 10, !dbg !9612
  call void @acpi_free_pnp_ids(%struct.acpi_device_pnp* %pnp) #9, !dbg !9613
  %7 = load %struct.acpi_device*, %struct.acpi_device** %acpi_dev, align 8, !dbg !9614
  call void @acpi_free_power_resources_lists(%struct.acpi_device* %7) #9, !dbg !9615
  %8 = load %struct.acpi_device*, %struct.acpi_device** %acpi_dev, align 8, !dbg !9616
  %9 = bitcast %struct.acpi_device* %8 to i8*, !dbg !9616
  call void @kfree(i8* %9) #9, !dbg !9617
  ret void, !dbg !9618
}

; Function Attrs: noredzone
declare dso_local void @acpi_power_add_remove_device(%struct.acpi_device*, i1 zeroext) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @acpi_bus_init_power_state(%struct.acpi_device* %device, i32 %state) #0 !dbg !9619 {
entry:
  %device.addr = alloca %struct.acpi_device*, align 8
  %state.addr = alloca i32, align 4
  %ps = alloca %struct.acpi_device_power_state*, align 8
  %pathname = alloca [5 x i8], align 1
  %buffer = alloca %struct.acpi_buffer, align 8
  %status = alloca i32, align 4
  %package = alloca %union.acpi_object*, align 8
  store %struct.acpi_device* %device, %struct.acpi_device** %device.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.acpi_device** %device.addr, metadata !9622, metadata !DIExpression()), !dbg !9623
  store i32 %state, i32* %state.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %state.addr, metadata !9624, metadata !DIExpression()), !dbg !9625
  call void @llvm.dbg.declare(metadata %struct.acpi_device_power_state** %ps, metadata !9626, metadata !DIExpression()), !dbg !9628
  %0 = load %struct.acpi_device*, %struct.acpi_device** %device.addr, align 8, !dbg !9629
  %power = getelementptr inbounds %struct.acpi_device, %struct.acpi_device* %0, i32 0, i32 11, !dbg !9630
  %states = getelementptr inbounds %struct.acpi_device_power, %struct.acpi_device_power* %power, i32 0, i32 2, !dbg !9631
  %1 = load i32, i32* %state.addr, align 4, !dbg !9632
  %idxprom = sext i32 %1 to i64, !dbg !9629
  %arrayidx = getelementptr [5 x %struct.acpi_device_power_state], [5 x %struct.acpi_device_power_state]* %states, i64 0, i64 %idxprom, !dbg !9629
  store %struct.acpi_device_power_state* %arrayidx, %struct.acpi_device_power_state** %ps, align 8, !dbg !9628
  call void @llvm.dbg.declare(metadata [5 x i8]* %pathname, metadata !9633, metadata !DIExpression()), !dbg !9634
  %arrayinit.begin = getelementptr inbounds [5 x i8], [5 x i8]* %pathname, i64 0, i64 0, !dbg !9635
  store i8 95, i8* %arrayinit.begin, align 1, !dbg !9635
  %arrayinit.element = getelementptr inbounds i8, i8* %arrayinit.begin, i64 1, !dbg !9635
  store i8 80, i8* %arrayinit.element, align 1, !dbg !9635
  %arrayinit.element1 = getelementptr inbounds i8, i8* %arrayinit.element, i64 1, !dbg !9635
  store i8 82, i8* %arrayinit.element1, align 1, !dbg !9635
  %arrayinit.element2 = getelementptr inbounds i8, i8* %arrayinit.element1, i64 1, !dbg !9635
  %2 = load i32, i32* %state.addr, align 4, !dbg !9636
  %add = add i32 48, %2, !dbg !9637
  %conv = trunc i32 %add to i8, !dbg !9638
  store i8 %conv, i8* %arrayinit.element2, align 1, !dbg !9635
  %arrayinit.element3 = getelementptr inbounds i8, i8* %arrayinit.element2, i64 1, !dbg !9635
  store i8 0, i8* %arrayinit.element3, align 1, !dbg !9635
  call void @llvm.dbg.declare(metadata %struct.acpi_buffer* %buffer, metadata !9639, metadata !DIExpression()), !dbg !9640
  %3 = bitcast %struct.acpi_buffer* %buffer to i8*, !dbg !9640
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %3, i8* align 8 bitcast (%struct.acpi_buffer* @__const.acpi_bus_init_power_state.buffer to i8*), i64 16, i1 false), !dbg !9640
  call void @llvm.dbg.declare(metadata i32* %status, metadata !9641, metadata !DIExpression()), !dbg !9642
  %4 = load %struct.acpi_device_power_state*, %struct.acpi_device_power_state** %ps, align 8, !dbg !9643
  %resources = getelementptr inbounds %struct.acpi_device_power_state, %struct.acpi_device_power_state* %4, i32 0, i32 3, !dbg !9644
  call void @INIT_LIST_HEAD(%struct.list_head* %resources) #9, !dbg !9645
  %5 = load %struct.acpi_device*, %struct.acpi_device** %device.addr, align 8, !dbg !9646
  %handle = getelementptr inbounds %struct.acpi_device, %struct.acpi_device* %5, i32 0, i32 1, !dbg !9647
  %6 = load i8*, i8** %handle, align 8, !dbg !9647
  %arraydecay = getelementptr inbounds [5 x i8], [5 x i8]* %pathname, i64 0, i64 0, !dbg !9648
  %call = call i32 @acpi_evaluate_object(i8* %6, i8* %arraydecay, %struct.acpi_object_list* null, %struct.acpi_buffer* %buffer) #9, !dbg !9649
  store i32 %call, i32* %status, align 4, !dbg !9650
  %7 = load i32, i32* %status, align 4, !dbg !9651
  %tobool = icmp ne i32 %7, 0, !dbg !9651
  br i1 %tobool, label %if.end15, label %if.then, !dbg !9653

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata %union.acpi_object** %package, metadata !9654, metadata !DIExpression()), !dbg !9656
  %pointer = getelementptr inbounds %struct.acpi_buffer, %struct.acpi_buffer* %buffer, i32 0, i32 1, !dbg !9657
  %8 = load i8*, i8** %pointer, align 8, !dbg !9657
  %9 = bitcast i8* %8 to %union.acpi_object*, !dbg !9658
  store %union.acpi_object* %9, %union.acpi_object** %package, align 8, !dbg !9656
  %length = getelementptr inbounds %struct.acpi_buffer, %struct.acpi_buffer* %buffer, i32 0, i32 0, !dbg !9659
  %10 = load i64, i64* %length, align 8, !dbg !9659
  %tobool4 = icmp ne i64 %10, 0, !dbg !9661
  br i1 %tobool4, label %land.lhs.true, label %if.end, !dbg !9662

land.lhs.true:                                    ; preds = %if.then
  %11 = load %union.acpi_object*, %union.acpi_object** %package, align 8, !dbg !9663
  %tobool5 = icmp ne %union.acpi_object* %11, null, !dbg !9663
  br i1 %tobool5, label %land.lhs.true6, label %if.end, !dbg !9664

land.lhs.true6:                                   ; preds = %land.lhs.true
  %12 = load %union.acpi_object*, %union.acpi_object** %package, align 8, !dbg !9665
  %type = bitcast %union.acpi_object* %12 to i32*, !dbg !9666
  %13 = load i32, i32* %type, align 8, !dbg !9666
  %cmp = icmp eq i32 %13, 4, !dbg !9667
  br i1 %cmp, label %land.lhs.true8, label %if.end, !dbg !9668

land.lhs.true8:                                   ; preds = %land.lhs.true6
  %14 = load %union.acpi_object*, %union.acpi_object** %package, align 8, !dbg !9669
  %package9 = bitcast %union.acpi_object* %14 to %struct.anon.68*, !dbg !9670
  %count = getelementptr inbounds %struct.anon.68, %struct.anon.68* %package9, i32 0, i32 1, !dbg !9671
  %15 = load i32, i32* %count, align 4, !dbg !9671
  %tobool10 = icmp ne i32 %15, 0, !dbg !9669
  br i1 %tobool10, label %if.then11, label %if.end, !dbg !9672

if.then11:                                        ; preds = %land.lhs.true8
  %16 = load %union.acpi_object*, %union.acpi_object** %package, align 8, !dbg !9673
  %17 = load %struct.acpi_device_power_state*, %struct.acpi_device_power_state** %ps, align 8, !dbg !9674
  %resources12 = getelementptr inbounds %struct.acpi_device_power_state, %struct.acpi_device_power_state* %17, i32 0, i32 3, !dbg !9675
  %call13 = call i32 @acpi_extract_power_resources(%union.acpi_object* %16, i32 0, %struct.list_head* %resources12) #9, !dbg !9676
  br label %if.end, !dbg !9676

if.end:                                           ; preds = %if.then11, %land.lhs.true8, %land.lhs.true6, %land.lhs.true, %if.then
  %pointer14 = getelementptr inbounds %struct.acpi_buffer, %struct.acpi_buffer* %buffer, i32 0, i32 1, !dbg !9677
  %18 = load i8*, i8** %pointer14, align 8, !dbg !9677
  call void @acpi_os_free(i8* %18) #9, !dbg !9677
  br label %if.end15, !dbg !9678

if.end15:                                         ; preds = %if.end, %entry
  %arrayidx16 = getelementptr [5 x i8], [5 x i8]* %pathname, i64 0, i64 2, !dbg !9679
  store i8 83, i8* %arrayidx16, align 1, !dbg !9680
  %19 = load %struct.acpi_device*, %struct.acpi_device** %device.addr, align 8, !dbg !9681
  %handle17 = getelementptr inbounds %struct.acpi_device, %struct.acpi_device* %19, i32 0, i32 1, !dbg !9683
  %20 = load i8*, i8** %handle17, align 8, !dbg !9683
  %arraydecay18 = getelementptr inbounds [5 x i8], [5 x i8]* %pathname, i64 0, i64 0, !dbg !9684
  %call19 = call zeroext i1 @acpi_has_method(i8* %20, i8* %arraydecay18) #9, !dbg !9685
  br i1 %call19, label %if.then20, label %if.end21, !dbg !9686

if.then20:                                        ; preds = %if.end15
  %21 = load %struct.acpi_device_power_state*, %struct.acpi_device_power_state** %ps, align 8, !dbg !9687
  %flags = getelementptr inbounds %struct.acpi_device_power_state, %struct.acpi_device_power_state* %21, i32 0, i32 0, !dbg !9688
  %22 = bitcast %struct.anon.72* %flags to i8*, !dbg !9689
  %bf.load = load i8, i8* %22, align 8, !dbg !9690
  %bf.clear = and i8 %bf.load, -3, !dbg !9690
  %bf.set = or i8 %bf.clear, 2, !dbg !9690
  store i8 %bf.set, i8* %22, align 8, !dbg !9690
  br label %if.end21, !dbg !9687

if.end21:                                         ; preds = %if.then20, %if.end15
  %23 = load %struct.acpi_device_power_state*, %struct.acpi_device_power_state** %ps, align 8, !dbg !9691
  %resources22 = getelementptr inbounds %struct.acpi_device_power_state, %struct.acpi_device_power_state* %23, i32 0, i32 3, !dbg !9693
  %call23 = call i32 @list_empty(%struct.list_head* %resources22) #9, !dbg !9694
  %tobool24 = icmp ne i32 %call23, 0, !dbg !9694
  br i1 %tobool24, label %lor.lhs.false, label %if.then30, !dbg !9695

lor.lhs.false:                                    ; preds = %if.end21
  %24 = load %struct.acpi_device_power_state*, %struct.acpi_device_power_state** %ps, align 8, !dbg !9696
  %flags25 = getelementptr inbounds %struct.acpi_device_power_state, %struct.acpi_device_power_state* %24, i32 0, i32 0, !dbg !9697
  %25 = bitcast %struct.anon.72* %flags25 to i8*, !dbg !9698
  %bf.load26 = load i8, i8* %25, align 8, !dbg !9698
  %bf.lshr = lshr i8 %bf.load26, 1, !dbg !9698
  %bf.clear27 = and i8 %bf.lshr, 1, !dbg !9698
  %conv28 = zext i8 %bf.clear27 to i32, !dbg !9696
  %tobool29 = icmp ne i32 %conv28, 0, !dbg !9696
  br i1 %tobool29, label %if.then30, label %if.end35, !dbg !9699

if.then30:                                        ; preds = %lor.lhs.false, %if.end21
  %26 = load %struct.acpi_device_power_state*, %struct.acpi_device_power_state** %ps, align 8, !dbg !9700
  %flags31 = getelementptr inbounds %struct.acpi_device_power_state, %struct.acpi_device_power_state* %26, i32 0, i32 0, !dbg !9701
  %27 = bitcast %struct.anon.72* %flags31 to i8*, !dbg !9702
  %bf.load32 = load i8, i8* %27, align 8, !dbg !9703
  %bf.clear33 = and i8 %bf.load32, -2, !dbg !9703
  %bf.set34 = or i8 %bf.clear33, 1, !dbg !9703
  store i8 %bf.set34, i8* %27, align 8, !dbg !9703
  br label %if.end35, !dbg !9700

if.end35:                                         ; preds = %if.then30, %lor.lhs.false
  %28 = load %struct.acpi_device_power_state*, %struct.acpi_device_power_state** %ps, align 8, !dbg !9704
  %power36 = getelementptr inbounds %struct.acpi_device_power_state, %struct.acpi_device_power_state* %28, i32 0, i32 1, !dbg !9705
  store i32 -1, i32* %power36, align 4, !dbg !9706
  %29 = load %struct.acpi_device_power_state*, %struct.acpi_device_power_state** %ps, align 8, !dbg !9707
  %latency = getelementptr inbounds %struct.acpi_device_power_state, %struct.acpi_device_power_state* %29, i32 0, i32 2, !dbg !9708
  store i32 -1, i32* %latency, align 8, !dbg !9709
  ret void, !dbg !9710
}

; Function Attrs: noredzone
declare dso_local i32 @acpi_extract_power_resources(%union.acpi_object*, i32, %struct.list_head*) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @acpi_os_free(i8* %memory) #0 !dbg !9711 {
entry:
  %memory.addr = alloca i8*, align 8
  store i8* %memory, i8** %memory.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %memory.addr, metadata !9713, metadata !DIExpression()), !dbg !9714
  %0 = load i8*, i8** %memory.addr, align 8, !dbg !9715
  call void @kfree(i8* %0) #9, !dbg !9716
  ret void, !dbg !9717
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @acpi_bus_extract_wakeup_device_power_package(%struct.acpi_device* %dev) #0 !dbg !9718 {
entry:
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.acpi_device*, align 8
  %handle = alloca i8*, align 8
  %wakeup = alloca %struct.acpi_device_wakeup*, align 8
  %buffer = alloca %struct.acpi_buffer, align 8
  %package = alloca %union.acpi_object*, align 8
  %element = alloca %union.acpi_object*, align 8
  %status = alloca i32, align 4
  %err = alloca i32, align 4
  %sleep_state68 = alloca i32, align 4
  store %struct.acpi_device* %dev, %struct.acpi_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.acpi_device** %dev.addr, metadata !9719, metadata !DIExpression()), !dbg !9720
  call void @llvm.dbg.declare(metadata i8** %handle, metadata !9721, metadata !DIExpression()), !dbg !9722
  %0 = load %struct.acpi_device*, %struct.acpi_device** %dev.addr, align 8, !dbg !9723
  %handle1 = getelementptr inbounds %struct.acpi_device, %struct.acpi_device* %0, i32 0, i32 1, !dbg !9724
  %1 = load i8*, i8** %handle1, align 8, !dbg !9724
  store i8* %1, i8** %handle, align 8, !dbg !9722
  call void @llvm.dbg.declare(metadata %struct.acpi_device_wakeup** %wakeup, metadata !9725, metadata !DIExpression()), !dbg !9727
  %2 = load %struct.acpi_device*, %struct.acpi_device** %dev.addr, align 8, !dbg !9728
  %wakeup2 = getelementptr inbounds %struct.acpi_device, %struct.acpi_device* %2, i32 0, i32 12, !dbg !9729
  store %struct.acpi_device_wakeup* %wakeup2, %struct.acpi_device_wakeup** %wakeup, align 8, !dbg !9727
  call void @llvm.dbg.declare(metadata %struct.acpi_buffer* %buffer, metadata !9730, metadata !DIExpression()), !dbg !9731
  %3 = bitcast %struct.acpi_buffer* %buffer to i8*, !dbg !9731
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %3, i8* align 8 bitcast (%struct.acpi_buffer* @__const.acpi_bus_extract_wakeup_device_power_package.buffer to i8*), i64 16, i1 false), !dbg !9731
  call void @llvm.dbg.declare(metadata %union.acpi_object** %package, metadata !9732, metadata !DIExpression()), !dbg !9733
  store %union.acpi_object* null, %union.acpi_object** %package, align 8, !dbg !9733
  call void @llvm.dbg.declare(metadata %union.acpi_object** %element, metadata !9734, metadata !DIExpression()), !dbg !9735
  store %union.acpi_object* null, %union.acpi_object** %element, align 8, !dbg !9735
  call void @llvm.dbg.declare(metadata i32* %status, metadata !9736, metadata !DIExpression()), !dbg !9737
  call void @llvm.dbg.declare(metadata i32* %err, metadata !9738, metadata !DIExpression()), !dbg !9739
  store i32 -61, i32* %err, align 4, !dbg !9739
  %4 = load %struct.acpi_device_wakeup*, %struct.acpi_device_wakeup** %wakeup, align 8, !dbg !9740
  %resources = getelementptr inbounds %struct.acpi_device_wakeup, %struct.acpi_device_wakeup* %4, i32 0, i32 3, !dbg !9741
  call void @INIT_LIST_HEAD(%struct.list_head* %resources) #9, !dbg !9742
  %5 = load i8*, i8** %handle, align 8, !dbg !9743
  %call = call i32 @acpi_evaluate_object(i8* %5, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.83, i64 0, i64 0), %struct.acpi_object_list* null, %struct.acpi_buffer* %buffer) #9, !dbg !9744
  store i32 %call, i32* %status, align 4, !dbg !9745
  %6 = load i32, i32* %status, align 4, !dbg !9746
  %tobool = icmp ne i32 %6, 0, !dbg !9746
  br i1 %tobool, label %if.then, label %if.end, !dbg !9748

if.then:                                          ; preds = %entry
  %7 = load i32, i32* %status, align 4, !dbg !9749
  call void (i8*, i32, i32, i8*, ...) @acpi_exception(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @_acpi_module_name, i64 0, i64 0), i32 781, i32 %7, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.85, i64 0, i64 0)) #9, !dbg !9749
  %8 = load i32, i32* %err, align 4, !dbg !9751
  store i32 %8, i32* %retval, align 4, !dbg !9752
  br label %return, !dbg !9752

if.end:                                           ; preds = %entry
  %pointer = getelementptr inbounds %struct.acpi_buffer, %struct.acpi_buffer* %buffer, i32 0, i32 1, !dbg !9753
  %9 = load i8*, i8** %pointer, align 8, !dbg !9753
  %10 = bitcast i8* %9 to %union.acpi_object*, !dbg !9754
  store %union.acpi_object* %10, %union.acpi_object** %package, align 8, !dbg !9755
  %11 = load %union.acpi_object*, %union.acpi_object** %package, align 8, !dbg !9756
  %tobool3 = icmp ne %union.acpi_object* %11, null, !dbg !9756
  br i1 %tobool3, label %lor.lhs.false, label %if.then5, !dbg !9758

lor.lhs.false:                                    ; preds = %if.end
  %12 = load %union.acpi_object*, %union.acpi_object** %package, align 8, !dbg !9759
  %package4 = bitcast %union.acpi_object* %12 to %struct.anon.68*, !dbg !9760
  %count = getelementptr inbounds %struct.anon.68, %struct.anon.68* %package4, i32 0, i32 1, !dbg !9761
  %13 = load i32, i32* %count, align 4, !dbg !9761
  %cmp = icmp ult i32 %13, 2, !dbg !9762
  br i1 %cmp, label %if.then5, label %if.end6, !dbg !9763

if.then5:                                         ; preds = %lor.lhs.false, %if.end
  br label %out, !dbg !9764

if.end6:                                          ; preds = %lor.lhs.false
  %14 = load %union.acpi_object*, %union.acpi_object** %package, align 8, !dbg !9765
  %package7 = bitcast %union.acpi_object* %14 to %struct.anon.68*, !dbg !9766
  %elements = getelementptr inbounds %struct.anon.68, %struct.anon.68* %package7, i32 0, i32 2, !dbg !9767
  %15 = load %union.acpi_object*, %union.acpi_object** %elements, align 8, !dbg !9767
  %arrayidx = getelementptr %union.acpi_object, %union.acpi_object* %15, i64 0, !dbg !9765
  store %union.acpi_object* %arrayidx, %union.acpi_object** %element, align 8, !dbg !9768
  %16 = load %union.acpi_object*, %union.acpi_object** %element, align 8, !dbg !9769
  %tobool8 = icmp ne %union.acpi_object* %16, null, !dbg !9769
  br i1 %tobool8, label %if.end10, label %if.then9, !dbg !9771

if.then9:                                         ; preds = %if.end6
  br label %out, !dbg !9772

if.end10:                                         ; preds = %if.end6
  %17 = load %union.acpi_object*, %union.acpi_object** %element, align 8, !dbg !9773
  %type = bitcast %union.acpi_object* %17 to i32*, !dbg !9775
  %18 = load i32, i32* %type, align 8, !dbg !9775
  %cmp11 = icmp eq i32 %18, 4, !dbg !9776
  br i1 %cmp11, label %if.then12, label %if.else, !dbg !9777

if.then12:                                        ; preds = %if.end10
  %19 = load %union.acpi_object*, %union.acpi_object** %element, align 8, !dbg !9778
  %package13 = bitcast %union.acpi_object* %19 to %struct.anon.68*, !dbg !9781
  %count14 = getelementptr inbounds %struct.anon.68, %struct.anon.68* %package13, i32 0, i32 1, !dbg !9782
  %20 = load i32, i32* %count14, align 4, !dbg !9782
  %cmp15 = icmp ult i32 %20, 2, !dbg !9783
  br i1 %cmp15, label %if.then28, label %lor.lhs.false16, !dbg !9784

lor.lhs.false16:                                  ; preds = %if.then12
  %21 = load %union.acpi_object*, %union.acpi_object** %element, align 8, !dbg !9785
  %package17 = bitcast %union.acpi_object* %21 to %struct.anon.68*, !dbg !9786
  %elements18 = getelementptr inbounds %struct.anon.68, %struct.anon.68* %package17, i32 0, i32 2, !dbg !9787
  %22 = load %union.acpi_object*, %union.acpi_object** %elements18, align 8, !dbg !9787
  %arrayidx19 = getelementptr %union.acpi_object, %union.acpi_object* %22, i64 0, !dbg !9785
  %type20 = bitcast %union.acpi_object* %arrayidx19 to i32*, !dbg !9788
  %23 = load i32, i32* %type20, align 8, !dbg !9788
  %cmp21 = icmp ne i32 %23, 20, !dbg !9789
  br i1 %cmp21, label %if.then28, label %lor.lhs.false22, !dbg !9790

lor.lhs.false22:                                  ; preds = %lor.lhs.false16
  %24 = load %union.acpi_object*, %union.acpi_object** %element, align 8, !dbg !9791
  %package23 = bitcast %union.acpi_object* %24 to %struct.anon.68*, !dbg !9792
  %elements24 = getelementptr inbounds %struct.anon.68, %struct.anon.68* %package23, i32 0, i32 2, !dbg !9793
  %25 = load %union.acpi_object*, %union.acpi_object** %elements24, align 8, !dbg !9793
  %arrayidx25 = getelementptr %union.acpi_object, %union.acpi_object* %25, i64 1, !dbg !9791
  %type26 = bitcast %union.acpi_object* %arrayidx25 to i32*, !dbg !9794
  %26 = load i32, i32* %type26, align 8, !dbg !9794
  %cmp27 = icmp ne i32 %26, 1, !dbg !9795
  br i1 %cmp27, label %if.then28, label %if.end29, !dbg !9796

if.then28:                                        ; preds = %lor.lhs.false22, %lor.lhs.false16, %if.then12
  br label %out, !dbg !9797

if.end29:                                         ; preds = %lor.lhs.false22
  %27 = load %union.acpi_object*, %union.acpi_object** %element, align 8, !dbg !9798
  %package30 = bitcast %union.acpi_object* %27 to %struct.anon.68*, !dbg !9799
  %elements31 = getelementptr inbounds %struct.anon.68, %struct.anon.68* %package30, i32 0, i32 2, !dbg !9800
  %28 = load %union.acpi_object*, %union.acpi_object** %elements31, align 8, !dbg !9800
  %arrayidx32 = getelementptr %union.acpi_object, %union.acpi_object* %28, i64 0, !dbg !9798
  %reference = bitcast %union.acpi_object* %arrayidx32 to %struct.anon.69*, !dbg !9801
  %handle33 = getelementptr inbounds %struct.anon.69, %struct.anon.69* %reference, i32 0, i32 2, !dbg !9802
  %29 = load i8*, i8** %handle33, align 8, !dbg !9802
  %30 = load %struct.acpi_device_wakeup*, %struct.acpi_device_wakeup** %wakeup, align 8, !dbg !9803
  %gpe_device = getelementptr inbounds %struct.acpi_device_wakeup, %struct.acpi_device_wakeup* %30, i32 0, i32 0, !dbg !9804
  store i8* %29, i8** %gpe_device, align 8, !dbg !9805
  %31 = load %union.acpi_object*, %union.acpi_object** %element, align 8, !dbg !9806
  %package34 = bitcast %union.acpi_object* %31 to %struct.anon.68*, !dbg !9807
  %elements35 = getelementptr inbounds %struct.anon.68, %struct.anon.68* %package34, i32 0, i32 2, !dbg !9808
  %32 = load %union.acpi_object*, %union.acpi_object** %elements35, align 8, !dbg !9808
  %arrayidx36 = getelementptr %union.acpi_object, %union.acpi_object* %32, i64 1, !dbg !9806
  %integer = bitcast %union.acpi_object* %arrayidx36 to %struct.anon.65*, !dbg !9809
  %value = getelementptr inbounds %struct.anon.65, %struct.anon.65* %integer, i32 0, i32 1, !dbg !9810
  %33 = load i64, i64* %value, align 8, !dbg !9810
  %conv = trunc i64 %33 to i32, !dbg !9811
  %conv37 = zext i32 %conv to i64, !dbg !9811
  %34 = load %struct.acpi_device_wakeup*, %struct.acpi_device_wakeup** %wakeup, align 8, !dbg !9812
  %gpe_number = getelementptr inbounds %struct.acpi_device_wakeup, %struct.acpi_device_wakeup* %34, i32 0, i32 1, !dbg !9813
  store i64 %conv37, i64* %gpe_number, align 8, !dbg !9814
  br label %if.end48, !dbg !9815

if.else:                                          ; preds = %if.end10
  %35 = load %union.acpi_object*, %union.acpi_object** %element, align 8, !dbg !9816
  %type38 = bitcast %union.acpi_object* %35 to i32*, !dbg !9818
  %36 = load i32, i32* %type38, align 8, !dbg !9818
  %cmp39 = icmp eq i32 %36, 1, !dbg !9819
  br i1 %cmp39, label %if.then41, label %if.else46, !dbg !9820

if.then41:                                        ; preds = %if.else
  %37 = load %struct.acpi_device_wakeup*, %struct.acpi_device_wakeup** %wakeup, align 8, !dbg !9821
  %gpe_device42 = getelementptr inbounds %struct.acpi_device_wakeup, %struct.acpi_device_wakeup* %37, i32 0, i32 0, !dbg !9823
  store i8* null, i8** %gpe_device42, align 8, !dbg !9824
  %38 = load %union.acpi_object*, %union.acpi_object** %element, align 8, !dbg !9825
  %integer43 = bitcast %union.acpi_object* %38 to %struct.anon.65*, !dbg !9826
  %value44 = getelementptr inbounds %struct.anon.65, %struct.anon.65* %integer43, i32 0, i32 1, !dbg !9827
  %39 = load i64, i64* %value44, align 8, !dbg !9827
  %40 = load %struct.acpi_device_wakeup*, %struct.acpi_device_wakeup** %wakeup, align 8, !dbg !9828
  %gpe_number45 = getelementptr inbounds %struct.acpi_device_wakeup, %struct.acpi_device_wakeup* %40, i32 0, i32 1, !dbg !9829
  store i64 %39, i64* %gpe_number45, align 8, !dbg !9830
  br label %if.end47, !dbg !9831

if.else46:                                        ; preds = %if.else
  br label %out, !dbg !9832

if.end47:                                         ; preds = %if.then41
  br label %if.end48

if.end48:                                         ; preds = %if.end47, %if.end29
  %41 = load %union.acpi_object*, %union.acpi_object** %package, align 8, !dbg !9834
  %package49 = bitcast %union.acpi_object* %41 to %struct.anon.68*, !dbg !9835
  %elements50 = getelementptr inbounds %struct.anon.68, %struct.anon.68* %package49, i32 0, i32 2, !dbg !9836
  %42 = load %union.acpi_object*, %union.acpi_object** %elements50, align 8, !dbg !9836
  %arrayidx51 = getelementptr %union.acpi_object, %union.acpi_object* %42, i64 1, !dbg !9834
  store %union.acpi_object* %arrayidx51, %union.acpi_object** %element, align 8, !dbg !9837
  %43 = load %union.acpi_object*, %union.acpi_object** %element, align 8, !dbg !9838
  %type52 = bitcast %union.acpi_object* %43 to i32*, !dbg !9840
  %44 = load i32, i32* %type52, align 8, !dbg !9840
  %cmp53 = icmp ne i32 %44, 1, !dbg !9841
  br i1 %cmp53, label %if.then55, label %if.end56, !dbg !9842

if.then55:                                        ; preds = %if.end48
  br label %out, !dbg !9843

if.end56:                                         ; preds = %if.end48
  %45 = load %union.acpi_object*, %union.acpi_object** %element, align 8, !dbg !9844
  %integer57 = bitcast %union.acpi_object* %45 to %struct.anon.65*, !dbg !9845
  %value58 = getelementptr inbounds %struct.anon.65, %struct.anon.65* %integer57, i32 0, i32 1, !dbg !9846
  %46 = load i64, i64* %value58, align 8, !dbg !9846
  %47 = load %struct.acpi_device_wakeup*, %struct.acpi_device_wakeup** %wakeup, align 8, !dbg !9847
  %sleep_state = getelementptr inbounds %struct.acpi_device_wakeup, %struct.acpi_device_wakeup* %47, i32 0, i32 2, !dbg !9848
  store i64 %46, i64* %sleep_state, align 8, !dbg !9849
  %48 = load %union.acpi_object*, %union.acpi_object** %package, align 8, !dbg !9850
  %49 = load %struct.acpi_device_wakeup*, %struct.acpi_device_wakeup** %wakeup, align 8, !dbg !9851
  %resources59 = getelementptr inbounds %struct.acpi_device_wakeup, %struct.acpi_device_wakeup* %49, i32 0, i32 3, !dbg !9852
  %call60 = call i32 @acpi_extract_power_resources(%union.acpi_object* %48, i32 2, %struct.list_head* %resources59) #9, !dbg !9853
  store i32 %call60, i32* %err, align 4, !dbg !9854
  %50 = load i32, i32* %err, align 4, !dbg !9855
  %tobool61 = icmp ne i32 %50, 0, !dbg !9855
  br i1 %tobool61, label %if.then62, label %if.end63, !dbg !9857

if.then62:                                        ; preds = %if.end56
  br label %out, !dbg !9858

if.end63:                                         ; preds = %if.end56
  %51 = load %struct.acpi_device_wakeup*, %struct.acpi_device_wakeup** %wakeup, align 8, !dbg !9859
  %resources64 = getelementptr inbounds %struct.acpi_device_wakeup, %struct.acpi_device_wakeup* %51, i32 0, i32 3, !dbg !9861
  %call65 = call i32 @list_empty(%struct.list_head* %resources64) #9, !dbg !9862
  %tobool66 = icmp ne i32 %call65, 0, !dbg !9862
  br i1 %tobool66, label %if.end85, label %if.then67, !dbg !9863

if.then67:                                        ; preds = %if.end63
  call void @llvm.dbg.declare(metadata i32* %sleep_state68, metadata !9864, metadata !DIExpression()), !dbg !9866
  %52 = load %struct.acpi_device_wakeup*, %struct.acpi_device_wakeup** %wakeup, align 8, !dbg !9867
  %resources69 = getelementptr inbounds %struct.acpi_device_wakeup, %struct.acpi_device_wakeup* %52, i32 0, i32 3, !dbg !9868
  %call70 = call i32 @acpi_power_wakeup_list_init(%struct.list_head* %resources69, i32* %sleep_state68) #9, !dbg !9869
  store i32 %call70, i32* %err, align 4, !dbg !9870
  %53 = load i32, i32* %err, align 4, !dbg !9871
  %tobool71 = icmp ne i32 %53, 0, !dbg !9871
  br i1 %tobool71, label %if.then72, label %if.end74, !dbg !9873

if.then72:                                        ; preds = %if.then67
  %54 = load i8*, i8** %handle, align 8, !dbg !9874
  call void (i8*, i8*, i8*, ...) @acpi_handle_printk(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.24, i64 0, i64 0), i8* %54, i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.86, i64 0, i64 0)) #9, !dbg !9874
  %55 = load %struct.acpi_device_wakeup*, %struct.acpi_device_wakeup** %wakeup, align 8, !dbg !9876
  %resources73 = getelementptr inbounds %struct.acpi_device_wakeup, %struct.acpi_device_wakeup* %55, i32 0, i32 3, !dbg !9877
  call void @acpi_power_resources_list_free(%struct.list_head* %resources73) #9, !dbg !9878
  br label %out, !dbg !9879

if.end74:                                         ; preds = %if.then67
  %56 = load i32, i32* %sleep_state68, align 4, !dbg !9880
  %conv75 = sext i32 %56 to i64, !dbg !9880
  %57 = load %struct.acpi_device_wakeup*, %struct.acpi_device_wakeup** %wakeup, align 8, !dbg !9882
  %sleep_state76 = getelementptr inbounds %struct.acpi_device_wakeup, %struct.acpi_device_wakeup* %57, i32 0, i32 2, !dbg !9883
  %58 = load i64, i64* %sleep_state76, align 8, !dbg !9883
  %cmp77 = icmp ult i64 %conv75, %58, !dbg !9884
  br i1 %cmp77, label %if.then79, label %if.end84, !dbg !9885

if.then79:                                        ; preds = %if.end74
  %59 = load i8*, i8** %handle, align 8, !dbg !9886
  %60 = load %struct.acpi_device_wakeup*, %struct.acpi_device_wakeup** %wakeup, align 8, !dbg !9886
  %sleep_state80 = getelementptr inbounds %struct.acpi_device_wakeup, %struct.acpi_device_wakeup* %60, i32 0, i32 2, !dbg !9886
  %61 = load i64, i64* %sleep_state80, align 8, !dbg !9886
  %conv81 = trunc i64 %61 to i32, !dbg !9886
  %62 = load i32, i32* %sleep_state68, align 4, !dbg !9886
  call void (i8*, i8*, i8*, ...) @acpi_handle_printk(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.24, i64 0, i64 0), i8* %59, i8* getelementptr inbounds ([63 x i8], [63 x i8]* @.str.87, i64 0, i64 0), i32 %conv81, i32 %62) #9, !dbg !9886
  %63 = load i32, i32* %sleep_state68, align 4, !dbg !9888
  %conv82 = sext i32 %63 to i64, !dbg !9888
  %64 = load %struct.acpi_device_wakeup*, %struct.acpi_device_wakeup** %wakeup, align 8, !dbg !9889
  %sleep_state83 = getelementptr inbounds %struct.acpi_device_wakeup, %struct.acpi_device_wakeup* %64, i32 0, i32 2, !dbg !9890
  store i64 %conv82, i64* %sleep_state83, align 8, !dbg !9891
  br label %if.end84, !dbg !9892

if.end84:                                         ; preds = %if.then79, %if.end74
  br label %if.end85, !dbg !9893

if.end85:                                         ; preds = %if.end84, %if.end63
  br label %out, !dbg !9894

out:                                              ; preds = %if.end85, %if.then72, %if.then62, %if.then55, %if.else46, %if.then28, %if.then9, %if.then5
  call void @llvm.dbg.label(metadata !9895), !dbg !9896
  %pointer86 = getelementptr inbounds %struct.acpi_buffer, %struct.acpi_buffer* %buffer, i32 0, i32 1, !dbg !9897
  %65 = load i8*, i8** %pointer86, align 8, !dbg !9897
  call void @kfree(i8* %65) #9, !dbg !9898
  %66 = load i32, i32* %err, align 4, !dbg !9899
  store i32 %66, i32* %retval, align 4, !dbg !9900
  br label %return, !dbg !9900

return:                                           ; preds = %out, %if.then
  %67 = load i32, i32* %retval, align 4, !dbg !9901
  ret i32 %67, !dbg !9901
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @acpi_wakeup_gpe_init(%struct.acpi_device* %device) #0 !dbg !4462 {
entry:
  %retval = alloca i1, align 1
  %device.addr = alloca %struct.acpi_device*, align 8
  %wakeup = alloca %struct.acpi_device_wakeup*, align 8
  %status = alloca i32, align 4
  store %struct.acpi_device* %device, %struct.acpi_device** %device.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.acpi_device** %device.addr, metadata !9902, metadata !DIExpression()), !dbg !9903
  call void @llvm.dbg.declare(metadata %struct.acpi_device_wakeup** %wakeup, metadata !9904, metadata !DIExpression()), !dbg !9905
  %0 = load %struct.acpi_device*, %struct.acpi_device** %device.addr, align 8, !dbg !9906
  %wakeup1 = getelementptr inbounds %struct.acpi_device, %struct.acpi_device* %0, i32 0, i32 12, !dbg !9907
  store %struct.acpi_device_wakeup* %wakeup1, %struct.acpi_device_wakeup** %wakeup, align 8, !dbg !9905
  call void @llvm.dbg.declare(metadata i32* %status, metadata !9908, metadata !DIExpression()), !dbg !9909
  %1 = load %struct.acpi_device_wakeup*, %struct.acpi_device_wakeup** %wakeup, align 8, !dbg !9910
  %flags = getelementptr inbounds %struct.acpi_device_wakeup, %struct.acpi_device_wakeup* %1, i32 0, i32 4, !dbg !9911
  %2 = bitcast %struct.acpi_device_wakeup_flags* %flags to i8*, !dbg !9912
  %bf.load = load i8, i8* %2, align 8, !dbg !9913
  %bf.clear = and i8 %bf.load, -3, !dbg !9913
  store i8 %bf.clear, i8* %2, align 8, !dbg !9913
  %3 = load %struct.acpi_device*, %struct.acpi_device** %device.addr, align 8, !dbg !9914
  %call = call i32 @acpi_match_device_ids(%struct.acpi_device* %3, %struct.acpi_device_id* getelementptr inbounds ([4 x %struct.acpi_device_id], [4 x %struct.acpi_device_id]* @acpi_wakeup_gpe_init.button_device_ids, i64 0, i64 0)) #9, !dbg !9916
  %tobool = icmp ne i32 %call, 0, !dbg !9916
  br i1 %tobool, label %if.end9, label %if.then, !dbg !9917

if.then:                                          ; preds = %entry
  %4 = load %struct.acpi_device*, %struct.acpi_device** %device.addr, align 8, !dbg !9918
  %call2 = call i32 @acpi_match_device_ids(%struct.acpi_device* %4, %struct.acpi_device_id* getelementptr inbounds ([4 x %struct.acpi_device_id], [4 x %struct.acpi_device_id]* @acpi_wakeup_gpe_init.button_device_ids, i64 0, i64 1)) #9, !dbg !9921
  %tobool3 = icmp ne i32 %call2, 0, !dbg !9921
  br i1 %tobool3, label %if.end7, label %if.then4, !dbg !9922

if.then4:                                         ; preds = %if.then
  %5 = load %struct.acpi_device_wakeup*, %struct.acpi_device_wakeup** %wakeup, align 8, !dbg !9923
  %sleep_state = getelementptr inbounds %struct.acpi_device_wakeup, %struct.acpi_device_wakeup* %5, i32 0, i32 2, !dbg !9926
  %6 = load i64, i64* %sleep_state, align 8, !dbg !9926
  %cmp = icmp eq i64 %6, 5, !dbg !9927
  br i1 %cmp, label %if.then5, label %if.end, !dbg !9928

if.then5:                                         ; preds = %if.then4
  %7 = load %struct.acpi_device_wakeup*, %struct.acpi_device_wakeup** %wakeup, align 8, !dbg !9929
  %sleep_state6 = getelementptr inbounds %struct.acpi_device_wakeup, %struct.acpi_device_wakeup* %7, i32 0, i32 2, !dbg !9930
  store i64 4, i64* %sleep_state6, align 8, !dbg !9931
  br label %if.end, !dbg !9929

if.end:                                           ; preds = %if.then5, %if.then4
  br label %if.end7, !dbg !9932

if.end7:                                          ; preds = %if.end, %if.then
  %8 = load %struct.acpi_device_wakeup*, %struct.acpi_device_wakeup** %wakeup, align 8, !dbg !9933
  %gpe_device = getelementptr inbounds %struct.acpi_device_wakeup, %struct.acpi_device_wakeup* %8, i32 0, i32 0, !dbg !9934
  %9 = load i8*, i8** %gpe_device, align 8, !dbg !9934
  %10 = load %struct.acpi_device_wakeup*, %struct.acpi_device_wakeup** %wakeup, align 8, !dbg !9935
  %gpe_number = getelementptr inbounds %struct.acpi_device_wakeup, %struct.acpi_device_wakeup* %10, i32 0, i32 1, !dbg !9936
  %11 = load i64, i64* %gpe_number, align 8, !dbg !9936
  %conv = trunc i64 %11 to i32, !dbg !9935
  %call8 = call i32 @acpi_mark_gpe_for_wake(i8* %9, i32 %conv) #9, !dbg !9937
  %12 = load %struct.acpi_device*, %struct.acpi_device** %device.addr, align 8, !dbg !9938
  %dev = getelementptr inbounds %struct.acpi_device, %struct.acpi_device* %12, i32 0, i32 21, !dbg !9939
  call void @device_set_wakeup_capable(%struct.device* %dev, i1 zeroext true) #9, !dbg !9940
  store i1 true, i1* %retval, align 1, !dbg !9941
  br label %return, !dbg !9941

if.end9:                                          ; preds = %entry
  %13 = load %struct.acpi_device*, %struct.acpi_device** %device.addr, align 8, !dbg !9942
  %handle = getelementptr inbounds %struct.acpi_device, %struct.acpi_device* %13, i32 0, i32 1, !dbg !9943
  %14 = load i8*, i8** %handle, align 8, !dbg !9943
  %15 = load %struct.acpi_device_wakeup*, %struct.acpi_device_wakeup** %wakeup, align 8, !dbg !9944
  %gpe_device10 = getelementptr inbounds %struct.acpi_device_wakeup, %struct.acpi_device_wakeup* %15, i32 0, i32 0, !dbg !9945
  %16 = load i8*, i8** %gpe_device10, align 8, !dbg !9945
  %17 = load %struct.acpi_device_wakeup*, %struct.acpi_device_wakeup** %wakeup, align 8, !dbg !9946
  %gpe_number11 = getelementptr inbounds %struct.acpi_device_wakeup, %struct.acpi_device_wakeup* %17, i32 0, i32 1, !dbg !9947
  %18 = load i64, i64* %gpe_number11, align 8, !dbg !9947
  %conv12 = trunc i64 %18 to i32, !dbg !9946
  %call13 = call i32 @acpi_setup_gpe_for_wake(i8* %14, i8* %16, i32 %conv12) #9, !dbg !9948
  store i32 %call13, i32* %status, align 4, !dbg !9949
  %19 = load i32, i32* %status, align 4, !dbg !9950
  %tobool14 = icmp ne i32 %19, 0, !dbg !9950
  %lnot = xor i1 %tobool14, true, !dbg !9950
  store i1 %lnot, i1* %retval, align 1, !dbg !9951
  br label %return, !dbg !9951

return:                                           ; preds = %if.end9, %if.end7
  %20 = load i1, i1* %retval, align 1, !dbg !9952
  ret i1 %20, !dbg !9952
}

; Function Attrs: noredzone
declare dso_local i32 @acpi_device_sleep_wake(%struct.acpi_device*, i32, i32, i32) #1

; Function Attrs: noredzone
declare dso_local void @acpi_exception(i8*, i32, i32, i8*, ...) #1

; Function Attrs: noredzone
declare dso_local i32 @acpi_power_wakeup_list_init(%struct.list_head*, i32*) #1

; Function Attrs: noredzone
declare dso_local void @acpi_power_resources_list_free(%struct.list_head*) #1

; Function Attrs: noredzone
declare dso_local i32 @acpi_mark_gpe_for_wake(i8*, i32) #1

; Function Attrs: noredzone
declare dso_local void @device_set_wakeup_capable(%struct.device*, i1 zeroext) #1

; Function Attrs: noredzone
declare dso_local i32 @acpi_setup_gpe_for_wake(i8*, i8*, i32) #1

; Function Attrs: noredzone
declare dso_local void @acpi_free_properties(%struct.acpi_device*) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @acpi_free_power_resources_lists(%struct.acpi_device* %device) #0 !dbg !9953 {
entry:
  %device.addr = alloca %struct.acpi_device*, align 8
  %i = alloca i32, align 4
  %ps = alloca %struct.acpi_device_power_state*, align 8
  store %struct.acpi_device* %device, %struct.acpi_device** %device.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.acpi_device** %device.addr, metadata !9954, metadata !DIExpression()), !dbg !9955
  call void @llvm.dbg.declare(metadata i32* %i, metadata !9956, metadata !DIExpression()), !dbg !9957
  %0 = load %struct.acpi_device*, %struct.acpi_device** %device.addr, align 8, !dbg !9958
  %wakeup = getelementptr inbounds %struct.acpi_device, %struct.acpi_device* %0, i32 0, i32 12, !dbg !9960
  %flags = getelementptr inbounds %struct.acpi_device_wakeup, %struct.acpi_device_wakeup* %wakeup, i32 0, i32 4, !dbg !9961
  %1 = bitcast %struct.acpi_device_wakeup_flags* %flags to i8*, !dbg !9962
  %bf.load = load i8, i8* %1, align 8, !dbg !9962
  %bf.clear = and i8 %bf.load, 1, !dbg !9962
  %tobool = icmp ne i8 %bf.clear, 0, !dbg !9958
  br i1 %tobool, label %if.then, label %if.end, !dbg !9963

if.then:                                          ; preds = %entry
  %2 = load %struct.acpi_device*, %struct.acpi_device** %device.addr, align 8, !dbg !9964
  %wakeup1 = getelementptr inbounds %struct.acpi_device, %struct.acpi_device* %2, i32 0, i32 12, !dbg !9965
  %resources = getelementptr inbounds %struct.acpi_device_wakeup, %struct.acpi_device_wakeup* %wakeup1, i32 0, i32 3, !dbg !9966
  call void @acpi_power_resources_list_free(%struct.list_head* %resources) #9, !dbg !9967
  br label %if.end, !dbg !9967

if.end:                                           ; preds = %if.then, %entry
  %3 = load %struct.acpi_device*, %struct.acpi_device** %device.addr, align 8, !dbg !9968
  %power = getelementptr inbounds %struct.acpi_device, %struct.acpi_device* %3, i32 0, i32 11, !dbg !9970
  %flags2 = getelementptr inbounds %struct.acpi_device_power, %struct.acpi_device_power* %power, i32 0, i32 1, !dbg !9971
  %4 = bitcast %struct.acpi_device_power_flags* %flags2 to i32*, !dbg !9972
  %bf.load3 = load i32, i32* %4, align 4, !dbg !9972
  %bf.lshr = lshr i32 %bf.load3, 1, !dbg !9972
  %bf.clear4 = and i32 %bf.lshr, 1, !dbg !9972
  %tobool5 = icmp ne i32 %bf.clear4, 0, !dbg !9968
  br i1 %tobool5, label %if.end7, label %if.then6, !dbg !9973

if.then6:                                         ; preds = %if.end
  br label %for.end, !dbg !9974

if.end7:                                          ; preds = %if.end
  store i32 0, i32* %i, align 4, !dbg !9975
  br label %for.cond, !dbg !9977

for.cond:                                         ; preds = %for.inc, %if.end7
  %5 = load i32, i32* %i, align 4, !dbg !9978
  %cmp = icmp sle i32 %5, 3, !dbg !9980
  br i1 %cmp, label %for.body, label %for.end, !dbg !9981

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.acpi_device_power_state** %ps, metadata !9982, metadata !DIExpression()), !dbg !9984
  %6 = load %struct.acpi_device*, %struct.acpi_device** %device.addr, align 8, !dbg !9985
  %power8 = getelementptr inbounds %struct.acpi_device, %struct.acpi_device* %6, i32 0, i32 11, !dbg !9986
  %states = getelementptr inbounds %struct.acpi_device_power, %struct.acpi_device_power* %power8, i32 0, i32 2, !dbg !9987
  %7 = load i32, i32* %i, align 4, !dbg !9988
  %idxprom = sext i32 %7 to i64, !dbg !9985
  %arrayidx = getelementptr [5 x %struct.acpi_device_power_state], [5 x %struct.acpi_device_power_state]* %states, i64 0, i64 %idxprom, !dbg !9985
  store %struct.acpi_device_power_state* %arrayidx, %struct.acpi_device_power_state** %ps, align 8, !dbg !9984
  %8 = load %struct.acpi_device_power_state*, %struct.acpi_device_power_state** %ps, align 8, !dbg !9989
  %resources9 = getelementptr inbounds %struct.acpi_device_power_state, %struct.acpi_device_power_state* %8, i32 0, i32 3, !dbg !9990
  call void @acpi_power_resources_list_free(%struct.list_head* %resources9) #9, !dbg !9991
  br label %for.inc, !dbg !9992

for.inc:                                          ; preds = %for.body
  %9 = load i32, i32* %i, align 4, !dbg !9993
  %inc = add i32 %9, 1, !dbg !9993
  store i32 %inc, i32* %i, align 4, !dbg !9993
  br label %for.cond, !dbg !9994, !llvm.loop !9995

for.end:                                          ; preds = %if.then6, %for.cond
  ret void, !dbg !9997
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @acpi_generic_device_attach(%struct.acpi_device* %adev, %struct.acpi_device_id* %not_used) #0 !dbg !9998 {
entry:
  %adev.addr = alloca %struct.acpi_device*, align 8
  %not_used.addr = alloca %struct.acpi_device_id*, align 8
  store %struct.acpi_device* %adev, %struct.acpi_device** %adev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.acpi_device** %adev.addr, metadata !9999, metadata !DIExpression()), !dbg !10000
  store %struct.acpi_device_id* %not_used, %struct.acpi_device_id** %not_used.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.acpi_device_id** %not_used.addr, metadata !10001, metadata !DIExpression()), !dbg !10002
  %0 = load %struct.acpi_device*, %struct.acpi_device** %adev.addr, align 8, !dbg !10003
  %data = getelementptr inbounds %struct.acpi_device, %struct.acpi_device* %0, i32 0, i32 15, !dbg !10005
  %of_compatible = getelementptr inbounds %struct.acpi_device_data, %struct.acpi_device_data* %data, i32 0, i32 2, !dbg !10006
  %1 = load %union.acpi_object*, %union.acpi_object** %of_compatible, align 8, !dbg !10006
  %tobool = icmp ne %union.acpi_object* %1, null, !dbg !10003
  br i1 %tobool, label %if.then, label %if.end, !dbg !10007

if.then:                                          ; preds = %entry
  %2 = load %struct.acpi_device*, %struct.acpi_device** %adev.addr, align 8, !dbg !10008
  call void @acpi_default_enumeration(%struct.acpi_device* %2) #9, !dbg !10009
  br label %if.end, !dbg !10009

if.end:                                           ; preds = %if.then, %entry
  ret i32 1, !dbg !10010
}

; Function Attrs: noredzone
declare dso_local i32 @device_init_wakeup(%struct.device*, i1 zeroext) #1

; Function Attrs: noredzone
declare dso_local void @acpi_device_remove_files(%struct.acpi_device*) #1

; Function Attrs: noredzone
declare dso_local void @device_del(%struct.device*) #1

; Function Attrs: nounwind readnone willreturn
declare i1 @llvm.is.constant.i64(i64) #6

; Function Attrs: noredzone
declare dso_local noalias i8* @__kmalloc(i64, i32) #1

; Function Attrs: nounwind willreturn
declare void @llvm.assume(i1) #7

; Function Attrs: noinline noredzone nounwind optnone readnone sspstrong
define internal i32 @get_order(i64 %size) #8 !dbg !10011 {
entry:
  %x.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %x.addr.i, metadata !10015, metadata !DIExpression()), !dbg !10020
  %bitpos.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %bitpos.i, metadata !10022, metadata !DIExpression()), !dbg !10023
  %retval = alloca i32, align 4
  %size.addr = alloca i64, align 8
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !10024, metadata !DIExpression()), !dbg !10025
  %0 = load i64, i64* %size.addr, align 8, !dbg !10026
  %1 = call i1 @llvm.is.constant.i64(i64 %0), !dbg !10028
  br i1 %1, label %if.then, label %if.end447, !dbg !10029

if.then:                                          ; preds = %entry
  %2 = load i64, i64* %size.addr, align 8, !dbg !10030
  %tobool = icmp ne i64 %2, 0, !dbg !10030
  br i1 %tobool, label %if.end, label %if.then1, !dbg !10033

if.then1:                                         ; preds = %if.then
  store i32 52, i32* %retval, align 4, !dbg !10034
  br label %return, !dbg !10034

if.end:                                           ; preds = %if.then
  %3 = load i64, i64* %size.addr, align 8, !dbg !10035
  %cmp = icmp ult i64 %3, 4096, !dbg !10037
  br i1 %cmp, label %if.then2, label %if.end3, !dbg !10038

if.then2:                                         ; preds = %if.end
  store i32 0, i32* %retval, align 4, !dbg !10039
  br label %return, !dbg !10039

if.end3:                                          ; preds = %if.end
  %4 = load i64, i64* %size.addr, align 8, !dbg !10040
  %sub = sub i64 %4, 1, !dbg !10040
  %5 = call i1 @llvm.is.constant.i64(i64 %sub), !dbg !10040
  br i1 %5, label %cond.true, label %cond.false442, !dbg !10040

cond.true:                                        ; preds = %if.end3
  %6 = load i64, i64* %size.addr, align 8, !dbg !10040
  %sub4 = sub i64 %6, 1, !dbg !10040
  %7 = call i1 @llvm.is.constant.i64(i64 %sub4), !dbg !10040
  br i1 %7, label %cond.true5, label %cond.false439, !dbg !10040

cond.true5:                                       ; preds = %cond.true
  %8 = load i64, i64* %size.addr, align 8, !dbg !10040
  %sub6 = sub i64 %8, 1, !dbg !10040
  %cmp7 = icmp ult i64 %sub6, 2, !dbg !10040
  br i1 %cmp7, label %cond.true8, label %cond.false, !dbg !10040

cond.true8:                                       ; preds = %cond.true5
  br label %cond.end437, !dbg !10040

cond.false:                                       ; preds = %cond.true5
  %9 = load i64, i64* %size.addr, align 8, !dbg !10040
  %sub9 = sub i64 %9, 1, !dbg !10040
  %and = and i64 %sub9, -9223372036854775808, !dbg !10040
  %tobool10 = icmp ne i64 %and, 0, !dbg !10040
  br i1 %tobool10, label %cond.true11, label %cond.false12, !dbg !10040

cond.true11:                                      ; preds = %cond.false
  br label %cond.end435, !dbg !10040

cond.false12:                                     ; preds = %cond.false
  %10 = load i64, i64* %size.addr, align 8, !dbg !10040
  %sub13 = sub i64 %10, 1, !dbg !10040
  %and14 = and i64 %sub13, 4611686018427387904, !dbg !10040
  %tobool15 = icmp ne i64 %and14, 0, !dbg !10040
  br i1 %tobool15, label %cond.true16, label %cond.false17, !dbg !10040

cond.true16:                                      ; preds = %cond.false12
  br label %cond.end433, !dbg !10040

cond.false17:                                     ; preds = %cond.false12
  %11 = load i64, i64* %size.addr, align 8, !dbg !10040
  %sub18 = sub i64 %11, 1, !dbg !10040
  %and19 = and i64 %sub18, 2305843009213693952, !dbg !10040
  %tobool20 = icmp ne i64 %and19, 0, !dbg !10040
  br i1 %tobool20, label %cond.true21, label %cond.false22, !dbg !10040

cond.true21:                                      ; preds = %cond.false17
  br label %cond.end431, !dbg !10040

cond.false22:                                     ; preds = %cond.false17
  %12 = load i64, i64* %size.addr, align 8, !dbg !10040
  %sub23 = sub i64 %12, 1, !dbg !10040
  %and24 = and i64 %sub23, 1152921504606846976, !dbg !10040
  %tobool25 = icmp ne i64 %and24, 0, !dbg !10040
  br i1 %tobool25, label %cond.true26, label %cond.false27, !dbg !10040

cond.true26:                                      ; preds = %cond.false22
  br label %cond.end429, !dbg !10040

cond.false27:                                     ; preds = %cond.false22
  %13 = load i64, i64* %size.addr, align 8, !dbg !10040
  %sub28 = sub i64 %13, 1, !dbg !10040
  %and29 = and i64 %sub28, 576460752303423488, !dbg !10040
  %tobool30 = icmp ne i64 %and29, 0, !dbg !10040
  br i1 %tobool30, label %cond.true31, label %cond.false32, !dbg !10040

cond.true31:                                      ; preds = %cond.false27
  br label %cond.end427, !dbg !10040

cond.false32:                                     ; preds = %cond.false27
  %14 = load i64, i64* %size.addr, align 8, !dbg !10040
  %sub33 = sub i64 %14, 1, !dbg !10040
  %and34 = and i64 %sub33, 288230376151711744, !dbg !10040
  %tobool35 = icmp ne i64 %and34, 0, !dbg !10040
  br i1 %tobool35, label %cond.true36, label %cond.false37, !dbg !10040

cond.true36:                                      ; preds = %cond.false32
  br label %cond.end425, !dbg !10040

cond.false37:                                     ; preds = %cond.false32
  %15 = load i64, i64* %size.addr, align 8, !dbg !10040
  %sub38 = sub i64 %15, 1, !dbg !10040
  %and39 = and i64 %sub38, 144115188075855872, !dbg !10040
  %tobool40 = icmp ne i64 %and39, 0, !dbg !10040
  br i1 %tobool40, label %cond.true41, label %cond.false42, !dbg !10040

cond.true41:                                      ; preds = %cond.false37
  br label %cond.end423, !dbg !10040

cond.false42:                                     ; preds = %cond.false37
  %16 = load i64, i64* %size.addr, align 8, !dbg !10040
  %sub43 = sub i64 %16, 1, !dbg !10040
  %and44 = and i64 %sub43, 72057594037927936, !dbg !10040
  %tobool45 = icmp ne i64 %and44, 0, !dbg !10040
  br i1 %tobool45, label %cond.true46, label %cond.false47, !dbg !10040

cond.true46:                                      ; preds = %cond.false42
  br label %cond.end421, !dbg !10040

cond.false47:                                     ; preds = %cond.false42
  %17 = load i64, i64* %size.addr, align 8, !dbg !10040
  %sub48 = sub i64 %17, 1, !dbg !10040
  %and49 = and i64 %sub48, 36028797018963968, !dbg !10040
  %tobool50 = icmp ne i64 %and49, 0, !dbg !10040
  br i1 %tobool50, label %cond.true51, label %cond.false52, !dbg !10040

cond.true51:                                      ; preds = %cond.false47
  br label %cond.end419, !dbg !10040

cond.false52:                                     ; preds = %cond.false47
  %18 = load i64, i64* %size.addr, align 8, !dbg !10040
  %sub53 = sub i64 %18, 1, !dbg !10040
  %and54 = and i64 %sub53, 18014398509481984, !dbg !10040
  %tobool55 = icmp ne i64 %and54, 0, !dbg !10040
  br i1 %tobool55, label %cond.true56, label %cond.false57, !dbg !10040

cond.true56:                                      ; preds = %cond.false52
  br label %cond.end417, !dbg !10040

cond.false57:                                     ; preds = %cond.false52
  %19 = load i64, i64* %size.addr, align 8, !dbg !10040
  %sub58 = sub i64 %19, 1, !dbg !10040
  %and59 = and i64 %sub58, 9007199254740992, !dbg !10040
  %tobool60 = icmp ne i64 %and59, 0, !dbg !10040
  br i1 %tobool60, label %cond.true61, label %cond.false62, !dbg !10040

cond.true61:                                      ; preds = %cond.false57
  br label %cond.end415, !dbg !10040

cond.false62:                                     ; preds = %cond.false57
  %20 = load i64, i64* %size.addr, align 8, !dbg !10040
  %sub63 = sub i64 %20, 1, !dbg !10040
  %and64 = and i64 %sub63, 4503599627370496, !dbg !10040
  %tobool65 = icmp ne i64 %and64, 0, !dbg !10040
  br i1 %tobool65, label %cond.true66, label %cond.false67, !dbg !10040

cond.true66:                                      ; preds = %cond.false62
  br label %cond.end413, !dbg !10040

cond.false67:                                     ; preds = %cond.false62
  %21 = load i64, i64* %size.addr, align 8, !dbg !10040
  %sub68 = sub i64 %21, 1, !dbg !10040
  %and69 = and i64 %sub68, 2251799813685248, !dbg !10040
  %tobool70 = icmp ne i64 %and69, 0, !dbg !10040
  br i1 %tobool70, label %cond.true71, label %cond.false72, !dbg !10040

cond.true71:                                      ; preds = %cond.false67
  br label %cond.end411, !dbg !10040

cond.false72:                                     ; preds = %cond.false67
  %22 = load i64, i64* %size.addr, align 8, !dbg !10040
  %sub73 = sub i64 %22, 1, !dbg !10040
  %and74 = and i64 %sub73, 1125899906842624, !dbg !10040
  %tobool75 = icmp ne i64 %and74, 0, !dbg !10040
  br i1 %tobool75, label %cond.true76, label %cond.false77, !dbg !10040

cond.true76:                                      ; preds = %cond.false72
  br label %cond.end409, !dbg !10040

cond.false77:                                     ; preds = %cond.false72
  %23 = load i64, i64* %size.addr, align 8, !dbg !10040
  %sub78 = sub i64 %23, 1, !dbg !10040
  %and79 = and i64 %sub78, 562949953421312, !dbg !10040
  %tobool80 = icmp ne i64 %and79, 0, !dbg !10040
  br i1 %tobool80, label %cond.true81, label %cond.false82, !dbg !10040

cond.true81:                                      ; preds = %cond.false77
  br label %cond.end407, !dbg !10040

cond.false82:                                     ; preds = %cond.false77
  %24 = load i64, i64* %size.addr, align 8, !dbg !10040
  %sub83 = sub i64 %24, 1, !dbg !10040
  %and84 = and i64 %sub83, 281474976710656, !dbg !10040
  %tobool85 = icmp ne i64 %and84, 0, !dbg !10040
  br i1 %tobool85, label %cond.true86, label %cond.false87, !dbg !10040

cond.true86:                                      ; preds = %cond.false82
  br label %cond.end405, !dbg !10040

cond.false87:                                     ; preds = %cond.false82
  %25 = load i64, i64* %size.addr, align 8, !dbg !10040
  %sub88 = sub i64 %25, 1, !dbg !10040
  %and89 = and i64 %sub88, 140737488355328, !dbg !10040
  %tobool90 = icmp ne i64 %and89, 0, !dbg !10040
  br i1 %tobool90, label %cond.true91, label %cond.false92, !dbg !10040

cond.true91:                                      ; preds = %cond.false87
  br label %cond.end403, !dbg !10040

cond.false92:                                     ; preds = %cond.false87
  %26 = load i64, i64* %size.addr, align 8, !dbg !10040
  %sub93 = sub i64 %26, 1, !dbg !10040
  %and94 = and i64 %sub93, 70368744177664, !dbg !10040
  %tobool95 = icmp ne i64 %and94, 0, !dbg !10040
  br i1 %tobool95, label %cond.true96, label %cond.false97, !dbg !10040

cond.true96:                                      ; preds = %cond.false92
  br label %cond.end401, !dbg !10040

cond.false97:                                     ; preds = %cond.false92
  %27 = load i64, i64* %size.addr, align 8, !dbg !10040
  %sub98 = sub i64 %27, 1, !dbg !10040
  %and99 = and i64 %sub98, 35184372088832, !dbg !10040
  %tobool100 = icmp ne i64 %and99, 0, !dbg !10040
  br i1 %tobool100, label %cond.true101, label %cond.false102, !dbg !10040

cond.true101:                                     ; preds = %cond.false97
  br label %cond.end399, !dbg !10040

cond.false102:                                    ; preds = %cond.false97
  %28 = load i64, i64* %size.addr, align 8, !dbg !10040
  %sub103 = sub i64 %28, 1, !dbg !10040
  %and104 = and i64 %sub103, 17592186044416, !dbg !10040
  %tobool105 = icmp ne i64 %and104, 0, !dbg !10040
  br i1 %tobool105, label %cond.true106, label %cond.false107, !dbg !10040

cond.true106:                                     ; preds = %cond.false102
  br label %cond.end397, !dbg !10040

cond.false107:                                    ; preds = %cond.false102
  %29 = load i64, i64* %size.addr, align 8, !dbg !10040
  %sub108 = sub i64 %29, 1, !dbg !10040
  %and109 = and i64 %sub108, 8796093022208, !dbg !10040
  %tobool110 = icmp ne i64 %and109, 0, !dbg !10040
  br i1 %tobool110, label %cond.true111, label %cond.false112, !dbg !10040

cond.true111:                                     ; preds = %cond.false107
  br label %cond.end395, !dbg !10040

cond.false112:                                    ; preds = %cond.false107
  %30 = load i64, i64* %size.addr, align 8, !dbg !10040
  %sub113 = sub i64 %30, 1, !dbg !10040
  %and114 = and i64 %sub113, 4398046511104, !dbg !10040
  %tobool115 = icmp ne i64 %and114, 0, !dbg !10040
  br i1 %tobool115, label %cond.true116, label %cond.false117, !dbg !10040

cond.true116:                                     ; preds = %cond.false112
  br label %cond.end393, !dbg !10040

cond.false117:                                    ; preds = %cond.false112
  %31 = load i64, i64* %size.addr, align 8, !dbg !10040
  %sub118 = sub i64 %31, 1, !dbg !10040
  %and119 = and i64 %sub118, 2199023255552, !dbg !10040
  %tobool120 = icmp ne i64 %and119, 0, !dbg !10040
  br i1 %tobool120, label %cond.true121, label %cond.false122, !dbg !10040

cond.true121:                                     ; preds = %cond.false117
  br label %cond.end391, !dbg !10040

cond.false122:                                    ; preds = %cond.false117
  %32 = load i64, i64* %size.addr, align 8, !dbg !10040
  %sub123 = sub i64 %32, 1, !dbg !10040
  %and124 = and i64 %sub123, 1099511627776, !dbg !10040
  %tobool125 = icmp ne i64 %and124, 0, !dbg !10040
  br i1 %tobool125, label %cond.true126, label %cond.false127, !dbg !10040

cond.true126:                                     ; preds = %cond.false122
  br label %cond.end389, !dbg !10040

cond.false127:                                    ; preds = %cond.false122
  %33 = load i64, i64* %size.addr, align 8, !dbg !10040
  %sub128 = sub i64 %33, 1, !dbg !10040
  %and129 = and i64 %sub128, 549755813888, !dbg !10040
  %tobool130 = icmp ne i64 %and129, 0, !dbg !10040
  br i1 %tobool130, label %cond.true131, label %cond.false132, !dbg !10040

cond.true131:                                     ; preds = %cond.false127
  br label %cond.end387, !dbg !10040

cond.false132:                                    ; preds = %cond.false127
  %34 = load i64, i64* %size.addr, align 8, !dbg !10040
  %sub133 = sub i64 %34, 1, !dbg !10040
  %and134 = and i64 %sub133, 274877906944, !dbg !10040
  %tobool135 = icmp ne i64 %and134, 0, !dbg !10040
  br i1 %tobool135, label %cond.true136, label %cond.false137, !dbg !10040

cond.true136:                                     ; preds = %cond.false132
  br label %cond.end385, !dbg !10040

cond.false137:                                    ; preds = %cond.false132
  %35 = load i64, i64* %size.addr, align 8, !dbg !10040
  %sub138 = sub i64 %35, 1, !dbg !10040
  %and139 = and i64 %sub138, 137438953472, !dbg !10040
  %tobool140 = icmp ne i64 %and139, 0, !dbg !10040
  br i1 %tobool140, label %cond.true141, label %cond.false142, !dbg !10040

cond.true141:                                     ; preds = %cond.false137
  br label %cond.end383, !dbg !10040

cond.false142:                                    ; preds = %cond.false137
  %36 = load i64, i64* %size.addr, align 8, !dbg !10040
  %sub143 = sub i64 %36, 1, !dbg !10040
  %and144 = and i64 %sub143, 68719476736, !dbg !10040
  %tobool145 = icmp ne i64 %and144, 0, !dbg !10040
  br i1 %tobool145, label %cond.true146, label %cond.false147, !dbg !10040

cond.true146:                                     ; preds = %cond.false142
  br label %cond.end381, !dbg !10040

cond.false147:                                    ; preds = %cond.false142
  %37 = load i64, i64* %size.addr, align 8, !dbg !10040
  %sub148 = sub i64 %37, 1, !dbg !10040
  %and149 = and i64 %sub148, 34359738368, !dbg !10040
  %tobool150 = icmp ne i64 %and149, 0, !dbg !10040
  br i1 %tobool150, label %cond.true151, label %cond.false152, !dbg !10040

cond.true151:                                     ; preds = %cond.false147
  br label %cond.end379, !dbg !10040

cond.false152:                                    ; preds = %cond.false147
  %38 = load i64, i64* %size.addr, align 8, !dbg !10040
  %sub153 = sub i64 %38, 1, !dbg !10040
  %and154 = and i64 %sub153, 17179869184, !dbg !10040
  %tobool155 = icmp ne i64 %and154, 0, !dbg !10040
  br i1 %tobool155, label %cond.true156, label %cond.false157, !dbg !10040

cond.true156:                                     ; preds = %cond.false152
  br label %cond.end377, !dbg !10040

cond.false157:                                    ; preds = %cond.false152
  %39 = load i64, i64* %size.addr, align 8, !dbg !10040
  %sub158 = sub i64 %39, 1, !dbg !10040
  %and159 = and i64 %sub158, 8589934592, !dbg !10040
  %tobool160 = icmp ne i64 %and159, 0, !dbg !10040
  br i1 %tobool160, label %cond.true161, label %cond.false162, !dbg !10040

cond.true161:                                     ; preds = %cond.false157
  br label %cond.end375, !dbg !10040

cond.false162:                                    ; preds = %cond.false157
  %40 = load i64, i64* %size.addr, align 8, !dbg !10040
  %sub163 = sub i64 %40, 1, !dbg !10040
  %and164 = and i64 %sub163, 4294967296, !dbg !10040
  %tobool165 = icmp ne i64 %and164, 0, !dbg !10040
  br i1 %tobool165, label %cond.true166, label %cond.false167, !dbg !10040

cond.true166:                                     ; preds = %cond.false162
  br label %cond.end373, !dbg !10040

cond.false167:                                    ; preds = %cond.false162
  %41 = load i64, i64* %size.addr, align 8, !dbg !10040
  %sub168 = sub i64 %41, 1, !dbg !10040
  %and169 = and i64 %sub168, 2147483648, !dbg !10040
  %tobool170 = icmp ne i64 %and169, 0, !dbg !10040
  br i1 %tobool170, label %cond.true171, label %cond.false172, !dbg !10040

cond.true171:                                     ; preds = %cond.false167
  br label %cond.end371, !dbg !10040

cond.false172:                                    ; preds = %cond.false167
  %42 = load i64, i64* %size.addr, align 8, !dbg !10040
  %sub173 = sub i64 %42, 1, !dbg !10040
  %and174 = and i64 %sub173, 1073741824, !dbg !10040
  %tobool175 = icmp ne i64 %and174, 0, !dbg !10040
  br i1 %tobool175, label %cond.true176, label %cond.false177, !dbg !10040

cond.true176:                                     ; preds = %cond.false172
  br label %cond.end369, !dbg !10040

cond.false177:                                    ; preds = %cond.false172
  %43 = load i64, i64* %size.addr, align 8, !dbg !10040
  %sub178 = sub i64 %43, 1, !dbg !10040
  %and179 = and i64 %sub178, 536870912, !dbg !10040
  %tobool180 = icmp ne i64 %and179, 0, !dbg !10040
  br i1 %tobool180, label %cond.true181, label %cond.false182, !dbg !10040

cond.true181:                                     ; preds = %cond.false177
  br label %cond.end367, !dbg !10040

cond.false182:                                    ; preds = %cond.false177
  %44 = load i64, i64* %size.addr, align 8, !dbg !10040
  %sub183 = sub i64 %44, 1, !dbg !10040
  %and184 = and i64 %sub183, 268435456, !dbg !10040
  %tobool185 = icmp ne i64 %and184, 0, !dbg !10040
  br i1 %tobool185, label %cond.true186, label %cond.false187, !dbg !10040

cond.true186:                                     ; preds = %cond.false182
  br label %cond.end365, !dbg !10040

cond.false187:                                    ; preds = %cond.false182
  %45 = load i64, i64* %size.addr, align 8, !dbg !10040
  %sub188 = sub i64 %45, 1, !dbg !10040
  %and189 = and i64 %sub188, 134217728, !dbg !10040
  %tobool190 = icmp ne i64 %and189, 0, !dbg !10040
  br i1 %tobool190, label %cond.true191, label %cond.false192, !dbg !10040

cond.true191:                                     ; preds = %cond.false187
  br label %cond.end363, !dbg !10040

cond.false192:                                    ; preds = %cond.false187
  %46 = load i64, i64* %size.addr, align 8, !dbg !10040
  %sub193 = sub i64 %46, 1, !dbg !10040
  %and194 = and i64 %sub193, 67108864, !dbg !10040
  %tobool195 = icmp ne i64 %and194, 0, !dbg !10040
  br i1 %tobool195, label %cond.true196, label %cond.false197, !dbg !10040

cond.true196:                                     ; preds = %cond.false192
  br label %cond.end361, !dbg !10040

cond.false197:                                    ; preds = %cond.false192
  %47 = load i64, i64* %size.addr, align 8, !dbg !10040
  %sub198 = sub i64 %47, 1, !dbg !10040
  %and199 = and i64 %sub198, 33554432, !dbg !10040
  %tobool200 = icmp ne i64 %and199, 0, !dbg !10040
  br i1 %tobool200, label %cond.true201, label %cond.false202, !dbg !10040

cond.true201:                                     ; preds = %cond.false197
  br label %cond.end359, !dbg !10040

cond.false202:                                    ; preds = %cond.false197
  %48 = load i64, i64* %size.addr, align 8, !dbg !10040
  %sub203 = sub i64 %48, 1, !dbg !10040
  %and204 = and i64 %sub203, 16777216, !dbg !10040
  %tobool205 = icmp ne i64 %and204, 0, !dbg !10040
  br i1 %tobool205, label %cond.true206, label %cond.false207, !dbg !10040

cond.true206:                                     ; preds = %cond.false202
  br label %cond.end357, !dbg !10040

cond.false207:                                    ; preds = %cond.false202
  %49 = load i64, i64* %size.addr, align 8, !dbg !10040
  %sub208 = sub i64 %49, 1, !dbg !10040
  %and209 = and i64 %sub208, 8388608, !dbg !10040
  %tobool210 = icmp ne i64 %and209, 0, !dbg !10040
  br i1 %tobool210, label %cond.true211, label %cond.false212, !dbg !10040

cond.true211:                                     ; preds = %cond.false207
  br label %cond.end355, !dbg !10040

cond.false212:                                    ; preds = %cond.false207
  %50 = load i64, i64* %size.addr, align 8, !dbg !10040
  %sub213 = sub i64 %50, 1, !dbg !10040
  %and214 = and i64 %sub213, 4194304, !dbg !10040
  %tobool215 = icmp ne i64 %and214, 0, !dbg !10040
  br i1 %tobool215, label %cond.true216, label %cond.false217, !dbg !10040

cond.true216:                                     ; preds = %cond.false212
  br label %cond.end353, !dbg !10040

cond.false217:                                    ; preds = %cond.false212
  %51 = load i64, i64* %size.addr, align 8, !dbg !10040
  %sub218 = sub i64 %51, 1, !dbg !10040
  %and219 = and i64 %sub218, 2097152, !dbg !10040
  %tobool220 = icmp ne i64 %and219, 0, !dbg !10040
  br i1 %tobool220, label %cond.true221, label %cond.false222, !dbg !10040

cond.true221:                                     ; preds = %cond.false217
  br label %cond.end351, !dbg !10040

cond.false222:                                    ; preds = %cond.false217
  %52 = load i64, i64* %size.addr, align 8, !dbg !10040
  %sub223 = sub i64 %52, 1, !dbg !10040
  %and224 = and i64 %sub223, 1048576, !dbg !10040
  %tobool225 = icmp ne i64 %and224, 0, !dbg !10040
  br i1 %tobool225, label %cond.true226, label %cond.false227, !dbg !10040

cond.true226:                                     ; preds = %cond.false222
  br label %cond.end349, !dbg !10040

cond.false227:                                    ; preds = %cond.false222
  %53 = load i64, i64* %size.addr, align 8, !dbg !10040
  %sub228 = sub i64 %53, 1, !dbg !10040
  %and229 = and i64 %sub228, 524288, !dbg !10040
  %tobool230 = icmp ne i64 %and229, 0, !dbg !10040
  br i1 %tobool230, label %cond.true231, label %cond.false232, !dbg !10040

cond.true231:                                     ; preds = %cond.false227
  br label %cond.end347, !dbg !10040

cond.false232:                                    ; preds = %cond.false227
  %54 = load i64, i64* %size.addr, align 8, !dbg !10040
  %sub233 = sub i64 %54, 1, !dbg !10040
  %and234 = and i64 %sub233, 262144, !dbg !10040
  %tobool235 = icmp ne i64 %and234, 0, !dbg !10040
  br i1 %tobool235, label %cond.true236, label %cond.false237, !dbg !10040

cond.true236:                                     ; preds = %cond.false232
  br label %cond.end345, !dbg !10040

cond.false237:                                    ; preds = %cond.false232
  %55 = load i64, i64* %size.addr, align 8, !dbg !10040
  %sub238 = sub i64 %55, 1, !dbg !10040
  %and239 = and i64 %sub238, 131072, !dbg !10040
  %tobool240 = icmp ne i64 %and239, 0, !dbg !10040
  br i1 %tobool240, label %cond.true241, label %cond.false242, !dbg !10040

cond.true241:                                     ; preds = %cond.false237
  br label %cond.end343, !dbg !10040

cond.false242:                                    ; preds = %cond.false237
  %56 = load i64, i64* %size.addr, align 8, !dbg !10040
  %sub243 = sub i64 %56, 1, !dbg !10040
  %and244 = and i64 %sub243, 65536, !dbg !10040
  %tobool245 = icmp ne i64 %and244, 0, !dbg !10040
  br i1 %tobool245, label %cond.true246, label %cond.false247, !dbg !10040

cond.true246:                                     ; preds = %cond.false242
  br label %cond.end341, !dbg !10040

cond.false247:                                    ; preds = %cond.false242
  %57 = load i64, i64* %size.addr, align 8, !dbg !10040
  %sub248 = sub i64 %57, 1, !dbg !10040
  %and249 = and i64 %sub248, 32768, !dbg !10040
  %tobool250 = icmp ne i64 %and249, 0, !dbg !10040
  br i1 %tobool250, label %cond.true251, label %cond.false252, !dbg !10040

cond.true251:                                     ; preds = %cond.false247
  br label %cond.end339, !dbg !10040

cond.false252:                                    ; preds = %cond.false247
  %58 = load i64, i64* %size.addr, align 8, !dbg !10040
  %sub253 = sub i64 %58, 1, !dbg !10040
  %and254 = and i64 %sub253, 16384, !dbg !10040
  %tobool255 = icmp ne i64 %and254, 0, !dbg !10040
  br i1 %tobool255, label %cond.true256, label %cond.false257, !dbg !10040

cond.true256:                                     ; preds = %cond.false252
  br label %cond.end337, !dbg !10040

cond.false257:                                    ; preds = %cond.false252
  %59 = load i64, i64* %size.addr, align 8, !dbg !10040
  %sub258 = sub i64 %59, 1, !dbg !10040
  %and259 = and i64 %sub258, 8192, !dbg !10040
  %tobool260 = icmp ne i64 %and259, 0, !dbg !10040
  br i1 %tobool260, label %cond.true261, label %cond.false262, !dbg !10040

cond.true261:                                     ; preds = %cond.false257
  br label %cond.end335, !dbg !10040

cond.false262:                                    ; preds = %cond.false257
  %60 = load i64, i64* %size.addr, align 8, !dbg !10040
  %sub263 = sub i64 %60, 1, !dbg !10040
  %and264 = and i64 %sub263, 4096, !dbg !10040
  %tobool265 = icmp ne i64 %and264, 0, !dbg !10040
  br i1 %tobool265, label %cond.true266, label %cond.false267, !dbg !10040

cond.true266:                                     ; preds = %cond.false262
  br label %cond.end333, !dbg !10040

cond.false267:                                    ; preds = %cond.false262
  %61 = load i64, i64* %size.addr, align 8, !dbg !10040
  %sub268 = sub i64 %61, 1, !dbg !10040
  %and269 = and i64 %sub268, 2048, !dbg !10040
  %tobool270 = icmp ne i64 %and269, 0, !dbg !10040
  br i1 %tobool270, label %cond.true271, label %cond.false272, !dbg !10040

cond.true271:                                     ; preds = %cond.false267
  br label %cond.end331, !dbg !10040

cond.false272:                                    ; preds = %cond.false267
  %62 = load i64, i64* %size.addr, align 8, !dbg !10040
  %sub273 = sub i64 %62, 1, !dbg !10040
  %and274 = and i64 %sub273, 1024, !dbg !10040
  %tobool275 = icmp ne i64 %and274, 0, !dbg !10040
  br i1 %tobool275, label %cond.true276, label %cond.false277, !dbg !10040

cond.true276:                                     ; preds = %cond.false272
  br label %cond.end329, !dbg !10040

cond.false277:                                    ; preds = %cond.false272
  %63 = load i64, i64* %size.addr, align 8, !dbg !10040
  %sub278 = sub i64 %63, 1, !dbg !10040
  %and279 = and i64 %sub278, 512, !dbg !10040
  %tobool280 = icmp ne i64 %and279, 0, !dbg !10040
  br i1 %tobool280, label %cond.true281, label %cond.false282, !dbg !10040

cond.true281:                                     ; preds = %cond.false277
  br label %cond.end327, !dbg !10040

cond.false282:                                    ; preds = %cond.false277
  %64 = load i64, i64* %size.addr, align 8, !dbg !10040
  %sub283 = sub i64 %64, 1, !dbg !10040
  %and284 = and i64 %sub283, 256, !dbg !10040
  %tobool285 = icmp ne i64 %and284, 0, !dbg !10040
  br i1 %tobool285, label %cond.true286, label %cond.false287, !dbg !10040

cond.true286:                                     ; preds = %cond.false282
  br label %cond.end325, !dbg !10040

cond.false287:                                    ; preds = %cond.false282
  %65 = load i64, i64* %size.addr, align 8, !dbg !10040
  %sub288 = sub i64 %65, 1, !dbg !10040
  %and289 = and i64 %sub288, 128, !dbg !10040
  %tobool290 = icmp ne i64 %and289, 0, !dbg !10040
  br i1 %tobool290, label %cond.true291, label %cond.false292, !dbg !10040

cond.true291:                                     ; preds = %cond.false287
  br label %cond.end323, !dbg !10040

cond.false292:                                    ; preds = %cond.false287
  %66 = load i64, i64* %size.addr, align 8, !dbg !10040
  %sub293 = sub i64 %66, 1, !dbg !10040
  %and294 = and i64 %sub293, 64, !dbg !10040
  %tobool295 = icmp ne i64 %and294, 0, !dbg !10040
  br i1 %tobool295, label %cond.true296, label %cond.false297, !dbg !10040

cond.true296:                                     ; preds = %cond.false292
  br label %cond.end321, !dbg !10040

cond.false297:                                    ; preds = %cond.false292
  %67 = load i64, i64* %size.addr, align 8, !dbg !10040
  %sub298 = sub i64 %67, 1, !dbg !10040
  %and299 = and i64 %sub298, 32, !dbg !10040
  %tobool300 = icmp ne i64 %and299, 0, !dbg !10040
  br i1 %tobool300, label %cond.true301, label %cond.false302, !dbg !10040

cond.true301:                                     ; preds = %cond.false297
  br label %cond.end319, !dbg !10040

cond.false302:                                    ; preds = %cond.false297
  %68 = load i64, i64* %size.addr, align 8, !dbg !10040
  %sub303 = sub i64 %68, 1, !dbg !10040
  %and304 = and i64 %sub303, 16, !dbg !10040
  %tobool305 = icmp ne i64 %and304, 0, !dbg !10040
  br i1 %tobool305, label %cond.true306, label %cond.false307, !dbg !10040

cond.true306:                                     ; preds = %cond.false302
  br label %cond.end317, !dbg !10040

cond.false307:                                    ; preds = %cond.false302
  %69 = load i64, i64* %size.addr, align 8, !dbg !10040
  %sub308 = sub i64 %69, 1, !dbg !10040
  %and309 = and i64 %sub308, 8, !dbg !10040
  %tobool310 = icmp ne i64 %and309, 0, !dbg !10040
  br i1 %tobool310, label %cond.true311, label %cond.false312, !dbg !10040

cond.true311:                                     ; preds = %cond.false307
  br label %cond.end, !dbg !10040

cond.false312:                                    ; preds = %cond.false307
  %70 = load i64, i64* %size.addr, align 8, !dbg !10040
  %sub313 = sub i64 %70, 1, !dbg !10040
  %and314 = and i64 %sub313, 4, !dbg !10040
  %tobool315 = icmp ne i64 %and314, 0, !dbg !10040
  %71 = zext i1 %tobool315 to i64, !dbg !10040
  %cond = select i1 %tobool315, i32 2, i32 1, !dbg !10040
  br label %cond.end, !dbg !10040

cond.end:                                         ; preds = %cond.false312, %cond.true311
  %cond316 = phi i32 [ 3, %cond.true311 ], [ %cond, %cond.false312 ], !dbg !10040
  br label %cond.end317, !dbg !10040

cond.end317:                                      ; preds = %cond.end, %cond.true306
  %cond318 = phi i32 [ 4, %cond.true306 ], [ %cond316, %cond.end ], !dbg !10040
  br label %cond.end319, !dbg !10040

cond.end319:                                      ; preds = %cond.end317, %cond.true301
  %cond320 = phi i32 [ 5, %cond.true301 ], [ %cond318, %cond.end317 ], !dbg !10040
  br label %cond.end321, !dbg !10040

cond.end321:                                      ; preds = %cond.end319, %cond.true296
  %cond322 = phi i32 [ 6, %cond.true296 ], [ %cond320, %cond.end319 ], !dbg !10040
  br label %cond.end323, !dbg !10040

cond.end323:                                      ; preds = %cond.end321, %cond.true291
  %cond324 = phi i32 [ 7, %cond.true291 ], [ %cond322, %cond.end321 ], !dbg !10040
  br label %cond.end325, !dbg !10040

cond.end325:                                      ; preds = %cond.end323, %cond.true286
  %cond326 = phi i32 [ 8, %cond.true286 ], [ %cond324, %cond.end323 ], !dbg !10040
  br label %cond.end327, !dbg !10040

cond.end327:                                      ; preds = %cond.end325, %cond.true281
  %cond328 = phi i32 [ 9, %cond.true281 ], [ %cond326, %cond.end325 ], !dbg !10040
  br label %cond.end329, !dbg !10040

cond.end329:                                      ; preds = %cond.end327, %cond.true276
  %cond330 = phi i32 [ 10, %cond.true276 ], [ %cond328, %cond.end327 ], !dbg !10040
  br label %cond.end331, !dbg !10040

cond.end331:                                      ; preds = %cond.end329, %cond.true271
  %cond332 = phi i32 [ 11, %cond.true271 ], [ %cond330, %cond.end329 ], !dbg !10040
  br label %cond.end333, !dbg !10040

cond.end333:                                      ; preds = %cond.end331, %cond.true266
  %cond334 = phi i32 [ 12, %cond.true266 ], [ %cond332, %cond.end331 ], !dbg !10040
  br label %cond.end335, !dbg !10040

cond.end335:                                      ; preds = %cond.end333, %cond.true261
  %cond336 = phi i32 [ 13, %cond.true261 ], [ %cond334, %cond.end333 ], !dbg !10040
  br label %cond.end337, !dbg !10040

cond.end337:                                      ; preds = %cond.end335, %cond.true256
  %cond338 = phi i32 [ 14, %cond.true256 ], [ %cond336, %cond.end335 ], !dbg !10040
  br label %cond.end339, !dbg !10040

cond.end339:                                      ; preds = %cond.end337, %cond.true251
  %cond340 = phi i32 [ 15, %cond.true251 ], [ %cond338, %cond.end337 ], !dbg !10040
  br label %cond.end341, !dbg !10040

cond.end341:                                      ; preds = %cond.end339, %cond.true246
  %cond342 = phi i32 [ 16, %cond.true246 ], [ %cond340, %cond.end339 ], !dbg !10040
  br label %cond.end343, !dbg !10040

cond.end343:                                      ; preds = %cond.end341, %cond.true241
  %cond344 = phi i32 [ 17, %cond.true241 ], [ %cond342, %cond.end341 ], !dbg !10040
  br label %cond.end345, !dbg !10040

cond.end345:                                      ; preds = %cond.end343, %cond.true236
  %cond346 = phi i32 [ 18, %cond.true236 ], [ %cond344, %cond.end343 ], !dbg !10040
  br label %cond.end347, !dbg !10040

cond.end347:                                      ; preds = %cond.end345, %cond.true231
  %cond348 = phi i32 [ 19, %cond.true231 ], [ %cond346, %cond.end345 ], !dbg !10040
  br label %cond.end349, !dbg !10040

cond.end349:                                      ; preds = %cond.end347, %cond.true226
  %cond350 = phi i32 [ 20, %cond.true226 ], [ %cond348, %cond.end347 ], !dbg !10040
  br label %cond.end351, !dbg !10040

cond.end351:                                      ; preds = %cond.end349, %cond.true221
  %cond352 = phi i32 [ 21, %cond.true221 ], [ %cond350, %cond.end349 ], !dbg !10040
  br label %cond.end353, !dbg !10040

cond.end353:                                      ; preds = %cond.end351, %cond.true216
  %cond354 = phi i32 [ 22, %cond.true216 ], [ %cond352, %cond.end351 ], !dbg !10040
  br label %cond.end355, !dbg !10040

cond.end355:                                      ; preds = %cond.end353, %cond.true211
  %cond356 = phi i32 [ 23, %cond.true211 ], [ %cond354, %cond.end353 ], !dbg !10040
  br label %cond.end357, !dbg !10040

cond.end357:                                      ; preds = %cond.end355, %cond.true206
  %cond358 = phi i32 [ 24, %cond.true206 ], [ %cond356, %cond.end355 ], !dbg !10040
  br label %cond.end359, !dbg !10040

cond.end359:                                      ; preds = %cond.end357, %cond.true201
  %cond360 = phi i32 [ 25, %cond.true201 ], [ %cond358, %cond.end357 ], !dbg !10040
  br label %cond.end361, !dbg !10040

cond.end361:                                      ; preds = %cond.end359, %cond.true196
  %cond362 = phi i32 [ 26, %cond.true196 ], [ %cond360, %cond.end359 ], !dbg !10040
  br label %cond.end363, !dbg !10040

cond.end363:                                      ; preds = %cond.end361, %cond.true191
  %cond364 = phi i32 [ 27, %cond.true191 ], [ %cond362, %cond.end361 ], !dbg !10040
  br label %cond.end365, !dbg !10040

cond.end365:                                      ; preds = %cond.end363, %cond.true186
  %cond366 = phi i32 [ 28, %cond.true186 ], [ %cond364, %cond.end363 ], !dbg !10040
  br label %cond.end367, !dbg !10040

cond.end367:                                      ; preds = %cond.end365, %cond.true181
  %cond368 = phi i32 [ 29, %cond.true181 ], [ %cond366, %cond.end365 ], !dbg !10040
  br label %cond.end369, !dbg !10040

cond.end369:                                      ; preds = %cond.end367, %cond.true176
  %cond370 = phi i32 [ 30, %cond.true176 ], [ %cond368, %cond.end367 ], !dbg !10040
  br label %cond.end371, !dbg !10040

cond.end371:                                      ; preds = %cond.end369, %cond.true171
  %cond372 = phi i32 [ 31, %cond.true171 ], [ %cond370, %cond.end369 ], !dbg !10040
  br label %cond.end373, !dbg !10040

cond.end373:                                      ; preds = %cond.end371, %cond.true166
  %cond374 = phi i32 [ 32, %cond.true166 ], [ %cond372, %cond.end371 ], !dbg !10040
  br label %cond.end375, !dbg !10040

cond.end375:                                      ; preds = %cond.end373, %cond.true161
  %cond376 = phi i32 [ 33, %cond.true161 ], [ %cond374, %cond.end373 ], !dbg !10040
  br label %cond.end377, !dbg !10040

cond.end377:                                      ; preds = %cond.end375, %cond.true156
  %cond378 = phi i32 [ 34, %cond.true156 ], [ %cond376, %cond.end375 ], !dbg !10040
  br label %cond.end379, !dbg !10040

cond.end379:                                      ; preds = %cond.end377, %cond.true151
  %cond380 = phi i32 [ 35, %cond.true151 ], [ %cond378, %cond.end377 ], !dbg !10040
  br label %cond.end381, !dbg !10040

cond.end381:                                      ; preds = %cond.end379, %cond.true146
  %cond382 = phi i32 [ 36, %cond.true146 ], [ %cond380, %cond.end379 ], !dbg !10040
  br label %cond.end383, !dbg !10040

cond.end383:                                      ; preds = %cond.end381, %cond.true141
  %cond384 = phi i32 [ 37, %cond.true141 ], [ %cond382, %cond.end381 ], !dbg !10040
  br label %cond.end385, !dbg !10040

cond.end385:                                      ; preds = %cond.end383, %cond.true136
  %cond386 = phi i32 [ 38, %cond.true136 ], [ %cond384, %cond.end383 ], !dbg !10040
  br label %cond.end387, !dbg !10040

cond.end387:                                      ; preds = %cond.end385, %cond.true131
  %cond388 = phi i32 [ 39, %cond.true131 ], [ %cond386, %cond.end385 ], !dbg !10040
  br label %cond.end389, !dbg !10040

cond.end389:                                      ; preds = %cond.end387, %cond.true126
  %cond390 = phi i32 [ 40, %cond.true126 ], [ %cond388, %cond.end387 ], !dbg !10040
  br label %cond.end391, !dbg !10040

cond.end391:                                      ; preds = %cond.end389, %cond.true121
  %cond392 = phi i32 [ 41, %cond.true121 ], [ %cond390, %cond.end389 ], !dbg !10040
  br label %cond.end393, !dbg !10040

cond.end393:                                      ; preds = %cond.end391, %cond.true116
  %cond394 = phi i32 [ 42, %cond.true116 ], [ %cond392, %cond.end391 ], !dbg !10040
  br label %cond.end395, !dbg !10040

cond.end395:                                      ; preds = %cond.end393, %cond.true111
  %cond396 = phi i32 [ 43, %cond.true111 ], [ %cond394, %cond.end393 ], !dbg !10040
  br label %cond.end397, !dbg !10040

cond.end397:                                      ; preds = %cond.end395, %cond.true106
  %cond398 = phi i32 [ 44, %cond.true106 ], [ %cond396, %cond.end395 ], !dbg !10040
  br label %cond.end399, !dbg !10040

cond.end399:                                      ; preds = %cond.end397, %cond.true101
  %cond400 = phi i32 [ 45, %cond.true101 ], [ %cond398, %cond.end397 ], !dbg !10040
  br label %cond.end401, !dbg !10040

cond.end401:                                      ; preds = %cond.end399, %cond.true96
  %cond402 = phi i32 [ 46, %cond.true96 ], [ %cond400, %cond.end399 ], !dbg !10040
  br label %cond.end403, !dbg !10040

cond.end403:                                      ; preds = %cond.end401, %cond.true91
  %cond404 = phi i32 [ 47, %cond.true91 ], [ %cond402, %cond.end401 ], !dbg !10040
  br label %cond.end405, !dbg !10040

cond.end405:                                      ; preds = %cond.end403, %cond.true86
  %cond406 = phi i32 [ 48, %cond.true86 ], [ %cond404, %cond.end403 ], !dbg !10040
  br label %cond.end407, !dbg !10040

cond.end407:                                      ; preds = %cond.end405, %cond.true81
  %cond408 = phi i32 [ 49, %cond.true81 ], [ %cond406, %cond.end405 ], !dbg !10040
  br label %cond.end409, !dbg !10040

cond.end409:                                      ; preds = %cond.end407, %cond.true76
  %cond410 = phi i32 [ 50, %cond.true76 ], [ %cond408, %cond.end407 ], !dbg !10040
  br label %cond.end411, !dbg !10040

cond.end411:                                      ; preds = %cond.end409, %cond.true71
  %cond412 = phi i32 [ 51, %cond.true71 ], [ %cond410, %cond.end409 ], !dbg !10040
  br label %cond.end413, !dbg !10040

cond.end413:                                      ; preds = %cond.end411, %cond.true66
  %cond414 = phi i32 [ 52, %cond.true66 ], [ %cond412, %cond.end411 ], !dbg !10040
  br label %cond.end415, !dbg !10040

cond.end415:                                      ; preds = %cond.end413, %cond.true61
  %cond416 = phi i32 [ 53, %cond.true61 ], [ %cond414, %cond.end413 ], !dbg !10040
  br label %cond.end417, !dbg !10040

cond.end417:                                      ; preds = %cond.end415, %cond.true56
  %cond418 = phi i32 [ 54, %cond.true56 ], [ %cond416, %cond.end415 ], !dbg !10040
  br label %cond.end419, !dbg !10040

cond.end419:                                      ; preds = %cond.end417, %cond.true51
  %cond420 = phi i32 [ 55, %cond.true51 ], [ %cond418, %cond.end417 ], !dbg !10040
  br label %cond.end421, !dbg !10040

cond.end421:                                      ; preds = %cond.end419, %cond.true46
  %cond422 = phi i32 [ 56, %cond.true46 ], [ %cond420, %cond.end419 ], !dbg !10040
  br label %cond.end423, !dbg !10040

cond.end423:                                      ; preds = %cond.end421, %cond.true41
  %cond424 = phi i32 [ 57, %cond.true41 ], [ %cond422, %cond.end421 ], !dbg !10040
  br label %cond.end425, !dbg !10040

cond.end425:                                      ; preds = %cond.end423, %cond.true36
  %cond426 = phi i32 [ 58, %cond.true36 ], [ %cond424, %cond.end423 ], !dbg !10040
  br label %cond.end427, !dbg !10040

cond.end427:                                      ; preds = %cond.end425, %cond.true31
  %cond428 = phi i32 [ 59, %cond.true31 ], [ %cond426, %cond.end425 ], !dbg !10040
  br label %cond.end429, !dbg !10040

cond.end429:                                      ; preds = %cond.end427, %cond.true26
  %cond430 = phi i32 [ 60, %cond.true26 ], [ %cond428, %cond.end427 ], !dbg !10040
  br label %cond.end431, !dbg !10040

cond.end431:                                      ; preds = %cond.end429, %cond.true21
  %cond432 = phi i32 [ 61, %cond.true21 ], [ %cond430, %cond.end429 ], !dbg !10040
  br label %cond.end433, !dbg !10040

cond.end433:                                      ; preds = %cond.end431, %cond.true16
  %cond434 = phi i32 [ 62, %cond.true16 ], [ %cond432, %cond.end431 ], !dbg !10040
  br label %cond.end435, !dbg !10040

cond.end435:                                      ; preds = %cond.end433, %cond.true11
  %cond436 = phi i32 [ 63, %cond.true11 ], [ %cond434, %cond.end433 ], !dbg !10040
  br label %cond.end437, !dbg !10040

cond.end437:                                      ; preds = %cond.end435, %cond.true8
  %cond438 = phi i32 [ 0, %cond.true8 ], [ %cond436, %cond.end435 ], !dbg !10040
  br label %cond.end440, !dbg !10040

cond.false439:                                    ; preds = %cond.true
  br label %cond.end440, !dbg !10040

cond.end440:                                      ; preds = %cond.false439, %cond.end437
  %cond441 = phi i32 [ %cond438, %cond.end437 ], [ -1, %cond.false439 ], !dbg !10040
  br label %cond.end444, !dbg !10040

cond.false442:                                    ; preds = %if.end3
  %72 = load i64, i64* %size.addr, align 8, !dbg !10040
  %sub443 = sub i64 %72, 1, !dbg !10040
  %call = call i32 @__ilog2_u64(i64 %sub443) #12, !dbg !10040
  br label %cond.end444, !dbg !10040

cond.end444:                                      ; preds = %cond.false442, %cond.end440
  %cond445 = phi i32 [ %cond441, %cond.end440 ], [ %call, %cond.false442 ], !dbg !10040
  %sub446 = sub i32 %cond445, 12, !dbg !10041
  %add = add i32 %sub446, 1, !dbg !10042
  store i32 %add, i32* %retval, align 4, !dbg !10043
  br label %return, !dbg !10043

if.end447:                                        ; preds = %entry
  %73 = load i64, i64* %size.addr, align 8, !dbg !10044
  %dec = add i64 %73, -1, !dbg !10044
  store i64 %dec, i64* %size.addr, align 8, !dbg !10044
  %74 = load i64, i64* %size.addr, align 8, !dbg !10045
  %shr = lshr i64 %74, 12, !dbg !10045
  store i64 %shr, i64* %size.addr, align 8, !dbg !10045
  %75 = load i64, i64* %size.addr, align 8, !dbg !10046
  store i64 %75, i64* %x.addr.i, align 8
  store i32 -1, i32* %bitpos.i, align 4, !dbg !10023
  %76 = load i32, i32* %bitpos.i, align 4, !dbg !10047
  %77 = load i64, i64* %x.addr.i, align 8, !dbg !10048
  %78 = call i32 asm "bsrq $1,${0:q}", "=r,rm,0,~{dirflag},~{fpsr},~{flags}"(i64 %77, i32 %76) #14, !dbg !10047, !srcloc !10049
  store i32 %78, i32* %bitpos.i, align 4, !dbg !10047
  %79 = load i32, i32* %bitpos.i, align 4, !dbg !10050
  %add.i = add i32 %79, 1, !dbg !10051
  store i32 %add.i, i32* %retval, align 4, !dbg !10052
  br label %return, !dbg !10052

return:                                           ; preds = %if.end447, %cond.end444, %if.then2, %if.then1
  %80 = load i32, i32* %retval, align 4, !dbg !10053
  ret i32 %80, !dbg !10053
}

; Function Attrs: noinline noredzone nounwind optnone readnone sspstrong
define internal i32 @__ilog2_u64(i64 %n) #8 !dbg !10054 {
entry:
  %x.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %x.addr.i, metadata !10015, metadata !DIExpression()), !dbg !10058
  %bitpos.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %bitpos.i, metadata !10022, metadata !DIExpression()), !dbg !10060
  %n.addr = alloca i64, align 8
  store i64 %n, i64* %n.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %n.addr, metadata !10061, metadata !DIExpression()), !dbg !10062
  %0 = load i64, i64* %n.addr, align 8, !dbg !10063
  store i64 %0, i64* %x.addr.i, align 8
  store i32 -1, i32* %bitpos.i, align 4, !dbg !10060
  %1 = load i32, i32* %bitpos.i, align 4, !dbg !10064
  %2 = load i64, i64* %x.addr.i, align 8, !dbg !10065
  %3 = call i32 asm "bsrq $1,${0:q}", "=r,rm,0,~{dirflag},~{fpsr},~{flags}"(i64 %2, i32 %1) #14, !dbg !10064, !srcloc !10049
  store i32 %3, i32* %bitpos.i, align 4, !dbg !10064
  %4 = load i32, i32* %bitpos.i, align 4, !dbg !10066
  %add.i = add i32 %4, 1, !dbg !10067
  %sub = sub i32 %add.i, 1, !dbg !10068
  ret i32 %sub, !dbg !10069
}

; Function Attrs: noredzone
declare dso_local noalias i8* @kmalloc_order(i64, i32, i32) #1

; Function Attrs: noredzone
declare dso_local noalias i8* @kmem_cache_alloc(%struct.kmem_cache*, i32) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @kasan_kmalloc(%struct.kmem_cache* %s, i8* %object, i64 %size, i32 %flags) #0 !dbg !10070 {
entry:
  %s.addr = alloca %struct.kmem_cache*, align 8
  %object.addr = alloca i8*, align 8
  %size.addr = alloca i64, align 8
  %flags.addr = alloca i32, align 4
  store %struct.kmem_cache* %s, %struct.kmem_cache** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.kmem_cache** %s.addr, metadata !10074, metadata !DIExpression()), !dbg !10075
  store i8* %object, i8** %object.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %object.addr, metadata !10076, metadata !DIExpression()), !dbg !10077
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !10078, metadata !DIExpression()), !dbg !10079
  store i32 %flags, i32* %flags.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr, metadata !10080, metadata !DIExpression()), !dbg !10081
  %0 = load i8*, i8** %object.addr, align 8, !dbg !10082
  ret i8* %0, !dbg !10083
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @queue_work(%struct.workqueue_struct* %wq, %struct.work_struct* %work) #0 !dbg !10084 {
entry:
  %wq.addr = alloca %struct.workqueue_struct*, align 8
  %work.addr = alloca %struct.work_struct*, align 8
  store %struct.workqueue_struct* %wq, %struct.workqueue_struct** %wq.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.workqueue_struct** %wq.addr, metadata !10087, metadata !DIExpression()), !dbg !10088
  store %struct.work_struct* %work, %struct.work_struct** %work.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.work_struct** %work.addr, metadata !10089, metadata !DIExpression()), !dbg !10090
  %0 = load %struct.workqueue_struct*, %struct.workqueue_struct** %wq.addr, align 8, !dbg !10091
  %1 = load %struct.work_struct*, %struct.work_struct** %work.addr, align 8, !dbg !10092
  %call = call zeroext i1 @queue_work_on(i32 1, %struct.workqueue_struct* %0, %struct.work_struct* %1) #9, !dbg !10093
  ret i1 %call, !dbg !10094
}

; Function Attrs: noredzone
declare dso_local zeroext i1 @queue_work_on(i32, %struct.workqueue_struct*, %struct.work_struct*) #1

attributes #0 = { noinline noredzone nounwind optnone sspstrong "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="true" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,-3dnow,-3dnowa,-aes,-avx,-avx2,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-f16c,-fma,-fma4,-gfni,-mmx,-pclmul,-sha,-sse,-sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-ssse3,-vaes,-vpclmulqdq,-x87,-xop,-xsave,-xsaveopt" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { noredzone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,-3dnow,-3dnowa,-aes,-avx,-avx2,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-f16c,-fma,-fma4,-gfni,-mmx,-pclmul,-sha,-sse,-sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-ssse3,-vaes,-vpclmulqdq,-x87,-xop,-xsave,-xsaveopt" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind readnone speculatable willreturn }
attributes #3 = { argmemonly nounwind willreturn }
attributes #4 = { cold noredzone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,-3dnow,-3dnowa,-aes,-avx,-avx2,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-f16c,-fma,-fma4,-gfni,-mmx,-pclmul,-sha,-sse,-sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-ssse3,-vaes,-vpclmulqdq,-x87,-xop,-xsave,-xsaveopt" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { cold noinline noredzone nounwind optnone sspstrong "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="true" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,-3dnow,-3dnowa,-aes,-avx,-avx2,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-f16c,-fma,-fma4,-gfni,-mmx,-pclmul,-sha,-sse,-sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-ssse3,-vaes,-vpclmulqdq,-x87,-xop,-xsave,-xsaveopt" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind readnone willreturn }
attributes #7 = { nounwind willreturn }
attributes #8 = { noinline noredzone nounwind optnone readnone sspstrong "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="true" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,-3dnow,-3dnowa,-aes,-avx,-avx2,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-f16c,-fma,-fma4,-gfni,-mmx,-pclmul,-sha,-sse,-sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-ssse3,-vaes,-vpclmulqdq,-x87,-xop,-xsave,-xsaveopt" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { noredzone }
attributes #10 = { cold noredzone }
attributes #11 = { nounwind }
attributes #12 = { noredzone nounwind readnone }
attributes #13 = { noredzone nounwind }
attributes #14 = { nounwind readonly }

!llvm.dbg.cu = !{!2}
!llvm.module.flags = !{!4487, !4488, !4489, !4490}
!llvm.ident = !{!4491}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "acpi_bus_id_list", scope: !2, file: !3, line: 38, type: !199, isLocal: false, isDefinition: true)
!2 = distinct !DICompileUnit(language: DW_LANG_C89, file: !3, producer: "clang version 10.0.1 (https://github.com/llvm/llvm-project.git ef32c611aa214dea855364efd7ba451ec5ec3f74)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !192, globals: !4367, splitDebugInlining: false, nameTableKind: None)
!3 = !DIFile(filename: "drivers/acpi/scan.c", directory: "/home/lizy2001/genbc/linux")
!4 = !{!5, !13, !19, !24, !30, !37, !43, !52, !60, !66, !72, !79, !87, !93, !107, !114, !119, !130, !136, !169, !174, !185}
!5 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "migrate_mode", file: !6, line: 15, baseType: !7, size: 32, elements: !8)
!6 = !DIFile(filename: "./include/linux/migrate_mode.h", directory: "/home/lizy2001/genbc/linux")
!7 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!8 = !{!9, !10, !11, !12}
!9 = !DIEnumerator(name: "MIGRATE_ASYNC", value: 0, isUnsigned: true)
!10 = !DIEnumerator(name: "MIGRATE_SYNC_LIGHT", value: 1, isUnsigned: true)
!11 = !DIEnumerator(name: "MIGRATE_SYNC", value: 2, isUnsigned: true)
!12 = !DIEnumerator(name: "MIGRATE_SYNC_NO_COPY", value: 3, isUnsigned: true)
!13 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "page_entry_size", file: !14, line: 546, baseType: !7, size: 32, elements: !15)
!14 = !DIFile(filename: "./include/linux/mm.h", directory: "/home/lizy2001/genbc/linux")
!15 = !{!16, !17, !18}
!16 = !DIEnumerator(name: "PE_SIZE_PTE", value: 0, isUnsigned: true)
!17 = !DIEnumerator(name: "PE_SIZE_PMD", value: 1, isUnsigned: true)
!18 = !DIEnumerator(name: "PE_SIZE_PUD", value: 2, isUnsigned: true)
!19 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "hrtimer_restart", file: !20, line: 65, baseType: !7, size: 32, elements: !21)
!20 = !DIFile(filename: "./include/linux/hrtimer.h", directory: "/home/lizy2001/genbc/linux")
!21 = !{!22, !23}
!22 = !DIEnumerator(name: "HRTIMER_NORESTART", value: 0, isUnsigned: true)
!23 = !DIEnumerator(name: "HRTIMER_RESTART", value: 1, isUnsigned: true)
!24 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "timespec_type", file: !25, line: 16, baseType: !7, size: 32, elements: !26)
!25 = !DIFile(filename: "./include/linux/restart_block.h", directory: "/home/lizy2001/genbc/linux")
!26 = !{!27, !28, !29}
!27 = !DIEnumerator(name: "TT_NONE", value: 0, isUnsigned: true)
!28 = !DIEnumerator(name: "TT_NATIVE", value: 1, isUnsigned: true)
!29 = !DIEnumerator(name: "TT_COMPAT", value: 2, isUnsigned: true)
!30 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "memory_type", file: !31, line: 59, baseType: !7, size: 32, elements: !32)
!31 = !DIFile(filename: "./include/linux/memremap.h", directory: "/home/lizy2001/genbc/linux")
!32 = !{!33, !34, !35, !36}
!33 = !DIEnumerator(name: "MEMORY_DEVICE_PRIVATE", value: 1, isUnsigned: true)
!34 = !DIEnumerator(name: "MEMORY_DEVICE_FS_DAX", value: 2, isUnsigned: true)
!35 = !DIEnumerator(name: "MEMORY_DEVICE_GENERIC", value: 3, isUnsigned: true)
!36 = !DIEnumerator(name: "MEMORY_DEVICE_PCI_P2PDMA", value: 4, isUnsigned: true)
!37 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "quota_type", file: !38, line: 54, baseType: !7, size: 32, elements: !39)
!38 = !DIFile(filename: "./include/linux/quota.h", directory: "/home/lizy2001/genbc/linux")
!39 = !{!40, !41, !42}
!40 = !DIEnumerator(name: "USRQUOTA", value: 0, isUnsigned: true)
!41 = !DIEnumerator(name: "GRPQUOTA", value: 1, isUnsigned: true)
!42 = !DIEnumerator(name: "PRJQUOTA", value: 2, isUnsigned: true)
!43 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "rw_hint", file: !44, line: 296, baseType: !7, size: 32, elements: !45)
!44 = !DIFile(filename: "./include/linux/fs.h", directory: "/home/lizy2001/genbc/linux")
!45 = !{!46, !47, !48, !49, !50, !51}
!46 = !DIEnumerator(name: "WRITE_LIFE_NOT_SET", value: 0, isUnsigned: true)
!47 = !DIEnumerator(name: "WRITE_LIFE_NONE", value: 1, isUnsigned: true)
!48 = !DIEnumerator(name: "WRITE_LIFE_SHORT", value: 2, isUnsigned: true)
!49 = !DIEnumerator(name: "WRITE_LIFE_MEDIUM", value: 3, isUnsigned: true)
!50 = !DIEnumerator(name: "WRITE_LIFE_LONG", value: 4, isUnsigned: true)
!51 = !DIEnumerator(name: "WRITE_LIFE_EXTREME", value: 5, isUnsigned: true)
!52 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "pid_type", file: !53, line: 9, baseType: !7, size: 32, elements: !54)
!53 = !DIFile(filename: "./include/linux/pid.h", directory: "/home/lizy2001/genbc/linux")
!54 = !{!55, !56, !57, !58, !59}
!55 = !DIEnumerator(name: "PIDTYPE_PID", value: 0, isUnsigned: true)
!56 = !DIEnumerator(name: "PIDTYPE_TGID", value: 1, isUnsigned: true)
!57 = !DIEnumerator(name: "PIDTYPE_PGID", value: 2, isUnsigned: true)
!58 = !DIEnumerator(name: "PIDTYPE_SID", value: 3, isUnsigned: true)
!59 = !DIEnumerator(name: "PIDTYPE_MAX", value: 4, isUnsigned: true)
!60 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "kobj_ns_type", file: !61, line: 26, baseType: !7, size: 32, elements: !62)
!61 = !DIFile(filename: "./include/linux/kobject_ns.h", directory: "/home/lizy2001/genbc/linux")
!62 = !{!63, !64, !65}
!63 = !DIEnumerator(name: "KOBJ_NS_TYPE_NONE", value: 0, isUnsigned: true)
!64 = !DIEnumerator(name: "KOBJ_NS_TYPE_NET", value: 1, isUnsigned: true)
!65 = !DIEnumerator(name: "KOBJ_NS_TYPES", value: 2, isUnsigned: true)
!66 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "probe_type", file: !67, line: 44, baseType: !7, size: 32, elements: !68)
!67 = !DIFile(filename: "./include/linux/device/driver.h", directory: "/home/lizy2001/genbc/linux")
!68 = !{!69, !70, !71}
!69 = !DIEnumerator(name: "PROBE_DEFAULT_STRATEGY", value: 0, isUnsigned: true)
!70 = !DIEnumerator(name: "PROBE_PREFER_ASYNCHRONOUS", value: 1, isUnsigned: true)
!71 = !DIEnumerator(name: "PROBE_FORCE_SYNCHRONOUS", value: 2, isUnsigned: true)
!72 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "dl_dev_state", file: !73, line: 343, baseType: !7, size: 32, elements: !74)
!73 = !DIFile(filename: "./include/linux/device.h", directory: "/home/lizy2001/genbc/linux")
!74 = !{!75, !76, !77, !78}
!75 = !DIEnumerator(name: "DL_DEV_NO_DRIVER", value: 0, isUnsigned: true)
!76 = !DIEnumerator(name: "DL_DEV_PROBING", value: 1, isUnsigned: true)
!77 = !DIEnumerator(name: "DL_DEV_DRIVER_BOUND", value: 2, isUnsigned: true)
!78 = !DIEnumerator(name: "DL_DEV_UNBINDING", value: 3, isUnsigned: true)
!79 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "rpm_request", file: !80, line: 524, baseType: !7, size: 32, elements: !81)
!80 = !DIFile(filename: "./include/linux/pm.h", directory: "/home/lizy2001/genbc/linux")
!81 = !{!82, !83, !84, !85, !86}
!82 = !DIEnumerator(name: "RPM_REQ_NONE", value: 0, isUnsigned: true)
!83 = !DIEnumerator(name: "RPM_REQ_IDLE", value: 1, isUnsigned: true)
!84 = !DIEnumerator(name: "RPM_REQ_SUSPEND", value: 2, isUnsigned: true)
!85 = !DIEnumerator(name: "RPM_REQ_AUTOSUSPEND", value: 3, isUnsigned: true)
!86 = !DIEnumerator(name: "RPM_REQ_RESUME", value: 4, isUnsigned: true)
!87 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "rpm_status", file: !80, line: 502, baseType: !7, size: 32, elements: !88)
!88 = !{!89, !90, !91, !92}
!89 = !DIEnumerator(name: "RPM_ACTIVE", value: 0, isUnsigned: true)
!90 = !DIEnumerator(name: "RPM_RESUMING", value: 1, isUnsigned: true)
!91 = !DIEnumerator(name: "RPM_SUSPENDED", value: 2, isUnsigned: true)
!92 = !DIEnumerator(name: "RPM_SUSPENDING", value: 3, isUnsigned: true)
!93 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "irq_domain_bus_token", file: !94, line: 76, baseType: !7, size: 32, elements: !95)
!94 = !DIFile(filename: "./include/linux/irqdomain.h", directory: "/home/lizy2001/genbc/linux")
!95 = !{!96, !97, !98, !99, !100, !101, !102, !103, !104, !105, !106}
!96 = !DIEnumerator(name: "DOMAIN_BUS_ANY", value: 0, isUnsigned: true)
!97 = !DIEnumerator(name: "DOMAIN_BUS_WIRED", value: 1, isUnsigned: true)
!98 = !DIEnumerator(name: "DOMAIN_BUS_GENERIC_MSI", value: 2, isUnsigned: true)
!99 = !DIEnumerator(name: "DOMAIN_BUS_PCI_MSI", value: 3, isUnsigned: true)
!100 = !DIEnumerator(name: "DOMAIN_BUS_PLATFORM_MSI", value: 4, isUnsigned: true)
!101 = !DIEnumerator(name: "DOMAIN_BUS_NEXUS", value: 5, isUnsigned: true)
!102 = !DIEnumerator(name: "DOMAIN_BUS_IPI", value: 6, isUnsigned: true)
!103 = !DIEnumerator(name: "DOMAIN_BUS_FSL_MC_MSI", value: 7, isUnsigned: true)
!104 = !DIEnumerator(name: "DOMAIN_BUS_TI_SCI_INTA_MSI", value: 8, isUnsigned: true)
!105 = !DIEnumerator(name: "DOMAIN_BUS_WAKEUP", value: 9, isUnsigned: true)
!106 = !DIEnumerator(name: "DOMAIN_BUS_VMD_MSI", value: 10, isUnsigned: true)
!107 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "dma_data_direction", file: !108, line: 5, baseType: !7, size: 32, elements: !109)
!108 = !DIFile(filename: "./include/linux/dma-direction.h", directory: "/home/lizy2001/genbc/linux")
!109 = !{!110, !111, !112, !113}
!110 = !DIEnumerator(name: "DMA_BIDIRECTIONAL", value: 0, isUnsigned: true)
!111 = !DIEnumerator(name: "DMA_TO_DEVICE", value: 1, isUnsigned: true)
!112 = !DIEnumerator(name: "DMA_FROM_DEVICE", value: 2, isUnsigned: true)
!113 = !DIEnumerator(name: "DMA_NONE", value: 3, isUnsigned: true)
!114 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !115, line: 10, baseType: !7, size: 32, elements: !116)
!115 = !DIFile(filename: "./include/linux/stddef.h", directory: "/home/lizy2001/genbc/linux")
!116 = !{!117, !118}
!117 = !DIEnumerator(name: "false", value: 0, isUnsigned: true)
!118 = !DIEnumerator(name: "true", value: 1, isUnsigned: true)
!119 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "kobject_action", file: !120, line: 53, baseType: !7, size: 32, elements: !121)
!120 = !DIFile(filename: "./include/linux/kobject.h", directory: "/home/lizy2001/genbc/linux")
!121 = !{!122, !123, !124, !125, !126, !127, !128, !129}
!122 = !DIEnumerator(name: "KOBJ_ADD", value: 0, isUnsigned: true)
!123 = !DIEnumerator(name: "KOBJ_REMOVE", value: 1, isUnsigned: true)
!124 = !DIEnumerator(name: "KOBJ_CHANGE", value: 2, isUnsigned: true)
!125 = !DIEnumerator(name: "KOBJ_MOVE", value: 3, isUnsigned: true)
!126 = !DIEnumerator(name: "KOBJ_ONLINE", value: 4, isUnsigned: true)
!127 = !DIEnumerator(name: "KOBJ_OFFLINE", value: 5, isUnsigned: true)
!128 = !DIEnumerator(name: "KOBJ_BIND", value: 6, isUnsigned: true)
!129 = !DIEnumerator(name: "KOBJ_UNBIND", value: 7, isUnsigned: true)
!130 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "dev_dma_attr", file: !131, line: 28, baseType: !7, size: 32, elements: !132)
!131 = !DIFile(filename: "./include/linux/property.h", directory: "/home/lizy2001/genbc/linux")
!132 = !{!133, !134, !135}
!133 = !DIEnumerator(name: "DEV_DMA_NOT_SUPPORTED", value: 0, isUnsigned: true)
!134 = !DIEnumerator(name: "DEV_DMA_NON_COHERENT", value: 1, isUnsigned: true)
!135 = !DIEnumerator(name: "DEV_DMA_COHERENT", value: 2, isUnsigned: true)
!136 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !137, line: 30, baseType: !138, size: 64, elements: !139)
!137 = !DIFile(filename: "./include/linux/workqueue.h", directory: "/home/lizy2001/genbc/linux")
!138 = !DIBasicType(name: "long int", size: 64, encoding: DW_ATE_signed)
!139 = !{!140, !141, !142, !143, !144, !145, !146, !147, !148, !149, !150, !151, !152, !153, !154, !155, !156, !157, !158, !159, !160, !161, !162, !163, !164, !165, !166, !167, !168}
!140 = !DIEnumerator(name: "WORK_STRUCT_PENDING_BIT", value: 0)
!141 = !DIEnumerator(name: "WORK_STRUCT_DELAYED_BIT", value: 1)
!142 = !DIEnumerator(name: "WORK_STRUCT_PWQ_BIT", value: 2)
!143 = !DIEnumerator(name: "WORK_STRUCT_LINKED_BIT", value: 3)
!144 = !DIEnumerator(name: "WORK_STRUCT_COLOR_SHIFT", value: 4)
!145 = !DIEnumerator(name: "WORK_STRUCT_COLOR_BITS", value: 4)
!146 = !DIEnumerator(name: "WORK_STRUCT_PENDING", value: 1)
!147 = !DIEnumerator(name: "WORK_STRUCT_DELAYED", value: 2)
!148 = !DIEnumerator(name: "WORK_STRUCT_PWQ", value: 4)
!149 = !DIEnumerator(name: "WORK_STRUCT_LINKED", value: 8)
!150 = !DIEnumerator(name: "WORK_STRUCT_STATIC", value: 0)
!151 = !DIEnumerator(name: "WORK_NR_COLORS", value: 15)
!152 = !DIEnumerator(name: "WORK_NO_COLOR", value: 15)
!153 = !DIEnumerator(name: "WORK_CPU_UNBOUND", value: 1)
!154 = !DIEnumerator(name: "WORK_STRUCT_FLAG_BITS", value: 8)
!155 = !DIEnumerator(name: "WORK_OFFQ_FLAG_BASE", value: 4)
!156 = !DIEnumerator(name: "__WORK_OFFQ_CANCELING", value: 4)
!157 = !DIEnumerator(name: "WORK_OFFQ_CANCELING", value: 16)
!158 = !DIEnumerator(name: "WORK_OFFQ_FLAG_BITS", value: 1)
!159 = !DIEnumerator(name: "WORK_OFFQ_POOL_SHIFT", value: 5)
!160 = !DIEnumerator(name: "WORK_OFFQ_LEFT", value: 59)
!161 = !DIEnumerator(name: "WORK_OFFQ_POOL_BITS", value: 31)
!162 = !DIEnumerator(name: "WORK_OFFQ_POOL_NONE", value: 2147483647)
!163 = !DIEnumerator(name: "WORK_STRUCT_FLAG_MASK", value: 255)
!164 = !DIEnumerator(name: "WORK_STRUCT_WQ_DATA_MASK", value: -256)
!165 = !DIEnumerator(name: "WORK_STRUCT_NO_POOL", value: 68719476704)
!166 = !DIEnumerator(name: "WORK_BUSY_PENDING", value: 1)
!167 = !DIEnumerator(name: "WORK_BUSY_RUNNING", value: 2)
!168 = !DIEnumerator(name: "WORKER_DESC_LEN", value: 24)
!169 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "acpi_reconfig_event", file: !170, line: 674, baseType: !7, size: 32, elements: !171)
!170 = !DIFile(filename: "./include/linux/acpi.h", directory: "/home/lizy2001/genbc/linux")
!171 = !{!172, !173}
!172 = !DIEnumerator(name: "ACPI_RECONFIG_DEVICE_ADD", value: 0, isUnsigned: true)
!173 = !DIEnumerator(name: "ACPI_RECONFIG_DEVICE_REMOVE", value: 1, isUnsigned: true)
!174 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "acpi_bus_device_type", file: !175, line: 89, baseType: !7, size: 32, elements: !176)
!175 = !DIFile(filename: "./include/acpi/acpi_bus.h", directory: "/home/lizy2001/genbc/linux")
!176 = !{!177, !178, !179, !180, !181, !182, !183, !184}
!177 = !DIEnumerator(name: "ACPI_BUS_TYPE_DEVICE", value: 0, isUnsigned: true)
!178 = !DIEnumerator(name: "ACPI_BUS_TYPE_POWER", value: 1, isUnsigned: true)
!179 = !DIEnumerator(name: "ACPI_BUS_TYPE_PROCESSOR", value: 2, isUnsigned: true)
!180 = !DIEnumerator(name: "ACPI_BUS_TYPE_THERMAL", value: 3, isUnsigned: true)
!181 = !DIEnumerator(name: "ACPI_BUS_TYPE_POWER_BUTTON", value: 4, isUnsigned: true)
!182 = !DIEnumerator(name: "ACPI_BUS_TYPE_SLEEP_BUTTON", value: 5, isUnsigned: true)
!183 = !DIEnumerator(name: "ACPI_BUS_TYPE_ECDT_EC", value: 6, isUnsigned: true)
!184 = !DIEnumerator(name: "ACPI_BUS_DEVICE_TYPE_COUNT", value: 7, isUnsigned: true)
!185 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "kmalloc_cache_type", file: !186, line: 305, baseType: !7, size: 32, elements: !187)
!186 = !DIFile(filename: "./include/linux/slab.h", directory: "/home/lizy2001/genbc/linux")
!187 = !{!188, !189, !190, !191}
!188 = !DIEnumerator(name: "KMALLOC_NORMAL", value: 0, isUnsigned: true)
!189 = !DIEnumerator(name: "KMALLOC_RECLAIM", value: 1, isUnsigned: true)
!190 = !DIEnumerator(name: "KMALLOC_DMA", value: 2, isUnsigned: true)
!191 = !DIEnumerator(name: "NR_KMALLOC_TYPES", value: 3, isUnsigned: true)
!192 = !{!193, !194, !4017, !739, !4019, !4029, !413, !4030, !407, !4035, !4314, !4335, !1348, !4341, !4342, !1411, !316, !4356, !4358, !817, !482, !4359, !138, !4236, !267, !4097, !251, !4361}
!193 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 64)
!194 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !195, size: 64)
!195 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "acpi_device_physical_node", file: !175, line: 327, size: 320, elements: !196)
!196 = !{!197, !198, !205, !4016}
!197 = !DIDerivedType(tag: DW_TAG_member, name: "node_id", scope: !195, file: !175, line: 328, baseType: !7, size: 32)
!198 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !195, file: !175, line: 329, baseType: !199, size: 128, offset: 64)
!199 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "list_head", file: !200, line: 178, size: 128, elements: !201)
!200 = !DIFile(filename: "./include/linux/types.h", directory: "/home/lizy2001/genbc/linux")
!201 = !{!202, !204}
!202 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !199, file: !200, line: 179, baseType: !203, size: 64)
!203 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !199, size: 64)
!204 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !199, file: !200, line: 179, baseType: !203, size: 64, offset: 64)
!205 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !195, file: !175, line: 330, baseType: !206, size: 64, offset: 192)
!206 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !207, size: 64)
!207 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !73, line: 461, size: 5568, elements: !208)
!208 = !{!209, !3369, !3370, !3373, !3374, !3425, !3516, !3517, !3518, !3519, !3520, !3529, !3634, !3647, !3842, !3843, !3948, !3950, !3951, !3952, !3956, !3962, !3963, !3966, !3967, !3968, !3969, !3970, !3971, !3972, !4004, !4005, !4006, !4009, !4012, !4013, !4014, !4015}
!209 = !DIDerivedType(tag: DW_TAG_member, name: "kobj", scope: !207, file: !73, line: 462, baseType: !210, size: 512)
!210 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kobject", file: !120, line: 64, size: 512, elements: !211)
!211 = !{!212, !216, !217, !219, !280, !3220, !3359, !3364, !3365, !3366, !3367, !3368}
!212 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !210, file: !120, line: 65, baseType: !213, size: 64)
!213 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !214, size: 64)
!214 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !215)
!215 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_signed_char)
!216 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !210, file: !120, line: 66, baseType: !199, size: 128, offset: 64)
!217 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !210, file: !120, line: 67, baseType: !218, size: 64, offset: 192)
!218 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !210, size: 64)
!219 = !DIDerivedType(tag: DW_TAG_member, name: "kset", scope: !210, file: !120, line: 68, baseType: !220, size: 64, offset: 256)
!220 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !221, size: 64)
!221 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kset", file: !120, line: 192, size: 704, elements: !222)
!222 = !{!223, !224, !240, !241}
!223 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !221, file: !120, line: 193, baseType: !199, size: 128)
!224 = !DIDerivedType(tag: DW_TAG_member, name: "list_lock", scope: !221, file: !120, line: 194, baseType: !225, offset: 128)
!225 = !DIDerivedType(tag: DW_TAG_typedef, name: "spinlock_t", file: !226, line: 83, baseType: !227)
!226 = !DIFile(filename: "./include/linux/spinlock_types.h", directory: "/home/lizy2001/genbc/linux")
!227 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "spinlock", file: !226, line: 71, elements: !228)
!228 = !{!229}
!229 = !DIDerivedType(tag: DW_TAG_member, scope: !227, file: !226, line: 72, baseType: !230)
!230 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !227, file: !226, line: 72, elements: !231)
!231 = !{!232}
!232 = !DIDerivedType(tag: DW_TAG_member, name: "rlock", scope: !230, file: !226, line: 73, baseType: !233)
!233 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "raw_spinlock", file: !226, line: 20, elements: !234)
!234 = !{!235}
!235 = !DIDerivedType(tag: DW_TAG_member, name: "raw_lock", scope: !233, file: !226, line: 21, baseType: !236)
!236 = !DIDerivedType(tag: DW_TAG_typedef, name: "arch_spinlock_t", file: !237, line: 25, baseType: !238)
!237 = !DIFile(filename: "./include/linux/spinlock_types_up.h", directory: "/home/lizy2001/genbc/linux")
!238 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !237, line: 25, elements: !239)
!239 = !{}
!240 = !DIDerivedType(tag: DW_TAG_member, name: "kobj", scope: !221, file: !120, line: 195, baseType: !210, size: 512, offset: 128)
!241 = !DIDerivedType(tag: DW_TAG_member, name: "uevent_ops", scope: !221, file: !120, line: 196, baseType: !242, size: 64, offset: 640)
!242 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !243, size: 64)
!243 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !244)
!244 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kset_uevent_ops", file: !120, line: 156, size: 192, elements: !245)
!245 = !{!246, !252, !257}
!246 = !DIDerivedType(tag: DW_TAG_member, name: "filter", scope: !244, file: !120, line: 157, baseType: !247, size: 64)
!247 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !248)
!248 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !249, size: 64)
!249 = !DISubroutineType(types: !250)
!250 = !{!251, !220, !218}
!251 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!252 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !244, file: !120, line: 158, baseType: !253, size: 64, offset: 64)
!253 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !254)
!254 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !255, size: 64)
!255 = !DISubroutineType(types: !256)
!256 = !{!213, !220, !218}
!257 = !DIDerivedType(tag: DW_TAG_member, name: "uevent", scope: !244, file: !120, line: 159, baseType: !258, size: 64, offset: 128)
!258 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !259)
!259 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !260, size: 64)
!260 = !DISubroutineType(types: !261)
!261 = !{!251, !220, !218, !262}
!262 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !263, size: 64)
!263 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kobj_uevent_env", file: !120, line: 148, size: 20736, elements: !264)
!264 = !{!265, !270, !274, !275, !279}
!265 = !DIDerivedType(tag: DW_TAG_member, name: "argv", scope: !263, file: !120, line: 149, baseType: !266, size: 192)
!266 = !DICompositeType(tag: DW_TAG_array_type, baseType: !267, size: 192, elements: !268)
!267 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !215, size: 64)
!268 = !{!269}
!269 = !DISubrange(count: 3)
!270 = !DIDerivedType(tag: DW_TAG_member, name: "envp", scope: !263, file: !120, line: 150, baseType: !271, size: 4096, offset: 192)
!271 = !DICompositeType(tag: DW_TAG_array_type, baseType: !267, size: 4096, elements: !272)
!272 = !{!273}
!273 = !DISubrange(count: 64)
!274 = !DIDerivedType(tag: DW_TAG_member, name: "envp_idx", scope: !263, file: !120, line: 151, baseType: !251, size: 32, offset: 4288)
!275 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !263, file: !120, line: 152, baseType: !276, size: 16384, offset: 4320)
!276 = !DICompositeType(tag: DW_TAG_array_type, baseType: !215, size: 16384, elements: !277)
!277 = !{!278}
!278 = !DISubrange(count: 2048)
!279 = !DIDerivedType(tag: DW_TAG_member, name: "buflen", scope: !263, file: !120, line: 153, baseType: !251, size: 32, offset: 20704)
!280 = !DIDerivedType(tag: DW_TAG_member, name: "ktype", scope: !210, file: !120, line: 69, baseType: !281, size: 64, offset: 320)
!281 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !282, size: 64)
!282 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kobj_type", file: !120, line: 138, size: 448, elements: !283)
!283 = !{!284, !288, !317, !319, !3182, !3210, !3214}
!284 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !282, file: !120, line: 139, baseType: !285, size: 64)
!285 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !286, size: 64)
!286 = !DISubroutineType(types: !287)
!287 = !{null, !218}
!288 = !DIDerivedType(tag: DW_TAG_member, name: "sysfs_ops", scope: !282, file: !120, line: 140, baseType: !289, size: 64, offset: 64)
!289 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !290, size: 64)
!290 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !291)
!291 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sysfs_ops", file: !292, line: 230, size: 128, elements: !293)
!292 = !DIFile(filename: "./include/linux/sysfs.h", directory: "/home/lizy2001/genbc/linux")
!293 = !{!294, !309}
!294 = !DIDerivedType(tag: DW_TAG_member, name: "show", scope: !291, file: !292, line: 231, baseType: !295, size: 64)
!295 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !296, size: 64)
!296 = !DISubroutineType(types: !297)
!297 = !{!298, !218, !302, !267}
!298 = !DIDerivedType(tag: DW_TAG_typedef, name: "ssize_t", file: !200, line: 60, baseType: !299)
!299 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_ssize_t", file: !300, line: 73, baseType: !301)
!300 = !DIFile(filename: "./include/uapi/asm-generic/posix_types.h", directory: "/home/lizy2001/genbc/linux")
!301 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_long_t", file: !300, line: 15, baseType: !138)
!302 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !303, size: 64)
!303 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "attribute", file: !292, line: 30, size: 128, elements: !304)
!304 = !{!305, !306}
!305 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !303, file: !292, line: 31, baseType: !213, size: 64)
!306 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !303, file: !292, line: 32, baseType: !307, size: 16, offset: 64)
!307 = !DIDerivedType(tag: DW_TAG_typedef, name: "umode_t", file: !200, line: 19, baseType: !308)
!308 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!309 = !DIDerivedType(tag: DW_TAG_member, name: "store", scope: !291, file: !292, line: 232, baseType: !310, size: 64, offset: 64)
!310 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !311, size: 64)
!311 = !DISubroutineType(types: !312)
!312 = !{!298, !218, !302, !213, !313}
!313 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !200, line: 55, baseType: !314)
!314 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_size_t", file: !300, line: 72, baseType: !315)
!315 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_ulong_t", file: !300, line: 16, baseType: !316)
!316 = !DIBasicType(name: "long unsigned int", size: 64, encoding: DW_ATE_unsigned)
!317 = !DIDerivedType(tag: DW_TAG_member, name: "default_attrs", scope: !282, file: !120, line: 141, baseType: !318, size: 64, offset: 128)
!318 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !302, size: 64)
!319 = !DIDerivedType(tag: DW_TAG_member, name: "default_groups", scope: !282, file: !120, line: 142, baseType: !320, size: 64, offset: 192)
!320 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !321, size: 64)
!321 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !322, size: 64)
!322 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !323)
!323 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "attribute_group", file: !292, line: 84, size: 320, elements: !324)
!324 = !{!325, !326, !330, !3179, !3180}
!325 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !323, file: !292, line: 85, baseType: !213, size: 64)
!326 = !DIDerivedType(tag: DW_TAG_member, name: "is_visible", scope: !323, file: !292, line: 86, baseType: !327, size: 64, offset: 64)
!327 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !328, size: 64)
!328 = !DISubroutineType(types: !329)
!329 = !{!307, !218, !302, !251}
!330 = !DIDerivedType(tag: DW_TAG_member, name: "is_bin_visible", scope: !323, file: !292, line: 88, baseType: !331, size: 64, offset: 128)
!331 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !332, size: 64)
!332 = !DISubroutineType(types: !333)
!333 = !{!307, !218, !334, !251}
!334 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !335, size: 64)
!335 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bin_attribute", file: !292, line: 168, size: 448, elements: !336)
!336 = !{!337, !338, !339, !340, !3174, !3175}
!337 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !335, file: !292, line: 169, baseType: !303, size: 128)
!338 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !335, file: !292, line: 170, baseType: !313, size: 64, offset: 128)
!339 = !DIDerivedType(tag: DW_TAG_member, name: "private", scope: !335, file: !292, line: 171, baseType: !193, size: 64, offset: 192)
!340 = !DIDerivedType(tag: DW_TAG_member, name: "read", scope: !335, file: !292, line: 172, baseType: !341, size: 64, offset: 256)
!341 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !342, size: 64)
!342 = !DISubroutineType(types: !343)
!343 = !{!298, !344, !218, !334, !267, !523, !313}
!344 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !345, size: 64)
!345 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file", file: !44, line: 916, size: 1856, align: 32, elements: !346)
!346 = !{!347, !365, !3139, !3140, !3141, !3142, !3143, !3144, !3145, !3146, !3147, !3148, !3157, !3158, !3167, !3168, !3169, !3170, !3171, !3172, !3173}
!347 = !DIDerivedType(tag: DW_TAG_member, name: "f_u", scope: !345, file: !44, line: 920, baseType: !348, size: 128)
!348 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !345, file: !44, line: 917, size: 128, elements: !349)
!349 = !{!350, !356}
!350 = !DIDerivedType(tag: DW_TAG_member, name: "fu_llist", scope: !348, file: !44, line: 918, baseType: !351, size: 64)
!351 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "llist_node", file: !352, line: 58, size: 64, elements: !353)
!352 = !DIFile(filename: "./include/linux/llist.h", directory: "/home/lizy2001/genbc/linux")
!353 = !{!354}
!354 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !351, file: !352, line: 59, baseType: !355, size: 64)
!355 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !351, size: 64)
!356 = !DIDerivedType(tag: DW_TAG_member, name: "fu_rcuhead", scope: !348, file: !44, line: 919, baseType: !357, size: 128, align: 64)
!357 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "callback_head", file: !200, line: 216, size: 128, align: 64, elements: !358)
!358 = !{!359, !361}
!359 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !357, file: !200, line: 217, baseType: !360, size: 64)
!360 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !357, size: 64)
!361 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !357, file: !200, line: 218, baseType: !362, size: 64, offset: 64)
!362 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !363, size: 64)
!363 = !DISubroutineType(types: !364)
!364 = !{null, !360}
!365 = !DIDerivedType(tag: DW_TAG_member, name: "f_path", scope: !345, file: !44, line: 921, baseType: !366, size: 128, offset: 128)
!366 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "path", file: !367, line: 8, size: 128, elements: !368)
!367 = !DIFile(filename: "./include/linux/path.h", directory: "/home/lizy2001/genbc/linux")
!368 = !{!369, !373}
!369 = !DIDerivedType(tag: DW_TAG_member, name: "mnt", scope: !366, file: !367, line: 9, baseType: !370, size: 64)
!370 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !371, size: 64)
!371 = !DICompositeType(tag: DW_TAG_structure_type, name: "vfsmount", file: !372, line: 18, flags: DIFlagFwdDecl)
!372 = !DIFile(filename: "./include/linux/dcache.h", directory: "/home/lizy2001/genbc/linux")
!373 = !DIDerivedType(tag: DW_TAG_member, name: "dentry", scope: !366, file: !367, line: 10, baseType: !374, size: 64, offset: 64)
!374 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !375, size: 64)
!375 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dentry", file: !372, line: 89, size: 1536, elements: !376)
!376 = !{!377, !378, !388, !396, !397, !420, !3107, !3109, !3121, !3122, !3123, !3124, !3125, !3131, !3132, !3133}
!377 = !DIDerivedType(tag: DW_TAG_member, name: "d_flags", scope: !375, file: !372, line: 91, baseType: !7, size: 32)
!378 = !DIDerivedType(tag: DW_TAG_member, name: "d_seq", scope: !375, file: !372, line: 92, baseType: !379, size: 32, offset: 32)
!379 = !DIDerivedType(tag: DW_TAG_typedef, name: "seqcount_spinlock_t", file: !380, line: 277, baseType: !381)
!380 = !DIFile(filename: "./include/linux/seqlock.h", directory: "/home/lizy2001/genbc/linux")
!381 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seqcount_spinlock", file: !380, line: 277, size: 32, elements: !382)
!382 = !{!383}
!383 = !DIDerivedType(tag: DW_TAG_member, name: "seqcount", scope: !381, file: !380, line: 277, baseType: !384, size: 32)
!384 = !DIDerivedType(tag: DW_TAG_typedef, name: "seqcount_t", file: !380, line: 70, baseType: !385)
!385 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seqcount", file: !380, line: 65, size: 32, elements: !386)
!386 = !{!387}
!387 = !DIDerivedType(tag: DW_TAG_member, name: "sequence", scope: !385, file: !380, line: 66, baseType: !7, size: 32)
!388 = !DIDerivedType(tag: DW_TAG_member, name: "d_hash", scope: !375, file: !372, line: 93, baseType: !389, size: 128, offset: 64)
!389 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hlist_bl_node", file: !390, line: 38, size: 128, elements: !391)
!390 = !DIFile(filename: "./include/linux/list_bl.h", directory: "/home/lizy2001/genbc/linux")
!391 = !{!392, !394}
!392 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !389, file: !390, line: 39, baseType: !393, size: 64)
!393 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !389, size: 64)
!394 = !DIDerivedType(tag: DW_TAG_member, name: "pprev", scope: !389, file: !390, line: 39, baseType: !395, size: 64, offset: 64)
!395 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !393, size: 64)
!396 = !DIDerivedType(tag: DW_TAG_member, name: "d_parent", scope: !375, file: !372, line: 94, baseType: !374, size: 64, offset: 192)
!397 = !DIDerivedType(tag: DW_TAG_member, name: "d_name", scope: !375, file: !372, line: 95, baseType: !398, size: 128, offset: 256)
!398 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "qstr", file: !372, line: 47, size: 128, elements: !399)
!399 = !{!400, !416}
!400 = !DIDerivedType(tag: DW_TAG_member, scope: !398, file: !372, line: 48, baseType: !401, size: 64)
!401 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !398, file: !372, line: 48, size: 64, elements: !402)
!402 = !{!403, !412}
!403 = !DIDerivedType(tag: DW_TAG_member, scope: !401, file: !372, line: 49, baseType: !404, size: 64)
!404 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !401, file: !372, line: 49, size: 64, elements: !405)
!405 = !{!406, !411}
!406 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !404, file: !372, line: 50, baseType: !407, size: 32)
!407 = !DIDerivedType(tag: DW_TAG_typedef, name: "u32", file: !408, line: 21, baseType: !409)
!408 = !DIFile(filename: "./include/asm-generic/int-ll64.h", directory: "/home/lizy2001/genbc/linux")
!409 = !DIDerivedType(tag: DW_TAG_typedef, name: "__u32", file: !410, line: 27, baseType: !7)
!410 = !DIFile(filename: "./include/uapi/asm-generic/int-ll64.h", directory: "/home/lizy2001/genbc/linux")
!411 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !404, file: !372, line: 50, baseType: !407, size: 32, offset: 32)
!412 = !DIDerivedType(tag: DW_TAG_member, name: "hash_len", scope: !401, file: !372, line: 52, baseType: !413, size: 64)
!413 = !DIDerivedType(tag: DW_TAG_typedef, name: "u64", file: !408, line: 23, baseType: !414)
!414 = !DIDerivedType(tag: DW_TAG_typedef, name: "__u64", file: !410, line: 31, baseType: !415)
!415 = !DIBasicType(name: "long long unsigned int", size: 64, encoding: DW_ATE_unsigned)
!416 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !398, file: !372, line: 54, baseType: !417, size: 64, offset: 64)
!417 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !418, size: 64)
!418 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !419)
!419 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!420 = !DIDerivedType(tag: DW_TAG_member, name: "d_inode", scope: !375, file: !372, line: 96, baseType: !421, size: 64, offset: 384)
!421 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !422, size: 64)
!422 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "inode", file: !44, line: 610, size: 4224, elements: !423)
!423 = !{!424, !425, !426, !434, !441, !442, !590, !2818, !2819, !2820, !2826, !2827, !2828, !2829, !2830, !2831, !2832, !2833, !2834, !2835, !2836, !2837, !2838, !2839, !2840, !2841, !2842, !2843, !2844, !2845, !2850, !2851, !2852, !2853, !2854, !2855, !2856, !3083, !3091, !3092, !3093, !3103, !3104, !3105, !3106}
!424 = !DIDerivedType(tag: DW_TAG_member, name: "i_mode", scope: !422, file: !44, line: 611, baseType: !307, size: 16)
!425 = !DIDerivedType(tag: DW_TAG_member, name: "i_opflags", scope: !422, file: !44, line: 612, baseType: !308, size: 16, offset: 16)
!426 = !DIDerivedType(tag: DW_TAG_member, name: "i_uid", scope: !422, file: !44, line: 613, baseType: !427, size: 32, offset: 32)
!427 = !DIDerivedType(tag: DW_TAG_typedef, name: "kuid_t", file: !428, line: 23, baseType: !429)
!428 = !DIFile(filename: "./include/linux/uidgid.h", directory: "/home/lizy2001/genbc/linux")
!429 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !428, line: 21, size: 32, elements: !430)
!430 = !{!431}
!431 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !429, file: !428, line: 22, baseType: !432, size: 32)
!432 = !DIDerivedType(tag: DW_TAG_typedef, name: "uid_t", file: !200, line: 32, baseType: !433)
!433 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_uid32_t", file: !300, line: 49, baseType: !7)
!434 = !DIDerivedType(tag: DW_TAG_member, name: "i_gid", scope: !422, file: !44, line: 614, baseType: !435, size: 32, offset: 64)
!435 = !DIDerivedType(tag: DW_TAG_typedef, name: "kgid_t", file: !428, line: 28, baseType: !436)
!436 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !428, line: 26, size: 32, elements: !437)
!437 = !{!438}
!438 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !436, file: !428, line: 27, baseType: !439, size: 32)
!439 = !DIDerivedType(tag: DW_TAG_typedef, name: "gid_t", file: !200, line: 33, baseType: !440)
!440 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_gid32_t", file: !300, line: 50, baseType: !7)
!441 = !DIDerivedType(tag: DW_TAG_member, name: "i_flags", scope: !422, file: !44, line: 615, baseType: !7, size: 32, offset: 96)
!442 = !DIDerivedType(tag: DW_TAG_member, name: "i_op", scope: !422, file: !44, line: 622, baseType: !443, size: 64, offset: 128)
!443 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !444, size: 64)
!444 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !445)
!445 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "inode_operations", file: !44, line: 1864, size: 1536, align: 512, elements: !446)
!446 = !{!447, !451, !464, !468, !474, !478, !484, !488, !492, !496, !500, !501, !507, !511, !537, !566, !570, !576, !581, !585, !586}
!447 = !DIDerivedType(tag: DW_TAG_member, name: "lookup", scope: !445, file: !44, line: 1865, baseType: !448, size: 64)
!448 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !449, size: 64)
!449 = !DISubroutineType(types: !450)
!450 = !{!374, !421, !374, !7}
!451 = !DIDerivedType(tag: DW_TAG_member, name: "get_link", scope: !445, file: !44, line: 1866, baseType: !452, size: 64, offset: 64)
!452 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !453, size: 64)
!453 = !DISubroutineType(types: !454)
!454 = !{!213, !374, !421, !455}
!455 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !456, size: 64)
!456 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "delayed_call", file: !457, line: 10, size: 128, elements: !458)
!457 = !DIFile(filename: "./include/linux/delayed_call.h", directory: "/home/lizy2001/genbc/linux")
!458 = !{!459, !463}
!459 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !456, file: !457, line: 11, baseType: !460, size: 64)
!460 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !461, size: 64)
!461 = !DISubroutineType(types: !462)
!462 = !{null, !193}
!463 = !DIDerivedType(tag: DW_TAG_member, name: "arg", scope: !456, file: !457, line: 12, baseType: !193, size: 64, offset: 64)
!464 = !DIDerivedType(tag: DW_TAG_member, name: "permission", scope: !445, file: !44, line: 1867, baseType: !465, size: 64, offset: 128)
!465 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !466, size: 64)
!466 = !DISubroutineType(types: !467)
!467 = !{!251, !421, !251}
!468 = !DIDerivedType(tag: DW_TAG_member, name: "get_acl", scope: !445, file: !44, line: 1868, baseType: !469, size: 64, offset: 192)
!469 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !470, size: 64)
!470 = !DISubroutineType(types: !471)
!471 = !{!472, !421, !251}
!472 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !473, size: 64)
!473 = !DICompositeType(tag: DW_TAG_structure_type, name: "posix_acl", file: !44, line: 581, flags: DIFlagFwdDecl)
!474 = !DIDerivedType(tag: DW_TAG_member, name: "readlink", scope: !445, file: !44, line: 1870, baseType: !475, size: 64, offset: 256)
!475 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !476, size: 64)
!476 = !DISubroutineType(types: !477)
!477 = !{!251, !374, !267, !251}
!478 = !DIDerivedType(tag: DW_TAG_member, name: "create", scope: !445, file: !44, line: 1872, baseType: !479, size: 64, offset: 320)
!479 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !480, size: 64)
!480 = !DISubroutineType(types: !481)
!481 = !{!251, !421, !374, !307, !482}
!482 = !DIDerivedType(tag: DW_TAG_typedef, name: "bool", file: !200, line: 30, baseType: !483)
!483 = !DIBasicType(name: "_Bool", size: 8, encoding: DW_ATE_boolean)
!484 = !DIDerivedType(tag: DW_TAG_member, name: "link", scope: !445, file: !44, line: 1873, baseType: !485, size: 64, offset: 384)
!485 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !486, size: 64)
!486 = !DISubroutineType(types: !487)
!487 = !{!251, !374, !421, !374}
!488 = !DIDerivedType(tag: DW_TAG_member, name: "unlink", scope: !445, file: !44, line: 1874, baseType: !489, size: 64, offset: 448)
!489 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !490, size: 64)
!490 = !DISubroutineType(types: !491)
!491 = !{!251, !421, !374}
!492 = !DIDerivedType(tag: DW_TAG_member, name: "symlink", scope: !445, file: !44, line: 1875, baseType: !493, size: 64, offset: 512)
!493 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !494, size: 64)
!494 = !DISubroutineType(types: !495)
!495 = !{!251, !421, !374, !213}
!496 = !DIDerivedType(tag: DW_TAG_member, name: "mkdir", scope: !445, file: !44, line: 1876, baseType: !497, size: 64, offset: 576)
!497 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !498, size: 64)
!498 = !DISubroutineType(types: !499)
!499 = !{!251, !421, !374, !307}
!500 = !DIDerivedType(tag: DW_TAG_member, name: "rmdir", scope: !445, file: !44, line: 1877, baseType: !489, size: 64, offset: 640)
!501 = !DIDerivedType(tag: DW_TAG_member, name: "mknod", scope: !445, file: !44, line: 1878, baseType: !502, size: 64, offset: 704)
!502 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !503, size: 64)
!503 = !DISubroutineType(types: !504)
!504 = !{!251, !421, !374, !307, !505}
!505 = !DIDerivedType(tag: DW_TAG_typedef, name: "dev_t", file: !200, line: 16, baseType: !506)
!506 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_dev_t", file: !200, line: 13, baseType: !407)
!507 = !DIDerivedType(tag: DW_TAG_member, name: "rename", scope: !445, file: !44, line: 1879, baseType: !508, size: 64, offset: 768)
!508 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !509, size: 64)
!509 = !DISubroutineType(types: !510)
!510 = !{!251, !421, !374, !421, !374, !7}
!511 = !DIDerivedType(tag: DW_TAG_member, name: "setattr", scope: !445, file: !44, line: 1881, baseType: !512, size: 64, offset: 832)
!512 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !513, size: 64)
!513 = !DISubroutineType(types: !514)
!514 = !{!251, !374, !515}
!515 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !516, size: 64)
!516 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "iattr", file: !44, line: 219, size: 640, elements: !517)
!517 = !{!518, !519, !520, !521, !522, !526, !534, !535, !536}
!518 = !DIDerivedType(tag: DW_TAG_member, name: "ia_valid", scope: !516, file: !44, line: 220, baseType: !7, size: 32)
!519 = !DIDerivedType(tag: DW_TAG_member, name: "ia_mode", scope: !516, file: !44, line: 221, baseType: !307, size: 16, offset: 32)
!520 = !DIDerivedType(tag: DW_TAG_member, name: "ia_uid", scope: !516, file: !44, line: 222, baseType: !427, size: 32, offset: 64)
!521 = !DIDerivedType(tag: DW_TAG_member, name: "ia_gid", scope: !516, file: !44, line: 223, baseType: !435, size: 32, offset: 96)
!522 = !DIDerivedType(tag: DW_TAG_member, name: "ia_size", scope: !516, file: !44, line: 224, baseType: !523, size: 64, offset: 128)
!523 = !DIDerivedType(tag: DW_TAG_typedef, name: "loff_t", file: !200, line: 46, baseType: !524)
!524 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_loff_t", file: !300, line: 88, baseType: !525)
!525 = !DIBasicType(name: "long long int", size: 64, encoding: DW_ATE_signed)
!526 = !DIDerivedType(tag: DW_TAG_member, name: "ia_atime", scope: !516, file: !44, line: 225, baseType: !527, size: 128, offset: 192)
!527 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timespec64", file: !528, line: 13, size: 128, elements: !529)
!528 = !DIFile(filename: "./include/linux/time64.h", directory: "/home/lizy2001/genbc/linux")
!529 = !{!530, !533}
!530 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !527, file: !528, line: 14, baseType: !531, size: 64)
!531 = !DIDerivedType(tag: DW_TAG_typedef, name: "time64_t", file: !528, line: 8, baseType: !532)
!532 = !DIDerivedType(tag: DW_TAG_typedef, name: "__s64", file: !410, line: 30, baseType: !525)
!533 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !527, file: !528, line: 15, baseType: !138, size: 64, offset: 64)
!534 = !DIDerivedType(tag: DW_TAG_member, name: "ia_mtime", scope: !516, file: !44, line: 226, baseType: !527, size: 128, offset: 320)
!535 = !DIDerivedType(tag: DW_TAG_member, name: "ia_ctime", scope: !516, file: !44, line: 227, baseType: !527, size: 128, offset: 448)
!536 = !DIDerivedType(tag: DW_TAG_member, name: "ia_file", scope: !516, file: !44, line: 234, baseType: !344, size: 64, offset: 576)
!537 = !DIDerivedType(tag: DW_TAG_member, name: "getattr", scope: !445, file: !44, line: 1882, baseType: !538, size: 64, offset: 896)
!538 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !539, size: 64)
!539 = !DISubroutineType(types: !540)
!540 = !{!251, !541, !543, !407, !7}
!541 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !542, size: 64)
!542 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !366)
!543 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !544, size: 64)
!544 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kstat", file: !545, line: 22, size: 1152, elements: !546)
!545 = !DIFile(filename: "./include/linux/stat.h", directory: "/home/lizy2001/genbc/linux")
!546 = !{!547, !548, !549, !550, !552, !553, !554, !555, !556, !557, !558, !559, !560, !561, !562, !563, !564, !565}
!547 = !DIDerivedType(tag: DW_TAG_member, name: "result_mask", scope: !544, file: !545, line: 23, baseType: !407, size: 32)
!548 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !544, file: !545, line: 24, baseType: !307, size: 16, offset: 32)
!549 = !DIDerivedType(tag: DW_TAG_member, name: "nlink", scope: !544, file: !545, line: 25, baseType: !7, size: 32, offset: 64)
!550 = !DIDerivedType(tag: DW_TAG_member, name: "blksize", scope: !544, file: !545, line: 26, baseType: !551, size: 32, offset: 96)
!551 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint32_t", file: !200, line: 104, baseType: !407)
!552 = !DIDerivedType(tag: DW_TAG_member, name: "attributes", scope: !544, file: !545, line: 27, baseType: !413, size: 64, offset: 128)
!553 = !DIDerivedType(tag: DW_TAG_member, name: "attributes_mask", scope: !544, file: !545, line: 28, baseType: !413, size: 64, offset: 192)
!554 = !DIDerivedType(tag: DW_TAG_member, name: "ino", scope: !544, file: !545, line: 37, baseType: !413, size: 64, offset: 256)
!555 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !544, file: !545, line: 38, baseType: !505, size: 32, offset: 320)
!556 = !DIDerivedType(tag: DW_TAG_member, name: "rdev", scope: !544, file: !545, line: 39, baseType: !505, size: 32, offset: 352)
!557 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !544, file: !545, line: 40, baseType: !427, size: 32, offset: 384)
!558 = !DIDerivedType(tag: DW_TAG_member, name: "gid", scope: !544, file: !545, line: 41, baseType: !435, size: 32, offset: 416)
!559 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !544, file: !545, line: 42, baseType: !523, size: 64, offset: 448)
!560 = !DIDerivedType(tag: DW_TAG_member, name: "atime", scope: !544, file: !545, line: 43, baseType: !527, size: 128, offset: 512)
!561 = !DIDerivedType(tag: DW_TAG_member, name: "mtime", scope: !544, file: !545, line: 44, baseType: !527, size: 128, offset: 640)
!562 = !DIDerivedType(tag: DW_TAG_member, name: "ctime", scope: !544, file: !545, line: 45, baseType: !527, size: 128, offset: 768)
!563 = !DIDerivedType(tag: DW_TAG_member, name: "btime", scope: !544, file: !545, line: 46, baseType: !527, size: 128, offset: 896)
!564 = !DIDerivedType(tag: DW_TAG_member, name: "blocks", scope: !544, file: !545, line: 47, baseType: !413, size: 64, offset: 1024)
!565 = !DIDerivedType(tag: DW_TAG_member, name: "mnt_id", scope: !544, file: !545, line: 48, baseType: !413, size: 64, offset: 1088)
!566 = !DIDerivedType(tag: DW_TAG_member, name: "listxattr", scope: !445, file: !44, line: 1883, baseType: !567, size: 64, offset: 960)
!567 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !568, size: 64)
!568 = !DISubroutineType(types: !569)
!569 = !{!298, !374, !267, !313}
!570 = !DIDerivedType(tag: DW_TAG_member, name: "fiemap", scope: !445, file: !44, line: 1884, baseType: !571, size: 64, offset: 1024)
!571 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !572, size: 64)
!572 = !DISubroutineType(types: !573)
!573 = !{!251, !421, !574, !413, !413}
!574 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !575, size: 64)
!575 = !DICompositeType(tag: DW_TAG_structure_type, name: "fiemap_extent_info", file: !44, line: 50, flags: DIFlagFwdDecl)
!576 = !DIDerivedType(tag: DW_TAG_member, name: "update_time", scope: !445, file: !44, line: 1886, baseType: !577, size: 64, offset: 1088)
!577 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !578, size: 64)
!578 = !DISubroutineType(types: !579)
!579 = !{!251, !421, !580, !251}
!580 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !527, size: 64)
!581 = !DIDerivedType(tag: DW_TAG_member, name: "atomic_open", scope: !445, file: !44, line: 1887, baseType: !582, size: 64, offset: 1152)
!582 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !583, size: 64)
!583 = !DISubroutineType(types: !584)
!584 = !{!251, !421, !374, !344, !7, !307}
!585 = !DIDerivedType(tag: DW_TAG_member, name: "tmpfile", scope: !445, file: !44, line: 1890, baseType: !497, size: 64, offset: 1216)
!586 = !DIDerivedType(tag: DW_TAG_member, name: "set_acl", scope: !445, file: !44, line: 1891, baseType: !587, size: 64, offset: 1280)
!587 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !588, size: 64)
!588 = !DISubroutineType(types: !589)
!589 = !{!251, !421, !472, !251}
!590 = !DIDerivedType(tag: DW_TAG_member, name: "i_sb", scope: !422, file: !44, line: 623, baseType: !591, size: 64, offset: 192)
!591 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !592, size: 64)
!592 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "super_block", file: !44, line: 1416, size: 9472, elements: !593)
!593 = !{!594, !595, !596, !597, !598, !599, !649, !2425, !2507, !2590, !2594, !2595, !2596, !2597, !2598, !2599, !2600, !2601, !2606, !2610, !2611, !2614, !2615, !2618, !2619, !2620, !2661, !2688, !2689, !2690, !2691, !2692, !2693, !2696, !2698, !2705, !2706, !2708, !2709, !2710, !2769, !2770, !2785, !2786, !2787, !2788, !2789, !2792, !2793, !2794, !2809, !2810, !2811, !2812, !2813, !2814, !2815, !2816, !2817}
!594 = !DIDerivedType(tag: DW_TAG_member, name: "s_list", scope: !592, file: !44, line: 1417, baseType: !199, size: 128)
!595 = !DIDerivedType(tag: DW_TAG_member, name: "s_dev", scope: !592, file: !44, line: 1418, baseType: !505, size: 32, offset: 128)
!596 = !DIDerivedType(tag: DW_TAG_member, name: "s_blocksize_bits", scope: !592, file: !44, line: 1419, baseType: !419, size: 8, offset: 160)
!597 = !DIDerivedType(tag: DW_TAG_member, name: "s_blocksize", scope: !592, file: !44, line: 1420, baseType: !316, size: 64, offset: 192)
!598 = !DIDerivedType(tag: DW_TAG_member, name: "s_maxbytes", scope: !592, file: !44, line: 1421, baseType: !523, size: 64, offset: 256)
!599 = !DIDerivedType(tag: DW_TAG_member, name: "s_type", scope: !592, file: !44, line: 1422, baseType: !600, size: 64, offset: 320)
!600 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !601, size: 64)
!601 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_system_type", file: !44, line: 2228, size: 576, elements: !602)
!602 = !{!603, !604, !605, !612, !616, !620, !624, !628, !629, !639, !642, !643, !644, !646, !647, !648}
!603 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !601, file: !44, line: 2229, baseType: !213, size: 64)
!604 = !DIDerivedType(tag: DW_TAG_member, name: "fs_flags", scope: !601, file: !44, line: 2230, baseType: !251, size: 32, offset: 64)
!605 = !DIDerivedType(tag: DW_TAG_member, name: "init_fs_context", scope: !601, file: !44, line: 2238, baseType: !606, size: 64, offset: 128)
!606 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !607, size: 64)
!607 = !DISubroutineType(types: !608)
!608 = !{!251, !609}
!609 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !610, size: 64)
!610 = !DICompositeType(tag: DW_TAG_structure_type, name: "fs_context", file: !611, line: 28, flags: DIFlagFwdDecl)
!611 = !DIFile(filename: "./include/linux/kernfs.h", directory: "/home/lizy2001/genbc/linux")
!612 = !DIDerivedType(tag: DW_TAG_member, name: "parameters", scope: !601, file: !44, line: 2239, baseType: !613, size: 64, offset: 192)
!613 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !614, size: 64)
!614 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !615)
!615 = !DICompositeType(tag: DW_TAG_structure_type, name: "fs_parameter_spec", file: !44, line: 70, flags: DIFlagFwdDecl)
!616 = !DIDerivedType(tag: DW_TAG_member, name: "mount", scope: !601, file: !44, line: 2240, baseType: !617, size: 64, offset: 256)
!617 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !618, size: 64)
!618 = !DISubroutineType(types: !619)
!619 = !{!374, !600, !251, !213, !193}
!620 = !DIDerivedType(tag: DW_TAG_member, name: "kill_sb", scope: !601, file: !44, line: 2242, baseType: !621, size: 64, offset: 320)
!621 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !622, size: 64)
!622 = !DISubroutineType(types: !623)
!623 = !{null, !591}
!624 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !601, file: !44, line: 2243, baseType: !625, size: 64, offset: 384)
!625 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !626, size: 64)
!626 = !DICompositeType(tag: DW_TAG_structure_type, name: "module", file: !627, line: 76, flags: DIFlagFwdDecl)
!627 = !DIFile(filename: "./arch/x86/include/asm/alternative.h", directory: "/home/lizy2001/genbc/linux")
!628 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !601, file: !44, line: 2244, baseType: !600, size: 64, offset: 448)
!629 = !DIDerivedType(tag: DW_TAG_member, name: "fs_supers", scope: !601, file: !44, line: 2245, baseType: !630, size: 64, offset: 512)
!630 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hlist_head", file: !200, line: 182, size: 64, elements: !631)
!631 = !{!632}
!632 = !DIDerivedType(tag: DW_TAG_member, name: "first", scope: !630, file: !200, line: 183, baseType: !633, size: 64)
!633 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !634, size: 64)
!634 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hlist_node", file: !200, line: 186, size: 128, elements: !635)
!635 = !{!636, !637}
!636 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !634, file: !200, line: 187, baseType: !633, size: 64)
!637 = !DIDerivedType(tag: DW_TAG_member, name: "pprev", scope: !634, file: !200, line: 187, baseType: !638, size: 64, offset: 64)
!638 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !633, size: 64)
!639 = !DIDerivedType(tag: DW_TAG_member, name: "s_lock_key", scope: !601, file: !44, line: 2247, baseType: !640, offset: 576)
!640 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lock_class_key", file: !641, line: 187, elements: !239)
!641 = !DIFile(filename: "./include/linux/lockdep_types.h", directory: "/home/lizy2001/genbc/linux")
!642 = !DIDerivedType(tag: DW_TAG_member, name: "s_umount_key", scope: !601, file: !44, line: 2248, baseType: !640, offset: 576)
!643 = !DIDerivedType(tag: DW_TAG_member, name: "s_vfs_rename_key", scope: !601, file: !44, line: 2249, baseType: !640, offset: 576)
!644 = !DIDerivedType(tag: DW_TAG_member, name: "s_writers_key", scope: !601, file: !44, line: 2250, baseType: !645, offset: 576)
!645 = !DICompositeType(tag: DW_TAG_array_type, baseType: !640, elements: !268)
!646 = !DIDerivedType(tag: DW_TAG_member, name: "i_lock_key", scope: !601, file: !44, line: 2252, baseType: !640, offset: 576)
!647 = !DIDerivedType(tag: DW_TAG_member, name: "i_mutex_key", scope: !601, file: !44, line: 2253, baseType: !640, offset: 576)
!648 = !DIDerivedType(tag: DW_TAG_member, name: "i_mutex_dir_key", scope: !601, file: !44, line: 2254, baseType: !640, offset: 576)
!649 = !DIDerivedType(tag: DW_TAG_member, name: "s_op", scope: !592, file: !44, line: 1423, baseType: !650, size: 64, offset: 384)
!650 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !651, size: 64)
!651 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !652)
!652 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "super_operations", file: !44, line: 1935, size: 1472, elements: !653)
!653 = !{!654, !658, !662, !663, !667, !673, !677, !678, !679, !683, !687, !688, !689, !690, !696, !701, !702, !709, !710, !711, !712, !2409, !2424}
!654 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_inode", scope: !652, file: !44, line: 1936, baseType: !655, size: 64)
!655 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !656, size: 64)
!656 = !DISubroutineType(types: !657)
!657 = !{!421, !591}
!658 = !DIDerivedType(tag: DW_TAG_member, name: "destroy_inode", scope: !652, file: !44, line: 1937, baseType: !659, size: 64, offset: 64)
!659 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !660, size: 64)
!660 = !DISubroutineType(types: !661)
!661 = !{null, !421}
!662 = !DIDerivedType(tag: DW_TAG_member, name: "free_inode", scope: !652, file: !44, line: 1938, baseType: !659, size: 64, offset: 128)
!663 = !DIDerivedType(tag: DW_TAG_member, name: "dirty_inode", scope: !652, file: !44, line: 1940, baseType: !664, size: 64, offset: 192)
!664 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !665, size: 64)
!665 = !DISubroutineType(types: !666)
!666 = !{null, !421, !251}
!667 = !DIDerivedType(tag: DW_TAG_member, name: "write_inode", scope: !652, file: !44, line: 1941, baseType: !668, size: 64, offset: 256)
!668 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !669, size: 64)
!669 = !DISubroutineType(types: !670)
!670 = !{!251, !421, !671}
!671 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !672, size: 64)
!672 = !DICompositeType(tag: DW_TAG_structure_type, name: "writeback_control", file: !14, line: 40, flags: DIFlagFwdDecl)
!673 = !DIDerivedType(tag: DW_TAG_member, name: "drop_inode", scope: !652, file: !44, line: 1942, baseType: !674, size: 64, offset: 320)
!674 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !675, size: 64)
!675 = !DISubroutineType(types: !676)
!676 = !{!251, !421}
!677 = !DIDerivedType(tag: DW_TAG_member, name: "evict_inode", scope: !652, file: !44, line: 1943, baseType: !659, size: 64, offset: 384)
!678 = !DIDerivedType(tag: DW_TAG_member, name: "put_super", scope: !652, file: !44, line: 1944, baseType: !621, size: 64, offset: 448)
!679 = !DIDerivedType(tag: DW_TAG_member, name: "sync_fs", scope: !652, file: !44, line: 1945, baseType: !680, size: 64, offset: 512)
!680 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !681, size: 64)
!681 = !DISubroutineType(types: !682)
!682 = !{!251, !591, !251}
!683 = !DIDerivedType(tag: DW_TAG_member, name: "freeze_super", scope: !652, file: !44, line: 1946, baseType: !684, size: 64, offset: 576)
!684 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !685, size: 64)
!685 = !DISubroutineType(types: !686)
!686 = !{!251, !591}
!687 = !DIDerivedType(tag: DW_TAG_member, name: "freeze_fs", scope: !652, file: !44, line: 1947, baseType: !684, size: 64, offset: 640)
!688 = !DIDerivedType(tag: DW_TAG_member, name: "thaw_super", scope: !652, file: !44, line: 1948, baseType: !684, size: 64, offset: 704)
!689 = !DIDerivedType(tag: DW_TAG_member, name: "unfreeze_fs", scope: !652, file: !44, line: 1949, baseType: !684, size: 64, offset: 768)
!690 = !DIDerivedType(tag: DW_TAG_member, name: "statfs", scope: !652, file: !44, line: 1950, baseType: !691, size: 64, offset: 832)
!691 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !692, size: 64)
!692 = !DISubroutineType(types: !693)
!693 = !{!251, !374, !694}
!694 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !695, size: 64)
!695 = !DICompositeType(tag: DW_TAG_structure_type, name: "kstatfs", file: !44, line: 57, flags: DIFlagFwdDecl)
!696 = !DIDerivedType(tag: DW_TAG_member, name: "remount_fs", scope: !652, file: !44, line: 1951, baseType: !697, size: 64, offset: 896)
!697 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !698, size: 64)
!698 = !DISubroutineType(types: !699)
!699 = !{!251, !591, !700, !267}
!700 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !251, size: 64)
!701 = !DIDerivedType(tag: DW_TAG_member, name: "umount_begin", scope: !652, file: !44, line: 1952, baseType: !621, size: 64, offset: 960)
!702 = !DIDerivedType(tag: DW_TAG_member, name: "show_options", scope: !652, file: !44, line: 1954, baseType: !703, size: 64, offset: 1024)
!703 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !704, size: 64)
!704 = !DISubroutineType(types: !705)
!705 = !{!251, !706, !374}
!706 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !707, size: 64)
!707 = !DICompositeType(tag: DW_TAG_structure_type, name: "seq_file", file: !708, line: 539, flags: DIFlagFwdDecl)
!708 = !DIFile(filename: "./arch/x86/include/asm/pgtable_types.h", directory: "/home/lizy2001/genbc/linux")
!709 = !DIDerivedType(tag: DW_TAG_member, name: "show_devname", scope: !652, file: !44, line: 1955, baseType: !703, size: 64, offset: 1088)
!710 = !DIDerivedType(tag: DW_TAG_member, name: "show_path", scope: !652, file: !44, line: 1956, baseType: !703, size: 64, offset: 1152)
!711 = !DIDerivedType(tag: DW_TAG_member, name: "show_stats", scope: !652, file: !44, line: 1957, baseType: !703, size: 64, offset: 1216)
!712 = !DIDerivedType(tag: DW_TAG_member, name: "bdev_try_to_free_page", scope: !652, file: !44, line: 1963, baseType: !713, size: 64, offset: 1280)
!713 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !714, size: 64)
!714 = !DISubroutineType(types: !715)
!715 = !{!251, !591, !716, !739}
!716 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !717, size: 64)
!717 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "page", file: !718, line: 68, size: 512, align: 128, elements: !719)
!718 = !DIFile(filename: "./include/linux/mm_types.h", directory: "/home/lizy2001/genbc/linux")
!719 = !{!720, !721, !2401, !2408}
!720 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !717, file: !718, line: 69, baseType: !316, size: 64)
!721 = !DIDerivedType(tag: DW_TAG_member, scope: !717, file: !718, line: 77, baseType: !722, size: 320, offset: 64)
!722 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !717, file: !718, line: 77, size: 320, elements: !723)
!723 = !{!724, !912, !917, !945, !953, !959, !2332, !2400}
!724 = !DIDerivedType(tag: DW_TAG_member, scope: !722, file: !718, line: 78, baseType: !725, size: 320)
!725 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !722, file: !718, line: 78, size: 320, elements: !726)
!726 = !{!727, !728, !910, !911}
!727 = !DIDerivedType(tag: DW_TAG_member, name: "lru", scope: !725, file: !718, line: 84, baseType: !199, size: 128)
!728 = !DIDerivedType(tag: DW_TAG_member, name: "mapping", scope: !725, file: !718, line: 86, baseType: !729, size: 64, offset: 128)
!729 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !730, size: 64)
!730 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "address_space", file: !44, line: 451, size: 1216, align: 64, elements: !731)
!731 = !{!732, !733, !741, !742, !747, !762, !778, !779, !780, !781, !903, !904, !907, !908, !909}
!732 = !DIDerivedType(tag: DW_TAG_member, name: "host", scope: !730, file: !44, line: 452, baseType: !421, size: 64)
!733 = !DIDerivedType(tag: DW_TAG_member, name: "i_pages", scope: !730, file: !44, line: 453, baseType: !734, size: 128, offset: 64)
!734 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xarray", file: !735, line: 292, size: 128, elements: !736)
!735 = !DIFile(filename: "./include/linux/xarray.h", directory: "/home/lizy2001/genbc/linux")
!736 = !{!737, !738, !740}
!737 = !DIDerivedType(tag: DW_TAG_member, name: "xa_lock", scope: !734, file: !735, line: 293, baseType: !225)
!738 = !DIDerivedType(tag: DW_TAG_member, name: "xa_flags", scope: !734, file: !735, line: 295, baseType: !739, size: 32)
!739 = !DIDerivedType(tag: DW_TAG_typedef, name: "gfp_t", file: !200, line: 148, baseType: !7)
!740 = !DIDerivedType(tag: DW_TAG_member, name: "xa_head", scope: !734, file: !735, line: 296, baseType: !193, size: 64, offset: 64)
!741 = !DIDerivedType(tag: DW_TAG_member, name: "gfp_mask", scope: !730, file: !44, line: 454, baseType: !739, size: 32, offset: 192)
!742 = !DIDerivedType(tag: DW_TAG_member, name: "i_mmap_writable", scope: !730, file: !44, line: 455, baseType: !743, size: 32, offset: 224)
!743 = !DIDerivedType(tag: DW_TAG_typedef, name: "atomic_t", file: !200, line: 168, baseType: !744)
!744 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !200, line: 166, size: 32, elements: !745)
!745 = !{!746}
!746 = !DIDerivedType(tag: DW_TAG_member, name: "counter", scope: !744, file: !200, line: 167, baseType: !251, size: 32)
!747 = !DIDerivedType(tag: DW_TAG_member, name: "i_mmap", scope: !730, file: !44, line: 460, baseType: !748, size: 128, offset: 256)
!748 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rb_root_cached", file: !749, line: 125, size: 128, elements: !750)
!749 = !DIFile(filename: "./include/linux/rbtree.h", directory: "/home/lizy2001/genbc/linux")
!750 = !{!751, !761}
!751 = !DIDerivedType(tag: DW_TAG_member, name: "rb_root", scope: !748, file: !749, line: 126, baseType: !752, size: 64)
!752 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rb_root", file: !749, line: 31, size: 64, elements: !753)
!753 = !{!754}
!754 = !DIDerivedType(tag: DW_TAG_member, name: "rb_node", scope: !752, file: !749, line: 32, baseType: !755, size: 64)
!755 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !756, size: 64)
!756 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rb_node", file: !749, line: 24, size: 192, align: 64, elements: !757)
!757 = !{!758, !759, !760}
!758 = !DIDerivedType(tag: DW_TAG_member, name: "__rb_parent_color", scope: !756, file: !749, line: 25, baseType: !316, size: 64)
!759 = !DIDerivedType(tag: DW_TAG_member, name: "rb_right", scope: !756, file: !749, line: 26, baseType: !755, size: 64, offset: 64)
!760 = !DIDerivedType(tag: DW_TAG_member, name: "rb_left", scope: !756, file: !749, line: 27, baseType: !755, size: 64, offset: 128)
!761 = !DIDerivedType(tag: DW_TAG_member, name: "rb_leftmost", scope: !748, file: !749, line: 127, baseType: !755, size: 64, offset: 64)
!762 = !DIDerivedType(tag: DW_TAG_member, name: "i_mmap_rwsem", scope: !730, file: !44, line: 461, baseType: !763, size: 256, offset: 384)
!763 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rw_semaphore", file: !764, line: 35, size: 256, elements: !765)
!764 = !DIFile(filename: "./include/linux/rwsem.h", directory: "/home/lizy2001/genbc/linux")
!765 = !{!766, !774, !775, !777}
!766 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !763, file: !764, line: 36, baseType: !767, size: 64)
!767 = !DIDerivedType(tag: DW_TAG_typedef, name: "atomic_long_t", file: !768, line: 13, baseType: !769)
!768 = !DIFile(filename: "./include/asm-generic/atomic-long.h", directory: "/home/lizy2001/genbc/linux")
!769 = !DIDerivedType(tag: DW_TAG_typedef, name: "atomic64_t", file: !200, line: 175, baseType: !770)
!770 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !200, line: 173, size: 64, elements: !771)
!771 = !{!772}
!772 = !DIDerivedType(tag: DW_TAG_member, name: "counter", scope: !770, file: !200, line: 174, baseType: !773, size: 64)
!773 = !DIDerivedType(tag: DW_TAG_typedef, name: "s64", file: !408, line: 22, baseType: !532)
!774 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !763, file: !764, line: 42, baseType: !767, size: 64, offset: 64)
!775 = !DIDerivedType(tag: DW_TAG_member, name: "wait_lock", scope: !763, file: !764, line: 46, baseType: !776, offset: 128)
!776 = !DIDerivedType(tag: DW_TAG_typedef, name: "raw_spinlock_t", file: !226, line: 29, baseType: !233)
!777 = !DIDerivedType(tag: DW_TAG_member, name: "wait_list", scope: !763, file: !764, line: 47, baseType: !199, size: 128, offset: 128)
!778 = !DIDerivedType(tag: DW_TAG_member, name: "nrpages", scope: !730, file: !44, line: 462, baseType: !316, size: 64, offset: 640)
!779 = !DIDerivedType(tag: DW_TAG_member, name: "nrexceptional", scope: !730, file: !44, line: 463, baseType: !316, size: 64, offset: 704)
!780 = !DIDerivedType(tag: DW_TAG_member, name: "writeback_index", scope: !730, file: !44, line: 464, baseType: !316, size: 64, offset: 768)
!781 = !DIDerivedType(tag: DW_TAG_member, name: "a_ops", scope: !730, file: !44, line: 465, baseType: !782, size: 64, offset: 832)
!782 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !783, size: 64)
!783 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !784)
!784 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "address_space_operations", file: !44, line: 367, size: 1408, elements: !785)
!785 = !{!786, !790, !794, !798, !802, !806, !812, !818, !822, !827, !831, !835, !839, !867, !871, !877, !878, !879, !883, !888, !892, !899}
!786 = !DIDerivedType(tag: DW_TAG_member, name: "writepage", scope: !784, file: !44, line: 368, baseType: !787, size: 64)
!787 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !788, size: 64)
!788 = !DISubroutineType(types: !789)
!789 = !{!251, !716, !671}
!790 = !DIDerivedType(tag: DW_TAG_member, name: "readpage", scope: !784, file: !44, line: 369, baseType: !791, size: 64, offset: 64)
!791 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !792, size: 64)
!792 = !DISubroutineType(types: !793)
!793 = !{!251, !344, !716}
!794 = !DIDerivedType(tag: DW_TAG_member, name: "writepages", scope: !784, file: !44, line: 372, baseType: !795, size: 64, offset: 128)
!795 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !796, size: 64)
!796 = !DISubroutineType(types: !797)
!797 = !{!251, !729, !671}
!798 = !DIDerivedType(tag: DW_TAG_member, name: "set_page_dirty", scope: !784, file: !44, line: 375, baseType: !799, size: 64, offset: 192)
!799 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !800, size: 64)
!800 = !DISubroutineType(types: !801)
!801 = !{!251, !716}
!802 = !DIDerivedType(tag: DW_TAG_member, name: "readpages", scope: !784, file: !44, line: 381, baseType: !803, size: 64, offset: 256)
!803 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !804, size: 64)
!804 = !DISubroutineType(types: !805)
!805 = !{!251, !344, !729, !203, !7}
!806 = !DIDerivedType(tag: DW_TAG_member, name: "readahead", scope: !784, file: !44, line: 383, baseType: !807, size: 64, offset: 320)
!807 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !808, size: 64)
!808 = !DISubroutineType(types: !809)
!809 = !{null, !810}
!810 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !811, size: 64)
!811 = !DICompositeType(tag: DW_TAG_structure_type, name: "readahead_control", file: !44, line: 290, flags: DIFlagFwdDecl)
!812 = !DIDerivedType(tag: DW_TAG_member, name: "write_begin", scope: !784, file: !44, line: 385, baseType: !813, size: 64, offset: 384)
!813 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !814, size: 64)
!814 = !DISubroutineType(types: !815)
!815 = !{!251, !344, !729, !523, !7, !7, !816, !817}
!816 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !716, size: 64)
!817 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !193, size: 64)
!818 = !DIDerivedType(tag: DW_TAG_member, name: "write_end", scope: !784, file: !44, line: 388, baseType: !819, size: 64, offset: 448)
!819 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !820, size: 64)
!820 = !DISubroutineType(types: !821)
!821 = !{!251, !344, !729, !523, !7, !7, !716, !193}
!822 = !DIDerivedType(tag: DW_TAG_member, name: "bmap", scope: !784, file: !44, line: 393, baseType: !823, size: 64, offset: 512)
!823 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !824, size: 64)
!824 = !DISubroutineType(types: !825)
!825 = !{!826, !729, !826}
!826 = !DIDerivedType(tag: DW_TAG_typedef, name: "sector_t", file: !200, line: 125, baseType: !413)
!827 = !DIDerivedType(tag: DW_TAG_member, name: "invalidatepage", scope: !784, file: !44, line: 394, baseType: !828, size: 64, offset: 576)
!828 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !829, size: 64)
!829 = !DISubroutineType(types: !830)
!830 = !{null, !716, !7, !7}
!831 = !DIDerivedType(tag: DW_TAG_member, name: "releasepage", scope: !784, file: !44, line: 395, baseType: !832, size: 64, offset: 640)
!832 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !833, size: 64)
!833 = !DISubroutineType(types: !834)
!834 = !{!251, !716, !739}
!835 = !DIDerivedType(tag: DW_TAG_member, name: "freepage", scope: !784, file: !44, line: 396, baseType: !836, size: 64, offset: 704)
!836 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !837, size: 64)
!837 = !DISubroutineType(types: !838)
!838 = !{null, !716}
!839 = !DIDerivedType(tag: DW_TAG_member, name: "direct_IO", scope: !784, file: !44, line: 397, baseType: !840, size: 64, offset: 768)
!840 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !841, size: 64)
!841 = !DISubroutineType(types: !842)
!842 = !{!298, !843, !865}
!843 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !844, size: 64)
!844 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kiocb", file: !44, line: 320, size: 384, elements: !845)
!845 = !{!846, !847, !848, !852, !853, !854, !857, !858}
!846 = !DIDerivedType(tag: DW_TAG_member, name: "ki_filp", scope: !844, file: !44, line: 321, baseType: !344, size: 64)
!847 = !DIDerivedType(tag: DW_TAG_member, name: "ki_pos", scope: !844, file: !44, line: 326, baseType: !523, size: 64, offset: 64)
!848 = !DIDerivedType(tag: DW_TAG_member, name: "ki_complete", scope: !844, file: !44, line: 327, baseType: !849, size: 64, offset: 128)
!849 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !850, size: 64)
!850 = !DISubroutineType(types: !851)
!851 = !{null, !843, !138, !138}
!852 = !DIDerivedType(tag: DW_TAG_member, name: "private", scope: !844, file: !44, line: 328, baseType: !193, size: 64, offset: 192)
!853 = !DIDerivedType(tag: DW_TAG_member, name: "ki_flags", scope: !844, file: !44, line: 329, baseType: !251, size: 32, offset: 256)
!854 = !DIDerivedType(tag: DW_TAG_member, name: "ki_hint", scope: !844, file: !44, line: 330, baseType: !855, size: 16, offset: 288)
!855 = !DIDerivedType(tag: DW_TAG_typedef, name: "u16", file: !408, line: 19, baseType: !856)
!856 = !DIDerivedType(tag: DW_TAG_typedef, name: "__u16", file: !410, line: 24, baseType: !308)
!857 = !DIDerivedType(tag: DW_TAG_member, name: "ki_ioprio", scope: !844, file: !44, line: 331, baseType: !855, size: 16, offset: 304)
!858 = !DIDerivedType(tag: DW_TAG_member, scope: !844, file: !44, line: 332, baseType: !859, size: 64, offset: 320)
!859 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !844, file: !44, line: 332, size: 64, elements: !860)
!860 = !{!861, !862}
!861 = !DIDerivedType(tag: DW_TAG_member, name: "ki_cookie", scope: !859, file: !44, line: 333, baseType: !7, size: 32)
!862 = !DIDerivedType(tag: DW_TAG_member, name: "ki_waitq", scope: !859, file: !44, line: 334, baseType: !863, size: 64)
!863 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !864, size: 64)
!864 = !DICompositeType(tag: DW_TAG_structure_type, name: "wait_page_queue", file: !44, line: 334, flags: DIFlagFwdDecl)
!865 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !866, size: 64)
!866 = !DICompositeType(tag: DW_TAG_structure_type, name: "iov_iter", file: !44, line: 64, flags: DIFlagFwdDecl)
!867 = !DIDerivedType(tag: DW_TAG_member, name: "migratepage", scope: !784, file: !44, line: 402, baseType: !868, size: 64, offset: 832)
!868 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !869, size: 64)
!869 = !DISubroutineType(types: !870)
!870 = !{!251, !729, !716, !716, !5}
!871 = !DIDerivedType(tag: DW_TAG_member, name: "isolate_page", scope: !784, file: !44, line: 404, baseType: !872, size: 64, offset: 896)
!872 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !873, size: 64)
!873 = !DISubroutineType(types: !874)
!874 = !{!482, !716, !875}
!875 = !DIDerivedType(tag: DW_TAG_typedef, name: "isolate_mode_t", file: !876, line: 305, baseType: !7)
!876 = !DIFile(filename: "./include/linux/mmzone.h", directory: "/home/lizy2001/genbc/linux")
!877 = !DIDerivedType(tag: DW_TAG_member, name: "putback_page", scope: !784, file: !44, line: 405, baseType: !836, size: 64, offset: 960)
!878 = !DIDerivedType(tag: DW_TAG_member, name: "launder_page", scope: !784, file: !44, line: 406, baseType: !799, size: 64, offset: 1024)
!879 = !DIDerivedType(tag: DW_TAG_member, name: "is_partially_uptodate", scope: !784, file: !44, line: 407, baseType: !880, size: 64, offset: 1088)
!880 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !881, size: 64)
!881 = !DISubroutineType(types: !882)
!882 = !{!251, !716, !316, !316}
!883 = !DIDerivedType(tag: DW_TAG_member, name: "is_dirty_writeback", scope: !784, file: !44, line: 409, baseType: !884, size: 64, offset: 1152)
!884 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !885, size: 64)
!885 = !DISubroutineType(types: !886)
!886 = !{null, !716, !887, !887}
!887 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !482, size: 64)
!888 = !DIDerivedType(tag: DW_TAG_member, name: "error_remove_page", scope: !784, file: !44, line: 410, baseType: !889, size: 64, offset: 1216)
!889 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !890, size: 64)
!890 = !DISubroutineType(types: !891)
!891 = !{!251, !729, !716}
!892 = !DIDerivedType(tag: DW_TAG_member, name: "swap_activate", scope: !784, file: !44, line: 413, baseType: !893, size: 64, offset: 1280)
!893 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !894, size: 64)
!894 = !DISubroutineType(types: !895)
!895 = !{!251, !896, !344, !898}
!896 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !897, size: 64)
!897 = !DICompositeType(tag: DW_TAG_structure_type, name: "swap_info_struct", file: !44, line: 61, flags: DIFlagFwdDecl)
!898 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !826, size: 64)
!899 = !DIDerivedType(tag: DW_TAG_member, name: "swap_deactivate", scope: !784, file: !44, line: 415, baseType: !900, size: 64, offset: 1344)
!900 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !901, size: 64)
!901 = !DISubroutineType(types: !902)
!902 = !{null, !344}
!903 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !730, file: !44, line: 466, baseType: !316, size: 64, offset: 896)
!904 = !DIDerivedType(tag: DW_TAG_member, name: "wb_err", scope: !730, file: !44, line: 467, baseType: !905, size: 32, offset: 960)
!905 = !DIDerivedType(tag: DW_TAG_typedef, name: "errseq_t", file: !906, line: 8, baseType: !407)
!906 = !DIFile(filename: "./include/linux/errseq.h", directory: "/home/lizy2001/genbc/linux")
!907 = !DIDerivedType(tag: DW_TAG_member, name: "private_lock", scope: !730, file: !44, line: 468, baseType: !225, offset: 992)
!908 = !DIDerivedType(tag: DW_TAG_member, name: "private_list", scope: !730, file: !44, line: 469, baseType: !199, size: 128, offset: 1024)
!909 = !DIDerivedType(tag: DW_TAG_member, name: "private_data", scope: !730, file: !44, line: 470, baseType: !193, size: 64, offset: 1152)
!910 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !725, file: !718, line: 87, baseType: !316, size: 64, offset: 192)
!911 = !DIDerivedType(tag: DW_TAG_member, name: "private", scope: !725, file: !718, line: 94, baseType: !316, size: 64, offset: 256)
!912 = !DIDerivedType(tag: DW_TAG_member, scope: !722, file: !718, line: 96, baseType: !913, size: 64)
!913 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !722, file: !718, line: 96, size: 64, elements: !914)
!914 = !{!915}
!915 = !DIDerivedType(tag: DW_TAG_member, name: "dma_addr", scope: !913, file: !718, line: 101, baseType: !916, size: 64)
!916 = !DIDerivedType(tag: DW_TAG_typedef, name: "dma_addr_t", file: !200, line: 143, baseType: !413)
!917 = !DIDerivedType(tag: DW_TAG_member, scope: !722, file: !718, line: 103, baseType: !918, size: 320)
!918 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !722, file: !718, line: 103, size: 320, elements: !919)
!919 = !{!920, !930, !933, !934}
!920 = !DIDerivedType(tag: DW_TAG_member, scope: !918, file: !718, line: 104, baseType: !921, size: 128)
!921 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !918, file: !718, line: 104, size: 128, elements: !922)
!922 = !{!923, !924}
!923 = !DIDerivedType(tag: DW_TAG_member, name: "slab_list", scope: !921, file: !718, line: 105, baseType: !199, size: 128)
!924 = !DIDerivedType(tag: DW_TAG_member, scope: !921, file: !718, line: 106, baseType: !925, size: 128)
!925 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !921, file: !718, line: 106, size: 128, elements: !926)
!926 = !{!927, !928, !929}
!927 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !925, file: !718, line: 107, baseType: !716, size: 64)
!928 = !DIDerivedType(tag: DW_TAG_member, name: "pages", scope: !925, file: !718, line: 109, baseType: !251, size: 32, offset: 64)
!929 = !DIDerivedType(tag: DW_TAG_member, name: "pobjects", scope: !925, file: !718, line: 110, baseType: !251, size: 32, offset: 96)
!930 = !DIDerivedType(tag: DW_TAG_member, name: "slab_cache", scope: !918, file: !718, line: 117, baseType: !931, size: 64, offset: 128)
!931 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !932, size: 64)
!932 = !DICompositeType(tag: DW_TAG_structure_type, name: "kmem_cache", file: !718, line: 117, flags: DIFlagFwdDecl)
!933 = !DIDerivedType(tag: DW_TAG_member, name: "freelist", scope: !918, file: !718, line: 119, baseType: !193, size: 64, offset: 192)
!934 = !DIDerivedType(tag: DW_TAG_member, scope: !918, file: !718, line: 120, baseType: !935, size: 64, offset: 256)
!935 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !918, file: !718, line: 120, size: 64, elements: !936)
!936 = !{!937, !938, !939}
!937 = !DIDerivedType(tag: DW_TAG_member, name: "s_mem", scope: !935, file: !718, line: 121, baseType: !193, size: 64)
!938 = !DIDerivedType(tag: DW_TAG_member, name: "counters", scope: !935, file: !718, line: 122, baseType: !316, size: 64)
!939 = !DIDerivedType(tag: DW_TAG_member, scope: !935, file: !718, line: 123, baseType: !940, size: 32)
!940 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !935, file: !718, line: 123, size: 32, elements: !941)
!941 = !{!942, !943, !944}
!942 = !DIDerivedType(tag: DW_TAG_member, name: "inuse", scope: !940, file: !718, line: 124, baseType: !7, size: 16, flags: DIFlagBitField, extraData: i64 0)
!943 = !DIDerivedType(tag: DW_TAG_member, name: "objects", scope: !940, file: !718, line: 125, baseType: !7, size: 15, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!944 = !DIDerivedType(tag: DW_TAG_member, name: "frozen", scope: !940, file: !718, line: 126, baseType: !7, size: 1, offset: 31, flags: DIFlagBitField, extraData: i64 0)
!945 = !DIDerivedType(tag: DW_TAG_member, scope: !722, file: !718, line: 130, baseType: !946, size: 192)
!946 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !722, file: !718, line: 130, size: 192, elements: !947)
!947 = !{!948, !949, !950, !951, !952}
!948 = !DIDerivedType(tag: DW_TAG_member, name: "compound_head", scope: !946, file: !718, line: 131, baseType: !316, size: 64)
!949 = !DIDerivedType(tag: DW_TAG_member, name: "compound_dtor", scope: !946, file: !718, line: 134, baseType: !419, size: 8, offset: 64)
!950 = !DIDerivedType(tag: DW_TAG_member, name: "compound_order", scope: !946, file: !718, line: 135, baseType: !419, size: 8, offset: 72)
!951 = !DIDerivedType(tag: DW_TAG_member, name: "compound_mapcount", scope: !946, file: !718, line: 136, baseType: !743, size: 32, offset: 96)
!952 = !DIDerivedType(tag: DW_TAG_member, name: "compound_nr", scope: !946, file: !718, line: 137, baseType: !7, size: 32, offset: 128)
!953 = !DIDerivedType(tag: DW_TAG_member, scope: !722, file: !718, line: 139, baseType: !954, size: 256)
!954 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !722, file: !718, line: 139, size: 256, elements: !955)
!955 = !{!956, !957, !958}
!956 = !DIDerivedType(tag: DW_TAG_member, name: "_compound_pad_1", scope: !954, file: !718, line: 140, baseType: !316, size: 64)
!957 = !DIDerivedType(tag: DW_TAG_member, name: "hpage_pinned_refcount", scope: !954, file: !718, line: 141, baseType: !743, size: 32, offset: 64)
!958 = !DIDerivedType(tag: DW_TAG_member, name: "deferred_list", scope: !954, file: !718, line: 143, baseType: !199, size: 128, offset: 128)
!959 = !DIDerivedType(tag: DW_TAG_member, scope: !722, file: !718, line: 145, baseType: !960, size: 256)
!960 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !722, file: !718, line: 145, size: 256, elements: !961)
!961 = !{!962, !963, !965, !966, !2331}
!962 = !DIDerivedType(tag: DW_TAG_member, name: "_pt_pad_1", scope: !960, file: !718, line: 146, baseType: !316, size: 64)
!963 = !DIDerivedType(tag: DW_TAG_member, name: "pmd_huge_pte", scope: !960, file: !718, line: 147, baseType: !964, size: 64, offset: 64)
!964 = !DIDerivedType(tag: DW_TAG_typedef, name: "pgtable_t", file: !708, line: 509, baseType: !716)
!965 = !DIDerivedType(tag: DW_TAG_member, name: "_pt_pad_2", scope: !960, file: !718, line: 148, baseType: !316, size: 64, offset: 128)
!966 = !DIDerivedType(tag: DW_TAG_member, scope: !960, file: !718, line: 149, baseType: !967, size: 64, offset: 192)
!967 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !960, file: !718, line: 149, size: 64, elements: !968)
!968 = !{!969, !2330}
!969 = !DIDerivedType(tag: DW_TAG_member, name: "pt_mm", scope: !967, file: !718, line: 150, baseType: !970, size: 64)
!970 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !971, size: 64)
!971 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mm_struct", file: !718, line: 388, size: 7296, elements: !972)
!972 = !{!973, !2326}
!973 = !DIDerivedType(tag: DW_TAG_member, scope: !971, file: !718, line: 389, baseType: !974, size: 7296)
!974 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !971, file: !718, line: 389, size: 7296, elements: !975)
!975 = !{!976, !1094, !1095, !1096, !1100, !1101, !1102, !1103, !1104, !1111, !1112, !1113, !1114, !1115, !1116, !1117, !1118, !1119, !1120, !1121, !1122, !1123, !1124, !1125, !1126, !1127, !1128, !1129, !1130, !1131, !1132, !1133, !1134, !1135, !1136, !1137, !1138, !1139, !1140, !1141, !1145, !1153, !1156, !1202, !1203, !2310, !2311, !2314, !2315, !2316, !2319, !2320, !2321, !2324, !2325}
!976 = !DIDerivedType(tag: DW_TAG_member, name: "mmap", scope: !974, file: !718, line: 390, baseType: !977, size: 64)
!977 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !978, size: 64)
!978 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vm_area_struct", file: !718, line: 305, size: 1472, elements: !979)
!979 = !{!980, !981, !982, !983, !984, !985, !986, !987, !994, !995, !1000, !1001, !1004, !1088, !1089, !1090, !1091, !1092}
!980 = !DIDerivedType(tag: DW_TAG_member, name: "vm_start", scope: !978, file: !718, line: 308, baseType: !316, size: 64)
!981 = !DIDerivedType(tag: DW_TAG_member, name: "vm_end", scope: !978, file: !718, line: 309, baseType: !316, size: 64, offset: 64)
!982 = !DIDerivedType(tag: DW_TAG_member, name: "vm_next", scope: !978, file: !718, line: 313, baseType: !977, size: 64, offset: 128)
!983 = !DIDerivedType(tag: DW_TAG_member, name: "vm_prev", scope: !978, file: !718, line: 313, baseType: !977, size: 64, offset: 192)
!984 = !DIDerivedType(tag: DW_TAG_member, name: "vm_rb", scope: !978, file: !718, line: 315, baseType: !756, size: 192, align: 64, offset: 256)
!985 = !DIDerivedType(tag: DW_TAG_member, name: "rb_subtree_gap", scope: !978, file: !718, line: 323, baseType: !316, size: 64, offset: 448)
!986 = !DIDerivedType(tag: DW_TAG_member, name: "vm_mm", scope: !978, file: !718, line: 327, baseType: !970, size: 64, offset: 512)
!987 = !DIDerivedType(tag: DW_TAG_member, name: "vm_page_prot", scope: !978, file: !718, line: 333, baseType: !988, size: 64, offset: 576)
!988 = !DIDerivedType(tag: DW_TAG_typedef, name: "pgprot_t", file: !708, line: 284, baseType: !989)
!989 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pgprot", file: !708, line: 284, size: 64, elements: !990)
!990 = !{!991}
!991 = !DIDerivedType(tag: DW_TAG_member, name: "pgprot", scope: !989, file: !708, line: 284, baseType: !992, size: 64)
!992 = !DIDerivedType(tag: DW_TAG_typedef, name: "pgprotval_t", file: !993, line: 19, baseType: !316)
!993 = !DIFile(filename: "./arch/x86/include/asm/pgtable_64_types.h", directory: "/home/lizy2001/genbc/linux")
!994 = !DIDerivedType(tag: DW_TAG_member, name: "vm_flags", scope: !978, file: !718, line: 334, baseType: !316, size: 64, offset: 640)
!995 = !DIDerivedType(tag: DW_TAG_member, name: "shared", scope: !978, file: !718, line: 343, baseType: !996, size: 256, offset: 704)
!996 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !978, file: !718, line: 340, size: 256, elements: !997)
!997 = !{!998, !999}
!998 = !DIDerivedType(tag: DW_TAG_member, name: "rb", scope: !996, file: !718, line: 341, baseType: !756, size: 192, align: 64)
!999 = !DIDerivedType(tag: DW_TAG_member, name: "rb_subtree_last", scope: !996, file: !718, line: 342, baseType: !316, size: 64, offset: 192)
!1000 = !DIDerivedType(tag: DW_TAG_member, name: "anon_vma_chain", scope: !978, file: !718, line: 351, baseType: !199, size: 128, offset: 960)
!1001 = !DIDerivedType(tag: DW_TAG_member, name: "anon_vma", scope: !978, file: !718, line: 353, baseType: !1002, size: 64, offset: 1088)
!1002 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1003, size: 64)
!1003 = !DICompositeType(tag: DW_TAG_structure_type, name: "anon_vma", file: !718, line: 353, flags: DIFlagFwdDecl)
!1004 = !DIDerivedType(tag: DW_TAG_member, name: "vm_ops", scope: !978, file: !718, line: 356, baseType: !1005, size: 64, offset: 1152)
!1005 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1006, size: 64)
!1006 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1007)
!1007 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vm_operations_struct", file: !14, line: 557, size: 832, elements: !1008)
!1008 = !{!1009, !1013, !1014, !1018, !1022, !1062, !1066, !1070, !1074, !1075, !1076, !1080, !1084}
!1009 = !DIDerivedType(tag: DW_TAG_member, name: "open", scope: !1007, file: !14, line: 558, baseType: !1010, size: 64)
!1010 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1011, size: 64)
!1011 = !DISubroutineType(types: !1012)
!1012 = !{null, !977}
!1013 = !DIDerivedType(tag: DW_TAG_member, name: "close", scope: !1007, file: !14, line: 559, baseType: !1010, size: 64, offset: 64)
!1014 = !DIDerivedType(tag: DW_TAG_member, name: "split", scope: !1007, file: !14, line: 560, baseType: !1015, size: 64, offset: 128)
!1015 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1016, size: 64)
!1016 = !DISubroutineType(types: !1017)
!1017 = !{!251, !977, !316}
!1018 = !DIDerivedType(tag: DW_TAG_member, name: "mremap", scope: !1007, file: !14, line: 561, baseType: !1019, size: 64, offset: 192)
!1019 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1020, size: 64)
!1020 = !DISubroutineType(types: !1021)
!1021 = !{!251, !977}
!1022 = !DIDerivedType(tag: DW_TAG_member, name: "fault", scope: !1007, file: !14, line: 562, baseType: !1023, size: 64, offset: 256)
!1023 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1024, size: 64)
!1024 = !DISubroutineType(types: !1025)
!1025 = !{!1026, !1027}
!1026 = !DIDerivedType(tag: DW_TAG_typedef, name: "vm_fault_t", file: !718, line: 682, baseType: !7)
!1027 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1028, size: 64)
!1028 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vm_fault", file: !14, line: 508, size: 768, elements: !1029)
!1029 = !{!1030, !1031, !1032, !1033, !1034, !1035, !1042, !1049, !1055, !1056, !1057, !1059, !1061}
!1030 = !DIDerivedType(tag: DW_TAG_member, name: "vma", scope: !1028, file: !14, line: 509, baseType: !977, size: 64)
!1031 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1028, file: !14, line: 510, baseType: !7, size: 32, offset: 64)
!1032 = !DIDerivedType(tag: DW_TAG_member, name: "gfp_mask", scope: !1028, file: !14, line: 511, baseType: !739, size: 32, offset: 96)
!1033 = !DIDerivedType(tag: DW_TAG_member, name: "pgoff", scope: !1028, file: !14, line: 512, baseType: !316, size: 64, offset: 128)
!1034 = !DIDerivedType(tag: DW_TAG_member, name: "address", scope: !1028, file: !14, line: 513, baseType: !316, size: 64, offset: 192)
!1035 = !DIDerivedType(tag: DW_TAG_member, name: "pmd", scope: !1028, file: !14, line: 514, baseType: !1036, size: 64, offset: 256)
!1036 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1037, size: 64)
!1037 = !DIDerivedType(tag: DW_TAG_typedef, name: "pmd_t", file: !708, line: 385, baseType: !1038)
!1038 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !708, line: 385, size: 64, elements: !1039)
!1039 = !{!1040}
!1040 = !DIDerivedType(tag: DW_TAG_member, name: "pmd", scope: !1038, file: !708, line: 385, baseType: !1041, size: 64)
!1041 = !DIDerivedType(tag: DW_TAG_typedef, name: "pmdval_t", file: !993, line: 15, baseType: !316)
!1042 = !DIDerivedType(tag: DW_TAG_member, name: "pud", scope: !1028, file: !14, line: 516, baseType: !1043, size: 64, offset: 320)
!1043 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1044, size: 64)
!1044 = !DIDerivedType(tag: DW_TAG_typedef, name: "pud_t", file: !708, line: 359, baseType: !1045)
!1045 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !708, line: 359, size: 64, elements: !1046)
!1046 = !{!1047}
!1047 = !DIDerivedType(tag: DW_TAG_member, name: "pud", scope: !1045, file: !708, line: 359, baseType: !1048, size: 64)
!1048 = !DIDerivedType(tag: DW_TAG_typedef, name: "pudval_t", file: !993, line: 16, baseType: !316)
!1049 = !DIDerivedType(tag: DW_TAG_member, name: "orig_pte", scope: !1028, file: !14, line: 519, baseType: !1050, size: 64, offset: 384)
!1050 = !DIDerivedType(tag: DW_TAG_typedef, name: "pte_t", file: !993, line: 21, baseType: !1051)
!1051 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !993, line: 21, size: 64, elements: !1052)
!1052 = !{!1053}
!1053 = !DIDerivedType(tag: DW_TAG_member, name: "pte", scope: !1051, file: !993, line: 21, baseType: !1054, size: 64)
!1054 = !DIDerivedType(tag: DW_TAG_typedef, name: "pteval_t", file: !993, line: 14, baseType: !316)
!1055 = !DIDerivedType(tag: DW_TAG_member, name: "cow_page", scope: !1028, file: !14, line: 521, baseType: !716, size: 64, offset: 448)
!1056 = !DIDerivedType(tag: DW_TAG_member, name: "page", scope: !1028, file: !14, line: 522, baseType: !716, size: 64, offset: 512)
!1057 = !DIDerivedType(tag: DW_TAG_member, name: "pte", scope: !1028, file: !14, line: 528, baseType: !1058, size: 64, offset: 576)
!1058 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1050, size: 64)
!1059 = !DIDerivedType(tag: DW_TAG_member, name: "ptl", scope: !1028, file: !14, line: 532, baseType: !1060, size: 64, offset: 640)
!1060 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !225, size: 64)
!1061 = !DIDerivedType(tag: DW_TAG_member, name: "prealloc_pte", scope: !1028, file: !14, line: 536, baseType: !964, size: 64, offset: 704)
!1062 = !DIDerivedType(tag: DW_TAG_member, name: "huge_fault", scope: !1007, file: !14, line: 563, baseType: !1063, size: 64, offset: 320)
!1063 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1064, size: 64)
!1064 = !DISubroutineType(types: !1065)
!1065 = !{!1026, !1027, !13}
!1066 = !DIDerivedType(tag: DW_TAG_member, name: "map_pages", scope: !1007, file: !14, line: 565, baseType: !1067, size: 64, offset: 384)
!1067 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1068, size: 64)
!1068 = !DISubroutineType(types: !1069)
!1069 = !{null, !1027, !316, !316}
!1070 = !DIDerivedType(tag: DW_TAG_member, name: "pagesize", scope: !1007, file: !14, line: 567, baseType: !1071, size: 64, offset: 448)
!1071 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1072, size: 64)
!1072 = !DISubroutineType(types: !1073)
!1073 = !{!316, !977}
!1074 = !DIDerivedType(tag: DW_TAG_member, name: "page_mkwrite", scope: !1007, file: !14, line: 571, baseType: !1023, size: 64, offset: 512)
!1075 = !DIDerivedType(tag: DW_TAG_member, name: "pfn_mkwrite", scope: !1007, file: !14, line: 574, baseType: !1023, size: 64, offset: 576)
!1076 = !DIDerivedType(tag: DW_TAG_member, name: "access", scope: !1007, file: !14, line: 579, baseType: !1077, size: 64, offset: 640)
!1077 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1078, size: 64)
!1078 = !DISubroutineType(types: !1079)
!1079 = !{!251, !977, !316, !193, !251, !251}
!1080 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1007, file: !14, line: 585, baseType: !1081, size: 64, offset: 704)
!1081 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1082, size: 64)
!1082 = !DISubroutineType(types: !1083)
!1083 = !{!213, !977}
!1084 = !DIDerivedType(tag: DW_TAG_member, name: "find_special_page", scope: !1007, file: !14, line: 615, baseType: !1085, size: 64, offset: 768)
!1085 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1086, size: 64)
!1086 = !DISubroutineType(types: !1087)
!1087 = !{!716, !977, !316}
!1088 = !DIDerivedType(tag: DW_TAG_member, name: "vm_pgoff", scope: !978, file: !718, line: 359, baseType: !316, size: 64, offset: 1216)
!1089 = !DIDerivedType(tag: DW_TAG_member, name: "vm_file", scope: !978, file: !718, line: 361, baseType: !344, size: 64, offset: 1280)
!1090 = !DIDerivedType(tag: DW_TAG_member, name: "vm_private_data", scope: !978, file: !718, line: 362, baseType: !193, size: 64, offset: 1344)
!1091 = !DIDerivedType(tag: DW_TAG_member, name: "swap_readahead_info", scope: !978, file: !718, line: 365, baseType: !767, size: 64, offset: 1408)
!1092 = !DIDerivedType(tag: DW_TAG_member, name: "vm_userfaultfd_ctx", scope: !978, file: !718, line: 373, baseType: !1093, offset: 1472)
!1093 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vm_userfaultfd_ctx", file: !718, line: 296, elements: !239)
!1094 = !DIDerivedType(tag: DW_TAG_member, name: "mm_rb", scope: !974, file: !718, line: 391, baseType: !752, size: 64, offset: 64)
!1095 = !DIDerivedType(tag: DW_TAG_member, name: "vmacache_seqnum", scope: !974, file: !718, line: 392, baseType: !413, size: 64, offset: 128)
!1096 = !DIDerivedType(tag: DW_TAG_member, name: "get_unmapped_area", scope: !974, file: !718, line: 394, baseType: !1097, size: 64, offset: 192)
!1097 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1098, size: 64)
!1098 = !DISubroutineType(types: !1099)
!1099 = !{!316, !344, !316, !316, !316, !316}
!1100 = !DIDerivedType(tag: DW_TAG_member, name: "mmap_base", scope: !974, file: !718, line: 398, baseType: !316, size: 64, offset: 256)
!1101 = !DIDerivedType(tag: DW_TAG_member, name: "mmap_legacy_base", scope: !974, file: !718, line: 399, baseType: !316, size: 64, offset: 320)
!1102 = !DIDerivedType(tag: DW_TAG_member, name: "task_size", scope: !974, file: !718, line: 405, baseType: !316, size: 64, offset: 384)
!1103 = !DIDerivedType(tag: DW_TAG_member, name: "highest_vm_end", scope: !974, file: !718, line: 406, baseType: !316, size: 64, offset: 448)
!1104 = !DIDerivedType(tag: DW_TAG_member, name: "pgd", scope: !974, file: !718, line: 407, baseType: !1105, size: 64, offset: 512)
!1105 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1106, size: 64)
!1106 = !DIDerivedType(tag: DW_TAG_typedef, name: "pgd_t", file: !708, line: 286, baseType: !1107)
!1107 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !708, line: 286, size: 64, elements: !1108)
!1108 = !{!1109}
!1109 = !DIDerivedType(tag: DW_TAG_member, name: "pgd", scope: !1107, file: !708, line: 286, baseType: !1110, size: 64)
!1110 = !DIDerivedType(tag: DW_TAG_typedef, name: "pgdval_t", file: !993, line: 18, baseType: !316)
!1111 = !DIDerivedType(tag: DW_TAG_member, name: "membarrier_state", scope: !974, file: !718, line: 416, baseType: !743, size: 32, offset: 576)
!1112 = !DIDerivedType(tag: DW_TAG_member, name: "mm_users", scope: !974, file: !718, line: 428, baseType: !743, size: 32, offset: 608)
!1113 = !DIDerivedType(tag: DW_TAG_member, name: "mm_count", scope: !974, file: !718, line: 437, baseType: !743, size: 32, offset: 640)
!1114 = !DIDerivedType(tag: DW_TAG_member, name: "has_pinned", scope: !974, file: !718, line: 447, baseType: !743, size: 32, offset: 672)
!1115 = !DIDerivedType(tag: DW_TAG_member, name: "pgtables_bytes", scope: !974, file: !718, line: 450, baseType: !767, size: 64, offset: 704)
!1116 = !DIDerivedType(tag: DW_TAG_member, name: "map_count", scope: !974, file: !718, line: 452, baseType: !251, size: 32, offset: 768)
!1117 = !DIDerivedType(tag: DW_TAG_member, name: "page_table_lock", scope: !974, file: !718, line: 454, baseType: !225, offset: 800)
!1118 = !DIDerivedType(tag: DW_TAG_member, name: "mmap_lock", scope: !974, file: !718, line: 457, baseType: !763, size: 256, offset: 832)
!1119 = !DIDerivedType(tag: DW_TAG_member, name: "mmlist", scope: !974, file: !718, line: 459, baseType: !199, size: 128, offset: 1088)
!1120 = !DIDerivedType(tag: DW_TAG_member, name: "hiwater_rss", scope: !974, file: !718, line: 466, baseType: !316, size: 64, offset: 1216)
!1121 = !DIDerivedType(tag: DW_TAG_member, name: "hiwater_vm", scope: !974, file: !718, line: 467, baseType: !316, size: 64, offset: 1280)
!1122 = !DIDerivedType(tag: DW_TAG_member, name: "total_vm", scope: !974, file: !718, line: 469, baseType: !316, size: 64, offset: 1344)
!1123 = !DIDerivedType(tag: DW_TAG_member, name: "locked_vm", scope: !974, file: !718, line: 470, baseType: !316, size: 64, offset: 1408)
!1124 = !DIDerivedType(tag: DW_TAG_member, name: "pinned_vm", scope: !974, file: !718, line: 471, baseType: !769, size: 64, offset: 1472)
!1125 = !DIDerivedType(tag: DW_TAG_member, name: "data_vm", scope: !974, file: !718, line: 472, baseType: !316, size: 64, offset: 1536)
!1126 = !DIDerivedType(tag: DW_TAG_member, name: "exec_vm", scope: !974, file: !718, line: 473, baseType: !316, size: 64, offset: 1600)
!1127 = !DIDerivedType(tag: DW_TAG_member, name: "stack_vm", scope: !974, file: !718, line: 474, baseType: !316, size: 64, offset: 1664)
!1128 = !DIDerivedType(tag: DW_TAG_member, name: "def_flags", scope: !974, file: !718, line: 475, baseType: !316, size: 64, offset: 1728)
!1129 = !DIDerivedType(tag: DW_TAG_member, name: "arg_lock", scope: !974, file: !718, line: 477, baseType: !225, offset: 1792)
!1130 = !DIDerivedType(tag: DW_TAG_member, name: "start_code", scope: !974, file: !718, line: 478, baseType: !316, size: 64, offset: 1792)
!1131 = !DIDerivedType(tag: DW_TAG_member, name: "end_code", scope: !974, file: !718, line: 478, baseType: !316, size: 64, offset: 1856)
!1132 = !DIDerivedType(tag: DW_TAG_member, name: "start_data", scope: !974, file: !718, line: 478, baseType: !316, size: 64, offset: 1920)
!1133 = !DIDerivedType(tag: DW_TAG_member, name: "end_data", scope: !974, file: !718, line: 478, baseType: !316, size: 64, offset: 1984)
!1134 = !DIDerivedType(tag: DW_TAG_member, name: "start_brk", scope: !974, file: !718, line: 479, baseType: !316, size: 64, offset: 2048)
!1135 = !DIDerivedType(tag: DW_TAG_member, name: "brk", scope: !974, file: !718, line: 479, baseType: !316, size: 64, offset: 2112)
!1136 = !DIDerivedType(tag: DW_TAG_member, name: "start_stack", scope: !974, file: !718, line: 479, baseType: !316, size: 64, offset: 2176)
!1137 = !DIDerivedType(tag: DW_TAG_member, name: "arg_start", scope: !974, file: !718, line: 480, baseType: !316, size: 64, offset: 2240)
!1138 = !DIDerivedType(tag: DW_TAG_member, name: "arg_end", scope: !974, file: !718, line: 480, baseType: !316, size: 64, offset: 2304)
!1139 = !DIDerivedType(tag: DW_TAG_member, name: "env_start", scope: !974, file: !718, line: 480, baseType: !316, size: 64, offset: 2368)
!1140 = !DIDerivedType(tag: DW_TAG_member, name: "env_end", scope: !974, file: !718, line: 480, baseType: !316, size: 64, offset: 2432)
!1141 = !DIDerivedType(tag: DW_TAG_member, name: "saved_auxv", scope: !974, file: !718, line: 482, baseType: !1142, size: 2816, offset: 2496)
!1142 = !DICompositeType(tag: DW_TAG_array_type, baseType: !316, size: 2816, elements: !1143)
!1143 = !{!1144}
!1144 = !DISubrange(count: 44)
!1145 = !DIDerivedType(tag: DW_TAG_member, name: "rss_stat", scope: !974, file: !718, line: 488, baseType: !1146, size: 256, offset: 5312)
!1146 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mm_rss_stat", file: !1147, line: 60, size: 256, elements: !1148)
!1147 = !DIFile(filename: "./include/linux/mm_types_task.h", directory: "/home/lizy2001/genbc/linux")
!1148 = !{!1149}
!1149 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !1146, file: !1147, line: 61, baseType: !1150, size: 256)
!1150 = !DICompositeType(tag: DW_TAG_array_type, baseType: !767, size: 256, elements: !1151)
!1151 = !{!1152}
!1152 = !DISubrange(count: 4)
!1153 = !DIDerivedType(tag: DW_TAG_member, name: "binfmt", scope: !974, file: !718, line: 490, baseType: !1154, size: 64, offset: 5568)
!1154 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1155, size: 64)
!1155 = !DICompositeType(tag: DW_TAG_structure_type, name: "linux_binfmt", file: !718, line: 490, flags: DIFlagFwdDecl)
!1156 = !DIDerivedType(tag: DW_TAG_member, name: "context", scope: !974, file: !718, line: 493, baseType: !1157, size: 896, offset: 5632)
!1157 = !DIDerivedType(tag: DW_TAG_typedef, name: "mm_context_t", file: !1158, line: 53, baseType: !1159)
!1158 = !DIFile(filename: "./arch/x86/include/asm/mmu.h", directory: "/home/lizy2001/genbc/linux")
!1159 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1158, line: 13, size: 896, elements: !1160)
!1160 = !{!1161, !1162, !1163, !1164, !1167, !1168, !1175, !1176, !1196, !1197, !1198}
!1161 = !DIDerivedType(tag: DW_TAG_member, name: "ctx_id", scope: !1159, file: !1158, line: 18, baseType: !413, size: 64)
!1162 = !DIDerivedType(tag: DW_TAG_member, name: "tlb_gen", scope: !1159, file: !1158, line: 28, baseType: !769, size: 64, offset: 64)
!1163 = !DIDerivedType(tag: DW_TAG_member, name: "ldt_usr_sem", scope: !1159, file: !1158, line: 31, baseType: !763, size: 256, offset: 128)
!1164 = !DIDerivedType(tag: DW_TAG_member, name: "ldt", scope: !1159, file: !1158, line: 32, baseType: !1165, size: 64, offset: 384)
!1165 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1166, size: 64)
!1166 = !DICompositeType(tag: DW_TAG_structure_type, name: "ldt_struct", file: !1158, line: 32, flags: DIFlagFwdDecl)
!1167 = !DIDerivedType(tag: DW_TAG_member, name: "ia32_compat", scope: !1159, file: !1158, line: 37, baseType: !308, size: 16, offset: 448)
!1168 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1159, file: !1158, line: 40, baseType: !1169, size: 192, offset: 512)
!1169 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mutex", file: !1170, line: 53, size: 192, elements: !1171)
!1170 = !DIFile(filename: "./include/linux/mutex.h", directory: "/home/lizy2001/genbc/linux")
!1171 = !{!1172, !1173, !1174}
!1172 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !1169, file: !1170, line: 54, baseType: !767, size: 64)
!1173 = !DIDerivedType(tag: DW_TAG_member, name: "wait_lock", scope: !1169, file: !1170, line: 55, baseType: !225, offset: 64)
!1174 = !DIDerivedType(tag: DW_TAG_member, name: "wait_list", scope: !1169, file: !1170, line: 59, baseType: !199, size: 128, offset: 64)
!1175 = !DIDerivedType(tag: DW_TAG_member, name: "vdso", scope: !1159, file: !1158, line: 41, baseType: !193, size: 64, offset: 704)
!1176 = !DIDerivedType(tag: DW_TAG_member, name: "vdso_image", scope: !1159, file: !1158, line: 42, baseType: !1177, size: 64, offset: 768)
!1177 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1178, size: 64)
!1178 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1179)
!1179 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vdso_image", file: !1180, line: 13, size: 896, elements: !1181)
!1180 = !DIFile(filename: "./arch/x86/include/asm/vdso.h", directory: "/home/lizy2001/genbc/linux")
!1181 = !{!1182, !1183, !1184, !1185, !1186, !1187, !1188, !1189, !1190, !1191, !1192, !1193, !1194, !1195}
!1182 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1179, file: !1180, line: 14, baseType: !193, size: 64)
!1183 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1179, file: !1180, line: 15, baseType: !316, size: 64, offset: 64)
!1184 = !DIDerivedType(tag: DW_TAG_member, name: "alt", scope: !1179, file: !1180, line: 17, baseType: !316, size: 64, offset: 128)
!1185 = !DIDerivedType(tag: DW_TAG_member, name: "alt_len", scope: !1179, file: !1180, line: 17, baseType: !316, size: 64, offset: 192)
!1186 = !DIDerivedType(tag: DW_TAG_member, name: "sym_vvar_start", scope: !1179, file: !1180, line: 19, baseType: !138, size: 64, offset: 256)
!1187 = !DIDerivedType(tag: DW_TAG_member, name: "sym_vvar_page", scope: !1179, file: !1180, line: 21, baseType: !138, size: 64, offset: 320)
!1188 = !DIDerivedType(tag: DW_TAG_member, name: "sym_pvclock_page", scope: !1179, file: !1180, line: 22, baseType: !138, size: 64, offset: 384)
!1189 = !DIDerivedType(tag: DW_TAG_member, name: "sym_hvclock_page", scope: !1179, file: !1180, line: 23, baseType: !138, size: 64, offset: 448)
!1190 = !DIDerivedType(tag: DW_TAG_member, name: "sym_timens_page", scope: !1179, file: !1180, line: 24, baseType: !138, size: 64, offset: 512)
!1191 = !DIDerivedType(tag: DW_TAG_member, name: "sym_VDSO32_NOTE_MASK", scope: !1179, file: !1180, line: 25, baseType: !138, size: 64, offset: 576)
!1192 = !DIDerivedType(tag: DW_TAG_member, name: "sym___kernel_sigreturn", scope: !1179, file: !1180, line: 26, baseType: !138, size: 64, offset: 640)
!1193 = !DIDerivedType(tag: DW_TAG_member, name: "sym___kernel_rt_sigreturn", scope: !1179, file: !1180, line: 27, baseType: !138, size: 64, offset: 704)
!1194 = !DIDerivedType(tag: DW_TAG_member, name: "sym___kernel_vsyscall", scope: !1179, file: !1180, line: 28, baseType: !138, size: 64, offset: 768)
!1195 = !DIDerivedType(tag: DW_TAG_member, name: "sym_int80_landing_pad", scope: !1179, file: !1180, line: 29, baseType: !138, size: 64, offset: 832)
!1196 = !DIDerivedType(tag: DW_TAG_member, name: "perf_rdpmc_allowed", scope: !1159, file: !1158, line: 44, baseType: !743, size: 32, offset: 832)
!1197 = !DIDerivedType(tag: DW_TAG_member, name: "pkey_allocation_map", scope: !1159, file: !1158, line: 50, baseType: !855, size: 16, offset: 864)
!1198 = !DIDerivedType(tag: DW_TAG_member, name: "execute_only_pkey", scope: !1159, file: !1158, line: 51, baseType: !1199, size: 16, offset: 880)
!1199 = !DIDerivedType(tag: DW_TAG_typedef, name: "s16", file: !408, line: 18, baseType: !1200)
!1200 = !DIDerivedType(tag: DW_TAG_typedef, name: "__s16", file: !410, line: 23, baseType: !1201)
!1201 = !DIBasicType(name: "short", size: 16, encoding: DW_ATE_signed)
!1202 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !974, file: !718, line: 495, baseType: !316, size: 64, offset: 6528)
!1203 = !DIDerivedType(tag: DW_TAG_member, name: "core_state", scope: !974, file: !718, line: 497, baseType: !1204, size: 64, offset: 6592)
!1204 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1205, size: 64)
!1205 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "core_state", file: !718, line: 381, size: 384, elements: !1206)
!1206 = !{!1207, !1208, !2309}
!1207 = !DIDerivedType(tag: DW_TAG_member, name: "nr_threads", scope: !1205, file: !718, line: 382, baseType: !743, size: 32)
!1208 = !DIDerivedType(tag: DW_TAG_member, name: "dumper", scope: !1205, file: !718, line: 383, baseType: !1209, size: 128, offset: 64)
!1209 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "core_thread", file: !718, line: 376, size: 128, elements: !1210)
!1210 = !{!1211, !2307}
!1211 = !DIDerivedType(tag: DW_TAG_member, name: "task", scope: !1209, file: !718, line: 377, baseType: !1212, size: 64)
!1212 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1213, size: 64)
!1213 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "task_struct", file: !1214, line: 640, size: 48640, elements: !1215)
!1214 = !DIFile(filename: "./include/linux/sched.h", directory: "/home/lizy2001/genbc/linux")
!1215 = !{!1216, !1222, !1224, !1225, !1231, !1232, !1233, !1234, !1235, !1236, !1237, !1238, !1242, !1260, !1271, !1356, !1357, !1358, !1369, !1370, !1372, !1373, !1374, !1375, !1381, !1382, !1383, !1384, !1385, !1386, !1387, !1388, !1389, !1390, !1391, !1392, !1393, !1394, !1395, !1396, !1454, !1457, !1458, !1459, !1460, !1461, !1462, !1463, !1464, !1465, !1466, !1492, !1494, !1495, !1496, !1508, !1509, !1510, !1511, !1512, !1513, !1519, !1520, !1521, !1522, !1523, !1524, !1525, !1537, !1542, !1726, !1727, !1728, !1729, !1733, !1736, !1739, !1742, !1745, !1749, !1850, !1879, !1880, !1881, !1882, !1883, !1884, !1885, !1886, !1887, !1896, !1897, !1898, !1899, !1900, !1905, !1906, !1907, !1910, !1911, !1914, !1917, !1920, !1923, !1965, !1968, !1969, !2048, !2049, !2052, !2053, !2056, !2057, !2058, !2062, !2063, !2064, !2077, !2078, !2079, !2089, !2094, !2097, !2103, !2104, !2105, !2106, !2107, !2108, !2109, !2110, !2126, !2127, !2128, !2129, !2130, !2131, !2132, !2133, !2134}
!1216 = !DIDerivedType(tag: DW_TAG_member, name: "thread_info", scope: !1213, file: !1214, line: 646, baseType: !1217, size: 128)
!1217 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "thread_info", file: !1218, line: 56, size: 128, elements: !1219)
!1218 = !DIFile(filename: "./arch/x86/include/asm/thread_info.h", directory: "/home/lizy2001/genbc/linux")
!1219 = !{!1220, !1221}
!1220 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1217, file: !1218, line: 57, baseType: !316, size: 64)
!1221 = !DIDerivedType(tag: DW_TAG_member, name: "status", scope: !1217, file: !1218, line: 58, baseType: !407, size: 32, offset: 64)
!1222 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1213, file: !1214, line: 649, baseType: !1223, size: 64, offset: 128)
!1223 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !138)
!1224 = !DIDerivedType(tag: DW_TAG_member, name: "stack", scope: !1213, file: !1214, line: 657, baseType: !193, size: 64, offset: 192)
!1225 = !DIDerivedType(tag: DW_TAG_member, name: "usage", scope: !1213, file: !1214, line: 658, baseType: !1226, size: 32, offset: 256)
!1226 = !DIDerivedType(tag: DW_TAG_typedef, name: "refcount_t", file: !1227, line: 113, baseType: !1228)
!1227 = !DIFile(filename: "./include/linux/refcount.h", directory: "/home/lizy2001/genbc/linux")
!1228 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "refcount_struct", file: !1227, line: 111, size: 32, elements: !1229)
!1229 = !{!1230}
!1230 = !DIDerivedType(tag: DW_TAG_member, name: "refs", scope: !1228, file: !1227, line: 112, baseType: !743, size: 32)
!1231 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1213, file: !1214, line: 660, baseType: !7, size: 32, offset: 288)
!1232 = !DIDerivedType(tag: DW_TAG_member, name: "ptrace", scope: !1213, file: !1214, line: 661, baseType: !7, size: 32, offset: 320)
!1233 = !DIDerivedType(tag: DW_TAG_member, name: "on_rq", scope: !1213, file: !1214, line: 684, baseType: !251, size: 32, offset: 352)
!1234 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !1213, file: !1214, line: 686, baseType: !251, size: 32, offset: 384)
!1235 = !DIDerivedType(tag: DW_TAG_member, name: "static_prio", scope: !1213, file: !1214, line: 687, baseType: !251, size: 32, offset: 416)
!1236 = !DIDerivedType(tag: DW_TAG_member, name: "normal_prio", scope: !1213, file: !1214, line: 688, baseType: !251, size: 32, offset: 448)
!1237 = !DIDerivedType(tag: DW_TAG_member, name: "rt_priority", scope: !1213, file: !1214, line: 689, baseType: !7, size: 32, offset: 480)
!1238 = !DIDerivedType(tag: DW_TAG_member, name: "sched_class", scope: !1213, file: !1214, line: 691, baseType: !1239, size: 64, offset: 512)
!1239 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1240, size: 64)
!1240 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1241)
!1241 = !DICompositeType(tag: DW_TAG_structure_type, name: "sched_class", file: !1214, line: 691, flags: DIFlagFwdDecl)
!1242 = !DIDerivedType(tag: DW_TAG_member, name: "se", scope: !1213, file: !1214, line: 692, baseType: !1243, size: 832, offset: 576)
!1243 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sched_entity", file: !1214, line: 451, size: 832, elements: !1244)
!1244 = !{!1245, !1250, !1251, !1252, !1253, !1254, !1255, !1256, !1257, !1258}
!1245 = !DIDerivedType(tag: DW_TAG_member, name: "load", scope: !1243, file: !1214, line: 453, baseType: !1246, size: 128)
!1246 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "load_weight", file: !1214, line: 325, size: 128, elements: !1247)
!1247 = !{!1248, !1249}
!1248 = !DIDerivedType(tag: DW_TAG_member, name: "weight", scope: !1246, file: !1214, line: 326, baseType: !316, size: 64)
!1249 = !DIDerivedType(tag: DW_TAG_member, name: "inv_weight", scope: !1246, file: !1214, line: 327, baseType: !407, size: 32, offset: 64)
!1250 = !DIDerivedType(tag: DW_TAG_member, name: "run_node", scope: !1243, file: !1214, line: 454, baseType: !756, size: 192, align: 64, offset: 128)
!1251 = !DIDerivedType(tag: DW_TAG_member, name: "group_node", scope: !1243, file: !1214, line: 455, baseType: !199, size: 128, offset: 320)
!1252 = !DIDerivedType(tag: DW_TAG_member, name: "on_rq", scope: !1243, file: !1214, line: 456, baseType: !7, size: 32, offset: 448)
!1253 = !DIDerivedType(tag: DW_TAG_member, name: "exec_start", scope: !1243, file: !1214, line: 458, baseType: !413, size: 64, offset: 512)
!1254 = !DIDerivedType(tag: DW_TAG_member, name: "sum_exec_runtime", scope: !1243, file: !1214, line: 459, baseType: !413, size: 64, offset: 576)
!1255 = !DIDerivedType(tag: DW_TAG_member, name: "vruntime", scope: !1243, file: !1214, line: 460, baseType: !413, size: 64, offset: 640)
!1256 = !DIDerivedType(tag: DW_TAG_member, name: "prev_sum_exec_runtime", scope: !1243, file: !1214, line: 461, baseType: !413, size: 64, offset: 704)
!1257 = !DIDerivedType(tag: DW_TAG_member, name: "nr_migrations", scope: !1243, file: !1214, line: 463, baseType: !413, size: 64, offset: 768)
!1258 = !DIDerivedType(tag: DW_TAG_member, name: "statistics", scope: !1243, file: !1214, line: 465, baseType: !1259, offset: 832)
!1259 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sched_statistics", file: !1214, line: 415, elements: !239)
!1260 = !DIDerivedType(tag: DW_TAG_member, name: "rt", scope: !1213, file: !1214, line: 693, baseType: !1261, size: 384, offset: 1408)
!1261 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sched_rt_entity", file: !1214, line: 489, size: 384, elements: !1262)
!1262 = !{!1263, !1264, !1265, !1266, !1267, !1268, !1269}
!1263 = !DIDerivedType(tag: DW_TAG_member, name: "run_list", scope: !1261, file: !1214, line: 490, baseType: !199, size: 128)
!1264 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !1261, file: !1214, line: 491, baseType: !316, size: 64, offset: 128)
!1265 = !DIDerivedType(tag: DW_TAG_member, name: "watchdog_stamp", scope: !1261, file: !1214, line: 492, baseType: !316, size: 64, offset: 192)
!1266 = !DIDerivedType(tag: DW_TAG_member, name: "time_slice", scope: !1261, file: !1214, line: 493, baseType: !7, size: 32, offset: 256)
!1267 = !DIDerivedType(tag: DW_TAG_member, name: "on_rq", scope: !1261, file: !1214, line: 494, baseType: !308, size: 16, offset: 288)
!1268 = !DIDerivedType(tag: DW_TAG_member, name: "on_list", scope: !1261, file: !1214, line: 495, baseType: !308, size: 16, offset: 304)
!1269 = !DIDerivedType(tag: DW_TAG_member, name: "back", scope: !1261, file: !1214, line: 497, baseType: !1270, size: 64, offset: 320)
!1270 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1261, size: 64)
!1271 = !DIDerivedType(tag: DW_TAG_member, name: "dl", scope: !1213, file: !1214, line: 697, baseType: !1272, size: 1792, offset: 1792)
!1272 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sched_dl_entity", file: !1214, line: 507, size: 1792, elements: !1273)
!1273 = !{!1274, !1275, !1276, !1277, !1278, !1279, !1280, !1281, !1282, !1283, !1284, !1285, !1286, !1287, !1353, !1354}
!1274 = !DIDerivedType(tag: DW_TAG_member, name: "rb_node", scope: !1272, file: !1214, line: 508, baseType: !756, size: 192, align: 64)
!1275 = !DIDerivedType(tag: DW_TAG_member, name: "dl_runtime", scope: !1272, file: !1214, line: 515, baseType: !413, size: 64, offset: 192)
!1276 = !DIDerivedType(tag: DW_TAG_member, name: "dl_deadline", scope: !1272, file: !1214, line: 516, baseType: !413, size: 64, offset: 256)
!1277 = !DIDerivedType(tag: DW_TAG_member, name: "dl_period", scope: !1272, file: !1214, line: 517, baseType: !413, size: 64, offset: 320)
!1278 = !DIDerivedType(tag: DW_TAG_member, name: "dl_bw", scope: !1272, file: !1214, line: 518, baseType: !413, size: 64, offset: 384)
!1279 = !DIDerivedType(tag: DW_TAG_member, name: "dl_density", scope: !1272, file: !1214, line: 519, baseType: !413, size: 64, offset: 448)
!1280 = !DIDerivedType(tag: DW_TAG_member, name: "runtime", scope: !1272, file: !1214, line: 526, baseType: !773, size: 64, offset: 512)
!1281 = !DIDerivedType(tag: DW_TAG_member, name: "deadline", scope: !1272, file: !1214, line: 527, baseType: !413, size: 64, offset: 576)
!1282 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1272, file: !1214, line: 528, baseType: !7, size: 32, offset: 640)
!1283 = !DIDerivedType(tag: DW_TAG_member, name: "dl_throttled", scope: !1272, file: !1214, line: 554, baseType: !7, size: 1, offset: 672, flags: DIFlagBitField, extraData: i64 672)
!1284 = !DIDerivedType(tag: DW_TAG_member, name: "dl_yielded", scope: !1272, file: !1214, line: 555, baseType: !7, size: 1, offset: 673, flags: DIFlagBitField, extraData: i64 672)
!1285 = !DIDerivedType(tag: DW_TAG_member, name: "dl_non_contending", scope: !1272, file: !1214, line: 556, baseType: !7, size: 1, offset: 674, flags: DIFlagBitField, extraData: i64 672)
!1286 = !DIDerivedType(tag: DW_TAG_member, name: "dl_overrun", scope: !1272, file: !1214, line: 557, baseType: !7, size: 1, offset: 675, flags: DIFlagBitField, extraData: i64 672)
!1287 = !DIDerivedType(tag: DW_TAG_member, name: "dl_timer", scope: !1272, file: !1214, line: 563, baseType: !1288, size: 512, offset: 704)
!1288 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hrtimer", file: !20, line: 118, size: 512, elements: !1289)
!1289 = !{!1290, !1298, !1299, !1304, !1347, !1350, !1351, !1352}
!1290 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !1288, file: !20, line: 119, baseType: !1291, size: 256)
!1291 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timerqueue_node", file: !1292, line: 9, size: 256, elements: !1293)
!1292 = !DIFile(filename: "./include/linux/timerqueue.h", directory: "/home/lizy2001/genbc/linux")
!1293 = !{!1294, !1295}
!1294 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !1291, file: !1292, line: 10, baseType: !756, size: 192, align: 64)
!1295 = !DIDerivedType(tag: DW_TAG_member, name: "expires", scope: !1291, file: !1292, line: 11, baseType: !1296, size: 64, offset: 192)
!1296 = !DIDerivedType(tag: DW_TAG_typedef, name: "ktime_t", file: !1297, line: 29, baseType: !773)
!1297 = !DIFile(filename: "./include/linux/ktime.h", directory: "/home/lizy2001/genbc/linux")
!1298 = !DIDerivedType(tag: DW_TAG_member, name: "_softexpires", scope: !1288, file: !20, line: 120, baseType: !1296, size: 64, offset: 256)
!1299 = !DIDerivedType(tag: DW_TAG_member, name: "function", scope: !1288, file: !20, line: 121, baseType: !1300, size: 64, offset: 320)
!1300 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1301, size: 64)
!1301 = !DISubroutineType(types: !1302)
!1302 = !{!19, !1303}
!1303 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1288, size: 64)
!1304 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1288, file: !20, line: 122, baseType: !1305, size: 64, offset: 384)
!1305 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1306, size: 64)
!1306 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hrtimer_clock_base", file: !20, line: 159, size: 512, align: 512, elements: !1307)
!1307 = !{!1308, !1328, !1329, !1332, !1337, !1338, !1342, !1346}
!1308 = !DIDerivedType(tag: DW_TAG_member, name: "cpu_base", scope: !1306, file: !20, line: 160, baseType: !1309, size: 64)
!1309 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1310, size: 64)
!1310 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hrtimer_cpu_base", file: !20, line: 214, size: 4608, align: 512, elements: !1311)
!1311 = !{!1312, !1313, !1314, !1315, !1316, !1317, !1318, !1319, !1320, !1321, !1322, !1323, !1324}
!1312 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1310, file: !20, line: 215, baseType: !776)
!1313 = !DIDerivedType(tag: DW_TAG_member, name: "cpu", scope: !1310, file: !20, line: 216, baseType: !7, size: 32)
!1314 = !DIDerivedType(tag: DW_TAG_member, name: "active_bases", scope: !1310, file: !20, line: 217, baseType: !7, size: 32, offset: 32)
!1315 = !DIDerivedType(tag: DW_TAG_member, name: "clock_was_set_seq", scope: !1310, file: !20, line: 218, baseType: !7, size: 32, offset: 64)
!1316 = !DIDerivedType(tag: DW_TAG_member, name: "hres_active", scope: !1310, file: !20, line: 219, baseType: !7, size: 1, offset: 96, flags: DIFlagBitField, extraData: i64 96)
!1317 = !DIDerivedType(tag: DW_TAG_member, name: "in_hrtirq", scope: !1310, file: !20, line: 220, baseType: !7, size: 1, offset: 97, flags: DIFlagBitField, extraData: i64 96)
!1318 = !DIDerivedType(tag: DW_TAG_member, name: "hang_detected", scope: !1310, file: !20, line: 221, baseType: !7, size: 1, offset: 98, flags: DIFlagBitField, extraData: i64 96)
!1319 = !DIDerivedType(tag: DW_TAG_member, name: "softirq_activated", scope: !1310, file: !20, line: 222, baseType: !7, size: 1, offset: 99, flags: DIFlagBitField, extraData: i64 96)
!1320 = !DIDerivedType(tag: DW_TAG_member, name: "expires_next", scope: !1310, file: !20, line: 233, baseType: !1296, size: 64, offset: 128)
!1321 = !DIDerivedType(tag: DW_TAG_member, name: "next_timer", scope: !1310, file: !20, line: 234, baseType: !1303, size: 64, offset: 192)
!1322 = !DIDerivedType(tag: DW_TAG_member, name: "softirq_expires_next", scope: !1310, file: !20, line: 235, baseType: !1296, size: 64, offset: 256)
!1323 = !DIDerivedType(tag: DW_TAG_member, name: "softirq_next_timer", scope: !1310, file: !20, line: 236, baseType: !1303, size: 64, offset: 320)
!1324 = !DIDerivedType(tag: DW_TAG_member, name: "clock_base", scope: !1310, file: !20, line: 237, baseType: !1325, size: 4096, offset: 512)
!1325 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1306, size: 4096, elements: !1326)
!1326 = !{!1327}
!1327 = !DISubrange(count: 8)
!1328 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !1306, file: !20, line: 161, baseType: !7, size: 32, offset: 64)
!1329 = !DIDerivedType(tag: DW_TAG_member, name: "clockid", scope: !1306, file: !20, line: 162, baseType: !1330, size: 32, offset: 96)
!1330 = !DIDerivedType(tag: DW_TAG_typedef, name: "clockid_t", file: !200, line: 27, baseType: !1331)
!1331 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_clockid_t", file: !300, line: 96, baseType: !251)
!1332 = !DIDerivedType(tag: DW_TAG_member, name: "seq", scope: !1306, file: !20, line: 163, baseType: !1333, size: 32, offset: 128)
!1333 = !DIDerivedType(tag: DW_TAG_typedef, name: "seqcount_raw_spinlock_t", file: !380, line: 276, baseType: !1334)
!1334 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seqcount_raw_spinlock", file: !380, line: 276, size: 32, elements: !1335)
!1335 = !{!1336}
!1336 = !DIDerivedType(tag: DW_TAG_member, name: "seqcount", scope: !1334, file: !380, line: 276, baseType: !384, size: 32)
!1337 = !DIDerivedType(tag: DW_TAG_member, name: "running", scope: !1306, file: !20, line: 164, baseType: !1303, size: 64, offset: 192)
!1338 = !DIDerivedType(tag: DW_TAG_member, name: "active", scope: !1306, file: !20, line: 165, baseType: !1339, size: 128, offset: 256)
!1339 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timerqueue_head", file: !1292, line: 14, size: 128, elements: !1340)
!1340 = !{!1341}
!1341 = !DIDerivedType(tag: DW_TAG_member, name: "rb_root", scope: !1339, file: !1292, line: 15, baseType: !748, size: 128)
!1342 = !DIDerivedType(tag: DW_TAG_member, name: "get_time", scope: !1306, file: !20, line: 166, baseType: !1343, size: 64, offset: 384)
!1343 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1344, size: 64)
!1344 = !DISubroutineType(types: !1345)
!1345 = !{!1296}
!1346 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1306, file: !20, line: 167, baseType: !1296, size: 64, offset: 448)
!1347 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1288, file: !20, line: 123, baseType: !1348, size: 8, offset: 448)
!1348 = !DIDerivedType(tag: DW_TAG_typedef, name: "u8", file: !408, line: 17, baseType: !1349)
!1349 = !DIDerivedType(tag: DW_TAG_typedef, name: "__u8", file: !410, line: 21, baseType: !419)
!1350 = !DIDerivedType(tag: DW_TAG_member, name: "is_rel", scope: !1288, file: !20, line: 124, baseType: !1348, size: 8, offset: 456)
!1351 = !DIDerivedType(tag: DW_TAG_member, name: "is_soft", scope: !1288, file: !20, line: 125, baseType: !1348, size: 8, offset: 464)
!1352 = !DIDerivedType(tag: DW_TAG_member, name: "is_hard", scope: !1288, file: !20, line: 126, baseType: !1348, size: 8, offset: 472)
!1353 = !DIDerivedType(tag: DW_TAG_member, name: "inactive_timer", scope: !1272, file: !1214, line: 572, baseType: !1288, size: 512, offset: 1216)
!1354 = !DIDerivedType(tag: DW_TAG_member, name: "pi_se", scope: !1272, file: !1214, line: 580, baseType: !1355, size: 64, offset: 1728)
!1355 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1272, size: 64)
!1356 = !DIDerivedType(tag: DW_TAG_member, name: "policy", scope: !1213, file: !1214, line: 721, baseType: !7, size: 32, offset: 3584)
!1357 = !DIDerivedType(tag: DW_TAG_member, name: "nr_cpus_allowed", scope: !1213, file: !1214, line: 722, baseType: !251, size: 32, offset: 3616)
!1358 = !DIDerivedType(tag: DW_TAG_member, name: "cpus_ptr", scope: !1213, file: !1214, line: 723, baseType: !1359, size: 64, offset: 3648)
!1359 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1360, size: 64)
!1360 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1361)
!1361 = !DIDerivedType(tag: DW_TAG_typedef, name: "cpumask_t", file: !1362, line: 17, baseType: !1363)
!1362 = !DIFile(filename: "./include/linux/cpumask.h", directory: "/home/lizy2001/genbc/linux")
!1363 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cpumask", file: !1362, line: 17, size: 64, elements: !1364)
!1364 = !{!1365}
!1365 = !DIDerivedType(tag: DW_TAG_member, name: "bits", scope: !1363, file: !1362, line: 17, baseType: !1366, size: 64)
!1366 = !DICompositeType(tag: DW_TAG_array_type, baseType: !316, size: 64, elements: !1367)
!1367 = !{!1368}
!1368 = !DISubrange(count: 1)
!1369 = !DIDerivedType(tag: DW_TAG_member, name: "cpus_mask", scope: !1213, file: !1214, line: 724, baseType: !1361, size: 64, offset: 3712)
!1370 = !DIDerivedType(tag: DW_TAG_member, name: "sched_info", scope: !1213, file: !1214, line: 749, baseType: !1371, offset: 3776)
!1371 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sched_info", file: !1214, line: 290, elements: !239)
!1372 = !DIDerivedType(tag: DW_TAG_member, name: "tasks", scope: !1213, file: !1214, line: 751, baseType: !199, size: 128, offset: 3776)
!1373 = !DIDerivedType(tag: DW_TAG_member, name: "mm", scope: !1213, file: !1214, line: 757, baseType: !970, size: 64, offset: 3904)
!1374 = !DIDerivedType(tag: DW_TAG_member, name: "active_mm", scope: !1213, file: !1214, line: 758, baseType: !970, size: 64, offset: 3968)
!1375 = !DIDerivedType(tag: DW_TAG_member, name: "vmacache", scope: !1213, file: !1214, line: 761, baseType: !1376, size: 320, offset: 4032)
!1376 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vmacache", file: !1147, line: 34, size: 320, elements: !1377)
!1377 = !{!1378, !1379}
!1378 = !DIDerivedType(tag: DW_TAG_member, name: "seqnum", scope: !1376, file: !1147, line: 35, baseType: !413, size: 64)
!1379 = !DIDerivedType(tag: DW_TAG_member, name: "vmas", scope: !1376, file: !1147, line: 36, baseType: !1380, size: 256, offset: 64)
!1380 = !DICompositeType(tag: DW_TAG_array_type, baseType: !977, size: 256, elements: !1151)
!1381 = !DIDerivedType(tag: DW_TAG_member, name: "exit_state", scope: !1213, file: !1214, line: 766, baseType: !251, size: 32, offset: 4352)
!1382 = !DIDerivedType(tag: DW_TAG_member, name: "exit_code", scope: !1213, file: !1214, line: 767, baseType: !251, size: 32, offset: 4384)
!1383 = !DIDerivedType(tag: DW_TAG_member, name: "exit_signal", scope: !1213, file: !1214, line: 768, baseType: !251, size: 32, offset: 4416)
!1384 = !DIDerivedType(tag: DW_TAG_member, name: "pdeath_signal", scope: !1213, file: !1214, line: 770, baseType: !251, size: 32, offset: 4448)
!1385 = !DIDerivedType(tag: DW_TAG_member, name: "jobctl", scope: !1213, file: !1214, line: 772, baseType: !316, size: 64, offset: 4480)
!1386 = !DIDerivedType(tag: DW_TAG_member, name: "personality", scope: !1213, file: !1214, line: 775, baseType: !7, size: 32, offset: 4544)
!1387 = !DIDerivedType(tag: DW_TAG_member, name: "sched_reset_on_fork", scope: !1213, file: !1214, line: 778, baseType: !7, size: 1, offset: 4576, flags: DIFlagBitField, extraData: i64 4576)
!1388 = !DIDerivedType(tag: DW_TAG_member, name: "sched_contributes_to_load", scope: !1213, file: !1214, line: 779, baseType: !7, size: 1, offset: 4577, flags: DIFlagBitField, extraData: i64 4576)
!1389 = !DIDerivedType(tag: DW_TAG_member, name: "sched_migrated", scope: !1213, file: !1214, line: 780, baseType: !7, size: 1, offset: 4578, flags: DIFlagBitField, extraData: i64 4576)
!1390 = !DIDerivedType(tag: DW_TAG_member, name: "sched_remote_wakeup", scope: !1213, file: !1214, line: 803, baseType: !7, size: 1, offset: 4608, flags: DIFlagBitField, extraData: i64 4608)
!1391 = !DIDerivedType(tag: DW_TAG_member, name: "in_execve", scope: !1213, file: !1214, line: 806, baseType: !7, size: 1, offset: 4609, flags: DIFlagBitField, extraData: i64 4608)
!1392 = !DIDerivedType(tag: DW_TAG_member, name: "in_iowait", scope: !1213, file: !1214, line: 807, baseType: !7, size: 1, offset: 4610, flags: DIFlagBitField, extraData: i64 4608)
!1393 = !DIDerivedType(tag: DW_TAG_member, name: "restore_sigmask", scope: !1213, file: !1214, line: 809, baseType: !7, size: 1, offset: 4611, flags: DIFlagBitField, extraData: i64 4608)
!1394 = !DIDerivedType(tag: DW_TAG_member, name: "brk_randomized", scope: !1213, file: !1214, line: 815, baseType: !7, size: 1, offset: 4612, flags: DIFlagBitField, extraData: i64 4608)
!1395 = !DIDerivedType(tag: DW_TAG_member, name: "atomic_flags", scope: !1213, file: !1214, line: 831, baseType: !316, size: 64, offset: 4672)
!1396 = !DIDerivedType(tag: DW_TAG_member, name: "restart_block", scope: !1213, file: !1214, line: 833, baseType: !1397, size: 384, offset: 4736)
!1397 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "restart_block", file: !25, line: 25, size: 384, elements: !1398)
!1398 = !{!1399, !1404}
!1399 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !1397, file: !25, line: 26, baseType: !1400, size: 64)
!1400 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1401, size: 64)
!1401 = !DISubroutineType(types: !1402)
!1402 = !{!138, !1403}
!1403 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1397, size: 64)
!1404 = !DIDerivedType(tag: DW_TAG_member, scope: !1397, file: !25, line: 27, baseType: !1405, size: 320, offset: 64)
!1405 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1397, file: !25, line: 27, size: 320, elements: !1406)
!1406 = !{!1407, !1417, !1444}
!1407 = !DIDerivedType(tag: DW_TAG_member, name: "futex", scope: !1405, file: !25, line: 36, baseType: !1408, size: 320)
!1408 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1405, file: !25, line: 29, size: 320, elements: !1409)
!1409 = !{!1410, !1412, !1413, !1414, !1415, !1416}
!1410 = !DIDerivedType(tag: DW_TAG_member, name: "uaddr", scope: !1408, file: !25, line: 30, baseType: !1411, size: 64)
!1411 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !407, size: 64)
!1412 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !1408, file: !25, line: 31, baseType: !407, size: 32, offset: 64)
!1413 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1408, file: !25, line: 32, baseType: !407, size: 32, offset: 96)
!1414 = !DIDerivedType(tag: DW_TAG_member, name: "bitset", scope: !1408, file: !25, line: 33, baseType: !407, size: 32, offset: 128)
!1415 = !DIDerivedType(tag: DW_TAG_member, name: "time", scope: !1408, file: !25, line: 34, baseType: !413, size: 64, offset: 192)
!1416 = !DIDerivedType(tag: DW_TAG_member, name: "uaddr2", scope: !1408, file: !25, line: 35, baseType: !1411, size: 64, offset: 256)
!1417 = !DIDerivedType(tag: DW_TAG_member, name: "nanosleep", scope: !1405, file: !25, line: 46, baseType: !1418, size: 192)
!1418 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1405, file: !25, line: 38, size: 192, elements: !1419)
!1419 = !{!1420, !1421, !1422, !1443}
!1420 = !DIDerivedType(tag: DW_TAG_member, name: "clockid", scope: !1418, file: !25, line: 39, baseType: !1330, size: 32)
!1421 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1418, file: !25, line: 40, baseType: !24, size: 32, offset: 32)
!1422 = !DIDerivedType(tag: DW_TAG_member, scope: !1418, file: !25, line: 41, baseType: !1423, size: 64, offset: 64)
!1423 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1418, file: !25, line: 41, size: 64, elements: !1424)
!1424 = !{!1425, !1433}
!1425 = !DIDerivedType(tag: DW_TAG_member, name: "rmtp", scope: !1423, file: !25, line: 42, baseType: !1426, size: 64)
!1426 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1427, size: 64)
!1427 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__kernel_timespec", file: !1428, line: 7, size: 128, elements: !1429)
!1428 = !DIFile(filename: "./include/uapi/linux/time_types.h", directory: "/home/lizy2001/genbc/linux")
!1429 = !{!1430, !1432}
!1430 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !1427, file: !1428, line: 8, baseType: !1431, size: 64)
!1431 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_time64_t", file: !300, line: 93, baseType: !525)
!1432 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !1427, file: !1428, line: 9, baseType: !525, size: 64, offset: 64)
!1433 = !DIDerivedType(tag: DW_TAG_member, name: "compat_rmtp", scope: !1423, file: !25, line: 43, baseType: !1434, size: 64)
!1434 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1435, size: 64)
!1435 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "old_timespec32", file: !1436, line: 7, size: 64, elements: !1437)
!1436 = !DIFile(filename: "./include/vdso/time32.h", directory: "/home/lizy2001/genbc/linux")
!1437 = !{!1438, !1442}
!1438 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !1435, file: !1436, line: 8, baseType: !1439, size: 32)
!1439 = !DIDerivedType(tag: DW_TAG_typedef, name: "old_time32_t", file: !1436, line: 5, baseType: !1440)
!1440 = !DIDerivedType(tag: DW_TAG_typedef, name: "s32", file: !408, line: 20, baseType: !1441)
!1441 = !DIDerivedType(tag: DW_TAG_typedef, name: "__s32", file: !410, line: 26, baseType: !251)
!1442 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !1435, file: !1436, line: 9, baseType: !1440, size: 32, offset: 32)
!1443 = !DIDerivedType(tag: DW_TAG_member, name: "expires", scope: !1418, file: !25, line: 45, baseType: !413, size: 64, offset: 128)
!1444 = !DIDerivedType(tag: DW_TAG_member, name: "poll", scope: !1405, file: !25, line: 54, baseType: !1445, size: 256)
!1445 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1405, file: !25, line: 48, size: 256, elements: !1446)
!1446 = !{!1447, !1450, !1451, !1452, !1453}
!1447 = !DIDerivedType(tag: DW_TAG_member, name: "ufds", scope: !1445, file: !25, line: 49, baseType: !1448, size: 64)
!1448 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1449, size: 64)
!1449 = !DICompositeType(tag: DW_TAG_structure_type, name: "pollfd", file: !25, line: 14, flags: DIFlagFwdDecl)
!1450 = !DIDerivedType(tag: DW_TAG_member, name: "nfds", scope: !1445, file: !25, line: 50, baseType: !251, size: 32, offset: 64)
!1451 = !DIDerivedType(tag: DW_TAG_member, name: "has_timeout", scope: !1445, file: !25, line: 51, baseType: !251, size: 32, offset: 96)
!1452 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !1445, file: !25, line: 52, baseType: !316, size: 64, offset: 128)
!1453 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !1445, file: !25, line: 53, baseType: !316, size: 64, offset: 192)
!1454 = !DIDerivedType(tag: DW_TAG_member, name: "pid", scope: !1213, file: !1214, line: 835, baseType: !1455, size: 32, offset: 5120)
!1455 = !DIDerivedType(tag: DW_TAG_typedef, name: "pid_t", file: !200, line: 22, baseType: !1456)
!1456 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_pid_t", file: !300, line: 28, baseType: !251)
!1457 = !DIDerivedType(tag: DW_TAG_member, name: "tgid", scope: !1213, file: !1214, line: 836, baseType: !1455, size: 32, offset: 5152)
!1458 = !DIDerivedType(tag: DW_TAG_member, name: "stack_canary", scope: !1213, file: !1214, line: 840, baseType: !316, size: 64, offset: 5184)
!1459 = !DIDerivedType(tag: DW_TAG_member, name: "real_parent", scope: !1213, file: !1214, line: 849, baseType: !1212, size: 64, offset: 5248)
!1460 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !1213, file: !1214, line: 852, baseType: !1212, size: 64, offset: 5312)
!1461 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !1213, file: !1214, line: 857, baseType: !199, size: 128, offset: 5376)
!1462 = !DIDerivedType(tag: DW_TAG_member, name: "sibling", scope: !1213, file: !1214, line: 858, baseType: !199, size: 128, offset: 5504)
!1463 = !DIDerivedType(tag: DW_TAG_member, name: "group_leader", scope: !1213, file: !1214, line: 859, baseType: !1212, size: 64, offset: 5632)
!1464 = !DIDerivedType(tag: DW_TAG_member, name: "ptraced", scope: !1213, file: !1214, line: 867, baseType: !199, size: 128, offset: 5696)
!1465 = !DIDerivedType(tag: DW_TAG_member, name: "ptrace_entry", scope: !1213, file: !1214, line: 868, baseType: !199, size: 128, offset: 5824)
!1466 = !DIDerivedType(tag: DW_TAG_member, name: "thread_pid", scope: !1213, file: !1214, line: 871, baseType: !1467, size: 64, offset: 5952)
!1467 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1468, size: 64)
!1468 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pid", file: !53, line: 59, size: 768, elements: !1469)
!1469 = !{!1470, !1471, !1472, !1473, !1475, !1476, !1483, !1484}
!1470 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !1468, file: !53, line: 61, baseType: !1226, size: 32)
!1471 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !1468, file: !53, line: 62, baseType: !7, size: 32, offset: 32)
!1472 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1468, file: !53, line: 63, baseType: !225, offset: 64)
!1473 = !DIDerivedType(tag: DW_TAG_member, name: "tasks", scope: !1468, file: !53, line: 65, baseType: !1474, size: 256, offset: 64)
!1474 = !DICompositeType(tag: DW_TAG_array_type, baseType: !630, size: 256, elements: !1151)
!1475 = !DIDerivedType(tag: DW_TAG_member, name: "inodes", scope: !1468, file: !53, line: 66, baseType: !630, size: 64, offset: 320)
!1476 = !DIDerivedType(tag: DW_TAG_member, name: "wait_pidfd", scope: !1468, file: !53, line: 68, baseType: !1477, size: 128, offset: 384)
!1477 = !DIDerivedType(tag: DW_TAG_typedef, name: "wait_queue_head_t", file: !1478, line: 40, baseType: !1479)
!1478 = !DIFile(filename: "./include/linux/wait.h", directory: "/home/lizy2001/genbc/linux")
!1479 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wait_queue_head", file: !1478, line: 36, size: 128, elements: !1480)
!1480 = !{!1481, !1482}
!1481 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1479, file: !1478, line: 37, baseType: !225)
!1482 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !1479, file: !1478, line: 38, baseType: !199, size: 128)
!1483 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !1468, file: !53, line: 69, baseType: !357, size: 128, align: 64, offset: 512)
!1484 = !DIDerivedType(tag: DW_TAG_member, name: "numbers", scope: !1468, file: !53, line: 70, baseType: !1485, size: 128, offset: 640)
!1485 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1486, size: 128, elements: !1367)
!1486 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "upid", file: !53, line: 54, size: 128, elements: !1487)
!1487 = !{!1488, !1489}
!1488 = !DIDerivedType(tag: DW_TAG_member, name: "nr", scope: !1486, file: !53, line: 55, baseType: !251, size: 32)
!1489 = !DIDerivedType(tag: DW_TAG_member, name: "ns", scope: !1486, file: !53, line: 56, baseType: !1490, size: 64, offset: 64)
!1490 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1491, size: 64)
!1491 = !DICompositeType(tag: DW_TAG_structure_type, name: "pid_namespace", file: !53, line: 56, flags: DIFlagFwdDecl)
!1492 = !DIDerivedType(tag: DW_TAG_member, name: "pid_links", scope: !1213, file: !1214, line: 872, baseType: !1493, size: 512, offset: 6016)
!1493 = !DICompositeType(tag: DW_TAG_array_type, baseType: !634, size: 512, elements: !1151)
!1494 = !DIDerivedType(tag: DW_TAG_member, name: "thread_group", scope: !1213, file: !1214, line: 873, baseType: !199, size: 128, offset: 6528)
!1495 = !DIDerivedType(tag: DW_TAG_member, name: "thread_node", scope: !1213, file: !1214, line: 874, baseType: !199, size: 128, offset: 6656)
!1496 = !DIDerivedType(tag: DW_TAG_member, name: "vfork_done", scope: !1213, file: !1214, line: 876, baseType: !1497, size: 64, offset: 6784)
!1497 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1498, size: 64)
!1498 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "completion", file: !1499, line: 26, size: 192, elements: !1500)
!1499 = !DIFile(filename: "./include/linux/completion.h", directory: "/home/lizy2001/genbc/linux")
!1500 = !{!1501, !1502}
!1501 = !DIDerivedType(tag: DW_TAG_member, name: "done", scope: !1498, file: !1499, line: 27, baseType: !7, size: 32)
!1502 = !DIDerivedType(tag: DW_TAG_member, name: "wait", scope: !1498, file: !1499, line: 28, baseType: !1503, size: 128, offset: 64)
!1503 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "swait_queue_head", file: !1504, line: 43, size: 128, elements: !1505)
!1504 = !DIFile(filename: "./include/linux/swait.h", directory: "/home/lizy2001/genbc/linux")
!1505 = !{!1506, !1507}
!1506 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1503, file: !1504, line: 44, baseType: !776)
!1507 = !DIDerivedType(tag: DW_TAG_member, name: "task_list", scope: !1503, file: !1504, line: 45, baseType: !199, size: 128)
!1508 = !DIDerivedType(tag: DW_TAG_member, name: "set_child_tid", scope: !1213, file: !1214, line: 879, baseType: !700, size: 64, offset: 6848)
!1509 = !DIDerivedType(tag: DW_TAG_member, name: "clear_child_tid", scope: !1213, file: !1214, line: 882, baseType: !700, size: 64, offset: 6912)
!1510 = !DIDerivedType(tag: DW_TAG_member, name: "utime", scope: !1213, file: !1214, line: 884, baseType: !413, size: 64, offset: 6976)
!1511 = !DIDerivedType(tag: DW_TAG_member, name: "stime", scope: !1213, file: !1214, line: 885, baseType: !413, size: 64, offset: 7040)
!1512 = !DIDerivedType(tag: DW_TAG_member, name: "gtime", scope: !1213, file: !1214, line: 890, baseType: !413, size: 64, offset: 7104)
!1513 = !DIDerivedType(tag: DW_TAG_member, name: "prev_cputime", scope: !1213, file: !1214, line: 891, baseType: !1514, size: 128, offset: 7168)
!1514 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "prev_cputime", file: !1214, line: 242, size: 128, elements: !1515)
!1515 = !{!1516, !1517, !1518}
!1516 = !DIDerivedType(tag: DW_TAG_member, name: "utime", scope: !1514, file: !1214, line: 244, baseType: !413, size: 64)
!1517 = !DIDerivedType(tag: DW_TAG_member, name: "stime", scope: !1514, file: !1214, line: 245, baseType: !413, size: 64, offset: 64)
!1518 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1514, file: !1214, line: 246, baseType: !776, offset: 128)
!1519 = !DIDerivedType(tag: DW_TAG_member, name: "nvcsw", scope: !1213, file: !1214, line: 900, baseType: !316, size: 64, offset: 7296)
!1520 = !DIDerivedType(tag: DW_TAG_member, name: "nivcsw", scope: !1213, file: !1214, line: 901, baseType: !316, size: 64, offset: 7360)
!1521 = !DIDerivedType(tag: DW_TAG_member, name: "start_time", scope: !1213, file: !1214, line: 904, baseType: !413, size: 64, offset: 7424)
!1522 = !DIDerivedType(tag: DW_TAG_member, name: "start_boottime", scope: !1213, file: !1214, line: 907, baseType: !413, size: 64, offset: 7488)
!1523 = !DIDerivedType(tag: DW_TAG_member, name: "min_flt", scope: !1213, file: !1214, line: 910, baseType: !316, size: 64, offset: 7552)
!1524 = !DIDerivedType(tag: DW_TAG_member, name: "maj_flt", scope: !1213, file: !1214, line: 911, baseType: !316, size: 64, offset: 7616)
!1525 = !DIDerivedType(tag: DW_TAG_member, name: "posix_cputimers", scope: !1213, file: !1214, line: 914, baseType: !1526, size: 640, offset: 7680)
!1526 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "posix_cputimers", file: !1527, line: 123, size: 640, elements: !1528)
!1527 = !DIFile(filename: "./include/linux/posix-timers.h", directory: "/home/lizy2001/genbc/linux")
!1528 = !{!1529, !1535, !1536}
!1529 = !DIDerivedType(tag: DW_TAG_member, name: "bases", scope: !1526, file: !1527, line: 124, baseType: !1530, size: 576)
!1530 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1531, size: 576, elements: !268)
!1531 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "posix_cputimer_base", file: !1527, line: 108, size: 192, elements: !1532)
!1532 = !{!1533, !1534}
!1533 = !DIDerivedType(tag: DW_TAG_member, name: "nextevt", scope: !1531, file: !1527, line: 109, baseType: !413, size: 64)
!1534 = !DIDerivedType(tag: DW_TAG_member, name: "tqhead", scope: !1531, file: !1527, line: 110, baseType: !1339, size: 128, offset: 64)
!1535 = !DIDerivedType(tag: DW_TAG_member, name: "timers_active", scope: !1526, file: !1527, line: 125, baseType: !7, size: 32, offset: 576)
!1536 = !DIDerivedType(tag: DW_TAG_member, name: "expiry_active", scope: !1526, file: !1527, line: 126, baseType: !7, size: 32, offset: 608)
!1537 = !DIDerivedType(tag: DW_TAG_member, name: "posix_cputimers_work", scope: !1213, file: !1214, line: 917, baseType: !1538, size: 192, offset: 8320)
!1538 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "posix_cputimers_work", file: !1527, line: 134, size: 192, elements: !1539)
!1539 = !{!1540, !1541}
!1540 = !DIDerivedType(tag: DW_TAG_member, name: "work", scope: !1538, file: !1527, line: 135, baseType: !357, size: 128, align: 64)
!1541 = !DIDerivedType(tag: DW_TAG_member, name: "scheduled", scope: !1538, file: !1527, line: 136, baseType: !7, size: 32, offset: 128)
!1542 = !DIDerivedType(tag: DW_TAG_member, name: "ptracer_cred", scope: !1213, file: !1214, line: 923, baseType: !1543, size: 64, offset: 8512)
!1543 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1544, size: 64)
!1544 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1545)
!1545 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cred", file: !1546, line: 111, size: 1280, elements: !1547)
!1546 = !DIFile(filename: "./include/linux/cred.h", directory: "/home/lizy2001/genbc/linux")
!1547 = !{!1548, !1549, !1550, !1551, !1552, !1553, !1554, !1555, !1556, !1557, !1558, !1567, !1568, !1569, !1570, !1571, !1572, !1679, !1680, !1681, !1682, !1708, !1711, !1721}
!1548 = !DIDerivedType(tag: DW_TAG_member, name: "usage", scope: !1545, file: !1546, line: 112, baseType: !743, size: 32)
!1549 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !1545, file: !1546, line: 120, baseType: !427, size: 32, offset: 32)
!1550 = !DIDerivedType(tag: DW_TAG_member, name: "gid", scope: !1545, file: !1546, line: 121, baseType: !435, size: 32, offset: 64)
!1551 = !DIDerivedType(tag: DW_TAG_member, name: "suid", scope: !1545, file: !1546, line: 122, baseType: !427, size: 32, offset: 96)
!1552 = !DIDerivedType(tag: DW_TAG_member, name: "sgid", scope: !1545, file: !1546, line: 123, baseType: !435, size: 32, offset: 128)
!1553 = !DIDerivedType(tag: DW_TAG_member, name: "euid", scope: !1545, file: !1546, line: 124, baseType: !427, size: 32, offset: 160)
!1554 = !DIDerivedType(tag: DW_TAG_member, name: "egid", scope: !1545, file: !1546, line: 125, baseType: !435, size: 32, offset: 192)
!1555 = !DIDerivedType(tag: DW_TAG_member, name: "fsuid", scope: !1545, file: !1546, line: 126, baseType: !427, size: 32, offset: 224)
!1556 = !DIDerivedType(tag: DW_TAG_member, name: "fsgid", scope: !1545, file: !1546, line: 127, baseType: !435, size: 32, offset: 256)
!1557 = !DIDerivedType(tag: DW_TAG_member, name: "securebits", scope: !1545, file: !1546, line: 128, baseType: !7, size: 32, offset: 288)
!1558 = !DIDerivedType(tag: DW_TAG_member, name: "cap_inheritable", scope: !1545, file: !1546, line: 129, baseType: !1559, size: 64, offset: 320)
!1559 = !DIDerivedType(tag: DW_TAG_typedef, name: "kernel_cap_t", file: !1560, line: 26, baseType: !1561)
!1560 = !DIFile(filename: "./include/linux/capability.h", directory: "/home/lizy2001/genbc/linux")
!1561 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernel_cap_struct", file: !1560, line: 24, size: 64, elements: !1562)
!1562 = !{!1563}
!1563 = !DIDerivedType(tag: DW_TAG_member, name: "cap", scope: !1561, file: !1560, line: 25, baseType: !1564, size: 64)
!1564 = !DICompositeType(tag: DW_TAG_array_type, baseType: !409, size: 64, elements: !1565)
!1565 = !{!1566}
!1566 = !DISubrange(count: 2)
!1567 = !DIDerivedType(tag: DW_TAG_member, name: "cap_permitted", scope: !1545, file: !1546, line: 130, baseType: !1559, size: 64, offset: 384)
!1568 = !DIDerivedType(tag: DW_TAG_member, name: "cap_effective", scope: !1545, file: !1546, line: 131, baseType: !1559, size: 64, offset: 448)
!1569 = !DIDerivedType(tag: DW_TAG_member, name: "cap_bset", scope: !1545, file: !1546, line: 132, baseType: !1559, size: 64, offset: 512)
!1570 = !DIDerivedType(tag: DW_TAG_member, name: "cap_ambient", scope: !1545, file: !1546, line: 133, baseType: !1559, size: 64, offset: 576)
!1571 = !DIDerivedType(tag: DW_TAG_member, name: "jit_keyring", scope: !1545, file: !1546, line: 135, baseType: !419, size: 8, offset: 640)
!1572 = !DIDerivedType(tag: DW_TAG_member, name: "session_keyring", scope: !1545, file: !1546, line: 137, baseType: !1573, size: 64, offset: 704)
!1573 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1574, size: 64)
!1574 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "key", file: !1575, line: 189, size: 1664, elements: !1576)
!1575 = !DIFile(filename: "./include/linux/key.h", directory: "/home/lizy2001/genbc/linux")
!1576 = !{!1577, !1578, !1581, !1586, !1587, !1590, !1591, !1596, !1597, !1598, !1599, !1601, !1602, !1603, !1604, !1605, !1643, !1664}
!1577 = !DIDerivedType(tag: DW_TAG_member, name: "usage", scope: !1574, file: !1575, line: 190, baseType: !1226, size: 32)
!1578 = !DIDerivedType(tag: DW_TAG_member, name: "serial", scope: !1574, file: !1575, line: 191, baseType: !1579, size: 32, offset: 32)
!1579 = !DIDerivedType(tag: DW_TAG_typedef, name: "key_serial_t", file: !1575, line: 28, baseType: !1580)
!1580 = !DIDerivedType(tag: DW_TAG_typedef, name: "int32_t", file: !200, line: 98, baseType: !1440)
!1581 = !DIDerivedType(tag: DW_TAG_member, scope: !1574, file: !1575, line: 192, baseType: !1582, size: 192, offset: 64)
!1582 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1574, file: !1575, line: 192, size: 192, elements: !1583)
!1583 = !{!1584, !1585}
!1584 = !DIDerivedType(tag: DW_TAG_member, name: "graveyard_link", scope: !1582, file: !1575, line: 193, baseType: !199, size: 128)
!1585 = !DIDerivedType(tag: DW_TAG_member, name: "serial_node", scope: !1582, file: !1575, line: 194, baseType: !756, size: 192, align: 64)
!1586 = !DIDerivedType(tag: DW_TAG_member, name: "sem", scope: !1574, file: !1575, line: 199, baseType: !763, size: 256, offset: 256)
!1587 = !DIDerivedType(tag: DW_TAG_member, name: "user", scope: !1574, file: !1575, line: 200, baseType: !1588, size: 64, offset: 512)
!1588 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1589, size: 64)
!1589 = !DICompositeType(tag: DW_TAG_structure_type, name: "key_user", file: !1575, line: 200, flags: DIFlagFwdDecl)
!1590 = !DIDerivedType(tag: DW_TAG_member, name: "security", scope: !1574, file: !1575, line: 201, baseType: !193, size: 64, offset: 576)
!1591 = !DIDerivedType(tag: DW_TAG_member, scope: !1574, file: !1575, line: 202, baseType: !1592, size: 64, offset: 640)
!1592 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1574, file: !1575, line: 202, size: 64, elements: !1593)
!1593 = !{!1594, !1595}
!1594 = !DIDerivedType(tag: DW_TAG_member, name: "expiry", scope: !1592, file: !1575, line: 203, baseType: !531, size: 64)
!1595 = !DIDerivedType(tag: DW_TAG_member, name: "revoked_at", scope: !1592, file: !1575, line: 204, baseType: !531, size: 64)
!1596 = !DIDerivedType(tag: DW_TAG_member, name: "last_used_at", scope: !1574, file: !1575, line: 206, baseType: !531, size: 64, offset: 704)
!1597 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !1574, file: !1575, line: 207, baseType: !427, size: 32, offset: 768)
!1598 = !DIDerivedType(tag: DW_TAG_member, name: "gid", scope: !1574, file: !1575, line: 208, baseType: !435, size: 32, offset: 800)
!1599 = !DIDerivedType(tag: DW_TAG_member, name: "perm", scope: !1574, file: !1575, line: 209, baseType: !1600, size: 32, offset: 832)
!1600 = !DIDerivedType(tag: DW_TAG_typedef, name: "key_perm_t", file: !1575, line: 31, baseType: !551)
!1601 = !DIDerivedType(tag: DW_TAG_member, name: "quotalen", scope: !1574, file: !1575, line: 210, baseType: !308, size: 16, offset: 864)
!1602 = !DIDerivedType(tag: DW_TAG_member, name: "datalen", scope: !1574, file: !1575, line: 211, baseType: !308, size: 16, offset: 880)
!1603 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1574, file: !1575, line: 215, baseType: !1201, size: 16, offset: 896)
!1604 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1574, file: !1575, line: 222, baseType: !316, size: 64, offset: 960)
!1605 = !DIDerivedType(tag: DW_TAG_member, scope: !1574, file: !1575, line: 239, baseType: !1606, size: 320, offset: 1024)
!1606 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1574, file: !1575, line: 239, size: 320, elements: !1607)
!1607 = !{!1608, !1635}
!1608 = !DIDerivedType(tag: DW_TAG_member, name: "index_key", scope: !1606, file: !1575, line: 240, baseType: !1609, size: 320)
!1609 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "keyring_index_key", file: !1575, line: 108, size: 320, elements: !1610)
!1610 = !{!1611, !1612, !1624, !1627, !1634}
!1611 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !1609, file: !1575, line: 110, baseType: !316, size: 64)
!1612 = !DIDerivedType(tag: DW_TAG_member, scope: !1609, file: !1575, line: 111, baseType: !1613, size: 64, offset: 64)
!1613 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1609, file: !1575, line: 111, size: 64, elements: !1614)
!1614 = !{!1615, !1623}
!1615 = !DIDerivedType(tag: DW_TAG_member, scope: !1613, file: !1575, line: 112, baseType: !1616, size: 64)
!1616 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1613, file: !1575, line: 112, size: 64, elements: !1617)
!1617 = !{!1618, !1619}
!1618 = !DIDerivedType(tag: DW_TAG_member, name: "desc_len", scope: !1616, file: !1575, line: 114, baseType: !855, size: 16)
!1619 = !DIDerivedType(tag: DW_TAG_member, name: "desc", scope: !1616, file: !1575, line: 115, baseType: !1620, size: 48, offset: 16)
!1620 = !DICompositeType(tag: DW_TAG_array_type, baseType: !215, size: 48, elements: !1621)
!1621 = !{!1622}
!1622 = !DISubrange(count: 6)
!1623 = !DIDerivedType(tag: DW_TAG_member, name: "x", scope: !1613, file: !1575, line: 121, baseType: !316, size: 64)
!1624 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1609, file: !1575, line: 123, baseType: !1625, size: 64, offset: 128)
!1625 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1626, size: 64)
!1626 = !DICompositeType(tag: DW_TAG_structure_type, name: "key_type", file: !1575, line: 96, flags: DIFlagFwdDecl)
!1627 = !DIDerivedType(tag: DW_TAG_member, name: "domain_tag", scope: !1609, file: !1575, line: 124, baseType: !1628, size: 64, offset: 192)
!1628 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1629, size: 64)
!1629 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "key_tag", file: !1575, line: 102, size: 192, elements: !1630)
!1630 = !{!1631, !1632, !1633}
!1631 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !1629, file: !1575, line: 103, baseType: !357, size: 128, align: 64)
!1632 = !DIDerivedType(tag: DW_TAG_member, name: "usage", scope: !1629, file: !1575, line: 104, baseType: !1226, size: 32, offset: 128)
!1633 = !DIDerivedType(tag: DW_TAG_member, name: "removed", scope: !1629, file: !1575, line: 105, baseType: !482, size: 8, offset: 160)
!1634 = !DIDerivedType(tag: DW_TAG_member, name: "description", scope: !1609, file: !1575, line: 125, baseType: !213, size: 64, offset: 256)
!1635 = !DIDerivedType(tag: DW_TAG_member, scope: !1606, file: !1575, line: 241, baseType: !1636, size: 320)
!1636 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1606, file: !1575, line: 241, size: 320, elements: !1637)
!1637 = !{!1638, !1639, !1640, !1641, !1642}
!1638 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !1636, file: !1575, line: 242, baseType: !316, size: 64)
!1639 = !DIDerivedType(tag: DW_TAG_member, name: "len_desc", scope: !1636, file: !1575, line: 243, baseType: !316, size: 64, offset: 64)
!1640 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1636, file: !1575, line: 244, baseType: !1625, size: 64, offset: 128)
!1641 = !DIDerivedType(tag: DW_TAG_member, name: "domain_tag", scope: !1636, file: !1575, line: 245, baseType: !1628, size: 64, offset: 192)
!1642 = !DIDerivedType(tag: DW_TAG_member, name: "description", scope: !1636, file: !1575, line: 246, baseType: !267, size: 64, offset: 256)
!1643 = !DIDerivedType(tag: DW_TAG_member, scope: !1574, file: !1575, line: 254, baseType: !1644, size: 256, offset: 1344)
!1644 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1574, file: !1575, line: 254, size: 256, elements: !1645)
!1645 = !{!1646, !1652}
!1646 = !DIDerivedType(tag: DW_TAG_member, name: "payload", scope: !1644, file: !1575, line: 255, baseType: !1647, size: 256)
!1647 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "key_payload", file: !1575, line: 128, size: 256, elements: !1648)
!1648 = !{!1649, !1650}
!1649 = !DIDerivedType(tag: DW_TAG_member, name: "rcu_data0", scope: !1647, file: !1575, line: 129, baseType: !193, size: 64)
!1650 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1647, file: !1575, line: 130, baseType: !1651, size: 256)
!1651 = !DICompositeType(tag: DW_TAG_array_type, baseType: !193, size: 256, elements: !1151)
!1652 = !DIDerivedType(tag: DW_TAG_member, scope: !1644, file: !1575, line: 256, baseType: !1653, size: 256)
!1653 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1644, file: !1575, line: 256, size: 256, elements: !1654)
!1654 = !{!1655, !1656}
!1655 = !DIDerivedType(tag: DW_TAG_member, name: "name_link", scope: !1653, file: !1575, line: 258, baseType: !199, size: 128)
!1656 = !DIDerivedType(tag: DW_TAG_member, name: "keys", scope: !1653, file: !1575, line: 259, baseType: !1657, size: 128, offset: 128)
!1657 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "assoc_array", file: !1658, line: 22, size: 128, elements: !1659)
!1658 = !DIFile(filename: "./include/linux/assoc_array.h", directory: "/home/lizy2001/genbc/linux")
!1659 = !{!1660, !1663}
!1660 = !DIDerivedType(tag: DW_TAG_member, name: "root", scope: !1657, file: !1658, line: 23, baseType: !1661, size: 64)
!1661 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1662, size: 64)
!1662 = !DICompositeType(tag: DW_TAG_structure_type, name: "assoc_array_ptr", file: !1658, line: 23, flags: DIFlagFwdDecl)
!1663 = !DIDerivedType(tag: DW_TAG_member, name: "nr_leaves_on_tree", scope: !1657, file: !1658, line: 24, baseType: !316, size: 64, offset: 64)
!1664 = !DIDerivedType(tag: DW_TAG_member, name: "restrict_link", scope: !1574, file: !1575, line: 274, baseType: !1665, size: 64, offset: 1600)
!1665 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1666, size: 64)
!1666 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "key_restriction", file: !1575, line: 170, size: 192, elements: !1667)
!1667 = !{!1668, !1677, !1678}
!1668 = !DIDerivedType(tag: DW_TAG_member, name: "check", scope: !1666, file: !1575, line: 171, baseType: !1669, size: 64)
!1669 = !DIDerivedType(tag: DW_TAG_typedef, name: "key_restrict_link_func_t", file: !1575, line: 165, baseType: !1670)
!1670 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1671, size: 64)
!1671 = !DISubroutineType(types: !1672)
!1672 = !{!251, !1573, !1673, !1675, !1573}
!1673 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1674, size: 64)
!1674 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1626)
!1675 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1676, size: 64)
!1676 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1647)
!1677 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !1666, file: !1575, line: 172, baseType: !1573, size: 64, offset: 64)
!1678 = !DIDerivedType(tag: DW_TAG_member, name: "keytype", scope: !1666, file: !1575, line: 173, baseType: !1625, size: 64, offset: 128)
!1679 = !DIDerivedType(tag: DW_TAG_member, name: "process_keyring", scope: !1545, file: !1546, line: 138, baseType: !1573, size: 64, offset: 768)
!1680 = !DIDerivedType(tag: DW_TAG_member, name: "thread_keyring", scope: !1545, file: !1546, line: 139, baseType: !1573, size: 64, offset: 832)
!1681 = !DIDerivedType(tag: DW_TAG_member, name: "request_key_auth", scope: !1545, file: !1546, line: 140, baseType: !1573, size: 64, offset: 896)
!1682 = !DIDerivedType(tag: DW_TAG_member, name: "user", scope: !1545, file: !1546, line: 145, baseType: !1683, size: 64, offset: 960)
!1683 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1684, size: 64)
!1684 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "user_struct", file: !1685, line: 13, size: 896, elements: !1686)
!1685 = !DIFile(filename: "./include/linux/sched/user.h", directory: "/home/lizy2001/genbc/linux")
!1686 = !{!1687, !1688, !1689, !1690, !1691, !1692, !1693, !1694, !1695, !1696, !1697}
!1687 = !DIDerivedType(tag: DW_TAG_member, name: "__count", scope: !1684, file: !1685, line: 14, baseType: !1226, size: 32)
!1688 = !DIDerivedType(tag: DW_TAG_member, name: "processes", scope: !1684, file: !1685, line: 15, baseType: !743, size: 32, offset: 32)
!1689 = !DIDerivedType(tag: DW_TAG_member, name: "sigpending", scope: !1684, file: !1685, line: 16, baseType: !743, size: 32, offset: 64)
!1690 = !DIDerivedType(tag: DW_TAG_member, name: "epoll_watches", scope: !1684, file: !1685, line: 21, baseType: !767, size: 64, offset: 128)
!1691 = !DIDerivedType(tag: DW_TAG_member, name: "locked_shm", scope: !1684, file: !1685, line: 27, baseType: !316, size: 64, offset: 192)
!1692 = !DIDerivedType(tag: DW_TAG_member, name: "unix_inflight", scope: !1684, file: !1685, line: 28, baseType: !316, size: 64, offset: 256)
!1693 = !DIDerivedType(tag: DW_TAG_member, name: "pipe_bufs", scope: !1684, file: !1685, line: 29, baseType: !767, size: 64, offset: 320)
!1694 = !DIDerivedType(tag: DW_TAG_member, name: "uidhash_node", scope: !1684, file: !1685, line: 32, baseType: !634, size: 128, offset: 384)
!1695 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !1684, file: !1685, line: 33, baseType: !427, size: 32, offset: 512)
!1696 = !DIDerivedType(tag: DW_TAG_member, name: "locked_vm", scope: !1684, file: !1685, line: 37, baseType: !767, size: 64, offset: 576)
!1697 = !DIDerivedType(tag: DW_TAG_member, name: "ratelimit", scope: !1684, file: !1685, line: 44, baseType: !1698, size: 256, offset: 640)
!1698 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ratelimit_state", file: !1699, line: 15, size: 256, elements: !1700)
!1699 = !DIFile(filename: "./include/linux/ratelimit_types.h", directory: "/home/lizy2001/genbc/linux")
!1700 = !{!1701, !1702, !1703, !1704, !1705, !1706, !1707}
!1701 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1698, file: !1699, line: 16, baseType: !776)
!1702 = !DIDerivedType(tag: DW_TAG_member, name: "interval", scope: !1698, file: !1699, line: 18, baseType: !251, size: 32)
!1703 = !DIDerivedType(tag: DW_TAG_member, name: "burst", scope: !1698, file: !1699, line: 19, baseType: !251, size: 32, offset: 32)
!1704 = !DIDerivedType(tag: DW_TAG_member, name: "printed", scope: !1698, file: !1699, line: 20, baseType: !251, size: 32, offset: 64)
!1705 = !DIDerivedType(tag: DW_TAG_member, name: "missed", scope: !1698, file: !1699, line: 21, baseType: !251, size: 32, offset: 96)
!1706 = !DIDerivedType(tag: DW_TAG_member, name: "begin", scope: !1698, file: !1699, line: 22, baseType: !316, size: 64, offset: 128)
!1707 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1698, file: !1699, line: 23, baseType: !316, size: 64, offset: 192)
!1708 = !DIDerivedType(tag: DW_TAG_member, name: "user_ns", scope: !1545, file: !1546, line: 146, baseType: !1709, size: 64, offset: 1024)
!1709 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1710, size: 64)
!1710 = !DICompositeType(tag: DW_TAG_structure_type, name: "user_namespace", file: !428, line: 18, flags: DIFlagFwdDecl)
!1711 = !DIDerivedType(tag: DW_TAG_member, name: "group_info", scope: !1545, file: !1546, line: 147, baseType: !1712, size: 64, offset: 1088)
!1712 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1713, size: 64)
!1713 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "group_info", file: !1546, line: 25, size: 64, elements: !1714)
!1714 = !{!1715, !1716, !1717}
!1715 = !DIDerivedType(tag: DW_TAG_member, name: "usage", scope: !1713, file: !1546, line: 26, baseType: !743, size: 32)
!1716 = !DIDerivedType(tag: DW_TAG_member, name: "ngroups", scope: !1713, file: !1546, line: 27, baseType: !251, size: 32, offset: 32)
!1717 = !DIDerivedType(tag: DW_TAG_member, name: "gid", scope: !1713, file: !1546, line: 28, baseType: !1718, offset: 64)
!1718 = !DICompositeType(tag: DW_TAG_array_type, baseType: !435, elements: !1719)
!1719 = !{!1720}
!1720 = !DISubrange(count: 0)
!1721 = !DIDerivedType(tag: DW_TAG_member, scope: !1545, file: !1546, line: 149, baseType: !1722, size: 128, offset: 1152)
!1722 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1545, file: !1546, line: 149, size: 128, elements: !1723)
!1723 = !{!1724, !1725}
!1724 = !DIDerivedType(tag: DW_TAG_member, name: "non_rcu", scope: !1722, file: !1546, line: 150, baseType: !251, size: 32)
!1725 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !1722, file: !1546, line: 151, baseType: !357, size: 128, align: 64)
!1726 = !DIDerivedType(tag: DW_TAG_member, name: "real_cred", scope: !1213, file: !1214, line: 926, baseType: !1543, size: 64, offset: 8576)
!1727 = !DIDerivedType(tag: DW_TAG_member, name: "cred", scope: !1213, file: !1214, line: 929, baseType: !1543, size: 64, offset: 8640)
!1728 = !DIDerivedType(tag: DW_TAG_member, name: "cached_requested_key", scope: !1213, file: !1214, line: 933, baseType: !1573, size: 64, offset: 8704)
!1729 = !DIDerivedType(tag: DW_TAG_member, name: "comm", scope: !1213, file: !1214, line: 943, baseType: !1730, size: 128, offset: 8768)
!1730 = !DICompositeType(tag: DW_TAG_array_type, baseType: !215, size: 128, elements: !1731)
!1731 = !{!1732}
!1732 = !DISubrange(count: 16)
!1733 = !DIDerivedType(tag: DW_TAG_member, name: "nameidata", scope: !1213, file: !1214, line: 945, baseType: !1734, size: 64, offset: 8896)
!1734 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1735, size: 64)
!1735 = !DICompositeType(tag: DW_TAG_structure_type, name: "nameidata", file: !1214, line: 49, flags: DIFlagFwdDecl)
!1736 = !DIDerivedType(tag: DW_TAG_member, name: "fs", scope: !1213, file: !1214, line: 956, baseType: !1737, size: 64, offset: 8960)
!1737 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1738, size: 64)
!1738 = !DICompositeType(tag: DW_TAG_structure_type, name: "fs_struct", file: !1214, line: 45, flags: DIFlagFwdDecl)
!1739 = !DIDerivedType(tag: DW_TAG_member, name: "files", scope: !1213, file: !1214, line: 959, baseType: !1740, size: 64, offset: 9024)
!1740 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1741, size: 64)
!1741 = !DICompositeType(tag: DW_TAG_structure_type, name: "files_struct", file: !1214, line: 959, flags: DIFlagFwdDecl)
!1742 = !DIDerivedType(tag: DW_TAG_member, name: "io_uring", scope: !1213, file: !1214, line: 962, baseType: !1743, size: 64, offset: 9088)
!1743 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1744, size: 64)
!1744 = !DICompositeType(tag: DW_TAG_structure_type, name: "io_uring_task", file: !1214, line: 66, flags: DIFlagFwdDecl)
!1745 = !DIDerivedType(tag: DW_TAG_member, name: "nsproxy", scope: !1213, file: !1214, line: 966, baseType: !1746, size: 64, offset: 9152)
!1746 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1747, size: 64)
!1747 = !DICompositeType(tag: DW_TAG_structure_type, name: "nsproxy", file: !1748, line: 35, flags: DIFlagFwdDecl)
!1748 = !DIFile(filename: "./include/linux/sysctl.h", directory: "/home/lizy2001/genbc/linux")
!1749 = !DIDerivedType(tag: DW_TAG_member, name: "signal", scope: !1213, file: !1214, line: 969, baseType: !1750, size: 64, offset: 9216)
!1750 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1751, size: 64)
!1751 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "signal_struct", file: !1752, line: 82, size: 7296, elements: !1753)
!1752 = !DIFile(filename: "./include/linux/sched/signal.h", directory: "/home/lizy2001/genbc/linux")
!1753 = !{!1754, !1755, !1756, !1757, !1758, !1759, !1760, !1771, !1772, !1773, !1774, !1775, !1776, !1777, !1778, !1779, !1780, !1781, !1782, !1783, !1789, !1798, !1799, !1801, !1802, !1803, !1806, !1812, !1813, !1814, !1815, !1816, !1817, !1818, !1819, !1820, !1821, !1822, !1823, !1824, !1825, !1826, !1827, !1828, !1829, !1830, !1831, !1832, !1833, !1836, !1837, !1844, !1845, !1846, !1847, !1848, !1849}
!1754 = !DIDerivedType(tag: DW_TAG_member, name: "sigcnt", scope: !1751, file: !1752, line: 83, baseType: !1226, size: 32)
!1755 = !DIDerivedType(tag: DW_TAG_member, name: "live", scope: !1751, file: !1752, line: 84, baseType: !743, size: 32, offset: 32)
!1756 = !DIDerivedType(tag: DW_TAG_member, name: "nr_threads", scope: !1751, file: !1752, line: 85, baseType: !251, size: 32, offset: 64)
!1757 = !DIDerivedType(tag: DW_TAG_member, name: "thread_head", scope: !1751, file: !1752, line: 86, baseType: !199, size: 128, offset: 128)
!1758 = !DIDerivedType(tag: DW_TAG_member, name: "wait_chldexit", scope: !1751, file: !1752, line: 88, baseType: !1477, size: 128, offset: 256)
!1759 = !DIDerivedType(tag: DW_TAG_member, name: "curr_target", scope: !1751, file: !1752, line: 91, baseType: !1212, size: 64, offset: 384)
!1760 = !DIDerivedType(tag: DW_TAG_member, name: "shared_pending", scope: !1751, file: !1752, line: 94, baseType: !1761, size: 192, offset: 448)
!1761 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sigpending", file: !1762, line: 30, size: 192, elements: !1763)
!1762 = !DIFile(filename: "./include/linux/signal_types.h", directory: "/home/lizy2001/genbc/linux")
!1763 = !{!1764, !1765}
!1764 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !1761, file: !1762, line: 31, baseType: !199, size: 128)
!1765 = !DIDerivedType(tag: DW_TAG_member, name: "signal", scope: !1761, file: !1762, line: 32, baseType: !1766, size: 64, offset: 128)
!1766 = !DIDerivedType(tag: DW_TAG_typedef, name: "sigset_t", file: !1767, line: 25, baseType: !1768)
!1767 = !DIFile(filename: "./arch/x86/include/asm/signal.h", directory: "/home/lizy2001/genbc/linux")
!1768 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1767, line: 23, size: 64, elements: !1769)
!1769 = !{!1770}
!1770 = !DIDerivedType(tag: DW_TAG_member, name: "sig", scope: !1768, file: !1767, line: 24, baseType: !1366, size: 64)
!1771 = !DIDerivedType(tag: DW_TAG_member, name: "multiprocess", scope: !1751, file: !1752, line: 97, baseType: !630, size: 64, offset: 640)
!1772 = !DIDerivedType(tag: DW_TAG_member, name: "group_exit_code", scope: !1751, file: !1752, line: 100, baseType: !251, size: 32, offset: 704)
!1773 = !DIDerivedType(tag: DW_TAG_member, name: "notify_count", scope: !1751, file: !1752, line: 106, baseType: !251, size: 32, offset: 736)
!1774 = !DIDerivedType(tag: DW_TAG_member, name: "group_exit_task", scope: !1751, file: !1752, line: 107, baseType: !1212, size: 64, offset: 768)
!1775 = !DIDerivedType(tag: DW_TAG_member, name: "group_stop_count", scope: !1751, file: !1752, line: 110, baseType: !251, size: 32, offset: 832)
!1776 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1751, file: !1752, line: 111, baseType: !7, size: 32, offset: 864)
!1777 = !DIDerivedType(tag: DW_TAG_member, name: "is_child_subreaper", scope: !1751, file: !1752, line: 122, baseType: !7, size: 1, offset: 896, flags: DIFlagBitField, extraData: i64 896)
!1778 = !DIDerivedType(tag: DW_TAG_member, name: "has_child_subreaper", scope: !1751, file: !1752, line: 123, baseType: !7, size: 1, offset: 897, flags: DIFlagBitField, extraData: i64 896)
!1779 = !DIDerivedType(tag: DW_TAG_member, name: "posix_timer_id", scope: !1751, file: !1752, line: 128, baseType: !251, size: 32, offset: 928)
!1780 = !DIDerivedType(tag: DW_TAG_member, name: "posix_timers", scope: !1751, file: !1752, line: 129, baseType: !199, size: 128, offset: 960)
!1781 = !DIDerivedType(tag: DW_TAG_member, name: "real_timer", scope: !1751, file: !1752, line: 132, baseType: !1288, size: 512, offset: 1088)
!1782 = !DIDerivedType(tag: DW_TAG_member, name: "it_real_incr", scope: !1751, file: !1752, line: 133, baseType: !1296, size: 64, offset: 1600)
!1783 = !DIDerivedType(tag: DW_TAG_member, name: "it", scope: !1751, file: !1752, line: 140, baseType: !1784, size: 256, offset: 1664)
!1784 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1785, size: 256, elements: !1565)
!1785 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cpu_itimer", file: !1752, line: 38, size: 128, elements: !1786)
!1786 = !{!1787, !1788}
!1787 = !DIDerivedType(tag: DW_TAG_member, name: "expires", scope: !1785, file: !1752, line: 39, baseType: !413, size: 64)
!1788 = !DIDerivedType(tag: DW_TAG_member, name: "incr", scope: !1785, file: !1752, line: 40, baseType: !413, size: 64, offset: 64)
!1789 = !DIDerivedType(tag: DW_TAG_member, name: "cputimer", scope: !1751, file: !1752, line: 146, baseType: !1790, size: 192, offset: 1920)
!1790 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "thread_group_cputimer", file: !1752, line: 66, size: 192, elements: !1791)
!1791 = !{!1792}
!1792 = !DIDerivedType(tag: DW_TAG_member, name: "cputime_atomic", scope: !1790, file: !1752, line: 67, baseType: !1793, size: 192)
!1793 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "task_cputime_atomic", file: !1752, line: 47, size: 192, elements: !1794)
!1794 = !{!1795, !1796, !1797}
!1795 = !DIDerivedType(tag: DW_TAG_member, name: "utime", scope: !1793, file: !1752, line: 48, baseType: !769, size: 64)
!1796 = !DIDerivedType(tag: DW_TAG_member, name: "stime", scope: !1793, file: !1752, line: 49, baseType: !769, size: 64, offset: 64)
!1797 = !DIDerivedType(tag: DW_TAG_member, name: "sum_exec_runtime", scope: !1793, file: !1752, line: 50, baseType: !769, size: 64, offset: 128)
!1798 = !DIDerivedType(tag: DW_TAG_member, name: "posix_cputimers", scope: !1751, file: !1752, line: 150, baseType: !1526, size: 640, offset: 2112)
!1799 = !DIDerivedType(tag: DW_TAG_member, name: "pids", scope: !1751, file: !1752, line: 153, baseType: !1800, size: 256, offset: 2752)
!1800 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1467, size: 256, elements: !1151)
!1801 = !DIDerivedType(tag: DW_TAG_member, name: "tty_old_pgrp", scope: !1751, file: !1752, line: 159, baseType: !1467, size: 64, offset: 3008)
!1802 = !DIDerivedType(tag: DW_TAG_member, name: "leader", scope: !1751, file: !1752, line: 162, baseType: !251, size: 32, offset: 3072)
!1803 = !DIDerivedType(tag: DW_TAG_member, name: "tty", scope: !1751, file: !1752, line: 164, baseType: !1804, size: 64, offset: 3136)
!1804 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1805, size: 64)
!1805 = !DICompositeType(tag: DW_TAG_structure_type, name: "tty_struct", file: !1752, line: 164, flags: DIFlagFwdDecl)
!1806 = !DIDerivedType(tag: DW_TAG_member, name: "stats_lock", scope: !1751, file: !1752, line: 175, baseType: !1807, size: 32, offset: 3200)
!1807 = !DIDerivedType(tag: DW_TAG_typedef, name: "seqlock_t", file: !380, line: 805, baseType: !1808)
!1808 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !380, line: 798, size: 32, elements: !1809)
!1809 = !{!1810, !1811}
!1810 = !DIDerivedType(tag: DW_TAG_member, name: "seqcount", scope: !1808, file: !380, line: 803, baseType: !379, size: 32)
!1811 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1808, file: !380, line: 804, baseType: !225, offset: 32)
!1812 = !DIDerivedType(tag: DW_TAG_member, name: "utime", scope: !1751, file: !1752, line: 176, baseType: !413, size: 64, offset: 3264)
!1813 = !DIDerivedType(tag: DW_TAG_member, name: "stime", scope: !1751, file: !1752, line: 176, baseType: !413, size: 64, offset: 3328)
!1814 = !DIDerivedType(tag: DW_TAG_member, name: "cutime", scope: !1751, file: !1752, line: 176, baseType: !413, size: 64, offset: 3392)
!1815 = !DIDerivedType(tag: DW_TAG_member, name: "cstime", scope: !1751, file: !1752, line: 176, baseType: !413, size: 64, offset: 3456)
!1816 = !DIDerivedType(tag: DW_TAG_member, name: "gtime", scope: !1751, file: !1752, line: 177, baseType: !413, size: 64, offset: 3520)
!1817 = !DIDerivedType(tag: DW_TAG_member, name: "cgtime", scope: !1751, file: !1752, line: 178, baseType: !413, size: 64, offset: 3584)
!1818 = !DIDerivedType(tag: DW_TAG_member, name: "prev_cputime", scope: !1751, file: !1752, line: 179, baseType: !1514, size: 128, offset: 3648)
!1819 = !DIDerivedType(tag: DW_TAG_member, name: "nvcsw", scope: !1751, file: !1752, line: 180, baseType: !316, size: 64, offset: 3776)
!1820 = !DIDerivedType(tag: DW_TAG_member, name: "nivcsw", scope: !1751, file: !1752, line: 180, baseType: !316, size: 64, offset: 3840)
!1821 = !DIDerivedType(tag: DW_TAG_member, name: "cnvcsw", scope: !1751, file: !1752, line: 180, baseType: !316, size: 64, offset: 3904)
!1822 = !DIDerivedType(tag: DW_TAG_member, name: "cnivcsw", scope: !1751, file: !1752, line: 180, baseType: !316, size: 64, offset: 3968)
!1823 = !DIDerivedType(tag: DW_TAG_member, name: "min_flt", scope: !1751, file: !1752, line: 181, baseType: !316, size: 64, offset: 4032)
!1824 = !DIDerivedType(tag: DW_TAG_member, name: "maj_flt", scope: !1751, file: !1752, line: 181, baseType: !316, size: 64, offset: 4096)
!1825 = !DIDerivedType(tag: DW_TAG_member, name: "cmin_flt", scope: !1751, file: !1752, line: 181, baseType: !316, size: 64, offset: 4160)
!1826 = !DIDerivedType(tag: DW_TAG_member, name: "cmaj_flt", scope: !1751, file: !1752, line: 181, baseType: !316, size: 64, offset: 4224)
!1827 = !DIDerivedType(tag: DW_TAG_member, name: "inblock", scope: !1751, file: !1752, line: 182, baseType: !316, size: 64, offset: 4288)
!1828 = !DIDerivedType(tag: DW_TAG_member, name: "oublock", scope: !1751, file: !1752, line: 182, baseType: !316, size: 64, offset: 4352)
!1829 = !DIDerivedType(tag: DW_TAG_member, name: "cinblock", scope: !1751, file: !1752, line: 182, baseType: !316, size: 64, offset: 4416)
!1830 = !DIDerivedType(tag: DW_TAG_member, name: "coublock", scope: !1751, file: !1752, line: 182, baseType: !316, size: 64, offset: 4480)
!1831 = !DIDerivedType(tag: DW_TAG_member, name: "maxrss", scope: !1751, file: !1752, line: 183, baseType: !316, size: 64, offset: 4544)
!1832 = !DIDerivedType(tag: DW_TAG_member, name: "cmaxrss", scope: !1751, file: !1752, line: 183, baseType: !316, size: 64, offset: 4608)
!1833 = !DIDerivedType(tag: DW_TAG_member, name: "ioac", scope: !1751, file: !1752, line: 184, baseType: !1834, offset: 4672)
!1834 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "task_io_accounting", file: !1835, line: 12, elements: !239)
!1835 = !DIFile(filename: "./include/linux/task_io_accounting.h", directory: "/home/lizy2001/genbc/linux")
!1836 = !DIDerivedType(tag: DW_TAG_member, name: "sum_sched_runtime", scope: !1751, file: !1752, line: 192, baseType: !415, size: 64, offset: 4672)
!1837 = !DIDerivedType(tag: DW_TAG_member, name: "rlim", scope: !1751, file: !1752, line: 203, baseType: !1838, size: 2048, offset: 4736)
!1838 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1839, size: 2048, elements: !1731)
!1839 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rlimit", file: !1840, line: 43, size: 128, elements: !1841)
!1840 = !DIFile(filename: "./include/uapi/linux/resource.h", directory: "/home/lizy2001/genbc/linux")
!1841 = !{!1842, !1843}
!1842 = !DIDerivedType(tag: DW_TAG_member, name: "rlim_cur", scope: !1839, file: !1840, line: 44, baseType: !315, size: 64)
!1843 = !DIDerivedType(tag: DW_TAG_member, name: "rlim_max", scope: !1839, file: !1840, line: 45, baseType: !315, size: 64, offset: 64)
!1844 = !DIDerivedType(tag: DW_TAG_member, name: "oom_flag_origin", scope: !1751, file: !1752, line: 220, baseType: !482, size: 8, offset: 6784)
!1845 = !DIDerivedType(tag: DW_TAG_member, name: "oom_score_adj", scope: !1751, file: !1752, line: 221, baseType: !1201, size: 16, offset: 6800)
!1846 = !DIDerivedType(tag: DW_TAG_member, name: "oom_score_adj_min", scope: !1751, file: !1752, line: 222, baseType: !1201, size: 16, offset: 6816)
!1847 = !DIDerivedType(tag: DW_TAG_member, name: "oom_mm", scope: !1751, file: !1752, line: 224, baseType: !970, size: 64, offset: 6848)
!1848 = !DIDerivedType(tag: DW_TAG_member, name: "cred_guard_mutex", scope: !1751, file: !1752, line: 227, baseType: !1169, size: 192, offset: 6912)
!1849 = !DIDerivedType(tag: DW_TAG_member, name: "exec_update_mutex", scope: !1751, file: !1752, line: 233, baseType: !1169, size: 192, offset: 7104)
!1850 = !DIDerivedType(tag: DW_TAG_member, name: "sighand", scope: !1213, file: !1214, line: 970, baseType: !1851, size: 64, offset: 9280)
!1851 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1852, size: 64)
!1852 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sighand_struct", file: !1752, line: 20, size: 16576, elements: !1853)
!1853 = !{!1854, !1855, !1856, !1857}
!1854 = !DIDerivedType(tag: DW_TAG_member, name: "siglock", scope: !1852, file: !1752, line: 21, baseType: !225)
!1855 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !1852, file: !1752, line: 22, baseType: !1226, size: 32)
!1856 = !DIDerivedType(tag: DW_TAG_member, name: "signalfd_wqh", scope: !1852, file: !1752, line: 23, baseType: !1477, size: 128, offset: 64)
!1857 = !DIDerivedType(tag: DW_TAG_member, name: "action", scope: !1852, file: !1752, line: 24, baseType: !1858, size: 16384, offset: 192)
!1858 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1859, size: 16384, elements: !272)
!1859 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_sigaction", file: !1762, line: 49, size: 256, elements: !1860)
!1860 = !{!1861}
!1861 = !DIDerivedType(tag: DW_TAG_member, name: "sa", scope: !1859, file: !1762, line: 50, baseType: !1862, size: 256)
!1862 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sigaction", file: !1762, line: 35, size: 256, elements: !1863)
!1863 = !{!1864, !1871, !1872, !1878}
!1864 = !DIDerivedType(tag: DW_TAG_member, name: "sa_handler", scope: !1862, file: !1762, line: 37, baseType: !1865, size: 64)
!1865 = !DIDerivedType(tag: DW_TAG_typedef, name: "__sighandler_t", file: !1866, line: 19, baseType: !1867)
!1866 = !DIFile(filename: "./include/uapi/asm-generic/signal-defs.h", directory: "/home/lizy2001/genbc/linux")
!1867 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1868, size: 64)
!1868 = !DIDerivedType(tag: DW_TAG_typedef, name: "__signalfn_t", file: !1866, line: 18, baseType: !1869)
!1869 = !DISubroutineType(types: !1870)
!1870 = !{null, !251}
!1871 = !DIDerivedType(tag: DW_TAG_member, name: "sa_flags", scope: !1862, file: !1762, line: 38, baseType: !316, size: 64, offset: 64)
!1872 = !DIDerivedType(tag: DW_TAG_member, name: "sa_restorer", scope: !1862, file: !1762, line: 44, baseType: !1873, size: 64, offset: 128)
!1873 = !DIDerivedType(tag: DW_TAG_typedef, name: "__sigrestore_t", file: !1866, line: 22, baseType: !1874)
!1874 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1875, size: 64)
!1875 = !DIDerivedType(tag: DW_TAG_typedef, name: "__restorefn_t", file: !1866, line: 21, baseType: !1876)
!1876 = !DISubroutineType(types: !1877)
!1877 = !{null}
!1878 = !DIDerivedType(tag: DW_TAG_member, name: "sa_mask", scope: !1862, file: !1762, line: 46, baseType: !1766, size: 64, offset: 192)
!1879 = !DIDerivedType(tag: DW_TAG_member, name: "blocked", scope: !1213, file: !1214, line: 971, baseType: !1766, size: 64, offset: 9344)
!1880 = !DIDerivedType(tag: DW_TAG_member, name: "real_blocked", scope: !1213, file: !1214, line: 972, baseType: !1766, size: 64, offset: 9408)
!1881 = !DIDerivedType(tag: DW_TAG_member, name: "saved_sigmask", scope: !1213, file: !1214, line: 974, baseType: !1766, size: 64, offset: 9472)
!1882 = !DIDerivedType(tag: DW_TAG_member, name: "pending", scope: !1213, file: !1214, line: 975, baseType: !1761, size: 192, offset: 9536)
!1883 = !DIDerivedType(tag: DW_TAG_member, name: "sas_ss_sp", scope: !1213, file: !1214, line: 976, baseType: !316, size: 64, offset: 9728)
!1884 = !DIDerivedType(tag: DW_TAG_member, name: "sas_ss_size", scope: !1213, file: !1214, line: 977, baseType: !313, size: 64, offset: 9792)
!1885 = !DIDerivedType(tag: DW_TAG_member, name: "sas_ss_flags", scope: !1213, file: !1214, line: 978, baseType: !7, size: 32, offset: 9856)
!1886 = !DIDerivedType(tag: DW_TAG_member, name: "task_works", scope: !1213, file: !1214, line: 980, baseType: !360, size: 64, offset: 9920)
!1887 = !DIDerivedType(tag: DW_TAG_member, name: "seccomp", scope: !1213, file: !1214, line: 989, baseType: !1888, size: 128, offset: 9984)
!1888 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seccomp", file: !1889, line: 35, size: 128, elements: !1890)
!1889 = !DIFile(filename: "./include/linux/seccomp.h", directory: "/home/lizy2001/genbc/linux")
!1890 = !{!1891, !1892, !1893}
!1891 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !1888, file: !1889, line: 36, baseType: !251, size: 32)
!1892 = !DIDerivedType(tag: DW_TAG_member, name: "filter_count", scope: !1888, file: !1889, line: 37, baseType: !743, size: 32, offset: 32)
!1893 = !DIDerivedType(tag: DW_TAG_member, name: "filter", scope: !1888, file: !1889, line: 38, baseType: !1894, size: 64, offset: 64)
!1894 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1895, size: 64)
!1895 = !DICompositeType(tag: DW_TAG_structure_type, name: "seccomp_filter", file: !1889, line: 23, flags: DIFlagFwdDecl)
!1896 = !DIDerivedType(tag: DW_TAG_member, name: "parent_exec_id", scope: !1213, file: !1214, line: 992, baseType: !413, size: 64, offset: 10112)
!1897 = !DIDerivedType(tag: DW_TAG_member, name: "self_exec_id", scope: !1213, file: !1214, line: 993, baseType: !413, size: 64, offset: 10176)
!1898 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_lock", scope: !1213, file: !1214, line: 996, baseType: !225, offset: 10240)
!1899 = !DIDerivedType(tag: DW_TAG_member, name: "pi_lock", scope: !1213, file: !1214, line: 999, baseType: !776, offset: 10240)
!1900 = !DIDerivedType(tag: DW_TAG_member, name: "wake_q", scope: !1213, file: !1214, line: 1001, baseType: !1901, size: 64, offset: 10240)
!1901 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wake_q_node", file: !1214, line: 636, size: 64, elements: !1902)
!1902 = !{!1903}
!1903 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1901, file: !1214, line: 637, baseType: !1904, size: 64)
!1904 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1901, size: 64)
!1905 = !DIDerivedType(tag: DW_TAG_member, name: "pi_waiters", scope: !1213, file: !1214, line: 1005, baseType: !748, size: 128, offset: 10304)
!1906 = !DIDerivedType(tag: DW_TAG_member, name: "pi_top_task", scope: !1213, file: !1214, line: 1007, baseType: !1212, size: 64, offset: 10432)
!1907 = !DIDerivedType(tag: DW_TAG_member, name: "pi_blocked_on", scope: !1213, file: !1214, line: 1009, baseType: !1908, size: 64, offset: 10496)
!1908 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1909, size: 64)
!1909 = !DICompositeType(tag: DW_TAG_structure_type, name: "rt_mutex_waiter", file: !1214, line: 1009, flags: DIFlagFwdDecl)
!1910 = !DIDerivedType(tag: DW_TAG_member, name: "journal_info", scope: !1213, file: !1214, line: 1043, baseType: !193, size: 64, offset: 10560)
!1911 = !DIDerivedType(tag: DW_TAG_member, name: "bio_list", scope: !1213, file: !1214, line: 1046, baseType: !1912, size: 64, offset: 10624)
!1912 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1913, size: 64)
!1913 = !DICompositeType(tag: DW_TAG_structure_type, name: "bio_list", file: !1214, line: 41, flags: DIFlagFwdDecl)
!1914 = !DIDerivedType(tag: DW_TAG_member, name: "plug", scope: !1213, file: !1214, line: 1050, baseType: !1915, size: 64, offset: 10688)
!1915 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1916, size: 64)
!1916 = !DICompositeType(tag: DW_TAG_structure_type, name: "blk_plug", file: !1214, line: 42, flags: DIFlagFwdDecl)
!1917 = !DIDerivedType(tag: DW_TAG_member, name: "reclaim_state", scope: !1213, file: !1214, line: 1054, baseType: !1918, size: 64, offset: 10752)
!1918 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1919, size: 64)
!1919 = !DICompositeType(tag: DW_TAG_structure_type, name: "reclaim_state", file: !1214, line: 55, flags: DIFlagFwdDecl)
!1920 = !DIDerivedType(tag: DW_TAG_member, name: "backing_dev_info", scope: !1213, file: !1214, line: 1056, baseType: !1921, size: 64, offset: 10816)
!1921 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1922, size: 64)
!1922 = !DICompositeType(tag: DW_TAG_structure_type, name: "backing_dev_info", file: !1214, line: 40, flags: DIFlagFwdDecl)
!1923 = !DIDerivedType(tag: DW_TAG_member, name: "io_context", scope: !1213, file: !1214, line: 1058, baseType: !1924, size: 64, offset: 10880)
!1924 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1925, size: 64)
!1925 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "io_context", file: !1926, line: 99, size: 704, elements: !1927)
!1926 = !DIFile(filename: "./include/linux/iocontext.h", directory: "/home/lizy2001/genbc/linux")
!1927 = !{!1928, !1929, !1930, !1931, !1932, !1933, !1934, !1953, !1954}
!1928 = !DIDerivedType(tag: DW_TAG_member, name: "refcount", scope: !1925, file: !1926, line: 100, baseType: !767, size: 64)
!1929 = !DIDerivedType(tag: DW_TAG_member, name: "active_ref", scope: !1925, file: !1926, line: 101, baseType: !743, size: 32, offset: 64)
!1930 = !DIDerivedType(tag: DW_TAG_member, name: "nr_tasks", scope: !1925, file: !1926, line: 102, baseType: !743, size: 32, offset: 96)
!1931 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1925, file: !1926, line: 105, baseType: !225, offset: 128)
!1932 = !DIDerivedType(tag: DW_TAG_member, name: "ioprio", scope: !1925, file: !1926, line: 107, baseType: !308, size: 16, offset: 128)
!1933 = !DIDerivedType(tag: DW_TAG_member, name: "icq_tree", scope: !1925, file: !1926, line: 109, baseType: !734, size: 128, offset: 192)
!1934 = !DIDerivedType(tag: DW_TAG_member, name: "icq_hint", scope: !1925, file: !1926, line: 110, baseType: !1935, size: 64, offset: 320)
!1935 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1936, size: 64)
!1936 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "io_cq", file: !1926, line: 73, size: 448, elements: !1937)
!1937 = !{!1938, !1941, !1942, !1947, !1952}
!1938 = !DIDerivedType(tag: DW_TAG_member, name: "q", scope: !1936, file: !1926, line: 74, baseType: !1939, size: 64)
!1939 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1940, size: 64)
!1940 = !DICompositeType(tag: DW_TAG_structure_type, name: "request_queue", file: !1926, line: 74, flags: DIFlagFwdDecl)
!1941 = !DIDerivedType(tag: DW_TAG_member, name: "ioc", scope: !1936, file: !1926, line: 75, baseType: !1924, size: 64, offset: 64)
!1942 = !DIDerivedType(tag: DW_TAG_member, scope: !1936, file: !1926, line: 83, baseType: !1943, size: 128, offset: 128)
!1943 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1936, file: !1926, line: 83, size: 128, elements: !1944)
!1944 = !{!1945, !1946}
!1945 = !DIDerivedType(tag: DW_TAG_member, name: "q_node", scope: !1943, file: !1926, line: 84, baseType: !199, size: 128)
!1946 = !DIDerivedType(tag: DW_TAG_member, name: "__rcu_icq_cache", scope: !1943, file: !1926, line: 85, baseType: !931, size: 64)
!1947 = !DIDerivedType(tag: DW_TAG_member, scope: !1936, file: !1926, line: 87, baseType: !1948, size: 128, offset: 256)
!1948 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1936, file: !1926, line: 87, size: 128, elements: !1949)
!1949 = !{!1950, !1951}
!1950 = !DIDerivedType(tag: DW_TAG_member, name: "ioc_node", scope: !1948, file: !1926, line: 88, baseType: !634, size: 128)
!1951 = !DIDerivedType(tag: DW_TAG_member, name: "__rcu_head", scope: !1948, file: !1926, line: 89, baseType: !357, size: 128, align: 64)
!1952 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1936, file: !1926, line: 92, baseType: !7, size: 32, offset: 384)
!1953 = !DIDerivedType(tag: DW_TAG_member, name: "icq_list", scope: !1925, file: !1926, line: 111, baseType: !630, size: 64, offset: 384)
!1954 = !DIDerivedType(tag: DW_TAG_member, name: "release_work", scope: !1925, file: !1926, line: 113, baseType: !1955, size: 256, offset: 448)
!1955 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "work_struct", file: !137, line: 102, size: 256, elements: !1956)
!1956 = !{!1957, !1958, !1959}
!1957 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1955, file: !137, line: 103, baseType: !767, size: 64)
!1958 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !1955, file: !137, line: 104, baseType: !199, size: 128, offset: 64)
!1959 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !1955, file: !137, line: 105, baseType: !1960, size: 64, offset: 192)
!1960 = !DIDerivedType(tag: DW_TAG_typedef, name: "work_func_t", file: !137, line: 21, baseType: !1961)
!1961 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1962, size: 64)
!1962 = !DISubroutineType(types: !1963)
!1963 = !{null, !1964}
!1964 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1955, size: 64)
!1965 = !DIDerivedType(tag: DW_TAG_member, name: "capture_control", scope: !1213, file: !1214, line: 1061, baseType: !1966, size: 64, offset: 10944)
!1966 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1967, size: 64)
!1967 = !DICompositeType(tag: DW_TAG_structure_type, name: "capture_control", file: !1214, line: 43, flags: DIFlagFwdDecl)
!1968 = !DIDerivedType(tag: DW_TAG_member, name: "ptrace_message", scope: !1213, file: !1214, line: 1064, baseType: !316, size: 64, offset: 11008)
!1969 = !DIDerivedType(tag: DW_TAG_member, name: "last_siginfo", scope: !1213, file: !1214, line: 1065, baseType: !1970, size: 64, offset: 11072)
!1970 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1971, size: 64)
!1971 = !DIDerivedType(tag: DW_TAG_typedef, name: "kernel_siginfo_t", file: !1762, line: 14, baseType: !1972)
!1972 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernel_siginfo", file: !1762, line: 12, size: 384, elements: !1973)
!1973 = !{!1974}
!1974 = !DIDerivedType(tag: DW_TAG_member, scope: !1972, file: !1762, line: 13, baseType: !1975, size: 384)
!1975 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1972, file: !1762, line: 13, size: 384, elements: !1976)
!1976 = !{!1977, !1978, !1979, !1980}
!1977 = !DIDerivedType(tag: DW_TAG_member, name: "si_signo", scope: !1975, file: !1762, line: 13, baseType: !251, size: 32)
!1978 = !DIDerivedType(tag: DW_TAG_member, name: "si_errno", scope: !1975, file: !1762, line: 13, baseType: !251, size: 32, offset: 32)
!1979 = !DIDerivedType(tag: DW_TAG_member, name: "si_code", scope: !1975, file: !1762, line: 13, baseType: !251, size: 32, offset: 64)
!1980 = !DIDerivedType(tag: DW_TAG_member, name: "_sifields", scope: !1975, file: !1762, line: 13, baseType: !1981, size: 256, offset: 128)
!1981 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "__sifields", file: !1982, line: 32, size: 256, elements: !1983)
!1982 = !DIFile(filename: "./include/uapi/asm-generic/siginfo.h", directory: "/home/lizy2001/genbc/linux")
!1983 = !{!1984, !1989, !2002, !2008, !2017, !2037, !2042}
!1984 = !DIDerivedType(tag: DW_TAG_member, name: "_kill", scope: !1981, file: !1982, line: 37, baseType: !1985, size: 64)
!1985 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1981, file: !1982, line: 34, size: 64, elements: !1986)
!1986 = !{!1987, !1988}
!1987 = !DIDerivedType(tag: DW_TAG_member, name: "_pid", scope: !1985, file: !1982, line: 35, baseType: !1456, size: 32)
!1988 = !DIDerivedType(tag: DW_TAG_member, name: "_uid", scope: !1985, file: !1982, line: 36, baseType: !433, size: 32, offset: 32)
!1989 = !DIDerivedType(tag: DW_TAG_member, name: "_timer", scope: !1981, file: !1982, line: 45, baseType: !1990, size: 192)
!1990 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1981, file: !1982, line: 40, size: 192, elements: !1991)
!1991 = !{!1992, !1994, !1995, !2001}
!1992 = !DIDerivedType(tag: DW_TAG_member, name: "_tid", scope: !1990, file: !1982, line: 41, baseType: !1993, size: 32)
!1993 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_timer_t", file: !300, line: 95, baseType: !251)
!1994 = !DIDerivedType(tag: DW_TAG_member, name: "_overrun", scope: !1990, file: !1982, line: 42, baseType: !251, size: 32, offset: 32)
!1995 = !DIDerivedType(tag: DW_TAG_member, name: "_sigval", scope: !1990, file: !1982, line: 43, baseType: !1996, size: 64, offset: 64)
!1996 = !DIDerivedType(tag: DW_TAG_typedef, name: "sigval_t", file: !1982, line: 11, baseType: !1997)
!1997 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "sigval", file: !1982, line: 8, size: 64, elements: !1998)
!1998 = !{!1999, !2000}
!1999 = !DIDerivedType(tag: DW_TAG_member, name: "sival_int", scope: !1997, file: !1982, line: 9, baseType: !251, size: 32)
!2000 = !DIDerivedType(tag: DW_TAG_member, name: "sival_ptr", scope: !1997, file: !1982, line: 10, baseType: !193, size: 64)
!2001 = !DIDerivedType(tag: DW_TAG_member, name: "_sys_private", scope: !1990, file: !1982, line: 44, baseType: !251, size: 32, offset: 128)
!2002 = !DIDerivedType(tag: DW_TAG_member, name: "_rt", scope: !1981, file: !1982, line: 52, baseType: !2003, size: 128)
!2003 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1981, file: !1982, line: 48, size: 128, elements: !2004)
!2004 = !{!2005, !2006, !2007}
!2005 = !DIDerivedType(tag: DW_TAG_member, name: "_pid", scope: !2003, file: !1982, line: 49, baseType: !1456, size: 32)
!2006 = !DIDerivedType(tag: DW_TAG_member, name: "_uid", scope: !2003, file: !1982, line: 50, baseType: !433, size: 32, offset: 32)
!2007 = !DIDerivedType(tag: DW_TAG_member, name: "_sigval", scope: !2003, file: !1982, line: 51, baseType: !1996, size: 64, offset: 64)
!2008 = !DIDerivedType(tag: DW_TAG_member, name: "_sigchld", scope: !1981, file: !1982, line: 61, baseType: !2009, size: 256)
!2009 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1981, file: !1982, line: 55, size: 256, elements: !2010)
!2010 = !{!2011, !2012, !2013, !2014, !2016}
!2011 = !DIDerivedType(tag: DW_TAG_member, name: "_pid", scope: !2009, file: !1982, line: 56, baseType: !1456, size: 32)
!2012 = !DIDerivedType(tag: DW_TAG_member, name: "_uid", scope: !2009, file: !1982, line: 57, baseType: !433, size: 32, offset: 32)
!2013 = !DIDerivedType(tag: DW_TAG_member, name: "_status", scope: !2009, file: !1982, line: 58, baseType: !251, size: 32, offset: 64)
!2014 = !DIDerivedType(tag: DW_TAG_member, name: "_utime", scope: !2009, file: !1982, line: 59, baseType: !2015, size: 64, offset: 128)
!2015 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_clock_t", file: !300, line: 94, baseType: !301)
!2016 = !DIDerivedType(tag: DW_TAG_member, name: "_stime", scope: !2009, file: !1982, line: 60, baseType: !2015, size: 64, offset: 192)
!2017 = !DIDerivedType(tag: DW_TAG_member, name: "_sigfault", scope: !1981, file: !1982, line: 95, baseType: !2018, size: 256)
!2018 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1981, file: !1982, line: 64, size: 256, elements: !2019)
!2019 = !{!2020, !2021}
!2020 = !DIDerivedType(tag: DW_TAG_member, name: "_addr", scope: !2018, file: !1982, line: 65, baseType: !193, size: 64)
!2021 = !DIDerivedType(tag: DW_TAG_member, scope: !2018, file: !1982, line: 77, baseType: !2022, size: 192, offset: 64)
!2022 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2018, file: !1982, line: 77, size: 192, elements: !2023)
!2023 = !{!2024, !2025, !2032}
!2024 = !DIDerivedType(tag: DW_TAG_member, name: "_addr_lsb", scope: !2022, file: !1982, line: 82, baseType: !1201, size: 16)
!2025 = !DIDerivedType(tag: DW_TAG_member, name: "_addr_bnd", scope: !2022, file: !1982, line: 88, baseType: !2026, size: 192)
!2026 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2022, file: !1982, line: 84, size: 192, elements: !2027)
!2027 = !{!2028, !2030, !2031}
!2028 = !DIDerivedType(tag: DW_TAG_member, name: "_dummy_bnd", scope: !2026, file: !1982, line: 85, baseType: !2029, size: 64)
!2029 = !DICompositeType(tag: DW_TAG_array_type, baseType: !215, size: 64, elements: !1326)
!2030 = !DIDerivedType(tag: DW_TAG_member, name: "_lower", scope: !2026, file: !1982, line: 86, baseType: !193, size: 64, offset: 64)
!2031 = !DIDerivedType(tag: DW_TAG_member, name: "_upper", scope: !2026, file: !1982, line: 87, baseType: !193, size: 64, offset: 128)
!2032 = !DIDerivedType(tag: DW_TAG_member, name: "_addr_pkey", scope: !2022, file: !1982, line: 93, baseType: !2033, size: 96)
!2033 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2022, file: !1982, line: 90, size: 96, elements: !2034)
!2034 = !{!2035, !2036}
!2035 = !DIDerivedType(tag: DW_TAG_member, name: "_dummy_pkey", scope: !2033, file: !1982, line: 91, baseType: !2029, size: 64)
!2036 = !DIDerivedType(tag: DW_TAG_member, name: "_pkey", scope: !2033, file: !1982, line: 92, baseType: !409, size: 32, offset: 64)
!2037 = !DIDerivedType(tag: DW_TAG_member, name: "_sigpoll", scope: !1981, file: !1982, line: 101, baseType: !2038, size: 128)
!2038 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1981, file: !1982, line: 98, size: 128, elements: !2039)
!2039 = !{!2040, !2041}
!2040 = !DIDerivedType(tag: DW_TAG_member, name: "_band", scope: !2038, file: !1982, line: 99, baseType: !138, size: 64)
!2041 = !DIDerivedType(tag: DW_TAG_member, name: "_fd", scope: !2038, file: !1982, line: 100, baseType: !251, size: 32, offset: 64)
!2042 = !DIDerivedType(tag: DW_TAG_member, name: "_sigsys", scope: !1981, file: !1982, line: 108, baseType: !2043, size: 128)
!2043 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1981, file: !1982, line: 104, size: 128, elements: !2044)
!2044 = !{!2045, !2046, !2047}
!2045 = !DIDerivedType(tag: DW_TAG_member, name: "_call_addr", scope: !2043, file: !1982, line: 105, baseType: !193, size: 64)
!2046 = !DIDerivedType(tag: DW_TAG_member, name: "_syscall", scope: !2043, file: !1982, line: 106, baseType: !251, size: 32, offset: 64)
!2047 = !DIDerivedType(tag: DW_TAG_member, name: "_arch", scope: !2043, file: !1982, line: 107, baseType: !7, size: 32, offset: 96)
!2048 = !DIDerivedType(tag: DW_TAG_member, name: "ioac", scope: !1213, file: !1214, line: 1067, baseType: !1834, offset: 11136)
!2049 = !DIDerivedType(tag: DW_TAG_member, name: "robust_list", scope: !1213, file: !1214, line: 1099, baseType: !2050, size: 64, offset: 11136)
!2050 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2051, size: 64)
!2051 = !DICompositeType(tag: DW_TAG_structure_type, name: "robust_list_head", file: !1214, line: 56, flags: DIFlagFwdDecl)
!2052 = !DIDerivedType(tag: DW_TAG_member, name: "pi_state_list", scope: !1213, file: !1214, line: 1103, baseType: !199, size: 128, offset: 11200)
!2053 = !DIDerivedType(tag: DW_TAG_member, name: "pi_state_cache", scope: !1213, file: !1214, line: 1104, baseType: !2054, size: 64, offset: 11328)
!2054 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2055, size: 64)
!2055 = !DICompositeType(tag: DW_TAG_structure_type, name: "futex_pi_state", file: !1214, line: 46, flags: DIFlagFwdDecl)
!2056 = !DIDerivedType(tag: DW_TAG_member, name: "futex_exit_mutex", scope: !1213, file: !1214, line: 1105, baseType: !1169, size: 192, offset: 11392)
!2057 = !DIDerivedType(tag: DW_TAG_member, name: "futex_state", scope: !1213, file: !1214, line: 1106, baseType: !7, size: 32, offset: 11584)
!2058 = !DIDerivedType(tag: DW_TAG_member, name: "perf_event_ctxp", scope: !1213, file: !1214, line: 1109, baseType: !2059, size: 128, offset: 11648)
!2059 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2060, size: 128, elements: !1565)
!2060 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2061, size: 64)
!2061 = !DICompositeType(tag: DW_TAG_structure_type, name: "perf_event_context", file: !1214, line: 51, flags: DIFlagFwdDecl)
!2062 = !DIDerivedType(tag: DW_TAG_member, name: "perf_event_mutex", scope: !1213, file: !1214, line: 1110, baseType: !1169, size: 192, offset: 11776)
!2063 = !DIDerivedType(tag: DW_TAG_member, name: "perf_event_list", scope: !1213, file: !1214, line: 1111, baseType: !199, size: 128, offset: 11968)
!2064 = !DIDerivedType(tag: DW_TAG_member, name: "rseq", scope: !1213, file: !1214, line: 1173, baseType: !2065, size: 64, offset: 12096)
!2065 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2066, size: 64)
!2066 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rseq", file: !2067, line: 62, size: 256, align: 256, elements: !2068)
!2067 = !DIFile(filename: "./include/uapi/linux/rseq.h", directory: "/home/lizy2001/genbc/linux")
!2068 = !{!2069, !2070, !2071, !2076}
!2069 = !DIDerivedType(tag: DW_TAG_member, name: "cpu_id_start", scope: !2066, file: !2067, line: 75, baseType: !409, size: 32)
!2070 = !DIDerivedType(tag: DW_TAG_member, name: "cpu_id", scope: !2066, file: !2067, line: 90, baseType: !409, size: 32, offset: 32)
!2071 = !DIDerivedType(tag: DW_TAG_member, name: "rseq_cs", scope: !2066, file: !2067, line: 124, baseType: !2072, size: 64, offset: 64)
!2072 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2066, file: !2067, line: 109, size: 64, elements: !2073)
!2073 = !{!2074, !2075}
!2074 = !DIDerivedType(tag: DW_TAG_member, name: "ptr64", scope: !2072, file: !2067, line: 110, baseType: !414, size: 64)
!2075 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !2072, file: !2067, line: 112, baseType: !414, size: 64)
!2076 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2066, file: !2067, line: 144, baseType: !409, size: 32, offset: 128)
!2077 = !DIDerivedType(tag: DW_TAG_member, name: "rseq_sig", scope: !1213, file: !1214, line: 1174, baseType: !407, size: 32, offset: 12160)
!2078 = !DIDerivedType(tag: DW_TAG_member, name: "rseq_event_mask", scope: !1213, file: !1214, line: 1179, baseType: !316, size: 64, offset: 12224)
!2079 = !DIDerivedType(tag: DW_TAG_member, name: "tlb_ubc", scope: !1213, file: !1214, line: 1182, baseType: !2080, size: 128, offset: 12288)
!2080 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tlbflush_unmap_batch", file: !1147, line: 76, size: 128, elements: !2081)
!2081 = !{!2082, !2087, !2088}
!2082 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !2080, file: !1147, line: 85, baseType: !2083, size: 64)
!2083 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arch_tlbflush_unmap_batch", file: !2084, line: 7, size: 64, elements: !2085)
!2084 = !DIFile(filename: "./arch/x86/include/asm/tlbbatch.h", directory: "/home/lizy2001/genbc/linux")
!2085 = !{!2086}
!2086 = !DIDerivedType(tag: DW_TAG_member, name: "cpumask", scope: !2083, file: !2084, line: 12, baseType: !1363, size: 64)
!2087 = !DIDerivedType(tag: DW_TAG_member, name: "flush_required", scope: !2080, file: !1147, line: 88, baseType: !482, size: 8, offset: 64)
!2088 = !DIDerivedType(tag: DW_TAG_member, name: "writable", scope: !2080, file: !1147, line: 95, baseType: !482, size: 8, offset: 72)
!2089 = !DIDerivedType(tag: DW_TAG_member, scope: !1213, file: !1214, line: 1184, baseType: !2090, size: 128, offset: 12416)
!2090 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1213, file: !1214, line: 1184, size: 128, elements: !2091)
!2091 = !{!2092, !2093}
!2092 = !DIDerivedType(tag: DW_TAG_member, name: "rcu_users", scope: !2090, file: !1214, line: 1185, baseType: !1226, size: 32)
!2093 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !2090, file: !1214, line: 1186, baseType: !357, size: 128, align: 64)
!2094 = !DIDerivedType(tag: DW_TAG_member, name: "splice_pipe", scope: !1213, file: !1214, line: 1190, baseType: !2095, size: 64, offset: 12544)
!2095 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2096, size: 64)
!2096 = !DICompositeType(tag: DW_TAG_structure_type, name: "pipe_inode_info", file: !1214, line: 53, flags: DIFlagFwdDecl)
!2097 = !DIDerivedType(tag: DW_TAG_member, name: "task_frag", scope: !1213, file: !1214, line: 1192, baseType: !2098, size: 128, offset: 12608)
!2098 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "page_frag", file: !1147, line: 64, size: 128, elements: !2099)
!2099 = !{!2100, !2101, !2102}
!2100 = !DIDerivedType(tag: DW_TAG_member, name: "page", scope: !2098, file: !1147, line: 65, baseType: !716, size: 64)
!2101 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !2098, file: !1147, line: 67, baseType: !409, size: 32, offset: 64)
!2102 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2098, file: !1147, line: 68, baseType: !409, size: 32, offset: 96)
!2103 = !DIDerivedType(tag: DW_TAG_member, name: "nr_dirtied", scope: !1213, file: !1214, line: 1206, baseType: !251, size: 32, offset: 12736)
!2104 = !DIDerivedType(tag: DW_TAG_member, name: "nr_dirtied_pause", scope: !1213, file: !1214, line: 1207, baseType: !251, size: 32, offset: 12768)
!2105 = !DIDerivedType(tag: DW_TAG_member, name: "dirty_paused_when", scope: !1213, file: !1214, line: 1209, baseType: !316, size: 64, offset: 12800)
!2106 = !DIDerivedType(tag: DW_TAG_member, name: "timer_slack_ns", scope: !1213, file: !1214, line: 1219, baseType: !413, size: 64, offset: 12864)
!2107 = !DIDerivedType(tag: DW_TAG_member, name: "default_timer_slack_ns", scope: !1213, file: !1214, line: 1220, baseType: !413, size: 64, offset: 12928)
!2108 = !DIDerivedType(tag: DW_TAG_member, name: "pagefault_disabled", scope: !1213, file: !1214, line: 1317, baseType: !251, size: 32, offset: 12992)
!2109 = !DIDerivedType(tag: DW_TAG_member, name: "oom_reaper_list", scope: !1213, file: !1214, line: 1319, baseType: !1212, size: 64, offset: 13056)
!2110 = !DIDerivedType(tag: DW_TAG_member, name: "stack_vm_area", scope: !1213, file: !1214, line: 1322, baseType: !2111, size: 64, offset: 13120)
!2111 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2112, size: 64)
!2112 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vm_struct", file: !2113, line: 56, size: 512, elements: !2114)
!2113 = !DIFile(filename: "./include/linux/vmalloc.h", directory: "/home/lizy2001/genbc/linux")
!2114 = !{!2115, !2116, !2117, !2118, !2119, !2120, !2121, !2123}
!2115 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2112, file: !2113, line: 57, baseType: !2111, size: 64)
!2116 = !DIDerivedType(tag: DW_TAG_member, name: "addr", scope: !2112, file: !2113, line: 58, baseType: !193, size: 64, offset: 64)
!2117 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2112, file: !2113, line: 59, baseType: !316, size: 64, offset: 128)
!2118 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2112, file: !2113, line: 60, baseType: !316, size: 64, offset: 192)
!2119 = !DIDerivedType(tag: DW_TAG_member, name: "pages", scope: !2112, file: !2113, line: 61, baseType: !816, size: 64, offset: 256)
!2120 = !DIDerivedType(tag: DW_TAG_member, name: "nr_pages", scope: !2112, file: !2113, line: 62, baseType: !7, size: 32, offset: 320)
!2121 = !DIDerivedType(tag: DW_TAG_member, name: "phys_addr", scope: !2112, file: !2113, line: 63, baseType: !2122, size: 64, offset: 384)
!2122 = !DIDerivedType(tag: DW_TAG_typedef, name: "phys_addr_t", file: !200, line: 153, baseType: !413)
!2123 = !DIDerivedType(tag: DW_TAG_member, name: "caller", scope: !2112, file: !2113, line: 64, baseType: !2124, size: 64, offset: 448)
!2124 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2125, size: 64)
!2125 = !DIDerivedType(tag: DW_TAG_const_type, baseType: null)
!2126 = !DIDerivedType(tag: DW_TAG_member, name: "stack_refcount", scope: !1213, file: !1214, line: 1326, baseType: !1226, size: 32, offset: 13184)
!2127 = !DIDerivedType(tag: DW_TAG_member, name: "mce_vaddr", scope: !1213, file: !1214, line: 1342, baseType: !193, size: 64, offset: 13248)
!2128 = !DIDerivedType(tag: DW_TAG_member, name: "mce_kflags", scope: !1213, file: !1214, line: 1343, baseType: !414, size: 64, offset: 13312)
!2129 = !DIDerivedType(tag: DW_TAG_member, name: "mce_addr", scope: !1213, file: !1214, line: 1344, baseType: !413, size: 64, offset: 13376)
!2130 = !DIDerivedType(tag: DW_TAG_member, name: "mce_ripv", scope: !1213, file: !1214, line: 1345, baseType: !414, size: 1, offset: 13440, flags: DIFlagBitField, extraData: i64 13440)
!2131 = !DIDerivedType(tag: DW_TAG_member, name: "mce_whole_page", scope: !1213, file: !1214, line: 1346, baseType: !414, size: 1, offset: 13441, flags: DIFlagBitField, extraData: i64 13440)
!2132 = !DIDerivedType(tag: DW_TAG_member, name: "__mce_reserved", scope: !1213, file: !1214, line: 1347, baseType: !414, size: 62, offset: 13442, flags: DIFlagBitField, extraData: i64 13440)
!2133 = !DIDerivedType(tag: DW_TAG_member, name: "mce_kill_me", scope: !1213, file: !1214, line: 1348, baseType: !357, size: 128, align: 64, offset: 13504)
!2134 = !DIDerivedType(tag: DW_TAG_member, name: "thread", scope: !1213, file: !1214, line: 1358, baseType: !2135, size: 34816, offset: 13824)
!2135 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "thread_struct", file: !2136, line: 485, size: 34816, elements: !2137)
!2136 = !DIFile(filename: "./arch/x86/include/asm/processor.h", directory: "/home/lizy2001/genbc/linux")
!2137 = !{!2138, !2156, !2157, !2158, !2159, !2160, !2161, !2162, !2163, !2167, !2168, !2169, !2170, !2171, !2172, !2175, !2176, !2177}
!2138 = !DIDerivedType(tag: DW_TAG_member, name: "tls_array", scope: !2135, file: !2136, line: 487, baseType: !2139, size: 192)
!2139 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2140, size: 192, elements: !268)
!2140 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "desc_struct", file: !2141, line: 16, size: 64, elements: !2142)
!2141 = !DIFile(filename: "./arch/x86/include/asm/desc_defs.h", directory: "/home/lizy2001/genbc/linux")
!2142 = !{!2143, !2144, !2145, !2146, !2147, !2148, !2149, !2150, !2151, !2152, !2153, !2154, !2155}
!2143 = !DIDerivedType(tag: DW_TAG_member, name: "limit0", scope: !2140, file: !2141, line: 17, baseType: !855, size: 16)
!2144 = !DIDerivedType(tag: DW_TAG_member, name: "base0", scope: !2140, file: !2141, line: 18, baseType: !855, size: 16, offset: 16)
!2145 = !DIDerivedType(tag: DW_TAG_member, name: "base1", scope: !2140, file: !2141, line: 19, baseType: !855, size: 8, offset: 32, flags: DIFlagBitField, extraData: i64 32)
!2146 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2140, file: !2141, line: 19, baseType: !855, size: 4, offset: 40, flags: DIFlagBitField, extraData: i64 32)
!2147 = !DIDerivedType(tag: DW_TAG_member, name: "s", scope: !2140, file: !2141, line: 19, baseType: !855, size: 1, offset: 44, flags: DIFlagBitField, extraData: i64 32)
!2148 = !DIDerivedType(tag: DW_TAG_member, name: "dpl", scope: !2140, file: !2141, line: 19, baseType: !855, size: 2, offset: 45, flags: DIFlagBitField, extraData: i64 32)
!2149 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !2140, file: !2141, line: 19, baseType: !855, size: 1, offset: 47, flags: DIFlagBitField, extraData: i64 32)
!2150 = !DIDerivedType(tag: DW_TAG_member, name: "limit1", scope: !2140, file: !2141, line: 20, baseType: !855, size: 4, offset: 48, flags: DIFlagBitField, extraData: i64 32)
!2151 = !DIDerivedType(tag: DW_TAG_member, name: "avl", scope: !2140, file: !2141, line: 20, baseType: !855, size: 1, offset: 52, flags: DIFlagBitField, extraData: i64 32)
!2152 = !DIDerivedType(tag: DW_TAG_member, name: "l", scope: !2140, file: !2141, line: 20, baseType: !855, size: 1, offset: 53, flags: DIFlagBitField, extraData: i64 32)
!2153 = !DIDerivedType(tag: DW_TAG_member, name: "d", scope: !2140, file: !2141, line: 20, baseType: !855, size: 1, offset: 54, flags: DIFlagBitField, extraData: i64 32)
!2154 = !DIDerivedType(tag: DW_TAG_member, name: "g", scope: !2140, file: !2141, line: 20, baseType: !855, size: 1, offset: 55, flags: DIFlagBitField, extraData: i64 32)
!2155 = !DIDerivedType(tag: DW_TAG_member, name: "base2", scope: !2140, file: !2141, line: 20, baseType: !855, size: 8, offset: 56, flags: DIFlagBitField, extraData: i64 32)
!2156 = !DIDerivedType(tag: DW_TAG_member, name: "sp", scope: !2135, file: !2136, line: 491, baseType: !316, size: 64, offset: 192)
!2157 = !DIDerivedType(tag: DW_TAG_member, name: "es", scope: !2135, file: !2136, line: 495, baseType: !308, size: 16, offset: 256)
!2158 = !DIDerivedType(tag: DW_TAG_member, name: "ds", scope: !2135, file: !2136, line: 496, baseType: !308, size: 16, offset: 272)
!2159 = !DIDerivedType(tag: DW_TAG_member, name: "fsindex", scope: !2135, file: !2136, line: 497, baseType: !308, size: 16, offset: 288)
!2160 = !DIDerivedType(tag: DW_TAG_member, name: "gsindex", scope: !2135, file: !2136, line: 498, baseType: !308, size: 16, offset: 304)
!2161 = !DIDerivedType(tag: DW_TAG_member, name: "fsbase", scope: !2135, file: !2136, line: 502, baseType: !316, size: 64, offset: 320)
!2162 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !2135, file: !2136, line: 503, baseType: !316, size: 64, offset: 384)
!2163 = !DIDerivedType(tag: DW_TAG_member, name: "ptrace_bps", scope: !2135, file: !2136, line: 514, baseType: !2164, size: 256, offset: 448)
!2164 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2165, size: 256, elements: !1151)
!2165 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2166, size: 64)
!2166 = !DICompositeType(tag: DW_TAG_structure_type, name: "perf_event", file: !2136, line: 483, flags: DIFlagFwdDecl)
!2167 = !DIDerivedType(tag: DW_TAG_member, name: "virtual_dr6", scope: !2135, file: !2136, line: 516, baseType: !316, size: 64, offset: 704)
!2168 = !DIDerivedType(tag: DW_TAG_member, name: "ptrace_dr7", scope: !2135, file: !2136, line: 518, baseType: !316, size: 64, offset: 768)
!2169 = !DIDerivedType(tag: DW_TAG_member, name: "cr2", scope: !2135, file: !2136, line: 520, baseType: !316, size: 64, offset: 832)
!2170 = !DIDerivedType(tag: DW_TAG_member, name: "trap_nr", scope: !2135, file: !2136, line: 521, baseType: !316, size: 64, offset: 896)
!2171 = !DIDerivedType(tag: DW_TAG_member, name: "error_code", scope: !2135, file: !2136, line: 522, baseType: !316, size: 64, offset: 960)
!2172 = !DIDerivedType(tag: DW_TAG_member, name: "io_bitmap", scope: !2135, file: !2136, line: 528, baseType: !2173, size: 64, offset: 1024)
!2173 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2174, size: 64)
!2174 = !DICompositeType(tag: DW_TAG_structure_type, name: "io_bitmap", file: !2136, line: 10, flags: DIFlagFwdDecl)
!2175 = !DIDerivedType(tag: DW_TAG_member, name: "iopl_emul", scope: !2135, file: !2136, line: 535, baseType: !316, size: 64, offset: 1088)
!2176 = !DIDerivedType(tag: DW_TAG_member, name: "sig_on_uaccess_err", scope: !2135, file: !2136, line: 537, baseType: !7, size: 1, offset: 1152, flags: DIFlagBitField, extraData: i64 1152)
!2177 = !DIDerivedType(tag: DW_TAG_member, name: "fpu", scope: !2135, file: !2136, line: 540, baseType: !2178, size: 33280, offset: 1536)
!2178 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fpu", file: !2179, line: 317, size: 33280, elements: !2180)
!2179 = !DIFile(filename: "./arch/x86/include/asm/fpu/types.h", directory: "/home/lizy2001/genbc/linux")
!2180 = !{!2181, !2182, !2183}
!2181 = !DIDerivedType(tag: DW_TAG_member, name: "last_cpu", scope: !2178, file: !2179, line: 330, baseType: !7, size: 32)
!2182 = !DIDerivedType(tag: DW_TAG_member, name: "avx512_timestamp", scope: !2178, file: !2179, line: 337, baseType: !316, size: 64, offset: 64)
!2183 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !2178, file: !2179, line: 348, baseType: !2184, size: 32768, offset: 512)
!2184 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "fpregs_state", file: !2179, line: 304, size: 32768, elements: !2185)
!2185 = !{!2186, !2201, !2240, !2290, !2303}
!2186 = !DIDerivedType(tag: DW_TAG_member, name: "fsave", scope: !2184, file: !2179, line: 305, baseType: !2187, size: 896)
!2187 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fregs_state", file: !2179, line: 12, size: 896, elements: !2188)
!2188 = !{!2189, !2190, !2191, !2192, !2193, !2194, !2195, !2196, !2200}
!2189 = !DIDerivedType(tag: DW_TAG_member, name: "cwd", scope: !2187, file: !2179, line: 13, baseType: !407, size: 32)
!2190 = !DIDerivedType(tag: DW_TAG_member, name: "swd", scope: !2187, file: !2179, line: 14, baseType: !407, size: 32, offset: 32)
!2191 = !DIDerivedType(tag: DW_TAG_member, name: "twd", scope: !2187, file: !2179, line: 15, baseType: !407, size: 32, offset: 64)
!2192 = !DIDerivedType(tag: DW_TAG_member, name: "fip", scope: !2187, file: !2179, line: 16, baseType: !407, size: 32, offset: 96)
!2193 = !DIDerivedType(tag: DW_TAG_member, name: "fcs", scope: !2187, file: !2179, line: 17, baseType: !407, size: 32, offset: 128)
!2194 = !DIDerivedType(tag: DW_TAG_member, name: "foo", scope: !2187, file: !2179, line: 18, baseType: !407, size: 32, offset: 160)
!2195 = !DIDerivedType(tag: DW_TAG_member, name: "fos", scope: !2187, file: !2179, line: 19, baseType: !407, size: 32, offset: 192)
!2196 = !DIDerivedType(tag: DW_TAG_member, name: "st_space", scope: !2187, file: !2179, line: 22, baseType: !2197, size: 640, offset: 224)
!2197 = !DICompositeType(tag: DW_TAG_array_type, baseType: !407, size: 640, elements: !2198)
!2198 = !{!2199}
!2199 = !DISubrange(count: 20)
!2200 = !DIDerivedType(tag: DW_TAG_member, name: "status", scope: !2187, file: !2179, line: 25, baseType: !407, size: 32, offset: 864)
!2201 = !DIDerivedType(tag: DW_TAG_member, name: "fxsave", scope: !2184, file: !2179, line: 306, baseType: !2202, size: 4096, align: 128)
!2202 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fxregs_state", file: !2179, line: 34, size: 4096, align: 128, elements: !2203)
!2203 = !{!2204, !2205, !2206, !2207, !2208, !2223, !2224, !2225, !2229, !2231, !2235}
!2204 = !DIDerivedType(tag: DW_TAG_member, name: "cwd", scope: !2202, file: !2179, line: 35, baseType: !855, size: 16)
!2205 = !DIDerivedType(tag: DW_TAG_member, name: "swd", scope: !2202, file: !2179, line: 36, baseType: !855, size: 16, offset: 16)
!2206 = !DIDerivedType(tag: DW_TAG_member, name: "twd", scope: !2202, file: !2179, line: 37, baseType: !855, size: 16, offset: 32)
!2207 = !DIDerivedType(tag: DW_TAG_member, name: "fop", scope: !2202, file: !2179, line: 38, baseType: !855, size: 16, offset: 48)
!2208 = !DIDerivedType(tag: DW_TAG_member, scope: !2202, file: !2179, line: 39, baseType: !2209, size: 128, offset: 64)
!2209 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2202, file: !2179, line: 39, size: 128, elements: !2210)
!2210 = !{!2211, !2216}
!2211 = !DIDerivedType(tag: DW_TAG_member, scope: !2209, file: !2179, line: 40, baseType: !2212, size: 128)
!2212 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2209, file: !2179, line: 40, size: 128, elements: !2213)
!2213 = !{!2214, !2215}
!2214 = !DIDerivedType(tag: DW_TAG_member, name: "rip", scope: !2212, file: !2179, line: 41, baseType: !413, size: 64)
!2215 = !DIDerivedType(tag: DW_TAG_member, name: "rdp", scope: !2212, file: !2179, line: 42, baseType: !413, size: 64, offset: 64)
!2216 = !DIDerivedType(tag: DW_TAG_member, scope: !2209, file: !2179, line: 44, baseType: !2217, size: 128)
!2217 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2209, file: !2179, line: 44, size: 128, elements: !2218)
!2218 = !{!2219, !2220, !2221, !2222}
!2219 = !DIDerivedType(tag: DW_TAG_member, name: "fip", scope: !2217, file: !2179, line: 45, baseType: !407, size: 32)
!2220 = !DIDerivedType(tag: DW_TAG_member, name: "fcs", scope: !2217, file: !2179, line: 46, baseType: !407, size: 32, offset: 32)
!2221 = !DIDerivedType(tag: DW_TAG_member, name: "foo", scope: !2217, file: !2179, line: 47, baseType: !407, size: 32, offset: 64)
!2222 = !DIDerivedType(tag: DW_TAG_member, name: "fos", scope: !2217, file: !2179, line: 48, baseType: !407, size: 32, offset: 96)
!2223 = !DIDerivedType(tag: DW_TAG_member, name: "mxcsr", scope: !2202, file: !2179, line: 51, baseType: !407, size: 32, offset: 192)
!2224 = !DIDerivedType(tag: DW_TAG_member, name: "mxcsr_mask", scope: !2202, file: !2179, line: 52, baseType: !407, size: 32, offset: 224)
!2225 = !DIDerivedType(tag: DW_TAG_member, name: "st_space", scope: !2202, file: !2179, line: 55, baseType: !2226, size: 1024, offset: 256)
!2226 = !DICompositeType(tag: DW_TAG_array_type, baseType: !407, size: 1024, elements: !2227)
!2227 = !{!2228}
!2228 = !DISubrange(count: 32)
!2229 = !DIDerivedType(tag: DW_TAG_member, name: "xmm_space", scope: !2202, file: !2179, line: 58, baseType: !2230, size: 2048, offset: 1280)
!2230 = !DICompositeType(tag: DW_TAG_array_type, baseType: !407, size: 2048, elements: !272)
!2231 = !DIDerivedType(tag: DW_TAG_member, name: "padding", scope: !2202, file: !2179, line: 60, baseType: !2232, size: 384, offset: 3328)
!2232 = !DICompositeType(tag: DW_TAG_array_type, baseType: !407, size: 384, elements: !2233)
!2233 = !{!2234}
!2234 = !DISubrange(count: 12)
!2235 = !DIDerivedType(tag: DW_TAG_member, scope: !2202, file: !2179, line: 62, baseType: !2236, size: 384, offset: 3712)
!2236 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2202, file: !2179, line: 62, size: 384, elements: !2237)
!2237 = !{!2238, !2239}
!2238 = !DIDerivedType(tag: DW_TAG_member, name: "padding1", scope: !2236, file: !2179, line: 63, baseType: !2232, size: 384)
!2239 = !DIDerivedType(tag: DW_TAG_member, name: "sw_reserved", scope: !2236, file: !2179, line: 64, baseType: !2232, size: 384)
!2240 = !DIDerivedType(tag: DW_TAG_member, name: "soft", scope: !2184, file: !2179, line: 307, baseType: !2241, size: 1088)
!2241 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "swregs_state", file: !2179, line: 79, size: 1088, elements: !2242)
!2242 = !{!2243, !2244, !2245, !2246, !2247, !2248, !2249, !2250, !2251, !2252, !2253, !2254, !2255, !2256, !2257, !2289}
!2243 = !DIDerivedType(tag: DW_TAG_member, name: "cwd", scope: !2241, file: !2179, line: 80, baseType: !407, size: 32)
!2244 = !DIDerivedType(tag: DW_TAG_member, name: "swd", scope: !2241, file: !2179, line: 81, baseType: !407, size: 32, offset: 32)
!2245 = !DIDerivedType(tag: DW_TAG_member, name: "twd", scope: !2241, file: !2179, line: 82, baseType: !407, size: 32, offset: 64)
!2246 = !DIDerivedType(tag: DW_TAG_member, name: "fip", scope: !2241, file: !2179, line: 83, baseType: !407, size: 32, offset: 96)
!2247 = !DIDerivedType(tag: DW_TAG_member, name: "fcs", scope: !2241, file: !2179, line: 84, baseType: !407, size: 32, offset: 128)
!2248 = !DIDerivedType(tag: DW_TAG_member, name: "foo", scope: !2241, file: !2179, line: 85, baseType: !407, size: 32, offset: 160)
!2249 = !DIDerivedType(tag: DW_TAG_member, name: "fos", scope: !2241, file: !2179, line: 86, baseType: !407, size: 32, offset: 192)
!2250 = !DIDerivedType(tag: DW_TAG_member, name: "st_space", scope: !2241, file: !2179, line: 88, baseType: !2197, size: 640, offset: 224)
!2251 = !DIDerivedType(tag: DW_TAG_member, name: "ftop", scope: !2241, file: !2179, line: 89, baseType: !1348, size: 8, offset: 864)
!2252 = !DIDerivedType(tag: DW_TAG_member, name: "changed", scope: !2241, file: !2179, line: 90, baseType: !1348, size: 8, offset: 872)
!2253 = !DIDerivedType(tag: DW_TAG_member, name: "lookahead", scope: !2241, file: !2179, line: 91, baseType: !1348, size: 8, offset: 880)
!2254 = !DIDerivedType(tag: DW_TAG_member, name: "no_update", scope: !2241, file: !2179, line: 92, baseType: !1348, size: 8, offset: 888)
!2255 = !DIDerivedType(tag: DW_TAG_member, name: "rm", scope: !2241, file: !2179, line: 93, baseType: !1348, size: 8, offset: 896)
!2256 = !DIDerivedType(tag: DW_TAG_member, name: "alimit", scope: !2241, file: !2179, line: 94, baseType: !1348, size: 8, offset: 904)
!2257 = !DIDerivedType(tag: DW_TAG_member, name: "info", scope: !2241, file: !2179, line: 95, baseType: !2258, size: 64, offset: 960)
!2258 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2259, size: 64)
!2259 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "math_emu_info", file: !2260, line: 11, size: 128, elements: !2261)
!2260 = !DIFile(filename: "./arch/x86/include/asm/math_emu.h", directory: "/home/lizy2001/genbc/linux")
!2261 = !{!2262, !2263}
!2262 = !DIDerivedType(tag: DW_TAG_member, name: "___orig_eip", scope: !2259, file: !2260, line: 12, baseType: !138, size: 64)
!2263 = !DIDerivedType(tag: DW_TAG_member, name: "regs", scope: !2259, file: !2260, line: 13, baseType: !2264, size: 64, offset: 64)
!2264 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2265, size: 64)
!2265 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pt_regs", file: !2266, line: 56, size: 1344, elements: !2267)
!2266 = !DIFile(filename: "./arch/x86/include/asm/ptrace.h", directory: "/home/lizy2001/genbc/linux")
!2267 = !{!2268, !2269, !2270, !2271, !2272, !2273, !2274, !2275, !2276, !2277, !2278, !2279, !2280, !2281, !2282, !2283, !2284, !2285, !2286, !2287, !2288}
!2268 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !2265, file: !2266, line: 61, baseType: !316, size: 64)
!2269 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !2265, file: !2266, line: 62, baseType: !316, size: 64, offset: 64)
!2270 = !DIDerivedType(tag: DW_TAG_member, name: "r13", scope: !2265, file: !2266, line: 63, baseType: !316, size: 64, offset: 128)
!2271 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !2265, file: !2266, line: 64, baseType: !316, size: 64, offset: 192)
!2272 = !DIDerivedType(tag: DW_TAG_member, name: "bp", scope: !2265, file: !2266, line: 65, baseType: !316, size: 64, offset: 256)
!2273 = !DIDerivedType(tag: DW_TAG_member, name: "bx", scope: !2265, file: !2266, line: 66, baseType: !316, size: 64, offset: 320)
!2274 = !DIDerivedType(tag: DW_TAG_member, name: "r11", scope: !2265, file: !2266, line: 68, baseType: !316, size: 64, offset: 384)
!2275 = !DIDerivedType(tag: DW_TAG_member, name: "r10", scope: !2265, file: !2266, line: 69, baseType: !316, size: 64, offset: 448)
!2276 = !DIDerivedType(tag: DW_TAG_member, name: "r9", scope: !2265, file: !2266, line: 70, baseType: !316, size: 64, offset: 512)
!2277 = !DIDerivedType(tag: DW_TAG_member, name: "r8", scope: !2265, file: !2266, line: 71, baseType: !316, size: 64, offset: 576)
!2278 = !DIDerivedType(tag: DW_TAG_member, name: "ax", scope: !2265, file: !2266, line: 72, baseType: !316, size: 64, offset: 640)
!2279 = !DIDerivedType(tag: DW_TAG_member, name: "cx", scope: !2265, file: !2266, line: 73, baseType: !316, size: 64, offset: 704)
!2280 = !DIDerivedType(tag: DW_TAG_member, name: "dx", scope: !2265, file: !2266, line: 74, baseType: !316, size: 64, offset: 768)
!2281 = !DIDerivedType(tag: DW_TAG_member, name: "si", scope: !2265, file: !2266, line: 75, baseType: !316, size: 64, offset: 832)
!2282 = !DIDerivedType(tag: DW_TAG_member, name: "di", scope: !2265, file: !2266, line: 76, baseType: !316, size: 64, offset: 896)
!2283 = !DIDerivedType(tag: DW_TAG_member, name: "orig_ax", scope: !2265, file: !2266, line: 81, baseType: !316, size: 64, offset: 960)
!2284 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !2265, file: !2266, line: 83, baseType: !316, size: 64, offset: 1024)
!2285 = !DIDerivedType(tag: DW_TAG_member, name: "cs", scope: !2265, file: !2266, line: 84, baseType: !316, size: 64, offset: 1088)
!2286 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2265, file: !2266, line: 85, baseType: !316, size: 64, offset: 1152)
!2287 = !DIDerivedType(tag: DW_TAG_member, name: "sp", scope: !2265, file: !2266, line: 86, baseType: !316, size: 64, offset: 1216)
!2288 = !DIDerivedType(tag: DW_TAG_member, name: "ss", scope: !2265, file: !2266, line: 87, baseType: !316, size: 64, offset: 1280)
!2289 = !DIDerivedType(tag: DW_TAG_member, name: "entry_eip", scope: !2241, file: !2179, line: 96, baseType: !407, size: 32, offset: 1024)
!2290 = !DIDerivedType(tag: DW_TAG_member, name: "xsave", scope: !2184, file: !2179, line: 308, baseType: !2291, size: 4608, align: 512)
!2291 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xregs_state", file: !2179, line: 289, size: 4608, align: 512, elements: !2292)
!2292 = !{!2293, !2294, !2301}
!2293 = !DIDerivedType(tag: DW_TAG_member, name: "i387", scope: !2291, file: !2179, line: 290, baseType: !2202, size: 4096, align: 128)
!2294 = !DIDerivedType(tag: DW_TAG_member, name: "header", scope: !2291, file: !2179, line: 291, baseType: !2295, size: 512, offset: 4096)
!2295 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xstate_header", file: !2179, line: 268, size: 512, elements: !2296)
!2296 = !{!2297, !2298, !2299}
!2297 = !DIDerivedType(tag: DW_TAG_member, name: "xfeatures", scope: !2295, file: !2179, line: 269, baseType: !413, size: 64)
!2298 = !DIDerivedType(tag: DW_TAG_member, name: "xcomp_bv", scope: !2295, file: !2179, line: 270, baseType: !413, size: 64, offset: 64)
!2299 = !DIDerivedType(tag: DW_TAG_member, name: "reserved", scope: !2295, file: !2179, line: 271, baseType: !2300, size: 384, offset: 128)
!2300 = !DICompositeType(tag: DW_TAG_array_type, baseType: !413, size: 384, elements: !1621)
!2301 = !DIDerivedType(tag: DW_TAG_member, name: "extended_state_area", scope: !2291, file: !2179, line: 292, baseType: !2302, offset: 4608)
!2302 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1348, elements: !1719)
!2303 = !DIDerivedType(tag: DW_TAG_member, name: "__padding", scope: !2184, file: !2179, line: 309, baseType: !2304, size: 32768)
!2304 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1348, size: 32768, elements: !2305)
!2305 = !{!2306}
!2306 = !DISubrange(count: 4096)
!2307 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1209, file: !718, line: 378, baseType: !2308, size: 64, offset: 64)
!2308 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1209, size: 64)
!2309 = !DIDerivedType(tag: DW_TAG_member, name: "startup", scope: !1205, file: !718, line: 384, baseType: !1498, size: 192, offset: 192)
!2310 = !DIDerivedType(tag: DW_TAG_member, name: "ioctx_lock", scope: !974, file: !718, line: 500, baseType: !225, offset: 6656)
!2311 = !DIDerivedType(tag: DW_TAG_member, name: "ioctx_table", scope: !974, file: !718, line: 501, baseType: !2312, size: 64, offset: 6656)
!2312 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2313, size: 64)
!2313 = !DICompositeType(tag: DW_TAG_structure_type, name: "kioctx_table", file: !718, line: 387, flags: DIFlagFwdDecl)
!2314 = !DIDerivedType(tag: DW_TAG_member, name: "user_ns", scope: !974, file: !718, line: 516, baseType: !1709, size: 64, offset: 6720)
!2315 = !DIDerivedType(tag: DW_TAG_member, name: "exe_file", scope: !974, file: !718, line: 519, baseType: !344, size: 64, offset: 6784)
!2316 = !DIDerivedType(tag: DW_TAG_member, name: "notifier_subscriptions", scope: !974, file: !718, line: 521, baseType: !2317, size: 64, offset: 6848)
!2317 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2318, size: 64)
!2318 = !DICompositeType(tag: DW_TAG_structure_type, name: "mmu_notifier_subscriptions", file: !718, line: 521, flags: DIFlagFwdDecl)
!2319 = !DIDerivedType(tag: DW_TAG_member, name: "tlb_flush_pending", scope: !974, file: !718, line: 545, baseType: !743, size: 32, offset: 6912)
!2320 = !DIDerivedType(tag: DW_TAG_member, name: "tlb_flush_batched", scope: !974, file: !718, line: 548, baseType: !482, size: 8, offset: 6944)
!2321 = !DIDerivedType(tag: DW_TAG_member, name: "uprobes_state", scope: !974, file: !718, line: 550, baseType: !2322, offset: 6952)
!2322 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uprobes_state", file: !2323, line: 142, elements: !239)
!2323 = !DIFile(filename: "./include/linux/uprobes.h", directory: "/home/lizy2001/genbc/linux")
!2324 = !DIDerivedType(tag: DW_TAG_member, name: "async_put_work", scope: !974, file: !718, line: 554, baseType: !1955, size: 256, offset: 6976)
!2325 = !DIDerivedType(tag: DW_TAG_member, name: "pasid", scope: !974, file: !718, line: 557, baseType: !407, size: 32, offset: 7232)
!2326 = !DIDerivedType(tag: DW_TAG_member, name: "cpu_bitmap", scope: !971, file: !718, line: 565, baseType: !2327, offset: 7296)
!2327 = !DICompositeType(tag: DW_TAG_array_type, baseType: !316, elements: !2328)
!2328 = !{!2329}
!2329 = !DISubrange(count: -1)
!2330 = !DIDerivedType(tag: DW_TAG_member, name: "pt_frag_refcount", scope: !967, file: !718, line: 151, baseType: !743, size: 32)
!2331 = !DIDerivedType(tag: DW_TAG_member, name: "ptl", scope: !960, file: !718, line: 156, baseType: !225, offset: 256)
!2332 = !DIDerivedType(tag: DW_TAG_member, scope: !722, file: !718, line: 159, baseType: !2333, size: 128)
!2333 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !722, file: !718, line: 159, size: 128, elements: !2334)
!2334 = !{!2335, !2399}
!2335 = !DIDerivedType(tag: DW_TAG_member, name: "pgmap", scope: !2333, file: !718, line: 161, baseType: !2336, size: 64)
!2336 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2337, size: 64)
!2337 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pagemap", file: !31, line: 110, size: 1152, elements: !2338)
!2338 = !{!2339, !2349, !2370, !2371, !2372, !2373, !2374, !2386, !2387, !2388}
!2339 = !DIDerivedType(tag: DW_TAG_member, name: "altmap", scope: !2337, file: !31, line: 111, baseType: !2340, size: 384)
!2340 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vmem_altmap", file: !31, line: 19, size: 384, elements: !2341)
!2341 = !{!2342, !2344, !2345, !2346, !2347, !2348}
!2342 = !DIDerivedType(tag: DW_TAG_member, name: "base_pfn", scope: !2340, file: !31, line: 20, baseType: !2343, size: 64)
!2343 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !316)
!2344 = !DIDerivedType(tag: DW_TAG_member, name: "end_pfn", scope: !2340, file: !31, line: 21, baseType: !2343, size: 64, offset: 64)
!2345 = !DIDerivedType(tag: DW_TAG_member, name: "reserve", scope: !2340, file: !31, line: 22, baseType: !2343, size: 64, offset: 128)
!2346 = !DIDerivedType(tag: DW_TAG_member, name: "free", scope: !2340, file: !31, line: 23, baseType: !316, size: 64, offset: 192)
!2347 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !2340, file: !31, line: 24, baseType: !316, size: 64, offset: 256)
!2348 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !2340, file: !31, line: 25, baseType: !316, size: 64, offset: 320)
!2349 = !DIDerivedType(tag: DW_TAG_member, name: "ref", scope: !2337, file: !31, line: 112, baseType: !2350, size: 64, offset: 384)
!2350 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2351, size: 64)
!2351 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "percpu_ref", file: !2352, line: 105, size: 128, elements: !2353)
!2352 = !DIFile(filename: "./include/linux/percpu-refcount.h", directory: "/home/lizy2001/genbc/linux")
!2353 = !{!2354, !2355}
!2354 = !DIDerivedType(tag: DW_TAG_member, name: "percpu_count_ptr", scope: !2351, file: !2352, line: 110, baseType: !316, size: 64)
!2355 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !2351, file: !2352, line: 118, baseType: !2356, size: 64, offset: 64)
!2356 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2357, size: 64)
!2357 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "percpu_ref_data", file: !2352, line: 95, size: 448, elements: !2358)
!2358 = !{!2359, !2360, !2365, !2366, !2367, !2368, !2369}
!2359 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !2357, file: !2352, line: 96, baseType: !767, size: 64)
!2360 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !2357, file: !2352, line: 97, baseType: !2361, size: 64, offset: 64)
!2361 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2362, size: 64)
!2362 = !DIDerivedType(tag: DW_TAG_typedef, name: "percpu_ref_func_t", file: !2352, line: 60, baseType: !2363)
!2363 = !DISubroutineType(types: !2364)
!2364 = !{null, !2350}
!2365 = !DIDerivedType(tag: DW_TAG_member, name: "confirm_switch", scope: !2357, file: !2352, line: 98, baseType: !2361, size: 64, offset: 128)
!2366 = !DIDerivedType(tag: DW_TAG_member, name: "force_atomic", scope: !2357, file: !2352, line: 99, baseType: !482, size: 1, offset: 192, flags: DIFlagBitField, extraData: i64 192)
!2367 = !DIDerivedType(tag: DW_TAG_member, name: "allow_reinit", scope: !2357, file: !2352, line: 100, baseType: !482, size: 1, offset: 193, flags: DIFlagBitField, extraData: i64 192)
!2368 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !2357, file: !2352, line: 101, baseType: !357, size: 128, align: 64, offset: 256)
!2369 = !DIDerivedType(tag: DW_TAG_member, name: "ref", scope: !2357, file: !2352, line: 102, baseType: !2350, size: 64, offset: 384)
!2370 = !DIDerivedType(tag: DW_TAG_member, name: "internal_ref", scope: !2337, file: !31, line: 113, baseType: !2351, size: 128, offset: 448)
!2371 = !DIDerivedType(tag: DW_TAG_member, name: "done", scope: !2337, file: !31, line: 114, baseType: !1498, size: 192, offset: 576)
!2372 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2337, file: !31, line: 115, baseType: !30, size: 32, offset: 768)
!2373 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2337, file: !31, line: 116, baseType: !7, size: 32, offset: 800)
!2374 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !2337, file: !31, line: 117, baseType: !2375, size: 64, offset: 832)
!2375 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2376, size: 64)
!2376 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2377)
!2377 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pagemap_ops", file: !31, line: 67, size: 256, elements: !2378)
!2378 = !{!2379, !2380, !2384, !2385}
!2379 = !DIDerivedType(tag: DW_TAG_member, name: "page_free", scope: !2377, file: !31, line: 73, baseType: !836, size: 64)
!2380 = !DIDerivedType(tag: DW_TAG_member, name: "kill", scope: !2377, file: !31, line: 78, baseType: !2381, size: 64, offset: 64)
!2381 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2382, size: 64)
!2382 = !DISubroutineType(types: !2383)
!2383 = !{null, !2336}
!2384 = !DIDerivedType(tag: DW_TAG_member, name: "cleanup", scope: !2377, file: !31, line: 83, baseType: !2381, size: 64, offset: 128)
!2385 = !DIDerivedType(tag: DW_TAG_member, name: "migrate_to_ram", scope: !2377, file: !31, line: 89, baseType: !1023, size: 64, offset: 192)
!2386 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !2337, file: !31, line: 118, baseType: !193, size: 64, offset: 896)
!2387 = !DIDerivedType(tag: DW_TAG_member, name: "nr_range", scope: !2337, file: !31, line: 119, baseType: !251, size: 32, offset: 960)
!2388 = !DIDerivedType(tag: DW_TAG_member, scope: !2337, file: !31, line: 120, baseType: !2389, size: 128, offset: 1024)
!2389 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2337, file: !31, line: 120, size: 128, elements: !2390)
!2390 = !{!2391, !2397}
!2391 = !DIDerivedType(tag: DW_TAG_member, name: "range", scope: !2389, file: !31, line: 121, baseType: !2392, size: 128)
!2392 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "range", file: !2393, line: 6, size: 128, elements: !2394)
!2393 = !DIFile(filename: "./include/linux/range.h", directory: "/home/lizy2001/genbc/linux")
!2394 = !{!2395, !2396}
!2395 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !2392, file: !2393, line: 7, baseType: !413, size: 64)
!2396 = !DIDerivedType(tag: DW_TAG_member, name: "end", scope: !2392, file: !2393, line: 8, baseType: !413, size: 64, offset: 64)
!2397 = !DIDerivedType(tag: DW_TAG_member, name: "ranges", scope: !2389, file: !31, line: 122, baseType: !2398)
!2398 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2392, elements: !1719)
!2399 = !DIDerivedType(tag: DW_TAG_member, name: "zone_device_data", scope: !2333, file: !718, line: 162, baseType: !193, size: 64, offset: 64)
!2400 = !DIDerivedType(tag: DW_TAG_member, name: "callback_head", scope: !722, file: !718, line: 176, baseType: !357, size: 128, align: 64)
!2401 = !DIDerivedType(tag: DW_TAG_member, scope: !717, file: !718, line: 179, baseType: !2402, size: 32, offset: 384)
!2402 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !717, file: !718, line: 179, size: 32, elements: !2403)
!2403 = !{!2404, !2405, !2406, !2407}
!2404 = !DIDerivedType(tag: DW_TAG_member, name: "_mapcount", scope: !2402, file: !718, line: 184, baseType: !743, size: 32)
!2405 = !DIDerivedType(tag: DW_TAG_member, name: "page_type", scope: !2402, file: !718, line: 192, baseType: !7, size: 32)
!2406 = !DIDerivedType(tag: DW_TAG_member, name: "active", scope: !2402, file: !718, line: 194, baseType: !7, size: 32)
!2407 = !DIDerivedType(tag: DW_TAG_member, name: "units", scope: !2402, file: !718, line: 195, baseType: !251, size: 32)
!2408 = !DIDerivedType(tag: DW_TAG_member, name: "_refcount", scope: !717, file: !718, line: 199, baseType: !743, size: 32, offset: 416)
!2409 = !DIDerivedType(tag: DW_TAG_member, name: "nr_cached_objects", scope: !652, file: !44, line: 1964, baseType: !2410, size: 64, offset: 1344)
!2410 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2411, size: 64)
!2411 = !DISubroutineType(types: !2412)
!2412 = !{!138, !591, !2413}
!2413 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2414, size: 64)
!2414 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "shrink_control", file: !2415, line: 12, size: 256, elements: !2416)
!2415 = !DIFile(filename: "./include/linux/shrinker.h", directory: "/home/lizy2001/genbc/linux")
!2416 = !{!2417, !2418, !2419, !2420, !2421}
!2417 = !DIDerivedType(tag: DW_TAG_member, name: "gfp_mask", scope: !2414, file: !2415, line: 13, baseType: !739, size: 32)
!2418 = !DIDerivedType(tag: DW_TAG_member, name: "nid", scope: !2414, file: !2415, line: 16, baseType: !251, size: 32, offset: 32)
!2419 = !DIDerivedType(tag: DW_TAG_member, name: "nr_to_scan", scope: !2414, file: !2415, line: 23, baseType: !316, size: 64, offset: 64)
!2420 = !DIDerivedType(tag: DW_TAG_member, name: "nr_scanned", scope: !2414, file: !2415, line: 30, baseType: !316, size: 64, offset: 128)
!2421 = !DIDerivedType(tag: DW_TAG_member, name: "memcg", scope: !2414, file: !2415, line: 33, baseType: !2422, size: 64, offset: 192)
!2422 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2423, size: 64)
!2423 = !DICompositeType(tag: DW_TAG_structure_type, name: "mem_cgroup", file: !718, line: 27, flags: DIFlagFwdDecl)
!2424 = !DIDerivedType(tag: DW_TAG_member, name: "free_cached_objects", scope: !652, file: !44, line: 1966, baseType: !2410, size: 64, offset: 1408)
!2425 = !DIDerivedType(tag: DW_TAG_member, name: "dq_op", scope: !592, file: !44, line: 1424, baseType: !2426, size: 64, offset: 448)
!2426 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2427, size: 64)
!2427 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2428)
!2428 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dquot_operations", file: !38, line: 322, size: 704, elements: !2429)
!2429 = !{!2430, !2476, !2480, !2484, !2485, !2486, !2487, !2488, !2493, !2498, !2502}
!2430 = !DIDerivedType(tag: DW_TAG_member, name: "write_dquot", scope: !2428, file: !38, line: 323, baseType: !2431, size: 64)
!2431 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2432, size: 64)
!2432 = !DISubroutineType(types: !2433)
!2433 = !{!251, !2434}
!2434 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2435, size: 64)
!2435 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dquot", file: !38, line: 294, size: 1600, elements: !2436)
!2436 = !{!2437, !2438, !2439, !2440, !2441, !2442, !2443, !2444, !2445, !2461, !2462, !2463}
!2437 = !DIDerivedType(tag: DW_TAG_member, name: "dq_hash", scope: !2435, file: !38, line: 295, baseType: !634, size: 128)
!2438 = !DIDerivedType(tag: DW_TAG_member, name: "dq_inuse", scope: !2435, file: !38, line: 296, baseType: !199, size: 128, offset: 128)
!2439 = !DIDerivedType(tag: DW_TAG_member, name: "dq_free", scope: !2435, file: !38, line: 297, baseType: !199, size: 128, offset: 256)
!2440 = !DIDerivedType(tag: DW_TAG_member, name: "dq_dirty", scope: !2435, file: !38, line: 298, baseType: !199, size: 128, offset: 384)
!2441 = !DIDerivedType(tag: DW_TAG_member, name: "dq_lock", scope: !2435, file: !38, line: 299, baseType: !1169, size: 192, offset: 512)
!2442 = !DIDerivedType(tag: DW_TAG_member, name: "dq_dqb_lock", scope: !2435, file: !38, line: 300, baseType: !225, offset: 704)
!2443 = !DIDerivedType(tag: DW_TAG_member, name: "dq_count", scope: !2435, file: !38, line: 301, baseType: !743, size: 32, offset: 704)
!2444 = !DIDerivedType(tag: DW_TAG_member, name: "dq_sb", scope: !2435, file: !38, line: 302, baseType: !591, size: 64, offset: 768)
!2445 = !DIDerivedType(tag: DW_TAG_member, name: "dq_id", scope: !2435, file: !38, line: 303, baseType: !2446, size: 64, offset: 832)
!2446 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kqid", file: !38, line: 68, size: 64, elements: !2447)
!2447 = !{!2448, !2460}
!2448 = !DIDerivedType(tag: DW_TAG_member, scope: !2446, file: !38, line: 69, baseType: !2449, size: 32)
!2449 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2446, file: !38, line: 69, size: 32, elements: !2450)
!2450 = !{!2451, !2452, !2453}
!2451 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !2449, file: !38, line: 70, baseType: !427, size: 32)
!2452 = !DIDerivedType(tag: DW_TAG_member, name: "gid", scope: !2449, file: !38, line: 71, baseType: !435, size: 32)
!2453 = !DIDerivedType(tag: DW_TAG_member, name: "projid", scope: !2449, file: !38, line: 72, baseType: !2454, size: 32)
!2454 = !DIDerivedType(tag: DW_TAG_typedef, name: "kprojid_t", file: !2455, line: 24, baseType: !2456)
!2455 = !DIFile(filename: "./include/linux/projid.h", directory: "/home/lizy2001/genbc/linux")
!2456 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2455, line: 22, size: 32, elements: !2457)
!2457 = !{!2458}
!2458 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !2456, file: !2455, line: 23, baseType: !2459, size: 32)
!2459 = !DIDerivedType(tag: DW_TAG_typedef, name: "projid_t", file: !2455, line: 20, baseType: !433)
!2460 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2446, file: !38, line: 74, baseType: !37, size: 32, offset: 32)
!2461 = !DIDerivedType(tag: DW_TAG_member, name: "dq_off", scope: !2435, file: !38, line: 304, baseType: !523, size: 64, offset: 896)
!2462 = !DIDerivedType(tag: DW_TAG_member, name: "dq_flags", scope: !2435, file: !38, line: 305, baseType: !316, size: 64, offset: 960)
!2463 = !DIDerivedType(tag: DW_TAG_member, name: "dq_dqb", scope: !2435, file: !38, line: 306, baseType: !2464, size: 576, offset: 1024)
!2464 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mem_dqblk", file: !38, line: 205, size: 576, elements: !2465)
!2465 = !{!2466, !2468, !2469, !2470, !2471, !2472, !2473, !2474, !2475}
!2466 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_bhardlimit", scope: !2464, file: !38, line: 206, baseType: !2467, size: 64)
!2467 = !DIDerivedType(tag: DW_TAG_typedef, name: "qsize_t", file: !38, line: 66, baseType: !525)
!2468 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_bsoftlimit", scope: !2464, file: !38, line: 207, baseType: !2467, size: 64, offset: 64)
!2469 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_curspace", scope: !2464, file: !38, line: 208, baseType: !2467, size: 64, offset: 128)
!2470 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_rsvspace", scope: !2464, file: !38, line: 209, baseType: !2467, size: 64, offset: 192)
!2471 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_ihardlimit", scope: !2464, file: !38, line: 210, baseType: !2467, size: 64, offset: 256)
!2472 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_isoftlimit", scope: !2464, file: !38, line: 211, baseType: !2467, size: 64, offset: 320)
!2473 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_curinodes", scope: !2464, file: !38, line: 212, baseType: !2467, size: 64, offset: 384)
!2474 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_btime", scope: !2464, file: !38, line: 213, baseType: !531, size: 64, offset: 448)
!2475 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_itime", scope: !2464, file: !38, line: 214, baseType: !531, size: 64, offset: 512)
!2476 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_dquot", scope: !2428, file: !38, line: 324, baseType: !2477, size: 64, offset: 64)
!2477 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2478, size: 64)
!2478 = !DISubroutineType(types: !2479)
!2479 = !{!2434, !591, !251}
!2480 = !DIDerivedType(tag: DW_TAG_member, name: "destroy_dquot", scope: !2428, file: !38, line: 325, baseType: !2481, size: 64, offset: 128)
!2481 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2482, size: 64)
!2482 = !DISubroutineType(types: !2483)
!2483 = !{null, !2434}
!2484 = !DIDerivedType(tag: DW_TAG_member, name: "acquire_dquot", scope: !2428, file: !38, line: 326, baseType: !2431, size: 64, offset: 192)
!2485 = !DIDerivedType(tag: DW_TAG_member, name: "release_dquot", scope: !2428, file: !38, line: 327, baseType: !2431, size: 64, offset: 256)
!2486 = !DIDerivedType(tag: DW_TAG_member, name: "mark_dirty", scope: !2428, file: !38, line: 328, baseType: !2431, size: 64, offset: 320)
!2487 = !DIDerivedType(tag: DW_TAG_member, name: "write_info", scope: !2428, file: !38, line: 329, baseType: !680, size: 64, offset: 384)
!2488 = !DIDerivedType(tag: DW_TAG_member, name: "get_reserved_space", scope: !2428, file: !38, line: 332, baseType: !2489, size: 64, offset: 448)
!2489 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2490, size: 64)
!2490 = !DISubroutineType(types: !2491)
!2491 = !{!2492, !421}
!2492 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2467, size: 64)
!2493 = !DIDerivedType(tag: DW_TAG_member, name: "get_projid", scope: !2428, file: !38, line: 333, baseType: !2494, size: 64, offset: 512)
!2494 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2495, size: 64)
!2495 = !DISubroutineType(types: !2496)
!2496 = !{!251, !421, !2497}
!2497 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2454, size: 64)
!2498 = !DIDerivedType(tag: DW_TAG_member, name: "get_inode_usage", scope: !2428, file: !38, line: 335, baseType: !2499, size: 64, offset: 576)
!2499 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2500, size: 64)
!2500 = !DISubroutineType(types: !2501)
!2501 = !{!251, !421, !2492}
!2502 = !DIDerivedType(tag: DW_TAG_member, name: "get_next_id", scope: !2428, file: !38, line: 337, baseType: !2503, size: 64, offset: 640)
!2503 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2504, size: 64)
!2504 = !DISubroutineType(types: !2505)
!2505 = !{!251, !591, !2506}
!2506 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2446, size: 64)
!2507 = !DIDerivedType(tag: DW_TAG_member, name: "s_qcop", scope: !592, file: !44, line: 1425, baseType: !2508, size: 64, offset: 512)
!2508 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2509, size: 64)
!2509 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2510)
!2510 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quotactl_ops", file: !38, line: 428, size: 704, elements: !2511)
!2511 = !{!2512, !2516, !2517, !2521, !2522, !2523, !2538, !2561, !2565, !2566, !2589}
!2512 = !DIDerivedType(tag: DW_TAG_member, name: "quota_on", scope: !2510, file: !38, line: 429, baseType: !2513, size: 64)
!2513 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2514, size: 64)
!2514 = !DISubroutineType(types: !2515)
!2515 = !{!251, !591, !251, !251, !541}
!2516 = !DIDerivedType(tag: DW_TAG_member, name: "quota_off", scope: !2510, file: !38, line: 430, baseType: !680, size: 64, offset: 64)
!2517 = !DIDerivedType(tag: DW_TAG_member, name: "quota_enable", scope: !2510, file: !38, line: 431, baseType: !2518, size: 64, offset: 128)
!2518 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2519, size: 64)
!2519 = !DISubroutineType(types: !2520)
!2520 = !{!251, !591, !7}
!2521 = !DIDerivedType(tag: DW_TAG_member, name: "quota_disable", scope: !2510, file: !38, line: 432, baseType: !2518, size: 64, offset: 192)
!2522 = !DIDerivedType(tag: DW_TAG_member, name: "quota_sync", scope: !2510, file: !38, line: 433, baseType: !680, size: 64, offset: 256)
!2523 = !DIDerivedType(tag: DW_TAG_member, name: "set_info", scope: !2510, file: !38, line: 434, baseType: !2524, size: 64, offset: 320)
!2524 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2525, size: 64)
!2525 = !DISubroutineType(types: !2526)
!2526 = !{!251, !591, !251, !2527}
!2527 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2528, size: 64)
!2528 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "qc_info", file: !38, line: 415, size: 256, elements: !2529)
!2529 = !{!2530, !2531, !2532, !2533, !2534, !2535, !2536, !2537}
!2530 = !DIDerivedType(tag: DW_TAG_member, name: "i_fieldmask", scope: !2528, file: !38, line: 416, baseType: !251, size: 32)
!2531 = !DIDerivedType(tag: DW_TAG_member, name: "i_flags", scope: !2528, file: !38, line: 417, baseType: !7, size: 32, offset: 32)
!2532 = !DIDerivedType(tag: DW_TAG_member, name: "i_spc_timelimit", scope: !2528, file: !38, line: 418, baseType: !7, size: 32, offset: 64)
!2533 = !DIDerivedType(tag: DW_TAG_member, name: "i_ino_timelimit", scope: !2528, file: !38, line: 420, baseType: !7, size: 32, offset: 96)
!2534 = !DIDerivedType(tag: DW_TAG_member, name: "i_rt_spc_timelimit", scope: !2528, file: !38, line: 421, baseType: !7, size: 32, offset: 128)
!2535 = !DIDerivedType(tag: DW_TAG_member, name: "i_spc_warnlimit", scope: !2528, file: !38, line: 422, baseType: !7, size: 32, offset: 160)
!2536 = !DIDerivedType(tag: DW_TAG_member, name: "i_ino_warnlimit", scope: !2528, file: !38, line: 423, baseType: !7, size: 32, offset: 192)
!2537 = !DIDerivedType(tag: DW_TAG_member, name: "i_rt_spc_warnlimit", scope: !2528, file: !38, line: 424, baseType: !7, size: 32, offset: 224)
!2538 = !DIDerivedType(tag: DW_TAG_member, name: "get_dqblk", scope: !2510, file: !38, line: 435, baseType: !2539, size: 64, offset: 384)
!2539 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2540, size: 64)
!2540 = !DISubroutineType(types: !2541)
!2541 = !{!251, !591, !2446, !2542}
!2542 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2543, size: 64)
!2543 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "qc_dqblk", file: !38, line: 343, size: 960, elements: !2544)
!2544 = !{!2545, !2546, !2547, !2548, !2549, !2550, !2551, !2552, !2553, !2554, !2555, !2556, !2557, !2558, !2559, !2560}
!2545 = !DIDerivedType(tag: DW_TAG_member, name: "d_fieldmask", scope: !2543, file: !38, line: 344, baseType: !251, size: 32)
!2546 = !DIDerivedType(tag: DW_TAG_member, name: "d_spc_hardlimit", scope: !2543, file: !38, line: 345, baseType: !413, size: 64, offset: 64)
!2547 = !DIDerivedType(tag: DW_TAG_member, name: "d_spc_softlimit", scope: !2543, file: !38, line: 346, baseType: !413, size: 64, offset: 128)
!2548 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino_hardlimit", scope: !2543, file: !38, line: 347, baseType: !413, size: 64, offset: 192)
!2549 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino_softlimit", scope: !2543, file: !38, line: 348, baseType: !413, size: 64, offset: 256)
!2550 = !DIDerivedType(tag: DW_TAG_member, name: "d_space", scope: !2543, file: !38, line: 349, baseType: !413, size: 64, offset: 320)
!2551 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino_count", scope: !2543, file: !38, line: 350, baseType: !413, size: 64, offset: 384)
!2552 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino_timer", scope: !2543, file: !38, line: 351, baseType: !773, size: 64, offset: 448)
!2553 = !DIDerivedType(tag: DW_TAG_member, name: "d_spc_timer", scope: !2543, file: !38, line: 353, baseType: !773, size: 64, offset: 512)
!2554 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino_warns", scope: !2543, file: !38, line: 354, baseType: !251, size: 32, offset: 576)
!2555 = !DIDerivedType(tag: DW_TAG_member, name: "d_spc_warns", scope: !2543, file: !38, line: 355, baseType: !251, size: 32, offset: 608)
!2556 = !DIDerivedType(tag: DW_TAG_member, name: "d_rt_spc_hardlimit", scope: !2543, file: !38, line: 356, baseType: !413, size: 64, offset: 640)
!2557 = !DIDerivedType(tag: DW_TAG_member, name: "d_rt_spc_softlimit", scope: !2543, file: !38, line: 357, baseType: !413, size: 64, offset: 704)
!2558 = !DIDerivedType(tag: DW_TAG_member, name: "d_rt_space", scope: !2543, file: !38, line: 358, baseType: !413, size: 64, offset: 768)
!2559 = !DIDerivedType(tag: DW_TAG_member, name: "d_rt_spc_timer", scope: !2543, file: !38, line: 359, baseType: !773, size: 64, offset: 832)
!2560 = !DIDerivedType(tag: DW_TAG_member, name: "d_rt_spc_warns", scope: !2543, file: !38, line: 360, baseType: !251, size: 32, offset: 896)
!2561 = !DIDerivedType(tag: DW_TAG_member, name: "get_nextdqblk", scope: !2510, file: !38, line: 436, baseType: !2562, size: 64, offset: 448)
!2562 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2563, size: 64)
!2563 = !DISubroutineType(types: !2564)
!2564 = !{!251, !591, !2506, !2542}
!2565 = !DIDerivedType(tag: DW_TAG_member, name: "set_dqblk", scope: !2510, file: !38, line: 438, baseType: !2539, size: 64, offset: 512)
!2566 = !DIDerivedType(tag: DW_TAG_member, name: "get_state", scope: !2510, file: !38, line: 439, baseType: !2567, size: 64, offset: 576)
!2567 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2568, size: 64)
!2568 = !DISubroutineType(types: !2569)
!2569 = !{!251, !591, !2570}
!2570 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2571, size: 64)
!2571 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "qc_state", file: !38, line: 409, size: 1408, elements: !2572)
!2572 = !{!2573, !2574}
!2573 = !DIDerivedType(tag: DW_TAG_member, name: "s_incoredqs", scope: !2571, file: !38, line: 410, baseType: !7, size: 32)
!2574 = !DIDerivedType(tag: DW_TAG_member, name: "s_state", scope: !2571, file: !38, line: 411, baseType: !2575, size: 1344, offset: 64)
!2575 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2576, size: 1344, elements: !268)
!2576 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "qc_type_state", file: !38, line: 395, size: 448, elements: !2577)
!2577 = !{!2578, !2579, !2580, !2581, !2582, !2583, !2584, !2585, !2586, !2588}
!2578 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2576, file: !38, line: 396, baseType: !7, size: 32)
!2579 = !DIDerivedType(tag: DW_TAG_member, name: "spc_timelimit", scope: !2576, file: !38, line: 397, baseType: !7, size: 32, offset: 32)
!2580 = !DIDerivedType(tag: DW_TAG_member, name: "ino_timelimit", scope: !2576, file: !38, line: 399, baseType: !7, size: 32, offset: 64)
!2581 = !DIDerivedType(tag: DW_TAG_member, name: "rt_spc_timelimit", scope: !2576, file: !38, line: 400, baseType: !7, size: 32, offset: 96)
!2582 = !DIDerivedType(tag: DW_TAG_member, name: "spc_warnlimit", scope: !2576, file: !38, line: 401, baseType: !7, size: 32, offset: 128)
!2583 = !DIDerivedType(tag: DW_TAG_member, name: "ino_warnlimit", scope: !2576, file: !38, line: 402, baseType: !7, size: 32, offset: 160)
!2584 = !DIDerivedType(tag: DW_TAG_member, name: "rt_spc_warnlimit", scope: !2576, file: !38, line: 403, baseType: !7, size: 32, offset: 192)
!2585 = !DIDerivedType(tag: DW_TAG_member, name: "ino", scope: !2576, file: !38, line: 404, baseType: !415, size: 64, offset: 256)
!2586 = !DIDerivedType(tag: DW_TAG_member, name: "blocks", scope: !2576, file: !38, line: 405, baseType: !2587, size: 64, offset: 320)
!2587 = !DIDerivedType(tag: DW_TAG_typedef, name: "blkcnt_t", file: !200, line: 126, baseType: !413)
!2588 = !DIDerivedType(tag: DW_TAG_member, name: "nextents", scope: !2576, file: !38, line: 406, baseType: !2587, size: 64, offset: 384)
!2589 = !DIDerivedType(tag: DW_TAG_member, name: "rm_xquota", scope: !2510, file: !38, line: 440, baseType: !2518, size: 64, offset: 640)
!2590 = !DIDerivedType(tag: DW_TAG_member, name: "s_export_op", scope: !592, file: !44, line: 1426, baseType: !2591, size: 64, offset: 576)
!2591 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2592, size: 64)
!2592 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2593)
!2593 = !DICompositeType(tag: DW_TAG_structure_type, name: "export_operations", file: !44, line: 49, flags: DIFlagFwdDecl)
!2594 = !DIDerivedType(tag: DW_TAG_member, name: "s_flags", scope: !592, file: !44, line: 1427, baseType: !316, size: 64, offset: 640)
!2595 = !DIDerivedType(tag: DW_TAG_member, name: "s_iflags", scope: !592, file: !44, line: 1428, baseType: !316, size: 64, offset: 704)
!2596 = !DIDerivedType(tag: DW_TAG_member, name: "s_magic", scope: !592, file: !44, line: 1429, baseType: !316, size: 64, offset: 768)
!2597 = !DIDerivedType(tag: DW_TAG_member, name: "s_root", scope: !592, file: !44, line: 1430, baseType: !374, size: 64, offset: 832)
!2598 = !DIDerivedType(tag: DW_TAG_member, name: "s_umount", scope: !592, file: !44, line: 1431, baseType: !763, size: 256, offset: 896)
!2599 = !DIDerivedType(tag: DW_TAG_member, name: "s_count", scope: !592, file: !44, line: 1432, baseType: !251, size: 32, offset: 1152)
!2600 = !DIDerivedType(tag: DW_TAG_member, name: "s_active", scope: !592, file: !44, line: 1433, baseType: !743, size: 32, offset: 1184)
!2601 = !DIDerivedType(tag: DW_TAG_member, name: "s_xattr", scope: !592, file: !44, line: 1437, baseType: !2602, size: 64, offset: 1216)
!2602 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2603, size: 64)
!2603 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2604, size: 64)
!2604 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2605)
!2605 = !DICompositeType(tag: DW_TAG_structure_type, name: "xattr_handler", file: !44, line: 1437, flags: DIFlagFwdDecl)
!2606 = !DIDerivedType(tag: DW_TAG_member, name: "s_roots", scope: !592, file: !44, line: 1449, baseType: !2607, size: 64, offset: 1280)
!2607 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hlist_bl_head", file: !390, line: 34, size: 64, elements: !2608)
!2608 = !{!2609}
!2609 = !DIDerivedType(tag: DW_TAG_member, name: "first", scope: !2607, file: !390, line: 35, baseType: !393, size: 64)
!2610 = !DIDerivedType(tag: DW_TAG_member, name: "s_mounts", scope: !592, file: !44, line: 1450, baseType: !199, size: 128, offset: 1344)
!2611 = !DIDerivedType(tag: DW_TAG_member, name: "s_bdev", scope: !592, file: !44, line: 1451, baseType: !2612, size: 64, offset: 1472)
!2612 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2613, size: 64)
!2613 = !DICompositeType(tag: DW_TAG_structure_type, name: "block_device", file: !44, line: 699, flags: DIFlagFwdDecl)
!2614 = !DIDerivedType(tag: DW_TAG_member, name: "s_bdi", scope: !592, file: !44, line: 1452, baseType: !1921, size: 64, offset: 1536)
!2615 = !DIDerivedType(tag: DW_TAG_member, name: "s_mtd", scope: !592, file: !44, line: 1453, baseType: !2616, size: 64, offset: 1600)
!2616 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2617, size: 64)
!2617 = !DICompositeType(tag: DW_TAG_structure_type, name: "mtd_info", file: !44, line: 1453, flags: DIFlagFwdDecl)
!2618 = !DIDerivedType(tag: DW_TAG_member, name: "s_instances", scope: !592, file: !44, line: 1454, baseType: !634, size: 128, offset: 1664)
!2619 = !DIDerivedType(tag: DW_TAG_member, name: "s_quota_types", scope: !592, file: !44, line: 1455, baseType: !7, size: 32, offset: 1792)
!2620 = !DIDerivedType(tag: DW_TAG_member, name: "s_dquot", scope: !592, file: !44, line: 1456, baseType: !2621, size: 2432, offset: 1856)
!2621 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quota_info", file: !38, line: 518, size: 2432, elements: !2622)
!2622 = !{!2623, !2624, !2625, !2627, !2659}
!2623 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2621, file: !38, line: 519, baseType: !7, size: 32)
!2624 = !DIDerivedType(tag: DW_TAG_member, name: "dqio_sem", scope: !2621, file: !38, line: 520, baseType: !763, size: 256, offset: 64)
!2625 = !DIDerivedType(tag: DW_TAG_member, name: "files", scope: !2621, file: !38, line: 521, baseType: !2626, size: 192, offset: 320)
!2626 = !DICompositeType(tag: DW_TAG_array_type, baseType: !421, size: 192, elements: !268)
!2627 = !DIDerivedType(tag: DW_TAG_member, name: "info", scope: !2621, file: !38, line: 522, baseType: !2628, size: 1728, offset: 512)
!2628 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2629, size: 1728, elements: !268)
!2629 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mem_dqinfo", file: !38, line: 222, size: 576, elements: !2630)
!2630 = !{!2631, !2651, !2652, !2653, !2654, !2655, !2656, !2657, !2658}
!2631 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_format", scope: !2629, file: !38, line: 223, baseType: !2632, size: 64)
!2632 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2633, size: 64)
!2633 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quota_format_type", file: !38, line: 443, size: 256, elements: !2634)
!2634 = !{!2635, !2636, !2649, !2650}
!2635 = !DIDerivedType(tag: DW_TAG_member, name: "qf_fmt_id", scope: !2633, file: !38, line: 444, baseType: !251, size: 32)
!2636 = !DIDerivedType(tag: DW_TAG_member, name: "qf_ops", scope: !2633, file: !38, line: 445, baseType: !2637, size: 64, offset: 64)
!2637 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2638, size: 64)
!2638 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2639)
!2639 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quota_format_ops", file: !38, line: 310, size: 512, elements: !2640)
!2640 = !{!2641, !2642, !2643, !2644, !2645, !2646, !2647, !2648}
!2641 = !DIDerivedType(tag: DW_TAG_member, name: "check_quota_file", scope: !2639, file: !38, line: 311, baseType: !680, size: 64)
!2642 = !DIDerivedType(tag: DW_TAG_member, name: "read_file_info", scope: !2639, file: !38, line: 312, baseType: !680, size: 64, offset: 64)
!2643 = !DIDerivedType(tag: DW_TAG_member, name: "write_file_info", scope: !2639, file: !38, line: 313, baseType: !680, size: 64, offset: 128)
!2644 = !DIDerivedType(tag: DW_TAG_member, name: "free_file_info", scope: !2639, file: !38, line: 314, baseType: !680, size: 64, offset: 192)
!2645 = !DIDerivedType(tag: DW_TAG_member, name: "read_dqblk", scope: !2639, file: !38, line: 315, baseType: !2431, size: 64, offset: 256)
!2646 = !DIDerivedType(tag: DW_TAG_member, name: "commit_dqblk", scope: !2639, file: !38, line: 316, baseType: !2431, size: 64, offset: 320)
!2647 = !DIDerivedType(tag: DW_TAG_member, name: "release_dqblk", scope: !2639, file: !38, line: 317, baseType: !2431, size: 64, offset: 384)
!2648 = !DIDerivedType(tag: DW_TAG_member, name: "get_next_id", scope: !2639, file: !38, line: 318, baseType: !2503, size: 64, offset: 448)
!2649 = !DIDerivedType(tag: DW_TAG_member, name: "qf_owner", scope: !2633, file: !38, line: 446, baseType: !625, size: 64, offset: 128)
!2650 = !DIDerivedType(tag: DW_TAG_member, name: "qf_next", scope: !2633, file: !38, line: 447, baseType: !2632, size: 64, offset: 192)
!2651 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_fmt_id", scope: !2629, file: !38, line: 224, baseType: !251, size: 32, offset: 64)
!2652 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_dirty_list", scope: !2629, file: !38, line: 226, baseType: !199, size: 128, offset: 128)
!2653 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_flags", scope: !2629, file: !38, line: 227, baseType: !316, size: 64, offset: 256)
!2654 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_bgrace", scope: !2629, file: !38, line: 228, baseType: !7, size: 32, offset: 320)
!2655 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_igrace", scope: !2629, file: !38, line: 229, baseType: !7, size: 32, offset: 352)
!2656 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_max_spc_limit", scope: !2629, file: !38, line: 230, baseType: !2467, size: 64, offset: 384)
!2657 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_max_ino_limit", scope: !2629, file: !38, line: 231, baseType: !2467, size: 64, offset: 448)
!2658 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_priv", scope: !2629, file: !38, line: 232, baseType: !193, size: 64, offset: 512)
!2659 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !2621, file: !38, line: 523, baseType: !2660, size: 192, offset: 2240)
!2660 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2637, size: 192, elements: !268)
!2661 = !DIDerivedType(tag: DW_TAG_member, name: "s_writers", scope: !592, file: !44, line: 1458, baseType: !2662, size: 2112, offset: 4288)
!2662 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sb_writers", file: !44, line: 1410, size: 2112, elements: !2663)
!2663 = !{!2664, !2665, !2666}
!2664 = !DIDerivedType(tag: DW_TAG_member, name: "frozen", scope: !2662, file: !44, line: 1411, baseType: !251, size: 32)
!2665 = !DIDerivedType(tag: DW_TAG_member, name: "wait_unfrozen", scope: !2662, file: !44, line: 1412, baseType: !1477, size: 128, offset: 64)
!2666 = !DIDerivedType(tag: DW_TAG_member, name: "rw_sem", scope: !2662, file: !44, line: 1413, baseType: !2667, size: 1920, offset: 192)
!2667 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2668, size: 1920, elements: !268)
!2668 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "percpu_rw_semaphore", file: !2669, line: 12, size: 640, elements: !2670)
!2669 = !DIFile(filename: "./include/linux/percpu-rwsem.h", directory: "/home/lizy2001/genbc/linux")
!2670 = !{!2671, !2679, !2681, !2686, !2687}
!2671 = !DIDerivedType(tag: DW_TAG_member, name: "rss", scope: !2668, file: !2669, line: 13, baseType: !2672, size: 320)
!2672 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rcu_sync", file: !2673, line: 17, size: 320, elements: !2674)
!2673 = !DIFile(filename: "./include/linux/rcu_sync.h", directory: "/home/lizy2001/genbc/linux")
!2674 = !{!2675, !2676, !2677, !2678}
!2675 = !DIDerivedType(tag: DW_TAG_member, name: "gp_state", scope: !2672, file: !2673, line: 18, baseType: !251, size: 32)
!2676 = !DIDerivedType(tag: DW_TAG_member, name: "gp_count", scope: !2672, file: !2673, line: 19, baseType: !251, size: 32, offset: 32)
!2677 = !DIDerivedType(tag: DW_TAG_member, name: "gp_wait", scope: !2672, file: !2673, line: 20, baseType: !1477, size: 128, offset: 64)
!2678 = !DIDerivedType(tag: DW_TAG_member, name: "cb_head", scope: !2672, file: !2673, line: 22, baseType: !357, size: 128, align: 64, offset: 192)
!2679 = !DIDerivedType(tag: DW_TAG_member, name: "read_count", scope: !2668, file: !2669, line: 14, baseType: !2680, size: 64, offset: 320)
!2680 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7, size: 64)
!2681 = !DIDerivedType(tag: DW_TAG_member, name: "writer", scope: !2668, file: !2669, line: 15, baseType: !2682, size: 64, offset: 384)
!2682 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rcuwait", file: !2683, line: 16, size: 64, elements: !2684)
!2683 = !DIFile(filename: "./include/linux/rcuwait.h", directory: "/home/lizy2001/genbc/linux")
!2684 = !{!2685}
!2685 = !DIDerivedType(tag: DW_TAG_member, name: "task", scope: !2682, file: !2683, line: 17, baseType: !1212, size: 64)
!2686 = !DIDerivedType(tag: DW_TAG_member, name: "waiters", scope: !2668, file: !2669, line: 16, baseType: !1477, size: 128, offset: 448)
!2687 = !DIDerivedType(tag: DW_TAG_member, name: "block", scope: !2668, file: !2669, line: 17, baseType: !743, size: 32, offset: 576)
!2688 = !DIDerivedType(tag: DW_TAG_member, name: "s_fs_info", scope: !592, file: !44, line: 1465, baseType: !193, size: 64, offset: 6400)
!2689 = !DIDerivedType(tag: DW_TAG_member, name: "s_time_gran", scope: !592, file: !44, line: 1468, baseType: !407, size: 32, offset: 6464)
!2690 = !DIDerivedType(tag: DW_TAG_member, name: "s_time_min", scope: !592, file: !44, line: 1470, baseType: !531, size: 64, offset: 6528)
!2691 = !DIDerivedType(tag: DW_TAG_member, name: "s_time_max", scope: !592, file: !44, line: 1471, baseType: !531, size: 64, offset: 6592)
!2692 = !DIDerivedType(tag: DW_TAG_member, name: "s_fsnotify_mask", scope: !592, file: !44, line: 1473, baseType: !409, size: 32, offset: 6656)
!2693 = !DIDerivedType(tag: DW_TAG_member, name: "s_fsnotify_marks", scope: !592, file: !44, line: 1474, baseType: !2694, size: 64, offset: 6720)
!2694 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2695, size: 64)
!2695 = !DICompositeType(tag: DW_TAG_structure_type, name: "fsnotify_mark_connector", file: !44, line: 603, flags: DIFlagFwdDecl)
!2696 = !DIDerivedType(tag: DW_TAG_member, name: "s_id", scope: !592, file: !44, line: 1477, baseType: !2697, size: 256, offset: 6784)
!2697 = !DICompositeType(tag: DW_TAG_array_type, baseType: !215, size: 256, elements: !2227)
!2698 = !DIDerivedType(tag: DW_TAG_member, name: "s_uuid", scope: !592, file: !44, line: 1478, baseType: !2699, size: 128, offset: 7040)
!2699 = !DIDerivedType(tag: DW_TAG_typedef, name: "uuid_t", file: !2700, line: 18, baseType: !2701)
!2700 = !DIFile(filename: "./include/linux/uuid.h", directory: "/home/lizy2001/genbc/linux")
!2701 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2700, line: 16, size: 128, elements: !2702)
!2702 = !{!2703}
!2703 = !DIDerivedType(tag: DW_TAG_member, name: "b", scope: !2701, file: !2700, line: 17, baseType: !2704, size: 128)
!2704 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1349, size: 128, elements: !1731)
!2705 = !DIDerivedType(tag: DW_TAG_member, name: "s_max_links", scope: !592, file: !44, line: 1480, baseType: !7, size: 32, offset: 7168)
!2706 = !DIDerivedType(tag: DW_TAG_member, name: "s_mode", scope: !592, file: !44, line: 1481, baseType: !2707, size: 32, offset: 7200)
!2707 = !DIDerivedType(tag: DW_TAG_typedef, name: "fmode_t", file: !200, line: 150, baseType: !7)
!2708 = !DIDerivedType(tag: DW_TAG_member, name: "s_vfs_rename_mutex", scope: !592, file: !44, line: 1487, baseType: !1169, size: 192, offset: 7232)
!2709 = !DIDerivedType(tag: DW_TAG_member, name: "s_subtype", scope: !592, file: !44, line: 1493, baseType: !213, size: 64, offset: 7424)
!2710 = !DIDerivedType(tag: DW_TAG_member, name: "s_d_op", scope: !592, file: !44, line: 1495, baseType: !2711, size: 64, offset: 7488)
!2711 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2712, size: 64)
!2712 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2713)
!2713 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dentry_operations", file: !372, line: 135, size: 1024, align: 512, elements: !2714)
!2714 = !{!2715, !2719, !2720, !2727, !2733, !2737, !2741, !2745, !2746, !2750, !2754, !2759, !2763}
!2715 = !DIDerivedType(tag: DW_TAG_member, name: "d_revalidate", scope: !2713, file: !372, line: 136, baseType: !2716, size: 64)
!2716 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2717, size: 64)
!2717 = !DISubroutineType(types: !2718)
!2718 = !{!251, !374, !7}
!2719 = !DIDerivedType(tag: DW_TAG_member, name: "d_weak_revalidate", scope: !2713, file: !372, line: 137, baseType: !2716, size: 64, offset: 64)
!2720 = !DIDerivedType(tag: DW_TAG_member, name: "d_hash", scope: !2713, file: !372, line: 138, baseType: !2721, size: 64, offset: 128)
!2721 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2722, size: 64)
!2722 = !DISubroutineType(types: !2723)
!2723 = !{!251, !2724, !2726}
!2724 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2725, size: 64)
!2725 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !375)
!2726 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !398, size: 64)
!2727 = !DIDerivedType(tag: DW_TAG_member, name: "d_compare", scope: !2713, file: !372, line: 139, baseType: !2728, size: 64, offset: 192)
!2728 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2729, size: 64)
!2729 = !DISubroutineType(types: !2730)
!2730 = !{!251, !2724, !7, !213, !2731}
!2731 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2732, size: 64)
!2732 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !398)
!2733 = !DIDerivedType(tag: DW_TAG_member, name: "d_delete", scope: !2713, file: !372, line: 141, baseType: !2734, size: 64, offset: 256)
!2734 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2735, size: 64)
!2735 = !DISubroutineType(types: !2736)
!2736 = !{!251, !2724}
!2737 = !DIDerivedType(tag: DW_TAG_member, name: "d_init", scope: !2713, file: !372, line: 142, baseType: !2738, size: 64, offset: 320)
!2738 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2739, size: 64)
!2739 = !DISubroutineType(types: !2740)
!2740 = !{!251, !374}
!2741 = !DIDerivedType(tag: DW_TAG_member, name: "d_release", scope: !2713, file: !372, line: 143, baseType: !2742, size: 64, offset: 384)
!2742 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2743, size: 64)
!2743 = !DISubroutineType(types: !2744)
!2744 = !{null, !374}
!2745 = !DIDerivedType(tag: DW_TAG_member, name: "d_prune", scope: !2713, file: !372, line: 144, baseType: !2742, size: 64, offset: 448)
!2746 = !DIDerivedType(tag: DW_TAG_member, name: "d_iput", scope: !2713, file: !372, line: 145, baseType: !2747, size: 64, offset: 512)
!2747 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2748, size: 64)
!2748 = !DISubroutineType(types: !2749)
!2749 = !{null, !374, !421}
!2750 = !DIDerivedType(tag: DW_TAG_member, name: "d_dname", scope: !2713, file: !372, line: 146, baseType: !2751, size: 64, offset: 576)
!2751 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2752, size: 64)
!2752 = !DISubroutineType(types: !2753)
!2753 = !{!267, !374, !267, !251}
!2754 = !DIDerivedType(tag: DW_TAG_member, name: "d_automount", scope: !2713, file: !372, line: 147, baseType: !2755, size: 64, offset: 640)
!2755 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2756, size: 64)
!2756 = !DISubroutineType(types: !2757)
!2757 = !{!370, !2758}
!2758 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !366, size: 64)
!2759 = !DIDerivedType(tag: DW_TAG_member, name: "d_manage", scope: !2713, file: !372, line: 148, baseType: !2760, size: 64, offset: 704)
!2760 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2761, size: 64)
!2761 = !DISubroutineType(types: !2762)
!2762 = !{!251, !541, !482}
!2763 = !DIDerivedType(tag: DW_TAG_member, name: "d_real", scope: !2713, file: !372, line: 149, baseType: !2764, size: 64, offset: 768)
!2764 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2765, size: 64)
!2765 = !DISubroutineType(types: !2766)
!2766 = !{!374, !374, !2767}
!2767 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2768, size: 64)
!2768 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !422)
!2769 = !DIDerivedType(tag: DW_TAG_member, name: "cleancache_poolid", scope: !592, file: !44, line: 1500, baseType: !251, size: 32, offset: 7552)
!2770 = !DIDerivedType(tag: DW_TAG_member, name: "s_shrink", scope: !592, file: !44, line: 1502, baseType: !2771, size: 448, offset: 7616)
!2771 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "shrinker", file: !2415, line: 60, size: 448, elements: !2772)
!2772 = !{!2773, !2778, !2779, !2780, !2781, !2782, !2783}
!2773 = !DIDerivedType(tag: DW_TAG_member, name: "count_objects", scope: !2771, file: !2415, line: 61, baseType: !2774, size: 64)
!2774 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2775, size: 64)
!2775 = !DISubroutineType(types: !2776)
!2776 = !{!316, !2777, !2413}
!2777 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2771, size: 64)
!2778 = !DIDerivedType(tag: DW_TAG_member, name: "scan_objects", scope: !2771, file: !2415, line: 63, baseType: !2774, size: 64, offset: 64)
!2779 = !DIDerivedType(tag: DW_TAG_member, name: "batch", scope: !2771, file: !2415, line: 66, baseType: !138, size: 64, offset: 128)
!2780 = !DIDerivedType(tag: DW_TAG_member, name: "seeks", scope: !2771, file: !2415, line: 67, baseType: !251, size: 32, offset: 192)
!2781 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2771, file: !2415, line: 68, baseType: !7, size: 32, offset: 224)
!2782 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !2771, file: !2415, line: 71, baseType: !199, size: 128, offset: 256)
!2783 = !DIDerivedType(tag: DW_TAG_member, name: "nr_deferred", scope: !2771, file: !2415, line: 77, baseType: !2784, size: 64, offset: 384)
!2784 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !767, size: 64)
!2785 = !DIDerivedType(tag: DW_TAG_member, name: "s_remove_count", scope: !592, file: !44, line: 1505, baseType: !767, size: 64, offset: 8064)
!2786 = !DIDerivedType(tag: DW_TAG_member, name: "s_fsnotify_inode_refs", scope: !592, file: !44, line: 1508, baseType: !767, size: 64, offset: 8128)
!2787 = !DIDerivedType(tag: DW_TAG_member, name: "s_readonly_remount", scope: !592, file: !44, line: 1511, baseType: !251, size: 32, offset: 8192)
!2788 = !DIDerivedType(tag: DW_TAG_member, name: "s_wb_err", scope: !592, file: !44, line: 1514, baseType: !905, size: 32, offset: 8224)
!2789 = !DIDerivedType(tag: DW_TAG_member, name: "s_dio_done_wq", scope: !592, file: !44, line: 1517, baseType: !2790, size: 64, offset: 8256)
!2790 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2791, size: 64)
!2791 = !DICompositeType(tag: DW_TAG_structure_type, name: "workqueue_struct", file: !137, line: 18, flags: DIFlagFwdDecl)
!2792 = !DIDerivedType(tag: DW_TAG_member, name: "s_pins", scope: !592, file: !44, line: 1518, baseType: !630, size: 64, offset: 8320)
!2793 = !DIDerivedType(tag: DW_TAG_member, name: "s_user_ns", scope: !592, file: !44, line: 1525, baseType: !1709, size: 64, offset: 8384)
!2794 = !DIDerivedType(tag: DW_TAG_member, name: "s_dentry_lru", scope: !592, file: !44, line: 1532, baseType: !2795, size: 64, offset: 8448)
!2795 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "list_lru", file: !2796, line: 52, size: 64, elements: !2797)
!2796 = !DIFile(filename: "./include/linux/list_lru.h", directory: "/home/lizy2001/genbc/linux")
!2797 = !{!2798}
!2798 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2795, file: !2796, line: 53, baseType: !2799, size: 64)
!2799 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2800, size: 64)
!2800 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "list_lru_node", file: !2796, line: 40, size: 256, elements: !2801)
!2801 = !{!2802, !2803, !2808}
!2802 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2800, file: !2796, line: 42, baseType: !225)
!2803 = !DIDerivedType(tag: DW_TAG_member, name: "lru", scope: !2800, file: !2796, line: 44, baseType: !2804, size: 192)
!2804 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "list_lru_one", file: !2796, line: 28, size: 192, elements: !2805)
!2805 = !{!2806, !2807}
!2806 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !2804, file: !2796, line: 29, baseType: !199, size: 128)
!2807 = !DIDerivedType(tag: DW_TAG_member, name: "nr_items", scope: !2804, file: !2796, line: 31, baseType: !138, size: 64, offset: 128)
!2808 = !DIDerivedType(tag: DW_TAG_member, name: "nr_items", scope: !2800, file: !2796, line: 49, baseType: !138, size: 64, offset: 192)
!2809 = !DIDerivedType(tag: DW_TAG_member, name: "s_inode_lru", scope: !592, file: !44, line: 1533, baseType: !2795, size: 64, offset: 8512)
!2810 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !592, file: !44, line: 1534, baseType: !357, size: 128, align: 64, offset: 8576)
!2811 = !DIDerivedType(tag: DW_TAG_member, name: "destroy_work", scope: !592, file: !44, line: 1535, baseType: !1955, size: 256, offset: 8704)
!2812 = !DIDerivedType(tag: DW_TAG_member, name: "s_sync_lock", scope: !592, file: !44, line: 1537, baseType: !1169, size: 192, offset: 8960)
!2813 = !DIDerivedType(tag: DW_TAG_member, name: "s_stack_depth", scope: !592, file: !44, line: 1542, baseType: !251, size: 32, offset: 9152)
!2814 = !DIDerivedType(tag: DW_TAG_member, name: "s_inode_list_lock", scope: !592, file: !44, line: 1545, baseType: !225, offset: 9184)
!2815 = !DIDerivedType(tag: DW_TAG_member, name: "s_inodes", scope: !592, file: !44, line: 1546, baseType: !199, size: 128, offset: 9216)
!2816 = !DIDerivedType(tag: DW_TAG_member, name: "s_inode_wblist_lock", scope: !592, file: !44, line: 1548, baseType: !225, offset: 9344)
!2817 = !DIDerivedType(tag: DW_TAG_member, name: "s_inodes_wb", scope: !592, file: !44, line: 1549, baseType: !199, size: 128, offset: 9344)
!2818 = !DIDerivedType(tag: DW_TAG_member, name: "i_mapping", scope: !422, file: !44, line: 624, baseType: !729, size: 64, offset: 256)
!2819 = !DIDerivedType(tag: DW_TAG_member, name: "i_ino", scope: !422, file: !44, line: 631, baseType: !316, size: 64, offset: 320)
!2820 = !DIDerivedType(tag: DW_TAG_member, scope: !422, file: !44, line: 639, baseType: !2821, size: 32, offset: 384)
!2821 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !422, file: !44, line: 639, size: 32, elements: !2822)
!2822 = !{!2823, !2825}
!2823 = !DIDerivedType(tag: DW_TAG_member, name: "i_nlink", scope: !2821, file: !44, line: 640, baseType: !2824, size: 32)
!2824 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7)
!2825 = !DIDerivedType(tag: DW_TAG_member, name: "__i_nlink", scope: !2821, file: !44, line: 641, baseType: !7, size: 32)
!2826 = !DIDerivedType(tag: DW_TAG_member, name: "i_rdev", scope: !422, file: !44, line: 643, baseType: !505, size: 32, offset: 416)
!2827 = !DIDerivedType(tag: DW_TAG_member, name: "i_size", scope: !422, file: !44, line: 644, baseType: !523, size: 64, offset: 448)
!2828 = !DIDerivedType(tag: DW_TAG_member, name: "i_atime", scope: !422, file: !44, line: 645, baseType: !527, size: 128, offset: 512)
!2829 = !DIDerivedType(tag: DW_TAG_member, name: "i_mtime", scope: !422, file: !44, line: 646, baseType: !527, size: 128, offset: 640)
!2830 = !DIDerivedType(tag: DW_TAG_member, name: "i_ctime", scope: !422, file: !44, line: 647, baseType: !527, size: 128, offset: 768)
!2831 = !DIDerivedType(tag: DW_TAG_member, name: "i_lock", scope: !422, file: !44, line: 648, baseType: !225, offset: 896)
!2832 = !DIDerivedType(tag: DW_TAG_member, name: "i_bytes", scope: !422, file: !44, line: 649, baseType: !308, size: 16, offset: 896)
!2833 = !DIDerivedType(tag: DW_TAG_member, name: "i_blkbits", scope: !422, file: !44, line: 650, baseType: !1348, size: 8, offset: 912)
!2834 = !DIDerivedType(tag: DW_TAG_member, name: "i_write_hint", scope: !422, file: !44, line: 651, baseType: !1348, size: 8, offset: 920)
!2835 = !DIDerivedType(tag: DW_TAG_member, name: "i_blocks", scope: !422, file: !44, line: 652, baseType: !2587, size: 64, offset: 960)
!2836 = !DIDerivedType(tag: DW_TAG_member, name: "i_state", scope: !422, file: !44, line: 659, baseType: !316, size: 64, offset: 1024)
!2837 = !DIDerivedType(tag: DW_TAG_member, name: "i_rwsem", scope: !422, file: !44, line: 660, baseType: !763, size: 256, offset: 1088)
!2838 = !DIDerivedType(tag: DW_TAG_member, name: "dirtied_when", scope: !422, file: !44, line: 662, baseType: !316, size: 64, offset: 1344)
!2839 = !DIDerivedType(tag: DW_TAG_member, name: "dirtied_time_when", scope: !422, file: !44, line: 663, baseType: !316, size: 64, offset: 1408)
!2840 = !DIDerivedType(tag: DW_TAG_member, name: "i_hash", scope: !422, file: !44, line: 665, baseType: !634, size: 128, offset: 1472)
!2841 = !DIDerivedType(tag: DW_TAG_member, name: "i_io_list", scope: !422, file: !44, line: 666, baseType: !199, size: 128, offset: 1600)
!2842 = !DIDerivedType(tag: DW_TAG_member, name: "i_lru", scope: !422, file: !44, line: 675, baseType: !199, size: 128, offset: 1728)
!2843 = !DIDerivedType(tag: DW_TAG_member, name: "i_sb_list", scope: !422, file: !44, line: 676, baseType: !199, size: 128, offset: 1856)
!2844 = !DIDerivedType(tag: DW_TAG_member, name: "i_wb_list", scope: !422, file: !44, line: 677, baseType: !199, size: 128, offset: 1984)
!2845 = !DIDerivedType(tag: DW_TAG_member, scope: !422, file: !44, line: 678, baseType: !2846, size: 128, offset: 2112)
!2846 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !422, file: !44, line: 678, size: 128, elements: !2847)
!2847 = !{!2848, !2849}
!2848 = !DIDerivedType(tag: DW_TAG_member, name: "i_dentry", scope: !2846, file: !44, line: 679, baseType: !630, size: 64)
!2849 = !DIDerivedType(tag: DW_TAG_member, name: "i_rcu", scope: !2846, file: !44, line: 680, baseType: !357, size: 128, align: 64)
!2850 = !DIDerivedType(tag: DW_TAG_member, name: "i_version", scope: !422, file: !44, line: 682, baseType: !769, size: 64, offset: 2240)
!2851 = !DIDerivedType(tag: DW_TAG_member, name: "i_sequence", scope: !422, file: !44, line: 683, baseType: !769, size: 64, offset: 2304)
!2852 = !DIDerivedType(tag: DW_TAG_member, name: "i_count", scope: !422, file: !44, line: 684, baseType: !743, size: 32, offset: 2368)
!2853 = !DIDerivedType(tag: DW_TAG_member, name: "i_dio_count", scope: !422, file: !44, line: 685, baseType: !743, size: 32, offset: 2400)
!2854 = !DIDerivedType(tag: DW_TAG_member, name: "i_writecount", scope: !422, file: !44, line: 686, baseType: !743, size: 32, offset: 2432)
!2855 = !DIDerivedType(tag: DW_TAG_member, name: "i_readcount", scope: !422, file: !44, line: 688, baseType: !743, size: 32, offset: 2464)
!2856 = !DIDerivedType(tag: DW_TAG_member, scope: !422, file: !44, line: 690, baseType: !2857, size: 64, offset: 2496)
!2857 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !422, file: !44, line: 690, size: 64, elements: !2858)
!2858 = !{!2859, !3082}
!2859 = !DIDerivedType(tag: DW_TAG_member, name: "i_fop", scope: !2857, file: !44, line: 691, baseType: !2860, size: 64)
!2860 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2861, size: 64)
!2861 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2862)
!2862 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_operations", file: !44, line: 1822, size: 2048, elements: !2863)
!2863 = !{!2864, !2865, !2869, !2874, !2878, !2879, !2880, !2884, !2897, !2898, !2906, !2910, !2911, !2915, !2916, !2920, !2925, !2926, !2930, !2934, !3042, !3046, !3047, !3051, !3052, !3056, !3060, !3065, !3069, !3073, !3077, !3081}
!2864 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !2862, file: !44, line: 1823, baseType: !625, size: 64)
!2865 = !DIDerivedType(tag: DW_TAG_member, name: "llseek", scope: !2862, file: !44, line: 1824, baseType: !2866, size: 64, offset: 64)
!2866 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2867, size: 64)
!2867 = !DISubroutineType(types: !2868)
!2868 = !{!523, !344, !523, !251}
!2869 = !DIDerivedType(tag: DW_TAG_member, name: "read", scope: !2862, file: !44, line: 1825, baseType: !2870, size: 64, offset: 128)
!2870 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2871, size: 64)
!2871 = !DISubroutineType(types: !2872)
!2872 = !{!298, !344, !267, !313, !2873}
!2873 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !523, size: 64)
!2874 = !DIDerivedType(tag: DW_TAG_member, name: "write", scope: !2862, file: !44, line: 1826, baseType: !2875, size: 64, offset: 192)
!2875 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2876, size: 64)
!2876 = !DISubroutineType(types: !2877)
!2877 = !{!298, !344, !213, !313, !2873}
!2878 = !DIDerivedType(tag: DW_TAG_member, name: "read_iter", scope: !2862, file: !44, line: 1827, baseType: !840, size: 64, offset: 256)
!2879 = !DIDerivedType(tag: DW_TAG_member, name: "write_iter", scope: !2862, file: !44, line: 1828, baseType: !840, size: 64, offset: 320)
!2880 = !DIDerivedType(tag: DW_TAG_member, name: "iopoll", scope: !2862, file: !44, line: 1829, baseType: !2881, size: 64, offset: 384)
!2881 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2882, size: 64)
!2882 = !DISubroutineType(types: !2883)
!2883 = !{!251, !843, !482}
!2884 = !DIDerivedType(tag: DW_TAG_member, name: "iterate", scope: !2862, file: !44, line: 1830, baseType: !2885, size: 64, offset: 448)
!2885 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2886, size: 64)
!2886 = !DISubroutineType(types: !2887)
!2887 = !{!251, !344, !2888}
!2888 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2889, size: 64)
!2889 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dir_context", file: !44, line: 1776, size: 128, elements: !2890)
!2890 = !{!2891, !2896}
!2891 = !DIDerivedType(tag: DW_TAG_member, name: "actor", scope: !2889, file: !44, line: 1777, baseType: !2892, size: 64)
!2892 = !DIDerivedType(tag: DW_TAG_typedef, name: "filldir_t", file: !44, line: 1773, baseType: !2893)
!2893 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2894, size: 64)
!2894 = !DISubroutineType(types: !2895)
!2895 = !{!251, !2888, !213, !251, !523, !413, !7}
!2896 = !DIDerivedType(tag: DW_TAG_member, name: "pos", scope: !2889, file: !44, line: 1778, baseType: !523, size: 64, offset: 64)
!2897 = !DIDerivedType(tag: DW_TAG_member, name: "iterate_shared", scope: !2862, file: !44, line: 1831, baseType: !2885, size: 64, offset: 512)
!2898 = !DIDerivedType(tag: DW_TAG_member, name: "poll", scope: !2862, file: !44, line: 1832, baseType: !2899, size: 64, offset: 576)
!2899 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2900, size: 64)
!2900 = !DISubroutineType(types: !2901)
!2901 = !{!2902, !344, !2904}
!2902 = !DIDerivedType(tag: DW_TAG_typedef, name: "__poll_t", file: !2903, line: 52, baseType: !7)
!2903 = !DIFile(filename: "./include/uapi/linux/types.h", directory: "/home/lizy2001/genbc/linux")
!2904 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2905, size: 64)
!2905 = !DICompositeType(tag: DW_TAG_structure_type, name: "poll_table_struct", file: !611, line: 27, flags: DIFlagFwdDecl)
!2906 = !DIDerivedType(tag: DW_TAG_member, name: "unlocked_ioctl", scope: !2862, file: !44, line: 1833, baseType: !2907, size: 64, offset: 640)
!2907 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2908, size: 64)
!2908 = !DISubroutineType(types: !2909)
!2909 = !{!138, !344, !7, !316}
!2910 = !DIDerivedType(tag: DW_TAG_member, name: "compat_ioctl", scope: !2862, file: !44, line: 1834, baseType: !2907, size: 64, offset: 704)
!2911 = !DIDerivedType(tag: DW_TAG_member, name: "mmap", scope: !2862, file: !44, line: 1835, baseType: !2912, size: 64, offset: 768)
!2912 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2913, size: 64)
!2913 = !DISubroutineType(types: !2914)
!2914 = !{!251, !344, !977}
!2915 = !DIDerivedType(tag: DW_TAG_member, name: "mmap_supported_flags", scope: !2862, file: !44, line: 1836, baseType: !316, size: 64, offset: 832)
!2916 = !DIDerivedType(tag: DW_TAG_member, name: "open", scope: !2862, file: !44, line: 1837, baseType: !2917, size: 64, offset: 896)
!2917 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2918, size: 64)
!2918 = !DISubroutineType(types: !2919)
!2919 = !{!251, !421, !344}
!2920 = !DIDerivedType(tag: DW_TAG_member, name: "flush", scope: !2862, file: !44, line: 1838, baseType: !2921, size: 64, offset: 960)
!2921 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2922, size: 64)
!2922 = !DISubroutineType(types: !2923)
!2923 = !{!251, !344, !2924}
!2924 = !DIDerivedType(tag: DW_TAG_typedef, name: "fl_owner_t", file: !44, line: 1007, baseType: !193)
!2925 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !2862, file: !44, line: 1839, baseType: !2917, size: 64, offset: 1024)
!2926 = !DIDerivedType(tag: DW_TAG_member, name: "fsync", scope: !2862, file: !44, line: 1840, baseType: !2927, size: 64, offset: 1088)
!2927 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2928, size: 64)
!2928 = !DISubroutineType(types: !2929)
!2929 = !{!251, !344, !523, !523, !251}
!2930 = !DIDerivedType(tag: DW_TAG_member, name: "fasync", scope: !2862, file: !44, line: 1841, baseType: !2931, size: 64, offset: 1152)
!2931 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2932, size: 64)
!2932 = !DISubroutineType(types: !2933)
!2933 = !{!251, !251, !344, !251}
!2934 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2862, file: !44, line: 1842, baseType: !2935, size: 64, offset: 1216)
!2935 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2936, size: 64)
!2936 = !DISubroutineType(types: !2937)
!2937 = !{!251, !344, !251, !2938}
!2938 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2939, size: 64)
!2939 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_lock", file: !44, line: 1062, size: 1664, elements: !2940)
!2940 = !{!2941, !2942, !2943, !2944, !2945, !2946, !2947, !2948, !2949, !2950, !2951, !2952, !2953, !2954, !2955, !2972, !2973, !2974, !2987, !3018}
!2941 = !DIDerivedType(tag: DW_TAG_member, name: "fl_blocker", scope: !2939, file: !44, line: 1063, baseType: !2938, size: 64)
!2942 = !DIDerivedType(tag: DW_TAG_member, name: "fl_list", scope: !2939, file: !44, line: 1064, baseType: !199, size: 128, offset: 64)
!2943 = !DIDerivedType(tag: DW_TAG_member, name: "fl_link", scope: !2939, file: !44, line: 1065, baseType: !634, size: 128, offset: 192)
!2944 = !DIDerivedType(tag: DW_TAG_member, name: "fl_blocked_requests", scope: !2939, file: !44, line: 1066, baseType: !199, size: 128, offset: 320)
!2945 = !DIDerivedType(tag: DW_TAG_member, name: "fl_blocked_member", scope: !2939, file: !44, line: 1069, baseType: !199, size: 128, offset: 448)
!2946 = !DIDerivedType(tag: DW_TAG_member, name: "fl_owner", scope: !2939, file: !44, line: 1072, baseType: !2924, size: 64, offset: 576)
!2947 = !DIDerivedType(tag: DW_TAG_member, name: "fl_flags", scope: !2939, file: !44, line: 1073, baseType: !7, size: 32, offset: 640)
!2948 = !DIDerivedType(tag: DW_TAG_member, name: "fl_type", scope: !2939, file: !44, line: 1074, baseType: !419, size: 8, offset: 672)
!2949 = !DIDerivedType(tag: DW_TAG_member, name: "fl_pid", scope: !2939, file: !44, line: 1075, baseType: !7, size: 32, offset: 704)
!2950 = !DIDerivedType(tag: DW_TAG_member, name: "fl_link_cpu", scope: !2939, file: !44, line: 1076, baseType: !251, size: 32, offset: 736)
!2951 = !DIDerivedType(tag: DW_TAG_member, name: "fl_wait", scope: !2939, file: !44, line: 1077, baseType: !1477, size: 128, offset: 768)
!2952 = !DIDerivedType(tag: DW_TAG_member, name: "fl_file", scope: !2939, file: !44, line: 1078, baseType: !344, size: 64, offset: 896)
!2953 = !DIDerivedType(tag: DW_TAG_member, name: "fl_start", scope: !2939, file: !44, line: 1079, baseType: !523, size: 64, offset: 960)
!2954 = !DIDerivedType(tag: DW_TAG_member, name: "fl_end", scope: !2939, file: !44, line: 1080, baseType: !523, size: 64, offset: 1024)
!2955 = !DIDerivedType(tag: DW_TAG_member, name: "fl_fasync", scope: !2939, file: !44, line: 1082, baseType: !2956, size: 64, offset: 1088)
!2956 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2957, size: 64)
!2957 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fasync_struct", file: !44, line: 1314, size: 320, elements: !2958)
!2958 = !{!2959, !2967, !2968, !2969, !2970, !2971}
!2959 = !DIDerivedType(tag: DW_TAG_member, name: "fa_lock", scope: !2957, file: !44, line: 1315, baseType: !2960)
!2960 = !DIDerivedType(tag: DW_TAG_typedef, name: "rwlock_t", file: !2961, line: 20, baseType: !2962)
!2961 = !DIFile(filename: "./include/linux/rwlock_types.h", directory: "/home/lizy2001/genbc/linux")
!2962 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2961, line: 11, elements: !2963)
!2963 = !{!2964}
!2964 = !DIDerivedType(tag: DW_TAG_member, name: "raw_lock", scope: !2962, file: !2961, line: 12, baseType: !2965)
!2965 = !DIDerivedType(tag: DW_TAG_typedef, name: "arch_rwlock_t", file: !237, line: 33, baseType: !2966)
!2966 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !237, line: 31, elements: !239)
!2967 = !DIDerivedType(tag: DW_TAG_member, name: "magic", scope: !2957, file: !44, line: 1316, baseType: !251, size: 32)
!2968 = !DIDerivedType(tag: DW_TAG_member, name: "fa_fd", scope: !2957, file: !44, line: 1317, baseType: !251, size: 32, offset: 32)
!2969 = !DIDerivedType(tag: DW_TAG_member, name: "fa_next", scope: !2957, file: !44, line: 1318, baseType: !2956, size: 64, offset: 64)
!2970 = !DIDerivedType(tag: DW_TAG_member, name: "fa_file", scope: !2957, file: !44, line: 1319, baseType: !344, size: 64, offset: 128)
!2971 = !DIDerivedType(tag: DW_TAG_member, name: "fa_rcu", scope: !2957, file: !44, line: 1320, baseType: !357, size: 128, align: 64, offset: 192)
!2972 = !DIDerivedType(tag: DW_TAG_member, name: "fl_break_time", scope: !2939, file: !44, line: 1084, baseType: !316, size: 64, offset: 1152)
!2973 = !DIDerivedType(tag: DW_TAG_member, name: "fl_downgrade_time", scope: !2939, file: !44, line: 1085, baseType: !316, size: 64, offset: 1216)
!2974 = !DIDerivedType(tag: DW_TAG_member, name: "fl_ops", scope: !2939, file: !44, line: 1087, baseType: !2975, size: 64, offset: 1280)
!2975 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2976, size: 64)
!2976 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2977)
!2977 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_lock_operations", file: !44, line: 1011, size: 128, elements: !2978)
!2978 = !{!2979, !2983}
!2979 = !DIDerivedType(tag: DW_TAG_member, name: "fl_copy_lock", scope: !2977, file: !44, line: 1012, baseType: !2980, size: 64)
!2980 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2981, size: 64)
!2981 = !DISubroutineType(types: !2982)
!2982 = !{null, !2938, !2938}
!2983 = !DIDerivedType(tag: DW_TAG_member, name: "fl_release_private", scope: !2977, file: !44, line: 1013, baseType: !2984, size: 64, offset: 64)
!2984 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2985, size: 64)
!2985 = !DISubroutineType(types: !2986)
!2986 = !{null, !2938}
!2987 = !DIDerivedType(tag: DW_TAG_member, name: "fl_lmops", scope: !2939, file: !44, line: 1088, baseType: !2988, size: 64, offset: 1344)
!2988 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2989, size: 64)
!2989 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2990)
!2990 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lock_manager_operations", file: !44, line: 1016, size: 512, elements: !2991)
!2991 = !{!2992, !2996, !3000, !3001, !3005, !3009, !3013, !3017}
!2992 = !DIDerivedType(tag: DW_TAG_member, name: "lm_get_owner", scope: !2990, file: !44, line: 1017, baseType: !2993, size: 64)
!2993 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2994, size: 64)
!2994 = !DISubroutineType(types: !2995)
!2995 = !{!2924, !2924}
!2996 = !DIDerivedType(tag: DW_TAG_member, name: "lm_put_owner", scope: !2990, file: !44, line: 1018, baseType: !2997, size: 64, offset: 64)
!2997 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2998, size: 64)
!2998 = !DISubroutineType(types: !2999)
!2999 = !{null, !2924}
!3000 = !DIDerivedType(tag: DW_TAG_member, name: "lm_notify", scope: !2990, file: !44, line: 1019, baseType: !2984, size: 64, offset: 128)
!3001 = !DIDerivedType(tag: DW_TAG_member, name: "lm_grant", scope: !2990, file: !44, line: 1020, baseType: !3002, size: 64, offset: 192)
!3002 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3003, size: 64)
!3003 = !DISubroutineType(types: !3004)
!3004 = !{!251, !2938, !251}
!3005 = !DIDerivedType(tag: DW_TAG_member, name: "lm_break", scope: !2990, file: !44, line: 1021, baseType: !3006, size: 64, offset: 256)
!3006 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3007, size: 64)
!3007 = !DISubroutineType(types: !3008)
!3008 = !{!482, !2938}
!3009 = !DIDerivedType(tag: DW_TAG_member, name: "lm_change", scope: !2990, file: !44, line: 1022, baseType: !3010, size: 64, offset: 320)
!3010 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3011, size: 64)
!3011 = !DISubroutineType(types: !3012)
!3012 = !{!251, !2938, !251, !203}
!3013 = !DIDerivedType(tag: DW_TAG_member, name: "lm_setup", scope: !2990, file: !44, line: 1023, baseType: !3014, size: 64, offset: 384)
!3014 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3015, size: 64)
!3015 = !DISubroutineType(types: !3016)
!3016 = !{null, !2938, !817}
!3017 = !DIDerivedType(tag: DW_TAG_member, name: "lm_breaker_owns_lease", scope: !2990, file: !44, line: 1024, baseType: !3006, size: 64, offset: 448)
!3018 = !DIDerivedType(tag: DW_TAG_member, name: "fl_u", scope: !2939, file: !44, line: 1097, baseType: !3019, size: 256, offset: 1408)
!3019 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2939, file: !44, line: 1089, size: 256, elements: !3020)
!3020 = !{!3021, !3030, !3036}
!3021 = !DIDerivedType(tag: DW_TAG_member, name: "nfs_fl", scope: !3019, file: !44, line: 1090, baseType: !3022, size: 256)
!3022 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "nfs_lock_info", file: !3023, line: 10, size: 256, elements: !3024)
!3023 = !DIFile(filename: "./include/linux/nfs_fs_i.h", directory: "/home/lizy2001/genbc/linux")
!3024 = !{!3025, !3026, !3029}
!3025 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !3022, file: !3023, line: 11, baseType: !407, size: 32)
!3026 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !3022, file: !3023, line: 12, baseType: !3027, size: 64, offset: 64)
!3027 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3028, size: 64)
!3028 = !DICompositeType(tag: DW_TAG_structure_type, name: "nlm_lockowner", file: !3023, line: 5, flags: DIFlagFwdDecl)
!3029 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !3022, file: !3023, line: 13, baseType: !199, size: 128, offset: 128)
!3030 = !DIDerivedType(tag: DW_TAG_member, name: "nfs4_fl", scope: !3019, file: !44, line: 1091, baseType: !3031, size: 64)
!3031 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "nfs4_lock_info", file: !3023, line: 17, size: 64, elements: !3032)
!3032 = !{!3033}
!3033 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !3031, file: !3023, line: 18, baseType: !3034, size: 64)
!3034 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3035, size: 64)
!3035 = !DICompositeType(tag: DW_TAG_structure_type, name: "nfs4_lock_state", file: !3023, line: 16, flags: DIFlagFwdDecl)
!3036 = !DIDerivedType(tag: DW_TAG_member, name: "afs", scope: !3019, file: !44, line: 1096, baseType: !3037, size: 192)
!3037 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3019, file: !44, line: 1092, size: 192, elements: !3038)
!3038 = !{!3039, !3040, !3041}
!3039 = !DIDerivedType(tag: DW_TAG_member, name: "link", scope: !3037, file: !44, line: 1093, baseType: !199, size: 128)
!3040 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !3037, file: !44, line: 1094, baseType: !251, size: 32, offset: 128)
!3041 = !DIDerivedType(tag: DW_TAG_member, name: "debug_id", scope: !3037, file: !44, line: 1095, baseType: !7, size: 32, offset: 160)
!3042 = !DIDerivedType(tag: DW_TAG_member, name: "sendpage", scope: !2862, file: !44, line: 1843, baseType: !3043, size: 64, offset: 1280)
!3043 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3044, size: 64)
!3044 = !DISubroutineType(types: !3045)
!3045 = !{!298, !344, !716, !251, !313, !2873, !251}
!3046 = !DIDerivedType(tag: DW_TAG_member, name: "get_unmapped_area", scope: !2862, file: !44, line: 1844, baseType: !1097, size: 64, offset: 1344)
!3047 = !DIDerivedType(tag: DW_TAG_member, name: "check_flags", scope: !2862, file: !44, line: 1845, baseType: !3048, size: 64, offset: 1408)
!3048 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3049, size: 64)
!3049 = !DISubroutineType(types: !3050)
!3050 = !{!251, !251}
!3051 = !DIDerivedType(tag: DW_TAG_member, name: "flock", scope: !2862, file: !44, line: 1846, baseType: !2935, size: 64, offset: 1472)
!3052 = !DIDerivedType(tag: DW_TAG_member, name: "splice_write", scope: !2862, file: !44, line: 1847, baseType: !3053, size: 64, offset: 1536)
!3053 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3054, size: 64)
!3054 = !DISubroutineType(types: !3055)
!3055 = !{!298, !2095, !344, !2873, !313, !7}
!3056 = !DIDerivedType(tag: DW_TAG_member, name: "splice_read", scope: !2862, file: !44, line: 1848, baseType: !3057, size: 64, offset: 1600)
!3057 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3058, size: 64)
!3058 = !DISubroutineType(types: !3059)
!3059 = !{!298, !344, !2873, !2095, !313, !7}
!3060 = !DIDerivedType(tag: DW_TAG_member, name: "setlease", scope: !2862, file: !44, line: 1849, baseType: !3061, size: 64, offset: 1664)
!3061 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3062, size: 64)
!3062 = !DISubroutineType(types: !3063)
!3063 = !{!251, !344, !138, !3064, !817}
!3064 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2938, size: 64)
!3065 = !DIDerivedType(tag: DW_TAG_member, name: "fallocate", scope: !2862, file: !44, line: 1850, baseType: !3066, size: 64, offset: 1728)
!3066 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3067, size: 64)
!3067 = !DISubroutineType(types: !3068)
!3068 = !{!138, !344, !251, !523, !523}
!3069 = !DIDerivedType(tag: DW_TAG_member, name: "show_fdinfo", scope: !2862, file: !44, line: 1852, baseType: !3070, size: 64, offset: 1792)
!3070 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3071, size: 64)
!3071 = !DISubroutineType(types: !3072)
!3072 = !{null, !706, !344}
!3073 = !DIDerivedType(tag: DW_TAG_member, name: "copy_file_range", scope: !2862, file: !44, line: 1856, baseType: !3074, size: 64, offset: 1856)
!3074 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3075, size: 64)
!3075 = !DISubroutineType(types: !3076)
!3076 = !{!298, !344, !523, !344, !523, !313, !7}
!3077 = !DIDerivedType(tag: DW_TAG_member, name: "remap_file_range", scope: !2862, file: !44, line: 1858, baseType: !3078, size: 64, offset: 1920)
!3078 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3079, size: 64)
!3079 = !DISubroutineType(types: !3080)
!3080 = !{!523, !344, !523, !344, !523, !523, !7}
!3081 = !DIDerivedType(tag: DW_TAG_member, name: "fadvise", scope: !2862, file: !44, line: 1861, baseType: !2927, size: 64, offset: 1984)
!3082 = !DIDerivedType(tag: DW_TAG_member, name: "free_inode", scope: !2857, file: !44, line: 692, baseType: !659, size: 64)
!3083 = !DIDerivedType(tag: DW_TAG_member, name: "i_flctx", scope: !422, file: !44, line: 694, baseType: !3084, size: 64, offset: 2560)
!3084 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3085, size: 64)
!3085 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_lock_context", file: !44, line: 1100, size: 384, elements: !3086)
!3086 = !{!3087, !3088, !3089, !3090}
!3087 = !DIDerivedType(tag: DW_TAG_member, name: "flc_lock", scope: !3085, file: !44, line: 1101, baseType: !225)
!3088 = !DIDerivedType(tag: DW_TAG_member, name: "flc_flock", scope: !3085, file: !44, line: 1102, baseType: !199, size: 128)
!3089 = !DIDerivedType(tag: DW_TAG_member, name: "flc_posix", scope: !3085, file: !44, line: 1103, baseType: !199, size: 128, offset: 128)
!3090 = !DIDerivedType(tag: DW_TAG_member, name: "flc_lease", scope: !3085, file: !44, line: 1104, baseType: !199, size: 128, offset: 256)
!3091 = !DIDerivedType(tag: DW_TAG_member, name: "i_data", scope: !422, file: !44, line: 695, baseType: !730, size: 1216, align: 64, offset: 2624)
!3092 = !DIDerivedType(tag: DW_TAG_member, name: "i_devices", scope: !422, file: !44, line: 696, baseType: !199, size: 128, offset: 3840)
!3093 = !DIDerivedType(tag: DW_TAG_member, scope: !422, file: !44, line: 697, baseType: !3094, size: 64, offset: 3968)
!3094 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !422, file: !44, line: 697, size: 64, elements: !3095)
!3095 = !{!3096, !3097, !3098, !3101, !3102}
!3096 = !DIDerivedType(tag: DW_TAG_member, name: "i_pipe", scope: !3094, file: !44, line: 698, baseType: !2095, size: 64)
!3097 = !DIDerivedType(tag: DW_TAG_member, name: "i_bdev", scope: !3094, file: !44, line: 699, baseType: !2612, size: 64)
!3098 = !DIDerivedType(tag: DW_TAG_member, name: "i_cdev", scope: !3094, file: !44, line: 700, baseType: !3099, size: 64)
!3099 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3100, size: 64)
!3100 = !DICompositeType(tag: DW_TAG_structure_type, name: "cdev", file: !44, line: 700, flags: DIFlagFwdDecl)
!3101 = !DIDerivedType(tag: DW_TAG_member, name: "i_link", scope: !3094, file: !44, line: 701, baseType: !267, size: 64)
!3102 = !DIDerivedType(tag: DW_TAG_member, name: "i_dir_seq", scope: !3094, file: !44, line: 702, baseType: !7, size: 32)
!3103 = !DIDerivedType(tag: DW_TAG_member, name: "i_generation", scope: !422, file: !44, line: 705, baseType: !409, size: 32, offset: 4032)
!3104 = !DIDerivedType(tag: DW_TAG_member, name: "i_fsnotify_mask", scope: !422, file: !44, line: 708, baseType: !409, size: 32, offset: 4064)
!3105 = !DIDerivedType(tag: DW_TAG_member, name: "i_fsnotify_marks", scope: !422, file: !44, line: 709, baseType: !2694, size: 64, offset: 4096)
!3106 = !DIDerivedType(tag: DW_TAG_member, name: "i_private", scope: !422, file: !44, line: 720, baseType: !193, size: 64, offset: 4160)
!3107 = !DIDerivedType(tag: DW_TAG_member, name: "d_iname", scope: !375, file: !372, line: 98, baseType: !3108, size: 256, offset: 448)
!3108 = !DICompositeType(tag: DW_TAG_array_type, baseType: !419, size: 256, elements: !2227)
!3109 = !DIDerivedType(tag: DW_TAG_member, name: "d_lockref", scope: !375, file: !372, line: 101, baseType: !3110, size: 32, offset: 704)
!3110 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lockref", file: !3111, line: 25, size: 32, elements: !3112)
!3111 = !DIFile(filename: "./include/linux/lockref.h", directory: "/home/lizy2001/genbc/linux")
!3112 = !{!3113}
!3113 = !DIDerivedType(tag: DW_TAG_member, scope: !3110, file: !3111, line: 26, baseType: !3114, size: 32)
!3114 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3110, file: !3111, line: 26, size: 32, elements: !3115)
!3115 = !{!3116}
!3116 = !DIDerivedType(tag: DW_TAG_member, scope: !3114, file: !3111, line: 30, baseType: !3117, size: 32)
!3117 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3114, file: !3111, line: 30, size: 32, elements: !3118)
!3118 = !{!3119, !3120}
!3119 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3117, file: !3111, line: 31, baseType: !225)
!3120 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !3117, file: !3111, line: 32, baseType: !251, size: 32)
!3121 = !DIDerivedType(tag: DW_TAG_member, name: "d_op", scope: !375, file: !372, line: 102, baseType: !2711, size: 64, offset: 768)
!3122 = !DIDerivedType(tag: DW_TAG_member, name: "d_sb", scope: !375, file: !372, line: 103, baseType: !591, size: 64, offset: 832)
!3123 = !DIDerivedType(tag: DW_TAG_member, name: "d_time", scope: !375, file: !372, line: 104, baseType: !316, size: 64, offset: 896)
!3124 = !DIDerivedType(tag: DW_TAG_member, name: "d_fsdata", scope: !375, file: !372, line: 105, baseType: !193, size: 64, offset: 960)
!3125 = !DIDerivedType(tag: DW_TAG_member, scope: !375, file: !372, line: 107, baseType: !3126, size: 128, offset: 1024)
!3126 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !375, file: !372, line: 107, size: 128, elements: !3127)
!3127 = !{!3128, !3129}
!3128 = !DIDerivedType(tag: DW_TAG_member, name: "d_lru", scope: !3126, file: !372, line: 108, baseType: !199, size: 128)
!3129 = !DIDerivedType(tag: DW_TAG_member, name: "d_wait", scope: !3126, file: !372, line: 109, baseType: !3130, size: 64)
!3130 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1477, size: 64)
!3131 = !DIDerivedType(tag: DW_TAG_member, name: "d_child", scope: !375, file: !372, line: 111, baseType: !199, size: 128, offset: 1152)
!3132 = !DIDerivedType(tag: DW_TAG_member, name: "d_subdirs", scope: !375, file: !372, line: 112, baseType: !199, size: 128, offset: 1280)
!3133 = !DIDerivedType(tag: DW_TAG_member, name: "d_u", scope: !375, file: !372, line: 120, baseType: !3134, size: 128, offset: 1408)
!3134 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !375, file: !372, line: 116, size: 128, elements: !3135)
!3135 = !{!3136, !3137, !3138}
!3136 = !DIDerivedType(tag: DW_TAG_member, name: "d_alias", scope: !3134, file: !372, line: 117, baseType: !634, size: 128)
!3137 = !DIDerivedType(tag: DW_TAG_member, name: "d_in_lookup_hash", scope: !3134, file: !372, line: 118, baseType: !389, size: 128)
!3138 = !DIDerivedType(tag: DW_TAG_member, name: "d_rcu", scope: !3134, file: !372, line: 119, baseType: !357, size: 128, align: 64)
!3139 = !DIDerivedType(tag: DW_TAG_member, name: "f_inode", scope: !345, file: !44, line: 922, baseType: !421, size: 64, offset: 256)
!3140 = !DIDerivedType(tag: DW_TAG_member, name: "f_op", scope: !345, file: !44, line: 923, baseType: !2860, size: 64, offset: 320)
!3141 = !DIDerivedType(tag: DW_TAG_member, name: "f_lock", scope: !345, file: !44, line: 929, baseType: !225, offset: 384)
!3142 = !DIDerivedType(tag: DW_TAG_member, name: "f_write_hint", scope: !345, file: !44, line: 930, baseType: !43, size: 32, offset: 384)
!3143 = !DIDerivedType(tag: DW_TAG_member, name: "f_count", scope: !345, file: !44, line: 931, baseType: !767, size: 64, offset: 448)
!3144 = !DIDerivedType(tag: DW_TAG_member, name: "f_flags", scope: !345, file: !44, line: 932, baseType: !7, size: 32, offset: 512)
!3145 = !DIDerivedType(tag: DW_TAG_member, name: "f_mode", scope: !345, file: !44, line: 933, baseType: !2707, size: 32, offset: 544)
!3146 = !DIDerivedType(tag: DW_TAG_member, name: "f_pos_lock", scope: !345, file: !44, line: 934, baseType: !1169, size: 192, offset: 576)
!3147 = !DIDerivedType(tag: DW_TAG_member, name: "f_pos", scope: !345, file: !44, line: 935, baseType: !523, size: 64, offset: 768)
!3148 = !DIDerivedType(tag: DW_TAG_member, name: "f_owner", scope: !345, file: !44, line: 936, baseType: !3149, size: 192, offset: 832)
!3149 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fown_struct", file: !44, line: 885, size: 192, elements: !3150)
!3150 = !{!3151, !3152, !3153, !3154, !3155, !3156}
!3151 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3149, file: !44, line: 886, baseType: !2960)
!3152 = !DIDerivedType(tag: DW_TAG_member, name: "pid", scope: !3149, file: !44, line: 887, baseType: !1467, size: 64)
!3153 = !DIDerivedType(tag: DW_TAG_member, name: "pid_type", scope: !3149, file: !44, line: 888, baseType: !52, size: 32, offset: 64)
!3154 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !3149, file: !44, line: 889, baseType: !427, size: 32, offset: 96)
!3155 = !DIDerivedType(tag: DW_TAG_member, name: "euid", scope: !3149, file: !44, line: 889, baseType: !427, size: 32, offset: 128)
!3156 = !DIDerivedType(tag: DW_TAG_member, name: "signum", scope: !3149, file: !44, line: 890, baseType: !251, size: 32, offset: 160)
!3157 = !DIDerivedType(tag: DW_TAG_member, name: "f_cred", scope: !345, file: !44, line: 937, baseType: !1543, size: 64, offset: 1024)
!3158 = !DIDerivedType(tag: DW_TAG_member, name: "f_ra", scope: !345, file: !44, line: 938, baseType: !3159, size: 256, offset: 1088)
!3159 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_ra_state", file: !44, line: 896, size: 256, elements: !3160)
!3160 = !{!3161, !3162, !3163, !3164, !3165, !3166}
!3161 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !3159, file: !44, line: 897, baseType: !316, size: 64)
!3162 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !3159, file: !44, line: 898, baseType: !7, size: 32, offset: 64)
!3163 = !DIDerivedType(tag: DW_TAG_member, name: "async_size", scope: !3159, file: !44, line: 899, baseType: !7, size: 32, offset: 96)
!3164 = !DIDerivedType(tag: DW_TAG_member, name: "ra_pages", scope: !3159, file: !44, line: 902, baseType: !7, size: 32, offset: 128)
!3165 = !DIDerivedType(tag: DW_TAG_member, name: "mmap_miss", scope: !3159, file: !44, line: 903, baseType: !7, size: 32, offset: 160)
!3166 = !DIDerivedType(tag: DW_TAG_member, name: "prev_pos", scope: !3159, file: !44, line: 904, baseType: !523, size: 64, offset: 192)
!3167 = !DIDerivedType(tag: DW_TAG_member, name: "f_version", scope: !345, file: !44, line: 940, baseType: !413, size: 64, offset: 1344)
!3168 = !DIDerivedType(tag: DW_TAG_member, name: "private_data", scope: !345, file: !44, line: 945, baseType: !193, size: 64, offset: 1408)
!3169 = !DIDerivedType(tag: DW_TAG_member, name: "f_ep_links", scope: !345, file: !44, line: 949, baseType: !199, size: 128, offset: 1472)
!3170 = !DIDerivedType(tag: DW_TAG_member, name: "f_tfile_llink", scope: !345, file: !44, line: 950, baseType: !199, size: 128, offset: 1600)
!3171 = !DIDerivedType(tag: DW_TAG_member, name: "f_mapping", scope: !345, file: !44, line: 952, baseType: !729, size: 64, offset: 1728)
!3172 = !DIDerivedType(tag: DW_TAG_member, name: "f_wb_err", scope: !345, file: !44, line: 953, baseType: !905, size: 32, offset: 1792)
!3173 = !DIDerivedType(tag: DW_TAG_member, name: "f_sb_err", scope: !345, file: !44, line: 954, baseType: !905, size: 32, offset: 1824)
!3174 = !DIDerivedType(tag: DW_TAG_member, name: "write", scope: !335, file: !292, line: 174, baseType: !341, size: 64, offset: 320)
!3175 = !DIDerivedType(tag: DW_TAG_member, name: "mmap", scope: !335, file: !292, line: 176, baseType: !3176, size: 64, offset: 384)
!3176 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3177, size: 64)
!3177 = !DISubroutineType(types: !3178)
!3178 = !{!251, !344, !218, !334, !977}
!3179 = !DIDerivedType(tag: DW_TAG_member, name: "attrs", scope: !323, file: !292, line: 90, baseType: !318, size: 64, offset: 192)
!3180 = !DIDerivedType(tag: DW_TAG_member, name: "bin_attrs", scope: !323, file: !292, line: 91, baseType: !3181, size: 64, offset: 256)
!3181 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !334, size: 64)
!3182 = !DIDerivedType(tag: DW_TAG_member, name: "child_ns_type", scope: !282, file: !120, line: 143, baseType: !3183, size: 64, offset: 256)
!3183 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3184, size: 64)
!3184 = !DISubroutineType(types: !3185)
!3185 = !{!3186, !218}
!3186 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3187, size: 64)
!3187 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3188)
!3188 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kobj_ns_type_operations", file: !61, line: 39, size: 384, elements: !3189)
!3189 = !{!3190, !3191, !3195, !3199, !3205, !3209}
!3190 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !3188, file: !61, line: 40, baseType: !60, size: 32)
!3191 = !DIDerivedType(tag: DW_TAG_member, name: "current_may_mount", scope: !3188, file: !61, line: 41, baseType: !3192, size: 64, offset: 64)
!3192 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3193, size: 64)
!3193 = !DISubroutineType(types: !3194)
!3194 = !{!482}
!3195 = !DIDerivedType(tag: DW_TAG_member, name: "grab_current_ns", scope: !3188, file: !61, line: 42, baseType: !3196, size: 64, offset: 128)
!3196 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3197, size: 64)
!3197 = !DISubroutineType(types: !3198)
!3198 = !{!193}
!3199 = !DIDerivedType(tag: DW_TAG_member, name: "netlink_ns", scope: !3188, file: !61, line: 43, baseType: !3200, size: 64, offset: 192)
!3200 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3201, size: 64)
!3201 = !DISubroutineType(types: !3202)
!3202 = !{!2124, !3203}
!3203 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3204, size: 64)
!3204 = !DICompositeType(tag: DW_TAG_structure_type, name: "sock", file: !61, line: 19, flags: DIFlagFwdDecl)
!3205 = !DIDerivedType(tag: DW_TAG_member, name: "initial_ns", scope: !3188, file: !61, line: 44, baseType: !3206, size: 64, offset: 256)
!3206 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3207, size: 64)
!3207 = !DISubroutineType(types: !3208)
!3208 = !{!2124}
!3209 = !DIDerivedType(tag: DW_TAG_member, name: "drop_ns", scope: !3188, file: !61, line: 45, baseType: !460, size: 64, offset: 320)
!3210 = !DIDerivedType(tag: DW_TAG_member, name: "namespace", scope: !282, file: !120, line: 144, baseType: !3211, size: 64, offset: 320)
!3211 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3212, size: 64)
!3212 = !DISubroutineType(types: !3213)
!3213 = !{!2124, !218}
!3214 = !DIDerivedType(tag: DW_TAG_member, name: "get_ownership", scope: !282, file: !120, line: 145, baseType: !3215, size: 64, offset: 384)
!3215 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3216, size: 64)
!3216 = !DISubroutineType(types: !3217)
!3217 = !{null, !218, !3218, !3219}
!3218 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !427, size: 64)
!3219 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !435, size: 64)
!3220 = !DIDerivedType(tag: DW_TAG_member, name: "sd", scope: !210, file: !120, line: 70, baseType: !3221, size: 64, offset: 384)
!3221 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3222, size: 64)
!3222 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_node", file: !611, line: 123, size: 1024, elements: !3223)
!3223 = !{!3224, !3225, !3226, !3227, !3228, !3229, !3230, !3231, !3352, !3353, !3354, !3355, !3356}
!3224 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !3222, file: !611, line: 124, baseType: !743, size: 32)
!3225 = !DIDerivedType(tag: DW_TAG_member, name: "active", scope: !3222, file: !611, line: 125, baseType: !743, size: 32, offset: 32)
!3226 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !3222, file: !611, line: 135, baseType: !3221, size: 64, offset: 64)
!3227 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3222, file: !611, line: 136, baseType: !213, size: 64, offset: 128)
!3228 = !DIDerivedType(tag: DW_TAG_member, name: "rb", scope: !3222, file: !611, line: 138, baseType: !756, size: 192, align: 64, offset: 192)
!3229 = !DIDerivedType(tag: DW_TAG_member, name: "ns", scope: !3222, file: !611, line: 140, baseType: !2124, size: 64, offset: 384)
!3230 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !3222, file: !611, line: 141, baseType: !7, size: 32, offset: 448)
!3231 = !DIDerivedType(tag: DW_TAG_member, scope: !3222, file: !611, line: 142, baseType: !3232, size: 256, offset: 512)
!3232 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3222, file: !611, line: 142, size: 256, elements: !3233)
!3233 = !{!3234, !3280, !3284}
!3234 = !DIDerivedType(tag: DW_TAG_member, name: "dir", scope: !3232, file: !611, line: 143, baseType: !3235, size: 192)
!3235 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_elem_dir", file: !611, line: 91, size: 192, elements: !3236)
!3236 = !{!3237, !3238, !3239}
!3237 = !DIDerivedType(tag: DW_TAG_member, name: "subdirs", scope: !3235, file: !611, line: 92, baseType: !316, size: 64)
!3238 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !3235, file: !611, line: 94, baseType: !752, size: 64, offset: 64)
!3239 = !DIDerivedType(tag: DW_TAG_member, name: "root", scope: !3235, file: !611, line: 100, baseType: !3240, size: 64, offset: 128)
!3240 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3241, size: 64)
!3241 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_root", file: !611, line: 180, size: 704, elements: !3242)
!3242 = !{!3243, !3244, !3245, !3252, !3253, !3254, !3278, !3279}
!3243 = !DIDerivedType(tag: DW_TAG_member, name: "kn", scope: !3241, file: !611, line: 182, baseType: !3221, size: 64)
!3244 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3241, file: !611, line: 183, baseType: !7, size: 32, offset: 64)
!3245 = !DIDerivedType(tag: DW_TAG_member, name: "ino_idr", scope: !3241, file: !611, line: 186, baseType: !3246, size: 192, offset: 128)
!3246 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "idr", file: !3247, line: 19, size: 192, elements: !3248)
!3247 = !DIFile(filename: "./include/linux/idr.h", directory: "/home/lizy2001/genbc/linux")
!3248 = !{!3249, !3250, !3251}
!3249 = !DIDerivedType(tag: DW_TAG_member, name: "idr_rt", scope: !3246, file: !3247, line: 20, baseType: !734, size: 128)
!3250 = !DIDerivedType(tag: DW_TAG_member, name: "idr_base", scope: !3246, file: !3247, line: 21, baseType: !7, size: 32, offset: 128)
!3251 = !DIDerivedType(tag: DW_TAG_member, name: "idr_next", scope: !3246, file: !3247, line: 22, baseType: !7, size: 32, offset: 160)
!3252 = !DIDerivedType(tag: DW_TAG_member, name: "last_id_lowbits", scope: !3241, file: !611, line: 187, baseType: !407, size: 32, offset: 320)
!3253 = !DIDerivedType(tag: DW_TAG_member, name: "id_highbits", scope: !3241, file: !611, line: 188, baseType: !407, size: 32, offset: 352)
!3254 = !DIDerivedType(tag: DW_TAG_member, name: "syscall_ops", scope: !3241, file: !611, line: 189, baseType: !3255, size: 64, offset: 384)
!3255 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3256, size: 64)
!3256 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_syscall_ops", file: !611, line: 168, size: 320, elements: !3257)
!3257 = !{!3258, !3262, !3266, !3270, !3274}
!3258 = !DIDerivedType(tag: DW_TAG_member, name: "show_options", scope: !3256, file: !611, line: 169, baseType: !3259, size: 64)
!3259 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3260, size: 64)
!3260 = !DISubroutineType(types: !3261)
!3261 = !{!251, !706, !3240}
!3262 = !DIDerivedType(tag: DW_TAG_member, name: "mkdir", scope: !3256, file: !611, line: 171, baseType: !3263, size: 64, offset: 64)
!3263 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3264, size: 64)
!3264 = !DISubroutineType(types: !3265)
!3265 = !{!251, !3221, !213, !307}
!3266 = !DIDerivedType(tag: DW_TAG_member, name: "rmdir", scope: !3256, file: !611, line: 173, baseType: !3267, size: 64, offset: 128)
!3267 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3268, size: 64)
!3268 = !DISubroutineType(types: !3269)
!3269 = !{!251, !3221}
!3270 = !DIDerivedType(tag: DW_TAG_member, name: "rename", scope: !3256, file: !611, line: 174, baseType: !3271, size: 64, offset: 192)
!3271 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3272, size: 64)
!3272 = !DISubroutineType(types: !3273)
!3273 = !{!251, !3221, !3221, !213}
!3274 = !DIDerivedType(tag: DW_TAG_member, name: "show_path", scope: !3256, file: !611, line: 176, baseType: !3275, size: 64, offset: 256)
!3275 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3276, size: 64)
!3276 = !DISubroutineType(types: !3277)
!3277 = !{!251, !706, !3221, !3240}
!3278 = !DIDerivedType(tag: DW_TAG_member, name: "supers", scope: !3241, file: !611, line: 192, baseType: !199, size: 128, offset: 448)
!3279 = !DIDerivedType(tag: DW_TAG_member, name: "deactivate_waitq", scope: !3241, file: !611, line: 194, baseType: !1477, size: 128, offset: 576)
!3280 = !DIDerivedType(tag: DW_TAG_member, name: "symlink", scope: !3232, file: !611, line: 144, baseType: !3281, size: 64)
!3281 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_elem_symlink", file: !611, line: 103, size: 64, elements: !3282)
!3282 = !{!3283}
!3283 = !DIDerivedType(tag: DW_TAG_member, name: "target_kn", scope: !3281, file: !611, line: 104, baseType: !3221, size: 64)
!3284 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !3232, file: !611, line: 145, baseType: !3285, size: 256)
!3285 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_elem_attr", file: !611, line: 107, size: 256, elements: !3286)
!3286 = !{!3287, !3347, !3350, !3351}
!3287 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !3285, file: !611, line: 108, baseType: !3288, size: 64)
!3288 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3289, size: 64)
!3289 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3290)
!3290 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_ops", file: !611, line: 217, size: 768, elements: !3291)
!3291 = !{!3292, !3312, !3316, !3320, !3324, !3328, !3332, !3336, !3337, !3338, !3339, !3343}
!3292 = !DIDerivedType(tag: DW_TAG_member, name: "open", scope: !3290, file: !611, line: 222, baseType: !3293, size: 64)
!3293 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3294, size: 64)
!3294 = !DISubroutineType(types: !3295)
!3295 = !{!251, !3296}
!3296 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3297, size: 64)
!3297 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_open_file", file: !611, line: 197, size: 1088, elements: !3298)
!3298 = !{!3299, !3300, !3301, !3302, !3303, !3304, !3305, !3306, !3307, !3308, !3309, !3310, !3311}
!3299 = !DIDerivedType(tag: DW_TAG_member, name: "kn", scope: !3297, file: !611, line: 199, baseType: !3221, size: 64)
!3300 = !DIDerivedType(tag: DW_TAG_member, name: "file", scope: !3297, file: !611, line: 200, baseType: !344, size: 64, offset: 64)
!3301 = !DIDerivedType(tag: DW_TAG_member, name: "seq_file", scope: !3297, file: !611, line: 201, baseType: !706, size: 64, offset: 128)
!3302 = !DIDerivedType(tag: DW_TAG_member, name: "priv", scope: !3297, file: !611, line: 202, baseType: !193, size: 64, offset: 192)
!3303 = !DIDerivedType(tag: DW_TAG_member, name: "mutex", scope: !3297, file: !611, line: 205, baseType: !1169, size: 192, offset: 256)
!3304 = !DIDerivedType(tag: DW_TAG_member, name: "prealloc_mutex", scope: !3297, file: !611, line: 206, baseType: !1169, size: 192, offset: 448)
!3305 = !DIDerivedType(tag: DW_TAG_member, name: "event", scope: !3297, file: !611, line: 207, baseType: !251, size: 32, offset: 640)
!3306 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !3297, file: !611, line: 208, baseType: !199, size: 128, offset: 704)
!3307 = !DIDerivedType(tag: DW_TAG_member, name: "prealloc_buf", scope: !3297, file: !611, line: 209, baseType: !267, size: 64, offset: 832)
!3308 = !DIDerivedType(tag: DW_TAG_member, name: "atomic_write_len", scope: !3297, file: !611, line: 211, baseType: !313, size: 64, offset: 896)
!3309 = !DIDerivedType(tag: DW_TAG_member, name: "mmapped", scope: !3297, file: !611, line: 212, baseType: !482, size: 1, offset: 960, flags: DIFlagBitField, extraData: i64 960)
!3310 = !DIDerivedType(tag: DW_TAG_member, name: "released", scope: !3297, file: !611, line: 213, baseType: !482, size: 1, offset: 961, flags: DIFlagBitField, extraData: i64 960)
!3311 = !DIDerivedType(tag: DW_TAG_member, name: "vm_ops", scope: !3297, file: !611, line: 214, baseType: !1005, size: 64, offset: 1024)
!3312 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !3290, file: !611, line: 223, baseType: !3313, size: 64, offset: 64)
!3313 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3314, size: 64)
!3314 = !DISubroutineType(types: !3315)
!3315 = !{null, !3296}
!3316 = !DIDerivedType(tag: DW_TAG_member, name: "seq_show", scope: !3290, file: !611, line: 236, baseType: !3317, size: 64, offset: 128)
!3317 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3318, size: 64)
!3318 = !DISubroutineType(types: !3319)
!3319 = !{!251, !706, !193}
!3320 = !DIDerivedType(tag: DW_TAG_member, name: "seq_start", scope: !3290, file: !611, line: 238, baseType: !3321, size: 64, offset: 192)
!3321 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3322, size: 64)
!3322 = !DISubroutineType(types: !3323)
!3323 = !{!193, !706, !2873}
!3324 = !DIDerivedType(tag: DW_TAG_member, name: "seq_next", scope: !3290, file: !611, line: 239, baseType: !3325, size: 64, offset: 256)
!3325 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3326, size: 64)
!3326 = !DISubroutineType(types: !3327)
!3327 = !{!193, !706, !193, !2873}
!3328 = !DIDerivedType(tag: DW_TAG_member, name: "seq_stop", scope: !3290, file: !611, line: 240, baseType: !3329, size: 64, offset: 320)
!3329 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3330, size: 64)
!3330 = !DISubroutineType(types: !3331)
!3331 = !{null, !706, !193}
!3332 = !DIDerivedType(tag: DW_TAG_member, name: "read", scope: !3290, file: !611, line: 242, baseType: !3333, size: 64, offset: 384)
!3333 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3334, size: 64)
!3334 = !DISubroutineType(types: !3335)
!3335 = !{!298, !3296, !267, !313, !523}
!3336 = !DIDerivedType(tag: DW_TAG_member, name: "atomic_write_len", scope: !3290, file: !611, line: 252, baseType: !313, size: 64, offset: 448)
!3337 = !DIDerivedType(tag: DW_TAG_member, name: "prealloc", scope: !3290, file: !611, line: 259, baseType: !482, size: 8, offset: 512)
!3338 = !DIDerivedType(tag: DW_TAG_member, name: "write", scope: !3290, file: !611, line: 260, baseType: !3333, size: 64, offset: 576)
!3339 = !DIDerivedType(tag: DW_TAG_member, name: "poll", scope: !3290, file: !611, line: 263, baseType: !3340, size: 64, offset: 640)
!3340 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3341, size: 64)
!3341 = !DISubroutineType(types: !3342)
!3342 = !{!2902, !3296, !2904}
!3343 = !DIDerivedType(tag: DW_TAG_member, name: "mmap", scope: !3290, file: !611, line: 266, baseType: !3344, size: 64, offset: 704)
!3344 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3345, size: 64)
!3345 = !DISubroutineType(types: !3346)
!3346 = !{!251, !3296, !977}
!3347 = !DIDerivedType(tag: DW_TAG_member, name: "open", scope: !3285, file: !611, line: 109, baseType: !3348, size: 64, offset: 64)
!3348 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3349, size: 64)
!3349 = !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_open_node", file: !611, line: 31, flags: DIFlagFwdDecl)
!3350 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !3285, file: !611, line: 110, baseType: !523, size: 64, offset: 128)
!3351 = !DIDerivedType(tag: DW_TAG_member, name: "notify_next", scope: !3285, file: !611, line: 111, baseType: !3221, size: 64, offset: 192)
!3352 = !DIDerivedType(tag: DW_TAG_member, name: "priv", scope: !3222, file: !611, line: 148, baseType: !193, size: 64, offset: 768)
!3353 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !3222, file: !611, line: 154, baseType: !413, size: 64, offset: 832)
!3354 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3222, file: !611, line: 156, baseType: !308, size: 16, offset: 896)
!3355 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !3222, file: !611, line: 157, baseType: !307, size: 16, offset: 912)
!3356 = !DIDerivedType(tag: DW_TAG_member, name: "iattr", scope: !3222, file: !611, line: 158, baseType: !3357, size: 64, offset: 960)
!3357 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3358, size: 64)
!3358 = !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_iattrs", file: !611, line: 32, flags: DIFlagFwdDecl)
!3359 = !DIDerivedType(tag: DW_TAG_member, name: "kref", scope: !210, file: !120, line: 71, baseType: !3360, size: 32, offset: 448)
!3360 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kref", file: !3361, line: 19, size: 32, elements: !3362)
!3361 = !DIFile(filename: "./include/linux/kref.h", directory: "/home/lizy2001/genbc/linux")
!3362 = !{!3363}
!3363 = !DIDerivedType(tag: DW_TAG_member, name: "refcount", scope: !3360, file: !3361, line: 20, baseType: !1226, size: 32)
!3364 = !DIDerivedType(tag: DW_TAG_member, name: "state_initialized", scope: !210, file: !120, line: 75, baseType: !7, size: 1, offset: 480, flags: DIFlagBitField, extraData: i64 480)
!3365 = !DIDerivedType(tag: DW_TAG_member, name: "state_in_sysfs", scope: !210, file: !120, line: 76, baseType: !7, size: 1, offset: 481, flags: DIFlagBitField, extraData: i64 480)
!3366 = !DIDerivedType(tag: DW_TAG_member, name: "state_add_uevent_sent", scope: !210, file: !120, line: 77, baseType: !7, size: 1, offset: 482, flags: DIFlagBitField, extraData: i64 480)
!3367 = !DIDerivedType(tag: DW_TAG_member, name: "state_remove_uevent_sent", scope: !210, file: !120, line: 78, baseType: !7, size: 1, offset: 483, flags: DIFlagBitField, extraData: i64 480)
!3368 = !DIDerivedType(tag: DW_TAG_member, name: "uevent_suppress", scope: !210, file: !120, line: 79, baseType: !7, size: 1, offset: 484, flags: DIFlagBitField, extraData: i64 480)
!3369 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !207, file: !73, line: 463, baseType: !206, size: 64, offset: 512)
!3370 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !207, file: !73, line: 465, baseType: !3371, size: 64, offset: 576)
!3371 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3372, size: 64)
!3372 = !DICompositeType(tag: DW_TAG_structure_type, name: "device_private", file: !73, line: 36, flags: DIFlagFwdDecl)
!3373 = !DIDerivedType(tag: DW_TAG_member, name: "init_name", scope: !207, file: !73, line: 467, baseType: !213, size: 64, offset: 640)
!3374 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !207, file: !73, line: 468, baseType: !3375, size: 64, offset: 704)
!3375 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3376, size: 64)
!3376 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3377)
!3377 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_type", file: !73, line: 87, size: 384, elements: !3378)
!3378 = !{!3379, !3380, !3381, !3385, !3390, !3394}
!3379 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3377, file: !73, line: 88, baseType: !213, size: 64)
!3380 = !DIDerivedType(tag: DW_TAG_member, name: "groups", scope: !3377, file: !73, line: 89, baseType: !320, size: 64, offset: 64)
!3381 = !DIDerivedType(tag: DW_TAG_member, name: "uevent", scope: !3377, file: !73, line: 90, baseType: !3382, size: 64, offset: 128)
!3382 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3383, size: 64)
!3383 = !DISubroutineType(types: !3384)
!3384 = !{!251, !206, !262}
!3385 = !DIDerivedType(tag: DW_TAG_member, name: "devnode", scope: !3377, file: !73, line: 91, baseType: !3386, size: 64, offset: 192)
!3386 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3387, size: 64)
!3387 = !DISubroutineType(types: !3388)
!3388 = !{!267, !206, !3389, !3218, !3219}
!3389 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !307, size: 64)
!3390 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !3377, file: !73, line: 93, baseType: !3391, size: 64, offset: 256)
!3391 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3392, size: 64)
!3392 = !DISubroutineType(types: !3393)
!3393 = !{null, !206}
!3394 = !DIDerivedType(tag: DW_TAG_member, name: "pm", scope: !3377, file: !73, line: 95, baseType: !3395, size: 64, offset: 320)
!3395 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3396, size: 64)
!3396 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3397)
!3397 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pm_ops", file: !80, line: 278, size: 1472, elements: !3398)
!3398 = !{!3399, !3403, !3404, !3405, !3406, !3407, !3408, !3409, !3410, !3411, !3412, !3413, !3414, !3415, !3416, !3417, !3418, !3419, !3420, !3421, !3422, !3423, !3424}
!3399 = !DIDerivedType(tag: DW_TAG_member, name: "prepare", scope: !3397, file: !80, line: 279, baseType: !3400, size: 64)
!3400 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3401, size: 64)
!3401 = !DISubroutineType(types: !3402)
!3402 = !{!251, !206}
!3403 = !DIDerivedType(tag: DW_TAG_member, name: "complete", scope: !3397, file: !80, line: 280, baseType: !3391, size: 64, offset: 64)
!3404 = !DIDerivedType(tag: DW_TAG_member, name: "suspend", scope: !3397, file: !80, line: 281, baseType: !3400, size: 64, offset: 128)
!3405 = !DIDerivedType(tag: DW_TAG_member, name: "resume", scope: !3397, file: !80, line: 282, baseType: !3400, size: 64, offset: 192)
!3406 = !DIDerivedType(tag: DW_TAG_member, name: "freeze", scope: !3397, file: !80, line: 283, baseType: !3400, size: 64, offset: 256)
!3407 = !DIDerivedType(tag: DW_TAG_member, name: "thaw", scope: !3397, file: !80, line: 284, baseType: !3400, size: 64, offset: 320)
!3408 = !DIDerivedType(tag: DW_TAG_member, name: "poweroff", scope: !3397, file: !80, line: 285, baseType: !3400, size: 64, offset: 384)
!3409 = !DIDerivedType(tag: DW_TAG_member, name: "restore", scope: !3397, file: !80, line: 286, baseType: !3400, size: 64, offset: 448)
!3410 = !DIDerivedType(tag: DW_TAG_member, name: "suspend_late", scope: !3397, file: !80, line: 287, baseType: !3400, size: 64, offset: 512)
!3411 = !DIDerivedType(tag: DW_TAG_member, name: "resume_early", scope: !3397, file: !80, line: 288, baseType: !3400, size: 64, offset: 576)
!3412 = !DIDerivedType(tag: DW_TAG_member, name: "freeze_late", scope: !3397, file: !80, line: 289, baseType: !3400, size: 64, offset: 640)
!3413 = !DIDerivedType(tag: DW_TAG_member, name: "thaw_early", scope: !3397, file: !80, line: 290, baseType: !3400, size: 64, offset: 704)
!3414 = !DIDerivedType(tag: DW_TAG_member, name: "poweroff_late", scope: !3397, file: !80, line: 291, baseType: !3400, size: 64, offset: 768)
!3415 = !DIDerivedType(tag: DW_TAG_member, name: "restore_early", scope: !3397, file: !80, line: 292, baseType: !3400, size: 64, offset: 832)
!3416 = !DIDerivedType(tag: DW_TAG_member, name: "suspend_noirq", scope: !3397, file: !80, line: 293, baseType: !3400, size: 64, offset: 896)
!3417 = !DIDerivedType(tag: DW_TAG_member, name: "resume_noirq", scope: !3397, file: !80, line: 294, baseType: !3400, size: 64, offset: 960)
!3418 = !DIDerivedType(tag: DW_TAG_member, name: "freeze_noirq", scope: !3397, file: !80, line: 295, baseType: !3400, size: 64, offset: 1024)
!3419 = !DIDerivedType(tag: DW_TAG_member, name: "thaw_noirq", scope: !3397, file: !80, line: 296, baseType: !3400, size: 64, offset: 1088)
!3420 = !DIDerivedType(tag: DW_TAG_member, name: "poweroff_noirq", scope: !3397, file: !80, line: 297, baseType: !3400, size: 64, offset: 1152)
!3421 = !DIDerivedType(tag: DW_TAG_member, name: "restore_noirq", scope: !3397, file: !80, line: 298, baseType: !3400, size: 64, offset: 1216)
!3422 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_suspend", scope: !3397, file: !80, line: 299, baseType: !3400, size: 64, offset: 1280)
!3423 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_resume", scope: !3397, file: !80, line: 300, baseType: !3400, size: 64, offset: 1344)
!3424 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_idle", scope: !3397, file: !80, line: 301, baseType: !3400, size: 64, offset: 1408)
!3425 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !207, file: !73, line: 470, baseType: !3426, size: 64, offset: 768)
!3426 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3427, size: 64)
!3427 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bus_type", file: !3428, line: 82, size: 1408, elements: !3429)
!3428 = !DIFile(filename: "./include/linux/device/bus.h", directory: "/home/lizy2001/genbc/linux")
!3429 = !{!3430, !3431, !3432, !3433, !3434, !3435, !3436, !3495, !3496, !3497, !3498, !3499, !3500, !3501, !3502, !3503, !3504, !3505, !3506, !3507, !3511, !3514, !3515}
!3430 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3427, file: !3428, line: 83, baseType: !213, size: 64)
!3431 = !DIDerivedType(tag: DW_TAG_member, name: "dev_name", scope: !3427, file: !3428, line: 84, baseType: !213, size: 64, offset: 64)
!3432 = !DIDerivedType(tag: DW_TAG_member, name: "dev_root", scope: !3427, file: !3428, line: 85, baseType: !206, size: 64, offset: 128)
!3433 = !DIDerivedType(tag: DW_TAG_member, name: "bus_groups", scope: !3427, file: !3428, line: 86, baseType: !320, size: 64, offset: 192)
!3434 = !DIDerivedType(tag: DW_TAG_member, name: "dev_groups", scope: !3427, file: !3428, line: 87, baseType: !320, size: 64, offset: 256)
!3435 = !DIDerivedType(tag: DW_TAG_member, name: "drv_groups", scope: !3427, file: !3428, line: 88, baseType: !320, size: 64, offset: 320)
!3436 = !DIDerivedType(tag: DW_TAG_member, name: "match", scope: !3427, file: !3428, line: 90, baseType: !3437, size: 64, offset: 384)
!3437 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3438, size: 64)
!3438 = !DISubroutineType(types: !3439)
!3439 = !{!251, !206, !3440}
!3440 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3441, size: 64)
!3441 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_driver", file: !67, line: 95, size: 1152, elements: !3442)
!3442 = !{!3443, !3444, !3445, !3446, !3447, !3448, !3449, !3462, !3475, !3476, !3477, !3478, !3479, !3487, !3488, !3489, !3490, !3491, !3492}
!3443 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3441, file: !67, line: 96, baseType: !213, size: 64)
!3444 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !3441, file: !67, line: 97, baseType: !3426, size: 64, offset: 64)
!3445 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !3441, file: !67, line: 99, baseType: !625, size: 64, offset: 128)
!3446 = !DIDerivedType(tag: DW_TAG_member, name: "mod_name", scope: !3441, file: !67, line: 100, baseType: !213, size: 64, offset: 192)
!3447 = !DIDerivedType(tag: DW_TAG_member, name: "suppress_bind_attrs", scope: !3441, file: !67, line: 102, baseType: !482, size: 8, offset: 256)
!3448 = !DIDerivedType(tag: DW_TAG_member, name: "probe_type", scope: !3441, file: !67, line: 103, baseType: !66, size: 32, offset: 288)
!3449 = !DIDerivedType(tag: DW_TAG_member, name: "of_match_table", scope: !3441, file: !67, line: 105, baseType: !3450, size: 64, offset: 320)
!3450 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3451, size: 64)
!3451 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3452)
!3452 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "of_device_id", file: !3453, line: 262, size: 1600, elements: !3454)
!3453 = !DIFile(filename: "./include/linux/mod_devicetable.h", directory: "/home/lizy2001/genbc/linux")
!3454 = !{!3455, !3456, !3457, !3461}
!3455 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3452, file: !3453, line: 263, baseType: !2697, size: 256)
!3456 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !3452, file: !3453, line: 264, baseType: !2697, size: 256, offset: 256)
!3457 = !DIDerivedType(tag: DW_TAG_member, name: "compatible", scope: !3452, file: !3453, line: 265, baseType: !3458, size: 1024, offset: 512)
!3458 = !DICompositeType(tag: DW_TAG_array_type, baseType: !215, size: 1024, elements: !3459)
!3459 = !{!3460}
!3460 = !DISubrange(count: 128)
!3461 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !3452, file: !3453, line: 266, baseType: !2124, size: 64, offset: 1536)
!3462 = !DIDerivedType(tag: DW_TAG_member, name: "acpi_match_table", scope: !3441, file: !67, line: 106, baseType: !3463, size: 64, offset: 384)
!3463 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3464, size: 64)
!3464 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3465)
!3465 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "acpi_device_id", file: !3453, line: 210, size: 256, elements: !3466)
!3466 = !{!3467, !3471, !3473, !3474}
!3467 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !3465, file: !3453, line: 211, baseType: !3468, size: 72)
!3468 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1349, size: 72, elements: !3469)
!3469 = !{!3470}
!3470 = !DISubrange(count: 9)
!3471 = !DIDerivedType(tag: DW_TAG_member, name: "driver_data", scope: !3465, file: !3453, line: 212, baseType: !3472, size: 64, offset: 128)
!3472 = !DIDerivedType(tag: DW_TAG_typedef, name: "kernel_ulong_t", file: !3453, line: 14, baseType: !316)
!3473 = !DIDerivedType(tag: DW_TAG_member, name: "cls", scope: !3465, file: !3453, line: 213, baseType: !409, size: 32, offset: 192)
!3474 = !DIDerivedType(tag: DW_TAG_member, name: "cls_msk", scope: !3465, file: !3453, line: 214, baseType: !409, size: 32, offset: 224)
!3475 = !DIDerivedType(tag: DW_TAG_member, name: "probe", scope: !3441, file: !67, line: 108, baseType: !3400, size: 64, offset: 448)
!3476 = !DIDerivedType(tag: DW_TAG_member, name: "sync_state", scope: !3441, file: !67, line: 109, baseType: !3391, size: 64, offset: 512)
!3477 = !DIDerivedType(tag: DW_TAG_member, name: "remove", scope: !3441, file: !67, line: 110, baseType: !3400, size: 64, offset: 576)
!3478 = !DIDerivedType(tag: DW_TAG_member, name: "shutdown", scope: !3441, file: !67, line: 111, baseType: !3391, size: 64, offset: 640)
!3479 = !DIDerivedType(tag: DW_TAG_member, name: "suspend", scope: !3441, file: !67, line: 112, baseType: !3480, size: 64, offset: 704)
!3480 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3481, size: 64)
!3481 = !DISubroutineType(types: !3482)
!3482 = !{!251, !206, !3483}
!3483 = !DIDerivedType(tag: DW_TAG_typedef, name: "pm_message_t", file: !80, line: 52, baseType: !3484)
!3484 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pm_message", file: !80, line: 50, size: 32, elements: !3485)
!3485 = !{!3486}
!3486 = !DIDerivedType(tag: DW_TAG_member, name: "event", scope: !3484, file: !80, line: 51, baseType: !251, size: 32)
!3487 = !DIDerivedType(tag: DW_TAG_member, name: "resume", scope: !3441, file: !67, line: 113, baseType: !3400, size: 64, offset: 768)
!3488 = !DIDerivedType(tag: DW_TAG_member, name: "groups", scope: !3441, file: !67, line: 114, baseType: !320, size: 64, offset: 832)
!3489 = !DIDerivedType(tag: DW_TAG_member, name: "dev_groups", scope: !3441, file: !67, line: 115, baseType: !320, size: 64, offset: 896)
!3490 = !DIDerivedType(tag: DW_TAG_member, name: "pm", scope: !3441, file: !67, line: 117, baseType: !3395, size: 64, offset: 960)
!3491 = !DIDerivedType(tag: DW_TAG_member, name: "coredump", scope: !3441, file: !67, line: 118, baseType: !3391, size: 64, offset: 1024)
!3492 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !3441, file: !67, line: 120, baseType: !3493, size: 64, offset: 1088)
!3493 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3494, size: 64)
!3494 = !DICompositeType(tag: DW_TAG_structure_type, name: "driver_private", file: !67, line: 120, flags: DIFlagFwdDecl)
!3495 = !DIDerivedType(tag: DW_TAG_member, name: "uevent", scope: !3427, file: !3428, line: 91, baseType: !3382, size: 64, offset: 448)
!3496 = !DIDerivedType(tag: DW_TAG_member, name: "probe", scope: !3427, file: !3428, line: 92, baseType: !3400, size: 64, offset: 512)
!3497 = !DIDerivedType(tag: DW_TAG_member, name: "sync_state", scope: !3427, file: !3428, line: 93, baseType: !3391, size: 64, offset: 576)
!3498 = !DIDerivedType(tag: DW_TAG_member, name: "remove", scope: !3427, file: !3428, line: 94, baseType: !3400, size: 64, offset: 640)
!3499 = !DIDerivedType(tag: DW_TAG_member, name: "shutdown", scope: !3427, file: !3428, line: 95, baseType: !3391, size: 64, offset: 704)
!3500 = !DIDerivedType(tag: DW_TAG_member, name: "online", scope: !3427, file: !3428, line: 97, baseType: !3400, size: 64, offset: 768)
!3501 = !DIDerivedType(tag: DW_TAG_member, name: "offline", scope: !3427, file: !3428, line: 98, baseType: !3400, size: 64, offset: 832)
!3502 = !DIDerivedType(tag: DW_TAG_member, name: "suspend", scope: !3427, file: !3428, line: 100, baseType: !3480, size: 64, offset: 896)
!3503 = !DIDerivedType(tag: DW_TAG_member, name: "resume", scope: !3427, file: !3428, line: 101, baseType: !3400, size: 64, offset: 960)
!3504 = !DIDerivedType(tag: DW_TAG_member, name: "num_vf", scope: !3427, file: !3428, line: 103, baseType: !3400, size: 64, offset: 1024)
!3505 = !DIDerivedType(tag: DW_TAG_member, name: "dma_configure", scope: !3427, file: !3428, line: 105, baseType: !3400, size: 64, offset: 1088)
!3506 = !DIDerivedType(tag: DW_TAG_member, name: "pm", scope: !3427, file: !3428, line: 107, baseType: !3395, size: 64, offset: 1152)
!3507 = !DIDerivedType(tag: DW_TAG_member, name: "iommu_ops", scope: !3427, file: !3428, line: 109, baseType: !3508, size: 64, offset: 1216)
!3508 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3509, size: 64)
!3509 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3510)
!3510 = !DICompositeType(tag: DW_TAG_structure_type, name: "iommu_ops", file: !3428, line: 109, flags: DIFlagFwdDecl)
!3511 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !3427, file: !3428, line: 111, baseType: !3512, size: 64, offset: 1280)
!3512 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3513, size: 64)
!3513 = !DICompositeType(tag: DW_TAG_structure_type, name: "subsys_private", file: !3428, line: 111, flags: DIFlagFwdDecl)
!3514 = !DIDerivedType(tag: DW_TAG_member, name: "lock_key", scope: !3427, file: !3428, line: 112, baseType: !640, offset: 1344)
!3515 = !DIDerivedType(tag: DW_TAG_member, name: "need_parent_lock", scope: !3427, file: !3428, line: 114, baseType: !482, size: 8, offset: 1344)
!3516 = !DIDerivedType(tag: DW_TAG_member, name: "driver", scope: !207, file: !73, line: 471, baseType: !3440, size: 64, offset: 832)
!3517 = !DIDerivedType(tag: DW_TAG_member, name: "platform_data", scope: !207, file: !73, line: 473, baseType: !193, size: 64, offset: 896)
!3518 = !DIDerivedType(tag: DW_TAG_member, name: "driver_data", scope: !207, file: !73, line: 475, baseType: !193, size: 64, offset: 960)
!3519 = !DIDerivedType(tag: DW_TAG_member, name: "mutex", scope: !207, file: !73, line: 480, baseType: !1169, size: 192, offset: 1024)
!3520 = !DIDerivedType(tag: DW_TAG_member, name: "links", scope: !207, file: !73, line: 484, baseType: !3521, size: 576, offset: 1216)
!3521 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_links_info", file: !73, line: 361, size: 576, elements: !3522)
!3522 = !{!3523, !3524, !3525, !3526, !3527, !3528}
!3523 = !DIDerivedType(tag: DW_TAG_member, name: "suppliers", scope: !3521, file: !73, line: 362, baseType: !199, size: 128)
!3524 = !DIDerivedType(tag: DW_TAG_member, name: "consumers", scope: !3521, file: !73, line: 363, baseType: !199, size: 128, offset: 128)
!3525 = !DIDerivedType(tag: DW_TAG_member, name: "needs_suppliers", scope: !3521, file: !73, line: 364, baseType: !199, size: 128, offset: 256)
!3526 = !DIDerivedType(tag: DW_TAG_member, name: "defer_hook", scope: !3521, file: !73, line: 365, baseType: !199, size: 128, offset: 384)
!3527 = !DIDerivedType(tag: DW_TAG_member, name: "need_for_probe", scope: !3521, file: !73, line: 366, baseType: !482, size: 8, offset: 512)
!3528 = !DIDerivedType(tag: DW_TAG_member, name: "status", scope: !3521, file: !73, line: 367, baseType: !72, size: 32, offset: 544)
!3529 = !DIDerivedType(tag: DW_TAG_member, name: "power", scope: !207, file: !73, line: 485, baseType: !3530, size: 2304, offset: 1792)
!3530 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pm_info", file: !80, line: 565, size: 2304, elements: !3531)
!3531 = !{!3532, !3533, !3534, !3535, !3536, !3537, !3538, !3539, !3540, !3541, !3542, !3543, !3544, !3545, !3546, !3547, !3585, !3586, !3587, !3588, !3589, !3590, !3591, !3592, !3593, !3594, !3595, !3596, !3597, !3598, !3599, !3600, !3601, !3602, !3603, !3604, !3605, !3606, !3607, !3608, !3609, !3610, !3611, !3612, !3613, !3614, !3615, !3616, !3617, !3627, !3631}
!3532 = !DIDerivedType(tag: DW_TAG_member, name: "power_state", scope: !3530, file: !80, line: 566, baseType: !3483, size: 32)
!3533 = !DIDerivedType(tag: DW_TAG_member, name: "can_wakeup", scope: !3530, file: !80, line: 567, baseType: !7, size: 1, offset: 32, flags: DIFlagBitField, extraData: i64 32)
!3534 = !DIDerivedType(tag: DW_TAG_member, name: "async_suspend", scope: !3530, file: !80, line: 568, baseType: !7, size: 1, offset: 33, flags: DIFlagBitField, extraData: i64 32)
!3535 = !DIDerivedType(tag: DW_TAG_member, name: "in_dpm_list", scope: !3530, file: !80, line: 569, baseType: !482, size: 1, offset: 34, flags: DIFlagBitField, extraData: i64 32)
!3536 = !DIDerivedType(tag: DW_TAG_member, name: "is_prepared", scope: !3530, file: !80, line: 570, baseType: !482, size: 1, offset: 35, flags: DIFlagBitField, extraData: i64 32)
!3537 = !DIDerivedType(tag: DW_TAG_member, name: "is_suspended", scope: !3530, file: !80, line: 571, baseType: !482, size: 1, offset: 36, flags: DIFlagBitField, extraData: i64 32)
!3538 = !DIDerivedType(tag: DW_TAG_member, name: "is_noirq_suspended", scope: !3530, file: !80, line: 572, baseType: !482, size: 1, offset: 37, flags: DIFlagBitField, extraData: i64 32)
!3539 = !DIDerivedType(tag: DW_TAG_member, name: "is_late_suspended", scope: !3530, file: !80, line: 573, baseType: !482, size: 1, offset: 38, flags: DIFlagBitField, extraData: i64 32)
!3540 = !DIDerivedType(tag: DW_TAG_member, name: "no_pm", scope: !3530, file: !80, line: 574, baseType: !482, size: 1, offset: 39, flags: DIFlagBitField, extraData: i64 32)
!3541 = !DIDerivedType(tag: DW_TAG_member, name: "early_init", scope: !3530, file: !80, line: 575, baseType: !482, size: 1, offset: 40, flags: DIFlagBitField, extraData: i64 32)
!3542 = !DIDerivedType(tag: DW_TAG_member, name: "direct_complete", scope: !3530, file: !80, line: 576, baseType: !482, size: 1, offset: 41, flags: DIFlagBitField, extraData: i64 32)
!3543 = !DIDerivedType(tag: DW_TAG_member, name: "driver_flags", scope: !3530, file: !80, line: 577, baseType: !407, size: 32, offset: 64)
!3544 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3530, file: !80, line: 578, baseType: !225, offset: 96)
!3545 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !3530, file: !80, line: 580, baseType: !199, size: 128, offset: 128)
!3546 = !DIDerivedType(tag: DW_TAG_member, name: "completion", scope: !3530, file: !80, line: 581, baseType: !1498, size: 192, offset: 256)
!3547 = !DIDerivedType(tag: DW_TAG_member, name: "wakeup", scope: !3530, file: !80, line: 582, baseType: !3548, size: 64, offset: 448)
!3548 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3549, size: 64)
!3549 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wakeup_source", file: !3550, line: 43, size: 1472, elements: !3551)
!3550 = !DIFile(filename: "./include/linux/pm_wakeup.h", directory: "/home/lizy2001/genbc/linux")
!3551 = !{!3552, !3553, !3554, !3555, !3556, !3559, !3571, !3572, !3573, !3574, !3575, !3576, !3577, !3578, !3579, !3580, !3581, !3582, !3583, !3584}
!3552 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3549, file: !3550, line: 44, baseType: !213, size: 64)
!3553 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !3549, file: !3550, line: 45, baseType: !251, size: 32, offset: 64)
!3554 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !3549, file: !3550, line: 46, baseType: !199, size: 128, offset: 128)
!3555 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3549, file: !3550, line: 47, baseType: !225, offset: 256)
!3556 = !DIDerivedType(tag: DW_TAG_member, name: "wakeirq", scope: !3549, file: !3550, line: 48, baseType: !3557, size: 64, offset: 256)
!3557 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3558, size: 64)
!3558 = !DICompositeType(tag: DW_TAG_structure_type, name: "wake_irq", file: !80, line: 533, flags: DIFlagFwdDecl)
!3559 = !DIDerivedType(tag: DW_TAG_member, name: "timer", scope: !3549, file: !3550, line: 49, baseType: !3560, size: 320, offset: 320)
!3560 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timer_list", file: !3561, line: 11, size: 320, elements: !3562)
!3561 = !DIFile(filename: "./include/linux/timer.h", directory: "/home/lizy2001/genbc/linux")
!3562 = !{!3563, !3564, !3565, !3570}
!3563 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !3560, file: !3561, line: 16, baseType: !634, size: 128)
!3564 = !DIDerivedType(tag: DW_TAG_member, name: "expires", scope: !3560, file: !3561, line: 17, baseType: !316, size: 64, offset: 128)
!3565 = !DIDerivedType(tag: DW_TAG_member, name: "function", scope: !3560, file: !3561, line: 18, baseType: !3566, size: 64, offset: 192)
!3566 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3567, size: 64)
!3567 = !DISubroutineType(types: !3568)
!3568 = !{null, !3569}
!3569 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3560, size: 64)
!3570 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3560, file: !3561, line: 19, baseType: !407, size: 32, offset: 256)
!3571 = !DIDerivedType(tag: DW_TAG_member, name: "timer_expires", scope: !3549, file: !3550, line: 50, baseType: !316, size: 64, offset: 640)
!3572 = !DIDerivedType(tag: DW_TAG_member, name: "total_time", scope: !3549, file: !3550, line: 51, baseType: !1296, size: 64, offset: 704)
!3573 = !DIDerivedType(tag: DW_TAG_member, name: "max_time", scope: !3549, file: !3550, line: 52, baseType: !1296, size: 64, offset: 768)
!3574 = !DIDerivedType(tag: DW_TAG_member, name: "last_time", scope: !3549, file: !3550, line: 53, baseType: !1296, size: 64, offset: 832)
!3575 = !DIDerivedType(tag: DW_TAG_member, name: "start_prevent_time", scope: !3549, file: !3550, line: 54, baseType: !1296, size: 64, offset: 896)
!3576 = !DIDerivedType(tag: DW_TAG_member, name: "prevent_sleep_time", scope: !3549, file: !3550, line: 55, baseType: !1296, size: 64, offset: 960)
!3577 = !DIDerivedType(tag: DW_TAG_member, name: "event_count", scope: !3549, file: !3550, line: 56, baseType: !316, size: 64, offset: 1024)
!3578 = !DIDerivedType(tag: DW_TAG_member, name: "active_count", scope: !3549, file: !3550, line: 57, baseType: !316, size: 64, offset: 1088)
!3579 = !DIDerivedType(tag: DW_TAG_member, name: "relax_count", scope: !3549, file: !3550, line: 58, baseType: !316, size: 64, offset: 1152)
!3580 = !DIDerivedType(tag: DW_TAG_member, name: "expire_count", scope: !3549, file: !3550, line: 59, baseType: !316, size: 64, offset: 1216)
!3581 = !DIDerivedType(tag: DW_TAG_member, name: "wakeup_count", scope: !3549, file: !3550, line: 60, baseType: !316, size: 64, offset: 1280)
!3582 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !3549, file: !3550, line: 61, baseType: !206, size: 64, offset: 1344)
!3583 = !DIDerivedType(tag: DW_TAG_member, name: "active", scope: !3549, file: !3550, line: 62, baseType: !482, size: 1, offset: 1408, flags: DIFlagBitField, extraData: i64 1408)
!3584 = !DIDerivedType(tag: DW_TAG_member, name: "autosleep_enabled", scope: !3549, file: !3550, line: 63, baseType: !482, size: 1, offset: 1409, flags: DIFlagBitField, extraData: i64 1408)
!3585 = !DIDerivedType(tag: DW_TAG_member, name: "wakeup_path", scope: !3530, file: !80, line: 583, baseType: !482, size: 1, offset: 512, flags: DIFlagBitField, extraData: i64 512)
!3586 = !DIDerivedType(tag: DW_TAG_member, name: "syscore", scope: !3530, file: !80, line: 584, baseType: !482, size: 1, offset: 513, flags: DIFlagBitField, extraData: i64 512)
!3587 = !DIDerivedType(tag: DW_TAG_member, name: "no_pm_callbacks", scope: !3530, file: !80, line: 585, baseType: !482, size: 1, offset: 514, flags: DIFlagBitField, extraData: i64 512)
!3588 = !DIDerivedType(tag: DW_TAG_member, name: "must_resume", scope: !3530, file: !80, line: 586, baseType: !7, size: 1, offset: 515, flags: DIFlagBitField, extraData: i64 512)
!3589 = !DIDerivedType(tag: DW_TAG_member, name: "may_skip_resume", scope: !3530, file: !80, line: 587, baseType: !7, size: 1, offset: 516, flags: DIFlagBitField, extraData: i64 512)
!3590 = !DIDerivedType(tag: DW_TAG_member, name: "suspend_timer", scope: !3530, file: !80, line: 592, baseType: !1288, size: 512, offset: 576)
!3591 = !DIDerivedType(tag: DW_TAG_member, name: "timer_expires", scope: !3530, file: !80, line: 593, baseType: !413, size: 64, offset: 1088)
!3592 = !DIDerivedType(tag: DW_TAG_member, name: "work", scope: !3530, file: !80, line: 594, baseType: !1955, size: 256, offset: 1152)
!3593 = !DIDerivedType(tag: DW_TAG_member, name: "wait_queue", scope: !3530, file: !80, line: 595, baseType: !1477, size: 128, offset: 1408)
!3594 = !DIDerivedType(tag: DW_TAG_member, name: "wakeirq", scope: !3530, file: !80, line: 596, baseType: !3557, size: 64, offset: 1536)
!3595 = !DIDerivedType(tag: DW_TAG_member, name: "usage_count", scope: !3530, file: !80, line: 597, baseType: !743, size: 32, offset: 1600)
!3596 = !DIDerivedType(tag: DW_TAG_member, name: "child_count", scope: !3530, file: !80, line: 598, baseType: !743, size: 32, offset: 1632)
!3597 = !DIDerivedType(tag: DW_TAG_member, name: "disable_depth", scope: !3530, file: !80, line: 599, baseType: !7, size: 3, offset: 1664, flags: DIFlagBitField, extraData: i64 1664)
!3598 = !DIDerivedType(tag: DW_TAG_member, name: "idle_notification", scope: !3530, file: !80, line: 600, baseType: !7, size: 1, offset: 1667, flags: DIFlagBitField, extraData: i64 1664)
!3599 = !DIDerivedType(tag: DW_TAG_member, name: "request_pending", scope: !3530, file: !80, line: 601, baseType: !7, size: 1, offset: 1668, flags: DIFlagBitField, extraData: i64 1664)
!3600 = !DIDerivedType(tag: DW_TAG_member, name: "deferred_resume", scope: !3530, file: !80, line: 602, baseType: !7, size: 1, offset: 1669, flags: DIFlagBitField, extraData: i64 1664)
!3601 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_auto", scope: !3530, file: !80, line: 603, baseType: !7, size: 1, offset: 1670, flags: DIFlagBitField, extraData: i64 1664)
!3602 = !DIDerivedType(tag: DW_TAG_member, name: "ignore_children", scope: !3530, file: !80, line: 604, baseType: !482, size: 1, offset: 1671, flags: DIFlagBitField, extraData: i64 1664)
!3603 = !DIDerivedType(tag: DW_TAG_member, name: "no_callbacks", scope: !3530, file: !80, line: 605, baseType: !7, size: 1, offset: 1672, flags: DIFlagBitField, extraData: i64 1664)
!3604 = !DIDerivedType(tag: DW_TAG_member, name: "irq_safe", scope: !3530, file: !80, line: 606, baseType: !7, size: 1, offset: 1673, flags: DIFlagBitField, extraData: i64 1664)
!3605 = !DIDerivedType(tag: DW_TAG_member, name: "use_autosuspend", scope: !3530, file: !80, line: 607, baseType: !7, size: 1, offset: 1674, flags: DIFlagBitField, extraData: i64 1664)
!3606 = !DIDerivedType(tag: DW_TAG_member, name: "timer_autosuspends", scope: !3530, file: !80, line: 608, baseType: !7, size: 1, offset: 1675, flags: DIFlagBitField, extraData: i64 1664)
!3607 = !DIDerivedType(tag: DW_TAG_member, name: "memalloc_noio", scope: !3530, file: !80, line: 609, baseType: !7, size: 1, offset: 1676, flags: DIFlagBitField, extraData: i64 1664)
!3608 = !DIDerivedType(tag: DW_TAG_member, name: "links_count", scope: !3530, file: !80, line: 610, baseType: !7, size: 32, offset: 1696)
!3609 = !DIDerivedType(tag: DW_TAG_member, name: "request", scope: !3530, file: !80, line: 611, baseType: !79, size: 32, offset: 1728)
!3610 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_status", scope: !3530, file: !80, line: 612, baseType: !87, size: 32, offset: 1760)
!3611 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_error", scope: !3530, file: !80, line: 613, baseType: !251, size: 32, offset: 1792)
!3612 = !DIDerivedType(tag: DW_TAG_member, name: "autosuspend_delay", scope: !3530, file: !80, line: 614, baseType: !251, size: 32, offset: 1824)
!3613 = !DIDerivedType(tag: DW_TAG_member, name: "last_busy", scope: !3530, file: !80, line: 615, baseType: !413, size: 64, offset: 1856)
!3614 = !DIDerivedType(tag: DW_TAG_member, name: "active_time", scope: !3530, file: !80, line: 616, baseType: !413, size: 64, offset: 1920)
!3615 = !DIDerivedType(tag: DW_TAG_member, name: "suspended_time", scope: !3530, file: !80, line: 617, baseType: !413, size: 64, offset: 1984)
!3616 = !DIDerivedType(tag: DW_TAG_member, name: "accounting_timestamp", scope: !3530, file: !80, line: 618, baseType: !413, size: 64, offset: 2048)
!3617 = !DIDerivedType(tag: DW_TAG_member, name: "subsys_data", scope: !3530, file: !80, line: 620, baseType: !3618, size: 64, offset: 2112)
!3618 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3619, size: 64)
!3619 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pm_subsys_data", file: !80, line: 536, size: 256, elements: !3620)
!3620 = !{!3621, !3622, !3623, !3624}
!3621 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3619, file: !80, line: 537, baseType: !225)
!3622 = !DIDerivedType(tag: DW_TAG_member, name: "refcount", scope: !3619, file: !80, line: 538, baseType: !7, size: 32)
!3623 = !DIDerivedType(tag: DW_TAG_member, name: "clock_list", scope: !3619, file: !80, line: 540, baseType: !199, size: 128, offset: 64)
!3624 = !DIDerivedType(tag: DW_TAG_member, name: "domain_data", scope: !3619, file: !80, line: 543, baseType: !3625, size: 64, offset: 192)
!3625 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3626, size: 64)
!3626 = !DICompositeType(tag: DW_TAG_structure_type, name: "pm_domain_data", file: !80, line: 534, flags: DIFlagFwdDecl)
!3627 = !DIDerivedType(tag: DW_TAG_member, name: "set_latency_tolerance", scope: !3530, file: !80, line: 621, baseType: !3628, size: 64, offset: 2176)
!3628 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3629, size: 64)
!3629 = !DISubroutineType(types: !3630)
!3630 = !{null, !206, !1440}
!3631 = !DIDerivedType(tag: DW_TAG_member, name: "qos", scope: !3530, file: !80, line: 622, baseType: !3632, size: 64, offset: 2240)
!3632 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3633, size: 64)
!3633 = !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pm_qos", file: !80, line: 622, flags: DIFlagFwdDecl)
!3634 = !DIDerivedType(tag: DW_TAG_member, name: "pm_domain", scope: !207, file: !73, line: 486, baseType: !3635, size: 64, offset: 4096)
!3635 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3636, size: 64)
!3636 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pm_domain", file: !80, line: 642, size: 1792, elements: !3637)
!3637 = !{!3638, !3639, !3640, !3644, !3645, !3646}
!3638 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !3636, file: !80, line: 643, baseType: !3397, size: 1472)
!3639 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !3636, file: !80, line: 644, baseType: !3400, size: 64, offset: 1472)
!3640 = !DIDerivedType(tag: DW_TAG_member, name: "detach", scope: !3636, file: !80, line: 645, baseType: !3641, size: 64, offset: 1536)
!3641 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3642, size: 64)
!3642 = !DISubroutineType(types: !3643)
!3643 = !{null, !206, !482}
!3644 = !DIDerivedType(tag: DW_TAG_member, name: "activate", scope: !3636, file: !80, line: 646, baseType: !3400, size: 64, offset: 1600)
!3645 = !DIDerivedType(tag: DW_TAG_member, name: "sync", scope: !3636, file: !80, line: 647, baseType: !3391, size: 64, offset: 1664)
!3646 = !DIDerivedType(tag: DW_TAG_member, name: "dismiss", scope: !3636, file: !80, line: 648, baseType: !3391, size: 64, offset: 1728)
!3647 = !DIDerivedType(tag: DW_TAG_member, name: "msi_domain", scope: !207, file: !73, line: 493, baseType: !3648, size: 64, offset: 4160)
!3648 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3649, size: 64)
!3649 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "irq_domain", file: !94, line: 162, size: 1088, elements: !3650)
!3650 = !{!3651, !3652, !3653, !3826, !3827, !3828, !3829, !3830, !3831, !3834, !3835, !3836, !3837, !3838, !3839, !3840}
!3651 = !DIDerivedType(tag: DW_TAG_member, name: "link", scope: !3649, file: !94, line: 163, baseType: !199, size: 128)
!3652 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3649, file: !94, line: 164, baseType: !213, size: 64, offset: 128)
!3653 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !3649, file: !94, line: 165, baseType: !3654, size: 64, offset: 192)
!3654 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3655, size: 64)
!3655 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3656)
!3656 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "irq_domain_ops", file: !94, line: 105, size: 640, elements: !3657)
!3657 = !{!3658, !3776, !3787, !3792, !3796, !3803, !3807, !3811, !3818, !3822}
!3658 = !DIDerivedType(tag: DW_TAG_member, name: "match", scope: !3656, file: !94, line: 106, baseType: !3659, size: 64)
!3659 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3660, size: 64)
!3660 = !DISubroutineType(types: !3661)
!3661 = !{!251, !3648, !3662, !93}
!3662 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3663, size: 64)
!3663 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_node", file: !3664, line: 51, size: 1344, elements: !3665)
!3664 = !DIFile(filename: "./include/linux/of.h", directory: "/home/lizy2001/genbc/linux")
!3665 = !{!3666, !3667, !3669, !3670, !3760, !3769, !3770, !3771, !3772, !3773, !3774, !3775}
!3666 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3663, file: !3664, line: 52, baseType: !213, size: 64)
!3667 = !DIDerivedType(tag: DW_TAG_member, name: "phandle", scope: !3663, file: !3664, line: 53, baseType: !3668, size: 32, offset: 64)
!3668 = !DIDerivedType(tag: DW_TAG_typedef, name: "phandle", file: !3664, line: 28, baseType: !407)
!3669 = !DIDerivedType(tag: DW_TAG_member, name: "full_name", scope: !3663, file: !3664, line: 54, baseType: !213, size: 64, offset: 128)
!3670 = !DIDerivedType(tag: DW_TAG_member, name: "fwnode", scope: !3663, file: !3664, line: 55, baseType: !3671, size: 192, offset: 192)
!3671 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fwnode_handle", file: !3672, line: 17, size: 192, elements: !3673)
!3672 = !DIFile(filename: "./include/linux/fwnode.h", directory: "/home/lizy2001/genbc/linux")
!3673 = !{!3674, !3676, !3759}
!3674 = !DIDerivedType(tag: DW_TAG_member, name: "secondary", scope: !3671, file: !3672, line: 18, baseType: !3675, size: 64)
!3675 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3671, size: 64)
!3676 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !3671, file: !3672, line: 19, baseType: !3677, size: 64, offset: 64)
!3677 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3678, size: 64)
!3678 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3679)
!3679 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fwnode_operations", file: !3672, line: 110, size: 1152, elements: !3680)
!3680 = !{!3681, !3685, !3689, !3695, !3701, !3705, !3709, !3714, !3718, !3719, !3723, !3727, !3731, !3742, !3743, !3744, !3745, !3755}
!3681 = !DIDerivedType(tag: DW_TAG_member, name: "get", scope: !3679, file: !3672, line: 111, baseType: !3682, size: 64)
!3682 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3683, size: 64)
!3683 = !DISubroutineType(types: !3684)
!3684 = !{!3675, !3675}
!3685 = !DIDerivedType(tag: DW_TAG_member, name: "put", scope: !3679, file: !3672, line: 112, baseType: !3686, size: 64, offset: 64)
!3686 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3687, size: 64)
!3687 = !DISubroutineType(types: !3688)
!3688 = !{null, !3675}
!3689 = !DIDerivedType(tag: DW_TAG_member, name: "device_is_available", scope: !3679, file: !3672, line: 113, baseType: !3690, size: 64, offset: 128)
!3690 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3691, size: 64)
!3691 = !DISubroutineType(types: !3692)
!3692 = !{!482, !3693}
!3693 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3694, size: 64)
!3694 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3671)
!3695 = !DIDerivedType(tag: DW_TAG_member, name: "device_get_match_data", scope: !3679, file: !3672, line: 114, baseType: !3696, size: 64, offset: 192)
!3696 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3697, size: 64)
!3697 = !DISubroutineType(types: !3698)
!3698 = !{!2124, !3693, !3699}
!3699 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3700, size: 64)
!3700 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !207)
!3701 = !DIDerivedType(tag: DW_TAG_member, name: "property_present", scope: !3679, file: !3672, line: 116, baseType: !3702, size: 64, offset: 256)
!3702 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3703, size: 64)
!3703 = !DISubroutineType(types: !3704)
!3704 = !{!482, !3693, !213}
!3705 = !DIDerivedType(tag: DW_TAG_member, name: "property_read_int_array", scope: !3679, file: !3672, line: 118, baseType: !3706, size: 64, offset: 320)
!3706 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3707, size: 64)
!3707 = !DISubroutineType(types: !3708)
!3708 = !{!251, !3693, !213, !7, !193, !313}
!3709 = !DIDerivedType(tag: DW_TAG_member, name: "property_read_string_array", scope: !3679, file: !3672, line: 123, baseType: !3710, size: 64, offset: 384)
!3710 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3711, size: 64)
!3711 = !DISubroutineType(types: !3712)
!3712 = !{!251, !3693, !213, !3713, !313}
!3713 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !213, size: 64)
!3714 = !DIDerivedType(tag: DW_TAG_member, name: "get_name", scope: !3679, file: !3672, line: 126, baseType: !3715, size: 64, offset: 448)
!3715 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3716, size: 64)
!3716 = !DISubroutineType(types: !3717)
!3717 = !{!213, !3693}
!3718 = !DIDerivedType(tag: DW_TAG_member, name: "get_name_prefix", scope: !3679, file: !3672, line: 127, baseType: !3715, size: 64, offset: 512)
!3719 = !DIDerivedType(tag: DW_TAG_member, name: "get_parent", scope: !3679, file: !3672, line: 128, baseType: !3720, size: 64, offset: 576)
!3720 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3721, size: 64)
!3721 = !DISubroutineType(types: !3722)
!3722 = !{!3675, !3693}
!3723 = !DIDerivedType(tag: DW_TAG_member, name: "get_next_child_node", scope: !3679, file: !3672, line: 130, baseType: !3724, size: 64, offset: 640)
!3724 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3725, size: 64)
!3725 = !DISubroutineType(types: !3726)
!3726 = !{!3675, !3693, !3675}
!3727 = !DIDerivedType(tag: DW_TAG_member, name: "get_named_child_node", scope: !3679, file: !3672, line: 133, baseType: !3728, size: 64, offset: 704)
!3728 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3729, size: 64)
!3729 = !DISubroutineType(types: !3730)
!3730 = !{!3675, !3693, !213}
!3731 = !DIDerivedType(tag: DW_TAG_member, name: "get_reference_args", scope: !3679, file: !3672, line: 135, baseType: !3732, size: 64, offset: 768)
!3732 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3733, size: 64)
!3733 = !DISubroutineType(types: !3734)
!3734 = !{!251, !3693, !213, !213, !7, !7, !3735}
!3735 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3736, size: 64)
!3736 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fwnode_reference_args", file: !3672, line: 43, size: 640, elements: !3737)
!3737 = !{!3738, !3739, !3740}
!3738 = !DIDerivedType(tag: DW_TAG_member, name: "fwnode", scope: !3736, file: !3672, line: 44, baseType: !3675, size: 64)
!3739 = !DIDerivedType(tag: DW_TAG_member, name: "nargs", scope: !3736, file: !3672, line: 45, baseType: !7, size: 32, offset: 64)
!3740 = !DIDerivedType(tag: DW_TAG_member, name: "args", scope: !3736, file: !3672, line: 46, baseType: !3741, size: 512, offset: 128)
!3741 = !DICompositeType(tag: DW_TAG_array_type, baseType: !413, size: 512, elements: !1326)
!3742 = !DIDerivedType(tag: DW_TAG_member, name: "graph_get_next_endpoint", scope: !3679, file: !3672, line: 140, baseType: !3724, size: 64, offset: 832)
!3743 = !DIDerivedType(tag: DW_TAG_member, name: "graph_get_remote_endpoint", scope: !3679, file: !3672, line: 143, baseType: !3720, size: 64, offset: 896)
!3744 = !DIDerivedType(tag: DW_TAG_member, name: "graph_get_port_parent", scope: !3679, file: !3672, line: 145, baseType: !3682, size: 64, offset: 960)
!3745 = !DIDerivedType(tag: DW_TAG_member, name: "graph_parse_endpoint", scope: !3679, file: !3672, line: 146, baseType: !3746, size: 64, offset: 1024)
!3746 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3747, size: 64)
!3747 = !DISubroutineType(types: !3748)
!3748 = !{!251, !3693, !3749}
!3749 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3750, size: 64)
!3750 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fwnode_endpoint", file: !3672, line: 29, size: 128, elements: !3751)
!3751 = !{!3752, !3753, !3754}
!3752 = !DIDerivedType(tag: DW_TAG_member, name: "port", scope: !3750, file: !3672, line: 30, baseType: !7, size: 32)
!3753 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !3750, file: !3672, line: 31, baseType: !7, size: 32, offset: 32)
!3754 = !DIDerivedType(tag: DW_TAG_member, name: "local_fwnode", scope: !3750, file: !3672, line: 32, baseType: !3693, size: 64, offset: 64)
!3755 = !DIDerivedType(tag: DW_TAG_member, name: "add_links", scope: !3679, file: !3672, line: 148, baseType: !3756, size: 64, offset: 1088)
!3756 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3757, size: 64)
!3757 = !DISubroutineType(types: !3758)
!3758 = !{!251, !3693, !206}
!3759 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !3671, file: !3672, line: 20, baseType: !206, size: 64, offset: 128)
!3760 = !DIDerivedType(tag: DW_TAG_member, name: "properties", scope: !3663, file: !3664, line: 57, baseType: !3761, size: 64, offset: 384)
!3761 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3762, size: 64)
!3762 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "property", file: !3664, line: 31, size: 704, elements: !3763)
!3763 = !{!3764, !3765, !3766, !3767, !3768}
!3764 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3762, file: !3664, line: 32, baseType: !267, size: 64)
!3765 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !3762, file: !3664, line: 33, baseType: !251, size: 32, offset: 64)
!3766 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !3762, file: !3664, line: 34, baseType: !193, size: 64, offset: 128)
!3767 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !3762, file: !3664, line: 35, baseType: !3761, size: 64, offset: 192)
!3768 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !3762, file: !3664, line: 43, baseType: !335, size: 448, offset: 256)
!3769 = !DIDerivedType(tag: DW_TAG_member, name: "deadprops", scope: !3663, file: !3664, line: 58, baseType: !3761, size: 64, offset: 448)
!3770 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !3663, file: !3664, line: 59, baseType: !3662, size: 64, offset: 512)
!3771 = !DIDerivedType(tag: DW_TAG_member, name: "child", scope: !3663, file: !3664, line: 60, baseType: !3662, size: 64, offset: 576)
!3772 = !DIDerivedType(tag: DW_TAG_member, name: "sibling", scope: !3663, file: !3664, line: 61, baseType: !3662, size: 64, offset: 640)
!3773 = !DIDerivedType(tag: DW_TAG_member, name: "kobj", scope: !3663, file: !3664, line: 63, baseType: !210, size: 512, offset: 704)
!3774 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !3663, file: !3664, line: 65, baseType: !316, size: 64, offset: 1216)
!3775 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !3663, file: !3664, line: 66, baseType: !193, size: 64, offset: 1280)
!3776 = !DIDerivedType(tag: DW_TAG_member, name: "select", scope: !3656, file: !94, line: 108, baseType: !3777, size: 64, offset: 64)
!3777 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3778, size: 64)
!3778 = !DISubroutineType(types: !3779)
!3779 = !{!251, !3648, !3780, !93}
!3780 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3781, size: 64)
!3781 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "irq_fwspec", file: !94, line: 63, size: 640, elements: !3782)
!3782 = !{!3783, !3784, !3785}
!3783 = !DIDerivedType(tag: DW_TAG_member, name: "fwnode", scope: !3781, file: !94, line: 64, baseType: !3675, size: 64)
!3784 = !DIDerivedType(tag: DW_TAG_member, name: "param_count", scope: !3781, file: !94, line: 65, baseType: !251, size: 32, offset: 64)
!3785 = !DIDerivedType(tag: DW_TAG_member, name: "param", scope: !3781, file: !94, line: 66, baseType: !3786, size: 512, offset: 96)
!3786 = !DICompositeType(tag: DW_TAG_array_type, baseType: !407, size: 512, elements: !1731)
!3787 = !DIDerivedType(tag: DW_TAG_member, name: "map", scope: !3656, file: !94, line: 110, baseType: !3788, size: 64, offset: 128)
!3788 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3789, size: 64)
!3789 = !DISubroutineType(types: !3790)
!3790 = !{!251, !3648, !7, !3791}
!3791 = !DIDerivedType(tag: DW_TAG_typedef, name: "irq_hw_number_t", file: !200, line: 164, baseType: !316)
!3792 = !DIDerivedType(tag: DW_TAG_member, name: "unmap", scope: !3656, file: !94, line: 111, baseType: !3793, size: 64, offset: 192)
!3793 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3794, size: 64)
!3794 = !DISubroutineType(types: !3795)
!3795 = !{null, !3648, !7}
!3796 = !DIDerivedType(tag: DW_TAG_member, name: "xlate", scope: !3656, file: !94, line: 112, baseType: !3797, size: 64, offset: 256)
!3797 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3798, size: 64)
!3798 = !DISubroutineType(types: !3799)
!3799 = !{!251, !3648, !3662, !3800, !7, !3802, !2680}
!3800 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3801, size: 64)
!3801 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !407)
!3802 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !316, size: 64)
!3803 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !3656, file: !94, line: 117, baseType: !3804, size: 64, offset: 320)
!3804 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3805, size: 64)
!3805 = !DISubroutineType(types: !3806)
!3806 = !{!251, !3648, !7, !7, !193}
!3807 = !DIDerivedType(tag: DW_TAG_member, name: "free", scope: !3656, file: !94, line: 119, baseType: !3808, size: 64, offset: 384)
!3808 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3809, size: 64)
!3809 = !DISubroutineType(types: !3810)
!3810 = !{null, !3648, !7, !7}
!3811 = !DIDerivedType(tag: DW_TAG_member, name: "activate", scope: !3656, file: !94, line: 121, baseType: !3812, size: 64, offset: 448)
!3812 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3813, size: 64)
!3813 = !DISubroutineType(types: !3814)
!3814 = !{!251, !3648, !3815, !482}
!3815 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3816, size: 64)
!3816 = !DICompositeType(tag: DW_TAG_structure_type, name: "irq_data", file: !3817, line: 11, flags: DIFlagFwdDecl)
!3817 = !DIFile(filename: "./include/linux/irqhandler.h", directory: "/home/lizy2001/genbc/linux")
!3818 = !DIDerivedType(tag: DW_TAG_member, name: "deactivate", scope: !3656, file: !94, line: 122, baseType: !3819, size: 64, offset: 512)
!3819 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3820, size: 64)
!3820 = !DISubroutineType(types: !3821)
!3821 = !{null, !3648, !3815}
!3822 = !DIDerivedType(tag: DW_TAG_member, name: "translate", scope: !3656, file: !94, line: 123, baseType: !3823, size: 64, offset: 576)
!3823 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3824, size: 64)
!3824 = !DISubroutineType(types: !3825)
!3825 = !{!251, !3648, !3780, !3802, !2680}
!3826 = !DIDerivedType(tag: DW_TAG_member, name: "host_data", scope: !3649, file: !94, line: 166, baseType: !193, size: 64, offset: 256)
!3827 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3649, file: !94, line: 167, baseType: !7, size: 32, offset: 320)
!3828 = !DIDerivedType(tag: DW_TAG_member, name: "mapcount", scope: !3649, file: !94, line: 168, baseType: !7, size: 32, offset: 352)
!3829 = !DIDerivedType(tag: DW_TAG_member, name: "fwnode", scope: !3649, file: !94, line: 171, baseType: !3675, size: 64, offset: 384)
!3830 = !DIDerivedType(tag: DW_TAG_member, name: "bus_token", scope: !3649, file: !94, line: 172, baseType: !93, size: 32, offset: 448)
!3831 = !DIDerivedType(tag: DW_TAG_member, name: "gc", scope: !3649, file: !94, line: 173, baseType: !3832, size: 64, offset: 512)
!3832 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3833, size: 64)
!3833 = !DICompositeType(tag: DW_TAG_structure_type, name: "irq_domain_chip_generic", file: !94, line: 134, flags: DIFlagFwdDecl)
!3834 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !3649, file: !94, line: 175, baseType: !3648, size: 64, offset: 576)
!3835 = !DIDerivedType(tag: DW_TAG_member, name: "hwirq_max", scope: !3649, file: !94, line: 182, baseType: !3791, size: 64, offset: 640)
!3836 = !DIDerivedType(tag: DW_TAG_member, name: "revmap_direct_max_irq", scope: !3649, file: !94, line: 183, baseType: !7, size: 32, offset: 704)
!3837 = !DIDerivedType(tag: DW_TAG_member, name: "revmap_size", scope: !3649, file: !94, line: 184, baseType: !7, size: 32, offset: 736)
!3838 = !DIDerivedType(tag: DW_TAG_member, name: "revmap_tree", scope: !3649, file: !94, line: 185, baseType: !734, size: 128, offset: 768)
!3839 = !DIDerivedType(tag: DW_TAG_member, name: "revmap_tree_mutex", scope: !3649, file: !94, line: 186, baseType: !1169, size: 192, offset: 896)
!3840 = !DIDerivedType(tag: DW_TAG_member, name: "linear_revmap", scope: !3649, file: !94, line: 187, baseType: !3841, offset: 1088)
!3841 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7, elements: !2328)
!3842 = !DIDerivedType(tag: DW_TAG_member, name: "msi_list", scope: !207, file: !73, line: 499, baseType: !199, size: 128, offset: 4224)
!3843 = !DIDerivedType(tag: DW_TAG_member, name: "dma_ops", scope: !207, file: !73, line: 502, baseType: !3844, size: 64, offset: 4352)
!3844 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3845, size: 64)
!3845 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3846)
!3846 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dma_map_ops", file: !3847, line: 14, size: 1472, elements: !3848)
!3847 = !DIFile(filename: "./include/linux/dma-map-ops.h", directory: "/home/lizy2001/genbc/linux")
!3848 = !{!3849, !3854, !3858, !3862, !3866, !3870, !3874, !3878, !3897, !3901, !3905, !3909, !3913, !3917, !3918, !3922, !3923, !3927, !3928, !3932, !3936, !3940, !3944}
!3849 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !3846, file: !3847, line: 15, baseType: !3850, size: 64)
!3850 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3851, size: 64)
!3851 = !DISubroutineType(types: !3852)
!3852 = !{!193, !206, !313, !3853, !739, !316}
!3853 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !916, size: 64)
!3854 = !DIDerivedType(tag: DW_TAG_member, name: "free", scope: !3846, file: !3847, line: 18, baseType: !3855, size: 64, offset: 64)
!3855 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3856, size: 64)
!3856 = !DISubroutineType(types: !3857)
!3857 = !{null, !206, !313, !193, !916, !316}
!3858 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_pages", scope: !3846, file: !3847, line: 20, baseType: !3859, size: 64, offset: 128)
!3859 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3860, size: 64)
!3860 = !DISubroutineType(types: !3861)
!3861 = !{!716, !206, !313, !3853, !107, !739}
!3862 = !DIDerivedType(tag: DW_TAG_member, name: "free_pages", scope: !3846, file: !3847, line: 23, baseType: !3863, size: 64, offset: 192)
!3863 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3864, size: 64)
!3864 = !DISubroutineType(types: !3865)
!3865 = !{null, !206, !313, !716, !916, !107}
!3866 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_noncoherent", scope: !3846, file: !3847, line: 25, baseType: !3867, size: 64, offset: 256)
!3867 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3868, size: 64)
!3868 = !DISubroutineType(types: !3869)
!3869 = !{!193, !206, !313, !3853, !107, !739}
!3870 = !DIDerivedType(tag: DW_TAG_member, name: "free_noncoherent", scope: !3846, file: !3847, line: 28, baseType: !3871, size: 64, offset: 320)
!3871 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3872, size: 64)
!3872 = !DISubroutineType(types: !3873)
!3873 = !{null, !206, !313, !193, !916, !107}
!3874 = !DIDerivedType(tag: DW_TAG_member, name: "mmap", scope: !3846, file: !3847, line: 30, baseType: !3875, size: 64, offset: 384)
!3875 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3876, size: 64)
!3876 = !DISubroutineType(types: !3877)
!3877 = !{!251, !206, !977, !193, !916, !313, !316}
!3878 = !DIDerivedType(tag: DW_TAG_member, name: "get_sgtable", scope: !3846, file: !3847, line: 33, baseType: !3879, size: 64, offset: 448)
!3879 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3880, size: 64)
!3880 = !DISubroutineType(types: !3881)
!3881 = !{!251, !206, !3882, !193, !916, !313, !316}
!3882 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3883, size: 64)
!3883 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sg_table", file: !3884, line: 42, size: 128, elements: !3885)
!3884 = !DIFile(filename: "./include/linux/scatterlist.h", directory: "/home/lizy2001/genbc/linux")
!3885 = !{!3886, !3895, !3896}
!3886 = !DIDerivedType(tag: DW_TAG_member, name: "sgl", scope: !3883, file: !3884, line: 43, baseType: !3887, size: 64)
!3887 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3888, size: 64)
!3888 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "scatterlist", file: !3884, line: 11, size: 256, elements: !3889)
!3889 = !{!3890, !3891, !3892, !3893, !3894}
!3890 = !DIDerivedType(tag: DW_TAG_member, name: "page_link", scope: !3888, file: !3884, line: 12, baseType: !316, size: 64)
!3891 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !3888, file: !3884, line: 13, baseType: !7, size: 32, offset: 64)
!3892 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !3888, file: !3884, line: 14, baseType: !7, size: 32, offset: 96)
!3893 = !DIDerivedType(tag: DW_TAG_member, name: "dma_address", scope: !3888, file: !3884, line: 15, baseType: !916, size: 64, offset: 128)
!3894 = !DIDerivedType(tag: DW_TAG_member, name: "dma_length", scope: !3888, file: !3884, line: 17, baseType: !7, size: 32, offset: 192)
!3895 = !DIDerivedType(tag: DW_TAG_member, name: "nents", scope: !3883, file: !3884, line: 44, baseType: !7, size: 32, offset: 64)
!3896 = !DIDerivedType(tag: DW_TAG_member, name: "orig_nents", scope: !3883, file: !3884, line: 45, baseType: !7, size: 32, offset: 96)
!3897 = !DIDerivedType(tag: DW_TAG_member, name: "map_page", scope: !3846, file: !3847, line: 37, baseType: !3898, size: 64, offset: 512)
!3898 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3899, size: 64)
!3899 = !DISubroutineType(types: !3900)
!3900 = !{!916, !206, !716, !316, !313, !107, !316}
!3901 = !DIDerivedType(tag: DW_TAG_member, name: "unmap_page", scope: !3846, file: !3847, line: 40, baseType: !3902, size: 64, offset: 576)
!3902 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3903, size: 64)
!3903 = !DISubroutineType(types: !3904)
!3904 = !{null, !206, !916, !313, !107, !316}
!3905 = !DIDerivedType(tag: DW_TAG_member, name: "map_sg", scope: !3846, file: !3847, line: 47, baseType: !3906, size: 64, offset: 640)
!3906 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3907, size: 64)
!3907 = !DISubroutineType(types: !3908)
!3908 = !{!251, !206, !3887, !251, !107, !316}
!3909 = !DIDerivedType(tag: DW_TAG_member, name: "unmap_sg", scope: !3846, file: !3847, line: 49, baseType: !3910, size: 64, offset: 704)
!3910 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3911, size: 64)
!3911 = !DISubroutineType(types: !3912)
!3912 = !{null, !206, !3887, !251, !107, !316}
!3913 = !DIDerivedType(tag: DW_TAG_member, name: "map_resource", scope: !3846, file: !3847, line: 51, baseType: !3914, size: 64, offset: 768)
!3914 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3915, size: 64)
!3915 = !DISubroutineType(types: !3916)
!3916 = !{!916, !206, !2122, !313, !107, !316}
!3917 = !DIDerivedType(tag: DW_TAG_member, name: "unmap_resource", scope: !3846, file: !3847, line: 54, baseType: !3902, size: 64, offset: 832)
!3918 = !DIDerivedType(tag: DW_TAG_member, name: "sync_single_for_cpu", scope: !3846, file: !3847, line: 57, baseType: !3919, size: 64, offset: 896)
!3919 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3920, size: 64)
!3920 = !DISubroutineType(types: !3921)
!3921 = !{null, !206, !916, !313, !107}
!3922 = !DIDerivedType(tag: DW_TAG_member, name: "sync_single_for_device", scope: !3846, file: !3847, line: 59, baseType: !3919, size: 64, offset: 960)
!3923 = !DIDerivedType(tag: DW_TAG_member, name: "sync_sg_for_cpu", scope: !3846, file: !3847, line: 62, baseType: !3924, size: 64, offset: 1024)
!3924 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3925, size: 64)
!3925 = !DISubroutineType(types: !3926)
!3926 = !{null, !206, !3887, !251, !107}
!3927 = !DIDerivedType(tag: DW_TAG_member, name: "sync_sg_for_device", scope: !3846, file: !3847, line: 64, baseType: !3924, size: 64, offset: 1088)
!3928 = !DIDerivedType(tag: DW_TAG_member, name: "cache_sync", scope: !3846, file: !3847, line: 66, baseType: !3929, size: 64, offset: 1152)
!3929 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3930, size: 64)
!3930 = !DISubroutineType(types: !3931)
!3931 = !{null, !206, !193, !313, !107}
!3932 = !DIDerivedType(tag: DW_TAG_member, name: "dma_supported", scope: !3846, file: !3847, line: 68, baseType: !3933, size: 64, offset: 1216)
!3933 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3934, size: 64)
!3934 = !DISubroutineType(types: !3935)
!3935 = !{!251, !206, !413}
!3936 = !DIDerivedType(tag: DW_TAG_member, name: "get_required_mask", scope: !3846, file: !3847, line: 69, baseType: !3937, size: 64, offset: 1280)
!3937 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3938, size: 64)
!3938 = !DISubroutineType(types: !3939)
!3939 = !{!413, !206}
!3940 = !DIDerivedType(tag: DW_TAG_member, name: "max_mapping_size", scope: !3846, file: !3847, line: 70, baseType: !3941, size: 64, offset: 1344)
!3941 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3942, size: 64)
!3942 = !DISubroutineType(types: !3943)
!3943 = !{!313, !206}
!3944 = !DIDerivedType(tag: DW_TAG_member, name: "get_merge_boundary", scope: !3846, file: !3847, line: 71, baseType: !3945, size: 64, offset: 1408)
!3945 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3946, size: 64)
!3946 = !DISubroutineType(types: !3947)
!3947 = !{!316, !206}
!3948 = !DIDerivedType(tag: DW_TAG_member, name: "dma_mask", scope: !207, file: !73, line: 504, baseType: !3949, size: 64, offset: 4416)
!3949 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !413, size: 64)
!3950 = !DIDerivedType(tag: DW_TAG_member, name: "coherent_dma_mask", scope: !207, file: !73, line: 505, baseType: !413, size: 64, offset: 4480)
!3951 = !DIDerivedType(tag: DW_TAG_member, name: "bus_dma_limit", scope: !207, file: !73, line: 510, baseType: !413, size: 64, offset: 4544)
!3952 = !DIDerivedType(tag: DW_TAG_member, name: "dma_range_map", scope: !207, file: !73, line: 511, baseType: !3953, size: 64, offset: 4608)
!3953 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3954, size: 64)
!3954 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3955)
!3955 = !DICompositeType(tag: DW_TAG_structure_type, name: "bus_dma_region", file: !73, line: 511, flags: DIFlagFwdDecl)
!3956 = !DIDerivedType(tag: DW_TAG_member, name: "dma_parms", scope: !207, file: !73, line: 513, baseType: !3957, size: 64, offset: 4672)
!3957 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3958, size: 64)
!3958 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_dma_parameters", file: !73, line: 288, size: 128, elements: !3959)
!3959 = !{!3960, !3961}
!3960 = !DIDerivedType(tag: DW_TAG_member, name: "max_segment_size", scope: !3958, file: !73, line: 293, baseType: !7, size: 32)
!3961 = !DIDerivedType(tag: DW_TAG_member, name: "segment_boundary_mask", scope: !3958, file: !73, line: 294, baseType: !316, size: 64, offset: 64)
!3962 = !DIDerivedType(tag: DW_TAG_member, name: "dma_pools", scope: !207, file: !73, line: 515, baseType: !199, size: 128, offset: 4736)
!3963 = !DIDerivedType(tag: DW_TAG_member, name: "archdata", scope: !207, file: !73, line: 526, baseType: !3964, offset: 4864)
!3964 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_archdata", file: !3965, line: 5, elements: !239)
!3965 = !DIFile(filename: "./arch/x86/include/asm/device.h", directory: "/home/lizy2001/genbc/linux")
!3966 = !DIDerivedType(tag: DW_TAG_member, name: "of_node", scope: !207, file: !73, line: 528, baseType: !3662, size: 64, offset: 4864)
!3967 = !DIDerivedType(tag: DW_TAG_member, name: "fwnode", scope: !207, file: !73, line: 529, baseType: !3675, size: 64, offset: 4928)
!3968 = !DIDerivedType(tag: DW_TAG_member, name: "devt", scope: !207, file: !73, line: 534, baseType: !505, size: 32, offset: 4992)
!3969 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !207, file: !73, line: 535, baseType: !407, size: 32, offset: 5024)
!3970 = !DIDerivedType(tag: DW_TAG_member, name: "devres_lock", scope: !207, file: !73, line: 537, baseType: !225, offset: 5056)
!3971 = !DIDerivedType(tag: DW_TAG_member, name: "devres_head", scope: !207, file: !73, line: 538, baseType: !199, size: 128, offset: 5056)
!3972 = !DIDerivedType(tag: DW_TAG_member, name: "class", scope: !207, file: !73, line: 540, baseType: !3973, size: 64, offset: 5184)
!3973 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3974, size: 64)
!3974 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "class", file: !3975, line: 54, size: 960, elements: !3976)
!3975 = !DIFile(filename: "./include/linux/device/class.h", directory: "/home/lizy2001/genbc/linux")
!3976 = !{!3977, !3978, !3979, !3980, !3981, !3982, !3983, !3987, !3991, !3992, !3993, !3994, !3998, !4002, !4003}
!3977 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3974, file: !3975, line: 55, baseType: !213, size: 64)
!3978 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !3974, file: !3975, line: 56, baseType: !625, size: 64, offset: 64)
!3979 = !DIDerivedType(tag: DW_TAG_member, name: "class_groups", scope: !3974, file: !3975, line: 58, baseType: !320, size: 64, offset: 128)
!3980 = !DIDerivedType(tag: DW_TAG_member, name: "dev_groups", scope: !3974, file: !3975, line: 59, baseType: !320, size: 64, offset: 192)
!3981 = !DIDerivedType(tag: DW_TAG_member, name: "dev_kobj", scope: !3974, file: !3975, line: 60, baseType: !218, size: 64, offset: 256)
!3982 = !DIDerivedType(tag: DW_TAG_member, name: "dev_uevent", scope: !3974, file: !3975, line: 62, baseType: !3382, size: 64, offset: 320)
!3983 = !DIDerivedType(tag: DW_TAG_member, name: "devnode", scope: !3974, file: !3975, line: 63, baseType: !3984, size: 64, offset: 384)
!3984 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3985, size: 64)
!3985 = !DISubroutineType(types: !3986)
!3986 = !{!267, !206, !3389}
!3987 = !DIDerivedType(tag: DW_TAG_member, name: "class_release", scope: !3974, file: !3975, line: 65, baseType: !3988, size: 64, offset: 448)
!3988 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3989, size: 64)
!3989 = !DISubroutineType(types: !3990)
!3990 = !{null, !3973}
!3991 = !DIDerivedType(tag: DW_TAG_member, name: "dev_release", scope: !3974, file: !3975, line: 66, baseType: !3391, size: 64, offset: 512)
!3992 = !DIDerivedType(tag: DW_TAG_member, name: "shutdown_pre", scope: !3974, file: !3975, line: 68, baseType: !3400, size: 64, offset: 576)
!3993 = !DIDerivedType(tag: DW_TAG_member, name: "ns_type", scope: !3974, file: !3975, line: 70, baseType: !3186, size: 64, offset: 640)
!3994 = !DIDerivedType(tag: DW_TAG_member, name: "namespace", scope: !3974, file: !3975, line: 71, baseType: !3995, size: 64, offset: 704)
!3995 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3996, size: 64)
!3996 = !DISubroutineType(types: !3997)
!3997 = !{!2124, !206}
!3998 = !DIDerivedType(tag: DW_TAG_member, name: "get_ownership", scope: !3974, file: !3975, line: 73, baseType: !3999, size: 64, offset: 768)
!3999 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4000, size: 64)
!4000 = !DISubroutineType(types: !4001)
!4001 = !{null, !206, !3218, !3219}
!4002 = !DIDerivedType(tag: DW_TAG_member, name: "pm", scope: !3974, file: !3975, line: 75, baseType: !3395, size: 64, offset: 832)
!4003 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !3974, file: !3975, line: 77, baseType: !3512, size: 64, offset: 896)
!4004 = !DIDerivedType(tag: DW_TAG_member, name: "groups", scope: !207, file: !73, line: 541, baseType: !320, size: 64, offset: 5248)
!4005 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !207, file: !73, line: 543, baseType: !3391, size: 64, offset: 5312)
!4006 = !DIDerivedType(tag: DW_TAG_member, name: "iommu_group", scope: !207, file: !73, line: 544, baseType: !4007, size: 64, offset: 5376)
!4007 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4008, size: 64)
!4008 = !DICompositeType(tag: DW_TAG_structure_type, name: "iommu_group", file: !73, line: 45, flags: DIFlagFwdDecl)
!4009 = !DIDerivedType(tag: DW_TAG_member, name: "iommu", scope: !207, file: !73, line: 545, baseType: !4010, size: 64, offset: 5440)
!4010 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4011, size: 64)
!4011 = !DICompositeType(tag: DW_TAG_structure_type, name: "dev_iommu", file: !73, line: 47, flags: DIFlagFwdDecl)
!4012 = !DIDerivedType(tag: DW_TAG_member, name: "offline_disabled", scope: !207, file: !73, line: 547, baseType: !482, size: 1, offset: 5504, flags: DIFlagBitField, extraData: i64 5504)
!4013 = !DIDerivedType(tag: DW_TAG_member, name: "offline", scope: !207, file: !73, line: 548, baseType: !482, size: 1, offset: 5505, flags: DIFlagBitField, extraData: i64 5504)
!4014 = !DIDerivedType(tag: DW_TAG_member, name: "of_node_reused", scope: !207, file: !73, line: 549, baseType: !482, size: 1, offset: 5506, flags: DIFlagBitField, extraData: i64 5504)
!4015 = !DIDerivedType(tag: DW_TAG_member, name: "state_synced", scope: !207, file: !73, line: 550, baseType: !482, size: 1, offset: 5507, flags: DIFlagBitField, extraData: i64 5504)
!4016 = !DIDerivedType(tag: DW_TAG_member, name: "put_online", scope: !195, file: !175, line: 331, baseType: !482, size: 1, offset: 256, flags: DIFlagBitField, extraData: i64 256)
!4017 = !DIDerivedType(tag: DW_TAG_typedef, name: "acpi_handle", file: !4018, line: 424, baseType: !193)
!4018 = !DIFile(filename: "./include/acpi/actypes.h", directory: "/home/lizy2001/genbc/linux")
!4019 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4020, size: 64)
!4020 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "acpi_device_bus_id", file: !4021, line: 99, size: 320, elements: !4022)
!4021 = !DIFile(filename: "drivers/acpi/internal.h", directory: "/home/lizy2001/genbc/linux")
!4022 = !{!4023, !4027, !4028}
!4023 = !DIDerivedType(tag: DW_TAG_member, name: "bus_id", scope: !4020, file: !4021, line: 100, baseType: !4024, size: 120)
!4024 = !DICompositeType(tag: DW_TAG_array_type, baseType: !215, size: 120, elements: !4025)
!4025 = !{!4026}
!4026 = !DISubrange(count: 15)
!4027 = !DIDerivedType(tag: DW_TAG_member, name: "instance_no", scope: !4020, file: !4021, line: 101, baseType: !7, size: 32, offset: 128)
!4028 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !4020, file: !4021, line: 102, baseType: !199, size: 128, offset: 192)
!4029 = !DIDerivedType(tag: DW_TAG_typedef, name: "acpi_size", file: !4018, line: 127, baseType: !413)
!4030 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4031, size: 64)
!4031 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "acpi_hardware_id", file: !175, line: 222, size: 192, elements: !4032)
!4032 = !{!4033, !4034}
!4033 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !4031, file: !175, line: 223, baseType: !199, size: 128)
!4034 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !4031, file: !175, line: 224, baseType: !213, size: 64, offset: 128)
!4035 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4036, size: 64)
!4036 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "acpi_device", file: !175, line: 351, size: 10880, elements: !4037)
!4037 = !{!4038, !4039, !4040, !4041, !4042, !4043, !4044, !4045, !4046, !4055, !4072, !4146, !4175, !4199, !4220, !4226, !4235, !4267, !4281, !4303, !4307, !4308, !4309, !4310, !4311, !4312, !4313}
!4038 = !DIDerivedType(tag: DW_TAG_member, name: "device_type", scope: !4036, file: !175, line: 352, baseType: !251, size: 32)
!4039 = !DIDerivedType(tag: DW_TAG_member, name: "handle", scope: !4036, file: !175, line: 353, baseType: !4017, size: 64, offset: 64)
!4040 = !DIDerivedType(tag: DW_TAG_member, name: "fwnode", scope: !4036, file: !175, line: 354, baseType: !3671, size: 192, offset: 128)
!4041 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !4036, file: !175, line: 355, baseType: !4035, size: 64, offset: 320)
!4042 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !4036, file: !175, line: 356, baseType: !199, size: 128, offset: 384)
!4043 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !4036, file: !175, line: 357, baseType: !199, size: 128, offset: 512)
!4044 = !DIDerivedType(tag: DW_TAG_member, name: "wakeup_list", scope: !4036, file: !175, line: 358, baseType: !199, size: 128, offset: 640)
!4045 = !DIDerivedType(tag: DW_TAG_member, name: "del_list", scope: !4036, file: !175, line: 359, baseType: !199, size: 128, offset: 768)
!4046 = !DIDerivedType(tag: DW_TAG_member, name: "status", scope: !4036, file: !175, line: 360, baseType: !4047, size: 32, offset: 896)
!4047 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "acpi_device_status", file: !175, line: 179, size: 32, elements: !4048)
!4048 = !{!4049, !4050, !4051, !4052, !4053, !4054}
!4049 = !DIDerivedType(tag: DW_TAG_member, name: "present", scope: !4047, file: !175, line: 180, baseType: !407, size: 1, flags: DIFlagBitField, extraData: i64 0)
!4050 = !DIDerivedType(tag: DW_TAG_member, name: "enabled", scope: !4047, file: !175, line: 181, baseType: !407, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!4051 = !DIDerivedType(tag: DW_TAG_member, name: "show_in_ui", scope: !4047, file: !175, line: 182, baseType: !407, size: 1, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!4052 = !DIDerivedType(tag: DW_TAG_member, name: "functional", scope: !4047, file: !175, line: 183, baseType: !407, size: 1, offset: 3, flags: DIFlagBitField, extraData: i64 0)
!4053 = !DIDerivedType(tag: DW_TAG_member, name: "battery_present", scope: !4047, file: !175, line: 184, baseType: !407, size: 1, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!4054 = !DIDerivedType(tag: DW_TAG_member, name: "reserved", scope: !4047, file: !175, line: 185, baseType: !407, size: 27, offset: 5, flags: DIFlagBitField, extraData: i64 0)
!4055 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !4036, file: !175, line: 361, baseType: !4056, size: 32, offset: 928)
!4056 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "acpi_device_flags", file: !175, line: 190, size: 32, elements: !4057)
!4057 = !{!4058, !4059, !4060, !4061, !4062, !4063, !4064, !4065, !4066, !4067, !4068, !4069, !4070, !4071}
!4058 = !DIDerivedType(tag: DW_TAG_member, name: "dynamic_status", scope: !4056, file: !175, line: 191, baseType: !407, size: 1, flags: DIFlagBitField, extraData: i64 0)
!4059 = !DIDerivedType(tag: DW_TAG_member, name: "removable", scope: !4056, file: !175, line: 192, baseType: !407, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!4060 = !DIDerivedType(tag: DW_TAG_member, name: "ejectable", scope: !4056, file: !175, line: 193, baseType: !407, size: 1, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!4061 = !DIDerivedType(tag: DW_TAG_member, name: "power_manageable", scope: !4056, file: !175, line: 194, baseType: !407, size: 1, offset: 3, flags: DIFlagBitField, extraData: i64 0)
!4062 = !DIDerivedType(tag: DW_TAG_member, name: "match_driver", scope: !4056, file: !175, line: 195, baseType: !407, size: 1, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!4063 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !4056, file: !175, line: 196, baseType: !407, size: 1, offset: 5, flags: DIFlagBitField, extraData: i64 0)
!4064 = !DIDerivedType(tag: DW_TAG_member, name: "visited", scope: !4056, file: !175, line: 197, baseType: !407, size: 1, offset: 6, flags: DIFlagBitField, extraData: i64 0)
!4065 = !DIDerivedType(tag: DW_TAG_member, name: "hotplug_notify", scope: !4056, file: !175, line: 198, baseType: !407, size: 1, offset: 7, flags: DIFlagBitField, extraData: i64 0)
!4066 = !DIDerivedType(tag: DW_TAG_member, name: "is_dock_station", scope: !4056, file: !175, line: 199, baseType: !407, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 0)
!4067 = !DIDerivedType(tag: DW_TAG_member, name: "of_compatible_ok", scope: !4056, file: !175, line: 200, baseType: !407, size: 1, offset: 9, flags: DIFlagBitField, extraData: i64 0)
!4068 = !DIDerivedType(tag: DW_TAG_member, name: "coherent_dma", scope: !4056, file: !175, line: 201, baseType: !407, size: 1, offset: 10, flags: DIFlagBitField, extraData: i64 0)
!4069 = !DIDerivedType(tag: DW_TAG_member, name: "cca_seen", scope: !4056, file: !175, line: 202, baseType: !407, size: 1, offset: 11, flags: DIFlagBitField, extraData: i64 0)
!4070 = !DIDerivedType(tag: DW_TAG_member, name: "enumeration_by_parent", scope: !4056, file: !175, line: 203, baseType: !407, size: 1, offset: 12, flags: DIFlagBitField, extraData: i64 0)
!4071 = !DIDerivedType(tag: DW_TAG_member, name: "reserved", scope: !4056, file: !175, line: 204, baseType: !407, size: 19, offset: 13, flags: DIFlagBitField, extraData: i64 0)
!4072 = !DIDerivedType(tag: DW_TAG_member, name: "pnp", scope: !4036, file: !175, line: 362, baseType: !4073, size: 960, offset: 960)
!4073 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "acpi_device_pnp", file: !175, line: 234, size: 960, elements: !4074)
!4074 = !{!4075, !4077, !4084, !4086, !4087, !4088, !4093, !4096}
!4075 = !DIDerivedType(tag: DW_TAG_member, name: "bus_id", scope: !4073, file: !175, line: 235, baseType: !4076, size: 64)
!4076 = !DIDerivedType(tag: DW_TAG_typedef, name: "acpi_bus_id", file: !175, line: 217, baseType: !2029)
!4077 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !4073, file: !175, line: 236, baseType: !4078, size: 32, offset: 64)
!4078 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "acpi_pnp_type", file: !175, line: 227, size: 32, elements: !4079)
!4079 = !{!4080, !4081, !4082, !4083}
!4080 = !DIDerivedType(tag: DW_TAG_member, name: "hardware_id", scope: !4078, file: !175, line: 228, baseType: !407, size: 1, flags: DIFlagBitField, extraData: i64 0)
!4081 = !DIDerivedType(tag: DW_TAG_member, name: "bus_address", scope: !4078, file: !175, line: 229, baseType: !407, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!4082 = !DIDerivedType(tag: DW_TAG_member, name: "platform_id", scope: !4078, file: !175, line: 230, baseType: !407, size: 1, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!4083 = !DIDerivedType(tag: DW_TAG_member, name: "reserved", scope: !4078, file: !175, line: 231, baseType: !407, size: 29, offset: 3, flags: DIFlagBitField, extraData: i64 0)
!4084 = !DIDerivedType(tag: DW_TAG_member, name: "bus_address", scope: !4073, file: !175, line: 237, baseType: !4085, size: 64, offset: 128)
!4085 = !DIDerivedType(tag: DW_TAG_typedef, name: "acpi_bus_address", file: !175, line: 218, baseType: !413)
!4086 = !DIDerivedType(tag: DW_TAG_member, name: "unique_id", scope: !4073, file: !175, line: 238, baseType: !267, size: 64, offset: 192)
!4087 = !DIDerivedType(tag: DW_TAG_member, name: "ids", scope: !4073, file: !175, line: 239, baseType: !199, size: 128, offset: 256)
!4088 = !DIDerivedType(tag: DW_TAG_member, name: "device_name", scope: !4073, file: !175, line: 240, baseType: !4089, size: 320, offset: 384)
!4089 = !DIDerivedType(tag: DW_TAG_typedef, name: "acpi_device_name", file: !175, line: 219, baseType: !4090)
!4090 = !DICompositeType(tag: DW_TAG_array_type, baseType: !215, size: 320, elements: !4091)
!4091 = !{!4092}
!4092 = !DISubrange(count: 40)
!4093 = !DIDerivedType(tag: DW_TAG_member, name: "device_class", scope: !4073, file: !175, line: 241, baseType: !4094, size: 160, offset: 704)
!4094 = !DIDerivedType(tag: DW_TAG_typedef, name: "acpi_device_class", file: !175, line: 220, baseType: !4095)
!4095 = !DICompositeType(tag: DW_TAG_array_type, baseType: !215, size: 160, elements: !2198)
!4096 = !DIDerivedType(tag: DW_TAG_member, name: "str_obj", scope: !4073, file: !175, line: 242, baseType: !4097, size: 64, offset: 896)
!4097 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4098, size: 64)
!4098 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "acpi_object", file: !4018, line: 899, size: 192, elements: !4099)
!4099 = !{!4100, !4102, !4107, !4113, !4120, !4126, !4132, !4140}
!4100 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !4098, file: !4018, line: 900, baseType: !4101, size: 32)
!4101 = !DIDerivedType(tag: DW_TAG_typedef, name: "acpi_object_type", file: !4018, line: 635, baseType: !407)
!4102 = !DIDerivedType(tag: DW_TAG_member, name: "integer", scope: !4098, file: !4018, line: 904, baseType: !4103, size: 128)
!4103 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !4098, file: !4018, line: 901, size: 128, elements: !4104)
!4104 = !{!4105, !4106}
!4105 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !4103, file: !4018, line: 902, baseType: !4101, size: 32)
!4106 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !4103, file: !4018, line: 903, baseType: !413, size: 64, offset: 64)
!4107 = !DIDerivedType(tag: DW_TAG_member, name: "string", scope: !4098, file: !4018, line: 910, baseType: !4108, size: 128)
!4108 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !4098, file: !4018, line: 906, size: 128, elements: !4109)
!4109 = !{!4110, !4111, !4112}
!4110 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !4108, file: !4018, line: 907, baseType: !4101, size: 32)
!4111 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !4108, file: !4018, line: 908, baseType: !407, size: 32, offset: 32)
!4112 = !DIDerivedType(tag: DW_TAG_member, name: "pointer", scope: !4108, file: !4018, line: 909, baseType: !267, size: 64, offset: 64)
!4113 = !DIDerivedType(tag: DW_TAG_member, name: "buffer", scope: !4098, file: !4018, line: 916, baseType: !4114, size: 128)
!4114 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !4098, file: !4018, line: 912, size: 128, elements: !4115)
!4115 = !{!4116, !4117, !4118}
!4116 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !4114, file: !4018, line: 913, baseType: !4101, size: 32)
!4117 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !4114, file: !4018, line: 914, baseType: !407, size: 32, offset: 32)
!4118 = !DIDerivedType(tag: DW_TAG_member, name: "pointer", scope: !4114, file: !4018, line: 915, baseType: !4119, size: 64, offset: 64)
!4119 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1348, size: 64)
!4120 = !DIDerivedType(tag: DW_TAG_member, name: "package", scope: !4098, file: !4018, line: 922, baseType: !4121, size: 128)
!4121 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !4098, file: !4018, line: 918, size: 128, elements: !4122)
!4122 = !{!4123, !4124, !4125}
!4123 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !4121, file: !4018, line: 919, baseType: !4101, size: 32)
!4124 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !4121, file: !4018, line: 920, baseType: !407, size: 32, offset: 32)
!4125 = !DIDerivedType(tag: DW_TAG_member, name: "elements", scope: !4121, file: !4018, line: 921, baseType: !4097, size: 64, offset: 64)
!4126 = !DIDerivedType(tag: DW_TAG_member, name: "reference", scope: !4098, file: !4018, line: 928, baseType: !4127, size: 128)
!4127 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !4098, file: !4018, line: 924, size: 128, elements: !4128)
!4128 = !{!4129, !4130, !4131}
!4129 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !4127, file: !4018, line: 925, baseType: !4101, size: 32)
!4130 = !DIDerivedType(tag: DW_TAG_member, name: "actual_type", scope: !4127, file: !4018, line: 926, baseType: !4101, size: 32, offset: 32)
!4131 = !DIDerivedType(tag: DW_TAG_member, name: "handle", scope: !4127, file: !4018, line: 927, baseType: !4017, size: 64, offset: 64)
!4132 = !DIDerivedType(tag: DW_TAG_member, name: "processor", scope: !4098, file: !4018, line: 935, baseType: !4133, size: 192)
!4133 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !4098, file: !4018, line: 930, size: 192, elements: !4134)
!4134 = !{!4135, !4136, !4137, !4139}
!4135 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !4133, file: !4018, line: 931, baseType: !4101, size: 32)
!4136 = !DIDerivedType(tag: DW_TAG_member, name: "proc_id", scope: !4133, file: !4018, line: 932, baseType: !407, size: 32, offset: 32)
!4137 = !DIDerivedType(tag: DW_TAG_member, name: "pblk_address", scope: !4133, file: !4018, line: 933, baseType: !4138, size: 64, offset: 64)
!4138 = !DIDerivedType(tag: DW_TAG_typedef, name: "acpi_io_address", file: !4018, line: 128, baseType: !413)
!4139 = !DIDerivedType(tag: DW_TAG_member, name: "pblk_length", scope: !4133, file: !4018, line: 934, baseType: !407, size: 32, offset: 128)
!4140 = !DIDerivedType(tag: DW_TAG_member, name: "power_resource", scope: !4098, file: !4018, line: 941, baseType: !4141, size: 96)
!4141 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !4098, file: !4018, line: 937, size: 96, elements: !4142)
!4142 = !{!4143, !4144, !4145}
!4143 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !4141, file: !4018, line: 938, baseType: !4101, size: 32)
!4144 = !DIDerivedType(tag: DW_TAG_member, name: "system_level", scope: !4141, file: !4018, line: 939, baseType: !407, size: 32, offset: 32)
!4145 = !DIDerivedType(tag: DW_TAG_member, name: "resource_order", scope: !4141, file: !4018, line: 940, baseType: !407, size: 32, offset: 64)
!4146 = !DIDerivedType(tag: DW_TAG_member, name: "power", scope: !4036, file: !175, line: 363, baseType: !4147, size: 1344, offset: 1920)
!4147 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "acpi_device_power", file: !175, line: 275, size: 1344, elements: !4148)
!4148 = !{!4149, !4150, !4160}
!4149 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !4147, file: !175, line: 276, baseType: !251, size: 32)
!4150 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !4147, file: !175, line: 277, baseType: !4151, size: 32, offset: 32)
!4151 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "acpi_device_power_flags", file: !175, line: 254, size: 32, elements: !4152)
!4152 = !{!4153, !4154, !4155, !4156, !4157, !4158, !4159}
!4153 = !DIDerivedType(tag: DW_TAG_member, name: "explicit_get", scope: !4151, file: !175, line: 255, baseType: !407, size: 1, flags: DIFlagBitField, extraData: i64 0)
!4154 = !DIDerivedType(tag: DW_TAG_member, name: "power_resources", scope: !4151, file: !175, line: 256, baseType: !407, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!4155 = !DIDerivedType(tag: DW_TAG_member, name: "inrush_current", scope: !4151, file: !175, line: 257, baseType: !407, size: 1, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!4156 = !DIDerivedType(tag: DW_TAG_member, name: "power_removed", scope: !4151, file: !175, line: 258, baseType: !407, size: 1, offset: 3, flags: DIFlagBitField, extraData: i64 0)
!4157 = !DIDerivedType(tag: DW_TAG_member, name: "ignore_parent", scope: !4151, file: !175, line: 259, baseType: !407, size: 1, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!4158 = !DIDerivedType(tag: DW_TAG_member, name: "dsw_present", scope: !4151, file: !175, line: 260, baseType: !407, size: 1, offset: 5, flags: DIFlagBitField, extraData: i64 0)
!4159 = !DIDerivedType(tag: DW_TAG_member, name: "reserved", scope: !4151, file: !175, line: 261, baseType: !407, size: 26, offset: 6, flags: DIFlagBitField, extraData: i64 0)
!4160 = !DIDerivedType(tag: DW_TAG_member, name: "states", scope: !4147, file: !175, line: 278, baseType: !4161, size: 1280, offset: 64)
!4161 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4162, size: 1280, elements: !4173)
!4162 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "acpi_device_power_state", file: !175, line: 264, size: 256, elements: !4163)
!4163 = !{!4164, !4170, !4171, !4172}
!4164 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !4162, file: !175, line: 269, baseType: !4165, size: 8)
!4165 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !4162, file: !175, line: 265, size: 8, elements: !4166)
!4166 = !{!4167, !4168, !4169}
!4167 = !DIDerivedType(tag: DW_TAG_member, name: "valid", scope: !4165, file: !175, line: 266, baseType: !1348, size: 1, flags: DIFlagBitField, extraData: i64 0)
!4168 = !DIDerivedType(tag: DW_TAG_member, name: "explicit_set", scope: !4165, file: !175, line: 267, baseType: !1348, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!4169 = !DIDerivedType(tag: DW_TAG_member, name: "reserved", scope: !4165, file: !175, line: 268, baseType: !1348, size: 6, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!4170 = !DIDerivedType(tag: DW_TAG_member, name: "power", scope: !4162, file: !175, line: 270, baseType: !251, size: 32, offset: 32)
!4171 = !DIDerivedType(tag: DW_TAG_member, name: "latency", scope: !4162, file: !175, line: 271, baseType: !251, size: 32, offset: 64)
!4172 = !DIDerivedType(tag: DW_TAG_member, name: "resources", scope: !4162, file: !175, line: 272, baseType: !199, size: 128, offset: 128)
!4173 = !{!4174}
!4174 = !DISubrange(count: 5)
!4175 = !DIDerivedType(tag: DW_TAG_member, name: "wakeup", scope: !4036, file: !175, line: 364, baseType: !4176, size: 640, offset: 3264)
!4176 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "acpi_device_wakeup", file: !175, line: 315, size: 640, elements: !4177)
!4177 = !{!4178, !4179, !4180, !4181, !4182, !4187, !4196, !4197, !4198}
!4178 = !DIDerivedType(tag: DW_TAG_member, name: "gpe_device", scope: !4176, file: !175, line: 316, baseType: !4017, size: 64)
!4179 = !DIDerivedType(tag: DW_TAG_member, name: "gpe_number", scope: !4176, file: !175, line: 317, baseType: !413, size: 64, offset: 64)
!4180 = !DIDerivedType(tag: DW_TAG_member, name: "sleep_state", scope: !4176, file: !175, line: 318, baseType: !413, size: 64, offset: 128)
!4181 = !DIDerivedType(tag: DW_TAG_member, name: "resources", scope: !4176, file: !175, line: 319, baseType: !199, size: 128, offset: 192)
!4182 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !4176, file: !175, line: 320, baseType: !4183, size: 8, offset: 320)
!4183 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "acpi_device_wakeup_flags", file: !175, line: 305, size: 8, elements: !4184)
!4184 = !{!4185, !4186}
!4185 = !DIDerivedType(tag: DW_TAG_member, name: "valid", scope: !4183, file: !175, line: 306, baseType: !1348, size: 1, flags: DIFlagBitField, extraData: i64 0)
!4186 = !DIDerivedType(tag: DW_TAG_member, name: "notifier_present", scope: !4183, file: !175, line: 307, baseType: !1348, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!4187 = !DIDerivedType(tag: DW_TAG_member, name: "context", scope: !4176, file: !175, line: 321, baseType: !4188, size: 128, offset: 384)
!4188 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "acpi_device_wakeup_context", file: !175, line: 310, size: 128, elements: !4189)
!4189 = !{!4190, !4195}
!4190 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !4188, file: !175, line: 311, baseType: !4191, size: 64)
!4191 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4192, size: 64)
!4192 = !DISubroutineType(types: !4193)
!4193 = !{null, !4194}
!4194 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4188, size: 64)
!4195 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !4188, file: !175, line: 312, baseType: !206, size: 64, offset: 64)
!4196 = !DIDerivedType(tag: DW_TAG_member, name: "ws", scope: !4176, file: !175, line: 322, baseType: !3548, size: 64, offset: 512)
!4197 = !DIDerivedType(tag: DW_TAG_member, name: "prepare_count", scope: !4176, file: !175, line: 323, baseType: !251, size: 32, offset: 576)
!4198 = !DIDerivedType(tag: DW_TAG_member, name: "enable_count", scope: !4176, file: !175, line: 324, baseType: !251, size: 32, offset: 608)
!4199 = !DIDerivedType(tag: DW_TAG_member, name: "performance", scope: !4036, file: !175, line: 365, baseType: !4200, size: 192, offset: 3904)
!4200 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "acpi_device_perf", file: !175, line: 297, size: 192, elements: !4201)
!4201 = !{!4202, !4203, !4207, !4208}
!4202 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !4200, file: !175, line: 298, baseType: !251, size: 32)
!4203 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !4200, file: !175, line: 299, baseType: !4204, size: 8, offset: 32)
!4204 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "acpi_device_perf_flags", file: !175, line: 283, size: 8, elements: !4205)
!4205 = !{!4206}
!4206 = !DIDerivedType(tag: DW_TAG_member, name: "reserved", scope: !4204, file: !175, line: 284, baseType: !1348, size: 8, flags: DIFlagBitField, extraData: i64 0)
!4207 = !DIDerivedType(tag: DW_TAG_member, name: "state_count", scope: !4200, file: !175, line: 300, baseType: !251, size: 32, offset: 64)
!4208 = !DIDerivedType(tag: DW_TAG_member, name: "states", scope: !4200, file: !175, line: 301, baseType: !4209, size: 64, offset: 128)
!4209 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4210, size: 64)
!4210 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "acpi_device_perf_state", file: !175, line: 287, size: 64, elements: !4211)
!4211 = !{!4212, !4217, !4218, !4219}
!4212 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !4210, file: !175, line: 291, baseType: !4213, size: 8)
!4213 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !4210, file: !175, line: 288, size: 8, elements: !4214)
!4214 = !{!4215, !4216}
!4215 = !DIDerivedType(tag: DW_TAG_member, name: "valid", scope: !4213, file: !175, line: 289, baseType: !1348, size: 1, flags: DIFlagBitField, extraData: i64 0)
!4216 = !DIDerivedType(tag: DW_TAG_member, name: "reserved", scope: !4213, file: !175, line: 290, baseType: !1348, size: 7, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!4217 = !DIDerivedType(tag: DW_TAG_member, name: "power", scope: !4210, file: !175, line: 292, baseType: !1348, size: 8, offset: 8)
!4218 = !DIDerivedType(tag: DW_TAG_member, name: "performance", scope: !4210, file: !175, line: 293, baseType: !1348, size: 8, offset: 16)
!4219 = !DIDerivedType(tag: DW_TAG_member, name: "latency", scope: !4210, file: !175, line: 294, baseType: !251, size: 32, offset: 32)
!4220 = !DIDerivedType(tag: DW_TAG_member, name: "dir", scope: !4036, file: !175, line: 366, baseType: !4221, size: 64, offset: 4096)
!4221 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "acpi_device_dir", file: !175, line: 209, size: 64, elements: !4222)
!4222 = !{!4223}
!4223 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !4221, file: !175, line: 210, baseType: !4224, size: 64)
!4224 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4225, size: 64)
!4225 = !DICompositeType(tag: DW_TAG_structure_type, name: "proc_dir_entry", file: !175, line: 84, flags: DIFlagFwdDecl)
!4226 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !4036, file: !175, line: 367, baseType: !4227, size: 384, offset: 4160)
!4227 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "acpi_device_data", file: !175, line: 341, size: 384, elements: !4228)
!4228 = !{!4229, !4232, !4233, !4234}
!4229 = !DIDerivedType(tag: DW_TAG_member, name: "pointer", scope: !4227, file: !175, line: 342, baseType: !4230, size: 64)
!4230 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4231, size: 64)
!4231 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4098)
!4232 = !DIDerivedType(tag: DW_TAG_member, name: "properties", scope: !4227, file: !175, line: 343, baseType: !199, size: 128, offset: 64)
!4233 = !DIDerivedType(tag: DW_TAG_member, name: "of_compatible", scope: !4227, file: !175, line: 344, baseType: !4230, size: 64, offset: 192)
!4234 = !DIDerivedType(tag: DW_TAG_member, name: "subnodes", scope: !4227, file: !175, line: 345, baseType: !199, size: 128, offset: 256)
!4235 = !DIDerivedType(tag: DW_TAG_member, name: "handler", scope: !4036, file: !175, line: 368, baseType: !4236, size: 64, offset: 4544)
!4236 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4237, size: 64)
!4237 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "acpi_scan_handler", file: !175, line: 122, size: 1216, elements: !4238)
!4238 = !{!4239, !4240, !4241, !4246, !4250, !4254, !4255, !4256}
!4239 = !DIDerivedType(tag: DW_TAG_member, name: "ids", scope: !4237, file: !175, line: 123, baseType: !3463, size: 64)
!4240 = !DIDerivedType(tag: DW_TAG_member, name: "list_node", scope: !4237, file: !175, line: 124, baseType: !199, size: 128, offset: 64)
!4241 = !DIDerivedType(tag: DW_TAG_member, name: "match", scope: !4237, file: !175, line: 125, baseType: !4242, size: 64, offset: 192)
!4242 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4243, size: 64)
!4243 = !DISubroutineType(types: !4244)
!4244 = !{!482, !213, !4245}
!4245 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3463, size: 64)
!4246 = !DIDerivedType(tag: DW_TAG_member, name: "attach", scope: !4237, file: !175, line: 126, baseType: !4247, size: 64, offset: 256)
!4247 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4248, size: 64)
!4248 = !DISubroutineType(types: !4249)
!4249 = !{!251, !4035, !3463}
!4250 = !DIDerivedType(tag: DW_TAG_member, name: "detach", scope: !4237, file: !175, line: 127, baseType: !4251, size: 64, offset: 320)
!4251 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4252, size: 64)
!4252 = !DISubroutineType(types: !4253)
!4253 = !{null, !4035}
!4254 = !DIDerivedType(tag: DW_TAG_member, name: "bind", scope: !4237, file: !175, line: 128, baseType: !3391, size: 64, offset: 384)
!4255 = !DIDerivedType(tag: DW_TAG_member, name: "unbind", scope: !4237, file: !175, line: 129, baseType: !3391, size: 64, offset: 448)
!4256 = !DIDerivedType(tag: DW_TAG_member, name: "hotplug", scope: !4237, file: !175, line: 130, baseType: !4257, size: 704, offset: 512)
!4257 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "acpi_hotplug_profile", file: !175, line: 108, size: 704, elements: !4258)
!4258 = !{!4259, !4260, !4264, !4265, !4266}
!4259 = !DIDerivedType(tag: DW_TAG_member, name: "kobj", scope: !4257, file: !175, line: 109, baseType: !210, size: 512)
!4260 = !DIDerivedType(tag: DW_TAG_member, name: "scan_dependent", scope: !4257, file: !175, line: 110, baseType: !4261, size: 64, offset: 512)
!4261 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4262, size: 64)
!4262 = !DISubroutineType(types: !4263)
!4263 = !{!251, !4035}
!4264 = !DIDerivedType(tag: DW_TAG_member, name: "notify_online", scope: !4257, file: !175, line: 111, baseType: !4251, size: 64, offset: 576)
!4265 = !DIDerivedType(tag: DW_TAG_member, name: "enabled", scope: !4257, file: !175, line: 112, baseType: !482, size: 1, offset: 640, flags: DIFlagBitField, extraData: i64 640)
!4266 = !DIDerivedType(tag: DW_TAG_member, name: "demand_offline", scope: !4257, file: !175, line: 113, baseType: !482, size: 1, offset: 641, flags: DIFlagBitField, extraData: i64 640)
!4267 = !DIDerivedType(tag: DW_TAG_member, name: "hp", scope: !4036, file: !175, line: 369, baseType: !4268, size: 64, offset: 4608)
!4268 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4269, size: 64)
!4269 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "acpi_hotplug_context", file: !175, line: 138, size: 256, elements: !4270)
!4270 = !{!4271, !4272, !4276, !4280}
!4271 = !DIDerivedType(tag: DW_TAG_member, name: "self", scope: !4269, file: !175, line: 139, baseType: !4035, size: 64)
!4272 = !DIDerivedType(tag: DW_TAG_member, name: "notify", scope: !4269, file: !175, line: 140, baseType: !4273, size: 64, offset: 64)
!4273 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4274, size: 64)
!4274 = !DISubroutineType(types: !4275)
!4275 = !{!251, !4035, !407}
!4276 = !DIDerivedType(tag: DW_TAG_member, name: "uevent", scope: !4269, file: !175, line: 141, baseType: !4277, size: 64, offset: 128)
!4277 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4278, size: 64)
!4278 = !DISubroutineType(types: !4279)
!4279 = !{null, !4035, !407}
!4280 = !DIDerivedType(tag: DW_TAG_member, name: "fixup", scope: !4269, file: !175, line: 142, baseType: !4251, size: 64, offset: 192)
!4281 = !DIDerivedType(tag: DW_TAG_member, name: "driver", scope: !4036, file: !175, line: 370, baseType: !4282, size: 64, offset: 4672)
!4282 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4283, size: 64)
!4283 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "acpi_driver", file: !175, line: 162, size: 2816, elements: !4284)
!4284 = !{!4285, !4289, !4290, !4291, !4292, !4301, !4302}
!4285 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !4283, file: !175, line: 163, baseType: !4286, size: 640)
!4286 = !DICompositeType(tag: DW_TAG_array_type, baseType: !215, size: 640, elements: !4287)
!4287 = !{!4288}
!4288 = !DISubrange(count: 80)
!4289 = !DIDerivedType(tag: DW_TAG_member, name: "class", scope: !4283, file: !175, line: 164, baseType: !4286, size: 640, offset: 640)
!4290 = !DIDerivedType(tag: DW_TAG_member, name: "ids", scope: !4283, file: !175, line: 165, baseType: !3463, size: 64, offset: 1280)
!4291 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !4283, file: !175, line: 166, baseType: !7, size: 32, offset: 1344)
!4292 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !4283, file: !175, line: 167, baseType: !4293, size: 192, offset: 1408)
!4293 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "acpi_device_ops", file: !175, line: 154, size: 192, elements: !4294)
!4294 = !{!4295, !4297, !4299}
!4295 = !DIDerivedType(tag: DW_TAG_member, name: "add", scope: !4293, file: !175, line: 155, baseType: !4296, size: 64)
!4296 = !DIDerivedType(tag: DW_TAG_typedef, name: "acpi_op_add", file: !175, line: 150, baseType: !4261)
!4297 = !DIDerivedType(tag: DW_TAG_member, name: "remove", scope: !4293, file: !175, line: 156, baseType: !4298, size: 64, offset: 64)
!4298 = !DIDerivedType(tag: DW_TAG_typedef, name: "acpi_op_remove", file: !175, line: 151, baseType: !4261)
!4299 = !DIDerivedType(tag: DW_TAG_member, name: "notify", scope: !4293, file: !175, line: 157, baseType: !4300, size: 64, offset: 128)
!4300 = !DIDerivedType(tag: DW_TAG_typedef, name: "acpi_op_notify", file: !175, line: 152, baseType: !4277)
!4301 = !DIDerivedType(tag: DW_TAG_member, name: "drv", scope: !4283, file: !175, line: 168, baseType: !3441, size: 1152, offset: 1600)
!4302 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !4283, file: !175, line: 169, baseType: !625, size: 64, offset: 2752)
!4303 = !DIDerivedType(tag: DW_TAG_member, name: "driver_gpios", scope: !4036, file: !175, line: 371, baseType: !4304, size: 64, offset: 4736)
!4304 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4305, size: 64)
!4305 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4306)
!4306 = !DICompositeType(tag: DW_TAG_structure_type, name: "acpi_gpio_mapping", file: !175, line: 348, flags: DIFlagFwdDecl)
!4307 = !DIDerivedType(tag: DW_TAG_member, name: "driver_data", scope: !4036, file: !175, line: 372, baseType: !193, size: 64, offset: 4800)
!4308 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !4036, file: !175, line: 373, baseType: !207, size: 5568, offset: 4864)
!4309 = !DIDerivedType(tag: DW_TAG_member, name: "physical_node_count", scope: !4036, file: !175, line: 374, baseType: !7, size: 32, offset: 10432)
!4310 = !DIDerivedType(tag: DW_TAG_member, name: "dep_unmet", scope: !4036, file: !175, line: 375, baseType: !7, size: 32, offset: 10464)
!4311 = !DIDerivedType(tag: DW_TAG_member, name: "physical_node_list", scope: !4036, file: !175, line: 376, baseType: !199, size: 128, offset: 10496)
!4312 = !DIDerivedType(tag: DW_TAG_member, name: "physical_node_lock", scope: !4036, file: !175, line: 377, baseType: !1169, size: 192, offset: 10624)
!4313 = !DIDerivedType(tag: DW_TAG_member, name: "remove", scope: !4036, file: !175, line: 378, baseType: !4251, size: 64, offset: 10816)
!4314 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4315, size: 64)
!4315 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "resource_entry", file: !4316, line: 23, size: 768, elements: !4317)
!4316 = !DIFile(filename: "./include/linux/resource_ext.h", directory: "/home/lizy2001/genbc/linux")
!4317 = !{!4318, !4319, !4333, !4334}
!4318 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !4315, file: !4316, line: 24, baseType: !199, size: 128)
!4319 = !DIDerivedType(tag: DW_TAG_member, name: "res", scope: !4315, file: !4316, line: 25, baseType: !4320, size: 64, offset: 128)
!4320 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4321, size: 64)
!4321 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "resource", file: !4322, line: 20, size: 512, elements: !4323)
!4322 = !DIFile(filename: "./include/linux/ioport.h", directory: "/home/lizy2001/genbc/linux")
!4323 = !{!4324, !4326, !4327, !4328, !4329, !4330, !4331, !4332}
!4324 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !4321, file: !4322, line: 21, baseType: !4325, size: 64)
!4325 = !DIDerivedType(tag: DW_TAG_typedef, name: "resource_size_t", file: !200, line: 158, baseType: !2122)
!4326 = !DIDerivedType(tag: DW_TAG_member, name: "end", scope: !4321, file: !4322, line: 22, baseType: !4325, size: 64, offset: 64)
!4327 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !4321, file: !4322, line: 23, baseType: !213, size: 64, offset: 128)
!4328 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !4321, file: !4322, line: 24, baseType: !316, size: 64, offset: 192)
!4329 = !DIDerivedType(tag: DW_TAG_member, name: "desc", scope: !4321, file: !4322, line: 25, baseType: !316, size: 64, offset: 256)
!4330 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !4321, file: !4322, line: 26, baseType: !4320, size: 64, offset: 320)
!4331 = !DIDerivedType(tag: DW_TAG_member, name: "sibling", scope: !4321, file: !4322, line: 26, baseType: !4320, size: 64, offset: 384)
!4332 = !DIDerivedType(tag: DW_TAG_member, name: "child", scope: !4321, file: !4322, line: 26, baseType: !4320, size: 64, offset: 448)
!4333 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !4315, file: !4316, line: 26, baseType: !4325, size: 64, offset: 192)
!4334 = !DIDerivedType(tag: DW_TAG_member, name: "__res", scope: !4315, file: !4316, line: 27, baseType: !4321, size: 512, offset: 256)
!4335 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4336, size: 64)
!4336 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "acpi_dep_data", file: !3, line: 52, size: 256, elements: !4337)
!4337 = !{!4338, !4339, !4340}
!4338 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !4336, file: !3, line: 53, baseType: !199, size: 128)
!4339 = !DIDerivedType(tag: DW_TAG_member, name: "master", scope: !4336, file: !3, line: 54, baseType: !4017, size: 64, offset: 128)
!4340 = !DIDerivedType(tag: DW_TAG_member, name: "slave", scope: !4336, file: !3, line: 55, baseType: !4017, size: 64, offset: 192)
!4341 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4342, size: 64)
!4342 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4343, size: 64)
!4343 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "acpi_table_header", file: !4344, line: 68, size: 288, elements: !4345)
!4344 = !DIFile(filename: "./include/acpi/actbl.h", directory: "/home/lizy2001/genbc/linux")
!4345 = !{!4346, !4348, !4349, !4350, !4351, !4352, !4353, !4354, !4355}
!4346 = !DIDerivedType(tag: DW_TAG_member, name: "signature", scope: !4343, file: !4344, line: 69, baseType: !4347, size: 32)
!4347 = !DICompositeType(tag: DW_TAG_array_type, baseType: !215, size: 32, elements: !1151)
!4348 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !4343, file: !4344, line: 70, baseType: !407, size: 32, offset: 32)
!4349 = !DIDerivedType(tag: DW_TAG_member, name: "revision", scope: !4343, file: !4344, line: 71, baseType: !1348, size: 8, offset: 64)
!4350 = !DIDerivedType(tag: DW_TAG_member, name: "checksum", scope: !4343, file: !4344, line: 72, baseType: !1348, size: 8, offset: 72)
!4351 = !DIDerivedType(tag: DW_TAG_member, name: "oem_id", scope: !4343, file: !4344, line: 73, baseType: !1620, size: 48, offset: 80)
!4352 = !DIDerivedType(tag: DW_TAG_member, name: "oem_table_id", scope: !4343, file: !4344, line: 74, baseType: !2029, size: 64, offset: 128)
!4353 = !DIDerivedType(tag: DW_TAG_member, name: "oem_revision", scope: !4343, file: !4344, line: 75, baseType: !407, size: 32, offset: 192)
!4354 = !DIDerivedType(tag: DW_TAG_member, name: "asl_compiler_id", scope: !4343, file: !4344, line: 76, baseType: !4347, size: 32, offset: 224)
!4355 = !DIDerivedType(tag: DW_TAG_member, name: "asl_compiler_revision", scope: !4343, file: !4344, line: 77, baseType: !407, size: 32, offset: 256)
!4356 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4357, size: 64)
!4357 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !203)
!4358 = !DIDerivedType(tag: DW_TAG_typedef, name: "acpi_status", file: !4018, line: 421, baseType: !407)
!4359 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4360, size: 64)
!4360 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4357)
!4361 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4362, size: 64)
!4362 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "acpi_table_events_work", file: !3, line: 2299, size: 384, elements: !4363)
!4363 = !{!4364, !4365, !4366}
!4364 = !DIDerivedType(tag: DW_TAG_member, name: "work", scope: !4362, file: !3, line: 2300, baseType: !1955, size: 256)
!4365 = !DIDerivedType(tag: DW_TAG_member, name: "table", scope: !4362, file: !3, line: 2301, baseType: !193, size: 64, offset: 256)
!4366 = !DIDerivedType(tag: DW_TAG_member, name: "event", scope: !4362, file: !3, line: 2302, baseType: !407, size: 32, offset: 320)
!4367 = !{!0, !4368, !4370, !4372, !4377, !4379, !4422, !4424, !4426, !4428, !4430, !4435, !4437, !4439, !4441, !4447, !4451, !4453, !4455, !4457, !4460, !4464, !4466, !4468, !4470}
!4368 = !DIGlobalVariableExpression(var: !4369, expr: !DIExpression())
!4369 = distinct !DIGlobalVariable(name: "acpi_device_lock", scope: !2, file: !3, line: 41, type: !1169, isLocal: false, isDefinition: true)
!4370 = !DIGlobalVariableExpression(var: !4371, expr: !DIExpression())
!4371 = distinct !DIGlobalVariable(name: "acpi_wakeup_device_list", scope: !2, file: !3, line: 42, type: !199, isLocal: false, isDefinition: true)
!4372 = !DIGlobalVariableExpression(var: !4373, expr: !DIExpression())
!4373 = distinct !DIGlobalVariable(name: "__key", scope: !4374, file: !3, line: 652, type: !640, isLocal: true, isDefinition: true)
!4374 = distinct !DISubprogram(name: "acpi_device_add", scope: !3, file: !3, line: 623, type: !4375, scopeLine: 625, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !239)
!4375 = !DISubroutineType(types: !4376)
!4376 = !{!251, !4035, !3391}
!4377 = !DIGlobalVariableExpression(var: !4378, expr: !DIExpression())
!4378 = distinct !DIGlobalVariable(name: "acpi_scan_initialized", scope: !2, file: !3, line: 2179, type: !482, isLocal: true, isDefinition: true)
!4379 = !DIGlobalVariableExpression(var: !4380, expr: !DIExpression())
!4380 = distinct !DIGlobalVariable(name: "ape", scope: !2, file: !3, line: 2260, type: !4381, isLocal: true, isDefinition: true)
!4381 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4382, size: 64)
!4382 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "acpi_probe_entry", file: !170, line: 1142, size: 256, elements: !4383)
!4383 = !{!4384, !4386, !4387, !4398, !4421}
!4384 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !4382, file: !170, line: 1143, baseType: !4385, size: 40)
!4385 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1349, size: 40, elements: !4173)
!4386 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !4382, file: !170, line: 1144, baseType: !1349, size: 8, offset: 40)
!4387 = !DIDerivedType(tag: DW_TAG_member, name: "subtable_valid", scope: !4382, file: !170, line: 1145, baseType: !4388, size: 64, offset: 64)
!4388 = !DIDerivedType(tag: DW_TAG_typedef, name: "acpi_probe_entry_validate_subtbl", file: !170, line: 1124, baseType: !4389)
!4389 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4390, size: 64)
!4390 = !DISubroutineType(types: !4391)
!4391 = !{!482, !4392, !4381}
!4392 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4393, size: 64)
!4393 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "acpi_subtable_header", file: !4394, line: 90, size: 16, elements: !4395)
!4394 = !DIFile(filename: "./include/acpi/actbl1.h", directory: "/home/lizy2001/genbc/linux")
!4395 = !{!4396, !4397}
!4396 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !4393, file: !4394, line: 91, baseType: !1348, size: 8)
!4397 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !4393, file: !4394, line: 92, baseType: !1348, size: 8, offset: 8)
!4398 = !DIDerivedType(tag: DW_TAG_member, scope: !4382, file: !170, line: 1146, baseType: !4399, size: 64, offset: 128)
!4399 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4382, file: !170, line: 1146, size: 64, elements: !4400)
!4400 = !{!4401, !4406}
!4401 = !DIDerivedType(tag: DW_TAG_member, name: "probe_table", scope: !4399, file: !170, line: 1147, baseType: !4402, size: 64)
!4402 = !DIDerivedType(tag: DW_TAG_typedef, name: "acpi_tbl_table_handler", file: !170, line: 137, baseType: !4403)
!4403 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4404, size: 64)
!4404 = !DISubroutineType(types: !4405)
!4405 = !{!251, !4342}
!4406 = !DIDerivedType(tag: DW_TAG_member, name: "probe_subtbl", scope: !4399, file: !170, line: 1148, baseType: !4407, size: 64)
!4407 = !DIDerivedType(tag: DW_TAG_typedef, name: "acpi_tbl_entry_handler", file: !170, line: 139, baseType: !4408)
!4408 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4409, size: 64)
!4409 = !DISubroutineType(types: !4410)
!4410 = !{!251, !4411, !2343}
!4411 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4412, size: 64)
!4412 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "acpi_subtable_headers", file: !170, line: 132, size: 64, elements: !4413)
!4413 = !{!4414, !4415}
!4414 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !4412, file: !170, line: 133, baseType: !4393, size: 16)
!4415 = !DIDerivedType(tag: DW_TAG_member, name: "hmat", scope: !4412, file: !170, line: 134, baseType: !4416, size: 64)
!4416 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "acpi_hmat_structure", file: !4394, line: 1404, size: 64, elements: !4417)
!4417 = !{!4418, !4419, !4420}
!4418 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !4416, file: !4394, line: 1405, baseType: !855, size: 16)
!4419 = !DIDerivedType(tag: DW_TAG_member, name: "reserved", scope: !4416, file: !4394, line: 1406, baseType: !855, size: 16, offset: 16)
!4420 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !4416, file: !4394, line: 1407, baseType: !407, size: 32, offset: 32)
!4421 = !DIDerivedType(tag: DW_TAG_member, name: "driver_data", scope: !4382, file: !170, line: 1150, baseType: !3472, size: 64, offset: 192)
!4422 = !DIGlobalVariableExpression(var: !4423, expr: !DIExpression())
!4423 = distinct !DIGlobalVariable(name: "acpi_probe_count", scope: !2, file: !3, line: 2261, type: !251, isLocal: true, isDefinition: true)
!4424 = !DIGlobalVariableExpression(var: !4425, expr: !DIExpression())
!4425 = distinct !DIGlobalVariable(name: "acpi_scan_lock", scope: !2, file: !3, line: 39, type: !1169, isLocal: true, isDefinition: true)
!4426 = !DIGlobalVariableExpression(var: !4427, expr: !DIExpression())
!4427 = distinct !DIGlobalVariable(name: "acpi_hp_context_lock", scope: !2, file: !3, line: 43, type: !1169, isLocal: true, isDefinition: true)
!4428 = !DIGlobalVariableExpression(var: !4429, expr: !DIExpression())
!4429 = distinct !DIGlobalVariable(name: "acpi_scan_handlers_list", scope: !2, file: !3, line: 40, type: !199, isLocal: true, isDefinition: true)
!4430 = !DIGlobalVariableExpression(var: !4431, expr: !DIExpression())
!4431 = distinct !DIGlobalVariable(name: "work", scope: !4432, file: !3, line: 555, type: !1955, isLocal: true, isDefinition: true)
!4432 = distinct !DISubprogram(name: "acpi_scan_drop_device", scope: !3, file: !3, line: 553, type: !4433, scopeLine: 554, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !239)
!4433 = !DISubroutineType(types: !4434)
!4434 = !{null, !4017, !193}
!4435 = !DIGlobalVariableExpression(var: !4436, expr: !DIExpression())
!4436 = distinct !DIGlobalVariable(name: "acpi_device_del_lock", scope: !2, file: !3, line: 508, type: !1169, isLocal: true, isDefinition: true)
!4437 = !DIGlobalVariableExpression(var: !4438, expr: !DIExpression())
!4438 = distinct !DIGlobalVariable(name: "acpi_device_del_list", scope: !2, file: !3, line: 507, type: !199, isLocal: true, isDefinition: true)
!4439 = !DIGlobalVariableExpression(var: !4440, expr: !DIExpression())
!4440 = distinct !DIGlobalVariable(name: "dummy_hid", scope: !2, file: !3, line: 34, type: !213, isLocal: true, isDefinition: true)
!4441 = !DIGlobalVariableExpression(var: !4442, expr: !DIExpression())
!4442 = distinct !DIGlobalVariable(name: "i2c_multi_instantiate_ids", scope: !4443, file: !3, line: 1554, type: !4446, isLocal: true, isDefinition: true)
!4443 = distinct !DISubprogram(name: "acpi_device_enumeration_by_parent", scope: !3, file: !3, line: 1542, type: !4444, scopeLine: 1543, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !239)
!4444 = !DISubroutineType(types: !4445)
!4445 = !{!482, !4035}
!4446 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3464, size: 1280, elements: !4173)
!4447 = !DIGlobalVariableExpression(var: !4448, expr: !DIExpression())
!4448 = distinct !DIGlobalVariable(name: "indirect_io_hosts", scope: !4449, file: !3, line: 1534, type: !4450, isLocal: true, isDefinition: true)
!4449 = distinct !DISubprogram(name: "acpi_is_indirect_io_slave", scope: !3, file: !3, line: 1531, type: !4444, scopeLine: 1532, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !239)
!4450 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3464, size: 512, elements: !1565)
!4451 = !DIGlobalVariableExpression(var: !4452, expr: !DIExpression())
!4452 = distinct !DIGlobalVariable(name: "acpi_dep_list_lock", scope: !2, file: !3, line: 37, type: !1169, isLocal: true, isDefinition: true)
!4453 = !DIGlobalVariableExpression(var: !4454, expr: !DIExpression())
!4454 = distinct !DIGlobalVariable(name: "acpi_dep_list", scope: !2, file: !3, line: 36, type: !199, isLocal: true, isDefinition: true)
!4455 = !DIGlobalVariableExpression(var: !4456, expr: !DIExpression())
!4456 = distinct !DIGlobalVariable(name: "spcr_uart_addr", scope: !2, file: !3, line: 50, type: !413, isLocal: true, isDefinition: true)
!4457 = !DIGlobalVariableExpression(var: !4458, expr: !DIExpression())
!4458 = distinct !DIGlobalVariable(name: "_acpi_module_name", scope: !2, file: !3, line: 23, type: !4459, isLocal: true, isDefinition: true)
!4459 = !DICompositeType(tag: DW_TAG_array_type, baseType: !214, size: 40, elements: !4173)
!4460 = !DIGlobalVariableExpression(var: !4461, expr: !DIExpression())
!4461 = distinct !DIGlobalVariable(name: "button_device_ids", scope: !4462, file: !3, line: 848, type: !4463, isLocal: true, isDefinition: true)
!4462 = distinct !DISubprogram(name: "acpi_wakeup_gpe_init", scope: !3, file: !3, line: 846, type: !4444, scopeLine: 847, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !239)
!4463 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3464, size: 1024, elements: !1151)
!4464 = !DIGlobalVariableExpression(var: !4465, expr: !DIExpression())
!4465 = distinct !DIGlobalVariable(name: "generic_device_handler", scope: !2, file: !3, line: 1930, type: !4237, isLocal: true, isDefinition: true)
!4466 = !DIGlobalVariableExpression(var: !4467, expr: !DIExpression())
!4467 = distinct !DIGlobalVariable(name: "generic_device_ids", scope: !2, file: !3, line: 1912, type: !4450, isLocal: true, isDefinition: true)
!4468 = !DIGlobalVariableExpression(var: !4469, expr: !DIExpression())
!4469 = distinct !DIGlobalVariable(name: "acpi_probe_mutex", scope: !2, file: !3, line: 2262, type: !1169, isLocal: true, isDefinition: true)
!4470 = !DIGlobalVariableExpression(var: !4471, expr: !DIExpression())
!4471 = distinct !DIGlobalVariable(name: "acpi_reconfig_chain", scope: !2, file: !3, line: 505, type: !4472, isLocal: true, isDefinition: true)
!4472 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "blocking_notifier_head", file: !4473, line: 65, size: 320, elements: !4474)
!4473 = !DIFile(filename: "./include/linux/notifier.h", directory: "/home/lizy2001/genbc/linux")
!4474 = !{!4475, !4476}
!4475 = !DIDerivedType(tag: DW_TAG_member, name: "rwsem", scope: !4472, file: !4473, line: 66, baseType: !763, size: 256)
!4476 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !4472, file: !4473, line: 67, baseType: !4477, size: 64, offset: 256)
!4477 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4478, size: 64)
!4478 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "notifier_block", file: !4473, line: 54, size: 192, elements: !4479)
!4479 = !{!4480, !4485, !4486}
!4480 = !DIDerivedType(tag: DW_TAG_member, name: "notifier_call", scope: !4478, file: !4473, line: 55, baseType: !4481, size: 64)
!4481 = !DIDerivedType(tag: DW_TAG_typedef, name: "notifier_fn_t", file: !4473, line: 51, baseType: !4482)
!4482 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4483, size: 64)
!4483 = !DISubroutineType(types: !4484)
!4484 = !{!251, !4477, !316, !193}
!4485 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !4478, file: !4473, line: 56, baseType: !4477, size: 64, offset: 64)
!4486 = !DIDerivedType(tag: DW_TAG_member, name: "priority", scope: !4478, file: !4473, line: 57, baseType: !251, size: 32, offset: 128)
!4487 = !{i32 7, !"Dwarf Version", i32 4}
!4488 = !{i32 2, !"Debug Info Version", i32 3}
!4489 = !{i32 1, !"wchar_size", i32 2}
!4490 = !{i32 1, !"Code Model", i32 2}
!4491 = !{!"clang version 10.0.1 (https://github.com/llvm/llvm-project.git ef32c611aa214dea855364efd7ba451ec5ec3f74)"}
!4492 = distinct !DISubprogram(name: "acpi_scan_lock_acquire", scope: !3, file: !3, line: 58, type: !1876, scopeLine: 59, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !239)
!4493 = !DILocation(line: 60, column: 2, scope: !4492)
!4494 = !DILocation(line: 61, column: 1, scope: !4492)
!4495 = distinct !DISubprogram(name: "acpi_scan_lock_release", scope: !3, file: !3, line: 64, type: !1876, scopeLine: 65, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !239)
!4496 = !DILocation(line: 66, column: 2, scope: !4495)
!4497 = !DILocation(line: 67, column: 1, scope: !4495)
!4498 = distinct !DISubprogram(name: "acpi_lock_hp_context", scope: !3, file: !3, line: 70, type: !1876, scopeLine: 71, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !239)
!4499 = !DILocation(line: 72, column: 2, scope: !4498)
!4500 = !DILocation(line: 73, column: 1, scope: !4498)
!4501 = distinct !DISubprogram(name: "acpi_unlock_hp_context", scope: !3, file: !3, line: 75, type: !1876, scopeLine: 76, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !239)
!4502 = !DILocation(line: 77, column: 2, scope: !4501)
!4503 = !DILocation(line: 78, column: 1, scope: !4501)
!4504 = distinct !DISubprogram(name: "acpi_initialize_hp_context", scope: !3, file: !3, line: 80, type: !4505, scopeLine: 84, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !239)
!4505 = !DISubroutineType(types: !4506)
!4506 = !{null, !4035, !4268, !4273, !4277}
!4507 = !DILocalVariable(name: "adev", arg: 1, scope: !4504, file: !3, line: 80, type: !4035)
!4508 = !DILocation(line: 80, column: 53, scope: !4504)
!4509 = !DILocalVariable(name: "hp", arg: 2, scope: !4504, file: !3, line: 81, type: !4268)
!4510 = !DILocation(line: 81, column: 34, scope: !4504)
!4511 = !DILocalVariable(name: "notify", arg: 3, scope: !4504, file: !3, line: 82, type: !4273)
!4512 = !DILocation(line: 82, column: 11, scope: !4504)
!4513 = !DILocalVariable(name: "uevent", arg: 4, scope: !4504, file: !3, line: 83, type: !4277)
!4514 = !DILocation(line: 83, column: 12, scope: !4504)
!4515 = !DILocation(line: 85, column: 2, scope: !4504)
!4516 = !DILocation(line: 86, column: 15, scope: !4504)
!4517 = !DILocation(line: 86, column: 2, scope: !4504)
!4518 = !DILocation(line: 86, column: 6, scope: !4504)
!4519 = !DILocation(line: 86, column: 13, scope: !4504)
!4520 = !DILocation(line: 87, column: 15, scope: !4504)
!4521 = !DILocation(line: 87, column: 2, scope: !4504)
!4522 = !DILocation(line: 87, column: 6, scope: !4504)
!4523 = !DILocation(line: 87, column: 13, scope: !4504)
!4524 = !DILocation(line: 88, column: 22, scope: !4504)
!4525 = !DILocation(line: 88, column: 28, scope: !4504)
!4526 = !DILocation(line: 88, column: 2, scope: !4504)
!4527 = !DILocation(line: 89, column: 2, scope: !4504)
!4528 = !DILocation(line: 90, column: 1, scope: !4504)
!4529 = distinct !DISubprogram(name: "acpi_set_hp_context", scope: !175, file: !175, line: 456, type: !4530, scopeLine: 458, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !239)
!4530 = !DISubroutineType(types: !4531)
!4531 = !{null, !4035, !4268}
!4532 = !DILocalVariable(name: "adev", arg: 1, scope: !4529, file: !175, line: 456, type: !4035)
!4533 = !DILocation(line: 456, column: 60, scope: !4529)
!4534 = !DILocalVariable(name: "hp", arg: 2, scope: !4529, file: !175, line: 457, type: !4268)
!4535 = !DILocation(line: 457, column: 41, scope: !4529)
!4536 = !DILocation(line: 459, column: 13, scope: !4529)
!4537 = !DILocation(line: 459, column: 2, scope: !4529)
!4538 = !DILocation(line: 459, column: 6, scope: !4529)
!4539 = !DILocation(line: 459, column: 11, scope: !4529)
!4540 = !DILocation(line: 460, column: 13, scope: !4529)
!4541 = !DILocation(line: 460, column: 2, scope: !4529)
!4542 = !DILocation(line: 460, column: 8, scope: !4529)
!4543 = !DILocation(line: 460, column: 11, scope: !4529)
!4544 = !DILocation(line: 461, column: 1, scope: !4529)
!4545 = distinct !DISubprogram(name: "acpi_scan_add_handler", scope: !3, file: !3, line: 93, type: !4546, scopeLine: 94, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !239)
!4546 = !DISubroutineType(types: !4547)
!4547 = !{!251, !4236}
!4548 = !DILocalVariable(name: "handler", arg: 1, scope: !4545, file: !3, line: 93, type: !4236)
!4549 = !DILocation(line: 93, column: 53, scope: !4545)
!4550 = !DILocation(line: 95, column: 7, scope: !4551)
!4551 = distinct !DILexicalBlock(scope: !4545, file: !3, line: 95, column: 6)
!4552 = !DILocation(line: 95, column: 6, scope: !4545)
!4553 = !DILocation(line: 96, column: 3, scope: !4551)
!4554 = !DILocation(line: 98, column: 17, scope: !4545)
!4555 = !DILocation(line: 98, column: 26, scope: !4545)
!4556 = !DILocation(line: 98, column: 2, scope: !4545)
!4557 = !DILocation(line: 99, column: 2, scope: !4545)
!4558 = !DILocation(line: 100, column: 1, scope: !4545)
!4559 = distinct !DISubprogram(name: "list_add_tail", scope: !4560, file: !4560, line: 98, type: !4561, scopeLine: 99, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !239)
!4560 = !DIFile(filename: "./include/linux/list.h", directory: "/home/lizy2001/genbc/linux")
!4561 = !DISubroutineType(types: !4562)
!4562 = !{null, !203, !203}
!4563 = !DILocalVariable(name: "new", arg: 1, scope: !4559, file: !4560, line: 98, type: !203)
!4564 = !DILocation(line: 98, column: 52, scope: !4559)
!4565 = !DILocalVariable(name: "head", arg: 2, scope: !4559, file: !4560, line: 98, type: !203)
!4566 = !DILocation(line: 98, column: 75, scope: !4559)
!4567 = !DILocation(line: 100, column: 13, scope: !4559)
!4568 = !DILocation(line: 100, column: 18, scope: !4559)
!4569 = !DILocation(line: 100, column: 24, scope: !4559)
!4570 = !DILocation(line: 100, column: 30, scope: !4559)
!4571 = !DILocation(line: 100, column: 2, scope: !4559)
!4572 = !DILocation(line: 101, column: 1, scope: !4559)
!4573 = distinct !DISubprogram(name: "acpi_scan_add_handler_with_hotplug", scope: !3, file: !3, line: 102, type: !4574, scopeLine: 104, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !239)
!4574 = !DISubroutineType(types: !4575)
!4575 = !{!251, !4236, !213}
!4576 = !DILocalVariable(name: "handler", arg: 1, scope: !4573, file: !3, line: 102, type: !4236)
!4577 = !DILocation(line: 102, column: 66, scope: !4573)
!4578 = !DILocalVariable(name: "hotplug_profile_name", arg: 2, scope: !4573, file: !3, line: 103, type: !213)
!4579 = !DILocation(line: 103, column: 24, scope: !4573)
!4580 = !DILocalVariable(name: "error", scope: !4573, file: !3, line: 105, type: !251)
!4581 = !DILocation(line: 105, column: 6, scope: !4573)
!4582 = !DILocation(line: 107, column: 32, scope: !4573)
!4583 = !DILocation(line: 107, column: 10, scope: !4573)
!4584 = !DILocation(line: 107, column: 8, scope: !4573)
!4585 = !DILocation(line: 108, column: 6, scope: !4586)
!4586 = distinct !DILexicalBlock(scope: !4573, file: !3, line: 108, column: 6)
!4587 = !DILocation(line: 108, column: 6, scope: !4573)
!4588 = !DILocation(line: 109, column: 10, scope: !4586)
!4589 = !DILocation(line: 109, column: 3, scope: !4586)
!4590 = !DILocation(line: 111, column: 34, scope: !4573)
!4591 = !DILocation(line: 111, column: 43, scope: !4573)
!4592 = !DILocation(line: 111, column: 52, scope: !4573)
!4593 = !DILocation(line: 111, column: 2, scope: !4573)
!4594 = !DILocation(line: 112, column: 2, scope: !4573)
!4595 = !DILocation(line: 113, column: 1, scope: !4573)
!4596 = distinct !DISubprogram(name: "acpi_scan_is_offline", scope: !3, file: !3, line: 115, type: !4597, scopeLine: 116, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !239)
!4597 = !DISubroutineType(types: !4598)
!4598 = !{!482, !4035, !482}
!4599 = !DILocalVariable(name: "adev", arg: 1, scope: !4596, file: !3, line: 115, type: !4035)
!4600 = !DILocation(line: 115, column: 47, scope: !4596)
!4601 = !DILocalVariable(name: "uevent", arg: 2, scope: !4596, file: !3, line: 115, type: !482)
!4602 = !DILocation(line: 115, column: 58, scope: !4596)
!4603 = !DILocalVariable(name: "pn", scope: !4596, file: !3, line: 117, type: !194)
!4604 = !DILocation(line: 117, column: 36, scope: !4596)
!4605 = !DILocalVariable(name: "offline", scope: !4596, file: !3, line: 118, type: !482)
!4606 = !DILocation(line: 118, column: 7, scope: !4596)
!4607 = !DILocalVariable(name: "envp", scope: !4596, file: !3, line: 119, type: !4608)
!4608 = !DICompositeType(tag: DW_TAG_array_type, baseType: !267, size: 128, elements: !1565)
!4609 = !DILocation(line: 119, column: 8, scope: !4596)
!4610 = !DILocation(line: 125, column: 2, scope: !4596)
!4611 = !DILocalVariable(name: "__mptr", scope: !4612, file: !3, line: 127, type: !193)
!4612 = distinct !DILexicalBlock(scope: !4613, file: !3, line: 127, column: 2)
!4613 = distinct !DILexicalBlock(scope: !4596, file: !3, line: 127, column: 2)
!4614 = !DILocation(line: 127, column: 2, scope: !4612)
!4615 = !DILocation(line: 127, column: 2, scope: !4616)
!4616 = distinct !DILexicalBlock(scope: !4612, file: !3, line: 127, column: 2)
!4617 = !DILocation(line: 127, column: 2, scope: !4613)
!4618 = !DILocation(line: 127, column: 2, scope: !4619)
!4619 = distinct !DILexicalBlock(scope: !4613, file: !3, line: 127, column: 2)
!4620 = !DILocation(line: 128, column: 31, scope: !4621)
!4621 = distinct !DILexicalBlock(scope: !4619, file: !3, line: 128, column: 7)
!4622 = !DILocation(line: 128, column: 35, scope: !4621)
!4623 = !DILocation(line: 128, column: 7, scope: !4621)
!4624 = !DILocation(line: 128, column: 40, scope: !4621)
!4625 = !DILocation(line: 128, column: 44, scope: !4621)
!4626 = !DILocation(line: 128, column: 48, scope: !4621)
!4627 = !DILocation(line: 128, column: 53, scope: !4621)
!4628 = !DILocation(line: 128, column: 7, scope: !4619)
!4629 = !DILocation(line: 129, column: 8, scope: !4630)
!4630 = distinct !DILexicalBlock(scope: !4631, file: !3, line: 129, column: 8)
!4631 = distinct !DILexicalBlock(scope: !4621, file: !3, line: 128, column: 62)
!4632 = !DILocation(line: 129, column: 8, scope: !4631)
!4633 = !DILocation(line: 130, column: 25, scope: !4630)
!4634 = !DILocation(line: 130, column: 29, scope: !4630)
!4635 = !DILocation(line: 130, column: 34, scope: !4630)
!4636 = !DILocation(line: 130, column: 53, scope: !4630)
!4637 = !DILocation(line: 130, column: 5, scope: !4630)
!4638 = !DILocation(line: 132, column: 12, scope: !4631)
!4639 = !DILocation(line: 133, column: 4, scope: !4631)
!4640 = !DILocalVariable(name: "__mptr", scope: !4641, file: !3, line: 127, type: !193)
!4641 = distinct !DILexicalBlock(scope: !4619, file: !3, line: 127, column: 2)
!4642 = !DILocation(line: 127, column: 2, scope: !4641)
!4643 = !DILocation(line: 127, column: 2, scope: !4644)
!4644 = distinct !DILexicalBlock(scope: !4641, file: !3, line: 127, column: 2)
!4645 = distinct !{!4645, !4617, !4646}
!4646 = !DILocation(line: 134, column: 3, scope: !4613)
!4647 = !DILocation(line: 136, column: 16, scope: !4596)
!4648 = !DILocation(line: 136, column: 22, scope: !4596)
!4649 = !DILocation(line: 136, column: 2, scope: !4596)
!4650 = !DILocation(line: 137, column: 9, scope: !4596)
!4651 = !DILocation(line: 137, column: 2, scope: !4596)
!4652 = distinct !DISubprogram(name: "device_supports_offline", scope: !73, file: !73, line: 796, type: !4653, scopeLine: 797, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !239)
!4653 = !DISubroutineType(types: !4654)
!4654 = !{!482, !206}
!4655 = !DILocalVariable(name: "dev", arg: 1, scope: !4652, file: !73, line: 796, type: !206)
!4656 = !DILocation(line: 796, column: 59, scope: !4652)
!4657 = !DILocation(line: 798, column: 9, scope: !4652)
!4658 = !DILocation(line: 798, column: 14, scope: !4652)
!4659 = !DILocation(line: 798, column: 18, scope: !4652)
!4660 = !DILocation(line: 798, column: 21, scope: !4652)
!4661 = !DILocation(line: 798, column: 26, scope: !4652)
!4662 = !DILocation(line: 798, column: 31, scope: !4652)
!4663 = !DILocation(line: 798, column: 39, scope: !4652)
!4664 = !DILocation(line: 798, column: 42, scope: !4652)
!4665 = !DILocation(line: 798, column: 47, scope: !4652)
!4666 = !DILocation(line: 798, column: 52, scope: !4652)
!4667 = !DILocation(line: 0, scope: !4652)
!4668 = !DILocation(line: 798, column: 2, scope: !4652)
!4669 = distinct !DISubprogram(name: "acpi_device_hotplug", scope: !3, file: !3, line: 389, type: !4278, scopeLine: 390, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !239)
!4670 = !DILocalVariable(name: "adev", arg: 1, scope: !4669, file: !3, line: 389, type: !4035)
!4671 = !DILocation(line: 389, column: 46, scope: !4669)
!4672 = !DILocalVariable(name: "src", arg: 2, scope: !4669, file: !3, line: 389, type: !407)
!4673 = !DILocation(line: 389, column: 56, scope: !4669)
!4674 = !DILocalVariable(name: "ost_code", scope: !4669, file: !3, line: 391, type: !407)
!4675 = !DILocation(line: 391, column: 6, scope: !4669)
!4676 = !DILocalVariable(name: "error", scope: !4669, file: !3, line: 392, type: !251)
!4677 = !DILocation(line: 392, column: 6, scope: !4669)
!4678 = !DILocation(line: 394, column: 2, scope: !4669)
!4679 = !DILocation(line: 395, column: 2, scope: !4669)
!4680 = !DILocation(line: 402, column: 6, scope: !4681)
!4681 = distinct !DILexicalBlock(scope: !4669, file: !3, line: 402, column: 6)
!4682 = !DILocation(line: 402, column: 12, scope: !4681)
!4683 = !DILocation(line: 402, column: 19, scope: !4681)
!4684 = !DILocation(line: 402, column: 6, scope: !4669)
!4685 = !DILocation(line: 403, column: 3, scope: !4681)
!4686 = !DILocation(line: 405, column: 6, scope: !4687)
!4687 = distinct !DILexicalBlock(scope: !4669, file: !3, line: 405, column: 6)
!4688 = !DILocation(line: 405, column: 12, scope: !4687)
!4689 = !DILocation(line: 405, column: 18, scope: !4687)
!4690 = !DILocation(line: 405, column: 6, scope: !4669)
!4691 = !DILocation(line: 406, column: 23, scope: !4692)
!4692 = distinct !DILexicalBlock(scope: !4687, file: !3, line: 405, column: 35)
!4693 = !DILocation(line: 406, column: 29, scope: !4692)
!4694 = !DILocation(line: 406, column: 11, scope: !4692)
!4695 = !DILocation(line: 406, column: 9, scope: !4692)
!4696 = !DILocation(line: 407, column: 2, scope: !4692)
!4697 = !DILocation(line: 407, column: 13, scope: !4698)
!4698 = distinct !DILexicalBlock(scope: !4687, file: !3, line: 407, column: 13)
!4699 = !DILocation(line: 407, column: 19, scope: !4698)
!4700 = !DILocation(line: 407, column: 25, scope: !4698)
!4701 = !DILocation(line: 407, column: 13, scope: !4687)
!4702 = !DILocation(line: 408, column: 38, scope: !4703)
!4703 = distinct !DILexicalBlock(scope: !4698, file: !3, line: 407, column: 41)
!4704 = !DILocation(line: 408, column: 44, scope: !4703)
!4705 = !DILocation(line: 408, column: 11, scope: !4703)
!4706 = !DILocation(line: 408, column: 9, scope: !4703)
!4707 = !DILocation(line: 409, column: 2, scope: !4703)
!4708 = !DILocalVariable(name: "notify", scope: !4709, file: !3, line: 410, type: !4273)
!4709 = distinct !DILexicalBlock(scope: !4698, file: !3, line: 409, column: 9)
!4710 = !DILocation(line: 410, column: 9, scope: !4709)
!4711 = !DILocation(line: 412, column: 3, scope: !4709)
!4712 = !DILocation(line: 413, column: 12, scope: !4709)
!4713 = !DILocation(line: 413, column: 18, scope: !4709)
!4714 = !DILocation(line: 413, column: 23, scope: !4709)
!4715 = !DILocation(line: 413, column: 29, scope: !4709)
!4716 = !DILocation(line: 413, column: 33, scope: !4709)
!4717 = !DILocation(line: 413, column: 10, scope: !4709)
!4718 = !DILocation(line: 414, column: 3, scope: !4709)
!4719 = !DILocation(line: 419, column: 7, scope: !4720)
!4720 = distinct !DILexicalBlock(scope: !4709, file: !3, line: 419, column: 7)
!4721 = !DILocation(line: 419, column: 7, scope: !4709)
!4722 = !DILocation(line: 420, column: 12, scope: !4720)
!4723 = !DILocation(line: 420, column: 19, scope: !4720)
!4724 = !DILocation(line: 420, column: 25, scope: !4720)
!4725 = !DILocation(line: 420, column: 10, scope: !4720)
!4726 = !DILocation(line: 420, column: 4, scope: !4720)
!4727 = !DILocation(line: 422, column: 4, scope: !4720)
!4728 = !DILocation(line: 424, column: 10, scope: !4669)
!4729 = !DILocation(line: 424, column: 2, scope: !4669)
!4730 = !DILocation(line: 426, column: 12, scope: !4731)
!4731 = distinct !DILexicalBlock(scope: !4669, file: !3, line: 424, column: 17)
!4732 = !DILocation(line: 427, column: 3, scope: !4731)
!4733 = !DILocation(line: 429, column: 12, scope: !4731)
!4734 = !DILocation(line: 430, column: 3, scope: !4731)
!4735 = !DILocation(line: 432, column: 12, scope: !4731)
!4736 = !DILocation(line: 433, column: 3, scope: !4731)
!4737 = !DILocation(line: 435, column: 12, scope: !4731)
!4738 = !DILocation(line: 436, column: 3, scope: !4731)
!4739 = !DILocation(line: 437, column: 2, scope: !4731)
!4740 = !DILabel(scope: !4669, name: "err_out", file: !3, line: 439)
!4741 = !DILocation(line: 439, column: 2, scope: !4669)
!4742 = !DILocation(line: 440, column: 20, scope: !4669)
!4743 = !DILocation(line: 440, column: 26, scope: !4669)
!4744 = !DILocation(line: 440, column: 34, scope: !4669)
!4745 = !DILocation(line: 440, column: 39, scope: !4669)
!4746 = !DILocation(line: 440, column: 2, scope: !4669)
!4747 = !DILabel(scope: !4669, name: "out", file: !3, line: 442)
!4748 = !DILocation(line: 442, column: 2, scope: !4669)
!4749 = !DILocation(line: 443, column: 27, scope: !4669)
!4750 = !DILocation(line: 443, column: 2, scope: !4669)
!4751 = !DILocation(line: 444, column: 2, scope: !4669)
!4752 = !DILocation(line: 445, column: 2, scope: !4669)
!4753 = !DILocation(line: 446, column: 1, scope: !4669)
!4754 = distinct !DISubprogram(name: "dock_notify", scope: !4021, file: !4021, line: 53, type: !4274, scopeLine: 53, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !239)
!4755 = !DILocalVariable(name: "adev", arg: 1, scope: !4754, file: !4021, line: 53, type: !4035)
!4756 = !DILocation(line: 53, column: 51, scope: !4754)
!4757 = !DILocalVariable(name: "event", arg: 2, scope: !4754, file: !4021, line: 53, type: !407)
!4758 = !DILocation(line: 53, column: 61, scope: !4754)
!4759 = !DILocation(line: 53, column: 70, scope: !4754)
!4760 = distinct !DISubprogram(name: "acpi_generic_hotplug_event", scope: !3, file: !3, line: 369, type: !4274, scopeLine: 370, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !239)
!4761 = !DILocalVariable(name: "adev", arg: 1, scope: !4760, file: !3, line: 369, type: !4035)
!4762 = !DILocation(line: 369, column: 59, scope: !4760)
!4763 = !DILocalVariable(name: "type", arg: 2, scope: !4760, file: !3, line: 369, type: !407)
!4764 = !DILocation(line: 369, column: 69, scope: !4760)
!4765 = !DILocation(line: 371, column: 10, scope: !4760)
!4766 = !DILocation(line: 371, column: 2, scope: !4760)
!4767 = !DILocation(line: 373, column: 30, scope: !4768)
!4768 = distinct !DILexicalBlock(scope: !4760, file: !3, line: 371, column: 16)
!4769 = !DILocation(line: 373, column: 10, scope: !4768)
!4770 = !DILocation(line: 373, column: 3, scope: !4768)
!4771 = !DILocation(line: 375, column: 33, scope: !4768)
!4772 = !DILocation(line: 375, column: 10, scope: !4768)
!4773 = !DILocation(line: 375, column: 3, scope: !4768)
!4774 = !DILocation(line: 378, column: 7, scope: !4775)
!4775 = distinct !DILexicalBlock(scope: !4768, file: !3, line: 378, column: 7)
!4776 = !DILocation(line: 378, column: 13, scope: !4775)
!4777 = !DILocation(line: 378, column: 21, scope: !4775)
!4778 = !DILocation(line: 378, column: 25, scope: !4775)
!4779 = !DILocation(line: 378, column: 31, scope: !4775)
!4780 = !DILocation(line: 378, column: 40, scope: !4775)
!4781 = !DILocation(line: 378, column: 48, scope: !4775)
!4782 = !DILocation(line: 378, column: 7, scope: !4768)
!4783 = !DILocation(line: 379, column: 4, scope: !4784)
!4784 = distinct !DILexicalBlock(scope: !4775, file: !3, line: 378, column: 57)
!4785 = !DILocation(line: 380, column: 4, scope: !4784)
!4786 = !DILocation(line: 382, column: 21, scope: !4768)
!4787 = !DILocation(line: 382, column: 27, scope: !4768)
!4788 = !DILocation(line: 382, column: 3, scope: !4768)
!4789 = !DILocation(line: 384, column: 31, scope: !4768)
!4790 = !DILocation(line: 384, column: 10, scope: !4768)
!4791 = !DILocation(line: 384, column: 3, scope: !4768)
!4792 = !DILocation(line: 386, column: 2, scope: !4760)
!4793 = !DILocation(line: 387, column: 1, scope: !4760)
!4794 = distinct !DISubprogram(name: "acpi_bus_put_acpi_device", scope: !3, file: !3, line: 618, type: !4252, scopeLine: 619, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !239)
!4795 = !DILocalVariable(name: "adev", arg: 1, scope: !4794, file: !3, line: 618, type: !4035)
!4796 = !DILocation(line: 618, column: 51, scope: !4794)
!4797 = !DILocation(line: 620, column: 14, scope: !4794)
!4798 = !DILocation(line: 620, column: 20, scope: !4794)
!4799 = !DILocation(line: 620, column: 2, scope: !4794)
!4800 = !DILocation(line: 621, column: 1, scope: !4794)
!4801 = distinct !DISubprogram(name: "acpi_bus_get_device", scope: !3, file: !3, line: 598, type: !4802, scopeLine: 599, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !239)
!4802 = !DISubroutineType(types: !4803)
!4803 = !{!251, !4017, !4804}
!4804 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4035, size: 64)
!4805 = !DILocalVariable(name: "handle", arg: 1, scope: !4801, file: !3, line: 598, type: !4017)
!4806 = !DILocation(line: 598, column: 37, scope: !4801)
!4807 = !DILocalVariable(name: "device", arg: 2, scope: !4801, file: !3, line: 598, type: !4804)
!4808 = !DILocation(line: 598, column: 66, scope: !4801)
!4809 = !DILocation(line: 600, column: 30, scope: !4801)
!4810 = !DILocation(line: 600, column: 38, scope: !4801)
!4811 = !DILocation(line: 600, column: 9, scope: !4801)
!4812 = !DILocation(line: 600, column: 2, scope: !4801)
!4813 = distinct !DISubprogram(name: "acpi_get_device_data", scope: !3, file: !3, line: 580, type: !4814, scopeLine: 582, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !239)
!4814 = !DISubroutineType(types: !4815)
!4815 = !{!251, !4017, !4804, !460}
!4816 = !DILocalVariable(name: "handle", arg: 1, scope: !4813, file: !3, line: 580, type: !4017)
!4817 = !DILocation(line: 580, column: 45, scope: !4813)
!4818 = !DILocalVariable(name: "device", arg: 2, scope: !4813, file: !3, line: 580, type: !4804)
!4819 = !DILocation(line: 580, column: 74, scope: !4813)
!4820 = !DILocalVariable(name: "callback", arg: 3, scope: !4813, file: !3, line: 581, type: !460)
!4821 = !DILocation(line: 581, column: 12, scope: !4813)
!4822 = !DILocalVariable(name: "status", scope: !4813, file: !3, line: 583, type: !4358)
!4823 = !DILocation(line: 583, column: 14, scope: !4813)
!4824 = !DILocation(line: 585, column: 7, scope: !4825)
!4825 = distinct !DILexicalBlock(scope: !4813, file: !3, line: 585, column: 6)
!4826 = !DILocation(line: 585, column: 6, scope: !4813)
!4827 = !DILocation(line: 586, column: 3, scope: !4825)
!4828 = !DILocation(line: 588, column: 30, scope: !4813)
!4829 = !DILocation(line: 589, column: 18, scope: !4813)
!4830 = !DILocation(line: 589, column: 9, scope: !4813)
!4831 = !DILocation(line: 589, column: 26, scope: !4813)
!4832 = !DILocation(line: 588, column: 11, scope: !4813)
!4833 = !DILocation(line: 588, column: 9, scope: !4813)
!4834 = !DILocation(line: 590, column: 6, scope: !4835)
!4835 = distinct !DILexicalBlock(scope: !4813, file: !3, line: 590, column: 6)
!4836 = !DILocation(line: 590, column: 27, scope: !4835)
!4837 = !DILocation(line: 590, column: 32, scope: !4835)
!4838 = !DILocation(line: 590, column: 31, scope: !4835)
!4839 = !DILocation(line: 590, column: 6, scope: !4813)
!4840 = !DILocation(line: 593, column: 3, scope: !4841)
!4841 = distinct !DILexicalBlock(scope: !4835, file: !3, line: 590, column: 40)
!4842 = !DILocation(line: 595, column: 2, scope: !4813)
!4843 = !DILocation(line: 596, column: 1, scope: !4813)
!4844 = distinct !DISubprogram(name: "acpi_bus_get_acpi_device", scope: !3, file: !3, line: 610, type: !4845, scopeLine: 611, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !239)
!4845 = !DISubroutineType(types: !4846)
!4846 = !{!4035, !4017}
!4847 = !DILocalVariable(name: "handle", arg: 1, scope: !4844, file: !3, line: 610, type: !4017)
!4848 = !DILocation(line: 610, column: 58, scope: !4844)
!4849 = !DILocalVariable(name: "adev", scope: !4844, file: !3, line: 612, type: !4035)
!4850 = !DILocation(line: 612, column: 22, scope: !4844)
!4851 = !DILocation(line: 614, column: 23, scope: !4844)
!4852 = !DILocation(line: 614, column: 2, scope: !4844)
!4853 = !DILocation(line: 615, column: 9, scope: !4844)
!4854 = !DILocation(line: 615, column: 2, scope: !4844)
!4855 = distinct !DISubprogram(name: "get_acpi_device", scope: !3, file: !3, line: 604, type: !461, scopeLine: 605, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !239)
!4856 = !DILocalVariable(name: "dev", arg: 1, scope: !4855, file: !3, line: 604, type: !193)
!4857 = !DILocation(line: 604, column: 35, scope: !4855)
!4858 = !DILocation(line: 606, column: 6, scope: !4859)
!4859 = distinct !DILexicalBlock(scope: !4855, file: !3, line: 606, column: 6)
!4860 = !DILocation(line: 606, column: 6, scope: !4855)
!4861 = !DILocation(line: 607, column: 38, scope: !4859)
!4862 = !DILocation(line: 607, column: 16, scope: !4859)
!4863 = !DILocation(line: 607, column: 44, scope: !4859)
!4864 = !DILocation(line: 607, column: 3, scope: !4859)
!4865 = !DILocation(line: 608, column: 1, scope: !4855)
!4866 = !DILocalVariable(name: "device", arg: 1, scope: !4374, file: !3, line: 623, type: !4035)
!4867 = !DILocation(line: 623, column: 41, scope: !4374)
!4868 = !DILocalVariable(name: "release", arg: 2, scope: !4374, file: !3, line: 624, type: !3391)
!4869 = !DILocation(line: 624, column: 14, scope: !4374)
!4870 = !DILocalVariable(name: "result", scope: !4374, file: !3, line: 626, type: !251)
!4871 = !DILocation(line: 626, column: 6, scope: !4374)
!4872 = !DILocalVariable(name: "acpi_device_bus_id", scope: !4374, file: !3, line: 627, type: !4019)
!4873 = !DILocation(line: 627, column: 29, scope: !4374)
!4874 = !DILocalVariable(name: "new_bus_id", scope: !4374, file: !3, line: 627, type: !4019)
!4875 = !DILocation(line: 627, column: 50, scope: !4374)
!4876 = !DILocalVariable(name: "found", scope: !4374, file: !3, line: 628, type: !251)
!4877 = !DILocation(line: 628, column: 6, scope: !4374)
!4878 = !DILocation(line: 630, column: 6, scope: !4879)
!4879 = distinct !DILexicalBlock(scope: !4374, file: !3, line: 630, column: 6)
!4880 = !DILocation(line: 630, column: 14, scope: !4879)
!4881 = !DILocation(line: 630, column: 6, scope: !4374)
!4882 = !DILocalVariable(name: "status", scope: !4883, file: !3, line: 631, type: !4358)
!4883 = distinct !DILexicalBlock(scope: !4879, file: !3, line: 630, column: 22)
!4884 = !DILocation(line: 631, column: 15, scope: !4883)
!4885 = !DILocation(line: 633, column: 29, scope: !4883)
!4886 = !DILocation(line: 633, column: 37, scope: !4883)
!4887 = !DILocation(line: 634, column: 8, scope: !4883)
!4888 = !DILocation(line: 633, column: 12, scope: !4883)
!4889 = !DILocation(line: 633, column: 10, scope: !4883)
!4890 = !DILocation(line: 635, column: 7, scope: !4891)
!4891 = distinct !DILexicalBlock(scope: !4883, file: !3, line: 635, column: 7)
!4892 = !DILocation(line: 635, column: 7, scope: !4883)
!4893 = !DILocation(line: 636, column: 4, scope: !4894)
!4894 = distinct !DILexicalBlock(scope: !4891, file: !3, line: 635, column: 29)
!4895 = !DILocation(line: 638, column: 4, scope: !4894)
!4896 = !DILocation(line: 640, column: 2, scope: !4883)
!4897 = !DILocation(line: 647, column: 18, scope: !4374)
!4898 = !DILocation(line: 647, column: 26, scope: !4374)
!4899 = !DILocation(line: 647, column: 2, scope: !4374)
!4900 = !DILocation(line: 648, column: 18, scope: !4374)
!4901 = !DILocation(line: 648, column: 26, scope: !4374)
!4902 = !DILocation(line: 648, column: 2, scope: !4374)
!4903 = !DILocation(line: 649, column: 18, scope: !4374)
!4904 = !DILocation(line: 649, column: 26, scope: !4374)
!4905 = !DILocation(line: 649, column: 2, scope: !4374)
!4906 = !DILocation(line: 650, column: 18, scope: !4374)
!4907 = !DILocation(line: 650, column: 26, scope: !4374)
!4908 = !DILocation(line: 650, column: 2, scope: !4374)
!4909 = !DILocation(line: 651, column: 18, scope: !4374)
!4910 = !DILocation(line: 651, column: 26, scope: !4374)
!4911 = !DILocation(line: 651, column: 2, scope: !4374)
!4912 = !DILocation(line: 652, column: 2, scope: !4374)
!4913 = !DILocation(line: 652, column: 2, scope: !4914)
!4914 = distinct !DILexicalBlock(scope: !4374, file: !3, line: 652, column: 2)
!4915 = !DILocation(line: 654, column: 15, scope: !4374)
!4916 = !DILocation(line: 654, column: 13, scope: !4374)
!4917 = !DILocation(line: 655, column: 7, scope: !4918)
!4918 = distinct !DILexicalBlock(scope: !4374, file: !3, line: 655, column: 6)
!4919 = !DILocation(line: 655, column: 6, scope: !4374)
!4920 = !DILocation(line: 656, column: 3, scope: !4921)
!4921 = distinct !DILexicalBlock(scope: !4918, file: !3, line: 655, column: 19)
!4922 = !DILocation(line: 657, column: 10, scope: !4921)
!4923 = !DILocation(line: 658, column: 3, scope: !4921)
!4924 = !DILocation(line: 661, column: 2, scope: !4374)
!4925 = !DILocalVariable(name: "__mptr", scope: !4926, file: !3, line: 666, type: !193)
!4926 = distinct !DILexicalBlock(scope: !4927, file: !3, line: 666, column: 2)
!4927 = distinct !DILexicalBlock(scope: !4374, file: !3, line: 666, column: 2)
!4928 = !DILocation(line: 666, column: 2, scope: !4926)
!4929 = !DILocation(line: 666, column: 2, scope: !4930)
!4930 = distinct !DILexicalBlock(scope: !4926, file: !3, line: 666, column: 2)
!4931 = !DILocation(line: 666, column: 2, scope: !4927)
!4932 = !DILocation(line: 666, column: 2, scope: !4933)
!4933 = distinct !DILexicalBlock(scope: !4927, file: !3, line: 666, column: 2)
!4934 = !DILocation(line: 667, column: 15, scope: !4935)
!4935 = distinct !DILexicalBlock(scope: !4936, file: !3, line: 667, column: 7)
!4936 = distinct !DILexicalBlock(scope: !4933, file: !3, line: 666, column: 67)
!4937 = !DILocation(line: 667, column: 35, scope: !4935)
!4938 = !DILocation(line: 668, column: 24, scope: !4935)
!4939 = !DILocation(line: 668, column: 8, scope: !4935)
!4940 = !DILocation(line: 667, column: 8, scope: !4935)
!4941 = !DILocation(line: 667, column: 7, scope: !4936)
!4942 = !DILocation(line: 669, column: 4, scope: !4943)
!4943 = distinct !DILexicalBlock(scope: !4935, file: !3, line: 668, column: 34)
!4944 = !DILocation(line: 669, column: 24, scope: !4943)
!4945 = !DILocation(line: 669, column: 35, scope: !4943)
!4946 = !DILocation(line: 670, column: 10, scope: !4943)
!4947 = !DILocation(line: 671, column: 10, scope: !4943)
!4948 = !DILocation(line: 671, column: 4, scope: !4943)
!4949 = !DILocation(line: 672, column: 4, scope: !4943)
!4950 = !DILocation(line: 674, column: 2, scope: !4936)
!4951 = !DILocalVariable(name: "__mptr", scope: !4952, file: !3, line: 666, type: !193)
!4952 = distinct !DILexicalBlock(scope: !4933, file: !3, line: 666, column: 2)
!4953 = !DILocation(line: 666, column: 2, scope: !4952)
!4954 = !DILocation(line: 666, column: 2, scope: !4955)
!4955 = distinct !DILexicalBlock(scope: !4952, file: !3, line: 666, column: 2)
!4956 = distinct !{!4956, !4931, !4957}
!4957 = !DILocation(line: 674, column: 2, scope: !4927)
!4958 = !DILocation(line: 675, column: 7, scope: !4959)
!4959 = distinct !DILexicalBlock(scope: !4374, file: !3, line: 675, column: 6)
!4960 = !DILocation(line: 675, column: 6, scope: !4374)
!4961 = !DILocation(line: 676, column: 24, scope: !4962)
!4962 = distinct !DILexicalBlock(scope: !4959, file: !3, line: 675, column: 14)
!4963 = !DILocation(line: 676, column: 22, scope: !4962)
!4964 = !DILocation(line: 677, column: 10, scope: !4962)
!4965 = !DILocation(line: 677, column: 30, scope: !4962)
!4966 = !DILocation(line: 677, column: 54, scope: !4962)
!4967 = !DILocation(line: 677, column: 38, scope: !4962)
!4968 = !DILocation(line: 677, column: 3, scope: !4962)
!4969 = !DILocation(line: 678, column: 3, scope: !4962)
!4970 = !DILocation(line: 678, column: 23, scope: !4962)
!4971 = !DILocation(line: 678, column: 35, scope: !4962)
!4972 = !DILocation(line: 679, column: 18, scope: !4962)
!4973 = !DILocation(line: 679, column: 38, scope: !4962)
!4974 = !DILocation(line: 679, column: 3, scope: !4962)
!4975 = !DILocation(line: 680, column: 2, scope: !4962)
!4976 = !DILocation(line: 681, column: 16, scope: !4374)
!4977 = !DILocation(line: 681, column: 24, scope: !4374)
!4978 = !DILocation(line: 681, column: 40, scope: !4374)
!4979 = !DILocation(line: 681, column: 60, scope: !4374)
!4980 = !DILocation(line: 681, column: 68, scope: !4374)
!4981 = !DILocation(line: 681, column: 88, scope: !4374)
!4982 = !DILocation(line: 681, column: 2, scope: !4374)
!4983 = !DILocation(line: 683, column: 6, scope: !4984)
!4984 = distinct !DILexicalBlock(scope: !4374, file: !3, line: 683, column: 6)
!4985 = !DILocation(line: 683, column: 14, scope: !4984)
!4986 = !DILocation(line: 683, column: 6, scope: !4374)
!4987 = !DILocation(line: 684, column: 18, scope: !4984)
!4988 = !DILocation(line: 684, column: 26, scope: !4984)
!4989 = !DILocation(line: 684, column: 33, scope: !4984)
!4990 = !DILocation(line: 684, column: 41, scope: !4984)
!4991 = !DILocation(line: 684, column: 49, scope: !4984)
!4992 = !DILocation(line: 684, column: 3, scope: !4984)
!4993 = !DILocation(line: 686, column: 6, scope: !4994)
!4994 = distinct !DILexicalBlock(scope: !4374, file: !3, line: 686, column: 6)
!4995 = !DILocation(line: 686, column: 14, scope: !4994)
!4996 = !DILocation(line: 686, column: 21, scope: !4994)
!4997 = !DILocation(line: 686, column: 27, scope: !4994)
!4998 = !DILocation(line: 686, column: 6, scope: !4374)
!4999 = !DILocation(line: 687, column: 18, scope: !4994)
!5000 = !DILocation(line: 687, column: 26, scope: !4994)
!5001 = !DILocation(line: 687, column: 3, scope: !4994)
!5002 = !DILocation(line: 688, column: 2, scope: !4374)
!5003 = !DILocation(line: 690, column: 6, scope: !5004)
!5004 = distinct !DILexicalBlock(scope: !4374, file: !3, line: 690, column: 6)
!5005 = !DILocation(line: 690, column: 14, scope: !5004)
!5006 = !DILocation(line: 690, column: 6, scope: !4374)
!5007 = !DILocation(line: 691, column: 25, scope: !5004)
!5008 = !DILocation(line: 691, column: 33, scope: !5004)
!5009 = !DILocation(line: 691, column: 41, scope: !5004)
!5010 = !DILocation(line: 691, column: 3, scope: !5004)
!5011 = !DILocation(line: 691, column: 11, scope: !5004)
!5012 = !DILocation(line: 691, column: 15, scope: !5004)
!5013 = !DILocation(line: 691, column: 22, scope: !5004)
!5014 = !DILocation(line: 692, column: 2, scope: !4374)
!5015 = !DILocation(line: 692, column: 10, scope: !4374)
!5016 = !DILocation(line: 692, column: 14, scope: !4374)
!5017 = !DILocation(line: 692, column: 18, scope: !4374)
!5018 = !DILocation(line: 693, column: 24, scope: !4374)
!5019 = !DILocation(line: 693, column: 2, scope: !4374)
!5020 = !DILocation(line: 693, column: 10, scope: !4374)
!5021 = !DILocation(line: 693, column: 14, scope: !4374)
!5022 = !DILocation(line: 693, column: 22, scope: !4374)
!5023 = !DILocation(line: 694, column: 23, scope: !4374)
!5024 = !DILocation(line: 694, column: 31, scope: !4374)
!5025 = !DILocation(line: 694, column: 11, scope: !4374)
!5026 = !DILocation(line: 694, column: 9, scope: !4374)
!5027 = !DILocation(line: 695, column: 6, scope: !5028)
!5028 = distinct !DILexicalBlock(scope: !4374, file: !3, line: 695, column: 6)
!5029 = !DILocation(line: 695, column: 6, scope: !4374)
!5030 = !DILocation(line: 696, column: 3, scope: !5031)
!5031 = distinct !DILexicalBlock(scope: !5028, file: !3, line: 695, column: 14)
!5032 = !DILocation(line: 697, column: 3, scope: !5031)
!5033 = !DILocation(line: 700, column: 35, scope: !4374)
!5034 = !DILocation(line: 700, column: 11, scope: !4374)
!5035 = !DILocation(line: 700, column: 9, scope: !4374)
!5036 = !DILocation(line: 701, column: 6, scope: !5037)
!5037 = distinct !DILexicalBlock(scope: !4374, file: !3, line: 701, column: 6)
!5038 = !DILocation(line: 701, column: 6, scope: !4374)
!5039 = !DILocation(line: 703, column: 20, scope: !5037)
!5040 = !DILocation(line: 703, column: 28, scope: !5037)
!5041 = !DILocation(line: 703, column: 10, scope: !5037)
!5042 = !DILocation(line: 702, column: 3, scope: !5037)
!5043 = !DILocation(line: 705, column: 2, scope: !4374)
!5044 = !DILabel(scope: !4374, name: "err", file: !3, line: 707)
!5045 = !DILocation(line: 707, column: 2, scope: !4374)
!5046 = !DILocation(line: 708, column: 2, scope: !4374)
!5047 = !DILocation(line: 709, column: 6, scope: !5048)
!5048 = distinct !DILexicalBlock(scope: !4374, file: !3, line: 709, column: 6)
!5049 = !DILocation(line: 709, column: 14, scope: !5048)
!5050 = !DILocation(line: 709, column: 6, scope: !4374)
!5051 = !DILocation(line: 710, column: 13, scope: !5048)
!5052 = !DILocation(line: 710, column: 21, scope: !5048)
!5053 = !DILocation(line: 710, column: 3, scope: !5048)
!5054 = !DILocation(line: 711, column: 12, scope: !4374)
!5055 = !DILocation(line: 711, column: 20, scope: !4374)
!5056 = !DILocation(line: 711, column: 2, scope: !4374)
!5057 = !DILocation(line: 712, column: 2, scope: !4374)
!5058 = !DILabel(scope: !4374, name: "err_detach", file: !3, line: 714)
!5059 = !DILocation(line: 714, column: 2, scope: !4374)
!5060 = !DILocation(line: 715, column: 19, scope: !4374)
!5061 = !DILocation(line: 715, column: 27, scope: !4374)
!5062 = !DILocation(line: 715, column: 2, scope: !4374)
!5063 = !DILocation(line: 716, column: 9, scope: !4374)
!5064 = !DILocation(line: 716, column: 2, scope: !4374)
!5065 = !DILocation(line: 717, column: 1, scope: !4374)
!5066 = !DILocalVariable(name: "handle", arg: 1, scope: !4432, file: !3, line: 553, type: !4017)
!5067 = !DILocation(line: 553, column: 47, scope: !4432)
!5068 = !DILocalVariable(name: "context", arg: 2, scope: !4432, file: !3, line: 553, type: !193)
!5069 = !DILocation(line: 553, column: 61, scope: !4432)
!5070 = !DILocalVariable(name: "adev", scope: !4432, file: !3, line: 556, type: !4035)
!5071 = !DILocation(line: 556, column: 22, scope: !4432)
!5072 = !DILocation(line: 556, column: 29, scope: !4432)
!5073 = !DILocation(line: 558, column: 2, scope: !4432)
!5074 = !DILocation(line: 570, column: 6, scope: !5075)
!5075 = distinct !DILexicalBlock(scope: !4432, file: !3, line: 570, column: 6)
!5076 = !DILocation(line: 570, column: 6, scope: !4432)
!5077 = !DILocation(line: 571, column: 3, scope: !5075)
!5078 = !DILocation(line: 573, column: 17, scope: !4432)
!5079 = !DILocation(line: 573, column: 23, scope: !4432)
!5080 = !DILocation(line: 573, column: 2, scope: !4432)
!5081 = !DILocation(line: 575, column: 2, scope: !4432)
!5082 = !DILocation(line: 575, column: 8, scope: !4432)
!5083 = !DILocation(line: 575, column: 15, scope: !4432)
!5084 = !DILocation(line: 577, column: 2, scope: !4432)
!5085 = !DILocation(line: 578, column: 1, scope: !4432)
!5086 = distinct !DISubprogram(name: "INIT_LIST_HEAD", scope: !4560, file: !4560, line: 33, type: !5087, scopeLine: 34, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !239)
!5087 = !DISubroutineType(types: !5088)
!5088 = !{null, !203}
!5089 = !DILocalVariable(name: "list", arg: 1, scope: !5086, file: !4560, line: 33, type: !203)
!5090 = !DILocation(line: 33, column: 53, scope: !5086)
!5091 = !DILocation(line: 35, column: 2, scope: !5086)
!5092 = !DILocation(line: 35, column: 2, scope: !5093)
!5093 = distinct !DILexicalBlock(scope: !5086, file: !4560, line: 35, column: 2)
!5094 = !DILocation(line: 35, column: 2, scope: !5095)
!5095 = distinct !DILexicalBlock(scope: !5093, file: !4560, line: 35, column: 2)
!5096 = !DILocation(line: 35, column: 2, scope: !5097)
!5097 = distinct !DILexicalBlock(scope: !5093, file: !4560, line: 35, column: 2)
!5098 = !DILocation(line: 36, column: 15, scope: !5086)
!5099 = !DILocation(line: 36, column: 2, scope: !5086)
!5100 = !DILocation(line: 36, column: 8, scope: !5086)
!5101 = !DILocation(line: 36, column: 13, scope: !5086)
!5102 = !DILocation(line: 37, column: 1, scope: !5086)
!5103 = distinct !DISubprogram(name: "kzalloc", scope: !186, file: !186, line: 662, type: !5104, scopeLine: 663, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !239)
!5104 = !DISubroutineType(types: !5105)
!5105 = !{!193, !313, !739}
!5106 = !DILocalVariable(name: "s", arg: 1, scope: !5107, file: !186, line: 445, type: !931)
!5107 = distinct !DISubprogram(name: "kmem_cache_alloc_trace", scope: !186, file: !186, line: 445, type: !5108, scopeLine: 447, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !239)
!5108 = !DISubroutineType(types: !5109)
!5109 = !{!193, !931, !739, !313}
!5110 = !DILocation(line: 445, column: 72, scope: !5107, inlinedAt: !5111)
!5111 = distinct !DILocation(line: 552, column: 10, scope: !5112, inlinedAt: !5115)
!5112 = distinct !DILexicalBlock(scope: !5113, file: !186, line: 540, column: 34)
!5113 = distinct !DILexicalBlock(scope: !5114, file: !186, line: 540, column: 6)
!5114 = distinct !DISubprogram(name: "kmalloc", scope: !186, file: !186, line: 538, type: !5104, scopeLine: 539, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !239)
!5115 = distinct !DILocation(line: 664, column: 9, scope: !5103)
!5116 = !DILocalVariable(name: "flags", arg: 2, scope: !5107, file: !186, line: 446, type: !739)
!5117 = !DILocation(line: 446, column: 9, scope: !5107, inlinedAt: !5111)
!5118 = !DILocalVariable(name: "size", arg: 3, scope: !5107, file: !186, line: 446, type: !313)
!5119 = !DILocation(line: 446, column: 23, scope: !5107, inlinedAt: !5111)
!5120 = !DILocalVariable(name: "ret", scope: !5107, file: !186, line: 448, type: !193)
!5121 = !DILocation(line: 448, column: 8, scope: !5107, inlinedAt: !5111)
!5122 = !DILocalVariable(name: "flags", arg: 1, scope: !5123, file: !186, line: 318, type: !739)
!5123 = distinct !DISubprogram(name: "kmalloc_type", scope: !186, file: !186, line: 318, type: !5124, scopeLine: 319, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !239)
!5124 = !DISubroutineType(types: !5125)
!5125 = !{!185, !739}
!5126 = !DILocation(line: 318, column: 67, scope: !5123, inlinedAt: !5127)
!5127 = distinct !DILocation(line: 553, column: 20, scope: !5112, inlinedAt: !5115)
!5128 = !DILocalVariable(name: "size", arg: 1, scope: !5129, file: !186, line: 346, type: !313)
!5129 = distinct !DISubprogram(name: "kmalloc_index", scope: !186, file: !186, line: 346, type: !5130, scopeLine: 347, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !239)
!5130 = !DISubroutineType(types: !5131)
!5131 = !{!7, !313}
!5132 = !DILocation(line: 346, column: 58, scope: !5129, inlinedAt: !5133)
!5133 = distinct !DILocation(line: 547, column: 11, scope: !5112, inlinedAt: !5115)
!5134 = !DILocalVariable(name: "size", arg: 1, scope: !5135, file: !186, line: 472, type: !313)
!5135 = distinct !DISubprogram(name: "kmalloc_order_trace", scope: !186, file: !186, line: 472, type: !5136, scopeLine: 473, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !239)
!5136 = !DISubroutineType(types: !5137)
!5137 = !{!193, !313, !739, !7}
!5138 = !DILocation(line: 472, column: 28, scope: !5135, inlinedAt: !5139)
!5139 = distinct !DILocation(line: 481, column: 9, scope: !5140, inlinedAt: !5141)
!5140 = distinct !DISubprogram(name: "kmalloc_large", scope: !186, file: !186, line: 478, type: !5104, scopeLine: 479, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !239)
!5141 = distinct !DILocation(line: 545, column: 11, scope: !5142, inlinedAt: !5115)
!5142 = distinct !DILexicalBlock(scope: !5112, file: !186, line: 544, column: 7)
!5143 = !DILocalVariable(name: "flags", arg: 2, scope: !5135, file: !186, line: 472, type: !739)
!5144 = !DILocation(line: 472, column: 40, scope: !5135, inlinedAt: !5139)
!5145 = !DILocalVariable(name: "order", arg: 3, scope: !5135, file: !186, line: 472, type: !7)
!5146 = !DILocation(line: 472, column: 60, scope: !5135, inlinedAt: !5139)
!5147 = !DILocalVariable(name: "size", arg: 1, scope: !5140, file: !186, line: 478, type: !313)
!5148 = !DILocation(line: 478, column: 51, scope: !5140, inlinedAt: !5141)
!5149 = !DILocalVariable(name: "flags", arg: 2, scope: !5140, file: !186, line: 478, type: !739)
!5150 = !DILocation(line: 478, column: 63, scope: !5140, inlinedAt: !5141)
!5151 = !DILocalVariable(name: "order", scope: !5140, file: !186, line: 480, type: !7)
!5152 = !DILocation(line: 480, column: 15, scope: !5140, inlinedAt: !5141)
!5153 = !DILocalVariable(name: "size", arg: 1, scope: !5114, file: !186, line: 538, type: !313)
!5154 = !DILocation(line: 538, column: 45, scope: !5114, inlinedAt: !5115)
!5155 = !DILocalVariable(name: "flags", arg: 2, scope: !5114, file: !186, line: 538, type: !739)
!5156 = !DILocation(line: 538, column: 57, scope: !5114, inlinedAt: !5115)
!5157 = !DILocalVariable(name: "index", scope: !5112, file: !186, line: 542, type: !7)
!5158 = !DILocation(line: 542, column: 16, scope: !5112, inlinedAt: !5115)
!5159 = !DILocalVariable(name: "size", arg: 1, scope: !5103, file: !186, line: 662, type: !313)
!5160 = !DILocation(line: 662, column: 36, scope: !5103)
!5161 = !DILocalVariable(name: "flags", arg: 2, scope: !5103, file: !186, line: 662, type: !739)
!5162 = !DILocation(line: 662, column: 48, scope: !5103)
!5163 = !DILocation(line: 664, column: 17, scope: !5103)
!5164 = !DILocation(line: 664, column: 23, scope: !5103)
!5165 = !DILocation(line: 664, column: 29, scope: !5103)
!5166 = !DILocation(line: 540, column: 27, scope: !5113, inlinedAt: !5115)
!5167 = !DILocation(line: 540, column: 6, scope: !5113, inlinedAt: !5115)
!5168 = !DILocation(line: 540, column: 6, scope: !5114, inlinedAt: !5115)
!5169 = !DILocation(line: 544, column: 7, scope: !5142, inlinedAt: !5115)
!5170 = !DILocation(line: 544, column: 12, scope: !5142, inlinedAt: !5115)
!5171 = !DILocation(line: 544, column: 7, scope: !5112, inlinedAt: !5115)
!5172 = !DILocation(line: 545, column: 25, scope: !5142, inlinedAt: !5115)
!5173 = !DILocation(line: 545, column: 31, scope: !5142, inlinedAt: !5115)
!5174 = !DILocation(line: 480, column: 33, scope: !5140, inlinedAt: !5141)
!5175 = !DILocation(line: 480, column: 23, scope: !5140, inlinedAt: !5141)
!5176 = !DILocation(line: 481, column: 29, scope: !5140, inlinedAt: !5141)
!5177 = !DILocation(line: 481, column: 35, scope: !5140, inlinedAt: !5141)
!5178 = !DILocation(line: 481, column: 42, scope: !5140, inlinedAt: !5141)
!5179 = !DILocation(line: 474, column: 23, scope: !5135, inlinedAt: !5139)
!5180 = !DILocation(line: 474, column: 29, scope: !5135, inlinedAt: !5139)
!5181 = !DILocation(line: 474, column: 36, scope: !5135, inlinedAt: !5139)
!5182 = !DILocation(line: 474, column: 9, scope: !5135, inlinedAt: !5139)
!5183 = !DILocation(line: 545, column: 4, scope: !5142, inlinedAt: !5115)
!5184 = !DILocation(line: 547, column: 25, scope: !5112, inlinedAt: !5115)
!5185 = !DILocation(line: 348, column: 7, scope: !5186, inlinedAt: !5133)
!5186 = distinct !DILexicalBlock(scope: !5129, file: !186, line: 348, column: 6)
!5187 = !DILocation(line: 348, column: 6, scope: !5129, inlinedAt: !5133)
!5188 = !DILocation(line: 349, column: 3, scope: !5186, inlinedAt: !5133)
!5189 = !DILocation(line: 351, column: 6, scope: !5190, inlinedAt: !5133)
!5190 = distinct !DILexicalBlock(scope: !5129, file: !186, line: 351, column: 6)
!5191 = !DILocation(line: 351, column: 11, scope: !5190, inlinedAt: !5133)
!5192 = !DILocation(line: 351, column: 6, scope: !5129, inlinedAt: !5133)
!5193 = !DILocation(line: 352, column: 3, scope: !5190, inlinedAt: !5133)
!5194 = !DILocation(line: 354, column: 32, scope: !5195, inlinedAt: !5133)
!5195 = distinct !DILexicalBlock(scope: !5129, file: !186, line: 354, column: 6)
!5196 = !DILocation(line: 354, column: 37, scope: !5195, inlinedAt: !5133)
!5197 = !DILocation(line: 354, column: 42, scope: !5195, inlinedAt: !5133)
!5198 = !DILocation(line: 354, column: 45, scope: !5195, inlinedAt: !5133)
!5199 = !DILocation(line: 354, column: 50, scope: !5195, inlinedAt: !5133)
!5200 = !DILocation(line: 354, column: 6, scope: !5129, inlinedAt: !5133)
!5201 = !DILocation(line: 355, column: 3, scope: !5195, inlinedAt: !5133)
!5202 = !DILocation(line: 356, column: 32, scope: !5203, inlinedAt: !5133)
!5203 = distinct !DILexicalBlock(scope: !5129, file: !186, line: 356, column: 6)
!5204 = !DILocation(line: 356, column: 37, scope: !5203, inlinedAt: !5133)
!5205 = !DILocation(line: 356, column: 43, scope: !5203, inlinedAt: !5133)
!5206 = !DILocation(line: 356, column: 46, scope: !5203, inlinedAt: !5133)
!5207 = !DILocation(line: 356, column: 51, scope: !5203, inlinedAt: !5133)
!5208 = !DILocation(line: 356, column: 6, scope: !5129, inlinedAt: !5133)
!5209 = !DILocation(line: 357, column: 3, scope: !5203, inlinedAt: !5133)
!5210 = !DILocation(line: 358, column: 6, scope: !5211, inlinedAt: !5133)
!5211 = distinct !DILexicalBlock(scope: !5129, file: !186, line: 358, column: 6)
!5212 = !DILocation(line: 358, column: 11, scope: !5211, inlinedAt: !5133)
!5213 = !DILocation(line: 358, column: 6, scope: !5129, inlinedAt: !5133)
!5214 = !DILocation(line: 358, column: 26, scope: !5211, inlinedAt: !5133)
!5215 = !DILocation(line: 359, column: 6, scope: !5216, inlinedAt: !5133)
!5216 = distinct !DILexicalBlock(scope: !5129, file: !186, line: 359, column: 6)
!5217 = !DILocation(line: 359, column: 11, scope: !5216, inlinedAt: !5133)
!5218 = !DILocation(line: 359, column: 6, scope: !5129, inlinedAt: !5133)
!5219 = !DILocation(line: 359, column: 26, scope: !5216, inlinedAt: !5133)
!5220 = !DILocation(line: 360, column: 6, scope: !5221, inlinedAt: !5133)
!5221 = distinct !DILexicalBlock(scope: !5129, file: !186, line: 360, column: 6)
!5222 = !DILocation(line: 360, column: 11, scope: !5221, inlinedAt: !5133)
!5223 = !DILocation(line: 360, column: 6, scope: !5129, inlinedAt: !5133)
!5224 = !DILocation(line: 360, column: 26, scope: !5221, inlinedAt: !5133)
!5225 = !DILocation(line: 361, column: 6, scope: !5226, inlinedAt: !5133)
!5226 = distinct !DILexicalBlock(scope: !5129, file: !186, line: 361, column: 6)
!5227 = !DILocation(line: 361, column: 11, scope: !5226, inlinedAt: !5133)
!5228 = !DILocation(line: 361, column: 6, scope: !5129, inlinedAt: !5133)
!5229 = !DILocation(line: 361, column: 26, scope: !5226, inlinedAt: !5133)
!5230 = !DILocation(line: 362, column: 6, scope: !5231, inlinedAt: !5133)
!5231 = distinct !DILexicalBlock(scope: !5129, file: !186, line: 362, column: 6)
!5232 = !DILocation(line: 362, column: 11, scope: !5231, inlinedAt: !5133)
!5233 = !DILocation(line: 362, column: 6, scope: !5129, inlinedAt: !5133)
!5234 = !DILocation(line: 362, column: 26, scope: !5231, inlinedAt: !5133)
!5235 = !DILocation(line: 363, column: 6, scope: !5236, inlinedAt: !5133)
!5236 = distinct !DILexicalBlock(scope: !5129, file: !186, line: 363, column: 6)
!5237 = !DILocation(line: 363, column: 11, scope: !5236, inlinedAt: !5133)
!5238 = !DILocation(line: 363, column: 6, scope: !5129, inlinedAt: !5133)
!5239 = !DILocation(line: 363, column: 26, scope: !5236, inlinedAt: !5133)
!5240 = !DILocation(line: 364, column: 6, scope: !5241, inlinedAt: !5133)
!5241 = distinct !DILexicalBlock(scope: !5129, file: !186, line: 364, column: 6)
!5242 = !DILocation(line: 364, column: 11, scope: !5241, inlinedAt: !5133)
!5243 = !DILocation(line: 364, column: 6, scope: !5129, inlinedAt: !5133)
!5244 = !DILocation(line: 364, column: 26, scope: !5241, inlinedAt: !5133)
!5245 = !DILocation(line: 365, column: 6, scope: !5246, inlinedAt: !5133)
!5246 = distinct !DILexicalBlock(scope: !5129, file: !186, line: 365, column: 6)
!5247 = !DILocation(line: 365, column: 11, scope: !5246, inlinedAt: !5133)
!5248 = !DILocation(line: 365, column: 6, scope: !5129, inlinedAt: !5133)
!5249 = !DILocation(line: 365, column: 26, scope: !5246, inlinedAt: !5133)
!5250 = !DILocation(line: 366, column: 6, scope: !5251, inlinedAt: !5133)
!5251 = distinct !DILexicalBlock(scope: !5129, file: !186, line: 366, column: 6)
!5252 = !DILocation(line: 366, column: 11, scope: !5251, inlinedAt: !5133)
!5253 = !DILocation(line: 366, column: 6, scope: !5129, inlinedAt: !5133)
!5254 = !DILocation(line: 366, column: 26, scope: !5251, inlinedAt: !5133)
!5255 = !DILocation(line: 367, column: 6, scope: !5256, inlinedAt: !5133)
!5256 = distinct !DILexicalBlock(scope: !5129, file: !186, line: 367, column: 6)
!5257 = !DILocation(line: 367, column: 11, scope: !5256, inlinedAt: !5133)
!5258 = !DILocation(line: 367, column: 6, scope: !5129, inlinedAt: !5133)
!5259 = !DILocation(line: 367, column: 26, scope: !5256, inlinedAt: !5133)
!5260 = !DILocation(line: 368, column: 6, scope: !5261, inlinedAt: !5133)
!5261 = distinct !DILexicalBlock(scope: !5129, file: !186, line: 368, column: 6)
!5262 = !DILocation(line: 368, column: 11, scope: !5261, inlinedAt: !5133)
!5263 = !DILocation(line: 368, column: 6, scope: !5129, inlinedAt: !5133)
!5264 = !DILocation(line: 368, column: 26, scope: !5261, inlinedAt: !5133)
!5265 = !DILocation(line: 369, column: 6, scope: !5266, inlinedAt: !5133)
!5266 = distinct !DILexicalBlock(scope: !5129, file: !186, line: 369, column: 6)
!5267 = !DILocation(line: 369, column: 11, scope: !5266, inlinedAt: !5133)
!5268 = !DILocation(line: 369, column: 6, scope: !5129, inlinedAt: !5133)
!5269 = !DILocation(line: 369, column: 26, scope: !5266, inlinedAt: !5133)
!5270 = !DILocation(line: 370, column: 6, scope: !5271, inlinedAt: !5133)
!5271 = distinct !DILexicalBlock(scope: !5129, file: !186, line: 370, column: 6)
!5272 = !DILocation(line: 370, column: 11, scope: !5271, inlinedAt: !5133)
!5273 = !DILocation(line: 370, column: 6, scope: !5129, inlinedAt: !5133)
!5274 = !DILocation(line: 370, column: 26, scope: !5271, inlinedAt: !5133)
!5275 = !DILocation(line: 371, column: 6, scope: !5276, inlinedAt: !5133)
!5276 = distinct !DILexicalBlock(scope: !5129, file: !186, line: 371, column: 6)
!5277 = !DILocation(line: 371, column: 11, scope: !5276, inlinedAt: !5133)
!5278 = !DILocation(line: 371, column: 6, scope: !5129, inlinedAt: !5133)
!5279 = !DILocation(line: 371, column: 26, scope: !5276, inlinedAt: !5133)
!5280 = !DILocation(line: 372, column: 6, scope: !5281, inlinedAt: !5133)
!5281 = distinct !DILexicalBlock(scope: !5129, file: !186, line: 372, column: 6)
!5282 = !DILocation(line: 372, column: 11, scope: !5281, inlinedAt: !5133)
!5283 = !DILocation(line: 372, column: 6, scope: !5129, inlinedAt: !5133)
!5284 = !DILocation(line: 372, column: 26, scope: !5281, inlinedAt: !5133)
!5285 = !DILocation(line: 373, column: 6, scope: !5286, inlinedAt: !5133)
!5286 = distinct !DILexicalBlock(scope: !5129, file: !186, line: 373, column: 6)
!5287 = !DILocation(line: 373, column: 11, scope: !5286, inlinedAt: !5133)
!5288 = !DILocation(line: 373, column: 6, scope: !5129, inlinedAt: !5133)
!5289 = !DILocation(line: 373, column: 26, scope: !5286, inlinedAt: !5133)
!5290 = !DILocation(line: 374, column: 6, scope: !5291, inlinedAt: !5133)
!5291 = distinct !DILexicalBlock(scope: !5129, file: !186, line: 374, column: 6)
!5292 = !DILocation(line: 374, column: 11, scope: !5291, inlinedAt: !5133)
!5293 = !DILocation(line: 374, column: 6, scope: !5129, inlinedAt: !5133)
!5294 = !DILocation(line: 374, column: 26, scope: !5291, inlinedAt: !5133)
!5295 = !DILocation(line: 375, column: 6, scope: !5296, inlinedAt: !5133)
!5296 = distinct !DILexicalBlock(scope: !5129, file: !186, line: 375, column: 6)
!5297 = !DILocation(line: 375, column: 11, scope: !5296, inlinedAt: !5133)
!5298 = !DILocation(line: 375, column: 6, scope: !5129, inlinedAt: !5133)
!5299 = !DILocation(line: 375, column: 27, scope: !5296, inlinedAt: !5133)
!5300 = !DILocation(line: 376, column: 6, scope: !5301, inlinedAt: !5133)
!5301 = distinct !DILexicalBlock(scope: !5129, file: !186, line: 376, column: 6)
!5302 = !DILocation(line: 376, column: 11, scope: !5301, inlinedAt: !5133)
!5303 = !DILocation(line: 376, column: 6, scope: !5129, inlinedAt: !5133)
!5304 = !DILocation(line: 376, column: 32, scope: !5301, inlinedAt: !5133)
!5305 = !DILocation(line: 377, column: 6, scope: !5306, inlinedAt: !5133)
!5306 = distinct !DILexicalBlock(scope: !5129, file: !186, line: 377, column: 6)
!5307 = !DILocation(line: 377, column: 11, scope: !5306, inlinedAt: !5133)
!5308 = !DILocation(line: 377, column: 6, scope: !5129, inlinedAt: !5133)
!5309 = !DILocation(line: 377, column: 32, scope: !5306, inlinedAt: !5133)
!5310 = !DILocation(line: 378, column: 6, scope: !5311, inlinedAt: !5133)
!5311 = distinct !DILexicalBlock(scope: !5129, file: !186, line: 378, column: 6)
!5312 = !DILocation(line: 378, column: 11, scope: !5311, inlinedAt: !5133)
!5313 = !DILocation(line: 378, column: 6, scope: !5129, inlinedAt: !5133)
!5314 = !DILocation(line: 378, column: 32, scope: !5311, inlinedAt: !5133)
!5315 = !DILocation(line: 379, column: 6, scope: !5316, inlinedAt: !5133)
!5316 = distinct !DILexicalBlock(scope: !5129, file: !186, line: 379, column: 6)
!5317 = !DILocation(line: 379, column: 11, scope: !5316, inlinedAt: !5133)
!5318 = !DILocation(line: 379, column: 6, scope: !5129, inlinedAt: !5133)
!5319 = !DILocation(line: 379, column: 33, scope: !5316, inlinedAt: !5133)
!5320 = !DILocation(line: 380, column: 6, scope: !5321, inlinedAt: !5133)
!5321 = distinct !DILexicalBlock(scope: !5129, file: !186, line: 380, column: 6)
!5322 = !DILocation(line: 380, column: 11, scope: !5321, inlinedAt: !5133)
!5323 = !DILocation(line: 380, column: 6, scope: !5129, inlinedAt: !5133)
!5324 = !DILocation(line: 380, column: 33, scope: !5321, inlinedAt: !5133)
!5325 = !DILocation(line: 381, column: 6, scope: !5326, inlinedAt: !5133)
!5326 = distinct !DILexicalBlock(scope: !5129, file: !186, line: 381, column: 6)
!5327 = !DILocation(line: 381, column: 11, scope: !5326, inlinedAt: !5133)
!5328 = !DILocation(line: 381, column: 6, scope: !5129, inlinedAt: !5133)
!5329 = !DILocation(line: 381, column: 33, scope: !5326, inlinedAt: !5133)
!5330 = !DILocation(line: 382, column: 2, scope: !5331, inlinedAt: !5133)
!5331 = distinct !DILexicalBlock(scope: !5332, file: !186, line: 382, column: 2)
!5332 = distinct !DILexicalBlock(scope: !5129, file: !186, line: 382, column: 2)
!5333 = !{i32 -2144187545, i32 -2144187516, i32 -2144187470, i32 -2144187412, i32 -2144187358, i32 -2144187304, i32 -2144187249, i32 -2144187218}
!5334 = !DILocation(line: 382, column: 2, scope: !5335, inlinedAt: !5133)
!5335 = distinct !DILexicalBlock(scope: !5336, file: !186, line: 382, column: 2)
!5336 = distinct !DILexicalBlock(scope: !5332, file: !186, line: 382, column: 2)
!5337 = !{i32 -2144186775, i32 -2144186768, i32 -2144186714, i32 -2144186683, i32 -2144186653}
!5338 = !DILocation(line: 382, column: 2, scope: !5336, inlinedAt: !5133)
!5339 = !DILocation(line: 386, column: 1, scope: !5129, inlinedAt: !5133)
!5340 = !DILocation(line: 547, column: 9, scope: !5112, inlinedAt: !5115)
!5341 = !DILocation(line: 549, column: 8, scope: !5342, inlinedAt: !5115)
!5342 = distinct !DILexicalBlock(scope: !5112, file: !186, line: 549, column: 7)
!5343 = !DILocation(line: 549, column: 7, scope: !5112, inlinedAt: !5115)
!5344 = !DILocation(line: 550, column: 4, scope: !5342, inlinedAt: !5115)
!5345 = !DILocation(line: 553, column: 33, scope: !5112, inlinedAt: !5115)
!5346 = !DILocation(line: 325, column: 6, scope: !5347, inlinedAt: !5127)
!5347 = distinct !DILexicalBlock(scope: !5123, file: !186, line: 325, column: 6)
!5348 = !DILocation(line: 325, column: 6, scope: !5123, inlinedAt: !5127)
!5349 = !DILocation(line: 326, column: 3, scope: !5347, inlinedAt: !5127)
!5350 = !DILocation(line: 332, column: 9, scope: !5123, inlinedAt: !5127)
!5351 = !DILocation(line: 332, column: 15, scope: !5123, inlinedAt: !5127)
!5352 = !DILocation(line: 332, column: 2, scope: !5123, inlinedAt: !5127)
!5353 = !DILocation(line: 336, column: 1, scope: !5123, inlinedAt: !5127)
!5354 = !DILocation(line: 553, column: 5, scope: !5112, inlinedAt: !5115)
!5355 = !DILocation(line: 553, column: 41, scope: !5112, inlinedAt: !5115)
!5356 = !DILocation(line: 554, column: 5, scope: !5112, inlinedAt: !5115)
!5357 = !DILocation(line: 554, column: 12, scope: !5112, inlinedAt: !5115)
!5358 = !DILocation(line: 448, column: 31, scope: !5107, inlinedAt: !5111)
!5359 = !DILocation(line: 448, column: 34, scope: !5107, inlinedAt: !5111)
!5360 = !DILocation(line: 448, column: 14, scope: !5107, inlinedAt: !5111)
!5361 = !DILocation(line: 450, column: 22, scope: !5107, inlinedAt: !5111)
!5362 = !DILocation(line: 450, column: 25, scope: !5107, inlinedAt: !5111)
!5363 = !DILocation(line: 450, column: 30, scope: !5107, inlinedAt: !5111)
!5364 = !DILocation(line: 450, column: 36, scope: !5107, inlinedAt: !5111)
!5365 = !DILocation(line: 450, column: 8, scope: !5107, inlinedAt: !5111)
!5366 = !DILocation(line: 450, column: 6, scope: !5107, inlinedAt: !5111)
!5367 = !DILocation(line: 451, column: 9, scope: !5107, inlinedAt: !5111)
!5368 = !DILocation(line: 552, column: 3, scope: !5112, inlinedAt: !5115)
!5369 = !DILocation(line: 557, column: 19, scope: !5114, inlinedAt: !5115)
!5370 = !DILocation(line: 557, column: 25, scope: !5114, inlinedAt: !5115)
!5371 = !DILocation(line: 557, column: 9, scope: !5114, inlinedAt: !5115)
!5372 = !DILocation(line: 557, column: 2, scope: !5114, inlinedAt: !5115)
!5373 = !DILocation(line: 558, column: 1, scope: !5114, inlinedAt: !5115)
!5374 = !DILocation(line: 664, column: 2, scope: !5103)
!5375 = distinct !DISubprogram(name: "acpi_device_hid", scope: !3, file: !3, line: 1167, type: !5376, scopeLine: 1168, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !239)
!5376 = !DISubroutineType(types: !5377)
!5377 = !{!213, !4035}
!5378 = !DILocalVariable(name: "device", arg: 1, scope: !5375, file: !3, line: 1167, type: !4035)
!5379 = !DILocation(line: 1167, column: 49, scope: !5375)
!5380 = !DILocalVariable(name: "hid", scope: !5375, file: !3, line: 1169, type: !4030)
!5381 = !DILocation(line: 1169, column: 27, scope: !5375)
!5382 = !DILocation(line: 1171, column: 18, scope: !5383)
!5383 = distinct !DILexicalBlock(scope: !5375, file: !3, line: 1171, column: 6)
!5384 = !DILocation(line: 1171, column: 26, scope: !5383)
!5385 = !DILocation(line: 1171, column: 30, scope: !5383)
!5386 = !DILocation(line: 1171, column: 6, scope: !5383)
!5387 = !DILocation(line: 1171, column: 6, scope: !5375)
!5388 = !DILocation(line: 1172, column: 10, scope: !5383)
!5389 = !DILocation(line: 1172, column: 3, scope: !5383)
!5390 = !DILocalVariable(name: "__mptr", scope: !5391, file: !3, line: 1174, type: !193)
!5391 = distinct !DILexicalBlock(scope: !5375, file: !3, line: 1174, column: 8)
!5392 = !DILocation(line: 1174, column: 8, scope: !5391)
!5393 = !DILocation(line: 1174, column: 8, scope: !5394)
!5394 = distinct !DILexicalBlock(scope: !5391, file: !3, line: 1174, column: 8)
!5395 = !DILocation(line: 1174, column: 6, scope: !5375)
!5396 = !DILocation(line: 1175, column: 9, scope: !5375)
!5397 = !DILocation(line: 1175, column: 14, scope: !5375)
!5398 = !DILocation(line: 1175, column: 2, scope: !5375)
!5399 = !DILocation(line: 1176, column: 1, scope: !5375)
!5400 = distinct !DISubprogram(name: "dev_name", scope: !73, file: !73, line: 609, type: !5401, scopeLine: 610, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !239)
!5401 = !DISubroutineType(types: !5402)
!5402 = !{!213, !3699}
!5403 = !DILocalVariable(name: "dev", arg: 1, scope: !5400, file: !73, line: 609, type: !3699)
!5404 = !DILocation(line: 609, column: 57, scope: !5400)
!5405 = !DILocation(line: 612, column: 6, scope: !5406)
!5406 = distinct !DILexicalBlock(scope: !5400, file: !73, line: 612, column: 6)
!5407 = !DILocation(line: 612, column: 11, scope: !5406)
!5408 = !DILocation(line: 612, column: 6, scope: !5400)
!5409 = !DILocation(line: 613, column: 10, scope: !5406)
!5410 = !DILocation(line: 613, column: 15, scope: !5406)
!5411 = !DILocation(line: 613, column: 3, scope: !5406)
!5412 = !DILocation(line: 615, column: 23, scope: !5400)
!5413 = !DILocation(line: 615, column: 28, scope: !5400)
!5414 = !DILocation(line: 615, column: 9, scope: !5400)
!5415 = !DILocation(line: 615, column: 2, scope: !5400)
!5416 = !DILocation(line: 616, column: 1, scope: !5400)
!5417 = distinct !DISubprogram(name: "list_del", scope: !4560, file: !4560, line: 144, type: !5087, scopeLine: 145, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !239)
!5418 = !DILocalVariable(name: "entry", arg: 1, scope: !5417, file: !4560, line: 144, type: !203)
!5419 = !DILocation(line: 144, column: 47, scope: !5417)
!5420 = !DILocation(line: 146, column: 19, scope: !5417)
!5421 = !DILocation(line: 146, column: 2, scope: !5417)
!5422 = !DILocation(line: 147, column: 2, scope: !5417)
!5423 = !DILocation(line: 147, column: 9, scope: !5417)
!5424 = !DILocation(line: 147, column: 14, scope: !5417)
!5425 = !DILocation(line: 148, column: 2, scope: !5417)
!5426 = !DILocation(line: 148, column: 9, scope: !5417)
!5427 = !DILocation(line: 148, column: 14, scope: !5417)
!5428 = !DILocation(line: 149, column: 1, scope: !5417)
!5429 = distinct !DISubprogram(name: "acpi_bus_get_ejd", scope: !3, file: !3, line: 744, type: !5430, scopeLine: 745, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !239)
!5430 = !DISubroutineType(types: !5431)
!5431 = !{!4358, !4017, !5432}
!5432 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4017, size: 64)
!5433 = !DILocalVariable(name: "handle", arg: 1, scope: !5429, file: !3, line: 744, type: !4017)
!5434 = !DILocation(line: 744, column: 30, scope: !5429)
!5435 = !DILocalVariable(name: "ejd", arg: 2, scope: !5429, file: !3, line: 744, type: !5432)
!5436 = !DILocation(line: 744, column: 51, scope: !5429)
!5437 = !DILocalVariable(name: "status", scope: !5429, file: !3, line: 746, type: !4358)
!5438 = !DILocation(line: 746, column: 14, scope: !5429)
!5439 = !DILocalVariable(name: "tmp", scope: !5429, file: !3, line: 747, type: !4017)
!5440 = !DILocation(line: 747, column: 14, scope: !5429)
!5441 = !DILocalVariable(name: "buffer", scope: !5429, file: !3, line: 748, type: !5442)
!5442 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "acpi_buffer", file: !4018, line: 969, size: 128, elements: !5443)
!5443 = !{!5444, !5445}
!5444 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !5442, file: !4018, line: 970, baseType: !4029, size: 64)
!5445 = !DIDerivedType(tag: DW_TAG_member, name: "pointer", scope: !5442, file: !4018, line: 971, baseType: !193, size: 64, offset: 64)
!5446 = !DILocation(line: 748, column: 21, scope: !5429)
!5447 = !DILocalVariable(name: "obj", scope: !5429, file: !3, line: 749, type: !4097)
!5448 = !DILocation(line: 749, column: 21, scope: !5429)
!5449 = !DILocation(line: 751, column: 27, scope: !5429)
!5450 = !DILocation(line: 751, column: 11, scope: !5429)
!5451 = !DILocation(line: 751, column: 9, scope: !5429)
!5452 = !DILocation(line: 752, column: 6, scope: !5453)
!5453 = distinct !DILexicalBlock(scope: !5429, file: !3, line: 752, column: 6)
!5454 = !DILocation(line: 752, column: 6, scope: !5429)
!5455 = !DILocation(line: 753, column: 10, scope: !5453)
!5456 = !DILocation(line: 753, column: 3, scope: !5453)
!5457 = !DILocation(line: 755, column: 32, scope: !5429)
!5458 = !DILocation(line: 755, column: 11, scope: !5429)
!5459 = !DILocation(line: 755, column: 9, scope: !5429)
!5460 = !DILocation(line: 756, column: 6, scope: !5461)
!5461 = distinct !DILexicalBlock(scope: !5429, file: !3, line: 756, column: 6)
!5462 = !DILocation(line: 756, column: 6, scope: !5429)
!5463 = !DILocation(line: 757, column: 16, scope: !5464)
!5464 = distinct !DILexicalBlock(scope: !5461, file: !3, line: 756, column: 28)
!5465 = !DILocation(line: 757, column: 9, scope: !5464)
!5466 = !DILocation(line: 757, column: 7, scope: !5464)
!5467 = !DILocation(line: 758, column: 46, scope: !5464)
!5468 = !DILocation(line: 758, column: 51, scope: !5464)
!5469 = !DILocation(line: 758, column: 58, scope: !5464)
!5470 = !DILocation(line: 759, column: 7, scope: !5464)
!5471 = !DILocation(line: 758, column: 12, scope: !5464)
!5472 = !DILocation(line: 758, column: 10, scope: !5464)
!5473 = !DILocation(line: 760, column: 16, scope: !5464)
!5474 = !DILocation(line: 760, column: 3, scope: !5464)
!5475 = !DILocation(line: 761, column: 2, scope: !5464)
!5476 = !DILocation(line: 762, column: 9, scope: !5429)
!5477 = !DILocation(line: 762, column: 2, scope: !5429)
!5478 = !DILocation(line: 763, column: 1, scope: !5429)
!5479 = distinct !DISubprogram(name: "acpi_ata_match", scope: !3, file: !3, line: 1057, type: !5480, scopeLine: 1058, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !239)
!5480 = !DISubroutineType(types: !5481)
!5481 = !{!482, !4017}
!5482 = !DILocalVariable(name: "handle", arg: 1, scope: !5479, file: !3, line: 1057, type: !4017)
!5483 = !DILocation(line: 1057, column: 33, scope: !5479)
!5484 = !DILocation(line: 1059, column: 25, scope: !5479)
!5485 = !DILocation(line: 1059, column: 9, scope: !5479)
!5486 = !DILocation(line: 1059, column: 41, scope: !5479)
!5487 = !DILocation(line: 1060, column: 25, scope: !5479)
!5488 = !DILocation(line: 1060, column: 9, scope: !5479)
!5489 = !DILocation(line: 1060, column: 41, scope: !5479)
!5490 = !DILocation(line: 1061, column: 25, scope: !5479)
!5491 = !DILocation(line: 1061, column: 9, scope: !5479)
!5492 = !DILocation(line: 1061, column: 41, scope: !5479)
!5493 = !DILocation(line: 1062, column: 25, scope: !5479)
!5494 = !DILocation(line: 1062, column: 9, scope: !5479)
!5495 = !DILocation(line: 1059, column: 2, scope: !5479)
!5496 = distinct !DISubprogram(name: "acpi_bay_match", scope: !3, file: !3, line: 1071, type: !5480, scopeLine: 1072, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !239)
!5497 = !DILocalVariable(name: "handle", arg: 1, scope: !5496, file: !3, line: 1071, type: !4017)
!5498 = !DILocation(line: 1071, column: 33, scope: !5496)
!5499 = !DILocalVariable(name: "phandle", scope: !5496, file: !3, line: 1073, type: !4017)
!5500 = !DILocation(line: 1073, column: 14, scope: !5496)
!5501 = !DILocation(line: 1075, column: 23, scope: !5502)
!5502 = distinct !DILexicalBlock(scope: !5496, file: !3, line: 1075, column: 6)
!5503 = !DILocation(line: 1075, column: 7, scope: !5502)
!5504 = !DILocation(line: 1075, column: 6, scope: !5496)
!5505 = !DILocation(line: 1076, column: 3, scope: !5502)
!5506 = !DILocation(line: 1077, column: 21, scope: !5507)
!5507 = distinct !DILexicalBlock(scope: !5496, file: !3, line: 1077, column: 6)
!5508 = !DILocation(line: 1077, column: 6, scope: !5507)
!5509 = !DILocation(line: 1077, column: 6, scope: !5496)
!5510 = !DILocation(line: 1078, column: 3, scope: !5507)
!5511 = !DILocation(line: 1079, column: 6, scope: !5512)
!5512 = distinct !DILexicalBlock(scope: !5496, file: !3, line: 1079, column: 6)
!5513 = !DILocation(line: 1079, column: 6, scope: !5496)
!5514 = !DILocation(line: 1080, column: 3, scope: !5512)
!5515 = !DILocation(line: 1082, column: 24, scope: !5496)
!5516 = !DILocation(line: 1082, column: 9, scope: !5496)
!5517 = !DILocation(line: 1082, column: 2, scope: !5496)
!5518 = !DILocation(line: 1083, column: 1, scope: !5496)
!5519 = distinct !DISubprogram(name: "acpi_device_is_battery", scope: !3, file: !3, line: 1085, type: !4444, scopeLine: 1086, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !239)
!5520 = !DILocalVariable(name: "adev", arg: 1, scope: !5519, file: !3, line: 1085, type: !4035)
!5521 = !DILocation(line: 1085, column: 49, scope: !5519)
!5522 = !DILocalVariable(name: "hwid", scope: !5519, file: !3, line: 1087, type: !4030)
!5523 = !DILocation(line: 1087, column: 27, scope: !5519)
!5524 = !DILocalVariable(name: "__mptr", scope: !5525, file: !3, line: 1089, type: !193)
!5525 = distinct !DILexicalBlock(scope: !5526, file: !3, line: 1089, column: 2)
!5526 = distinct !DILexicalBlock(scope: !5519, file: !3, line: 1089, column: 2)
!5527 = !DILocation(line: 1089, column: 2, scope: !5525)
!5528 = !DILocation(line: 1089, column: 2, scope: !5529)
!5529 = distinct !DILexicalBlock(scope: !5525, file: !3, line: 1089, column: 2)
!5530 = !DILocation(line: 1089, column: 2, scope: !5526)
!5531 = !DILocation(line: 1089, column: 2, scope: !5532)
!5532 = distinct !DILexicalBlock(scope: !5526, file: !3, line: 1089, column: 2)
!5533 = !DILocation(line: 1090, column: 26, scope: !5534)
!5534 = distinct !DILexicalBlock(scope: !5532, file: !3, line: 1090, column: 7)
!5535 = !DILocation(line: 1090, column: 32, scope: !5534)
!5536 = !DILocation(line: 1090, column: 8, scope: !5534)
!5537 = !DILocation(line: 1090, column: 7, scope: !5532)
!5538 = !DILocation(line: 1091, column: 4, scope: !5534)
!5539 = !DILocation(line: 1090, column: 34, scope: !5534)
!5540 = !DILocalVariable(name: "__mptr", scope: !5541, file: !3, line: 1089, type: !193)
!5541 = distinct !DILexicalBlock(scope: !5532, file: !3, line: 1089, column: 2)
!5542 = !DILocation(line: 1089, column: 2, scope: !5541)
!5543 = !DILocation(line: 1089, column: 2, scope: !5544)
!5544 = distinct !DILexicalBlock(scope: !5541, file: !3, line: 1089, column: 2)
!5545 = distinct !{!5545, !5530, !5546}
!5546 = !DILocation(line: 1091, column: 11, scope: !5526)
!5547 = !DILocation(line: 1093, column: 2, scope: !5519)
!5548 = !DILocation(line: 1094, column: 1, scope: !5519)
!5549 = distinct !DISubprogram(name: "acpi_dock_match", scope: !3, file: !3, line: 1109, type: !5480, scopeLine: 1110, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !239)
!5550 = !DILocalVariable(name: "handle", arg: 1, scope: !5549, file: !3, line: 1109, type: !4017)
!5551 = !DILocation(line: 1109, column: 34, scope: !5549)
!5552 = !DILocation(line: 1111, column: 25, scope: !5549)
!5553 = !DILocation(line: 1111, column: 9, scope: !5549)
!5554 = !DILocation(line: 1111, column: 2, scope: !5549)
!5555 = distinct !DISubprogram(name: "acpi_is_video_device", scope: !3, file: !3, line: 1139, type: !5556, scopeLine: 1140, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !239)
!5556 = !DISubroutineType(types: !5557)
!5557 = !{!138, !4017}
!5558 = !DILocalVariable(name: "handle", arg: 1, scope: !5555, file: !3, line: 1139, type: !4017)
!5559 = !DILocation(line: 1139, column: 39, scope: !5555)
!5560 = !DILocalVariable(name: "video_caps", scope: !5555, file: !3, line: 1141, type: !138)
!5561 = !DILocation(line: 1141, column: 7, scope: !5555)
!5562 = !DILocation(line: 1144, column: 22, scope: !5563)
!5563 = distinct !DILexicalBlock(scope: !5555, file: !3, line: 1144, column: 6)
!5564 = !DILocation(line: 1144, column: 6, scope: !5563)
!5565 = !DILocation(line: 1144, column: 38, scope: !5563)
!5566 = !DILocation(line: 1144, column: 57, scope: !5563)
!5567 = !DILocation(line: 1144, column: 41, scope: !5563)
!5568 = !DILocation(line: 1144, column: 6, scope: !5555)
!5569 = !DILocation(line: 1145, column: 14, scope: !5563)
!5570 = !DILocation(line: 1145, column: 3, scope: !5563)
!5571 = !DILocation(line: 1148, column: 22, scope: !5572)
!5572 = distinct !DILexicalBlock(scope: !5555, file: !3, line: 1148, column: 6)
!5573 = !DILocation(line: 1148, column: 6, scope: !5572)
!5574 = !DILocation(line: 1148, column: 6, scope: !5555)
!5575 = !DILocation(line: 1149, column: 14, scope: !5572)
!5576 = !DILocation(line: 1149, column: 3, scope: !5572)
!5577 = !DILocation(line: 1152, column: 22, scope: !5578)
!5578 = distinct !DILexicalBlock(scope: !5555, file: !3, line: 1152, column: 6)
!5579 = !DILocation(line: 1152, column: 6, scope: !5578)
!5580 = !DILocation(line: 1152, column: 38, scope: !5578)
!5581 = !DILocation(line: 1153, column: 22, scope: !5578)
!5582 = !DILocation(line: 1153, column: 6, scope: !5578)
!5583 = !DILocation(line: 1153, column: 38, scope: !5578)
!5584 = !DILocation(line: 1154, column: 22, scope: !5578)
!5585 = !DILocation(line: 1154, column: 6, scope: !5578)
!5586 = !DILocation(line: 1152, column: 6, scope: !5555)
!5587 = !DILocation(line: 1155, column: 14, scope: !5578)
!5588 = !DILocation(line: 1155, column: 3, scope: !5578)
!5589 = !DILocation(line: 1158, column: 6, scope: !5590)
!5590 = distinct !DILexicalBlock(scope: !5555, file: !3, line: 1158, column: 6)
!5591 = !DILocation(line: 1158, column: 6, scope: !5555)
!5592 = !DILocation(line: 1159, column: 41, scope: !5590)
!5593 = !DILocation(line: 1161, column: 9, scope: !5590)
!5594 = !DILocation(line: 1159, column: 3, scope: !5590)
!5595 = !DILocation(line: 1163, column: 9, scope: !5555)
!5596 = !DILocation(line: 1163, column: 2, scope: !5555)
!5597 = distinct !DISubprogram(name: "acpi_backlight_cap_match", scope: !3, file: !3, line: 1115, type: !5598, scopeLine: 1117, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !239)
!5598 = !DISubroutineType(types: !5599)
!5599 = !{!4358, !4017, !407, !193, !817}
!5600 = !DILocalVariable(name: "handle", arg: 1, scope: !5597, file: !3, line: 1115, type: !4017)
!5601 = !DILocation(line: 1115, column: 38, scope: !5597)
!5602 = !DILocalVariable(name: "level", arg: 2, scope: !5597, file: !3, line: 1115, type: !407)
!5603 = !DILocation(line: 1115, column: 50, scope: !5597)
!5604 = !DILocalVariable(name: "context", arg: 3, scope: !5597, file: !3, line: 1115, type: !193)
!5605 = !DILocation(line: 1115, column: 63, scope: !5597)
!5606 = !DILocalVariable(name: "return_value", arg: 4, scope: !5597, file: !3, line: 1116, type: !817)
!5607 = !DILocation(line: 1116, column: 13, scope: !5597)
!5608 = !DILocalVariable(name: "cap", scope: !5597, file: !3, line: 1118, type: !5609)
!5609 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !138, size: 64)
!5610 = !DILocation(line: 1118, column: 8, scope: !5597)
!5611 = !DILocation(line: 1118, column: 14, scope: !5597)
!5612 = !DILocation(line: 1120, column: 22, scope: !5613)
!5613 = distinct !DILexicalBlock(scope: !5597, file: !3, line: 1120, column: 6)
!5614 = !DILocation(line: 1120, column: 6, scope: !5613)
!5615 = !DILocation(line: 1120, column: 38, scope: !5613)
!5616 = !DILocation(line: 1121, column: 22, scope: !5613)
!5617 = !DILocation(line: 1121, column: 6, scope: !5613)
!5618 = !DILocation(line: 1120, column: 6, scope: !5597)
!5619 = !DILocation(line: 1124, column: 4, scope: !5620)
!5620 = distinct !DILexicalBlock(scope: !5613, file: !3, line: 1121, column: 39)
!5621 = !DILocation(line: 1124, column: 8, scope: !5620)
!5622 = !DILocation(line: 1126, column: 3, scope: !5620)
!5623 = !DILocation(line: 1128, column: 2, scope: !5597)
!5624 = !DILocation(line: 1129, column: 1, scope: !5597)
!5625 = distinct !DISubprogram(name: "list_empty", scope: !4560, file: !4560, line: 280, type: !5626, scopeLine: 281, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !239)
!5626 = !DISubroutineType(types: !5627)
!5627 = !{!251, !5628}
!5628 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5629, size: 64)
!5629 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !199)
!5630 = !DILocalVariable(name: "head", arg: 1, scope: !5625, file: !4560, line: 280, type: !5628)
!5631 = !DILocation(line: 280, column: 54, scope: !5625)
!5632 = !DILocation(line: 282, column: 9, scope: !5633)
!5633 = distinct !DILexicalBlock(scope: !5625, file: !4560, line: 282, column: 9)
!5634 = !DILocation(line: 282, column: 9, scope: !5635)
!5635 = distinct !DILexicalBlock(scope: !5633, file: !4560, line: 282, column: 9)
!5636 = !DILocation(line: 282, column: 34, scope: !5625)
!5637 = !DILocation(line: 282, column: 31, scope: !5625)
!5638 = !DILocation(line: 282, column: 2, scope: !5625)
!5639 = distinct !DISubprogram(name: "acpi_free_pnp_ids", scope: !3, file: !3, line: 1323, type: !5640, scopeLine: 1324, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !239)
!5640 = !DISubroutineType(types: !5641)
!5641 = !{null, !5642}
!5642 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4073, size: 64)
!5643 = !DILocalVariable(name: "pnp", arg: 1, scope: !5639, file: !3, line: 1323, type: !5642)
!5644 = !DILocation(line: 1323, column: 48, scope: !5639)
!5645 = !DILocalVariable(name: "id", scope: !5639, file: !3, line: 1325, type: !4030)
!5646 = !DILocation(line: 1325, column: 27, scope: !5639)
!5647 = !DILocalVariable(name: "tmp", scope: !5639, file: !3, line: 1325, type: !4030)
!5648 = !DILocation(line: 1325, column: 32, scope: !5639)
!5649 = !DILocalVariable(name: "__mptr", scope: !5650, file: !3, line: 1327, type: !193)
!5650 = distinct !DILexicalBlock(scope: !5651, file: !3, line: 1327, column: 2)
!5651 = distinct !DILexicalBlock(scope: !5639, file: !3, line: 1327, column: 2)
!5652 = !DILocation(line: 1327, column: 2, scope: !5650)
!5653 = !DILocation(line: 1327, column: 2, scope: !5654)
!5654 = distinct !DILexicalBlock(scope: !5650, file: !3, line: 1327, column: 2)
!5655 = !DILocation(line: 1327, column: 2, scope: !5651)
!5656 = !DILocalVariable(name: "__mptr", scope: !5657, file: !3, line: 1327, type: !193)
!5657 = distinct !DILexicalBlock(scope: !5651, file: !3, line: 1327, column: 2)
!5658 = !DILocation(line: 1327, column: 2, scope: !5657)
!5659 = !DILocation(line: 1327, column: 2, scope: !5660)
!5660 = distinct !DILexicalBlock(scope: !5657, file: !3, line: 1327, column: 2)
!5661 = !DILocation(line: 1327, column: 2, scope: !5662)
!5662 = distinct !DILexicalBlock(scope: !5651, file: !3, line: 1327, column: 2)
!5663 = !DILocation(line: 1328, column: 15, scope: !5664)
!5664 = distinct !DILexicalBlock(scope: !5662, file: !3, line: 1327, column: 53)
!5665 = !DILocation(line: 1328, column: 19, scope: !5664)
!5666 = !DILocation(line: 1328, column: 3, scope: !5664)
!5667 = !DILocation(line: 1329, column: 9, scope: !5664)
!5668 = !DILocation(line: 1329, column: 3, scope: !5664)
!5669 = !DILocation(line: 1330, column: 2, scope: !5664)
!5670 = !DILocalVariable(name: "__mptr", scope: !5671, file: !3, line: 1327, type: !193)
!5671 = distinct !DILexicalBlock(scope: !5662, file: !3, line: 1327, column: 2)
!5672 = !DILocation(line: 1327, column: 2, scope: !5671)
!5673 = !DILocation(line: 1327, column: 2, scope: !5674)
!5674 = distinct !DILexicalBlock(scope: !5671, file: !3, line: 1327, column: 2)
!5675 = distinct !{!5675, !5655, !5676}
!5676 = !DILocation(line: 1330, column: 2, scope: !5651)
!5677 = !DILocation(line: 1331, column: 8, scope: !5639)
!5678 = !DILocation(line: 1331, column: 13, scope: !5639)
!5679 = !DILocation(line: 1331, column: 2, scope: !5639)
!5680 = !DILocation(line: 1332, column: 1, scope: !5639)
!5681 = distinct !DISubprogram(name: "acpi_dma_supported", scope: !3, file: !3, line: 1340, type: !4444, scopeLine: 1341, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !239)
!5682 = !DILocalVariable(name: "adev", arg: 1, scope: !5681, file: !3, line: 1340, type: !4035)
!5683 = !DILocation(line: 1340, column: 45, scope: !5681)
!5684 = !DILocation(line: 1342, column: 7, scope: !5685)
!5685 = distinct !DILexicalBlock(scope: !5681, file: !3, line: 1342, column: 6)
!5686 = !DILocation(line: 1342, column: 6, scope: !5681)
!5687 = !DILocation(line: 1343, column: 3, scope: !5685)
!5688 = !DILocation(line: 1345, column: 6, scope: !5689)
!5689 = distinct !DILexicalBlock(scope: !5681, file: !3, line: 1345, column: 6)
!5690 = !DILocation(line: 1345, column: 12, scope: !5689)
!5691 = !DILocation(line: 1345, column: 18, scope: !5689)
!5692 = !DILocation(line: 1345, column: 6, scope: !5681)
!5693 = !DILocation(line: 1346, column: 3, scope: !5689)
!5694 = !DILocation(line: 1354, column: 3, scope: !5695)
!5695 = distinct !DILexicalBlock(scope: !5681, file: !3, line: 1353, column: 6)
!5696 = !DILocation(line: 1357, column: 1, scope: !5681)
!5697 = distinct !DISubprogram(name: "acpi_get_dma_attr", scope: !3, file: !3, line: 1365, type: !5698, scopeLine: 1366, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !239)
!5698 = !DISubroutineType(types: !5699)
!5699 = !{!130, !4035}
!5700 = !DILocalVariable(name: "adev", arg: 1, scope: !5697, file: !3, line: 1365, type: !4035)
!5701 = !DILocation(line: 1365, column: 57, scope: !5697)
!5702 = !DILocation(line: 1367, column: 26, scope: !5703)
!5703 = distinct !DILexicalBlock(scope: !5697, file: !3, line: 1367, column: 6)
!5704 = !DILocation(line: 1367, column: 7, scope: !5703)
!5705 = !DILocation(line: 1367, column: 6, scope: !5697)
!5706 = !DILocation(line: 1368, column: 3, scope: !5703)
!5707 = !DILocation(line: 1370, column: 6, scope: !5708)
!5708 = distinct !DILexicalBlock(scope: !5697, file: !3, line: 1370, column: 6)
!5709 = !DILocation(line: 1370, column: 12, scope: !5708)
!5710 = !DILocation(line: 1370, column: 18, scope: !5708)
!5711 = !DILocation(line: 1370, column: 6, scope: !5697)
!5712 = !DILocation(line: 1371, column: 3, scope: !5708)
!5713 = !DILocation(line: 1373, column: 3, scope: !5708)
!5714 = !DILocation(line: 1374, column: 1, scope: !5697)
!5715 = distinct !DISubprogram(name: "acpi_dma_get_range", scope: !3, file: !3, line: 1390, type: !5716, scopeLine: 1392, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !239)
!5716 = !DISubroutineType(types: !5717)
!5717 = !{!251, !206, !3949, !3949, !3949}
!5718 = !DILocalVariable(name: "dev", arg: 1, scope: !5715, file: !3, line: 1390, type: !206)
!5719 = !DILocation(line: 1390, column: 39, scope: !5715)
!5720 = !DILocalVariable(name: "dma_addr", arg: 2, scope: !5715, file: !3, line: 1390, type: !3949)
!5721 = !DILocation(line: 1390, column: 49, scope: !5715)
!5722 = !DILocalVariable(name: "offset", arg: 3, scope: !5715, file: !3, line: 1390, type: !3949)
!5723 = !DILocation(line: 1390, column: 64, scope: !5715)
!5724 = !DILocalVariable(name: "size", arg: 4, scope: !5715, file: !3, line: 1391, type: !3949)
!5725 = !DILocation(line: 1391, column: 15, scope: !5715)
!5726 = !DILocalVariable(name: "adev", scope: !5715, file: !3, line: 1393, type: !4035)
!5727 = !DILocation(line: 1393, column: 22, scope: !5715)
!5728 = !DILocalVariable(name: "list", scope: !5715, file: !3, line: 1394, type: !199)
!5729 = !DILocation(line: 1394, column: 2, scope: !5715)
!5730 = !DILocalVariable(name: "rentry", scope: !5715, file: !3, line: 1395, type: !4314)
!5731 = !DILocation(line: 1395, column: 25, scope: !5715)
!5732 = !DILocalVariable(name: "ret", scope: !5715, file: !3, line: 1396, type: !251)
!5733 = !DILocation(line: 1396, column: 6, scope: !5715)
!5734 = !DILocalVariable(name: "dma_dev", scope: !5715, file: !3, line: 1397, type: !206)
!5735 = !DILocation(line: 1397, column: 17, scope: !5715)
!5736 = !DILocation(line: 1397, column: 27, scope: !5715)
!5737 = !DILocalVariable(name: "len", scope: !5715, file: !3, line: 1398, type: !413)
!5738 = !DILocation(line: 1398, column: 6, scope: !5715)
!5739 = !DILocalVariable(name: "dma_start", scope: !5715, file: !3, line: 1398, type: !413)
!5740 = !DILocation(line: 1398, column: 11, scope: !5715)
!5741 = !DILocalVariable(name: "dma_end", scope: !5715, file: !3, line: 1398, type: !413)
!5742 = !DILocation(line: 1398, column: 32, scope: !5715)
!5743 = !DILocalVariable(name: "dma_offset", scope: !5715, file: !3, line: 1398, type: !413)
!5744 = !DILocation(line: 1398, column: 45, scope: !5715)
!5745 = !DILocation(line: 1405, column: 2, scope: !5715)
!5746 = !DILocalVariable(name: "__to_acpi_device_node_fwnode", scope: !5747, file: !3, line: 1406, type: !3675)
!5747 = distinct !DILexicalBlock(scope: !5748, file: !3, line: 1406, column: 10)
!5748 = distinct !DILexicalBlock(scope: !5715, file: !3, line: 1405, column: 5)
!5749 = !DILocation(line: 1406, column: 10, scope: !5747)
!5750 = !DILocalVariable(name: "__mptr", scope: !5751, file: !3, line: 1406, type: !193)
!5751 = distinct !DILexicalBlock(scope: !5747, file: !3, line: 1406, column: 10)
!5752 = !DILocation(line: 1406, column: 10, scope: !5751)
!5753 = !DILocation(line: 1406, column: 10, scope: !5754)
!5754 = distinct !DILexicalBlock(scope: !5751, file: !3, line: 1406, column: 10)
!5755 = !DILocation(line: 1406, column: 8, scope: !5748)
!5756 = !DILocation(line: 1407, column: 7, scope: !5757)
!5757 = distinct !DILexicalBlock(scope: !5748, file: !3, line: 1407, column: 7)
!5758 = !DILocation(line: 1407, column: 12, scope: !5757)
!5759 = !DILocation(line: 1407, column: 31, scope: !5757)
!5760 = !DILocation(line: 1407, column: 37, scope: !5757)
!5761 = !DILocation(line: 1407, column: 15, scope: !5757)
!5762 = !DILocation(line: 1407, column: 7, scope: !5748)
!5763 = !DILocation(line: 1408, column: 4, scope: !5757)
!5764 = !DILocation(line: 1410, column: 13, scope: !5748)
!5765 = !DILocation(line: 1410, column: 22, scope: !5748)
!5766 = !DILocation(line: 1410, column: 11, scope: !5748)
!5767 = !DILocation(line: 1411, column: 2, scope: !5748)
!5768 = !DILocation(line: 1411, column: 11, scope: !5715)
!5769 = distinct !{!5769, !5745, !5770}
!5770 = !DILocation(line: 1411, column: 18, scope: !5715)
!5771 = !DILocation(line: 1413, column: 7, scope: !5772)
!5772 = distinct !DILexicalBlock(scope: !5715, file: !3, line: 1413, column: 6)
!5773 = !DILocation(line: 1413, column: 6, scope: !5715)
!5774 = !DILocation(line: 1414, column: 3, scope: !5772)
!5775 = !DILocation(line: 1416, column: 23, scope: !5776)
!5776 = distinct !DILexicalBlock(scope: !5715, file: !3, line: 1416, column: 6)
!5777 = !DILocation(line: 1416, column: 29, scope: !5776)
!5778 = !DILocation(line: 1416, column: 7, scope: !5776)
!5779 = !DILocation(line: 1416, column: 6, scope: !5715)
!5780 = !DILocation(line: 1417, column: 3, scope: !5781)
!5781 = distinct !DILexicalBlock(scope: !5776, file: !3, line: 1416, column: 56)
!5782 = !DILocation(line: 1418, column: 3, scope: !5781)
!5783 = !DILocation(line: 1421, column: 35, scope: !5715)
!5784 = !DILocation(line: 1421, column: 8, scope: !5715)
!5785 = !DILocation(line: 1421, column: 6, scope: !5715)
!5786 = !DILocation(line: 1422, column: 6, scope: !5787)
!5787 = distinct !DILexicalBlock(scope: !5715, file: !3, line: 1422, column: 6)
!5788 = !DILocation(line: 1422, column: 10, scope: !5787)
!5789 = !DILocation(line: 1422, column: 6, scope: !5715)
!5790 = !DILocalVariable(name: "__mptr", scope: !5791, file: !3, line: 1423, type: !193)
!5791 = distinct !DILexicalBlock(scope: !5792, file: !3, line: 1423, column: 3)
!5792 = distinct !DILexicalBlock(scope: !5793, file: !3, line: 1423, column: 3)
!5793 = distinct !DILexicalBlock(scope: !5787, file: !3, line: 1422, column: 15)
!5794 = !DILocation(line: 1423, column: 3, scope: !5791)
!5795 = !DILocation(line: 1423, column: 3, scope: !5796)
!5796 = distinct !DILexicalBlock(scope: !5791, file: !3, line: 1423, column: 3)
!5797 = !DILocation(line: 1423, column: 3, scope: !5792)
!5798 = !DILocation(line: 1423, column: 3, scope: !5799)
!5799 = distinct !DILexicalBlock(scope: !5792, file: !3, line: 1423, column: 3)
!5800 = !DILocation(line: 1424, column: 8, scope: !5801)
!5801 = distinct !DILexicalBlock(scope: !5802, file: !3, line: 1424, column: 8)
!5802 = distinct !DILexicalBlock(scope: !5799, file: !3, line: 1423, column: 44)
!5803 = !DILocation(line: 1424, column: 19, scope: !5801)
!5804 = !DILocation(line: 1424, column: 22, scope: !5801)
!5805 = !DILocation(line: 1424, column: 30, scope: !5801)
!5806 = !DILocation(line: 1424, column: 40, scope: !5801)
!5807 = !DILocation(line: 1424, column: 37, scope: !5801)
!5808 = !DILocation(line: 1424, column: 8, scope: !5802)
!5809 = !DILocation(line: 1425, column: 9, scope: !5810)
!5810 = distinct !DILexicalBlock(scope: !5801, file: !3, line: 1424, column: 52)
!5811 = !DILocation(line: 1426, column: 5, scope: !5810)
!5812 = !DILocation(line: 1427, column: 5, scope: !5810)
!5813 = !DILocation(line: 1429, column: 17, scope: !5802)
!5814 = !DILocation(line: 1429, column: 25, scope: !5802)
!5815 = !DILocation(line: 1429, column: 15, scope: !5802)
!5816 = !DILocation(line: 1432, column: 8, scope: !5817)
!5817 = distinct !DILexicalBlock(scope: !5802, file: !3, line: 1432, column: 8)
!5818 = !DILocation(line: 1432, column: 16, scope: !5817)
!5819 = !DILocation(line: 1432, column: 21, scope: !5817)
!5820 = !DILocation(line: 1432, column: 29, scope: !5817)
!5821 = !DILocation(line: 1432, column: 27, scope: !5817)
!5822 = !DILocation(line: 1432, column: 8, scope: !5802)
!5823 = !DILocation(line: 1433, column: 17, scope: !5817)
!5824 = !DILocation(line: 1433, column: 25, scope: !5817)
!5825 = !DILocation(line: 1433, column: 30, scope: !5817)
!5826 = !DILocation(line: 1433, column: 15, scope: !5817)
!5827 = !DILocation(line: 1433, column: 5, scope: !5817)
!5828 = !DILocation(line: 1434, column: 8, scope: !5829)
!5829 = distinct !DILexicalBlock(scope: !5802, file: !3, line: 1434, column: 8)
!5830 = !DILocation(line: 1434, column: 16, scope: !5829)
!5831 = !DILocation(line: 1434, column: 21, scope: !5829)
!5832 = !DILocation(line: 1434, column: 27, scope: !5829)
!5833 = !DILocation(line: 1434, column: 25, scope: !5829)
!5834 = !DILocation(line: 1434, column: 8, scope: !5802)
!5835 = !DILocation(line: 1435, column: 15, scope: !5829)
!5836 = !DILocation(line: 1435, column: 23, scope: !5829)
!5837 = !DILocation(line: 1435, column: 28, scope: !5829)
!5838 = !DILocation(line: 1435, column: 13, scope: !5829)
!5839 = !DILocation(line: 1435, column: 5, scope: !5829)
!5840 = !DILocation(line: 1436, column: 3, scope: !5802)
!5841 = !DILocalVariable(name: "__mptr", scope: !5842, file: !3, line: 1423, type: !193)
!5842 = distinct !DILexicalBlock(scope: !5799, file: !3, line: 1423, column: 3)
!5843 = !DILocation(line: 1423, column: 3, scope: !5842)
!5844 = !DILocation(line: 1423, column: 3, scope: !5845)
!5845 = distinct !DILexicalBlock(scope: !5842, file: !3, line: 1423, column: 3)
!5846 = distinct !{!5846, !5797, !5847}
!5847 = !DILocation(line: 1436, column: 3, scope: !5792)
!5848 = !DILocation(line: 1438, column: 7, scope: !5849)
!5849 = distinct !DILexicalBlock(scope: !5793, file: !3, line: 1438, column: 7)
!5850 = !DILocation(line: 1438, column: 20, scope: !5849)
!5851 = !DILocation(line: 1438, column: 17, scope: !5849)
!5852 = !DILocation(line: 1438, column: 7, scope: !5793)
!5853 = !DILocation(line: 1439, column: 8, scope: !5854)
!5854 = distinct !DILexicalBlock(scope: !5849, file: !3, line: 1438, column: 29)
!5855 = !DILocation(line: 1441, column: 4, scope: !5854)
!5856 = !DILocation(line: 1444, column: 15, scope: !5793)
!5857 = !DILocation(line: 1444, column: 27, scope: !5793)
!5858 = !DILocation(line: 1444, column: 25, scope: !5793)
!5859 = !DILocation(line: 1444, column: 4, scope: !5793)
!5860 = !DILocation(line: 1444, column: 13, scope: !5793)
!5861 = !DILocation(line: 1445, column: 9, scope: !5793)
!5862 = !DILocation(line: 1445, column: 19, scope: !5793)
!5863 = !DILocation(line: 1445, column: 17, scope: !5793)
!5864 = !DILocation(line: 1445, column: 7, scope: !5793)
!5865 = !DILocalVariable(name: "__UNIQUE_ID___x260", scope: !5866, file: !3, line: 1446, type: !413)
!5866 = distinct !DILexicalBlock(scope: !5793, file: !3, line: 1446, column: 11)
!5867 = !DILocation(line: 1446, column: 11, scope: !5866)
!5868 = !DILocalVariable(name: "__UNIQUE_ID___y261", scope: !5866, file: !3, line: 1446, type: !415)
!5869 = !DILocation(line: 1446, column: 4, scope: !5793)
!5870 = !DILocation(line: 1446, column: 9, scope: !5793)
!5871 = !DILocation(line: 1447, column: 13, scope: !5793)
!5872 = !DILocation(line: 1447, column: 4, scope: !5793)
!5873 = !DILocation(line: 1447, column: 11, scope: !5793)
!5874 = !DILocation(line: 1448, column: 2, scope: !5793)
!5875 = !DILocation(line: 1422, column: 12, scope: !5787)
!5876 = !DILabel(scope: !5715, name: "out", file: !3, line: 1449)
!5877 = !DILocation(line: 1449, column: 2, scope: !5715)
!5878 = !DILocation(line: 1450, column: 2, scope: !5715)
!5879 = !DILocation(line: 1452, column: 9, scope: !5715)
!5880 = !DILocation(line: 1452, column: 13, scope: !5715)
!5881 = !DILocation(line: 1452, column: 24, scope: !5715)
!5882 = !DILocation(line: 1452, column: 2, scope: !5715)
!5883 = !DILocation(line: 1453, column: 1, scope: !5715)
!5884 = distinct !DISubprogram(name: "acpi_dma_configure_id", scope: !3, file: !3, line: 1461, type: !5885, scopeLine: 1463, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !239)
!5885 = !DISubroutineType(types: !5886)
!5886 = !{!251, !206, !130, !3800}
!5887 = !DILocalVariable(name: "dev", arg: 1, scope: !5884, file: !3, line: 1461, type: !206)
!5888 = !DILocation(line: 1461, column: 42, scope: !5884)
!5889 = !DILocalVariable(name: "attr", arg: 2, scope: !5884, file: !3, line: 1461, type: !130)
!5890 = !DILocation(line: 1461, column: 65, scope: !5884)
!5891 = !DILocalVariable(name: "input_id", arg: 3, scope: !5884, file: !3, line: 1462, type: !3800)
!5892 = !DILocation(line: 1462, column: 17, scope: !5884)
!5893 = !DILocalVariable(name: "iommu", scope: !5884, file: !3, line: 1464, type: !3508)
!5894 = !DILocation(line: 1464, column: 26, scope: !5884)
!5895 = !DILocalVariable(name: "dma_addr", scope: !5884, file: !3, line: 1465, type: !413)
!5896 = !DILocation(line: 1465, column: 6, scope: !5884)
!5897 = !DILocalVariable(name: "size", scope: !5884, file: !3, line: 1465, type: !413)
!5898 = !DILocation(line: 1465, column: 20, scope: !5884)
!5899 = !DILocation(line: 1467, column: 6, scope: !5900)
!5900 = distinct !DILexicalBlock(scope: !5884, file: !3, line: 1467, column: 6)
!5901 = !DILocation(line: 1467, column: 11, scope: !5900)
!5902 = !DILocation(line: 1467, column: 6, scope: !5884)
!5903 = !DILocation(line: 1468, column: 15, scope: !5904)
!5904 = distinct !DILexicalBlock(scope: !5900, file: !3, line: 1467, column: 37)
!5905 = !DILocation(line: 1468, column: 3, scope: !5904)
!5906 = !DILocation(line: 1469, column: 3, scope: !5904)
!5907 = !DILocation(line: 1472, column: 17, scope: !5884)
!5908 = !DILocation(line: 1472, column: 2, scope: !5884)
!5909 = !DILocation(line: 1474, column: 34, scope: !5884)
!5910 = !DILocation(line: 1474, column: 39, scope: !5884)
!5911 = !DILocation(line: 1474, column: 10, scope: !5884)
!5912 = !DILocation(line: 1474, column: 8, scope: !5884)
!5913 = !DILocation(line: 1475, column: 14, scope: !5914)
!5914 = distinct !DILexicalBlock(scope: !5884, file: !3, line: 1475, column: 6)
!5915 = !DILocation(line: 1475, column: 6, scope: !5914)
!5916 = !DILocation(line: 1475, column: 21, scope: !5914)
!5917 = !DILocation(line: 1475, column: 6, scope: !5884)
!5918 = !DILocation(line: 1476, column: 3, scope: !5914)
!5919 = !DILocation(line: 1478, column: 21, scope: !5884)
!5920 = !DILocation(line: 1478, column: 26, scope: !5884)
!5921 = !DILocation(line: 1478, column: 36, scope: !5884)
!5922 = !DILocation(line: 1479, column: 5, scope: !5884)
!5923 = !DILocation(line: 1479, column: 12, scope: !5884)
!5924 = !DILocation(line: 1479, column: 17, scope: !5884)
!5925 = !DILocation(line: 1478, column: 2, scope: !5884)
!5926 = !DILocation(line: 1481, column: 2, scope: !5884)
!5927 = !DILocation(line: 1482, column: 1, scope: !5884)
!5928 = distinct !DISubprogram(name: "set_dma_ops", scope: !3847, file: !3847, line: 84, type: !5929, scopeLine: 86, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !239)
!5929 = !DISubroutineType(types: !5930)
!5930 = !{null, !206, !3844}
!5931 = !DILocalVariable(name: "dev", arg: 1, scope: !5928, file: !3847, line: 84, type: !206)
!5932 = !DILocation(line: 84, column: 47, scope: !5928)
!5933 = !DILocalVariable(name: "dma_ops", arg: 2, scope: !5928, file: !3847, line: 85, type: !3844)
!5934 = !DILocation(line: 85, column: 37, scope: !5928)
!5935 = !DILocation(line: 87, column: 17, scope: !5928)
!5936 = !DILocation(line: 87, column: 2, scope: !5928)
!5937 = !DILocation(line: 87, column: 7, scope: !5928)
!5938 = !DILocation(line: 87, column: 15, scope: !5928)
!5939 = !DILocation(line: 88, column: 1, scope: !5928)
!5940 = distinct !DISubprogram(name: "iort_dma_setup", scope: !5941, file: !5941, line: 50, type: !5942, scopeLine: 51, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !239)
!5941 = !DIFile(filename: "./include/linux/acpi_iort.h", directory: "/home/lizy2001/genbc/linux")
!5942 = !DISubroutineType(types: !5943)
!5943 = !{null, !206, !3949, !3949}
!5944 = !DILocalVariable(name: "dev", arg: 1, scope: !5940, file: !5941, line: 50, type: !206)
!5945 = !DILocation(line: 50, column: 50, scope: !5940)
!5946 = !DILocalVariable(name: "dma_addr", arg: 2, scope: !5940, file: !5941, line: 50, type: !3949)
!5947 = !DILocation(line: 50, column: 60, scope: !5940)
!5948 = !DILocalVariable(name: "size", arg: 3, scope: !5940, file: !5941, line: 51, type: !3949)
!5949 = !DILocation(line: 51, column: 12, scope: !5940)
!5950 = !DILocation(line: 51, column: 20, scope: !5940)
!5951 = distinct !DISubprogram(name: "iort_iommu_configure_id", scope: !5941, file: !5941, line: 52, type: !5952, scopeLine: 54, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !239)
!5952 = !DISubroutineType(types: !5953)
!5953 = !{!3508, !206, !3800}
!5954 = !DILocalVariable(name: "dev", arg: 1, scope: !5951, file: !5941, line: 53, type: !206)
!5955 = !DILocation(line: 53, column: 26, scope: !5951)
!5956 = !DILocalVariable(name: "id_in", arg: 2, scope: !5951, file: !5941, line: 53, type: !3800)
!5957 = !DILocation(line: 53, column: 42, scope: !5951)
!5958 = !DILocation(line: 54, column: 3, scope: !5951)
!5959 = distinct !DISubprogram(name: "PTR_ERR", scope: !5960, file: !5960, line: 29, type: !5961, scopeLine: 30, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !239)
!5960 = !DIFile(filename: "./include/linux/err.h", directory: "/home/lizy2001/genbc/linux")
!5961 = !DISubroutineType(types: !5962)
!5962 = !{!138, !2124}
!5963 = !DILocalVariable(name: "ptr", arg: 1, scope: !5959, file: !5960, line: 29, type: !2124)
!5964 = !DILocation(line: 29, column: 61, scope: !5959)
!5965 = !DILocation(line: 31, column: 16, scope: !5959)
!5966 = !DILocation(line: 31, column: 9, scope: !5959)
!5967 = !DILocation(line: 31, column: 2, scope: !5959)
!5968 = distinct !DISubprogram(name: "arch_setup_dma_ops", scope: !3847, file: !3847, line: 321, type: !5969, scopeLine: 323, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !239)
!5969 = !DISubroutineType(types: !5970)
!5970 = !{null, !206, !413, !413, !3508, !482}
!5971 = !DILocalVariable(name: "dev", arg: 1, scope: !5968, file: !3847, line: 321, type: !206)
!5972 = !DILocation(line: 321, column: 54, scope: !5968)
!5973 = !DILocalVariable(name: "dma_base", arg: 2, scope: !5968, file: !3847, line: 321, type: !413)
!5974 = !DILocation(line: 321, column: 63, scope: !5968)
!5975 = !DILocalVariable(name: "size", arg: 3, scope: !5968, file: !3847, line: 322, type: !413)
!5976 = !DILocation(line: 322, column: 7, scope: !5968)
!5977 = !DILocalVariable(name: "iommu", arg: 4, scope: !5968, file: !3847, line: 322, type: !3508)
!5978 = !DILocation(line: 322, column: 37, scope: !5968)
!5979 = !DILocalVariable(name: "coherent", arg: 5, scope: !5968, file: !3847, line: 322, type: !482)
!5980 = !DILocation(line: 322, column: 49, scope: !5968)
!5981 = !DILocation(line: 324, column: 1, scope: !5968)
!5982 = distinct !DISubprogram(name: "acpi_init_device_object", scope: !3, file: !3, line: 1585, type: !5983, scopeLine: 1587, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !239)
!5983 = !DISubroutineType(types: !5984)
!5984 = !{null, !4035, !4017, !251, !415}
!5985 = !DILocalVariable(name: "device", arg: 1, scope: !5982, file: !3, line: 1585, type: !4035)
!5986 = !DILocation(line: 1585, column: 50, scope: !5982)
!5987 = !DILocalVariable(name: "handle", arg: 2, scope: !5982, file: !3, line: 1585, type: !4017)
!5988 = !DILocation(line: 1585, column: 70, scope: !5982)
!5989 = !DILocalVariable(name: "type", arg: 3, scope: !5982, file: !3, line: 1586, type: !251)
!5990 = !DILocation(line: 1586, column: 13, scope: !5982)
!5991 = !DILocalVariable(name: "sta", arg: 4, scope: !5982, file: !3, line: 1586, type: !415)
!5992 = !DILocation(line: 1586, column: 38, scope: !5982)
!5993 = !DILocation(line: 1588, column: 18, scope: !5982)
!5994 = !DILocation(line: 1588, column: 26, scope: !5982)
!5995 = !DILocation(line: 1588, column: 30, scope: !5982)
!5996 = !DILocation(line: 1588, column: 2, scope: !5982)
!5997 = !DILocation(line: 1589, column: 24, scope: !5982)
!5998 = !DILocation(line: 1589, column: 2, scope: !5982)
!5999 = !DILocation(line: 1589, column: 10, scope: !5982)
!6000 = !DILocation(line: 1589, column: 22, scope: !5982)
!6001 = !DILocation(line: 1590, column: 19, scope: !5982)
!6002 = !DILocation(line: 1590, column: 2, scope: !5982)
!6003 = !DILocation(line: 1590, column: 10, scope: !5982)
!6004 = !DILocation(line: 1590, column: 17, scope: !5982)
!6005 = !DILocation(line: 1591, column: 39, scope: !5982)
!6006 = !DILocation(line: 1591, column: 19, scope: !5982)
!6007 = !DILocation(line: 1591, column: 2, scope: !5982)
!6008 = !DILocation(line: 1591, column: 10, scope: !5982)
!6009 = !DILocation(line: 1591, column: 17, scope: !5982)
!6010 = !DILocation(line: 1592, column: 2, scope: !5982)
!6011 = !DILocation(line: 1592, column: 10, scope: !5982)
!6012 = !DILocation(line: 1592, column: 17, scope: !5982)
!6013 = !DILocation(line: 1592, column: 21, scope: !5982)
!6014 = !DILocation(line: 1593, column: 25, scope: !5982)
!6015 = !DILocation(line: 1593, column: 33, scope: !5982)
!6016 = !DILocation(line: 1593, column: 2, scope: !5982)
!6017 = !DILocation(line: 1594, column: 24, scope: !5982)
!6018 = !DILocation(line: 1594, column: 2, scope: !5982)
!6019 = !DILocation(line: 1595, column: 19, scope: !5982)
!6020 = !DILocation(line: 1595, column: 28, scope: !5982)
!6021 = !DILocation(line: 1595, column: 36, scope: !5982)
!6022 = !DILocation(line: 1595, column: 41, scope: !5982)
!6023 = !DILocation(line: 1595, column: 2, scope: !5982)
!6024 = !DILocation(line: 1596, column: 23, scope: !5982)
!6025 = !DILocation(line: 1596, column: 2, scope: !5982)
!6026 = !DILocation(line: 1597, column: 21, scope: !5982)
!6027 = !DILocation(line: 1597, column: 2, scope: !5982)
!6028 = !DILocation(line: 1598, column: 2, scope: !5982)
!6029 = !DILocation(line: 1598, column: 10, scope: !5982)
!6030 = !DILocation(line: 1598, column: 16, scope: !5982)
!6031 = !DILocation(line: 1598, column: 29, scope: !5982)
!6032 = !DILocation(line: 1599, column: 2, scope: !5982)
!6033 = !DILocation(line: 1599, column: 10, scope: !5982)
!6034 = !DILocation(line: 1599, column: 16, scope: !5982)
!6035 = !DILocation(line: 1599, column: 28, scope: !5982)
!6036 = !DILocation(line: 1601, column: 37, scope: !5982)
!6037 = !DILocation(line: 1601, column: 3, scope: !5982)
!6038 = !DILocation(line: 1600, column: 2, scope: !5982)
!6039 = !DILocation(line: 1600, column: 10, scope: !5982)
!6040 = !DILocation(line: 1600, column: 16, scope: !5982)
!6041 = !DILocation(line: 1600, column: 38, scope: !5982)
!6042 = !DILocation(line: 1602, column: 31, scope: !5982)
!6043 = !DILocation(line: 1602, column: 2, scope: !5982)
!6044 = !DILocation(line: 1603, column: 21, scope: !5982)
!6045 = !DILocation(line: 1603, column: 29, scope: !5982)
!6046 = !DILocation(line: 1603, column: 2, scope: !5982)
!6047 = !DILocation(line: 1604, column: 27, scope: !5982)
!6048 = !DILocation(line: 1604, column: 35, scope: !5982)
!6049 = !DILocation(line: 1604, column: 2, scope: !5982)
!6050 = !DILocation(line: 1605, column: 22, scope: !5982)
!6051 = !DILocation(line: 1605, column: 2, scope: !5982)
!6052 = !DILocation(line: 1607, column: 2, scope: !5982)
!6053 = !DILocation(line: 1607, column: 10, scope: !5982)
!6054 = !DILocation(line: 1607, column: 20, scope: !5982)
!6055 = !DILocation(line: 1608, column: 1, scope: !5982)
!6056 = distinct !DISubprogram(name: "acpi_bus_get_parent", scope: !3, file: !3, line: 722, type: !4845, scopeLine: 723, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !239)
!6057 = !DILocalVariable(name: "handle", arg: 1, scope: !6056, file: !3, line: 722, type: !4017)
!6058 = !DILocation(line: 722, column: 60, scope: !6056)
!6059 = !DILocalVariable(name: "device", scope: !6056, file: !3, line: 724, type: !4035)
!6060 = !DILocation(line: 724, column: 22, scope: !6056)
!6061 = !DILocalVariable(name: "status", scope: !6056, file: !3, line: 725, type: !4358)
!6062 = !DILocation(line: 725, column: 14, scope: !6056)
!6063 = !DILocation(line: 732, column: 7, scope: !6064)
!6064 = distinct !DILexicalBlock(scope: !6056, file: !3, line: 732, column: 6)
!6065 = !DILocation(line: 732, column: 6, scope: !6056)
!6066 = !DILocation(line: 733, column: 10, scope: !6064)
!6067 = !DILocation(line: 733, column: 3, scope: !6064)
!6068 = !DILocation(line: 735, column: 2, scope: !6056)
!6069 = !DILocation(line: 736, column: 28, scope: !6070)
!6070 = distinct !DILexicalBlock(scope: !6056, file: !3, line: 735, column: 5)
!6071 = !DILocation(line: 736, column: 12, scope: !6070)
!6072 = !DILocation(line: 736, column: 10, scope: !6070)
!6073 = !DILocation(line: 737, column: 7, scope: !6074)
!6074 = distinct !DILexicalBlock(scope: !6070, file: !3, line: 737, column: 7)
!6075 = !DILocation(line: 737, column: 7, scope: !6070)
!6076 = !DILocation(line: 738, column: 11, scope: !6074)
!6077 = !DILocation(line: 738, column: 18, scope: !6074)
!6078 = !DILocation(line: 738, column: 44, scope: !6074)
!6079 = !DILocation(line: 738, column: 4, scope: !6074)
!6080 = !DILocation(line: 739, column: 2, scope: !6070)
!6081 = !DILocation(line: 739, column: 31, scope: !6056)
!6082 = !DILocation(line: 739, column: 11, scope: !6056)
!6083 = distinct !{!6083, !6068, !6084}
!6084 = !DILocation(line: 739, column: 47, scope: !6056)
!6085 = !DILocation(line: 740, column: 9, scope: !6056)
!6086 = !DILocation(line: 740, column: 2, scope: !6056)
!6087 = !DILocation(line: 741, column: 1, scope: !6056)
!6088 = distinct !DISubprogram(name: "acpi_set_device_status", scope: !175, file: !175, line: 451, type: !4278, scopeLine: 452, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !239)
!6089 = !DILocalVariable(name: "adev", arg: 1, scope: !6088, file: !175, line: 451, type: !4035)
!6090 = !DILocation(line: 451, column: 63, scope: !6088)
!6091 = !DILocalVariable(name: "sta", arg: 2, scope: !6088, file: !175, line: 451, type: !407)
!6092 = !DILocation(line: 451, column: 73, scope: !6088)
!6093 = !DILocation(line: 453, column: 28, scope: !6088)
!6094 = !DILocation(line: 453, column: 12, scope: !6088)
!6095 = !DILocation(line: 453, column: 18, scope: !6088)
!6096 = !DILocation(line: 453, column: 2, scope: !6088)
!6097 = !DILocation(line: 453, column: 26, scope: !6088)
!6098 = !DILocation(line: 454, column: 1, scope: !6088)
!6099 = distinct !DISubprogram(name: "acpi_device_get_busid", scope: !3, file: !3, line: 1010, type: !4252, scopeLine: 1011, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !239)
!6100 = !DILocalVariable(name: "device", arg: 1, scope: !6099, file: !3, line: 1010, type: !4035)
!6101 = !DILocation(line: 1010, column: 55, scope: !6099)
!6102 = !DILocalVariable(name: "bus_id", scope: !6099, file: !3, line: 1012, type: !6103)
!6103 = !DICompositeType(tag: DW_TAG_array_type, baseType: !215, size: 40, elements: !4173)
!6104 = !DILocation(line: 1012, column: 7, scope: !6099)
!6105 = !DILocalVariable(name: "buffer", scope: !6099, file: !3, line: 1013, type: !5442)
!6106 = !DILocation(line: 1013, column: 21, scope: !6099)
!6107 = !DILocation(line: 1013, column: 30, scope: !6099)
!6108 = !DILocation(line: 1013, column: 48, scope: !6099)
!6109 = !DILocalVariable(name: "i", scope: !6099, file: !3, line: 1014, type: !251)
!6110 = !DILocation(line: 1014, column: 6, scope: !6099)
!6111 = !DILocation(line: 1022, column: 6, scope: !6112)
!6112 = distinct !DILexicalBlock(scope: !6099, file: !3, line: 1022, column: 6)
!6113 = !DILocation(line: 1022, column: 6, scope: !6099)
!6114 = !DILocation(line: 1023, column: 10, scope: !6115)
!6115 = distinct !DILexicalBlock(scope: !6112, file: !3, line: 1022, column: 35)
!6116 = !DILocation(line: 1023, column: 18, scope: !6115)
!6117 = !DILocation(line: 1023, column: 22, scope: !6115)
!6118 = !DILocation(line: 1023, column: 3, scope: !6115)
!6119 = !DILocation(line: 1024, column: 3, scope: !6115)
!6120 = !DILocation(line: 1027, column: 10, scope: !6099)
!6121 = !DILocation(line: 1027, column: 18, scope: !6099)
!6122 = !DILocation(line: 1027, column: 2, scope: !6099)
!6123 = !DILocation(line: 1029, column: 10, scope: !6124)
!6124 = distinct !DILexicalBlock(scope: !6099, file: !3, line: 1027, column: 31)
!6125 = !DILocation(line: 1029, column: 18, scope: !6124)
!6126 = !DILocation(line: 1029, column: 22, scope: !6124)
!6127 = !DILocation(line: 1029, column: 3, scope: !6124)
!6128 = !DILocation(line: 1030, column: 3, scope: !6124)
!6129 = !DILocation(line: 1032, column: 10, scope: !6124)
!6130 = !DILocation(line: 1032, column: 18, scope: !6124)
!6131 = !DILocation(line: 1032, column: 22, scope: !6124)
!6132 = !DILocation(line: 1032, column: 3, scope: !6124)
!6133 = !DILocation(line: 1033, column: 3, scope: !6124)
!6134 = !DILocation(line: 1035, column: 10, scope: !6124)
!6135 = !DILocation(line: 1035, column: 18, scope: !6124)
!6136 = !DILocation(line: 1035, column: 22, scope: !6124)
!6137 = !DILocation(line: 1035, column: 3, scope: !6124)
!6138 = !DILocation(line: 1036, column: 3, scope: !6124)
!6139 = !DILocation(line: 1038, column: 17, scope: !6124)
!6140 = !DILocation(line: 1038, column: 25, scope: !6124)
!6141 = !DILocation(line: 1038, column: 3, scope: !6124)
!6142 = !DILocation(line: 1040, column: 10, scope: !6143)
!6143 = distinct !DILexicalBlock(scope: !6124, file: !3, line: 1040, column: 3)
!6144 = !DILocation(line: 1040, column: 8, scope: !6143)
!6145 = !DILocation(line: 1040, column: 15, scope: !6146)
!6146 = distinct !DILexicalBlock(scope: !6143, file: !3, line: 1040, column: 3)
!6147 = !DILocation(line: 1040, column: 17, scope: !6146)
!6148 = !DILocation(line: 1040, column: 3, scope: !6143)
!6149 = !DILocation(line: 1041, column: 15, scope: !6150)
!6150 = distinct !DILexicalBlock(scope: !6151, file: !3, line: 1041, column: 8)
!6151 = distinct !DILexicalBlock(scope: !6146, file: !3, line: 1040, column: 27)
!6152 = !DILocation(line: 1041, column: 8, scope: !6150)
!6153 = !DILocation(line: 1041, column: 18, scope: !6150)
!6154 = !DILocation(line: 1041, column: 8, scope: !6151)
!6155 = !DILocation(line: 1042, column: 12, scope: !6150)
!6156 = !DILocation(line: 1042, column: 5, scope: !6150)
!6157 = !DILocation(line: 1042, column: 15, scope: !6150)
!6158 = !DILocation(line: 1044, column: 5, scope: !6150)
!6159 = !DILocation(line: 1045, column: 3, scope: !6151)
!6160 = !DILocation(line: 1040, column: 23, scope: !6146)
!6161 = !DILocation(line: 1040, column: 3, scope: !6146)
!6162 = distinct !{!6162, !6148, !6163}
!6163 = !DILocation(line: 1045, column: 3, scope: !6143)
!6164 = !DILocation(line: 1046, column: 10, scope: !6124)
!6165 = !DILocation(line: 1046, column: 18, scope: !6124)
!6166 = !DILocation(line: 1046, column: 22, scope: !6124)
!6167 = !DILocation(line: 1046, column: 30, scope: !6124)
!6168 = !DILocation(line: 1046, column: 3, scope: !6124)
!6169 = !DILocation(line: 1047, column: 3, scope: !6124)
!6170 = !DILocation(line: 1049, column: 1, scope: !6099)
!6171 = distinct !DISubprogram(name: "acpi_set_pnp_ids", scope: !3, file: !3, line: 1238, type: !6172, scopeLine: 1240, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !239)
!6172 = !DISubroutineType(types: !6173)
!6173 = !{null, !4017, !5642, !251}
!6174 = !DILocalVariable(name: "handle", arg: 1, scope: !6171, file: !3, line: 1238, type: !4017)
!6175 = !DILocation(line: 1238, column: 42, scope: !6171)
!6176 = !DILocalVariable(name: "pnp", arg: 2, scope: !6171, file: !3, line: 1238, type: !5642)
!6177 = !DILocation(line: 1238, column: 74, scope: !6171)
!6178 = !DILocalVariable(name: "device_type", arg: 3, scope: !6171, file: !3, line: 1239, type: !251)
!6179 = !DILocation(line: 1239, column: 9, scope: !6171)
!6180 = !DILocalVariable(name: "status", scope: !6171, file: !3, line: 1241, type: !4358)
!6181 = !DILocation(line: 1241, column: 14, scope: !6171)
!6182 = !DILocalVariable(name: "info", scope: !6171, file: !3, line: 1242, type: !6183)
!6183 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6184, size: 64)
!6184 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "acpi_device_info", file: !4018, line: 1156, size: 768, elements: !6185)
!6185 = !{!6186, !6187, !6188, !6189, !6190, !6191, !6192, !6194, !6196, !6197, !6202, !6203, !6204}
!6186 = !DIDerivedType(tag: DW_TAG_member, name: "info_size", scope: !6184, file: !4018, line: 1157, baseType: !407, size: 32)
!6187 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !6184, file: !4018, line: 1158, baseType: !407, size: 32, offset: 32)
!6188 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !6184, file: !4018, line: 1159, baseType: !4101, size: 32, offset: 64)
!6189 = !DIDerivedType(tag: DW_TAG_member, name: "param_count", scope: !6184, file: !4018, line: 1160, baseType: !1348, size: 8, offset: 96)
!6190 = !DIDerivedType(tag: DW_TAG_member, name: "valid", scope: !6184, file: !4018, line: 1161, baseType: !855, size: 16, offset: 112)
!6191 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !6184, file: !4018, line: 1162, baseType: !1348, size: 8, offset: 128)
!6192 = !DIDerivedType(tag: DW_TAG_member, name: "highest_dstates", scope: !6184, file: !4018, line: 1163, baseType: !6193, size: 32, offset: 136)
!6193 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1348, size: 32, elements: !1151)
!6194 = !DIDerivedType(tag: DW_TAG_member, name: "lowest_dstates", scope: !6184, file: !4018, line: 1164, baseType: !6195, size: 40, offset: 168)
!6195 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1348, size: 40, elements: !4173)
!6196 = !DIDerivedType(tag: DW_TAG_member, name: "address", scope: !6184, file: !4018, line: 1165, baseType: !413, size: 64, offset: 256)
!6197 = !DIDerivedType(tag: DW_TAG_member, name: "hardware_id", scope: !6184, file: !4018, line: 1166, baseType: !6198, size: 128, offset: 320)
!6198 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "acpi_pnp_device_id", file: !4018, line: 1141, size: 128, elements: !6199)
!6199 = !{!6200, !6201}
!6200 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !6198, file: !4018, line: 1142, baseType: !407, size: 32)
!6201 = !DIDerivedType(tag: DW_TAG_member, name: "string", scope: !6198, file: !4018, line: 1143, baseType: !267, size: 64, offset: 64)
!6202 = !DIDerivedType(tag: DW_TAG_member, name: "unique_id", scope: !6184, file: !4018, line: 1167, baseType: !6198, size: 128, offset: 448)
!6203 = !DIDerivedType(tag: DW_TAG_member, name: "class_code", scope: !6184, file: !4018, line: 1168, baseType: !6198, size: 128, offset: 576)
!6204 = !DIDerivedType(tag: DW_TAG_member, name: "compatible_id_list", scope: !6184, file: !4018, line: 1169, baseType: !6205, size: 64, offset: 704)
!6205 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "acpi_pnp_device_id_list", file: !4018, line: 1146, size: 64, elements: !6206)
!6206 = !{!6207, !6208, !6209}
!6207 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !6205, file: !4018, line: 1147, baseType: !407, size: 32)
!6208 = !DIDerivedType(tag: DW_TAG_member, name: "list_size", scope: !6205, file: !4018, line: 1148, baseType: !407, size: 32, offset: 32)
!6209 = !DIDerivedType(tag: DW_TAG_member, name: "ids", scope: !6205, file: !4018, line: 1149, baseType: !6210, offset: 64)
!6210 = !DICompositeType(tag: DW_TAG_array_type, baseType: !6198, elements: !2328)
!6211 = !DILocation(line: 1242, column: 27, scope: !6171)
!6212 = !DILocalVariable(name: "cid_list", scope: !6171, file: !3, line: 1243, type: !6213)
!6213 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6205, size: 64)
!6214 = !DILocation(line: 1243, column: 34, scope: !6171)
!6215 = !DILocalVariable(name: "i", scope: !6171, file: !3, line: 1244, type: !251)
!6216 = !DILocation(line: 1244, column: 6, scope: !6171)
!6217 = !DILocation(line: 1246, column: 10, scope: !6171)
!6218 = !DILocation(line: 1246, column: 2, scope: !6171)
!6219 = !DILocation(line: 1248, column: 7, scope: !6220)
!6220 = distinct !DILexicalBlock(scope: !6221, file: !3, line: 1248, column: 7)
!6221 = distinct !DILexicalBlock(scope: !6171, file: !3, line: 1246, column: 23)
!6222 = !DILocation(line: 1248, column: 14, scope: !6220)
!6223 = !DILocation(line: 1248, column: 7, scope: !6221)
!6224 = !DILocation(line: 1249, column: 16, scope: !6225)
!6225 = distinct !DILexicalBlock(scope: !6220, file: !3, line: 1248, column: 35)
!6226 = !DILocation(line: 1249, column: 4, scope: !6225)
!6227 = !DILocation(line: 1250, column: 4, scope: !6225)
!6228 = !DILocation(line: 1253, column: 33, scope: !6221)
!6229 = !DILocation(line: 1253, column: 12, scope: !6221)
!6230 = !DILocation(line: 1253, column: 10, scope: !6221)
!6231 = !DILocation(line: 1254, column: 7, scope: !6232)
!6232 = distinct !DILexicalBlock(scope: !6221, file: !3, line: 1254, column: 7)
!6233 = !DILocation(line: 1254, column: 7, scope: !6221)
!6234 = !DILocation(line: 1255, column: 4, scope: !6235)
!6235 = distinct !DILexicalBlock(scope: !6232, file: !3, line: 1254, column: 29)
!6236 = !DILocation(line: 1257, column: 4, scope: !6235)
!6237 = !DILocation(line: 1260, column: 7, scope: !6238)
!6238 = distinct !DILexicalBlock(scope: !6221, file: !3, line: 1260, column: 7)
!6239 = !DILocation(line: 1260, column: 13, scope: !6238)
!6240 = !DILocation(line: 1260, column: 19, scope: !6238)
!6241 = !DILocation(line: 1260, column: 7, scope: !6221)
!6242 = !DILocation(line: 1261, column: 16, scope: !6243)
!6243 = distinct !DILexicalBlock(scope: !6238, file: !3, line: 1260, column: 37)
!6244 = !DILocation(line: 1261, column: 21, scope: !6243)
!6245 = !DILocation(line: 1261, column: 27, scope: !6243)
!6246 = !DILocation(line: 1261, column: 39, scope: !6243)
!6247 = !DILocation(line: 1261, column: 4, scope: !6243)
!6248 = !DILocation(line: 1262, column: 4, scope: !6243)
!6249 = !DILocation(line: 1262, column: 9, scope: !6243)
!6250 = !DILocation(line: 1262, column: 14, scope: !6243)
!6251 = !DILocation(line: 1262, column: 26, scope: !6243)
!6252 = !DILocation(line: 1263, column: 3, scope: !6243)
!6253 = !DILocation(line: 1264, column: 7, scope: !6254)
!6254 = distinct !DILexicalBlock(scope: !6221, file: !3, line: 1264, column: 7)
!6255 = !DILocation(line: 1264, column: 13, scope: !6254)
!6256 = !DILocation(line: 1264, column: 19, scope: !6254)
!6257 = !DILocation(line: 1264, column: 7, scope: !6221)
!6258 = !DILocation(line: 1265, column: 16, scope: !6259)
!6259 = distinct !DILexicalBlock(scope: !6254, file: !3, line: 1264, column: 37)
!6260 = !DILocation(line: 1265, column: 22, scope: !6259)
!6261 = !DILocation(line: 1265, column: 13, scope: !6259)
!6262 = !DILocation(line: 1266, column: 11, scope: !6263)
!6263 = distinct !DILexicalBlock(scope: !6259, file: !3, line: 1266, column: 4)
!6264 = !DILocation(line: 1266, column: 9, scope: !6263)
!6265 = !DILocation(line: 1266, column: 16, scope: !6266)
!6266 = distinct !DILexicalBlock(scope: !6263, file: !3, line: 1266, column: 4)
!6267 = !DILocation(line: 1266, column: 20, scope: !6266)
!6268 = !DILocation(line: 1266, column: 30, scope: !6266)
!6269 = !DILocation(line: 1266, column: 18, scope: !6266)
!6270 = !DILocation(line: 1266, column: 4, scope: !6263)
!6271 = !DILocation(line: 1267, column: 17, scope: !6266)
!6272 = !DILocation(line: 1267, column: 22, scope: !6266)
!6273 = !DILocation(line: 1267, column: 32, scope: !6266)
!6274 = !DILocation(line: 1267, column: 36, scope: !6266)
!6275 = !DILocation(line: 1267, column: 39, scope: !6266)
!6276 = !DILocation(line: 1267, column: 5, scope: !6266)
!6277 = !DILocation(line: 1266, column: 38, scope: !6266)
!6278 = !DILocation(line: 1266, column: 4, scope: !6266)
!6279 = distinct !{!6279, !6270, !6280}
!6280 = !DILocation(line: 1267, column: 45, scope: !6263)
!6281 = !DILocation(line: 1268, column: 3, scope: !6259)
!6282 = !DILocation(line: 1269, column: 7, scope: !6283)
!6283 = distinct !DILexicalBlock(scope: !6221, file: !3, line: 1269, column: 7)
!6284 = !DILocation(line: 1269, column: 13, scope: !6283)
!6285 = !DILocation(line: 1269, column: 19, scope: !6283)
!6286 = !DILocation(line: 1269, column: 7, scope: !6221)
!6287 = !DILocation(line: 1270, column: 23, scope: !6288)
!6288 = distinct !DILexicalBlock(scope: !6283, file: !3, line: 1269, column: 37)
!6289 = !DILocation(line: 1270, column: 29, scope: !6288)
!6290 = !DILocation(line: 1270, column: 4, scope: !6288)
!6291 = !DILocation(line: 1270, column: 9, scope: !6288)
!6292 = !DILocation(line: 1270, column: 21, scope: !6288)
!6293 = !DILocation(line: 1271, column: 4, scope: !6288)
!6294 = !DILocation(line: 1271, column: 9, scope: !6288)
!6295 = !DILocation(line: 1271, column: 14, scope: !6288)
!6296 = !DILocation(line: 1271, column: 26, scope: !6288)
!6297 = !DILocation(line: 1272, column: 3, scope: !6288)
!6298 = !DILocation(line: 1273, column: 7, scope: !6299)
!6299 = distinct !DILexicalBlock(scope: !6221, file: !3, line: 1273, column: 7)
!6300 = !DILocation(line: 1273, column: 13, scope: !6299)
!6301 = !DILocation(line: 1273, column: 19, scope: !6299)
!6302 = !DILocation(line: 1273, column: 7, scope: !6221)
!6303 = !DILocation(line: 1274, column: 29, scope: !6299)
!6304 = !DILocation(line: 1274, column: 35, scope: !6299)
!6305 = !DILocation(line: 1274, column: 45, scope: !6299)
!6306 = !DILocation(line: 1274, column: 21, scope: !6299)
!6307 = !DILocation(line: 1274, column: 4, scope: !6299)
!6308 = !DILocation(line: 1274, column: 9, scope: !6299)
!6309 = !DILocation(line: 1274, column: 19, scope: !6299)
!6310 = !DILocation(line: 1276, column: 7, scope: !6311)
!6311 = distinct !DILexicalBlock(scope: !6221, file: !3, line: 1276, column: 7)
!6312 = !DILocation(line: 1276, column: 13, scope: !6311)
!6313 = !DILocation(line: 1276, column: 19, scope: !6311)
!6314 = !DILocation(line: 1276, column: 7, scope: !6221)
!6315 = !DILocation(line: 1277, column: 16, scope: !6311)
!6316 = !DILocation(line: 1277, column: 21, scope: !6311)
!6317 = !DILocation(line: 1277, column: 27, scope: !6311)
!6318 = !DILocation(line: 1277, column: 38, scope: !6311)
!6319 = !DILocation(line: 1277, column: 4, scope: !6311)
!6320 = !DILocation(line: 1279, column: 9, scope: !6221)
!6321 = !DILocation(line: 1279, column: 3, scope: !6221)
!6322 = !DILocation(line: 1285, column: 28, scope: !6323)
!6323 = distinct !DILexicalBlock(scope: !6221, file: !3, line: 1285, column: 7)
!6324 = !DILocation(line: 1285, column: 7, scope: !6323)
!6325 = !DILocation(line: 1285, column: 7, scope: !6221)
!6326 = !DILocation(line: 1286, column: 16, scope: !6323)
!6327 = !DILocation(line: 1286, column: 4, scope: !6323)
!6328 = !DILocation(line: 1287, column: 27, scope: !6329)
!6329 = distinct !DILexicalBlock(scope: !6323, file: !3, line: 1287, column: 12)
!6330 = !DILocation(line: 1287, column: 12, scope: !6329)
!6331 = !DILocation(line: 1287, column: 12, scope: !6323)
!6332 = !DILocation(line: 1288, column: 16, scope: !6329)
!6333 = !DILocation(line: 1288, column: 4, scope: !6329)
!6334 = !DILocation(line: 1289, column: 28, scope: !6335)
!6335 = distinct !DILexicalBlock(scope: !6329, file: !3, line: 1289, column: 12)
!6336 = !DILocation(line: 1289, column: 12, scope: !6335)
!6337 = !DILocation(line: 1289, column: 12, scope: !6329)
!6338 = !DILocation(line: 1290, column: 16, scope: !6335)
!6339 = !DILocation(line: 1290, column: 4, scope: !6335)
!6340 = !DILocation(line: 1291, column: 33, scope: !6341)
!6341 = distinct !DILexicalBlock(scope: !6335, file: !3, line: 1291, column: 12)
!6342 = !DILocation(line: 1291, column: 12, scope: !6341)
!6343 = !DILocation(line: 1291, column: 12, scope: !6335)
!6344 = !DILocation(line: 1292, column: 16, scope: !6341)
!6345 = !DILocation(line: 1292, column: 4, scope: !6341)
!6346 = !DILocation(line: 1293, column: 24, scope: !6347)
!6347 = distinct !DILexicalBlock(scope: !6341, file: !3, line: 1293, column: 12)
!6348 = !DILocation(line: 1293, column: 29, scope: !6347)
!6349 = !DILocation(line: 1293, column: 12, scope: !6347)
!6350 = !DILocation(line: 1293, column: 34, scope: !6347)
!6351 = !DILocation(line: 1294, column: 31, scope: !6347)
!6352 = !DILocation(line: 1294, column: 5, scope: !6347)
!6353 = !DILocation(line: 1293, column: 12, scope: !6341)
!6354 = !DILocation(line: 1296, column: 16, scope: !6355)
!6355 = distinct !DILexicalBlock(scope: !6347, file: !3, line: 1294, column: 40)
!6356 = !DILocation(line: 1296, column: 4, scope: !6355)
!6357 = !DILocation(line: 1297, column: 11, scope: !6355)
!6358 = !DILocation(line: 1297, column: 16, scope: !6355)
!6359 = !DILocation(line: 1297, column: 4, scope: !6355)
!6360 = !DILocation(line: 1298, column: 11, scope: !6355)
!6361 = !DILocation(line: 1298, column: 16, scope: !6355)
!6362 = !DILocation(line: 1298, column: 4, scope: !6355)
!6363 = !DILocation(line: 1299, column: 3, scope: !6355)
!6364 = !DILocation(line: 1301, column: 3, scope: !6221)
!6365 = !DILocation(line: 1303, column: 15, scope: !6221)
!6366 = !DILocation(line: 1303, column: 3, scope: !6221)
!6367 = !DILocation(line: 1304, column: 3, scope: !6221)
!6368 = !DILocation(line: 1306, column: 15, scope: !6221)
!6369 = !DILocation(line: 1306, column: 3, scope: !6221)
!6370 = !DILocation(line: 1307, column: 3, scope: !6221)
!6371 = !DILocation(line: 1309, column: 15, scope: !6221)
!6372 = !DILocation(line: 1309, column: 3, scope: !6221)
!6373 = !DILocation(line: 1310, column: 3, scope: !6221)
!6374 = !DILocation(line: 1312, column: 15, scope: !6221)
!6375 = !DILocation(line: 1312, column: 3, scope: !6221)
!6376 = !DILocation(line: 1313, column: 3, scope: !6221)
!6377 = !DILocation(line: 1315, column: 15, scope: !6221)
!6378 = !DILocation(line: 1315, column: 3, scope: !6221)
!6379 = !DILocation(line: 1316, column: 3, scope: !6221)
!6380 = !DILocation(line: 1318, column: 15, scope: !6221)
!6381 = !DILocation(line: 1318, column: 3, scope: !6221)
!6382 = !DILocation(line: 1319, column: 3, scope: !6221)
!6383 = !DILocation(line: 1321, column: 1, scope: !6171)
!6384 = distinct !DISubprogram(name: "acpi_bus_get_flags", scope: !3, file: !3, line: 994, type: !4252, scopeLine: 995, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !239)
!6385 = !DILocalVariable(name: "device", arg: 1, scope: !6384, file: !3, line: 994, type: !4035)
!6386 = !DILocation(line: 994, column: 52, scope: !6384)
!6387 = !DILocation(line: 997, column: 22, scope: !6388)
!6388 = distinct !DILexicalBlock(scope: !6384, file: !3, line: 997, column: 6)
!6389 = !DILocation(line: 997, column: 30, scope: !6388)
!6390 = !DILocation(line: 997, column: 6, scope: !6388)
!6391 = !DILocation(line: 997, column: 6, scope: !6384)
!6392 = !DILocation(line: 998, column: 3, scope: !6388)
!6393 = !DILocation(line: 998, column: 11, scope: !6388)
!6394 = !DILocation(line: 998, column: 17, scope: !6388)
!6395 = !DILocation(line: 998, column: 32, scope: !6388)
!6396 = !DILocation(line: 1001, column: 22, scope: !6397)
!6397 = distinct !DILexicalBlock(scope: !6384, file: !3, line: 1001, column: 6)
!6398 = !DILocation(line: 1001, column: 30, scope: !6397)
!6399 = !DILocation(line: 1001, column: 6, scope: !6397)
!6400 = !DILocation(line: 1001, column: 6, scope: !6384)
!6401 = !DILocation(line: 1002, column: 3, scope: !6397)
!6402 = !DILocation(line: 1002, column: 11, scope: !6397)
!6403 = !DILocation(line: 1002, column: 17, scope: !6397)
!6404 = !DILocation(line: 1002, column: 27, scope: !6397)
!6405 = !DILocation(line: 1005, column: 22, scope: !6406)
!6406 = distinct !DILexicalBlock(scope: !6384, file: !3, line: 1005, column: 6)
!6407 = !DILocation(line: 1005, column: 30, scope: !6406)
!6408 = !DILocation(line: 1005, column: 6, scope: !6406)
!6409 = !DILocation(line: 1005, column: 46, scope: !6406)
!6410 = !DILocation(line: 1006, column: 22, scope: !6406)
!6411 = !DILocation(line: 1006, column: 30, scope: !6406)
!6412 = !DILocation(line: 1006, column: 6, scope: !6406)
!6413 = !DILocation(line: 1005, column: 6, scope: !6384)
!6414 = !DILocation(line: 1007, column: 3, scope: !6406)
!6415 = !DILocation(line: 1007, column: 11, scope: !6406)
!6416 = !DILocation(line: 1007, column: 17, scope: !6406)
!6417 = !DILocation(line: 1007, column: 27, scope: !6406)
!6418 = !DILocation(line: 1008, column: 1, scope: !6384)
!6419 = !DILocalVariable(name: "device", arg: 1, scope: !4443, file: !3, line: 1542, type: !4035)
!6420 = !DILocation(line: 1542, column: 67, scope: !4443)
!6421 = !DILocalVariable(name: "resource_list", scope: !4443, file: !3, line: 1544, type: !199)
!6422 = !DILocation(line: 1544, column: 19, scope: !4443)
!6423 = !DILocalVariable(name: "is_serial_bus_slave", scope: !4443, file: !3, line: 1545, type: !482)
!6424 = !DILocation(line: 1545, column: 7, scope: !4443)
!6425 = !DILocation(line: 1562, column: 32, scope: !6426)
!6426 = distinct !DILexicalBlock(scope: !4443, file: !3, line: 1562, column: 6)
!6427 = !DILocation(line: 1562, column: 6, scope: !6426)
!6428 = !DILocation(line: 1562, column: 6, scope: !4443)
!6429 = !DILocation(line: 1563, column: 3, scope: !6426)
!6430 = !DILocation(line: 1566, column: 6, scope: !6431)
!6431 = distinct !DILexicalBlock(scope: !4443, file: !3, line: 1566, column: 6)
!6432 = !DILocation(line: 1566, column: 24, scope: !6431)
!6433 = !DILocation(line: 1567, column: 32, scope: !6431)
!6434 = !DILocation(line: 1567, column: 40, scope: !6431)
!6435 = !DILocation(line: 1567, column: 7, scope: !6431)
!6436 = !DILocation(line: 1567, column: 65, scope: !6431)
!6437 = !DILocation(line: 1568, column: 32, scope: !6431)
!6438 = !DILocation(line: 1568, column: 40, scope: !6431)
!6439 = !DILocation(line: 1568, column: 7, scope: !6431)
!6440 = !DILocation(line: 1568, column: 62, scope: !6431)
!6441 = !DILocation(line: 1569, column: 32, scope: !6431)
!6442 = !DILocation(line: 1569, column: 40, scope: !6431)
!6443 = !DILocation(line: 1569, column: 7, scope: !6431)
!6444 = !DILocation(line: 1566, column: 6, scope: !4443)
!6445 = !DILocation(line: 1570, column: 3, scope: !6431)
!6446 = !DILocation(line: 1573, column: 29, scope: !6447)
!6447 = distinct !DILexicalBlock(scope: !4443, file: !3, line: 1573, column: 6)
!6448 = !DILocation(line: 1573, column: 7, scope: !6447)
!6449 = !DILocation(line: 1573, column: 6, scope: !4443)
!6450 = !DILocation(line: 1574, column: 3, scope: !6447)
!6451 = !DILocation(line: 1576, column: 2, scope: !4443)
!6452 = !DILocation(line: 1577, column: 25, scope: !4443)
!6453 = !DILocation(line: 1577, column: 2, scope: !4443)
!6454 = !DILocation(line: 1580, column: 2, scope: !4443)
!6455 = !DILocation(line: 1582, column: 9, scope: !4443)
!6456 = !DILocation(line: 1582, column: 2, scope: !4443)
!6457 = !DILocation(line: 1583, column: 1, scope: !4443)
!6458 = distinct !DISubprogram(name: "acpi_device_clear_enumerated", scope: !170, file: !170, line: 669, type: !4252, scopeLine: 670, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !239)
!6459 = !DILocalVariable(name: "adev", arg: 1, scope: !6458, file: !170, line: 669, type: !4035)
!6460 = !DILocation(line: 669, column: 69, scope: !6458)
!6461 = !DILocation(line: 671, column: 2, scope: !6458)
!6462 = !DILocation(line: 671, column: 8, scope: !6458)
!6463 = !DILocation(line: 671, column: 14, scope: !6458)
!6464 = !DILocation(line: 671, column: 22, scope: !6458)
!6465 = !DILocation(line: 672, column: 1, scope: !6458)
!6466 = distinct !DISubprogram(name: "dev_set_uevent_suppress", scope: !73, file: !73, line: 675, type: !6467, scopeLine: 676, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !239)
!6467 = !DISubroutineType(types: !6468)
!6468 = !{null, !206, !251}
!6469 = !DILocalVariable(name: "dev", arg: 1, scope: !6466, file: !73, line: 675, type: !206)
!6470 = !DILocation(line: 675, column: 59, scope: !6466)
!6471 = !DILocalVariable(name: "val", arg: 2, scope: !6466, file: !73, line: 675, type: !251)
!6472 = !DILocation(line: 675, column: 68, scope: !6466)
!6473 = !DILocation(line: 677, column: 30, scope: !6466)
!6474 = !DILocation(line: 677, column: 2, scope: !6466)
!6475 = !DILocation(line: 677, column: 7, scope: !6466)
!6476 = !DILocation(line: 677, column: 12, scope: !6466)
!6477 = !DILocation(line: 677, column: 28, scope: !6466)
!6478 = !DILocation(line: 678, column: 1, scope: !6466)
!6479 = distinct !DISubprogram(name: "acpi_init_coherency", scope: !3, file: !3, line: 1485, type: !4252, scopeLine: 1486, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !239)
!6480 = !DILocalVariable(name: "adev", arg: 1, scope: !6479, file: !3, line: 1485, type: !4035)
!6481 = !DILocation(line: 1485, column: 53, scope: !6479)
!6482 = !DILocalVariable(name: "cca", scope: !6479, file: !3, line: 1487, type: !415)
!6483 = !DILocation(line: 1487, column: 21, scope: !6479)
!6484 = !DILocalVariable(name: "status", scope: !6479, file: !3, line: 1488, type: !4358)
!6485 = !DILocation(line: 1488, column: 14, scope: !6479)
!6486 = !DILocalVariable(name: "parent", scope: !6479, file: !3, line: 1489, type: !4035)
!6487 = !DILocation(line: 1489, column: 22, scope: !6479)
!6488 = !DILocation(line: 1489, column: 31, scope: !6479)
!6489 = !DILocation(line: 1489, column: 37, scope: !6479)
!6490 = !DILocation(line: 1491, column: 6, scope: !6491)
!6491 = distinct !DILexicalBlock(scope: !6479, file: !3, line: 1491, column: 6)
!6492 = !DILocation(line: 1491, column: 13, scope: !6491)
!6493 = !DILocation(line: 1491, column: 16, scope: !6491)
!6494 = !DILocation(line: 1491, column: 24, scope: !6491)
!6495 = !DILocation(line: 1491, column: 30, scope: !6491)
!6496 = !DILocation(line: 1491, column: 6, scope: !6479)
!6497 = !DILocation(line: 1496, column: 3, scope: !6498)
!6498 = distinct !DILexicalBlock(scope: !6491, file: !3, line: 1491, column: 40)
!6499 = !DILocation(line: 1496, column: 9, scope: !6498)
!6500 = !DILocation(line: 1496, column: 15, scope: !6498)
!6501 = !DILocation(line: 1496, column: 24, scope: !6498)
!6502 = !DILocation(line: 1497, column: 9, scope: !6498)
!6503 = !DILocation(line: 1497, column: 17, scope: !6498)
!6504 = !DILocation(line: 1497, column: 23, scope: !6498)
!6505 = !DILocation(line: 1497, column: 7, scope: !6498)
!6506 = !DILocation(line: 1498, column: 2, scope: !6498)
!6507 = !DILocation(line: 1499, column: 34, scope: !6508)
!6508 = distinct !DILexicalBlock(scope: !6491, file: !3, line: 1498, column: 9)
!6509 = !DILocation(line: 1499, column: 40, scope: !6508)
!6510 = !DILocation(line: 1499, column: 12, scope: !6508)
!6511 = !DILocation(line: 1499, column: 10, scope: !6508)
!6512 = !DILocation(line: 1501, column: 7, scope: !6513)
!6513 = distinct !DILexicalBlock(scope: !6508, file: !3, line: 1501, column: 7)
!6514 = !DILocation(line: 1501, column: 7, scope: !6508)
!6515 = !DILocation(line: 1502, column: 4, scope: !6513)
!6516 = !DILocation(line: 1502, column: 10, scope: !6513)
!6517 = !DILocation(line: 1502, column: 16, scope: !6513)
!6518 = !DILocation(line: 1502, column: 25, scope: !6513)
!6519 = !DILocation(line: 1509, column: 8, scope: !6520)
!6520 = distinct !DILexicalBlock(scope: !6513, file: !3, line: 1503, column: 12)
!6521 = !DILocation(line: 1515, column: 29, scope: !6479)
!6522 = !DILocation(line: 1515, column: 2, scope: !6479)
!6523 = !DILocation(line: 1515, column: 8, scope: !6479)
!6524 = !DILocation(line: 1515, column: 14, scope: !6479)
!6525 = !DILocation(line: 1515, column: 27, scope: !6479)
!6526 = !DILocation(line: 1516, column: 1, scope: !6479)
!6527 = distinct !DISubprogram(name: "acpi_device_add_finalize", scope: !3, file: !3, line: 1610, type: !4252, scopeLine: 1611, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !239)
!6528 = !DILocalVariable(name: "device", arg: 1, scope: !6527, file: !3, line: 1610, type: !4035)
!6529 = !DILocation(line: 1610, column: 51, scope: !6527)
!6530 = !DILocation(line: 1612, column: 27, scope: !6527)
!6531 = !DILocation(line: 1612, column: 35, scope: !6527)
!6532 = !DILocation(line: 1612, column: 2, scope: !6527)
!6533 = !DILocation(line: 1613, column: 18, scope: !6527)
!6534 = !DILocation(line: 1613, column: 26, scope: !6527)
!6535 = !DILocation(line: 1613, column: 30, scope: !6527)
!6536 = !DILocation(line: 1613, column: 2, scope: !6527)
!6537 = !DILocation(line: 1614, column: 1, scope: !6527)
!6538 = distinct !DISubprogram(name: "acpi_device_is_present", scope: !3, file: !3, line: 1739, type: !6539, scopeLine: 1740, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !239)
!6539 = !DISubroutineType(types: !6540)
!6540 = !{!482, !6541}
!6541 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6542, size: 64)
!6542 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4036)
!6543 = !DILocalVariable(name: "adev", arg: 1, scope: !6538, file: !3, line: 1739, type: !6541)
!6544 = !DILocation(line: 1739, column: 55, scope: !6538)
!6545 = !DILocation(line: 1741, column: 9, scope: !6538)
!6546 = !DILocation(line: 1741, column: 15, scope: !6538)
!6547 = !DILocation(line: 1741, column: 22, scope: !6538)
!6548 = !DILocation(line: 1741, column: 30, scope: !6538)
!6549 = !DILocation(line: 1741, column: 33, scope: !6538)
!6550 = !DILocation(line: 1741, column: 39, scope: !6538)
!6551 = !DILocation(line: 1741, column: 46, scope: !6538)
!6552 = !DILocation(line: 1741, column: 2, scope: !6538)
!6553 = distinct !DISubprogram(name: "acpi_scan_hotplug_enabled", scope: !3, file: !3, line: 1776, type: !6554, scopeLine: 1777, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !239)
!6554 = !DISubroutineType(types: !6555)
!6555 = !{null, !6556, !482}
!6556 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4257, size: 64)
!6557 = !DILocalVariable(name: "hotplug", arg: 1, scope: !6553, file: !3, line: 1776, type: !6556)
!6558 = !DILocation(line: 1776, column: 61, scope: !6553)
!6559 = !DILocalVariable(name: "val", arg: 2, scope: !6553, file: !3, line: 1776, type: !482)
!6560 = !DILocation(line: 1776, column: 75, scope: !6553)
!6561 = !DILocation(line: 1778, column: 8, scope: !6562)
!6562 = distinct !DILexicalBlock(scope: !6553, file: !3, line: 1778, column: 6)
!6563 = !DILocation(line: 1778, column: 17, scope: !6562)
!6564 = !DILocation(line: 1778, column: 7, scope: !6562)
!6565 = !DILocation(line: 1778, column: 6, scope: !6562)
!6566 = !DILocation(line: 1778, column: 30, scope: !6562)
!6567 = !DILocation(line: 1778, column: 29, scope: !6562)
!6568 = !DILocation(line: 1778, column: 28, scope: !6562)
!6569 = !DILocation(line: 1778, column: 25, scope: !6562)
!6570 = !DILocation(line: 1778, column: 6, scope: !6553)
!6571 = !DILocation(line: 1779, column: 3, scope: !6562)
!6572 = !DILocation(line: 1781, column: 2, scope: !6553)
!6573 = !DILocation(line: 1783, column: 21, scope: !6553)
!6574 = !DILocation(line: 1783, column: 2, scope: !6553)
!6575 = !DILocation(line: 1783, column: 11, scope: !6553)
!6576 = !DILocation(line: 1783, column: 19, scope: !6553)
!6577 = !DILocation(line: 1785, column: 2, scope: !6553)
!6578 = !DILocation(line: 1786, column: 1, scope: !6553)
!6579 = distinct !DISubprogram(name: "acpi_walk_dep_device_list", scope: !3, file: !3, line: 2022, type: !6580, scopeLine: 2023, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !239)
!6580 = !DISubroutineType(types: !6581)
!6581 = !{null, !4017}
!6582 = !DILocalVariable(name: "handle", arg: 1, scope: !6579, file: !3, line: 2022, type: !4017)
!6583 = !DILocation(line: 2022, column: 44, scope: !6579)
!6584 = !DILocalVariable(name: "dep", scope: !6579, file: !3, line: 2024, type: !4335)
!6585 = !DILocation(line: 2024, column: 24, scope: !6579)
!6586 = !DILocalVariable(name: "tmp", scope: !6579, file: !3, line: 2024, type: !4335)
!6587 = !DILocation(line: 2024, column: 30, scope: !6579)
!6588 = !DILocalVariable(name: "adev", scope: !6579, file: !3, line: 2025, type: !4035)
!6589 = !DILocation(line: 2025, column: 22, scope: !6579)
!6590 = !DILocation(line: 2027, column: 2, scope: !6579)
!6591 = !DILocalVariable(name: "__mptr", scope: !6592, file: !3, line: 2028, type: !193)
!6592 = distinct !DILexicalBlock(scope: !6593, file: !3, line: 2028, column: 2)
!6593 = distinct !DILexicalBlock(scope: !6579, file: !3, line: 2028, column: 2)
!6594 = !DILocation(line: 2028, column: 2, scope: !6592)
!6595 = !DILocation(line: 2028, column: 2, scope: !6596)
!6596 = distinct !DILexicalBlock(scope: !6592, file: !3, line: 2028, column: 2)
!6597 = !DILocation(line: 2028, column: 2, scope: !6593)
!6598 = !DILocalVariable(name: "__mptr", scope: !6599, file: !3, line: 2028, type: !193)
!6599 = distinct !DILexicalBlock(scope: !6593, file: !3, line: 2028, column: 2)
!6600 = !DILocation(line: 2028, column: 2, scope: !6599)
!6601 = !DILocation(line: 2028, column: 2, scope: !6602)
!6602 = distinct !DILexicalBlock(scope: !6599, file: !3, line: 2028, column: 2)
!6603 = !DILocation(line: 2028, column: 2, scope: !6604)
!6604 = distinct !DILexicalBlock(scope: !6593, file: !3, line: 2028, column: 2)
!6605 = !DILocation(line: 2029, column: 7, scope: !6606)
!6606 = distinct !DILexicalBlock(scope: !6607, file: !3, line: 2029, column: 7)
!6607 = distinct !DILexicalBlock(scope: !6604, file: !3, line: 2028, column: 59)
!6608 = !DILocation(line: 2029, column: 12, scope: !6606)
!6609 = !DILocation(line: 2029, column: 22, scope: !6606)
!6610 = !DILocation(line: 2029, column: 19, scope: !6606)
!6611 = !DILocation(line: 2029, column: 7, scope: !6607)
!6612 = !DILocation(line: 2030, column: 24, scope: !6613)
!6613 = distinct !DILexicalBlock(scope: !6606, file: !3, line: 2029, column: 30)
!6614 = !DILocation(line: 2030, column: 29, scope: !6613)
!6615 = !DILocation(line: 2030, column: 4, scope: !6613)
!6616 = !DILocation(line: 2031, column: 9, scope: !6617)
!6617 = distinct !DILexicalBlock(scope: !6613, file: !3, line: 2031, column: 8)
!6618 = !DILocation(line: 2031, column: 8, scope: !6613)
!6619 = !DILocation(line: 2032, column: 5, scope: !6617)
!6620 = !DILocation(line: 2034, column: 4, scope: !6613)
!6621 = !DILocation(line: 2034, column: 10, scope: !6613)
!6622 = !DILocation(line: 2034, column: 19, scope: !6613)
!6623 = !DILocation(line: 2035, column: 9, scope: !6624)
!6624 = distinct !DILexicalBlock(scope: !6613, file: !3, line: 2035, column: 8)
!6625 = !DILocation(line: 2035, column: 15, scope: !6624)
!6626 = !DILocation(line: 2035, column: 8, scope: !6613)
!6627 = !DILocation(line: 2036, column: 21, scope: !6624)
!6628 = !DILocation(line: 2036, column: 5, scope: !6624)
!6629 = !DILocation(line: 2037, column: 14, scope: !6613)
!6630 = !DILocation(line: 2037, column: 19, scope: !6613)
!6631 = !DILocation(line: 2037, column: 4, scope: !6613)
!6632 = !DILocation(line: 2038, column: 10, scope: !6613)
!6633 = !DILocation(line: 2038, column: 4, scope: !6613)
!6634 = !DILocation(line: 2039, column: 3, scope: !6613)
!6635 = !DILocation(line: 2040, column: 2, scope: !6607)
!6636 = !DILocalVariable(name: "__mptr", scope: !6637, file: !3, line: 2028, type: !193)
!6637 = distinct !DILexicalBlock(scope: !6604, file: !3, line: 2028, column: 2)
!6638 = !DILocation(line: 2028, column: 2, scope: !6637)
!6639 = !DILocation(line: 2028, column: 2, scope: !6640)
!6640 = distinct !DILexicalBlock(scope: !6637, file: !3, line: 2028, column: 2)
!6641 = distinct !{!6641, !6597, !6642}
!6642 = !DILocation(line: 2040, column: 2, scope: !6593)
!6643 = !DILocation(line: 2041, column: 2, scope: !6579)
!6644 = !DILocation(line: 2042, column: 1, scope: !6579)
!6645 = distinct !DISubprogram(name: "acpi_bus_attach", scope: !3, file: !3, line: 1964, type: !4252, scopeLine: 1965, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !239)
!6646 = !DILocalVariable(name: "device", arg: 1, scope: !6645, file: !3, line: 1964, type: !4035)
!6647 = !DILocation(line: 1964, column: 49, scope: !6645)
!6648 = !DILocalVariable(name: "child", scope: !6645, file: !3, line: 1966, type: !4035)
!6649 = !DILocation(line: 1966, column: 22, scope: !6645)
!6650 = !DILocalVariable(name: "ejd", scope: !6645, file: !3, line: 1967, type: !4017)
!6651 = !DILocation(line: 1967, column: 14, scope: !6645)
!6652 = !DILocalVariable(name: "ret", scope: !6645, file: !3, line: 1968, type: !251)
!6653 = !DILocation(line: 1968, column: 6, scope: !6645)
!6654 = !DILocation(line: 1970, column: 6, scope: !6655)
!6655 = distinct !DILexicalBlock(scope: !6645, file: !3, line: 1970, column: 6)
!6656 = !DILocation(line: 1970, column: 6, scope: !6645)
!6657 = !DILocation(line: 1971, column: 34, scope: !6655)
!6658 = !DILocation(line: 1971, column: 42, scope: !6655)
!6659 = !DILocation(line: 1971, column: 3, scope: !6655)
!6660 = !DILocation(line: 1973, column: 22, scope: !6645)
!6661 = !DILocation(line: 1973, column: 2, scope: !6645)
!6662 = !DILocation(line: 1975, column: 30, scope: !6663)
!6663 = distinct !DILexicalBlock(scope: !6645, file: !3, line: 1975, column: 6)
!6664 = !DILocation(line: 1975, column: 7, scope: !6663)
!6665 = !DILocation(line: 1975, column: 6, scope: !6645)
!6666 = !DILocation(line: 1976, column: 3, scope: !6667)
!6667 = distinct !DILexicalBlock(scope: !6663, file: !3, line: 1975, column: 39)
!6668 = !DILocation(line: 1976, column: 11, scope: !6667)
!6669 = !DILocation(line: 1976, column: 17, scope: !6667)
!6670 = !DILocation(line: 1976, column: 29, scope: !6667)
!6671 = !DILocation(line: 1977, column: 32, scope: !6667)
!6672 = !DILocation(line: 1977, column: 3, scope: !6667)
!6673 = !DILocation(line: 1978, column: 3, scope: !6667)
!6674 = !DILocation(line: 1978, column: 11, scope: !6667)
!6675 = !DILocation(line: 1978, column: 17, scope: !6667)
!6676 = !DILocation(line: 1978, column: 34, scope: !6667)
!6677 = !DILocation(line: 1979, column: 3, scope: !6667)
!6678 = !DILocation(line: 1981, column: 6, scope: !6679)
!6679 = distinct !DILexicalBlock(scope: !6645, file: !3, line: 1981, column: 6)
!6680 = !DILocation(line: 1981, column: 14, scope: !6679)
!6681 = !DILocation(line: 1981, column: 6, scope: !6645)
!6682 = !DILocation(line: 1982, column: 3, scope: !6679)
!6683 = !DILocation(line: 1984, column: 7, scope: !6684)
!6684 = distinct !DILexicalBlock(scope: !6645, file: !3, line: 1984, column: 6)
!6685 = !DILocation(line: 1984, column: 15, scope: !6684)
!6686 = !DILocation(line: 1984, column: 21, scope: !6684)
!6687 = !DILocation(line: 1984, column: 6, scope: !6645)
!6688 = !DILocation(line: 1986, column: 4, scope: !6689)
!6689 = distinct !DILexicalBlock(scope: !6684, file: !3, line: 1984, column: 34)
!6690 = !DILocation(line: 1986, column: 12, scope: !6689)
!6691 = !DILocation(line: 1986, column: 18, scope: !6689)
!6692 = !DILocation(line: 1986, column: 40, scope: !6689)
!6693 = !DILocation(line: 1986, column: 46, scope: !6689)
!6694 = !DILocation(line: 1985, column: 3, scope: !6689)
!6695 = !DILocation(line: 1985, column: 11, scope: !6689)
!6696 = !DILocation(line: 1985, column: 17, scope: !6689)
!6697 = !DILocation(line: 1985, column: 34, scope: !6689)
!6698 = !DILocation(line: 1987, column: 27, scope: !6699)
!6699 = distinct !DILexicalBlock(scope: !6689, file: !3, line: 1987, column: 7)
!6700 = !DILocation(line: 1987, column: 7, scope: !6699)
!6701 = !DILocation(line: 1987, column: 7, scope: !6689)
!6702 = !DILocation(line: 1988, column: 4, scope: !6699)
!6703 = !DILocation(line: 1988, column: 12, scope: !6699)
!6704 = !DILocation(line: 1988, column: 18, scope: !6699)
!6705 = !DILocation(line: 1988, column: 35, scope: !6699)
!6706 = !DILocation(line: 1990, column: 3, scope: !6689)
!6707 = !DILocation(line: 1990, column: 11, scope: !6689)
!6708 = !DILocation(line: 1990, column: 17, scope: !6689)
!6709 = !DILocation(line: 1990, column: 29, scope: !6689)
!6710 = !DILocation(line: 1991, column: 2, scope: !6689)
!6711 = !DILocation(line: 1991, column: 13, scope: !6712)
!6712 = distinct !DILexicalBlock(scope: !6684, file: !3, line: 1991, column: 13)
!6713 = !DILocation(line: 1991, column: 21, scope: !6712)
!6714 = !DILocation(line: 1991, column: 27, scope: !6712)
!6715 = !DILocation(line: 1991, column: 13, scope: !6684)
!6716 = !DILocation(line: 1992, column: 3, scope: !6717)
!6717 = distinct !DILexicalBlock(scope: !6712, file: !3, line: 1991, column: 36)
!6718 = !DILocation(line: 1995, column: 33, scope: !6645)
!6719 = !DILocation(line: 1995, column: 8, scope: !6645)
!6720 = !DILocation(line: 1995, column: 6, scope: !6645)
!6721 = !DILocation(line: 1996, column: 6, scope: !6722)
!6722 = distinct !DILexicalBlock(scope: !6645, file: !3, line: 1996, column: 6)
!6723 = !DILocation(line: 1996, column: 10, scope: !6722)
!6724 = !DILocation(line: 1996, column: 6, scope: !6645)
!6725 = !DILocation(line: 1997, column: 3, scope: !6722)
!6726 = !DILocation(line: 1999, column: 2, scope: !6645)
!6727 = !DILocation(line: 1999, column: 10, scope: !6645)
!6728 = !DILocation(line: 1999, column: 16, scope: !6645)
!6729 = !DILocation(line: 1999, column: 29, scope: !6645)
!6730 = !DILocation(line: 2000, column: 6, scope: !6731)
!6731 = distinct !DILexicalBlock(scope: !6645, file: !3, line: 2000, column: 6)
!6732 = !DILocation(line: 2000, column: 10, scope: !6731)
!6733 = !DILocation(line: 2000, column: 14, scope: !6731)
!6734 = !DILocation(line: 2000, column: 18, scope: !6731)
!6735 = !DILocation(line: 2000, column: 26, scope: !6731)
!6736 = !DILocation(line: 2000, column: 32, scope: !6731)
!6737 = !DILocation(line: 2000, column: 6, scope: !6645)
!6738 = !DILocation(line: 2001, column: 30, scope: !6739)
!6739 = distinct !DILexicalBlock(scope: !6731, file: !3, line: 2000, column: 55)
!6740 = !DILocation(line: 2001, column: 3, scope: !6739)
!6741 = !DILocation(line: 2002, column: 3, scope: !6739)
!6742 = !DILocation(line: 2005, column: 23, scope: !6645)
!6743 = !DILocation(line: 2005, column: 31, scope: !6645)
!6744 = !DILocation(line: 2005, column: 8, scope: !6645)
!6745 = !DILocation(line: 2005, column: 6, scope: !6645)
!6746 = !DILocation(line: 2006, column: 6, scope: !6747)
!6747 = distinct !DILexicalBlock(scope: !6645, file: !3, line: 2006, column: 6)
!6748 = !DILocation(line: 2006, column: 10, scope: !6747)
!6749 = !DILocation(line: 2006, column: 6, scope: !6645)
!6750 = !DILocation(line: 2007, column: 3, scope: !6747)
!6751 = !DILocation(line: 2009, column: 6, scope: !6752)
!6752 = distinct !DILexicalBlock(scope: !6645, file: !3, line: 2009, column: 6)
!6753 = !DILocation(line: 2009, column: 14, scope: !6752)
!6754 = !DILocation(line: 2009, column: 18, scope: !6752)
!6755 = !DILocation(line: 2009, column: 23, scope: !6752)
!6756 = !DILocation(line: 2009, column: 35, scope: !6752)
!6757 = !DILocation(line: 2009, column: 38, scope: !6752)
!6758 = !DILocation(line: 2009, column: 46, scope: !6752)
!6759 = !DILocation(line: 2009, column: 52, scope: !6752)
!6760 = !DILocation(line: 2009, column: 6, scope: !6645)
!6761 = !DILocation(line: 2010, column: 28, scope: !6752)
!6762 = !DILocation(line: 2010, column: 3, scope: !6752)
!6763 = !DILocation(line: 2012, column: 30, scope: !6752)
!6764 = !DILocation(line: 2012, column: 3, scope: !6752)
!6765 = !DILabel(scope: !6645, name: "ok", file: !3, line: 2014)
!6766 = !DILocation(line: 2014, column: 2, scope: !6645)
!6767 = !DILocalVariable(name: "__mptr", scope: !6768, file: !3, line: 2015, type: !193)
!6768 = distinct !DILexicalBlock(scope: !6769, file: !3, line: 2015, column: 2)
!6769 = distinct !DILexicalBlock(scope: !6645, file: !3, line: 2015, column: 2)
!6770 = !DILocation(line: 2015, column: 2, scope: !6768)
!6771 = !DILocation(line: 2015, column: 2, scope: !6772)
!6772 = distinct !DILexicalBlock(scope: !6768, file: !3, line: 2015, column: 2)
!6773 = !DILocation(line: 2015, column: 2, scope: !6769)
!6774 = !DILocation(line: 2015, column: 2, scope: !6775)
!6775 = distinct !DILexicalBlock(scope: !6769, file: !3, line: 2015, column: 2)
!6776 = !DILocation(line: 2016, column: 19, scope: !6775)
!6777 = !DILocation(line: 2016, column: 3, scope: !6775)
!6778 = !DILocalVariable(name: "__mptr", scope: !6779, file: !3, line: 2015, type: !193)
!6779 = distinct !DILexicalBlock(scope: !6775, file: !3, line: 2015, column: 2)
!6780 = !DILocation(line: 2015, column: 2, scope: !6779)
!6781 = !DILocation(line: 2015, column: 2, scope: !6782)
!6782 = distinct !DILexicalBlock(scope: !6779, file: !3, line: 2015, column: 2)
!6783 = distinct !{!6783, !6773, !6784}
!6784 = !DILocation(line: 2016, column: 24, scope: !6769)
!6785 = !DILocation(line: 2018, column: 6, scope: !6786)
!6786 = distinct !DILexicalBlock(scope: !6645, file: !3, line: 2018, column: 6)
!6787 = !DILocation(line: 2018, column: 14, scope: !6786)
!6788 = !DILocation(line: 2018, column: 22, scope: !6786)
!6789 = !DILocation(line: 2018, column: 25, scope: !6786)
!6790 = !DILocation(line: 2018, column: 33, scope: !6786)
!6791 = !DILocation(line: 2018, column: 42, scope: !6786)
!6792 = !DILocation(line: 2018, column: 50, scope: !6786)
!6793 = !DILocation(line: 2018, column: 6, scope: !6645)
!6794 = !DILocation(line: 2019, column: 3, scope: !6786)
!6795 = !DILocation(line: 2019, column: 11, scope: !6786)
!6796 = !DILocation(line: 2019, column: 20, scope: !6786)
!6797 = !DILocation(line: 2019, column: 28, scope: !6786)
!6798 = !DILocation(line: 2019, column: 42, scope: !6786)
!6799 = !DILocation(line: 2020, column: 1, scope: !6645)
!6800 = distinct !DISubprogram(name: "acpi_bus_scan", scope: !3, file: !3, line: 2059, type: !6801, scopeLine: 2060, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !239)
!6801 = !DISubroutineType(types: !6802)
!6802 = !{!251, !4017}
!6803 = !DILocalVariable(name: "handle", arg: 1, scope: !6800, file: !3, line: 2059, type: !4017)
!6804 = !DILocation(line: 2059, column: 31, scope: !6800)
!6805 = !DILocalVariable(name: "device", scope: !6800, file: !3, line: 2061, type: !193)
!6806 = !DILocation(line: 2061, column: 8, scope: !6800)
!6807 = !DILocation(line: 2063, column: 6, scope: !6808)
!6808 = distinct !DILexicalBlock(scope: !6800, file: !3, line: 2063, column: 6)
!6809 = !DILocation(line: 2063, column: 6, scope: !6800)
!6810 = !DILocation(line: 2064, column: 38, scope: !6808)
!6811 = !DILocation(line: 2064, column: 3, scope: !6808)
!6812 = !DILocation(line: 2067, column: 6, scope: !6813)
!6813 = distinct !DILexicalBlock(scope: !6800, file: !3, line: 2067, column: 6)
!6814 = !DILocation(line: 2067, column: 6, scope: !6800)
!6815 = !DILocation(line: 2068, column: 19, scope: !6816)
!6816 = distinct !DILexicalBlock(scope: !6813, file: !3, line: 2067, column: 14)
!6817 = !DILocation(line: 2068, column: 3, scope: !6816)
!6818 = !DILocation(line: 2069, column: 3, scope: !6816)
!6819 = !DILocation(line: 2071, column: 2, scope: !6800)
!6820 = !DILocation(line: 2072, column: 1, scope: !6800)
!6821 = distinct !DISubprogram(name: "acpi_bus_check_add", scope: !3, file: !3, line: 1862, type: !5598, scopeLine: 1864, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !239)
!6822 = !DILocalVariable(name: "handle", arg: 1, scope: !6821, file: !3, line: 1862, type: !4017)
!6823 = !DILocation(line: 1862, column: 51, scope: !6821)
!6824 = !DILocalVariable(name: "lvl_not_used", arg: 2, scope: !6821, file: !3, line: 1862, type: !407)
!6825 = !DILocation(line: 1862, column: 63, scope: !6821)
!6826 = !DILocalVariable(name: "not_used", arg: 3, scope: !6821, file: !3, line: 1863, type: !193)
!6827 = !DILocation(line: 1863, column: 17, scope: !6821)
!6828 = !DILocalVariable(name: "return_value", arg: 4, scope: !6821, file: !3, line: 1863, type: !817)
!6829 = !DILocation(line: 1863, column: 34, scope: !6821)
!6830 = !DILocalVariable(name: "device", scope: !6821, file: !3, line: 1865, type: !4035)
!6831 = !DILocation(line: 1865, column: 22, scope: !6821)
!6832 = !DILocalVariable(name: "type", scope: !6821, file: !3, line: 1866, type: !251)
!6833 = !DILocation(line: 1866, column: 6, scope: !6821)
!6834 = !DILocalVariable(name: "sta", scope: !6821, file: !3, line: 1867, type: !415)
!6835 = !DILocation(line: 1867, column: 21, scope: !6821)
!6836 = !DILocalVariable(name: "result", scope: !6821, file: !3, line: 1868, type: !251)
!6837 = !DILocation(line: 1868, column: 6, scope: !6821)
!6838 = !DILocation(line: 1870, column: 22, scope: !6821)
!6839 = !DILocation(line: 1870, column: 2, scope: !6821)
!6840 = !DILocation(line: 1871, column: 6, scope: !6841)
!6841 = distinct !DILexicalBlock(scope: !6821, file: !3, line: 1871, column: 6)
!6842 = !DILocation(line: 1871, column: 6, scope: !6821)
!6843 = !DILocation(line: 1872, column: 3, scope: !6841)
!6844 = !DILocation(line: 1874, column: 36, scope: !6821)
!6845 = !DILocation(line: 1874, column: 11, scope: !6821)
!6846 = !DILocation(line: 1874, column: 9, scope: !6821)
!6847 = !DILocation(line: 1875, column: 6, scope: !6848)
!6848 = distinct !DILexicalBlock(scope: !6821, file: !3, line: 1875, column: 6)
!6849 = !DILocation(line: 1875, column: 6, scope: !6821)
!6850 = !DILocation(line: 1876, column: 3, scope: !6848)
!6851 = !DILocation(line: 1878, column: 6, scope: !6852)
!6852 = distinct !DILexicalBlock(scope: !6821, file: !3, line: 1878, column: 6)
!6853 = !DILocation(line: 1878, column: 11, scope: !6852)
!6854 = !DILocation(line: 1878, column: 6, scope: !6821)
!6855 = !DILocation(line: 1879, column: 27, scope: !6856)
!6856 = distinct !DILexicalBlock(scope: !6852, file: !3, line: 1878, column: 35)
!6857 = !DILocation(line: 1879, column: 3, scope: !6856)
!6858 = !DILocation(line: 1880, column: 3, scope: !6856)
!6859 = !DILocation(line: 1883, column: 34, scope: !6821)
!6860 = !DILocation(line: 1883, column: 42, scope: !6821)
!6861 = !DILocation(line: 1883, column: 48, scope: !6821)
!6862 = !DILocation(line: 1883, column: 2, scope: !6821)
!6863 = !DILocation(line: 1884, column: 7, scope: !6864)
!6864 = distinct !DILexicalBlock(scope: !6821, file: !3, line: 1884, column: 6)
!6865 = !DILocation(line: 1884, column: 6, scope: !6821)
!6866 = !DILocation(line: 1885, column: 3, scope: !6864)
!6867 = !DILocation(line: 1887, column: 25, scope: !6821)
!6868 = !DILocation(line: 1887, column: 2, scope: !6821)
!6869 = !DILocation(line: 1888, column: 29, scope: !6821)
!6870 = !DILocation(line: 1888, column: 2, scope: !6821)
!6871 = !DILabel(scope: !6821, name: "out", file: !3, line: 1890)
!6872 = !DILocation(line: 1890, column: 2, scope: !6821)
!6873 = !DILocation(line: 1891, column: 8, scope: !6874)
!6874 = distinct !DILexicalBlock(scope: !6821, file: !3, line: 1891, column: 6)
!6875 = !DILocation(line: 1891, column: 7, scope: !6874)
!6876 = !DILocation(line: 1891, column: 6, scope: !6821)
!6877 = !DILocation(line: 1892, column: 19, scope: !6874)
!6878 = !DILocation(line: 1892, column: 4, scope: !6874)
!6879 = !DILocation(line: 1892, column: 17, scope: !6874)
!6880 = !DILocation(line: 1892, column: 3, scope: !6874)
!6881 = !DILocation(line: 1894, column: 2, scope: !6821)
!6882 = !DILocation(line: 1895, column: 1, scope: !6821)
!6883 = distinct !DISubprogram(name: "acpi_bus_trim", scope: !3, file: !3, line: 2081, type: !4252, scopeLine: 2082, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !239)
!6884 = !DILocalVariable(name: "adev", arg: 1, scope: !6883, file: !3, line: 2081, type: !4035)
!6885 = !DILocation(line: 2081, column: 40, scope: !6883)
!6886 = !DILocalVariable(name: "handler", scope: !6883, file: !3, line: 2083, type: !4236)
!6887 = !DILocation(line: 2083, column: 28, scope: !6883)
!6888 = !DILocation(line: 2083, column: 38, scope: !6883)
!6889 = !DILocation(line: 2083, column: 44, scope: !6883)
!6890 = !DILocalVariable(name: "child", scope: !6883, file: !3, line: 2084, type: !4035)
!6891 = !DILocation(line: 2084, column: 22, scope: !6883)
!6892 = !DILocalVariable(name: "__mptr", scope: !6893, file: !3, line: 2086, type: !193)
!6893 = distinct !DILexicalBlock(scope: !6894, file: !3, line: 2086, column: 2)
!6894 = distinct !DILexicalBlock(scope: !6883, file: !3, line: 2086, column: 2)
!6895 = !DILocation(line: 2086, column: 2, scope: !6893)
!6896 = !DILocation(line: 2086, column: 2, scope: !6897)
!6897 = distinct !DILexicalBlock(scope: !6893, file: !3, line: 2086, column: 2)
!6898 = !DILocation(line: 2086, column: 2, scope: !6894)
!6899 = !DILocation(line: 2086, column: 2, scope: !6900)
!6900 = distinct !DILexicalBlock(scope: !6894, file: !3, line: 2086, column: 2)
!6901 = !DILocation(line: 2087, column: 17, scope: !6900)
!6902 = !DILocation(line: 2087, column: 3, scope: !6900)
!6903 = !DILocalVariable(name: "__mptr", scope: !6904, file: !3, line: 2086, type: !193)
!6904 = distinct !DILexicalBlock(scope: !6900, file: !3, line: 2086, column: 2)
!6905 = !DILocation(line: 2086, column: 2, scope: !6904)
!6906 = !DILocation(line: 2086, column: 2, scope: !6907)
!6907 = distinct !DILexicalBlock(scope: !6904, file: !3, line: 2086, column: 2)
!6908 = distinct !{!6908, !6898, !6909}
!6909 = !DILocation(line: 2087, column: 22, scope: !6894)
!6910 = !DILocation(line: 2089, column: 2, scope: !6883)
!6911 = !DILocation(line: 2089, column: 8, scope: !6883)
!6912 = !DILocation(line: 2089, column: 14, scope: !6883)
!6913 = !DILocation(line: 2089, column: 27, scope: !6883)
!6914 = !DILocation(line: 2090, column: 6, scope: !6915)
!6915 = distinct !DILexicalBlock(scope: !6883, file: !3, line: 2090, column: 6)
!6916 = !DILocation(line: 2090, column: 6, scope: !6883)
!6917 = !DILocation(line: 2091, column: 7, scope: !6918)
!6918 = distinct !DILexicalBlock(scope: !6919, file: !3, line: 2091, column: 7)
!6919 = distinct !DILexicalBlock(scope: !6915, file: !3, line: 2090, column: 15)
!6920 = !DILocation(line: 2091, column: 16, scope: !6918)
!6921 = !DILocation(line: 2091, column: 7, scope: !6919)
!6922 = !DILocation(line: 2092, column: 4, scope: !6918)
!6923 = !DILocation(line: 2092, column: 13, scope: !6918)
!6924 = !DILocation(line: 2092, column: 20, scope: !6918)
!6925 = !DILocation(line: 2094, column: 3, scope: !6919)
!6926 = !DILocation(line: 2094, column: 9, scope: !6919)
!6927 = !DILocation(line: 2094, column: 17, scope: !6919)
!6928 = !DILocation(line: 2095, column: 2, scope: !6919)
!6929 = !DILocation(line: 2096, column: 26, scope: !6930)
!6930 = distinct !DILexicalBlock(scope: !6915, file: !3, line: 2095, column: 9)
!6931 = !DILocation(line: 2096, column: 32, scope: !6930)
!6932 = !DILocation(line: 2096, column: 3, scope: !6930)
!6933 = !DILocation(line: 2102, column: 24, scope: !6883)
!6934 = !DILocation(line: 2102, column: 2, scope: !6883)
!6935 = !DILocation(line: 2103, column: 2, scope: !6883)
!6936 = !DILocation(line: 2103, column: 8, scope: !6883)
!6937 = !DILocation(line: 2103, column: 14, scope: !6883)
!6938 = !DILocation(line: 2103, column: 26, scope: !6883)
!6939 = !DILocation(line: 2104, column: 31, scope: !6883)
!6940 = !DILocation(line: 2104, column: 2, scope: !6883)
!6941 = !DILocation(line: 2105, column: 1, scope: !6883)
!6942 = distinct !DISubprogram(name: "acpi_bus_register_early_device", scope: !3, file: !3, line: 2108, type: !3049, scopeLine: 2109, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !239)
!6943 = !DILocalVariable(name: "type", arg: 1, scope: !6942, file: !3, line: 2108, type: !251)
!6944 = !DILocation(line: 2108, column: 40, scope: !6942)
!6945 = !DILocalVariable(name: "device", scope: !6942, file: !3, line: 2110, type: !4035)
!6946 = !DILocation(line: 2110, column: 22, scope: !6942)
!6947 = !DILocalVariable(name: "result", scope: !6942, file: !3, line: 2111, type: !251)
!6948 = !DILocation(line: 2111, column: 6, scope: !6942)
!6949 = !DILocation(line: 2114, column: 6, scope: !6942)
!6950 = !DILocation(line: 2113, column: 11, scope: !6942)
!6951 = !DILocation(line: 2113, column: 9, scope: !6942)
!6952 = !DILocation(line: 2115, column: 6, scope: !6953)
!6953 = distinct !DILexicalBlock(scope: !6942, file: !3, line: 2115, column: 6)
!6954 = !DILocation(line: 2115, column: 6, scope: !6942)
!6955 = !DILocation(line: 2116, column: 10, scope: !6953)
!6956 = !DILocation(line: 2116, column: 3, scope: !6953)
!6957 = !DILocation(line: 2118, column: 2, scope: !6942)
!6958 = !DILocation(line: 2118, column: 10, scope: !6942)
!6959 = !DILocation(line: 2118, column: 16, scope: !6942)
!6960 = !DILocation(line: 2118, column: 29, scope: !6942)
!6961 = !DILocation(line: 2119, column: 24, scope: !6942)
!6962 = !DILocation(line: 2119, column: 32, scope: !6942)
!6963 = !DILocation(line: 2119, column: 9, scope: !6942)
!6964 = !DILocation(line: 2119, column: 2, scope: !6942)
!6965 = !DILocation(line: 2120, column: 1, scope: !6942)
!6966 = distinct !DISubprogram(name: "acpi_add_single_object", scope: !3, file: !3, line: 1616, type: !6967, scopeLine: 1619, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !239)
!6967 = !DISubroutineType(types: !6968)
!6968 = !{!251, !4804, !4017, !251, !415}
!6969 = !DILocalVariable(name: "child", arg: 1, scope: !6966, file: !3, line: 1616, type: !4804)
!6970 = !DILocation(line: 1616, column: 56, scope: !6966)
!6971 = !DILocalVariable(name: "handle", arg: 2, scope: !6966, file: !3, line: 1617, type: !4017)
!6972 = !DILocation(line: 1617, column: 19, scope: !6966)
!6973 = !DILocalVariable(name: "type", arg: 3, scope: !6966, file: !3, line: 1617, type: !251)
!6974 = !DILocation(line: 1617, column: 31, scope: !6966)
!6975 = !DILocalVariable(name: "sta", arg: 4, scope: !6966, file: !3, line: 1618, type: !415)
!6976 = !DILocation(line: 1618, column: 26, scope: !6966)
!6977 = !DILocalVariable(name: "result", scope: !6966, file: !3, line: 1620, type: !251)
!6978 = !DILocation(line: 1620, column: 6, scope: !6966)
!6979 = !DILocalVariable(name: "device", scope: !6966, file: !3, line: 1621, type: !4035)
!6980 = !DILocation(line: 1621, column: 22, scope: !6966)
!6981 = !DILocalVariable(name: "buffer", scope: !6966, file: !3, line: 1622, type: !5442)
!6982 = !DILocation(line: 1622, column: 21, scope: !6966)
!6983 = !DILocation(line: 1624, column: 11, scope: !6966)
!6984 = !DILocation(line: 1624, column: 9, scope: !6966)
!6985 = !DILocation(line: 1625, column: 7, scope: !6986)
!6986 = distinct !DILexicalBlock(scope: !6966, file: !3, line: 1625, column: 6)
!6987 = !DILocation(line: 1625, column: 6, scope: !6966)
!6988 = !DILocation(line: 1626, column: 3, scope: !6989)
!6989 = distinct !DILexicalBlock(scope: !6986, file: !3, line: 1625, column: 15)
!6990 = !DILocation(line: 1627, column: 3, scope: !6989)
!6991 = !DILocation(line: 1630, column: 26, scope: !6966)
!6992 = !DILocation(line: 1630, column: 34, scope: !6966)
!6993 = !DILocation(line: 1630, column: 42, scope: !6966)
!6994 = !DILocation(line: 1630, column: 48, scope: !6966)
!6995 = !DILocation(line: 1630, column: 2, scope: !6966)
!6996 = !DILocation(line: 1636, column: 6, scope: !6997)
!6997 = distinct !DILexicalBlock(scope: !6966, file: !3, line: 1636, column: 6)
!6998 = !DILocation(line: 1636, column: 11, scope: !6997)
!6999 = !DILocation(line: 1636, column: 6, scope: !6966)
!7000 = !DILocation(line: 1637, column: 27, scope: !7001)
!7001 = distinct !DILexicalBlock(scope: !6997, file: !3, line: 1637, column: 7)
!7002 = !DILocation(line: 1637, column: 7, scope: !7001)
!7003 = !DILocation(line: 1637, column: 35, scope: !7001)
!7004 = !DILocation(line: 1637, column: 7, scope: !6997)
!7005 = !DILocation(line: 1638, column: 27, scope: !7001)
!7006 = !DILocation(line: 1638, column: 4, scope: !7001)
!7007 = !DILocation(line: 1637, column: 37, scope: !7001)
!7008 = !DILocation(line: 1640, column: 27, scope: !6966)
!7009 = !DILocation(line: 1640, column: 2, scope: !6966)
!7010 = !DILocation(line: 1641, column: 35, scope: !6966)
!7011 = !DILocation(line: 1641, column: 2, scope: !6966)
!7012 = !DILocation(line: 1643, column: 27, scope: !6966)
!7013 = !DILocation(line: 1643, column: 11, scope: !6966)
!7014 = !DILocation(line: 1643, column: 9, scope: !6966)
!7015 = !DILocation(line: 1644, column: 6, scope: !7016)
!7016 = distinct !DILexicalBlock(scope: !6966, file: !3, line: 1644, column: 6)
!7017 = !DILocation(line: 1644, column: 6, scope: !6966)
!7018 = !DILocation(line: 1645, column: 24, scope: !7019)
!7019 = distinct !DILexicalBlock(scope: !7016, file: !3, line: 1644, column: 14)
!7020 = !DILocation(line: 1645, column: 32, scope: !7019)
!7021 = !DILocation(line: 1645, column: 3, scope: !7019)
!7022 = !DILocation(line: 1646, column: 10, scope: !7019)
!7023 = !DILocation(line: 1646, column: 3, scope: !7019)
!7024 = !DILocation(line: 1649, column: 31, scope: !6966)
!7025 = !DILocation(line: 1649, column: 2, scope: !6966)
!7026 = !DILocation(line: 1650, column: 27, scope: !6966)
!7027 = !DILocation(line: 1650, column: 2, scope: !6966)
!7028 = !DILocation(line: 1651, column: 16, scope: !6966)
!7029 = !DILocation(line: 1651, column: 2, scope: !6966)
!7030 = !DILocation(line: 1655, column: 15, scope: !6966)
!7031 = !DILocation(line: 1655, column: 2, scope: !6966)
!7032 = !DILocation(line: 1656, column: 11, scope: !6966)
!7033 = !DILocation(line: 1656, column: 3, scope: !6966)
!7034 = !DILocation(line: 1656, column: 9, scope: !6966)
!7035 = !DILocation(line: 1657, column: 2, scope: !6966)
!7036 = !DILocation(line: 1658, column: 1, scope: !6966)
!7037 = distinct !DISubprogram(name: "acpi_scan_init", scope: !3, file: !3, line: 2181, type: !7038, scopeLine: 2182, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !239)
!7038 = !DISubroutineType(types: !7039)
!7039 = !{!251}
!7040 = !DILocalVariable(name: "result", scope: !7037, file: !3, line: 2183, type: !251)
!7041 = !DILocation(line: 2183, column: 6, scope: !7037)
!7042 = !DILocalVariable(name: "status", scope: !7037, file: !3, line: 2184, type: !4358)
!7043 = !DILocation(line: 2184, column: 14, scope: !7037)
!7044 = !DILocalVariable(name: "stao_ptr", scope: !7037, file: !3, line: 2185, type: !7045)
!7045 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7046, size: 64)
!7046 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "acpi_table_stao", file: !7047, line: 301, size: 296, elements: !7048)
!7047 = !DIFile(filename: "./include/acpi/actbl3.h", directory: "/home/lizy2001/genbc/linux")
!7048 = !{!7049, !7050}
!7049 = !DIDerivedType(tag: DW_TAG_member, name: "header", scope: !7046, file: !7047, line: 302, baseType: !4343, size: 288)
!7050 = !DIDerivedType(tag: DW_TAG_member, name: "ignore_uart", scope: !7046, file: !7047, line: 303, baseType: !1348, size: 8, offset: 288)
!7051 = !DILocation(line: 2185, column: 26, scope: !7037)
!7052 = !DILocation(line: 2187, column: 2, scope: !7037)
!7053 = !DILocation(line: 2188, column: 2, scope: !7037)
!7054 = !DILocation(line: 2189, column: 2, scope: !7037)
!7055 = !DILocation(line: 2190, column: 2, scope: !7037)
!7056 = !DILocation(line: 2191, column: 2, scope: !7037)
!7057 = !DILocation(line: 2192, column: 2, scope: !7037)
!7058 = !DILocation(line: 2193, column: 2, scope: !7037)
!7059 = !DILocation(line: 2194, column: 2, scope: !7037)
!7060 = !DILocation(line: 2195, column: 2, scope: !7037)
!7061 = !DILocation(line: 2196, column: 2, scope: !7037)
!7062 = !DILocation(line: 2197, column: 2, scope: !7037)
!7063 = !DILocation(line: 2198, column: 2, scope: !7037)
!7064 = !DILocation(line: 2199, column: 2, scope: !7037)
!7065 = !DILocation(line: 2200, column: 2, scope: !7037)
!7066 = !DILocation(line: 2202, column: 2, scope: !7037)
!7067 = !DILocation(line: 2209, column: 5, scope: !7037)
!7068 = !DILocation(line: 2208, column: 11, scope: !7037)
!7069 = !DILocation(line: 2208, column: 9, scope: !7037)
!7070 = !DILocation(line: 2210, column: 6, scope: !7071)
!7071 = distinct !DILexicalBlock(scope: !7037, file: !3, line: 2210, column: 6)
!7072 = !DILocation(line: 2210, column: 6, scope: !7037)
!7073 = !DILocation(line: 2211, column: 7, scope: !7074)
!7074 = distinct !DILexicalBlock(scope: !7075, file: !3, line: 2211, column: 7)
!7075 = distinct !DILexicalBlock(scope: !7071, file: !3, line: 2210, column: 28)
!7076 = !DILocation(line: 2211, column: 17, scope: !7074)
!7077 = !DILocation(line: 2211, column: 24, scope: !7074)
!7078 = !DILocation(line: 2211, column: 31, scope: !7074)
!7079 = !DILocation(line: 2211, column: 7, scope: !7075)
!7080 = !DILocation(line: 2212, column: 4, scope: !7074)
!7081 = !DILocation(line: 2214, column: 7, scope: !7082)
!7082 = distinct !DILexicalBlock(scope: !7075, file: !3, line: 2214, column: 7)
!7083 = !DILocation(line: 2214, column: 17, scope: !7082)
!7084 = !DILocation(line: 2214, column: 7, scope: !7075)
!7085 = !DILocation(line: 2215, column: 4, scope: !7082)
!7086 = !DILocation(line: 2217, column: 46, scope: !7075)
!7087 = !DILocation(line: 2217, column: 18, scope: !7075)
!7088 = !DILocation(line: 2217, column: 3, scope: !7075)
!7089 = !DILocation(line: 2218, column: 2, scope: !7075)
!7090 = !DILocation(line: 2220, column: 2, scope: !7037)
!7091 = !DILocation(line: 2221, column: 2, scope: !7037)
!7092 = !DILocation(line: 2229, column: 2, scope: !7037)
!7093 = !DILocation(line: 2233, column: 11, scope: !7037)
!7094 = !DILocation(line: 2233, column: 9, scope: !7037)
!7095 = !DILocation(line: 2234, column: 6, scope: !7096)
!7096 = distinct !DILexicalBlock(scope: !7037, file: !3, line: 2234, column: 6)
!7097 = !DILocation(line: 2234, column: 6, scope: !7037)
!7098 = !DILocation(line: 2235, column: 3, scope: !7096)
!7099 = !DILocation(line: 2237, column: 11, scope: !7037)
!7100 = !DILocation(line: 2237, column: 9, scope: !7037)
!7101 = !DILocation(line: 2238, column: 6, scope: !7102)
!7102 = distinct !DILexicalBlock(scope: !7037, file: !3, line: 2238, column: 6)
!7103 = !DILocation(line: 2238, column: 6, scope: !7037)
!7104 = !DILocation(line: 2239, column: 3, scope: !7102)
!7105 = !DILocation(line: 2242, column: 7, scope: !7106)
!7106 = distinct !DILexicalBlock(scope: !7037, file: !3, line: 2242, column: 6)
!7107 = !DILocation(line: 2242, column: 6, scope: !7037)
!7108 = !DILocation(line: 2243, column: 12, scope: !7109)
!7109 = distinct !DILexicalBlock(scope: !7106, file: !3, line: 2242, column: 34)
!7110 = !DILocation(line: 2243, column: 10, scope: !7109)
!7111 = !DILocation(line: 2244, column: 7, scope: !7112)
!7112 = distinct !DILexicalBlock(scope: !7109, file: !3, line: 2244, column: 7)
!7113 = !DILocation(line: 2244, column: 7, scope: !7109)
!7114 = !DILocation(line: 2245, column: 21, scope: !7115)
!7115 = distinct !DILexicalBlock(scope: !7112, file: !3, line: 2244, column: 15)
!7116 = !DILocation(line: 2245, column: 32, scope: !7115)
!7117 = !DILocation(line: 2245, column: 4, scope: !7115)
!7118 = !DILocation(line: 2247, column: 20, scope: !7115)
!7119 = !DILocation(line: 2247, column: 4, scope: !7115)
!7120 = !DILocation(line: 2248, column: 16, scope: !7115)
!7121 = !DILocation(line: 2248, column: 27, scope: !7115)
!7122 = !DILocation(line: 2248, column: 4, scope: !7115)
!7123 = !DILocation(line: 2249, column: 4, scope: !7115)
!7124 = !DILocation(line: 2251, column: 2, scope: !7109)
!7125 = !DILocation(line: 2253, column: 24, scope: !7037)
!7126 = !DILocation(line: 2253, column: 2, scope: !7037)
!7127 = !DILabel(scope: !7037, name: "out", file: !3, line: 2255)
!7128 = !DILocation(line: 2255, column: 2, scope: !7037)
!7129 = !DILocation(line: 2256, column: 2, scope: !7037)
!7130 = !DILocation(line: 2257, column: 9, scope: !7037)
!7131 = !DILocation(line: 2257, column: 2, scope: !7037)
!7132 = distinct !DISubprogram(name: "acpi_watchdog_init", scope: !4021, file: !4021, line: 255, type: !1876, scopeLine: 255, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !239)
!7133 = !DILocation(line: 255, column: 46, scope: !7132)
!7134 = distinct !DISubprogram(name: "acpi_amba_init", scope: !4021, file: !4021, line: 32, type: !1876, scopeLine: 32, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !239)
!7135 = !DILocation(line: 32, column: 42, scope: !7134)
!7136 = distinct !DISubprogram(name: "acpi_get_spcr_uart_addr", scope: !3, file: !3, line: 2163, type: !1876, scopeLine: 2164, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !239)
!7137 = !DILocalVariable(name: "status", scope: !7136, file: !3, line: 2165, type: !4358)
!7138 = !DILocation(line: 2165, column: 14, scope: !7136)
!7139 = !DILocalVariable(name: "spcr_ptr", scope: !7136, file: !3, line: 2166, type: !7140)
!7140 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7141, size: 64)
!7141 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "acpi_table_spcr", file: !7047, line: 102, size: 640, elements: !7142)
!7142 = !{!7143, !7144, !7145, !7147, !7155, !7156, !7157, !7158, !7159, !7160, !7161, !7162, !7163, !7164, !7165, !7166, !7167, !7168, !7169, !7170, !7171}
!7143 = !DIDerivedType(tag: DW_TAG_member, name: "header", scope: !7141, file: !7047, line: 103, baseType: !4343, size: 288)
!7144 = !DIDerivedType(tag: DW_TAG_member, name: "interface_type", scope: !7141, file: !7047, line: 104, baseType: !1348, size: 8, offset: 288)
!7145 = !DIDerivedType(tag: DW_TAG_member, name: "reserved", scope: !7141, file: !7047, line: 105, baseType: !7146, size: 24, offset: 296)
!7146 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1348, size: 24, elements: !268)
!7147 = !DIDerivedType(tag: DW_TAG_member, name: "serial_port", scope: !7141, file: !7047, line: 106, baseType: !7148, size: 96, offset: 320)
!7148 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "acpi_generic_address", file: !4344, line: 90, size: 96, elements: !7149)
!7149 = !{!7150, !7151, !7152, !7153, !7154}
!7150 = !DIDerivedType(tag: DW_TAG_member, name: "space_id", scope: !7148, file: !4344, line: 91, baseType: !1348, size: 8)
!7151 = !DIDerivedType(tag: DW_TAG_member, name: "bit_width", scope: !7148, file: !4344, line: 92, baseType: !1348, size: 8, offset: 8)
!7152 = !DIDerivedType(tag: DW_TAG_member, name: "bit_offset", scope: !7148, file: !4344, line: 93, baseType: !1348, size: 8, offset: 16)
!7153 = !DIDerivedType(tag: DW_TAG_member, name: "access_width", scope: !7148, file: !4344, line: 94, baseType: !1348, size: 8, offset: 24)
!7154 = !DIDerivedType(tag: DW_TAG_member, name: "address", scope: !7148, file: !4344, line: 95, baseType: !413, size: 64, offset: 32)
!7155 = !DIDerivedType(tag: DW_TAG_member, name: "interrupt_type", scope: !7141, file: !7047, line: 107, baseType: !1348, size: 8, offset: 416)
!7156 = !DIDerivedType(tag: DW_TAG_member, name: "pc_interrupt", scope: !7141, file: !7047, line: 108, baseType: !1348, size: 8, offset: 424)
!7157 = !DIDerivedType(tag: DW_TAG_member, name: "interrupt", scope: !7141, file: !7047, line: 109, baseType: !407, size: 32, offset: 432)
!7158 = !DIDerivedType(tag: DW_TAG_member, name: "baud_rate", scope: !7141, file: !7047, line: 110, baseType: !1348, size: 8, offset: 464)
!7159 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !7141, file: !7047, line: 111, baseType: !1348, size: 8, offset: 472)
!7160 = !DIDerivedType(tag: DW_TAG_member, name: "stop_bits", scope: !7141, file: !7047, line: 112, baseType: !1348, size: 8, offset: 480)
!7161 = !DIDerivedType(tag: DW_TAG_member, name: "flow_control", scope: !7141, file: !7047, line: 113, baseType: !1348, size: 8, offset: 488)
!7162 = !DIDerivedType(tag: DW_TAG_member, name: "terminal_type", scope: !7141, file: !7047, line: 114, baseType: !1348, size: 8, offset: 496)
!7163 = !DIDerivedType(tag: DW_TAG_member, name: "reserved1", scope: !7141, file: !7047, line: 115, baseType: !1348, size: 8, offset: 504)
!7164 = !DIDerivedType(tag: DW_TAG_member, name: "pci_device_id", scope: !7141, file: !7047, line: 116, baseType: !855, size: 16, offset: 512)
!7165 = !DIDerivedType(tag: DW_TAG_member, name: "pci_vendor_id", scope: !7141, file: !7047, line: 117, baseType: !855, size: 16, offset: 528)
!7166 = !DIDerivedType(tag: DW_TAG_member, name: "pci_bus", scope: !7141, file: !7047, line: 118, baseType: !1348, size: 8, offset: 544)
!7167 = !DIDerivedType(tag: DW_TAG_member, name: "pci_device", scope: !7141, file: !7047, line: 119, baseType: !1348, size: 8, offset: 552)
!7168 = !DIDerivedType(tag: DW_TAG_member, name: "pci_function", scope: !7141, file: !7047, line: 120, baseType: !1348, size: 8, offset: 560)
!7169 = !DIDerivedType(tag: DW_TAG_member, name: "pci_flags", scope: !7141, file: !7047, line: 121, baseType: !407, size: 32, offset: 568)
!7170 = !DIDerivedType(tag: DW_TAG_member, name: "pci_segment", scope: !7141, file: !7047, line: 122, baseType: !1348, size: 8, offset: 600)
!7171 = !DIDerivedType(tag: DW_TAG_member, name: "reserved2", scope: !7141, file: !7047, line: 123, baseType: !407, size: 32, offset: 608)
!7172 = !DILocation(line: 2166, column: 26, scope: !7136)
!7173 = !DILocation(line: 2169, column: 5, scope: !7136)
!7174 = !DILocation(line: 2168, column: 11, scope: !7136)
!7175 = !DILocation(line: 2168, column: 9, scope: !7136)
!7176 = !DILocation(line: 2170, column: 6, scope: !7177)
!7177 = distinct !DILexicalBlock(scope: !7136, file: !3, line: 2170, column: 6)
!7178 = !DILocation(line: 2170, column: 6, scope: !7136)
!7179 = !DILocation(line: 2171, column: 3, scope: !7180)
!7180 = distinct !DILexicalBlock(scope: !7177, file: !3, line: 2170, column: 28)
!7181 = !DILocation(line: 2172, column: 3, scope: !7180)
!7182 = !DILocation(line: 2175, column: 19, scope: !7136)
!7183 = !DILocation(line: 2175, column: 29, scope: !7136)
!7184 = !DILocation(line: 2175, column: 41, scope: !7136)
!7185 = !DILocation(line: 2175, column: 17, scope: !7136)
!7186 = !DILocation(line: 2176, column: 45, scope: !7136)
!7187 = !DILocation(line: 2176, column: 17, scope: !7136)
!7188 = !DILocation(line: 2176, column: 2, scope: !7136)
!7189 = !DILocation(line: 2177, column: 1, scope: !7136)
!7190 = distinct !DISubprogram(name: "acpi_bus_scan_fixed", scope: !3, file: !3, line: 2123, type: !7038, scopeLine: 2124, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !239)
!7191 = !DILocalVariable(name: "result", scope: !7190, file: !3, line: 2125, type: !251)
!7192 = !DILocation(line: 2125, column: 6, scope: !7190)
!7193 = !DILocation(line: 2130, column: 22, scope: !7194)
!7194 = distinct !DILexicalBlock(scope: !7190, file: !3, line: 2130, column: 6)
!7195 = !DILocation(line: 2130, column: 28, scope: !7194)
!7196 = !DILocation(line: 2130, column: 6, scope: !7190)
!7197 = !DILocalVariable(name: "device", scope: !7198, file: !3, line: 2131, type: !4035)
!7198 = distinct !DILexicalBlock(scope: !7194, file: !3, line: 2130, column: 55)
!7199 = !DILocation(line: 2131, column: 23, scope: !7198)
!7200 = !DILocation(line: 2133, column: 12, scope: !7198)
!7201 = !DILocation(line: 2133, column: 10, scope: !7198)
!7202 = !DILocation(line: 2136, column: 7, scope: !7203)
!7203 = distinct !DILexicalBlock(scope: !7198, file: !3, line: 2136, column: 7)
!7204 = !DILocation(line: 2136, column: 7, scope: !7198)
!7205 = !DILocation(line: 2137, column: 11, scope: !7203)
!7206 = !DILocation(line: 2137, column: 4, scope: !7203)
!7207 = !DILocation(line: 2139, column: 3, scope: !7198)
!7208 = !DILocation(line: 2139, column: 11, scope: !7198)
!7209 = !DILocation(line: 2139, column: 17, scope: !7198)
!7210 = !DILocation(line: 2139, column: 30, scope: !7198)
!7211 = !DILocation(line: 2140, column: 27, scope: !7198)
!7212 = !DILocation(line: 2140, column: 35, scope: !7198)
!7213 = !DILocation(line: 2140, column: 12, scope: !7198)
!7214 = !DILocation(line: 2140, column: 10, scope: !7198)
!7215 = !DILocation(line: 2141, column: 7, scope: !7216)
!7216 = distinct !DILexicalBlock(scope: !7198, file: !3, line: 2141, column: 7)
!7217 = !DILocation(line: 2141, column: 14, scope: !7216)
!7218 = !DILocation(line: 2141, column: 7, scope: !7198)
!7219 = !DILocation(line: 2142, column: 11, scope: !7216)
!7220 = !DILocation(line: 2142, column: 4, scope: !7216)
!7221 = !DILocation(line: 2144, column: 23, scope: !7198)
!7222 = !DILocation(line: 2144, column: 31, scope: !7198)
!7223 = !DILocation(line: 2144, column: 3, scope: !7198)
!7224 = !DILocation(line: 2145, column: 2, scope: !7198)
!7225 = !DILocation(line: 2147, column: 22, scope: !7226)
!7226 = distinct !DILexicalBlock(scope: !7190, file: !3, line: 2147, column: 6)
!7227 = !DILocation(line: 2147, column: 28, scope: !7226)
!7228 = !DILocation(line: 2147, column: 6, scope: !7190)
!7229 = !DILocalVariable(name: "device", scope: !7230, file: !3, line: 2148, type: !4035)
!7230 = distinct !DILexicalBlock(scope: !7226, file: !3, line: 2147, column: 55)
!7231 = !DILocation(line: 2148, column: 23, scope: !7230)
!7232 = !DILocation(line: 2150, column: 12, scope: !7230)
!7233 = !DILocation(line: 2150, column: 10, scope: !7230)
!7234 = !DILocation(line: 2153, column: 7, scope: !7235)
!7235 = distinct !DILexicalBlock(scope: !7230, file: !3, line: 2153, column: 7)
!7236 = !DILocation(line: 2153, column: 7, scope: !7230)
!7237 = !DILocation(line: 2154, column: 11, scope: !7235)
!7238 = !DILocation(line: 2154, column: 4, scope: !7235)
!7239 = !DILocation(line: 2156, column: 3, scope: !7230)
!7240 = !DILocation(line: 2156, column: 11, scope: !7230)
!7241 = !DILocation(line: 2156, column: 17, scope: !7230)
!7242 = !DILocation(line: 2156, column: 30, scope: !7230)
!7243 = !DILocation(line: 2157, column: 27, scope: !7230)
!7244 = !DILocation(line: 2157, column: 35, scope: !7230)
!7245 = !DILocation(line: 2157, column: 12, scope: !7230)
!7246 = !DILocation(line: 2157, column: 10, scope: !7230)
!7247 = !DILocation(line: 2158, column: 2, scope: !7230)
!7248 = !DILocation(line: 2160, column: 9, scope: !7190)
!7249 = !DILocation(line: 2160, column: 16, scope: !7190)
!7250 = !DILocation(line: 2160, column: 22, scope: !7190)
!7251 = !DILocation(line: 2160, column: 2, scope: !7190)
!7252 = !DILocation(line: 2161, column: 1, scope: !7190)
!7253 = distinct !DISubprogram(name: "acpi_device_del", scope: !3, file: !3, line: 474, type: !4252, scopeLine: 475, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !239)
!7254 = !DILocalVariable(name: "device", arg: 1, scope: !7253, file: !3, line: 474, type: !4035)
!7255 = !DILocation(line: 474, column: 49, scope: !7253)
!7256 = !DILocalVariable(name: "acpi_device_bus_id", scope: !7253, file: !3, line: 476, type: !4019)
!7257 = !DILocation(line: 476, column: 29, scope: !7253)
!7258 = !DILocation(line: 478, column: 2, scope: !7253)
!7259 = !DILocation(line: 479, column: 6, scope: !7260)
!7260 = distinct !DILexicalBlock(scope: !7253, file: !3, line: 479, column: 6)
!7261 = !DILocation(line: 479, column: 14, scope: !7260)
!7262 = !DILocation(line: 479, column: 6, scope: !7253)
!7263 = !DILocation(line: 480, column: 13, scope: !7260)
!7264 = !DILocation(line: 480, column: 21, scope: !7260)
!7265 = !DILocation(line: 480, column: 3, scope: !7260)
!7266 = !DILocalVariable(name: "__mptr", scope: !7267, file: !3, line: 482, type: !193)
!7267 = distinct !DILexicalBlock(scope: !7268, file: !3, line: 482, column: 2)
!7268 = distinct !DILexicalBlock(scope: !7253, file: !3, line: 482, column: 2)
!7269 = !DILocation(line: 482, column: 2, scope: !7267)
!7270 = !DILocation(line: 482, column: 2, scope: !7271)
!7271 = distinct !DILexicalBlock(scope: !7267, file: !3, line: 482, column: 2)
!7272 = !DILocation(line: 482, column: 2, scope: !7268)
!7273 = !DILocation(line: 482, column: 2, scope: !7274)
!7274 = distinct !DILexicalBlock(scope: !7268, file: !3, line: 482, column: 2)
!7275 = !DILocation(line: 483, column: 15, scope: !7276)
!7276 = distinct !DILexicalBlock(scope: !7274, file: !3, line: 483, column: 7)
!7277 = !DILocation(line: 483, column: 35, scope: !7276)
!7278 = !DILocation(line: 484, column: 24, scope: !7276)
!7279 = !DILocation(line: 484, column: 8, scope: !7276)
!7280 = !DILocation(line: 483, column: 8, scope: !7276)
!7281 = !DILocation(line: 483, column: 7, scope: !7274)
!7282 = !DILocation(line: 485, column: 8, scope: !7283)
!7283 = distinct !DILexicalBlock(scope: !7284, file: !3, line: 485, column: 8)
!7284 = distinct !DILexicalBlock(scope: !7276, file: !3, line: 484, column: 34)
!7285 = !DILocation(line: 485, column: 28, scope: !7283)
!7286 = !DILocation(line: 485, column: 40, scope: !7283)
!7287 = !DILocation(line: 485, column: 8, scope: !7284)
!7288 = !DILocation(line: 486, column: 5, scope: !7283)
!7289 = !DILocation(line: 486, column: 25, scope: !7283)
!7290 = !DILocation(line: 486, column: 36, scope: !7283)
!7291 = !DILocation(line: 488, column: 15, scope: !7292)
!7292 = distinct !DILexicalBlock(scope: !7283, file: !3, line: 487, column: 9)
!7293 = !DILocation(line: 488, column: 35, scope: !7292)
!7294 = !DILocation(line: 488, column: 5, scope: !7292)
!7295 = !DILocation(line: 489, column: 11, scope: !7292)
!7296 = !DILocation(line: 489, column: 5, scope: !7292)
!7297 = !DILocation(line: 491, column: 4, scope: !7284)
!7298 = !DILocation(line: 484, column: 31, scope: !7276)
!7299 = !DILocalVariable(name: "__mptr", scope: !7300, file: !3, line: 482, type: !193)
!7300 = distinct !DILexicalBlock(scope: !7274, file: !3, line: 482, column: 2)
!7301 = !DILocation(line: 482, column: 2, scope: !7300)
!7302 = !DILocation(line: 482, column: 2, scope: !7303)
!7303 = distinct !DILexicalBlock(scope: !7300, file: !3, line: 482, column: 2)
!7304 = distinct !{!7304, !7272, !7305}
!7305 = !DILocation(line: 492, column: 3, scope: !7268)
!7306 = !DILocation(line: 494, column: 12, scope: !7253)
!7307 = !DILocation(line: 494, column: 20, scope: !7253)
!7308 = !DILocation(line: 494, column: 2, scope: !7253)
!7309 = !DILocation(line: 495, column: 2, scope: !7253)
!7310 = !DILocation(line: 497, column: 31, scope: !7253)
!7311 = !DILocation(line: 497, column: 2, scope: !7253)
!7312 = !DILocation(line: 498, column: 27, scope: !7253)
!7313 = !DILocation(line: 498, column: 2, scope: !7253)
!7314 = !DILocation(line: 499, column: 6, scope: !7315)
!7315 = distinct !DILexicalBlock(scope: !7253, file: !3, line: 499, column: 6)
!7316 = !DILocation(line: 499, column: 14, scope: !7315)
!7317 = !DILocation(line: 499, column: 6, scope: !7253)
!7318 = !DILocation(line: 500, column: 3, scope: !7315)
!7319 = !DILocation(line: 500, column: 11, scope: !7315)
!7320 = !DILocation(line: 500, column: 18, scope: !7315)
!7321 = !DILocation(line: 502, column: 14, scope: !7253)
!7322 = !DILocation(line: 502, column: 22, scope: !7253)
!7323 = !DILocation(line: 502, column: 2, scope: !7253)
!7324 = !DILocation(line: 503, column: 1, scope: !7253)
!7325 = distinct !DISubprogram(name: "__acpi_probe_device_table", scope: !3, file: !3, line: 2274, type: !7326, scopeLine: 2275, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !239)
!7326 = !DISubroutineType(types: !7327)
!7327 = !{!251, !4381, !251}
!7328 = !DILocalVariable(name: "ap_head", arg: 1, scope: !7325, file: !3, line: 2274, type: !4381)
!7329 = !DILocation(line: 2274, column: 63, scope: !7325)
!7330 = !DILocalVariable(name: "nr", arg: 2, scope: !7325, file: !3, line: 2274, type: !251)
!7331 = !DILocation(line: 2274, column: 76, scope: !7325)
!7332 = !DILocalVariable(name: "count", scope: !7325, file: !3, line: 2276, type: !251)
!7333 = !DILocation(line: 2276, column: 6, scope: !7325)
!7334 = !DILocation(line: 2278, column: 6, scope: !7335)
!7335 = distinct !DILexicalBlock(scope: !7325, file: !3, line: 2278, column: 6)
!7336 = !DILocation(line: 2278, column: 6, scope: !7325)
!7337 = !DILocation(line: 2279, column: 3, scope: !7335)
!7338 = !DILocation(line: 2281, column: 2, scope: !7325)
!7339 = !DILocation(line: 2282, column: 13, scope: !7340)
!7340 = distinct !DILexicalBlock(scope: !7325, file: !3, line: 2282, column: 2)
!7341 = !DILocation(line: 2282, column: 11, scope: !7340)
!7342 = !DILocation(line: 2282, column: 7, scope: !7340)
!7343 = !DILocation(line: 2282, column: 22, scope: !7344)
!7344 = distinct !DILexicalBlock(scope: !7340, file: !3, line: 2282, column: 2)
!7345 = !DILocation(line: 2282, column: 2, scope: !7340)
!7346 = !DILocation(line: 2283, column: 7, scope: !7347)
!7347 = distinct !DILexicalBlock(scope: !7348, file: !3, line: 2283, column: 7)
!7348 = distinct !DILexicalBlock(scope: !7344, file: !3, line: 2282, column: 39)
!7349 = !DILocation(line: 2283, column: 7, scope: !7348)
!7350 = !DILocation(line: 2284, column: 21, scope: !7351)
!7351 = distinct !DILexicalBlock(scope: !7347, file: !3, line: 2283, column: 53)
!7352 = !DILocation(line: 2285, column: 26, scope: !7351)
!7353 = !DILocation(line: 2285, column: 31, scope: !7351)
!7354 = !DILocation(line: 2285, column: 4, scope: !7351)
!7355 = !DILocation(line: 2286, column: 13, scope: !7351)
!7356 = !DILocation(line: 2286, column: 10, scope: !7351)
!7357 = !DILocation(line: 2287, column: 3, scope: !7351)
!7358 = !DILocalVariable(name: "res", scope: !7359, file: !3, line: 2288, type: !251)
!7359 = distinct !DILexicalBlock(scope: !7347, file: !3, line: 2287, column: 10)
!7360 = !DILocation(line: 2288, column: 8, scope: !7359)
!7361 = !DILocation(line: 2289, column: 27, scope: !7359)
!7362 = !DILocation(line: 2289, column: 32, scope: !7359)
!7363 = !DILocation(line: 2289, column: 36, scope: !7359)
!7364 = !DILocation(line: 2289, column: 41, scope: !7359)
!7365 = !DILocation(line: 2289, column: 10, scope: !7359)
!7366 = !DILocation(line: 2289, column: 8, scope: !7359)
!7367 = !DILocation(line: 2290, column: 9, scope: !7368)
!7368 = distinct !DILexicalBlock(scope: !7359, file: !3, line: 2290, column: 8)
!7369 = !DILocation(line: 2290, column: 8, scope: !7359)
!7370 = !DILocation(line: 2291, column: 10, scope: !7368)
!7371 = !DILocation(line: 2291, column: 5, scope: !7368)
!7372 = !DILocation(line: 2293, column: 2, scope: !7348)
!7373 = !DILocation(line: 2282, column: 29, scope: !7344)
!7374 = !DILocation(line: 2282, column: 35, scope: !7344)
!7375 = !DILocation(line: 2282, column: 2, scope: !7344)
!7376 = distinct !{!7376, !7345, !7377}
!7377 = !DILocation(line: 2293, column: 2, scope: !7340)
!7378 = !DILocation(line: 2294, column: 2, scope: !7325)
!7379 = !DILocation(line: 2296, column: 9, scope: !7325)
!7380 = !DILocation(line: 2296, column: 2, scope: !7325)
!7381 = !DILocation(line: 2297, column: 1, scope: !7325)
!7382 = distinct !DISubprogram(name: "acpi_match_madt", scope: !3, file: !3, line: 2264, type: !4409, scopeLine: 2266, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !239)
!7383 = !DILocalVariable(name: "header", arg: 1, scope: !7382, file: !3, line: 2264, type: !4411)
!7384 = !DILocation(line: 2264, column: 64, scope: !7382)
!7385 = !DILocalVariable(name: "end", arg: 2, scope: !7382, file: !3, line: 2265, type: !2343)
!7386 = !DILocation(line: 2265, column: 27, scope: !7382)
!7387 = !DILocation(line: 2267, column: 7, scope: !7388)
!7388 = distinct !DILexicalBlock(scope: !7382, file: !3, line: 2267, column: 6)
!7389 = !DILocation(line: 2267, column: 12, scope: !7388)
!7390 = !DILocation(line: 2267, column: 27, scope: !7388)
!7391 = !DILocation(line: 2267, column: 30, scope: !7388)
!7392 = !DILocation(line: 2267, column: 35, scope: !7388)
!7393 = !DILocation(line: 2267, column: 51, scope: !7388)
!7394 = !DILocation(line: 2267, column: 59, scope: !7388)
!7395 = !DILocation(line: 2267, column: 67, scope: !7388)
!7396 = !DILocation(line: 2267, column: 6, scope: !7382)
!7397 = !DILocation(line: 2268, column: 8, scope: !7398)
!7398 = distinct !DILexicalBlock(scope: !7388, file: !3, line: 2268, column: 7)
!7399 = !DILocation(line: 2268, column: 13, scope: !7398)
!7400 = !DILocation(line: 2268, column: 26, scope: !7398)
!7401 = !DILocation(line: 2268, column: 34, scope: !7398)
!7402 = !DILocation(line: 2268, column: 7, scope: !7388)
!7403 = !DILocation(line: 2269, column: 20, scope: !7398)
!7404 = !DILocation(line: 2269, column: 4, scope: !7398)
!7405 = !DILocation(line: 2268, column: 37, scope: !7398)
!7406 = !DILocation(line: 2271, column: 2, scope: !7382)
!7407 = distinct !DISubprogram(name: "acpi_scan_table_handler", scope: !3, file: !3, line: 2320, type: !7408, scopeLine: 2321, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !239)
!7408 = !DISubroutineType(types: !7409)
!7409 = !{null, !407, !193, !193}
!7410 = !DILocation(line: 445, column: 72, scope: !5107, inlinedAt: !7411)
!7411 = distinct !DILocation(line: 552, column: 10, scope: !5112, inlinedAt: !7412)
!7412 = distinct !DILocation(line: 2330, column: 8, scope: !7407)
!7413 = !DILocation(line: 446, column: 9, scope: !5107, inlinedAt: !7411)
!7414 = !DILocation(line: 446, column: 23, scope: !5107, inlinedAt: !7411)
!7415 = !DILocation(line: 448, column: 8, scope: !5107, inlinedAt: !7411)
!7416 = !DILocation(line: 318, column: 67, scope: !5123, inlinedAt: !7417)
!7417 = distinct !DILocation(line: 553, column: 20, scope: !5112, inlinedAt: !7412)
!7418 = !DILocation(line: 346, column: 58, scope: !5129, inlinedAt: !7419)
!7419 = distinct !DILocation(line: 547, column: 11, scope: !5112, inlinedAt: !7412)
!7420 = !DILocation(line: 472, column: 28, scope: !5135, inlinedAt: !7421)
!7421 = distinct !DILocation(line: 481, column: 9, scope: !5140, inlinedAt: !7422)
!7422 = distinct !DILocation(line: 545, column: 11, scope: !5142, inlinedAt: !7412)
!7423 = !DILocation(line: 472, column: 40, scope: !5135, inlinedAt: !7421)
!7424 = !DILocation(line: 472, column: 60, scope: !5135, inlinedAt: !7421)
!7425 = !DILocation(line: 478, column: 51, scope: !5140, inlinedAt: !7422)
!7426 = !DILocation(line: 478, column: 63, scope: !5140, inlinedAt: !7422)
!7427 = !DILocation(line: 480, column: 15, scope: !5140, inlinedAt: !7422)
!7428 = !DILocation(line: 538, column: 45, scope: !5114, inlinedAt: !7412)
!7429 = !DILocation(line: 538, column: 57, scope: !5114, inlinedAt: !7412)
!7430 = !DILocation(line: 542, column: 16, scope: !5112, inlinedAt: !7412)
!7431 = !DILocalVariable(name: "event", arg: 1, scope: !7407, file: !3, line: 2320, type: !407)
!7432 = !DILocation(line: 2320, column: 34, scope: !7407)
!7433 = !DILocalVariable(name: "table", arg: 2, scope: !7407, file: !3, line: 2320, type: !193)
!7434 = !DILocation(line: 2320, column: 47, scope: !7407)
!7435 = !DILocalVariable(name: "context", arg: 3, scope: !7407, file: !3, line: 2320, type: !193)
!7436 = !DILocation(line: 2320, column: 60, scope: !7407)
!7437 = !DILocalVariable(name: "tew", scope: !7407, file: !3, line: 2322, type: !4361)
!7438 = !DILocation(line: 2322, column: 33, scope: !7407)
!7439 = !DILocation(line: 2324, column: 7, scope: !7440)
!7440 = distinct !DILexicalBlock(scope: !7407, file: !3, line: 2324, column: 6)
!7441 = !DILocation(line: 2324, column: 6, scope: !7407)
!7442 = !DILocation(line: 2325, column: 3, scope: !7440)
!7443 = !DILocation(line: 2327, column: 6, scope: !7444)
!7444 = distinct !DILexicalBlock(scope: !7407, file: !3, line: 2327, column: 6)
!7445 = !DILocation(line: 2327, column: 12, scope: !7444)
!7446 = !DILocation(line: 2327, column: 6, scope: !7407)
!7447 = !DILocation(line: 2328, column: 3, scope: !7444)
!7448 = !DILocation(line: 540, column: 27, scope: !5113, inlinedAt: !7412)
!7449 = !DILocation(line: 540, column: 6, scope: !5113, inlinedAt: !7412)
!7450 = !DILocation(line: 540, column: 6, scope: !5114, inlinedAt: !7412)
!7451 = !DILocation(line: 544, column: 7, scope: !5142, inlinedAt: !7412)
!7452 = !DILocation(line: 544, column: 12, scope: !5142, inlinedAt: !7412)
!7453 = !DILocation(line: 544, column: 7, scope: !5112, inlinedAt: !7412)
!7454 = !DILocation(line: 545, column: 25, scope: !5142, inlinedAt: !7412)
!7455 = !DILocation(line: 545, column: 31, scope: !5142, inlinedAt: !7412)
!7456 = !DILocation(line: 480, column: 33, scope: !5140, inlinedAt: !7422)
!7457 = !DILocation(line: 480, column: 23, scope: !5140, inlinedAt: !7422)
!7458 = !DILocation(line: 481, column: 29, scope: !5140, inlinedAt: !7422)
!7459 = !DILocation(line: 481, column: 35, scope: !5140, inlinedAt: !7422)
!7460 = !DILocation(line: 481, column: 42, scope: !5140, inlinedAt: !7422)
!7461 = !DILocation(line: 474, column: 23, scope: !5135, inlinedAt: !7421)
!7462 = !DILocation(line: 474, column: 29, scope: !5135, inlinedAt: !7421)
!7463 = !DILocation(line: 474, column: 36, scope: !5135, inlinedAt: !7421)
!7464 = !DILocation(line: 474, column: 9, scope: !5135, inlinedAt: !7421)
!7465 = !DILocation(line: 545, column: 4, scope: !5142, inlinedAt: !7412)
!7466 = !DILocation(line: 547, column: 25, scope: !5112, inlinedAt: !7412)
!7467 = !DILocation(line: 348, column: 7, scope: !5186, inlinedAt: !7419)
!7468 = !DILocation(line: 348, column: 6, scope: !5129, inlinedAt: !7419)
!7469 = !DILocation(line: 349, column: 3, scope: !5186, inlinedAt: !7419)
!7470 = !DILocation(line: 351, column: 6, scope: !5190, inlinedAt: !7419)
!7471 = !DILocation(line: 351, column: 11, scope: !5190, inlinedAt: !7419)
!7472 = !DILocation(line: 351, column: 6, scope: !5129, inlinedAt: !7419)
!7473 = !DILocation(line: 352, column: 3, scope: !5190, inlinedAt: !7419)
!7474 = !DILocation(line: 354, column: 32, scope: !5195, inlinedAt: !7419)
!7475 = !DILocation(line: 354, column: 37, scope: !5195, inlinedAt: !7419)
!7476 = !DILocation(line: 354, column: 42, scope: !5195, inlinedAt: !7419)
!7477 = !DILocation(line: 354, column: 45, scope: !5195, inlinedAt: !7419)
!7478 = !DILocation(line: 354, column: 50, scope: !5195, inlinedAt: !7419)
!7479 = !DILocation(line: 354, column: 6, scope: !5129, inlinedAt: !7419)
!7480 = !DILocation(line: 355, column: 3, scope: !5195, inlinedAt: !7419)
!7481 = !DILocation(line: 356, column: 32, scope: !5203, inlinedAt: !7419)
!7482 = !DILocation(line: 356, column: 37, scope: !5203, inlinedAt: !7419)
!7483 = !DILocation(line: 356, column: 43, scope: !5203, inlinedAt: !7419)
!7484 = !DILocation(line: 356, column: 46, scope: !5203, inlinedAt: !7419)
!7485 = !DILocation(line: 356, column: 51, scope: !5203, inlinedAt: !7419)
!7486 = !DILocation(line: 356, column: 6, scope: !5129, inlinedAt: !7419)
!7487 = !DILocation(line: 357, column: 3, scope: !5203, inlinedAt: !7419)
!7488 = !DILocation(line: 358, column: 6, scope: !5211, inlinedAt: !7419)
!7489 = !DILocation(line: 358, column: 11, scope: !5211, inlinedAt: !7419)
!7490 = !DILocation(line: 358, column: 6, scope: !5129, inlinedAt: !7419)
!7491 = !DILocation(line: 358, column: 26, scope: !5211, inlinedAt: !7419)
!7492 = !DILocation(line: 359, column: 6, scope: !5216, inlinedAt: !7419)
!7493 = !DILocation(line: 359, column: 11, scope: !5216, inlinedAt: !7419)
!7494 = !DILocation(line: 359, column: 6, scope: !5129, inlinedAt: !7419)
!7495 = !DILocation(line: 359, column: 26, scope: !5216, inlinedAt: !7419)
!7496 = !DILocation(line: 360, column: 6, scope: !5221, inlinedAt: !7419)
!7497 = !DILocation(line: 360, column: 11, scope: !5221, inlinedAt: !7419)
!7498 = !DILocation(line: 360, column: 6, scope: !5129, inlinedAt: !7419)
!7499 = !DILocation(line: 360, column: 26, scope: !5221, inlinedAt: !7419)
!7500 = !DILocation(line: 361, column: 6, scope: !5226, inlinedAt: !7419)
!7501 = !DILocation(line: 361, column: 11, scope: !5226, inlinedAt: !7419)
!7502 = !DILocation(line: 361, column: 6, scope: !5129, inlinedAt: !7419)
!7503 = !DILocation(line: 361, column: 26, scope: !5226, inlinedAt: !7419)
!7504 = !DILocation(line: 362, column: 6, scope: !5231, inlinedAt: !7419)
!7505 = !DILocation(line: 362, column: 11, scope: !5231, inlinedAt: !7419)
!7506 = !DILocation(line: 362, column: 6, scope: !5129, inlinedAt: !7419)
!7507 = !DILocation(line: 362, column: 26, scope: !5231, inlinedAt: !7419)
!7508 = !DILocation(line: 363, column: 6, scope: !5236, inlinedAt: !7419)
!7509 = !DILocation(line: 363, column: 11, scope: !5236, inlinedAt: !7419)
!7510 = !DILocation(line: 363, column: 6, scope: !5129, inlinedAt: !7419)
!7511 = !DILocation(line: 363, column: 26, scope: !5236, inlinedAt: !7419)
!7512 = !DILocation(line: 364, column: 6, scope: !5241, inlinedAt: !7419)
!7513 = !DILocation(line: 364, column: 11, scope: !5241, inlinedAt: !7419)
!7514 = !DILocation(line: 364, column: 6, scope: !5129, inlinedAt: !7419)
!7515 = !DILocation(line: 364, column: 26, scope: !5241, inlinedAt: !7419)
!7516 = !DILocation(line: 365, column: 6, scope: !5246, inlinedAt: !7419)
!7517 = !DILocation(line: 365, column: 11, scope: !5246, inlinedAt: !7419)
!7518 = !DILocation(line: 365, column: 6, scope: !5129, inlinedAt: !7419)
!7519 = !DILocation(line: 365, column: 26, scope: !5246, inlinedAt: !7419)
!7520 = !DILocation(line: 366, column: 6, scope: !5251, inlinedAt: !7419)
!7521 = !DILocation(line: 366, column: 11, scope: !5251, inlinedAt: !7419)
!7522 = !DILocation(line: 366, column: 6, scope: !5129, inlinedAt: !7419)
!7523 = !DILocation(line: 366, column: 26, scope: !5251, inlinedAt: !7419)
!7524 = !DILocation(line: 367, column: 6, scope: !5256, inlinedAt: !7419)
!7525 = !DILocation(line: 367, column: 11, scope: !5256, inlinedAt: !7419)
!7526 = !DILocation(line: 367, column: 6, scope: !5129, inlinedAt: !7419)
!7527 = !DILocation(line: 367, column: 26, scope: !5256, inlinedAt: !7419)
!7528 = !DILocation(line: 368, column: 6, scope: !5261, inlinedAt: !7419)
!7529 = !DILocation(line: 368, column: 11, scope: !5261, inlinedAt: !7419)
!7530 = !DILocation(line: 368, column: 6, scope: !5129, inlinedAt: !7419)
!7531 = !DILocation(line: 368, column: 26, scope: !5261, inlinedAt: !7419)
!7532 = !DILocation(line: 369, column: 6, scope: !5266, inlinedAt: !7419)
!7533 = !DILocation(line: 369, column: 11, scope: !5266, inlinedAt: !7419)
!7534 = !DILocation(line: 369, column: 6, scope: !5129, inlinedAt: !7419)
!7535 = !DILocation(line: 369, column: 26, scope: !5266, inlinedAt: !7419)
!7536 = !DILocation(line: 370, column: 6, scope: !5271, inlinedAt: !7419)
!7537 = !DILocation(line: 370, column: 11, scope: !5271, inlinedAt: !7419)
!7538 = !DILocation(line: 370, column: 6, scope: !5129, inlinedAt: !7419)
!7539 = !DILocation(line: 370, column: 26, scope: !5271, inlinedAt: !7419)
!7540 = !DILocation(line: 371, column: 6, scope: !5276, inlinedAt: !7419)
!7541 = !DILocation(line: 371, column: 11, scope: !5276, inlinedAt: !7419)
!7542 = !DILocation(line: 371, column: 6, scope: !5129, inlinedAt: !7419)
!7543 = !DILocation(line: 371, column: 26, scope: !5276, inlinedAt: !7419)
!7544 = !DILocation(line: 372, column: 6, scope: !5281, inlinedAt: !7419)
!7545 = !DILocation(line: 372, column: 11, scope: !5281, inlinedAt: !7419)
!7546 = !DILocation(line: 372, column: 6, scope: !5129, inlinedAt: !7419)
!7547 = !DILocation(line: 372, column: 26, scope: !5281, inlinedAt: !7419)
!7548 = !DILocation(line: 373, column: 6, scope: !5286, inlinedAt: !7419)
!7549 = !DILocation(line: 373, column: 11, scope: !5286, inlinedAt: !7419)
!7550 = !DILocation(line: 373, column: 6, scope: !5129, inlinedAt: !7419)
!7551 = !DILocation(line: 373, column: 26, scope: !5286, inlinedAt: !7419)
!7552 = !DILocation(line: 374, column: 6, scope: !5291, inlinedAt: !7419)
!7553 = !DILocation(line: 374, column: 11, scope: !5291, inlinedAt: !7419)
!7554 = !DILocation(line: 374, column: 6, scope: !5129, inlinedAt: !7419)
!7555 = !DILocation(line: 374, column: 26, scope: !5291, inlinedAt: !7419)
!7556 = !DILocation(line: 375, column: 6, scope: !5296, inlinedAt: !7419)
!7557 = !DILocation(line: 375, column: 11, scope: !5296, inlinedAt: !7419)
!7558 = !DILocation(line: 375, column: 6, scope: !5129, inlinedAt: !7419)
!7559 = !DILocation(line: 375, column: 27, scope: !5296, inlinedAt: !7419)
!7560 = !DILocation(line: 376, column: 6, scope: !5301, inlinedAt: !7419)
!7561 = !DILocation(line: 376, column: 11, scope: !5301, inlinedAt: !7419)
!7562 = !DILocation(line: 376, column: 6, scope: !5129, inlinedAt: !7419)
!7563 = !DILocation(line: 376, column: 32, scope: !5301, inlinedAt: !7419)
!7564 = !DILocation(line: 377, column: 6, scope: !5306, inlinedAt: !7419)
!7565 = !DILocation(line: 377, column: 11, scope: !5306, inlinedAt: !7419)
!7566 = !DILocation(line: 377, column: 6, scope: !5129, inlinedAt: !7419)
!7567 = !DILocation(line: 377, column: 32, scope: !5306, inlinedAt: !7419)
!7568 = !DILocation(line: 378, column: 6, scope: !5311, inlinedAt: !7419)
!7569 = !DILocation(line: 378, column: 11, scope: !5311, inlinedAt: !7419)
!7570 = !DILocation(line: 378, column: 6, scope: !5129, inlinedAt: !7419)
!7571 = !DILocation(line: 378, column: 32, scope: !5311, inlinedAt: !7419)
!7572 = !DILocation(line: 379, column: 6, scope: !5316, inlinedAt: !7419)
!7573 = !DILocation(line: 379, column: 11, scope: !5316, inlinedAt: !7419)
!7574 = !DILocation(line: 379, column: 6, scope: !5129, inlinedAt: !7419)
!7575 = !DILocation(line: 379, column: 33, scope: !5316, inlinedAt: !7419)
!7576 = !DILocation(line: 380, column: 6, scope: !5321, inlinedAt: !7419)
!7577 = !DILocation(line: 380, column: 11, scope: !5321, inlinedAt: !7419)
!7578 = !DILocation(line: 380, column: 6, scope: !5129, inlinedAt: !7419)
!7579 = !DILocation(line: 380, column: 33, scope: !5321, inlinedAt: !7419)
!7580 = !DILocation(line: 381, column: 6, scope: !5326, inlinedAt: !7419)
!7581 = !DILocation(line: 381, column: 11, scope: !5326, inlinedAt: !7419)
!7582 = !DILocation(line: 381, column: 6, scope: !5129, inlinedAt: !7419)
!7583 = !DILocation(line: 381, column: 33, scope: !5326, inlinedAt: !7419)
!7584 = !DILocation(line: 382, column: 2, scope: !5331, inlinedAt: !7419)
!7585 = !DILocation(line: 382, column: 2, scope: !5335, inlinedAt: !7419)
!7586 = !DILocation(line: 382, column: 2, scope: !5336, inlinedAt: !7419)
!7587 = !DILocation(line: 386, column: 1, scope: !5129, inlinedAt: !7419)
!7588 = !DILocation(line: 547, column: 9, scope: !5112, inlinedAt: !7412)
!7589 = !DILocation(line: 549, column: 8, scope: !5342, inlinedAt: !7412)
!7590 = !DILocation(line: 549, column: 7, scope: !5112, inlinedAt: !7412)
!7591 = !DILocation(line: 550, column: 4, scope: !5342, inlinedAt: !7412)
!7592 = !DILocation(line: 553, column: 33, scope: !5112, inlinedAt: !7412)
!7593 = !DILocation(line: 325, column: 6, scope: !5347, inlinedAt: !7417)
!7594 = !DILocation(line: 325, column: 6, scope: !5123, inlinedAt: !7417)
!7595 = !DILocation(line: 326, column: 3, scope: !5347, inlinedAt: !7417)
!7596 = !DILocation(line: 332, column: 9, scope: !5123, inlinedAt: !7417)
!7597 = !DILocation(line: 332, column: 15, scope: !5123, inlinedAt: !7417)
!7598 = !DILocation(line: 332, column: 2, scope: !5123, inlinedAt: !7417)
!7599 = !DILocation(line: 336, column: 1, scope: !5123, inlinedAt: !7417)
!7600 = !DILocation(line: 553, column: 5, scope: !5112, inlinedAt: !7412)
!7601 = !DILocation(line: 553, column: 41, scope: !5112, inlinedAt: !7412)
!7602 = !DILocation(line: 554, column: 5, scope: !5112, inlinedAt: !7412)
!7603 = !DILocation(line: 554, column: 12, scope: !5112, inlinedAt: !7412)
!7604 = !DILocation(line: 448, column: 31, scope: !5107, inlinedAt: !7411)
!7605 = !DILocation(line: 448, column: 34, scope: !5107, inlinedAt: !7411)
!7606 = !DILocation(line: 448, column: 14, scope: !5107, inlinedAt: !7411)
!7607 = !DILocation(line: 450, column: 22, scope: !5107, inlinedAt: !7411)
!7608 = !DILocation(line: 450, column: 25, scope: !5107, inlinedAt: !7411)
!7609 = !DILocation(line: 450, column: 30, scope: !5107, inlinedAt: !7411)
!7610 = !DILocation(line: 450, column: 36, scope: !5107, inlinedAt: !7411)
!7611 = !DILocation(line: 450, column: 8, scope: !5107, inlinedAt: !7411)
!7612 = !DILocation(line: 450, column: 6, scope: !5107, inlinedAt: !7411)
!7613 = !DILocation(line: 451, column: 9, scope: !5107, inlinedAt: !7411)
!7614 = !DILocation(line: 552, column: 3, scope: !5112, inlinedAt: !7412)
!7615 = !DILocation(line: 557, column: 19, scope: !5114, inlinedAt: !7412)
!7616 = !DILocation(line: 557, column: 25, scope: !5114, inlinedAt: !7412)
!7617 = !DILocation(line: 557, column: 9, scope: !5114, inlinedAt: !7412)
!7618 = !DILocation(line: 557, column: 2, scope: !5114, inlinedAt: !7412)
!7619 = !DILocation(line: 558, column: 1, scope: !5114, inlinedAt: !7412)
!7620 = !DILocation(line: 2330, column: 8, scope: !7407)
!7621 = !DILocation(line: 2330, column: 6, scope: !7407)
!7622 = !DILocation(line: 2331, column: 7, scope: !7623)
!7623 = distinct !DILexicalBlock(scope: !7407, file: !3, line: 2331, column: 6)
!7624 = !DILocation(line: 2331, column: 6, scope: !7407)
!7625 = !DILocation(line: 2332, column: 3, scope: !7623)
!7626 = !DILocation(line: 2334, column: 2, scope: !7407)
!7627 = !DILocation(line: 2334, column: 2, scope: !7628)
!7628 = distinct !DILexicalBlock(scope: !7407, file: !3, line: 2334, column: 2)
!7629 = !DILocation(line: 2335, column: 15, scope: !7407)
!7630 = !DILocation(line: 2335, column: 2, scope: !7407)
!7631 = !DILocation(line: 2335, column: 7, scope: !7407)
!7632 = !DILocation(line: 2335, column: 13, scope: !7407)
!7633 = !DILocation(line: 2336, column: 15, scope: !7407)
!7634 = !DILocation(line: 2336, column: 2, scope: !7407)
!7635 = !DILocation(line: 2336, column: 7, scope: !7407)
!7636 = !DILocation(line: 2336, column: 13, scope: !7407)
!7637 = !DILocation(line: 2338, column: 17, scope: !7407)
!7638 = !DILocation(line: 2338, column: 22, scope: !7407)
!7639 = !DILocation(line: 2338, column: 2, scope: !7407)
!7640 = !DILocation(line: 2339, column: 1, scope: !7407)
!7641 = distinct !DISubprogram(name: "__init_work", scope: !137, file: !137, line: 215, type: !7642, scopeLine: 215, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !239)
!7642 = !DISubroutineType(types: !7643)
!7643 = !{null, !1964, !251}
!7644 = !DILocalVariable(name: "work", arg: 1, scope: !7641, file: !137, line: 215, type: !1964)
!7645 = !DILocation(line: 215, column: 52, scope: !7641)
!7646 = !DILocalVariable(name: "onstack", arg: 2, scope: !7641, file: !137, line: 215, type: !251)
!7647 = !DILocation(line: 215, column: 62, scope: !7641)
!7648 = !DILocation(line: 215, column: 73, scope: !7641)
!7649 = distinct !DISubprogram(name: "acpi_table_events_fn", scope: !3, file: !3, line: 2305, type: !1962, scopeLine: 2306, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !239)
!7650 = !DILocalVariable(name: "work", arg: 1, scope: !7649, file: !3, line: 2305, type: !1964)
!7651 = !DILocation(line: 2305, column: 54, scope: !7649)
!7652 = !DILocalVariable(name: "tew", scope: !7649, file: !3, line: 2307, type: !4361)
!7653 = !DILocation(line: 2307, column: 33, scope: !7649)
!7654 = !DILocalVariable(name: "__mptr", scope: !7655, file: !3, line: 2309, type: !193)
!7655 = distinct !DILexicalBlock(scope: !7649, file: !3, line: 2309, column: 8)
!7656 = !DILocation(line: 2309, column: 8, scope: !7655)
!7657 = !DILocation(line: 2309, column: 8, scope: !7658)
!7658 = distinct !DILexicalBlock(scope: !7655, file: !3, line: 2309, column: 8)
!7659 = !DILocation(line: 2309, column: 6, scope: !7649)
!7660 = !DILocation(line: 2311, column: 6, scope: !7661)
!7661 = distinct !DILexicalBlock(scope: !7649, file: !3, line: 2311, column: 6)
!7662 = !DILocation(line: 2311, column: 11, scope: !7661)
!7663 = !DILocation(line: 2311, column: 17, scope: !7661)
!7664 = !DILocation(line: 2311, column: 6, scope: !7649)
!7665 = !DILocation(line: 2312, column: 3, scope: !7666)
!7666 = distinct !DILexicalBlock(scope: !7661, file: !3, line: 2311, column: 43)
!7667 = !DILocation(line: 2313, column: 3, scope: !7666)
!7668 = !DILocation(line: 2314, column: 3, scope: !7666)
!7669 = !DILocation(line: 2315, column: 2, scope: !7666)
!7670 = !DILocation(line: 2317, column: 8, scope: !7649)
!7671 = !DILocation(line: 2317, column: 2, scope: !7649)
!7672 = !DILocation(line: 2318, column: 1, scope: !7649)
!7673 = distinct !DISubprogram(name: "schedule_work", scope: !137, file: !137, line: 566, type: !7674, scopeLine: 567, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !239)
!7674 = !DISubroutineType(types: !7675)
!7675 = !{!482, !1964}
!7676 = !DILocalVariable(name: "work", arg: 1, scope: !7673, file: !137, line: 566, type: !1964)
!7677 = !DILocation(line: 566, column: 54, scope: !7673)
!7678 = !DILocation(line: 568, column: 20, scope: !7673)
!7679 = !DILocation(line: 568, column: 31, scope: !7673)
!7680 = !DILocation(line: 568, column: 9, scope: !7673)
!7681 = !DILocation(line: 568, column: 2, scope: !7673)
!7682 = distinct !DISubprogram(name: "acpi_reconfig_notifier_register", scope: !3, file: !3, line: 2341, type: !7683, scopeLine: 2342, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !239)
!7683 = !DISubroutineType(types: !7684)
!7684 = !{!251, !4477}
!7685 = !DILocalVariable(name: "nb", arg: 1, scope: !7682, file: !3, line: 2341, type: !4477)
!7686 = !DILocation(line: 2341, column: 60, scope: !7682)
!7687 = !DILocation(line: 2343, column: 64, scope: !7682)
!7688 = !DILocation(line: 2343, column: 9, scope: !7682)
!7689 = !DILocation(line: 2343, column: 2, scope: !7682)
!7690 = distinct !DISubprogram(name: "acpi_reconfig_notifier_unregister", scope: !3, file: !3, line: 2347, type: !7683, scopeLine: 2348, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !239)
!7691 = !DILocalVariable(name: "nb", arg: 1, scope: !7690, file: !3, line: 2347, type: !4477)
!7692 = !DILocation(line: 2347, column: 62, scope: !7690)
!7693 = !DILocation(line: 2349, column: 66, scope: !7690)
!7694 = !DILocation(line: 2349, column: 9, scope: !7690)
!7695 = !DILocation(line: 2349, column: 2, scope: !7690)
!7696 = distinct !DISubprogram(name: "__list_add", scope: !4560, file: !4560, line: 63, type: !7697, scopeLine: 66, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !239)
!7697 = !DISubroutineType(types: !7698)
!7698 = !{null, !203, !203, !203}
!7699 = !DILocalVariable(name: "new", arg: 1, scope: !7696, file: !4560, line: 63, type: !203)
!7700 = !DILocation(line: 63, column: 49, scope: !7696)
!7701 = !DILocalVariable(name: "prev", arg: 2, scope: !7696, file: !4560, line: 64, type: !203)
!7702 = !DILocation(line: 64, column: 28, scope: !7696)
!7703 = !DILocalVariable(name: "next", arg: 3, scope: !7696, file: !4560, line: 65, type: !203)
!7704 = !DILocation(line: 65, column: 28, scope: !7696)
!7705 = !DILocation(line: 67, column: 24, scope: !7706)
!7706 = distinct !DILexicalBlock(scope: !7696, file: !4560, line: 67, column: 6)
!7707 = !DILocation(line: 67, column: 29, scope: !7706)
!7708 = !DILocation(line: 67, column: 35, scope: !7706)
!7709 = !DILocation(line: 67, column: 7, scope: !7706)
!7710 = !DILocation(line: 67, column: 6, scope: !7696)
!7711 = !DILocation(line: 68, column: 3, scope: !7706)
!7712 = !DILocation(line: 70, column: 15, scope: !7696)
!7713 = !DILocation(line: 70, column: 2, scope: !7696)
!7714 = !DILocation(line: 70, column: 8, scope: !7696)
!7715 = !DILocation(line: 70, column: 13, scope: !7696)
!7716 = !DILocation(line: 71, column: 14, scope: !7696)
!7717 = !DILocation(line: 71, column: 2, scope: !7696)
!7718 = !DILocation(line: 71, column: 7, scope: !7696)
!7719 = !DILocation(line: 71, column: 12, scope: !7696)
!7720 = !DILocation(line: 72, column: 14, scope: !7696)
!7721 = !DILocation(line: 72, column: 2, scope: !7696)
!7722 = !DILocation(line: 72, column: 7, scope: !7696)
!7723 = !DILocation(line: 72, column: 12, scope: !7696)
!7724 = !DILocation(line: 73, column: 2, scope: !7696)
!7725 = !DILocation(line: 73, column: 2, scope: !7726)
!7726 = distinct !DILexicalBlock(scope: !7696, file: !4560, line: 73, column: 2)
!7727 = !DILocation(line: 73, column: 2, scope: !7728)
!7728 = distinct !DILexicalBlock(scope: !7726, file: !4560, line: 73, column: 2)
!7729 = !DILocation(line: 73, column: 2, scope: !7730)
!7730 = distinct !DILexicalBlock(scope: !7726, file: !4560, line: 73, column: 2)
!7731 = !DILocation(line: 74, column: 1, scope: !7696)
!7732 = distinct !DISubprogram(name: "__list_add_valid", scope: !4560, file: !4560, line: 45, type: !7733, scopeLine: 48, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !239)
!7733 = !DISubroutineType(types: !7734)
!7734 = !{!482, !203, !203, !203}
!7735 = !DILocalVariable(name: "new", arg: 1, scope: !7732, file: !4560, line: 45, type: !203)
!7736 = !DILocation(line: 45, column: 55, scope: !7732)
!7737 = !DILocalVariable(name: "prev", arg: 2, scope: !7732, file: !4560, line: 46, type: !203)
!7738 = !DILocation(line: 46, column: 23, scope: !7732)
!7739 = !DILocalVariable(name: "next", arg: 3, scope: !7732, file: !4560, line: 47, type: !203)
!7740 = !DILocation(line: 47, column: 23, scope: !7732)
!7741 = !DILocation(line: 49, column: 2, scope: !7732)
!7742 = distinct !DISubprogram(name: "acpi_scan_bus_check", scope: !3, file: !3, line: 342, type: !4262, scopeLine: 343, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !239)
!7743 = !DILocalVariable(name: "adev", arg: 1, scope: !7742, file: !3, line: 342, type: !4035)
!7744 = !DILocation(line: 342, column: 52, scope: !7742)
!7745 = !DILocalVariable(name: "handler", scope: !7742, file: !3, line: 344, type: !4236)
!7746 = !DILocation(line: 344, column: 28, scope: !7742)
!7747 = !DILocation(line: 344, column: 38, scope: !7742)
!7748 = !DILocation(line: 344, column: 44, scope: !7742)
!7749 = !DILocalVariable(name: "child", scope: !7742, file: !3, line: 345, type: !4035)
!7750 = !DILocation(line: 345, column: 22, scope: !7742)
!7751 = !DILocalVariable(name: "error", scope: !7742, file: !3, line: 346, type: !251)
!7752 = !DILocation(line: 346, column: 6, scope: !7742)
!7753 = !DILocation(line: 348, column: 22, scope: !7742)
!7754 = !DILocation(line: 348, column: 2, scope: !7742)
!7755 = !DILocation(line: 349, column: 8, scope: !7756)
!7756 = distinct !DILexicalBlock(scope: !7742, file: !3, line: 349, column: 6)
!7757 = !DILocation(line: 349, column: 14, scope: !7756)
!7758 = !DILocation(line: 349, column: 21, scope: !7756)
!7759 = !DILocation(line: 349, column: 29, scope: !7756)
!7760 = !DILocation(line: 349, column: 32, scope: !7756)
!7761 = !DILocation(line: 349, column: 38, scope: !7756)
!7762 = !DILocation(line: 349, column: 45, scope: !7756)
!7763 = !DILocation(line: 349, column: 6, scope: !7742)
!7764 = !DILocation(line: 350, column: 32, scope: !7765)
!7765 = distinct !DILexicalBlock(scope: !7756, file: !3, line: 349, column: 58)
!7766 = !DILocation(line: 350, column: 3, scope: !7765)
!7767 = !DILocation(line: 351, column: 3, scope: !7765)
!7768 = !DILocation(line: 353, column: 6, scope: !7769)
!7769 = distinct !DILexicalBlock(scope: !7742, file: !3, line: 353, column: 6)
!7770 = !DILocation(line: 353, column: 14, scope: !7769)
!7771 = !DILocation(line: 353, column: 17, scope: !7769)
!7772 = !DILocation(line: 353, column: 26, scope: !7769)
!7773 = !DILocation(line: 353, column: 34, scope: !7769)
!7774 = !DILocation(line: 353, column: 6, scope: !7742)
!7775 = !DILocation(line: 354, column: 10, scope: !7769)
!7776 = !DILocation(line: 354, column: 19, scope: !7769)
!7777 = !DILocation(line: 354, column: 27, scope: !7769)
!7778 = !DILocation(line: 354, column: 42, scope: !7769)
!7779 = !DILocation(line: 354, column: 3, scope: !7769)
!7780 = !DILocation(line: 356, column: 24, scope: !7742)
!7781 = !DILocation(line: 356, column: 30, scope: !7742)
!7782 = !DILocation(line: 356, column: 10, scope: !7742)
!7783 = !DILocation(line: 356, column: 8, scope: !7742)
!7784 = !DILocation(line: 357, column: 6, scope: !7785)
!7785 = distinct !DILexicalBlock(scope: !7742, file: !3, line: 357, column: 6)
!7786 = !DILocation(line: 357, column: 6, scope: !7742)
!7787 = !DILocation(line: 358, column: 3, scope: !7788)
!7788 = distinct !DILexicalBlock(scope: !7785, file: !3, line: 357, column: 13)
!7789 = !DILocation(line: 359, column: 10, scope: !7788)
!7790 = !DILocation(line: 359, column: 3, scope: !7788)
!7791 = !DILocalVariable(name: "__mptr", scope: !7792, file: !3, line: 361, type: !193)
!7792 = distinct !DILexicalBlock(scope: !7793, file: !3, line: 361, column: 2)
!7793 = distinct !DILexicalBlock(scope: !7742, file: !3, line: 361, column: 2)
!7794 = !DILocation(line: 361, column: 2, scope: !7792)
!7795 = !DILocation(line: 361, column: 2, scope: !7796)
!7796 = distinct !DILexicalBlock(scope: !7792, file: !3, line: 361, column: 2)
!7797 = !DILocation(line: 361, column: 2, scope: !7793)
!7798 = !DILocation(line: 361, column: 2, scope: !7799)
!7799 = distinct !DILexicalBlock(scope: !7793, file: !3, line: 361, column: 2)
!7800 = !DILocation(line: 362, column: 31, scope: !7801)
!7801 = distinct !DILexicalBlock(scope: !7799, file: !3, line: 361, column: 52)
!7802 = !DILocation(line: 362, column: 11, scope: !7801)
!7803 = !DILocation(line: 362, column: 9, scope: !7801)
!7804 = !DILocation(line: 363, column: 7, scope: !7805)
!7805 = distinct !DILexicalBlock(scope: !7801, file: !3, line: 363, column: 7)
!7806 = !DILocation(line: 363, column: 7, scope: !7801)
!7807 = !DILocation(line: 364, column: 11, scope: !7805)
!7808 = !DILocation(line: 364, column: 4, scope: !7805)
!7809 = !DILocation(line: 365, column: 2, scope: !7801)
!7810 = !DILocalVariable(name: "__mptr", scope: !7811, file: !3, line: 361, type: !193)
!7811 = distinct !DILexicalBlock(scope: !7799, file: !3, line: 361, column: 2)
!7812 = !DILocation(line: 361, column: 2, scope: !7811)
!7813 = !DILocation(line: 361, column: 2, scope: !7814)
!7814 = distinct !DILexicalBlock(scope: !7811, file: !3, line: 361, column: 2)
!7815 = distinct !{!7815, !7797, !7816}
!7816 = !DILocation(line: 365, column: 2, scope: !7793)
!7817 = !DILocation(line: 366, column: 2, scope: !7742)
!7818 = !DILocation(line: 367, column: 1, scope: !7742)
!7819 = distinct !DISubprogram(name: "acpi_scan_device_check", scope: !3, file: !3, line: 309, type: !4262, scopeLine: 310, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !239)
!7820 = !DILocalVariable(name: "adev", arg: 1, scope: !7819, file: !3, line: 309, type: !4035)
!7821 = !DILocation(line: 309, column: 55, scope: !7819)
!7822 = !DILocalVariable(name: "error", scope: !7819, file: !3, line: 311, type: !251)
!7823 = !DILocation(line: 311, column: 6, scope: !7819)
!7824 = !DILocation(line: 313, column: 22, scope: !7819)
!7825 = !DILocation(line: 313, column: 2, scope: !7819)
!7826 = !DILocation(line: 314, column: 6, scope: !7827)
!7827 = distinct !DILexicalBlock(scope: !7819, file: !3, line: 314, column: 6)
!7828 = !DILocation(line: 314, column: 12, scope: !7827)
!7829 = !DILocation(line: 314, column: 19, scope: !7827)
!7830 = !DILocation(line: 314, column: 27, scope: !7827)
!7831 = !DILocation(line: 314, column: 30, scope: !7827)
!7832 = !DILocation(line: 314, column: 36, scope: !7827)
!7833 = !DILocation(line: 314, column: 43, scope: !7827)
!7834 = !DILocation(line: 314, column: 6, scope: !7819)
!7835 = !DILocation(line: 323, column: 7, scope: !7836)
!7836 = distinct !DILexicalBlock(scope: !7837, file: !3, line: 323, column: 7)
!7837 = distinct !DILexicalBlock(scope: !7827, file: !3, line: 314, column: 55)
!7838 = !DILocation(line: 323, column: 13, scope: !7836)
!7839 = !DILocation(line: 323, column: 7, scope: !7837)
!7840 = !DILocation(line: 324, column: 4, scope: !7841)
!7841 = distinct !DILexicalBlock(scope: !7836, file: !3, line: 323, column: 22)
!7842 = !DILocation(line: 325, column: 4, scope: !7841)
!7843 = !DILocation(line: 327, column: 25, scope: !7837)
!7844 = !DILocation(line: 327, column: 31, scope: !7837)
!7845 = !DILocation(line: 327, column: 11, scope: !7837)
!7846 = !DILocation(line: 327, column: 9, scope: !7837)
!7847 = !DILocation(line: 328, column: 7, scope: !7848)
!7848 = distinct !DILexicalBlock(scope: !7837, file: !3, line: 328, column: 7)
!7849 = !DILocation(line: 328, column: 7, scope: !7837)
!7850 = !DILocation(line: 329, column: 4, scope: !7851)
!7851 = distinct !DILexicalBlock(scope: !7848, file: !3, line: 328, column: 14)
!7852 = !DILocation(line: 330, column: 11, scope: !7851)
!7853 = !DILocation(line: 330, column: 4, scope: !7851)
!7854 = !DILocation(line: 332, column: 8, scope: !7855)
!7855 = distinct !DILexicalBlock(scope: !7837, file: !3, line: 332, column: 7)
!7856 = !DILocation(line: 332, column: 14, scope: !7855)
!7857 = !DILocation(line: 332, column: 7, scope: !7837)
!7858 = !DILocation(line: 333, column: 4, scope: !7859)
!7859 = distinct !DILexicalBlock(scope: !7855, file: !3, line: 332, column: 23)
!7860 = !DILocation(line: 334, column: 10, scope: !7859)
!7861 = !DILocation(line: 335, column: 3, scope: !7859)
!7862 = !DILocation(line: 336, column: 2, scope: !7837)
!7863 = !DILocation(line: 337, column: 40, scope: !7864)
!7864 = distinct !DILexicalBlock(scope: !7827, file: !3, line: 336, column: 9)
!7865 = !DILocation(line: 337, column: 11, scope: !7864)
!7866 = !DILocation(line: 337, column: 9, scope: !7864)
!7867 = !DILocation(line: 339, column: 9, scope: !7819)
!7868 = !DILocation(line: 339, column: 2, scope: !7819)
!7869 = !DILocation(line: 340, column: 1, scope: !7819)
!7870 = distinct !DISubprogram(name: "acpi_scan_hot_remove", scope: !3, file: !3, line: 253, type: !4262, scopeLine: 254, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !239)
!7871 = !DILocalVariable(name: "device", arg: 1, scope: !7870, file: !3, line: 253, type: !4035)
!7872 = !DILocation(line: 253, column: 53, scope: !7870)
!7873 = !DILocalVariable(name: "handle", scope: !7870, file: !3, line: 255, type: !4017)
!7874 = !DILocation(line: 255, column: 14, scope: !7870)
!7875 = !DILocation(line: 255, column: 23, scope: !7870)
!7876 = !DILocation(line: 255, column: 31, scope: !7870)
!7877 = !DILocalVariable(name: "sta", scope: !7870, file: !3, line: 256, type: !415)
!7878 = !DILocation(line: 256, column: 21, scope: !7870)
!7879 = !DILocalVariable(name: "status", scope: !7870, file: !3, line: 257, type: !4358)
!7880 = !DILocation(line: 257, column: 14, scope: !7870)
!7881 = !DILocation(line: 259, column: 6, scope: !7882)
!7882 = distinct !DILexicalBlock(scope: !7870, file: !3, line: 259, column: 6)
!7883 = !DILocation(line: 259, column: 14, scope: !7882)
!7884 = !DILocation(line: 259, column: 22, scope: !7882)
!7885 = !DILocation(line: 259, column: 25, scope: !7882)
!7886 = !DILocation(line: 259, column: 33, scope: !7882)
!7887 = !DILocation(line: 259, column: 42, scope: !7882)
!7888 = !DILocation(line: 259, column: 50, scope: !7882)
!7889 = !DILocation(line: 259, column: 6, scope: !7870)
!7890 = !DILocation(line: 260, column: 29, scope: !7891)
!7891 = distinct !DILexicalBlock(scope: !7892, file: !3, line: 260, column: 7)
!7892 = distinct !DILexicalBlock(scope: !7882, file: !3, line: 259, column: 66)
!7893 = !DILocation(line: 260, column: 8, scope: !7891)
!7894 = !DILocation(line: 260, column: 7, scope: !7892)
!7895 = !DILocation(line: 261, column: 4, scope: !7891)
!7896 = !DILocation(line: 262, column: 2, scope: !7892)
!7897 = !DILocalVariable(name: "error", scope: !7898, file: !3, line: 263, type: !251)
!7898 = distinct !DILexicalBlock(scope: !7882, file: !3, line: 262, column: 9)
!7899 = !DILocation(line: 263, column: 7, scope: !7898)
!7900 = !DILocation(line: 263, column: 40, scope: !7898)
!7901 = !DILocation(line: 263, column: 15, scope: !7898)
!7902 = !DILocation(line: 264, column: 7, scope: !7903)
!7903 = distinct !DILexicalBlock(scope: !7898, file: !3, line: 264, column: 7)
!7904 = !DILocation(line: 264, column: 7, scope: !7898)
!7905 = !DILocation(line: 265, column: 11, scope: !7903)
!7906 = !DILocation(line: 265, column: 4, scope: !7903)
!7907 = !DILocation(line: 271, column: 16, scope: !7870)
!7908 = !DILocation(line: 271, column: 2, scope: !7870)
!7909 = !DILocation(line: 273, column: 20, scope: !7870)
!7910 = !DILocation(line: 273, column: 2, scope: !7870)
!7911 = !DILocation(line: 277, column: 29, scope: !7870)
!7912 = !DILocation(line: 277, column: 11, scope: !7870)
!7913 = !DILocation(line: 277, column: 9, scope: !7870)
!7914 = !DILocation(line: 278, column: 6, scope: !7915)
!7915 = distinct !DILexicalBlock(scope: !7870, file: !3, line: 278, column: 6)
!7916 = !DILocation(line: 278, column: 13, scope: !7915)
!7917 = !DILocation(line: 278, column: 6, scope: !7870)
!7918 = !DILocation(line: 279, column: 3, scope: !7915)
!7919 = !DILocation(line: 280, column: 11, scope: !7920)
!7920 = distinct !DILexicalBlock(scope: !7915, file: !3, line: 280, column: 11)
!7921 = !DILocation(line: 280, column: 11, scope: !7915)
!7922 = !DILocation(line: 281, column: 3, scope: !7920)
!7923 = !DILocation(line: 287, column: 33, scope: !7870)
!7924 = !DILocation(line: 287, column: 11, scope: !7870)
!7925 = !DILocation(line: 287, column: 9, scope: !7870)
!7926 = !DILocation(line: 288, column: 6, scope: !7927)
!7927 = distinct !DILexicalBlock(scope: !7870, file: !3, line: 288, column: 6)
!7928 = !DILocation(line: 288, column: 6, scope: !7870)
!7929 = !DILocation(line: 289, column: 3, scope: !7930)
!7930 = distinct !DILexicalBlock(scope: !7927, file: !3, line: 288, column: 28)
!7931 = !DILocation(line: 291, column: 2, scope: !7930)
!7932 = !DILocation(line: 291, column: 13, scope: !7933)
!7933 = distinct !DILexicalBlock(scope: !7927, file: !3, line: 291, column: 13)
!7934 = !DILocation(line: 291, column: 17, scope: !7933)
!7935 = !DILocation(line: 291, column: 13, scope: !7927)
!7936 = !DILocation(line: 292, column: 3, scope: !7937)
!7937 = distinct !DILexicalBlock(scope: !7933, file: !3, line: 291, column: 44)
!7938 = !DILocation(line: 294, column: 2, scope: !7937)
!7939 = !DILocation(line: 296, column: 2, scope: !7870)
!7940 = !DILocation(line: 297, column: 1, scope: !7870)
!7941 = distinct !DISubprogram(name: "acpi_scan_device_not_present", scope: !3, file: !3, line: 299, type: !4262, scopeLine: 300, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !239)
!7942 = !DILocalVariable(name: "adev", arg: 1, scope: !7941, file: !3, line: 299, type: !4035)
!7943 = !DILocation(line: 299, column: 61, scope: !7941)
!7944 = !DILocation(line: 301, column: 30, scope: !7945)
!7945 = distinct !DILexicalBlock(scope: !7941, file: !3, line: 301, column: 6)
!7946 = !DILocation(line: 301, column: 7, scope: !7945)
!7947 = !DILocation(line: 301, column: 6, scope: !7941)
!7948 = !DILocation(line: 302, column: 3, scope: !7949)
!7949 = distinct !DILexicalBlock(scope: !7945, file: !3, line: 301, column: 37)
!7950 = !DILocation(line: 303, column: 3, scope: !7949)
!7951 = !DILocation(line: 305, column: 16, scope: !7941)
!7952 = !DILocation(line: 305, column: 2, scope: !7941)
!7953 = !DILocation(line: 306, column: 2, scope: !7941)
!7954 = !DILocation(line: 307, column: 1, scope: !7941)
!7955 = distinct !DISubprogram(name: "acpi_device_enumerated", scope: !175, file: !175, line: 541, type: !4444, scopeLine: 542, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !239)
!7956 = !DILocalVariable(name: "adev", arg: 1, scope: !7955, file: !175, line: 541, type: !4035)
!7957 = !DILocation(line: 541, column: 63, scope: !7955)
!7958 = !DILocation(line: 543, column: 9, scope: !7955)
!7959 = !DILocation(line: 543, column: 14, scope: !7955)
!7960 = !DILocation(line: 543, column: 17, scope: !7955)
!7961 = !DILocation(line: 543, column: 23, scope: !7955)
!7962 = !DILocation(line: 543, column: 29, scope: !7955)
!7963 = !DILocation(line: 543, column: 41, scope: !7955)
!7964 = !DILocation(line: 543, column: 44, scope: !7955)
!7965 = !DILocation(line: 543, column: 50, scope: !7955)
!7966 = !DILocation(line: 543, column: 56, scope: !7955)
!7967 = !DILocation(line: 0, scope: !7955)
!7968 = !DILocation(line: 543, column: 2, scope: !7955)
!7969 = distinct !DISubprogram(name: "acpi_scan_try_to_offline", scope: !3, file: !3, line: 207, type: !4262, scopeLine: 208, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !239)
!7970 = !DILocalVariable(name: "device", arg: 1, scope: !7969, file: !3, line: 207, type: !4035)
!7971 = !DILocation(line: 207, column: 57, scope: !7969)
!7972 = !DILocalVariable(name: "handle", scope: !7969, file: !3, line: 209, type: !4017)
!7973 = !DILocation(line: 209, column: 14, scope: !7969)
!7974 = !DILocation(line: 209, column: 23, scope: !7969)
!7975 = !DILocation(line: 209, column: 31, scope: !7969)
!7976 = !DILocalVariable(name: "errdev", scope: !7969, file: !3, line: 210, type: !206)
!7977 = !DILocation(line: 210, column: 17, scope: !7969)
!7978 = !DILocalVariable(name: "status", scope: !7969, file: !3, line: 211, type: !4358)
!7979 = !DILocation(line: 211, column: 14, scope: !7969)
!7980 = !DILocation(line: 222, column: 46, scope: !7969)
!7981 = !DILocation(line: 224, column: 10, scope: !7969)
!7982 = !DILocation(line: 222, column: 11, scope: !7969)
!7983 = !DILocation(line: 222, column: 9, scope: !7969)
!7984 = !DILocation(line: 225, column: 6, scope: !7985)
!7985 = distinct !DILexicalBlock(scope: !7969, file: !3, line: 225, column: 6)
!7986 = !DILocation(line: 225, column: 13, scope: !7985)
!7987 = !DILocation(line: 225, column: 6, scope: !7969)
!7988 = !DILocation(line: 226, column: 3, scope: !7989)
!7989 = distinct !DILexicalBlock(scope: !7985, file: !3, line: 225, column: 28)
!7990 = !DILocation(line: 227, column: 38, scope: !7989)
!7991 = !DILocation(line: 227, column: 3, scope: !7989)
!7992 = !DILocation(line: 229, column: 3, scope: !7989)
!7993 = !DILocation(line: 231, column: 19, scope: !7969)
!7994 = !DILocation(line: 231, column: 45, scope: !7969)
!7995 = !DILocation(line: 231, column: 2, scope: !7969)
!7996 = !DILocation(line: 232, column: 6, scope: !7997)
!7997 = distinct !DILexicalBlock(scope: !7969, file: !3, line: 232, column: 6)
!7998 = !DILocation(line: 232, column: 6, scope: !7969)
!7999 = !DILocation(line: 233, column: 10, scope: !8000)
!8000 = distinct !DILexicalBlock(scope: !7997, file: !3, line: 232, column: 14)
!8001 = !DILocation(line: 234, column: 38, scope: !8000)
!8002 = !DILocation(line: 236, column: 9, scope: !8000)
!8003 = !DILocation(line: 234, column: 3, scope: !8000)
!8004 = !DILocation(line: 237, column: 8, scope: !8005)
!8005 = distinct !DILexicalBlock(scope: !8000, file: !3, line: 237, column: 7)
!8006 = !DILocation(line: 237, column: 7, scope: !8000)
!8007 = !DILocation(line: 238, column: 21, scope: !8005)
!8008 = !DILocation(line: 239, column: 7, scope: !8005)
!8009 = !DILocation(line: 238, column: 4, scope: !8005)
!8010 = !DILocation(line: 241, column: 7, scope: !8011)
!8011 = distinct !DILexicalBlock(scope: !8000, file: !3, line: 241, column: 7)
!8012 = !DILocation(line: 241, column: 7, scope: !8000)
!8013 = !DILocation(line: 242, column: 4, scope: !8014)
!8014 = distinct !DILexicalBlock(scope: !8011, file: !3, line: 241, column: 15)
!8015 = !DILocation(line: 243, column: 20, scope: !8014)
!8016 = !DILocation(line: 243, column: 4, scope: !8014)
!8017 = !DILocation(line: 244, column: 39, scope: !8014)
!8018 = !DILocation(line: 244, column: 4, scope: !8014)
!8019 = !DILocation(line: 247, column: 4, scope: !8014)
!8020 = !DILocation(line: 249, column: 2, scope: !8000)
!8021 = !DILocation(line: 250, column: 2, scope: !7969)
!8022 = !DILocation(line: 251, column: 1, scope: !7969)
!8023 = distinct !DISubprogram(name: "acpi_bus_offline", scope: !3, file: !3, line: 140, type: !5598, scopeLine: 142, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !239)
!8024 = !DILocalVariable(name: "handle", arg: 1, scope: !8023, file: !3, line: 140, type: !4017)
!8025 = !DILocation(line: 140, column: 49, scope: !8023)
!8026 = !DILocalVariable(name: "lvl", arg: 2, scope: !8023, file: !3, line: 140, type: !407)
!8027 = !DILocation(line: 140, column: 61, scope: !8023)
!8028 = !DILocalVariable(name: "data", arg: 3, scope: !8023, file: !3, line: 140, type: !193)
!8029 = !DILocation(line: 140, column: 72, scope: !8023)
!8030 = !DILocalVariable(name: "ret_p", arg: 4, scope: !8023, file: !3, line: 141, type: !817)
!8031 = !DILocation(line: 141, column: 16, scope: !8023)
!8032 = !DILocalVariable(name: "device", scope: !8023, file: !3, line: 143, type: !4035)
!8033 = !DILocation(line: 143, column: 22, scope: !8023)
!8034 = !DILocalVariable(name: "pn", scope: !8023, file: !3, line: 144, type: !194)
!8035 = !DILocation(line: 144, column: 36, scope: !8023)
!8036 = !DILocalVariable(name: "second_pass", scope: !8023, file: !3, line: 145, type: !482)
!8037 = !DILocation(line: 145, column: 7, scope: !8023)
!8038 = !DILocation(line: 145, column: 27, scope: !8023)
!8039 = !DILocation(line: 145, column: 21, scope: !8023)
!8040 = !DILocalVariable(name: "status", scope: !8023, file: !3, line: 146, type: !4358)
!8041 = !DILocation(line: 146, column: 14, scope: !8023)
!8042 = !DILocation(line: 148, column: 26, scope: !8043)
!8043 = distinct !DILexicalBlock(scope: !8023, file: !3, line: 148, column: 6)
!8044 = !DILocation(line: 148, column: 6, scope: !8043)
!8045 = !DILocation(line: 148, column: 6, scope: !8023)
!8046 = !DILocation(line: 149, column: 3, scope: !8043)
!8047 = !DILocation(line: 151, column: 6, scope: !8048)
!8048 = distinct !DILexicalBlock(scope: !8023, file: !3, line: 151, column: 6)
!8049 = !DILocation(line: 151, column: 14, scope: !8048)
!8050 = !DILocation(line: 151, column: 22, scope: !8048)
!8051 = !DILocation(line: 151, column: 26, scope: !8048)
!8052 = !DILocation(line: 151, column: 34, scope: !8048)
!8053 = !DILocation(line: 151, column: 43, scope: !8048)
!8054 = !DILocation(line: 151, column: 51, scope: !8048)
!8055 = !DILocation(line: 151, column: 6, scope: !8023)
!8056 = !DILocation(line: 152, column: 13, scope: !8057)
!8057 = distinct !DILexicalBlock(scope: !8048, file: !3, line: 151, column: 60)
!8058 = !DILocation(line: 152, column: 21, scope: !8057)
!8059 = !DILocation(line: 152, column: 12, scope: !8057)
!8060 = !DILocation(line: 152, column: 4, scope: !8057)
!8061 = !DILocation(line: 152, column: 10, scope: !8057)
!8062 = !DILocation(line: 153, column: 3, scope: !8057)
!8063 = !DILocation(line: 156, column: 14, scope: !8023)
!8064 = !DILocation(line: 156, column: 22, scope: !8023)
!8065 = !DILocation(line: 156, column: 2, scope: !8023)
!8066 = !DILocalVariable(name: "__mptr", scope: !8067, file: !3, line: 158, type: !193)
!8067 = distinct !DILexicalBlock(scope: !8068, file: !3, line: 158, column: 2)
!8068 = distinct !DILexicalBlock(scope: !8023, file: !3, line: 158, column: 2)
!8069 = !DILocation(line: 158, column: 2, scope: !8067)
!8070 = !DILocation(line: 158, column: 2, scope: !8071)
!8071 = distinct !DILexicalBlock(scope: !8067, file: !3, line: 158, column: 2)
!8072 = !DILocation(line: 158, column: 2, scope: !8068)
!8073 = !DILocation(line: 158, column: 2, scope: !8074)
!8074 = distinct !DILexicalBlock(scope: !8068, file: !3, line: 158, column: 2)
!8075 = !DILocalVariable(name: "ret", scope: !8076, file: !3, line: 159, type: !251)
!8076 = distinct !DILexicalBlock(scope: !8074, file: !3, line: 158, column: 61)
!8077 = !DILocation(line: 159, column: 7, scope: !8076)
!8078 = !DILocation(line: 161, column: 7, scope: !8079)
!8079 = distinct !DILexicalBlock(scope: !8076, file: !3, line: 161, column: 7)
!8080 = !DILocation(line: 161, column: 7, scope: !8076)
!8081 = !DILocation(line: 163, column: 8, scope: !8082)
!8082 = distinct !DILexicalBlock(scope: !8083, file: !3, line: 163, column: 8)
!8083 = distinct !DILexicalBlock(scope: !8079, file: !3, line: 161, column: 20)
!8084 = !DILocation(line: 163, column: 12, scope: !8082)
!8085 = !DILocation(line: 163, column: 8, scope: !8083)
!8086 = !DILocation(line: 164, column: 5, scope: !8082)
!8087 = !DILocation(line: 165, column: 3, scope: !8083)
!8088 = !DILocation(line: 166, column: 4, scope: !8089)
!8089 = distinct !DILexicalBlock(scope: !8079, file: !3, line: 165, column: 10)
!8090 = !DILocation(line: 166, column: 8, scope: !8089)
!8091 = !DILocation(line: 166, column: 19, scope: !8089)
!8092 = !DILocation(line: 168, column: 24, scope: !8076)
!8093 = !DILocation(line: 168, column: 28, scope: !8076)
!8094 = !DILocation(line: 168, column: 9, scope: !8076)
!8095 = !DILocation(line: 168, column: 7, scope: !8076)
!8096 = !DILocation(line: 169, column: 7, scope: !8097)
!8097 = distinct !DILexicalBlock(scope: !8076, file: !3, line: 169, column: 7)
!8098 = !DILocation(line: 169, column: 11, scope: !8097)
!8099 = !DILocation(line: 169, column: 7, scope: !8076)
!8100 = !DILocation(line: 170, column: 22, scope: !8101)
!8101 = distinct !DILexicalBlock(scope: !8097, file: !3, line: 169, column: 17)
!8102 = !DILocation(line: 170, column: 21, scope: !8101)
!8103 = !DILocation(line: 170, column: 4, scope: !8101)
!8104 = !DILocation(line: 170, column: 8, scope: !8101)
!8105 = !DILocation(line: 170, column: 19, scope: !8101)
!8106 = !DILocation(line: 171, column: 3, scope: !8101)
!8107 = !DILocation(line: 172, column: 13, scope: !8108)
!8108 = distinct !DILexicalBlock(scope: !8097, file: !3, line: 171, column: 10)
!8109 = !DILocation(line: 172, column: 17, scope: !8108)
!8110 = !DILocation(line: 172, column: 5, scope: !8108)
!8111 = !DILocation(line: 172, column: 11, scope: !8108)
!8112 = !DILocation(line: 173, column: 8, scope: !8113)
!8113 = distinct !DILexicalBlock(scope: !8108, file: !3, line: 173, column: 8)
!8114 = !DILocation(line: 173, column: 8, scope: !8108)
!8115 = !DILocation(line: 174, column: 12, scope: !8116)
!8116 = distinct !DILexicalBlock(scope: !8113, file: !3, line: 173, column: 21)
!8117 = !DILocation(line: 175, column: 5, scope: !8116)
!8118 = !DILocation(line: 178, column: 2, scope: !8076)
!8119 = !DILocalVariable(name: "__mptr", scope: !8120, file: !3, line: 158, type: !193)
!8120 = distinct !DILexicalBlock(scope: !8074, file: !3, line: 158, column: 2)
!8121 = !DILocation(line: 158, column: 2, scope: !8120)
!8122 = !DILocation(line: 158, column: 2, scope: !8123)
!8123 = distinct !DILexicalBlock(scope: !8120, file: !3, line: 158, column: 2)
!8124 = distinct !{!8124, !8072, !8125}
!8125 = !DILocation(line: 178, column: 2, scope: !8068)
!8126 = !DILocation(line: 180, column: 16, scope: !8023)
!8127 = !DILocation(line: 180, column: 24, scope: !8023)
!8128 = !DILocation(line: 180, column: 2, scope: !8023)
!8129 = !DILocation(line: 182, column: 9, scope: !8023)
!8130 = !DILocation(line: 182, column: 2, scope: !8023)
!8131 = !DILocation(line: 183, column: 1, scope: !8023)
!8132 = distinct !DISubprogram(name: "acpi_bus_online", scope: !3, file: !3, line: 185, type: !5598, scopeLine: 187, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !239)
!8133 = !DILocalVariable(name: "handle", arg: 1, scope: !8132, file: !3, line: 185, type: !4017)
!8134 = !DILocation(line: 185, column: 48, scope: !8132)
!8135 = !DILocalVariable(name: "lvl", arg: 2, scope: !8132, file: !3, line: 185, type: !407)
!8136 = !DILocation(line: 185, column: 60, scope: !8132)
!8137 = !DILocalVariable(name: "data", arg: 3, scope: !8132, file: !3, line: 185, type: !193)
!8138 = !DILocation(line: 185, column: 71, scope: !8132)
!8139 = !DILocalVariable(name: "ret_p", arg: 4, scope: !8132, file: !3, line: 186, type: !817)
!8140 = !DILocation(line: 186, column: 15, scope: !8132)
!8141 = !DILocalVariable(name: "device", scope: !8132, file: !3, line: 188, type: !4035)
!8142 = !DILocation(line: 188, column: 22, scope: !8132)
!8143 = !DILocalVariable(name: "pn", scope: !8132, file: !3, line: 189, type: !194)
!8144 = !DILocation(line: 189, column: 36, scope: !8132)
!8145 = !DILocation(line: 191, column: 26, scope: !8146)
!8146 = distinct !DILexicalBlock(scope: !8132, file: !3, line: 191, column: 6)
!8147 = !DILocation(line: 191, column: 6, scope: !8146)
!8148 = !DILocation(line: 191, column: 6, scope: !8132)
!8149 = !DILocation(line: 192, column: 3, scope: !8146)
!8150 = !DILocation(line: 194, column: 14, scope: !8132)
!8151 = !DILocation(line: 194, column: 22, scope: !8132)
!8152 = !DILocation(line: 194, column: 2, scope: !8132)
!8153 = !DILocalVariable(name: "__mptr", scope: !8154, file: !3, line: 196, type: !193)
!8154 = distinct !DILexicalBlock(scope: !8155, file: !3, line: 196, column: 2)
!8155 = distinct !DILexicalBlock(scope: !8132, file: !3, line: 196, column: 2)
!8156 = !DILocation(line: 196, column: 2, scope: !8154)
!8157 = !DILocation(line: 196, column: 2, scope: !8158)
!8158 = distinct !DILexicalBlock(scope: !8154, file: !3, line: 196, column: 2)
!8159 = !DILocation(line: 196, column: 2, scope: !8155)
!8160 = !DILocation(line: 196, column: 2, scope: !8161)
!8161 = distinct !DILexicalBlock(scope: !8155, file: !3, line: 196, column: 2)
!8162 = !DILocation(line: 197, column: 7, scope: !8163)
!8163 = distinct !DILexicalBlock(scope: !8161, file: !3, line: 197, column: 7)
!8164 = !DILocation(line: 197, column: 11, scope: !8163)
!8165 = !DILocation(line: 197, column: 7, scope: !8161)
!8166 = !DILocation(line: 198, column: 18, scope: !8167)
!8167 = distinct !DILexicalBlock(scope: !8163, file: !3, line: 197, column: 23)
!8168 = !DILocation(line: 198, column: 22, scope: !8167)
!8169 = !DILocation(line: 198, column: 4, scope: !8167)
!8170 = !DILocation(line: 199, column: 4, scope: !8167)
!8171 = !DILocation(line: 199, column: 8, scope: !8167)
!8172 = !DILocation(line: 199, column: 19, scope: !8167)
!8173 = !DILocation(line: 200, column: 3, scope: !8167)
!8174 = !DILocalVariable(name: "__mptr", scope: !8175, file: !3, line: 196, type: !193)
!8175 = distinct !DILexicalBlock(scope: !8161, file: !3, line: 196, column: 2)
!8176 = !DILocation(line: 196, column: 2, scope: !8175)
!8177 = !DILocation(line: 196, column: 2, scope: !8178)
!8178 = distinct !DILexicalBlock(scope: !8175, file: !3, line: 196, column: 2)
!8179 = distinct !{!8179, !8159, !8180}
!8180 = !DILocation(line: 200, column: 3, scope: !8155)
!8181 = !DILocation(line: 202, column: 16, scope: !8132)
!8182 = !DILocation(line: 202, column: 24, scope: !8132)
!8183 = !DILocation(line: 202, column: 2, scope: !8132)
!8184 = !DILocation(line: 204, column: 2, scope: !8132)
!8185 = !DILocation(line: 205, column: 1, scope: !8132)
!8186 = distinct !DISubprogram(name: "acpi_device_del_work_fn", scope: !3, file: !3, line: 510, type: !1962, scopeLine: 511, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !239)
!8187 = !DILocalVariable(name: "work_not_used", arg: 1, scope: !8186, file: !3, line: 510, type: !1964)
!8188 = !DILocation(line: 510, column: 57, scope: !8186)
!8189 = !DILocation(line: 512, column: 2, scope: !8186)
!8190 = !DILocalVariable(name: "adev", scope: !8191, file: !3, line: 513, type: !4035)
!8191 = distinct !DILexicalBlock(scope: !8192, file: !3, line: 512, column: 11)
!8192 = distinct !DILexicalBlock(scope: !8193, file: !3, line: 512, column: 2)
!8193 = distinct !DILexicalBlock(scope: !8186, file: !3, line: 512, column: 2)
!8194 = !DILocation(line: 513, column: 23, scope: !8191)
!8195 = !DILocation(line: 515, column: 3, scope: !8191)
!8196 = !DILocation(line: 517, column: 7, scope: !8197)
!8197 = distinct !DILexicalBlock(scope: !8191, file: !3, line: 517, column: 7)
!8198 = !DILocation(line: 517, column: 7, scope: !8191)
!8199 = !DILocation(line: 518, column: 4, scope: !8200)
!8200 = distinct !DILexicalBlock(scope: !8197, file: !3, line: 517, column: 42)
!8201 = !DILocation(line: 519, column: 4, scope: !8200)
!8202 = !DILocalVariable(name: "__mptr", scope: !8203, file: !3, line: 521, type: !193)
!8203 = distinct !DILexicalBlock(scope: !8191, file: !3, line: 521, column: 10)
!8204 = !DILocation(line: 521, column: 10, scope: !8203)
!8205 = !DILocation(line: 521, column: 10, scope: !8206)
!8206 = distinct !DILexicalBlock(scope: !8203, file: !3, line: 521, column: 10)
!8207 = !DILocation(line: 521, column: 8, scope: !8191)
!8208 = !DILocation(line: 523, column: 13, scope: !8191)
!8209 = !DILocation(line: 523, column: 19, scope: !8191)
!8210 = !DILocation(line: 523, column: 3, scope: !8191)
!8211 = !DILocation(line: 525, column: 3, scope: !8191)
!8212 = !DILocation(line: 528, column: 40, scope: !8191)
!8213 = !DILocation(line: 527, column: 3, scope: !8191)
!8214 = !DILocation(line: 530, column: 19, scope: !8191)
!8215 = !DILocation(line: 530, column: 3, scope: !8191)
!8216 = !DILocation(line: 535, column: 25, scope: !8191)
!8217 = !DILocation(line: 535, column: 3, scope: !8191)
!8218 = !DILocation(line: 536, column: 15, scope: !8191)
!8219 = !DILocation(line: 536, column: 21, scope: !8191)
!8220 = !DILocation(line: 536, column: 3, scope: !8191)
!8221 = !DILocation(line: 512, column: 2, scope: !8192)
!8222 = distinct !{!8222, !8223, !8224}
!8223 = !DILocation(line: 512, column: 2, scope: !8193)
!8224 = !DILocation(line: 537, column: 2, scope: !8193)
!8225 = !DILocation(line: 538, column: 1, scope: !8186)
!8226 = distinct !DISubprogram(name: "kobject_name", scope: !120, file: !120, line: 88, type: !8227, scopeLine: 89, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !239)
!8227 = !DISubroutineType(types: !8228)
!8228 = !{!213, !8229}
!8229 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8230, size: 64)
!8230 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !210)
!8231 = !DILocalVariable(name: "kobj", arg: 1, scope: !8226, file: !120, line: 88, type: !8229)
!8232 = !DILocation(line: 88, column: 62, scope: !8226)
!8233 = !DILocation(line: 90, column: 9, scope: !8226)
!8234 = !DILocation(line: 90, column: 15, scope: !8226)
!8235 = !DILocation(line: 90, column: 2, scope: !8226)
!8236 = distinct !DISubprogram(name: "__list_del_entry", scope: !4560, file: !4560, line: 130, type: !5087, scopeLine: 131, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !239)
!8237 = !DILocalVariable(name: "entry", arg: 1, scope: !8236, file: !4560, line: 130, type: !203)
!8238 = !DILocation(line: 130, column: 55, scope: !8236)
!8239 = !DILocation(line: 132, column: 30, scope: !8240)
!8240 = distinct !DILexicalBlock(scope: !8236, file: !4560, line: 132, column: 6)
!8241 = !DILocation(line: 132, column: 7, scope: !8240)
!8242 = !DILocation(line: 132, column: 6, scope: !8236)
!8243 = !DILocation(line: 133, column: 3, scope: !8240)
!8244 = !DILocation(line: 135, column: 13, scope: !8236)
!8245 = !DILocation(line: 135, column: 20, scope: !8236)
!8246 = !DILocation(line: 135, column: 26, scope: !8236)
!8247 = !DILocation(line: 135, column: 33, scope: !8236)
!8248 = !DILocation(line: 135, column: 2, scope: !8236)
!8249 = !DILocation(line: 136, column: 1, scope: !8236)
!8250 = distinct !DISubprogram(name: "__list_del_entry_valid", scope: !4560, file: !4560, line: 51, type: !8251, scopeLine: 52, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !239)
!8251 = !DISubroutineType(types: !8252)
!8252 = !{!482, !203}
!8253 = !DILocalVariable(name: "entry", arg: 1, scope: !8250, file: !4560, line: 51, type: !203)
!8254 = !DILocation(line: 51, column: 61, scope: !8250)
!8255 = !DILocation(line: 53, column: 2, scope: !8250)
!8256 = distinct !DISubprogram(name: "__list_del", scope: !4560, file: !4560, line: 110, type: !4561, scopeLine: 111, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !239)
!8257 = !DILocalVariable(name: "prev", arg: 1, scope: !8256, file: !4560, line: 110, type: !203)
!8258 = !DILocation(line: 110, column: 50, scope: !8256)
!8259 = !DILocalVariable(name: "next", arg: 2, scope: !8256, file: !4560, line: 110, type: !203)
!8260 = !DILocation(line: 110, column: 75, scope: !8256)
!8261 = !DILocation(line: 112, column: 15, scope: !8256)
!8262 = !DILocation(line: 112, column: 2, scope: !8256)
!8263 = !DILocation(line: 112, column: 8, scope: !8256)
!8264 = !DILocation(line: 112, column: 13, scope: !8256)
!8265 = !DILocation(line: 113, column: 2, scope: !8256)
!8266 = !DILocation(line: 113, column: 2, scope: !8267)
!8267 = distinct !DILexicalBlock(scope: !8256, file: !4560, line: 113, column: 2)
!8268 = !DILocation(line: 113, column: 2, scope: !8269)
!8269 = distinct !DILexicalBlock(scope: !8267, file: !4560, line: 113, column: 2)
!8270 = !DILocation(line: 113, column: 2, scope: !8271)
!8271 = distinct !DILexicalBlock(scope: !8267, file: !4560, line: 113, column: 2)
!8272 = !DILocation(line: 114, column: 1, scope: !8256)
!8273 = distinct !DISubprogram(name: "acpi_add_id", scope: !3, file: !3, line: 1179, type: !8274, scopeLine: 1180, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !239)
!8274 = !DISubroutineType(types: !8275)
!8275 = !{null, !5642, !213}
!8276 = !DILocation(line: 445, column: 72, scope: !5107, inlinedAt: !8277)
!8277 = distinct !DILocation(line: 552, column: 10, scope: !5112, inlinedAt: !8278)
!8278 = distinct !DILocation(line: 1183, column: 7, scope: !8273)
!8279 = !DILocation(line: 446, column: 9, scope: !5107, inlinedAt: !8277)
!8280 = !DILocation(line: 446, column: 23, scope: !5107, inlinedAt: !8277)
!8281 = !DILocation(line: 448, column: 8, scope: !5107, inlinedAt: !8277)
!8282 = !DILocation(line: 318, column: 67, scope: !5123, inlinedAt: !8283)
!8283 = distinct !DILocation(line: 553, column: 20, scope: !5112, inlinedAt: !8278)
!8284 = !DILocation(line: 346, column: 58, scope: !5129, inlinedAt: !8285)
!8285 = distinct !DILocation(line: 547, column: 11, scope: !5112, inlinedAt: !8278)
!8286 = !DILocation(line: 472, column: 28, scope: !5135, inlinedAt: !8287)
!8287 = distinct !DILocation(line: 481, column: 9, scope: !5140, inlinedAt: !8288)
!8288 = distinct !DILocation(line: 545, column: 11, scope: !5142, inlinedAt: !8278)
!8289 = !DILocation(line: 472, column: 40, scope: !5135, inlinedAt: !8287)
!8290 = !DILocation(line: 472, column: 60, scope: !5135, inlinedAt: !8287)
!8291 = !DILocation(line: 478, column: 51, scope: !5140, inlinedAt: !8288)
!8292 = !DILocation(line: 478, column: 63, scope: !5140, inlinedAt: !8288)
!8293 = !DILocation(line: 480, column: 15, scope: !5140, inlinedAt: !8288)
!8294 = !DILocation(line: 538, column: 45, scope: !5114, inlinedAt: !8278)
!8295 = !DILocation(line: 538, column: 57, scope: !5114, inlinedAt: !8278)
!8296 = !DILocation(line: 542, column: 16, scope: !5112, inlinedAt: !8278)
!8297 = !DILocalVariable(name: "pnp", arg: 1, scope: !8273, file: !3, line: 1179, type: !5642)
!8298 = !DILocation(line: 1179, column: 49, scope: !8273)
!8299 = !DILocalVariable(name: "dev_id", arg: 2, scope: !8273, file: !3, line: 1179, type: !213)
!8300 = !DILocation(line: 1179, column: 66, scope: !8273)
!8301 = !DILocalVariable(name: "id", scope: !8273, file: !3, line: 1181, type: !4030)
!8302 = !DILocation(line: 1181, column: 27, scope: !8273)
!8303 = !DILocation(line: 540, column: 27, scope: !5113, inlinedAt: !8278)
!8304 = !DILocation(line: 540, column: 6, scope: !5113, inlinedAt: !8278)
!8305 = !DILocation(line: 540, column: 6, scope: !5114, inlinedAt: !8278)
!8306 = !DILocation(line: 544, column: 7, scope: !5142, inlinedAt: !8278)
!8307 = !DILocation(line: 544, column: 12, scope: !5142, inlinedAt: !8278)
!8308 = !DILocation(line: 544, column: 7, scope: !5112, inlinedAt: !8278)
!8309 = !DILocation(line: 545, column: 25, scope: !5142, inlinedAt: !8278)
!8310 = !DILocation(line: 545, column: 31, scope: !5142, inlinedAt: !8278)
!8311 = !DILocation(line: 480, column: 33, scope: !5140, inlinedAt: !8288)
!8312 = !DILocation(line: 480, column: 23, scope: !5140, inlinedAt: !8288)
!8313 = !DILocation(line: 481, column: 29, scope: !5140, inlinedAt: !8288)
!8314 = !DILocation(line: 481, column: 35, scope: !5140, inlinedAt: !8288)
!8315 = !DILocation(line: 481, column: 42, scope: !5140, inlinedAt: !8288)
!8316 = !DILocation(line: 474, column: 23, scope: !5135, inlinedAt: !8287)
!8317 = !DILocation(line: 474, column: 29, scope: !5135, inlinedAt: !8287)
!8318 = !DILocation(line: 474, column: 36, scope: !5135, inlinedAt: !8287)
!8319 = !DILocation(line: 474, column: 9, scope: !5135, inlinedAt: !8287)
!8320 = !DILocation(line: 545, column: 4, scope: !5142, inlinedAt: !8278)
!8321 = !DILocation(line: 547, column: 25, scope: !5112, inlinedAt: !8278)
!8322 = !DILocation(line: 348, column: 7, scope: !5186, inlinedAt: !8285)
!8323 = !DILocation(line: 348, column: 6, scope: !5129, inlinedAt: !8285)
!8324 = !DILocation(line: 349, column: 3, scope: !5186, inlinedAt: !8285)
!8325 = !DILocation(line: 351, column: 6, scope: !5190, inlinedAt: !8285)
!8326 = !DILocation(line: 351, column: 11, scope: !5190, inlinedAt: !8285)
!8327 = !DILocation(line: 351, column: 6, scope: !5129, inlinedAt: !8285)
!8328 = !DILocation(line: 352, column: 3, scope: !5190, inlinedAt: !8285)
!8329 = !DILocation(line: 354, column: 32, scope: !5195, inlinedAt: !8285)
!8330 = !DILocation(line: 354, column: 37, scope: !5195, inlinedAt: !8285)
!8331 = !DILocation(line: 354, column: 42, scope: !5195, inlinedAt: !8285)
!8332 = !DILocation(line: 354, column: 45, scope: !5195, inlinedAt: !8285)
!8333 = !DILocation(line: 354, column: 50, scope: !5195, inlinedAt: !8285)
!8334 = !DILocation(line: 354, column: 6, scope: !5129, inlinedAt: !8285)
!8335 = !DILocation(line: 355, column: 3, scope: !5195, inlinedAt: !8285)
!8336 = !DILocation(line: 356, column: 32, scope: !5203, inlinedAt: !8285)
!8337 = !DILocation(line: 356, column: 37, scope: !5203, inlinedAt: !8285)
!8338 = !DILocation(line: 356, column: 43, scope: !5203, inlinedAt: !8285)
!8339 = !DILocation(line: 356, column: 46, scope: !5203, inlinedAt: !8285)
!8340 = !DILocation(line: 356, column: 51, scope: !5203, inlinedAt: !8285)
!8341 = !DILocation(line: 356, column: 6, scope: !5129, inlinedAt: !8285)
!8342 = !DILocation(line: 357, column: 3, scope: !5203, inlinedAt: !8285)
!8343 = !DILocation(line: 358, column: 6, scope: !5211, inlinedAt: !8285)
!8344 = !DILocation(line: 358, column: 11, scope: !5211, inlinedAt: !8285)
!8345 = !DILocation(line: 358, column: 6, scope: !5129, inlinedAt: !8285)
!8346 = !DILocation(line: 358, column: 26, scope: !5211, inlinedAt: !8285)
!8347 = !DILocation(line: 359, column: 6, scope: !5216, inlinedAt: !8285)
!8348 = !DILocation(line: 359, column: 11, scope: !5216, inlinedAt: !8285)
!8349 = !DILocation(line: 359, column: 6, scope: !5129, inlinedAt: !8285)
!8350 = !DILocation(line: 359, column: 26, scope: !5216, inlinedAt: !8285)
!8351 = !DILocation(line: 360, column: 6, scope: !5221, inlinedAt: !8285)
!8352 = !DILocation(line: 360, column: 11, scope: !5221, inlinedAt: !8285)
!8353 = !DILocation(line: 360, column: 6, scope: !5129, inlinedAt: !8285)
!8354 = !DILocation(line: 360, column: 26, scope: !5221, inlinedAt: !8285)
!8355 = !DILocation(line: 361, column: 6, scope: !5226, inlinedAt: !8285)
!8356 = !DILocation(line: 361, column: 11, scope: !5226, inlinedAt: !8285)
!8357 = !DILocation(line: 361, column: 6, scope: !5129, inlinedAt: !8285)
!8358 = !DILocation(line: 361, column: 26, scope: !5226, inlinedAt: !8285)
!8359 = !DILocation(line: 362, column: 6, scope: !5231, inlinedAt: !8285)
!8360 = !DILocation(line: 362, column: 11, scope: !5231, inlinedAt: !8285)
!8361 = !DILocation(line: 362, column: 6, scope: !5129, inlinedAt: !8285)
!8362 = !DILocation(line: 362, column: 26, scope: !5231, inlinedAt: !8285)
!8363 = !DILocation(line: 363, column: 6, scope: !5236, inlinedAt: !8285)
!8364 = !DILocation(line: 363, column: 11, scope: !5236, inlinedAt: !8285)
!8365 = !DILocation(line: 363, column: 6, scope: !5129, inlinedAt: !8285)
!8366 = !DILocation(line: 363, column: 26, scope: !5236, inlinedAt: !8285)
!8367 = !DILocation(line: 364, column: 6, scope: !5241, inlinedAt: !8285)
!8368 = !DILocation(line: 364, column: 11, scope: !5241, inlinedAt: !8285)
!8369 = !DILocation(line: 364, column: 6, scope: !5129, inlinedAt: !8285)
!8370 = !DILocation(line: 364, column: 26, scope: !5241, inlinedAt: !8285)
!8371 = !DILocation(line: 365, column: 6, scope: !5246, inlinedAt: !8285)
!8372 = !DILocation(line: 365, column: 11, scope: !5246, inlinedAt: !8285)
!8373 = !DILocation(line: 365, column: 6, scope: !5129, inlinedAt: !8285)
!8374 = !DILocation(line: 365, column: 26, scope: !5246, inlinedAt: !8285)
!8375 = !DILocation(line: 366, column: 6, scope: !5251, inlinedAt: !8285)
!8376 = !DILocation(line: 366, column: 11, scope: !5251, inlinedAt: !8285)
!8377 = !DILocation(line: 366, column: 6, scope: !5129, inlinedAt: !8285)
!8378 = !DILocation(line: 366, column: 26, scope: !5251, inlinedAt: !8285)
!8379 = !DILocation(line: 367, column: 6, scope: !5256, inlinedAt: !8285)
!8380 = !DILocation(line: 367, column: 11, scope: !5256, inlinedAt: !8285)
!8381 = !DILocation(line: 367, column: 6, scope: !5129, inlinedAt: !8285)
!8382 = !DILocation(line: 367, column: 26, scope: !5256, inlinedAt: !8285)
!8383 = !DILocation(line: 368, column: 6, scope: !5261, inlinedAt: !8285)
!8384 = !DILocation(line: 368, column: 11, scope: !5261, inlinedAt: !8285)
!8385 = !DILocation(line: 368, column: 6, scope: !5129, inlinedAt: !8285)
!8386 = !DILocation(line: 368, column: 26, scope: !5261, inlinedAt: !8285)
!8387 = !DILocation(line: 369, column: 6, scope: !5266, inlinedAt: !8285)
!8388 = !DILocation(line: 369, column: 11, scope: !5266, inlinedAt: !8285)
!8389 = !DILocation(line: 369, column: 6, scope: !5129, inlinedAt: !8285)
!8390 = !DILocation(line: 369, column: 26, scope: !5266, inlinedAt: !8285)
!8391 = !DILocation(line: 370, column: 6, scope: !5271, inlinedAt: !8285)
!8392 = !DILocation(line: 370, column: 11, scope: !5271, inlinedAt: !8285)
!8393 = !DILocation(line: 370, column: 6, scope: !5129, inlinedAt: !8285)
!8394 = !DILocation(line: 370, column: 26, scope: !5271, inlinedAt: !8285)
!8395 = !DILocation(line: 371, column: 6, scope: !5276, inlinedAt: !8285)
!8396 = !DILocation(line: 371, column: 11, scope: !5276, inlinedAt: !8285)
!8397 = !DILocation(line: 371, column: 6, scope: !5129, inlinedAt: !8285)
!8398 = !DILocation(line: 371, column: 26, scope: !5276, inlinedAt: !8285)
!8399 = !DILocation(line: 372, column: 6, scope: !5281, inlinedAt: !8285)
!8400 = !DILocation(line: 372, column: 11, scope: !5281, inlinedAt: !8285)
!8401 = !DILocation(line: 372, column: 6, scope: !5129, inlinedAt: !8285)
!8402 = !DILocation(line: 372, column: 26, scope: !5281, inlinedAt: !8285)
!8403 = !DILocation(line: 373, column: 6, scope: !5286, inlinedAt: !8285)
!8404 = !DILocation(line: 373, column: 11, scope: !5286, inlinedAt: !8285)
!8405 = !DILocation(line: 373, column: 6, scope: !5129, inlinedAt: !8285)
!8406 = !DILocation(line: 373, column: 26, scope: !5286, inlinedAt: !8285)
!8407 = !DILocation(line: 374, column: 6, scope: !5291, inlinedAt: !8285)
!8408 = !DILocation(line: 374, column: 11, scope: !5291, inlinedAt: !8285)
!8409 = !DILocation(line: 374, column: 6, scope: !5129, inlinedAt: !8285)
!8410 = !DILocation(line: 374, column: 26, scope: !5291, inlinedAt: !8285)
!8411 = !DILocation(line: 375, column: 6, scope: !5296, inlinedAt: !8285)
!8412 = !DILocation(line: 375, column: 11, scope: !5296, inlinedAt: !8285)
!8413 = !DILocation(line: 375, column: 6, scope: !5129, inlinedAt: !8285)
!8414 = !DILocation(line: 375, column: 27, scope: !5296, inlinedAt: !8285)
!8415 = !DILocation(line: 376, column: 6, scope: !5301, inlinedAt: !8285)
!8416 = !DILocation(line: 376, column: 11, scope: !5301, inlinedAt: !8285)
!8417 = !DILocation(line: 376, column: 6, scope: !5129, inlinedAt: !8285)
!8418 = !DILocation(line: 376, column: 32, scope: !5301, inlinedAt: !8285)
!8419 = !DILocation(line: 377, column: 6, scope: !5306, inlinedAt: !8285)
!8420 = !DILocation(line: 377, column: 11, scope: !5306, inlinedAt: !8285)
!8421 = !DILocation(line: 377, column: 6, scope: !5129, inlinedAt: !8285)
!8422 = !DILocation(line: 377, column: 32, scope: !5306, inlinedAt: !8285)
!8423 = !DILocation(line: 378, column: 6, scope: !5311, inlinedAt: !8285)
!8424 = !DILocation(line: 378, column: 11, scope: !5311, inlinedAt: !8285)
!8425 = !DILocation(line: 378, column: 6, scope: !5129, inlinedAt: !8285)
!8426 = !DILocation(line: 378, column: 32, scope: !5311, inlinedAt: !8285)
!8427 = !DILocation(line: 379, column: 6, scope: !5316, inlinedAt: !8285)
!8428 = !DILocation(line: 379, column: 11, scope: !5316, inlinedAt: !8285)
!8429 = !DILocation(line: 379, column: 6, scope: !5129, inlinedAt: !8285)
!8430 = !DILocation(line: 379, column: 33, scope: !5316, inlinedAt: !8285)
!8431 = !DILocation(line: 380, column: 6, scope: !5321, inlinedAt: !8285)
!8432 = !DILocation(line: 380, column: 11, scope: !5321, inlinedAt: !8285)
!8433 = !DILocation(line: 380, column: 6, scope: !5129, inlinedAt: !8285)
!8434 = !DILocation(line: 380, column: 33, scope: !5321, inlinedAt: !8285)
!8435 = !DILocation(line: 381, column: 6, scope: !5326, inlinedAt: !8285)
!8436 = !DILocation(line: 381, column: 11, scope: !5326, inlinedAt: !8285)
!8437 = !DILocation(line: 381, column: 6, scope: !5129, inlinedAt: !8285)
!8438 = !DILocation(line: 381, column: 33, scope: !5326, inlinedAt: !8285)
!8439 = !DILocation(line: 382, column: 2, scope: !5331, inlinedAt: !8285)
!8440 = !DILocation(line: 382, column: 2, scope: !5335, inlinedAt: !8285)
!8441 = !DILocation(line: 382, column: 2, scope: !5336, inlinedAt: !8285)
!8442 = !DILocation(line: 386, column: 1, scope: !5129, inlinedAt: !8285)
!8443 = !DILocation(line: 547, column: 9, scope: !5112, inlinedAt: !8278)
!8444 = !DILocation(line: 549, column: 8, scope: !5342, inlinedAt: !8278)
!8445 = !DILocation(line: 549, column: 7, scope: !5112, inlinedAt: !8278)
!8446 = !DILocation(line: 550, column: 4, scope: !5342, inlinedAt: !8278)
!8447 = !DILocation(line: 553, column: 33, scope: !5112, inlinedAt: !8278)
!8448 = !DILocation(line: 325, column: 6, scope: !5347, inlinedAt: !8283)
!8449 = !DILocation(line: 325, column: 6, scope: !5123, inlinedAt: !8283)
!8450 = !DILocation(line: 326, column: 3, scope: !5347, inlinedAt: !8283)
!8451 = !DILocation(line: 332, column: 9, scope: !5123, inlinedAt: !8283)
!8452 = !DILocation(line: 332, column: 15, scope: !5123, inlinedAt: !8283)
!8453 = !DILocation(line: 332, column: 2, scope: !5123, inlinedAt: !8283)
!8454 = !DILocation(line: 336, column: 1, scope: !5123, inlinedAt: !8283)
!8455 = !DILocation(line: 553, column: 5, scope: !5112, inlinedAt: !8278)
!8456 = !DILocation(line: 553, column: 41, scope: !5112, inlinedAt: !8278)
!8457 = !DILocation(line: 554, column: 5, scope: !5112, inlinedAt: !8278)
!8458 = !DILocation(line: 554, column: 12, scope: !5112, inlinedAt: !8278)
!8459 = !DILocation(line: 448, column: 31, scope: !5107, inlinedAt: !8277)
!8460 = !DILocation(line: 448, column: 34, scope: !5107, inlinedAt: !8277)
!8461 = !DILocation(line: 448, column: 14, scope: !5107, inlinedAt: !8277)
!8462 = !DILocation(line: 450, column: 22, scope: !5107, inlinedAt: !8277)
!8463 = !DILocation(line: 450, column: 25, scope: !5107, inlinedAt: !8277)
!8464 = !DILocation(line: 450, column: 30, scope: !5107, inlinedAt: !8277)
!8465 = !DILocation(line: 450, column: 36, scope: !5107, inlinedAt: !8277)
!8466 = !DILocation(line: 450, column: 8, scope: !5107, inlinedAt: !8277)
!8467 = !DILocation(line: 450, column: 6, scope: !5107, inlinedAt: !8277)
!8468 = !DILocation(line: 451, column: 9, scope: !5107, inlinedAt: !8277)
!8469 = !DILocation(line: 552, column: 3, scope: !5112, inlinedAt: !8278)
!8470 = !DILocation(line: 557, column: 19, scope: !5114, inlinedAt: !8278)
!8471 = !DILocation(line: 557, column: 25, scope: !5114, inlinedAt: !8278)
!8472 = !DILocation(line: 557, column: 9, scope: !5114, inlinedAt: !8278)
!8473 = !DILocation(line: 557, column: 2, scope: !5114, inlinedAt: !8278)
!8474 = !DILocation(line: 558, column: 1, scope: !5114, inlinedAt: !8278)
!8475 = !DILocation(line: 1183, column: 7, scope: !8273)
!8476 = !DILocation(line: 1183, column: 5, scope: !8273)
!8477 = !DILocation(line: 1184, column: 7, scope: !8478)
!8478 = distinct !DILexicalBlock(scope: !8273, file: !3, line: 1184, column: 6)
!8479 = !DILocation(line: 1184, column: 6, scope: !8273)
!8480 = !DILocation(line: 1185, column: 3, scope: !8478)
!8481 = !DILocation(line: 1187, column: 25, scope: !8273)
!8482 = !DILocation(line: 1187, column: 11, scope: !8273)
!8483 = !DILocation(line: 1187, column: 2, scope: !8273)
!8484 = !DILocation(line: 1187, column: 6, scope: !8273)
!8485 = !DILocation(line: 1187, column: 9, scope: !8273)
!8486 = !DILocation(line: 1188, column: 7, scope: !8487)
!8487 = distinct !DILexicalBlock(scope: !8273, file: !3, line: 1188, column: 6)
!8488 = !DILocation(line: 1188, column: 11, scope: !8487)
!8489 = !DILocation(line: 1188, column: 6, scope: !8273)
!8490 = !DILocation(line: 1189, column: 9, scope: !8491)
!8491 = distinct !DILexicalBlock(scope: !8487, file: !3, line: 1188, column: 15)
!8492 = !DILocation(line: 1189, column: 3, scope: !8491)
!8493 = !DILocation(line: 1190, column: 3, scope: !8491)
!8494 = !DILocation(line: 1193, column: 17, scope: !8273)
!8495 = !DILocation(line: 1193, column: 21, scope: !8273)
!8496 = !DILocation(line: 1193, column: 28, scope: !8273)
!8497 = !DILocation(line: 1193, column: 33, scope: !8273)
!8498 = !DILocation(line: 1193, column: 2, scope: !8273)
!8499 = !DILocation(line: 1194, column: 2, scope: !8273)
!8500 = !DILocation(line: 1194, column: 7, scope: !8273)
!8501 = !DILocation(line: 1194, column: 12, scope: !8273)
!8502 = !DILocation(line: 1194, column: 24, scope: !8273)
!8503 = !DILocation(line: 1195, column: 1, scope: !8273)
!8504 = distinct !DISubprogram(name: "acpi_ibm_smbus_match", scope: !3, file: !3, line: 1202, type: !5480, scopeLine: 1203, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !239)
!8505 = !DILocalVariable(name: "handle", arg: 1, scope: !8504, file: !3, line: 1202, type: !4017)
!8506 = !DILocation(line: 1202, column: 46, scope: !8504)
!8507 = !DILocalVariable(name: "node_name", scope: !8504, file: !3, line: 1204, type: !6103)
!8508 = !DILocation(line: 1204, column: 7, scope: !8504)
!8509 = !DILocalVariable(name: "path", scope: !8504, file: !3, line: 1205, type: !5442)
!8510 = !DILocation(line: 1205, column: 21, scope: !8504)
!8511 = !DILocation(line: 1205, column: 28, scope: !8504)
!8512 = !DILocation(line: 1205, column: 49, scope: !8504)
!8513 = !DILocation(line: 1207, column: 7, scope: !8514)
!8514 = distinct !DILexicalBlock(scope: !8504, file: !3, line: 1207, column: 6)
!8515 = !DILocation(line: 1207, column: 6, scope: !8504)
!8516 = !DILocation(line: 1208, column: 3, scope: !8514)
!8517 = !DILocation(line: 1211, column: 6, scope: !8518)
!8518 = distinct !DILexicalBlock(scope: !8504, file: !3, line: 1211, column: 6)
!8519 = !DILocation(line: 1211, column: 67, scope: !8518)
!8520 = !DILocation(line: 1212, column: 26, scope: !8518)
!8521 = !DILocation(line: 1212, column: 6, scope: !8518)
!8522 = !DILocation(line: 1211, column: 6, scope: !8504)
!8523 = !DILocation(line: 1213, column: 3, scope: !8518)
!8524 = !DILocation(line: 1216, column: 22, scope: !8525)
!8525 = distinct !DILexicalBlock(scope: !8504, file: !3, line: 1216, column: 6)
!8526 = !DILocation(line: 1216, column: 6, scope: !8525)
!8527 = !DILocation(line: 1216, column: 37, scope: !8525)
!8528 = !DILocation(line: 1217, column: 22, scope: !8525)
!8529 = !DILocation(line: 1217, column: 6, scope: !8525)
!8530 = !DILocation(line: 1217, column: 37, scope: !8525)
!8531 = !DILocation(line: 1218, column: 22, scope: !8525)
!8532 = !DILocation(line: 1218, column: 6, scope: !8525)
!8533 = !DILocation(line: 1216, column: 6, scope: !8504)
!8534 = !DILocation(line: 1219, column: 3, scope: !8525)
!8535 = !DILocation(line: 1221, column: 2, scope: !8504)
!8536 = !DILocation(line: 1222, column: 1, scope: !8504)
!8537 = distinct !DISubprogram(name: "acpi_object_is_system_bus", scope: !3, file: !3, line: 1224, type: !5480, scopeLine: 1225, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !239)
!8538 = !DILocalVariable(name: "handle", arg: 1, scope: !8537, file: !3, line: 1224, type: !4017)
!8539 = !DILocation(line: 1224, column: 51, scope: !8537)
!8540 = !DILocalVariable(name: "tmp", scope: !8537, file: !3, line: 1226, type: !4017)
!8541 = !DILocation(line: 1226, column: 14, scope: !8537)
!8542 = !DILocation(line: 1228, column: 6, scope: !8543)
!8543 = distinct !DILexicalBlock(scope: !8537, file: !3, line: 1228, column: 6)
!8544 = !DILocation(line: 1228, column: 57, scope: !8543)
!8545 = !DILocation(line: 1229, column: 6, scope: !8543)
!8546 = !DILocation(line: 1229, column: 13, scope: !8543)
!8547 = !DILocation(line: 1229, column: 10, scope: !8543)
!8548 = !DILocation(line: 1228, column: 6, scope: !8537)
!8549 = !DILocation(line: 1230, column: 3, scope: !8543)
!8550 = !DILocation(line: 1231, column: 6, scope: !8551)
!8551 = distinct !DILexicalBlock(scope: !8537, file: !3, line: 1231, column: 6)
!8552 = !DILocation(line: 1231, column: 57, scope: !8551)
!8553 = !DILocation(line: 1232, column: 6, scope: !8551)
!8554 = !DILocation(line: 1232, column: 13, scope: !8551)
!8555 = !DILocation(line: 1232, column: 10, scope: !8551)
!8556 = !DILocation(line: 1231, column: 6, scope: !8537)
!8557 = !DILocation(line: 1233, column: 3, scope: !8551)
!8558 = !DILocation(line: 1235, column: 2, scope: !8537)
!8559 = !DILocation(line: 1236, column: 1, scope: !8537)
!8560 = !DILocalVariable(name: "device", arg: 1, scope: !4449, file: !3, line: 1531, type: !4035)
!8561 = !DILocation(line: 1531, column: 59, scope: !4449)
!8562 = !DILocalVariable(name: "parent", scope: !4449, file: !3, line: 1533, type: !4035)
!8563 = !DILocation(line: 1533, column: 22, scope: !4449)
!8564 = !DILocation(line: 1533, column: 31, scope: !4449)
!8565 = !DILocation(line: 1533, column: 39, scope: !4449)
!8566 = !DILocation(line: 1539, column: 9, scope: !4449)
!8567 = !DILocation(line: 1539, column: 16, scope: !4449)
!8568 = !DILocation(line: 1539, column: 42, scope: !4449)
!8569 = !DILocation(line: 1539, column: 20, scope: !4449)
!8570 = !DILocation(line: 1539, column: 19, scope: !4449)
!8571 = !DILocation(line: 0, scope: !4449)
!8572 = !DILocation(line: 1539, column: 2, scope: !4449)
!8573 = distinct !DISubprogram(name: "acpi_check_serial_bus_slave", scope: !3, file: !3, line: 1518, type: !8574, scopeLine: 1519, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !239)
!8574 = !DISubroutineType(types: !8575)
!8575 = !{!251, !8576, !193}
!8576 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8577, size: 64)
!8577 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "acpi_resource", file: !8578, line: 651, size: 544, elements: !8579)
!8578 = !DIFile(filename: "./include/acpi/acrestyp.h", directory: "/home/lizy2001/genbc/linux")
!8579 = !{!8580, !8581, !8582}
!8580 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !8577, file: !8578, line: 652, baseType: !407, size: 32)
!8581 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !8577, file: !8578, line: 653, baseType: !407, size: 32, offset: 32)
!8582 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !8577, file: !8578, line: 654, baseType: !8583, size: 480, offset: 64)
!8583 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "acpi_resource_data", file: !8578, line: 614, size: 480, elements: !8584)
!8584 = !{!8585, !8596, !8604, !8610, !8618, !8623, !8629, !8634, !8642, !8646, !8654, !8662, !8668, !8708, !8726, !8744, !8756, !8768, !8776, !8796, !8812, !8832, !8854, !8867, !8879, !8892, !8906, !8917, !8929}
!8585 = !DIDerivedType(tag: DW_TAG_member, name: "irq", scope: !8583, file: !8578, line: 615, baseType: !8586, size: 56)
!8586 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "acpi_resource_irq", file: !8578, line: 138, size: 56, elements: !8587)
!8587 = !{!8588, !8589, !8590, !8591, !8592, !8593, !8594}
!8588 = !DIDerivedType(tag: DW_TAG_member, name: "descriptor_length", scope: !8586, file: !8578, line: 139, baseType: !1348, size: 8)
!8589 = !DIDerivedType(tag: DW_TAG_member, name: "triggering", scope: !8586, file: !8578, line: 140, baseType: !1348, size: 8, offset: 8)
!8590 = !DIDerivedType(tag: DW_TAG_member, name: "polarity", scope: !8586, file: !8578, line: 141, baseType: !1348, size: 8, offset: 16)
!8591 = !DIDerivedType(tag: DW_TAG_member, name: "shareable", scope: !8586, file: !8578, line: 142, baseType: !1348, size: 8, offset: 24)
!8592 = !DIDerivedType(tag: DW_TAG_member, name: "wake_capable", scope: !8586, file: !8578, line: 143, baseType: !1348, size: 8, offset: 32)
!8593 = !DIDerivedType(tag: DW_TAG_member, name: "interrupt_count", scope: !8586, file: !8578, line: 144, baseType: !1348, size: 8, offset: 40)
!8594 = !DIDerivedType(tag: DW_TAG_member, name: "interrupts", scope: !8586, file: !8578, line: 145, baseType: !8595, size: 8, offset: 48)
!8595 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1348, size: 8, elements: !1367)
!8596 = !DIDerivedType(tag: DW_TAG_member, name: "dma", scope: !8583, file: !8578, line: 616, baseType: !8597, size: 40)
!8597 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "acpi_resource_dma", file: !8578, line: 148, size: 40, elements: !8598)
!8598 = !{!8599, !8600, !8601, !8602, !8603}
!8599 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !8597, file: !8578, line: 149, baseType: !1348, size: 8)
!8600 = !DIDerivedType(tag: DW_TAG_member, name: "bus_master", scope: !8597, file: !8578, line: 150, baseType: !1348, size: 8, offset: 8)
!8601 = !DIDerivedType(tag: DW_TAG_member, name: "transfer", scope: !8597, file: !8578, line: 151, baseType: !1348, size: 8, offset: 16)
!8602 = !DIDerivedType(tag: DW_TAG_member, name: "channel_count", scope: !8597, file: !8578, line: 152, baseType: !1348, size: 8, offset: 24)
!8603 = !DIDerivedType(tag: DW_TAG_member, name: "channels", scope: !8597, file: !8578, line: 153, baseType: !8595, size: 8, offset: 32)
!8604 = !DIDerivedType(tag: DW_TAG_member, name: "start_dpf", scope: !8583, file: !8578, line: 617, baseType: !8605, size: 24)
!8605 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "acpi_resource_start_dependent", file: !8578, line: 156, size: 24, elements: !8606)
!8606 = !{!8607, !8608, !8609}
!8607 = !DIDerivedType(tag: DW_TAG_member, name: "descriptor_length", scope: !8605, file: !8578, line: 157, baseType: !1348, size: 8)
!8608 = !DIDerivedType(tag: DW_TAG_member, name: "compatibility_priority", scope: !8605, file: !8578, line: 158, baseType: !1348, size: 8, offset: 8)
!8609 = !DIDerivedType(tag: DW_TAG_member, name: "performance_robustness", scope: !8605, file: !8578, line: 159, baseType: !1348, size: 8, offset: 16)
!8610 = !DIDerivedType(tag: DW_TAG_member, name: "io", scope: !8583, file: !8578, line: 618, baseType: !8611, size: 56)
!8611 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "acpi_resource_io", file: !8578, line: 167, size: 56, elements: !8612)
!8612 = !{!8613, !8614, !8615, !8616, !8617}
!8613 = !DIDerivedType(tag: DW_TAG_member, name: "io_decode", scope: !8611, file: !8578, line: 168, baseType: !1348, size: 8)
!8614 = !DIDerivedType(tag: DW_TAG_member, name: "alignment", scope: !8611, file: !8578, line: 169, baseType: !1348, size: 8, offset: 8)
!8615 = !DIDerivedType(tag: DW_TAG_member, name: "address_length", scope: !8611, file: !8578, line: 170, baseType: !1348, size: 8, offset: 16)
!8616 = !DIDerivedType(tag: DW_TAG_member, name: "minimum", scope: !8611, file: !8578, line: 171, baseType: !855, size: 16, offset: 24)
!8617 = !DIDerivedType(tag: DW_TAG_member, name: "maximum", scope: !8611, file: !8578, line: 172, baseType: !855, size: 16, offset: 40)
!8618 = !DIDerivedType(tag: DW_TAG_member, name: "fixed_io", scope: !8583, file: !8578, line: 619, baseType: !8619, size: 24)
!8619 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "acpi_resource_fixed_io", file: !8578, line: 175, size: 24, elements: !8620)
!8620 = !{!8621, !8622}
!8621 = !DIDerivedType(tag: DW_TAG_member, name: "address", scope: !8619, file: !8578, line: 176, baseType: !855, size: 16)
!8622 = !DIDerivedType(tag: DW_TAG_member, name: "address_length", scope: !8619, file: !8578, line: 177, baseType: !1348, size: 8, offset: 16)
!8623 = !DIDerivedType(tag: DW_TAG_member, name: "fixed_dma", scope: !8583, file: !8578, line: 620, baseType: !8624, size: 40)
!8624 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "acpi_resource_fixed_dma", file: !8578, line: 180, size: 40, elements: !8625)
!8625 = !{!8626, !8627, !8628}
!8626 = !DIDerivedType(tag: DW_TAG_member, name: "request_lines", scope: !8624, file: !8578, line: 181, baseType: !855, size: 16)
!8627 = !DIDerivedType(tag: DW_TAG_member, name: "channels", scope: !8624, file: !8578, line: 182, baseType: !855, size: 16, offset: 16)
!8628 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !8624, file: !8578, line: 183, baseType: !1348, size: 8, offset: 32)
!8629 = !DIDerivedType(tag: DW_TAG_member, name: "vendor", scope: !8583, file: !8578, line: 621, baseType: !8630, size: 24)
!8630 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "acpi_resource_vendor", file: !8578, line: 195, size: 24, elements: !8631)
!8631 = !{!8632, !8633}
!8632 = !DIDerivedType(tag: DW_TAG_member, name: "byte_length", scope: !8630, file: !8578, line: 196, baseType: !855, size: 16)
!8633 = !DIDerivedType(tag: DW_TAG_member, name: "byte_data", scope: !8630, file: !8578, line: 197, baseType: !8595, size: 8, offset: 16)
!8634 = !DIDerivedType(tag: DW_TAG_member, name: "vendor_typed", scope: !8583, file: !8578, line: 622, baseType: !8635, size: 160)
!8635 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "acpi_resource_vendor_typed", file: !8578, line: 202, size: 160, elements: !8636)
!8636 = !{!8637, !8638, !8639, !8641}
!8637 = !DIDerivedType(tag: DW_TAG_member, name: "byte_length", scope: !8635, file: !8578, line: 203, baseType: !855, size: 16)
!8638 = !DIDerivedType(tag: DW_TAG_member, name: "uuid_subtype", scope: !8635, file: !8578, line: 204, baseType: !1348, size: 8, offset: 16)
!8639 = !DIDerivedType(tag: DW_TAG_member, name: "uuid", scope: !8635, file: !8578, line: 205, baseType: !8640, size: 128, offset: 24)
!8640 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1348, size: 128, elements: !1731)
!8641 = !DIDerivedType(tag: DW_TAG_member, name: "byte_data", scope: !8635, file: !8578, line: 206, baseType: !8595, size: 8, offset: 152)
!8642 = !DIDerivedType(tag: DW_TAG_member, name: "end_tag", scope: !8583, file: !8578, line: 623, baseType: !8643, size: 8)
!8643 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "acpi_resource_end_tag", file: !8578, line: 209, size: 8, elements: !8644)
!8644 = !{!8645}
!8645 = !DIDerivedType(tag: DW_TAG_member, name: "checksum", scope: !8643, file: !8578, line: 210, baseType: !1348, size: 8)
!8646 = !DIDerivedType(tag: DW_TAG_member, name: "memory24", scope: !8583, file: !8578, line: 624, baseType: !8647, size: 72)
!8647 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "acpi_resource_memory24", file: !8578, line: 213, size: 72, elements: !8648)
!8648 = !{!8649, !8650, !8651, !8652, !8653}
!8649 = !DIDerivedType(tag: DW_TAG_member, name: "write_protect", scope: !8647, file: !8578, line: 214, baseType: !1348, size: 8)
!8650 = !DIDerivedType(tag: DW_TAG_member, name: "minimum", scope: !8647, file: !8578, line: 215, baseType: !855, size: 16, offset: 8)
!8651 = !DIDerivedType(tag: DW_TAG_member, name: "maximum", scope: !8647, file: !8578, line: 216, baseType: !855, size: 16, offset: 24)
!8652 = !DIDerivedType(tag: DW_TAG_member, name: "alignment", scope: !8647, file: !8578, line: 217, baseType: !855, size: 16, offset: 40)
!8653 = !DIDerivedType(tag: DW_TAG_member, name: "address_length", scope: !8647, file: !8578, line: 218, baseType: !855, size: 16, offset: 56)
!8654 = !DIDerivedType(tag: DW_TAG_member, name: "memory32", scope: !8583, file: !8578, line: 625, baseType: !8655, size: 136)
!8655 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "acpi_resource_memory32", file: !8578, line: 221, size: 136, elements: !8656)
!8656 = !{!8657, !8658, !8659, !8660, !8661}
!8657 = !DIDerivedType(tag: DW_TAG_member, name: "write_protect", scope: !8655, file: !8578, line: 222, baseType: !1348, size: 8)
!8658 = !DIDerivedType(tag: DW_TAG_member, name: "minimum", scope: !8655, file: !8578, line: 223, baseType: !407, size: 32, offset: 8)
!8659 = !DIDerivedType(tag: DW_TAG_member, name: "maximum", scope: !8655, file: !8578, line: 224, baseType: !407, size: 32, offset: 40)
!8660 = !DIDerivedType(tag: DW_TAG_member, name: "alignment", scope: !8655, file: !8578, line: 225, baseType: !407, size: 32, offset: 72)
!8661 = !DIDerivedType(tag: DW_TAG_member, name: "address_length", scope: !8655, file: !8578, line: 226, baseType: !407, size: 32, offset: 104)
!8662 = !DIDerivedType(tag: DW_TAG_member, name: "fixed_memory32", scope: !8583, file: !8578, line: 626, baseType: !8663, size: 72)
!8663 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "acpi_resource_fixed_memory32", file: !8578, line: 229, size: 72, elements: !8664)
!8664 = !{!8665, !8666, !8667}
!8665 = !DIDerivedType(tag: DW_TAG_member, name: "write_protect", scope: !8663, file: !8578, line: 230, baseType: !1348, size: 8)
!8666 = !DIDerivedType(tag: DW_TAG_member, name: "address", scope: !8663, file: !8578, line: 231, baseType: !407, size: 32, offset: 8)
!8667 = !DIDerivedType(tag: DW_TAG_member, name: "address_length", scope: !8663, file: !8578, line: 232, baseType: !407, size: 32, offset: 40)
!8668 = !DIDerivedType(tag: DW_TAG_member, name: "address16", scope: !8583, file: !8578, line: 627, baseType: !8669, size: 240)
!8669 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "acpi_resource_address16", file: !8578, line: 306, size: 240, elements: !8670)
!8670 = !{!8671, !8672, !8673, !8674, !8675, !8676, !8694, !8702}
!8671 = !DIDerivedType(tag: DW_TAG_member, name: "resource_type", scope: !8669, file: !8578, line: 307, baseType: !1348, size: 8)
!8672 = !DIDerivedType(tag: DW_TAG_member, name: "producer_consumer", scope: !8669, file: !8578, line: 307, baseType: !1348, size: 8, offset: 8)
!8673 = !DIDerivedType(tag: DW_TAG_member, name: "decode", scope: !8669, file: !8578, line: 307, baseType: !1348, size: 8, offset: 16)
!8674 = !DIDerivedType(tag: DW_TAG_member, name: "min_address_fixed", scope: !8669, file: !8578, line: 307, baseType: !1348, size: 8, offset: 24)
!8675 = !DIDerivedType(tag: DW_TAG_member, name: "max_address_fixed", scope: !8669, file: !8578, line: 307, baseType: !1348, size: 8, offset: 32)
!8676 = !DIDerivedType(tag: DW_TAG_member, name: "info", scope: !8669, file: !8578, line: 307, baseType: !8677, size: 32, offset: 40)
!8677 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "acpi_resource_attribute", file: !8578, line: 249, size: 32, elements: !8678)
!8678 = !{!8679, !8686, !8693}
!8679 = !DIDerivedType(tag: DW_TAG_member, name: "mem", scope: !8677, file: !8578, line: 250, baseType: !8680, size: 32)
!8680 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "acpi_memory_attribute", file: !8578, line: 235, size: 32, elements: !8681)
!8681 = !{!8682, !8683, !8684, !8685}
!8682 = !DIDerivedType(tag: DW_TAG_member, name: "write_protect", scope: !8680, file: !8578, line: 236, baseType: !1348, size: 8)
!8683 = !DIDerivedType(tag: DW_TAG_member, name: "caching", scope: !8680, file: !8578, line: 237, baseType: !1348, size: 8, offset: 8)
!8684 = !DIDerivedType(tag: DW_TAG_member, name: "range_type", scope: !8680, file: !8578, line: 238, baseType: !1348, size: 8, offset: 16)
!8685 = !DIDerivedType(tag: DW_TAG_member, name: "translation", scope: !8680, file: !8578, line: 239, baseType: !1348, size: 8, offset: 24)
!8686 = !DIDerivedType(tag: DW_TAG_member, name: "io", scope: !8677, file: !8578, line: 251, baseType: !8687, size: 32)
!8687 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "acpi_io_attribute", file: !8578, line: 242, size: 32, elements: !8688)
!8688 = !{!8689, !8690, !8691, !8692}
!8689 = !DIDerivedType(tag: DW_TAG_member, name: "range_type", scope: !8687, file: !8578, line: 243, baseType: !1348, size: 8)
!8690 = !DIDerivedType(tag: DW_TAG_member, name: "translation", scope: !8687, file: !8578, line: 244, baseType: !1348, size: 8, offset: 8)
!8691 = !DIDerivedType(tag: DW_TAG_member, name: "translation_type", scope: !8687, file: !8578, line: 245, baseType: !1348, size: 8, offset: 16)
!8692 = !DIDerivedType(tag: DW_TAG_member, name: "reserved1", scope: !8687, file: !8578, line: 246, baseType: !1348, size: 8, offset: 24)
!8693 = !DIDerivedType(tag: DW_TAG_member, name: "type_specific", scope: !8677, file: !8578, line: 255, baseType: !1348, size: 8)
!8694 = !DIDerivedType(tag: DW_TAG_member, name: "address", scope: !8669, file: !8578, line: 307, baseType: !8695, size: 80, offset: 72)
!8695 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "acpi_address16_attribute", file: !8578, line: 279, size: 80, elements: !8696)
!8696 = !{!8697, !8698, !8699, !8700, !8701}
!8697 = !DIDerivedType(tag: DW_TAG_member, name: "granularity", scope: !8695, file: !8578, line: 280, baseType: !855, size: 16)
!8698 = !DIDerivedType(tag: DW_TAG_member, name: "minimum", scope: !8695, file: !8578, line: 281, baseType: !855, size: 16, offset: 16)
!8699 = !DIDerivedType(tag: DW_TAG_member, name: "maximum", scope: !8695, file: !8578, line: 282, baseType: !855, size: 16, offset: 32)
!8700 = !DIDerivedType(tag: DW_TAG_member, name: "translation_offset", scope: !8695, file: !8578, line: 283, baseType: !855, size: 16, offset: 48)
!8701 = !DIDerivedType(tag: DW_TAG_member, name: "address_length", scope: !8695, file: !8578, line: 284, baseType: !855, size: 16, offset: 64)
!8702 = !DIDerivedType(tag: DW_TAG_member, name: "resource_source", scope: !8669, file: !8578, line: 308, baseType: !8703, size: 88, offset: 152)
!8703 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "acpi_resource_source", file: !8578, line: 263, size: 88, elements: !8704)
!8704 = !{!8705, !8706, !8707}
!8705 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !8703, file: !8578, line: 264, baseType: !1348, size: 8)
!8706 = !DIDerivedType(tag: DW_TAG_member, name: "string_length", scope: !8703, file: !8578, line: 265, baseType: !855, size: 16, offset: 8)
!8707 = !DIDerivedType(tag: DW_TAG_member, name: "string_ptr", scope: !8703, file: !8578, line: 266, baseType: !267, size: 64, offset: 24)
!8708 = !DIDerivedType(tag: DW_TAG_member, name: "address32", scope: !8583, file: !8578, line: 628, baseType: !8709, size: 320)
!8709 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "acpi_resource_address32", file: !8578, line: 311, size: 320, elements: !8710)
!8710 = !{!8711, !8712, !8713, !8714, !8715, !8716, !8717, !8725}
!8711 = !DIDerivedType(tag: DW_TAG_member, name: "resource_type", scope: !8709, file: !8578, line: 312, baseType: !1348, size: 8)
!8712 = !DIDerivedType(tag: DW_TAG_member, name: "producer_consumer", scope: !8709, file: !8578, line: 312, baseType: !1348, size: 8, offset: 8)
!8713 = !DIDerivedType(tag: DW_TAG_member, name: "decode", scope: !8709, file: !8578, line: 312, baseType: !1348, size: 8, offset: 16)
!8714 = !DIDerivedType(tag: DW_TAG_member, name: "min_address_fixed", scope: !8709, file: !8578, line: 312, baseType: !1348, size: 8, offset: 24)
!8715 = !DIDerivedType(tag: DW_TAG_member, name: "max_address_fixed", scope: !8709, file: !8578, line: 312, baseType: !1348, size: 8, offset: 32)
!8716 = !DIDerivedType(tag: DW_TAG_member, name: "info", scope: !8709, file: !8578, line: 312, baseType: !8677, size: 32, offset: 40)
!8717 = !DIDerivedType(tag: DW_TAG_member, name: "address", scope: !8709, file: !8578, line: 312, baseType: !8718, size: 160, offset: 72)
!8718 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "acpi_address32_attribute", file: !8578, line: 287, size: 160, elements: !8719)
!8719 = !{!8720, !8721, !8722, !8723, !8724}
!8720 = !DIDerivedType(tag: DW_TAG_member, name: "granularity", scope: !8718, file: !8578, line: 288, baseType: !407, size: 32)
!8721 = !DIDerivedType(tag: DW_TAG_member, name: "minimum", scope: !8718, file: !8578, line: 289, baseType: !407, size: 32, offset: 32)
!8722 = !DIDerivedType(tag: DW_TAG_member, name: "maximum", scope: !8718, file: !8578, line: 290, baseType: !407, size: 32, offset: 64)
!8723 = !DIDerivedType(tag: DW_TAG_member, name: "translation_offset", scope: !8718, file: !8578, line: 291, baseType: !407, size: 32, offset: 96)
!8724 = !DIDerivedType(tag: DW_TAG_member, name: "address_length", scope: !8718, file: !8578, line: 292, baseType: !407, size: 32, offset: 128)
!8725 = !DIDerivedType(tag: DW_TAG_member, name: "resource_source", scope: !8709, file: !8578, line: 313, baseType: !8703, size: 88, offset: 232)
!8726 = !DIDerivedType(tag: DW_TAG_member, name: "address64", scope: !8583, file: !8578, line: 629, baseType: !8727, size: 480)
!8727 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "acpi_resource_address64", file: !8578, line: 316, size: 480, elements: !8728)
!8728 = !{!8729, !8730, !8731, !8732, !8733, !8734, !8735, !8743}
!8729 = !DIDerivedType(tag: DW_TAG_member, name: "resource_type", scope: !8727, file: !8578, line: 317, baseType: !1348, size: 8)
!8730 = !DIDerivedType(tag: DW_TAG_member, name: "producer_consumer", scope: !8727, file: !8578, line: 317, baseType: !1348, size: 8, offset: 8)
!8731 = !DIDerivedType(tag: DW_TAG_member, name: "decode", scope: !8727, file: !8578, line: 317, baseType: !1348, size: 8, offset: 16)
!8732 = !DIDerivedType(tag: DW_TAG_member, name: "min_address_fixed", scope: !8727, file: !8578, line: 317, baseType: !1348, size: 8, offset: 24)
!8733 = !DIDerivedType(tag: DW_TAG_member, name: "max_address_fixed", scope: !8727, file: !8578, line: 317, baseType: !1348, size: 8, offset: 32)
!8734 = !DIDerivedType(tag: DW_TAG_member, name: "info", scope: !8727, file: !8578, line: 317, baseType: !8677, size: 32, offset: 40)
!8735 = !DIDerivedType(tag: DW_TAG_member, name: "address", scope: !8727, file: !8578, line: 317, baseType: !8736, size: 320, offset: 72)
!8736 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "acpi_address64_attribute", file: !8578, line: 295, size: 320, elements: !8737)
!8737 = !{!8738, !8739, !8740, !8741, !8742}
!8738 = !DIDerivedType(tag: DW_TAG_member, name: "granularity", scope: !8736, file: !8578, line: 296, baseType: !413, size: 64)
!8739 = !DIDerivedType(tag: DW_TAG_member, name: "minimum", scope: !8736, file: !8578, line: 297, baseType: !413, size: 64, offset: 64)
!8740 = !DIDerivedType(tag: DW_TAG_member, name: "maximum", scope: !8736, file: !8578, line: 298, baseType: !413, size: 64, offset: 128)
!8741 = !DIDerivedType(tag: DW_TAG_member, name: "translation_offset", scope: !8736, file: !8578, line: 299, baseType: !413, size: 64, offset: 192)
!8742 = !DIDerivedType(tag: DW_TAG_member, name: "address_length", scope: !8736, file: !8578, line: 300, baseType: !413, size: 64, offset: 256)
!8743 = !DIDerivedType(tag: DW_TAG_member, name: "resource_source", scope: !8727, file: !8578, line: 318, baseType: !8703, size: 88, offset: 392)
!8744 = !DIDerivedType(tag: DW_TAG_member, name: "ext_address64", scope: !8583, file: !8578, line: 630, baseType: !8745, size: 464)
!8745 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "acpi_resource_extended_address64", file: !8578, line: 321, size: 464, elements: !8746)
!8746 = !{!8747, !8748, !8749, !8750, !8751, !8752, !8753, !8754, !8755}
!8747 = !DIDerivedType(tag: DW_TAG_member, name: "resource_type", scope: !8745, file: !8578, line: 322, baseType: !1348, size: 8)
!8748 = !DIDerivedType(tag: DW_TAG_member, name: "producer_consumer", scope: !8745, file: !8578, line: 322, baseType: !1348, size: 8, offset: 8)
!8749 = !DIDerivedType(tag: DW_TAG_member, name: "decode", scope: !8745, file: !8578, line: 322, baseType: !1348, size: 8, offset: 16)
!8750 = !DIDerivedType(tag: DW_TAG_member, name: "min_address_fixed", scope: !8745, file: !8578, line: 322, baseType: !1348, size: 8, offset: 24)
!8751 = !DIDerivedType(tag: DW_TAG_member, name: "max_address_fixed", scope: !8745, file: !8578, line: 322, baseType: !1348, size: 8, offset: 32)
!8752 = !DIDerivedType(tag: DW_TAG_member, name: "info", scope: !8745, file: !8578, line: 322, baseType: !8677, size: 32, offset: 40)
!8753 = !DIDerivedType(tag: DW_TAG_member, name: "revision_ID", scope: !8745, file: !8578, line: 322, baseType: !1348, size: 8, offset: 72)
!8754 = !DIDerivedType(tag: DW_TAG_member, name: "address", scope: !8745, file: !8578, line: 323, baseType: !8736, size: 320, offset: 80)
!8755 = !DIDerivedType(tag: DW_TAG_member, name: "type_specific", scope: !8745, file: !8578, line: 324, baseType: !413, size: 64, offset: 400)
!8756 = !DIDerivedType(tag: DW_TAG_member, name: "extended_irq", scope: !8583, file: !8578, line: 631, baseType: !8757, size: 168)
!8757 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "acpi_resource_extended_irq", file: !8578, line: 327, size: 168, elements: !8758)
!8758 = !{!8759, !8760, !8761, !8762, !8763, !8764, !8765, !8766}
!8759 = !DIDerivedType(tag: DW_TAG_member, name: "producer_consumer", scope: !8757, file: !8578, line: 328, baseType: !1348, size: 8)
!8760 = !DIDerivedType(tag: DW_TAG_member, name: "triggering", scope: !8757, file: !8578, line: 329, baseType: !1348, size: 8, offset: 8)
!8761 = !DIDerivedType(tag: DW_TAG_member, name: "polarity", scope: !8757, file: !8578, line: 330, baseType: !1348, size: 8, offset: 16)
!8762 = !DIDerivedType(tag: DW_TAG_member, name: "shareable", scope: !8757, file: !8578, line: 331, baseType: !1348, size: 8, offset: 24)
!8763 = !DIDerivedType(tag: DW_TAG_member, name: "wake_capable", scope: !8757, file: !8578, line: 332, baseType: !1348, size: 8, offset: 32)
!8764 = !DIDerivedType(tag: DW_TAG_member, name: "interrupt_count", scope: !8757, file: !8578, line: 333, baseType: !1348, size: 8, offset: 40)
!8765 = !DIDerivedType(tag: DW_TAG_member, name: "resource_source", scope: !8757, file: !8578, line: 334, baseType: !8703, size: 88, offset: 48)
!8766 = !DIDerivedType(tag: DW_TAG_member, name: "interrupts", scope: !8757, file: !8578, line: 335, baseType: !8767, size: 32, offset: 136)
!8767 = !DICompositeType(tag: DW_TAG_array_type, baseType: !407, size: 32, elements: !1367)
!8768 = !DIDerivedType(tag: DW_TAG_member, name: "generic_reg", scope: !8583, file: !8578, line: 632, baseType: !8769, size: 96)
!8769 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "acpi_resource_generic_register", file: !8578, line: 338, size: 96, elements: !8770)
!8770 = !{!8771, !8772, !8773, !8774, !8775}
!8771 = !DIDerivedType(tag: DW_TAG_member, name: "space_id", scope: !8769, file: !8578, line: 339, baseType: !1348, size: 8)
!8772 = !DIDerivedType(tag: DW_TAG_member, name: "bit_width", scope: !8769, file: !8578, line: 340, baseType: !1348, size: 8, offset: 8)
!8773 = !DIDerivedType(tag: DW_TAG_member, name: "bit_offset", scope: !8769, file: !8578, line: 341, baseType: !1348, size: 8, offset: 16)
!8774 = !DIDerivedType(tag: DW_TAG_member, name: "access_size", scope: !8769, file: !8578, line: 342, baseType: !1348, size: 8, offset: 24)
!8775 = !DIDerivedType(tag: DW_TAG_member, name: "address", scope: !8769, file: !8578, line: 343, baseType: !413, size: 64, offset: 32)
!8776 = !DIDerivedType(tag: DW_TAG_member, name: "gpio", scope: !8583, file: !8578, line: 633, baseType: !8777, size: 352)
!8777 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "acpi_resource_gpio", file: !8578, line: 346, size: 352, elements: !8778)
!8778 = !{!8779, !8780, !8781, !8782, !8783, !8784, !8785, !8786, !8787, !8788, !8789, !8790, !8791, !8792, !8793, !8795}
!8779 = !DIDerivedType(tag: DW_TAG_member, name: "revision_id", scope: !8777, file: !8578, line: 347, baseType: !1348, size: 8)
!8780 = !DIDerivedType(tag: DW_TAG_member, name: "connection_type", scope: !8777, file: !8578, line: 348, baseType: !1348, size: 8, offset: 8)
!8781 = !DIDerivedType(tag: DW_TAG_member, name: "producer_consumer", scope: !8777, file: !8578, line: 349, baseType: !1348, size: 8, offset: 16)
!8782 = !DIDerivedType(tag: DW_TAG_member, name: "pin_config", scope: !8777, file: !8578, line: 350, baseType: !1348, size: 8, offset: 24)
!8783 = !DIDerivedType(tag: DW_TAG_member, name: "shareable", scope: !8777, file: !8578, line: 351, baseType: !1348, size: 8, offset: 32)
!8784 = !DIDerivedType(tag: DW_TAG_member, name: "wake_capable", scope: !8777, file: !8578, line: 352, baseType: !1348, size: 8, offset: 40)
!8785 = !DIDerivedType(tag: DW_TAG_member, name: "io_restriction", scope: !8777, file: !8578, line: 353, baseType: !1348, size: 8, offset: 48)
!8786 = !DIDerivedType(tag: DW_TAG_member, name: "triggering", scope: !8777, file: !8578, line: 354, baseType: !1348, size: 8, offset: 56)
!8787 = !DIDerivedType(tag: DW_TAG_member, name: "polarity", scope: !8777, file: !8578, line: 355, baseType: !1348, size: 8, offset: 64)
!8788 = !DIDerivedType(tag: DW_TAG_member, name: "drive_strength", scope: !8777, file: !8578, line: 356, baseType: !855, size: 16, offset: 72)
!8789 = !DIDerivedType(tag: DW_TAG_member, name: "debounce_timeout", scope: !8777, file: !8578, line: 357, baseType: !855, size: 16, offset: 88)
!8790 = !DIDerivedType(tag: DW_TAG_member, name: "pin_table_length", scope: !8777, file: !8578, line: 358, baseType: !855, size: 16, offset: 104)
!8791 = !DIDerivedType(tag: DW_TAG_member, name: "vendor_length", scope: !8777, file: !8578, line: 359, baseType: !855, size: 16, offset: 120)
!8792 = !DIDerivedType(tag: DW_TAG_member, name: "resource_source", scope: !8777, file: !8578, line: 360, baseType: !8703, size: 88, offset: 136)
!8793 = !DIDerivedType(tag: DW_TAG_member, name: "pin_table", scope: !8777, file: !8578, line: 361, baseType: !8794, size: 64, offset: 224)
!8794 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !855, size: 64)
!8795 = !DIDerivedType(tag: DW_TAG_member, name: "vendor_data", scope: !8777, file: !8578, line: 362, baseType: !4119, size: 64, offset: 288)
!8796 = !DIDerivedType(tag: DW_TAG_member, name: "i2c_serial_bus", scope: !8583, file: !8578, line: 634, baseType: !8797, size: 288)
!8797 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "acpi_resource_i2c_serialbus", file: !8578, line: 412, size: 288, elements: !8798)
!8798 = !{!8799, !8800, !8801, !8802, !8803, !8804, !8805, !8806, !8807, !8808, !8809, !8810, !8811}
!8799 = !DIDerivedType(tag: DW_TAG_member, name: "revision_id", scope: !8797, file: !8578, line: 413, baseType: !1348, size: 8)
!8800 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !8797, file: !8578, line: 413, baseType: !1348, size: 8, offset: 8)
!8801 = !DIDerivedType(tag: DW_TAG_member, name: "producer_consumer", scope: !8797, file: !8578, line: 413, baseType: !1348, size: 8, offset: 16)
!8802 = !DIDerivedType(tag: DW_TAG_member, name: "slave_mode", scope: !8797, file: !8578, line: 413, baseType: !1348, size: 8, offset: 24)
!8803 = !DIDerivedType(tag: DW_TAG_member, name: "connection_sharing", scope: !8797, file: !8578, line: 413, baseType: !1348, size: 8, offset: 32)
!8804 = !DIDerivedType(tag: DW_TAG_member, name: "type_revision_id", scope: !8797, file: !8578, line: 413, baseType: !1348, size: 8, offset: 40)
!8805 = !DIDerivedType(tag: DW_TAG_member, name: "type_data_length", scope: !8797, file: !8578, line: 413, baseType: !855, size: 16, offset: 48)
!8806 = !DIDerivedType(tag: DW_TAG_member, name: "vendor_length", scope: !8797, file: !8578, line: 413, baseType: !855, size: 16, offset: 64)
!8807 = !DIDerivedType(tag: DW_TAG_member, name: "resource_source", scope: !8797, file: !8578, line: 413, baseType: !8703, size: 88, offset: 80)
!8808 = !DIDerivedType(tag: DW_TAG_member, name: "vendor_data", scope: !8797, file: !8578, line: 413, baseType: !4119, size: 64, offset: 168)
!8809 = !DIDerivedType(tag: DW_TAG_member, name: "access_mode", scope: !8797, file: !8578, line: 413, baseType: !1348, size: 8, offset: 232)
!8810 = !DIDerivedType(tag: DW_TAG_member, name: "slave_address", scope: !8797, file: !8578, line: 414, baseType: !855, size: 16, offset: 240)
!8811 = !DIDerivedType(tag: DW_TAG_member, name: "connection_speed", scope: !8797, file: !8578, line: 415, baseType: !407, size: 32, offset: 256)
!8812 = !DIDerivedType(tag: DW_TAG_member, name: "spi_serial_bus", scope: !8583, file: !8578, line: 635, baseType: !8813, size: 320)
!8813 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "acpi_resource_spi_serialbus", file: !8578, line: 423, size: 320, elements: !8814)
!8814 = !{!8815, !8816, !8817, !8818, !8819, !8820, !8821, !8822, !8823, !8824, !8825, !8826, !8827, !8828, !8829, !8830, !8831}
!8815 = !DIDerivedType(tag: DW_TAG_member, name: "revision_id", scope: !8813, file: !8578, line: 424, baseType: !1348, size: 8)
!8816 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !8813, file: !8578, line: 424, baseType: !1348, size: 8, offset: 8)
!8817 = !DIDerivedType(tag: DW_TAG_member, name: "producer_consumer", scope: !8813, file: !8578, line: 424, baseType: !1348, size: 8, offset: 16)
!8818 = !DIDerivedType(tag: DW_TAG_member, name: "slave_mode", scope: !8813, file: !8578, line: 424, baseType: !1348, size: 8, offset: 24)
!8819 = !DIDerivedType(tag: DW_TAG_member, name: "connection_sharing", scope: !8813, file: !8578, line: 424, baseType: !1348, size: 8, offset: 32)
!8820 = !DIDerivedType(tag: DW_TAG_member, name: "type_revision_id", scope: !8813, file: !8578, line: 424, baseType: !1348, size: 8, offset: 40)
!8821 = !DIDerivedType(tag: DW_TAG_member, name: "type_data_length", scope: !8813, file: !8578, line: 424, baseType: !855, size: 16, offset: 48)
!8822 = !DIDerivedType(tag: DW_TAG_member, name: "vendor_length", scope: !8813, file: !8578, line: 424, baseType: !855, size: 16, offset: 64)
!8823 = !DIDerivedType(tag: DW_TAG_member, name: "resource_source", scope: !8813, file: !8578, line: 424, baseType: !8703, size: 88, offset: 80)
!8824 = !DIDerivedType(tag: DW_TAG_member, name: "vendor_data", scope: !8813, file: !8578, line: 424, baseType: !4119, size: 64, offset: 168)
!8825 = !DIDerivedType(tag: DW_TAG_member, name: "wire_mode", scope: !8813, file: !8578, line: 424, baseType: !1348, size: 8, offset: 232)
!8826 = !DIDerivedType(tag: DW_TAG_member, name: "device_polarity", scope: !8813, file: !8578, line: 425, baseType: !1348, size: 8, offset: 240)
!8827 = !DIDerivedType(tag: DW_TAG_member, name: "data_bit_length", scope: !8813, file: !8578, line: 426, baseType: !1348, size: 8, offset: 248)
!8828 = !DIDerivedType(tag: DW_TAG_member, name: "clock_phase", scope: !8813, file: !8578, line: 427, baseType: !1348, size: 8, offset: 256)
!8829 = !DIDerivedType(tag: DW_TAG_member, name: "clock_polarity", scope: !8813, file: !8578, line: 428, baseType: !1348, size: 8, offset: 264)
!8830 = !DIDerivedType(tag: DW_TAG_member, name: "device_selection", scope: !8813, file: !8578, line: 429, baseType: !855, size: 16, offset: 272)
!8831 = !DIDerivedType(tag: DW_TAG_member, name: "connection_speed", scope: !8813, file: !8578, line: 430, baseType: !407, size: 32, offset: 288)
!8832 = !DIDerivedType(tag: DW_TAG_member, name: "uart_serial_bus", scope: !8583, file: !8578, line: 636, baseType: !8833, size: 344)
!8833 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "acpi_resource_uart_serialbus", file: !8578, line: 453, size: 344, elements: !8834)
!8834 = !{!8835, !8836, !8837, !8838, !8839, !8840, !8841, !8842, !8843, !8844, !8845, !8846, !8847, !8848, !8849, !8850, !8851, !8852, !8853}
!8835 = !DIDerivedType(tag: DW_TAG_member, name: "revision_id", scope: !8833, file: !8578, line: 454, baseType: !1348, size: 8)
!8836 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !8833, file: !8578, line: 454, baseType: !1348, size: 8, offset: 8)
!8837 = !DIDerivedType(tag: DW_TAG_member, name: "producer_consumer", scope: !8833, file: !8578, line: 454, baseType: !1348, size: 8, offset: 16)
!8838 = !DIDerivedType(tag: DW_TAG_member, name: "slave_mode", scope: !8833, file: !8578, line: 454, baseType: !1348, size: 8, offset: 24)
!8839 = !DIDerivedType(tag: DW_TAG_member, name: "connection_sharing", scope: !8833, file: !8578, line: 454, baseType: !1348, size: 8, offset: 32)
!8840 = !DIDerivedType(tag: DW_TAG_member, name: "type_revision_id", scope: !8833, file: !8578, line: 454, baseType: !1348, size: 8, offset: 40)
!8841 = !DIDerivedType(tag: DW_TAG_member, name: "type_data_length", scope: !8833, file: !8578, line: 454, baseType: !855, size: 16, offset: 48)
!8842 = !DIDerivedType(tag: DW_TAG_member, name: "vendor_length", scope: !8833, file: !8578, line: 454, baseType: !855, size: 16, offset: 64)
!8843 = !DIDerivedType(tag: DW_TAG_member, name: "resource_source", scope: !8833, file: !8578, line: 454, baseType: !8703, size: 88, offset: 80)
!8844 = !DIDerivedType(tag: DW_TAG_member, name: "vendor_data", scope: !8833, file: !8578, line: 454, baseType: !4119, size: 64, offset: 168)
!8845 = !DIDerivedType(tag: DW_TAG_member, name: "endian", scope: !8833, file: !8578, line: 454, baseType: !1348, size: 8, offset: 232)
!8846 = !DIDerivedType(tag: DW_TAG_member, name: "data_bits", scope: !8833, file: !8578, line: 455, baseType: !1348, size: 8, offset: 240)
!8847 = !DIDerivedType(tag: DW_TAG_member, name: "stop_bits", scope: !8833, file: !8578, line: 456, baseType: !1348, size: 8, offset: 248)
!8848 = !DIDerivedType(tag: DW_TAG_member, name: "flow_control", scope: !8833, file: !8578, line: 457, baseType: !1348, size: 8, offset: 256)
!8849 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !8833, file: !8578, line: 458, baseType: !1348, size: 8, offset: 264)
!8850 = !DIDerivedType(tag: DW_TAG_member, name: "lines_enabled", scope: !8833, file: !8578, line: 459, baseType: !1348, size: 8, offset: 272)
!8851 = !DIDerivedType(tag: DW_TAG_member, name: "rx_fifo_size", scope: !8833, file: !8578, line: 460, baseType: !855, size: 16, offset: 280)
!8852 = !DIDerivedType(tag: DW_TAG_member, name: "tx_fifo_size", scope: !8833, file: !8578, line: 461, baseType: !855, size: 16, offset: 296)
!8853 = !DIDerivedType(tag: DW_TAG_member, name: "default_baud_rate", scope: !8833, file: !8578, line: 462, baseType: !407, size: 32, offset: 312)
!8854 = !DIDerivedType(tag: DW_TAG_member, name: "common_serial_bus", scope: !8583, file: !8578, line: 637, baseType: !8855, size: 232)
!8855 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "acpi_resource_common_serialbus", file: !8578, line: 398, size: 232, elements: !8856)
!8856 = !{!8857, !8858, !8859, !8860, !8861, !8862, !8863, !8864, !8865, !8866}
!8857 = !DIDerivedType(tag: DW_TAG_member, name: "revision_id", scope: !8855, file: !8578, line: 399, baseType: !1348, size: 8)
!8858 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !8855, file: !8578, line: 399, baseType: !1348, size: 8, offset: 8)
!8859 = !DIDerivedType(tag: DW_TAG_member, name: "producer_consumer", scope: !8855, file: !8578, line: 399, baseType: !1348, size: 8, offset: 16)
!8860 = !DIDerivedType(tag: DW_TAG_member, name: "slave_mode", scope: !8855, file: !8578, line: 399, baseType: !1348, size: 8, offset: 24)
!8861 = !DIDerivedType(tag: DW_TAG_member, name: "connection_sharing", scope: !8855, file: !8578, line: 399, baseType: !1348, size: 8, offset: 32)
!8862 = !DIDerivedType(tag: DW_TAG_member, name: "type_revision_id", scope: !8855, file: !8578, line: 399, baseType: !1348, size: 8, offset: 40)
!8863 = !DIDerivedType(tag: DW_TAG_member, name: "type_data_length", scope: !8855, file: !8578, line: 399, baseType: !855, size: 16, offset: 48)
!8864 = !DIDerivedType(tag: DW_TAG_member, name: "vendor_length", scope: !8855, file: !8578, line: 399, baseType: !855, size: 16, offset: 64)
!8865 = !DIDerivedType(tag: DW_TAG_member, name: "resource_source", scope: !8855, file: !8578, line: 399, baseType: !8703, size: 88, offset: 80)
!8866 = !DIDerivedType(tag: DW_TAG_member, name: "vendor_data", scope: !8855, file: !8578, line: 399, baseType: !4119, size: 64, offset: 168)
!8867 = !DIDerivedType(tag: DW_TAG_member, name: "pin_function", scope: !8583, file: !8578, line: 638, baseType: !8868, size: 288)
!8868 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "acpi_resource_pin_function", file: !8578, line: 508, size: 288, elements: !8869)
!8869 = !{!8870, !8871, !8872, !8873, !8874, !8875, !8876, !8877, !8878}
!8870 = !DIDerivedType(tag: DW_TAG_member, name: "revision_id", scope: !8868, file: !8578, line: 509, baseType: !1348, size: 8)
!8871 = !DIDerivedType(tag: DW_TAG_member, name: "pin_config", scope: !8868, file: !8578, line: 510, baseType: !1348, size: 8, offset: 8)
!8872 = !DIDerivedType(tag: DW_TAG_member, name: "shareable", scope: !8868, file: !8578, line: 511, baseType: !1348, size: 8, offset: 16)
!8873 = !DIDerivedType(tag: DW_TAG_member, name: "function_number", scope: !8868, file: !8578, line: 512, baseType: !855, size: 16, offset: 24)
!8874 = !DIDerivedType(tag: DW_TAG_member, name: "pin_table_length", scope: !8868, file: !8578, line: 513, baseType: !855, size: 16, offset: 40)
!8875 = !DIDerivedType(tag: DW_TAG_member, name: "vendor_length", scope: !8868, file: !8578, line: 514, baseType: !855, size: 16, offset: 56)
!8876 = !DIDerivedType(tag: DW_TAG_member, name: "resource_source", scope: !8868, file: !8578, line: 515, baseType: !8703, size: 88, offset: 72)
!8877 = !DIDerivedType(tag: DW_TAG_member, name: "pin_table", scope: !8868, file: !8578, line: 516, baseType: !8794, size: 64, offset: 160)
!8878 = !DIDerivedType(tag: DW_TAG_member, name: "vendor_data", scope: !8868, file: !8578, line: 517, baseType: !4119, size: 64, offset: 224)
!8879 = !DIDerivedType(tag: DW_TAG_member, name: "pin_config", scope: !8583, file: !8578, line: 639, baseType: !8880, size: 312)
!8880 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "acpi_resource_pin_config", file: !8578, line: 520, size: 312, elements: !8881)
!8881 = !{!8882, !8883, !8884, !8885, !8886, !8887, !8888, !8889, !8890, !8891}
!8882 = !DIDerivedType(tag: DW_TAG_member, name: "revision_id", scope: !8880, file: !8578, line: 521, baseType: !1348, size: 8)
!8883 = !DIDerivedType(tag: DW_TAG_member, name: "producer_consumer", scope: !8880, file: !8578, line: 522, baseType: !1348, size: 8, offset: 8)
!8884 = !DIDerivedType(tag: DW_TAG_member, name: "shareable", scope: !8880, file: !8578, line: 523, baseType: !1348, size: 8, offset: 16)
!8885 = !DIDerivedType(tag: DW_TAG_member, name: "pin_config_type", scope: !8880, file: !8578, line: 524, baseType: !1348, size: 8, offset: 24)
!8886 = !DIDerivedType(tag: DW_TAG_member, name: "pin_config_value", scope: !8880, file: !8578, line: 525, baseType: !407, size: 32, offset: 32)
!8887 = !DIDerivedType(tag: DW_TAG_member, name: "pin_table_length", scope: !8880, file: !8578, line: 526, baseType: !855, size: 16, offset: 64)
!8888 = !DIDerivedType(tag: DW_TAG_member, name: "vendor_length", scope: !8880, file: !8578, line: 527, baseType: !855, size: 16, offset: 80)
!8889 = !DIDerivedType(tag: DW_TAG_member, name: "resource_source", scope: !8880, file: !8578, line: 528, baseType: !8703, size: 88, offset: 96)
!8890 = !DIDerivedType(tag: DW_TAG_member, name: "pin_table", scope: !8880, file: !8578, line: 529, baseType: !8794, size: 64, offset: 184)
!8891 = !DIDerivedType(tag: DW_TAG_member, name: "vendor_data", scope: !8880, file: !8578, line: 530, baseType: !4119, size: 64, offset: 248)
!8892 = !DIDerivedType(tag: DW_TAG_member, name: "pin_group", scope: !8583, file: !8578, line: 640, baseType: !8893, size: 256)
!8893 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "acpi_resource_pin_group", file: !8578, line: 550, size: 256, elements: !8894)
!8894 = !{!8895, !8896, !8897, !8898, !8899, !8900, !8905}
!8895 = !DIDerivedType(tag: DW_TAG_member, name: "revision_id", scope: !8893, file: !8578, line: 551, baseType: !1348, size: 8)
!8896 = !DIDerivedType(tag: DW_TAG_member, name: "producer_consumer", scope: !8893, file: !8578, line: 552, baseType: !1348, size: 8, offset: 8)
!8897 = !DIDerivedType(tag: DW_TAG_member, name: "pin_table_length", scope: !8893, file: !8578, line: 553, baseType: !855, size: 16, offset: 16)
!8898 = !DIDerivedType(tag: DW_TAG_member, name: "vendor_length", scope: !8893, file: !8578, line: 554, baseType: !855, size: 16, offset: 32)
!8899 = !DIDerivedType(tag: DW_TAG_member, name: "pin_table", scope: !8893, file: !8578, line: 555, baseType: !8794, size: 64, offset: 48)
!8900 = !DIDerivedType(tag: DW_TAG_member, name: "resource_label", scope: !8893, file: !8578, line: 556, baseType: !8901, size: 80, offset: 112)
!8901 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "acpi_resource_label", file: !8578, line: 258, size: 80, elements: !8902)
!8902 = !{!8903, !8904}
!8903 = !DIDerivedType(tag: DW_TAG_member, name: "string_length", scope: !8901, file: !8578, line: 259, baseType: !855, size: 16)
!8904 = !DIDerivedType(tag: DW_TAG_member, name: "string_ptr", scope: !8901, file: !8578, line: 260, baseType: !267, size: 64, offset: 16)
!8905 = !DIDerivedType(tag: DW_TAG_member, name: "vendor_data", scope: !8893, file: !8578, line: 557, baseType: !4119, size: 64, offset: 192)
!8906 = !DIDerivedType(tag: DW_TAG_member, name: "pin_group_function", scope: !8583, file: !8578, line: 641, baseType: !8907, size: 288)
!8907 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "acpi_resource_pin_group_function", file: !8578, line: 560, size: 288, elements: !8908)
!8908 = !{!8909, !8910, !8911, !8912, !8913, !8914, !8915, !8916}
!8909 = !DIDerivedType(tag: DW_TAG_member, name: "revision_id", scope: !8907, file: !8578, line: 561, baseType: !1348, size: 8)
!8910 = !DIDerivedType(tag: DW_TAG_member, name: "producer_consumer", scope: !8907, file: !8578, line: 562, baseType: !1348, size: 8, offset: 8)
!8911 = !DIDerivedType(tag: DW_TAG_member, name: "shareable", scope: !8907, file: !8578, line: 563, baseType: !1348, size: 8, offset: 16)
!8912 = !DIDerivedType(tag: DW_TAG_member, name: "function_number", scope: !8907, file: !8578, line: 564, baseType: !855, size: 16, offset: 24)
!8913 = !DIDerivedType(tag: DW_TAG_member, name: "vendor_length", scope: !8907, file: !8578, line: 565, baseType: !855, size: 16, offset: 40)
!8914 = !DIDerivedType(tag: DW_TAG_member, name: "resource_source", scope: !8907, file: !8578, line: 566, baseType: !8703, size: 88, offset: 56)
!8915 = !DIDerivedType(tag: DW_TAG_member, name: "resource_source_label", scope: !8907, file: !8578, line: 567, baseType: !8901, size: 80, offset: 144)
!8916 = !DIDerivedType(tag: DW_TAG_member, name: "vendor_data", scope: !8907, file: !8578, line: 568, baseType: !4119, size: 64, offset: 224)
!8917 = !DIDerivedType(tag: DW_TAG_member, name: "pin_group_config", scope: !8583, file: !8578, line: 642, baseType: !8918, size: 312)
!8918 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "acpi_resource_pin_group_config", file: !8578, line: 571, size: 312, elements: !8919)
!8919 = !{!8920, !8921, !8922, !8923, !8924, !8925, !8926, !8927, !8928}
!8920 = !DIDerivedType(tag: DW_TAG_member, name: "revision_id", scope: !8918, file: !8578, line: 572, baseType: !1348, size: 8)
!8921 = !DIDerivedType(tag: DW_TAG_member, name: "producer_consumer", scope: !8918, file: !8578, line: 573, baseType: !1348, size: 8, offset: 8)
!8922 = !DIDerivedType(tag: DW_TAG_member, name: "shareable", scope: !8918, file: !8578, line: 574, baseType: !1348, size: 8, offset: 16)
!8923 = !DIDerivedType(tag: DW_TAG_member, name: "pin_config_type", scope: !8918, file: !8578, line: 575, baseType: !1348, size: 8, offset: 24)
!8924 = !DIDerivedType(tag: DW_TAG_member, name: "pin_config_value", scope: !8918, file: !8578, line: 576, baseType: !407, size: 32, offset: 32)
!8925 = !DIDerivedType(tag: DW_TAG_member, name: "vendor_length", scope: !8918, file: !8578, line: 577, baseType: !855, size: 16, offset: 64)
!8926 = !DIDerivedType(tag: DW_TAG_member, name: "resource_source", scope: !8918, file: !8578, line: 578, baseType: !8703, size: 88, offset: 80)
!8927 = !DIDerivedType(tag: DW_TAG_member, name: "resource_source_label", scope: !8918, file: !8578, line: 579, baseType: !8901, size: 80, offset: 168)
!8928 = !DIDerivedType(tag: DW_TAG_member, name: "vendor_data", scope: !8918, file: !8578, line: 580, baseType: !4119, size: 64, offset: 248)
!8929 = !DIDerivedType(tag: DW_TAG_member, name: "address", scope: !8583, file: !8578, line: 646, baseType: !8930, size: 72)
!8930 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "acpi_resource_address", file: !8578, line: 303, size: 72, elements: !8931)
!8931 = !{!8932, !8933, !8934, !8935, !8936, !8937}
!8932 = !DIDerivedType(tag: DW_TAG_member, name: "resource_type", scope: !8930, file: !8578, line: 304, baseType: !1348, size: 8)
!8933 = !DIDerivedType(tag: DW_TAG_member, name: "producer_consumer", scope: !8930, file: !8578, line: 304, baseType: !1348, size: 8, offset: 8)
!8934 = !DIDerivedType(tag: DW_TAG_member, name: "decode", scope: !8930, file: !8578, line: 304, baseType: !1348, size: 8, offset: 16)
!8935 = !DIDerivedType(tag: DW_TAG_member, name: "min_address_fixed", scope: !8930, file: !8578, line: 304, baseType: !1348, size: 8, offset: 24)
!8936 = !DIDerivedType(tag: DW_TAG_member, name: "max_address_fixed", scope: !8930, file: !8578, line: 304, baseType: !1348, size: 8, offset: 32)
!8937 = !DIDerivedType(tag: DW_TAG_member, name: "info", scope: !8930, file: !8578, line: 304, baseType: !8677, size: 32, offset: 40)
!8938 = !DILocalVariable(name: "ares", arg: 1, scope: !8573, file: !3, line: 1518, type: !8576)
!8939 = !DILocation(line: 1518, column: 62, scope: !8573)
!8940 = !DILocalVariable(name: "data", arg: 2, scope: !8573, file: !3, line: 1518, type: !193)
!8941 = !DILocation(line: 1518, column: 74, scope: !8573)
!8942 = !DILocalVariable(name: "is_serial_bus_slave_p", scope: !8573, file: !3, line: 1520, type: !887)
!8943 = !DILocation(line: 1520, column: 8, scope: !8573)
!8944 = !DILocation(line: 1520, column: 32, scope: !8573)
!8945 = !DILocation(line: 1522, column: 6, scope: !8946)
!8946 = distinct !DILexicalBlock(scope: !8573, file: !3, line: 1522, column: 6)
!8947 = !DILocation(line: 1522, column: 12, scope: !8946)
!8948 = !DILocation(line: 1522, column: 17, scope: !8946)
!8949 = !DILocation(line: 1522, column: 6, scope: !8573)
!8950 = !DILocation(line: 1523, column: 3, scope: !8946)
!8951 = !DILocation(line: 1525, column: 3, scope: !8573)
!8952 = !DILocation(line: 1525, column: 25, scope: !8573)
!8953 = !DILocation(line: 1528, column: 2, scope: !8573)
!8954 = !DILocation(line: 1529, column: 1, scope: !8573)
!8955 = distinct !DISubprogram(name: "register_dock_dependent_device", scope: !4021, file: !4021, line: 51, type: !8956, scopeLine: 52, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !239)
!8956 = !DISubroutineType(types: !8957)
!8957 = !{null, !4035, !4017}
!8958 = !DILocalVariable(name: "adev", arg: 1, scope: !8955, file: !4021, line: 51, type: !4035)
!8959 = !DILocation(line: 51, column: 71, scope: !8955)
!8960 = !DILocalVariable(name: "dshandle", arg: 2, scope: !8955, file: !4021, line: 52, type: !4017)
!8961 = !DILocation(line: 52, column: 21, scope: !8955)
!8962 = !DILocation(line: 52, column: 32, scope: !8955)
!8963 = distinct !DISubprogram(name: "acpi_scan_attach_handler", scope: !3, file: !3, line: 1935, type: !4262, scopeLine: 1936, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !239)
!8964 = !DILocalVariable(name: "device", arg: 1, scope: !8963, file: !3, line: 1935, type: !4035)
!8965 = !DILocation(line: 1935, column: 57, scope: !8963)
!8966 = !DILocalVariable(name: "hwid", scope: !8963, file: !3, line: 1937, type: !4030)
!8967 = !DILocation(line: 1937, column: 27, scope: !8963)
!8968 = !DILocalVariable(name: "ret", scope: !8963, file: !3, line: 1938, type: !251)
!8969 = !DILocation(line: 1938, column: 6, scope: !8963)
!8970 = !DILocalVariable(name: "__mptr", scope: !8971, file: !3, line: 1940, type: !193)
!8971 = distinct !DILexicalBlock(scope: !8972, file: !3, line: 1940, column: 2)
!8972 = distinct !DILexicalBlock(scope: !8963, file: !3, line: 1940, column: 2)
!8973 = !DILocation(line: 1940, column: 2, scope: !8971)
!8974 = !DILocation(line: 1940, column: 2, scope: !8975)
!8975 = distinct !DILexicalBlock(scope: !8971, file: !3, line: 1940, column: 2)
!8976 = !DILocation(line: 1940, column: 2, scope: !8972)
!8977 = !DILocation(line: 1940, column: 2, scope: !8978)
!8978 = distinct !DILexicalBlock(scope: !8972, file: !3, line: 1940, column: 2)
!8979 = !DILocalVariable(name: "devid", scope: !8980, file: !3, line: 1941, type: !3463)
!8980 = distinct !DILexicalBlock(scope: !8978, file: !3, line: 1940, column: 52)
!8981 = !DILocation(line: 1941, column: 32, scope: !8980)
!8982 = !DILocalVariable(name: "handler", scope: !8980, file: !3, line: 1942, type: !4236)
!8983 = !DILocation(line: 1942, column: 29, scope: !8980)
!8984 = !DILocation(line: 1944, column: 37, scope: !8980)
!8985 = !DILocation(line: 1944, column: 43, scope: !8980)
!8986 = !DILocation(line: 1944, column: 13, scope: !8980)
!8987 = !DILocation(line: 1944, column: 11, scope: !8980)
!8988 = !DILocation(line: 1945, column: 7, scope: !8989)
!8989 = distinct !DILexicalBlock(scope: !8980, file: !3, line: 1945, column: 7)
!8990 = !DILocation(line: 1945, column: 7, scope: !8980)
!8991 = !DILocation(line: 1946, column: 9, scope: !8992)
!8992 = distinct !DILexicalBlock(scope: !8993, file: !3, line: 1946, column: 8)
!8993 = distinct !DILexicalBlock(scope: !8989, file: !3, line: 1945, column: 16)
!8994 = !DILocation(line: 1946, column: 18, scope: !8992)
!8995 = !DILocation(line: 1946, column: 8, scope: !8993)
!8996 = !DILocation(line: 1947, column: 5, scope: !8997)
!8997 = distinct !DILexicalBlock(scope: !8992, file: !3, line: 1946, column: 26)
!8998 = !DILocation(line: 1947, column: 13, scope: !8997)
!8999 = !DILocation(line: 1947, column: 17, scope: !8997)
!9000 = !DILocation(line: 1947, column: 22, scope: !8997)
!9001 = !DILocation(line: 1947, column: 34, scope: !8997)
!9002 = !DILocation(line: 1948, column: 5, scope: !8997)
!9003 = !DILocation(line: 1950, column: 22, scope: !8993)
!9004 = !DILocation(line: 1950, column: 4, scope: !8993)
!9005 = !DILocation(line: 1950, column: 12, scope: !8993)
!9006 = !DILocation(line: 1950, column: 20, scope: !8993)
!9007 = !DILocation(line: 1951, column: 10, scope: !8993)
!9008 = !DILocation(line: 1951, column: 19, scope: !8993)
!9009 = !DILocation(line: 1951, column: 26, scope: !8993)
!9010 = !DILocation(line: 1951, column: 34, scope: !8993)
!9011 = !DILocation(line: 1951, column: 8, scope: !8993)
!9012 = !DILocation(line: 1952, column: 8, scope: !9013)
!9013 = distinct !DILexicalBlock(scope: !8993, file: !3, line: 1952, column: 8)
!9014 = !DILocation(line: 1952, column: 12, scope: !9013)
!9015 = !DILocation(line: 1952, column: 8, scope: !8993)
!9016 = !DILocation(line: 1953, column: 5, scope: !9013)
!9017 = !DILocation(line: 1955, column: 4, scope: !8993)
!9018 = !DILocation(line: 1955, column: 12, scope: !8993)
!9019 = !DILocation(line: 1955, column: 20, scope: !8993)
!9020 = !DILocation(line: 1956, column: 8, scope: !9021)
!9021 = distinct !DILexicalBlock(scope: !8993, file: !3, line: 1956, column: 8)
!9022 = !DILocation(line: 1956, column: 12, scope: !9021)
!9023 = !DILocation(line: 1956, column: 8, scope: !8993)
!9024 = !DILocation(line: 1957, column: 5, scope: !9021)
!9025 = !DILocation(line: 1958, column: 3, scope: !8993)
!9026 = !DILocation(line: 1959, column: 2, scope: !8980)
!9027 = !DILocalVariable(name: "__mptr", scope: !9028, file: !3, line: 1940, type: !193)
!9028 = distinct !DILexicalBlock(scope: !8978, file: !3, line: 1940, column: 2)
!9029 = !DILocation(line: 1940, column: 2, scope: !9028)
!9030 = !DILocation(line: 1940, column: 2, scope: !9031)
!9031 = distinct !DILexicalBlock(scope: !9028, file: !3, line: 1940, column: 2)
!9032 = distinct !{!9032, !8976, !9033}
!9033 = !DILocation(line: 1959, column: 2, scope: !8972)
!9034 = !DILocation(line: 1961, column: 9, scope: !8963)
!9035 = !DILocation(line: 1961, column: 2, scope: !8963)
!9036 = distinct !DISubprogram(name: "acpi_device_set_enumerated", scope: !170, file: !170, line: 664, type: !4252, scopeLine: 665, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !239)
!9037 = !DILocalVariable(name: "adev", arg: 1, scope: !9036, file: !170, line: 664, type: !4035)
!9038 = !DILocation(line: 664, column: 67, scope: !9036)
!9039 = !DILocation(line: 666, column: 2, scope: !9036)
!9040 = !DILocation(line: 666, column: 8, scope: !9036)
!9041 = !DILocation(line: 666, column: 14, scope: !9036)
!9042 = !DILocation(line: 666, column: 22, scope: !9036)
!9043 = !DILocation(line: 667, column: 1, scope: !9036)
!9044 = distinct !DISubprogram(name: "acpi_default_enumeration", scope: !3, file: !3, line: 1897, type: !4252, scopeLine: 1898, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !239)
!9045 = !DILocalVariable(name: "device", arg: 1, scope: !9044, file: !3, line: 1897, type: !4035)
!9046 = !DILocation(line: 1897, column: 58, scope: !9044)
!9047 = !DILocation(line: 1903, column: 7, scope: !9048)
!9048 = distinct !DILexicalBlock(scope: !9044, file: !3, line: 1903, column: 6)
!9049 = !DILocation(line: 1903, column: 15, scope: !9048)
!9050 = !DILocation(line: 1903, column: 21, scope: !9048)
!9051 = !DILocation(line: 1903, column: 6, scope: !9044)
!9052 = !DILocation(line: 1904, column: 31, scope: !9053)
!9053 = distinct !DILexicalBlock(scope: !9048, file: !3, line: 1903, column: 44)
!9054 = !DILocation(line: 1904, column: 3, scope: !9053)
!9055 = !DILocation(line: 1905, column: 30, scope: !9053)
!9056 = !DILocation(line: 1905, column: 3, scope: !9053)
!9057 = !DILocation(line: 1906, column: 2, scope: !9053)
!9058 = !DILocation(line: 1908, column: 37, scope: !9059)
!9059 = distinct !DILexicalBlock(scope: !9048, file: !3, line: 1906, column: 9)
!9060 = !DILocation(line: 1907, column: 3, scope: !9059)
!9061 = !DILocation(line: 1910, column: 1, scope: !9044)
!9062 = distinct !DISubprogram(name: "acpi_scan_match_handler", scope: !3, file: !3, line: 1764, type: !9063, scopeLine: 1766, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !239)
!9063 = !DISubroutineType(types: !9064)
!9064 = !{!4236, !213, !4245}
!9065 = !DILocalVariable(name: "idstr", arg: 1, scope: !9062, file: !3, line: 1764, type: !213)
!9066 = !DILocation(line: 1764, column: 70, scope: !9062)
!9067 = !DILocalVariable(name: "matchid", arg: 2, scope: !9062, file: !3, line: 1765, type: !4245)
!9068 = !DILocation(line: 1765, column: 36, scope: !9062)
!9069 = !DILocalVariable(name: "handler", scope: !9062, file: !3, line: 1767, type: !4236)
!9070 = !DILocation(line: 1767, column: 28, scope: !9062)
!9071 = !DILocalVariable(name: "__mptr", scope: !9072, file: !3, line: 1769, type: !193)
!9072 = distinct !DILexicalBlock(scope: !9073, file: !3, line: 1769, column: 2)
!9073 = distinct !DILexicalBlock(scope: !9062, file: !3, line: 1769, column: 2)
!9074 = !DILocation(line: 1769, column: 2, scope: !9072)
!9075 = !DILocation(line: 1769, column: 2, scope: !9076)
!9076 = distinct !DILexicalBlock(scope: !9072, file: !3, line: 1769, column: 2)
!9077 = !DILocation(line: 1769, column: 2, scope: !9073)
!9078 = !DILocation(line: 1769, column: 2, scope: !9079)
!9079 = distinct !DILexicalBlock(scope: !9073, file: !3, line: 1769, column: 2)
!9080 = !DILocation(line: 1770, column: 34, scope: !9081)
!9081 = distinct !DILexicalBlock(scope: !9079, file: !3, line: 1770, column: 7)
!9082 = !DILocation(line: 1770, column: 43, scope: !9081)
!9083 = !DILocation(line: 1770, column: 50, scope: !9081)
!9084 = !DILocation(line: 1770, column: 7, scope: !9081)
!9085 = !DILocation(line: 1770, column: 7, scope: !9079)
!9086 = !DILocation(line: 1771, column: 11, scope: !9081)
!9087 = !DILocation(line: 1771, column: 4, scope: !9081)
!9088 = !DILocation(line: 1770, column: 57, scope: !9081)
!9089 = !DILocalVariable(name: "__mptr", scope: !9090, file: !3, line: 1769, type: !193)
!9090 = distinct !DILexicalBlock(scope: !9079, file: !3, line: 1769, column: 2)
!9091 = !DILocation(line: 1769, column: 2, scope: !9090)
!9092 = !DILocation(line: 1769, column: 2, scope: !9093)
!9093 = distinct !DILexicalBlock(scope: !9090, file: !3, line: 1769, column: 2)
!9094 = distinct !{!9094, !9077, !9095}
!9095 = !DILocation(line: 1771, column: 11, scope: !9073)
!9096 = !DILocation(line: 1773, column: 2, scope: !9062)
!9097 = !DILocation(line: 1774, column: 1, scope: !9062)
!9098 = distinct !DISubprogram(name: "acpi_scan_handler_matching", scope: !3, file: !3, line: 1744, type: !9099, scopeLine: 1747, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !239)
!9099 = !DISubroutineType(types: !9100)
!9100 = !{!482, !4236, !213, !4245}
!9101 = !DILocalVariable(name: "handler", arg: 1, scope: !9098, file: !3, line: 1744, type: !4236)
!9102 = !DILocation(line: 1744, column: 66, scope: !9098)
!9103 = !DILocalVariable(name: "idstr", arg: 2, scope: !9098, file: !3, line: 1745, type: !213)
!9104 = !DILocation(line: 1745, column: 24, scope: !9098)
!9105 = !DILocalVariable(name: "matchid", arg: 3, scope: !9098, file: !3, line: 1746, type: !4245)
!9106 = !DILocation(line: 1746, column: 42, scope: !9098)
!9107 = !DILocalVariable(name: "devid", scope: !9098, file: !3, line: 1748, type: !3463)
!9108 = !DILocation(line: 1748, column: 31, scope: !9098)
!9109 = !DILocation(line: 1750, column: 6, scope: !9110)
!9110 = distinct !DILexicalBlock(scope: !9098, file: !3, line: 1750, column: 6)
!9111 = !DILocation(line: 1750, column: 15, scope: !9110)
!9112 = !DILocation(line: 1750, column: 6, scope: !9098)
!9113 = !DILocation(line: 1751, column: 10, scope: !9110)
!9114 = !DILocation(line: 1751, column: 19, scope: !9110)
!9115 = !DILocation(line: 1751, column: 25, scope: !9110)
!9116 = !DILocation(line: 1751, column: 32, scope: !9110)
!9117 = !DILocation(line: 1751, column: 3, scope: !9110)
!9118 = !DILocation(line: 1753, column: 15, scope: !9119)
!9119 = distinct !DILexicalBlock(scope: !9098, file: !3, line: 1753, column: 2)
!9120 = !DILocation(line: 1753, column: 24, scope: !9119)
!9121 = !DILocation(line: 1753, column: 13, scope: !9119)
!9122 = !DILocation(line: 1753, column: 7, scope: !9119)
!9123 = !DILocation(line: 1753, column: 29, scope: !9124)
!9124 = distinct !DILexicalBlock(scope: !9119, file: !3, line: 1753, column: 2)
!9125 = !DILocation(line: 1753, column: 36, scope: !9124)
!9126 = !DILocation(line: 1753, column: 2, scope: !9119)
!9127 = !DILocation(line: 1754, column: 23, scope: !9128)
!9128 = distinct !DILexicalBlock(scope: !9124, file: !3, line: 1754, column: 7)
!9129 = !DILocation(line: 1754, column: 30, scope: !9128)
!9130 = !DILocation(line: 1754, column: 34, scope: !9128)
!9131 = !DILocation(line: 1754, column: 8, scope: !9128)
!9132 = !DILocation(line: 1754, column: 7, scope: !9124)
!9133 = !DILocation(line: 1755, column: 8, scope: !9134)
!9134 = distinct !DILexicalBlock(scope: !9135, file: !3, line: 1755, column: 8)
!9135 = distinct !DILexicalBlock(scope: !9128, file: !3, line: 1754, column: 42)
!9136 = !DILocation(line: 1755, column: 8, scope: !9135)
!9137 = !DILocation(line: 1756, column: 16, scope: !9134)
!9138 = !DILocation(line: 1756, column: 6, scope: !9134)
!9139 = !DILocation(line: 1756, column: 14, scope: !9134)
!9140 = !DILocation(line: 1756, column: 5, scope: !9134)
!9141 = !DILocation(line: 1758, column: 4, scope: !9135)
!9142 = !DILocation(line: 1754, column: 39, scope: !9128)
!9143 = !DILocation(line: 1753, column: 48, scope: !9124)
!9144 = !DILocation(line: 1753, column: 2, scope: !9124)
!9145 = distinct !{!9145, !9126, !9146}
!9146 = !DILocation(line: 1759, column: 3, scope: !9119)
!9147 = !DILocation(line: 1761, column: 2, scope: !9098)
!9148 = !DILocation(line: 1762, column: 1, scope: !9098)
!9149 = distinct !DISubprogram(name: "acpi_bus_type_and_status", scope: !3, file: !3, line: 1695, type: !9150, scopeLine: 1697, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !239)
!9150 = !DISubroutineType(types: !9151)
!9151 = !{!251, !4017, !700, !9152}
!9152 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !415, size: 64)
!9153 = !DILocalVariable(name: "handle", arg: 1, scope: !9149, file: !3, line: 1695, type: !4017)
!9154 = !DILocation(line: 1695, column: 49, scope: !9149)
!9155 = !DILocalVariable(name: "type", arg: 2, scope: !9149, file: !3, line: 1695, type: !700)
!9156 = !DILocation(line: 1695, column: 62, scope: !9149)
!9157 = !DILocalVariable(name: "sta", arg: 3, scope: !9149, file: !3, line: 1696, type: !9152)
!9158 = !DILocation(line: 1696, column: 29, scope: !9149)
!9159 = !DILocalVariable(name: "status", scope: !9149, file: !3, line: 1698, type: !4358)
!9160 = !DILocation(line: 1698, column: 14, scope: !9149)
!9161 = !DILocalVariable(name: "acpi_type", scope: !9149, file: !3, line: 1699, type: !4101)
!9162 = !DILocation(line: 1699, column: 19, scope: !9149)
!9163 = !DILocation(line: 1701, column: 25, scope: !9149)
!9164 = !DILocation(line: 1701, column: 11, scope: !9149)
!9165 = !DILocation(line: 1701, column: 9, scope: !9149)
!9166 = !DILocation(line: 1702, column: 6, scope: !9167)
!9167 = distinct !DILexicalBlock(scope: !9149, file: !3, line: 1702, column: 6)
!9168 = !DILocation(line: 1702, column: 6, scope: !9149)
!9169 = !DILocation(line: 1703, column: 3, scope: !9167)
!9170 = !DILocation(line: 1705, column: 10, scope: !9149)
!9171 = !DILocation(line: 1705, column: 2, scope: !9149)
!9172 = !DILocation(line: 1708, column: 36, scope: !9173)
!9173 = distinct !DILexicalBlock(scope: !9174, file: !3, line: 1708, column: 7)
!9174 = distinct !DILexicalBlock(scope: !9149, file: !3, line: 1705, column: 21)
!9175 = !DILocation(line: 1708, column: 7, scope: !9173)
!9176 = !DILocation(line: 1708, column: 7, scope: !9174)
!9177 = !DILocation(line: 1709, column: 4, scope: !9173)
!9178 = !DILocation(line: 1711, column: 4, scope: !9174)
!9179 = !DILocation(line: 1711, column: 9, scope: !9174)
!9180 = !DILocation(line: 1716, column: 4, scope: !9174)
!9181 = !DILocation(line: 1716, column: 8, scope: !9174)
!9182 = !DILocation(line: 1717, column: 3, scope: !9174)
!9183 = !DILocation(line: 1719, column: 4, scope: !9174)
!9184 = !DILocation(line: 1719, column: 9, scope: !9174)
!9185 = !DILocation(line: 1720, column: 39, scope: !9174)
!9186 = !DILocation(line: 1720, column: 47, scope: !9174)
!9187 = !DILocation(line: 1720, column: 12, scope: !9174)
!9188 = !DILocation(line: 1720, column: 10, scope: !9174)
!9189 = !DILocation(line: 1721, column: 7, scope: !9190)
!9190 = distinct !DILexicalBlock(scope: !9174, file: !3, line: 1721, column: 7)
!9191 = !DILocation(line: 1721, column: 7, scope: !9174)
!9192 = !DILocation(line: 1722, column: 4, scope: !9190)
!9193 = !DILocation(line: 1723, column: 3, scope: !9174)
!9194 = !DILocation(line: 1725, column: 4, scope: !9174)
!9195 = !DILocation(line: 1725, column: 9, scope: !9174)
!9196 = !DILocation(line: 1726, column: 4, scope: !9174)
!9197 = !DILocation(line: 1726, column: 8, scope: !9174)
!9198 = !DILocation(line: 1727, column: 3, scope: !9174)
!9199 = !DILocation(line: 1729, column: 4, scope: !9174)
!9200 = !DILocation(line: 1729, column: 9, scope: !9174)
!9201 = !DILocation(line: 1730, column: 4, scope: !9174)
!9202 = !DILocation(line: 1730, column: 8, scope: !9174)
!9203 = !DILocation(line: 1731, column: 3, scope: !9174)
!9204 = !DILocation(line: 1733, column: 3, scope: !9174)
!9205 = !DILocation(line: 1736, column: 2, scope: !9149)
!9206 = !DILocation(line: 1737, column: 1, scope: !9149)
!9207 = distinct !DISubprogram(name: "acpi_scan_init_hotplug", scope: !3, file: !3, line: 1788, type: !4252, scopeLine: 1789, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !239)
!9208 = !DILocalVariable(name: "adev", arg: 1, scope: !9207, file: !3, line: 1788, type: !4035)
!9209 = !DILocation(line: 1788, column: 56, scope: !9207)
!9210 = !DILocalVariable(name: "hwid", scope: !9207, file: !3, line: 1790, type: !4030)
!9211 = !DILocation(line: 1790, column: 27, scope: !9207)
!9212 = !DILocation(line: 1792, column: 22, scope: !9213)
!9213 = distinct !DILexicalBlock(scope: !9207, file: !3, line: 1792, column: 6)
!9214 = !DILocation(line: 1792, column: 28, scope: !9213)
!9215 = !DILocation(line: 1792, column: 6, scope: !9213)
!9216 = !DILocation(line: 1792, column: 36, scope: !9213)
!9217 = !DILocation(line: 1792, column: 56, scope: !9213)
!9218 = !DILocation(line: 1792, column: 39, scope: !9213)
!9219 = !DILocation(line: 1792, column: 6, scope: !9207)
!9220 = !DILocation(line: 1793, column: 17, scope: !9221)
!9221 = distinct !DILexicalBlock(scope: !9213, file: !3, line: 1792, column: 63)
!9222 = !DILocation(line: 1793, column: 3, scope: !9221)
!9223 = !DILocation(line: 1794, column: 3, scope: !9221)
!9224 = !DILocalVariable(name: "__mptr", scope: !9225, file: !3, line: 1796, type: !193)
!9225 = distinct !DILexicalBlock(scope: !9226, file: !3, line: 1796, column: 2)
!9226 = distinct !DILexicalBlock(scope: !9207, file: !3, line: 1796, column: 2)
!9227 = !DILocation(line: 1796, column: 2, scope: !9225)
!9228 = !DILocation(line: 1796, column: 2, scope: !9229)
!9229 = distinct !DILexicalBlock(scope: !9225, file: !3, line: 1796, column: 2)
!9230 = !DILocation(line: 1796, column: 2, scope: !9226)
!9231 = !DILocation(line: 1796, column: 2, scope: !9232)
!9232 = distinct !DILexicalBlock(scope: !9226, file: !3, line: 1796, column: 2)
!9233 = !DILocalVariable(name: "handler", scope: !9234, file: !3, line: 1797, type: !4236)
!9234 = distinct !DILexicalBlock(scope: !9232, file: !3, line: 1796, column: 50)
!9235 = !DILocation(line: 1797, column: 29, scope: !9234)
!9236 = !DILocation(line: 1799, column: 37, scope: !9234)
!9237 = !DILocation(line: 1799, column: 43, scope: !9234)
!9238 = !DILocation(line: 1799, column: 13, scope: !9234)
!9239 = !DILocation(line: 1799, column: 11, scope: !9234)
!9240 = !DILocation(line: 1800, column: 7, scope: !9241)
!9241 = distinct !DILexicalBlock(scope: !9234, file: !3, line: 1800, column: 7)
!9242 = !DILocation(line: 1800, column: 7, scope: !9234)
!9243 = !DILocation(line: 1801, column: 4, scope: !9244)
!9244 = distinct !DILexicalBlock(scope: !9241, file: !3, line: 1800, column: 16)
!9245 = !DILocation(line: 1801, column: 10, scope: !9244)
!9246 = !DILocation(line: 1801, column: 16, scope: !9244)
!9247 = !DILocation(line: 1801, column: 31, scope: !9244)
!9248 = !DILocation(line: 1802, column: 4, scope: !9244)
!9249 = !DILocation(line: 1804, column: 2, scope: !9234)
!9250 = !DILocalVariable(name: "__mptr", scope: !9251, file: !3, line: 1796, type: !193)
!9251 = distinct !DILexicalBlock(scope: !9232, file: !3, line: 1796, column: 2)
!9252 = !DILocation(line: 1796, column: 2, scope: !9251)
!9253 = !DILocation(line: 1796, column: 2, scope: !9254)
!9254 = distinct !DILexicalBlock(scope: !9251, file: !3, line: 1796, column: 2)
!9255 = distinct !{!9255, !9230, !9256}
!9256 = !DILocation(line: 1804, column: 2, scope: !9226)
!9257 = !DILocation(line: 1805, column: 1, scope: !9207)
!9258 = distinct !DISubprogram(name: "acpi_device_dep_initialize", scope: !3, file: !3, line: 1807, type: !4252, scopeLine: 1808, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !239)
!9259 = !DILocalVariable(name: "adev", arg: 1, scope: !9258, file: !3, line: 1807, type: !4035)
!9260 = !DILocation(line: 1807, column: 60, scope: !9258)
!9261 = !DILocalVariable(name: "dep", scope: !9258, file: !3, line: 1809, type: !4335)
!9262 = !DILocation(line: 1809, column: 24, scope: !9258)
!9263 = !DILocalVariable(name: "dep_devices", scope: !9258, file: !3, line: 1810, type: !9264)
!9264 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "acpi_handle_list", file: !175, line: 17, size: 704, elements: !9265)
!9265 = !{!9266, !9267}
!9266 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !9264, file: !175, line: 18, baseType: !407, size: 32)
!9267 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !9264, file: !175, line: 19, baseType: !9268, size: 640, offset: 64)
!9268 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4017, size: 640, elements: !9269)
!9269 = !{!9270}
!9270 = !DISubrange(count: 10)
!9271 = !DILocation(line: 1810, column: 26, scope: !9258)
!9272 = !DILocalVariable(name: "status", scope: !9258, file: !3, line: 1811, type: !4358)
!9273 = !DILocation(line: 1811, column: 14, scope: !9258)
!9274 = !DILocalVariable(name: "i", scope: !9258, file: !3, line: 1812, type: !251)
!9275 = !DILocation(line: 1812, column: 6, scope: !9258)
!9276 = !DILocation(line: 1814, column: 2, scope: !9258)
!9277 = !DILocation(line: 1814, column: 8, scope: !9258)
!9278 = !DILocation(line: 1814, column: 18, scope: !9258)
!9279 = !DILocation(line: 1816, column: 23, scope: !9280)
!9280 = distinct !DILexicalBlock(scope: !9258, file: !3, line: 1816, column: 6)
!9281 = !DILocation(line: 1816, column: 29, scope: !9280)
!9282 = !DILocation(line: 1816, column: 7, scope: !9280)
!9283 = !DILocation(line: 1816, column: 6, scope: !9258)
!9284 = !DILocation(line: 1817, column: 3, scope: !9280)
!9285 = !DILocation(line: 1819, column: 35, scope: !9258)
!9286 = !DILocation(line: 1819, column: 41, scope: !9258)
!9287 = !DILocation(line: 1819, column: 11, scope: !9258)
!9288 = !DILocation(line: 1819, column: 9, scope: !9258)
!9289 = !DILocation(line: 1821, column: 6, scope: !9290)
!9290 = distinct !DILexicalBlock(scope: !9258, file: !3, line: 1821, column: 6)
!9291 = !DILocation(line: 1821, column: 6, scope: !9258)
!9292 = !DILocation(line: 1823, column: 3, scope: !9293)
!9293 = distinct !DILexicalBlock(scope: !9290, file: !3, line: 1821, column: 28)
!9294 = !DILocation(line: 1826, column: 9, scope: !9295)
!9295 = distinct !DILexicalBlock(scope: !9258, file: !3, line: 1826, column: 2)
!9296 = !DILocation(line: 1826, column: 7, scope: !9295)
!9297 = !DILocation(line: 1826, column: 14, scope: !9298)
!9298 = distinct !DILexicalBlock(scope: !9295, file: !3, line: 1826, column: 2)
!9299 = !DILocation(line: 1826, column: 30, scope: !9298)
!9300 = !DILocation(line: 1826, column: 16, scope: !9298)
!9301 = !DILocation(line: 1826, column: 2, scope: !9295)
!9302 = !DILocalVariable(name: "info", scope: !9303, file: !3, line: 1827, type: !6183)
!9303 = distinct !DILexicalBlock(scope: !9298, file: !3, line: 1826, column: 42)
!9304 = !DILocation(line: 1827, column: 28, scope: !9303)
!9305 = !DILocalVariable(name: "skip", scope: !9303, file: !3, line: 1828, type: !251)
!9306 = !DILocation(line: 1828, column: 7, scope: !9303)
!9307 = !DILocation(line: 1830, column: 45, scope: !9303)
!9308 = !DILocation(line: 1830, column: 53, scope: !9303)
!9309 = !DILocation(line: 1830, column: 33, scope: !9303)
!9310 = !DILocation(line: 1830, column: 12, scope: !9303)
!9311 = !DILocation(line: 1830, column: 10, scope: !9303)
!9312 = !DILocation(line: 1831, column: 7, scope: !9313)
!9313 = distinct !DILexicalBlock(scope: !9303, file: !3, line: 1831, column: 7)
!9314 = !DILocation(line: 1831, column: 7, scope: !9303)
!9315 = !DILocation(line: 1833, column: 4, scope: !9316)
!9316 = distinct !DILexicalBlock(scope: !9313, file: !3, line: 1831, column: 29)
!9317 = !DILocation(line: 1840, column: 10, scope: !9303)
!9318 = !DILocation(line: 1840, column: 16, scope: !9303)
!9319 = !DILocation(line: 1840, column: 22, scope: !9303)
!9320 = !DILocation(line: 1840, column: 39, scope: !9303)
!9321 = !DILocation(line: 1841, column: 12, scope: !9303)
!9322 = !DILocation(line: 1841, column: 18, scope: !9303)
!9323 = !DILocation(line: 1841, column: 30, scope: !9303)
!9324 = !DILocation(line: 1841, column: 5, scope: !9303)
!9325 = !DILocation(line: 1841, column: 4, scope: !9303)
!9326 = !DILocation(line: 0, scope: !9303)
!9327 = !DILocation(line: 1840, column: 8, scope: !9303)
!9328 = !DILocation(line: 1843, column: 9, scope: !9303)
!9329 = !DILocation(line: 1843, column: 3, scope: !9303)
!9330 = !DILocation(line: 1845, column: 7, scope: !9331)
!9331 = distinct !DILexicalBlock(scope: !9303, file: !3, line: 1845, column: 7)
!9332 = !DILocation(line: 1845, column: 7, scope: !9303)
!9333 = !DILocation(line: 1846, column: 4, scope: !9331)
!9334 = !DILocation(line: 1848, column: 9, scope: !9303)
!9335 = !DILocation(line: 1848, column: 7, scope: !9303)
!9336 = !DILocation(line: 1849, column: 8, scope: !9337)
!9337 = distinct !DILexicalBlock(scope: !9303, file: !3, line: 1849, column: 7)
!9338 = !DILocation(line: 1849, column: 7, scope: !9303)
!9339 = !DILocation(line: 1850, column: 4, scope: !9337)
!9340 = !DILocation(line: 1852, column: 29, scope: !9303)
!9341 = !DILocation(line: 1852, column: 37, scope: !9303)
!9342 = !DILocation(line: 1852, column: 17, scope: !9303)
!9343 = !DILocation(line: 1852, column: 3, scope: !9303)
!9344 = !DILocation(line: 1852, column: 8, scope: !9303)
!9345 = !DILocation(line: 1852, column: 15, scope: !9303)
!9346 = !DILocation(line: 1853, column: 17, scope: !9303)
!9347 = !DILocation(line: 1853, column: 23, scope: !9303)
!9348 = !DILocation(line: 1853, column: 3, scope: !9303)
!9349 = !DILocation(line: 1853, column: 8, scope: !9303)
!9350 = !DILocation(line: 1853, column: 15, scope: !9303)
!9351 = !DILocation(line: 1854, column: 3, scope: !9303)
!9352 = !DILocation(line: 1854, column: 9, scope: !9303)
!9353 = !DILocation(line: 1854, column: 18, scope: !9303)
!9354 = !DILocation(line: 1856, column: 3, scope: !9303)
!9355 = !DILocation(line: 1857, column: 18, scope: !9303)
!9356 = !DILocation(line: 1857, column: 23, scope: !9303)
!9357 = !DILocation(line: 1857, column: 3, scope: !9303)
!9358 = !DILocation(line: 1858, column: 3, scope: !9303)
!9359 = !DILocation(line: 1859, column: 2, scope: !9303)
!9360 = !DILocation(line: 1826, column: 38, scope: !9298)
!9361 = !DILocation(line: 1826, column: 2, scope: !9298)
!9362 = distinct !{!9362, !9301, !9363}
!9363 = !DILocation(line: 1859, column: 2, scope: !9295)
!9364 = !DILocation(line: 1860, column: 1, scope: !9258)
!9365 = distinct !DISubprogram(name: "acpi_device_should_be_hidden", scope: !3, file: !3, line: 1671, type: !5480, scopeLine: 1672, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !239)
!9366 = !DILocalVariable(name: "handle", arg: 1, scope: !9365, file: !3, line: 1671, type: !4017)
!9367 = !DILocation(line: 1671, column: 54, scope: !9365)
!9368 = !DILocalVariable(name: "status", scope: !9365, file: !3, line: 1673, type: !4358)
!9369 = !DILocation(line: 1673, column: 14, scope: !9365)
!9370 = !DILocalVariable(name: "res", scope: !9365, file: !3, line: 1674, type: !4321)
!9371 = !DILocation(line: 1674, column: 18, scope: !9365)
!9372 = !DILocation(line: 1677, column: 8, scope: !9373)
!9373 = distinct !DILexicalBlock(scope: !9365, file: !3, line: 1677, column: 6)
!9374 = !DILocation(line: 1677, column: 23, scope: !9373)
!9375 = !DILocation(line: 1677, column: 42, scope: !9373)
!9376 = !DILocation(line: 1677, column: 26, scope: !9373)
!9377 = !DILocation(line: 1677, column: 6, scope: !9365)
!9378 = !DILocation(line: 1678, column: 3, scope: !9373)
!9379 = !DILocation(line: 1684, column: 31, scope: !9365)
!9380 = !DILocation(line: 1685, column: 36, scope: !9365)
!9381 = !DILocation(line: 1684, column: 11, scope: !9365)
!9382 = !DILocation(line: 1684, column: 9, scope: !9365)
!9383 = !DILocation(line: 1686, column: 6, scope: !9384)
!9384 = distinct !DILexicalBlock(scope: !9365, file: !3, line: 1686, column: 6)
!9385 = !DILocation(line: 1686, column: 27, scope: !9384)
!9386 = !DILocation(line: 1686, column: 34, scope: !9384)
!9387 = !DILocation(line: 1686, column: 43, scope: !9384)
!9388 = !DILocation(line: 1686, column: 40, scope: !9384)
!9389 = !DILocation(line: 1686, column: 6, scope: !9365)
!9390 = !DILocation(line: 1687, column: 3, scope: !9384)
!9391 = !DILocation(line: 1689, column: 2, scope: !9365)
!9392 = !DILocation(line: 1692, column: 2, scope: !9365)
!9393 = !DILocation(line: 1693, column: 1, scope: !9365)
!9394 = distinct !DISubprogram(name: "acpi_get_resource_memory", scope: !3, file: !3, line: 1660, type: !9395, scopeLine: 1662, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !239)
!9395 = !DISubroutineType(types: !9396)
!9396 = !{!4358, !8576, !193}
!9397 = !DILocalVariable(name: "ares", arg: 1, scope: !9394, file: !3, line: 1660, type: !8576)
!9398 = !DILocation(line: 1660, column: 67, scope: !9394)
!9399 = !DILocalVariable(name: "context", arg: 2, scope: !9394, file: !3, line: 1661, type: !193)
!9400 = !DILocation(line: 1661, column: 16, scope: !9394)
!9401 = !DILocalVariable(name: "res", scope: !9394, file: !3, line: 1663, type: !4320)
!9402 = !DILocation(line: 1663, column: 19, scope: !9394)
!9403 = !DILocation(line: 1663, column: 25, scope: !9394)
!9404 = !DILocation(line: 1665, column: 31, scope: !9405)
!9405 = distinct !DILexicalBlock(scope: !9394, file: !3, line: 1665, column: 6)
!9406 = !DILocation(line: 1665, column: 37, scope: !9405)
!9407 = !DILocation(line: 1665, column: 6, scope: !9405)
!9408 = !DILocation(line: 1665, column: 6, scope: !9394)
!9409 = !DILocation(line: 1666, column: 3, scope: !9405)
!9410 = !DILocation(line: 1668, column: 2, scope: !9394)
!9411 = !DILocation(line: 1669, column: 1, scope: !9394)
!9412 = distinct !DISubprogram(name: "is_ejectable_bay", scope: !3, file: !3, line: 1096, type: !4444, scopeLine: 1097, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !239)
!9413 = !DILocalVariable(name: "adev", arg: 1, scope: !9412, file: !3, line: 1096, type: !4035)
!9414 = !DILocation(line: 1096, column: 50, scope: !9412)
!9415 = !DILocalVariable(name: "handle", scope: !9412, file: !3, line: 1098, type: !4017)
!9416 = !DILocation(line: 1098, column: 14, scope: !9412)
!9417 = !DILocation(line: 1098, column: 23, scope: !9412)
!9418 = !DILocation(line: 1098, column: 29, scope: !9412)
!9419 = !DILocation(line: 1100, column: 22, scope: !9420)
!9420 = distinct !DILexicalBlock(scope: !9412, file: !3, line: 1100, column: 6)
!9421 = !DILocation(line: 1100, column: 6, scope: !9420)
!9422 = !DILocation(line: 1100, column: 38, scope: !9420)
!9423 = !DILocation(line: 1100, column: 64, scope: !9420)
!9424 = !DILocation(line: 1100, column: 41, scope: !9420)
!9425 = !DILocation(line: 1100, column: 6, scope: !9412)
!9426 = !DILocation(line: 1101, column: 3, scope: !9420)
!9427 = !DILocation(line: 1103, column: 24, scope: !9412)
!9428 = !DILocation(line: 1103, column: 9, scope: !9412)
!9429 = !DILocation(line: 1103, column: 2, scope: !9412)
!9430 = !DILocation(line: 1104, column: 1, scope: !9412)
!9431 = distinct !DISubprogram(name: "acpi_dock_add", scope: !4021, file: !4021, line: 54, type: !4252, scopeLine: 54, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !239)
!9432 = !DILocalVariable(name: "adev", arg: 1, scope: !9431, file: !4021, line: 54, type: !4035)
!9433 = !DILocation(line: 54, column: 54, scope: !9431)
!9434 = !DILocation(line: 54, column: 61, scope: !9431)
!9435 = distinct !DISubprogram(name: "acpi_bus_get_power_flags", scope: !3, file: !3, line: 939, type: !4252, scopeLine: 940, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !239)
!9436 = !DILocalVariable(name: "device", arg: 1, scope: !9435, file: !3, line: 939, type: !4035)
!9437 = !DILocation(line: 939, column: 58, scope: !9435)
!9438 = !DILocalVariable(name: "i", scope: !9435, file: !3, line: 941, type: !407)
!9439 = !DILocation(line: 941, column: 6, scope: !9435)
!9440 = !DILocation(line: 944, column: 23, scope: !9441)
!9441 = distinct !DILexicalBlock(scope: !9435, file: !3, line: 944, column: 6)
!9442 = !DILocation(line: 944, column: 31, scope: !9441)
!9443 = !DILocation(line: 944, column: 7, scope: !9441)
!9444 = !DILocation(line: 944, column: 47, scope: !9441)
!9445 = !DILocation(line: 945, column: 23, scope: !9441)
!9446 = !DILocation(line: 945, column: 31, scope: !9441)
!9447 = !DILocation(line: 945, column: 7, scope: !9441)
!9448 = !DILocation(line: 944, column: 6, scope: !9435)
!9449 = !DILocation(line: 946, column: 3, scope: !9441)
!9450 = !DILocation(line: 948, column: 2, scope: !9435)
!9451 = !DILocation(line: 948, column: 10, scope: !9435)
!9452 = !DILocation(line: 948, column: 16, scope: !9435)
!9453 = !DILocation(line: 948, column: 33, scope: !9435)
!9454 = !DILocation(line: 953, column: 22, scope: !9455)
!9455 = distinct !DILexicalBlock(scope: !9435, file: !3, line: 953, column: 6)
!9456 = !DILocation(line: 953, column: 30, scope: !9455)
!9457 = !DILocation(line: 953, column: 6, scope: !9455)
!9458 = !DILocation(line: 953, column: 6, scope: !9435)
!9459 = !DILocation(line: 954, column: 3, scope: !9455)
!9460 = !DILocation(line: 954, column: 11, scope: !9455)
!9461 = !DILocation(line: 954, column: 17, scope: !9455)
!9462 = !DILocation(line: 954, column: 23, scope: !9455)
!9463 = !DILocation(line: 954, column: 36, scope: !9455)
!9464 = !DILocation(line: 956, column: 22, scope: !9465)
!9465 = distinct !DILexicalBlock(scope: !9435, file: !3, line: 956, column: 6)
!9466 = !DILocation(line: 956, column: 30, scope: !9465)
!9467 = !DILocation(line: 956, column: 6, scope: !9465)
!9468 = !DILocation(line: 956, column: 6, scope: !9435)
!9469 = !DILocation(line: 957, column: 3, scope: !9465)
!9470 = !DILocation(line: 957, column: 11, scope: !9465)
!9471 = !DILocation(line: 957, column: 17, scope: !9465)
!9472 = !DILocation(line: 957, column: 23, scope: !9465)
!9473 = !DILocation(line: 957, column: 38, scope: !9465)
!9474 = !DILocation(line: 959, column: 22, scope: !9475)
!9475 = distinct !DILexicalBlock(scope: !9435, file: !3, line: 959, column: 6)
!9476 = !DILocation(line: 959, column: 30, scope: !9475)
!9477 = !DILocation(line: 959, column: 6, scope: !9475)
!9478 = !DILocation(line: 959, column: 6, scope: !9435)
!9479 = !DILocation(line: 960, column: 3, scope: !9475)
!9480 = !DILocation(line: 960, column: 11, scope: !9475)
!9481 = !DILocation(line: 960, column: 17, scope: !9475)
!9482 = !DILocation(line: 960, column: 23, scope: !9475)
!9483 = !DILocation(line: 960, column: 35, scope: !9475)
!9484 = !DILocation(line: 965, column: 9, scope: !9485)
!9485 = distinct !DILexicalBlock(scope: !9435, file: !3, line: 965, column: 2)
!9486 = !DILocation(line: 965, column: 7, scope: !9485)
!9487 = !DILocation(line: 965, column: 26, scope: !9488)
!9488 = distinct !DILexicalBlock(scope: !9485, file: !3, line: 965, column: 2)
!9489 = !DILocation(line: 965, column: 28, scope: !9488)
!9490 = !DILocation(line: 965, column: 2, scope: !9485)
!9491 = !DILocation(line: 966, column: 29, scope: !9488)
!9492 = !DILocation(line: 966, column: 37, scope: !9488)
!9493 = !DILocation(line: 966, column: 3, scope: !9488)
!9494 = !DILocation(line: 965, column: 51, scope: !9488)
!9495 = !DILocation(line: 965, column: 2, scope: !9488)
!9496 = distinct !{!9496, !9490, !9497}
!9497 = !DILocation(line: 966, column: 38, scope: !9485)
!9498 = !DILocation(line: 968, column: 18, scope: !9435)
!9499 = !DILocation(line: 968, column: 26, scope: !9435)
!9500 = !DILocation(line: 968, column: 32, scope: !9435)
!9501 = !DILocation(line: 968, column: 59, scope: !9435)
!9502 = !DILocation(line: 968, column: 2, scope: !9435)
!9503 = !DILocation(line: 971, column: 2, scope: !9435)
!9504 = !DILocation(line: 971, column: 10, scope: !9435)
!9505 = !DILocation(line: 971, column: 16, scope: !9435)
!9506 = !DILocation(line: 971, column: 38, scope: !9435)
!9507 = !DILocation(line: 971, column: 44, scope: !9435)
!9508 = !DILocation(line: 971, column: 50, scope: !9435)
!9509 = !DILocation(line: 972, column: 2, scope: !9435)
!9510 = !DILocation(line: 972, column: 10, scope: !9435)
!9511 = !DILocation(line: 972, column: 16, scope: !9435)
!9512 = !DILocation(line: 972, column: 38, scope: !9435)
!9513 = !DILocation(line: 972, column: 44, scope: !9435)
!9514 = !DILocation(line: 973, column: 2, scope: !9435)
!9515 = !DILocation(line: 973, column: 10, scope: !9435)
!9516 = !DILocation(line: 973, column: 16, scope: !9435)
!9517 = !DILocation(line: 973, column: 42, scope: !9435)
!9518 = !DILocation(line: 973, column: 48, scope: !9435)
!9519 = !DILocation(line: 973, column: 54, scope: !9435)
!9520 = !DILocation(line: 980, column: 19, scope: !9521)
!9521 = distinct !DILexicalBlock(scope: !9435, file: !3, line: 980, column: 6)
!9522 = !DILocation(line: 980, column: 27, scope: !9521)
!9523 = !DILocation(line: 980, column: 33, scope: !9521)
!9524 = !DILocation(line: 980, column: 55, scope: !9521)
!9525 = !DILocation(line: 980, column: 7, scope: !9521)
!9526 = !DILocation(line: 980, column: 6, scope: !9435)
!9527 = !DILocation(line: 981, column: 3, scope: !9528)
!9528 = distinct !DILexicalBlock(scope: !9521, file: !3, line: 980, column: 67)
!9529 = !DILocation(line: 981, column: 11, scope: !9528)
!9530 = !DILocation(line: 981, column: 17, scope: !9528)
!9531 = !DILocation(line: 981, column: 23, scope: !9528)
!9532 = !DILocation(line: 981, column: 39, scope: !9528)
!9533 = !DILocation(line: 986, column: 20, scope: !9534)
!9534 = distinct !DILexicalBlock(scope: !9528, file: !3, line: 986, column: 7)
!9535 = !DILocation(line: 986, column: 28, scope: !9534)
!9536 = !DILocation(line: 986, column: 34, scope: !9534)
!9537 = !DILocation(line: 986, column: 60, scope: !9534)
!9538 = !DILocation(line: 986, column: 8, scope: !9534)
!9539 = !DILocation(line: 986, column: 7, scope: !9528)
!9540 = !DILocation(line: 987, column: 4, scope: !9534)
!9541 = !DILocation(line: 987, column: 12, scope: !9534)
!9542 = !DILocation(line: 987, column: 18, scope: !9534)
!9543 = !DILocation(line: 987, column: 45, scope: !9534)
!9544 = !DILocation(line: 987, column: 51, scope: !9534)
!9545 = !DILocation(line: 987, column: 57, scope: !9534)
!9546 = !DILocation(line: 988, column: 2, scope: !9528)
!9547 = !DILocation(line: 990, column: 26, scope: !9548)
!9548 = distinct !DILexicalBlock(scope: !9435, file: !3, line: 990, column: 6)
!9549 = !DILocation(line: 990, column: 6, scope: !9548)
!9550 = !DILocation(line: 990, column: 6, scope: !9435)
!9551 = !DILocation(line: 991, column: 3, scope: !9548)
!9552 = !DILocation(line: 991, column: 11, scope: !9548)
!9553 = !DILocation(line: 991, column: 17, scope: !9548)
!9554 = !DILocation(line: 991, column: 34, scope: !9548)
!9555 = !DILocation(line: 992, column: 1, scope: !9435)
!9556 = distinct !DISubprogram(name: "acpi_bus_get_wakeup_device_flags", scope: !3, file: !3, line: 876, type: !4252, scopeLine: 877, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !239)
!9557 = !DILocalVariable(name: "device", arg: 1, scope: !9556, file: !3, line: 876, type: !4035)
!9558 = !DILocation(line: 876, column: 66, scope: !9556)
!9559 = !DILocalVariable(name: "err", scope: !9556, file: !3, line: 878, type: !251)
!9560 = !DILocation(line: 878, column: 6, scope: !9556)
!9561 = !DILocation(line: 881, column: 23, scope: !9562)
!9562 = distinct !DILexicalBlock(scope: !9556, file: !3, line: 881, column: 6)
!9563 = !DILocation(line: 881, column: 31, scope: !9562)
!9564 = !DILocation(line: 881, column: 7, scope: !9562)
!9565 = !DILocation(line: 881, column: 6, scope: !9556)
!9566 = !DILocation(line: 882, column: 3, scope: !9562)
!9567 = !DILocation(line: 884, column: 53, scope: !9556)
!9568 = !DILocation(line: 884, column: 8, scope: !9556)
!9569 = !DILocation(line: 884, column: 6, scope: !9556)
!9570 = !DILocation(line: 885, column: 6, scope: !9571)
!9571 = distinct !DILexicalBlock(scope: !9556, file: !3, line: 885, column: 6)
!9572 = !DILocation(line: 885, column: 6, scope: !9556)
!9573 = !DILocation(line: 886, column: 3, scope: !9574)
!9574 = distinct !DILexicalBlock(scope: !9571, file: !3, line: 885, column: 11)
!9575 = !DILocation(line: 887, column: 3, scope: !9574)
!9576 = !DILocation(line: 890, column: 52, scope: !9556)
!9577 = !DILocation(line: 890, column: 31, scope: !9556)
!9578 = !DILocation(line: 890, column: 2, scope: !9556)
!9579 = !DILocation(line: 890, column: 10, scope: !9556)
!9580 = !DILocation(line: 890, column: 17, scope: !9556)
!9581 = !DILocation(line: 890, column: 23, scope: !9556)
!9582 = !DILocation(line: 890, column: 29, scope: !9556)
!9583 = !DILocation(line: 891, column: 2, scope: !9556)
!9584 = !DILocation(line: 891, column: 10, scope: !9556)
!9585 = !DILocation(line: 891, column: 17, scope: !9556)
!9586 = !DILocation(line: 891, column: 31, scope: !9556)
!9587 = !DILocation(line: 899, column: 31, scope: !9556)
!9588 = !DILocation(line: 899, column: 8, scope: !9556)
!9589 = !DILocation(line: 899, column: 6, scope: !9556)
!9590 = !DILocation(line: 900, column: 6, scope: !9591)
!9591 = distinct !DILexicalBlock(scope: !9556, file: !3, line: 900, column: 6)
!9592 = !DILocation(line: 900, column: 6, scope: !9556)
!9593 = !DILocation(line: 901, column: 3, scope: !9594)
!9594 = distinct !DILexicalBlock(scope: !9595, file: !3, line: 901, column: 3)
!9595 = distinct !DILexicalBlock(scope: !9591, file: !3, line: 901, column: 3)
!9596 = !DILocation(line: 901, column: 3, scope: !9595)
!9597 = !DILocation(line: 901, column: 3, scope: !9591)
!9598 = !DILocation(line: 902, column: 1, scope: !9556)
!9599 = distinct !DISubprogram(name: "acpi_device_release", scope: !3, file: !3, line: 464, type: !3392, scopeLine: 465, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !239)
!9600 = !DILocalVariable(name: "dev", arg: 1, scope: !9599, file: !3, line: 464, type: !206)
!9601 = !DILocation(line: 464, column: 48, scope: !9599)
!9602 = !DILocalVariable(name: "acpi_dev", scope: !9599, file: !3, line: 466, type: !4035)
!9603 = !DILocation(line: 466, column: 22, scope: !9599)
!9604 = !DILocalVariable(name: "__mptr", scope: !9605, file: !3, line: 466, type: !193)
!9605 = distinct !DILexicalBlock(scope: !9599, file: !3, line: 466, column: 33)
!9606 = !DILocation(line: 466, column: 33, scope: !9605)
!9607 = !DILocation(line: 466, column: 33, scope: !9608)
!9608 = distinct !DILexicalBlock(scope: !9605, file: !3, line: 466, column: 33)
!9609 = !DILocation(line: 468, column: 23, scope: !9599)
!9610 = !DILocation(line: 468, column: 2, scope: !9599)
!9611 = !DILocation(line: 469, column: 21, scope: !9599)
!9612 = !DILocation(line: 469, column: 31, scope: !9599)
!9613 = !DILocation(line: 469, column: 2, scope: !9599)
!9614 = !DILocation(line: 470, column: 34, scope: !9599)
!9615 = !DILocation(line: 470, column: 2, scope: !9599)
!9616 = !DILocation(line: 471, column: 8, scope: !9599)
!9617 = !DILocation(line: 471, column: 2, scope: !9599)
!9618 = !DILocation(line: 472, column: 1, scope: !9599)
!9619 = distinct !DISubprogram(name: "acpi_bus_init_power_state", scope: !3, file: !3, line: 904, type: !9620, scopeLine: 905, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !239)
!9620 = !DISubroutineType(types: !9621)
!9621 = !{null, !4035, !251}
!9622 = !DILocalVariable(name: "device", arg: 1, scope: !9619, file: !3, line: 904, type: !4035)
!9623 = !DILocation(line: 904, column: 59, scope: !9619)
!9624 = !DILocalVariable(name: "state", arg: 2, scope: !9619, file: !3, line: 904, type: !251)
!9625 = !DILocation(line: 904, column: 71, scope: !9619)
!9626 = !DILocalVariable(name: "ps", scope: !9619, file: !3, line: 906, type: !9627)
!9627 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4162, size: 64)
!9628 = !DILocation(line: 906, column: 34, scope: !9619)
!9629 = !DILocation(line: 906, column: 40, scope: !9619)
!9630 = !DILocation(line: 906, column: 48, scope: !9619)
!9631 = !DILocation(line: 906, column: 54, scope: !9619)
!9632 = !DILocation(line: 906, column: 61, scope: !9619)
!9633 = !DILocalVariable(name: "pathname", scope: !9619, file: !3, line: 907, type: !6103)
!9634 = !DILocation(line: 907, column: 7, scope: !9619)
!9635 = !DILocation(line: 907, column: 21, scope: !9619)
!9636 = !DILocation(line: 907, column: 44, scope: !9619)
!9637 = !DILocation(line: 907, column: 42, scope: !9619)
!9638 = !DILocation(line: 907, column: 38, scope: !9619)
!9639 = !DILocalVariable(name: "buffer", scope: !9619, file: !3, line: 908, type: !5442)
!9640 = !DILocation(line: 908, column: 21, scope: !9619)
!9641 = !DILocalVariable(name: "status", scope: !9619, file: !3, line: 909, type: !4358)
!9642 = !DILocation(line: 909, column: 14, scope: !9619)
!9643 = !DILocation(line: 911, column: 18, scope: !9619)
!9644 = !DILocation(line: 911, column: 22, scope: !9619)
!9645 = !DILocation(line: 911, column: 2, scope: !9619)
!9646 = !DILocation(line: 914, column: 32, scope: !9619)
!9647 = !DILocation(line: 914, column: 40, scope: !9619)
!9648 = !DILocation(line: 914, column: 48, scope: !9619)
!9649 = !DILocation(line: 914, column: 11, scope: !9619)
!9650 = !DILocation(line: 914, column: 9, scope: !9619)
!9651 = !DILocation(line: 915, column: 6, scope: !9652)
!9652 = distinct !DILexicalBlock(scope: !9619, file: !3, line: 915, column: 6)
!9653 = !DILocation(line: 915, column: 6, scope: !9619)
!9654 = !DILocalVariable(name: "package", scope: !9655, file: !3, line: 916, type: !4097)
!9655 = distinct !DILexicalBlock(scope: !9652, file: !3, line: 915, column: 28)
!9656 = !DILocation(line: 916, column: 22, scope: !9655)
!9657 = !DILocation(line: 916, column: 39, scope: !9655)
!9658 = !DILocation(line: 916, column: 32, scope: !9655)
!9659 = !DILocation(line: 918, column: 14, scope: !9660)
!9660 = distinct !DILexicalBlock(scope: !9655, file: !3, line: 918, column: 7)
!9661 = !DILocation(line: 918, column: 7, scope: !9660)
!9662 = !DILocation(line: 918, column: 21, scope: !9660)
!9663 = !DILocation(line: 918, column: 24, scope: !9660)
!9664 = !DILocation(line: 919, column: 7, scope: !9660)
!9665 = !DILocation(line: 919, column: 10, scope: !9660)
!9666 = !DILocation(line: 919, column: 19, scope: !9660)
!9667 = !DILocation(line: 919, column: 24, scope: !9660)
!9668 = !DILocation(line: 920, column: 7, scope: !9660)
!9669 = !DILocation(line: 920, column: 10, scope: !9660)
!9670 = !DILocation(line: 920, column: 19, scope: !9660)
!9671 = !DILocation(line: 920, column: 27, scope: !9660)
!9672 = !DILocation(line: 918, column: 7, scope: !9655)
!9673 = !DILocation(line: 921, column: 33, scope: !9660)
!9674 = !DILocation(line: 921, column: 46, scope: !9660)
!9675 = !DILocation(line: 921, column: 50, scope: !9660)
!9676 = !DILocation(line: 921, column: 4, scope: !9660)
!9677 = !DILocation(line: 923, column: 3, scope: !9655)
!9678 = !DILocation(line: 924, column: 2, scope: !9655)
!9679 = !DILocation(line: 927, column: 2, scope: !9619)
!9680 = !DILocation(line: 927, column: 14, scope: !9619)
!9681 = !DILocation(line: 928, column: 22, scope: !9682)
!9682 = distinct !DILexicalBlock(scope: !9619, file: !3, line: 928, column: 6)
!9683 = !DILocation(line: 928, column: 30, scope: !9682)
!9684 = !DILocation(line: 928, column: 38, scope: !9682)
!9685 = !DILocation(line: 928, column: 6, scope: !9682)
!9686 = !DILocation(line: 928, column: 6, scope: !9619)
!9687 = !DILocation(line: 929, column: 3, scope: !9682)
!9688 = !DILocation(line: 929, column: 7, scope: !9682)
!9689 = !DILocation(line: 929, column: 13, scope: !9682)
!9690 = !DILocation(line: 929, column: 26, scope: !9682)
!9691 = !DILocation(line: 932, column: 19, scope: !9692)
!9692 = distinct !DILexicalBlock(scope: !9619, file: !3, line: 932, column: 6)
!9693 = !DILocation(line: 932, column: 23, scope: !9692)
!9694 = !DILocation(line: 932, column: 7, scope: !9692)
!9695 = !DILocation(line: 932, column: 34, scope: !9692)
!9696 = !DILocation(line: 932, column: 37, scope: !9692)
!9697 = !DILocation(line: 932, column: 41, scope: !9692)
!9698 = !DILocation(line: 932, column: 47, scope: !9692)
!9699 = !DILocation(line: 932, column: 6, scope: !9619)
!9700 = !DILocation(line: 933, column: 3, scope: !9692)
!9701 = !DILocation(line: 933, column: 7, scope: !9692)
!9702 = !DILocation(line: 933, column: 13, scope: !9692)
!9703 = !DILocation(line: 933, column: 19, scope: !9692)
!9704 = !DILocation(line: 935, column: 2, scope: !9619)
!9705 = !DILocation(line: 935, column: 6, scope: !9619)
!9706 = !DILocation(line: 935, column: 12, scope: !9619)
!9707 = !DILocation(line: 936, column: 2, scope: !9619)
!9708 = !DILocation(line: 936, column: 6, scope: !9619)
!9709 = !DILocation(line: 936, column: 14, scope: !9619)
!9710 = !DILocation(line: 937, column: 1, scope: !9619)
!9711 = distinct !DISubprogram(name: "acpi_os_free", scope: !9712, file: !9712, line: 60, type: !461, scopeLine: 61, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !239)
!9712 = !DIFile(filename: "./include/acpi/platform/aclinuxex.h", directory: "/home/lizy2001/genbc/linux")
!9713 = !DILocalVariable(name: "memory", arg: 1, scope: !9711, file: !9712, line: 60, type: !193)
!9714 = !DILocation(line: 60, column: 39, scope: !9711)
!9715 = !DILocation(line: 62, column: 8, scope: !9711)
!9716 = !DILocation(line: 62, column: 2, scope: !9711)
!9717 = !DILocation(line: 63, column: 1, scope: !9711)
!9718 = distinct !DISubprogram(name: "acpi_bus_extract_wakeup_device_power_package", scope: !3, file: !3, line: 766, type: !4262, scopeLine: 767, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !239)
!9719 = !DILocalVariable(name: "dev", arg: 1, scope: !9718, file: !3, line: 766, type: !4035)
!9720 = !DILocation(line: 766, column: 77, scope: !9718)
!9721 = !DILocalVariable(name: "handle", scope: !9718, file: !3, line: 768, type: !4017)
!9722 = !DILocation(line: 768, column: 14, scope: !9718)
!9723 = !DILocation(line: 768, column: 23, scope: !9718)
!9724 = !DILocation(line: 768, column: 28, scope: !9718)
!9725 = !DILocalVariable(name: "wakeup", scope: !9718, file: !3, line: 769, type: !9726)
!9726 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4176, size: 64)
!9727 = !DILocation(line: 769, column: 29, scope: !9718)
!9728 = !DILocation(line: 769, column: 39, scope: !9718)
!9729 = !DILocation(line: 769, column: 44, scope: !9718)
!9730 = !DILocalVariable(name: "buffer", scope: !9718, file: !3, line: 770, type: !5442)
!9731 = !DILocation(line: 770, column: 21, scope: !9718)
!9732 = !DILocalVariable(name: "package", scope: !9718, file: !3, line: 771, type: !4097)
!9733 = !DILocation(line: 771, column: 21, scope: !9718)
!9734 = !DILocalVariable(name: "element", scope: !9718, file: !3, line: 772, type: !4097)
!9735 = !DILocation(line: 772, column: 21, scope: !9718)
!9736 = !DILocalVariable(name: "status", scope: !9718, file: !3, line: 773, type: !4358)
!9737 = !DILocation(line: 773, column: 14, scope: !9718)
!9738 = !DILocalVariable(name: "err", scope: !9718, file: !3, line: 774, type: !251)
!9739 = !DILocation(line: 774, column: 6, scope: !9718)
!9740 = !DILocation(line: 776, column: 18, scope: !9718)
!9741 = !DILocation(line: 776, column: 26, scope: !9718)
!9742 = !DILocation(line: 776, column: 2, scope: !9718)
!9743 = !DILocation(line: 779, column: 32, scope: !9718)
!9744 = !DILocation(line: 779, column: 11, scope: !9718)
!9745 = !DILocation(line: 779, column: 9, scope: !9718)
!9746 = !DILocation(line: 780, column: 6, scope: !9747)
!9747 = distinct !DILexicalBlock(scope: !9718, file: !3, line: 780, column: 6)
!9748 = !DILocation(line: 780, column: 6, scope: !9718)
!9749 = !DILocation(line: 781, column: 3, scope: !9750)
!9750 = distinct !DILexicalBlock(scope: !9747, file: !3, line: 780, column: 28)
!9751 = !DILocation(line: 782, column: 10, scope: !9750)
!9752 = !DILocation(line: 782, column: 3, scope: !9750)
!9753 = !DILocation(line: 785, column: 40, scope: !9718)
!9754 = !DILocation(line: 785, column: 12, scope: !9718)
!9755 = !DILocation(line: 785, column: 10, scope: !9718)
!9756 = !DILocation(line: 787, column: 7, scope: !9757)
!9757 = distinct !DILexicalBlock(scope: !9718, file: !3, line: 787, column: 6)
!9758 = !DILocation(line: 787, column: 15, scope: !9757)
!9759 = !DILocation(line: 787, column: 18, scope: !9757)
!9760 = !DILocation(line: 787, column: 27, scope: !9757)
!9761 = !DILocation(line: 787, column: 35, scope: !9757)
!9762 = !DILocation(line: 787, column: 41, scope: !9757)
!9763 = !DILocation(line: 787, column: 6, scope: !9718)
!9764 = !DILocation(line: 788, column: 3, scope: !9757)
!9765 = !DILocation(line: 790, column: 14, scope: !9718)
!9766 = !DILocation(line: 790, column: 23, scope: !9718)
!9767 = !DILocation(line: 790, column: 31, scope: !9718)
!9768 = !DILocation(line: 790, column: 10, scope: !9718)
!9769 = !DILocation(line: 791, column: 7, scope: !9770)
!9770 = distinct !DILexicalBlock(scope: !9718, file: !3, line: 791, column: 6)
!9771 = !DILocation(line: 791, column: 6, scope: !9718)
!9772 = !DILocation(line: 792, column: 3, scope: !9770)
!9773 = !DILocation(line: 794, column: 6, scope: !9774)
!9774 = distinct !DILexicalBlock(scope: !9718, file: !3, line: 794, column: 6)
!9775 = !DILocation(line: 794, column: 15, scope: !9774)
!9776 = !DILocation(line: 794, column: 20, scope: !9774)
!9777 = !DILocation(line: 794, column: 6, scope: !9718)
!9778 = !DILocation(line: 795, column: 8, scope: !9779)
!9779 = distinct !DILexicalBlock(scope: !9780, file: !3, line: 795, column: 7)
!9780 = distinct !DILexicalBlock(scope: !9774, file: !3, line: 794, column: 42)
!9781 = !DILocation(line: 795, column: 17, scope: !9779)
!9782 = !DILocation(line: 795, column: 25, scope: !9779)
!9783 = !DILocation(line: 795, column: 31, scope: !9779)
!9784 = !DILocation(line: 795, column: 36, scope: !9779)
!9785 = !DILocation(line: 796, column: 8, scope: !9779)
!9786 = !DILocation(line: 796, column: 17, scope: !9779)
!9787 = !DILocation(line: 796, column: 25, scope: !9779)
!9788 = !DILocation(line: 796, column: 37, scope: !9779)
!9789 = !DILocation(line: 796, column: 42, scope: !9779)
!9790 = !DILocation(line: 798, column: 7, scope: !9779)
!9791 = !DILocation(line: 798, column: 11, scope: !9779)
!9792 = !DILocation(line: 798, column: 20, scope: !9779)
!9793 = !DILocation(line: 798, column: 28, scope: !9779)
!9794 = !DILocation(line: 798, column: 40, scope: !9779)
!9795 = !DILocation(line: 798, column: 45, scope: !9779)
!9796 = !DILocation(line: 795, column: 7, scope: !9780)
!9797 = !DILocation(line: 799, column: 4, scope: !9779)
!9798 = !DILocation(line: 802, column: 7, scope: !9780)
!9799 = !DILocation(line: 802, column: 16, scope: !9780)
!9800 = !DILocation(line: 802, column: 24, scope: !9780)
!9801 = !DILocation(line: 802, column: 36, scope: !9780)
!9802 = !DILocation(line: 802, column: 46, scope: !9780)
!9803 = !DILocation(line: 801, column: 3, scope: !9780)
!9804 = !DILocation(line: 801, column: 11, scope: !9780)
!9805 = !DILocation(line: 801, column: 22, scope: !9780)
!9806 = !DILocation(line: 804, column: 13, scope: !9780)
!9807 = !DILocation(line: 804, column: 22, scope: !9780)
!9808 = !DILocation(line: 804, column: 30, scope: !9780)
!9809 = !DILocation(line: 804, column: 42, scope: !9780)
!9810 = !DILocation(line: 804, column: 50, scope: !9780)
!9811 = !DILocation(line: 804, column: 7, scope: !9780)
!9812 = !DILocation(line: 803, column: 3, scope: !9780)
!9813 = !DILocation(line: 803, column: 11, scope: !9780)
!9814 = !DILocation(line: 803, column: 22, scope: !9780)
!9815 = !DILocation(line: 805, column: 2, scope: !9780)
!9816 = !DILocation(line: 805, column: 13, scope: !9817)
!9817 = distinct !DILexicalBlock(scope: !9774, file: !3, line: 805, column: 13)
!9818 = !DILocation(line: 805, column: 22, scope: !9817)
!9819 = !DILocation(line: 805, column: 27, scope: !9817)
!9820 = !DILocation(line: 805, column: 13, scope: !9774)
!9821 = !DILocation(line: 806, column: 3, scope: !9822)
!9822 = distinct !DILexicalBlock(scope: !9817, file: !3, line: 805, column: 49)
!9823 = !DILocation(line: 806, column: 11, scope: !9822)
!9824 = !DILocation(line: 806, column: 22, scope: !9822)
!9825 = !DILocation(line: 807, column: 24, scope: !9822)
!9826 = !DILocation(line: 807, column: 33, scope: !9822)
!9827 = !DILocation(line: 807, column: 41, scope: !9822)
!9828 = !DILocation(line: 807, column: 3, scope: !9822)
!9829 = !DILocation(line: 807, column: 11, scope: !9822)
!9830 = !DILocation(line: 807, column: 22, scope: !9822)
!9831 = !DILocation(line: 808, column: 2, scope: !9822)
!9832 = !DILocation(line: 809, column: 3, scope: !9833)
!9833 = distinct !DILexicalBlock(scope: !9817, file: !3, line: 808, column: 9)
!9834 = !DILocation(line: 812, column: 14, scope: !9718)
!9835 = !DILocation(line: 812, column: 23, scope: !9718)
!9836 = !DILocation(line: 812, column: 31, scope: !9718)
!9837 = !DILocation(line: 812, column: 10, scope: !9718)
!9838 = !DILocation(line: 813, column: 6, scope: !9839)
!9839 = distinct !DILexicalBlock(scope: !9718, file: !3, line: 813, column: 6)
!9840 = !DILocation(line: 813, column: 15, scope: !9839)
!9841 = !DILocation(line: 813, column: 20, scope: !9839)
!9842 = !DILocation(line: 813, column: 6, scope: !9718)
!9843 = !DILocation(line: 814, column: 3, scope: !9839)
!9844 = !DILocation(line: 816, column: 24, scope: !9718)
!9845 = !DILocation(line: 816, column: 33, scope: !9718)
!9846 = !DILocation(line: 816, column: 41, scope: !9718)
!9847 = !DILocation(line: 816, column: 2, scope: !9718)
!9848 = !DILocation(line: 816, column: 10, scope: !9718)
!9849 = !DILocation(line: 816, column: 22, scope: !9718)
!9850 = !DILocation(line: 818, column: 37, scope: !9718)
!9851 = !DILocation(line: 818, column: 50, scope: !9718)
!9852 = !DILocation(line: 818, column: 58, scope: !9718)
!9853 = !DILocation(line: 818, column: 8, scope: !9718)
!9854 = !DILocation(line: 818, column: 6, scope: !9718)
!9855 = !DILocation(line: 819, column: 6, scope: !9856)
!9856 = distinct !DILexicalBlock(scope: !9718, file: !3, line: 819, column: 6)
!9857 = !DILocation(line: 819, column: 6, scope: !9718)
!9858 = !DILocation(line: 820, column: 3, scope: !9856)
!9859 = !DILocation(line: 822, column: 19, scope: !9860)
!9860 = distinct !DILexicalBlock(scope: !9718, file: !3, line: 822, column: 6)
!9861 = !DILocation(line: 822, column: 27, scope: !9860)
!9862 = !DILocation(line: 822, column: 7, scope: !9860)
!9863 = !DILocation(line: 822, column: 6, scope: !9718)
!9864 = !DILocalVariable(name: "sleep_state", scope: !9865, file: !3, line: 823, type: !251)
!9865 = distinct !DILexicalBlock(scope: !9860, file: !3, line: 822, column: 39)
!9866 = !DILocation(line: 823, column: 7, scope: !9865)
!9867 = !DILocation(line: 825, column: 38, scope: !9865)
!9868 = !DILocation(line: 825, column: 46, scope: !9865)
!9869 = !DILocation(line: 825, column: 9, scope: !9865)
!9870 = !DILocation(line: 825, column: 7, scope: !9865)
!9871 = !DILocation(line: 827, column: 7, scope: !9872)
!9872 = distinct !DILexicalBlock(scope: !9865, file: !3, line: 827, column: 7)
!9873 = !DILocation(line: 827, column: 7, scope: !9865)
!9874 = !DILocation(line: 828, column: 4, scope: !9875)
!9875 = distinct !DILexicalBlock(scope: !9872, file: !3, line: 827, column: 12)
!9876 = !DILocation(line: 830, column: 36, scope: !9875)
!9877 = !DILocation(line: 830, column: 44, scope: !9875)
!9878 = !DILocation(line: 830, column: 4, scope: !9875)
!9879 = !DILocation(line: 831, column: 4, scope: !9875)
!9880 = !DILocation(line: 833, column: 7, scope: !9881)
!9881 = distinct !DILexicalBlock(scope: !9865, file: !3, line: 833, column: 7)
!9882 = !DILocation(line: 833, column: 21, scope: !9881)
!9883 = !DILocation(line: 833, column: 29, scope: !9881)
!9884 = !DILocation(line: 833, column: 19, scope: !9881)
!9885 = !DILocation(line: 833, column: 7, scope: !9865)
!9886 = !DILocation(line: 834, column: 4, scope: !9887)
!9887 = distinct !DILexicalBlock(scope: !9881, file: !3, line: 833, column: 42)
!9888 = !DILocation(line: 837, column: 26, scope: !9887)
!9889 = !DILocation(line: 837, column: 4, scope: !9887)
!9890 = !DILocation(line: 837, column: 12, scope: !9887)
!9891 = !DILocation(line: 837, column: 24, scope: !9887)
!9892 = !DILocation(line: 838, column: 3, scope: !9887)
!9893 = !DILocation(line: 839, column: 2, scope: !9865)
!9894 = !DILocation(line: 822, column: 36, scope: !9860)
!9895 = !DILabel(scope: !9718, name: "out", file: !3, line: 841)
!9896 = !DILocation(line: 841, column: 2, scope: !9718)
!9897 = !DILocation(line: 842, column: 15, scope: !9718)
!9898 = !DILocation(line: 842, column: 2, scope: !9718)
!9899 = !DILocation(line: 843, column: 9, scope: !9718)
!9900 = !DILocation(line: 843, column: 2, scope: !9718)
!9901 = !DILocation(line: 844, column: 1, scope: !9718)
!9902 = !DILocalVariable(name: "device", arg: 1, scope: !4462, file: !3, line: 846, type: !4035)
!9903 = !DILocation(line: 846, column: 54, scope: !4462)
!9904 = !DILocalVariable(name: "wakeup", scope: !4462, file: !3, line: 854, type: !9726)
!9905 = !DILocation(line: 854, column: 29, scope: !4462)
!9906 = !DILocation(line: 854, column: 39, scope: !4462)
!9907 = !DILocation(line: 854, column: 47, scope: !4462)
!9908 = !DILocalVariable(name: "status", scope: !4462, file: !3, line: 855, type: !4358)
!9909 = !DILocation(line: 855, column: 14, scope: !4462)
!9910 = !DILocation(line: 857, column: 2, scope: !4462)
!9911 = !DILocation(line: 857, column: 10, scope: !4462)
!9912 = !DILocation(line: 857, column: 16, scope: !4462)
!9913 = !DILocation(line: 857, column: 33, scope: !4462)
!9914 = !DILocation(line: 860, column: 29, scope: !9915)
!9915 = distinct !DILexicalBlock(scope: !4462, file: !3, line: 860, column: 6)
!9916 = !DILocation(line: 860, column: 7, scope: !9915)
!9917 = !DILocation(line: 860, column: 6, scope: !4462)
!9918 = !DILocation(line: 861, column: 30, scope: !9919)
!9919 = distinct !DILexicalBlock(scope: !9920, file: !3, line: 861, column: 7)
!9920 = distinct !DILexicalBlock(scope: !9915, file: !3, line: 860, column: 57)
!9921 = !DILocation(line: 861, column: 8, scope: !9919)
!9922 = !DILocation(line: 861, column: 7, scope: !9920)
!9923 = !DILocation(line: 863, column: 8, scope: !9924)
!9924 = distinct !DILexicalBlock(scope: !9925, file: !3, line: 863, column: 8)
!9925 = distinct !DILexicalBlock(scope: !9919, file: !3, line: 861, column: 62)
!9926 = !DILocation(line: 863, column: 16, scope: !9924)
!9927 = !DILocation(line: 863, column: 28, scope: !9924)
!9928 = !DILocation(line: 863, column: 8, scope: !9925)
!9929 = !DILocation(line: 864, column: 5, scope: !9924)
!9930 = !DILocation(line: 864, column: 13, scope: !9924)
!9931 = !DILocation(line: 864, column: 25, scope: !9924)
!9932 = !DILocation(line: 865, column: 3, scope: !9925)
!9933 = !DILocation(line: 866, column: 26, scope: !9920)
!9934 = !DILocation(line: 866, column: 34, scope: !9920)
!9935 = !DILocation(line: 866, column: 46, scope: !9920)
!9936 = !DILocation(line: 866, column: 54, scope: !9920)
!9937 = !DILocation(line: 866, column: 3, scope: !9920)
!9938 = !DILocation(line: 867, column: 30, scope: !9920)
!9939 = !DILocation(line: 867, column: 38, scope: !9920)
!9940 = !DILocation(line: 867, column: 3, scope: !9920)
!9941 = !DILocation(line: 868, column: 3, scope: !9920)
!9942 = !DILocation(line: 871, column: 35, scope: !4462)
!9943 = !DILocation(line: 871, column: 43, scope: !4462)
!9944 = !DILocation(line: 871, column: 51, scope: !4462)
!9945 = !DILocation(line: 871, column: 59, scope: !4462)
!9946 = !DILocation(line: 872, column: 7, scope: !4462)
!9947 = !DILocation(line: 872, column: 15, scope: !4462)
!9948 = !DILocation(line: 871, column: 11, scope: !4462)
!9949 = !DILocation(line: 871, column: 9, scope: !4462)
!9950 = !DILocation(line: 873, column: 9, scope: !4462)
!9951 = !DILocation(line: 873, column: 2, scope: !4462)
!9952 = !DILocation(line: 874, column: 1, scope: !4462)
!9953 = distinct !DISubprogram(name: "acpi_free_power_resources_lists", scope: !3, file: !3, line: 448, type: !4252, scopeLine: 449, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !239)
!9954 = !DILocalVariable(name: "device", arg: 1, scope: !9953, file: !3, line: 448, type: !4035)
!9955 = !DILocation(line: 448, column: 65, scope: !9953)
!9956 = !DILocalVariable(name: "i", scope: !9953, file: !3, line: 450, type: !251)
!9957 = !DILocation(line: 450, column: 6, scope: !9953)
!9958 = !DILocation(line: 452, column: 6, scope: !9959)
!9959 = distinct !DILexicalBlock(scope: !9953, file: !3, line: 452, column: 6)
!9960 = !DILocation(line: 452, column: 14, scope: !9959)
!9961 = !DILocation(line: 452, column: 21, scope: !9959)
!9962 = !DILocation(line: 452, column: 27, scope: !9959)
!9963 = !DILocation(line: 452, column: 6, scope: !9953)
!9964 = !DILocation(line: 453, column: 35, scope: !9959)
!9965 = !DILocation(line: 453, column: 43, scope: !9959)
!9966 = !DILocation(line: 453, column: 50, scope: !9959)
!9967 = !DILocation(line: 453, column: 3, scope: !9959)
!9968 = !DILocation(line: 455, column: 7, scope: !9969)
!9969 = distinct !DILexicalBlock(scope: !9953, file: !3, line: 455, column: 6)
!9970 = !DILocation(line: 455, column: 15, scope: !9969)
!9971 = !DILocation(line: 455, column: 21, scope: !9969)
!9972 = !DILocation(line: 455, column: 27, scope: !9969)
!9973 = !DILocation(line: 455, column: 6, scope: !9953)
!9974 = !DILocation(line: 456, column: 3, scope: !9969)
!9975 = !DILocation(line: 458, column: 9, scope: !9976)
!9976 = distinct !DILexicalBlock(scope: !9953, file: !3, line: 458, column: 2)
!9977 = !DILocation(line: 458, column: 7, scope: !9976)
!9978 = !DILocation(line: 458, column: 26, scope: !9979)
!9979 = distinct !DILexicalBlock(scope: !9976, file: !3, line: 458, column: 2)
!9980 = !DILocation(line: 458, column: 28, scope: !9979)
!9981 = !DILocation(line: 458, column: 2, scope: !9976)
!9982 = !DILocalVariable(name: "ps", scope: !9983, file: !3, line: 459, type: !9627)
!9983 = distinct !DILexicalBlock(scope: !9979, file: !3, line: 458, column: 55)
!9984 = !DILocation(line: 459, column: 35, scope: !9983)
!9985 = !DILocation(line: 459, column: 41, scope: !9983)
!9986 = !DILocation(line: 459, column: 49, scope: !9983)
!9987 = !DILocation(line: 459, column: 55, scope: !9983)
!9988 = !DILocation(line: 459, column: 62, scope: !9983)
!9989 = !DILocation(line: 460, column: 35, scope: !9983)
!9990 = !DILocation(line: 460, column: 39, scope: !9983)
!9991 = !DILocation(line: 460, column: 3, scope: !9983)
!9992 = !DILocation(line: 461, column: 2, scope: !9983)
!9993 = !DILocation(line: 458, column: 51, scope: !9979)
!9994 = !DILocation(line: 458, column: 2, scope: !9979)
!9995 = distinct !{!9995, !9981, !9996}
!9996 = !DILocation(line: 461, column: 2, scope: !9976)
!9997 = !DILocation(line: 462, column: 1, scope: !9953)
!9998 = distinct !DISubprogram(name: "acpi_generic_device_attach", scope: !3, file: !3, line: 1917, type: !4248, scopeLine: 1919, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !239)
!9999 = !DILocalVariable(name: "adev", arg: 1, scope: !9998, file: !3, line: 1917, type: !4035)
!10000 = !DILocation(line: 1917, column: 59, scope: !9998)
!10001 = !DILocalVariable(name: "not_used", arg: 2, scope: !9998, file: !3, line: 1918, type: !3463)
!10002 = !DILocation(line: 1918, column: 40, scope: !9998)
!10003 = !DILocation(line: 1924, column: 6, scope: !10004)
!10004 = distinct !DILexicalBlock(scope: !9998, file: !3, line: 1924, column: 6)
!10005 = !DILocation(line: 1924, column: 12, scope: !10004)
!10006 = !DILocation(line: 1924, column: 17, scope: !10004)
!10007 = !DILocation(line: 1924, column: 6, scope: !9998)
!10008 = !DILocation(line: 1925, column: 28, scope: !10004)
!10009 = !DILocation(line: 1925, column: 3, scope: !10004)
!10010 = !DILocation(line: 1927, column: 2, scope: !9998)
!10011 = distinct !DISubprogram(name: "get_order", scope: !10012, file: !10012, line: 29, type: !10013, scopeLine: 30, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !239)
!10012 = !DIFile(filename: "./include/asm-generic/getorder.h", directory: "/home/lizy2001/genbc/linux")
!10013 = !DISubroutineType(types: !10014)
!10014 = !{!251, !316}
!10015 = !DILocalVariable(name: "x", arg: 1, scope: !10016, file: !10017, line: 366, type: !414)
!10016 = distinct !DISubprogram(name: "fls64", scope: !10017, file: !10017, line: 366, type: !10018, scopeLine: 367, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !239)
!10017 = !DIFile(filename: "./arch/x86/include/asm/bitops.h", directory: "/home/lizy2001/genbc/linux")
!10018 = !DISubroutineType(types: !10019)
!10019 = !{!251, !414}
!10020 = !DILocation(line: 366, column: 40, scope: !10016, inlinedAt: !10021)
!10021 = distinct !DILocation(line: 46, column: 9, scope: !10011)
!10022 = !DILocalVariable(name: "bitpos", scope: !10016, file: !10017, line: 368, type: !251)
!10023 = !DILocation(line: 368, column: 6, scope: !10016, inlinedAt: !10021)
!10024 = !DILocalVariable(name: "size", arg: 1, scope: !10011, file: !10012, line: 29, type: !316)
!10025 = !DILocation(line: 29, column: 63, scope: !10011)
!10026 = !DILocation(line: 31, column: 27, scope: !10027)
!10027 = distinct !DILexicalBlock(scope: !10011, file: !10012, line: 31, column: 6)
!10028 = !DILocation(line: 31, column: 6, scope: !10027)
!10029 = !DILocation(line: 31, column: 6, scope: !10011)
!10030 = !DILocation(line: 32, column: 8, scope: !10031)
!10031 = distinct !DILexicalBlock(scope: !10032, file: !10012, line: 32, column: 7)
!10032 = distinct !DILexicalBlock(scope: !10027, file: !10012, line: 31, column: 34)
!10033 = !DILocation(line: 32, column: 7, scope: !10032)
!10034 = !DILocation(line: 33, column: 4, scope: !10031)
!10035 = !DILocation(line: 35, column: 7, scope: !10036)
!10036 = distinct !DILexicalBlock(scope: !10032, file: !10012, line: 35, column: 7)
!10037 = !DILocation(line: 35, column: 12, scope: !10036)
!10038 = !DILocation(line: 35, column: 7, scope: !10032)
!10039 = !DILocation(line: 36, column: 4, scope: !10036)
!10040 = !DILocation(line: 38, column: 10, scope: !10032)
!10041 = !DILocation(line: 38, column: 28, scope: !10032)
!10042 = !DILocation(line: 38, column: 41, scope: !10032)
!10043 = !DILocation(line: 38, column: 3, scope: !10032)
!10044 = !DILocation(line: 41, column: 6, scope: !10011)
!10045 = !DILocation(line: 42, column: 7, scope: !10011)
!10046 = !DILocation(line: 46, column: 15, scope: !10011)
!10047 = !DILocation(line: 374, column: 2, scope: !10016, inlinedAt: !10021)
!10048 = !DILocation(line: 376, column: 14, scope: !10016, inlinedAt: !10021)
!10049 = !{i32 356780}
!10050 = !DILocation(line: 377, column: 9, scope: !10016, inlinedAt: !10021)
!10051 = !DILocation(line: 377, column: 16, scope: !10016, inlinedAt: !10021)
!10052 = !DILocation(line: 46, column: 2, scope: !10011)
!10053 = !DILocation(line: 48, column: 1, scope: !10011)
!10054 = distinct !DISubprogram(name: "__ilog2_u64", scope: !10055, file: !10055, line: 30, type: !10056, scopeLine: 31, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !239)
!10055 = !DIFile(filename: "./include/linux/log2.h", directory: "/home/lizy2001/genbc/linux")
!10056 = !DISubroutineType(types: !10057)
!10057 = !{!251, !413}
!10058 = !DILocation(line: 366, column: 40, scope: !10016, inlinedAt: !10059)
!10059 = distinct !DILocation(line: 32, column: 9, scope: !10054)
!10060 = !DILocation(line: 368, column: 6, scope: !10016, inlinedAt: !10059)
!10061 = !DILocalVariable(name: "n", arg: 1, scope: !10054, file: !10055, line: 30, type: !413)
!10062 = !DILocation(line: 30, column: 21, scope: !10054)
!10063 = !DILocation(line: 32, column: 15, scope: !10054)
!10064 = !DILocation(line: 374, column: 2, scope: !10016, inlinedAt: !10059)
!10065 = !DILocation(line: 376, column: 14, scope: !10016, inlinedAt: !10059)
!10066 = !DILocation(line: 377, column: 9, scope: !10016, inlinedAt: !10059)
!10067 = !DILocation(line: 377, column: 16, scope: !10016, inlinedAt: !10059)
!10068 = !DILocation(line: 32, column: 18, scope: !10054)
!10069 = !DILocation(line: 32, column: 2, scope: !10054)
!10070 = distinct !DISubprogram(name: "kasan_kmalloc", scope: !10071, file: !10071, line: 137, type: !10072, scopeLine: 139, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !239)
!10071 = !DIFile(filename: "./include/linux/kasan.h", directory: "/home/lizy2001/genbc/linux")
!10072 = !DISubroutineType(types: !10073)
!10073 = !{!193, !931, !2124, !313, !739}
!10074 = !DILocalVariable(name: "s", arg: 1, scope: !10070, file: !10071, line: 137, type: !931)
!10075 = !DILocation(line: 137, column: 54, scope: !10070)
!10076 = !DILocalVariable(name: "object", arg: 2, scope: !10070, file: !10071, line: 137, type: !2124)
!10077 = !DILocation(line: 137, column: 69, scope: !10070)
!10078 = !DILocalVariable(name: "size", arg: 3, scope: !10070, file: !10071, line: 138, type: !313)
!10079 = !DILocation(line: 138, column: 12, scope: !10070)
!10080 = !DILocalVariable(name: "flags", arg: 4, scope: !10070, file: !10071, line: 138, type: !739)
!10081 = !DILocation(line: 138, column: 24, scope: !10070)
!10082 = !DILocation(line: 140, column: 17, scope: !10070)
!10083 = !DILocation(line: 140, column: 2, scope: !10070)
!10084 = distinct !DISubprogram(name: "queue_work", scope: !137, file: !137, line: 504, type: !10085, scopeLine: 506, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !239)
!10085 = !DISubroutineType(types: !10086)
!10086 = !{!482, !2790, !1964}
!10087 = !DILocalVariable(name: "wq", arg: 1, scope: !10084, file: !137, line: 504, type: !2790)
!10088 = !DILocation(line: 504, column: 56, scope: !10084)
!10089 = !DILocalVariable(name: "work", arg: 2, scope: !10084, file: !137, line: 505, type: !1964)
!10090 = !DILocation(line: 505, column: 30, scope: !10084)
!10091 = !DILocation(line: 507, column: 41, scope: !10084)
!10092 = !DILocation(line: 507, column: 45, scope: !10084)
!10093 = !DILocation(line: 507, column: 9, scope: !10084)
!10094 = !DILocation(line: 507, column: 2, scope: !10084)
