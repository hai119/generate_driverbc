; ModuleID = '../bcout/drivers/acpi/ec.llvm.bc'
source_filename = "drivers/acpi/ec.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64"

%struct.kernel_param_ops = type { i32, i32 (i8*, %struct.kernel_param*)*, i32 (i8*, %struct.kernel_param*)*, void (i8*)* }
%struct.kernel_param = type { i8*, %struct.module*, %struct.kernel_param_ops*, i16, i8, i8, %union.anon }
%struct.module = type opaque
%union.anon = type { i8* }
%struct.workqueue_struct = type opaque
%struct.acpi_ec = type { i8*, i32, i32, i64, i64, i8, i64, i64, %struct.mutex, %struct.wait_queue_head, %struct.list_head, %struct.transaction*, %struct.spinlock, %struct.work_struct, i64, i64, i8, i32 }
%struct.mutex = type { %struct.atomic64_t, %struct.spinlock, %struct.list_head }
%struct.atomic64_t = type { i64 }
%struct.wait_queue_head = type { %struct.spinlock, %struct.list_head }
%struct.list_head = type { %struct.list_head*, %struct.list_head* }
%struct.transaction = type { i8*, i8*, i16, i8, i8, i8, i8, i8, i8 }
%struct.spinlock = type { %union.anon.0 }
%union.anon.0 = type { %struct.raw_spinlock }
%struct.raw_spinlock = type { %struct.arch_spinlock_t }
%struct.arch_spinlock_t = type {}
%struct.work_struct = type { %struct.atomic64_t, %struct.list_head, void (%struct.work_struct*)* }
%struct.acpi_device_id = type { [9 x i8], i64, i32, i32 }
%struct.acpi_driver = type { [80 x i8], [80 x i8], %struct.acpi_device_id*, i32, %struct.acpi_device_ops, %struct.device_driver, %struct.module* }
%struct.acpi_device_ops = type { i32 (%struct.acpi_device*)*, i32 (%struct.acpi_device*)*, void (%struct.acpi_device*, i32)* }
%struct.acpi_device = type { i32, i8*, %struct.fwnode_handle, %struct.acpi_device*, %struct.list_head, %struct.list_head, %struct.list_head, %struct.list_head, %struct.acpi_device_status, %struct.acpi_device_flags, %struct.acpi_device_pnp, %struct.acpi_device_power, %struct.acpi_device_wakeup, %struct.acpi_device_perf, %struct.acpi_device_dir, %struct.acpi_device_data, %struct.acpi_scan_handler*, %struct.acpi_hotplug_context*, %struct.acpi_driver*, %struct.acpi_gpio_mapping*, i8*, %struct.device, i32, i32, %struct.list_head, %struct.mutex, void (%struct.acpi_device*)* }
%struct.fwnode_handle = type { %struct.fwnode_handle*, %struct.fwnode_operations*, %struct.device* }
%struct.fwnode_operations = type { %struct.fwnode_handle* (%struct.fwnode_handle*)*, void (%struct.fwnode_handle*)*, i1 (%struct.fwnode_handle*)*, i8* (%struct.fwnode_handle*, %struct.device*)*, i1 (%struct.fwnode_handle*, i8*)*, i32 (%struct.fwnode_handle*, i8*, i32, i8*, i64)*, i32 (%struct.fwnode_handle*, i8*, i8**, i64)*, i8* (%struct.fwnode_handle*)*, i8* (%struct.fwnode_handle*)*, %struct.fwnode_handle* (%struct.fwnode_handle*)*, %struct.fwnode_handle* (%struct.fwnode_handle*, %struct.fwnode_handle*)*, %struct.fwnode_handle* (%struct.fwnode_handle*, i8*)*, i32 (%struct.fwnode_handle*, i8*, i8*, i32, i32, %struct.fwnode_reference_args*)*, %struct.fwnode_handle* (%struct.fwnode_handle*, %struct.fwnode_handle*)*, %struct.fwnode_handle* (%struct.fwnode_handle*)*, %struct.fwnode_handle* (%struct.fwnode_handle*)*, i32 (%struct.fwnode_handle*, %struct.fwnode_endpoint*)*, i32 (%struct.fwnode_handle*, %struct.device*)* }
%struct.fwnode_reference_args = type { %struct.fwnode_handle*, i32, [8 x i64] }
%struct.fwnode_endpoint = type { i32, i32, %struct.fwnode_handle* }
%struct.acpi_device_status = type { i32 }
%struct.acpi_device_flags = type { i32 }
%struct.acpi_device_pnp = type { [8 x i8], %struct.acpi_pnp_type, i64, i8*, %struct.list_head, [40 x i8], [20 x i8], %union.acpi_object* }
%struct.acpi_pnp_type = type { i32 }
%union.acpi_object = type { %struct.anon.76 }
%struct.anon.76 = type { i32, i32, i64, i32 }
%struct.acpi_device_power = type { i32, %struct.acpi_device_power_flags, [5 x %struct.acpi_device_power_state] }
%struct.acpi_device_power_flags = type { i32 }
%struct.acpi_device_power_state = type { %struct.anon.78, i32, i32, %struct.list_head }
%struct.anon.78 = type { i8 }
%struct.acpi_device_wakeup = type { i8*, i64, i64, %struct.list_head, %struct.acpi_device_wakeup_flags, %struct.acpi_device_wakeup_context, %struct.wakeup_source*, i32, i32 }
%struct.acpi_device_wakeup_flags = type { i8 }
%struct.acpi_device_wakeup_context = type { void (%struct.acpi_device_wakeup_context*)*, %struct.device* }
%struct.wakeup_source = type { i8*, i32, %struct.list_head, %struct.spinlock, %struct.wake_irq*, %struct.timer_list, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, %struct.device*, i8 }
%struct.wake_irq = type opaque
%struct.timer_list = type { %struct.hlist_node, i64, void (%struct.timer_list*)*, i32 }
%struct.hlist_node = type { %struct.hlist_node*, %struct.hlist_node** }
%struct.acpi_device_perf = type { i32, %struct.acpi_device_perf_flags, i32, %struct.acpi_device_perf_state* }
%struct.acpi_device_perf_flags = type { i8 }
%struct.acpi_device_perf_state = type { %struct.anon.79, i8, i8, i32 }
%struct.anon.79 = type { i8 }
%struct.acpi_device_dir = type { %struct.proc_dir_entry* }
%struct.proc_dir_entry = type opaque
%struct.acpi_device_data = type { %union.acpi_object*, %struct.list_head, %union.acpi_object*, %struct.list_head }
%struct.acpi_scan_handler = type { %struct.acpi_device_id*, %struct.list_head, i1 (i8*, %struct.acpi_device_id**)*, i32 (%struct.acpi_device*, %struct.acpi_device_id*)*, void (%struct.acpi_device*)*, void (%struct.device*)*, void (%struct.device*)*, %struct.acpi_hotplug_profile }
%struct.acpi_hotplug_profile = type { %struct.kobject, i32 (%struct.acpi_device*)*, void (%struct.acpi_device*)*, i8 }
%struct.kobject = type { i8*, %struct.list_head, %struct.kobject*, %struct.kset*, %struct.kobj_type*, %struct.kernfs_node*, %struct.kref, i8 }
%struct.kset = type { %struct.list_head, %struct.spinlock, %struct.kobject, %struct.kset_uevent_ops* }
%struct.kset_uevent_ops = type { i32 (%struct.kset*, %struct.kobject*)*, i8* (%struct.kset*, %struct.kobject*)*, i32 (%struct.kset*, %struct.kobject*, %struct.kobj_uevent_env*)* }
%struct.kobj_uevent_env = type { [3 x i8*], [64 x i8*], i32, [2048 x i8], i32 }
%struct.kobj_type = type { void (%struct.kobject*)*, %struct.sysfs_ops*, %struct.attribute**, %struct.attribute_group**, %struct.kobj_ns_type_operations* (%struct.kobject*)*, i8* (%struct.kobject*)*, void (%struct.kobject*, %struct.kuid_t*, %struct.kgid_t*)* }
%struct.sysfs_ops = type { i64 (%struct.kobject*, %struct.attribute*, i8*)*, i64 (%struct.kobject*, %struct.attribute*, i8*, i64)* }
%struct.attribute = type { i8*, i16 }
%struct.attribute_group = type { i8*, i16 (%struct.kobject*, %struct.attribute*, i32)*, i16 (%struct.kobject*, %struct.bin_attribute*, i32)*, %struct.attribute**, %struct.bin_attribute** }
%struct.bin_attribute = type { %struct.attribute, i64, i8*, i64 (%struct.file*, %struct.kobject*, %struct.bin_attribute*, i8*, i64, i64)*, i64 (%struct.file*, %struct.kobject*, %struct.bin_attribute*, i8*, i64, i64)*, i32 (%struct.file*, %struct.kobject*, %struct.bin_attribute*, %struct.vm_area_struct*)* }
%struct.file = type { %union.anon.1, %struct.path, %struct.inode*, %struct.file_operations*, %struct.spinlock, i32, %struct.atomic64_t, i32, i32, %struct.mutex, i64, %struct.fown_struct, %struct.cred*, %struct.file_ra_state, i64, i8*, %struct.list_head, %struct.list_head, %struct.address_space*, i32, i32 }
%union.anon.1 = type { %struct.callback_head }
%struct.callback_head = type { %struct.callback_head*, void (%struct.callback_head*)* }
%struct.path = type { %struct.vfsmount*, %struct.dentry* }
%struct.vfsmount = type opaque
%struct.dentry = type { i32, %struct.seqcount_spinlock, %struct.hlist_bl_node, %struct.dentry*, %struct.qstr, %struct.inode*, [32 x i8], %struct.lockref, %struct.dentry_operations*, %struct.super_block*, i64, i8*, %union.anon.68, %struct.list_head, %struct.list_head, %union.anon.69 }
%struct.seqcount_spinlock = type { %struct.seqcount }
%struct.seqcount = type { i32 }
%struct.hlist_bl_node = type { %struct.hlist_bl_node*, %struct.hlist_bl_node** }
%struct.qstr = type { %union.anon.2, i8* }
%union.anon.2 = type { i64 }
%struct.lockref = type { %union.anon.66 }
%union.anon.66 = type { %struct.anon.67 }
%struct.anon.67 = type { %struct.spinlock, i32 }
%struct.dentry_operations = type { i32 (%struct.dentry*, i32)*, i32 (%struct.dentry*, i32)*, i32 (%struct.dentry*, %struct.qstr*)*, i32 (%struct.dentry*, i32, i8*, %struct.qstr*)*, i32 (%struct.dentry*)*, i32 (%struct.dentry*)*, void (%struct.dentry*)*, void (%struct.dentry*)*, void (%struct.dentry*, %struct.inode*)*, i8* (%struct.dentry*, i8*, i32)*, %struct.vfsmount* (%struct.path*)*, i32 (%struct.path*, i1)*, %struct.dentry* (%struct.dentry*, %struct.inode*)*, [24 x i8] }
%struct.super_block = type { %struct.list_head, i32, i8, i64, i64, %struct.file_system_type*, %struct.super_operations*, %struct.dquot_operations*, %struct.quotactl_ops*, %struct.export_operations*, i64, i64, i64, %struct.dentry*, %struct.rw_semaphore, i32, %struct.atomic_t, %struct.xattr_handler**, %struct.hlist_bl_head, %struct.list_head, %struct.block_device*, %struct.backing_dev_info*, %struct.mtd_info*, %struct.hlist_node, i32, %struct.quota_info, %struct.sb_writers, i8*, i32, i64, i64, i32, %struct.fsnotify_mark_connector*, [32 x i8], %struct.uuid_t, i32, i32, %struct.mutex, i8*, %struct.dentry_operations*, i32, %struct.shrinker, %struct.atomic64_t, %struct.atomic64_t, i32, i32, %struct.workqueue_struct*, %struct.hlist_head, %struct.user_namespace*, %struct.list_lru, %struct.list_lru, %struct.callback_head, %struct.work_struct, %struct.mutex, i32, %struct.spinlock, %struct.list_head, %struct.spinlock, %struct.list_head }
%struct.file_system_type = type { i8*, i32, i32 (%struct.fs_context*)*, %struct.fs_parameter_spec*, %struct.dentry* (%struct.file_system_type*, i32, i8*, i8*)*, void (%struct.super_block*)*, %struct.module*, %struct.file_system_type*, %struct.hlist_head, %struct.lock_class_key, %struct.lock_class_key, %struct.lock_class_key, [3 x %struct.lock_class_key], %struct.lock_class_key, %struct.lock_class_key, %struct.lock_class_key }
%struct.fs_context = type opaque
%struct.fs_parameter_spec = type opaque
%struct.lock_class_key = type {}
%struct.super_operations = type { %struct.inode* (%struct.super_block*)*, void (%struct.inode*)*, void (%struct.inode*)*, void (%struct.inode*, i32)*, i32 (%struct.inode*, %struct.writeback_control*)*, i32 (%struct.inode*)*, void (%struct.inode*)*, void (%struct.super_block*)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*)*, i32 (%struct.super_block*)*, i32 (%struct.super_block*)*, i32 (%struct.super_block*)*, i32 (%struct.dentry*, %struct.kstatfs*)*, i32 (%struct.super_block*, i32*, i8*)*, void (%struct.super_block*)*, i32 (%struct.seq_file*, %struct.dentry*)*, i32 (%struct.seq_file*, %struct.dentry*)*, i32 (%struct.seq_file*, %struct.dentry*)*, i32 (%struct.seq_file*, %struct.dentry*)*, i32 (%struct.super_block*, %struct.page*, i32)*, i64 (%struct.super_block*, %struct.shrink_control*)*, i64 (%struct.super_block*, %struct.shrink_control*)* }
%struct.writeback_control = type { i64, i64, i64, i64, i32, i8 }
%struct.kstatfs = type opaque
%struct.seq_file = type { i8*, i64, i64, i64, i64, i64, i64, %struct.mutex, %struct.seq_operations*, i32, %struct.file*, i8* }
%struct.seq_operations = type { i8* (%struct.seq_file*, i64*)*, void (%struct.seq_file*, i8*)*, i8* (%struct.seq_file*, i8*, i64*)*, i32 (%struct.seq_file*, i8*)* }
%struct.page = type { i64, %union.anon.3, %union.anon.58, %struct.atomic_t, [8 x i8] }
%union.anon.3 = type { %struct.anon.4 }
%struct.anon.4 = type { %struct.list_head, %struct.address_space*, i64, i64 }
%union.anon.58 = type { %struct.atomic_t }
%struct.shrink_control = type { i32, i32, i64, i64, %struct.mem_cgroup* }
%struct.mem_cgroup = type opaque
%struct.dquot_operations = type { i32 (%struct.dquot*)*, %struct.dquot* (%struct.super_block*, i32)*, void (%struct.dquot*)*, i32 (%struct.dquot*)*, i32 (%struct.dquot*)*, i32 (%struct.dquot*)*, i32 (%struct.super_block*, i32)*, i64* (%struct.inode*)*, i32 (%struct.inode*, %struct.kprojid_t*)*, i32 (%struct.inode*, i64*)*, i32 (%struct.super_block*, %struct.kqid*)* }
%struct.dquot = type { %struct.hlist_node, %struct.list_head, %struct.list_head, %struct.list_head, %struct.mutex, %struct.spinlock, %struct.atomic_t, %struct.super_block*, %struct.kqid, i64, i64, %struct.mem_dqblk }
%struct.kqid = type { %union.anon.59, i32 }
%union.anon.59 = type { %struct.kuid_t }
%struct.kuid_t = type { i32 }
%struct.mem_dqblk = type { i64, i64, i64, i64, i64, i64, i64, i64, i64 }
%struct.kprojid_t = type { i32 }
%struct.quotactl_ops = type { i32 (%struct.super_block*, i32, i32, %struct.path*)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32, %struct.qc_info*)*, i32 (%struct.super_block*, i64, %struct.qc_dqblk*)*, i32 (%struct.super_block*, %struct.kqid*, %struct.qc_dqblk*)*, i32 (%struct.super_block*, i64, %struct.qc_dqblk*)*, i32 (%struct.super_block*, %struct.qc_state*)*, i32 (%struct.super_block*, i32)* }
%struct.qc_info = type { i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.qc_dqblk = type { i32, i64, i64, i64, i64, i64, i64, i64, i64, i32, i32, i64, i64, i64, i64, i32 }
%struct.qc_state = type { i32, [3 x %struct.qc_type_state] }
%struct.qc_type_state = type { i32, i32, i32, i32, i32, i32, i32, i64, i64, i64 }
%struct.export_operations = type opaque
%struct.rw_semaphore = type { %struct.atomic64_t, %struct.atomic64_t, %struct.raw_spinlock, %struct.list_head }
%struct.atomic_t = type { i32 }
%struct.xattr_handler = type opaque
%struct.hlist_bl_head = type { %struct.hlist_bl_node* }
%struct.block_device = type { i32, i32, %struct.inode*, %struct.super_block*, %struct.mutex, i8*, i8*, i32, i8, %struct.list_head, %struct.block_device*, i8, %struct.hd_struct*, i32, %struct.spinlock, %struct.gendisk*, %struct.backing_dev_info*, i32, %struct.mutex }
%struct.hd_struct = type { i64, i64, i64, %struct.disk_stats*, %struct.percpu_ref, %struct.device, %struct.kobject*, i32, i32, %struct.partition_meta_info*, %struct.rcu_work }
%struct.disk_stats = type opaque
%struct.percpu_ref = type { i64, %struct.percpu_ref_data* }
%struct.percpu_ref_data = type { %struct.atomic64_t, void (%struct.percpu_ref*)*, void (%struct.percpu_ref*)*, i8, %struct.callback_head, %struct.percpu_ref* }
%struct.partition_meta_info = type { [37 x i8], [64 x i8] }
%struct.rcu_work = type { %struct.work_struct, %struct.callback_head, %struct.workqueue_struct* }
%struct.gendisk = type { i32, i32, i32, [32 x i8], i16, i16, %struct.disk_part_tbl*, %struct.hd_struct, %struct.block_device_operations*, %struct.request_queue*, i8*, i32, i64, %struct.rw_semaphore, %struct.kobject*, %struct.timer_rand_state*, %struct.atomic_t, %struct.disk_events*, %struct.kobject, i32, %struct.badblocks*, %struct.lockdep_map }
%struct.disk_part_tbl = type { %struct.callback_head, i32, %struct.hd_struct*, [0 x %struct.hd_struct*] }
%struct.block_device_operations = type { i32 (%struct.bio*)*, i32 (%struct.block_device*, i32)*, void (%struct.gendisk*, i32)*, i32 (%struct.block_device*, i64, %struct.page*, i32)*, i32 (%struct.block_device*, i32, i32, i64)*, i32 (%struct.block_device*, i32, i32, i64)*, i32 (%struct.gendisk*, i32)*, void (%struct.gendisk*)*, i32 (%struct.gendisk*)*, i32 (%struct.block_device*, %struct.hd_geometry*)*, void (%struct.block_device*, i64)*, i32 (%struct.gendisk*, i64, i32, i32 (%struct.blk_zone*, i32, i8*)*, i8*)*, i8* (%struct.gendisk*, i16*)*, %struct.module*, %struct.pr_ops* }
%struct.bio = type { %struct.bio*, %struct.gendisk*, i32, i16, i16, i16, i8, i8, %struct.atomic_t, %struct.bvec_iter, void (%struct.bio*)*, i8*, %union.anon.36, i16, i16, %struct.atomic_t, %struct.bio_vec*, %struct.bio_set*, [0 x %struct.bio_vec] }
%struct.bvec_iter = type { i64, i32, i32, i32 }
%union.anon.36 = type { %struct.bio_integrity_payload* }
%struct.bio_integrity_payload = type { %struct.bio*, %struct.bvec_iter, i16, i16, i16, i16, %struct.bvec_iter, %struct.work_struct, %struct.bio_vec*, [0 x %struct.bio_vec] }
%struct.bio_vec = type { %struct.page*, i32, i32 }
%struct.bio_set = type { %struct.kmem_cache*, i32, %struct.mempool_s, %struct.mempool_s, %struct.mempool_s, %struct.mempool_s, %struct.spinlock, %struct.bio_list, %struct.work_struct, %struct.workqueue_struct* }
%struct.kmem_cache = type opaque
%struct.mempool_s = type { %struct.spinlock, i32, i32, i8**, i8*, i8* (i32, i8*)*, void (i8*, i8*)*, %struct.wait_queue_head }
%struct.bio_list = type { %struct.bio*, %struct.bio* }
%struct.hd_geometry = type opaque
%struct.blk_zone = type { i64, i64, i64, i8, i8, i8, i8, [4 x i8], i64, [24 x i8] }
%struct.pr_ops = type opaque
%struct.request_queue = type { %struct.request*, %struct.elevator_queue*, %struct.percpu_ref, %struct.blk_queue_stats*, %struct.rq_qos*, %struct.blk_mq_ops*, %struct.blk_mq_ctx*, i32, %struct.blk_mq_hw_ctx**, i32, %struct.backing_dev_info*, i8*, i64, %struct.atomic_t, i32, i32, %struct.spinlock, %struct.kobject, %struct.kobject*, %struct.blk_integrity, %struct.device*, i32, i32, i64, i32, i32, i32, i32, %struct.blk_stat_callback*, [16 x %struct.blk_rq_stat], %struct.timer_list, %struct.work_struct, %struct.atomic_t, %struct.list_head, %struct.queue_limits, i32, i32, i32, i32, %struct.mutex, %struct.blk_flush_queue*, %struct.list_head, %struct.spinlock, %struct.delayed_work, %struct.mutex, %struct.mutex, %struct.list_head, %struct.spinlock, i32, %struct.bsg_class_device, %struct.callback_head, %struct.wait_queue_head, %struct.mutex, %struct.blk_mq_tag_set*, %struct.list_head, %struct.bio_set, %struct.dentry*, i8, i64, [5 x i64] }
%struct.request = type { %struct.request_queue*, %struct.blk_mq_ctx*, %struct.blk_mq_hw_ctx*, i32, i32, i32, i32, i32, i64, %struct.bio*, %struct.bio*, %struct.list_head, %union.anon.80, %union.anon.81, %union.anon.82, %struct.gendisk*, %struct.hd_struct*, i64, i64, i16, i16, i16, i16, i16, i32, %struct.refcount_struct, i32, i64, %union.anon.85, void (%struct.request*, i8)*, i8* }
%struct.blk_mq_hw_ctx = type opaque
%union.anon.80 = type { %struct.hlist_node }
%union.anon.81 = type { %struct.rb_node }
%struct.rb_node = type { i64, %struct.rb_node*, %struct.rb_node* }
%union.anon.82 = type { %struct.anon.84 }
%struct.anon.84 = type { i32, %struct.list_head, void (%struct.request*, i8)* }
%struct.refcount_struct = type { %struct.atomic_t }
%union.anon.85 = type { %struct.__call_single_data }
%struct.__call_single_data = type { %union.anon.86, void (i8*)*, i8* }
%union.anon.86 = type { %struct.__call_single_node }
%struct.__call_single_node = type { %struct.llist_node, %union.anon.87, i16, i16 }
%struct.llist_node = type { %struct.llist_node* }
%union.anon.87 = type { i32 }
%struct.elevator_queue = type { %struct.elevator_type*, i8*, %struct.kobject, %struct.mutex, i8, [64 x %struct.hlist_head] }
%struct.elevator_type = type { %struct.kmem_cache*, %struct.elevator_mq_ops, i64, i64, %struct.elv_fs_entry*, i8*, i8*, i32, %struct.module*, [22 x i8], %struct.list_head }
%struct.elevator_mq_ops = type { i32 (%struct.request_queue*, %struct.elevator_type*)*, void (%struct.elevator_queue*)*, i32 (%struct.blk_mq_hw_ctx*, i32)*, void (%struct.blk_mq_hw_ctx*, i32)*, void (%struct.blk_mq_hw_ctx*)*, i1 (%struct.request_queue*, %struct.request*, %struct.bio*)*, i1 (%struct.blk_mq_hw_ctx*, %struct.bio*, i32)*, i32 (%struct.request_queue*, %struct.request**, %struct.bio*)*, void (%struct.request_queue*, %struct.request*, i32)*, void (%struct.request_queue*, %struct.request*, %struct.request*)*, void (i32, %struct.blk_mq_alloc_data*)*, void (%struct.request*)*, void (%struct.request*)*, void (%struct.blk_mq_hw_ctx*, %struct.list_head*, i1)*, %struct.request* (%struct.blk_mq_hw_ctx*)*, i1 (%struct.blk_mq_hw_ctx*)*, void (%struct.request*, i64)*, void (%struct.request*)*, %struct.request* (%struct.request_queue*, %struct.request*)*, %struct.request* (%struct.request_queue*, %struct.request*)*, void (%struct.io_cq*)*, void (%struct.io_cq*)* }
%struct.blk_mq_alloc_data = type opaque
%struct.io_cq = type { %struct.request_queue*, %struct.io_context*, %union.anon.37, %union.anon.38, i32 }
%struct.io_context = type { %struct.atomic64_t, %struct.atomic_t, %struct.atomic_t, %struct.spinlock, i16, %struct.xarray, %struct.io_cq*, %struct.hlist_head, %struct.work_struct }
%struct.xarray = type { %struct.spinlock, i32, i8* }
%union.anon.37 = type { %struct.list_head }
%union.anon.38 = type { %struct.hlist_node }
%struct.elv_fs_entry = type { %struct.attribute, i64 (%struct.elevator_queue*, i8*)*, i64 (%struct.elevator_queue*, i8*, i64)* }
%struct.blk_queue_stats = type opaque
%struct.rq_qos = type opaque
%struct.blk_mq_ops = type opaque
%struct.blk_mq_ctx = type opaque
%struct.blk_integrity = type { %struct.blk_integrity_profile*, i8, i8, i8, i8 }
%struct.blk_integrity_profile = type { i8 (%struct.blk_integrity_iter*)*, i8 (%struct.blk_integrity_iter*)*, void (%struct.request*)*, void (%struct.request*, i32)*, i8* }
%struct.blk_integrity_iter = type { i8*, i8*, i64, i32, i16, i8* }
%struct.blk_stat_callback = type opaque
%struct.blk_rq_stat = type { i64, i64, i64, i32, i64 }
%struct.queue_limits = type { i64, i64, i64, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i16, i16, i16, i8, i8, i8, i32 }
%struct.blk_flush_queue = type opaque
%struct.delayed_work = type { %struct.work_struct, %struct.timer_list, %struct.workqueue_struct*, i32 }
%struct.bsg_class_device = type { %struct.device*, i32, %struct.request_queue*, %struct.bsg_ops* }
%struct.bsg_ops = type { i32 (%struct.sg_io_v4*)*, i32 (%struct.request*, %struct.sg_io_v4*, i32)*, i32 (%struct.request*, %struct.sg_io_v4*)*, void (%struct.request*)* }
%struct.sg_io_v4 = type { i32, i32, i32, i32, i64, i64, i32, i32, i32, i32, i64, i32, i32, i32, i32, i64, i64, i32, i32, i64, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i64, i32, i32 }
%struct.blk_mq_tag_set = type opaque
%struct.timer_rand_state = type opaque
%struct.disk_events = type opaque
%struct.badblocks = type opaque
%struct.lockdep_map = type {}
%struct.backing_dev_info = type { i64, %struct.rb_node, %struct.list_head, i64, i64, %struct.kref, i32, i32, i32, i32, %struct.atomic64_t, %struct.bdi_writeback, %struct.list_head, %struct.wait_queue_head, %struct.device*, [64 x i8], %struct.device*, %struct.timer_list }
%struct.bdi_writeback = type { %struct.backing_dev_info*, i64, i64, %struct.list_head, %struct.list_head, %struct.list_head, %struct.list_head, %struct.spinlock, [4 x %struct.percpu_counter], i64, i64, i64, i64, i64, i64, i64, i64, %struct.fprop_local_percpu, i32, i32, %struct.spinlock, %struct.list_head, %struct.delayed_work, i64, %struct.list_head }
%struct.percpu_counter = type { i64 }
%struct.fprop_local_percpu = type { %struct.percpu_counter, i32, %struct.raw_spinlock }
%struct.mtd_info = type opaque
%struct.quota_info = type { i32, %struct.rw_semaphore, [3 x %struct.inode*], [3 x %struct.mem_dqinfo], [3 x %struct.quota_format_ops*] }
%struct.mem_dqinfo = type { %struct.quota_format_type*, i32, %struct.list_head, i64, i32, i32, i64, i64, i8* }
%struct.quota_format_type = type { i32, %struct.quota_format_ops*, %struct.module*, %struct.quota_format_type* }
%struct.quota_format_ops = type { i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.dquot*)*, i32 (%struct.dquot*)*, i32 (%struct.dquot*)*, i32 (%struct.super_block*, %struct.kqid*)* }
%struct.sb_writers = type { i32, %struct.wait_queue_head, [3 x %struct.percpu_rw_semaphore] }
%struct.percpu_rw_semaphore = type { %struct.rcu_sync, i32*, %struct.rcuwait, %struct.wait_queue_head, %struct.atomic_t }
%struct.rcu_sync = type { i32, i32, %struct.wait_queue_head, %struct.callback_head }
%struct.rcuwait = type { %struct.task_struct* }
%struct.task_struct = type { %struct.thread_info, i64, i8*, %struct.refcount_struct, i32, i32, i32, i32, i32, i32, i32, %struct.sched_class*, %struct.sched_entity, %struct.sched_rt_entity, %struct.sched_dl_entity, i32, i32, %struct.cpumask*, %struct.cpumask, %struct.sched_info, %struct.list_head, %struct.mm_struct*, %struct.mm_struct*, %struct.vmacache, i32, i32, i32, i32, i64, i32, i8, [3 x i8], i8, i64, %struct.restart_block, i32, i32, i64, %struct.task_struct*, %struct.task_struct*, %struct.list_head, %struct.list_head, %struct.task_struct*, %struct.list_head, %struct.list_head, %struct.pid*, [4 x %struct.hlist_node], %struct.list_head, %struct.list_head, %struct.completion*, i32*, i32*, i64, i64, i64, %struct.prev_cputime, i64, i64, i64, i64, i64, i64, %struct.posix_cputimers, %struct.posix_cputimers_work, %struct.cred*, %struct.cred*, %struct.cred*, %struct.key*, [16 x i8], %struct.nameidata*, %struct.fs_struct*, %struct.files_struct*, %struct.io_uring_task*, %struct.nsproxy*, %struct.signal_struct*, %struct.sighand_struct*, %struct.sigset_t, %struct.sigset_t, %struct.sigset_t, %struct.sigpending, i64, i64, i32, %struct.callback_head*, %struct.seccomp, i64, i64, %struct.spinlock, %struct.raw_spinlock, %struct.wake_q_node, %struct.rb_root_cached, %struct.task_struct*, %struct.rt_mutex_waiter*, i8*, %struct.bio_list*, %struct.blk_plug*, %struct.reclaim_state*, %struct.backing_dev_info*, %struct.io_context*, %struct.capture_control*, i64, %struct.kernel_siginfo*, %struct.task_io_accounting, %struct.robust_list_head*, %struct.list_head, %struct.futex_pi_state*, %struct.mutex, i32, [2 x %struct.perf_event_context*], %struct.mutex, %struct.list_head, %struct.rseq*, i32, i64, %struct.tlbflush_unmap_batch, %union.anon.51, %struct.pipe_inode_info*, %struct.page_frag, i32, i32, i64, i64, i64, i32, %struct.task_struct*, %struct.vm_struct*, %struct.refcount_struct, i8*, i64, i64, i64, %struct.callback_head, [24 x i8], %struct.thread_struct }
%struct.thread_info = type { i64, i32 }
%struct.sched_class = type opaque
%struct.sched_entity = type { %struct.load_weight, %struct.rb_node, %struct.list_head, i32, i64, i64, i64, i64, i64, %struct.sched_statistics }
%struct.load_weight = type { i64, i32 }
%struct.sched_statistics = type {}
%struct.sched_rt_entity = type { %struct.list_head, i64, i64, i32, i16, i16, %struct.sched_rt_entity* }
%struct.sched_dl_entity = type { %struct.rb_node, i64, i64, i64, i64, i64, i64, i64, i32, i8, %struct.hrtimer, %struct.hrtimer, %struct.sched_dl_entity* }
%struct.hrtimer = type { %struct.timerqueue_node, i64, i32 (%struct.hrtimer*)*, %struct.hrtimer_clock_base*, i8, i8, i8, i8 }
%struct.timerqueue_node = type { %struct.rb_node, i64 }
%struct.hrtimer_clock_base = type { %struct.hrtimer_cpu_base*, i32, i32, %struct.seqcount_raw_spinlock, %struct.hrtimer*, %struct.timerqueue_head, i64 ()*, i64 }
%struct.hrtimer_cpu_base = type { %struct.raw_spinlock, i32, i32, i32, i8, i64, %struct.hrtimer*, i64, %struct.hrtimer*, [16 x i8], [8 x %struct.hrtimer_clock_base] }
%struct.seqcount_raw_spinlock = type { %struct.seqcount }
%struct.timerqueue_head = type { %struct.rb_root_cached }
%struct.cpumask = type { [1 x i64] }
%struct.sched_info = type {}
%struct.mm_struct = type { %struct.anon.16, [0 x i64] }
%struct.anon.16 = type { %struct.vm_area_struct*, %struct.rb_root, i64, i64 (%struct.file*, i64, i64, i64, i64)*, i64, i64, i64, i64, %struct.pgd_t*, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic64_t, i32, %struct.spinlock, %struct.rw_semaphore, %struct.list_head, i64, i64, i64, i64, %struct.atomic64_t, i64, i64, i64, i64, %struct.spinlock, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, [44 x i64], %struct.mm_rss_stat, %struct.linux_binfmt*, %struct.mm_context_t, i64, %struct.core_state*, %struct.spinlock, %struct.kioctx_table*, %struct.user_namespace*, %struct.file*, %struct.mmu_notifier_subscriptions*, %struct.atomic_t, i8, %struct.uprobes_state, %struct.work_struct, i32 }
%struct.vm_area_struct = type { i64, i64, %struct.vm_area_struct*, %struct.vm_area_struct*, %struct.rb_node, i64, %struct.mm_struct*, %struct.pgprot, i64, %struct.anon.17, %struct.list_head, %struct.anon_vma*, %struct.vm_operations_struct*, i64, %struct.file*, i8*, %struct.atomic64_t, %struct.vm_userfaultfd_ctx }
%struct.pgprot = type { i64 }
%struct.anon.17 = type { %struct.rb_node, i64 }
%struct.anon_vma = type opaque
%struct.vm_operations_struct = type { void (%struct.vm_area_struct*)*, void (%struct.vm_area_struct*)*, i32 (%struct.vm_area_struct*, i64)*, i32 (%struct.vm_area_struct*)*, i32 (%struct.vm_fault*)*, i32 (%struct.vm_fault*, i32)*, void (%struct.vm_fault*, i64, i64)*, i64 (%struct.vm_area_struct*)*, i32 (%struct.vm_fault*)*, i32 (%struct.vm_fault*)*, i32 (%struct.vm_area_struct*, i64, i8*, i32, i32)*, i8* (%struct.vm_area_struct*)*, %struct.page* (%struct.vm_area_struct*, i64)* }
%struct.vm_fault = type { %struct.vm_area_struct*, i32, i32, i64, i64, %struct.pmd_t*, %struct.pud_t*, %struct.pte_t, %struct.page*, %struct.page*, %struct.pte_t*, %struct.spinlock*, %struct.page* }
%struct.pmd_t = type { i64 }
%struct.pud_t = type { i64 }
%struct.pte_t = type { i64 }
%struct.vm_userfaultfd_ctx = type {}
%struct.rb_root = type { %struct.rb_node* }
%struct.pgd_t = type { i64 }
%struct.mm_rss_stat = type { [4 x %struct.atomic64_t] }
%struct.linux_binfmt = type opaque
%struct.mm_context_t = type { i64, %struct.atomic64_t, %struct.rw_semaphore, %struct.ldt_struct*, i16, %struct.mutex, i8*, %struct.vdso_image*, %struct.atomic_t, i16, i16 }
%struct.ldt_struct = type opaque
%struct.vdso_image = type { i8*, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64 }
%struct.core_state = type { %struct.atomic_t, %struct.core_thread, %struct.completion }
%struct.core_thread = type { %struct.task_struct*, %struct.core_thread* }
%struct.completion = type { i32, %struct.swait_queue_head }
%struct.swait_queue_head = type { %struct.raw_spinlock, %struct.list_head }
%struct.kioctx_table = type opaque
%struct.mmu_notifier_subscriptions = type opaque
%struct.uprobes_state = type {}
%struct.vmacache = type { i64, [4 x %struct.vm_area_struct*] }
%struct.restart_block = type { i64 (%struct.restart_block*)*, %union.anon.18 }
%union.anon.18 = type { %struct.anon.19 }
%struct.anon.19 = type { i32*, i32, i32, i32, i64, i32* }
%struct.pid = type { %struct.refcount_struct, i32, %struct.spinlock, [4 x %struct.hlist_head], %struct.hlist_head, %struct.wait_queue_head, %struct.callback_head, [1 x %struct.upid] }
%struct.upid = type { i32, %struct.pid_namespace* }
%struct.pid_namespace = type opaque
%struct.prev_cputime = type { i64, i64, %struct.raw_spinlock }
%struct.posix_cputimers = type { [3 x %struct.posix_cputimer_base], i32, i32 }
%struct.posix_cputimer_base = type { i64, %struct.timerqueue_head }
%struct.posix_cputimers_work = type { %struct.callback_head, i32 }
%struct.key = type { %struct.refcount_struct, i32, %union.anon.23, %struct.rw_semaphore, %struct.key_user*, i8*, %union.anon.24, i64, %struct.kuid_t, %struct.kgid_t, i32, i16, i16, i16, i64, %union.anon.25, %union.anon.29, %struct.key_restriction* }
%union.anon.23 = type { %struct.rb_node }
%struct.key_user = type opaque
%union.anon.24 = type { i64 }
%struct.kgid_t = type { i32 }
%union.anon.25 = type { %struct.keyring_index_key }
%struct.keyring_index_key = type { i64, %union.anon.26, %struct.key_type*, %struct.key_tag*, i8* }
%union.anon.26 = type { i64 }
%struct.key_type = type opaque
%struct.key_tag = type { %struct.callback_head, %struct.refcount_struct, i8 }
%union.anon.29 = type { %union.key_payload }
%union.key_payload = type { [4 x i8*] }
%struct.key_restriction = type { i32 (%struct.key*, %struct.key_type*, %union.key_payload*, %struct.key*)*, %struct.key*, %struct.key_type* }
%struct.nameidata = type opaque
%struct.fs_struct = type opaque
%struct.files_struct = type opaque
%struct.io_uring_task = type opaque
%struct.nsproxy = type { %struct.atomic_t, %struct.uts_namespace*, %struct.ipc_namespace*, %struct.mnt_namespace*, %struct.pid_namespace*, %struct.net*, %struct.time_namespace*, %struct.time_namespace*, %struct.cgroup_namespace* }
%struct.uts_namespace = type opaque
%struct.ipc_namespace = type opaque
%struct.mnt_namespace = type opaque
%struct.net = type opaque
%struct.time_namespace = type opaque
%struct.cgroup_namespace = type { %struct.refcount_struct, %struct.ns_common, %struct.user_namespace*, %struct.ucounts*, %struct.css_set* }
%struct.ns_common = type { %struct.atomic64_t, %struct.proc_ns_operations*, i32 }
%struct.proc_ns_operations = type opaque
%struct.ucounts = type { %struct.hlist_node, %struct.user_namespace*, %struct.kuid_t, i32, [10 x %struct.atomic_t] }
%struct.css_set = type opaque
%struct.signal_struct = type { %struct.refcount_struct, %struct.atomic_t, i32, %struct.list_head, %struct.wait_queue_head, %struct.task_struct*, %struct.sigpending, %struct.hlist_head, i32, i32, %struct.task_struct*, i32, i32, i8, i32, %struct.list_head, %struct.hrtimer, i64, [2 x %struct.cpu_itimer], %struct.thread_group_cputimer, %struct.posix_cputimers, [4 x %struct.pid*], %struct.pid*, i32, %struct.tty_struct*, %struct.seqlock_t, i64, i64, i64, i64, i64, i64, %struct.prev_cputime, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, %struct.task_io_accounting, i64, [16 x %struct.rlimit], i8, i16, i16, %struct.mm_struct*, %struct.mutex, %struct.mutex }
%struct.cpu_itimer = type { i64, i64 }
%struct.thread_group_cputimer = type { %struct.task_cputime_atomic }
%struct.task_cputime_atomic = type { %struct.atomic64_t, %struct.atomic64_t, %struct.atomic64_t }
%struct.tty_struct = type opaque
%struct.seqlock_t = type { %struct.seqcount_spinlock, %struct.spinlock }
%struct.rlimit = type { i64, i64 }
%struct.sighand_struct = type { %struct.spinlock, %struct.refcount_struct, %struct.wait_queue_head, [64 x %struct.k_sigaction] }
%struct.k_sigaction = type { %struct.sigaction }
%struct.sigaction = type { void (i32)*, i64, void ()*, %struct.sigset_t }
%struct.sigset_t = type { [1 x i64] }
%struct.sigpending = type { %struct.list_head, %struct.sigset_t }
%struct.seccomp = type { i32, %struct.atomic_t, %struct.seccomp_filter* }
%struct.seccomp_filter = type opaque
%struct.wake_q_node = type { %struct.wake_q_node* }
%struct.rb_root_cached = type { %struct.rb_root, %struct.rb_node* }
%struct.rt_mutex_waiter = type opaque
%struct.blk_plug = type { %struct.list_head, %struct.list_head, i16, i8, i8 }
%struct.reclaim_state = type { i64 }
%struct.capture_control = type opaque
%struct.kernel_siginfo = type { %struct.anon.39 }
%struct.anon.39 = type { i32, i32, i32, %union.__sifields }
%union.__sifields = type { %struct.anon.43 }
%struct.anon.43 = type { i32, i32, i32, i64, i64 }
%struct.task_io_accounting = type {}
%struct.robust_list_head = type opaque
%struct.futex_pi_state = type opaque
%struct.perf_event_context = type opaque
%struct.rseq = type { i32, i32, %union.anon.50, i32, [12 x i8] }
%union.anon.50 = type { i64 }
%struct.tlbflush_unmap_batch = type { %struct.arch_tlbflush_unmap_batch, i8, i8 }
%struct.arch_tlbflush_unmap_batch = type { %struct.cpumask }
%union.anon.51 = type { %struct.callback_head }
%struct.pipe_inode_info = type opaque
%struct.page_frag = type { %struct.page*, i32, i32 }
%struct.vm_struct = type { %struct.vm_struct*, i8*, i64, i64, %struct.page**, i32, i64, i8* }
%struct.thread_struct = type { [3 x %struct.desc_struct], i64, i16, i16, i16, i16, i64, i64, [4 x %struct.perf_event*], i64, i64, i64, i64, i64, %struct.io_bitmap*, i64, i8, [47 x i8], %struct.fpu }
%struct.desc_struct = type { i16, i16, i32 }
%struct.perf_event = type opaque
%struct.io_bitmap = type opaque
%struct.fpu = type { i32, i64, [48 x i8], %union.fpregs_state }
%union.fpregs_state = type { %struct.xregs_state, [3520 x i8] }
%struct.xregs_state = type { %struct.fxregs_state, %struct.xstate_header, [0 x i8] }
%struct.fxregs_state = type { i16, i16, i16, i16, %union.anon.52, i32, i32, [32 x i32], [64 x i32], [12 x i32], %union.anon.55 }
%union.anon.52 = type { %struct.anon.53 }
%struct.anon.53 = type { i64, i64 }
%union.anon.55 = type { [12 x i32] }
%struct.xstate_header = type { i64, i64, [6 x i64] }
%struct.fsnotify_mark_connector = type opaque
%struct.uuid_t = type { [16 x i8] }
%struct.shrinker = type { i64 (%struct.shrinker*, %struct.shrink_control*)*, i64 (%struct.shrinker*, %struct.shrink_control*)*, i64, i32, i32, %struct.list_head, %struct.atomic64_t* }
%struct.hlist_head = type { %struct.hlist_node* }
%struct.user_namespace = type { %struct.uid_gid_map, %struct.uid_gid_map, %struct.uid_gid_map, %struct.atomic_t, %struct.user_namespace*, i32, %struct.kuid_t, %struct.kgid_t, %struct.ns_common, i64, %struct.list_head, %struct.key*, %struct.rw_semaphore, %struct.work_struct, %struct.ctl_table_set, %struct.ctl_table_header*, %struct.ucounts*, [10 x i32] }
%struct.uid_gid_map = type { i32, %union.anon.31 }
%union.anon.31 = type { %struct.anon.32, [48 x i8] }
%struct.anon.32 = type { %struct.uid_gid_extent*, %struct.uid_gid_extent* }
%struct.uid_gid_extent = type { i32, i32, i32 }
%struct.ctl_table_set = type { i32 (%struct.ctl_table_set*)*, %struct.ctl_dir }
%struct.ctl_dir = type { %struct.ctl_table_header, %struct.rb_root }
%struct.ctl_table_header = type { %union.anon.33, %struct.completion*, %struct.ctl_table*, %struct.ctl_table_root*, %struct.ctl_table_set*, %struct.ctl_dir*, %struct.ctl_node*, %struct.hlist_head }
%union.anon.33 = type { %struct.anon.34 }
%struct.anon.34 = type { %struct.ctl_table*, i32, i32, i32 }
%struct.ctl_table = type { i8*, i8*, i32, i16, %struct.ctl_table*, i32 (%struct.ctl_table*, i32, i8*, i64*, i64*)*, %struct.ctl_table_poll*, i8*, i8* }
%struct.ctl_table_poll = type { %struct.atomic_t, %struct.wait_queue_head }
%struct.ctl_table_root = type { %struct.ctl_table_set, %struct.ctl_table_set* (%struct.ctl_table_root*)*, void (%struct.ctl_table_header*, %struct.ctl_table*, %struct.kuid_t*, %struct.kgid_t*)*, i32 (%struct.ctl_table_header*, %struct.ctl_table*)* }
%struct.ctl_node = type { %struct.rb_node, %struct.ctl_table_header* }
%struct.list_lru = type { %struct.list_lru_node* }
%struct.list_lru_node = type { %struct.spinlock, %struct.list_lru_one, i64 }
%struct.list_lru_one = type { %struct.list_head, i64 }
%union.anon.68 = type { %struct.list_head }
%union.anon.69 = type { %struct.hlist_node }
%struct.inode = type { i16, i16, %struct.kuid_t, %struct.kgid_t, i32, %struct.inode_operations*, %struct.super_block*, %struct.address_space*, i64, %union.anon.60, i32, i64, %struct.timespec64, %struct.timespec64, %struct.timespec64, %struct.spinlock, i16, i8, i8, i64, i64, %struct.rw_semaphore, i64, i64, %struct.hlist_node, %struct.list_head, %struct.list_head, %struct.list_head, %struct.list_head, %union.anon.61, %struct.atomic64_t, %struct.atomic64_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %union.anon.62, %struct.file_lock_context*, %struct.address_space, %struct.list_head, %union.anon.65, i32, i32, %struct.fsnotify_mark_connector*, i8* }
%struct.inode_operations = type { %struct.dentry* (%struct.inode*, %struct.dentry*, i32)*, i8* (%struct.dentry*, %struct.inode*, %struct.delayed_call*)*, i32 (%struct.inode*, i32)*, %struct.posix_acl* (%struct.inode*, i32)*, i32 (%struct.dentry*, i8*, i32)*, i32 (%struct.inode*, %struct.dentry*, i16, i1)*, i32 (%struct.dentry*, %struct.inode*, %struct.dentry*)*, i32 (%struct.inode*, %struct.dentry*)*, i32 (%struct.inode*, %struct.dentry*, i8*)*, i32 (%struct.inode*, %struct.dentry*, i16)*, i32 (%struct.inode*, %struct.dentry*)*, i32 (%struct.inode*, %struct.dentry*, i16, i32)*, i32 (%struct.inode*, %struct.dentry*, %struct.inode*, %struct.dentry*, i32)*, i32 (%struct.dentry*, %struct.iattr*)*, i32 (%struct.path*, %struct.kstat*, i32, i32)*, i64 (%struct.dentry*, i8*, i64)*, i32 (%struct.inode*, %struct.fiemap_extent_info*, i64, i64)*, i32 (%struct.inode*, %struct.timespec64*, i32)*, i32 (%struct.inode*, %struct.dentry*, %struct.file*, i32, i16)*, i32 (%struct.inode*, %struct.dentry*, i16)*, i32 (%struct.inode*, %struct.posix_acl*, i32)*, [24 x i8] }
%struct.delayed_call = type { void (i8*)*, i8* }
%struct.posix_acl = type opaque
%struct.iattr = type { i32, i16, %struct.kuid_t, %struct.kgid_t, i64, %struct.timespec64, %struct.timespec64, %struct.timespec64, %struct.file* }
%struct.kstat = type { i32, i16, i32, i32, i64, i64, i64, i32, i32, %struct.kuid_t, %struct.kgid_t, i64, %struct.timespec64, %struct.timespec64, %struct.timespec64, %struct.timespec64, i64, i64 }
%struct.fiemap_extent_info = type opaque
%union.anon.60 = type { i32 }
%struct.timespec64 = type { i64, i64 }
%union.anon.61 = type { %struct.callback_head }
%union.anon.62 = type { %struct.file_operations* }
%struct.file_lock_context = type { %struct.spinlock, %struct.list_head, %struct.list_head, %struct.list_head }
%struct.address_space = type { %struct.inode*, %struct.xarray, i32, %struct.atomic_t, %struct.rb_root_cached, %struct.rw_semaphore, i64, i64, i64, %struct.address_space_operations*, i64, i32, %struct.spinlock, %struct.list_head, i8* }
%struct.address_space_operations = type { i32 (%struct.page*, %struct.writeback_control*)*, i32 (%struct.file*, %struct.page*)*, i32 (%struct.address_space*, %struct.writeback_control*)*, i32 (%struct.page*)*, i32 (%struct.file*, %struct.address_space*, %struct.list_head*, i32)*, void (%struct.readahead_control*)*, i32 (%struct.file*, %struct.address_space*, i64, i32, i32, %struct.page**, i8**)*, i32 (%struct.file*, %struct.address_space*, i64, i32, i32, %struct.page*, i8*)*, i64 (%struct.address_space*, i64)*, void (%struct.page*, i32, i32)*, i32 (%struct.page*, i32)*, void (%struct.page*)*, i64 (%struct.kiocb*, %struct.iov_iter*)*, i32 (%struct.address_space*, %struct.page*, %struct.page*, i32)*, i1 (%struct.page*, i32)*, void (%struct.page*)*, i32 (%struct.page*)*, i32 (%struct.page*, i64, i64)*, void (%struct.page*, i8*, i8*)*, i32 (%struct.address_space*, %struct.page*)*, i32 (%struct.swap_info_struct*, %struct.file*, i64*)*, void (%struct.file*)* }
%struct.readahead_control = type { %struct.file*, %struct.address_space*, i64, i32, i32 }
%struct.kiocb = type { %struct.file*, i64, void (%struct.kiocb*, i64, i64)*, i8*, i32, i16, i16, %union.anon.5 }
%union.anon.5 = type { %struct.wait_page_queue* }
%struct.wait_page_queue = type { %struct.page*, i32, %struct.wait_queue_entry }
%struct.wait_queue_entry = type { i32, i8*, i32 (%struct.wait_queue_entry*, i32, i32, i8*)*, %struct.list_head }
%struct.iov_iter = type opaque
%struct.swap_info_struct = type { i64, i16, %struct.plist_node, i8, i32, i8*, %struct.swap_cluster_info*, %struct.swap_cluster_list, i32, i32, i32, i32, i32, i32, i32*, %struct.percpu_cluster*, %struct.rb_root, %struct.block_device*, %struct.file*, i32, %struct.spinlock, %struct.spinlock, %struct.work_struct, %struct.swap_cluster_list, [0 x %struct.plist_node] }
%struct.plist_node = type { i32, %struct.list_head, %struct.list_head }
%struct.swap_cluster_info = type { %struct.spinlock, i32 }
%struct.percpu_cluster = type { %struct.swap_cluster_info, i32 }
%struct.swap_cluster_list = type { %struct.swap_cluster_info, %struct.swap_cluster_info }
%union.anon.65 = type { %struct.pipe_inode_info* }
%struct.file_operations = type { %struct.module*, i64 (%struct.file*, i64, i32)*, i64 (%struct.file*, i8*, i64, i64*)*, i64 (%struct.file*, i8*, i64, i64*)*, i64 (%struct.kiocb*, %struct.iov_iter*)*, i64 (%struct.kiocb*, %struct.iov_iter*)*, i32 (%struct.kiocb*, i1)*, i32 (%struct.file*, %struct.dir_context*)*, i32 (%struct.file*, %struct.dir_context*)*, i32 (%struct.file*, %struct.poll_table_struct*)*, i64 (%struct.file*, i32, i64)*, i64 (%struct.file*, i32, i64)*, i32 (%struct.file*, %struct.vm_area_struct*)*, i64, i32 (%struct.inode*, %struct.file*)*, i32 (%struct.file*, i8*)*, i32 (%struct.inode*, %struct.file*)*, i32 (%struct.file*, i64, i64, i32)*, i32 (i32, %struct.file*, i32)*, i32 (%struct.file*, i32, %struct.file_lock*)*, i64 (%struct.file*, %struct.page*, i32, i64, i64*, i32)*, i64 (%struct.file*, i64, i64, i64, i64)*, i32 (i32)*, i32 (%struct.file*, i32, %struct.file_lock*)*, i64 (%struct.pipe_inode_info*, %struct.file*, i64*, i64, i32)*, i64 (%struct.file*, i64*, %struct.pipe_inode_info*, i64, i32)*, i32 (%struct.file*, i64, %struct.file_lock**, i8**)*, i64 (%struct.file*, i32, i64, i64)*, void (%struct.seq_file*, %struct.file*)*, i64 (%struct.file*, i64, %struct.file*, i64, i64, i32)*, i64 (%struct.file*, i64, %struct.file*, i64, i64, i32)*, i32 (%struct.file*, i64, i64, i32)* }
%struct.dir_context = type { i32 (%struct.dir_context*, i8*, i32, i64, i64, i32)*, i64 }
%struct.poll_table_struct = type opaque
%struct.file_lock = type { %struct.file_lock*, %struct.list_head, %struct.hlist_node, %struct.list_head, %struct.list_head, i8*, i32, i8, i32, i32, %struct.wait_queue_head, %struct.file*, i64, i64, %struct.fasync_struct*, i64, i64, %struct.file_lock_operations*, %struct.lock_manager_operations*, %union.anon.63 }
%struct.fasync_struct = type { %struct.rwlock_t, i32, i32, %struct.fasync_struct*, %struct.file*, %struct.callback_head }
%struct.rwlock_t = type { %struct.arch_rwlock_t }
%struct.arch_rwlock_t = type {}
%struct.file_lock_operations = type { void (%struct.file_lock*, %struct.file_lock*)*, void (%struct.file_lock*)* }
%struct.lock_manager_operations = type { i8* (i8*)*, void (i8*)*, void (%struct.file_lock*)*, i32 (%struct.file_lock*, i32)*, i1 (%struct.file_lock*)*, i32 (%struct.file_lock*, i32, %struct.list_head*)*, void (%struct.file_lock*, i8**)*, i1 (%struct.file_lock*)* }
%union.anon.63 = type { %struct.nfs_lock_info }
%struct.nfs_lock_info = type { i32, %struct.nlm_lockowner*, %struct.list_head }
%struct.nlm_lockowner = type opaque
%struct.fown_struct = type { %struct.rwlock_t, %struct.pid*, i32, %struct.kuid_t, %struct.kuid_t, i32 }
%struct.cred = type { %struct.atomic_t, %struct.kuid_t, %struct.kgid_t, %struct.kuid_t, %struct.kgid_t, %struct.kuid_t, %struct.kgid_t, %struct.kuid_t, %struct.kgid_t, i32, %struct.kernel_cap_struct, %struct.kernel_cap_struct, %struct.kernel_cap_struct, %struct.kernel_cap_struct, %struct.kernel_cap_struct, i8, %struct.key*, %struct.key*, %struct.key*, %struct.key*, %struct.user_struct*, %struct.user_namespace*, %struct.group_info*, %union.anon.35 }
%struct.kernel_cap_struct = type { [2 x i32] }
%struct.user_struct = type { %struct.refcount_struct, %struct.atomic_t, %struct.atomic_t, %struct.atomic64_t, i64, i64, %struct.atomic64_t, %struct.hlist_node, %struct.kuid_t, %struct.atomic64_t, %struct.ratelimit_state }
%struct.ratelimit_state = type { %struct.raw_spinlock, i32, i32, i32, i32, i64, i64 }
%struct.group_info = type { %struct.atomic_t, i32, [0 x %struct.kgid_t] }
%union.anon.35 = type { %struct.callback_head }
%struct.file_ra_state = type { i64, i32, i32, i32, i32, i64 }
%struct.kobj_ns_type_operations = type { i32, i1 ()*, i8* ()*, i8* (%struct.sock*)*, i8* ()*, void (i8*)* }
%struct.sock = type opaque
%struct.kernfs_node = type { %struct.atomic_t, %struct.atomic_t, %struct.kernfs_node*, i8*, %struct.rb_node, i8*, i32, %union.anon.70, i8*, i64, i16, i16, %struct.kernfs_iattrs* }
%union.anon.70 = type { %struct.kernfs_elem_attr }
%struct.kernfs_elem_attr = type { %struct.kernfs_ops*, %struct.kernfs_open_node*, i64, %struct.kernfs_node* }
%struct.kernfs_ops = type { i32 (%struct.kernfs_open_file*)*, void (%struct.kernfs_open_file*)*, i32 (%struct.seq_file*, i8*)*, i8* (%struct.seq_file*, i64*)*, i8* (%struct.seq_file*, i8*, i64*)*, void (%struct.seq_file*, i8*)*, i64 (%struct.kernfs_open_file*, i8*, i64, i64)*, i64, i8, i64 (%struct.kernfs_open_file*, i8*, i64, i64)*, i32 (%struct.kernfs_open_file*, %struct.poll_table_struct*)*, i32 (%struct.kernfs_open_file*, %struct.vm_area_struct*)* }
%struct.kernfs_open_file = type { %struct.kernfs_node*, %struct.file*, %struct.seq_file*, i8*, %struct.mutex, %struct.mutex, i32, %struct.list_head, i8*, i64, i8, %struct.vm_operations_struct* }
%struct.kernfs_open_node = type opaque
%struct.kernfs_iattrs = type opaque
%struct.kref = type { %struct.refcount_struct }
%struct.acpi_hotplug_context = type { %struct.acpi_device*, i32 (%struct.acpi_device*, i32)*, void (%struct.acpi_device*, i32)*, void (%struct.acpi_device*)* }
%struct.acpi_gpio_mapping = type opaque
%struct.device = type { %struct.kobject, %struct.device*, %struct.device_private*, i8*, %struct.device_type*, %struct.bus_type*, %struct.device_driver*, i8*, i8*, %struct.mutex, %struct.dev_links_info, %struct.dev_pm_info, %struct.dev_pm_domain*, %struct.irq_domain*, %struct.list_head, %struct.dma_map_ops*, i64*, i64, i64, %struct.bus_dma_region*, %struct.device_dma_parameters*, %struct.list_head, %struct.dev_archdata, %struct.device_node*, %struct.fwnode_handle*, i32, i32, %struct.spinlock, %struct.list_head, %struct.class*, %struct.attribute_group**, void (%struct.device*)*, %struct.iommu_group*, %struct.dev_iommu*, i8 }
%struct.device_private = type opaque
%struct.device_type = type { i8*, %struct.attribute_group**, i32 (%struct.device*, %struct.kobj_uevent_env*)*, i8* (%struct.device*, i16*, %struct.kuid_t*, %struct.kgid_t*)*, void (%struct.device*)*, %struct.dev_pm_ops* }
%struct.dev_pm_ops = type { i32 (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)* }
%struct.bus_type = type { i8*, i8*, %struct.device*, %struct.attribute_group**, %struct.attribute_group**, %struct.attribute_group**, i32 (%struct.device*, %struct.device_driver*)*, i32 (%struct.device*, %struct.kobj_uevent_env*)*, i32 (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*, i32)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, %struct.dev_pm_ops*, %struct.iommu_ops*, %struct.subsys_private*, %struct.lock_class_key, i8 }
%struct.iommu_ops = type opaque
%struct.subsys_private = type opaque
%struct.dev_links_info = type { %struct.list_head, %struct.list_head, %struct.list_head, %struct.list_head, i8, i32 }
%struct.dev_pm_info = type { %struct.pm_message, i16, i32, %struct.spinlock, %struct.list_head, %struct.completion, %struct.wakeup_source*, i8, %struct.hrtimer, i64, %struct.work_struct, %struct.wait_queue_head, %struct.wake_irq*, %struct.atomic_t, %struct.atomic_t, i16, i32, i32, i32, i32, i32, i64, i64, i64, i64, %struct.pm_subsys_data*, void (%struct.device*, i32)*, %struct.dev_pm_qos* }
%struct.pm_message = type { i32 }
%struct.pm_subsys_data = type { %struct.spinlock, i32, %struct.list_head, %struct.pm_domain_data* }
%struct.pm_domain_data = type opaque
%struct.dev_pm_qos = type opaque
%struct.dev_pm_domain = type { %struct.dev_pm_ops, i32 (%struct.device*)*, void (%struct.device*, i1)*, i32 (%struct.device*)*, void (%struct.device*)*, void (%struct.device*)* }
%struct.irq_domain = type { %struct.list_head, i8*, %struct.irq_domain_ops*, i8*, i32, i32, %struct.fwnode_handle*, i32, %struct.irq_domain_chip_generic*, %struct.irq_domain*, i64, i32, i32, %struct.xarray, %struct.mutex, [0 x i32] }
%struct.irq_domain_ops = type { i32 (%struct.irq_domain*, %struct.device_node*, i32)*, i32 (%struct.irq_domain*, %struct.irq_fwspec*, i32)*, i32 (%struct.irq_domain*, i32, i64)*, void (%struct.irq_domain*, i32)*, i32 (%struct.irq_domain*, %struct.device_node*, i32*, i32, i64*, i32*)*, i32 (%struct.irq_domain*, i32, i32, i8*)*, void (%struct.irq_domain*, i32, i32)*, i32 (%struct.irq_domain*, %struct.irq_data*, i1)*, void (%struct.irq_domain*, %struct.irq_data*)*, i32 (%struct.irq_domain*, %struct.irq_fwspec*, i64*, i32*)* }
%struct.irq_fwspec = type { %struct.fwnode_handle*, i32, [16 x i32] }
%struct.irq_data = type opaque
%struct.irq_domain_chip_generic = type opaque
%struct.dma_map_ops = type opaque
%struct.bus_dma_region = type opaque
%struct.device_dma_parameters = type { i32, i64 }
%struct.dev_archdata = type {}
%struct.device_node = type { i8*, i32, i8*, %struct.fwnode_handle, %struct.property*, %struct.property*, %struct.device_node*, %struct.device_node*, %struct.device_node*, %struct.kobject, i64, i8* }
%struct.property = type { i8*, i32, i8*, %struct.property*, %struct.bin_attribute }
%struct.class = type { i8*, %struct.module*, %struct.attribute_group**, %struct.attribute_group**, %struct.kobject*, i32 (%struct.device*, %struct.kobj_uevent_env*)*, i8* (%struct.device*, i16*)*, void (%struct.class*)*, void (%struct.device*)*, i32 (%struct.device*)*, %struct.kobj_ns_type_operations*, i8* (%struct.device*)*, void (%struct.device*, %struct.kuid_t*, %struct.kgid_t*)*, %struct.dev_pm_ops*, %struct.subsys_private* }
%struct.iommu_group = type opaque
%struct.dev_iommu = type opaque
%struct.device_driver = type { i8*, %struct.bus_type*, %struct.module*, i8*, i8, i32, %struct.of_device_id*, %struct.acpi_device_id*, i32 (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*, i32)*, i32 (%struct.device*)*, %struct.attribute_group**, %struct.attribute_group**, %struct.dev_pm_ops*, void (%struct.device*)*, %struct.driver_private* }
%struct.of_device_id = type { [32 x i8], [32 x i8], [128 x i8], i8* }
%struct.driver_private = type opaque
%struct.paravirt_patch_template = type { %struct.pv_init_ops, %struct.pv_time_ops, %struct.pv_cpu_ops, %struct.pv_irq_ops, %struct.pv_mmu_ops, %struct.pv_lock_ops }
%struct.pv_init_ops = type { i32 (i8, i8*, i64, i32)* }
%struct.pv_time_ops = type { i64 ()*, i64 (i32)* }
%struct.pv_cpu_ops = type { void ()*, i64 (i32)*, void (i32, i64)*, i64 ()*, void (i64)*, void (i64)*, void ()*, void (%struct.desc_ptr*)*, void (%struct.desc_ptr*)*, void (i8*, i32)*, i64 ()*, void (%struct.thread_struct*, i32)*, void (i32)*, void (%struct.desc_struct*, i32, i8*)*, void (%struct.desc_struct*, i32, i8*, i32)*, void (%struct.gate_struct*, i32, %struct.gate_struct*)*, void (%struct.desc_struct*, i32)*, void (%struct.desc_struct*, i32)*, void (i64)*, void ()*, void ()*, void ()*, void (i32*, i32*, i32*, i32*)*, i64 (i32)*, void (i32, i32, i32)*, i64 (i32, i32*)*, i32 (i32, i32, i32)*, i64 (i32)*, void ()*, void ()*, void ()*, void (%struct.task_struct*)*, void (%struct.task_struct*)* }
%struct.desc_ptr = type <{ i16, i64 }>
%struct.gate_struct = type { i16, i16, %struct.idt_bits, i16, i32, i32 }
%struct.idt_bits = type { i16 }
%struct.pv_irq_ops = type { %struct.paravirt_callee_save, %struct.paravirt_callee_save, %struct.paravirt_callee_save, %struct.paravirt_callee_save, void ()*, void ()* }
%struct.paravirt_callee_save = type { i8* }
%struct.pv_mmu_ops = type { void ()*, void ()*, void (i64)*, void (%struct.cpumask*, %struct.flush_tlb_info*)*, void (%struct.mmu_gather*, i8*)*, void (%struct.mm_struct*)*, %struct.paravirt_callee_save, void (i64)*, i64 ()*, void (i64)*, void (%struct.mm_struct*, %struct.mm_struct*)*, void (%struct.mm_struct*, %struct.mm_struct*)*, i32 (%struct.mm_struct*)*, void (%struct.mm_struct*, %struct.pgd_t*)*, void (%struct.mm_struct*, i64)*, void (%struct.mm_struct*, i64)*, void (%struct.mm_struct*, i64)*, void (%struct.mm_struct*, i64)*, void (i64)*, void (i64)*, void (i64)*, void (i64)*, void (%struct.pte_t*, i64)*, void (%struct.pmd_t*, i64)*, i64 (%struct.vm_area_struct*, i64, %struct.pte_t*)*, void (%struct.vm_area_struct*, i64, %struct.pte_t*, i64)*, %struct.paravirt_callee_save, %struct.paravirt_callee_save, %struct.paravirt_callee_save, %struct.paravirt_callee_save, void (%struct.pud_t*, i64)*, %struct.paravirt_callee_save, %struct.paravirt_callee_save, %struct.paravirt_callee_save, %struct.paravirt_callee_save, void (%struct.p4d_t*, i64)*, %struct.paravirt_callee_save, %struct.paravirt_callee_save, void (%struct.pgd_t*, i64)*, %struct.pv_lazy_ops, void (i32, i64, i64)* }
%struct.flush_tlb_info = type opaque
%struct.mmu_gather = type opaque
%struct.p4d_t = type { i64 }
%struct.pv_lazy_ops = type { void ()*, void ()*, void ()* }
%struct.pv_lock_ops = type { void (%struct.qspinlock*, i32)*, %struct.paravirt_callee_save, void (i8*, i8)*, void (i32)*, %struct.paravirt_callee_save }
%struct.qspinlock = type opaque
%struct.dmi_system_id = type { {}*, i8*, [4 x %struct.dmi_strmatch], i8* }
%struct.dmi_strmatch = type { i8, [79 x i8] }
%struct.resource = type { i64, i64, i8*, i64, i64, %struct.resource*, %struct.resource*, %struct.resource* }
%struct.acpi_ec_query_handler = type { %struct.list_head, i32 (i8*)*, i8*, i8*, i8, %struct.kref }
%struct.acpi_object_list = type { i32, %union.acpi_object* }
%struct.acpi_table_ecdt = type <{ %struct.acpi_table_header, %struct.acpi_generic_address, %struct.acpi_generic_address, i32, i8, [1 x i8] }>
%struct.acpi_table_header = type { [4 x i8], i32, i8, i8, [6 x i8], [8 x i8], i32, [4 x i8], i32 }
%struct.acpi_generic_address = type <{ i8, i8, i8, i8, i64 }>
%struct.acpi_ec_query = type { %struct.transaction, %struct.work_struct, %struct.acpi_ec_query_handler* }
%struct.acpi_buffer = type { i64, i8* }
%struct.acpi_resource = type { i32, i32, %union.acpi_resource_data }
%union.acpi_resource_data = type { %struct.acpi_resource_vendor_typed, [40 x i8] }
%struct.acpi_resource_vendor_typed = type { i16, i8, [16 x i8], [1 x i8] }
%struct.acpi_resource_io = type <{ i8, i8, i8, i16, i16 }>

@__param_str_ec_delay = internal constant [14 x i8] c"acpi.ec_delay\00", align 1, !dbg !0
@param_ops_uint = external dso_local constant %struct.kernel_param_ops, align 8
@ec_delay = internal global i32 500, section ".data..read_mostly", align 4, !dbg !5522
@__param_ec_delay = internal constant %struct.kernel_param { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @__param_str_ec_delay, i32 0, i32 0), %struct.module* null, %struct.kernel_param_ops* @param_ops_uint, i16 420, i8 -1, i8 0, %union.anon { i8* bitcast (i32* @ec_delay to i8*) } }, section "__param", align 8, !dbg !5378
@__UNIQUE_ID_ec_delaytype293 = internal constant [28 x i8] c"acpi.parmtype=ec_delay:uint\00", section ".modinfo", align 1, !dbg !5429
@__UNIQUE_ID_ec_delay294 = internal constant [68 x i8] c"acpi.parm=ec_delay:Timeout(ms) waited until an EC command completes\00", section ".modinfo", align 1, !dbg !5434
@__param_str_ec_max_queries = internal constant [20 x i8] c"acpi.ec_max_queries\00", align 16, !dbg !5524
@ec_max_queries = internal global i32 16, section ".data..read_mostly", align 4, !dbg !5527
@__param_ec_max_queries = internal constant %struct.kernel_param { i8* getelementptr inbounds ([20 x i8], [20 x i8]* @__param_str_ec_max_queries, i32 0, i32 0), %struct.module* null, %struct.kernel_param_ops* @param_ops_uint, i16 420, i8 -1, i8 0, %union.anon { i8* bitcast (i32* @ec_max_queries to i8*) } }, section "__param", align 8, !dbg !5439
@__UNIQUE_ID_ec_max_queriestype295 = internal constant [34 x i8] c"acpi.parmtype=ec_max_queries:uint\00", section ".modinfo", align 1, !dbg !5441
@__UNIQUE_ID_ec_max_queries296 = internal constant [59 x i8] c"acpi.parm=ec_max_queries:Maximum parallel _Qxx evaluations\00", section ".modinfo", align 1, !dbg !5446
@__param_str_ec_busy_polling = internal constant [21 x i8] c"acpi.ec_busy_polling\00", align 16, !dbg !5529
@param_ops_bool = external dso_local constant %struct.kernel_param_ops, align 8
@ec_busy_polling = internal global i8 0, section ".data..read_mostly", align 1, !dbg !5510
@__param_ec_busy_polling = internal constant %struct.kernel_param { i8* getelementptr inbounds ([21 x i8], [21 x i8]* @__param_str_ec_busy_polling, i32 0, i32 0), %struct.module* null, %struct.kernel_param_ops* @param_ops_bool, i16 420, i8 -1, i8 0, %union.anon { i8* @ec_busy_polling } }, section "__param", align 8, !dbg !5451
@__UNIQUE_ID_ec_busy_pollingtype297 = internal constant [35 x i8] c"acpi.parmtype=ec_busy_polling:bool\00", section ".modinfo", align 1, !dbg !5453
@__UNIQUE_ID_ec_busy_polling298 = internal constant [69 x i8] c"acpi.parm=ec_busy_polling:Use busy polling to advance EC transaction\00", section ".modinfo", align 1, !dbg !5458
@__param_str_ec_polling_guard = internal constant [22 x i8] c"acpi.ec_polling_guard\00", align 16, !dbg !5534
@ec_polling_guard = internal global i32 550, section ".data..read_mostly", align 4, !dbg !5537
@__param_ec_polling_guard = internal constant %struct.kernel_param { i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__param_str_ec_polling_guard, i32 0, i32 0), %struct.module* null, %struct.kernel_param_ops* @param_ops_uint, i16 420, i8 -1, i8 0, %union.anon { i8* bitcast (i32* @ec_polling_guard to i8*) } }, section "__param", align 8, !dbg !5463
@__UNIQUE_ID_ec_polling_guardtype299 = internal constant [36 x i8] c"acpi.parmtype=ec_polling_guard:uint\00", section ".modinfo", align 1, !dbg !5465
@__UNIQUE_ID_ec_polling_guard300 = internal constant [79 x i8] c"acpi.parm=ec_polling_guard:Guard time(us) between EC accesses in polling modes\00", section ".modinfo", align 1, !dbg !5470
@__param_str_ec_storm_threshold = internal constant [24 x i8] c"acpi.ec_storm_threshold\00", align 16, !dbg !5539
@ec_storm_threshold = internal global i32 8, section ".data..read_mostly", align 4, !dbg !5542
@__param_ec_storm_threshold = internal constant %struct.kernel_param { i8* getelementptr inbounds ([24 x i8], [24 x i8]* @__param_str_ec_storm_threshold, i32 0, i32 0), %struct.module* null, %struct.kernel_param_ops* @param_ops_uint, i16 420, i8 -1, i8 0, %union.anon { i8* bitcast (i32* @ec_storm_threshold to i8*) } }, section "__param", align 8, !dbg !5475
@__UNIQUE_ID_ec_storm_thresholdtype301 = internal constant [38 x i8] c"acpi.parmtype=ec_storm_threshold:uint\00", section ".modinfo", align 1, !dbg !5477
@__UNIQUE_ID_ec_storm_threshold302 = internal constant [81 x i8] c"acpi.parm=ec_storm_threshold:Maxim false GPE numbers not considered as GPE storm\00", section ".modinfo", align 1, !dbg !5482
@__param_str_ec_freeze_events = internal constant [22 x i8] c"acpi.ec_freeze_events\00", align 16, !dbg !5544
@ec_freeze_events = internal global i8 0, section ".data..read_mostly", align 1, !dbg !5546
@__param_ec_freeze_events = internal constant %struct.kernel_param { i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__param_str_ec_freeze_events, i32 0, i32 0), %struct.module* null, %struct.kernel_param_ops* @param_ops_bool, i16 420, i8 -1, i8 0, %union.anon { i8* @ec_freeze_events } }, section "__param", align 8, !dbg !5487
@__UNIQUE_ID_ec_freeze_eventstype303 = internal constant [36 x i8] c"acpi.parmtype=ec_freeze_events:bool\00", section ".modinfo", align 1, !dbg !5489
@__UNIQUE_ID_ec_freeze_events304 = internal constant [74 x i8] c"acpi.parm=ec_freeze_events:Disabling event handling during suspend/resume\00", section ".modinfo", align 1, !dbg !5491
@__param_str_ec_no_wakeup = internal constant [18 x i8] c"acpi.ec_no_wakeup\00", align 16, !dbg !5548
@ec_no_wakeup = internal global i8 0, section ".data..read_mostly", align 1, !dbg !5512
@__param_ec_no_wakeup = internal constant %struct.kernel_param { i8* getelementptr inbounds ([18 x i8], [18 x i8]* @__param_str_ec_no_wakeup, i32 0, i32 0), %struct.module* null, %struct.kernel_param_ops* @param_ops_bool, i16 420, i8 -1, i8 0, %union.anon { i8* @ec_no_wakeup } }, section "__param", align 8, !dbg !5496
@__UNIQUE_ID_ec_no_wakeuptype305 = internal constant [32 x i8] c"acpi.parmtype=ec_no_wakeup:bool\00", section ".modinfo", align 1, !dbg !5498
@__UNIQUE_ID_ec_no_wakeup306 = internal constant [59 x i8] c"acpi.parm=ec_no_wakeup:Do not wake up from suspend-to-idle\00", section ".modinfo", align 1, !dbg !5501
@ec_wq = internal global %struct.workqueue_struct* null, align 8, !dbg !5518
@first_ec = dso_local global %struct.acpi_ec* null, align 8, !dbg !5514
@boot_ec = internal global %struct.acpi_ec* null, align 8, !dbg !5516
@ec_device_ids = internal constant [3 x %struct.acpi_device_id] [%struct.acpi_device_id { [9 x i8] c"PNP0C09\00\00", i64 0, i32 0, i32 0 }, %struct.acpi_device_id { [9 x i8] c"LNXEC\00\00\00\00", i64 0, i32 0, i32 0 }, %struct.acpi_device_id zeroinitializer], align 16, !dbg !5564
@.str = private unnamed_addr constant [3 x i8] c"\016\00", align 1
@.str.1 = private unnamed_addr constant [42 x i8] c"Boot DSDT EC used to handle transactions\0A\00", align 1
@.str.2 = private unnamed_addr constant [5 x i8] c"ECDT\00", align 1
@EC_FLAGS_CORRECT_ECDT = internal global i32 0, align 4, !dbg !5520
@acpi_gbl_reduced_hardware = external dso_local global i8, align 1
@boot_ec_is_ecdt = internal global i8 0, align 1, !dbg !5592
@.str.3 = private unnamed_addr constant [54 x i8] c"\016ACPI: EC: Boot ECDT EC used to handle transactions\0A\00", align 1
@__param_str_ec_event_clearing = internal constant [23 x i8] c"acpi.ec_event_clearing\00", align 16, !dbg !5594
@__param_ops_ec_event_clearing = internal constant %struct.kernel_param_ops { i32 0, i32 (i8*, %struct.kernel_param*)* @param_set_event_clearing, i32 (i8*, %struct.kernel_param*)* @param_get_event_clearing, void (i8*)* null }, align 8, !dbg !5599
@__param_ec_event_clearing = internal constant %struct.kernel_param { i8* getelementptr inbounds ([23 x i8], [23 x i8]* @__param_str_ec_event_clearing, i32 0, i32 0), %struct.module* null, %struct.kernel_param_ops* @__param_ops_ec_event_clearing, i16 420, i8 -1, i8 0, %union.anon zeroinitializer }, section "__param", align 8, !dbg !5503
@__UNIQUE_ID_ec_event_clearing326 = internal constant [60 x i8] c"acpi.parm=ec_event_clearing:Assumed SCI_EVT clearing timing\00", section ".modinfo", align 1, !dbg !5505
@acpi_ec_driver = internal global %struct.acpi_driver { [80 x i8] c"ec\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", [80 x i8] c"embedded_controller\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", %struct.acpi_device_id* getelementptr inbounds ([3 x %struct.acpi_device_id], [3 x %struct.acpi_device_id]* @ec_device_ids, i32 0, i32 0), i32 0, %struct.acpi_device_ops { i32 (%struct.acpi_device*)* @acpi_ec_add, i32 (%struct.acpi_device*)* @acpi_ec_remove, void (%struct.acpi_device*, i32)* null }, %struct.device_driver { i8* null, %struct.bus_type* null, %struct.module* null, i8* null, i8 0, i32 0, %struct.of_device_id* null, %struct.acpi_device_id* null, i32 (%struct.device*)* null, void (%struct.device*)* null, i32 (%struct.device*)* null, void (%struct.device*)* null, i32 (%struct.device*, i32)* null, i32 (%struct.device*)* null, %struct.attribute_group** null, %struct.attribute_group** null, %struct.dev_pm_ops* @acpi_ec_pm, void (%struct.device*)* null, %struct.driver_private* null }, %struct.module* null }, align 8, !dbg !5604
@ec_query_wq = internal global %struct.workqueue_struct* null, align 8, !dbg !5553
@pv_ops = external dso_local global %struct.paravirt_patch_template, align 8
@.str.4 = private unnamed_addr constant [18 x i8] c"drivers/acpi/ec.c\00", align 1
@ec_event_clearing = internal global i32 1, section ".data..read_mostly", align 4, !dbg !5555
@jiffies = external dso_local global i64, align 8
@__preempt_count = external dso_local global i32, section ".data", align 4
@.str.5 = private unnamed_addr constant [24 x i8] c"\016ACPI: EC: EC stopped\0A\00", align 1
@.str.6 = private unnamed_addr constant [27 x i8] c"\016ACPI: EC: event blocked\0A\00", align 1
@.str.7 = private unnamed_addr constant [24 x i8] c"\016ACPI: EC: EC started\0A\00", align 1
@kmalloc_caches = external dso_local global [3 x [14 x %struct.kmem_cache*]], align 16
@.str.8 = private unnamed_addr constant [21 x i8] c"include/linux/slab.h\00", align 1
@acpi_ec_alloc.__key = internal global %struct.lock_class_key zeroinitializer, align 1, !dbg !5557
@.str.9 = private unnamed_addr constant [11 x i8] c"&ec->mutex\00", align 1
@acpi_ec_alloc.__key.10 = internal global %struct.lock_class_key zeroinitializer, align 1, !dbg !5562
@.str.11 = private unnamed_addr constant [10 x i8] c"&ec->wait\00", align 1
@.str.12 = private unnamed_addr constant [5 x i8] c"_CRS\00", align 1
@EC_FLAGS_IGNORE_DSDT_GPE = internal global i32 0, align 4, !dbg !5567
@.str.13 = private unnamed_addr constant [5 x i8] c"_GPE\00", align 1
@.str.14 = private unnamed_addr constant [5 x i8] c"_GLK\00", align 1
@.str.15 = private unnamed_addr constant [47 x i8] c"\016ACPI: EC: EC_CMD/EC_SC=0x%lx, EC_DATA=0x%lx\0A\00", align 1
@.str.16 = private unnamed_addr constant [22 x i8] c"\016ACPI: EC: GPE=0x%x\0A\00", align 1
@.str.17 = private unnamed_addr constant [20 x i8] c"\016ACPI: EC: IRQ=%d\0A\00", align 1
@.str.18 = private unnamed_addr constant [31 x i8] c"\016ACPI: EC: interrupt blocked\0A\00", align 1
@__const.acpi_ec_burst_disable.t = private unnamed_addr constant %struct.transaction { i8* null, i8* null, i16 0, i8 -125, i8 0, i8 0, i8 0, i8 0, i8 0 }, align 8
@.str.19 = private unnamed_addr constant [5 x i8] c"_Q%x\00", align 1
@.str.20 = private unnamed_addr constant [8 x i8] c"ACPI EC\00", align 1
@.str.21 = private unnamed_addr constant [33 x i8] c"\016ACPI: EC: interrupt unblocked\0A\00", align 1
@EC_FLAGS_CLEAR_ON_RESUME = internal global i32 0, align 4, !dbg !5569
@.str.22 = private unnamed_addr constant [29 x i8] c"\016ACPI: EC: event unblocked\0A\00", align 1
@.str.23 = private unnamed_addr constant [60 x i8] c"\014ACPI: EC: Warning: Maximum of %d stale EC events cleared\0A\00", align 1
@.str.24 = private unnamed_addr constant [40 x i8] c"\016ACPI: EC: %d stale EC events cleared\0A\00", align 1
@.str.25 = private unnamed_addr constant [12 x i8] c"MSI MS-171F\00", align 1
@.str.26 = private unnamed_addr constant [13 x i8] c"ASUS FX502VD\00", align 1
@.str.27 = private unnamed_addr constant [13 x i8] c"ASUS FX502VE\00", align 1
@.str.28 = private unnamed_addr constant [14 x i8] c"ASUS GL702VMK\00", align 1
@.str.29 = private unnamed_addr constant [13 x i8] c"ASUS X550VXK\00", align 1
@.str.30 = private unnamed_addr constant [12 x i8] c"ASUS X580VD\00", align 1
@.str.31 = private unnamed_addr constant [17 x i8] c"Samsung hardware\00", align 1
@ec_dmi_table = internal constant [8 x { i32 (%struct.dmi_system_id*)*, i8*, [4 x %struct.dmi_strmatch], i8* }] [{ i32 (%struct.dmi_system_id*)*, i8*, [4 x %struct.dmi_strmatch], i8* } { i32 (%struct.dmi_system_id*)* @ec_correct_ecdt, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.25, i32 0, i32 0), [4 x %struct.dmi_strmatch] [%struct.dmi_strmatch { i8 6, [79 x i8] c"Micro-Star\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00" }, %struct.dmi_strmatch { i8 7, [79 x i8] c"MS-171F\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00" }, %struct.dmi_strmatch zeroinitializer, %struct.dmi_strmatch zeroinitializer], i8* null }, { i32 (%struct.dmi_system_id*)*, i8*, [4 x %struct.dmi_strmatch], i8* } { i32 (%struct.dmi_system_id*)* @ec_honor_ecdt_gpe, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.26, i32 0, i32 0), [4 x %struct.dmi_strmatch] [%struct.dmi_strmatch { i8 6, [79 x i8] c"ASUSTeK COMPUTER INC.\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00" }, %struct.dmi_strmatch { i8 7, [79 x i8] c"FX502VD\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00" }, %struct.dmi_strmatch zeroinitializer, %struct.dmi_strmatch zeroinitializer], i8* null }, { i32 (%struct.dmi_system_id*)*, i8*, [4 x %struct.dmi_strmatch], i8* } { i32 (%struct.dmi_system_id*)* @ec_honor_ecdt_gpe, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.27, i32 0, i32 0), [4 x %struct.dmi_strmatch] [%struct.dmi_strmatch { i8 6, [79 x i8] c"ASUSTeK COMPUTER INC.\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00" }, %struct.dmi_strmatch { i8 7, [79 x i8] c"FX502VE\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00" }, %struct.dmi_strmatch zeroinitializer, %struct.dmi_strmatch zeroinitializer], i8* null }, { i32 (%struct.dmi_system_id*)*, i8*, [4 x %struct.dmi_strmatch], i8* } { i32 (%struct.dmi_system_id*)* @ec_honor_ecdt_gpe, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.28, i32 0, i32 0), [4 x %struct.dmi_strmatch] [%struct.dmi_strmatch { i8 6, [79 x i8] c"ASUSTeK COMPUTER INC.\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00" }, %struct.dmi_strmatch { i8 7, [79 x i8] c"GL702VMK\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00" }, %struct.dmi_strmatch zeroinitializer, %struct.dmi_strmatch zeroinitializer], i8* null }, { i32 (%struct.dmi_system_id*)*, i8*, [4 x %struct.dmi_strmatch], i8* } { i32 (%struct.dmi_system_id*)* @ec_honor_ecdt_gpe, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.29, i32 0, i32 0), [4 x %struct.dmi_strmatch] [%struct.dmi_strmatch { i8 6, [79 x i8] c"ASUSTeK COMPUTER INC.\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00" }, %struct.dmi_strmatch { i8 7, [79 x i8] c"X550VXK\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00" }, %struct.dmi_strmatch zeroinitializer, %struct.dmi_strmatch zeroinitializer], i8* null }, { i32 (%struct.dmi_system_id*)*, i8*, [4 x %struct.dmi_strmatch], i8* } { i32 (%struct.dmi_system_id*)* @ec_honor_ecdt_gpe, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.30, i32 0, i32 0), [4 x %struct.dmi_strmatch] [%struct.dmi_strmatch { i8 6, [79 x i8] c"ASUSTeK COMPUTER INC.\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00" }, %struct.dmi_strmatch { i8 7, [79 x i8] c"X580VD\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00" }, %struct.dmi_strmatch zeroinitializer, %struct.dmi_strmatch zeroinitializer], i8* null }, { i32 (%struct.dmi_system_id*)*, i8*, [4 x %struct.dmi_strmatch], i8* } { i32 (%struct.dmi_system_id*)* @ec_clear_on_resume, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.31, i32 0, i32 0), [4 x %struct.dmi_strmatch] [%struct.dmi_strmatch { i8 6, [79 x i8] c"SAMSUNG ELECTRONICS CO., LTD.\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00" }, %struct.dmi_strmatch zeroinitializer, %struct.dmi_strmatch zeroinitializer, %struct.dmi_strmatch zeroinitializer], i8* null }, { i32 (%struct.dmi_system_id*)*, i8*, [4 x %struct.dmi_strmatch], i8* } zeroinitializer], section ".init.rodata", align 16, !dbg !5571
@pm_suspend_global_flags = external dso_local global i32, align 4
@.str.33 = private unnamed_addr constant [7 x i8] c"status\00", align 1
@.str.34 = private unnamed_addr constant [57 x i8] c"\016ACPI: EC: Assuming SCI_EVT clearing on EC_SC accesses\0A\00", align 1
@.str.35 = private unnamed_addr constant [6 x i8] c"query\00", align 1
@.str.36 = private unnamed_addr constant [55 x i8] c"\016ACPI: EC: Assuming SCI_EVT clearing on QR_EC writes\0A\00", align 1
@.str.37 = private unnamed_addr constant [6 x i8] c"event\00", align 1
@.str.38 = private unnamed_addr constant [54 x i8] c"\016ACPI: EC: Assuming SCI_EVT clearing on event reads\0A\00", align 1
@.str.39 = private unnamed_addr constant [8 x i8] c"status\0A\00", align 1
@.str.40 = private unnamed_addr constant [7 x i8] c"query\0A\00", align 1
@.str.41 = private unnamed_addr constant [7 x i8] c"event\0A\00", align 1
@.str.42 = private unnamed_addr constant [9 x i8] c"invalid\0A\00", align 1
@.str.43 = private unnamed_addr constant [4 x i8] c"kec\00", align 1
@.str.44 = private unnamed_addr constant [10 x i8] c"kec_query\00", align 1
@.str.45 = private unnamed_addr constant [23 x i8] c"Thinkpad X1 Carbon 6th\00", align 1
@.str.46 = private unnamed_addr constant [23 x i8] c"ThinkPad X1 Carbon 6th\00", align 1
@.str.47 = private unnamed_addr constant [21 x i8] c"ThinkPad X1 Yoga 3rd\00", align 1
@acpi_ec_no_wakeup = internal constant [4 x { i32 (%struct.dmi_system_id*)*, i8*, [4 x %struct.dmi_strmatch], i8* }] [{ i32 (%struct.dmi_system_id*)*, i8*, [4 x %struct.dmi_strmatch], i8* } { i32 (%struct.dmi_system_id*)* null, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.45, i32 0, i32 0), [4 x %struct.dmi_strmatch] [%struct.dmi_strmatch { i8 6, [79 x i8] c"LENOVO\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00" }, %struct.dmi_strmatch { i8 12, [79 x i8] c"Thinkpad X1 Carbon 6th\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00" }, %struct.dmi_strmatch zeroinitializer, %struct.dmi_strmatch zeroinitializer], i8* null }, { i32 (%struct.dmi_system_id*)*, i8*, [4 x %struct.dmi_strmatch], i8* } { i32 (%struct.dmi_system_id*)* null, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.46, i32 0, i32 0), [4 x %struct.dmi_strmatch] [%struct.dmi_strmatch { i8 6, [79 x i8] c"LENOVO\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00" }, %struct.dmi_strmatch { i8 12, [79 x i8] c"ThinkPad X1 Carbon 6th\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00" }, %struct.dmi_strmatch zeroinitializer, %struct.dmi_strmatch zeroinitializer], i8* null }, { i32 (%struct.dmi_system_id*)*, i8*, [4 x %struct.dmi_strmatch], i8* } { i32 (%struct.dmi_system_id*)* null, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.47, i32 0, i32 0), [4 x %struct.dmi_strmatch] [%struct.dmi_strmatch { i8 6, [79 x i8] c"LENOVO\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00" }, %struct.dmi_strmatch { i8 12, [79 x i8] c"ThinkPad X1 Yoga 3rd\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00" }, %struct.dmi_strmatch zeroinitializer, %struct.dmi_strmatch zeroinitializer], i8* null }, { i32 (%struct.dmi_system_id*)*, i8*, [4 x %struct.dmi_strmatch], i8* } zeroinitializer], align 16, !dbg !5601
@acpi_ec_pm = internal constant %struct.dev_pm_ops { i32 (%struct.device*)* null, void (%struct.device*)* null, i32 (%struct.device*)* @acpi_ec_suspend, i32 (%struct.device*)* @acpi_ec_resume, i32 (%struct.device*)* @acpi_ec_suspend, i32 (%struct.device*)* @acpi_ec_resume, i32 (%struct.device*)* @acpi_ec_suspend, i32 (%struct.device*)* @acpi_ec_resume, i32 (%struct.device*)* null, i32 (%struct.device*)* null, i32 (%struct.device*)* null, i32 (%struct.device*)* null, i32 (%struct.device*)* null, i32 (%struct.device*)* null, i32 (%struct.device*)* @acpi_ec_suspend_noirq, i32 (%struct.device*)* @acpi_ec_resume_noirq, i32 (%struct.device*)* @acpi_ec_suspend_noirq, i32 (%struct.device*)* @acpi_ec_resume_noirq, i32 (%struct.device*)* @acpi_ec_suspend_noirq, i32 (%struct.device*)* @acpi_ec_resume_noirq, i32 (%struct.device*)* null, i32 (%struct.device*)* null, i32 (%struct.device*)* null }, align 8, !dbg !5606
@.str.49 = private unnamed_addr constant [20 x i8] c"Embedded Controller\00", align 1
@.str.50 = private unnamed_addr constant [20 x i8] c"embedded_controller\00", align 1
@.str.51 = private unnamed_addr constant [6 x i8] c"LNXEC\00", align 1
@.str.52 = private unnamed_addr constant [36 x i8] c"Boot %s EC initialization complete\0A\00", align 1
@.str.53 = private unnamed_addr constant [5 x i8] c"DSDT\00", align 1
@.str.54 = private unnamed_addr constant [44 x i8] c"EC: Used to handle transactions and events\0A\00", align 1
@ioport_resource = external dso_local global %struct.resource, align 8
@.str.55 = private unnamed_addr constant [8 x i8] c"EC data\00", align 1
@.str.56 = private unnamed_addr constant [40 x i8] c"Could not request EC data io port 0x%lx\00", align 1
@.str.57 = private unnamed_addr constant [7 x i8] c"EC cmd\00", align 1
@.str.58 = private unnamed_addr constant [39 x i8] c"Could not request EC cmd io port 0x%lx\00", align 1
@.str.59 = private unnamed_addr constant [44 x i8] c"\013ACPI: EC: failed to remove space handler\0A\00", align 1
@.str.60 = private unnamed_addr constant [42 x i8] c"\013ACPI: EC: failed to remove gpe handler\0A\00", align 1
@llvm.used = appending global [23 x i8*] [i8* bitcast (%struct.kernel_param* @__param_ec_delay to i8*), i8* getelementptr inbounds ([28 x i8], [28 x i8]* @__UNIQUE_ID_ec_delaytype293, i32 0, i32 0), i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__UNIQUE_ID_ec_delay294, i32 0, i32 0), i8* bitcast (%struct.kernel_param* @__param_ec_max_queries to i8*), i8* getelementptr inbounds ([34 x i8], [34 x i8]* @__UNIQUE_ID_ec_max_queriestype295, i32 0, i32 0), i8* getelementptr inbounds ([59 x i8], [59 x i8]* @__UNIQUE_ID_ec_max_queries296, i32 0, i32 0), i8* bitcast (%struct.kernel_param* @__param_ec_busy_polling to i8*), i8* getelementptr inbounds ([35 x i8], [35 x i8]* @__UNIQUE_ID_ec_busy_pollingtype297, i32 0, i32 0), i8* getelementptr inbounds ([69 x i8], [69 x i8]* @__UNIQUE_ID_ec_busy_polling298, i32 0, i32 0), i8* bitcast (%struct.kernel_param* @__param_ec_polling_guard to i8*), i8* getelementptr inbounds ([36 x i8], [36 x i8]* @__UNIQUE_ID_ec_polling_guardtype299, i32 0, i32 0), i8* getelementptr inbounds ([79 x i8], [79 x i8]* @__UNIQUE_ID_ec_polling_guard300, i32 0, i32 0), i8* bitcast (%struct.kernel_param* @__param_ec_storm_threshold to i8*), i8* getelementptr inbounds ([38 x i8], [38 x i8]* @__UNIQUE_ID_ec_storm_thresholdtype301, i32 0, i32 0), i8* getelementptr inbounds ([81 x i8], [81 x i8]* @__UNIQUE_ID_ec_storm_threshold302, i32 0, i32 0), i8* bitcast (%struct.kernel_param* @__param_ec_freeze_events to i8*), i8* getelementptr inbounds ([36 x i8], [36 x i8]* @__UNIQUE_ID_ec_freeze_eventstype303, i32 0, i32 0), i8* getelementptr inbounds ([74 x i8], [74 x i8]* @__UNIQUE_ID_ec_freeze_events304, i32 0, i32 0), i8* bitcast (%struct.kernel_param* @__param_ec_no_wakeup to i8*), i8* getelementptr inbounds ([32 x i8], [32 x i8]* @__UNIQUE_ID_ec_no_wakeuptype305, i32 0, i32 0), i8* getelementptr inbounds ([59 x i8], [59 x i8]* @__UNIQUE_ID_ec_no_wakeup306, i32 0, i32 0), i8* bitcast (%struct.kernel_param* @__param_ec_event_clearing to i8*), i8* getelementptr inbounds ([60 x i8], [60 x i8]* @__UNIQUE_ID_ec_event_clearing326, i32 0, i32 0)], section "llvm.metadata"

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @acpi_ec_flush_work() #0 !dbg !5617 {
entry:
  %0 = load %struct.workqueue_struct*, %struct.workqueue_struct** @ec_wq, align 8, !dbg !5618
  %tobool = icmp ne %struct.workqueue_struct* %0, null, !dbg !5618
  br i1 %tobool, label %if.end, label %if.then, !dbg !5620

if.then:                                          ; preds = %entry
  br label %return, !dbg !5621

if.end:                                           ; preds = %entry
  call void @__acpi_ec_flush_work() #11, !dbg !5622
  br label %return, !dbg !5623

return:                                           ; preds = %if.end, %if.then
  ret void, !dbg !5623
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @__acpi_ec_flush_work() #0 !dbg !5624 {
entry:
  %0 = load %struct.workqueue_struct*, %struct.workqueue_struct** @ec_wq, align 8, !dbg !5625
  call void @drain_workqueue(%struct.workqueue_struct* %0) #11, !dbg !5626
  %1 = load %struct.workqueue_struct*, %struct.workqueue_struct** @ec_query_wq, align 8, !dbg !5627
  call void @flush_workqueue(%struct.workqueue_struct* %1) #11, !dbg !5628
  ret void, !dbg !5629
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @ec_read(i8 zeroext %addr, i8* %val) #0 !dbg !5630 {
entry:
  %retval = alloca i32, align 4
  %addr.addr = alloca i8, align 1
  %val.addr = alloca i8*, align 8
  %err = alloca i32, align 4
  %temp_data = alloca i8, align 1
  store i8 %addr, i8* %addr.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %addr.addr, metadata !5633, metadata !DIExpression()), !dbg !5634
  store i8* %val, i8** %val.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %val.addr, metadata !5635, metadata !DIExpression()), !dbg !5636
  call void @llvm.dbg.declare(metadata i32* %err, metadata !5637, metadata !DIExpression()), !dbg !5638
  call void @llvm.dbg.declare(metadata i8* %temp_data, metadata !5639, metadata !DIExpression()), !dbg !5640
  %0 = load %struct.acpi_ec*, %struct.acpi_ec** @first_ec, align 8, !dbg !5641
  %tobool = icmp ne %struct.acpi_ec* %0, null, !dbg !5641
  br i1 %tobool, label %if.end, label %if.then, !dbg !5643

if.then:                                          ; preds = %entry
  store i32 -19, i32* %retval, align 4, !dbg !5644
  br label %return, !dbg !5644

if.end:                                           ; preds = %entry
  %1 = load %struct.acpi_ec*, %struct.acpi_ec** @first_ec, align 8, !dbg !5645
  %2 = load i8, i8* %addr.addr, align 1, !dbg !5646
  %call = call i32 @acpi_ec_read(%struct.acpi_ec* %1, i8 zeroext %2, i8* %temp_data) #11, !dbg !5647
  store i32 %call, i32* %err, align 4, !dbg !5648
  %3 = load i32, i32* %err, align 4, !dbg !5649
  %tobool1 = icmp ne i32 %3, 0, !dbg !5649
  br i1 %tobool1, label %if.end3, label %if.then2, !dbg !5651

if.then2:                                         ; preds = %if.end
  %4 = load i8, i8* %temp_data, align 1, !dbg !5652
  %5 = load i8*, i8** %val.addr, align 8, !dbg !5654
  store i8 %4, i8* %5, align 1, !dbg !5655
  store i32 0, i32* %retval, align 4, !dbg !5656
  br label %return, !dbg !5656

if.end3:                                          ; preds = %if.end
  %6 = load i32, i32* %err, align 4, !dbg !5657
  store i32 %6, i32* %retval, align 4, !dbg !5658
  br label %return, !dbg !5658

return:                                           ; preds = %if.end3, %if.then2, %if.then
  %7 = load i32, i32* %retval, align 4, !dbg !5659
  ret i32 %7, !dbg !5659
}

; Function Attrs: nounwind readnone speculatable willreturn
declare void @llvm.dbg.declare(metadata, metadata, metadata) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @acpi_ec_read(%struct.acpi_ec* %ec, i8 zeroext %address, i8* %data) #0 !dbg !5660 {
entry:
  %ec.addr = alloca %struct.acpi_ec*, align 8
  %address.addr = alloca i8, align 1
  %data.addr = alloca i8*, align 8
  %result = alloca i32, align 4
  %d = alloca i8, align 1
  %t = alloca %struct.transaction, align 8
  store %struct.acpi_ec* %ec, %struct.acpi_ec** %ec.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.acpi_ec** %ec.addr, metadata !5663, metadata !DIExpression()), !dbg !5664
  store i8 %address, i8* %address.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %address.addr, metadata !5665, metadata !DIExpression()), !dbg !5666
  store i8* %data, i8** %data.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %data.addr, metadata !5667, metadata !DIExpression()), !dbg !5668
  call void @llvm.dbg.declare(metadata i32* %result, metadata !5669, metadata !DIExpression()), !dbg !5670
  call void @llvm.dbg.declare(metadata i8* %d, metadata !5671, metadata !DIExpression()), !dbg !5672
  call void @llvm.dbg.declare(metadata %struct.transaction* %t, metadata !5673, metadata !DIExpression()), !dbg !5674
  %wdata = getelementptr inbounds %struct.transaction, %struct.transaction* %t, i32 0, i32 0, !dbg !5675
  store i8* %address.addr, i8** %wdata, align 8, !dbg !5675
  %rdata = getelementptr inbounds %struct.transaction, %struct.transaction* %t, i32 0, i32 1, !dbg !5675
  store i8* %d, i8** %rdata, align 8, !dbg !5675
  %irq_count = getelementptr inbounds %struct.transaction, %struct.transaction* %t, i32 0, i32 2, !dbg !5675
  store i16 0, i16* %irq_count, align 8, !dbg !5675
  %command = getelementptr inbounds %struct.transaction, %struct.transaction* %t, i32 0, i32 3, !dbg !5675
  store i8 -128, i8* %command, align 2, !dbg !5675
  %wi = getelementptr inbounds %struct.transaction, %struct.transaction* %t, i32 0, i32 4, !dbg !5675
  store i8 0, i8* %wi, align 1, !dbg !5675
  %ri = getelementptr inbounds %struct.transaction, %struct.transaction* %t, i32 0, i32 5, !dbg !5675
  store i8 0, i8* %ri, align 4, !dbg !5675
  %wlen = getelementptr inbounds %struct.transaction, %struct.transaction* %t, i32 0, i32 6, !dbg !5675
  store i8 1, i8* %wlen, align 1, !dbg !5675
  %rlen = getelementptr inbounds %struct.transaction, %struct.transaction* %t, i32 0, i32 7, !dbg !5675
  store i8 1, i8* %rlen, align 2, !dbg !5675
  %flags = getelementptr inbounds %struct.transaction, %struct.transaction* %t, i32 0, i32 8, !dbg !5675
  store i8 0, i8* %flags, align 1, !dbg !5675
  %0 = load %struct.acpi_ec*, %struct.acpi_ec** %ec.addr, align 8, !dbg !5676
  %call = call i32 @acpi_ec_transaction(%struct.acpi_ec* %0, %struct.transaction* %t) #11, !dbg !5677
  store i32 %call, i32* %result, align 4, !dbg !5678
  %1 = load i8, i8* %d, align 1, !dbg !5679
  %2 = load i8*, i8** %data.addr, align 8, !dbg !5680
  store i8 %1, i8* %2, align 1, !dbg !5681
  %3 = load i32, i32* %result, align 4, !dbg !5682
  ret i32 %3, !dbg !5683
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @ec_write(i8 zeroext %addr, i8 zeroext %val) #0 !dbg !5684 {
entry:
  %retval = alloca i32, align 4
  %addr.addr = alloca i8, align 1
  %val.addr = alloca i8, align 1
  %err = alloca i32, align 4
  store i8 %addr, i8* %addr.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %addr.addr, metadata !5687, metadata !DIExpression()), !dbg !5688
  store i8 %val, i8* %val.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %val.addr, metadata !5689, metadata !DIExpression()), !dbg !5690
  call void @llvm.dbg.declare(metadata i32* %err, metadata !5691, metadata !DIExpression()), !dbg !5692
  %0 = load %struct.acpi_ec*, %struct.acpi_ec** @first_ec, align 8, !dbg !5693
  %tobool = icmp ne %struct.acpi_ec* %0, null, !dbg !5693
  br i1 %tobool, label %if.end, label %if.then, !dbg !5695

if.then:                                          ; preds = %entry
  store i32 -19, i32* %retval, align 4, !dbg !5696
  br label %return, !dbg !5696

if.end:                                           ; preds = %entry
  %1 = load %struct.acpi_ec*, %struct.acpi_ec** @first_ec, align 8, !dbg !5697
  %2 = load i8, i8* %addr.addr, align 1, !dbg !5698
  %3 = load i8, i8* %val.addr, align 1, !dbg !5699
  %call = call i32 @acpi_ec_write(%struct.acpi_ec* %1, i8 zeroext %2, i8 zeroext %3) #11, !dbg !5700
  store i32 %call, i32* %err, align 4, !dbg !5701
  %4 = load i32, i32* %err, align 4, !dbg !5702
  store i32 %4, i32* %retval, align 4, !dbg !5703
  br label %return, !dbg !5703

return:                                           ; preds = %if.end, %if.then
  %5 = load i32, i32* %retval, align 4, !dbg !5704
  ret i32 %5, !dbg !5704
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @acpi_ec_write(%struct.acpi_ec* %ec, i8 zeroext %address, i8 zeroext %data) #0 !dbg !5705 {
entry:
  %ec.addr = alloca %struct.acpi_ec*, align 8
  %address.addr = alloca i8, align 1
  %data.addr = alloca i8, align 1
  %wdata = alloca [2 x i8], align 1
  %t = alloca %struct.transaction, align 8
  store %struct.acpi_ec* %ec, %struct.acpi_ec** %ec.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.acpi_ec** %ec.addr, metadata !5708, metadata !DIExpression()), !dbg !5709
  store i8 %address, i8* %address.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %address.addr, metadata !5710, metadata !DIExpression()), !dbg !5711
  store i8 %data, i8* %data.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %data.addr, metadata !5712, metadata !DIExpression()), !dbg !5713
  call void @llvm.dbg.declare(metadata [2 x i8]* %wdata, metadata !5714, metadata !DIExpression()), !dbg !5716
  %arrayinit.begin = getelementptr inbounds [2 x i8], [2 x i8]* %wdata, i64 0, i64 0, !dbg !5717
  %0 = load i8, i8* %address.addr, align 1, !dbg !5718
  store i8 %0, i8* %arrayinit.begin, align 1, !dbg !5717
  %arrayinit.element = getelementptr inbounds i8, i8* %arrayinit.begin, i64 1, !dbg !5717
  %1 = load i8, i8* %data.addr, align 1, !dbg !5719
  store i8 %1, i8* %arrayinit.element, align 1, !dbg !5717
  call void @llvm.dbg.declare(metadata %struct.transaction* %t, metadata !5720, metadata !DIExpression()), !dbg !5721
  %wdata1 = getelementptr inbounds %struct.transaction, %struct.transaction* %t, i32 0, i32 0, !dbg !5722
  %arraydecay = getelementptr inbounds [2 x i8], [2 x i8]* %wdata, i64 0, i64 0, !dbg !5723
  store i8* %arraydecay, i8** %wdata1, align 8, !dbg !5722
  %rdata = getelementptr inbounds %struct.transaction, %struct.transaction* %t, i32 0, i32 1, !dbg !5722
  store i8* null, i8** %rdata, align 8, !dbg !5722
  %irq_count = getelementptr inbounds %struct.transaction, %struct.transaction* %t, i32 0, i32 2, !dbg !5722
  store i16 0, i16* %irq_count, align 8, !dbg !5722
  %command = getelementptr inbounds %struct.transaction, %struct.transaction* %t, i32 0, i32 3, !dbg !5722
  store i8 -127, i8* %command, align 2, !dbg !5722
  %wi = getelementptr inbounds %struct.transaction, %struct.transaction* %t, i32 0, i32 4, !dbg !5722
  store i8 0, i8* %wi, align 1, !dbg !5722
  %ri = getelementptr inbounds %struct.transaction, %struct.transaction* %t, i32 0, i32 5, !dbg !5722
  store i8 0, i8* %ri, align 4, !dbg !5722
  %wlen = getelementptr inbounds %struct.transaction, %struct.transaction* %t, i32 0, i32 6, !dbg !5722
  store i8 2, i8* %wlen, align 1, !dbg !5722
  %rlen = getelementptr inbounds %struct.transaction, %struct.transaction* %t, i32 0, i32 7, !dbg !5722
  store i8 0, i8* %rlen, align 2, !dbg !5722
  %flags = getelementptr inbounds %struct.transaction, %struct.transaction* %t, i32 0, i32 8, !dbg !5722
  store i8 0, i8* %flags, align 1, !dbg !5722
  %2 = load %struct.acpi_ec*, %struct.acpi_ec** %ec.addr, align 8, !dbg !5724
  %call = call i32 @acpi_ec_transaction(%struct.acpi_ec* %2, %struct.transaction* %t) #11, !dbg !5725
  ret i32 %call, !dbg !5726
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @ec_transaction(i8 zeroext %command, i8* %wdata, i32 %wdata_len, i8* %rdata, i32 %rdata_len) #0 !dbg !5727 {
entry:
  %retval = alloca i32, align 4
  %command.addr = alloca i8, align 1
  %wdata.addr = alloca i8*, align 8
  %wdata_len.addr = alloca i32, align 4
  %rdata.addr = alloca i8*, align 8
  %rdata_len.addr = alloca i32, align 4
  %t = alloca %struct.transaction, align 8
  store i8 %command, i8* %command.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %command.addr, metadata !5730, metadata !DIExpression()), !dbg !5731
  store i8* %wdata, i8** %wdata.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %wdata.addr, metadata !5732, metadata !DIExpression()), !dbg !5733
  store i32 %wdata_len, i32* %wdata_len.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %wdata_len.addr, metadata !5734, metadata !DIExpression()), !dbg !5735
  store i8* %rdata, i8** %rdata.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %rdata.addr, metadata !5736, metadata !DIExpression()), !dbg !5737
  store i32 %rdata_len, i32* %rdata_len.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %rdata_len.addr, metadata !5738, metadata !DIExpression()), !dbg !5739
  call void @llvm.dbg.declare(metadata %struct.transaction* %t, metadata !5740, metadata !DIExpression()), !dbg !5741
  %wdata1 = getelementptr inbounds %struct.transaction, %struct.transaction* %t, i32 0, i32 0, !dbg !5742
  %0 = load i8*, i8** %wdata.addr, align 8, !dbg !5743
  store i8* %0, i8** %wdata1, align 8, !dbg !5742
  %rdata2 = getelementptr inbounds %struct.transaction, %struct.transaction* %t, i32 0, i32 1, !dbg !5742
  %1 = load i8*, i8** %rdata.addr, align 8, !dbg !5744
  store i8* %1, i8** %rdata2, align 8, !dbg !5742
  %irq_count = getelementptr inbounds %struct.transaction, %struct.transaction* %t, i32 0, i32 2, !dbg !5742
  store i16 0, i16* %irq_count, align 8, !dbg !5742
  %command3 = getelementptr inbounds %struct.transaction, %struct.transaction* %t, i32 0, i32 3, !dbg !5742
  %2 = load i8, i8* %command.addr, align 1, !dbg !5745
  store i8 %2, i8* %command3, align 2, !dbg !5742
  %wi = getelementptr inbounds %struct.transaction, %struct.transaction* %t, i32 0, i32 4, !dbg !5742
  store i8 0, i8* %wi, align 1, !dbg !5742
  %ri = getelementptr inbounds %struct.transaction, %struct.transaction* %t, i32 0, i32 5, !dbg !5742
  store i8 0, i8* %ri, align 4, !dbg !5742
  %wlen = getelementptr inbounds %struct.transaction, %struct.transaction* %t, i32 0, i32 6, !dbg !5742
  %3 = load i32, i32* %wdata_len.addr, align 4, !dbg !5746
  %conv = trunc i32 %3 to i8, !dbg !5746
  store i8 %conv, i8* %wlen, align 1, !dbg !5742
  %rlen = getelementptr inbounds %struct.transaction, %struct.transaction* %t, i32 0, i32 7, !dbg !5742
  %4 = load i32, i32* %rdata_len.addr, align 4, !dbg !5747
  %conv4 = trunc i32 %4 to i8, !dbg !5747
  store i8 %conv4, i8* %rlen, align 2, !dbg !5742
  %flags = getelementptr inbounds %struct.transaction, %struct.transaction* %t, i32 0, i32 8, !dbg !5742
  store i8 0, i8* %flags, align 1, !dbg !5742
  %5 = load %struct.acpi_ec*, %struct.acpi_ec** @first_ec, align 8, !dbg !5748
  %tobool = icmp ne %struct.acpi_ec* %5, null, !dbg !5748
  br i1 %tobool, label %if.end, label %if.then, !dbg !5750

if.then:                                          ; preds = %entry
  store i32 -19, i32* %retval, align 4, !dbg !5751
  br label %return, !dbg !5751

if.end:                                           ; preds = %entry
  %6 = load %struct.acpi_ec*, %struct.acpi_ec** @first_ec, align 8, !dbg !5752
  %call = call i32 @acpi_ec_transaction(%struct.acpi_ec* %6, %struct.transaction* %t) #11, !dbg !5753
  store i32 %call, i32* %retval, align 4, !dbg !5754
  br label %return, !dbg !5754

return:                                           ; preds = %if.end, %if.then
  %7 = load i32, i32* %retval, align 4, !dbg !5755
  ret i32 %7, !dbg !5755
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @acpi_ec_transaction(%struct.acpi_ec* %ec, %struct.transaction* %t) #0 !dbg !5756 {
entry:
  %retval = alloca i32, align 4
  %ec.addr = alloca %struct.acpi_ec*, align 8
  %t.addr = alloca %struct.transaction*, align 8
  %status = alloca i32, align 4
  %glk = alloca i32, align 4
  store %struct.acpi_ec* %ec, %struct.acpi_ec** %ec.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.acpi_ec** %ec.addr, metadata !5759, metadata !DIExpression()), !dbg !5760
  store %struct.transaction* %t, %struct.transaction** %t.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.transaction** %t.addr, metadata !5761, metadata !DIExpression()), !dbg !5762
  call void @llvm.dbg.declare(metadata i32* %status, metadata !5763, metadata !DIExpression()), !dbg !5764
  call void @llvm.dbg.declare(metadata i32* %glk, metadata !5765, metadata !DIExpression()), !dbg !5766
  %0 = load %struct.acpi_ec*, %struct.acpi_ec** %ec.addr, align 8, !dbg !5767
  %tobool = icmp ne %struct.acpi_ec* %0, null, !dbg !5767
  br i1 %tobool, label %lor.lhs.false, label %if.then, !dbg !5769

lor.lhs.false:                                    ; preds = %entry
  %1 = load %struct.transaction*, %struct.transaction** %t.addr, align 8, !dbg !5770
  %tobool1 = icmp ne %struct.transaction* %1, null, !dbg !5770
  br i1 %tobool1, label %lor.lhs.false2, label %if.then, !dbg !5771

lor.lhs.false2:                                   ; preds = %lor.lhs.false
  %2 = load %struct.transaction*, %struct.transaction** %t.addr, align 8, !dbg !5772
  %wlen = getelementptr inbounds %struct.transaction, %struct.transaction* %2, i32 0, i32 6, !dbg !5773
  %3 = load i8, i8* %wlen, align 1, !dbg !5773
  %conv = zext i8 %3 to i32, !dbg !5772
  %tobool3 = icmp ne i32 %conv, 0, !dbg !5772
  br i1 %tobool3, label %land.lhs.true, label %lor.lhs.false5, !dbg !5774

land.lhs.true:                                    ; preds = %lor.lhs.false2
  %4 = load %struct.transaction*, %struct.transaction** %t.addr, align 8, !dbg !5775
  %wdata = getelementptr inbounds %struct.transaction, %struct.transaction* %4, i32 0, i32 0, !dbg !5776
  %5 = load i8*, i8** %wdata, align 8, !dbg !5776
  %tobool4 = icmp ne i8* %5, null, !dbg !5775
  br i1 %tobool4, label %lor.lhs.false5, label %if.then, !dbg !5777

lor.lhs.false5:                                   ; preds = %land.lhs.true, %lor.lhs.false2
  %6 = load %struct.transaction*, %struct.transaction** %t.addr, align 8, !dbg !5778
  %rlen = getelementptr inbounds %struct.transaction, %struct.transaction* %6, i32 0, i32 7, !dbg !5779
  %7 = load i8, i8* %rlen, align 2, !dbg !5779
  %conv6 = zext i8 %7 to i32, !dbg !5778
  %tobool7 = icmp ne i32 %conv6, 0, !dbg !5778
  br i1 %tobool7, label %land.lhs.true8, label %if.end, !dbg !5780

land.lhs.true8:                                   ; preds = %lor.lhs.false5
  %8 = load %struct.transaction*, %struct.transaction** %t.addr, align 8, !dbg !5781
  %rdata = getelementptr inbounds %struct.transaction, %struct.transaction* %8, i32 0, i32 1, !dbg !5782
  %9 = load i8*, i8** %rdata, align 8, !dbg !5782
  %tobool9 = icmp ne i8* %9, null, !dbg !5781
  br i1 %tobool9, label %if.end, label %if.then, !dbg !5783

if.then:                                          ; preds = %land.lhs.true8, %land.lhs.true, %lor.lhs.false, %entry
  store i32 -22, i32* %retval, align 4, !dbg !5784
  br label %return, !dbg !5784

if.end:                                           ; preds = %land.lhs.true8, %lor.lhs.false5
  %10 = load %struct.transaction*, %struct.transaction** %t.addr, align 8, !dbg !5785
  %rdata10 = getelementptr inbounds %struct.transaction, %struct.transaction* %10, i32 0, i32 1, !dbg !5787
  %11 = load i8*, i8** %rdata10, align 8, !dbg !5787
  %tobool11 = icmp ne i8* %11, null, !dbg !5785
  br i1 %tobool11, label %if.then12, label %if.end16, !dbg !5788

if.then12:                                        ; preds = %if.end
  %12 = load %struct.transaction*, %struct.transaction** %t.addr, align 8, !dbg !5789
  %rdata13 = getelementptr inbounds %struct.transaction, %struct.transaction* %12, i32 0, i32 1, !dbg !5790
  %13 = load i8*, i8** %rdata13, align 8, !dbg !5790
  %14 = load %struct.transaction*, %struct.transaction** %t.addr, align 8, !dbg !5791
  %rlen14 = getelementptr inbounds %struct.transaction, %struct.transaction* %14, i32 0, i32 7, !dbg !5792
  %15 = load i8, i8* %rlen14, align 2, !dbg !5792
  %conv15 = zext i8 %15 to i64, !dbg !5791
  call void @llvm.memset.p0i8.i64(i8* align 1 %13, i8 0, i64 %conv15, i1 false), !dbg !5793
  br label %if.end16, !dbg !5793

if.end16:                                         ; preds = %if.then12, %if.end
  %16 = load %struct.acpi_ec*, %struct.acpi_ec** %ec.addr, align 8, !dbg !5794
  %mutex = getelementptr inbounds %struct.acpi_ec, %struct.acpi_ec* %16, i32 0, i32 8, !dbg !5795
  call void @mutex_lock(%struct.mutex* %mutex) #11, !dbg !5796
  %17 = load %struct.acpi_ec*, %struct.acpi_ec** %ec.addr, align 8, !dbg !5797
  %global_lock = getelementptr inbounds %struct.acpi_ec, %struct.acpi_ec* %17, i32 0, i32 5, !dbg !5799
  %18 = load i8, i8* %global_lock, align 8, !dbg !5799
  %tobool17 = trunc i8 %18 to i1, !dbg !5799
  br i1 %tobool17, label %if.then18, label %if.end22, !dbg !5800

if.then18:                                        ; preds = %if.end16
  %call = call i32 @acpi_acquire_global_lock(i16 zeroext 1000, i32* %glk) #11, !dbg !5801
  store i32 %call, i32* %status, align 4, !dbg !5803
  %19 = load i32, i32* %status, align 4, !dbg !5804
  %tobool19 = icmp ne i32 %19, 0, !dbg !5804
  br i1 %tobool19, label %if.then20, label %if.end21, !dbg !5806

if.then20:                                        ; preds = %if.then18
  store i32 -19, i32* %status, align 4, !dbg !5807
  br label %unlock, !dbg !5809

if.end21:                                         ; preds = %if.then18
  br label %if.end22, !dbg !5810

if.end22:                                         ; preds = %if.end21, %if.end16
  %20 = load %struct.acpi_ec*, %struct.acpi_ec** %ec.addr, align 8, !dbg !5811
  %21 = load %struct.transaction*, %struct.transaction** %t.addr, align 8, !dbg !5812
  %call23 = call i32 @acpi_ec_transaction_unlocked(%struct.acpi_ec* %20, %struct.transaction* %21) #11, !dbg !5813
  store i32 %call23, i32* %status, align 4, !dbg !5814
  %22 = load %struct.acpi_ec*, %struct.acpi_ec** %ec.addr, align 8, !dbg !5815
  %global_lock24 = getelementptr inbounds %struct.acpi_ec, %struct.acpi_ec* %22, i32 0, i32 5, !dbg !5817
  %23 = load i8, i8* %global_lock24, align 8, !dbg !5817
  %tobool25 = trunc i8 %23 to i1, !dbg !5817
  br i1 %tobool25, label %if.then26, label %if.end28, !dbg !5818

if.then26:                                        ; preds = %if.end22
  %24 = load i32, i32* %glk, align 4, !dbg !5819
  %call27 = call i32 @acpi_release_global_lock(i32 %24) #11, !dbg !5820
  br label %if.end28, !dbg !5820

if.end28:                                         ; preds = %if.then26, %if.end22
  br label %unlock, !dbg !5817

unlock:                                           ; preds = %if.end28, %if.then20
  call void @llvm.dbg.label(metadata !5821), !dbg !5822
  %25 = load %struct.acpi_ec*, %struct.acpi_ec** %ec.addr, align 8, !dbg !5823
  %mutex29 = getelementptr inbounds %struct.acpi_ec, %struct.acpi_ec* %25, i32 0, i32 8, !dbg !5824
  call void @mutex_unlock(%struct.mutex* %mutex29) #11, !dbg !5825
  %26 = load i32, i32* %status, align 4, !dbg !5826
  store i32 %26, i32* %retval, align 4, !dbg !5827
  br label %return, !dbg !5827

return:                                           ; preds = %unlock, %if.then
  %27 = load i32, i32* %retval, align 4, !dbg !5828
  ret i32 %27, !dbg !5828
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i8* @ec_get_handle() #0 !dbg !5829 {
entry:
  %retval = alloca i8*, align 8
  %0 = load %struct.acpi_ec*, %struct.acpi_ec** @first_ec, align 8, !dbg !5832
  %tobool = icmp ne %struct.acpi_ec* %0, null, !dbg !5832
  br i1 %tobool, label %if.end, label %if.then, !dbg !5834

if.then:                                          ; preds = %entry
  store i8* null, i8** %retval, align 8, !dbg !5835
  br label %return, !dbg !5835

if.end:                                           ; preds = %entry
  %1 = load %struct.acpi_ec*, %struct.acpi_ec** @first_ec, align 8, !dbg !5836
  %handle = getelementptr inbounds %struct.acpi_ec, %struct.acpi_ec* %1, i32 0, i32 0, !dbg !5837
  %2 = load i8*, i8** %handle, align 8, !dbg !5837
  store i8* %2, i8** %retval, align 8, !dbg !5838
  br label %return, !dbg !5838

return:                                           ; preds = %if.end, %if.then
  %3 = load i8*, i8** %retval, align 8, !dbg !5839
  ret i8* %3, !dbg !5839
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @acpi_ec_block_transactions() #0 !dbg !5840 {
entry:
  %ec = alloca %struct.acpi_ec*, align 8
  call void @llvm.dbg.declare(metadata %struct.acpi_ec** %ec, metadata !5841, metadata !DIExpression()), !dbg !5842
  %0 = load %struct.acpi_ec*, %struct.acpi_ec** @first_ec, align 8, !dbg !5843
  store %struct.acpi_ec* %0, %struct.acpi_ec** %ec, align 8, !dbg !5842
  %1 = load %struct.acpi_ec*, %struct.acpi_ec** %ec, align 8, !dbg !5844
  %tobool = icmp ne %struct.acpi_ec* %1, null, !dbg !5844
  br i1 %tobool, label %if.end, label %if.then, !dbg !5846

if.then:                                          ; preds = %entry
  br label %return, !dbg !5847

if.end:                                           ; preds = %entry
  %2 = load %struct.acpi_ec*, %struct.acpi_ec** %ec, align 8, !dbg !5848
  %mutex = getelementptr inbounds %struct.acpi_ec, %struct.acpi_ec* %2, i32 0, i32 8, !dbg !5849
  call void @mutex_lock(%struct.mutex* %mutex) #11, !dbg !5850
  %3 = load %struct.acpi_ec*, %struct.acpi_ec** %ec, align 8, !dbg !5851
  call void @acpi_ec_stop(%struct.acpi_ec* %3, i1 zeroext true) #11, !dbg !5852
  %4 = load %struct.acpi_ec*, %struct.acpi_ec** %ec, align 8, !dbg !5853
  %mutex1 = getelementptr inbounds %struct.acpi_ec, %struct.acpi_ec* %4, i32 0, i32 8, !dbg !5854
  call void @mutex_unlock(%struct.mutex* %mutex1) #11, !dbg !5855
  br label %return, !dbg !5856

return:                                           ; preds = %if.end, %if.then
  ret void, !dbg !5856
}

; Function Attrs: noredzone
declare dso_local void @mutex_lock(%struct.mutex*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @acpi_ec_stop(%struct.acpi_ec* %ec, i1 zeroext %suspending) #0 !dbg !5857 {
entry:
  %lock.addr.i82 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i82, metadata !5860, metadata !DIExpression()), !dbg !5866
  %lock.addr.i77 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i77, metadata !5875, metadata !DIExpression()), !dbg !5879
  %flags.addr.i78 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i78, metadata !5881, metadata !DIExpression()), !dbg !5882
  %tmp.i79 = alloca i32, align 4
  %tmp8.i80 = alloca i32, align 4
  %lock.addr.i75 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i75, metadata !5875, metadata !DIExpression()), !dbg !5883
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !5881, metadata !DIExpression()), !dbg !5885
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !5860, metadata !DIExpression()), !dbg !5886
  %ec.addr = alloca %struct.acpi_ec*, align 8
  %suspending.addr = alloca i8, align 1
  %flags = alloca i64, align 8
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__dummy5 = alloca i64, align 8
  %__dummy26 = alloca i64, align 8
  %tmp9 = alloca i32, align 4
  %tmp20 = alloca i32, align 4
  %__wq_entry = alloca %struct.wait_queue_entry, align 8
  %__ret = alloca i64, align 8
  %__int = alloca i64, align 8
  %tmp35 = alloca i64, align 8
  %__dummy39 = alloca i64, align 8
  %__dummy240 = alloca i64, align 8
  %tmp43 = alloca i32, align 4
  %__dummy47 = alloca i64, align 8
  %__dummy248 = alloca i64, align 8
  %tmp51 = alloca i32, align 4
  %tmp65 = alloca i32, align 4
  store %struct.acpi_ec* %ec, %struct.acpi_ec** %ec.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.acpi_ec** %ec.addr, metadata !5893, metadata !DIExpression()), !dbg !5894
  %frombool = zext i1 %suspending to i8
  store i8 %frombool, i8* %suspending.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %suspending.addr, metadata !5895, metadata !DIExpression()), !dbg !5896
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !5897, metadata !DIExpression()), !dbg !5898
  br label %do.body, !dbg !5899

do.body:                                          ; preds = %entry
  br label %do.body1, !dbg !5900

do.body1:                                         ; preds = %do.body
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !5901, metadata !DIExpression()), !dbg !5903
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !5904, metadata !DIExpression()), !dbg !5903
  %cmp = icmp eq i64* %__dummy, %__dummy2, !dbg !5903
  %conv = zext i1 %cmp to i32, !dbg !5903
  store i32 1, i32* %tmp, align 4, !dbg !5903
  %0 = load i32, i32* %tmp, align 4, !dbg !5903
  br label %do.body2, !dbg !5905

do.body2:                                         ; preds = %do.body1
  br label %do.body3, !dbg !5906

do.body3:                                         ; preds = %do.body2
  br label %do.body4, !dbg !5907

do.body4:                                         ; preds = %do.body3
  call void @llvm.dbg.declare(metadata i64* %__dummy5, metadata !5909, metadata !DIExpression()), !dbg !5912
  call void @llvm.dbg.declare(metadata i64* %__dummy26, metadata !5913, metadata !DIExpression()), !dbg !5912
  %cmp7 = icmp eq i64* %__dummy5, %__dummy26, !dbg !5912
  %conv8 = zext i1 %cmp7 to i32, !dbg !5912
  store i32 1, i32* %tmp9, align 4, !dbg !5912
  %1 = load i32, i32* %tmp9, align 4, !dbg !5912
  %call = call i64 @arch_local_irq_save() #11, !dbg !5914
  store i64 %call, i64* %flags, align 8, !dbg !5914
  br label %do.end, !dbg !5914

do.end:                                           ; preds = %do.body4
  br label %do.end10, !dbg !5907

do.end10:                                         ; preds = %do.end
  br label %do.body11, !dbg !5906

do.body11:                                        ; preds = %do.end10
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !5915, !srcloc !5916
  br label %do.body12, !dbg !5915

do.body12:                                        ; preds = %do.body11
  %2 = load %struct.acpi_ec*, %struct.acpi_ec** %ec.addr, align 8, !dbg !5917
  %lock = getelementptr inbounds %struct.acpi_ec, %struct.acpi_ec* %2, i32 0, i32 12, !dbg !5917
  store %struct.spinlock* %lock, %struct.spinlock** %lock.addr.i, align 8
  %3 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !5918
  %4 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %3, i32 0, i32 0, !dbg !5919
  %rlock.i = bitcast %union.anon.0* %4 to %struct.raw_spinlock*, !dbg !5919
  br label %do.end14, !dbg !5917

do.end14:                                         ; preds = %do.body12
  br label %do.end15, !dbg !5915

do.end15:                                         ; preds = %do.end14
  br label %do.end16, !dbg !5906

do.end16:                                         ; preds = %do.end15
  br label %do.end17, !dbg !5905

do.end17:                                         ; preds = %do.end16
  br label %do.end18, !dbg !5900

do.end18:                                         ; preds = %do.end17
  %5 = load %struct.acpi_ec*, %struct.acpi_ec** %ec.addr, align 8, !dbg !5920
  %call19 = call zeroext i1 @acpi_ec_started(%struct.acpi_ec* %5) #11, !dbg !5921
  br i1 %call19, label %if.then, label %if.end73, !dbg !5922

if.then:                                          ; preds = %do.end18
  store i32 0, i32* %tmp20, align 4, !dbg !5923
  %6 = load i32, i32* %tmp20, align 4, !dbg !5926
  %7 = load %struct.acpi_ec*, %struct.acpi_ec** %ec.addr, align 8, !dbg !5927
  %flags21 = getelementptr inbounds %struct.acpi_ec, %struct.acpi_ec* %7, i32 0, i32 6, !dbg !5928
  call void @set_bit(i64 7, i64* %flags21) #11, !dbg !5929
  %8 = load %struct.acpi_ec*, %struct.acpi_ec** %ec.addr, align 8, !dbg !5930
  %lock22 = getelementptr inbounds %struct.acpi_ec, %struct.acpi_ec* %8, i32 0, i32 12, !dbg !5931
  %9 = load i64, i64* %flags, align 8, !dbg !5932
  store %struct.spinlock* %lock22, %struct.spinlock** %lock.addr.i77, align 8
  store i64 %9, i64* %flags.addr.i78, align 8
  call void @llvm.dbg.declare(metadata !372, metadata !5933, metadata !DIExpression()) #7, !dbg !5936
  call void @llvm.dbg.declare(metadata !372, metadata !5937, metadata !DIExpression()) #7, !dbg !5936
  store i32 1, i32* %tmp.i79, align 4, !dbg !5936
  %10 = load i32, i32* %tmp.i79, align 4, !dbg !5936
  call void @llvm.dbg.declare(metadata !372, metadata !5938, metadata !DIExpression()) #7, !dbg !5943
  call void @llvm.dbg.declare(metadata !372, metadata !5944, metadata !DIExpression()) #7, !dbg !5943
  store i32 1, i32* %tmp8.i80, align 4, !dbg !5943
  %11 = load i32, i32* %tmp8.i80, align 4, !dbg !5943
  %12 = load i64, i64* %flags.addr.i78, align 8, !dbg !5945
  call void @arch_local_irq_restore(i64 %12) #12, !dbg !5945
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !5946, !srcloc !5948
  %13 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i77, align 8, !dbg !5949
  %14 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %13, i32 0, i32 0, !dbg !5949
  %rlock.i81 = bitcast %union.anon.0* %14 to %struct.raw_spinlock*, !dbg !5949
  br label %do.body23, !dbg !5951

do.body23:                                        ; preds = %if.then
  br label %do.body24, !dbg !5952

do.body24:                                        ; preds = %do.body23
  br label %do.body25, !dbg !5954

do.body25:                                        ; preds = %do.body24
  br label %do.end26, !dbg !5956

do.end26:                                         ; preds = %do.body25
  br label %do.end27, !dbg !5954

do.end27:                                         ; preds = %do.end26
  %15 = load %struct.acpi_ec*, %struct.acpi_ec** %ec.addr, align 8, !dbg !5958
  %call28 = call zeroext i1 @acpi_ec_stopped(%struct.acpi_ec* %15) #11, !dbg !5958
  br i1 %call28, label %if.then29, label %if.end, !dbg !5952

if.then29:                                        ; preds = %do.end27
  br label %do.end36, !dbg !5958

if.end:                                           ; preds = %do.end27
  call void @llvm.dbg.declare(metadata %struct.wait_queue_entry* %__wq_entry, metadata !5960, metadata !DIExpression()), !dbg !5962
  call void @llvm.dbg.declare(metadata i64* %__ret, metadata !5963, metadata !DIExpression()), !dbg !5962
  store i64 0, i64* %__ret, align 8, !dbg !5962
  call void @init_wait_entry(%struct.wait_queue_entry* %__wq_entry, i32 0) #11, !dbg !5962
  br label %for.cond, !dbg !5962

for.cond:                                         ; preds = %if.end33, %if.end
  call void @llvm.dbg.declare(metadata i64* %__int, metadata !5964, metadata !DIExpression()), !dbg !5968
  %16 = load %struct.acpi_ec*, %struct.acpi_ec** %ec.addr, align 8, !dbg !5968
  %wait = getelementptr inbounds %struct.acpi_ec, %struct.acpi_ec* %16, i32 0, i32 9, !dbg !5968
  %call30 = call i64 @prepare_to_wait_event(%struct.wait_queue_head* %wait, %struct.wait_queue_entry* %__wq_entry, i32 2) #11, !dbg !5968
  store i64 %call30, i64* %__int, align 8, !dbg !5968
  %17 = load %struct.acpi_ec*, %struct.acpi_ec** %ec.addr, align 8, !dbg !5969
  %call31 = call zeroext i1 @acpi_ec_stopped(%struct.acpi_ec* %17) #11, !dbg !5969
  br i1 %call31, label %if.then32, label %if.end33, !dbg !5968

if.then32:                                        ; preds = %for.cond
  br label %for.end, !dbg !5969

if.end33:                                         ; preds = %for.cond
  call void @schedule() #11, !dbg !5968
  br label %for.cond, !dbg !5971, !llvm.loop !5972

for.end:                                          ; preds = %if.then32
  %18 = load %struct.acpi_ec*, %struct.acpi_ec** %ec.addr, align 8, !dbg !5962
  %wait34 = getelementptr inbounds %struct.acpi_ec, %struct.acpi_ec* %18, i32 0, i32 9, !dbg !5962
  call void @finish_wait(%struct.wait_queue_head* %wait34, %struct.wait_queue_entry* %__wq_entry) #11, !dbg !5962
  br label %__out, !dbg !5962

__out:                                            ; preds = %for.end
  call void @llvm.dbg.label(metadata !5974), !dbg !5962
  %19 = load i64, i64* %__ret, align 8, !dbg !5962
  store i64 %19, i64* %tmp35, align 8, !dbg !5962
  %20 = load i64, i64* %tmp35, align 8, !dbg !5962
  br label %do.end36, !dbg !5952

do.end36:                                         ; preds = %__out, %if.then29
  br label %do.body37, !dbg !5975

do.body37:                                        ; preds = %do.end36
  br label %do.body38, !dbg !5976

do.body38:                                        ; preds = %do.body37
  call void @llvm.dbg.declare(metadata i64* %__dummy39, metadata !5977, metadata !DIExpression()), !dbg !5979
  call void @llvm.dbg.declare(metadata i64* %__dummy240, metadata !5980, metadata !DIExpression()), !dbg !5979
  %cmp41 = icmp eq i64* %__dummy39, %__dummy240, !dbg !5979
  %conv42 = zext i1 %cmp41 to i32, !dbg !5979
  store i32 1, i32* %tmp43, align 4, !dbg !5979
  %21 = load i32, i32* %tmp43, align 4, !dbg !5979
  br label %do.body44, !dbg !5981

do.body44:                                        ; preds = %do.body38
  br label %do.body45, !dbg !5982

do.body45:                                        ; preds = %do.body44
  br label %do.body46, !dbg !5983

do.body46:                                        ; preds = %do.body45
  call void @llvm.dbg.declare(metadata i64* %__dummy47, metadata !5985, metadata !DIExpression()), !dbg !5988
  call void @llvm.dbg.declare(metadata i64* %__dummy248, metadata !5989, metadata !DIExpression()), !dbg !5988
  %cmp49 = icmp eq i64* %__dummy47, %__dummy248, !dbg !5988
  %conv50 = zext i1 %cmp49 to i32, !dbg !5988
  store i32 1, i32* %tmp51, align 4, !dbg !5988
  %22 = load i32, i32* %tmp51, align 4, !dbg !5988
  %call52 = call i64 @arch_local_irq_save() #11, !dbg !5990
  store i64 %call52, i64* %flags, align 8, !dbg !5990
  br label %do.end53, !dbg !5990

do.end53:                                         ; preds = %do.body46
  br label %do.end54, !dbg !5983

do.end54:                                         ; preds = %do.end53
  br label %do.body55, !dbg !5982

do.body55:                                        ; preds = %do.end54
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !5991, !srcloc !5992
  br label %do.body56, !dbg !5991

do.body56:                                        ; preds = %do.body55
  %23 = load %struct.acpi_ec*, %struct.acpi_ec** %ec.addr, align 8, !dbg !5993
  %lock57 = getelementptr inbounds %struct.acpi_ec, %struct.acpi_ec* %23, i32 0, i32 12, !dbg !5993
  store %struct.spinlock* %lock57, %struct.spinlock** %lock.addr.i82, align 8
  %24 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i82, align 8, !dbg !5994
  %25 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %24, i32 0, i32 0, !dbg !5995
  %rlock.i83 = bitcast %union.anon.0* %25 to %struct.raw_spinlock*, !dbg !5995
  br label %do.end59, !dbg !5993

do.end59:                                         ; preds = %do.body56
  br label %do.end60, !dbg !5991

do.end60:                                         ; preds = %do.end59
  br label %do.end61, !dbg !5982

do.end61:                                         ; preds = %do.end60
  br label %do.end62, !dbg !5981

do.end62:                                         ; preds = %do.end61
  br label %do.end63, !dbg !5976

do.end63:                                         ; preds = %do.end62
  %26 = load i8, i8* %suspending.addr, align 1, !dbg !5996
  %tobool = trunc i8 %26 to i1, !dbg !5996
  br i1 %tobool, label %if.else, label %if.then64, !dbg !5998

if.then64:                                        ; preds = %do.end63
  %27 = load %struct.acpi_ec*, %struct.acpi_ec** %ec.addr, align 8, !dbg !5999
  call void @acpi_ec_complete_request(%struct.acpi_ec* %27) #11, !dbg !6001
  store i32 0, i32* %tmp65, align 4, !dbg !6002
  %28 = load i32, i32* %tmp65, align 4, !dbg !6005
  br label %if.end69, !dbg !6006

if.else:                                          ; preds = %do.end63
  %29 = load i8, i8* @ec_freeze_events, align 1, !dbg !6007
  %tobool66 = trunc i8 %29 to i1, !dbg !6007
  br i1 %tobool66, label %if.end68, label %if.then67, !dbg !6009

if.then67:                                        ; preds = %if.else
  %30 = load %struct.acpi_ec*, %struct.acpi_ec** %ec.addr, align 8, !dbg !6010
  call void @__acpi_ec_disable_event(%struct.acpi_ec* %30) #11, !dbg !6011
  br label %if.end68, !dbg !6011

if.end68:                                         ; preds = %if.then67, %if.else
  br label %if.end69

if.end69:                                         ; preds = %if.end68, %if.then64
  %31 = load %struct.acpi_ec*, %struct.acpi_ec** %ec.addr, align 8, !dbg !6012
  %flags70 = getelementptr inbounds %struct.acpi_ec, %struct.acpi_ec* %31, i32 0, i32 6, !dbg !6013
  call void @clear_bit(i64 6, i64* %flags70) #11, !dbg !6014
  %32 = load %struct.acpi_ec*, %struct.acpi_ec** %ec.addr, align 8, !dbg !6015
  %flags71 = getelementptr inbounds %struct.acpi_ec, %struct.acpi_ec* %32, i32 0, i32 6, !dbg !6016
  call void @clear_bit(i64 7, i64* %flags71) #11, !dbg !6017
  %call72 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.5, i64 0, i64 0)) #13, !dbg !6018
  br label %if.end73, !dbg !6019

if.end73:                                         ; preds = %if.end69, %do.end18
  %33 = load %struct.acpi_ec*, %struct.acpi_ec** %ec.addr, align 8, !dbg !6020
  %lock74 = getelementptr inbounds %struct.acpi_ec, %struct.acpi_ec* %33, i32 0, i32 12, !dbg !6021
  %34 = load i64, i64* %flags, align 8, !dbg !6022
  store %struct.spinlock* %lock74, %struct.spinlock** %lock.addr.i75, align 8
  store i64 %34, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !372, metadata !5933, metadata !DIExpression()) #7, !dbg !6023
  call void @llvm.dbg.declare(metadata !372, metadata !5937, metadata !DIExpression()) #7, !dbg !6023
  store i32 1, i32* %tmp.i, align 4, !dbg !6023
  %35 = load i32, i32* %tmp.i, align 4, !dbg !6023
  call void @llvm.dbg.declare(metadata !372, metadata !5938, metadata !DIExpression()) #7, !dbg !6024
  call void @llvm.dbg.declare(metadata !372, metadata !5944, metadata !DIExpression()) #7, !dbg !6024
  store i32 1, i32* %tmp8.i, align 4, !dbg !6024
  %36 = load i32, i32* %tmp8.i, align 4, !dbg !6024
  %37 = load i64, i64* %flags.addr.i, align 8, !dbg !6025
  call void @arch_local_irq_restore(i64 %37) #12, !dbg !6025
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !6026, !srcloc !5948
  %38 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i75, align 8, !dbg !6027
  %39 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %38, i32 0, i32 0, !dbg !6027
  %rlock.i76 = bitcast %union.anon.0* %39 to %struct.raw_spinlock*, !dbg !6027
  ret void, !dbg !6028
}

; Function Attrs: noredzone
declare dso_local void @mutex_unlock(%struct.mutex*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @acpi_ec_unblock_transactions() #0 !dbg !6029 {
entry:
  %0 = load %struct.acpi_ec*, %struct.acpi_ec** @first_ec, align 8, !dbg !6030
  %tobool = icmp ne %struct.acpi_ec* %0, null, !dbg !6030
  br i1 %tobool, label %if.then, label %if.end, !dbg !6032

if.then:                                          ; preds = %entry
  %1 = load %struct.acpi_ec*, %struct.acpi_ec** @first_ec, align 8, !dbg !6033
  call void @acpi_ec_start(%struct.acpi_ec* %1, i1 zeroext true) #11, !dbg !6034
  br label %if.end, !dbg !6034

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !6035
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @acpi_ec_start(%struct.acpi_ec* %ec, i1 zeroext %resuming) #0 !dbg !6036 {
entry:
  %lock.addr.i27 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i27, metadata !5875, metadata !DIExpression()), !dbg !6037
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !5881, metadata !DIExpression()), !dbg !6039
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !5860, metadata !DIExpression()), !dbg !6040
  %ec.addr = alloca %struct.acpi_ec*, align 8
  %resuming.addr = alloca i8, align 1
  %flags = alloca i64, align 8
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__dummy5 = alloca i64, align 8
  %__dummy26 = alloca i64, align 8
  %tmp9 = alloca i32, align 4
  %tmp21 = alloca i32, align 4
  %tmp23 = alloca i32, align 4
  store %struct.acpi_ec* %ec, %struct.acpi_ec** %ec.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.acpi_ec** %ec.addr, metadata !6047, metadata !DIExpression()), !dbg !6048
  %frombool = zext i1 %resuming to i8
  store i8 %frombool, i8* %resuming.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %resuming.addr, metadata !6049, metadata !DIExpression()), !dbg !6050
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !6051, metadata !DIExpression()), !dbg !6052
  br label %do.body, !dbg !6053

do.body:                                          ; preds = %entry
  br label %do.body1, !dbg !6054

do.body1:                                         ; preds = %do.body
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !6055, metadata !DIExpression()), !dbg !6057
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !6058, metadata !DIExpression()), !dbg !6057
  %cmp = icmp eq i64* %__dummy, %__dummy2, !dbg !6057
  %conv = zext i1 %cmp to i32, !dbg !6057
  store i32 1, i32* %tmp, align 4, !dbg !6057
  %0 = load i32, i32* %tmp, align 4, !dbg !6057
  br label %do.body2, !dbg !6059

do.body2:                                         ; preds = %do.body1
  br label %do.body3, !dbg !6060

do.body3:                                         ; preds = %do.body2
  br label %do.body4, !dbg !6061

do.body4:                                         ; preds = %do.body3
  call void @llvm.dbg.declare(metadata i64* %__dummy5, metadata !6063, metadata !DIExpression()), !dbg !6066
  call void @llvm.dbg.declare(metadata i64* %__dummy26, metadata !6067, metadata !DIExpression()), !dbg !6066
  %cmp7 = icmp eq i64* %__dummy5, %__dummy26, !dbg !6066
  %conv8 = zext i1 %cmp7 to i32, !dbg !6066
  store i32 1, i32* %tmp9, align 4, !dbg !6066
  %1 = load i32, i32* %tmp9, align 4, !dbg !6066
  %call = call i64 @arch_local_irq_save() #11, !dbg !6068
  store i64 %call, i64* %flags, align 8, !dbg !6068
  br label %do.end, !dbg !6068

do.end:                                           ; preds = %do.body4
  br label %do.end10, !dbg !6061

do.end10:                                         ; preds = %do.end
  br label %do.body11, !dbg !6060

do.body11:                                        ; preds = %do.end10
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !6069, !srcloc !6070
  br label %do.body12, !dbg !6069

do.body12:                                        ; preds = %do.body11
  %2 = load %struct.acpi_ec*, %struct.acpi_ec** %ec.addr, align 8, !dbg !6071
  %lock = getelementptr inbounds %struct.acpi_ec, %struct.acpi_ec* %2, i32 0, i32 12, !dbg !6071
  store %struct.spinlock* %lock, %struct.spinlock** %lock.addr.i, align 8
  %3 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !6072
  %4 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %3, i32 0, i32 0, !dbg !6073
  %rlock.i = bitcast %union.anon.0* %4 to %struct.raw_spinlock*, !dbg !6073
  br label %do.end14, !dbg !6071

do.end14:                                         ; preds = %do.body12
  br label %do.end15, !dbg !6069

do.end15:                                         ; preds = %do.end14
  br label %do.end16, !dbg !6060

do.end16:                                         ; preds = %do.end15
  br label %do.end17, !dbg !6059

do.end17:                                         ; preds = %do.end16
  br label %do.end18, !dbg !6054

do.end18:                                         ; preds = %do.end17
  %5 = load %struct.acpi_ec*, %struct.acpi_ec** %ec.addr, align 8, !dbg !6074
  %flags19 = getelementptr inbounds %struct.acpi_ec, %struct.acpi_ec* %5, i32 0, i32 6, !dbg !6076
  %call20 = call zeroext i1 @test_and_set_bit(i64 6, i64* %flags19) #11, !dbg !6077
  br i1 %call20, label %if.end25, label %if.then, !dbg !6078

if.then:                                          ; preds = %do.end18
  store i32 0, i32* %tmp21, align 4, !dbg !6079
  %6 = load i32, i32* %tmp21, align 4, !dbg !6083
  %7 = load i8, i8* %resuming.addr, align 1, !dbg !6084
  %tobool = trunc i8 %7 to i1, !dbg !6084
  br i1 %tobool, label %if.end, label %if.then22, !dbg !6086

if.then22:                                        ; preds = %if.then
  %8 = load %struct.acpi_ec*, %struct.acpi_ec** %ec.addr, align 8, !dbg !6087
  call void @acpi_ec_submit_request(%struct.acpi_ec* %8) #11, !dbg !6089
  store i32 0, i32* %tmp23, align 4, !dbg !6090
  %9 = load i32, i32* %tmp23, align 4, !dbg !6093
  br label %if.end, !dbg !6094

if.end:                                           ; preds = %if.then22, %if.then
  %call24 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.7, i64 0, i64 0)) #13, !dbg !6095
  br label %if.end25, !dbg !6096

if.end25:                                         ; preds = %if.end, %do.end18
  %10 = load %struct.acpi_ec*, %struct.acpi_ec** %ec.addr, align 8, !dbg !6097
  %lock26 = getelementptr inbounds %struct.acpi_ec, %struct.acpi_ec* %10, i32 0, i32 12, !dbg !6098
  %11 = load i64, i64* %flags, align 8, !dbg !6099
  store %struct.spinlock* %lock26, %struct.spinlock** %lock.addr.i27, align 8
  store i64 %11, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !372, metadata !5933, metadata !DIExpression()) #7, !dbg !6100
  call void @llvm.dbg.declare(metadata !372, metadata !5937, metadata !DIExpression()) #7, !dbg !6100
  store i32 1, i32* %tmp.i, align 4, !dbg !6100
  %12 = load i32, i32* %tmp.i, align 4, !dbg !6100
  call void @llvm.dbg.declare(metadata !372, metadata !5938, metadata !DIExpression()) #7, !dbg !6101
  call void @llvm.dbg.declare(metadata !372, metadata !5944, metadata !DIExpression()) #7, !dbg !6101
  store i32 1, i32* %tmp8.i, align 4, !dbg !6101
  %13 = load i32, i32* %tmp8.i, align 4, !dbg !6101
  %14 = load i64, i64* %flags.addr.i, align 8, !dbg !6102
  call void @arch_local_irq_restore(i64 %14) #12, !dbg !6102
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !6103, !srcloc !5948
  %15 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i27, align 8, !dbg !6104
  %16 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %15, i32 0, i32 0, !dbg !6104
  %rlock.i28 = bitcast %union.anon.0* %16 to %struct.raw_spinlock*, !dbg !6104
  ret void, !dbg !6105
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @acpi_ec_add_query_handler(%struct.acpi_ec* %ec, i8 zeroext %query_bit, i8* %handle, i32 (i8*)* %func, i8* %data) #0 !dbg !6106 {
entry:
  %retval = alloca i32, align 4
  %ec.addr = alloca %struct.acpi_ec*, align 8
  %query_bit.addr = alloca i8, align 1
  %handle.addr = alloca i8*, align 8
  %func.addr = alloca i32 (i8*)*, align 8
  %data.addr = alloca i8*, align 8
  %handler = alloca %struct.acpi_ec_query_handler*, align 8
  store %struct.acpi_ec* %ec, %struct.acpi_ec** %ec.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.acpi_ec** %ec.addr, metadata !6109, metadata !DIExpression()), !dbg !6110
  store i8 %query_bit, i8* %query_bit.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %query_bit.addr, metadata !6111, metadata !DIExpression()), !dbg !6112
  store i8* %handle, i8** %handle.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %handle.addr, metadata !6113, metadata !DIExpression()), !dbg !6114
  store i32 (i8*)* %func, i32 (i8*)** %func.addr, align 8
  call void @llvm.dbg.declare(metadata i32 (i8*)** %func.addr, metadata !6115, metadata !DIExpression()), !dbg !6116
  store i8* %data, i8** %data.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %data.addr, metadata !6117, metadata !DIExpression()), !dbg !6118
  call void @llvm.dbg.declare(metadata %struct.acpi_ec_query_handler** %handler, metadata !6119, metadata !DIExpression()), !dbg !6120
  %call = call i8* @kzalloc(i64 48, i32 3264) #11, !dbg !6121
  %0 = bitcast i8* %call to %struct.acpi_ec_query_handler*, !dbg !6121
  store %struct.acpi_ec_query_handler* %0, %struct.acpi_ec_query_handler** %handler, align 8, !dbg !6120
  %1 = load %struct.acpi_ec_query_handler*, %struct.acpi_ec_query_handler** %handler, align 8, !dbg !6122
  %tobool = icmp ne %struct.acpi_ec_query_handler* %1, null, !dbg !6122
  br i1 %tobool, label %if.end, label %if.then, !dbg !6124

if.then:                                          ; preds = %entry
  store i32 -12, i32* %retval, align 4, !dbg !6125
  br label %return, !dbg !6125

if.end:                                           ; preds = %entry
  %2 = load i8, i8* %query_bit.addr, align 1, !dbg !6126
  %3 = load %struct.acpi_ec_query_handler*, %struct.acpi_ec_query_handler** %handler, align 8, !dbg !6127
  %query_bit1 = getelementptr inbounds %struct.acpi_ec_query_handler, %struct.acpi_ec_query_handler* %3, i32 0, i32 4, !dbg !6128
  store i8 %2, i8* %query_bit1, align 8, !dbg !6129
  %4 = load i8*, i8** %handle.addr, align 8, !dbg !6130
  %5 = load %struct.acpi_ec_query_handler*, %struct.acpi_ec_query_handler** %handler, align 8, !dbg !6131
  %handle2 = getelementptr inbounds %struct.acpi_ec_query_handler, %struct.acpi_ec_query_handler* %5, i32 0, i32 2, !dbg !6132
  store i8* %4, i8** %handle2, align 8, !dbg !6133
  %6 = load i32 (i8*)*, i32 (i8*)** %func.addr, align 8, !dbg !6134
  %7 = load %struct.acpi_ec_query_handler*, %struct.acpi_ec_query_handler** %handler, align 8, !dbg !6135
  %func3 = getelementptr inbounds %struct.acpi_ec_query_handler, %struct.acpi_ec_query_handler* %7, i32 0, i32 1, !dbg !6136
  store i32 (i8*)* %6, i32 (i8*)** %func3, align 8, !dbg !6137
  %8 = load i8*, i8** %data.addr, align 8, !dbg !6138
  %9 = load %struct.acpi_ec_query_handler*, %struct.acpi_ec_query_handler** %handler, align 8, !dbg !6139
  %data4 = getelementptr inbounds %struct.acpi_ec_query_handler, %struct.acpi_ec_query_handler* %9, i32 0, i32 3, !dbg !6140
  store i8* %8, i8** %data4, align 8, !dbg !6141
  %10 = load %struct.acpi_ec*, %struct.acpi_ec** %ec.addr, align 8, !dbg !6142
  %mutex = getelementptr inbounds %struct.acpi_ec, %struct.acpi_ec* %10, i32 0, i32 8, !dbg !6143
  call void @mutex_lock(%struct.mutex* %mutex) #11, !dbg !6144
  %11 = load %struct.acpi_ec_query_handler*, %struct.acpi_ec_query_handler** %handler, align 8, !dbg !6145
  %kref = getelementptr inbounds %struct.acpi_ec_query_handler, %struct.acpi_ec_query_handler* %11, i32 0, i32 5, !dbg !6146
  call void @kref_init(%struct.kref* %kref) #11, !dbg !6147
  %12 = load %struct.acpi_ec_query_handler*, %struct.acpi_ec_query_handler** %handler, align 8, !dbg !6148
  %node = getelementptr inbounds %struct.acpi_ec_query_handler, %struct.acpi_ec_query_handler* %12, i32 0, i32 0, !dbg !6149
  %13 = load %struct.acpi_ec*, %struct.acpi_ec** %ec.addr, align 8, !dbg !6150
  %list = getelementptr inbounds %struct.acpi_ec, %struct.acpi_ec* %13, i32 0, i32 10, !dbg !6151
  call void @list_add(%struct.list_head* %node, %struct.list_head* %list) #11, !dbg !6152
  %14 = load %struct.acpi_ec*, %struct.acpi_ec** %ec.addr, align 8, !dbg !6153
  %mutex5 = getelementptr inbounds %struct.acpi_ec, %struct.acpi_ec* %14, i32 0, i32 8, !dbg !6154
  call void @mutex_unlock(%struct.mutex* %mutex5) #11, !dbg !6155
  store i32 0, i32* %retval, align 4, !dbg !6156
  br label %return, !dbg !6156

return:                                           ; preds = %if.end, %if.then
  %15 = load i32, i32* %retval, align 4, !dbg !6157
  ret i32 %15, !dbg !6157
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @kzalloc(i64 %size, i32 %flags) #0 !dbg !6158 {
entry:
  %s.addr.i.i = alloca %struct.kmem_cache*, align 8
  call void @llvm.dbg.declare(metadata %struct.kmem_cache** %s.addr.i.i, metadata !6161, metadata !DIExpression()), !dbg !6165
  %flags.addr.i17.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i17.i, metadata !6171, metadata !DIExpression()), !dbg !6172
  %size.addr.i18.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i18.i, metadata !6173, metadata !DIExpression()), !dbg !6174
  %ret.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %ret.i.i, metadata !6175, metadata !DIExpression()), !dbg !6176
  %retval.i12.i = alloca i32, align 4
  %flags.addr.i13.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i13.i, metadata !6177, metadata !DIExpression()), !dbg !6181
  %retval.i.i = alloca i32, align 4
  %size.addr.i11.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i11.i, metadata !6183, metadata !DIExpression()), !dbg !6187
  %size.addr.i.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i.i, metadata !6189, metadata !DIExpression()), !dbg !6193
  %flags.addr.i.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i.i.i, metadata !6198, metadata !DIExpression()), !dbg !6199
  %order.addr.i.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %order.addr.i.i.i, metadata !6200, metadata !DIExpression()), !dbg !6201
  %size.addr.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i, metadata !6202, metadata !DIExpression()), !dbg !6203
  %flags.addr.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i.i, metadata !6204, metadata !DIExpression()), !dbg !6205
  %order.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %order.i.i, metadata !6206, metadata !DIExpression()), !dbg !6207
  %retval.i = alloca i8*, align 8
  %size.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i, metadata !6208, metadata !DIExpression()), !dbg !6209
  %flags.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i, metadata !6210, metadata !DIExpression()), !dbg !6211
  %index.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %index.i, metadata !6212, metadata !DIExpression()), !dbg !6213
  %size.addr = alloca i64, align 8
  %flags.addr = alloca i32, align 4
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !6214, metadata !DIExpression()), !dbg !6215
  store i32 %flags, i32* %flags.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr, metadata !6216, metadata !DIExpression()), !dbg !6217
  %0 = load i64, i64* %size.addr, align 8, !dbg !6218
  %1 = load i32, i32* %flags.addr, align 4, !dbg !6219
  %or = or i32 %1, 256, !dbg !6220
  store i64 %0, i64* %size.addr.i, align 8
  store i32 %or, i32* %flags.addr.i, align 4
  %2 = load i64, i64* %size.addr.i, align 8, !dbg !6221
  %3 = call i1 @llvm.is.constant.i64(i64 %2) #7, !dbg !6222
  br i1 %3, label %if.then.i, label %if.end9.i, !dbg !6223

if.then.i:                                        ; preds = %entry
  %4 = load i64, i64* %size.addr.i, align 8, !dbg !6224
  %cmp.i = icmp ugt i64 %4, 8192, !dbg !6225
  br i1 %cmp.i, label %if.then1.i, label %if.end.i, !dbg !6226

if.then1.i:                                       ; preds = %if.then.i
  %5 = load i64, i64* %size.addr.i, align 8, !dbg !6227
  %6 = load i32, i32* %flags.addr.i, align 4, !dbg !6228
  store i64 %5, i64* %size.addr.i.i, align 8
  store i32 %6, i32* %flags.addr.i.i, align 4
  %7 = load i64, i64* %size.addr.i.i, align 8, !dbg !6229
  %call.i.i = call i32 @get_order(i64 %7) #14, !dbg !6230
  store i32 %call.i.i, i32* %order.i.i, align 4, !dbg !6207
  %8 = load i64, i64* %size.addr.i.i, align 8, !dbg !6231
  %9 = load i32, i32* %flags.addr.i.i, align 4, !dbg !6232
  %10 = load i32, i32* %order.i.i, align 4, !dbg !6233
  store i64 %8, i64* %size.addr.i.i.i, align 8
  store i32 %9, i32* %flags.addr.i.i.i, align 4
  store i32 %10, i32* %order.addr.i.i.i, align 4
  %11 = load i64, i64* %size.addr.i.i.i, align 8, !dbg !6234
  %12 = load i32, i32* %flags.addr.i.i.i, align 4, !dbg !6235
  %13 = load i32, i32* %order.addr.i.i.i, align 4, !dbg !6236
  %call.i.i.i = call noalias i8* @kmalloc_order(i64 %11, i32 %12, i32 %13) #12, !dbg !6237
  %ptrint.i.i.i = ptrtoint i8* %call.i.i.i to i64, !dbg !6237
  %maskedptr.i.i.i = and i64 %ptrint.i.i.i, 4095, !dbg !6237
  %maskcond.i.i.i = icmp eq i64 %maskedptr.i.i.i, 0, !dbg !6237
  call void @llvm.assume(i1 %maskcond.i.i.i) #7, !dbg !6237
  store i8* %call.i.i.i, i8** %retval.i, align 8, !dbg !6238
  br label %kmalloc.exit, !dbg !6238

if.end.i:                                         ; preds = %if.then.i
  %14 = load i64, i64* %size.addr.i, align 8, !dbg !6239
  store i64 %14, i64* %size.addr.i11.i, align 8
  %15 = load i64, i64* %size.addr.i11.i, align 8, !dbg !6240
  %tobool.i.i = icmp ne i64 %15, 0, !dbg !6240
  br i1 %tobool.i.i, label %if.end.i.i, label %if.then.i.i, !dbg !6242

if.then.i.i:                                      ; preds = %if.end.i
  store i32 0, i32* %retval.i.i, align 4, !dbg !6243
  br label %kmalloc_index.exit.i, !dbg !6243

if.end.i.i:                                       ; preds = %if.end.i
  %16 = load i64, i64* %size.addr.i11.i, align 8, !dbg !6244
  %cmp.i.i = icmp ule i64 %16, 8, !dbg !6246
  br i1 %cmp.i.i, label %if.then1.i.i, label %if.end2.i.i, !dbg !6247

if.then1.i.i:                                     ; preds = %if.end.i.i
  store i32 3, i32* %retval.i.i, align 4, !dbg !6248
  br label %kmalloc_index.exit.i, !dbg !6248

if.end2.i.i:                                      ; preds = %if.end.i.i
  %17 = load i64, i64* %size.addr.i11.i, align 8, !dbg !6249
  %cmp3.i.i = icmp ugt i64 %17, 64, !dbg !6251
  br i1 %cmp3.i.i, label %land.lhs.true.i.i, label %if.end6.i.i, !dbg !6252

land.lhs.true.i.i:                                ; preds = %if.end2.i.i
  %18 = load i64, i64* %size.addr.i11.i, align 8, !dbg !6253
  %cmp4.i.i = icmp ule i64 %18, 96, !dbg !6254
  br i1 %cmp4.i.i, label %if.then5.i.i, label %if.end6.i.i, !dbg !6255

if.then5.i.i:                                     ; preds = %land.lhs.true.i.i
  store i32 1, i32* %retval.i.i, align 4, !dbg !6256
  br label %kmalloc_index.exit.i, !dbg !6256

if.end6.i.i:                                      ; preds = %land.lhs.true.i.i, %if.end2.i.i
  %19 = load i64, i64* %size.addr.i11.i, align 8, !dbg !6257
  %cmp7.i.i = icmp ugt i64 %19, 128, !dbg !6259
  br i1 %cmp7.i.i, label %land.lhs.true8.i.i, label %if.end11.i.i, !dbg !6260

land.lhs.true8.i.i:                               ; preds = %if.end6.i.i
  %20 = load i64, i64* %size.addr.i11.i, align 8, !dbg !6261
  %cmp9.i.i = icmp ule i64 %20, 192, !dbg !6262
  br i1 %cmp9.i.i, label %if.then10.i.i, label %if.end11.i.i, !dbg !6263

if.then10.i.i:                                    ; preds = %land.lhs.true8.i.i
  store i32 2, i32* %retval.i.i, align 4, !dbg !6264
  br label %kmalloc_index.exit.i, !dbg !6264

if.end11.i.i:                                     ; preds = %land.lhs.true8.i.i, %if.end6.i.i
  %21 = load i64, i64* %size.addr.i11.i, align 8, !dbg !6265
  %cmp12.i.i = icmp ule i64 %21, 8, !dbg !6267
  br i1 %cmp12.i.i, label %if.then13.i.i, label %if.end14.i.i, !dbg !6268

if.then13.i.i:                                    ; preds = %if.end11.i.i
  store i32 3, i32* %retval.i.i, align 4, !dbg !6269
  br label %kmalloc_index.exit.i, !dbg !6269

if.end14.i.i:                                     ; preds = %if.end11.i.i
  %22 = load i64, i64* %size.addr.i11.i, align 8, !dbg !6270
  %cmp15.i.i = icmp ule i64 %22, 16, !dbg !6272
  br i1 %cmp15.i.i, label %if.then16.i.i, label %if.end17.i.i, !dbg !6273

if.then16.i.i:                                    ; preds = %if.end14.i.i
  store i32 4, i32* %retval.i.i, align 4, !dbg !6274
  br label %kmalloc_index.exit.i, !dbg !6274

if.end17.i.i:                                     ; preds = %if.end14.i.i
  %23 = load i64, i64* %size.addr.i11.i, align 8, !dbg !6275
  %cmp18.i.i = icmp ule i64 %23, 32, !dbg !6277
  br i1 %cmp18.i.i, label %if.then19.i.i, label %if.end20.i.i, !dbg !6278

if.then19.i.i:                                    ; preds = %if.end17.i.i
  store i32 5, i32* %retval.i.i, align 4, !dbg !6279
  br label %kmalloc_index.exit.i, !dbg !6279

if.end20.i.i:                                     ; preds = %if.end17.i.i
  %24 = load i64, i64* %size.addr.i11.i, align 8, !dbg !6280
  %cmp21.i.i = icmp ule i64 %24, 64, !dbg !6282
  br i1 %cmp21.i.i, label %if.then22.i.i, label %if.end23.i.i, !dbg !6283

if.then22.i.i:                                    ; preds = %if.end20.i.i
  store i32 6, i32* %retval.i.i, align 4, !dbg !6284
  br label %kmalloc_index.exit.i, !dbg !6284

if.end23.i.i:                                     ; preds = %if.end20.i.i
  %25 = load i64, i64* %size.addr.i11.i, align 8, !dbg !6285
  %cmp24.i.i = icmp ule i64 %25, 128, !dbg !6287
  br i1 %cmp24.i.i, label %if.then25.i.i, label %if.end26.i.i, !dbg !6288

if.then25.i.i:                                    ; preds = %if.end23.i.i
  store i32 7, i32* %retval.i.i, align 4, !dbg !6289
  br label %kmalloc_index.exit.i, !dbg !6289

if.end26.i.i:                                     ; preds = %if.end23.i.i
  %26 = load i64, i64* %size.addr.i11.i, align 8, !dbg !6290
  %cmp27.i.i = icmp ule i64 %26, 256, !dbg !6292
  br i1 %cmp27.i.i, label %if.then28.i.i, label %if.end29.i.i, !dbg !6293

if.then28.i.i:                                    ; preds = %if.end26.i.i
  store i32 8, i32* %retval.i.i, align 4, !dbg !6294
  br label %kmalloc_index.exit.i, !dbg !6294

if.end29.i.i:                                     ; preds = %if.end26.i.i
  %27 = load i64, i64* %size.addr.i11.i, align 8, !dbg !6295
  %cmp30.i.i = icmp ule i64 %27, 512, !dbg !6297
  br i1 %cmp30.i.i, label %if.then31.i.i, label %if.end32.i.i, !dbg !6298

if.then31.i.i:                                    ; preds = %if.end29.i.i
  store i32 9, i32* %retval.i.i, align 4, !dbg !6299
  br label %kmalloc_index.exit.i, !dbg !6299

if.end32.i.i:                                     ; preds = %if.end29.i.i
  %28 = load i64, i64* %size.addr.i11.i, align 8, !dbg !6300
  %cmp33.i.i = icmp ule i64 %28, 1024, !dbg !6302
  br i1 %cmp33.i.i, label %if.then34.i.i, label %if.end35.i.i, !dbg !6303

if.then34.i.i:                                    ; preds = %if.end32.i.i
  store i32 10, i32* %retval.i.i, align 4, !dbg !6304
  br label %kmalloc_index.exit.i, !dbg !6304

if.end35.i.i:                                     ; preds = %if.end32.i.i
  %29 = load i64, i64* %size.addr.i11.i, align 8, !dbg !6305
  %cmp36.i.i = icmp ule i64 %29, 2048, !dbg !6307
  br i1 %cmp36.i.i, label %if.then37.i.i, label %if.end38.i.i, !dbg !6308

if.then37.i.i:                                    ; preds = %if.end35.i.i
  store i32 11, i32* %retval.i.i, align 4, !dbg !6309
  br label %kmalloc_index.exit.i, !dbg !6309

if.end38.i.i:                                     ; preds = %if.end35.i.i
  %30 = load i64, i64* %size.addr.i11.i, align 8, !dbg !6310
  %cmp39.i.i = icmp ule i64 %30, 4096, !dbg !6312
  br i1 %cmp39.i.i, label %if.then40.i.i, label %if.end41.i.i, !dbg !6313

if.then40.i.i:                                    ; preds = %if.end38.i.i
  store i32 12, i32* %retval.i.i, align 4, !dbg !6314
  br label %kmalloc_index.exit.i, !dbg !6314

if.end41.i.i:                                     ; preds = %if.end38.i.i
  %31 = load i64, i64* %size.addr.i11.i, align 8, !dbg !6315
  %cmp42.i.i = icmp ule i64 %31, 8192, !dbg !6317
  br i1 %cmp42.i.i, label %if.then43.i.i, label %if.end44.i.i, !dbg !6318

if.then43.i.i:                                    ; preds = %if.end41.i.i
  store i32 13, i32* %retval.i.i, align 4, !dbg !6319
  br label %kmalloc_index.exit.i, !dbg !6319

if.end44.i.i:                                     ; preds = %if.end41.i.i
  %32 = load i64, i64* %size.addr.i11.i, align 8, !dbg !6320
  %cmp45.i.i = icmp ule i64 %32, 16384, !dbg !6322
  br i1 %cmp45.i.i, label %if.then46.i.i, label %if.end47.i.i, !dbg !6323

if.then46.i.i:                                    ; preds = %if.end44.i.i
  store i32 14, i32* %retval.i.i, align 4, !dbg !6324
  br label %kmalloc_index.exit.i, !dbg !6324

if.end47.i.i:                                     ; preds = %if.end44.i.i
  %33 = load i64, i64* %size.addr.i11.i, align 8, !dbg !6325
  %cmp48.i.i = icmp ule i64 %33, 32768, !dbg !6327
  br i1 %cmp48.i.i, label %if.then49.i.i, label %if.end50.i.i, !dbg !6328

if.then49.i.i:                                    ; preds = %if.end47.i.i
  store i32 15, i32* %retval.i.i, align 4, !dbg !6329
  br label %kmalloc_index.exit.i, !dbg !6329

if.end50.i.i:                                     ; preds = %if.end47.i.i
  %34 = load i64, i64* %size.addr.i11.i, align 8, !dbg !6330
  %cmp51.i.i = icmp ule i64 %34, 65536, !dbg !6332
  br i1 %cmp51.i.i, label %if.then52.i.i, label %if.end53.i.i, !dbg !6333

if.then52.i.i:                                    ; preds = %if.end50.i.i
  store i32 16, i32* %retval.i.i, align 4, !dbg !6334
  br label %kmalloc_index.exit.i, !dbg !6334

if.end53.i.i:                                     ; preds = %if.end50.i.i
  %35 = load i64, i64* %size.addr.i11.i, align 8, !dbg !6335
  %cmp54.i.i = icmp ule i64 %35, 131072, !dbg !6337
  br i1 %cmp54.i.i, label %if.then55.i.i, label %if.end56.i.i, !dbg !6338

if.then55.i.i:                                    ; preds = %if.end53.i.i
  store i32 17, i32* %retval.i.i, align 4, !dbg !6339
  br label %kmalloc_index.exit.i, !dbg !6339

if.end56.i.i:                                     ; preds = %if.end53.i.i
  %36 = load i64, i64* %size.addr.i11.i, align 8, !dbg !6340
  %cmp57.i.i = icmp ule i64 %36, 262144, !dbg !6342
  br i1 %cmp57.i.i, label %if.then58.i.i, label %if.end59.i.i, !dbg !6343

if.then58.i.i:                                    ; preds = %if.end56.i.i
  store i32 18, i32* %retval.i.i, align 4, !dbg !6344
  br label %kmalloc_index.exit.i, !dbg !6344

if.end59.i.i:                                     ; preds = %if.end56.i.i
  %37 = load i64, i64* %size.addr.i11.i, align 8, !dbg !6345
  %cmp60.i.i = icmp ule i64 %37, 524288, !dbg !6347
  br i1 %cmp60.i.i, label %if.then61.i.i, label %if.end62.i.i, !dbg !6348

if.then61.i.i:                                    ; preds = %if.end59.i.i
  store i32 19, i32* %retval.i.i, align 4, !dbg !6349
  br label %kmalloc_index.exit.i, !dbg !6349

if.end62.i.i:                                     ; preds = %if.end59.i.i
  %38 = load i64, i64* %size.addr.i11.i, align 8, !dbg !6350
  %cmp63.i.i = icmp ule i64 %38, 1048576, !dbg !6352
  br i1 %cmp63.i.i, label %if.then64.i.i, label %if.end65.i.i, !dbg !6353

if.then64.i.i:                                    ; preds = %if.end62.i.i
  store i32 20, i32* %retval.i.i, align 4, !dbg !6354
  br label %kmalloc_index.exit.i, !dbg !6354

if.end65.i.i:                                     ; preds = %if.end62.i.i
  %39 = load i64, i64* %size.addr.i11.i, align 8, !dbg !6355
  %cmp66.i.i = icmp ule i64 %39, 2097152, !dbg !6357
  br i1 %cmp66.i.i, label %if.then67.i.i, label %if.end68.i.i, !dbg !6358

if.then67.i.i:                                    ; preds = %if.end65.i.i
  store i32 21, i32* %retval.i.i, align 4, !dbg !6359
  br label %kmalloc_index.exit.i, !dbg !6359

if.end68.i.i:                                     ; preds = %if.end65.i.i
  %40 = load i64, i64* %size.addr.i11.i, align 8, !dbg !6360
  %cmp69.i.i = icmp ule i64 %40, 4194304, !dbg !6362
  br i1 %cmp69.i.i, label %if.then70.i.i, label %if.end71.i.i, !dbg !6363

if.then70.i.i:                                    ; preds = %if.end68.i.i
  store i32 22, i32* %retval.i.i, align 4, !dbg !6364
  br label %kmalloc_index.exit.i, !dbg !6364

if.end71.i.i:                                     ; preds = %if.end68.i.i
  %41 = load i64, i64* %size.addr.i11.i, align 8, !dbg !6365
  %cmp72.i.i = icmp ule i64 %41, 8388608, !dbg !6367
  br i1 %cmp72.i.i, label %if.then73.i.i, label %if.end74.i.i, !dbg !6368

if.then73.i.i:                                    ; preds = %if.end71.i.i
  store i32 23, i32* %retval.i.i, align 4, !dbg !6369
  br label %kmalloc_index.exit.i, !dbg !6369

if.end74.i.i:                                     ; preds = %if.end71.i.i
  %42 = load i64, i64* %size.addr.i11.i, align 8, !dbg !6370
  %cmp75.i.i = icmp ule i64 %42, 16777216, !dbg !6372
  br i1 %cmp75.i.i, label %if.then76.i.i, label %if.end77.i.i, !dbg !6373

if.then76.i.i:                                    ; preds = %if.end74.i.i
  store i32 24, i32* %retval.i.i, align 4, !dbg !6374
  br label %kmalloc_index.exit.i, !dbg !6374

if.end77.i.i:                                     ; preds = %if.end74.i.i
  %43 = load i64, i64* %size.addr.i11.i, align 8, !dbg !6375
  %cmp78.i.i = icmp ule i64 %43, 33554432, !dbg !6377
  br i1 %cmp78.i.i, label %if.then79.i.i, label %if.end80.i.i, !dbg !6378

if.then79.i.i:                                    ; preds = %if.end77.i.i
  store i32 25, i32* %retval.i.i, align 4, !dbg !6379
  br label %kmalloc_index.exit.i, !dbg !6379

if.end80.i.i:                                     ; preds = %if.end77.i.i
  %44 = load i64, i64* %size.addr.i11.i, align 8, !dbg !6380
  %cmp81.i.i = icmp ule i64 %44, 67108864, !dbg !6382
  br i1 %cmp81.i.i, label %if.then82.i.i, label %if.end83.i.i, !dbg !6383

if.then82.i.i:                                    ; preds = %if.end80.i.i
  store i32 26, i32* %retval.i.i, align 4, !dbg !6384
  br label %kmalloc_index.exit.i, !dbg !6384

if.end83.i.i:                                     ; preds = %if.end80.i.i
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8, i64 0, i64 0), i32 382, i32 0, i64 12) #7, !dbg !6385, !srcloc !6388
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.unreachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 107) #7, !dbg !6389, !srcloc !6392
  unreachable, !dbg !6393

kmalloc_index.exit.i:                             ; preds = %if.then82.i.i, %if.then79.i.i, %if.then76.i.i, %if.then73.i.i, %if.then70.i.i, %if.then67.i.i, %if.then64.i.i, %if.then61.i.i, %if.then58.i.i, %if.then55.i.i, %if.then52.i.i, %if.then49.i.i, %if.then46.i.i, %if.then43.i.i, %if.then40.i.i, %if.then37.i.i, %if.then34.i.i, %if.then31.i.i, %if.then28.i.i, %if.then25.i.i, %if.then22.i.i, %if.then19.i.i, %if.then16.i.i, %if.then13.i.i, %if.then10.i.i, %if.then5.i.i, %if.then1.i.i, %if.then.i.i
  %45 = load i32, i32* %retval.i.i, align 4, !dbg !6394
  store i32 %45, i32* %index.i, align 4, !dbg !6395
  %46 = load i32, i32* %index.i, align 4, !dbg !6396
  %tobool.i = icmp ne i32 %46, 0, !dbg !6396
  br i1 %tobool.i, label %if.end4.i, label %if.then3.i, !dbg !6398

if.then3.i:                                       ; preds = %kmalloc_index.exit.i
  store i8* inttoptr (i64 16 to i8*), i8** %retval.i, align 8, !dbg !6399
  br label %kmalloc.exit, !dbg !6399

if.end4.i:                                        ; preds = %kmalloc_index.exit.i
  %47 = load i32, i32* %flags.addr.i, align 4, !dbg !6400
  store i32 %47, i32* %flags.addr.i13.i, align 4
  %48 = load i32, i32* %flags.addr.i13.i, align 4, !dbg !6401
  %and.i.i = and i32 %48, 17, !dbg !6401
  %cmp.i14.i = icmp eq i32 %and.i.i, 0, !dbg !6401
  %lnot.i.i = xor i1 %cmp.i14.i, true, !dbg !6401
  %lnot.ext.i.i = zext i1 %cmp.i14.i to i32, !dbg !6401
  %conv.i.i = sext i32 %lnot.ext.i.i to i64, !dbg !6401
  br i1 %cmp.i14.i, label %if.then.i15.i, label %if.end.i16.i, !dbg !6403

if.then.i15.i:                                    ; preds = %if.end4.i
  store i32 0, i32* %retval.i12.i, align 4, !dbg !6404
  br label %kmalloc_type.exit.i, !dbg !6404

if.end.i16.i:                                     ; preds = %if.end4.i
  %49 = load i32, i32* %flags.addr.i13.i, align 4, !dbg !6405
  %and2.i.i = and i32 %49, 1, !dbg !6406
  %tobool3.i.i = icmp ne i32 %and2.i.i, 0, !dbg !6405
  %50 = zext i1 %tobool3.i.i to i64, !dbg !6405
  %cond.i.i = select i1 %tobool3.i.i, i32 2, i32 1, !dbg !6405
  store i32 %cond.i.i, i32* %retval.i12.i, align 4, !dbg !6407
  br label %kmalloc_type.exit.i, !dbg !6407

kmalloc_type.exit.i:                              ; preds = %if.end.i16.i, %if.then.i15.i
  %51 = load i32, i32* %retval.i12.i, align 4, !dbg !6408
  %idxprom.i = zext i32 %51 to i64, !dbg !6409
  %arrayidx.i = getelementptr [3 x [14 x %struct.kmem_cache*]], [3 x [14 x %struct.kmem_cache*]]* @kmalloc_caches, i64 0, i64 %idxprom.i, !dbg !6409
  %52 = load i32, i32* %index.i, align 4, !dbg !6410
  %idxprom6.i = zext i32 %52 to i64, !dbg !6409
  %arrayidx7.i = getelementptr [14 x %struct.kmem_cache*], [14 x %struct.kmem_cache*]* %arrayidx.i, i64 0, i64 %idxprom6.i, !dbg !6409
  %53 = load %struct.kmem_cache*, %struct.kmem_cache** %arrayidx7.i, align 8, !dbg !6409
  %54 = load i32, i32* %flags.addr.i, align 4, !dbg !6411
  %55 = load i64, i64* %size.addr.i, align 8, !dbg !6412
  store %struct.kmem_cache* %53, %struct.kmem_cache** %s.addr.i.i, align 8
  store i32 %54, i32* %flags.addr.i17.i, align 4
  store i64 %55, i64* %size.addr.i18.i, align 8
  %56 = load %struct.kmem_cache*, %struct.kmem_cache** %s.addr.i.i, align 8, !dbg !6413
  %57 = load i32, i32* %flags.addr.i17.i, align 4, !dbg !6414
  %call.i19.i = call noalias i8* @kmem_cache_alloc(%struct.kmem_cache* %56, i32 %57) #12, !dbg !6415
  %ptrint.i.i = ptrtoint i8* %call.i19.i to i64, !dbg !6415
  %maskedptr.i.i = and i64 %ptrint.i.i, 7, !dbg !6415
  %maskcond.i.i = icmp eq i64 %maskedptr.i.i, 0, !dbg !6415
  call void @llvm.assume(i1 %maskcond.i.i) #7, !dbg !6415
  store i8* %call.i19.i, i8** %ret.i.i, align 8, !dbg !6176
  %58 = load %struct.kmem_cache*, %struct.kmem_cache** %s.addr.i.i, align 8, !dbg !6416
  %59 = load i8*, i8** %ret.i.i, align 8, !dbg !6417
  %60 = load i64, i64* %size.addr.i18.i, align 8, !dbg !6418
  %61 = load i32, i32* %flags.addr.i17.i, align 4, !dbg !6419
  %call1.i.i = call i8* @kasan_kmalloc(%struct.kmem_cache* %58, i8* %59, i64 %60, i32 %61) #12, !dbg !6420
  store i8* %call1.i.i, i8** %ret.i.i, align 8, !dbg !6421
  %62 = load i8*, i8** %ret.i.i, align 8, !dbg !6422
  store i8* %62, i8** %retval.i, align 8, !dbg !6423
  br label %kmalloc.exit, !dbg !6423

if.end9.i:                                        ; preds = %entry
  %63 = load i64, i64* %size.addr.i, align 8, !dbg !6424
  %64 = load i32, i32* %flags.addr.i, align 4, !dbg !6425
  %call10.i = call noalias i8* @__kmalloc(i64 %63, i32 %64) #12, !dbg !6426
  %ptrint.i = ptrtoint i8* %call10.i to i64, !dbg !6426
  %maskedptr.i = and i64 %ptrint.i, 7, !dbg !6426
  %maskcond.i = icmp eq i64 %maskedptr.i, 0, !dbg !6426
  call void @llvm.assume(i1 %maskcond.i) #7, !dbg !6426
  store i8* %call10.i, i8** %retval.i, align 8, !dbg !6427
  br label %kmalloc.exit, !dbg !6427

kmalloc.exit:                                     ; preds = %if.then1.i, %if.then3.i, %kmalloc_type.exit.i, %if.end9.i
  %65 = load i8*, i8** %retval.i, align 8, !dbg !6428
  ret i8* %65, !dbg !6429
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @kref_init(%struct.kref* %kref) #0 !dbg !6430 {
entry:
  %kref.addr = alloca %struct.kref*, align 8
  store %struct.kref* %kref, %struct.kref** %kref.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.kref** %kref.addr, metadata !6434, metadata !DIExpression()), !dbg !6435
  %0 = load %struct.kref*, %struct.kref** %kref.addr, align 8, !dbg !6436
  %refcount = getelementptr inbounds %struct.kref, %struct.kref* %0, i32 0, i32 0, !dbg !6437
  call void @refcount_set(%struct.refcount_struct* %refcount, i32 1) #11, !dbg !6438
  ret void, !dbg !6439
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @list_add(%struct.list_head* %new, %struct.list_head* %head) #0 !dbg !6440 {
entry:
  %new.addr = alloca %struct.list_head*, align 8
  %head.addr = alloca %struct.list_head*, align 8
  store %struct.list_head* %new, %struct.list_head** %new.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %new.addr, metadata !6444, metadata !DIExpression()), !dbg !6445
  store %struct.list_head* %head, %struct.list_head** %head.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %head.addr, metadata !6446, metadata !DIExpression()), !dbg !6447
  %0 = load %struct.list_head*, %struct.list_head** %new.addr, align 8, !dbg !6448
  %1 = load %struct.list_head*, %struct.list_head** %head.addr, align 8, !dbg !6449
  %2 = load %struct.list_head*, %struct.list_head** %head.addr, align 8, !dbg !6450
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %2, i32 0, i32 0, !dbg !6451
  %3 = load %struct.list_head*, %struct.list_head** %next, align 8, !dbg !6451
  call void @__list_add(%struct.list_head* %0, %struct.list_head* %1, %struct.list_head* %3) #11, !dbg !6452
  ret void, !dbg !6453
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @acpi_ec_remove_query_handler(%struct.acpi_ec* %ec, i8 zeroext %query_bit) #0 !dbg !6454 {
entry:
  %ec.addr = alloca %struct.acpi_ec*, align 8
  %query_bit.addr = alloca i8, align 1
  store %struct.acpi_ec* %ec, %struct.acpi_ec** %ec.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.acpi_ec** %ec.addr, metadata !6457, metadata !DIExpression()), !dbg !6458
  store i8 %query_bit, i8* %query_bit.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %query_bit.addr, metadata !6459, metadata !DIExpression()), !dbg !6460
  %0 = load %struct.acpi_ec*, %struct.acpi_ec** %ec.addr, align 8, !dbg !6461
  %1 = load i8, i8* %query_bit.addr, align 1, !dbg !6462
  call void @acpi_ec_remove_query_handlers(%struct.acpi_ec* %0, i1 zeroext false, i8 zeroext %1) #11, !dbg !6463
  ret void, !dbg !6464
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @acpi_ec_remove_query_handlers(%struct.acpi_ec* %ec, i1 zeroext %remove_all, i8 zeroext %query_bit) #0 !dbg !6465 {
entry:
  %ec.addr = alloca %struct.acpi_ec*, align 8
  %remove_all.addr = alloca i8, align 1
  %query_bit.addr = alloca i8, align 1
  %handler = alloca %struct.acpi_ec_query_handler*, align 8
  %tmp = alloca %struct.acpi_ec_query_handler*, align 8
  %free_list = alloca %struct.list_head, align 8
  %__mptr = alloca i8*, align 8
  %tmp2 = alloca %struct.acpi_ec_query_handler*, align 8
  %__mptr3 = alloca i8*, align 8
  %tmp7 = alloca %struct.acpi_ec_query_handler*, align 8
  %__mptr17 = alloca i8*, align 8
  %tmp22 = alloca %struct.acpi_ec_query_handler*, align 8
  %__mptr25 = alloca i8*, align 8
  %tmp29 = alloca %struct.acpi_ec_query_handler*, align 8
  %__mptr31 = alloca i8*, align 8
  %tmp36 = alloca %struct.acpi_ec_query_handler*, align 8
  %__mptr45 = alloca i8*, align 8
  %tmp50 = alloca %struct.acpi_ec_query_handler*, align 8
  store %struct.acpi_ec* %ec, %struct.acpi_ec** %ec.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.acpi_ec** %ec.addr, metadata !6468, metadata !DIExpression()), !dbg !6469
  %frombool = zext i1 %remove_all to i8
  store i8 %frombool, i8* %remove_all.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %remove_all.addr, metadata !6470, metadata !DIExpression()), !dbg !6471
  store i8 %query_bit, i8* %query_bit.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %query_bit.addr, metadata !6472, metadata !DIExpression()), !dbg !6473
  call void @llvm.dbg.declare(metadata %struct.acpi_ec_query_handler** %handler, metadata !6474, metadata !DIExpression()), !dbg !6475
  call void @llvm.dbg.declare(metadata %struct.acpi_ec_query_handler** %tmp, metadata !6476, metadata !DIExpression()), !dbg !6477
  call void @llvm.dbg.declare(metadata %struct.list_head* %free_list, metadata !6478, metadata !DIExpression()), !dbg !6479
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %free_list, i32 0, i32 0, !dbg !6479
  store %struct.list_head* %free_list, %struct.list_head** %next, align 8, !dbg !6479
  %prev = getelementptr inbounds %struct.list_head, %struct.list_head* %free_list, i32 0, i32 1, !dbg !6479
  store %struct.list_head* %free_list, %struct.list_head** %prev, align 8, !dbg !6479
  %0 = load %struct.acpi_ec*, %struct.acpi_ec** %ec.addr, align 8, !dbg !6480
  %mutex = getelementptr inbounds %struct.acpi_ec, %struct.acpi_ec* %0, i32 0, i32 8, !dbg !6481
  call void @mutex_lock(%struct.mutex* %mutex) #11, !dbg !6482
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !6483, metadata !DIExpression()), !dbg !6486
  %1 = load %struct.acpi_ec*, %struct.acpi_ec** %ec.addr, align 8, !dbg !6486
  %list = getelementptr inbounds %struct.acpi_ec, %struct.acpi_ec* %1, i32 0, i32 10, !dbg !6486
  %next1 = getelementptr inbounds %struct.list_head, %struct.list_head* %list, i32 0, i32 0, !dbg !6486
  %2 = load %struct.list_head*, %struct.list_head** %next1, align 8, !dbg !6486
  %3 = bitcast %struct.list_head* %2 to i8*, !dbg !6486
  store i8* %3, i8** %__mptr, align 8, !dbg !6486
  br label %do.body, !dbg !6486

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !6487

do.end:                                           ; preds = %do.body
  %4 = load i8*, i8** %__mptr, align 8, !dbg !6486
  %add.ptr = getelementptr i8, i8* %4, i64 0, !dbg !6486
  %5 = bitcast i8* %add.ptr to %struct.acpi_ec_query_handler*, !dbg !6486
  store %struct.acpi_ec_query_handler* %5, %struct.acpi_ec_query_handler** %tmp2, align 8, !dbg !6487
  %6 = load %struct.acpi_ec_query_handler*, %struct.acpi_ec_query_handler** %tmp2, align 8, !dbg !6486
  store %struct.acpi_ec_query_handler* %6, %struct.acpi_ec_query_handler** %handler, align 8, !dbg !6489
  call void @llvm.dbg.declare(metadata i8** %__mptr3, metadata !6490, metadata !DIExpression()), !dbg !6492
  %7 = load %struct.acpi_ec_query_handler*, %struct.acpi_ec_query_handler** %handler, align 8, !dbg !6492
  %node = getelementptr inbounds %struct.acpi_ec_query_handler, %struct.acpi_ec_query_handler* %7, i32 0, i32 0, !dbg !6492
  %next4 = getelementptr inbounds %struct.list_head, %struct.list_head* %node, i32 0, i32 0, !dbg !6492
  %8 = load %struct.list_head*, %struct.list_head** %next4, align 8, !dbg !6492
  %9 = bitcast %struct.list_head* %8 to i8*, !dbg !6492
  store i8* %9, i8** %__mptr3, align 8, !dbg !6492
  br label %do.body5, !dbg !6492

do.body5:                                         ; preds = %do.end
  br label %do.end6, !dbg !6493

do.end6:                                          ; preds = %do.body5
  %10 = load i8*, i8** %__mptr3, align 8, !dbg !6492
  %add.ptr8 = getelementptr i8, i8* %10, i64 0, !dbg !6492
  %11 = bitcast i8* %add.ptr8 to %struct.acpi_ec_query_handler*, !dbg !6492
  store %struct.acpi_ec_query_handler* %11, %struct.acpi_ec_query_handler** %tmp7, align 8, !dbg !6493
  %12 = load %struct.acpi_ec_query_handler*, %struct.acpi_ec_query_handler** %tmp7, align 8, !dbg !6492
  store %struct.acpi_ec_query_handler* %12, %struct.acpi_ec_query_handler** %tmp, align 8, !dbg !6489
  br label %for.cond, !dbg !6489

for.cond:                                         ; preds = %do.end21, %do.end6
  %13 = load %struct.acpi_ec_query_handler*, %struct.acpi_ec_query_handler** %handler, align 8, !dbg !6495
  %node9 = getelementptr inbounds %struct.acpi_ec_query_handler, %struct.acpi_ec_query_handler* %13, i32 0, i32 0, !dbg !6495
  %14 = load %struct.acpi_ec*, %struct.acpi_ec** %ec.addr, align 8, !dbg !6495
  %list10 = getelementptr inbounds %struct.acpi_ec, %struct.acpi_ec* %14, i32 0, i32 10, !dbg !6495
  %cmp = icmp eq %struct.list_head* %node9, %list10, !dbg !6495
  %lnot = xor i1 %cmp, true, !dbg !6495
  br i1 %lnot, label %for.body, label %for.end, !dbg !6489

for.body:                                         ; preds = %for.cond
  %15 = load i8, i8* %remove_all.addr, align 1, !dbg !6497
  %tobool = trunc i8 %15 to i1, !dbg !6497
  br i1 %tobool, label %if.then, label %lor.lhs.false, !dbg !6500

lor.lhs.false:                                    ; preds = %for.body
  %16 = load i8, i8* %query_bit.addr, align 1, !dbg !6501
  %conv = zext i8 %16 to i32, !dbg !6501
  %17 = load %struct.acpi_ec_query_handler*, %struct.acpi_ec_query_handler** %handler, align 8, !dbg !6502
  %query_bit11 = getelementptr inbounds %struct.acpi_ec_query_handler, %struct.acpi_ec_query_handler* %17, i32 0, i32 4, !dbg !6503
  %18 = load i8, i8* %query_bit11, align 8, !dbg !6503
  %conv12 = zext i8 %18 to i32, !dbg !6502
  %cmp13 = icmp eq i32 %conv, %conv12, !dbg !6504
  br i1 %cmp13, label %if.then, label %if.end, !dbg !6505

if.then:                                          ; preds = %lor.lhs.false, %for.body
  %19 = load %struct.acpi_ec_query_handler*, %struct.acpi_ec_query_handler** %handler, align 8, !dbg !6506
  %node15 = getelementptr inbounds %struct.acpi_ec_query_handler, %struct.acpi_ec_query_handler* %19, i32 0, i32 0, !dbg !6508
  call void @list_del_init(%struct.list_head* %node15) #11, !dbg !6509
  %20 = load %struct.acpi_ec_query_handler*, %struct.acpi_ec_query_handler** %handler, align 8, !dbg !6510
  %node16 = getelementptr inbounds %struct.acpi_ec_query_handler, %struct.acpi_ec_query_handler* %20, i32 0, i32 0, !dbg !6511
  call void @list_add(%struct.list_head* %node16, %struct.list_head* %free_list) #11, !dbg !6512
  br label %if.end, !dbg !6513

if.end:                                           ; preds = %if.then, %lor.lhs.false
  br label %for.inc, !dbg !6514

for.inc:                                          ; preds = %if.end
  %21 = load %struct.acpi_ec_query_handler*, %struct.acpi_ec_query_handler** %tmp, align 8, !dbg !6495
  store %struct.acpi_ec_query_handler* %21, %struct.acpi_ec_query_handler** %handler, align 8, !dbg !6495
  call void @llvm.dbg.declare(metadata i8** %__mptr17, metadata !6515, metadata !DIExpression()), !dbg !6517
  %22 = load %struct.acpi_ec_query_handler*, %struct.acpi_ec_query_handler** %tmp, align 8, !dbg !6517
  %node18 = getelementptr inbounds %struct.acpi_ec_query_handler, %struct.acpi_ec_query_handler* %22, i32 0, i32 0, !dbg !6517
  %next19 = getelementptr inbounds %struct.list_head, %struct.list_head* %node18, i32 0, i32 0, !dbg !6517
  %23 = load %struct.list_head*, %struct.list_head** %next19, align 8, !dbg !6517
  %24 = bitcast %struct.list_head* %23 to i8*, !dbg !6517
  store i8* %24, i8** %__mptr17, align 8, !dbg !6517
  br label %do.body20, !dbg !6517

do.body20:                                        ; preds = %for.inc
  br label %do.end21, !dbg !6518

do.end21:                                         ; preds = %do.body20
  %25 = load i8*, i8** %__mptr17, align 8, !dbg !6517
  %add.ptr23 = getelementptr i8, i8* %25, i64 0, !dbg !6517
  %26 = bitcast i8* %add.ptr23 to %struct.acpi_ec_query_handler*, !dbg !6517
  store %struct.acpi_ec_query_handler* %26, %struct.acpi_ec_query_handler** %tmp22, align 8, !dbg !6518
  %27 = load %struct.acpi_ec_query_handler*, %struct.acpi_ec_query_handler** %tmp22, align 8, !dbg !6517
  store %struct.acpi_ec_query_handler* %27, %struct.acpi_ec_query_handler** %tmp, align 8, !dbg !6495
  br label %for.cond, !dbg !6495, !llvm.loop !6520

for.end:                                          ; preds = %for.cond
  %28 = load %struct.acpi_ec*, %struct.acpi_ec** %ec.addr, align 8, !dbg !6522
  %mutex24 = getelementptr inbounds %struct.acpi_ec, %struct.acpi_ec* %28, i32 0, i32 8, !dbg !6523
  call void @mutex_unlock(%struct.mutex* %mutex24) #11, !dbg !6524
  call void @llvm.dbg.declare(metadata i8** %__mptr25, metadata !6525, metadata !DIExpression()), !dbg !6528
  %next26 = getelementptr inbounds %struct.list_head, %struct.list_head* %free_list, i32 0, i32 0, !dbg !6528
  %29 = load %struct.list_head*, %struct.list_head** %next26, align 8, !dbg !6528
  %30 = bitcast %struct.list_head* %29 to i8*, !dbg !6528
  store i8* %30, i8** %__mptr25, align 8, !dbg !6528
  br label %do.body27, !dbg !6528

do.body27:                                        ; preds = %for.end
  br label %do.end28, !dbg !6529

do.end28:                                         ; preds = %do.body27
  %31 = load i8*, i8** %__mptr25, align 8, !dbg !6528
  %add.ptr30 = getelementptr i8, i8* %31, i64 0, !dbg !6528
  %32 = bitcast i8* %add.ptr30 to %struct.acpi_ec_query_handler*, !dbg !6528
  store %struct.acpi_ec_query_handler* %32, %struct.acpi_ec_query_handler** %tmp29, align 8, !dbg !6529
  %33 = load %struct.acpi_ec_query_handler*, %struct.acpi_ec_query_handler** %tmp29, align 8, !dbg !6528
  store %struct.acpi_ec_query_handler* %33, %struct.acpi_ec_query_handler** %handler, align 8, !dbg !6531
  call void @llvm.dbg.declare(metadata i8** %__mptr31, metadata !6532, metadata !DIExpression()), !dbg !6534
  %34 = load %struct.acpi_ec_query_handler*, %struct.acpi_ec_query_handler** %handler, align 8, !dbg !6534
  %node32 = getelementptr inbounds %struct.acpi_ec_query_handler, %struct.acpi_ec_query_handler* %34, i32 0, i32 0, !dbg !6534
  %next33 = getelementptr inbounds %struct.list_head, %struct.list_head* %node32, i32 0, i32 0, !dbg !6534
  %35 = load %struct.list_head*, %struct.list_head** %next33, align 8, !dbg !6534
  %36 = bitcast %struct.list_head* %35 to i8*, !dbg !6534
  store i8* %36, i8** %__mptr31, align 8, !dbg !6534
  br label %do.body34, !dbg !6534

do.body34:                                        ; preds = %do.end28
  br label %do.end35, !dbg !6535

do.end35:                                         ; preds = %do.body34
  %37 = load i8*, i8** %__mptr31, align 8, !dbg !6534
  %add.ptr37 = getelementptr i8, i8* %37, i64 0, !dbg !6534
  %38 = bitcast i8* %add.ptr37 to %struct.acpi_ec_query_handler*, !dbg !6534
  store %struct.acpi_ec_query_handler* %38, %struct.acpi_ec_query_handler** %tmp36, align 8, !dbg !6535
  %39 = load %struct.acpi_ec_query_handler*, %struct.acpi_ec_query_handler** %tmp36, align 8, !dbg !6534
  store %struct.acpi_ec_query_handler* %39, %struct.acpi_ec_query_handler** %tmp, align 8, !dbg !6531
  br label %for.cond38, !dbg !6531

for.cond38:                                       ; preds = %do.end49, %do.end35
  %40 = load %struct.acpi_ec_query_handler*, %struct.acpi_ec_query_handler** %handler, align 8, !dbg !6537
  %node39 = getelementptr inbounds %struct.acpi_ec_query_handler, %struct.acpi_ec_query_handler* %40, i32 0, i32 0, !dbg !6537
  %cmp40 = icmp eq %struct.list_head* %node39, %free_list, !dbg !6537
  %lnot42 = xor i1 %cmp40, true, !dbg !6537
  br i1 %lnot42, label %for.body43, label %for.end52, !dbg !6531

for.body43:                                       ; preds = %for.cond38
  %41 = load %struct.acpi_ec_query_handler*, %struct.acpi_ec_query_handler** %handler, align 8, !dbg !6539
  call void @acpi_ec_put_query_handler(%struct.acpi_ec_query_handler* %41) #11, !dbg !6540
  br label %for.inc44, !dbg !6540

for.inc44:                                        ; preds = %for.body43
  %42 = load %struct.acpi_ec_query_handler*, %struct.acpi_ec_query_handler** %tmp, align 8, !dbg !6537
  store %struct.acpi_ec_query_handler* %42, %struct.acpi_ec_query_handler** %handler, align 8, !dbg !6537
  call void @llvm.dbg.declare(metadata i8** %__mptr45, metadata !6541, metadata !DIExpression()), !dbg !6543
  %43 = load %struct.acpi_ec_query_handler*, %struct.acpi_ec_query_handler** %tmp, align 8, !dbg !6543
  %node46 = getelementptr inbounds %struct.acpi_ec_query_handler, %struct.acpi_ec_query_handler* %43, i32 0, i32 0, !dbg !6543
  %next47 = getelementptr inbounds %struct.list_head, %struct.list_head* %node46, i32 0, i32 0, !dbg !6543
  %44 = load %struct.list_head*, %struct.list_head** %next47, align 8, !dbg !6543
  %45 = bitcast %struct.list_head* %44 to i8*, !dbg !6543
  store i8* %45, i8** %__mptr45, align 8, !dbg !6543
  br label %do.body48, !dbg !6543

do.body48:                                        ; preds = %for.inc44
  br label %do.end49, !dbg !6544

do.end49:                                         ; preds = %do.body48
  %46 = load i8*, i8** %__mptr45, align 8, !dbg !6543
  %add.ptr51 = getelementptr i8, i8* %46, i64 0, !dbg !6543
  %47 = bitcast i8* %add.ptr51 to %struct.acpi_ec_query_handler*, !dbg !6543
  store %struct.acpi_ec_query_handler* %47, %struct.acpi_ec_query_handler** %tmp50, align 8, !dbg !6544
  %48 = load %struct.acpi_ec_query_handler*, %struct.acpi_ec_query_handler** %tmp50, align 8, !dbg !6543
  store %struct.acpi_ec_query_handler* %48, %struct.acpi_ec_query_handler** %tmp, align 8, !dbg !6537
  br label %for.cond38, !dbg !6537, !llvm.loop !6546

for.end52:                                        ; preds = %for.cond38
  ret void, !dbg !6548
}

; Function Attrs: cold noinline noredzone nounwind optnone sspstrong
define dso_local void @acpi_ec_dsdt_probe() #3 section ".init.text" !dbg !6549 {
entry:
  %ec = alloca %struct.acpi_ec*, align 8
  %status = alloca i32, align 4
  %ret = alloca i32, align 4
  call void @llvm.dbg.declare(metadata %struct.acpi_ec** %ec, metadata !6550, metadata !DIExpression()), !dbg !6551
  call void @llvm.dbg.declare(metadata i32* %status, metadata !6552, metadata !DIExpression()), !dbg !6553
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !6554, metadata !DIExpression()), !dbg !6555
  %0 = load %struct.acpi_ec*, %struct.acpi_ec** @boot_ec, align 8, !dbg !6556
  %tobool = icmp ne %struct.acpi_ec* %0, null, !dbg !6556
  br i1 %tobool, label %if.then, label %if.end, !dbg !6558

if.then:                                          ; preds = %entry
  br label %return, !dbg !6559

if.end:                                           ; preds = %entry
  %call = call %struct.acpi_ec* @acpi_ec_alloc() #11, !dbg !6560
  store %struct.acpi_ec* %call, %struct.acpi_ec** %ec, align 8, !dbg !6561
  %1 = load %struct.acpi_ec*, %struct.acpi_ec** %ec, align 8, !dbg !6562
  %tobool1 = icmp ne %struct.acpi_ec* %1, null, !dbg !6562
  br i1 %tobool1, label %if.end3, label %if.then2, !dbg !6564

if.then2:                                         ; preds = %if.end
  br label %return, !dbg !6565

if.end3:                                          ; preds = %if.end
  %2 = load %struct.acpi_ec*, %struct.acpi_ec** %ec, align 8, !dbg !6566
  %3 = bitcast %struct.acpi_ec* %2 to i8*, !dbg !6566
  %call4 = call i32 @acpi_get_devices(i8* getelementptr inbounds ([3 x %struct.acpi_device_id], [3 x %struct.acpi_device_id]* @ec_device_ids, i64 0, i64 0, i32 0, i64 0), i32 (i8*, i32, i8*, i8**)* @ec_parse_device, i8* %3, i8** null) #11, !dbg !6567
  store i32 %call4, i32* %status, align 4, !dbg !6568
  %4 = load i32, i32* %status, align 4, !dbg !6569
  %tobool5 = icmp ne i32 %4, 0, !dbg !6569
  br i1 %tobool5, label %if.then7, label %lor.lhs.false, !dbg !6571

lor.lhs.false:                                    ; preds = %if.end3
  %5 = load %struct.acpi_ec*, %struct.acpi_ec** %ec, align 8, !dbg !6572
  %handle = getelementptr inbounds %struct.acpi_ec, %struct.acpi_ec* %5, i32 0, i32 0, !dbg !6573
  %6 = load i8*, i8** %handle, align 8, !dbg !6573
  %tobool6 = icmp ne i8* %6, null, !dbg !6572
  br i1 %tobool6, label %if.end8, label %if.then7, !dbg !6574

if.then7:                                         ; preds = %lor.lhs.false, %if.end3
  %7 = load %struct.acpi_ec*, %struct.acpi_ec** %ec, align 8, !dbg !6575
  call void @acpi_ec_free(%struct.acpi_ec* %7) #11, !dbg !6577
  br label %return, !dbg !6578

if.end8:                                          ; preds = %lor.lhs.false
  %8 = load %struct.acpi_ec*, %struct.acpi_ec** %ec, align 8, !dbg !6579
  %call9 = call i32 @acpi_ec_setup(%struct.acpi_ec* %8, %struct.acpi_device* null) #11, !dbg !6580
  store i32 %call9, i32* %ret, align 4, !dbg !6581
  %9 = load i32, i32* %ret, align 4, !dbg !6582
  %tobool10 = icmp ne i32 %9, 0, !dbg !6582
  br i1 %tobool10, label %if.then11, label %if.end12, !dbg !6584

if.then11:                                        ; preds = %if.end8
  %10 = load %struct.acpi_ec*, %struct.acpi_ec** %ec, align 8, !dbg !6585
  call void @acpi_ec_free(%struct.acpi_ec* %10) #11, !dbg !6587
  br label %return, !dbg !6588

if.end12:                                         ; preds = %if.end8
  %11 = load %struct.acpi_ec*, %struct.acpi_ec** %ec, align 8, !dbg !6589
  store %struct.acpi_ec* %11, %struct.acpi_ec** @boot_ec, align 8, !dbg !6590
  %12 = load %struct.acpi_ec*, %struct.acpi_ec** %ec, align 8, !dbg !6591
  %handle13 = getelementptr inbounds %struct.acpi_ec, %struct.acpi_ec* %12, i32 0, i32 0, !dbg !6591
  %13 = load i8*, i8** %handle13, align 8, !dbg !6591
  call void (i8*, i8*, i8*, ...) @acpi_handle_printk(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i64 0, i64 0), i8* %13, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.1, i64 0, i64 0)) #11, !dbg !6591
  br label %return, !dbg !6592

return:                                           ; preds = %if.end12, %if.then11, %if.then7, %if.then2, %if.then
  ret void, !dbg !6592
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.acpi_ec* @acpi_ec_alloc() #0 !dbg !5559 {
entry:
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !5860, metadata !DIExpression()), !dbg !6593
  %retval = alloca %struct.acpi_ec*, align 8
  %ec = alloca %struct.acpi_ec*, align 8
  %.compoundliteral = alloca %struct.spinlock, align 1
  %.compoundliteral9 = alloca %struct.atomic64_t, align 8
  call void @llvm.dbg.declare(metadata %struct.acpi_ec** %ec, metadata !6596, metadata !DIExpression()), !dbg !6597
  %call = call i8* @kzalloc(i64 176, i32 3264) #11, !dbg !6598
  %0 = bitcast i8* %call to %struct.acpi_ec*, !dbg !6598
  store %struct.acpi_ec* %0, %struct.acpi_ec** %ec, align 8, !dbg !6597
  %1 = load %struct.acpi_ec*, %struct.acpi_ec** %ec, align 8, !dbg !6599
  %tobool = icmp ne %struct.acpi_ec* %1, null, !dbg !6599
  br i1 %tobool, label %if.end, label %if.then, !dbg !6601

if.then:                                          ; preds = %entry
  store %struct.acpi_ec* null, %struct.acpi_ec** %retval, align 8, !dbg !6602
  br label %return, !dbg !6602

if.end:                                           ; preds = %entry
  br label %do.body, !dbg !6603

do.body:                                          ; preds = %if.end
  %2 = load %struct.acpi_ec*, %struct.acpi_ec** %ec, align 8, !dbg !6604
  %mutex = getelementptr inbounds %struct.acpi_ec, %struct.acpi_ec* %2, i32 0, i32 8, !dbg !6604
  call void @__mutex_init(%struct.mutex* %mutex, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.9, i64 0, i64 0), %struct.lock_class_key* @acpi_ec_alloc.__key) #11, !dbg !6604
  br label %do.end, !dbg !6604

do.end:                                           ; preds = %do.body
  br label %do.body1, !dbg !6606

do.body1:                                         ; preds = %do.end
  %3 = load %struct.acpi_ec*, %struct.acpi_ec** %ec, align 8, !dbg !6607
  %wait = getelementptr inbounds %struct.acpi_ec, %struct.acpi_ec* %3, i32 0, i32 9, !dbg !6607
  call void @__init_waitqueue_head(%struct.wait_queue_head* %wait, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.11, i64 0, i64 0), %struct.lock_class_key* @acpi_ec_alloc.__key.10) #11, !dbg !6607
  br label %do.end2, !dbg !6607

do.end2:                                          ; preds = %do.body1
  %4 = load %struct.acpi_ec*, %struct.acpi_ec** %ec, align 8, !dbg !6609
  %list = getelementptr inbounds %struct.acpi_ec, %struct.acpi_ec* %4, i32 0, i32 10, !dbg !6610
  call void @INIT_LIST_HEAD(%struct.list_head* %list) #11, !dbg !6611
  br label %do.body3, !dbg !6612

do.body3:                                         ; preds = %do.end2
  %5 = load %struct.acpi_ec*, %struct.acpi_ec** %ec, align 8, !dbg !6613
  %lock = getelementptr inbounds %struct.acpi_ec, %struct.acpi_ec* %5, i32 0, i32 12, !dbg !6613
  store %struct.spinlock* %lock, %struct.spinlock** %lock.addr.i, align 8
  %6 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !6614
  %7 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %6, i32 0, i32 0, !dbg !6615
  %rlock.i = bitcast %union.anon.0* %7 to %struct.raw_spinlock*, !dbg !6615
  %8 = load %struct.acpi_ec*, %struct.acpi_ec** %ec, align 8, !dbg !6613
  %lock5 = getelementptr inbounds %struct.acpi_ec, %struct.acpi_ec* %8, i32 0, i32 12, !dbg !6613
  %9 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %.compoundliteral, i32 0, i32 0, !dbg !6613
  %rlock = bitcast %union.anon.0* %9 to %struct.raw_spinlock*, !dbg !6613
  %10 = bitcast %struct.spinlock* %lock5 to i8*, !dbg !6613
  %11 = bitcast %struct.spinlock* %.compoundliteral to i8*, !dbg !6613
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %10, i8* align 1 %11, i64 0, i1 false), !dbg !6613
  br label %do.end6, !dbg !6613

do.end6:                                          ; preds = %do.body3
  br label %do.body7, !dbg !6616

do.body7:                                         ; preds = %do.end6
  %12 = load %struct.acpi_ec*, %struct.acpi_ec** %ec, align 8, !dbg !6617
  %work = getelementptr inbounds %struct.acpi_ec, %struct.acpi_ec* %12, i32 0, i32 13, !dbg !6617
  call void @__init_work(%struct.work_struct* %work, i32 0) #11, !dbg !6617
  %13 = load %struct.acpi_ec*, %struct.acpi_ec** %ec, align 8, !dbg !6617
  %work8 = getelementptr inbounds %struct.acpi_ec, %struct.acpi_ec* %13, i32 0, i32 13, !dbg !6617
  %data = getelementptr inbounds %struct.work_struct, %struct.work_struct* %work8, i32 0, i32 0, !dbg !6617
  %counter = getelementptr inbounds %struct.atomic64_t, %struct.atomic64_t* %.compoundliteral9, i32 0, i32 0, !dbg !6617
  store i64 68719476704, i64* %counter, align 8, !dbg !6617
  %14 = bitcast %struct.atomic64_t* %data to i8*, !dbg !6617
  %15 = bitcast %struct.atomic64_t* %.compoundliteral9 to i8*, !dbg !6617
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %14, i8* align 8 %15, i64 8, i1 false), !dbg !6617
  %16 = load %struct.acpi_ec*, %struct.acpi_ec** %ec, align 8, !dbg !6617
  %work10 = getelementptr inbounds %struct.acpi_ec, %struct.acpi_ec* %16, i32 0, i32 13, !dbg !6617
  %entry11 = getelementptr inbounds %struct.work_struct, %struct.work_struct* %work10, i32 0, i32 1, !dbg !6617
  call void @INIT_LIST_HEAD(%struct.list_head* %entry11) #11, !dbg !6617
  %17 = load %struct.acpi_ec*, %struct.acpi_ec** %ec, align 8, !dbg !6617
  %work12 = getelementptr inbounds %struct.acpi_ec, %struct.acpi_ec* %17, i32 0, i32 13, !dbg !6617
  %func = getelementptr inbounds %struct.work_struct, %struct.work_struct* %work12, i32 0, i32 2, !dbg !6617
  store void (%struct.work_struct*)* @acpi_ec_event_handler, void (%struct.work_struct*)** %func, align 8, !dbg !6617
  br label %do.end13, !dbg !6617

do.end13:                                         ; preds = %do.body7
  %18 = load volatile i64, i64* @jiffies, align 8, !dbg !6619
  %19 = load %struct.acpi_ec*, %struct.acpi_ec** %ec, align 8, !dbg !6620
  %timestamp = getelementptr inbounds %struct.acpi_ec, %struct.acpi_ec* %19, i32 0, i32 14, !dbg !6621
  store i64 %18, i64* %timestamp, align 8, !dbg !6622
  %20 = load %struct.acpi_ec*, %struct.acpi_ec** %ec, align 8, !dbg !6623
  %busy_polling = getelementptr inbounds %struct.acpi_ec, %struct.acpi_ec* %20, i32 0, i32 16, !dbg !6624
  store i8 1, i8* %busy_polling, align 8, !dbg !6625
  %21 = load %struct.acpi_ec*, %struct.acpi_ec** %ec, align 8, !dbg !6626
  %polling_guard = getelementptr inbounds %struct.acpi_ec, %struct.acpi_ec* %21, i32 0, i32 17, !dbg !6627
  store i32 0, i32* %polling_guard, align 4, !dbg !6628
  %22 = load %struct.acpi_ec*, %struct.acpi_ec** %ec, align 8, !dbg !6629
  %gpe = getelementptr inbounds %struct.acpi_ec, %struct.acpi_ec* %22, i32 0, i32 1, !dbg !6630
  store i32 -1, i32* %gpe, align 8, !dbg !6631
  %23 = load %struct.acpi_ec*, %struct.acpi_ec** %ec, align 8, !dbg !6632
  %irq = getelementptr inbounds %struct.acpi_ec, %struct.acpi_ec* %23, i32 0, i32 2, !dbg !6633
  store i32 -1, i32* %irq, align 4, !dbg !6634
  %24 = load %struct.acpi_ec*, %struct.acpi_ec** %ec, align 8, !dbg !6635
  store %struct.acpi_ec* %24, %struct.acpi_ec** %retval, align 8, !dbg !6636
  br label %return, !dbg !6636

return:                                           ; preds = %do.end13, %if.then
  %25 = load %struct.acpi_ec*, %struct.acpi_ec** %retval, align 8, !dbg !6637
  ret %struct.acpi_ec* %25, !dbg !6637
}

; Function Attrs: noredzone
declare dso_local i32 @acpi_get_devices(i8*, i32 (i8*, i32, i8*, i8**)*, i8*, i8**) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @ec_parse_device(i8* %handle, i32 %Level, i8* %context, i8** %retval1) #0 !dbg !6638 {
entry:
  %retval = alloca i32, align 4
  %handle.addr = alloca i8*, align 8
  %Level.addr = alloca i32, align 4
  %context.addr = alloca i8*, align 8
  %retval.addr = alloca i8**, align 8
  %status = alloca i32, align 4
  %tmp = alloca i64, align 8
  %ec = alloca %struct.acpi_ec*, align 8
  store i8* %handle, i8** %handle.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %handle.addr, metadata !6641, metadata !DIExpression()), !dbg !6642
  store i32 %Level, i32* %Level.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %Level.addr, metadata !6643, metadata !DIExpression()), !dbg !6644
  store i8* %context, i8** %context.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %context.addr, metadata !6645, metadata !DIExpression()), !dbg !6646
  store i8** %retval1, i8*** %retval.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %retval.addr, metadata !6647, metadata !DIExpression()), !dbg !6648
  call void @llvm.dbg.declare(metadata i32* %status, metadata !6649, metadata !DIExpression()), !dbg !6650
  call void @llvm.dbg.declare(metadata i64* %tmp, metadata !6651, metadata !DIExpression()), !dbg !6652
  store i64 0, i64* %tmp, align 8, !dbg !6652
  call void @llvm.dbg.declare(metadata %struct.acpi_ec** %ec, metadata !6653, metadata !DIExpression()), !dbg !6654
  %0 = load i8*, i8** %context.addr, align 8, !dbg !6655
  %1 = bitcast i8* %0 to %struct.acpi_ec*, !dbg !6655
  store %struct.acpi_ec* %1, %struct.acpi_ec** %ec, align 8, !dbg !6654
  %2 = load %struct.acpi_ec*, %struct.acpi_ec** %ec, align 8, !dbg !6656
  %data_addr = getelementptr inbounds %struct.acpi_ec, %struct.acpi_ec* %2, i32 0, i32 4, !dbg !6657
  store i64 0, i64* %data_addr, align 8, !dbg !6658
  %3 = load %struct.acpi_ec*, %struct.acpi_ec** %ec, align 8, !dbg !6659
  %command_addr = getelementptr inbounds %struct.acpi_ec, %struct.acpi_ec* %3, i32 0, i32 3, !dbg !6660
  store i64 0, i64* %command_addr, align 8, !dbg !6661
  %4 = load i8*, i8** %handle.addr, align 8, !dbg !6662
  %5 = load %struct.acpi_ec*, %struct.acpi_ec** %ec, align 8, !dbg !6663
  %6 = bitcast %struct.acpi_ec* %5 to i8*, !dbg !6663
  %call = call i32 @acpi_walk_resources(i8* %4, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.12, i64 0, i64 0), i32 (%struct.acpi_resource*, i8*)* @ec_parse_io_ports, i8* %6) #11, !dbg !6664
  store i32 %call, i32* %status, align 4, !dbg !6665
  %7 = load i32, i32* %status, align 4, !dbg !6666
  %tobool = icmp ne i32 %7, 0, !dbg !6666
  br i1 %tobool, label %if.then, label %if.end, !dbg !6668

if.then:                                          ; preds = %entry
  %8 = load i32, i32* %status, align 4, !dbg !6669
  store i32 %8, i32* %retval, align 4, !dbg !6670
  br label %return, !dbg !6670

if.end:                                           ; preds = %entry
  %9 = load %struct.acpi_ec*, %struct.acpi_ec** %ec, align 8, !dbg !6671
  %data_addr2 = getelementptr inbounds %struct.acpi_ec, %struct.acpi_ec* %9, i32 0, i32 4, !dbg !6673
  %10 = load i64, i64* %data_addr2, align 8, !dbg !6673
  %cmp = icmp eq i64 %10, 0, !dbg !6674
  br i1 %cmp, label %if.then5, label %lor.lhs.false, !dbg !6675

lor.lhs.false:                                    ; preds = %if.end
  %11 = load %struct.acpi_ec*, %struct.acpi_ec** %ec, align 8, !dbg !6676
  %command_addr3 = getelementptr inbounds %struct.acpi_ec, %struct.acpi_ec* %11, i32 0, i32 3, !dbg !6677
  %12 = load i64, i64* %command_addr3, align 8, !dbg !6677
  %cmp4 = icmp eq i64 %12, 0, !dbg !6678
  br i1 %cmp4, label %if.then5, label %if.end6, !dbg !6679

if.then5:                                         ; preds = %lor.lhs.false, %if.end
  store i32 0, i32* %retval, align 4, !dbg !6680
  br label %return, !dbg !6680

if.end6:                                          ; preds = %lor.lhs.false
  %13 = load %struct.acpi_ec*, %struct.acpi_ec** @boot_ec, align 8, !dbg !6681
  %tobool7 = icmp ne %struct.acpi_ec* %13, null, !dbg !6681
  br i1 %tobool7, label %land.lhs.true, label %if.else, !dbg !6683

land.lhs.true:                                    ; preds = %if.end6
  %14 = load i8, i8* @boot_ec_is_ecdt, align 1, !dbg !6684
  %tobool8 = trunc i8 %14 to i1, !dbg !6684
  br i1 %tobool8, label %land.lhs.true9, label %if.else, !dbg !6685

land.lhs.true9:                                   ; preds = %land.lhs.true
  %15 = load i32, i32* @EC_FLAGS_IGNORE_DSDT_GPE, align 4, !dbg !6686
  %tobool10 = icmp ne i32 %15, 0, !dbg !6686
  br i1 %tobool10, label %if.then11, label %if.else, !dbg !6687

if.then11:                                        ; preds = %land.lhs.true9
  %16 = load %struct.acpi_ec*, %struct.acpi_ec** @boot_ec, align 8, !dbg !6688
  %gpe = getelementptr inbounds %struct.acpi_ec, %struct.acpi_ec* %16, i32 0, i32 1, !dbg !6690
  %17 = load i32, i32* %gpe, align 8, !dbg !6690
  %18 = load %struct.acpi_ec*, %struct.acpi_ec** %ec, align 8, !dbg !6691
  %gpe12 = getelementptr inbounds %struct.acpi_ec, %struct.acpi_ec* %18, i32 0, i32 1, !dbg !6692
  store i32 %17, i32* %gpe12, align 8, !dbg !6693
  br label %if.end18, !dbg !6694

if.else:                                          ; preds = %land.lhs.true9, %land.lhs.true, %if.end6
  %19 = load i8*, i8** %handle.addr, align 8, !dbg !6695
  %call13 = call i32 @acpi_evaluate_integer(i8* %19, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.13, i64 0, i64 0), %struct.acpi_object_list* null, i64* %tmp) #11, !dbg !6697
  store i32 %call13, i32* %status, align 4, !dbg !6698
  %20 = load i32, i32* %status, align 4, !dbg !6699
  %tobool14 = icmp ne i32 %20, 0, !dbg !6699
  br i1 %tobool14, label %if.end17, label %if.then15, !dbg !6701

if.then15:                                        ; preds = %if.else
  %21 = load i64, i64* %tmp, align 8, !dbg !6702
  %conv = trunc i64 %21 to i32, !dbg !6702
  %22 = load %struct.acpi_ec*, %struct.acpi_ec** %ec, align 8, !dbg !6703
  %gpe16 = getelementptr inbounds %struct.acpi_ec, %struct.acpi_ec* %22, i32 0, i32 1, !dbg !6704
  store i32 %conv, i32* %gpe16, align 8, !dbg !6705
  br label %if.end17, !dbg !6703

if.end17:                                         ; preds = %if.then15, %if.else
  br label %if.end18

if.end18:                                         ; preds = %if.end17, %if.then11
  store i64 0, i64* %tmp, align 8, !dbg !6706
  %23 = load i8*, i8** %handle.addr, align 8, !dbg !6707
  %call19 = call i32 @acpi_evaluate_integer(i8* %23, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.14, i64 0, i64 0), %struct.acpi_object_list* null, i64* %tmp) #11, !dbg !6708
  %24 = load i64, i64* %tmp, align 8, !dbg !6709
  %tobool20 = icmp ne i64 %24, 0, !dbg !6709
  %25 = load %struct.acpi_ec*, %struct.acpi_ec** %ec, align 8, !dbg !6710
  %global_lock = getelementptr inbounds %struct.acpi_ec, %struct.acpi_ec* %25, i32 0, i32 5, !dbg !6711
  %frombool = zext i1 %tobool20 to i8, !dbg !6712
  store i8 %frombool, i8* %global_lock, align 8, !dbg !6712
  %26 = load i8*, i8** %handle.addr, align 8, !dbg !6713
  %27 = load %struct.acpi_ec*, %struct.acpi_ec** %ec, align 8, !dbg !6714
  %handle21 = getelementptr inbounds %struct.acpi_ec, %struct.acpi_ec* %27, i32 0, i32 0, !dbg !6715
  store i8* %26, i8** %handle21, align 8, !dbg !6716
  store i32 16387, i32* %retval, align 4, !dbg !6717
  br label %return, !dbg !6717

return:                                           ; preds = %if.end18, %if.then5, %if.then
  %28 = load i32, i32* %retval, align 4, !dbg !6718
  ret i32 %28, !dbg !6718
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @acpi_ec_free(%struct.acpi_ec* %ec) #0 !dbg !6719 {
entry:
  %ec.addr = alloca %struct.acpi_ec*, align 8
  store %struct.acpi_ec* %ec, %struct.acpi_ec** %ec.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.acpi_ec** %ec.addr, metadata !6722, metadata !DIExpression()), !dbg !6723
  %0 = load %struct.acpi_ec*, %struct.acpi_ec** @first_ec, align 8, !dbg !6724
  %1 = load %struct.acpi_ec*, %struct.acpi_ec** %ec.addr, align 8, !dbg !6726
  %cmp = icmp eq %struct.acpi_ec* %0, %1, !dbg !6727
  br i1 %cmp, label %if.then, label %if.end, !dbg !6728

if.then:                                          ; preds = %entry
  store %struct.acpi_ec* null, %struct.acpi_ec** @first_ec, align 8, !dbg !6729
  br label %if.end, !dbg !6730

if.end:                                           ; preds = %if.then, %entry
  %2 = load %struct.acpi_ec*, %struct.acpi_ec** @boot_ec, align 8, !dbg !6731
  %3 = load %struct.acpi_ec*, %struct.acpi_ec** %ec.addr, align 8, !dbg !6733
  %cmp1 = icmp eq %struct.acpi_ec* %2, %3, !dbg !6734
  br i1 %cmp1, label %if.then2, label %if.end3, !dbg !6735

if.then2:                                         ; preds = %if.end
  store %struct.acpi_ec* null, %struct.acpi_ec** @boot_ec, align 8, !dbg !6736
  br label %if.end3, !dbg !6737

if.end3:                                          ; preds = %if.then2, %if.end
  %4 = load %struct.acpi_ec*, %struct.acpi_ec** %ec.addr, align 8, !dbg !6738
  %5 = bitcast %struct.acpi_ec* %4 to i8*, !dbg !6738
  call void @kfree(i8* %5) #11, !dbg !6739
  ret void, !dbg !6740
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @acpi_ec_setup(%struct.acpi_ec* %ec, %struct.acpi_device* %device) #0 !dbg !6741 {
entry:
  %retval = alloca i32, align 4
  %ec.addr = alloca %struct.acpi_ec*, align 8
  %device.addr = alloca %struct.acpi_device*, align 8
  %ret = alloca i32, align 4
  store %struct.acpi_ec* %ec, %struct.acpi_ec** %ec.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.acpi_ec** %ec.addr, metadata !6744, metadata !DIExpression()), !dbg !6745
  store %struct.acpi_device* %device, %struct.acpi_device** %device.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.acpi_device** %device.addr, metadata !6746, metadata !DIExpression()), !dbg !6747
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !6748, metadata !DIExpression()), !dbg !6749
  %0 = load %struct.acpi_ec*, %struct.acpi_ec** %ec.addr, align 8, !dbg !6750
  %1 = load %struct.acpi_device*, %struct.acpi_device** %device.addr, align 8, !dbg !6751
  %call = call i32 @ec_install_handlers(%struct.acpi_ec* %0, %struct.acpi_device* %1) #11, !dbg !6752
  store i32 %call, i32* %ret, align 4, !dbg !6753
  %2 = load i32, i32* %ret, align 4, !dbg !6754
  %tobool = icmp ne i32 %2, 0, !dbg !6754
  br i1 %tobool, label %if.then, label %if.end, !dbg !6756

if.then:                                          ; preds = %entry
  %3 = load i32, i32* %ret, align 4, !dbg !6757
  store i32 %3, i32* %retval, align 4, !dbg !6758
  br label %return, !dbg !6758

if.end:                                           ; preds = %entry
  %4 = load %struct.acpi_ec*, %struct.acpi_ec** @first_ec, align 8, !dbg !6759
  %tobool1 = icmp ne %struct.acpi_ec* %4, null, !dbg !6759
  br i1 %tobool1, label %if.end3, label %if.then2, !dbg !6761

if.then2:                                         ; preds = %if.end
  %5 = load %struct.acpi_ec*, %struct.acpi_ec** %ec.addr, align 8, !dbg !6762
  store %struct.acpi_ec* %5, %struct.acpi_ec** @first_ec, align 8, !dbg !6763
  br label %if.end3, !dbg !6764

if.end3:                                          ; preds = %if.then2, %if.end
  %6 = load %struct.acpi_ec*, %struct.acpi_ec** %ec.addr, align 8, !dbg !6765
  %command_addr = getelementptr inbounds %struct.acpi_ec, %struct.acpi_ec* %6, i32 0, i32 3, !dbg !6765
  %7 = load i64, i64* %command_addr, align 8, !dbg !6765
  %8 = load %struct.acpi_ec*, %struct.acpi_ec** %ec.addr, align 8, !dbg !6765
  %data_addr = getelementptr inbounds %struct.acpi_ec, %struct.acpi_ec* %8, i32 0, i32 4, !dbg !6765
  %9 = load i64, i64* %data_addr, align 8, !dbg !6765
  %call4 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.15, i64 0, i64 0), i64 %7, i64 %9) #13, !dbg !6765
  %10 = load %struct.acpi_ec*, %struct.acpi_ec** %ec.addr, align 8, !dbg !6766
  %flags = getelementptr inbounds %struct.acpi_ec, %struct.acpi_ec* %10, i32 0, i32 6, !dbg !6768
  %call5 = call zeroext i1 @test_bit(i64 3, i64* %flags) #11, !dbg !6769
  br i1 %call5, label %if.then6, label %if.end12, !dbg !6770

if.then6:                                         ; preds = %if.end3
  %11 = load %struct.acpi_ec*, %struct.acpi_ec** %ec.addr, align 8, !dbg !6771
  %gpe = getelementptr inbounds %struct.acpi_ec, %struct.acpi_ec* %11, i32 0, i32 1, !dbg !6774
  %12 = load i32, i32* %gpe, align 8, !dbg !6774
  %cmp = icmp sge i32 %12, 0, !dbg !6775
  br i1 %cmp, label %if.then7, label %if.else, !dbg !6776

if.then7:                                         ; preds = %if.then6
  %13 = load %struct.acpi_ec*, %struct.acpi_ec** %ec.addr, align 8, !dbg !6777
  %gpe8 = getelementptr inbounds %struct.acpi_ec, %struct.acpi_ec* %13, i32 0, i32 1, !dbg !6777
  %14 = load i32, i32* %gpe8, align 8, !dbg !6777
  %call9 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.16, i64 0, i64 0), i32 %14) #13, !dbg !6777
  br label %if.end11, !dbg !6777

if.else:                                          ; preds = %if.then6
  %15 = load %struct.acpi_ec*, %struct.acpi_ec** %ec.addr, align 8, !dbg !6778
  %irq = getelementptr inbounds %struct.acpi_ec, %struct.acpi_ec* %15, i32 0, i32 2, !dbg !6778
  %16 = load i32, i32* %irq, align 4, !dbg !6778
  %call10 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.17, i64 0, i64 0), i32 %16) #13, !dbg !6778
  br label %if.end11

if.end11:                                         ; preds = %if.else, %if.then7
  br label %if.end12, !dbg !6779

if.end12:                                         ; preds = %if.end11, %if.end3
  %17 = load i32, i32* %ret, align 4, !dbg !6780
  store i32 %17, i32* %retval, align 4, !dbg !6781
  br label %return, !dbg !6781

return:                                           ; preds = %if.end12, %if.then
  %18 = load i32, i32* %retval, align 4, !dbg !6782
  ret i32 %18, !dbg !6782
}

; Function Attrs: noredzone
declare dso_local void @acpi_handle_printk(i8*, i8*, i8*, ...) #2

; Function Attrs: cold noinline noredzone nounwind optnone sspstrong
define dso_local void @acpi_ec_ecdt_probe() #3 section ".init.text" !dbg !6783 {
entry:
  %ecdt_ptr = alloca %struct.acpi_table_ecdt*, align 8
  %ec = alloca %struct.acpi_ec*, align 8
  %status = alloca i32, align 4
  %ret = alloca i32, align 4
  call void @llvm.dbg.declare(metadata %struct.acpi_table_ecdt** %ecdt_ptr, metadata !6784, metadata !DIExpression()), !dbg !6803
  call void @llvm.dbg.declare(metadata %struct.acpi_ec** %ec, metadata !6804, metadata !DIExpression()), !dbg !6805
  call void @llvm.dbg.declare(metadata i32* %status, metadata !6806, metadata !DIExpression()), !dbg !6807
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !6808, metadata !DIExpression()), !dbg !6809
  %call = call i32 @dmi_check_system(%struct.dmi_system_id* getelementptr inbounds ([8 x %struct.dmi_system_id], [8 x %struct.dmi_system_id]* bitcast ([8 x { i32 (%struct.dmi_system_id*)*, i8*, [4 x %struct.dmi_strmatch], i8* }]* @ec_dmi_table to [8 x %struct.dmi_system_id]*), i64 0, i64 0)) #11, !dbg !6810
  %0 = bitcast %struct.acpi_table_ecdt** %ecdt_ptr to %struct.acpi_table_header**, !dbg !6811
  %call1 = call i32 @acpi_get_table(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.2, i64 0, i64 0), i32 1, %struct.acpi_table_header** %0) #11, !dbg !6812
  store i32 %call1, i32* %status, align 4, !dbg !6813
  %1 = load i32, i32* %status, align 4, !dbg !6814
  %tobool = icmp ne i32 %1, 0, !dbg !6814
  br i1 %tobool, label %if.then, label %if.end, !dbg !6816

if.then:                                          ; preds = %entry
  br label %return, !dbg !6817

if.end:                                           ; preds = %entry
  %2 = load %struct.acpi_table_ecdt*, %struct.acpi_table_ecdt** %ecdt_ptr, align 8, !dbg !6818
  %control = getelementptr inbounds %struct.acpi_table_ecdt, %struct.acpi_table_ecdt* %2, i32 0, i32 1, !dbg !6820
  %address = getelementptr inbounds %struct.acpi_generic_address, %struct.acpi_generic_address* %control, i32 0, i32 4, !dbg !6821
  %3 = load i64, i64* %address, align 1, !dbg !6821
  %tobool2 = icmp ne i64 %3, 0, !dbg !6818
  br i1 %tobool2, label %lor.lhs.false, label %if.then5, !dbg !6822

lor.lhs.false:                                    ; preds = %if.end
  %4 = load %struct.acpi_table_ecdt*, %struct.acpi_table_ecdt** %ecdt_ptr, align 8, !dbg !6823
  %data = getelementptr inbounds %struct.acpi_table_ecdt, %struct.acpi_table_ecdt* %4, i32 0, i32 2, !dbg !6824
  %address3 = getelementptr inbounds %struct.acpi_generic_address, %struct.acpi_generic_address* %data, i32 0, i32 4, !dbg !6825
  %5 = load i64, i64* %address3, align 1, !dbg !6825
  %tobool4 = icmp ne i64 %5, 0, !dbg !6823
  br i1 %tobool4, label %if.end6, label %if.then5, !dbg !6826

if.then5:                                         ; preds = %lor.lhs.false, %if.end
  br label %out, !dbg !6827

if.end6:                                          ; preds = %lor.lhs.false
  %call7 = call %struct.acpi_ec* @acpi_ec_alloc() #11, !dbg !6829
  store %struct.acpi_ec* %call7, %struct.acpi_ec** %ec, align 8, !dbg !6830
  %6 = load %struct.acpi_ec*, %struct.acpi_ec** %ec, align 8, !dbg !6831
  %tobool8 = icmp ne %struct.acpi_ec* %6, null, !dbg !6831
  br i1 %tobool8, label %if.end10, label %if.then9, !dbg !6833

if.then9:                                         ; preds = %if.end6
  br label %out, !dbg !6834

if.end10:                                         ; preds = %if.end6
  %7 = load i32, i32* @EC_FLAGS_CORRECT_ECDT, align 4, !dbg !6835
  %tobool11 = icmp ne i32 %7, 0, !dbg !6835
  br i1 %tobool11, label %if.then12, label %if.else, !dbg !6837

if.then12:                                        ; preds = %if.end10
  %8 = load %struct.acpi_table_ecdt*, %struct.acpi_table_ecdt** %ecdt_ptr, align 8, !dbg !6838
  %data13 = getelementptr inbounds %struct.acpi_table_ecdt, %struct.acpi_table_ecdt* %8, i32 0, i32 2, !dbg !6840
  %address14 = getelementptr inbounds %struct.acpi_generic_address, %struct.acpi_generic_address* %data13, i32 0, i32 4, !dbg !6841
  %9 = load i64, i64* %address14, align 1, !dbg !6841
  %10 = load %struct.acpi_ec*, %struct.acpi_ec** %ec, align 8, !dbg !6842
  %command_addr = getelementptr inbounds %struct.acpi_ec, %struct.acpi_ec* %10, i32 0, i32 3, !dbg !6843
  store i64 %9, i64* %command_addr, align 8, !dbg !6844
  %11 = load %struct.acpi_table_ecdt*, %struct.acpi_table_ecdt** %ecdt_ptr, align 8, !dbg !6845
  %control15 = getelementptr inbounds %struct.acpi_table_ecdt, %struct.acpi_table_ecdt* %11, i32 0, i32 1, !dbg !6846
  %address16 = getelementptr inbounds %struct.acpi_generic_address, %struct.acpi_generic_address* %control15, i32 0, i32 4, !dbg !6847
  %12 = load i64, i64* %address16, align 1, !dbg !6847
  %13 = load %struct.acpi_ec*, %struct.acpi_ec** %ec, align 8, !dbg !6848
  %data_addr = getelementptr inbounds %struct.acpi_ec, %struct.acpi_ec* %13, i32 0, i32 4, !dbg !6849
  store i64 %12, i64* %data_addr, align 8, !dbg !6850
  br label %if.end23, !dbg !6851

if.else:                                          ; preds = %if.end10
  %14 = load %struct.acpi_table_ecdt*, %struct.acpi_table_ecdt** %ecdt_ptr, align 8, !dbg !6852
  %control17 = getelementptr inbounds %struct.acpi_table_ecdt, %struct.acpi_table_ecdt* %14, i32 0, i32 1, !dbg !6854
  %address18 = getelementptr inbounds %struct.acpi_generic_address, %struct.acpi_generic_address* %control17, i32 0, i32 4, !dbg !6855
  %15 = load i64, i64* %address18, align 1, !dbg !6855
  %16 = load %struct.acpi_ec*, %struct.acpi_ec** %ec, align 8, !dbg !6856
  %command_addr19 = getelementptr inbounds %struct.acpi_ec, %struct.acpi_ec* %16, i32 0, i32 3, !dbg !6857
  store i64 %15, i64* %command_addr19, align 8, !dbg !6858
  %17 = load %struct.acpi_table_ecdt*, %struct.acpi_table_ecdt** %ecdt_ptr, align 8, !dbg !6859
  %data20 = getelementptr inbounds %struct.acpi_table_ecdt, %struct.acpi_table_ecdt* %17, i32 0, i32 2, !dbg !6860
  %address21 = getelementptr inbounds %struct.acpi_generic_address, %struct.acpi_generic_address* %data20, i32 0, i32 4, !dbg !6861
  %18 = load i64, i64* %address21, align 1, !dbg !6861
  %19 = load %struct.acpi_ec*, %struct.acpi_ec** %ec, align 8, !dbg !6862
  %data_addr22 = getelementptr inbounds %struct.acpi_ec, %struct.acpi_ec* %19, i32 0, i32 4, !dbg !6863
  store i64 %18, i64* %data_addr22, align 8, !dbg !6864
  br label %if.end23

if.end23:                                         ; preds = %if.else, %if.then12
  %20 = load i8, i8* @acpi_gbl_reduced_hardware, align 1, !dbg !6865
  %tobool24 = icmp ne i8 %20, 0, !dbg !6865
  br i1 %tobool24, label %if.end27, label %if.then25, !dbg !6867

if.then25:                                        ; preds = %if.end23
  %21 = load %struct.acpi_table_ecdt*, %struct.acpi_table_ecdt** %ecdt_ptr, align 8, !dbg !6868
  %gpe = getelementptr inbounds %struct.acpi_table_ecdt, %struct.acpi_table_ecdt* %21, i32 0, i32 4, !dbg !6869
  %22 = load i8, i8* %gpe, align 1, !dbg !6869
  %conv = zext i8 %22 to i32, !dbg !6868
  %23 = load %struct.acpi_ec*, %struct.acpi_ec** %ec, align 8, !dbg !6870
  %gpe26 = getelementptr inbounds %struct.acpi_ec, %struct.acpi_ec* %23, i32 0, i32 1, !dbg !6871
  store i32 %conv, i32* %gpe26, align 8, !dbg !6872
  br label %if.end27, !dbg !6870

if.end27:                                         ; preds = %if.then25, %if.end23
  %24 = load %struct.acpi_ec*, %struct.acpi_ec** %ec, align 8, !dbg !6873
  %handle = getelementptr inbounds %struct.acpi_ec, %struct.acpi_ec* %24, i32 0, i32 0, !dbg !6874
  store i8* inttoptr (i64 -1 to i8*), i8** %handle, align 8, !dbg !6875
  %25 = load %struct.acpi_ec*, %struct.acpi_ec** %ec, align 8, !dbg !6876
  %call28 = call i32 @acpi_ec_setup(%struct.acpi_ec* %25, %struct.acpi_device* null) #11, !dbg !6877
  store i32 %call28, i32* %ret, align 4, !dbg !6878
  %26 = load i32, i32* %ret, align 4, !dbg !6879
  %tobool29 = icmp ne i32 %26, 0, !dbg !6879
  br i1 %tobool29, label %if.then30, label %if.end31, !dbg !6881

if.then30:                                        ; preds = %if.end27
  %27 = load %struct.acpi_ec*, %struct.acpi_ec** %ec, align 8, !dbg !6882
  call void @acpi_ec_free(%struct.acpi_ec* %27) #11, !dbg !6884
  br label %out, !dbg !6885

if.end31:                                         ; preds = %if.end27
  %28 = load %struct.acpi_ec*, %struct.acpi_ec** %ec, align 8, !dbg !6886
  store %struct.acpi_ec* %28, %struct.acpi_ec** @boot_ec, align 8, !dbg !6887
  store i8 1, i8* @boot_ec_is_ecdt, align 1, !dbg !6888
  %call32 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.3, i64 0, i64 0)) #13, !dbg !6889
  br label %out, !dbg !6889

out:                                              ; preds = %if.end31, %if.then30, %if.then9, %if.then5
  call void @llvm.dbg.label(metadata !6890), !dbg !6891
  %29 = load %struct.acpi_table_ecdt*, %struct.acpi_table_ecdt** %ecdt_ptr, align 8, !dbg !6892
  %30 = bitcast %struct.acpi_table_ecdt* %29 to %struct.acpi_table_header*, !dbg !6893
  call void @acpi_put_table(%struct.acpi_table_header* %30) #11, !dbg !6894
  br label %return, !dbg !6895

return:                                           ; preds = %out, %if.then
  ret void, !dbg !6895
}

; Function Attrs: noredzone
declare dso_local i32 @dmi_check_system(%struct.dmi_system_id*) #2

; Function Attrs: noredzone
declare dso_local i32 @acpi_get_table(i8*, i32, %struct.acpi_table_header**) #2

; Function Attrs: cold noredzone
declare dso_local i32 @printk(i8*, ...) #4

; Function Attrs: nounwind readnone speculatable willreturn
declare void @llvm.dbg.label(metadata) #1

; Function Attrs: noredzone
declare dso_local void @acpi_put_table(%struct.acpi_table_header*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @acpi_ec_mark_gpe_for_wake() #0 !dbg !6896 {
entry:
  %0 = load %struct.acpi_ec*, %struct.acpi_ec** @first_ec, align 8, !dbg !6897
  %tobool = icmp ne %struct.acpi_ec* %0, null, !dbg !6897
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !6899

land.lhs.true:                                    ; preds = %entry
  %1 = load i8, i8* @ec_no_wakeup, align 1, !dbg !6900
  %tobool1 = trunc i8 %1 to i1, !dbg !6900
  br i1 %tobool1, label %if.end, label %if.then, !dbg !6901

if.then:                                          ; preds = %land.lhs.true
  %2 = load %struct.acpi_ec*, %struct.acpi_ec** @first_ec, align 8, !dbg !6902
  %gpe = getelementptr inbounds %struct.acpi_ec, %struct.acpi_ec* %2, i32 0, i32 1, !dbg !6903
  %3 = load i32, i32* %gpe, align 8, !dbg !6903
  %call = call i32 @acpi_mark_gpe_for_wake(i8* null, i32 %3) #11, !dbg !6904
  br label %if.end, !dbg !6904

if.end:                                           ; preds = %if.then, %land.lhs.true, %entry
  ret void, !dbg !6905
}

; Function Attrs: noredzone
declare dso_local i32 @acpi_mark_gpe_for_wake(i8*, i32) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @acpi_ec_set_gpe_wake_mask(i8 zeroext %action) #0 !dbg !6906 {
entry:
  %action.addr = alloca i8, align 1
  store i8 %action, i8* %action.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %action.addr, metadata !6909, metadata !DIExpression()), !dbg !6910
  %call = call zeroext i1 @pm_suspend_no_platform() #11, !dbg !6911
  br i1 %call, label %land.lhs.true, label %if.end, !dbg !6913

land.lhs.true:                                    ; preds = %entry
  %0 = load %struct.acpi_ec*, %struct.acpi_ec** @first_ec, align 8, !dbg !6914
  %tobool = icmp ne %struct.acpi_ec* %0, null, !dbg !6914
  br i1 %tobool, label %land.lhs.true1, label %if.end, !dbg !6915

land.lhs.true1:                                   ; preds = %land.lhs.true
  %1 = load i8, i8* @ec_no_wakeup, align 1, !dbg !6916
  %tobool2 = trunc i8 %1 to i1, !dbg !6916
  br i1 %tobool2, label %if.end, label %if.then, !dbg !6917

if.then:                                          ; preds = %land.lhs.true1
  %2 = load %struct.acpi_ec*, %struct.acpi_ec** @first_ec, align 8, !dbg !6918
  %gpe = getelementptr inbounds %struct.acpi_ec, %struct.acpi_ec* %2, i32 0, i32 1, !dbg !6919
  %3 = load i32, i32* %gpe, align 8, !dbg !6919
  %4 = load i8, i8* %action.addr, align 1, !dbg !6920
  %call3 = call i32 @acpi_set_gpe_wake_mask(i8* null, i32 %3, i8 zeroext %4) #11, !dbg !6921
  br label %if.end, !dbg !6921

if.end:                                           ; preds = %if.then, %land.lhs.true1, %land.lhs.true, %entry
  ret void, !dbg !6922
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @pm_suspend_no_platform() #0 !dbg !6923 {
entry:
  %0 = load i32, i32* @pm_suspend_global_flags, align 4, !dbg !6925
  %conv = zext i32 %0 to i64, !dbg !6925
  %and = and i64 %conv, 4, !dbg !6926
  %tobool = icmp ne i64 %and, 0, !dbg !6927
  %lnot = xor i1 %tobool, true, !dbg !6927
  %lnot1 = xor i1 %lnot, true, !dbg !6928
  ret i1 %lnot1, !dbg !6929
}

; Function Attrs: noredzone
declare dso_local i32 @acpi_set_gpe_wake_mask(i8*, i32, i8 zeroext) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local zeroext i1 @acpi_ec_dispatch_gpe() #0 !dbg !6930 {
entry:
  %retval = alloca i1, align 1
  %ret = alloca i32, align 4
  %tmp = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !6931, metadata !DIExpression()), !dbg !6932
  %0 = load %struct.acpi_ec*, %struct.acpi_ec** @first_ec, align 8, !dbg !6933
  %tobool = icmp ne %struct.acpi_ec* %0, null, !dbg !6933
  br i1 %tobool, label %if.end, label %if.then, !dbg !6935

if.then:                                          ; preds = %entry
  %call = call i32 @acpi_any_gpe_status_set(i32 -1) #11, !dbg !6936
  %tobool1 = icmp ne i32 %call, 0, !dbg !6936
  store i1 %tobool1, i1* %retval, align 1, !dbg !6937
  br label %return, !dbg !6937

if.end:                                           ; preds = %entry
  %1 = load %struct.acpi_ec*, %struct.acpi_ec** @first_ec, align 8, !dbg !6938
  %gpe = getelementptr inbounds %struct.acpi_ec, %struct.acpi_ec* %1, i32 0, i32 1, !dbg !6940
  %2 = load i32, i32* %gpe, align 8, !dbg !6940
  %call2 = call i32 @acpi_any_gpe_status_set(i32 %2) #11, !dbg !6941
  %tobool3 = icmp ne i32 %call2, 0, !dbg !6941
  br i1 %tobool3, label %if.then4, label %if.end5, !dbg !6942

if.then4:                                         ; preds = %if.end
  store i1 true, i1* %retval, align 1, !dbg !6943
  br label %return, !dbg !6943

if.end5:                                          ; preds = %if.end
  %3 = load %struct.acpi_ec*, %struct.acpi_ec** @first_ec, align 8, !dbg !6944
  %gpe6 = getelementptr inbounds %struct.acpi_ec, %struct.acpi_ec* %3, i32 0, i32 1, !dbg !6945
  %4 = load i32, i32* %gpe6, align 8, !dbg !6945
  %call7 = call i32 @acpi_dispatch_gpe(i8* null, i32 %4) #11, !dbg !6946
  store i32 %call7, i32* %ret, align 4, !dbg !6947
  %5 = load i32, i32* %ret, align 4, !dbg !6948
  %cmp = icmp eq i32 %5, 1, !dbg !6950
  br i1 %cmp, label %if.then8, label %if.end9, !dbg !6951

if.then8:                                         ; preds = %if.end5
  store i32 0, i32* %tmp, align 4, !dbg !6952
  %6 = load i32, i32* %tmp, align 4, !dbg !6955
  br label %if.end9, !dbg !6956

if.end9:                                          ; preds = %if.then8, %if.end5
  call void @acpi_ec_flush_work() #11, !dbg !6957
  store i1 false, i1* %retval, align 1, !dbg !6958
  br label %return, !dbg !6958

return:                                           ; preds = %if.end9, %if.then4, %if.then
  %7 = load i1, i1* %retval, align 1, !dbg !6959
  ret i1 %7, !dbg !6959
}

; Function Attrs: noredzone
declare dso_local i32 @acpi_any_gpe_status_set(i32) #2

; Function Attrs: noredzone
declare dso_local i32 @acpi_dispatch_gpe(i8*, i32) #2

; Function Attrs: cold noinline noredzone nounwind optnone sspstrong
define dso_local void @acpi_ec_init() #3 section ".init.text" !dbg !6960 {
entry:
  %result = alloca i32, align 4
  %tmp = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %result, metadata !6961, metadata !DIExpression()), !dbg !6962
  %call = call i32 @acpi_ec_init_workqueues() #11, !dbg !6963
  store i32 %call, i32* %result, align 4, !dbg !6964
  %0 = load i32, i32* %result, align 4, !dbg !6965
  %tobool = icmp ne i32 %0, 0, !dbg !6965
  br i1 %tobool, label %if.then, label %if.end, !dbg !6967

if.then:                                          ; preds = %entry
  br label %return, !dbg !6968

if.end:                                           ; preds = %entry
  %call1 = call i32 @dmi_check_system(%struct.dmi_system_id* getelementptr inbounds ([4 x %struct.dmi_system_id], [4 x %struct.dmi_system_id]* bitcast ([4 x { i32 (%struct.dmi_system_id*)*, i8*, [4 x %struct.dmi_strmatch], i8* }]* @acpi_ec_no_wakeup to [4 x %struct.dmi_system_id]*), i64 0, i64 0)) #11, !dbg !6969
  %tobool2 = icmp ne i32 %call1, 0, !dbg !6969
  br i1 %tobool2, label %if.then3, label %if.end4, !dbg !6971

if.then3:                                         ; preds = %if.end
  store i8 1, i8* @ec_no_wakeup, align 1, !dbg !6972
  store i32 0, i32* %tmp, align 4, !dbg !6974
  %1 = load i32, i32* %tmp, align 4, !dbg !6977
  br label %if.end4, !dbg !6978

if.end4:                                          ; preds = %if.then3, %if.end
  %call5 = call i32 @acpi_bus_register_driver(%struct.acpi_driver* @acpi_ec_driver) #11, !dbg !6979
  call void @acpi_ec_ecdt_start() #13, !dbg !6980
  br label %return, !dbg !6981

return:                                           ; preds = %if.end4, %if.then
  ret void, !dbg !6981
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @acpi_ec_init_workqueues() #0 !dbg !6982 {
entry:
  %retval = alloca i32, align 4
  %0 = load %struct.workqueue_struct*, %struct.workqueue_struct** @ec_wq, align 8, !dbg !6985
  %tobool = icmp ne %struct.workqueue_struct* %0, null, !dbg !6985
  br i1 %tobool, label %if.end, label %if.then, !dbg !6987

if.then:                                          ; preds = %entry
  %call = call %struct.workqueue_struct* (i8*, i32, i32, ...) @alloc_workqueue(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.43, i64 0, i64 0), i32 655362, i32 1) #11, !dbg !6988
  store %struct.workqueue_struct* %call, %struct.workqueue_struct** @ec_wq, align 8, !dbg !6989
  br label %if.end, !dbg !6990

if.end:                                           ; preds = %if.then, %entry
  %1 = load %struct.workqueue_struct*, %struct.workqueue_struct** @ec_query_wq, align 8, !dbg !6991
  %tobool1 = icmp ne %struct.workqueue_struct* %1, null, !dbg !6991
  br i1 %tobool1, label %if.end4, label %if.then2, !dbg !6993

if.then2:                                         ; preds = %if.end
  %2 = load i32, i32* @ec_max_queries, align 4, !dbg !6994
  %call3 = call %struct.workqueue_struct* (i8*, i32, i32, ...) @alloc_workqueue(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.44, i64 0, i64 0), i32 0, i32 %2) #11, !dbg !6995
  store %struct.workqueue_struct* %call3, %struct.workqueue_struct** @ec_query_wq, align 8, !dbg !6996
  br label %if.end4, !dbg !6997

if.end4:                                          ; preds = %if.then2, %if.end
  %3 = load %struct.workqueue_struct*, %struct.workqueue_struct** @ec_wq, align 8, !dbg !6998
  %tobool5 = icmp ne %struct.workqueue_struct* %3, null, !dbg !6998
  br i1 %tobool5, label %lor.lhs.false, label %if.then7, !dbg !7000

lor.lhs.false:                                    ; preds = %if.end4
  %4 = load %struct.workqueue_struct*, %struct.workqueue_struct** @ec_query_wq, align 8, !dbg !7001
  %tobool6 = icmp ne %struct.workqueue_struct* %4, null, !dbg !7001
  br i1 %tobool6, label %if.end8, label %if.then7, !dbg !7002

if.then7:                                         ; preds = %lor.lhs.false, %if.end4
  call void @acpi_ec_destroy_workqueues() #11, !dbg !7003
  store i32 -19, i32* %retval, align 4, !dbg !7005
  br label %return, !dbg !7005

if.end8:                                          ; preds = %lor.lhs.false
  store i32 0, i32* %retval, align 4, !dbg !7006
  br label %return, !dbg !7006

return:                                           ; preds = %if.end8, %if.then7
  %5 = load i32, i32* %retval, align 4, !dbg !7007
  ret i32 %5, !dbg !7007
}

; Function Attrs: noredzone
declare dso_local i32 @acpi_bus_register_driver(%struct.acpi_driver*) #2

; Function Attrs: cold noinline noredzone nounwind optnone sspstrong
define internal void @acpi_ec_ecdt_start() #3 section ".init.text" !dbg !7008 {
entry:
  %ecdt_ptr = alloca %struct.acpi_table_ecdt*, align 8
  %handle = alloca i8*, align 8
  %status = alloca i32, align 4
  call void @llvm.dbg.declare(metadata %struct.acpi_table_ecdt** %ecdt_ptr, metadata !7009, metadata !DIExpression()), !dbg !7010
  call void @llvm.dbg.declare(metadata i8** %handle, metadata !7011, metadata !DIExpression()), !dbg !7012
  call void @llvm.dbg.declare(metadata i32* %status, metadata !7013, metadata !DIExpression()), !dbg !7014
  %0 = load %struct.acpi_ec*, %struct.acpi_ec** @boot_ec, align 8, !dbg !7015
  %tobool = icmp ne %struct.acpi_ec* %0, null, !dbg !7015
  br i1 %tobool, label %lor.lhs.false, label %if.then, !dbg !7017

lor.lhs.false:                                    ; preds = %entry
  %1 = load %struct.acpi_ec*, %struct.acpi_ec** @boot_ec, align 8, !dbg !7018
  %handle1 = getelementptr inbounds %struct.acpi_ec, %struct.acpi_ec* %1, i32 0, i32 0, !dbg !7019
  %2 = load i8*, i8** %handle1, align 8, !dbg !7019
  %cmp = icmp ne i8* %2, inttoptr (i64 -1 to i8*), !dbg !7020
  br i1 %cmp, label %if.then, label %if.end, !dbg !7021

if.then:                                          ; preds = %lor.lhs.false, %entry
  br label %return, !dbg !7022

if.end:                                           ; preds = %lor.lhs.false
  %3 = bitcast %struct.acpi_table_ecdt** %ecdt_ptr to %struct.acpi_table_header**, !dbg !7023
  %call = call i32 @acpi_get_table(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.2, i64 0, i64 0), i32 1, %struct.acpi_table_header** %3) #11, !dbg !7024
  store i32 %call, i32* %status, align 4, !dbg !7025
  %4 = load i32, i32* %status, align 4, !dbg !7026
  %tobool2 = icmp ne i32 %4, 0, !dbg !7026
  br i1 %tobool2, label %if.then3, label %if.end4, !dbg !7028

if.then3:                                         ; preds = %if.end
  br label %return, !dbg !7029

if.end4:                                          ; preds = %if.end
  %5 = load %struct.acpi_table_ecdt*, %struct.acpi_table_ecdt** %ecdt_ptr, align 8, !dbg !7030
  %id = getelementptr inbounds %struct.acpi_table_ecdt, %struct.acpi_table_ecdt* %5, i32 0, i32 5, !dbg !7031
  %arraydecay = getelementptr inbounds [1 x i8], [1 x i8]* %id, i64 0, i64 0, !dbg !7030
  %call5 = call i32 @acpi_get_handle(i8* null, i8* %arraydecay, i8** %handle) #11, !dbg !7032
  store i32 %call5, i32* %status, align 4, !dbg !7033
  %6 = load i32, i32* %status, align 4, !dbg !7034
  %tobool6 = icmp ne i32 %6, 0, !dbg !7034
  br i1 %tobool6, label %if.end10, label %if.then7, !dbg !7036

if.then7:                                         ; preds = %if.end4
  %7 = load i8*, i8** %handle, align 8, !dbg !7037
  %8 = load %struct.acpi_ec*, %struct.acpi_ec** @boot_ec, align 8, !dbg !7039
  %handle8 = getelementptr inbounds %struct.acpi_ec, %struct.acpi_ec* %8, i32 0, i32 0, !dbg !7040
  store i8* %7, i8** %handle8, align 8, !dbg !7041
  %call9 = call i32 @acpi_bus_register_early_device(i32 6) #11, !dbg !7042
  br label %if.end10, !dbg !7043

if.end10:                                         ; preds = %if.then7, %if.end4
  %9 = load %struct.acpi_table_ecdt*, %struct.acpi_table_ecdt** %ecdt_ptr, align 8, !dbg !7044
  %10 = bitcast %struct.acpi_table_ecdt* %9 to %struct.acpi_table_header*, !dbg !7045
  call void @acpi_put_table(%struct.acpi_table_header* %10) #11, !dbg !7046
  br label %return, !dbg !7047

return:                                           ; preds = %if.end10, %if.then3, %if.then
  ret void, !dbg !7047
}

; Function Attrs: noredzone
declare dso_local void @drain_workqueue(%struct.workqueue_struct*) #2

; Function Attrs: noredzone
declare dso_local void @flush_workqueue(%struct.workqueue_struct*) #2

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #5

; Function Attrs: noredzone
declare dso_local i32 @acpi_acquire_global_lock(i16 zeroext, i32*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @acpi_ec_transaction_unlocked(%struct.acpi_ec* %ec, %struct.transaction* %t) #0 !dbg !7048 {
entry:
  %lock.addr.i69 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i69, metadata !5860, metadata !DIExpression()), !dbg !7049
  %lock.addr.i64 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i64, metadata !5875, metadata !DIExpression()), !dbg !7056
  %flags.addr.i65 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i65, metadata !5881, metadata !DIExpression()), !dbg !7058
  %tmp.i66 = alloca i32, align 4
  %tmp8.i67 = alloca i32, align 4
  %lock.addr.i62 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i62, metadata !5875, metadata !DIExpression()), !dbg !7059
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !5881, metadata !DIExpression()), !dbg !7061
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !5860, metadata !DIExpression()), !dbg !7062
  %ec.addr = alloca %struct.acpi_ec*, align 8
  %t.addr = alloca %struct.transaction*, align 8
  %tmp = alloca i64, align 8
  %ret = alloca i32, align 4
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp2 = alloca i32, align 4
  %__dummy6 = alloca i64, align 8
  %__dummy27 = alloca i64, align 8
  %tmp10 = alloca i32, align 4
  %tmp21 = alloca i32, align 4
  %tmp22 = alloca i32, align 4
  %__dummy28 = alloca i64, align 8
  %__dummy229 = alloca i64, align 8
  %tmp32 = alloca i32, align 4
  %__dummy36 = alloca i64, align 8
  %__dummy237 = alloca i64, align 8
  %tmp40 = alloca i32, align 4
  %tmp58 = alloca i32, align 4
  %tmp60 = alloca i32, align 4
  store %struct.acpi_ec* %ec, %struct.acpi_ec** %ec.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.acpi_ec** %ec.addr, metadata !7069, metadata !DIExpression()), !dbg !7070
  store %struct.transaction* %t, %struct.transaction** %t.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.transaction** %t.addr, metadata !7071, metadata !DIExpression()), !dbg !7072
  call void @llvm.dbg.declare(metadata i64* %tmp, metadata !7073, metadata !DIExpression()), !dbg !7074
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !7075, metadata !DIExpression()), !dbg !7076
  store i32 0, i32* %ret, align 4, !dbg !7076
  br label %do.body, !dbg !7077

do.body:                                          ; preds = %entry
  br label %do.body1, !dbg !7078

do.body1:                                         ; preds = %do.body
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !7079, metadata !DIExpression()), !dbg !7081
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !7082, metadata !DIExpression()), !dbg !7081
  %cmp = icmp eq i64* %__dummy, %__dummy2, !dbg !7081
  %conv = zext i1 %cmp to i32, !dbg !7081
  store i32 1, i32* %tmp2, align 4, !dbg !7081
  %0 = load i32, i32* %tmp2, align 4, !dbg !7081
  br label %do.body3, !dbg !7083

do.body3:                                         ; preds = %do.body1
  br label %do.body4, !dbg !7084

do.body4:                                         ; preds = %do.body3
  br label %do.body5, !dbg !7085

do.body5:                                         ; preds = %do.body4
  call void @llvm.dbg.declare(metadata i64* %__dummy6, metadata !7087, metadata !DIExpression()), !dbg !7090
  call void @llvm.dbg.declare(metadata i64* %__dummy27, metadata !7091, metadata !DIExpression()), !dbg !7090
  %cmp8 = icmp eq i64* %__dummy6, %__dummy27, !dbg !7090
  %conv9 = zext i1 %cmp8 to i32, !dbg !7090
  store i32 1, i32* %tmp10, align 4, !dbg !7090
  %1 = load i32, i32* %tmp10, align 4, !dbg !7090
  %call = call i64 @arch_local_irq_save() #11, !dbg !7092
  store i64 %call, i64* %tmp, align 8, !dbg !7092
  br label %do.end, !dbg !7092

do.end:                                           ; preds = %do.body5
  br label %do.end11, !dbg !7085

do.end11:                                         ; preds = %do.end
  br label %do.body12, !dbg !7084

do.body12:                                        ; preds = %do.end11
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !7093, !srcloc !7094
  br label %do.body13, !dbg !7093

do.body13:                                        ; preds = %do.body12
  %2 = load %struct.acpi_ec*, %struct.acpi_ec** %ec.addr, align 8, !dbg !7095
  %lock = getelementptr inbounds %struct.acpi_ec, %struct.acpi_ec* %2, i32 0, i32 12, !dbg !7095
  store %struct.spinlock* %lock, %struct.spinlock** %lock.addr.i, align 8
  %3 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !7096
  %4 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %3, i32 0, i32 0, !dbg !7097
  %rlock.i = bitcast %union.anon.0* %4 to %struct.raw_spinlock*, !dbg !7097
  br label %do.end15, !dbg !7095

do.end15:                                         ; preds = %do.body13
  br label %do.end16, !dbg !7093

do.end16:                                         ; preds = %do.end15
  br label %do.end17, !dbg !7084

do.end17:                                         ; preds = %do.end16
  br label %do.end18, !dbg !7083

do.end18:                                         ; preds = %do.end17
  br label %do.end19, !dbg !7078

do.end19:                                         ; preds = %do.end18
  %5 = load %struct.acpi_ec*, %struct.acpi_ec** %ec.addr, align 8, !dbg !7098
  %call20 = call zeroext i1 @acpi_ec_submit_flushable_request(%struct.acpi_ec* %5) #11, !dbg !7100
  br i1 %call20, label %if.end, label %if.then, !dbg !7101

if.then:                                          ; preds = %do.end19
  store i32 -22, i32* %ret, align 4, !dbg !7102
  br label %unlock, !dbg !7104

if.end:                                           ; preds = %do.end19
  store i32 0, i32* %tmp21, align 4, !dbg !7105
  %6 = load i32, i32* %tmp21, align 4, !dbg !7108
  %7 = load %struct.transaction*, %struct.transaction** %t.addr, align 8, !dbg !7109
  %8 = load %struct.acpi_ec*, %struct.acpi_ec** %ec.addr, align 8, !dbg !7110
  %curr = getelementptr inbounds %struct.acpi_ec, %struct.acpi_ec* %8, i32 0, i32 11, !dbg !7111
  store %struct.transaction* %7, %struct.transaction** %curr, align 8, !dbg !7112
  store i32 0, i32* %tmp22, align 4, !dbg !7113
  %9 = load i32, i32* %tmp22, align 4, !dbg !7116
  %10 = load %struct.acpi_ec*, %struct.acpi_ec** %ec.addr, align 8, !dbg !7117
  call void @start_transaction(%struct.acpi_ec* %10) #11, !dbg !7118
  %11 = load %struct.acpi_ec*, %struct.acpi_ec** %ec.addr, align 8, !dbg !7119
  %lock23 = getelementptr inbounds %struct.acpi_ec, %struct.acpi_ec* %11, i32 0, i32 12, !dbg !7120
  %12 = load i64, i64* %tmp, align 8, !dbg !7121
  store %struct.spinlock* %lock23, %struct.spinlock** %lock.addr.i64, align 8
  store i64 %12, i64* %flags.addr.i65, align 8
  call void @llvm.dbg.declare(metadata !372, metadata !5933, metadata !DIExpression()) #7, !dbg !7122
  call void @llvm.dbg.declare(metadata !372, metadata !5937, metadata !DIExpression()) #7, !dbg !7122
  store i32 1, i32* %tmp.i66, align 4, !dbg !7122
  %13 = load i32, i32* %tmp.i66, align 4, !dbg !7122
  call void @llvm.dbg.declare(metadata !372, metadata !5938, metadata !DIExpression()) #7, !dbg !7123
  call void @llvm.dbg.declare(metadata !372, metadata !5944, metadata !DIExpression()) #7, !dbg !7123
  store i32 1, i32* %tmp8.i67, align 4, !dbg !7123
  %14 = load i32, i32* %tmp8.i67, align 4, !dbg !7123
  %15 = load i64, i64* %flags.addr.i65, align 8, !dbg !7124
  call void @arch_local_irq_restore(i64 %15) #12, !dbg !7124
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !7125, !srcloc !5948
  %16 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i64, align 8, !dbg !7126
  %17 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %16, i32 0, i32 0, !dbg !7126
  %rlock.i68 = bitcast %union.anon.0* %17 to %struct.raw_spinlock*, !dbg !7126
  %18 = load %struct.acpi_ec*, %struct.acpi_ec** %ec.addr, align 8, !dbg !7127
  %call24 = call i32 @ec_poll(%struct.acpi_ec* %18) #11, !dbg !7128
  store i32 %call24, i32* %ret, align 4, !dbg !7129
  br label %do.body25, !dbg !7130

do.body25:                                        ; preds = %if.end
  br label %do.body26, !dbg !7131

do.body26:                                        ; preds = %do.body25
  call void @llvm.dbg.declare(metadata i64* %__dummy28, metadata !7132, metadata !DIExpression()), !dbg !7134
  call void @llvm.dbg.declare(metadata i64* %__dummy229, metadata !7135, metadata !DIExpression()), !dbg !7134
  %cmp30 = icmp eq i64* %__dummy28, %__dummy229, !dbg !7134
  %conv31 = zext i1 %cmp30 to i32, !dbg !7134
  store i32 1, i32* %tmp32, align 4, !dbg !7134
  %19 = load i32, i32* %tmp32, align 4, !dbg !7134
  br label %do.body33, !dbg !7136

do.body33:                                        ; preds = %do.body26
  br label %do.body34, !dbg !7137

do.body34:                                        ; preds = %do.body33
  br label %do.body35, !dbg !7138

do.body35:                                        ; preds = %do.body34
  call void @llvm.dbg.declare(metadata i64* %__dummy36, metadata !7140, metadata !DIExpression()), !dbg !7143
  call void @llvm.dbg.declare(metadata i64* %__dummy237, metadata !7144, metadata !DIExpression()), !dbg !7143
  %cmp38 = icmp eq i64* %__dummy36, %__dummy237, !dbg !7143
  %conv39 = zext i1 %cmp38 to i32, !dbg !7143
  store i32 1, i32* %tmp40, align 4, !dbg !7143
  %20 = load i32, i32* %tmp40, align 4, !dbg !7143
  %call41 = call i64 @arch_local_irq_save() #11, !dbg !7145
  store i64 %call41, i64* %tmp, align 8, !dbg !7145
  br label %do.end42, !dbg !7145

do.end42:                                         ; preds = %do.body35
  br label %do.end43, !dbg !7138

do.end43:                                         ; preds = %do.end42
  br label %do.body44, !dbg !7137

do.body44:                                        ; preds = %do.end43
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !7146, !srcloc !7147
  br label %do.body45, !dbg !7146

do.body45:                                        ; preds = %do.body44
  %21 = load %struct.acpi_ec*, %struct.acpi_ec** %ec.addr, align 8, !dbg !7148
  %lock46 = getelementptr inbounds %struct.acpi_ec, %struct.acpi_ec* %21, i32 0, i32 12, !dbg !7148
  store %struct.spinlock* %lock46, %struct.spinlock** %lock.addr.i69, align 8
  %22 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i69, align 8, !dbg !7149
  %23 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %22, i32 0, i32 0, !dbg !7150
  %rlock.i70 = bitcast %union.anon.0* %23 to %struct.raw_spinlock*, !dbg !7150
  br label %do.end48, !dbg !7148

do.end48:                                         ; preds = %do.body45
  br label %do.end49, !dbg !7146

do.end49:                                         ; preds = %do.end48
  br label %do.end50, !dbg !7137

do.end50:                                         ; preds = %do.end49
  br label %do.end51, !dbg !7136

do.end51:                                         ; preds = %do.end50
  br label %do.end52, !dbg !7131

do.end52:                                         ; preds = %do.end51
  %24 = load %struct.transaction*, %struct.transaction** %t.addr, align 8, !dbg !7151
  %irq_count = getelementptr inbounds %struct.transaction, %struct.transaction* %24, i32 0, i32 2, !dbg !7153
  %25 = load i16, i16* %irq_count, align 8, !dbg !7153
  %conv53 = zext i16 %25 to i32, !dbg !7151
  %26 = load i32, i32* @ec_storm_threshold, align 4, !dbg !7154
  %cmp54 = icmp eq i32 %conv53, %26, !dbg !7155
  br i1 %cmp54, label %if.then56, label %if.end57, !dbg !7156

if.then56:                                        ; preds = %do.end52
  %27 = load %struct.acpi_ec*, %struct.acpi_ec** %ec.addr, align 8, !dbg !7157
  call void @acpi_ec_unmask_events(%struct.acpi_ec* %27) #11, !dbg !7158
  br label %if.end57, !dbg !7158

if.end57:                                         ; preds = %if.then56, %do.end52
  store i32 0, i32* %tmp58, align 4, !dbg !7159
  %28 = load i32, i32* %tmp58, align 4, !dbg !7162
  %29 = load %struct.acpi_ec*, %struct.acpi_ec** %ec.addr, align 8, !dbg !7163
  %curr59 = getelementptr inbounds %struct.acpi_ec, %struct.acpi_ec* %29, i32 0, i32 11, !dbg !7164
  store %struct.transaction* null, %struct.transaction** %curr59, align 8, !dbg !7165
  %30 = load %struct.acpi_ec*, %struct.acpi_ec** %ec.addr, align 8, !dbg !7166
  call void @acpi_ec_complete_request(%struct.acpi_ec* %30) #11, !dbg !7167
  store i32 0, i32* %tmp60, align 4, !dbg !7168
  %31 = load i32, i32* %tmp60, align 4, !dbg !7171
  br label %unlock, !dbg !7172

unlock:                                           ; preds = %if.end57, %if.then
  call void @llvm.dbg.label(metadata !7173), !dbg !7174
  %32 = load %struct.acpi_ec*, %struct.acpi_ec** %ec.addr, align 8, !dbg !7175
  %lock61 = getelementptr inbounds %struct.acpi_ec, %struct.acpi_ec* %32, i32 0, i32 12, !dbg !7176
  %33 = load i64, i64* %tmp, align 8, !dbg !7177
  store %struct.spinlock* %lock61, %struct.spinlock** %lock.addr.i62, align 8
  store i64 %33, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !372, metadata !5933, metadata !DIExpression()) #7, !dbg !7178
  call void @llvm.dbg.declare(metadata !372, metadata !5937, metadata !DIExpression()) #7, !dbg !7178
  store i32 1, i32* %tmp.i, align 4, !dbg !7178
  %34 = load i32, i32* %tmp.i, align 4, !dbg !7178
  call void @llvm.dbg.declare(metadata !372, metadata !5938, metadata !DIExpression()) #7, !dbg !7179
  call void @llvm.dbg.declare(metadata !372, metadata !5944, metadata !DIExpression()) #7, !dbg !7179
  store i32 1, i32* %tmp8.i, align 4, !dbg !7179
  %35 = load i32, i32* %tmp8.i, align 4, !dbg !7179
  %36 = load i64, i64* %flags.addr.i, align 8, !dbg !7180
  call void @arch_local_irq_restore(i64 %36) #12, !dbg !7180
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !7181, !srcloc !5948
  %37 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i62, align 8, !dbg !7182
  %38 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %37, i32 0, i32 0, !dbg !7182
  %rlock.i63 = bitcast %union.anon.0* %38 to %struct.raw_spinlock*, !dbg !7182
  %39 = load i32, i32* %ret, align 4, !dbg !7183
  ret i32 %39, !dbg !7184
}

; Function Attrs: noredzone
declare dso_local i32 @acpi_release_global_lock(i32) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @arch_local_irq_save() #0 !dbg !7185 {
entry:
  %f = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %f, metadata !7189, metadata !DIExpression()), !dbg !7190
  %call = call i64 @arch_local_save_flags() #11, !dbg !7191
  store i64 %call, i64* %f, align 8, !dbg !7192
  call void @arch_local_irq_disable() #11, !dbg !7193
  %0 = load i64, i64* %f, align 8, !dbg !7194
  ret i64 %0, !dbg !7195
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @acpi_ec_submit_flushable_request(%struct.acpi_ec* %ec) #0 !dbg !7196 {
entry:
  %retval = alloca i1, align 1
  %ec.addr = alloca %struct.acpi_ec*, align 8
  store %struct.acpi_ec* %ec, %struct.acpi_ec** %ec.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.acpi_ec** %ec.addr, metadata !7199, metadata !DIExpression()), !dbg !7200
  %0 = load %struct.acpi_ec*, %struct.acpi_ec** %ec.addr, align 8, !dbg !7201
  %call = call zeroext i1 @acpi_ec_started(%struct.acpi_ec* %0) #11, !dbg !7203
  br i1 %call, label %if.end, label %if.then, !dbg !7204

if.then:                                          ; preds = %entry
  store i1 false, i1* %retval, align 1, !dbg !7205
  br label %return, !dbg !7205

if.end:                                           ; preds = %entry
  %1 = load %struct.acpi_ec*, %struct.acpi_ec** %ec.addr, align 8, !dbg !7206
  call void @acpi_ec_submit_request(%struct.acpi_ec* %1) #11, !dbg !7207
  store i1 true, i1* %retval, align 1, !dbg !7208
  br label %return, !dbg !7208

return:                                           ; preds = %if.end, %if.then
  %2 = load i1, i1* %retval, align 1, !dbg !7209
  ret i1 %2, !dbg !7209
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @start_transaction(%struct.acpi_ec* %ec) #0 !dbg !7210 {
entry:
  %ec.addr = alloca %struct.acpi_ec*, align 8
  store %struct.acpi_ec* %ec, %struct.acpi_ec** %ec.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.acpi_ec** %ec.addr, metadata !7211, metadata !DIExpression()), !dbg !7212
  %0 = load %struct.acpi_ec*, %struct.acpi_ec** %ec.addr, align 8, !dbg !7213
  %curr = getelementptr inbounds %struct.acpi_ec, %struct.acpi_ec* %0, i32 0, i32 11, !dbg !7214
  %1 = load %struct.transaction*, %struct.transaction** %curr, align 8, !dbg !7214
  %ri = getelementptr inbounds %struct.transaction, %struct.transaction* %1, i32 0, i32 5, !dbg !7215
  store i8 0, i8* %ri, align 4, !dbg !7216
  %2 = load %struct.acpi_ec*, %struct.acpi_ec** %ec.addr, align 8, !dbg !7217
  %curr1 = getelementptr inbounds %struct.acpi_ec, %struct.acpi_ec* %2, i32 0, i32 11, !dbg !7218
  %3 = load %struct.transaction*, %struct.transaction** %curr1, align 8, !dbg !7218
  %wi = getelementptr inbounds %struct.transaction, %struct.transaction* %3, i32 0, i32 4, !dbg !7219
  store i8 0, i8* %wi, align 1, !dbg !7220
  %4 = load %struct.acpi_ec*, %struct.acpi_ec** %ec.addr, align 8, !dbg !7221
  %curr2 = getelementptr inbounds %struct.acpi_ec, %struct.acpi_ec* %4, i32 0, i32 11, !dbg !7222
  %5 = load %struct.transaction*, %struct.transaction** %curr2, align 8, !dbg !7222
  %irq_count = getelementptr inbounds %struct.transaction, %struct.transaction* %5, i32 0, i32 2, !dbg !7223
  store i16 0, i16* %irq_count, align 8, !dbg !7224
  %6 = load %struct.acpi_ec*, %struct.acpi_ec** %ec.addr, align 8, !dbg !7225
  %curr3 = getelementptr inbounds %struct.acpi_ec, %struct.acpi_ec* %6, i32 0, i32 11, !dbg !7226
  %7 = load %struct.transaction*, %struct.transaction** %curr3, align 8, !dbg !7226
  %flags = getelementptr inbounds %struct.transaction, %struct.transaction* %7, i32 0, i32 8, !dbg !7227
  store i8 0, i8* %flags, align 1, !dbg !7228
  ret void, !dbg !7229
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @ec_poll(%struct.acpi_ec* %ec) #0 !dbg !7230 {
entry:
  %lock.addr.i67 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i67, metadata !5875, metadata !DIExpression()), !dbg !7233
  %flags.addr.i68 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i68, metadata !5881, metadata !DIExpression()), !dbg !7236
  %tmp.i69 = alloca i32, align 4
  %tmp8.i70 = alloca i32, align 4
  %lock.addr.i65 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i65, metadata !5860, metadata !DIExpression()), !dbg !7237
  %lock.addr.i63 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i63, metadata !5875, metadata !DIExpression()), !dbg !7244
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !5881, metadata !DIExpression()), !dbg !7247
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !5860, metadata !DIExpression()), !dbg !7248
  %retval.i = alloca i64, align 8
  %m.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %m.addr.i, metadata !7255, metadata !DIExpression()), !dbg !7260
  %retval = alloca i32, align 4
  %ec.addr = alloca %struct.acpi_ec*, align 8
  %flags = alloca i64, align 8
  %repeat = alloca i32, align 4
  %delay = alloca i64, align 8
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__dummy8 = alloca i64, align 8
  %__dummy29 = alloca i64, align 8
  %tmp12 = alloca i32, align 4
  %tmp27 = alloca i32, align 4
  %__dummy30 = alloca i64, align 8
  %__dummy231 = alloca i64, align 8
  %tmp34 = alloca i32, align 4
  %__dummy38 = alloca i64, align 8
  %__dummy239 = alloca i64, align 8
  %tmp42 = alloca i32, align 4
  store %struct.acpi_ec* %ec, %struct.acpi_ec** %ec.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.acpi_ec** %ec.addr, metadata !7262, metadata !DIExpression()), !dbg !7263
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !7264, metadata !DIExpression()), !dbg !7265
  call void @llvm.dbg.declare(metadata i32* %repeat, metadata !7266, metadata !DIExpression()), !dbg !7267
  store i32 5, i32* %repeat, align 4, !dbg !7267
  br label %while.cond, !dbg !7268

while.cond:                                       ; preds = %do.end61, %entry
  %0 = load i32, i32* %repeat, align 4, !dbg !7269
  %dec = add i32 %0, -1, !dbg !7269
  store i32 %dec, i32* %repeat, align 4, !dbg !7269
  %tobool = icmp ne i32 %0, 0, !dbg !7268
  br i1 %tobool, label %while.body, label %while.end, !dbg !7268

while.body:                                       ; preds = %while.cond
  call void @llvm.dbg.declare(metadata i64* %delay, metadata !7270, metadata !DIExpression()), !dbg !7271
  %1 = load volatile i64, i64* @jiffies, align 8, !dbg !7272
  %2 = load i32, i32* @ec_delay, align 4, !dbg !7273
  store i32 %2, i32* %m.addr.i, align 4
  %3 = load i32, i32* %m.addr.i, align 4, !dbg !7274
  %4 = call i1 @llvm.is.constant.i32(i32 %3) #7, !dbg !7276
  br i1 %4, label %if.then.i, label %if.else.i, !dbg !7277

if.then.i:                                        ; preds = %while.body
  %5 = load i32, i32* %m.addr.i, align 4, !dbg !7278
  %cmp.i = icmp slt i32 %5, 0, !dbg !7281
  br i1 %cmp.i, label %if.then1.i, label %if.end.i, !dbg !7282

if.then1.i:                                       ; preds = %if.then.i
  store i64 4611686018427387902, i64* %retval.i, align 8, !dbg !7283
  br label %msecs_to_jiffies.exit, !dbg !7283

if.end.i:                                         ; preds = %if.then.i
  %6 = load i32, i32* %m.addr.i, align 4, !dbg !7284
  %call.i = call i64 @_msecs_to_jiffies(i32 %6) #12, !dbg !7285
  store i64 %call.i, i64* %retval.i, align 8, !dbg !7286
  br label %msecs_to_jiffies.exit, !dbg !7286

if.else.i:                                        ; preds = %while.body
  %7 = load i32, i32* %m.addr.i, align 4, !dbg !7287
  %call2.i = call i64 @__msecs_to_jiffies(i32 %7) #12, !dbg !7289
  store i64 %call2.i, i64* %retval.i, align 8, !dbg !7290
  br label %msecs_to_jiffies.exit, !dbg !7290

msecs_to_jiffies.exit:                            ; preds = %if.then1.i, %if.end.i, %if.else.i
  %8 = load i64, i64* %retval.i, align 8, !dbg !7291
  %add = add i64 %1, %8, !dbg !7292
  store i64 %add, i64* %delay, align 8, !dbg !7271
  br label %do.body, !dbg !7293

do.body:                                          ; preds = %do.cond, %msecs_to_jiffies.exit
  %9 = load %struct.acpi_ec*, %struct.acpi_ec** %ec.addr, align 8, !dbg !7294
  %call1 = call i32 @ec_guard(%struct.acpi_ec* %9) #11, !dbg !7296
  %tobool2 = icmp ne i32 %call1, 0, !dbg !7296
  br i1 %tobool2, label %if.end, label %if.then, !dbg !7297

if.then:                                          ; preds = %do.body
  store i32 0, i32* %retval, align 4, !dbg !7298
  br label %return, !dbg !7298

if.end:                                           ; preds = %do.body
  br label %do.body3, !dbg !7299

do.body3:                                         ; preds = %if.end
  br label %do.body4, !dbg !7300

do.body4:                                         ; preds = %do.body3
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !7301, metadata !DIExpression()), !dbg !7303
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !7304, metadata !DIExpression()), !dbg !7303
  %cmp = icmp eq i64* %__dummy, %__dummy2, !dbg !7303
  %conv = zext i1 %cmp to i32, !dbg !7303
  store i32 1, i32* %tmp, align 4, !dbg !7303
  %10 = load i32, i32* %tmp, align 4, !dbg !7303
  br label %do.body5, !dbg !7305

do.body5:                                         ; preds = %do.body4
  br label %do.body6, !dbg !7306

do.body6:                                         ; preds = %do.body5
  br label %do.body7, !dbg !7307

do.body7:                                         ; preds = %do.body6
  call void @llvm.dbg.declare(metadata i64* %__dummy8, metadata !7309, metadata !DIExpression()), !dbg !7312
  call void @llvm.dbg.declare(metadata i64* %__dummy29, metadata !7313, metadata !DIExpression()), !dbg !7312
  %cmp10 = icmp eq i64* %__dummy8, %__dummy29, !dbg !7312
  %conv11 = zext i1 %cmp10 to i32, !dbg !7312
  store i32 1, i32* %tmp12, align 4, !dbg !7312
  %11 = load i32, i32* %tmp12, align 4, !dbg !7312
  %call13 = call i64 @arch_local_irq_save() #11, !dbg !7314
  store i64 %call13, i64* %flags, align 8, !dbg !7314
  br label %do.end, !dbg !7314

do.end:                                           ; preds = %do.body7
  br label %do.end14, !dbg !7307

do.end14:                                         ; preds = %do.end
  br label %do.body15, !dbg !7306

do.body15:                                        ; preds = %do.end14
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !7315, !srcloc !7316
  br label %do.body16, !dbg !7315

do.body16:                                        ; preds = %do.body15
  %12 = load %struct.acpi_ec*, %struct.acpi_ec** %ec.addr, align 8, !dbg !7317
  %lock = getelementptr inbounds %struct.acpi_ec, %struct.acpi_ec* %12, i32 0, i32 12, !dbg !7317
  store %struct.spinlock* %lock, %struct.spinlock** %lock.addr.i, align 8
  %13 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !7318
  %14 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %13, i32 0, i32 0, !dbg !7319
  %rlock.i = bitcast %union.anon.0* %14 to %struct.raw_spinlock*, !dbg !7319
  br label %do.end18, !dbg !7317

do.end18:                                         ; preds = %do.body16
  br label %do.end19, !dbg !7315

do.end19:                                         ; preds = %do.end18
  br label %do.end20, !dbg !7306

do.end20:                                         ; preds = %do.end19
  br label %do.end21, !dbg !7305

do.end21:                                         ; preds = %do.end20
  br label %do.end22, !dbg !7300

do.end22:                                         ; preds = %do.end21
  %15 = load %struct.acpi_ec*, %struct.acpi_ec** %ec.addr, align 8, !dbg !7320
  call void @advance_transaction(%struct.acpi_ec* %15) #11, !dbg !7321
  %16 = load %struct.acpi_ec*, %struct.acpi_ec** %ec.addr, align 8, !dbg !7322
  %lock23 = getelementptr inbounds %struct.acpi_ec, %struct.acpi_ec* %16, i32 0, i32 12, !dbg !7323
  %17 = load i64, i64* %flags, align 8, !dbg !7324
  store %struct.spinlock* %lock23, %struct.spinlock** %lock.addr.i63, align 8
  store i64 %17, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !372, metadata !5933, metadata !DIExpression()) #7, !dbg !7325
  call void @llvm.dbg.declare(metadata !372, metadata !5937, metadata !DIExpression()) #7, !dbg !7325
  store i32 1, i32* %tmp.i, align 4, !dbg !7325
  %18 = load i32, i32* %tmp.i, align 4, !dbg !7325
  call void @llvm.dbg.declare(metadata !372, metadata !5938, metadata !DIExpression()) #7, !dbg !7326
  call void @llvm.dbg.declare(metadata !372, metadata !5944, metadata !DIExpression()) #7, !dbg !7326
  store i32 1, i32* %tmp8.i, align 4, !dbg !7326
  %19 = load i32, i32* %tmp8.i, align 4, !dbg !7326
  %20 = load i64, i64* %flags.addr.i, align 8, !dbg !7327
  call void @arch_local_irq_restore(i64 %20) #12, !dbg !7327
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !7328, !srcloc !5948
  %21 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i63, align 8, !dbg !7329
  %22 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %21, i32 0, i32 0, !dbg !7329
  %rlock.i64 = bitcast %union.anon.0* %22 to %struct.raw_spinlock*, !dbg !7329
  br label %do.cond, !dbg !7330

do.cond:                                          ; preds = %do.end22
  %23 = load volatile i64, i64* @jiffies, align 8, !dbg !7331
  %24 = load i64, i64* %delay, align 8, !dbg !7331
  %sub = sub i64 %23, %24, !dbg !7331
  %cmp24 = icmp slt i64 %sub, 0, !dbg !7331
  br i1 %cmp24, label %do.body, label %do.end26, !dbg !7330, !llvm.loop !7332

do.end26:                                         ; preds = %do.cond
  store i32 0, i32* %tmp27, align 4, !dbg !7334
  %25 = load i32, i32* %tmp27, align 4, !dbg !7337
  br label %do.body28, !dbg !7338

do.body28:                                        ; preds = %do.end26
  br label %do.body29, !dbg !7339

do.body29:                                        ; preds = %do.body28
  call void @llvm.dbg.declare(metadata i64* %__dummy30, metadata !7340, metadata !DIExpression()), !dbg !7342
  call void @llvm.dbg.declare(metadata i64* %__dummy231, metadata !7343, metadata !DIExpression()), !dbg !7342
  %cmp32 = icmp eq i64* %__dummy30, %__dummy231, !dbg !7342
  %conv33 = zext i1 %cmp32 to i32, !dbg !7342
  store i32 1, i32* %tmp34, align 4, !dbg !7342
  %26 = load i32, i32* %tmp34, align 4, !dbg !7342
  br label %do.body35, !dbg !7344

do.body35:                                        ; preds = %do.body29
  br label %do.body36, !dbg !7345

do.body36:                                        ; preds = %do.body35
  br label %do.body37, !dbg !7346

do.body37:                                        ; preds = %do.body36
  call void @llvm.dbg.declare(metadata i64* %__dummy38, metadata !7348, metadata !DIExpression()), !dbg !7351
  call void @llvm.dbg.declare(metadata i64* %__dummy239, metadata !7352, metadata !DIExpression()), !dbg !7351
  %cmp40 = icmp eq i64* %__dummy38, %__dummy239, !dbg !7351
  %conv41 = zext i1 %cmp40 to i32, !dbg !7351
  store i32 1, i32* %tmp42, align 4, !dbg !7351
  %27 = load i32, i32* %tmp42, align 4, !dbg !7351
  %call43 = call i64 @arch_local_irq_save() #11, !dbg !7353
  store i64 %call43, i64* %flags, align 8, !dbg !7353
  br label %do.end45, !dbg !7353

do.end45:                                         ; preds = %do.body37
  br label %do.end47, !dbg !7346

do.end47:                                         ; preds = %do.end45
  br label %do.body48, !dbg !7345

do.body48:                                        ; preds = %do.end47
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !7354, !srcloc !7355
  br label %do.body49, !dbg !7354

do.body49:                                        ; preds = %do.body48
  %28 = load %struct.acpi_ec*, %struct.acpi_ec** %ec.addr, align 8, !dbg !7356
  %lock50 = getelementptr inbounds %struct.acpi_ec, %struct.acpi_ec* %28, i32 0, i32 12, !dbg !7356
  store %struct.spinlock* %lock50, %struct.spinlock** %lock.addr.i65, align 8
  %29 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i65, align 8, !dbg !7357
  %30 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %29, i32 0, i32 0, !dbg !7358
  %rlock.i66 = bitcast %union.anon.0* %30 to %struct.raw_spinlock*, !dbg !7358
  br label %do.end53, !dbg !7356

do.end53:                                         ; preds = %do.body49
  br label %do.end55, !dbg !7354

do.end55:                                         ; preds = %do.end53
  br label %do.end57, !dbg !7345

do.end57:                                         ; preds = %do.end55
  br label %do.end59, !dbg !7344

do.end59:                                         ; preds = %do.end57
  br label %do.end61, !dbg !7339

do.end61:                                         ; preds = %do.end59
  %31 = load %struct.acpi_ec*, %struct.acpi_ec** %ec.addr, align 8, !dbg !7359
  call void @start_transaction(%struct.acpi_ec* %31) #11, !dbg !7360
  %32 = load %struct.acpi_ec*, %struct.acpi_ec** %ec.addr, align 8, !dbg !7361
  %lock62 = getelementptr inbounds %struct.acpi_ec, %struct.acpi_ec* %32, i32 0, i32 12, !dbg !7362
  %33 = load i64, i64* %flags, align 8, !dbg !7363
  store %struct.spinlock* %lock62, %struct.spinlock** %lock.addr.i67, align 8
  store i64 %33, i64* %flags.addr.i68, align 8
  call void @llvm.dbg.declare(metadata !372, metadata !5933, metadata !DIExpression()) #7, !dbg !7364
  call void @llvm.dbg.declare(metadata !372, metadata !5937, metadata !DIExpression()) #7, !dbg !7364
  store i32 1, i32* %tmp.i69, align 4, !dbg !7364
  %34 = load i32, i32* %tmp.i69, align 4, !dbg !7364
  call void @llvm.dbg.declare(metadata !372, metadata !5938, metadata !DIExpression()) #7, !dbg !7365
  call void @llvm.dbg.declare(metadata !372, metadata !5944, metadata !DIExpression()) #7, !dbg !7365
  store i32 1, i32* %tmp8.i70, align 4, !dbg !7365
  %35 = load i32, i32* %tmp8.i70, align 4, !dbg !7365
  %36 = load i64, i64* %flags.addr.i68, align 8, !dbg !7366
  call void @arch_local_irq_restore(i64 %36) #12, !dbg !7366
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !7367, !srcloc !5948
  %37 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i67, align 8, !dbg !7368
  %38 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %37, i32 0, i32 0, !dbg !7368
  %rlock.i71 = bitcast %union.anon.0* %38 to %struct.raw_spinlock*, !dbg !7368
  br label %while.cond, !dbg !7268, !llvm.loop !7369

while.end:                                        ; preds = %while.cond
  store i32 -62, i32* %retval, align 4, !dbg !7371
  br label %return, !dbg !7371

return:                                           ; preds = %while.end, %if.then
  %39 = load i32, i32* %retval, align 4, !dbg !7372
  ret i32 %39, !dbg !7372
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @acpi_ec_unmask_events(%struct.acpi_ec* %ec) #0 !dbg !7373 {
entry:
  %ec.addr = alloca %struct.acpi_ec*, align 8
  %tmp = alloca i32, align 4
  store %struct.acpi_ec* %ec, %struct.acpi_ec** %ec.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.acpi_ec** %ec.addr, metadata !7374, metadata !DIExpression()), !dbg !7375
  %0 = load %struct.acpi_ec*, %struct.acpi_ec** %ec.addr, align 8, !dbg !7376
  %flags = getelementptr inbounds %struct.acpi_ec, %struct.acpi_ec* %0, i32 0, i32 6, !dbg !7378
  %call = call zeroext i1 @test_bit(i64 8, i64* %flags) #11, !dbg !7379
  br i1 %call, label %if.then, label %if.end3, !dbg !7380

if.then:                                          ; preds = %entry
  %1 = load %struct.acpi_ec*, %struct.acpi_ec** %ec.addr, align 8, !dbg !7381
  %flags1 = getelementptr inbounds %struct.acpi_ec, %struct.acpi_ec* %1, i32 0, i32 6, !dbg !7383
  call void @clear_bit(i64 8, i64* %flags1) #11, !dbg !7384
  %2 = load %struct.acpi_ec*, %struct.acpi_ec** %ec.addr, align 8, !dbg !7385
  %gpe = getelementptr inbounds %struct.acpi_ec, %struct.acpi_ec* %2, i32 0, i32 1, !dbg !7387
  %3 = load i32, i32* %gpe, align 8, !dbg !7387
  %cmp = icmp sge i32 %3, 0, !dbg !7388
  br i1 %cmp, label %if.then2, label %if.else, !dbg !7389

if.then2:                                         ; preds = %if.then
  %4 = load %struct.acpi_ec*, %struct.acpi_ec** %ec.addr, align 8, !dbg !7390
  call void @acpi_ec_enable_gpe(%struct.acpi_ec* %4, i1 zeroext false) #11, !dbg !7391
  br label %if.end, !dbg !7391

if.else:                                          ; preds = %if.then
  %5 = load %struct.acpi_ec*, %struct.acpi_ec** %ec.addr, align 8, !dbg !7392
  %irq = getelementptr inbounds %struct.acpi_ec, %struct.acpi_ec* %5, i32 0, i32 2, !dbg !7393
  %6 = load i32, i32* %irq, align 4, !dbg !7393
  call void @enable_irq(i32 %6) #11, !dbg !7394
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then2
  store i32 0, i32* %tmp, align 4, !dbg !7395
  %7 = load i32, i32* %tmp, align 4, !dbg !7398
  br label %if.end3, !dbg !7399

if.end3:                                          ; preds = %if.end, %entry
  ret void, !dbg !7400
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @acpi_ec_complete_request(%struct.acpi_ec* %ec) #0 !dbg !7401 {
entry:
  %ec.addr = alloca %struct.acpi_ec*, align 8
  %flushed = alloca i8, align 1
  store %struct.acpi_ec* %ec, %struct.acpi_ec** %ec.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.acpi_ec** %ec.addr, metadata !7402, metadata !DIExpression()), !dbg !7403
  call void @llvm.dbg.declare(metadata i8* %flushed, metadata !7404, metadata !DIExpression()), !dbg !7405
  store i8 0, i8* %flushed, align 1, !dbg !7405
  %0 = load %struct.acpi_ec*, %struct.acpi_ec** %ec.addr, align 8, !dbg !7406
  %reference_count = getelementptr inbounds %struct.acpi_ec, %struct.acpi_ec* %0, i32 0, i32 7, !dbg !7407
  %1 = load i64, i64* %reference_count, align 8, !dbg !7408
  %dec = add i64 %1, -1, !dbg !7408
  store i64 %dec, i64* %reference_count, align 8, !dbg !7408
  %2 = load %struct.acpi_ec*, %struct.acpi_ec** %ec.addr, align 8, !dbg !7409
  %flags = getelementptr inbounds %struct.acpi_ec, %struct.acpi_ec* %2, i32 0, i32 6, !dbg !7411
  %call = call zeroext i1 @test_bit(i64 3, i64* %flags) #11, !dbg !7412
  br i1 %call, label %land.lhs.true, label %if.end, !dbg !7413

land.lhs.true:                                    ; preds = %entry
  %3 = load %struct.acpi_ec*, %struct.acpi_ec** %ec.addr, align 8, !dbg !7414
  %gpe = getelementptr inbounds %struct.acpi_ec, %struct.acpi_ec* %3, i32 0, i32 1, !dbg !7415
  %4 = load i32, i32* %gpe, align 8, !dbg !7415
  %cmp = icmp sge i32 %4, 0, !dbg !7416
  br i1 %cmp, label %land.lhs.true1, label %if.end, !dbg !7417

land.lhs.true1:                                   ; preds = %land.lhs.true
  %5 = load %struct.acpi_ec*, %struct.acpi_ec** %ec.addr, align 8, !dbg !7418
  %reference_count2 = getelementptr inbounds %struct.acpi_ec, %struct.acpi_ec* %5, i32 0, i32 7, !dbg !7419
  %6 = load i64, i64* %reference_count2, align 8, !dbg !7419
  %cmp3 = icmp eq i64 %6, 0, !dbg !7420
  br i1 %cmp3, label %if.then, label %if.end, !dbg !7421

if.then:                                          ; preds = %land.lhs.true1
  %7 = load %struct.acpi_ec*, %struct.acpi_ec** %ec.addr, align 8, !dbg !7422
  call void @acpi_ec_disable_gpe(%struct.acpi_ec* %7, i1 zeroext true) #11, !dbg !7423
  br label %if.end, !dbg !7423

if.end:                                           ; preds = %if.then, %land.lhs.true1, %land.lhs.true, %entry
  %8 = load %struct.acpi_ec*, %struct.acpi_ec** %ec.addr, align 8, !dbg !7424
  %call4 = call zeroext i1 @acpi_ec_flushed(%struct.acpi_ec* %8) #11, !dbg !7425
  %frombool = zext i1 %call4 to i8, !dbg !7426
  store i8 %frombool, i8* %flushed, align 1, !dbg !7426
  %9 = load i8, i8* %flushed, align 1, !dbg !7427
  %tobool = trunc i8 %9 to i1, !dbg !7427
  br i1 %tobool, label %if.then5, label %if.end6, !dbg !7429

if.then5:                                         ; preds = %if.end
  %10 = load %struct.acpi_ec*, %struct.acpi_ec** %ec.addr, align 8, !dbg !7430
  %wait = getelementptr inbounds %struct.acpi_ec, %struct.acpi_ec* %10, i32 0, i32 9, !dbg !7430
  call void @__wake_up(%struct.wait_queue_head* %wait, i32 3, i32 1, i8* null) #11, !dbg !7430
  br label %if.end6, !dbg !7430

if.end6:                                          ; preds = %if.then5, %if.end
  ret void, !dbg !7431
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @arch_local_save_flags() #0 !dbg !7432 {
entry:
  %__ret = alloca i64, align 8
  %__edi = alloca i64, align 8
  %__esi = alloca i64, align 8
  %__edx = alloca i64, align 8
  %__ecx = alloca i64, align 8
  %__eax = alloca i64, align 8
  %__mask = alloca i64, align 8
  %tmp = alloca i64, align 8
  %tmp2 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %__ret, metadata !7433, metadata !DIExpression()), !dbg !7435
  call void @llvm.dbg.declare(metadata i64* %__edi, metadata !7436, metadata !DIExpression()), !dbg !7435
  %0 = load i64, i64* %__edi, align 8, !dbg !7435
  store i64 %0, i64* %__edi, align 8, !dbg !7435
  call void @llvm.dbg.declare(metadata i64* %__esi, metadata !7437, metadata !DIExpression()), !dbg !7435
  %1 = load i64, i64* %__esi, align 8, !dbg !7435
  store i64 %1, i64* %__esi, align 8, !dbg !7435
  call void @llvm.dbg.declare(metadata i64* %__edx, metadata !7438, metadata !DIExpression()), !dbg !7435
  %2 = load i64, i64* %__edx, align 8, !dbg !7435
  store i64 %2, i64* %__edx, align 8, !dbg !7435
  call void @llvm.dbg.declare(metadata i64* %__ecx, metadata !7439, metadata !DIExpression()), !dbg !7435
  %3 = load i64, i64* %__ecx, align 8, !dbg !7435
  store i64 %3, i64* %__ecx, align 8, !dbg !7435
  call void @llvm.dbg.declare(metadata i64* %__eax, metadata !7440, metadata !DIExpression()), !dbg !7435
  %4 = load i64, i64* %__eax, align 8, !dbg !7435
  store i64 %4, i64* %__eax, align 8, !dbg !7435
  %5 = load i8*, i8** getelementptr inbounds (%struct.paravirt_patch_template, %struct.paravirt_patch_template* @pv_ops, i32 0, i32 3, i32 0, i32 0), align 8, !dbg !7435
  %6 = call i64 @llvm.read_register.i64(metadata !5611), !dbg !7441
  %7 = call { i64, i64 } asm sideeffect "771:\0A\09999:\0A\09.pushsection .discard.retpoline_safe\0A\09 .quad  999b\0A\09.popsection\0A\09call *${3:c};\0A772:\0A.pushsection .parainstructions,\22a\22\0A .balign 8 \0A .quad  771b\0A  .byte ${2:c}\0A  .byte 772b-771b\0A  .short ${4:c}\0A.popsection\0A", "={ax},={rsp},i,i,i,1,~{memory},~{cc},~{dirflag},~{fpsr},~{flags}"(i64 36, i8** getelementptr inbounds (%struct.paravirt_patch_template, %struct.paravirt_patch_template* @pv_ops, i32 0, i32 3, i32 0, i32 0), i32 1, i64 %6) #7, !dbg !7441, !srcloc !7444
  %asmresult = extractvalue { i64, i64 } %7, 0, !dbg !7441
  %asmresult1 = extractvalue { i64, i64 } %7, 1, !dbg !7441
  store i64 %asmresult, i64* %__eax, align 8, !dbg !7441
  call void @llvm.write_register.i64(metadata !5611, i64 %asmresult1), !dbg !7441
  %8 = load i64, i64* %__eax, align 8, !dbg !7441
  call void @llvm.dbg.declare(metadata i64* %__mask, metadata !7445, metadata !DIExpression()), !dbg !7447
  store i64 -1, i64* %__mask, align 8, !dbg !7447
  %9 = load i64, i64* %__mask, align 8, !dbg !7447
  store i64 %9, i64* %tmp, align 8, !dbg !7447
  %10 = load i64, i64* %tmp, align 8, !dbg !7447
  %and = and i64 %8, %10, !dbg !7441
  store i64 %and, i64* %__ret, align 8, !dbg !7441
  %11 = load i64, i64* %__ret, align 8, !dbg !7435
  store i64 %11, i64* %tmp2, align 8, !dbg !7448
  %12 = load i64, i64* %tmp2, align 8, !dbg !7435
  ret i64 %12, !dbg !7449
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @arch_local_irq_disable() #0 !dbg !7450 {
entry:
  %__edi = alloca i64, align 8
  %__esi = alloca i64, align 8
  %__edx = alloca i64, align 8
  %__ecx = alloca i64, align 8
  %__eax = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %__edi, metadata !7451, metadata !DIExpression()), !dbg !7453
  %0 = load i64, i64* %__edi, align 8, !dbg !7453
  store i64 %0, i64* %__edi, align 8, !dbg !7453
  call void @llvm.dbg.declare(metadata i64* %__esi, metadata !7454, metadata !DIExpression()), !dbg !7453
  %1 = load i64, i64* %__esi, align 8, !dbg !7453
  store i64 %1, i64* %__esi, align 8, !dbg !7453
  call void @llvm.dbg.declare(metadata i64* %__edx, metadata !7455, metadata !DIExpression()), !dbg !7453
  %2 = load i64, i64* %__edx, align 8, !dbg !7453
  store i64 %2, i64* %__edx, align 8, !dbg !7453
  call void @llvm.dbg.declare(metadata i64* %__ecx, metadata !7456, metadata !DIExpression()), !dbg !7453
  %3 = load i64, i64* %__ecx, align 8, !dbg !7453
  store i64 %3, i64* %__ecx, align 8, !dbg !7453
  call void @llvm.dbg.declare(metadata i64* %__eax, metadata !7457, metadata !DIExpression()), !dbg !7453
  %4 = load i64, i64* %__eax, align 8, !dbg !7453
  store i64 %4, i64* %__eax, align 8, !dbg !7453
  %5 = load i8*, i8** getelementptr inbounds (%struct.paravirt_patch_template, %struct.paravirt_patch_template* @pv_ops, i32 0, i32 3, i32 2, i32 0), align 8, !dbg !7453
  %6 = call i64 @llvm.read_register.i64(metadata !5611), !dbg !7453
  %7 = call { i64, i64 } asm sideeffect "771:\0A\09999:\0A\09.pushsection .discard.retpoline_safe\0A\09 .quad  999b\0A\09.popsection\0A\09call *${3:c};\0A772:\0A.pushsection .parainstructions,\22a\22\0A .balign 8 \0A .quad  771b\0A  .byte ${2:c}\0A  .byte 772b-771b\0A  .short ${4:c}\0A.popsection\0A", "={ax},={rsp},i,i,i,1,~{memory},~{cc},~{dirflag},~{fpsr},~{flags}"(i64 38, i8** getelementptr inbounds (%struct.paravirt_patch_template, %struct.paravirt_patch_template* @pv_ops, i32 0, i32 3, i32 2, i32 0), i32 1, i64 %6) #7, !dbg !7453, !srcloc !7458
  %asmresult = extractvalue { i64, i64 } %7, 0, !dbg !7453
  %asmresult1 = extractvalue { i64, i64 } %7, 1, !dbg !7453
  store i64 %asmresult, i64* %__eax, align 8, !dbg !7453
  call void @llvm.write_register.i64(metadata !5611, i64 %asmresult1), !dbg !7453
  ret void, !dbg !7459
}

; Function Attrs: nounwind readonly
declare i64 @llvm.read_register.i64(metadata) #6

; Function Attrs: nounwind
declare void @llvm.write_register.i64(metadata, i64) #7

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @acpi_ec_started(%struct.acpi_ec* %ec) #0 !dbg !7460 {
entry:
  %ec.addr = alloca %struct.acpi_ec*, align 8
  store %struct.acpi_ec* %ec, %struct.acpi_ec** %ec.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.acpi_ec** %ec.addr, metadata !7461, metadata !DIExpression()), !dbg !7462
  %0 = load %struct.acpi_ec*, %struct.acpi_ec** %ec.addr, align 8, !dbg !7463
  %flags = getelementptr inbounds %struct.acpi_ec, %struct.acpi_ec* %0, i32 0, i32 6, !dbg !7464
  %call = call zeroext i1 @test_bit(i64 6, i64* %flags) #11, !dbg !7465
  br i1 %call, label %land.rhs, label %land.end, !dbg !7466

land.rhs:                                         ; preds = %entry
  %1 = load %struct.acpi_ec*, %struct.acpi_ec** %ec.addr, align 8, !dbg !7467
  %flags1 = getelementptr inbounds %struct.acpi_ec, %struct.acpi_ec* %1, i32 0, i32 6, !dbg !7468
  %call2 = call zeroext i1 @test_bit(i64 7, i64* %flags1) #11, !dbg !7469
  %lnot = xor i1 %call2, true, !dbg !7470
  br label %land.end

land.end:                                         ; preds = %land.rhs, %entry
  %2 = phi i1 [ false, %entry ], [ %lnot, %land.rhs ], !dbg !7471
  ret i1 %2, !dbg !7472
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @acpi_ec_submit_request(%struct.acpi_ec* %ec) #0 !dbg !7473 {
entry:
  %ec.addr = alloca %struct.acpi_ec*, align 8
  store %struct.acpi_ec* %ec, %struct.acpi_ec** %ec.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.acpi_ec** %ec.addr, metadata !7474, metadata !DIExpression()), !dbg !7475
  %0 = load %struct.acpi_ec*, %struct.acpi_ec** %ec.addr, align 8, !dbg !7476
  %reference_count = getelementptr inbounds %struct.acpi_ec, %struct.acpi_ec* %0, i32 0, i32 7, !dbg !7477
  %1 = load i64, i64* %reference_count, align 8, !dbg !7478
  %inc = add i64 %1, 1, !dbg !7478
  store i64 %inc, i64* %reference_count, align 8, !dbg !7478
  %2 = load %struct.acpi_ec*, %struct.acpi_ec** %ec.addr, align 8, !dbg !7479
  %flags = getelementptr inbounds %struct.acpi_ec, %struct.acpi_ec* %2, i32 0, i32 6, !dbg !7481
  %call = call zeroext i1 @test_bit(i64 3, i64* %flags) #11, !dbg !7482
  br i1 %call, label %land.lhs.true, label %if.end, !dbg !7483

land.lhs.true:                                    ; preds = %entry
  %3 = load %struct.acpi_ec*, %struct.acpi_ec** %ec.addr, align 8, !dbg !7484
  %gpe = getelementptr inbounds %struct.acpi_ec, %struct.acpi_ec* %3, i32 0, i32 1, !dbg !7485
  %4 = load i32, i32* %gpe, align 8, !dbg !7485
  %cmp = icmp sge i32 %4, 0, !dbg !7486
  br i1 %cmp, label %land.lhs.true1, label %if.end, !dbg !7487

land.lhs.true1:                                   ; preds = %land.lhs.true
  %5 = load %struct.acpi_ec*, %struct.acpi_ec** %ec.addr, align 8, !dbg !7488
  %reference_count2 = getelementptr inbounds %struct.acpi_ec, %struct.acpi_ec* %5, i32 0, i32 7, !dbg !7489
  %6 = load i64, i64* %reference_count2, align 8, !dbg !7489
  %cmp3 = icmp eq i64 %6, 1, !dbg !7490
  br i1 %cmp3, label %if.then, label %if.end, !dbg !7491

if.then:                                          ; preds = %land.lhs.true1
  %7 = load %struct.acpi_ec*, %struct.acpi_ec** %ec.addr, align 8, !dbg !7492
  call void @acpi_ec_enable_gpe(%struct.acpi_ec* %7, i1 zeroext true) #11, !dbg !7493
  br label %if.end, !dbg !7493

if.end:                                           ; preds = %if.then, %land.lhs.true1, %land.lhs.true, %entry
  ret void, !dbg !7494
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @test_bit(i64 %nr, i64* %addr) #0 !dbg !7495 {
entry:
  %nr.addr.i3 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %nr.addr.i3, metadata !7502, metadata !DIExpression()), !dbg !7505
  %addr.addr.i4 = alloca i64*, align 8
  call void @llvm.dbg.declare(metadata i64** %addr.addr.i4, metadata !7507, metadata !DIExpression()), !dbg !7508
  %oldbit.i = alloca i8, align 1
  call void @llvm.dbg.declare(metadata i8* %oldbit.i, metadata !7509, metadata !DIExpression()), !dbg !7510
  %nr.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %nr.addr.i, metadata !7511, metadata !DIExpression()), !dbg !7513
  %addr.addr.i = alloca i64*, align 8
  call void @llvm.dbg.declare(metadata i64** %addr.addr.i, metadata !7515, metadata !DIExpression()), !dbg !7516
  %v.addr.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %v.addr.i, metadata !7517, metadata !DIExpression()), !dbg !7525
  %size.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i, metadata !7527, metadata !DIExpression()), !dbg !7528
  %nr.addr = alloca i64, align 8
  %addr.addr = alloca i64*, align 8
  store i64 %nr, i64* %nr.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %nr.addr, metadata !7529, metadata !DIExpression()), !dbg !7530
  store i64* %addr, i64** %addr.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %addr.addr, metadata !7531, metadata !DIExpression()), !dbg !7532
  %0 = load i64*, i64** %addr.addr, align 8, !dbg !7533
  %1 = load i64, i64* %nr.addr, align 8, !dbg !7534
  %div = sdiv i64 %1, 64, !dbg !7534
  %add.ptr = getelementptr i64, i64* %0, i64 %div, !dbg !7535
  %2 = bitcast i64* %add.ptr to i8*, !dbg !7533
  store i8* %2, i8** %v.addr.i, align 8
  store i64 8, i64* %size.addr.i, align 8
  %3 = load i8*, i8** %v.addr.i, align 8, !dbg !7536
  %4 = load i64, i64* %size.addr.i, align 8, !dbg !7537
  %conv.i = trunc i64 %4 to i32, !dbg !7537
  %call.i = call zeroext i1 @kasan_check_read(i8* %3, i32 %conv.i) #12, !dbg !7538
  %5 = load i8*, i8** %v.addr.i, align 8, !dbg !7539
  %6 = load i64, i64* %size.addr.i, align 8, !dbg !7539
  call void @kcsan_check_access(i8* %5, i64 %6, i32 4) #12, !dbg !7539
  %7 = load i64, i64* %nr.addr, align 8, !dbg !7540
  %8 = call i1 @llvm.is.constant.i64(i64 %7), !dbg !7540
  br i1 %8, label %cond.true, label %cond.false, !dbg !7540

cond.true:                                        ; preds = %entry
  %9 = load i64, i64* %nr.addr, align 8, !dbg !7540
  %10 = load i64*, i64** %addr.addr, align 8, !dbg !7540
  store i64 %9, i64* %nr.addr.i, align 8
  store i64* %10, i64** %addr.addr.i, align 8
  %11 = load i64, i64* %nr.addr.i, align 8, !dbg !7541
  %and.i = and i64 %11, 63, !dbg !7542
  %shl.i = shl i64 1, %and.i, !dbg !7543
  %12 = load i64*, i64** %addr.addr.i, align 8, !dbg !7544
  %13 = load i64, i64* %nr.addr.i, align 8, !dbg !7545
  %shr.i = ashr i64 %13, 6, !dbg !7546
  %arrayidx.i = getelementptr i64, i64* %12, i64 %shr.i, !dbg !7544
  %14 = load volatile i64, i64* %arrayidx.i, align 8, !dbg !7544
  %and1.i = and i64 %shl.i, %14, !dbg !7547
  %cmp.i = icmp ne i64 %and1.i, 0, !dbg !7548
  %conv = zext i1 %cmp.i to i32, !dbg !7540
  br label %cond.end, !dbg !7540

cond.false:                                       ; preds = %entry
  %15 = load i64, i64* %nr.addr, align 8, !dbg !7540
  %16 = load i64*, i64** %addr.addr, align 8, !dbg !7540
  store i64 %15, i64* %nr.addr.i3, align 8
  store i64* %16, i64** %addr.addr.i4, align 8
  %17 = load i64*, i64** %addr.addr.i4, align 8, !dbg !7549
  %18 = load i64, i64* %nr.addr.i3, align 8, !dbg !7550
  %19 = call i8 asm sideeffect " btq  $2,$1\0A\09/* output condition code c*/\0A", "={@ccc},*m,Ir,~{memory},~{dirflag},~{fpsr},~{flags}"(i64* %17, i64 %18) #7, !dbg !7551, !srcloc !7552
  store i8 %19, i8* %oldbit.i, align 1, !dbg !7551
  %20 = load i8, i8* %oldbit.i, align 1, !dbg !7553
  %tobool.i = trunc i8 %20 to i1, !dbg !7553
  %conv2 = zext i1 %tobool.i to i32, !dbg !7540
  br label %cond.end, !dbg !7540

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %conv, %cond.true ], [ %conv2, %cond.false ], !dbg !7540
  %tobool = icmp ne i32 %cond, 0, !dbg !7540
  ret i1 %tobool, !dbg !7554
}

; Function Attrs: nounwind readnone willreturn
declare i1 @llvm.is.constant.i64(i64) #8

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @kasan_check_read(i8* %p, i32 %size) #0 !dbg !7555 {
entry:
  %p.addr = alloca i8*, align 8
  %size.addr = alloca i32, align 4
  store i8* %p, i8** %p.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %p.addr, metadata !7559, metadata !DIExpression()), !dbg !7560
  store i32 %size, i32* %size.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %size.addr, metadata !7561, metadata !DIExpression()), !dbg !7562
  ret i1 true, !dbg !7563
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @kcsan_check_access(i8* %ptr, i64 %size, i32 %type) #0 !dbg !7564 {
entry:
  %ptr.addr = alloca i8*, align 8
  %size.addr = alloca i64, align 8
  %type.addr = alloca i32, align 4
  store i8* %ptr, i8** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %ptr.addr, metadata !7568, metadata !DIExpression()), !dbg !7569
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !7570, metadata !DIExpression()), !dbg !7571
  store i32 %type, i32* %type.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %type.addr, metadata !7572, metadata !DIExpression()), !dbg !7573
  ret void, !dbg !7574
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @acpi_ec_enable_gpe(%struct.acpi_ec* %ec, i1 zeroext %open) #0 !dbg !7575 {
entry:
  %ec.addr = alloca %struct.acpi_ec*, align 8
  %open.addr = alloca i8, align 1
  %tmp = alloca i32, align 4
  store %struct.acpi_ec* %ec, %struct.acpi_ec** %ec.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.acpi_ec** %ec.addr, metadata !7576, metadata !DIExpression()), !dbg !7577
  %frombool = zext i1 %open to i8
  store i8 %frombool, i8* %open.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %open.addr, metadata !7578, metadata !DIExpression()), !dbg !7579
  %0 = load i8, i8* %open.addr, align 1, !dbg !7580
  %tobool = trunc i8 %0 to i1, !dbg !7580
  br i1 %tobool, label %if.then, label %if.else, !dbg !7582

if.then:                                          ; preds = %entry
  %1 = load %struct.acpi_ec*, %struct.acpi_ec** %ec.addr, align 8, !dbg !7583
  %gpe = getelementptr inbounds %struct.acpi_ec, %struct.acpi_ec* %1, i32 0, i32 1, !dbg !7584
  %2 = load i32, i32* %gpe, align 8, !dbg !7584
  %call = call i32 @acpi_enable_gpe(i8* null, i32 %2) #11, !dbg !7585
  br label %if.end14, !dbg !7585

if.else:                                          ; preds = %entry
  br label %do.body, !dbg !7586

do.body:                                          ; preds = %if.else
  %3 = load %struct.acpi_ec*, %struct.acpi_ec** %ec.addr, align 8, !dbg !7588
  %reference_count = getelementptr inbounds %struct.acpi_ec, %struct.acpi_ec* %3, i32 0, i32 7, !dbg !7588
  %4 = load i64, i64* %reference_count, align 8, !dbg !7588
  %cmp = icmp ult i64 %4, 1, !dbg !7588
  %lnot = xor i1 %cmp, true, !dbg !7588
  %lnot1 = xor i1 %lnot, true, !dbg !7588
  %lnot.ext = zext i1 %lnot1 to i32, !dbg !7588
  %conv = sext i32 %lnot.ext to i64, !dbg !7588
  %tobool2 = icmp ne i64 %conv, 0, !dbg !7588
  br i1 %tobool2, label %if.then3, label %if.end, !dbg !7591

if.then3:                                         ; preds = %do.body
  br label %do.body4, !dbg !7588

do.body4:                                         ; preds = %if.then3
  br label %do.body5, !dbg !7592

do.body5:                                         ; preds = %do.body4
  br label %do.end, !dbg !7594

do.end:                                           ; preds = %do.body5
  br label %do.body6, !dbg !7592

do.body6:                                         ; preds = %do.end
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.4, i64 0, i64 0), i32 351, i32 0, i64 12) #7, !dbg !7596, !srcloc !7598
  br label %do.end7, !dbg !7596

do.end7:                                          ; preds = %do.body6
  br label %do.body8, !dbg !7592

do.body8:                                         ; preds = %do.end7
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.unreachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 307) #7, !dbg !7599, !srcloc !7602
  unreachable, !dbg !7603

do.end9:                                          ; No predecessors!
  br label %do.end10, !dbg !7592

do.end10:                                         ; preds = %do.end9
  br label %if.end, !dbg !7592

if.end:                                           ; preds = %do.end10, %do.body
  br label %do.end11, !dbg !7591

do.end11:                                         ; preds = %if.end
  %5 = load %struct.acpi_ec*, %struct.acpi_ec** %ec.addr, align 8, !dbg !7604
  %gpe12 = getelementptr inbounds %struct.acpi_ec, %struct.acpi_ec* %5, i32 0, i32 1, !dbg !7605
  %6 = load i32, i32* %gpe12, align 8, !dbg !7605
  %call13 = call i32 @acpi_set_gpe(i8* null, i32 %6, i8 zeroext 0) #11, !dbg !7606
  br label %if.end14

if.end14:                                         ; preds = %do.end11, %if.then
  %7 = load %struct.acpi_ec*, %struct.acpi_ec** %ec.addr, align 8, !dbg !7607
  %call15 = call zeroext i1 @acpi_ec_is_gpe_raised(%struct.acpi_ec* %7) #11, !dbg !7609
  br i1 %call15, label %if.then16, label %if.end17, !dbg !7610

if.then16:                                        ; preds = %if.end14
  store i32 0, i32* %tmp, align 4, !dbg !7611
  %8 = load i32, i32* %tmp, align 4, !dbg !7615
  %9 = load %struct.acpi_ec*, %struct.acpi_ec** %ec.addr, align 8, !dbg !7616
  call void @advance_transaction(%struct.acpi_ec* %9) #11, !dbg !7617
  br label %if.end17, !dbg !7618

if.end17:                                         ; preds = %if.then16, %if.end14
  ret void, !dbg !7619
}

; Function Attrs: noredzone
declare dso_local i32 @acpi_enable_gpe(i8*, i32) #2

; Function Attrs: noredzone
declare dso_local i32 @acpi_set_gpe(i8*, i32, i8 zeroext) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @acpi_ec_is_gpe_raised(%struct.acpi_ec* %ec) #0 !dbg !7620 {
entry:
  %ec.addr = alloca %struct.acpi_ec*, align 8
  %gpe_status = alloca i32, align 4
  store %struct.acpi_ec* %ec, %struct.acpi_ec** %ec.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.acpi_ec** %ec.addr, metadata !7621, metadata !DIExpression()), !dbg !7622
  call void @llvm.dbg.declare(metadata i32* %gpe_status, metadata !7623, metadata !DIExpression()), !dbg !7624
  store i32 0, i32* %gpe_status, align 4, !dbg !7624
  %0 = load %struct.acpi_ec*, %struct.acpi_ec** %ec.addr, align 8, !dbg !7625
  %gpe = getelementptr inbounds %struct.acpi_ec, %struct.acpi_ec* %0, i32 0, i32 1, !dbg !7626
  %1 = load i32, i32* %gpe, align 8, !dbg !7626
  %call = call i32 @acpi_get_gpe_status(i8* null, i32 %1, i32* %gpe_status) #11, !dbg !7627
  %2 = load i32, i32* %gpe_status, align 4, !dbg !7628
  %and = and i32 %2, 4, !dbg !7629
  %tobool = icmp ne i32 %and, 0, !dbg !7630
  %3 = zext i1 %tobool to i64, !dbg !7630
  %cond = select i1 %tobool, i32 1, i32 0, !dbg !7630
  %tobool1 = icmp ne i32 %cond, 0, !dbg !7630
  ret i1 %tobool1, !dbg !7631
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @advance_transaction(%struct.acpi_ec* %ec) #0 !dbg !7632 {
entry:
  %pfo_val__.i130 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %pfo_val__.i130, metadata !7633, metadata !DIExpression()), !dbg !7637
  %tmp.i131 = alloca i32, align 4
  %pfo_val__.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %pfo_val__.i, metadata !7633, metadata !DIExpression()), !dbg !7642
  %tmp.i = alloca i32, align 4
  %ec.addr = alloca %struct.acpi_ec*, align 8
  %t = alloca %struct.transaction*, align 8
  %status = alloca i8, align 1
  %wakeup = alloca i8, align 1
  %tmp = alloca i32, align 4
  %tmp61 = alloca i32, align 4
  store %struct.acpi_ec* %ec, %struct.acpi_ec** %ec.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.acpi_ec** %ec.addr, metadata !7645, metadata !DIExpression()), !dbg !7646
  call void @llvm.dbg.declare(metadata %struct.transaction** %t, metadata !7647, metadata !DIExpression()), !dbg !7648
  call void @llvm.dbg.declare(metadata i8* %status, metadata !7649, metadata !DIExpression()), !dbg !7650
  call void @llvm.dbg.declare(metadata i8* %wakeup, metadata !7651, metadata !DIExpression()), !dbg !7652
  store i8 0, i8* %wakeup, align 1, !dbg !7652
  store i32 0, i32* %tmp, align 4, !dbg !7653
  %0 = load i32, i32* %tmp, align 4, !dbg !7656
  %1 = load %struct.acpi_ec*, %struct.acpi_ec** %ec.addr, align 8, !dbg !7657
  %gpe = getelementptr inbounds %struct.acpi_ec, %struct.acpi_ec* %1, i32 0, i32 1, !dbg !7659
  %2 = load i32, i32* %gpe, align 8, !dbg !7659
  %cmp = icmp sge i32 %2, 0, !dbg !7660
  br i1 %cmp, label %if.then, label %if.end, !dbg !7661

if.then:                                          ; preds = %entry
  %3 = load %struct.acpi_ec*, %struct.acpi_ec** %ec.addr, align 8, !dbg !7662
  call void @acpi_ec_clear_gpe(%struct.acpi_ec* %3) #11, !dbg !7663
  br label %if.end, !dbg !7663

if.end:                                           ; preds = %if.then, %entry
  %4 = load %struct.acpi_ec*, %struct.acpi_ec** %ec.addr, align 8, !dbg !7664
  %call = call zeroext i8 @acpi_ec_read_status(%struct.acpi_ec* %4) #11, !dbg !7665
  store i8 %call, i8* %status, align 1, !dbg !7666
  %5 = load %struct.acpi_ec*, %struct.acpi_ec** %ec.addr, align 8, !dbg !7667
  %curr = getelementptr inbounds %struct.acpi_ec, %struct.acpi_ec* %5, i32 0, i32 11, !dbg !7668
  %6 = load %struct.transaction*, %struct.transaction** %curr, align 8, !dbg !7668
  store %struct.transaction* %6, %struct.transaction** %t, align 8, !dbg !7669
  %7 = load %struct.transaction*, %struct.transaction** %t, align 8, !dbg !7670
  %tobool = icmp ne %struct.transaction* %7, null, !dbg !7670
  br i1 %tobool, label %lor.lhs.false, label %if.then2, !dbg !7672

lor.lhs.false:                                    ; preds = %if.end
  %8 = load %struct.transaction*, %struct.transaction** %t, align 8, !dbg !7673
  %flags = getelementptr inbounds %struct.transaction, %struct.transaction* %8, i32 0, i32 8, !dbg !7674
  %9 = load i8, i8* %flags, align 1, !dbg !7674
  %conv = zext i8 %9 to i32, !dbg !7673
  %and = and i32 %conv, 1, !dbg !7675
  %tobool1 = icmp ne i32 %and, 0, !dbg !7675
  br i1 %tobool1, label %if.end13, label %if.then2, !dbg !7676

if.then2:                                         ; preds = %lor.lhs.false, %if.end
  %10 = load i32, i32* @ec_event_clearing, align 4, !dbg !7677
  %cmp3 = icmp eq i32 %10, 2, !dbg !7680
  br i1 %cmp3, label %land.lhs.true, label %if.end12, !dbg !7681

land.lhs.true:                                    ; preds = %if.then2
  %11 = load %struct.acpi_ec*, %struct.acpi_ec** %ec.addr, align 8, !dbg !7682
  %nr_pending_queries = getelementptr inbounds %struct.acpi_ec, %struct.acpi_ec* %11, i32 0, i32 15, !dbg !7683
  %12 = load i64, i64* %nr_pending_queries, align 8, !dbg !7683
  %tobool5 = icmp ne i64 %12, 0, !dbg !7682
  br i1 %tobool5, label %lor.lhs.false6, label %if.then10, !dbg !7684

lor.lhs.false6:                                   ; preds = %land.lhs.true
  %13 = load %struct.acpi_ec*, %struct.acpi_ec** %ec.addr, align 8, !dbg !7685
  %flags7 = getelementptr inbounds %struct.acpi_ec, %struct.acpi_ec* %13, i32 0, i32 6, !dbg !7686
  %call8 = call zeroext i1 @test_bit(i64 2, i64* %flags7) #11, !dbg !7687
  br i1 %call8, label %if.then10, label %if.end12, !dbg !7688

if.then10:                                        ; preds = %lor.lhs.false6, %land.lhs.true
  %14 = load %struct.acpi_ec*, %struct.acpi_ec** %ec.addr, align 8, !dbg !7689
  %flags11 = getelementptr inbounds %struct.acpi_ec, %struct.acpi_ec* %14, i32 0, i32 6, !dbg !7691
  call void @clear_bit(i64 2, i64* %flags11) #11, !dbg !7692
  %15 = load %struct.acpi_ec*, %struct.acpi_ec** %ec.addr, align 8, !dbg !7693
  call void @acpi_ec_complete_query(%struct.acpi_ec* %15) #11, !dbg !7694
  br label %if.end12, !dbg !7695

if.end12:                                         ; preds = %if.then10, %lor.lhs.false6, %if.then2
  br label %if.end13, !dbg !7696

if.end13:                                         ; preds = %if.end12, %lor.lhs.false
  %16 = load %struct.transaction*, %struct.transaction** %t, align 8, !dbg !7697
  %tobool14 = icmp ne %struct.transaction* %16, null, !dbg !7697
  br i1 %tobool14, label %if.end16, label %if.then15, !dbg !7699

if.then15:                                        ; preds = %if.end13
  br label %err, !dbg !7700

if.end16:                                         ; preds = %if.end13
  %17 = load %struct.transaction*, %struct.transaction** %t, align 8, !dbg !7701
  %flags17 = getelementptr inbounds %struct.transaction, %struct.transaction* %17, i32 0, i32 8, !dbg !7703
  %18 = load i8, i8* %flags17, align 1, !dbg !7703
  %conv18 = zext i8 %18 to i32, !dbg !7701
  %and19 = and i32 %conv18, 1, !dbg !7704
  %tobool20 = icmp ne i32 %and19, 0, !dbg !7704
  br i1 %tobool20, label %if.then21, label %if.else82, !dbg !7705

if.then21:                                        ; preds = %if.end16
  %19 = load %struct.transaction*, %struct.transaction** %t, align 8, !dbg !7706
  %wlen = getelementptr inbounds %struct.transaction, %struct.transaction* %19, i32 0, i32 6, !dbg !7709
  %20 = load i8, i8* %wlen, align 1, !dbg !7709
  %conv22 = zext i8 %20 to i32, !dbg !7706
  %21 = load %struct.transaction*, %struct.transaction** %t, align 8, !dbg !7710
  %wi = getelementptr inbounds %struct.transaction, %struct.transaction* %21, i32 0, i32 4, !dbg !7711
  %22 = load i8, i8* %wi, align 1, !dbg !7711
  %conv23 = zext i8 %22 to i32, !dbg !7710
  %cmp24 = icmp sgt i32 %conv22, %conv23, !dbg !7712
  br i1 %cmp24, label %if.then26, label %if.else34, !dbg !7713

if.then26:                                        ; preds = %if.then21
  %23 = load i8, i8* %status, align 1, !dbg !7714
  %conv27 = zext i8 %23 to i32, !dbg !7714
  %and28 = and i32 %conv27, 2, !dbg !7717
  %cmp29 = icmp eq i32 %and28, 0, !dbg !7718
  br i1 %cmp29, label %if.then31, label %if.else, !dbg !7719

if.then31:                                        ; preds = %if.then26
  %24 = load %struct.acpi_ec*, %struct.acpi_ec** %ec.addr, align 8, !dbg !7720
  %25 = load %struct.transaction*, %struct.transaction** %t, align 8, !dbg !7721
  %wdata = getelementptr inbounds %struct.transaction, %struct.transaction* %25, i32 0, i32 0, !dbg !7722
  %26 = load i8*, i8** %wdata, align 8, !dbg !7722
  %27 = load %struct.transaction*, %struct.transaction** %t, align 8, !dbg !7723
  %wi32 = getelementptr inbounds %struct.transaction, %struct.transaction* %27, i32 0, i32 4, !dbg !7724
  %28 = load i8, i8* %wi32, align 1, !dbg !7725
  %inc = add i8 %28, 1, !dbg !7725
  store i8 %inc, i8* %wi32, align 1, !dbg !7725
  %idxprom = zext i8 %28 to i64, !dbg !7721
  %arrayidx = getelementptr i8, i8* %26, i64 %idxprom, !dbg !7721
  %29 = load i8, i8* %arrayidx, align 1, !dbg !7721
  call void @acpi_ec_write_data(%struct.acpi_ec* %24, i8 zeroext %29) #11, !dbg !7726
  br label %if.end33, !dbg !7726

if.else:                                          ; preds = %if.then26
  br label %err, !dbg !7727

if.end33:                                         ; preds = %if.then31
  br label %if.end81, !dbg !7728

if.else34:                                        ; preds = %if.then21
  %30 = load %struct.transaction*, %struct.transaction** %t, align 8, !dbg !7729
  %rlen = getelementptr inbounds %struct.transaction, %struct.transaction* %30, i32 0, i32 7, !dbg !7731
  %31 = load i8, i8* %rlen, align 2, !dbg !7731
  %conv35 = zext i8 %31 to i32, !dbg !7729
  %32 = load %struct.transaction*, %struct.transaction** %t, align 8, !dbg !7732
  %ri = getelementptr inbounds %struct.transaction, %struct.transaction* %32, i32 0, i32 5, !dbg !7733
  %33 = load i8, i8* %ri, align 4, !dbg !7733
  %conv36 = zext i8 %33 to i32, !dbg !7732
  %cmp37 = icmp sgt i32 %conv35, %conv36, !dbg !7734
  br i1 %cmp37, label %if.then39, label %if.else66, !dbg !7735

if.then39:                                        ; preds = %if.else34
  %34 = load i8, i8* %status, align 1, !dbg !7736
  %conv40 = zext i8 %34 to i32, !dbg !7736
  %and41 = and i32 %conv40, 1, !dbg !7739
  %cmp42 = icmp eq i32 %and41, 1, !dbg !7740
  br i1 %cmp42, label %if.then44, label %if.else64, !dbg !7741

if.then44:                                        ; preds = %if.then39
  %35 = load %struct.acpi_ec*, %struct.acpi_ec** %ec.addr, align 8, !dbg !7742
  %call45 = call zeroext i8 @acpi_ec_read_data(%struct.acpi_ec* %35) #11, !dbg !7744
  %36 = load %struct.transaction*, %struct.transaction** %t, align 8, !dbg !7745
  %rdata = getelementptr inbounds %struct.transaction, %struct.transaction* %36, i32 0, i32 1, !dbg !7746
  %37 = load i8*, i8** %rdata, align 8, !dbg !7746
  %38 = load %struct.transaction*, %struct.transaction** %t, align 8, !dbg !7747
  %ri46 = getelementptr inbounds %struct.transaction, %struct.transaction* %38, i32 0, i32 5, !dbg !7748
  %39 = load i8, i8* %ri46, align 4, !dbg !7749
  %inc47 = add i8 %39, 1, !dbg !7749
  store i8 %inc47, i8* %ri46, align 4, !dbg !7749
  %idxprom48 = zext i8 %39 to i64, !dbg !7745
  %arrayidx49 = getelementptr i8, i8* %37, i64 %idxprom48, !dbg !7745
  store i8 %call45, i8* %arrayidx49, align 1, !dbg !7750
  %40 = load %struct.transaction*, %struct.transaction** %t, align 8, !dbg !7751
  %rlen50 = getelementptr inbounds %struct.transaction, %struct.transaction* %40, i32 0, i32 7, !dbg !7753
  %41 = load i8, i8* %rlen50, align 2, !dbg !7753
  %conv51 = zext i8 %41 to i32, !dbg !7751
  %42 = load %struct.transaction*, %struct.transaction** %t, align 8, !dbg !7754
  %ri52 = getelementptr inbounds %struct.transaction, %struct.transaction* %42, i32 0, i32 5, !dbg !7755
  %43 = load i8, i8* %ri52, align 4, !dbg !7755
  %conv53 = zext i8 %43 to i32, !dbg !7754
  %cmp54 = icmp eq i32 %conv51, %conv53, !dbg !7756
  br i1 %cmp54, label %if.then56, label %if.end63, !dbg !7757

if.then56:                                        ; preds = %if.then44
  %44 = load %struct.acpi_ec*, %struct.acpi_ec** %ec.addr, align 8, !dbg !7758
  call void @ec_transaction_transition(%struct.acpi_ec* %44, i64 2) #11, !dbg !7760
  %45 = load %struct.transaction*, %struct.transaction** %t, align 8, !dbg !7761
  %command = getelementptr inbounds %struct.transaction, %struct.transaction* %45, i32 0, i32 3, !dbg !7763
  %46 = load i8, i8* %command, align 2, !dbg !7763
  %conv57 = zext i8 %46 to i32, !dbg !7761
  %cmp58 = icmp eq i32 %conv57, 132, !dbg !7764
  br i1 %cmp58, label %if.then60, label %if.end62, !dbg !7765

if.then60:                                        ; preds = %if.then56
  store i32 0, i32* %tmp61, align 4, !dbg !7766
  %47 = load i32, i32* %tmp61, align 4, !dbg !7769
  br label %if.end62, !dbg !7770

if.end62:                                         ; preds = %if.then60, %if.then56
  store i8 1, i8* %wakeup, align 1, !dbg !7771
  br label %if.end63, !dbg !7772

if.end63:                                         ; preds = %if.end62, %if.then44
  br label %if.end65, !dbg !7773

if.else64:                                        ; preds = %if.then39
  br label %err, !dbg !7774

if.end65:                                         ; preds = %if.end63
  br label %if.end80, !dbg !7775

if.else66:                                        ; preds = %if.else34
  %48 = load %struct.transaction*, %struct.transaction** %t, align 8, !dbg !7776
  %wlen67 = getelementptr inbounds %struct.transaction, %struct.transaction* %48, i32 0, i32 6, !dbg !7778
  %49 = load i8, i8* %wlen67, align 1, !dbg !7778
  %conv68 = zext i8 %49 to i32, !dbg !7776
  %50 = load %struct.transaction*, %struct.transaction** %t, align 8, !dbg !7779
  %wi69 = getelementptr inbounds %struct.transaction, %struct.transaction* %50, i32 0, i32 4, !dbg !7780
  %51 = load i8, i8* %wi69, align 1, !dbg !7780
  %conv70 = zext i8 %51 to i32, !dbg !7779
  %cmp71 = icmp eq i32 %conv68, %conv70, !dbg !7781
  br i1 %cmp71, label %land.lhs.true73, label %if.end79, !dbg !7782

land.lhs.true73:                                  ; preds = %if.else66
  %52 = load i8, i8* %status, align 1, !dbg !7783
  %conv74 = zext i8 %52 to i32, !dbg !7783
  %and75 = and i32 %conv74, 2, !dbg !7784
  %cmp76 = icmp eq i32 %and75, 0, !dbg !7785
  br i1 %cmp76, label %if.then78, label %if.end79, !dbg !7786

if.then78:                                        ; preds = %land.lhs.true73
  %53 = load %struct.acpi_ec*, %struct.acpi_ec** %ec.addr, align 8, !dbg !7787
  call void @ec_transaction_transition(%struct.acpi_ec* %53, i64 2) #11, !dbg !7789
  store i8 1, i8* %wakeup, align 1, !dbg !7790
  br label %if.end79, !dbg !7791

if.end79:                                         ; preds = %if.then78, %land.lhs.true73, %if.else66
  br label %if.end80

if.end80:                                         ; preds = %if.end79, %if.end65
  br label %if.end81

if.end81:                                         ; preds = %if.end80, %if.end33
  br label %out, !dbg !7792

if.else82:                                        ; preds = %if.end16
  %54 = load i8, i8* %status, align 1, !dbg !7793
  %conv83 = zext i8 %54 to i32, !dbg !7793
  %and84 = and i32 %conv83, 2, !dbg !7795
  %tobool85 = icmp ne i32 %and84, 0, !dbg !7795
  br i1 %tobool85, label %if.end88, label %if.then86, !dbg !7796

if.then86:                                        ; preds = %if.else82
  %55 = load %struct.acpi_ec*, %struct.acpi_ec** %ec.addr, align 8, !dbg !7797
  %56 = load %struct.transaction*, %struct.transaction** %t, align 8, !dbg !7799
  %command87 = getelementptr inbounds %struct.transaction, %struct.transaction* %56, i32 0, i32 3, !dbg !7800
  %57 = load i8, i8* %command87, align 2, !dbg !7800
  call void @acpi_ec_write_cmd(%struct.acpi_ec* %55, i8 zeroext %57) #11, !dbg !7801
  %58 = load %struct.acpi_ec*, %struct.acpi_ec** %ec.addr, align 8, !dbg !7802
  call void @ec_transaction_transition(%struct.acpi_ec* %58, i64 1) #11, !dbg !7803
  br label %out, !dbg !7804

if.end88:                                         ; preds = %if.else82
  br label %if.end89

if.end89:                                         ; preds = %if.end88
  br label %err, !dbg !7805

err:                                              ; preds = %if.end89, %if.else64, %if.else, %if.then15
  call void @llvm.dbg.label(metadata !7806), !dbg !7807
  %59 = load i8, i8* %status, align 1, !dbg !7808
  %conv90 = zext i8 %59 to i32, !dbg !7808
  %and91 = and i32 %conv90, 32, !dbg !7809
  %tobool92 = icmp ne i32 %and91, 0, !dbg !7809
  br i1 %tobool92, label %if.end115, label %if.then93, !dbg !7810

if.then93:                                        ; preds = %err
  %60 = call i32 asm "movl $1, $0", "=r,*m,~{dirflag},~{fpsr},~{flags}"(i32* @__preempt_count) #6, !dbg !7637, !srcloc !7811
  store i32 %60, i32* %pfo_val__.i130, align 4, !dbg !7637
  %61 = load i32, i32* %pfo_val__.i130, align 4, !dbg !7637
  %conv.i132 = zext i32 %61 to i64, !dbg !7637
  store i32 %61, i32* %tmp.i131, align 4, !dbg !7637
  %62 = load i32, i32* %tmp.i131, align 4, !dbg !7637
  %and.i133 = and i32 %62, 2147483647, !dbg !7812
  %conv95 = sext i32 %and.i133 to i64, !dbg !7813
  %and96 = and i64 %conv95, 16776960, !dbg !7813
  %tobool97 = icmp ne i64 %and96, 0, !dbg !7813
  br i1 %tobool97, label %land.lhs.true98, label %if.end114, !dbg !7814

land.lhs.true98:                                  ; preds = %if.then93
  %63 = load %struct.transaction*, %struct.transaction** %t, align 8, !dbg !7815
  %tobool99 = icmp ne %struct.transaction* %63, null, !dbg !7815
  br i1 %tobool99, label %if.then100, label %if.end114, !dbg !7816

if.then100:                                       ; preds = %land.lhs.true98
  %64 = load %struct.transaction*, %struct.transaction** %t, align 8, !dbg !7817
  %irq_count = getelementptr inbounds %struct.transaction, %struct.transaction* %64, i32 0, i32 2, !dbg !7820
  %65 = load i16, i16* %irq_count, align 8, !dbg !7820
  %conv101 = zext i16 %65 to i32, !dbg !7817
  %66 = load i32, i32* @ec_storm_threshold, align 4, !dbg !7821
  %cmp102 = icmp ult i32 %conv101, %66, !dbg !7822
  br i1 %cmp102, label %if.then104, label %if.end107, !dbg !7823

if.then104:                                       ; preds = %if.then100
  %67 = load %struct.transaction*, %struct.transaction** %t, align 8, !dbg !7824
  %irq_count105 = getelementptr inbounds %struct.transaction, %struct.transaction* %67, i32 0, i32 2, !dbg !7825
  %68 = load i16, i16* %irq_count105, align 8, !dbg !7826
  %inc106 = add i16 %68, 1, !dbg !7826
  store i16 %inc106, i16* %irq_count105, align 8, !dbg !7826
  br label %if.end107, !dbg !7826

if.end107:                                        ; preds = %if.then104, %if.then100
  %69 = load %struct.transaction*, %struct.transaction** %t, align 8, !dbg !7827
  %irq_count108 = getelementptr inbounds %struct.transaction, %struct.transaction* %69, i32 0, i32 2, !dbg !7829
  %70 = load i16, i16* %irq_count108, align 8, !dbg !7829
  %conv109 = zext i16 %70 to i32, !dbg !7827
  %71 = load i32, i32* @ec_storm_threshold, align 4, !dbg !7830
  %cmp110 = icmp eq i32 %conv109, %71, !dbg !7831
  br i1 %cmp110, label %if.then112, label %if.end113, !dbg !7832

if.then112:                                       ; preds = %if.end107
  %72 = load %struct.acpi_ec*, %struct.acpi_ec** %ec.addr, align 8, !dbg !7833
  call void @acpi_ec_mask_events(%struct.acpi_ec* %72) #11, !dbg !7834
  br label %if.end113, !dbg !7834

if.end113:                                        ; preds = %if.then112, %if.end107
  br label %if.end114, !dbg !7835

if.end114:                                        ; preds = %if.end113, %land.lhs.true98, %if.then93
  br label %if.end115, !dbg !7836

if.end115:                                        ; preds = %if.end114, %err
  br label %out, !dbg !7837

out:                                              ; preds = %if.end115, %if.then86, %if.end81
  call void @llvm.dbg.label(metadata !7838), !dbg !7839
  %73 = load i8, i8* %status, align 1, !dbg !7840
  %conv116 = zext i8 %73 to i32, !dbg !7840
  %and117 = and i32 %conv116, 32, !dbg !7842
  %tobool118 = icmp ne i32 %and117, 0, !dbg !7842
  br i1 %tobool118, label %if.then119, label %if.end120, !dbg !7843

if.then119:                                       ; preds = %out
  %74 = load %struct.acpi_ec*, %struct.acpi_ec** %ec.addr, align 8, !dbg !7844
  call void @acpi_ec_submit_query(%struct.acpi_ec* %74) #11, !dbg !7845
  br label %if.end120, !dbg !7845

if.end120:                                        ; preds = %if.then119, %out
  %75 = load i8, i8* %wakeup, align 1, !dbg !7846
  %tobool121 = trunc i8 %75 to i1, !dbg !7846
  br i1 %tobool121, label %land.lhs.true123, label %if.end129, !dbg !7847

land.lhs.true123:                                 ; preds = %if.end120
  %76 = call i32 asm "movl $1, $0", "=r,*m,~{dirflag},~{fpsr},~{flags}"(i32* @__preempt_count) #6, !dbg !7642, !srcloc !7811
  store i32 %76, i32* %pfo_val__.i, align 4, !dbg !7642
  %77 = load i32, i32* %pfo_val__.i, align 4, !dbg !7642
  %conv.i = zext i32 %77 to i64, !dbg !7642
  store i32 %77, i32* %tmp.i, align 4, !dbg !7642
  %78 = load i32, i32* %tmp.i, align 4, !dbg !7642
  %and.i = and i32 %78, 2147483647, !dbg !7848
  %conv125 = sext i32 %and.i to i64, !dbg !7849
  %and126 = and i64 %conv125, 16776960, !dbg !7849
  %tobool127 = icmp ne i64 %and126, 0, !dbg !7849
  br i1 %tobool127, label %if.then128, label %if.end129, !dbg !7850

if.then128:                                       ; preds = %land.lhs.true123
  %79 = load %struct.acpi_ec*, %struct.acpi_ec** %ec.addr, align 8, !dbg !7851
  %wait = getelementptr inbounds %struct.acpi_ec, %struct.acpi_ec* %79, i32 0, i32 9, !dbg !7851
  call void @__wake_up(%struct.wait_queue_head* %wait, i32 3, i32 1, i8* null) #11, !dbg !7851
  br label %if.end129, !dbg !7851

if.end129:                                        ; preds = %if.then128, %land.lhs.true123, %if.end120
  ret void, !dbg !7852
}

; Function Attrs: noredzone
declare dso_local i32 @acpi_get_gpe_status(i8*, i32, i32*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @acpi_ec_clear_gpe(%struct.acpi_ec* %ec) #0 !dbg !7853 {
entry:
  %ec.addr = alloca %struct.acpi_ec*, align 8
  store %struct.acpi_ec* %ec, %struct.acpi_ec** %ec.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.acpi_ec** %ec.addr, metadata !7854, metadata !DIExpression()), !dbg !7855
  %0 = load %struct.acpi_ec*, %struct.acpi_ec** %ec.addr, align 8, !dbg !7856
  %call = call zeroext i1 @acpi_ec_is_gpe_raised(%struct.acpi_ec* %0) #11, !dbg !7858
  br i1 %call, label %if.end, label %if.then, !dbg !7859

if.then:                                          ; preds = %entry
  br label %return, !dbg !7860

if.end:                                           ; preds = %entry
  %1 = load %struct.acpi_ec*, %struct.acpi_ec** %ec.addr, align 8, !dbg !7861
  %gpe = getelementptr inbounds %struct.acpi_ec, %struct.acpi_ec* %1, i32 0, i32 1, !dbg !7862
  %2 = load i32, i32* %gpe, align 8, !dbg !7862
  %call1 = call i32 @acpi_clear_gpe(i8* null, i32 %2) #11, !dbg !7863
  br label %return, !dbg !7864

return:                                           ; preds = %if.end, %if.then
  ret void, !dbg !7864
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i8 @acpi_ec_read_status(%struct.acpi_ec* %ec) #0 !dbg !7865 {
entry:
  %ec.addr = alloca %struct.acpi_ec*, align 8
  %x = alloca i8, align 1
  %tmp = alloca i32, align 4
  store %struct.acpi_ec* %ec, %struct.acpi_ec** %ec.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.acpi_ec** %ec.addr, metadata !7868, metadata !DIExpression()), !dbg !7869
  call void @llvm.dbg.declare(metadata i8* %x, metadata !7870, metadata !DIExpression()), !dbg !7871
  %0 = load %struct.acpi_ec*, %struct.acpi_ec** %ec.addr, align 8, !dbg !7872
  %command_addr = getelementptr inbounds %struct.acpi_ec, %struct.acpi_ec* %0, i32 0, i32 3, !dbg !7873
  %1 = load i64, i64* %command_addr, align 8, !dbg !7873
  %conv = trunc i64 %1 to i32, !dbg !7872
  %call = call zeroext i8 @inb(i32 %conv) #11, !dbg !7874
  store i8 %call, i8* %x, align 1, !dbg !7871
  store i32 0, i32* %tmp, align 4, !dbg !7875
  %2 = load i32, i32* %tmp, align 4, !dbg !7878
  %3 = load i8, i8* %x, align 1, !dbg !7879
  ret i8 %3, !dbg !7880
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @clear_bit(i64 %nr, i64* %addr) #0 !dbg !7881 {
entry:
  %nr.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %nr.addr.i, metadata !7886, metadata !DIExpression()), !dbg !7888
  %addr.addr.i = alloca i64*, align 8
  call void @llvm.dbg.declare(metadata i64** %addr.addr.i, metadata !7890, metadata !DIExpression()), !dbg !7891
  %v.addr.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %v.addr.i, metadata !7892, metadata !DIExpression()), !dbg !7894
  %size.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i, metadata !7896, metadata !DIExpression()), !dbg !7897
  %nr.addr = alloca i64, align 8
  %addr.addr = alloca i64*, align 8
  store i64 %nr, i64* %nr.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %nr.addr, metadata !7898, metadata !DIExpression()), !dbg !7899
  store i64* %addr, i64** %addr.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %addr.addr, metadata !7900, metadata !DIExpression()), !dbg !7901
  %0 = load i64*, i64** %addr.addr, align 8, !dbg !7902
  %1 = load i64, i64* %nr.addr, align 8, !dbg !7903
  %div = sdiv i64 %1, 64, !dbg !7903
  %add.ptr = getelementptr i64, i64* %0, i64 %div, !dbg !7904
  %2 = bitcast i64* %add.ptr to i8*, !dbg !7902
  store i8* %2, i8** %v.addr.i, align 8
  store i64 8, i64* %size.addr.i, align 8
  %3 = load i8*, i8** %v.addr.i, align 8, !dbg !7905
  %4 = load i64, i64* %size.addr.i, align 8, !dbg !7906
  %conv.i = trunc i64 %4 to i32, !dbg !7906
  %call.i = call zeroext i1 @kasan_check_write(i8* %3, i32 %conv.i) #12, !dbg !7907
  %5 = load i8*, i8** %v.addr.i, align 8, !dbg !7908
  %6 = load i64, i64* %size.addr.i, align 8, !dbg !7908
  call void @kcsan_check_access(i8* %5, i64 %6, i32 5) #12, !dbg !7908
  %7 = load i64, i64* %nr.addr, align 8, !dbg !7909
  %8 = load i64*, i64** %addr.addr, align 8, !dbg !7910
  store i64 %7, i64* %nr.addr.i, align 8
  store i64* %8, i64** %addr.addr.i, align 8
  %9 = load i64, i64* %nr.addr.i, align 8, !dbg !7911
  %10 = call i1 @llvm.is.constant.i64(i64 %9) #7, !dbg !7913
  br i1 %10, label %if.then.i, label %if.else.i, !dbg !7914

if.then.i:                                        ; preds = %entry
  %11 = load i64*, i64** %addr.addr.i, align 8, !dbg !7915
  %12 = bitcast i64* %11 to i8*, !dbg !7915
  %13 = load i64, i64* %nr.addr.i, align 8, !dbg !7915
  %shr.i = ashr i64 %13, 3, !dbg !7915
  %add.ptr.i = getelementptr i8, i8* %12, i64 %shr.i, !dbg !7915
  %14 = load i64, i64* %nr.addr.i, align 8, !dbg !7917
  %and.i = and i64 %14, 7, !dbg !7917
  %sh_prom.i = trunc i64 %and.i to i32, !dbg !7917
  %shl.i = shl i32 1, %sh_prom.i, !dbg !7917
  %neg.i = xor i32 %shl.i, -1, !dbg !7918
  call void asm sideeffect "andb ${1:b},$0", "=*m,iq,*m,~{dirflag},~{fpsr},~{flags}"(i8* %add.ptr.i, i32 %neg.i, i8* %add.ptr.i) #7, !dbg !7919, !srcloc !7920
  br label %arch_clear_bit.exit, !dbg !7921

if.else.i:                                        ; preds = %entry
  %15 = load i64*, i64** %addr.addr.i, align 8, !dbg !7922
  %16 = load i64, i64* %nr.addr.i, align 8, !dbg !7924
  call void asm sideeffect " btrq  $1,$0", "*m,Ir,~{memory},~{dirflag},~{fpsr},~{flags}"(i64* %15, i64 %16) #7, !dbg !7925, !srcloc !7926
  br label %arch_clear_bit.exit

arch_clear_bit.exit:                              ; preds = %if.then.i, %if.else.i
  ret void, !dbg !7927
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @acpi_ec_complete_query(%struct.acpi_ec* %ec) #0 !dbg !7928 {
entry:
  %ec.addr = alloca %struct.acpi_ec*, align 8
  %tmp = alloca i32, align 4
  store %struct.acpi_ec* %ec, %struct.acpi_ec** %ec.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.acpi_ec** %ec.addr, metadata !7929, metadata !DIExpression()), !dbg !7930
  %0 = load %struct.acpi_ec*, %struct.acpi_ec** %ec.addr, align 8, !dbg !7931
  %flags = getelementptr inbounds %struct.acpi_ec, %struct.acpi_ec* %0, i32 0, i32 6, !dbg !7933
  %call = call zeroext i1 @test_and_clear_bit(i64 1, i64* %flags) #11, !dbg !7934
  br i1 %call, label %if.then, label %if.end, !dbg !7935

if.then:                                          ; preds = %entry
  store i32 0, i32* %tmp, align 4, !dbg !7936
  %1 = load i32, i32* %tmp, align 4, !dbg !7939
  br label %if.end, !dbg !7940

if.end:                                           ; preds = %if.then, %entry
  %2 = load %struct.acpi_ec*, %struct.acpi_ec** %ec.addr, align 8, !dbg !7941
  call void @acpi_ec_unmask_events(%struct.acpi_ec* %2) #11, !dbg !7942
  ret void, !dbg !7943
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @acpi_ec_write_data(%struct.acpi_ec* %ec, i8 zeroext %data) #0 !dbg !7944 {
entry:
  %ec.addr = alloca %struct.acpi_ec*, align 8
  %data.addr = alloca i8, align 1
  %tmp = alloca i32, align 4
  store %struct.acpi_ec* %ec, %struct.acpi_ec** %ec.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.acpi_ec** %ec.addr, metadata !7945, metadata !DIExpression()), !dbg !7946
  store i8 %data, i8* %data.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %data.addr, metadata !7947, metadata !DIExpression()), !dbg !7948
  store i32 0, i32* %tmp, align 4, !dbg !7949
  %0 = load i32, i32* %tmp, align 4, !dbg !7952
  %1 = load i8, i8* %data.addr, align 1, !dbg !7953
  %2 = load %struct.acpi_ec*, %struct.acpi_ec** %ec.addr, align 8, !dbg !7954
  %data_addr = getelementptr inbounds %struct.acpi_ec, %struct.acpi_ec* %2, i32 0, i32 4, !dbg !7955
  %3 = load i64, i64* %data_addr, align 8, !dbg !7955
  %conv = trunc i64 %3 to i32, !dbg !7954
  call void @outb(i8 zeroext %1, i32 %conv) #11, !dbg !7956
  %4 = load volatile i64, i64* @jiffies, align 8, !dbg !7957
  %5 = load %struct.acpi_ec*, %struct.acpi_ec** %ec.addr, align 8, !dbg !7958
  %timestamp = getelementptr inbounds %struct.acpi_ec, %struct.acpi_ec* %5, i32 0, i32 14, !dbg !7959
  store i64 %4, i64* %timestamp, align 8, !dbg !7960
  ret void, !dbg !7961
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i8 @acpi_ec_read_data(%struct.acpi_ec* %ec) #0 !dbg !7962 {
entry:
  %ec.addr = alloca %struct.acpi_ec*, align 8
  %x = alloca i8, align 1
  %tmp = alloca i32, align 4
  store %struct.acpi_ec* %ec, %struct.acpi_ec** %ec.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.acpi_ec** %ec.addr, metadata !7963, metadata !DIExpression()), !dbg !7964
  call void @llvm.dbg.declare(metadata i8* %x, metadata !7965, metadata !DIExpression()), !dbg !7966
  %0 = load %struct.acpi_ec*, %struct.acpi_ec** %ec.addr, align 8, !dbg !7967
  %data_addr = getelementptr inbounds %struct.acpi_ec, %struct.acpi_ec* %0, i32 0, i32 4, !dbg !7968
  %1 = load i64, i64* %data_addr, align 8, !dbg !7968
  %conv = trunc i64 %1 to i32, !dbg !7967
  %call = call zeroext i8 @inb(i32 %conv) #11, !dbg !7969
  store i8 %call, i8* %x, align 1, !dbg !7966
  %2 = load volatile i64, i64* @jiffies, align 8, !dbg !7970
  %3 = load %struct.acpi_ec*, %struct.acpi_ec** %ec.addr, align 8, !dbg !7971
  %timestamp = getelementptr inbounds %struct.acpi_ec, %struct.acpi_ec* %3, i32 0, i32 14, !dbg !7972
  store i64 %2, i64* %timestamp, align 8, !dbg !7973
  store i32 0, i32* %tmp, align 4, !dbg !7974
  %4 = load i32, i32* %tmp, align 4, !dbg !7977
  %5 = load i8, i8* %x, align 1, !dbg !7978
  ret i8 %5, !dbg !7979
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @ec_transaction_transition(%struct.acpi_ec* %ec, i64 %flag) #0 !dbg !7980 {
entry:
  %ec.addr = alloca %struct.acpi_ec*, align 8
  %flag.addr = alloca i64, align 8
  store %struct.acpi_ec* %ec, %struct.acpi_ec** %ec.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.acpi_ec** %ec.addr, metadata !7983, metadata !DIExpression()), !dbg !7984
  store i64 %flag, i64* %flag.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %flag.addr, metadata !7985, metadata !DIExpression()), !dbg !7986
  %0 = load i64, i64* %flag.addr, align 8, !dbg !7987
  %1 = load %struct.acpi_ec*, %struct.acpi_ec** %ec.addr, align 8, !dbg !7988
  %curr = getelementptr inbounds %struct.acpi_ec, %struct.acpi_ec* %1, i32 0, i32 11, !dbg !7989
  %2 = load %struct.transaction*, %struct.transaction** %curr, align 8, !dbg !7989
  %flags = getelementptr inbounds %struct.transaction, %struct.transaction* %2, i32 0, i32 8, !dbg !7990
  %3 = load i8, i8* %flags, align 1, !dbg !7991
  %conv = zext i8 %3 to i64, !dbg !7991
  %or = or i64 %conv, %0, !dbg !7991
  %conv1 = trunc i64 %or to i8, !dbg !7991
  store i8 %conv1, i8* %flags, align 1, !dbg !7991
  %4 = load %struct.acpi_ec*, %struct.acpi_ec** %ec.addr, align 8, !dbg !7992
  %curr2 = getelementptr inbounds %struct.acpi_ec, %struct.acpi_ec* %4, i32 0, i32 11, !dbg !7994
  %5 = load %struct.transaction*, %struct.transaction** %curr2, align 8, !dbg !7994
  %command = getelementptr inbounds %struct.transaction, %struct.transaction* %5, i32 0, i32 3, !dbg !7995
  %6 = load i8, i8* %command, align 2, !dbg !7995
  %conv3 = zext i8 %6 to i32, !dbg !7992
  %cmp = icmp eq i32 %conv3, 132, !dbg !7996
  br i1 %cmp, label %if.then, label %if.end25, !dbg !7997

if.then:                                          ; preds = %entry
  %7 = load i32, i32* @ec_event_clearing, align 4, !dbg !7998
  %cmp5 = icmp eq i32 %7, 0, !dbg !8001
  br i1 %cmp5, label %land.lhs.true, label %if.end, !dbg !8002

land.lhs.true:                                    ; preds = %if.then
  %8 = load i64, i64* %flag.addr, align 8, !dbg !8003
  %cmp7 = icmp eq i64 %8, 1, !dbg !8004
  br i1 %cmp7, label %if.then9, label %if.end, !dbg !8005

if.then9:                                         ; preds = %land.lhs.true
  %9 = load %struct.acpi_ec*, %struct.acpi_ec** %ec.addr, align 8, !dbg !8006
  call void @acpi_ec_complete_query(%struct.acpi_ec* %9) #11, !dbg !8007
  br label %if.end, !dbg !8007

if.end:                                           ; preds = %if.then9, %land.lhs.true, %if.then
  %10 = load i32, i32* @ec_event_clearing, align 4, !dbg !8008
  %cmp10 = icmp eq i32 %10, 1, !dbg !8010
  br i1 %cmp10, label %land.lhs.true12, label %if.end16, !dbg !8011

land.lhs.true12:                                  ; preds = %if.end
  %11 = load i64, i64* %flag.addr, align 8, !dbg !8012
  %cmp13 = icmp eq i64 %11, 2, !dbg !8013
  br i1 %cmp13, label %if.then15, label %if.end16, !dbg !8014

if.then15:                                        ; preds = %land.lhs.true12
  %12 = load %struct.acpi_ec*, %struct.acpi_ec** %ec.addr, align 8, !dbg !8015
  call void @acpi_ec_complete_query(%struct.acpi_ec* %12) #11, !dbg !8016
  br label %if.end16, !dbg !8016

if.end16:                                         ; preds = %if.then15, %land.lhs.true12, %if.end
  %13 = load i32, i32* @ec_event_clearing, align 4, !dbg !8017
  %cmp17 = icmp eq i32 %13, 2, !dbg !8019
  br i1 %cmp17, label %land.lhs.true19, label %if.end24, !dbg !8020

land.lhs.true19:                                  ; preds = %if.end16
  %14 = load i64, i64* %flag.addr, align 8, !dbg !8021
  %cmp20 = icmp eq i64 %14, 2, !dbg !8022
  br i1 %cmp20, label %if.then22, label %if.end24, !dbg !8023

if.then22:                                        ; preds = %land.lhs.true19
  %15 = load %struct.acpi_ec*, %struct.acpi_ec** %ec.addr, align 8, !dbg !8024
  %flags23 = getelementptr inbounds %struct.acpi_ec, %struct.acpi_ec* %15, i32 0, i32 6, !dbg !8025
  call void @set_bit(i64 2, i64* %flags23) #11, !dbg !8026
  br label %if.end24, !dbg !8026

if.end24:                                         ; preds = %if.then22, %land.lhs.true19, %if.end16
  br label %if.end25, !dbg !8027

if.end25:                                         ; preds = %if.end24, %entry
  ret void, !dbg !8028
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @acpi_ec_write_cmd(%struct.acpi_ec* %ec, i8 zeroext %command) #0 !dbg !8029 {
entry:
  %ec.addr = alloca %struct.acpi_ec*, align 8
  %command.addr = alloca i8, align 1
  %tmp = alloca i32, align 4
  store %struct.acpi_ec* %ec, %struct.acpi_ec** %ec.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.acpi_ec** %ec.addr, metadata !8030, metadata !DIExpression()), !dbg !8031
  store i8 %command, i8* %command.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %command.addr, metadata !8032, metadata !DIExpression()), !dbg !8033
  store i32 0, i32* %tmp, align 4, !dbg !8034
  %0 = load i32, i32* %tmp, align 4, !dbg !8037
  %1 = load i8, i8* %command.addr, align 1, !dbg !8038
  %2 = load %struct.acpi_ec*, %struct.acpi_ec** %ec.addr, align 8, !dbg !8039
  %command_addr = getelementptr inbounds %struct.acpi_ec, %struct.acpi_ec* %2, i32 0, i32 3, !dbg !8040
  %3 = load i64, i64* %command_addr, align 8, !dbg !8040
  %conv = trunc i64 %3 to i32, !dbg !8039
  call void @outb(i8 zeroext %1, i32 %conv) #11, !dbg !8041
  %4 = load volatile i64, i64* @jiffies, align 8, !dbg !8042
  %5 = load %struct.acpi_ec*, %struct.acpi_ec** %ec.addr, align 8, !dbg !8043
  %timestamp = getelementptr inbounds %struct.acpi_ec, %struct.acpi_ec* %5, i32 0, i32 14, !dbg !8044
  store i64 %4, i64* %timestamp, align 8, !dbg !8045
  ret void, !dbg !8046
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @acpi_ec_mask_events(%struct.acpi_ec* %ec) #0 !dbg !8047 {
entry:
  %ec.addr = alloca %struct.acpi_ec*, align 8
  %tmp = alloca i32, align 4
  store %struct.acpi_ec* %ec, %struct.acpi_ec** %ec.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.acpi_ec** %ec.addr, metadata !8048, metadata !DIExpression()), !dbg !8049
  %0 = load %struct.acpi_ec*, %struct.acpi_ec** %ec.addr, align 8, !dbg !8050
  %flags = getelementptr inbounds %struct.acpi_ec, %struct.acpi_ec* %0, i32 0, i32 6, !dbg !8052
  %call = call zeroext i1 @test_bit(i64 8, i64* %flags) #11, !dbg !8053
  br i1 %call, label %if.end3, label %if.then, !dbg !8054

if.then:                                          ; preds = %entry
  %1 = load %struct.acpi_ec*, %struct.acpi_ec** %ec.addr, align 8, !dbg !8055
  %gpe = getelementptr inbounds %struct.acpi_ec, %struct.acpi_ec* %1, i32 0, i32 1, !dbg !8058
  %2 = load i32, i32* %gpe, align 8, !dbg !8058
  %cmp = icmp sge i32 %2, 0, !dbg !8059
  br i1 %cmp, label %if.then1, label %if.else, !dbg !8060

if.then1:                                         ; preds = %if.then
  %3 = load %struct.acpi_ec*, %struct.acpi_ec** %ec.addr, align 8, !dbg !8061
  call void @acpi_ec_disable_gpe(%struct.acpi_ec* %3, i1 zeroext false) #11, !dbg !8062
  br label %if.end, !dbg !8062

if.else:                                          ; preds = %if.then
  %4 = load %struct.acpi_ec*, %struct.acpi_ec** %ec.addr, align 8, !dbg !8063
  %irq = getelementptr inbounds %struct.acpi_ec, %struct.acpi_ec* %4, i32 0, i32 2, !dbg !8064
  %5 = load i32, i32* %irq, align 4, !dbg !8064
  call void @disable_irq_nosync(i32 %5) #11, !dbg !8065
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then1
  store i32 0, i32* %tmp, align 4, !dbg !8066
  %6 = load i32, i32* %tmp, align 4, !dbg !8069
  %7 = load %struct.acpi_ec*, %struct.acpi_ec** %ec.addr, align 8, !dbg !8070
  %flags2 = getelementptr inbounds %struct.acpi_ec, %struct.acpi_ec* %7, i32 0, i32 6, !dbg !8071
  call void @set_bit(i64 8, i64* %flags2) #11, !dbg !8072
  br label %if.end3, !dbg !8073

if.end3:                                          ; preds = %if.end, %entry
  ret void, !dbg !8074
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @acpi_ec_submit_query(%struct.acpi_ec* %ec) #0 !dbg !8075 {
entry:
  %ec.addr = alloca %struct.acpi_ec*, align 8
  %tmp = alloca i32, align 4
  store %struct.acpi_ec* %ec, %struct.acpi_ec** %ec.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.acpi_ec** %ec.addr, metadata !8076, metadata !DIExpression()), !dbg !8077
  %0 = load %struct.acpi_ec*, %struct.acpi_ec** %ec.addr, align 8, !dbg !8078
  call void @acpi_ec_mask_events(%struct.acpi_ec* %0) #11, !dbg !8079
  %1 = load %struct.acpi_ec*, %struct.acpi_ec** %ec.addr, align 8, !dbg !8080
  %call = call zeroext i1 @acpi_ec_event_enabled(%struct.acpi_ec* %1) #11, !dbg !8082
  br i1 %call, label %if.end, label %if.then, !dbg !8083

if.then:                                          ; preds = %entry
  br label %if.end4, !dbg !8084

if.end:                                           ; preds = %entry
  %2 = load %struct.acpi_ec*, %struct.acpi_ec** %ec.addr, align 8, !dbg !8085
  %flags = getelementptr inbounds %struct.acpi_ec, %struct.acpi_ec* %2, i32 0, i32 6, !dbg !8087
  %call1 = call zeroext i1 @test_and_set_bit(i64 1, i64* %flags) #11, !dbg !8088
  br i1 %call1, label %if.end4, label %if.then2, !dbg !8089

if.then2:                                         ; preds = %if.end
  store i32 0, i32* %tmp, align 4, !dbg !8090
  %3 = load i32, i32* %tmp, align 4, !dbg !8094
  %4 = load %struct.acpi_ec*, %struct.acpi_ec** %ec.addr, align 8, !dbg !8095
  %nr_pending_queries = getelementptr inbounds %struct.acpi_ec, %struct.acpi_ec* %4, i32 0, i32 15, !dbg !8096
  %5 = load i64, i64* %nr_pending_queries, align 8, !dbg !8097
  %inc = add i64 %5, 1, !dbg !8097
  store i64 %inc, i64* %nr_pending_queries, align 8, !dbg !8097
  %6 = load %struct.workqueue_struct*, %struct.workqueue_struct** @ec_wq, align 8, !dbg !8098
  %7 = load %struct.acpi_ec*, %struct.acpi_ec** %ec.addr, align 8, !dbg !8099
  %work = getelementptr inbounds %struct.acpi_ec, %struct.acpi_ec* %7, i32 0, i32 13, !dbg !8100
  %call3 = call zeroext i1 @queue_work(%struct.workqueue_struct* %6, %struct.work_struct* %work) #11, !dbg !8101
  br label %if.end4, !dbg !8102

if.end4:                                          ; preds = %if.then, %if.then2, %if.end
  ret void, !dbg !8103
}

; Function Attrs: noredzone
declare dso_local void @__wake_up(%struct.wait_queue_head*, i32, i32, i8*) #2

; Function Attrs: noredzone
declare dso_local i32 @acpi_clear_gpe(i8*, i32) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i8 @inb(i32 %port) #0 !dbg !8104 {
entry:
  %port.addr = alloca i32, align 4
  %value = alloca i8, align 1
  store i32 %port, i32* %port.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %port.addr, metadata !8108, metadata !DIExpression()), !dbg !8109
  call void @llvm.dbg.declare(metadata i8* %value, metadata !8110, metadata !DIExpression()), !dbg !8109
  %0 = load i32, i32* %port.addr, align 4, !dbg !8109
  %1 = call i8 asm sideeffect "inb ${1:w}, ${0:b}", "={ax},N{dx},~{dirflag},~{fpsr},~{flags}"(i32 %0) #7, !dbg !8109, !srcloc !8111
  store i8 %1, i8* %value, align 1, !dbg !8109
  %2 = load i8, i8* %value, align 1, !dbg !8109
  ret i8 %2, !dbg !8109
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @kasan_check_write(i8* %p, i32 %size) #0 !dbg !8112 {
entry:
  %p.addr = alloca i8*, align 8
  %size.addr = alloca i32, align 4
  store i8* %p, i8** %p.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %p.addr, metadata !8113, metadata !DIExpression()), !dbg !8114
  store i32 %size, i32* %size.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %size.addr, metadata !8115, metadata !DIExpression()), !dbg !8116
  ret i1 true, !dbg !8117
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @test_and_clear_bit(i64 %nr, i64* %addr) #0 !dbg !8118 {
entry:
  %nr.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %nr.addr.i, metadata !8121, metadata !DIExpression()), !dbg !8123
  %addr.addr.i = alloca i64*, align 8
  call void @llvm.dbg.declare(metadata i64** %addr.addr.i, metadata !8125, metadata !DIExpression()), !dbg !8126
  %c.i = alloca i8, align 1
  call void @llvm.dbg.declare(metadata i8* %c.i, metadata !8127, metadata !DIExpression()), !dbg !8129
  %tmp.i = alloca i8, align 1
  %v.addr.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %v.addr.i, metadata !8130, metadata !DIExpression()), !dbg !8132
  %size.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i, metadata !8134, metadata !DIExpression()), !dbg !8135
  %nr.addr = alloca i64, align 8
  %addr.addr = alloca i64*, align 8
  store i64 %nr, i64* %nr.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %nr.addr, metadata !8136, metadata !DIExpression()), !dbg !8137
  store i64* %addr, i64** %addr.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %addr.addr, metadata !8138, metadata !DIExpression()), !dbg !8139
  %0 = load i64*, i64** %addr.addr, align 8, !dbg !8140
  %1 = load i64, i64* %nr.addr, align 8, !dbg !8141
  %div = sdiv i64 %1, 64, !dbg !8141
  %add.ptr = getelementptr i64, i64* %0, i64 %div, !dbg !8142
  %2 = bitcast i64* %add.ptr to i8*, !dbg !8140
  store i8* %2, i8** %v.addr.i, align 8
  store i64 8, i64* %size.addr.i, align 8
  %3 = load i8*, i8** %v.addr.i, align 8, !dbg !8143
  %4 = load i64, i64* %size.addr.i, align 8, !dbg !8144
  %conv.i = trunc i64 %4 to i32, !dbg !8144
  %call.i = call zeroext i1 @kasan_check_write(i8* %3, i32 %conv.i) #12, !dbg !8145
  %5 = load i8*, i8** %v.addr.i, align 8, !dbg !8146
  %6 = load i64, i64* %size.addr.i, align 8, !dbg !8146
  call void @kcsan_check_access(i8* %5, i64 %6, i32 7) #12, !dbg !8146
  %7 = load i64, i64* %nr.addr, align 8, !dbg !8147
  %8 = load i64*, i64** %addr.addr, align 8, !dbg !8148
  store i64 %7, i64* %nr.addr.i, align 8
  store i64* %8, i64** %addr.addr.i, align 8
  %9 = load i64*, i64** %addr.addr.i, align 8, !dbg !8129
  %10 = load i64, i64* %nr.addr.i, align 8, !dbg !8129
  %11 = call i8 asm sideeffect " btrq  $2, $0\0A\09/* output condition code c*/\0A", "=*m,={@ccc},Ir,*m,~{memory},~{dirflag},~{fpsr},~{flags}"(i64* %9, i64 %10, i64* %9) #7, !dbg !8129, !srcloc !8149
  store i8 %11, i8* %c.i, align 1, !dbg !8129
  %12 = load i8, i8* %c.i, align 1, !dbg !8129
  %tobool.i = trunc i8 %12 to i1, !dbg !8129
  %frombool.i = zext i1 %tobool.i to i8, !dbg !8129
  store i8 %frombool.i, i8* %tmp.i, align 1, !dbg !8129
  %13 = load i8, i8* %tmp.i, align 1, !dbg !8129
  %tobool1.i = trunc i8 %13 to i1, !dbg !8129
  ret i1 %tobool1.i, !dbg !8150
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @outb(i8 zeroext %value, i32 %port) #0 !dbg !8151 {
entry:
  %value.addr = alloca i8, align 1
  %port.addr = alloca i32, align 4
  store i8 %value, i8* %value.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %value.addr, metadata !8154, metadata !DIExpression()), !dbg !8155
  store i32 %port, i32* %port.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %port.addr, metadata !8156, metadata !DIExpression()), !dbg !8155
  %0 = load i8, i8* %value.addr, align 1, !dbg !8155
  %1 = load i32, i32* %port.addr, align 4, !dbg !8155
  call void asm sideeffect "outb ${0:b}, ${1:w}", "{ax},N{dx},~{dirflag},~{fpsr},~{flags}"(i8 %0, i32 %1) #7, !dbg !8155, !srcloc !8157
  ret void, !dbg !8155
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @set_bit(i64 %nr, i64* %addr) #0 !dbg !8158 {
entry:
  %nr.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %nr.addr.i, metadata !8159, metadata !DIExpression()), !dbg !8161
  %addr.addr.i = alloca i64*, align 8
  call void @llvm.dbg.declare(metadata i64** %addr.addr.i, metadata !8163, metadata !DIExpression()), !dbg !8164
  %v.addr.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %v.addr.i, metadata !7892, metadata !DIExpression()), !dbg !8165
  %size.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i, metadata !7896, metadata !DIExpression()), !dbg !8167
  %nr.addr = alloca i64, align 8
  %addr.addr = alloca i64*, align 8
  store i64 %nr, i64* %nr.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %nr.addr, metadata !8168, metadata !DIExpression()), !dbg !8169
  store i64* %addr, i64** %addr.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %addr.addr, metadata !8170, metadata !DIExpression()), !dbg !8171
  %0 = load i64*, i64** %addr.addr, align 8, !dbg !8172
  %1 = load i64, i64* %nr.addr, align 8, !dbg !8173
  %div = sdiv i64 %1, 64, !dbg !8173
  %add.ptr = getelementptr i64, i64* %0, i64 %div, !dbg !8174
  %2 = bitcast i64* %add.ptr to i8*, !dbg !8172
  store i8* %2, i8** %v.addr.i, align 8
  store i64 8, i64* %size.addr.i, align 8
  %3 = load i8*, i8** %v.addr.i, align 8, !dbg !8175
  %4 = load i64, i64* %size.addr.i, align 8, !dbg !8176
  %conv.i = trunc i64 %4 to i32, !dbg !8176
  %call.i = call zeroext i1 @kasan_check_write(i8* %3, i32 %conv.i) #12, !dbg !8177
  %5 = load i8*, i8** %v.addr.i, align 8, !dbg !8178
  %6 = load i64, i64* %size.addr.i, align 8, !dbg !8178
  call void @kcsan_check_access(i8* %5, i64 %6, i32 5) #12, !dbg !8178
  %7 = load i64, i64* %nr.addr, align 8, !dbg !8179
  %8 = load i64*, i64** %addr.addr, align 8, !dbg !8180
  store i64 %7, i64* %nr.addr.i, align 8
  store i64* %8, i64** %addr.addr.i, align 8
  %9 = load i64, i64* %nr.addr.i, align 8, !dbg !8181
  %10 = call i1 @llvm.is.constant.i64(i64 %9) #7, !dbg !8183
  br i1 %10, label %if.then.i, label %if.else.i, !dbg !8184

if.then.i:                                        ; preds = %entry
  %11 = load i64*, i64** %addr.addr.i, align 8, !dbg !8185
  %12 = bitcast i64* %11 to i8*, !dbg !8185
  %13 = load i64, i64* %nr.addr.i, align 8, !dbg !8185
  %shr.i = ashr i64 %13, 3, !dbg !8185
  %add.ptr.i = getelementptr i8, i8* %12, i64 %shr.i, !dbg !8185
  %14 = load i64, i64* %nr.addr.i, align 8, !dbg !8187
  %and.i = and i64 %14, 7, !dbg !8187
  %sh_prom.i = trunc i64 %and.i to i32, !dbg !8187
  %shl.i = shl i32 1, %sh_prom.i, !dbg !8187
  call void asm sideeffect "orb ${1:b},$0", "=*m,iq,*m,~{memory},~{dirflag},~{fpsr},~{flags}"(i8* %add.ptr.i, i32 %shl.i, i8* %add.ptr.i) #7, !dbg !8188, !srcloc !8189
  br label %arch_set_bit.exit, !dbg !8190

if.else.i:                                        ; preds = %entry
  %15 = load i64*, i64** %addr.addr.i, align 8, !dbg !8191
  %16 = load i64, i64* %nr.addr.i, align 8, !dbg !8193
  call void asm sideeffect " btsq  $1,$0", "*m,Ir,~{memory},~{dirflag},~{fpsr},~{flags}"(i64* %15, i64 %16) #7, !dbg !8194, !srcloc !8195
  br label %arch_set_bit.exit

arch_set_bit.exit:                                ; preds = %if.then.i, %if.else.i
  ret void, !dbg !8196
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @acpi_ec_disable_gpe(%struct.acpi_ec* %ec, i1 zeroext %close) #0 !dbg !8197 {
entry:
  %ec.addr = alloca %struct.acpi_ec*, align 8
  %close.addr = alloca i8, align 1
  store %struct.acpi_ec* %ec, %struct.acpi_ec** %ec.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.acpi_ec** %ec.addr, metadata !8198, metadata !DIExpression()), !dbg !8199
  %frombool = zext i1 %close to i8
  store i8 %frombool, i8* %close.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %close.addr, metadata !8200, metadata !DIExpression()), !dbg !8201
  %0 = load i8, i8* %close.addr, align 1, !dbg !8202
  %tobool = trunc i8 %0 to i1, !dbg !8202
  br i1 %tobool, label %if.then, label %if.else, !dbg !8204

if.then:                                          ; preds = %entry
  %1 = load %struct.acpi_ec*, %struct.acpi_ec** %ec.addr, align 8, !dbg !8205
  %gpe = getelementptr inbounds %struct.acpi_ec, %struct.acpi_ec* %1, i32 0, i32 1, !dbg !8206
  %2 = load i32, i32* %gpe, align 8, !dbg !8206
  %call = call i32 @acpi_disable_gpe(i8* null, i32 %2) #11, !dbg !8207
  br label %if.end14, !dbg !8207

if.else:                                          ; preds = %entry
  br label %do.body, !dbg !8208

do.body:                                          ; preds = %if.else
  %3 = load %struct.acpi_ec*, %struct.acpi_ec** %ec.addr, align 8, !dbg !8210
  %reference_count = getelementptr inbounds %struct.acpi_ec, %struct.acpi_ec* %3, i32 0, i32 7, !dbg !8210
  %4 = load i64, i64* %reference_count, align 8, !dbg !8210
  %cmp = icmp ult i64 %4, 1, !dbg !8210
  %lnot = xor i1 %cmp, true, !dbg !8210
  %lnot1 = xor i1 %lnot, true, !dbg !8210
  %lnot.ext = zext i1 %lnot1 to i32, !dbg !8210
  %conv = sext i32 %lnot.ext to i64, !dbg !8210
  %tobool2 = icmp ne i64 %conv, 0, !dbg !8210
  br i1 %tobool2, label %if.then3, label %if.end, !dbg !8213

if.then3:                                         ; preds = %do.body
  br label %do.body4, !dbg !8210

do.body4:                                         ; preds = %if.then3
  br label %do.body5, !dbg !8214

do.body5:                                         ; preds = %do.body4
  br label %do.end, !dbg !8216

do.end:                                           ; preds = %do.body5
  br label %do.body6, !dbg !8214

do.body6:                                         ; preds = %do.end
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.4, i64 0, i64 0), i32 370, i32 0, i64 12) #7, !dbg !8218, !srcloc !8220
  br label %do.end7, !dbg !8218

do.end7:                                          ; preds = %do.body6
  br label %do.body8, !dbg !8214

do.body8:                                         ; preds = %do.end7
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.unreachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 308) #7, !dbg !8221, !srcloc !8224
  unreachable, !dbg !8225

do.end9:                                          ; No predecessors!
  br label %do.end10, !dbg !8214

do.end10:                                         ; preds = %do.end9
  br label %if.end, !dbg !8214

if.end:                                           ; preds = %do.end10, %do.body
  br label %do.end11, !dbg !8213

do.end11:                                         ; preds = %if.end
  %5 = load %struct.acpi_ec*, %struct.acpi_ec** %ec.addr, align 8, !dbg !8226
  %gpe12 = getelementptr inbounds %struct.acpi_ec, %struct.acpi_ec* %5, i32 0, i32 1, !dbg !8227
  %6 = load i32, i32* %gpe12, align 8, !dbg !8227
  %call13 = call i32 @acpi_set_gpe(i8* null, i32 %6, i8 zeroext 1) #11, !dbg !8228
  br label %if.end14

if.end14:                                         ; preds = %do.end11, %if.then
  ret void, !dbg !8229
}

; Function Attrs: noredzone
declare dso_local void @disable_irq_nosync(i32) #2

; Function Attrs: noredzone
declare dso_local i32 @acpi_disable_gpe(i8*, i32) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @acpi_ec_event_enabled(%struct.acpi_ec* %ec) #0 !dbg !8230 {
entry:
  %retval = alloca i1, align 1
  %ec.addr = alloca %struct.acpi_ec*, align 8
  store %struct.acpi_ec* %ec, %struct.acpi_ec** %ec.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.acpi_ec** %ec.addr, metadata !8231, metadata !DIExpression()), !dbg !8232
  %0 = load %struct.acpi_ec*, %struct.acpi_ec** %ec.addr, align 8, !dbg !8233
  %flags = getelementptr inbounds %struct.acpi_ec, %struct.acpi_ec* %0, i32 0, i32 6, !dbg !8235
  %call = call zeroext i1 @test_bit(i64 0, i64* %flags) #11, !dbg !8236
  br i1 %call, label %if.end, label %if.then, !dbg !8237

if.then:                                          ; preds = %entry
  store i1 false, i1* %retval, align 1, !dbg !8238
  br label %return, !dbg !8238

if.end:                                           ; preds = %entry
  %1 = load i8, i8* @ec_freeze_events, align 1, !dbg !8239
  %tobool = trunc i8 %1 to i1, !dbg !8239
  br i1 %tobool, label %if.then1, label %if.else, !dbg !8241

if.then1:                                         ; preds = %if.end
  %2 = load %struct.acpi_ec*, %struct.acpi_ec** %ec.addr, align 8, !dbg !8242
  %call2 = call zeroext i1 @acpi_ec_started(%struct.acpi_ec* %2) #11, !dbg !8243
  store i1 %call2, i1* %retval, align 1, !dbg !8244
  br label %return, !dbg !8244

if.else:                                          ; preds = %if.end
  %3 = load %struct.acpi_ec*, %struct.acpi_ec** %ec.addr, align 8, !dbg !8245
  %flags3 = getelementptr inbounds %struct.acpi_ec, %struct.acpi_ec* %3, i32 0, i32 6, !dbg !8246
  %call4 = call zeroext i1 @test_bit(i64 6, i64* %flags3) #11, !dbg !8247
  store i1 %call4, i1* %retval, align 1, !dbg !8248
  br label %return, !dbg !8248

return:                                           ; preds = %if.else, %if.then1, %if.then
  %4 = load i1, i1* %retval, align 1, !dbg !8249
  ret i1 %4, !dbg !8249
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @test_and_set_bit(i64 %nr, i64* %addr) #0 !dbg !8250 {
entry:
  %nr.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %nr.addr.i, metadata !8251, metadata !DIExpression()), !dbg !8253
  %addr.addr.i = alloca i64*, align 8
  call void @llvm.dbg.declare(metadata i64** %addr.addr.i, metadata !8255, metadata !DIExpression()), !dbg !8256
  %c.i = alloca i8, align 1
  call void @llvm.dbg.declare(metadata i8* %c.i, metadata !8257, metadata !DIExpression()), !dbg !8259
  %tmp.i = alloca i8, align 1
  %v.addr.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %v.addr.i, metadata !8130, metadata !DIExpression()), !dbg !8260
  %size.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i, metadata !8134, metadata !DIExpression()), !dbg !8262
  %nr.addr = alloca i64, align 8
  %addr.addr = alloca i64*, align 8
  store i64 %nr, i64* %nr.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %nr.addr, metadata !8263, metadata !DIExpression()), !dbg !8264
  store i64* %addr, i64** %addr.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %addr.addr, metadata !8265, metadata !DIExpression()), !dbg !8266
  %0 = load i64*, i64** %addr.addr, align 8, !dbg !8267
  %1 = load i64, i64* %nr.addr, align 8, !dbg !8268
  %div = sdiv i64 %1, 64, !dbg !8268
  %add.ptr = getelementptr i64, i64* %0, i64 %div, !dbg !8269
  %2 = bitcast i64* %add.ptr to i8*, !dbg !8267
  store i8* %2, i8** %v.addr.i, align 8
  store i64 8, i64* %size.addr.i, align 8
  %3 = load i8*, i8** %v.addr.i, align 8, !dbg !8270
  %4 = load i64, i64* %size.addr.i, align 8, !dbg !8271
  %conv.i = trunc i64 %4 to i32, !dbg !8271
  %call.i = call zeroext i1 @kasan_check_write(i8* %3, i32 %conv.i) #12, !dbg !8272
  %5 = load i8*, i8** %v.addr.i, align 8, !dbg !8273
  %6 = load i64, i64* %size.addr.i, align 8, !dbg !8273
  call void @kcsan_check_access(i8* %5, i64 %6, i32 7) #12, !dbg !8273
  %7 = load i64, i64* %nr.addr, align 8, !dbg !8274
  %8 = load i64*, i64** %addr.addr, align 8, !dbg !8275
  store i64 %7, i64* %nr.addr.i, align 8
  store i64* %8, i64** %addr.addr.i, align 8
  %9 = load i64*, i64** %addr.addr.i, align 8, !dbg !8259
  %10 = load i64, i64* %nr.addr.i, align 8, !dbg !8259
  %11 = call i8 asm sideeffect " btsq  $2, $0\0A\09/* output condition code c*/\0A", "=*m,={@ccc},Ir,*m,~{memory},~{dirflag},~{fpsr},~{flags}"(i64* %9, i64 %10, i64* %9) #7, !dbg !8259, !srcloc !8276
  store i8 %11, i8* %c.i, align 1, !dbg !8259
  %12 = load i8, i8* %c.i, align 1, !dbg !8259
  %tobool.i = trunc i8 %12 to i1, !dbg !8259
  %frombool.i = zext i1 %tobool.i to i8, !dbg !8259
  store i8 %frombool.i, i8* %tmp.i, align 1, !dbg !8259
  %13 = load i8, i8* %tmp.i, align 1, !dbg !8259
  %tobool1.i = trunc i8 %13 to i1, !dbg !8259
  ret i1 %tobool1.i, !dbg !8277
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @queue_work(%struct.workqueue_struct* %wq, %struct.work_struct* %work) #0 !dbg !8278 {
entry:
  %wq.addr = alloca %struct.workqueue_struct*, align 8
  %work.addr = alloca %struct.work_struct*, align 8
  store %struct.workqueue_struct* %wq, %struct.workqueue_struct** %wq.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.workqueue_struct** %wq.addr, metadata !8281, metadata !DIExpression()), !dbg !8282
  store %struct.work_struct* %work, %struct.work_struct** %work.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.work_struct** %work.addr, metadata !8283, metadata !DIExpression()), !dbg !8284
  %0 = load %struct.workqueue_struct*, %struct.workqueue_struct** %wq.addr, align 8, !dbg !8285
  %1 = load %struct.work_struct*, %struct.work_struct** %work.addr, align 8, !dbg !8286
  %call = call zeroext i1 @queue_work_on(i32 1, %struct.workqueue_struct* %0, %struct.work_struct* %1) #11, !dbg !8287
  ret i1 %call, !dbg !8288
}

; Function Attrs: noredzone
declare dso_local zeroext i1 @queue_work_on(i32, %struct.workqueue_struct*, %struct.work_struct*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @arch_local_irq_restore(i64 %f) #0 !dbg !8289 {
entry:
  %f.addr = alloca i64, align 8
  %__edi = alloca i64, align 8
  %__esi = alloca i64, align 8
  %__edx = alloca i64, align 8
  %__ecx = alloca i64, align 8
  %__eax = alloca i64, align 8
  store i64 %f, i64* %f.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %f.addr, metadata !8292, metadata !DIExpression()), !dbg !8293
  call void @llvm.dbg.declare(metadata i64* %__edi, metadata !8294, metadata !DIExpression()), !dbg !8296
  %0 = load i64, i64* %__edi, align 8, !dbg !8296
  store i64 %0, i64* %__edi, align 8, !dbg !8296
  call void @llvm.dbg.declare(metadata i64* %__esi, metadata !8297, metadata !DIExpression()), !dbg !8296
  %1 = load i64, i64* %__esi, align 8, !dbg !8296
  store i64 %1, i64* %__esi, align 8, !dbg !8296
  call void @llvm.dbg.declare(metadata i64* %__edx, metadata !8298, metadata !DIExpression()), !dbg !8296
  %2 = load i64, i64* %__edx, align 8, !dbg !8296
  store i64 %2, i64* %__edx, align 8, !dbg !8296
  call void @llvm.dbg.declare(metadata i64* %__ecx, metadata !8299, metadata !DIExpression()), !dbg !8296
  %3 = load i64, i64* %__ecx, align 8, !dbg !8296
  store i64 %3, i64* %__ecx, align 8, !dbg !8296
  call void @llvm.dbg.declare(metadata i64* %__eax, metadata !8300, metadata !DIExpression()), !dbg !8296
  %4 = load i64, i64* %__eax, align 8, !dbg !8296
  store i64 %4, i64* %__eax, align 8, !dbg !8296
  %5 = load i8*, i8** getelementptr inbounds (%struct.paravirt_patch_template, %struct.paravirt_patch_template* @pv_ops, i32 0, i32 3, i32 1, i32 0), align 8, !dbg !8296
  %6 = call i64 @llvm.read_register.i64(metadata !5611), !dbg !8296
  %7 = load i64, i64* %f.addr, align 8, !dbg !8296
  %8 = call { i64, i64 } asm sideeffect "771:\0A\09999:\0A\09.pushsection .discard.retpoline_safe\0A\09 .quad  999b\0A\09.popsection\0A\09call *${3:c};\0A772:\0A.pushsection .parainstructions,\22a\22\0A .balign 8 \0A .quad  771b\0A  .byte ${2:c}\0A  .byte 772b-771b\0A  .short ${4:c}\0A.popsection\0A", "={ax},={rsp},i,i,i,{di},1,~{memory},~{cc},~{dirflag},~{fpsr},~{flags}"(i64 37, i8** getelementptr inbounds (%struct.paravirt_patch_template, %struct.paravirt_patch_template* @pv_ops, i32 0, i32 3, i32 1, i32 0), i32 1, i64 %7, i64 %6) #7, !dbg !8296, !srcloc !8301
  %asmresult = extractvalue { i64, i64 } %8, 0, !dbg !8296
  %asmresult1 = extractvalue { i64, i64 } %8, 1, !dbg !8296
  store i64 %asmresult, i64* %__eax, align 8, !dbg !8296
  call void @llvm.write_register.i64(metadata !5611, i64 %asmresult1), !dbg !8296
  ret void, !dbg !8302
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @ec_guard(%struct.acpi_ec* %ec) #0 !dbg !8303 {
entry:
  %retval.i = alloca i64, align 8
  %u.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %u.addr.i, metadata !8304, metadata !DIExpression()), !dbg !8306
  %retval = alloca i32, align 4
  %ec.addr = alloca %struct.acpi_ec*, align 8
  %guard = alloca i64, align 8
  %timeout = alloca i64, align 8
  %__ret = alloca i64, align 8
  %__cond = alloca i8, align 1
  %tmp = alloca i32, align 4
  %__wq_entry = alloca %struct.wait_queue_entry, align 8
  %__ret26 = alloca i64, align 8
  %__int = alloca i64, align 8
  %__cond28 = alloca i8, align 1
  %tmp38 = alloca i32, align 4
  %tmp51 = alloca i64, align 8
  %tmp53 = alloca i64, align 8
  store %struct.acpi_ec* %ec, %struct.acpi_ec** %ec.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.acpi_ec** %ec.addr, metadata !8308, metadata !DIExpression()), !dbg !8309
  call void @llvm.dbg.declare(metadata i64* %guard, metadata !8310, metadata !DIExpression()), !dbg !8311
  %0 = load %struct.acpi_ec*, %struct.acpi_ec** %ec.addr, align 8, !dbg !8312
  %polling_guard = getelementptr inbounds %struct.acpi_ec, %struct.acpi_ec* %0, i32 0, i32 17, !dbg !8313
  %1 = load i32, i32* %polling_guard, align 4, !dbg !8313
  store i32 %1, i32* %u.addr.i, align 4
  %2 = load i32, i32* %u.addr.i, align 4, !dbg !8314
  %3 = call i1 @llvm.is.constant.i32(i32 %2) #7, !dbg !8316
  br i1 %3, label %if.then.i, label %if.else.i, !dbg !8317

if.then.i:                                        ; preds = %entry
  %4 = load i32, i32* %u.addr.i, align 4, !dbg !8318
  %call.i = call i32 @jiffies_to_usecs(i64 4611686018427387902) #12, !dbg !8321
  %cmp.i = icmp ugt i32 %4, %call.i, !dbg !8322
  br i1 %cmp.i, label %if.then1.i, label %if.end.i, !dbg !8323

if.then1.i:                                       ; preds = %if.then.i
  store i64 4611686018427387902, i64* %retval.i, align 8, !dbg !8324
  br label %usecs_to_jiffies.exit, !dbg !8324

if.end.i:                                         ; preds = %if.then.i
  %5 = load i32, i32* %u.addr.i, align 4, !dbg !8325
  %call2.i = call i64 @_usecs_to_jiffies(i32 %5) #12, !dbg !8326
  store i64 %call2.i, i64* %retval.i, align 8, !dbg !8327
  br label %usecs_to_jiffies.exit, !dbg !8327

if.else.i:                                        ; preds = %entry
  %6 = load i32, i32* %u.addr.i, align 4, !dbg !8328
  %call3.i = call i64 @__usecs_to_jiffies(i32 %6) #12, !dbg !8330
  store i64 %call3.i, i64* %retval.i, align 8, !dbg !8331
  br label %usecs_to_jiffies.exit, !dbg !8331

usecs_to_jiffies.exit:                            ; preds = %if.then1.i, %if.end.i, %if.else.i
  %7 = load i64, i64* %retval.i, align 8, !dbg !8332
  store i64 %7, i64* %guard, align 8, !dbg !8311
  call void @llvm.dbg.declare(metadata i64* %timeout, metadata !8333, metadata !DIExpression()), !dbg !8334
  %8 = load %struct.acpi_ec*, %struct.acpi_ec** %ec.addr, align 8, !dbg !8335
  %timestamp = getelementptr inbounds %struct.acpi_ec, %struct.acpi_ec* %8, i32 0, i32 14, !dbg !8336
  %9 = load i64, i64* %timestamp, align 8, !dbg !8336
  %10 = load i64, i64* %guard, align 8, !dbg !8337
  %add = add i64 %9, %10, !dbg !8338
  store i64 %add, i64* %timeout, align 8, !dbg !8334
  br label %do.body, !dbg !8339

do.body:                                          ; preds = %do.cond, %usecs_to_jiffies.exit
  %11 = load %struct.acpi_ec*, %struct.acpi_ec** %ec.addr, align 8, !dbg !8340
  %busy_polling = getelementptr inbounds %struct.acpi_ec, %struct.acpi_ec* %11, i32 0, i32 16, !dbg !8343
  %12 = load i8, i8* %busy_polling, align 8, !dbg !8343
  %tobool = trunc i8 %12 to i1, !dbg !8343
  br i1 %tobool, label %if.then, label %if.else, !dbg !8344

if.then:                                          ; preds = %do.body
  %13 = load %struct.acpi_ec*, %struct.acpi_ec** %ec.addr, align 8, !dbg !8345
  %call1 = call i32 @ec_transaction_completed(%struct.acpi_ec* %13) #11, !dbg !8348
  %tobool2 = icmp ne i32 %call1, 0, !dbg !8348
  br i1 %tobool2, label %if.then3, label %if.end, !dbg !8349

if.then3:                                         ; preds = %if.then
  store i32 0, i32* %retval, align 4, !dbg !8350
  br label %return, !dbg !8350

if.end:                                           ; preds = %if.then
  %14 = load i64, i64* %guard, align 8, !dbg !8351
  %call4 = call i32 @jiffies_to_usecs(i64 %14) #11, !dbg !8351
  %conv = zext i32 %call4 to i64, !dbg !8351
  call void @__udelay(i64 %conv) #11, !dbg !8351
  br label %if.end57, !dbg !8355

if.else:                                          ; preds = %do.body
  %15 = load %struct.acpi_ec*, %struct.acpi_ec** %ec.addr, align 8, !dbg !8356
  %call5 = call i32 @ec_transaction_polled(%struct.acpi_ec* %15) #11, !dbg !8359
  %tobool6 = icmp ne i32 %call5, 0, !dbg !8359
  br i1 %tobool6, label %if.end9, label %land.lhs.true, !dbg !8360

land.lhs.true:                                    ; preds = %if.else
  %16 = load %struct.acpi_ec*, %struct.acpi_ec** %ec.addr, align 8, !dbg !8361
  %call7 = call zeroext i1 @acpi_ec_guard_event(%struct.acpi_ec* %16) #11, !dbg !8362
  br i1 %call7, label %if.end9, label %if.then8, !dbg !8363

if.then8:                                         ; preds = %land.lhs.true
  br label %do.end59, !dbg !8364

if.end9:                                          ; preds = %land.lhs.true, %if.else
  call void @llvm.dbg.declare(metadata i64* %__ret, metadata !8365, metadata !DIExpression()), !dbg !8368
  %17 = load i64, i64* %guard, align 8, !dbg !8368
  store i64 %17, i64* %__ret, align 8, !dbg !8368
  br label %do.body10, !dbg !8368

do.body10:                                        ; preds = %if.end9
  br label %do.body11, !dbg !8369

do.body11:                                        ; preds = %do.body10
  br label %do.end, !dbg !8371

do.end:                                           ; preds = %do.body11
  br label %do.end12, !dbg !8369

do.end12:                                         ; preds = %do.end
  call void @llvm.dbg.declare(metadata i8* %__cond, metadata !8373, metadata !DIExpression()), !dbg !8376
  %18 = load %struct.acpi_ec*, %struct.acpi_ec** %ec.addr, align 8, !dbg !8376
  %call13 = call i32 @ec_transaction_completed(%struct.acpi_ec* %18) #11, !dbg !8376
  %tobool14 = icmp ne i32 %call13, 0, !dbg !8376
  %frombool = zext i1 %tobool14 to i8, !dbg !8376
  store i8 %frombool, i8* %__cond, align 1, !dbg !8376
  %19 = load i8, i8* %__cond, align 1, !dbg !8377
  %tobool15 = trunc i8 %19 to i1, !dbg !8377
  br i1 %tobool15, label %land.lhs.true17, label %if.end20, !dbg !8377

land.lhs.true17:                                  ; preds = %do.end12
  %20 = load i64, i64* %__ret, align 8, !dbg !8377
  %tobool18 = icmp ne i64 %20, 0, !dbg !8377
  br i1 %tobool18, label %if.end20, label %if.then19, !dbg !8376

if.then19:                                        ; preds = %land.lhs.true17
  store i64 1, i64* %__ret, align 8, !dbg !8377
  br label %if.end20, !dbg !8377

if.end20:                                         ; preds = %if.then19, %land.lhs.true17, %do.end12
  %21 = load i8, i8* %__cond, align 1, !dbg !8376
  %tobool21 = trunc i8 %21 to i1, !dbg !8376
  br i1 %tobool21, label %lor.end, label %lor.rhs, !dbg !8376

lor.rhs:                                          ; preds = %if.end20
  %22 = load i64, i64* %__ret, align 8, !dbg !8376
  %tobool23 = icmp ne i64 %22, 0, !dbg !8376
  %lnot = xor i1 %tobool23, true, !dbg !8376
  br label %lor.end, !dbg !8376

lor.end:                                          ; preds = %lor.rhs, %if.end20
  %23 = phi i1 [ true, %if.end20 ], [ %lnot, %lor.rhs ]
  %lor.ext = zext i1 %23 to i32, !dbg !8376
  store i32 %lor.ext, i32* %tmp, align 4, !dbg !8377
  %24 = load i32, i32* %tmp, align 4, !dbg !8376
  %tobool24 = icmp ne i32 %24, 0, !dbg !8379
  br i1 %tobool24, label %if.end52, label %if.then25, !dbg !8368

if.then25:                                        ; preds = %lor.end
  call void @llvm.dbg.declare(metadata %struct.wait_queue_entry* %__wq_entry, metadata !8380, metadata !DIExpression()), !dbg !8382
  call void @llvm.dbg.declare(metadata i64* %__ret26, metadata !8383, metadata !DIExpression()), !dbg !8382
  %25 = load i64, i64* %guard, align 8, !dbg !8382
  store i64 %25, i64* %__ret26, align 8, !dbg !8382
  call void @init_wait_entry(%struct.wait_queue_entry* %__wq_entry, i32 0) #11, !dbg !8382
  br label %for.cond, !dbg !8382

for.cond:                                         ; preds = %if.end48, %if.then25
  call void @llvm.dbg.declare(metadata i64* %__int, metadata !8384, metadata !DIExpression()), !dbg !8388
  %26 = load %struct.acpi_ec*, %struct.acpi_ec** %ec.addr, align 8, !dbg !8388
  %wait = getelementptr inbounds %struct.acpi_ec, %struct.acpi_ec* %26, i32 0, i32 9, !dbg !8388
  %call27 = call i64 @prepare_to_wait_event(%struct.wait_queue_head* %wait, %struct.wait_queue_entry* %__wq_entry, i32 2) #11, !dbg !8388
  store i64 %call27, i64* %__int, align 8, !dbg !8388
  call void @llvm.dbg.declare(metadata i8* %__cond28, metadata !8389, metadata !DIExpression()), !dbg !8392
  %27 = load %struct.acpi_ec*, %struct.acpi_ec** %ec.addr, align 8, !dbg !8392
  %call29 = call i32 @ec_transaction_completed(%struct.acpi_ec* %27) #11, !dbg !8392
  %tobool30 = icmp ne i32 %call29, 0, !dbg !8392
  %frombool31 = zext i1 %tobool30 to i8, !dbg !8392
  store i8 %frombool31, i8* %__cond28, align 1, !dbg !8392
  %28 = load i8, i8* %__cond28, align 1, !dbg !8393
  %tobool32 = trunc i8 %28 to i1, !dbg !8393
  br i1 %tobool32, label %land.lhs.true34, label %if.end37, !dbg !8393

land.lhs.true34:                                  ; preds = %for.cond
  %29 = load i64, i64* %__ret26, align 8, !dbg !8393
  %tobool35 = icmp ne i64 %29, 0, !dbg !8393
  br i1 %tobool35, label %if.end37, label %if.then36, !dbg !8392

if.then36:                                        ; preds = %land.lhs.true34
  store i64 1, i64* %__ret26, align 8, !dbg !8393
  br label %if.end37, !dbg !8393

if.end37:                                         ; preds = %if.then36, %land.lhs.true34, %for.cond
  %30 = load i8, i8* %__cond28, align 1, !dbg !8392
  %tobool39 = trunc i8 %30 to i1, !dbg !8392
  br i1 %tobool39, label %lor.end44, label %lor.rhs41, !dbg !8392

lor.rhs41:                                        ; preds = %if.end37
  %31 = load i64, i64* %__ret26, align 8, !dbg !8392
  %tobool42 = icmp ne i64 %31, 0, !dbg !8392
  %lnot43 = xor i1 %tobool42, true, !dbg !8392
  br label %lor.end44, !dbg !8392

lor.end44:                                        ; preds = %lor.rhs41, %if.end37
  %32 = phi i1 [ true, %if.end37 ], [ %lnot43, %lor.rhs41 ]
  %lor.ext45 = zext i1 %32 to i32, !dbg !8392
  store i32 %lor.ext45, i32* %tmp38, align 4, !dbg !8393
  %33 = load i32, i32* %tmp38, align 4, !dbg !8392
  %tobool46 = icmp ne i32 %33, 0, !dbg !8395
  br i1 %tobool46, label %if.then47, label %if.end48, !dbg !8388

if.then47:                                        ; preds = %lor.end44
  br label %for.end, !dbg !8395

if.end48:                                         ; preds = %lor.end44
  %34 = load i64, i64* %__ret26, align 8, !dbg !8388
  %call49 = call i64 @schedule_timeout(i64 %34) #11, !dbg !8388
  store i64 %call49, i64* %__ret26, align 8, !dbg !8388
  br label %for.cond, !dbg !8396, !llvm.loop !8397

for.end:                                          ; preds = %if.then47
  %35 = load %struct.acpi_ec*, %struct.acpi_ec** %ec.addr, align 8, !dbg !8382
  %wait50 = getelementptr inbounds %struct.acpi_ec, %struct.acpi_ec* %35, i32 0, i32 9, !dbg !8382
  call void @finish_wait(%struct.wait_queue_head* %wait50, %struct.wait_queue_entry* %__wq_entry) #11, !dbg !8382
  br label %__out, !dbg !8382

__out:                                            ; preds = %for.end
  call void @llvm.dbg.label(metadata !8399), !dbg !8382
  %36 = load i64, i64* %__ret26, align 8, !dbg !8382
  store i64 %36, i64* %tmp51, align 8, !dbg !8382
  %37 = load i64, i64* %tmp51, align 8, !dbg !8382
  store i64 %37, i64* %__ret, align 8, !dbg !8379
  br label %if.end52, !dbg !8379

if.end52:                                         ; preds = %__out, %lor.end
  %38 = load i64, i64* %__ret, align 8, !dbg !8368
  store i64 %38, i64* %tmp53, align 8, !dbg !8379
  %39 = load i64, i64* %tmp53, align 8, !dbg !8368
  %tobool54 = icmp ne i64 %39, 0, !dbg !8400
  br i1 %tobool54, label %if.then55, label %if.end56, !dbg !8401

if.then55:                                        ; preds = %if.end52
  store i32 0, i32* %retval, align 4, !dbg !8402
  br label %return, !dbg !8402

if.end56:                                         ; preds = %if.end52
  br label %if.end57

if.end57:                                         ; preds = %if.end56, %if.end
  br label %do.cond, !dbg !8403

do.cond:                                          ; preds = %if.end57
  %40 = load volatile i64, i64* @jiffies, align 8, !dbg !8404
  %41 = load i64, i64* %timeout, align 8, !dbg !8404
  %sub = sub i64 %40, %41, !dbg !8404
  %cmp = icmp slt i64 %sub, 0, !dbg !8404
  br i1 %cmp, label %do.body, label %do.end59, !dbg !8403, !llvm.loop !8405

do.end59:                                         ; preds = %do.cond, %if.then8
  store i32 -62, i32* %retval, align 4, !dbg !8407
  br label %return, !dbg !8407

return:                                           ; preds = %do.end59, %if.then55, %if.then3
  %42 = load i32, i32* %retval, align 4, !dbg !8408
  ret i32 %42, !dbg !8408
}

; Function Attrs: nounwind readnone willreturn
declare i1 @llvm.is.constant.i32(i32) #8

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @_msecs_to_jiffies(i32 %m) #0 !dbg !8409 {
entry:
  %m.addr = alloca i32, align 4
  store i32 %m, i32* %m.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %m.addr, metadata !8410, metadata !DIExpression()), !dbg !8411
  %0 = load i32, i32* %m.addr, align 4, !dbg !8412
  %conv = zext i32 %0 to i64, !dbg !8412
  %add = add i64 %conv, 4, !dbg !8413
  %sub = sub i64 %add, 1, !dbg !8414
  %div = sdiv i64 %sub, 4, !dbg !8415
  ret i64 %div, !dbg !8416
}

; Function Attrs: noredzone
declare dso_local i64 @__msecs_to_jiffies(i32) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @ec_transaction_completed(%struct.acpi_ec* %ec) #0 !dbg !8417 {
entry:
  %lock.addr.i24 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i24, metadata !5875, metadata !DIExpression()), !dbg !8418
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !5881, metadata !DIExpression()), !dbg !8420
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !5860, metadata !DIExpression()), !dbg !8421
  %ec.addr = alloca %struct.acpi_ec*, align 8
  %flags = alloca i64, align 8
  %ret = alloca i32, align 4
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__dummy5 = alloca i64, align 8
  %__dummy26 = alloca i64, align 8
  %tmp9 = alloca i32, align 4
  store %struct.acpi_ec* %ec, %struct.acpi_ec** %ec.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.acpi_ec** %ec.addr, metadata !8428, metadata !DIExpression()), !dbg !8429
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !8430, metadata !DIExpression()), !dbg !8431
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !8432, metadata !DIExpression()), !dbg !8433
  store i32 0, i32* %ret, align 4, !dbg !8433
  br label %do.body, !dbg !8434

do.body:                                          ; preds = %entry
  br label %do.body1, !dbg !8435

do.body1:                                         ; preds = %do.body
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !8436, metadata !DIExpression()), !dbg !8438
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !8439, metadata !DIExpression()), !dbg !8438
  %cmp = icmp eq i64* %__dummy, %__dummy2, !dbg !8438
  %conv = zext i1 %cmp to i32, !dbg !8438
  store i32 1, i32* %tmp, align 4, !dbg !8438
  %0 = load i32, i32* %tmp, align 4, !dbg !8438
  br label %do.body2, !dbg !8440

do.body2:                                         ; preds = %do.body1
  br label %do.body3, !dbg !8441

do.body3:                                         ; preds = %do.body2
  br label %do.body4, !dbg !8442

do.body4:                                         ; preds = %do.body3
  call void @llvm.dbg.declare(metadata i64* %__dummy5, metadata !8444, metadata !DIExpression()), !dbg !8447
  call void @llvm.dbg.declare(metadata i64* %__dummy26, metadata !8448, metadata !DIExpression()), !dbg !8447
  %cmp7 = icmp eq i64* %__dummy5, %__dummy26, !dbg !8447
  %conv8 = zext i1 %cmp7 to i32, !dbg !8447
  store i32 1, i32* %tmp9, align 4, !dbg !8447
  %1 = load i32, i32* %tmp9, align 4, !dbg !8447
  %call = call i64 @arch_local_irq_save() #11, !dbg !8449
  store i64 %call, i64* %flags, align 8, !dbg !8449
  br label %do.end, !dbg !8449

do.end:                                           ; preds = %do.body4
  br label %do.end10, !dbg !8442

do.end10:                                         ; preds = %do.end
  br label %do.body11, !dbg !8441

do.body11:                                        ; preds = %do.end10
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !8450, !srcloc !8451
  br label %do.body12, !dbg !8450

do.body12:                                        ; preds = %do.body11
  %2 = load %struct.acpi_ec*, %struct.acpi_ec** %ec.addr, align 8, !dbg !8452
  %lock = getelementptr inbounds %struct.acpi_ec, %struct.acpi_ec* %2, i32 0, i32 12, !dbg !8452
  store %struct.spinlock* %lock, %struct.spinlock** %lock.addr.i, align 8
  %3 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !8453
  %4 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %3, i32 0, i32 0, !dbg !8454
  %rlock.i = bitcast %union.anon.0* %4 to %struct.raw_spinlock*, !dbg !8454
  br label %do.end14, !dbg !8452

do.end14:                                         ; preds = %do.body12
  br label %do.end15, !dbg !8450

do.end15:                                         ; preds = %do.end14
  br label %do.end16, !dbg !8441

do.end16:                                         ; preds = %do.end15
  br label %do.end17, !dbg !8440

do.end17:                                         ; preds = %do.end16
  br label %do.end18, !dbg !8435

do.end18:                                         ; preds = %do.end17
  %5 = load %struct.acpi_ec*, %struct.acpi_ec** %ec.addr, align 8, !dbg !8455
  %curr = getelementptr inbounds %struct.acpi_ec, %struct.acpi_ec* %5, i32 0, i32 11, !dbg !8457
  %6 = load %struct.transaction*, %struct.transaction** %curr, align 8, !dbg !8457
  %tobool = icmp ne %struct.transaction* %6, null, !dbg !8455
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !8458

land.lhs.true:                                    ; preds = %do.end18
  %7 = load %struct.acpi_ec*, %struct.acpi_ec** %ec.addr, align 8, !dbg !8459
  %curr19 = getelementptr inbounds %struct.acpi_ec, %struct.acpi_ec* %7, i32 0, i32 11, !dbg !8460
  %8 = load %struct.transaction*, %struct.transaction** %curr19, align 8, !dbg !8460
  %flags20 = getelementptr inbounds %struct.transaction, %struct.transaction* %8, i32 0, i32 8, !dbg !8461
  %9 = load i8, i8* %flags20, align 1, !dbg !8461
  %conv21 = zext i8 %9 to i32, !dbg !8459
  %and = and i32 %conv21, 2, !dbg !8462
  %tobool22 = icmp ne i32 %and, 0, !dbg !8462
  br i1 %tobool22, label %if.then, label %if.end, !dbg !8463

if.then:                                          ; preds = %land.lhs.true
  store i32 1, i32* %ret, align 4, !dbg !8464
  br label %if.end, !dbg !8465

if.end:                                           ; preds = %if.then, %land.lhs.true, %do.end18
  %10 = load %struct.acpi_ec*, %struct.acpi_ec** %ec.addr, align 8, !dbg !8466
  %lock23 = getelementptr inbounds %struct.acpi_ec, %struct.acpi_ec* %10, i32 0, i32 12, !dbg !8467
  %11 = load i64, i64* %flags, align 8, !dbg !8468
  store %struct.spinlock* %lock23, %struct.spinlock** %lock.addr.i24, align 8
  store i64 %11, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !372, metadata !5933, metadata !DIExpression()) #7, !dbg !8469
  call void @llvm.dbg.declare(metadata !372, metadata !5937, metadata !DIExpression()) #7, !dbg !8469
  store i32 1, i32* %tmp.i, align 4, !dbg !8469
  %12 = load i32, i32* %tmp.i, align 4, !dbg !8469
  call void @llvm.dbg.declare(metadata !372, metadata !5938, metadata !DIExpression()) #7, !dbg !8470
  call void @llvm.dbg.declare(metadata !372, metadata !5944, metadata !DIExpression()) #7, !dbg !8470
  store i32 1, i32* %tmp8.i, align 4, !dbg !8470
  %13 = load i32, i32* %tmp8.i, align 4, !dbg !8470
  %14 = load i64, i64* %flags.addr.i, align 8, !dbg !8471
  call void @arch_local_irq_restore(i64 %14) #12, !dbg !8471
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !8472, !srcloc !5948
  %15 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i24, align 8, !dbg !8473
  %16 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %15, i32 0, i32 0, !dbg !8473
  %rlock.i25 = bitcast %union.anon.0* %16 to %struct.raw_spinlock*, !dbg !8473
  %17 = load i32, i32* %ret, align 4, !dbg !8474
  ret i32 %17, !dbg !8475
}

; Function Attrs: noredzone
declare dso_local void @__udelay(i64) #2

; Function Attrs: noredzone
declare dso_local i32 @jiffies_to_usecs(i64) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @ec_transaction_polled(%struct.acpi_ec* %ec) #0 !dbg !8476 {
entry:
  %lock.addr.i24 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i24, metadata !5875, metadata !DIExpression()), !dbg !8477
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !5881, metadata !DIExpression()), !dbg !8479
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !5860, metadata !DIExpression()), !dbg !8480
  %ec.addr = alloca %struct.acpi_ec*, align 8
  %flags = alloca i64, align 8
  %ret = alloca i32, align 4
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__dummy5 = alloca i64, align 8
  %__dummy26 = alloca i64, align 8
  %tmp9 = alloca i32, align 4
  store %struct.acpi_ec* %ec, %struct.acpi_ec** %ec.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.acpi_ec** %ec.addr, metadata !8487, metadata !DIExpression()), !dbg !8488
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !8489, metadata !DIExpression()), !dbg !8490
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !8491, metadata !DIExpression()), !dbg !8492
  store i32 0, i32* %ret, align 4, !dbg !8492
  br label %do.body, !dbg !8493

do.body:                                          ; preds = %entry
  br label %do.body1, !dbg !8494

do.body1:                                         ; preds = %do.body
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !8495, metadata !DIExpression()), !dbg !8497
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !8498, metadata !DIExpression()), !dbg !8497
  %cmp = icmp eq i64* %__dummy, %__dummy2, !dbg !8497
  %conv = zext i1 %cmp to i32, !dbg !8497
  store i32 1, i32* %tmp, align 4, !dbg !8497
  %0 = load i32, i32* %tmp, align 4, !dbg !8497
  br label %do.body2, !dbg !8499

do.body2:                                         ; preds = %do.body1
  br label %do.body3, !dbg !8500

do.body3:                                         ; preds = %do.body2
  br label %do.body4, !dbg !8501

do.body4:                                         ; preds = %do.body3
  call void @llvm.dbg.declare(metadata i64* %__dummy5, metadata !8503, metadata !DIExpression()), !dbg !8506
  call void @llvm.dbg.declare(metadata i64* %__dummy26, metadata !8507, metadata !DIExpression()), !dbg !8506
  %cmp7 = icmp eq i64* %__dummy5, %__dummy26, !dbg !8506
  %conv8 = zext i1 %cmp7 to i32, !dbg !8506
  store i32 1, i32* %tmp9, align 4, !dbg !8506
  %1 = load i32, i32* %tmp9, align 4, !dbg !8506
  %call = call i64 @arch_local_irq_save() #11, !dbg !8508
  store i64 %call, i64* %flags, align 8, !dbg !8508
  br label %do.end, !dbg !8508

do.end:                                           ; preds = %do.body4
  br label %do.end10, !dbg !8501

do.end10:                                         ; preds = %do.end
  br label %do.body11, !dbg !8500

do.body11:                                        ; preds = %do.end10
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !8509, !srcloc !8510
  br label %do.body12, !dbg !8509

do.body12:                                        ; preds = %do.body11
  %2 = load %struct.acpi_ec*, %struct.acpi_ec** %ec.addr, align 8, !dbg !8511
  %lock = getelementptr inbounds %struct.acpi_ec, %struct.acpi_ec* %2, i32 0, i32 12, !dbg !8511
  store %struct.spinlock* %lock, %struct.spinlock** %lock.addr.i, align 8
  %3 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !8512
  %4 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %3, i32 0, i32 0, !dbg !8513
  %rlock.i = bitcast %union.anon.0* %4 to %struct.raw_spinlock*, !dbg !8513
  br label %do.end14, !dbg !8511

do.end14:                                         ; preds = %do.body12
  br label %do.end15, !dbg !8509

do.end15:                                         ; preds = %do.end14
  br label %do.end16, !dbg !8500

do.end16:                                         ; preds = %do.end15
  br label %do.end17, !dbg !8499

do.end17:                                         ; preds = %do.end16
  br label %do.end18, !dbg !8494

do.end18:                                         ; preds = %do.end17
  %5 = load %struct.acpi_ec*, %struct.acpi_ec** %ec.addr, align 8, !dbg !8514
  %curr = getelementptr inbounds %struct.acpi_ec, %struct.acpi_ec* %5, i32 0, i32 11, !dbg !8516
  %6 = load %struct.transaction*, %struct.transaction** %curr, align 8, !dbg !8516
  %tobool = icmp ne %struct.transaction* %6, null, !dbg !8514
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !8517

land.lhs.true:                                    ; preds = %do.end18
  %7 = load %struct.acpi_ec*, %struct.acpi_ec** %ec.addr, align 8, !dbg !8518
  %curr19 = getelementptr inbounds %struct.acpi_ec, %struct.acpi_ec* %7, i32 0, i32 11, !dbg !8519
  %8 = load %struct.transaction*, %struct.transaction** %curr19, align 8, !dbg !8519
  %flags20 = getelementptr inbounds %struct.transaction, %struct.transaction* %8, i32 0, i32 8, !dbg !8520
  %9 = load i8, i8* %flags20, align 1, !dbg !8520
  %conv21 = zext i8 %9 to i32, !dbg !8518
  %and = and i32 %conv21, 1, !dbg !8521
  %tobool22 = icmp ne i32 %and, 0, !dbg !8521
  br i1 %tobool22, label %if.then, label %if.end, !dbg !8522

if.then:                                          ; preds = %land.lhs.true
  store i32 1, i32* %ret, align 4, !dbg !8523
  br label %if.end, !dbg !8524

if.end:                                           ; preds = %if.then, %land.lhs.true, %do.end18
  %10 = load %struct.acpi_ec*, %struct.acpi_ec** %ec.addr, align 8, !dbg !8525
  %lock23 = getelementptr inbounds %struct.acpi_ec, %struct.acpi_ec* %10, i32 0, i32 12, !dbg !8526
  %11 = load i64, i64* %flags, align 8, !dbg !8527
  store %struct.spinlock* %lock23, %struct.spinlock** %lock.addr.i24, align 8
  store i64 %11, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !372, metadata !5933, metadata !DIExpression()) #7, !dbg !8528
  call void @llvm.dbg.declare(metadata !372, metadata !5937, metadata !DIExpression()) #7, !dbg !8528
  store i32 1, i32* %tmp.i, align 4, !dbg !8528
  %12 = load i32, i32* %tmp.i, align 4, !dbg !8528
  call void @llvm.dbg.declare(metadata !372, metadata !5938, metadata !DIExpression()) #7, !dbg !8529
  call void @llvm.dbg.declare(metadata !372, metadata !5944, metadata !DIExpression()) #7, !dbg !8529
  store i32 1, i32* %tmp8.i, align 4, !dbg !8529
  %13 = load i32, i32* %tmp8.i, align 4, !dbg !8529
  %14 = load i64, i64* %flags.addr.i, align 8, !dbg !8530
  call void @arch_local_irq_restore(i64 %14) #12, !dbg !8530
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !8531, !srcloc !5948
  %15 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i24, align 8, !dbg !8532
  %16 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %15, i32 0, i32 0, !dbg !8532
  %rlock.i25 = bitcast %union.anon.0* %16 to %struct.raw_spinlock*, !dbg !8532
  %17 = load i32, i32* %ret, align 4, !dbg !8533
  ret i32 %17, !dbg !8534
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @acpi_ec_guard_event(%struct.acpi_ec* %ec) #0 !dbg !8535 {
entry:
  %lock.addr.i33 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i33, metadata !5875, metadata !DIExpression()), !dbg !8536
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !5881, metadata !DIExpression()), !dbg !8538
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !5860, metadata !DIExpression()), !dbg !8539
  %ec.addr = alloca %struct.acpi_ec*, align 8
  %guarded = alloca i8, align 1
  %flags = alloca i64, align 8
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__dummy5 = alloca i64, align 8
  %__dummy26 = alloca i64, align 8
  %tmp9 = alloca i32, align 4
  store %struct.acpi_ec* %ec, %struct.acpi_ec** %ec.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.acpi_ec** %ec.addr, metadata !8546, metadata !DIExpression()), !dbg !8547
  call void @llvm.dbg.declare(metadata i8* %guarded, metadata !8548, metadata !DIExpression()), !dbg !8549
  store i8 1, i8* %guarded, align 1, !dbg !8549
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !8550, metadata !DIExpression()), !dbg !8551
  br label %do.body, !dbg !8552

do.body:                                          ; preds = %entry
  br label %do.body1, !dbg !8553

do.body1:                                         ; preds = %do.body
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !8554, metadata !DIExpression()), !dbg !8556
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !8557, metadata !DIExpression()), !dbg !8556
  %cmp = icmp eq i64* %__dummy, %__dummy2, !dbg !8556
  %conv = zext i1 %cmp to i32, !dbg !8556
  store i32 1, i32* %tmp, align 4, !dbg !8556
  %0 = load i32, i32* %tmp, align 4, !dbg !8556
  br label %do.body2, !dbg !8558

do.body2:                                         ; preds = %do.body1
  br label %do.body3, !dbg !8559

do.body3:                                         ; preds = %do.body2
  br label %do.body4, !dbg !8560

do.body4:                                         ; preds = %do.body3
  call void @llvm.dbg.declare(metadata i64* %__dummy5, metadata !8562, metadata !DIExpression()), !dbg !8565
  call void @llvm.dbg.declare(metadata i64* %__dummy26, metadata !8566, metadata !DIExpression()), !dbg !8565
  %cmp7 = icmp eq i64* %__dummy5, %__dummy26, !dbg !8565
  %conv8 = zext i1 %cmp7 to i32, !dbg !8565
  store i32 1, i32* %tmp9, align 4, !dbg !8565
  %1 = load i32, i32* %tmp9, align 4, !dbg !8565
  %call = call i64 @arch_local_irq_save() #11, !dbg !8567
  store i64 %call, i64* %flags, align 8, !dbg !8567
  br label %do.end, !dbg !8567

do.end:                                           ; preds = %do.body4
  br label %do.end10, !dbg !8560

do.end10:                                         ; preds = %do.end
  br label %do.body11, !dbg !8559

do.body11:                                        ; preds = %do.end10
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !8568, !srcloc !8569
  br label %do.body12, !dbg !8568

do.body12:                                        ; preds = %do.body11
  %2 = load %struct.acpi_ec*, %struct.acpi_ec** %ec.addr, align 8, !dbg !8570
  %lock = getelementptr inbounds %struct.acpi_ec, %struct.acpi_ec* %2, i32 0, i32 12, !dbg !8570
  store %struct.spinlock* %lock, %struct.spinlock** %lock.addr.i, align 8
  %3 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !8571
  %4 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %3, i32 0, i32 0, !dbg !8572
  %rlock.i = bitcast %union.anon.0* %4 to %struct.raw_spinlock*, !dbg !8572
  br label %do.end14, !dbg !8570

do.end14:                                         ; preds = %do.body12
  br label %do.end15, !dbg !8568

do.end15:                                         ; preds = %do.end14
  br label %do.end16, !dbg !8559

do.end16:                                         ; preds = %do.end15
  br label %do.end17, !dbg !8558

do.end17:                                         ; preds = %do.end16
  br label %do.end18, !dbg !8553

do.end18:                                         ; preds = %do.end17
  %5 = load i32, i32* @ec_event_clearing, align 4, !dbg !8573
  %cmp19 = icmp eq i32 %5, 0, !dbg !8575
  br i1 %cmp19, label %if.then, label %lor.lhs.false, !dbg !8576

lor.lhs.false:                                    ; preds = %do.end18
  %6 = load i32, i32* @ec_event_clearing, align 4, !dbg !8577
  %cmp21 = icmp eq i32 %6, 1, !dbg !8578
  br i1 %cmp21, label %if.then, label %lor.lhs.false23, !dbg !8579

lor.lhs.false23:                                  ; preds = %lor.lhs.false
  %7 = load %struct.acpi_ec*, %struct.acpi_ec** %ec.addr, align 8, !dbg !8580
  %flags24 = getelementptr inbounds %struct.acpi_ec, %struct.acpi_ec* %7, i32 0, i32 6, !dbg !8581
  %call25 = call zeroext i1 @test_bit(i64 1, i64* %flags24) #11, !dbg !8582
  br i1 %call25, label %lor.lhs.false26, label %if.then, !dbg !8583

lor.lhs.false26:                                  ; preds = %lor.lhs.false23
  %8 = load %struct.acpi_ec*, %struct.acpi_ec** %ec.addr, align 8, !dbg !8584
  %curr = getelementptr inbounds %struct.acpi_ec, %struct.acpi_ec* %8, i32 0, i32 11, !dbg !8585
  %9 = load %struct.transaction*, %struct.transaction** %curr, align 8, !dbg !8585
  %tobool = icmp ne %struct.transaction* %9, null, !dbg !8584
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !8586

land.lhs.true:                                    ; preds = %lor.lhs.false26
  %10 = load %struct.acpi_ec*, %struct.acpi_ec** %ec.addr, align 8, !dbg !8587
  %curr27 = getelementptr inbounds %struct.acpi_ec, %struct.acpi_ec* %10, i32 0, i32 11, !dbg !8588
  %11 = load %struct.transaction*, %struct.transaction** %curr27, align 8, !dbg !8588
  %command = getelementptr inbounds %struct.transaction, %struct.transaction* %11, i32 0, i32 3, !dbg !8589
  %12 = load i8, i8* %command, align 2, !dbg !8589
  %conv28 = zext i8 %12 to i32, !dbg !8587
  %cmp29 = icmp eq i32 %conv28, 132, !dbg !8590
  br i1 %cmp29, label %if.then, label %if.end, !dbg !8591

if.then:                                          ; preds = %land.lhs.true, %lor.lhs.false23, %lor.lhs.false, %do.end18
  store i8 0, i8* %guarded, align 1, !dbg !8592
  br label %if.end, !dbg !8593

if.end:                                           ; preds = %if.then, %land.lhs.true, %lor.lhs.false26
  %13 = load %struct.acpi_ec*, %struct.acpi_ec** %ec.addr, align 8, !dbg !8594
  %lock31 = getelementptr inbounds %struct.acpi_ec, %struct.acpi_ec* %13, i32 0, i32 12, !dbg !8595
  %14 = load i64, i64* %flags, align 8, !dbg !8596
  store %struct.spinlock* %lock31, %struct.spinlock** %lock.addr.i33, align 8
  store i64 %14, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !372, metadata !5933, metadata !DIExpression()) #7, !dbg !8597
  call void @llvm.dbg.declare(metadata !372, metadata !5937, metadata !DIExpression()) #7, !dbg !8597
  store i32 1, i32* %tmp.i, align 4, !dbg !8597
  %15 = load i32, i32* %tmp.i, align 4, !dbg !8597
  call void @llvm.dbg.declare(metadata !372, metadata !5938, metadata !DIExpression()) #7, !dbg !8598
  call void @llvm.dbg.declare(metadata !372, metadata !5944, metadata !DIExpression()) #7, !dbg !8598
  store i32 1, i32* %tmp8.i, align 4, !dbg !8598
  %16 = load i32, i32* %tmp8.i, align 4, !dbg !8598
  %17 = load i64, i64* %flags.addr.i, align 8, !dbg !8599
  call void @arch_local_irq_restore(i64 %17) #12, !dbg !8599
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !8600, !srcloc !5948
  %18 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i33, align 8, !dbg !8601
  %19 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %18, i32 0, i32 0, !dbg !8601
  %rlock.i34 = bitcast %union.anon.0* %19 to %struct.raw_spinlock*, !dbg !8601
  %20 = load i8, i8* %guarded, align 1, !dbg !8602
  %tobool32 = trunc i8 %20 to i1, !dbg !8602
  ret i1 %tobool32, !dbg !8603
}

; Function Attrs: noredzone
declare dso_local void @init_wait_entry(%struct.wait_queue_entry*, i32) #2

; Function Attrs: noredzone
declare dso_local i64 @prepare_to_wait_event(%struct.wait_queue_head*, %struct.wait_queue_entry*, i32) #2

; Function Attrs: noredzone
declare dso_local i64 @schedule_timeout(i64) #2

; Function Attrs: noredzone
declare dso_local void @finish_wait(%struct.wait_queue_head*, %struct.wait_queue_entry*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @_usecs_to_jiffies(i32 %u) #0 !dbg !8604 {
entry:
  %u.addr = alloca i32, align 4
  store i32 %u, i32* %u.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %u.addr, metadata !8605, metadata !DIExpression()), !dbg !8606
  %0 = load i32, i32* %u.addr, align 4, !dbg !8607
  %conv = zext i32 %0 to i64, !dbg !8607
  %add = add i64 %conv, 4000, !dbg !8608
  %sub = sub i64 %add, 1, !dbg !8609
  %div = sdiv i64 %sub, 4000, !dbg !8610
  ret i64 %div, !dbg !8611
}

; Function Attrs: noredzone
declare dso_local i64 @__usecs_to_jiffies(i32) #2

; Function Attrs: noredzone
declare dso_local void @enable_irq(i32) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @acpi_ec_flushed(%struct.acpi_ec* %ec) #0 !dbg !8612 {
entry:
  %ec.addr = alloca %struct.acpi_ec*, align 8
  store %struct.acpi_ec* %ec, %struct.acpi_ec** %ec.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.acpi_ec** %ec.addr, metadata !8613, metadata !DIExpression()), !dbg !8614
  %0 = load %struct.acpi_ec*, %struct.acpi_ec** %ec.addr, align 8, !dbg !8615
  %reference_count = getelementptr inbounds %struct.acpi_ec, %struct.acpi_ec* %0, i32 0, i32 7, !dbg !8616
  %1 = load i64, i64* %reference_count, align 8, !dbg !8616
  %cmp = icmp eq i64 %1, 1, !dbg !8617
  ret i1 %cmp, !dbg !8618
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @acpi_ec_stopped(%struct.acpi_ec* %ec) #0 !dbg !8619 {
entry:
  %lock.addr.i21 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i21, metadata !5875, metadata !DIExpression()), !dbg !8620
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !5881, metadata !DIExpression()), !dbg !8622
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !5860, metadata !DIExpression()), !dbg !8623
  %ec.addr = alloca %struct.acpi_ec*, align 8
  %flags = alloca i64, align 8
  %flushed = alloca i8, align 1
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__dummy5 = alloca i64, align 8
  %__dummy26 = alloca i64, align 8
  %tmp9 = alloca i32, align 4
  store %struct.acpi_ec* %ec, %struct.acpi_ec** %ec.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.acpi_ec** %ec.addr, metadata !8630, metadata !DIExpression()), !dbg !8631
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !8632, metadata !DIExpression()), !dbg !8633
  call void @llvm.dbg.declare(metadata i8* %flushed, metadata !8634, metadata !DIExpression()), !dbg !8635
  br label %do.body, !dbg !8636

do.body:                                          ; preds = %entry
  br label %do.body1, !dbg !8637

do.body1:                                         ; preds = %do.body
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !8638, metadata !DIExpression()), !dbg !8640
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !8641, metadata !DIExpression()), !dbg !8640
  %cmp = icmp eq i64* %__dummy, %__dummy2, !dbg !8640
  %conv = zext i1 %cmp to i32, !dbg !8640
  store i32 1, i32* %tmp, align 4, !dbg !8640
  %0 = load i32, i32* %tmp, align 4, !dbg !8640
  br label %do.body2, !dbg !8642

do.body2:                                         ; preds = %do.body1
  br label %do.body3, !dbg !8643

do.body3:                                         ; preds = %do.body2
  br label %do.body4, !dbg !8644

do.body4:                                         ; preds = %do.body3
  call void @llvm.dbg.declare(metadata i64* %__dummy5, metadata !8646, metadata !DIExpression()), !dbg !8649
  call void @llvm.dbg.declare(metadata i64* %__dummy26, metadata !8650, metadata !DIExpression()), !dbg !8649
  %cmp7 = icmp eq i64* %__dummy5, %__dummy26, !dbg !8649
  %conv8 = zext i1 %cmp7 to i32, !dbg !8649
  store i32 1, i32* %tmp9, align 4, !dbg !8649
  %1 = load i32, i32* %tmp9, align 4, !dbg !8649
  %call = call i64 @arch_local_irq_save() #11, !dbg !8651
  store i64 %call, i64* %flags, align 8, !dbg !8651
  br label %do.end, !dbg !8651

do.end:                                           ; preds = %do.body4
  br label %do.end10, !dbg !8644

do.end10:                                         ; preds = %do.end
  br label %do.body11, !dbg !8643

do.body11:                                        ; preds = %do.end10
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !8652, !srcloc !8653
  br label %do.body12, !dbg !8652

do.body12:                                        ; preds = %do.body11
  %2 = load %struct.acpi_ec*, %struct.acpi_ec** %ec.addr, align 8, !dbg !8654
  %lock = getelementptr inbounds %struct.acpi_ec, %struct.acpi_ec* %2, i32 0, i32 12, !dbg !8654
  store %struct.spinlock* %lock, %struct.spinlock** %lock.addr.i, align 8
  %3 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !8655
  %4 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %3, i32 0, i32 0, !dbg !8656
  %rlock.i = bitcast %union.anon.0* %4 to %struct.raw_spinlock*, !dbg !8656
  br label %do.end14, !dbg !8654

do.end14:                                         ; preds = %do.body12
  br label %do.end15, !dbg !8652

do.end15:                                         ; preds = %do.end14
  br label %do.end16, !dbg !8643

do.end16:                                         ; preds = %do.end15
  br label %do.end17, !dbg !8642

do.end17:                                         ; preds = %do.end16
  br label %do.end18, !dbg !8637

do.end18:                                         ; preds = %do.end17
  %5 = load %struct.acpi_ec*, %struct.acpi_ec** %ec.addr, align 8, !dbg !8657
  %call19 = call zeroext i1 @acpi_ec_flushed(%struct.acpi_ec* %5) #11, !dbg !8658
  %frombool = zext i1 %call19 to i8, !dbg !8659
  store i8 %frombool, i8* %flushed, align 1, !dbg !8659
  %6 = load %struct.acpi_ec*, %struct.acpi_ec** %ec.addr, align 8, !dbg !8660
  %lock20 = getelementptr inbounds %struct.acpi_ec, %struct.acpi_ec* %6, i32 0, i32 12, !dbg !8661
  %7 = load i64, i64* %flags, align 8, !dbg !8662
  store %struct.spinlock* %lock20, %struct.spinlock** %lock.addr.i21, align 8
  store i64 %7, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !372, metadata !5933, metadata !DIExpression()) #7, !dbg !8663
  call void @llvm.dbg.declare(metadata !372, metadata !5937, metadata !DIExpression()) #7, !dbg !8663
  store i32 1, i32* %tmp.i, align 4, !dbg !8663
  %8 = load i32, i32* %tmp.i, align 4, !dbg !8663
  call void @llvm.dbg.declare(metadata !372, metadata !5938, metadata !DIExpression()) #7, !dbg !8664
  call void @llvm.dbg.declare(metadata !372, metadata !5944, metadata !DIExpression()) #7, !dbg !8664
  store i32 1, i32* %tmp8.i, align 4, !dbg !8664
  %9 = load i32, i32* %tmp8.i, align 4, !dbg !8664
  %10 = load i64, i64* %flags.addr.i, align 8, !dbg !8665
  call void @arch_local_irq_restore(i64 %10) #12, !dbg !8665
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !8666, !srcloc !5948
  %11 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i21, align 8, !dbg !8667
  %12 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %11, i32 0, i32 0, !dbg !8667
  %rlock.i22 = bitcast %union.anon.0* %12 to %struct.raw_spinlock*, !dbg !8667
  %13 = load i8, i8* %flushed, align 1, !dbg !8668
  %tobool = trunc i8 %13 to i1, !dbg !8668
  ret i1 %tobool, !dbg !8669
}

; Function Attrs: noredzone
declare dso_local void @schedule() #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @__acpi_ec_disable_event(%struct.acpi_ec* %ec) #0 !dbg !8670 {
entry:
  %ec.addr = alloca %struct.acpi_ec*, align 8
  store %struct.acpi_ec* %ec, %struct.acpi_ec** %ec.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.acpi_ec** %ec.addr, metadata !8671, metadata !DIExpression()), !dbg !8672
  %0 = load %struct.acpi_ec*, %struct.acpi_ec** %ec.addr, align 8, !dbg !8673
  %flags = getelementptr inbounds %struct.acpi_ec, %struct.acpi_ec* %0, i32 0, i32 6, !dbg !8675
  %call = call zeroext i1 @test_and_clear_bit(i64 0, i64* %flags) #11, !dbg !8676
  br i1 %call, label %if.then, label %if.end, !dbg !8677

if.then:                                          ; preds = %entry
  %call1 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.6, i64 0, i64 0)) #13, !dbg !8678
  br label %if.end, !dbg !8678

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !8679
}

; Function Attrs: noredzone
declare dso_local noalias i8* @__kmalloc(i64, i32) #2

; Function Attrs: nounwind willreturn
declare void @llvm.assume(i1) #9

; Function Attrs: noinline noredzone nounwind optnone readnone sspstrong
define internal i32 @get_order(i64 %size) #10 !dbg !8680 {
entry:
  %x.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %x.addr.i, metadata !8684, metadata !DIExpression()), !dbg !8688
  %bitpos.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %bitpos.i, metadata !8690, metadata !DIExpression()), !dbg !8691
  %retval = alloca i32, align 4
  %size.addr = alloca i64, align 8
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !8692, metadata !DIExpression()), !dbg !8693
  %0 = load i64, i64* %size.addr, align 8, !dbg !8694
  %1 = call i1 @llvm.is.constant.i64(i64 %0), !dbg !8696
  br i1 %1, label %if.then, label %if.end447, !dbg !8697

if.then:                                          ; preds = %entry
  %2 = load i64, i64* %size.addr, align 8, !dbg !8698
  %tobool = icmp ne i64 %2, 0, !dbg !8698
  br i1 %tobool, label %if.end, label %if.then1, !dbg !8701

if.then1:                                         ; preds = %if.then
  store i32 52, i32* %retval, align 4, !dbg !8702
  br label %return, !dbg !8702

if.end:                                           ; preds = %if.then
  %3 = load i64, i64* %size.addr, align 8, !dbg !8703
  %cmp = icmp ult i64 %3, 4096, !dbg !8705
  br i1 %cmp, label %if.then2, label %if.end3, !dbg !8706

if.then2:                                         ; preds = %if.end
  store i32 0, i32* %retval, align 4, !dbg !8707
  br label %return, !dbg !8707

if.end3:                                          ; preds = %if.end
  %4 = load i64, i64* %size.addr, align 8, !dbg !8708
  %sub = sub i64 %4, 1, !dbg !8708
  %5 = call i1 @llvm.is.constant.i64(i64 %sub), !dbg !8708
  br i1 %5, label %cond.true, label %cond.false442, !dbg !8708

cond.true:                                        ; preds = %if.end3
  %6 = load i64, i64* %size.addr, align 8, !dbg !8708
  %sub4 = sub i64 %6, 1, !dbg !8708
  %7 = call i1 @llvm.is.constant.i64(i64 %sub4), !dbg !8708
  br i1 %7, label %cond.true5, label %cond.false439, !dbg !8708

cond.true5:                                       ; preds = %cond.true
  %8 = load i64, i64* %size.addr, align 8, !dbg !8708
  %sub6 = sub i64 %8, 1, !dbg !8708
  %cmp7 = icmp ult i64 %sub6, 2, !dbg !8708
  br i1 %cmp7, label %cond.true8, label %cond.false, !dbg !8708

cond.true8:                                       ; preds = %cond.true5
  br label %cond.end437, !dbg !8708

cond.false:                                       ; preds = %cond.true5
  %9 = load i64, i64* %size.addr, align 8, !dbg !8708
  %sub9 = sub i64 %9, 1, !dbg !8708
  %and = and i64 %sub9, -9223372036854775808, !dbg !8708
  %tobool10 = icmp ne i64 %and, 0, !dbg !8708
  br i1 %tobool10, label %cond.true11, label %cond.false12, !dbg !8708

cond.true11:                                      ; preds = %cond.false
  br label %cond.end435, !dbg !8708

cond.false12:                                     ; preds = %cond.false
  %10 = load i64, i64* %size.addr, align 8, !dbg !8708
  %sub13 = sub i64 %10, 1, !dbg !8708
  %and14 = and i64 %sub13, 4611686018427387904, !dbg !8708
  %tobool15 = icmp ne i64 %and14, 0, !dbg !8708
  br i1 %tobool15, label %cond.true16, label %cond.false17, !dbg !8708

cond.true16:                                      ; preds = %cond.false12
  br label %cond.end433, !dbg !8708

cond.false17:                                     ; preds = %cond.false12
  %11 = load i64, i64* %size.addr, align 8, !dbg !8708
  %sub18 = sub i64 %11, 1, !dbg !8708
  %and19 = and i64 %sub18, 2305843009213693952, !dbg !8708
  %tobool20 = icmp ne i64 %and19, 0, !dbg !8708
  br i1 %tobool20, label %cond.true21, label %cond.false22, !dbg !8708

cond.true21:                                      ; preds = %cond.false17
  br label %cond.end431, !dbg !8708

cond.false22:                                     ; preds = %cond.false17
  %12 = load i64, i64* %size.addr, align 8, !dbg !8708
  %sub23 = sub i64 %12, 1, !dbg !8708
  %and24 = and i64 %sub23, 1152921504606846976, !dbg !8708
  %tobool25 = icmp ne i64 %and24, 0, !dbg !8708
  br i1 %tobool25, label %cond.true26, label %cond.false27, !dbg !8708

cond.true26:                                      ; preds = %cond.false22
  br label %cond.end429, !dbg !8708

cond.false27:                                     ; preds = %cond.false22
  %13 = load i64, i64* %size.addr, align 8, !dbg !8708
  %sub28 = sub i64 %13, 1, !dbg !8708
  %and29 = and i64 %sub28, 576460752303423488, !dbg !8708
  %tobool30 = icmp ne i64 %and29, 0, !dbg !8708
  br i1 %tobool30, label %cond.true31, label %cond.false32, !dbg !8708

cond.true31:                                      ; preds = %cond.false27
  br label %cond.end427, !dbg !8708

cond.false32:                                     ; preds = %cond.false27
  %14 = load i64, i64* %size.addr, align 8, !dbg !8708
  %sub33 = sub i64 %14, 1, !dbg !8708
  %and34 = and i64 %sub33, 288230376151711744, !dbg !8708
  %tobool35 = icmp ne i64 %and34, 0, !dbg !8708
  br i1 %tobool35, label %cond.true36, label %cond.false37, !dbg !8708

cond.true36:                                      ; preds = %cond.false32
  br label %cond.end425, !dbg !8708

cond.false37:                                     ; preds = %cond.false32
  %15 = load i64, i64* %size.addr, align 8, !dbg !8708
  %sub38 = sub i64 %15, 1, !dbg !8708
  %and39 = and i64 %sub38, 144115188075855872, !dbg !8708
  %tobool40 = icmp ne i64 %and39, 0, !dbg !8708
  br i1 %tobool40, label %cond.true41, label %cond.false42, !dbg !8708

cond.true41:                                      ; preds = %cond.false37
  br label %cond.end423, !dbg !8708

cond.false42:                                     ; preds = %cond.false37
  %16 = load i64, i64* %size.addr, align 8, !dbg !8708
  %sub43 = sub i64 %16, 1, !dbg !8708
  %and44 = and i64 %sub43, 72057594037927936, !dbg !8708
  %tobool45 = icmp ne i64 %and44, 0, !dbg !8708
  br i1 %tobool45, label %cond.true46, label %cond.false47, !dbg !8708

cond.true46:                                      ; preds = %cond.false42
  br label %cond.end421, !dbg !8708

cond.false47:                                     ; preds = %cond.false42
  %17 = load i64, i64* %size.addr, align 8, !dbg !8708
  %sub48 = sub i64 %17, 1, !dbg !8708
  %and49 = and i64 %sub48, 36028797018963968, !dbg !8708
  %tobool50 = icmp ne i64 %and49, 0, !dbg !8708
  br i1 %tobool50, label %cond.true51, label %cond.false52, !dbg !8708

cond.true51:                                      ; preds = %cond.false47
  br label %cond.end419, !dbg !8708

cond.false52:                                     ; preds = %cond.false47
  %18 = load i64, i64* %size.addr, align 8, !dbg !8708
  %sub53 = sub i64 %18, 1, !dbg !8708
  %and54 = and i64 %sub53, 18014398509481984, !dbg !8708
  %tobool55 = icmp ne i64 %and54, 0, !dbg !8708
  br i1 %tobool55, label %cond.true56, label %cond.false57, !dbg !8708

cond.true56:                                      ; preds = %cond.false52
  br label %cond.end417, !dbg !8708

cond.false57:                                     ; preds = %cond.false52
  %19 = load i64, i64* %size.addr, align 8, !dbg !8708
  %sub58 = sub i64 %19, 1, !dbg !8708
  %and59 = and i64 %sub58, 9007199254740992, !dbg !8708
  %tobool60 = icmp ne i64 %and59, 0, !dbg !8708
  br i1 %tobool60, label %cond.true61, label %cond.false62, !dbg !8708

cond.true61:                                      ; preds = %cond.false57
  br label %cond.end415, !dbg !8708

cond.false62:                                     ; preds = %cond.false57
  %20 = load i64, i64* %size.addr, align 8, !dbg !8708
  %sub63 = sub i64 %20, 1, !dbg !8708
  %and64 = and i64 %sub63, 4503599627370496, !dbg !8708
  %tobool65 = icmp ne i64 %and64, 0, !dbg !8708
  br i1 %tobool65, label %cond.true66, label %cond.false67, !dbg !8708

cond.true66:                                      ; preds = %cond.false62
  br label %cond.end413, !dbg !8708

cond.false67:                                     ; preds = %cond.false62
  %21 = load i64, i64* %size.addr, align 8, !dbg !8708
  %sub68 = sub i64 %21, 1, !dbg !8708
  %and69 = and i64 %sub68, 2251799813685248, !dbg !8708
  %tobool70 = icmp ne i64 %and69, 0, !dbg !8708
  br i1 %tobool70, label %cond.true71, label %cond.false72, !dbg !8708

cond.true71:                                      ; preds = %cond.false67
  br label %cond.end411, !dbg !8708

cond.false72:                                     ; preds = %cond.false67
  %22 = load i64, i64* %size.addr, align 8, !dbg !8708
  %sub73 = sub i64 %22, 1, !dbg !8708
  %and74 = and i64 %sub73, 1125899906842624, !dbg !8708
  %tobool75 = icmp ne i64 %and74, 0, !dbg !8708
  br i1 %tobool75, label %cond.true76, label %cond.false77, !dbg !8708

cond.true76:                                      ; preds = %cond.false72
  br label %cond.end409, !dbg !8708

cond.false77:                                     ; preds = %cond.false72
  %23 = load i64, i64* %size.addr, align 8, !dbg !8708
  %sub78 = sub i64 %23, 1, !dbg !8708
  %and79 = and i64 %sub78, 562949953421312, !dbg !8708
  %tobool80 = icmp ne i64 %and79, 0, !dbg !8708
  br i1 %tobool80, label %cond.true81, label %cond.false82, !dbg !8708

cond.true81:                                      ; preds = %cond.false77
  br label %cond.end407, !dbg !8708

cond.false82:                                     ; preds = %cond.false77
  %24 = load i64, i64* %size.addr, align 8, !dbg !8708
  %sub83 = sub i64 %24, 1, !dbg !8708
  %and84 = and i64 %sub83, 281474976710656, !dbg !8708
  %tobool85 = icmp ne i64 %and84, 0, !dbg !8708
  br i1 %tobool85, label %cond.true86, label %cond.false87, !dbg !8708

cond.true86:                                      ; preds = %cond.false82
  br label %cond.end405, !dbg !8708

cond.false87:                                     ; preds = %cond.false82
  %25 = load i64, i64* %size.addr, align 8, !dbg !8708
  %sub88 = sub i64 %25, 1, !dbg !8708
  %and89 = and i64 %sub88, 140737488355328, !dbg !8708
  %tobool90 = icmp ne i64 %and89, 0, !dbg !8708
  br i1 %tobool90, label %cond.true91, label %cond.false92, !dbg !8708

cond.true91:                                      ; preds = %cond.false87
  br label %cond.end403, !dbg !8708

cond.false92:                                     ; preds = %cond.false87
  %26 = load i64, i64* %size.addr, align 8, !dbg !8708
  %sub93 = sub i64 %26, 1, !dbg !8708
  %and94 = and i64 %sub93, 70368744177664, !dbg !8708
  %tobool95 = icmp ne i64 %and94, 0, !dbg !8708
  br i1 %tobool95, label %cond.true96, label %cond.false97, !dbg !8708

cond.true96:                                      ; preds = %cond.false92
  br label %cond.end401, !dbg !8708

cond.false97:                                     ; preds = %cond.false92
  %27 = load i64, i64* %size.addr, align 8, !dbg !8708
  %sub98 = sub i64 %27, 1, !dbg !8708
  %and99 = and i64 %sub98, 35184372088832, !dbg !8708
  %tobool100 = icmp ne i64 %and99, 0, !dbg !8708
  br i1 %tobool100, label %cond.true101, label %cond.false102, !dbg !8708

cond.true101:                                     ; preds = %cond.false97
  br label %cond.end399, !dbg !8708

cond.false102:                                    ; preds = %cond.false97
  %28 = load i64, i64* %size.addr, align 8, !dbg !8708
  %sub103 = sub i64 %28, 1, !dbg !8708
  %and104 = and i64 %sub103, 17592186044416, !dbg !8708
  %tobool105 = icmp ne i64 %and104, 0, !dbg !8708
  br i1 %tobool105, label %cond.true106, label %cond.false107, !dbg !8708

cond.true106:                                     ; preds = %cond.false102
  br label %cond.end397, !dbg !8708

cond.false107:                                    ; preds = %cond.false102
  %29 = load i64, i64* %size.addr, align 8, !dbg !8708
  %sub108 = sub i64 %29, 1, !dbg !8708
  %and109 = and i64 %sub108, 8796093022208, !dbg !8708
  %tobool110 = icmp ne i64 %and109, 0, !dbg !8708
  br i1 %tobool110, label %cond.true111, label %cond.false112, !dbg !8708

cond.true111:                                     ; preds = %cond.false107
  br label %cond.end395, !dbg !8708

cond.false112:                                    ; preds = %cond.false107
  %30 = load i64, i64* %size.addr, align 8, !dbg !8708
  %sub113 = sub i64 %30, 1, !dbg !8708
  %and114 = and i64 %sub113, 4398046511104, !dbg !8708
  %tobool115 = icmp ne i64 %and114, 0, !dbg !8708
  br i1 %tobool115, label %cond.true116, label %cond.false117, !dbg !8708

cond.true116:                                     ; preds = %cond.false112
  br label %cond.end393, !dbg !8708

cond.false117:                                    ; preds = %cond.false112
  %31 = load i64, i64* %size.addr, align 8, !dbg !8708
  %sub118 = sub i64 %31, 1, !dbg !8708
  %and119 = and i64 %sub118, 2199023255552, !dbg !8708
  %tobool120 = icmp ne i64 %and119, 0, !dbg !8708
  br i1 %tobool120, label %cond.true121, label %cond.false122, !dbg !8708

cond.true121:                                     ; preds = %cond.false117
  br label %cond.end391, !dbg !8708

cond.false122:                                    ; preds = %cond.false117
  %32 = load i64, i64* %size.addr, align 8, !dbg !8708
  %sub123 = sub i64 %32, 1, !dbg !8708
  %and124 = and i64 %sub123, 1099511627776, !dbg !8708
  %tobool125 = icmp ne i64 %and124, 0, !dbg !8708
  br i1 %tobool125, label %cond.true126, label %cond.false127, !dbg !8708

cond.true126:                                     ; preds = %cond.false122
  br label %cond.end389, !dbg !8708

cond.false127:                                    ; preds = %cond.false122
  %33 = load i64, i64* %size.addr, align 8, !dbg !8708
  %sub128 = sub i64 %33, 1, !dbg !8708
  %and129 = and i64 %sub128, 549755813888, !dbg !8708
  %tobool130 = icmp ne i64 %and129, 0, !dbg !8708
  br i1 %tobool130, label %cond.true131, label %cond.false132, !dbg !8708

cond.true131:                                     ; preds = %cond.false127
  br label %cond.end387, !dbg !8708

cond.false132:                                    ; preds = %cond.false127
  %34 = load i64, i64* %size.addr, align 8, !dbg !8708
  %sub133 = sub i64 %34, 1, !dbg !8708
  %and134 = and i64 %sub133, 274877906944, !dbg !8708
  %tobool135 = icmp ne i64 %and134, 0, !dbg !8708
  br i1 %tobool135, label %cond.true136, label %cond.false137, !dbg !8708

cond.true136:                                     ; preds = %cond.false132
  br label %cond.end385, !dbg !8708

cond.false137:                                    ; preds = %cond.false132
  %35 = load i64, i64* %size.addr, align 8, !dbg !8708
  %sub138 = sub i64 %35, 1, !dbg !8708
  %and139 = and i64 %sub138, 137438953472, !dbg !8708
  %tobool140 = icmp ne i64 %and139, 0, !dbg !8708
  br i1 %tobool140, label %cond.true141, label %cond.false142, !dbg !8708

cond.true141:                                     ; preds = %cond.false137
  br label %cond.end383, !dbg !8708

cond.false142:                                    ; preds = %cond.false137
  %36 = load i64, i64* %size.addr, align 8, !dbg !8708
  %sub143 = sub i64 %36, 1, !dbg !8708
  %and144 = and i64 %sub143, 68719476736, !dbg !8708
  %tobool145 = icmp ne i64 %and144, 0, !dbg !8708
  br i1 %tobool145, label %cond.true146, label %cond.false147, !dbg !8708

cond.true146:                                     ; preds = %cond.false142
  br label %cond.end381, !dbg !8708

cond.false147:                                    ; preds = %cond.false142
  %37 = load i64, i64* %size.addr, align 8, !dbg !8708
  %sub148 = sub i64 %37, 1, !dbg !8708
  %and149 = and i64 %sub148, 34359738368, !dbg !8708
  %tobool150 = icmp ne i64 %and149, 0, !dbg !8708
  br i1 %tobool150, label %cond.true151, label %cond.false152, !dbg !8708

cond.true151:                                     ; preds = %cond.false147
  br label %cond.end379, !dbg !8708

cond.false152:                                    ; preds = %cond.false147
  %38 = load i64, i64* %size.addr, align 8, !dbg !8708
  %sub153 = sub i64 %38, 1, !dbg !8708
  %and154 = and i64 %sub153, 17179869184, !dbg !8708
  %tobool155 = icmp ne i64 %and154, 0, !dbg !8708
  br i1 %tobool155, label %cond.true156, label %cond.false157, !dbg !8708

cond.true156:                                     ; preds = %cond.false152
  br label %cond.end377, !dbg !8708

cond.false157:                                    ; preds = %cond.false152
  %39 = load i64, i64* %size.addr, align 8, !dbg !8708
  %sub158 = sub i64 %39, 1, !dbg !8708
  %and159 = and i64 %sub158, 8589934592, !dbg !8708
  %tobool160 = icmp ne i64 %and159, 0, !dbg !8708
  br i1 %tobool160, label %cond.true161, label %cond.false162, !dbg !8708

cond.true161:                                     ; preds = %cond.false157
  br label %cond.end375, !dbg !8708

cond.false162:                                    ; preds = %cond.false157
  %40 = load i64, i64* %size.addr, align 8, !dbg !8708
  %sub163 = sub i64 %40, 1, !dbg !8708
  %and164 = and i64 %sub163, 4294967296, !dbg !8708
  %tobool165 = icmp ne i64 %and164, 0, !dbg !8708
  br i1 %tobool165, label %cond.true166, label %cond.false167, !dbg !8708

cond.true166:                                     ; preds = %cond.false162
  br label %cond.end373, !dbg !8708

cond.false167:                                    ; preds = %cond.false162
  %41 = load i64, i64* %size.addr, align 8, !dbg !8708
  %sub168 = sub i64 %41, 1, !dbg !8708
  %and169 = and i64 %sub168, 2147483648, !dbg !8708
  %tobool170 = icmp ne i64 %and169, 0, !dbg !8708
  br i1 %tobool170, label %cond.true171, label %cond.false172, !dbg !8708

cond.true171:                                     ; preds = %cond.false167
  br label %cond.end371, !dbg !8708

cond.false172:                                    ; preds = %cond.false167
  %42 = load i64, i64* %size.addr, align 8, !dbg !8708
  %sub173 = sub i64 %42, 1, !dbg !8708
  %and174 = and i64 %sub173, 1073741824, !dbg !8708
  %tobool175 = icmp ne i64 %and174, 0, !dbg !8708
  br i1 %tobool175, label %cond.true176, label %cond.false177, !dbg !8708

cond.true176:                                     ; preds = %cond.false172
  br label %cond.end369, !dbg !8708

cond.false177:                                    ; preds = %cond.false172
  %43 = load i64, i64* %size.addr, align 8, !dbg !8708
  %sub178 = sub i64 %43, 1, !dbg !8708
  %and179 = and i64 %sub178, 536870912, !dbg !8708
  %tobool180 = icmp ne i64 %and179, 0, !dbg !8708
  br i1 %tobool180, label %cond.true181, label %cond.false182, !dbg !8708

cond.true181:                                     ; preds = %cond.false177
  br label %cond.end367, !dbg !8708

cond.false182:                                    ; preds = %cond.false177
  %44 = load i64, i64* %size.addr, align 8, !dbg !8708
  %sub183 = sub i64 %44, 1, !dbg !8708
  %and184 = and i64 %sub183, 268435456, !dbg !8708
  %tobool185 = icmp ne i64 %and184, 0, !dbg !8708
  br i1 %tobool185, label %cond.true186, label %cond.false187, !dbg !8708

cond.true186:                                     ; preds = %cond.false182
  br label %cond.end365, !dbg !8708

cond.false187:                                    ; preds = %cond.false182
  %45 = load i64, i64* %size.addr, align 8, !dbg !8708
  %sub188 = sub i64 %45, 1, !dbg !8708
  %and189 = and i64 %sub188, 134217728, !dbg !8708
  %tobool190 = icmp ne i64 %and189, 0, !dbg !8708
  br i1 %tobool190, label %cond.true191, label %cond.false192, !dbg !8708

cond.true191:                                     ; preds = %cond.false187
  br label %cond.end363, !dbg !8708

cond.false192:                                    ; preds = %cond.false187
  %46 = load i64, i64* %size.addr, align 8, !dbg !8708
  %sub193 = sub i64 %46, 1, !dbg !8708
  %and194 = and i64 %sub193, 67108864, !dbg !8708
  %tobool195 = icmp ne i64 %and194, 0, !dbg !8708
  br i1 %tobool195, label %cond.true196, label %cond.false197, !dbg !8708

cond.true196:                                     ; preds = %cond.false192
  br label %cond.end361, !dbg !8708

cond.false197:                                    ; preds = %cond.false192
  %47 = load i64, i64* %size.addr, align 8, !dbg !8708
  %sub198 = sub i64 %47, 1, !dbg !8708
  %and199 = and i64 %sub198, 33554432, !dbg !8708
  %tobool200 = icmp ne i64 %and199, 0, !dbg !8708
  br i1 %tobool200, label %cond.true201, label %cond.false202, !dbg !8708

cond.true201:                                     ; preds = %cond.false197
  br label %cond.end359, !dbg !8708

cond.false202:                                    ; preds = %cond.false197
  %48 = load i64, i64* %size.addr, align 8, !dbg !8708
  %sub203 = sub i64 %48, 1, !dbg !8708
  %and204 = and i64 %sub203, 16777216, !dbg !8708
  %tobool205 = icmp ne i64 %and204, 0, !dbg !8708
  br i1 %tobool205, label %cond.true206, label %cond.false207, !dbg !8708

cond.true206:                                     ; preds = %cond.false202
  br label %cond.end357, !dbg !8708

cond.false207:                                    ; preds = %cond.false202
  %49 = load i64, i64* %size.addr, align 8, !dbg !8708
  %sub208 = sub i64 %49, 1, !dbg !8708
  %and209 = and i64 %sub208, 8388608, !dbg !8708
  %tobool210 = icmp ne i64 %and209, 0, !dbg !8708
  br i1 %tobool210, label %cond.true211, label %cond.false212, !dbg !8708

cond.true211:                                     ; preds = %cond.false207
  br label %cond.end355, !dbg !8708

cond.false212:                                    ; preds = %cond.false207
  %50 = load i64, i64* %size.addr, align 8, !dbg !8708
  %sub213 = sub i64 %50, 1, !dbg !8708
  %and214 = and i64 %sub213, 4194304, !dbg !8708
  %tobool215 = icmp ne i64 %and214, 0, !dbg !8708
  br i1 %tobool215, label %cond.true216, label %cond.false217, !dbg !8708

cond.true216:                                     ; preds = %cond.false212
  br label %cond.end353, !dbg !8708

cond.false217:                                    ; preds = %cond.false212
  %51 = load i64, i64* %size.addr, align 8, !dbg !8708
  %sub218 = sub i64 %51, 1, !dbg !8708
  %and219 = and i64 %sub218, 2097152, !dbg !8708
  %tobool220 = icmp ne i64 %and219, 0, !dbg !8708
  br i1 %tobool220, label %cond.true221, label %cond.false222, !dbg !8708

cond.true221:                                     ; preds = %cond.false217
  br label %cond.end351, !dbg !8708

cond.false222:                                    ; preds = %cond.false217
  %52 = load i64, i64* %size.addr, align 8, !dbg !8708
  %sub223 = sub i64 %52, 1, !dbg !8708
  %and224 = and i64 %sub223, 1048576, !dbg !8708
  %tobool225 = icmp ne i64 %and224, 0, !dbg !8708
  br i1 %tobool225, label %cond.true226, label %cond.false227, !dbg !8708

cond.true226:                                     ; preds = %cond.false222
  br label %cond.end349, !dbg !8708

cond.false227:                                    ; preds = %cond.false222
  %53 = load i64, i64* %size.addr, align 8, !dbg !8708
  %sub228 = sub i64 %53, 1, !dbg !8708
  %and229 = and i64 %sub228, 524288, !dbg !8708
  %tobool230 = icmp ne i64 %and229, 0, !dbg !8708
  br i1 %tobool230, label %cond.true231, label %cond.false232, !dbg !8708

cond.true231:                                     ; preds = %cond.false227
  br label %cond.end347, !dbg !8708

cond.false232:                                    ; preds = %cond.false227
  %54 = load i64, i64* %size.addr, align 8, !dbg !8708
  %sub233 = sub i64 %54, 1, !dbg !8708
  %and234 = and i64 %sub233, 262144, !dbg !8708
  %tobool235 = icmp ne i64 %and234, 0, !dbg !8708
  br i1 %tobool235, label %cond.true236, label %cond.false237, !dbg !8708

cond.true236:                                     ; preds = %cond.false232
  br label %cond.end345, !dbg !8708

cond.false237:                                    ; preds = %cond.false232
  %55 = load i64, i64* %size.addr, align 8, !dbg !8708
  %sub238 = sub i64 %55, 1, !dbg !8708
  %and239 = and i64 %sub238, 131072, !dbg !8708
  %tobool240 = icmp ne i64 %and239, 0, !dbg !8708
  br i1 %tobool240, label %cond.true241, label %cond.false242, !dbg !8708

cond.true241:                                     ; preds = %cond.false237
  br label %cond.end343, !dbg !8708

cond.false242:                                    ; preds = %cond.false237
  %56 = load i64, i64* %size.addr, align 8, !dbg !8708
  %sub243 = sub i64 %56, 1, !dbg !8708
  %and244 = and i64 %sub243, 65536, !dbg !8708
  %tobool245 = icmp ne i64 %and244, 0, !dbg !8708
  br i1 %tobool245, label %cond.true246, label %cond.false247, !dbg !8708

cond.true246:                                     ; preds = %cond.false242
  br label %cond.end341, !dbg !8708

cond.false247:                                    ; preds = %cond.false242
  %57 = load i64, i64* %size.addr, align 8, !dbg !8708
  %sub248 = sub i64 %57, 1, !dbg !8708
  %and249 = and i64 %sub248, 32768, !dbg !8708
  %tobool250 = icmp ne i64 %and249, 0, !dbg !8708
  br i1 %tobool250, label %cond.true251, label %cond.false252, !dbg !8708

cond.true251:                                     ; preds = %cond.false247
  br label %cond.end339, !dbg !8708

cond.false252:                                    ; preds = %cond.false247
  %58 = load i64, i64* %size.addr, align 8, !dbg !8708
  %sub253 = sub i64 %58, 1, !dbg !8708
  %and254 = and i64 %sub253, 16384, !dbg !8708
  %tobool255 = icmp ne i64 %and254, 0, !dbg !8708
  br i1 %tobool255, label %cond.true256, label %cond.false257, !dbg !8708

cond.true256:                                     ; preds = %cond.false252
  br label %cond.end337, !dbg !8708

cond.false257:                                    ; preds = %cond.false252
  %59 = load i64, i64* %size.addr, align 8, !dbg !8708
  %sub258 = sub i64 %59, 1, !dbg !8708
  %and259 = and i64 %sub258, 8192, !dbg !8708
  %tobool260 = icmp ne i64 %and259, 0, !dbg !8708
  br i1 %tobool260, label %cond.true261, label %cond.false262, !dbg !8708

cond.true261:                                     ; preds = %cond.false257
  br label %cond.end335, !dbg !8708

cond.false262:                                    ; preds = %cond.false257
  %60 = load i64, i64* %size.addr, align 8, !dbg !8708
  %sub263 = sub i64 %60, 1, !dbg !8708
  %and264 = and i64 %sub263, 4096, !dbg !8708
  %tobool265 = icmp ne i64 %and264, 0, !dbg !8708
  br i1 %tobool265, label %cond.true266, label %cond.false267, !dbg !8708

cond.true266:                                     ; preds = %cond.false262
  br label %cond.end333, !dbg !8708

cond.false267:                                    ; preds = %cond.false262
  %61 = load i64, i64* %size.addr, align 8, !dbg !8708
  %sub268 = sub i64 %61, 1, !dbg !8708
  %and269 = and i64 %sub268, 2048, !dbg !8708
  %tobool270 = icmp ne i64 %and269, 0, !dbg !8708
  br i1 %tobool270, label %cond.true271, label %cond.false272, !dbg !8708

cond.true271:                                     ; preds = %cond.false267
  br label %cond.end331, !dbg !8708

cond.false272:                                    ; preds = %cond.false267
  %62 = load i64, i64* %size.addr, align 8, !dbg !8708
  %sub273 = sub i64 %62, 1, !dbg !8708
  %and274 = and i64 %sub273, 1024, !dbg !8708
  %tobool275 = icmp ne i64 %and274, 0, !dbg !8708
  br i1 %tobool275, label %cond.true276, label %cond.false277, !dbg !8708

cond.true276:                                     ; preds = %cond.false272
  br label %cond.end329, !dbg !8708

cond.false277:                                    ; preds = %cond.false272
  %63 = load i64, i64* %size.addr, align 8, !dbg !8708
  %sub278 = sub i64 %63, 1, !dbg !8708
  %and279 = and i64 %sub278, 512, !dbg !8708
  %tobool280 = icmp ne i64 %and279, 0, !dbg !8708
  br i1 %tobool280, label %cond.true281, label %cond.false282, !dbg !8708

cond.true281:                                     ; preds = %cond.false277
  br label %cond.end327, !dbg !8708

cond.false282:                                    ; preds = %cond.false277
  %64 = load i64, i64* %size.addr, align 8, !dbg !8708
  %sub283 = sub i64 %64, 1, !dbg !8708
  %and284 = and i64 %sub283, 256, !dbg !8708
  %tobool285 = icmp ne i64 %and284, 0, !dbg !8708
  br i1 %tobool285, label %cond.true286, label %cond.false287, !dbg !8708

cond.true286:                                     ; preds = %cond.false282
  br label %cond.end325, !dbg !8708

cond.false287:                                    ; preds = %cond.false282
  %65 = load i64, i64* %size.addr, align 8, !dbg !8708
  %sub288 = sub i64 %65, 1, !dbg !8708
  %and289 = and i64 %sub288, 128, !dbg !8708
  %tobool290 = icmp ne i64 %and289, 0, !dbg !8708
  br i1 %tobool290, label %cond.true291, label %cond.false292, !dbg !8708

cond.true291:                                     ; preds = %cond.false287
  br label %cond.end323, !dbg !8708

cond.false292:                                    ; preds = %cond.false287
  %66 = load i64, i64* %size.addr, align 8, !dbg !8708
  %sub293 = sub i64 %66, 1, !dbg !8708
  %and294 = and i64 %sub293, 64, !dbg !8708
  %tobool295 = icmp ne i64 %and294, 0, !dbg !8708
  br i1 %tobool295, label %cond.true296, label %cond.false297, !dbg !8708

cond.true296:                                     ; preds = %cond.false292
  br label %cond.end321, !dbg !8708

cond.false297:                                    ; preds = %cond.false292
  %67 = load i64, i64* %size.addr, align 8, !dbg !8708
  %sub298 = sub i64 %67, 1, !dbg !8708
  %and299 = and i64 %sub298, 32, !dbg !8708
  %tobool300 = icmp ne i64 %and299, 0, !dbg !8708
  br i1 %tobool300, label %cond.true301, label %cond.false302, !dbg !8708

cond.true301:                                     ; preds = %cond.false297
  br label %cond.end319, !dbg !8708

cond.false302:                                    ; preds = %cond.false297
  %68 = load i64, i64* %size.addr, align 8, !dbg !8708
  %sub303 = sub i64 %68, 1, !dbg !8708
  %and304 = and i64 %sub303, 16, !dbg !8708
  %tobool305 = icmp ne i64 %and304, 0, !dbg !8708
  br i1 %tobool305, label %cond.true306, label %cond.false307, !dbg !8708

cond.true306:                                     ; preds = %cond.false302
  br label %cond.end317, !dbg !8708

cond.false307:                                    ; preds = %cond.false302
  %69 = load i64, i64* %size.addr, align 8, !dbg !8708
  %sub308 = sub i64 %69, 1, !dbg !8708
  %and309 = and i64 %sub308, 8, !dbg !8708
  %tobool310 = icmp ne i64 %and309, 0, !dbg !8708
  br i1 %tobool310, label %cond.true311, label %cond.false312, !dbg !8708

cond.true311:                                     ; preds = %cond.false307
  br label %cond.end, !dbg !8708

cond.false312:                                    ; preds = %cond.false307
  %70 = load i64, i64* %size.addr, align 8, !dbg !8708
  %sub313 = sub i64 %70, 1, !dbg !8708
  %and314 = and i64 %sub313, 4, !dbg !8708
  %tobool315 = icmp ne i64 %and314, 0, !dbg !8708
  %71 = zext i1 %tobool315 to i64, !dbg !8708
  %cond = select i1 %tobool315, i32 2, i32 1, !dbg !8708
  br label %cond.end, !dbg !8708

cond.end:                                         ; preds = %cond.false312, %cond.true311
  %cond316 = phi i32 [ 3, %cond.true311 ], [ %cond, %cond.false312 ], !dbg !8708
  br label %cond.end317, !dbg !8708

cond.end317:                                      ; preds = %cond.end, %cond.true306
  %cond318 = phi i32 [ 4, %cond.true306 ], [ %cond316, %cond.end ], !dbg !8708
  br label %cond.end319, !dbg !8708

cond.end319:                                      ; preds = %cond.end317, %cond.true301
  %cond320 = phi i32 [ 5, %cond.true301 ], [ %cond318, %cond.end317 ], !dbg !8708
  br label %cond.end321, !dbg !8708

cond.end321:                                      ; preds = %cond.end319, %cond.true296
  %cond322 = phi i32 [ 6, %cond.true296 ], [ %cond320, %cond.end319 ], !dbg !8708
  br label %cond.end323, !dbg !8708

cond.end323:                                      ; preds = %cond.end321, %cond.true291
  %cond324 = phi i32 [ 7, %cond.true291 ], [ %cond322, %cond.end321 ], !dbg !8708
  br label %cond.end325, !dbg !8708

cond.end325:                                      ; preds = %cond.end323, %cond.true286
  %cond326 = phi i32 [ 8, %cond.true286 ], [ %cond324, %cond.end323 ], !dbg !8708
  br label %cond.end327, !dbg !8708

cond.end327:                                      ; preds = %cond.end325, %cond.true281
  %cond328 = phi i32 [ 9, %cond.true281 ], [ %cond326, %cond.end325 ], !dbg !8708
  br label %cond.end329, !dbg !8708

cond.end329:                                      ; preds = %cond.end327, %cond.true276
  %cond330 = phi i32 [ 10, %cond.true276 ], [ %cond328, %cond.end327 ], !dbg !8708
  br label %cond.end331, !dbg !8708

cond.end331:                                      ; preds = %cond.end329, %cond.true271
  %cond332 = phi i32 [ 11, %cond.true271 ], [ %cond330, %cond.end329 ], !dbg !8708
  br label %cond.end333, !dbg !8708

cond.end333:                                      ; preds = %cond.end331, %cond.true266
  %cond334 = phi i32 [ 12, %cond.true266 ], [ %cond332, %cond.end331 ], !dbg !8708
  br label %cond.end335, !dbg !8708

cond.end335:                                      ; preds = %cond.end333, %cond.true261
  %cond336 = phi i32 [ 13, %cond.true261 ], [ %cond334, %cond.end333 ], !dbg !8708
  br label %cond.end337, !dbg !8708

cond.end337:                                      ; preds = %cond.end335, %cond.true256
  %cond338 = phi i32 [ 14, %cond.true256 ], [ %cond336, %cond.end335 ], !dbg !8708
  br label %cond.end339, !dbg !8708

cond.end339:                                      ; preds = %cond.end337, %cond.true251
  %cond340 = phi i32 [ 15, %cond.true251 ], [ %cond338, %cond.end337 ], !dbg !8708
  br label %cond.end341, !dbg !8708

cond.end341:                                      ; preds = %cond.end339, %cond.true246
  %cond342 = phi i32 [ 16, %cond.true246 ], [ %cond340, %cond.end339 ], !dbg !8708
  br label %cond.end343, !dbg !8708

cond.end343:                                      ; preds = %cond.end341, %cond.true241
  %cond344 = phi i32 [ 17, %cond.true241 ], [ %cond342, %cond.end341 ], !dbg !8708
  br label %cond.end345, !dbg !8708

cond.end345:                                      ; preds = %cond.end343, %cond.true236
  %cond346 = phi i32 [ 18, %cond.true236 ], [ %cond344, %cond.end343 ], !dbg !8708
  br label %cond.end347, !dbg !8708

cond.end347:                                      ; preds = %cond.end345, %cond.true231
  %cond348 = phi i32 [ 19, %cond.true231 ], [ %cond346, %cond.end345 ], !dbg !8708
  br label %cond.end349, !dbg !8708

cond.end349:                                      ; preds = %cond.end347, %cond.true226
  %cond350 = phi i32 [ 20, %cond.true226 ], [ %cond348, %cond.end347 ], !dbg !8708
  br label %cond.end351, !dbg !8708

cond.end351:                                      ; preds = %cond.end349, %cond.true221
  %cond352 = phi i32 [ 21, %cond.true221 ], [ %cond350, %cond.end349 ], !dbg !8708
  br label %cond.end353, !dbg !8708

cond.end353:                                      ; preds = %cond.end351, %cond.true216
  %cond354 = phi i32 [ 22, %cond.true216 ], [ %cond352, %cond.end351 ], !dbg !8708
  br label %cond.end355, !dbg !8708

cond.end355:                                      ; preds = %cond.end353, %cond.true211
  %cond356 = phi i32 [ 23, %cond.true211 ], [ %cond354, %cond.end353 ], !dbg !8708
  br label %cond.end357, !dbg !8708

cond.end357:                                      ; preds = %cond.end355, %cond.true206
  %cond358 = phi i32 [ 24, %cond.true206 ], [ %cond356, %cond.end355 ], !dbg !8708
  br label %cond.end359, !dbg !8708

cond.end359:                                      ; preds = %cond.end357, %cond.true201
  %cond360 = phi i32 [ 25, %cond.true201 ], [ %cond358, %cond.end357 ], !dbg !8708
  br label %cond.end361, !dbg !8708

cond.end361:                                      ; preds = %cond.end359, %cond.true196
  %cond362 = phi i32 [ 26, %cond.true196 ], [ %cond360, %cond.end359 ], !dbg !8708
  br label %cond.end363, !dbg !8708

cond.end363:                                      ; preds = %cond.end361, %cond.true191
  %cond364 = phi i32 [ 27, %cond.true191 ], [ %cond362, %cond.end361 ], !dbg !8708
  br label %cond.end365, !dbg !8708

cond.end365:                                      ; preds = %cond.end363, %cond.true186
  %cond366 = phi i32 [ 28, %cond.true186 ], [ %cond364, %cond.end363 ], !dbg !8708
  br label %cond.end367, !dbg !8708

cond.end367:                                      ; preds = %cond.end365, %cond.true181
  %cond368 = phi i32 [ 29, %cond.true181 ], [ %cond366, %cond.end365 ], !dbg !8708
  br label %cond.end369, !dbg !8708

cond.end369:                                      ; preds = %cond.end367, %cond.true176
  %cond370 = phi i32 [ 30, %cond.true176 ], [ %cond368, %cond.end367 ], !dbg !8708
  br label %cond.end371, !dbg !8708

cond.end371:                                      ; preds = %cond.end369, %cond.true171
  %cond372 = phi i32 [ 31, %cond.true171 ], [ %cond370, %cond.end369 ], !dbg !8708
  br label %cond.end373, !dbg !8708

cond.end373:                                      ; preds = %cond.end371, %cond.true166
  %cond374 = phi i32 [ 32, %cond.true166 ], [ %cond372, %cond.end371 ], !dbg !8708
  br label %cond.end375, !dbg !8708

cond.end375:                                      ; preds = %cond.end373, %cond.true161
  %cond376 = phi i32 [ 33, %cond.true161 ], [ %cond374, %cond.end373 ], !dbg !8708
  br label %cond.end377, !dbg !8708

cond.end377:                                      ; preds = %cond.end375, %cond.true156
  %cond378 = phi i32 [ 34, %cond.true156 ], [ %cond376, %cond.end375 ], !dbg !8708
  br label %cond.end379, !dbg !8708

cond.end379:                                      ; preds = %cond.end377, %cond.true151
  %cond380 = phi i32 [ 35, %cond.true151 ], [ %cond378, %cond.end377 ], !dbg !8708
  br label %cond.end381, !dbg !8708

cond.end381:                                      ; preds = %cond.end379, %cond.true146
  %cond382 = phi i32 [ 36, %cond.true146 ], [ %cond380, %cond.end379 ], !dbg !8708
  br label %cond.end383, !dbg !8708

cond.end383:                                      ; preds = %cond.end381, %cond.true141
  %cond384 = phi i32 [ 37, %cond.true141 ], [ %cond382, %cond.end381 ], !dbg !8708
  br label %cond.end385, !dbg !8708

cond.end385:                                      ; preds = %cond.end383, %cond.true136
  %cond386 = phi i32 [ 38, %cond.true136 ], [ %cond384, %cond.end383 ], !dbg !8708
  br label %cond.end387, !dbg !8708

cond.end387:                                      ; preds = %cond.end385, %cond.true131
  %cond388 = phi i32 [ 39, %cond.true131 ], [ %cond386, %cond.end385 ], !dbg !8708
  br label %cond.end389, !dbg !8708

cond.end389:                                      ; preds = %cond.end387, %cond.true126
  %cond390 = phi i32 [ 40, %cond.true126 ], [ %cond388, %cond.end387 ], !dbg !8708
  br label %cond.end391, !dbg !8708

cond.end391:                                      ; preds = %cond.end389, %cond.true121
  %cond392 = phi i32 [ 41, %cond.true121 ], [ %cond390, %cond.end389 ], !dbg !8708
  br label %cond.end393, !dbg !8708

cond.end393:                                      ; preds = %cond.end391, %cond.true116
  %cond394 = phi i32 [ 42, %cond.true116 ], [ %cond392, %cond.end391 ], !dbg !8708
  br label %cond.end395, !dbg !8708

cond.end395:                                      ; preds = %cond.end393, %cond.true111
  %cond396 = phi i32 [ 43, %cond.true111 ], [ %cond394, %cond.end393 ], !dbg !8708
  br label %cond.end397, !dbg !8708

cond.end397:                                      ; preds = %cond.end395, %cond.true106
  %cond398 = phi i32 [ 44, %cond.true106 ], [ %cond396, %cond.end395 ], !dbg !8708
  br label %cond.end399, !dbg !8708

cond.end399:                                      ; preds = %cond.end397, %cond.true101
  %cond400 = phi i32 [ 45, %cond.true101 ], [ %cond398, %cond.end397 ], !dbg !8708
  br label %cond.end401, !dbg !8708

cond.end401:                                      ; preds = %cond.end399, %cond.true96
  %cond402 = phi i32 [ 46, %cond.true96 ], [ %cond400, %cond.end399 ], !dbg !8708
  br label %cond.end403, !dbg !8708

cond.end403:                                      ; preds = %cond.end401, %cond.true91
  %cond404 = phi i32 [ 47, %cond.true91 ], [ %cond402, %cond.end401 ], !dbg !8708
  br label %cond.end405, !dbg !8708

cond.end405:                                      ; preds = %cond.end403, %cond.true86
  %cond406 = phi i32 [ 48, %cond.true86 ], [ %cond404, %cond.end403 ], !dbg !8708
  br label %cond.end407, !dbg !8708

cond.end407:                                      ; preds = %cond.end405, %cond.true81
  %cond408 = phi i32 [ 49, %cond.true81 ], [ %cond406, %cond.end405 ], !dbg !8708
  br label %cond.end409, !dbg !8708

cond.end409:                                      ; preds = %cond.end407, %cond.true76
  %cond410 = phi i32 [ 50, %cond.true76 ], [ %cond408, %cond.end407 ], !dbg !8708
  br label %cond.end411, !dbg !8708

cond.end411:                                      ; preds = %cond.end409, %cond.true71
  %cond412 = phi i32 [ 51, %cond.true71 ], [ %cond410, %cond.end409 ], !dbg !8708
  br label %cond.end413, !dbg !8708

cond.end413:                                      ; preds = %cond.end411, %cond.true66
  %cond414 = phi i32 [ 52, %cond.true66 ], [ %cond412, %cond.end411 ], !dbg !8708
  br label %cond.end415, !dbg !8708

cond.end415:                                      ; preds = %cond.end413, %cond.true61
  %cond416 = phi i32 [ 53, %cond.true61 ], [ %cond414, %cond.end413 ], !dbg !8708
  br label %cond.end417, !dbg !8708

cond.end417:                                      ; preds = %cond.end415, %cond.true56
  %cond418 = phi i32 [ 54, %cond.true56 ], [ %cond416, %cond.end415 ], !dbg !8708
  br label %cond.end419, !dbg !8708

cond.end419:                                      ; preds = %cond.end417, %cond.true51
  %cond420 = phi i32 [ 55, %cond.true51 ], [ %cond418, %cond.end417 ], !dbg !8708
  br label %cond.end421, !dbg !8708

cond.end421:                                      ; preds = %cond.end419, %cond.true46
  %cond422 = phi i32 [ 56, %cond.true46 ], [ %cond420, %cond.end419 ], !dbg !8708
  br label %cond.end423, !dbg !8708

cond.end423:                                      ; preds = %cond.end421, %cond.true41
  %cond424 = phi i32 [ 57, %cond.true41 ], [ %cond422, %cond.end421 ], !dbg !8708
  br label %cond.end425, !dbg !8708

cond.end425:                                      ; preds = %cond.end423, %cond.true36
  %cond426 = phi i32 [ 58, %cond.true36 ], [ %cond424, %cond.end423 ], !dbg !8708
  br label %cond.end427, !dbg !8708

cond.end427:                                      ; preds = %cond.end425, %cond.true31
  %cond428 = phi i32 [ 59, %cond.true31 ], [ %cond426, %cond.end425 ], !dbg !8708
  br label %cond.end429, !dbg !8708

cond.end429:                                      ; preds = %cond.end427, %cond.true26
  %cond430 = phi i32 [ 60, %cond.true26 ], [ %cond428, %cond.end427 ], !dbg !8708
  br label %cond.end431, !dbg !8708

cond.end431:                                      ; preds = %cond.end429, %cond.true21
  %cond432 = phi i32 [ 61, %cond.true21 ], [ %cond430, %cond.end429 ], !dbg !8708
  br label %cond.end433, !dbg !8708

cond.end433:                                      ; preds = %cond.end431, %cond.true16
  %cond434 = phi i32 [ 62, %cond.true16 ], [ %cond432, %cond.end431 ], !dbg !8708
  br label %cond.end435, !dbg !8708

cond.end435:                                      ; preds = %cond.end433, %cond.true11
  %cond436 = phi i32 [ 63, %cond.true11 ], [ %cond434, %cond.end433 ], !dbg !8708
  br label %cond.end437, !dbg !8708

cond.end437:                                      ; preds = %cond.end435, %cond.true8
  %cond438 = phi i32 [ 0, %cond.true8 ], [ %cond436, %cond.end435 ], !dbg !8708
  br label %cond.end440, !dbg !8708

cond.false439:                                    ; preds = %cond.true
  br label %cond.end440, !dbg !8708

cond.end440:                                      ; preds = %cond.false439, %cond.end437
  %cond441 = phi i32 [ %cond438, %cond.end437 ], [ -1, %cond.false439 ], !dbg !8708
  br label %cond.end444, !dbg !8708

cond.false442:                                    ; preds = %if.end3
  %72 = load i64, i64* %size.addr, align 8, !dbg !8708
  %sub443 = sub i64 %72, 1, !dbg !8708
  %call = call i32 @__ilog2_u64(i64 %sub443) #14, !dbg !8708
  br label %cond.end444, !dbg !8708

cond.end444:                                      ; preds = %cond.false442, %cond.end440
  %cond445 = phi i32 [ %cond441, %cond.end440 ], [ %call, %cond.false442 ], !dbg !8708
  %sub446 = sub i32 %cond445, 12, !dbg !8709
  %add = add i32 %sub446, 1, !dbg !8710
  store i32 %add, i32* %retval, align 4, !dbg !8711
  br label %return, !dbg !8711

if.end447:                                        ; preds = %entry
  %73 = load i64, i64* %size.addr, align 8, !dbg !8712
  %dec = add i64 %73, -1, !dbg !8712
  store i64 %dec, i64* %size.addr, align 8, !dbg !8712
  %74 = load i64, i64* %size.addr, align 8, !dbg !8713
  %shr = lshr i64 %74, 12, !dbg !8713
  store i64 %shr, i64* %size.addr, align 8, !dbg !8713
  %75 = load i64, i64* %size.addr, align 8, !dbg !8714
  store i64 %75, i64* %x.addr.i, align 8
  store i32 -1, i32* %bitpos.i, align 4, !dbg !8691
  %76 = load i32, i32* %bitpos.i, align 4, !dbg !8715
  %77 = load i64, i64* %x.addr.i, align 8, !dbg !8716
  %78 = call i32 asm "bsrq $1,${0:q}", "=r,rm,0,~{dirflag},~{fpsr},~{flags}"(i64 %77, i32 %76) #6, !dbg !8715, !srcloc !8717
  store i32 %78, i32* %bitpos.i, align 4, !dbg !8715
  %79 = load i32, i32* %bitpos.i, align 4, !dbg !8718
  %add.i = add i32 %79, 1, !dbg !8719
  store i32 %add.i, i32* %retval, align 4, !dbg !8720
  br label %return, !dbg !8720

return:                                           ; preds = %if.end447, %cond.end444, %if.then2, %if.then1
  %80 = load i32, i32* %retval, align 4, !dbg !8721
  ret i32 %80, !dbg !8721
}

; Function Attrs: noinline noredzone nounwind optnone readnone sspstrong
define internal i32 @__ilog2_u64(i64 %n) #10 !dbg !8722 {
entry:
  %x.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %x.addr.i, metadata !8684, metadata !DIExpression()), !dbg !8726
  %bitpos.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %bitpos.i, metadata !8690, metadata !DIExpression()), !dbg !8728
  %n.addr = alloca i64, align 8
  store i64 %n, i64* %n.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %n.addr, metadata !8729, metadata !DIExpression()), !dbg !8730
  %0 = load i64, i64* %n.addr, align 8, !dbg !8731
  store i64 %0, i64* %x.addr.i, align 8
  store i32 -1, i32* %bitpos.i, align 4, !dbg !8728
  %1 = load i32, i32* %bitpos.i, align 4, !dbg !8732
  %2 = load i64, i64* %x.addr.i, align 8, !dbg !8733
  %3 = call i32 asm "bsrq $1,${0:q}", "=r,rm,0,~{dirflag},~{fpsr},~{flags}"(i64 %2, i32 %1) #6, !dbg !8732, !srcloc !8717
  store i32 %3, i32* %bitpos.i, align 4, !dbg !8732
  %4 = load i32, i32* %bitpos.i, align 4, !dbg !8734
  %add.i = add i32 %4, 1, !dbg !8735
  %sub = sub i32 %add.i, 1, !dbg !8736
  ret i32 %sub, !dbg !8737
}

; Function Attrs: noredzone
declare dso_local noalias i8* @kmalloc_order(i64, i32, i32) #2

; Function Attrs: noredzone
declare dso_local noalias i8* @kmem_cache_alloc(%struct.kmem_cache*, i32) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @kasan_kmalloc(%struct.kmem_cache* %s, i8* %object, i64 %size, i32 %flags) #0 !dbg !8738 {
entry:
  %s.addr = alloca %struct.kmem_cache*, align 8
  %object.addr = alloca i8*, align 8
  %size.addr = alloca i64, align 8
  %flags.addr = alloca i32, align 4
  store %struct.kmem_cache* %s, %struct.kmem_cache** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.kmem_cache** %s.addr, metadata !8742, metadata !DIExpression()), !dbg !8743
  store i8* %object, i8** %object.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %object.addr, metadata !8744, metadata !DIExpression()), !dbg !8745
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !8746, metadata !DIExpression()), !dbg !8747
  store i32 %flags, i32* %flags.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr, metadata !8748, metadata !DIExpression()), !dbg !8749
  %0 = load i8*, i8** %object.addr, align 8, !dbg !8750
  ret i8* %0, !dbg !8751
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @refcount_set(%struct.refcount_struct* %r, i32 %n) #0 !dbg !8752 {
entry:
  %v.addr.i1.i = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i1.i, metadata !8756, metadata !DIExpression()), !dbg !8762
  %i.addr.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %i.addr.i.i, metadata !8767, metadata !DIExpression()), !dbg !8768
  %v.addr.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %v.addr.i.i, metadata !7892, metadata !DIExpression()), !dbg !8769
  %size.addr.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i, metadata !7896, metadata !DIExpression()), !dbg !8771
  %v.addr.i = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i, metadata !8772, metadata !DIExpression()), !dbg !8773
  %i.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %i.addr.i, metadata !8774, metadata !DIExpression()), !dbg !8775
  %r.addr = alloca %struct.refcount_struct*, align 8
  %n.addr = alloca i32, align 4
  store %struct.refcount_struct* %r, %struct.refcount_struct** %r.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.refcount_struct** %r.addr, metadata !8776, metadata !DIExpression()), !dbg !8777
  store i32 %n, i32* %n.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !8778, metadata !DIExpression()), !dbg !8779
  %0 = load %struct.refcount_struct*, %struct.refcount_struct** %r.addr, align 8, !dbg !8780
  %refs = getelementptr inbounds %struct.refcount_struct, %struct.refcount_struct* %0, i32 0, i32 0, !dbg !8781
  %1 = load i32, i32* %n.addr, align 4, !dbg !8782
  store %struct.atomic_t* %refs, %struct.atomic_t** %v.addr.i, align 8
  store i32 %1, i32* %i.addr.i, align 4
  %2 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i, align 8, !dbg !8783
  %3 = bitcast %struct.atomic_t* %2 to i8*, !dbg !8783
  store i8* %3, i8** %v.addr.i.i, align 8
  store i64 4, i64* %size.addr.i.i, align 8
  %4 = load i8*, i8** %v.addr.i.i, align 8, !dbg !8784
  %5 = load i64, i64* %size.addr.i.i, align 8, !dbg !8785
  %conv.i.i = trunc i64 %5 to i32, !dbg !8785
  %call.i.i = call zeroext i1 @kasan_check_write(i8* %4, i32 %conv.i.i) #12, !dbg !8786
  %6 = load i8*, i8** %v.addr.i.i, align 8, !dbg !8787
  %7 = load i64, i64* %size.addr.i.i, align 8, !dbg !8787
  call void @kcsan_check_access(i8* %6, i64 %7, i32 5) #12, !dbg !8787
  %8 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i, align 8, !dbg !8788
  %9 = load i32, i32* %i.addr.i, align 4, !dbg !8789
  store %struct.atomic_t* %8, %struct.atomic_t** %v.addr.i1.i, align 8
  store i32 %9, i32* %i.addr.i.i, align 4
  %10 = load i32, i32* %i.addr.i.i, align 4, !dbg !8790
  %11 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i1.i, align 8, !dbg !8790
  %counter.i.i = getelementptr inbounds %struct.atomic_t, %struct.atomic_t* %11, i32 0, i32 0, !dbg !8790
  store volatile i32 %10, i32* %counter.i.i, align 4, !dbg !8790
  ret void, !dbg !8792
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @__list_add(%struct.list_head* %new, %struct.list_head* %prev, %struct.list_head* %next) #0 !dbg !8793 {
entry:
  %new.addr = alloca %struct.list_head*, align 8
  %prev.addr = alloca %struct.list_head*, align 8
  %next.addr = alloca %struct.list_head*, align 8
  store %struct.list_head* %new, %struct.list_head** %new.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %new.addr, metadata !8796, metadata !DIExpression()), !dbg !8797
  store %struct.list_head* %prev, %struct.list_head** %prev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %prev.addr, metadata !8798, metadata !DIExpression()), !dbg !8799
  store %struct.list_head* %next, %struct.list_head** %next.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %next.addr, metadata !8800, metadata !DIExpression()), !dbg !8801
  %0 = load %struct.list_head*, %struct.list_head** %new.addr, align 8, !dbg !8802
  %1 = load %struct.list_head*, %struct.list_head** %prev.addr, align 8, !dbg !8804
  %2 = load %struct.list_head*, %struct.list_head** %next.addr, align 8, !dbg !8805
  %call = call zeroext i1 @__list_add_valid(%struct.list_head* %0, %struct.list_head* %1, %struct.list_head* %2) #11, !dbg !8806
  br i1 %call, label %if.end, label %if.then, !dbg !8807

if.then:                                          ; preds = %entry
  br label %do.end8, !dbg !8808

if.end:                                           ; preds = %entry
  %3 = load %struct.list_head*, %struct.list_head** %new.addr, align 8, !dbg !8809
  %4 = load %struct.list_head*, %struct.list_head** %next.addr, align 8, !dbg !8810
  %prev1 = getelementptr inbounds %struct.list_head, %struct.list_head* %4, i32 0, i32 1, !dbg !8811
  store %struct.list_head* %3, %struct.list_head** %prev1, align 8, !dbg !8812
  %5 = load %struct.list_head*, %struct.list_head** %next.addr, align 8, !dbg !8813
  %6 = load %struct.list_head*, %struct.list_head** %new.addr, align 8, !dbg !8814
  %next2 = getelementptr inbounds %struct.list_head, %struct.list_head* %6, i32 0, i32 0, !dbg !8815
  store %struct.list_head* %5, %struct.list_head** %next2, align 8, !dbg !8816
  %7 = load %struct.list_head*, %struct.list_head** %prev.addr, align 8, !dbg !8817
  %8 = load %struct.list_head*, %struct.list_head** %new.addr, align 8, !dbg !8818
  %prev3 = getelementptr inbounds %struct.list_head, %struct.list_head* %8, i32 0, i32 1, !dbg !8819
  store %struct.list_head* %7, %struct.list_head** %prev3, align 8, !dbg !8820
  br label %do.body, !dbg !8821

do.body:                                          ; preds = %if.end
  br label %do.body4, !dbg !8822

do.body4:                                         ; preds = %do.body
  br label %do.end, !dbg !8824

do.end:                                           ; preds = %do.body4
  br label %do.body5, !dbg !8822

do.body5:                                         ; preds = %do.end
  %9 = load %struct.list_head*, %struct.list_head** %new.addr, align 8, !dbg !8826
  %10 = load %struct.list_head*, %struct.list_head** %prev.addr, align 8, !dbg !8826
  %next6 = getelementptr inbounds %struct.list_head, %struct.list_head* %10, i32 0, i32 0, !dbg !8826
  store volatile %struct.list_head* %9, %struct.list_head** %next6, align 8, !dbg !8826
  br label %do.end7, !dbg !8826

do.end7:                                          ; preds = %do.body5
  br label %do.end8, !dbg !8822

do.end8:                                          ; preds = %if.then, %do.end7
  ret void, !dbg !8828
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @__list_add_valid(%struct.list_head* %new, %struct.list_head* %prev, %struct.list_head* %next) #0 !dbg !8829 {
entry:
  %new.addr = alloca %struct.list_head*, align 8
  %prev.addr = alloca %struct.list_head*, align 8
  %next.addr = alloca %struct.list_head*, align 8
  store %struct.list_head* %new, %struct.list_head** %new.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %new.addr, metadata !8832, metadata !DIExpression()), !dbg !8833
  store %struct.list_head* %prev, %struct.list_head** %prev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %prev.addr, metadata !8834, metadata !DIExpression()), !dbg !8835
  store %struct.list_head* %next, %struct.list_head** %next.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %next.addr, metadata !8836, metadata !DIExpression()), !dbg !8837
  ret i1 true, !dbg !8838
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @list_del_init(%struct.list_head* %entry1) #0 !dbg !8839 {
entry:
  %entry.addr = alloca %struct.list_head*, align 8
  store %struct.list_head* %entry1, %struct.list_head** %entry.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %entry.addr, metadata !8842, metadata !DIExpression()), !dbg !8843
  %0 = load %struct.list_head*, %struct.list_head** %entry.addr, align 8, !dbg !8844
  call void @__list_del_entry(%struct.list_head* %0) #11, !dbg !8845
  %1 = load %struct.list_head*, %struct.list_head** %entry.addr, align 8, !dbg !8846
  call void @INIT_LIST_HEAD(%struct.list_head* %1) #11, !dbg !8847
  ret void, !dbg !8848
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @acpi_ec_put_query_handler(%struct.acpi_ec_query_handler* %handler) #0 !dbg !8849 {
entry:
  %handler.addr = alloca %struct.acpi_ec_query_handler*, align 8
  store %struct.acpi_ec_query_handler* %handler, %struct.acpi_ec_query_handler** %handler.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.acpi_ec_query_handler** %handler.addr, metadata !8852, metadata !DIExpression()), !dbg !8853
  %0 = load %struct.acpi_ec_query_handler*, %struct.acpi_ec_query_handler** %handler.addr, align 8, !dbg !8854
  %kref = getelementptr inbounds %struct.acpi_ec_query_handler, %struct.acpi_ec_query_handler* %0, i32 0, i32 5, !dbg !8855
  %call = call i32 @kref_put(%struct.kref* %kref, void (%struct.kref*)* @acpi_ec_query_handler_release) #11, !dbg !8856
  ret void, !dbg !8857
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @__list_del_entry(%struct.list_head* %entry1) #0 !dbg !8858 {
entry:
  %entry.addr = alloca %struct.list_head*, align 8
  store %struct.list_head* %entry1, %struct.list_head** %entry.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %entry.addr, metadata !8859, metadata !DIExpression()), !dbg !8860
  %0 = load %struct.list_head*, %struct.list_head** %entry.addr, align 8, !dbg !8861
  %call = call zeroext i1 @__list_del_entry_valid(%struct.list_head* %0) #11, !dbg !8863
  br i1 %call, label %if.end, label %if.then, !dbg !8864

if.then:                                          ; preds = %entry
  br label %return, !dbg !8865

if.end:                                           ; preds = %entry
  %1 = load %struct.list_head*, %struct.list_head** %entry.addr, align 8, !dbg !8866
  %prev = getelementptr inbounds %struct.list_head, %struct.list_head* %1, i32 0, i32 1, !dbg !8867
  %2 = load %struct.list_head*, %struct.list_head** %prev, align 8, !dbg !8867
  %3 = load %struct.list_head*, %struct.list_head** %entry.addr, align 8, !dbg !8868
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %3, i32 0, i32 0, !dbg !8869
  %4 = load %struct.list_head*, %struct.list_head** %next, align 8, !dbg !8869
  call void @__list_del(%struct.list_head* %2, %struct.list_head* %4) #11, !dbg !8870
  br label %return, !dbg !8871

return:                                           ; preds = %if.end, %if.then
  ret void, !dbg !8871
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @INIT_LIST_HEAD(%struct.list_head* %list) #0 !dbg !8872 {
entry:
  %list.addr = alloca %struct.list_head*, align 8
  store %struct.list_head* %list, %struct.list_head** %list.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %list.addr, metadata !8873, metadata !DIExpression()), !dbg !8874
  br label %do.body, !dbg !8875

do.body:                                          ; preds = %entry
  br label %do.body1, !dbg !8876

do.body1:                                         ; preds = %do.body
  br label %do.end, !dbg !8878

do.end:                                           ; preds = %do.body1
  br label %do.body2, !dbg !8876

do.body2:                                         ; preds = %do.end
  %0 = load %struct.list_head*, %struct.list_head** %list.addr, align 8, !dbg !8880
  %1 = load %struct.list_head*, %struct.list_head** %list.addr, align 8, !dbg !8880
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %1, i32 0, i32 0, !dbg !8880
  store volatile %struct.list_head* %0, %struct.list_head** %next, align 8, !dbg !8880
  br label %do.end3, !dbg !8880

do.end3:                                          ; preds = %do.body2
  br label %do.end4, !dbg !8876

do.end4:                                          ; preds = %do.end3
  %2 = load %struct.list_head*, %struct.list_head** %list.addr, align 8, !dbg !8882
  %3 = load %struct.list_head*, %struct.list_head** %list.addr, align 8, !dbg !8883
  %prev = getelementptr inbounds %struct.list_head, %struct.list_head* %3, i32 0, i32 1, !dbg !8884
  store %struct.list_head* %2, %struct.list_head** %prev, align 8, !dbg !8885
  ret void, !dbg !8886
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @__list_del_entry_valid(%struct.list_head* %entry1) #0 !dbg !8887 {
entry:
  %entry.addr = alloca %struct.list_head*, align 8
  store %struct.list_head* %entry1, %struct.list_head** %entry.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %entry.addr, metadata !8890, metadata !DIExpression()), !dbg !8891
  ret i1 true, !dbg !8892
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @__list_del(%struct.list_head* %prev, %struct.list_head* %next) #0 !dbg !8893 {
entry:
  %prev.addr = alloca %struct.list_head*, align 8
  %next.addr = alloca %struct.list_head*, align 8
  store %struct.list_head* %prev, %struct.list_head** %prev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %prev.addr, metadata !8894, metadata !DIExpression()), !dbg !8895
  store %struct.list_head* %next, %struct.list_head** %next.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %next.addr, metadata !8896, metadata !DIExpression()), !dbg !8897
  %0 = load %struct.list_head*, %struct.list_head** %prev.addr, align 8, !dbg !8898
  %1 = load %struct.list_head*, %struct.list_head** %next.addr, align 8, !dbg !8899
  %prev1 = getelementptr inbounds %struct.list_head, %struct.list_head* %1, i32 0, i32 1, !dbg !8900
  store %struct.list_head* %0, %struct.list_head** %prev1, align 8, !dbg !8901
  br label %do.body, !dbg !8902

do.body:                                          ; preds = %entry
  br label %do.body2, !dbg !8903

do.body2:                                         ; preds = %do.body
  br label %do.end, !dbg !8905

do.end:                                           ; preds = %do.body2
  br label %do.body3, !dbg !8903

do.body3:                                         ; preds = %do.end
  %2 = load %struct.list_head*, %struct.list_head** %next.addr, align 8, !dbg !8907
  %3 = load %struct.list_head*, %struct.list_head** %prev.addr, align 8, !dbg !8907
  %next4 = getelementptr inbounds %struct.list_head, %struct.list_head* %3, i32 0, i32 0, !dbg !8907
  store volatile %struct.list_head* %2, %struct.list_head** %next4, align 8, !dbg !8907
  br label %do.end5, !dbg !8907

do.end5:                                          ; preds = %do.body3
  br label %do.end6, !dbg !8903

do.end6:                                          ; preds = %do.end5
  ret void, !dbg !8909
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @kref_put(%struct.kref* %kref, void (%struct.kref*)* %release) #0 !dbg !8910 {
entry:
  %retval = alloca i32, align 4
  %kref.addr = alloca %struct.kref*, align 8
  %release.addr = alloca void (%struct.kref*)*, align 8
  store %struct.kref* %kref, %struct.kref** %kref.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.kref** %kref.addr, metadata !8914, metadata !DIExpression()), !dbg !8915
  store void (%struct.kref*)* %release, void (%struct.kref*)** %release.addr, align 8
  call void @llvm.dbg.declare(metadata void (%struct.kref*)** %release.addr, metadata !8916, metadata !DIExpression()), !dbg !8917
  %0 = load %struct.kref*, %struct.kref** %kref.addr, align 8, !dbg !8918
  %refcount = getelementptr inbounds %struct.kref, %struct.kref* %0, i32 0, i32 0, !dbg !8920
  %call = call zeroext i1 @refcount_dec_and_test(%struct.refcount_struct* %refcount) #11, !dbg !8921
  br i1 %call, label %if.then, label %if.end, !dbg !8922

if.then:                                          ; preds = %entry
  %1 = load void (%struct.kref*)*, void (%struct.kref*)** %release.addr, align 8, !dbg !8923
  %2 = load %struct.kref*, %struct.kref** %kref.addr, align 8, !dbg !8925
  call void %1(%struct.kref* %2) #11, !dbg !8923
  store i32 1, i32* %retval, align 4, !dbg !8926
  br label %return, !dbg !8926

if.end:                                           ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !8927
  br label %return, !dbg !8927

return:                                           ; preds = %if.end, %if.then
  %3 = load i32, i32* %retval, align 4, !dbg !8928
  ret i32 %3, !dbg !8928
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @acpi_ec_query_handler_release(%struct.kref* %kref) #0 !dbg !8929 {
entry:
  %kref.addr = alloca %struct.kref*, align 8
  %handler = alloca %struct.acpi_ec_query_handler*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.acpi_ec_query_handler*, align 8
  store %struct.kref* %kref, %struct.kref** %kref.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.kref** %kref.addr, metadata !8930, metadata !DIExpression()), !dbg !8931
  call void @llvm.dbg.declare(metadata %struct.acpi_ec_query_handler** %handler, metadata !8932, metadata !DIExpression()), !dbg !8933
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !8934, metadata !DIExpression()), !dbg !8936
  %0 = load %struct.kref*, %struct.kref** %kref.addr, align 8, !dbg !8936
  %1 = bitcast %struct.kref* %0 to i8*, !dbg !8936
  store i8* %1, i8** %__mptr, align 8, !dbg !8936
  br label %do.body, !dbg !8936

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !8937

do.end:                                           ; preds = %do.body
  %2 = load i8*, i8** %__mptr, align 8, !dbg !8936
  %add.ptr = getelementptr i8, i8* %2, i64 -44, !dbg !8936
  %3 = bitcast i8* %add.ptr to %struct.acpi_ec_query_handler*, !dbg !8936
  store %struct.acpi_ec_query_handler* %3, %struct.acpi_ec_query_handler** %tmp, align 8, !dbg !8937
  %4 = load %struct.acpi_ec_query_handler*, %struct.acpi_ec_query_handler** %tmp, align 8, !dbg !8936
  store %struct.acpi_ec_query_handler* %4, %struct.acpi_ec_query_handler** %handler, align 8, !dbg !8933
  %5 = load %struct.acpi_ec_query_handler*, %struct.acpi_ec_query_handler** %handler, align 8, !dbg !8939
  %6 = bitcast %struct.acpi_ec_query_handler* %5 to i8*, !dbg !8939
  call void @kfree(i8* %6) #11, !dbg !8940
  ret void, !dbg !8941
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @refcount_dec_and_test(%struct.refcount_struct* %r) #0 !dbg !8942 {
entry:
  %r.addr = alloca %struct.refcount_struct*, align 8
  store %struct.refcount_struct* %r, %struct.refcount_struct** %r.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.refcount_struct** %r.addr, metadata !8945, metadata !DIExpression()), !dbg !8946
  %0 = load %struct.refcount_struct*, %struct.refcount_struct** %r.addr, align 8, !dbg !8947
  %call = call zeroext i1 @__refcount_dec_and_test(%struct.refcount_struct* %0, i32* null) #11, !dbg !8948
  ret i1 %call, !dbg !8949
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @__refcount_dec_and_test(%struct.refcount_struct* %r, i32* %oldp) #0 !dbg !8950 {
entry:
  %r.addr = alloca %struct.refcount_struct*, align 8
  %oldp.addr = alloca i32*, align 8
  store %struct.refcount_struct* %r, %struct.refcount_struct** %r.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.refcount_struct** %r.addr, metadata !8953, metadata !DIExpression()), !dbg !8954
  store i32* %oldp, i32** %oldp.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %oldp.addr, metadata !8955, metadata !DIExpression()), !dbg !8956
  %0 = load %struct.refcount_struct*, %struct.refcount_struct** %r.addr, align 8, !dbg !8957
  %1 = load i32*, i32** %oldp.addr, align 8, !dbg !8958
  %call = call zeroext i1 @__refcount_sub_and_test(i32 1, %struct.refcount_struct* %0, i32* %1) #11, !dbg !8959
  ret i1 %call, !dbg !8960
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @__refcount_sub_and_test(i32 %i, %struct.refcount_struct* %r, i32* %oldp) #0 !dbg !8961 {
entry:
  %i.addr.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %i.addr.i.i, metadata !8964, metadata !DIExpression()), !dbg !8968
  %v.addr.i1.i = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i1.i, metadata !8972, metadata !DIExpression()), !dbg !8973
  %__ret.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %__ret.i.i, metadata !8974, metadata !DIExpression()), !dbg !8976
  %tmp.i.i = alloca i32, align 4
  %v.addr.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %v.addr.i.i, metadata !8130, metadata !DIExpression()), !dbg !8977
  %size.addr.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i, metadata !8134, metadata !DIExpression()), !dbg !8979
  %i.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %i.addr.i, metadata !8980, metadata !DIExpression()), !dbg !8981
  %v.addr.i = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i, metadata !8982, metadata !DIExpression()), !dbg !8983
  %retval = alloca i1, align 1
  %i.addr = alloca i32, align 4
  %r.addr = alloca %struct.refcount_struct*, align 8
  %oldp.addr = alloca i32*, align 8
  %old = alloca i32, align 4
  store i32 %i, i32* %i.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %i.addr, metadata !8984, metadata !DIExpression()), !dbg !8985
  store %struct.refcount_struct* %r, %struct.refcount_struct** %r.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.refcount_struct** %r.addr, metadata !8986, metadata !DIExpression()), !dbg !8987
  store i32* %oldp, i32** %oldp.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %oldp.addr, metadata !8988, metadata !DIExpression()), !dbg !8989
  call void @llvm.dbg.declare(metadata i32* %old, metadata !8990, metadata !DIExpression()), !dbg !8991
  %0 = load i32, i32* %i.addr, align 4, !dbg !8992
  %1 = load %struct.refcount_struct*, %struct.refcount_struct** %r.addr, align 8, !dbg !8993
  %refs = getelementptr inbounds %struct.refcount_struct, %struct.refcount_struct* %1, i32 0, i32 0, !dbg !8994
  store i32 %0, i32* %i.addr.i, align 4
  store %struct.atomic_t* %refs, %struct.atomic_t** %v.addr.i, align 8
  %2 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i, align 8, !dbg !8995
  %3 = bitcast %struct.atomic_t* %2 to i8*, !dbg !8995
  store i8* %3, i8** %v.addr.i.i, align 8
  store i64 4, i64* %size.addr.i.i, align 8
  %4 = load i8*, i8** %v.addr.i.i, align 8, !dbg !8996
  %5 = load i64, i64* %size.addr.i.i, align 8, !dbg !8997
  %conv.i.i = trunc i64 %5 to i32, !dbg !8997
  %call.i.i = call zeroext i1 @kasan_check_write(i8* %4, i32 %conv.i.i) #12, !dbg !8998
  %6 = load i8*, i8** %v.addr.i.i, align 8, !dbg !8999
  %7 = load i64, i64* %size.addr.i.i, align 8, !dbg !8999
  call void @kcsan_check_access(i8* %6, i64 %7, i32 7) #12, !dbg !8999
  %8 = load i32, i32* %i.addr.i, align 4, !dbg !9000
  %9 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i, align 8, !dbg !9001
  store i32 %8, i32* %i.addr.i.i, align 4
  store %struct.atomic_t* %9, %struct.atomic_t** %v.addr.i1.i, align 8
  %10 = load i32, i32* %i.addr.i.i, align 4, !dbg !8976
  %sub.i.i = sub i32 0, %10, !dbg !8976
  store i32 %sub.i.i, i32* %__ret.i.i, align 4, !dbg !8976
  %11 = load i32, i32* %__ret.i.i, align 4, !dbg !8976
  %12 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i1.i, align 8, !dbg !8976
  %counter.i.i = getelementptr inbounds %struct.atomic_t, %struct.atomic_t* %12, i32 0, i32 0, !dbg !8976
  %13 = call i32 asm sideeffect "xaddl $0, $1\0A", "=r,=*m,0,*m,~{memory},~{cc},~{dirflag},~{fpsr},~{flags}"(i32* %counter.i.i, i32 %11, i32* %counter.i.i) #7, !dbg !8976, !srcloc !9002
  store i32 %13, i32* %__ret.i.i, align 4, !dbg !8976
  %14 = load i32, i32* %__ret.i.i, align 4, !dbg !8976
  store i32 %14, i32* %tmp.i.i, align 4, !dbg !8976
  %15 = load i32, i32* %tmp.i.i, align 4, !dbg !8976
  store i32 %15, i32* %old, align 4, !dbg !8991
  %16 = load i32*, i32** %oldp.addr, align 8, !dbg !9003
  %tobool = icmp ne i32* %16, null, !dbg !9003
  br i1 %tobool, label %if.then, label %if.end, !dbg !9005

if.then:                                          ; preds = %entry
  %17 = load i32, i32* %old, align 4, !dbg !9006
  %18 = load i32*, i32** %oldp.addr, align 8, !dbg !9007
  store i32 %17, i32* %18, align 4, !dbg !9008
  br label %if.end, !dbg !9009

if.end:                                           ; preds = %if.then, %entry
  %19 = load i32, i32* %old, align 4, !dbg !9010
  %20 = load i32, i32* %i.addr, align 4, !dbg !9012
  %cmp = icmp eq i32 %19, %20, !dbg !9013
  br i1 %cmp, label %if.then1, label %if.end2, !dbg !9014

if.then1:                                         ; preds = %if.end
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !9015, !srcloc !9017
  store i1 true, i1* %retval, align 1, !dbg !9018
  br label %return, !dbg !9018

if.end2:                                          ; preds = %if.end
  %21 = load i32, i32* %old, align 4, !dbg !9019
  %cmp3 = icmp slt i32 %21, 0, !dbg !9019
  br i1 %cmp3, label %lor.end, label %lor.rhs, !dbg !9019

lor.rhs:                                          ; preds = %if.end2
  %22 = load i32, i32* %old, align 4, !dbg !9019
  %23 = load i32, i32* %i.addr, align 4, !dbg !9019
  %sub = sub i32 %22, %23, !dbg !9019
  %cmp4 = icmp slt i32 %sub, 0, !dbg !9019
  br label %lor.end, !dbg !9019

lor.end:                                          ; preds = %lor.rhs, %if.end2
  %24 = phi i1 [ true, %if.end2 ], [ %cmp4, %lor.rhs ]
  %lnot = xor i1 %24, true, !dbg !9019
  %lnot5 = xor i1 %lnot, true, !dbg !9019
  %lnot.ext = zext i1 %lnot5 to i32, !dbg !9019
  %conv = sext i32 %lnot.ext to i64, !dbg !9019
  %tobool6 = icmp ne i64 %conv, 0, !dbg !9019
  br i1 %tobool6, label %if.then7, label %if.end8, !dbg !9021

if.then7:                                         ; preds = %lor.end
  %25 = load %struct.refcount_struct*, %struct.refcount_struct** %r.addr, align 8, !dbg !9022
  call void @refcount_warn_saturate(%struct.refcount_struct* %25, i32 3) #11, !dbg !9023
  br label %if.end8, !dbg !9023

if.end8:                                          ; preds = %if.then7, %lor.end
  store i1 false, i1* %retval, align 1, !dbg !9024
  br label %return, !dbg !9024

return:                                           ; preds = %if.end8, %if.then1
  %26 = load i1, i1* %retval, align 1, !dbg !9025
  ret i1 %26, !dbg !9025
}

; Function Attrs: noredzone
declare dso_local void @refcount_warn_saturate(%struct.refcount_struct*, i32) #2

; Function Attrs: noredzone
declare dso_local void @kfree(i8*) #2

; Function Attrs: noredzone
declare dso_local void @__mutex_init(%struct.mutex*, i8*, %struct.lock_class_key*) #2

; Function Attrs: noredzone
declare dso_local void @__init_waitqueue_head(%struct.wait_queue_head*, i8*, %struct.lock_class_key*) #2

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* noalias nocapture writeonly, i8* noalias nocapture readonly, i64, i1 immarg) #5

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @__init_work(%struct.work_struct* %work, i32 %onstack) #0 !dbg !9026 {
entry:
  %work.addr = alloca %struct.work_struct*, align 8
  %onstack.addr = alloca i32, align 4
  store %struct.work_struct* %work, %struct.work_struct** %work.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.work_struct** %work.addr, metadata !9029, metadata !DIExpression()), !dbg !9030
  store i32 %onstack, i32* %onstack.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %onstack.addr, metadata !9031, metadata !DIExpression()), !dbg !9032
  ret void, !dbg !9033
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @acpi_ec_event_handler(%struct.work_struct* %work) #0 !dbg !9034 {
entry:
  %lock.addr.i67 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i67, metadata !5875, metadata !DIExpression()), !dbg !9035
  %flags.addr.i68 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i68, metadata !5881, metadata !DIExpression()), !dbg !9037
  %tmp.i69 = alloca i32, align 4
  %tmp8.i70 = alloca i32, align 4
  %lock.addr.i65 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i65, metadata !5860, metadata !DIExpression()), !dbg !9038
  %lock.addr.i63 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i63, metadata !5875, metadata !DIExpression()), !dbg !9046
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !5881, metadata !DIExpression()), !dbg !9048
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !5860, metadata !DIExpression()), !dbg !9049
  %work.addr = alloca %struct.work_struct*, align 8
  %flags = alloca i64, align 8
  %ec = alloca %struct.acpi_ec*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.acpi_ec*, align 8
  %tmp1 = alloca i32, align 4
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp4 = alloca i32, align 4
  %__dummy8 = alloca i64, align 8
  %__dummy29 = alloca i64, align 8
  %tmp12 = alloca i32, align 4
  %__dummy27 = alloca i64, align 8
  %__dummy228 = alloca i64, align 8
  %tmp31 = alloca i32, align 4
  %__dummy35 = alloca i64, align 8
  %__dummy236 = alloca i64, align 8
  %tmp39 = alloca i32, align 4
  %tmp62 = alloca i32, align 4
  store %struct.work_struct* %work, %struct.work_struct** %work.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.work_struct** %work.addr, metadata !9056, metadata !DIExpression()), !dbg !9057
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !9058, metadata !DIExpression()), !dbg !9059
  call void @llvm.dbg.declare(metadata %struct.acpi_ec** %ec, metadata !9060, metadata !DIExpression()), !dbg !9061
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !9062, metadata !DIExpression()), !dbg !9064
  %0 = load %struct.work_struct*, %struct.work_struct** %work.addr, align 8, !dbg !9064
  %1 = bitcast %struct.work_struct* %0 to i8*, !dbg !9064
  store i8* %1, i8** %__mptr, align 8, !dbg !9064
  br label %do.body, !dbg !9064

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !9065

do.end:                                           ; preds = %do.body
  %2 = load i8*, i8** %__mptr, align 8, !dbg !9064
  %add.ptr = getelementptr i8, i8* %2, i64 -120, !dbg !9064
  %3 = bitcast i8* %add.ptr to %struct.acpi_ec*, !dbg !9064
  store %struct.acpi_ec* %3, %struct.acpi_ec** %tmp, align 8, !dbg !9065
  %4 = load %struct.acpi_ec*, %struct.acpi_ec** %tmp, align 8, !dbg !9064
  store %struct.acpi_ec* %4, %struct.acpi_ec** %ec, align 8, !dbg !9061
  store i32 0, i32* %tmp1, align 4, !dbg !9067
  %5 = load i32, i32* %tmp1, align 4, !dbg !9070
  br label %do.body2, !dbg !9071

do.body2:                                         ; preds = %do.end
  br label %do.body3, !dbg !9072

do.body3:                                         ; preds = %do.body2
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !9073, metadata !DIExpression()), !dbg !9075
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !9076, metadata !DIExpression()), !dbg !9075
  %cmp = icmp eq i64* %__dummy, %__dummy2, !dbg !9075
  %conv = zext i1 %cmp to i32, !dbg !9075
  store i32 1, i32* %tmp4, align 4, !dbg !9075
  %6 = load i32, i32* %tmp4, align 4, !dbg !9075
  br label %do.body5, !dbg !9077

do.body5:                                         ; preds = %do.body3
  br label %do.body6, !dbg !9078

do.body6:                                         ; preds = %do.body5
  br label %do.body7, !dbg !9079

do.body7:                                         ; preds = %do.body6
  call void @llvm.dbg.declare(metadata i64* %__dummy8, metadata !9081, metadata !DIExpression()), !dbg !9084
  call void @llvm.dbg.declare(metadata i64* %__dummy29, metadata !9085, metadata !DIExpression()), !dbg !9084
  %cmp10 = icmp eq i64* %__dummy8, %__dummy29, !dbg !9084
  %conv11 = zext i1 %cmp10 to i32, !dbg !9084
  store i32 1, i32* %tmp12, align 4, !dbg !9084
  %7 = load i32, i32* %tmp12, align 4, !dbg !9084
  %call = call i64 @arch_local_irq_save() #11, !dbg !9086
  store i64 %call, i64* %flags, align 8, !dbg !9086
  br label %do.end13, !dbg !9086

do.end13:                                         ; preds = %do.body7
  br label %do.end14, !dbg !9079

do.end14:                                         ; preds = %do.end13
  br label %do.body15, !dbg !9078

do.body15:                                        ; preds = %do.end14
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !9087, !srcloc !9088
  br label %do.body16, !dbg !9087

do.body16:                                        ; preds = %do.body15
  %8 = load %struct.acpi_ec*, %struct.acpi_ec** %ec, align 8, !dbg !9089
  %lock = getelementptr inbounds %struct.acpi_ec, %struct.acpi_ec* %8, i32 0, i32 12, !dbg !9089
  store %struct.spinlock* %lock, %struct.spinlock** %lock.addr.i, align 8
  %9 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !9090
  %10 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %9, i32 0, i32 0, !dbg !9091
  %rlock.i = bitcast %union.anon.0* %10 to %struct.raw_spinlock*, !dbg !9091
  br label %do.end18, !dbg !9089

do.end18:                                         ; preds = %do.body16
  br label %do.end19, !dbg !9087

do.end19:                                         ; preds = %do.end18
  br label %do.end20, !dbg !9078

do.end20:                                         ; preds = %do.end19
  br label %do.end21, !dbg !9077

do.end21:                                         ; preds = %do.end20
  br label %do.end22, !dbg !9072

do.end22:                                         ; preds = %do.end21
  br label %while.cond, !dbg !9092

while.cond:                                       ; preds = %if.end60, %do.end22
  %11 = load %struct.acpi_ec*, %struct.acpi_ec** %ec, align 8, !dbg !9093
  %nr_pending_queries = getelementptr inbounds %struct.acpi_ec, %struct.acpi_ec* %11, i32 0, i32 15, !dbg !9094
  %12 = load i64, i64* %nr_pending_queries, align 8, !dbg !9094
  %tobool = icmp ne i64 %12, 0, !dbg !9092
  br i1 %tobool, label %while.body, label %while.end, !dbg !9092

while.body:                                       ; preds = %while.cond
  %13 = load %struct.acpi_ec*, %struct.acpi_ec** %ec, align 8, !dbg !9095
  %lock23 = getelementptr inbounds %struct.acpi_ec, %struct.acpi_ec* %13, i32 0, i32 12, !dbg !9096
  %14 = load i64, i64* %flags, align 8, !dbg !9097
  store %struct.spinlock* %lock23, %struct.spinlock** %lock.addr.i63, align 8
  store i64 %14, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !372, metadata !5933, metadata !DIExpression()) #7, !dbg !9098
  call void @llvm.dbg.declare(metadata !372, metadata !5937, metadata !DIExpression()) #7, !dbg !9098
  store i32 1, i32* %tmp.i, align 4, !dbg !9098
  %15 = load i32, i32* %tmp.i, align 4, !dbg !9098
  call void @llvm.dbg.declare(metadata !372, metadata !5938, metadata !DIExpression()) #7, !dbg !9099
  call void @llvm.dbg.declare(metadata !372, metadata !5944, metadata !DIExpression()) #7, !dbg !9099
  store i32 1, i32* %tmp8.i, align 4, !dbg !9099
  %16 = load i32, i32* %tmp8.i, align 4, !dbg !9099
  %17 = load i64, i64* %flags.addr.i, align 8, !dbg !9100
  call void @arch_local_irq_restore(i64 %17) #12, !dbg !9100
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !9101, !srcloc !5948
  %18 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i63, align 8, !dbg !9102
  %19 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %18, i32 0, i32 0, !dbg !9102
  %rlock.i64 = bitcast %union.anon.0* %19 to %struct.raw_spinlock*, !dbg !9102
  %20 = load %struct.acpi_ec*, %struct.acpi_ec** %ec, align 8, !dbg !9103
  %call24 = call i32 @acpi_ec_query(%struct.acpi_ec* %20, i8* null) #11, !dbg !9104
  br label %do.body25, !dbg !9105

do.body25:                                        ; preds = %while.body
  br label %do.body26, !dbg !9106

do.body26:                                        ; preds = %do.body25
  call void @llvm.dbg.declare(metadata i64* %__dummy27, metadata !9107, metadata !DIExpression()), !dbg !9109
  call void @llvm.dbg.declare(metadata i64* %__dummy228, metadata !9110, metadata !DIExpression()), !dbg !9109
  %cmp29 = icmp eq i64* %__dummy27, %__dummy228, !dbg !9109
  %conv30 = zext i1 %cmp29 to i32, !dbg !9109
  store i32 1, i32* %tmp31, align 4, !dbg !9109
  %21 = load i32, i32* %tmp31, align 4, !dbg !9109
  br label %do.body32, !dbg !9111

do.body32:                                        ; preds = %do.body26
  br label %do.body33, !dbg !9112

do.body33:                                        ; preds = %do.body32
  br label %do.body34, !dbg !9113

do.body34:                                        ; preds = %do.body33
  call void @llvm.dbg.declare(metadata i64* %__dummy35, metadata !9115, metadata !DIExpression()), !dbg !9118
  call void @llvm.dbg.declare(metadata i64* %__dummy236, metadata !9119, metadata !DIExpression()), !dbg !9118
  %cmp37 = icmp eq i64* %__dummy35, %__dummy236, !dbg !9118
  %conv38 = zext i1 %cmp37 to i32, !dbg !9118
  store i32 1, i32* %tmp39, align 4, !dbg !9118
  %22 = load i32, i32* %tmp39, align 4, !dbg !9118
  %call40 = call i64 @arch_local_irq_save() #11, !dbg !9120
  store i64 %call40, i64* %flags, align 8, !dbg !9120
  br label %do.end41, !dbg !9120

do.end41:                                         ; preds = %do.body34
  br label %do.end42, !dbg !9113

do.end42:                                         ; preds = %do.end41
  br label %do.body43, !dbg !9112

do.body43:                                        ; preds = %do.end42
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !9121, !srcloc !9122
  br label %do.body44, !dbg !9121

do.body44:                                        ; preds = %do.body43
  %23 = load %struct.acpi_ec*, %struct.acpi_ec** %ec, align 8, !dbg !9123
  %lock45 = getelementptr inbounds %struct.acpi_ec, %struct.acpi_ec* %23, i32 0, i32 12, !dbg !9123
  store %struct.spinlock* %lock45, %struct.spinlock** %lock.addr.i65, align 8
  %24 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i65, align 8, !dbg !9124
  %25 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %24, i32 0, i32 0, !dbg !9125
  %rlock.i66 = bitcast %union.anon.0* %25 to %struct.raw_spinlock*, !dbg !9125
  br label %do.end47, !dbg !9123

do.end47:                                         ; preds = %do.body44
  br label %do.end48, !dbg !9121

do.end48:                                         ; preds = %do.end47
  br label %do.end49, !dbg !9112

do.end49:                                         ; preds = %do.end48
  br label %do.end50, !dbg !9111

do.end50:                                         ; preds = %do.end49
  br label %do.end51, !dbg !9106

do.end51:                                         ; preds = %do.end50
  %26 = load %struct.acpi_ec*, %struct.acpi_ec** %ec, align 8, !dbg !9126
  %nr_pending_queries52 = getelementptr inbounds %struct.acpi_ec, %struct.acpi_ec* %26, i32 0, i32 15, !dbg !9127
  %27 = load i64, i64* %nr_pending_queries52, align 8, !dbg !9128
  %dec = add i64 %27, -1, !dbg !9128
  store i64 %dec, i64* %nr_pending_queries52, align 8, !dbg !9128
  %28 = load %struct.acpi_ec*, %struct.acpi_ec** %ec, align 8, !dbg !9129
  %nr_pending_queries53 = getelementptr inbounds %struct.acpi_ec, %struct.acpi_ec* %28, i32 0, i32 15, !dbg !9131
  %29 = load i64, i64* %nr_pending_queries53, align 8, !dbg !9131
  %tobool54 = icmp ne i64 %29, 0, !dbg !9129
  br i1 %tobool54, label %if.end60, label %if.then, !dbg !9132

if.then:                                          ; preds = %do.end51
  %30 = load i32, i32* @ec_event_clearing, align 4, !dbg !9133
  %cmp55 = icmp eq i32 %30, 0, !dbg !9136
  br i1 %cmp55, label %if.then59, label %lor.lhs.false, !dbg !9137

lor.lhs.false:                                    ; preds = %if.then
  %31 = load i32, i32* @ec_event_clearing, align 4, !dbg !9138
  %cmp57 = icmp eq i32 %31, 1, !dbg !9139
  br i1 %cmp57, label %if.then59, label %if.end, !dbg !9140

if.then59:                                        ; preds = %lor.lhs.false, %if.then
  %32 = load %struct.acpi_ec*, %struct.acpi_ec** %ec, align 8, !dbg !9141
  call void @acpi_ec_complete_query(%struct.acpi_ec* %32) #11, !dbg !9142
  br label %if.end, !dbg !9142

if.end:                                           ; preds = %if.then59, %lor.lhs.false
  br label %if.end60, !dbg !9143

if.end60:                                         ; preds = %if.end, %do.end51
  br label %while.cond, !dbg !9092, !llvm.loop !9144

while.end:                                        ; preds = %while.cond
  %33 = load %struct.acpi_ec*, %struct.acpi_ec** %ec, align 8, !dbg !9146
  %lock61 = getelementptr inbounds %struct.acpi_ec, %struct.acpi_ec* %33, i32 0, i32 12, !dbg !9147
  %34 = load i64, i64* %flags, align 8, !dbg !9148
  store %struct.spinlock* %lock61, %struct.spinlock** %lock.addr.i67, align 8
  store i64 %34, i64* %flags.addr.i68, align 8
  call void @llvm.dbg.declare(metadata !372, metadata !5933, metadata !DIExpression()) #7, !dbg !9149
  call void @llvm.dbg.declare(metadata !372, metadata !5937, metadata !DIExpression()) #7, !dbg !9149
  store i32 1, i32* %tmp.i69, align 4, !dbg !9149
  %35 = load i32, i32* %tmp.i69, align 4, !dbg !9149
  call void @llvm.dbg.declare(metadata !372, metadata !5938, metadata !DIExpression()) #7, !dbg !9150
  call void @llvm.dbg.declare(metadata !372, metadata !5944, metadata !DIExpression()) #7, !dbg !9150
  store i32 1, i32* %tmp8.i70, align 4, !dbg !9150
  %36 = load i32, i32* %tmp8.i70, align 4, !dbg !9150
  %37 = load i64, i64* %flags.addr.i68, align 8, !dbg !9151
  call void @arch_local_irq_restore(i64 %37) #12, !dbg !9151
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !9152, !srcloc !5948
  %38 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i67, align 8, !dbg !9153
  %39 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %38, i32 0, i32 0, !dbg !9153
  %rlock.i71 = bitcast %union.anon.0* %39 to %struct.raw_spinlock*, !dbg !9153
  store i32 0, i32* %tmp62, align 4, !dbg !9154
  %40 = load i32, i32* %tmp62, align 4, !dbg !9157
  %41 = load %struct.acpi_ec*, %struct.acpi_ec** %ec, align 8, !dbg !9158
  call void @acpi_ec_check_event(%struct.acpi_ec* %41) #11, !dbg !9159
  ret void, !dbg !9160
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @acpi_ec_query(%struct.acpi_ec* %ec, i8* %data) #0 !dbg !9161 {
entry:
  %retval = alloca i32, align 4
  %ec.addr = alloca %struct.acpi_ec*, align 8
  %data.addr = alloca i8*, align 8
  %value = alloca i8, align 1
  %result = alloca i32, align 4
  %q = alloca %struct.acpi_ec_query*, align 8
  %tmp = alloca i32, align 4
  %tmp15 = alloca i32, align 4
  store %struct.acpi_ec* %ec, %struct.acpi_ec** %ec.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.acpi_ec** %ec.addr, metadata !9164, metadata !DIExpression()), !dbg !9165
  store i8* %data, i8** %data.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %data.addr, metadata !9166, metadata !DIExpression()), !dbg !9167
  call void @llvm.dbg.declare(metadata i8* %value, metadata !9168, metadata !DIExpression()), !dbg !9169
  store i8 0, i8* %value, align 1, !dbg !9169
  call void @llvm.dbg.declare(metadata i32* %result, metadata !9170, metadata !DIExpression()), !dbg !9171
  call void @llvm.dbg.declare(metadata %struct.acpi_ec_query** %q, metadata !9172, metadata !DIExpression()), !dbg !9173
  %call = call %struct.acpi_ec_query* @acpi_ec_create_query(i8* %value) #11, !dbg !9174
  store %struct.acpi_ec_query* %call, %struct.acpi_ec_query** %q, align 8, !dbg !9175
  %0 = load %struct.acpi_ec_query*, %struct.acpi_ec_query** %q, align 8, !dbg !9176
  %tobool = icmp ne %struct.acpi_ec_query* %0, null, !dbg !9176
  br i1 %tobool, label %if.end, label %if.then, !dbg !9178

if.then:                                          ; preds = %entry
  store i32 -12, i32* %retval, align 4, !dbg !9179
  br label %return, !dbg !9179

if.end:                                           ; preds = %entry
  %1 = load %struct.acpi_ec*, %struct.acpi_ec** %ec.addr, align 8, !dbg !9180
  %2 = load %struct.acpi_ec_query*, %struct.acpi_ec_query** %q, align 8, !dbg !9181
  %transaction = getelementptr inbounds %struct.acpi_ec_query, %struct.acpi_ec_query* %2, i32 0, i32 0, !dbg !9182
  %call1 = call i32 @acpi_ec_transaction(%struct.acpi_ec* %1, %struct.transaction* %transaction) #11, !dbg !9183
  store i32 %call1, i32* %result, align 4, !dbg !9184
  %3 = load i8, i8* %value, align 1, !dbg !9185
  %tobool2 = icmp ne i8 %3, 0, !dbg !9185
  br i1 %tobool2, label %if.end4, label %if.then3, !dbg !9187

if.then3:                                         ; preds = %if.end
  store i32 -61, i32* %result, align 4, !dbg !9188
  br label %if.end4, !dbg !9189

if.end4:                                          ; preds = %if.then3, %if.end
  %4 = load i32, i32* %result, align 4, !dbg !9190
  %tobool5 = icmp ne i32 %4, 0, !dbg !9190
  br i1 %tobool5, label %if.then6, label %if.end7, !dbg !9192

if.then6:                                         ; preds = %if.end4
  br label %err_exit, !dbg !9193

if.end7:                                          ; preds = %if.end4
  %5 = load %struct.acpi_ec*, %struct.acpi_ec** %ec.addr, align 8, !dbg !9194
  %6 = load i8, i8* %value, align 1, !dbg !9195
  %call8 = call %struct.acpi_ec_query_handler* @acpi_ec_get_query_handler_by_value(%struct.acpi_ec* %5, i8 zeroext %6) #11, !dbg !9196
  %7 = load %struct.acpi_ec_query*, %struct.acpi_ec_query** %q, align 8, !dbg !9197
  %handler = getelementptr inbounds %struct.acpi_ec_query, %struct.acpi_ec_query* %7, i32 0, i32 2, !dbg !9198
  store %struct.acpi_ec_query_handler* %call8, %struct.acpi_ec_query_handler** %handler, align 8, !dbg !9199
  %8 = load %struct.acpi_ec_query*, %struct.acpi_ec_query** %q, align 8, !dbg !9200
  %handler9 = getelementptr inbounds %struct.acpi_ec_query, %struct.acpi_ec_query* %8, i32 0, i32 2, !dbg !9202
  %9 = load %struct.acpi_ec_query_handler*, %struct.acpi_ec_query_handler** %handler9, align 8, !dbg !9202
  %tobool10 = icmp ne %struct.acpi_ec_query_handler* %9, null, !dbg !9200
  br i1 %tobool10, label %if.end12, label %if.then11, !dbg !9203

if.then11:                                        ; preds = %if.end7
  store i32 -61, i32* %result, align 4, !dbg !9204
  br label %err_exit, !dbg !9206

if.end12:                                         ; preds = %if.end7
  store i32 0, i32* %tmp, align 4, !dbg !9207
  %10 = load i32, i32* %tmp, align 4, !dbg !9210
  %11 = load %struct.workqueue_struct*, %struct.workqueue_struct** @ec_query_wq, align 8, !dbg !9211
  %12 = load %struct.acpi_ec_query*, %struct.acpi_ec_query** %q, align 8, !dbg !9213
  %work = getelementptr inbounds %struct.acpi_ec_query, %struct.acpi_ec_query* %12, i32 0, i32 1, !dbg !9214
  %call13 = call zeroext i1 @queue_work(%struct.workqueue_struct* %11, %struct.work_struct* %work) #11, !dbg !9215
  br i1 %call13, label %if.end16, label %if.then14, !dbg !9216

if.then14:                                        ; preds = %if.end12
  store i32 0, i32* %tmp15, align 4, !dbg !9217
  %13 = load i32, i32* %tmp15, align 4, !dbg !9221
  store i32 -16, i32* %result, align 4, !dbg !9222
  br label %if.end16, !dbg !9223

if.end16:                                         ; preds = %if.then14, %if.end12
  br label %err_exit, !dbg !9224

err_exit:                                         ; preds = %if.end16, %if.then11, %if.then6
  call void @llvm.dbg.label(metadata !9225), !dbg !9226
  %14 = load i32, i32* %result, align 4, !dbg !9227
  %tobool17 = icmp ne i32 %14, 0, !dbg !9227
  br i1 %tobool17, label %if.then18, label %if.end19, !dbg !9229

if.then18:                                        ; preds = %err_exit
  %15 = load %struct.acpi_ec_query*, %struct.acpi_ec_query** %q, align 8, !dbg !9230
  call void @acpi_ec_delete_query(%struct.acpi_ec_query* %15) #11, !dbg !9231
  br label %if.end19, !dbg !9231

if.end19:                                         ; preds = %if.then18, %err_exit
  %16 = load i8*, i8** %data.addr, align 8, !dbg !9232
  %tobool20 = icmp ne i8* %16, null, !dbg !9232
  br i1 %tobool20, label %if.then21, label %if.end22, !dbg !9234

if.then21:                                        ; preds = %if.end19
  %17 = load i8, i8* %value, align 1, !dbg !9235
  %18 = load i8*, i8** %data.addr, align 8, !dbg !9236
  store i8 %17, i8* %18, align 1, !dbg !9237
  br label %if.end22, !dbg !9238

if.end22:                                         ; preds = %if.then21, %if.end19
  %19 = load i32, i32* %result, align 4, !dbg !9239
  store i32 %19, i32* %retval, align 4, !dbg !9240
  br label %return, !dbg !9240

return:                                           ; preds = %if.end22, %if.then
  %20 = load i32, i32* %retval, align 4, !dbg !9241
  ret i32 %20, !dbg !9241
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @acpi_ec_check_event(%struct.acpi_ec* %ec) #0 !dbg !9242 {
entry:
  %lock.addr.i27 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i27, metadata !5875, metadata !DIExpression()), !dbg !9243
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !5881, metadata !DIExpression()), !dbg !9249
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !5860, metadata !DIExpression()), !dbg !9250
  %ec.addr = alloca %struct.acpi_ec*, align 8
  %flags = alloca i64, align 8
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__dummy7 = alloca i64, align 8
  %__dummy28 = alloca i64, align 8
  %tmp11 = alloca i32, align 4
  store %struct.acpi_ec* %ec, %struct.acpi_ec** %ec.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.acpi_ec** %ec.addr, metadata !9257, metadata !DIExpression()), !dbg !9258
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !9259, metadata !DIExpression()), !dbg !9260
  %0 = load i32, i32* @ec_event_clearing, align 4, !dbg !9261
  %cmp = icmp eq i32 %0, 2, !dbg !9262
  br i1 %cmp, label %if.then, label %if.end26, !dbg !9263

if.then:                                          ; preds = %entry
  %1 = load %struct.acpi_ec*, %struct.acpi_ec** %ec.addr, align 8, !dbg !9264
  %call = call i32 @ec_guard(%struct.acpi_ec* %1) #11, !dbg !9265
  %tobool = icmp ne i32 %call, 0, !dbg !9265
  br i1 %tobool, label %if.then1, label %if.end25, !dbg !9266

if.then1:                                         ; preds = %if.then
  br label %do.body, !dbg !9267

do.body:                                          ; preds = %if.then1
  br label %do.body2, !dbg !9268

do.body2:                                         ; preds = %do.body
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !9269, metadata !DIExpression()), !dbg !9271
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !9272, metadata !DIExpression()), !dbg !9271
  %cmp3 = icmp eq i64* %__dummy, %__dummy2, !dbg !9271
  %conv = zext i1 %cmp3 to i32, !dbg !9271
  store i32 1, i32* %tmp, align 4, !dbg !9271
  %2 = load i32, i32* %tmp, align 4, !dbg !9271
  br label %do.body4, !dbg !9273

do.body4:                                         ; preds = %do.body2
  br label %do.body5, !dbg !9274

do.body5:                                         ; preds = %do.body4
  br label %do.body6, !dbg !9275

do.body6:                                         ; preds = %do.body5
  call void @llvm.dbg.declare(metadata i64* %__dummy7, metadata !9277, metadata !DIExpression()), !dbg !9280
  call void @llvm.dbg.declare(metadata i64* %__dummy28, metadata !9281, metadata !DIExpression()), !dbg !9280
  %cmp9 = icmp eq i64* %__dummy7, %__dummy28, !dbg !9280
  %conv10 = zext i1 %cmp9 to i32, !dbg !9280
  store i32 1, i32* %tmp11, align 4, !dbg !9280
  %3 = load i32, i32* %tmp11, align 4, !dbg !9280
  %call12 = call i64 @arch_local_irq_save() #11, !dbg !9282
  store i64 %call12, i64* %flags, align 8, !dbg !9282
  br label %do.end, !dbg !9282

do.end:                                           ; preds = %do.body6
  br label %do.end13, !dbg !9275

do.end13:                                         ; preds = %do.end
  br label %do.body14, !dbg !9274

do.body14:                                        ; preds = %do.end13
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !9283, !srcloc !9284
  br label %do.body15, !dbg !9283

do.body15:                                        ; preds = %do.body14
  %4 = load %struct.acpi_ec*, %struct.acpi_ec** %ec.addr, align 8, !dbg !9285
  %lock = getelementptr inbounds %struct.acpi_ec, %struct.acpi_ec* %4, i32 0, i32 12, !dbg !9285
  store %struct.spinlock* %lock, %struct.spinlock** %lock.addr.i, align 8
  %5 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !9286
  %6 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %5, i32 0, i32 0, !dbg !9287
  %rlock.i = bitcast %union.anon.0* %6 to %struct.raw_spinlock*, !dbg !9287
  br label %do.end17, !dbg !9285

do.end17:                                         ; preds = %do.body15
  br label %do.end18, !dbg !9283

do.end18:                                         ; preds = %do.end17
  br label %do.end19, !dbg !9274

do.end19:                                         ; preds = %do.end18
  br label %do.end20, !dbg !9273

do.end20:                                         ; preds = %do.end19
  br label %do.end21, !dbg !9268

do.end21:                                         ; preds = %do.end20
  %7 = load %struct.acpi_ec*, %struct.acpi_ec** %ec.addr, align 8, !dbg !9288
  %curr = getelementptr inbounds %struct.acpi_ec, %struct.acpi_ec* %7, i32 0, i32 11, !dbg !9290
  %8 = load %struct.transaction*, %struct.transaction** %curr, align 8, !dbg !9290
  %tobool22 = icmp ne %struct.transaction* %8, null, !dbg !9288
  br i1 %tobool22, label %if.end, label %if.then23, !dbg !9291

if.then23:                                        ; preds = %do.end21
  %9 = load %struct.acpi_ec*, %struct.acpi_ec** %ec.addr, align 8, !dbg !9292
  call void @advance_transaction(%struct.acpi_ec* %9) #11, !dbg !9293
  br label %if.end, !dbg !9293

if.end:                                           ; preds = %if.then23, %do.end21
  %10 = load %struct.acpi_ec*, %struct.acpi_ec** %ec.addr, align 8, !dbg !9294
  %lock24 = getelementptr inbounds %struct.acpi_ec, %struct.acpi_ec* %10, i32 0, i32 12, !dbg !9295
  %11 = load i64, i64* %flags, align 8, !dbg !9296
  store %struct.spinlock* %lock24, %struct.spinlock** %lock.addr.i27, align 8
  store i64 %11, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !372, metadata !5933, metadata !DIExpression()) #7, !dbg !9297
  call void @llvm.dbg.declare(metadata !372, metadata !5937, metadata !DIExpression()) #7, !dbg !9297
  store i32 1, i32* %tmp.i, align 4, !dbg !9297
  %12 = load i32, i32* %tmp.i, align 4, !dbg !9297
  call void @llvm.dbg.declare(metadata !372, metadata !5938, metadata !DIExpression()) #7, !dbg !9298
  call void @llvm.dbg.declare(metadata !372, metadata !5944, metadata !DIExpression()) #7, !dbg !9298
  store i32 1, i32* %tmp8.i, align 4, !dbg !9298
  %13 = load i32, i32* %tmp8.i, align 4, !dbg !9298
  %14 = load i64, i64* %flags.addr.i, align 8, !dbg !9299
  call void @arch_local_irq_restore(i64 %14) #12, !dbg !9299
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !9300, !srcloc !5948
  %15 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i27, align 8, !dbg !9301
  %16 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %15, i32 0, i32 0, !dbg !9301
  %rlock.i28 = bitcast %union.anon.0* %16 to %struct.raw_spinlock*, !dbg !9301
  br label %if.end25, !dbg !9302

if.end25:                                         ; preds = %if.end, %if.then
  br label %if.end26, !dbg !9303

if.end26:                                         ; preds = %if.end25, %entry
  ret void, !dbg !9304
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.acpi_ec_query* @acpi_ec_create_query(i8* %pval) #0 !dbg !9305 {
entry:
  %retval = alloca %struct.acpi_ec_query*, align 8
  %pval.addr = alloca i8*, align 8
  %q = alloca %struct.acpi_ec_query*, align 8
  %t = alloca %struct.transaction*, align 8
  %.compoundliteral = alloca %struct.atomic64_t, align 8
  store i8* %pval, i8** %pval.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %pval.addr, metadata !9308, metadata !DIExpression()), !dbg !9309
  call void @llvm.dbg.declare(metadata %struct.acpi_ec_query** %q, metadata !9310, metadata !DIExpression()), !dbg !9311
  call void @llvm.dbg.declare(metadata %struct.transaction** %t, metadata !9312, metadata !DIExpression()), !dbg !9313
  %call = call i8* @kzalloc(i64 64, i32 3264) #11, !dbg !9314
  %0 = bitcast i8* %call to %struct.acpi_ec_query*, !dbg !9314
  store %struct.acpi_ec_query* %0, %struct.acpi_ec_query** %q, align 8, !dbg !9315
  %1 = load %struct.acpi_ec_query*, %struct.acpi_ec_query** %q, align 8, !dbg !9316
  %tobool = icmp ne %struct.acpi_ec_query* %1, null, !dbg !9316
  br i1 %tobool, label %if.end, label %if.then, !dbg !9318

if.then:                                          ; preds = %entry
  store %struct.acpi_ec_query* null, %struct.acpi_ec_query** %retval, align 8, !dbg !9319
  br label %return, !dbg !9319

if.end:                                           ; preds = %entry
  br label %do.body, !dbg !9320

do.body:                                          ; preds = %if.end
  %2 = load %struct.acpi_ec_query*, %struct.acpi_ec_query** %q, align 8, !dbg !9321
  %work = getelementptr inbounds %struct.acpi_ec_query, %struct.acpi_ec_query* %2, i32 0, i32 1, !dbg !9321
  call void @__init_work(%struct.work_struct* %work, i32 0) #11, !dbg !9321
  %3 = load %struct.acpi_ec_query*, %struct.acpi_ec_query** %q, align 8, !dbg !9321
  %work1 = getelementptr inbounds %struct.acpi_ec_query, %struct.acpi_ec_query* %3, i32 0, i32 1, !dbg !9321
  %data = getelementptr inbounds %struct.work_struct, %struct.work_struct* %work1, i32 0, i32 0, !dbg !9321
  %counter = getelementptr inbounds %struct.atomic64_t, %struct.atomic64_t* %.compoundliteral, i32 0, i32 0, !dbg !9321
  store i64 68719476704, i64* %counter, align 8, !dbg !9321
  %4 = bitcast %struct.atomic64_t* %data to i8*, !dbg !9321
  %5 = bitcast %struct.atomic64_t* %.compoundliteral to i8*, !dbg !9321
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %4, i8* align 8 %5, i64 8, i1 false), !dbg !9321
  %6 = load %struct.acpi_ec_query*, %struct.acpi_ec_query** %q, align 8, !dbg !9321
  %work2 = getelementptr inbounds %struct.acpi_ec_query, %struct.acpi_ec_query* %6, i32 0, i32 1, !dbg !9321
  %entry3 = getelementptr inbounds %struct.work_struct, %struct.work_struct* %work2, i32 0, i32 1, !dbg !9321
  call void @INIT_LIST_HEAD(%struct.list_head* %entry3) #11, !dbg !9321
  %7 = load %struct.acpi_ec_query*, %struct.acpi_ec_query** %q, align 8, !dbg !9321
  %work4 = getelementptr inbounds %struct.acpi_ec_query, %struct.acpi_ec_query* %7, i32 0, i32 1, !dbg !9321
  %func = getelementptr inbounds %struct.work_struct, %struct.work_struct* %work4, i32 0, i32 2, !dbg !9321
  store void (%struct.work_struct*)* @acpi_ec_event_processor, void (%struct.work_struct*)** %func, align 8, !dbg !9321
  br label %do.end, !dbg !9321

do.end:                                           ; preds = %do.body
  %8 = load %struct.acpi_ec_query*, %struct.acpi_ec_query** %q, align 8, !dbg !9323
  %transaction = getelementptr inbounds %struct.acpi_ec_query, %struct.acpi_ec_query* %8, i32 0, i32 0, !dbg !9324
  store %struct.transaction* %transaction, %struct.transaction** %t, align 8, !dbg !9325
  %9 = load %struct.transaction*, %struct.transaction** %t, align 8, !dbg !9326
  %command = getelementptr inbounds %struct.transaction, %struct.transaction* %9, i32 0, i32 3, !dbg !9327
  store i8 -124, i8* %command, align 2, !dbg !9328
  %10 = load i8*, i8** %pval.addr, align 8, !dbg !9329
  %11 = load %struct.transaction*, %struct.transaction** %t, align 8, !dbg !9330
  %rdata = getelementptr inbounds %struct.transaction, %struct.transaction* %11, i32 0, i32 1, !dbg !9331
  store i8* %10, i8** %rdata, align 8, !dbg !9332
  %12 = load %struct.transaction*, %struct.transaction** %t, align 8, !dbg !9333
  %rlen = getelementptr inbounds %struct.transaction, %struct.transaction* %12, i32 0, i32 7, !dbg !9334
  store i8 1, i8* %rlen, align 2, !dbg !9335
  %13 = load %struct.acpi_ec_query*, %struct.acpi_ec_query** %q, align 8, !dbg !9336
  store %struct.acpi_ec_query* %13, %struct.acpi_ec_query** %retval, align 8, !dbg !9337
  br label %return, !dbg !9337

return:                                           ; preds = %do.end, %if.then
  %14 = load %struct.acpi_ec_query*, %struct.acpi_ec_query** %retval, align 8, !dbg !9338
  ret %struct.acpi_ec_query* %14, !dbg !9338
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.acpi_ec_query_handler* @acpi_ec_get_query_handler_by_value(%struct.acpi_ec* %ec, i8 zeroext %value) #0 !dbg !9339 {
entry:
  %retval = alloca %struct.acpi_ec_query_handler*, align 8
  %ec.addr = alloca %struct.acpi_ec*, align 8
  %value.addr = alloca i8, align 1
  %handler = alloca %struct.acpi_ec_query_handler*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.acpi_ec_query_handler*, align 8
  %__mptr6 = alloca i8*, align 8
  %tmp11 = alloca %struct.acpi_ec_query_handler*, align 8
  store %struct.acpi_ec* %ec, %struct.acpi_ec** %ec.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.acpi_ec** %ec.addr, metadata !9342, metadata !DIExpression()), !dbg !9343
  store i8 %value, i8* %value.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %value.addr, metadata !9344, metadata !DIExpression()), !dbg !9345
  call void @llvm.dbg.declare(metadata %struct.acpi_ec_query_handler** %handler, metadata !9346, metadata !DIExpression()), !dbg !9347
  %0 = load %struct.acpi_ec*, %struct.acpi_ec** %ec.addr, align 8, !dbg !9348
  %mutex = getelementptr inbounds %struct.acpi_ec, %struct.acpi_ec* %0, i32 0, i32 8, !dbg !9349
  call void @mutex_lock(%struct.mutex* %mutex) #11, !dbg !9350
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !9351, metadata !DIExpression()), !dbg !9354
  %1 = load %struct.acpi_ec*, %struct.acpi_ec** %ec.addr, align 8, !dbg !9354
  %list = getelementptr inbounds %struct.acpi_ec, %struct.acpi_ec* %1, i32 0, i32 10, !dbg !9354
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %list, i32 0, i32 0, !dbg !9354
  %2 = load %struct.list_head*, %struct.list_head** %next, align 8, !dbg !9354
  %3 = bitcast %struct.list_head* %2 to i8*, !dbg !9354
  store i8* %3, i8** %__mptr, align 8, !dbg !9354
  br label %do.body, !dbg !9354

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !9355

do.end:                                           ; preds = %do.body
  %4 = load i8*, i8** %__mptr, align 8, !dbg !9354
  %add.ptr = getelementptr i8, i8* %4, i64 0, !dbg !9354
  %5 = bitcast i8* %add.ptr to %struct.acpi_ec_query_handler*, !dbg !9354
  store %struct.acpi_ec_query_handler* %5, %struct.acpi_ec_query_handler** %tmp, align 8, !dbg !9355
  %6 = load %struct.acpi_ec_query_handler*, %struct.acpi_ec_query_handler** %tmp, align 8, !dbg !9354
  store %struct.acpi_ec_query_handler* %6, %struct.acpi_ec_query_handler** %handler, align 8, !dbg !9357
  br label %for.cond, !dbg !9357

for.cond:                                         ; preds = %do.end10, %do.end
  %7 = load %struct.acpi_ec_query_handler*, %struct.acpi_ec_query_handler** %handler, align 8, !dbg !9358
  %node = getelementptr inbounds %struct.acpi_ec_query_handler, %struct.acpi_ec_query_handler* %7, i32 0, i32 0, !dbg !9358
  %8 = load %struct.acpi_ec*, %struct.acpi_ec** %ec.addr, align 8, !dbg !9358
  %list1 = getelementptr inbounds %struct.acpi_ec, %struct.acpi_ec* %8, i32 0, i32 10, !dbg !9358
  %cmp = icmp eq %struct.list_head* %node, %list1, !dbg !9358
  %lnot = xor i1 %cmp, true, !dbg !9358
  br i1 %lnot, label %for.body, label %for.end, !dbg !9357

for.body:                                         ; preds = %for.cond
  %9 = load i8, i8* %value.addr, align 1, !dbg !9360
  %conv = zext i8 %9 to i32, !dbg !9360
  %10 = load %struct.acpi_ec_query_handler*, %struct.acpi_ec_query_handler** %handler, align 8, !dbg !9363
  %query_bit = getelementptr inbounds %struct.acpi_ec_query_handler, %struct.acpi_ec_query_handler* %10, i32 0, i32 4, !dbg !9364
  %11 = load i8, i8* %query_bit, align 8, !dbg !9364
  %conv2 = zext i8 %11 to i32, !dbg !9363
  %cmp3 = icmp eq i32 %conv, %conv2, !dbg !9365
  br i1 %cmp3, label %if.then, label %if.end, !dbg !9366

if.then:                                          ; preds = %for.body
  %12 = load %struct.acpi_ec_query_handler*, %struct.acpi_ec_query_handler** %handler, align 8, !dbg !9367
  %kref = getelementptr inbounds %struct.acpi_ec_query_handler, %struct.acpi_ec_query_handler* %12, i32 0, i32 5, !dbg !9369
  call void @kref_get(%struct.kref* %kref) #11, !dbg !9370
  %13 = load %struct.acpi_ec*, %struct.acpi_ec** %ec.addr, align 8, !dbg !9371
  %mutex5 = getelementptr inbounds %struct.acpi_ec, %struct.acpi_ec* %13, i32 0, i32 8, !dbg !9372
  call void @mutex_unlock(%struct.mutex* %mutex5) #11, !dbg !9373
  %14 = load %struct.acpi_ec_query_handler*, %struct.acpi_ec_query_handler** %handler, align 8, !dbg !9374
  store %struct.acpi_ec_query_handler* %14, %struct.acpi_ec_query_handler** %retval, align 8, !dbg !9375
  br label %return, !dbg !9375

if.end:                                           ; preds = %for.body
  br label %for.inc, !dbg !9376

for.inc:                                          ; preds = %if.end
  call void @llvm.dbg.declare(metadata i8** %__mptr6, metadata !9377, metadata !DIExpression()), !dbg !9379
  %15 = load %struct.acpi_ec_query_handler*, %struct.acpi_ec_query_handler** %handler, align 8, !dbg !9379
  %node7 = getelementptr inbounds %struct.acpi_ec_query_handler, %struct.acpi_ec_query_handler* %15, i32 0, i32 0, !dbg !9379
  %next8 = getelementptr inbounds %struct.list_head, %struct.list_head* %node7, i32 0, i32 0, !dbg !9379
  %16 = load %struct.list_head*, %struct.list_head** %next8, align 8, !dbg !9379
  %17 = bitcast %struct.list_head* %16 to i8*, !dbg !9379
  store i8* %17, i8** %__mptr6, align 8, !dbg !9379
  br label %do.body9, !dbg !9379

do.body9:                                         ; preds = %for.inc
  br label %do.end10, !dbg !9380

do.end10:                                         ; preds = %do.body9
  %18 = load i8*, i8** %__mptr6, align 8, !dbg !9379
  %add.ptr12 = getelementptr i8, i8* %18, i64 0, !dbg !9379
  %19 = bitcast i8* %add.ptr12 to %struct.acpi_ec_query_handler*, !dbg !9379
  store %struct.acpi_ec_query_handler* %19, %struct.acpi_ec_query_handler** %tmp11, align 8, !dbg !9380
  %20 = load %struct.acpi_ec_query_handler*, %struct.acpi_ec_query_handler** %tmp11, align 8, !dbg !9379
  store %struct.acpi_ec_query_handler* %20, %struct.acpi_ec_query_handler** %handler, align 8, !dbg !9358
  br label %for.cond, !dbg !9358, !llvm.loop !9382

for.end:                                          ; preds = %for.cond
  %21 = load %struct.acpi_ec*, %struct.acpi_ec** %ec.addr, align 8, !dbg !9384
  %mutex13 = getelementptr inbounds %struct.acpi_ec, %struct.acpi_ec* %21, i32 0, i32 8, !dbg !9385
  call void @mutex_unlock(%struct.mutex* %mutex13) #11, !dbg !9386
  store %struct.acpi_ec_query_handler* null, %struct.acpi_ec_query_handler** %retval, align 8, !dbg !9387
  br label %return, !dbg !9387

return:                                           ; preds = %for.end, %if.then
  %22 = load %struct.acpi_ec_query_handler*, %struct.acpi_ec_query_handler** %retval, align 8, !dbg !9388
  ret %struct.acpi_ec_query_handler* %22, !dbg !9388
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @acpi_ec_delete_query(%struct.acpi_ec_query* %q) #0 !dbg !9389 {
entry:
  %q.addr = alloca %struct.acpi_ec_query*, align 8
  store %struct.acpi_ec_query* %q, %struct.acpi_ec_query** %q.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.acpi_ec_query** %q.addr, metadata !9392, metadata !DIExpression()), !dbg !9393
  %0 = load %struct.acpi_ec_query*, %struct.acpi_ec_query** %q.addr, align 8, !dbg !9394
  %tobool = icmp ne %struct.acpi_ec_query* %0, null, !dbg !9394
  br i1 %tobool, label %if.then, label %if.end4, !dbg !9396

if.then:                                          ; preds = %entry
  %1 = load %struct.acpi_ec_query*, %struct.acpi_ec_query** %q.addr, align 8, !dbg !9397
  %handler = getelementptr inbounds %struct.acpi_ec_query, %struct.acpi_ec_query* %1, i32 0, i32 2, !dbg !9400
  %2 = load %struct.acpi_ec_query_handler*, %struct.acpi_ec_query_handler** %handler, align 8, !dbg !9400
  %tobool1 = icmp ne %struct.acpi_ec_query_handler* %2, null, !dbg !9397
  br i1 %tobool1, label %if.then2, label %if.end, !dbg !9401

if.then2:                                         ; preds = %if.then
  %3 = load %struct.acpi_ec_query*, %struct.acpi_ec_query** %q.addr, align 8, !dbg !9402
  %handler3 = getelementptr inbounds %struct.acpi_ec_query, %struct.acpi_ec_query* %3, i32 0, i32 2, !dbg !9403
  %4 = load %struct.acpi_ec_query_handler*, %struct.acpi_ec_query_handler** %handler3, align 8, !dbg !9403
  call void @acpi_ec_put_query_handler(%struct.acpi_ec_query_handler* %4) #11, !dbg !9404
  br label %if.end, !dbg !9404

if.end:                                           ; preds = %if.then2, %if.then
  %5 = load %struct.acpi_ec_query*, %struct.acpi_ec_query** %q.addr, align 8, !dbg !9405
  %6 = bitcast %struct.acpi_ec_query* %5 to i8*, !dbg !9405
  call void @kfree(i8* %6) #11, !dbg !9406
  br label %if.end4, !dbg !9407

if.end4:                                          ; preds = %if.end, %entry
  ret void, !dbg !9408
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @acpi_ec_event_processor(%struct.work_struct* %work) #0 !dbg !9409 {
entry:
  %work.addr = alloca %struct.work_struct*, align 8
  %q = alloca %struct.acpi_ec_query*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.acpi_ec_query*, align 8
  %handler = alloca %struct.acpi_ec_query_handler*, align 8
  %tmp2 = alloca i32, align 4
  %tmp9 = alloca i32, align 4
  store %struct.work_struct* %work, %struct.work_struct** %work.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.work_struct** %work.addr, metadata !9410, metadata !DIExpression()), !dbg !9411
  call void @llvm.dbg.declare(metadata %struct.acpi_ec_query** %q, metadata !9412, metadata !DIExpression()), !dbg !9413
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !9414, metadata !DIExpression()), !dbg !9416
  %0 = load %struct.work_struct*, %struct.work_struct** %work.addr, align 8, !dbg !9416
  %1 = bitcast %struct.work_struct* %0 to i8*, !dbg !9416
  store i8* %1, i8** %__mptr, align 8, !dbg !9416
  br label %do.body, !dbg !9416

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !9417

do.end:                                           ; preds = %do.body
  %2 = load i8*, i8** %__mptr, align 8, !dbg !9416
  %add.ptr = getelementptr i8, i8* %2, i64 -24, !dbg !9416
  %3 = bitcast i8* %add.ptr to %struct.acpi_ec_query*, !dbg !9416
  store %struct.acpi_ec_query* %3, %struct.acpi_ec_query** %tmp, align 8, !dbg !9417
  %4 = load %struct.acpi_ec_query*, %struct.acpi_ec_query** %tmp, align 8, !dbg !9416
  store %struct.acpi_ec_query* %4, %struct.acpi_ec_query** %q, align 8, !dbg !9413
  call void @llvm.dbg.declare(metadata %struct.acpi_ec_query_handler** %handler, metadata !9419, metadata !DIExpression()), !dbg !9420
  %5 = load %struct.acpi_ec_query*, %struct.acpi_ec_query** %q, align 8, !dbg !9421
  %handler1 = getelementptr inbounds %struct.acpi_ec_query, %struct.acpi_ec_query* %5, i32 0, i32 2, !dbg !9422
  %6 = load %struct.acpi_ec_query_handler*, %struct.acpi_ec_query_handler** %handler1, align 8, !dbg !9422
  store %struct.acpi_ec_query_handler* %6, %struct.acpi_ec_query_handler** %handler, align 8, !dbg !9420
  store i32 0, i32* %tmp2, align 4, !dbg !9423
  %7 = load i32, i32* %tmp2, align 4, !dbg !9426
  %8 = load %struct.acpi_ec_query_handler*, %struct.acpi_ec_query_handler** %handler, align 8, !dbg !9427
  %func = getelementptr inbounds %struct.acpi_ec_query_handler, %struct.acpi_ec_query_handler* %8, i32 0, i32 1, !dbg !9429
  %9 = load i32 (i8*)*, i32 (i8*)** %func, align 8, !dbg !9429
  %tobool = icmp ne i32 (i8*)* %9, null, !dbg !9427
  br i1 %tobool, label %if.then, label %if.else, !dbg !9430

if.then:                                          ; preds = %do.end
  %10 = load %struct.acpi_ec_query_handler*, %struct.acpi_ec_query_handler** %handler, align 8, !dbg !9431
  %func3 = getelementptr inbounds %struct.acpi_ec_query_handler, %struct.acpi_ec_query_handler* %10, i32 0, i32 1, !dbg !9432
  %11 = load i32 (i8*)*, i32 (i8*)** %func3, align 8, !dbg !9432
  %12 = load %struct.acpi_ec_query_handler*, %struct.acpi_ec_query_handler** %handler, align 8, !dbg !9433
  %data = getelementptr inbounds %struct.acpi_ec_query_handler, %struct.acpi_ec_query_handler* %12, i32 0, i32 3, !dbg !9434
  %13 = load i8*, i8** %data, align 8, !dbg !9434
  %call = call i32 %11(i8* %13) #11, !dbg !9431
  br label %if.end8, !dbg !9431

if.else:                                          ; preds = %do.end
  %14 = load %struct.acpi_ec_query_handler*, %struct.acpi_ec_query_handler** %handler, align 8, !dbg !9435
  %handle = getelementptr inbounds %struct.acpi_ec_query_handler, %struct.acpi_ec_query_handler* %14, i32 0, i32 2, !dbg !9437
  %15 = load i8*, i8** %handle, align 8, !dbg !9437
  %tobool4 = icmp ne i8* %15, null, !dbg !9435
  br i1 %tobool4, label %if.then5, label %if.end, !dbg !9438

if.then5:                                         ; preds = %if.else
  %16 = load %struct.acpi_ec_query_handler*, %struct.acpi_ec_query_handler** %handler, align 8, !dbg !9439
  %handle6 = getelementptr inbounds %struct.acpi_ec_query_handler, %struct.acpi_ec_query_handler* %16, i32 0, i32 2, !dbg !9440
  %17 = load i8*, i8** %handle6, align 8, !dbg !9440
  %call7 = call i32 @acpi_evaluate_object(i8* %17, i8* null, %struct.acpi_object_list* null, %struct.acpi_buffer* null) #11, !dbg !9441
  br label %if.end, !dbg !9441

if.end:                                           ; preds = %if.then5, %if.else
  br label %if.end8

if.end8:                                          ; preds = %if.end, %if.then
  store i32 0, i32* %tmp9, align 4, !dbg !9442
  %18 = load i32, i32* %tmp9, align 4, !dbg !9445
  %19 = load %struct.acpi_ec_query*, %struct.acpi_ec_query** %q, align 8, !dbg !9446
  call void @acpi_ec_delete_query(%struct.acpi_ec_query* %19) #11, !dbg !9447
  ret void, !dbg !9448
}

; Function Attrs: noredzone
declare dso_local i32 @acpi_evaluate_object(i8*, i8*, %struct.acpi_object_list*, %struct.acpi_buffer*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @kref_get(%struct.kref* %kref) #0 !dbg !9449 {
entry:
  %kref.addr = alloca %struct.kref*, align 8
  store %struct.kref* %kref, %struct.kref** %kref.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.kref** %kref.addr, metadata !9450, metadata !DIExpression()), !dbg !9451
  %0 = load %struct.kref*, %struct.kref** %kref.addr, align 8, !dbg !9452
  %refcount = getelementptr inbounds %struct.kref, %struct.kref* %0, i32 0, i32 0, !dbg !9453
  call void @refcount_inc(%struct.refcount_struct* %refcount) #11, !dbg !9454
  ret void, !dbg !9455
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @refcount_inc(%struct.refcount_struct* %r) #0 !dbg !9456 {
entry:
  %r.addr = alloca %struct.refcount_struct*, align 8
  store %struct.refcount_struct* %r, %struct.refcount_struct** %r.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.refcount_struct** %r.addr, metadata !9459, metadata !DIExpression()), !dbg !9460
  %0 = load %struct.refcount_struct*, %struct.refcount_struct** %r.addr, align 8, !dbg !9461
  call void @__refcount_inc(%struct.refcount_struct* %0, i32* null) #11, !dbg !9462
  ret void, !dbg !9463
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @__refcount_inc(%struct.refcount_struct* %r, i32* %oldp) #0 !dbg !9464 {
entry:
  %r.addr = alloca %struct.refcount_struct*, align 8
  %oldp.addr = alloca i32*, align 8
  store %struct.refcount_struct* %r, %struct.refcount_struct** %r.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.refcount_struct** %r.addr, metadata !9467, metadata !DIExpression()), !dbg !9468
  store i32* %oldp, i32** %oldp.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %oldp.addr, metadata !9469, metadata !DIExpression()), !dbg !9470
  %0 = load %struct.refcount_struct*, %struct.refcount_struct** %r.addr, align 8, !dbg !9471
  %1 = load i32*, i32** %oldp.addr, align 8, !dbg !9472
  call void @__refcount_add(i32 1, %struct.refcount_struct* %0, i32* %1) #11, !dbg !9473
  ret void, !dbg !9474
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @__refcount_add(i32 %i, %struct.refcount_struct* %r, i32* %oldp) #0 !dbg !9475 {
entry:
  %i.addr.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %i.addr.i.i, metadata !9478, metadata !DIExpression()), !dbg !9480
  %v.addr.i1.i = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i1.i, metadata !9484, metadata !DIExpression()), !dbg !9485
  %__ret.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %__ret.i.i, metadata !9486, metadata !DIExpression()), !dbg !9488
  %tmp.i.i = alloca i32, align 4
  %v.addr.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %v.addr.i.i, metadata !8130, metadata !DIExpression()), !dbg !9489
  %size.addr.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i, metadata !8134, metadata !DIExpression()), !dbg !9491
  %i.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %i.addr.i, metadata !9492, metadata !DIExpression()), !dbg !9493
  %v.addr.i = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i, metadata !9494, metadata !DIExpression()), !dbg !9495
  %i.addr = alloca i32, align 4
  %r.addr = alloca %struct.refcount_struct*, align 8
  %oldp.addr = alloca i32*, align 8
  %old = alloca i32, align 4
  store i32 %i, i32* %i.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %i.addr, metadata !9496, metadata !DIExpression()), !dbg !9497
  store %struct.refcount_struct* %r, %struct.refcount_struct** %r.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.refcount_struct** %r.addr, metadata !9498, metadata !DIExpression()), !dbg !9499
  store i32* %oldp, i32** %oldp.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %oldp.addr, metadata !9500, metadata !DIExpression()), !dbg !9501
  call void @llvm.dbg.declare(metadata i32* %old, metadata !9502, metadata !DIExpression()), !dbg !9503
  %0 = load i32, i32* %i.addr, align 4, !dbg !9504
  %1 = load %struct.refcount_struct*, %struct.refcount_struct** %r.addr, align 8, !dbg !9505
  %refs = getelementptr inbounds %struct.refcount_struct, %struct.refcount_struct* %1, i32 0, i32 0, !dbg !9506
  store i32 %0, i32* %i.addr.i, align 4
  store %struct.atomic_t* %refs, %struct.atomic_t** %v.addr.i, align 8
  %2 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i, align 8, !dbg !9507
  %3 = bitcast %struct.atomic_t* %2 to i8*, !dbg !9507
  store i8* %3, i8** %v.addr.i.i, align 8
  store i64 4, i64* %size.addr.i.i, align 8
  %4 = load i8*, i8** %v.addr.i.i, align 8, !dbg !9508
  %5 = load i64, i64* %size.addr.i.i, align 8, !dbg !9509
  %conv.i.i = trunc i64 %5 to i32, !dbg !9509
  %call.i.i = call zeroext i1 @kasan_check_write(i8* %4, i32 %conv.i.i) #12, !dbg !9510
  %6 = load i8*, i8** %v.addr.i.i, align 8, !dbg !9511
  %7 = load i64, i64* %size.addr.i.i, align 8, !dbg !9511
  call void @kcsan_check_access(i8* %6, i64 %7, i32 7) #12, !dbg !9511
  %8 = load i32, i32* %i.addr.i, align 4, !dbg !9512
  %9 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i, align 8, !dbg !9513
  store i32 %8, i32* %i.addr.i.i, align 4
  store %struct.atomic_t* %9, %struct.atomic_t** %v.addr.i1.i, align 8
  %10 = load i32, i32* %i.addr.i.i, align 4, !dbg !9488
  store i32 %10, i32* %__ret.i.i, align 4, !dbg !9488
  %11 = load i32, i32* %__ret.i.i, align 4, !dbg !9488
  %12 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i1.i, align 8, !dbg !9488
  %counter.i.i = getelementptr inbounds %struct.atomic_t, %struct.atomic_t* %12, i32 0, i32 0, !dbg !9488
  %13 = call i32 asm sideeffect "xaddl $0, $1\0A", "=r,=*m,0,*m,~{memory},~{cc},~{dirflag},~{fpsr},~{flags}"(i32* %counter.i.i, i32 %11, i32* %counter.i.i) #7, !dbg !9488, !srcloc !9514
  store i32 %13, i32* %__ret.i.i, align 4, !dbg !9488
  %14 = load i32, i32* %__ret.i.i, align 4, !dbg !9488
  store i32 %14, i32* %tmp.i.i, align 4, !dbg !9488
  %15 = load i32, i32* %tmp.i.i, align 4, !dbg !9488
  store i32 %15, i32* %old, align 4, !dbg !9503
  %16 = load i32*, i32** %oldp.addr, align 8, !dbg !9515
  %tobool = icmp ne i32* %16, null, !dbg !9515
  br i1 %tobool, label %if.then, label %if.end, !dbg !9517

if.then:                                          ; preds = %entry
  %17 = load i32, i32* %old, align 4, !dbg !9518
  %18 = load i32*, i32** %oldp.addr, align 8, !dbg !9519
  store i32 %17, i32* %18, align 4, !dbg !9520
  br label %if.end, !dbg !9521

if.end:                                           ; preds = %if.then, %entry
  %19 = load i32, i32* %old, align 4, !dbg !9522
  %tobool1 = icmp ne i32 %19, 0, !dbg !9522
  %lnot = xor i1 %tobool1, true, !dbg !9522
  %lnot2 = xor i1 %lnot, true, !dbg !9522
  %lnot3 = xor i1 %lnot2, true, !dbg !9522
  %lnot.ext = zext i1 %lnot3 to i32, !dbg !9522
  %conv = sext i32 %lnot.ext to i64, !dbg !9522
  %tobool4 = icmp ne i64 %conv, 0, !dbg !9522
  br i1 %tobool4, label %if.then5, label %if.else, !dbg !9524

if.then5:                                         ; preds = %if.end
  %20 = load %struct.refcount_struct*, %struct.refcount_struct** %r.addr, align 8, !dbg !9525
  call void @refcount_warn_saturate(%struct.refcount_struct* %20, i32 2) #11, !dbg !9526
  br label %if.end17, !dbg !9526

if.else:                                          ; preds = %if.end
  %21 = load i32, i32* %old, align 4, !dbg !9527
  %cmp = icmp slt i32 %21, 0, !dbg !9527
  br i1 %cmp, label %lor.end, label %lor.rhs, !dbg !9527

lor.rhs:                                          ; preds = %if.else
  %22 = load i32, i32* %old, align 4, !dbg !9527
  %23 = load i32, i32* %i.addr, align 4, !dbg !9527
  %add = add i32 %22, %23, !dbg !9527
  %cmp7 = icmp slt i32 %add, 0, !dbg !9527
  br label %lor.end, !dbg !9527

lor.end:                                          ; preds = %lor.rhs, %if.else
  %24 = phi i1 [ true, %if.else ], [ %cmp7, %lor.rhs ]
  %lnot9 = xor i1 %24, true, !dbg !9527
  %lnot11 = xor i1 %lnot9, true, !dbg !9527
  %lnot.ext12 = zext i1 %lnot11 to i32, !dbg !9527
  %conv13 = sext i32 %lnot.ext12 to i64, !dbg !9527
  %tobool14 = icmp ne i64 %conv13, 0, !dbg !9527
  br i1 %tobool14, label %if.then15, label %if.end16, !dbg !9529

if.then15:                                        ; preds = %lor.end
  %25 = load %struct.refcount_struct*, %struct.refcount_struct** %r.addr, align 8, !dbg !9530
  call void @refcount_warn_saturate(%struct.refcount_struct* %25, i32 1) #11, !dbg !9531
  br label %if.end16, !dbg !9531

if.end16:                                         ; preds = %if.then15, %lor.end
  br label %if.end17

if.end17:                                         ; preds = %if.end16, %if.then5
  ret void, !dbg !9532
}

; Function Attrs: noredzone
declare dso_local i32 @acpi_walk_resources(i8*, i8*, i32 (%struct.acpi_resource*, i8*)*, i8*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @ec_parse_io_ports(%struct.acpi_resource* %resource, i8* %context) #0 !dbg !9533 {
entry:
  %retval = alloca i32, align 4
  %resource.addr = alloca %struct.acpi_resource*, align 8
  %context.addr = alloca i8*, align 8
  %ec = alloca %struct.acpi_ec*, align 8
  store %struct.acpi_resource* %resource, %struct.acpi_resource** %resource.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.acpi_resource** %resource.addr, metadata !9897, metadata !DIExpression()), !dbg !9898
  store i8* %context, i8** %context.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %context.addr, metadata !9899, metadata !DIExpression()), !dbg !9900
  call void @llvm.dbg.declare(metadata %struct.acpi_ec** %ec, metadata !9901, metadata !DIExpression()), !dbg !9902
  %0 = load i8*, i8** %context.addr, align 8, !dbg !9903
  %1 = bitcast i8* %0 to %struct.acpi_ec*, !dbg !9903
  store %struct.acpi_ec* %1, %struct.acpi_ec** %ec, align 8, !dbg !9902
  %2 = load %struct.acpi_resource*, %struct.acpi_resource** %resource.addr, align 8, !dbg !9904
  %type = getelementptr inbounds %struct.acpi_resource, %struct.acpi_resource* %2, i32 0, i32 0, !dbg !9906
  %3 = load i32, i32* %type, align 1, !dbg !9906
  %cmp = icmp ne i32 %3, 4, !dbg !9907
  br i1 %cmp, label %if.then, label %if.end, !dbg !9908

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !9909
  br label %return, !dbg !9909

if.end:                                           ; preds = %entry
  %4 = load %struct.acpi_ec*, %struct.acpi_ec** %ec, align 8, !dbg !9910
  %data_addr = getelementptr inbounds %struct.acpi_ec, %struct.acpi_ec* %4, i32 0, i32 4, !dbg !9912
  %5 = load i64, i64* %data_addr, align 8, !dbg !9912
  %cmp1 = icmp eq i64 %5, 0, !dbg !9913
  br i1 %cmp1, label %if.then2, label %if.else, !dbg !9914

if.then2:                                         ; preds = %if.end
  %6 = load %struct.acpi_resource*, %struct.acpi_resource** %resource.addr, align 8, !dbg !9915
  %data = getelementptr inbounds %struct.acpi_resource, %struct.acpi_resource* %6, i32 0, i32 2, !dbg !9916
  %io = bitcast %union.acpi_resource_data* %data to %struct.acpi_resource_io*, !dbg !9917
  %minimum = getelementptr inbounds %struct.acpi_resource_io, %struct.acpi_resource_io* %io, i32 0, i32 3, !dbg !9918
  %7 = load i16, i16* %minimum, align 1, !dbg !9918
  %conv = zext i16 %7 to i64, !dbg !9915
  %8 = load %struct.acpi_ec*, %struct.acpi_ec** %ec, align 8, !dbg !9919
  %data_addr3 = getelementptr inbounds %struct.acpi_ec, %struct.acpi_ec* %8, i32 0, i32 4, !dbg !9920
  store i64 %conv, i64* %data_addr3, align 8, !dbg !9921
  br label %if.end14, !dbg !9919

if.else:                                          ; preds = %if.end
  %9 = load %struct.acpi_ec*, %struct.acpi_ec** %ec, align 8, !dbg !9922
  %command_addr = getelementptr inbounds %struct.acpi_ec, %struct.acpi_ec* %9, i32 0, i32 3, !dbg !9924
  %10 = load i64, i64* %command_addr, align 8, !dbg !9924
  %cmp4 = icmp eq i64 %10, 0, !dbg !9925
  br i1 %cmp4, label %if.then6, label %if.else12, !dbg !9926

if.then6:                                         ; preds = %if.else
  %11 = load %struct.acpi_resource*, %struct.acpi_resource** %resource.addr, align 8, !dbg !9927
  %data7 = getelementptr inbounds %struct.acpi_resource, %struct.acpi_resource* %11, i32 0, i32 2, !dbg !9928
  %io8 = bitcast %union.acpi_resource_data* %data7 to %struct.acpi_resource_io*, !dbg !9929
  %minimum9 = getelementptr inbounds %struct.acpi_resource_io, %struct.acpi_resource_io* %io8, i32 0, i32 3, !dbg !9930
  %12 = load i16, i16* %minimum9, align 1, !dbg !9930
  %conv10 = zext i16 %12 to i64, !dbg !9927
  %13 = load %struct.acpi_ec*, %struct.acpi_ec** %ec, align 8, !dbg !9931
  %command_addr11 = getelementptr inbounds %struct.acpi_ec, %struct.acpi_ec* %13, i32 0, i32 3, !dbg !9932
  store i64 %conv10, i64* %command_addr11, align 8, !dbg !9933
  br label %if.end13, !dbg !9931

if.else12:                                        ; preds = %if.else
  store i32 16387, i32* %retval, align 4, !dbg !9934
  br label %return, !dbg !9934

if.end13:                                         ; preds = %if.then6
  br label %if.end14

if.end14:                                         ; preds = %if.end13, %if.then2
  store i32 0, i32* %retval, align 4, !dbg !9935
  br label %return, !dbg !9935

return:                                           ; preds = %if.end14, %if.else12, %if.then
  %14 = load i32, i32* %retval, align 4, !dbg !9936
  ret i32 %14, !dbg !9936
}

; Function Attrs: noredzone
declare dso_local i32 @acpi_evaluate_integer(i8*, i8*, %struct.acpi_object_list*, i64*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @ec_install_handlers(%struct.acpi_ec* %ec, %struct.acpi_device* %device) #0 !dbg !9937 {
entry:
  %retval = alloca i32, align 4
  %ec.addr = alloca %struct.acpi_ec*, align 8
  %device.addr = alloca %struct.acpi_device*, align 8
  %status = alloca i32, align 4
  %irq = alloca i32, align 4
  %ready = alloca i8, align 1
  store %struct.acpi_ec* %ec, %struct.acpi_ec** %ec.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.acpi_ec** %ec.addr, metadata !9938, metadata !DIExpression()), !dbg !9939
  store %struct.acpi_device* %device, %struct.acpi_device** %device.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.acpi_device** %device.addr, metadata !9940, metadata !DIExpression()), !dbg !9941
  call void @llvm.dbg.declare(metadata i32* %status, metadata !9942, metadata !DIExpression()), !dbg !9943
  %0 = load %struct.acpi_ec*, %struct.acpi_ec** %ec.addr, align 8, !dbg !9944
  call void @acpi_ec_start(%struct.acpi_ec* %0, i1 zeroext false) #11, !dbg !9945
  %1 = load %struct.acpi_ec*, %struct.acpi_ec** %ec.addr, align 8, !dbg !9946
  %flags = getelementptr inbounds %struct.acpi_ec, %struct.acpi_ec* %1, i32 0, i32 6, !dbg !9948
  %call = call zeroext i1 @test_bit(i64 4, i64* %flags) #11, !dbg !9949
  br i1 %call, label %if.end4, label %if.then, !dbg !9950

if.then:                                          ; preds = %entry
  %2 = load %struct.acpi_ec*, %struct.acpi_ec** %ec.addr, align 8, !dbg !9951
  call void @acpi_ec_enter_noirq(%struct.acpi_ec* %2) #11, !dbg !9953
  %3 = load %struct.acpi_ec*, %struct.acpi_ec** %ec.addr, align 8, !dbg !9954
  %handle = getelementptr inbounds %struct.acpi_ec, %struct.acpi_ec* %3, i32 0, i32 0, !dbg !9955
  %4 = load i8*, i8** %handle, align 8, !dbg !9955
  %5 = load %struct.acpi_ec*, %struct.acpi_ec** %ec.addr, align 8, !dbg !9956
  %6 = bitcast %struct.acpi_ec* %5 to i8*, !dbg !9956
  %call1 = call i32 @acpi_install_address_space_handler(i8* %4, i8 zeroext 3, i32 (i32, i64, i32, i64*, i8*, i8*)* @acpi_ec_space_handler, i32 (i8*, i32, i8*, i8**)* null, i8* %6) #11, !dbg !9957
  store i32 %call1, i32* %status, align 4, !dbg !9958
  %7 = load i32, i32* %status, align 4, !dbg !9959
  %tobool = icmp ne i32 %7, 0, !dbg !9959
  br i1 %tobool, label %if.then2, label %if.end, !dbg !9961

if.then2:                                         ; preds = %if.then
  %8 = load %struct.acpi_ec*, %struct.acpi_ec** %ec.addr, align 8, !dbg !9962
  call void @acpi_ec_stop(%struct.acpi_ec* %8, i1 zeroext false) #11, !dbg !9964
  store i32 -19, i32* %retval, align 4, !dbg !9965
  br label %return, !dbg !9965

if.end:                                           ; preds = %if.then
  %9 = load %struct.acpi_ec*, %struct.acpi_ec** %ec.addr, align 8, !dbg !9966
  %flags3 = getelementptr inbounds %struct.acpi_ec, %struct.acpi_ec* %9, i32 0, i32 6, !dbg !9967
  call void @set_bit(i64 4, i64* %flags3) #11, !dbg !9968
  br label %if.end4, !dbg !9969

if.end4:                                          ; preds = %if.end, %entry
  %10 = load %struct.acpi_device*, %struct.acpi_device** %device.addr, align 8, !dbg !9970
  %tobool5 = icmp ne %struct.acpi_device* %10, null, !dbg !9970
  br i1 %tobool5, label %if.end7, label %if.then6, !dbg !9972

if.then6:                                         ; preds = %if.end4
  store i32 0, i32* %retval, align 4, !dbg !9973
  br label %return, !dbg !9973

if.end7:                                          ; preds = %if.end4
  %11 = load %struct.acpi_ec*, %struct.acpi_ec** %ec.addr, align 8, !dbg !9974
  %gpe = getelementptr inbounds %struct.acpi_ec, %struct.acpi_ec* %11, i32 0, i32 1, !dbg !9976
  %12 = load i32, i32* %gpe, align 8, !dbg !9976
  %cmp = icmp slt i32 %12, 0, !dbg !9977
  br i1 %cmp, label %if.then8, label %if.end17, !dbg !9978

if.then8:                                         ; preds = %if.end7
  call void @llvm.dbg.declare(metadata i32* %irq, metadata !9979, metadata !DIExpression()), !dbg !9981
  %13 = load %struct.acpi_device*, %struct.acpi_device** %device.addr, align 8, !dbg !9982
  %call9 = call i32 @acpi_dev_gpio_irq_get(%struct.acpi_device* %13, i32 0) #11, !dbg !9983
  store i32 %call9, i32* %irq, align 4, !dbg !9981
  %14 = load i32, i32* %irq, align 4, !dbg !9984
  %cmp10 = icmp eq i32 %14, -517, !dbg !9986
  br i1 %cmp10, label %if.then11, label %if.else, !dbg !9987

if.then11:                                        ; preds = %if.then8
  store i32 -517, i32* %retval, align 4, !dbg !9988
  br label %return, !dbg !9988

if.else:                                          ; preds = %if.then8
  %15 = load i32, i32* %irq, align 4, !dbg !9989
  %cmp12 = icmp sge i32 %15, 0, !dbg !9991
  br i1 %cmp12, label %if.then13, label %if.end15, !dbg !9992

if.then13:                                        ; preds = %if.else
  %16 = load i32, i32* %irq, align 4, !dbg !9993
  %17 = load %struct.acpi_ec*, %struct.acpi_ec** %ec.addr, align 8, !dbg !9994
  %irq14 = getelementptr inbounds %struct.acpi_ec, %struct.acpi_ec* %17, i32 0, i32 2, !dbg !9995
  store i32 %16, i32* %irq14, align 4, !dbg !9996
  br label %if.end15, !dbg !9994

if.end15:                                         ; preds = %if.then13, %if.else
  br label %if.end16

if.end16:                                         ; preds = %if.end15
  br label %if.end17, !dbg !9997

if.end17:                                         ; preds = %if.end16, %if.end7
  %18 = load %struct.acpi_ec*, %struct.acpi_ec** %ec.addr, align 8, !dbg !9998
  %flags18 = getelementptr inbounds %struct.acpi_ec, %struct.acpi_ec* %18, i32 0, i32 6, !dbg !10000
  %call19 = call zeroext i1 @test_bit(i64 5, i64* %flags18) #11, !dbg !10001
  br i1 %call19, label %if.end24, label %if.then20, !dbg !10002

if.then20:                                        ; preds = %if.end17
  %19 = load %struct.acpi_ec*, %struct.acpi_ec** %ec.addr, align 8, !dbg !10003
  %handle21 = getelementptr inbounds %struct.acpi_ec, %struct.acpi_ec* %19, i32 0, i32 0, !dbg !10005
  %20 = load i8*, i8** %handle21, align 8, !dbg !10005
  %21 = load %struct.acpi_ec*, %struct.acpi_ec** %ec.addr, align 8, !dbg !10006
  %22 = bitcast %struct.acpi_ec* %21 to i8*, !dbg !10006
  %call22 = call i32 @acpi_walk_namespace(i32 8, i8* %20, i32 1, i32 (i8*, i32, i8*, i8**)* @acpi_ec_register_query_methods, i32 (i8*, i32, i8*, i8**)* null, i8* %22, i8** null) #11, !dbg !10007
  %23 = load %struct.acpi_ec*, %struct.acpi_ec** %ec.addr, align 8, !dbg !10008
  %flags23 = getelementptr inbounds %struct.acpi_ec, %struct.acpi_ec* %23, i32 0, i32 6, !dbg !10009
  call void @set_bit(i64 5, i64* %flags23) #11, !dbg !10010
  br label %if.end24, !dbg !10011

if.end24:                                         ; preds = %if.then20, %if.end17
  %24 = load %struct.acpi_ec*, %struct.acpi_ec** %ec.addr, align 8, !dbg !10012
  %flags25 = getelementptr inbounds %struct.acpi_ec, %struct.acpi_ec* %24, i32 0, i32 6, !dbg !10014
  %call26 = call zeroext i1 @test_bit(i64 3, i64* %flags25) #11, !dbg !10015
  br i1 %call26, label %if.end44, label %if.then27, !dbg !10016

if.then27:                                        ; preds = %if.end24
  call void @llvm.dbg.declare(metadata i8* %ready, metadata !10017, metadata !DIExpression()), !dbg !10019
  store i8 0, i8* %ready, align 1, !dbg !10019
  %25 = load %struct.acpi_ec*, %struct.acpi_ec** %ec.addr, align 8, !dbg !10020
  %gpe28 = getelementptr inbounds %struct.acpi_ec, %struct.acpi_ec* %25, i32 0, i32 1, !dbg !10022
  %26 = load i32, i32* %gpe28, align 8, !dbg !10022
  %cmp29 = icmp sge i32 %26, 0, !dbg !10023
  br i1 %cmp29, label %if.then30, label %if.else32, !dbg !10024

if.then30:                                        ; preds = %if.then27
  %27 = load %struct.acpi_ec*, %struct.acpi_ec** %ec.addr, align 8, !dbg !10025
  %call31 = call zeroext i1 @install_gpe_event_handler(%struct.acpi_ec* %27) #11, !dbg !10026
  %frombool = zext i1 %call31 to i8, !dbg !10027
  store i8 %frombool, i8* %ready, align 1, !dbg !10027
  br label %if.end39, !dbg !10028

if.else32:                                        ; preds = %if.then27
  %28 = load %struct.acpi_ec*, %struct.acpi_ec** %ec.addr, align 8, !dbg !10029
  %irq33 = getelementptr inbounds %struct.acpi_ec, %struct.acpi_ec* %28, i32 0, i32 2, !dbg !10031
  %29 = load i32, i32* %irq33, align 4, !dbg !10031
  %cmp34 = icmp sge i32 %29, 0, !dbg !10032
  br i1 %cmp34, label %if.then35, label %if.end38, !dbg !10033

if.then35:                                        ; preds = %if.else32
  %30 = load %struct.acpi_ec*, %struct.acpi_ec** %ec.addr, align 8, !dbg !10034
  %call36 = call zeroext i1 @install_gpio_irq_event_handler(%struct.acpi_ec* %30) #11, !dbg !10035
  %frombool37 = zext i1 %call36 to i8, !dbg !10036
  store i8 %frombool37, i8* %ready, align 1, !dbg !10036
  br label %if.end38, !dbg !10037

if.end38:                                         ; preds = %if.then35, %if.else32
  br label %if.end39

if.end39:                                         ; preds = %if.end38, %if.then30
  %31 = load i8, i8* %ready, align 1, !dbg !10038
  %tobool40 = trunc i8 %31 to i1, !dbg !10038
  br i1 %tobool40, label %if.then41, label %if.end43, !dbg !10040

if.then41:                                        ; preds = %if.end39
  %32 = load %struct.acpi_ec*, %struct.acpi_ec** %ec.addr, align 8, !dbg !10041
  %flags42 = getelementptr inbounds %struct.acpi_ec, %struct.acpi_ec* %32, i32 0, i32 6, !dbg !10043
  call void @set_bit(i64 3, i64* %flags42) #11, !dbg !10044
  %33 = load %struct.acpi_ec*, %struct.acpi_ec** %ec.addr, align 8, !dbg !10045
  call void @acpi_ec_leave_noirq(%struct.acpi_ec* %33) #11, !dbg !10046
  br label %if.end43, !dbg !10047

if.end43:                                         ; preds = %if.then41, %if.end39
  br label %if.end44, !dbg !10048

if.end44:                                         ; preds = %if.end43, %if.end24
  %34 = load %struct.acpi_ec*, %struct.acpi_ec** %ec.addr, align 8, !dbg !10049
  call void @acpi_ec_enable_event(%struct.acpi_ec* %34) #11, !dbg !10050
  store i32 0, i32* %retval, align 4, !dbg !10051
  br label %return, !dbg !10051

return:                                           ; preds = %if.end44, %if.then11, %if.then6, %if.then2
  %35 = load i32, i32* %retval, align 4, !dbg !10052
  ret i32 %35, !dbg !10052
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @acpi_ec_enter_noirq(%struct.acpi_ec* %ec) #0 !dbg !10053 {
entry:
  %lock.addr.i21 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i21, metadata !5875, metadata !DIExpression()), !dbg !10054
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !5881, metadata !DIExpression()), !dbg !10056
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !5860, metadata !DIExpression()), !dbg !10057
  %ec.addr = alloca %struct.acpi_ec*, align 8
  %flags = alloca i64, align 8
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__dummy5 = alloca i64, align 8
  %__dummy26 = alloca i64, align 8
  %tmp9 = alloca i32, align 4
  store %struct.acpi_ec* %ec, %struct.acpi_ec** %ec.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.acpi_ec** %ec.addr, metadata !10064, metadata !DIExpression()), !dbg !10065
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !10066, metadata !DIExpression()), !dbg !10067
  br label %do.body, !dbg !10068

do.body:                                          ; preds = %entry
  br label %do.body1, !dbg !10069

do.body1:                                         ; preds = %do.body
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !10070, metadata !DIExpression()), !dbg !10072
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !10073, metadata !DIExpression()), !dbg !10072
  %cmp = icmp eq i64* %__dummy, %__dummy2, !dbg !10072
  %conv = zext i1 %cmp to i32, !dbg !10072
  store i32 1, i32* %tmp, align 4, !dbg !10072
  %0 = load i32, i32* %tmp, align 4, !dbg !10072
  br label %do.body2, !dbg !10074

do.body2:                                         ; preds = %do.body1
  br label %do.body3, !dbg !10075

do.body3:                                         ; preds = %do.body2
  br label %do.body4, !dbg !10076

do.body4:                                         ; preds = %do.body3
  call void @llvm.dbg.declare(metadata i64* %__dummy5, metadata !10078, metadata !DIExpression()), !dbg !10081
  call void @llvm.dbg.declare(metadata i64* %__dummy26, metadata !10082, metadata !DIExpression()), !dbg !10081
  %cmp7 = icmp eq i64* %__dummy5, %__dummy26, !dbg !10081
  %conv8 = zext i1 %cmp7 to i32, !dbg !10081
  store i32 1, i32* %tmp9, align 4, !dbg !10081
  %1 = load i32, i32* %tmp9, align 4, !dbg !10081
  %call = call i64 @arch_local_irq_save() #11, !dbg !10083
  store i64 %call, i64* %flags, align 8, !dbg !10083
  br label %do.end, !dbg !10083

do.end:                                           ; preds = %do.body4
  br label %do.end10, !dbg !10076

do.end10:                                         ; preds = %do.end
  br label %do.body11, !dbg !10075

do.body11:                                        ; preds = %do.end10
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !10084, !srcloc !10085
  br label %do.body12, !dbg !10084

do.body12:                                        ; preds = %do.body11
  %2 = load %struct.acpi_ec*, %struct.acpi_ec** %ec.addr, align 8, !dbg !10086
  %lock = getelementptr inbounds %struct.acpi_ec, %struct.acpi_ec* %2, i32 0, i32 12, !dbg !10086
  store %struct.spinlock* %lock, %struct.spinlock** %lock.addr.i, align 8
  %3 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !10087
  %4 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %3, i32 0, i32 0, !dbg !10088
  %rlock.i = bitcast %union.anon.0* %4 to %struct.raw_spinlock*, !dbg !10088
  br label %do.end14, !dbg !10086

do.end14:                                         ; preds = %do.body12
  br label %do.end15, !dbg !10084

do.end15:                                         ; preds = %do.end14
  br label %do.end16, !dbg !10075

do.end16:                                         ; preds = %do.end15
  br label %do.end17, !dbg !10074

do.end17:                                         ; preds = %do.end16
  br label %do.end18, !dbg !10069

do.end18:                                         ; preds = %do.end17
  %5 = load %struct.acpi_ec*, %struct.acpi_ec** %ec.addr, align 8, !dbg !10089
  %busy_polling = getelementptr inbounds %struct.acpi_ec, %struct.acpi_ec* %5, i32 0, i32 16, !dbg !10090
  store i8 1, i8* %busy_polling, align 8, !dbg !10091
  %6 = load %struct.acpi_ec*, %struct.acpi_ec** %ec.addr, align 8, !dbg !10092
  %polling_guard = getelementptr inbounds %struct.acpi_ec, %struct.acpi_ec* %6, i32 0, i32 17, !dbg !10093
  store i32 0, i32* %polling_guard, align 4, !dbg !10094
  %call19 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.18, i64 0, i64 0)) #13, !dbg !10095
  %7 = load %struct.acpi_ec*, %struct.acpi_ec** %ec.addr, align 8, !dbg !10096
  %lock20 = getelementptr inbounds %struct.acpi_ec, %struct.acpi_ec* %7, i32 0, i32 12, !dbg !10097
  %8 = load i64, i64* %flags, align 8, !dbg !10098
  store %struct.spinlock* %lock20, %struct.spinlock** %lock.addr.i21, align 8
  store i64 %8, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !372, metadata !5933, metadata !DIExpression()) #7, !dbg !10099
  call void @llvm.dbg.declare(metadata !372, metadata !5937, metadata !DIExpression()) #7, !dbg !10099
  store i32 1, i32* %tmp.i, align 4, !dbg !10099
  %9 = load i32, i32* %tmp.i, align 4, !dbg !10099
  call void @llvm.dbg.declare(metadata !372, metadata !5938, metadata !DIExpression()) #7, !dbg !10100
  call void @llvm.dbg.declare(metadata !372, metadata !5944, metadata !DIExpression()) #7, !dbg !10100
  store i32 1, i32* %tmp8.i, align 4, !dbg !10100
  %10 = load i32, i32* %tmp8.i, align 4, !dbg !10100
  %11 = load i64, i64* %flags.addr.i, align 8, !dbg !10101
  call void @arch_local_irq_restore(i64 %11) #12, !dbg !10101
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !10102, !srcloc !5948
  %12 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i21, align 8, !dbg !10103
  %13 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %12, i32 0, i32 0, !dbg !10103
  %rlock.i22 = bitcast %union.anon.0* %13 to %struct.raw_spinlock*, !dbg !10103
  ret void, !dbg !10104
}

; Function Attrs: noredzone
declare dso_local i32 @acpi_install_address_space_handler(i8*, i8 zeroext, i32 (i32, i64, i32, i64*, i8*, i8*)*, i32 (i8*, i32, i8*, i8**)*, i8*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @acpi_ec_space_handler(i32 %function, i64 %address, i32 %bits, i64* %value64, i8* %handler_context, i8* %region_context) #0 !dbg !10105 {
entry:
  %retval = alloca i32, align 4
  %function.addr = alloca i32, align 4
  %address.addr = alloca i64, align 8
  %bits.addr = alloca i32, align 4
  %value64.addr = alloca i64*, align 8
  %handler_context.addr = alloca i8*, align 8
  %region_context.addr = alloca i8*, align 8
  %ec = alloca %struct.acpi_ec*, align 8
  %result = alloca i32, align 4
  %i = alloca i32, align 4
  %bytes = alloca i32, align 4
  %value = alloca i8*, align 8
  store i32 %function, i32* %function.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %function.addr, metadata !10109, metadata !DIExpression()), !dbg !10110
  store i64 %address, i64* %address.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %address.addr, metadata !10111, metadata !DIExpression()), !dbg !10112
  store i32 %bits, i32* %bits.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %bits.addr, metadata !10113, metadata !DIExpression()), !dbg !10114
  store i64* %value64, i64** %value64.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %value64.addr, metadata !10115, metadata !DIExpression()), !dbg !10116
  store i8* %handler_context, i8** %handler_context.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %handler_context.addr, metadata !10117, metadata !DIExpression()), !dbg !10118
  store i8* %region_context, i8** %region_context.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %region_context.addr, metadata !10119, metadata !DIExpression()), !dbg !10120
  call void @llvm.dbg.declare(metadata %struct.acpi_ec** %ec, metadata !10121, metadata !DIExpression()), !dbg !10122
  %0 = load i8*, i8** %handler_context.addr, align 8, !dbg !10123
  %1 = bitcast i8* %0 to %struct.acpi_ec*, !dbg !10123
  store %struct.acpi_ec* %1, %struct.acpi_ec** %ec, align 8, !dbg !10122
  call void @llvm.dbg.declare(metadata i32* %result, metadata !10124, metadata !DIExpression()), !dbg !10125
  store i32 0, i32* %result, align 4, !dbg !10125
  call void @llvm.dbg.declare(metadata i32* %i, metadata !10126, metadata !DIExpression()), !dbg !10127
  call void @llvm.dbg.declare(metadata i32* %bytes, metadata !10128, metadata !DIExpression()), !dbg !10129
  %2 = load i32, i32* %bits.addr, align 4, !dbg !10130
  %div = udiv i32 %2, 8, !dbg !10131
  store i32 %div, i32* %bytes, align 4, !dbg !10129
  call void @llvm.dbg.declare(metadata i8** %value, metadata !10132, metadata !DIExpression()), !dbg !10133
  %3 = load i64*, i64** %value64.addr, align 8, !dbg !10134
  %4 = bitcast i64* %3 to i8*, !dbg !10135
  store i8* %4, i8** %value, align 8, !dbg !10133
  %5 = load i64, i64* %address.addr, align 8, !dbg !10136
  %cmp = icmp ugt i64 %5, 255, !dbg !10138
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !10139

lor.lhs.false:                                    ; preds = %entry
  %6 = load i8*, i8** %value, align 8, !dbg !10140
  %tobool = icmp ne i8* %6, null, !dbg !10140
  br i1 %tobool, label %lor.lhs.false1, label %if.then, !dbg !10141

lor.lhs.false1:                                   ; preds = %lor.lhs.false
  %7 = load i8*, i8** %handler_context.addr, align 8, !dbg !10142
  %tobool2 = icmp ne i8* %7, null, !dbg !10142
  br i1 %tobool2, label %if.end, label %if.then, !dbg !10143

if.then:                                          ; preds = %lor.lhs.false1, %lor.lhs.false, %entry
  store i32 4097, i32* %retval, align 4, !dbg !10144
  br label %return, !dbg !10144

if.end:                                           ; preds = %lor.lhs.false1
  %8 = load i32, i32* %function.addr, align 4, !dbg !10145
  %cmp3 = icmp ne i32 %8, 0, !dbg !10147
  br i1 %cmp3, label %land.lhs.true, label %if.end6, !dbg !10148

land.lhs.true:                                    ; preds = %if.end
  %9 = load i32, i32* %function.addr, align 4, !dbg !10149
  %cmp4 = icmp ne i32 %9, 1, !dbg !10150
  br i1 %cmp4, label %if.then5, label %if.end6, !dbg !10151

if.then5:                                         ; preds = %land.lhs.true
  store i32 4097, i32* %retval, align 4, !dbg !10152
  br label %return, !dbg !10152

if.end6:                                          ; preds = %land.lhs.true, %if.end
  %10 = load %struct.acpi_ec*, %struct.acpi_ec** %ec, align 8, !dbg !10153
  %busy_polling = getelementptr inbounds %struct.acpi_ec, %struct.acpi_ec* %10, i32 0, i32 16, !dbg !10155
  %11 = load i8, i8* %busy_polling, align 8, !dbg !10155
  %tobool7 = trunc i8 %11 to i1, !dbg !10155
  br i1 %tobool7, label %if.then10, label %lor.lhs.false8, !dbg !10156

lor.lhs.false8:                                   ; preds = %if.end6
  %12 = load i32, i32* %bits.addr, align 4, !dbg !10157
  %cmp9 = icmp ugt i32 %12, 8, !dbg !10158
  br i1 %cmp9, label %if.then10, label %if.end11, !dbg !10159

if.then10:                                        ; preds = %lor.lhs.false8, %if.end6
  %13 = load %struct.acpi_ec*, %struct.acpi_ec** %ec, align 8, !dbg !10160
  %call = call i32 @acpi_ec_burst_enable(%struct.acpi_ec* %13) #11, !dbg !10161
  br label %if.end11, !dbg !10161

if.end11:                                         ; preds = %if.then10, %lor.lhs.false8
  store i32 0, i32* %i, align 4, !dbg !10162
  br label %for.cond, !dbg !10164

for.cond:                                         ; preds = %for.inc, %if.end11
  %14 = load i32, i32* %i, align 4, !dbg !10165
  %15 = load i32, i32* %bytes, align 4, !dbg !10167
  %cmp12 = icmp slt i32 %14, %15, !dbg !10168
  br i1 %cmp12, label %for.body, label %for.end, !dbg !10169

for.body:                                         ; preds = %for.cond
  %16 = load i32, i32* %function.addr, align 4, !dbg !10170
  %cmp13 = icmp eq i32 %16, 0, !dbg !10171
  br i1 %cmp13, label %cond.true, label %cond.false, !dbg !10172

cond.true:                                        ; preds = %for.body
  %17 = load %struct.acpi_ec*, %struct.acpi_ec** %ec, align 8, !dbg !10173
  %18 = load i64, i64* %address.addr, align 8, !dbg !10174
  %conv = trunc i64 %18 to i8, !dbg !10174
  %19 = load i8*, i8** %value, align 8, !dbg !10175
  %call14 = call i32 @acpi_ec_read(%struct.acpi_ec* %17, i8 zeroext %conv, i8* %19) #11, !dbg !10176
  br label %cond.end, !dbg !10172

cond.false:                                       ; preds = %for.body
  %20 = load %struct.acpi_ec*, %struct.acpi_ec** %ec, align 8, !dbg !10177
  %21 = load i64, i64* %address.addr, align 8, !dbg !10178
  %conv15 = trunc i64 %21 to i8, !dbg !10178
  %22 = load i8*, i8** %value, align 8, !dbg !10179
  %23 = load i8, i8* %22, align 1, !dbg !10180
  %call16 = call i32 @acpi_ec_write(%struct.acpi_ec* %20, i8 zeroext %conv15, i8 zeroext %23) #11, !dbg !10181
  br label %cond.end, !dbg !10172

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call14, %cond.true ], [ %call16, %cond.false ], !dbg !10172
  store i32 %cond, i32* %result, align 4, !dbg !10182
  br label %for.inc, !dbg !10183

for.inc:                                          ; preds = %cond.end
  %24 = load i32, i32* %i, align 4, !dbg !10184
  %inc = add i32 %24, 1, !dbg !10184
  store i32 %inc, i32* %i, align 4, !dbg !10184
  %25 = load i64, i64* %address.addr, align 8, !dbg !10185
  %inc17 = add i64 %25, 1, !dbg !10185
  store i64 %inc17, i64* %address.addr, align 8, !dbg !10185
  %26 = load i8*, i8** %value, align 8, !dbg !10186
  %incdec.ptr = getelementptr i8, i8* %26, i32 1, !dbg !10186
  store i8* %incdec.ptr, i8** %value, align 8, !dbg !10186
  br label %for.cond, !dbg !10187, !llvm.loop !10188

for.end:                                          ; preds = %for.cond
  %27 = load %struct.acpi_ec*, %struct.acpi_ec** %ec, align 8, !dbg !10190
  %busy_polling18 = getelementptr inbounds %struct.acpi_ec, %struct.acpi_ec* %27, i32 0, i32 16, !dbg !10192
  %28 = load i8, i8* %busy_polling18, align 8, !dbg !10192
  %tobool19 = trunc i8 %28 to i1, !dbg !10192
  br i1 %tobool19, label %if.then24, label %lor.lhs.false21, !dbg !10193

lor.lhs.false21:                                  ; preds = %for.end
  %29 = load i32, i32* %bits.addr, align 4, !dbg !10194
  %cmp22 = icmp ugt i32 %29, 8, !dbg !10195
  br i1 %cmp22, label %if.then24, label %if.end26, !dbg !10196

if.then24:                                        ; preds = %lor.lhs.false21, %for.end
  %30 = load %struct.acpi_ec*, %struct.acpi_ec** %ec, align 8, !dbg !10197
  %call25 = call i32 @acpi_ec_burst_disable(%struct.acpi_ec* %30) #11, !dbg !10198
  br label %if.end26, !dbg !10198

if.end26:                                         ; preds = %if.then24, %lor.lhs.false21
  %31 = load i32, i32* %result, align 4, !dbg !10199
  switch i32 %31, label %sw.default [
    i32 -22, label %sw.bb
    i32 -19, label %sw.bb27
    i32 -62, label %sw.bb28
  ], !dbg !10200

sw.bb:                                            ; preds = %if.end26
  store i32 4097, i32* %retval, align 4, !dbg !10201
  br label %return, !dbg !10201

sw.bb27:                                          ; preds = %if.end26
  store i32 5, i32* %retval, align 4, !dbg !10203
  br label %return, !dbg !10203

sw.bb28:                                          ; preds = %if.end26
  store i32 17, i32* %retval, align 4, !dbg !10204
  br label %return, !dbg !10204

sw.default:                                       ; preds = %if.end26
  store i32 0, i32* %retval, align 4, !dbg !10205
  br label %return, !dbg !10205

return:                                           ; preds = %sw.default, %sw.bb28, %sw.bb27, %sw.bb, %if.then5, %if.then
  %32 = load i32, i32* %retval, align 4, !dbg !10206
  ret i32 %32, !dbg !10206
}

; Function Attrs: noredzone
declare dso_local i32 @acpi_dev_gpio_irq_get(%struct.acpi_device*, i32) #2

; Function Attrs: noredzone
declare dso_local i32 @acpi_walk_namespace(i32, i8*, i32, i32 (i8*, i32, i8*, i8**)*, i32 (i8*, i32, i8*, i8**)*, i8*, i8**) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @acpi_ec_register_query_methods(i8* %handle, i32 %level, i8* %context, i8** %return_value) #0 !dbg !10207 {
entry:
  %handle.addr = alloca i8*, align 8
  %level.addr = alloca i32, align 4
  %context.addr = alloca i8*, align 8
  %return_value.addr = alloca i8**, align 8
  %node_name = alloca [5 x i8], align 1
  %buffer = alloca %struct.acpi_buffer, align 8
  %ec = alloca %struct.acpi_ec*, align 8
  %value = alloca i32, align 4
  %status = alloca i32, align 4
  store i8* %handle, i8** %handle.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %handle.addr, metadata !10208, metadata !DIExpression()), !dbg !10209
  store i32 %level, i32* %level.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %level.addr, metadata !10210, metadata !DIExpression()), !dbg !10211
  store i8* %context, i8** %context.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %context.addr, metadata !10212, metadata !DIExpression()), !dbg !10213
  store i8** %return_value, i8*** %return_value.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %return_value.addr, metadata !10214, metadata !DIExpression()), !dbg !10215
  call void @llvm.dbg.declare(metadata [5 x i8]* %node_name, metadata !10216, metadata !DIExpression()), !dbg !10218
  call void @llvm.dbg.declare(metadata %struct.acpi_buffer* %buffer, metadata !10219, metadata !DIExpression()), !dbg !10224
  %length = getelementptr inbounds %struct.acpi_buffer, %struct.acpi_buffer* %buffer, i32 0, i32 0, !dbg !10225
  store i64 5, i64* %length, align 8, !dbg !10225
  %pointer = getelementptr inbounds %struct.acpi_buffer, %struct.acpi_buffer* %buffer, i32 0, i32 1, !dbg !10225
  %arraydecay = getelementptr inbounds [5 x i8], [5 x i8]* %node_name, i64 0, i64 0, !dbg !10226
  store i8* %arraydecay, i8** %pointer, align 8, !dbg !10225
  call void @llvm.dbg.declare(metadata %struct.acpi_ec** %ec, metadata !10227, metadata !DIExpression()), !dbg !10228
  %0 = load i8*, i8** %context.addr, align 8, !dbg !10229
  %1 = bitcast i8* %0 to %struct.acpi_ec*, !dbg !10229
  store %struct.acpi_ec* %1, %struct.acpi_ec** %ec, align 8, !dbg !10228
  call void @llvm.dbg.declare(metadata i32* %value, metadata !10230, metadata !DIExpression()), !dbg !10231
  store i32 0, i32* %value, align 4, !dbg !10231
  call void @llvm.dbg.declare(metadata i32* %status, metadata !10232, metadata !DIExpression()), !dbg !10233
  %2 = load i8*, i8** %handle.addr, align 8, !dbg !10234
  %call = call i32 @acpi_get_name(i8* %2, i32 1, %struct.acpi_buffer* %buffer) #11, !dbg !10235
  store i32 %call, i32* %status, align 4, !dbg !10236
  %3 = load i32, i32* %status, align 4, !dbg !10237
  %tobool = icmp ne i32 %3, 0, !dbg !10237
  br i1 %tobool, label %if.end, label %land.lhs.true, !dbg !10239

land.lhs.true:                                    ; preds = %entry
  %arraydecay1 = getelementptr inbounds [5 x i8], [5 x i8]* %node_name, i64 0, i64 0, !dbg !10240
  %call2 = call i32 (i8*, i8*, ...) @sscanf(i8* %arraydecay1, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.19, i64 0, i64 0), i32* %value) #11, !dbg !10241
  %cmp = icmp eq i32 %call2, 1, !dbg !10242
  br i1 %cmp, label %if.then, label %if.end, !dbg !10243

if.then:                                          ; preds = %land.lhs.true
  %4 = load %struct.acpi_ec*, %struct.acpi_ec** %ec, align 8, !dbg !10244
  %5 = load i32, i32* %value, align 4, !dbg !10245
  %conv = trunc i32 %5 to i8, !dbg !10245
  %6 = load i8*, i8** %handle.addr, align 8, !dbg !10246
  %call3 = call i32 @acpi_ec_add_query_handler(%struct.acpi_ec* %4, i8 zeroext %conv, i8* %6, i32 (i8*)* null, i8* null) #11, !dbg !10247
  br label %if.end, !dbg !10247

if.end:                                           ; preds = %if.then, %land.lhs.true, %entry
  ret i32 0, !dbg !10248
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @install_gpe_event_handler(%struct.acpi_ec* %ec) #0 !dbg !10249 {
entry:
  %retval = alloca i1, align 1
  %ec.addr = alloca %struct.acpi_ec*, align 8
  %status = alloca i32, align 4
  store %struct.acpi_ec* %ec, %struct.acpi_ec** %ec.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.acpi_ec** %ec.addr, metadata !10250, metadata !DIExpression()), !dbg !10251
  call void @llvm.dbg.declare(metadata i32* %status, metadata !10252, metadata !DIExpression()), !dbg !10253
  %0 = load %struct.acpi_ec*, %struct.acpi_ec** %ec.addr, align 8, !dbg !10254
  %gpe = getelementptr inbounds %struct.acpi_ec, %struct.acpi_ec* %0, i32 0, i32 1, !dbg !10255
  %1 = load i32, i32* %gpe, align 8, !dbg !10255
  %2 = load %struct.acpi_ec*, %struct.acpi_ec** %ec.addr, align 8, !dbg !10256
  %3 = bitcast %struct.acpi_ec* %2 to i8*, !dbg !10256
  %call = call i32 @acpi_install_gpe_raw_handler(i8* null, i32 %1, i32 0, i32 (i8*, i32, i8*)* @acpi_ec_gpe_handler, i8* %3) #11, !dbg !10257
  store i32 %call, i32* %status, align 4, !dbg !10258
  %4 = load i32, i32* %status, align 4, !dbg !10259
  %tobool = icmp ne i32 %4, 0, !dbg !10259
  br i1 %tobool, label %if.then, label %if.end, !dbg !10261

if.then:                                          ; preds = %entry
  store i1 false, i1* %retval, align 1, !dbg !10262
  br label %return, !dbg !10262

if.end:                                           ; preds = %entry
  %5 = load %struct.acpi_ec*, %struct.acpi_ec** %ec.addr, align 8, !dbg !10263
  %flags = getelementptr inbounds %struct.acpi_ec, %struct.acpi_ec* %5, i32 0, i32 6, !dbg !10265
  %call1 = call zeroext i1 @test_bit(i64 6, i64* %flags) #11, !dbg !10266
  br i1 %call1, label %land.lhs.true, label %if.end3, !dbg !10267

land.lhs.true:                                    ; preds = %if.end
  %6 = load %struct.acpi_ec*, %struct.acpi_ec** %ec.addr, align 8, !dbg !10268
  %reference_count = getelementptr inbounds %struct.acpi_ec, %struct.acpi_ec* %6, i32 0, i32 7, !dbg !10269
  %7 = load i64, i64* %reference_count, align 8, !dbg !10269
  %cmp = icmp uge i64 %7, 1, !dbg !10270
  br i1 %cmp, label %if.then2, label %if.end3, !dbg !10271

if.then2:                                         ; preds = %land.lhs.true
  %8 = load %struct.acpi_ec*, %struct.acpi_ec** %ec.addr, align 8, !dbg !10272
  call void @acpi_ec_enable_gpe(%struct.acpi_ec* %8, i1 zeroext true) #11, !dbg !10273
  br label %if.end3, !dbg !10273

if.end3:                                          ; preds = %if.then2, %land.lhs.true, %if.end
  store i1 true, i1* %retval, align 1, !dbg !10274
  br label %return, !dbg !10274

return:                                           ; preds = %if.end3, %if.then
  %9 = load i1, i1* %retval, align 1, !dbg !10275
  ret i1 %9, !dbg !10275
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @install_gpio_irq_event_handler(%struct.acpi_ec* %ec) #0 !dbg !10276 {
entry:
  %ec.addr = alloca %struct.acpi_ec*, align 8
  store %struct.acpi_ec* %ec, %struct.acpi_ec** %ec.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.acpi_ec** %ec.addr, metadata !10277, metadata !DIExpression()), !dbg !10278
  %0 = load %struct.acpi_ec*, %struct.acpi_ec** %ec.addr, align 8, !dbg !10279
  %irq = getelementptr inbounds %struct.acpi_ec, %struct.acpi_ec* %0, i32 0, i32 2, !dbg !10280
  %1 = load i32, i32* %irq, align 4, !dbg !10280
  %2 = load %struct.acpi_ec*, %struct.acpi_ec** %ec.addr, align 8, !dbg !10281
  %3 = bitcast %struct.acpi_ec* %2 to i8*, !dbg !10281
  %call = call i32 @request_irq(i32 %1, i32 (i32, i8*)* @acpi_ec_irq_handler, i64 128, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.20, i64 0, i64 0), i8* %3) #11, !dbg !10282
  %cmp = icmp sge i32 %call, 0, !dbg !10283
  ret i1 %cmp, !dbg !10284
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @acpi_ec_leave_noirq(%struct.acpi_ec* %ec) #0 !dbg !10285 {
entry:
  %lock.addr.i21 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i21, metadata !5875, metadata !DIExpression()), !dbg !10286
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !5881, metadata !DIExpression()), !dbg !10288
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !5860, metadata !DIExpression()), !dbg !10289
  %ec.addr = alloca %struct.acpi_ec*, align 8
  %flags = alloca i64, align 8
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__dummy5 = alloca i64, align 8
  %__dummy26 = alloca i64, align 8
  %tmp9 = alloca i32, align 4
  store %struct.acpi_ec* %ec, %struct.acpi_ec** %ec.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.acpi_ec** %ec.addr, metadata !10296, metadata !DIExpression()), !dbg !10297
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !10298, metadata !DIExpression()), !dbg !10299
  br label %do.body, !dbg !10300

do.body:                                          ; preds = %entry
  br label %do.body1, !dbg !10301

do.body1:                                         ; preds = %do.body
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !10302, metadata !DIExpression()), !dbg !10304
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !10305, metadata !DIExpression()), !dbg !10304
  %cmp = icmp eq i64* %__dummy, %__dummy2, !dbg !10304
  %conv = zext i1 %cmp to i32, !dbg !10304
  store i32 1, i32* %tmp, align 4, !dbg !10304
  %0 = load i32, i32* %tmp, align 4, !dbg !10304
  br label %do.body2, !dbg !10306

do.body2:                                         ; preds = %do.body1
  br label %do.body3, !dbg !10307

do.body3:                                         ; preds = %do.body2
  br label %do.body4, !dbg !10308

do.body4:                                         ; preds = %do.body3
  call void @llvm.dbg.declare(metadata i64* %__dummy5, metadata !10310, metadata !DIExpression()), !dbg !10313
  call void @llvm.dbg.declare(metadata i64* %__dummy26, metadata !10314, metadata !DIExpression()), !dbg !10313
  %cmp7 = icmp eq i64* %__dummy5, %__dummy26, !dbg !10313
  %conv8 = zext i1 %cmp7 to i32, !dbg !10313
  store i32 1, i32* %tmp9, align 4, !dbg !10313
  %1 = load i32, i32* %tmp9, align 4, !dbg !10313
  %call = call i64 @arch_local_irq_save() #11, !dbg !10315
  store i64 %call, i64* %flags, align 8, !dbg !10315
  br label %do.end, !dbg !10315

do.end:                                           ; preds = %do.body4
  br label %do.end10, !dbg !10308

do.end10:                                         ; preds = %do.end
  br label %do.body11, !dbg !10307

do.body11:                                        ; preds = %do.end10
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !10316, !srcloc !10317
  br label %do.body12, !dbg !10316

do.body12:                                        ; preds = %do.body11
  %2 = load %struct.acpi_ec*, %struct.acpi_ec** %ec.addr, align 8, !dbg !10318
  %lock = getelementptr inbounds %struct.acpi_ec, %struct.acpi_ec* %2, i32 0, i32 12, !dbg !10318
  store %struct.spinlock* %lock, %struct.spinlock** %lock.addr.i, align 8
  %3 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !10319
  %4 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %3, i32 0, i32 0, !dbg !10320
  %rlock.i = bitcast %union.anon.0* %4 to %struct.raw_spinlock*, !dbg !10320
  br label %do.end14, !dbg !10318

do.end14:                                         ; preds = %do.body12
  br label %do.end15, !dbg !10316

do.end15:                                         ; preds = %do.end14
  br label %do.end16, !dbg !10307

do.end16:                                         ; preds = %do.end15
  br label %do.end17, !dbg !10306

do.end17:                                         ; preds = %do.end16
  br label %do.end18, !dbg !10301

do.end18:                                         ; preds = %do.end17
  %5 = load i8, i8* @ec_busy_polling, align 1, !dbg !10321
  %tobool = trunc i8 %5 to i1, !dbg !10321
  %6 = load %struct.acpi_ec*, %struct.acpi_ec** %ec.addr, align 8, !dbg !10322
  %busy_polling = getelementptr inbounds %struct.acpi_ec, %struct.acpi_ec* %6, i32 0, i32 16, !dbg !10323
  %frombool = zext i1 %tobool to i8, !dbg !10324
  store i8 %frombool, i8* %busy_polling, align 8, !dbg !10324
  %7 = load i32, i32* @ec_polling_guard, align 4, !dbg !10325
  %8 = load %struct.acpi_ec*, %struct.acpi_ec** %ec.addr, align 8, !dbg !10326
  %polling_guard = getelementptr inbounds %struct.acpi_ec, %struct.acpi_ec* %8, i32 0, i32 17, !dbg !10327
  store i32 %7, i32* %polling_guard, align 4, !dbg !10328
  %call19 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.21, i64 0, i64 0)) #13, !dbg !10329
  %9 = load %struct.acpi_ec*, %struct.acpi_ec** %ec.addr, align 8, !dbg !10330
  %lock20 = getelementptr inbounds %struct.acpi_ec, %struct.acpi_ec* %9, i32 0, i32 12, !dbg !10331
  %10 = load i64, i64* %flags, align 8, !dbg !10332
  store %struct.spinlock* %lock20, %struct.spinlock** %lock.addr.i21, align 8
  store i64 %10, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !372, metadata !5933, metadata !DIExpression()) #7, !dbg !10333
  call void @llvm.dbg.declare(metadata !372, metadata !5937, metadata !DIExpression()) #7, !dbg !10333
  store i32 1, i32* %tmp.i, align 4, !dbg !10333
  %11 = load i32, i32* %tmp.i, align 4, !dbg !10333
  call void @llvm.dbg.declare(metadata !372, metadata !5938, metadata !DIExpression()) #7, !dbg !10334
  call void @llvm.dbg.declare(metadata !372, metadata !5944, metadata !DIExpression()) #7, !dbg !10334
  store i32 1, i32* %tmp8.i, align 4, !dbg !10334
  %12 = load i32, i32* %tmp8.i, align 4, !dbg !10334
  %13 = load i64, i64* %flags.addr.i, align 8, !dbg !10335
  call void @arch_local_irq_restore(i64 %13) #12, !dbg !10335
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !10336, !srcloc !5948
  %14 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i21, align 8, !dbg !10337
  %15 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %14, i32 0, i32 0, !dbg !10337
  %rlock.i22 = bitcast %union.anon.0* %15 to %struct.raw_spinlock*, !dbg !10337
  ret void, !dbg !10338
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @acpi_ec_enable_event(%struct.acpi_ec* %ec) #0 !dbg !10339 {
entry:
  %lock.addr.i23 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i23, metadata !5875, metadata !DIExpression()), !dbg !10340
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !5881, metadata !DIExpression()), !dbg !10342
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !5860, metadata !DIExpression()), !dbg !10343
  %ec.addr = alloca %struct.acpi_ec*, align 8
  %flags = alloca i64, align 8
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__dummy5 = alloca i64, align 8
  %__dummy26 = alloca i64, align 8
  %tmp9 = alloca i32, align 4
  store %struct.acpi_ec* %ec, %struct.acpi_ec** %ec.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.acpi_ec** %ec.addr, metadata !10350, metadata !DIExpression()), !dbg !10351
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !10352, metadata !DIExpression()), !dbg !10353
  br label %do.body, !dbg !10354

do.body:                                          ; preds = %entry
  br label %do.body1, !dbg !10355

do.body1:                                         ; preds = %do.body
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !10356, metadata !DIExpression()), !dbg !10358
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !10359, metadata !DIExpression()), !dbg !10358
  %cmp = icmp eq i64* %__dummy, %__dummy2, !dbg !10358
  %conv = zext i1 %cmp to i32, !dbg !10358
  store i32 1, i32* %tmp, align 4, !dbg !10358
  %0 = load i32, i32* %tmp, align 4, !dbg !10358
  br label %do.body2, !dbg !10360

do.body2:                                         ; preds = %do.body1
  br label %do.body3, !dbg !10361

do.body3:                                         ; preds = %do.body2
  br label %do.body4, !dbg !10362

do.body4:                                         ; preds = %do.body3
  call void @llvm.dbg.declare(metadata i64* %__dummy5, metadata !10364, metadata !DIExpression()), !dbg !10367
  call void @llvm.dbg.declare(metadata i64* %__dummy26, metadata !10368, metadata !DIExpression()), !dbg !10367
  %cmp7 = icmp eq i64* %__dummy5, %__dummy26, !dbg !10367
  %conv8 = zext i1 %cmp7 to i32, !dbg !10367
  store i32 1, i32* %tmp9, align 4, !dbg !10367
  %1 = load i32, i32* %tmp9, align 4, !dbg !10367
  %call = call i64 @arch_local_irq_save() #11, !dbg !10369
  store i64 %call, i64* %flags, align 8, !dbg !10369
  br label %do.end, !dbg !10369

do.end:                                           ; preds = %do.body4
  br label %do.end10, !dbg !10362

do.end10:                                         ; preds = %do.end
  br label %do.body11, !dbg !10361

do.body11:                                        ; preds = %do.end10
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !10370, !srcloc !10371
  br label %do.body12, !dbg !10370

do.body12:                                        ; preds = %do.body11
  %2 = load %struct.acpi_ec*, %struct.acpi_ec** %ec.addr, align 8, !dbg !10372
  %lock = getelementptr inbounds %struct.acpi_ec, %struct.acpi_ec* %2, i32 0, i32 12, !dbg !10372
  store %struct.spinlock* %lock, %struct.spinlock** %lock.addr.i, align 8
  %3 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !10373
  %4 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %3, i32 0, i32 0, !dbg !10374
  %rlock.i = bitcast %union.anon.0* %4 to %struct.raw_spinlock*, !dbg !10374
  br label %do.end14, !dbg !10372

do.end14:                                         ; preds = %do.body12
  br label %do.end15, !dbg !10370

do.end15:                                         ; preds = %do.end14
  br label %do.end16, !dbg !10361

do.end16:                                         ; preds = %do.end15
  br label %do.end17, !dbg !10360

do.end17:                                         ; preds = %do.end16
  br label %do.end18, !dbg !10355

do.end18:                                         ; preds = %do.end17
  %5 = load %struct.acpi_ec*, %struct.acpi_ec** %ec.addr, align 8, !dbg !10375
  %call19 = call zeroext i1 @acpi_ec_started(%struct.acpi_ec* %5) #11, !dbg !10377
  br i1 %call19, label %if.then, label %if.end, !dbg !10378

if.then:                                          ; preds = %do.end18
  %6 = load %struct.acpi_ec*, %struct.acpi_ec** %ec.addr, align 8, !dbg !10379
  call void @__acpi_ec_enable_event(%struct.acpi_ec* %6) #11, !dbg !10380
  br label %if.end, !dbg !10380

if.end:                                           ; preds = %if.then, %do.end18
  %7 = load %struct.acpi_ec*, %struct.acpi_ec** %ec.addr, align 8, !dbg !10381
  %lock20 = getelementptr inbounds %struct.acpi_ec, %struct.acpi_ec* %7, i32 0, i32 12, !dbg !10382
  %8 = load i64, i64* %flags, align 8, !dbg !10383
  store %struct.spinlock* %lock20, %struct.spinlock** %lock.addr.i23, align 8
  store i64 %8, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !372, metadata !5933, metadata !DIExpression()) #7, !dbg !10384
  call void @llvm.dbg.declare(metadata !372, metadata !5937, metadata !DIExpression()) #7, !dbg !10384
  store i32 1, i32* %tmp.i, align 4, !dbg !10384
  %9 = load i32, i32* %tmp.i, align 4, !dbg !10384
  call void @llvm.dbg.declare(metadata !372, metadata !5938, metadata !DIExpression()) #7, !dbg !10385
  call void @llvm.dbg.declare(metadata !372, metadata !5944, metadata !DIExpression()) #7, !dbg !10385
  store i32 1, i32* %tmp8.i, align 4, !dbg !10385
  %10 = load i32, i32* %tmp8.i, align 4, !dbg !10385
  %11 = load i64, i64* %flags.addr.i, align 8, !dbg !10386
  call void @arch_local_irq_restore(i64 %11) #12, !dbg !10386
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !10387, !srcloc !5948
  %12 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i23, align 8, !dbg !10388
  %13 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %12, i32 0, i32 0, !dbg !10388
  %rlock.i24 = bitcast %union.anon.0* %13 to %struct.raw_spinlock*, !dbg !10388
  %14 = load i32, i32* @EC_FLAGS_CLEAR_ON_RESUME, align 4, !dbg !10389
  %tobool = icmp ne i32 %14, 0, !dbg !10389
  br i1 %tobool, label %if.then21, label %if.end22, !dbg !10391

if.then21:                                        ; preds = %if.end
  %15 = load %struct.acpi_ec*, %struct.acpi_ec** %ec.addr, align 8, !dbg !10392
  call void @acpi_ec_clear(%struct.acpi_ec* %15) #11, !dbg !10393
  br label %if.end22, !dbg !10393

if.end22:                                         ; preds = %if.then21, %if.end
  ret void, !dbg !10394
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @acpi_ec_burst_enable(%struct.acpi_ec* %ec) #0 !dbg !10395 {
entry:
  %ec.addr = alloca %struct.acpi_ec*, align 8
  %d = alloca i8, align 1
  %t = alloca %struct.transaction, align 8
  store %struct.acpi_ec* %ec, %struct.acpi_ec** %ec.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.acpi_ec** %ec.addr, metadata !10396, metadata !DIExpression()), !dbg !10397
  call void @llvm.dbg.declare(metadata i8* %d, metadata !10398, metadata !DIExpression()), !dbg !10399
  call void @llvm.dbg.declare(metadata %struct.transaction* %t, metadata !10400, metadata !DIExpression()), !dbg !10401
  %wdata = getelementptr inbounds %struct.transaction, %struct.transaction* %t, i32 0, i32 0, !dbg !10402
  store i8* null, i8** %wdata, align 8, !dbg !10402
  %rdata = getelementptr inbounds %struct.transaction, %struct.transaction* %t, i32 0, i32 1, !dbg !10402
  store i8* %d, i8** %rdata, align 8, !dbg !10402
  %irq_count = getelementptr inbounds %struct.transaction, %struct.transaction* %t, i32 0, i32 2, !dbg !10402
  store i16 0, i16* %irq_count, align 8, !dbg !10402
  %command = getelementptr inbounds %struct.transaction, %struct.transaction* %t, i32 0, i32 3, !dbg !10402
  store i8 -126, i8* %command, align 2, !dbg !10402
  %wi = getelementptr inbounds %struct.transaction, %struct.transaction* %t, i32 0, i32 4, !dbg !10402
  store i8 0, i8* %wi, align 1, !dbg !10402
  %ri = getelementptr inbounds %struct.transaction, %struct.transaction* %t, i32 0, i32 5, !dbg !10402
  store i8 0, i8* %ri, align 4, !dbg !10402
  %wlen = getelementptr inbounds %struct.transaction, %struct.transaction* %t, i32 0, i32 6, !dbg !10402
  store i8 0, i8* %wlen, align 1, !dbg !10402
  %rlen = getelementptr inbounds %struct.transaction, %struct.transaction* %t, i32 0, i32 7, !dbg !10402
  store i8 1, i8* %rlen, align 2, !dbg !10402
  %flags = getelementptr inbounds %struct.transaction, %struct.transaction* %t, i32 0, i32 8, !dbg !10402
  store i8 0, i8* %flags, align 1, !dbg !10402
  %0 = load %struct.acpi_ec*, %struct.acpi_ec** %ec.addr, align 8, !dbg !10403
  %call = call i32 @acpi_ec_transaction(%struct.acpi_ec* %0, %struct.transaction* %t) #11, !dbg !10404
  ret i32 %call, !dbg !10405
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @acpi_ec_burst_disable(%struct.acpi_ec* %ec) #0 !dbg !10406 {
entry:
  %ec.addr = alloca %struct.acpi_ec*, align 8
  %t = alloca %struct.transaction, align 8
  store %struct.acpi_ec* %ec, %struct.acpi_ec** %ec.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.acpi_ec** %ec.addr, metadata !10407, metadata !DIExpression()), !dbg !10408
  call void @llvm.dbg.declare(metadata %struct.transaction* %t, metadata !10409, metadata !DIExpression()), !dbg !10410
  %0 = bitcast %struct.transaction* %t to i8*, !dbg !10410
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %0, i8* align 8 bitcast (%struct.transaction* @__const.acpi_ec_burst_disable.t to i8*), i64 24, i1 false), !dbg !10410
  %1 = load %struct.acpi_ec*, %struct.acpi_ec** %ec.addr, align 8, !dbg !10411
  %call = call zeroext i8 @acpi_ec_read_status(%struct.acpi_ec* %1) #11, !dbg !10412
  %conv = zext i8 %call to i32, !dbg !10412
  %and = and i32 %conv, 16, !dbg !10413
  %tobool = icmp ne i32 %and, 0, !dbg !10413
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !10414

cond.true:                                        ; preds = %entry
  %2 = load %struct.acpi_ec*, %struct.acpi_ec** %ec.addr, align 8, !dbg !10415
  %call1 = call i32 @acpi_ec_transaction(%struct.acpi_ec* %2, %struct.transaction* %t) #11, !dbg !10416
  br label %cond.end, !dbg !10414

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !10414

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call1, %cond.true ], [ 0, %cond.false ], !dbg !10414
  ret i32 %cond, !dbg !10417
}

; Function Attrs: noredzone
declare dso_local i32 @acpi_get_name(i8*, i32, %struct.acpi_buffer*) #2

; Function Attrs: noredzone
declare dso_local i32 @sscanf(i8*, i8*, ...) #2

; Function Attrs: noredzone
declare dso_local i32 @acpi_install_gpe_raw_handler(i8*, i32, i32, i32 (i8*, i32, i8*)*, i8*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @acpi_ec_gpe_handler(i8* %gpe_device, i32 %gpe_number, i8* %data) #0 !dbg !10418 {
entry:
  %gpe_device.addr = alloca i8*, align 8
  %gpe_number.addr = alloca i32, align 4
  %data.addr = alloca i8*, align 8
  store i8* %gpe_device, i8** %gpe_device.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %gpe_device.addr, metadata !10421, metadata !DIExpression()), !dbg !10422
  store i32 %gpe_number, i32* %gpe_number.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %gpe_number.addr, metadata !10423, metadata !DIExpression()), !dbg !10424
  store i8* %data, i8** %data.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %data.addr, metadata !10425, metadata !DIExpression()), !dbg !10426
  %0 = load i8*, i8** %data.addr, align 8, !dbg !10427
  %1 = bitcast i8* %0 to %struct.acpi_ec*, !dbg !10427
  call void @acpi_ec_handle_interrupt(%struct.acpi_ec* %1) #11, !dbg !10428
  ret i32 1, !dbg !10429
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @acpi_ec_handle_interrupt(%struct.acpi_ec* %ec) #0 !dbg !10430 {
entry:
  %lock.addr.i20 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i20, metadata !5875, metadata !DIExpression()), !dbg !10431
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !5881, metadata !DIExpression()), !dbg !10433
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !5860, metadata !DIExpression()), !dbg !10434
  %ec.addr = alloca %struct.acpi_ec*, align 8
  %flags = alloca i64, align 8
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__dummy5 = alloca i64, align 8
  %__dummy26 = alloca i64, align 8
  %tmp9 = alloca i32, align 4
  store %struct.acpi_ec* %ec, %struct.acpi_ec** %ec.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.acpi_ec** %ec.addr, metadata !10441, metadata !DIExpression()), !dbg !10442
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !10443, metadata !DIExpression()), !dbg !10444
  br label %do.body, !dbg !10445

do.body:                                          ; preds = %entry
  br label %do.body1, !dbg !10446

do.body1:                                         ; preds = %do.body
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !10447, metadata !DIExpression()), !dbg !10449
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !10450, metadata !DIExpression()), !dbg !10449
  %cmp = icmp eq i64* %__dummy, %__dummy2, !dbg !10449
  %conv = zext i1 %cmp to i32, !dbg !10449
  store i32 1, i32* %tmp, align 4, !dbg !10449
  %0 = load i32, i32* %tmp, align 4, !dbg !10449
  br label %do.body2, !dbg !10451

do.body2:                                         ; preds = %do.body1
  br label %do.body3, !dbg !10452

do.body3:                                         ; preds = %do.body2
  br label %do.body4, !dbg !10453

do.body4:                                         ; preds = %do.body3
  call void @llvm.dbg.declare(metadata i64* %__dummy5, metadata !10455, metadata !DIExpression()), !dbg !10458
  call void @llvm.dbg.declare(metadata i64* %__dummy26, metadata !10459, metadata !DIExpression()), !dbg !10458
  %cmp7 = icmp eq i64* %__dummy5, %__dummy26, !dbg !10458
  %conv8 = zext i1 %cmp7 to i32, !dbg !10458
  store i32 1, i32* %tmp9, align 4, !dbg !10458
  %1 = load i32, i32* %tmp9, align 4, !dbg !10458
  %call = call i64 @arch_local_irq_save() #11, !dbg !10460
  store i64 %call, i64* %flags, align 8, !dbg !10460
  br label %do.end, !dbg !10460

do.end:                                           ; preds = %do.body4
  br label %do.end10, !dbg !10453

do.end10:                                         ; preds = %do.end
  br label %do.body11, !dbg !10452

do.body11:                                        ; preds = %do.end10
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !10461, !srcloc !10462
  br label %do.body12, !dbg !10461

do.body12:                                        ; preds = %do.body11
  %2 = load %struct.acpi_ec*, %struct.acpi_ec** %ec.addr, align 8, !dbg !10463
  %lock = getelementptr inbounds %struct.acpi_ec, %struct.acpi_ec* %2, i32 0, i32 12, !dbg !10463
  store %struct.spinlock* %lock, %struct.spinlock** %lock.addr.i, align 8
  %3 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !10464
  %4 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %3, i32 0, i32 0, !dbg !10465
  %rlock.i = bitcast %union.anon.0* %4 to %struct.raw_spinlock*, !dbg !10465
  br label %do.end14, !dbg !10463

do.end14:                                         ; preds = %do.body12
  br label %do.end15, !dbg !10461

do.end15:                                         ; preds = %do.end14
  br label %do.end16, !dbg !10452

do.end16:                                         ; preds = %do.end15
  br label %do.end17, !dbg !10451

do.end17:                                         ; preds = %do.end16
  br label %do.end18, !dbg !10446

do.end18:                                         ; preds = %do.end17
  %5 = load %struct.acpi_ec*, %struct.acpi_ec** %ec.addr, align 8, !dbg !10466
  call void @advance_transaction(%struct.acpi_ec* %5) #11, !dbg !10467
  %6 = load %struct.acpi_ec*, %struct.acpi_ec** %ec.addr, align 8, !dbg !10468
  %lock19 = getelementptr inbounds %struct.acpi_ec, %struct.acpi_ec* %6, i32 0, i32 12, !dbg !10469
  %7 = load i64, i64* %flags, align 8, !dbg !10470
  store %struct.spinlock* %lock19, %struct.spinlock** %lock.addr.i20, align 8
  store i64 %7, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !372, metadata !5933, metadata !DIExpression()) #7, !dbg !10471
  call void @llvm.dbg.declare(metadata !372, metadata !5937, metadata !DIExpression()) #7, !dbg !10471
  store i32 1, i32* %tmp.i, align 4, !dbg !10471
  %8 = load i32, i32* %tmp.i, align 4, !dbg !10471
  call void @llvm.dbg.declare(metadata !372, metadata !5938, metadata !DIExpression()) #7, !dbg !10472
  call void @llvm.dbg.declare(metadata !372, metadata !5944, metadata !DIExpression()) #7, !dbg !10472
  store i32 1, i32* %tmp8.i, align 4, !dbg !10472
  %9 = load i32, i32* %tmp8.i, align 4, !dbg !10472
  %10 = load i64, i64* %flags.addr.i, align 8, !dbg !10473
  call void @arch_local_irq_restore(i64 %10) #12, !dbg !10473
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !10474, !srcloc !5948
  %11 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i20, align 8, !dbg !10475
  %12 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %11, i32 0, i32 0, !dbg !10475
  %rlock.i21 = bitcast %union.anon.0* %12 to %struct.raw_spinlock*, !dbg !10475
  ret void, !dbg !10476
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @request_irq(i32 %irq, i32 (i32, i8*)* %handler, i64 %flags, i8* %name, i8* %dev) #0 !dbg !10477 {
entry:
  %irq.addr = alloca i32, align 4
  %handler.addr = alloca i32 (i32, i8*)*, align 8
  %flags.addr = alloca i64, align 8
  %name.addr = alloca i8*, align 8
  %dev.addr = alloca i8*, align 8
  store i32 %irq, i32* %irq.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %irq.addr, metadata !10485, metadata !DIExpression()), !dbg !10486
  store i32 (i32, i8*)* %handler, i32 (i32, i8*)** %handler.addr, align 8
  call void @llvm.dbg.declare(metadata i32 (i32, i8*)** %handler.addr, metadata !10487, metadata !DIExpression()), !dbg !10488
  store i64 %flags, i64* %flags.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr, metadata !10489, metadata !DIExpression()), !dbg !10490
  store i8* %name, i8** %name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !10491, metadata !DIExpression()), !dbg !10492
  store i8* %dev, i8** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %dev.addr, metadata !10493, metadata !DIExpression()), !dbg !10494
  %0 = load i32, i32* %irq.addr, align 4, !dbg !10495
  %1 = load i32 (i32, i8*)*, i32 (i32, i8*)** %handler.addr, align 8, !dbg !10496
  %2 = load i64, i64* %flags.addr, align 8, !dbg !10497
  %3 = load i8*, i8** %name.addr, align 8, !dbg !10498
  %4 = load i8*, i8** %dev.addr, align 8, !dbg !10499
  %call = call i32 @request_threaded_irq(i32 %0, i32 (i32, i8*)* %1, i32 (i32, i8*)* null, i64 %2, i8* %3, i8* %4) #11, !dbg !10500
  ret i32 %call, !dbg !10501
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @acpi_ec_irq_handler(i32 %irq, i8* %data) #0 !dbg !10502 {
entry:
  %irq.addr = alloca i32, align 4
  %data.addr = alloca i8*, align 8
  store i32 %irq, i32* %irq.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %irq.addr, metadata !10503, metadata !DIExpression()), !dbg !10504
  store i8* %data, i8** %data.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %data.addr, metadata !10505, metadata !DIExpression()), !dbg !10506
  %0 = load i8*, i8** %data.addr, align 8, !dbg !10507
  %1 = bitcast i8* %0 to %struct.acpi_ec*, !dbg !10507
  call void @acpi_ec_handle_interrupt(%struct.acpi_ec* %1) #11, !dbg !10508
  ret i32 1, !dbg !10509
}

; Function Attrs: noredzone
declare dso_local i32 @request_threaded_irq(i32, i32 (i32, i8*)*, i32 (i32, i8*)*, i64, i8*, i8*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @__acpi_ec_enable_event(%struct.acpi_ec* %ec) #0 !dbg !10510 {
entry:
  %ec.addr = alloca %struct.acpi_ec*, align 8
  store %struct.acpi_ec* %ec, %struct.acpi_ec** %ec.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.acpi_ec** %ec.addr, metadata !10511, metadata !DIExpression()), !dbg !10512
  %0 = load %struct.acpi_ec*, %struct.acpi_ec** %ec.addr, align 8, !dbg !10513
  %flags = getelementptr inbounds %struct.acpi_ec, %struct.acpi_ec* %0, i32 0, i32 6, !dbg !10515
  %call = call zeroext i1 @test_and_set_bit(i64 0, i64* %flags) #11, !dbg !10516
  br i1 %call, label %if.end, label %if.then, !dbg !10517

if.then:                                          ; preds = %entry
  %call1 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.22, i64 0, i64 0)) #13, !dbg !10518
  br label %if.end, !dbg !10518

if.end:                                           ; preds = %if.then, %entry
  %1 = load %struct.acpi_ec*, %struct.acpi_ec** %ec.addr, align 8, !dbg !10519
  call void @advance_transaction(%struct.acpi_ec* %1) #11, !dbg !10520
  ret void, !dbg !10521
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @acpi_ec_clear(%struct.acpi_ec* %ec) #0 !dbg !10522 {
entry:
  %ec.addr = alloca %struct.acpi_ec*, align 8
  %i = alloca i32, align 4
  %status = alloca i32, align 4
  %value = alloca i8, align 1
  store %struct.acpi_ec* %ec, %struct.acpi_ec** %ec.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.acpi_ec** %ec.addr, metadata !10523, metadata !DIExpression()), !dbg !10524
  call void @llvm.dbg.declare(metadata i32* %i, metadata !10525, metadata !DIExpression()), !dbg !10526
  call void @llvm.dbg.declare(metadata i32* %status, metadata !10527, metadata !DIExpression()), !dbg !10528
  call void @llvm.dbg.declare(metadata i8* %value, metadata !10529, metadata !DIExpression()), !dbg !10530
  store i8 0, i8* %value, align 1, !dbg !10530
  store i32 0, i32* %i, align 4, !dbg !10531
  br label %for.cond, !dbg !10533

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4, !dbg !10534
  %cmp = icmp slt i32 %0, 100, !dbg !10536
  br i1 %cmp, label %for.body, label %for.end, !dbg !10537

for.body:                                         ; preds = %for.cond
  %1 = load %struct.acpi_ec*, %struct.acpi_ec** %ec.addr, align 8, !dbg !10538
  %call = call i32 @acpi_ec_query(%struct.acpi_ec* %1, i8* %value) #11, !dbg !10540
  store i32 %call, i32* %status, align 4, !dbg !10541
  %2 = load i32, i32* %status, align 4, !dbg !10542
  %tobool = icmp ne i32 %2, 0, !dbg !10542
  br i1 %tobool, label %if.then, label %lor.lhs.false, !dbg !10544

lor.lhs.false:                                    ; preds = %for.body
  %3 = load i8, i8* %value, align 1, !dbg !10545
  %tobool1 = icmp ne i8 %3, 0, !dbg !10545
  br i1 %tobool1, label %if.end, label %if.then, !dbg !10546

if.then:                                          ; preds = %lor.lhs.false, %for.body
  br label %for.end, !dbg !10547

if.end:                                           ; preds = %lor.lhs.false
  br label %for.inc, !dbg !10548

for.inc:                                          ; preds = %if.end
  %4 = load i32, i32* %i, align 4, !dbg !10549
  %inc = add i32 %4, 1, !dbg !10549
  store i32 %inc, i32* %i, align 4, !dbg !10549
  br label %for.cond, !dbg !10550, !llvm.loop !10551

for.end:                                          ; preds = %if.then, %for.cond
  %5 = load i32, i32* %i, align 4, !dbg !10553
  %cmp2 = icmp eq i32 %5, 100, !dbg !10553
  %lnot = xor i1 %cmp2, true, !dbg !10553
  %lnot3 = xor i1 %lnot, true, !dbg !10553
  %lnot.ext = zext i1 %lnot3 to i32, !dbg !10553
  %conv = sext i32 %lnot.ext to i64, !dbg !10553
  %tobool4 = icmp ne i64 %conv, 0, !dbg !10553
  br i1 %tobool4, label %if.then5, label %if.else, !dbg !10555

if.then5:                                         ; preds = %for.end
  %6 = load i32, i32* %i, align 4, !dbg !10556
  %call6 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.23, i64 0, i64 0), i32 %6) #13, !dbg !10556
  br label %if.end8, !dbg !10556

if.else:                                          ; preds = %for.end
  %7 = load i32, i32* %i, align 4, !dbg !10557
  %call7 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.24, i64 0, i64 0), i32 %7) #13, !dbg !10557
  br label %if.end8

if.end8:                                          ; preds = %if.else, %if.then5
  ret void, !dbg !10558
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @ec_correct_ecdt(%struct.dmi_system_id* %id) #0 !dbg !10559 {
entry:
  %id.addr = alloca %struct.dmi_system_id*, align 8
  %tmp = alloca i32, align 4
  store %struct.dmi_system_id* %id, %struct.dmi_system_id** %id.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dmi_system_id** %id.addr, metadata !10560, metadata !DIExpression()), !dbg !10561
  store i32 0, i32* %tmp, align 4, !dbg !10562
  %0 = load i32, i32* %tmp, align 4, !dbg !10565
  store i32 1, i32* @EC_FLAGS_CORRECT_ECDT, align 4, !dbg !10566
  ret i32 0, !dbg !10567
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @ec_honor_ecdt_gpe(%struct.dmi_system_id* %id) #0 !dbg !10568 {
entry:
  %id.addr = alloca %struct.dmi_system_id*, align 8
  %tmp = alloca i32, align 4
  store %struct.dmi_system_id* %id, %struct.dmi_system_id** %id.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dmi_system_id** %id.addr, metadata !10569, metadata !DIExpression()), !dbg !10570
  store i32 0, i32* %tmp, align 4, !dbg !10571
  %0 = load i32, i32* %tmp, align 4, !dbg !10574
  store i32 1, i32* @EC_FLAGS_IGNORE_DSDT_GPE, align 4, !dbg !10575
  ret i32 0, !dbg !10576
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @ec_clear_on_resume(%struct.dmi_system_id* %id) #0 !dbg !10577 {
entry:
  %id.addr = alloca %struct.dmi_system_id*, align 8
  %tmp = alloca i32, align 4
  store %struct.dmi_system_id* %id, %struct.dmi_system_id** %id.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dmi_system_id** %id.addr, metadata !10578, metadata !DIExpression()), !dbg !10579
  store i32 0, i32* %tmp, align 4, !dbg !10580
  %0 = load i32, i32* %tmp, align 4, !dbg !10583
  store i32 1, i32* @EC_FLAGS_CLEAR_ON_RESUME, align 4, !dbg !10584
  store i32 0, i32* @ec_event_clearing, align 4, !dbg !10585
  ret i32 0, !dbg !10586
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @param_set_event_clearing(i8* %val, %struct.kernel_param* %kp) #0 !dbg !10587 {
entry:
  %val.addr = alloca i8*, align 8
  %kp.addr = alloca %struct.kernel_param*, align 8
  %result = alloca i32, align 4
  store i8* %val, i8** %val.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %val.addr, metadata !10588, metadata !DIExpression()), !dbg !10589
  store %struct.kernel_param* %kp, %struct.kernel_param** %kp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.kernel_param** %kp.addr, metadata !10590, metadata !DIExpression()), !dbg !10591
  call void @llvm.dbg.declare(metadata i32* %result, metadata !10592, metadata !DIExpression()), !dbg !10593
  store i32 0, i32* %result, align 4, !dbg !10593
  %0 = load i8*, i8** %val.addr, align 8, !dbg !10594
  %call = call i32 @strncmp(i8* %0, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.33, i64 0, i64 0), i64 6) #11, !dbg !10596
  %tobool = icmp ne i32 %call, 0, !dbg !10596
  br i1 %tobool, label %if.else, label %if.then, !dbg !10597

if.then:                                          ; preds = %entry
  store i32 0, i32* @ec_event_clearing, align 4, !dbg !10598
  %call1 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([57 x i8], [57 x i8]* @.str.34, i64 0, i64 0)) #13, !dbg !10600
  br label %if.end13, !dbg !10601

if.else:                                          ; preds = %entry
  %1 = load i8*, i8** %val.addr, align 8, !dbg !10602
  %call2 = call i32 @strncmp(i8* %1, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.35, i64 0, i64 0), i64 5) #11, !dbg !10604
  %tobool3 = icmp ne i32 %call2, 0, !dbg !10604
  br i1 %tobool3, label %if.else6, label %if.then4, !dbg !10605

if.then4:                                         ; preds = %if.else
  store i32 1, i32* @ec_event_clearing, align 4, !dbg !10606
  %call5 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.36, i64 0, i64 0)) #13, !dbg !10608
  br label %if.end12, !dbg !10609

if.else6:                                         ; preds = %if.else
  %2 = load i8*, i8** %val.addr, align 8, !dbg !10610
  %call7 = call i32 @strncmp(i8* %2, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.37, i64 0, i64 0), i64 5) #11, !dbg !10612
  %tobool8 = icmp ne i32 %call7, 0, !dbg !10612
  br i1 %tobool8, label %if.else11, label %if.then9, !dbg !10613

if.then9:                                         ; preds = %if.else6
  store i32 2, i32* @ec_event_clearing, align 4, !dbg !10614
  %call10 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.38, i64 0, i64 0)) #13, !dbg !10616
  br label %if.end, !dbg !10617

if.else11:                                        ; preds = %if.else6
  store i32 -22, i32* %result, align 4, !dbg !10618
  br label %if.end

if.end:                                           ; preds = %if.else11, %if.then9
  br label %if.end12

if.end12:                                         ; preds = %if.end, %if.then4
  br label %if.end13

if.end13:                                         ; preds = %if.end12, %if.then
  %3 = load i32, i32* %result, align 4, !dbg !10619
  ret i32 %3, !dbg !10620
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @param_get_event_clearing(i8* %buffer, %struct.kernel_param* %kp) #0 !dbg !10621 {
entry:
  %retval = alloca i32, align 4
  %buffer.addr = alloca i8*, align 8
  %kp.addr = alloca %struct.kernel_param*, align 8
  store i8* %buffer, i8** %buffer.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buffer.addr, metadata !10622, metadata !DIExpression()), !dbg !10623
  store %struct.kernel_param* %kp, %struct.kernel_param** %kp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.kernel_param** %kp.addr, metadata !10624, metadata !DIExpression()), !dbg !10625
  %0 = load i32, i32* @ec_event_clearing, align 4, !dbg !10626
  switch i32 %0, label %sw.default [
    i32 0, label %sw.bb
    i32 1, label %sw.bb1
    i32 2, label %sw.bb3
  ], !dbg !10627

sw.bb:                                            ; preds = %entry
  %1 = load i8*, i8** %buffer.addr, align 8, !dbg !10628
  %call = call i32 (i8*, i8*, ...) @sprintf(i8* %1, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.39, i64 0, i64 0)) #11, !dbg !10630
  store i32 %call, i32* %retval, align 4, !dbg !10631
  br label %return, !dbg !10631

sw.bb1:                                           ; preds = %entry
  %2 = load i8*, i8** %buffer.addr, align 8, !dbg !10632
  %call2 = call i32 (i8*, i8*, ...) @sprintf(i8* %2, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.40, i64 0, i64 0)) #11, !dbg !10633
  store i32 %call2, i32* %retval, align 4, !dbg !10634
  br label %return, !dbg !10634

sw.bb3:                                           ; preds = %entry
  %3 = load i8*, i8** %buffer.addr, align 8, !dbg !10635
  %call4 = call i32 (i8*, i8*, ...) @sprintf(i8* %3, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.41, i64 0, i64 0)) #11, !dbg !10636
  store i32 %call4, i32* %retval, align 4, !dbg !10637
  br label %return, !dbg !10637

sw.default:                                       ; preds = %entry
  %4 = load i8*, i8** %buffer.addr, align 8, !dbg !10638
  %call5 = call i32 (i8*, i8*, ...) @sprintf(i8* %4, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.42, i64 0, i64 0)) #11, !dbg !10639
  store i32 %call5, i32* %retval, align 4, !dbg !10640
  br label %return, !dbg !10640

return:                                           ; preds = %sw.default, %sw.bb3, %sw.bb1, %sw.bb
  %5 = load i32, i32* %retval, align 4, !dbg !10641
  ret i32 %5, !dbg !10641
}

; Function Attrs: noredzone
declare dso_local i32 @strncmp(i8*, i8*, i64) #2

; Function Attrs: noredzone
declare dso_local i32 @sprintf(i8*, i8*, ...) #2

; Function Attrs: noredzone
declare dso_local %struct.workqueue_struct* @alloc_workqueue(i8*, i32, i32, ...) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @acpi_ec_destroy_workqueues() #0 !dbg !10642 {
entry:
  %0 = load %struct.workqueue_struct*, %struct.workqueue_struct** @ec_wq, align 8, !dbg !10643
  %tobool = icmp ne %struct.workqueue_struct* %0, null, !dbg !10643
  br i1 %tobool, label %if.then, label %if.end, !dbg !10645

if.then:                                          ; preds = %entry
  %1 = load %struct.workqueue_struct*, %struct.workqueue_struct** @ec_wq, align 8, !dbg !10646
  call void @destroy_workqueue(%struct.workqueue_struct* %1) #11, !dbg !10648
  store %struct.workqueue_struct* null, %struct.workqueue_struct** @ec_wq, align 8, !dbg !10649
  br label %if.end, !dbg !10650

if.end:                                           ; preds = %if.then, %entry
  %2 = load %struct.workqueue_struct*, %struct.workqueue_struct** @ec_query_wq, align 8, !dbg !10651
  %tobool1 = icmp ne %struct.workqueue_struct* %2, null, !dbg !10651
  br i1 %tobool1, label %if.then2, label %if.end3, !dbg !10653

if.then2:                                         ; preds = %if.end
  %3 = load %struct.workqueue_struct*, %struct.workqueue_struct** @ec_query_wq, align 8, !dbg !10654
  call void @destroy_workqueue(%struct.workqueue_struct* %3) #11, !dbg !10656
  store %struct.workqueue_struct* null, %struct.workqueue_struct** @ec_query_wq, align 8, !dbg !10657
  br label %if.end3, !dbg !10658

if.end3:                                          ; preds = %if.then2, %if.end
  ret void, !dbg !10659
}

; Function Attrs: noredzone
declare dso_local void @destroy_workqueue(%struct.workqueue_struct*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @acpi_ec_add(%struct.acpi_device* %device) #0 !dbg !10660 {
entry:
  %retval = alloca i32, align 4
  %device.addr = alloca %struct.acpi_device*, align 8
  %ec = alloca %struct.acpi_ec*, align 8
  %ret = alloca i32, align 4
  %status = alloca i32, align 4
  %tmp = alloca i32, align 4
  %__ret_warn_on = alloca i32, align 4
  %tmp70 = alloca i64, align 8
  %__ret_warn_on84 = alloca i32, align 4
  %tmp116 = alloca i64, align 8
  %tmp124 = alloca i32, align 4
  store %struct.acpi_device* %device, %struct.acpi_device** %device.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.acpi_device** %device.addr, metadata !10661, metadata !DIExpression()), !dbg !10662
  call void @llvm.dbg.declare(metadata %struct.acpi_ec** %ec, metadata !10663, metadata !DIExpression()), !dbg !10664
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !10665, metadata !DIExpression()), !dbg !10666
  %0 = load %struct.acpi_device*, %struct.acpi_device** %device.addr, align 8, !dbg !10667
  %pnp = getelementptr inbounds %struct.acpi_device, %struct.acpi_device* %0, i32 0, i32 10, !dbg !10667
  %device_name = getelementptr inbounds %struct.acpi_device_pnp, %struct.acpi_device_pnp* %pnp, i32 0, i32 5, !dbg !10667
  %arraydecay = getelementptr inbounds [40 x i8], [40 x i8]* %device_name, i64 0, i64 0, !dbg !10667
  %call = call i8* @strcpy(i8* %arraydecay, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.49, i64 0, i64 0)) #11, !dbg !10668
  %1 = load %struct.acpi_device*, %struct.acpi_device** %device.addr, align 8, !dbg !10669
  %pnp1 = getelementptr inbounds %struct.acpi_device, %struct.acpi_device* %1, i32 0, i32 10, !dbg !10669
  %device_class = getelementptr inbounds %struct.acpi_device_pnp, %struct.acpi_device_pnp* %pnp1, i32 0, i32 6, !dbg !10669
  %arraydecay2 = getelementptr inbounds [20 x i8], [20 x i8]* %device_class, i64 0, i64 0, !dbg !10669
  %call3 = call i8* @strcpy(i8* %arraydecay2, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.50, i64 0, i64 0)) #11, !dbg !10670
  %2 = load %struct.acpi_ec*, %struct.acpi_ec** @boot_ec, align 8, !dbg !10671
  %tobool = icmp ne %struct.acpi_ec* %2, null, !dbg !10671
  br i1 %tobool, label %land.lhs.true, label %if.else, !dbg !10673

land.lhs.true:                                    ; preds = %entry
  %3 = load %struct.acpi_ec*, %struct.acpi_ec** @boot_ec, align 8, !dbg !10674
  %handle = getelementptr inbounds %struct.acpi_ec, %struct.acpi_ec* %3, i32 0, i32 0, !dbg !10675
  %4 = load i8*, i8** %handle, align 8, !dbg !10675
  %5 = load %struct.acpi_device*, %struct.acpi_device** %device.addr, align 8, !dbg !10676
  %handle4 = getelementptr inbounds %struct.acpi_device, %struct.acpi_device* %5, i32 0, i32 1, !dbg !10677
  %6 = load i8*, i8** %handle4, align 8, !dbg !10677
  %cmp = icmp eq i8* %4, %6, !dbg !10678
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !10679

lor.lhs.false:                                    ; preds = %land.lhs.true
  %7 = load %struct.acpi_device*, %struct.acpi_device** %device.addr, align 8, !dbg !10680
  %call5 = call i8* @acpi_device_hid(%struct.acpi_device* %7) #11, !dbg !10681
  %call6 = call i32 @strcmp(i8* %call5, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.51, i64 0, i64 0)) #11, !dbg !10682
  %tobool7 = icmp ne i32 %call6, 0, !dbg !10682
  br i1 %tobool7, label %if.else, label %if.then, !dbg !10683

if.then:                                          ; preds = %lor.lhs.false, %land.lhs.true
  %8 = load %struct.acpi_ec*, %struct.acpi_ec** @boot_ec, align 8, !dbg !10684
  store %struct.acpi_ec* %8, %struct.acpi_ec** %ec, align 8, !dbg !10686
  br label %if.end27, !dbg !10687

if.else:                                          ; preds = %lor.lhs.false, %entry
  call void @llvm.dbg.declare(metadata i32* %status, metadata !10688, metadata !DIExpression()), !dbg !10690
  %call8 = call %struct.acpi_ec* @acpi_ec_alloc() #11, !dbg !10691
  store %struct.acpi_ec* %call8, %struct.acpi_ec** %ec, align 8, !dbg !10692
  %9 = load %struct.acpi_ec*, %struct.acpi_ec** %ec, align 8, !dbg !10693
  %tobool9 = icmp ne %struct.acpi_ec* %9, null, !dbg !10693
  br i1 %tobool9, label %if.end, label %if.then10, !dbg !10695

if.then10:                                        ; preds = %if.else
  store i32 -12, i32* %retval, align 4, !dbg !10696
  br label %return, !dbg !10696

if.end:                                           ; preds = %if.else
  %10 = load %struct.acpi_device*, %struct.acpi_device** %device.addr, align 8, !dbg !10697
  %handle11 = getelementptr inbounds %struct.acpi_device, %struct.acpi_device* %10, i32 0, i32 1, !dbg !10698
  %11 = load i8*, i8** %handle11, align 8, !dbg !10698
  %12 = load %struct.acpi_ec*, %struct.acpi_ec** %ec, align 8, !dbg !10699
  %13 = bitcast %struct.acpi_ec* %12 to i8*, !dbg !10699
  %call12 = call i32 @ec_parse_device(i8* %11, i32 0, i8* %13, i8** null) #11, !dbg !10700
  store i32 %call12, i32* %status, align 4, !dbg !10701
  %14 = load i32, i32* %status, align 4, !dbg !10702
  %cmp13 = icmp ne i32 %14, 16387, !dbg !10704
  br i1 %cmp13, label %if.then14, label %if.end15, !dbg !10705

if.then14:                                        ; preds = %if.end
  store i32 -22, i32* %ret, align 4, !dbg !10706
  br label %err, !dbg !10708

if.end15:                                         ; preds = %if.end
  %15 = load %struct.acpi_ec*, %struct.acpi_ec** @boot_ec, align 8, !dbg !10709
  %tobool16 = icmp ne %struct.acpi_ec* %15, null, !dbg !10709
  br i1 %tobool16, label %land.lhs.true17, label %if.end26, !dbg !10711

land.lhs.true17:                                  ; preds = %if.end15
  %16 = load %struct.acpi_ec*, %struct.acpi_ec** %ec, align 8, !dbg !10712
  %command_addr = getelementptr inbounds %struct.acpi_ec, %struct.acpi_ec* %16, i32 0, i32 3, !dbg !10713
  %17 = load i64, i64* %command_addr, align 8, !dbg !10713
  %18 = load %struct.acpi_ec*, %struct.acpi_ec** @boot_ec, align 8, !dbg !10714
  %command_addr18 = getelementptr inbounds %struct.acpi_ec, %struct.acpi_ec* %18, i32 0, i32 3, !dbg !10715
  %19 = load i64, i64* %command_addr18, align 8, !dbg !10715
  %cmp19 = icmp eq i64 %17, %19, !dbg !10716
  br i1 %cmp19, label %land.lhs.true20, label %if.end26, !dbg !10717

land.lhs.true20:                                  ; preds = %land.lhs.true17
  %20 = load %struct.acpi_ec*, %struct.acpi_ec** %ec, align 8, !dbg !10718
  %data_addr = getelementptr inbounds %struct.acpi_ec, %struct.acpi_ec* %20, i32 0, i32 4, !dbg !10719
  %21 = load i64, i64* %data_addr, align 8, !dbg !10719
  %22 = load %struct.acpi_ec*, %struct.acpi_ec** @boot_ec, align 8, !dbg !10720
  %data_addr21 = getelementptr inbounds %struct.acpi_ec, %struct.acpi_ec* %22, i32 0, i32 4, !dbg !10721
  %23 = load i64, i64* %data_addr21, align 8, !dbg !10721
  %cmp22 = icmp eq i64 %21, %23, !dbg !10722
  br i1 %cmp22, label %if.then23, label %if.end26, !dbg !10723

if.then23:                                        ; preds = %land.lhs.true20
  %24 = load %struct.acpi_ec*, %struct.acpi_ec** %ec, align 8, !dbg !10724
  %handle24 = getelementptr inbounds %struct.acpi_ec, %struct.acpi_ec* %24, i32 0, i32 0, !dbg !10726
  %25 = load i8*, i8** %handle24, align 8, !dbg !10726
  %26 = load %struct.acpi_ec*, %struct.acpi_ec** @boot_ec, align 8, !dbg !10727
  %handle25 = getelementptr inbounds %struct.acpi_ec, %struct.acpi_ec* %26, i32 0, i32 0, !dbg !10728
  store i8* %25, i8** %handle25, align 8, !dbg !10729
  store i32 0, i32* %tmp, align 4, !dbg !10730
  %27 = load i32, i32* %tmp, align 4, !dbg !10733
  %28 = load %struct.acpi_ec*, %struct.acpi_ec** %ec, align 8, !dbg !10734
  call void @acpi_ec_free(%struct.acpi_ec* %28) #11, !dbg !10735
  %29 = load %struct.acpi_ec*, %struct.acpi_ec** @boot_ec, align 8, !dbg !10736
  store %struct.acpi_ec* %29, %struct.acpi_ec** %ec, align 8, !dbg !10737
  br label %if.end26, !dbg !10738

if.end26:                                         ; preds = %if.then23, %land.lhs.true20, %land.lhs.true17, %if.end15
  br label %if.end27

if.end27:                                         ; preds = %if.end26, %if.then
  %30 = load %struct.acpi_ec*, %struct.acpi_ec** %ec, align 8, !dbg !10739
  %31 = load %struct.acpi_device*, %struct.acpi_device** %device.addr, align 8, !dbg !10740
  %call28 = call i32 @acpi_ec_setup(%struct.acpi_ec* %30, %struct.acpi_device* %31) #11, !dbg !10741
  store i32 %call28, i32* %ret, align 4, !dbg !10742
  %32 = load i32, i32* %ret, align 4, !dbg !10743
  %tobool29 = icmp ne i32 %32, 0, !dbg !10743
  br i1 %tobool29, label %if.then30, label %if.end31, !dbg !10745

if.then30:                                        ; preds = %if.end27
  br label %err, !dbg !10746

if.end31:                                         ; preds = %if.end27
  %33 = load %struct.acpi_ec*, %struct.acpi_ec** %ec, align 8, !dbg !10747
  %34 = load %struct.acpi_ec*, %struct.acpi_ec** @boot_ec, align 8, !dbg !10749
  %cmp32 = icmp eq %struct.acpi_ec* %33, %34, !dbg !10750
  br i1 %cmp32, label %if.then33, label %if.end36, !dbg !10751

if.then33:                                        ; preds = %if.end31
  %35 = load %struct.acpi_ec*, %struct.acpi_ec** @boot_ec, align 8, !dbg !10752
  %handle34 = getelementptr inbounds %struct.acpi_ec, %struct.acpi_ec* %35, i32 0, i32 0, !dbg !10752
  %36 = load i8*, i8** %handle34, align 8, !dbg !10752
  %37 = load i8, i8* @boot_ec_is_ecdt, align 1, !dbg !10752
  %tobool35 = trunc i8 %37 to i1, !dbg !10752
  %38 = zext i1 %tobool35 to i64, !dbg !10752
  %cond = select i1 %tobool35, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.2, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.53, i64 0, i64 0), !dbg !10752
  call void (i8*, i8*, i8*, ...) @acpi_handle_printk(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i64 0, i64 0), i8* %36, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.52, i64 0, i64 0), i8* %cond) #11, !dbg !10752
  br label %if.end36, !dbg !10752

if.end36:                                         ; preds = %if.then33, %if.end31
  %39 = load %struct.acpi_ec*, %struct.acpi_ec** %ec, align 8, !dbg !10753
  %handle37 = getelementptr inbounds %struct.acpi_ec, %struct.acpi_ec* %39, i32 0, i32 0, !dbg !10753
  %40 = load i8*, i8** %handle37, align 8, !dbg !10753
  call void (i8*, i8*, i8*, ...) @acpi_handle_printk(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i64 0, i64 0), i8* %40, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.54, i64 0, i64 0)) #11, !dbg !10753
  %41 = load %struct.acpi_ec*, %struct.acpi_ec** %ec, align 8, !dbg !10754
  %42 = bitcast %struct.acpi_ec* %41 to i8*, !dbg !10754
  %43 = load %struct.acpi_device*, %struct.acpi_device** %device.addr, align 8, !dbg !10755
  %driver_data = getelementptr inbounds %struct.acpi_device, %struct.acpi_device* %43, i32 0, i32 20, !dbg !10756
  store i8* %42, i8** %driver_data, align 8, !dbg !10757
  %44 = load %struct.acpi_ec*, %struct.acpi_ec** %ec, align 8, !dbg !10758
  %data_addr38 = getelementptr inbounds %struct.acpi_ec, %struct.acpi_ec* %44, i32 0, i32 4, !dbg !10758
  %45 = load i64, i64* %data_addr38, align 8, !dbg !10758
  %call39 = call %struct.resource* @__request_region(%struct.resource* @ioport_resource, i64 %45, i64 1, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.55, i64 0, i64 0), i32 0) #11, !dbg !10758
  %tobool40 = icmp ne %struct.resource* %call39, null, !dbg !10759
  %lnot = xor i1 %tobool40, true, !dbg !10759
  %lnot41 = xor i1 %lnot, true, !dbg !10760
  %lnot.ext = zext i1 %lnot41 to i32, !dbg !10760
  store i32 %lnot.ext, i32* %ret, align 4, !dbg !10761
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on, metadata !10762, metadata !DIExpression()), !dbg !10764
  %46 = load i32, i32* %ret, align 4, !dbg !10764
  %tobool42 = icmp ne i32 %46, 0, !dbg !10764
  %lnot43 = xor i1 %tobool42, true, !dbg !10764
  %lnot45 = xor i1 %lnot43, true, !dbg !10764
  %lnot47 = xor i1 %lnot45, true, !dbg !10764
  %lnot.ext48 = zext i1 %lnot47 to i32, !dbg !10764
  store i32 %lnot.ext48, i32* %__ret_warn_on, align 4, !dbg !10764
  %47 = load i32, i32* %__ret_warn_on, align 4, !dbg !10765
  %tobool49 = icmp ne i32 %47, 0, !dbg !10765
  %lnot50 = xor i1 %tobool49, true, !dbg !10765
  %lnot52 = xor i1 %lnot50, true, !dbg !10765
  %lnot.ext53 = zext i1 %lnot52 to i32, !dbg !10765
  %conv = sext i32 %lnot.ext53 to i64, !dbg !10765
  %tobool54 = icmp ne i64 %conv, 0, !dbg !10765
  br i1 %tobool54, label %if.then55, label %if.end69, !dbg !10764

if.then55:                                        ; preds = %if.end36
  br label %do.body, !dbg !10765

do.body:                                          ; preds = %if.then55
  br label %do.body56, !dbg !10767

do.body56:                                        ; preds = %do.body
  br label %do.end, !dbg !10769

do.end:                                           ; preds = %do.body56
  %48 = load %struct.acpi_ec*, %struct.acpi_ec** %ec, align 8, !dbg !10767
  %data_addr57 = getelementptr inbounds %struct.acpi_ec, %struct.acpi_ec* %48, i32 0, i32 4, !dbg !10767
  %49 = load i64, i64* %data_addr57, align 8, !dbg !10767
  call void (i8*, ...) @__warn_printk(i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.56, i64 0, i64 0), i64 %49) #11, !dbg !10767
  br label %do.body58, !dbg !10767

do.body58:                                        ; preds = %do.end
  br label %do.body59, !dbg !10771

do.body59:                                        ; preds = %do.body58
  br label %do.end60, !dbg !10773

do.end60:                                         ; preds = %do.body59
  br label %do.body61, !dbg !10771

do.body61:                                        ; preds = %do.end60
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.4, i64 0, i64 0), i32 1638, i32 2313, i64 12) #7, !dbg !10775, !srcloc !10777
  br label %do.end62, !dbg !10775

do.end62:                                         ; preds = %do.body61
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 320) #7, !dbg !10778, !srcloc !10780
  br label %do.body63, !dbg !10771

do.body63:                                        ; preds = %do.end62
  br label %do.end64, !dbg !10781

do.end64:                                         ; preds = %do.body63
  br label %do.end65, !dbg !10771

do.end65:                                         ; preds = %do.end64
  br label %do.body66, !dbg !10767

do.body66:                                        ; preds = %do.end65
  br label %do.end67, !dbg !10783

do.end67:                                         ; preds = %do.body66
  br label %do.end68, !dbg !10767

do.end68:                                         ; preds = %do.end67
  br label %if.end69, !dbg !10767

if.end69:                                         ; preds = %do.end68, %if.end36
  %50 = load i32, i32* %__ret_warn_on, align 4, !dbg !10764
  %tobool71 = icmp ne i32 %50, 0, !dbg !10764
  %lnot72 = xor i1 %tobool71, true, !dbg !10764
  %lnot74 = xor i1 %lnot72, true, !dbg !10764
  %lnot.ext75 = zext i1 %lnot74 to i32, !dbg !10764
  %conv76 = sext i32 %lnot.ext75 to i64, !dbg !10764
  store i64 %conv76, i64* %tmp70, align 8, !dbg !10765
  %51 = load i64, i64* %tmp70, align 8, !dbg !10764
  %52 = load %struct.acpi_ec*, %struct.acpi_ec** %ec, align 8, !dbg !10785
  %command_addr77 = getelementptr inbounds %struct.acpi_ec, %struct.acpi_ec* %52, i32 0, i32 3, !dbg !10785
  %53 = load i64, i64* %command_addr77, align 8, !dbg !10785
  %call78 = call %struct.resource* @__request_region(%struct.resource* @ioport_resource, i64 %53, i64 1, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.57, i64 0, i64 0), i32 0) #11, !dbg !10785
  %tobool79 = icmp ne %struct.resource* %call78, null, !dbg !10786
  %lnot80 = xor i1 %tobool79, true, !dbg !10786
  %lnot82 = xor i1 %lnot80, true, !dbg !10787
  %lnot.ext83 = zext i1 %lnot82 to i32, !dbg !10787
  store i32 %lnot.ext83, i32* %ret, align 4, !dbg !10788
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on84, metadata !10789, metadata !DIExpression()), !dbg !10791
  %54 = load i32, i32* %ret, align 4, !dbg !10791
  %tobool85 = icmp ne i32 %54, 0, !dbg !10791
  %lnot86 = xor i1 %tobool85, true, !dbg !10791
  %lnot88 = xor i1 %lnot86, true, !dbg !10791
  %lnot90 = xor i1 %lnot88, true, !dbg !10791
  %lnot.ext91 = zext i1 %lnot90 to i32, !dbg !10791
  store i32 %lnot.ext91, i32* %__ret_warn_on84, align 4, !dbg !10791
  %55 = load i32, i32* %__ret_warn_on84, align 4, !dbg !10792
  %tobool92 = icmp ne i32 %55, 0, !dbg !10792
  %lnot93 = xor i1 %tobool92, true, !dbg !10792
  %lnot95 = xor i1 %lnot93, true, !dbg !10792
  %lnot.ext96 = zext i1 %lnot95 to i32, !dbg !10792
  %conv97 = sext i32 %lnot.ext96 to i64, !dbg !10792
  %tobool98 = icmp ne i64 %conv97, 0, !dbg !10792
  br i1 %tobool98, label %if.then99, label %if.end115, !dbg !10791

if.then99:                                        ; preds = %if.end69
  br label %do.body100, !dbg !10792

do.body100:                                       ; preds = %if.then99
  br label %do.body101, !dbg !10794

do.body101:                                       ; preds = %do.body100
  br label %do.end102, !dbg !10796

do.end102:                                        ; preds = %do.body101
  %56 = load %struct.acpi_ec*, %struct.acpi_ec** %ec, align 8, !dbg !10794
  %command_addr103 = getelementptr inbounds %struct.acpi_ec, %struct.acpi_ec* %56, i32 0, i32 3, !dbg !10794
  %57 = load i64, i64* %command_addr103, align 8, !dbg !10794
  call void (i8*, ...) @__warn_printk(i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.58, i64 0, i64 0), i64 %57) #11, !dbg !10794
  br label %do.body104, !dbg !10794

do.body104:                                       ; preds = %do.end102
  br label %do.body105, !dbg !10798

do.body105:                                       ; preds = %do.body104
  br label %do.end106, !dbg !10800

do.end106:                                        ; preds = %do.body105
  br label %do.body107, !dbg !10798

do.body107:                                       ; preds = %do.end106
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.4, i64 0, i64 0), i32 1640, i32 2313, i64 12) #7, !dbg !10802, !srcloc !10804
  br label %do.end108, !dbg !10802

do.end108:                                        ; preds = %do.body107
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 321) #7, !dbg !10805, !srcloc !10807
  br label %do.body109, !dbg !10798

do.body109:                                       ; preds = %do.end108
  br label %do.end110, !dbg !10808

do.end110:                                        ; preds = %do.body109
  br label %do.end111, !dbg !10798

do.end111:                                        ; preds = %do.end110
  br label %do.body112, !dbg !10794

do.body112:                                       ; preds = %do.end111
  br label %do.end113, !dbg !10810

do.end113:                                        ; preds = %do.body112
  br label %do.end114, !dbg !10794

do.end114:                                        ; preds = %do.end113
  br label %if.end115, !dbg !10794

if.end115:                                        ; preds = %do.end114, %if.end69
  %58 = load i32, i32* %__ret_warn_on84, align 4, !dbg !10791
  %tobool117 = icmp ne i32 %58, 0, !dbg !10791
  %lnot118 = xor i1 %tobool117, true, !dbg !10791
  %lnot120 = xor i1 %lnot118, true, !dbg !10791
  %lnot.ext121 = zext i1 %lnot120 to i32, !dbg !10791
  %conv122 = sext i32 %lnot.ext121 to i64, !dbg !10791
  store i64 %conv122, i64* %tmp116, align 8, !dbg !10792
  %59 = load i64, i64* %tmp116, align 8, !dbg !10791
  %60 = load %struct.acpi_ec*, %struct.acpi_ec** %ec, align 8, !dbg !10812
  %handle123 = getelementptr inbounds %struct.acpi_ec, %struct.acpi_ec* %60, i32 0, i32 0, !dbg !10813
  %61 = load i8*, i8** %handle123, align 8, !dbg !10813
  call void @acpi_walk_dep_device_list(i8* %61) #11, !dbg !10814
  store i32 0, i32* %tmp124, align 4, !dbg !10815
  %62 = load i32, i32* %tmp124, align 4, !dbg !10818
  store i32 0, i32* %retval, align 4, !dbg !10819
  br label %return, !dbg !10819

err:                                              ; preds = %if.then30, %if.then14
  call void @llvm.dbg.label(metadata !10820), !dbg !10821
  %63 = load %struct.acpi_ec*, %struct.acpi_ec** %ec, align 8, !dbg !10822
  %64 = load %struct.acpi_ec*, %struct.acpi_ec** @boot_ec, align 8, !dbg !10824
  %cmp125 = icmp ne %struct.acpi_ec* %63, %64, !dbg !10825
  br i1 %cmp125, label %if.then127, label %if.end128, !dbg !10826

if.then127:                                       ; preds = %err
  %65 = load %struct.acpi_ec*, %struct.acpi_ec** %ec, align 8, !dbg !10827
  call void @acpi_ec_free(%struct.acpi_ec* %65) #11, !dbg !10828
  br label %if.end128, !dbg !10828

if.end128:                                        ; preds = %if.then127, %err
  %66 = load i32, i32* %ret, align 4, !dbg !10829
  store i32 %66, i32* %retval, align 4, !dbg !10830
  br label %return, !dbg !10830

return:                                           ; preds = %if.end128, %if.end115, %if.then10
  %67 = load i32, i32* %retval, align 4, !dbg !10831
  ret i32 %67, !dbg !10831
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @acpi_ec_remove(%struct.acpi_device* %device) #0 !dbg !10832 {
entry:
  %retval = alloca i32, align 4
  %device.addr = alloca %struct.acpi_device*, align 8
  %ec = alloca %struct.acpi_ec*, align 8
  store %struct.acpi_device* %device, %struct.acpi_device** %device.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.acpi_device** %device.addr, metadata !10833, metadata !DIExpression()), !dbg !10834
  call void @llvm.dbg.declare(metadata %struct.acpi_ec** %ec, metadata !10835, metadata !DIExpression()), !dbg !10836
  %0 = load %struct.acpi_device*, %struct.acpi_device** %device.addr, align 8, !dbg !10837
  %tobool = icmp ne %struct.acpi_device* %0, null, !dbg !10837
  br i1 %tobool, label %if.end, label %if.then, !dbg !10839

if.then:                                          ; preds = %entry
  store i32 -22, i32* %retval, align 4, !dbg !10840
  br label %return, !dbg !10840

if.end:                                           ; preds = %entry
  %1 = load %struct.acpi_device*, %struct.acpi_device** %device.addr, align 8, !dbg !10841
  %call = call i8* @acpi_driver_data(%struct.acpi_device* %1) #11, !dbg !10842
  %2 = bitcast i8* %call to %struct.acpi_ec*, !dbg !10842
  store %struct.acpi_ec* %2, %struct.acpi_ec** %ec, align 8, !dbg !10843
  %3 = load %struct.acpi_ec*, %struct.acpi_ec** %ec, align 8, !dbg !10844
  %data_addr = getelementptr inbounds %struct.acpi_ec, %struct.acpi_ec* %3, i32 0, i32 4, !dbg !10844
  %4 = load i64, i64* %data_addr, align 8, !dbg !10844
  call void @__release_region(%struct.resource* @ioport_resource, i64 %4, i64 1) #11, !dbg !10844
  %5 = load %struct.acpi_ec*, %struct.acpi_ec** %ec, align 8, !dbg !10845
  %command_addr = getelementptr inbounds %struct.acpi_ec, %struct.acpi_ec* %5, i32 0, i32 3, !dbg !10845
  %6 = load i64, i64* %command_addr, align 8, !dbg !10845
  call void @__release_region(%struct.resource* @ioport_resource, i64 %6, i64 1) #11, !dbg !10845
  %7 = load %struct.acpi_device*, %struct.acpi_device** %device.addr, align 8, !dbg !10846
  %driver_data = getelementptr inbounds %struct.acpi_device, %struct.acpi_device* %7, i32 0, i32 20, !dbg !10847
  store i8* null, i8** %driver_data, align 8, !dbg !10848
  %8 = load %struct.acpi_ec*, %struct.acpi_ec** %ec, align 8, !dbg !10849
  %9 = load %struct.acpi_ec*, %struct.acpi_ec** @boot_ec, align 8, !dbg !10851
  %cmp = icmp ne %struct.acpi_ec* %8, %9, !dbg !10852
  br i1 %cmp, label %if.then1, label %if.end2, !dbg !10853

if.then1:                                         ; preds = %if.end
  %10 = load %struct.acpi_ec*, %struct.acpi_ec** %ec, align 8, !dbg !10854
  call void @ec_remove_handlers(%struct.acpi_ec* %10) #11, !dbg !10856
  %11 = load %struct.acpi_ec*, %struct.acpi_ec** %ec, align 8, !dbg !10857
  call void @acpi_ec_free(%struct.acpi_ec* %11) #11, !dbg !10858
  br label %if.end2, !dbg !10859

if.end2:                                          ; preds = %if.then1, %if.end
  store i32 0, i32* %retval, align 4, !dbg !10860
  br label %return, !dbg !10860

return:                                           ; preds = %if.end2, %if.then
  %12 = load i32, i32* %retval, align 4, !dbg !10861
  ret i32 %12, !dbg !10861
}

; Function Attrs: noredzone
declare dso_local i8* @strcpy(i8*, i8*) #2

; Function Attrs: noredzone
declare dso_local i32 @strcmp(i8*, i8*) #2

; Function Attrs: noredzone
declare dso_local i8* @acpi_device_hid(%struct.acpi_device*) #2

; Function Attrs: noredzone
declare dso_local %struct.resource* @__request_region(%struct.resource*, i64, i64, i8*, i32) #2

; Function Attrs: noredzone
declare dso_local void @__warn_printk(i8*, ...) #2

; Function Attrs: noredzone
declare dso_local void @acpi_walk_dep_device_list(i8*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @acpi_driver_data(%struct.acpi_device* %d) #0 !dbg !10862 {
entry:
  %d.addr = alloca %struct.acpi_device*, align 8
  store %struct.acpi_device* %d, %struct.acpi_device** %d.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.acpi_device** %d.addr, metadata !10865, metadata !DIExpression()), !dbg !10866
  %0 = load %struct.acpi_device*, %struct.acpi_device** %d.addr, align 8, !dbg !10867
  %driver_data = getelementptr inbounds %struct.acpi_device, %struct.acpi_device* %0, i32 0, i32 20, !dbg !10868
  %1 = load i8*, i8** %driver_data, align 8, !dbg !10868
  ret i8* %1, !dbg !10869
}

; Function Attrs: noredzone
declare dso_local void @__release_region(%struct.resource*, i64, i64) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @ec_remove_handlers(%struct.acpi_ec* %ec) #0 !dbg !10870 {
entry:
  %ec.addr = alloca %struct.acpi_ec*, align 8
  store %struct.acpi_ec* %ec, %struct.acpi_ec** %ec.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.acpi_ec** %ec.addr, metadata !10871, metadata !DIExpression()), !dbg !10872
  %0 = load %struct.acpi_ec*, %struct.acpi_ec** %ec.addr, align 8, !dbg !10873
  %flags = getelementptr inbounds %struct.acpi_ec, %struct.acpi_ec* %0, i32 0, i32 6, !dbg !10875
  %call = call zeroext i1 @test_bit(i64 4, i64* %flags) #11, !dbg !10876
  br i1 %call, label %if.then, label %if.end5, !dbg !10877

if.then:                                          ; preds = %entry
  %1 = load %struct.acpi_ec*, %struct.acpi_ec** %ec.addr, align 8, !dbg !10878
  %handle = getelementptr inbounds %struct.acpi_ec, %struct.acpi_ec* %1, i32 0, i32 0, !dbg !10878
  %2 = load i8*, i8** %handle, align 8, !dbg !10878
  %call1 = call i32 @acpi_remove_address_space_handler(i8* %2, i8 zeroext 3, i32 (i32, i64, i32, i64*, i8*, i8*)* @acpi_ec_space_handler) #11, !dbg !10878
  %tobool = icmp ne i32 %call1, 0, !dbg !10878
  br i1 %tobool, label %if.then2, label %if.end, !dbg !10881

if.then2:                                         ; preds = %if.then
  %call3 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.59, i64 0, i64 0)) #13, !dbg !10882
  br label %if.end, !dbg !10882

if.end:                                           ; preds = %if.then2, %if.then
  %3 = load %struct.acpi_ec*, %struct.acpi_ec** %ec.addr, align 8, !dbg !10883
  %flags4 = getelementptr inbounds %struct.acpi_ec, %struct.acpi_ec* %3, i32 0, i32 6, !dbg !10884
  call void @clear_bit(i64 4, i64* %flags4) #11, !dbg !10885
  br label %if.end5, !dbg !10886

if.end5:                                          ; preds = %if.end, %entry
  %4 = load %struct.acpi_ec*, %struct.acpi_ec** %ec.addr, align 8, !dbg !10887
  call void @acpi_ec_stop(%struct.acpi_ec* %4, i1 zeroext false) #11, !dbg !10888
  %5 = load %struct.acpi_ec*, %struct.acpi_ec** %ec.addr, align 8, !dbg !10889
  %flags6 = getelementptr inbounds %struct.acpi_ec, %struct.acpi_ec* %5, i32 0, i32 6, !dbg !10891
  %call7 = call zeroext i1 @test_bit(i64 3, i64* %flags6) #11, !dbg !10892
  br i1 %call7, label %if.then8, label %if.end21, !dbg !10893

if.then8:                                         ; preds = %if.end5
  %6 = load %struct.acpi_ec*, %struct.acpi_ec** %ec.addr, align 8, !dbg !10894
  %gpe = getelementptr inbounds %struct.acpi_ec, %struct.acpi_ec* %6, i32 0, i32 1, !dbg !10897
  %7 = load i32, i32* %gpe, align 8, !dbg !10897
  %cmp = icmp sge i32 %7, 0, !dbg !10898
  br i1 %cmp, label %land.lhs.true, label %if.end14, !dbg !10899

land.lhs.true:                                    ; preds = %if.then8
  %8 = load %struct.acpi_ec*, %struct.acpi_ec** %ec.addr, align 8, !dbg !10900
  %gpe9 = getelementptr inbounds %struct.acpi_ec, %struct.acpi_ec* %8, i32 0, i32 1, !dbg !10900
  %9 = load i32, i32* %gpe9, align 8, !dbg !10900
  %call10 = call i32 @acpi_remove_gpe_handler(i8* null, i32 %9, i32 (i8*, i32, i8*)* @acpi_ec_gpe_handler) #11, !dbg !10900
  %tobool11 = icmp ne i32 %call10, 0, !dbg !10900
  br i1 %tobool11, label %if.then12, label %if.end14, !dbg !10901

if.then12:                                        ; preds = %land.lhs.true
  %call13 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.60, i64 0, i64 0)) #13, !dbg !10902
  br label %if.end14, !dbg !10902

if.end14:                                         ; preds = %if.then12, %land.lhs.true, %if.then8
  %10 = load %struct.acpi_ec*, %struct.acpi_ec** %ec.addr, align 8, !dbg !10903
  %irq = getelementptr inbounds %struct.acpi_ec, %struct.acpi_ec* %10, i32 0, i32 2, !dbg !10905
  %11 = load i32, i32* %irq, align 4, !dbg !10905
  %cmp15 = icmp sge i32 %11, 0, !dbg !10906
  br i1 %cmp15, label %if.then16, label %if.end19, !dbg !10907

if.then16:                                        ; preds = %if.end14
  %12 = load %struct.acpi_ec*, %struct.acpi_ec** %ec.addr, align 8, !dbg !10908
  %irq17 = getelementptr inbounds %struct.acpi_ec, %struct.acpi_ec* %12, i32 0, i32 2, !dbg !10909
  %13 = load i32, i32* %irq17, align 4, !dbg !10909
  %14 = load %struct.acpi_ec*, %struct.acpi_ec** %ec.addr, align 8, !dbg !10910
  %15 = bitcast %struct.acpi_ec* %14 to i8*, !dbg !10910
  %call18 = call i8* @free_irq(i32 %13, i8* %15) #11, !dbg !10911
  br label %if.end19, !dbg !10911

if.end19:                                         ; preds = %if.then16, %if.end14
  %16 = load %struct.acpi_ec*, %struct.acpi_ec** %ec.addr, align 8, !dbg !10912
  %flags20 = getelementptr inbounds %struct.acpi_ec, %struct.acpi_ec* %16, i32 0, i32 6, !dbg !10913
  call void @clear_bit(i64 3, i64* %flags20) #11, !dbg !10914
  br label %if.end21, !dbg !10915

if.end21:                                         ; preds = %if.end19, %if.end5
  %17 = load %struct.acpi_ec*, %struct.acpi_ec** %ec.addr, align 8, !dbg !10916
  %flags22 = getelementptr inbounds %struct.acpi_ec, %struct.acpi_ec* %17, i32 0, i32 6, !dbg !10918
  %call23 = call zeroext i1 @test_bit(i64 5, i64* %flags22) #11, !dbg !10919
  br i1 %call23, label %if.then24, label %if.end26, !dbg !10920

if.then24:                                        ; preds = %if.end21
  %18 = load %struct.acpi_ec*, %struct.acpi_ec** %ec.addr, align 8, !dbg !10921
  call void @acpi_ec_remove_query_handlers(%struct.acpi_ec* %18, i1 zeroext true, i8 zeroext 0) #11, !dbg !10923
  %19 = load %struct.acpi_ec*, %struct.acpi_ec** %ec.addr, align 8, !dbg !10924
  %flags25 = getelementptr inbounds %struct.acpi_ec, %struct.acpi_ec* %19, i32 0, i32 6, !dbg !10925
  call void @clear_bit(i64 5, i64* %flags25) #11, !dbg !10926
  br label %if.end26, !dbg !10927

if.end26:                                         ; preds = %if.then24, %if.end21
  ret void, !dbg !10928
}

; Function Attrs: noredzone
declare dso_local i32 @acpi_remove_address_space_handler(i8*, i8 zeroext, i32 (i32, i64, i32, i64*, i8*, i8*)*) #2

; Function Attrs: noredzone
declare dso_local i32 @acpi_remove_gpe_handler(i8*, i32, i32 (i8*, i32, i8*)*) #2

; Function Attrs: noredzone
declare dso_local i8* @free_irq(i32, i8*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @acpi_ec_suspend(%struct.device* %dev) #0 !dbg !10929 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %ec = alloca %struct.acpi_ec*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.acpi_device*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !10930, metadata !DIExpression()), !dbg !10931
  call void @llvm.dbg.declare(metadata %struct.acpi_ec** %ec, metadata !10932, metadata !DIExpression()), !dbg !10933
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !10934, metadata !DIExpression()), !dbg !10936
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !10936
  %1 = bitcast %struct.device* %0 to i8*, !dbg !10936
  store i8* %1, i8** %__mptr, align 8, !dbg !10936
  br label %do.body, !dbg !10936

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !10937

do.end:                                           ; preds = %do.body
  %2 = load i8*, i8** %__mptr, align 8, !dbg !10936
  %add.ptr = getelementptr i8, i8* %2, i64 -608, !dbg !10936
  %3 = bitcast i8* %add.ptr to %struct.acpi_device*, !dbg !10936
  store %struct.acpi_device* %3, %struct.acpi_device** %tmp, align 8, !dbg !10937
  %4 = load %struct.acpi_device*, %struct.acpi_device** %tmp, align 8, !dbg !10936
  %call = call i8* @acpi_driver_data(%struct.acpi_device* %4) #11, !dbg !10939
  %5 = bitcast i8* %call to %struct.acpi_ec*, !dbg !10939
  store %struct.acpi_ec* %5, %struct.acpi_ec** %ec, align 8, !dbg !10933
  %call1 = call zeroext i1 @pm_suspend_no_platform() #11, !dbg !10940
  br i1 %call1, label %if.end, label %land.lhs.true, !dbg !10942

land.lhs.true:                                    ; preds = %do.end
  %6 = load i8, i8* @ec_freeze_events, align 1, !dbg !10943
  %tobool = trunc i8 %6 to i1, !dbg !10943
  br i1 %tobool, label %if.then, label %if.end, !dbg !10944

if.then:                                          ; preds = %land.lhs.true
  %7 = load %struct.acpi_ec*, %struct.acpi_ec** %ec, align 8, !dbg !10945
  call void @acpi_ec_disable_event(%struct.acpi_ec* %7) #11, !dbg !10946
  br label %if.end, !dbg !10946

if.end:                                           ; preds = %if.then, %land.lhs.true, %do.end
  ret i32 0, !dbg !10947
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @acpi_ec_resume(%struct.device* %dev) #0 !dbg !10948 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %ec = alloca %struct.acpi_ec*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.acpi_device*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !10949, metadata !DIExpression()), !dbg !10950
  call void @llvm.dbg.declare(metadata %struct.acpi_ec** %ec, metadata !10951, metadata !DIExpression()), !dbg !10952
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !10953, metadata !DIExpression()), !dbg !10955
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !10955
  %1 = bitcast %struct.device* %0 to i8*, !dbg !10955
  store i8* %1, i8** %__mptr, align 8, !dbg !10955
  br label %do.body, !dbg !10955

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !10956

do.end:                                           ; preds = %do.body
  %2 = load i8*, i8** %__mptr, align 8, !dbg !10955
  %add.ptr = getelementptr i8, i8* %2, i64 -608, !dbg !10955
  %3 = bitcast i8* %add.ptr to %struct.acpi_device*, !dbg !10955
  store %struct.acpi_device* %3, %struct.acpi_device** %tmp, align 8, !dbg !10956
  %4 = load %struct.acpi_device*, %struct.acpi_device** %tmp, align 8, !dbg !10955
  %call = call i8* @acpi_driver_data(%struct.acpi_device* %4) #11, !dbg !10958
  %5 = bitcast i8* %call to %struct.acpi_ec*, !dbg !10958
  store %struct.acpi_ec* %5, %struct.acpi_ec** %ec, align 8, !dbg !10952
  %6 = load %struct.acpi_ec*, %struct.acpi_ec** %ec, align 8, !dbg !10959
  call void @acpi_ec_enable_event(%struct.acpi_ec* %6) #11, !dbg !10960
  ret i32 0, !dbg !10961
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @acpi_ec_suspend_noirq(%struct.device* %dev) #0 !dbg !10962 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %ec = alloca %struct.acpi_ec*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.acpi_device*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !10963, metadata !DIExpression()), !dbg !10964
  call void @llvm.dbg.declare(metadata %struct.acpi_ec** %ec, metadata !10965, metadata !DIExpression()), !dbg !10966
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !10967, metadata !DIExpression()), !dbg !10969
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !10969
  %1 = bitcast %struct.device* %0 to i8*, !dbg !10969
  store i8* %1, i8** %__mptr, align 8, !dbg !10969
  br label %do.body, !dbg !10969

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !10970

do.end:                                           ; preds = %do.body
  %2 = load i8*, i8** %__mptr, align 8, !dbg !10969
  %add.ptr = getelementptr i8, i8* %2, i64 -608, !dbg !10969
  %3 = bitcast i8* %add.ptr to %struct.acpi_device*, !dbg !10969
  store %struct.acpi_device* %3, %struct.acpi_device** %tmp, align 8, !dbg !10970
  %4 = load %struct.acpi_device*, %struct.acpi_device** %tmp, align 8, !dbg !10969
  %call = call i8* @acpi_driver_data(%struct.acpi_device* %4) #11, !dbg !10972
  %5 = bitcast i8* %call to %struct.acpi_ec*, !dbg !10972
  store %struct.acpi_ec* %5, %struct.acpi_ec** %ec, align 8, !dbg !10966
  %6 = load i8, i8* @ec_no_wakeup, align 1, !dbg !10973
  %tobool = trunc i8 %6 to i1, !dbg !10973
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !10975

land.lhs.true:                                    ; preds = %do.end
  %7 = load %struct.acpi_ec*, %struct.acpi_ec** %ec, align 8, !dbg !10976
  %flags = getelementptr inbounds %struct.acpi_ec, %struct.acpi_ec* %7, i32 0, i32 6, !dbg !10977
  %call1 = call zeroext i1 @test_bit(i64 6, i64* %flags) #11, !dbg !10978
  br i1 %call1, label %land.lhs.true2, label %if.end, !dbg !10979

land.lhs.true2:                                   ; preds = %land.lhs.true
  %8 = load %struct.acpi_ec*, %struct.acpi_ec** %ec, align 8, !dbg !10980
  %gpe = getelementptr inbounds %struct.acpi_ec, %struct.acpi_ec* %8, i32 0, i32 1, !dbg !10981
  %9 = load i32, i32* %gpe, align 8, !dbg !10981
  %cmp = icmp sge i32 %9, 0, !dbg !10982
  br i1 %cmp, label %land.lhs.true3, label %if.end, !dbg !10983

land.lhs.true3:                                   ; preds = %land.lhs.true2
  %10 = load %struct.acpi_ec*, %struct.acpi_ec** %ec, align 8, !dbg !10984
  %reference_count = getelementptr inbounds %struct.acpi_ec, %struct.acpi_ec* %10, i32 0, i32 7, !dbg !10985
  %11 = load i64, i64* %reference_count, align 8, !dbg !10985
  %cmp4 = icmp uge i64 %11, 1, !dbg !10986
  br i1 %cmp4, label %if.then, label %if.end, !dbg !10987

if.then:                                          ; preds = %land.lhs.true3
  %12 = load %struct.acpi_ec*, %struct.acpi_ec** %ec, align 8, !dbg !10988
  %gpe5 = getelementptr inbounds %struct.acpi_ec, %struct.acpi_ec* %12, i32 0, i32 1, !dbg !10989
  %13 = load i32, i32* %gpe5, align 8, !dbg !10989
  %call6 = call i32 @acpi_set_gpe(i8* null, i32 %13, i8 zeroext 1) #11, !dbg !10990
  br label %if.end, !dbg !10990

if.end:                                           ; preds = %if.then, %land.lhs.true3, %land.lhs.true2, %land.lhs.true, %do.end
  %14 = load %struct.acpi_ec*, %struct.acpi_ec** %ec, align 8, !dbg !10991
  call void @acpi_ec_enter_noirq(%struct.acpi_ec* %14) #11, !dbg !10992
  ret i32 0, !dbg !10993
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @acpi_ec_resume_noirq(%struct.device* %dev) #0 !dbg !10994 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %ec = alloca %struct.acpi_ec*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.acpi_device*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !10995, metadata !DIExpression()), !dbg !10996
  call void @llvm.dbg.declare(metadata %struct.acpi_ec** %ec, metadata !10997, metadata !DIExpression()), !dbg !10998
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !10999, metadata !DIExpression()), !dbg !11001
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !11001
  %1 = bitcast %struct.device* %0 to i8*, !dbg !11001
  store i8* %1, i8** %__mptr, align 8, !dbg !11001
  br label %do.body, !dbg !11001

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !11002

do.end:                                           ; preds = %do.body
  %2 = load i8*, i8** %__mptr, align 8, !dbg !11001
  %add.ptr = getelementptr i8, i8* %2, i64 -608, !dbg !11001
  %3 = bitcast i8* %add.ptr to %struct.acpi_device*, !dbg !11001
  store %struct.acpi_device* %3, %struct.acpi_device** %tmp, align 8, !dbg !11002
  %4 = load %struct.acpi_device*, %struct.acpi_device** %tmp, align 8, !dbg !11001
  %call = call i8* @acpi_driver_data(%struct.acpi_device* %4) #11, !dbg !11004
  %5 = bitcast i8* %call to %struct.acpi_ec*, !dbg !11004
  store %struct.acpi_ec* %5, %struct.acpi_ec** %ec, align 8, !dbg !10998
  %6 = load %struct.acpi_ec*, %struct.acpi_ec** %ec, align 8, !dbg !11005
  call void @acpi_ec_leave_noirq(%struct.acpi_ec* %6) #11, !dbg !11006
  %7 = load i8, i8* @ec_no_wakeup, align 1, !dbg !11007
  %tobool = trunc i8 %7 to i1, !dbg !11007
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !11009

land.lhs.true:                                    ; preds = %do.end
  %8 = load %struct.acpi_ec*, %struct.acpi_ec** %ec, align 8, !dbg !11010
  %flags = getelementptr inbounds %struct.acpi_ec, %struct.acpi_ec* %8, i32 0, i32 6, !dbg !11011
  %call1 = call zeroext i1 @test_bit(i64 6, i64* %flags) #11, !dbg !11012
  br i1 %call1, label %land.lhs.true2, label %if.end, !dbg !11013

land.lhs.true2:                                   ; preds = %land.lhs.true
  %9 = load %struct.acpi_ec*, %struct.acpi_ec** %ec, align 8, !dbg !11014
  %gpe = getelementptr inbounds %struct.acpi_ec, %struct.acpi_ec* %9, i32 0, i32 1, !dbg !11015
  %10 = load i32, i32* %gpe, align 8, !dbg !11015
  %cmp = icmp sge i32 %10, 0, !dbg !11016
  br i1 %cmp, label %land.lhs.true3, label %if.end, !dbg !11017

land.lhs.true3:                                   ; preds = %land.lhs.true2
  %11 = load %struct.acpi_ec*, %struct.acpi_ec** %ec, align 8, !dbg !11018
  %reference_count = getelementptr inbounds %struct.acpi_ec, %struct.acpi_ec* %11, i32 0, i32 7, !dbg !11019
  %12 = load i64, i64* %reference_count, align 8, !dbg !11019
  %cmp4 = icmp uge i64 %12, 1, !dbg !11020
  br i1 %cmp4, label %if.then, label %if.end, !dbg !11021

if.then:                                          ; preds = %land.lhs.true3
  %13 = load %struct.acpi_ec*, %struct.acpi_ec** %ec, align 8, !dbg !11022
  %gpe5 = getelementptr inbounds %struct.acpi_ec, %struct.acpi_ec* %13, i32 0, i32 1, !dbg !11023
  %14 = load i32, i32* %gpe5, align 8, !dbg !11023
  %call6 = call i32 @acpi_set_gpe(i8* null, i32 %14, i8 zeroext 0) #11, !dbg !11024
  br label %if.end, !dbg !11024

if.end:                                           ; preds = %if.then, %land.lhs.true3, %land.lhs.true2, %land.lhs.true, %do.end
  ret i32 0, !dbg !11025
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @acpi_ec_disable_event(%struct.acpi_ec* %ec) #0 !dbg !11026 {
entry:
  %lock.addr.i20 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i20, metadata !5875, metadata !DIExpression()), !dbg !11027
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !5881, metadata !DIExpression()), !dbg !11029
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !5860, metadata !DIExpression()), !dbg !11030
  %ec.addr = alloca %struct.acpi_ec*, align 8
  %flags = alloca i64, align 8
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__dummy5 = alloca i64, align 8
  %__dummy26 = alloca i64, align 8
  %tmp9 = alloca i32, align 4
  store %struct.acpi_ec* %ec, %struct.acpi_ec** %ec.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.acpi_ec** %ec.addr, metadata !11037, metadata !DIExpression()), !dbg !11038
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !11039, metadata !DIExpression()), !dbg !11040
  br label %do.body, !dbg !11041

do.body:                                          ; preds = %entry
  br label %do.body1, !dbg !11042

do.body1:                                         ; preds = %do.body
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !11043, metadata !DIExpression()), !dbg !11045
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !11046, metadata !DIExpression()), !dbg !11045
  %cmp = icmp eq i64* %__dummy, %__dummy2, !dbg !11045
  %conv = zext i1 %cmp to i32, !dbg !11045
  store i32 1, i32* %tmp, align 4, !dbg !11045
  %0 = load i32, i32* %tmp, align 4, !dbg !11045
  br label %do.body2, !dbg !11047

do.body2:                                         ; preds = %do.body1
  br label %do.body3, !dbg !11048

do.body3:                                         ; preds = %do.body2
  br label %do.body4, !dbg !11049

do.body4:                                         ; preds = %do.body3
  call void @llvm.dbg.declare(metadata i64* %__dummy5, metadata !11051, metadata !DIExpression()), !dbg !11054
  call void @llvm.dbg.declare(metadata i64* %__dummy26, metadata !11055, metadata !DIExpression()), !dbg !11054
  %cmp7 = icmp eq i64* %__dummy5, %__dummy26, !dbg !11054
  %conv8 = zext i1 %cmp7 to i32, !dbg !11054
  store i32 1, i32* %tmp9, align 4, !dbg !11054
  %1 = load i32, i32* %tmp9, align 4, !dbg !11054
  %call = call i64 @arch_local_irq_save() #11, !dbg !11056
  store i64 %call, i64* %flags, align 8, !dbg !11056
  br label %do.end, !dbg !11056

do.end:                                           ; preds = %do.body4
  br label %do.end10, !dbg !11049

do.end10:                                         ; preds = %do.end
  br label %do.body11, !dbg !11048

do.body11:                                        ; preds = %do.end10
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !11057, !srcloc !11058
  br label %do.body12, !dbg !11057

do.body12:                                        ; preds = %do.body11
  %2 = load %struct.acpi_ec*, %struct.acpi_ec** %ec.addr, align 8, !dbg !11059
  %lock = getelementptr inbounds %struct.acpi_ec, %struct.acpi_ec* %2, i32 0, i32 12, !dbg !11059
  store %struct.spinlock* %lock, %struct.spinlock** %lock.addr.i, align 8
  %3 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !11060
  %4 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %3, i32 0, i32 0, !dbg !11061
  %rlock.i = bitcast %union.anon.0* %4 to %struct.raw_spinlock*, !dbg !11061
  br label %do.end14, !dbg !11059

do.end14:                                         ; preds = %do.body12
  br label %do.end15, !dbg !11057

do.end15:                                         ; preds = %do.end14
  br label %do.end16, !dbg !11048

do.end16:                                         ; preds = %do.end15
  br label %do.end17, !dbg !11047

do.end17:                                         ; preds = %do.end16
  br label %do.end18, !dbg !11042

do.end18:                                         ; preds = %do.end17
  %5 = load %struct.acpi_ec*, %struct.acpi_ec** %ec.addr, align 8, !dbg !11062
  call void @__acpi_ec_disable_event(%struct.acpi_ec* %5) #11, !dbg !11063
  %6 = load %struct.acpi_ec*, %struct.acpi_ec** %ec.addr, align 8, !dbg !11064
  %lock19 = getelementptr inbounds %struct.acpi_ec, %struct.acpi_ec* %6, i32 0, i32 12, !dbg !11065
  %7 = load i64, i64* %flags, align 8, !dbg !11066
  store %struct.spinlock* %lock19, %struct.spinlock** %lock.addr.i20, align 8
  store i64 %7, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !372, metadata !5933, metadata !DIExpression()) #7, !dbg !11067
  call void @llvm.dbg.declare(metadata !372, metadata !5937, metadata !DIExpression()) #7, !dbg !11067
  store i32 1, i32* %tmp.i, align 4, !dbg !11067
  %8 = load i32, i32* %tmp.i, align 4, !dbg !11067
  call void @llvm.dbg.declare(metadata !372, metadata !5938, metadata !DIExpression()) #7, !dbg !11068
  call void @llvm.dbg.declare(metadata !372, metadata !5944, metadata !DIExpression()) #7, !dbg !11068
  store i32 1, i32* %tmp8.i, align 4, !dbg !11068
  %9 = load i32, i32* %tmp8.i, align 4, !dbg !11068
  %10 = load i64, i64* %flags.addr.i, align 8, !dbg !11069
  call void @arch_local_irq_restore(i64 %10) #12, !dbg !11069
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !11070, !srcloc !5948
  %11 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i20, align 8, !dbg !11071
  %12 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %11, i32 0, i32 0, !dbg !11071
  %rlock.i21 = bitcast %union.anon.0* %12 to %struct.raw_spinlock*, !dbg !11071
  call void @__acpi_ec_flush_work() #11, !dbg !11072
  ret void, !dbg !11073
}

; Function Attrs: noredzone
declare dso_local i32 @acpi_get_handle(i8*, i8*, i8**) #2

; Function Attrs: noredzone
declare dso_local i32 @acpi_bus_register_early_device(i32) #2

attributes #0 = { noinline noredzone nounwind optnone sspstrong "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="true" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,-3dnow,-3dnowa,-aes,-avx,-avx2,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-f16c,-fma,-fma4,-gfni,-mmx,-pclmul,-sha,-sse,-sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-ssse3,-vaes,-vpclmulqdq,-x87,-xop,-xsave,-xsaveopt" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind readnone speculatable willreturn }
attributes #2 = { noredzone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,-3dnow,-3dnowa,-aes,-avx,-avx2,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-f16c,-fma,-fma4,-gfni,-mmx,-pclmul,-sha,-sse,-sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-ssse3,-vaes,-vpclmulqdq,-x87,-xop,-xsave,-xsaveopt" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { cold noinline noredzone nounwind optnone sspstrong "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="true" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,-3dnow,-3dnowa,-aes,-avx,-avx2,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-f16c,-fma,-fma4,-gfni,-mmx,-pclmul,-sha,-sse,-sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-ssse3,-vaes,-vpclmulqdq,-x87,-xop,-xsave,-xsaveopt" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { cold noredzone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,-3dnow,-3dnowa,-aes,-avx,-avx2,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-f16c,-fma,-fma4,-gfni,-mmx,-pclmul,-sha,-sse,-sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-ssse3,-vaes,-vpclmulqdq,-x87,-xop,-xsave,-xsaveopt" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { argmemonly nounwind willreturn }
attributes #6 = { nounwind readonly }
attributes #7 = { nounwind }
attributes #8 = { nounwind readnone willreturn }
attributes #9 = { nounwind willreturn }
attributes #10 = { noinline noredzone nounwind optnone readnone sspstrong "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="true" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,-3dnow,-3dnowa,-aes,-avx,-avx2,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-f16c,-fma,-fma4,-gfni,-mmx,-pclmul,-sha,-sse,-sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-ssse3,-vaes,-vpclmulqdq,-x87,-xop,-xsave,-xsaveopt" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { noredzone }
attributes #12 = { noredzone nounwind }
attributes #13 = { cold noredzone }
attributes #14 = { noredzone nounwind readnone }

!llvm.dbg.cu = !{!2}
!llvm.named.register.rsp = !{!5611}
!llvm.module.flags = !{!5612, !5613, !5614, !5615}
!llvm.ident = !{!5616}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "__param_str_ec_delay", scope: !2, file: !3, line: 110, type: !5608, isLocal: true, isDefinition: true)
!2 = distinct !DICompileUnit(language: DW_LANG_C89, file: !3, producer: "clang version 10.0.1 (https://github.com/llvm/llvm-project.git ef32c611aa214dea855364efd7ba451ec5ec3f74)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !246, globals: !5377, splitDebugInlining: false, nameTableKind: None)
!3 = !DIFile(filename: "drivers/acpi/ec.c", directory: "/home/lizy2001/genbc/linux")
!4 = !{!5, !11, !18, !29, !62, !69, !77, !82, !89, !95, !102, !114, !121, !126, !132, !137, !143, !150, !156, !165, !173, !179, !185, !192, !199, !213, !219, !235}
!5 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !6, line: 10, baseType: !7, size: 32, elements: !8)
!6 = !DIFile(filename: "./include/linux/stddef.h", directory: "/home/lizy2001/genbc/linux")
!7 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!8 = !{!9, !10}
!9 = !DIEnumerator(name: "false", value: 0, isUnsigned: true)
!10 = !DIEnumerator(name: "true", value: 1, isUnsigned: true)
!11 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "ec_command", file: !3, line: 78, baseType: !7, size: 32, elements: !12)
!12 = !{!13, !14, !15, !16, !17}
!13 = !DIEnumerator(name: "ACPI_EC_COMMAND_READ", value: 128, isUnsigned: true)
!14 = !DIEnumerator(name: "ACPI_EC_COMMAND_WRITE", value: 129, isUnsigned: true)
!15 = !DIEnumerator(name: "ACPI_EC_BURST_ENABLE", value: 130, isUnsigned: true)
!16 = !DIEnumerator(name: "ACPI_EC_BURST_DISABLE", value: 131, isUnsigned: true)
!17 = !DIEnumerator(name: "ACPI_EC_COMMAND_QUERY", value: 132, isUnsigned: true)
!18 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !3, line: 93, baseType: !7, size: 32, elements: !19)
!19 = !{!20, !21, !22, !23, !24, !25, !26, !27, !28}
!20 = !DIEnumerator(name: "EC_FLAGS_QUERY_ENABLED", value: 0, isUnsigned: true)
!21 = !DIEnumerator(name: "EC_FLAGS_QUERY_PENDING", value: 1, isUnsigned: true)
!22 = !DIEnumerator(name: "EC_FLAGS_QUERY_GUARDING", value: 2, isUnsigned: true)
!23 = !DIEnumerator(name: "EC_FLAGS_EVENT_HANDLER_INSTALLED", value: 3, isUnsigned: true)
!24 = !DIEnumerator(name: "EC_FLAGS_EC_HANDLER_INSTALLED", value: 4, isUnsigned: true)
!25 = !DIEnumerator(name: "EC_FLAGS_QUERY_METHODS_INSTALLED", value: 5, isUnsigned: true)
!26 = !DIEnumerator(name: "EC_FLAGS_STARTED", value: 6, isUnsigned: true)
!27 = !DIEnumerator(name: "EC_FLAGS_STOPPED", value: 7, isUnsigned: true)
!28 = !DIEnumerator(name: "EC_FLAGS_EVENTS_MASKED", value: 8, isUnsigned: true)
!29 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !30, line: 30, baseType: !31, size: 64, elements: !32)
!30 = !DIFile(filename: "./include/linux/workqueue.h", directory: "/home/lizy2001/genbc/linux")
!31 = !DIBasicType(name: "long int", size: 64, encoding: DW_ATE_signed)
!32 = !{!33, !34, !35, !36, !37, !38, !39, !40, !41, !42, !43, !44, !45, !46, !47, !48, !49, !50, !51, !52, !53, !54, !55, !56, !57, !58, !59, !60, !61}
!33 = !DIEnumerator(name: "WORK_STRUCT_PENDING_BIT", value: 0)
!34 = !DIEnumerator(name: "WORK_STRUCT_DELAYED_BIT", value: 1)
!35 = !DIEnumerator(name: "WORK_STRUCT_PWQ_BIT", value: 2)
!36 = !DIEnumerator(name: "WORK_STRUCT_LINKED_BIT", value: 3)
!37 = !DIEnumerator(name: "WORK_STRUCT_COLOR_SHIFT", value: 4)
!38 = !DIEnumerator(name: "WORK_STRUCT_COLOR_BITS", value: 4)
!39 = !DIEnumerator(name: "WORK_STRUCT_PENDING", value: 1)
!40 = !DIEnumerator(name: "WORK_STRUCT_DELAYED", value: 2)
!41 = !DIEnumerator(name: "WORK_STRUCT_PWQ", value: 4)
!42 = !DIEnumerator(name: "WORK_STRUCT_LINKED", value: 8)
!43 = !DIEnumerator(name: "WORK_STRUCT_STATIC", value: 0)
!44 = !DIEnumerator(name: "WORK_NR_COLORS", value: 15)
!45 = !DIEnumerator(name: "WORK_NO_COLOR", value: 15)
!46 = !DIEnumerator(name: "WORK_CPU_UNBOUND", value: 1)
!47 = !DIEnumerator(name: "WORK_STRUCT_FLAG_BITS", value: 8)
!48 = !DIEnumerator(name: "WORK_OFFQ_FLAG_BASE", value: 4)
!49 = !DIEnumerator(name: "__WORK_OFFQ_CANCELING", value: 4)
!50 = !DIEnumerator(name: "WORK_OFFQ_CANCELING", value: 16)
!51 = !DIEnumerator(name: "WORK_OFFQ_FLAG_BITS", value: 1)
!52 = !DIEnumerator(name: "WORK_OFFQ_POOL_SHIFT", value: 5)
!53 = !DIEnumerator(name: "WORK_OFFQ_LEFT", value: 59)
!54 = !DIEnumerator(name: "WORK_OFFQ_POOL_BITS", value: 31)
!55 = !DIEnumerator(name: "WORK_OFFQ_POOL_NONE", value: 2147483647)
!56 = !DIEnumerator(name: "WORK_STRUCT_FLAG_MASK", value: 255)
!57 = !DIEnumerator(name: "WORK_STRUCT_WQ_DATA_MASK", value: -256)
!58 = !DIEnumerator(name: "WORK_STRUCT_NO_POOL", value: 68719476704)
!59 = !DIEnumerator(name: "WORK_BUSY_PENDING", value: 1)
!60 = !DIEnumerator(name: "WORK_BUSY_RUNNING", value: 2)
!61 = !DIEnumerator(name: "WORKER_DESC_LEN", value: 24)
!62 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "kmalloc_cache_type", file: !63, line: 305, baseType: !7, size: 32, elements: !64)
!63 = !DIFile(filename: "./include/linux/slab.h", directory: "/home/lizy2001/genbc/linux")
!64 = !{!65, !66, !67, !68}
!65 = !DIEnumerator(name: "KMALLOC_NORMAL", value: 0, isUnsigned: true)
!66 = !DIEnumerator(name: "KMALLOC_RECLAIM", value: 1, isUnsigned: true)
!67 = !DIEnumerator(name: "KMALLOC_DMA", value: 2, isUnsigned: true)
!68 = !DIEnumerator(name: "NR_KMALLOC_TYPES", value: 3, isUnsigned: true)
!69 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "refcount_saturation_type", file: !70, line: 119, baseType: !7, size: 32, elements: !71)
!70 = !DIFile(filename: "./include/linux/refcount.h", directory: "/home/lizy2001/genbc/linux")
!71 = !{!72, !73, !74, !75, !76}
!72 = !DIEnumerator(name: "REFCOUNT_ADD_NOT_ZERO_OVF", value: 0, isUnsigned: true)
!73 = !DIEnumerator(name: "REFCOUNT_ADD_OVF", value: 1, isUnsigned: true)
!74 = !DIEnumerator(name: "REFCOUNT_ADD_UAF", value: 2, isUnsigned: true)
!75 = !DIEnumerator(name: "REFCOUNT_SUB_UAF", value: 3, isUnsigned: true)
!76 = !DIEnumerator(name: "REFCOUNT_DEC_LEAK", value: 4, isUnsigned: true)
!77 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "writeback_sync_modes", file: !78, line: 41, baseType: !7, size: 32, elements: !79)
!78 = !DIFile(filename: "./include/linux/writeback.h", directory: "/home/lizy2001/genbc/linux")
!79 = !{!80, !81}
!80 = !DIEnumerator(name: "WB_SYNC_NONE", value: 0, isUnsigned: true)
!81 = !DIEnumerator(name: "WB_SYNC_ALL", value: 1, isUnsigned: true)
!82 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "migrate_mode", file: !83, line: 15, baseType: !7, size: 32, elements: !84)
!83 = !DIFile(filename: "./include/linux/migrate_mode.h", directory: "/home/lizy2001/genbc/linux")
!84 = !{!85, !86, !87, !88}
!85 = !DIEnumerator(name: "MIGRATE_ASYNC", value: 0, isUnsigned: true)
!86 = !DIEnumerator(name: "MIGRATE_SYNC_LIGHT", value: 1, isUnsigned: true)
!87 = !DIEnumerator(name: "MIGRATE_SYNC", value: 2, isUnsigned: true)
!88 = !DIEnumerator(name: "MIGRATE_SYNC_NO_COPY", value: 3, isUnsigned: true)
!89 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "mq_rq_state", file: !90, line: 118, baseType: !7, size: 32, elements: !91)
!90 = !DIFile(filename: "./include/linux/blkdev.h", directory: "/home/lizy2001/genbc/linux")
!91 = !{!92, !93, !94}
!92 = !DIEnumerator(name: "MQ_RQ_IDLE", value: 0, isUnsigned: true)
!93 = !DIEnumerator(name: "MQ_RQ_IN_FLIGHT", value: 1, isUnsigned: true)
!94 = !DIEnumerator(name: "MQ_RQ_COMPLETE", value: 2, isUnsigned: true)
!95 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "elv_merge", file: !96, line: 19, baseType: !7, size: 32, elements: !97)
!96 = !DIFile(filename: "./include/linux/elevator.h", directory: "/home/lizy2001/genbc/linux")
!97 = !{!98, !99, !100, !101}
!98 = !DIEnumerator(name: "ELEVATOR_NO_MERGE", value: 0, isUnsigned: true)
!99 = !DIEnumerator(name: "ELEVATOR_FRONT_MERGE", value: 1, isUnsigned: true)
!100 = !DIEnumerator(name: "ELEVATOR_BACK_MERGE", value: 2, isUnsigned: true)
!101 = !DIEnumerator(name: "ELEVATOR_DISCARD_MERGE", value: 3, isUnsigned: true)
!102 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "wb_reason", file: !103, line: 49, baseType: !7, size: 32, elements: !104)
!103 = !DIFile(filename: "./include/linux/backing-dev-defs.h", directory: "/home/lizy2001/genbc/linux")
!104 = !{!105, !106, !107, !108, !109, !110, !111, !112, !113}
!105 = !DIEnumerator(name: "WB_REASON_BACKGROUND", value: 0, isUnsigned: true)
!106 = !DIEnumerator(name: "WB_REASON_VMSCAN", value: 1, isUnsigned: true)
!107 = !DIEnumerator(name: "WB_REASON_SYNC", value: 2, isUnsigned: true)
!108 = !DIEnumerator(name: "WB_REASON_PERIODIC", value: 3, isUnsigned: true)
!109 = !DIEnumerator(name: "WB_REASON_LAPTOP_TIMER", value: 4, isUnsigned: true)
!110 = !DIEnumerator(name: "WB_REASON_FS_FREE_SPACE", value: 5, isUnsigned: true)
!111 = !DIEnumerator(name: "WB_REASON_FORKER_THREAD", value: 6, isUnsigned: true)
!112 = !DIEnumerator(name: "WB_REASON_FOREIGN_FLUSH", value: 7, isUnsigned: true)
!113 = !DIEnumerator(name: "WB_REASON_MAX", value: 8, isUnsigned: true)
!114 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "rpm_status", file: !115, line: 502, baseType: !7, size: 32, elements: !116)
!115 = !DIFile(filename: "./include/linux/pm.h", directory: "/home/lizy2001/genbc/linux")
!116 = !{!117, !118, !119, !120}
!117 = !DIEnumerator(name: "RPM_ACTIVE", value: 0, isUnsigned: true)
!118 = !DIEnumerator(name: "RPM_RESUMING", value: 1, isUnsigned: true)
!119 = !DIEnumerator(name: "RPM_SUSPENDED", value: 2, isUnsigned: true)
!120 = !DIEnumerator(name: "RPM_SUSPENDING", value: 3, isUnsigned: true)
!121 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "blk_zoned_model", file: !90, line: 315, baseType: !7, size: 32, elements: !122)
!122 = !{!123, !124, !125}
!123 = !DIEnumerator(name: "BLK_ZONED_NONE", value: 0, isUnsigned: true)
!124 = !DIEnumerator(name: "BLK_ZONED_HA", value: 1, isUnsigned: true)
!125 = !DIEnumerator(name: "BLK_ZONED_HM", value: 2, isUnsigned: true)
!126 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "page_entry_size", file: !127, line: 546, baseType: !7, size: 32, elements: !128)
!127 = !DIFile(filename: "./include/linux/mm.h", directory: "/home/lizy2001/genbc/linux")
!128 = !{!129, !130, !131}
!129 = !DIEnumerator(name: "PE_SIZE_PTE", value: 0, isUnsigned: true)
!130 = !DIEnumerator(name: "PE_SIZE_PMD", value: 1, isUnsigned: true)
!131 = !DIEnumerator(name: "PE_SIZE_PUD", value: 2, isUnsigned: true)
!132 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "hrtimer_restart", file: !133, line: 65, baseType: !7, size: 32, elements: !134)
!133 = !DIFile(filename: "./include/linux/hrtimer.h", directory: "/home/lizy2001/genbc/linux")
!134 = !{!135, !136}
!135 = !DIEnumerator(name: "HRTIMER_NORESTART", value: 0, isUnsigned: true)
!136 = !DIEnumerator(name: "HRTIMER_RESTART", value: 1, isUnsigned: true)
!137 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "timespec_type", file: !138, line: 16, baseType: !7, size: 32, elements: !139)
!138 = !DIFile(filename: "./include/linux/restart_block.h", directory: "/home/lizy2001/genbc/linux")
!139 = !{!140, !141, !142}
!140 = !DIEnumerator(name: "TT_NONE", value: 0, isUnsigned: true)
!141 = !DIEnumerator(name: "TT_NATIVE", value: 1, isUnsigned: true)
!142 = !DIEnumerator(name: "TT_COMPAT", value: 2, isUnsigned: true)
!143 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "memory_type", file: !144, line: 59, baseType: !7, size: 32, elements: !145)
!144 = !DIFile(filename: "./include/linux/memremap.h", directory: "/home/lizy2001/genbc/linux")
!145 = !{!146, !147, !148, !149}
!146 = !DIEnumerator(name: "MEMORY_DEVICE_PRIVATE", value: 1, isUnsigned: true)
!147 = !DIEnumerator(name: "MEMORY_DEVICE_FS_DAX", value: 2, isUnsigned: true)
!148 = !DIEnumerator(name: "MEMORY_DEVICE_GENERIC", value: 3, isUnsigned: true)
!149 = !DIEnumerator(name: "MEMORY_DEVICE_PCI_P2PDMA", value: 4, isUnsigned: true)
!150 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "quota_type", file: !151, line: 54, baseType: !7, size: 32, elements: !152)
!151 = !DIFile(filename: "./include/linux/quota.h", directory: "/home/lizy2001/genbc/linux")
!152 = !{!153, !154, !155}
!153 = !DIEnumerator(name: "USRQUOTA", value: 0, isUnsigned: true)
!154 = !DIEnumerator(name: "GRPQUOTA", value: 1, isUnsigned: true)
!155 = !DIEnumerator(name: "PRJQUOTA", value: 2, isUnsigned: true)
!156 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "rw_hint", file: !157, line: 296, baseType: !7, size: 32, elements: !158)
!157 = !DIFile(filename: "./include/linux/fs.h", directory: "/home/lizy2001/genbc/linux")
!158 = !{!159, !160, !161, !162, !163, !164}
!159 = !DIEnumerator(name: "WRITE_LIFE_NOT_SET", value: 0, isUnsigned: true)
!160 = !DIEnumerator(name: "WRITE_LIFE_NONE", value: 1, isUnsigned: true)
!161 = !DIEnumerator(name: "WRITE_LIFE_SHORT", value: 2, isUnsigned: true)
!162 = !DIEnumerator(name: "WRITE_LIFE_MEDIUM", value: 3, isUnsigned: true)
!163 = !DIEnumerator(name: "WRITE_LIFE_LONG", value: 4, isUnsigned: true)
!164 = !DIEnumerator(name: "WRITE_LIFE_EXTREME", value: 5, isUnsigned: true)
!165 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "pid_type", file: !166, line: 9, baseType: !7, size: 32, elements: !167)
!166 = !DIFile(filename: "./include/linux/pid.h", directory: "/home/lizy2001/genbc/linux")
!167 = !{!168, !169, !170, !171, !172}
!168 = !DIEnumerator(name: "PIDTYPE_PID", value: 0, isUnsigned: true)
!169 = !DIEnumerator(name: "PIDTYPE_TGID", value: 1, isUnsigned: true)
!170 = !DIEnumerator(name: "PIDTYPE_PGID", value: 2, isUnsigned: true)
!171 = !DIEnumerator(name: "PIDTYPE_SID", value: 3, isUnsigned: true)
!172 = !DIEnumerator(name: "PIDTYPE_MAX", value: 4, isUnsigned: true)
!173 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "kobj_ns_type", file: !174, line: 26, baseType: !7, size: 32, elements: !175)
!174 = !DIFile(filename: "./include/linux/kobject_ns.h", directory: "/home/lizy2001/genbc/linux")
!175 = !{!176, !177, !178}
!176 = !DIEnumerator(name: "KOBJ_NS_TYPE_NONE", value: 0, isUnsigned: true)
!177 = !DIEnumerator(name: "KOBJ_NS_TYPE_NET", value: 1, isUnsigned: true)
!178 = !DIEnumerator(name: "KOBJ_NS_TYPES", value: 2, isUnsigned: true)
!179 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "probe_type", file: !180, line: 44, baseType: !7, size: 32, elements: !181)
!180 = !DIFile(filename: "./include/linux/device/driver.h", directory: "/home/lizy2001/genbc/linux")
!181 = !{!182, !183, !184}
!182 = !DIEnumerator(name: "PROBE_DEFAULT_STRATEGY", value: 0, isUnsigned: true)
!183 = !DIEnumerator(name: "PROBE_PREFER_ASYNCHRONOUS", value: 1, isUnsigned: true)
!184 = !DIEnumerator(name: "PROBE_FORCE_SYNCHRONOUS", value: 2, isUnsigned: true)
!185 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "dl_dev_state", file: !186, line: 343, baseType: !7, size: 32, elements: !187)
!186 = !DIFile(filename: "./include/linux/device.h", directory: "/home/lizy2001/genbc/linux")
!187 = !{!188, !189, !190, !191}
!188 = !DIEnumerator(name: "DL_DEV_NO_DRIVER", value: 0, isUnsigned: true)
!189 = !DIEnumerator(name: "DL_DEV_PROBING", value: 1, isUnsigned: true)
!190 = !DIEnumerator(name: "DL_DEV_DRIVER_BOUND", value: 2, isUnsigned: true)
!191 = !DIEnumerator(name: "DL_DEV_UNBINDING", value: 3, isUnsigned: true)
!192 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "rpm_request", file: !115, line: 524, baseType: !7, size: 32, elements: !193)
!193 = !{!194, !195, !196, !197, !198}
!194 = !DIEnumerator(name: "RPM_REQ_NONE", value: 0, isUnsigned: true)
!195 = !DIEnumerator(name: "RPM_REQ_IDLE", value: 1, isUnsigned: true)
!196 = !DIEnumerator(name: "RPM_REQ_SUSPEND", value: 2, isUnsigned: true)
!197 = !DIEnumerator(name: "RPM_REQ_AUTOSUSPEND", value: 3, isUnsigned: true)
!198 = !DIEnumerator(name: "RPM_REQ_RESUME", value: 4, isUnsigned: true)
!199 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "irq_domain_bus_token", file: !200, line: 76, baseType: !7, size: 32, elements: !201)
!200 = !DIFile(filename: "./include/linux/irqdomain.h", directory: "/home/lizy2001/genbc/linux")
!201 = !{!202, !203, !204, !205, !206, !207, !208, !209, !210, !211, !212}
!202 = !DIEnumerator(name: "DOMAIN_BUS_ANY", value: 0, isUnsigned: true)
!203 = !DIEnumerator(name: "DOMAIN_BUS_WIRED", value: 1, isUnsigned: true)
!204 = !DIEnumerator(name: "DOMAIN_BUS_GENERIC_MSI", value: 2, isUnsigned: true)
!205 = !DIEnumerator(name: "DOMAIN_BUS_PCI_MSI", value: 3, isUnsigned: true)
!206 = !DIEnumerator(name: "DOMAIN_BUS_PLATFORM_MSI", value: 4, isUnsigned: true)
!207 = !DIEnumerator(name: "DOMAIN_BUS_NEXUS", value: 5, isUnsigned: true)
!208 = !DIEnumerator(name: "DOMAIN_BUS_IPI", value: 6, isUnsigned: true)
!209 = !DIEnumerator(name: "DOMAIN_BUS_FSL_MC_MSI", value: 7, isUnsigned: true)
!210 = !DIEnumerator(name: "DOMAIN_BUS_TI_SCI_INTA_MSI", value: 8, isUnsigned: true)
!211 = !DIEnumerator(name: "DOMAIN_BUS_WAKEUP", value: 9, isUnsigned: true)
!212 = !DIEnumerator(name: "DOMAIN_BUS_VMD_MSI", value: 10, isUnsigned: true)
!213 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "irqreturn", file: !214, line: 11, baseType: !7, size: 32, elements: !215)
!214 = !DIFile(filename: "./include/linux/irqreturn.h", directory: "/home/lizy2001/genbc/linux")
!215 = !{!216, !217, !218}
!216 = !DIEnumerator(name: "IRQ_NONE", value: 0, isUnsigned: true)
!217 = !DIEnumerator(name: "IRQ_HANDLED", value: 1, isUnsigned: true)
!218 = !DIEnumerator(name: "IRQ_WAKE_THREAD", value: 2, isUnsigned: true)
!219 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !30, line: 308, baseType: !7, size: 32, elements: !220)
!220 = !{!221, !222, !223, !224, !225, !226, !227, !228, !229, !230, !231, !232, !233, !234}
!221 = !DIEnumerator(name: "WQ_UNBOUND", value: 2, isUnsigned: true)
!222 = !DIEnumerator(name: "WQ_FREEZABLE", value: 4, isUnsigned: true)
!223 = !DIEnumerator(name: "WQ_MEM_RECLAIM", value: 8, isUnsigned: true)
!224 = !DIEnumerator(name: "WQ_HIGHPRI", value: 16, isUnsigned: true)
!225 = !DIEnumerator(name: "WQ_CPU_INTENSIVE", value: 32, isUnsigned: true)
!226 = !DIEnumerator(name: "WQ_SYSFS", value: 64, isUnsigned: true)
!227 = !DIEnumerator(name: "WQ_POWER_EFFICIENT", value: 128, isUnsigned: true)
!228 = !DIEnumerator(name: "__WQ_DRAINING", value: 65536, isUnsigned: true)
!229 = !DIEnumerator(name: "__WQ_ORDERED", value: 131072, isUnsigned: true)
!230 = !DIEnumerator(name: "__WQ_LEGACY", value: 262144, isUnsigned: true)
!231 = !DIEnumerator(name: "__WQ_ORDERED_EXPLICIT", value: 524288, isUnsigned: true)
!232 = !DIEnumerator(name: "WQ_MAX_ACTIVE", value: 512, isUnsigned: true)
!233 = !DIEnumerator(name: "WQ_MAX_UNBOUND_PER_CPU", value: 4, isUnsigned: true)
!234 = !DIEnumerator(name: "WQ_DFL_ACTIVE", value: 256, isUnsigned: true)
!235 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "acpi_bus_device_type", file: !236, line: 89, baseType: !7, size: 32, elements: !237)
!236 = !DIFile(filename: "./include/acpi/acpi_bus.h", directory: "/home/lizy2001/genbc/linux")
!237 = !{!238, !239, !240, !241, !242, !243, !244, !245}
!238 = !DIEnumerator(name: "ACPI_BUS_TYPE_DEVICE", value: 0, isUnsigned: true)
!239 = !DIEnumerator(name: "ACPI_BUS_TYPE_POWER", value: 1, isUnsigned: true)
!240 = !DIEnumerator(name: "ACPI_BUS_TYPE_PROCESSOR", value: 2, isUnsigned: true)
!241 = !DIEnumerator(name: "ACPI_BUS_TYPE_THERMAL", value: 3, isUnsigned: true)
!242 = !DIEnumerator(name: "ACPI_BUS_TYPE_POWER_BUTTON", value: 4, isUnsigned: true)
!243 = !DIEnumerator(name: "ACPI_BUS_TYPE_SLEEP_BUTTON", value: 5, isUnsigned: true)
!244 = !DIEnumerator(name: "ACPI_BUS_TYPE_ECDT_EC", value: 6, isUnsigned: true)
!245 = !DIEnumerator(name: "ACPI_BUS_DEVICE_TYPE_COUNT", value: 7, isUnsigned: true)
!246 = !{!247, !248, !250, !281, !283, !284, !251, !261, !287, !288, !289, !290, !292, !294, !31, !295, !297, !304, !330, !415, !421, !422, !390, !266, !423}
!247 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 64)
!248 = !DIDerivedType(tag: DW_TAG_typedef, name: "gfp_t", file: !249, line: 148, baseType: !7)
!249 = !DIFile(filename: "./include/linux/types.h", directory: "/home/lizy2001/genbc/linux")
!250 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !251, size: 64)
!251 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !252, size: 64)
!252 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "acpi_table_header", file: !253, line: 68, size: 288, elements: !254)
!253 = !DIFile(filename: "./include/acpi/actbl.h", directory: "/home/lizy2001/genbc/linux")
!254 = !{!255, !260, !265, !269, !270, !274, !278, !279, !280}
!255 = !DIDerivedType(tag: DW_TAG_member, name: "signature", scope: !252, file: !253, line: 69, baseType: !256, size: 32)
!256 = !DICompositeType(tag: DW_TAG_array_type, baseType: !257, size: 32, elements: !258)
!257 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_signed_char)
!258 = !{!259}
!259 = !DISubrange(count: 4)
!260 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !252, file: !253, line: 70, baseType: !261, size: 32, offset: 32)
!261 = !DIDerivedType(tag: DW_TAG_typedef, name: "u32", file: !262, line: 21, baseType: !263)
!262 = !DIFile(filename: "./include/asm-generic/int-ll64.h", directory: "/home/lizy2001/genbc/linux")
!263 = !DIDerivedType(tag: DW_TAG_typedef, name: "__u32", file: !264, line: 27, baseType: !7)
!264 = !DIFile(filename: "./include/uapi/asm-generic/int-ll64.h", directory: "/home/lizy2001/genbc/linux")
!265 = !DIDerivedType(tag: DW_TAG_member, name: "revision", scope: !252, file: !253, line: 71, baseType: !266, size: 8, offset: 64)
!266 = !DIDerivedType(tag: DW_TAG_typedef, name: "u8", file: !262, line: 17, baseType: !267)
!267 = !DIDerivedType(tag: DW_TAG_typedef, name: "__u8", file: !264, line: 21, baseType: !268)
!268 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!269 = !DIDerivedType(tag: DW_TAG_member, name: "checksum", scope: !252, file: !253, line: 72, baseType: !266, size: 8, offset: 72)
!270 = !DIDerivedType(tag: DW_TAG_member, name: "oem_id", scope: !252, file: !253, line: 73, baseType: !271, size: 48, offset: 80)
!271 = !DICompositeType(tag: DW_TAG_array_type, baseType: !257, size: 48, elements: !272)
!272 = !{!273}
!273 = !DISubrange(count: 6)
!274 = !DIDerivedType(tag: DW_TAG_member, name: "oem_table_id", scope: !252, file: !253, line: 74, baseType: !275, size: 64, offset: 128)
!275 = !DICompositeType(tag: DW_TAG_array_type, baseType: !257, size: 64, elements: !276)
!276 = !{!277}
!277 = !DISubrange(count: 8)
!278 = !DIDerivedType(tag: DW_TAG_member, name: "oem_revision", scope: !252, file: !253, line: 75, baseType: !261, size: 32, offset: 192)
!279 = !DIDerivedType(tag: DW_TAG_member, name: "asl_compiler_id", scope: !252, file: !253, line: 76, baseType: !256, size: 32, offset: 224)
!280 = !DIDerivedType(tag: DW_TAG_member, name: "asl_compiler_revision", scope: !252, file: !253, line: 77, baseType: !261, size: 32, offset: 256)
!281 = !DIDerivedType(tag: DW_TAG_typedef, name: "acpi_handle", file: !282, line: 424, baseType: !247)
!282 = !DIFile(filename: "./include/acpi/actypes.h", directory: "/home/lizy2001/genbc/linux")
!283 = !DIDerivedType(tag: DW_TAG_typedef, name: "acpi_size", file: !282, line: 127, baseType: !284)
!284 = !DIDerivedType(tag: DW_TAG_typedef, name: "u64", file: !262, line: 23, baseType: !285)
!285 = !DIDerivedType(tag: DW_TAG_typedef, name: "__u64", file: !264, line: 31, baseType: !286)
!286 = !DIBasicType(name: "long long unsigned int", size: 64, encoding: DW_ATE_unsigned)
!287 = !DIBasicType(name: "long unsigned int", size: 64, encoding: DW_ATE_unsigned)
!288 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !287, size: 64)
!289 = !DIDerivedType(tag: DW_TAG_typedef, name: "acpi_event_status", file: !282, line: 738, baseType: !261)
!290 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !291, size: 64)
!291 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !257)
!292 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !293, size: 64)
!293 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !31)
!294 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!295 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !296, size: 64)
!296 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !294)
!297 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !298, size: 64)
!298 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !299)
!299 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !300, size: 64)
!300 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "list_head", file: !249, line: 178, size: 128, elements: !301)
!301 = !{!302, !303}
!302 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !300, file: !249, line: 179, baseType: !299, size: 64)
!303 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !300, file: !249, line: 179, baseType: !299, size: 64, offset: 64)
!304 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !305, size: 64)
!305 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "acpi_ec_query_handler", file: !3, line: 144, size: 384, elements: !306)
!306 = !{!307, !308, !314, !315, !316, !317}
!307 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !305, file: !3, line: 145, baseType: !300, size: 128)
!308 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !305, file: !3, line: 146, baseType: !309, size: 64, offset: 128)
!309 = !DIDerivedType(tag: DW_TAG_typedef, name: "acpi_ec_query_func", file: !310, line: 191, baseType: !311)
!310 = !DIFile(filename: "drivers/acpi/internal.h", directory: "/home/lizy2001/genbc/linux")
!311 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !312, size: 64)
!312 = !DISubroutineType(types: !313)
!313 = !{!294, !247}
!314 = !DIDerivedType(tag: DW_TAG_member, name: "handle", scope: !305, file: !3, line: 147, baseType: !281, size: 64, offset: 192)
!315 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !305, file: !3, line: 148, baseType: !247, size: 64, offset: 256)
!316 = !DIDerivedType(tag: DW_TAG_member, name: "query_bit", scope: !305, file: !3, line: 149, baseType: !266, size: 8, offset: 320)
!317 = !DIDerivedType(tag: DW_TAG_member, name: "kref", scope: !305, file: !3, line: 150, baseType: !318, size: 32, offset: 352)
!318 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kref", file: !319, line: 19, size: 32, elements: !320)
!319 = !DIFile(filename: "./include/linux/kref.h", directory: "/home/lizy2001/genbc/linux")
!320 = !{!321}
!321 = !DIDerivedType(tag: DW_TAG_member, name: "refcount", scope: !318, file: !319, line: 20, baseType: !322, size: 32)
!322 = !DIDerivedType(tag: DW_TAG_typedef, name: "refcount_t", file: !70, line: 113, baseType: !323)
!323 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "refcount_struct", file: !70, line: 111, size: 32, elements: !324)
!324 = !{!325}
!325 = !DIDerivedType(tag: DW_TAG_member, name: "refs", scope: !323, file: !70, line: 112, baseType: !326, size: 32)
!326 = !DIDerivedType(tag: DW_TAG_typedef, name: "atomic_t", file: !249, line: 168, baseType: !327)
!327 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !249, line: 166, size: 32, elements: !328)
!328 = !{!329}
!329 = !DIDerivedType(tag: DW_TAG_member, name: "counter", scope: !327, file: !249, line: 167, baseType: !294, size: 32)
!330 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !331, size: 64)
!331 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "acpi_ec", file: !310, line: 166, size: 1408, elements: !332)
!332 = !{!333, !334, !335, !336, !337, !338, !341, !342, !343, !374, !381, !382, !399, !400, !411, !412, !413, !414}
!333 = !DIDerivedType(tag: DW_TAG_member, name: "handle", scope: !331, file: !310, line: 167, baseType: !281, size: 64)
!334 = !DIDerivedType(tag: DW_TAG_member, name: "gpe", scope: !331, file: !310, line: 168, baseType: !294, size: 32, offset: 64)
!335 = !DIDerivedType(tag: DW_TAG_member, name: "irq", scope: !331, file: !310, line: 169, baseType: !294, size: 32, offset: 96)
!336 = !DIDerivedType(tag: DW_TAG_member, name: "command_addr", scope: !331, file: !310, line: 170, baseType: !287, size: 64, offset: 128)
!337 = !DIDerivedType(tag: DW_TAG_member, name: "data_addr", scope: !331, file: !310, line: 171, baseType: !287, size: 64, offset: 192)
!338 = !DIDerivedType(tag: DW_TAG_member, name: "global_lock", scope: !331, file: !310, line: 172, baseType: !339, size: 8, offset: 256)
!339 = !DIDerivedType(tag: DW_TAG_typedef, name: "bool", file: !249, line: 30, baseType: !340)
!340 = !DIBasicType(name: "_Bool", size: 8, encoding: DW_ATE_boolean)
!341 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !331, file: !310, line: 173, baseType: !287, size: 64, offset: 320)
!342 = !DIDerivedType(tag: DW_TAG_member, name: "reference_count", scope: !331, file: !310, line: 174, baseType: !287, size: 64, offset: 384)
!343 = !DIDerivedType(tag: DW_TAG_member, name: "mutex", scope: !331, file: !310, line: 175, baseType: !344, size: 192, offset: 448)
!344 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mutex", file: !345, line: 53, size: 192, elements: !346)
!345 = !DIFile(filename: "./include/linux/mutex.h", directory: "/home/lizy2001/genbc/linux")
!346 = !{!347, !357, !373}
!347 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !344, file: !345, line: 54, baseType: !348, size: 64)
!348 = !DIDerivedType(tag: DW_TAG_typedef, name: "atomic_long_t", file: !349, line: 13, baseType: !350)
!349 = !DIFile(filename: "./include/asm-generic/atomic-long.h", directory: "/home/lizy2001/genbc/linux")
!350 = !DIDerivedType(tag: DW_TAG_typedef, name: "atomic64_t", file: !249, line: 175, baseType: !351)
!351 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !249, line: 173, size: 64, elements: !352)
!352 = !{!353}
!353 = !DIDerivedType(tag: DW_TAG_member, name: "counter", scope: !351, file: !249, line: 174, baseType: !354, size: 64)
!354 = !DIDerivedType(tag: DW_TAG_typedef, name: "s64", file: !262, line: 22, baseType: !355)
!355 = !DIDerivedType(tag: DW_TAG_typedef, name: "__s64", file: !264, line: 30, baseType: !356)
!356 = !DIBasicType(name: "long long int", size: 64, encoding: DW_ATE_signed)
!357 = !DIDerivedType(tag: DW_TAG_member, name: "wait_lock", scope: !344, file: !345, line: 55, baseType: !358, offset: 64)
!358 = !DIDerivedType(tag: DW_TAG_typedef, name: "spinlock_t", file: !359, line: 83, baseType: !360)
!359 = !DIFile(filename: "./include/linux/spinlock_types.h", directory: "/home/lizy2001/genbc/linux")
!360 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "spinlock", file: !359, line: 71, elements: !361)
!361 = !{!362}
!362 = !DIDerivedType(tag: DW_TAG_member, scope: !360, file: !359, line: 72, baseType: !363)
!363 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !360, file: !359, line: 72, elements: !364)
!364 = !{!365}
!365 = !DIDerivedType(tag: DW_TAG_member, name: "rlock", scope: !363, file: !359, line: 73, baseType: !366)
!366 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "raw_spinlock", file: !359, line: 20, elements: !367)
!367 = !{!368}
!368 = !DIDerivedType(tag: DW_TAG_member, name: "raw_lock", scope: !366, file: !359, line: 21, baseType: !369)
!369 = !DIDerivedType(tag: DW_TAG_typedef, name: "arch_spinlock_t", file: !370, line: 25, baseType: !371)
!370 = !DIFile(filename: "./include/linux/spinlock_types_up.h", directory: "/home/lizy2001/genbc/linux")
!371 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !370, line: 25, elements: !372)
!372 = !{}
!373 = !DIDerivedType(tag: DW_TAG_member, name: "wait_list", scope: !344, file: !345, line: 59, baseType: !300, size: 128, offset: 64)
!374 = !DIDerivedType(tag: DW_TAG_member, name: "wait", scope: !331, file: !310, line: 176, baseType: !375, size: 128, offset: 640)
!375 = !DIDerivedType(tag: DW_TAG_typedef, name: "wait_queue_head_t", file: !376, line: 40, baseType: !377)
!376 = !DIFile(filename: "./include/linux/wait.h", directory: "/home/lizy2001/genbc/linux")
!377 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wait_queue_head", file: !376, line: 36, size: 128, elements: !378)
!378 = !{!379, !380}
!379 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !377, file: !376, line: 37, baseType: !358)
!380 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !377, file: !376, line: 38, baseType: !300, size: 128)
!381 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !331, file: !310, line: 177, baseType: !300, size: 128, offset: 768)
!382 = !DIDerivedType(tag: DW_TAG_member, name: "curr", scope: !331, file: !310, line: 178, baseType: !383, size: 64, offset: 896)
!383 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !384, size: 64)
!384 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "transaction", file: !3, line: 153, size: 192, elements: !385)
!385 = !{!386, !389, !391, !393, !394, !395, !396, !397, !398}
!386 = !DIDerivedType(tag: DW_TAG_member, name: "wdata", scope: !384, file: !3, line: 154, baseType: !387, size: 64)
!387 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !388, size: 64)
!388 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !266)
!389 = !DIDerivedType(tag: DW_TAG_member, name: "rdata", scope: !384, file: !3, line: 155, baseType: !390, size: 64, offset: 64)
!390 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !266, size: 64)
!391 = !DIDerivedType(tag: DW_TAG_member, name: "irq_count", scope: !384, file: !3, line: 156, baseType: !392, size: 16, offset: 128)
!392 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!393 = !DIDerivedType(tag: DW_TAG_member, name: "command", scope: !384, file: !3, line: 157, baseType: !266, size: 8, offset: 144)
!394 = !DIDerivedType(tag: DW_TAG_member, name: "wi", scope: !384, file: !3, line: 158, baseType: !266, size: 8, offset: 152)
!395 = !DIDerivedType(tag: DW_TAG_member, name: "ri", scope: !384, file: !3, line: 159, baseType: !266, size: 8, offset: 160)
!396 = !DIDerivedType(tag: DW_TAG_member, name: "wlen", scope: !384, file: !3, line: 160, baseType: !266, size: 8, offset: 168)
!397 = !DIDerivedType(tag: DW_TAG_member, name: "rlen", scope: !384, file: !3, line: 161, baseType: !266, size: 8, offset: 176)
!398 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !384, file: !3, line: 162, baseType: !266, size: 8, offset: 184)
!399 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !331, file: !310, line: 179, baseType: !358, offset: 960)
!400 = !DIDerivedType(tag: DW_TAG_member, name: "work", scope: !331, file: !310, line: 180, baseType: !401, size: 256, offset: 960)
!401 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "work_struct", file: !30, line: 102, size: 256, elements: !402)
!402 = !{!403, !404, !405}
!403 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !401, file: !30, line: 103, baseType: !348, size: 64)
!404 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !401, file: !30, line: 104, baseType: !300, size: 128, offset: 64)
!405 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !401, file: !30, line: 105, baseType: !406, size: 64, offset: 192)
!406 = !DIDerivedType(tag: DW_TAG_typedef, name: "work_func_t", file: !30, line: 21, baseType: !407)
!407 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !408, size: 64)
!408 = !DISubroutineType(types: !409)
!409 = !{null, !410}
!410 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !401, size: 64)
!411 = !DIDerivedType(tag: DW_TAG_member, name: "timestamp", scope: !331, file: !310, line: 181, baseType: !287, size: 64, offset: 1216)
!412 = !DIDerivedType(tag: DW_TAG_member, name: "nr_pending_queries", scope: !331, file: !310, line: 182, baseType: !287, size: 64, offset: 1280)
!413 = !DIDerivedType(tag: DW_TAG_member, name: "busy_polling", scope: !331, file: !310, line: 183, baseType: !339, size: 8, offset: 1344)
!414 = !DIDerivedType(tag: DW_TAG_member, name: "polling_guard", scope: !331, file: !310, line: 184, baseType: !7, size: 32, offset: 1376)
!415 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !416, size: 64)
!416 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "acpi_ec_query", file: !3, line: 165, size: 512, elements: !417)
!417 = !{!418, !419, !420}
!418 = !DIDerivedType(tag: DW_TAG_member, name: "transaction", scope: !416, file: !3, line: 166, baseType: !384, size: 192)
!419 = !DIDerivedType(tag: DW_TAG_member, name: "work", scope: !416, file: !3, line: 167, baseType: !401, size: 256, offset: 192)
!420 = !DIDerivedType(tag: DW_TAG_member, name: "handler", scope: !416, file: !3, line: 168, baseType: !304, size: 64, offset: 448)
!421 = !DIDerivedType(tag: DW_TAG_typedef, name: "acpi_status", file: !282, line: 421, baseType: !261)
!422 = !DIDerivedType(tag: DW_TAG_typedef, name: "acpi_adr_space_type", file: !282, line: 805, baseType: !266)
!423 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !424, size: 64)
!424 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "acpi_device", file: !236, line: 351, size: 10880, elements: !425)
!425 = !{!426, !427, !428, !5106, !5107, !5108, !5109, !5110, !5111, !5120, !5137, !5210, !5237, !5261, !5282, !5289, !5298, !5330, !5344, !5366, !5370, !5371, !5372, !5373, !5374, !5375, !5376}
!426 = !DIDerivedType(tag: DW_TAG_member, name: "device_type", scope: !424, file: !236, line: 352, baseType: !294, size: 32)
!427 = !DIDerivedType(tag: DW_TAG_member, name: "handle", scope: !424, file: !236, line: 353, baseType: !281, size: 64, offset: 64)
!428 = !DIDerivedType(tag: DW_TAG_member, name: "fwnode", scope: !424, file: !236, line: 354, baseType: !429, size: 192, offset: 128)
!429 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fwnode_handle", file: !430, line: 17, size: 192, elements: !431)
!430 = !DIFile(filename: "./include/linux/fwnode.h", directory: "/home/lizy2001/genbc/linux")
!431 = !{!432, !434, !5105}
!432 = !DIDerivedType(tag: DW_TAG_member, name: "secondary", scope: !429, file: !430, line: 18, baseType: !433, size: 64)
!433 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !429, size: 64)
!434 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !429, file: !430, line: 19, baseType: !435, size: 64, offset: 64)
!435 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !436, size: 64)
!436 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !437)
!437 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fwnode_operations", file: !430, line: 110, size: 1152, elements: !438)
!438 = !{!439, !443, !447, !453, !5047, !5051, !5055, !5060, !5064, !5065, !5069, !5073, !5077, !5088, !5089, !5090, !5091, !5101}
!439 = !DIDerivedType(tag: DW_TAG_member, name: "get", scope: !437, file: !430, line: 111, baseType: !440, size: 64)
!440 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !441, size: 64)
!441 = !DISubroutineType(types: !442)
!442 = !{!433, !433}
!443 = !DIDerivedType(tag: DW_TAG_member, name: "put", scope: !437, file: !430, line: 112, baseType: !444, size: 64, offset: 64)
!444 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !445, size: 64)
!445 = !DISubroutineType(types: !446)
!446 = !{null, !433}
!447 = !DIDerivedType(tag: DW_TAG_member, name: "device_is_available", scope: !437, file: !430, line: 113, baseType: !448, size: 64, offset: 128)
!448 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !449, size: 64)
!449 = !DISubroutineType(types: !450)
!450 = !{!339, !451}
!451 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !452, size: 64)
!452 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !429)
!453 = !DIDerivedType(tag: DW_TAG_member, name: "device_get_match_data", scope: !437, file: !430, line: 114, baseType: !454, size: 64, offset: 192)
!454 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !455, size: 64)
!455 = !DISubroutineType(types: !456)
!456 = !{!457, !451, !459}
!457 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !458, size: 64)
!458 = !DIDerivedType(tag: DW_TAG_const_type, baseType: null)
!459 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !460, size: 64)
!460 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !461)
!461 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !186, line: 461, size: 5568, elements: !462)
!462 = !{!463, !4603, !4604, !4607, !4608, !4658, !4749, !4750, !4751, !4752, !4753, !4762, !4856, !4869, !4974, !4975, !4979, !4981, !4982, !4983, !4987, !4993, !4994, !4997, !4998, !4999, !5000, !5001, !5002, !5003, !5035, !5036, !5037, !5040, !5043, !5044, !5045, !5046}
!463 = !DIDerivedType(tag: DW_TAG_member, name: "kobj", scope: !461, file: !186, line: 462, baseType: !464, size: 512)
!464 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kobject", file: !465, line: 64, size: 512, elements: !466)
!465 = !DIFile(filename: "./include/linux/kobject.h", directory: "/home/lizy2001/genbc/linux")
!466 = !{!467, !470, !471, !473, !518, !4470, !4597, !4598, !4599, !4600, !4601, !4602}
!467 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !464, file: !465, line: 65, baseType: !468, size: 64)
!468 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !469, size: 64)
!469 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !257)
!470 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !464, file: !465, line: 66, baseType: !300, size: 128, offset: 64)
!471 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !464, file: !465, line: 67, baseType: !472, size: 64, offset: 192)
!472 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !464, size: 64)
!473 = !DIDerivedType(tag: DW_TAG_member, name: "kset", scope: !464, file: !465, line: 68, baseType: !474, size: 64, offset: 256)
!474 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !475, size: 64)
!475 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kset", file: !465, line: 192, size: 704, elements: !476)
!476 = !{!477, !478, !479, !480}
!477 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !475, file: !465, line: 193, baseType: !300, size: 128)
!478 = !DIDerivedType(tag: DW_TAG_member, name: "list_lock", scope: !475, file: !465, line: 194, baseType: !358, offset: 128)
!479 = !DIDerivedType(tag: DW_TAG_member, name: "kobj", scope: !475, file: !465, line: 195, baseType: !464, size: 512, offset: 128)
!480 = !DIDerivedType(tag: DW_TAG_member, name: "uevent_ops", scope: !475, file: !465, line: 196, baseType: !481, size: 64, offset: 640)
!481 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !482, size: 64)
!482 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !483)
!483 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kset_uevent_ops", file: !465, line: 156, size: 192, elements: !484)
!484 = !{!485, !490, !495}
!485 = !DIDerivedType(tag: DW_TAG_member, name: "filter", scope: !483, file: !465, line: 157, baseType: !486, size: 64)
!486 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !487)
!487 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !488, size: 64)
!488 = !DISubroutineType(types: !489)
!489 = !{!294, !474, !472}
!490 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !483, file: !465, line: 158, baseType: !491, size: 64, offset: 64)
!491 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !492)
!492 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !493, size: 64)
!493 = !DISubroutineType(types: !494)
!494 = !{!468, !474, !472}
!495 = !DIDerivedType(tag: DW_TAG_member, name: "uevent", scope: !483, file: !465, line: 159, baseType: !496, size: 64, offset: 128)
!496 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !497)
!497 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !498, size: 64)
!498 = !DISubroutineType(types: !499)
!499 = !{!294, !474, !472, !500}
!500 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !501, size: 64)
!501 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kobj_uevent_env", file: !465, line: 148, size: 20736, elements: !502)
!502 = !{!503, !508, !512, !513, !517}
!503 = !DIDerivedType(tag: DW_TAG_member, name: "argv", scope: !501, file: !465, line: 149, baseType: !504, size: 192)
!504 = !DICompositeType(tag: DW_TAG_array_type, baseType: !505, size: 192, elements: !506)
!505 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !257, size: 64)
!506 = !{!507}
!507 = !DISubrange(count: 3)
!508 = !DIDerivedType(tag: DW_TAG_member, name: "envp", scope: !501, file: !465, line: 150, baseType: !509, size: 4096, offset: 192)
!509 = !DICompositeType(tag: DW_TAG_array_type, baseType: !505, size: 4096, elements: !510)
!510 = !{!511}
!511 = !DISubrange(count: 64)
!512 = !DIDerivedType(tag: DW_TAG_member, name: "envp_idx", scope: !501, file: !465, line: 151, baseType: !294, size: 32, offset: 4288)
!513 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !501, file: !465, line: 152, baseType: !514, size: 16384, offset: 4320)
!514 = !DICompositeType(tag: DW_TAG_array_type, baseType: !257, size: 16384, elements: !515)
!515 = !{!516}
!516 = !DISubrange(count: 2048)
!517 = !DIDerivedType(tag: DW_TAG_member, name: "buflen", scope: !501, file: !465, line: 153, baseType: !294, size: 32, offset: 20704)
!518 = !DIDerivedType(tag: DW_TAG_member, name: "ktype", scope: !464, file: !465, line: 69, baseType: !519, size: 64, offset: 320)
!519 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !520, size: 64)
!520 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kobj_type", file: !465, line: 138, size: 448, elements: !521)
!521 = !{!522, !526, !553, !555, !4434, !4462, !4466}
!522 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !520, file: !465, line: 139, baseType: !523, size: 64)
!523 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !524, size: 64)
!524 = !DISubroutineType(types: !525)
!525 = !{null, !472}
!526 = !DIDerivedType(tag: DW_TAG_member, name: "sysfs_ops", scope: !520, file: !465, line: 140, baseType: !527, size: 64, offset: 64)
!527 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !528, size: 64)
!528 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !529)
!529 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sysfs_ops", file: !530, line: 230, size: 128, elements: !531)
!530 = !DIFile(filename: "./include/linux/sysfs.h", directory: "/home/lizy2001/genbc/linux")
!531 = !{!532, !546}
!532 = !DIDerivedType(tag: DW_TAG_member, name: "show", scope: !529, file: !530, line: 231, baseType: !533, size: 64)
!533 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !534, size: 64)
!534 = !DISubroutineType(types: !535)
!535 = !{!536, !472, !540, !505}
!536 = !DIDerivedType(tag: DW_TAG_typedef, name: "ssize_t", file: !249, line: 60, baseType: !537)
!537 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_ssize_t", file: !538, line: 73, baseType: !539)
!538 = !DIFile(filename: "./include/uapi/asm-generic/posix_types.h", directory: "/home/lizy2001/genbc/linux")
!539 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_long_t", file: !538, line: 15, baseType: !31)
!540 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !541, size: 64)
!541 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "attribute", file: !530, line: 30, size: 128, elements: !542)
!542 = !{!543, !544}
!543 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !541, file: !530, line: 31, baseType: !468, size: 64)
!544 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !541, file: !530, line: 32, baseType: !545, size: 16, offset: 64)
!545 = !DIDerivedType(tag: DW_TAG_typedef, name: "umode_t", file: !249, line: 19, baseType: !392)
!546 = !DIDerivedType(tag: DW_TAG_member, name: "store", scope: !529, file: !530, line: 232, baseType: !547, size: 64, offset: 64)
!547 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !548, size: 64)
!548 = !DISubroutineType(types: !549)
!549 = !{!536, !472, !540, !468, !550}
!550 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !249, line: 55, baseType: !551)
!551 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_size_t", file: !538, line: 72, baseType: !552)
!552 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_ulong_t", file: !538, line: 16, baseType: !287)
!553 = !DIDerivedType(tag: DW_TAG_member, name: "default_attrs", scope: !520, file: !465, line: 141, baseType: !554, size: 64, offset: 128)
!554 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !540, size: 64)
!555 = !DIDerivedType(tag: DW_TAG_member, name: "default_groups", scope: !520, file: !465, line: 142, baseType: !556, size: 64, offset: 192)
!556 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !557, size: 64)
!557 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !558, size: 64)
!558 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !559)
!559 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "attribute_group", file: !530, line: 84, size: 320, elements: !560)
!560 = !{!561, !562, !566, !4431, !4432}
!561 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !559, file: !530, line: 85, baseType: !468, size: 64)
!562 = !DIDerivedType(tag: DW_TAG_member, name: "is_visible", scope: !559, file: !530, line: 86, baseType: !563, size: 64, offset: 64)
!563 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !564, size: 64)
!564 = !DISubroutineType(types: !565)
!565 = !{!545, !472, !540, !294}
!566 = !DIDerivedType(tag: DW_TAG_member, name: "is_bin_visible", scope: !559, file: !530, line: 88, baseType: !567, size: 64, offset: 128)
!567 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !568, size: 64)
!568 = !DISubroutineType(types: !569)
!569 = !{!545, !472, !570, !294}
!570 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !571, size: 64)
!571 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bin_attribute", file: !530, line: 168, size: 448, elements: !572)
!572 = !{!573, !574, !575, !576, !4426, !4427}
!573 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !571, file: !530, line: 169, baseType: !541, size: 128)
!574 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !571, file: !530, line: 170, baseType: !550, size: 64, offset: 128)
!575 = !DIDerivedType(tag: DW_TAG_member, name: "private", scope: !571, file: !530, line: 171, baseType: !247, size: 64, offset: 192)
!576 = !DIDerivedType(tag: DW_TAG_member, name: "read", scope: !571, file: !530, line: 172, baseType: !577, size: 64, offset: 256)
!577 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !578, size: 64)
!578 = !DISubroutineType(types: !579)
!579 = !{!536, !580, !472, !570, !505, !749, !550}
!580 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !581, size: 64)
!581 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file", file: !157, line: 916, size: 1856, align: 32, elements: !582)
!582 = !{!583, !601, !4391, !4392, !4393, !4394, !4395, !4396, !4397, !4398, !4399, !4400, !4409, !4410, !4419, !4420, !4421, !4422, !4423, !4424, !4425}
!583 = !DIDerivedType(tag: DW_TAG_member, name: "f_u", scope: !581, file: !157, line: 920, baseType: !584, size: 128)
!584 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !581, file: !157, line: 917, size: 128, elements: !585)
!585 = !{!586, !592}
!586 = !DIDerivedType(tag: DW_TAG_member, name: "fu_llist", scope: !584, file: !157, line: 918, baseType: !587, size: 64)
!587 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "llist_node", file: !588, line: 58, size: 64, elements: !589)
!588 = !DIFile(filename: "./include/linux/llist.h", directory: "/home/lizy2001/genbc/linux")
!589 = !{!590}
!590 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !587, file: !588, line: 59, baseType: !591, size: 64)
!591 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !587, size: 64)
!592 = !DIDerivedType(tag: DW_TAG_member, name: "fu_rcuhead", scope: !584, file: !157, line: 919, baseType: !593, size: 128, align: 64)
!593 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "callback_head", file: !249, line: 216, size: 128, align: 64, elements: !594)
!594 = !{!595, !597}
!595 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !593, file: !249, line: 217, baseType: !596, size: 64)
!596 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !593, size: 64)
!597 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !593, file: !249, line: 218, baseType: !598, size: 64, offset: 64)
!598 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !599, size: 64)
!599 = !DISubroutineType(types: !600)
!600 = !{null, !596}
!601 = !DIDerivedType(tag: DW_TAG_member, name: "f_path", scope: !581, file: !157, line: 921, baseType: !602, size: 128, offset: 128)
!602 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "path", file: !603, line: 8, size: 128, elements: !604)
!603 = !DIFile(filename: "./include/linux/path.h", directory: "/home/lizy2001/genbc/linux")
!604 = !{!605, !609}
!605 = !DIDerivedType(tag: DW_TAG_member, name: "mnt", scope: !602, file: !603, line: 9, baseType: !606, size: 64)
!606 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !607, size: 64)
!607 = !DICompositeType(tag: DW_TAG_structure_type, name: "vfsmount", file: !608, line: 18, flags: DIFlagFwdDecl)
!608 = !DIFile(filename: "./include/linux/dcache.h", directory: "/home/lizy2001/genbc/linux")
!609 = !DIDerivedType(tag: DW_TAG_member, name: "dentry", scope: !602, file: !603, line: 10, baseType: !610, size: 64, offset: 64)
!610 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !611, size: 64)
!611 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dentry", file: !608, line: 89, size: 1536, elements: !612)
!612 = !{!613, !614, !624, !632, !633, !648, !4359, !4361, !4373, !4374, !4375, !4376, !4377, !4383, !4384, !4385}
!613 = !DIDerivedType(tag: DW_TAG_member, name: "d_flags", scope: !611, file: !608, line: 91, baseType: !7, size: 32)
!614 = !DIDerivedType(tag: DW_TAG_member, name: "d_seq", scope: !611, file: !608, line: 92, baseType: !615, size: 32, offset: 32)
!615 = !DIDerivedType(tag: DW_TAG_typedef, name: "seqcount_spinlock_t", file: !616, line: 277, baseType: !617)
!616 = !DIFile(filename: "./include/linux/seqlock.h", directory: "/home/lizy2001/genbc/linux")
!617 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seqcount_spinlock", file: !616, line: 277, size: 32, elements: !618)
!618 = !{!619}
!619 = !DIDerivedType(tag: DW_TAG_member, name: "seqcount", scope: !617, file: !616, line: 277, baseType: !620, size: 32)
!620 = !DIDerivedType(tag: DW_TAG_typedef, name: "seqcount_t", file: !616, line: 70, baseType: !621)
!621 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seqcount", file: !616, line: 65, size: 32, elements: !622)
!622 = !{!623}
!623 = !DIDerivedType(tag: DW_TAG_member, name: "sequence", scope: !621, file: !616, line: 66, baseType: !7, size: 32)
!624 = !DIDerivedType(tag: DW_TAG_member, name: "d_hash", scope: !611, file: !608, line: 93, baseType: !625, size: 128, offset: 64)
!625 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hlist_bl_node", file: !626, line: 38, size: 128, elements: !627)
!626 = !DIFile(filename: "./include/linux/list_bl.h", directory: "/home/lizy2001/genbc/linux")
!627 = !{!628, !630}
!628 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !625, file: !626, line: 39, baseType: !629, size: 64)
!629 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !625, size: 64)
!630 = !DIDerivedType(tag: DW_TAG_member, name: "pprev", scope: !625, file: !626, line: 39, baseType: !631, size: 64, offset: 64)
!631 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !629, size: 64)
!632 = !DIDerivedType(tag: DW_TAG_member, name: "d_parent", scope: !611, file: !608, line: 94, baseType: !610, size: 64, offset: 192)
!633 = !DIDerivedType(tag: DW_TAG_member, name: "d_name", scope: !611, file: !608, line: 95, baseType: !634, size: 128, offset: 256)
!634 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "qstr", file: !608, line: 47, size: 128, elements: !635)
!635 = !{!636, !645}
!636 = !DIDerivedType(tag: DW_TAG_member, scope: !634, file: !608, line: 48, baseType: !637, size: 64)
!637 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !634, file: !608, line: 48, size: 64, elements: !638)
!638 = !{!639, !644}
!639 = !DIDerivedType(tag: DW_TAG_member, scope: !637, file: !608, line: 49, baseType: !640, size: 64)
!640 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !637, file: !608, line: 49, size: 64, elements: !641)
!641 = !{!642, !643}
!642 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !640, file: !608, line: 50, baseType: !261, size: 32)
!643 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !640, file: !608, line: 50, baseType: !261, size: 32, offset: 32)
!644 = !DIDerivedType(tag: DW_TAG_member, name: "hash_len", scope: !637, file: !608, line: 52, baseType: !284, size: 64)
!645 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !634, file: !608, line: 54, baseType: !646, size: 64, offset: 64)
!646 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !647, size: 64)
!647 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !268)
!648 = !DIDerivedType(tag: DW_TAG_member, name: "d_inode", scope: !611, file: !608, line: 96, baseType: !649, size: 64, offset: 384)
!649 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !650, size: 64)
!650 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "inode", file: !157, line: 610, size: 4224, elements: !651)
!651 = !{!652, !653, !654, !662, !669, !670, !814, !4072, !4073, !4074, !4079, !4080, !4081, !4082, !4083, !4084, !4085, !4086, !4087, !4088, !4089, !4090, !4091, !4092, !4093, !4094, !4095, !4096, !4097, !4098, !4103, !4104, !4105, !4106, !4107, !4108, !4109, !4335, !4343, !4344, !4345, !4355, !4356, !4357, !4358}
!652 = !DIDerivedType(tag: DW_TAG_member, name: "i_mode", scope: !650, file: !157, line: 611, baseType: !545, size: 16)
!653 = !DIDerivedType(tag: DW_TAG_member, name: "i_opflags", scope: !650, file: !157, line: 612, baseType: !392, size: 16, offset: 16)
!654 = !DIDerivedType(tag: DW_TAG_member, name: "i_uid", scope: !650, file: !157, line: 613, baseType: !655, size: 32, offset: 32)
!655 = !DIDerivedType(tag: DW_TAG_typedef, name: "kuid_t", file: !656, line: 23, baseType: !657)
!656 = !DIFile(filename: "./include/linux/uidgid.h", directory: "/home/lizy2001/genbc/linux")
!657 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !656, line: 21, size: 32, elements: !658)
!658 = !{!659}
!659 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !657, file: !656, line: 22, baseType: !660, size: 32)
!660 = !DIDerivedType(tag: DW_TAG_typedef, name: "uid_t", file: !249, line: 32, baseType: !661)
!661 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_uid32_t", file: !538, line: 49, baseType: !7)
!662 = !DIDerivedType(tag: DW_TAG_member, name: "i_gid", scope: !650, file: !157, line: 614, baseType: !663, size: 32, offset: 64)
!663 = !DIDerivedType(tag: DW_TAG_typedef, name: "kgid_t", file: !656, line: 28, baseType: !664)
!664 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !656, line: 26, size: 32, elements: !665)
!665 = !{!666}
!666 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !664, file: !656, line: 27, baseType: !667, size: 32)
!667 = !DIDerivedType(tag: DW_TAG_typedef, name: "gid_t", file: !249, line: 33, baseType: !668)
!668 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_gid32_t", file: !538, line: 50, baseType: !7)
!669 = !DIDerivedType(tag: DW_TAG_member, name: "i_flags", scope: !650, file: !157, line: 615, baseType: !7, size: 32, offset: 96)
!670 = !DIDerivedType(tag: DW_TAG_member, name: "i_op", scope: !650, file: !157, line: 622, baseType: !671, size: 64, offset: 128)
!671 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !672, size: 64)
!672 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !673)
!673 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "inode_operations", file: !157, line: 1864, size: 1536, align: 512, elements: !674)
!674 = !{!675, !679, !692, !696, !702, !706, !710, !714, !718, !722, !726, !727, !733, !737, !761, !790, !794, !800, !805, !809, !810}
!675 = !DIDerivedType(tag: DW_TAG_member, name: "lookup", scope: !673, file: !157, line: 1865, baseType: !676, size: 64)
!676 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !677, size: 64)
!677 = !DISubroutineType(types: !678)
!678 = !{!610, !649, !610, !7}
!679 = !DIDerivedType(tag: DW_TAG_member, name: "get_link", scope: !673, file: !157, line: 1866, baseType: !680, size: 64, offset: 64)
!680 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !681, size: 64)
!681 = !DISubroutineType(types: !682)
!682 = !{!468, !610, !649, !683}
!683 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !684, size: 64)
!684 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "delayed_call", file: !685, line: 10, size: 128, elements: !686)
!685 = !DIFile(filename: "./include/linux/delayed_call.h", directory: "/home/lizy2001/genbc/linux")
!686 = !{!687, !691}
!687 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !684, file: !685, line: 11, baseType: !688, size: 64)
!688 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !689, size: 64)
!689 = !DISubroutineType(types: !690)
!690 = !{null, !247}
!691 = !DIDerivedType(tag: DW_TAG_member, name: "arg", scope: !684, file: !685, line: 12, baseType: !247, size: 64, offset: 64)
!692 = !DIDerivedType(tag: DW_TAG_member, name: "permission", scope: !673, file: !157, line: 1867, baseType: !693, size: 64, offset: 128)
!693 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !694, size: 64)
!694 = !DISubroutineType(types: !695)
!695 = !{!294, !649, !294}
!696 = !DIDerivedType(tag: DW_TAG_member, name: "get_acl", scope: !673, file: !157, line: 1868, baseType: !697, size: 64, offset: 192)
!697 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !698, size: 64)
!698 = !DISubroutineType(types: !699)
!699 = !{!700, !649, !294}
!700 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !701, size: 64)
!701 = !DICompositeType(tag: DW_TAG_structure_type, name: "posix_acl", file: !157, line: 581, flags: DIFlagFwdDecl)
!702 = !DIDerivedType(tag: DW_TAG_member, name: "readlink", scope: !673, file: !157, line: 1870, baseType: !703, size: 64, offset: 256)
!703 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !704, size: 64)
!704 = !DISubroutineType(types: !705)
!705 = !{!294, !610, !505, !294}
!706 = !DIDerivedType(tag: DW_TAG_member, name: "create", scope: !673, file: !157, line: 1872, baseType: !707, size: 64, offset: 320)
!707 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !708, size: 64)
!708 = !DISubroutineType(types: !709)
!709 = !{!294, !649, !610, !545, !339}
!710 = !DIDerivedType(tag: DW_TAG_member, name: "link", scope: !673, file: !157, line: 1873, baseType: !711, size: 64, offset: 384)
!711 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !712, size: 64)
!712 = !DISubroutineType(types: !713)
!713 = !{!294, !610, !649, !610}
!714 = !DIDerivedType(tag: DW_TAG_member, name: "unlink", scope: !673, file: !157, line: 1874, baseType: !715, size: 64, offset: 448)
!715 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !716, size: 64)
!716 = !DISubroutineType(types: !717)
!717 = !{!294, !649, !610}
!718 = !DIDerivedType(tag: DW_TAG_member, name: "symlink", scope: !673, file: !157, line: 1875, baseType: !719, size: 64, offset: 512)
!719 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !720, size: 64)
!720 = !DISubroutineType(types: !721)
!721 = !{!294, !649, !610, !468}
!722 = !DIDerivedType(tag: DW_TAG_member, name: "mkdir", scope: !673, file: !157, line: 1876, baseType: !723, size: 64, offset: 576)
!723 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !724, size: 64)
!724 = !DISubroutineType(types: !725)
!725 = !{!294, !649, !610, !545}
!726 = !DIDerivedType(tag: DW_TAG_member, name: "rmdir", scope: !673, file: !157, line: 1877, baseType: !715, size: 64, offset: 640)
!727 = !DIDerivedType(tag: DW_TAG_member, name: "mknod", scope: !673, file: !157, line: 1878, baseType: !728, size: 64, offset: 704)
!728 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !729, size: 64)
!729 = !DISubroutineType(types: !730)
!730 = !{!294, !649, !610, !545, !731}
!731 = !DIDerivedType(tag: DW_TAG_typedef, name: "dev_t", file: !249, line: 16, baseType: !732)
!732 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_dev_t", file: !249, line: 13, baseType: !261)
!733 = !DIDerivedType(tag: DW_TAG_member, name: "rename", scope: !673, file: !157, line: 1879, baseType: !734, size: 64, offset: 768)
!734 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !735, size: 64)
!735 = !DISubroutineType(types: !736)
!736 = !{!294, !649, !610, !649, !610, !7}
!737 = !DIDerivedType(tag: DW_TAG_member, name: "setattr", scope: !673, file: !157, line: 1881, baseType: !738, size: 64, offset: 832)
!738 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !739, size: 64)
!739 = !DISubroutineType(types: !740)
!740 = !{!294, !610, !741}
!741 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !742, size: 64)
!742 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "iattr", file: !157, line: 219, size: 640, elements: !743)
!743 = !{!744, !745, !746, !747, !748, !751, !758, !759, !760}
!744 = !DIDerivedType(tag: DW_TAG_member, name: "ia_valid", scope: !742, file: !157, line: 220, baseType: !7, size: 32)
!745 = !DIDerivedType(tag: DW_TAG_member, name: "ia_mode", scope: !742, file: !157, line: 221, baseType: !545, size: 16, offset: 32)
!746 = !DIDerivedType(tag: DW_TAG_member, name: "ia_uid", scope: !742, file: !157, line: 222, baseType: !655, size: 32, offset: 64)
!747 = !DIDerivedType(tag: DW_TAG_member, name: "ia_gid", scope: !742, file: !157, line: 223, baseType: !663, size: 32, offset: 96)
!748 = !DIDerivedType(tag: DW_TAG_member, name: "ia_size", scope: !742, file: !157, line: 224, baseType: !749, size: 64, offset: 128)
!749 = !DIDerivedType(tag: DW_TAG_typedef, name: "loff_t", file: !249, line: 46, baseType: !750)
!750 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_loff_t", file: !538, line: 88, baseType: !356)
!751 = !DIDerivedType(tag: DW_TAG_member, name: "ia_atime", scope: !742, file: !157, line: 225, baseType: !752, size: 128, offset: 192)
!752 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timespec64", file: !753, line: 13, size: 128, elements: !754)
!753 = !DIFile(filename: "./include/linux/time64.h", directory: "/home/lizy2001/genbc/linux")
!754 = !{!755, !757}
!755 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !752, file: !753, line: 14, baseType: !756, size: 64)
!756 = !DIDerivedType(tag: DW_TAG_typedef, name: "time64_t", file: !753, line: 8, baseType: !355)
!757 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !752, file: !753, line: 15, baseType: !31, size: 64, offset: 64)
!758 = !DIDerivedType(tag: DW_TAG_member, name: "ia_mtime", scope: !742, file: !157, line: 226, baseType: !752, size: 128, offset: 320)
!759 = !DIDerivedType(tag: DW_TAG_member, name: "ia_ctime", scope: !742, file: !157, line: 227, baseType: !752, size: 128, offset: 448)
!760 = !DIDerivedType(tag: DW_TAG_member, name: "ia_file", scope: !742, file: !157, line: 234, baseType: !580, size: 64, offset: 576)
!761 = !DIDerivedType(tag: DW_TAG_member, name: "getattr", scope: !673, file: !157, line: 1882, baseType: !762, size: 64, offset: 896)
!762 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !763, size: 64)
!763 = !DISubroutineType(types: !764)
!764 = !{!294, !765, !767, !261, !7}
!765 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !766, size: 64)
!766 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !602)
!767 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !768, size: 64)
!768 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kstat", file: !769, line: 22, size: 1152, elements: !770)
!769 = !DIFile(filename: "./include/linux/stat.h", directory: "/home/lizy2001/genbc/linux")
!770 = !{!771, !772, !773, !774, !776, !777, !778, !779, !780, !781, !782, !783, !784, !785, !786, !787, !788, !789}
!771 = !DIDerivedType(tag: DW_TAG_member, name: "result_mask", scope: !768, file: !769, line: 23, baseType: !261, size: 32)
!772 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !768, file: !769, line: 24, baseType: !545, size: 16, offset: 32)
!773 = !DIDerivedType(tag: DW_TAG_member, name: "nlink", scope: !768, file: !769, line: 25, baseType: !7, size: 32, offset: 64)
!774 = !DIDerivedType(tag: DW_TAG_member, name: "blksize", scope: !768, file: !769, line: 26, baseType: !775, size: 32, offset: 96)
!775 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint32_t", file: !249, line: 104, baseType: !261)
!776 = !DIDerivedType(tag: DW_TAG_member, name: "attributes", scope: !768, file: !769, line: 27, baseType: !284, size: 64, offset: 128)
!777 = !DIDerivedType(tag: DW_TAG_member, name: "attributes_mask", scope: !768, file: !769, line: 28, baseType: !284, size: 64, offset: 192)
!778 = !DIDerivedType(tag: DW_TAG_member, name: "ino", scope: !768, file: !769, line: 37, baseType: !284, size: 64, offset: 256)
!779 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !768, file: !769, line: 38, baseType: !731, size: 32, offset: 320)
!780 = !DIDerivedType(tag: DW_TAG_member, name: "rdev", scope: !768, file: !769, line: 39, baseType: !731, size: 32, offset: 352)
!781 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !768, file: !769, line: 40, baseType: !655, size: 32, offset: 384)
!782 = !DIDerivedType(tag: DW_TAG_member, name: "gid", scope: !768, file: !769, line: 41, baseType: !663, size: 32, offset: 416)
!783 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !768, file: !769, line: 42, baseType: !749, size: 64, offset: 448)
!784 = !DIDerivedType(tag: DW_TAG_member, name: "atime", scope: !768, file: !769, line: 43, baseType: !752, size: 128, offset: 512)
!785 = !DIDerivedType(tag: DW_TAG_member, name: "mtime", scope: !768, file: !769, line: 44, baseType: !752, size: 128, offset: 640)
!786 = !DIDerivedType(tag: DW_TAG_member, name: "ctime", scope: !768, file: !769, line: 45, baseType: !752, size: 128, offset: 768)
!787 = !DIDerivedType(tag: DW_TAG_member, name: "btime", scope: !768, file: !769, line: 46, baseType: !752, size: 128, offset: 896)
!788 = !DIDerivedType(tag: DW_TAG_member, name: "blocks", scope: !768, file: !769, line: 47, baseType: !284, size: 64, offset: 1024)
!789 = !DIDerivedType(tag: DW_TAG_member, name: "mnt_id", scope: !768, file: !769, line: 48, baseType: !284, size: 64, offset: 1088)
!790 = !DIDerivedType(tag: DW_TAG_member, name: "listxattr", scope: !673, file: !157, line: 1883, baseType: !791, size: 64, offset: 960)
!791 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !792, size: 64)
!792 = !DISubroutineType(types: !793)
!793 = !{!536, !610, !505, !550}
!794 = !DIDerivedType(tag: DW_TAG_member, name: "fiemap", scope: !673, file: !157, line: 1884, baseType: !795, size: 64, offset: 1024)
!795 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !796, size: 64)
!796 = !DISubroutineType(types: !797)
!797 = !{!294, !649, !798, !284, !284}
!798 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !799, size: 64)
!799 = !DICompositeType(tag: DW_TAG_structure_type, name: "fiemap_extent_info", file: !157, line: 50, flags: DIFlagFwdDecl)
!800 = !DIDerivedType(tag: DW_TAG_member, name: "update_time", scope: !673, file: !157, line: 1886, baseType: !801, size: 64, offset: 1088)
!801 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !802, size: 64)
!802 = !DISubroutineType(types: !803)
!803 = !{!294, !649, !804, !294}
!804 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !752, size: 64)
!805 = !DIDerivedType(tag: DW_TAG_member, name: "atomic_open", scope: !673, file: !157, line: 1887, baseType: !806, size: 64, offset: 1152)
!806 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !807, size: 64)
!807 = !DISubroutineType(types: !808)
!808 = !{!294, !649, !610, !580, !7, !545}
!809 = !DIDerivedType(tag: DW_TAG_member, name: "tmpfile", scope: !673, file: !157, line: 1890, baseType: !723, size: 64, offset: 1216)
!810 = !DIDerivedType(tag: DW_TAG_member, name: "set_acl", scope: !673, file: !157, line: 1891, baseType: !811, size: 64, offset: 1280)
!811 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !812, size: 64)
!812 = !DISubroutineType(types: !813)
!813 = !{!294, !649, !700, !294}
!814 = !DIDerivedType(tag: DW_TAG_member, name: "i_sb", scope: !650, file: !157, line: 623, baseType: !815, size: 64, offset: 192)
!815 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !816, size: 64)
!816 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "super_block", file: !157, line: 1416, size: 9472, elements: !817)
!817 = !{!818, !819, !820, !821, !822, !823, !873, !3686, !3768, !3851, !3855, !3856, !3857, !3858, !3859, !3860, !3861, !3862, !3867, !3871, !3872, !3873, !3874, !3877, !3878, !3879, !3920, !3946, !3947, !3948, !3949, !3950, !3951, !3954, !3955, !3962, !3963, !3964, !3965, !3966, !4025, !4026, !4041, !4042, !4043, !4044, !4045, !4046, !4047, !4048, !4063, !4064, !4065, !4066, !4067, !4068, !4069, !4070, !4071}
!818 = !DIDerivedType(tag: DW_TAG_member, name: "s_list", scope: !816, file: !157, line: 1417, baseType: !300, size: 128)
!819 = !DIDerivedType(tag: DW_TAG_member, name: "s_dev", scope: !816, file: !157, line: 1418, baseType: !731, size: 32, offset: 128)
!820 = !DIDerivedType(tag: DW_TAG_member, name: "s_blocksize_bits", scope: !816, file: !157, line: 1419, baseType: !268, size: 8, offset: 160)
!821 = !DIDerivedType(tag: DW_TAG_member, name: "s_blocksize", scope: !816, file: !157, line: 1420, baseType: !287, size: 64, offset: 192)
!822 = !DIDerivedType(tag: DW_TAG_member, name: "s_maxbytes", scope: !816, file: !157, line: 1421, baseType: !749, size: 64, offset: 256)
!823 = !DIDerivedType(tag: DW_TAG_member, name: "s_type", scope: !816, file: !157, line: 1422, baseType: !824, size: 64, offset: 320)
!824 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !825, size: 64)
!825 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_system_type", file: !157, line: 2228, size: 576, elements: !826)
!826 = !{!827, !828, !829, !836, !840, !844, !848, !852, !853, !863, !866, !867, !868, !870, !871, !872}
!827 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !825, file: !157, line: 2229, baseType: !468, size: 64)
!828 = !DIDerivedType(tag: DW_TAG_member, name: "fs_flags", scope: !825, file: !157, line: 2230, baseType: !294, size: 32, offset: 64)
!829 = !DIDerivedType(tag: DW_TAG_member, name: "init_fs_context", scope: !825, file: !157, line: 2238, baseType: !830, size: 64, offset: 128)
!830 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !831, size: 64)
!831 = !DISubroutineType(types: !832)
!832 = !{!294, !833}
!833 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !834, size: 64)
!834 = !DICompositeType(tag: DW_TAG_structure_type, name: "fs_context", file: !835, line: 28, flags: DIFlagFwdDecl)
!835 = !DIFile(filename: "./include/linux/kernfs.h", directory: "/home/lizy2001/genbc/linux")
!836 = !DIDerivedType(tag: DW_TAG_member, name: "parameters", scope: !825, file: !157, line: 2239, baseType: !837, size: 64, offset: 192)
!837 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !838, size: 64)
!838 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !839)
!839 = !DICompositeType(tag: DW_TAG_structure_type, name: "fs_parameter_spec", file: !157, line: 70, flags: DIFlagFwdDecl)
!840 = !DIDerivedType(tag: DW_TAG_member, name: "mount", scope: !825, file: !157, line: 2240, baseType: !841, size: 64, offset: 256)
!841 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !842, size: 64)
!842 = !DISubroutineType(types: !843)
!843 = !{!610, !824, !294, !468, !247}
!844 = !DIDerivedType(tag: DW_TAG_member, name: "kill_sb", scope: !825, file: !157, line: 2242, baseType: !845, size: 64, offset: 320)
!845 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !846, size: 64)
!846 = !DISubroutineType(types: !847)
!847 = !{null, !815}
!848 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !825, file: !157, line: 2243, baseType: !849, size: 64, offset: 384)
!849 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !850, size: 64)
!850 = !DICompositeType(tag: DW_TAG_structure_type, name: "module", file: !851, line: 76, flags: DIFlagFwdDecl)
!851 = !DIFile(filename: "./arch/x86/include/asm/alternative.h", directory: "/home/lizy2001/genbc/linux")
!852 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !825, file: !157, line: 2244, baseType: !824, size: 64, offset: 448)
!853 = !DIDerivedType(tag: DW_TAG_member, name: "fs_supers", scope: !825, file: !157, line: 2245, baseType: !854, size: 64, offset: 512)
!854 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hlist_head", file: !249, line: 182, size: 64, elements: !855)
!855 = !{!856}
!856 = !DIDerivedType(tag: DW_TAG_member, name: "first", scope: !854, file: !249, line: 183, baseType: !857, size: 64)
!857 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !858, size: 64)
!858 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hlist_node", file: !249, line: 186, size: 128, elements: !859)
!859 = !{!860, !861}
!860 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !858, file: !249, line: 187, baseType: !857, size: 64)
!861 = !DIDerivedType(tag: DW_TAG_member, name: "pprev", scope: !858, file: !249, line: 187, baseType: !862, size: 64, offset: 64)
!862 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !857, size: 64)
!863 = !DIDerivedType(tag: DW_TAG_member, name: "s_lock_key", scope: !825, file: !157, line: 2247, baseType: !864, offset: 576)
!864 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lock_class_key", file: !865, line: 187, elements: !372)
!865 = !DIFile(filename: "./include/linux/lockdep_types.h", directory: "/home/lizy2001/genbc/linux")
!866 = !DIDerivedType(tag: DW_TAG_member, name: "s_umount_key", scope: !825, file: !157, line: 2248, baseType: !864, offset: 576)
!867 = !DIDerivedType(tag: DW_TAG_member, name: "s_vfs_rename_key", scope: !825, file: !157, line: 2249, baseType: !864, offset: 576)
!868 = !DIDerivedType(tag: DW_TAG_member, name: "s_writers_key", scope: !825, file: !157, line: 2250, baseType: !869, offset: 576)
!869 = !DICompositeType(tag: DW_TAG_array_type, baseType: !864, elements: !506)
!870 = !DIDerivedType(tag: DW_TAG_member, name: "i_lock_key", scope: !825, file: !157, line: 2252, baseType: !864, offset: 576)
!871 = !DIDerivedType(tag: DW_TAG_member, name: "i_mutex_key", scope: !825, file: !157, line: 2253, baseType: !864, offset: 576)
!872 = !DIDerivedType(tag: DW_TAG_member, name: "i_mutex_dir_key", scope: !825, file: !157, line: 2254, baseType: !864, offset: 576)
!873 = !DIDerivedType(tag: DW_TAG_member, name: "s_op", scope: !816, file: !157, line: 1423, baseType: !874, size: 64, offset: 384)
!874 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !875, size: 64)
!875 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !876)
!876 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "super_operations", file: !157, line: 1935, size: 1472, elements: !877)
!877 = !{!878, !882, !886, !887, !891, !911, !915, !916, !917, !921, !925, !926, !927, !928, !934, !939, !940, !983, !984, !985, !986, !3670, !3685}
!878 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_inode", scope: !876, file: !157, line: 1936, baseType: !879, size: 64)
!879 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !880, size: 64)
!880 = !DISubroutineType(types: !881)
!881 = !{!649, !815}
!882 = !DIDerivedType(tag: DW_TAG_member, name: "destroy_inode", scope: !876, file: !157, line: 1937, baseType: !883, size: 64, offset: 64)
!883 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !884, size: 64)
!884 = !DISubroutineType(types: !885)
!885 = !{null, !649}
!886 = !DIDerivedType(tag: DW_TAG_member, name: "free_inode", scope: !876, file: !157, line: 1938, baseType: !883, size: 64, offset: 128)
!887 = !DIDerivedType(tag: DW_TAG_member, name: "dirty_inode", scope: !876, file: !157, line: 1940, baseType: !888, size: 64, offset: 192)
!888 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !889, size: 64)
!889 = !DISubroutineType(types: !890)
!890 = !{null, !649, !294}
!891 = !DIDerivedType(tag: DW_TAG_member, name: "write_inode", scope: !876, file: !157, line: 1941, baseType: !892, size: 64, offset: 256)
!892 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !893, size: 64)
!893 = !DISubroutineType(types: !894)
!894 = !{!294, !649, !895}
!895 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !896, size: 64)
!896 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "writeback_control", file: !78, line: 51, size: 320, elements: !897)
!897 = !{!898, !899, !900, !901, !902, !903, !904, !905, !906, !907, !908, !909, !910}
!898 = !DIDerivedType(tag: DW_TAG_member, name: "nr_to_write", scope: !896, file: !78, line: 52, baseType: !31, size: 64)
!899 = !DIDerivedType(tag: DW_TAG_member, name: "pages_skipped", scope: !896, file: !78, line: 54, baseType: !31, size: 64, offset: 64)
!900 = !DIDerivedType(tag: DW_TAG_member, name: "range_start", scope: !896, file: !78, line: 61, baseType: !749, size: 64, offset: 128)
!901 = !DIDerivedType(tag: DW_TAG_member, name: "range_end", scope: !896, file: !78, line: 62, baseType: !749, size: 64, offset: 192)
!902 = !DIDerivedType(tag: DW_TAG_member, name: "sync_mode", scope: !896, file: !78, line: 64, baseType: !77, size: 32, offset: 256)
!903 = !DIDerivedType(tag: DW_TAG_member, name: "for_kupdate", scope: !896, file: !78, line: 66, baseType: !7, size: 1, offset: 288, flags: DIFlagBitField, extraData: i64 288)
!904 = !DIDerivedType(tag: DW_TAG_member, name: "for_background", scope: !896, file: !78, line: 67, baseType: !7, size: 1, offset: 289, flags: DIFlagBitField, extraData: i64 288)
!905 = !DIDerivedType(tag: DW_TAG_member, name: "tagged_writepages", scope: !896, file: !78, line: 68, baseType: !7, size: 1, offset: 290, flags: DIFlagBitField, extraData: i64 288)
!906 = !DIDerivedType(tag: DW_TAG_member, name: "for_reclaim", scope: !896, file: !78, line: 69, baseType: !7, size: 1, offset: 291, flags: DIFlagBitField, extraData: i64 288)
!907 = !DIDerivedType(tag: DW_TAG_member, name: "range_cyclic", scope: !896, file: !78, line: 70, baseType: !7, size: 1, offset: 292, flags: DIFlagBitField, extraData: i64 288)
!908 = !DIDerivedType(tag: DW_TAG_member, name: "for_sync", scope: !896, file: !78, line: 71, baseType: !7, size: 1, offset: 293, flags: DIFlagBitField, extraData: i64 288)
!909 = !DIDerivedType(tag: DW_TAG_member, name: "no_cgroup_owner", scope: !896, file: !78, line: 79, baseType: !7, size: 1, offset: 294, flags: DIFlagBitField, extraData: i64 288)
!910 = !DIDerivedType(tag: DW_TAG_member, name: "punt_to_cgroup", scope: !896, file: !78, line: 81, baseType: !7, size: 1, offset: 295, flags: DIFlagBitField, extraData: i64 288)
!911 = !DIDerivedType(tag: DW_TAG_member, name: "drop_inode", scope: !876, file: !157, line: 1942, baseType: !912, size: 64, offset: 320)
!912 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !913, size: 64)
!913 = !DISubroutineType(types: !914)
!914 = !{!294, !649}
!915 = !DIDerivedType(tag: DW_TAG_member, name: "evict_inode", scope: !876, file: !157, line: 1943, baseType: !883, size: 64, offset: 384)
!916 = !DIDerivedType(tag: DW_TAG_member, name: "put_super", scope: !876, file: !157, line: 1944, baseType: !845, size: 64, offset: 448)
!917 = !DIDerivedType(tag: DW_TAG_member, name: "sync_fs", scope: !876, file: !157, line: 1945, baseType: !918, size: 64, offset: 512)
!918 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !919, size: 64)
!919 = !DISubroutineType(types: !920)
!920 = !{!294, !815, !294}
!921 = !DIDerivedType(tag: DW_TAG_member, name: "freeze_super", scope: !876, file: !157, line: 1946, baseType: !922, size: 64, offset: 576)
!922 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !923, size: 64)
!923 = !DISubroutineType(types: !924)
!924 = !{!294, !815}
!925 = !DIDerivedType(tag: DW_TAG_member, name: "freeze_fs", scope: !876, file: !157, line: 1947, baseType: !922, size: 64, offset: 640)
!926 = !DIDerivedType(tag: DW_TAG_member, name: "thaw_super", scope: !876, file: !157, line: 1948, baseType: !922, size: 64, offset: 704)
!927 = !DIDerivedType(tag: DW_TAG_member, name: "unfreeze_fs", scope: !876, file: !157, line: 1949, baseType: !922, size: 64, offset: 768)
!928 = !DIDerivedType(tag: DW_TAG_member, name: "statfs", scope: !876, file: !157, line: 1950, baseType: !929, size: 64, offset: 832)
!929 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !930, size: 64)
!930 = !DISubroutineType(types: !931)
!931 = !{!294, !610, !932}
!932 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !933, size: 64)
!933 = !DICompositeType(tag: DW_TAG_structure_type, name: "kstatfs", file: !157, line: 57, flags: DIFlagFwdDecl)
!934 = !DIDerivedType(tag: DW_TAG_member, name: "remount_fs", scope: !876, file: !157, line: 1951, baseType: !935, size: 64, offset: 896)
!935 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !936, size: 64)
!936 = !DISubroutineType(types: !937)
!937 = !{!294, !815, !938, !505}
!938 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !294, size: 64)
!939 = !DIDerivedType(tag: DW_TAG_member, name: "umount_begin", scope: !876, file: !157, line: 1952, baseType: !845, size: 64, offset: 960)
!940 = !DIDerivedType(tag: DW_TAG_member, name: "show_options", scope: !876, file: !157, line: 1954, baseType: !941, size: 64, offset: 1024)
!941 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !942, size: 64)
!942 = !DISubroutineType(types: !943)
!943 = !{!294, !944, !610}
!944 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !945, size: 64)
!945 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seq_file", file: !946, line: 16, size: 896, elements: !947)
!946 = !DIFile(filename: "./include/linux/seq_file.h", directory: "/home/lizy2001/genbc/linux")
!947 = !{!948, !949, !950, !951, !952, !953, !954, !955, !956, !978, !979, !982}
!948 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !945, file: !946, line: 17, baseType: !505, size: 64)
!949 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !945, file: !946, line: 18, baseType: !550, size: 64, offset: 64)
!950 = !DIDerivedType(tag: DW_TAG_member, name: "from", scope: !945, file: !946, line: 19, baseType: !550, size: 64, offset: 128)
!951 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !945, file: !946, line: 20, baseType: !550, size: 64, offset: 192)
!952 = !DIDerivedType(tag: DW_TAG_member, name: "pad_until", scope: !945, file: !946, line: 21, baseType: !550, size: 64, offset: 256)
!953 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !945, file: !946, line: 22, baseType: !749, size: 64, offset: 320)
!954 = !DIDerivedType(tag: DW_TAG_member, name: "read_pos", scope: !945, file: !946, line: 23, baseType: !749, size: 64, offset: 384)
!955 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !945, file: !946, line: 24, baseType: !344, size: 192, offset: 448)
!956 = !DIDerivedType(tag: DW_TAG_member, name: "op", scope: !945, file: !946, line: 25, baseType: !957, size: 64, offset: 640)
!957 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !958, size: 64)
!958 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !959)
!959 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seq_operations", file: !946, line: 31, size: 256, elements: !960)
!960 = !{!961, !966, !970, !974}
!961 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !959, file: !946, line: 32, baseType: !962, size: 64)
!962 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !963, size: 64)
!963 = !DISubroutineType(types: !964)
!964 = !{!247, !944, !965}
!965 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !749, size: 64)
!966 = !DIDerivedType(tag: DW_TAG_member, name: "stop", scope: !959, file: !946, line: 33, baseType: !967, size: 64, offset: 64)
!967 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !968, size: 64)
!968 = !DISubroutineType(types: !969)
!969 = !{null, !944, !247}
!970 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !959, file: !946, line: 34, baseType: !971, size: 64, offset: 128)
!971 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !972, size: 64)
!972 = !DISubroutineType(types: !973)
!973 = !{!247, !944, !247, !965}
!974 = !DIDerivedType(tag: DW_TAG_member, name: "show", scope: !959, file: !946, line: 35, baseType: !975, size: 64, offset: 192)
!975 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !976, size: 64)
!976 = !DISubroutineType(types: !977)
!977 = !{!294, !944, !247}
!978 = !DIDerivedType(tag: DW_TAG_member, name: "poll_event", scope: !945, file: !946, line: 26, baseType: !294, size: 32, offset: 704)
!979 = !DIDerivedType(tag: DW_TAG_member, name: "file", scope: !945, file: !946, line: 27, baseType: !980, size: 64, offset: 768)
!980 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !981, size: 64)
!981 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !581)
!982 = !DIDerivedType(tag: DW_TAG_member, name: "private", scope: !945, file: !946, line: 28, baseType: !247, size: 64, offset: 832)
!983 = !DIDerivedType(tag: DW_TAG_member, name: "show_devname", scope: !876, file: !157, line: 1955, baseType: !941, size: 64, offset: 1088)
!984 = !DIDerivedType(tag: DW_TAG_member, name: "show_path", scope: !876, file: !157, line: 1956, baseType: !941, size: 64, offset: 1152)
!985 = !DIDerivedType(tag: DW_TAG_member, name: "show_stats", scope: !876, file: !157, line: 1957, baseType: !941, size: 64, offset: 1216)
!986 = !DIDerivedType(tag: DW_TAG_member, name: "bdev_try_to_free_page", scope: !876, file: !157, line: 1963, baseType: !987, size: 64, offset: 1280)
!987 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !988, size: 64)
!988 = !DISubroutineType(types: !989)
!989 = !{!294, !815, !990, !248}
!990 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !991, size: 64)
!991 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "page", file: !992, line: 68, size: 512, align: 128, elements: !993)
!992 = !DIFile(filename: "./include/linux/mm_types.h", directory: "/home/lizy2001/genbc/linux")
!993 = !{!994, !995, !3662, !3669}
!994 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !991, file: !992, line: 69, baseType: !287, size: 64)
!995 = !DIDerivedType(tag: DW_TAG_member, scope: !991, file: !992, line: 77, baseType: !996, size: 320, offset: 64)
!996 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !991, file: !992, line: 77, size: 320, elements: !997)
!997 = !{!998, !2098, !2103, !2129, !2137, !2143, !3613, !3661}
!998 = !DIDerivedType(tag: DW_TAG_member, scope: !996, file: !992, line: 78, baseType: !999, size: 320)
!999 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !996, file: !992, line: 78, size: 320, elements: !1000)
!1000 = !{!1001, !1002, !2096, !2097}
!1001 = !DIDerivedType(tag: DW_TAG_member, name: "lru", scope: !999, file: !992, line: 84, baseType: !300, size: 128)
!1002 = !DIDerivedType(tag: DW_TAG_member, name: "mapping", scope: !999, file: !992, line: 86, baseType: !1003, size: 64, offset: 128)
!1003 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1004, size: 64)
!1004 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "address_space", file: !157, line: 451, size: 1216, align: 64, elements: !1005)
!1005 = !{!1006, !1007, !1014, !1015, !1016, !1031, !1040, !1041, !1042, !1043, !2089, !2090, !2093, !2094, !2095}
!1006 = !DIDerivedType(tag: DW_TAG_member, name: "host", scope: !1004, file: !157, line: 452, baseType: !649, size: 64)
!1007 = !DIDerivedType(tag: DW_TAG_member, name: "i_pages", scope: !1004, file: !157, line: 453, baseType: !1008, size: 128, offset: 64)
!1008 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xarray", file: !1009, line: 292, size: 128, elements: !1010)
!1009 = !DIFile(filename: "./include/linux/xarray.h", directory: "/home/lizy2001/genbc/linux")
!1010 = !{!1011, !1012, !1013}
!1011 = !DIDerivedType(tag: DW_TAG_member, name: "xa_lock", scope: !1008, file: !1009, line: 293, baseType: !358)
!1012 = !DIDerivedType(tag: DW_TAG_member, name: "xa_flags", scope: !1008, file: !1009, line: 295, baseType: !248, size: 32)
!1013 = !DIDerivedType(tag: DW_TAG_member, name: "xa_head", scope: !1008, file: !1009, line: 296, baseType: !247, size: 64, offset: 64)
!1014 = !DIDerivedType(tag: DW_TAG_member, name: "gfp_mask", scope: !1004, file: !157, line: 454, baseType: !248, size: 32, offset: 192)
!1015 = !DIDerivedType(tag: DW_TAG_member, name: "i_mmap_writable", scope: !1004, file: !157, line: 455, baseType: !326, size: 32, offset: 224)
!1016 = !DIDerivedType(tag: DW_TAG_member, name: "i_mmap", scope: !1004, file: !157, line: 460, baseType: !1017, size: 128, offset: 256)
!1017 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rb_root_cached", file: !1018, line: 125, size: 128, elements: !1019)
!1018 = !DIFile(filename: "./include/linux/rbtree.h", directory: "/home/lizy2001/genbc/linux")
!1019 = !{!1020, !1030}
!1020 = !DIDerivedType(tag: DW_TAG_member, name: "rb_root", scope: !1017, file: !1018, line: 126, baseType: !1021, size: 64)
!1021 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rb_root", file: !1018, line: 31, size: 64, elements: !1022)
!1022 = !{!1023}
!1023 = !DIDerivedType(tag: DW_TAG_member, name: "rb_node", scope: !1021, file: !1018, line: 32, baseType: !1024, size: 64)
!1024 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1025, size: 64)
!1025 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rb_node", file: !1018, line: 24, size: 192, align: 64, elements: !1026)
!1026 = !{!1027, !1028, !1029}
!1027 = !DIDerivedType(tag: DW_TAG_member, name: "__rb_parent_color", scope: !1025, file: !1018, line: 25, baseType: !287, size: 64)
!1028 = !DIDerivedType(tag: DW_TAG_member, name: "rb_right", scope: !1025, file: !1018, line: 26, baseType: !1024, size: 64, offset: 64)
!1029 = !DIDerivedType(tag: DW_TAG_member, name: "rb_left", scope: !1025, file: !1018, line: 27, baseType: !1024, size: 64, offset: 128)
!1030 = !DIDerivedType(tag: DW_TAG_member, name: "rb_leftmost", scope: !1017, file: !1018, line: 127, baseType: !1024, size: 64, offset: 64)
!1031 = !DIDerivedType(tag: DW_TAG_member, name: "i_mmap_rwsem", scope: !1004, file: !157, line: 461, baseType: !1032, size: 256, offset: 384)
!1032 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rw_semaphore", file: !1033, line: 35, size: 256, elements: !1034)
!1033 = !DIFile(filename: "./include/linux/rwsem.h", directory: "/home/lizy2001/genbc/linux")
!1034 = !{!1035, !1036, !1037, !1039}
!1035 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !1032, file: !1033, line: 36, baseType: !348, size: 64)
!1036 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !1032, file: !1033, line: 42, baseType: !348, size: 64, offset: 64)
!1037 = !DIDerivedType(tag: DW_TAG_member, name: "wait_lock", scope: !1032, file: !1033, line: 46, baseType: !1038, offset: 128)
!1038 = !DIDerivedType(tag: DW_TAG_typedef, name: "raw_spinlock_t", file: !359, line: 29, baseType: !366)
!1039 = !DIDerivedType(tag: DW_TAG_member, name: "wait_list", scope: !1032, file: !1033, line: 47, baseType: !300, size: 128, offset: 128)
!1040 = !DIDerivedType(tag: DW_TAG_member, name: "nrpages", scope: !1004, file: !157, line: 462, baseType: !287, size: 64, offset: 640)
!1041 = !DIDerivedType(tag: DW_TAG_member, name: "nrexceptional", scope: !1004, file: !157, line: 463, baseType: !287, size: 64, offset: 704)
!1042 = !DIDerivedType(tag: DW_TAG_member, name: "writeback_index", scope: !1004, file: !157, line: 464, baseType: !287, size: 64, offset: 768)
!1043 = !DIDerivedType(tag: DW_TAG_member, name: "a_ops", scope: !1004, file: !157, line: 465, baseType: !1044, size: 64, offset: 832)
!1044 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1045, size: 64)
!1045 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1046)
!1046 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "address_space_operations", file: !157, line: 367, size: 1408, elements: !1047)
!1047 = !{!1048, !1052, !1056, !1060, !1064, !1068, !1081, !1087, !1091, !1096, !1100, !1104, !1108, !1152, !1156, !1162, !1163, !1164, !1168, !1173, !1177, !2085}
!1048 = !DIDerivedType(tag: DW_TAG_member, name: "writepage", scope: !1046, file: !157, line: 368, baseType: !1049, size: 64)
!1049 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1050, size: 64)
!1050 = !DISubroutineType(types: !1051)
!1051 = !{!294, !990, !895}
!1052 = !DIDerivedType(tag: DW_TAG_member, name: "readpage", scope: !1046, file: !157, line: 369, baseType: !1053, size: 64, offset: 64)
!1053 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1054, size: 64)
!1054 = !DISubroutineType(types: !1055)
!1055 = !{!294, !580, !990}
!1056 = !DIDerivedType(tag: DW_TAG_member, name: "writepages", scope: !1046, file: !157, line: 372, baseType: !1057, size: 64, offset: 128)
!1057 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1058, size: 64)
!1058 = !DISubroutineType(types: !1059)
!1059 = !{!294, !1003, !895}
!1060 = !DIDerivedType(tag: DW_TAG_member, name: "set_page_dirty", scope: !1046, file: !157, line: 375, baseType: !1061, size: 64, offset: 192)
!1061 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1062, size: 64)
!1062 = !DISubroutineType(types: !1063)
!1063 = !{!294, !990}
!1064 = !DIDerivedType(tag: DW_TAG_member, name: "readpages", scope: !1046, file: !157, line: 381, baseType: !1065, size: 64, offset: 256)
!1065 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1066, size: 64)
!1066 = !DISubroutineType(types: !1067)
!1067 = !{!294, !580, !1003, !299, !7}
!1068 = !DIDerivedType(tag: DW_TAG_member, name: "readahead", scope: !1046, file: !157, line: 383, baseType: !1069, size: 64, offset: 320)
!1069 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1070, size: 64)
!1070 = !DISubroutineType(types: !1071)
!1071 = !{null, !1072}
!1072 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1073, size: 64)
!1073 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "readahead_control", file: !1074, line: 795, size: 256, elements: !1075)
!1074 = !DIFile(filename: "./include/linux/pagemap.h", directory: "/home/lizy2001/genbc/linux")
!1075 = !{!1076, !1077, !1078, !1079, !1080}
!1076 = !DIDerivedType(tag: DW_TAG_member, name: "file", scope: !1073, file: !1074, line: 796, baseType: !580, size: 64)
!1077 = !DIDerivedType(tag: DW_TAG_member, name: "mapping", scope: !1073, file: !1074, line: 797, baseType: !1003, size: 64, offset: 64)
!1078 = !DIDerivedType(tag: DW_TAG_member, name: "_index", scope: !1073, file: !1074, line: 799, baseType: !287, size: 64, offset: 128)
!1079 = !DIDerivedType(tag: DW_TAG_member, name: "_nr_pages", scope: !1073, file: !1074, line: 800, baseType: !7, size: 32, offset: 192)
!1080 = !DIDerivedType(tag: DW_TAG_member, name: "_batch_count", scope: !1073, file: !1074, line: 801, baseType: !7, size: 32, offset: 224)
!1081 = !DIDerivedType(tag: DW_TAG_member, name: "write_begin", scope: !1046, file: !157, line: 385, baseType: !1082, size: 64, offset: 384)
!1082 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1083, size: 64)
!1083 = !DISubroutineType(types: !1084)
!1084 = !{!294, !580, !1003, !749, !7, !7, !1085, !1086}
!1085 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !990, size: 64)
!1086 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !247, size: 64)
!1087 = !DIDerivedType(tag: DW_TAG_member, name: "write_end", scope: !1046, file: !157, line: 388, baseType: !1088, size: 64, offset: 448)
!1088 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1089, size: 64)
!1089 = !DISubroutineType(types: !1090)
!1090 = !{!294, !580, !1003, !749, !7, !7, !990, !247}
!1091 = !DIDerivedType(tag: DW_TAG_member, name: "bmap", scope: !1046, file: !157, line: 393, baseType: !1092, size: 64, offset: 512)
!1092 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1093, size: 64)
!1093 = !DISubroutineType(types: !1094)
!1094 = !{!1095, !1003, !1095}
!1095 = !DIDerivedType(tag: DW_TAG_typedef, name: "sector_t", file: !249, line: 125, baseType: !284)
!1096 = !DIDerivedType(tag: DW_TAG_member, name: "invalidatepage", scope: !1046, file: !157, line: 394, baseType: !1097, size: 64, offset: 576)
!1097 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1098, size: 64)
!1098 = !DISubroutineType(types: !1099)
!1099 = !{null, !990, !7, !7}
!1100 = !DIDerivedType(tag: DW_TAG_member, name: "releasepage", scope: !1046, file: !157, line: 395, baseType: !1101, size: 64, offset: 640)
!1101 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1102, size: 64)
!1102 = !DISubroutineType(types: !1103)
!1103 = !{!294, !990, !248}
!1104 = !DIDerivedType(tag: DW_TAG_member, name: "freepage", scope: !1046, file: !157, line: 396, baseType: !1105, size: 64, offset: 704)
!1105 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1106, size: 64)
!1106 = !DISubroutineType(types: !1107)
!1107 = !{null, !990}
!1108 = !DIDerivedType(tag: DW_TAG_member, name: "direct_IO", scope: !1046, file: !157, line: 397, baseType: !1109, size: 64, offset: 768)
!1109 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1110, size: 64)
!1110 = !DISubroutineType(types: !1111)
!1111 = !{!536, !1112, !1150}
!1112 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1113, size: 64)
!1113 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kiocb", file: !157, line: 320, size: 384, elements: !1114)
!1114 = !{!1115, !1116, !1117, !1121, !1122, !1123, !1126, !1127}
!1115 = !DIDerivedType(tag: DW_TAG_member, name: "ki_filp", scope: !1113, file: !157, line: 321, baseType: !580, size: 64)
!1116 = !DIDerivedType(tag: DW_TAG_member, name: "ki_pos", scope: !1113, file: !157, line: 326, baseType: !749, size: 64, offset: 64)
!1117 = !DIDerivedType(tag: DW_TAG_member, name: "ki_complete", scope: !1113, file: !157, line: 327, baseType: !1118, size: 64, offset: 128)
!1118 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1119, size: 64)
!1119 = !DISubroutineType(types: !1120)
!1120 = !{null, !1112, !31, !31}
!1121 = !DIDerivedType(tag: DW_TAG_member, name: "private", scope: !1113, file: !157, line: 328, baseType: !247, size: 64, offset: 192)
!1122 = !DIDerivedType(tag: DW_TAG_member, name: "ki_flags", scope: !1113, file: !157, line: 329, baseType: !294, size: 32, offset: 256)
!1123 = !DIDerivedType(tag: DW_TAG_member, name: "ki_hint", scope: !1113, file: !157, line: 330, baseType: !1124, size: 16, offset: 288)
!1124 = !DIDerivedType(tag: DW_TAG_typedef, name: "u16", file: !262, line: 19, baseType: !1125)
!1125 = !DIDerivedType(tag: DW_TAG_typedef, name: "__u16", file: !264, line: 24, baseType: !392)
!1126 = !DIDerivedType(tag: DW_TAG_member, name: "ki_ioprio", scope: !1113, file: !157, line: 331, baseType: !1124, size: 16, offset: 304)
!1127 = !DIDerivedType(tag: DW_TAG_member, scope: !1113, file: !157, line: 332, baseType: !1128, size: 64, offset: 320)
!1128 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1113, file: !157, line: 332, size: 64, elements: !1129)
!1129 = !{!1130, !1131}
!1130 = !DIDerivedType(tag: DW_TAG_member, name: "ki_cookie", scope: !1128, file: !157, line: 333, baseType: !7, size: 32)
!1131 = !DIDerivedType(tag: DW_TAG_member, name: "ki_waitq", scope: !1128, file: !157, line: 334, baseType: !1132, size: 64)
!1132 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1133, size: 64)
!1133 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wait_page_queue", file: !1074, line: 569, size: 448, elements: !1134)
!1134 = !{!1135, !1136, !1137}
!1135 = !DIDerivedType(tag: DW_TAG_member, name: "page", scope: !1133, file: !1074, line: 570, baseType: !990, size: 64)
!1136 = !DIDerivedType(tag: DW_TAG_member, name: "bit_nr", scope: !1133, file: !1074, line: 571, baseType: !294, size: 32, offset: 64)
!1137 = !DIDerivedType(tag: DW_TAG_member, name: "wait", scope: !1133, file: !1074, line: 572, baseType: !1138, size: 320, offset: 128)
!1138 = !DIDerivedType(tag: DW_TAG_typedef, name: "wait_queue_entry_t", file: !376, line: 14, baseType: !1139)
!1139 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wait_queue_entry", file: !376, line: 29, size: 320, elements: !1140)
!1140 = !{!1141, !1142, !1143, !1149}
!1141 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1139, file: !376, line: 30, baseType: !7, size: 32)
!1142 = !DIDerivedType(tag: DW_TAG_member, name: "private", scope: !1139, file: !376, line: 31, baseType: !247, size: 64, offset: 64)
!1143 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !1139, file: !376, line: 32, baseType: !1144, size: 64, offset: 128)
!1144 = !DIDerivedType(tag: DW_TAG_typedef, name: "wait_queue_func_t", file: !376, line: 16, baseType: !1145)
!1145 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1146, size: 64)
!1146 = !DISubroutineType(types: !1147)
!1147 = !{!294, !1148, !7, !294, !247}
!1148 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1139, size: 64)
!1149 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !1139, file: !376, line: 33, baseType: !300, size: 128, offset: 192)
!1150 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1151, size: 64)
!1151 = !DICompositeType(tag: DW_TAG_structure_type, name: "iov_iter", file: !157, line: 64, flags: DIFlagFwdDecl)
!1152 = !DIDerivedType(tag: DW_TAG_member, name: "migratepage", scope: !1046, file: !157, line: 402, baseType: !1153, size: 64, offset: 832)
!1153 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1154, size: 64)
!1154 = !DISubroutineType(types: !1155)
!1155 = !{!294, !1003, !990, !990, !82}
!1156 = !DIDerivedType(tag: DW_TAG_member, name: "isolate_page", scope: !1046, file: !157, line: 404, baseType: !1157, size: 64, offset: 896)
!1157 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1158, size: 64)
!1158 = !DISubroutineType(types: !1159)
!1159 = !{!339, !990, !1160}
!1160 = !DIDerivedType(tag: DW_TAG_typedef, name: "isolate_mode_t", file: !1161, line: 305, baseType: !7)
!1161 = !DIFile(filename: "./include/linux/mmzone.h", directory: "/home/lizy2001/genbc/linux")
!1162 = !DIDerivedType(tag: DW_TAG_member, name: "putback_page", scope: !1046, file: !157, line: 405, baseType: !1105, size: 64, offset: 960)
!1163 = !DIDerivedType(tag: DW_TAG_member, name: "launder_page", scope: !1046, file: !157, line: 406, baseType: !1061, size: 64, offset: 1024)
!1164 = !DIDerivedType(tag: DW_TAG_member, name: "is_partially_uptodate", scope: !1046, file: !157, line: 407, baseType: !1165, size: 64, offset: 1088)
!1165 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1166, size: 64)
!1166 = !DISubroutineType(types: !1167)
!1167 = !{!294, !990, !287, !287}
!1168 = !DIDerivedType(tag: DW_TAG_member, name: "is_dirty_writeback", scope: !1046, file: !157, line: 409, baseType: !1169, size: 64, offset: 1152)
!1169 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1170, size: 64)
!1170 = !DISubroutineType(types: !1171)
!1171 = !{null, !990, !1172, !1172}
!1172 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !339, size: 64)
!1173 = !DIDerivedType(tag: DW_TAG_member, name: "error_remove_page", scope: !1046, file: !157, line: 410, baseType: !1174, size: 64, offset: 1216)
!1174 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1175, size: 64)
!1175 = !DISubroutineType(types: !1176)
!1176 = !{!294, !1003, !990}
!1177 = !DIDerivedType(tag: DW_TAG_member, name: "swap_activate", scope: !1046, file: !157, line: 413, baseType: !1178, size: 64, offset: 1280)
!1178 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1179, size: 64)
!1179 = !DISubroutineType(types: !1180)
!1180 = !{!294, !1181, !580, !2084}
!1181 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1182, size: 64)
!1182 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "swap_info_struct", file: !1183, line: 240, size: 1600, elements: !1184)
!1183 = !DIFile(filename: "./include/linux/swap.h", directory: "/home/lizy2001/genbc/linux")
!1184 = !{!1185, !1186, !1188, !1195, !1197, !1198, !1200, !1207, !1212, !1213, !1214, !1215, !1216, !1217, !1218, !1220, !1226, !1227, !2076, !2077, !2078, !2079, !2080, !2081, !2082}
!1185 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1182, file: !1183, line: 241, baseType: !287, size: 64)
!1186 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !1182, file: !1183, line: 242, baseType: !1187, size: 16, offset: 64)
!1187 = !DIBasicType(name: "short", size: 16, encoding: DW_ATE_signed)
!1188 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !1182, file: !1183, line: 243, baseType: !1189, size: 320, offset: 128)
!1189 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "plist_node", file: !1190, line: 83, size: 320, elements: !1191)
!1190 = !DIFile(filename: "./include/linux/plist.h", directory: "/home/lizy2001/genbc/linux")
!1191 = !{!1192, !1193, !1194}
!1192 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !1189, file: !1190, line: 84, baseType: !294, size: 32)
!1193 = !DIDerivedType(tag: DW_TAG_member, name: "prio_list", scope: !1189, file: !1190, line: 85, baseType: !300, size: 128, offset: 64)
!1194 = !DIDerivedType(tag: DW_TAG_member, name: "node_list", scope: !1189, file: !1190, line: 86, baseType: !300, size: 128, offset: 192)
!1195 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1182, file: !1183, line: 244, baseType: !1196, size: 8, offset: 448)
!1196 = !DIBasicType(name: "signed char", size: 8, encoding: DW_ATE_signed_char)
!1197 = !DIDerivedType(tag: DW_TAG_member, name: "max", scope: !1182, file: !1183, line: 245, baseType: !7, size: 32, offset: 480)
!1198 = !DIDerivedType(tag: DW_TAG_member, name: "swap_map", scope: !1182, file: !1183, line: 246, baseType: !1199, size: 64, offset: 512)
!1199 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !268, size: 64)
!1200 = !DIDerivedType(tag: DW_TAG_member, name: "cluster_info", scope: !1182, file: !1183, line: 247, baseType: !1201, size: 64, offset: 576)
!1201 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1202, size: 64)
!1202 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "swap_cluster_info", file: !1183, line: 208, size: 32, elements: !1203)
!1203 = !{!1204, !1205, !1206}
!1204 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1202, file: !1183, line: 209, baseType: !358)
!1205 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1202, file: !1183, line: 215, baseType: !7, size: 24, flags: DIFlagBitField, extraData: i64 0)
!1206 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1202, file: !1183, line: 216, baseType: !7, size: 8, offset: 24, flags: DIFlagBitField, extraData: i64 0)
!1207 = !DIDerivedType(tag: DW_TAG_member, name: "free_clusters", scope: !1182, file: !1183, line: 248, baseType: !1208, size: 64, offset: 640)
!1208 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "swap_cluster_list", file: !1183, line: 232, size: 64, elements: !1209)
!1209 = !{!1210, !1211}
!1210 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !1208, file: !1183, line: 233, baseType: !1202, size: 32)
!1211 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !1208, file: !1183, line: 234, baseType: !1202, size: 32, offset: 32)
!1212 = !DIDerivedType(tag: DW_TAG_member, name: "lowest_bit", scope: !1182, file: !1183, line: 249, baseType: !7, size: 32, offset: 704)
!1213 = !DIDerivedType(tag: DW_TAG_member, name: "highest_bit", scope: !1182, file: !1183, line: 250, baseType: !7, size: 32, offset: 736)
!1214 = !DIDerivedType(tag: DW_TAG_member, name: "pages", scope: !1182, file: !1183, line: 251, baseType: !7, size: 32, offset: 768)
!1215 = !DIDerivedType(tag: DW_TAG_member, name: "inuse_pages", scope: !1182, file: !1183, line: 252, baseType: !7, size: 32, offset: 800)
!1216 = !DIDerivedType(tag: DW_TAG_member, name: "cluster_next", scope: !1182, file: !1183, line: 253, baseType: !7, size: 32, offset: 832)
!1217 = !DIDerivedType(tag: DW_TAG_member, name: "cluster_nr", scope: !1182, file: !1183, line: 254, baseType: !7, size: 32, offset: 864)
!1218 = !DIDerivedType(tag: DW_TAG_member, name: "cluster_next_cpu", scope: !1182, file: !1183, line: 255, baseType: !1219, size: 64, offset: 896)
!1219 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7, size: 64)
!1220 = !DIDerivedType(tag: DW_TAG_member, name: "percpu_cluster", scope: !1182, file: !1183, line: 256, baseType: !1221, size: 64, offset: 960)
!1221 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1222, size: 64)
!1222 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "percpu_cluster", file: !1183, line: 227, size: 64, elements: !1223)
!1223 = !{!1224, !1225}
!1224 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !1222, file: !1183, line: 228, baseType: !1202, size: 32)
!1225 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1222, file: !1183, line: 229, baseType: !7, size: 32, offset: 32)
!1226 = !DIDerivedType(tag: DW_TAG_member, name: "swap_extent_root", scope: !1182, file: !1183, line: 257, baseType: !1021, size: 64, offset: 1024)
!1227 = !DIDerivedType(tag: DW_TAG_member, name: "bdev", scope: !1182, file: !1183, line: 258, baseType: !1228, size: 64, offset: 1088)
!1228 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1229, size: 64)
!1229 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "block_device", file: !1230, line: 22, size: 1344, elements: !1231)
!1230 = !DIFile(filename: "./include/linux/blk_types.h", directory: "/home/lizy2001/genbc/linux")
!1231 = !{!1232, !1233, !1234, !1235, !1236, !1237, !1238, !1239, !1240, !1241, !1242, !1243, !1244, !1298, !1299, !1300, !2073, !2074, !2075}
!1232 = !DIDerivedType(tag: DW_TAG_member, name: "bd_dev", scope: !1229, file: !1230, line: 23, baseType: !731, size: 32)
!1233 = !DIDerivedType(tag: DW_TAG_member, name: "bd_openers", scope: !1229, file: !1230, line: 24, baseType: !294, size: 32, offset: 32)
!1234 = !DIDerivedType(tag: DW_TAG_member, name: "bd_inode", scope: !1229, file: !1230, line: 25, baseType: !649, size: 64, offset: 64)
!1235 = !DIDerivedType(tag: DW_TAG_member, name: "bd_super", scope: !1229, file: !1230, line: 26, baseType: !815, size: 64, offset: 128)
!1236 = !DIDerivedType(tag: DW_TAG_member, name: "bd_mutex", scope: !1229, file: !1230, line: 27, baseType: !344, size: 192, offset: 192)
!1237 = !DIDerivedType(tag: DW_TAG_member, name: "bd_claiming", scope: !1229, file: !1230, line: 28, baseType: !247, size: 64, offset: 384)
!1238 = !DIDerivedType(tag: DW_TAG_member, name: "bd_holder", scope: !1229, file: !1230, line: 29, baseType: !247, size: 64, offset: 448)
!1239 = !DIDerivedType(tag: DW_TAG_member, name: "bd_holders", scope: !1229, file: !1230, line: 30, baseType: !294, size: 32, offset: 512)
!1240 = !DIDerivedType(tag: DW_TAG_member, name: "bd_write_holder", scope: !1229, file: !1230, line: 31, baseType: !339, size: 8, offset: 544)
!1241 = !DIDerivedType(tag: DW_TAG_member, name: "bd_holder_disks", scope: !1229, file: !1230, line: 33, baseType: !300, size: 128, offset: 576)
!1242 = !DIDerivedType(tag: DW_TAG_member, name: "bd_contains", scope: !1229, file: !1230, line: 35, baseType: !1228, size: 64, offset: 704)
!1243 = !DIDerivedType(tag: DW_TAG_member, name: "bd_partno", scope: !1229, file: !1230, line: 36, baseType: !266, size: 8, offset: 768)
!1244 = !DIDerivedType(tag: DW_TAG_member, name: "bd_part", scope: !1229, file: !1230, line: 37, baseType: !1245, size: 64, offset: 832)
!1245 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1246, size: 64)
!1246 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hd_struct", file: !1247, line: 53, size: 6592, elements: !1248)
!1247 = !DIFile(filename: "./include/linux/genhd.h", directory: "/home/lizy2001/genbc/linux")
!1248 = !{!1249, !1250, !1251, !1252, !1255, !1276, !1277, !1278, !1279, !1280, !1290}
!1249 = !DIDerivedType(tag: DW_TAG_member, name: "start_sect", scope: !1246, file: !1247, line: 54, baseType: !1095, size: 64)
!1250 = !DIDerivedType(tag: DW_TAG_member, name: "nr_sects", scope: !1246, file: !1247, line: 60, baseType: !1095, size: 64, offset: 64)
!1251 = !DIDerivedType(tag: DW_TAG_member, name: "stamp", scope: !1246, file: !1247, line: 64, baseType: !287, size: 64, offset: 128)
!1252 = !DIDerivedType(tag: DW_TAG_member, name: "dkstats", scope: !1246, file: !1247, line: 65, baseType: !1253, size: 64, offset: 192)
!1253 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1254, size: 64)
!1254 = !DICompositeType(tag: DW_TAG_structure_type, name: "disk_stats", file: !1247, line: 65, flags: DIFlagFwdDecl)
!1255 = !DIDerivedType(tag: DW_TAG_member, name: "ref", scope: !1246, file: !1247, line: 66, baseType: !1256, size: 128, offset: 256)
!1256 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "percpu_ref", file: !1257, line: 105, size: 128, elements: !1258)
!1257 = !DIFile(filename: "./include/linux/percpu-refcount.h", directory: "/home/lizy2001/genbc/linux")
!1258 = !{!1259, !1260}
!1259 = !DIDerivedType(tag: DW_TAG_member, name: "percpu_count_ptr", scope: !1256, file: !1257, line: 110, baseType: !287, size: 64)
!1260 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1256, file: !1257, line: 118, baseType: !1261, size: 64, offset: 64)
!1261 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1262, size: 64)
!1262 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "percpu_ref_data", file: !1257, line: 95, size: 448, elements: !1263)
!1263 = !{!1264, !1265, !1271, !1272, !1273, !1274, !1275}
!1264 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !1262, file: !1257, line: 96, baseType: !348, size: 64)
!1265 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !1262, file: !1257, line: 97, baseType: !1266, size: 64, offset: 64)
!1266 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1267, size: 64)
!1267 = !DIDerivedType(tag: DW_TAG_typedef, name: "percpu_ref_func_t", file: !1257, line: 60, baseType: !1268)
!1268 = !DISubroutineType(types: !1269)
!1269 = !{null, !1270}
!1270 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1256, size: 64)
!1271 = !DIDerivedType(tag: DW_TAG_member, name: "confirm_switch", scope: !1262, file: !1257, line: 98, baseType: !1266, size: 64, offset: 128)
!1272 = !DIDerivedType(tag: DW_TAG_member, name: "force_atomic", scope: !1262, file: !1257, line: 99, baseType: !339, size: 1, offset: 192, flags: DIFlagBitField, extraData: i64 192)
!1273 = !DIDerivedType(tag: DW_TAG_member, name: "allow_reinit", scope: !1262, file: !1257, line: 100, baseType: !339, size: 1, offset: 193, flags: DIFlagBitField, extraData: i64 192)
!1274 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !1262, file: !1257, line: 101, baseType: !593, size: 128, align: 64, offset: 256)
!1275 = !DIDerivedType(tag: DW_TAG_member, name: "ref", scope: !1262, file: !1257, line: 102, baseType: !1270, size: 64, offset: 384)
!1276 = !DIDerivedType(tag: DW_TAG_member, name: "__dev", scope: !1246, file: !1247, line: 68, baseType: !461, size: 5568, offset: 384)
!1277 = !DIDerivedType(tag: DW_TAG_member, name: "holder_dir", scope: !1246, file: !1247, line: 69, baseType: !472, size: 64, offset: 5952)
!1278 = !DIDerivedType(tag: DW_TAG_member, name: "policy", scope: !1246, file: !1247, line: 70, baseType: !294, size: 32, offset: 6016)
!1279 = !DIDerivedType(tag: DW_TAG_member, name: "partno", scope: !1246, file: !1247, line: 70, baseType: !294, size: 32, offset: 6048)
!1280 = !DIDerivedType(tag: DW_TAG_member, name: "info", scope: !1246, file: !1247, line: 71, baseType: !1281, size: 64, offset: 6080)
!1281 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1282, size: 64)
!1282 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "partition_meta_info", file: !1247, line: 48, size: 808, elements: !1283)
!1283 = !{!1284, !1288}
!1284 = !DIDerivedType(tag: DW_TAG_member, name: "uuid", scope: !1282, file: !1247, line: 49, baseType: !1285, size: 296)
!1285 = !DICompositeType(tag: DW_TAG_array_type, baseType: !257, size: 296, elements: !1286)
!1286 = !{!1287}
!1287 = !DISubrange(count: 37)
!1288 = !DIDerivedType(tag: DW_TAG_member, name: "volname", scope: !1282, file: !1247, line: 50, baseType: !1289, size: 512, offset: 296)
!1289 = !DICompositeType(tag: DW_TAG_array_type, baseType: !266, size: 512, elements: !510)
!1290 = !DIDerivedType(tag: DW_TAG_member, name: "rcu_work", scope: !1246, file: !1247, line: 75, baseType: !1291, size: 448, offset: 6144)
!1291 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rcu_work", file: !30, line: 124, size: 448, elements: !1292)
!1292 = !{!1293, !1294, !1295}
!1293 = !DIDerivedType(tag: DW_TAG_member, name: "work", scope: !1291, file: !30, line: 125, baseType: !401, size: 256)
!1294 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !1291, file: !30, line: 126, baseType: !593, size: 128, align: 64, offset: 256)
!1295 = !DIDerivedType(tag: DW_TAG_member, name: "wq", scope: !1291, file: !30, line: 129, baseType: !1296, size: 64, offset: 384)
!1296 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1297, size: 64)
!1297 = !DICompositeType(tag: DW_TAG_structure_type, name: "workqueue_struct", file: !30, line: 18, flags: DIFlagFwdDecl)
!1298 = !DIDerivedType(tag: DW_TAG_member, name: "bd_part_count", scope: !1229, file: !1230, line: 39, baseType: !7, size: 32, offset: 896)
!1299 = !DIDerivedType(tag: DW_TAG_member, name: "bd_size_lock", scope: !1229, file: !1230, line: 41, baseType: !358, offset: 928)
!1300 = !DIDerivedType(tag: DW_TAG_member, name: "bd_disk", scope: !1229, file: !1230, line: 42, baseType: !1301, size: 64, offset: 960)
!1301 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1302, size: 64)
!1302 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gendisk", file: !1247, line: 167, size: 8512, elements: !1303)
!1303 = !{!1304, !1305, !1306, !1307, !1311, !1312, !1313, !1324, !1325, !1508, !2054, !2055, !2056, !2057, !2058, !2059, !2062, !2063, !2066, !2067, !2068, !2071}
!1304 = !DIDerivedType(tag: DW_TAG_member, name: "major", scope: !1302, file: !1247, line: 171, baseType: !294, size: 32)
!1305 = !DIDerivedType(tag: DW_TAG_member, name: "first_minor", scope: !1302, file: !1247, line: 172, baseType: !294, size: 32, offset: 32)
!1306 = !DIDerivedType(tag: DW_TAG_member, name: "minors", scope: !1302, file: !1247, line: 173, baseType: !294, size: 32, offset: 64)
!1307 = !DIDerivedType(tag: DW_TAG_member, name: "disk_name", scope: !1302, file: !1247, line: 176, baseType: !1308, size: 256, offset: 96)
!1308 = !DICompositeType(tag: DW_TAG_array_type, baseType: !257, size: 256, elements: !1309)
!1309 = !{!1310}
!1310 = !DISubrange(count: 32)
!1311 = !DIDerivedType(tag: DW_TAG_member, name: "events", scope: !1302, file: !1247, line: 178, baseType: !392, size: 16, offset: 352)
!1312 = !DIDerivedType(tag: DW_TAG_member, name: "event_flags", scope: !1302, file: !1247, line: 179, baseType: !392, size: 16, offset: 368)
!1313 = !DIDerivedType(tag: DW_TAG_member, name: "part_tbl", scope: !1302, file: !1247, line: 186, baseType: !1314, size: 64, offset: 384)
!1314 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1315, size: 64)
!1315 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "disk_part_tbl", file: !1247, line: 149, size: 256, elements: !1316)
!1316 = !{!1317, !1318, !1319, !1320}
!1317 = !DIDerivedType(tag: DW_TAG_member, name: "callback_head", scope: !1315, file: !1247, line: 150, baseType: !593, size: 128, align: 64)
!1318 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !1315, file: !1247, line: 151, baseType: !294, size: 32, offset: 128)
!1319 = !DIDerivedType(tag: DW_TAG_member, name: "last_lookup", scope: !1315, file: !1247, line: 152, baseType: !1245, size: 64, offset: 192)
!1320 = !DIDerivedType(tag: DW_TAG_member, name: "part", scope: !1315, file: !1247, line: 153, baseType: !1321, offset: 256)
!1321 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1245, elements: !1322)
!1322 = !{!1323}
!1323 = !DISubrange(count: -1)
!1324 = !DIDerivedType(tag: DW_TAG_member, name: "part0", scope: !1302, file: !1247, line: 187, baseType: !1246, size: 6592, offset: 448)
!1325 = !DIDerivedType(tag: DW_TAG_member, name: "fops", scope: !1302, file: !1247, line: 189, baseType: !1326, size: 64, offset: 7040)
!1326 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1327, size: 64)
!1327 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1328)
!1328 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "block_device_operations", file: !90, line: 1844, size: 960, elements: !1329)
!1329 = !{!1330, !1432, !1437, !1441, !1445, !1449, !1450, !1454, !1458, !1462, !1468, !1472, !1498, !1503, !1504}
!1330 = !DIDerivedType(tag: DW_TAG_member, name: "submit_bio", scope: !1328, file: !90, line: 1845, baseType: !1331, size: 64)
!1331 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1332, size: 64)
!1332 = !DISubroutineType(types: !1333)
!1333 = !{!1334, !1335}
!1334 = !DIDerivedType(tag: DW_TAG_typedef, name: "blk_qc_t", file: !1230, line: 515, baseType: !7)
!1335 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1336, size: 64)
!1336 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bio", file: !1230, line: 203, size: 832, elements: !1337)
!1337 = !{!1338, !1339, !1340, !1341, !1342, !1343, !1344, !1346, !1347, !1348, !1356, !1361, !1362, !1387, !1388, !1389, !1390, !1391, !1431}
!1338 = !DIDerivedType(tag: DW_TAG_member, name: "bi_next", scope: !1336, file: !1230, line: 204, baseType: !1335, size: 64)
!1339 = !DIDerivedType(tag: DW_TAG_member, name: "bi_disk", scope: !1336, file: !1230, line: 205, baseType: !1301, size: 64, offset: 64)
!1340 = !DIDerivedType(tag: DW_TAG_member, name: "bi_opf", scope: !1336, file: !1230, line: 206, baseType: !7, size: 32, offset: 128)
!1341 = !DIDerivedType(tag: DW_TAG_member, name: "bi_flags", scope: !1336, file: !1230, line: 210, baseType: !392, size: 16, offset: 160)
!1342 = !DIDerivedType(tag: DW_TAG_member, name: "bi_ioprio", scope: !1336, file: !1230, line: 211, baseType: !392, size: 16, offset: 176)
!1343 = !DIDerivedType(tag: DW_TAG_member, name: "bi_write_hint", scope: !1336, file: !1230, line: 212, baseType: !392, size: 16, offset: 192)
!1344 = !DIDerivedType(tag: DW_TAG_member, name: "bi_status", scope: !1336, file: !1230, line: 213, baseType: !1345, size: 8, offset: 208)
!1345 = !DIDerivedType(tag: DW_TAG_typedef, name: "blk_status_t", file: !1230, line: 58, baseType: !266)
!1346 = !DIDerivedType(tag: DW_TAG_member, name: "bi_partno", scope: !1336, file: !1230, line: 214, baseType: !266, size: 8, offset: 216)
!1347 = !DIDerivedType(tag: DW_TAG_member, name: "__bi_remaining", scope: !1336, file: !1230, line: 215, baseType: !326, size: 32, offset: 224)
!1348 = !DIDerivedType(tag: DW_TAG_member, name: "bi_iter", scope: !1336, file: !1230, line: 217, baseType: !1349, size: 192, offset: 256)
!1349 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bvec_iter", file: !1350, line: 37, size: 192, elements: !1351)
!1350 = !DIFile(filename: "./include/linux/bvec.h", directory: "/home/lizy2001/genbc/linux")
!1351 = !{!1352, !1353, !1354, !1355}
!1352 = !DIDerivedType(tag: DW_TAG_member, name: "bi_sector", scope: !1349, file: !1350, line: 38, baseType: !1095, size: 64)
!1353 = !DIDerivedType(tag: DW_TAG_member, name: "bi_size", scope: !1349, file: !1350, line: 40, baseType: !7, size: 32, offset: 64)
!1354 = !DIDerivedType(tag: DW_TAG_member, name: "bi_idx", scope: !1349, file: !1350, line: 42, baseType: !7, size: 32, offset: 96)
!1355 = !DIDerivedType(tag: DW_TAG_member, name: "bi_bvec_done", scope: !1349, file: !1350, line: 44, baseType: !7, size: 32, offset: 128)
!1356 = !DIDerivedType(tag: DW_TAG_member, name: "bi_end_io", scope: !1336, file: !1230, line: 219, baseType: !1357, size: 64, offset: 448)
!1357 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1358, size: 64)
!1358 = !DIDerivedType(tag: DW_TAG_typedef, name: "bio_end_io_t", file: !1230, line: 19, baseType: !1359)
!1359 = !DISubroutineType(types: !1360)
!1360 = !{null, !1335}
!1361 = !DIDerivedType(tag: DW_TAG_member, name: "bi_private", scope: !1336, file: !1230, line: 221, baseType: !247, size: 64, offset: 512)
!1362 = !DIDerivedType(tag: DW_TAG_member, scope: !1336, file: !1230, line: 240, baseType: !1363, size: 64, offset: 576)
!1363 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1336, file: !1230, line: 240, size: 64, elements: !1364)
!1364 = !{!1365}
!1365 = !DIDerivedType(tag: DW_TAG_member, name: "bi_integrity", scope: !1363, file: !1230, line: 242, baseType: !1366, size: 64)
!1366 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1367, size: 64)
!1367 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bio_integrity_payload", file: !1368, line: 313, size: 832, elements: !1369)
!1368 = !DIFile(filename: "./include/linux/bio.h", directory: "/home/lizy2001/genbc/linux")
!1369 = !{!1370, !1371, !1372, !1373, !1374, !1375, !1376, !1377, !1378, !1385}
!1370 = !DIDerivedType(tag: DW_TAG_member, name: "bip_bio", scope: !1367, file: !1368, line: 314, baseType: !1335, size: 64)
!1371 = !DIDerivedType(tag: DW_TAG_member, name: "bip_iter", scope: !1367, file: !1368, line: 316, baseType: !1349, size: 192, offset: 64)
!1372 = !DIDerivedType(tag: DW_TAG_member, name: "bip_slab", scope: !1367, file: !1368, line: 318, baseType: !392, size: 16, offset: 256)
!1373 = !DIDerivedType(tag: DW_TAG_member, name: "bip_vcnt", scope: !1367, file: !1368, line: 319, baseType: !392, size: 16, offset: 272)
!1374 = !DIDerivedType(tag: DW_TAG_member, name: "bip_max_vcnt", scope: !1367, file: !1368, line: 320, baseType: !392, size: 16, offset: 288)
!1375 = !DIDerivedType(tag: DW_TAG_member, name: "bip_flags", scope: !1367, file: !1368, line: 321, baseType: !392, size: 16, offset: 304)
!1376 = !DIDerivedType(tag: DW_TAG_member, name: "bio_iter", scope: !1367, file: !1368, line: 323, baseType: !1349, size: 192, offset: 320)
!1377 = !DIDerivedType(tag: DW_TAG_member, name: "bip_work", scope: !1367, file: !1368, line: 325, baseType: !401, size: 256, offset: 512)
!1378 = !DIDerivedType(tag: DW_TAG_member, name: "bip_vec", scope: !1367, file: !1368, line: 327, baseType: !1379, size: 64, offset: 768)
!1379 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1380, size: 64)
!1380 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bio_vec", file: !1350, line: 31, size: 128, elements: !1381)
!1381 = !{!1382, !1383, !1384}
!1382 = !DIDerivedType(tag: DW_TAG_member, name: "bv_page", scope: !1380, file: !1350, line: 32, baseType: !990, size: 64)
!1383 = !DIDerivedType(tag: DW_TAG_member, name: "bv_len", scope: !1380, file: !1350, line: 33, baseType: !7, size: 32, offset: 64)
!1384 = !DIDerivedType(tag: DW_TAG_member, name: "bv_offset", scope: !1380, file: !1350, line: 34, baseType: !7, size: 32, offset: 96)
!1385 = !DIDerivedType(tag: DW_TAG_member, name: "bip_inline_vecs", scope: !1367, file: !1368, line: 328, baseType: !1386, offset: 832)
!1386 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1380, elements: !1322)
!1387 = !DIDerivedType(tag: DW_TAG_member, name: "bi_vcnt", scope: !1336, file: !1230, line: 246, baseType: !392, size: 16, offset: 640)
!1388 = !DIDerivedType(tag: DW_TAG_member, name: "bi_max_vecs", scope: !1336, file: !1230, line: 252, baseType: !392, size: 16, offset: 656)
!1389 = !DIDerivedType(tag: DW_TAG_member, name: "__bi_cnt", scope: !1336, file: !1230, line: 254, baseType: !326, size: 32, offset: 672)
!1390 = !DIDerivedType(tag: DW_TAG_member, name: "bi_io_vec", scope: !1336, file: !1230, line: 256, baseType: !1379, size: 64, offset: 704)
!1391 = !DIDerivedType(tag: DW_TAG_member, name: "bi_pool", scope: !1336, file: !1230, line: 258, baseType: !1392, size: 64, offset: 768)
!1392 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1393, size: 64)
!1393 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bio_set", file: !1368, line: 682, size: 2368, elements: !1394)
!1394 = !{!1395, !1398, !1399, !1420, !1421, !1422, !1423, !1424, !1429, !1430}
!1395 = !DIDerivedType(tag: DW_TAG_member, name: "bio_slab", scope: !1393, file: !1368, line: 683, baseType: !1396, size: 64)
!1396 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1397, size: 64)
!1397 = !DICompositeType(tag: DW_TAG_structure_type, name: "kmem_cache", file: !992, line: 117, flags: DIFlagFwdDecl)
!1398 = !DIDerivedType(tag: DW_TAG_member, name: "front_pad", scope: !1393, file: !1368, line: 684, baseType: !7, size: 32, offset: 64)
!1399 = !DIDerivedType(tag: DW_TAG_member, name: "bio_pool", scope: !1393, file: !1368, line: 686, baseType: !1400, size: 448, offset: 128)
!1400 = !DIDerivedType(tag: DW_TAG_typedef, name: "mempool_t", file: !1401, line: 26, baseType: !1402)
!1401 = !DIFile(filename: "./include/linux/mempool.h", directory: "/home/lizy2001/genbc/linux")
!1402 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mempool_s", file: !1401, line: 16, size: 448, elements: !1403)
!1403 = !{!1404, !1405, !1406, !1407, !1408, !1409, !1414, !1419}
!1404 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1402, file: !1401, line: 17, baseType: !358)
!1405 = !DIDerivedType(tag: DW_TAG_member, name: "min_nr", scope: !1402, file: !1401, line: 18, baseType: !294, size: 32)
!1406 = !DIDerivedType(tag: DW_TAG_member, name: "curr_nr", scope: !1402, file: !1401, line: 19, baseType: !294, size: 32, offset: 32)
!1407 = !DIDerivedType(tag: DW_TAG_member, name: "elements", scope: !1402, file: !1401, line: 20, baseType: !1086, size: 64, offset: 64)
!1408 = !DIDerivedType(tag: DW_TAG_member, name: "pool_data", scope: !1402, file: !1401, line: 22, baseType: !247, size: 64, offset: 128)
!1409 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !1402, file: !1401, line: 23, baseType: !1410, size: 64, offset: 192)
!1410 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1411, size: 64)
!1411 = !DIDerivedType(tag: DW_TAG_typedef, name: "mempool_alloc_t", file: !1401, line: 13, baseType: !1412)
!1412 = !DISubroutineType(types: !1413)
!1413 = !{!247, !248, !247}
!1414 = !DIDerivedType(tag: DW_TAG_member, name: "free", scope: !1402, file: !1401, line: 24, baseType: !1415, size: 64, offset: 256)
!1415 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1416, size: 64)
!1416 = !DIDerivedType(tag: DW_TAG_typedef, name: "mempool_free_t", file: !1401, line: 14, baseType: !1417)
!1417 = !DISubroutineType(types: !1418)
!1418 = !{null, !247, !247}
!1419 = !DIDerivedType(tag: DW_TAG_member, name: "wait", scope: !1402, file: !1401, line: 25, baseType: !375, size: 128, offset: 320)
!1420 = !DIDerivedType(tag: DW_TAG_member, name: "bvec_pool", scope: !1393, file: !1368, line: 687, baseType: !1400, size: 448, offset: 576)
!1421 = !DIDerivedType(tag: DW_TAG_member, name: "bio_integrity_pool", scope: !1393, file: !1368, line: 689, baseType: !1400, size: 448, offset: 1024)
!1422 = !DIDerivedType(tag: DW_TAG_member, name: "bvec_integrity_pool", scope: !1393, file: !1368, line: 690, baseType: !1400, size: 448, offset: 1472)
!1423 = !DIDerivedType(tag: DW_TAG_member, name: "rescue_lock", scope: !1393, file: !1368, line: 697, baseType: !358, offset: 1920)
!1424 = !DIDerivedType(tag: DW_TAG_member, name: "rescue_list", scope: !1393, file: !1368, line: 698, baseType: !1425, size: 128, offset: 1920)
!1425 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bio_list", file: !1368, line: 554, size: 128, elements: !1426)
!1426 = !{!1427, !1428}
!1427 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !1425, file: !1368, line: 555, baseType: !1335, size: 64)
!1428 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !1425, file: !1368, line: 556, baseType: !1335, size: 64, offset: 64)
!1429 = !DIDerivedType(tag: DW_TAG_member, name: "rescue_work", scope: !1393, file: !1368, line: 699, baseType: !401, size: 256, offset: 2048)
!1430 = !DIDerivedType(tag: DW_TAG_member, name: "rescue_workqueue", scope: !1393, file: !1368, line: 700, baseType: !1296, size: 64, offset: 2304)
!1431 = !DIDerivedType(tag: DW_TAG_member, name: "bi_inline_vecs", scope: !1336, file: !1230, line: 265, baseType: !1386, offset: 832)
!1432 = !DIDerivedType(tag: DW_TAG_member, name: "open", scope: !1328, file: !90, line: 1846, baseType: !1433, size: 64, offset: 64)
!1433 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1434, size: 64)
!1434 = !DISubroutineType(types: !1435)
!1435 = !{!294, !1228, !1436}
!1436 = !DIDerivedType(tag: DW_TAG_typedef, name: "fmode_t", file: !249, line: 150, baseType: !7)
!1437 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !1328, file: !90, line: 1847, baseType: !1438, size: 64, offset: 128)
!1438 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1439, size: 64)
!1439 = !DISubroutineType(types: !1440)
!1440 = !{null, !1301, !1436}
!1441 = !DIDerivedType(tag: DW_TAG_member, name: "rw_page", scope: !1328, file: !90, line: 1848, baseType: !1442, size: 64, offset: 192)
!1442 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1443, size: 64)
!1443 = !DISubroutineType(types: !1444)
!1444 = !{!294, !1228, !1095, !990, !7}
!1445 = !DIDerivedType(tag: DW_TAG_member, name: "ioctl", scope: !1328, file: !90, line: 1849, baseType: !1446, size: 64, offset: 256)
!1446 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1447, size: 64)
!1447 = !DISubroutineType(types: !1448)
!1448 = !{!294, !1228, !1436, !7, !287}
!1449 = !DIDerivedType(tag: DW_TAG_member, name: "compat_ioctl", scope: !1328, file: !90, line: 1850, baseType: !1446, size: 64, offset: 320)
!1450 = !DIDerivedType(tag: DW_TAG_member, name: "check_events", scope: !1328, file: !90, line: 1851, baseType: !1451, size: 64, offset: 384)
!1451 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1452, size: 64)
!1452 = !DISubroutineType(types: !1453)
!1453 = !{!7, !1301, !7}
!1454 = !DIDerivedType(tag: DW_TAG_member, name: "unlock_native_capacity", scope: !1328, file: !90, line: 1853, baseType: !1455, size: 64, offset: 448)
!1455 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1456, size: 64)
!1456 = !DISubroutineType(types: !1457)
!1457 = !{null, !1301}
!1458 = !DIDerivedType(tag: DW_TAG_member, name: "revalidate_disk", scope: !1328, file: !90, line: 1854, baseType: !1459, size: 64, offset: 512)
!1459 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1460, size: 64)
!1460 = !DISubroutineType(types: !1461)
!1461 = !{!294, !1301}
!1462 = !DIDerivedType(tag: DW_TAG_member, name: "getgeo", scope: !1328, file: !90, line: 1855, baseType: !1463, size: 64, offset: 576)
!1463 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1464, size: 64)
!1464 = !DISubroutineType(types: !1465)
!1465 = !{!294, !1228, !1466}
!1466 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1467, size: 64)
!1467 = !DICompositeType(tag: DW_TAG_structure_type, name: "hd_geometry", file: !157, line: 51, flags: DIFlagFwdDecl)
!1468 = !DIDerivedType(tag: DW_TAG_member, name: "swap_slot_free_notify", scope: !1328, file: !90, line: 1857, baseType: !1469, size: 64, offset: 640)
!1469 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1470, size: 64)
!1470 = !DISubroutineType(types: !1471)
!1471 = !{null, !1228, !287}
!1472 = !DIDerivedType(tag: DW_TAG_member, name: "report_zones", scope: !1328, file: !90, line: 1858, baseType: !1473, size: 64, offset: 704)
!1473 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1474, size: 64)
!1474 = !DISubroutineType(types: !1475)
!1475 = !{!294, !1301, !1095, !7, !1476, !247}
!1476 = !DIDerivedType(tag: DW_TAG_typedef, name: "report_zones_cb", file: !90, line: 354, baseType: !1477)
!1477 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1478, size: 64)
!1478 = !DISubroutineType(types: !1479)
!1479 = !{!294, !1480, !7, !247}
!1480 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1481, size: 64)
!1481 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "blk_zone", file: !1482, line: 106, size: 512, elements: !1483)
!1482 = !DIFile(filename: "./include/uapi/linux/blkzoned.h", directory: "/home/lizy2001/genbc/linux")
!1483 = !{!1484, !1485, !1486, !1487, !1488, !1489, !1490, !1491, !1493, !1494}
!1484 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !1481, file: !1482, line: 107, baseType: !285, size: 64)
!1485 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !1481, file: !1482, line: 108, baseType: !285, size: 64, offset: 64)
!1486 = !DIDerivedType(tag: DW_TAG_member, name: "wp", scope: !1481, file: !1482, line: 109, baseType: !285, size: 64, offset: 128)
!1487 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1481, file: !1482, line: 110, baseType: !267, size: 8, offset: 192)
!1488 = !DIDerivedType(tag: DW_TAG_member, name: "cond", scope: !1481, file: !1482, line: 111, baseType: !267, size: 8, offset: 200)
!1489 = !DIDerivedType(tag: DW_TAG_member, name: "non_seq", scope: !1481, file: !1482, line: 112, baseType: !267, size: 8, offset: 208)
!1490 = !DIDerivedType(tag: DW_TAG_member, name: "reset", scope: !1481, file: !1482, line: 113, baseType: !267, size: 8, offset: 216)
!1491 = !DIDerivedType(tag: DW_TAG_member, name: "resv", scope: !1481, file: !1482, line: 114, baseType: !1492, size: 32, offset: 224)
!1492 = !DICompositeType(tag: DW_TAG_array_type, baseType: !267, size: 32, elements: !258)
!1493 = !DIDerivedType(tag: DW_TAG_member, name: "capacity", scope: !1481, file: !1482, line: 115, baseType: !285, size: 64, offset: 256)
!1494 = !DIDerivedType(tag: DW_TAG_member, name: "reserved", scope: !1481, file: !1482, line: 116, baseType: !1495, size: 192, offset: 320)
!1495 = !DICompositeType(tag: DW_TAG_array_type, baseType: !267, size: 192, elements: !1496)
!1496 = !{!1497}
!1497 = !DISubrange(count: 24)
!1498 = !DIDerivedType(tag: DW_TAG_member, name: "devnode", scope: !1328, file: !90, line: 1860, baseType: !1499, size: 64, offset: 768)
!1499 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1500, size: 64)
!1500 = !DISubroutineType(types: !1501)
!1501 = !{!505, !1301, !1502}
!1502 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !545, size: 64)
!1503 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !1328, file: !90, line: 1861, baseType: !849, size: 64, offset: 832)
!1504 = !DIDerivedType(tag: DW_TAG_member, name: "pr_ops", scope: !1328, file: !90, line: 1862, baseType: !1505, size: 64, offset: 896)
!1505 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1506, size: 64)
!1506 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1507)
!1507 = !DICompositeType(tag: DW_TAG_structure_type, name: "pr_ops", file: !90, line: 41, flags: DIFlagFwdDecl)
!1508 = !DIDerivedType(tag: DW_TAG_member, name: "queue", scope: !1302, file: !1247, line: 190, baseType: !1509, size: 64, offset: 7104)
!1509 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1510, size: 64)
!1510 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "request_queue", file: !90, line: 399, size: 14464, elements: !1511)
!1511 = !{!1512, !1643, !1765, !1766, !1769, !1772, !1776, !1777, !1778, !1780, !1781, !1860, !1861, !1862, !1863, !1864, !1865, !1866, !1867, !1868, !1904, !1905, !1906, !1907, !1908, !1909, !1910, !1911, !1912, !1915, !1926, !1927, !1928, !1929, !1930, !1960, !1961, !1962, !1963, !1964, !1965, !1968, !1969, !1970, !1971, !1972, !1973, !1974, !1975, !1976, !2039, !2040, !2041, !2042, !2045, !2046, !2047, !2048, !2049, !2050}
!1512 = !DIDerivedType(tag: DW_TAG_member, name: "last_merge", scope: !1510, file: !90, line: 400, baseType: !1513, size: 64)
!1513 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1514, size: 64)
!1514 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "request", file: !90, line: 130, size: 2176, elements: !1515)
!1515 = !{!1516, !1517, !1520, !1523, !1524, !1526, !1527, !1528, !1529, !1530, !1531, !1532, !1533, !1538, !1545, !1595, !1596, !1597, !1598, !1599, !1600, !1601, !1602, !1603, !1604, !1605, !1606, !1607, !1608, !1641, !1642}
!1516 = !DIDerivedType(tag: DW_TAG_member, name: "q", scope: !1514, file: !90, line: 131, baseType: !1509, size: 64)
!1517 = !DIDerivedType(tag: DW_TAG_member, name: "mq_ctx", scope: !1514, file: !90, line: 132, baseType: !1518, size: 64, offset: 64)
!1518 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1519, size: 64)
!1519 = !DICompositeType(tag: DW_TAG_structure_type, name: "blk_mq_ctx", file: !90, line: 132, flags: DIFlagFwdDecl)
!1520 = !DIDerivedType(tag: DW_TAG_member, name: "mq_hctx", scope: !1514, file: !90, line: 133, baseType: !1521, size: 64, offset: 128)
!1521 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1522, size: 64)
!1522 = !DICompositeType(tag: DW_TAG_structure_type, name: "blk_mq_hw_ctx", file: !90, line: 133, flags: DIFlagFwdDecl)
!1523 = !DIDerivedType(tag: DW_TAG_member, name: "cmd_flags", scope: !1514, file: !90, line: 135, baseType: !7, size: 32, offset: 192)
!1524 = !DIDerivedType(tag: DW_TAG_member, name: "rq_flags", scope: !1514, file: !90, line: 136, baseType: !1525, size: 32, offset: 224)
!1525 = !DIDerivedType(tag: DW_TAG_typedef, name: "req_flags_t", file: !90, line: 66, baseType: !263)
!1526 = !DIDerivedType(tag: DW_TAG_member, name: "tag", scope: !1514, file: !90, line: 138, baseType: !294, size: 32, offset: 256)
!1527 = !DIDerivedType(tag: DW_TAG_member, name: "internal_tag", scope: !1514, file: !90, line: 139, baseType: !294, size: 32, offset: 288)
!1528 = !DIDerivedType(tag: DW_TAG_member, name: "__data_len", scope: !1514, file: !90, line: 142, baseType: !7, size: 32, offset: 320)
!1529 = !DIDerivedType(tag: DW_TAG_member, name: "__sector", scope: !1514, file: !90, line: 143, baseType: !1095, size: 64, offset: 384)
!1530 = !DIDerivedType(tag: DW_TAG_member, name: "bio", scope: !1514, file: !90, line: 145, baseType: !1335, size: 64, offset: 448)
!1531 = !DIDerivedType(tag: DW_TAG_member, name: "biotail", scope: !1514, file: !90, line: 146, baseType: !1335, size: 64, offset: 512)
!1532 = !DIDerivedType(tag: DW_TAG_member, name: "queuelist", scope: !1514, file: !90, line: 148, baseType: !300, size: 128, offset: 576)
!1533 = !DIDerivedType(tag: DW_TAG_member, scope: !1514, file: !90, line: 157, baseType: !1534, size: 128, offset: 704)
!1534 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1514, file: !90, line: 157, size: 128, elements: !1535)
!1535 = !{!1536, !1537}
!1536 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !1534, file: !90, line: 158, baseType: !858, size: 128)
!1537 = !DIDerivedType(tag: DW_TAG_member, name: "ipi_list", scope: !1534, file: !90, line: 159, baseType: !300, size: 128)
!1538 = !DIDerivedType(tag: DW_TAG_member, scope: !1514, file: !90, line: 167, baseType: !1539, size: 192, offset: 832)
!1539 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1514, file: !90, line: 167, size: 192, elements: !1540)
!1540 = !{!1541, !1542, !1543, !1544}
!1541 = !DIDerivedType(tag: DW_TAG_member, name: "rb_node", scope: !1539, file: !90, line: 168, baseType: !1025, size: 192, align: 64)
!1542 = !DIDerivedType(tag: DW_TAG_member, name: "special_vec", scope: !1539, file: !90, line: 169, baseType: !1380, size: 128)
!1543 = !DIDerivedType(tag: DW_TAG_member, name: "completion_data", scope: !1539, file: !90, line: 170, baseType: !247, size: 64)
!1544 = !DIDerivedType(tag: DW_TAG_member, name: "error_count", scope: !1539, file: !90, line: 171, baseType: !294, size: 32)
!1545 = !DIDerivedType(tag: DW_TAG_member, scope: !1514, file: !90, line: 180, baseType: !1546, size: 256, offset: 1024)
!1546 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1514, file: !90, line: 180, size: 256, elements: !1547)
!1547 = !{!1548, !1585}
!1548 = !DIDerivedType(tag: DW_TAG_member, name: "elv", scope: !1546, file: !90, line: 184, baseType: !1549, size: 192)
!1549 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1546, file: !90, line: 181, size: 192, elements: !1550)
!1550 = !{!1551, !1581}
!1551 = !DIDerivedType(tag: DW_TAG_member, name: "icq", scope: !1549, file: !90, line: 182, baseType: !1552, size: 64)
!1552 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1553, size: 64)
!1553 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "io_cq", file: !1554, line: 73, size: 448, elements: !1555)
!1554 = !DIFile(filename: "./include/linux/iocontext.h", directory: "/home/lizy2001/genbc/linux")
!1555 = !{!1556, !1557, !1570, !1575, !1580}
!1556 = !DIDerivedType(tag: DW_TAG_member, name: "q", scope: !1553, file: !1554, line: 74, baseType: !1509, size: 64)
!1557 = !DIDerivedType(tag: DW_TAG_member, name: "ioc", scope: !1553, file: !1554, line: 75, baseType: !1558, size: 64, offset: 64)
!1558 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1559, size: 64)
!1559 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "io_context", file: !1554, line: 99, size: 704, elements: !1560)
!1560 = !{!1561, !1562, !1563, !1564, !1565, !1566, !1567, !1568, !1569}
!1561 = !DIDerivedType(tag: DW_TAG_member, name: "refcount", scope: !1559, file: !1554, line: 100, baseType: !348, size: 64)
!1562 = !DIDerivedType(tag: DW_TAG_member, name: "active_ref", scope: !1559, file: !1554, line: 101, baseType: !326, size: 32, offset: 64)
!1563 = !DIDerivedType(tag: DW_TAG_member, name: "nr_tasks", scope: !1559, file: !1554, line: 102, baseType: !326, size: 32, offset: 96)
!1564 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1559, file: !1554, line: 105, baseType: !358, offset: 128)
!1565 = !DIDerivedType(tag: DW_TAG_member, name: "ioprio", scope: !1559, file: !1554, line: 107, baseType: !392, size: 16, offset: 128)
!1566 = !DIDerivedType(tag: DW_TAG_member, name: "icq_tree", scope: !1559, file: !1554, line: 109, baseType: !1008, size: 128, offset: 192)
!1567 = !DIDerivedType(tag: DW_TAG_member, name: "icq_hint", scope: !1559, file: !1554, line: 110, baseType: !1552, size: 64, offset: 320)
!1568 = !DIDerivedType(tag: DW_TAG_member, name: "icq_list", scope: !1559, file: !1554, line: 111, baseType: !854, size: 64, offset: 384)
!1569 = !DIDerivedType(tag: DW_TAG_member, name: "release_work", scope: !1559, file: !1554, line: 113, baseType: !401, size: 256, offset: 448)
!1570 = !DIDerivedType(tag: DW_TAG_member, scope: !1553, file: !1554, line: 83, baseType: !1571, size: 128, offset: 128)
!1571 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1553, file: !1554, line: 83, size: 128, elements: !1572)
!1572 = !{!1573, !1574}
!1573 = !DIDerivedType(tag: DW_TAG_member, name: "q_node", scope: !1571, file: !1554, line: 84, baseType: !300, size: 128)
!1574 = !DIDerivedType(tag: DW_TAG_member, name: "__rcu_icq_cache", scope: !1571, file: !1554, line: 85, baseType: !1396, size: 64)
!1575 = !DIDerivedType(tag: DW_TAG_member, scope: !1553, file: !1554, line: 87, baseType: !1576, size: 128, offset: 256)
!1576 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1553, file: !1554, line: 87, size: 128, elements: !1577)
!1577 = !{!1578, !1579}
!1578 = !DIDerivedType(tag: DW_TAG_member, name: "ioc_node", scope: !1576, file: !1554, line: 88, baseType: !858, size: 128)
!1579 = !DIDerivedType(tag: DW_TAG_member, name: "__rcu_head", scope: !1576, file: !1554, line: 89, baseType: !593, size: 128, align: 64)
!1580 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1553, file: !1554, line: 92, baseType: !7, size: 32, offset: 384)
!1581 = !DIDerivedType(tag: DW_TAG_member, name: "priv", scope: !1549, file: !90, line: 183, baseType: !1582, size: 128, offset: 64)
!1582 = !DICompositeType(tag: DW_TAG_array_type, baseType: !247, size: 128, elements: !1583)
!1583 = !{!1584}
!1584 = !DISubrange(count: 2)
!1585 = !DIDerivedType(tag: DW_TAG_member, name: "flush", scope: !1546, file: !90, line: 190, baseType: !1586, size: 256)
!1586 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1546, file: !90, line: 186, size: 256, elements: !1587)
!1587 = !{!1588, !1589, !1590}
!1588 = !DIDerivedType(tag: DW_TAG_member, name: "seq", scope: !1586, file: !90, line: 187, baseType: !7, size: 32)
!1589 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !1586, file: !90, line: 188, baseType: !300, size: 128, offset: 64)
!1590 = !DIDerivedType(tag: DW_TAG_member, name: "saved_end_io", scope: !1586, file: !90, line: 189, baseType: !1591, size: 64, offset: 192)
!1591 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1592, size: 64)
!1592 = !DIDerivedType(tag: DW_TAG_typedef, name: "rq_end_io_fn", file: !90, line: 62, baseType: !1593)
!1593 = !DISubroutineType(types: !1594)
!1594 = !{null, !1513, !1345}
!1595 = !DIDerivedType(tag: DW_TAG_member, name: "rq_disk", scope: !1514, file: !90, line: 193, baseType: !1301, size: 64, offset: 1280)
!1596 = !DIDerivedType(tag: DW_TAG_member, name: "part", scope: !1514, file: !90, line: 194, baseType: !1245, size: 64, offset: 1344)
!1597 = !DIDerivedType(tag: DW_TAG_member, name: "start_time_ns", scope: !1514, file: !90, line: 200, baseType: !284, size: 64, offset: 1408)
!1598 = !DIDerivedType(tag: DW_TAG_member, name: "io_start_time_ns", scope: !1514, file: !90, line: 202, baseType: !284, size: 64, offset: 1472)
!1599 = !DIDerivedType(tag: DW_TAG_member, name: "stats_sectors", scope: !1514, file: !90, line: 212, baseType: !392, size: 16, offset: 1536)
!1600 = !DIDerivedType(tag: DW_TAG_member, name: "nr_phys_segments", scope: !1514, file: !90, line: 218, baseType: !392, size: 16, offset: 1552)
!1601 = !DIDerivedType(tag: DW_TAG_member, name: "nr_integrity_segments", scope: !1514, file: !90, line: 221, baseType: !392, size: 16, offset: 1568)
!1602 = !DIDerivedType(tag: DW_TAG_member, name: "write_hint", scope: !1514, file: !90, line: 229, baseType: !392, size: 16, offset: 1584)
!1603 = !DIDerivedType(tag: DW_TAG_member, name: "ioprio", scope: !1514, file: !90, line: 230, baseType: !392, size: 16, offset: 1600)
!1604 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1514, file: !90, line: 232, baseType: !89, size: 32, offset: 1632)
!1605 = !DIDerivedType(tag: DW_TAG_member, name: "ref", scope: !1514, file: !90, line: 233, baseType: !322, size: 32, offset: 1664)
!1606 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !1514, file: !90, line: 235, baseType: !7, size: 32, offset: 1696)
!1607 = !DIDerivedType(tag: DW_TAG_member, name: "deadline", scope: !1514, file: !90, line: 236, baseType: !287, size: 64, offset: 1728)
!1608 = !DIDerivedType(tag: DW_TAG_member, scope: !1514, file: !90, line: 238, baseType: !1609, size: 256, offset: 1792)
!1609 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1514, file: !90, line: 238, size: 256, elements: !1610)
!1610 = !{!1611, !1640}
!1611 = !DIDerivedType(tag: DW_TAG_member, name: "csd", scope: !1609, file: !90, line: 239, baseType: !1612, size: 256)
!1612 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__call_single_data", file: !1613, line: 23, size: 256, elements: !1614)
!1613 = !DIFile(filename: "./include/linux/smp.h", directory: "/home/lizy2001/genbc/linux")
!1614 = !{!1615, !1637, !1639}
!1615 = !DIDerivedType(tag: DW_TAG_member, scope: !1612, file: !1613, line: 24, baseType: !1616, size: 128)
!1616 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1612, file: !1613, line: 24, size: 128, elements: !1617)
!1617 = !{!1618, !1630}
!1618 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !1616, file: !1613, line: 25, baseType: !1619, size: 128)
!1619 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__call_single_node", file: !1620, line: 58, size: 128, elements: !1621)
!1620 = !DIFile(filename: "./include/linux/smp_types.h", directory: "/home/lizy2001/genbc/linux")
!1621 = !{!1622, !1623, !1628, !1629}
!1622 = !DIDerivedType(tag: DW_TAG_member, name: "llist", scope: !1619, file: !1620, line: 59, baseType: !587, size: 64)
!1623 = !DIDerivedType(tag: DW_TAG_member, scope: !1619, file: !1620, line: 60, baseType: !1624, size: 32, offset: 64)
!1624 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1619, file: !1620, line: 60, size: 32, elements: !1625)
!1625 = !{!1626, !1627}
!1626 = !DIDerivedType(tag: DW_TAG_member, name: "u_flags", scope: !1624, file: !1620, line: 61, baseType: !7, size: 32)
!1627 = !DIDerivedType(tag: DW_TAG_member, name: "a_flags", scope: !1624, file: !1620, line: 62, baseType: !326, size: 32)
!1628 = !DIDerivedType(tag: DW_TAG_member, name: "src", scope: !1619, file: !1620, line: 65, baseType: !1124, size: 16, offset: 96)
!1629 = !DIDerivedType(tag: DW_TAG_member, name: "dst", scope: !1619, file: !1620, line: 65, baseType: !1124, size: 16, offset: 112)
!1630 = !DIDerivedType(tag: DW_TAG_member, scope: !1616, file: !1613, line: 26, baseType: !1631, size: 128)
!1631 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1616, file: !1613, line: 26, size: 128, elements: !1632)
!1632 = !{!1633, !1634, !1635, !1636}
!1633 = !DIDerivedType(tag: DW_TAG_member, name: "llist", scope: !1631, file: !1613, line: 27, baseType: !587, size: 64)
!1634 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1631, file: !1613, line: 28, baseType: !7, size: 32, offset: 64)
!1635 = !DIDerivedType(tag: DW_TAG_member, name: "src", scope: !1631, file: !1613, line: 30, baseType: !1124, size: 16, offset: 96)
!1636 = !DIDerivedType(tag: DW_TAG_member, name: "dst", scope: !1631, file: !1613, line: 30, baseType: !1124, size: 16, offset: 112)
!1637 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !1612, file: !1613, line: 34, baseType: !1638, size: 64, offset: 128)
!1638 = !DIDerivedType(tag: DW_TAG_typedef, name: "smp_call_func_t", file: !1613, line: 17, baseType: !688)
!1639 = !DIDerivedType(tag: DW_TAG_member, name: "info", scope: !1612, file: !1613, line: 35, baseType: !247, size: 64, offset: 192)
!1640 = !DIDerivedType(tag: DW_TAG_member, name: "fifo_time", scope: !1609, file: !90, line: 240, baseType: !284, size: 64)
!1641 = !DIDerivedType(tag: DW_TAG_member, name: "end_io", scope: !1514, file: !90, line: 246, baseType: !1591, size: 64, offset: 2048)
!1642 = !DIDerivedType(tag: DW_TAG_member, name: "end_io_data", scope: !1514, file: !90, line: 247, baseType: !247, size: 64, offset: 2112)
!1643 = !DIDerivedType(tag: DW_TAG_member, name: "elevator", scope: !1510, file: !90, line: 401, baseType: !1644, size: 64, offset: 64)
!1644 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1645, size: 64)
!1645 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "elevator_queue", file: !96, line: 101, size: 4992, elements: !1646)
!1646 = !{!1647, !1759, !1760, !1761, !1762, !1763}
!1647 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1645, file: !96, line: 103, baseType: !1648, size: 64)
!1648 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1649, size: 64)
!1649 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "elevator_type", file: !96, line: 66, size: 2240, elements: !1650)
!1650 = !{!1651, !1652, !1734, !1735, !1736, !1749, !1750, !1751, !1753, !1754, !1758}
!1651 = !DIDerivedType(tag: DW_TAG_member, name: "icq_cache", scope: !1649, file: !96, line: 69, baseType: !1396, size: 64)
!1652 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !1649, file: !96, line: 72, baseType: !1653, size: 1408, offset: 64)
!1653 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "elevator_mq_ops", file: !96, line: 29, size: 1408, elements: !1654)
!1654 = !{!1655, !1659, !1663, !1667, !1671, !1675, !1679, !1683, !1688, !1692, !1696, !1702, !1706, !1707, !1711, !1715, !1719, !1723, !1724, !1728, !1729, !1733}
!1655 = !DIDerivedType(tag: DW_TAG_member, name: "init_sched", scope: !1653, file: !96, line: 30, baseType: !1656, size: 64)
!1656 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1657, size: 64)
!1657 = !DISubroutineType(types: !1658)
!1658 = !{!294, !1509, !1648}
!1659 = !DIDerivedType(tag: DW_TAG_member, name: "exit_sched", scope: !1653, file: !96, line: 31, baseType: !1660, size: 64, offset: 64)
!1660 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1661, size: 64)
!1661 = !DISubroutineType(types: !1662)
!1662 = !{null, !1644}
!1663 = !DIDerivedType(tag: DW_TAG_member, name: "init_hctx", scope: !1653, file: !96, line: 32, baseType: !1664, size: 64, offset: 128)
!1664 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1665, size: 64)
!1665 = !DISubroutineType(types: !1666)
!1666 = !{!294, !1521, !7}
!1667 = !DIDerivedType(tag: DW_TAG_member, name: "exit_hctx", scope: !1653, file: !96, line: 33, baseType: !1668, size: 64, offset: 192)
!1668 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1669, size: 64)
!1669 = !DISubroutineType(types: !1670)
!1670 = !{null, !1521, !7}
!1671 = !DIDerivedType(tag: DW_TAG_member, name: "depth_updated", scope: !1653, file: !96, line: 34, baseType: !1672, size: 64, offset: 256)
!1672 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1673, size: 64)
!1673 = !DISubroutineType(types: !1674)
!1674 = !{null, !1521}
!1675 = !DIDerivedType(tag: DW_TAG_member, name: "allow_merge", scope: !1653, file: !96, line: 36, baseType: !1676, size: 64, offset: 320)
!1676 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1677, size: 64)
!1677 = !DISubroutineType(types: !1678)
!1678 = !{!339, !1509, !1513, !1335}
!1679 = !DIDerivedType(tag: DW_TAG_member, name: "bio_merge", scope: !1653, file: !96, line: 37, baseType: !1680, size: 64, offset: 384)
!1680 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1681, size: 64)
!1681 = !DISubroutineType(types: !1682)
!1682 = !{!339, !1521, !1335, !7}
!1683 = !DIDerivedType(tag: DW_TAG_member, name: "request_merge", scope: !1653, file: !96, line: 38, baseType: !1684, size: 64, offset: 448)
!1684 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1685, size: 64)
!1685 = !DISubroutineType(types: !1686)
!1686 = !{!294, !1509, !1687, !1335}
!1687 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1513, size: 64)
!1688 = !DIDerivedType(tag: DW_TAG_member, name: "request_merged", scope: !1653, file: !96, line: 39, baseType: !1689, size: 64, offset: 512)
!1689 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1690, size: 64)
!1690 = !DISubroutineType(types: !1691)
!1691 = !{null, !1509, !1513, !95}
!1692 = !DIDerivedType(tag: DW_TAG_member, name: "requests_merged", scope: !1653, file: !96, line: 40, baseType: !1693, size: 64, offset: 576)
!1693 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1694, size: 64)
!1694 = !DISubroutineType(types: !1695)
!1695 = !{null, !1509, !1513, !1513}
!1696 = !DIDerivedType(tag: DW_TAG_member, name: "limit_depth", scope: !1653, file: !96, line: 41, baseType: !1697, size: 64, offset: 640)
!1697 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1698, size: 64)
!1698 = !DISubroutineType(types: !1699)
!1699 = !{null, !7, !1700}
!1700 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1701, size: 64)
!1701 = !DICompositeType(tag: DW_TAG_structure_type, name: "blk_mq_alloc_data", file: !96, line: 26, flags: DIFlagFwdDecl)
!1702 = !DIDerivedType(tag: DW_TAG_member, name: "prepare_request", scope: !1653, file: !96, line: 42, baseType: !1703, size: 64, offset: 704)
!1703 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1704, size: 64)
!1704 = !DISubroutineType(types: !1705)
!1705 = !{null, !1513}
!1706 = !DIDerivedType(tag: DW_TAG_member, name: "finish_request", scope: !1653, file: !96, line: 43, baseType: !1703, size: 64, offset: 768)
!1707 = !DIDerivedType(tag: DW_TAG_member, name: "insert_requests", scope: !1653, file: !96, line: 44, baseType: !1708, size: 64, offset: 832)
!1708 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1709, size: 64)
!1709 = !DISubroutineType(types: !1710)
!1710 = !{null, !1521, !299, !339}
!1711 = !DIDerivedType(tag: DW_TAG_member, name: "dispatch_request", scope: !1653, file: !96, line: 45, baseType: !1712, size: 64, offset: 896)
!1712 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1713, size: 64)
!1713 = !DISubroutineType(types: !1714)
!1714 = !{!1513, !1521}
!1715 = !DIDerivedType(tag: DW_TAG_member, name: "has_work", scope: !1653, file: !96, line: 46, baseType: !1716, size: 64, offset: 960)
!1716 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1717, size: 64)
!1717 = !DISubroutineType(types: !1718)
!1718 = !{!339, !1521}
!1719 = !DIDerivedType(tag: DW_TAG_member, name: "completed_request", scope: !1653, file: !96, line: 47, baseType: !1720, size: 64, offset: 1024)
!1720 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1721, size: 64)
!1721 = !DISubroutineType(types: !1722)
!1722 = !{null, !1513, !284}
!1723 = !DIDerivedType(tag: DW_TAG_member, name: "requeue_request", scope: !1653, file: !96, line: 48, baseType: !1703, size: 64, offset: 1088)
!1724 = !DIDerivedType(tag: DW_TAG_member, name: "former_request", scope: !1653, file: !96, line: 49, baseType: !1725, size: 64, offset: 1152)
!1725 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1726, size: 64)
!1726 = !DISubroutineType(types: !1727)
!1727 = !{!1513, !1509, !1513}
!1728 = !DIDerivedType(tag: DW_TAG_member, name: "next_request", scope: !1653, file: !96, line: 50, baseType: !1725, size: 64, offset: 1216)
!1729 = !DIDerivedType(tag: DW_TAG_member, name: "init_icq", scope: !1653, file: !96, line: 51, baseType: !1730, size: 64, offset: 1280)
!1730 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1731, size: 64)
!1731 = !DISubroutineType(types: !1732)
!1732 = !{null, !1552}
!1733 = !DIDerivedType(tag: DW_TAG_member, name: "exit_icq", scope: !1653, file: !96, line: 52, baseType: !1730, size: 64, offset: 1344)
!1734 = !DIDerivedType(tag: DW_TAG_member, name: "icq_size", scope: !1649, file: !96, line: 74, baseType: !550, size: 64, offset: 1472)
!1735 = !DIDerivedType(tag: DW_TAG_member, name: "icq_align", scope: !1649, file: !96, line: 75, baseType: !550, size: 64, offset: 1536)
!1736 = !DIDerivedType(tag: DW_TAG_member, name: "elevator_attrs", scope: !1649, file: !96, line: 76, baseType: !1737, size: 64, offset: 1600)
!1737 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1738, size: 64)
!1738 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "elv_fs_entry", file: !96, line: 57, size: 256, elements: !1739)
!1739 = !{!1740, !1741, !1745}
!1740 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !1738, file: !96, line: 58, baseType: !541, size: 128)
!1741 = !DIDerivedType(tag: DW_TAG_member, name: "show", scope: !1738, file: !96, line: 59, baseType: !1742, size: 64, offset: 128)
!1742 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1743, size: 64)
!1743 = !DISubroutineType(types: !1744)
!1744 = !{!536, !1644, !505}
!1745 = !DIDerivedType(tag: DW_TAG_member, name: "store", scope: !1738, file: !96, line: 60, baseType: !1746, size: 64, offset: 192)
!1746 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1747, size: 64)
!1747 = !DISubroutineType(types: !1748)
!1748 = !{!536, !1644, !468, !550}
!1749 = !DIDerivedType(tag: DW_TAG_member, name: "elevator_name", scope: !1649, file: !96, line: 77, baseType: !468, size: 64, offset: 1664)
!1750 = !DIDerivedType(tag: DW_TAG_member, name: "elevator_alias", scope: !1649, file: !96, line: 78, baseType: !468, size: 64, offset: 1728)
!1751 = !DIDerivedType(tag: DW_TAG_member, name: "elevator_features", scope: !1649, file: !96, line: 79, baseType: !1752, size: 32, offset: 1792)
!1752 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7)
!1753 = !DIDerivedType(tag: DW_TAG_member, name: "elevator_owner", scope: !1649, file: !96, line: 80, baseType: !849, size: 64, offset: 1856)
!1754 = !DIDerivedType(tag: DW_TAG_member, name: "icq_cache_name", scope: !1649, file: !96, line: 87, baseType: !1755, size: 176, offset: 1920)
!1755 = !DICompositeType(tag: DW_TAG_array_type, baseType: !257, size: 176, elements: !1756)
!1756 = !{!1757}
!1757 = !DISubrange(count: 22)
!1758 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !1649, file: !96, line: 88, baseType: !300, size: 128, offset: 2112)
!1759 = !DIDerivedType(tag: DW_TAG_member, name: "elevator_data", scope: !1645, file: !96, line: 104, baseType: !247, size: 64, offset: 64)
!1760 = !DIDerivedType(tag: DW_TAG_member, name: "kobj", scope: !1645, file: !96, line: 105, baseType: !464, size: 512, offset: 128)
!1761 = !DIDerivedType(tag: DW_TAG_member, name: "sysfs_lock", scope: !1645, file: !96, line: 106, baseType: !344, size: 192, offset: 640)
!1762 = !DIDerivedType(tag: DW_TAG_member, name: "registered", scope: !1645, file: !96, line: 107, baseType: !7, size: 1, offset: 832, flags: DIFlagBitField, extraData: i64 832)
!1763 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !1645, file: !96, line: 108, baseType: !1764, size: 4096, offset: 896)
!1764 = !DICompositeType(tag: DW_TAG_array_type, baseType: !854, size: 4096, elements: !510)
!1765 = !DIDerivedType(tag: DW_TAG_member, name: "q_usage_counter", scope: !1510, file: !90, line: 403, baseType: !1256, size: 128, offset: 128)
!1766 = !DIDerivedType(tag: DW_TAG_member, name: "stats", scope: !1510, file: !90, line: 405, baseType: !1767, size: 64, offset: 256)
!1767 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1768, size: 64)
!1768 = !DICompositeType(tag: DW_TAG_structure_type, name: "blk_queue_stats", file: !90, line: 43, flags: DIFlagFwdDecl)
!1769 = !DIDerivedType(tag: DW_TAG_member, name: "rq_qos", scope: !1510, file: !90, line: 406, baseType: !1770, size: 64, offset: 320)
!1770 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1771, size: 64)
!1771 = !DICompositeType(tag: DW_TAG_structure_type, name: "rq_qos", file: !90, line: 42, flags: DIFlagFwdDecl)
!1772 = !DIDerivedType(tag: DW_TAG_member, name: "mq_ops", scope: !1510, file: !90, line: 408, baseType: !1773, size: 64, offset: 384)
!1773 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1774, size: 64)
!1774 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1775)
!1775 = !DICompositeType(tag: DW_TAG_structure_type, name: "blk_mq_ops", file: !90, line: 408, flags: DIFlagFwdDecl)
!1776 = !DIDerivedType(tag: DW_TAG_member, name: "queue_ctx", scope: !1510, file: !90, line: 411, baseType: !1518, size: 64, offset: 448)
!1777 = !DIDerivedType(tag: DW_TAG_member, name: "queue_depth", scope: !1510, file: !90, line: 413, baseType: !7, size: 32, offset: 512)
!1778 = !DIDerivedType(tag: DW_TAG_member, name: "queue_hw_ctx", scope: !1510, file: !90, line: 416, baseType: !1779, size: 64, offset: 576)
!1779 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1521, size: 64)
!1780 = !DIDerivedType(tag: DW_TAG_member, name: "nr_hw_queues", scope: !1510, file: !90, line: 417, baseType: !7, size: 32, offset: 640)
!1781 = !DIDerivedType(tag: DW_TAG_member, name: "backing_dev_info", scope: !1510, file: !90, line: 419, baseType: !1782, size: 64, offset: 704)
!1782 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1783, size: 64)
!1783 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "backing_dev_info", file: !103, line: 165, size: 4672, elements: !1784)
!1784 = !{!1785, !1786, !1787, !1788, !1789, !1790, !1791, !1792, !1793, !1794, !1795, !1796, !1852, !1853, !1854, !1856, !1858, !1859}
!1785 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1783, file: !103, line: 166, baseType: !284, size: 64)
!1786 = !DIDerivedType(tag: DW_TAG_member, name: "rb_node", scope: !1783, file: !103, line: 167, baseType: !1025, size: 192, align: 64, offset: 64)
!1787 = !DIDerivedType(tag: DW_TAG_member, name: "bdi_list", scope: !1783, file: !103, line: 168, baseType: !300, size: 128, offset: 256)
!1788 = !DIDerivedType(tag: DW_TAG_member, name: "ra_pages", scope: !1783, file: !103, line: 169, baseType: !287, size: 64, offset: 384)
!1789 = !DIDerivedType(tag: DW_TAG_member, name: "io_pages", scope: !1783, file: !103, line: 170, baseType: !287, size: 64, offset: 448)
!1790 = !DIDerivedType(tag: DW_TAG_member, name: "refcnt", scope: !1783, file: !103, line: 172, baseType: !318, size: 32, offset: 512)
!1791 = !DIDerivedType(tag: DW_TAG_member, name: "capabilities", scope: !1783, file: !103, line: 173, baseType: !7, size: 32, offset: 544)
!1792 = !DIDerivedType(tag: DW_TAG_member, name: "min_ratio", scope: !1783, file: !103, line: 174, baseType: !7, size: 32, offset: 576)
!1793 = !DIDerivedType(tag: DW_TAG_member, name: "max_ratio", scope: !1783, file: !103, line: 175, baseType: !7, size: 32, offset: 608)
!1794 = !DIDerivedType(tag: DW_TAG_member, name: "max_prop_frac", scope: !1783, file: !103, line: 175, baseType: !7, size: 32, offset: 640)
!1795 = !DIDerivedType(tag: DW_TAG_member, name: "tot_write_bandwidth", scope: !1783, file: !103, line: 181, baseType: !348, size: 64, offset: 704)
!1796 = !DIDerivedType(tag: DW_TAG_member, name: "wb", scope: !1783, file: !103, line: 183, baseType: !1797, size: 2688, offset: 768)
!1797 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bdi_writeback", file: !103, line: 107, size: 2688, elements: !1798)
!1798 = !{!1799, !1800, !1801, !1802, !1803, !1804, !1805, !1806, !1807, !1813, !1814, !1815, !1816, !1817, !1818, !1819, !1820, !1821, !1828, !1829, !1830, !1831, !1832, !1850, !1851}
!1799 = !DIDerivedType(tag: DW_TAG_member, name: "bdi", scope: !1797, file: !103, line: 108, baseType: !1782, size: 64)
!1800 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1797, file: !103, line: 110, baseType: !287, size: 64, offset: 64)
!1801 = !DIDerivedType(tag: DW_TAG_member, name: "last_old_flush", scope: !1797, file: !103, line: 111, baseType: !287, size: 64, offset: 128)
!1802 = !DIDerivedType(tag: DW_TAG_member, name: "b_dirty", scope: !1797, file: !103, line: 113, baseType: !300, size: 128, offset: 192)
!1803 = !DIDerivedType(tag: DW_TAG_member, name: "b_io", scope: !1797, file: !103, line: 114, baseType: !300, size: 128, offset: 320)
!1804 = !DIDerivedType(tag: DW_TAG_member, name: "b_more_io", scope: !1797, file: !103, line: 115, baseType: !300, size: 128, offset: 448)
!1805 = !DIDerivedType(tag: DW_TAG_member, name: "b_dirty_time", scope: !1797, file: !103, line: 116, baseType: !300, size: 128, offset: 576)
!1806 = !DIDerivedType(tag: DW_TAG_member, name: "list_lock", scope: !1797, file: !103, line: 117, baseType: !358, offset: 704)
!1807 = !DIDerivedType(tag: DW_TAG_member, name: "stat", scope: !1797, file: !103, line: 119, baseType: !1808, size: 256, offset: 704)
!1808 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1809, size: 256, elements: !258)
!1809 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "percpu_counter", file: !1810, line: 97, size: 64, elements: !1811)
!1810 = !DIFile(filename: "./include/linux/percpu_counter.h", directory: "/home/lizy2001/genbc/linux")
!1811 = !{!1812}
!1812 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !1809, file: !1810, line: 98, baseType: !354, size: 64)
!1813 = !DIDerivedType(tag: DW_TAG_member, name: "congested", scope: !1797, file: !103, line: 121, baseType: !287, size: 64, offset: 960)
!1814 = !DIDerivedType(tag: DW_TAG_member, name: "bw_time_stamp", scope: !1797, file: !103, line: 123, baseType: !287, size: 64, offset: 1024)
!1815 = !DIDerivedType(tag: DW_TAG_member, name: "dirtied_stamp", scope: !1797, file: !103, line: 124, baseType: !287, size: 64, offset: 1088)
!1816 = !DIDerivedType(tag: DW_TAG_member, name: "written_stamp", scope: !1797, file: !103, line: 125, baseType: !287, size: 64, offset: 1152)
!1817 = !DIDerivedType(tag: DW_TAG_member, name: "write_bandwidth", scope: !1797, file: !103, line: 126, baseType: !287, size: 64, offset: 1216)
!1818 = !DIDerivedType(tag: DW_TAG_member, name: "avg_write_bandwidth", scope: !1797, file: !103, line: 127, baseType: !287, size: 64, offset: 1280)
!1819 = !DIDerivedType(tag: DW_TAG_member, name: "dirty_ratelimit", scope: !1797, file: !103, line: 135, baseType: !287, size: 64, offset: 1344)
!1820 = !DIDerivedType(tag: DW_TAG_member, name: "balanced_dirty_ratelimit", scope: !1797, file: !103, line: 136, baseType: !287, size: 64, offset: 1408)
!1821 = !DIDerivedType(tag: DW_TAG_member, name: "completions", scope: !1797, file: !103, line: 138, baseType: !1822, size: 128, offset: 1472)
!1822 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fprop_local_percpu", file: !1823, line: 76, size: 128, elements: !1824)
!1823 = !DIFile(filename: "./include/linux/flex_proportions.h", directory: "/home/lizy2001/genbc/linux")
!1824 = !{!1825, !1826, !1827}
!1825 = !DIDerivedType(tag: DW_TAG_member, name: "events", scope: !1822, file: !1823, line: 78, baseType: !1809, size: 64)
!1826 = !DIDerivedType(tag: DW_TAG_member, name: "period", scope: !1822, file: !1823, line: 80, baseType: !7, size: 32, offset: 64)
!1827 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1822, file: !1823, line: 81, baseType: !1038, offset: 96)
!1828 = !DIDerivedType(tag: DW_TAG_member, name: "dirty_exceeded", scope: !1797, file: !103, line: 139, baseType: !294, size: 32, offset: 1600)
!1829 = !DIDerivedType(tag: DW_TAG_member, name: "start_all_reason", scope: !1797, file: !103, line: 140, baseType: !102, size: 32, offset: 1632)
!1830 = !DIDerivedType(tag: DW_TAG_member, name: "work_lock", scope: !1797, file: !103, line: 142, baseType: !358, offset: 1664)
!1831 = !DIDerivedType(tag: DW_TAG_member, name: "work_list", scope: !1797, file: !103, line: 143, baseType: !300, size: 128, offset: 1664)
!1832 = !DIDerivedType(tag: DW_TAG_member, name: "dwork", scope: !1797, file: !103, line: 144, baseType: !1833, size: 704, offset: 1792)
!1833 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "delayed_work", file: !30, line: 115, size: 704, elements: !1834)
!1834 = !{!1835, !1836, !1848, !1849}
!1835 = !DIDerivedType(tag: DW_TAG_member, name: "work", scope: !1833, file: !30, line: 116, baseType: !401, size: 256)
!1836 = !DIDerivedType(tag: DW_TAG_member, name: "timer", scope: !1833, file: !30, line: 117, baseType: !1837, size: 320, offset: 256)
!1837 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timer_list", file: !1838, line: 11, size: 320, elements: !1839)
!1838 = !DIFile(filename: "./include/linux/timer.h", directory: "/home/lizy2001/genbc/linux")
!1839 = !{!1840, !1841, !1842, !1847}
!1840 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !1837, file: !1838, line: 16, baseType: !858, size: 128)
!1841 = !DIDerivedType(tag: DW_TAG_member, name: "expires", scope: !1837, file: !1838, line: 17, baseType: !287, size: 64, offset: 128)
!1842 = !DIDerivedType(tag: DW_TAG_member, name: "function", scope: !1837, file: !1838, line: 18, baseType: !1843, size: 64, offset: 192)
!1843 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1844, size: 64)
!1844 = !DISubroutineType(types: !1845)
!1845 = !{null, !1846}
!1846 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1837, size: 64)
!1847 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1837, file: !1838, line: 19, baseType: !261, size: 32, offset: 256)
!1848 = !DIDerivedType(tag: DW_TAG_member, name: "wq", scope: !1833, file: !30, line: 120, baseType: !1296, size: 64, offset: 576)
!1849 = !DIDerivedType(tag: DW_TAG_member, name: "cpu", scope: !1833, file: !30, line: 121, baseType: !294, size: 32, offset: 640)
!1850 = !DIDerivedType(tag: DW_TAG_member, name: "dirty_sleep", scope: !1797, file: !103, line: 146, baseType: !287, size: 64, offset: 2496)
!1851 = !DIDerivedType(tag: DW_TAG_member, name: "bdi_node", scope: !1797, file: !103, line: 148, baseType: !300, size: 128, offset: 2560)
!1852 = !DIDerivedType(tag: DW_TAG_member, name: "wb_list", scope: !1783, file: !103, line: 184, baseType: !300, size: 128, offset: 3456)
!1853 = !DIDerivedType(tag: DW_TAG_member, name: "wb_waitq", scope: !1783, file: !103, line: 190, baseType: !375, size: 128, offset: 3584)
!1854 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1783, file: !103, line: 192, baseType: !1855, size: 64, offset: 3712)
!1855 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !461, size: 64)
!1856 = !DIDerivedType(tag: DW_TAG_member, name: "dev_name", scope: !1783, file: !103, line: 193, baseType: !1857, size: 512, offset: 3776)
!1857 = !DICompositeType(tag: DW_TAG_array_type, baseType: !257, size: 512, elements: !510)
!1858 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !1783, file: !103, line: 194, baseType: !1855, size: 64, offset: 4288)
!1859 = !DIDerivedType(tag: DW_TAG_member, name: "laptop_mode_wb_timer", scope: !1783, file: !103, line: 196, baseType: !1837, size: 320, offset: 4352)
!1860 = !DIDerivedType(tag: DW_TAG_member, name: "queuedata", scope: !1510, file: !90, line: 425, baseType: !247, size: 64, offset: 768)
!1861 = !DIDerivedType(tag: DW_TAG_member, name: "queue_flags", scope: !1510, file: !90, line: 430, baseType: !287, size: 64, offset: 832)
!1862 = !DIDerivedType(tag: DW_TAG_member, name: "pm_only", scope: !1510, file: !90, line: 436, baseType: !326, size: 32, offset: 896)
!1863 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1510, file: !90, line: 442, baseType: !294, size: 32, offset: 928)
!1864 = !DIDerivedType(tag: DW_TAG_member, name: "bounce_gfp", scope: !1510, file: !90, line: 447, baseType: !248, size: 32, offset: 960)
!1865 = !DIDerivedType(tag: DW_TAG_member, name: "queue_lock", scope: !1510, file: !90, line: 449, baseType: !358, offset: 992)
!1866 = !DIDerivedType(tag: DW_TAG_member, name: "kobj", scope: !1510, file: !90, line: 454, baseType: !464, size: 512, offset: 1024)
!1867 = !DIDerivedType(tag: DW_TAG_member, name: "mq_kobj", scope: !1510, file: !90, line: 459, baseType: !472, size: 64, offset: 1536)
!1868 = !DIDerivedType(tag: DW_TAG_member, name: "integrity", scope: !1510, file: !90, line: 462, baseType: !1869, size: 128, offset: 1600)
!1869 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "blk_integrity", file: !1247, line: 159, size: 128, elements: !1870)
!1870 = !{!1871, !1900, !1901, !1902, !1903}
!1871 = !DIDerivedType(tag: DW_TAG_member, name: "profile", scope: !1869, file: !1247, line: 160, baseType: !1872, size: 64)
!1872 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1873, size: 64)
!1873 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1874)
!1874 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "blk_integrity_profile", file: !90, line: 1664, size: 320, elements: !1875)
!1875 = !{!1876, !1890, !1891, !1894, !1899}
!1876 = !DIDerivedType(tag: DW_TAG_member, name: "generate_fn", scope: !1874, file: !90, line: 1665, baseType: !1877, size: 64)
!1877 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1878, size: 64)
!1878 = !DIDerivedType(tag: DW_TAG_typedef, name: "integrity_processing_fn", file: !90, line: 1660, baseType: !1879)
!1879 = !DISubroutineType(types: !1880)
!1880 = !{!1345, !1881}
!1881 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1882, size: 64)
!1882 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "blk_integrity_iter", file: !90, line: 1651, size: 320, elements: !1883)
!1883 = !{!1884, !1885, !1886, !1887, !1888, !1889}
!1884 = !DIDerivedType(tag: DW_TAG_member, name: "prot_buf", scope: !1882, file: !90, line: 1652, baseType: !247, size: 64)
!1885 = !DIDerivedType(tag: DW_TAG_member, name: "data_buf", scope: !1882, file: !90, line: 1653, baseType: !247, size: 64, offset: 64)
!1886 = !DIDerivedType(tag: DW_TAG_member, name: "seed", scope: !1882, file: !90, line: 1654, baseType: !1095, size: 64, offset: 128)
!1887 = !DIDerivedType(tag: DW_TAG_member, name: "data_size", scope: !1882, file: !90, line: 1655, baseType: !7, size: 32, offset: 192)
!1888 = !DIDerivedType(tag: DW_TAG_member, name: "interval", scope: !1882, file: !90, line: 1656, baseType: !392, size: 16, offset: 224)
!1889 = !DIDerivedType(tag: DW_TAG_member, name: "disk_name", scope: !1882, file: !90, line: 1657, baseType: !468, size: 64, offset: 256)
!1890 = !DIDerivedType(tag: DW_TAG_member, name: "verify_fn", scope: !1874, file: !90, line: 1666, baseType: !1877, size: 64, offset: 64)
!1891 = !DIDerivedType(tag: DW_TAG_member, name: "prepare_fn", scope: !1874, file: !90, line: 1667, baseType: !1892, size: 64, offset: 128)
!1892 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1893, size: 64)
!1893 = !DIDerivedType(tag: DW_TAG_typedef, name: "integrity_prepare_fn", file: !90, line: 1661, baseType: !1704)
!1894 = !DIDerivedType(tag: DW_TAG_member, name: "complete_fn", scope: !1874, file: !90, line: 1668, baseType: !1895, size: 64, offset: 192)
!1895 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1896, size: 64)
!1896 = !DIDerivedType(tag: DW_TAG_typedef, name: "integrity_complete_fn", file: !90, line: 1662, baseType: !1897)
!1897 = !DISubroutineType(types: !1898)
!1898 = !{null, !1513, !7}
!1899 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1874, file: !90, line: 1669, baseType: !468, size: 64, offset: 256)
!1900 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1869, file: !1247, line: 161, baseType: !268, size: 8, offset: 64)
!1901 = !DIDerivedType(tag: DW_TAG_member, name: "tuple_size", scope: !1869, file: !1247, line: 162, baseType: !268, size: 8, offset: 72)
!1902 = !DIDerivedType(tag: DW_TAG_member, name: "interval_exp", scope: !1869, file: !1247, line: 163, baseType: !268, size: 8, offset: 80)
!1903 = !DIDerivedType(tag: DW_TAG_member, name: "tag_size", scope: !1869, file: !1247, line: 164, baseType: !268, size: 8, offset: 88)
!1904 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1510, file: !90, line: 466, baseType: !1855, size: 64, offset: 1728)
!1905 = !DIDerivedType(tag: DW_TAG_member, name: "rpm_status", scope: !1510, file: !90, line: 467, baseType: !114, size: 32, offset: 1792)
!1906 = !DIDerivedType(tag: DW_TAG_member, name: "nr_pending", scope: !1510, file: !90, line: 468, baseType: !7, size: 32, offset: 1824)
!1907 = !DIDerivedType(tag: DW_TAG_member, name: "nr_requests", scope: !1510, file: !90, line: 474, baseType: !287, size: 64, offset: 1856)
!1908 = !DIDerivedType(tag: DW_TAG_member, name: "dma_pad_mask", scope: !1510, file: !90, line: 476, baseType: !7, size: 32, offset: 1920)
!1909 = !DIDerivedType(tag: DW_TAG_member, name: "dma_alignment", scope: !1510, file: !90, line: 477, baseType: !7, size: 32, offset: 1952)
!1910 = !DIDerivedType(tag: DW_TAG_member, name: "rq_timeout", scope: !1510, file: !90, line: 484, baseType: !7, size: 32, offset: 1984)
!1911 = !DIDerivedType(tag: DW_TAG_member, name: "poll_nsec", scope: !1510, file: !90, line: 485, baseType: !294, size: 32, offset: 2016)
!1912 = !DIDerivedType(tag: DW_TAG_member, name: "poll_cb", scope: !1510, file: !90, line: 487, baseType: !1913, size: 64, offset: 2048)
!1913 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1914, size: 64)
!1914 = !DICompositeType(tag: DW_TAG_structure_type, name: "blk_stat_callback", file: !90, line: 44, flags: DIFlagFwdDecl)
!1915 = !DIDerivedType(tag: DW_TAG_member, name: "poll_stat", scope: !1510, file: !90, line: 488, baseType: !1916, size: 5120, offset: 2112)
!1916 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1917, size: 5120, elements: !1924)
!1917 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "blk_rq_stat", file: !1230, line: 540, size: 320, elements: !1918)
!1918 = !{!1919, !1920, !1921, !1922, !1923}
!1919 = !DIDerivedType(tag: DW_TAG_member, name: "mean", scope: !1917, file: !1230, line: 541, baseType: !284, size: 64)
!1920 = !DIDerivedType(tag: DW_TAG_member, name: "min", scope: !1917, file: !1230, line: 542, baseType: !284, size: 64, offset: 64)
!1921 = !DIDerivedType(tag: DW_TAG_member, name: "max", scope: !1917, file: !1230, line: 543, baseType: !284, size: 64, offset: 128)
!1922 = !DIDerivedType(tag: DW_TAG_member, name: "nr_samples", scope: !1917, file: !1230, line: 544, baseType: !261, size: 32, offset: 192)
!1923 = !DIDerivedType(tag: DW_TAG_member, name: "batch", scope: !1917, file: !1230, line: 545, baseType: !284, size: 64, offset: 256)
!1924 = !{!1925}
!1925 = !DISubrange(count: 16)
!1926 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !1510, file: !90, line: 490, baseType: !1837, size: 320, offset: 7232)
!1927 = !DIDerivedType(tag: DW_TAG_member, name: "timeout_work", scope: !1510, file: !90, line: 491, baseType: !401, size: 256, offset: 7552)
!1928 = !DIDerivedType(tag: DW_TAG_member, name: "nr_active_requests_shared_sbitmap", scope: !1510, file: !90, line: 493, baseType: !326, size: 32, offset: 7808)
!1929 = !DIDerivedType(tag: DW_TAG_member, name: "icq_list", scope: !1510, file: !90, line: 495, baseType: !300, size: 128, offset: 7872)
!1930 = !DIDerivedType(tag: DW_TAG_member, name: "limits", scope: !1510, file: !90, line: 502, baseType: !1931, size: 896, offset: 8000)
!1931 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "queue_limits", file: !90, line: 321, size: 896, elements: !1932)
!1932 = !{!1933, !1934, !1935, !1936, !1937, !1938, !1939, !1940, !1941, !1942, !1943, !1944, !1945, !1946, !1947, !1948, !1949, !1950, !1951, !1952, !1953, !1954, !1955, !1956, !1957, !1958, !1959}
!1933 = !DIDerivedType(tag: DW_TAG_member, name: "bounce_pfn", scope: !1931, file: !90, line: 322, baseType: !287, size: 64)
!1934 = !DIDerivedType(tag: DW_TAG_member, name: "seg_boundary_mask", scope: !1931, file: !90, line: 323, baseType: !287, size: 64, offset: 64)
!1935 = !DIDerivedType(tag: DW_TAG_member, name: "virt_boundary_mask", scope: !1931, file: !90, line: 324, baseType: !287, size: 64, offset: 128)
!1936 = !DIDerivedType(tag: DW_TAG_member, name: "max_hw_sectors", scope: !1931, file: !90, line: 326, baseType: !7, size: 32, offset: 192)
!1937 = !DIDerivedType(tag: DW_TAG_member, name: "max_dev_sectors", scope: !1931, file: !90, line: 327, baseType: !7, size: 32, offset: 224)
!1938 = !DIDerivedType(tag: DW_TAG_member, name: "chunk_sectors", scope: !1931, file: !90, line: 328, baseType: !7, size: 32, offset: 256)
!1939 = !DIDerivedType(tag: DW_TAG_member, name: "max_sectors", scope: !1931, file: !90, line: 329, baseType: !7, size: 32, offset: 288)
!1940 = !DIDerivedType(tag: DW_TAG_member, name: "max_segment_size", scope: !1931, file: !90, line: 330, baseType: !7, size: 32, offset: 320)
!1941 = !DIDerivedType(tag: DW_TAG_member, name: "physical_block_size", scope: !1931, file: !90, line: 331, baseType: !7, size: 32, offset: 352)
!1942 = !DIDerivedType(tag: DW_TAG_member, name: "logical_block_size", scope: !1931, file: !90, line: 332, baseType: !7, size: 32, offset: 384)
!1943 = !DIDerivedType(tag: DW_TAG_member, name: "alignment_offset", scope: !1931, file: !90, line: 333, baseType: !7, size: 32, offset: 416)
!1944 = !DIDerivedType(tag: DW_TAG_member, name: "io_min", scope: !1931, file: !90, line: 334, baseType: !7, size: 32, offset: 448)
!1945 = !DIDerivedType(tag: DW_TAG_member, name: "io_opt", scope: !1931, file: !90, line: 335, baseType: !7, size: 32, offset: 480)
!1946 = !DIDerivedType(tag: DW_TAG_member, name: "max_discard_sectors", scope: !1931, file: !90, line: 336, baseType: !7, size: 32, offset: 512)
!1947 = !DIDerivedType(tag: DW_TAG_member, name: "max_hw_discard_sectors", scope: !1931, file: !90, line: 337, baseType: !7, size: 32, offset: 544)
!1948 = !DIDerivedType(tag: DW_TAG_member, name: "max_write_same_sectors", scope: !1931, file: !90, line: 338, baseType: !7, size: 32, offset: 576)
!1949 = !DIDerivedType(tag: DW_TAG_member, name: "max_write_zeroes_sectors", scope: !1931, file: !90, line: 339, baseType: !7, size: 32, offset: 608)
!1950 = !DIDerivedType(tag: DW_TAG_member, name: "max_zone_append_sectors", scope: !1931, file: !90, line: 340, baseType: !7, size: 32, offset: 640)
!1951 = !DIDerivedType(tag: DW_TAG_member, name: "discard_granularity", scope: !1931, file: !90, line: 341, baseType: !7, size: 32, offset: 672)
!1952 = !DIDerivedType(tag: DW_TAG_member, name: "discard_alignment", scope: !1931, file: !90, line: 342, baseType: !7, size: 32, offset: 704)
!1953 = !DIDerivedType(tag: DW_TAG_member, name: "max_segments", scope: !1931, file: !90, line: 344, baseType: !392, size: 16, offset: 736)
!1954 = !DIDerivedType(tag: DW_TAG_member, name: "max_integrity_segments", scope: !1931, file: !90, line: 345, baseType: !392, size: 16, offset: 752)
!1955 = !DIDerivedType(tag: DW_TAG_member, name: "max_discard_segments", scope: !1931, file: !90, line: 346, baseType: !392, size: 16, offset: 768)
!1956 = !DIDerivedType(tag: DW_TAG_member, name: "misaligned", scope: !1931, file: !90, line: 348, baseType: !268, size: 8, offset: 784)
!1957 = !DIDerivedType(tag: DW_TAG_member, name: "discard_misaligned", scope: !1931, file: !90, line: 349, baseType: !268, size: 8, offset: 792)
!1958 = !DIDerivedType(tag: DW_TAG_member, name: "raid_partial_stripes_expensive", scope: !1931, file: !90, line: 350, baseType: !268, size: 8, offset: 800)
!1959 = !DIDerivedType(tag: DW_TAG_member, name: "zoned", scope: !1931, file: !90, line: 351, baseType: !121, size: 32, offset: 832)
!1960 = !DIDerivedType(tag: DW_TAG_member, name: "required_elevator_features", scope: !1510, file: !90, line: 504, baseType: !7, size: 32, offset: 8896)
!1961 = !DIDerivedType(tag: DW_TAG_member, name: "sg_timeout", scope: !1510, file: !90, line: 534, baseType: !7, size: 32, offset: 8928)
!1962 = !DIDerivedType(tag: DW_TAG_member, name: "sg_reserved_size", scope: !1510, file: !90, line: 535, baseType: !7, size: 32, offset: 8960)
!1963 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !1510, file: !90, line: 536, baseType: !294, size: 32, offset: 8992)
!1964 = !DIDerivedType(tag: DW_TAG_member, name: "debugfs_mutex", scope: !1510, file: !90, line: 537, baseType: !344, size: 192, offset: 9024)
!1965 = !DIDerivedType(tag: DW_TAG_member, name: "fq", scope: !1510, file: !90, line: 544, baseType: !1966, size: 64, offset: 9216)
!1966 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1967, size: 64)
!1967 = !DICompositeType(tag: DW_TAG_structure_type, name: "blk_flush_queue", file: !90, line: 40, flags: DIFlagFwdDecl)
!1968 = !DIDerivedType(tag: DW_TAG_member, name: "requeue_list", scope: !1510, file: !90, line: 546, baseType: !300, size: 128, offset: 9280)
!1969 = !DIDerivedType(tag: DW_TAG_member, name: "requeue_lock", scope: !1510, file: !90, line: 547, baseType: !358, offset: 9408)
!1970 = !DIDerivedType(tag: DW_TAG_member, name: "requeue_work", scope: !1510, file: !90, line: 548, baseType: !1833, size: 704, offset: 9408)
!1971 = !DIDerivedType(tag: DW_TAG_member, name: "sysfs_lock", scope: !1510, file: !90, line: 550, baseType: !344, size: 192, offset: 10112)
!1972 = !DIDerivedType(tag: DW_TAG_member, name: "sysfs_dir_lock", scope: !1510, file: !90, line: 551, baseType: !344, size: 192, offset: 10304)
!1973 = !DIDerivedType(tag: DW_TAG_member, name: "unused_hctx_list", scope: !1510, file: !90, line: 557, baseType: !300, size: 128, offset: 10496)
!1974 = !DIDerivedType(tag: DW_TAG_member, name: "unused_hctx_lock", scope: !1510, file: !90, line: 558, baseType: !358, offset: 10624)
!1975 = !DIDerivedType(tag: DW_TAG_member, name: "mq_freeze_depth", scope: !1510, file: !90, line: 560, baseType: !294, size: 32, offset: 10624)
!1976 = !DIDerivedType(tag: DW_TAG_member, name: "bsg_dev", scope: !1510, file: !90, line: 563, baseType: !1977, size: 256, offset: 10688)
!1977 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bsg_class_device", file: !1978, line: 18, size: 256, elements: !1979)
!1978 = !DIFile(filename: "./include/linux/bsg.h", directory: "/home/lizy2001/genbc/linux")
!1979 = !{!1980, !1981, !1982, !1983}
!1980 = !DIDerivedType(tag: DW_TAG_member, name: "class_dev", scope: !1977, file: !1978, line: 19, baseType: !1855, size: 64)
!1981 = !DIDerivedType(tag: DW_TAG_member, name: "minor", scope: !1977, file: !1978, line: 20, baseType: !294, size: 32, offset: 64)
!1982 = !DIDerivedType(tag: DW_TAG_member, name: "queue", scope: !1977, file: !1978, line: 21, baseType: !1509, size: 64, offset: 128)
!1983 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !1977, file: !1978, line: 22, baseType: !1984, size: 64, offset: 192)
!1984 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1985, size: 64)
!1985 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1986)
!1986 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bsg_ops", file: !1978, line: 10, size: 256, elements: !1987)
!1987 = !{!1988, !2030, !2034, !2038}
!1988 = !DIDerivedType(tag: DW_TAG_member, name: "check_proto", scope: !1986, file: !1978, line: 11, baseType: !1989, size: 64)
!1989 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1990, size: 64)
!1990 = !DISubroutineType(types: !1991)
!1991 = !{!294, !1992}
!1992 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1993, size: 64)
!1993 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sg_io_v4", file: !1994, line: 22, size: 1280, elements: !1995)
!1994 = !DIFile(filename: "./include/uapi/linux/bsg.h", directory: "/home/lizy2001/genbc/linux")
!1995 = !{!1996, !1998, !1999, !2000, !2001, !2002, !2003, !2004, !2005, !2006, !2007, !2008, !2009, !2010, !2011, !2012, !2013, !2014, !2015, !2016, !2017, !2018, !2019, !2020, !2021, !2022, !2023, !2024, !2025, !2026, !2027, !2028, !2029}
!1996 = !DIDerivedType(tag: DW_TAG_member, name: "guard", scope: !1993, file: !1994, line: 23, baseType: !1997, size: 32)
!1997 = !DIDerivedType(tag: DW_TAG_typedef, name: "__s32", file: !264, line: 26, baseType: !294)
!1998 = !DIDerivedType(tag: DW_TAG_member, name: "protocol", scope: !1993, file: !1994, line: 24, baseType: !263, size: 32, offset: 32)
!1999 = !DIDerivedType(tag: DW_TAG_member, name: "subprotocol", scope: !1993, file: !1994, line: 25, baseType: !263, size: 32, offset: 64)
!2000 = !DIDerivedType(tag: DW_TAG_member, name: "request_len", scope: !1993, file: !1994, line: 28, baseType: !263, size: 32, offset: 96)
!2001 = !DIDerivedType(tag: DW_TAG_member, name: "request", scope: !1993, file: !1994, line: 29, baseType: !285, size: 64, offset: 128)
!2002 = !DIDerivedType(tag: DW_TAG_member, name: "request_tag", scope: !1993, file: !1994, line: 30, baseType: !285, size: 64, offset: 192)
!2003 = !DIDerivedType(tag: DW_TAG_member, name: "request_attr", scope: !1993, file: !1994, line: 31, baseType: !263, size: 32, offset: 256)
!2004 = !DIDerivedType(tag: DW_TAG_member, name: "request_priority", scope: !1993, file: !1994, line: 32, baseType: !263, size: 32, offset: 288)
!2005 = !DIDerivedType(tag: DW_TAG_member, name: "request_extra", scope: !1993, file: !1994, line: 33, baseType: !263, size: 32, offset: 320)
!2006 = !DIDerivedType(tag: DW_TAG_member, name: "max_response_len", scope: !1993, file: !1994, line: 34, baseType: !263, size: 32, offset: 352)
!2007 = !DIDerivedType(tag: DW_TAG_member, name: "response", scope: !1993, file: !1994, line: 35, baseType: !285, size: 64, offset: 384)
!2008 = !DIDerivedType(tag: DW_TAG_member, name: "dout_iovec_count", scope: !1993, file: !1994, line: 38, baseType: !263, size: 32, offset: 448)
!2009 = !DIDerivedType(tag: DW_TAG_member, name: "dout_xfer_len", scope: !1993, file: !1994, line: 40, baseType: !263, size: 32, offset: 480)
!2010 = !DIDerivedType(tag: DW_TAG_member, name: "din_iovec_count", scope: !1993, file: !1994, line: 41, baseType: !263, size: 32, offset: 512)
!2011 = !DIDerivedType(tag: DW_TAG_member, name: "din_xfer_len", scope: !1993, file: !1994, line: 42, baseType: !263, size: 32, offset: 544)
!2012 = !DIDerivedType(tag: DW_TAG_member, name: "dout_xferp", scope: !1993, file: !1994, line: 43, baseType: !285, size: 64, offset: 576)
!2013 = !DIDerivedType(tag: DW_TAG_member, name: "din_xferp", scope: !1993, file: !1994, line: 44, baseType: !285, size: 64, offset: 640)
!2014 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !1993, file: !1994, line: 46, baseType: !263, size: 32, offset: 704)
!2015 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1993, file: !1994, line: 47, baseType: !263, size: 32, offset: 736)
!2016 = !DIDerivedType(tag: DW_TAG_member, name: "usr_ptr", scope: !1993, file: !1994, line: 48, baseType: !285, size: 64, offset: 768)
!2017 = !DIDerivedType(tag: DW_TAG_member, name: "spare_in", scope: !1993, file: !1994, line: 49, baseType: !263, size: 32, offset: 832)
!2018 = !DIDerivedType(tag: DW_TAG_member, name: "driver_status", scope: !1993, file: !1994, line: 51, baseType: !263, size: 32, offset: 864)
!2019 = !DIDerivedType(tag: DW_TAG_member, name: "transport_status", scope: !1993, file: !1994, line: 52, baseType: !263, size: 32, offset: 896)
!2020 = !DIDerivedType(tag: DW_TAG_member, name: "device_status", scope: !1993, file: !1994, line: 53, baseType: !263, size: 32, offset: 928)
!2021 = !DIDerivedType(tag: DW_TAG_member, name: "retry_delay", scope: !1993, file: !1994, line: 54, baseType: !263, size: 32, offset: 960)
!2022 = !DIDerivedType(tag: DW_TAG_member, name: "info", scope: !1993, file: !1994, line: 55, baseType: !263, size: 32, offset: 992)
!2023 = !DIDerivedType(tag: DW_TAG_member, name: "duration", scope: !1993, file: !1994, line: 56, baseType: !263, size: 32, offset: 1024)
!2024 = !DIDerivedType(tag: DW_TAG_member, name: "response_len", scope: !1993, file: !1994, line: 57, baseType: !263, size: 32, offset: 1056)
!2025 = !DIDerivedType(tag: DW_TAG_member, name: "din_resid", scope: !1993, file: !1994, line: 58, baseType: !1997, size: 32, offset: 1088)
!2026 = !DIDerivedType(tag: DW_TAG_member, name: "dout_resid", scope: !1993, file: !1994, line: 59, baseType: !1997, size: 32, offset: 1120)
!2027 = !DIDerivedType(tag: DW_TAG_member, name: "generated_tag", scope: !1993, file: !1994, line: 60, baseType: !285, size: 64, offset: 1152)
!2028 = !DIDerivedType(tag: DW_TAG_member, name: "spare_out", scope: !1993, file: !1994, line: 61, baseType: !263, size: 32, offset: 1216)
!2029 = !DIDerivedType(tag: DW_TAG_member, name: "padding", scope: !1993, file: !1994, line: 63, baseType: !263, size: 32, offset: 1248)
!2030 = !DIDerivedType(tag: DW_TAG_member, name: "fill_hdr", scope: !1986, file: !1978, line: 12, baseType: !2031, size: 64, offset: 64)
!2031 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2032, size: 64)
!2032 = !DISubroutineType(types: !2033)
!2033 = !{!294, !1513, !1992, !1436}
!2034 = !DIDerivedType(tag: DW_TAG_member, name: "complete_rq", scope: !1986, file: !1978, line: 14, baseType: !2035, size: 64, offset: 128)
!2035 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2036, size: 64)
!2036 = !DISubroutineType(types: !2037)
!2037 = !{!294, !1513, !1992}
!2038 = !DIDerivedType(tag: DW_TAG_member, name: "free_rq", scope: !1986, file: !1978, line: 15, baseType: !1703, size: 64, offset: 192)
!2039 = !DIDerivedType(tag: DW_TAG_member, name: "callback_head", scope: !1510, file: !90, line: 570, baseType: !593, size: 128, align: 64, offset: 10944)
!2040 = !DIDerivedType(tag: DW_TAG_member, name: "mq_freeze_wq", scope: !1510, file: !90, line: 571, baseType: !375, size: 128, offset: 11072)
!2041 = !DIDerivedType(tag: DW_TAG_member, name: "mq_freeze_lock", scope: !1510, file: !90, line: 576, baseType: !344, size: 192, offset: 11200)
!2042 = !DIDerivedType(tag: DW_TAG_member, name: "tag_set", scope: !1510, file: !90, line: 578, baseType: !2043, size: 64, offset: 11392)
!2043 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2044, size: 64)
!2044 = !DICompositeType(tag: DW_TAG_structure_type, name: "blk_mq_tag_set", file: !90, line: 578, flags: DIFlagFwdDecl)
!2045 = !DIDerivedType(tag: DW_TAG_member, name: "tag_set_list", scope: !1510, file: !90, line: 579, baseType: !300, size: 128, offset: 11456)
!2046 = !DIDerivedType(tag: DW_TAG_member, name: "bio_split", scope: !1510, file: !90, line: 580, baseType: !1393, size: 2368, offset: 11584)
!2047 = !DIDerivedType(tag: DW_TAG_member, name: "debugfs_dir", scope: !1510, file: !90, line: 582, baseType: !610, size: 64, offset: 13952)
!2048 = !DIDerivedType(tag: DW_TAG_member, name: "mq_sysfs_init_done", scope: !1510, file: !90, line: 589, baseType: !339, size: 8, offset: 14016)
!2049 = !DIDerivedType(tag: DW_TAG_member, name: "cmd_size", scope: !1510, file: !90, line: 591, baseType: !550, size: 64, offset: 14080)
!2050 = !DIDerivedType(tag: DW_TAG_member, name: "write_hints", scope: !1510, file: !90, line: 594, baseType: !2051, size: 320, offset: 14144)
!2051 = !DICompositeType(tag: DW_TAG_array_type, baseType: !284, size: 320, elements: !2052)
!2052 = !{!2053}
!2053 = !DISubrange(count: 5)
!2054 = !DIDerivedType(tag: DW_TAG_member, name: "private_data", scope: !1302, file: !1247, line: 191, baseType: !247, size: 64, offset: 7168)
!2055 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1302, file: !1247, line: 193, baseType: !294, size: 32, offset: 7232)
!2056 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1302, file: !1247, line: 194, baseType: !287, size: 64, offset: 7296)
!2057 = !DIDerivedType(tag: DW_TAG_member, name: "lookup_sem", scope: !1302, file: !1247, line: 196, baseType: !1032, size: 256, offset: 7360)
!2058 = !DIDerivedType(tag: DW_TAG_member, name: "slave_dir", scope: !1302, file: !1247, line: 197, baseType: !472, size: 64, offset: 7616)
!2059 = !DIDerivedType(tag: DW_TAG_member, name: "random", scope: !1302, file: !1247, line: 199, baseType: !2060, size: 64, offset: 7680)
!2060 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2061, size: 64)
!2061 = !DICompositeType(tag: DW_TAG_structure_type, name: "timer_rand_state", file: !1247, line: 199, flags: DIFlagFwdDecl)
!2062 = !DIDerivedType(tag: DW_TAG_member, name: "sync_io", scope: !1302, file: !1247, line: 200, baseType: !326, size: 32, offset: 7744)
!2063 = !DIDerivedType(tag: DW_TAG_member, name: "ev", scope: !1302, file: !1247, line: 201, baseType: !2064, size: 64, offset: 7808)
!2064 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2065, size: 64)
!2065 = !DICompositeType(tag: DW_TAG_structure_type, name: "disk_events", file: !1247, line: 156, flags: DIFlagFwdDecl)
!2066 = !DIDerivedType(tag: DW_TAG_member, name: "integrity_kobj", scope: !1302, file: !1247, line: 203, baseType: !464, size: 512, offset: 7872)
!2067 = !DIDerivedType(tag: DW_TAG_member, name: "node_id", scope: !1302, file: !1247, line: 208, baseType: !294, size: 32, offset: 8384)
!2068 = !DIDerivedType(tag: DW_TAG_member, name: "bb", scope: !1302, file: !1247, line: 209, baseType: !2069, size: 64, offset: 8448)
!2069 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2070, size: 64)
!2070 = !DICompositeType(tag: DW_TAG_structure_type, name: "badblocks", file: !1247, line: 157, flags: DIFlagFwdDecl)
!2071 = !DIDerivedType(tag: DW_TAG_member, name: "lockdep_map", scope: !1302, file: !1247, line: 210, baseType: !2072, offset: 8512)
!2072 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lockdep_map", file: !865, line: 192, elements: !372)
!2073 = !DIDerivedType(tag: DW_TAG_member, name: "bd_bdi", scope: !1229, file: !1230, line: 43, baseType: !1782, size: 64, offset: 1024)
!2074 = !DIDerivedType(tag: DW_TAG_member, name: "bd_fsfreeze_count", scope: !1229, file: !1230, line: 46, baseType: !294, size: 32, offset: 1088)
!2075 = !DIDerivedType(tag: DW_TAG_member, name: "bd_fsfreeze_mutex", scope: !1229, file: !1230, line: 48, baseType: !344, size: 192, offset: 1152)
!2076 = !DIDerivedType(tag: DW_TAG_member, name: "swap_file", scope: !1182, file: !1183, line: 259, baseType: !580, size: 64, offset: 1152)
!2077 = !DIDerivedType(tag: DW_TAG_member, name: "old_block_size", scope: !1182, file: !1183, line: 260, baseType: !7, size: 32, offset: 1216)
!2078 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1182, file: !1183, line: 265, baseType: !358, offset: 1248)
!2079 = !DIDerivedType(tag: DW_TAG_member, name: "cont_lock", scope: !1182, file: !1183, line: 278, baseType: !358, offset: 1248)
!2080 = !DIDerivedType(tag: DW_TAG_member, name: "discard_work", scope: !1182, file: !1183, line: 282, baseType: !401, size: 256, offset: 1280)
!2081 = !DIDerivedType(tag: DW_TAG_member, name: "discard_clusters", scope: !1182, file: !1183, line: 283, baseType: !1208, size: 64, offset: 1536)
!2082 = !DIDerivedType(tag: DW_TAG_member, name: "avail_lists", scope: !1182, file: !1183, line: 284, baseType: !2083, offset: 1600)
!2083 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1189, elements: !1322)
!2084 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1095, size: 64)
!2085 = !DIDerivedType(tag: DW_TAG_member, name: "swap_deactivate", scope: !1046, file: !157, line: 415, baseType: !2086, size: 64, offset: 1344)
!2086 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2087, size: 64)
!2087 = !DISubroutineType(types: !2088)
!2088 = !{null, !580}
!2089 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1004, file: !157, line: 466, baseType: !287, size: 64, offset: 896)
!2090 = !DIDerivedType(tag: DW_TAG_member, name: "wb_err", scope: !1004, file: !157, line: 467, baseType: !2091, size: 32, offset: 960)
!2091 = !DIDerivedType(tag: DW_TAG_typedef, name: "errseq_t", file: !2092, line: 8, baseType: !261)
!2092 = !DIFile(filename: "./include/linux/errseq.h", directory: "/home/lizy2001/genbc/linux")
!2093 = !DIDerivedType(tag: DW_TAG_member, name: "private_lock", scope: !1004, file: !157, line: 468, baseType: !358, offset: 992)
!2094 = !DIDerivedType(tag: DW_TAG_member, name: "private_list", scope: !1004, file: !157, line: 469, baseType: !300, size: 128, offset: 1024)
!2095 = !DIDerivedType(tag: DW_TAG_member, name: "private_data", scope: !1004, file: !157, line: 470, baseType: !247, size: 64, offset: 1152)
!2096 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !999, file: !992, line: 87, baseType: !287, size: 64, offset: 192)
!2097 = !DIDerivedType(tag: DW_TAG_member, name: "private", scope: !999, file: !992, line: 94, baseType: !287, size: 64, offset: 256)
!2098 = !DIDerivedType(tag: DW_TAG_member, scope: !996, file: !992, line: 96, baseType: !2099, size: 64)
!2099 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !996, file: !992, line: 96, size: 64, elements: !2100)
!2100 = !{!2101}
!2101 = !DIDerivedType(tag: DW_TAG_member, name: "dma_addr", scope: !2099, file: !992, line: 101, baseType: !2102, size: 64)
!2102 = !DIDerivedType(tag: DW_TAG_typedef, name: "dma_addr_t", file: !249, line: 143, baseType: !284)
!2103 = !DIDerivedType(tag: DW_TAG_member, scope: !996, file: !992, line: 103, baseType: !2104, size: 320)
!2104 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !996, file: !992, line: 103, size: 320, elements: !2105)
!2105 = !{!2106, !2116, !2117, !2118}
!2106 = !DIDerivedType(tag: DW_TAG_member, scope: !2104, file: !992, line: 104, baseType: !2107, size: 128)
!2107 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2104, file: !992, line: 104, size: 128, elements: !2108)
!2108 = !{!2109, !2110}
!2109 = !DIDerivedType(tag: DW_TAG_member, name: "slab_list", scope: !2107, file: !992, line: 105, baseType: !300, size: 128)
!2110 = !DIDerivedType(tag: DW_TAG_member, scope: !2107, file: !992, line: 106, baseType: !2111, size: 128)
!2111 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2107, file: !992, line: 106, size: 128, elements: !2112)
!2112 = !{!2113, !2114, !2115}
!2113 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2111, file: !992, line: 107, baseType: !990, size: 64)
!2114 = !DIDerivedType(tag: DW_TAG_member, name: "pages", scope: !2111, file: !992, line: 109, baseType: !294, size: 32, offset: 64)
!2115 = !DIDerivedType(tag: DW_TAG_member, name: "pobjects", scope: !2111, file: !992, line: 110, baseType: !294, size: 32, offset: 96)
!2116 = !DIDerivedType(tag: DW_TAG_member, name: "slab_cache", scope: !2104, file: !992, line: 117, baseType: !1396, size: 64, offset: 128)
!2117 = !DIDerivedType(tag: DW_TAG_member, name: "freelist", scope: !2104, file: !992, line: 119, baseType: !247, size: 64, offset: 192)
!2118 = !DIDerivedType(tag: DW_TAG_member, scope: !2104, file: !992, line: 120, baseType: !2119, size: 64, offset: 256)
!2119 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2104, file: !992, line: 120, size: 64, elements: !2120)
!2120 = !{!2121, !2122, !2123}
!2121 = !DIDerivedType(tag: DW_TAG_member, name: "s_mem", scope: !2119, file: !992, line: 121, baseType: !247, size: 64)
!2122 = !DIDerivedType(tag: DW_TAG_member, name: "counters", scope: !2119, file: !992, line: 122, baseType: !287, size: 64)
!2123 = !DIDerivedType(tag: DW_TAG_member, scope: !2119, file: !992, line: 123, baseType: !2124, size: 32)
!2124 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2119, file: !992, line: 123, size: 32, elements: !2125)
!2125 = !{!2126, !2127, !2128}
!2126 = !DIDerivedType(tag: DW_TAG_member, name: "inuse", scope: !2124, file: !992, line: 124, baseType: !7, size: 16, flags: DIFlagBitField, extraData: i64 0)
!2127 = !DIDerivedType(tag: DW_TAG_member, name: "objects", scope: !2124, file: !992, line: 125, baseType: !7, size: 15, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!2128 = !DIDerivedType(tag: DW_TAG_member, name: "frozen", scope: !2124, file: !992, line: 126, baseType: !7, size: 1, offset: 31, flags: DIFlagBitField, extraData: i64 0)
!2129 = !DIDerivedType(tag: DW_TAG_member, scope: !996, file: !992, line: 130, baseType: !2130, size: 192)
!2130 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !996, file: !992, line: 130, size: 192, elements: !2131)
!2131 = !{!2132, !2133, !2134, !2135, !2136}
!2132 = !DIDerivedType(tag: DW_TAG_member, name: "compound_head", scope: !2130, file: !992, line: 131, baseType: !287, size: 64)
!2133 = !DIDerivedType(tag: DW_TAG_member, name: "compound_dtor", scope: !2130, file: !992, line: 134, baseType: !268, size: 8, offset: 64)
!2134 = !DIDerivedType(tag: DW_TAG_member, name: "compound_order", scope: !2130, file: !992, line: 135, baseType: !268, size: 8, offset: 72)
!2135 = !DIDerivedType(tag: DW_TAG_member, name: "compound_mapcount", scope: !2130, file: !992, line: 136, baseType: !326, size: 32, offset: 96)
!2136 = !DIDerivedType(tag: DW_TAG_member, name: "compound_nr", scope: !2130, file: !992, line: 137, baseType: !7, size: 32, offset: 128)
!2137 = !DIDerivedType(tag: DW_TAG_member, scope: !996, file: !992, line: 139, baseType: !2138, size: 256)
!2138 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !996, file: !992, line: 139, size: 256, elements: !2139)
!2139 = !{!2140, !2141, !2142}
!2140 = !DIDerivedType(tag: DW_TAG_member, name: "_compound_pad_1", scope: !2138, file: !992, line: 140, baseType: !287, size: 64)
!2141 = !DIDerivedType(tag: DW_TAG_member, name: "hpage_pinned_refcount", scope: !2138, file: !992, line: 141, baseType: !326, size: 32, offset: 64)
!2142 = !DIDerivedType(tag: DW_TAG_member, name: "deferred_list", scope: !2138, file: !992, line: 143, baseType: !300, size: 128, offset: 128)
!2143 = !DIDerivedType(tag: DW_TAG_member, scope: !996, file: !992, line: 145, baseType: !2144, size: 256)
!2144 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !996, file: !992, line: 145, size: 256, elements: !2145)
!2145 = !{!2146, !2147, !2150, !2151, !3612}
!2146 = !DIDerivedType(tag: DW_TAG_member, name: "_pt_pad_1", scope: !2144, file: !992, line: 146, baseType: !287, size: 64)
!2147 = !DIDerivedType(tag: DW_TAG_member, name: "pmd_huge_pte", scope: !2144, file: !992, line: 147, baseType: !2148, size: 64, offset: 64)
!2148 = !DIDerivedType(tag: DW_TAG_typedef, name: "pgtable_t", file: !2149, line: 509, baseType: !990)
!2149 = !DIFile(filename: "./arch/x86/include/asm/pgtable_types.h", directory: "/home/lizy2001/genbc/linux")
!2150 = !DIDerivedType(tag: DW_TAG_member, name: "_pt_pad_2", scope: !2144, file: !992, line: 148, baseType: !287, size: 64, offset: 128)
!2151 = !DIDerivedType(tag: DW_TAG_member, scope: !2144, file: !992, line: 149, baseType: !2152, size: 64, offset: 192)
!2152 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2144, file: !992, line: 149, size: 64, elements: !2153)
!2153 = !{!2154, !3611}
!2154 = !DIDerivedType(tag: DW_TAG_member, name: "pt_mm", scope: !2152, file: !992, line: 150, baseType: !2155, size: 64)
!2155 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2156, size: 64)
!2156 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mm_struct", file: !992, line: 388, size: 7296, elements: !2157)
!2157 = !{!2158, !3609}
!2158 = !DIDerivedType(tag: DW_TAG_member, scope: !2156, file: !992, line: 389, baseType: !2159, size: 7296)
!2159 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2156, file: !992, line: 389, size: 7296, elements: !2160)
!2160 = !{!2161, !2279, !2280, !2281, !2285, !2286, !2287, !2288, !2289, !2296, !2297, !2298, !2299, !2300, !2301, !2302, !2303, !2304, !2305, !2306, !2307, !2308, !2309, !2310, !2311, !2312, !2313, !2314, !2315, !2316, !2317, !2318, !2319, !2320, !2321, !2322, !2323, !2324, !2325, !2326, !2330, !2336, !2339, !2378, !2379, !3593, !3594, !3597, !3598, !3599, !3602, !3603, !3604, !3607, !3608}
!2161 = !DIDerivedType(tag: DW_TAG_member, name: "mmap", scope: !2159, file: !992, line: 390, baseType: !2162, size: 64)
!2162 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2163, size: 64)
!2163 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vm_area_struct", file: !992, line: 305, size: 1472, elements: !2164)
!2164 = !{!2165, !2166, !2167, !2168, !2169, !2170, !2171, !2172, !2179, !2180, !2185, !2186, !2189, !2273, !2274, !2275, !2276, !2277}
!2165 = !DIDerivedType(tag: DW_TAG_member, name: "vm_start", scope: !2163, file: !992, line: 308, baseType: !287, size: 64)
!2166 = !DIDerivedType(tag: DW_TAG_member, name: "vm_end", scope: !2163, file: !992, line: 309, baseType: !287, size: 64, offset: 64)
!2167 = !DIDerivedType(tag: DW_TAG_member, name: "vm_next", scope: !2163, file: !992, line: 313, baseType: !2162, size: 64, offset: 128)
!2168 = !DIDerivedType(tag: DW_TAG_member, name: "vm_prev", scope: !2163, file: !992, line: 313, baseType: !2162, size: 64, offset: 192)
!2169 = !DIDerivedType(tag: DW_TAG_member, name: "vm_rb", scope: !2163, file: !992, line: 315, baseType: !1025, size: 192, align: 64, offset: 256)
!2170 = !DIDerivedType(tag: DW_TAG_member, name: "rb_subtree_gap", scope: !2163, file: !992, line: 323, baseType: !287, size: 64, offset: 448)
!2171 = !DIDerivedType(tag: DW_TAG_member, name: "vm_mm", scope: !2163, file: !992, line: 327, baseType: !2155, size: 64, offset: 512)
!2172 = !DIDerivedType(tag: DW_TAG_member, name: "vm_page_prot", scope: !2163, file: !992, line: 333, baseType: !2173, size: 64, offset: 576)
!2173 = !DIDerivedType(tag: DW_TAG_typedef, name: "pgprot_t", file: !2149, line: 284, baseType: !2174)
!2174 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pgprot", file: !2149, line: 284, size: 64, elements: !2175)
!2175 = !{!2176}
!2176 = !DIDerivedType(tag: DW_TAG_member, name: "pgprot", scope: !2174, file: !2149, line: 284, baseType: !2177, size: 64)
!2177 = !DIDerivedType(tag: DW_TAG_typedef, name: "pgprotval_t", file: !2178, line: 19, baseType: !287)
!2178 = !DIFile(filename: "./arch/x86/include/asm/pgtable_64_types.h", directory: "/home/lizy2001/genbc/linux")
!2179 = !DIDerivedType(tag: DW_TAG_member, name: "vm_flags", scope: !2163, file: !992, line: 334, baseType: !287, size: 64, offset: 640)
!2180 = !DIDerivedType(tag: DW_TAG_member, name: "shared", scope: !2163, file: !992, line: 343, baseType: !2181, size: 256, offset: 704)
!2181 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2163, file: !992, line: 340, size: 256, elements: !2182)
!2182 = !{!2183, !2184}
!2183 = !DIDerivedType(tag: DW_TAG_member, name: "rb", scope: !2181, file: !992, line: 341, baseType: !1025, size: 192, align: 64)
!2184 = !DIDerivedType(tag: DW_TAG_member, name: "rb_subtree_last", scope: !2181, file: !992, line: 342, baseType: !287, size: 64, offset: 192)
!2185 = !DIDerivedType(tag: DW_TAG_member, name: "anon_vma_chain", scope: !2163, file: !992, line: 351, baseType: !300, size: 128, offset: 960)
!2186 = !DIDerivedType(tag: DW_TAG_member, name: "anon_vma", scope: !2163, file: !992, line: 353, baseType: !2187, size: 64, offset: 1088)
!2187 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2188, size: 64)
!2188 = !DICompositeType(tag: DW_TAG_structure_type, name: "anon_vma", file: !992, line: 353, flags: DIFlagFwdDecl)
!2189 = !DIDerivedType(tag: DW_TAG_member, name: "vm_ops", scope: !2163, file: !992, line: 356, baseType: !2190, size: 64, offset: 1152)
!2190 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2191, size: 64)
!2191 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2192)
!2192 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vm_operations_struct", file: !127, line: 557, size: 832, elements: !2193)
!2193 = !{!2194, !2198, !2199, !2203, !2207, !2247, !2251, !2255, !2259, !2260, !2261, !2265, !2269}
!2194 = !DIDerivedType(tag: DW_TAG_member, name: "open", scope: !2192, file: !127, line: 558, baseType: !2195, size: 64)
!2195 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2196, size: 64)
!2196 = !DISubroutineType(types: !2197)
!2197 = !{null, !2162}
!2198 = !DIDerivedType(tag: DW_TAG_member, name: "close", scope: !2192, file: !127, line: 559, baseType: !2195, size: 64, offset: 64)
!2199 = !DIDerivedType(tag: DW_TAG_member, name: "split", scope: !2192, file: !127, line: 560, baseType: !2200, size: 64, offset: 128)
!2200 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2201, size: 64)
!2201 = !DISubroutineType(types: !2202)
!2202 = !{!294, !2162, !287}
!2203 = !DIDerivedType(tag: DW_TAG_member, name: "mremap", scope: !2192, file: !127, line: 561, baseType: !2204, size: 64, offset: 192)
!2204 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2205, size: 64)
!2205 = !DISubroutineType(types: !2206)
!2206 = !{!294, !2162}
!2207 = !DIDerivedType(tag: DW_TAG_member, name: "fault", scope: !2192, file: !127, line: 562, baseType: !2208, size: 64, offset: 256)
!2208 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2209, size: 64)
!2209 = !DISubroutineType(types: !2210)
!2210 = !{!2211, !2212}
!2211 = !DIDerivedType(tag: DW_TAG_typedef, name: "vm_fault_t", file: !992, line: 682, baseType: !7)
!2212 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2213, size: 64)
!2213 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vm_fault", file: !127, line: 508, size: 768, elements: !2214)
!2214 = !{!2215, !2216, !2217, !2218, !2219, !2220, !2227, !2234, !2240, !2241, !2242, !2244, !2246}
!2215 = !DIDerivedType(tag: DW_TAG_member, name: "vma", scope: !2213, file: !127, line: 509, baseType: !2162, size: 64)
!2216 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2213, file: !127, line: 510, baseType: !7, size: 32, offset: 64)
!2217 = !DIDerivedType(tag: DW_TAG_member, name: "gfp_mask", scope: !2213, file: !127, line: 511, baseType: !248, size: 32, offset: 96)
!2218 = !DIDerivedType(tag: DW_TAG_member, name: "pgoff", scope: !2213, file: !127, line: 512, baseType: !287, size: 64, offset: 128)
!2219 = !DIDerivedType(tag: DW_TAG_member, name: "address", scope: !2213, file: !127, line: 513, baseType: !287, size: 64, offset: 192)
!2220 = !DIDerivedType(tag: DW_TAG_member, name: "pmd", scope: !2213, file: !127, line: 514, baseType: !2221, size: 64, offset: 256)
!2221 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2222, size: 64)
!2222 = !DIDerivedType(tag: DW_TAG_typedef, name: "pmd_t", file: !2149, line: 385, baseType: !2223)
!2223 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2149, line: 385, size: 64, elements: !2224)
!2224 = !{!2225}
!2225 = !DIDerivedType(tag: DW_TAG_member, name: "pmd", scope: !2223, file: !2149, line: 385, baseType: !2226, size: 64)
!2226 = !DIDerivedType(tag: DW_TAG_typedef, name: "pmdval_t", file: !2178, line: 15, baseType: !287)
!2227 = !DIDerivedType(tag: DW_TAG_member, name: "pud", scope: !2213, file: !127, line: 516, baseType: !2228, size: 64, offset: 320)
!2228 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2229, size: 64)
!2229 = !DIDerivedType(tag: DW_TAG_typedef, name: "pud_t", file: !2149, line: 359, baseType: !2230)
!2230 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2149, line: 359, size: 64, elements: !2231)
!2231 = !{!2232}
!2232 = !DIDerivedType(tag: DW_TAG_member, name: "pud", scope: !2230, file: !2149, line: 359, baseType: !2233, size: 64)
!2233 = !DIDerivedType(tag: DW_TAG_typedef, name: "pudval_t", file: !2178, line: 16, baseType: !287)
!2234 = !DIDerivedType(tag: DW_TAG_member, name: "orig_pte", scope: !2213, file: !127, line: 519, baseType: !2235, size: 64, offset: 384)
!2235 = !DIDerivedType(tag: DW_TAG_typedef, name: "pte_t", file: !2178, line: 21, baseType: !2236)
!2236 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2178, line: 21, size: 64, elements: !2237)
!2237 = !{!2238}
!2238 = !DIDerivedType(tag: DW_TAG_member, name: "pte", scope: !2236, file: !2178, line: 21, baseType: !2239, size: 64)
!2239 = !DIDerivedType(tag: DW_TAG_typedef, name: "pteval_t", file: !2178, line: 14, baseType: !287)
!2240 = !DIDerivedType(tag: DW_TAG_member, name: "cow_page", scope: !2213, file: !127, line: 521, baseType: !990, size: 64, offset: 448)
!2241 = !DIDerivedType(tag: DW_TAG_member, name: "page", scope: !2213, file: !127, line: 522, baseType: !990, size: 64, offset: 512)
!2242 = !DIDerivedType(tag: DW_TAG_member, name: "pte", scope: !2213, file: !127, line: 528, baseType: !2243, size: 64, offset: 576)
!2243 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2235, size: 64)
!2244 = !DIDerivedType(tag: DW_TAG_member, name: "ptl", scope: !2213, file: !127, line: 532, baseType: !2245, size: 64, offset: 640)
!2245 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !358, size: 64)
!2246 = !DIDerivedType(tag: DW_TAG_member, name: "prealloc_pte", scope: !2213, file: !127, line: 536, baseType: !2148, size: 64, offset: 704)
!2247 = !DIDerivedType(tag: DW_TAG_member, name: "huge_fault", scope: !2192, file: !127, line: 563, baseType: !2248, size: 64, offset: 320)
!2248 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2249, size: 64)
!2249 = !DISubroutineType(types: !2250)
!2250 = !{!2211, !2212, !126}
!2251 = !DIDerivedType(tag: DW_TAG_member, name: "map_pages", scope: !2192, file: !127, line: 565, baseType: !2252, size: 64, offset: 384)
!2252 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2253, size: 64)
!2253 = !DISubroutineType(types: !2254)
!2254 = !{null, !2212, !287, !287}
!2255 = !DIDerivedType(tag: DW_TAG_member, name: "pagesize", scope: !2192, file: !127, line: 567, baseType: !2256, size: 64, offset: 448)
!2256 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2257, size: 64)
!2257 = !DISubroutineType(types: !2258)
!2258 = !{!287, !2162}
!2259 = !DIDerivedType(tag: DW_TAG_member, name: "page_mkwrite", scope: !2192, file: !127, line: 571, baseType: !2208, size: 64, offset: 512)
!2260 = !DIDerivedType(tag: DW_TAG_member, name: "pfn_mkwrite", scope: !2192, file: !127, line: 574, baseType: !2208, size: 64, offset: 576)
!2261 = !DIDerivedType(tag: DW_TAG_member, name: "access", scope: !2192, file: !127, line: 579, baseType: !2262, size: 64, offset: 640)
!2262 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2263, size: 64)
!2263 = !DISubroutineType(types: !2264)
!2264 = !{!294, !2162, !287, !247, !294, !294}
!2265 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2192, file: !127, line: 585, baseType: !2266, size: 64, offset: 704)
!2266 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2267, size: 64)
!2267 = !DISubroutineType(types: !2268)
!2268 = !{!468, !2162}
!2269 = !DIDerivedType(tag: DW_TAG_member, name: "find_special_page", scope: !2192, file: !127, line: 615, baseType: !2270, size: 64, offset: 768)
!2270 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2271, size: 64)
!2271 = !DISubroutineType(types: !2272)
!2272 = !{!990, !2162, !287}
!2273 = !DIDerivedType(tag: DW_TAG_member, name: "vm_pgoff", scope: !2163, file: !992, line: 359, baseType: !287, size: 64, offset: 1216)
!2274 = !DIDerivedType(tag: DW_TAG_member, name: "vm_file", scope: !2163, file: !992, line: 361, baseType: !580, size: 64, offset: 1280)
!2275 = !DIDerivedType(tag: DW_TAG_member, name: "vm_private_data", scope: !2163, file: !992, line: 362, baseType: !247, size: 64, offset: 1344)
!2276 = !DIDerivedType(tag: DW_TAG_member, name: "swap_readahead_info", scope: !2163, file: !992, line: 365, baseType: !348, size: 64, offset: 1408)
!2277 = !DIDerivedType(tag: DW_TAG_member, name: "vm_userfaultfd_ctx", scope: !2163, file: !992, line: 373, baseType: !2278, offset: 1472)
!2278 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vm_userfaultfd_ctx", file: !992, line: 296, elements: !372)
!2279 = !DIDerivedType(tag: DW_TAG_member, name: "mm_rb", scope: !2159, file: !992, line: 391, baseType: !1021, size: 64, offset: 64)
!2280 = !DIDerivedType(tag: DW_TAG_member, name: "vmacache_seqnum", scope: !2159, file: !992, line: 392, baseType: !284, size: 64, offset: 128)
!2281 = !DIDerivedType(tag: DW_TAG_member, name: "get_unmapped_area", scope: !2159, file: !992, line: 394, baseType: !2282, size: 64, offset: 192)
!2282 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2283, size: 64)
!2283 = !DISubroutineType(types: !2284)
!2284 = !{!287, !580, !287, !287, !287, !287}
!2285 = !DIDerivedType(tag: DW_TAG_member, name: "mmap_base", scope: !2159, file: !992, line: 398, baseType: !287, size: 64, offset: 256)
!2286 = !DIDerivedType(tag: DW_TAG_member, name: "mmap_legacy_base", scope: !2159, file: !992, line: 399, baseType: !287, size: 64, offset: 320)
!2287 = !DIDerivedType(tag: DW_TAG_member, name: "task_size", scope: !2159, file: !992, line: 405, baseType: !287, size: 64, offset: 384)
!2288 = !DIDerivedType(tag: DW_TAG_member, name: "highest_vm_end", scope: !2159, file: !992, line: 406, baseType: !287, size: 64, offset: 448)
!2289 = !DIDerivedType(tag: DW_TAG_member, name: "pgd", scope: !2159, file: !992, line: 407, baseType: !2290, size: 64, offset: 512)
!2290 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2291, size: 64)
!2291 = !DIDerivedType(tag: DW_TAG_typedef, name: "pgd_t", file: !2149, line: 286, baseType: !2292)
!2292 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2149, line: 286, size: 64, elements: !2293)
!2293 = !{!2294}
!2294 = !DIDerivedType(tag: DW_TAG_member, name: "pgd", scope: !2292, file: !2149, line: 286, baseType: !2295, size: 64)
!2295 = !DIDerivedType(tag: DW_TAG_typedef, name: "pgdval_t", file: !2178, line: 18, baseType: !287)
!2296 = !DIDerivedType(tag: DW_TAG_member, name: "membarrier_state", scope: !2159, file: !992, line: 416, baseType: !326, size: 32, offset: 576)
!2297 = !DIDerivedType(tag: DW_TAG_member, name: "mm_users", scope: !2159, file: !992, line: 428, baseType: !326, size: 32, offset: 608)
!2298 = !DIDerivedType(tag: DW_TAG_member, name: "mm_count", scope: !2159, file: !992, line: 437, baseType: !326, size: 32, offset: 640)
!2299 = !DIDerivedType(tag: DW_TAG_member, name: "has_pinned", scope: !2159, file: !992, line: 447, baseType: !326, size: 32, offset: 672)
!2300 = !DIDerivedType(tag: DW_TAG_member, name: "pgtables_bytes", scope: !2159, file: !992, line: 450, baseType: !348, size: 64, offset: 704)
!2301 = !DIDerivedType(tag: DW_TAG_member, name: "map_count", scope: !2159, file: !992, line: 452, baseType: !294, size: 32, offset: 768)
!2302 = !DIDerivedType(tag: DW_TAG_member, name: "page_table_lock", scope: !2159, file: !992, line: 454, baseType: !358, offset: 800)
!2303 = !DIDerivedType(tag: DW_TAG_member, name: "mmap_lock", scope: !2159, file: !992, line: 457, baseType: !1032, size: 256, offset: 832)
!2304 = !DIDerivedType(tag: DW_TAG_member, name: "mmlist", scope: !2159, file: !992, line: 459, baseType: !300, size: 128, offset: 1088)
!2305 = !DIDerivedType(tag: DW_TAG_member, name: "hiwater_rss", scope: !2159, file: !992, line: 466, baseType: !287, size: 64, offset: 1216)
!2306 = !DIDerivedType(tag: DW_TAG_member, name: "hiwater_vm", scope: !2159, file: !992, line: 467, baseType: !287, size: 64, offset: 1280)
!2307 = !DIDerivedType(tag: DW_TAG_member, name: "total_vm", scope: !2159, file: !992, line: 469, baseType: !287, size: 64, offset: 1344)
!2308 = !DIDerivedType(tag: DW_TAG_member, name: "locked_vm", scope: !2159, file: !992, line: 470, baseType: !287, size: 64, offset: 1408)
!2309 = !DIDerivedType(tag: DW_TAG_member, name: "pinned_vm", scope: !2159, file: !992, line: 471, baseType: !350, size: 64, offset: 1472)
!2310 = !DIDerivedType(tag: DW_TAG_member, name: "data_vm", scope: !2159, file: !992, line: 472, baseType: !287, size: 64, offset: 1536)
!2311 = !DIDerivedType(tag: DW_TAG_member, name: "exec_vm", scope: !2159, file: !992, line: 473, baseType: !287, size: 64, offset: 1600)
!2312 = !DIDerivedType(tag: DW_TAG_member, name: "stack_vm", scope: !2159, file: !992, line: 474, baseType: !287, size: 64, offset: 1664)
!2313 = !DIDerivedType(tag: DW_TAG_member, name: "def_flags", scope: !2159, file: !992, line: 475, baseType: !287, size: 64, offset: 1728)
!2314 = !DIDerivedType(tag: DW_TAG_member, name: "arg_lock", scope: !2159, file: !992, line: 477, baseType: !358, offset: 1792)
!2315 = !DIDerivedType(tag: DW_TAG_member, name: "start_code", scope: !2159, file: !992, line: 478, baseType: !287, size: 64, offset: 1792)
!2316 = !DIDerivedType(tag: DW_TAG_member, name: "end_code", scope: !2159, file: !992, line: 478, baseType: !287, size: 64, offset: 1856)
!2317 = !DIDerivedType(tag: DW_TAG_member, name: "start_data", scope: !2159, file: !992, line: 478, baseType: !287, size: 64, offset: 1920)
!2318 = !DIDerivedType(tag: DW_TAG_member, name: "end_data", scope: !2159, file: !992, line: 478, baseType: !287, size: 64, offset: 1984)
!2319 = !DIDerivedType(tag: DW_TAG_member, name: "start_brk", scope: !2159, file: !992, line: 479, baseType: !287, size: 64, offset: 2048)
!2320 = !DIDerivedType(tag: DW_TAG_member, name: "brk", scope: !2159, file: !992, line: 479, baseType: !287, size: 64, offset: 2112)
!2321 = !DIDerivedType(tag: DW_TAG_member, name: "start_stack", scope: !2159, file: !992, line: 479, baseType: !287, size: 64, offset: 2176)
!2322 = !DIDerivedType(tag: DW_TAG_member, name: "arg_start", scope: !2159, file: !992, line: 480, baseType: !287, size: 64, offset: 2240)
!2323 = !DIDerivedType(tag: DW_TAG_member, name: "arg_end", scope: !2159, file: !992, line: 480, baseType: !287, size: 64, offset: 2304)
!2324 = !DIDerivedType(tag: DW_TAG_member, name: "env_start", scope: !2159, file: !992, line: 480, baseType: !287, size: 64, offset: 2368)
!2325 = !DIDerivedType(tag: DW_TAG_member, name: "env_end", scope: !2159, file: !992, line: 480, baseType: !287, size: 64, offset: 2432)
!2326 = !DIDerivedType(tag: DW_TAG_member, name: "saved_auxv", scope: !2159, file: !992, line: 482, baseType: !2327, size: 2816, offset: 2496)
!2327 = !DICompositeType(tag: DW_TAG_array_type, baseType: !287, size: 2816, elements: !2328)
!2328 = !{!2329}
!2329 = !DISubrange(count: 44)
!2330 = !DIDerivedType(tag: DW_TAG_member, name: "rss_stat", scope: !2159, file: !992, line: 488, baseType: !2331, size: 256, offset: 5312)
!2331 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mm_rss_stat", file: !2332, line: 60, size: 256, elements: !2333)
!2332 = !DIFile(filename: "./include/linux/mm_types_task.h", directory: "/home/lizy2001/genbc/linux")
!2333 = !{!2334}
!2334 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !2331, file: !2332, line: 61, baseType: !2335, size: 256)
!2335 = !DICompositeType(tag: DW_TAG_array_type, baseType: !348, size: 256, elements: !258)
!2336 = !DIDerivedType(tag: DW_TAG_member, name: "binfmt", scope: !2159, file: !992, line: 490, baseType: !2337, size: 64, offset: 5568)
!2337 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2338, size: 64)
!2338 = !DICompositeType(tag: DW_TAG_structure_type, name: "linux_binfmt", file: !992, line: 490, flags: DIFlagFwdDecl)
!2339 = !DIDerivedType(tag: DW_TAG_member, name: "context", scope: !2159, file: !992, line: 493, baseType: !2340, size: 896, offset: 5632)
!2340 = !DIDerivedType(tag: DW_TAG_typedef, name: "mm_context_t", file: !2341, line: 53, baseType: !2342)
!2341 = !DIFile(filename: "./arch/x86/include/asm/mmu.h", directory: "/home/lizy2001/genbc/linux")
!2342 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2341, line: 13, size: 896, elements: !2343)
!2343 = !{!2344, !2345, !2346, !2347, !2350, !2351, !2352, !2353, !2373, !2374, !2375}
!2344 = !DIDerivedType(tag: DW_TAG_member, name: "ctx_id", scope: !2342, file: !2341, line: 18, baseType: !284, size: 64)
!2345 = !DIDerivedType(tag: DW_TAG_member, name: "tlb_gen", scope: !2342, file: !2341, line: 28, baseType: !350, size: 64, offset: 64)
!2346 = !DIDerivedType(tag: DW_TAG_member, name: "ldt_usr_sem", scope: !2342, file: !2341, line: 31, baseType: !1032, size: 256, offset: 128)
!2347 = !DIDerivedType(tag: DW_TAG_member, name: "ldt", scope: !2342, file: !2341, line: 32, baseType: !2348, size: 64, offset: 384)
!2348 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2349, size: 64)
!2349 = !DICompositeType(tag: DW_TAG_structure_type, name: "ldt_struct", file: !2341, line: 32, flags: DIFlagFwdDecl)
!2350 = !DIDerivedType(tag: DW_TAG_member, name: "ia32_compat", scope: !2342, file: !2341, line: 37, baseType: !392, size: 16, offset: 448)
!2351 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2342, file: !2341, line: 40, baseType: !344, size: 192, offset: 512)
!2352 = !DIDerivedType(tag: DW_TAG_member, name: "vdso", scope: !2342, file: !2341, line: 41, baseType: !247, size: 64, offset: 704)
!2353 = !DIDerivedType(tag: DW_TAG_member, name: "vdso_image", scope: !2342, file: !2341, line: 42, baseType: !2354, size: 64, offset: 768)
!2354 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2355, size: 64)
!2355 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2356)
!2356 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vdso_image", file: !2357, line: 13, size: 896, elements: !2358)
!2357 = !DIFile(filename: "./arch/x86/include/asm/vdso.h", directory: "/home/lizy2001/genbc/linux")
!2358 = !{!2359, !2360, !2361, !2362, !2363, !2364, !2365, !2366, !2367, !2368, !2369, !2370, !2371, !2372}
!2359 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !2356, file: !2357, line: 14, baseType: !247, size: 64)
!2360 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2356, file: !2357, line: 15, baseType: !287, size: 64, offset: 64)
!2361 = !DIDerivedType(tag: DW_TAG_member, name: "alt", scope: !2356, file: !2357, line: 17, baseType: !287, size: 64, offset: 128)
!2362 = !DIDerivedType(tag: DW_TAG_member, name: "alt_len", scope: !2356, file: !2357, line: 17, baseType: !287, size: 64, offset: 192)
!2363 = !DIDerivedType(tag: DW_TAG_member, name: "sym_vvar_start", scope: !2356, file: !2357, line: 19, baseType: !31, size: 64, offset: 256)
!2364 = !DIDerivedType(tag: DW_TAG_member, name: "sym_vvar_page", scope: !2356, file: !2357, line: 21, baseType: !31, size: 64, offset: 320)
!2365 = !DIDerivedType(tag: DW_TAG_member, name: "sym_pvclock_page", scope: !2356, file: !2357, line: 22, baseType: !31, size: 64, offset: 384)
!2366 = !DIDerivedType(tag: DW_TAG_member, name: "sym_hvclock_page", scope: !2356, file: !2357, line: 23, baseType: !31, size: 64, offset: 448)
!2367 = !DIDerivedType(tag: DW_TAG_member, name: "sym_timens_page", scope: !2356, file: !2357, line: 24, baseType: !31, size: 64, offset: 512)
!2368 = !DIDerivedType(tag: DW_TAG_member, name: "sym_VDSO32_NOTE_MASK", scope: !2356, file: !2357, line: 25, baseType: !31, size: 64, offset: 576)
!2369 = !DIDerivedType(tag: DW_TAG_member, name: "sym___kernel_sigreturn", scope: !2356, file: !2357, line: 26, baseType: !31, size: 64, offset: 640)
!2370 = !DIDerivedType(tag: DW_TAG_member, name: "sym___kernel_rt_sigreturn", scope: !2356, file: !2357, line: 27, baseType: !31, size: 64, offset: 704)
!2371 = !DIDerivedType(tag: DW_TAG_member, name: "sym___kernel_vsyscall", scope: !2356, file: !2357, line: 28, baseType: !31, size: 64, offset: 768)
!2372 = !DIDerivedType(tag: DW_TAG_member, name: "sym_int80_landing_pad", scope: !2356, file: !2357, line: 29, baseType: !31, size: 64, offset: 832)
!2373 = !DIDerivedType(tag: DW_TAG_member, name: "perf_rdpmc_allowed", scope: !2342, file: !2341, line: 44, baseType: !326, size: 32, offset: 832)
!2374 = !DIDerivedType(tag: DW_TAG_member, name: "pkey_allocation_map", scope: !2342, file: !2341, line: 50, baseType: !1124, size: 16, offset: 864)
!2375 = !DIDerivedType(tag: DW_TAG_member, name: "execute_only_pkey", scope: !2342, file: !2341, line: 51, baseType: !2376, size: 16, offset: 880)
!2376 = !DIDerivedType(tag: DW_TAG_typedef, name: "s16", file: !262, line: 18, baseType: !2377)
!2377 = !DIDerivedType(tag: DW_TAG_typedef, name: "__s16", file: !264, line: 23, baseType: !1187)
!2378 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2159, file: !992, line: 495, baseType: !287, size: 64, offset: 6528)
!2379 = !DIDerivedType(tag: DW_TAG_member, name: "core_state", scope: !2159, file: !992, line: 497, baseType: !2380, size: 64, offset: 6592)
!2380 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2381, size: 64)
!2381 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "core_state", file: !992, line: 381, size: 384, elements: !2382)
!2382 = !{!2383, !2384, !3592}
!2383 = !DIDerivedType(tag: DW_TAG_member, name: "nr_threads", scope: !2381, file: !992, line: 382, baseType: !326, size: 32)
!2384 = !DIDerivedType(tag: DW_TAG_member, name: "dumper", scope: !2381, file: !992, line: 383, baseType: !2385, size: 128, offset: 64)
!2385 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "core_thread", file: !992, line: 376, size: 128, elements: !2386)
!2386 = !{!2387, !3590}
!2387 = !DIDerivedType(tag: DW_TAG_member, name: "task", scope: !2385, file: !992, line: 377, baseType: !2388, size: 64)
!2388 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2389, size: 64)
!2389 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "task_struct", file: !2390, line: 640, size: 48640, elements: !2391)
!2390 = !DIFile(filename: "./include/linux/sched.h", directory: "/home/lizy2001/genbc/linux")
!2391 = !{!2392, !2398, !2399, !2400, !2401, !2402, !2403, !2404, !2405, !2406, !2407, !2408, !2412, !2430, !2441, !2522, !2523, !2524, !2535, !2536, !2538, !2539, !2540, !2541, !2547, !2548, !2549, !2550, !2551, !2552, !2553, !2554, !2555, !2556, !2557, !2558, !2559, !2560, !2561, !2562, !2619, !2622, !2623, !2624, !2625, !2626, !2627, !2628, !2629, !2630, !2631, !2651, !2653, !2654, !2655, !2667, !2668, !2669, !2670, !2671, !2672, !2678, !2679, !2680, !2681, !2682, !2683, !2684, !2696, !2701, !3020, !3021, !3022, !3023, !3025, !3028, !3031, !3034, !3037, !3073, !3174, !3203, !3204, !3205, !3206, !3207, !3208, !3209, !3210, !3211, !3220, !3221, !3222, !3223, !3224, !3229, !3230, !3231, !3234, !3235, !3237, !3246, !3251, !3252, !3253, !3256, !3257, !3335, !3336, !3339, !3340, !3343, !3344, !3345, !3349, !3350, !3351, !3364, !3365, !3366, !3376, !3381, !3384, !3390, !3391, !3392, !3393, !3394, !3395, !3396, !3397, !3411, !3412, !3413, !3414, !3415, !3416, !3417, !3418, !3419}
!2392 = !DIDerivedType(tag: DW_TAG_member, name: "thread_info", scope: !2389, file: !2390, line: 646, baseType: !2393, size: 128)
!2393 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "thread_info", file: !2394, line: 56, size: 128, elements: !2395)
!2394 = !DIFile(filename: "./arch/x86/include/asm/thread_info.h", directory: "/home/lizy2001/genbc/linux")
!2395 = !{!2396, !2397}
!2396 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2393, file: !2394, line: 57, baseType: !287, size: 64)
!2397 = !DIDerivedType(tag: DW_TAG_member, name: "status", scope: !2393, file: !2394, line: 58, baseType: !261, size: 32, offset: 64)
!2398 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !2389, file: !2390, line: 649, baseType: !293, size: 64, offset: 128)
!2399 = !DIDerivedType(tag: DW_TAG_member, name: "stack", scope: !2389, file: !2390, line: 657, baseType: !247, size: 64, offset: 192)
!2400 = !DIDerivedType(tag: DW_TAG_member, name: "usage", scope: !2389, file: !2390, line: 658, baseType: !322, size: 32, offset: 256)
!2401 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2389, file: !2390, line: 660, baseType: !7, size: 32, offset: 288)
!2402 = !DIDerivedType(tag: DW_TAG_member, name: "ptrace", scope: !2389, file: !2390, line: 661, baseType: !7, size: 32, offset: 320)
!2403 = !DIDerivedType(tag: DW_TAG_member, name: "on_rq", scope: !2389, file: !2390, line: 684, baseType: !294, size: 32, offset: 352)
!2404 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !2389, file: !2390, line: 686, baseType: !294, size: 32, offset: 384)
!2405 = !DIDerivedType(tag: DW_TAG_member, name: "static_prio", scope: !2389, file: !2390, line: 687, baseType: !294, size: 32, offset: 416)
!2406 = !DIDerivedType(tag: DW_TAG_member, name: "normal_prio", scope: !2389, file: !2390, line: 688, baseType: !294, size: 32, offset: 448)
!2407 = !DIDerivedType(tag: DW_TAG_member, name: "rt_priority", scope: !2389, file: !2390, line: 689, baseType: !7, size: 32, offset: 480)
!2408 = !DIDerivedType(tag: DW_TAG_member, name: "sched_class", scope: !2389, file: !2390, line: 691, baseType: !2409, size: 64, offset: 512)
!2409 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2410, size: 64)
!2410 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2411)
!2411 = !DICompositeType(tag: DW_TAG_structure_type, name: "sched_class", file: !2390, line: 691, flags: DIFlagFwdDecl)
!2412 = !DIDerivedType(tag: DW_TAG_member, name: "se", scope: !2389, file: !2390, line: 692, baseType: !2413, size: 832, offset: 576)
!2413 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sched_entity", file: !2390, line: 451, size: 832, elements: !2414)
!2414 = !{!2415, !2420, !2421, !2422, !2423, !2424, !2425, !2426, !2427, !2428}
!2415 = !DIDerivedType(tag: DW_TAG_member, name: "load", scope: !2413, file: !2390, line: 453, baseType: !2416, size: 128)
!2416 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "load_weight", file: !2390, line: 325, size: 128, elements: !2417)
!2417 = !{!2418, !2419}
!2418 = !DIDerivedType(tag: DW_TAG_member, name: "weight", scope: !2416, file: !2390, line: 326, baseType: !287, size: 64)
!2419 = !DIDerivedType(tag: DW_TAG_member, name: "inv_weight", scope: !2416, file: !2390, line: 327, baseType: !261, size: 32, offset: 64)
!2420 = !DIDerivedType(tag: DW_TAG_member, name: "run_node", scope: !2413, file: !2390, line: 454, baseType: !1025, size: 192, align: 64, offset: 128)
!2421 = !DIDerivedType(tag: DW_TAG_member, name: "group_node", scope: !2413, file: !2390, line: 455, baseType: !300, size: 128, offset: 320)
!2422 = !DIDerivedType(tag: DW_TAG_member, name: "on_rq", scope: !2413, file: !2390, line: 456, baseType: !7, size: 32, offset: 448)
!2423 = !DIDerivedType(tag: DW_TAG_member, name: "exec_start", scope: !2413, file: !2390, line: 458, baseType: !284, size: 64, offset: 512)
!2424 = !DIDerivedType(tag: DW_TAG_member, name: "sum_exec_runtime", scope: !2413, file: !2390, line: 459, baseType: !284, size: 64, offset: 576)
!2425 = !DIDerivedType(tag: DW_TAG_member, name: "vruntime", scope: !2413, file: !2390, line: 460, baseType: !284, size: 64, offset: 640)
!2426 = !DIDerivedType(tag: DW_TAG_member, name: "prev_sum_exec_runtime", scope: !2413, file: !2390, line: 461, baseType: !284, size: 64, offset: 704)
!2427 = !DIDerivedType(tag: DW_TAG_member, name: "nr_migrations", scope: !2413, file: !2390, line: 463, baseType: !284, size: 64, offset: 768)
!2428 = !DIDerivedType(tag: DW_TAG_member, name: "statistics", scope: !2413, file: !2390, line: 465, baseType: !2429, offset: 832)
!2429 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sched_statistics", file: !2390, line: 415, elements: !372)
!2430 = !DIDerivedType(tag: DW_TAG_member, name: "rt", scope: !2389, file: !2390, line: 693, baseType: !2431, size: 384, offset: 1408)
!2431 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sched_rt_entity", file: !2390, line: 489, size: 384, elements: !2432)
!2432 = !{!2433, !2434, !2435, !2436, !2437, !2438, !2439}
!2433 = !DIDerivedType(tag: DW_TAG_member, name: "run_list", scope: !2431, file: !2390, line: 490, baseType: !300, size: 128)
!2434 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !2431, file: !2390, line: 491, baseType: !287, size: 64, offset: 128)
!2435 = !DIDerivedType(tag: DW_TAG_member, name: "watchdog_stamp", scope: !2431, file: !2390, line: 492, baseType: !287, size: 64, offset: 192)
!2436 = !DIDerivedType(tag: DW_TAG_member, name: "time_slice", scope: !2431, file: !2390, line: 493, baseType: !7, size: 32, offset: 256)
!2437 = !DIDerivedType(tag: DW_TAG_member, name: "on_rq", scope: !2431, file: !2390, line: 494, baseType: !392, size: 16, offset: 288)
!2438 = !DIDerivedType(tag: DW_TAG_member, name: "on_list", scope: !2431, file: !2390, line: 495, baseType: !392, size: 16, offset: 304)
!2439 = !DIDerivedType(tag: DW_TAG_member, name: "back", scope: !2431, file: !2390, line: 497, baseType: !2440, size: 64, offset: 320)
!2440 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2431, size: 64)
!2441 = !DIDerivedType(tag: DW_TAG_member, name: "dl", scope: !2389, file: !2390, line: 697, baseType: !2442, size: 1792, offset: 1792)
!2442 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sched_dl_entity", file: !2390, line: 507, size: 1792, elements: !2443)
!2443 = !{!2444, !2445, !2446, !2447, !2448, !2449, !2450, !2451, !2452, !2453, !2454, !2455, !2456, !2457, !2519, !2520}
!2444 = !DIDerivedType(tag: DW_TAG_member, name: "rb_node", scope: !2442, file: !2390, line: 508, baseType: !1025, size: 192, align: 64)
!2445 = !DIDerivedType(tag: DW_TAG_member, name: "dl_runtime", scope: !2442, file: !2390, line: 515, baseType: !284, size: 64, offset: 192)
!2446 = !DIDerivedType(tag: DW_TAG_member, name: "dl_deadline", scope: !2442, file: !2390, line: 516, baseType: !284, size: 64, offset: 256)
!2447 = !DIDerivedType(tag: DW_TAG_member, name: "dl_period", scope: !2442, file: !2390, line: 517, baseType: !284, size: 64, offset: 320)
!2448 = !DIDerivedType(tag: DW_TAG_member, name: "dl_bw", scope: !2442, file: !2390, line: 518, baseType: !284, size: 64, offset: 384)
!2449 = !DIDerivedType(tag: DW_TAG_member, name: "dl_density", scope: !2442, file: !2390, line: 519, baseType: !284, size: 64, offset: 448)
!2450 = !DIDerivedType(tag: DW_TAG_member, name: "runtime", scope: !2442, file: !2390, line: 526, baseType: !354, size: 64, offset: 512)
!2451 = !DIDerivedType(tag: DW_TAG_member, name: "deadline", scope: !2442, file: !2390, line: 527, baseType: !284, size: 64, offset: 576)
!2452 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2442, file: !2390, line: 528, baseType: !7, size: 32, offset: 640)
!2453 = !DIDerivedType(tag: DW_TAG_member, name: "dl_throttled", scope: !2442, file: !2390, line: 554, baseType: !7, size: 1, offset: 672, flags: DIFlagBitField, extraData: i64 672)
!2454 = !DIDerivedType(tag: DW_TAG_member, name: "dl_yielded", scope: !2442, file: !2390, line: 555, baseType: !7, size: 1, offset: 673, flags: DIFlagBitField, extraData: i64 672)
!2455 = !DIDerivedType(tag: DW_TAG_member, name: "dl_non_contending", scope: !2442, file: !2390, line: 556, baseType: !7, size: 1, offset: 674, flags: DIFlagBitField, extraData: i64 672)
!2456 = !DIDerivedType(tag: DW_TAG_member, name: "dl_overrun", scope: !2442, file: !2390, line: 557, baseType: !7, size: 1, offset: 675, flags: DIFlagBitField, extraData: i64 672)
!2457 = !DIDerivedType(tag: DW_TAG_member, name: "dl_timer", scope: !2442, file: !2390, line: 563, baseType: !2458, size: 512, offset: 704)
!2458 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hrtimer", file: !133, line: 118, size: 512, elements: !2459)
!2459 = !{!2460, !2468, !2469, !2474, !2515, !2516, !2517, !2518}
!2460 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2458, file: !133, line: 119, baseType: !2461, size: 256)
!2461 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timerqueue_node", file: !2462, line: 9, size: 256, elements: !2463)
!2462 = !DIFile(filename: "./include/linux/timerqueue.h", directory: "/home/lizy2001/genbc/linux")
!2463 = !{!2464, !2465}
!2464 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2461, file: !2462, line: 10, baseType: !1025, size: 192, align: 64)
!2465 = !DIDerivedType(tag: DW_TAG_member, name: "expires", scope: !2461, file: !2462, line: 11, baseType: !2466, size: 64, offset: 192)
!2466 = !DIDerivedType(tag: DW_TAG_typedef, name: "ktime_t", file: !2467, line: 29, baseType: !354)
!2467 = !DIFile(filename: "./include/linux/ktime.h", directory: "/home/lizy2001/genbc/linux")
!2468 = !DIDerivedType(tag: DW_TAG_member, name: "_softexpires", scope: !2458, file: !133, line: 120, baseType: !2466, size: 64, offset: 256)
!2469 = !DIDerivedType(tag: DW_TAG_member, name: "function", scope: !2458, file: !133, line: 121, baseType: !2470, size: 64, offset: 320)
!2470 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2471, size: 64)
!2471 = !DISubroutineType(types: !2472)
!2472 = !{!132, !2473}
!2473 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2458, size: 64)
!2474 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2458, file: !133, line: 122, baseType: !2475, size: 64, offset: 384)
!2475 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2476, size: 64)
!2476 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hrtimer_clock_base", file: !133, line: 159, size: 512, align: 512, elements: !2477)
!2477 = !{!2478, !2496, !2497, !2500, !2505, !2506, !2510, !2514}
!2478 = !DIDerivedType(tag: DW_TAG_member, name: "cpu_base", scope: !2476, file: !133, line: 160, baseType: !2479, size: 64)
!2479 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2480, size: 64)
!2480 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hrtimer_cpu_base", file: !133, line: 214, size: 4608, align: 512, elements: !2481)
!2481 = !{!2482, !2483, !2484, !2485, !2486, !2487, !2488, !2489, !2490, !2491, !2492, !2493, !2494}
!2482 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2480, file: !133, line: 215, baseType: !1038)
!2483 = !DIDerivedType(tag: DW_TAG_member, name: "cpu", scope: !2480, file: !133, line: 216, baseType: !7, size: 32)
!2484 = !DIDerivedType(tag: DW_TAG_member, name: "active_bases", scope: !2480, file: !133, line: 217, baseType: !7, size: 32, offset: 32)
!2485 = !DIDerivedType(tag: DW_TAG_member, name: "clock_was_set_seq", scope: !2480, file: !133, line: 218, baseType: !7, size: 32, offset: 64)
!2486 = !DIDerivedType(tag: DW_TAG_member, name: "hres_active", scope: !2480, file: !133, line: 219, baseType: !7, size: 1, offset: 96, flags: DIFlagBitField, extraData: i64 96)
!2487 = !DIDerivedType(tag: DW_TAG_member, name: "in_hrtirq", scope: !2480, file: !133, line: 220, baseType: !7, size: 1, offset: 97, flags: DIFlagBitField, extraData: i64 96)
!2488 = !DIDerivedType(tag: DW_TAG_member, name: "hang_detected", scope: !2480, file: !133, line: 221, baseType: !7, size: 1, offset: 98, flags: DIFlagBitField, extraData: i64 96)
!2489 = !DIDerivedType(tag: DW_TAG_member, name: "softirq_activated", scope: !2480, file: !133, line: 222, baseType: !7, size: 1, offset: 99, flags: DIFlagBitField, extraData: i64 96)
!2490 = !DIDerivedType(tag: DW_TAG_member, name: "expires_next", scope: !2480, file: !133, line: 233, baseType: !2466, size: 64, offset: 128)
!2491 = !DIDerivedType(tag: DW_TAG_member, name: "next_timer", scope: !2480, file: !133, line: 234, baseType: !2473, size: 64, offset: 192)
!2492 = !DIDerivedType(tag: DW_TAG_member, name: "softirq_expires_next", scope: !2480, file: !133, line: 235, baseType: !2466, size: 64, offset: 256)
!2493 = !DIDerivedType(tag: DW_TAG_member, name: "softirq_next_timer", scope: !2480, file: !133, line: 236, baseType: !2473, size: 64, offset: 320)
!2494 = !DIDerivedType(tag: DW_TAG_member, name: "clock_base", scope: !2480, file: !133, line: 237, baseType: !2495, size: 4096, offset: 512)
!2495 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2476, size: 4096, elements: !276)
!2496 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !2476, file: !133, line: 161, baseType: !7, size: 32, offset: 64)
!2497 = !DIDerivedType(tag: DW_TAG_member, name: "clockid", scope: !2476, file: !133, line: 162, baseType: !2498, size: 32, offset: 96)
!2498 = !DIDerivedType(tag: DW_TAG_typedef, name: "clockid_t", file: !249, line: 27, baseType: !2499)
!2499 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_clockid_t", file: !538, line: 96, baseType: !294)
!2500 = !DIDerivedType(tag: DW_TAG_member, name: "seq", scope: !2476, file: !133, line: 163, baseType: !2501, size: 32, offset: 128)
!2501 = !DIDerivedType(tag: DW_TAG_typedef, name: "seqcount_raw_spinlock_t", file: !616, line: 276, baseType: !2502)
!2502 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seqcount_raw_spinlock", file: !616, line: 276, size: 32, elements: !2503)
!2503 = !{!2504}
!2504 = !DIDerivedType(tag: DW_TAG_member, name: "seqcount", scope: !2502, file: !616, line: 276, baseType: !620, size: 32)
!2505 = !DIDerivedType(tag: DW_TAG_member, name: "running", scope: !2476, file: !133, line: 164, baseType: !2473, size: 64, offset: 192)
!2506 = !DIDerivedType(tag: DW_TAG_member, name: "active", scope: !2476, file: !133, line: 165, baseType: !2507, size: 128, offset: 256)
!2507 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timerqueue_head", file: !2462, line: 14, size: 128, elements: !2508)
!2508 = !{!2509}
!2509 = !DIDerivedType(tag: DW_TAG_member, name: "rb_root", scope: !2507, file: !2462, line: 15, baseType: !1017, size: 128)
!2510 = !DIDerivedType(tag: DW_TAG_member, name: "get_time", scope: !2476, file: !133, line: 166, baseType: !2511, size: 64, offset: 384)
!2511 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2512, size: 64)
!2512 = !DISubroutineType(types: !2513)
!2513 = !{!2466}
!2514 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !2476, file: !133, line: 167, baseType: !2466, size: 64, offset: 448)
!2515 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !2458, file: !133, line: 123, baseType: !266, size: 8, offset: 448)
!2516 = !DIDerivedType(tag: DW_TAG_member, name: "is_rel", scope: !2458, file: !133, line: 124, baseType: !266, size: 8, offset: 456)
!2517 = !DIDerivedType(tag: DW_TAG_member, name: "is_soft", scope: !2458, file: !133, line: 125, baseType: !266, size: 8, offset: 464)
!2518 = !DIDerivedType(tag: DW_TAG_member, name: "is_hard", scope: !2458, file: !133, line: 126, baseType: !266, size: 8, offset: 472)
!2519 = !DIDerivedType(tag: DW_TAG_member, name: "inactive_timer", scope: !2442, file: !2390, line: 572, baseType: !2458, size: 512, offset: 1216)
!2520 = !DIDerivedType(tag: DW_TAG_member, name: "pi_se", scope: !2442, file: !2390, line: 580, baseType: !2521, size: 64, offset: 1728)
!2521 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2442, size: 64)
!2522 = !DIDerivedType(tag: DW_TAG_member, name: "policy", scope: !2389, file: !2390, line: 721, baseType: !7, size: 32, offset: 3584)
!2523 = !DIDerivedType(tag: DW_TAG_member, name: "nr_cpus_allowed", scope: !2389, file: !2390, line: 722, baseType: !294, size: 32, offset: 3616)
!2524 = !DIDerivedType(tag: DW_TAG_member, name: "cpus_ptr", scope: !2389, file: !2390, line: 723, baseType: !2525, size: 64, offset: 3648)
!2525 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2526, size: 64)
!2526 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2527)
!2527 = !DIDerivedType(tag: DW_TAG_typedef, name: "cpumask_t", file: !2528, line: 17, baseType: !2529)
!2528 = !DIFile(filename: "./include/linux/cpumask.h", directory: "/home/lizy2001/genbc/linux")
!2529 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cpumask", file: !2528, line: 17, size: 64, elements: !2530)
!2530 = !{!2531}
!2531 = !DIDerivedType(tag: DW_TAG_member, name: "bits", scope: !2529, file: !2528, line: 17, baseType: !2532, size: 64)
!2532 = !DICompositeType(tag: DW_TAG_array_type, baseType: !287, size: 64, elements: !2533)
!2533 = !{!2534}
!2534 = !DISubrange(count: 1)
!2535 = !DIDerivedType(tag: DW_TAG_member, name: "cpus_mask", scope: !2389, file: !2390, line: 724, baseType: !2527, size: 64, offset: 3712)
!2536 = !DIDerivedType(tag: DW_TAG_member, name: "sched_info", scope: !2389, file: !2390, line: 749, baseType: !2537, offset: 3776)
!2537 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sched_info", file: !2390, line: 290, elements: !372)
!2538 = !DIDerivedType(tag: DW_TAG_member, name: "tasks", scope: !2389, file: !2390, line: 751, baseType: !300, size: 128, offset: 3776)
!2539 = !DIDerivedType(tag: DW_TAG_member, name: "mm", scope: !2389, file: !2390, line: 757, baseType: !2155, size: 64, offset: 3904)
!2540 = !DIDerivedType(tag: DW_TAG_member, name: "active_mm", scope: !2389, file: !2390, line: 758, baseType: !2155, size: 64, offset: 3968)
!2541 = !DIDerivedType(tag: DW_TAG_member, name: "vmacache", scope: !2389, file: !2390, line: 761, baseType: !2542, size: 320, offset: 4032)
!2542 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vmacache", file: !2332, line: 34, size: 320, elements: !2543)
!2543 = !{!2544, !2545}
!2544 = !DIDerivedType(tag: DW_TAG_member, name: "seqnum", scope: !2542, file: !2332, line: 35, baseType: !284, size: 64)
!2545 = !DIDerivedType(tag: DW_TAG_member, name: "vmas", scope: !2542, file: !2332, line: 36, baseType: !2546, size: 256, offset: 64)
!2546 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2162, size: 256, elements: !258)
!2547 = !DIDerivedType(tag: DW_TAG_member, name: "exit_state", scope: !2389, file: !2390, line: 766, baseType: !294, size: 32, offset: 4352)
!2548 = !DIDerivedType(tag: DW_TAG_member, name: "exit_code", scope: !2389, file: !2390, line: 767, baseType: !294, size: 32, offset: 4384)
!2549 = !DIDerivedType(tag: DW_TAG_member, name: "exit_signal", scope: !2389, file: !2390, line: 768, baseType: !294, size: 32, offset: 4416)
!2550 = !DIDerivedType(tag: DW_TAG_member, name: "pdeath_signal", scope: !2389, file: !2390, line: 770, baseType: !294, size: 32, offset: 4448)
!2551 = !DIDerivedType(tag: DW_TAG_member, name: "jobctl", scope: !2389, file: !2390, line: 772, baseType: !287, size: 64, offset: 4480)
!2552 = !DIDerivedType(tag: DW_TAG_member, name: "personality", scope: !2389, file: !2390, line: 775, baseType: !7, size: 32, offset: 4544)
!2553 = !DIDerivedType(tag: DW_TAG_member, name: "sched_reset_on_fork", scope: !2389, file: !2390, line: 778, baseType: !7, size: 1, offset: 4576, flags: DIFlagBitField, extraData: i64 4576)
!2554 = !DIDerivedType(tag: DW_TAG_member, name: "sched_contributes_to_load", scope: !2389, file: !2390, line: 779, baseType: !7, size: 1, offset: 4577, flags: DIFlagBitField, extraData: i64 4576)
!2555 = !DIDerivedType(tag: DW_TAG_member, name: "sched_migrated", scope: !2389, file: !2390, line: 780, baseType: !7, size: 1, offset: 4578, flags: DIFlagBitField, extraData: i64 4576)
!2556 = !DIDerivedType(tag: DW_TAG_member, name: "sched_remote_wakeup", scope: !2389, file: !2390, line: 803, baseType: !7, size: 1, offset: 4608, flags: DIFlagBitField, extraData: i64 4608)
!2557 = !DIDerivedType(tag: DW_TAG_member, name: "in_execve", scope: !2389, file: !2390, line: 806, baseType: !7, size: 1, offset: 4609, flags: DIFlagBitField, extraData: i64 4608)
!2558 = !DIDerivedType(tag: DW_TAG_member, name: "in_iowait", scope: !2389, file: !2390, line: 807, baseType: !7, size: 1, offset: 4610, flags: DIFlagBitField, extraData: i64 4608)
!2559 = !DIDerivedType(tag: DW_TAG_member, name: "restore_sigmask", scope: !2389, file: !2390, line: 809, baseType: !7, size: 1, offset: 4611, flags: DIFlagBitField, extraData: i64 4608)
!2560 = !DIDerivedType(tag: DW_TAG_member, name: "brk_randomized", scope: !2389, file: !2390, line: 815, baseType: !7, size: 1, offset: 4612, flags: DIFlagBitField, extraData: i64 4608)
!2561 = !DIDerivedType(tag: DW_TAG_member, name: "atomic_flags", scope: !2389, file: !2390, line: 831, baseType: !287, size: 64, offset: 4672)
!2562 = !DIDerivedType(tag: DW_TAG_member, name: "restart_block", scope: !2389, file: !2390, line: 833, baseType: !2563, size: 384, offset: 4736)
!2563 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "restart_block", file: !138, line: 25, size: 384, elements: !2564)
!2564 = !{!2565, !2570}
!2565 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !2563, file: !138, line: 26, baseType: !2566, size: 64)
!2566 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2567, size: 64)
!2567 = !DISubroutineType(types: !2568)
!2568 = !{!31, !2569}
!2569 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2563, size: 64)
!2570 = !DIDerivedType(tag: DW_TAG_member, scope: !2563, file: !138, line: 27, baseType: !2571, size: 320, offset: 64)
!2571 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2563, file: !138, line: 27, size: 320, elements: !2572)
!2572 = !{!2573, !2583, !2609}
!2573 = !DIDerivedType(tag: DW_TAG_member, name: "futex", scope: !2571, file: !138, line: 36, baseType: !2574, size: 320)
!2574 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2571, file: !138, line: 29, size: 320, elements: !2575)
!2575 = !{!2576, !2578, !2579, !2580, !2581, !2582}
!2576 = !DIDerivedType(tag: DW_TAG_member, name: "uaddr", scope: !2574, file: !138, line: 30, baseType: !2577, size: 64)
!2577 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !261, size: 64)
!2578 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !2574, file: !138, line: 31, baseType: !261, size: 32, offset: 64)
!2579 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2574, file: !138, line: 32, baseType: !261, size: 32, offset: 96)
!2580 = !DIDerivedType(tag: DW_TAG_member, name: "bitset", scope: !2574, file: !138, line: 33, baseType: !261, size: 32, offset: 128)
!2581 = !DIDerivedType(tag: DW_TAG_member, name: "time", scope: !2574, file: !138, line: 34, baseType: !284, size: 64, offset: 192)
!2582 = !DIDerivedType(tag: DW_TAG_member, name: "uaddr2", scope: !2574, file: !138, line: 35, baseType: !2577, size: 64, offset: 256)
!2583 = !DIDerivedType(tag: DW_TAG_member, name: "nanosleep", scope: !2571, file: !138, line: 46, baseType: !2584, size: 192)
!2584 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2571, file: !138, line: 38, size: 192, elements: !2585)
!2585 = !{!2586, !2587, !2588, !2608}
!2586 = !DIDerivedType(tag: DW_TAG_member, name: "clockid", scope: !2584, file: !138, line: 39, baseType: !2498, size: 32)
!2587 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2584, file: !138, line: 40, baseType: !137, size: 32, offset: 32)
!2588 = !DIDerivedType(tag: DW_TAG_member, scope: !2584, file: !138, line: 41, baseType: !2589, size: 64, offset: 64)
!2589 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2584, file: !138, line: 41, size: 64, elements: !2590)
!2590 = !{!2591, !2599}
!2591 = !DIDerivedType(tag: DW_TAG_member, name: "rmtp", scope: !2589, file: !138, line: 42, baseType: !2592, size: 64)
!2592 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2593, size: 64)
!2593 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__kernel_timespec", file: !2594, line: 7, size: 128, elements: !2595)
!2594 = !DIFile(filename: "./include/uapi/linux/time_types.h", directory: "/home/lizy2001/genbc/linux")
!2595 = !{!2596, !2598}
!2596 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !2593, file: !2594, line: 8, baseType: !2597, size: 64)
!2597 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_time64_t", file: !538, line: 93, baseType: !356)
!2598 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !2593, file: !2594, line: 9, baseType: !356, size: 64, offset: 64)
!2599 = !DIDerivedType(tag: DW_TAG_member, name: "compat_rmtp", scope: !2589, file: !138, line: 43, baseType: !2600, size: 64)
!2600 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2601, size: 64)
!2601 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "old_timespec32", file: !2602, line: 7, size: 64, elements: !2603)
!2602 = !DIFile(filename: "./include/vdso/time32.h", directory: "/home/lizy2001/genbc/linux")
!2603 = !{!2604, !2607}
!2604 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !2601, file: !2602, line: 8, baseType: !2605, size: 32)
!2605 = !DIDerivedType(tag: DW_TAG_typedef, name: "old_time32_t", file: !2602, line: 5, baseType: !2606)
!2606 = !DIDerivedType(tag: DW_TAG_typedef, name: "s32", file: !262, line: 20, baseType: !1997)
!2607 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !2601, file: !2602, line: 9, baseType: !2606, size: 32, offset: 32)
!2608 = !DIDerivedType(tag: DW_TAG_member, name: "expires", scope: !2584, file: !138, line: 45, baseType: !284, size: 64, offset: 128)
!2609 = !DIDerivedType(tag: DW_TAG_member, name: "poll", scope: !2571, file: !138, line: 54, baseType: !2610, size: 256)
!2610 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2571, file: !138, line: 48, size: 256, elements: !2611)
!2611 = !{!2612, !2615, !2616, !2617, !2618}
!2612 = !DIDerivedType(tag: DW_TAG_member, name: "ufds", scope: !2610, file: !138, line: 49, baseType: !2613, size: 64)
!2613 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2614, size: 64)
!2614 = !DICompositeType(tag: DW_TAG_structure_type, name: "pollfd", file: !138, line: 14, flags: DIFlagFwdDecl)
!2615 = !DIDerivedType(tag: DW_TAG_member, name: "nfds", scope: !2610, file: !138, line: 50, baseType: !294, size: 32, offset: 64)
!2616 = !DIDerivedType(tag: DW_TAG_member, name: "has_timeout", scope: !2610, file: !138, line: 51, baseType: !294, size: 32, offset: 96)
!2617 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !2610, file: !138, line: 52, baseType: !287, size: 64, offset: 128)
!2618 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !2610, file: !138, line: 53, baseType: !287, size: 64, offset: 192)
!2619 = !DIDerivedType(tag: DW_TAG_member, name: "pid", scope: !2389, file: !2390, line: 835, baseType: !2620, size: 32, offset: 5120)
!2620 = !DIDerivedType(tag: DW_TAG_typedef, name: "pid_t", file: !249, line: 22, baseType: !2621)
!2621 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_pid_t", file: !538, line: 28, baseType: !294)
!2622 = !DIDerivedType(tag: DW_TAG_member, name: "tgid", scope: !2389, file: !2390, line: 836, baseType: !2620, size: 32, offset: 5152)
!2623 = !DIDerivedType(tag: DW_TAG_member, name: "stack_canary", scope: !2389, file: !2390, line: 840, baseType: !287, size: 64, offset: 5184)
!2624 = !DIDerivedType(tag: DW_TAG_member, name: "real_parent", scope: !2389, file: !2390, line: 849, baseType: !2388, size: 64, offset: 5248)
!2625 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !2389, file: !2390, line: 852, baseType: !2388, size: 64, offset: 5312)
!2626 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !2389, file: !2390, line: 857, baseType: !300, size: 128, offset: 5376)
!2627 = !DIDerivedType(tag: DW_TAG_member, name: "sibling", scope: !2389, file: !2390, line: 858, baseType: !300, size: 128, offset: 5504)
!2628 = !DIDerivedType(tag: DW_TAG_member, name: "group_leader", scope: !2389, file: !2390, line: 859, baseType: !2388, size: 64, offset: 5632)
!2629 = !DIDerivedType(tag: DW_TAG_member, name: "ptraced", scope: !2389, file: !2390, line: 867, baseType: !300, size: 128, offset: 5696)
!2630 = !DIDerivedType(tag: DW_TAG_member, name: "ptrace_entry", scope: !2389, file: !2390, line: 868, baseType: !300, size: 128, offset: 5824)
!2631 = !DIDerivedType(tag: DW_TAG_member, name: "thread_pid", scope: !2389, file: !2390, line: 871, baseType: !2632, size: 64, offset: 5952)
!2632 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2633, size: 64)
!2633 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pid", file: !166, line: 59, size: 768, elements: !2634)
!2634 = !{!2635, !2636, !2637, !2638, !2640, !2641, !2642, !2643}
!2635 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !2633, file: !166, line: 61, baseType: !322, size: 32)
!2636 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !2633, file: !166, line: 62, baseType: !7, size: 32, offset: 32)
!2637 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2633, file: !166, line: 63, baseType: !358, offset: 64)
!2638 = !DIDerivedType(tag: DW_TAG_member, name: "tasks", scope: !2633, file: !166, line: 65, baseType: !2639, size: 256, offset: 64)
!2639 = !DICompositeType(tag: DW_TAG_array_type, baseType: !854, size: 256, elements: !258)
!2640 = !DIDerivedType(tag: DW_TAG_member, name: "inodes", scope: !2633, file: !166, line: 66, baseType: !854, size: 64, offset: 320)
!2641 = !DIDerivedType(tag: DW_TAG_member, name: "wait_pidfd", scope: !2633, file: !166, line: 68, baseType: !375, size: 128, offset: 384)
!2642 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !2633, file: !166, line: 69, baseType: !593, size: 128, align: 64, offset: 512)
!2643 = !DIDerivedType(tag: DW_TAG_member, name: "numbers", scope: !2633, file: !166, line: 70, baseType: !2644, size: 128, offset: 640)
!2644 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2645, size: 128, elements: !2533)
!2645 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "upid", file: !166, line: 54, size: 128, elements: !2646)
!2646 = !{!2647, !2648}
!2647 = !DIDerivedType(tag: DW_TAG_member, name: "nr", scope: !2645, file: !166, line: 55, baseType: !294, size: 32)
!2648 = !DIDerivedType(tag: DW_TAG_member, name: "ns", scope: !2645, file: !166, line: 56, baseType: !2649, size: 64, offset: 64)
!2649 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2650, size: 64)
!2650 = !DICompositeType(tag: DW_TAG_structure_type, name: "pid_namespace", file: !166, line: 56, flags: DIFlagFwdDecl)
!2651 = !DIDerivedType(tag: DW_TAG_member, name: "pid_links", scope: !2389, file: !2390, line: 872, baseType: !2652, size: 512, offset: 6016)
!2652 = !DICompositeType(tag: DW_TAG_array_type, baseType: !858, size: 512, elements: !258)
!2653 = !DIDerivedType(tag: DW_TAG_member, name: "thread_group", scope: !2389, file: !2390, line: 873, baseType: !300, size: 128, offset: 6528)
!2654 = !DIDerivedType(tag: DW_TAG_member, name: "thread_node", scope: !2389, file: !2390, line: 874, baseType: !300, size: 128, offset: 6656)
!2655 = !DIDerivedType(tag: DW_TAG_member, name: "vfork_done", scope: !2389, file: !2390, line: 876, baseType: !2656, size: 64, offset: 6784)
!2656 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2657, size: 64)
!2657 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "completion", file: !2658, line: 26, size: 192, elements: !2659)
!2658 = !DIFile(filename: "./include/linux/completion.h", directory: "/home/lizy2001/genbc/linux")
!2659 = !{!2660, !2661}
!2660 = !DIDerivedType(tag: DW_TAG_member, name: "done", scope: !2657, file: !2658, line: 27, baseType: !7, size: 32)
!2661 = !DIDerivedType(tag: DW_TAG_member, name: "wait", scope: !2657, file: !2658, line: 28, baseType: !2662, size: 128, offset: 64)
!2662 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "swait_queue_head", file: !2663, line: 43, size: 128, elements: !2664)
!2663 = !DIFile(filename: "./include/linux/swait.h", directory: "/home/lizy2001/genbc/linux")
!2664 = !{!2665, !2666}
!2665 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2662, file: !2663, line: 44, baseType: !1038)
!2666 = !DIDerivedType(tag: DW_TAG_member, name: "task_list", scope: !2662, file: !2663, line: 45, baseType: !300, size: 128)
!2667 = !DIDerivedType(tag: DW_TAG_member, name: "set_child_tid", scope: !2389, file: !2390, line: 879, baseType: !938, size: 64, offset: 6848)
!2668 = !DIDerivedType(tag: DW_TAG_member, name: "clear_child_tid", scope: !2389, file: !2390, line: 882, baseType: !938, size: 64, offset: 6912)
!2669 = !DIDerivedType(tag: DW_TAG_member, name: "utime", scope: !2389, file: !2390, line: 884, baseType: !284, size: 64, offset: 6976)
!2670 = !DIDerivedType(tag: DW_TAG_member, name: "stime", scope: !2389, file: !2390, line: 885, baseType: !284, size: 64, offset: 7040)
!2671 = !DIDerivedType(tag: DW_TAG_member, name: "gtime", scope: !2389, file: !2390, line: 890, baseType: !284, size: 64, offset: 7104)
!2672 = !DIDerivedType(tag: DW_TAG_member, name: "prev_cputime", scope: !2389, file: !2390, line: 891, baseType: !2673, size: 128, offset: 7168)
!2673 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "prev_cputime", file: !2390, line: 242, size: 128, elements: !2674)
!2674 = !{!2675, !2676, !2677}
!2675 = !DIDerivedType(tag: DW_TAG_member, name: "utime", scope: !2673, file: !2390, line: 244, baseType: !284, size: 64)
!2676 = !DIDerivedType(tag: DW_TAG_member, name: "stime", scope: !2673, file: !2390, line: 245, baseType: !284, size: 64, offset: 64)
!2677 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2673, file: !2390, line: 246, baseType: !1038, offset: 128)
!2678 = !DIDerivedType(tag: DW_TAG_member, name: "nvcsw", scope: !2389, file: !2390, line: 900, baseType: !287, size: 64, offset: 7296)
!2679 = !DIDerivedType(tag: DW_TAG_member, name: "nivcsw", scope: !2389, file: !2390, line: 901, baseType: !287, size: 64, offset: 7360)
!2680 = !DIDerivedType(tag: DW_TAG_member, name: "start_time", scope: !2389, file: !2390, line: 904, baseType: !284, size: 64, offset: 7424)
!2681 = !DIDerivedType(tag: DW_TAG_member, name: "start_boottime", scope: !2389, file: !2390, line: 907, baseType: !284, size: 64, offset: 7488)
!2682 = !DIDerivedType(tag: DW_TAG_member, name: "min_flt", scope: !2389, file: !2390, line: 910, baseType: !287, size: 64, offset: 7552)
!2683 = !DIDerivedType(tag: DW_TAG_member, name: "maj_flt", scope: !2389, file: !2390, line: 911, baseType: !287, size: 64, offset: 7616)
!2684 = !DIDerivedType(tag: DW_TAG_member, name: "posix_cputimers", scope: !2389, file: !2390, line: 914, baseType: !2685, size: 640, offset: 7680)
!2685 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "posix_cputimers", file: !2686, line: 123, size: 640, elements: !2687)
!2686 = !DIFile(filename: "./include/linux/posix-timers.h", directory: "/home/lizy2001/genbc/linux")
!2687 = !{!2688, !2694, !2695}
!2688 = !DIDerivedType(tag: DW_TAG_member, name: "bases", scope: !2685, file: !2686, line: 124, baseType: !2689, size: 576)
!2689 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2690, size: 576, elements: !506)
!2690 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "posix_cputimer_base", file: !2686, line: 108, size: 192, elements: !2691)
!2691 = !{!2692, !2693}
!2692 = !DIDerivedType(tag: DW_TAG_member, name: "nextevt", scope: !2690, file: !2686, line: 109, baseType: !284, size: 64)
!2693 = !DIDerivedType(tag: DW_TAG_member, name: "tqhead", scope: !2690, file: !2686, line: 110, baseType: !2507, size: 128, offset: 64)
!2694 = !DIDerivedType(tag: DW_TAG_member, name: "timers_active", scope: !2685, file: !2686, line: 125, baseType: !7, size: 32, offset: 576)
!2695 = !DIDerivedType(tag: DW_TAG_member, name: "expiry_active", scope: !2685, file: !2686, line: 126, baseType: !7, size: 32, offset: 608)
!2696 = !DIDerivedType(tag: DW_TAG_member, name: "posix_cputimers_work", scope: !2389, file: !2390, line: 917, baseType: !2697, size: 192, offset: 8320)
!2697 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "posix_cputimers_work", file: !2686, line: 134, size: 192, elements: !2698)
!2698 = !{!2699, !2700}
!2699 = !DIDerivedType(tag: DW_TAG_member, name: "work", scope: !2697, file: !2686, line: 135, baseType: !593, size: 128, align: 64)
!2700 = !DIDerivedType(tag: DW_TAG_member, name: "scheduled", scope: !2697, file: !2686, line: 136, baseType: !7, size: 32, offset: 128)
!2701 = !DIDerivedType(tag: DW_TAG_member, name: "ptracer_cred", scope: !2389, file: !2390, line: 923, baseType: !2702, size: 64, offset: 8512)
!2702 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2703, size: 64)
!2703 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2704)
!2704 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cred", file: !2705, line: 111, size: 1280, elements: !2706)
!2705 = !DIFile(filename: "./include/linux/cred.h", directory: "/home/lizy2001/genbc/linux")
!2706 = !{!2707, !2708, !2709, !2710, !2711, !2712, !2713, !2714, !2715, !2716, !2717, !2724, !2725, !2726, !2727, !2728, !2729, !2833, !2834, !2835, !2836, !2862, !3005, !3015}
!2707 = !DIDerivedType(tag: DW_TAG_member, name: "usage", scope: !2704, file: !2705, line: 112, baseType: !326, size: 32)
!2708 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !2704, file: !2705, line: 120, baseType: !655, size: 32, offset: 32)
!2709 = !DIDerivedType(tag: DW_TAG_member, name: "gid", scope: !2704, file: !2705, line: 121, baseType: !663, size: 32, offset: 64)
!2710 = !DIDerivedType(tag: DW_TAG_member, name: "suid", scope: !2704, file: !2705, line: 122, baseType: !655, size: 32, offset: 96)
!2711 = !DIDerivedType(tag: DW_TAG_member, name: "sgid", scope: !2704, file: !2705, line: 123, baseType: !663, size: 32, offset: 128)
!2712 = !DIDerivedType(tag: DW_TAG_member, name: "euid", scope: !2704, file: !2705, line: 124, baseType: !655, size: 32, offset: 160)
!2713 = !DIDerivedType(tag: DW_TAG_member, name: "egid", scope: !2704, file: !2705, line: 125, baseType: !663, size: 32, offset: 192)
!2714 = !DIDerivedType(tag: DW_TAG_member, name: "fsuid", scope: !2704, file: !2705, line: 126, baseType: !655, size: 32, offset: 224)
!2715 = !DIDerivedType(tag: DW_TAG_member, name: "fsgid", scope: !2704, file: !2705, line: 127, baseType: !663, size: 32, offset: 256)
!2716 = !DIDerivedType(tag: DW_TAG_member, name: "securebits", scope: !2704, file: !2705, line: 128, baseType: !7, size: 32, offset: 288)
!2717 = !DIDerivedType(tag: DW_TAG_member, name: "cap_inheritable", scope: !2704, file: !2705, line: 129, baseType: !2718, size: 64, offset: 320)
!2718 = !DIDerivedType(tag: DW_TAG_typedef, name: "kernel_cap_t", file: !2719, line: 26, baseType: !2720)
!2719 = !DIFile(filename: "./include/linux/capability.h", directory: "/home/lizy2001/genbc/linux")
!2720 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernel_cap_struct", file: !2719, line: 24, size: 64, elements: !2721)
!2721 = !{!2722}
!2722 = !DIDerivedType(tag: DW_TAG_member, name: "cap", scope: !2720, file: !2719, line: 25, baseType: !2723, size: 64)
!2723 = !DICompositeType(tag: DW_TAG_array_type, baseType: !263, size: 64, elements: !1583)
!2724 = !DIDerivedType(tag: DW_TAG_member, name: "cap_permitted", scope: !2704, file: !2705, line: 130, baseType: !2718, size: 64, offset: 384)
!2725 = !DIDerivedType(tag: DW_TAG_member, name: "cap_effective", scope: !2704, file: !2705, line: 131, baseType: !2718, size: 64, offset: 448)
!2726 = !DIDerivedType(tag: DW_TAG_member, name: "cap_bset", scope: !2704, file: !2705, line: 132, baseType: !2718, size: 64, offset: 512)
!2727 = !DIDerivedType(tag: DW_TAG_member, name: "cap_ambient", scope: !2704, file: !2705, line: 133, baseType: !2718, size: 64, offset: 576)
!2728 = !DIDerivedType(tag: DW_TAG_member, name: "jit_keyring", scope: !2704, file: !2705, line: 135, baseType: !268, size: 8, offset: 640)
!2729 = !DIDerivedType(tag: DW_TAG_member, name: "session_keyring", scope: !2704, file: !2705, line: 137, baseType: !2730, size: 64, offset: 704)
!2730 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2731, size: 64)
!2731 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "key", file: !2732, line: 189, size: 1664, elements: !2733)
!2732 = !DIFile(filename: "./include/linux/key.h", directory: "/home/lizy2001/genbc/linux")
!2733 = !{!2734, !2735, !2738, !2743, !2744, !2747, !2748, !2753, !2754, !2755, !2756, !2758, !2759, !2760, !2761, !2762, !2797, !2818}
!2734 = !DIDerivedType(tag: DW_TAG_member, name: "usage", scope: !2731, file: !2732, line: 190, baseType: !322, size: 32)
!2735 = !DIDerivedType(tag: DW_TAG_member, name: "serial", scope: !2731, file: !2732, line: 191, baseType: !2736, size: 32, offset: 32)
!2736 = !DIDerivedType(tag: DW_TAG_typedef, name: "key_serial_t", file: !2732, line: 28, baseType: !2737)
!2737 = !DIDerivedType(tag: DW_TAG_typedef, name: "int32_t", file: !249, line: 98, baseType: !2606)
!2738 = !DIDerivedType(tag: DW_TAG_member, scope: !2731, file: !2732, line: 192, baseType: !2739, size: 192, offset: 64)
!2739 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2731, file: !2732, line: 192, size: 192, elements: !2740)
!2740 = !{!2741, !2742}
!2741 = !DIDerivedType(tag: DW_TAG_member, name: "graveyard_link", scope: !2739, file: !2732, line: 193, baseType: !300, size: 128)
!2742 = !DIDerivedType(tag: DW_TAG_member, name: "serial_node", scope: !2739, file: !2732, line: 194, baseType: !1025, size: 192, align: 64)
!2743 = !DIDerivedType(tag: DW_TAG_member, name: "sem", scope: !2731, file: !2732, line: 199, baseType: !1032, size: 256, offset: 256)
!2744 = !DIDerivedType(tag: DW_TAG_member, name: "user", scope: !2731, file: !2732, line: 200, baseType: !2745, size: 64, offset: 512)
!2745 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2746, size: 64)
!2746 = !DICompositeType(tag: DW_TAG_structure_type, name: "key_user", file: !2732, line: 200, flags: DIFlagFwdDecl)
!2747 = !DIDerivedType(tag: DW_TAG_member, name: "security", scope: !2731, file: !2732, line: 201, baseType: !247, size: 64, offset: 576)
!2748 = !DIDerivedType(tag: DW_TAG_member, scope: !2731, file: !2732, line: 202, baseType: !2749, size: 64, offset: 640)
!2749 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2731, file: !2732, line: 202, size: 64, elements: !2750)
!2750 = !{!2751, !2752}
!2751 = !DIDerivedType(tag: DW_TAG_member, name: "expiry", scope: !2749, file: !2732, line: 203, baseType: !756, size: 64)
!2752 = !DIDerivedType(tag: DW_TAG_member, name: "revoked_at", scope: !2749, file: !2732, line: 204, baseType: !756, size: 64)
!2753 = !DIDerivedType(tag: DW_TAG_member, name: "last_used_at", scope: !2731, file: !2732, line: 206, baseType: !756, size: 64, offset: 704)
!2754 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !2731, file: !2732, line: 207, baseType: !655, size: 32, offset: 768)
!2755 = !DIDerivedType(tag: DW_TAG_member, name: "gid", scope: !2731, file: !2732, line: 208, baseType: !663, size: 32, offset: 800)
!2756 = !DIDerivedType(tag: DW_TAG_member, name: "perm", scope: !2731, file: !2732, line: 209, baseType: !2757, size: 32, offset: 832)
!2757 = !DIDerivedType(tag: DW_TAG_typedef, name: "key_perm_t", file: !2732, line: 31, baseType: !775)
!2758 = !DIDerivedType(tag: DW_TAG_member, name: "quotalen", scope: !2731, file: !2732, line: 210, baseType: !392, size: 16, offset: 864)
!2759 = !DIDerivedType(tag: DW_TAG_member, name: "datalen", scope: !2731, file: !2732, line: 211, baseType: !392, size: 16, offset: 880)
!2760 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !2731, file: !2732, line: 215, baseType: !1187, size: 16, offset: 896)
!2761 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2731, file: !2732, line: 222, baseType: !287, size: 64, offset: 960)
!2762 = !DIDerivedType(tag: DW_TAG_member, scope: !2731, file: !2732, line: 239, baseType: !2763, size: 320, offset: 1024)
!2763 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2731, file: !2732, line: 239, size: 320, elements: !2764)
!2764 = !{!2765, !2789}
!2765 = !DIDerivedType(tag: DW_TAG_member, name: "index_key", scope: !2763, file: !2732, line: 240, baseType: !2766, size: 320)
!2766 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "keyring_index_key", file: !2732, line: 108, size: 320, elements: !2767)
!2767 = !{!2768, !2769, !2778, !2781, !2788}
!2768 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !2766, file: !2732, line: 110, baseType: !287, size: 64)
!2769 = !DIDerivedType(tag: DW_TAG_member, scope: !2766, file: !2732, line: 111, baseType: !2770, size: 64, offset: 64)
!2770 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2766, file: !2732, line: 111, size: 64, elements: !2771)
!2771 = !{!2772, !2777}
!2772 = !DIDerivedType(tag: DW_TAG_member, scope: !2770, file: !2732, line: 112, baseType: !2773, size: 64)
!2773 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2770, file: !2732, line: 112, size: 64, elements: !2774)
!2774 = !{!2775, !2776}
!2775 = !DIDerivedType(tag: DW_TAG_member, name: "desc_len", scope: !2773, file: !2732, line: 114, baseType: !1124, size: 16)
!2776 = !DIDerivedType(tag: DW_TAG_member, name: "desc", scope: !2773, file: !2732, line: 115, baseType: !271, size: 48, offset: 16)
!2777 = !DIDerivedType(tag: DW_TAG_member, name: "x", scope: !2770, file: !2732, line: 121, baseType: !287, size: 64)
!2778 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2766, file: !2732, line: 123, baseType: !2779, size: 64, offset: 128)
!2779 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2780, size: 64)
!2780 = !DICompositeType(tag: DW_TAG_structure_type, name: "key_type", file: !2732, line: 96, flags: DIFlagFwdDecl)
!2781 = !DIDerivedType(tag: DW_TAG_member, name: "domain_tag", scope: !2766, file: !2732, line: 124, baseType: !2782, size: 64, offset: 192)
!2782 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2783, size: 64)
!2783 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "key_tag", file: !2732, line: 102, size: 192, elements: !2784)
!2784 = !{!2785, !2786, !2787}
!2785 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !2783, file: !2732, line: 103, baseType: !593, size: 128, align: 64)
!2786 = !DIDerivedType(tag: DW_TAG_member, name: "usage", scope: !2783, file: !2732, line: 104, baseType: !322, size: 32, offset: 128)
!2787 = !DIDerivedType(tag: DW_TAG_member, name: "removed", scope: !2783, file: !2732, line: 105, baseType: !339, size: 8, offset: 160)
!2788 = !DIDerivedType(tag: DW_TAG_member, name: "description", scope: !2766, file: !2732, line: 125, baseType: !468, size: 64, offset: 256)
!2789 = !DIDerivedType(tag: DW_TAG_member, scope: !2763, file: !2732, line: 241, baseType: !2790, size: 320)
!2790 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2763, file: !2732, line: 241, size: 320, elements: !2791)
!2791 = !{!2792, !2793, !2794, !2795, !2796}
!2792 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !2790, file: !2732, line: 242, baseType: !287, size: 64)
!2793 = !DIDerivedType(tag: DW_TAG_member, name: "len_desc", scope: !2790, file: !2732, line: 243, baseType: !287, size: 64, offset: 64)
!2794 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2790, file: !2732, line: 244, baseType: !2779, size: 64, offset: 128)
!2795 = !DIDerivedType(tag: DW_TAG_member, name: "domain_tag", scope: !2790, file: !2732, line: 245, baseType: !2782, size: 64, offset: 192)
!2796 = !DIDerivedType(tag: DW_TAG_member, name: "description", scope: !2790, file: !2732, line: 246, baseType: !505, size: 64, offset: 256)
!2797 = !DIDerivedType(tag: DW_TAG_member, scope: !2731, file: !2732, line: 254, baseType: !2798, size: 256, offset: 1344)
!2798 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2731, file: !2732, line: 254, size: 256, elements: !2799)
!2799 = !{!2800, !2806}
!2800 = !DIDerivedType(tag: DW_TAG_member, name: "payload", scope: !2798, file: !2732, line: 255, baseType: !2801, size: 256)
!2801 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "key_payload", file: !2732, line: 128, size: 256, elements: !2802)
!2802 = !{!2803, !2804}
!2803 = !DIDerivedType(tag: DW_TAG_member, name: "rcu_data0", scope: !2801, file: !2732, line: 129, baseType: !247, size: 64)
!2804 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !2801, file: !2732, line: 130, baseType: !2805, size: 256)
!2805 = !DICompositeType(tag: DW_TAG_array_type, baseType: !247, size: 256, elements: !258)
!2806 = !DIDerivedType(tag: DW_TAG_member, scope: !2798, file: !2732, line: 256, baseType: !2807, size: 256)
!2807 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2798, file: !2732, line: 256, size: 256, elements: !2808)
!2808 = !{!2809, !2810}
!2809 = !DIDerivedType(tag: DW_TAG_member, name: "name_link", scope: !2807, file: !2732, line: 258, baseType: !300, size: 128)
!2810 = !DIDerivedType(tag: DW_TAG_member, name: "keys", scope: !2807, file: !2732, line: 259, baseType: !2811, size: 128, offset: 128)
!2811 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "assoc_array", file: !2812, line: 22, size: 128, elements: !2813)
!2812 = !DIFile(filename: "./include/linux/assoc_array.h", directory: "/home/lizy2001/genbc/linux")
!2813 = !{!2814, !2817}
!2814 = !DIDerivedType(tag: DW_TAG_member, name: "root", scope: !2811, file: !2812, line: 23, baseType: !2815, size: 64)
!2815 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2816, size: 64)
!2816 = !DICompositeType(tag: DW_TAG_structure_type, name: "assoc_array_ptr", file: !2812, line: 23, flags: DIFlagFwdDecl)
!2817 = !DIDerivedType(tag: DW_TAG_member, name: "nr_leaves_on_tree", scope: !2811, file: !2812, line: 24, baseType: !287, size: 64, offset: 64)
!2818 = !DIDerivedType(tag: DW_TAG_member, name: "restrict_link", scope: !2731, file: !2732, line: 274, baseType: !2819, size: 64, offset: 1600)
!2819 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2820, size: 64)
!2820 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "key_restriction", file: !2732, line: 170, size: 192, elements: !2821)
!2821 = !{!2822, !2831, !2832}
!2822 = !DIDerivedType(tag: DW_TAG_member, name: "check", scope: !2820, file: !2732, line: 171, baseType: !2823, size: 64)
!2823 = !DIDerivedType(tag: DW_TAG_typedef, name: "key_restrict_link_func_t", file: !2732, line: 165, baseType: !2824)
!2824 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2825, size: 64)
!2825 = !DISubroutineType(types: !2826)
!2826 = !{!294, !2730, !2827, !2829, !2730}
!2827 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2828, size: 64)
!2828 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2780)
!2829 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2830, size: 64)
!2830 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2801)
!2831 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !2820, file: !2732, line: 172, baseType: !2730, size: 64, offset: 64)
!2832 = !DIDerivedType(tag: DW_TAG_member, name: "keytype", scope: !2820, file: !2732, line: 173, baseType: !2779, size: 64, offset: 128)
!2833 = !DIDerivedType(tag: DW_TAG_member, name: "process_keyring", scope: !2704, file: !2705, line: 138, baseType: !2730, size: 64, offset: 768)
!2834 = !DIDerivedType(tag: DW_TAG_member, name: "thread_keyring", scope: !2704, file: !2705, line: 139, baseType: !2730, size: 64, offset: 832)
!2835 = !DIDerivedType(tag: DW_TAG_member, name: "request_key_auth", scope: !2704, file: !2705, line: 140, baseType: !2730, size: 64, offset: 896)
!2836 = !DIDerivedType(tag: DW_TAG_member, name: "user", scope: !2704, file: !2705, line: 145, baseType: !2837, size: 64, offset: 960)
!2837 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2838, size: 64)
!2838 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "user_struct", file: !2839, line: 13, size: 896, elements: !2840)
!2839 = !DIFile(filename: "./include/linux/sched/user.h", directory: "/home/lizy2001/genbc/linux")
!2840 = !{!2841, !2842, !2843, !2844, !2845, !2846, !2847, !2848, !2849, !2850, !2851}
!2841 = !DIDerivedType(tag: DW_TAG_member, name: "__count", scope: !2838, file: !2839, line: 14, baseType: !322, size: 32)
!2842 = !DIDerivedType(tag: DW_TAG_member, name: "processes", scope: !2838, file: !2839, line: 15, baseType: !326, size: 32, offset: 32)
!2843 = !DIDerivedType(tag: DW_TAG_member, name: "sigpending", scope: !2838, file: !2839, line: 16, baseType: !326, size: 32, offset: 64)
!2844 = !DIDerivedType(tag: DW_TAG_member, name: "epoll_watches", scope: !2838, file: !2839, line: 21, baseType: !348, size: 64, offset: 128)
!2845 = !DIDerivedType(tag: DW_TAG_member, name: "locked_shm", scope: !2838, file: !2839, line: 27, baseType: !287, size: 64, offset: 192)
!2846 = !DIDerivedType(tag: DW_TAG_member, name: "unix_inflight", scope: !2838, file: !2839, line: 28, baseType: !287, size: 64, offset: 256)
!2847 = !DIDerivedType(tag: DW_TAG_member, name: "pipe_bufs", scope: !2838, file: !2839, line: 29, baseType: !348, size: 64, offset: 320)
!2848 = !DIDerivedType(tag: DW_TAG_member, name: "uidhash_node", scope: !2838, file: !2839, line: 32, baseType: !858, size: 128, offset: 384)
!2849 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !2838, file: !2839, line: 33, baseType: !655, size: 32, offset: 512)
!2850 = !DIDerivedType(tag: DW_TAG_member, name: "locked_vm", scope: !2838, file: !2839, line: 37, baseType: !348, size: 64, offset: 576)
!2851 = !DIDerivedType(tag: DW_TAG_member, name: "ratelimit", scope: !2838, file: !2839, line: 44, baseType: !2852, size: 256, offset: 640)
!2852 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ratelimit_state", file: !2853, line: 15, size: 256, elements: !2854)
!2853 = !DIFile(filename: "./include/linux/ratelimit_types.h", directory: "/home/lizy2001/genbc/linux")
!2854 = !{!2855, !2856, !2857, !2858, !2859, !2860, !2861}
!2855 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2852, file: !2853, line: 16, baseType: !1038)
!2856 = !DIDerivedType(tag: DW_TAG_member, name: "interval", scope: !2852, file: !2853, line: 18, baseType: !294, size: 32)
!2857 = !DIDerivedType(tag: DW_TAG_member, name: "burst", scope: !2852, file: !2853, line: 19, baseType: !294, size: 32, offset: 32)
!2858 = !DIDerivedType(tag: DW_TAG_member, name: "printed", scope: !2852, file: !2853, line: 20, baseType: !294, size: 32, offset: 64)
!2859 = !DIDerivedType(tag: DW_TAG_member, name: "missed", scope: !2852, file: !2853, line: 21, baseType: !294, size: 32, offset: 96)
!2860 = !DIDerivedType(tag: DW_TAG_member, name: "begin", scope: !2852, file: !2853, line: 22, baseType: !287, size: 64, offset: 128)
!2861 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2852, file: !2853, line: 23, baseType: !287, size: 64, offset: 192)
!2862 = !DIDerivedType(tag: DW_TAG_member, name: "user_ns", scope: !2704, file: !2705, line: 146, baseType: !2863, size: 64, offset: 1024)
!2863 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2864, size: 64)
!2864 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "user_namespace", file: !2865, line: 56, size: 4160, elements: !2866)
!2865 = !DIFile(filename: "./include/linux/user_namespace.h", directory: "/home/lizy2001/genbc/linux")
!2866 = !{!2867, !2887, !2888, !2889, !2890, !2891, !2892, !2893, !2894, !2904, !2905, !2906, !2907, !2908, !2909, !2990, !2991, !3003}
!2867 = !DIDerivedType(tag: DW_TAG_member, name: "uid_map", scope: !2864, file: !2865, line: 57, baseType: !2868, size: 576)
!2868 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uid_gid_map", file: !2865, line: 23, size: 576, elements: !2869)
!2869 = !{!2870, !2871}
!2870 = !DIDerivedType(tag: DW_TAG_member, name: "nr_extents", scope: !2868, file: !2865, line: 24, baseType: !261, size: 32)
!2871 = !DIDerivedType(tag: DW_TAG_member, scope: !2868, file: !2865, line: 25, baseType: !2872, size: 512, offset: 64)
!2872 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2868, file: !2865, line: 25, size: 512, elements: !2873)
!2873 = !{!2874, !2881}
!2874 = !DIDerivedType(tag: DW_TAG_member, name: "extent", scope: !2872, file: !2865, line: 26, baseType: !2875, size: 480)
!2875 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2876, size: 480, elements: !2052)
!2876 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uid_gid_extent", file: !2865, line: 17, size: 96, elements: !2877)
!2877 = !{!2878, !2879, !2880}
!2878 = !DIDerivedType(tag: DW_TAG_member, name: "first", scope: !2876, file: !2865, line: 18, baseType: !261, size: 32)
!2879 = !DIDerivedType(tag: DW_TAG_member, name: "lower_first", scope: !2876, file: !2865, line: 19, baseType: !261, size: 32, offset: 32)
!2880 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !2876, file: !2865, line: 20, baseType: !261, size: 32, offset: 64)
!2881 = !DIDerivedType(tag: DW_TAG_member, scope: !2872, file: !2865, line: 27, baseType: !2882, size: 128)
!2882 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2872, file: !2865, line: 27, size: 128, elements: !2883)
!2883 = !{!2884, !2886}
!2884 = !DIDerivedType(tag: DW_TAG_member, name: "forward", scope: !2882, file: !2865, line: 28, baseType: !2885, size: 64)
!2885 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2876, size: 64)
!2886 = !DIDerivedType(tag: DW_TAG_member, name: "reverse", scope: !2882, file: !2865, line: 29, baseType: !2885, size: 64, offset: 64)
!2887 = !DIDerivedType(tag: DW_TAG_member, name: "gid_map", scope: !2864, file: !2865, line: 58, baseType: !2868, size: 576, offset: 576)
!2888 = !DIDerivedType(tag: DW_TAG_member, name: "projid_map", scope: !2864, file: !2865, line: 59, baseType: !2868, size: 576, offset: 1152)
!2889 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !2864, file: !2865, line: 60, baseType: !326, size: 32, offset: 1728)
!2890 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !2864, file: !2865, line: 61, baseType: !2863, size: 64, offset: 1792)
!2891 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !2864, file: !2865, line: 62, baseType: !294, size: 32, offset: 1856)
!2892 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !2864, file: !2865, line: 63, baseType: !655, size: 32, offset: 1888)
!2893 = !DIDerivedType(tag: DW_TAG_member, name: "group", scope: !2864, file: !2865, line: 64, baseType: !663, size: 32, offset: 1920)
!2894 = !DIDerivedType(tag: DW_TAG_member, name: "ns", scope: !2864, file: !2865, line: 65, baseType: !2895, size: 192, offset: 1984)
!2895 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ns_common", file: !2896, line: 7, size: 192, elements: !2897)
!2896 = !DIFile(filename: "./include/linux/ns_common.h", directory: "/home/lizy2001/genbc/linux")
!2897 = !{!2898, !2899, !2903}
!2898 = !DIDerivedType(tag: DW_TAG_member, name: "stashed", scope: !2895, file: !2896, line: 8, baseType: !348, size: 64)
!2899 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !2895, file: !2896, line: 9, baseType: !2900, size: 64, offset: 64)
!2900 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2901, size: 64)
!2901 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2902)
!2902 = !DICompositeType(tag: DW_TAG_structure_type, name: "proc_ns_operations", file: !2896, line: 5, flags: DIFlagFwdDecl)
!2903 = !DIDerivedType(tag: DW_TAG_member, name: "inum", scope: !2895, file: !2896, line: 10, baseType: !7, size: 32, offset: 128)
!2904 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2864, file: !2865, line: 66, baseType: !287, size: 64, offset: 2176)
!2905 = !DIDerivedType(tag: DW_TAG_member, name: "keyring_name_list", scope: !2864, file: !2865, line: 74, baseType: !300, size: 128, offset: 2240)
!2906 = !DIDerivedType(tag: DW_TAG_member, name: "user_keyring_register", scope: !2864, file: !2865, line: 75, baseType: !2730, size: 64, offset: 2368)
!2907 = !DIDerivedType(tag: DW_TAG_member, name: "keyring_sem", scope: !2864, file: !2865, line: 76, baseType: !1032, size: 256, offset: 2432)
!2908 = !DIDerivedType(tag: DW_TAG_member, name: "work", scope: !2864, file: !2865, line: 83, baseType: !401, size: 256, offset: 2688)
!2909 = !DIDerivedType(tag: DW_TAG_member, name: "set", scope: !2864, file: !2865, line: 85, baseType: !2910, size: 768, offset: 2944)
!2910 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ctl_table_set", file: !2911, line: 156, size: 768, elements: !2912)
!2911 = !DIFile(filename: "./include/linux/sysctl.h", directory: "/home/lizy2001/genbc/linux")
!2912 = !{!2913, !2918}
!2913 = !DIDerivedType(tag: DW_TAG_member, name: "is_seen", scope: !2910, file: !2911, line: 157, baseType: !2914, size: 64)
!2914 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2915, size: 64)
!2915 = !DISubroutineType(types: !2916)
!2916 = !{!294, !2917}
!2917 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2910, size: 64)
!2918 = !DIDerivedType(tag: DW_TAG_member, name: "dir", scope: !2910, file: !2911, line: 158, baseType: !2919, size: 704, offset: 64)
!2919 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ctl_dir", file: !2911, line: 150, size: 704, elements: !2920)
!2920 = !{!2921, !2989}
!2921 = !DIDerivedType(tag: DW_TAG_member, name: "header", scope: !2919, file: !2911, line: 152, baseType: !2922, size: 640)
!2922 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ctl_table_header", file: !2911, line: 131, size: 640, elements: !2923)
!2923 = !{!2924, !2957, !2958, !2959, !2979, !2980, !2982, !2988}
!2924 = !DIDerivedType(tag: DW_TAG_member, scope: !2922, file: !2911, line: 132, baseType: !2925, size: 192)
!2925 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2922, file: !2911, line: 132, size: 192, elements: !2926)
!2926 = !{!2927, !2956}
!2927 = !DIDerivedType(tag: DW_TAG_member, scope: !2925, file: !2911, line: 133, baseType: !2928, size: 192)
!2928 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2925, file: !2911, line: 133, size: 192, elements: !2929)
!2929 = !{!2930, !2953, !2954, !2955}
!2930 = !DIDerivedType(tag: DW_TAG_member, name: "ctl_table", scope: !2928, file: !2911, line: 134, baseType: !2931, size: 64)
!2931 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2932, size: 64)
!2932 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ctl_table", file: !2911, line: 112, size: 512, elements: !2933)
!2933 = !{!2934, !2935, !2936, !2937, !2938, !2939, !2945, !2951, !2952}
!2934 = !DIDerivedType(tag: DW_TAG_member, name: "procname", scope: !2932, file: !2911, line: 113, baseType: !468, size: 64)
!2935 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !2932, file: !2911, line: 114, baseType: !247, size: 64, offset: 64)
!2936 = !DIDerivedType(tag: DW_TAG_member, name: "maxlen", scope: !2932, file: !2911, line: 115, baseType: !294, size: 32, offset: 128)
!2937 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !2932, file: !2911, line: 116, baseType: !545, size: 16, offset: 160)
!2938 = !DIDerivedType(tag: DW_TAG_member, name: "child", scope: !2932, file: !2911, line: 117, baseType: !2931, size: 64, offset: 192)
!2939 = !DIDerivedType(tag: DW_TAG_member, name: "proc_handler", scope: !2932, file: !2911, line: 118, baseType: !2940, size: 64, offset: 256)
!2940 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2941, size: 64)
!2941 = !DIDerivedType(tag: DW_TAG_typedef, name: "proc_handler", file: !2911, line: 47, baseType: !2942)
!2942 = !DISubroutineType(types: !2943)
!2943 = !{!294, !2931, !294, !247, !2944, !965}
!2944 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !550, size: 64)
!2945 = !DIDerivedType(tag: DW_TAG_member, name: "poll", scope: !2932, file: !2911, line: 119, baseType: !2946, size: 64, offset: 320)
!2946 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2947, size: 64)
!2947 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ctl_table_poll", file: !2911, line: 94, size: 192, elements: !2948)
!2948 = !{!2949, !2950}
!2949 = !DIDerivedType(tag: DW_TAG_member, name: "event", scope: !2947, file: !2911, line: 95, baseType: !326, size: 32)
!2950 = !DIDerivedType(tag: DW_TAG_member, name: "wait", scope: !2947, file: !2911, line: 96, baseType: !375, size: 128, offset: 64)
!2951 = !DIDerivedType(tag: DW_TAG_member, name: "extra1", scope: !2932, file: !2911, line: 120, baseType: !247, size: 64, offset: 384)
!2952 = !DIDerivedType(tag: DW_TAG_member, name: "extra2", scope: !2932, file: !2911, line: 121, baseType: !247, size: 64, offset: 448)
!2953 = !DIDerivedType(tag: DW_TAG_member, name: "used", scope: !2928, file: !2911, line: 135, baseType: !294, size: 32, offset: 64)
!2954 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !2928, file: !2911, line: 136, baseType: !294, size: 32, offset: 96)
!2955 = !DIDerivedType(tag: DW_TAG_member, name: "nreg", scope: !2928, file: !2911, line: 137, baseType: !294, size: 32, offset: 128)
!2956 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !2925, file: !2911, line: 139, baseType: !593, size: 128, align: 64)
!2957 = !DIDerivedType(tag: DW_TAG_member, name: "unregistering", scope: !2922, file: !2911, line: 141, baseType: !2656, size: 64, offset: 192)
!2958 = !DIDerivedType(tag: DW_TAG_member, name: "ctl_table_arg", scope: !2922, file: !2911, line: 142, baseType: !2931, size: 64, offset: 256)
!2959 = !DIDerivedType(tag: DW_TAG_member, name: "root", scope: !2922, file: !2911, line: 143, baseType: !2960, size: 64, offset: 320)
!2960 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2961, size: 64)
!2961 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ctl_table_root", file: !2911, line: 161, size: 960, elements: !2962)
!2962 = !{!2963, !2964, !2968, !2975}
!2963 = !DIDerivedType(tag: DW_TAG_member, name: "default_set", scope: !2961, file: !2911, line: 162, baseType: !2910, size: 768)
!2964 = !DIDerivedType(tag: DW_TAG_member, name: "lookup", scope: !2961, file: !2911, line: 163, baseType: !2965, size: 64, offset: 768)
!2965 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2966, size: 64)
!2966 = !DISubroutineType(types: !2967)
!2967 = !{!2917, !2960}
!2968 = !DIDerivedType(tag: DW_TAG_member, name: "set_ownership", scope: !2961, file: !2911, line: 164, baseType: !2969, size: 64, offset: 832)
!2969 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2970, size: 64)
!2970 = !DISubroutineType(types: !2971)
!2971 = !{null, !2972, !2931, !2973, !2974}
!2972 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2922, size: 64)
!2973 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !655, size: 64)
!2974 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !663, size: 64)
!2975 = !DIDerivedType(tag: DW_TAG_member, name: "permissions", scope: !2961, file: !2911, line: 167, baseType: !2976, size: 64, offset: 896)
!2976 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2977, size: 64)
!2977 = !DISubroutineType(types: !2978)
!2978 = !{!294, !2972, !2931}
!2979 = !DIDerivedType(tag: DW_TAG_member, name: "set", scope: !2922, file: !2911, line: 144, baseType: !2917, size: 64, offset: 384)
!2980 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !2922, file: !2911, line: 145, baseType: !2981, size: 64, offset: 448)
!2981 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2919, size: 64)
!2982 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2922, file: !2911, line: 146, baseType: !2983, size: 64, offset: 512)
!2983 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2984, size: 64)
!2984 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ctl_node", file: !2911, line: 124, size: 256, elements: !2985)
!2985 = !{!2986, !2987}
!2986 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2984, file: !2911, line: 125, baseType: !1025, size: 192, align: 64)
!2987 = !DIDerivedType(tag: DW_TAG_member, name: "header", scope: !2984, file: !2911, line: 126, baseType: !2972, size: 64, offset: 192)
!2988 = !DIDerivedType(tag: DW_TAG_member, name: "inodes", scope: !2922, file: !2911, line: 147, baseType: !854, size: 64, offset: 576)
!2989 = !DIDerivedType(tag: DW_TAG_member, name: "root", scope: !2919, file: !2911, line: 153, baseType: !1021, size: 64, offset: 640)
!2990 = !DIDerivedType(tag: DW_TAG_member, name: "sysctls", scope: !2864, file: !2865, line: 86, baseType: !2972, size: 64, offset: 3712)
!2991 = !DIDerivedType(tag: DW_TAG_member, name: "ucounts", scope: !2864, file: !2865, line: 88, baseType: !2992, size: 64, offset: 3776)
!2992 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2993, size: 64)
!2993 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ucounts", file: !2865, line: 92, size: 576, elements: !2994)
!2994 = !{!2995, !2996, !2997, !2998, !2999}
!2995 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2993, file: !2865, line: 93, baseType: !858, size: 128)
!2996 = !DIDerivedType(tag: DW_TAG_member, name: "ns", scope: !2993, file: !2865, line: 94, baseType: !2863, size: 64, offset: 128)
!2997 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !2993, file: !2865, line: 95, baseType: !655, size: 32, offset: 192)
!2998 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !2993, file: !2865, line: 96, baseType: !294, size: 32, offset: 224)
!2999 = !DIDerivedType(tag: DW_TAG_member, name: "ucount", scope: !2993, file: !2865, line: 97, baseType: !3000, size: 320, offset: 256)
!3000 = !DICompositeType(tag: DW_TAG_array_type, baseType: !326, size: 320, elements: !3001)
!3001 = !{!3002}
!3002 = !DISubrange(count: 10)
!3003 = !DIDerivedType(tag: DW_TAG_member, name: "ucount_max", scope: !2864, file: !2865, line: 89, baseType: !3004, size: 320, offset: 3840)
!3004 = !DICompositeType(tag: DW_TAG_array_type, baseType: !294, size: 320, elements: !3001)
!3005 = !DIDerivedType(tag: DW_TAG_member, name: "group_info", scope: !2704, file: !2705, line: 147, baseType: !3006, size: 64, offset: 1088)
!3006 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3007, size: 64)
!3007 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "group_info", file: !2705, line: 25, size: 64, elements: !3008)
!3008 = !{!3009, !3010, !3011}
!3009 = !DIDerivedType(tag: DW_TAG_member, name: "usage", scope: !3007, file: !2705, line: 26, baseType: !326, size: 32)
!3010 = !DIDerivedType(tag: DW_TAG_member, name: "ngroups", scope: !3007, file: !2705, line: 27, baseType: !294, size: 32, offset: 32)
!3011 = !DIDerivedType(tag: DW_TAG_member, name: "gid", scope: !3007, file: !2705, line: 28, baseType: !3012, offset: 64)
!3012 = !DICompositeType(tag: DW_TAG_array_type, baseType: !663, elements: !3013)
!3013 = !{!3014}
!3014 = !DISubrange(count: 0)
!3015 = !DIDerivedType(tag: DW_TAG_member, scope: !2704, file: !2705, line: 149, baseType: !3016, size: 128, offset: 1152)
!3016 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2704, file: !2705, line: 149, size: 128, elements: !3017)
!3017 = !{!3018, !3019}
!3018 = !DIDerivedType(tag: DW_TAG_member, name: "non_rcu", scope: !3016, file: !2705, line: 150, baseType: !294, size: 32)
!3019 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !3016, file: !2705, line: 151, baseType: !593, size: 128, align: 64)
!3020 = !DIDerivedType(tag: DW_TAG_member, name: "real_cred", scope: !2389, file: !2390, line: 926, baseType: !2702, size: 64, offset: 8576)
!3021 = !DIDerivedType(tag: DW_TAG_member, name: "cred", scope: !2389, file: !2390, line: 929, baseType: !2702, size: 64, offset: 8640)
!3022 = !DIDerivedType(tag: DW_TAG_member, name: "cached_requested_key", scope: !2389, file: !2390, line: 933, baseType: !2730, size: 64, offset: 8704)
!3023 = !DIDerivedType(tag: DW_TAG_member, name: "comm", scope: !2389, file: !2390, line: 943, baseType: !3024, size: 128, offset: 8768)
!3024 = !DICompositeType(tag: DW_TAG_array_type, baseType: !257, size: 128, elements: !1924)
!3025 = !DIDerivedType(tag: DW_TAG_member, name: "nameidata", scope: !2389, file: !2390, line: 945, baseType: !3026, size: 64, offset: 8896)
!3026 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3027, size: 64)
!3027 = !DICompositeType(tag: DW_TAG_structure_type, name: "nameidata", file: !2390, line: 49, flags: DIFlagFwdDecl)
!3028 = !DIDerivedType(tag: DW_TAG_member, name: "fs", scope: !2389, file: !2390, line: 956, baseType: !3029, size: 64, offset: 8960)
!3029 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3030, size: 64)
!3030 = !DICompositeType(tag: DW_TAG_structure_type, name: "fs_struct", file: !2390, line: 45, flags: DIFlagFwdDecl)
!3031 = !DIDerivedType(tag: DW_TAG_member, name: "files", scope: !2389, file: !2390, line: 959, baseType: !3032, size: 64, offset: 9024)
!3032 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3033, size: 64)
!3033 = !DICompositeType(tag: DW_TAG_structure_type, name: "files_struct", file: !2390, line: 959, flags: DIFlagFwdDecl)
!3034 = !DIDerivedType(tag: DW_TAG_member, name: "io_uring", scope: !2389, file: !2390, line: 962, baseType: !3035, size: 64, offset: 9088)
!3035 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3036, size: 64)
!3036 = !DICompositeType(tag: DW_TAG_structure_type, name: "io_uring_task", file: !2390, line: 66, flags: DIFlagFwdDecl)
!3037 = !DIDerivedType(tag: DW_TAG_member, name: "nsproxy", scope: !2389, file: !2390, line: 966, baseType: !3038, size: 64, offset: 9152)
!3038 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3039, size: 64)
!3039 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "nsproxy", file: !3040, line: 31, size: 576, elements: !3041)
!3040 = !DIFile(filename: "./include/linux/nsproxy.h", directory: "/home/lizy2001/genbc/linux")
!3041 = !{!3042, !3043, !3046, !3049, !3052, !3053, !3056, !3059, !3060}
!3042 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !3039, file: !3040, line: 32, baseType: !326, size: 32)
!3043 = !DIDerivedType(tag: DW_TAG_member, name: "uts_ns", scope: !3039, file: !3040, line: 33, baseType: !3044, size: 64, offset: 64)
!3044 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3045, size: 64)
!3045 = !DICompositeType(tag: DW_TAG_structure_type, name: "uts_namespace", file: !3040, line: 9, flags: DIFlagFwdDecl)
!3046 = !DIDerivedType(tag: DW_TAG_member, name: "ipc_ns", scope: !3039, file: !3040, line: 34, baseType: !3047, size: 64, offset: 128)
!3047 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3048, size: 64)
!3048 = !DICompositeType(tag: DW_TAG_structure_type, name: "ipc_namespace", file: !3040, line: 10, flags: DIFlagFwdDecl)
!3049 = !DIDerivedType(tag: DW_TAG_member, name: "mnt_ns", scope: !3039, file: !3040, line: 35, baseType: !3050, size: 64, offset: 192)
!3050 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3051, size: 64)
!3051 = !DICompositeType(tag: DW_TAG_structure_type, name: "mnt_namespace", file: !3040, line: 8, flags: DIFlagFwdDecl)
!3052 = !DIDerivedType(tag: DW_TAG_member, name: "pid_ns_for_children", scope: !3039, file: !3040, line: 36, baseType: !2649, size: 64, offset: 256)
!3053 = !DIDerivedType(tag: DW_TAG_member, name: "net_ns", scope: !3039, file: !3040, line: 37, baseType: !3054, size: 64, offset: 320)
!3054 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3055, size: 64)
!3055 = !DICompositeType(tag: DW_TAG_structure_type, name: "net", file: !2732, line: 34, flags: DIFlagFwdDecl)
!3056 = !DIDerivedType(tag: DW_TAG_member, name: "time_ns", scope: !3039, file: !3040, line: 38, baseType: !3057, size: 64, offset: 384)
!3057 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3058, size: 64)
!3058 = !DICompositeType(tag: DW_TAG_structure_type, name: "time_namespace", file: !3040, line: 38, flags: DIFlagFwdDecl)
!3059 = !DIDerivedType(tag: DW_TAG_member, name: "time_ns_for_children", scope: !3039, file: !3040, line: 39, baseType: !3057, size: 64, offset: 448)
!3060 = !DIDerivedType(tag: DW_TAG_member, name: "cgroup_ns", scope: !3039, file: !3040, line: 40, baseType: !3061, size: 64, offset: 512)
!3061 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3062, size: 64)
!3062 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cgroup_namespace", file: !3063, line: 856, size: 448, elements: !3064)
!3063 = !DIFile(filename: "./include/linux/cgroup.h", directory: "/home/lizy2001/genbc/linux")
!3064 = !{!3065, !3066, !3067, !3068, !3069}
!3065 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !3062, file: !3063, line: 857, baseType: !322, size: 32)
!3066 = !DIDerivedType(tag: DW_TAG_member, name: "ns", scope: !3062, file: !3063, line: 858, baseType: !2895, size: 192, offset: 64)
!3067 = !DIDerivedType(tag: DW_TAG_member, name: "user_ns", scope: !3062, file: !3063, line: 859, baseType: !2863, size: 64, offset: 256)
!3068 = !DIDerivedType(tag: DW_TAG_member, name: "ucounts", scope: !3062, file: !3063, line: 860, baseType: !2992, size: 64, offset: 320)
!3069 = !DIDerivedType(tag: DW_TAG_member, name: "root_cset", scope: !3062, file: !3063, line: 861, baseType: !3070, size: 64, offset: 384)
!3070 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3071, size: 64)
!3071 = !DICompositeType(tag: DW_TAG_structure_type, name: "css_set", file: !3072, line: 16, flags: DIFlagFwdDecl)
!3072 = !DIFile(filename: "./include/linux/sched/task.h", directory: "/home/lizy2001/genbc/linux")
!3073 = !DIDerivedType(tag: DW_TAG_member, name: "signal", scope: !2389, file: !2390, line: 969, baseType: !3074, size: 64, offset: 9216)
!3074 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3075, size: 64)
!3075 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "signal_struct", file: !3076, line: 82, size: 7296, elements: !3077)
!3076 = !DIFile(filename: "./include/linux/sched/signal.h", directory: "/home/lizy2001/genbc/linux")
!3077 = !{!3078, !3079, !3080, !3081, !3082, !3083, !3084, !3095, !3096, !3097, !3098, !3099, !3100, !3101, !3102, !3103, !3104, !3105, !3106, !3107, !3113, !3122, !3123, !3125, !3126, !3127, !3130, !3136, !3137, !3138, !3139, !3140, !3141, !3142, !3143, !3144, !3145, !3146, !3147, !3148, !3149, !3150, !3151, !3152, !3153, !3154, !3155, !3156, !3157, !3160, !3161, !3168, !3169, !3170, !3171, !3172, !3173}
!3078 = !DIDerivedType(tag: DW_TAG_member, name: "sigcnt", scope: !3075, file: !3076, line: 83, baseType: !322, size: 32)
!3079 = !DIDerivedType(tag: DW_TAG_member, name: "live", scope: !3075, file: !3076, line: 84, baseType: !326, size: 32, offset: 32)
!3080 = !DIDerivedType(tag: DW_TAG_member, name: "nr_threads", scope: !3075, file: !3076, line: 85, baseType: !294, size: 32, offset: 64)
!3081 = !DIDerivedType(tag: DW_TAG_member, name: "thread_head", scope: !3075, file: !3076, line: 86, baseType: !300, size: 128, offset: 128)
!3082 = !DIDerivedType(tag: DW_TAG_member, name: "wait_chldexit", scope: !3075, file: !3076, line: 88, baseType: !375, size: 128, offset: 256)
!3083 = !DIDerivedType(tag: DW_TAG_member, name: "curr_target", scope: !3075, file: !3076, line: 91, baseType: !2388, size: 64, offset: 384)
!3084 = !DIDerivedType(tag: DW_TAG_member, name: "shared_pending", scope: !3075, file: !3076, line: 94, baseType: !3085, size: 192, offset: 448)
!3085 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sigpending", file: !3086, line: 30, size: 192, elements: !3087)
!3086 = !DIFile(filename: "./include/linux/signal_types.h", directory: "/home/lizy2001/genbc/linux")
!3087 = !{!3088, !3089}
!3088 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !3085, file: !3086, line: 31, baseType: !300, size: 128)
!3089 = !DIDerivedType(tag: DW_TAG_member, name: "signal", scope: !3085, file: !3086, line: 32, baseType: !3090, size: 64, offset: 128)
!3090 = !DIDerivedType(tag: DW_TAG_typedef, name: "sigset_t", file: !3091, line: 25, baseType: !3092)
!3091 = !DIFile(filename: "./arch/x86/include/asm/signal.h", directory: "/home/lizy2001/genbc/linux")
!3092 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !3091, line: 23, size: 64, elements: !3093)
!3093 = !{!3094}
!3094 = !DIDerivedType(tag: DW_TAG_member, name: "sig", scope: !3092, file: !3091, line: 24, baseType: !2532, size: 64)
!3095 = !DIDerivedType(tag: DW_TAG_member, name: "multiprocess", scope: !3075, file: !3076, line: 97, baseType: !854, size: 64, offset: 640)
!3096 = !DIDerivedType(tag: DW_TAG_member, name: "group_exit_code", scope: !3075, file: !3076, line: 100, baseType: !294, size: 32, offset: 704)
!3097 = !DIDerivedType(tag: DW_TAG_member, name: "notify_count", scope: !3075, file: !3076, line: 106, baseType: !294, size: 32, offset: 736)
!3098 = !DIDerivedType(tag: DW_TAG_member, name: "group_exit_task", scope: !3075, file: !3076, line: 107, baseType: !2388, size: 64, offset: 768)
!3099 = !DIDerivedType(tag: DW_TAG_member, name: "group_stop_count", scope: !3075, file: !3076, line: 110, baseType: !294, size: 32, offset: 832)
!3100 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3075, file: !3076, line: 111, baseType: !7, size: 32, offset: 864)
!3101 = !DIDerivedType(tag: DW_TAG_member, name: "is_child_subreaper", scope: !3075, file: !3076, line: 122, baseType: !7, size: 1, offset: 896, flags: DIFlagBitField, extraData: i64 896)
!3102 = !DIDerivedType(tag: DW_TAG_member, name: "has_child_subreaper", scope: !3075, file: !3076, line: 123, baseType: !7, size: 1, offset: 897, flags: DIFlagBitField, extraData: i64 896)
!3103 = !DIDerivedType(tag: DW_TAG_member, name: "posix_timer_id", scope: !3075, file: !3076, line: 128, baseType: !294, size: 32, offset: 928)
!3104 = !DIDerivedType(tag: DW_TAG_member, name: "posix_timers", scope: !3075, file: !3076, line: 129, baseType: !300, size: 128, offset: 960)
!3105 = !DIDerivedType(tag: DW_TAG_member, name: "real_timer", scope: !3075, file: !3076, line: 132, baseType: !2458, size: 512, offset: 1088)
!3106 = !DIDerivedType(tag: DW_TAG_member, name: "it_real_incr", scope: !3075, file: !3076, line: 133, baseType: !2466, size: 64, offset: 1600)
!3107 = !DIDerivedType(tag: DW_TAG_member, name: "it", scope: !3075, file: !3076, line: 140, baseType: !3108, size: 256, offset: 1664)
!3108 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3109, size: 256, elements: !1583)
!3109 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cpu_itimer", file: !3076, line: 38, size: 128, elements: !3110)
!3110 = !{!3111, !3112}
!3111 = !DIDerivedType(tag: DW_TAG_member, name: "expires", scope: !3109, file: !3076, line: 39, baseType: !284, size: 64)
!3112 = !DIDerivedType(tag: DW_TAG_member, name: "incr", scope: !3109, file: !3076, line: 40, baseType: !284, size: 64, offset: 64)
!3113 = !DIDerivedType(tag: DW_TAG_member, name: "cputimer", scope: !3075, file: !3076, line: 146, baseType: !3114, size: 192, offset: 1920)
!3114 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "thread_group_cputimer", file: !3076, line: 66, size: 192, elements: !3115)
!3115 = !{!3116}
!3116 = !DIDerivedType(tag: DW_TAG_member, name: "cputime_atomic", scope: !3114, file: !3076, line: 67, baseType: !3117, size: 192)
!3117 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "task_cputime_atomic", file: !3076, line: 47, size: 192, elements: !3118)
!3118 = !{!3119, !3120, !3121}
!3119 = !DIDerivedType(tag: DW_TAG_member, name: "utime", scope: !3117, file: !3076, line: 48, baseType: !350, size: 64)
!3120 = !DIDerivedType(tag: DW_TAG_member, name: "stime", scope: !3117, file: !3076, line: 49, baseType: !350, size: 64, offset: 64)
!3121 = !DIDerivedType(tag: DW_TAG_member, name: "sum_exec_runtime", scope: !3117, file: !3076, line: 50, baseType: !350, size: 64, offset: 128)
!3122 = !DIDerivedType(tag: DW_TAG_member, name: "posix_cputimers", scope: !3075, file: !3076, line: 150, baseType: !2685, size: 640, offset: 2112)
!3123 = !DIDerivedType(tag: DW_TAG_member, name: "pids", scope: !3075, file: !3076, line: 153, baseType: !3124, size: 256, offset: 2752)
!3124 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2632, size: 256, elements: !258)
!3125 = !DIDerivedType(tag: DW_TAG_member, name: "tty_old_pgrp", scope: !3075, file: !3076, line: 159, baseType: !2632, size: 64, offset: 3008)
!3126 = !DIDerivedType(tag: DW_TAG_member, name: "leader", scope: !3075, file: !3076, line: 162, baseType: !294, size: 32, offset: 3072)
!3127 = !DIDerivedType(tag: DW_TAG_member, name: "tty", scope: !3075, file: !3076, line: 164, baseType: !3128, size: 64, offset: 3136)
!3128 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3129, size: 64)
!3129 = !DICompositeType(tag: DW_TAG_structure_type, name: "tty_struct", file: !3076, line: 164, flags: DIFlagFwdDecl)
!3130 = !DIDerivedType(tag: DW_TAG_member, name: "stats_lock", scope: !3075, file: !3076, line: 175, baseType: !3131, size: 32, offset: 3200)
!3131 = !DIDerivedType(tag: DW_TAG_typedef, name: "seqlock_t", file: !616, line: 805, baseType: !3132)
!3132 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !616, line: 798, size: 32, elements: !3133)
!3133 = !{!3134, !3135}
!3134 = !DIDerivedType(tag: DW_TAG_member, name: "seqcount", scope: !3132, file: !616, line: 803, baseType: !615, size: 32)
!3135 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3132, file: !616, line: 804, baseType: !358, offset: 32)
!3136 = !DIDerivedType(tag: DW_TAG_member, name: "utime", scope: !3075, file: !3076, line: 176, baseType: !284, size: 64, offset: 3264)
!3137 = !DIDerivedType(tag: DW_TAG_member, name: "stime", scope: !3075, file: !3076, line: 176, baseType: !284, size: 64, offset: 3328)
!3138 = !DIDerivedType(tag: DW_TAG_member, name: "cutime", scope: !3075, file: !3076, line: 176, baseType: !284, size: 64, offset: 3392)
!3139 = !DIDerivedType(tag: DW_TAG_member, name: "cstime", scope: !3075, file: !3076, line: 176, baseType: !284, size: 64, offset: 3456)
!3140 = !DIDerivedType(tag: DW_TAG_member, name: "gtime", scope: !3075, file: !3076, line: 177, baseType: !284, size: 64, offset: 3520)
!3141 = !DIDerivedType(tag: DW_TAG_member, name: "cgtime", scope: !3075, file: !3076, line: 178, baseType: !284, size: 64, offset: 3584)
!3142 = !DIDerivedType(tag: DW_TAG_member, name: "prev_cputime", scope: !3075, file: !3076, line: 179, baseType: !2673, size: 128, offset: 3648)
!3143 = !DIDerivedType(tag: DW_TAG_member, name: "nvcsw", scope: !3075, file: !3076, line: 180, baseType: !287, size: 64, offset: 3776)
!3144 = !DIDerivedType(tag: DW_TAG_member, name: "nivcsw", scope: !3075, file: !3076, line: 180, baseType: !287, size: 64, offset: 3840)
!3145 = !DIDerivedType(tag: DW_TAG_member, name: "cnvcsw", scope: !3075, file: !3076, line: 180, baseType: !287, size: 64, offset: 3904)
!3146 = !DIDerivedType(tag: DW_TAG_member, name: "cnivcsw", scope: !3075, file: !3076, line: 180, baseType: !287, size: 64, offset: 3968)
!3147 = !DIDerivedType(tag: DW_TAG_member, name: "min_flt", scope: !3075, file: !3076, line: 181, baseType: !287, size: 64, offset: 4032)
!3148 = !DIDerivedType(tag: DW_TAG_member, name: "maj_flt", scope: !3075, file: !3076, line: 181, baseType: !287, size: 64, offset: 4096)
!3149 = !DIDerivedType(tag: DW_TAG_member, name: "cmin_flt", scope: !3075, file: !3076, line: 181, baseType: !287, size: 64, offset: 4160)
!3150 = !DIDerivedType(tag: DW_TAG_member, name: "cmaj_flt", scope: !3075, file: !3076, line: 181, baseType: !287, size: 64, offset: 4224)
!3151 = !DIDerivedType(tag: DW_TAG_member, name: "inblock", scope: !3075, file: !3076, line: 182, baseType: !287, size: 64, offset: 4288)
!3152 = !DIDerivedType(tag: DW_TAG_member, name: "oublock", scope: !3075, file: !3076, line: 182, baseType: !287, size: 64, offset: 4352)
!3153 = !DIDerivedType(tag: DW_TAG_member, name: "cinblock", scope: !3075, file: !3076, line: 182, baseType: !287, size: 64, offset: 4416)
!3154 = !DIDerivedType(tag: DW_TAG_member, name: "coublock", scope: !3075, file: !3076, line: 182, baseType: !287, size: 64, offset: 4480)
!3155 = !DIDerivedType(tag: DW_TAG_member, name: "maxrss", scope: !3075, file: !3076, line: 183, baseType: !287, size: 64, offset: 4544)
!3156 = !DIDerivedType(tag: DW_TAG_member, name: "cmaxrss", scope: !3075, file: !3076, line: 183, baseType: !287, size: 64, offset: 4608)
!3157 = !DIDerivedType(tag: DW_TAG_member, name: "ioac", scope: !3075, file: !3076, line: 184, baseType: !3158, offset: 4672)
!3158 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "task_io_accounting", file: !3159, line: 12, elements: !372)
!3159 = !DIFile(filename: "./include/linux/task_io_accounting.h", directory: "/home/lizy2001/genbc/linux")
!3160 = !DIDerivedType(tag: DW_TAG_member, name: "sum_sched_runtime", scope: !3075, file: !3076, line: 192, baseType: !286, size: 64, offset: 4672)
!3161 = !DIDerivedType(tag: DW_TAG_member, name: "rlim", scope: !3075, file: !3076, line: 203, baseType: !3162, size: 2048, offset: 4736)
!3162 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3163, size: 2048, elements: !1924)
!3163 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rlimit", file: !3164, line: 43, size: 128, elements: !3165)
!3164 = !DIFile(filename: "./include/uapi/linux/resource.h", directory: "/home/lizy2001/genbc/linux")
!3165 = !{!3166, !3167}
!3166 = !DIDerivedType(tag: DW_TAG_member, name: "rlim_cur", scope: !3163, file: !3164, line: 44, baseType: !552, size: 64)
!3167 = !DIDerivedType(tag: DW_TAG_member, name: "rlim_max", scope: !3163, file: !3164, line: 45, baseType: !552, size: 64, offset: 64)
!3168 = !DIDerivedType(tag: DW_TAG_member, name: "oom_flag_origin", scope: !3075, file: !3076, line: 220, baseType: !339, size: 8, offset: 6784)
!3169 = !DIDerivedType(tag: DW_TAG_member, name: "oom_score_adj", scope: !3075, file: !3076, line: 221, baseType: !1187, size: 16, offset: 6800)
!3170 = !DIDerivedType(tag: DW_TAG_member, name: "oom_score_adj_min", scope: !3075, file: !3076, line: 222, baseType: !1187, size: 16, offset: 6816)
!3171 = !DIDerivedType(tag: DW_TAG_member, name: "oom_mm", scope: !3075, file: !3076, line: 224, baseType: !2155, size: 64, offset: 6848)
!3172 = !DIDerivedType(tag: DW_TAG_member, name: "cred_guard_mutex", scope: !3075, file: !3076, line: 227, baseType: !344, size: 192, offset: 6912)
!3173 = !DIDerivedType(tag: DW_TAG_member, name: "exec_update_mutex", scope: !3075, file: !3076, line: 233, baseType: !344, size: 192, offset: 7104)
!3174 = !DIDerivedType(tag: DW_TAG_member, name: "sighand", scope: !2389, file: !2390, line: 970, baseType: !3175, size: 64, offset: 9280)
!3175 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3176, size: 64)
!3176 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sighand_struct", file: !3076, line: 20, size: 16576, elements: !3177)
!3177 = !{!3178, !3179, !3180, !3181}
!3178 = !DIDerivedType(tag: DW_TAG_member, name: "siglock", scope: !3176, file: !3076, line: 21, baseType: !358)
!3179 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !3176, file: !3076, line: 22, baseType: !322, size: 32)
!3180 = !DIDerivedType(tag: DW_TAG_member, name: "signalfd_wqh", scope: !3176, file: !3076, line: 23, baseType: !375, size: 128, offset: 64)
!3181 = !DIDerivedType(tag: DW_TAG_member, name: "action", scope: !3176, file: !3076, line: 24, baseType: !3182, size: 16384, offset: 192)
!3182 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3183, size: 16384, elements: !510)
!3183 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_sigaction", file: !3086, line: 49, size: 256, elements: !3184)
!3184 = !{!3185}
!3185 = !DIDerivedType(tag: DW_TAG_member, name: "sa", scope: !3183, file: !3086, line: 50, baseType: !3186, size: 256)
!3186 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sigaction", file: !3086, line: 35, size: 256, elements: !3187)
!3187 = !{!3188, !3195, !3196, !3202}
!3188 = !DIDerivedType(tag: DW_TAG_member, name: "sa_handler", scope: !3186, file: !3086, line: 37, baseType: !3189, size: 64)
!3189 = !DIDerivedType(tag: DW_TAG_typedef, name: "__sighandler_t", file: !3190, line: 19, baseType: !3191)
!3190 = !DIFile(filename: "./include/uapi/asm-generic/signal-defs.h", directory: "/home/lizy2001/genbc/linux")
!3191 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3192, size: 64)
!3192 = !DIDerivedType(tag: DW_TAG_typedef, name: "__signalfn_t", file: !3190, line: 18, baseType: !3193)
!3193 = !DISubroutineType(types: !3194)
!3194 = !{null, !294}
!3195 = !DIDerivedType(tag: DW_TAG_member, name: "sa_flags", scope: !3186, file: !3086, line: 38, baseType: !287, size: 64, offset: 64)
!3196 = !DIDerivedType(tag: DW_TAG_member, name: "sa_restorer", scope: !3186, file: !3086, line: 44, baseType: !3197, size: 64, offset: 128)
!3197 = !DIDerivedType(tag: DW_TAG_typedef, name: "__sigrestore_t", file: !3190, line: 22, baseType: !3198)
!3198 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3199, size: 64)
!3199 = !DIDerivedType(tag: DW_TAG_typedef, name: "__restorefn_t", file: !3190, line: 21, baseType: !3200)
!3200 = !DISubroutineType(types: !3201)
!3201 = !{null}
!3202 = !DIDerivedType(tag: DW_TAG_member, name: "sa_mask", scope: !3186, file: !3086, line: 46, baseType: !3090, size: 64, offset: 192)
!3203 = !DIDerivedType(tag: DW_TAG_member, name: "blocked", scope: !2389, file: !2390, line: 971, baseType: !3090, size: 64, offset: 9344)
!3204 = !DIDerivedType(tag: DW_TAG_member, name: "real_blocked", scope: !2389, file: !2390, line: 972, baseType: !3090, size: 64, offset: 9408)
!3205 = !DIDerivedType(tag: DW_TAG_member, name: "saved_sigmask", scope: !2389, file: !2390, line: 974, baseType: !3090, size: 64, offset: 9472)
!3206 = !DIDerivedType(tag: DW_TAG_member, name: "pending", scope: !2389, file: !2390, line: 975, baseType: !3085, size: 192, offset: 9536)
!3207 = !DIDerivedType(tag: DW_TAG_member, name: "sas_ss_sp", scope: !2389, file: !2390, line: 976, baseType: !287, size: 64, offset: 9728)
!3208 = !DIDerivedType(tag: DW_TAG_member, name: "sas_ss_size", scope: !2389, file: !2390, line: 977, baseType: !550, size: 64, offset: 9792)
!3209 = !DIDerivedType(tag: DW_TAG_member, name: "sas_ss_flags", scope: !2389, file: !2390, line: 978, baseType: !7, size: 32, offset: 9856)
!3210 = !DIDerivedType(tag: DW_TAG_member, name: "task_works", scope: !2389, file: !2390, line: 980, baseType: !596, size: 64, offset: 9920)
!3211 = !DIDerivedType(tag: DW_TAG_member, name: "seccomp", scope: !2389, file: !2390, line: 989, baseType: !3212, size: 128, offset: 9984)
!3212 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seccomp", file: !3213, line: 35, size: 128, elements: !3214)
!3213 = !DIFile(filename: "./include/linux/seccomp.h", directory: "/home/lizy2001/genbc/linux")
!3214 = !{!3215, !3216, !3217}
!3215 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !3212, file: !3213, line: 36, baseType: !294, size: 32)
!3216 = !DIDerivedType(tag: DW_TAG_member, name: "filter_count", scope: !3212, file: !3213, line: 37, baseType: !326, size: 32, offset: 32)
!3217 = !DIDerivedType(tag: DW_TAG_member, name: "filter", scope: !3212, file: !3213, line: 38, baseType: !3218, size: 64, offset: 64)
!3218 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3219, size: 64)
!3219 = !DICompositeType(tag: DW_TAG_structure_type, name: "seccomp_filter", file: !3213, line: 23, flags: DIFlagFwdDecl)
!3220 = !DIDerivedType(tag: DW_TAG_member, name: "parent_exec_id", scope: !2389, file: !2390, line: 992, baseType: !284, size: 64, offset: 10112)
!3221 = !DIDerivedType(tag: DW_TAG_member, name: "self_exec_id", scope: !2389, file: !2390, line: 993, baseType: !284, size: 64, offset: 10176)
!3222 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_lock", scope: !2389, file: !2390, line: 996, baseType: !358, offset: 10240)
!3223 = !DIDerivedType(tag: DW_TAG_member, name: "pi_lock", scope: !2389, file: !2390, line: 999, baseType: !1038, offset: 10240)
!3224 = !DIDerivedType(tag: DW_TAG_member, name: "wake_q", scope: !2389, file: !2390, line: 1001, baseType: !3225, size: 64, offset: 10240)
!3225 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wake_q_node", file: !2390, line: 636, size: 64, elements: !3226)
!3226 = !{!3227}
!3227 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !3225, file: !2390, line: 637, baseType: !3228, size: 64)
!3228 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3225, size: 64)
!3229 = !DIDerivedType(tag: DW_TAG_member, name: "pi_waiters", scope: !2389, file: !2390, line: 1005, baseType: !1017, size: 128, offset: 10304)
!3230 = !DIDerivedType(tag: DW_TAG_member, name: "pi_top_task", scope: !2389, file: !2390, line: 1007, baseType: !2388, size: 64, offset: 10432)
!3231 = !DIDerivedType(tag: DW_TAG_member, name: "pi_blocked_on", scope: !2389, file: !2390, line: 1009, baseType: !3232, size: 64, offset: 10496)
!3232 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3233, size: 64)
!3233 = !DICompositeType(tag: DW_TAG_structure_type, name: "rt_mutex_waiter", file: !2390, line: 1009, flags: DIFlagFwdDecl)
!3234 = !DIDerivedType(tag: DW_TAG_member, name: "journal_info", scope: !2389, file: !2390, line: 1043, baseType: !247, size: 64, offset: 10560)
!3235 = !DIDerivedType(tag: DW_TAG_member, name: "bio_list", scope: !2389, file: !2390, line: 1046, baseType: !3236, size: 64, offset: 10624)
!3236 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1425, size: 64)
!3237 = !DIDerivedType(tag: DW_TAG_member, name: "plug", scope: !2389, file: !2390, line: 1050, baseType: !3238, size: 64, offset: 10688)
!3238 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3239, size: 64)
!3239 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "blk_plug", file: !90, line: 1236, size: 320, elements: !3240)
!3240 = !{!3241, !3242, !3243, !3244, !3245}
!3241 = !DIDerivedType(tag: DW_TAG_member, name: "mq_list", scope: !3239, file: !90, line: 1237, baseType: !300, size: 128)
!3242 = !DIDerivedType(tag: DW_TAG_member, name: "cb_list", scope: !3239, file: !90, line: 1238, baseType: !300, size: 128, offset: 128)
!3243 = !DIDerivedType(tag: DW_TAG_member, name: "rq_count", scope: !3239, file: !90, line: 1239, baseType: !392, size: 16, offset: 256)
!3244 = !DIDerivedType(tag: DW_TAG_member, name: "multiple_queues", scope: !3239, file: !90, line: 1240, baseType: !339, size: 8, offset: 272)
!3245 = !DIDerivedType(tag: DW_TAG_member, name: "nowait", scope: !3239, file: !90, line: 1241, baseType: !339, size: 8, offset: 280)
!3246 = !DIDerivedType(tag: DW_TAG_member, name: "reclaim_state", scope: !2389, file: !2390, line: 1054, baseType: !3247, size: 64, offset: 10752)
!3247 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3248, size: 64)
!3248 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "reclaim_state", file: !1183, line: 131, size: 64, elements: !3249)
!3249 = !{!3250}
!3250 = !DIDerivedType(tag: DW_TAG_member, name: "reclaimed_slab", scope: !3248, file: !1183, line: 132, baseType: !287, size: 64)
!3251 = !DIDerivedType(tag: DW_TAG_member, name: "backing_dev_info", scope: !2389, file: !2390, line: 1056, baseType: !1782, size: 64, offset: 10816)
!3252 = !DIDerivedType(tag: DW_TAG_member, name: "io_context", scope: !2389, file: !2390, line: 1058, baseType: !1558, size: 64, offset: 10880)
!3253 = !DIDerivedType(tag: DW_TAG_member, name: "capture_control", scope: !2389, file: !2390, line: 1061, baseType: !3254, size: 64, offset: 10944)
!3254 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3255, size: 64)
!3255 = !DICompositeType(tag: DW_TAG_structure_type, name: "capture_control", file: !2390, line: 43, flags: DIFlagFwdDecl)
!3256 = !DIDerivedType(tag: DW_TAG_member, name: "ptrace_message", scope: !2389, file: !2390, line: 1064, baseType: !287, size: 64, offset: 11008)
!3257 = !DIDerivedType(tag: DW_TAG_member, name: "last_siginfo", scope: !2389, file: !2390, line: 1065, baseType: !3258, size: 64, offset: 11072)
!3258 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3259, size: 64)
!3259 = !DIDerivedType(tag: DW_TAG_typedef, name: "kernel_siginfo_t", file: !3086, line: 14, baseType: !3260)
!3260 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernel_siginfo", file: !3086, line: 12, size: 384, elements: !3261)
!3261 = !{!3262}
!3262 = !DIDerivedType(tag: DW_TAG_member, scope: !3260, file: !3086, line: 13, baseType: !3263, size: 384)
!3263 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3260, file: !3086, line: 13, size: 384, elements: !3264)
!3264 = !{!3265, !3266, !3267, !3268}
!3265 = !DIDerivedType(tag: DW_TAG_member, name: "si_signo", scope: !3263, file: !3086, line: 13, baseType: !294, size: 32)
!3266 = !DIDerivedType(tag: DW_TAG_member, name: "si_errno", scope: !3263, file: !3086, line: 13, baseType: !294, size: 32, offset: 32)
!3267 = !DIDerivedType(tag: DW_TAG_member, name: "si_code", scope: !3263, file: !3086, line: 13, baseType: !294, size: 32, offset: 64)
!3268 = !DIDerivedType(tag: DW_TAG_member, name: "_sifields", scope: !3263, file: !3086, line: 13, baseType: !3269, size: 256, offset: 128)
!3269 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "__sifields", file: !3270, line: 32, size: 256, elements: !3271)
!3270 = !DIFile(filename: "./include/uapi/asm-generic/siginfo.h", directory: "/home/lizy2001/genbc/linux")
!3271 = !{!3272, !3277, !3290, !3296, !3305, !3324, !3329}
!3272 = !DIDerivedType(tag: DW_TAG_member, name: "_kill", scope: !3269, file: !3270, line: 37, baseType: !3273, size: 64)
!3273 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3269, file: !3270, line: 34, size: 64, elements: !3274)
!3274 = !{!3275, !3276}
!3275 = !DIDerivedType(tag: DW_TAG_member, name: "_pid", scope: !3273, file: !3270, line: 35, baseType: !2621, size: 32)
!3276 = !DIDerivedType(tag: DW_TAG_member, name: "_uid", scope: !3273, file: !3270, line: 36, baseType: !661, size: 32, offset: 32)
!3277 = !DIDerivedType(tag: DW_TAG_member, name: "_timer", scope: !3269, file: !3270, line: 45, baseType: !3278, size: 192)
!3278 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3269, file: !3270, line: 40, size: 192, elements: !3279)
!3279 = !{!3280, !3282, !3283, !3289}
!3280 = !DIDerivedType(tag: DW_TAG_member, name: "_tid", scope: !3278, file: !3270, line: 41, baseType: !3281, size: 32)
!3281 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_timer_t", file: !538, line: 95, baseType: !294)
!3282 = !DIDerivedType(tag: DW_TAG_member, name: "_overrun", scope: !3278, file: !3270, line: 42, baseType: !294, size: 32, offset: 32)
!3283 = !DIDerivedType(tag: DW_TAG_member, name: "_sigval", scope: !3278, file: !3270, line: 43, baseType: !3284, size: 64, offset: 64)
!3284 = !DIDerivedType(tag: DW_TAG_typedef, name: "sigval_t", file: !3270, line: 11, baseType: !3285)
!3285 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "sigval", file: !3270, line: 8, size: 64, elements: !3286)
!3286 = !{!3287, !3288}
!3287 = !DIDerivedType(tag: DW_TAG_member, name: "sival_int", scope: !3285, file: !3270, line: 9, baseType: !294, size: 32)
!3288 = !DIDerivedType(tag: DW_TAG_member, name: "sival_ptr", scope: !3285, file: !3270, line: 10, baseType: !247, size: 64)
!3289 = !DIDerivedType(tag: DW_TAG_member, name: "_sys_private", scope: !3278, file: !3270, line: 44, baseType: !294, size: 32, offset: 128)
!3290 = !DIDerivedType(tag: DW_TAG_member, name: "_rt", scope: !3269, file: !3270, line: 52, baseType: !3291, size: 128)
!3291 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3269, file: !3270, line: 48, size: 128, elements: !3292)
!3292 = !{!3293, !3294, !3295}
!3293 = !DIDerivedType(tag: DW_TAG_member, name: "_pid", scope: !3291, file: !3270, line: 49, baseType: !2621, size: 32)
!3294 = !DIDerivedType(tag: DW_TAG_member, name: "_uid", scope: !3291, file: !3270, line: 50, baseType: !661, size: 32, offset: 32)
!3295 = !DIDerivedType(tag: DW_TAG_member, name: "_sigval", scope: !3291, file: !3270, line: 51, baseType: !3284, size: 64, offset: 64)
!3296 = !DIDerivedType(tag: DW_TAG_member, name: "_sigchld", scope: !3269, file: !3270, line: 61, baseType: !3297, size: 256)
!3297 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3269, file: !3270, line: 55, size: 256, elements: !3298)
!3298 = !{!3299, !3300, !3301, !3302, !3304}
!3299 = !DIDerivedType(tag: DW_TAG_member, name: "_pid", scope: !3297, file: !3270, line: 56, baseType: !2621, size: 32)
!3300 = !DIDerivedType(tag: DW_TAG_member, name: "_uid", scope: !3297, file: !3270, line: 57, baseType: !661, size: 32, offset: 32)
!3301 = !DIDerivedType(tag: DW_TAG_member, name: "_status", scope: !3297, file: !3270, line: 58, baseType: !294, size: 32, offset: 64)
!3302 = !DIDerivedType(tag: DW_TAG_member, name: "_utime", scope: !3297, file: !3270, line: 59, baseType: !3303, size: 64, offset: 128)
!3303 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_clock_t", file: !538, line: 94, baseType: !539)
!3304 = !DIDerivedType(tag: DW_TAG_member, name: "_stime", scope: !3297, file: !3270, line: 60, baseType: !3303, size: 64, offset: 192)
!3305 = !DIDerivedType(tag: DW_TAG_member, name: "_sigfault", scope: !3269, file: !3270, line: 95, baseType: !3306, size: 256)
!3306 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3269, file: !3270, line: 64, size: 256, elements: !3307)
!3307 = !{!3308, !3309}
!3308 = !DIDerivedType(tag: DW_TAG_member, name: "_addr", scope: !3306, file: !3270, line: 65, baseType: !247, size: 64)
!3309 = !DIDerivedType(tag: DW_TAG_member, scope: !3306, file: !3270, line: 77, baseType: !3310, size: 192, offset: 64)
!3310 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3306, file: !3270, line: 77, size: 192, elements: !3311)
!3311 = !{!3312, !3313, !3319}
!3312 = !DIDerivedType(tag: DW_TAG_member, name: "_addr_lsb", scope: !3310, file: !3270, line: 82, baseType: !1187, size: 16)
!3313 = !DIDerivedType(tag: DW_TAG_member, name: "_addr_bnd", scope: !3310, file: !3270, line: 88, baseType: !3314, size: 192)
!3314 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3310, file: !3270, line: 84, size: 192, elements: !3315)
!3315 = !{!3316, !3317, !3318}
!3316 = !DIDerivedType(tag: DW_TAG_member, name: "_dummy_bnd", scope: !3314, file: !3270, line: 85, baseType: !275, size: 64)
!3317 = !DIDerivedType(tag: DW_TAG_member, name: "_lower", scope: !3314, file: !3270, line: 86, baseType: !247, size: 64, offset: 64)
!3318 = !DIDerivedType(tag: DW_TAG_member, name: "_upper", scope: !3314, file: !3270, line: 87, baseType: !247, size: 64, offset: 128)
!3319 = !DIDerivedType(tag: DW_TAG_member, name: "_addr_pkey", scope: !3310, file: !3270, line: 93, baseType: !3320, size: 96)
!3320 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3310, file: !3270, line: 90, size: 96, elements: !3321)
!3321 = !{!3322, !3323}
!3322 = !DIDerivedType(tag: DW_TAG_member, name: "_dummy_pkey", scope: !3320, file: !3270, line: 91, baseType: !275, size: 64)
!3323 = !DIDerivedType(tag: DW_TAG_member, name: "_pkey", scope: !3320, file: !3270, line: 92, baseType: !263, size: 32, offset: 64)
!3324 = !DIDerivedType(tag: DW_TAG_member, name: "_sigpoll", scope: !3269, file: !3270, line: 101, baseType: !3325, size: 128)
!3325 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3269, file: !3270, line: 98, size: 128, elements: !3326)
!3326 = !{!3327, !3328}
!3327 = !DIDerivedType(tag: DW_TAG_member, name: "_band", scope: !3325, file: !3270, line: 99, baseType: !31, size: 64)
!3328 = !DIDerivedType(tag: DW_TAG_member, name: "_fd", scope: !3325, file: !3270, line: 100, baseType: !294, size: 32, offset: 64)
!3329 = !DIDerivedType(tag: DW_TAG_member, name: "_sigsys", scope: !3269, file: !3270, line: 108, baseType: !3330, size: 128)
!3330 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3269, file: !3270, line: 104, size: 128, elements: !3331)
!3331 = !{!3332, !3333, !3334}
!3332 = !DIDerivedType(tag: DW_TAG_member, name: "_call_addr", scope: !3330, file: !3270, line: 105, baseType: !247, size: 64)
!3333 = !DIDerivedType(tag: DW_TAG_member, name: "_syscall", scope: !3330, file: !3270, line: 106, baseType: !294, size: 32, offset: 64)
!3334 = !DIDerivedType(tag: DW_TAG_member, name: "_arch", scope: !3330, file: !3270, line: 107, baseType: !7, size: 32, offset: 96)
!3335 = !DIDerivedType(tag: DW_TAG_member, name: "ioac", scope: !2389, file: !2390, line: 1067, baseType: !3158, offset: 11136)
!3336 = !DIDerivedType(tag: DW_TAG_member, name: "robust_list", scope: !2389, file: !2390, line: 1099, baseType: !3337, size: 64, offset: 11136)
!3337 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3338, size: 64)
!3338 = !DICompositeType(tag: DW_TAG_structure_type, name: "robust_list_head", file: !2390, line: 56, flags: DIFlagFwdDecl)
!3339 = !DIDerivedType(tag: DW_TAG_member, name: "pi_state_list", scope: !2389, file: !2390, line: 1103, baseType: !300, size: 128, offset: 11200)
!3340 = !DIDerivedType(tag: DW_TAG_member, name: "pi_state_cache", scope: !2389, file: !2390, line: 1104, baseType: !3341, size: 64, offset: 11328)
!3341 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3342, size: 64)
!3342 = !DICompositeType(tag: DW_TAG_structure_type, name: "futex_pi_state", file: !2390, line: 46, flags: DIFlagFwdDecl)
!3343 = !DIDerivedType(tag: DW_TAG_member, name: "futex_exit_mutex", scope: !2389, file: !2390, line: 1105, baseType: !344, size: 192, offset: 11392)
!3344 = !DIDerivedType(tag: DW_TAG_member, name: "futex_state", scope: !2389, file: !2390, line: 1106, baseType: !7, size: 32, offset: 11584)
!3345 = !DIDerivedType(tag: DW_TAG_member, name: "perf_event_ctxp", scope: !2389, file: !2390, line: 1109, baseType: !3346, size: 128, offset: 11648)
!3346 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3347, size: 128, elements: !1583)
!3347 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3348, size: 64)
!3348 = !DICompositeType(tag: DW_TAG_structure_type, name: "perf_event_context", file: !2390, line: 51, flags: DIFlagFwdDecl)
!3349 = !DIDerivedType(tag: DW_TAG_member, name: "perf_event_mutex", scope: !2389, file: !2390, line: 1110, baseType: !344, size: 192, offset: 11776)
!3350 = !DIDerivedType(tag: DW_TAG_member, name: "perf_event_list", scope: !2389, file: !2390, line: 1111, baseType: !300, size: 128, offset: 11968)
!3351 = !DIDerivedType(tag: DW_TAG_member, name: "rseq", scope: !2389, file: !2390, line: 1173, baseType: !3352, size: 64, offset: 12096)
!3352 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3353, size: 64)
!3353 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rseq", file: !3354, line: 62, size: 256, align: 256, elements: !3355)
!3354 = !DIFile(filename: "./include/uapi/linux/rseq.h", directory: "/home/lizy2001/genbc/linux")
!3355 = !{!3356, !3357, !3358, !3363}
!3356 = !DIDerivedType(tag: DW_TAG_member, name: "cpu_id_start", scope: !3353, file: !3354, line: 75, baseType: !263, size: 32)
!3357 = !DIDerivedType(tag: DW_TAG_member, name: "cpu_id", scope: !3353, file: !3354, line: 90, baseType: !263, size: 32, offset: 32)
!3358 = !DIDerivedType(tag: DW_TAG_member, name: "rseq_cs", scope: !3353, file: !3354, line: 124, baseType: !3359, size: 64, offset: 64)
!3359 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3353, file: !3354, line: 109, size: 64, elements: !3360)
!3360 = !{!3361, !3362}
!3361 = !DIDerivedType(tag: DW_TAG_member, name: "ptr64", scope: !3359, file: !3354, line: 110, baseType: !285, size: 64)
!3362 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !3359, file: !3354, line: 112, baseType: !285, size: 64)
!3363 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3353, file: !3354, line: 144, baseType: !263, size: 32, offset: 128)
!3364 = !DIDerivedType(tag: DW_TAG_member, name: "rseq_sig", scope: !2389, file: !2390, line: 1174, baseType: !261, size: 32, offset: 12160)
!3365 = !DIDerivedType(tag: DW_TAG_member, name: "rseq_event_mask", scope: !2389, file: !2390, line: 1179, baseType: !287, size: 64, offset: 12224)
!3366 = !DIDerivedType(tag: DW_TAG_member, name: "tlb_ubc", scope: !2389, file: !2390, line: 1182, baseType: !3367, size: 128, offset: 12288)
!3367 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tlbflush_unmap_batch", file: !2332, line: 76, size: 128, elements: !3368)
!3368 = !{!3369, !3374, !3375}
!3369 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !3367, file: !2332, line: 85, baseType: !3370, size: 64)
!3370 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arch_tlbflush_unmap_batch", file: !3371, line: 7, size: 64, elements: !3372)
!3371 = !DIFile(filename: "./arch/x86/include/asm/tlbbatch.h", directory: "/home/lizy2001/genbc/linux")
!3372 = !{!3373}
!3373 = !DIDerivedType(tag: DW_TAG_member, name: "cpumask", scope: !3370, file: !3371, line: 12, baseType: !2529, size: 64)
!3374 = !DIDerivedType(tag: DW_TAG_member, name: "flush_required", scope: !3367, file: !2332, line: 88, baseType: !339, size: 8, offset: 64)
!3375 = !DIDerivedType(tag: DW_TAG_member, name: "writable", scope: !3367, file: !2332, line: 95, baseType: !339, size: 8, offset: 72)
!3376 = !DIDerivedType(tag: DW_TAG_member, scope: !2389, file: !2390, line: 1184, baseType: !3377, size: 128, offset: 12416)
!3377 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2389, file: !2390, line: 1184, size: 128, elements: !3378)
!3378 = !{!3379, !3380}
!3379 = !DIDerivedType(tag: DW_TAG_member, name: "rcu_users", scope: !3377, file: !2390, line: 1185, baseType: !322, size: 32)
!3380 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !3377, file: !2390, line: 1186, baseType: !593, size: 128, align: 64)
!3381 = !DIDerivedType(tag: DW_TAG_member, name: "splice_pipe", scope: !2389, file: !2390, line: 1190, baseType: !3382, size: 64, offset: 12544)
!3382 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3383, size: 64)
!3383 = !DICompositeType(tag: DW_TAG_structure_type, name: "pipe_inode_info", file: !2390, line: 53, flags: DIFlagFwdDecl)
!3384 = !DIDerivedType(tag: DW_TAG_member, name: "task_frag", scope: !2389, file: !2390, line: 1192, baseType: !3385, size: 128, offset: 12608)
!3385 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "page_frag", file: !2332, line: 64, size: 128, elements: !3386)
!3386 = !{!3387, !3388, !3389}
!3387 = !DIDerivedType(tag: DW_TAG_member, name: "page", scope: !3385, file: !2332, line: 65, baseType: !990, size: 64)
!3388 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !3385, file: !2332, line: 67, baseType: !263, size: 32, offset: 64)
!3389 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !3385, file: !2332, line: 68, baseType: !263, size: 32, offset: 96)
!3390 = !DIDerivedType(tag: DW_TAG_member, name: "nr_dirtied", scope: !2389, file: !2390, line: 1206, baseType: !294, size: 32, offset: 12736)
!3391 = !DIDerivedType(tag: DW_TAG_member, name: "nr_dirtied_pause", scope: !2389, file: !2390, line: 1207, baseType: !294, size: 32, offset: 12768)
!3392 = !DIDerivedType(tag: DW_TAG_member, name: "dirty_paused_when", scope: !2389, file: !2390, line: 1209, baseType: !287, size: 64, offset: 12800)
!3393 = !DIDerivedType(tag: DW_TAG_member, name: "timer_slack_ns", scope: !2389, file: !2390, line: 1219, baseType: !284, size: 64, offset: 12864)
!3394 = !DIDerivedType(tag: DW_TAG_member, name: "default_timer_slack_ns", scope: !2389, file: !2390, line: 1220, baseType: !284, size: 64, offset: 12928)
!3395 = !DIDerivedType(tag: DW_TAG_member, name: "pagefault_disabled", scope: !2389, file: !2390, line: 1317, baseType: !294, size: 32, offset: 12992)
!3396 = !DIDerivedType(tag: DW_TAG_member, name: "oom_reaper_list", scope: !2389, file: !2390, line: 1319, baseType: !2388, size: 64, offset: 13056)
!3397 = !DIDerivedType(tag: DW_TAG_member, name: "stack_vm_area", scope: !2389, file: !2390, line: 1322, baseType: !3398, size: 64, offset: 13120)
!3398 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3399, size: 64)
!3399 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vm_struct", file: !3400, line: 56, size: 512, elements: !3401)
!3400 = !DIFile(filename: "./include/linux/vmalloc.h", directory: "/home/lizy2001/genbc/linux")
!3401 = !{!3402, !3403, !3404, !3405, !3406, !3407, !3408, !3410}
!3402 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !3399, file: !3400, line: 57, baseType: !3398, size: 64)
!3403 = !DIDerivedType(tag: DW_TAG_member, name: "addr", scope: !3399, file: !3400, line: 58, baseType: !247, size: 64, offset: 64)
!3404 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !3399, file: !3400, line: 59, baseType: !287, size: 64, offset: 128)
!3405 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3399, file: !3400, line: 60, baseType: !287, size: 64, offset: 192)
!3406 = !DIDerivedType(tag: DW_TAG_member, name: "pages", scope: !3399, file: !3400, line: 61, baseType: !1085, size: 64, offset: 256)
!3407 = !DIDerivedType(tag: DW_TAG_member, name: "nr_pages", scope: !3399, file: !3400, line: 62, baseType: !7, size: 32, offset: 320)
!3408 = !DIDerivedType(tag: DW_TAG_member, name: "phys_addr", scope: !3399, file: !3400, line: 63, baseType: !3409, size: 64, offset: 384)
!3409 = !DIDerivedType(tag: DW_TAG_typedef, name: "phys_addr_t", file: !249, line: 153, baseType: !284)
!3410 = !DIDerivedType(tag: DW_TAG_member, name: "caller", scope: !3399, file: !3400, line: 64, baseType: !457, size: 64, offset: 448)
!3411 = !DIDerivedType(tag: DW_TAG_member, name: "stack_refcount", scope: !2389, file: !2390, line: 1326, baseType: !322, size: 32, offset: 13184)
!3412 = !DIDerivedType(tag: DW_TAG_member, name: "mce_vaddr", scope: !2389, file: !2390, line: 1342, baseType: !247, size: 64, offset: 13248)
!3413 = !DIDerivedType(tag: DW_TAG_member, name: "mce_kflags", scope: !2389, file: !2390, line: 1343, baseType: !285, size: 64, offset: 13312)
!3414 = !DIDerivedType(tag: DW_TAG_member, name: "mce_addr", scope: !2389, file: !2390, line: 1344, baseType: !284, size: 64, offset: 13376)
!3415 = !DIDerivedType(tag: DW_TAG_member, name: "mce_ripv", scope: !2389, file: !2390, line: 1345, baseType: !285, size: 1, offset: 13440, flags: DIFlagBitField, extraData: i64 13440)
!3416 = !DIDerivedType(tag: DW_TAG_member, name: "mce_whole_page", scope: !2389, file: !2390, line: 1346, baseType: !285, size: 1, offset: 13441, flags: DIFlagBitField, extraData: i64 13440)
!3417 = !DIDerivedType(tag: DW_TAG_member, name: "__mce_reserved", scope: !2389, file: !2390, line: 1347, baseType: !285, size: 62, offset: 13442, flags: DIFlagBitField, extraData: i64 13440)
!3418 = !DIDerivedType(tag: DW_TAG_member, name: "mce_kill_me", scope: !2389, file: !2390, line: 1348, baseType: !593, size: 128, align: 64, offset: 13504)
!3419 = !DIDerivedType(tag: DW_TAG_member, name: "thread", scope: !2389, file: !2390, line: 1358, baseType: !3420, size: 34816, offset: 13824)
!3420 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "thread_struct", file: !3421, line: 485, size: 34816, elements: !3422)
!3421 = !DIFile(filename: "./arch/x86/include/asm/processor.h", directory: "/home/lizy2001/genbc/linux")
!3422 = !{!3423, !3441, !3442, !3443, !3444, !3445, !3446, !3447, !3448, !3452, !3453, !3454, !3455, !3456, !3457, !3460, !3461, !3462}
!3423 = !DIDerivedType(tag: DW_TAG_member, name: "tls_array", scope: !3420, file: !3421, line: 487, baseType: !3424, size: 192)
!3424 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3425, size: 192, elements: !506)
!3425 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "desc_struct", file: !3426, line: 16, size: 64, elements: !3427)
!3426 = !DIFile(filename: "./arch/x86/include/asm/desc_defs.h", directory: "/home/lizy2001/genbc/linux")
!3427 = !{!3428, !3429, !3430, !3431, !3432, !3433, !3434, !3435, !3436, !3437, !3438, !3439, !3440}
!3428 = !DIDerivedType(tag: DW_TAG_member, name: "limit0", scope: !3425, file: !3426, line: 17, baseType: !1124, size: 16)
!3429 = !DIDerivedType(tag: DW_TAG_member, name: "base0", scope: !3425, file: !3426, line: 18, baseType: !1124, size: 16, offset: 16)
!3430 = !DIDerivedType(tag: DW_TAG_member, name: "base1", scope: !3425, file: !3426, line: 19, baseType: !1124, size: 8, offset: 32, flags: DIFlagBitField, extraData: i64 32)
!3431 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !3425, file: !3426, line: 19, baseType: !1124, size: 4, offset: 40, flags: DIFlagBitField, extraData: i64 32)
!3432 = !DIDerivedType(tag: DW_TAG_member, name: "s", scope: !3425, file: !3426, line: 19, baseType: !1124, size: 1, offset: 44, flags: DIFlagBitField, extraData: i64 32)
!3433 = !DIDerivedType(tag: DW_TAG_member, name: "dpl", scope: !3425, file: !3426, line: 19, baseType: !1124, size: 2, offset: 45, flags: DIFlagBitField, extraData: i64 32)
!3434 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !3425, file: !3426, line: 19, baseType: !1124, size: 1, offset: 47, flags: DIFlagBitField, extraData: i64 32)
!3435 = !DIDerivedType(tag: DW_TAG_member, name: "limit1", scope: !3425, file: !3426, line: 20, baseType: !1124, size: 4, offset: 48, flags: DIFlagBitField, extraData: i64 32)
!3436 = !DIDerivedType(tag: DW_TAG_member, name: "avl", scope: !3425, file: !3426, line: 20, baseType: !1124, size: 1, offset: 52, flags: DIFlagBitField, extraData: i64 32)
!3437 = !DIDerivedType(tag: DW_TAG_member, name: "l", scope: !3425, file: !3426, line: 20, baseType: !1124, size: 1, offset: 53, flags: DIFlagBitField, extraData: i64 32)
!3438 = !DIDerivedType(tag: DW_TAG_member, name: "d", scope: !3425, file: !3426, line: 20, baseType: !1124, size: 1, offset: 54, flags: DIFlagBitField, extraData: i64 32)
!3439 = !DIDerivedType(tag: DW_TAG_member, name: "g", scope: !3425, file: !3426, line: 20, baseType: !1124, size: 1, offset: 55, flags: DIFlagBitField, extraData: i64 32)
!3440 = !DIDerivedType(tag: DW_TAG_member, name: "base2", scope: !3425, file: !3426, line: 20, baseType: !1124, size: 8, offset: 56, flags: DIFlagBitField, extraData: i64 32)
!3441 = !DIDerivedType(tag: DW_TAG_member, name: "sp", scope: !3420, file: !3421, line: 491, baseType: !287, size: 64, offset: 192)
!3442 = !DIDerivedType(tag: DW_TAG_member, name: "es", scope: !3420, file: !3421, line: 495, baseType: !392, size: 16, offset: 256)
!3443 = !DIDerivedType(tag: DW_TAG_member, name: "ds", scope: !3420, file: !3421, line: 496, baseType: !392, size: 16, offset: 272)
!3444 = !DIDerivedType(tag: DW_TAG_member, name: "fsindex", scope: !3420, file: !3421, line: 497, baseType: !392, size: 16, offset: 288)
!3445 = !DIDerivedType(tag: DW_TAG_member, name: "gsindex", scope: !3420, file: !3421, line: 498, baseType: !392, size: 16, offset: 304)
!3446 = !DIDerivedType(tag: DW_TAG_member, name: "fsbase", scope: !3420, file: !3421, line: 502, baseType: !287, size: 64, offset: 320)
!3447 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !3420, file: !3421, line: 503, baseType: !287, size: 64, offset: 384)
!3448 = !DIDerivedType(tag: DW_TAG_member, name: "ptrace_bps", scope: !3420, file: !3421, line: 514, baseType: !3449, size: 256, offset: 448)
!3449 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3450, size: 256, elements: !258)
!3450 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3451, size: 64)
!3451 = !DICompositeType(tag: DW_TAG_structure_type, name: "perf_event", file: !3421, line: 483, flags: DIFlagFwdDecl)
!3452 = !DIDerivedType(tag: DW_TAG_member, name: "virtual_dr6", scope: !3420, file: !3421, line: 516, baseType: !287, size: 64, offset: 704)
!3453 = !DIDerivedType(tag: DW_TAG_member, name: "ptrace_dr7", scope: !3420, file: !3421, line: 518, baseType: !287, size: 64, offset: 768)
!3454 = !DIDerivedType(tag: DW_TAG_member, name: "cr2", scope: !3420, file: !3421, line: 520, baseType: !287, size: 64, offset: 832)
!3455 = !DIDerivedType(tag: DW_TAG_member, name: "trap_nr", scope: !3420, file: !3421, line: 521, baseType: !287, size: 64, offset: 896)
!3456 = !DIDerivedType(tag: DW_TAG_member, name: "error_code", scope: !3420, file: !3421, line: 522, baseType: !287, size: 64, offset: 960)
!3457 = !DIDerivedType(tag: DW_TAG_member, name: "io_bitmap", scope: !3420, file: !3421, line: 528, baseType: !3458, size: 64, offset: 1024)
!3458 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3459, size: 64)
!3459 = !DICompositeType(tag: DW_TAG_structure_type, name: "io_bitmap", file: !3421, line: 10, flags: DIFlagFwdDecl)
!3460 = !DIDerivedType(tag: DW_TAG_member, name: "iopl_emul", scope: !3420, file: !3421, line: 535, baseType: !287, size: 64, offset: 1088)
!3461 = !DIDerivedType(tag: DW_TAG_member, name: "sig_on_uaccess_err", scope: !3420, file: !3421, line: 537, baseType: !7, size: 1, offset: 1152, flags: DIFlagBitField, extraData: i64 1152)
!3462 = !DIDerivedType(tag: DW_TAG_member, name: "fpu", scope: !3420, file: !3421, line: 540, baseType: !3463, size: 33280, offset: 1536)
!3463 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fpu", file: !3464, line: 317, size: 33280, elements: !3465)
!3464 = !DIFile(filename: "./arch/x86/include/asm/fpu/types.h", directory: "/home/lizy2001/genbc/linux")
!3465 = !{!3466, !3467, !3468}
!3466 = !DIDerivedType(tag: DW_TAG_member, name: "last_cpu", scope: !3463, file: !3464, line: 330, baseType: !7, size: 32)
!3467 = !DIDerivedType(tag: DW_TAG_member, name: "avx512_timestamp", scope: !3463, file: !3464, line: 337, baseType: !287, size: 64, offset: 64)
!3468 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !3463, file: !3464, line: 348, baseType: !3469, size: 32768, offset: 512)
!3469 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "fpregs_state", file: !3464, line: 304, size: 32768, elements: !3470)
!3470 = !{!3471, !3486, !3523, !3573, !3586}
!3471 = !DIDerivedType(tag: DW_TAG_member, name: "fsave", scope: !3469, file: !3464, line: 305, baseType: !3472, size: 896)
!3472 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fregs_state", file: !3464, line: 12, size: 896, elements: !3473)
!3473 = !{!3474, !3475, !3476, !3477, !3478, !3479, !3480, !3481, !3485}
!3474 = !DIDerivedType(tag: DW_TAG_member, name: "cwd", scope: !3472, file: !3464, line: 13, baseType: !261, size: 32)
!3475 = !DIDerivedType(tag: DW_TAG_member, name: "swd", scope: !3472, file: !3464, line: 14, baseType: !261, size: 32, offset: 32)
!3476 = !DIDerivedType(tag: DW_TAG_member, name: "twd", scope: !3472, file: !3464, line: 15, baseType: !261, size: 32, offset: 64)
!3477 = !DIDerivedType(tag: DW_TAG_member, name: "fip", scope: !3472, file: !3464, line: 16, baseType: !261, size: 32, offset: 96)
!3478 = !DIDerivedType(tag: DW_TAG_member, name: "fcs", scope: !3472, file: !3464, line: 17, baseType: !261, size: 32, offset: 128)
!3479 = !DIDerivedType(tag: DW_TAG_member, name: "foo", scope: !3472, file: !3464, line: 18, baseType: !261, size: 32, offset: 160)
!3480 = !DIDerivedType(tag: DW_TAG_member, name: "fos", scope: !3472, file: !3464, line: 19, baseType: !261, size: 32, offset: 192)
!3481 = !DIDerivedType(tag: DW_TAG_member, name: "st_space", scope: !3472, file: !3464, line: 22, baseType: !3482, size: 640, offset: 224)
!3482 = !DICompositeType(tag: DW_TAG_array_type, baseType: !261, size: 640, elements: !3483)
!3483 = !{!3484}
!3484 = !DISubrange(count: 20)
!3485 = !DIDerivedType(tag: DW_TAG_member, name: "status", scope: !3472, file: !3464, line: 25, baseType: !261, size: 32, offset: 864)
!3486 = !DIDerivedType(tag: DW_TAG_member, name: "fxsave", scope: !3469, file: !3464, line: 306, baseType: !3487, size: 4096, align: 128)
!3487 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fxregs_state", file: !3464, line: 34, size: 4096, align: 128, elements: !3488)
!3488 = !{!3489, !3490, !3491, !3492, !3493, !3508, !3509, !3510, !3512, !3514, !3518}
!3489 = !DIDerivedType(tag: DW_TAG_member, name: "cwd", scope: !3487, file: !3464, line: 35, baseType: !1124, size: 16)
!3490 = !DIDerivedType(tag: DW_TAG_member, name: "swd", scope: !3487, file: !3464, line: 36, baseType: !1124, size: 16, offset: 16)
!3491 = !DIDerivedType(tag: DW_TAG_member, name: "twd", scope: !3487, file: !3464, line: 37, baseType: !1124, size: 16, offset: 32)
!3492 = !DIDerivedType(tag: DW_TAG_member, name: "fop", scope: !3487, file: !3464, line: 38, baseType: !1124, size: 16, offset: 48)
!3493 = !DIDerivedType(tag: DW_TAG_member, scope: !3487, file: !3464, line: 39, baseType: !3494, size: 128, offset: 64)
!3494 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3487, file: !3464, line: 39, size: 128, elements: !3495)
!3495 = !{!3496, !3501}
!3496 = !DIDerivedType(tag: DW_TAG_member, scope: !3494, file: !3464, line: 40, baseType: !3497, size: 128)
!3497 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3494, file: !3464, line: 40, size: 128, elements: !3498)
!3498 = !{!3499, !3500}
!3499 = !DIDerivedType(tag: DW_TAG_member, name: "rip", scope: !3497, file: !3464, line: 41, baseType: !284, size: 64)
!3500 = !DIDerivedType(tag: DW_TAG_member, name: "rdp", scope: !3497, file: !3464, line: 42, baseType: !284, size: 64, offset: 64)
!3501 = !DIDerivedType(tag: DW_TAG_member, scope: !3494, file: !3464, line: 44, baseType: !3502, size: 128)
!3502 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3494, file: !3464, line: 44, size: 128, elements: !3503)
!3503 = !{!3504, !3505, !3506, !3507}
!3504 = !DIDerivedType(tag: DW_TAG_member, name: "fip", scope: !3502, file: !3464, line: 45, baseType: !261, size: 32)
!3505 = !DIDerivedType(tag: DW_TAG_member, name: "fcs", scope: !3502, file: !3464, line: 46, baseType: !261, size: 32, offset: 32)
!3506 = !DIDerivedType(tag: DW_TAG_member, name: "foo", scope: !3502, file: !3464, line: 47, baseType: !261, size: 32, offset: 64)
!3507 = !DIDerivedType(tag: DW_TAG_member, name: "fos", scope: !3502, file: !3464, line: 48, baseType: !261, size: 32, offset: 96)
!3508 = !DIDerivedType(tag: DW_TAG_member, name: "mxcsr", scope: !3487, file: !3464, line: 51, baseType: !261, size: 32, offset: 192)
!3509 = !DIDerivedType(tag: DW_TAG_member, name: "mxcsr_mask", scope: !3487, file: !3464, line: 52, baseType: !261, size: 32, offset: 224)
!3510 = !DIDerivedType(tag: DW_TAG_member, name: "st_space", scope: !3487, file: !3464, line: 55, baseType: !3511, size: 1024, offset: 256)
!3511 = !DICompositeType(tag: DW_TAG_array_type, baseType: !261, size: 1024, elements: !1309)
!3512 = !DIDerivedType(tag: DW_TAG_member, name: "xmm_space", scope: !3487, file: !3464, line: 58, baseType: !3513, size: 2048, offset: 1280)
!3513 = !DICompositeType(tag: DW_TAG_array_type, baseType: !261, size: 2048, elements: !510)
!3514 = !DIDerivedType(tag: DW_TAG_member, name: "padding", scope: !3487, file: !3464, line: 60, baseType: !3515, size: 384, offset: 3328)
!3515 = !DICompositeType(tag: DW_TAG_array_type, baseType: !261, size: 384, elements: !3516)
!3516 = !{!3517}
!3517 = !DISubrange(count: 12)
!3518 = !DIDerivedType(tag: DW_TAG_member, scope: !3487, file: !3464, line: 62, baseType: !3519, size: 384, offset: 3712)
!3519 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3487, file: !3464, line: 62, size: 384, elements: !3520)
!3520 = !{!3521, !3522}
!3521 = !DIDerivedType(tag: DW_TAG_member, name: "padding1", scope: !3519, file: !3464, line: 63, baseType: !3515, size: 384)
!3522 = !DIDerivedType(tag: DW_TAG_member, name: "sw_reserved", scope: !3519, file: !3464, line: 64, baseType: !3515, size: 384)
!3523 = !DIDerivedType(tag: DW_TAG_member, name: "soft", scope: !3469, file: !3464, line: 307, baseType: !3524, size: 1088)
!3524 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "swregs_state", file: !3464, line: 79, size: 1088, elements: !3525)
!3525 = !{!3526, !3527, !3528, !3529, !3530, !3531, !3532, !3533, !3534, !3535, !3536, !3537, !3538, !3539, !3540, !3572}
!3526 = !DIDerivedType(tag: DW_TAG_member, name: "cwd", scope: !3524, file: !3464, line: 80, baseType: !261, size: 32)
!3527 = !DIDerivedType(tag: DW_TAG_member, name: "swd", scope: !3524, file: !3464, line: 81, baseType: !261, size: 32, offset: 32)
!3528 = !DIDerivedType(tag: DW_TAG_member, name: "twd", scope: !3524, file: !3464, line: 82, baseType: !261, size: 32, offset: 64)
!3529 = !DIDerivedType(tag: DW_TAG_member, name: "fip", scope: !3524, file: !3464, line: 83, baseType: !261, size: 32, offset: 96)
!3530 = !DIDerivedType(tag: DW_TAG_member, name: "fcs", scope: !3524, file: !3464, line: 84, baseType: !261, size: 32, offset: 128)
!3531 = !DIDerivedType(tag: DW_TAG_member, name: "foo", scope: !3524, file: !3464, line: 85, baseType: !261, size: 32, offset: 160)
!3532 = !DIDerivedType(tag: DW_TAG_member, name: "fos", scope: !3524, file: !3464, line: 86, baseType: !261, size: 32, offset: 192)
!3533 = !DIDerivedType(tag: DW_TAG_member, name: "st_space", scope: !3524, file: !3464, line: 88, baseType: !3482, size: 640, offset: 224)
!3534 = !DIDerivedType(tag: DW_TAG_member, name: "ftop", scope: !3524, file: !3464, line: 89, baseType: !266, size: 8, offset: 864)
!3535 = !DIDerivedType(tag: DW_TAG_member, name: "changed", scope: !3524, file: !3464, line: 90, baseType: !266, size: 8, offset: 872)
!3536 = !DIDerivedType(tag: DW_TAG_member, name: "lookahead", scope: !3524, file: !3464, line: 91, baseType: !266, size: 8, offset: 880)
!3537 = !DIDerivedType(tag: DW_TAG_member, name: "no_update", scope: !3524, file: !3464, line: 92, baseType: !266, size: 8, offset: 888)
!3538 = !DIDerivedType(tag: DW_TAG_member, name: "rm", scope: !3524, file: !3464, line: 93, baseType: !266, size: 8, offset: 896)
!3539 = !DIDerivedType(tag: DW_TAG_member, name: "alimit", scope: !3524, file: !3464, line: 94, baseType: !266, size: 8, offset: 904)
!3540 = !DIDerivedType(tag: DW_TAG_member, name: "info", scope: !3524, file: !3464, line: 95, baseType: !3541, size: 64, offset: 960)
!3541 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3542, size: 64)
!3542 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "math_emu_info", file: !3543, line: 11, size: 128, elements: !3544)
!3543 = !DIFile(filename: "./arch/x86/include/asm/math_emu.h", directory: "/home/lizy2001/genbc/linux")
!3544 = !{!3545, !3546}
!3545 = !DIDerivedType(tag: DW_TAG_member, name: "___orig_eip", scope: !3542, file: !3543, line: 12, baseType: !31, size: 64)
!3546 = !DIDerivedType(tag: DW_TAG_member, name: "regs", scope: !3542, file: !3543, line: 13, baseType: !3547, size: 64, offset: 64)
!3547 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3548, size: 64)
!3548 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pt_regs", file: !3549, line: 56, size: 1344, elements: !3550)
!3549 = !DIFile(filename: "./arch/x86/include/asm/ptrace.h", directory: "/home/lizy2001/genbc/linux")
!3550 = !{!3551, !3552, !3553, !3554, !3555, !3556, !3557, !3558, !3559, !3560, !3561, !3562, !3563, !3564, !3565, !3566, !3567, !3568, !3569, !3570, !3571}
!3551 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !3548, file: !3549, line: 61, baseType: !287, size: 64)
!3552 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !3548, file: !3549, line: 62, baseType: !287, size: 64, offset: 64)
!3553 = !DIDerivedType(tag: DW_TAG_member, name: "r13", scope: !3548, file: !3549, line: 63, baseType: !287, size: 64, offset: 128)
!3554 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !3548, file: !3549, line: 64, baseType: !287, size: 64, offset: 192)
!3555 = !DIDerivedType(tag: DW_TAG_member, name: "bp", scope: !3548, file: !3549, line: 65, baseType: !287, size: 64, offset: 256)
!3556 = !DIDerivedType(tag: DW_TAG_member, name: "bx", scope: !3548, file: !3549, line: 66, baseType: !287, size: 64, offset: 320)
!3557 = !DIDerivedType(tag: DW_TAG_member, name: "r11", scope: !3548, file: !3549, line: 68, baseType: !287, size: 64, offset: 384)
!3558 = !DIDerivedType(tag: DW_TAG_member, name: "r10", scope: !3548, file: !3549, line: 69, baseType: !287, size: 64, offset: 448)
!3559 = !DIDerivedType(tag: DW_TAG_member, name: "r9", scope: !3548, file: !3549, line: 70, baseType: !287, size: 64, offset: 512)
!3560 = !DIDerivedType(tag: DW_TAG_member, name: "r8", scope: !3548, file: !3549, line: 71, baseType: !287, size: 64, offset: 576)
!3561 = !DIDerivedType(tag: DW_TAG_member, name: "ax", scope: !3548, file: !3549, line: 72, baseType: !287, size: 64, offset: 640)
!3562 = !DIDerivedType(tag: DW_TAG_member, name: "cx", scope: !3548, file: !3549, line: 73, baseType: !287, size: 64, offset: 704)
!3563 = !DIDerivedType(tag: DW_TAG_member, name: "dx", scope: !3548, file: !3549, line: 74, baseType: !287, size: 64, offset: 768)
!3564 = !DIDerivedType(tag: DW_TAG_member, name: "si", scope: !3548, file: !3549, line: 75, baseType: !287, size: 64, offset: 832)
!3565 = !DIDerivedType(tag: DW_TAG_member, name: "di", scope: !3548, file: !3549, line: 76, baseType: !287, size: 64, offset: 896)
!3566 = !DIDerivedType(tag: DW_TAG_member, name: "orig_ax", scope: !3548, file: !3549, line: 81, baseType: !287, size: 64, offset: 960)
!3567 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !3548, file: !3549, line: 83, baseType: !287, size: 64, offset: 1024)
!3568 = !DIDerivedType(tag: DW_TAG_member, name: "cs", scope: !3548, file: !3549, line: 84, baseType: !287, size: 64, offset: 1088)
!3569 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3548, file: !3549, line: 85, baseType: !287, size: 64, offset: 1152)
!3570 = !DIDerivedType(tag: DW_TAG_member, name: "sp", scope: !3548, file: !3549, line: 86, baseType: !287, size: 64, offset: 1216)
!3571 = !DIDerivedType(tag: DW_TAG_member, name: "ss", scope: !3548, file: !3549, line: 87, baseType: !287, size: 64, offset: 1280)
!3572 = !DIDerivedType(tag: DW_TAG_member, name: "entry_eip", scope: !3524, file: !3464, line: 96, baseType: !261, size: 32, offset: 1024)
!3573 = !DIDerivedType(tag: DW_TAG_member, name: "xsave", scope: !3469, file: !3464, line: 308, baseType: !3574, size: 4608, align: 512)
!3574 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xregs_state", file: !3464, line: 289, size: 4608, align: 512, elements: !3575)
!3575 = !{!3576, !3577, !3584}
!3576 = !DIDerivedType(tag: DW_TAG_member, name: "i387", scope: !3574, file: !3464, line: 290, baseType: !3487, size: 4096, align: 128)
!3577 = !DIDerivedType(tag: DW_TAG_member, name: "header", scope: !3574, file: !3464, line: 291, baseType: !3578, size: 512, offset: 4096)
!3578 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xstate_header", file: !3464, line: 268, size: 512, elements: !3579)
!3579 = !{!3580, !3581, !3582}
!3580 = !DIDerivedType(tag: DW_TAG_member, name: "xfeatures", scope: !3578, file: !3464, line: 269, baseType: !284, size: 64)
!3581 = !DIDerivedType(tag: DW_TAG_member, name: "xcomp_bv", scope: !3578, file: !3464, line: 270, baseType: !284, size: 64, offset: 64)
!3582 = !DIDerivedType(tag: DW_TAG_member, name: "reserved", scope: !3578, file: !3464, line: 271, baseType: !3583, size: 384, offset: 128)
!3583 = !DICompositeType(tag: DW_TAG_array_type, baseType: !284, size: 384, elements: !272)
!3584 = !DIDerivedType(tag: DW_TAG_member, name: "extended_state_area", scope: !3574, file: !3464, line: 292, baseType: !3585, offset: 4608)
!3585 = !DICompositeType(tag: DW_TAG_array_type, baseType: !266, elements: !3013)
!3586 = !DIDerivedType(tag: DW_TAG_member, name: "__padding", scope: !3469, file: !3464, line: 309, baseType: !3587, size: 32768)
!3587 = !DICompositeType(tag: DW_TAG_array_type, baseType: !266, size: 32768, elements: !3588)
!3588 = !{!3589}
!3589 = !DISubrange(count: 4096)
!3590 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2385, file: !992, line: 378, baseType: !3591, size: 64, offset: 64)
!3591 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2385, size: 64)
!3592 = !DIDerivedType(tag: DW_TAG_member, name: "startup", scope: !2381, file: !992, line: 384, baseType: !2657, size: 192, offset: 192)
!3593 = !DIDerivedType(tag: DW_TAG_member, name: "ioctx_lock", scope: !2159, file: !992, line: 500, baseType: !358, offset: 6656)
!3594 = !DIDerivedType(tag: DW_TAG_member, name: "ioctx_table", scope: !2159, file: !992, line: 501, baseType: !3595, size: 64, offset: 6656)
!3595 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3596, size: 64)
!3596 = !DICompositeType(tag: DW_TAG_structure_type, name: "kioctx_table", file: !992, line: 387, flags: DIFlagFwdDecl)
!3597 = !DIDerivedType(tag: DW_TAG_member, name: "user_ns", scope: !2159, file: !992, line: 516, baseType: !2863, size: 64, offset: 6720)
!3598 = !DIDerivedType(tag: DW_TAG_member, name: "exe_file", scope: !2159, file: !992, line: 519, baseType: !580, size: 64, offset: 6784)
!3599 = !DIDerivedType(tag: DW_TAG_member, name: "notifier_subscriptions", scope: !2159, file: !992, line: 521, baseType: !3600, size: 64, offset: 6848)
!3600 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3601, size: 64)
!3601 = !DICompositeType(tag: DW_TAG_structure_type, name: "mmu_notifier_subscriptions", file: !992, line: 521, flags: DIFlagFwdDecl)
!3602 = !DIDerivedType(tag: DW_TAG_member, name: "tlb_flush_pending", scope: !2159, file: !992, line: 545, baseType: !326, size: 32, offset: 6912)
!3603 = !DIDerivedType(tag: DW_TAG_member, name: "tlb_flush_batched", scope: !2159, file: !992, line: 548, baseType: !339, size: 8, offset: 6944)
!3604 = !DIDerivedType(tag: DW_TAG_member, name: "uprobes_state", scope: !2159, file: !992, line: 550, baseType: !3605, offset: 6952)
!3605 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uprobes_state", file: !3606, line: 142, elements: !372)
!3606 = !DIFile(filename: "./include/linux/uprobes.h", directory: "/home/lizy2001/genbc/linux")
!3607 = !DIDerivedType(tag: DW_TAG_member, name: "async_put_work", scope: !2159, file: !992, line: 554, baseType: !401, size: 256, offset: 6976)
!3608 = !DIDerivedType(tag: DW_TAG_member, name: "pasid", scope: !2159, file: !992, line: 557, baseType: !261, size: 32, offset: 7232)
!3609 = !DIDerivedType(tag: DW_TAG_member, name: "cpu_bitmap", scope: !2156, file: !992, line: 565, baseType: !3610, offset: 7296)
!3610 = !DICompositeType(tag: DW_TAG_array_type, baseType: !287, elements: !1322)
!3611 = !DIDerivedType(tag: DW_TAG_member, name: "pt_frag_refcount", scope: !2152, file: !992, line: 151, baseType: !326, size: 32)
!3612 = !DIDerivedType(tag: DW_TAG_member, name: "ptl", scope: !2144, file: !992, line: 156, baseType: !358, offset: 256)
!3613 = !DIDerivedType(tag: DW_TAG_member, scope: !996, file: !992, line: 159, baseType: !3614, size: 128)
!3614 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !996, file: !992, line: 159, size: 128, elements: !3615)
!3615 = !{!3616, !3660}
!3616 = !DIDerivedType(tag: DW_TAG_member, name: "pgmap", scope: !3614, file: !992, line: 161, baseType: !3617, size: 64)
!3617 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3618, size: 64)
!3618 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pagemap", file: !144, line: 110, size: 1152, elements: !3619)
!3619 = !{!3620, !3630, !3631, !3632, !3633, !3634, !3635, !3647, !3648, !3649}
!3620 = !DIDerivedType(tag: DW_TAG_member, name: "altmap", scope: !3618, file: !144, line: 111, baseType: !3621, size: 384)
!3621 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vmem_altmap", file: !144, line: 19, size: 384, elements: !3622)
!3622 = !{!3623, !3625, !3626, !3627, !3628, !3629}
!3623 = !DIDerivedType(tag: DW_TAG_member, name: "base_pfn", scope: !3621, file: !144, line: 20, baseType: !3624, size: 64)
!3624 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !287)
!3625 = !DIDerivedType(tag: DW_TAG_member, name: "end_pfn", scope: !3621, file: !144, line: 21, baseType: !3624, size: 64, offset: 64)
!3626 = !DIDerivedType(tag: DW_TAG_member, name: "reserve", scope: !3621, file: !144, line: 22, baseType: !3624, size: 64, offset: 128)
!3627 = !DIDerivedType(tag: DW_TAG_member, name: "free", scope: !3621, file: !144, line: 23, baseType: !287, size: 64, offset: 192)
!3628 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !3621, file: !144, line: 24, baseType: !287, size: 64, offset: 256)
!3629 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !3621, file: !144, line: 25, baseType: !287, size: 64, offset: 320)
!3630 = !DIDerivedType(tag: DW_TAG_member, name: "ref", scope: !3618, file: !144, line: 112, baseType: !1270, size: 64, offset: 384)
!3631 = !DIDerivedType(tag: DW_TAG_member, name: "internal_ref", scope: !3618, file: !144, line: 113, baseType: !1256, size: 128, offset: 448)
!3632 = !DIDerivedType(tag: DW_TAG_member, name: "done", scope: !3618, file: !144, line: 114, baseType: !2657, size: 192, offset: 576)
!3633 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !3618, file: !144, line: 115, baseType: !143, size: 32, offset: 768)
!3634 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3618, file: !144, line: 116, baseType: !7, size: 32, offset: 800)
!3635 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !3618, file: !144, line: 117, baseType: !3636, size: 64, offset: 832)
!3636 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3637, size: 64)
!3637 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3638)
!3638 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pagemap_ops", file: !144, line: 67, size: 256, elements: !3639)
!3639 = !{!3640, !3641, !3645, !3646}
!3640 = !DIDerivedType(tag: DW_TAG_member, name: "page_free", scope: !3638, file: !144, line: 73, baseType: !1105, size: 64)
!3641 = !DIDerivedType(tag: DW_TAG_member, name: "kill", scope: !3638, file: !144, line: 78, baseType: !3642, size: 64, offset: 64)
!3642 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3643, size: 64)
!3643 = !DISubroutineType(types: !3644)
!3644 = !{null, !3617}
!3645 = !DIDerivedType(tag: DW_TAG_member, name: "cleanup", scope: !3638, file: !144, line: 83, baseType: !3642, size: 64, offset: 128)
!3646 = !DIDerivedType(tag: DW_TAG_member, name: "migrate_to_ram", scope: !3638, file: !144, line: 89, baseType: !2208, size: 64, offset: 192)
!3647 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !3618, file: !144, line: 118, baseType: !247, size: 64, offset: 896)
!3648 = !DIDerivedType(tag: DW_TAG_member, name: "nr_range", scope: !3618, file: !144, line: 119, baseType: !294, size: 32, offset: 960)
!3649 = !DIDerivedType(tag: DW_TAG_member, scope: !3618, file: !144, line: 120, baseType: !3650, size: 128, offset: 1024)
!3650 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3618, file: !144, line: 120, size: 128, elements: !3651)
!3651 = !{!3652, !3658}
!3652 = !DIDerivedType(tag: DW_TAG_member, name: "range", scope: !3650, file: !144, line: 121, baseType: !3653, size: 128)
!3653 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "range", file: !3654, line: 6, size: 128, elements: !3655)
!3654 = !DIFile(filename: "./include/linux/range.h", directory: "/home/lizy2001/genbc/linux")
!3655 = !{!3656, !3657}
!3656 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !3653, file: !3654, line: 7, baseType: !284, size: 64)
!3657 = !DIDerivedType(tag: DW_TAG_member, name: "end", scope: !3653, file: !3654, line: 8, baseType: !284, size: 64, offset: 64)
!3658 = !DIDerivedType(tag: DW_TAG_member, name: "ranges", scope: !3650, file: !144, line: 122, baseType: !3659)
!3659 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3653, elements: !3013)
!3660 = !DIDerivedType(tag: DW_TAG_member, name: "zone_device_data", scope: !3614, file: !992, line: 162, baseType: !247, size: 64, offset: 64)
!3661 = !DIDerivedType(tag: DW_TAG_member, name: "callback_head", scope: !996, file: !992, line: 176, baseType: !593, size: 128, align: 64)
!3662 = !DIDerivedType(tag: DW_TAG_member, scope: !991, file: !992, line: 179, baseType: !3663, size: 32, offset: 384)
!3663 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !991, file: !992, line: 179, size: 32, elements: !3664)
!3664 = !{!3665, !3666, !3667, !3668}
!3665 = !DIDerivedType(tag: DW_TAG_member, name: "_mapcount", scope: !3663, file: !992, line: 184, baseType: !326, size: 32)
!3666 = !DIDerivedType(tag: DW_TAG_member, name: "page_type", scope: !3663, file: !992, line: 192, baseType: !7, size: 32)
!3667 = !DIDerivedType(tag: DW_TAG_member, name: "active", scope: !3663, file: !992, line: 194, baseType: !7, size: 32)
!3668 = !DIDerivedType(tag: DW_TAG_member, name: "units", scope: !3663, file: !992, line: 195, baseType: !294, size: 32)
!3669 = !DIDerivedType(tag: DW_TAG_member, name: "_refcount", scope: !991, file: !992, line: 199, baseType: !326, size: 32, offset: 416)
!3670 = !DIDerivedType(tag: DW_TAG_member, name: "nr_cached_objects", scope: !876, file: !157, line: 1964, baseType: !3671, size: 64, offset: 1344)
!3671 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3672, size: 64)
!3672 = !DISubroutineType(types: !3673)
!3673 = !{!31, !815, !3674}
!3674 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3675, size: 64)
!3675 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "shrink_control", file: !3676, line: 12, size: 256, elements: !3677)
!3676 = !DIFile(filename: "./include/linux/shrinker.h", directory: "/home/lizy2001/genbc/linux")
!3677 = !{!3678, !3679, !3680, !3681, !3682}
!3678 = !DIDerivedType(tag: DW_TAG_member, name: "gfp_mask", scope: !3675, file: !3676, line: 13, baseType: !248, size: 32)
!3679 = !DIDerivedType(tag: DW_TAG_member, name: "nid", scope: !3675, file: !3676, line: 16, baseType: !294, size: 32, offset: 32)
!3680 = !DIDerivedType(tag: DW_TAG_member, name: "nr_to_scan", scope: !3675, file: !3676, line: 23, baseType: !287, size: 64, offset: 64)
!3681 = !DIDerivedType(tag: DW_TAG_member, name: "nr_scanned", scope: !3675, file: !3676, line: 30, baseType: !287, size: 64, offset: 128)
!3682 = !DIDerivedType(tag: DW_TAG_member, name: "memcg", scope: !3675, file: !3676, line: 33, baseType: !3683, size: 64, offset: 192)
!3683 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3684, size: 64)
!3684 = !DICompositeType(tag: DW_TAG_structure_type, name: "mem_cgroup", file: !992, line: 27, flags: DIFlagFwdDecl)
!3685 = !DIDerivedType(tag: DW_TAG_member, name: "free_cached_objects", scope: !876, file: !157, line: 1966, baseType: !3671, size: 64, offset: 1408)
!3686 = !DIDerivedType(tag: DW_TAG_member, name: "dq_op", scope: !816, file: !157, line: 1424, baseType: !3687, size: 64, offset: 448)
!3687 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3688, size: 64)
!3688 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3689)
!3689 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dquot_operations", file: !151, line: 322, size: 704, elements: !3690)
!3690 = !{!3691, !3737, !3741, !3745, !3746, !3747, !3748, !3749, !3754, !3759, !3763}
!3691 = !DIDerivedType(tag: DW_TAG_member, name: "write_dquot", scope: !3689, file: !151, line: 323, baseType: !3692, size: 64)
!3692 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3693, size: 64)
!3693 = !DISubroutineType(types: !3694)
!3694 = !{!294, !3695}
!3695 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3696, size: 64)
!3696 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dquot", file: !151, line: 294, size: 1600, elements: !3697)
!3697 = !{!3698, !3699, !3700, !3701, !3702, !3703, !3704, !3705, !3706, !3722, !3723, !3724}
!3698 = !DIDerivedType(tag: DW_TAG_member, name: "dq_hash", scope: !3696, file: !151, line: 295, baseType: !858, size: 128)
!3699 = !DIDerivedType(tag: DW_TAG_member, name: "dq_inuse", scope: !3696, file: !151, line: 296, baseType: !300, size: 128, offset: 128)
!3700 = !DIDerivedType(tag: DW_TAG_member, name: "dq_free", scope: !3696, file: !151, line: 297, baseType: !300, size: 128, offset: 256)
!3701 = !DIDerivedType(tag: DW_TAG_member, name: "dq_dirty", scope: !3696, file: !151, line: 298, baseType: !300, size: 128, offset: 384)
!3702 = !DIDerivedType(tag: DW_TAG_member, name: "dq_lock", scope: !3696, file: !151, line: 299, baseType: !344, size: 192, offset: 512)
!3703 = !DIDerivedType(tag: DW_TAG_member, name: "dq_dqb_lock", scope: !3696, file: !151, line: 300, baseType: !358, offset: 704)
!3704 = !DIDerivedType(tag: DW_TAG_member, name: "dq_count", scope: !3696, file: !151, line: 301, baseType: !326, size: 32, offset: 704)
!3705 = !DIDerivedType(tag: DW_TAG_member, name: "dq_sb", scope: !3696, file: !151, line: 302, baseType: !815, size: 64, offset: 768)
!3706 = !DIDerivedType(tag: DW_TAG_member, name: "dq_id", scope: !3696, file: !151, line: 303, baseType: !3707, size: 64, offset: 832)
!3707 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kqid", file: !151, line: 68, size: 64, elements: !3708)
!3708 = !{!3709, !3721}
!3709 = !DIDerivedType(tag: DW_TAG_member, scope: !3707, file: !151, line: 69, baseType: !3710, size: 32)
!3710 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3707, file: !151, line: 69, size: 32, elements: !3711)
!3711 = !{!3712, !3713, !3714}
!3712 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !3710, file: !151, line: 70, baseType: !655, size: 32)
!3713 = !DIDerivedType(tag: DW_TAG_member, name: "gid", scope: !3710, file: !151, line: 71, baseType: !663, size: 32)
!3714 = !DIDerivedType(tag: DW_TAG_member, name: "projid", scope: !3710, file: !151, line: 72, baseType: !3715, size: 32)
!3715 = !DIDerivedType(tag: DW_TAG_typedef, name: "kprojid_t", file: !3716, line: 24, baseType: !3717)
!3716 = !DIFile(filename: "./include/linux/projid.h", directory: "/home/lizy2001/genbc/linux")
!3717 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !3716, line: 22, size: 32, elements: !3718)
!3718 = !{!3719}
!3719 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !3717, file: !3716, line: 23, baseType: !3720, size: 32)
!3720 = !DIDerivedType(tag: DW_TAG_typedef, name: "projid_t", file: !3716, line: 20, baseType: !661)
!3721 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !3707, file: !151, line: 74, baseType: !150, size: 32, offset: 32)
!3722 = !DIDerivedType(tag: DW_TAG_member, name: "dq_off", scope: !3696, file: !151, line: 304, baseType: !749, size: 64, offset: 896)
!3723 = !DIDerivedType(tag: DW_TAG_member, name: "dq_flags", scope: !3696, file: !151, line: 305, baseType: !287, size: 64, offset: 960)
!3724 = !DIDerivedType(tag: DW_TAG_member, name: "dq_dqb", scope: !3696, file: !151, line: 306, baseType: !3725, size: 576, offset: 1024)
!3725 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mem_dqblk", file: !151, line: 205, size: 576, elements: !3726)
!3726 = !{!3727, !3729, !3730, !3731, !3732, !3733, !3734, !3735, !3736}
!3727 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_bhardlimit", scope: !3725, file: !151, line: 206, baseType: !3728, size: 64)
!3728 = !DIDerivedType(tag: DW_TAG_typedef, name: "qsize_t", file: !151, line: 66, baseType: !356)
!3729 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_bsoftlimit", scope: !3725, file: !151, line: 207, baseType: !3728, size: 64, offset: 64)
!3730 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_curspace", scope: !3725, file: !151, line: 208, baseType: !3728, size: 64, offset: 128)
!3731 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_rsvspace", scope: !3725, file: !151, line: 209, baseType: !3728, size: 64, offset: 192)
!3732 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_ihardlimit", scope: !3725, file: !151, line: 210, baseType: !3728, size: 64, offset: 256)
!3733 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_isoftlimit", scope: !3725, file: !151, line: 211, baseType: !3728, size: 64, offset: 320)
!3734 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_curinodes", scope: !3725, file: !151, line: 212, baseType: !3728, size: 64, offset: 384)
!3735 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_btime", scope: !3725, file: !151, line: 213, baseType: !756, size: 64, offset: 448)
!3736 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_itime", scope: !3725, file: !151, line: 214, baseType: !756, size: 64, offset: 512)
!3737 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_dquot", scope: !3689, file: !151, line: 324, baseType: !3738, size: 64, offset: 64)
!3738 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3739, size: 64)
!3739 = !DISubroutineType(types: !3740)
!3740 = !{!3695, !815, !294}
!3741 = !DIDerivedType(tag: DW_TAG_member, name: "destroy_dquot", scope: !3689, file: !151, line: 325, baseType: !3742, size: 64, offset: 128)
!3742 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3743, size: 64)
!3743 = !DISubroutineType(types: !3744)
!3744 = !{null, !3695}
!3745 = !DIDerivedType(tag: DW_TAG_member, name: "acquire_dquot", scope: !3689, file: !151, line: 326, baseType: !3692, size: 64, offset: 192)
!3746 = !DIDerivedType(tag: DW_TAG_member, name: "release_dquot", scope: !3689, file: !151, line: 327, baseType: !3692, size: 64, offset: 256)
!3747 = !DIDerivedType(tag: DW_TAG_member, name: "mark_dirty", scope: !3689, file: !151, line: 328, baseType: !3692, size: 64, offset: 320)
!3748 = !DIDerivedType(tag: DW_TAG_member, name: "write_info", scope: !3689, file: !151, line: 329, baseType: !918, size: 64, offset: 384)
!3749 = !DIDerivedType(tag: DW_TAG_member, name: "get_reserved_space", scope: !3689, file: !151, line: 332, baseType: !3750, size: 64, offset: 448)
!3750 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3751, size: 64)
!3751 = !DISubroutineType(types: !3752)
!3752 = !{!3753, !649}
!3753 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3728, size: 64)
!3754 = !DIDerivedType(tag: DW_TAG_member, name: "get_projid", scope: !3689, file: !151, line: 333, baseType: !3755, size: 64, offset: 512)
!3755 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3756, size: 64)
!3756 = !DISubroutineType(types: !3757)
!3757 = !{!294, !649, !3758}
!3758 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3715, size: 64)
!3759 = !DIDerivedType(tag: DW_TAG_member, name: "get_inode_usage", scope: !3689, file: !151, line: 335, baseType: !3760, size: 64, offset: 576)
!3760 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3761, size: 64)
!3761 = !DISubroutineType(types: !3762)
!3762 = !{!294, !649, !3753}
!3763 = !DIDerivedType(tag: DW_TAG_member, name: "get_next_id", scope: !3689, file: !151, line: 337, baseType: !3764, size: 64, offset: 640)
!3764 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3765, size: 64)
!3765 = !DISubroutineType(types: !3766)
!3766 = !{!294, !815, !3767}
!3767 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3707, size: 64)
!3768 = !DIDerivedType(tag: DW_TAG_member, name: "s_qcop", scope: !816, file: !157, line: 1425, baseType: !3769, size: 64, offset: 512)
!3769 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3770, size: 64)
!3770 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3771)
!3771 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quotactl_ops", file: !151, line: 428, size: 704, elements: !3772)
!3772 = !{!3773, !3777, !3778, !3782, !3783, !3784, !3799, !3822, !3826, !3827, !3850}
!3773 = !DIDerivedType(tag: DW_TAG_member, name: "quota_on", scope: !3771, file: !151, line: 429, baseType: !3774, size: 64)
!3774 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3775, size: 64)
!3775 = !DISubroutineType(types: !3776)
!3776 = !{!294, !815, !294, !294, !765}
!3777 = !DIDerivedType(tag: DW_TAG_member, name: "quota_off", scope: !3771, file: !151, line: 430, baseType: !918, size: 64, offset: 64)
!3778 = !DIDerivedType(tag: DW_TAG_member, name: "quota_enable", scope: !3771, file: !151, line: 431, baseType: !3779, size: 64, offset: 128)
!3779 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3780, size: 64)
!3780 = !DISubroutineType(types: !3781)
!3781 = !{!294, !815, !7}
!3782 = !DIDerivedType(tag: DW_TAG_member, name: "quota_disable", scope: !3771, file: !151, line: 432, baseType: !3779, size: 64, offset: 192)
!3783 = !DIDerivedType(tag: DW_TAG_member, name: "quota_sync", scope: !3771, file: !151, line: 433, baseType: !918, size: 64, offset: 256)
!3784 = !DIDerivedType(tag: DW_TAG_member, name: "set_info", scope: !3771, file: !151, line: 434, baseType: !3785, size: 64, offset: 320)
!3785 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3786, size: 64)
!3786 = !DISubroutineType(types: !3787)
!3787 = !{!294, !815, !294, !3788}
!3788 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3789, size: 64)
!3789 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "qc_info", file: !151, line: 415, size: 256, elements: !3790)
!3790 = !{!3791, !3792, !3793, !3794, !3795, !3796, !3797, !3798}
!3791 = !DIDerivedType(tag: DW_TAG_member, name: "i_fieldmask", scope: !3789, file: !151, line: 416, baseType: !294, size: 32)
!3792 = !DIDerivedType(tag: DW_TAG_member, name: "i_flags", scope: !3789, file: !151, line: 417, baseType: !7, size: 32, offset: 32)
!3793 = !DIDerivedType(tag: DW_TAG_member, name: "i_spc_timelimit", scope: !3789, file: !151, line: 418, baseType: !7, size: 32, offset: 64)
!3794 = !DIDerivedType(tag: DW_TAG_member, name: "i_ino_timelimit", scope: !3789, file: !151, line: 420, baseType: !7, size: 32, offset: 96)
!3795 = !DIDerivedType(tag: DW_TAG_member, name: "i_rt_spc_timelimit", scope: !3789, file: !151, line: 421, baseType: !7, size: 32, offset: 128)
!3796 = !DIDerivedType(tag: DW_TAG_member, name: "i_spc_warnlimit", scope: !3789, file: !151, line: 422, baseType: !7, size: 32, offset: 160)
!3797 = !DIDerivedType(tag: DW_TAG_member, name: "i_ino_warnlimit", scope: !3789, file: !151, line: 423, baseType: !7, size: 32, offset: 192)
!3798 = !DIDerivedType(tag: DW_TAG_member, name: "i_rt_spc_warnlimit", scope: !3789, file: !151, line: 424, baseType: !7, size: 32, offset: 224)
!3799 = !DIDerivedType(tag: DW_TAG_member, name: "get_dqblk", scope: !3771, file: !151, line: 435, baseType: !3800, size: 64, offset: 384)
!3800 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3801, size: 64)
!3801 = !DISubroutineType(types: !3802)
!3802 = !{!294, !815, !3707, !3803}
!3803 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3804, size: 64)
!3804 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "qc_dqblk", file: !151, line: 343, size: 960, elements: !3805)
!3805 = !{!3806, !3807, !3808, !3809, !3810, !3811, !3812, !3813, !3814, !3815, !3816, !3817, !3818, !3819, !3820, !3821}
!3806 = !DIDerivedType(tag: DW_TAG_member, name: "d_fieldmask", scope: !3804, file: !151, line: 344, baseType: !294, size: 32)
!3807 = !DIDerivedType(tag: DW_TAG_member, name: "d_spc_hardlimit", scope: !3804, file: !151, line: 345, baseType: !284, size: 64, offset: 64)
!3808 = !DIDerivedType(tag: DW_TAG_member, name: "d_spc_softlimit", scope: !3804, file: !151, line: 346, baseType: !284, size: 64, offset: 128)
!3809 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino_hardlimit", scope: !3804, file: !151, line: 347, baseType: !284, size: 64, offset: 192)
!3810 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino_softlimit", scope: !3804, file: !151, line: 348, baseType: !284, size: 64, offset: 256)
!3811 = !DIDerivedType(tag: DW_TAG_member, name: "d_space", scope: !3804, file: !151, line: 349, baseType: !284, size: 64, offset: 320)
!3812 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino_count", scope: !3804, file: !151, line: 350, baseType: !284, size: 64, offset: 384)
!3813 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino_timer", scope: !3804, file: !151, line: 351, baseType: !354, size: 64, offset: 448)
!3814 = !DIDerivedType(tag: DW_TAG_member, name: "d_spc_timer", scope: !3804, file: !151, line: 353, baseType: !354, size: 64, offset: 512)
!3815 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino_warns", scope: !3804, file: !151, line: 354, baseType: !294, size: 32, offset: 576)
!3816 = !DIDerivedType(tag: DW_TAG_member, name: "d_spc_warns", scope: !3804, file: !151, line: 355, baseType: !294, size: 32, offset: 608)
!3817 = !DIDerivedType(tag: DW_TAG_member, name: "d_rt_spc_hardlimit", scope: !3804, file: !151, line: 356, baseType: !284, size: 64, offset: 640)
!3818 = !DIDerivedType(tag: DW_TAG_member, name: "d_rt_spc_softlimit", scope: !3804, file: !151, line: 357, baseType: !284, size: 64, offset: 704)
!3819 = !DIDerivedType(tag: DW_TAG_member, name: "d_rt_space", scope: !3804, file: !151, line: 358, baseType: !284, size: 64, offset: 768)
!3820 = !DIDerivedType(tag: DW_TAG_member, name: "d_rt_spc_timer", scope: !3804, file: !151, line: 359, baseType: !354, size: 64, offset: 832)
!3821 = !DIDerivedType(tag: DW_TAG_member, name: "d_rt_spc_warns", scope: !3804, file: !151, line: 360, baseType: !294, size: 32, offset: 896)
!3822 = !DIDerivedType(tag: DW_TAG_member, name: "get_nextdqblk", scope: !3771, file: !151, line: 436, baseType: !3823, size: 64, offset: 448)
!3823 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3824, size: 64)
!3824 = !DISubroutineType(types: !3825)
!3825 = !{!294, !815, !3767, !3803}
!3826 = !DIDerivedType(tag: DW_TAG_member, name: "set_dqblk", scope: !3771, file: !151, line: 438, baseType: !3800, size: 64, offset: 512)
!3827 = !DIDerivedType(tag: DW_TAG_member, name: "get_state", scope: !3771, file: !151, line: 439, baseType: !3828, size: 64, offset: 576)
!3828 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3829, size: 64)
!3829 = !DISubroutineType(types: !3830)
!3830 = !{!294, !815, !3831}
!3831 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3832, size: 64)
!3832 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "qc_state", file: !151, line: 409, size: 1408, elements: !3833)
!3833 = !{!3834, !3835}
!3834 = !DIDerivedType(tag: DW_TAG_member, name: "s_incoredqs", scope: !3832, file: !151, line: 410, baseType: !7, size: 32)
!3835 = !DIDerivedType(tag: DW_TAG_member, name: "s_state", scope: !3832, file: !151, line: 411, baseType: !3836, size: 1344, offset: 64)
!3836 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3837, size: 1344, elements: !506)
!3837 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "qc_type_state", file: !151, line: 395, size: 448, elements: !3838)
!3838 = !{!3839, !3840, !3841, !3842, !3843, !3844, !3845, !3846, !3847, !3849}
!3839 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3837, file: !151, line: 396, baseType: !7, size: 32)
!3840 = !DIDerivedType(tag: DW_TAG_member, name: "spc_timelimit", scope: !3837, file: !151, line: 397, baseType: !7, size: 32, offset: 32)
!3841 = !DIDerivedType(tag: DW_TAG_member, name: "ino_timelimit", scope: !3837, file: !151, line: 399, baseType: !7, size: 32, offset: 64)
!3842 = !DIDerivedType(tag: DW_TAG_member, name: "rt_spc_timelimit", scope: !3837, file: !151, line: 400, baseType: !7, size: 32, offset: 96)
!3843 = !DIDerivedType(tag: DW_TAG_member, name: "spc_warnlimit", scope: !3837, file: !151, line: 401, baseType: !7, size: 32, offset: 128)
!3844 = !DIDerivedType(tag: DW_TAG_member, name: "ino_warnlimit", scope: !3837, file: !151, line: 402, baseType: !7, size: 32, offset: 160)
!3845 = !DIDerivedType(tag: DW_TAG_member, name: "rt_spc_warnlimit", scope: !3837, file: !151, line: 403, baseType: !7, size: 32, offset: 192)
!3846 = !DIDerivedType(tag: DW_TAG_member, name: "ino", scope: !3837, file: !151, line: 404, baseType: !286, size: 64, offset: 256)
!3847 = !DIDerivedType(tag: DW_TAG_member, name: "blocks", scope: !3837, file: !151, line: 405, baseType: !3848, size: 64, offset: 320)
!3848 = !DIDerivedType(tag: DW_TAG_typedef, name: "blkcnt_t", file: !249, line: 126, baseType: !284)
!3849 = !DIDerivedType(tag: DW_TAG_member, name: "nextents", scope: !3837, file: !151, line: 406, baseType: !3848, size: 64, offset: 384)
!3850 = !DIDerivedType(tag: DW_TAG_member, name: "rm_xquota", scope: !3771, file: !151, line: 440, baseType: !3779, size: 64, offset: 640)
!3851 = !DIDerivedType(tag: DW_TAG_member, name: "s_export_op", scope: !816, file: !157, line: 1426, baseType: !3852, size: 64, offset: 576)
!3852 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3853, size: 64)
!3853 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3854)
!3854 = !DICompositeType(tag: DW_TAG_structure_type, name: "export_operations", file: !157, line: 49, flags: DIFlagFwdDecl)
!3855 = !DIDerivedType(tag: DW_TAG_member, name: "s_flags", scope: !816, file: !157, line: 1427, baseType: !287, size: 64, offset: 640)
!3856 = !DIDerivedType(tag: DW_TAG_member, name: "s_iflags", scope: !816, file: !157, line: 1428, baseType: !287, size: 64, offset: 704)
!3857 = !DIDerivedType(tag: DW_TAG_member, name: "s_magic", scope: !816, file: !157, line: 1429, baseType: !287, size: 64, offset: 768)
!3858 = !DIDerivedType(tag: DW_TAG_member, name: "s_root", scope: !816, file: !157, line: 1430, baseType: !610, size: 64, offset: 832)
!3859 = !DIDerivedType(tag: DW_TAG_member, name: "s_umount", scope: !816, file: !157, line: 1431, baseType: !1032, size: 256, offset: 896)
!3860 = !DIDerivedType(tag: DW_TAG_member, name: "s_count", scope: !816, file: !157, line: 1432, baseType: !294, size: 32, offset: 1152)
!3861 = !DIDerivedType(tag: DW_TAG_member, name: "s_active", scope: !816, file: !157, line: 1433, baseType: !326, size: 32, offset: 1184)
!3862 = !DIDerivedType(tag: DW_TAG_member, name: "s_xattr", scope: !816, file: !157, line: 1437, baseType: !3863, size: 64, offset: 1216)
!3863 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3864, size: 64)
!3864 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3865, size: 64)
!3865 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3866)
!3866 = !DICompositeType(tag: DW_TAG_structure_type, name: "xattr_handler", file: !157, line: 1437, flags: DIFlagFwdDecl)
!3867 = !DIDerivedType(tag: DW_TAG_member, name: "s_roots", scope: !816, file: !157, line: 1449, baseType: !3868, size: 64, offset: 1280)
!3868 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hlist_bl_head", file: !626, line: 34, size: 64, elements: !3869)
!3869 = !{!3870}
!3870 = !DIDerivedType(tag: DW_TAG_member, name: "first", scope: !3868, file: !626, line: 35, baseType: !629, size: 64)
!3871 = !DIDerivedType(tag: DW_TAG_member, name: "s_mounts", scope: !816, file: !157, line: 1450, baseType: !300, size: 128, offset: 1344)
!3872 = !DIDerivedType(tag: DW_TAG_member, name: "s_bdev", scope: !816, file: !157, line: 1451, baseType: !1228, size: 64, offset: 1472)
!3873 = !DIDerivedType(tag: DW_TAG_member, name: "s_bdi", scope: !816, file: !157, line: 1452, baseType: !1782, size: 64, offset: 1536)
!3874 = !DIDerivedType(tag: DW_TAG_member, name: "s_mtd", scope: !816, file: !157, line: 1453, baseType: !3875, size: 64, offset: 1600)
!3875 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3876, size: 64)
!3876 = !DICompositeType(tag: DW_TAG_structure_type, name: "mtd_info", file: !157, line: 1453, flags: DIFlagFwdDecl)
!3877 = !DIDerivedType(tag: DW_TAG_member, name: "s_instances", scope: !816, file: !157, line: 1454, baseType: !858, size: 128, offset: 1664)
!3878 = !DIDerivedType(tag: DW_TAG_member, name: "s_quota_types", scope: !816, file: !157, line: 1455, baseType: !7, size: 32, offset: 1792)
!3879 = !DIDerivedType(tag: DW_TAG_member, name: "s_dquot", scope: !816, file: !157, line: 1456, baseType: !3880, size: 2432, offset: 1856)
!3880 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quota_info", file: !151, line: 518, size: 2432, elements: !3881)
!3881 = !{!3882, !3883, !3884, !3886, !3918}
!3882 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3880, file: !151, line: 519, baseType: !7, size: 32)
!3883 = !DIDerivedType(tag: DW_TAG_member, name: "dqio_sem", scope: !3880, file: !151, line: 520, baseType: !1032, size: 256, offset: 64)
!3884 = !DIDerivedType(tag: DW_TAG_member, name: "files", scope: !3880, file: !151, line: 521, baseType: !3885, size: 192, offset: 320)
!3885 = !DICompositeType(tag: DW_TAG_array_type, baseType: !649, size: 192, elements: !506)
!3886 = !DIDerivedType(tag: DW_TAG_member, name: "info", scope: !3880, file: !151, line: 522, baseType: !3887, size: 1728, offset: 512)
!3887 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3888, size: 1728, elements: !506)
!3888 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mem_dqinfo", file: !151, line: 222, size: 576, elements: !3889)
!3889 = !{!3890, !3910, !3911, !3912, !3913, !3914, !3915, !3916, !3917}
!3890 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_format", scope: !3888, file: !151, line: 223, baseType: !3891, size: 64)
!3891 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3892, size: 64)
!3892 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quota_format_type", file: !151, line: 443, size: 256, elements: !3893)
!3893 = !{!3894, !3895, !3908, !3909}
!3894 = !DIDerivedType(tag: DW_TAG_member, name: "qf_fmt_id", scope: !3892, file: !151, line: 444, baseType: !294, size: 32)
!3895 = !DIDerivedType(tag: DW_TAG_member, name: "qf_ops", scope: !3892, file: !151, line: 445, baseType: !3896, size: 64, offset: 64)
!3896 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3897, size: 64)
!3897 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3898)
!3898 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quota_format_ops", file: !151, line: 310, size: 512, elements: !3899)
!3899 = !{!3900, !3901, !3902, !3903, !3904, !3905, !3906, !3907}
!3900 = !DIDerivedType(tag: DW_TAG_member, name: "check_quota_file", scope: !3898, file: !151, line: 311, baseType: !918, size: 64)
!3901 = !DIDerivedType(tag: DW_TAG_member, name: "read_file_info", scope: !3898, file: !151, line: 312, baseType: !918, size: 64, offset: 64)
!3902 = !DIDerivedType(tag: DW_TAG_member, name: "write_file_info", scope: !3898, file: !151, line: 313, baseType: !918, size: 64, offset: 128)
!3903 = !DIDerivedType(tag: DW_TAG_member, name: "free_file_info", scope: !3898, file: !151, line: 314, baseType: !918, size: 64, offset: 192)
!3904 = !DIDerivedType(tag: DW_TAG_member, name: "read_dqblk", scope: !3898, file: !151, line: 315, baseType: !3692, size: 64, offset: 256)
!3905 = !DIDerivedType(tag: DW_TAG_member, name: "commit_dqblk", scope: !3898, file: !151, line: 316, baseType: !3692, size: 64, offset: 320)
!3906 = !DIDerivedType(tag: DW_TAG_member, name: "release_dqblk", scope: !3898, file: !151, line: 317, baseType: !3692, size: 64, offset: 384)
!3907 = !DIDerivedType(tag: DW_TAG_member, name: "get_next_id", scope: !3898, file: !151, line: 318, baseType: !3764, size: 64, offset: 448)
!3908 = !DIDerivedType(tag: DW_TAG_member, name: "qf_owner", scope: !3892, file: !151, line: 446, baseType: !849, size: 64, offset: 128)
!3909 = !DIDerivedType(tag: DW_TAG_member, name: "qf_next", scope: !3892, file: !151, line: 447, baseType: !3891, size: 64, offset: 192)
!3910 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_fmt_id", scope: !3888, file: !151, line: 224, baseType: !294, size: 32, offset: 64)
!3911 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_dirty_list", scope: !3888, file: !151, line: 226, baseType: !300, size: 128, offset: 128)
!3912 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_flags", scope: !3888, file: !151, line: 227, baseType: !287, size: 64, offset: 256)
!3913 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_bgrace", scope: !3888, file: !151, line: 228, baseType: !7, size: 32, offset: 320)
!3914 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_igrace", scope: !3888, file: !151, line: 229, baseType: !7, size: 32, offset: 352)
!3915 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_max_spc_limit", scope: !3888, file: !151, line: 230, baseType: !3728, size: 64, offset: 384)
!3916 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_max_ino_limit", scope: !3888, file: !151, line: 231, baseType: !3728, size: 64, offset: 448)
!3917 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_priv", scope: !3888, file: !151, line: 232, baseType: !247, size: 64, offset: 512)
!3918 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !3880, file: !151, line: 523, baseType: !3919, size: 192, offset: 2240)
!3919 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3896, size: 192, elements: !506)
!3920 = !DIDerivedType(tag: DW_TAG_member, name: "s_writers", scope: !816, file: !157, line: 1458, baseType: !3921, size: 2112, offset: 4288)
!3921 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sb_writers", file: !157, line: 1410, size: 2112, elements: !3922)
!3922 = !{!3923, !3924, !3925}
!3923 = !DIDerivedType(tag: DW_TAG_member, name: "frozen", scope: !3921, file: !157, line: 1411, baseType: !294, size: 32)
!3924 = !DIDerivedType(tag: DW_TAG_member, name: "wait_unfrozen", scope: !3921, file: !157, line: 1412, baseType: !375, size: 128, offset: 64)
!3925 = !DIDerivedType(tag: DW_TAG_member, name: "rw_sem", scope: !3921, file: !157, line: 1413, baseType: !3926, size: 1920, offset: 192)
!3926 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3927, size: 1920, elements: !506)
!3927 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "percpu_rw_semaphore", file: !3928, line: 12, size: 640, elements: !3929)
!3928 = !DIFile(filename: "./include/linux/percpu-rwsem.h", directory: "/home/lizy2001/genbc/linux")
!3929 = !{!3930, !3938, !3939, !3944, !3945}
!3930 = !DIDerivedType(tag: DW_TAG_member, name: "rss", scope: !3927, file: !3928, line: 13, baseType: !3931, size: 320)
!3931 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rcu_sync", file: !3932, line: 17, size: 320, elements: !3933)
!3932 = !DIFile(filename: "./include/linux/rcu_sync.h", directory: "/home/lizy2001/genbc/linux")
!3933 = !{!3934, !3935, !3936, !3937}
!3934 = !DIDerivedType(tag: DW_TAG_member, name: "gp_state", scope: !3931, file: !3932, line: 18, baseType: !294, size: 32)
!3935 = !DIDerivedType(tag: DW_TAG_member, name: "gp_count", scope: !3931, file: !3932, line: 19, baseType: !294, size: 32, offset: 32)
!3936 = !DIDerivedType(tag: DW_TAG_member, name: "gp_wait", scope: !3931, file: !3932, line: 20, baseType: !375, size: 128, offset: 64)
!3937 = !DIDerivedType(tag: DW_TAG_member, name: "cb_head", scope: !3931, file: !3932, line: 22, baseType: !593, size: 128, align: 64, offset: 192)
!3938 = !DIDerivedType(tag: DW_TAG_member, name: "read_count", scope: !3927, file: !3928, line: 14, baseType: !1219, size: 64, offset: 320)
!3939 = !DIDerivedType(tag: DW_TAG_member, name: "writer", scope: !3927, file: !3928, line: 15, baseType: !3940, size: 64, offset: 384)
!3940 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rcuwait", file: !3941, line: 16, size: 64, elements: !3942)
!3941 = !DIFile(filename: "./include/linux/rcuwait.h", directory: "/home/lizy2001/genbc/linux")
!3942 = !{!3943}
!3943 = !DIDerivedType(tag: DW_TAG_member, name: "task", scope: !3940, file: !3941, line: 17, baseType: !2388, size: 64)
!3944 = !DIDerivedType(tag: DW_TAG_member, name: "waiters", scope: !3927, file: !3928, line: 16, baseType: !375, size: 128, offset: 448)
!3945 = !DIDerivedType(tag: DW_TAG_member, name: "block", scope: !3927, file: !3928, line: 17, baseType: !326, size: 32, offset: 576)
!3946 = !DIDerivedType(tag: DW_TAG_member, name: "s_fs_info", scope: !816, file: !157, line: 1465, baseType: !247, size: 64, offset: 6400)
!3947 = !DIDerivedType(tag: DW_TAG_member, name: "s_time_gran", scope: !816, file: !157, line: 1468, baseType: !261, size: 32, offset: 6464)
!3948 = !DIDerivedType(tag: DW_TAG_member, name: "s_time_min", scope: !816, file: !157, line: 1470, baseType: !756, size: 64, offset: 6528)
!3949 = !DIDerivedType(tag: DW_TAG_member, name: "s_time_max", scope: !816, file: !157, line: 1471, baseType: !756, size: 64, offset: 6592)
!3950 = !DIDerivedType(tag: DW_TAG_member, name: "s_fsnotify_mask", scope: !816, file: !157, line: 1473, baseType: !263, size: 32, offset: 6656)
!3951 = !DIDerivedType(tag: DW_TAG_member, name: "s_fsnotify_marks", scope: !816, file: !157, line: 1474, baseType: !3952, size: 64, offset: 6720)
!3952 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3953, size: 64)
!3953 = !DICompositeType(tag: DW_TAG_structure_type, name: "fsnotify_mark_connector", file: !157, line: 603, flags: DIFlagFwdDecl)
!3954 = !DIDerivedType(tag: DW_TAG_member, name: "s_id", scope: !816, file: !157, line: 1477, baseType: !1308, size: 256, offset: 6784)
!3955 = !DIDerivedType(tag: DW_TAG_member, name: "s_uuid", scope: !816, file: !157, line: 1478, baseType: !3956, size: 128, offset: 7040)
!3956 = !DIDerivedType(tag: DW_TAG_typedef, name: "uuid_t", file: !3957, line: 18, baseType: !3958)
!3957 = !DIFile(filename: "./include/linux/uuid.h", directory: "/home/lizy2001/genbc/linux")
!3958 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !3957, line: 16, size: 128, elements: !3959)
!3959 = !{!3960}
!3960 = !DIDerivedType(tag: DW_TAG_member, name: "b", scope: !3958, file: !3957, line: 17, baseType: !3961, size: 128)
!3961 = !DICompositeType(tag: DW_TAG_array_type, baseType: !267, size: 128, elements: !1924)
!3962 = !DIDerivedType(tag: DW_TAG_member, name: "s_max_links", scope: !816, file: !157, line: 1480, baseType: !7, size: 32, offset: 7168)
!3963 = !DIDerivedType(tag: DW_TAG_member, name: "s_mode", scope: !816, file: !157, line: 1481, baseType: !1436, size: 32, offset: 7200)
!3964 = !DIDerivedType(tag: DW_TAG_member, name: "s_vfs_rename_mutex", scope: !816, file: !157, line: 1487, baseType: !344, size: 192, offset: 7232)
!3965 = !DIDerivedType(tag: DW_TAG_member, name: "s_subtype", scope: !816, file: !157, line: 1493, baseType: !468, size: 64, offset: 7424)
!3966 = !DIDerivedType(tag: DW_TAG_member, name: "s_d_op", scope: !816, file: !157, line: 1495, baseType: !3967, size: 64, offset: 7488)
!3967 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3968, size: 64)
!3968 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3969)
!3969 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dentry_operations", file: !608, line: 135, size: 1024, align: 512, elements: !3970)
!3970 = !{!3971, !3975, !3976, !3983, !3989, !3993, !3997, !4001, !4002, !4006, !4010, !4015, !4019}
!3971 = !DIDerivedType(tag: DW_TAG_member, name: "d_revalidate", scope: !3969, file: !608, line: 136, baseType: !3972, size: 64)
!3972 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3973, size: 64)
!3973 = !DISubroutineType(types: !3974)
!3974 = !{!294, !610, !7}
!3975 = !DIDerivedType(tag: DW_TAG_member, name: "d_weak_revalidate", scope: !3969, file: !608, line: 137, baseType: !3972, size: 64, offset: 64)
!3976 = !DIDerivedType(tag: DW_TAG_member, name: "d_hash", scope: !3969, file: !608, line: 138, baseType: !3977, size: 64, offset: 128)
!3977 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3978, size: 64)
!3978 = !DISubroutineType(types: !3979)
!3979 = !{!294, !3980, !3982}
!3980 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3981, size: 64)
!3981 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !611)
!3982 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !634, size: 64)
!3983 = !DIDerivedType(tag: DW_TAG_member, name: "d_compare", scope: !3969, file: !608, line: 139, baseType: !3984, size: 64, offset: 192)
!3984 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3985, size: 64)
!3985 = !DISubroutineType(types: !3986)
!3986 = !{!294, !3980, !7, !468, !3987}
!3987 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3988, size: 64)
!3988 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !634)
!3989 = !DIDerivedType(tag: DW_TAG_member, name: "d_delete", scope: !3969, file: !608, line: 141, baseType: !3990, size: 64, offset: 256)
!3990 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3991, size: 64)
!3991 = !DISubroutineType(types: !3992)
!3992 = !{!294, !3980}
!3993 = !DIDerivedType(tag: DW_TAG_member, name: "d_init", scope: !3969, file: !608, line: 142, baseType: !3994, size: 64, offset: 320)
!3994 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3995, size: 64)
!3995 = !DISubroutineType(types: !3996)
!3996 = !{!294, !610}
!3997 = !DIDerivedType(tag: DW_TAG_member, name: "d_release", scope: !3969, file: !608, line: 143, baseType: !3998, size: 64, offset: 384)
!3998 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3999, size: 64)
!3999 = !DISubroutineType(types: !4000)
!4000 = !{null, !610}
!4001 = !DIDerivedType(tag: DW_TAG_member, name: "d_prune", scope: !3969, file: !608, line: 144, baseType: !3998, size: 64, offset: 448)
!4002 = !DIDerivedType(tag: DW_TAG_member, name: "d_iput", scope: !3969, file: !608, line: 145, baseType: !4003, size: 64, offset: 512)
!4003 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4004, size: 64)
!4004 = !DISubroutineType(types: !4005)
!4005 = !{null, !610, !649}
!4006 = !DIDerivedType(tag: DW_TAG_member, name: "d_dname", scope: !3969, file: !608, line: 146, baseType: !4007, size: 64, offset: 576)
!4007 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4008, size: 64)
!4008 = !DISubroutineType(types: !4009)
!4009 = !{!505, !610, !505, !294}
!4010 = !DIDerivedType(tag: DW_TAG_member, name: "d_automount", scope: !3969, file: !608, line: 147, baseType: !4011, size: 64, offset: 640)
!4011 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4012, size: 64)
!4012 = !DISubroutineType(types: !4013)
!4013 = !{!606, !4014}
!4014 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !602, size: 64)
!4015 = !DIDerivedType(tag: DW_TAG_member, name: "d_manage", scope: !3969, file: !608, line: 148, baseType: !4016, size: 64, offset: 704)
!4016 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4017, size: 64)
!4017 = !DISubroutineType(types: !4018)
!4018 = !{!294, !765, !339}
!4019 = !DIDerivedType(tag: DW_TAG_member, name: "d_real", scope: !3969, file: !608, line: 149, baseType: !4020, size: 64, offset: 768)
!4020 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4021, size: 64)
!4021 = !DISubroutineType(types: !4022)
!4022 = !{!610, !610, !4023}
!4023 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4024, size: 64)
!4024 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !650)
!4025 = !DIDerivedType(tag: DW_TAG_member, name: "cleancache_poolid", scope: !816, file: !157, line: 1500, baseType: !294, size: 32, offset: 7552)
!4026 = !DIDerivedType(tag: DW_TAG_member, name: "s_shrink", scope: !816, file: !157, line: 1502, baseType: !4027, size: 448, offset: 7616)
!4027 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "shrinker", file: !3676, line: 60, size: 448, elements: !4028)
!4028 = !{!4029, !4034, !4035, !4036, !4037, !4038, !4039}
!4029 = !DIDerivedType(tag: DW_TAG_member, name: "count_objects", scope: !4027, file: !3676, line: 61, baseType: !4030, size: 64)
!4030 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4031, size: 64)
!4031 = !DISubroutineType(types: !4032)
!4032 = !{!287, !4033, !3674}
!4033 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4027, size: 64)
!4034 = !DIDerivedType(tag: DW_TAG_member, name: "scan_objects", scope: !4027, file: !3676, line: 63, baseType: !4030, size: 64, offset: 64)
!4035 = !DIDerivedType(tag: DW_TAG_member, name: "batch", scope: !4027, file: !3676, line: 66, baseType: !31, size: 64, offset: 128)
!4036 = !DIDerivedType(tag: DW_TAG_member, name: "seeks", scope: !4027, file: !3676, line: 67, baseType: !294, size: 32, offset: 192)
!4037 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !4027, file: !3676, line: 68, baseType: !7, size: 32, offset: 224)
!4038 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !4027, file: !3676, line: 71, baseType: !300, size: 128, offset: 256)
!4039 = !DIDerivedType(tag: DW_TAG_member, name: "nr_deferred", scope: !4027, file: !3676, line: 77, baseType: !4040, size: 64, offset: 384)
!4040 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !348, size: 64)
!4041 = !DIDerivedType(tag: DW_TAG_member, name: "s_remove_count", scope: !816, file: !157, line: 1505, baseType: !348, size: 64, offset: 8064)
!4042 = !DIDerivedType(tag: DW_TAG_member, name: "s_fsnotify_inode_refs", scope: !816, file: !157, line: 1508, baseType: !348, size: 64, offset: 8128)
!4043 = !DIDerivedType(tag: DW_TAG_member, name: "s_readonly_remount", scope: !816, file: !157, line: 1511, baseType: !294, size: 32, offset: 8192)
!4044 = !DIDerivedType(tag: DW_TAG_member, name: "s_wb_err", scope: !816, file: !157, line: 1514, baseType: !2091, size: 32, offset: 8224)
!4045 = !DIDerivedType(tag: DW_TAG_member, name: "s_dio_done_wq", scope: !816, file: !157, line: 1517, baseType: !1296, size: 64, offset: 8256)
!4046 = !DIDerivedType(tag: DW_TAG_member, name: "s_pins", scope: !816, file: !157, line: 1518, baseType: !854, size: 64, offset: 8320)
!4047 = !DIDerivedType(tag: DW_TAG_member, name: "s_user_ns", scope: !816, file: !157, line: 1525, baseType: !2863, size: 64, offset: 8384)
!4048 = !DIDerivedType(tag: DW_TAG_member, name: "s_dentry_lru", scope: !816, file: !157, line: 1532, baseType: !4049, size: 64, offset: 8448)
!4049 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "list_lru", file: !4050, line: 52, size: 64, elements: !4051)
!4050 = !DIFile(filename: "./include/linux/list_lru.h", directory: "/home/lizy2001/genbc/linux")
!4051 = !{!4052}
!4052 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !4049, file: !4050, line: 53, baseType: !4053, size: 64)
!4053 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4054, size: 64)
!4054 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "list_lru_node", file: !4050, line: 40, size: 256, elements: !4055)
!4055 = !{!4056, !4057, !4062}
!4056 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !4054, file: !4050, line: 42, baseType: !358)
!4057 = !DIDerivedType(tag: DW_TAG_member, name: "lru", scope: !4054, file: !4050, line: 44, baseType: !4058, size: 192)
!4058 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "list_lru_one", file: !4050, line: 28, size: 192, elements: !4059)
!4059 = !{!4060, !4061}
!4060 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !4058, file: !4050, line: 29, baseType: !300, size: 128)
!4061 = !DIDerivedType(tag: DW_TAG_member, name: "nr_items", scope: !4058, file: !4050, line: 31, baseType: !31, size: 64, offset: 128)
!4062 = !DIDerivedType(tag: DW_TAG_member, name: "nr_items", scope: !4054, file: !4050, line: 49, baseType: !31, size: 64, offset: 192)
!4063 = !DIDerivedType(tag: DW_TAG_member, name: "s_inode_lru", scope: !816, file: !157, line: 1533, baseType: !4049, size: 64, offset: 8512)
!4064 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !816, file: !157, line: 1534, baseType: !593, size: 128, align: 64, offset: 8576)
!4065 = !DIDerivedType(tag: DW_TAG_member, name: "destroy_work", scope: !816, file: !157, line: 1535, baseType: !401, size: 256, offset: 8704)
!4066 = !DIDerivedType(tag: DW_TAG_member, name: "s_sync_lock", scope: !816, file: !157, line: 1537, baseType: !344, size: 192, offset: 8960)
!4067 = !DIDerivedType(tag: DW_TAG_member, name: "s_stack_depth", scope: !816, file: !157, line: 1542, baseType: !294, size: 32, offset: 9152)
!4068 = !DIDerivedType(tag: DW_TAG_member, name: "s_inode_list_lock", scope: !816, file: !157, line: 1545, baseType: !358, offset: 9184)
!4069 = !DIDerivedType(tag: DW_TAG_member, name: "s_inodes", scope: !816, file: !157, line: 1546, baseType: !300, size: 128, offset: 9216)
!4070 = !DIDerivedType(tag: DW_TAG_member, name: "s_inode_wblist_lock", scope: !816, file: !157, line: 1548, baseType: !358, offset: 9344)
!4071 = !DIDerivedType(tag: DW_TAG_member, name: "s_inodes_wb", scope: !816, file: !157, line: 1549, baseType: !300, size: 128, offset: 9344)
!4072 = !DIDerivedType(tag: DW_TAG_member, name: "i_mapping", scope: !650, file: !157, line: 624, baseType: !1003, size: 64, offset: 256)
!4073 = !DIDerivedType(tag: DW_TAG_member, name: "i_ino", scope: !650, file: !157, line: 631, baseType: !287, size: 64, offset: 320)
!4074 = !DIDerivedType(tag: DW_TAG_member, scope: !650, file: !157, line: 639, baseType: !4075, size: 32, offset: 384)
!4075 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !650, file: !157, line: 639, size: 32, elements: !4076)
!4076 = !{!4077, !4078}
!4077 = !DIDerivedType(tag: DW_TAG_member, name: "i_nlink", scope: !4075, file: !157, line: 640, baseType: !1752, size: 32)
!4078 = !DIDerivedType(tag: DW_TAG_member, name: "__i_nlink", scope: !4075, file: !157, line: 641, baseType: !7, size: 32)
!4079 = !DIDerivedType(tag: DW_TAG_member, name: "i_rdev", scope: !650, file: !157, line: 643, baseType: !731, size: 32, offset: 416)
!4080 = !DIDerivedType(tag: DW_TAG_member, name: "i_size", scope: !650, file: !157, line: 644, baseType: !749, size: 64, offset: 448)
!4081 = !DIDerivedType(tag: DW_TAG_member, name: "i_atime", scope: !650, file: !157, line: 645, baseType: !752, size: 128, offset: 512)
!4082 = !DIDerivedType(tag: DW_TAG_member, name: "i_mtime", scope: !650, file: !157, line: 646, baseType: !752, size: 128, offset: 640)
!4083 = !DIDerivedType(tag: DW_TAG_member, name: "i_ctime", scope: !650, file: !157, line: 647, baseType: !752, size: 128, offset: 768)
!4084 = !DIDerivedType(tag: DW_TAG_member, name: "i_lock", scope: !650, file: !157, line: 648, baseType: !358, offset: 896)
!4085 = !DIDerivedType(tag: DW_TAG_member, name: "i_bytes", scope: !650, file: !157, line: 649, baseType: !392, size: 16, offset: 896)
!4086 = !DIDerivedType(tag: DW_TAG_member, name: "i_blkbits", scope: !650, file: !157, line: 650, baseType: !266, size: 8, offset: 912)
!4087 = !DIDerivedType(tag: DW_TAG_member, name: "i_write_hint", scope: !650, file: !157, line: 651, baseType: !266, size: 8, offset: 920)
!4088 = !DIDerivedType(tag: DW_TAG_member, name: "i_blocks", scope: !650, file: !157, line: 652, baseType: !3848, size: 64, offset: 960)
!4089 = !DIDerivedType(tag: DW_TAG_member, name: "i_state", scope: !650, file: !157, line: 659, baseType: !287, size: 64, offset: 1024)
!4090 = !DIDerivedType(tag: DW_TAG_member, name: "i_rwsem", scope: !650, file: !157, line: 660, baseType: !1032, size: 256, offset: 1088)
!4091 = !DIDerivedType(tag: DW_TAG_member, name: "dirtied_when", scope: !650, file: !157, line: 662, baseType: !287, size: 64, offset: 1344)
!4092 = !DIDerivedType(tag: DW_TAG_member, name: "dirtied_time_when", scope: !650, file: !157, line: 663, baseType: !287, size: 64, offset: 1408)
!4093 = !DIDerivedType(tag: DW_TAG_member, name: "i_hash", scope: !650, file: !157, line: 665, baseType: !858, size: 128, offset: 1472)
!4094 = !DIDerivedType(tag: DW_TAG_member, name: "i_io_list", scope: !650, file: !157, line: 666, baseType: !300, size: 128, offset: 1600)
!4095 = !DIDerivedType(tag: DW_TAG_member, name: "i_lru", scope: !650, file: !157, line: 675, baseType: !300, size: 128, offset: 1728)
!4096 = !DIDerivedType(tag: DW_TAG_member, name: "i_sb_list", scope: !650, file: !157, line: 676, baseType: !300, size: 128, offset: 1856)
!4097 = !DIDerivedType(tag: DW_TAG_member, name: "i_wb_list", scope: !650, file: !157, line: 677, baseType: !300, size: 128, offset: 1984)
!4098 = !DIDerivedType(tag: DW_TAG_member, scope: !650, file: !157, line: 678, baseType: !4099, size: 128, offset: 2112)
!4099 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !650, file: !157, line: 678, size: 128, elements: !4100)
!4100 = !{!4101, !4102}
!4101 = !DIDerivedType(tag: DW_TAG_member, name: "i_dentry", scope: !4099, file: !157, line: 679, baseType: !854, size: 64)
!4102 = !DIDerivedType(tag: DW_TAG_member, name: "i_rcu", scope: !4099, file: !157, line: 680, baseType: !593, size: 128, align: 64)
!4103 = !DIDerivedType(tag: DW_TAG_member, name: "i_version", scope: !650, file: !157, line: 682, baseType: !350, size: 64, offset: 2240)
!4104 = !DIDerivedType(tag: DW_TAG_member, name: "i_sequence", scope: !650, file: !157, line: 683, baseType: !350, size: 64, offset: 2304)
!4105 = !DIDerivedType(tag: DW_TAG_member, name: "i_count", scope: !650, file: !157, line: 684, baseType: !326, size: 32, offset: 2368)
!4106 = !DIDerivedType(tag: DW_TAG_member, name: "i_dio_count", scope: !650, file: !157, line: 685, baseType: !326, size: 32, offset: 2400)
!4107 = !DIDerivedType(tag: DW_TAG_member, name: "i_writecount", scope: !650, file: !157, line: 686, baseType: !326, size: 32, offset: 2432)
!4108 = !DIDerivedType(tag: DW_TAG_member, name: "i_readcount", scope: !650, file: !157, line: 688, baseType: !326, size: 32, offset: 2464)
!4109 = !DIDerivedType(tag: DW_TAG_member, scope: !650, file: !157, line: 690, baseType: !4110, size: 64, offset: 2496)
!4110 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !650, file: !157, line: 690, size: 64, elements: !4111)
!4111 = !{!4112, !4334}
!4112 = !DIDerivedType(tag: DW_TAG_member, name: "i_fop", scope: !4110, file: !157, line: 691, baseType: !4113, size: 64)
!4113 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4114, size: 64)
!4114 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4115)
!4115 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_operations", file: !157, line: 1822, size: 2048, elements: !4116)
!4116 = !{!4117, !4118, !4122, !4126, !4130, !4131, !4132, !4136, !4149, !4150, !4158, !4162, !4163, !4167, !4168, !4172, !4177, !4178, !4182, !4186, !4294, !4298, !4299, !4303, !4304, !4308, !4312, !4317, !4321, !4325, !4329, !4333}
!4117 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !4115, file: !157, line: 1823, baseType: !849, size: 64)
!4118 = !DIDerivedType(tag: DW_TAG_member, name: "llseek", scope: !4115, file: !157, line: 1824, baseType: !4119, size: 64, offset: 64)
!4119 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4120, size: 64)
!4120 = !DISubroutineType(types: !4121)
!4121 = !{!749, !580, !749, !294}
!4122 = !DIDerivedType(tag: DW_TAG_member, name: "read", scope: !4115, file: !157, line: 1825, baseType: !4123, size: 64, offset: 128)
!4123 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4124, size: 64)
!4124 = !DISubroutineType(types: !4125)
!4125 = !{!536, !580, !505, !550, !965}
!4126 = !DIDerivedType(tag: DW_TAG_member, name: "write", scope: !4115, file: !157, line: 1826, baseType: !4127, size: 64, offset: 192)
!4127 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4128, size: 64)
!4128 = !DISubroutineType(types: !4129)
!4129 = !{!536, !580, !468, !550, !965}
!4130 = !DIDerivedType(tag: DW_TAG_member, name: "read_iter", scope: !4115, file: !157, line: 1827, baseType: !1109, size: 64, offset: 256)
!4131 = !DIDerivedType(tag: DW_TAG_member, name: "write_iter", scope: !4115, file: !157, line: 1828, baseType: !1109, size: 64, offset: 320)
!4132 = !DIDerivedType(tag: DW_TAG_member, name: "iopoll", scope: !4115, file: !157, line: 1829, baseType: !4133, size: 64, offset: 384)
!4133 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4134, size: 64)
!4134 = !DISubroutineType(types: !4135)
!4135 = !{!294, !1112, !339}
!4136 = !DIDerivedType(tag: DW_TAG_member, name: "iterate", scope: !4115, file: !157, line: 1830, baseType: !4137, size: 64, offset: 448)
!4137 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4138, size: 64)
!4138 = !DISubroutineType(types: !4139)
!4139 = !{!294, !580, !4140}
!4140 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4141, size: 64)
!4141 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dir_context", file: !157, line: 1776, size: 128, elements: !4142)
!4142 = !{!4143, !4148}
!4143 = !DIDerivedType(tag: DW_TAG_member, name: "actor", scope: !4141, file: !157, line: 1777, baseType: !4144, size: 64)
!4144 = !DIDerivedType(tag: DW_TAG_typedef, name: "filldir_t", file: !157, line: 1773, baseType: !4145)
!4145 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4146, size: 64)
!4146 = !DISubroutineType(types: !4147)
!4147 = !{!294, !4140, !468, !294, !749, !284, !7}
!4148 = !DIDerivedType(tag: DW_TAG_member, name: "pos", scope: !4141, file: !157, line: 1778, baseType: !749, size: 64, offset: 64)
!4149 = !DIDerivedType(tag: DW_TAG_member, name: "iterate_shared", scope: !4115, file: !157, line: 1831, baseType: !4137, size: 64, offset: 512)
!4150 = !DIDerivedType(tag: DW_TAG_member, name: "poll", scope: !4115, file: !157, line: 1832, baseType: !4151, size: 64, offset: 576)
!4151 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4152, size: 64)
!4152 = !DISubroutineType(types: !4153)
!4153 = !{!4154, !580, !4156}
!4154 = !DIDerivedType(tag: DW_TAG_typedef, name: "__poll_t", file: !4155, line: 52, baseType: !7)
!4155 = !DIFile(filename: "./include/uapi/linux/types.h", directory: "/home/lizy2001/genbc/linux")
!4156 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4157, size: 64)
!4157 = !DICompositeType(tag: DW_TAG_structure_type, name: "poll_table_struct", file: !835, line: 27, flags: DIFlagFwdDecl)
!4158 = !DIDerivedType(tag: DW_TAG_member, name: "unlocked_ioctl", scope: !4115, file: !157, line: 1833, baseType: !4159, size: 64, offset: 640)
!4159 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4160, size: 64)
!4160 = !DISubroutineType(types: !4161)
!4161 = !{!31, !580, !7, !287}
!4162 = !DIDerivedType(tag: DW_TAG_member, name: "compat_ioctl", scope: !4115, file: !157, line: 1834, baseType: !4159, size: 64, offset: 704)
!4163 = !DIDerivedType(tag: DW_TAG_member, name: "mmap", scope: !4115, file: !157, line: 1835, baseType: !4164, size: 64, offset: 768)
!4164 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4165, size: 64)
!4165 = !DISubroutineType(types: !4166)
!4166 = !{!294, !580, !2162}
!4167 = !DIDerivedType(tag: DW_TAG_member, name: "mmap_supported_flags", scope: !4115, file: !157, line: 1836, baseType: !287, size: 64, offset: 832)
!4168 = !DIDerivedType(tag: DW_TAG_member, name: "open", scope: !4115, file: !157, line: 1837, baseType: !4169, size: 64, offset: 896)
!4169 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4170, size: 64)
!4170 = !DISubroutineType(types: !4171)
!4171 = !{!294, !649, !580}
!4172 = !DIDerivedType(tag: DW_TAG_member, name: "flush", scope: !4115, file: !157, line: 1838, baseType: !4173, size: 64, offset: 960)
!4173 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4174, size: 64)
!4174 = !DISubroutineType(types: !4175)
!4175 = !{!294, !580, !4176}
!4176 = !DIDerivedType(tag: DW_TAG_typedef, name: "fl_owner_t", file: !157, line: 1007, baseType: !247)
!4177 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !4115, file: !157, line: 1839, baseType: !4169, size: 64, offset: 1024)
!4178 = !DIDerivedType(tag: DW_TAG_member, name: "fsync", scope: !4115, file: !157, line: 1840, baseType: !4179, size: 64, offset: 1088)
!4179 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4180, size: 64)
!4180 = !DISubroutineType(types: !4181)
!4181 = !{!294, !580, !749, !749, !294}
!4182 = !DIDerivedType(tag: DW_TAG_member, name: "fasync", scope: !4115, file: !157, line: 1841, baseType: !4183, size: 64, offset: 1152)
!4183 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4184, size: 64)
!4184 = !DISubroutineType(types: !4185)
!4185 = !{!294, !294, !580, !294}
!4186 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !4115, file: !157, line: 1842, baseType: !4187, size: 64, offset: 1216)
!4187 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4188, size: 64)
!4188 = !DISubroutineType(types: !4189)
!4189 = !{!294, !580, !294, !4190}
!4190 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4191, size: 64)
!4191 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_lock", file: !157, line: 1062, size: 1664, elements: !4192)
!4192 = !{!4193, !4194, !4195, !4196, !4197, !4198, !4199, !4200, !4201, !4202, !4203, !4204, !4205, !4206, !4207, !4224, !4225, !4226, !4239, !4270}
!4193 = !DIDerivedType(tag: DW_TAG_member, name: "fl_blocker", scope: !4191, file: !157, line: 1063, baseType: !4190, size: 64)
!4194 = !DIDerivedType(tag: DW_TAG_member, name: "fl_list", scope: !4191, file: !157, line: 1064, baseType: !300, size: 128, offset: 64)
!4195 = !DIDerivedType(tag: DW_TAG_member, name: "fl_link", scope: !4191, file: !157, line: 1065, baseType: !858, size: 128, offset: 192)
!4196 = !DIDerivedType(tag: DW_TAG_member, name: "fl_blocked_requests", scope: !4191, file: !157, line: 1066, baseType: !300, size: 128, offset: 320)
!4197 = !DIDerivedType(tag: DW_TAG_member, name: "fl_blocked_member", scope: !4191, file: !157, line: 1069, baseType: !300, size: 128, offset: 448)
!4198 = !DIDerivedType(tag: DW_TAG_member, name: "fl_owner", scope: !4191, file: !157, line: 1072, baseType: !4176, size: 64, offset: 576)
!4199 = !DIDerivedType(tag: DW_TAG_member, name: "fl_flags", scope: !4191, file: !157, line: 1073, baseType: !7, size: 32, offset: 640)
!4200 = !DIDerivedType(tag: DW_TAG_member, name: "fl_type", scope: !4191, file: !157, line: 1074, baseType: !268, size: 8, offset: 672)
!4201 = !DIDerivedType(tag: DW_TAG_member, name: "fl_pid", scope: !4191, file: !157, line: 1075, baseType: !7, size: 32, offset: 704)
!4202 = !DIDerivedType(tag: DW_TAG_member, name: "fl_link_cpu", scope: !4191, file: !157, line: 1076, baseType: !294, size: 32, offset: 736)
!4203 = !DIDerivedType(tag: DW_TAG_member, name: "fl_wait", scope: !4191, file: !157, line: 1077, baseType: !375, size: 128, offset: 768)
!4204 = !DIDerivedType(tag: DW_TAG_member, name: "fl_file", scope: !4191, file: !157, line: 1078, baseType: !580, size: 64, offset: 896)
!4205 = !DIDerivedType(tag: DW_TAG_member, name: "fl_start", scope: !4191, file: !157, line: 1079, baseType: !749, size: 64, offset: 960)
!4206 = !DIDerivedType(tag: DW_TAG_member, name: "fl_end", scope: !4191, file: !157, line: 1080, baseType: !749, size: 64, offset: 1024)
!4207 = !DIDerivedType(tag: DW_TAG_member, name: "fl_fasync", scope: !4191, file: !157, line: 1082, baseType: !4208, size: 64, offset: 1088)
!4208 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4209, size: 64)
!4209 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fasync_struct", file: !157, line: 1314, size: 320, elements: !4210)
!4210 = !{!4211, !4219, !4220, !4221, !4222, !4223}
!4211 = !DIDerivedType(tag: DW_TAG_member, name: "fa_lock", scope: !4209, file: !157, line: 1315, baseType: !4212)
!4212 = !DIDerivedType(tag: DW_TAG_typedef, name: "rwlock_t", file: !4213, line: 20, baseType: !4214)
!4213 = !DIFile(filename: "./include/linux/rwlock_types.h", directory: "/home/lizy2001/genbc/linux")
!4214 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !4213, line: 11, elements: !4215)
!4215 = !{!4216}
!4216 = !DIDerivedType(tag: DW_TAG_member, name: "raw_lock", scope: !4214, file: !4213, line: 12, baseType: !4217)
!4217 = !DIDerivedType(tag: DW_TAG_typedef, name: "arch_rwlock_t", file: !370, line: 33, baseType: !4218)
!4218 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !370, line: 31, elements: !372)
!4219 = !DIDerivedType(tag: DW_TAG_member, name: "magic", scope: !4209, file: !157, line: 1316, baseType: !294, size: 32)
!4220 = !DIDerivedType(tag: DW_TAG_member, name: "fa_fd", scope: !4209, file: !157, line: 1317, baseType: !294, size: 32, offset: 32)
!4221 = !DIDerivedType(tag: DW_TAG_member, name: "fa_next", scope: !4209, file: !157, line: 1318, baseType: !4208, size: 64, offset: 64)
!4222 = !DIDerivedType(tag: DW_TAG_member, name: "fa_file", scope: !4209, file: !157, line: 1319, baseType: !580, size: 64, offset: 128)
!4223 = !DIDerivedType(tag: DW_TAG_member, name: "fa_rcu", scope: !4209, file: !157, line: 1320, baseType: !593, size: 128, align: 64, offset: 192)
!4224 = !DIDerivedType(tag: DW_TAG_member, name: "fl_break_time", scope: !4191, file: !157, line: 1084, baseType: !287, size: 64, offset: 1152)
!4225 = !DIDerivedType(tag: DW_TAG_member, name: "fl_downgrade_time", scope: !4191, file: !157, line: 1085, baseType: !287, size: 64, offset: 1216)
!4226 = !DIDerivedType(tag: DW_TAG_member, name: "fl_ops", scope: !4191, file: !157, line: 1087, baseType: !4227, size: 64, offset: 1280)
!4227 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4228, size: 64)
!4228 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4229)
!4229 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_lock_operations", file: !157, line: 1011, size: 128, elements: !4230)
!4230 = !{!4231, !4235}
!4231 = !DIDerivedType(tag: DW_TAG_member, name: "fl_copy_lock", scope: !4229, file: !157, line: 1012, baseType: !4232, size: 64)
!4232 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4233, size: 64)
!4233 = !DISubroutineType(types: !4234)
!4234 = !{null, !4190, !4190}
!4235 = !DIDerivedType(tag: DW_TAG_member, name: "fl_release_private", scope: !4229, file: !157, line: 1013, baseType: !4236, size: 64, offset: 64)
!4236 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4237, size: 64)
!4237 = !DISubroutineType(types: !4238)
!4238 = !{null, !4190}
!4239 = !DIDerivedType(tag: DW_TAG_member, name: "fl_lmops", scope: !4191, file: !157, line: 1088, baseType: !4240, size: 64, offset: 1344)
!4240 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4241, size: 64)
!4241 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4242)
!4242 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lock_manager_operations", file: !157, line: 1016, size: 512, elements: !4243)
!4243 = !{!4244, !4248, !4252, !4253, !4257, !4261, !4265, !4269}
!4244 = !DIDerivedType(tag: DW_TAG_member, name: "lm_get_owner", scope: !4242, file: !157, line: 1017, baseType: !4245, size: 64)
!4245 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4246, size: 64)
!4246 = !DISubroutineType(types: !4247)
!4247 = !{!4176, !4176}
!4248 = !DIDerivedType(tag: DW_TAG_member, name: "lm_put_owner", scope: !4242, file: !157, line: 1018, baseType: !4249, size: 64, offset: 64)
!4249 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4250, size: 64)
!4250 = !DISubroutineType(types: !4251)
!4251 = !{null, !4176}
!4252 = !DIDerivedType(tag: DW_TAG_member, name: "lm_notify", scope: !4242, file: !157, line: 1019, baseType: !4236, size: 64, offset: 128)
!4253 = !DIDerivedType(tag: DW_TAG_member, name: "lm_grant", scope: !4242, file: !157, line: 1020, baseType: !4254, size: 64, offset: 192)
!4254 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4255, size: 64)
!4255 = !DISubroutineType(types: !4256)
!4256 = !{!294, !4190, !294}
!4257 = !DIDerivedType(tag: DW_TAG_member, name: "lm_break", scope: !4242, file: !157, line: 1021, baseType: !4258, size: 64, offset: 256)
!4258 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4259, size: 64)
!4259 = !DISubroutineType(types: !4260)
!4260 = !{!339, !4190}
!4261 = !DIDerivedType(tag: DW_TAG_member, name: "lm_change", scope: !4242, file: !157, line: 1022, baseType: !4262, size: 64, offset: 320)
!4262 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4263, size: 64)
!4263 = !DISubroutineType(types: !4264)
!4264 = !{!294, !4190, !294, !299}
!4265 = !DIDerivedType(tag: DW_TAG_member, name: "lm_setup", scope: !4242, file: !157, line: 1023, baseType: !4266, size: 64, offset: 384)
!4266 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4267, size: 64)
!4267 = !DISubroutineType(types: !4268)
!4268 = !{null, !4190, !1086}
!4269 = !DIDerivedType(tag: DW_TAG_member, name: "lm_breaker_owns_lease", scope: !4242, file: !157, line: 1024, baseType: !4258, size: 64, offset: 448)
!4270 = !DIDerivedType(tag: DW_TAG_member, name: "fl_u", scope: !4191, file: !157, line: 1097, baseType: !4271, size: 256, offset: 1408)
!4271 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4191, file: !157, line: 1089, size: 256, elements: !4272)
!4272 = !{!4273, !4282, !4288}
!4273 = !DIDerivedType(tag: DW_TAG_member, name: "nfs_fl", scope: !4271, file: !157, line: 1090, baseType: !4274, size: 256)
!4274 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "nfs_lock_info", file: !4275, line: 10, size: 256, elements: !4276)
!4275 = !DIFile(filename: "./include/linux/nfs_fs_i.h", directory: "/home/lizy2001/genbc/linux")
!4276 = !{!4277, !4278, !4281}
!4277 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !4274, file: !4275, line: 11, baseType: !261, size: 32)
!4278 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !4274, file: !4275, line: 12, baseType: !4279, size: 64, offset: 64)
!4279 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4280, size: 64)
!4280 = !DICompositeType(tag: DW_TAG_structure_type, name: "nlm_lockowner", file: !4275, line: 5, flags: DIFlagFwdDecl)
!4281 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !4274, file: !4275, line: 13, baseType: !300, size: 128, offset: 128)
!4282 = !DIDerivedType(tag: DW_TAG_member, name: "nfs4_fl", scope: !4271, file: !157, line: 1091, baseType: !4283, size: 64)
!4283 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "nfs4_lock_info", file: !4275, line: 17, size: 64, elements: !4284)
!4284 = !{!4285}
!4285 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !4283, file: !4275, line: 18, baseType: !4286, size: 64)
!4286 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4287, size: 64)
!4287 = !DICompositeType(tag: DW_TAG_structure_type, name: "nfs4_lock_state", file: !4275, line: 16, flags: DIFlagFwdDecl)
!4288 = !DIDerivedType(tag: DW_TAG_member, name: "afs", scope: !4271, file: !157, line: 1096, baseType: !4289, size: 192)
!4289 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !4271, file: !157, line: 1092, size: 192, elements: !4290)
!4290 = !{!4291, !4292, !4293}
!4291 = !DIDerivedType(tag: DW_TAG_member, name: "link", scope: !4289, file: !157, line: 1093, baseType: !300, size: 128)
!4292 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !4289, file: !157, line: 1094, baseType: !294, size: 32, offset: 128)
!4293 = !DIDerivedType(tag: DW_TAG_member, name: "debug_id", scope: !4289, file: !157, line: 1095, baseType: !7, size: 32, offset: 160)
!4294 = !DIDerivedType(tag: DW_TAG_member, name: "sendpage", scope: !4115, file: !157, line: 1843, baseType: !4295, size: 64, offset: 1280)
!4295 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4296, size: 64)
!4296 = !DISubroutineType(types: !4297)
!4297 = !{!536, !580, !990, !294, !550, !965, !294}
!4298 = !DIDerivedType(tag: DW_TAG_member, name: "get_unmapped_area", scope: !4115, file: !157, line: 1844, baseType: !2282, size: 64, offset: 1344)
!4299 = !DIDerivedType(tag: DW_TAG_member, name: "check_flags", scope: !4115, file: !157, line: 1845, baseType: !4300, size: 64, offset: 1408)
!4300 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4301, size: 64)
!4301 = !DISubroutineType(types: !4302)
!4302 = !{!294, !294}
!4303 = !DIDerivedType(tag: DW_TAG_member, name: "flock", scope: !4115, file: !157, line: 1846, baseType: !4187, size: 64, offset: 1472)
!4304 = !DIDerivedType(tag: DW_TAG_member, name: "splice_write", scope: !4115, file: !157, line: 1847, baseType: !4305, size: 64, offset: 1536)
!4305 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4306, size: 64)
!4306 = !DISubroutineType(types: !4307)
!4307 = !{!536, !3382, !580, !965, !550, !7}
!4308 = !DIDerivedType(tag: DW_TAG_member, name: "splice_read", scope: !4115, file: !157, line: 1848, baseType: !4309, size: 64, offset: 1600)
!4309 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4310, size: 64)
!4310 = !DISubroutineType(types: !4311)
!4311 = !{!536, !580, !965, !3382, !550, !7}
!4312 = !DIDerivedType(tag: DW_TAG_member, name: "setlease", scope: !4115, file: !157, line: 1849, baseType: !4313, size: 64, offset: 1664)
!4313 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4314, size: 64)
!4314 = !DISubroutineType(types: !4315)
!4315 = !{!294, !580, !31, !4316, !1086}
!4316 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4190, size: 64)
!4317 = !DIDerivedType(tag: DW_TAG_member, name: "fallocate", scope: !4115, file: !157, line: 1850, baseType: !4318, size: 64, offset: 1728)
!4318 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4319, size: 64)
!4319 = !DISubroutineType(types: !4320)
!4320 = !{!31, !580, !294, !749, !749}
!4321 = !DIDerivedType(tag: DW_TAG_member, name: "show_fdinfo", scope: !4115, file: !157, line: 1852, baseType: !4322, size: 64, offset: 1792)
!4322 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4323, size: 64)
!4323 = !DISubroutineType(types: !4324)
!4324 = !{null, !944, !580}
!4325 = !DIDerivedType(tag: DW_TAG_member, name: "copy_file_range", scope: !4115, file: !157, line: 1856, baseType: !4326, size: 64, offset: 1856)
!4326 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4327, size: 64)
!4327 = !DISubroutineType(types: !4328)
!4328 = !{!536, !580, !749, !580, !749, !550, !7}
!4329 = !DIDerivedType(tag: DW_TAG_member, name: "remap_file_range", scope: !4115, file: !157, line: 1858, baseType: !4330, size: 64, offset: 1920)
!4330 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4331, size: 64)
!4331 = !DISubroutineType(types: !4332)
!4332 = !{!749, !580, !749, !580, !749, !749, !7}
!4333 = !DIDerivedType(tag: DW_TAG_member, name: "fadvise", scope: !4115, file: !157, line: 1861, baseType: !4179, size: 64, offset: 1984)
!4334 = !DIDerivedType(tag: DW_TAG_member, name: "free_inode", scope: !4110, file: !157, line: 692, baseType: !883, size: 64)
!4335 = !DIDerivedType(tag: DW_TAG_member, name: "i_flctx", scope: !650, file: !157, line: 694, baseType: !4336, size: 64, offset: 2560)
!4336 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4337, size: 64)
!4337 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_lock_context", file: !157, line: 1100, size: 384, elements: !4338)
!4338 = !{!4339, !4340, !4341, !4342}
!4339 = !DIDerivedType(tag: DW_TAG_member, name: "flc_lock", scope: !4337, file: !157, line: 1101, baseType: !358)
!4340 = !DIDerivedType(tag: DW_TAG_member, name: "flc_flock", scope: !4337, file: !157, line: 1102, baseType: !300, size: 128)
!4341 = !DIDerivedType(tag: DW_TAG_member, name: "flc_posix", scope: !4337, file: !157, line: 1103, baseType: !300, size: 128, offset: 128)
!4342 = !DIDerivedType(tag: DW_TAG_member, name: "flc_lease", scope: !4337, file: !157, line: 1104, baseType: !300, size: 128, offset: 256)
!4343 = !DIDerivedType(tag: DW_TAG_member, name: "i_data", scope: !650, file: !157, line: 695, baseType: !1004, size: 1216, align: 64, offset: 2624)
!4344 = !DIDerivedType(tag: DW_TAG_member, name: "i_devices", scope: !650, file: !157, line: 696, baseType: !300, size: 128, offset: 3840)
!4345 = !DIDerivedType(tag: DW_TAG_member, scope: !650, file: !157, line: 697, baseType: !4346, size: 64, offset: 3968)
!4346 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !650, file: !157, line: 697, size: 64, elements: !4347)
!4347 = !{!4348, !4349, !4350, !4353, !4354}
!4348 = !DIDerivedType(tag: DW_TAG_member, name: "i_pipe", scope: !4346, file: !157, line: 698, baseType: !3382, size: 64)
!4349 = !DIDerivedType(tag: DW_TAG_member, name: "i_bdev", scope: !4346, file: !157, line: 699, baseType: !1228, size: 64)
!4350 = !DIDerivedType(tag: DW_TAG_member, name: "i_cdev", scope: !4346, file: !157, line: 700, baseType: !4351, size: 64)
!4351 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4352, size: 64)
!4352 = !DICompositeType(tag: DW_TAG_structure_type, name: "cdev", file: !157, line: 700, flags: DIFlagFwdDecl)
!4353 = !DIDerivedType(tag: DW_TAG_member, name: "i_link", scope: !4346, file: !157, line: 701, baseType: !505, size: 64)
!4354 = !DIDerivedType(tag: DW_TAG_member, name: "i_dir_seq", scope: !4346, file: !157, line: 702, baseType: !7, size: 32)
!4355 = !DIDerivedType(tag: DW_TAG_member, name: "i_generation", scope: !650, file: !157, line: 705, baseType: !263, size: 32, offset: 4032)
!4356 = !DIDerivedType(tag: DW_TAG_member, name: "i_fsnotify_mask", scope: !650, file: !157, line: 708, baseType: !263, size: 32, offset: 4064)
!4357 = !DIDerivedType(tag: DW_TAG_member, name: "i_fsnotify_marks", scope: !650, file: !157, line: 709, baseType: !3952, size: 64, offset: 4096)
!4358 = !DIDerivedType(tag: DW_TAG_member, name: "i_private", scope: !650, file: !157, line: 720, baseType: !247, size: 64, offset: 4160)
!4359 = !DIDerivedType(tag: DW_TAG_member, name: "d_iname", scope: !611, file: !608, line: 98, baseType: !4360, size: 256, offset: 448)
!4360 = !DICompositeType(tag: DW_TAG_array_type, baseType: !268, size: 256, elements: !1309)
!4361 = !DIDerivedType(tag: DW_TAG_member, name: "d_lockref", scope: !611, file: !608, line: 101, baseType: !4362, size: 32, offset: 704)
!4362 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lockref", file: !4363, line: 25, size: 32, elements: !4364)
!4363 = !DIFile(filename: "./include/linux/lockref.h", directory: "/home/lizy2001/genbc/linux")
!4364 = !{!4365}
!4365 = !DIDerivedType(tag: DW_TAG_member, scope: !4362, file: !4363, line: 26, baseType: !4366, size: 32)
!4366 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4362, file: !4363, line: 26, size: 32, elements: !4367)
!4367 = !{!4368}
!4368 = !DIDerivedType(tag: DW_TAG_member, scope: !4366, file: !4363, line: 30, baseType: !4369, size: 32)
!4369 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !4366, file: !4363, line: 30, size: 32, elements: !4370)
!4370 = !{!4371, !4372}
!4371 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !4369, file: !4363, line: 31, baseType: !358)
!4372 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !4369, file: !4363, line: 32, baseType: !294, size: 32)
!4373 = !DIDerivedType(tag: DW_TAG_member, name: "d_op", scope: !611, file: !608, line: 102, baseType: !3967, size: 64, offset: 768)
!4374 = !DIDerivedType(tag: DW_TAG_member, name: "d_sb", scope: !611, file: !608, line: 103, baseType: !815, size: 64, offset: 832)
!4375 = !DIDerivedType(tag: DW_TAG_member, name: "d_time", scope: !611, file: !608, line: 104, baseType: !287, size: 64, offset: 896)
!4376 = !DIDerivedType(tag: DW_TAG_member, name: "d_fsdata", scope: !611, file: !608, line: 105, baseType: !247, size: 64, offset: 960)
!4377 = !DIDerivedType(tag: DW_TAG_member, scope: !611, file: !608, line: 107, baseType: !4378, size: 128, offset: 1024)
!4378 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !611, file: !608, line: 107, size: 128, elements: !4379)
!4379 = !{!4380, !4381}
!4380 = !DIDerivedType(tag: DW_TAG_member, name: "d_lru", scope: !4378, file: !608, line: 108, baseType: !300, size: 128)
!4381 = !DIDerivedType(tag: DW_TAG_member, name: "d_wait", scope: !4378, file: !608, line: 109, baseType: !4382, size: 64)
!4382 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !375, size: 64)
!4383 = !DIDerivedType(tag: DW_TAG_member, name: "d_child", scope: !611, file: !608, line: 111, baseType: !300, size: 128, offset: 1152)
!4384 = !DIDerivedType(tag: DW_TAG_member, name: "d_subdirs", scope: !611, file: !608, line: 112, baseType: !300, size: 128, offset: 1280)
!4385 = !DIDerivedType(tag: DW_TAG_member, name: "d_u", scope: !611, file: !608, line: 120, baseType: !4386, size: 128, offset: 1408)
!4386 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !611, file: !608, line: 116, size: 128, elements: !4387)
!4387 = !{!4388, !4389, !4390}
!4388 = !DIDerivedType(tag: DW_TAG_member, name: "d_alias", scope: !4386, file: !608, line: 117, baseType: !858, size: 128)
!4389 = !DIDerivedType(tag: DW_TAG_member, name: "d_in_lookup_hash", scope: !4386, file: !608, line: 118, baseType: !625, size: 128)
!4390 = !DIDerivedType(tag: DW_TAG_member, name: "d_rcu", scope: !4386, file: !608, line: 119, baseType: !593, size: 128, align: 64)
!4391 = !DIDerivedType(tag: DW_TAG_member, name: "f_inode", scope: !581, file: !157, line: 922, baseType: !649, size: 64, offset: 256)
!4392 = !DIDerivedType(tag: DW_TAG_member, name: "f_op", scope: !581, file: !157, line: 923, baseType: !4113, size: 64, offset: 320)
!4393 = !DIDerivedType(tag: DW_TAG_member, name: "f_lock", scope: !581, file: !157, line: 929, baseType: !358, offset: 384)
!4394 = !DIDerivedType(tag: DW_TAG_member, name: "f_write_hint", scope: !581, file: !157, line: 930, baseType: !156, size: 32, offset: 384)
!4395 = !DIDerivedType(tag: DW_TAG_member, name: "f_count", scope: !581, file: !157, line: 931, baseType: !348, size: 64, offset: 448)
!4396 = !DIDerivedType(tag: DW_TAG_member, name: "f_flags", scope: !581, file: !157, line: 932, baseType: !7, size: 32, offset: 512)
!4397 = !DIDerivedType(tag: DW_TAG_member, name: "f_mode", scope: !581, file: !157, line: 933, baseType: !1436, size: 32, offset: 544)
!4398 = !DIDerivedType(tag: DW_TAG_member, name: "f_pos_lock", scope: !581, file: !157, line: 934, baseType: !344, size: 192, offset: 576)
!4399 = !DIDerivedType(tag: DW_TAG_member, name: "f_pos", scope: !581, file: !157, line: 935, baseType: !749, size: 64, offset: 768)
!4400 = !DIDerivedType(tag: DW_TAG_member, name: "f_owner", scope: !581, file: !157, line: 936, baseType: !4401, size: 192, offset: 832)
!4401 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fown_struct", file: !157, line: 885, size: 192, elements: !4402)
!4402 = !{!4403, !4404, !4405, !4406, !4407, !4408}
!4403 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !4401, file: !157, line: 886, baseType: !4212)
!4404 = !DIDerivedType(tag: DW_TAG_member, name: "pid", scope: !4401, file: !157, line: 887, baseType: !2632, size: 64)
!4405 = !DIDerivedType(tag: DW_TAG_member, name: "pid_type", scope: !4401, file: !157, line: 888, baseType: !165, size: 32, offset: 64)
!4406 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !4401, file: !157, line: 889, baseType: !655, size: 32, offset: 96)
!4407 = !DIDerivedType(tag: DW_TAG_member, name: "euid", scope: !4401, file: !157, line: 889, baseType: !655, size: 32, offset: 128)
!4408 = !DIDerivedType(tag: DW_TAG_member, name: "signum", scope: !4401, file: !157, line: 890, baseType: !294, size: 32, offset: 160)
!4409 = !DIDerivedType(tag: DW_TAG_member, name: "f_cred", scope: !581, file: !157, line: 937, baseType: !2702, size: 64, offset: 1024)
!4410 = !DIDerivedType(tag: DW_TAG_member, name: "f_ra", scope: !581, file: !157, line: 938, baseType: !4411, size: 256, offset: 1088)
!4411 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_ra_state", file: !157, line: 896, size: 256, elements: !4412)
!4412 = !{!4413, !4414, !4415, !4416, !4417, !4418}
!4413 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !4411, file: !157, line: 897, baseType: !287, size: 64)
!4414 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !4411, file: !157, line: 898, baseType: !7, size: 32, offset: 64)
!4415 = !DIDerivedType(tag: DW_TAG_member, name: "async_size", scope: !4411, file: !157, line: 899, baseType: !7, size: 32, offset: 96)
!4416 = !DIDerivedType(tag: DW_TAG_member, name: "ra_pages", scope: !4411, file: !157, line: 902, baseType: !7, size: 32, offset: 128)
!4417 = !DIDerivedType(tag: DW_TAG_member, name: "mmap_miss", scope: !4411, file: !157, line: 903, baseType: !7, size: 32, offset: 160)
!4418 = !DIDerivedType(tag: DW_TAG_member, name: "prev_pos", scope: !4411, file: !157, line: 904, baseType: !749, size: 64, offset: 192)
!4419 = !DIDerivedType(tag: DW_TAG_member, name: "f_version", scope: !581, file: !157, line: 940, baseType: !284, size: 64, offset: 1344)
!4420 = !DIDerivedType(tag: DW_TAG_member, name: "private_data", scope: !581, file: !157, line: 945, baseType: !247, size: 64, offset: 1408)
!4421 = !DIDerivedType(tag: DW_TAG_member, name: "f_ep_links", scope: !581, file: !157, line: 949, baseType: !300, size: 128, offset: 1472)
!4422 = !DIDerivedType(tag: DW_TAG_member, name: "f_tfile_llink", scope: !581, file: !157, line: 950, baseType: !300, size: 128, offset: 1600)
!4423 = !DIDerivedType(tag: DW_TAG_member, name: "f_mapping", scope: !581, file: !157, line: 952, baseType: !1003, size: 64, offset: 1728)
!4424 = !DIDerivedType(tag: DW_TAG_member, name: "f_wb_err", scope: !581, file: !157, line: 953, baseType: !2091, size: 32, offset: 1792)
!4425 = !DIDerivedType(tag: DW_TAG_member, name: "f_sb_err", scope: !581, file: !157, line: 954, baseType: !2091, size: 32, offset: 1824)
!4426 = !DIDerivedType(tag: DW_TAG_member, name: "write", scope: !571, file: !530, line: 174, baseType: !577, size: 64, offset: 320)
!4427 = !DIDerivedType(tag: DW_TAG_member, name: "mmap", scope: !571, file: !530, line: 176, baseType: !4428, size: 64, offset: 384)
!4428 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4429, size: 64)
!4429 = !DISubroutineType(types: !4430)
!4430 = !{!294, !580, !472, !570, !2162}
!4431 = !DIDerivedType(tag: DW_TAG_member, name: "attrs", scope: !559, file: !530, line: 90, baseType: !554, size: 64, offset: 192)
!4432 = !DIDerivedType(tag: DW_TAG_member, name: "bin_attrs", scope: !559, file: !530, line: 91, baseType: !4433, size: 64, offset: 256)
!4433 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !570, size: 64)
!4434 = !DIDerivedType(tag: DW_TAG_member, name: "child_ns_type", scope: !520, file: !465, line: 143, baseType: !4435, size: 64, offset: 256)
!4435 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4436, size: 64)
!4436 = !DISubroutineType(types: !4437)
!4437 = !{!4438, !472}
!4438 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4439, size: 64)
!4439 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4440)
!4440 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kobj_ns_type_operations", file: !174, line: 39, size: 384, elements: !4441)
!4441 = !{!4442, !4443, !4447, !4451, !4457, !4461}
!4442 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !4440, file: !174, line: 40, baseType: !173, size: 32)
!4443 = !DIDerivedType(tag: DW_TAG_member, name: "current_may_mount", scope: !4440, file: !174, line: 41, baseType: !4444, size: 64, offset: 64)
!4444 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4445, size: 64)
!4445 = !DISubroutineType(types: !4446)
!4446 = !{!339}
!4447 = !DIDerivedType(tag: DW_TAG_member, name: "grab_current_ns", scope: !4440, file: !174, line: 42, baseType: !4448, size: 64, offset: 128)
!4448 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4449, size: 64)
!4449 = !DISubroutineType(types: !4450)
!4450 = !{!247}
!4451 = !DIDerivedType(tag: DW_TAG_member, name: "netlink_ns", scope: !4440, file: !174, line: 43, baseType: !4452, size: 64, offset: 192)
!4452 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4453, size: 64)
!4453 = !DISubroutineType(types: !4454)
!4454 = !{!457, !4455}
!4455 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4456, size: 64)
!4456 = !DICompositeType(tag: DW_TAG_structure_type, name: "sock", file: !174, line: 19, flags: DIFlagFwdDecl)
!4457 = !DIDerivedType(tag: DW_TAG_member, name: "initial_ns", scope: !4440, file: !174, line: 44, baseType: !4458, size: 64, offset: 256)
!4458 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4459, size: 64)
!4459 = !DISubroutineType(types: !4460)
!4460 = !{!457}
!4461 = !DIDerivedType(tag: DW_TAG_member, name: "drop_ns", scope: !4440, file: !174, line: 45, baseType: !688, size: 64, offset: 320)
!4462 = !DIDerivedType(tag: DW_TAG_member, name: "namespace", scope: !520, file: !465, line: 144, baseType: !4463, size: 64, offset: 320)
!4463 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4464, size: 64)
!4464 = !DISubroutineType(types: !4465)
!4465 = !{!457, !472}
!4466 = !DIDerivedType(tag: DW_TAG_member, name: "get_ownership", scope: !520, file: !465, line: 145, baseType: !4467, size: 64, offset: 384)
!4467 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4468, size: 64)
!4468 = !DISubroutineType(types: !4469)
!4469 = !{null, !472, !2973, !2974}
!4470 = !DIDerivedType(tag: DW_TAG_member, name: "sd", scope: !464, file: !465, line: 70, baseType: !4471, size: 64, offset: 384)
!4471 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4472, size: 64)
!4472 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_node", file: !835, line: 123, size: 1024, elements: !4473)
!4473 = !{!4474, !4475, !4476, !4477, !4478, !4479, !4480, !4481, !4590, !4591, !4592, !4593, !4594}
!4474 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !4472, file: !835, line: 124, baseType: !326, size: 32)
!4475 = !DIDerivedType(tag: DW_TAG_member, name: "active", scope: !4472, file: !835, line: 125, baseType: !326, size: 32, offset: 32)
!4476 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !4472, file: !835, line: 135, baseType: !4471, size: 64, offset: 64)
!4477 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !4472, file: !835, line: 136, baseType: !468, size: 64, offset: 128)
!4478 = !DIDerivedType(tag: DW_TAG_member, name: "rb", scope: !4472, file: !835, line: 138, baseType: !1025, size: 192, align: 64, offset: 192)
!4479 = !DIDerivedType(tag: DW_TAG_member, name: "ns", scope: !4472, file: !835, line: 140, baseType: !457, size: 64, offset: 384)
!4480 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !4472, file: !835, line: 141, baseType: !7, size: 32, offset: 448)
!4481 = !DIDerivedType(tag: DW_TAG_member, scope: !4472, file: !835, line: 142, baseType: !4482, size: 256, offset: 512)
!4482 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4472, file: !835, line: 142, size: 256, elements: !4483)
!4483 = !{!4484, !4530, !4534}
!4484 = !DIDerivedType(tag: DW_TAG_member, name: "dir", scope: !4482, file: !835, line: 143, baseType: !4485, size: 192)
!4485 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_elem_dir", file: !835, line: 91, size: 192, elements: !4486)
!4486 = !{!4487, !4488, !4489}
!4487 = !DIDerivedType(tag: DW_TAG_member, name: "subdirs", scope: !4485, file: !835, line: 92, baseType: !287, size: 64)
!4488 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !4485, file: !835, line: 94, baseType: !1021, size: 64, offset: 64)
!4489 = !DIDerivedType(tag: DW_TAG_member, name: "root", scope: !4485, file: !835, line: 100, baseType: !4490, size: 64, offset: 128)
!4490 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4491, size: 64)
!4491 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_root", file: !835, line: 180, size: 704, elements: !4492)
!4492 = !{!4493, !4494, !4495, !4502, !4503, !4504, !4528, !4529}
!4493 = !DIDerivedType(tag: DW_TAG_member, name: "kn", scope: !4491, file: !835, line: 182, baseType: !4471, size: 64)
!4494 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !4491, file: !835, line: 183, baseType: !7, size: 32, offset: 64)
!4495 = !DIDerivedType(tag: DW_TAG_member, name: "ino_idr", scope: !4491, file: !835, line: 186, baseType: !4496, size: 192, offset: 128)
!4496 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "idr", file: !4497, line: 19, size: 192, elements: !4498)
!4497 = !DIFile(filename: "./include/linux/idr.h", directory: "/home/lizy2001/genbc/linux")
!4498 = !{!4499, !4500, !4501}
!4499 = !DIDerivedType(tag: DW_TAG_member, name: "idr_rt", scope: !4496, file: !4497, line: 20, baseType: !1008, size: 128)
!4500 = !DIDerivedType(tag: DW_TAG_member, name: "idr_base", scope: !4496, file: !4497, line: 21, baseType: !7, size: 32, offset: 128)
!4501 = !DIDerivedType(tag: DW_TAG_member, name: "idr_next", scope: !4496, file: !4497, line: 22, baseType: !7, size: 32, offset: 160)
!4502 = !DIDerivedType(tag: DW_TAG_member, name: "last_id_lowbits", scope: !4491, file: !835, line: 187, baseType: !261, size: 32, offset: 320)
!4503 = !DIDerivedType(tag: DW_TAG_member, name: "id_highbits", scope: !4491, file: !835, line: 188, baseType: !261, size: 32, offset: 352)
!4504 = !DIDerivedType(tag: DW_TAG_member, name: "syscall_ops", scope: !4491, file: !835, line: 189, baseType: !4505, size: 64, offset: 384)
!4505 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4506, size: 64)
!4506 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_syscall_ops", file: !835, line: 168, size: 320, elements: !4507)
!4507 = !{!4508, !4512, !4516, !4520, !4524}
!4508 = !DIDerivedType(tag: DW_TAG_member, name: "show_options", scope: !4506, file: !835, line: 169, baseType: !4509, size: 64)
!4509 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4510, size: 64)
!4510 = !DISubroutineType(types: !4511)
!4511 = !{!294, !944, !4490}
!4512 = !DIDerivedType(tag: DW_TAG_member, name: "mkdir", scope: !4506, file: !835, line: 171, baseType: !4513, size: 64, offset: 64)
!4513 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4514, size: 64)
!4514 = !DISubroutineType(types: !4515)
!4515 = !{!294, !4471, !468, !545}
!4516 = !DIDerivedType(tag: DW_TAG_member, name: "rmdir", scope: !4506, file: !835, line: 173, baseType: !4517, size: 64, offset: 128)
!4517 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4518, size: 64)
!4518 = !DISubroutineType(types: !4519)
!4519 = !{!294, !4471}
!4520 = !DIDerivedType(tag: DW_TAG_member, name: "rename", scope: !4506, file: !835, line: 174, baseType: !4521, size: 64, offset: 192)
!4521 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4522, size: 64)
!4522 = !DISubroutineType(types: !4523)
!4523 = !{!294, !4471, !4471, !468}
!4524 = !DIDerivedType(tag: DW_TAG_member, name: "show_path", scope: !4506, file: !835, line: 176, baseType: !4525, size: 64, offset: 256)
!4525 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4526, size: 64)
!4526 = !DISubroutineType(types: !4527)
!4527 = !{!294, !944, !4471, !4490}
!4528 = !DIDerivedType(tag: DW_TAG_member, name: "supers", scope: !4491, file: !835, line: 192, baseType: !300, size: 128, offset: 448)
!4529 = !DIDerivedType(tag: DW_TAG_member, name: "deactivate_waitq", scope: !4491, file: !835, line: 194, baseType: !375, size: 128, offset: 576)
!4530 = !DIDerivedType(tag: DW_TAG_member, name: "symlink", scope: !4482, file: !835, line: 144, baseType: !4531, size: 64)
!4531 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_elem_symlink", file: !835, line: 103, size: 64, elements: !4532)
!4532 = !{!4533}
!4533 = !DIDerivedType(tag: DW_TAG_member, name: "target_kn", scope: !4531, file: !835, line: 104, baseType: !4471, size: 64)
!4534 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !4482, file: !835, line: 145, baseType: !4535, size: 256)
!4535 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_elem_attr", file: !835, line: 107, size: 256, elements: !4536)
!4536 = !{!4537, !4585, !4588, !4589}
!4537 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !4535, file: !835, line: 108, baseType: !4538, size: 64)
!4538 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4539, size: 64)
!4539 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4540)
!4540 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_ops", file: !835, line: 217, size: 768, elements: !4541)
!4541 = !{!4542, !4562, !4566, !4567, !4568, !4569, !4570, !4574, !4575, !4576, !4577, !4581}
!4542 = !DIDerivedType(tag: DW_TAG_member, name: "open", scope: !4540, file: !835, line: 222, baseType: !4543, size: 64)
!4543 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4544, size: 64)
!4544 = !DISubroutineType(types: !4545)
!4545 = !{!294, !4546}
!4546 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4547, size: 64)
!4547 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_open_file", file: !835, line: 197, size: 1088, elements: !4548)
!4548 = !{!4549, !4550, !4551, !4552, !4553, !4554, !4555, !4556, !4557, !4558, !4559, !4560, !4561}
!4549 = !DIDerivedType(tag: DW_TAG_member, name: "kn", scope: !4547, file: !835, line: 199, baseType: !4471, size: 64)
!4550 = !DIDerivedType(tag: DW_TAG_member, name: "file", scope: !4547, file: !835, line: 200, baseType: !580, size: 64, offset: 64)
!4551 = !DIDerivedType(tag: DW_TAG_member, name: "seq_file", scope: !4547, file: !835, line: 201, baseType: !944, size: 64, offset: 128)
!4552 = !DIDerivedType(tag: DW_TAG_member, name: "priv", scope: !4547, file: !835, line: 202, baseType: !247, size: 64, offset: 192)
!4553 = !DIDerivedType(tag: DW_TAG_member, name: "mutex", scope: !4547, file: !835, line: 205, baseType: !344, size: 192, offset: 256)
!4554 = !DIDerivedType(tag: DW_TAG_member, name: "prealloc_mutex", scope: !4547, file: !835, line: 206, baseType: !344, size: 192, offset: 448)
!4555 = !DIDerivedType(tag: DW_TAG_member, name: "event", scope: !4547, file: !835, line: 207, baseType: !294, size: 32, offset: 640)
!4556 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !4547, file: !835, line: 208, baseType: !300, size: 128, offset: 704)
!4557 = !DIDerivedType(tag: DW_TAG_member, name: "prealloc_buf", scope: !4547, file: !835, line: 209, baseType: !505, size: 64, offset: 832)
!4558 = !DIDerivedType(tag: DW_TAG_member, name: "atomic_write_len", scope: !4547, file: !835, line: 211, baseType: !550, size: 64, offset: 896)
!4559 = !DIDerivedType(tag: DW_TAG_member, name: "mmapped", scope: !4547, file: !835, line: 212, baseType: !339, size: 1, offset: 960, flags: DIFlagBitField, extraData: i64 960)
!4560 = !DIDerivedType(tag: DW_TAG_member, name: "released", scope: !4547, file: !835, line: 213, baseType: !339, size: 1, offset: 961, flags: DIFlagBitField, extraData: i64 960)
!4561 = !DIDerivedType(tag: DW_TAG_member, name: "vm_ops", scope: !4547, file: !835, line: 214, baseType: !2190, size: 64, offset: 1024)
!4562 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !4540, file: !835, line: 223, baseType: !4563, size: 64, offset: 64)
!4563 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4564, size: 64)
!4564 = !DISubroutineType(types: !4565)
!4565 = !{null, !4546}
!4566 = !DIDerivedType(tag: DW_TAG_member, name: "seq_show", scope: !4540, file: !835, line: 236, baseType: !975, size: 64, offset: 128)
!4567 = !DIDerivedType(tag: DW_TAG_member, name: "seq_start", scope: !4540, file: !835, line: 238, baseType: !962, size: 64, offset: 192)
!4568 = !DIDerivedType(tag: DW_TAG_member, name: "seq_next", scope: !4540, file: !835, line: 239, baseType: !971, size: 64, offset: 256)
!4569 = !DIDerivedType(tag: DW_TAG_member, name: "seq_stop", scope: !4540, file: !835, line: 240, baseType: !967, size: 64, offset: 320)
!4570 = !DIDerivedType(tag: DW_TAG_member, name: "read", scope: !4540, file: !835, line: 242, baseType: !4571, size: 64, offset: 384)
!4571 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4572, size: 64)
!4572 = !DISubroutineType(types: !4573)
!4573 = !{!536, !4546, !505, !550, !749}
!4574 = !DIDerivedType(tag: DW_TAG_member, name: "atomic_write_len", scope: !4540, file: !835, line: 252, baseType: !550, size: 64, offset: 448)
!4575 = !DIDerivedType(tag: DW_TAG_member, name: "prealloc", scope: !4540, file: !835, line: 259, baseType: !339, size: 8, offset: 512)
!4576 = !DIDerivedType(tag: DW_TAG_member, name: "write", scope: !4540, file: !835, line: 260, baseType: !4571, size: 64, offset: 576)
!4577 = !DIDerivedType(tag: DW_TAG_member, name: "poll", scope: !4540, file: !835, line: 263, baseType: !4578, size: 64, offset: 640)
!4578 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4579, size: 64)
!4579 = !DISubroutineType(types: !4580)
!4580 = !{!4154, !4546, !4156}
!4581 = !DIDerivedType(tag: DW_TAG_member, name: "mmap", scope: !4540, file: !835, line: 266, baseType: !4582, size: 64, offset: 704)
!4582 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4583, size: 64)
!4583 = !DISubroutineType(types: !4584)
!4584 = !{!294, !4546, !2162}
!4585 = !DIDerivedType(tag: DW_TAG_member, name: "open", scope: !4535, file: !835, line: 109, baseType: !4586, size: 64, offset: 64)
!4586 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4587, size: 64)
!4587 = !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_open_node", file: !835, line: 31, flags: DIFlagFwdDecl)
!4588 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !4535, file: !835, line: 110, baseType: !749, size: 64, offset: 128)
!4589 = !DIDerivedType(tag: DW_TAG_member, name: "notify_next", scope: !4535, file: !835, line: 111, baseType: !4471, size: 64, offset: 192)
!4590 = !DIDerivedType(tag: DW_TAG_member, name: "priv", scope: !4472, file: !835, line: 148, baseType: !247, size: 64, offset: 768)
!4591 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !4472, file: !835, line: 154, baseType: !284, size: 64, offset: 832)
!4592 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !4472, file: !835, line: 156, baseType: !392, size: 16, offset: 896)
!4593 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !4472, file: !835, line: 157, baseType: !545, size: 16, offset: 912)
!4594 = !DIDerivedType(tag: DW_TAG_member, name: "iattr", scope: !4472, file: !835, line: 158, baseType: !4595, size: 64, offset: 960)
!4595 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4596, size: 64)
!4596 = !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_iattrs", file: !835, line: 32, flags: DIFlagFwdDecl)
!4597 = !DIDerivedType(tag: DW_TAG_member, name: "kref", scope: !464, file: !465, line: 71, baseType: !318, size: 32, offset: 448)
!4598 = !DIDerivedType(tag: DW_TAG_member, name: "state_initialized", scope: !464, file: !465, line: 75, baseType: !7, size: 1, offset: 480, flags: DIFlagBitField, extraData: i64 480)
!4599 = !DIDerivedType(tag: DW_TAG_member, name: "state_in_sysfs", scope: !464, file: !465, line: 76, baseType: !7, size: 1, offset: 481, flags: DIFlagBitField, extraData: i64 480)
!4600 = !DIDerivedType(tag: DW_TAG_member, name: "state_add_uevent_sent", scope: !464, file: !465, line: 77, baseType: !7, size: 1, offset: 482, flags: DIFlagBitField, extraData: i64 480)
!4601 = !DIDerivedType(tag: DW_TAG_member, name: "state_remove_uevent_sent", scope: !464, file: !465, line: 78, baseType: !7, size: 1, offset: 483, flags: DIFlagBitField, extraData: i64 480)
!4602 = !DIDerivedType(tag: DW_TAG_member, name: "uevent_suppress", scope: !464, file: !465, line: 79, baseType: !7, size: 1, offset: 484, flags: DIFlagBitField, extraData: i64 480)
!4603 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !461, file: !186, line: 463, baseType: !1855, size: 64, offset: 512)
!4604 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !461, file: !186, line: 465, baseType: !4605, size: 64, offset: 576)
!4605 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4606, size: 64)
!4606 = !DICompositeType(tag: DW_TAG_structure_type, name: "device_private", file: !186, line: 36, flags: DIFlagFwdDecl)
!4607 = !DIDerivedType(tag: DW_TAG_member, name: "init_name", scope: !461, file: !186, line: 467, baseType: !468, size: 64, offset: 640)
!4608 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !461, file: !186, line: 468, baseType: !4609, size: 64, offset: 704)
!4609 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4610, size: 64)
!4610 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4611)
!4611 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_type", file: !186, line: 87, size: 384, elements: !4612)
!4612 = !{!4613, !4614, !4615, !4619, !4623, !4627}
!4613 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !4611, file: !186, line: 88, baseType: !468, size: 64)
!4614 = !DIDerivedType(tag: DW_TAG_member, name: "groups", scope: !4611, file: !186, line: 89, baseType: !556, size: 64, offset: 64)
!4615 = !DIDerivedType(tag: DW_TAG_member, name: "uevent", scope: !4611, file: !186, line: 90, baseType: !4616, size: 64, offset: 128)
!4616 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4617, size: 64)
!4617 = !DISubroutineType(types: !4618)
!4618 = !{!294, !1855, !500}
!4619 = !DIDerivedType(tag: DW_TAG_member, name: "devnode", scope: !4611, file: !186, line: 91, baseType: !4620, size: 64, offset: 192)
!4620 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4621, size: 64)
!4621 = !DISubroutineType(types: !4622)
!4622 = !{!505, !1855, !1502, !2973, !2974}
!4623 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !4611, file: !186, line: 93, baseType: !4624, size: 64, offset: 256)
!4624 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4625, size: 64)
!4625 = !DISubroutineType(types: !4626)
!4626 = !{null, !1855}
!4627 = !DIDerivedType(tag: DW_TAG_member, name: "pm", scope: !4611, file: !186, line: 95, baseType: !4628, size: 64, offset: 320)
!4628 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4629, size: 64)
!4629 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4630)
!4630 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pm_ops", file: !115, line: 278, size: 1472, elements: !4631)
!4631 = !{!4632, !4636, !4637, !4638, !4639, !4640, !4641, !4642, !4643, !4644, !4645, !4646, !4647, !4648, !4649, !4650, !4651, !4652, !4653, !4654, !4655, !4656, !4657}
!4632 = !DIDerivedType(tag: DW_TAG_member, name: "prepare", scope: !4630, file: !115, line: 279, baseType: !4633, size: 64)
!4633 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4634, size: 64)
!4634 = !DISubroutineType(types: !4635)
!4635 = !{!294, !1855}
!4636 = !DIDerivedType(tag: DW_TAG_member, name: "complete", scope: !4630, file: !115, line: 280, baseType: !4624, size: 64, offset: 64)
!4637 = !DIDerivedType(tag: DW_TAG_member, name: "suspend", scope: !4630, file: !115, line: 281, baseType: !4633, size: 64, offset: 128)
!4638 = !DIDerivedType(tag: DW_TAG_member, name: "resume", scope: !4630, file: !115, line: 282, baseType: !4633, size: 64, offset: 192)
!4639 = !DIDerivedType(tag: DW_TAG_member, name: "freeze", scope: !4630, file: !115, line: 283, baseType: !4633, size: 64, offset: 256)
!4640 = !DIDerivedType(tag: DW_TAG_member, name: "thaw", scope: !4630, file: !115, line: 284, baseType: !4633, size: 64, offset: 320)
!4641 = !DIDerivedType(tag: DW_TAG_member, name: "poweroff", scope: !4630, file: !115, line: 285, baseType: !4633, size: 64, offset: 384)
!4642 = !DIDerivedType(tag: DW_TAG_member, name: "restore", scope: !4630, file: !115, line: 286, baseType: !4633, size: 64, offset: 448)
!4643 = !DIDerivedType(tag: DW_TAG_member, name: "suspend_late", scope: !4630, file: !115, line: 287, baseType: !4633, size: 64, offset: 512)
!4644 = !DIDerivedType(tag: DW_TAG_member, name: "resume_early", scope: !4630, file: !115, line: 288, baseType: !4633, size: 64, offset: 576)
!4645 = !DIDerivedType(tag: DW_TAG_member, name: "freeze_late", scope: !4630, file: !115, line: 289, baseType: !4633, size: 64, offset: 640)
!4646 = !DIDerivedType(tag: DW_TAG_member, name: "thaw_early", scope: !4630, file: !115, line: 290, baseType: !4633, size: 64, offset: 704)
!4647 = !DIDerivedType(tag: DW_TAG_member, name: "poweroff_late", scope: !4630, file: !115, line: 291, baseType: !4633, size: 64, offset: 768)
!4648 = !DIDerivedType(tag: DW_TAG_member, name: "restore_early", scope: !4630, file: !115, line: 292, baseType: !4633, size: 64, offset: 832)
!4649 = !DIDerivedType(tag: DW_TAG_member, name: "suspend_noirq", scope: !4630, file: !115, line: 293, baseType: !4633, size: 64, offset: 896)
!4650 = !DIDerivedType(tag: DW_TAG_member, name: "resume_noirq", scope: !4630, file: !115, line: 294, baseType: !4633, size: 64, offset: 960)
!4651 = !DIDerivedType(tag: DW_TAG_member, name: "freeze_noirq", scope: !4630, file: !115, line: 295, baseType: !4633, size: 64, offset: 1024)
!4652 = !DIDerivedType(tag: DW_TAG_member, name: "thaw_noirq", scope: !4630, file: !115, line: 296, baseType: !4633, size: 64, offset: 1088)
!4653 = !DIDerivedType(tag: DW_TAG_member, name: "poweroff_noirq", scope: !4630, file: !115, line: 297, baseType: !4633, size: 64, offset: 1152)
!4654 = !DIDerivedType(tag: DW_TAG_member, name: "restore_noirq", scope: !4630, file: !115, line: 298, baseType: !4633, size: 64, offset: 1216)
!4655 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_suspend", scope: !4630, file: !115, line: 299, baseType: !4633, size: 64, offset: 1280)
!4656 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_resume", scope: !4630, file: !115, line: 300, baseType: !4633, size: 64, offset: 1344)
!4657 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_idle", scope: !4630, file: !115, line: 301, baseType: !4633, size: 64, offset: 1408)
!4658 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !461, file: !186, line: 470, baseType: !4659, size: 64, offset: 768)
!4659 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4660, size: 64)
!4660 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bus_type", file: !4661, line: 82, size: 1408, elements: !4662)
!4661 = !DIFile(filename: "./include/linux/device/bus.h", directory: "/home/lizy2001/genbc/linux")
!4662 = !{!4663, !4664, !4665, !4666, !4667, !4668, !4669, !4728, !4729, !4730, !4731, !4732, !4733, !4734, !4735, !4736, !4737, !4738, !4739, !4740, !4744, !4747, !4748}
!4663 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !4660, file: !4661, line: 83, baseType: !468, size: 64)
!4664 = !DIDerivedType(tag: DW_TAG_member, name: "dev_name", scope: !4660, file: !4661, line: 84, baseType: !468, size: 64, offset: 64)
!4665 = !DIDerivedType(tag: DW_TAG_member, name: "dev_root", scope: !4660, file: !4661, line: 85, baseType: !1855, size: 64, offset: 128)
!4666 = !DIDerivedType(tag: DW_TAG_member, name: "bus_groups", scope: !4660, file: !4661, line: 86, baseType: !556, size: 64, offset: 192)
!4667 = !DIDerivedType(tag: DW_TAG_member, name: "dev_groups", scope: !4660, file: !4661, line: 87, baseType: !556, size: 64, offset: 256)
!4668 = !DIDerivedType(tag: DW_TAG_member, name: "drv_groups", scope: !4660, file: !4661, line: 88, baseType: !556, size: 64, offset: 320)
!4669 = !DIDerivedType(tag: DW_TAG_member, name: "match", scope: !4660, file: !4661, line: 90, baseType: !4670, size: 64, offset: 384)
!4670 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4671, size: 64)
!4671 = !DISubroutineType(types: !4672)
!4672 = !{!294, !1855, !4673}
!4673 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4674, size: 64)
!4674 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_driver", file: !180, line: 95, size: 1152, elements: !4675)
!4675 = !{!4676, !4677, !4678, !4679, !4680, !4681, !4682, !4695, !4708, !4709, !4710, !4711, !4712, !4720, !4721, !4722, !4723, !4724, !4725}
!4676 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !4674, file: !180, line: 96, baseType: !468, size: 64)
!4677 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !4674, file: !180, line: 97, baseType: !4659, size: 64, offset: 64)
!4678 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !4674, file: !180, line: 99, baseType: !849, size: 64, offset: 128)
!4679 = !DIDerivedType(tag: DW_TAG_member, name: "mod_name", scope: !4674, file: !180, line: 100, baseType: !468, size: 64, offset: 192)
!4680 = !DIDerivedType(tag: DW_TAG_member, name: "suppress_bind_attrs", scope: !4674, file: !180, line: 102, baseType: !339, size: 8, offset: 256)
!4681 = !DIDerivedType(tag: DW_TAG_member, name: "probe_type", scope: !4674, file: !180, line: 103, baseType: !179, size: 32, offset: 288)
!4682 = !DIDerivedType(tag: DW_TAG_member, name: "of_match_table", scope: !4674, file: !180, line: 105, baseType: !4683, size: 64, offset: 320)
!4683 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4684, size: 64)
!4684 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4685)
!4685 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "of_device_id", file: !4686, line: 262, size: 1600, elements: !4687)
!4686 = !DIFile(filename: "./include/linux/mod_devicetable.h", directory: "/home/lizy2001/genbc/linux")
!4687 = !{!4688, !4689, !4690, !4694}
!4688 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !4685, file: !4686, line: 263, baseType: !1308, size: 256)
!4689 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !4685, file: !4686, line: 264, baseType: !1308, size: 256, offset: 256)
!4690 = !DIDerivedType(tag: DW_TAG_member, name: "compatible", scope: !4685, file: !4686, line: 265, baseType: !4691, size: 1024, offset: 512)
!4691 = !DICompositeType(tag: DW_TAG_array_type, baseType: !257, size: 1024, elements: !4692)
!4692 = !{!4693}
!4693 = !DISubrange(count: 128)
!4694 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !4685, file: !4686, line: 266, baseType: !457, size: 64, offset: 1536)
!4695 = !DIDerivedType(tag: DW_TAG_member, name: "acpi_match_table", scope: !4674, file: !180, line: 106, baseType: !4696, size: 64, offset: 384)
!4696 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4697, size: 64)
!4697 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4698)
!4698 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "acpi_device_id", file: !4686, line: 210, size: 256, elements: !4699)
!4699 = !{!4700, !4704, !4706, !4707}
!4700 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !4698, file: !4686, line: 211, baseType: !4701, size: 72)
!4701 = !DICompositeType(tag: DW_TAG_array_type, baseType: !267, size: 72, elements: !4702)
!4702 = !{!4703}
!4703 = !DISubrange(count: 9)
!4704 = !DIDerivedType(tag: DW_TAG_member, name: "driver_data", scope: !4698, file: !4686, line: 212, baseType: !4705, size: 64, offset: 128)
!4705 = !DIDerivedType(tag: DW_TAG_typedef, name: "kernel_ulong_t", file: !4686, line: 14, baseType: !287)
!4706 = !DIDerivedType(tag: DW_TAG_member, name: "cls", scope: !4698, file: !4686, line: 213, baseType: !263, size: 32, offset: 192)
!4707 = !DIDerivedType(tag: DW_TAG_member, name: "cls_msk", scope: !4698, file: !4686, line: 214, baseType: !263, size: 32, offset: 224)
!4708 = !DIDerivedType(tag: DW_TAG_member, name: "probe", scope: !4674, file: !180, line: 108, baseType: !4633, size: 64, offset: 448)
!4709 = !DIDerivedType(tag: DW_TAG_member, name: "sync_state", scope: !4674, file: !180, line: 109, baseType: !4624, size: 64, offset: 512)
!4710 = !DIDerivedType(tag: DW_TAG_member, name: "remove", scope: !4674, file: !180, line: 110, baseType: !4633, size: 64, offset: 576)
!4711 = !DIDerivedType(tag: DW_TAG_member, name: "shutdown", scope: !4674, file: !180, line: 111, baseType: !4624, size: 64, offset: 640)
!4712 = !DIDerivedType(tag: DW_TAG_member, name: "suspend", scope: !4674, file: !180, line: 112, baseType: !4713, size: 64, offset: 704)
!4713 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4714, size: 64)
!4714 = !DISubroutineType(types: !4715)
!4715 = !{!294, !1855, !4716}
!4716 = !DIDerivedType(tag: DW_TAG_typedef, name: "pm_message_t", file: !115, line: 52, baseType: !4717)
!4717 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pm_message", file: !115, line: 50, size: 32, elements: !4718)
!4718 = !{!4719}
!4719 = !DIDerivedType(tag: DW_TAG_member, name: "event", scope: !4717, file: !115, line: 51, baseType: !294, size: 32)
!4720 = !DIDerivedType(tag: DW_TAG_member, name: "resume", scope: !4674, file: !180, line: 113, baseType: !4633, size: 64, offset: 768)
!4721 = !DIDerivedType(tag: DW_TAG_member, name: "groups", scope: !4674, file: !180, line: 114, baseType: !556, size: 64, offset: 832)
!4722 = !DIDerivedType(tag: DW_TAG_member, name: "dev_groups", scope: !4674, file: !180, line: 115, baseType: !556, size: 64, offset: 896)
!4723 = !DIDerivedType(tag: DW_TAG_member, name: "pm", scope: !4674, file: !180, line: 117, baseType: !4628, size: 64, offset: 960)
!4724 = !DIDerivedType(tag: DW_TAG_member, name: "coredump", scope: !4674, file: !180, line: 118, baseType: !4624, size: 64, offset: 1024)
!4725 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !4674, file: !180, line: 120, baseType: !4726, size: 64, offset: 1088)
!4726 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4727, size: 64)
!4727 = !DICompositeType(tag: DW_TAG_structure_type, name: "driver_private", file: !180, line: 120, flags: DIFlagFwdDecl)
!4728 = !DIDerivedType(tag: DW_TAG_member, name: "uevent", scope: !4660, file: !4661, line: 91, baseType: !4616, size: 64, offset: 448)
!4729 = !DIDerivedType(tag: DW_TAG_member, name: "probe", scope: !4660, file: !4661, line: 92, baseType: !4633, size: 64, offset: 512)
!4730 = !DIDerivedType(tag: DW_TAG_member, name: "sync_state", scope: !4660, file: !4661, line: 93, baseType: !4624, size: 64, offset: 576)
!4731 = !DIDerivedType(tag: DW_TAG_member, name: "remove", scope: !4660, file: !4661, line: 94, baseType: !4633, size: 64, offset: 640)
!4732 = !DIDerivedType(tag: DW_TAG_member, name: "shutdown", scope: !4660, file: !4661, line: 95, baseType: !4624, size: 64, offset: 704)
!4733 = !DIDerivedType(tag: DW_TAG_member, name: "online", scope: !4660, file: !4661, line: 97, baseType: !4633, size: 64, offset: 768)
!4734 = !DIDerivedType(tag: DW_TAG_member, name: "offline", scope: !4660, file: !4661, line: 98, baseType: !4633, size: 64, offset: 832)
!4735 = !DIDerivedType(tag: DW_TAG_member, name: "suspend", scope: !4660, file: !4661, line: 100, baseType: !4713, size: 64, offset: 896)
!4736 = !DIDerivedType(tag: DW_TAG_member, name: "resume", scope: !4660, file: !4661, line: 101, baseType: !4633, size: 64, offset: 960)
!4737 = !DIDerivedType(tag: DW_TAG_member, name: "num_vf", scope: !4660, file: !4661, line: 103, baseType: !4633, size: 64, offset: 1024)
!4738 = !DIDerivedType(tag: DW_TAG_member, name: "dma_configure", scope: !4660, file: !4661, line: 105, baseType: !4633, size: 64, offset: 1088)
!4739 = !DIDerivedType(tag: DW_TAG_member, name: "pm", scope: !4660, file: !4661, line: 107, baseType: !4628, size: 64, offset: 1152)
!4740 = !DIDerivedType(tag: DW_TAG_member, name: "iommu_ops", scope: !4660, file: !4661, line: 109, baseType: !4741, size: 64, offset: 1216)
!4741 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4742, size: 64)
!4742 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4743)
!4743 = !DICompositeType(tag: DW_TAG_structure_type, name: "iommu_ops", file: !4661, line: 109, flags: DIFlagFwdDecl)
!4744 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !4660, file: !4661, line: 111, baseType: !4745, size: 64, offset: 1280)
!4745 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4746, size: 64)
!4746 = !DICompositeType(tag: DW_TAG_structure_type, name: "subsys_private", file: !4661, line: 111, flags: DIFlagFwdDecl)
!4747 = !DIDerivedType(tag: DW_TAG_member, name: "lock_key", scope: !4660, file: !4661, line: 112, baseType: !864, offset: 1344)
!4748 = !DIDerivedType(tag: DW_TAG_member, name: "need_parent_lock", scope: !4660, file: !4661, line: 114, baseType: !339, size: 8, offset: 1344)
!4749 = !DIDerivedType(tag: DW_TAG_member, name: "driver", scope: !461, file: !186, line: 471, baseType: !4673, size: 64, offset: 832)
!4750 = !DIDerivedType(tag: DW_TAG_member, name: "platform_data", scope: !461, file: !186, line: 473, baseType: !247, size: 64, offset: 896)
!4751 = !DIDerivedType(tag: DW_TAG_member, name: "driver_data", scope: !461, file: !186, line: 475, baseType: !247, size: 64, offset: 960)
!4752 = !DIDerivedType(tag: DW_TAG_member, name: "mutex", scope: !461, file: !186, line: 480, baseType: !344, size: 192, offset: 1024)
!4753 = !DIDerivedType(tag: DW_TAG_member, name: "links", scope: !461, file: !186, line: 484, baseType: !4754, size: 576, offset: 1216)
!4754 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_links_info", file: !186, line: 361, size: 576, elements: !4755)
!4755 = !{!4756, !4757, !4758, !4759, !4760, !4761}
!4756 = !DIDerivedType(tag: DW_TAG_member, name: "suppliers", scope: !4754, file: !186, line: 362, baseType: !300, size: 128)
!4757 = !DIDerivedType(tag: DW_TAG_member, name: "consumers", scope: !4754, file: !186, line: 363, baseType: !300, size: 128, offset: 128)
!4758 = !DIDerivedType(tag: DW_TAG_member, name: "needs_suppliers", scope: !4754, file: !186, line: 364, baseType: !300, size: 128, offset: 256)
!4759 = !DIDerivedType(tag: DW_TAG_member, name: "defer_hook", scope: !4754, file: !186, line: 365, baseType: !300, size: 128, offset: 384)
!4760 = !DIDerivedType(tag: DW_TAG_member, name: "need_for_probe", scope: !4754, file: !186, line: 366, baseType: !339, size: 8, offset: 512)
!4761 = !DIDerivedType(tag: DW_TAG_member, name: "status", scope: !4754, file: !186, line: 367, baseType: !185, size: 32, offset: 544)
!4762 = !DIDerivedType(tag: DW_TAG_member, name: "power", scope: !461, file: !186, line: 485, baseType: !4763, size: 2304, offset: 1792)
!4763 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pm_info", file: !115, line: 565, size: 2304, elements: !4764)
!4764 = !{!4765, !4766, !4767, !4768, !4769, !4770, !4771, !4772, !4773, !4774, !4775, !4776, !4777, !4778, !4779, !4780, !4807, !4808, !4809, !4810, !4811, !4812, !4813, !4814, !4815, !4816, !4817, !4818, !4819, !4820, !4821, !4822, !4823, !4824, !4825, !4826, !4827, !4828, !4829, !4830, !4831, !4832, !4833, !4834, !4835, !4836, !4837, !4838, !4839, !4849, !4853}
!4765 = !DIDerivedType(tag: DW_TAG_member, name: "power_state", scope: !4763, file: !115, line: 566, baseType: !4716, size: 32)
!4766 = !DIDerivedType(tag: DW_TAG_member, name: "can_wakeup", scope: !4763, file: !115, line: 567, baseType: !7, size: 1, offset: 32, flags: DIFlagBitField, extraData: i64 32)
!4767 = !DIDerivedType(tag: DW_TAG_member, name: "async_suspend", scope: !4763, file: !115, line: 568, baseType: !7, size: 1, offset: 33, flags: DIFlagBitField, extraData: i64 32)
!4768 = !DIDerivedType(tag: DW_TAG_member, name: "in_dpm_list", scope: !4763, file: !115, line: 569, baseType: !339, size: 1, offset: 34, flags: DIFlagBitField, extraData: i64 32)
!4769 = !DIDerivedType(tag: DW_TAG_member, name: "is_prepared", scope: !4763, file: !115, line: 570, baseType: !339, size: 1, offset: 35, flags: DIFlagBitField, extraData: i64 32)
!4770 = !DIDerivedType(tag: DW_TAG_member, name: "is_suspended", scope: !4763, file: !115, line: 571, baseType: !339, size: 1, offset: 36, flags: DIFlagBitField, extraData: i64 32)
!4771 = !DIDerivedType(tag: DW_TAG_member, name: "is_noirq_suspended", scope: !4763, file: !115, line: 572, baseType: !339, size: 1, offset: 37, flags: DIFlagBitField, extraData: i64 32)
!4772 = !DIDerivedType(tag: DW_TAG_member, name: "is_late_suspended", scope: !4763, file: !115, line: 573, baseType: !339, size: 1, offset: 38, flags: DIFlagBitField, extraData: i64 32)
!4773 = !DIDerivedType(tag: DW_TAG_member, name: "no_pm", scope: !4763, file: !115, line: 574, baseType: !339, size: 1, offset: 39, flags: DIFlagBitField, extraData: i64 32)
!4774 = !DIDerivedType(tag: DW_TAG_member, name: "early_init", scope: !4763, file: !115, line: 575, baseType: !339, size: 1, offset: 40, flags: DIFlagBitField, extraData: i64 32)
!4775 = !DIDerivedType(tag: DW_TAG_member, name: "direct_complete", scope: !4763, file: !115, line: 576, baseType: !339, size: 1, offset: 41, flags: DIFlagBitField, extraData: i64 32)
!4776 = !DIDerivedType(tag: DW_TAG_member, name: "driver_flags", scope: !4763, file: !115, line: 577, baseType: !261, size: 32, offset: 64)
!4777 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !4763, file: !115, line: 578, baseType: !358, offset: 96)
!4778 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !4763, file: !115, line: 580, baseType: !300, size: 128, offset: 128)
!4779 = !DIDerivedType(tag: DW_TAG_member, name: "completion", scope: !4763, file: !115, line: 581, baseType: !2657, size: 192, offset: 256)
!4780 = !DIDerivedType(tag: DW_TAG_member, name: "wakeup", scope: !4763, file: !115, line: 582, baseType: !4781, size: 64, offset: 448)
!4781 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4782, size: 64)
!4782 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wakeup_source", file: !4783, line: 43, size: 1472, elements: !4784)
!4783 = !DIFile(filename: "./include/linux/pm_wakeup.h", directory: "/home/lizy2001/genbc/linux")
!4784 = !{!4785, !4786, !4787, !4788, !4789, !4792, !4793, !4794, !4795, !4796, !4797, !4798, !4799, !4800, !4801, !4802, !4803, !4804, !4805, !4806}
!4785 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !4782, file: !4783, line: 44, baseType: !468, size: 64)
!4786 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !4782, file: !4783, line: 45, baseType: !294, size: 32, offset: 64)
!4787 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !4782, file: !4783, line: 46, baseType: !300, size: 128, offset: 128)
!4788 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !4782, file: !4783, line: 47, baseType: !358, offset: 256)
!4789 = !DIDerivedType(tag: DW_TAG_member, name: "wakeirq", scope: !4782, file: !4783, line: 48, baseType: !4790, size: 64, offset: 256)
!4790 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4791, size: 64)
!4791 = !DICompositeType(tag: DW_TAG_structure_type, name: "wake_irq", file: !115, line: 533, flags: DIFlagFwdDecl)
!4792 = !DIDerivedType(tag: DW_TAG_member, name: "timer", scope: !4782, file: !4783, line: 49, baseType: !1837, size: 320, offset: 320)
!4793 = !DIDerivedType(tag: DW_TAG_member, name: "timer_expires", scope: !4782, file: !4783, line: 50, baseType: !287, size: 64, offset: 640)
!4794 = !DIDerivedType(tag: DW_TAG_member, name: "total_time", scope: !4782, file: !4783, line: 51, baseType: !2466, size: 64, offset: 704)
!4795 = !DIDerivedType(tag: DW_TAG_member, name: "max_time", scope: !4782, file: !4783, line: 52, baseType: !2466, size: 64, offset: 768)
!4796 = !DIDerivedType(tag: DW_TAG_member, name: "last_time", scope: !4782, file: !4783, line: 53, baseType: !2466, size: 64, offset: 832)
!4797 = !DIDerivedType(tag: DW_TAG_member, name: "start_prevent_time", scope: !4782, file: !4783, line: 54, baseType: !2466, size: 64, offset: 896)
!4798 = !DIDerivedType(tag: DW_TAG_member, name: "prevent_sleep_time", scope: !4782, file: !4783, line: 55, baseType: !2466, size: 64, offset: 960)
!4799 = !DIDerivedType(tag: DW_TAG_member, name: "event_count", scope: !4782, file: !4783, line: 56, baseType: !287, size: 64, offset: 1024)
!4800 = !DIDerivedType(tag: DW_TAG_member, name: "active_count", scope: !4782, file: !4783, line: 57, baseType: !287, size: 64, offset: 1088)
!4801 = !DIDerivedType(tag: DW_TAG_member, name: "relax_count", scope: !4782, file: !4783, line: 58, baseType: !287, size: 64, offset: 1152)
!4802 = !DIDerivedType(tag: DW_TAG_member, name: "expire_count", scope: !4782, file: !4783, line: 59, baseType: !287, size: 64, offset: 1216)
!4803 = !DIDerivedType(tag: DW_TAG_member, name: "wakeup_count", scope: !4782, file: !4783, line: 60, baseType: !287, size: 64, offset: 1280)
!4804 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !4782, file: !4783, line: 61, baseType: !1855, size: 64, offset: 1344)
!4805 = !DIDerivedType(tag: DW_TAG_member, name: "active", scope: !4782, file: !4783, line: 62, baseType: !339, size: 1, offset: 1408, flags: DIFlagBitField, extraData: i64 1408)
!4806 = !DIDerivedType(tag: DW_TAG_member, name: "autosleep_enabled", scope: !4782, file: !4783, line: 63, baseType: !339, size: 1, offset: 1409, flags: DIFlagBitField, extraData: i64 1408)
!4807 = !DIDerivedType(tag: DW_TAG_member, name: "wakeup_path", scope: !4763, file: !115, line: 583, baseType: !339, size: 1, offset: 512, flags: DIFlagBitField, extraData: i64 512)
!4808 = !DIDerivedType(tag: DW_TAG_member, name: "syscore", scope: !4763, file: !115, line: 584, baseType: !339, size: 1, offset: 513, flags: DIFlagBitField, extraData: i64 512)
!4809 = !DIDerivedType(tag: DW_TAG_member, name: "no_pm_callbacks", scope: !4763, file: !115, line: 585, baseType: !339, size: 1, offset: 514, flags: DIFlagBitField, extraData: i64 512)
!4810 = !DIDerivedType(tag: DW_TAG_member, name: "must_resume", scope: !4763, file: !115, line: 586, baseType: !7, size: 1, offset: 515, flags: DIFlagBitField, extraData: i64 512)
!4811 = !DIDerivedType(tag: DW_TAG_member, name: "may_skip_resume", scope: !4763, file: !115, line: 587, baseType: !7, size: 1, offset: 516, flags: DIFlagBitField, extraData: i64 512)
!4812 = !DIDerivedType(tag: DW_TAG_member, name: "suspend_timer", scope: !4763, file: !115, line: 592, baseType: !2458, size: 512, offset: 576)
!4813 = !DIDerivedType(tag: DW_TAG_member, name: "timer_expires", scope: !4763, file: !115, line: 593, baseType: !284, size: 64, offset: 1088)
!4814 = !DIDerivedType(tag: DW_TAG_member, name: "work", scope: !4763, file: !115, line: 594, baseType: !401, size: 256, offset: 1152)
!4815 = !DIDerivedType(tag: DW_TAG_member, name: "wait_queue", scope: !4763, file: !115, line: 595, baseType: !375, size: 128, offset: 1408)
!4816 = !DIDerivedType(tag: DW_TAG_member, name: "wakeirq", scope: !4763, file: !115, line: 596, baseType: !4790, size: 64, offset: 1536)
!4817 = !DIDerivedType(tag: DW_TAG_member, name: "usage_count", scope: !4763, file: !115, line: 597, baseType: !326, size: 32, offset: 1600)
!4818 = !DIDerivedType(tag: DW_TAG_member, name: "child_count", scope: !4763, file: !115, line: 598, baseType: !326, size: 32, offset: 1632)
!4819 = !DIDerivedType(tag: DW_TAG_member, name: "disable_depth", scope: !4763, file: !115, line: 599, baseType: !7, size: 3, offset: 1664, flags: DIFlagBitField, extraData: i64 1664)
!4820 = !DIDerivedType(tag: DW_TAG_member, name: "idle_notification", scope: !4763, file: !115, line: 600, baseType: !7, size: 1, offset: 1667, flags: DIFlagBitField, extraData: i64 1664)
!4821 = !DIDerivedType(tag: DW_TAG_member, name: "request_pending", scope: !4763, file: !115, line: 601, baseType: !7, size: 1, offset: 1668, flags: DIFlagBitField, extraData: i64 1664)
!4822 = !DIDerivedType(tag: DW_TAG_member, name: "deferred_resume", scope: !4763, file: !115, line: 602, baseType: !7, size: 1, offset: 1669, flags: DIFlagBitField, extraData: i64 1664)
!4823 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_auto", scope: !4763, file: !115, line: 603, baseType: !7, size: 1, offset: 1670, flags: DIFlagBitField, extraData: i64 1664)
!4824 = !DIDerivedType(tag: DW_TAG_member, name: "ignore_children", scope: !4763, file: !115, line: 604, baseType: !339, size: 1, offset: 1671, flags: DIFlagBitField, extraData: i64 1664)
!4825 = !DIDerivedType(tag: DW_TAG_member, name: "no_callbacks", scope: !4763, file: !115, line: 605, baseType: !7, size: 1, offset: 1672, flags: DIFlagBitField, extraData: i64 1664)
!4826 = !DIDerivedType(tag: DW_TAG_member, name: "irq_safe", scope: !4763, file: !115, line: 606, baseType: !7, size: 1, offset: 1673, flags: DIFlagBitField, extraData: i64 1664)
!4827 = !DIDerivedType(tag: DW_TAG_member, name: "use_autosuspend", scope: !4763, file: !115, line: 607, baseType: !7, size: 1, offset: 1674, flags: DIFlagBitField, extraData: i64 1664)
!4828 = !DIDerivedType(tag: DW_TAG_member, name: "timer_autosuspends", scope: !4763, file: !115, line: 608, baseType: !7, size: 1, offset: 1675, flags: DIFlagBitField, extraData: i64 1664)
!4829 = !DIDerivedType(tag: DW_TAG_member, name: "memalloc_noio", scope: !4763, file: !115, line: 609, baseType: !7, size: 1, offset: 1676, flags: DIFlagBitField, extraData: i64 1664)
!4830 = !DIDerivedType(tag: DW_TAG_member, name: "links_count", scope: !4763, file: !115, line: 610, baseType: !7, size: 32, offset: 1696)
!4831 = !DIDerivedType(tag: DW_TAG_member, name: "request", scope: !4763, file: !115, line: 611, baseType: !192, size: 32, offset: 1728)
!4832 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_status", scope: !4763, file: !115, line: 612, baseType: !114, size: 32, offset: 1760)
!4833 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_error", scope: !4763, file: !115, line: 613, baseType: !294, size: 32, offset: 1792)
!4834 = !DIDerivedType(tag: DW_TAG_member, name: "autosuspend_delay", scope: !4763, file: !115, line: 614, baseType: !294, size: 32, offset: 1824)
!4835 = !DIDerivedType(tag: DW_TAG_member, name: "last_busy", scope: !4763, file: !115, line: 615, baseType: !284, size: 64, offset: 1856)
!4836 = !DIDerivedType(tag: DW_TAG_member, name: "active_time", scope: !4763, file: !115, line: 616, baseType: !284, size: 64, offset: 1920)
!4837 = !DIDerivedType(tag: DW_TAG_member, name: "suspended_time", scope: !4763, file: !115, line: 617, baseType: !284, size: 64, offset: 1984)
!4838 = !DIDerivedType(tag: DW_TAG_member, name: "accounting_timestamp", scope: !4763, file: !115, line: 618, baseType: !284, size: 64, offset: 2048)
!4839 = !DIDerivedType(tag: DW_TAG_member, name: "subsys_data", scope: !4763, file: !115, line: 620, baseType: !4840, size: 64, offset: 2112)
!4840 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4841, size: 64)
!4841 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pm_subsys_data", file: !115, line: 536, size: 256, elements: !4842)
!4842 = !{!4843, !4844, !4845, !4846}
!4843 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !4841, file: !115, line: 537, baseType: !358)
!4844 = !DIDerivedType(tag: DW_TAG_member, name: "refcount", scope: !4841, file: !115, line: 538, baseType: !7, size: 32)
!4845 = !DIDerivedType(tag: DW_TAG_member, name: "clock_list", scope: !4841, file: !115, line: 540, baseType: !300, size: 128, offset: 64)
!4846 = !DIDerivedType(tag: DW_TAG_member, name: "domain_data", scope: !4841, file: !115, line: 543, baseType: !4847, size: 64, offset: 192)
!4847 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4848, size: 64)
!4848 = !DICompositeType(tag: DW_TAG_structure_type, name: "pm_domain_data", file: !115, line: 534, flags: DIFlagFwdDecl)
!4849 = !DIDerivedType(tag: DW_TAG_member, name: "set_latency_tolerance", scope: !4763, file: !115, line: 621, baseType: !4850, size: 64, offset: 2176)
!4850 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4851, size: 64)
!4851 = !DISubroutineType(types: !4852)
!4852 = !{null, !1855, !2606}
!4853 = !DIDerivedType(tag: DW_TAG_member, name: "qos", scope: !4763, file: !115, line: 622, baseType: !4854, size: 64, offset: 2240)
!4854 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4855, size: 64)
!4855 = !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pm_qos", file: !115, line: 622, flags: DIFlagFwdDecl)
!4856 = !DIDerivedType(tag: DW_TAG_member, name: "pm_domain", scope: !461, file: !186, line: 486, baseType: !4857, size: 64, offset: 4096)
!4857 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4858, size: 64)
!4858 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pm_domain", file: !115, line: 642, size: 1792, elements: !4859)
!4859 = !{!4860, !4861, !4862, !4866, !4867, !4868}
!4860 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !4858, file: !115, line: 643, baseType: !4630, size: 1472)
!4861 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !4858, file: !115, line: 644, baseType: !4633, size: 64, offset: 1472)
!4862 = !DIDerivedType(tag: DW_TAG_member, name: "detach", scope: !4858, file: !115, line: 645, baseType: !4863, size: 64, offset: 1536)
!4863 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4864, size: 64)
!4864 = !DISubroutineType(types: !4865)
!4865 = !{null, !1855, !339}
!4866 = !DIDerivedType(tag: DW_TAG_member, name: "activate", scope: !4858, file: !115, line: 646, baseType: !4633, size: 64, offset: 1600)
!4867 = !DIDerivedType(tag: DW_TAG_member, name: "sync", scope: !4858, file: !115, line: 647, baseType: !4624, size: 64, offset: 1664)
!4868 = !DIDerivedType(tag: DW_TAG_member, name: "dismiss", scope: !4858, file: !115, line: 648, baseType: !4624, size: 64, offset: 1728)
!4869 = !DIDerivedType(tag: DW_TAG_member, name: "msi_domain", scope: !461, file: !186, line: 493, baseType: !4870, size: 64, offset: 4160)
!4870 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4871, size: 64)
!4871 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "irq_domain", file: !200, line: 162, size: 1088, elements: !4872)
!4872 = !{!4873, !4874, !4875, !4958, !4959, !4960, !4961, !4962, !4963, !4966, !4967, !4968, !4969, !4970, !4971, !4972}
!4873 = !DIDerivedType(tag: DW_TAG_member, name: "link", scope: !4871, file: !200, line: 163, baseType: !300, size: 128)
!4874 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !4871, file: !200, line: 164, baseType: !468, size: 64, offset: 128)
!4875 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !4871, file: !200, line: 165, baseType: !4876, size: 64, offset: 192)
!4876 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4877, size: 64)
!4877 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4878)
!4878 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "irq_domain_ops", file: !200, line: 105, size: 640, elements: !4879)
!4879 = !{!4880, !4909, !4920, !4925, !4929, !4935, !4939, !4943, !4950, !4954}
!4880 = !DIDerivedType(tag: DW_TAG_member, name: "match", scope: !4878, file: !200, line: 106, baseType: !4881, size: 64)
!4881 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4882, size: 64)
!4882 = !DISubroutineType(types: !4883)
!4883 = !{!294, !4870, !4884, !199}
!4884 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4885, size: 64)
!4885 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_node", file: !4886, line: 51, size: 1344, elements: !4887)
!4886 = !DIFile(filename: "./include/linux/of.h", directory: "/home/lizy2001/genbc/linux")
!4887 = !{!4888, !4889, !4891, !4892, !4893, !4902, !4903, !4904, !4905, !4906, !4907, !4908}
!4888 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !4885, file: !4886, line: 52, baseType: !468, size: 64)
!4889 = !DIDerivedType(tag: DW_TAG_member, name: "phandle", scope: !4885, file: !4886, line: 53, baseType: !4890, size: 32, offset: 64)
!4890 = !DIDerivedType(tag: DW_TAG_typedef, name: "phandle", file: !4886, line: 28, baseType: !261)
!4891 = !DIDerivedType(tag: DW_TAG_member, name: "full_name", scope: !4885, file: !4886, line: 54, baseType: !468, size: 64, offset: 128)
!4892 = !DIDerivedType(tag: DW_TAG_member, name: "fwnode", scope: !4885, file: !4886, line: 55, baseType: !429, size: 192, offset: 192)
!4893 = !DIDerivedType(tag: DW_TAG_member, name: "properties", scope: !4885, file: !4886, line: 57, baseType: !4894, size: 64, offset: 384)
!4894 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4895, size: 64)
!4895 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "property", file: !4886, line: 31, size: 704, elements: !4896)
!4896 = !{!4897, !4898, !4899, !4900, !4901}
!4897 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !4895, file: !4886, line: 32, baseType: !505, size: 64)
!4898 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !4895, file: !4886, line: 33, baseType: !294, size: 32, offset: 64)
!4899 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !4895, file: !4886, line: 34, baseType: !247, size: 64, offset: 128)
!4900 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !4895, file: !4886, line: 35, baseType: !4894, size: 64, offset: 192)
!4901 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !4895, file: !4886, line: 43, baseType: !571, size: 448, offset: 256)
!4902 = !DIDerivedType(tag: DW_TAG_member, name: "deadprops", scope: !4885, file: !4886, line: 58, baseType: !4894, size: 64, offset: 448)
!4903 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !4885, file: !4886, line: 59, baseType: !4884, size: 64, offset: 512)
!4904 = !DIDerivedType(tag: DW_TAG_member, name: "child", scope: !4885, file: !4886, line: 60, baseType: !4884, size: 64, offset: 576)
!4905 = !DIDerivedType(tag: DW_TAG_member, name: "sibling", scope: !4885, file: !4886, line: 61, baseType: !4884, size: 64, offset: 640)
!4906 = !DIDerivedType(tag: DW_TAG_member, name: "kobj", scope: !4885, file: !4886, line: 63, baseType: !464, size: 512, offset: 704)
!4907 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !4885, file: !4886, line: 65, baseType: !287, size: 64, offset: 1216)
!4908 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !4885, file: !4886, line: 66, baseType: !247, size: 64, offset: 1280)
!4909 = !DIDerivedType(tag: DW_TAG_member, name: "select", scope: !4878, file: !200, line: 108, baseType: !4910, size: 64, offset: 64)
!4910 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4911, size: 64)
!4911 = !DISubroutineType(types: !4912)
!4912 = !{!294, !4870, !4913, !199}
!4913 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4914, size: 64)
!4914 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "irq_fwspec", file: !200, line: 63, size: 640, elements: !4915)
!4915 = !{!4916, !4917, !4918}
!4916 = !DIDerivedType(tag: DW_TAG_member, name: "fwnode", scope: !4914, file: !200, line: 64, baseType: !433, size: 64)
!4917 = !DIDerivedType(tag: DW_TAG_member, name: "param_count", scope: !4914, file: !200, line: 65, baseType: !294, size: 32, offset: 64)
!4918 = !DIDerivedType(tag: DW_TAG_member, name: "param", scope: !4914, file: !200, line: 66, baseType: !4919, size: 512, offset: 96)
!4919 = !DICompositeType(tag: DW_TAG_array_type, baseType: !261, size: 512, elements: !1924)
!4920 = !DIDerivedType(tag: DW_TAG_member, name: "map", scope: !4878, file: !200, line: 110, baseType: !4921, size: 64, offset: 128)
!4921 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4922, size: 64)
!4922 = !DISubroutineType(types: !4923)
!4923 = !{!294, !4870, !7, !4924}
!4924 = !DIDerivedType(tag: DW_TAG_typedef, name: "irq_hw_number_t", file: !249, line: 164, baseType: !287)
!4925 = !DIDerivedType(tag: DW_TAG_member, name: "unmap", scope: !4878, file: !200, line: 111, baseType: !4926, size: 64, offset: 192)
!4926 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4927, size: 64)
!4927 = !DISubroutineType(types: !4928)
!4928 = !{null, !4870, !7}
!4929 = !DIDerivedType(tag: DW_TAG_member, name: "xlate", scope: !4878, file: !200, line: 112, baseType: !4930, size: 64, offset: 256)
!4930 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4931, size: 64)
!4931 = !DISubroutineType(types: !4932)
!4932 = !{!294, !4870, !4884, !4933, !7, !288, !1219}
!4933 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4934, size: 64)
!4934 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !261)
!4935 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !4878, file: !200, line: 117, baseType: !4936, size: 64, offset: 320)
!4936 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4937, size: 64)
!4937 = !DISubroutineType(types: !4938)
!4938 = !{!294, !4870, !7, !7, !247}
!4939 = !DIDerivedType(tag: DW_TAG_member, name: "free", scope: !4878, file: !200, line: 119, baseType: !4940, size: 64, offset: 384)
!4940 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4941, size: 64)
!4941 = !DISubroutineType(types: !4942)
!4942 = !{null, !4870, !7, !7}
!4943 = !DIDerivedType(tag: DW_TAG_member, name: "activate", scope: !4878, file: !200, line: 121, baseType: !4944, size: 64, offset: 448)
!4944 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4945, size: 64)
!4945 = !DISubroutineType(types: !4946)
!4946 = !{!294, !4870, !4947, !339}
!4947 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4948, size: 64)
!4948 = !DICompositeType(tag: DW_TAG_structure_type, name: "irq_data", file: !4949, line: 11, flags: DIFlagFwdDecl)
!4949 = !DIFile(filename: "./include/linux/irqhandler.h", directory: "/home/lizy2001/genbc/linux")
!4950 = !DIDerivedType(tag: DW_TAG_member, name: "deactivate", scope: !4878, file: !200, line: 122, baseType: !4951, size: 64, offset: 512)
!4951 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4952, size: 64)
!4952 = !DISubroutineType(types: !4953)
!4953 = !{null, !4870, !4947}
!4954 = !DIDerivedType(tag: DW_TAG_member, name: "translate", scope: !4878, file: !200, line: 123, baseType: !4955, size: 64, offset: 576)
!4955 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4956, size: 64)
!4956 = !DISubroutineType(types: !4957)
!4957 = !{!294, !4870, !4913, !288, !1219}
!4958 = !DIDerivedType(tag: DW_TAG_member, name: "host_data", scope: !4871, file: !200, line: 166, baseType: !247, size: 64, offset: 256)
!4959 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !4871, file: !200, line: 167, baseType: !7, size: 32, offset: 320)
!4960 = !DIDerivedType(tag: DW_TAG_member, name: "mapcount", scope: !4871, file: !200, line: 168, baseType: !7, size: 32, offset: 352)
!4961 = !DIDerivedType(tag: DW_TAG_member, name: "fwnode", scope: !4871, file: !200, line: 171, baseType: !433, size: 64, offset: 384)
!4962 = !DIDerivedType(tag: DW_TAG_member, name: "bus_token", scope: !4871, file: !200, line: 172, baseType: !199, size: 32, offset: 448)
!4963 = !DIDerivedType(tag: DW_TAG_member, name: "gc", scope: !4871, file: !200, line: 173, baseType: !4964, size: 64, offset: 512)
!4964 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4965, size: 64)
!4965 = !DICompositeType(tag: DW_TAG_structure_type, name: "irq_domain_chip_generic", file: !200, line: 134, flags: DIFlagFwdDecl)
!4966 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !4871, file: !200, line: 175, baseType: !4870, size: 64, offset: 576)
!4967 = !DIDerivedType(tag: DW_TAG_member, name: "hwirq_max", scope: !4871, file: !200, line: 182, baseType: !4924, size: 64, offset: 640)
!4968 = !DIDerivedType(tag: DW_TAG_member, name: "revmap_direct_max_irq", scope: !4871, file: !200, line: 183, baseType: !7, size: 32, offset: 704)
!4969 = !DIDerivedType(tag: DW_TAG_member, name: "revmap_size", scope: !4871, file: !200, line: 184, baseType: !7, size: 32, offset: 736)
!4970 = !DIDerivedType(tag: DW_TAG_member, name: "revmap_tree", scope: !4871, file: !200, line: 185, baseType: !1008, size: 128, offset: 768)
!4971 = !DIDerivedType(tag: DW_TAG_member, name: "revmap_tree_mutex", scope: !4871, file: !200, line: 186, baseType: !344, size: 192, offset: 896)
!4972 = !DIDerivedType(tag: DW_TAG_member, name: "linear_revmap", scope: !4871, file: !200, line: 187, baseType: !4973, offset: 1088)
!4973 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7, elements: !1322)
!4974 = !DIDerivedType(tag: DW_TAG_member, name: "msi_list", scope: !461, file: !186, line: 499, baseType: !300, size: 128, offset: 4224)
!4975 = !DIDerivedType(tag: DW_TAG_member, name: "dma_ops", scope: !461, file: !186, line: 502, baseType: !4976, size: 64, offset: 4352)
!4976 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4977, size: 64)
!4977 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4978)
!4978 = !DICompositeType(tag: DW_TAG_structure_type, name: "dma_map_ops", file: !186, line: 502, flags: DIFlagFwdDecl)
!4979 = !DIDerivedType(tag: DW_TAG_member, name: "dma_mask", scope: !461, file: !186, line: 504, baseType: !4980, size: 64, offset: 4416)
!4980 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !284, size: 64)
!4981 = !DIDerivedType(tag: DW_TAG_member, name: "coherent_dma_mask", scope: !461, file: !186, line: 505, baseType: !284, size: 64, offset: 4480)
!4982 = !DIDerivedType(tag: DW_TAG_member, name: "bus_dma_limit", scope: !461, file: !186, line: 510, baseType: !284, size: 64, offset: 4544)
!4983 = !DIDerivedType(tag: DW_TAG_member, name: "dma_range_map", scope: !461, file: !186, line: 511, baseType: !4984, size: 64, offset: 4608)
!4984 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4985, size: 64)
!4985 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4986)
!4986 = !DICompositeType(tag: DW_TAG_structure_type, name: "bus_dma_region", file: !186, line: 511, flags: DIFlagFwdDecl)
!4987 = !DIDerivedType(tag: DW_TAG_member, name: "dma_parms", scope: !461, file: !186, line: 513, baseType: !4988, size: 64, offset: 4672)
!4988 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4989, size: 64)
!4989 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_dma_parameters", file: !186, line: 288, size: 128, elements: !4990)
!4990 = !{!4991, !4992}
!4991 = !DIDerivedType(tag: DW_TAG_member, name: "max_segment_size", scope: !4989, file: !186, line: 293, baseType: !7, size: 32)
!4992 = !DIDerivedType(tag: DW_TAG_member, name: "segment_boundary_mask", scope: !4989, file: !186, line: 294, baseType: !287, size: 64, offset: 64)
!4993 = !DIDerivedType(tag: DW_TAG_member, name: "dma_pools", scope: !461, file: !186, line: 515, baseType: !300, size: 128, offset: 4736)
!4994 = !DIDerivedType(tag: DW_TAG_member, name: "archdata", scope: !461, file: !186, line: 526, baseType: !4995, offset: 4864)
!4995 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_archdata", file: !4996, line: 5, elements: !372)
!4996 = !DIFile(filename: "./arch/x86/include/asm/device.h", directory: "/home/lizy2001/genbc/linux")
!4997 = !DIDerivedType(tag: DW_TAG_member, name: "of_node", scope: !461, file: !186, line: 528, baseType: !4884, size: 64, offset: 4864)
!4998 = !DIDerivedType(tag: DW_TAG_member, name: "fwnode", scope: !461, file: !186, line: 529, baseType: !433, size: 64, offset: 4928)
!4999 = !DIDerivedType(tag: DW_TAG_member, name: "devt", scope: !461, file: !186, line: 534, baseType: !731, size: 32, offset: 4992)
!5000 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !461, file: !186, line: 535, baseType: !261, size: 32, offset: 5024)
!5001 = !DIDerivedType(tag: DW_TAG_member, name: "devres_lock", scope: !461, file: !186, line: 537, baseType: !358, offset: 5056)
!5002 = !DIDerivedType(tag: DW_TAG_member, name: "devres_head", scope: !461, file: !186, line: 538, baseType: !300, size: 128, offset: 5056)
!5003 = !DIDerivedType(tag: DW_TAG_member, name: "class", scope: !461, file: !186, line: 540, baseType: !5004, size: 64, offset: 5184)
!5004 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5005, size: 64)
!5005 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "class", file: !5006, line: 54, size: 960, elements: !5007)
!5006 = !DIFile(filename: "./include/linux/device/class.h", directory: "/home/lizy2001/genbc/linux")
!5007 = !{!5008, !5009, !5010, !5011, !5012, !5013, !5014, !5018, !5022, !5023, !5024, !5025, !5029, !5033, !5034}
!5008 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !5005, file: !5006, line: 55, baseType: !468, size: 64)
!5009 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !5005, file: !5006, line: 56, baseType: !849, size: 64, offset: 64)
!5010 = !DIDerivedType(tag: DW_TAG_member, name: "class_groups", scope: !5005, file: !5006, line: 58, baseType: !556, size: 64, offset: 128)
!5011 = !DIDerivedType(tag: DW_TAG_member, name: "dev_groups", scope: !5005, file: !5006, line: 59, baseType: !556, size: 64, offset: 192)
!5012 = !DIDerivedType(tag: DW_TAG_member, name: "dev_kobj", scope: !5005, file: !5006, line: 60, baseType: !472, size: 64, offset: 256)
!5013 = !DIDerivedType(tag: DW_TAG_member, name: "dev_uevent", scope: !5005, file: !5006, line: 62, baseType: !4616, size: 64, offset: 320)
!5014 = !DIDerivedType(tag: DW_TAG_member, name: "devnode", scope: !5005, file: !5006, line: 63, baseType: !5015, size: 64, offset: 384)
!5015 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5016, size: 64)
!5016 = !DISubroutineType(types: !5017)
!5017 = !{!505, !1855, !1502}
!5018 = !DIDerivedType(tag: DW_TAG_member, name: "class_release", scope: !5005, file: !5006, line: 65, baseType: !5019, size: 64, offset: 448)
!5019 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5020, size: 64)
!5020 = !DISubroutineType(types: !5021)
!5021 = !{null, !5004}
!5022 = !DIDerivedType(tag: DW_TAG_member, name: "dev_release", scope: !5005, file: !5006, line: 66, baseType: !4624, size: 64, offset: 512)
!5023 = !DIDerivedType(tag: DW_TAG_member, name: "shutdown_pre", scope: !5005, file: !5006, line: 68, baseType: !4633, size: 64, offset: 576)
!5024 = !DIDerivedType(tag: DW_TAG_member, name: "ns_type", scope: !5005, file: !5006, line: 70, baseType: !4438, size: 64, offset: 640)
!5025 = !DIDerivedType(tag: DW_TAG_member, name: "namespace", scope: !5005, file: !5006, line: 71, baseType: !5026, size: 64, offset: 704)
!5026 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5027, size: 64)
!5027 = !DISubroutineType(types: !5028)
!5028 = !{!457, !1855}
!5029 = !DIDerivedType(tag: DW_TAG_member, name: "get_ownership", scope: !5005, file: !5006, line: 73, baseType: !5030, size: 64, offset: 768)
!5030 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5031, size: 64)
!5031 = !DISubroutineType(types: !5032)
!5032 = !{null, !1855, !2973, !2974}
!5033 = !DIDerivedType(tag: DW_TAG_member, name: "pm", scope: !5005, file: !5006, line: 75, baseType: !4628, size: 64, offset: 832)
!5034 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !5005, file: !5006, line: 77, baseType: !4745, size: 64, offset: 896)
!5035 = !DIDerivedType(tag: DW_TAG_member, name: "groups", scope: !461, file: !186, line: 541, baseType: !556, size: 64, offset: 5248)
!5036 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !461, file: !186, line: 543, baseType: !4624, size: 64, offset: 5312)
!5037 = !DIDerivedType(tag: DW_TAG_member, name: "iommu_group", scope: !461, file: !186, line: 544, baseType: !5038, size: 64, offset: 5376)
!5038 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5039, size: 64)
!5039 = !DICompositeType(tag: DW_TAG_structure_type, name: "iommu_group", file: !186, line: 45, flags: DIFlagFwdDecl)
!5040 = !DIDerivedType(tag: DW_TAG_member, name: "iommu", scope: !461, file: !186, line: 545, baseType: !5041, size: 64, offset: 5440)
!5041 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5042, size: 64)
!5042 = !DICompositeType(tag: DW_TAG_structure_type, name: "dev_iommu", file: !186, line: 47, flags: DIFlagFwdDecl)
!5043 = !DIDerivedType(tag: DW_TAG_member, name: "offline_disabled", scope: !461, file: !186, line: 547, baseType: !339, size: 1, offset: 5504, flags: DIFlagBitField, extraData: i64 5504)
!5044 = !DIDerivedType(tag: DW_TAG_member, name: "offline", scope: !461, file: !186, line: 548, baseType: !339, size: 1, offset: 5505, flags: DIFlagBitField, extraData: i64 5504)
!5045 = !DIDerivedType(tag: DW_TAG_member, name: "of_node_reused", scope: !461, file: !186, line: 549, baseType: !339, size: 1, offset: 5506, flags: DIFlagBitField, extraData: i64 5504)
!5046 = !DIDerivedType(tag: DW_TAG_member, name: "state_synced", scope: !461, file: !186, line: 550, baseType: !339, size: 1, offset: 5507, flags: DIFlagBitField, extraData: i64 5504)
!5047 = !DIDerivedType(tag: DW_TAG_member, name: "property_present", scope: !437, file: !430, line: 116, baseType: !5048, size: 64, offset: 256)
!5048 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5049, size: 64)
!5049 = !DISubroutineType(types: !5050)
!5050 = !{!339, !451, !468}
!5051 = !DIDerivedType(tag: DW_TAG_member, name: "property_read_int_array", scope: !437, file: !430, line: 118, baseType: !5052, size: 64, offset: 320)
!5052 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5053, size: 64)
!5053 = !DISubroutineType(types: !5054)
!5054 = !{!294, !451, !468, !7, !247, !550}
!5055 = !DIDerivedType(tag: DW_TAG_member, name: "property_read_string_array", scope: !437, file: !430, line: 123, baseType: !5056, size: 64, offset: 384)
!5056 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5057, size: 64)
!5057 = !DISubroutineType(types: !5058)
!5058 = !{!294, !451, !468, !5059, !550}
!5059 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !468, size: 64)
!5060 = !DIDerivedType(tag: DW_TAG_member, name: "get_name", scope: !437, file: !430, line: 126, baseType: !5061, size: 64, offset: 448)
!5061 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5062, size: 64)
!5062 = !DISubroutineType(types: !5063)
!5063 = !{!468, !451}
!5064 = !DIDerivedType(tag: DW_TAG_member, name: "get_name_prefix", scope: !437, file: !430, line: 127, baseType: !5061, size: 64, offset: 512)
!5065 = !DIDerivedType(tag: DW_TAG_member, name: "get_parent", scope: !437, file: !430, line: 128, baseType: !5066, size: 64, offset: 576)
!5066 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5067, size: 64)
!5067 = !DISubroutineType(types: !5068)
!5068 = !{!433, !451}
!5069 = !DIDerivedType(tag: DW_TAG_member, name: "get_next_child_node", scope: !437, file: !430, line: 130, baseType: !5070, size: 64, offset: 640)
!5070 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5071, size: 64)
!5071 = !DISubroutineType(types: !5072)
!5072 = !{!433, !451, !433}
!5073 = !DIDerivedType(tag: DW_TAG_member, name: "get_named_child_node", scope: !437, file: !430, line: 133, baseType: !5074, size: 64, offset: 704)
!5074 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5075, size: 64)
!5075 = !DISubroutineType(types: !5076)
!5076 = !{!433, !451, !468}
!5077 = !DIDerivedType(tag: DW_TAG_member, name: "get_reference_args", scope: !437, file: !430, line: 135, baseType: !5078, size: 64, offset: 768)
!5078 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5079, size: 64)
!5079 = !DISubroutineType(types: !5080)
!5080 = !{!294, !451, !468, !468, !7, !7, !5081}
!5081 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5082, size: 64)
!5082 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fwnode_reference_args", file: !430, line: 43, size: 640, elements: !5083)
!5083 = !{!5084, !5085, !5086}
!5084 = !DIDerivedType(tag: DW_TAG_member, name: "fwnode", scope: !5082, file: !430, line: 44, baseType: !433, size: 64)
!5085 = !DIDerivedType(tag: DW_TAG_member, name: "nargs", scope: !5082, file: !430, line: 45, baseType: !7, size: 32, offset: 64)
!5086 = !DIDerivedType(tag: DW_TAG_member, name: "args", scope: !5082, file: !430, line: 46, baseType: !5087, size: 512, offset: 128)
!5087 = !DICompositeType(tag: DW_TAG_array_type, baseType: !284, size: 512, elements: !276)
!5088 = !DIDerivedType(tag: DW_TAG_member, name: "graph_get_next_endpoint", scope: !437, file: !430, line: 140, baseType: !5070, size: 64, offset: 832)
!5089 = !DIDerivedType(tag: DW_TAG_member, name: "graph_get_remote_endpoint", scope: !437, file: !430, line: 143, baseType: !5066, size: 64, offset: 896)
!5090 = !DIDerivedType(tag: DW_TAG_member, name: "graph_get_port_parent", scope: !437, file: !430, line: 145, baseType: !440, size: 64, offset: 960)
!5091 = !DIDerivedType(tag: DW_TAG_member, name: "graph_parse_endpoint", scope: !437, file: !430, line: 146, baseType: !5092, size: 64, offset: 1024)
!5092 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5093, size: 64)
!5093 = !DISubroutineType(types: !5094)
!5094 = !{!294, !451, !5095}
!5095 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5096, size: 64)
!5096 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fwnode_endpoint", file: !430, line: 29, size: 128, elements: !5097)
!5097 = !{!5098, !5099, !5100}
!5098 = !DIDerivedType(tag: DW_TAG_member, name: "port", scope: !5096, file: !430, line: 30, baseType: !7, size: 32)
!5099 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !5096, file: !430, line: 31, baseType: !7, size: 32, offset: 32)
!5100 = !DIDerivedType(tag: DW_TAG_member, name: "local_fwnode", scope: !5096, file: !430, line: 32, baseType: !451, size: 64, offset: 64)
!5101 = !DIDerivedType(tag: DW_TAG_member, name: "add_links", scope: !437, file: !430, line: 148, baseType: !5102, size: 64, offset: 1088)
!5102 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5103, size: 64)
!5103 = !DISubroutineType(types: !5104)
!5104 = !{!294, !451, !1855}
!5105 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !429, file: !430, line: 20, baseType: !1855, size: 64, offset: 128)
!5106 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !424, file: !236, line: 355, baseType: !423, size: 64, offset: 320)
!5107 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !424, file: !236, line: 356, baseType: !300, size: 128, offset: 384)
!5108 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !424, file: !236, line: 357, baseType: !300, size: 128, offset: 512)
!5109 = !DIDerivedType(tag: DW_TAG_member, name: "wakeup_list", scope: !424, file: !236, line: 358, baseType: !300, size: 128, offset: 640)
!5110 = !DIDerivedType(tag: DW_TAG_member, name: "del_list", scope: !424, file: !236, line: 359, baseType: !300, size: 128, offset: 768)
!5111 = !DIDerivedType(tag: DW_TAG_member, name: "status", scope: !424, file: !236, line: 360, baseType: !5112, size: 32, offset: 896)
!5112 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "acpi_device_status", file: !236, line: 179, size: 32, elements: !5113)
!5113 = !{!5114, !5115, !5116, !5117, !5118, !5119}
!5114 = !DIDerivedType(tag: DW_TAG_member, name: "present", scope: !5112, file: !236, line: 180, baseType: !261, size: 1, flags: DIFlagBitField, extraData: i64 0)
!5115 = !DIDerivedType(tag: DW_TAG_member, name: "enabled", scope: !5112, file: !236, line: 181, baseType: !261, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!5116 = !DIDerivedType(tag: DW_TAG_member, name: "show_in_ui", scope: !5112, file: !236, line: 182, baseType: !261, size: 1, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!5117 = !DIDerivedType(tag: DW_TAG_member, name: "functional", scope: !5112, file: !236, line: 183, baseType: !261, size: 1, offset: 3, flags: DIFlagBitField, extraData: i64 0)
!5118 = !DIDerivedType(tag: DW_TAG_member, name: "battery_present", scope: !5112, file: !236, line: 184, baseType: !261, size: 1, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!5119 = !DIDerivedType(tag: DW_TAG_member, name: "reserved", scope: !5112, file: !236, line: 185, baseType: !261, size: 27, offset: 5, flags: DIFlagBitField, extraData: i64 0)
!5120 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !424, file: !236, line: 361, baseType: !5121, size: 32, offset: 928)
!5121 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "acpi_device_flags", file: !236, line: 190, size: 32, elements: !5122)
!5122 = !{!5123, !5124, !5125, !5126, !5127, !5128, !5129, !5130, !5131, !5132, !5133, !5134, !5135, !5136}
!5123 = !DIDerivedType(tag: DW_TAG_member, name: "dynamic_status", scope: !5121, file: !236, line: 191, baseType: !261, size: 1, flags: DIFlagBitField, extraData: i64 0)
!5124 = !DIDerivedType(tag: DW_TAG_member, name: "removable", scope: !5121, file: !236, line: 192, baseType: !261, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!5125 = !DIDerivedType(tag: DW_TAG_member, name: "ejectable", scope: !5121, file: !236, line: 193, baseType: !261, size: 1, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!5126 = !DIDerivedType(tag: DW_TAG_member, name: "power_manageable", scope: !5121, file: !236, line: 194, baseType: !261, size: 1, offset: 3, flags: DIFlagBitField, extraData: i64 0)
!5127 = !DIDerivedType(tag: DW_TAG_member, name: "match_driver", scope: !5121, file: !236, line: 195, baseType: !261, size: 1, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!5128 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !5121, file: !236, line: 196, baseType: !261, size: 1, offset: 5, flags: DIFlagBitField, extraData: i64 0)
!5129 = !DIDerivedType(tag: DW_TAG_member, name: "visited", scope: !5121, file: !236, line: 197, baseType: !261, size: 1, offset: 6, flags: DIFlagBitField, extraData: i64 0)
!5130 = !DIDerivedType(tag: DW_TAG_member, name: "hotplug_notify", scope: !5121, file: !236, line: 198, baseType: !261, size: 1, offset: 7, flags: DIFlagBitField, extraData: i64 0)
!5131 = !DIDerivedType(tag: DW_TAG_member, name: "is_dock_station", scope: !5121, file: !236, line: 199, baseType: !261, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 0)
!5132 = !DIDerivedType(tag: DW_TAG_member, name: "of_compatible_ok", scope: !5121, file: !236, line: 200, baseType: !261, size: 1, offset: 9, flags: DIFlagBitField, extraData: i64 0)
!5133 = !DIDerivedType(tag: DW_TAG_member, name: "coherent_dma", scope: !5121, file: !236, line: 201, baseType: !261, size: 1, offset: 10, flags: DIFlagBitField, extraData: i64 0)
!5134 = !DIDerivedType(tag: DW_TAG_member, name: "cca_seen", scope: !5121, file: !236, line: 202, baseType: !261, size: 1, offset: 11, flags: DIFlagBitField, extraData: i64 0)
!5135 = !DIDerivedType(tag: DW_TAG_member, name: "enumeration_by_parent", scope: !5121, file: !236, line: 203, baseType: !261, size: 1, offset: 12, flags: DIFlagBitField, extraData: i64 0)
!5136 = !DIDerivedType(tag: DW_TAG_member, name: "reserved", scope: !5121, file: !236, line: 204, baseType: !261, size: 19, offset: 13, flags: DIFlagBitField, extraData: i64 0)
!5137 = !DIDerivedType(tag: DW_TAG_member, name: "pnp", scope: !424, file: !236, line: 362, baseType: !5138, size: 960, offset: 960)
!5138 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "acpi_device_pnp", file: !236, line: 234, size: 960, elements: !5139)
!5139 = !{!5140, !5142, !5149, !5151, !5152, !5153, !5158, !5161}
!5140 = !DIDerivedType(tag: DW_TAG_member, name: "bus_id", scope: !5138, file: !236, line: 235, baseType: !5141, size: 64)
!5141 = !DIDerivedType(tag: DW_TAG_typedef, name: "acpi_bus_id", file: !236, line: 217, baseType: !275)
!5142 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !5138, file: !236, line: 236, baseType: !5143, size: 32, offset: 64)
!5143 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "acpi_pnp_type", file: !236, line: 227, size: 32, elements: !5144)
!5144 = !{!5145, !5146, !5147, !5148}
!5145 = !DIDerivedType(tag: DW_TAG_member, name: "hardware_id", scope: !5143, file: !236, line: 228, baseType: !261, size: 1, flags: DIFlagBitField, extraData: i64 0)
!5146 = !DIDerivedType(tag: DW_TAG_member, name: "bus_address", scope: !5143, file: !236, line: 229, baseType: !261, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!5147 = !DIDerivedType(tag: DW_TAG_member, name: "platform_id", scope: !5143, file: !236, line: 230, baseType: !261, size: 1, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!5148 = !DIDerivedType(tag: DW_TAG_member, name: "reserved", scope: !5143, file: !236, line: 231, baseType: !261, size: 29, offset: 3, flags: DIFlagBitField, extraData: i64 0)
!5149 = !DIDerivedType(tag: DW_TAG_member, name: "bus_address", scope: !5138, file: !236, line: 237, baseType: !5150, size: 64, offset: 128)
!5150 = !DIDerivedType(tag: DW_TAG_typedef, name: "acpi_bus_address", file: !236, line: 218, baseType: !284)
!5151 = !DIDerivedType(tag: DW_TAG_member, name: "unique_id", scope: !5138, file: !236, line: 238, baseType: !505, size: 64, offset: 192)
!5152 = !DIDerivedType(tag: DW_TAG_member, name: "ids", scope: !5138, file: !236, line: 239, baseType: !300, size: 128, offset: 256)
!5153 = !DIDerivedType(tag: DW_TAG_member, name: "device_name", scope: !5138, file: !236, line: 240, baseType: !5154, size: 320, offset: 384)
!5154 = !DIDerivedType(tag: DW_TAG_typedef, name: "acpi_device_name", file: !236, line: 219, baseType: !5155)
!5155 = !DICompositeType(tag: DW_TAG_array_type, baseType: !257, size: 320, elements: !5156)
!5156 = !{!5157}
!5157 = !DISubrange(count: 40)
!5158 = !DIDerivedType(tag: DW_TAG_member, name: "device_class", scope: !5138, file: !236, line: 241, baseType: !5159, size: 160, offset: 704)
!5159 = !DIDerivedType(tag: DW_TAG_typedef, name: "acpi_device_class", file: !236, line: 220, baseType: !5160)
!5160 = !DICompositeType(tag: DW_TAG_array_type, baseType: !257, size: 160, elements: !3483)
!5161 = !DIDerivedType(tag: DW_TAG_member, name: "str_obj", scope: !5138, file: !236, line: 242, baseType: !5162, size: 64, offset: 896)
!5162 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5163, size: 64)
!5163 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "acpi_object", file: !282, line: 899, size: 192, elements: !5164)
!5164 = !{!5165, !5167, !5172, !5178, !5184, !5190, !5196, !5204}
!5165 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !5163, file: !282, line: 900, baseType: !5166, size: 32)
!5166 = !DIDerivedType(tag: DW_TAG_typedef, name: "acpi_object_type", file: !282, line: 635, baseType: !261)
!5167 = !DIDerivedType(tag: DW_TAG_member, name: "integer", scope: !5163, file: !282, line: 904, baseType: !5168, size: 128)
!5168 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !5163, file: !282, line: 901, size: 128, elements: !5169)
!5169 = !{!5170, !5171}
!5170 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !5168, file: !282, line: 902, baseType: !5166, size: 32)
!5171 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !5168, file: !282, line: 903, baseType: !284, size: 64, offset: 64)
!5172 = !DIDerivedType(tag: DW_TAG_member, name: "string", scope: !5163, file: !282, line: 910, baseType: !5173, size: 128)
!5173 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !5163, file: !282, line: 906, size: 128, elements: !5174)
!5174 = !{!5175, !5176, !5177}
!5175 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !5173, file: !282, line: 907, baseType: !5166, size: 32)
!5176 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !5173, file: !282, line: 908, baseType: !261, size: 32, offset: 32)
!5177 = !DIDerivedType(tag: DW_TAG_member, name: "pointer", scope: !5173, file: !282, line: 909, baseType: !505, size: 64, offset: 64)
!5178 = !DIDerivedType(tag: DW_TAG_member, name: "buffer", scope: !5163, file: !282, line: 916, baseType: !5179, size: 128)
!5179 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !5163, file: !282, line: 912, size: 128, elements: !5180)
!5180 = !{!5181, !5182, !5183}
!5181 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !5179, file: !282, line: 913, baseType: !5166, size: 32)
!5182 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !5179, file: !282, line: 914, baseType: !261, size: 32, offset: 32)
!5183 = !DIDerivedType(tag: DW_TAG_member, name: "pointer", scope: !5179, file: !282, line: 915, baseType: !390, size: 64, offset: 64)
!5184 = !DIDerivedType(tag: DW_TAG_member, name: "package", scope: !5163, file: !282, line: 922, baseType: !5185, size: 128)
!5185 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !5163, file: !282, line: 918, size: 128, elements: !5186)
!5186 = !{!5187, !5188, !5189}
!5187 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !5185, file: !282, line: 919, baseType: !5166, size: 32)
!5188 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !5185, file: !282, line: 920, baseType: !261, size: 32, offset: 32)
!5189 = !DIDerivedType(tag: DW_TAG_member, name: "elements", scope: !5185, file: !282, line: 921, baseType: !5162, size: 64, offset: 64)
!5190 = !DIDerivedType(tag: DW_TAG_member, name: "reference", scope: !5163, file: !282, line: 928, baseType: !5191, size: 128)
!5191 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !5163, file: !282, line: 924, size: 128, elements: !5192)
!5192 = !{!5193, !5194, !5195}
!5193 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !5191, file: !282, line: 925, baseType: !5166, size: 32)
!5194 = !DIDerivedType(tag: DW_TAG_member, name: "actual_type", scope: !5191, file: !282, line: 926, baseType: !5166, size: 32, offset: 32)
!5195 = !DIDerivedType(tag: DW_TAG_member, name: "handle", scope: !5191, file: !282, line: 927, baseType: !281, size: 64, offset: 64)
!5196 = !DIDerivedType(tag: DW_TAG_member, name: "processor", scope: !5163, file: !282, line: 935, baseType: !5197, size: 192)
!5197 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !5163, file: !282, line: 930, size: 192, elements: !5198)
!5198 = !{!5199, !5200, !5201, !5203}
!5199 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !5197, file: !282, line: 931, baseType: !5166, size: 32)
!5200 = !DIDerivedType(tag: DW_TAG_member, name: "proc_id", scope: !5197, file: !282, line: 932, baseType: !261, size: 32, offset: 32)
!5201 = !DIDerivedType(tag: DW_TAG_member, name: "pblk_address", scope: !5197, file: !282, line: 933, baseType: !5202, size: 64, offset: 64)
!5202 = !DIDerivedType(tag: DW_TAG_typedef, name: "acpi_io_address", file: !282, line: 128, baseType: !284)
!5203 = !DIDerivedType(tag: DW_TAG_member, name: "pblk_length", scope: !5197, file: !282, line: 934, baseType: !261, size: 32, offset: 128)
!5204 = !DIDerivedType(tag: DW_TAG_member, name: "power_resource", scope: !5163, file: !282, line: 941, baseType: !5205, size: 96)
!5205 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !5163, file: !282, line: 937, size: 96, elements: !5206)
!5206 = !{!5207, !5208, !5209}
!5207 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !5205, file: !282, line: 938, baseType: !5166, size: 32)
!5208 = !DIDerivedType(tag: DW_TAG_member, name: "system_level", scope: !5205, file: !282, line: 939, baseType: !261, size: 32, offset: 32)
!5209 = !DIDerivedType(tag: DW_TAG_member, name: "resource_order", scope: !5205, file: !282, line: 940, baseType: !261, size: 32, offset: 64)
!5210 = !DIDerivedType(tag: DW_TAG_member, name: "power", scope: !424, file: !236, line: 363, baseType: !5211, size: 1344, offset: 1920)
!5211 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "acpi_device_power", file: !236, line: 275, size: 1344, elements: !5212)
!5212 = !{!5213, !5214, !5224}
!5213 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !5211, file: !236, line: 276, baseType: !294, size: 32)
!5214 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !5211, file: !236, line: 277, baseType: !5215, size: 32, offset: 32)
!5215 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "acpi_device_power_flags", file: !236, line: 254, size: 32, elements: !5216)
!5216 = !{!5217, !5218, !5219, !5220, !5221, !5222, !5223}
!5217 = !DIDerivedType(tag: DW_TAG_member, name: "explicit_get", scope: !5215, file: !236, line: 255, baseType: !261, size: 1, flags: DIFlagBitField, extraData: i64 0)
!5218 = !DIDerivedType(tag: DW_TAG_member, name: "power_resources", scope: !5215, file: !236, line: 256, baseType: !261, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!5219 = !DIDerivedType(tag: DW_TAG_member, name: "inrush_current", scope: !5215, file: !236, line: 257, baseType: !261, size: 1, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!5220 = !DIDerivedType(tag: DW_TAG_member, name: "power_removed", scope: !5215, file: !236, line: 258, baseType: !261, size: 1, offset: 3, flags: DIFlagBitField, extraData: i64 0)
!5221 = !DIDerivedType(tag: DW_TAG_member, name: "ignore_parent", scope: !5215, file: !236, line: 259, baseType: !261, size: 1, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!5222 = !DIDerivedType(tag: DW_TAG_member, name: "dsw_present", scope: !5215, file: !236, line: 260, baseType: !261, size: 1, offset: 5, flags: DIFlagBitField, extraData: i64 0)
!5223 = !DIDerivedType(tag: DW_TAG_member, name: "reserved", scope: !5215, file: !236, line: 261, baseType: !261, size: 26, offset: 6, flags: DIFlagBitField, extraData: i64 0)
!5224 = !DIDerivedType(tag: DW_TAG_member, name: "states", scope: !5211, file: !236, line: 278, baseType: !5225, size: 1280, offset: 64)
!5225 = !DICompositeType(tag: DW_TAG_array_type, baseType: !5226, size: 1280, elements: !2052)
!5226 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "acpi_device_power_state", file: !236, line: 264, size: 256, elements: !5227)
!5227 = !{!5228, !5234, !5235, !5236}
!5228 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !5226, file: !236, line: 269, baseType: !5229, size: 8)
!5229 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !5226, file: !236, line: 265, size: 8, elements: !5230)
!5230 = !{!5231, !5232, !5233}
!5231 = !DIDerivedType(tag: DW_TAG_member, name: "valid", scope: !5229, file: !236, line: 266, baseType: !266, size: 1, flags: DIFlagBitField, extraData: i64 0)
!5232 = !DIDerivedType(tag: DW_TAG_member, name: "explicit_set", scope: !5229, file: !236, line: 267, baseType: !266, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!5233 = !DIDerivedType(tag: DW_TAG_member, name: "reserved", scope: !5229, file: !236, line: 268, baseType: !266, size: 6, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!5234 = !DIDerivedType(tag: DW_TAG_member, name: "power", scope: !5226, file: !236, line: 270, baseType: !294, size: 32, offset: 32)
!5235 = !DIDerivedType(tag: DW_TAG_member, name: "latency", scope: !5226, file: !236, line: 271, baseType: !294, size: 32, offset: 64)
!5236 = !DIDerivedType(tag: DW_TAG_member, name: "resources", scope: !5226, file: !236, line: 272, baseType: !300, size: 128, offset: 128)
!5237 = !DIDerivedType(tag: DW_TAG_member, name: "wakeup", scope: !424, file: !236, line: 364, baseType: !5238, size: 640, offset: 3264)
!5238 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "acpi_device_wakeup", file: !236, line: 315, size: 640, elements: !5239)
!5239 = !{!5240, !5241, !5242, !5243, !5244, !5249, !5258, !5259, !5260}
!5240 = !DIDerivedType(tag: DW_TAG_member, name: "gpe_device", scope: !5238, file: !236, line: 316, baseType: !281, size: 64)
!5241 = !DIDerivedType(tag: DW_TAG_member, name: "gpe_number", scope: !5238, file: !236, line: 317, baseType: !284, size: 64, offset: 64)
!5242 = !DIDerivedType(tag: DW_TAG_member, name: "sleep_state", scope: !5238, file: !236, line: 318, baseType: !284, size: 64, offset: 128)
!5243 = !DIDerivedType(tag: DW_TAG_member, name: "resources", scope: !5238, file: !236, line: 319, baseType: !300, size: 128, offset: 192)
!5244 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !5238, file: !236, line: 320, baseType: !5245, size: 8, offset: 320)
!5245 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "acpi_device_wakeup_flags", file: !236, line: 305, size: 8, elements: !5246)
!5246 = !{!5247, !5248}
!5247 = !DIDerivedType(tag: DW_TAG_member, name: "valid", scope: !5245, file: !236, line: 306, baseType: !266, size: 1, flags: DIFlagBitField, extraData: i64 0)
!5248 = !DIDerivedType(tag: DW_TAG_member, name: "notifier_present", scope: !5245, file: !236, line: 307, baseType: !266, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!5249 = !DIDerivedType(tag: DW_TAG_member, name: "context", scope: !5238, file: !236, line: 321, baseType: !5250, size: 128, offset: 384)
!5250 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "acpi_device_wakeup_context", file: !236, line: 310, size: 128, elements: !5251)
!5251 = !{!5252, !5257}
!5252 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !5250, file: !236, line: 311, baseType: !5253, size: 64)
!5253 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5254, size: 64)
!5254 = !DISubroutineType(types: !5255)
!5255 = !{null, !5256}
!5256 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5250, size: 64)
!5257 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !5250, file: !236, line: 312, baseType: !1855, size: 64, offset: 64)
!5258 = !DIDerivedType(tag: DW_TAG_member, name: "ws", scope: !5238, file: !236, line: 322, baseType: !4781, size: 64, offset: 512)
!5259 = !DIDerivedType(tag: DW_TAG_member, name: "prepare_count", scope: !5238, file: !236, line: 323, baseType: !294, size: 32, offset: 576)
!5260 = !DIDerivedType(tag: DW_TAG_member, name: "enable_count", scope: !5238, file: !236, line: 324, baseType: !294, size: 32, offset: 608)
!5261 = !DIDerivedType(tag: DW_TAG_member, name: "performance", scope: !424, file: !236, line: 365, baseType: !5262, size: 192, offset: 3904)
!5262 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "acpi_device_perf", file: !236, line: 297, size: 192, elements: !5263)
!5263 = !{!5264, !5265, !5269, !5270}
!5264 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !5262, file: !236, line: 298, baseType: !294, size: 32)
!5265 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !5262, file: !236, line: 299, baseType: !5266, size: 8, offset: 32)
!5266 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "acpi_device_perf_flags", file: !236, line: 283, size: 8, elements: !5267)
!5267 = !{!5268}
!5268 = !DIDerivedType(tag: DW_TAG_member, name: "reserved", scope: !5266, file: !236, line: 284, baseType: !266, size: 8, flags: DIFlagBitField, extraData: i64 0)
!5269 = !DIDerivedType(tag: DW_TAG_member, name: "state_count", scope: !5262, file: !236, line: 300, baseType: !294, size: 32, offset: 64)
!5270 = !DIDerivedType(tag: DW_TAG_member, name: "states", scope: !5262, file: !236, line: 301, baseType: !5271, size: 64, offset: 128)
!5271 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5272, size: 64)
!5272 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "acpi_device_perf_state", file: !236, line: 287, size: 64, elements: !5273)
!5273 = !{!5274, !5279, !5280, !5281}
!5274 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !5272, file: !236, line: 291, baseType: !5275, size: 8)
!5275 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !5272, file: !236, line: 288, size: 8, elements: !5276)
!5276 = !{!5277, !5278}
!5277 = !DIDerivedType(tag: DW_TAG_member, name: "valid", scope: !5275, file: !236, line: 289, baseType: !266, size: 1, flags: DIFlagBitField, extraData: i64 0)
!5278 = !DIDerivedType(tag: DW_TAG_member, name: "reserved", scope: !5275, file: !236, line: 290, baseType: !266, size: 7, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!5279 = !DIDerivedType(tag: DW_TAG_member, name: "power", scope: !5272, file: !236, line: 292, baseType: !266, size: 8, offset: 8)
!5280 = !DIDerivedType(tag: DW_TAG_member, name: "performance", scope: !5272, file: !236, line: 293, baseType: !266, size: 8, offset: 16)
!5281 = !DIDerivedType(tag: DW_TAG_member, name: "latency", scope: !5272, file: !236, line: 294, baseType: !294, size: 32, offset: 32)
!5282 = !DIDerivedType(tag: DW_TAG_member, name: "dir", scope: !424, file: !236, line: 366, baseType: !5283, size: 64, offset: 4096)
!5283 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "acpi_device_dir", file: !236, line: 209, size: 64, elements: !5284)
!5284 = !{!5285}
!5285 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !5283, file: !236, line: 210, baseType: !5286, size: 64)
!5286 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5287, size: 64)
!5287 = !DICompositeType(tag: DW_TAG_structure_type, name: "proc_dir_entry", file: !5288, line: 123, flags: DIFlagFwdDecl)
!5288 = !DIFile(filename: "./include/linux/interrupt.h", directory: "/home/lizy2001/genbc/linux")
!5289 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !424, file: !236, line: 367, baseType: !5290, size: 384, offset: 4160)
!5290 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "acpi_device_data", file: !236, line: 341, size: 384, elements: !5291)
!5291 = !{!5292, !5295, !5296, !5297}
!5292 = !DIDerivedType(tag: DW_TAG_member, name: "pointer", scope: !5290, file: !236, line: 342, baseType: !5293, size: 64)
!5293 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5294, size: 64)
!5294 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5163)
!5295 = !DIDerivedType(tag: DW_TAG_member, name: "properties", scope: !5290, file: !236, line: 343, baseType: !300, size: 128, offset: 64)
!5296 = !DIDerivedType(tag: DW_TAG_member, name: "of_compatible", scope: !5290, file: !236, line: 344, baseType: !5293, size: 64, offset: 192)
!5297 = !DIDerivedType(tag: DW_TAG_member, name: "subnodes", scope: !5290, file: !236, line: 345, baseType: !300, size: 128, offset: 256)
!5298 = !DIDerivedType(tag: DW_TAG_member, name: "handler", scope: !424, file: !236, line: 368, baseType: !5299, size: 64, offset: 4544)
!5299 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5300, size: 64)
!5300 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "acpi_scan_handler", file: !236, line: 122, size: 1216, elements: !5301)
!5301 = !{!5302, !5303, !5304, !5309, !5313, !5317, !5318, !5319}
!5302 = !DIDerivedType(tag: DW_TAG_member, name: "ids", scope: !5300, file: !236, line: 123, baseType: !4696, size: 64)
!5303 = !DIDerivedType(tag: DW_TAG_member, name: "list_node", scope: !5300, file: !236, line: 124, baseType: !300, size: 128, offset: 64)
!5304 = !DIDerivedType(tag: DW_TAG_member, name: "match", scope: !5300, file: !236, line: 125, baseType: !5305, size: 64, offset: 192)
!5305 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5306, size: 64)
!5306 = !DISubroutineType(types: !5307)
!5307 = !{!339, !468, !5308}
!5308 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4696, size: 64)
!5309 = !DIDerivedType(tag: DW_TAG_member, name: "attach", scope: !5300, file: !236, line: 126, baseType: !5310, size: 64, offset: 256)
!5310 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5311, size: 64)
!5311 = !DISubroutineType(types: !5312)
!5312 = !{!294, !423, !4696}
!5313 = !DIDerivedType(tag: DW_TAG_member, name: "detach", scope: !5300, file: !236, line: 127, baseType: !5314, size: 64, offset: 320)
!5314 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5315, size: 64)
!5315 = !DISubroutineType(types: !5316)
!5316 = !{null, !423}
!5317 = !DIDerivedType(tag: DW_TAG_member, name: "bind", scope: !5300, file: !236, line: 128, baseType: !4624, size: 64, offset: 384)
!5318 = !DIDerivedType(tag: DW_TAG_member, name: "unbind", scope: !5300, file: !236, line: 129, baseType: !4624, size: 64, offset: 448)
!5319 = !DIDerivedType(tag: DW_TAG_member, name: "hotplug", scope: !5300, file: !236, line: 130, baseType: !5320, size: 704, offset: 512)
!5320 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "acpi_hotplug_profile", file: !236, line: 108, size: 704, elements: !5321)
!5321 = !{!5322, !5323, !5327, !5328, !5329}
!5322 = !DIDerivedType(tag: DW_TAG_member, name: "kobj", scope: !5320, file: !236, line: 109, baseType: !464, size: 512)
!5323 = !DIDerivedType(tag: DW_TAG_member, name: "scan_dependent", scope: !5320, file: !236, line: 110, baseType: !5324, size: 64, offset: 512)
!5324 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5325, size: 64)
!5325 = !DISubroutineType(types: !5326)
!5326 = !{!294, !423}
!5327 = !DIDerivedType(tag: DW_TAG_member, name: "notify_online", scope: !5320, file: !236, line: 111, baseType: !5314, size: 64, offset: 576)
!5328 = !DIDerivedType(tag: DW_TAG_member, name: "enabled", scope: !5320, file: !236, line: 112, baseType: !339, size: 1, offset: 640, flags: DIFlagBitField, extraData: i64 640)
!5329 = !DIDerivedType(tag: DW_TAG_member, name: "demand_offline", scope: !5320, file: !236, line: 113, baseType: !339, size: 1, offset: 641, flags: DIFlagBitField, extraData: i64 640)
!5330 = !DIDerivedType(tag: DW_TAG_member, name: "hp", scope: !424, file: !236, line: 369, baseType: !5331, size: 64, offset: 4608)
!5331 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5332, size: 64)
!5332 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "acpi_hotplug_context", file: !236, line: 138, size: 256, elements: !5333)
!5333 = !{!5334, !5335, !5339, !5343}
!5334 = !DIDerivedType(tag: DW_TAG_member, name: "self", scope: !5332, file: !236, line: 139, baseType: !423, size: 64)
!5335 = !DIDerivedType(tag: DW_TAG_member, name: "notify", scope: !5332, file: !236, line: 140, baseType: !5336, size: 64, offset: 64)
!5336 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5337, size: 64)
!5337 = !DISubroutineType(types: !5338)
!5338 = !{!294, !423, !261}
!5339 = !DIDerivedType(tag: DW_TAG_member, name: "uevent", scope: !5332, file: !236, line: 141, baseType: !5340, size: 64, offset: 128)
!5340 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5341, size: 64)
!5341 = !DISubroutineType(types: !5342)
!5342 = !{null, !423, !261}
!5343 = !DIDerivedType(tag: DW_TAG_member, name: "fixup", scope: !5332, file: !236, line: 142, baseType: !5314, size: 64, offset: 192)
!5344 = !DIDerivedType(tag: DW_TAG_member, name: "driver", scope: !424, file: !236, line: 370, baseType: !5345, size: 64, offset: 4672)
!5345 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5346, size: 64)
!5346 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "acpi_driver", file: !236, line: 162, size: 2816, elements: !5347)
!5347 = !{!5348, !5352, !5353, !5354, !5355, !5364, !5365}
!5348 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !5346, file: !236, line: 163, baseType: !5349, size: 640)
!5349 = !DICompositeType(tag: DW_TAG_array_type, baseType: !257, size: 640, elements: !5350)
!5350 = !{!5351}
!5351 = !DISubrange(count: 80)
!5352 = !DIDerivedType(tag: DW_TAG_member, name: "class", scope: !5346, file: !236, line: 164, baseType: !5349, size: 640, offset: 640)
!5353 = !DIDerivedType(tag: DW_TAG_member, name: "ids", scope: !5346, file: !236, line: 165, baseType: !4696, size: 64, offset: 1280)
!5354 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !5346, file: !236, line: 166, baseType: !7, size: 32, offset: 1344)
!5355 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !5346, file: !236, line: 167, baseType: !5356, size: 192, offset: 1408)
!5356 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "acpi_device_ops", file: !236, line: 154, size: 192, elements: !5357)
!5357 = !{!5358, !5360, !5362}
!5358 = !DIDerivedType(tag: DW_TAG_member, name: "add", scope: !5356, file: !236, line: 155, baseType: !5359, size: 64)
!5359 = !DIDerivedType(tag: DW_TAG_typedef, name: "acpi_op_add", file: !236, line: 150, baseType: !5324)
!5360 = !DIDerivedType(tag: DW_TAG_member, name: "remove", scope: !5356, file: !236, line: 156, baseType: !5361, size: 64, offset: 64)
!5361 = !DIDerivedType(tag: DW_TAG_typedef, name: "acpi_op_remove", file: !236, line: 151, baseType: !5324)
!5362 = !DIDerivedType(tag: DW_TAG_member, name: "notify", scope: !5356, file: !236, line: 157, baseType: !5363, size: 64, offset: 128)
!5363 = !DIDerivedType(tag: DW_TAG_typedef, name: "acpi_op_notify", file: !236, line: 152, baseType: !5340)
!5364 = !DIDerivedType(tag: DW_TAG_member, name: "drv", scope: !5346, file: !236, line: 168, baseType: !4674, size: 1152, offset: 1600)
!5365 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !5346, file: !236, line: 169, baseType: !849, size: 64, offset: 2752)
!5366 = !DIDerivedType(tag: DW_TAG_member, name: "driver_gpios", scope: !424, file: !236, line: 371, baseType: !5367, size: 64, offset: 4736)
!5367 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5368, size: 64)
!5368 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5369)
!5369 = !DICompositeType(tag: DW_TAG_structure_type, name: "acpi_gpio_mapping", file: !236, line: 348, flags: DIFlagFwdDecl)
!5370 = !DIDerivedType(tag: DW_TAG_member, name: "driver_data", scope: !424, file: !236, line: 372, baseType: !247, size: 64, offset: 4800)
!5371 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !424, file: !236, line: 373, baseType: !461, size: 5568, offset: 4864)
!5372 = !DIDerivedType(tag: DW_TAG_member, name: "physical_node_count", scope: !424, file: !236, line: 374, baseType: !7, size: 32, offset: 10432)
!5373 = !DIDerivedType(tag: DW_TAG_member, name: "dep_unmet", scope: !424, file: !236, line: 375, baseType: !7, size: 32, offset: 10464)
!5374 = !DIDerivedType(tag: DW_TAG_member, name: "physical_node_list", scope: !424, file: !236, line: 376, baseType: !300, size: 128, offset: 10496)
!5375 = !DIDerivedType(tag: DW_TAG_member, name: "physical_node_lock", scope: !424, file: !236, line: 377, baseType: !344, size: 192, offset: 10624)
!5376 = !DIDerivedType(tag: DW_TAG_member, name: "remove", scope: !424, file: !236, line: 378, baseType: !5314, size: 64, offset: 10816)
!5377 = !{!5378, !5429, !5434, !5439, !5441, !5446, !5451, !5453, !5458, !5463, !5465, !5470, !5475, !5477, !5482, !5487, !5489, !5491, !5496, !5498, !5501, !5503, !5505, !5510, !5512, !5514, !5516, !5518, !5520, !0, !5522, !5524, !5527, !5529, !5534, !5537, !5539, !5542, !5544, !5546, !5548, !5553, !5555, !5557, !5562, !5564, !5567, !5569, !5571, !5592, !5594, !5599, !5601, !5604, !5606}
!5378 = !DIGlobalVariableExpression(var: !5379, expr: !DIExpression())
!5379 = distinct !DIGlobalVariable(name: "__param_ec_delay", scope: !2, file: !3, line: 110, type: !5380, isLocal: true, isDefinition: true, align: 64)
!5380 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5381)
!5381 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernel_param", file: !5382, line: 69, size: 320, elements: !5383)
!5382 = !DIFile(filename: "./include/linux/moduleparam.h", directory: "/home/lizy2001/genbc/linux")
!5383 = !{!5384, !5385, !5386, !5402, !5404, !5407, !5408}
!5384 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !5381, file: !5382, line: 70, baseType: !468, size: 64)
!5385 = !DIDerivedType(tag: DW_TAG_member, name: "mod", scope: !5381, file: !5382, line: 71, baseType: !849, size: 64, offset: 64)
!5386 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !5381, file: !5382, line: 72, baseType: !5387, size: 64, offset: 128)
!5387 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5388, size: 64)
!5388 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5389)
!5389 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernel_param_ops", file: !5382, line: 47, size: 256, elements: !5390)
!5390 = !{!5391, !5392, !5397, !5401}
!5391 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !5389, file: !5382, line: 49, baseType: !7, size: 32)
!5392 = !DIDerivedType(tag: DW_TAG_member, name: "set", scope: !5389, file: !5382, line: 51, baseType: !5393, size: 64, offset: 64)
!5393 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5394, size: 64)
!5394 = !DISubroutineType(types: !5395)
!5395 = !{!294, !468, !5396}
!5396 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5380, size: 64)
!5397 = !DIDerivedType(tag: DW_TAG_member, name: "get", scope: !5389, file: !5382, line: 53, baseType: !5398, size: 64, offset: 128)
!5398 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5399, size: 64)
!5399 = !DISubroutineType(types: !5400)
!5400 = !{!294, !505, !5396}
!5401 = !DIDerivedType(tag: DW_TAG_member, name: "free", scope: !5389, file: !5382, line: 55, baseType: !688, size: 64, offset: 192)
!5402 = !DIDerivedType(tag: DW_TAG_member, name: "perm", scope: !5381, file: !5382, line: 73, baseType: !5403, size: 16, offset: 192)
!5403 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1124)
!5404 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !5381, file: !5382, line: 74, baseType: !5405, size: 8, offset: 208)
!5405 = !DIDerivedType(tag: DW_TAG_typedef, name: "s8", file: !262, line: 16, baseType: !5406)
!5406 = !DIDerivedType(tag: DW_TAG_typedef, name: "__s8", file: !264, line: 20, baseType: !1196)
!5407 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !5381, file: !5382, line: 75, baseType: !266, size: 8, offset: 216)
!5408 = !DIDerivedType(tag: DW_TAG_member, scope: !5381, file: !5382, line: 76, baseType: !5409, size: 64, offset: 256)
!5409 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5381, file: !5382, line: 76, size: 64, elements: !5410)
!5410 = !{!5411, !5412, !5419}
!5411 = !DIDerivedType(tag: DW_TAG_member, name: "arg", scope: !5409, file: !5382, line: 77, baseType: !247, size: 64)
!5412 = !DIDerivedType(tag: DW_TAG_member, name: "str", scope: !5409, file: !5382, line: 78, baseType: !5413, size: 64)
!5413 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5414, size: 64)
!5414 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5415)
!5415 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kparam_string", file: !5382, line: 86, size: 128, elements: !5416)
!5416 = !{!5417, !5418}
!5417 = !DIDerivedType(tag: DW_TAG_member, name: "maxlen", scope: !5415, file: !5382, line: 87, baseType: !7, size: 32)
!5418 = !DIDerivedType(tag: DW_TAG_member, name: "string", scope: !5415, file: !5382, line: 88, baseType: !505, size: 64, offset: 64)
!5419 = !DIDerivedType(tag: DW_TAG_member, name: "arr", scope: !5409, file: !5382, line: 79, baseType: !5420, size: 64)
!5420 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5421, size: 64)
!5421 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5422)
!5422 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kparam_array", file: !5382, line: 92, size: 256, elements: !5423)
!5423 = !{!5424, !5425, !5426, !5427, !5428}
!5424 = !DIDerivedType(tag: DW_TAG_member, name: "max", scope: !5422, file: !5382, line: 94, baseType: !7, size: 32)
!5425 = !DIDerivedType(tag: DW_TAG_member, name: "elemsize", scope: !5422, file: !5382, line: 95, baseType: !7, size: 32, offset: 32)
!5426 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !5422, file: !5382, line: 96, baseType: !1219, size: 64, offset: 64)
!5427 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !5422, file: !5382, line: 97, baseType: !5387, size: 64, offset: 128)
!5428 = !DIDerivedType(tag: DW_TAG_member, name: "elem", scope: !5422, file: !5382, line: 98, baseType: !247, size: 64, offset: 192)
!5429 = !DIGlobalVariableExpression(var: !5430, expr: !DIExpression())
!5430 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_ec_delaytype293", scope: !2, file: !3, line: 110, type: !5431, isLocal: true, isDefinition: true, align: 8)
!5431 = !DICompositeType(tag: DW_TAG_array_type, baseType: !469, size: 224, elements: !5432)
!5432 = !{!5433}
!5433 = !DISubrange(count: 28)
!5434 = !DIGlobalVariableExpression(var: !5435, expr: !DIExpression())
!5435 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_ec_delay294", scope: !2, file: !3, line: 111, type: !5436, isLocal: true, isDefinition: true, align: 8)
!5436 = !DICompositeType(tag: DW_TAG_array_type, baseType: !469, size: 544, elements: !5437)
!5437 = !{!5438}
!5438 = !DISubrange(count: 68)
!5439 = !DIGlobalVariableExpression(var: !5440, expr: !DIExpression())
!5440 = distinct !DIGlobalVariable(name: "__param_ec_max_queries", scope: !2, file: !3, line: 114, type: !5380, isLocal: true, isDefinition: true, align: 64)
!5441 = !DIGlobalVariableExpression(var: !5442, expr: !DIExpression())
!5442 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_ec_max_queriestype295", scope: !2, file: !3, line: 114, type: !5443, isLocal: true, isDefinition: true, align: 8)
!5443 = !DICompositeType(tag: DW_TAG_array_type, baseType: !469, size: 272, elements: !5444)
!5444 = !{!5445}
!5445 = !DISubrange(count: 34)
!5446 = !DIGlobalVariableExpression(var: !5447, expr: !DIExpression())
!5447 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_ec_max_queries296", scope: !2, file: !3, line: 115, type: !5448, isLocal: true, isDefinition: true, align: 8)
!5448 = !DICompositeType(tag: DW_TAG_array_type, baseType: !469, size: 472, elements: !5449)
!5449 = !{!5450}
!5450 = !DISubrange(count: 59)
!5451 = !DIGlobalVariableExpression(var: !5452, expr: !DIExpression())
!5452 = distinct !DIGlobalVariable(name: "__param_ec_busy_polling", scope: !2, file: !3, line: 118, type: !5380, isLocal: true, isDefinition: true, align: 64)
!5453 = !DIGlobalVariableExpression(var: !5454, expr: !DIExpression())
!5454 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_ec_busy_pollingtype297", scope: !2, file: !3, line: 118, type: !5455, isLocal: true, isDefinition: true, align: 8)
!5455 = !DICompositeType(tag: DW_TAG_array_type, baseType: !469, size: 280, elements: !5456)
!5456 = !{!5457}
!5457 = !DISubrange(count: 35)
!5458 = !DIGlobalVariableExpression(var: !5459, expr: !DIExpression())
!5459 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_ec_busy_polling298", scope: !2, file: !3, line: 119, type: !5460, isLocal: true, isDefinition: true, align: 8)
!5460 = !DICompositeType(tag: DW_TAG_array_type, baseType: !469, size: 552, elements: !5461)
!5461 = !{!5462}
!5462 = !DISubrange(count: 69)
!5463 = !DIGlobalVariableExpression(var: !5464, expr: !DIExpression())
!5464 = distinct !DIGlobalVariable(name: "__param_ec_polling_guard", scope: !2, file: !3, line: 122, type: !5380, isLocal: true, isDefinition: true, align: 64)
!5465 = !DIGlobalVariableExpression(var: !5466, expr: !DIExpression())
!5466 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_ec_polling_guardtype299", scope: !2, file: !3, line: 122, type: !5467, isLocal: true, isDefinition: true, align: 8)
!5467 = !DICompositeType(tag: DW_TAG_array_type, baseType: !469, size: 288, elements: !5468)
!5468 = !{!5469}
!5469 = !DISubrange(count: 36)
!5470 = !DIGlobalVariableExpression(var: !5471, expr: !DIExpression())
!5471 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_ec_polling_guard300", scope: !2, file: !3, line: 123, type: !5472, isLocal: true, isDefinition: true, align: 8)
!5472 = !DICompositeType(tag: DW_TAG_array_type, baseType: !469, size: 632, elements: !5473)
!5473 = !{!5474}
!5474 = !DISubrange(count: 79)
!5475 = !DIGlobalVariableExpression(var: !5476, expr: !DIExpression())
!5476 = distinct !DIGlobalVariable(name: "__param_ec_storm_threshold", scope: !2, file: !3, line: 133, type: !5380, isLocal: true, isDefinition: true, align: 64)
!5477 = !DIGlobalVariableExpression(var: !5478, expr: !DIExpression())
!5478 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_ec_storm_thresholdtype301", scope: !2, file: !3, line: 133, type: !5479, isLocal: true, isDefinition: true, align: 8)
!5479 = !DICompositeType(tag: DW_TAG_array_type, baseType: !469, size: 304, elements: !5480)
!5480 = !{!5481}
!5481 = !DISubrange(count: 38)
!5482 = !DIGlobalVariableExpression(var: !5483, expr: !DIExpression())
!5483 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_ec_storm_threshold302", scope: !2, file: !3, line: 134, type: !5484, isLocal: true, isDefinition: true, align: 8)
!5484 = !DICompositeType(tag: DW_TAG_array_type, baseType: !469, size: 648, elements: !5485)
!5485 = !{!5486}
!5486 = !DISubrange(count: 81)
!5487 = !DIGlobalVariableExpression(var: !5488, expr: !DIExpression())
!5488 = distinct !DIGlobalVariable(name: "__param_ec_freeze_events", scope: !2, file: !3, line: 137, type: !5380, isLocal: true, isDefinition: true, align: 64)
!5489 = !DIGlobalVariableExpression(var: !5490, expr: !DIExpression())
!5490 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_ec_freeze_eventstype303", scope: !2, file: !3, line: 137, type: !5467, isLocal: true, isDefinition: true, align: 8)
!5491 = !DIGlobalVariableExpression(var: !5492, expr: !DIExpression())
!5492 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_ec_freeze_events304", scope: !2, file: !3, line: 138, type: !5493, isLocal: true, isDefinition: true, align: 8)
!5493 = !DICompositeType(tag: DW_TAG_array_type, baseType: !469, size: 592, elements: !5494)
!5494 = !{!5495}
!5495 = !DISubrange(count: 74)
!5496 = !DIGlobalVariableExpression(var: !5497, expr: !DIExpression())
!5497 = distinct !DIGlobalVariable(name: "__param_ec_no_wakeup", scope: !2, file: !3, line: 141, type: !5380, isLocal: true, isDefinition: true, align: 64)
!5498 = !DIGlobalVariableExpression(var: !5499, expr: !DIExpression())
!5499 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_ec_no_wakeuptype305", scope: !2, file: !3, line: 141, type: !5500, isLocal: true, isDefinition: true, align: 8)
!5500 = !DICompositeType(tag: DW_TAG_array_type, baseType: !469, size: 256, elements: !1309)
!5501 = !DIGlobalVariableExpression(var: !5502, expr: !DIExpression())
!5502 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_ec_no_wakeup306", scope: !2, file: !3, line: 142, type: !5448, isLocal: true, isDefinition: true, align: 8)
!5503 = !DIGlobalVariableExpression(var: !5504, expr: !DIExpression())
!5504 = distinct !DIGlobalVariable(name: "__param_ec_event_clearing", scope: !2, file: !3, line: 2069, type: !5380, isLocal: true, isDefinition: true, align: 64)
!5505 = !DIGlobalVariableExpression(var: !5506, expr: !DIExpression())
!5506 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_ec_event_clearing326", scope: !2, file: !3, line: 2071, type: !5507, isLocal: true, isDefinition: true, align: 8)
!5507 = !DICompositeType(tag: DW_TAG_array_type, baseType: !469, size: 480, elements: !5508)
!5508 = !{!5509}
!5509 = !DISubrange(count: 60)
!5510 = !DIGlobalVariableExpression(var: !5511, expr: !DIExpression())
!5511 = distinct !DIGlobalVariable(name: "ec_busy_polling", scope: !2, file: !3, line: 117, type: !339, isLocal: true, isDefinition: true)
!5512 = !DIGlobalVariableExpression(var: !5513, expr: !DIExpression())
!5513 = distinct !DIGlobalVariable(name: "ec_no_wakeup", scope: !2, file: !3, line: 140, type: !339, isLocal: true, isDefinition: true)
!5514 = !DIGlobalVariableExpression(var: !5515, expr: !DIExpression())
!5515 = distinct !DIGlobalVariable(name: "first_ec", scope: !2, file: !3, line: 176, type: !330, isLocal: false, isDefinition: true)
!5516 = !DIGlobalVariableExpression(var: !5517, expr: !DIExpression())
!5517 = distinct !DIGlobalVariable(name: "boot_ec", scope: !2, file: !3, line: 179, type: !330, isLocal: true, isDefinition: true)
!5518 = !DIGlobalVariableExpression(var: !5519, expr: !DIExpression())
!5519 = distinct !DIGlobalVariable(name: "ec_wq", scope: !2, file: !3, line: 181, type: !1296, isLocal: true, isDefinition: true)
!5520 = !DIGlobalVariableExpression(var: !5521, expr: !DIExpression())
!5521 = distinct !DIGlobalVariable(name: "EC_FLAGS_CORRECT_ECDT", scope: !2, file: !3, line: 184, type: !294, isLocal: true, isDefinition: true)
!5522 = !DIGlobalVariableExpression(var: !5523, expr: !DIExpression())
!5523 = distinct !DIGlobalVariable(name: "ec_delay", scope: !2, file: !3, line: 109, type: !7, isLocal: true, isDefinition: true)
!5524 = !DIGlobalVariableExpression(var: !5525, expr: !DIExpression())
!5525 = distinct !DIGlobalVariable(name: "__param_str_ec_max_queries", scope: !2, file: !3, line: 114, type: !5526, isLocal: true, isDefinition: true)
!5526 = !DICompositeType(tag: DW_TAG_array_type, baseType: !469, size: 160, elements: !3483)
!5527 = !DIGlobalVariableExpression(var: !5528, expr: !DIExpression())
!5528 = distinct !DIGlobalVariable(name: "ec_max_queries", scope: !2, file: !3, line: 113, type: !7, isLocal: true, isDefinition: true)
!5529 = !DIGlobalVariableExpression(var: !5530, expr: !DIExpression())
!5530 = distinct !DIGlobalVariable(name: "__param_str_ec_busy_polling", scope: !2, file: !3, line: 118, type: !5531, isLocal: true, isDefinition: true)
!5531 = !DICompositeType(tag: DW_TAG_array_type, baseType: !469, size: 168, elements: !5532)
!5532 = !{!5533}
!5533 = !DISubrange(count: 21)
!5534 = !DIGlobalVariableExpression(var: !5535, expr: !DIExpression())
!5535 = distinct !DIGlobalVariable(name: "__param_str_ec_polling_guard", scope: !2, file: !3, line: 122, type: !5536, isLocal: true, isDefinition: true)
!5536 = !DICompositeType(tag: DW_TAG_array_type, baseType: !469, size: 176, elements: !1756)
!5537 = !DIGlobalVariableExpression(var: !5538, expr: !DIExpression())
!5538 = distinct !DIGlobalVariable(name: "ec_polling_guard", scope: !2, file: !3, line: 121, type: !7, isLocal: true, isDefinition: true)
!5539 = !DIGlobalVariableExpression(var: !5540, expr: !DIExpression())
!5540 = distinct !DIGlobalVariable(name: "__param_str_ec_storm_threshold", scope: !2, file: !3, line: 133, type: !5541, isLocal: true, isDefinition: true)
!5541 = !DICompositeType(tag: DW_TAG_array_type, baseType: !469, size: 192, elements: !1496)
!5542 = !DIGlobalVariableExpression(var: !5543, expr: !DIExpression())
!5543 = distinct !DIGlobalVariable(name: "ec_storm_threshold", scope: !2, file: !3, line: 132, type: !7, isLocal: true, isDefinition: true)
!5544 = !DIGlobalVariableExpression(var: !5545, expr: !DIExpression())
!5545 = distinct !DIGlobalVariable(name: "__param_str_ec_freeze_events", scope: !2, file: !3, line: 137, type: !5536, isLocal: true, isDefinition: true)
!5546 = !DIGlobalVariableExpression(var: !5547, expr: !DIExpression())
!5547 = distinct !DIGlobalVariable(name: "ec_freeze_events", scope: !2, file: !3, line: 136, type: !339, isLocal: true, isDefinition: true)
!5548 = !DIGlobalVariableExpression(var: !5549, expr: !DIExpression())
!5549 = distinct !DIGlobalVariable(name: "__param_str_ec_no_wakeup", scope: !2, file: !3, line: 141, type: !5550, isLocal: true, isDefinition: true)
!5550 = !DICompositeType(tag: DW_TAG_array_type, baseType: !469, size: 144, elements: !5551)
!5551 = !{!5552}
!5552 = !DISubrange(count: 18)
!5553 = !DIGlobalVariableExpression(var: !5554, expr: !DIExpression())
!5554 = distinct !DIGlobalVariable(name: "ec_query_wq", scope: !2, file: !3, line: 182, type: !1296, isLocal: true, isDefinition: true)
!5555 = !DIGlobalVariableExpression(var: !5556, expr: !DIExpression())
!5556 = distinct !DIGlobalVariable(name: "ec_event_clearing", scope: !2, file: !3, line: 125, type: !7, isLocal: true, isDefinition: true)
!5557 = !DIGlobalVariableExpression(var: !5558, expr: !DIExpression())
!5558 = distinct !DIGlobalVariable(name: "__key", scope: !5559, file: !3, line: 1343, type: !864, isLocal: true, isDefinition: true)
!5559 = distinct !DISubprogram(name: "acpi_ec_alloc", scope: !3, file: !3, line: 1337, type: !5560, scopeLine: 1338, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !372)
!5560 = !DISubroutineType(types: !5561)
!5561 = !{!330}
!5562 = !DIGlobalVariableExpression(var: !5563, expr: !DIExpression())
!5563 = distinct !DIGlobalVariable(name: "__key", scope: !5559, file: !3, line: 1344, type: !864, isLocal: true, isDefinition: true)
!5564 = !DIGlobalVariableExpression(var: !5565, expr: !DIExpression())
!5565 = distinct !DIGlobalVariable(name: "ec_device_ids", scope: !2, file: !3, line: 1696, type: !5566, isLocal: true, isDefinition: true)
!5566 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4697, size: 768, elements: !506)
!5567 = !DIGlobalVariableExpression(var: !5568, expr: !DIExpression())
!5568 = distinct !DIGlobalVariable(name: "EC_FLAGS_IGNORE_DSDT_GPE", scope: !2, file: !3, line: 185, type: !294, isLocal: true, isDefinition: true)
!5569 = !DIGlobalVariableExpression(var: !5570, expr: !DIExpression())
!5570 = distinct !DIGlobalVariable(name: "EC_FLAGS_CLEAR_ON_RESUME", scope: !2, file: !3, line: 186, type: !294, isLocal: true, isDefinition: true)
!5571 = !DIGlobalVariableExpression(var: !5572, expr: !DIExpression())
!5572 = distinct !DIGlobalVariable(name: "ec_dmi_table", scope: !2, file: !3, line: 1844, type: !5573, isLocal: true, isDefinition: true)
!5573 = !DICompositeType(tag: DW_TAG_array_type, baseType: !5574, size: 22016, elements: !276)
!5574 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5575)
!5575 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dmi_system_id", file: !4686, line: 566, size: 2752, elements: !5576)
!5576 = !{!5577, !5582, !5583, !5591}
!5577 = !DIDerivedType(tag: DW_TAG_member, name: "callback", scope: !5575, file: !4686, line: 567, baseType: !5578, size: 64)
!5578 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5579, size: 64)
!5579 = !DISubroutineType(types: !5580)
!5580 = !{!294, !5581}
!5581 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5574, size: 64)
!5582 = !DIDerivedType(tag: DW_TAG_member, name: "ident", scope: !5575, file: !4686, line: 568, baseType: !468, size: 64, offset: 64)
!5583 = !DIDerivedType(tag: DW_TAG_member, name: "matches", scope: !5575, file: !4686, line: 569, baseType: !5584, size: 2560, offset: 128)
!5584 = !DICompositeType(tag: DW_TAG_array_type, baseType: !5585, size: 2560, elements: !258)
!5585 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dmi_strmatch", file: !4686, line: 560, size: 640, elements: !5586)
!5586 = !{!5587, !5588, !5589}
!5587 = !DIDerivedType(tag: DW_TAG_member, name: "slot", scope: !5585, file: !4686, line: 561, baseType: !268, size: 7, flags: DIFlagBitField, extraData: i64 0)
!5588 = !DIDerivedType(tag: DW_TAG_member, name: "exact_match", scope: !5585, file: !4686, line: 562, baseType: !268, size: 1, offset: 7, flags: DIFlagBitField, extraData: i64 0)
!5589 = !DIDerivedType(tag: DW_TAG_member, name: "substr", scope: !5585, file: !4686, line: 563, baseType: !5590, size: 632, offset: 8)
!5590 = !DICompositeType(tag: DW_TAG_array_type, baseType: !257, size: 632, elements: !5473)
!5591 = !DIDerivedType(tag: DW_TAG_member, name: "driver_data", scope: !5575, file: !4686, line: 570, baseType: !247, size: 64, offset: 2688)
!5592 = !DIGlobalVariableExpression(var: !5593, expr: !DIExpression())
!5593 = distinct !DIGlobalVariable(name: "boot_ec_is_ecdt", scope: !2, file: !3, line: 180, type: !339, isLocal: true, isDefinition: true)
!5594 = !DIGlobalVariableExpression(var: !5595, expr: !DIExpression())
!5595 = distinct !DIGlobalVariable(name: "__param_str_ec_event_clearing", scope: !2, file: !3, line: 2069, type: !5596, isLocal: true, isDefinition: true)
!5596 = !DICompositeType(tag: DW_TAG_array_type, baseType: !469, size: 184, elements: !5597)
!5597 = !{!5598}
!5598 = !DISubrange(count: 23)
!5599 = !DIGlobalVariableExpression(var: !5600, expr: !DIExpression())
!5600 = distinct !DIGlobalVariable(name: "__param_ops_ec_event_clearing", scope: !2, file: !3, line: 2069, type: !5388, isLocal: true, isDefinition: true)
!5601 = !DIGlobalVariableExpression(var: !5602, expr: !DIExpression())
!5602 = distinct !DIGlobalVariable(name: "acpi_ec_no_wakeup", scope: !2, file: !3, line: 2111, type: !5603, isLocal: true, isDefinition: true)
!5603 = !DICompositeType(tag: DW_TAG_array_type, baseType: !5574, size: 11008, elements: !258)
!5604 = !DIGlobalVariableExpression(var: !5605, expr: !DIExpression())
!5605 = distinct !DIGlobalVariable(name: "acpi_ec_driver", scope: !2, file: !3, line: 2073, type: !5346, isLocal: true, isDefinition: true)
!5606 = !DIGlobalVariableExpression(var: !5607, expr: !DIExpression())
!5607 = distinct !DIGlobalVariable(name: "acpi_ec_pm", scope: !2, file: !3, line: 2029, type: !4629, isLocal: true, isDefinition: true)
!5608 = !DICompositeType(tag: DW_TAG_array_type, baseType: !469, size: 112, elements: !5609)
!5609 = !{!5610}
!5610 = !DISubrange(count: 14)
!5611 = !{!"rsp"}
!5612 = !{i32 7, !"Dwarf Version", i32 4}
!5613 = !{i32 2, !"Debug Info Version", i32 3}
!5614 = !{i32 1, !"wchar_size", i32 2}
!5615 = !{i32 1, !"Code Model", i32 2}
!5616 = !{!"clang version 10.0.1 (https://github.com/llvm/llvm-project.git ef32c611aa214dea855364efd7ba451ec5ec3f74)"}
!5617 = distinct !DISubprogram(name: "acpi_ec_flush_work", scope: !3, file: !3, line: 556, type: !3200, scopeLine: 557, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !372)
!5618 = !DILocation(line: 559, column: 7, scope: !5619)
!5619 = distinct !DILexicalBlock(scope: !5617, file: !3, line: 559, column: 6)
!5620 = !DILocation(line: 559, column: 6, scope: !5617)
!5621 = !DILocation(line: 560, column: 3, scope: !5619)
!5622 = !DILocation(line: 562, column: 2, scope: !5617)
!5623 = !DILocation(line: 563, column: 1, scope: !5617)
!5624 = distinct !DISubprogram(name: "__acpi_ec_flush_work", scope: !3, file: !3, line: 535, type: !3200, scopeLine: 536, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !372)
!5625 = !DILocation(line: 537, column: 18, scope: !5624)
!5626 = !DILocation(line: 537, column: 2, scope: !5624)
!5627 = !DILocation(line: 538, column: 18, scope: !5624)
!5628 = !DILocation(line: 538, column: 2, scope: !5624)
!5629 = !DILocation(line: 539, column: 1, scope: !5624)
!5630 = distinct !DISubprogram(name: "ec_read", scope: !3, file: !3, line: 887, type: !5631, scopeLine: 888, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !372)
!5631 = !DISubroutineType(types: !5632)
!5632 = !{!294, !266, !390}
!5633 = !DILocalVariable(name: "addr", arg: 1, scope: !5630, file: !3, line: 887, type: !266)
!5634 = !DILocation(line: 887, column: 16, scope: !5630)
!5635 = !DILocalVariable(name: "val", arg: 2, scope: !5630, file: !3, line: 887, type: !390)
!5636 = !DILocation(line: 887, column: 26, scope: !5630)
!5637 = !DILocalVariable(name: "err", scope: !5630, file: !3, line: 889, type: !294)
!5638 = !DILocation(line: 889, column: 6, scope: !5630)
!5639 = !DILocalVariable(name: "temp_data", scope: !5630, file: !3, line: 890, type: !266)
!5640 = !DILocation(line: 890, column: 5, scope: !5630)
!5641 = !DILocation(line: 892, column: 7, scope: !5642)
!5642 = distinct !DILexicalBlock(scope: !5630, file: !3, line: 892, column: 6)
!5643 = !DILocation(line: 892, column: 6, scope: !5630)
!5644 = !DILocation(line: 893, column: 3, scope: !5642)
!5645 = !DILocation(line: 895, column: 21, scope: !5630)
!5646 = !DILocation(line: 895, column: 31, scope: !5630)
!5647 = !DILocation(line: 895, column: 8, scope: !5630)
!5648 = !DILocation(line: 895, column: 6, scope: !5630)
!5649 = !DILocation(line: 897, column: 7, scope: !5650)
!5650 = distinct !DILexicalBlock(scope: !5630, file: !3, line: 897, column: 6)
!5651 = !DILocation(line: 897, column: 6, scope: !5630)
!5652 = !DILocation(line: 898, column: 10, scope: !5653)
!5653 = distinct !DILexicalBlock(scope: !5650, file: !3, line: 897, column: 12)
!5654 = !DILocation(line: 898, column: 4, scope: !5653)
!5655 = !DILocation(line: 898, column: 8, scope: !5653)
!5656 = !DILocation(line: 899, column: 3, scope: !5653)
!5657 = !DILocation(line: 901, column: 9, scope: !5630)
!5658 = !DILocation(line: 901, column: 2, scope: !5630)
!5659 = !DILocation(line: 902, column: 1, scope: !5630)
!5660 = distinct !DISubprogram(name: "acpi_ec_read", scope: !3, file: !3, line: 864, type: !5661, scopeLine: 865, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !372)
!5661 = !DISubroutineType(types: !5662)
!5662 = !{!294, !330, !266, !390}
!5663 = !DILocalVariable(name: "ec", arg: 1, scope: !5660, file: !3, line: 864, type: !330)
!5664 = !DILocation(line: 864, column: 41, scope: !5660)
!5665 = !DILocalVariable(name: "address", arg: 2, scope: !5660, file: !3, line: 864, type: !266)
!5666 = !DILocation(line: 864, column: 48, scope: !5660)
!5667 = !DILocalVariable(name: "data", arg: 3, scope: !5660, file: !3, line: 864, type: !390)
!5668 = !DILocation(line: 864, column: 61, scope: !5660)
!5669 = !DILocalVariable(name: "result", scope: !5660, file: !3, line: 866, type: !294)
!5670 = !DILocation(line: 866, column: 6, scope: !5660)
!5671 = !DILocalVariable(name: "d", scope: !5660, file: !3, line: 867, type: !266)
!5672 = !DILocation(line: 867, column: 5, scope: !5660)
!5673 = !DILocalVariable(name: "t", scope: !5660, file: !3, line: 868, type: !384)
!5674 = !DILocation(line: 868, column: 21, scope: !5660)
!5675 = !DILocation(line: 868, column: 25, scope: !5660)
!5676 = !DILocation(line: 872, column: 31, scope: !5660)
!5677 = !DILocation(line: 872, column: 11, scope: !5660)
!5678 = !DILocation(line: 872, column: 9, scope: !5660)
!5679 = !DILocation(line: 873, column: 10, scope: !5660)
!5680 = !DILocation(line: 873, column: 3, scope: !5660)
!5681 = !DILocation(line: 873, column: 8, scope: !5660)
!5682 = !DILocation(line: 874, column: 9, scope: !5660)
!5683 = !DILocation(line: 874, column: 2, scope: !5660)
!5684 = distinct !DISubprogram(name: "ec_write", scope: !3, file: !3, line: 905, type: !5685, scopeLine: 906, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !372)
!5685 = !DISubroutineType(types: !5686)
!5686 = !{!294, !266, !266}
!5687 = !DILocalVariable(name: "addr", arg: 1, scope: !5684, file: !3, line: 905, type: !266)
!5688 = !DILocation(line: 905, column: 17, scope: !5684)
!5689 = !DILocalVariable(name: "val", arg: 2, scope: !5684, file: !3, line: 905, type: !266)
!5690 = !DILocation(line: 905, column: 26, scope: !5684)
!5691 = !DILocalVariable(name: "err", scope: !5684, file: !3, line: 907, type: !294)
!5692 = !DILocation(line: 907, column: 6, scope: !5684)
!5693 = !DILocation(line: 909, column: 7, scope: !5694)
!5694 = distinct !DILexicalBlock(scope: !5684, file: !3, line: 909, column: 6)
!5695 = !DILocation(line: 909, column: 6, scope: !5684)
!5696 = !DILocation(line: 910, column: 3, scope: !5694)
!5697 = !DILocation(line: 912, column: 22, scope: !5684)
!5698 = !DILocation(line: 912, column: 32, scope: !5684)
!5699 = !DILocation(line: 912, column: 38, scope: !5684)
!5700 = !DILocation(line: 912, column: 8, scope: !5684)
!5701 = !DILocation(line: 912, column: 6, scope: !5684)
!5702 = !DILocation(line: 914, column: 9, scope: !5684)
!5703 = !DILocation(line: 914, column: 2, scope: !5684)
!5704 = !DILocation(line: 915, column: 1, scope: !5684)
!5705 = distinct !DISubprogram(name: "acpi_ec_write", scope: !3, file: !3, line: 877, type: !5706, scopeLine: 878, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !372)
!5706 = !DISubroutineType(types: !5707)
!5707 = !{!294, !330, !266, !266}
!5708 = !DILocalVariable(name: "ec", arg: 1, scope: !5705, file: !3, line: 877, type: !330)
!5709 = !DILocation(line: 877, column: 42, scope: !5705)
!5710 = !DILocalVariable(name: "address", arg: 2, scope: !5705, file: !3, line: 877, type: !266)
!5711 = !DILocation(line: 877, column: 49, scope: !5705)
!5712 = !DILocalVariable(name: "data", arg: 3, scope: !5705, file: !3, line: 877, type: !266)
!5713 = !DILocation(line: 877, column: 61, scope: !5705)
!5714 = !DILocalVariable(name: "wdata", scope: !5705, file: !3, line: 879, type: !5715)
!5715 = !DICompositeType(tag: DW_TAG_array_type, baseType: !266, size: 16, elements: !1583)
!5716 = !DILocation(line: 879, column: 5, scope: !5705)
!5717 = !DILocation(line: 879, column: 16, scope: !5705)
!5718 = !DILocation(line: 879, column: 18, scope: !5705)
!5719 = !DILocation(line: 879, column: 27, scope: !5705)
!5720 = !DILocalVariable(name: "t", scope: !5705, file: !3, line: 880, type: !384)
!5721 = !DILocation(line: 880, column: 21, scope: !5705)
!5722 = !DILocation(line: 880, column: 25, scope: !5705)
!5723 = !DILocation(line: 881, column: 14, scope: !5705)
!5724 = !DILocation(line: 884, column: 29, scope: !5705)
!5725 = !DILocation(line: 884, column: 9, scope: !5705)
!5726 = !DILocation(line: 884, column: 2, scope: !5705)
!5727 = distinct !DISubprogram(name: "ec_transaction", scope: !3, file: !3, line: 918, type: !5728, scopeLine: 921, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !372)
!5728 = !DISubroutineType(types: !5729)
!5729 = !{!294, !266, !387, !7, !390, !7}
!5730 = !DILocalVariable(name: "command", arg: 1, scope: !5727, file: !3, line: 918, type: !266)
!5731 = !DILocation(line: 918, column: 23, scope: !5727)
!5732 = !DILocalVariable(name: "wdata", arg: 2, scope: !5727, file: !3, line: 919, type: !387)
!5733 = !DILocation(line: 919, column: 16, scope: !5727)
!5734 = !DILocalVariable(name: "wdata_len", arg: 3, scope: !5727, file: !3, line: 919, type: !7)
!5735 = !DILocation(line: 919, column: 32, scope: !5727)
!5736 = !DILocalVariable(name: "rdata", arg: 4, scope: !5727, file: !3, line: 920, type: !390)
!5737 = !DILocation(line: 920, column: 10, scope: !5727)
!5738 = !DILocalVariable(name: "rdata_len", arg: 5, scope: !5727, file: !3, line: 920, type: !7)
!5739 = !DILocation(line: 920, column: 26, scope: !5727)
!5740 = !DILocalVariable(name: "t", scope: !5727, file: !3, line: 922, type: !384)
!5741 = !DILocation(line: 922, column: 21, scope: !5727)
!5742 = !DILocation(line: 922, column: 25, scope: !5727)
!5743 = !DILocation(line: 923, column: 14, scope: !5727)
!5744 = !DILocation(line: 923, column: 30, scope: !5727)
!5745 = !DILocation(line: 922, column: 37, scope: !5727)
!5746 = !DILocation(line: 924, column: 13, scope: !5727)
!5747 = !DILocation(line: 924, column: 32, scope: !5727)
!5748 = !DILocation(line: 926, column: 7, scope: !5749)
!5749 = distinct !DILexicalBlock(scope: !5727, file: !3, line: 926, column: 6)
!5750 = !DILocation(line: 926, column: 6, scope: !5727)
!5751 = !DILocation(line: 927, column: 3, scope: !5749)
!5752 = !DILocation(line: 929, column: 29, scope: !5727)
!5753 = !DILocation(line: 929, column: 9, scope: !5727)
!5754 = !DILocation(line: 929, column: 2, scope: !5727)
!5755 = !DILocation(line: 930, column: 1, scope: !5727)
!5756 = distinct !DISubprogram(name: "acpi_ec_transaction", scope: !3, file: !3, line: 816, type: !5757, scopeLine: 817, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !372)
!5757 = !DISubroutineType(types: !5758)
!5758 = !{!294, !330, !383}
!5759 = !DILocalVariable(name: "ec", arg: 1, scope: !5756, file: !3, line: 816, type: !330)
!5760 = !DILocation(line: 816, column: 48, scope: !5756)
!5761 = !DILocalVariable(name: "t", arg: 2, scope: !5756, file: !3, line: 816, type: !383)
!5762 = !DILocation(line: 816, column: 72, scope: !5756)
!5763 = !DILocalVariable(name: "status", scope: !5756, file: !3, line: 818, type: !294)
!5764 = !DILocation(line: 818, column: 6, scope: !5756)
!5765 = !DILocalVariable(name: "glk", scope: !5756, file: !3, line: 819, type: !261)
!5766 = !DILocation(line: 819, column: 6, scope: !5756)
!5767 = !DILocation(line: 821, column: 7, scope: !5768)
!5768 = distinct !DILexicalBlock(scope: !5756, file: !3, line: 821, column: 6)
!5769 = !DILocation(line: 821, column: 10, scope: !5768)
!5770 = !DILocation(line: 821, column: 15, scope: !5768)
!5771 = !DILocation(line: 821, column: 18, scope: !5768)
!5772 = !DILocation(line: 821, column: 22, scope: !5768)
!5773 = !DILocation(line: 821, column: 25, scope: !5768)
!5774 = !DILocation(line: 821, column: 30, scope: !5768)
!5775 = !DILocation(line: 821, column: 34, scope: !5768)
!5776 = !DILocation(line: 821, column: 37, scope: !5768)
!5777 = !DILocation(line: 821, column: 44, scope: !5768)
!5778 = !DILocation(line: 821, column: 48, scope: !5768)
!5779 = !DILocation(line: 821, column: 51, scope: !5768)
!5780 = !DILocation(line: 821, column: 56, scope: !5768)
!5781 = !DILocation(line: 821, column: 60, scope: !5768)
!5782 = !DILocation(line: 821, column: 63, scope: !5768)
!5783 = !DILocation(line: 821, column: 6, scope: !5756)
!5784 = !DILocation(line: 822, column: 3, scope: !5768)
!5785 = !DILocation(line: 823, column: 6, scope: !5786)
!5786 = distinct !DILexicalBlock(scope: !5756, file: !3, line: 823, column: 6)
!5787 = !DILocation(line: 823, column: 9, scope: !5786)
!5788 = !DILocation(line: 823, column: 6, scope: !5756)
!5789 = !DILocation(line: 824, column: 10, scope: !5786)
!5790 = !DILocation(line: 824, column: 13, scope: !5786)
!5791 = !DILocation(line: 824, column: 23, scope: !5786)
!5792 = !DILocation(line: 824, column: 26, scope: !5786)
!5793 = !DILocation(line: 824, column: 3, scope: !5786)
!5794 = !DILocation(line: 826, column: 14, scope: !5756)
!5795 = !DILocation(line: 826, column: 18, scope: !5756)
!5796 = !DILocation(line: 826, column: 2, scope: !5756)
!5797 = !DILocation(line: 827, column: 6, scope: !5798)
!5798 = distinct !DILexicalBlock(scope: !5756, file: !3, line: 827, column: 6)
!5799 = !DILocation(line: 827, column: 10, scope: !5798)
!5800 = !DILocation(line: 827, column: 6, scope: !5756)
!5801 = !DILocation(line: 828, column: 12, scope: !5802)
!5802 = distinct !DILexicalBlock(scope: !5798, file: !3, line: 827, column: 23)
!5803 = !DILocation(line: 828, column: 10, scope: !5802)
!5804 = !DILocation(line: 829, column: 7, scope: !5805)
!5805 = distinct !DILexicalBlock(scope: !5802, file: !3, line: 829, column: 7)
!5806 = !DILocation(line: 829, column: 7, scope: !5802)
!5807 = !DILocation(line: 830, column: 11, scope: !5808)
!5808 = distinct !DILexicalBlock(scope: !5805, file: !3, line: 829, column: 29)
!5809 = !DILocation(line: 831, column: 4, scope: !5808)
!5810 = !DILocation(line: 833, column: 2, scope: !5802)
!5811 = !DILocation(line: 835, column: 40, scope: !5756)
!5812 = !DILocation(line: 835, column: 44, scope: !5756)
!5813 = !DILocation(line: 835, column: 11, scope: !5756)
!5814 = !DILocation(line: 835, column: 9, scope: !5756)
!5815 = !DILocation(line: 837, column: 6, scope: !5816)
!5816 = distinct !DILexicalBlock(scope: !5756, file: !3, line: 837, column: 6)
!5817 = !DILocation(line: 837, column: 10, scope: !5816)
!5818 = !DILocation(line: 837, column: 6, scope: !5756)
!5819 = !DILocation(line: 838, column: 28, scope: !5816)
!5820 = !DILocation(line: 838, column: 3, scope: !5816)
!5821 = !DILabel(scope: !5756, name: "unlock", file: !3, line: 839)
!5822 = !DILocation(line: 839, column: 1, scope: !5756)
!5823 = !DILocation(line: 840, column: 16, scope: !5756)
!5824 = !DILocation(line: 840, column: 20, scope: !5756)
!5825 = !DILocation(line: 840, column: 2, scope: !5756)
!5826 = !DILocation(line: 841, column: 9, scope: !5756)
!5827 = !DILocation(line: 841, column: 2, scope: !5756)
!5828 = !DILocation(line: 842, column: 1, scope: !5756)
!5829 = distinct !DISubprogram(name: "ec_get_handle", scope: !3, file: !3, line: 934, type: !5830, scopeLine: 935, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !372)
!5830 = !DISubroutineType(types: !5831)
!5831 = !{!281}
!5832 = !DILocation(line: 936, column: 7, scope: !5833)
!5833 = distinct !DILexicalBlock(scope: !5829, file: !3, line: 936, column: 6)
!5834 = !DILocation(line: 936, column: 6, scope: !5829)
!5835 = !DILocation(line: 937, column: 3, scope: !5833)
!5836 = !DILocation(line: 938, column: 9, scope: !5829)
!5837 = !DILocation(line: 938, column: 19, scope: !5829)
!5838 = !DILocation(line: 938, column: 2, scope: !5829)
!5839 = !DILocation(line: 939, column: 1, scope: !5829)
!5840 = distinct !DISubprogram(name: "acpi_ec_block_transactions", scope: !3, file: !3, line: 1016, type: !3200, scopeLine: 1017, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !372)
!5841 = !DILocalVariable(name: "ec", scope: !5840, file: !3, line: 1018, type: !330)
!5842 = !DILocation(line: 1018, column: 18, scope: !5840)
!5843 = !DILocation(line: 1018, column: 23, scope: !5840)
!5844 = !DILocation(line: 1020, column: 7, scope: !5845)
!5845 = distinct !DILexicalBlock(scope: !5840, file: !3, line: 1020, column: 6)
!5846 = !DILocation(line: 1020, column: 6, scope: !5840)
!5847 = !DILocation(line: 1021, column: 3, scope: !5845)
!5848 = !DILocation(line: 1023, column: 14, scope: !5840)
!5849 = !DILocation(line: 1023, column: 18, scope: !5840)
!5850 = !DILocation(line: 1023, column: 2, scope: !5840)
!5851 = !DILocation(line: 1025, column: 15, scope: !5840)
!5852 = !DILocation(line: 1025, column: 2, scope: !5840)
!5853 = !DILocation(line: 1026, column: 16, scope: !5840)
!5854 = !DILocation(line: 1026, column: 20, scope: !5840)
!5855 = !DILocation(line: 1026, column: 2, scope: !5840)
!5856 = !DILocation(line: 1027, column: 1, scope: !5840)
!5857 = distinct !DISubprogram(name: "acpi_ec_stop", scope: !3, file: !3, line: 970, type: !5858, scopeLine: 971, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !372)
!5858 = !DISubroutineType(types: !5859)
!5859 = !{null, !330, !339}
!5860 = !DILocalVariable(name: "lock", arg: 1, scope: !5861, file: !5862, line: 327, type: !2245)
!5861 = distinct !DISubprogram(name: "spinlock_check", scope: !5862, file: !5862, line: 327, type: !5863, scopeLine: 328, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !372)
!5862 = !DIFile(filename: "./include/linux/spinlock.h", directory: "/home/lizy2001/genbc/linux")
!5863 = !DISubroutineType(types: !5864)
!5864 = !{!5865, !2245}
!5865 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1038, size: 64)
!5866 = !DILocation(line: 327, column: 67, scope: !5861, inlinedAt: !5867)
!5867 = distinct !DILocation(line: 980, column: 3, scope: !5868)
!5868 = distinct !DILexicalBlock(scope: !5869, file: !3, line: 980, column: 3)
!5869 = distinct !DILexicalBlock(scope: !5870, file: !3, line: 980, column: 3)
!5870 = distinct !DILexicalBlock(scope: !5871, file: !3, line: 980, column: 3)
!5871 = distinct !DILexicalBlock(scope: !5872, file: !3, line: 980, column: 3)
!5872 = distinct !DILexicalBlock(scope: !5873, file: !3, line: 980, column: 3)
!5873 = distinct !DILexicalBlock(scope: !5874, file: !3, line: 975, column: 27)
!5874 = distinct !DILexicalBlock(scope: !5857, file: !3, line: 975, column: 6)
!5875 = !DILocalVariable(name: "lock", arg: 1, scope: !5876, file: !5862, line: 407, type: !2245)
!5876 = distinct !DISubprogram(name: "spin_unlock_irqrestore", scope: !5862, file: !5862, line: 407, type: !5877, scopeLine: 408, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !372)
!5877 = !DISubroutineType(types: !5878)
!5878 = !{null, !2245, !287}
!5879 = !DILocation(line: 407, column: 64, scope: !5876, inlinedAt: !5880)
!5880 = distinct !DILocation(line: 978, column: 3, scope: !5873)
!5881 = !DILocalVariable(name: "flags", arg: 2, scope: !5876, file: !5862, line: 407, type: !287)
!5882 = !DILocation(line: 407, column: 84, scope: !5876, inlinedAt: !5880)
!5883 = !DILocation(line: 407, column: 64, scope: !5876, inlinedAt: !5884)
!5884 = distinct !DILocation(line: 991, column: 2, scope: !5857)
!5885 = !DILocation(line: 407, column: 84, scope: !5876, inlinedAt: !5884)
!5886 = !DILocation(line: 327, column: 67, scope: !5861, inlinedAt: !5887)
!5887 = distinct !DILocation(line: 974, column: 2, scope: !5888)
!5888 = distinct !DILexicalBlock(scope: !5889, file: !3, line: 974, column: 2)
!5889 = distinct !DILexicalBlock(scope: !5890, file: !3, line: 974, column: 2)
!5890 = distinct !DILexicalBlock(scope: !5891, file: !3, line: 974, column: 2)
!5891 = distinct !DILexicalBlock(scope: !5892, file: !3, line: 974, column: 2)
!5892 = distinct !DILexicalBlock(scope: !5857, file: !3, line: 974, column: 2)
!5893 = !DILocalVariable(name: "ec", arg: 1, scope: !5857, file: !3, line: 970, type: !330)
!5894 = !DILocation(line: 970, column: 42, scope: !5857)
!5895 = !DILocalVariable(name: "suspending", arg: 2, scope: !5857, file: !3, line: 970, type: !339)
!5896 = !DILocation(line: 970, column: 51, scope: !5857)
!5897 = !DILocalVariable(name: "flags", scope: !5857, file: !3, line: 972, type: !287)
!5898 = !DILocation(line: 972, column: 16, scope: !5857)
!5899 = !DILocation(line: 974, column: 2, scope: !5857)
!5900 = !DILocation(line: 974, column: 2, scope: !5892)
!5901 = !DILocalVariable(name: "__dummy", scope: !5902, file: !3, line: 974, type: !287)
!5902 = distinct !DILexicalBlock(scope: !5891, file: !3, line: 974, column: 2)
!5903 = !DILocation(line: 974, column: 2, scope: !5902)
!5904 = !DILocalVariable(name: "__dummy2", scope: !5902, file: !3, line: 974, type: !287)
!5905 = !DILocation(line: 974, column: 2, scope: !5891)
!5906 = !DILocation(line: 974, column: 2, scope: !5890)
!5907 = !DILocation(line: 974, column: 2, scope: !5908)
!5908 = distinct !DILexicalBlock(scope: !5890, file: !3, line: 974, column: 2)
!5909 = !DILocalVariable(name: "__dummy", scope: !5910, file: !3, line: 974, type: !287)
!5910 = distinct !DILexicalBlock(scope: !5911, file: !3, line: 974, column: 2)
!5911 = distinct !DILexicalBlock(scope: !5908, file: !3, line: 974, column: 2)
!5912 = !DILocation(line: 974, column: 2, scope: !5910)
!5913 = !DILocalVariable(name: "__dummy2", scope: !5910, file: !3, line: 974, type: !287)
!5914 = !DILocation(line: 974, column: 2, scope: !5911)
!5915 = !DILocation(line: 974, column: 2, scope: !5889)
!5916 = !{i32 -2140241865}
!5917 = !DILocation(line: 974, column: 2, scope: !5888)
!5918 = !DILocation(line: 329, column: 10, scope: !5861, inlinedAt: !5887)
!5919 = !DILocation(line: 329, column: 16, scope: !5861, inlinedAt: !5887)
!5920 = !DILocation(line: 975, column: 22, scope: !5874)
!5921 = !DILocation(line: 975, column: 6, scope: !5874)
!5922 = !DILocation(line: 975, column: 6, scope: !5857)
!5923 = !DILocation(line: 976, column: 3, scope: !5924)
!5924 = distinct !DILexicalBlock(scope: !5925, file: !3, line: 976, column: 3)
!5925 = distinct !DILexicalBlock(scope: !5873, file: !3, line: 976, column: 3)
!5926 = !DILocation(line: 976, column: 3, scope: !5925)
!5927 = !DILocation(line: 977, column: 30, scope: !5873)
!5928 = !DILocation(line: 977, column: 34, scope: !5873)
!5929 = !DILocation(line: 977, column: 3, scope: !5873)
!5930 = !DILocation(line: 978, column: 27, scope: !5873)
!5931 = !DILocation(line: 978, column: 31, scope: !5873)
!5932 = !DILocation(line: 978, column: 37, scope: !5873)
!5933 = !DILocalVariable(name: "__dummy", scope: !5934, file: !5862, line: 409, type: !287)
!5934 = distinct !DILexicalBlock(scope: !5935, file: !5862, line: 409, column: 2)
!5935 = distinct !DILexicalBlock(scope: !5876, file: !5862, line: 409, column: 2)
!5936 = !DILocation(line: 409, column: 2, scope: !5934, inlinedAt: !5880)
!5937 = !DILocalVariable(name: "__dummy2", scope: !5934, file: !5862, line: 409, type: !287)
!5938 = !DILocalVariable(name: "__dummy", scope: !5939, file: !5862, line: 409, type: !287)
!5939 = distinct !DILexicalBlock(scope: !5940, file: !5862, line: 409, column: 2)
!5940 = distinct !DILexicalBlock(scope: !5941, file: !5862, line: 409, column: 2)
!5941 = distinct !DILexicalBlock(scope: !5942, file: !5862, line: 409, column: 2)
!5942 = distinct !DILexicalBlock(scope: !5935, file: !5862, line: 409, column: 2)
!5943 = !DILocation(line: 409, column: 2, scope: !5939, inlinedAt: !5880)
!5944 = !DILocalVariable(name: "__dummy2", scope: !5939, file: !5862, line: 409, type: !287)
!5945 = !DILocation(line: 409, column: 2, scope: !5940, inlinedAt: !5880)
!5946 = !DILocation(line: 409, column: 2, scope: !5947, inlinedAt: !5880)
!5947 = distinct !DILexicalBlock(scope: !5942, file: !5862, line: 409, column: 2)
!5948 = !{i32 -2145419071}
!5949 = !DILocation(line: 409, column: 2, scope: !5950, inlinedAt: !5880)
!5950 = distinct !DILexicalBlock(scope: !5947, file: !5862, line: 409, column: 2)
!5951 = !DILocation(line: 979, column: 3, scope: !5873)
!5952 = !DILocation(line: 979, column: 3, scope: !5953)
!5953 = distinct !DILexicalBlock(scope: !5873, file: !3, line: 979, column: 3)
!5954 = !DILocation(line: 979, column: 3, scope: !5955)
!5955 = distinct !DILexicalBlock(scope: !5953, file: !3, line: 979, column: 3)
!5956 = !DILocation(line: 979, column: 3, scope: !5957)
!5957 = distinct !DILexicalBlock(scope: !5955, file: !3, line: 979, column: 3)
!5958 = !DILocation(line: 979, column: 3, scope: !5959)
!5959 = distinct !DILexicalBlock(scope: !5953, file: !3, line: 979, column: 3)
!5960 = !DILocalVariable(name: "__wq_entry", scope: !5961, file: !3, line: 979, type: !1139)
!5961 = distinct !DILexicalBlock(scope: !5953, file: !3, line: 979, column: 3)
!5962 = !DILocation(line: 979, column: 3, scope: !5961)
!5963 = !DILocalVariable(name: "__ret", scope: !5961, file: !3, line: 979, type: !31)
!5964 = !DILocalVariable(name: "__int", scope: !5965, file: !3, line: 979, type: !31)
!5965 = distinct !DILexicalBlock(scope: !5966, file: !3, line: 979, column: 3)
!5966 = distinct !DILexicalBlock(scope: !5967, file: !3, line: 979, column: 3)
!5967 = distinct !DILexicalBlock(scope: !5961, file: !3, line: 979, column: 3)
!5968 = !DILocation(line: 979, column: 3, scope: !5965)
!5969 = !DILocation(line: 979, column: 3, scope: !5970)
!5970 = distinct !DILexicalBlock(scope: !5965, file: !3, line: 979, column: 3)
!5971 = !DILocation(line: 979, column: 3, scope: !5966)
!5972 = distinct !{!5972, !5973, !5973}
!5973 = !DILocation(line: 979, column: 3, scope: !5967)
!5974 = !DILabel(scope: !5961, name: "__out", file: !3, line: 979)
!5975 = !DILocation(line: 980, column: 3, scope: !5873)
!5976 = !DILocation(line: 980, column: 3, scope: !5872)
!5977 = !DILocalVariable(name: "__dummy", scope: !5978, file: !3, line: 980, type: !287)
!5978 = distinct !DILexicalBlock(scope: !5871, file: !3, line: 980, column: 3)
!5979 = !DILocation(line: 980, column: 3, scope: !5978)
!5980 = !DILocalVariable(name: "__dummy2", scope: !5978, file: !3, line: 980, type: !287)
!5981 = !DILocation(line: 980, column: 3, scope: !5871)
!5982 = !DILocation(line: 980, column: 3, scope: !5870)
!5983 = !DILocation(line: 980, column: 3, scope: !5984)
!5984 = distinct !DILexicalBlock(scope: !5870, file: !3, line: 980, column: 3)
!5985 = !DILocalVariable(name: "__dummy", scope: !5986, file: !3, line: 980, type: !287)
!5986 = distinct !DILexicalBlock(scope: !5987, file: !3, line: 980, column: 3)
!5987 = distinct !DILexicalBlock(scope: !5984, file: !3, line: 980, column: 3)
!5988 = !DILocation(line: 980, column: 3, scope: !5986)
!5989 = !DILocalVariable(name: "__dummy2", scope: !5986, file: !3, line: 980, type: !287)
!5990 = !DILocation(line: 980, column: 3, scope: !5987)
!5991 = !DILocation(line: 980, column: 3, scope: !5869)
!5992 = !{i32 -2140239200}
!5993 = !DILocation(line: 980, column: 3, scope: !5868)
!5994 = !DILocation(line: 329, column: 10, scope: !5861, inlinedAt: !5867)
!5995 = !DILocation(line: 329, column: 16, scope: !5861, inlinedAt: !5867)
!5996 = !DILocation(line: 982, column: 8, scope: !5997)
!5997 = distinct !DILexicalBlock(scope: !5873, file: !3, line: 982, column: 7)
!5998 = !DILocation(line: 982, column: 7, scope: !5873)
!5999 = !DILocation(line: 983, column: 29, scope: !6000)
!6000 = distinct !DILexicalBlock(scope: !5997, file: !3, line: 982, column: 20)
!6001 = !DILocation(line: 983, column: 4, scope: !6000)
!6002 = !DILocation(line: 984, column: 4, scope: !6003)
!6003 = distinct !DILexicalBlock(scope: !6004, file: !3, line: 984, column: 4)
!6004 = distinct !DILexicalBlock(scope: !6000, file: !3, line: 984, column: 4)
!6005 = !DILocation(line: 984, column: 4, scope: !6004)
!6006 = !DILocation(line: 985, column: 3, scope: !6000)
!6007 = !DILocation(line: 985, column: 15, scope: !6008)
!6008 = distinct !DILexicalBlock(scope: !5997, file: !3, line: 985, column: 14)
!6009 = !DILocation(line: 985, column: 14, scope: !5997)
!6010 = !DILocation(line: 986, column: 28, scope: !6008)
!6011 = !DILocation(line: 986, column: 4, scope: !6008)
!6012 = !DILocation(line: 987, column: 32, scope: !5873)
!6013 = !DILocation(line: 987, column: 36, scope: !5873)
!6014 = !DILocation(line: 987, column: 3, scope: !5873)
!6015 = !DILocation(line: 988, column: 32, scope: !5873)
!6016 = !DILocation(line: 988, column: 36, scope: !5873)
!6017 = !DILocation(line: 988, column: 3, scope: !5873)
!6018 = !DILocation(line: 989, column: 3, scope: !5873)
!6019 = !DILocation(line: 990, column: 2, scope: !5873)
!6020 = !DILocation(line: 991, column: 26, scope: !5857)
!6021 = !DILocation(line: 991, column: 30, scope: !5857)
!6022 = !DILocation(line: 991, column: 36, scope: !5857)
!6023 = !DILocation(line: 409, column: 2, scope: !5934, inlinedAt: !5884)
!6024 = !DILocation(line: 409, column: 2, scope: !5939, inlinedAt: !5884)
!6025 = !DILocation(line: 409, column: 2, scope: !5940, inlinedAt: !5884)
!6026 = !DILocation(line: 409, column: 2, scope: !5947, inlinedAt: !5884)
!6027 = !DILocation(line: 409, column: 2, scope: !5950, inlinedAt: !5884)
!6028 = !DILocation(line: 992, column: 1, scope: !5857)
!6029 = distinct !DISubprogram(name: "acpi_ec_unblock_transactions", scope: !3, file: !3, line: 1029, type: !3200, scopeLine: 1030, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !372)
!6030 = !DILocation(line: 1035, column: 6, scope: !6031)
!6031 = distinct !DILexicalBlock(scope: !6029, file: !3, line: 1035, column: 6)
!6032 = !DILocation(line: 1035, column: 6, scope: !6029)
!6033 = !DILocation(line: 1036, column: 17, scope: !6031)
!6034 = !DILocation(line: 1036, column: 3, scope: !6031)
!6035 = !DILocation(line: 1037, column: 1, scope: !6029)
!6036 = distinct !DISubprogram(name: "acpi_ec_start", scope: !3, file: !3, line: 942, type: !5858, scopeLine: 943, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !372)
!6037 = !DILocation(line: 407, column: 64, scope: !5876, inlinedAt: !6038)
!6038 = distinct !DILocation(line: 956, column: 2, scope: !6036)
!6039 = !DILocation(line: 407, column: 84, scope: !5876, inlinedAt: !6038)
!6040 = !DILocation(line: 327, column: 67, scope: !5861, inlinedAt: !6041)
!6041 = distinct !DILocation(line: 946, column: 2, scope: !6042)
!6042 = distinct !DILexicalBlock(scope: !6043, file: !3, line: 946, column: 2)
!6043 = distinct !DILexicalBlock(scope: !6044, file: !3, line: 946, column: 2)
!6044 = distinct !DILexicalBlock(scope: !6045, file: !3, line: 946, column: 2)
!6045 = distinct !DILexicalBlock(scope: !6046, file: !3, line: 946, column: 2)
!6046 = distinct !DILexicalBlock(scope: !6036, file: !3, line: 946, column: 2)
!6047 = !DILocalVariable(name: "ec", arg: 1, scope: !6036, file: !3, line: 942, type: !330)
!6048 = !DILocation(line: 942, column: 43, scope: !6036)
!6049 = !DILocalVariable(name: "resuming", arg: 2, scope: !6036, file: !3, line: 942, type: !339)
!6050 = !DILocation(line: 942, column: 52, scope: !6036)
!6051 = !DILocalVariable(name: "flags", scope: !6036, file: !3, line: 944, type: !287)
!6052 = !DILocation(line: 944, column: 16, scope: !6036)
!6053 = !DILocation(line: 946, column: 2, scope: !6036)
!6054 = !DILocation(line: 946, column: 2, scope: !6046)
!6055 = !DILocalVariable(name: "__dummy", scope: !6056, file: !3, line: 946, type: !287)
!6056 = distinct !DILexicalBlock(scope: !6045, file: !3, line: 946, column: 2)
!6057 = !DILocation(line: 946, column: 2, scope: !6056)
!6058 = !DILocalVariable(name: "__dummy2", scope: !6056, file: !3, line: 946, type: !287)
!6059 = !DILocation(line: 946, column: 2, scope: !6045)
!6060 = !DILocation(line: 946, column: 2, scope: !6044)
!6061 = !DILocation(line: 946, column: 2, scope: !6062)
!6062 = distinct !DILexicalBlock(scope: !6044, file: !3, line: 946, column: 2)
!6063 = !DILocalVariable(name: "__dummy", scope: !6064, file: !3, line: 946, type: !287)
!6064 = distinct !DILexicalBlock(scope: !6065, file: !3, line: 946, column: 2)
!6065 = distinct !DILexicalBlock(scope: !6062, file: !3, line: 946, column: 2)
!6066 = !DILocation(line: 946, column: 2, scope: !6064)
!6067 = !DILocalVariable(name: "__dummy2", scope: !6064, file: !3, line: 946, type: !287)
!6068 = !DILocation(line: 946, column: 2, scope: !6065)
!6069 = !DILocation(line: 946, column: 2, scope: !6043)
!6070 = !{i32 -2140245132}
!6071 = !DILocation(line: 946, column: 2, scope: !6042)
!6072 = !DILocation(line: 329, column: 10, scope: !5861, inlinedAt: !6041)
!6073 = !DILocation(line: 329, column: 16, scope: !5861, inlinedAt: !6041)
!6074 = !DILocation(line: 947, column: 43, scope: !6075)
!6075 = distinct !DILexicalBlock(scope: !6036, file: !3, line: 947, column: 6)
!6076 = !DILocation(line: 947, column: 47, scope: !6075)
!6077 = !DILocation(line: 947, column: 7, scope: !6075)
!6078 = !DILocation(line: 947, column: 6, scope: !6036)
!6079 = !DILocation(line: 948, column: 3, scope: !6080)
!6080 = distinct !DILexicalBlock(scope: !6081, file: !3, line: 948, column: 3)
!6081 = distinct !DILexicalBlock(scope: !6082, file: !3, line: 948, column: 3)
!6082 = distinct !DILexicalBlock(scope: !6075, file: !3, line: 947, column: 55)
!6083 = !DILocation(line: 948, column: 3, scope: !6081)
!6084 = !DILocation(line: 950, column: 8, scope: !6085)
!6085 = distinct !DILexicalBlock(scope: !6082, file: !3, line: 950, column: 7)
!6086 = !DILocation(line: 950, column: 7, scope: !6082)
!6087 = !DILocation(line: 951, column: 27, scope: !6088)
!6088 = distinct !DILexicalBlock(scope: !6085, file: !3, line: 950, column: 18)
!6089 = !DILocation(line: 951, column: 4, scope: !6088)
!6090 = !DILocation(line: 952, column: 4, scope: !6091)
!6091 = distinct !DILexicalBlock(scope: !6092, file: !3, line: 952, column: 4)
!6092 = distinct !DILexicalBlock(scope: !6088, file: !3, line: 952, column: 4)
!6093 = !DILocation(line: 952, column: 4, scope: !6092)
!6094 = !DILocation(line: 953, column: 3, scope: !6088)
!6095 = !DILocation(line: 954, column: 3, scope: !6082)
!6096 = !DILocation(line: 955, column: 2, scope: !6082)
!6097 = !DILocation(line: 956, column: 26, scope: !6036)
!6098 = !DILocation(line: 956, column: 30, scope: !6036)
!6099 = !DILocation(line: 956, column: 36, scope: !6036)
!6100 = !DILocation(line: 409, column: 2, scope: !5934, inlinedAt: !6038)
!6101 = !DILocation(line: 409, column: 2, scope: !5939, inlinedAt: !6038)
!6102 = !DILocation(line: 409, column: 2, scope: !5940, inlinedAt: !6038)
!6103 = !DILocation(line: 409, column: 2, scope: !5947, inlinedAt: !6038)
!6104 = !DILocation(line: 409, column: 2, scope: !5950, inlinedAt: !6038)
!6105 = !DILocation(line: 957, column: 1, scope: !6036)
!6106 = distinct !DISubprogram(name: "acpi_ec_add_query_handler", scope: !3, file: !3, line: 1072, type: !6107, scopeLine: 1075, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !372)
!6107 = !DISubroutineType(types: !6108)
!6108 = !{!294, !330, !266, !281, !309, !247}
!6109 = !DILocalVariable(name: "ec", arg: 1, scope: !6106, file: !3, line: 1072, type: !330)
!6110 = !DILocation(line: 1072, column: 47, scope: !6106)
!6111 = !DILocalVariable(name: "query_bit", arg: 2, scope: !6106, file: !3, line: 1072, type: !266)
!6112 = !DILocation(line: 1072, column: 54, scope: !6106)
!6113 = !DILocalVariable(name: "handle", arg: 3, scope: !6106, file: !3, line: 1073, type: !281)
!6114 = !DILocation(line: 1073, column: 22, scope: !6106)
!6115 = !DILocalVariable(name: "func", arg: 4, scope: !6106, file: !3, line: 1073, type: !309)
!6116 = !DILocation(line: 1073, column: 49, scope: !6106)
!6117 = !DILocalVariable(name: "data", arg: 5, scope: !6106, file: !3, line: 1074, type: !247)
!6118 = !DILocation(line: 1074, column: 16, scope: !6106)
!6119 = !DILocalVariable(name: "handler", scope: !6106, file: !3, line: 1076, type: !304)
!6120 = !DILocation(line: 1076, column: 32, scope: !6106)
!6121 = !DILocation(line: 1077, column: 6, scope: !6106)
!6122 = !DILocation(line: 1079, column: 7, scope: !6123)
!6123 = distinct !DILexicalBlock(scope: !6106, file: !3, line: 1079, column: 6)
!6124 = !DILocation(line: 1079, column: 6, scope: !6106)
!6125 = !DILocation(line: 1080, column: 3, scope: !6123)
!6126 = !DILocation(line: 1082, column: 23, scope: !6106)
!6127 = !DILocation(line: 1082, column: 2, scope: !6106)
!6128 = !DILocation(line: 1082, column: 11, scope: !6106)
!6129 = !DILocation(line: 1082, column: 21, scope: !6106)
!6130 = !DILocation(line: 1083, column: 20, scope: !6106)
!6131 = !DILocation(line: 1083, column: 2, scope: !6106)
!6132 = !DILocation(line: 1083, column: 11, scope: !6106)
!6133 = !DILocation(line: 1083, column: 18, scope: !6106)
!6134 = !DILocation(line: 1084, column: 18, scope: !6106)
!6135 = !DILocation(line: 1084, column: 2, scope: !6106)
!6136 = !DILocation(line: 1084, column: 11, scope: !6106)
!6137 = !DILocation(line: 1084, column: 16, scope: !6106)
!6138 = !DILocation(line: 1085, column: 18, scope: !6106)
!6139 = !DILocation(line: 1085, column: 2, scope: !6106)
!6140 = !DILocation(line: 1085, column: 11, scope: !6106)
!6141 = !DILocation(line: 1085, column: 16, scope: !6106)
!6142 = !DILocation(line: 1086, column: 14, scope: !6106)
!6143 = !DILocation(line: 1086, column: 18, scope: !6106)
!6144 = !DILocation(line: 1086, column: 2, scope: !6106)
!6145 = !DILocation(line: 1087, column: 13, scope: !6106)
!6146 = !DILocation(line: 1087, column: 22, scope: !6106)
!6147 = !DILocation(line: 1087, column: 2, scope: !6106)
!6148 = !DILocation(line: 1088, column: 12, scope: !6106)
!6149 = !DILocation(line: 1088, column: 21, scope: !6106)
!6150 = !DILocation(line: 1088, column: 28, scope: !6106)
!6151 = !DILocation(line: 1088, column: 32, scope: !6106)
!6152 = !DILocation(line: 1088, column: 2, scope: !6106)
!6153 = !DILocation(line: 1089, column: 16, scope: !6106)
!6154 = !DILocation(line: 1089, column: 20, scope: !6106)
!6155 = !DILocation(line: 1089, column: 2, scope: !6106)
!6156 = !DILocation(line: 1090, column: 2, scope: !6106)
!6157 = !DILocation(line: 1091, column: 1, scope: !6106)
!6158 = distinct !DISubprogram(name: "kzalloc", scope: !63, file: !63, line: 662, type: !6159, scopeLine: 663, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !372)
!6159 = !DISubroutineType(types: !6160)
!6160 = !{!247, !550, !248}
!6161 = !DILocalVariable(name: "s", arg: 1, scope: !6162, file: !63, line: 445, type: !1396)
!6162 = distinct !DISubprogram(name: "kmem_cache_alloc_trace", scope: !63, file: !63, line: 445, type: !6163, scopeLine: 447, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !372)
!6163 = !DISubroutineType(types: !6164)
!6164 = !{!247, !1396, !248, !550}
!6165 = !DILocation(line: 445, column: 72, scope: !6162, inlinedAt: !6166)
!6166 = distinct !DILocation(line: 552, column: 10, scope: !6167, inlinedAt: !6170)
!6167 = distinct !DILexicalBlock(scope: !6168, file: !63, line: 540, column: 34)
!6168 = distinct !DILexicalBlock(scope: !6169, file: !63, line: 540, column: 6)
!6169 = distinct !DISubprogram(name: "kmalloc", scope: !63, file: !63, line: 538, type: !6159, scopeLine: 539, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !372)
!6170 = distinct !DILocation(line: 664, column: 9, scope: !6158)
!6171 = !DILocalVariable(name: "flags", arg: 2, scope: !6162, file: !63, line: 446, type: !248)
!6172 = !DILocation(line: 446, column: 9, scope: !6162, inlinedAt: !6166)
!6173 = !DILocalVariable(name: "size", arg: 3, scope: !6162, file: !63, line: 446, type: !550)
!6174 = !DILocation(line: 446, column: 23, scope: !6162, inlinedAt: !6166)
!6175 = !DILocalVariable(name: "ret", scope: !6162, file: !63, line: 448, type: !247)
!6176 = !DILocation(line: 448, column: 8, scope: !6162, inlinedAt: !6166)
!6177 = !DILocalVariable(name: "flags", arg: 1, scope: !6178, file: !63, line: 318, type: !248)
!6178 = distinct !DISubprogram(name: "kmalloc_type", scope: !63, file: !63, line: 318, type: !6179, scopeLine: 319, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !372)
!6179 = !DISubroutineType(types: !6180)
!6180 = !{!62, !248}
!6181 = !DILocation(line: 318, column: 67, scope: !6178, inlinedAt: !6182)
!6182 = distinct !DILocation(line: 553, column: 20, scope: !6167, inlinedAt: !6170)
!6183 = !DILocalVariable(name: "size", arg: 1, scope: !6184, file: !63, line: 346, type: !550)
!6184 = distinct !DISubprogram(name: "kmalloc_index", scope: !63, file: !63, line: 346, type: !6185, scopeLine: 347, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !372)
!6185 = !DISubroutineType(types: !6186)
!6186 = !{!7, !550}
!6187 = !DILocation(line: 346, column: 58, scope: !6184, inlinedAt: !6188)
!6188 = distinct !DILocation(line: 547, column: 11, scope: !6167, inlinedAt: !6170)
!6189 = !DILocalVariable(name: "size", arg: 1, scope: !6190, file: !63, line: 472, type: !550)
!6190 = distinct !DISubprogram(name: "kmalloc_order_trace", scope: !63, file: !63, line: 472, type: !6191, scopeLine: 473, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !372)
!6191 = !DISubroutineType(types: !6192)
!6192 = !{!247, !550, !248, !7}
!6193 = !DILocation(line: 472, column: 28, scope: !6190, inlinedAt: !6194)
!6194 = distinct !DILocation(line: 481, column: 9, scope: !6195, inlinedAt: !6196)
!6195 = distinct !DISubprogram(name: "kmalloc_large", scope: !63, file: !63, line: 478, type: !6159, scopeLine: 479, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !372)
!6196 = distinct !DILocation(line: 545, column: 11, scope: !6197, inlinedAt: !6170)
!6197 = distinct !DILexicalBlock(scope: !6167, file: !63, line: 544, column: 7)
!6198 = !DILocalVariable(name: "flags", arg: 2, scope: !6190, file: !63, line: 472, type: !248)
!6199 = !DILocation(line: 472, column: 40, scope: !6190, inlinedAt: !6194)
!6200 = !DILocalVariable(name: "order", arg: 3, scope: !6190, file: !63, line: 472, type: !7)
!6201 = !DILocation(line: 472, column: 60, scope: !6190, inlinedAt: !6194)
!6202 = !DILocalVariable(name: "size", arg: 1, scope: !6195, file: !63, line: 478, type: !550)
!6203 = !DILocation(line: 478, column: 51, scope: !6195, inlinedAt: !6196)
!6204 = !DILocalVariable(name: "flags", arg: 2, scope: !6195, file: !63, line: 478, type: !248)
!6205 = !DILocation(line: 478, column: 63, scope: !6195, inlinedAt: !6196)
!6206 = !DILocalVariable(name: "order", scope: !6195, file: !63, line: 480, type: !7)
!6207 = !DILocation(line: 480, column: 15, scope: !6195, inlinedAt: !6196)
!6208 = !DILocalVariable(name: "size", arg: 1, scope: !6169, file: !63, line: 538, type: !550)
!6209 = !DILocation(line: 538, column: 45, scope: !6169, inlinedAt: !6170)
!6210 = !DILocalVariable(name: "flags", arg: 2, scope: !6169, file: !63, line: 538, type: !248)
!6211 = !DILocation(line: 538, column: 57, scope: !6169, inlinedAt: !6170)
!6212 = !DILocalVariable(name: "index", scope: !6167, file: !63, line: 542, type: !7)
!6213 = !DILocation(line: 542, column: 16, scope: !6167, inlinedAt: !6170)
!6214 = !DILocalVariable(name: "size", arg: 1, scope: !6158, file: !63, line: 662, type: !550)
!6215 = !DILocation(line: 662, column: 36, scope: !6158)
!6216 = !DILocalVariable(name: "flags", arg: 2, scope: !6158, file: !63, line: 662, type: !248)
!6217 = !DILocation(line: 662, column: 48, scope: !6158)
!6218 = !DILocation(line: 664, column: 17, scope: !6158)
!6219 = !DILocation(line: 664, column: 23, scope: !6158)
!6220 = !DILocation(line: 664, column: 29, scope: !6158)
!6221 = !DILocation(line: 540, column: 27, scope: !6168, inlinedAt: !6170)
!6222 = !DILocation(line: 540, column: 6, scope: !6168, inlinedAt: !6170)
!6223 = !DILocation(line: 540, column: 6, scope: !6169, inlinedAt: !6170)
!6224 = !DILocation(line: 544, column: 7, scope: !6197, inlinedAt: !6170)
!6225 = !DILocation(line: 544, column: 12, scope: !6197, inlinedAt: !6170)
!6226 = !DILocation(line: 544, column: 7, scope: !6167, inlinedAt: !6170)
!6227 = !DILocation(line: 545, column: 25, scope: !6197, inlinedAt: !6170)
!6228 = !DILocation(line: 545, column: 31, scope: !6197, inlinedAt: !6170)
!6229 = !DILocation(line: 480, column: 33, scope: !6195, inlinedAt: !6196)
!6230 = !DILocation(line: 480, column: 23, scope: !6195, inlinedAt: !6196)
!6231 = !DILocation(line: 481, column: 29, scope: !6195, inlinedAt: !6196)
!6232 = !DILocation(line: 481, column: 35, scope: !6195, inlinedAt: !6196)
!6233 = !DILocation(line: 481, column: 42, scope: !6195, inlinedAt: !6196)
!6234 = !DILocation(line: 474, column: 23, scope: !6190, inlinedAt: !6194)
!6235 = !DILocation(line: 474, column: 29, scope: !6190, inlinedAt: !6194)
!6236 = !DILocation(line: 474, column: 36, scope: !6190, inlinedAt: !6194)
!6237 = !DILocation(line: 474, column: 9, scope: !6190, inlinedAt: !6194)
!6238 = !DILocation(line: 545, column: 4, scope: !6197, inlinedAt: !6170)
!6239 = !DILocation(line: 547, column: 25, scope: !6167, inlinedAt: !6170)
!6240 = !DILocation(line: 348, column: 7, scope: !6241, inlinedAt: !6188)
!6241 = distinct !DILexicalBlock(scope: !6184, file: !63, line: 348, column: 6)
!6242 = !DILocation(line: 348, column: 6, scope: !6184, inlinedAt: !6188)
!6243 = !DILocation(line: 349, column: 3, scope: !6241, inlinedAt: !6188)
!6244 = !DILocation(line: 351, column: 6, scope: !6245, inlinedAt: !6188)
!6245 = distinct !DILexicalBlock(scope: !6184, file: !63, line: 351, column: 6)
!6246 = !DILocation(line: 351, column: 11, scope: !6245, inlinedAt: !6188)
!6247 = !DILocation(line: 351, column: 6, scope: !6184, inlinedAt: !6188)
!6248 = !DILocation(line: 352, column: 3, scope: !6245, inlinedAt: !6188)
!6249 = !DILocation(line: 354, column: 32, scope: !6250, inlinedAt: !6188)
!6250 = distinct !DILexicalBlock(scope: !6184, file: !63, line: 354, column: 6)
!6251 = !DILocation(line: 354, column: 37, scope: !6250, inlinedAt: !6188)
!6252 = !DILocation(line: 354, column: 42, scope: !6250, inlinedAt: !6188)
!6253 = !DILocation(line: 354, column: 45, scope: !6250, inlinedAt: !6188)
!6254 = !DILocation(line: 354, column: 50, scope: !6250, inlinedAt: !6188)
!6255 = !DILocation(line: 354, column: 6, scope: !6184, inlinedAt: !6188)
!6256 = !DILocation(line: 355, column: 3, scope: !6250, inlinedAt: !6188)
!6257 = !DILocation(line: 356, column: 32, scope: !6258, inlinedAt: !6188)
!6258 = distinct !DILexicalBlock(scope: !6184, file: !63, line: 356, column: 6)
!6259 = !DILocation(line: 356, column: 37, scope: !6258, inlinedAt: !6188)
!6260 = !DILocation(line: 356, column: 43, scope: !6258, inlinedAt: !6188)
!6261 = !DILocation(line: 356, column: 46, scope: !6258, inlinedAt: !6188)
!6262 = !DILocation(line: 356, column: 51, scope: !6258, inlinedAt: !6188)
!6263 = !DILocation(line: 356, column: 6, scope: !6184, inlinedAt: !6188)
!6264 = !DILocation(line: 357, column: 3, scope: !6258, inlinedAt: !6188)
!6265 = !DILocation(line: 358, column: 6, scope: !6266, inlinedAt: !6188)
!6266 = distinct !DILexicalBlock(scope: !6184, file: !63, line: 358, column: 6)
!6267 = !DILocation(line: 358, column: 11, scope: !6266, inlinedAt: !6188)
!6268 = !DILocation(line: 358, column: 6, scope: !6184, inlinedAt: !6188)
!6269 = !DILocation(line: 358, column: 26, scope: !6266, inlinedAt: !6188)
!6270 = !DILocation(line: 359, column: 6, scope: !6271, inlinedAt: !6188)
!6271 = distinct !DILexicalBlock(scope: !6184, file: !63, line: 359, column: 6)
!6272 = !DILocation(line: 359, column: 11, scope: !6271, inlinedAt: !6188)
!6273 = !DILocation(line: 359, column: 6, scope: !6184, inlinedAt: !6188)
!6274 = !DILocation(line: 359, column: 26, scope: !6271, inlinedAt: !6188)
!6275 = !DILocation(line: 360, column: 6, scope: !6276, inlinedAt: !6188)
!6276 = distinct !DILexicalBlock(scope: !6184, file: !63, line: 360, column: 6)
!6277 = !DILocation(line: 360, column: 11, scope: !6276, inlinedAt: !6188)
!6278 = !DILocation(line: 360, column: 6, scope: !6184, inlinedAt: !6188)
!6279 = !DILocation(line: 360, column: 26, scope: !6276, inlinedAt: !6188)
!6280 = !DILocation(line: 361, column: 6, scope: !6281, inlinedAt: !6188)
!6281 = distinct !DILexicalBlock(scope: !6184, file: !63, line: 361, column: 6)
!6282 = !DILocation(line: 361, column: 11, scope: !6281, inlinedAt: !6188)
!6283 = !DILocation(line: 361, column: 6, scope: !6184, inlinedAt: !6188)
!6284 = !DILocation(line: 361, column: 26, scope: !6281, inlinedAt: !6188)
!6285 = !DILocation(line: 362, column: 6, scope: !6286, inlinedAt: !6188)
!6286 = distinct !DILexicalBlock(scope: !6184, file: !63, line: 362, column: 6)
!6287 = !DILocation(line: 362, column: 11, scope: !6286, inlinedAt: !6188)
!6288 = !DILocation(line: 362, column: 6, scope: !6184, inlinedAt: !6188)
!6289 = !DILocation(line: 362, column: 26, scope: !6286, inlinedAt: !6188)
!6290 = !DILocation(line: 363, column: 6, scope: !6291, inlinedAt: !6188)
!6291 = distinct !DILexicalBlock(scope: !6184, file: !63, line: 363, column: 6)
!6292 = !DILocation(line: 363, column: 11, scope: !6291, inlinedAt: !6188)
!6293 = !DILocation(line: 363, column: 6, scope: !6184, inlinedAt: !6188)
!6294 = !DILocation(line: 363, column: 26, scope: !6291, inlinedAt: !6188)
!6295 = !DILocation(line: 364, column: 6, scope: !6296, inlinedAt: !6188)
!6296 = distinct !DILexicalBlock(scope: !6184, file: !63, line: 364, column: 6)
!6297 = !DILocation(line: 364, column: 11, scope: !6296, inlinedAt: !6188)
!6298 = !DILocation(line: 364, column: 6, scope: !6184, inlinedAt: !6188)
!6299 = !DILocation(line: 364, column: 26, scope: !6296, inlinedAt: !6188)
!6300 = !DILocation(line: 365, column: 6, scope: !6301, inlinedAt: !6188)
!6301 = distinct !DILexicalBlock(scope: !6184, file: !63, line: 365, column: 6)
!6302 = !DILocation(line: 365, column: 11, scope: !6301, inlinedAt: !6188)
!6303 = !DILocation(line: 365, column: 6, scope: !6184, inlinedAt: !6188)
!6304 = !DILocation(line: 365, column: 26, scope: !6301, inlinedAt: !6188)
!6305 = !DILocation(line: 366, column: 6, scope: !6306, inlinedAt: !6188)
!6306 = distinct !DILexicalBlock(scope: !6184, file: !63, line: 366, column: 6)
!6307 = !DILocation(line: 366, column: 11, scope: !6306, inlinedAt: !6188)
!6308 = !DILocation(line: 366, column: 6, scope: !6184, inlinedAt: !6188)
!6309 = !DILocation(line: 366, column: 26, scope: !6306, inlinedAt: !6188)
!6310 = !DILocation(line: 367, column: 6, scope: !6311, inlinedAt: !6188)
!6311 = distinct !DILexicalBlock(scope: !6184, file: !63, line: 367, column: 6)
!6312 = !DILocation(line: 367, column: 11, scope: !6311, inlinedAt: !6188)
!6313 = !DILocation(line: 367, column: 6, scope: !6184, inlinedAt: !6188)
!6314 = !DILocation(line: 367, column: 26, scope: !6311, inlinedAt: !6188)
!6315 = !DILocation(line: 368, column: 6, scope: !6316, inlinedAt: !6188)
!6316 = distinct !DILexicalBlock(scope: !6184, file: !63, line: 368, column: 6)
!6317 = !DILocation(line: 368, column: 11, scope: !6316, inlinedAt: !6188)
!6318 = !DILocation(line: 368, column: 6, scope: !6184, inlinedAt: !6188)
!6319 = !DILocation(line: 368, column: 26, scope: !6316, inlinedAt: !6188)
!6320 = !DILocation(line: 369, column: 6, scope: !6321, inlinedAt: !6188)
!6321 = distinct !DILexicalBlock(scope: !6184, file: !63, line: 369, column: 6)
!6322 = !DILocation(line: 369, column: 11, scope: !6321, inlinedAt: !6188)
!6323 = !DILocation(line: 369, column: 6, scope: !6184, inlinedAt: !6188)
!6324 = !DILocation(line: 369, column: 26, scope: !6321, inlinedAt: !6188)
!6325 = !DILocation(line: 370, column: 6, scope: !6326, inlinedAt: !6188)
!6326 = distinct !DILexicalBlock(scope: !6184, file: !63, line: 370, column: 6)
!6327 = !DILocation(line: 370, column: 11, scope: !6326, inlinedAt: !6188)
!6328 = !DILocation(line: 370, column: 6, scope: !6184, inlinedAt: !6188)
!6329 = !DILocation(line: 370, column: 26, scope: !6326, inlinedAt: !6188)
!6330 = !DILocation(line: 371, column: 6, scope: !6331, inlinedAt: !6188)
!6331 = distinct !DILexicalBlock(scope: !6184, file: !63, line: 371, column: 6)
!6332 = !DILocation(line: 371, column: 11, scope: !6331, inlinedAt: !6188)
!6333 = !DILocation(line: 371, column: 6, scope: !6184, inlinedAt: !6188)
!6334 = !DILocation(line: 371, column: 26, scope: !6331, inlinedAt: !6188)
!6335 = !DILocation(line: 372, column: 6, scope: !6336, inlinedAt: !6188)
!6336 = distinct !DILexicalBlock(scope: !6184, file: !63, line: 372, column: 6)
!6337 = !DILocation(line: 372, column: 11, scope: !6336, inlinedAt: !6188)
!6338 = !DILocation(line: 372, column: 6, scope: !6184, inlinedAt: !6188)
!6339 = !DILocation(line: 372, column: 26, scope: !6336, inlinedAt: !6188)
!6340 = !DILocation(line: 373, column: 6, scope: !6341, inlinedAt: !6188)
!6341 = distinct !DILexicalBlock(scope: !6184, file: !63, line: 373, column: 6)
!6342 = !DILocation(line: 373, column: 11, scope: !6341, inlinedAt: !6188)
!6343 = !DILocation(line: 373, column: 6, scope: !6184, inlinedAt: !6188)
!6344 = !DILocation(line: 373, column: 26, scope: !6341, inlinedAt: !6188)
!6345 = !DILocation(line: 374, column: 6, scope: !6346, inlinedAt: !6188)
!6346 = distinct !DILexicalBlock(scope: !6184, file: !63, line: 374, column: 6)
!6347 = !DILocation(line: 374, column: 11, scope: !6346, inlinedAt: !6188)
!6348 = !DILocation(line: 374, column: 6, scope: !6184, inlinedAt: !6188)
!6349 = !DILocation(line: 374, column: 26, scope: !6346, inlinedAt: !6188)
!6350 = !DILocation(line: 375, column: 6, scope: !6351, inlinedAt: !6188)
!6351 = distinct !DILexicalBlock(scope: !6184, file: !63, line: 375, column: 6)
!6352 = !DILocation(line: 375, column: 11, scope: !6351, inlinedAt: !6188)
!6353 = !DILocation(line: 375, column: 6, scope: !6184, inlinedAt: !6188)
!6354 = !DILocation(line: 375, column: 27, scope: !6351, inlinedAt: !6188)
!6355 = !DILocation(line: 376, column: 6, scope: !6356, inlinedAt: !6188)
!6356 = distinct !DILexicalBlock(scope: !6184, file: !63, line: 376, column: 6)
!6357 = !DILocation(line: 376, column: 11, scope: !6356, inlinedAt: !6188)
!6358 = !DILocation(line: 376, column: 6, scope: !6184, inlinedAt: !6188)
!6359 = !DILocation(line: 376, column: 32, scope: !6356, inlinedAt: !6188)
!6360 = !DILocation(line: 377, column: 6, scope: !6361, inlinedAt: !6188)
!6361 = distinct !DILexicalBlock(scope: !6184, file: !63, line: 377, column: 6)
!6362 = !DILocation(line: 377, column: 11, scope: !6361, inlinedAt: !6188)
!6363 = !DILocation(line: 377, column: 6, scope: !6184, inlinedAt: !6188)
!6364 = !DILocation(line: 377, column: 32, scope: !6361, inlinedAt: !6188)
!6365 = !DILocation(line: 378, column: 6, scope: !6366, inlinedAt: !6188)
!6366 = distinct !DILexicalBlock(scope: !6184, file: !63, line: 378, column: 6)
!6367 = !DILocation(line: 378, column: 11, scope: !6366, inlinedAt: !6188)
!6368 = !DILocation(line: 378, column: 6, scope: !6184, inlinedAt: !6188)
!6369 = !DILocation(line: 378, column: 32, scope: !6366, inlinedAt: !6188)
!6370 = !DILocation(line: 379, column: 6, scope: !6371, inlinedAt: !6188)
!6371 = distinct !DILexicalBlock(scope: !6184, file: !63, line: 379, column: 6)
!6372 = !DILocation(line: 379, column: 11, scope: !6371, inlinedAt: !6188)
!6373 = !DILocation(line: 379, column: 6, scope: !6184, inlinedAt: !6188)
!6374 = !DILocation(line: 379, column: 33, scope: !6371, inlinedAt: !6188)
!6375 = !DILocation(line: 380, column: 6, scope: !6376, inlinedAt: !6188)
!6376 = distinct !DILexicalBlock(scope: !6184, file: !63, line: 380, column: 6)
!6377 = !DILocation(line: 380, column: 11, scope: !6376, inlinedAt: !6188)
!6378 = !DILocation(line: 380, column: 6, scope: !6184, inlinedAt: !6188)
!6379 = !DILocation(line: 380, column: 33, scope: !6376, inlinedAt: !6188)
!6380 = !DILocation(line: 381, column: 6, scope: !6381, inlinedAt: !6188)
!6381 = distinct !DILexicalBlock(scope: !6184, file: !63, line: 381, column: 6)
!6382 = !DILocation(line: 381, column: 11, scope: !6381, inlinedAt: !6188)
!6383 = !DILocation(line: 381, column: 6, scope: !6184, inlinedAt: !6188)
!6384 = !DILocation(line: 381, column: 33, scope: !6381, inlinedAt: !6188)
!6385 = !DILocation(line: 382, column: 2, scope: !6386, inlinedAt: !6188)
!6386 = distinct !DILexicalBlock(scope: !6387, file: !63, line: 382, column: 2)
!6387 = distinct !DILexicalBlock(scope: !6184, file: !63, line: 382, column: 2)
!6388 = !{i32 -2144073591, i32 -2144073562, i32 -2144073516, i32 -2144073458, i32 -2144073404, i32 -2144073350, i32 -2144073295, i32 -2144073264}
!6389 = !DILocation(line: 382, column: 2, scope: !6390, inlinedAt: !6188)
!6390 = distinct !DILexicalBlock(scope: !6391, file: !63, line: 382, column: 2)
!6391 = distinct !DILexicalBlock(scope: !6387, file: !63, line: 382, column: 2)
!6392 = !{i32 -2144072821, i32 -2144072814, i32 -2144072760, i32 -2144072729, i32 -2144072699}
!6393 = !DILocation(line: 382, column: 2, scope: !6391, inlinedAt: !6188)
!6394 = !DILocation(line: 386, column: 1, scope: !6184, inlinedAt: !6188)
!6395 = !DILocation(line: 547, column: 9, scope: !6167, inlinedAt: !6170)
!6396 = !DILocation(line: 549, column: 8, scope: !6397, inlinedAt: !6170)
!6397 = distinct !DILexicalBlock(scope: !6167, file: !63, line: 549, column: 7)
!6398 = !DILocation(line: 549, column: 7, scope: !6167, inlinedAt: !6170)
!6399 = !DILocation(line: 550, column: 4, scope: !6397, inlinedAt: !6170)
!6400 = !DILocation(line: 553, column: 33, scope: !6167, inlinedAt: !6170)
!6401 = !DILocation(line: 325, column: 6, scope: !6402, inlinedAt: !6182)
!6402 = distinct !DILexicalBlock(scope: !6178, file: !63, line: 325, column: 6)
!6403 = !DILocation(line: 325, column: 6, scope: !6178, inlinedAt: !6182)
!6404 = !DILocation(line: 326, column: 3, scope: !6402, inlinedAt: !6182)
!6405 = !DILocation(line: 332, column: 9, scope: !6178, inlinedAt: !6182)
!6406 = !DILocation(line: 332, column: 15, scope: !6178, inlinedAt: !6182)
!6407 = !DILocation(line: 332, column: 2, scope: !6178, inlinedAt: !6182)
!6408 = !DILocation(line: 336, column: 1, scope: !6178, inlinedAt: !6182)
!6409 = !DILocation(line: 553, column: 5, scope: !6167, inlinedAt: !6170)
!6410 = !DILocation(line: 553, column: 41, scope: !6167, inlinedAt: !6170)
!6411 = !DILocation(line: 554, column: 5, scope: !6167, inlinedAt: !6170)
!6412 = !DILocation(line: 554, column: 12, scope: !6167, inlinedAt: !6170)
!6413 = !DILocation(line: 448, column: 31, scope: !6162, inlinedAt: !6166)
!6414 = !DILocation(line: 448, column: 34, scope: !6162, inlinedAt: !6166)
!6415 = !DILocation(line: 448, column: 14, scope: !6162, inlinedAt: !6166)
!6416 = !DILocation(line: 450, column: 22, scope: !6162, inlinedAt: !6166)
!6417 = !DILocation(line: 450, column: 25, scope: !6162, inlinedAt: !6166)
!6418 = !DILocation(line: 450, column: 30, scope: !6162, inlinedAt: !6166)
!6419 = !DILocation(line: 450, column: 36, scope: !6162, inlinedAt: !6166)
!6420 = !DILocation(line: 450, column: 8, scope: !6162, inlinedAt: !6166)
!6421 = !DILocation(line: 450, column: 6, scope: !6162, inlinedAt: !6166)
!6422 = !DILocation(line: 451, column: 9, scope: !6162, inlinedAt: !6166)
!6423 = !DILocation(line: 552, column: 3, scope: !6167, inlinedAt: !6170)
!6424 = !DILocation(line: 557, column: 19, scope: !6169, inlinedAt: !6170)
!6425 = !DILocation(line: 557, column: 25, scope: !6169, inlinedAt: !6170)
!6426 = !DILocation(line: 557, column: 9, scope: !6169, inlinedAt: !6170)
!6427 = !DILocation(line: 557, column: 2, scope: !6169, inlinedAt: !6170)
!6428 = !DILocation(line: 558, column: 1, scope: !6169, inlinedAt: !6170)
!6429 = !DILocation(line: 664, column: 2, scope: !6158)
!6430 = distinct !DISubprogram(name: "kref_init", scope: !319, file: !319, line: 29, type: !6431, scopeLine: 30, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !372)
!6431 = !DISubroutineType(types: !6432)
!6432 = !{null, !6433}
!6433 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !318, size: 64)
!6434 = !DILocalVariable(name: "kref", arg: 1, scope: !6430, file: !319, line: 29, type: !6433)
!6435 = !DILocation(line: 29, column: 43, scope: !6430)
!6436 = !DILocation(line: 31, column: 16, scope: !6430)
!6437 = !DILocation(line: 31, column: 22, scope: !6430)
!6438 = !DILocation(line: 31, column: 2, scope: !6430)
!6439 = !DILocation(line: 32, column: 1, scope: !6430)
!6440 = distinct !DISubprogram(name: "list_add", scope: !6441, file: !6441, line: 84, type: !6442, scopeLine: 85, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !372)
!6441 = !DIFile(filename: "./include/linux/list.h", directory: "/home/lizy2001/genbc/linux")
!6442 = !DISubroutineType(types: !6443)
!6443 = !{null, !299, !299}
!6444 = !DILocalVariable(name: "new", arg: 1, scope: !6440, file: !6441, line: 84, type: !299)
!6445 = !DILocation(line: 84, column: 47, scope: !6440)
!6446 = !DILocalVariable(name: "head", arg: 2, scope: !6440, file: !6441, line: 84, type: !299)
!6447 = !DILocation(line: 84, column: 70, scope: !6440)
!6448 = !DILocation(line: 86, column: 13, scope: !6440)
!6449 = !DILocation(line: 86, column: 18, scope: !6440)
!6450 = !DILocation(line: 86, column: 24, scope: !6440)
!6451 = !DILocation(line: 86, column: 30, scope: !6440)
!6452 = !DILocation(line: 86, column: 2, scope: !6440)
!6453 = !DILocation(line: 87, column: 1, scope: !6440)
!6454 = distinct !DISubprogram(name: "acpi_ec_remove_query_handler", scope: !3, file: !3, line: 1112, type: !6455, scopeLine: 1113, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !372)
!6455 = !DISubroutineType(types: !6456)
!6456 = !{null, !330, !266}
!6457 = !DILocalVariable(name: "ec", arg: 1, scope: !6454, file: !3, line: 1112, type: !330)
!6458 = !DILocation(line: 1112, column: 51, scope: !6454)
!6459 = !DILocalVariable(name: "query_bit", arg: 2, scope: !6454, file: !3, line: 1112, type: !266)
!6460 = !DILocation(line: 1112, column: 58, scope: !6454)
!6461 = !DILocation(line: 1114, column: 32, scope: !6454)
!6462 = !DILocation(line: 1114, column: 43, scope: !6454)
!6463 = !DILocation(line: 1114, column: 2, scope: !6454)
!6464 = !DILocation(line: 1115, column: 1, scope: !6454)
!6465 = distinct !DISubprogram(name: "acpi_ec_remove_query_handlers", scope: !3, file: !3, line: 1094, type: !6466, scopeLine: 1096, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !372)
!6466 = !DISubroutineType(types: !6467)
!6467 = !{null, !330, !339, !266}
!6468 = !DILocalVariable(name: "ec", arg: 1, scope: !6465, file: !3, line: 1094, type: !330)
!6469 = !DILocation(line: 1094, column: 59, scope: !6465)
!6470 = !DILocalVariable(name: "remove_all", arg: 2, scope: !6465, file: !3, line: 1095, type: !339)
!6471 = !DILocation(line: 1095, column: 13, scope: !6465)
!6472 = !DILocalVariable(name: "query_bit", arg: 3, scope: !6465, file: !3, line: 1095, type: !266)
!6473 = !DILocation(line: 1095, column: 28, scope: !6465)
!6474 = !DILocalVariable(name: "handler", scope: !6465, file: !3, line: 1097, type: !304)
!6475 = !DILocation(line: 1097, column: 32, scope: !6465)
!6476 = !DILocalVariable(name: "tmp", scope: !6465, file: !3, line: 1097, type: !304)
!6477 = !DILocation(line: 1097, column: 42, scope: !6465)
!6478 = !DILocalVariable(name: "free_list", scope: !6465, file: !3, line: 1098, type: !300)
!6479 = !DILocation(line: 1098, column: 2, scope: !6465)
!6480 = !DILocation(line: 1100, column: 14, scope: !6465)
!6481 = !DILocation(line: 1100, column: 18, scope: !6465)
!6482 = !DILocation(line: 1100, column: 2, scope: !6465)
!6483 = !DILocalVariable(name: "__mptr", scope: !6484, file: !3, line: 1101, type: !247)
!6484 = distinct !DILexicalBlock(scope: !6485, file: !3, line: 1101, column: 2)
!6485 = distinct !DILexicalBlock(scope: !6465, file: !3, line: 1101, column: 2)
!6486 = !DILocation(line: 1101, column: 2, scope: !6484)
!6487 = !DILocation(line: 1101, column: 2, scope: !6488)
!6488 = distinct !DILexicalBlock(scope: !6484, file: !3, line: 1101, column: 2)
!6489 = !DILocation(line: 1101, column: 2, scope: !6485)
!6490 = !DILocalVariable(name: "__mptr", scope: !6491, file: !3, line: 1101, type: !247)
!6491 = distinct !DILexicalBlock(scope: !6485, file: !3, line: 1101, column: 2)
!6492 = !DILocation(line: 1101, column: 2, scope: !6491)
!6493 = !DILocation(line: 1101, column: 2, scope: !6494)
!6494 = distinct !DILexicalBlock(scope: !6491, file: !3, line: 1101, column: 2)
!6495 = !DILocation(line: 1101, column: 2, scope: !6496)
!6496 = distinct !DILexicalBlock(scope: !6485, file: !3, line: 1101, column: 2)
!6497 = !DILocation(line: 1102, column: 7, scope: !6498)
!6498 = distinct !DILexicalBlock(scope: !6499, file: !3, line: 1102, column: 7)
!6499 = distinct !DILexicalBlock(scope: !6496, file: !3, line: 1101, column: 58)
!6500 = !DILocation(line: 1102, column: 18, scope: !6498)
!6501 = !DILocation(line: 1102, column: 21, scope: !6498)
!6502 = !DILocation(line: 1102, column: 34, scope: !6498)
!6503 = !DILocation(line: 1102, column: 43, scope: !6498)
!6504 = !DILocation(line: 1102, column: 31, scope: !6498)
!6505 = !DILocation(line: 1102, column: 7, scope: !6499)
!6506 = !DILocation(line: 1103, column: 19, scope: !6507)
!6507 = distinct !DILexicalBlock(scope: !6498, file: !3, line: 1102, column: 54)
!6508 = !DILocation(line: 1103, column: 28, scope: !6507)
!6509 = !DILocation(line: 1103, column: 4, scope: !6507)
!6510 = !DILocation(line: 1104, column: 14, scope: !6507)
!6511 = !DILocation(line: 1104, column: 23, scope: !6507)
!6512 = !DILocation(line: 1104, column: 4, scope: !6507)
!6513 = !DILocation(line: 1105, column: 3, scope: !6507)
!6514 = !DILocation(line: 1106, column: 2, scope: !6499)
!6515 = !DILocalVariable(name: "__mptr", scope: !6516, file: !3, line: 1101, type: !247)
!6516 = distinct !DILexicalBlock(scope: !6496, file: !3, line: 1101, column: 2)
!6517 = !DILocation(line: 1101, column: 2, scope: !6516)
!6518 = !DILocation(line: 1101, column: 2, scope: !6519)
!6519 = distinct !DILexicalBlock(scope: !6516, file: !3, line: 1101, column: 2)
!6520 = distinct !{!6520, !6489, !6521}
!6521 = !DILocation(line: 1106, column: 2, scope: !6485)
!6522 = !DILocation(line: 1107, column: 16, scope: !6465)
!6523 = !DILocation(line: 1107, column: 20, scope: !6465)
!6524 = !DILocation(line: 1107, column: 2, scope: !6465)
!6525 = !DILocalVariable(name: "__mptr", scope: !6526, file: !3, line: 1108, type: !247)
!6526 = distinct !DILexicalBlock(scope: !6527, file: !3, line: 1108, column: 2)
!6527 = distinct !DILexicalBlock(scope: !6465, file: !3, line: 1108, column: 2)
!6528 = !DILocation(line: 1108, column: 2, scope: !6526)
!6529 = !DILocation(line: 1108, column: 2, scope: !6530)
!6530 = distinct !DILexicalBlock(scope: !6526, file: !3, line: 1108, column: 2)
!6531 = !DILocation(line: 1108, column: 2, scope: !6527)
!6532 = !DILocalVariable(name: "__mptr", scope: !6533, file: !3, line: 1108, type: !247)
!6533 = distinct !DILexicalBlock(scope: !6527, file: !3, line: 1108, column: 2)
!6534 = !DILocation(line: 1108, column: 2, scope: !6533)
!6535 = !DILocation(line: 1108, column: 2, scope: !6536)
!6536 = distinct !DILexicalBlock(scope: !6533, file: !3, line: 1108, column: 2)
!6537 = !DILocation(line: 1108, column: 2, scope: !6538)
!6538 = distinct !DILexicalBlock(scope: !6527, file: !3, line: 1108, column: 2)
!6539 = !DILocation(line: 1109, column: 29, scope: !6538)
!6540 = !DILocation(line: 1109, column: 3, scope: !6538)
!6541 = !DILocalVariable(name: "__mptr", scope: !6542, file: !3, line: 1108, type: !247)
!6542 = distinct !DILexicalBlock(scope: !6538, file: !3, line: 1108, column: 2)
!6543 = !DILocation(line: 1108, column: 2, scope: !6542)
!6544 = !DILocation(line: 1108, column: 2, scope: !6545)
!6545 = distinct !DILexicalBlock(scope: !6542, file: !3, line: 1108, column: 2)
!6546 = distinct !{!6546, !6531, !6547}
!6547 = !DILocation(line: 1109, column: 36, scope: !6527)
!6548 = !DILocation(line: 1110, column: 1, scope: !6465)
!6549 = distinct !DISubprogram(name: "acpi_ec_dsdt_probe", scope: !3, file: !3, line: 1707, type: !3200, scopeLine: 1708, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !372)
!6550 = !DILocalVariable(name: "ec", scope: !6549, file: !3, line: 1709, type: !330)
!6551 = !DILocation(line: 1709, column: 18, scope: !6549)
!6552 = !DILocalVariable(name: "status", scope: !6549, file: !3, line: 1710, type: !421)
!6553 = !DILocation(line: 1710, column: 14, scope: !6549)
!6554 = !DILocalVariable(name: "ret", scope: !6549, file: !3, line: 1711, type: !294)
!6555 = !DILocation(line: 1711, column: 6, scope: !6549)
!6556 = !DILocation(line: 1719, column: 6, scope: !6557)
!6557 = distinct !DILexicalBlock(scope: !6549, file: !3, line: 1719, column: 6)
!6558 = !DILocation(line: 1719, column: 6, scope: !6549)
!6559 = !DILocation(line: 1720, column: 3, scope: !6557)
!6560 = !DILocation(line: 1722, column: 7, scope: !6549)
!6561 = !DILocation(line: 1722, column: 5, scope: !6549)
!6562 = !DILocation(line: 1723, column: 7, scope: !6563)
!6563 = distinct !DILexicalBlock(scope: !6549, file: !3, line: 1723, column: 6)
!6564 = !DILocation(line: 1723, column: 6, scope: !6549)
!6565 = !DILocation(line: 1724, column: 3, scope: !6563)
!6566 = !DILocation(line: 1730, column: 66, scope: !6549)
!6567 = !DILocation(line: 1730, column: 11, scope: !6549)
!6568 = !DILocation(line: 1730, column: 9, scope: !6549)
!6569 = !DILocation(line: 1731, column: 6, scope: !6570)
!6570 = distinct !DILexicalBlock(scope: !6549, file: !3, line: 1731, column: 6)
!6571 = !DILocation(line: 1731, column: 27, scope: !6570)
!6572 = !DILocation(line: 1731, column: 31, scope: !6570)
!6573 = !DILocation(line: 1731, column: 35, scope: !6570)
!6574 = !DILocation(line: 1731, column: 6, scope: !6549)
!6575 = !DILocation(line: 1732, column: 16, scope: !6576)
!6576 = distinct !DILexicalBlock(scope: !6570, file: !3, line: 1731, column: 43)
!6577 = !DILocation(line: 1732, column: 3, scope: !6576)
!6578 = !DILocation(line: 1733, column: 3, scope: !6576)
!6579 = !DILocation(line: 1743, column: 22, scope: !6549)
!6580 = !DILocation(line: 1743, column: 8, scope: !6549)
!6581 = !DILocation(line: 1743, column: 6, scope: !6549)
!6582 = !DILocation(line: 1744, column: 6, scope: !6583)
!6583 = distinct !DILexicalBlock(scope: !6549, file: !3, line: 1744, column: 6)
!6584 = !DILocation(line: 1744, column: 6, scope: !6549)
!6585 = !DILocation(line: 1745, column: 16, scope: !6586)
!6586 = distinct !DILexicalBlock(scope: !6583, file: !3, line: 1744, column: 11)
!6587 = !DILocation(line: 1745, column: 3, scope: !6586)
!6588 = !DILocation(line: 1746, column: 3, scope: !6586)
!6589 = !DILocation(line: 1749, column: 12, scope: !6549)
!6590 = !DILocation(line: 1749, column: 10, scope: !6549)
!6591 = !DILocation(line: 1751, column: 2, scope: !6549)
!6592 = !DILocation(line: 1753, column: 1, scope: !6549)
!6593 = !DILocation(line: 327, column: 67, scope: !5861, inlinedAt: !6594)
!6594 = distinct !DILocation(line: 1346, column: 2, scope: !6595)
!6595 = distinct !DILexicalBlock(scope: !5559, file: !3, line: 1346, column: 2)
!6596 = !DILocalVariable(name: "ec", scope: !5559, file: !3, line: 1339, type: !330)
!6597 = !DILocation(line: 1339, column: 18, scope: !5559)
!6598 = !DILocation(line: 1339, column: 23, scope: !5559)
!6599 = !DILocation(line: 1341, column: 7, scope: !6600)
!6600 = distinct !DILexicalBlock(scope: !5559, file: !3, line: 1341, column: 6)
!6601 = !DILocation(line: 1341, column: 6, scope: !5559)
!6602 = !DILocation(line: 1342, column: 3, scope: !6600)
!6603 = !DILocation(line: 1343, column: 2, scope: !5559)
!6604 = !DILocation(line: 1343, column: 2, scope: !6605)
!6605 = distinct !DILexicalBlock(scope: !5559, file: !3, line: 1343, column: 2)
!6606 = !DILocation(line: 1344, column: 2, scope: !5559)
!6607 = !DILocation(line: 1344, column: 2, scope: !6608)
!6608 = distinct !DILexicalBlock(scope: !5559, file: !3, line: 1344, column: 2)
!6609 = !DILocation(line: 1345, column: 18, scope: !5559)
!6610 = !DILocation(line: 1345, column: 22, scope: !5559)
!6611 = !DILocation(line: 1345, column: 2, scope: !5559)
!6612 = !DILocation(line: 1346, column: 2, scope: !5559)
!6613 = !DILocation(line: 1346, column: 2, scope: !6595)
!6614 = !DILocation(line: 329, column: 10, scope: !5861, inlinedAt: !6594)
!6615 = !DILocation(line: 329, column: 16, scope: !5861, inlinedAt: !6594)
!6616 = !DILocation(line: 1347, column: 2, scope: !5559)
!6617 = !DILocation(line: 1347, column: 2, scope: !6618)
!6618 = distinct !DILexicalBlock(scope: !5559, file: !3, line: 1347, column: 2)
!6619 = !DILocation(line: 1348, column: 18, scope: !5559)
!6620 = !DILocation(line: 1348, column: 2, scope: !5559)
!6621 = !DILocation(line: 1348, column: 6, scope: !5559)
!6622 = !DILocation(line: 1348, column: 16, scope: !5559)
!6623 = !DILocation(line: 1349, column: 2, scope: !5559)
!6624 = !DILocation(line: 1349, column: 6, scope: !5559)
!6625 = !DILocation(line: 1349, column: 19, scope: !5559)
!6626 = !DILocation(line: 1350, column: 2, scope: !5559)
!6627 = !DILocation(line: 1350, column: 6, scope: !5559)
!6628 = !DILocation(line: 1350, column: 20, scope: !5559)
!6629 = !DILocation(line: 1351, column: 2, scope: !5559)
!6630 = !DILocation(line: 1351, column: 6, scope: !5559)
!6631 = !DILocation(line: 1351, column: 10, scope: !5559)
!6632 = !DILocation(line: 1352, column: 2, scope: !5559)
!6633 = !DILocation(line: 1352, column: 6, scope: !5559)
!6634 = !DILocation(line: 1352, column: 10, scope: !5559)
!6635 = !DILocation(line: 1353, column: 9, scope: !5559)
!6636 = !DILocation(line: 1353, column: 2, scope: !5559)
!6637 = !DILocation(line: 1354, column: 1, scope: !5559)
!6638 = distinct !DISubprogram(name: "ec_parse_device", scope: !3, file: !3, line: 1374, type: !6639, scopeLine: 1375, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !372)
!6639 = !DISubroutineType(types: !6640)
!6640 = !{!421, !281, !261, !247, !1086}
!6641 = !DILocalVariable(name: "handle", arg: 1, scope: !6638, file: !3, line: 1374, type: !281)
!6642 = !DILocation(line: 1374, column: 29, scope: !6638)
!6643 = !DILocalVariable(name: "Level", arg: 2, scope: !6638, file: !3, line: 1374, type: !261)
!6644 = !DILocation(line: 1374, column: 41, scope: !6638)
!6645 = !DILocalVariable(name: "context", arg: 3, scope: !6638, file: !3, line: 1374, type: !247)
!6646 = !DILocation(line: 1374, column: 54, scope: !6638)
!6647 = !DILocalVariable(name: "retval", arg: 4, scope: !6638, file: !3, line: 1374, type: !1086)
!6648 = !DILocation(line: 1374, column: 70, scope: !6638)
!6649 = !DILocalVariable(name: "status", scope: !6638, file: !3, line: 1376, type: !421)
!6650 = !DILocation(line: 1376, column: 14, scope: !6638)
!6651 = !DILocalVariable(name: "tmp", scope: !6638, file: !3, line: 1377, type: !286)
!6652 = !DILocation(line: 1377, column: 21, scope: !6638)
!6653 = !DILocalVariable(name: "ec", scope: !6638, file: !3, line: 1378, type: !330)
!6654 = !DILocation(line: 1378, column: 18, scope: !6638)
!6655 = !DILocation(line: 1378, column: 23, scope: !6638)
!6656 = !DILocation(line: 1381, column: 21, scope: !6638)
!6657 = !DILocation(line: 1381, column: 25, scope: !6638)
!6658 = !DILocation(line: 1381, column: 35, scope: !6638)
!6659 = !DILocation(line: 1381, column: 2, scope: !6638)
!6660 = !DILocation(line: 1381, column: 6, scope: !6638)
!6661 = !DILocation(line: 1381, column: 19, scope: !6638)
!6662 = !DILocation(line: 1383, column: 31, scope: !6638)
!6663 = !DILocation(line: 1384, column: 29, scope: !6638)
!6664 = !DILocation(line: 1383, column: 11, scope: !6638)
!6665 = !DILocation(line: 1383, column: 9, scope: !6638)
!6666 = !DILocation(line: 1385, column: 6, scope: !6667)
!6667 = distinct !DILexicalBlock(scope: !6638, file: !3, line: 1385, column: 6)
!6668 = !DILocation(line: 1385, column: 6, scope: !6638)
!6669 = !DILocation(line: 1386, column: 10, scope: !6667)
!6670 = !DILocation(line: 1386, column: 3, scope: !6667)
!6671 = !DILocation(line: 1387, column: 6, scope: !6672)
!6672 = distinct !DILexicalBlock(scope: !6638, file: !3, line: 1387, column: 6)
!6673 = !DILocation(line: 1387, column: 10, scope: !6672)
!6674 = !DILocation(line: 1387, column: 20, scope: !6672)
!6675 = !DILocation(line: 1387, column: 25, scope: !6672)
!6676 = !DILocation(line: 1387, column: 28, scope: !6672)
!6677 = !DILocation(line: 1387, column: 32, scope: !6672)
!6678 = !DILocation(line: 1387, column: 45, scope: !6672)
!6679 = !DILocation(line: 1387, column: 6, scope: !6638)
!6680 = !DILocation(line: 1388, column: 3, scope: !6672)
!6681 = !DILocation(line: 1390, column: 6, scope: !6682)
!6682 = distinct !DILexicalBlock(scope: !6638, file: !3, line: 1390, column: 6)
!6683 = !DILocation(line: 1390, column: 14, scope: !6682)
!6684 = !DILocation(line: 1390, column: 17, scope: !6682)
!6685 = !DILocation(line: 1390, column: 33, scope: !6682)
!6686 = !DILocation(line: 1390, column: 36, scope: !6682)
!6687 = !DILocation(line: 1390, column: 6, scope: !6638)
!6688 = !DILocation(line: 1395, column: 13, scope: !6689)
!6689 = distinct !DILexicalBlock(scope: !6682, file: !3, line: 1390, column: 62)
!6690 = !DILocation(line: 1395, column: 22, scope: !6689)
!6691 = !DILocation(line: 1395, column: 3, scope: !6689)
!6692 = !DILocation(line: 1395, column: 7, scope: !6689)
!6693 = !DILocation(line: 1395, column: 11, scope: !6689)
!6694 = !DILocation(line: 1396, column: 2, scope: !6689)
!6695 = !DILocation(line: 1399, column: 34, scope: !6696)
!6696 = distinct !DILexicalBlock(scope: !6682, file: !3, line: 1396, column: 9)
!6697 = !DILocation(line: 1399, column: 12, scope: !6696)
!6698 = !DILocation(line: 1399, column: 10, scope: !6696)
!6699 = !DILocation(line: 1400, column: 7, scope: !6700)
!6700 = distinct !DILexicalBlock(scope: !6696, file: !3, line: 1400, column: 7)
!6701 = !DILocation(line: 1400, column: 7, scope: !6696)
!6702 = !DILocation(line: 1401, column: 14, scope: !6700)
!6703 = !DILocation(line: 1401, column: 4, scope: !6700)
!6704 = !DILocation(line: 1401, column: 8, scope: !6700)
!6705 = !DILocation(line: 1401, column: 12, scope: !6700)
!6706 = !DILocation(line: 1409, column: 6, scope: !6638)
!6707 = !DILocation(line: 1410, column: 24, scope: !6638)
!6708 = !DILocation(line: 1410, column: 2, scope: !6638)
!6709 = !DILocation(line: 1411, column: 20, scope: !6638)
!6710 = !DILocation(line: 1411, column: 2, scope: !6638)
!6711 = !DILocation(line: 1411, column: 6, scope: !6638)
!6712 = !DILocation(line: 1411, column: 18, scope: !6638)
!6713 = !DILocation(line: 1412, column: 15, scope: !6638)
!6714 = !DILocation(line: 1412, column: 2, scope: !6638)
!6715 = !DILocation(line: 1412, column: 6, scope: !6638)
!6716 = !DILocation(line: 1412, column: 13, scope: !6638)
!6717 = !DILocation(line: 1413, column: 2, scope: !6638)
!6718 = !DILocation(line: 1414, column: 1, scope: !6638)
!6719 = distinct !DISubprogram(name: "acpi_ec_free", scope: !3, file: !3, line: 1328, type: !6720, scopeLine: 1329, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !372)
!6720 = !DISubroutineType(types: !6721)
!6721 = !{null, !330}
!6722 = !DILocalVariable(name: "ec", arg: 1, scope: !6719, file: !3, line: 1328, type: !330)
!6723 = !DILocation(line: 1328, column: 42, scope: !6719)
!6724 = !DILocation(line: 1330, column: 6, scope: !6725)
!6725 = distinct !DILexicalBlock(scope: !6719, file: !3, line: 1330, column: 6)
!6726 = !DILocation(line: 1330, column: 18, scope: !6725)
!6727 = !DILocation(line: 1330, column: 15, scope: !6725)
!6728 = !DILocation(line: 1330, column: 6, scope: !6719)
!6729 = !DILocation(line: 1331, column: 12, scope: !6725)
!6730 = !DILocation(line: 1331, column: 3, scope: !6725)
!6731 = !DILocation(line: 1332, column: 6, scope: !6732)
!6732 = distinct !DILexicalBlock(scope: !6719, file: !3, line: 1332, column: 6)
!6733 = !DILocation(line: 1332, column: 17, scope: !6732)
!6734 = !DILocation(line: 1332, column: 14, scope: !6732)
!6735 = !DILocation(line: 1332, column: 6, scope: !6719)
!6736 = !DILocation(line: 1333, column: 11, scope: !6732)
!6737 = !DILocation(line: 1333, column: 3, scope: !6732)
!6738 = !DILocation(line: 1334, column: 8, scope: !6719)
!6739 = !DILocation(line: 1334, column: 2, scope: !6719)
!6740 = !DILocation(line: 1335, column: 1, scope: !6719)
!6741 = distinct !DISubprogram(name: "acpi_ec_setup", scope: !3, file: !3, line: 1558, type: !6742, scopeLine: 1559, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !372)
!6742 = !DISubroutineType(types: !6743)
!6743 = !{!294, !330, !423}
!6744 = !DILocalVariable(name: "ec", arg: 1, scope: !6741, file: !3, line: 1558, type: !330)
!6745 = !DILocation(line: 1558, column: 42, scope: !6741)
!6746 = !DILocalVariable(name: "device", arg: 2, scope: !6741, file: !3, line: 1558, type: !423)
!6747 = !DILocation(line: 1558, column: 66, scope: !6741)
!6748 = !DILocalVariable(name: "ret", scope: !6741, file: !3, line: 1560, type: !294)
!6749 = !DILocation(line: 1560, column: 6, scope: !6741)
!6750 = !DILocation(line: 1562, column: 28, scope: !6741)
!6751 = !DILocation(line: 1562, column: 32, scope: !6741)
!6752 = !DILocation(line: 1562, column: 8, scope: !6741)
!6753 = !DILocation(line: 1562, column: 6, scope: !6741)
!6754 = !DILocation(line: 1563, column: 6, scope: !6755)
!6755 = distinct !DILexicalBlock(scope: !6741, file: !3, line: 1563, column: 6)
!6756 = !DILocation(line: 1563, column: 6, scope: !6741)
!6757 = !DILocation(line: 1564, column: 10, scope: !6755)
!6758 = !DILocation(line: 1564, column: 3, scope: !6755)
!6759 = !DILocation(line: 1567, column: 7, scope: !6760)
!6760 = distinct !DILexicalBlock(scope: !6741, file: !3, line: 1567, column: 6)
!6761 = !DILocation(line: 1567, column: 6, scope: !6741)
!6762 = !DILocation(line: 1568, column: 14, scope: !6760)
!6763 = !DILocation(line: 1568, column: 12, scope: !6760)
!6764 = !DILocation(line: 1568, column: 3, scope: !6760)
!6765 = !DILocation(line: 1570, column: 2, scope: !6741)
!6766 = !DILocation(line: 1573, column: 50, scope: !6767)
!6767 = distinct !DILexicalBlock(scope: !6741, file: !3, line: 1573, column: 6)
!6768 = !DILocation(line: 1573, column: 54, scope: !6767)
!6769 = !DILocation(line: 1573, column: 6, scope: !6767)
!6770 = !DILocation(line: 1573, column: 6, scope: !6741)
!6771 = !DILocation(line: 1574, column: 7, scope: !6772)
!6772 = distinct !DILexicalBlock(scope: !6773, file: !3, line: 1574, column: 7)
!6773 = distinct !DILexicalBlock(scope: !6767, file: !3, line: 1573, column: 62)
!6774 = !DILocation(line: 1574, column: 11, scope: !6772)
!6775 = !DILocation(line: 1574, column: 15, scope: !6772)
!6776 = !DILocation(line: 1574, column: 7, scope: !6773)
!6777 = !DILocation(line: 1575, column: 4, scope: !6772)
!6778 = !DILocation(line: 1577, column: 4, scope: !6772)
!6779 = !DILocation(line: 1578, column: 2, scope: !6773)
!6780 = !DILocation(line: 1580, column: 9, scope: !6741)
!6781 = !DILocation(line: 1580, column: 2, scope: !6741)
!6782 = !DILocation(line: 1581, column: 1, scope: !6741)
!6783 = distinct !DISubprogram(name: "acpi_ec_ecdt_probe", scope: !3, file: !3, line: 1875, type: !3200, scopeLine: 1876, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !372)
!6784 = !DILocalVariable(name: "ecdt_ptr", scope: !6783, file: !3, line: 1877, type: !6785)
!6785 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6786, size: 64)
!6786 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "acpi_table_ecdt", file: !6787, line: 674, size: 528, elements: !6788)
!6787 = !DIFile(filename: "./include/acpi/actbl1.h", directory: "/home/lizy2001/genbc/linux")
!6788 = !{!6789, !6790, !6798, !6799, !6800, !6801}
!6789 = !DIDerivedType(tag: DW_TAG_member, name: "header", scope: !6786, file: !6787, line: 675, baseType: !252, size: 288)
!6790 = !DIDerivedType(tag: DW_TAG_member, name: "control", scope: !6786, file: !6787, line: 676, baseType: !6791, size: 96, offset: 288)
!6791 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "acpi_generic_address", file: !253, line: 90, size: 96, elements: !6792)
!6792 = !{!6793, !6794, !6795, !6796, !6797}
!6793 = !DIDerivedType(tag: DW_TAG_member, name: "space_id", scope: !6791, file: !253, line: 91, baseType: !266, size: 8)
!6794 = !DIDerivedType(tag: DW_TAG_member, name: "bit_width", scope: !6791, file: !253, line: 92, baseType: !266, size: 8, offset: 8)
!6795 = !DIDerivedType(tag: DW_TAG_member, name: "bit_offset", scope: !6791, file: !253, line: 93, baseType: !266, size: 8, offset: 16)
!6796 = !DIDerivedType(tag: DW_TAG_member, name: "access_width", scope: !6791, file: !253, line: 94, baseType: !266, size: 8, offset: 24)
!6797 = !DIDerivedType(tag: DW_TAG_member, name: "address", scope: !6791, file: !253, line: 95, baseType: !284, size: 64, offset: 32)
!6798 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !6786, file: !6787, line: 677, baseType: !6791, size: 96, offset: 384)
!6799 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !6786, file: !6787, line: 678, baseType: !261, size: 32, offset: 480)
!6800 = !DIDerivedType(tag: DW_TAG_member, name: "gpe", scope: !6786, file: !6787, line: 679, baseType: !266, size: 8, offset: 512)
!6801 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !6786, file: !6787, line: 680, baseType: !6802, size: 8, offset: 520)
!6802 = !DICompositeType(tag: DW_TAG_array_type, baseType: !266, size: 8, elements: !2533)
!6803 = !DILocation(line: 1877, column: 26, scope: !6783)
!6804 = !DILocalVariable(name: "ec", scope: !6783, file: !3, line: 1878, type: !330)
!6805 = !DILocation(line: 1878, column: 18, scope: !6783)
!6806 = !DILocalVariable(name: "status", scope: !6783, file: !3, line: 1879, type: !421)
!6807 = !DILocation(line: 1879, column: 14, scope: !6783)
!6808 = !DILocalVariable(name: "ret", scope: !6783, file: !3, line: 1880, type: !294)
!6809 = !DILocation(line: 1880, column: 6, scope: !6783)
!6810 = !DILocation(line: 1883, column: 2, scope: !6783)
!6811 = !DILocation(line: 1885, column: 5, scope: !6783)
!6812 = !DILocation(line: 1884, column: 11, scope: !6783)
!6813 = !DILocation(line: 1884, column: 9, scope: !6783)
!6814 = !DILocation(line: 1886, column: 6, scope: !6815)
!6815 = distinct !DILexicalBlock(scope: !6783, file: !3, line: 1886, column: 6)
!6816 = !DILocation(line: 1886, column: 6, scope: !6783)
!6817 = !DILocation(line: 1887, column: 3, scope: !6815)
!6818 = !DILocation(line: 1889, column: 7, scope: !6819)
!6819 = distinct !DILexicalBlock(scope: !6783, file: !3, line: 1889, column: 6)
!6820 = !DILocation(line: 1889, column: 17, scope: !6819)
!6821 = !DILocation(line: 1889, column: 25, scope: !6819)
!6822 = !DILocation(line: 1889, column: 33, scope: !6819)
!6823 = !DILocation(line: 1889, column: 37, scope: !6819)
!6824 = !DILocation(line: 1889, column: 47, scope: !6819)
!6825 = !DILocation(line: 1889, column: 52, scope: !6819)
!6826 = !DILocation(line: 1889, column: 6, scope: !6783)
!6827 = !DILocation(line: 1894, column: 3, scope: !6828)
!6828 = distinct !DILexicalBlock(scope: !6819, file: !3, line: 1889, column: 61)
!6829 = !DILocation(line: 1897, column: 7, scope: !6783)
!6830 = !DILocation(line: 1897, column: 5, scope: !6783)
!6831 = !DILocation(line: 1898, column: 7, scope: !6832)
!6832 = distinct !DILexicalBlock(scope: !6783, file: !3, line: 1898, column: 6)
!6833 = !DILocation(line: 1898, column: 6, scope: !6783)
!6834 = !DILocation(line: 1899, column: 3, scope: !6832)
!6835 = !DILocation(line: 1901, column: 6, scope: !6836)
!6836 = distinct !DILexicalBlock(scope: !6783, file: !3, line: 1901, column: 6)
!6837 = !DILocation(line: 1901, column: 6, scope: !6783)
!6838 = !DILocation(line: 1902, column: 22, scope: !6839)
!6839 = distinct !DILexicalBlock(scope: !6836, file: !3, line: 1901, column: 29)
!6840 = !DILocation(line: 1902, column: 32, scope: !6839)
!6841 = !DILocation(line: 1902, column: 37, scope: !6839)
!6842 = !DILocation(line: 1902, column: 3, scope: !6839)
!6843 = !DILocation(line: 1902, column: 7, scope: !6839)
!6844 = !DILocation(line: 1902, column: 20, scope: !6839)
!6845 = !DILocation(line: 1903, column: 19, scope: !6839)
!6846 = !DILocation(line: 1903, column: 29, scope: !6839)
!6847 = !DILocation(line: 1903, column: 37, scope: !6839)
!6848 = !DILocation(line: 1903, column: 3, scope: !6839)
!6849 = !DILocation(line: 1903, column: 7, scope: !6839)
!6850 = !DILocation(line: 1903, column: 17, scope: !6839)
!6851 = !DILocation(line: 1904, column: 2, scope: !6839)
!6852 = !DILocation(line: 1905, column: 22, scope: !6853)
!6853 = distinct !DILexicalBlock(scope: !6836, file: !3, line: 1904, column: 9)
!6854 = !DILocation(line: 1905, column: 32, scope: !6853)
!6855 = !DILocation(line: 1905, column: 40, scope: !6853)
!6856 = !DILocation(line: 1905, column: 3, scope: !6853)
!6857 = !DILocation(line: 1905, column: 7, scope: !6853)
!6858 = !DILocation(line: 1905, column: 20, scope: !6853)
!6859 = !DILocation(line: 1906, column: 19, scope: !6853)
!6860 = !DILocation(line: 1906, column: 29, scope: !6853)
!6861 = !DILocation(line: 1906, column: 34, scope: !6853)
!6862 = !DILocation(line: 1906, column: 3, scope: !6853)
!6863 = !DILocation(line: 1906, column: 7, scope: !6853)
!6864 = !DILocation(line: 1906, column: 17, scope: !6853)
!6865 = !DILocation(line: 1913, column: 7, scope: !6866)
!6866 = distinct !DILexicalBlock(scope: !6783, file: !3, line: 1913, column: 6)
!6867 = !DILocation(line: 1913, column: 6, scope: !6783)
!6868 = !DILocation(line: 1914, column: 13, scope: !6866)
!6869 = !DILocation(line: 1914, column: 23, scope: !6866)
!6870 = !DILocation(line: 1914, column: 3, scope: !6866)
!6871 = !DILocation(line: 1914, column: 7, scope: !6866)
!6872 = !DILocation(line: 1914, column: 11, scope: !6866)
!6873 = !DILocation(line: 1916, column: 2, scope: !6783)
!6874 = !DILocation(line: 1916, column: 6, scope: !6783)
!6875 = !DILocation(line: 1916, column: 13, scope: !6783)
!6876 = !DILocation(line: 1922, column: 22, scope: !6783)
!6877 = !DILocation(line: 1922, column: 8, scope: !6783)
!6878 = !DILocation(line: 1922, column: 6, scope: !6783)
!6879 = !DILocation(line: 1923, column: 6, scope: !6880)
!6880 = distinct !DILexicalBlock(scope: !6783, file: !3, line: 1923, column: 6)
!6881 = !DILocation(line: 1923, column: 6, scope: !6783)
!6882 = !DILocation(line: 1924, column: 16, scope: !6883)
!6883 = distinct !DILexicalBlock(scope: !6880, file: !3, line: 1923, column: 11)
!6884 = !DILocation(line: 1924, column: 3, scope: !6883)
!6885 = !DILocation(line: 1925, column: 3, scope: !6883)
!6886 = !DILocation(line: 1928, column: 12, scope: !6783)
!6887 = !DILocation(line: 1928, column: 10, scope: !6783)
!6888 = !DILocation(line: 1929, column: 18, scope: !6783)
!6889 = !DILocation(line: 1931, column: 2, scope: !6783)
!6890 = !DILabel(scope: !6783, name: "out", file: !3, line: 1933)
!6891 = !DILocation(line: 1933, column: 1, scope: !6783)
!6892 = !DILocation(line: 1934, column: 45, scope: !6783)
!6893 = !DILocation(line: 1934, column: 17, scope: !6783)
!6894 = !DILocation(line: 1934, column: 2, scope: !6783)
!6895 = !DILocation(line: 1935, column: 1, scope: !6783)
!6896 = distinct !DISubprogram(name: "acpi_ec_mark_gpe_for_wake", scope: !3, file: !3, line: 1987, type: !3200, scopeLine: 1988, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !372)
!6897 = !DILocation(line: 1989, column: 6, scope: !6898)
!6898 = distinct !DILexicalBlock(scope: !6896, file: !3, line: 1989, column: 6)
!6899 = !DILocation(line: 1989, column: 15, scope: !6898)
!6900 = !DILocation(line: 1989, column: 19, scope: !6898)
!6901 = !DILocation(line: 1989, column: 6, scope: !6896)
!6902 = !DILocation(line: 1990, column: 32, scope: !6898)
!6903 = !DILocation(line: 1990, column: 42, scope: !6898)
!6904 = !DILocation(line: 1990, column: 3, scope: !6898)
!6905 = !DILocation(line: 1991, column: 1, scope: !6896)
!6906 = distinct !DISubprogram(name: "acpi_ec_set_gpe_wake_mask", scope: !3, file: !3, line: 1994, type: !6907, scopeLine: 1995, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !372)
!6907 = !DISubroutineType(types: !6908)
!6908 = !{null, !266}
!6909 = !DILocalVariable(name: "action", arg: 1, scope: !6906, file: !3, line: 1994, type: !266)
!6910 = !DILocation(line: 1994, column: 35, scope: !6906)
!6911 = !DILocation(line: 1996, column: 6, scope: !6912)
!6912 = distinct !DILexicalBlock(scope: !6906, file: !3, line: 1996, column: 6)
!6913 = !DILocation(line: 1996, column: 31, scope: !6912)
!6914 = !DILocation(line: 1996, column: 34, scope: !6912)
!6915 = !DILocation(line: 1996, column: 43, scope: !6912)
!6916 = !DILocation(line: 1996, column: 47, scope: !6912)
!6917 = !DILocation(line: 1996, column: 6, scope: !6906)
!6918 = !DILocation(line: 1997, column: 32, scope: !6912)
!6919 = !DILocation(line: 1997, column: 42, scope: !6912)
!6920 = !DILocation(line: 1997, column: 47, scope: !6912)
!6921 = !DILocation(line: 1997, column: 3, scope: !6912)
!6922 = !DILocation(line: 1998, column: 1, scope: !6906)
!6923 = distinct !DISubprogram(name: "pm_suspend_no_platform", scope: !6924, file: !6924, line: 289, type: !4445, scopeLine: 290, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !372)
!6924 = !DIFile(filename: "./include/linux/suspend.h", directory: "/home/lizy2001/genbc/linux")
!6925 = !DILocation(line: 291, column: 12, scope: !6923)
!6926 = !DILocation(line: 291, column: 36, scope: !6923)
!6927 = !DILocation(line: 291, column: 10, scope: !6923)
!6928 = !DILocation(line: 291, column: 9, scope: !6923)
!6929 = !DILocation(line: 291, column: 2, scope: !6923)
!6930 = distinct !DISubprogram(name: "acpi_ec_dispatch_gpe", scope: !3, file: !3, line: 2000, type: !4445, scopeLine: 2001, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !372)
!6931 = !DILocalVariable(name: "ret", scope: !6930, file: !3, line: 2002, type: !261)
!6932 = !DILocation(line: 2002, column: 6, scope: !6930)
!6933 = !DILocation(line: 2004, column: 7, scope: !6934)
!6934 = distinct !DILexicalBlock(scope: !6930, file: !3, line: 2004, column: 6)
!6935 = !DILocation(line: 2004, column: 6, scope: !6930)
!6936 = !DILocation(line: 2005, column: 10, scope: !6934)
!6937 = !DILocation(line: 2005, column: 3, scope: !6934)
!6938 = !DILocation(line: 2011, column: 30, scope: !6939)
!6939 = distinct !DILexicalBlock(scope: !6930, file: !3, line: 2011, column: 6)
!6940 = !DILocation(line: 2011, column: 40, scope: !6939)
!6941 = !DILocation(line: 2011, column: 6, scope: !6939)
!6942 = !DILocation(line: 2011, column: 6, scope: !6930)
!6943 = !DILocation(line: 2012, column: 3, scope: !6939)
!6944 = !DILocation(line: 2018, column: 32, scope: !6930)
!6945 = !DILocation(line: 2018, column: 42, scope: !6930)
!6946 = !DILocation(line: 2018, column: 8, scope: !6930)
!6947 = !DILocation(line: 2018, column: 6, scope: !6930)
!6948 = !DILocation(line: 2019, column: 6, scope: !6949)
!6949 = distinct !DILexicalBlock(scope: !6930, file: !3, line: 2019, column: 6)
!6950 = !DILocation(line: 2019, column: 10, scope: !6949)
!6951 = !DILocation(line: 2019, column: 6, scope: !6930)
!6952 = !DILocation(line: 2020, column: 3, scope: !6953)
!6953 = distinct !DILexicalBlock(scope: !6954, file: !3, line: 2020, column: 3)
!6954 = distinct !DILexicalBlock(scope: !6949, file: !3, line: 2020, column: 3)
!6955 = !DILocation(line: 2020, column: 3, scope: !6954)
!6956 = !DILocation(line: 2020, column: 3, scope: !6949)
!6957 = !DILocation(line: 2023, column: 2, scope: !6930)
!6958 = !DILocation(line: 2025, column: 2, scope: !6930)
!6959 = !DILocation(line: 2026, column: 1, scope: !6930)
!6960 = distinct !DISubprogram(name: "acpi_ec_init", scope: !3, file: !3, line: 2136, type: !3200, scopeLine: 2137, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !372)
!6961 = !DILocalVariable(name: "result", scope: !6960, file: !3, line: 2138, type: !294)
!6962 = !DILocation(line: 2138, column: 6, scope: !6960)
!6963 = !DILocation(line: 2140, column: 11, scope: !6960)
!6964 = !DILocation(line: 2140, column: 9, scope: !6960)
!6965 = !DILocation(line: 2141, column: 6, scope: !6966)
!6966 = distinct !DILexicalBlock(scope: !6960, file: !3, line: 2141, column: 6)
!6967 = !DILocation(line: 2141, column: 6, scope: !6960)
!6968 = !DILocation(line: 2142, column: 3, scope: !6966)
!6969 = !DILocation(line: 2148, column: 6, scope: !6970)
!6970 = distinct !DILexicalBlock(scope: !6960, file: !3, line: 2148, column: 6)
!6971 = !DILocation(line: 2148, column: 6, scope: !6960)
!6972 = !DILocation(line: 2149, column: 16, scope: !6973)
!6973 = distinct !DILexicalBlock(scope: !6970, file: !3, line: 2148, column: 43)
!6974 = !DILocation(line: 2150, column: 3, scope: !6975)
!6975 = distinct !DILexicalBlock(scope: !6976, file: !3, line: 2150, column: 3)
!6976 = distinct !DILexicalBlock(scope: !6973, file: !3, line: 2150, column: 3)
!6977 = !DILocation(line: 2150, column: 3, scope: !6976)
!6978 = !DILocation(line: 2151, column: 2, scope: !6973)
!6979 = !DILocation(line: 2154, column: 2, scope: !6960)
!6980 = !DILocation(line: 2156, column: 2, scope: !6960)
!6981 = !DILocation(line: 2157, column: 1, scope: !6960)
!6982 = distinct !DISubprogram(name: "acpi_ec_init_workqueues", scope: !3, file: !3, line: 2096, type: !6983, scopeLine: 2097, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !372)
!6983 = !DISubroutineType(types: !6984)
!6984 = !{!294}
!6985 = !DILocation(line: 2098, column: 7, scope: !6986)
!6986 = distinct !DILexicalBlock(scope: !6982, file: !3, line: 2098, column: 6)
!6987 = !DILocation(line: 2098, column: 6, scope: !6982)
!6988 = !DILocation(line: 2099, column: 11, scope: !6986)
!6989 = !DILocation(line: 2099, column: 9, scope: !6986)
!6990 = !DILocation(line: 2099, column: 3, scope: !6986)
!6991 = !DILocation(line: 2101, column: 7, scope: !6992)
!6992 = distinct !DILexicalBlock(scope: !6982, file: !3, line: 2101, column: 6)
!6993 = !DILocation(line: 2101, column: 6, scope: !6982)
!6994 = !DILocation(line: 2102, column: 49, scope: !6992)
!6995 = !DILocation(line: 2102, column: 17, scope: !6992)
!6996 = !DILocation(line: 2102, column: 15, scope: !6992)
!6997 = !DILocation(line: 2102, column: 3, scope: !6992)
!6998 = !DILocation(line: 2104, column: 7, scope: !6999)
!6999 = distinct !DILexicalBlock(scope: !6982, file: !3, line: 2104, column: 6)
!7000 = !DILocation(line: 2104, column: 13, scope: !6999)
!7001 = !DILocation(line: 2104, column: 17, scope: !6999)
!7002 = !DILocation(line: 2104, column: 6, scope: !6982)
!7003 = !DILocation(line: 2105, column: 3, scope: !7004)
!7004 = distinct !DILexicalBlock(scope: !6999, file: !3, line: 2104, column: 30)
!7005 = !DILocation(line: 2106, column: 3, scope: !7004)
!7006 = !DILocation(line: 2108, column: 2, scope: !6982)
!7007 = !DILocation(line: 2109, column: 1, scope: !6982)
!7008 = distinct !DISubprogram(name: "acpi_ec_ecdt_start", scope: !3, file: !3, line: 1768, type: !3200, scopeLine: 1769, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !372)
!7009 = !DILocalVariable(name: "ecdt_ptr", scope: !7008, file: !3, line: 1770, type: !6785)
!7010 = !DILocation(line: 1770, column: 26, scope: !7008)
!7011 = !DILocalVariable(name: "handle", scope: !7008, file: !3, line: 1771, type: !281)
!7012 = !DILocation(line: 1771, column: 14, scope: !7008)
!7013 = !DILocalVariable(name: "status", scope: !7008, file: !3, line: 1772, type: !421)
!7014 = !DILocation(line: 1772, column: 14, scope: !7008)
!7015 = !DILocation(line: 1775, column: 7, scope: !7016)
!7016 = distinct !DILexicalBlock(scope: !7008, file: !3, line: 1775, column: 6)
!7017 = !DILocation(line: 1775, column: 15, scope: !7016)
!7018 = !DILocation(line: 1775, column: 18, scope: !7016)
!7019 = !DILocation(line: 1775, column: 27, scope: !7016)
!7020 = !DILocation(line: 1775, column: 34, scope: !7016)
!7021 = !DILocation(line: 1775, column: 6, scope: !7008)
!7022 = !DILocation(line: 1776, column: 3, scope: !7016)
!7023 = !DILocation(line: 1780, column: 5, scope: !7008)
!7024 = !DILocation(line: 1779, column: 11, scope: !7008)
!7025 = !DILocation(line: 1779, column: 9, scope: !7008)
!7026 = !DILocation(line: 1781, column: 6, scope: !7027)
!7027 = distinct !DILexicalBlock(scope: !7008, file: !3, line: 1781, column: 6)
!7028 = !DILocation(line: 1781, column: 6, scope: !7008)
!7029 = !DILocation(line: 1782, column: 3, scope: !7027)
!7030 = !DILocation(line: 1784, column: 33, scope: !7008)
!7031 = !DILocation(line: 1784, column: 43, scope: !7008)
!7032 = !DILocation(line: 1784, column: 11, scope: !7008)
!7033 = !DILocation(line: 1784, column: 9, scope: !7008)
!7034 = !DILocation(line: 1785, column: 6, scope: !7035)
!7035 = distinct !DILexicalBlock(scope: !7008, file: !3, line: 1785, column: 6)
!7036 = !DILocation(line: 1785, column: 6, scope: !7008)
!7037 = !DILocation(line: 1786, column: 21, scope: !7038)
!7038 = distinct !DILexicalBlock(scope: !7035, file: !3, line: 1785, column: 28)
!7039 = !DILocation(line: 1786, column: 3, scope: !7038)
!7040 = !DILocation(line: 1786, column: 12, scope: !7038)
!7041 = !DILocation(line: 1786, column: 19, scope: !7038)
!7042 = !DILocation(line: 1789, column: 3, scope: !7038)
!7043 = !DILocation(line: 1790, column: 2, scope: !7038)
!7044 = !DILocation(line: 1792, column: 45, scope: !7008)
!7045 = !DILocation(line: 1792, column: 17, scope: !7008)
!7046 = !DILocation(line: 1792, column: 2, scope: !7008)
!7047 = !DILocation(line: 1793, column: 1, scope: !7008)
!7048 = distinct !DISubprogram(name: "acpi_ec_transaction_unlocked", scope: !3, file: !3, line: 781, type: !5757, scopeLine: 783, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !372)
!7049 = !DILocation(line: 327, column: 67, scope: !5861, inlinedAt: !7050)
!7050 = distinct !DILocation(line: 803, column: 2, scope: !7051)
!7051 = distinct !DILexicalBlock(scope: !7052, file: !3, line: 803, column: 2)
!7052 = distinct !DILexicalBlock(scope: !7053, file: !3, line: 803, column: 2)
!7053 = distinct !DILexicalBlock(scope: !7054, file: !3, line: 803, column: 2)
!7054 = distinct !DILexicalBlock(scope: !7055, file: !3, line: 803, column: 2)
!7055 = distinct !DILexicalBlock(scope: !7048, file: !3, line: 803, column: 2)
!7056 = !DILocation(line: 407, column: 64, scope: !5876, inlinedAt: !7057)
!7057 = distinct !DILocation(line: 799, column: 2, scope: !7048)
!7058 = !DILocation(line: 407, column: 84, scope: !5876, inlinedAt: !7057)
!7059 = !DILocation(line: 407, column: 64, scope: !5876, inlinedAt: !7060)
!7060 = distinct !DILocation(line: 812, column: 2, scope: !7048)
!7061 = !DILocation(line: 407, column: 84, scope: !5876, inlinedAt: !7060)
!7062 = !DILocation(line: 327, column: 67, scope: !5861, inlinedAt: !7063)
!7063 = distinct !DILocation(line: 788, column: 2, scope: !7064)
!7064 = distinct !DILexicalBlock(scope: !7065, file: !3, line: 788, column: 2)
!7065 = distinct !DILexicalBlock(scope: !7066, file: !3, line: 788, column: 2)
!7066 = distinct !DILexicalBlock(scope: !7067, file: !3, line: 788, column: 2)
!7067 = distinct !DILexicalBlock(scope: !7068, file: !3, line: 788, column: 2)
!7068 = distinct !DILexicalBlock(scope: !7048, file: !3, line: 788, column: 2)
!7069 = !DILocalVariable(name: "ec", arg: 1, scope: !7048, file: !3, line: 781, type: !330)
!7070 = !DILocation(line: 781, column: 57, scope: !7048)
!7071 = !DILocalVariable(name: "t", arg: 2, scope: !7048, file: !3, line: 782, type: !383)
!7072 = !DILocation(line: 782, column: 26, scope: !7048)
!7073 = !DILocalVariable(name: "tmp", scope: !7048, file: !3, line: 784, type: !287)
!7074 = !DILocation(line: 784, column: 16, scope: !7048)
!7075 = !DILocalVariable(name: "ret", scope: !7048, file: !3, line: 785, type: !294)
!7076 = !DILocation(line: 785, column: 6, scope: !7048)
!7077 = !DILocation(line: 788, column: 2, scope: !7048)
!7078 = !DILocation(line: 788, column: 2, scope: !7068)
!7079 = !DILocalVariable(name: "__dummy", scope: !7080, file: !3, line: 788, type: !287)
!7080 = distinct !DILexicalBlock(scope: !7067, file: !3, line: 788, column: 2)
!7081 = !DILocation(line: 788, column: 2, scope: !7080)
!7082 = !DILocalVariable(name: "__dummy2", scope: !7080, file: !3, line: 788, type: !287)
!7083 = !DILocation(line: 788, column: 2, scope: !7067)
!7084 = !DILocation(line: 788, column: 2, scope: !7066)
!7085 = !DILocation(line: 788, column: 2, scope: !7086)
!7086 = distinct !DILexicalBlock(scope: !7066, file: !3, line: 788, column: 2)
!7087 = !DILocalVariable(name: "__dummy", scope: !7088, file: !3, line: 788, type: !287)
!7088 = distinct !DILexicalBlock(scope: !7089, file: !3, line: 788, column: 2)
!7089 = distinct !DILexicalBlock(scope: !7086, file: !3, line: 788, column: 2)
!7090 = !DILocation(line: 788, column: 2, scope: !7088)
!7091 = !DILocalVariable(name: "__dummy2", scope: !7088, file: !3, line: 788, type: !287)
!7092 = !DILocation(line: 788, column: 2, scope: !7089)
!7093 = !DILocation(line: 788, column: 2, scope: !7065)
!7094 = !{i32 -2140249859}
!7095 = !DILocation(line: 788, column: 2, scope: !7064)
!7096 = !DILocation(line: 329, column: 10, scope: !5861, inlinedAt: !7063)
!7097 = !DILocation(line: 329, column: 16, scope: !5861, inlinedAt: !7063)
!7098 = !DILocation(line: 790, column: 40, scope: !7099)
!7099 = distinct !DILexicalBlock(scope: !7048, file: !3, line: 790, column: 6)
!7100 = !DILocation(line: 790, column: 7, scope: !7099)
!7101 = !DILocation(line: 790, column: 6, scope: !7048)
!7102 = !DILocation(line: 791, column: 7, scope: !7103)
!7103 = distinct !DILexicalBlock(scope: !7099, file: !3, line: 790, column: 45)
!7104 = !DILocation(line: 792, column: 3, scope: !7103)
!7105 = !DILocation(line: 794, column: 2, scope: !7106)
!7106 = distinct !DILexicalBlock(scope: !7107, file: !3, line: 794, column: 2)
!7107 = distinct !DILexicalBlock(scope: !7048, file: !3, line: 794, column: 2)
!7108 = !DILocation(line: 794, column: 2, scope: !7107)
!7109 = !DILocation(line: 796, column: 13, scope: !7048)
!7110 = !DILocation(line: 796, column: 2, scope: !7048)
!7111 = !DILocation(line: 796, column: 6, scope: !7048)
!7112 = !DILocation(line: 796, column: 11, scope: !7048)
!7113 = !DILocation(line: 797, column: 2, scope: !7114)
!7114 = distinct !DILexicalBlock(scope: !7115, file: !3, line: 797, column: 2)
!7115 = distinct !DILexicalBlock(scope: !7048, file: !3, line: 797, column: 2)
!7116 = !DILocation(line: 797, column: 2, scope: !7115)
!7117 = !DILocation(line: 798, column: 20, scope: !7048)
!7118 = !DILocation(line: 798, column: 2, scope: !7048)
!7119 = !DILocation(line: 799, column: 26, scope: !7048)
!7120 = !DILocation(line: 799, column: 30, scope: !7048)
!7121 = !DILocation(line: 799, column: 36, scope: !7048)
!7122 = !DILocation(line: 409, column: 2, scope: !5934, inlinedAt: !7057)
!7123 = !DILocation(line: 409, column: 2, scope: !5939, inlinedAt: !7057)
!7124 = !DILocation(line: 409, column: 2, scope: !5940, inlinedAt: !7057)
!7125 = !DILocation(line: 409, column: 2, scope: !5947, inlinedAt: !7057)
!7126 = !DILocation(line: 409, column: 2, scope: !5950, inlinedAt: !7057)
!7127 = !DILocation(line: 801, column: 16, scope: !7048)
!7128 = !DILocation(line: 801, column: 8, scope: !7048)
!7129 = !DILocation(line: 801, column: 6, scope: !7048)
!7130 = !DILocation(line: 803, column: 2, scope: !7048)
!7131 = !DILocation(line: 803, column: 2, scope: !7055)
!7132 = !DILocalVariable(name: "__dummy", scope: !7133, file: !3, line: 803, type: !287)
!7133 = distinct !DILexicalBlock(scope: !7054, file: !3, line: 803, column: 2)
!7134 = !DILocation(line: 803, column: 2, scope: !7133)
!7135 = !DILocalVariable(name: "__dummy2", scope: !7133, file: !3, line: 803, type: !287)
!7136 = !DILocation(line: 803, column: 2, scope: !7054)
!7137 = !DILocation(line: 803, column: 2, scope: !7053)
!7138 = !DILocation(line: 803, column: 2, scope: !7139)
!7139 = distinct !DILexicalBlock(scope: !7053, file: !3, line: 803, column: 2)
!7140 = !DILocalVariable(name: "__dummy", scope: !7141, file: !3, line: 803, type: !287)
!7141 = distinct !DILexicalBlock(scope: !7142, file: !3, line: 803, column: 2)
!7142 = distinct !DILexicalBlock(scope: !7139, file: !3, line: 803, column: 2)
!7143 = !DILocation(line: 803, column: 2, scope: !7141)
!7144 = !DILocalVariable(name: "__dummy2", scope: !7141, file: !3, line: 803, type: !287)
!7145 = !DILocation(line: 803, column: 2, scope: !7142)
!7146 = !DILocation(line: 803, column: 2, scope: !7052)
!7147 = !{i32 -2140247718}
!7148 = !DILocation(line: 803, column: 2, scope: !7051)
!7149 = !DILocation(line: 329, column: 10, scope: !5861, inlinedAt: !7050)
!7150 = !DILocation(line: 329, column: 16, scope: !5861, inlinedAt: !7050)
!7151 = !DILocation(line: 804, column: 6, scope: !7152)
!7152 = distinct !DILexicalBlock(scope: !7048, file: !3, line: 804, column: 6)
!7153 = !DILocation(line: 804, column: 9, scope: !7152)
!7154 = !DILocation(line: 804, column: 22, scope: !7152)
!7155 = !DILocation(line: 804, column: 19, scope: !7152)
!7156 = !DILocation(line: 804, column: 6, scope: !7048)
!7157 = !DILocation(line: 805, column: 25, scope: !7152)
!7158 = !DILocation(line: 805, column: 3, scope: !7152)
!7159 = !DILocation(line: 806, column: 2, scope: !7160)
!7160 = distinct !DILexicalBlock(scope: !7161, file: !3, line: 806, column: 2)
!7161 = distinct !DILexicalBlock(scope: !7048, file: !3, line: 806, column: 2)
!7162 = !DILocation(line: 806, column: 2, scope: !7161)
!7163 = !DILocation(line: 807, column: 2, scope: !7048)
!7164 = !DILocation(line: 807, column: 6, scope: !7048)
!7165 = !DILocation(line: 807, column: 11, scope: !7048)
!7166 = !DILocation(line: 809, column: 27, scope: !7048)
!7167 = !DILocation(line: 809, column: 2, scope: !7048)
!7168 = !DILocation(line: 810, column: 2, scope: !7169)
!7169 = distinct !DILexicalBlock(scope: !7170, file: !3, line: 810, column: 2)
!7170 = distinct !DILexicalBlock(scope: !7048, file: !3, line: 810, column: 2)
!7171 = !DILocation(line: 810, column: 2, scope: !7170)
!7172 = !DILocation(line: 810, column: 2, scope: !7048)
!7173 = !DILabel(scope: !7048, name: "unlock", file: !3, line: 811)
!7174 = !DILocation(line: 811, column: 1, scope: !7048)
!7175 = !DILocation(line: 812, column: 26, scope: !7048)
!7176 = !DILocation(line: 812, column: 30, scope: !7048)
!7177 = !DILocation(line: 812, column: 36, scope: !7048)
!7178 = !DILocation(line: 409, column: 2, scope: !5934, inlinedAt: !7060)
!7179 = !DILocation(line: 409, column: 2, scope: !5939, inlinedAt: !7060)
!7180 = !DILocation(line: 409, column: 2, scope: !5940, inlinedAt: !7060)
!7181 = !DILocation(line: 409, column: 2, scope: !5947, inlinedAt: !7060)
!7182 = !DILocation(line: 409, column: 2, scope: !5950, inlinedAt: !7060)
!7183 = !DILocation(line: 813, column: 9, scope: !7048)
!7184 = !DILocation(line: 813, column: 2, scope: !7048)
!7185 = distinct !DISubprogram(name: "arch_local_irq_save", scope: !7186, file: !7186, line: 666, type: !7187, scopeLine: 667, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !372)
!7186 = !DIFile(filename: "./arch/x86/include/asm/paravirt.h", directory: "/home/lizy2001/genbc/linux")
!7187 = !DISubroutineType(types: !7188)
!7188 = !{!287}
!7189 = !DILocalVariable(name: "f", scope: !7185, file: !7186, line: 668, type: !287)
!7190 = !DILocation(line: 668, column: 16, scope: !7185)
!7191 = !DILocation(line: 670, column: 6, scope: !7185)
!7192 = !DILocation(line: 670, column: 4, scope: !7185)
!7193 = !DILocation(line: 671, column: 2, scope: !7185)
!7194 = !DILocation(line: 672, column: 9, scope: !7185)
!7195 = !DILocation(line: 672, column: 2, scope: !7185)
!7196 = distinct !DISubprogram(name: "acpi_ec_submit_flushable_request", scope: !3, file: !3, line: 454, type: !7197, scopeLine: 455, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !372)
!7197 = !DISubroutineType(types: !7198)
!7198 = !{!339, !330}
!7199 = !DILocalVariable(name: "ec", arg: 1, scope: !7196, file: !3, line: 454, type: !330)
!7200 = !DILocation(line: 454, column: 62, scope: !7196)
!7201 = !DILocation(line: 456, column: 23, scope: !7202)
!7202 = distinct !DILexicalBlock(scope: !7196, file: !3, line: 456, column: 6)
!7203 = !DILocation(line: 456, column: 7, scope: !7202)
!7204 = !DILocation(line: 456, column: 6, scope: !7196)
!7205 = !DILocation(line: 457, column: 3, scope: !7202)
!7206 = !DILocation(line: 458, column: 25, scope: !7196)
!7207 = !DILocation(line: 458, column: 2, scope: !7196)
!7208 = !DILocation(line: 459, column: 2, scope: !7196)
!7209 = !DILocation(line: 460, column: 1, scope: !7196)
!7210 = distinct !DISubprogram(name: "start_transaction", scope: !3, file: !3, line: 717, type: !6720, scopeLine: 718, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !372)
!7211 = !DILocalVariable(name: "ec", arg: 1, scope: !7210, file: !3, line: 717, type: !330)
!7212 = !DILocation(line: 717, column: 47, scope: !7210)
!7213 = !DILocation(line: 719, column: 39, scope: !7210)
!7214 = !DILocation(line: 719, column: 43, scope: !7210)
!7215 = !DILocation(line: 719, column: 49, scope: !7210)
!7216 = !DILocation(line: 719, column: 52, scope: !7210)
!7217 = !DILocation(line: 719, column: 24, scope: !7210)
!7218 = !DILocation(line: 719, column: 28, scope: !7210)
!7219 = !DILocation(line: 719, column: 34, scope: !7210)
!7220 = !DILocation(line: 719, column: 37, scope: !7210)
!7221 = !DILocation(line: 719, column: 2, scope: !7210)
!7222 = !DILocation(line: 719, column: 6, scope: !7210)
!7223 = !DILocation(line: 719, column: 12, scope: !7210)
!7224 = !DILocation(line: 719, column: 22, scope: !7210)
!7225 = !DILocation(line: 720, column: 2, scope: !7210)
!7226 = !DILocation(line: 720, column: 6, scope: !7210)
!7227 = !DILocation(line: 720, column: 12, scope: !7210)
!7228 = !DILocation(line: 720, column: 18, scope: !7210)
!7229 = !DILocation(line: 721, column: 1, scope: !7210)
!7230 = distinct !DISubprogram(name: "ec_poll", scope: !3, file: !3, line: 758, type: !7231, scopeLine: 759, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !372)
!7231 = !DISubroutineType(types: !7232)
!7232 = !{!294, !330}
!7233 = !DILocation(line: 407, column: 64, scope: !5876, inlinedAt: !7234)
!7234 = distinct !DILocation(line: 776, column: 3, scope: !7235)
!7235 = distinct !DILexicalBlock(scope: !7230, file: !3, line: 763, column: 19)
!7236 = !DILocation(line: 407, column: 84, scope: !5876, inlinedAt: !7234)
!7237 = !DILocation(line: 327, column: 67, scope: !5861, inlinedAt: !7238)
!7238 = distinct !DILocation(line: 774, column: 3, scope: !7239)
!7239 = distinct !DILexicalBlock(scope: !7240, file: !3, line: 774, column: 3)
!7240 = distinct !DILexicalBlock(scope: !7241, file: !3, line: 774, column: 3)
!7241 = distinct !DILexicalBlock(scope: !7242, file: !3, line: 774, column: 3)
!7242 = distinct !DILexicalBlock(scope: !7243, file: !3, line: 774, column: 3)
!7243 = distinct !DILexicalBlock(scope: !7235, file: !3, line: 774, column: 3)
!7244 = !DILocation(line: 407, column: 64, scope: !5876, inlinedAt: !7245)
!7245 = distinct !DILocation(line: 771, column: 4, scope: !7246)
!7246 = distinct !DILexicalBlock(scope: !7235, file: !3, line: 766, column: 6)
!7247 = !DILocation(line: 407, column: 84, scope: !5876, inlinedAt: !7245)
!7248 = !DILocation(line: 327, column: 67, scope: !5861, inlinedAt: !7249)
!7249 = distinct !DILocation(line: 769, column: 4, scope: !7250)
!7250 = distinct !DILexicalBlock(scope: !7251, file: !3, line: 769, column: 4)
!7251 = distinct !DILexicalBlock(scope: !7252, file: !3, line: 769, column: 4)
!7252 = distinct !DILexicalBlock(scope: !7253, file: !3, line: 769, column: 4)
!7253 = distinct !DILexicalBlock(scope: !7254, file: !3, line: 769, column: 4)
!7254 = distinct !DILexicalBlock(scope: !7246, file: !3, line: 769, column: 4)
!7255 = !DILocalVariable(name: "m", arg: 1, scope: !7256, file: !7257, line: 363, type: !1752)
!7256 = distinct !DISubprogram(name: "msecs_to_jiffies", scope: !7257, file: !7257, line: 363, type: !7258, scopeLine: 364, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !372)
!7257 = !DIFile(filename: "./include/linux/jiffies.h", directory: "/home/lizy2001/genbc/linux")
!7258 = !DISubroutineType(types: !7259)
!7259 = !{!287, !1752}
!7260 = !DILocation(line: 363, column: 74, scope: !7256, inlinedAt: !7261)
!7261 = distinct !DILocation(line: 765, column: 4, scope: !7235)
!7262 = !DILocalVariable(name: "ec", arg: 1, scope: !7230, file: !3, line: 758, type: !330)
!7263 = !DILocation(line: 758, column: 36, scope: !7230)
!7264 = !DILocalVariable(name: "flags", scope: !7230, file: !3, line: 760, type: !287)
!7265 = !DILocation(line: 760, column: 16, scope: !7230)
!7266 = !DILocalVariable(name: "repeat", scope: !7230, file: !3, line: 761, type: !294)
!7267 = !DILocation(line: 761, column: 6, scope: !7230)
!7268 = !DILocation(line: 763, column: 2, scope: !7230)
!7269 = !DILocation(line: 763, column: 15, scope: !7230)
!7270 = !DILocalVariable(name: "delay", scope: !7235, file: !3, line: 764, type: !287)
!7271 = !DILocation(line: 764, column: 17, scope: !7235)
!7272 = !DILocation(line: 764, column: 25, scope: !7235)
!7273 = !DILocation(line: 765, column: 21, scope: !7235)
!7274 = !DILocation(line: 365, column: 27, scope: !7275, inlinedAt: !7261)
!7275 = distinct !DILexicalBlock(scope: !7256, file: !7257, line: 365, column: 6)
!7276 = !DILocation(line: 365, column: 6, scope: !7275, inlinedAt: !7261)
!7277 = !DILocation(line: 365, column: 6, scope: !7256, inlinedAt: !7261)
!7278 = !DILocation(line: 366, column: 12, scope: !7279, inlinedAt: !7261)
!7279 = distinct !DILexicalBlock(scope: !7280, file: !7257, line: 366, column: 7)
!7280 = distinct !DILexicalBlock(scope: !7275, file: !7257, line: 365, column: 31)
!7281 = !DILocation(line: 366, column: 14, scope: !7279, inlinedAt: !7261)
!7282 = !DILocation(line: 366, column: 7, scope: !7280, inlinedAt: !7261)
!7283 = !DILocation(line: 367, column: 4, scope: !7279, inlinedAt: !7261)
!7284 = !DILocation(line: 368, column: 28, scope: !7280, inlinedAt: !7261)
!7285 = !DILocation(line: 368, column: 10, scope: !7280, inlinedAt: !7261)
!7286 = !DILocation(line: 368, column: 3, scope: !7280, inlinedAt: !7261)
!7287 = !DILocation(line: 370, column: 29, scope: !7288, inlinedAt: !7261)
!7288 = distinct !DILexicalBlock(scope: !7275, file: !7257, line: 369, column: 9)
!7289 = !DILocation(line: 370, column: 10, scope: !7288, inlinedAt: !7261)
!7290 = !DILocation(line: 370, column: 3, scope: !7288, inlinedAt: !7261)
!7291 = !DILocation(line: 372, column: 1, scope: !7256, inlinedAt: !7261)
!7292 = !DILocation(line: 764, column: 33, scope: !7235)
!7293 = !DILocation(line: 766, column: 3, scope: !7235)
!7294 = !DILocation(line: 767, column: 18, scope: !7295)
!7295 = distinct !DILexicalBlock(scope: !7246, file: !3, line: 767, column: 8)
!7296 = !DILocation(line: 767, column: 9, scope: !7295)
!7297 = !DILocation(line: 767, column: 8, scope: !7246)
!7298 = !DILocation(line: 768, column: 5, scope: !7295)
!7299 = !DILocation(line: 769, column: 4, scope: !7246)
!7300 = !DILocation(line: 769, column: 4, scope: !7254)
!7301 = !DILocalVariable(name: "__dummy", scope: !7302, file: !3, line: 769, type: !287)
!7302 = distinct !DILexicalBlock(scope: !7253, file: !3, line: 769, column: 4)
!7303 = !DILocation(line: 769, column: 4, scope: !7302)
!7304 = !DILocalVariable(name: "__dummy2", scope: !7302, file: !3, line: 769, type: !287)
!7305 = !DILocation(line: 769, column: 4, scope: !7253)
!7306 = !DILocation(line: 769, column: 4, scope: !7252)
!7307 = !DILocation(line: 769, column: 4, scope: !7308)
!7308 = distinct !DILexicalBlock(scope: !7252, file: !3, line: 769, column: 4)
!7309 = !DILocalVariable(name: "__dummy", scope: !7310, file: !3, line: 769, type: !287)
!7310 = distinct !DILexicalBlock(scope: !7311, file: !3, line: 769, column: 4)
!7311 = distinct !DILexicalBlock(scope: !7308, file: !3, line: 769, column: 4)
!7312 = !DILocation(line: 769, column: 4, scope: !7310)
!7313 = !DILocalVariable(name: "__dummy2", scope: !7310, file: !3, line: 769, type: !287)
!7314 = !DILocation(line: 769, column: 4, scope: !7311)
!7315 = !DILocation(line: 769, column: 4, scope: !7251)
!7316 = !{i32 -2140252533}
!7317 = !DILocation(line: 769, column: 4, scope: !7250)
!7318 = !DILocation(line: 329, column: 10, scope: !5861, inlinedAt: !7249)
!7319 = !DILocation(line: 329, column: 16, scope: !5861, inlinedAt: !7249)
!7320 = !DILocation(line: 770, column: 24, scope: !7246)
!7321 = !DILocation(line: 770, column: 4, scope: !7246)
!7322 = !DILocation(line: 771, column: 28, scope: !7246)
!7323 = !DILocation(line: 771, column: 32, scope: !7246)
!7324 = !DILocation(line: 771, column: 38, scope: !7246)
!7325 = !DILocation(line: 409, column: 2, scope: !5934, inlinedAt: !7245)
!7326 = !DILocation(line: 409, column: 2, scope: !5939, inlinedAt: !7245)
!7327 = !DILocation(line: 409, column: 2, scope: !5940, inlinedAt: !7245)
!7328 = !DILocation(line: 409, column: 2, scope: !5947, inlinedAt: !7245)
!7329 = !DILocation(line: 409, column: 2, scope: !5950, inlinedAt: !7245)
!7330 = !DILocation(line: 772, column: 3, scope: !7246)
!7331 = !DILocation(line: 772, column: 12, scope: !7235)
!7332 = distinct !{!7332, !7293, !7333}
!7333 = !DILocation(line: 772, column: 39, scope: !7235)
!7334 = !DILocation(line: 773, column: 3, scope: !7335)
!7335 = distinct !DILexicalBlock(scope: !7336, file: !3, line: 773, column: 3)
!7336 = distinct !DILexicalBlock(scope: !7235, file: !3, line: 773, column: 3)
!7337 = !DILocation(line: 773, column: 3, scope: !7336)
!7338 = !DILocation(line: 774, column: 3, scope: !7235)
!7339 = !DILocation(line: 774, column: 3, scope: !7243)
!7340 = !DILocalVariable(name: "__dummy", scope: !7341, file: !3, line: 774, type: !287)
!7341 = distinct !DILexicalBlock(scope: !7242, file: !3, line: 774, column: 3)
!7342 = !DILocation(line: 774, column: 3, scope: !7341)
!7343 = !DILocalVariable(name: "__dummy2", scope: !7341, file: !3, line: 774, type: !287)
!7344 = !DILocation(line: 774, column: 3, scope: !7242)
!7345 = !DILocation(line: 774, column: 3, scope: !7241)
!7346 = !DILocation(line: 774, column: 3, scope: !7347)
!7347 = distinct !DILexicalBlock(scope: !7241, file: !3, line: 774, column: 3)
!7348 = !DILocalVariable(name: "__dummy", scope: !7349, file: !3, line: 774, type: !287)
!7349 = distinct !DILexicalBlock(scope: !7350, file: !3, line: 774, column: 3)
!7350 = distinct !DILexicalBlock(scope: !7347, file: !3, line: 774, column: 3)
!7351 = !DILocation(line: 774, column: 3, scope: !7349)
!7352 = !DILocalVariable(name: "__dummy2", scope: !7349, file: !3, line: 774, type: !287)
!7353 = !DILocation(line: 774, column: 3, scope: !7350)
!7354 = !DILocation(line: 774, column: 3, scope: !7240)
!7355 = !{i32 -2140250847}
!7356 = !DILocation(line: 774, column: 3, scope: !7239)
!7357 = !DILocation(line: 329, column: 10, scope: !5861, inlinedAt: !7238)
!7358 = !DILocation(line: 329, column: 16, scope: !5861, inlinedAt: !7238)
!7359 = !DILocation(line: 775, column: 21, scope: !7235)
!7360 = !DILocation(line: 775, column: 3, scope: !7235)
!7361 = !DILocation(line: 776, column: 27, scope: !7235)
!7362 = !DILocation(line: 776, column: 31, scope: !7235)
!7363 = !DILocation(line: 776, column: 37, scope: !7235)
!7364 = !DILocation(line: 409, column: 2, scope: !5934, inlinedAt: !7234)
!7365 = !DILocation(line: 409, column: 2, scope: !5939, inlinedAt: !7234)
!7366 = !DILocation(line: 409, column: 2, scope: !5940, inlinedAt: !7234)
!7367 = !DILocation(line: 409, column: 2, scope: !5947, inlinedAt: !7234)
!7368 = !DILocation(line: 409, column: 2, scope: !5950, inlinedAt: !7234)
!7369 = distinct !{!7369, !7268, !7370}
!7370 = !DILocation(line: 777, column: 2, scope: !7230)
!7371 = !DILocation(line: 778, column: 2, scope: !7230)
!7372 = !DILocation(line: 779, column: 1, scope: !7230)
!7373 = distinct !DISubprogram(name: "acpi_ec_unmask_events", scope: !3, file: !3, line: 430, type: !6720, scopeLine: 431, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !372)
!7374 = !DILocalVariable(name: "ec", arg: 1, scope: !7373, file: !3, line: 430, type: !330)
!7375 = !DILocation(line: 430, column: 51, scope: !7373)
!7376 = !DILocation(line: 432, column: 40, scope: !7377)
!7377 = distinct !DILexicalBlock(scope: !7373, file: !3, line: 432, column: 6)
!7378 = !DILocation(line: 432, column: 44, scope: !7377)
!7379 = !DILocation(line: 432, column: 6, scope: !7377)
!7380 = !DILocation(line: 432, column: 6, scope: !7373)
!7381 = !DILocation(line: 433, column: 38, scope: !7382)
!7382 = distinct !DILexicalBlock(scope: !7377, file: !3, line: 432, column: 52)
!7383 = !DILocation(line: 433, column: 42, scope: !7382)
!7384 = !DILocation(line: 433, column: 3, scope: !7382)
!7385 = !DILocation(line: 434, column: 7, scope: !7386)
!7386 = distinct !DILexicalBlock(scope: !7382, file: !3, line: 434, column: 7)
!7387 = !DILocation(line: 434, column: 11, scope: !7386)
!7388 = !DILocation(line: 434, column: 15, scope: !7386)
!7389 = !DILocation(line: 434, column: 7, scope: !7382)
!7390 = !DILocation(line: 435, column: 23, scope: !7386)
!7391 = !DILocation(line: 435, column: 4, scope: !7386)
!7392 = !DILocation(line: 437, column: 15, scope: !7386)
!7393 = !DILocation(line: 437, column: 19, scope: !7386)
!7394 = !DILocation(line: 437, column: 4, scope: !7386)
!7395 = !DILocation(line: 439, column: 3, scope: !7396)
!7396 = distinct !DILexicalBlock(scope: !7397, file: !3, line: 439, column: 3)
!7397 = distinct !DILexicalBlock(scope: !7382, file: !3, line: 439, column: 3)
!7398 = !DILocation(line: 439, column: 3, scope: !7397)
!7399 = !DILocation(line: 440, column: 2, scope: !7382)
!7400 = !DILocation(line: 441, column: 1, scope: !7373)
!7401 = distinct !DISubprogram(name: "acpi_ec_complete_request", scope: !3, file: !3, line: 404, type: !6720, scopeLine: 405, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !372)
!7402 = !DILocalVariable(name: "ec", arg: 1, scope: !7401, file: !3, line: 404, type: !330)
!7403 = !DILocation(line: 404, column: 54, scope: !7401)
!7404 = !DILocalVariable(name: "flushed", scope: !7401, file: !3, line: 406, type: !339)
!7405 = !DILocation(line: 406, column: 7, scope: !7401)
!7406 = !DILocation(line: 408, column: 2, scope: !7401)
!7407 = !DILocation(line: 408, column: 6, scope: !7401)
!7408 = !DILocation(line: 408, column: 21, scope: !7401)
!7409 = !DILocation(line: 409, column: 50, scope: !7410)
!7410 = distinct !DILexicalBlock(scope: !7401, file: !3, line: 409, column: 6)
!7411 = !DILocation(line: 409, column: 54, scope: !7410)
!7412 = !DILocation(line: 409, column: 6, scope: !7410)
!7413 = !DILocation(line: 409, column: 61, scope: !7410)
!7414 = !DILocation(line: 410, column: 6, scope: !7410)
!7415 = !DILocation(line: 410, column: 10, scope: !7410)
!7416 = !DILocation(line: 410, column: 14, scope: !7410)
!7417 = !DILocation(line: 410, column: 19, scope: !7410)
!7418 = !DILocation(line: 410, column: 22, scope: !7410)
!7419 = !DILocation(line: 410, column: 26, scope: !7410)
!7420 = !DILocation(line: 410, column: 42, scope: !7410)
!7421 = !DILocation(line: 409, column: 6, scope: !7401)
!7422 = !DILocation(line: 411, column: 23, scope: !7410)
!7423 = !DILocation(line: 411, column: 3, scope: !7410)
!7424 = !DILocation(line: 412, column: 28, scope: !7401)
!7425 = !DILocation(line: 412, column: 12, scope: !7401)
!7426 = !DILocation(line: 412, column: 10, scope: !7401)
!7427 = !DILocation(line: 413, column: 6, scope: !7428)
!7428 = distinct !DILexicalBlock(scope: !7401, file: !3, line: 413, column: 6)
!7429 = !DILocation(line: 413, column: 6, scope: !7401)
!7430 = !DILocation(line: 414, column: 3, scope: !7428)
!7431 = !DILocation(line: 415, column: 1, scope: !7401)
!7432 = distinct !DISubprogram(name: "arch_local_save_flags", scope: !7186, file: !7186, line: 646, type: !7187, scopeLine: 647, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !372)
!7433 = !DILocalVariable(name: "__ret", scope: !7434, file: !7186, line: 648, type: !287)
!7434 = distinct !DILexicalBlock(scope: !7432, file: !7186, line: 648, column: 9)
!7435 = !DILocation(line: 648, column: 9, scope: !7434)
!7436 = !DILocalVariable(name: "__edi", scope: !7434, file: !7186, line: 648, type: !287)
!7437 = !DILocalVariable(name: "__esi", scope: !7434, file: !7186, line: 648, type: !287)
!7438 = !DILocalVariable(name: "__edx", scope: !7434, file: !7186, line: 648, type: !287)
!7439 = !DILocalVariable(name: "__ecx", scope: !7434, file: !7186, line: 648, type: !287)
!7440 = !DILocalVariable(name: "__eax", scope: !7434, file: !7186, line: 648, type: !287)
!7441 = !DILocation(line: 648, column: 9, scope: !7442)
!7442 = distinct !DILexicalBlock(scope: !7443, file: !7186, line: 648, column: 9)
!7443 = distinct !DILexicalBlock(scope: !7434, file: !7186, line: 648, column: 9)
!7444 = !{i32 -2145732640, i32 -2145730325, i32 -2145730091, i32 -2145730040, i32 -2145730012, i32 -2145729987, i32 -2145730303, i32 -2145730290, i32 -2145729852, i32 -2145729733, i32 -2145730198, i32 -2145730171, i32 -2145730143, i32 -2145730113}
!7445 = !DILocalVariable(name: "__mask", scope: !7446, file: !7186, line: 648, type: !287)
!7446 = distinct !DILexicalBlock(scope: !7442, file: !7186, line: 648, column: 9)
!7447 = !DILocation(line: 648, column: 9, scope: !7446)
!7448 = !DILocation(line: 648, column: 9, scope: !7443)
!7449 = !DILocation(line: 648, column: 2, scope: !7432)
!7450 = distinct !DISubprogram(name: "arch_local_irq_disable", scope: !7186, file: !7186, line: 656, type: !3200, scopeLine: 657, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !372)
!7451 = !DILocalVariable(name: "__edi", scope: !7452, file: !7186, line: 658, type: !287)
!7452 = distinct !DILexicalBlock(scope: !7450, file: !7186, line: 658, column: 2)
!7453 = !DILocation(line: 658, column: 2, scope: !7452)
!7454 = !DILocalVariable(name: "__esi", scope: !7452, file: !7186, line: 658, type: !287)
!7455 = !DILocalVariable(name: "__edx", scope: !7452, file: !7186, line: 658, type: !287)
!7456 = !DILocalVariable(name: "__ecx", scope: !7452, file: !7186, line: 658, type: !287)
!7457 = !DILocalVariable(name: "__eax", scope: !7452, file: !7186, line: 658, type: !287)
!7458 = !{i32 -2145725546, i32 -2145724814, i32 -2145724580, i32 -2145724529, i32 -2145724501, i32 -2145724476, i32 -2145724792, i32 -2145724779, i32 -2145724341, i32 -2145724222, i32 -2145724687, i32 -2145724660, i32 -2145724632, i32 -2145724602}
!7459 = !DILocation(line: 659, column: 1, scope: !7450)
!7460 = distinct !DISubprogram(name: "acpi_ec_started", scope: !3, file: !3, line: 236, type: !7197, scopeLine: 237, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !372)
!7461 = !DILocalVariable(name: "ec", arg: 1, scope: !7460, file: !3, line: 236, type: !330)
!7462 = !DILocation(line: 236, column: 45, scope: !7460)
!7463 = !DILocation(line: 238, column: 37, scope: !7460)
!7464 = !DILocation(line: 238, column: 41, scope: !7460)
!7465 = !DILocation(line: 238, column: 9, scope: !7460)
!7466 = !DILocation(line: 238, column: 48, scope: !7460)
!7467 = !DILocation(line: 239, column: 38, scope: !7460)
!7468 = !DILocation(line: 239, column: 42, scope: !7460)
!7469 = !DILocation(line: 239, column: 10, scope: !7460)
!7470 = !DILocation(line: 239, column: 9, scope: !7460)
!7471 = !DILocation(line: 0, scope: !7460)
!7472 = !DILocation(line: 238, column: 2, scope: !7460)
!7473 = distinct !DISubprogram(name: "acpi_ec_submit_request", scope: !3, file: !3, line: 396, type: !6720, scopeLine: 397, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !372)
!7474 = !DILocalVariable(name: "ec", arg: 1, scope: !7473, file: !3, line: 396, type: !330)
!7475 = !DILocation(line: 396, column: 52, scope: !7473)
!7476 = !DILocation(line: 398, column: 2, scope: !7473)
!7477 = !DILocation(line: 398, column: 6, scope: !7473)
!7478 = !DILocation(line: 398, column: 21, scope: !7473)
!7479 = !DILocation(line: 399, column: 50, scope: !7480)
!7480 = distinct !DILexicalBlock(scope: !7473, file: !3, line: 399, column: 6)
!7481 = !DILocation(line: 399, column: 54, scope: !7480)
!7482 = !DILocation(line: 399, column: 6, scope: !7480)
!7483 = !DILocation(line: 399, column: 61, scope: !7480)
!7484 = !DILocation(line: 400, column: 6, scope: !7480)
!7485 = !DILocation(line: 400, column: 10, scope: !7480)
!7486 = !DILocation(line: 400, column: 14, scope: !7480)
!7487 = !DILocation(line: 400, column: 19, scope: !7480)
!7488 = !DILocation(line: 400, column: 22, scope: !7480)
!7489 = !DILocation(line: 400, column: 26, scope: !7480)
!7490 = !DILocation(line: 400, column: 42, scope: !7480)
!7491 = !DILocation(line: 399, column: 6, scope: !7473)
!7492 = !DILocation(line: 401, column: 22, scope: !7480)
!7493 = !DILocation(line: 401, column: 3, scope: !7480)
!7494 = !DILocation(line: 402, column: 1, scope: !7473)
!7495 = distinct !DISubprogram(name: "test_bit", scope: !7496, file: !7496, line: 132, type: !7497, scopeLine: 133, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !372)
!7496 = !DIFile(filename: "./include/asm-generic/bitops/instrumented-non-atomic.h", directory: "/home/lizy2001/genbc/linux")
!7497 = !DISubroutineType(types: !7498)
!7498 = !{!339, !31, !7499}
!7499 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7500, size: 64)
!7500 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7501)
!7501 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !287)
!7502 = !DILocalVariable(name: "nr", arg: 1, scope: !7503, file: !7504, line: 210, type: !31)
!7503 = distinct !DISubprogram(name: "variable_test_bit", scope: !7504, file: !7504, line: 210, type: !7497, scopeLine: 211, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !372)
!7504 = !DIFile(filename: "./arch/x86/include/asm/bitops.h", directory: "/home/lizy2001/genbc/linux")
!7505 = !DILocation(line: 210, column: 52, scope: !7503, inlinedAt: !7506)
!7506 = distinct !DILocation(line: 135, column: 9, scope: !7495)
!7507 = !DILocalVariable(name: "addr", arg: 2, scope: !7503, file: !7504, line: 210, type: !7499)
!7508 = !DILocation(line: 210, column: 86, scope: !7503, inlinedAt: !7506)
!7509 = !DILocalVariable(name: "oldbit", scope: !7503, file: !7504, line: 212, type: !339)
!7510 = !DILocation(line: 212, column: 7, scope: !7503, inlinedAt: !7506)
!7511 = !DILocalVariable(name: "nr", arg: 1, scope: !7512, file: !7504, line: 204, type: !31)
!7512 = distinct !DISubprogram(name: "constant_test_bit", scope: !7504, file: !7504, line: 204, type: !7497, scopeLine: 205, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !372)
!7513 = !DILocation(line: 204, column: 52, scope: !7512, inlinedAt: !7514)
!7514 = distinct !DILocation(line: 135, column: 9, scope: !7495)
!7515 = !DILocalVariable(name: "addr", arg: 2, scope: !7512, file: !7504, line: 204, type: !7499)
!7516 = !DILocation(line: 204, column: 86, scope: !7512, inlinedAt: !7514)
!7517 = !DILocalVariable(name: "v", arg: 1, scope: !7518, file: !7519, line: 69, type: !7522)
!7518 = distinct !DISubprogram(name: "instrument_atomic_read", scope: !7519, file: !7519, line: 69, type: !7520, scopeLine: 70, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !372)
!7519 = !DIFile(filename: "./include/linux/instrumented.h", directory: "/home/lizy2001/genbc/linux")
!7520 = !DISubroutineType(types: !7521)
!7521 = !{null, !7522, !550}
!7522 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7523, size: 64)
!7523 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7524)
!7524 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: null)
!7525 = !DILocation(line: 69, column: 73, scope: !7518, inlinedAt: !7526)
!7526 = distinct !DILocation(line: 134, column: 2, scope: !7495)
!7527 = !DILocalVariable(name: "size", arg: 2, scope: !7518, file: !7519, line: 69, type: !550)
!7528 = !DILocation(line: 69, column: 83, scope: !7518, inlinedAt: !7526)
!7529 = !DILocalVariable(name: "nr", arg: 1, scope: !7495, file: !7496, line: 132, type: !31)
!7530 = !DILocation(line: 132, column: 34, scope: !7495)
!7531 = !DILocalVariable(name: "addr", arg: 2, scope: !7495, file: !7496, line: 132, type: !7499)
!7532 = !DILocation(line: 132, column: 68, scope: !7495)
!7533 = !DILocation(line: 134, column: 25, scope: !7495)
!7534 = !DILocation(line: 134, column: 32, scope: !7495)
!7535 = !DILocation(line: 134, column: 30, scope: !7495)
!7536 = !DILocation(line: 71, column: 19, scope: !7518, inlinedAt: !7526)
!7537 = !DILocation(line: 71, column: 22, scope: !7518, inlinedAt: !7526)
!7538 = !DILocation(line: 71, column: 2, scope: !7518, inlinedAt: !7526)
!7539 = !DILocation(line: 72, column: 2, scope: !7518, inlinedAt: !7526)
!7540 = !DILocation(line: 135, column: 9, scope: !7495)
!7541 = !DILocation(line: 206, column: 19, scope: !7512, inlinedAt: !7514)
!7542 = !DILocation(line: 206, column: 22, scope: !7512, inlinedAt: !7514)
!7543 = !DILocation(line: 206, column: 15, scope: !7512, inlinedAt: !7514)
!7544 = !DILocation(line: 207, column: 4, scope: !7512, inlinedAt: !7514)
!7545 = !DILocation(line: 207, column: 9, scope: !7512, inlinedAt: !7514)
!7546 = !DILocation(line: 207, column: 12, scope: !7512, inlinedAt: !7514)
!7547 = !DILocation(line: 206, column: 44, scope: !7512, inlinedAt: !7514)
!7548 = !DILocation(line: 207, column: 37, scope: !7512, inlinedAt: !7514)
!7549 = !DILocation(line: 217, column: 33, scope: !7503, inlinedAt: !7506)
!7550 = !DILocation(line: 217, column: 46, scope: !7503, inlinedAt: !7506)
!7551 = !DILocation(line: 214, column: 2, scope: !7503, inlinedAt: !7506)
!7552 = !{i32 -2147145223, i32 -2147145163}
!7553 = !DILocation(line: 219, column: 9, scope: !7503, inlinedAt: !7506)
!7554 = !DILocation(line: 135, column: 2, scope: !7495)
!7555 = distinct !DISubprogram(name: "kasan_check_read", scope: !7556, file: !7556, line: 34, type: !7557, scopeLine: 35, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !372)
!7556 = !DIFile(filename: "./include/linux/kasan-checks.h", directory: "/home/lizy2001/genbc/linux")
!7557 = !DISubroutineType(types: !7558)
!7558 = !{!339, !7522, !7}
!7559 = !DILocalVariable(name: "p", arg: 1, scope: !7555, file: !7556, line: 34, type: !7522)
!7560 = !DILocation(line: 34, column: 58, scope: !7555)
!7561 = !DILocalVariable(name: "size", arg: 2, scope: !7555, file: !7556, line: 34, type: !7)
!7562 = !DILocation(line: 34, column: 74, scope: !7555)
!7563 = !DILocation(line: 36, column: 2, scope: !7555)
!7564 = distinct !DISubprogram(name: "kcsan_check_access", scope: !7565, file: !7565, line: 178, type: !7566, scopeLine: 179, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !372)
!7565 = !DIFile(filename: "./include/linux/kcsan-checks.h", directory: "/home/lizy2001/genbc/linux")
!7566 = !DISubroutineType(types: !7567)
!7567 = !{null, !7522, !550, !294}
!7568 = !DILocalVariable(name: "ptr", arg: 1, scope: !7564, file: !7565, line: 178, type: !7522)
!7569 = !DILocation(line: 178, column: 60, scope: !7564)
!7570 = !DILocalVariable(name: "size", arg: 2, scope: !7564, file: !7565, line: 178, type: !550)
!7571 = !DILocation(line: 178, column: 72, scope: !7564)
!7572 = !DILocalVariable(name: "type", arg: 3, scope: !7564, file: !7565, line: 179, type: !294)
!7573 = !DILocation(line: 179, column: 15, scope: !7564)
!7574 = !DILocation(line: 179, column: 23, scope: !7564)
!7575 = distinct !DISubprogram(name: "acpi_ec_enable_gpe", scope: !3, file: !3, line: 346, type: !5858, scopeLine: 347, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !372)
!7576 = !DILocalVariable(name: "ec", arg: 1, scope: !7575, file: !3, line: 346, type: !330)
!7577 = !DILocation(line: 346, column: 55, scope: !7575)
!7578 = !DILocalVariable(name: "open", arg: 2, scope: !7575, file: !3, line: 346, type: !339)
!7579 = !DILocation(line: 346, column: 64, scope: !7575)
!7580 = !DILocation(line: 348, column: 6, scope: !7581)
!7581 = distinct !DILexicalBlock(scope: !7575, file: !3, line: 348, column: 6)
!7582 = !DILocation(line: 348, column: 6, scope: !7575)
!7583 = !DILocation(line: 349, column: 25, scope: !7581)
!7584 = !DILocation(line: 349, column: 29, scope: !7581)
!7585 = !DILocation(line: 349, column: 3, scope: !7581)
!7586 = !DILocation(line: 351, column: 3, scope: !7587)
!7587 = distinct !DILexicalBlock(scope: !7581, file: !3, line: 350, column: 7)
!7588 = !DILocation(line: 351, column: 3, scope: !7589)
!7589 = distinct !DILexicalBlock(scope: !7590, file: !3, line: 351, column: 3)
!7590 = distinct !DILexicalBlock(scope: !7587, file: !3, line: 351, column: 3)
!7591 = !DILocation(line: 351, column: 3, scope: !7590)
!7592 = !DILocation(line: 351, column: 3, scope: !7593)
!7593 = distinct !DILexicalBlock(scope: !7589, file: !3, line: 351, column: 3)
!7594 = !DILocation(line: 351, column: 3, scope: !7595)
!7595 = distinct !DILexicalBlock(scope: !7593, file: !3, line: 351, column: 3)
!7596 = !DILocation(line: 351, column: 3, scope: !7597)
!7597 = distinct !DILexicalBlock(scope: !7593, file: !3, line: 351, column: 3)
!7598 = !{i32 -2140271171, i32 -2140271142, i32 -2140271096, i32 -2140271038, i32 -2140270984, i32 -2140270930, i32 -2140270875, i32 -2140270844}
!7599 = !DILocation(line: 351, column: 3, scope: !7600)
!7600 = distinct !DILexicalBlock(scope: !7601, file: !3, line: 351, column: 3)
!7601 = distinct !DILexicalBlock(scope: !7593, file: !3, line: 351, column: 3)
!7602 = !{i32 -2140270404, i32 -2140270397, i32 -2140270343, i32 -2140270312, i32 -2140270282}
!7603 = !DILocation(line: 351, column: 3, scope: !7601)
!7604 = !DILocation(line: 352, column: 22, scope: !7587)
!7605 = !DILocation(line: 352, column: 26, scope: !7587)
!7606 = !DILocation(line: 352, column: 3, scope: !7587)
!7607 = !DILocation(line: 354, column: 28, scope: !7608)
!7608 = distinct !DILexicalBlock(scope: !7575, file: !3, line: 354, column: 6)
!7609 = !DILocation(line: 354, column: 6, scope: !7608)
!7610 = !DILocation(line: 354, column: 6, scope: !7575)
!7611 = !DILocation(line: 360, column: 3, scope: !7612)
!7612 = distinct !DILexicalBlock(scope: !7613, file: !3, line: 360, column: 3)
!7613 = distinct !DILexicalBlock(scope: !7614, file: !3, line: 360, column: 3)
!7614 = distinct !DILexicalBlock(scope: !7608, file: !3, line: 354, column: 33)
!7615 = !DILocation(line: 360, column: 3, scope: !7613)
!7616 = !DILocation(line: 361, column: 23, scope: !7614)
!7617 = !DILocation(line: 361, column: 3, scope: !7614)
!7618 = !DILocation(line: 362, column: 2, scope: !7614)
!7619 = !DILocation(line: 363, column: 1, scope: !7575)
!7620 = distinct !DISubprogram(name: "acpi_ec_is_gpe_raised", scope: !3, file: !3, line: 338, type: !7197, scopeLine: 339, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !372)
!7621 = !DILocalVariable(name: "ec", arg: 1, scope: !7620, file: !3, line: 338, type: !330)
!7622 = !DILocation(line: 338, column: 58, scope: !7620)
!7623 = !DILocalVariable(name: "gpe_status", scope: !7620, file: !3, line: 340, type: !289)
!7624 = !DILocation(line: 340, column: 20, scope: !7620)
!7625 = !DILocation(line: 342, column: 34, scope: !7620)
!7626 = !DILocation(line: 342, column: 38, scope: !7620)
!7627 = !DILocation(line: 342, column: 8, scope: !7620)
!7628 = !DILocation(line: 343, column: 10, scope: !7620)
!7629 = !DILocation(line: 343, column: 21, scope: !7620)
!7630 = !DILocation(line: 343, column: 9, scope: !7620)
!7631 = !DILocation(line: 343, column: 2, scope: !7620)
!7632 = distinct !DISubprogram(name: "advance_transaction", scope: !3, file: !3, line: 635, type: !6720, scopeLine: 636, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !372)
!7633 = !DILocalVariable(name: "pfo_val__", scope: !7634, file: !7635, line: 26, type: !261)
!7634 = distinct !DILexicalBlock(scope: !7636, file: !7635, line: 26, column: 9)
!7635 = !DIFile(filename: "./arch/x86/include/asm/preempt.h", directory: "/home/lizy2001/genbc/linux")
!7636 = distinct !DISubprogram(name: "preempt_count", scope: !7635, file: !7635, line: 24, type: !6983, scopeLine: 25, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !372)
!7637 = !DILocation(line: 26, column: 9, scope: !7634, inlinedAt: !7638)
!7638 = distinct !DILocation(line: 702, column: 7, scope: !7639)
!7639 = distinct !DILexicalBlock(scope: !7640, file: !3, line: 702, column: 7)
!7640 = distinct !DILexicalBlock(scope: !7641, file: !3, line: 701, column: 36)
!7641 = distinct !DILexicalBlock(scope: !7632, file: !3, line: 701, column: 6)
!7642 = !DILocation(line: 26, column: 9, scope: !7634, inlinedAt: !7643)
!7643 = distinct !DILocation(line: 713, column: 16, scope: !7644)
!7644 = distinct !DILexicalBlock(scope: !7632, file: !3, line: 713, column: 6)
!7645 = !DILocalVariable(name: "ec", arg: 1, scope: !7632, file: !3, line: 635, type: !330)
!7646 = !DILocation(line: 635, column: 49, scope: !7632)
!7647 = !DILocalVariable(name: "t", scope: !7632, file: !3, line: 637, type: !383)
!7648 = !DILocation(line: 637, column: 22, scope: !7632)
!7649 = !DILocalVariable(name: "status", scope: !7632, file: !3, line: 638, type: !266)
!7650 = !DILocation(line: 638, column: 5, scope: !7632)
!7651 = !DILocalVariable(name: "wakeup", scope: !7632, file: !3, line: 639, type: !339)
!7652 = !DILocation(line: 639, column: 7, scope: !7632)
!7653 = !DILocation(line: 641, column: 2, scope: !7654)
!7654 = distinct !DILexicalBlock(scope: !7655, file: !3, line: 641, column: 2)
!7655 = distinct !DILexicalBlock(scope: !7632, file: !3, line: 641, column: 2)
!7656 = !DILocation(line: 641, column: 2, scope: !7655)
!7657 = !DILocation(line: 648, column: 6, scope: !7658)
!7658 = distinct !DILexicalBlock(scope: !7632, file: !3, line: 648, column: 6)
!7659 = !DILocation(line: 648, column: 10, scope: !7658)
!7660 = !DILocation(line: 648, column: 14, scope: !7658)
!7661 = !DILocation(line: 648, column: 6, scope: !7632)
!7662 = !DILocation(line: 649, column: 21, scope: !7658)
!7663 = !DILocation(line: 649, column: 3, scope: !7658)
!7664 = !DILocation(line: 651, column: 31, scope: !7632)
!7665 = !DILocation(line: 651, column: 11, scope: !7632)
!7666 = !DILocation(line: 651, column: 9, scope: !7632)
!7667 = !DILocation(line: 652, column: 6, scope: !7632)
!7668 = !DILocation(line: 652, column: 10, scope: !7632)
!7669 = !DILocation(line: 652, column: 4, scope: !7632)
!7670 = !DILocation(line: 657, column: 7, scope: !7671)
!7671 = distinct !DILexicalBlock(scope: !7632, file: !3, line: 657, column: 6)
!7672 = !DILocation(line: 657, column: 9, scope: !7671)
!7673 = !DILocation(line: 657, column: 14, scope: !7671)
!7674 = !DILocation(line: 657, column: 17, scope: !7671)
!7675 = !DILocation(line: 657, column: 23, scope: !7671)
!7676 = !DILocation(line: 657, column: 6, scope: !7632)
!7677 = !DILocation(line: 658, column: 7, scope: !7678)
!7678 = distinct !DILexicalBlock(scope: !7679, file: !3, line: 658, column: 7)
!7679 = distinct !DILexicalBlock(scope: !7671, file: !3, line: 657, column: 48)
!7680 = !DILocation(line: 658, column: 25, scope: !7678)
!7681 = !DILocation(line: 658, column: 53, scope: !7678)
!7682 = !DILocation(line: 659, column: 9, scope: !7678)
!7683 = !DILocation(line: 659, column: 13, scope: !7678)
!7684 = !DILocation(line: 659, column: 32, scope: !7678)
!7685 = !DILocation(line: 660, column: 43, scope: !7678)
!7686 = !DILocation(line: 660, column: 47, scope: !7678)
!7687 = !DILocation(line: 660, column: 8, scope: !7678)
!7688 = !DILocation(line: 658, column: 7, scope: !7679)
!7689 = !DILocation(line: 661, column: 40, scope: !7690)
!7690 = distinct !DILexicalBlock(scope: !7678, file: !3, line: 660, column: 56)
!7691 = !DILocation(line: 661, column: 44, scope: !7690)
!7692 = !DILocation(line: 661, column: 4, scope: !7690)
!7693 = !DILocation(line: 662, column: 27, scope: !7690)
!7694 = !DILocation(line: 662, column: 4, scope: !7690)
!7695 = !DILocation(line: 663, column: 3, scope: !7690)
!7696 = !DILocation(line: 664, column: 2, scope: !7679)
!7697 = !DILocation(line: 665, column: 7, scope: !7698)
!7698 = distinct !DILexicalBlock(scope: !7632, file: !3, line: 665, column: 6)
!7699 = !DILocation(line: 665, column: 6, scope: !7632)
!7700 = !DILocation(line: 666, column: 3, scope: !7698)
!7701 = !DILocation(line: 667, column: 6, scope: !7702)
!7702 = distinct !DILexicalBlock(scope: !7632, file: !3, line: 667, column: 6)
!7703 = !DILocation(line: 667, column: 9, scope: !7702)
!7704 = !DILocation(line: 667, column: 15, scope: !7702)
!7705 = !DILocation(line: 667, column: 6, scope: !7632)
!7706 = !DILocation(line: 668, column: 7, scope: !7707)
!7707 = distinct !DILexicalBlock(scope: !7708, file: !3, line: 668, column: 7)
!7708 = distinct !DILexicalBlock(scope: !7702, file: !3, line: 667, column: 39)
!7709 = !DILocation(line: 668, column: 10, scope: !7707)
!7710 = !DILocation(line: 668, column: 17, scope: !7707)
!7711 = !DILocation(line: 668, column: 20, scope: !7707)
!7712 = !DILocation(line: 668, column: 15, scope: !7707)
!7713 = !DILocation(line: 668, column: 7, scope: !7708)
!7714 = !DILocation(line: 669, column: 9, scope: !7715)
!7715 = distinct !DILexicalBlock(scope: !7716, file: !3, line: 669, column: 8)
!7716 = distinct !DILexicalBlock(scope: !7707, file: !3, line: 668, column: 24)
!7717 = !DILocation(line: 669, column: 16, scope: !7715)
!7718 = !DILocation(line: 669, column: 36, scope: !7715)
!7719 = !DILocation(line: 669, column: 8, scope: !7716)
!7720 = !DILocation(line: 670, column: 24, scope: !7715)
!7721 = !DILocation(line: 670, column: 28, scope: !7715)
!7722 = !DILocation(line: 670, column: 31, scope: !7715)
!7723 = !DILocation(line: 670, column: 37, scope: !7715)
!7724 = !DILocation(line: 670, column: 40, scope: !7715)
!7725 = !DILocation(line: 670, column: 42, scope: !7715)
!7726 = !DILocation(line: 670, column: 5, scope: !7715)
!7727 = !DILocation(line: 672, column: 5, scope: !7715)
!7728 = !DILocation(line: 673, column: 3, scope: !7716)
!7729 = !DILocation(line: 673, column: 14, scope: !7730)
!7730 = distinct !DILexicalBlock(scope: !7707, file: !3, line: 673, column: 14)
!7731 = !DILocation(line: 673, column: 17, scope: !7730)
!7732 = !DILocation(line: 673, column: 24, scope: !7730)
!7733 = !DILocation(line: 673, column: 27, scope: !7730)
!7734 = !DILocation(line: 673, column: 22, scope: !7730)
!7735 = !DILocation(line: 673, column: 14, scope: !7707)
!7736 = !DILocation(line: 674, column: 9, scope: !7737)
!7737 = distinct !DILexicalBlock(scope: !7738, file: !3, line: 674, column: 8)
!7738 = distinct !DILexicalBlock(scope: !7730, file: !3, line: 673, column: 31)
!7739 = !DILocation(line: 674, column: 16, scope: !7737)
!7740 = !DILocation(line: 674, column: 36, scope: !7737)
!7741 = !DILocation(line: 674, column: 8, scope: !7738)
!7742 = !DILocation(line: 675, column: 43, scope: !7743)
!7743 = distinct !DILexicalBlock(scope: !7737, file: !3, line: 674, column: 42)
!7744 = !DILocation(line: 675, column: 25, scope: !7743)
!7745 = !DILocation(line: 675, column: 5, scope: !7743)
!7746 = !DILocation(line: 675, column: 8, scope: !7743)
!7747 = !DILocation(line: 675, column: 14, scope: !7743)
!7748 = !DILocation(line: 675, column: 17, scope: !7743)
!7749 = !DILocation(line: 675, column: 19, scope: !7743)
!7750 = !DILocation(line: 675, column: 23, scope: !7743)
!7751 = !DILocation(line: 676, column: 9, scope: !7752)
!7752 = distinct !DILexicalBlock(scope: !7743, file: !3, line: 676, column: 9)
!7753 = !DILocation(line: 676, column: 12, scope: !7752)
!7754 = !DILocation(line: 676, column: 20, scope: !7752)
!7755 = !DILocation(line: 676, column: 23, scope: !7752)
!7756 = !DILocation(line: 676, column: 17, scope: !7752)
!7757 = !DILocation(line: 676, column: 9, scope: !7743)
!7758 = !DILocation(line: 677, column: 32, scope: !7759)
!7759 = distinct !DILexicalBlock(scope: !7752, file: !3, line: 676, column: 27)
!7760 = !DILocation(line: 677, column: 6, scope: !7759)
!7761 = !DILocation(line: 678, column: 10, scope: !7762)
!7762 = distinct !DILexicalBlock(scope: !7759, file: !3, line: 678, column: 10)
!7763 = !DILocation(line: 678, column: 13, scope: !7762)
!7764 = !DILocation(line: 678, column: 21, scope: !7762)
!7765 = !DILocation(line: 678, column: 10, scope: !7759)
!7766 = !DILocation(line: 679, column: 7, scope: !7767)
!7767 = distinct !DILexicalBlock(scope: !7768, file: !3, line: 679, column: 7)
!7768 = distinct !DILexicalBlock(scope: !7762, file: !3, line: 679, column: 7)
!7769 = !DILocation(line: 679, column: 7, scope: !7768)
!7770 = !DILocation(line: 679, column: 7, scope: !7762)
!7771 = !DILocation(line: 681, column: 13, scope: !7759)
!7772 = !DILocation(line: 682, column: 5, scope: !7759)
!7773 = !DILocation(line: 683, column: 4, scope: !7743)
!7774 = !DILocation(line: 684, column: 5, scope: !7737)
!7775 = !DILocation(line: 685, column: 3, scope: !7738)
!7776 = !DILocation(line: 685, column: 14, scope: !7777)
!7777 = distinct !DILexicalBlock(scope: !7730, file: !3, line: 685, column: 14)
!7778 = !DILocation(line: 685, column: 17, scope: !7777)
!7779 = !DILocation(line: 685, column: 25, scope: !7777)
!7780 = !DILocation(line: 685, column: 28, scope: !7777)
!7781 = !DILocation(line: 685, column: 22, scope: !7777)
!7782 = !DILocation(line: 685, column: 31, scope: !7777)
!7783 = !DILocation(line: 686, column: 8, scope: !7777)
!7784 = !DILocation(line: 686, column: 15, scope: !7777)
!7785 = !DILocation(line: 686, column: 35, scope: !7777)
!7786 = !DILocation(line: 685, column: 14, scope: !7730)
!7787 = !DILocation(line: 687, column: 30, scope: !7788)
!7788 = distinct !DILexicalBlock(scope: !7777, file: !3, line: 686, column: 41)
!7789 = !DILocation(line: 687, column: 4, scope: !7788)
!7790 = !DILocation(line: 688, column: 11, scope: !7788)
!7791 = !DILocation(line: 689, column: 3, scope: !7788)
!7792 = !DILocation(line: 690, column: 3, scope: !7708)
!7793 = !DILocation(line: 691, column: 15, scope: !7794)
!7794 = distinct !DILexicalBlock(scope: !7702, file: !3, line: 691, column: 13)
!7795 = !DILocation(line: 691, column: 22, scope: !7794)
!7796 = !DILocation(line: 691, column: 13, scope: !7702)
!7797 = !DILocation(line: 692, column: 21, scope: !7798)
!7798 = distinct !DILexicalBlock(scope: !7794, file: !3, line: 691, column: 43)
!7799 = !DILocation(line: 692, column: 25, scope: !7798)
!7800 = !DILocation(line: 692, column: 28, scope: !7798)
!7801 = !DILocation(line: 692, column: 3, scope: !7798)
!7802 = !DILocation(line: 693, column: 29, scope: !7798)
!7803 = !DILocation(line: 693, column: 3, scope: !7798)
!7804 = !DILocation(line: 694, column: 3, scope: !7798)
!7805 = !DILocation(line: 667, column: 17, scope: !7702)
!7806 = !DILabel(scope: !7632, name: "err", file: !3, line: 696)
!7807 = !DILocation(line: 696, column: 1, scope: !7632)
!7808 = !DILocation(line: 701, column: 8, scope: !7641)
!7809 = !DILocation(line: 701, column: 15, scope: !7641)
!7810 = !DILocation(line: 701, column: 6, scope: !7632)
!7811 = !{i32 -2145499728}
!7812 = !DILocation(line: 26, column: 41, scope: !7636, inlinedAt: !7638)
!7813 = !DILocation(line: 702, column: 7, scope: !7639)
!7814 = !DILocation(line: 702, column: 22, scope: !7639)
!7815 = !DILocation(line: 702, column: 25, scope: !7639)
!7816 = !DILocation(line: 702, column: 7, scope: !7640)
!7817 = !DILocation(line: 703, column: 8, scope: !7818)
!7818 = distinct !DILexicalBlock(scope: !7819, file: !3, line: 703, column: 8)
!7819 = distinct !DILexicalBlock(scope: !7639, file: !3, line: 702, column: 28)
!7820 = !DILocation(line: 703, column: 11, scope: !7818)
!7821 = !DILocation(line: 703, column: 23, scope: !7818)
!7822 = !DILocation(line: 703, column: 21, scope: !7818)
!7823 = !DILocation(line: 703, column: 8, scope: !7819)
!7824 = !DILocation(line: 704, column: 7, scope: !7818)
!7825 = !DILocation(line: 704, column: 10, scope: !7818)
!7826 = !DILocation(line: 704, column: 5, scope: !7818)
!7827 = !DILocation(line: 706, column: 8, scope: !7828)
!7828 = distinct !DILexicalBlock(scope: !7819, file: !3, line: 706, column: 8)
!7829 = !DILocation(line: 706, column: 11, scope: !7828)
!7830 = !DILocation(line: 706, column: 24, scope: !7828)
!7831 = !DILocation(line: 706, column: 21, scope: !7828)
!7832 = !DILocation(line: 706, column: 8, scope: !7819)
!7833 = !DILocation(line: 707, column: 25, scope: !7828)
!7834 = !DILocation(line: 707, column: 5, scope: !7828)
!7835 = !DILocation(line: 708, column: 3, scope: !7819)
!7836 = !DILocation(line: 709, column: 2, scope: !7640)
!7837 = !DILocation(line: 701, column: 33, scope: !7641)
!7838 = !DILabel(scope: !7632, name: "out", file: !3, line: 710)
!7839 = !DILocation(line: 710, column: 1, scope: !7632)
!7840 = !DILocation(line: 711, column: 6, scope: !7841)
!7841 = distinct !DILexicalBlock(scope: !7632, file: !3, line: 711, column: 6)
!7842 = !DILocation(line: 711, column: 13, scope: !7841)
!7843 = !DILocation(line: 711, column: 6, scope: !7632)
!7844 = !DILocation(line: 712, column: 24, scope: !7841)
!7845 = !DILocation(line: 712, column: 3, scope: !7841)
!7846 = !DILocation(line: 713, column: 6, scope: !7644)
!7847 = !DILocation(line: 713, column: 13, scope: !7644)
!7848 = !DILocation(line: 26, column: 41, scope: !7636, inlinedAt: !7643)
!7849 = !DILocation(line: 713, column: 16, scope: !7644)
!7850 = !DILocation(line: 713, column: 6, scope: !7632)
!7851 = !DILocation(line: 714, column: 3, scope: !7644)
!7852 = !DILocation(line: 715, column: 1, scope: !7632)
!7853 = distinct !DISubprogram(name: "acpi_ec_clear_gpe", scope: !3, file: !3, line: 375, type: !6720, scopeLine: 376, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !372)
!7854 = !DILocalVariable(name: "ec", arg: 1, scope: !7853, file: !3, line: 375, type: !330)
!7855 = !DILocation(line: 375, column: 54, scope: !7853)
!7856 = !DILocation(line: 387, column: 29, scope: !7857)
!7857 = distinct !DILexicalBlock(scope: !7853, file: !3, line: 387, column: 6)
!7858 = !DILocation(line: 387, column: 7, scope: !7857)
!7859 = !DILocation(line: 387, column: 6, scope: !7853)
!7860 = !DILocation(line: 388, column: 3, scope: !7857)
!7861 = !DILocation(line: 389, column: 23, scope: !7853)
!7862 = !DILocation(line: 389, column: 27, scope: !7853)
!7863 = !DILocation(line: 389, column: 2, scope: !7853)
!7864 = !DILocation(line: 390, column: 1, scope: !7853)
!7865 = distinct !DISubprogram(name: "acpi_ec_read_status", scope: !3, file: !3, line: 275, type: !7866, scopeLine: 276, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !372)
!7866 = !DISubroutineType(types: !7867)
!7867 = !{!266, !330}
!7868 = !DILocalVariable(name: "ec", arg: 1, scope: !7865, file: !3, line: 275, type: !330)
!7869 = !DILocation(line: 275, column: 54, scope: !7865)
!7870 = !DILocalVariable(name: "x", scope: !7865, file: !3, line: 277, type: !266)
!7871 = !DILocation(line: 277, column: 5, scope: !7865)
!7872 = !DILocation(line: 277, column: 13, scope: !7865)
!7873 = !DILocation(line: 277, column: 17, scope: !7865)
!7874 = !DILocation(line: 277, column: 9, scope: !7865)
!7875 = !DILocation(line: 279, column: 2, scope: !7876)
!7876 = distinct !DILexicalBlock(scope: !7877, file: !3, line: 279, column: 2)
!7877 = distinct !DILexicalBlock(scope: !7865, file: !3, line: 279, column: 2)
!7878 = !DILocation(line: 279, column: 2, scope: !7877)
!7879 = !DILocation(line: 287, column: 9, scope: !7865)
!7880 = !DILocation(line: 287, column: 2, scope: !7865)
!7881 = distinct !DISubprogram(name: "clear_bit", scope: !7882, file: !7882, line: 39, type: !7883, scopeLine: 40, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !372)
!7882 = !DIFile(filename: "./include/asm-generic/bitops/instrumented-atomic.h", directory: "/home/lizy2001/genbc/linux")
!7883 = !DISubroutineType(types: !7884)
!7884 = !{null, !31, !7885}
!7885 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7501, size: 64)
!7886 = !DILocalVariable(name: "nr", arg: 1, scope: !7887, file: !7504, line: 72, type: !31)
!7887 = distinct !DISubprogram(name: "arch_clear_bit", scope: !7504, file: !7504, line: 72, type: !7883, scopeLine: 73, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !372)
!7888 = !DILocation(line: 72, column: 21, scope: !7887, inlinedAt: !7889)
!7889 = distinct !DILocation(line: 42, column: 2, scope: !7881)
!7890 = !DILocalVariable(name: "addr", arg: 2, scope: !7887, file: !7504, line: 72, type: !7885)
!7891 = !DILocation(line: 72, column: 49, scope: !7887, inlinedAt: !7889)
!7892 = !DILocalVariable(name: "v", arg: 1, scope: !7893, file: !7519, line: 84, type: !7522)
!7893 = distinct !DISubprogram(name: "instrument_atomic_write", scope: !7519, file: !7519, line: 84, type: !7520, scopeLine: 85, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !372)
!7894 = !DILocation(line: 84, column: 74, scope: !7893, inlinedAt: !7895)
!7895 = distinct !DILocation(line: 41, column: 2, scope: !7881)
!7896 = !DILocalVariable(name: "size", arg: 2, scope: !7893, file: !7519, line: 84, type: !550)
!7897 = !DILocation(line: 84, column: 84, scope: !7893, inlinedAt: !7895)
!7898 = !DILocalVariable(name: "nr", arg: 1, scope: !7881, file: !7882, line: 39, type: !31)
!7899 = !DILocation(line: 39, column: 35, scope: !7881)
!7900 = !DILocalVariable(name: "addr", arg: 2, scope: !7881, file: !7882, line: 39, type: !7885)
!7901 = !DILocation(line: 39, column: 63, scope: !7881)
!7902 = !DILocation(line: 41, column: 26, scope: !7881)
!7903 = !DILocation(line: 41, column: 33, scope: !7881)
!7904 = !DILocation(line: 41, column: 31, scope: !7881)
!7905 = !DILocation(line: 86, column: 20, scope: !7893, inlinedAt: !7895)
!7906 = !DILocation(line: 86, column: 23, scope: !7893, inlinedAt: !7895)
!7907 = !DILocation(line: 86, column: 2, scope: !7893, inlinedAt: !7895)
!7908 = !DILocation(line: 87, column: 2, scope: !7893, inlinedAt: !7895)
!7909 = !DILocation(line: 42, column: 17, scope: !7881)
!7910 = !DILocation(line: 42, column: 21, scope: !7881)
!7911 = !DILocation(line: 74, column: 27, scope: !7912, inlinedAt: !7889)
!7912 = distinct !DILexicalBlock(scope: !7887, file: !7504, line: 74, column: 6)
!7913 = !DILocation(line: 74, column: 6, scope: !7912, inlinedAt: !7889)
!7914 = !DILocation(line: 74, column: 6, scope: !7887, inlinedAt: !7889)
!7915 = !DILocation(line: 76, column: 6, scope: !7916, inlinedAt: !7889)
!7916 = distinct !DILexicalBlock(scope: !7912, file: !7504, line: 74, column: 32)
!7917 = !DILocation(line: 77, column: 13, scope: !7916, inlinedAt: !7889)
!7918 = !DILocation(line: 77, column: 12, scope: !7916, inlinedAt: !7889)
!7919 = !DILocation(line: 75, column: 3, scope: !7916, inlinedAt: !7889)
!7920 = !{i32 -2147153517}
!7921 = !DILocation(line: 78, column: 2, scope: !7916, inlinedAt: !7889)
!7922 = !DILocation(line: 80, column: 8, scope: !7923, inlinedAt: !7889)
!7923 = distinct !DILexicalBlock(scope: !7912, file: !7504, line: 78, column: 9)
!7924 = !DILocation(line: 80, column: 32, scope: !7923, inlinedAt: !7889)
!7925 = !DILocation(line: 79, column: 3, scope: !7923, inlinedAt: !7889)
!7926 = !{i32 -2147153385}
!7927 = !DILocation(line: 43, column: 1, scope: !7881)
!7928 = distinct !DISubprogram(name: "acpi_ec_complete_query", scope: !3, file: !3, line: 475, type: !6720, scopeLine: 476, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !372)
!7929 = !DILocalVariable(name: "ec", arg: 1, scope: !7928, file: !3, line: 475, type: !330)
!7930 = !DILocation(line: 475, column: 52, scope: !7928)
!7931 = !DILocation(line: 477, column: 50, scope: !7932)
!7932 = distinct !DILexicalBlock(scope: !7928, file: !3, line: 477, column: 6)
!7933 = !DILocation(line: 477, column: 54, scope: !7932)
!7934 = !DILocation(line: 477, column: 6, scope: !7932)
!7935 = !DILocation(line: 477, column: 6, scope: !7928)
!7936 = !DILocation(line: 478, column: 3, scope: !7937)
!7937 = distinct !DILexicalBlock(scope: !7938, file: !3, line: 478, column: 3)
!7938 = distinct !DILexicalBlock(scope: !7932, file: !3, line: 478, column: 3)
!7939 = !DILocation(line: 478, column: 3, scope: !7938)
!7940 = !DILocation(line: 478, column: 3, scope: !7932)
!7941 = !DILocation(line: 480, column: 24, scope: !7928)
!7942 = !DILocation(line: 480, column: 2, scope: !7928)
!7943 = !DILocation(line: 481, column: 1, scope: !7928)
!7944 = distinct !DISubprogram(name: "acpi_ec_write_data", scope: !3, file: !3, line: 306, type: !6455, scopeLine: 307, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !372)
!7945 = !DILocalVariable(name: "ec", arg: 1, scope: !7944, file: !3, line: 306, type: !330)
!7946 = !DILocation(line: 306, column: 55, scope: !7944)
!7947 = !DILocalVariable(name: "data", arg: 2, scope: !7944, file: !3, line: 306, type: !266)
!7948 = !DILocation(line: 306, column: 62, scope: !7944)
!7949 = !DILocation(line: 308, column: 2, scope: !7950)
!7950 = distinct !DILexicalBlock(scope: !7951, file: !3, line: 308, column: 2)
!7951 = distinct !DILexicalBlock(scope: !7944, file: !3, line: 308, column: 2)
!7952 = !DILocation(line: 308, column: 2, scope: !7951)
!7953 = !DILocation(line: 309, column: 7, scope: !7944)
!7954 = !DILocation(line: 309, column: 13, scope: !7944)
!7955 = !DILocation(line: 309, column: 17, scope: !7944)
!7956 = !DILocation(line: 309, column: 2, scope: !7944)
!7957 = !DILocation(line: 310, column: 18, scope: !7944)
!7958 = !DILocation(line: 310, column: 2, scope: !7944)
!7959 = !DILocation(line: 310, column: 6, scope: !7944)
!7960 = !DILocation(line: 310, column: 16, scope: !7944)
!7961 = !DILocation(line: 311, column: 1, scope: !7944)
!7962 = distinct !DISubprogram(name: "acpi_ec_read_data", scope: !3, file: !3, line: 290, type: !7866, scopeLine: 291, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !372)
!7963 = !DILocalVariable(name: "ec", arg: 1, scope: !7962, file: !3, line: 290, type: !330)
!7964 = !DILocation(line: 290, column: 52, scope: !7962)
!7965 = !DILocalVariable(name: "x", scope: !7962, file: !3, line: 292, type: !266)
!7966 = !DILocation(line: 292, column: 5, scope: !7962)
!7967 = !DILocation(line: 292, column: 13, scope: !7962)
!7968 = !DILocation(line: 292, column: 17, scope: !7962)
!7969 = !DILocation(line: 292, column: 9, scope: !7962)
!7970 = !DILocation(line: 294, column: 18, scope: !7962)
!7971 = !DILocation(line: 294, column: 2, scope: !7962)
!7972 = !DILocation(line: 294, column: 6, scope: !7962)
!7973 = !DILocation(line: 294, column: 16, scope: !7962)
!7974 = !DILocation(line: 295, column: 2, scope: !7975)
!7975 = distinct !DILexicalBlock(scope: !7976, file: !3, line: 295, column: 2)
!7976 = distinct !DILexicalBlock(scope: !7962, file: !3, line: 295, column: 2)
!7977 = !DILocation(line: 295, column: 2, scope: !7976)
!7978 = !DILocation(line: 296, column: 9, scope: !7962)
!7979 = !DILocation(line: 296, column: 2, scope: !7962)
!7980 = distinct !DISubprogram(name: "ec_transaction_transition", scope: !3, file: !3, line: 619, type: !7981, scopeLine: 620, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !372)
!7981 = !DISubroutineType(types: !7982)
!7982 = !{null, !330, !287}
!7983 = !DILocalVariable(name: "ec", arg: 1, scope: !7980, file: !3, line: 619, type: !330)
!7984 = !DILocation(line: 619, column: 62, scope: !7980)
!7985 = !DILocalVariable(name: "flag", arg: 2, scope: !7980, file: !3, line: 619, type: !287)
!7986 = !DILocation(line: 619, column: 80, scope: !7980)
!7987 = !DILocation(line: 621, column: 21, scope: !7980)
!7988 = !DILocation(line: 621, column: 2, scope: !7980)
!7989 = !DILocation(line: 621, column: 6, scope: !7980)
!7990 = !DILocation(line: 621, column: 12, scope: !7980)
!7991 = !DILocation(line: 621, column: 18, scope: !7980)
!7992 = !DILocation(line: 622, column: 6, scope: !7993)
!7993 = distinct !DILexicalBlock(scope: !7980, file: !3, line: 622, column: 6)
!7994 = !DILocation(line: 622, column: 10, scope: !7993)
!7995 = !DILocation(line: 622, column: 16, scope: !7993)
!7996 = !DILocation(line: 622, column: 24, scope: !7993)
!7997 = !DILocation(line: 622, column: 6, scope: !7980)
!7998 = !DILocation(line: 623, column: 7, scope: !7999)
!7999 = distinct !DILexicalBlock(scope: !8000, file: !3, line: 623, column: 7)
!8000 = distinct !DILexicalBlock(scope: !7993, file: !3, line: 622, column: 50)
!8001 = !DILocation(line: 623, column: 25, scope: !7999)
!8002 = !DILocation(line: 623, column: 54, scope: !7999)
!8003 = !DILocation(line: 624, column: 7, scope: !7999)
!8004 = !DILocation(line: 624, column: 12, scope: !7999)
!8005 = !DILocation(line: 623, column: 7, scope: !8000)
!8006 = !DILocation(line: 625, column: 27, scope: !7999)
!8007 = !DILocation(line: 625, column: 4, scope: !7999)
!8008 = !DILocation(line: 626, column: 7, scope: !8009)
!8009 = distinct !DILexicalBlock(scope: !8000, file: !3, line: 626, column: 7)
!8010 = !DILocation(line: 626, column: 25, scope: !8009)
!8011 = !DILocation(line: 626, column: 53, scope: !8009)
!8012 = !DILocation(line: 627, column: 7, scope: !8009)
!8013 = !DILocation(line: 627, column: 12, scope: !8009)
!8014 = !DILocation(line: 626, column: 7, scope: !8000)
!8015 = !DILocation(line: 628, column: 27, scope: !8009)
!8016 = !DILocation(line: 628, column: 4, scope: !8009)
!8017 = !DILocation(line: 629, column: 7, scope: !8018)
!8018 = distinct !DILexicalBlock(scope: !8000, file: !3, line: 629, column: 7)
!8019 = !DILocation(line: 629, column: 25, scope: !8018)
!8020 = !DILocation(line: 629, column: 53, scope: !8018)
!8021 = !DILocation(line: 630, column: 7, scope: !8018)
!8022 = !DILocation(line: 630, column: 12, scope: !8018)
!8023 = !DILocation(line: 629, column: 7, scope: !8000)
!8024 = !DILocation(line: 631, column: 38, scope: !8018)
!8025 = !DILocation(line: 631, column: 42, scope: !8018)
!8026 = !DILocation(line: 631, column: 4, scope: !8018)
!8027 = !DILocation(line: 632, column: 2, scope: !8000)
!8028 = !DILocation(line: 633, column: 1, scope: !7980)
!8029 = distinct !DISubprogram(name: "acpi_ec_write_cmd", scope: !3, file: !3, line: 299, type: !6455, scopeLine: 300, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !372)
!8030 = !DILocalVariable(name: "ec", arg: 1, scope: !8029, file: !3, line: 299, type: !330)
!8031 = !DILocation(line: 299, column: 54, scope: !8029)
!8032 = !DILocalVariable(name: "command", arg: 2, scope: !8029, file: !3, line: 299, type: !266)
!8033 = !DILocation(line: 299, column: 61, scope: !8029)
!8034 = !DILocation(line: 301, column: 2, scope: !8035)
!8035 = distinct !DILexicalBlock(scope: !8036, file: !3, line: 301, column: 2)
!8036 = distinct !DILexicalBlock(scope: !8029, file: !3, line: 301, column: 2)
!8037 = !DILocation(line: 301, column: 2, scope: !8036)
!8038 = !DILocation(line: 302, column: 7, scope: !8029)
!8039 = !DILocation(line: 302, column: 16, scope: !8029)
!8040 = !DILocation(line: 302, column: 20, scope: !8029)
!8041 = !DILocation(line: 302, column: 2, scope: !8029)
!8042 = !DILocation(line: 303, column: 18, scope: !8029)
!8043 = !DILocation(line: 303, column: 2, scope: !8029)
!8044 = !DILocation(line: 303, column: 6, scope: !8029)
!8045 = !DILocation(line: 303, column: 16, scope: !8029)
!8046 = !DILocation(line: 304, column: 1, scope: !8029)
!8047 = distinct !DISubprogram(name: "acpi_ec_mask_events", scope: !3, file: !3, line: 417, type: !6720, scopeLine: 418, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !372)
!8048 = !DILocalVariable(name: "ec", arg: 1, scope: !8047, file: !3, line: 417, type: !330)
!8049 = !DILocation(line: 417, column: 49, scope: !8047)
!8050 = !DILocation(line: 419, column: 41, scope: !8051)
!8051 = distinct !DILexicalBlock(scope: !8047, file: !3, line: 419, column: 6)
!8052 = !DILocation(line: 419, column: 45, scope: !8051)
!8053 = !DILocation(line: 419, column: 7, scope: !8051)
!8054 = !DILocation(line: 419, column: 6, scope: !8047)
!8055 = !DILocation(line: 420, column: 7, scope: !8056)
!8056 = distinct !DILexicalBlock(scope: !8057, file: !3, line: 420, column: 7)
!8057 = distinct !DILexicalBlock(scope: !8051, file: !3, line: 419, column: 53)
!8058 = !DILocation(line: 420, column: 11, scope: !8056)
!8059 = !DILocation(line: 420, column: 15, scope: !8056)
!8060 = !DILocation(line: 420, column: 7, scope: !8057)
!8061 = !DILocation(line: 421, column: 24, scope: !8056)
!8062 = !DILocation(line: 421, column: 4, scope: !8056)
!8063 = !DILocation(line: 423, column: 23, scope: !8056)
!8064 = !DILocation(line: 423, column: 27, scope: !8056)
!8065 = !DILocation(line: 423, column: 4, scope: !8056)
!8066 = !DILocation(line: 425, column: 3, scope: !8067)
!8067 = distinct !DILexicalBlock(scope: !8068, file: !3, line: 425, column: 3)
!8068 = distinct !DILexicalBlock(scope: !8057, file: !3, line: 425, column: 3)
!8069 = !DILocation(line: 425, column: 3, scope: !8068)
!8070 = !DILocation(line: 426, column: 36, scope: !8057)
!8071 = !DILocation(line: 426, column: 40, scope: !8057)
!8072 = !DILocation(line: 426, column: 3, scope: !8057)
!8073 = !DILocation(line: 427, column: 2, scope: !8057)
!8074 = !DILocation(line: 428, column: 1, scope: !8047)
!8075 = distinct !DISubprogram(name: "acpi_ec_submit_query", scope: !3, file: !3, line: 462, type: !6720, scopeLine: 463, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !372)
!8076 = !DILocalVariable(name: "ec", arg: 1, scope: !8075, file: !3, line: 462, type: !330)
!8077 = !DILocation(line: 462, column: 50, scope: !8075)
!8078 = !DILocation(line: 464, column: 22, scope: !8075)
!8079 = !DILocation(line: 464, column: 2, scope: !8075)
!8080 = !DILocation(line: 465, column: 29, scope: !8081)
!8081 = distinct !DILexicalBlock(scope: !8075, file: !3, line: 465, column: 6)
!8082 = !DILocation(line: 465, column: 7, scope: !8081)
!8083 = !DILocation(line: 465, column: 6, scope: !8075)
!8084 = !DILocation(line: 466, column: 3, scope: !8081)
!8085 = !DILocation(line: 467, column: 49, scope: !8086)
!8086 = distinct !DILexicalBlock(scope: !8075, file: !3, line: 467, column: 6)
!8087 = !DILocation(line: 467, column: 53, scope: !8086)
!8088 = !DILocation(line: 467, column: 7, scope: !8086)
!8089 = !DILocation(line: 467, column: 6, scope: !8075)
!8090 = !DILocation(line: 468, column: 3, scope: !8091)
!8091 = distinct !DILexicalBlock(scope: !8092, file: !3, line: 468, column: 3)
!8092 = distinct !DILexicalBlock(scope: !8093, file: !3, line: 468, column: 3)
!8093 = distinct !DILexicalBlock(scope: !8086, file: !3, line: 467, column: 61)
!8094 = !DILocation(line: 468, column: 3, scope: !8092)
!8095 = !DILocation(line: 470, column: 3, scope: !8093)
!8096 = !DILocation(line: 470, column: 7, scope: !8093)
!8097 = !DILocation(line: 470, column: 25, scope: !8093)
!8098 = !DILocation(line: 471, column: 14, scope: !8093)
!8099 = !DILocation(line: 471, column: 22, scope: !8093)
!8100 = !DILocation(line: 471, column: 26, scope: !8093)
!8101 = !DILocation(line: 471, column: 3, scope: !8093)
!8102 = !DILocation(line: 472, column: 2, scope: !8093)
!8103 = !DILocation(line: 473, column: 1, scope: !8075)
!8104 = distinct !DISubprogram(name: "inb", scope: !8105, file: !8105, line: 334, type: !8106, scopeLine: 334, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !372)
!8105 = !DIFile(filename: "./arch/x86/include/asm/io.h", directory: "/home/lizy2001/genbc/linux")
!8106 = !DISubroutineType(types: !8107)
!8107 = !{!268, !294}
!8108 = !DILocalVariable(name: "port", arg: 1, scope: !8104, file: !8105, line: 334, type: !294)
!8109 = !DILocation(line: 334, column: 1, scope: !8104)
!8110 = !DILocalVariable(name: "value", scope: !8104, file: !8105, line: 334, type: !268)
!8111 = !{i32 -2141104126}
!8112 = distinct !DISubprogram(name: "kasan_check_write", scope: !7556, file: !7556, line: 38, type: !7557, scopeLine: 39, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !372)
!8113 = !DILocalVariable(name: "p", arg: 1, scope: !8112, file: !7556, line: 38, type: !7522)
!8114 = !DILocation(line: 38, column: 59, scope: !8112)
!8115 = !DILocalVariable(name: "size", arg: 2, scope: !8112, file: !7556, line: 38, type: !7)
!8116 = !DILocation(line: 38, column: 75, scope: !8112)
!8117 = !DILocation(line: 40, column: 2, scope: !8112)
!8118 = distinct !DISubprogram(name: "test_and_clear_bit", scope: !7882, file: !7882, line: 81, type: !8119, scopeLine: 82, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !372)
!8119 = !DISubroutineType(types: !8120)
!8120 = !{!339, !31, !7885}
!8121 = !DILocalVariable(name: "nr", arg: 1, scope: !8122, file: !7504, line: 160, type: !31)
!8122 = distinct !DISubprogram(name: "arch_test_and_clear_bit", scope: !7504, file: !7504, line: 160, type: !8119, scopeLine: 161, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !372)
!8123 = !DILocation(line: 160, column: 30, scope: !8122, inlinedAt: !8124)
!8124 = distinct !DILocation(line: 84, column: 9, scope: !8118)
!8125 = !DILocalVariable(name: "addr", arg: 2, scope: !8122, file: !7504, line: 160, type: !7885)
!8126 = !DILocation(line: 160, column: 58, scope: !8122, inlinedAt: !8124)
!8127 = !DILocalVariable(name: "c", scope: !8128, file: !7504, line: 162, type: !339)
!8128 = distinct !DILexicalBlock(scope: !8122, file: !7504, line: 162, column: 9)
!8129 = !DILocation(line: 162, column: 9, scope: !8128, inlinedAt: !8124)
!8130 = !DILocalVariable(name: "v", arg: 1, scope: !8131, file: !7519, line: 99, type: !7522)
!8131 = distinct !DISubprogram(name: "instrument_atomic_read_write", scope: !7519, file: !7519, line: 99, type: !7520, scopeLine: 100, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !372)
!8132 = !DILocation(line: 99, column: 79, scope: !8131, inlinedAt: !8133)
!8133 = distinct !DILocation(line: 83, column: 2, scope: !8118)
!8134 = !DILocalVariable(name: "size", arg: 2, scope: !8131, file: !7519, line: 99, type: !550)
!8135 = !DILocation(line: 99, column: 89, scope: !8131, inlinedAt: !8133)
!8136 = !DILocalVariable(name: "nr", arg: 1, scope: !8118, file: !7882, line: 81, type: !31)
!8137 = !DILocation(line: 81, column: 44, scope: !8118)
!8138 = !DILocalVariable(name: "addr", arg: 2, scope: !8118, file: !7882, line: 81, type: !7885)
!8139 = !DILocation(line: 81, column: 72, scope: !8118)
!8140 = !DILocation(line: 83, column: 31, scope: !8118)
!8141 = !DILocation(line: 83, column: 38, scope: !8118)
!8142 = !DILocation(line: 83, column: 36, scope: !8118)
!8143 = !DILocation(line: 101, column: 20, scope: !8131, inlinedAt: !8133)
!8144 = !DILocation(line: 101, column: 23, scope: !8131, inlinedAt: !8133)
!8145 = !DILocation(line: 101, column: 2, scope: !8131, inlinedAt: !8133)
!8146 = !DILocation(line: 102, column: 2, scope: !8131, inlinedAt: !8133)
!8147 = !DILocation(line: 84, column: 33, scope: !8118)
!8148 = !DILocation(line: 84, column: 37, scope: !8118)
!8149 = !{i32 -2147148073, i32 -2147147977}
!8150 = !DILocation(line: 84, column: 2, scope: !8118)
!8151 = distinct !DISubprogram(name: "outb", scope: !8105, file: !8105, line: 334, type: !8152, scopeLine: 334, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !372)
!8152 = !DISubroutineType(types: !8153)
!8153 = !{null, !268, !294}
!8154 = !DILocalVariable(name: "value", arg: 1, scope: !8151, file: !8105, line: 334, type: !268)
!8155 = !DILocation(line: 334, column: 1, scope: !8151)
!8156 = !DILocalVariable(name: "port", arg: 2, scope: !8151, file: !8105, line: 334, type: !294)
!8157 = !{i32 -2141104328}
!8158 = distinct !DISubprogram(name: "set_bit", scope: !7882, file: !7882, line: 26, type: !7883, scopeLine: 27, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !372)
!8159 = !DILocalVariable(name: "nr", arg: 1, scope: !8160, file: !7504, line: 52, type: !31)
!8160 = distinct !DISubprogram(name: "arch_set_bit", scope: !7504, file: !7504, line: 52, type: !7883, scopeLine: 53, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !372)
!8161 = !DILocation(line: 52, column: 19, scope: !8160, inlinedAt: !8162)
!8162 = distinct !DILocation(line: 29, column: 2, scope: !8158)
!8163 = !DILocalVariable(name: "addr", arg: 2, scope: !8160, file: !7504, line: 52, type: !7885)
!8164 = !DILocation(line: 52, column: 47, scope: !8160, inlinedAt: !8162)
!8165 = !DILocation(line: 84, column: 74, scope: !7893, inlinedAt: !8166)
!8166 = distinct !DILocation(line: 28, column: 2, scope: !8158)
!8167 = !DILocation(line: 84, column: 84, scope: !7893, inlinedAt: !8166)
!8168 = !DILocalVariable(name: "nr", arg: 1, scope: !8158, file: !7882, line: 26, type: !31)
!8169 = !DILocation(line: 26, column: 33, scope: !8158)
!8170 = !DILocalVariable(name: "addr", arg: 2, scope: !8158, file: !7882, line: 26, type: !7885)
!8171 = !DILocation(line: 26, column: 61, scope: !8158)
!8172 = !DILocation(line: 28, column: 26, scope: !8158)
!8173 = !DILocation(line: 28, column: 33, scope: !8158)
!8174 = !DILocation(line: 28, column: 31, scope: !8158)
!8175 = !DILocation(line: 86, column: 20, scope: !7893, inlinedAt: !8166)
!8176 = !DILocation(line: 86, column: 23, scope: !7893, inlinedAt: !8166)
!8177 = !DILocation(line: 86, column: 2, scope: !7893, inlinedAt: !8166)
!8178 = !DILocation(line: 87, column: 2, scope: !7893, inlinedAt: !8166)
!8179 = !DILocation(line: 29, column: 15, scope: !8158)
!8180 = !DILocation(line: 29, column: 19, scope: !8158)
!8181 = !DILocation(line: 54, column: 27, scope: !8182, inlinedAt: !8162)
!8182 = distinct !DILexicalBlock(scope: !8160, file: !7504, line: 54, column: 6)
!8183 = !DILocation(line: 54, column: 6, scope: !8182, inlinedAt: !8162)
!8184 = !DILocation(line: 54, column: 6, scope: !8160, inlinedAt: !8162)
!8185 = !DILocation(line: 56, column: 6, scope: !8186, inlinedAt: !8162)
!8186 = distinct !DILexicalBlock(scope: !8182, file: !7504, line: 54, column: 32)
!8187 = !DILocation(line: 57, column: 12, scope: !8186, inlinedAt: !8162)
!8188 = !DILocation(line: 55, column: 3, scope: !8186, inlinedAt: !8162)
!8189 = !{i32 -2147154471}
!8190 = !DILocation(line: 59, column: 2, scope: !8186, inlinedAt: !8162)
!8191 = !DILocation(line: 61, column: 8, scope: !8192, inlinedAt: !8162)
!8192 = distinct !DILexicalBlock(scope: !8182, file: !7504, line: 59, column: 9)
!8193 = !DILocation(line: 61, column: 32, scope: !8192, inlinedAt: !8162)
!8194 = !DILocation(line: 60, column: 3, scope: !8192, inlinedAt: !8162)
!8195 = !{i32 -2147154339}
!8196 = !DILocation(line: 30, column: 1, scope: !8158)
!8197 = distinct !DISubprogram(name: "acpi_ec_disable_gpe", scope: !3, file: !3, line: 365, type: !5858, scopeLine: 366, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !372)
!8198 = !DILocalVariable(name: "ec", arg: 1, scope: !8197, file: !3, line: 365, type: !330)
!8199 = !DILocation(line: 365, column: 56, scope: !8197)
!8200 = !DILocalVariable(name: "close", arg: 2, scope: !8197, file: !3, line: 365, type: !339)
!8201 = !DILocation(line: 365, column: 65, scope: !8197)
!8202 = !DILocation(line: 367, column: 6, scope: !8203)
!8203 = distinct !DILexicalBlock(scope: !8197, file: !3, line: 367, column: 6)
!8204 = !DILocation(line: 367, column: 6, scope: !8197)
!8205 = !DILocation(line: 368, column: 26, scope: !8203)
!8206 = !DILocation(line: 368, column: 30, scope: !8203)
!8207 = !DILocation(line: 368, column: 3, scope: !8203)
!8208 = !DILocation(line: 370, column: 3, scope: !8209)
!8209 = distinct !DILexicalBlock(scope: !8203, file: !3, line: 369, column: 7)
!8210 = !DILocation(line: 370, column: 3, scope: !8211)
!8211 = distinct !DILexicalBlock(scope: !8212, file: !3, line: 370, column: 3)
!8212 = distinct !DILexicalBlock(scope: !8209, file: !3, line: 370, column: 3)
!8213 = !DILocation(line: 370, column: 3, scope: !8212)
!8214 = !DILocation(line: 370, column: 3, scope: !8215)
!8215 = distinct !DILexicalBlock(scope: !8211, file: !3, line: 370, column: 3)
!8216 = !DILocation(line: 370, column: 3, scope: !8217)
!8217 = distinct !DILexicalBlock(scope: !8215, file: !3, line: 370, column: 3)
!8218 = !DILocation(line: 370, column: 3, scope: !8219)
!8219 = distinct !DILexicalBlock(scope: !8215, file: !3, line: 370, column: 3)
!8220 = !{i32 -2140269464, i32 -2140269435, i32 -2140269389, i32 -2140269331, i32 -2140269277, i32 -2140269223, i32 -2140269168, i32 -2140269137}
!8221 = !DILocation(line: 370, column: 3, scope: !8222)
!8222 = distinct !DILexicalBlock(scope: !8223, file: !3, line: 370, column: 3)
!8223 = distinct !DILexicalBlock(scope: !8215, file: !3, line: 370, column: 3)
!8224 = !{i32 -2140268697, i32 -2140268690, i32 -2140268636, i32 -2140268605, i32 -2140268575}
!8225 = !DILocation(line: 370, column: 3, scope: !8223)
!8226 = !DILocation(line: 371, column: 22, scope: !8209)
!8227 = !DILocation(line: 371, column: 26, scope: !8209)
!8228 = !DILocation(line: 371, column: 3, scope: !8209)
!8229 = !DILocation(line: 373, column: 1, scope: !8197)
!8230 = distinct !DISubprogram(name: "acpi_ec_event_enabled", scope: !3, file: !3, line: 242, type: !7197, scopeLine: 243, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !372)
!8231 = !DILocalVariable(name: "ec", arg: 1, scope: !8230, file: !3, line: 242, type: !330)
!8232 = !DILocation(line: 242, column: 51, scope: !8230)
!8233 = !DILocation(line: 249, column: 41, scope: !8234)
!8234 = distinct !DILexicalBlock(scope: !8230, file: !3, line: 249, column: 6)
!8235 = !DILocation(line: 249, column: 45, scope: !8234)
!8236 = !DILocation(line: 249, column: 7, scope: !8234)
!8237 = !DILocation(line: 249, column: 6, scope: !8230)
!8238 = !DILocation(line: 250, column: 3, scope: !8234)
!8239 = !DILocation(line: 260, column: 6, scope: !8240)
!8240 = distinct !DILexicalBlock(scope: !8230, file: !3, line: 260, column: 6)
!8241 = !DILocation(line: 260, column: 6, scope: !8230)
!8242 = !DILocation(line: 261, column: 26, scope: !8240)
!8243 = !DILocation(line: 261, column: 10, scope: !8240)
!8244 = !DILocation(line: 261, column: 3, scope: !8240)
!8245 = !DILocation(line: 263, column: 38, scope: !8240)
!8246 = !DILocation(line: 263, column: 42, scope: !8240)
!8247 = !DILocation(line: 263, column: 10, scope: !8240)
!8248 = !DILocation(line: 263, column: 3, scope: !8240)
!8249 = !DILocation(line: 264, column: 1, scope: !8230)
!8250 = distinct !DISubprogram(name: "test_and_set_bit", scope: !7882, file: !7882, line: 68, type: !8119, scopeLine: 69, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !372)
!8251 = !DILocalVariable(name: "nr", arg: 1, scope: !8252, file: !7504, line: 136, type: !31)
!8252 = distinct !DISubprogram(name: "arch_test_and_set_bit", scope: !7504, file: !7504, line: 136, type: !8119, scopeLine: 137, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !372)
!8253 = !DILocation(line: 136, column: 28, scope: !8252, inlinedAt: !8254)
!8254 = distinct !DILocation(line: 71, column: 9, scope: !8250)
!8255 = !DILocalVariable(name: "addr", arg: 2, scope: !8252, file: !7504, line: 136, type: !7885)
!8256 = !DILocation(line: 136, column: 56, scope: !8252, inlinedAt: !8254)
!8257 = !DILocalVariable(name: "c", scope: !8258, file: !7504, line: 138, type: !339)
!8258 = distinct !DILexicalBlock(scope: !8252, file: !7504, line: 138, column: 9)
!8259 = !DILocation(line: 138, column: 9, scope: !8258, inlinedAt: !8254)
!8260 = !DILocation(line: 99, column: 79, scope: !8131, inlinedAt: !8261)
!8261 = distinct !DILocation(line: 70, column: 2, scope: !8250)
!8262 = !DILocation(line: 99, column: 89, scope: !8131, inlinedAt: !8261)
!8263 = !DILocalVariable(name: "nr", arg: 1, scope: !8250, file: !7882, line: 68, type: !31)
!8264 = !DILocation(line: 68, column: 42, scope: !8250)
!8265 = !DILocalVariable(name: "addr", arg: 2, scope: !8250, file: !7882, line: 68, type: !7885)
!8266 = !DILocation(line: 68, column: 70, scope: !8250)
!8267 = !DILocation(line: 70, column: 31, scope: !8250)
!8268 = !DILocation(line: 70, column: 38, scope: !8250)
!8269 = !DILocation(line: 70, column: 36, scope: !8250)
!8270 = !DILocation(line: 101, column: 20, scope: !8131, inlinedAt: !8261)
!8271 = !DILocation(line: 101, column: 23, scope: !8131, inlinedAt: !8261)
!8272 = !DILocation(line: 101, column: 2, scope: !8131, inlinedAt: !8261)
!8273 = !DILocation(line: 102, column: 2, scope: !8131, inlinedAt: !8261)
!8274 = !DILocation(line: 71, column: 31, scope: !8250)
!8275 = !DILocation(line: 71, column: 35, scope: !8250)
!8276 = !{i32 -2147149985, i32 -2147149889}
!8277 = !DILocation(line: 71, column: 2, scope: !8250)
!8278 = distinct !DISubprogram(name: "queue_work", scope: !30, file: !30, line: 504, type: !8279, scopeLine: 506, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !372)
!8279 = !DISubroutineType(types: !8280)
!8280 = !{!339, !1296, !410}
!8281 = !DILocalVariable(name: "wq", arg: 1, scope: !8278, file: !30, line: 504, type: !1296)
!8282 = !DILocation(line: 504, column: 56, scope: !8278)
!8283 = !DILocalVariable(name: "work", arg: 2, scope: !8278, file: !30, line: 505, type: !410)
!8284 = !DILocation(line: 505, column: 30, scope: !8278)
!8285 = !DILocation(line: 507, column: 41, scope: !8278)
!8286 = !DILocation(line: 507, column: 45, scope: !8278)
!8287 = !DILocation(line: 507, column: 9, scope: !8278)
!8288 = !DILocation(line: 507, column: 2, scope: !8278)
!8289 = distinct !DISubprogram(name: "arch_local_irq_restore", scope: !7186, file: !7186, line: 651, type: !8290, scopeLine: 652, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !372)
!8290 = !DISubroutineType(types: !8291)
!8291 = !{null, !287}
!8292 = !DILocalVariable(name: "f", arg: 1, scope: !8289, file: !7186, line: 651, type: !287)
!8293 = !DILocation(line: 651, column: 65, scope: !8289)
!8294 = !DILocalVariable(name: "__edi", scope: !8295, file: !7186, line: 653, type: !287)
!8295 = distinct !DILexicalBlock(scope: !8289, file: !7186, line: 653, column: 2)
!8296 = !DILocation(line: 653, column: 2, scope: !8295)
!8297 = !DILocalVariable(name: "__esi", scope: !8295, file: !7186, line: 653, type: !287)
!8298 = !DILocalVariable(name: "__edx", scope: !8295, file: !7186, line: 653, type: !287)
!8299 = !DILocalVariable(name: "__ecx", scope: !8295, file: !7186, line: 653, type: !287)
!8300 = !DILocalVariable(name: "__eax", scope: !8295, file: !7186, line: 653, type: !287)
!8301 = !{i32 -2145728173, i32 -2145727423, i32 -2145727189, i32 -2145727138, i32 -2145727110, i32 -2145727085, i32 -2145727401, i32 -2145727388, i32 -2145726950, i32 -2145726831, i32 -2145727296, i32 -2145727269, i32 -2145727241, i32 -2145727211}
!8302 = !DILocation(line: 654, column: 1, scope: !8289)
!8303 = distinct !DISubprogram(name: "ec_guard", scope: !3, file: !3, line: 723, type: !7231, scopeLine: 724, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !372)
!8304 = !DILocalVariable(name: "u", arg: 1, scope: !8305, file: !7257, line: 410, type: !1752)
!8305 = distinct !DISubprogram(name: "usecs_to_jiffies", scope: !7257, file: !7257, line: 410, type: !7258, scopeLine: 411, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !372)
!8306 = !DILocation(line: 410, column: 74, scope: !8305, inlinedAt: !8307)
!8307 = distinct !DILocation(line: 725, column: 24, scope: !8303)
!8308 = !DILocalVariable(name: "ec", arg: 1, scope: !8303, file: !3, line: 723, type: !330)
!8309 = !DILocation(line: 723, column: 37, scope: !8303)
!8310 = !DILocalVariable(name: "guard", scope: !8303, file: !3, line: 725, type: !287)
!8311 = !DILocation(line: 725, column: 16, scope: !8303)
!8312 = !DILocation(line: 725, column: 41, scope: !8303)
!8313 = !DILocation(line: 725, column: 45, scope: !8303)
!8314 = !DILocation(line: 412, column: 27, scope: !8315, inlinedAt: !8307)
!8315 = distinct !DILexicalBlock(scope: !8305, file: !7257, line: 412, column: 6)
!8316 = !DILocation(line: 412, column: 6, scope: !8315, inlinedAt: !8307)
!8317 = !DILocation(line: 412, column: 6, scope: !8305, inlinedAt: !8307)
!8318 = !DILocation(line: 413, column: 7, scope: !8319, inlinedAt: !8307)
!8319 = distinct !DILexicalBlock(scope: !8320, file: !7257, line: 413, column: 7)
!8320 = distinct !DILexicalBlock(scope: !8315, file: !7257, line: 412, column: 31)
!8321 = !DILocation(line: 413, column: 11, scope: !8319, inlinedAt: !8307)
!8322 = !DILocation(line: 413, column: 9, scope: !8319, inlinedAt: !8307)
!8323 = !DILocation(line: 413, column: 7, scope: !8320, inlinedAt: !8307)
!8324 = !DILocation(line: 414, column: 4, scope: !8319, inlinedAt: !8307)
!8325 = !DILocation(line: 415, column: 28, scope: !8320, inlinedAt: !8307)
!8326 = !DILocation(line: 415, column: 10, scope: !8320, inlinedAt: !8307)
!8327 = !DILocation(line: 415, column: 3, scope: !8320, inlinedAt: !8307)
!8328 = !DILocation(line: 417, column: 29, scope: !8329, inlinedAt: !8307)
!8329 = distinct !DILexicalBlock(scope: !8315, file: !7257, line: 416, column: 9)
!8330 = !DILocation(line: 417, column: 10, scope: !8329, inlinedAt: !8307)
!8331 = !DILocation(line: 417, column: 3, scope: !8329, inlinedAt: !8307)
!8332 = !DILocation(line: 419, column: 1, scope: !8305, inlinedAt: !8307)
!8333 = !DILocalVariable(name: "timeout", scope: !8303, file: !3, line: 726, type: !287)
!8334 = !DILocation(line: 726, column: 16, scope: !8303)
!8335 = !DILocation(line: 726, column: 26, scope: !8303)
!8336 = !DILocation(line: 726, column: 30, scope: !8303)
!8337 = !DILocation(line: 726, column: 42, scope: !8303)
!8338 = !DILocation(line: 726, column: 40, scope: !8303)
!8339 = !DILocation(line: 729, column: 2, scope: !8303)
!8340 = !DILocation(line: 730, column: 7, scope: !8341)
!8341 = distinct !DILexicalBlock(scope: !8342, file: !3, line: 730, column: 7)
!8342 = distinct !DILexicalBlock(scope: !8303, file: !3, line: 729, column: 5)
!8343 = !DILocation(line: 730, column: 11, scope: !8341)
!8344 = !DILocation(line: 730, column: 7, scope: !8342)
!8345 = !DILocation(line: 732, column: 33, scope: !8346)
!8346 = distinct !DILexicalBlock(scope: !8347, file: !3, line: 732, column: 8)
!8347 = distinct !DILexicalBlock(scope: !8341, file: !3, line: 730, column: 25)
!8348 = !DILocation(line: 732, column: 8, scope: !8346)
!8349 = !DILocation(line: 732, column: 8, scope: !8347)
!8350 = !DILocation(line: 733, column: 5, scope: !8346)
!8351 = !DILocation(line: 734, column: 4, scope: !8352)
!8352 = distinct !DILexicalBlock(scope: !8353, file: !3, line: 734, column: 4)
!8353 = distinct !DILexicalBlock(scope: !8354, file: !3, line: 734, column: 4)
!8354 = distinct !DILexicalBlock(scope: !8347, file: !3, line: 734, column: 4)
!8355 = !DILocation(line: 735, column: 3, scope: !8347)
!8356 = !DILocation(line: 746, column: 31, scope: !8357)
!8357 = distinct !DILexicalBlock(scope: !8358, file: !3, line: 746, column: 8)
!8358 = distinct !DILexicalBlock(scope: !8341, file: !3, line: 735, column: 10)
!8359 = !DILocation(line: 746, column: 9, scope: !8357)
!8360 = !DILocation(line: 746, column: 35, scope: !8357)
!8361 = !DILocation(line: 747, column: 29, scope: !8357)
!8362 = !DILocation(line: 747, column: 9, scope: !8357)
!8363 = !DILocation(line: 746, column: 8, scope: !8358)
!8364 = !DILocation(line: 748, column: 5, scope: !8357)
!8365 = !DILocalVariable(name: "__ret", scope: !8366, file: !3, line: 749, type: !31)
!8366 = distinct !DILexicalBlock(scope: !8367, file: !3, line: 749, column: 8)
!8367 = distinct !DILexicalBlock(scope: !8358, file: !3, line: 749, column: 8)
!8368 = !DILocation(line: 749, column: 8, scope: !8366)
!8369 = !DILocation(line: 749, column: 8, scope: !8370)
!8370 = distinct !DILexicalBlock(scope: !8366, file: !3, line: 749, column: 8)
!8371 = !DILocation(line: 749, column: 8, scope: !8372)
!8372 = distinct !DILexicalBlock(scope: !8370, file: !3, line: 749, column: 8)
!8373 = !DILocalVariable(name: "__cond", scope: !8374, file: !3, line: 749, type: !339)
!8374 = distinct !DILexicalBlock(scope: !8375, file: !3, line: 749, column: 8)
!8375 = distinct !DILexicalBlock(scope: !8366, file: !3, line: 749, column: 8)
!8376 = !DILocation(line: 749, column: 8, scope: !8374)
!8377 = !DILocation(line: 749, column: 8, scope: !8378)
!8378 = distinct !DILexicalBlock(scope: !8374, file: !3, line: 749, column: 8)
!8379 = !DILocation(line: 749, column: 8, scope: !8375)
!8380 = !DILocalVariable(name: "__wq_entry", scope: !8381, file: !3, line: 749, type: !1139)
!8381 = distinct !DILexicalBlock(scope: !8375, file: !3, line: 749, column: 8)
!8382 = !DILocation(line: 749, column: 8, scope: !8381)
!8383 = !DILocalVariable(name: "__ret", scope: !8381, file: !3, line: 749, type: !31)
!8384 = !DILocalVariable(name: "__int", scope: !8385, file: !3, line: 749, type: !31)
!8385 = distinct !DILexicalBlock(scope: !8386, file: !3, line: 749, column: 8)
!8386 = distinct !DILexicalBlock(scope: !8387, file: !3, line: 749, column: 8)
!8387 = distinct !DILexicalBlock(scope: !8381, file: !3, line: 749, column: 8)
!8388 = !DILocation(line: 749, column: 8, scope: !8385)
!8389 = !DILocalVariable(name: "__cond", scope: !8390, file: !3, line: 749, type: !339)
!8390 = distinct !DILexicalBlock(scope: !8391, file: !3, line: 749, column: 8)
!8391 = distinct !DILexicalBlock(scope: !8385, file: !3, line: 749, column: 8)
!8392 = !DILocation(line: 749, column: 8, scope: !8390)
!8393 = !DILocation(line: 749, column: 8, scope: !8394)
!8394 = distinct !DILexicalBlock(scope: !8390, file: !3, line: 749, column: 8)
!8395 = !DILocation(line: 749, column: 8, scope: !8391)
!8396 = !DILocation(line: 749, column: 8, scope: !8386)
!8397 = distinct !{!8397, !8398, !8398}
!8398 = !DILocation(line: 749, column: 8, scope: !8387)
!8399 = !DILabel(scope: !8381, name: "__out", file: !3, line: 749)
!8400 = !DILocation(line: 749, column: 8, scope: !8367)
!8401 = !DILocation(line: 749, column: 8, scope: !8358)
!8402 = !DILocation(line: 752, column: 5, scope: !8367)
!8403 = !DILocation(line: 754, column: 2, scope: !8342)
!8404 = !DILocation(line: 754, column: 11, scope: !8303)
!8405 = distinct !{!8405, !8339, !8406}
!8406 = !DILocation(line: 754, column: 40, scope: !8303)
!8407 = !DILocation(line: 755, column: 2, scope: !8303)
!8408 = !DILocation(line: 756, column: 1, scope: !8303)
!8409 = distinct !DISubprogram(name: "_msecs_to_jiffies", scope: !7257, file: !7257, line: 308, type: !7258, scopeLine: 309, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !372)
!8410 = !DILocalVariable(name: "m", arg: 1, scope: !8409, file: !7257, line: 308, type: !1752)
!8411 = !DILocation(line: 308, column: 66, scope: !8409)
!8412 = !DILocation(line: 310, column: 10, scope: !8409)
!8413 = !DILocation(line: 310, column: 12, scope: !8409)
!8414 = !DILocation(line: 310, column: 34, scope: !8409)
!8415 = !DILocation(line: 310, column: 39, scope: !8409)
!8416 = !DILocation(line: 310, column: 2, scope: !8409)
!8417 = distinct !DISubprogram(name: "ec_transaction_completed", scope: !3, file: !3, line: 607, type: !7231, scopeLine: 608, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !372)
!8418 = !DILocation(line: 407, column: 64, scope: !5876, inlinedAt: !8419)
!8419 = distinct !DILocation(line: 615, column: 2, scope: !8417)
!8420 = !DILocation(line: 407, column: 84, scope: !5876, inlinedAt: !8419)
!8421 = !DILocation(line: 327, column: 67, scope: !5861, inlinedAt: !8422)
!8422 = distinct !DILocation(line: 612, column: 2, scope: !8423)
!8423 = distinct !DILexicalBlock(scope: !8424, file: !3, line: 612, column: 2)
!8424 = distinct !DILexicalBlock(scope: !8425, file: !3, line: 612, column: 2)
!8425 = distinct !DILexicalBlock(scope: !8426, file: !3, line: 612, column: 2)
!8426 = distinct !DILexicalBlock(scope: !8427, file: !3, line: 612, column: 2)
!8427 = distinct !DILexicalBlock(scope: !8417, file: !3, line: 612, column: 2)
!8428 = !DILocalVariable(name: "ec", arg: 1, scope: !8417, file: !3, line: 607, type: !330)
!8429 = !DILocation(line: 607, column: 53, scope: !8417)
!8430 = !DILocalVariable(name: "flags", scope: !8417, file: !3, line: 609, type: !287)
!8431 = !DILocation(line: 609, column: 16, scope: !8417)
!8432 = !DILocalVariable(name: "ret", scope: !8417, file: !3, line: 610, type: !294)
!8433 = !DILocation(line: 610, column: 6, scope: !8417)
!8434 = !DILocation(line: 612, column: 2, scope: !8417)
!8435 = !DILocation(line: 612, column: 2, scope: !8427)
!8436 = !DILocalVariable(name: "__dummy", scope: !8437, file: !3, line: 612, type: !287)
!8437 = distinct !DILexicalBlock(scope: !8426, file: !3, line: 612, column: 2)
!8438 = !DILocation(line: 612, column: 2, scope: !8437)
!8439 = !DILocalVariable(name: "__dummy2", scope: !8437, file: !3, line: 612, type: !287)
!8440 = !DILocation(line: 612, column: 2, scope: !8426)
!8441 = !DILocation(line: 612, column: 2, scope: !8425)
!8442 = !DILocation(line: 612, column: 2, scope: !8443)
!8443 = distinct !DILexicalBlock(scope: !8425, file: !3, line: 612, column: 2)
!8444 = !DILocalVariable(name: "__dummy", scope: !8445, file: !3, line: 612, type: !287)
!8445 = distinct !DILexicalBlock(scope: !8446, file: !3, line: 612, column: 2)
!8446 = distinct !DILexicalBlock(scope: !8443, file: !3, line: 612, column: 2)
!8447 = !DILocation(line: 612, column: 2, scope: !8445)
!8448 = !DILocalVariable(name: "__dummy2", scope: !8445, file: !3, line: 612, type: !287)
!8449 = !DILocation(line: 612, column: 2, scope: !8446)
!8450 = !DILocation(line: 612, column: 2, scope: !8424)
!8451 = !{i32 -2140259457}
!8452 = !DILocation(line: 612, column: 2, scope: !8423)
!8453 = !DILocation(line: 329, column: 10, scope: !5861, inlinedAt: !8422)
!8454 = !DILocation(line: 329, column: 16, scope: !5861, inlinedAt: !8422)
!8455 = !DILocation(line: 613, column: 6, scope: !8456)
!8456 = distinct !DILexicalBlock(scope: !8417, file: !3, line: 613, column: 6)
!8457 = !DILocation(line: 613, column: 10, scope: !8456)
!8458 = !DILocation(line: 613, column: 15, scope: !8456)
!8459 = !DILocation(line: 613, column: 19, scope: !8456)
!8460 = !DILocation(line: 613, column: 23, scope: !8456)
!8461 = !DILocation(line: 613, column: 29, scope: !8456)
!8462 = !DILocation(line: 613, column: 35, scope: !8456)
!8463 = !DILocation(line: 613, column: 6, scope: !8417)
!8464 = !DILocation(line: 614, column: 7, scope: !8456)
!8465 = !DILocation(line: 614, column: 3, scope: !8456)
!8466 = !DILocation(line: 615, column: 26, scope: !8417)
!8467 = !DILocation(line: 615, column: 30, scope: !8417)
!8468 = !DILocation(line: 615, column: 36, scope: !8417)
!8469 = !DILocation(line: 409, column: 2, scope: !5934, inlinedAt: !8419)
!8470 = !DILocation(line: 409, column: 2, scope: !5939, inlinedAt: !8419)
!8471 = !DILocation(line: 409, column: 2, scope: !5940, inlinedAt: !8419)
!8472 = !DILocation(line: 409, column: 2, scope: !5947, inlinedAt: !8419)
!8473 = !DILocation(line: 409, column: 2, scope: !5950, inlinedAt: !8419)
!8474 = !DILocation(line: 616, column: 9, scope: !8417)
!8475 = !DILocation(line: 616, column: 2, scope: !8417)
!8476 = distinct !DISubprogram(name: "ec_transaction_polled", scope: !3, file: !3, line: 595, type: !7231, scopeLine: 596, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !372)
!8477 = !DILocation(line: 407, column: 64, scope: !5876, inlinedAt: !8478)
!8478 = distinct !DILocation(line: 603, column: 2, scope: !8476)
!8479 = !DILocation(line: 407, column: 84, scope: !5876, inlinedAt: !8478)
!8480 = !DILocation(line: 327, column: 67, scope: !5861, inlinedAt: !8481)
!8481 = distinct !DILocation(line: 600, column: 2, scope: !8482)
!8482 = distinct !DILexicalBlock(scope: !8483, file: !3, line: 600, column: 2)
!8483 = distinct !DILexicalBlock(scope: !8484, file: !3, line: 600, column: 2)
!8484 = distinct !DILexicalBlock(scope: !8485, file: !3, line: 600, column: 2)
!8485 = distinct !DILexicalBlock(scope: !8486, file: !3, line: 600, column: 2)
!8486 = distinct !DILexicalBlock(scope: !8476, file: !3, line: 600, column: 2)
!8487 = !DILocalVariable(name: "ec", arg: 1, scope: !8476, file: !3, line: 595, type: !330)
!8488 = !DILocation(line: 595, column: 50, scope: !8476)
!8489 = !DILocalVariable(name: "flags", scope: !8476, file: !3, line: 597, type: !287)
!8490 = !DILocation(line: 597, column: 16, scope: !8476)
!8491 = !DILocalVariable(name: "ret", scope: !8476, file: !3, line: 598, type: !294)
!8492 = !DILocation(line: 598, column: 6, scope: !8476)
!8493 = !DILocation(line: 600, column: 2, scope: !8476)
!8494 = !DILocation(line: 600, column: 2, scope: !8486)
!8495 = !DILocalVariable(name: "__dummy", scope: !8496, file: !3, line: 600, type: !287)
!8496 = distinct !DILexicalBlock(scope: !8485, file: !3, line: 600, column: 2)
!8497 = !DILocation(line: 600, column: 2, scope: !8496)
!8498 = !DILocalVariable(name: "__dummy2", scope: !8496, file: !3, line: 600, type: !287)
!8499 = !DILocation(line: 600, column: 2, scope: !8485)
!8500 = !DILocation(line: 600, column: 2, scope: !8484)
!8501 = !DILocation(line: 600, column: 2, scope: !8502)
!8502 = distinct !DILexicalBlock(scope: !8484, file: !3, line: 600, column: 2)
!8503 = !DILocalVariable(name: "__dummy", scope: !8504, file: !3, line: 600, type: !287)
!8504 = distinct !DILexicalBlock(scope: !8505, file: !3, line: 600, column: 2)
!8505 = distinct !DILexicalBlock(scope: !8502, file: !3, line: 600, column: 2)
!8506 = !DILocation(line: 600, column: 2, scope: !8504)
!8507 = !DILocalVariable(name: "__dummy2", scope: !8504, file: !3, line: 600, type: !287)
!8508 = !DILocation(line: 600, column: 2, scope: !8505)
!8509 = !DILocation(line: 600, column: 2, scope: !8483)
!8510 = !{i32 -2140260467}
!8511 = !DILocation(line: 600, column: 2, scope: !8482)
!8512 = !DILocation(line: 329, column: 10, scope: !5861, inlinedAt: !8481)
!8513 = !DILocation(line: 329, column: 16, scope: !5861, inlinedAt: !8481)
!8514 = !DILocation(line: 601, column: 6, scope: !8515)
!8515 = distinct !DILexicalBlock(scope: !8476, file: !3, line: 601, column: 6)
!8516 = !DILocation(line: 601, column: 10, scope: !8515)
!8517 = !DILocation(line: 601, column: 15, scope: !8515)
!8518 = !DILocation(line: 601, column: 19, scope: !8515)
!8519 = !DILocation(line: 601, column: 23, scope: !8515)
!8520 = !DILocation(line: 601, column: 29, scope: !8515)
!8521 = !DILocation(line: 601, column: 35, scope: !8515)
!8522 = !DILocation(line: 601, column: 6, scope: !8476)
!8523 = !DILocation(line: 602, column: 7, scope: !8515)
!8524 = !DILocation(line: 602, column: 3, scope: !8515)
!8525 = !DILocation(line: 603, column: 26, scope: !8476)
!8526 = !DILocation(line: 603, column: 30, scope: !8476)
!8527 = !DILocation(line: 603, column: 36, scope: !8476)
!8528 = !DILocation(line: 409, column: 2, scope: !5934, inlinedAt: !8478)
!8529 = !DILocation(line: 409, column: 2, scope: !5939, inlinedAt: !8478)
!8530 = !DILocation(line: 409, column: 2, scope: !5940, inlinedAt: !8478)
!8531 = !DILocation(line: 409, column: 2, scope: !5947, inlinedAt: !8478)
!8532 = !DILocation(line: 409, column: 2, scope: !5950, inlinedAt: !8478)
!8533 = !DILocation(line: 604, column: 9, scope: !8476)
!8534 = !DILocation(line: 604, column: 2, scope: !8476)
!8535 = distinct !DISubprogram(name: "acpi_ec_guard_event", scope: !3, file: !3, line: 566, type: !7197, scopeLine: 567, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !372)
!8536 = !DILocation(line: 407, column: 64, scope: !5876, inlinedAt: !8537)
!8537 = distinct !DILocation(line: 591, column: 2, scope: !8535)
!8538 = !DILocation(line: 407, column: 84, scope: !5876, inlinedAt: !8537)
!8539 = !DILocation(line: 327, column: 67, scope: !5861, inlinedAt: !8540)
!8540 = distinct !DILocation(line: 571, column: 2, scope: !8541)
!8541 = distinct !DILexicalBlock(scope: !8542, file: !3, line: 571, column: 2)
!8542 = distinct !DILexicalBlock(scope: !8543, file: !3, line: 571, column: 2)
!8543 = distinct !DILexicalBlock(scope: !8544, file: !3, line: 571, column: 2)
!8544 = distinct !DILexicalBlock(scope: !8545, file: !3, line: 571, column: 2)
!8545 = distinct !DILexicalBlock(scope: !8535, file: !3, line: 571, column: 2)
!8546 = !DILocalVariable(name: "ec", arg: 1, scope: !8535, file: !3, line: 566, type: !330)
!8547 = !DILocation(line: 566, column: 49, scope: !8535)
!8548 = !DILocalVariable(name: "guarded", scope: !8535, file: !3, line: 568, type: !339)
!8549 = !DILocation(line: 568, column: 7, scope: !8535)
!8550 = !DILocalVariable(name: "flags", scope: !8535, file: !3, line: 569, type: !287)
!8551 = !DILocation(line: 569, column: 16, scope: !8535)
!8552 = !DILocation(line: 571, column: 2, scope: !8535)
!8553 = !DILocation(line: 571, column: 2, scope: !8545)
!8554 = !DILocalVariable(name: "__dummy", scope: !8555, file: !3, line: 571, type: !287)
!8555 = distinct !DILexicalBlock(scope: !8544, file: !3, line: 571, column: 2)
!8556 = !DILocation(line: 571, column: 2, scope: !8555)
!8557 = !DILocalVariable(name: "__dummy2", scope: !8555, file: !3, line: 571, type: !287)
!8558 = !DILocation(line: 571, column: 2, scope: !8544)
!8559 = !DILocation(line: 571, column: 2, scope: !8543)
!8560 = !DILocation(line: 571, column: 2, scope: !8561)
!8561 = distinct !DILexicalBlock(scope: !8543, file: !3, line: 571, column: 2)
!8562 = !DILocalVariable(name: "__dummy", scope: !8563, file: !3, line: 571, type: !287)
!8563 = distinct !DILexicalBlock(scope: !8564, file: !3, line: 571, column: 2)
!8564 = distinct !DILexicalBlock(scope: !8561, file: !3, line: 571, column: 2)
!8565 = !DILocation(line: 571, column: 2, scope: !8563)
!8566 = !DILocalVariable(name: "__dummy2", scope: !8563, file: !3, line: 571, type: !287)
!8567 = !DILocation(line: 571, column: 2, scope: !8564)
!8568 = !DILocation(line: 571, column: 2, scope: !8542)
!8569 = !{i32 -2140261482}
!8570 = !DILocation(line: 571, column: 2, scope: !8541)
!8571 = !DILocation(line: 329, column: 10, scope: !5861, inlinedAt: !8540)
!8572 = !DILocation(line: 329, column: 16, scope: !5861, inlinedAt: !8540)
!8573 = !DILocation(line: 586, column: 6, scope: !8574)
!8574 = distinct !DILexicalBlock(scope: !8535, file: !3, line: 586, column: 6)
!8575 = !DILocation(line: 586, column: 24, scope: !8574)
!8576 = !DILocation(line: 586, column: 53, scope: !8574)
!8577 = !DILocation(line: 587, column: 6, scope: !8574)
!8578 = !DILocation(line: 587, column: 24, scope: !8574)
!8579 = !DILocation(line: 587, column: 52, scope: !8574)
!8580 = !DILocation(line: 588, column: 41, scope: !8574)
!8581 = !DILocation(line: 588, column: 45, scope: !8574)
!8582 = !DILocation(line: 588, column: 7, scope: !8574)
!8583 = !DILocation(line: 588, column: 52, scope: !8574)
!8584 = !DILocation(line: 589, column: 7, scope: !8574)
!8585 = !DILocation(line: 589, column: 11, scope: !8574)
!8586 = !DILocation(line: 589, column: 16, scope: !8574)
!8587 = !DILocation(line: 589, column: 19, scope: !8574)
!8588 = !DILocation(line: 589, column: 23, scope: !8574)
!8589 = !DILocation(line: 589, column: 29, scope: !8574)
!8590 = !DILocation(line: 589, column: 37, scope: !8574)
!8591 = !DILocation(line: 586, column: 6, scope: !8535)
!8592 = !DILocation(line: 590, column: 11, scope: !8574)
!8593 = !DILocation(line: 590, column: 3, scope: !8574)
!8594 = !DILocation(line: 591, column: 26, scope: !8535)
!8595 = !DILocation(line: 591, column: 30, scope: !8535)
!8596 = !DILocation(line: 591, column: 36, scope: !8535)
!8597 = !DILocation(line: 409, column: 2, scope: !5934, inlinedAt: !8537)
!8598 = !DILocation(line: 409, column: 2, scope: !5939, inlinedAt: !8537)
!8599 = !DILocation(line: 409, column: 2, scope: !5940, inlinedAt: !8537)
!8600 = !DILocation(line: 409, column: 2, scope: !5947, inlinedAt: !8537)
!8601 = !DILocation(line: 409, column: 2, scope: !5950, inlinedAt: !8537)
!8602 = !DILocation(line: 592, column: 9, scope: !8535)
!8603 = !DILocation(line: 592, column: 2, scope: !8535)
!8604 = distinct !DISubprogram(name: "_usecs_to_jiffies", scope: !7257, file: !7257, line: 376, type: !7258, scopeLine: 377, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !372)
!8605 = !DILocalVariable(name: "u", arg: 1, scope: !8604, file: !7257, line: 376, type: !1752)
!8606 = !DILocation(line: 376, column: 66, scope: !8604)
!8607 = !DILocation(line: 378, column: 10, scope: !8604)
!8608 = !DILocation(line: 378, column: 12, scope: !8604)
!8609 = !DILocation(line: 378, column: 34, scope: !8604)
!8610 = !DILocation(line: 378, column: 39, scope: !8604)
!8611 = !DILocation(line: 378, column: 2, scope: !8604)
!8612 = distinct !DISubprogram(name: "acpi_ec_flushed", scope: !3, file: !3, line: 266, type: !7197, scopeLine: 267, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !372)
!8613 = !DILocalVariable(name: "ec", arg: 1, scope: !8612, file: !3, line: 266, type: !330)
!8614 = !DILocation(line: 266, column: 45, scope: !8612)
!8615 = !DILocation(line: 268, column: 9, scope: !8612)
!8616 = !DILocation(line: 268, column: 13, scope: !8612)
!8617 = !DILocation(line: 268, column: 29, scope: !8612)
!8618 = !DILocation(line: 268, column: 2, scope: !8612)
!8619 = distinct !DISubprogram(name: "acpi_ec_stopped", scope: !3, file: !3, line: 959, type: !7197, scopeLine: 960, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !372)
!8620 = !DILocation(line: 407, column: 64, scope: !5876, inlinedAt: !8621)
!8621 = distinct !DILocation(line: 966, column: 2, scope: !8619)
!8622 = !DILocation(line: 407, column: 84, scope: !5876, inlinedAt: !8621)
!8623 = !DILocation(line: 327, column: 67, scope: !5861, inlinedAt: !8624)
!8624 = distinct !DILocation(line: 964, column: 2, scope: !8625)
!8625 = distinct !DILexicalBlock(scope: !8626, file: !3, line: 964, column: 2)
!8626 = distinct !DILexicalBlock(scope: !8627, file: !3, line: 964, column: 2)
!8627 = distinct !DILexicalBlock(scope: !8628, file: !3, line: 964, column: 2)
!8628 = distinct !DILexicalBlock(scope: !8629, file: !3, line: 964, column: 2)
!8629 = distinct !DILexicalBlock(scope: !8619, file: !3, line: 964, column: 2)
!8630 = !DILocalVariable(name: "ec", arg: 1, scope: !8619, file: !3, line: 959, type: !330)
!8631 = !DILocation(line: 959, column: 45, scope: !8619)
!8632 = !DILocalVariable(name: "flags", scope: !8619, file: !3, line: 961, type: !287)
!8633 = !DILocation(line: 961, column: 16, scope: !8619)
!8634 = !DILocalVariable(name: "flushed", scope: !8619, file: !3, line: 962, type: !339)
!8635 = !DILocation(line: 962, column: 7, scope: !8619)
!8636 = !DILocation(line: 964, column: 2, scope: !8619)
!8637 = !DILocation(line: 964, column: 2, scope: !8629)
!8638 = !DILocalVariable(name: "__dummy", scope: !8639, file: !3, line: 964, type: !287)
!8639 = distinct !DILexicalBlock(scope: !8628, file: !3, line: 964, column: 2)
!8640 = !DILocation(line: 964, column: 2, scope: !8639)
!8641 = !DILocalVariable(name: "__dummy2", scope: !8639, file: !3, line: 964, type: !287)
!8642 = !DILocation(line: 964, column: 2, scope: !8628)
!8643 = !DILocation(line: 964, column: 2, scope: !8627)
!8644 = !DILocation(line: 964, column: 2, scope: !8645)
!8645 = distinct !DILexicalBlock(scope: !8627, file: !3, line: 964, column: 2)
!8646 = !DILocalVariable(name: "__dummy", scope: !8647, file: !3, line: 964, type: !287)
!8647 = distinct !DILexicalBlock(scope: !8648, file: !3, line: 964, column: 2)
!8648 = distinct !DILexicalBlock(scope: !8645, file: !3, line: 964, column: 2)
!8649 = !DILocation(line: 964, column: 2, scope: !8647)
!8650 = !DILocalVariable(name: "__dummy2", scope: !8647, file: !3, line: 964, type: !287)
!8651 = !DILocation(line: 964, column: 2, scope: !8648)
!8652 = !DILocation(line: 964, column: 2, scope: !8626)
!8653 = !{i32 -2140242870}
!8654 = !DILocation(line: 964, column: 2, scope: !8625)
!8655 = !DILocation(line: 329, column: 10, scope: !5861, inlinedAt: !8624)
!8656 = !DILocation(line: 329, column: 16, scope: !5861, inlinedAt: !8624)
!8657 = !DILocation(line: 965, column: 28, scope: !8619)
!8658 = !DILocation(line: 965, column: 12, scope: !8619)
!8659 = !DILocation(line: 965, column: 10, scope: !8619)
!8660 = !DILocation(line: 966, column: 26, scope: !8619)
!8661 = !DILocation(line: 966, column: 30, scope: !8619)
!8662 = !DILocation(line: 966, column: 36, scope: !8619)
!8663 = !DILocation(line: 409, column: 2, scope: !5934, inlinedAt: !8621)
!8664 = !DILocation(line: 409, column: 2, scope: !5939, inlinedAt: !8621)
!8665 = !DILocation(line: 409, column: 2, scope: !5940, inlinedAt: !8621)
!8666 = !DILocation(line: 409, column: 2, scope: !5947, inlinedAt: !8621)
!8667 = !DILocation(line: 409, column: 2, scope: !5950, inlinedAt: !8621)
!8668 = !DILocation(line: 967, column: 9, scope: !8619)
!8669 = !DILocation(line: 967, column: 2, scope: !8619)
!8670 = distinct !DISubprogram(name: "__acpi_ec_disable_event", scope: !3, file: !3, line: 494, type: !6720, scopeLine: 495, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !372)
!8671 = !DILocalVariable(name: "ec", arg: 1, scope: !8670, file: !3, line: 494, type: !330)
!8672 = !DILocation(line: 494, column: 60, scope: !8670)
!8673 = !DILocation(line: 496, column: 50, scope: !8674)
!8674 = distinct !DILexicalBlock(scope: !8670, file: !3, line: 496, column: 6)
!8675 = !DILocation(line: 496, column: 54, scope: !8674)
!8676 = !DILocation(line: 496, column: 6, scope: !8674)
!8677 = !DILocation(line: 496, column: 6, scope: !8670)
!8678 = !DILocation(line: 497, column: 3, scope: !8674)
!8679 = !DILocation(line: 498, column: 1, scope: !8670)
!8680 = distinct !DISubprogram(name: "get_order", scope: !8681, file: !8681, line: 29, type: !8682, scopeLine: 30, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !372)
!8681 = !DIFile(filename: "./include/asm-generic/getorder.h", directory: "/home/lizy2001/genbc/linux")
!8682 = !DISubroutineType(types: !8683)
!8683 = !{!294, !287}
!8684 = !DILocalVariable(name: "x", arg: 1, scope: !8685, file: !7504, line: 366, type: !285)
!8685 = distinct !DISubprogram(name: "fls64", scope: !7504, file: !7504, line: 366, type: !8686, scopeLine: 367, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !372)
!8686 = !DISubroutineType(types: !8687)
!8687 = !{!294, !285}
!8688 = !DILocation(line: 366, column: 40, scope: !8685, inlinedAt: !8689)
!8689 = distinct !DILocation(line: 46, column: 9, scope: !8680)
!8690 = !DILocalVariable(name: "bitpos", scope: !8685, file: !7504, line: 368, type: !294)
!8691 = !DILocation(line: 368, column: 6, scope: !8685, inlinedAt: !8689)
!8692 = !DILocalVariable(name: "size", arg: 1, scope: !8680, file: !8681, line: 29, type: !287)
!8693 = !DILocation(line: 29, column: 63, scope: !8680)
!8694 = !DILocation(line: 31, column: 27, scope: !8695)
!8695 = distinct !DILexicalBlock(scope: !8680, file: !8681, line: 31, column: 6)
!8696 = !DILocation(line: 31, column: 6, scope: !8695)
!8697 = !DILocation(line: 31, column: 6, scope: !8680)
!8698 = !DILocation(line: 32, column: 8, scope: !8699)
!8699 = distinct !DILexicalBlock(scope: !8700, file: !8681, line: 32, column: 7)
!8700 = distinct !DILexicalBlock(scope: !8695, file: !8681, line: 31, column: 34)
!8701 = !DILocation(line: 32, column: 7, scope: !8700)
!8702 = !DILocation(line: 33, column: 4, scope: !8699)
!8703 = !DILocation(line: 35, column: 7, scope: !8704)
!8704 = distinct !DILexicalBlock(scope: !8700, file: !8681, line: 35, column: 7)
!8705 = !DILocation(line: 35, column: 12, scope: !8704)
!8706 = !DILocation(line: 35, column: 7, scope: !8700)
!8707 = !DILocation(line: 36, column: 4, scope: !8704)
!8708 = !DILocation(line: 38, column: 10, scope: !8700)
!8709 = !DILocation(line: 38, column: 28, scope: !8700)
!8710 = !DILocation(line: 38, column: 41, scope: !8700)
!8711 = !DILocation(line: 38, column: 3, scope: !8700)
!8712 = !DILocation(line: 41, column: 6, scope: !8680)
!8713 = !DILocation(line: 42, column: 7, scope: !8680)
!8714 = !DILocation(line: 46, column: 15, scope: !8680)
!8715 = !DILocation(line: 374, column: 2, scope: !8685, inlinedAt: !8689)
!8716 = !DILocation(line: 376, column: 14, scope: !8685, inlinedAt: !8689)
!8717 = !{i32 297750}
!8718 = !DILocation(line: 377, column: 9, scope: !8685, inlinedAt: !8689)
!8719 = !DILocation(line: 377, column: 16, scope: !8685, inlinedAt: !8689)
!8720 = !DILocation(line: 46, column: 2, scope: !8680)
!8721 = !DILocation(line: 48, column: 1, scope: !8680)
!8722 = distinct !DISubprogram(name: "__ilog2_u64", scope: !8723, file: !8723, line: 30, type: !8724, scopeLine: 31, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !372)
!8723 = !DIFile(filename: "./include/linux/log2.h", directory: "/home/lizy2001/genbc/linux")
!8724 = !DISubroutineType(types: !8725)
!8725 = !{!294, !284}
!8726 = !DILocation(line: 366, column: 40, scope: !8685, inlinedAt: !8727)
!8727 = distinct !DILocation(line: 32, column: 9, scope: !8722)
!8728 = !DILocation(line: 368, column: 6, scope: !8685, inlinedAt: !8727)
!8729 = !DILocalVariable(name: "n", arg: 1, scope: !8722, file: !8723, line: 30, type: !284)
!8730 = !DILocation(line: 30, column: 21, scope: !8722)
!8731 = !DILocation(line: 32, column: 15, scope: !8722)
!8732 = !DILocation(line: 374, column: 2, scope: !8685, inlinedAt: !8727)
!8733 = !DILocation(line: 376, column: 14, scope: !8685, inlinedAt: !8727)
!8734 = !DILocation(line: 377, column: 9, scope: !8685, inlinedAt: !8727)
!8735 = !DILocation(line: 377, column: 16, scope: !8685, inlinedAt: !8727)
!8736 = !DILocation(line: 32, column: 18, scope: !8722)
!8737 = !DILocation(line: 32, column: 2, scope: !8722)
!8738 = distinct !DISubprogram(name: "kasan_kmalloc", scope: !8739, file: !8739, line: 137, type: !8740, scopeLine: 139, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !372)
!8739 = !DIFile(filename: "./include/linux/kasan.h", directory: "/home/lizy2001/genbc/linux")
!8740 = !DISubroutineType(types: !8741)
!8741 = !{!247, !1396, !457, !550, !248}
!8742 = !DILocalVariable(name: "s", arg: 1, scope: !8738, file: !8739, line: 137, type: !1396)
!8743 = !DILocation(line: 137, column: 54, scope: !8738)
!8744 = !DILocalVariable(name: "object", arg: 2, scope: !8738, file: !8739, line: 137, type: !457)
!8745 = !DILocation(line: 137, column: 69, scope: !8738)
!8746 = !DILocalVariable(name: "size", arg: 3, scope: !8738, file: !8739, line: 138, type: !550)
!8747 = !DILocation(line: 138, column: 12, scope: !8738)
!8748 = !DILocalVariable(name: "flags", arg: 4, scope: !8738, file: !8739, line: 138, type: !248)
!8749 = !DILocation(line: 138, column: 24, scope: !8738)
!8750 = !DILocation(line: 140, column: 17, scope: !8738)
!8751 = !DILocation(line: 140, column: 2, scope: !8738)
!8752 = distinct !DISubprogram(name: "refcount_set", scope: !70, file: !70, line: 134, type: !8753, scopeLine: 135, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !372)
!8753 = !DISubroutineType(types: !8754)
!8754 = !{null, !8755, !294}
!8755 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !322, size: 64)
!8756 = !DILocalVariable(name: "v", arg: 1, scope: !8757, file: !8758, line: 39, type: !8761)
!8757 = distinct !DISubprogram(name: "arch_atomic_set", scope: !8758, file: !8758, line: 39, type: !8759, scopeLine: 40, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !372)
!8758 = !DIFile(filename: "./arch/x86/include/asm/atomic.h", directory: "/home/lizy2001/genbc/linux")
!8759 = !DISubroutineType(types: !8760)
!8760 = !{null, !8761, !294}
!8761 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !326, size: 64)
!8762 = !DILocation(line: 39, column: 55, scope: !8757, inlinedAt: !8763)
!8763 = distinct !DILocation(line: 46, column: 2, scope: !8764, inlinedAt: !8766)
!8764 = distinct !DISubprogram(name: "atomic_set", scope: !8765, file: !8765, line: 43, type: !8759, scopeLine: 44, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !372)
!8765 = !DIFile(filename: "./include/asm-generic/atomic-instrumented.h", directory: "/home/lizy2001/genbc/linux")
!8766 = distinct !DILocation(line: 136, column: 2, scope: !8752)
!8767 = !DILocalVariable(name: "i", arg: 2, scope: !8757, file: !8758, line: 39, type: !294)
!8768 = !DILocation(line: 39, column: 62, scope: !8757, inlinedAt: !8763)
!8769 = !DILocation(line: 84, column: 74, scope: !7893, inlinedAt: !8770)
!8770 = distinct !DILocation(line: 45, column: 2, scope: !8764, inlinedAt: !8766)
!8771 = !DILocation(line: 84, column: 84, scope: !7893, inlinedAt: !8770)
!8772 = !DILocalVariable(name: "v", arg: 1, scope: !8764, file: !8765, line: 43, type: !8761)
!8773 = !DILocation(line: 43, column: 22, scope: !8764, inlinedAt: !8766)
!8774 = !DILocalVariable(name: "i", arg: 2, scope: !8764, file: !8765, line: 43, type: !294)
!8775 = !DILocation(line: 43, column: 29, scope: !8764, inlinedAt: !8766)
!8776 = !DILocalVariable(name: "r", arg: 1, scope: !8752, file: !70, line: 134, type: !8755)
!8777 = !DILocation(line: 134, column: 45, scope: !8752)
!8778 = !DILocalVariable(name: "n", arg: 2, scope: !8752, file: !70, line: 134, type: !294)
!8779 = !DILocation(line: 134, column: 52, scope: !8752)
!8780 = !DILocation(line: 136, column: 14, scope: !8752)
!8781 = !DILocation(line: 136, column: 17, scope: !8752)
!8782 = !DILocation(line: 136, column: 23, scope: !8752)
!8783 = !DILocation(line: 45, column: 26, scope: !8764, inlinedAt: !8766)
!8784 = !DILocation(line: 86, column: 20, scope: !7893, inlinedAt: !8770)
!8785 = !DILocation(line: 86, column: 23, scope: !7893, inlinedAt: !8770)
!8786 = !DILocation(line: 86, column: 2, scope: !7893, inlinedAt: !8770)
!8787 = !DILocation(line: 87, column: 2, scope: !7893, inlinedAt: !8770)
!8788 = !DILocation(line: 46, column: 18, scope: !8764, inlinedAt: !8766)
!8789 = !DILocation(line: 46, column: 21, scope: !8764, inlinedAt: !8766)
!8790 = !DILocation(line: 41, column: 2, scope: !8791, inlinedAt: !8763)
!8791 = distinct !DILexicalBlock(scope: !8757, file: !8758, line: 41, column: 2)
!8792 = !DILocation(line: 137, column: 1, scope: !8752)
!8793 = distinct !DISubprogram(name: "__list_add", scope: !6441, file: !6441, line: 63, type: !8794, scopeLine: 66, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !372)
!8794 = !DISubroutineType(types: !8795)
!8795 = !{null, !299, !299, !299}
!8796 = !DILocalVariable(name: "new", arg: 1, scope: !8793, file: !6441, line: 63, type: !299)
!8797 = !DILocation(line: 63, column: 49, scope: !8793)
!8798 = !DILocalVariable(name: "prev", arg: 2, scope: !8793, file: !6441, line: 64, type: !299)
!8799 = !DILocation(line: 64, column: 28, scope: !8793)
!8800 = !DILocalVariable(name: "next", arg: 3, scope: !8793, file: !6441, line: 65, type: !299)
!8801 = !DILocation(line: 65, column: 28, scope: !8793)
!8802 = !DILocation(line: 67, column: 24, scope: !8803)
!8803 = distinct !DILexicalBlock(scope: !8793, file: !6441, line: 67, column: 6)
!8804 = !DILocation(line: 67, column: 29, scope: !8803)
!8805 = !DILocation(line: 67, column: 35, scope: !8803)
!8806 = !DILocation(line: 67, column: 7, scope: !8803)
!8807 = !DILocation(line: 67, column: 6, scope: !8793)
!8808 = !DILocation(line: 68, column: 3, scope: !8803)
!8809 = !DILocation(line: 70, column: 15, scope: !8793)
!8810 = !DILocation(line: 70, column: 2, scope: !8793)
!8811 = !DILocation(line: 70, column: 8, scope: !8793)
!8812 = !DILocation(line: 70, column: 13, scope: !8793)
!8813 = !DILocation(line: 71, column: 14, scope: !8793)
!8814 = !DILocation(line: 71, column: 2, scope: !8793)
!8815 = !DILocation(line: 71, column: 7, scope: !8793)
!8816 = !DILocation(line: 71, column: 12, scope: !8793)
!8817 = !DILocation(line: 72, column: 14, scope: !8793)
!8818 = !DILocation(line: 72, column: 2, scope: !8793)
!8819 = !DILocation(line: 72, column: 7, scope: !8793)
!8820 = !DILocation(line: 72, column: 12, scope: !8793)
!8821 = !DILocation(line: 73, column: 2, scope: !8793)
!8822 = !DILocation(line: 73, column: 2, scope: !8823)
!8823 = distinct !DILexicalBlock(scope: !8793, file: !6441, line: 73, column: 2)
!8824 = !DILocation(line: 73, column: 2, scope: !8825)
!8825 = distinct !DILexicalBlock(scope: !8823, file: !6441, line: 73, column: 2)
!8826 = !DILocation(line: 73, column: 2, scope: !8827)
!8827 = distinct !DILexicalBlock(scope: !8823, file: !6441, line: 73, column: 2)
!8828 = !DILocation(line: 74, column: 1, scope: !8793)
!8829 = distinct !DISubprogram(name: "__list_add_valid", scope: !6441, file: !6441, line: 45, type: !8830, scopeLine: 48, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !372)
!8830 = !DISubroutineType(types: !8831)
!8831 = !{!339, !299, !299, !299}
!8832 = !DILocalVariable(name: "new", arg: 1, scope: !8829, file: !6441, line: 45, type: !299)
!8833 = !DILocation(line: 45, column: 55, scope: !8829)
!8834 = !DILocalVariable(name: "prev", arg: 2, scope: !8829, file: !6441, line: 46, type: !299)
!8835 = !DILocation(line: 46, column: 23, scope: !8829)
!8836 = !DILocalVariable(name: "next", arg: 3, scope: !8829, file: !6441, line: 47, type: !299)
!8837 = !DILocation(line: 47, column: 23, scope: !8829)
!8838 = !DILocation(line: 49, column: 2, scope: !8829)
!8839 = distinct !DISubprogram(name: "list_del_init", scope: !6441, file: !6441, line: 202, type: !8840, scopeLine: 203, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !372)
!8840 = !DISubroutineType(types: !8841)
!8841 = !{null, !299}
!8842 = !DILocalVariable(name: "entry", arg: 1, scope: !8839, file: !6441, line: 202, type: !299)
!8843 = !DILocation(line: 202, column: 52, scope: !8839)
!8844 = !DILocation(line: 204, column: 19, scope: !8839)
!8845 = !DILocation(line: 204, column: 2, scope: !8839)
!8846 = !DILocation(line: 205, column: 17, scope: !8839)
!8847 = !DILocation(line: 205, column: 2, scope: !8839)
!8848 = !DILocation(line: 206, column: 1, scope: !8839)
!8849 = distinct !DISubprogram(name: "acpi_ec_put_query_handler", scope: !3, file: !3, line: 1067, type: !8850, scopeLine: 1068, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !372)
!8850 = !DISubroutineType(types: !8851)
!8851 = !{null, !304}
!8852 = !DILocalVariable(name: "handler", arg: 1, scope: !8849, file: !3, line: 1067, type: !304)
!8853 = !DILocation(line: 1067, column: 69, scope: !8849)
!8854 = !DILocation(line: 1069, column: 12, scope: !8849)
!8855 = !DILocation(line: 1069, column: 21, scope: !8849)
!8856 = !DILocation(line: 1069, column: 2, scope: !8849)
!8857 = !DILocation(line: 1070, column: 1, scope: !8849)
!8858 = distinct !DISubprogram(name: "__list_del_entry", scope: !6441, file: !6441, line: 130, type: !8840, scopeLine: 131, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !372)
!8859 = !DILocalVariable(name: "entry", arg: 1, scope: !8858, file: !6441, line: 130, type: !299)
!8860 = !DILocation(line: 130, column: 55, scope: !8858)
!8861 = !DILocation(line: 132, column: 30, scope: !8862)
!8862 = distinct !DILexicalBlock(scope: !8858, file: !6441, line: 132, column: 6)
!8863 = !DILocation(line: 132, column: 7, scope: !8862)
!8864 = !DILocation(line: 132, column: 6, scope: !8858)
!8865 = !DILocation(line: 133, column: 3, scope: !8862)
!8866 = !DILocation(line: 135, column: 13, scope: !8858)
!8867 = !DILocation(line: 135, column: 20, scope: !8858)
!8868 = !DILocation(line: 135, column: 26, scope: !8858)
!8869 = !DILocation(line: 135, column: 33, scope: !8858)
!8870 = !DILocation(line: 135, column: 2, scope: !8858)
!8871 = !DILocation(line: 136, column: 1, scope: !8858)
!8872 = distinct !DISubprogram(name: "INIT_LIST_HEAD", scope: !6441, file: !6441, line: 33, type: !8840, scopeLine: 34, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !372)
!8873 = !DILocalVariable(name: "list", arg: 1, scope: !8872, file: !6441, line: 33, type: !299)
!8874 = !DILocation(line: 33, column: 53, scope: !8872)
!8875 = !DILocation(line: 35, column: 2, scope: !8872)
!8876 = !DILocation(line: 35, column: 2, scope: !8877)
!8877 = distinct !DILexicalBlock(scope: !8872, file: !6441, line: 35, column: 2)
!8878 = !DILocation(line: 35, column: 2, scope: !8879)
!8879 = distinct !DILexicalBlock(scope: !8877, file: !6441, line: 35, column: 2)
!8880 = !DILocation(line: 35, column: 2, scope: !8881)
!8881 = distinct !DILexicalBlock(scope: !8877, file: !6441, line: 35, column: 2)
!8882 = !DILocation(line: 36, column: 15, scope: !8872)
!8883 = !DILocation(line: 36, column: 2, scope: !8872)
!8884 = !DILocation(line: 36, column: 8, scope: !8872)
!8885 = !DILocation(line: 36, column: 13, scope: !8872)
!8886 = !DILocation(line: 37, column: 1, scope: !8872)
!8887 = distinct !DISubprogram(name: "__list_del_entry_valid", scope: !6441, file: !6441, line: 51, type: !8888, scopeLine: 52, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !372)
!8888 = !DISubroutineType(types: !8889)
!8889 = !{!339, !299}
!8890 = !DILocalVariable(name: "entry", arg: 1, scope: !8887, file: !6441, line: 51, type: !299)
!8891 = !DILocation(line: 51, column: 61, scope: !8887)
!8892 = !DILocation(line: 53, column: 2, scope: !8887)
!8893 = distinct !DISubprogram(name: "__list_del", scope: !6441, file: !6441, line: 110, type: !6442, scopeLine: 111, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !372)
!8894 = !DILocalVariable(name: "prev", arg: 1, scope: !8893, file: !6441, line: 110, type: !299)
!8895 = !DILocation(line: 110, column: 50, scope: !8893)
!8896 = !DILocalVariable(name: "next", arg: 2, scope: !8893, file: !6441, line: 110, type: !299)
!8897 = !DILocation(line: 110, column: 75, scope: !8893)
!8898 = !DILocation(line: 112, column: 15, scope: !8893)
!8899 = !DILocation(line: 112, column: 2, scope: !8893)
!8900 = !DILocation(line: 112, column: 8, scope: !8893)
!8901 = !DILocation(line: 112, column: 13, scope: !8893)
!8902 = !DILocation(line: 113, column: 2, scope: !8893)
!8903 = !DILocation(line: 113, column: 2, scope: !8904)
!8904 = distinct !DILexicalBlock(scope: !8893, file: !6441, line: 113, column: 2)
!8905 = !DILocation(line: 113, column: 2, scope: !8906)
!8906 = distinct !DILexicalBlock(scope: !8904, file: !6441, line: 113, column: 2)
!8907 = !DILocation(line: 113, column: 2, scope: !8908)
!8908 = distinct !DILexicalBlock(scope: !8904, file: !6441, line: 113, column: 2)
!8909 = !DILocation(line: 114, column: 1, scope: !8893)
!8910 = distinct !DISubprogram(name: "kref_put", scope: !319, file: !319, line: 62, type: !8911, scopeLine: 63, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !372)
!8911 = !DISubroutineType(types: !8912)
!8912 = !{!294, !6433, !8913}
!8913 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6431, size: 64)
!8914 = !DILocalVariable(name: "kref", arg: 1, scope: !8910, file: !319, line: 62, type: !6433)
!8915 = !DILocation(line: 62, column: 41, scope: !8910)
!8916 = !DILocalVariable(name: "release", arg: 2, scope: !8910, file: !319, line: 62, type: !8913)
!8917 = !DILocation(line: 62, column: 54, scope: !8910)
!8918 = !DILocation(line: 64, column: 29, scope: !8919)
!8919 = distinct !DILexicalBlock(scope: !8910, file: !319, line: 64, column: 6)
!8920 = !DILocation(line: 64, column: 35, scope: !8919)
!8921 = !DILocation(line: 64, column: 6, scope: !8919)
!8922 = !DILocation(line: 64, column: 6, scope: !8910)
!8923 = !DILocation(line: 65, column: 3, scope: !8924)
!8924 = distinct !DILexicalBlock(scope: !8919, file: !319, line: 64, column: 46)
!8925 = !DILocation(line: 65, column: 11, scope: !8924)
!8926 = !DILocation(line: 66, column: 3, scope: !8924)
!8927 = !DILocation(line: 68, column: 2, scope: !8910)
!8928 = !DILocation(line: 69, column: 1, scope: !8910)
!8929 = distinct !DISubprogram(name: "acpi_ec_query_handler_release", scope: !3, file: !3, line: 1059, type: !6431, scopeLine: 1060, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !372)
!8930 = !DILocalVariable(name: "kref", arg: 1, scope: !8929, file: !3, line: 1059, type: !6433)
!8931 = !DILocation(line: 1059, column: 56, scope: !8929)
!8932 = !DILocalVariable(name: "handler", scope: !8929, file: !3, line: 1061, type: !304)
!8933 = !DILocation(line: 1061, column: 32, scope: !8929)
!8934 = !DILocalVariable(name: "__mptr", scope: !8935, file: !3, line: 1062, type: !247)
!8935 = distinct !DILexicalBlock(scope: !8929, file: !3, line: 1062, column: 3)
!8936 = !DILocation(line: 1062, column: 3, scope: !8935)
!8937 = !DILocation(line: 1062, column: 3, scope: !8938)
!8938 = distinct !DILexicalBlock(scope: !8935, file: !3, line: 1062, column: 3)
!8939 = !DILocation(line: 1064, column: 8, scope: !8929)
!8940 = !DILocation(line: 1064, column: 2, scope: !8929)
!8941 = !DILocation(line: 1065, column: 1, scope: !8929)
!8942 = distinct !DISubprogram(name: "refcount_dec_and_test", scope: !70, file: !70, line: 331, type: !8943, scopeLine: 332, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !372)
!8943 = !DISubroutineType(types: !8944)
!8944 = !{!339, !8755}
!8945 = !DILocalVariable(name: "r", arg: 1, scope: !8942, file: !70, line: 331, type: !8755)
!8946 = !DILocation(line: 331, column: 67, scope: !8942)
!8947 = !DILocation(line: 333, column: 33, scope: !8942)
!8948 = !DILocation(line: 333, column: 9, scope: !8942)
!8949 = !DILocation(line: 333, column: 2, scope: !8942)
!8950 = distinct !DISubprogram(name: "__refcount_dec_and_test", scope: !70, file: !70, line: 313, type: !8951, scopeLine: 314, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !372)
!8951 = !DISubroutineType(types: !8952)
!8952 = !{!339, !8755, !938}
!8953 = !DILocalVariable(name: "r", arg: 1, scope: !8950, file: !70, line: 313, type: !8755)
!8954 = !DILocation(line: 313, column: 69, scope: !8950)
!8955 = !DILocalVariable(name: "oldp", arg: 2, scope: !8950, file: !70, line: 313, type: !938)
!8956 = !DILocation(line: 313, column: 77, scope: !8950)
!8957 = !DILocation(line: 315, column: 36, scope: !8950)
!8958 = !DILocation(line: 315, column: 39, scope: !8950)
!8959 = !DILocation(line: 315, column: 9, scope: !8950)
!8960 = !DILocation(line: 315, column: 2, scope: !8950)
!8961 = distinct !DISubprogram(name: "__refcount_sub_and_test", scope: !70, file: !70, line: 270, type: !8962, scopeLine: 271, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !372)
!8962 = !DISubroutineType(types: !8963)
!8963 = !{!339, !294, !8755, !938}
!8964 = !DILocalVariable(name: "i", arg: 1, scope: !8965, file: !8758, line: 188, type: !294)
!8965 = distinct !DISubprogram(name: "arch_atomic_fetch_sub", scope: !8758, file: !8758, line: 188, type: !8966, scopeLine: 189, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !372)
!8966 = !DISubroutineType(types: !8967)
!8967 = !{!294, !294, !8761}
!8968 = !DILocation(line: 188, column: 54, scope: !8965, inlinedAt: !8969)
!8969 = distinct !DILocation(line: 221, column: 9, scope: !8970, inlinedAt: !8971)
!8970 = distinct !DISubprogram(name: "atomic_fetch_sub_release", scope: !8765, file: !8765, line: 218, type: !8966, scopeLine: 219, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !372)
!8971 = distinct !DILocation(line: 272, column: 12, scope: !8961)
!8972 = !DILocalVariable(name: "v", arg: 2, scope: !8965, file: !8758, line: 188, type: !8761)
!8973 = !DILocation(line: 188, column: 67, scope: !8965, inlinedAt: !8969)
!8974 = !DILocalVariable(name: "__ret", scope: !8975, file: !8758, line: 190, type: !294)
!8975 = distinct !DILexicalBlock(scope: !8965, file: !8758, line: 190, column: 9)
!8976 = !DILocation(line: 190, column: 9, scope: !8975, inlinedAt: !8969)
!8977 = !DILocation(line: 99, column: 79, scope: !8131, inlinedAt: !8978)
!8978 = distinct !DILocation(line: 220, column: 2, scope: !8970, inlinedAt: !8971)
!8979 = !DILocation(line: 99, column: 89, scope: !8131, inlinedAt: !8978)
!8980 = !DILocalVariable(name: "i", arg: 1, scope: !8970, file: !8765, line: 218, type: !294)
!8981 = !DILocation(line: 218, column: 30, scope: !8970, inlinedAt: !8971)
!8982 = !DILocalVariable(name: "v", arg: 2, scope: !8970, file: !8765, line: 218, type: !8761)
!8983 = !DILocation(line: 218, column: 43, scope: !8970, inlinedAt: !8971)
!8984 = !DILocalVariable(name: "i", arg: 1, scope: !8961, file: !70, line: 270, type: !294)
!8985 = !DILocation(line: 270, column: 61, scope: !8961)
!8986 = !DILocalVariable(name: "r", arg: 2, scope: !8961, file: !70, line: 270, type: !8755)
!8987 = !DILocation(line: 270, column: 76, scope: !8961)
!8988 = !DILocalVariable(name: "oldp", arg: 3, scope: !8961, file: !70, line: 270, type: !938)
!8989 = !DILocation(line: 270, column: 84, scope: !8961)
!8990 = !DILocalVariable(name: "old", scope: !8961, file: !70, line: 272, type: !294)
!8991 = !DILocation(line: 272, column: 6, scope: !8961)
!8992 = !DILocation(line: 272, column: 37, scope: !8961)
!8993 = !DILocation(line: 272, column: 41, scope: !8961)
!8994 = !DILocation(line: 272, column: 44, scope: !8961)
!8995 = !DILocation(line: 220, column: 31, scope: !8970, inlinedAt: !8971)
!8996 = !DILocation(line: 101, column: 20, scope: !8131, inlinedAt: !8978)
!8997 = !DILocation(line: 101, column: 23, scope: !8131, inlinedAt: !8978)
!8998 = !DILocation(line: 101, column: 2, scope: !8131, inlinedAt: !8978)
!8999 = !DILocation(line: 102, column: 2, scope: !8131, inlinedAt: !8978)
!9000 = !DILocation(line: 221, column: 39, scope: !8970, inlinedAt: !8971)
!9001 = !DILocation(line: 221, column: 42, scope: !8970, inlinedAt: !8971)
!9002 = !{i32 -2146565494}
!9003 = !DILocation(line: 274, column: 6, scope: !9004)
!9004 = distinct !DILexicalBlock(scope: !8961, file: !70, line: 274, column: 6)
!9005 = !DILocation(line: 274, column: 6, scope: !8961)
!9006 = !DILocation(line: 275, column: 11, scope: !9004)
!9007 = !DILocation(line: 275, column: 4, scope: !9004)
!9008 = !DILocation(line: 275, column: 9, scope: !9004)
!9009 = !DILocation(line: 275, column: 3, scope: !9004)
!9010 = !DILocation(line: 277, column: 6, scope: !9011)
!9011 = distinct !DILexicalBlock(scope: !8961, file: !70, line: 277, column: 6)
!9012 = !DILocation(line: 277, column: 13, scope: !9011)
!9013 = !DILocation(line: 277, column: 10, scope: !9011)
!9014 = !DILocation(line: 277, column: 6, scope: !8961)
!9015 = !DILocation(line: 278, column: 3, scope: !9016)
!9016 = distinct !DILexicalBlock(scope: !9011, file: !70, line: 277, column: 16)
!9017 = !{i32 -2144345014}
!9018 = !DILocation(line: 279, column: 3, scope: !9016)
!9019 = !DILocation(line: 282, column: 6, scope: !9020)
!9020 = distinct !DILexicalBlock(scope: !8961, file: !70, line: 282, column: 6)
!9021 = !DILocation(line: 282, column: 6, scope: !8961)
!9022 = !DILocation(line: 283, column: 26, scope: !9020)
!9023 = !DILocation(line: 283, column: 3, scope: !9020)
!9024 = !DILocation(line: 285, column: 2, scope: !8961)
!9025 = !DILocation(line: 286, column: 1, scope: !8961)
!9026 = distinct !DISubprogram(name: "__init_work", scope: !30, file: !30, line: 215, type: !9027, scopeLine: 215, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !372)
!9027 = !DISubroutineType(types: !9028)
!9028 = !{null, !410, !294}
!9029 = !DILocalVariable(name: "work", arg: 1, scope: !9026, file: !30, line: 215, type: !410)
!9030 = !DILocation(line: 215, column: 52, scope: !9026)
!9031 = !DILocalVariable(name: "onstack", arg: 2, scope: !9026, file: !30, line: 215, type: !294)
!9032 = !DILocation(line: 215, column: 62, scope: !9026)
!9033 = !DILocation(line: 215, column: 73, scope: !9026)
!9034 = distinct !DISubprogram(name: "acpi_ec_event_handler", scope: !3, file: !3, line: 1225, type: !408, scopeLine: 1226, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !372)
!9035 = !DILocation(line: 407, column: 64, scope: !5876, inlinedAt: !9036)
!9036 = distinct !DILocation(line: 1250, column: 2, scope: !9034)
!9037 = !DILocation(line: 407, column: 84, scope: !5876, inlinedAt: !9036)
!9038 = !DILocation(line: 327, column: 67, scope: !5861, inlinedAt: !9039)
!9039 = distinct !DILocation(line: 1236, column: 3, scope: !9040)
!9040 = distinct !DILexicalBlock(scope: !9041, file: !3, line: 1236, column: 3)
!9041 = distinct !DILexicalBlock(scope: !9042, file: !3, line: 1236, column: 3)
!9042 = distinct !DILexicalBlock(scope: !9043, file: !3, line: 1236, column: 3)
!9043 = distinct !DILexicalBlock(scope: !9044, file: !3, line: 1236, column: 3)
!9044 = distinct !DILexicalBlock(scope: !9045, file: !3, line: 1236, column: 3)
!9045 = distinct !DILexicalBlock(scope: !9034, file: !3, line: 1233, column: 33)
!9046 = !DILocation(line: 407, column: 64, scope: !5876, inlinedAt: !9047)
!9047 = distinct !DILocation(line: 1234, column: 3, scope: !9045)
!9048 = !DILocation(line: 407, column: 84, scope: !5876, inlinedAt: !9047)
!9049 = !DILocation(line: 327, column: 67, scope: !5861, inlinedAt: !9050)
!9050 = distinct !DILocation(line: 1232, column: 2, scope: !9051)
!9051 = distinct !DILexicalBlock(scope: !9052, file: !3, line: 1232, column: 2)
!9052 = distinct !DILexicalBlock(scope: !9053, file: !3, line: 1232, column: 2)
!9053 = distinct !DILexicalBlock(scope: !9054, file: !3, line: 1232, column: 2)
!9054 = distinct !DILexicalBlock(scope: !9055, file: !3, line: 1232, column: 2)
!9055 = distinct !DILexicalBlock(scope: !9034, file: !3, line: 1232, column: 2)
!9056 = !DILocalVariable(name: "work", arg: 1, scope: !9034, file: !3, line: 1225, type: !410)
!9057 = !DILocation(line: 1225, column: 55, scope: !9034)
!9058 = !DILocalVariable(name: "flags", scope: !9034, file: !3, line: 1227, type: !287)
!9059 = !DILocation(line: 1227, column: 16, scope: !9034)
!9060 = !DILocalVariable(name: "ec", scope: !9034, file: !3, line: 1228, type: !330)
!9061 = !DILocation(line: 1228, column: 18, scope: !9034)
!9062 = !DILocalVariable(name: "__mptr", scope: !9063, file: !3, line: 1228, type: !247)
!9063 = distinct !DILexicalBlock(scope: !9034, file: !3, line: 1228, column: 23)
!9064 = !DILocation(line: 1228, column: 23, scope: !9063)
!9065 = !DILocation(line: 1228, column: 23, scope: !9066)
!9066 = distinct !DILexicalBlock(scope: !9063, file: !3, line: 1228, column: 23)
!9067 = !DILocation(line: 1230, column: 2, scope: !9068)
!9068 = distinct !DILexicalBlock(scope: !9069, file: !3, line: 1230, column: 2)
!9069 = distinct !DILexicalBlock(scope: !9034, file: !3, line: 1230, column: 2)
!9070 = !DILocation(line: 1230, column: 2, scope: !9069)
!9071 = !DILocation(line: 1232, column: 2, scope: !9034)
!9072 = !DILocation(line: 1232, column: 2, scope: !9055)
!9073 = !DILocalVariable(name: "__dummy", scope: !9074, file: !3, line: 1232, type: !287)
!9074 = distinct !DILexicalBlock(scope: !9054, file: !3, line: 1232, column: 2)
!9075 = !DILocation(line: 1232, column: 2, scope: !9074)
!9076 = !DILocalVariable(name: "__dummy2", scope: !9074, file: !3, line: 1232, type: !287)
!9077 = !DILocation(line: 1232, column: 2, scope: !9054)
!9078 = !DILocation(line: 1232, column: 2, scope: !9053)
!9079 = !DILocation(line: 1232, column: 2, scope: !9080)
!9080 = distinct !DILexicalBlock(scope: !9053, file: !3, line: 1232, column: 2)
!9081 = !DILocalVariable(name: "__dummy", scope: !9082, file: !3, line: 1232, type: !287)
!9082 = distinct !DILexicalBlock(scope: !9083, file: !3, line: 1232, column: 2)
!9083 = distinct !DILexicalBlock(scope: !9080, file: !3, line: 1232, column: 2)
!9084 = !DILocation(line: 1232, column: 2, scope: !9082)
!9085 = !DILocalVariable(name: "__dummy2", scope: !9082, file: !3, line: 1232, type: !287)
!9086 = !DILocation(line: 1232, column: 2, scope: !9083)
!9087 = !DILocation(line: 1232, column: 2, scope: !9052)
!9088 = !{i32 -2140209741}
!9089 = !DILocation(line: 1232, column: 2, scope: !9051)
!9090 = !DILocation(line: 329, column: 10, scope: !5861, inlinedAt: !9050)
!9091 = !DILocation(line: 329, column: 16, scope: !5861, inlinedAt: !9050)
!9092 = !DILocation(line: 1233, column: 2, scope: !9034)
!9093 = !DILocation(line: 1233, column: 9, scope: !9034)
!9094 = !DILocation(line: 1233, column: 13, scope: !9034)
!9095 = !DILocation(line: 1234, column: 27, scope: !9045)
!9096 = !DILocation(line: 1234, column: 31, scope: !9045)
!9097 = !DILocation(line: 1234, column: 37, scope: !9045)
!9098 = !DILocation(line: 409, column: 2, scope: !5934, inlinedAt: !9047)
!9099 = !DILocation(line: 409, column: 2, scope: !5939, inlinedAt: !9047)
!9100 = !DILocation(line: 409, column: 2, scope: !5940, inlinedAt: !9047)
!9101 = !DILocation(line: 409, column: 2, scope: !5947, inlinedAt: !9047)
!9102 = !DILocation(line: 409, column: 2, scope: !5950, inlinedAt: !9047)
!9103 = !DILocation(line: 1235, column: 23, scope: !9045)
!9104 = !DILocation(line: 1235, column: 9, scope: !9045)
!9105 = !DILocation(line: 1236, column: 3, scope: !9045)
!9106 = !DILocation(line: 1236, column: 3, scope: !9044)
!9107 = !DILocalVariable(name: "__dummy", scope: !9108, file: !3, line: 1236, type: !287)
!9108 = distinct !DILexicalBlock(scope: !9043, file: !3, line: 1236, column: 3)
!9109 = !DILocation(line: 1236, column: 3, scope: !9108)
!9110 = !DILocalVariable(name: "__dummy2", scope: !9108, file: !3, line: 1236, type: !287)
!9111 = !DILocation(line: 1236, column: 3, scope: !9043)
!9112 = !DILocation(line: 1236, column: 3, scope: !9042)
!9113 = !DILocation(line: 1236, column: 3, scope: !9114)
!9114 = distinct !DILexicalBlock(scope: !9042, file: !3, line: 1236, column: 3)
!9115 = !DILocalVariable(name: "__dummy", scope: !9116, file: !3, line: 1236, type: !287)
!9116 = distinct !DILexicalBlock(scope: !9117, file: !3, line: 1236, column: 3)
!9117 = distinct !DILexicalBlock(scope: !9114, file: !3, line: 1236, column: 3)
!9118 = !DILocation(line: 1236, column: 3, scope: !9116)
!9119 = !DILocalVariable(name: "__dummy2", scope: !9116, file: !3, line: 1236, type: !287)
!9120 = !DILocation(line: 1236, column: 3, scope: !9117)
!9121 = !DILocation(line: 1236, column: 3, scope: !9041)
!9122 = !{i32 -2140208724}
!9123 = !DILocation(line: 1236, column: 3, scope: !9040)
!9124 = !DILocation(line: 329, column: 10, scope: !5861, inlinedAt: !9039)
!9125 = !DILocation(line: 329, column: 16, scope: !5861, inlinedAt: !9039)
!9126 = !DILocation(line: 1237, column: 3, scope: !9045)
!9127 = !DILocation(line: 1237, column: 7, scope: !9045)
!9128 = !DILocation(line: 1237, column: 25, scope: !9045)
!9129 = !DILocation(line: 1244, column: 8, scope: !9130)
!9130 = distinct !DILexicalBlock(scope: !9045, file: !3, line: 1244, column: 7)
!9131 = !DILocation(line: 1244, column: 12, scope: !9130)
!9132 = !DILocation(line: 1244, column: 7, scope: !9045)
!9133 = !DILocation(line: 1245, column: 8, scope: !9134)
!9134 = distinct !DILexicalBlock(scope: !9135, file: !3, line: 1245, column: 8)
!9135 = distinct !DILexicalBlock(scope: !9130, file: !3, line: 1244, column: 32)
!9136 = !DILocation(line: 1245, column: 26, scope: !9134)
!9137 = !DILocation(line: 1245, column: 55, scope: !9134)
!9138 = !DILocation(line: 1246, column: 8, scope: !9134)
!9139 = !DILocation(line: 1246, column: 26, scope: !9134)
!9140 = !DILocation(line: 1245, column: 8, scope: !9135)
!9141 = !DILocation(line: 1247, column: 28, scope: !9134)
!9142 = !DILocation(line: 1247, column: 5, scope: !9134)
!9143 = !DILocation(line: 1248, column: 3, scope: !9135)
!9144 = distinct !{!9144, !9092, !9145}
!9145 = !DILocation(line: 1249, column: 2, scope: !9034)
!9146 = !DILocation(line: 1250, column: 26, scope: !9034)
!9147 = !DILocation(line: 1250, column: 30, scope: !9034)
!9148 = !DILocation(line: 1250, column: 36, scope: !9034)
!9149 = !DILocation(line: 409, column: 2, scope: !5934, inlinedAt: !9036)
!9150 = !DILocation(line: 409, column: 2, scope: !5939, inlinedAt: !9036)
!9151 = !DILocation(line: 409, column: 2, scope: !5940, inlinedAt: !9036)
!9152 = !DILocation(line: 409, column: 2, scope: !5947, inlinedAt: !9036)
!9153 = !DILocation(line: 409, column: 2, scope: !5950, inlinedAt: !9036)
!9154 = !DILocation(line: 1252, column: 2, scope: !9155)
!9155 = distinct !DILexicalBlock(scope: !9156, file: !3, line: 1252, column: 2)
!9156 = distinct !DILexicalBlock(scope: !9034, file: !3, line: 1252, column: 2)
!9157 = !DILocation(line: 1252, column: 2, scope: !9156)
!9158 = !DILocation(line: 1254, column: 22, scope: !9034)
!9159 = !DILocation(line: 1254, column: 2, scope: !9034)
!9160 = !DILocation(line: 1255, column: 1, scope: !9034)
!9161 = distinct !DISubprogram(name: "acpi_ec_query", scope: !3, file: !3, line: 1157, type: !9162, scopeLine: 1158, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !372)
!9162 = !DISubroutineType(types: !9163)
!9163 = !{!294, !330, !390}
!9164 = !DILocalVariable(name: "ec", arg: 1, scope: !9161, file: !3, line: 1157, type: !330)
!9165 = !DILocation(line: 1157, column: 42, scope: !9161)
!9166 = !DILocalVariable(name: "data", arg: 2, scope: !9161, file: !3, line: 1157, type: !390)
!9167 = !DILocation(line: 1157, column: 50, scope: !9161)
!9168 = !DILocalVariable(name: "value", scope: !9161, file: !3, line: 1159, type: !266)
!9169 = !DILocation(line: 1159, column: 5, scope: !9161)
!9170 = !DILocalVariable(name: "result", scope: !9161, file: !3, line: 1160, type: !294)
!9171 = !DILocation(line: 1160, column: 6, scope: !9161)
!9172 = !DILocalVariable(name: "q", scope: !9161, file: !3, line: 1161, type: !415)
!9173 = !DILocation(line: 1161, column: 24, scope: !9161)
!9174 = !DILocation(line: 1163, column: 6, scope: !9161)
!9175 = !DILocation(line: 1163, column: 4, scope: !9161)
!9176 = !DILocation(line: 1164, column: 7, scope: !9177)
!9177 = distinct !DILexicalBlock(scope: !9161, file: !3, line: 1164, column: 6)
!9178 = !DILocation(line: 1164, column: 6, scope: !9161)
!9179 = !DILocation(line: 1165, column: 3, scope: !9177)
!9180 = !DILocation(line: 1172, column: 31, scope: !9161)
!9181 = !DILocation(line: 1172, column: 36, scope: !9161)
!9182 = !DILocation(line: 1172, column: 39, scope: !9161)
!9183 = !DILocation(line: 1172, column: 11, scope: !9161)
!9184 = !DILocation(line: 1172, column: 9, scope: !9161)
!9185 = !DILocation(line: 1173, column: 7, scope: !9186)
!9186 = distinct !DILexicalBlock(scope: !9161, file: !3, line: 1173, column: 6)
!9187 = !DILocation(line: 1173, column: 6, scope: !9161)
!9188 = !DILocation(line: 1174, column: 10, scope: !9186)
!9189 = !DILocation(line: 1174, column: 3, scope: !9186)
!9190 = !DILocation(line: 1175, column: 6, scope: !9191)
!9191 = distinct !DILexicalBlock(scope: !9161, file: !3, line: 1175, column: 6)
!9192 = !DILocation(line: 1175, column: 6, scope: !9161)
!9193 = !DILocation(line: 1176, column: 3, scope: !9191)
!9194 = !DILocation(line: 1178, column: 50, scope: !9161)
!9195 = !DILocation(line: 1178, column: 54, scope: !9161)
!9196 = !DILocation(line: 1178, column: 15, scope: !9161)
!9197 = !DILocation(line: 1178, column: 2, scope: !9161)
!9198 = !DILocation(line: 1178, column: 5, scope: !9161)
!9199 = !DILocation(line: 1178, column: 13, scope: !9161)
!9200 = !DILocation(line: 1179, column: 7, scope: !9201)
!9201 = distinct !DILexicalBlock(scope: !9161, file: !3, line: 1179, column: 6)
!9202 = !DILocation(line: 1179, column: 10, scope: !9201)
!9203 = !DILocation(line: 1179, column: 6, scope: !9161)
!9204 = !DILocation(line: 1180, column: 10, scope: !9205)
!9205 = distinct !DILexicalBlock(scope: !9201, file: !3, line: 1179, column: 19)
!9206 = !DILocation(line: 1181, column: 3, scope: !9205)
!9207 = !DILocation(line: 1193, column: 2, scope: !9208)
!9208 = distinct !DILexicalBlock(scope: !9209, file: !3, line: 1193, column: 2)
!9209 = distinct !DILexicalBlock(scope: !9161, file: !3, line: 1193, column: 2)
!9210 = !DILocation(line: 1193, column: 2, scope: !9209)
!9211 = !DILocation(line: 1194, column: 18, scope: !9212)
!9212 = distinct !DILexicalBlock(scope: !9161, file: !3, line: 1194, column: 6)
!9213 = !DILocation(line: 1194, column: 32, scope: !9212)
!9214 = !DILocation(line: 1194, column: 35, scope: !9212)
!9215 = !DILocation(line: 1194, column: 7, scope: !9212)
!9216 = !DILocation(line: 1194, column: 6, scope: !9161)
!9217 = !DILocation(line: 1195, column: 3, scope: !9218)
!9218 = distinct !DILexicalBlock(scope: !9219, file: !3, line: 1195, column: 3)
!9219 = distinct !DILexicalBlock(scope: !9220, file: !3, line: 1195, column: 3)
!9220 = distinct !DILexicalBlock(scope: !9212, file: !3, line: 1194, column: 42)
!9221 = !DILocation(line: 1195, column: 3, scope: !9219)
!9222 = !DILocation(line: 1196, column: 10, scope: !9220)
!9223 = !DILocation(line: 1197, column: 2, scope: !9220)
!9224 = !DILocation(line: 1194, column: 39, scope: !9212)
!9225 = !DILabel(scope: !9161, name: "err_exit", file: !3, line: 1199)
!9226 = !DILocation(line: 1199, column: 1, scope: !9161)
!9227 = !DILocation(line: 1200, column: 6, scope: !9228)
!9228 = distinct !DILexicalBlock(scope: !9161, file: !3, line: 1200, column: 6)
!9229 = !DILocation(line: 1200, column: 6, scope: !9161)
!9230 = !DILocation(line: 1201, column: 24, scope: !9228)
!9231 = !DILocation(line: 1201, column: 3, scope: !9228)
!9232 = !DILocation(line: 1202, column: 6, scope: !9233)
!9233 = distinct !DILexicalBlock(scope: !9161, file: !3, line: 1202, column: 6)
!9234 = !DILocation(line: 1202, column: 6, scope: !9161)
!9235 = !DILocation(line: 1203, column: 11, scope: !9233)
!9236 = !DILocation(line: 1203, column: 4, scope: !9233)
!9237 = !DILocation(line: 1203, column: 9, scope: !9233)
!9238 = !DILocation(line: 1203, column: 3, scope: !9233)
!9239 = !DILocation(line: 1204, column: 9, scope: !9161)
!9240 = !DILocation(line: 1204, column: 2, scope: !9161)
!9241 = !DILocation(line: 1205, column: 1, scope: !9161)
!9242 = distinct !DISubprogram(name: "acpi_ec_check_event", scope: !3, file: !3, line: 1207, type: !6720, scopeLine: 1208, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !372)
!9243 = !DILocation(line: 407, column: 64, scope: !5876, inlinedAt: !9244)
!9244 = distinct !DILocation(line: 1220, column: 4, scope: !9245)
!9245 = distinct !DILexicalBlock(scope: !9246, file: !3, line: 1212, column: 21)
!9246 = distinct !DILexicalBlock(scope: !9247, file: !3, line: 1212, column: 7)
!9247 = distinct !DILexicalBlock(scope: !9248, file: !3, line: 1211, column: 53)
!9248 = distinct !DILexicalBlock(scope: !9242, file: !3, line: 1211, column: 6)
!9249 = !DILocation(line: 407, column: 84, scope: !5876, inlinedAt: !9244)
!9250 = !DILocation(line: 327, column: 67, scope: !5861, inlinedAt: !9251)
!9251 = distinct !DILocation(line: 1213, column: 4, scope: !9252)
!9252 = distinct !DILexicalBlock(scope: !9253, file: !3, line: 1213, column: 4)
!9253 = distinct !DILexicalBlock(scope: !9254, file: !3, line: 1213, column: 4)
!9254 = distinct !DILexicalBlock(scope: !9255, file: !3, line: 1213, column: 4)
!9255 = distinct !DILexicalBlock(scope: !9256, file: !3, line: 1213, column: 4)
!9256 = distinct !DILexicalBlock(scope: !9245, file: !3, line: 1213, column: 4)
!9257 = !DILocalVariable(name: "ec", arg: 1, scope: !9242, file: !3, line: 1207, type: !330)
!9258 = !DILocation(line: 1207, column: 49, scope: !9242)
!9259 = !DILocalVariable(name: "flags", scope: !9242, file: !3, line: 1209, type: !287)
!9260 = !DILocation(line: 1209, column: 16, scope: !9242)
!9261 = !DILocation(line: 1211, column: 6, scope: !9248)
!9262 = !DILocation(line: 1211, column: 24, scope: !9248)
!9263 = !DILocation(line: 1211, column: 6, scope: !9242)
!9264 = !DILocation(line: 1212, column: 16, scope: !9246)
!9265 = !DILocation(line: 1212, column: 7, scope: !9246)
!9266 = !DILocation(line: 1212, column: 7, scope: !9247)
!9267 = !DILocation(line: 1213, column: 4, scope: !9245)
!9268 = !DILocation(line: 1213, column: 4, scope: !9256)
!9269 = !DILocalVariable(name: "__dummy", scope: !9270, file: !3, line: 1213, type: !287)
!9270 = distinct !DILexicalBlock(scope: !9255, file: !3, line: 1213, column: 4)
!9271 = !DILocation(line: 1213, column: 4, scope: !9270)
!9272 = !DILocalVariable(name: "__dummy2", scope: !9270, file: !3, line: 1213, type: !287)
!9273 = !DILocation(line: 1213, column: 4, scope: !9255)
!9274 = !DILocation(line: 1213, column: 4, scope: !9254)
!9275 = !DILocation(line: 1213, column: 4, scope: !9276)
!9276 = distinct !DILexicalBlock(scope: !9254, file: !3, line: 1213, column: 4)
!9277 = !DILocalVariable(name: "__dummy", scope: !9278, file: !3, line: 1213, type: !287)
!9278 = distinct !DILexicalBlock(scope: !9279, file: !3, line: 1213, column: 4)
!9279 = distinct !DILexicalBlock(scope: !9276, file: !3, line: 1213, column: 4)
!9280 = !DILocation(line: 1213, column: 4, scope: !9278)
!9281 = !DILocalVariable(name: "__dummy2", scope: !9278, file: !3, line: 1213, type: !287)
!9282 = !DILocation(line: 1213, column: 4, scope: !9279)
!9283 = !DILocation(line: 1213, column: 4, scope: !9253)
!9284 = !{i32 -2140212634}
!9285 = !DILocation(line: 1213, column: 4, scope: !9252)
!9286 = !DILocation(line: 329, column: 10, scope: !5861, inlinedAt: !9251)
!9287 = !DILocation(line: 329, column: 16, scope: !5861, inlinedAt: !9251)
!9288 = !DILocation(line: 1218, column: 9, scope: !9289)
!9289 = distinct !DILexicalBlock(scope: !9245, file: !3, line: 1218, column: 8)
!9290 = !DILocation(line: 1218, column: 13, scope: !9289)
!9291 = !DILocation(line: 1218, column: 8, scope: !9245)
!9292 = !DILocation(line: 1219, column: 25, scope: !9289)
!9293 = !DILocation(line: 1219, column: 5, scope: !9289)
!9294 = !DILocation(line: 1220, column: 28, scope: !9245)
!9295 = !DILocation(line: 1220, column: 32, scope: !9245)
!9296 = !DILocation(line: 1220, column: 38, scope: !9245)
!9297 = !DILocation(line: 409, column: 2, scope: !5934, inlinedAt: !9244)
!9298 = !DILocation(line: 409, column: 2, scope: !5939, inlinedAt: !9244)
!9299 = !DILocation(line: 409, column: 2, scope: !5940, inlinedAt: !9244)
!9300 = !DILocation(line: 409, column: 2, scope: !5947, inlinedAt: !9244)
!9301 = !DILocation(line: 409, column: 2, scope: !5950, inlinedAt: !9244)
!9302 = !DILocation(line: 1221, column: 3, scope: !9245)
!9303 = !DILocation(line: 1222, column: 2, scope: !9247)
!9304 = !DILocation(line: 1223, column: 1, scope: !9242)
!9305 = distinct !DISubprogram(name: "acpi_ec_create_query", scope: !3, file: !3, line: 1118, type: !9306, scopeLine: 1119, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !372)
!9306 = !DISubroutineType(types: !9307)
!9307 = !{!415, !390}
!9308 = !DILocalVariable(name: "pval", arg: 1, scope: !9305, file: !3, line: 1118, type: !390)
!9309 = !DILocation(line: 1118, column: 55, scope: !9305)
!9310 = !DILocalVariable(name: "q", scope: !9305, file: !3, line: 1120, type: !415)
!9311 = !DILocation(line: 1120, column: 24, scope: !9305)
!9312 = !DILocalVariable(name: "t", scope: !9305, file: !3, line: 1121, type: !383)
!9313 = !DILocation(line: 1121, column: 22, scope: !9305)
!9314 = !DILocation(line: 1123, column: 6, scope: !9305)
!9315 = !DILocation(line: 1123, column: 4, scope: !9305)
!9316 = !DILocation(line: 1124, column: 7, scope: !9317)
!9317 = distinct !DILexicalBlock(scope: !9305, file: !3, line: 1124, column: 6)
!9318 = !DILocation(line: 1124, column: 6, scope: !9305)
!9319 = !DILocation(line: 1125, column: 3, scope: !9317)
!9320 = !DILocation(line: 1126, column: 2, scope: !9305)
!9321 = !DILocation(line: 1126, column: 2, scope: !9322)
!9322 = distinct !DILexicalBlock(scope: !9305, file: !3, line: 1126, column: 2)
!9323 = !DILocation(line: 1127, column: 7, scope: !9305)
!9324 = !DILocation(line: 1127, column: 10, scope: !9305)
!9325 = !DILocation(line: 1127, column: 4, scope: !9305)
!9326 = !DILocation(line: 1128, column: 2, scope: !9305)
!9327 = !DILocation(line: 1128, column: 5, scope: !9305)
!9328 = !DILocation(line: 1128, column: 13, scope: !9305)
!9329 = !DILocation(line: 1129, column: 13, scope: !9305)
!9330 = !DILocation(line: 1129, column: 2, scope: !9305)
!9331 = !DILocation(line: 1129, column: 5, scope: !9305)
!9332 = !DILocation(line: 1129, column: 11, scope: !9305)
!9333 = !DILocation(line: 1130, column: 2, scope: !9305)
!9334 = !DILocation(line: 1130, column: 5, scope: !9305)
!9335 = !DILocation(line: 1130, column: 10, scope: !9305)
!9336 = !DILocation(line: 1131, column: 9, scope: !9305)
!9337 = !DILocation(line: 1131, column: 2, scope: !9305)
!9338 = !DILocation(line: 1132, column: 1, scope: !9305)
!9339 = distinct !DISubprogram(name: "acpi_ec_get_query_handler_by_value", scope: !3, file: !3, line: 1043, type: !9340, scopeLine: 1044, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !372)
!9340 = !DISubroutineType(types: !9341)
!9341 = !{!304, !330, !266}
!9342 = !DILocalVariable(name: "ec", arg: 1, scope: !9339, file: !3, line: 1043, type: !330)
!9343 = !DILocation(line: 1043, column: 52, scope: !9339)
!9344 = !DILocalVariable(name: "value", arg: 2, scope: !9339, file: !3, line: 1043, type: !266)
!9345 = !DILocation(line: 1043, column: 59, scope: !9339)
!9346 = !DILocalVariable(name: "handler", scope: !9339, file: !3, line: 1045, type: !304)
!9347 = !DILocation(line: 1045, column: 32, scope: !9339)
!9348 = !DILocation(line: 1047, column: 14, scope: !9339)
!9349 = !DILocation(line: 1047, column: 18, scope: !9339)
!9350 = !DILocation(line: 1047, column: 2, scope: !9339)
!9351 = !DILocalVariable(name: "__mptr", scope: !9352, file: !3, line: 1048, type: !247)
!9352 = distinct !DILexicalBlock(scope: !9353, file: !3, line: 1048, column: 2)
!9353 = distinct !DILexicalBlock(scope: !9339, file: !3, line: 1048, column: 2)
!9354 = !DILocation(line: 1048, column: 2, scope: !9352)
!9355 = !DILocation(line: 1048, column: 2, scope: !9356)
!9356 = distinct !DILexicalBlock(scope: !9352, file: !3, line: 1048, column: 2)
!9357 = !DILocation(line: 1048, column: 2, scope: !9353)
!9358 = !DILocation(line: 1048, column: 2, scope: !9359)
!9359 = distinct !DILexicalBlock(scope: !9353, file: !3, line: 1048, column: 2)
!9360 = !DILocation(line: 1049, column: 7, scope: !9361)
!9361 = distinct !DILexicalBlock(scope: !9362, file: !3, line: 1049, column: 7)
!9362 = distinct !DILexicalBlock(scope: !9359, file: !3, line: 1048, column: 48)
!9363 = !DILocation(line: 1049, column: 16, scope: !9361)
!9364 = !DILocation(line: 1049, column: 25, scope: !9361)
!9365 = !DILocation(line: 1049, column: 13, scope: !9361)
!9366 = !DILocation(line: 1049, column: 7, scope: !9362)
!9367 = !DILocation(line: 1050, column: 14, scope: !9368)
!9368 = distinct !DILexicalBlock(scope: !9361, file: !3, line: 1049, column: 36)
!9369 = !DILocation(line: 1050, column: 23, scope: !9368)
!9370 = !DILocation(line: 1050, column: 4, scope: !9368)
!9371 = !DILocation(line: 1051, column: 18, scope: !9368)
!9372 = !DILocation(line: 1051, column: 22, scope: !9368)
!9373 = !DILocation(line: 1051, column: 4, scope: !9368)
!9374 = !DILocation(line: 1052, column: 11, scope: !9368)
!9375 = !DILocation(line: 1052, column: 4, scope: !9368)
!9376 = !DILocation(line: 1054, column: 2, scope: !9362)
!9377 = !DILocalVariable(name: "__mptr", scope: !9378, file: !3, line: 1048, type: !247)
!9378 = distinct !DILexicalBlock(scope: !9359, file: !3, line: 1048, column: 2)
!9379 = !DILocation(line: 1048, column: 2, scope: !9378)
!9380 = !DILocation(line: 1048, column: 2, scope: !9381)
!9381 = distinct !DILexicalBlock(scope: !9378, file: !3, line: 1048, column: 2)
!9382 = distinct !{!9382, !9357, !9383}
!9383 = !DILocation(line: 1054, column: 2, scope: !9353)
!9384 = !DILocation(line: 1055, column: 16, scope: !9339)
!9385 = !DILocation(line: 1055, column: 20, scope: !9339)
!9386 = !DILocation(line: 1055, column: 2, scope: !9339)
!9387 = !DILocation(line: 1056, column: 2, scope: !9339)
!9388 = !DILocation(line: 1057, column: 1, scope: !9339)
!9389 = distinct !DISubprogram(name: "acpi_ec_delete_query", scope: !3, file: !3, line: 1134, type: !9390, scopeLine: 1135, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !372)
!9390 = !DISubroutineType(types: !9391)
!9391 = !{null, !415}
!9392 = !DILocalVariable(name: "q", arg: 1, scope: !9389, file: !3, line: 1134, type: !415)
!9393 = !DILocation(line: 1134, column: 56, scope: !9389)
!9394 = !DILocation(line: 1136, column: 6, scope: !9395)
!9395 = distinct !DILexicalBlock(scope: !9389, file: !3, line: 1136, column: 6)
!9396 = !DILocation(line: 1136, column: 6, scope: !9389)
!9397 = !DILocation(line: 1137, column: 7, scope: !9398)
!9398 = distinct !DILexicalBlock(scope: !9399, file: !3, line: 1137, column: 7)
!9399 = distinct !DILexicalBlock(scope: !9395, file: !3, line: 1136, column: 9)
!9400 = !DILocation(line: 1137, column: 10, scope: !9398)
!9401 = !DILocation(line: 1137, column: 7, scope: !9399)
!9402 = !DILocation(line: 1138, column: 30, scope: !9398)
!9403 = !DILocation(line: 1138, column: 33, scope: !9398)
!9404 = !DILocation(line: 1138, column: 4, scope: !9398)
!9405 = !DILocation(line: 1139, column: 9, scope: !9399)
!9406 = !DILocation(line: 1139, column: 3, scope: !9399)
!9407 = !DILocation(line: 1140, column: 2, scope: !9399)
!9408 = !DILocation(line: 1141, column: 1, scope: !9389)
!9409 = distinct !DISubprogram(name: "acpi_ec_event_processor", scope: !3, file: !3, line: 1143, type: !408, scopeLine: 1144, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !372)
!9410 = !DILocalVariable(name: "work", arg: 1, scope: !9409, file: !3, line: 1143, type: !410)
!9411 = !DILocation(line: 1143, column: 57, scope: !9409)
!9412 = !DILocalVariable(name: "q", scope: !9409, file: !3, line: 1145, type: !415)
!9413 = !DILocation(line: 1145, column: 24, scope: !9409)
!9414 = !DILocalVariable(name: "__mptr", scope: !9415, file: !3, line: 1145, type: !247)
!9415 = distinct !DILexicalBlock(scope: !9409, file: !3, line: 1145, column: 28)
!9416 = !DILocation(line: 1145, column: 28, scope: !9415)
!9417 = !DILocation(line: 1145, column: 28, scope: !9418)
!9418 = distinct !DILexicalBlock(scope: !9415, file: !3, line: 1145, column: 28)
!9419 = !DILocalVariable(name: "handler", scope: !9409, file: !3, line: 1146, type: !304)
!9420 = !DILocation(line: 1146, column: 32, scope: !9409)
!9421 = !DILocation(line: 1146, column: 42, scope: !9409)
!9422 = !DILocation(line: 1146, column: 45, scope: !9409)
!9423 = !DILocation(line: 1148, column: 2, scope: !9424)
!9424 = distinct !DILexicalBlock(scope: !9425, file: !3, line: 1148, column: 2)
!9425 = distinct !DILexicalBlock(scope: !9409, file: !3, line: 1148, column: 2)
!9426 = !DILocation(line: 1148, column: 2, scope: !9425)
!9427 = !DILocation(line: 1149, column: 6, scope: !9428)
!9428 = distinct !DILexicalBlock(scope: !9409, file: !3, line: 1149, column: 6)
!9429 = !DILocation(line: 1149, column: 15, scope: !9428)
!9430 = !DILocation(line: 1149, column: 6, scope: !9409)
!9431 = !DILocation(line: 1150, column: 3, scope: !9428)
!9432 = !DILocation(line: 1150, column: 12, scope: !9428)
!9433 = !DILocation(line: 1150, column: 17, scope: !9428)
!9434 = !DILocation(line: 1150, column: 26, scope: !9428)
!9435 = !DILocation(line: 1151, column: 11, scope: !9436)
!9436 = distinct !DILexicalBlock(scope: !9428, file: !3, line: 1151, column: 11)
!9437 = !DILocation(line: 1151, column: 20, scope: !9436)
!9438 = !DILocation(line: 1151, column: 11, scope: !9428)
!9439 = !DILocation(line: 1152, column: 24, scope: !9436)
!9440 = !DILocation(line: 1152, column: 33, scope: !9436)
!9441 = !DILocation(line: 1152, column: 3, scope: !9436)
!9442 = !DILocation(line: 1153, column: 2, scope: !9443)
!9443 = distinct !DILexicalBlock(scope: !9444, file: !3, line: 1153, column: 2)
!9444 = distinct !DILexicalBlock(scope: !9409, file: !3, line: 1153, column: 2)
!9445 = !DILocation(line: 1153, column: 2, scope: !9444)
!9446 = !DILocation(line: 1154, column: 23, scope: !9409)
!9447 = !DILocation(line: 1154, column: 2, scope: !9409)
!9448 = !DILocation(line: 1155, column: 1, scope: !9409)
!9449 = distinct !DISubprogram(name: "kref_get", scope: !319, file: !319, line: 43, type: !6431, scopeLine: 44, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !372)
!9450 = !DILocalVariable(name: "kref", arg: 1, scope: !9449, file: !319, line: 43, type: !6433)
!9451 = !DILocation(line: 43, column: 42, scope: !9449)
!9452 = !DILocation(line: 45, column: 16, scope: !9449)
!9453 = !DILocation(line: 45, column: 22, scope: !9449)
!9454 = !DILocation(line: 45, column: 2, scope: !9449)
!9455 = !DILocation(line: 46, column: 1, scope: !9449)
!9456 = distinct !DISubprogram(name: "refcount_inc", scope: !70, file: !70, line: 265, type: !9457, scopeLine: 266, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !372)
!9457 = !DISubroutineType(types: !9458)
!9458 = !{null, !8755}
!9459 = !DILocalVariable(name: "r", arg: 1, scope: !9456, file: !70, line: 265, type: !8755)
!9460 = !DILocation(line: 265, column: 45, scope: !9456)
!9461 = !DILocation(line: 267, column: 17, scope: !9456)
!9462 = !DILocation(line: 267, column: 2, scope: !9456)
!9463 = !DILocation(line: 268, column: 1, scope: !9456)
!9464 = distinct !DISubprogram(name: "__refcount_inc", scope: !70, file: !70, line: 248, type: !9465, scopeLine: 249, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !372)
!9465 = !DISubroutineType(types: !9466)
!9466 = !{null, !8755, !938}
!9467 = !DILocalVariable(name: "r", arg: 1, scope: !9464, file: !70, line: 248, type: !8755)
!9468 = !DILocation(line: 248, column: 47, scope: !9464)
!9469 = !DILocalVariable(name: "oldp", arg: 2, scope: !9464, file: !70, line: 248, type: !938)
!9470 = !DILocation(line: 248, column: 55, scope: !9464)
!9471 = !DILocation(line: 250, column: 20, scope: !9464)
!9472 = !DILocation(line: 250, column: 23, scope: !9464)
!9473 = !DILocation(line: 250, column: 2, scope: !9464)
!9474 = !DILocation(line: 251, column: 1, scope: !9464)
!9475 = distinct !DISubprogram(name: "__refcount_add", scope: !70, file: !70, line: 191, type: !9476, scopeLine: 192, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !372)
!9476 = !DISubroutineType(types: !9477)
!9477 = !{null, !294, !8755, !938}
!9478 = !DILocalVariable(name: "i", arg: 1, scope: !9479, file: !8758, line: 182, type: !294)
!9479 = distinct !DISubprogram(name: "arch_atomic_fetch_add", scope: !8758, file: !8758, line: 182, type: !8966, scopeLine: 183, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !372)
!9480 = !DILocation(line: 182, column: 54, scope: !9479, inlinedAt: !9481)
!9481 = distinct !DILocation(line: 143, column: 9, scope: !9482, inlinedAt: !9483)
!9482 = distinct !DISubprogram(name: "atomic_fetch_add_relaxed", scope: !8765, file: !8765, line: 140, type: !8966, scopeLine: 141, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !372)
!9483 = distinct !DILocation(line: 193, column: 12, scope: !9475)
!9484 = !DILocalVariable(name: "v", arg: 2, scope: !9479, file: !8758, line: 182, type: !8761)
!9485 = !DILocation(line: 182, column: 67, scope: !9479, inlinedAt: !9481)
!9486 = !DILocalVariable(name: "__ret", scope: !9487, file: !8758, line: 184, type: !294)
!9487 = distinct !DILexicalBlock(scope: !9479, file: !8758, line: 184, column: 9)
!9488 = !DILocation(line: 184, column: 9, scope: !9487, inlinedAt: !9481)
!9489 = !DILocation(line: 99, column: 79, scope: !8131, inlinedAt: !9490)
!9490 = distinct !DILocation(line: 142, column: 2, scope: !9482, inlinedAt: !9483)
!9491 = !DILocation(line: 99, column: 89, scope: !8131, inlinedAt: !9490)
!9492 = !DILocalVariable(name: "i", arg: 1, scope: !9482, file: !8765, line: 140, type: !294)
!9493 = !DILocation(line: 140, column: 30, scope: !9482, inlinedAt: !9483)
!9494 = !DILocalVariable(name: "v", arg: 2, scope: !9482, file: !8765, line: 140, type: !8761)
!9495 = !DILocation(line: 140, column: 43, scope: !9482, inlinedAt: !9483)
!9496 = !DILocalVariable(name: "i", arg: 1, scope: !9475, file: !70, line: 191, type: !294)
!9497 = !DILocation(line: 191, column: 39, scope: !9475)
!9498 = !DILocalVariable(name: "r", arg: 2, scope: !9475, file: !70, line: 191, type: !8755)
!9499 = !DILocation(line: 191, column: 54, scope: !9475)
!9500 = !DILocalVariable(name: "oldp", arg: 3, scope: !9475, file: !70, line: 191, type: !938)
!9501 = !DILocation(line: 191, column: 62, scope: !9475)
!9502 = !DILocalVariable(name: "old", scope: !9475, file: !70, line: 193, type: !294)
!9503 = !DILocation(line: 193, column: 6, scope: !9475)
!9504 = !DILocation(line: 193, column: 37, scope: !9475)
!9505 = !DILocation(line: 193, column: 41, scope: !9475)
!9506 = !DILocation(line: 193, column: 44, scope: !9475)
!9507 = !DILocation(line: 142, column: 31, scope: !9482, inlinedAt: !9483)
!9508 = !DILocation(line: 101, column: 20, scope: !8131, inlinedAt: !9490)
!9509 = !DILocation(line: 101, column: 23, scope: !8131, inlinedAt: !9490)
!9510 = !DILocation(line: 101, column: 2, scope: !8131, inlinedAt: !9490)
!9511 = !DILocation(line: 102, column: 2, scope: !8131, inlinedAt: !9490)
!9512 = !DILocation(line: 143, column: 39, scope: !9482, inlinedAt: !9483)
!9513 = !DILocation(line: 143, column: 42, scope: !9482, inlinedAt: !9483)
!9514 = !{i32 -2146566846}
!9515 = !DILocation(line: 195, column: 6, scope: !9516)
!9516 = distinct !DILexicalBlock(scope: !9475, file: !70, line: 195, column: 6)
!9517 = !DILocation(line: 195, column: 6, scope: !9475)
!9518 = !DILocation(line: 196, column: 11, scope: !9516)
!9519 = !DILocation(line: 196, column: 4, scope: !9516)
!9520 = !DILocation(line: 196, column: 9, scope: !9516)
!9521 = !DILocation(line: 196, column: 3, scope: !9516)
!9522 = !DILocation(line: 198, column: 6, scope: !9523)
!9523 = distinct !DILexicalBlock(scope: !9475, file: !70, line: 198, column: 6)
!9524 = !DILocation(line: 198, column: 6, scope: !9475)
!9525 = !DILocation(line: 199, column: 26, scope: !9523)
!9526 = !DILocation(line: 199, column: 3, scope: !9523)
!9527 = !DILocation(line: 200, column: 11, scope: !9528)
!9528 = distinct !DILexicalBlock(scope: !9523, file: !70, line: 200, column: 11)
!9529 = !DILocation(line: 200, column: 11, scope: !9523)
!9530 = !DILocation(line: 201, column: 26, scope: !9528)
!9531 = !DILocation(line: 201, column: 3, scope: !9528)
!9532 = !DILocation(line: 202, column: 1, scope: !9475)
!9533 = distinct !DISubprogram(name: "ec_parse_io_ports", scope: !3, file: !3, line: 1674, type: !9534, scopeLine: 1675, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !372)
!9534 = !DISubroutineType(types: !9535)
!9535 = !{!421, !9536, !247}
!9536 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9537, size: 64)
!9537 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "acpi_resource", file: !9538, line: 651, size: 544, elements: !9539)
!9538 = !DIFile(filename: "./include/acpi/acrestyp.h", directory: "/home/lizy2001/genbc/linux")
!9539 = !{!9540, !9541, !9542}
!9540 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !9537, file: !9538, line: 652, baseType: !261, size: 32)
!9541 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !9537, file: !9538, line: 653, baseType: !261, size: 32, offset: 32)
!9542 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !9537, file: !9538, line: 654, baseType: !9543, size: 480, offset: 64)
!9543 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "acpi_resource_data", file: !9538, line: 614, size: 480, elements: !9544)
!9544 = !{!9545, !9555, !9563, !9569, !9577, !9582, !9588, !9593, !9601, !9605, !9613, !9621, !9627, !9667, !9685, !9703, !9715, !9727, !9735, !9755, !9771, !9791, !9813, !9826, !9838, !9851, !9865, !9876, !9888}
!9545 = !DIDerivedType(tag: DW_TAG_member, name: "irq", scope: !9543, file: !9538, line: 615, baseType: !9546, size: 56)
!9546 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "acpi_resource_irq", file: !9538, line: 138, size: 56, elements: !9547)
!9547 = !{!9548, !9549, !9550, !9551, !9552, !9553, !9554}
!9548 = !DIDerivedType(tag: DW_TAG_member, name: "descriptor_length", scope: !9546, file: !9538, line: 139, baseType: !266, size: 8)
!9549 = !DIDerivedType(tag: DW_TAG_member, name: "triggering", scope: !9546, file: !9538, line: 140, baseType: !266, size: 8, offset: 8)
!9550 = !DIDerivedType(tag: DW_TAG_member, name: "polarity", scope: !9546, file: !9538, line: 141, baseType: !266, size: 8, offset: 16)
!9551 = !DIDerivedType(tag: DW_TAG_member, name: "shareable", scope: !9546, file: !9538, line: 142, baseType: !266, size: 8, offset: 24)
!9552 = !DIDerivedType(tag: DW_TAG_member, name: "wake_capable", scope: !9546, file: !9538, line: 143, baseType: !266, size: 8, offset: 32)
!9553 = !DIDerivedType(tag: DW_TAG_member, name: "interrupt_count", scope: !9546, file: !9538, line: 144, baseType: !266, size: 8, offset: 40)
!9554 = !DIDerivedType(tag: DW_TAG_member, name: "interrupts", scope: !9546, file: !9538, line: 145, baseType: !6802, size: 8, offset: 48)
!9555 = !DIDerivedType(tag: DW_TAG_member, name: "dma", scope: !9543, file: !9538, line: 616, baseType: !9556, size: 40)
!9556 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "acpi_resource_dma", file: !9538, line: 148, size: 40, elements: !9557)
!9557 = !{!9558, !9559, !9560, !9561, !9562}
!9558 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !9556, file: !9538, line: 149, baseType: !266, size: 8)
!9559 = !DIDerivedType(tag: DW_TAG_member, name: "bus_master", scope: !9556, file: !9538, line: 150, baseType: !266, size: 8, offset: 8)
!9560 = !DIDerivedType(tag: DW_TAG_member, name: "transfer", scope: !9556, file: !9538, line: 151, baseType: !266, size: 8, offset: 16)
!9561 = !DIDerivedType(tag: DW_TAG_member, name: "channel_count", scope: !9556, file: !9538, line: 152, baseType: !266, size: 8, offset: 24)
!9562 = !DIDerivedType(tag: DW_TAG_member, name: "channels", scope: !9556, file: !9538, line: 153, baseType: !6802, size: 8, offset: 32)
!9563 = !DIDerivedType(tag: DW_TAG_member, name: "start_dpf", scope: !9543, file: !9538, line: 617, baseType: !9564, size: 24)
!9564 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "acpi_resource_start_dependent", file: !9538, line: 156, size: 24, elements: !9565)
!9565 = !{!9566, !9567, !9568}
!9566 = !DIDerivedType(tag: DW_TAG_member, name: "descriptor_length", scope: !9564, file: !9538, line: 157, baseType: !266, size: 8)
!9567 = !DIDerivedType(tag: DW_TAG_member, name: "compatibility_priority", scope: !9564, file: !9538, line: 158, baseType: !266, size: 8, offset: 8)
!9568 = !DIDerivedType(tag: DW_TAG_member, name: "performance_robustness", scope: !9564, file: !9538, line: 159, baseType: !266, size: 8, offset: 16)
!9569 = !DIDerivedType(tag: DW_TAG_member, name: "io", scope: !9543, file: !9538, line: 618, baseType: !9570, size: 56)
!9570 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "acpi_resource_io", file: !9538, line: 167, size: 56, elements: !9571)
!9571 = !{!9572, !9573, !9574, !9575, !9576}
!9572 = !DIDerivedType(tag: DW_TAG_member, name: "io_decode", scope: !9570, file: !9538, line: 168, baseType: !266, size: 8)
!9573 = !DIDerivedType(tag: DW_TAG_member, name: "alignment", scope: !9570, file: !9538, line: 169, baseType: !266, size: 8, offset: 8)
!9574 = !DIDerivedType(tag: DW_TAG_member, name: "address_length", scope: !9570, file: !9538, line: 170, baseType: !266, size: 8, offset: 16)
!9575 = !DIDerivedType(tag: DW_TAG_member, name: "minimum", scope: !9570, file: !9538, line: 171, baseType: !1124, size: 16, offset: 24)
!9576 = !DIDerivedType(tag: DW_TAG_member, name: "maximum", scope: !9570, file: !9538, line: 172, baseType: !1124, size: 16, offset: 40)
!9577 = !DIDerivedType(tag: DW_TAG_member, name: "fixed_io", scope: !9543, file: !9538, line: 619, baseType: !9578, size: 24)
!9578 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "acpi_resource_fixed_io", file: !9538, line: 175, size: 24, elements: !9579)
!9579 = !{!9580, !9581}
!9580 = !DIDerivedType(tag: DW_TAG_member, name: "address", scope: !9578, file: !9538, line: 176, baseType: !1124, size: 16)
!9581 = !DIDerivedType(tag: DW_TAG_member, name: "address_length", scope: !9578, file: !9538, line: 177, baseType: !266, size: 8, offset: 16)
!9582 = !DIDerivedType(tag: DW_TAG_member, name: "fixed_dma", scope: !9543, file: !9538, line: 620, baseType: !9583, size: 40)
!9583 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "acpi_resource_fixed_dma", file: !9538, line: 180, size: 40, elements: !9584)
!9584 = !{!9585, !9586, !9587}
!9585 = !DIDerivedType(tag: DW_TAG_member, name: "request_lines", scope: !9583, file: !9538, line: 181, baseType: !1124, size: 16)
!9586 = !DIDerivedType(tag: DW_TAG_member, name: "channels", scope: !9583, file: !9538, line: 182, baseType: !1124, size: 16, offset: 16)
!9587 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !9583, file: !9538, line: 183, baseType: !266, size: 8, offset: 32)
!9588 = !DIDerivedType(tag: DW_TAG_member, name: "vendor", scope: !9543, file: !9538, line: 621, baseType: !9589, size: 24)
!9589 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "acpi_resource_vendor", file: !9538, line: 195, size: 24, elements: !9590)
!9590 = !{!9591, !9592}
!9591 = !DIDerivedType(tag: DW_TAG_member, name: "byte_length", scope: !9589, file: !9538, line: 196, baseType: !1124, size: 16)
!9592 = !DIDerivedType(tag: DW_TAG_member, name: "byte_data", scope: !9589, file: !9538, line: 197, baseType: !6802, size: 8, offset: 16)
!9593 = !DIDerivedType(tag: DW_TAG_member, name: "vendor_typed", scope: !9543, file: !9538, line: 622, baseType: !9594, size: 160)
!9594 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "acpi_resource_vendor_typed", file: !9538, line: 202, size: 160, elements: !9595)
!9595 = !{!9596, !9597, !9598, !9600}
!9596 = !DIDerivedType(tag: DW_TAG_member, name: "byte_length", scope: !9594, file: !9538, line: 203, baseType: !1124, size: 16)
!9597 = !DIDerivedType(tag: DW_TAG_member, name: "uuid_subtype", scope: !9594, file: !9538, line: 204, baseType: !266, size: 8, offset: 16)
!9598 = !DIDerivedType(tag: DW_TAG_member, name: "uuid", scope: !9594, file: !9538, line: 205, baseType: !9599, size: 128, offset: 24)
!9599 = !DICompositeType(tag: DW_TAG_array_type, baseType: !266, size: 128, elements: !1924)
!9600 = !DIDerivedType(tag: DW_TAG_member, name: "byte_data", scope: !9594, file: !9538, line: 206, baseType: !6802, size: 8, offset: 152)
!9601 = !DIDerivedType(tag: DW_TAG_member, name: "end_tag", scope: !9543, file: !9538, line: 623, baseType: !9602, size: 8)
!9602 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "acpi_resource_end_tag", file: !9538, line: 209, size: 8, elements: !9603)
!9603 = !{!9604}
!9604 = !DIDerivedType(tag: DW_TAG_member, name: "checksum", scope: !9602, file: !9538, line: 210, baseType: !266, size: 8)
!9605 = !DIDerivedType(tag: DW_TAG_member, name: "memory24", scope: !9543, file: !9538, line: 624, baseType: !9606, size: 72)
!9606 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "acpi_resource_memory24", file: !9538, line: 213, size: 72, elements: !9607)
!9607 = !{!9608, !9609, !9610, !9611, !9612}
!9608 = !DIDerivedType(tag: DW_TAG_member, name: "write_protect", scope: !9606, file: !9538, line: 214, baseType: !266, size: 8)
!9609 = !DIDerivedType(tag: DW_TAG_member, name: "minimum", scope: !9606, file: !9538, line: 215, baseType: !1124, size: 16, offset: 8)
!9610 = !DIDerivedType(tag: DW_TAG_member, name: "maximum", scope: !9606, file: !9538, line: 216, baseType: !1124, size: 16, offset: 24)
!9611 = !DIDerivedType(tag: DW_TAG_member, name: "alignment", scope: !9606, file: !9538, line: 217, baseType: !1124, size: 16, offset: 40)
!9612 = !DIDerivedType(tag: DW_TAG_member, name: "address_length", scope: !9606, file: !9538, line: 218, baseType: !1124, size: 16, offset: 56)
!9613 = !DIDerivedType(tag: DW_TAG_member, name: "memory32", scope: !9543, file: !9538, line: 625, baseType: !9614, size: 136)
!9614 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "acpi_resource_memory32", file: !9538, line: 221, size: 136, elements: !9615)
!9615 = !{!9616, !9617, !9618, !9619, !9620}
!9616 = !DIDerivedType(tag: DW_TAG_member, name: "write_protect", scope: !9614, file: !9538, line: 222, baseType: !266, size: 8)
!9617 = !DIDerivedType(tag: DW_TAG_member, name: "minimum", scope: !9614, file: !9538, line: 223, baseType: !261, size: 32, offset: 8)
!9618 = !DIDerivedType(tag: DW_TAG_member, name: "maximum", scope: !9614, file: !9538, line: 224, baseType: !261, size: 32, offset: 40)
!9619 = !DIDerivedType(tag: DW_TAG_member, name: "alignment", scope: !9614, file: !9538, line: 225, baseType: !261, size: 32, offset: 72)
!9620 = !DIDerivedType(tag: DW_TAG_member, name: "address_length", scope: !9614, file: !9538, line: 226, baseType: !261, size: 32, offset: 104)
!9621 = !DIDerivedType(tag: DW_TAG_member, name: "fixed_memory32", scope: !9543, file: !9538, line: 626, baseType: !9622, size: 72)
!9622 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "acpi_resource_fixed_memory32", file: !9538, line: 229, size: 72, elements: !9623)
!9623 = !{!9624, !9625, !9626}
!9624 = !DIDerivedType(tag: DW_TAG_member, name: "write_protect", scope: !9622, file: !9538, line: 230, baseType: !266, size: 8)
!9625 = !DIDerivedType(tag: DW_TAG_member, name: "address", scope: !9622, file: !9538, line: 231, baseType: !261, size: 32, offset: 8)
!9626 = !DIDerivedType(tag: DW_TAG_member, name: "address_length", scope: !9622, file: !9538, line: 232, baseType: !261, size: 32, offset: 40)
!9627 = !DIDerivedType(tag: DW_TAG_member, name: "address16", scope: !9543, file: !9538, line: 627, baseType: !9628, size: 240)
!9628 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "acpi_resource_address16", file: !9538, line: 306, size: 240, elements: !9629)
!9629 = !{!9630, !9631, !9632, !9633, !9634, !9635, !9653, !9661}
!9630 = !DIDerivedType(tag: DW_TAG_member, name: "resource_type", scope: !9628, file: !9538, line: 307, baseType: !266, size: 8)
!9631 = !DIDerivedType(tag: DW_TAG_member, name: "producer_consumer", scope: !9628, file: !9538, line: 307, baseType: !266, size: 8, offset: 8)
!9632 = !DIDerivedType(tag: DW_TAG_member, name: "decode", scope: !9628, file: !9538, line: 307, baseType: !266, size: 8, offset: 16)
!9633 = !DIDerivedType(tag: DW_TAG_member, name: "min_address_fixed", scope: !9628, file: !9538, line: 307, baseType: !266, size: 8, offset: 24)
!9634 = !DIDerivedType(tag: DW_TAG_member, name: "max_address_fixed", scope: !9628, file: !9538, line: 307, baseType: !266, size: 8, offset: 32)
!9635 = !DIDerivedType(tag: DW_TAG_member, name: "info", scope: !9628, file: !9538, line: 307, baseType: !9636, size: 32, offset: 40)
!9636 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "acpi_resource_attribute", file: !9538, line: 249, size: 32, elements: !9637)
!9637 = !{!9638, !9645, !9652}
!9638 = !DIDerivedType(tag: DW_TAG_member, name: "mem", scope: !9636, file: !9538, line: 250, baseType: !9639, size: 32)
!9639 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "acpi_memory_attribute", file: !9538, line: 235, size: 32, elements: !9640)
!9640 = !{!9641, !9642, !9643, !9644}
!9641 = !DIDerivedType(tag: DW_TAG_member, name: "write_protect", scope: !9639, file: !9538, line: 236, baseType: !266, size: 8)
!9642 = !DIDerivedType(tag: DW_TAG_member, name: "caching", scope: !9639, file: !9538, line: 237, baseType: !266, size: 8, offset: 8)
!9643 = !DIDerivedType(tag: DW_TAG_member, name: "range_type", scope: !9639, file: !9538, line: 238, baseType: !266, size: 8, offset: 16)
!9644 = !DIDerivedType(tag: DW_TAG_member, name: "translation", scope: !9639, file: !9538, line: 239, baseType: !266, size: 8, offset: 24)
!9645 = !DIDerivedType(tag: DW_TAG_member, name: "io", scope: !9636, file: !9538, line: 251, baseType: !9646, size: 32)
!9646 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "acpi_io_attribute", file: !9538, line: 242, size: 32, elements: !9647)
!9647 = !{!9648, !9649, !9650, !9651}
!9648 = !DIDerivedType(tag: DW_TAG_member, name: "range_type", scope: !9646, file: !9538, line: 243, baseType: !266, size: 8)
!9649 = !DIDerivedType(tag: DW_TAG_member, name: "translation", scope: !9646, file: !9538, line: 244, baseType: !266, size: 8, offset: 8)
!9650 = !DIDerivedType(tag: DW_TAG_member, name: "translation_type", scope: !9646, file: !9538, line: 245, baseType: !266, size: 8, offset: 16)
!9651 = !DIDerivedType(tag: DW_TAG_member, name: "reserved1", scope: !9646, file: !9538, line: 246, baseType: !266, size: 8, offset: 24)
!9652 = !DIDerivedType(tag: DW_TAG_member, name: "type_specific", scope: !9636, file: !9538, line: 255, baseType: !266, size: 8)
!9653 = !DIDerivedType(tag: DW_TAG_member, name: "address", scope: !9628, file: !9538, line: 307, baseType: !9654, size: 80, offset: 72)
!9654 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "acpi_address16_attribute", file: !9538, line: 279, size: 80, elements: !9655)
!9655 = !{!9656, !9657, !9658, !9659, !9660}
!9656 = !DIDerivedType(tag: DW_TAG_member, name: "granularity", scope: !9654, file: !9538, line: 280, baseType: !1124, size: 16)
!9657 = !DIDerivedType(tag: DW_TAG_member, name: "minimum", scope: !9654, file: !9538, line: 281, baseType: !1124, size: 16, offset: 16)
!9658 = !DIDerivedType(tag: DW_TAG_member, name: "maximum", scope: !9654, file: !9538, line: 282, baseType: !1124, size: 16, offset: 32)
!9659 = !DIDerivedType(tag: DW_TAG_member, name: "translation_offset", scope: !9654, file: !9538, line: 283, baseType: !1124, size: 16, offset: 48)
!9660 = !DIDerivedType(tag: DW_TAG_member, name: "address_length", scope: !9654, file: !9538, line: 284, baseType: !1124, size: 16, offset: 64)
!9661 = !DIDerivedType(tag: DW_TAG_member, name: "resource_source", scope: !9628, file: !9538, line: 308, baseType: !9662, size: 88, offset: 152)
!9662 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "acpi_resource_source", file: !9538, line: 263, size: 88, elements: !9663)
!9663 = !{!9664, !9665, !9666}
!9664 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !9662, file: !9538, line: 264, baseType: !266, size: 8)
!9665 = !DIDerivedType(tag: DW_TAG_member, name: "string_length", scope: !9662, file: !9538, line: 265, baseType: !1124, size: 16, offset: 8)
!9666 = !DIDerivedType(tag: DW_TAG_member, name: "string_ptr", scope: !9662, file: !9538, line: 266, baseType: !505, size: 64, offset: 24)
!9667 = !DIDerivedType(tag: DW_TAG_member, name: "address32", scope: !9543, file: !9538, line: 628, baseType: !9668, size: 320)
!9668 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "acpi_resource_address32", file: !9538, line: 311, size: 320, elements: !9669)
!9669 = !{!9670, !9671, !9672, !9673, !9674, !9675, !9676, !9684}
!9670 = !DIDerivedType(tag: DW_TAG_member, name: "resource_type", scope: !9668, file: !9538, line: 312, baseType: !266, size: 8)
!9671 = !DIDerivedType(tag: DW_TAG_member, name: "producer_consumer", scope: !9668, file: !9538, line: 312, baseType: !266, size: 8, offset: 8)
!9672 = !DIDerivedType(tag: DW_TAG_member, name: "decode", scope: !9668, file: !9538, line: 312, baseType: !266, size: 8, offset: 16)
!9673 = !DIDerivedType(tag: DW_TAG_member, name: "min_address_fixed", scope: !9668, file: !9538, line: 312, baseType: !266, size: 8, offset: 24)
!9674 = !DIDerivedType(tag: DW_TAG_member, name: "max_address_fixed", scope: !9668, file: !9538, line: 312, baseType: !266, size: 8, offset: 32)
!9675 = !DIDerivedType(tag: DW_TAG_member, name: "info", scope: !9668, file: !9538, line: 312, baseType: !9636, size: 32, offset: 40)
!9676 = !DIDerivedType(tag: DW_TAG_member, name: "address", scope: !9668, file: !9538, line: 312, baseType: !9677, size: 160, offset: 72)
!9677 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "acpi_address32_attribute", file: !9538, line: 287, size: 160, elements: !9678)
!9678 = !{!9679, !9680, !9681, !9682, !9683}
!9679 = !DIDerivedType(tag: DW_TAG_member, name: "granularity", scope: !9677, file: !9538, line: 288, baseType: !261, size: 32)
!9680 = !DIDerivedType(tag: DW_TAG_member, name: "minimum", scope: !9677, file: !9538, line: 289, baseType: !261, size: 32, offset: 32)
!9681 = !DIDerivedType(tag: DW_TAG_member, name: "maximum", scope: !9677, file: !9538, line: 290, baseType: !261, size: 32, offset: 64)
!9682 = !DIDerivedType(tag: DW_TAG_member, name: "translation_offset", scope: !9677, file: !9538, line: 291, baseType: !261, size: 32, offset: 96)
!9683 = !DIDerivedType(tag: DW_TAG_member, name: "address_length", scope: !9677, file: !9538, line: 292, baseType: !261, size: 32, offset: 128)
!9684 = !DIDerivedType(tag: DW_TAG_member, name: "resource_source", scope: !9668, file: !9538, line: 313, baseType: !9662, size: 88, offset: 232)
!9685 = !DIDerivedType(tag: DW_TAG_member, name: "address64", scope: !9543, file: !9538, line: 629, baseType: !9686, size: 480)
!9686 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "acpi_resource_address64", file: !9538, line: 316, size: 480, elements: !9687)
!9687 = !{!9688, !9689, !9690, !9691, !9692, !9693, !9694, !9702}
!9688 = !DIDerivedType(tag: DW_TAG_member, name: "resource_type", scope: !9686, file: !9538, line: 317, baseType: !266, size: 8)
!9689 = !DIDerivedType(tag: DW_TAG_member, name: "producer_consumer", scope: !9686, file: !9538, line: 317, baseType: !266, size: 8, offset: 8)
!9690 = !DIDerivedType(tag: DW_TAG_member, name: "decode", scope: !9686, file: !9538, line: 317, baseType: !266, size: 8, offset: 16)
!9691 = !DIDerivedType(tag: DW_TAG_member, name: "min_address_fixed", scope: !9686, file: !9538, line: 317, baseType: !266, size: 8, offset: 24)
!9692 = !DIDerivedType(tag: DW_TAG_member, name: "max_address_fixed", scope: !9686, file: !9538, line: 317, baseType: !266, size: 8, offset: 32)
!9693 = !DIDerivedType(tag: DW_TAG_member, name: "info", scope: !9686, file: !9538, line: 317, baseType: !9636, size: 32, offset: 40)
!9694 = !DIDerivedType(tag: DW_TAG_member, name: "address", scope: !9686, file: !9538, line: 317, baseType: !9695, size: 320, offset: 72)
!9695 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "acpi_address64_attribute", file: !9538, line: 295, size: 320, elements: !9696)
!9696 = !{!9697, !9698, !9699, !9700, !9701}
!9697 = !DIDerivedType(tag: DW_TAG_member, name: "granularity", scope: !9695, file: !9538, line: 296, baseType: !284, size: 64)
!9698 = !DIDerivedType(tag: DW_TAG_member, name: "minimum", scope: !9695, file: !9538, line: 297, baseType: !284, size: 64, offset: 64)
!9699 = !DIDerivedType(tag: DW_TAG_member, name: "maximum", scope: !9695, file: !9538, line: 298, baseType: !284, size: 64, offset: 128)
!9700 = !DIDerivedType(tag: DW_TAG_member, name: "translation_offset", scope: !9695, file: !9538, line: 299, baseType: !284, size: 64, offset: 192)
!9701 = !DIDerivedType(tag: DW_TAG_member, name: "address_length", scope: !9695, file: !9538, line: 300, baseType: !284, size: 64, offset: 256)
!9702 = !DIDerivedType(tag: DW_TAG_member, name: "resource_source", scope: !9686, file: !9538, line: 318, baseType: !9662, size: 88, offset: 392)
!9703 = !DIDerivedType(tag: DW_TAG_member, name: "ext_address64", scope: !9543, file: !9538, line: 630, baseType: !9704, size: 464)
!9704 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "acpi_resource_extended_address64", file: !9538, line: 321, size: 464, elements: !9705)
!9705 = !{!9706, !9707, !9708, !9709, !9710, !9711, !9712, !9713, !9714}
!9706 = !DIDerivedType(tag: DW_TAG_member, name: "resource_type", scope: !9704, file: !9538, line: 322, baseType: !266, size: 8)
!9707 = !DIDerivedType(tag: DW_TAG_member, name: "producer_consumer", scope: !9704, file: !9538, line: 322, baseType: !266, size: 8, offset: 8)
!9708 = !DIDerivedType(tag: DW_TAG_member, name: "decode", scope: !9704, file: !9538, line: 322, baseType: !266, size: 8, offset: 16)
!9709 = !DIDerivedType(tag: DW_TAG_member, name: "min_address_fixed", scope: !9704, file: !9538, line: 322, baseType: !266, size: 8, offset: 24)
!9710 = !DIDerivedType(tag: DW_TAG_member, name: "max_address_fixed", scope: !9704, file: !9538, line: 322, baseType: !266, size: 8, offset: 32)
!9711 = !DIDerivedType(tag: DW_TAG_member, name: "info", scope: !9704, file: !9538, line: 322, baseType: !9636, size: 32, offset: 40)
!9712 = !DIDerivedType(tag: DW_TAG_member, name: "revision_ID", scope: !9704, file: !9538, line: 322, baseType: !266, size: 8, offset: 72)
!9713 = !DIDerivedType(tag: DW_TAG_member, name: "address", scope: !9704, file: !9538, line: 323, baseType: !9695, size: 320, offset: 80)
!9714 = !DIDerivedType(tag: DW_TAG_member, name: "type_specific", scope: !9704, file: !9538, line: 324, baseType: !284, size: 64, offset: 400)
!9715 = !DIDerivedType(tag: DW_TAG_member, name: "extended_irq", scope: !9543, file: !9538, line: 631, baseType: !9716, size: 168)
!9716 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "acpi_resource_extended_irq", file: !9538, line: 327, size: 168, elements: !9717)
!9717 = !{!9718, !9719, !9720, !9721, !9722, !9723, !9724, !9725}
!9718 = !DIDerivedType(tag: DW_TAG_member, name: "producer_consumer", scope: !9716, file: !9538, line: 328, baseType: !266, size: 8)
!9719 = !DIDerivedType(tag: DW_TAG_member, name: "triggering", scope: !9716, file: !9538, line: 329, baseType: !266, size: 8, offset: 8)
!9720 = !DIDerivedType(tag: DW_TAG_member, name: "polarity", scope: !9716, file: !9538, line: 330, baseType: !266, size: 8, offset: 16)
!9721 = !DIDerivedType(tag: DW_TAG_member, name: "shareable", scope: !9716, file: !9538, line: 331, baseType: !266, size: 8, offset: 24)
!9722 = !DIDerivedType(tag: DW_TAG_member, name: "wake_capable", scope: !9716, file: !9538, line: 332, baseType: !266, size: 8, offset: 32)
!9723 = !DIDerivedType(tag: DW_TAG_member, name: "interrupt_count", scope: !9716, file: !9538, line: 333, baseType: !266, size: 8, offset: 40)
!9724 = !DIDerivedType(tag: DW_TAG_member, name: "resource_source", scope: !9716, file: !9538, line: 334, baseType: !9662, size: 88, offset: 48)
!9725 = !DIDerivedType(tag: DW_TAG_member, name: "interrupts", scope: !9716, file: !9538, line: 335, baseType: !9726, size: 32, offset: 136)
!9726 = !DICompositeType(tag: DW_TAG_array_type, baseType: !261, size: 32, elements: !2533)
!9727 = !DIDerivedType(tag: DW_TAG_member, name: "generic_reg", scope: !9543, file: !9538, line: 632, baseType: !9728, size: 96)
!9728 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "acpi_resource_generic_register", file: !9538, line: 338, size: 96, elements: !9729)
!9729 = !{!9730, !9731, !9732, !9733, !9734}
!9730 = !DIDerivedType(tag: DW_TAG_member, name: "space_id", scope: !9728, file: !9538, line: 339, baseType: !266, size: 8)
!9731 = !DIDerivedType(tag: DW_TAG_member, name: "bit_width", scope: !9728, file: !9538, line: 340, baseType: !266, size: 8, offset: 8)
!9732 = !DIDerivedType(tag: DW_TAG_member, name: "bit_offset", scope: !9728, file: !9538, line: 341, baseType: !266, size: 8, offset: 16)
!9733 = !DIDerivedType(tag: DW_TAG_member, name: "access_size", scope: !9728, file: !9538, line: 342, baseType: !266, size: 8, offset: 24)
!9734 = !DIDerivedType(tag: DW_TAG_member, name: "address", scope: !9728, file: !9538, line: 343, baseType: !284, size: 64, offset: 32)
!9735 = !DIDerivedType(tag: DW_TAG_member, name: "gpio", scope: !9543, file: !9538, line: 633, baseType: !9736, size: 352)
!9736 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "acpi_resource_gpio", file: !9538, line: 346, size: 352, elements: !9737)
!9737 = !{!9738, !9739, !9740, !9741, !9742, !9743, !9744, !9745, !9746, !9747, !9748, !9749, !9750, !9751, !9752, !9754}
!9738 = !DIDerivedType(tag: DW_TAG_member, name: "revision_id", scope: !9736, file: !9538, line: 347, baseType: !266, size: 8)
!9739 = !DIDerivedType(tag: DW_TAG_member, name: "connection_type", scope: !9736, file: !9538, line: 348, baseType: !266, size: 8, offset: 8)
!9740 = !DIDerivedType(tag: DW_TAG_member, name: "producer_consumer", scope: !9736, file: !9538, line: 349, baseType: !266, size: 8, offset: 16)
!9741 = !DIDerivedType(tag: DW_TAG_member, name: "pin_config", scope: !9736, file: !9538, line: 350, baseType: !266, size: 8, offset: 24)
!9742 = !DIDerivedType(tag: DW_TAG_member, name: "shareable", scope: !9736, file: !9538, line: 351, baseType: !266, size: 8, offset: 32)
!9743 = !DIDerivedType(tag: DW_TAG_member, name: "wake_capable", scope: !9736, file: !9538, line: 352, baseType: !266, size: 8, offset: 40)
!9744 = !DIDerivedType(tag: DW_TAG_member, name: "io_restriction", scope: !9736, file: !9538, line: 353, baseType: !266, size: 8, offset: 48)
!9745 = !DIDerivedType(tag: DW_TAG_member, name: "triggering", scope: !9736, file: !9538, line: 354, baseType: !266, size: 8, offset: 56)
!9746 = !DIDerivedType(tag: DW_TAG_member, name: "polarity", scope: !9736, file: !9538, line: 355, baseType: !266, size: 8, offset: 64)
!9747 = !DIDerivedType(tag: DW_TAG_member, name: "drive_strength", scope: !9736, file: !9538, line: 356, baseType: !1124, size: 16, offset: 72)
!9748 = !DIDerivedType(tag: DW_TAG_member, name: "debounce_timeout", scope: !9736, file: !9538, line: 357, baseType: !1124, size: 16, offset: 88)
!9749 = !DIDerivedType(tag: DW_TAG_member, name: "pin_table_length", scope: !9736, file: !9538, line: 358, baseType: !1124, size: 16, offset: 104)
!9750 = !DIDerivedType(tag: DW_TAG_member, name: "vendor_length", scope: !9736, file: !9538, line: 359, baseType: !1124, size: 16, offset: 120)
!9751 = !DIDerivedType(tag: DW_TAG_member, name: "resource_source", scope: !9736, file: !9538, line: 360, baseType: !9662, size: 88, offset: 136)
!9752 = !DIDerivedType(tag: DW_TAG_member, name: "pin_table", scope: !9736, file: !9538, line: 361, baseType: !9753, size: 64, offset: 224)
!9753 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1124, size: 64)
!9754 = !DIDerivedType(tag: DW_TAG_member, name: "vendor_data", scope: !9736, file: !9538, line: 362, baseType: !390, size: 64, offset: 288)
!9755 = !DIDerivedType(tag: DW_TAG_member, name: "i2c_serial_bus", scope: !9543, file: !9538, line: 634, baseType: !9756, size: 288)
!9756 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "acpi_resource_i2c_serialbus", file: !9538, line: 412, size: 288, elements: !9757)
!9757 = !{!9758, !9759, !9760, !9761, !9762, !9763, !9764, !9765, !9766, !9767, !9768, !9769, !9770}
!9758 = !DIDerivedType(tag: DW_TAG_member, name: "revision_id", scope: !9756, file: !9538, line: 413, baseType: !266, size: 8)
!9759 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !9756, file: !9538, line: 413, baseType: !266, size: 8, offset: 8)
!9760 = !DIDerivedType(tag: DW_TAG_member, name: "producer_consumer", scope: !9756, file: !9538, line: 413, baseType: !266, size: 8, offset: 16)
!9761 = !DIDerivedType(tag: DW_TAG_member, name: "slave_mode", scope: !9756, file: !9538, line: 413, baseType: !266, size: 8, offset: 24)
!9762 = !DIDerivedType(tag: DW_TAG_member, name: "connection_sharing", scope: !9756, file: !9538, line: 413, baseType: !266, size: 8, offset: 32)
!9763 = !DIDerivedType(tag: DW_TAG_member, name: "type_revision_id", scope: !9756, file: !9538, line: 413, baseType: !266, size: 8, offset: 40)
!9764 = !DIDerivedType(tag: DW_TAG_member, name: "type_data_length", scope: !9756, file: !9538, line: 413, baseType: !1124, size: 16, offset: 48)
!9765 = !DIDerivedType(tag: DW_TAG_member, name: "vendor_length", scope: !9756, file: !9538, line: 413, baseType: !1124, size: 16, offset: 64)
!9766 = !DIDerivedType(tag: DW_TAG_member, name: "resource_source", scope: !9756, file: !9538, line: 413, baseType: !9662, size: 88, offset: 80)
!9767 = !DIDerivedType(tag: DW_TAG_member, name: "vendor_data", scope: !9756, file: !9538, line: 413, baseType: !390, size: 64, offset: 168)
!9768 = !DIDerivedType(tag: DW_TAG_member, name: "access_mode", scope: !9756, file: !9538, line: 413, baseType: !266, size: 8, offset: 232)
!9769 = !DIDerivedType(tag: DW_TAG_member, name: "slave_address", scope: !9756, file: !9538, line: 414, baseType: !1124, size: 16, offset: 240)
!9770 = !DIDerivedType(tag: DW_TAG_member, name: "connection_speed", scope: !9756, file: !9538, line: 415, baseType: !261, size: 32, offset: 256)
!9771 = !DIDerivedType(tag: DW_TAG_member, name: "spi_serial_bus", scope: !9543, file: !9538, line: 635, baseType: !9772, size: 320)
!9772 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "acpi_resource_spi_serialbus", file: !9538, line: 423, size: 320, elements: !9773)
!9773 = !{!9774, !9775, !9776, !9777, !9778, !9779, !9780, !9781, !9782, !9783, !9784, !9785, !9786, !9787, !9788, !9789, !9790}
!9774 = !DIDerivedType(tag: DW_TAG_member, name: "revision_id", scope: !9772, file: !9538, line: 424, baseType: !266, size: 8)
!9775 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !9772, file: !9538, line: 424, baseType: !266, size: 8, offset: 8)
!9776 = !DIDerivedType(tag: DW_TAG_member, name: "producer_consumer", scope: !9772, file: !9538, line: 424, baseType: !266, size: 8, offset: 16)
!9777 = !DIDerivedType(tag: DW_TAG_member, name: "slave_mode", scope: !9772, file: !9538, line: 424, baseType: !266, size: 8, offset: 24)
!9778 = !DIDerivedType(tag: DW_TAG_member, name: "connection_sharing", scope: !9772, file: !9538, line: 424, baseType: !266, size: 8, offset: 32)
!9779 = !DIDerivedType(tag: DW_TAG_member, name: "type_revision_id", scope: !9772, file: !9538, line: 424, baseType: !266, size: 8, offset: 40)
!9780 = !DIDerivedType(tag: DW_TAG_member, name: "type_data_length", scope: !9772, file: !9538, line: 424, baseType: !1124, size: 16, offset: 48)
!9781 = !DIDerivedType(tag: DW_TAG_member, name: "vendor_length", scope: !9772, file: !9538, line: 424, baseType: !1124, size: 16, offset: 64)
!9782 = !DIDerivedType(tag: DW_TAG_member, name: "resource_source", scope: !9772, file: !9538, line: 424, baseType: !9662, size: 88, offset: 80)
!9783 = !DIDerivedType(tag: DW_TAG_member, name: "vendor_data", scope: !9772, file: !9538, line: 424, baseType: !390, size: 64, offset: 168)
!9784 = !DIDerivedType(tag: DW_TAG_member, name: "wire_mode", scope: !9772, file: !9538, line: 424, baseType: !266, size: 8, offset: 232)
!9785 = !DIDerivedType(tag: DW_TAG_member, name: "device_polarity", scope: !9772, file: !9538, line: 425, baseType: !266, size: 8, offset: 240)
!9786 = !DIDerivedType(tag: DW_TAG_member, name: "data_bit_length", scope: !9772, file: !9538, line: 426, baseType: !266, size: 8, offset: 248)
!9787 = !DIDerivedType(tag: DW_TAG_member, name: "clock_phase", scope: !9772, file: !9538, line: 427, baseType: !266, size: 8, offset: 256)
!9788 = !DIDerivedType(tag: DW_TAG_member, name: "clock_polarity", scope: !9772, file: !9538, line: 428, baseType: !266, size: 8, offset: 264)
!9789 = !DIDerivedType(tag: DW_TAG_member, name: "device_selection", scope: !9772, file: !9538, line: 429, baseType: !1124, size: 16, offset: 272)
!9790 = !DIDerivedType(tag: DW_TAG_member, name: "connection_speed", scope: !9772, file: !9538, line: 430, baseType: !261, size: 32, offset: 288)
!9791 = !DIDerivedType(tag: DW_TAG_member, name: "uart_serial_bus", scope: !9543, file: !9538, line: 636, baseType: !9792, size: 344)
!9792 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "acpi_resource_uart_serialbus", file: !9538, line: 453, size: 344, elements: !9793)
!9793 = !{!9794, !9795, !9796, !9797, !9798, !9799, !9800, !9801, !9802, !9803, !9804, !9805, !9806, !9807, !9808, !9809, !9810, !9811, !9812}
!9794 = !DIDerivedType(tag: DW_TAG_member, name: "revision_id", scope: !9792, file: !9538, line: 454, baseType: !266, size: 8)
!9795 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !9792, file: !9538, line: 454, baseType: !266, size: 8, offset: 8)
!9796 = !DIDerivedType(tag: DW_TAG_member, name: "producer_consumer", scope: !9792, file: !9538, line: 454, baseType: !266, size: 8, offset: 16)
!9797 = !DIDerivedType(tag: DW_TAG_member, name: "slave_mode", scope: !9792, file: !9538, line: 454, baseType: !266, size: 8, offset: 24)
!9798 = !DIDerivedType(tag: DW_TAG_member, name: "connection_sharing", scope: !9792, file: !9538, line: 454, baseType: !266, size: 8, offset: 32)
!9799 = !DIDerivedType(tag: DW_TAG_member, name: "type_revision_id", scope: !9792, file: !9538, line: 454, baseType: !266, size: 8, offset: 40)
!9800 = !DIDerivedType(tag: DW_TAG_member, name: "type_data_length", scope: !9792, file: !9538, line: 454, baseType: !1124, size: 16, offset: 48)
!9801 = !DIDerivedType(tag: DW_TAG_member, name: "vendor_length", scope: !9792, file: !9538, line: 454, baseType: !1124, size: 16, offset: 64)
!9802 = !DIDerivedType(tag: DW_TAG_member, name: "resource_source", scope: !9792, file: !9538, line: 454, baseType: !9662, size: 88, offset: 80)
!9803 = !DIDerivedType(tag: DW_TAG_member, name: "vendor_data", scope: !9792, file: !9538, line: 454, baseType: !390, size: 64, offset: 168)
!9804 = !DIDerivedType(tag: DW_TAG_member, name: "endian", scope: !9792, file: !9538, line: 454, baseType: !266, size: 8, offset: 232)
!9805 = !DIDerivedType(tag: DW_TAG_member, name: "data_bits", scope: !9792, file: !9538, line: 455, baseType: !266, size: 8, offset: 240)
!9806 = !DIDerivedType(tag: DW_TAG_member, name: "stop_bits", scope: !9792, file: !9538, line: 456, baseType: !266, size: 8, offset: 248)
!9807 = !DIDerivedType(tag: DW_TAG_member, name: "flow_control", scope: !9792, file: !9538, line: 457, baseType: !266, size: 8, offset: 256)
!9808 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !9792, file: !9538, line: 458, baseType: !266, size: 8, offset: 264)
!9809 = !DIDerivedType(tag: DW_TAG_member, name: "lines_enabled", scope: !9792, file: !9538, line: 459, baseType: !266, size: 8, offset: 272)
!9810 = !DIDerivedType(tag: DW_TAG_member, name: "rx_fifo_size", scope: !9792, file: !9538, line: 460, baseType: !1124, size: 16, offset: 280)
!9811 = !DIDerivedType(tag: DW_TAG_member, name: "tx_fifo_size", scope: !9792, file: !9538, line: 461, baseType: !1124, size: 16, offset: 296)
!9812 = !DIDerivedType(tag: DW_TAG_member, name: "default_baud_rate", scope: !9792, file: !9538, line: 462, baseType: !261, size: 32, offset: 312)
!9813 = !DIDerivedType(tag: DW_TAG_member, name: "common_serial_bus", scope: !9543, file: !9538, line: 637, baseType: !9814, size: 232)
!9814 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "acpi_resource_common_serialbus", file: !9538, line: 398, size: 232, elements: !9815)
!9815 = !{!9816, !9817, !9818, !9819, !9820, !9821, !9822, !9823, !9824, !9825}
!9816 = !DIDerivedType(tag: DW_TAG_member, name: "revision_id", scope: !9814, file: !9538, line: 399, baseType: !266, size: 8)
!9817 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !9814, file: !9538, line: 399, baseType: !266, size: 8, offset: 8)
!9818 = !DIDerivedType(tag: DW_TAG_member, name: "producer_consumer", scope: !9814, file: !9538, line: 399, baseType: !266, size: 8, offset: 16)
!9819 = !DIDerivedType(tag: DW_TAG_member, name: "slave_mode", scope: !9814, file: !9538, line: 399, baseType: !266, size: 8, offset: 24)
!9820 = !DIDerivedType(tag: DW_TAG_member, name: "connection_sharing", scope: !9814, file: !9538, line: 399, baseType: !266, size: 8, offset: 32)
!9821 = !DIDerivedType(tag: DW_TAG_member, name: "type_revision_id", scope: !9814, file: !9538, line: 399, baseType: !266, size: 8, offset: 40)
!9822 = !DIDerivedType(tag: DW_TAG_member, name: "type_data_length", scope: !9814, file: !9538, line: 399, baseType: !1124, size: 16, offset: 48)
!9823 = !DIDerivedType(tag: DW_TAG_member, name: "vendor_length", scope: !9814, file: !9538, line: 399, baseType: !1124, size: 16, offset: 64)
!9824 = !DIDerivedType(tag: DW_TAG_member, name: "resource_source", scope: !9814, file: !9538, line: 399, baseType: !9662, size: 88, offset: 80)
!9825 = !DIDerivedType(tag: DW_TAG_member, name: "vendor_data", scope: !9814, file: !9538, line: 399, baseType: !390, size: 64, offset: 168)
!9826 = !DIDerivedType(tag: DW_TAG_member, name: "pin_function", scope: !9543, file: !9538, line: 638, baseType: !9827, size: 288)
!9827 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "acpi_resource_pin_function", file: !9538, line: 508, size: 288, elements: !9828)
!9828 = !{!9829, !9830, !9831, !9832, !9833, !9834, !9835, !9836, !9837}
!9829 = !DIDerivedType(tag: DW_TAG_member, name: "revision_id", scope: !9827, file: !9538, line: 509, baseType: !266, size: 8)
!9830 = !DIDerivedType(tag: DW_TAG_member, name: "pin_config", scope: !9827, file: !9538, line: 510, baseType: !266, size: 8, offset: 8)
!9831 = !DIDerivedType(tag: DW_TAG_member, name: "shareable", scope: !9827, file: !9538, line: 511, baseType: !266, size: 8, offset: 16)
!9832 = !DIDerivedType(tag: DW_TAG_member, name: "function_number", scope: !9827, file: !9538, line: 512, baseType: !1124, size: 16, offset: 24)
!9833 = !DIDerivedType(tag: DW_TAG_member, name: "pin_table_length", scope: !9827, file: !9538, line: 513, baseType: !1124, size: 16, offset: 40)
!9834 = !DIDerivedType(tag: DW_TAG_member, name: "vendor_length", scope: !9827, file: !9538, line: 514, baseType: !1124, size: 16, offset: 56)
!9835 = !DIDerivedType(tag: DW_TAG_member, name: "resource_source", scope: !9827, file: !9538, line: 515, baseType: !9662, size: 88, offset: 72)
!9836 = !DIDerivedType(tag: DW_TAG_member, name: "pin_table", scope: !9827, file: !9538, line: 516, baseType: !9753, size: 64, offset: 160)
!9837 = !DIDerivedType(tag: DW_TAG_member, name: "vendor_data", scope: !9827, file: !9538, line: 517, baseType: !390, size: 64, offset: 224)
!9838 = !DIDerivedType(tag: DW_TAG_member, name: "pin_config", scope: !9543, file: !9538, line: 639, baseType: !9839, size: 312)
!9839 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "acpi_resource_pin_config", file: !9538, line: 520, size: 312, elements: !9840)
!9840 = !{!9841, !9842, !9843, !9844, !9845, !9846, !9847, !9848, !9849, !9850}
!9841 = !DIDerivedType(tag: DW_TAG_member, name: "revision_id", scope: !9839, file: !9538, line: 521, baseType: !266, size: 8)
!9842 = !DIDerivedType(tag: DW_TAG_member, name: "producer_consumer", scope: !9839, file: !9538, line: 522, baseType: !266, size: 8, offset: 8)
!9843 = !DIDerivedType(tag: DW_TAG_member, name: "shareable", scope: !9839, file: !9538, line: 523, baseType: !266, size: 8, offset: 16)
!9844 = !DIDerivedType(tag: DW_TAG_member, name: "pin_config_type", scope: !9839, file: !9538, line: 524, baseType: !266, size: 8, offset: 24)
!9845 = !DIDerivedType(tag: DW_TAG_member, name: "pin_config_value", scope: !9839, file: !9538, line: 525, baseType: !261, size: 32, offset: 32)
!9846 = !DIDerivedType(tag: DW_TAG_member, name: "pin_table_length", scope: !9839, file: !9538, line: 526, baseType: !1124, size: 16, offset: 64)
!9847 = !DIDerivedType(tag: DW_TAG_member, name: "vendor_length", scope: !9839, file: !9538, line: 527, baseType: !1124, size: 16, offset: 80)
!9848 = !DIDerivedType(tag: DW_TAG_member, name: "resource_source", scope: !9839, file: !9538, line: 528, baseType: !9662, size: 88, offset: 96)
!9849 = !DIDerivedType(tag: DW_TAG_member, name: "pin_table", scope: !9839, file: !9538, line: 529, baseType: !9753, size: 64, offset: 184)
!9850 = !DIDerivedType(tag: DW_TAG_member, name: "vendor_data", scope: !9839, file: !9538, line: 530, baseType: !390, size: 64, offset: 248)
!9851 = !DIDerivedType(tag: DW_TAG_member, name: "pin_group", scope: !9543, file: !9538, line: 640, baseType: !9852, size: 256)
!9852 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "acpi_resource_pin_group", file: !9538, line: 550, size: 256, elements: !9853)
!9853 = !{!9854, !9855, !9856, !9857, !9858, !9859, !9864}
!9854 = !DIDerivedType(tag: DW_TAG_member, name: "revision_id", scope: !9852, file: !9538, line: 551, baseType: !266, size: 8)
!9855 = !DIDerivedType(tag: DW_TAG_member, name: "producer_consumer", scope: !9852, file: !9538, line: 552, baseType: !266, size: 8, offset: 8)
!9856 = !DIDerivedType(tag: DW_TAG_member, name: "pin_table_length", scope: !9852, file: !9538, line: 553, baseType: !1124, size: 16, offset: 16)
!9857 = !DIDerivedType(tag: DW_TAG_member, name: "vendor_length", scope: !9852, file: !9538, line: 554, baseType: !1124, size: 16, offset: 32)
!9858 = !DIDerivedType(tag: DW_TAG_member, name: "pin_table", scope: !9852, file: !9538, line: 555, baseType: !9753, size: 64, offset: 48)
!9859 = !DIDerivedType(tag: DW_TAG_member, name: "resource_label", scope: !9852, file: !9538, line: 556, baseType: !9860, size: 80, offset: 112)
!9860 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "acpi_resource_label", file: !9538, line: 258, size: 80, elements: !9861)
!9861 = !{!9862, !9863}
!9862 = !DIDerivedType(tag: DW_TAG_member, name: "string_length", scope: !9860, file: !9538, line: 259, baseType: !1124, size: 16)
!9863 = !DIDerivedType(tag: DW_TAG_member, name: "string_ptr", scope: !9860, file: !9538, line: 260, baseType: !505, size: 64, offset: 16)
!9864 = !DIDerivedType(tag: DW_TAG_member, name: "vendor_data", scope: !9852, file: !9538, line: 557, baseType: !390, size: 64, offset: 192)
!9865 = !DIDerivedType(tag: DW_TAG_member, name: "pin_group_function", scope: !9543, file: !9538, line: 641, baseType: !9866, size: 288)
!9866 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "acpi_resource_pin_group_function", file: !9538, line: 560, size: 288, elements: !9867)
!9867 = !{!9868, !9869, !9870, !9871, !9872, !9873, !9874, !9875}
!9868 = !DIDerivedType(tag: DW_TAG_member, name: "revision_id", scope: !9866, file: !9538, line: 561, baseType: !266, size: 8)
!9869 = !DIDerivedType(tag: DW_TAG_member, name: "producer_consumer", scope: !9866, file: !9538, line: 562, baseType: !266, size: 8, offset: 8)
!9870 = !DIDerivedType(tag: DW_TAG_member, name: "shareable", scope: !9866, file: !9538, line: 563, baseType: !266, size: 8, offset: 16)
!9871 = !DIDerivedType(tag: DW_TAG_member, name: "function_number", scope: !9866, file: !9538, line: 564, baseType: !1124, size: 16, offset: 24)
!9872 = !DIDerivedType(tag: DW_TAG_member, name: "vendor_length", scope: !9866, file: !9538, line: 565, baseType: !1124, size: 16, offset: 40)
!9873 = !DIDerivedType(tag: DW_TAG_member, name: "resource_source", scope: !9866, file: !9538, line: 566, baseType: !9662, size: 88, offset: 56)
!9874 = !DIDerivedType(tag: DW_TAG_member, name: "resource_source_label", scope: !9866, file: !9538, line: 567, baseType: !9860, size: 80, offset: 144)
!9875 = !DIDerivedType(tag: DW_TAG_member, name: "vendor_data", scope: !9866, file: !9538, line: 568, baseType: !390, size: 64, offset: 224)
!9876 = !DIDerivedType(tag: DW_TAG_member, name: "pin_group_config", scope: !9543, file: !9538, line: 642, baseType: !9877, size: 312)
!9877 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "acpi_resource_pin_group_config", file: !9538, line: 571, size: 312, elements: !9878)
!9878 = !{!9879, !9880, !9881, !9882, !9883, !9884, !9885, !9886, !9887}
!9879 = !DIDerivedType(tag: DW_TAG_member, name: "revision_id", scope: !9877, file: !9538, line: 572, baseType: !266, size: 8)
!9880 = !DIDerivedType(tag: DW_TAG_member, name: "producer_consumer", scope: !9877, file: !9538, line: 573, baseType: !266, size: 8, offset: 8)
!9881 = !DIDerivedType(tag: DW_TAG_member, name: "shareable", scope: !9877, file: !9538, line: 574, baseType: !266, size: 8, offset: 16)
!9882 = !DIDerivedType(tag: DW_TAG_member, name: "pin_config_type", scope: !9877, file: !9538, line: 575, baseType: !266, size: 8, offset: 24)
!9883 = !DIDerivedType(tag: DW_TAG_member, name: "pin_config_value", scope: !9877, file: !9538, line: 576, baseType: !261, size: 32, offset: 32)
!9884 = !DIDerivedType(tag: DW_TAG_member, name: "vendor_length", scope: !9877, file: !9538, line: 577, baseType: !1124, size: 16, offset: 64)
!9885 = !DIDerivedType(tag: DW_TAG_member, name: "resource_source", scope: !9877, file: !9538, line: 578, baseType: !9662, size: 88, offset: 80)
!9886 = !DIDerivedType(tag: DW_TAG_member, name: "resource_source_label", scope: !9877, file: !9538, line: 579, baseType: !9860, size: 80, offset: 168)
!9887 = !DIDerivedType(tag: DW_TAG_member, name: "vendor_data", scope: !9877, file: !9538, line: 580, baseType: !390, size: 64, offset: 248)
!9888 = !DIDerivedType(tag: DW_TAG_member, name: "address", scope: !9543, file: !9538, line: 646, baseType: !9889, size: 72)
!9889 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "acpi_resource_address", file: !9538, line: 303, size: 72, elements: !9890)
!9890 = !{!9891, !9892, !9893, !9894, !9895, !9896}
!9891 = !DIDerivedType(tag: DW_TAG_member, name: "resource_type", scope: !9889, file: !9538, line: 304, baseType: !266, size: 8)
!9892 = !DIDerivedType(tag: DW_TAG_member, name: "producer_consumer", scope: !9889, file: !9538, line: 304, baseType: !266, size: 8, offset: 8)
!9893 = !DIDerivedType(tag: DW_TAG_member, name: "decode", scope: !9889, file: !9538, line: 304, baseType: !266, size: 8, offset: 16)
!9894 = !DIDerivedType(tag: DW_TAG_member, name: "min_address_fixed", scope: !9889, file: !9538, line: 304, baseType: !266, size: 8, offset: 24)
!9895 = !DIDerivedType(tag: DW_TAG_member, name: "max_address_fixed", scope: !9889, file: !9538, line: 304, baseType: !266, size: 8, offset: 32)
!9896 = !DIDerivedType(tag: DW_TAG_member, name: "info", scope: !9889, file: !9538, line: 304, baseType: !9636, size: 32, offset: 40)
!9897 = !DILocalVariable(name: "resource", arg: 1, scope: !9533, file: !3, line: 1674, type: !9536)
!9898 = !DILocation(line: 1674, column: 41, scope: !9533)
!9899 = !DILocalVariable(name: "context", arg: 2, scope: !9533, file: !3, line: 1674, type: !247)
!9900 = !DILocation(line: 1674, column: 57, scope: !9533)
!9901 = !DILocalVariable(name: "ec", scope: !9533, file: !3, line: 1676, type: !330)
!9902 = !DILocation(line: 1676, column: 18, scope: !9533)
!9903 = !DILocation(line: 1676, column: 23, scope: !9533)
!9904 = !DILocation(line: 1678, column: 6, scope: !9905)
!9905 = distinct !DILexicalBlock(scope: !9533, file: !3, line: 1678, column: 6)
!9906 = !DILocation(line: 1678, column: 16, scope: !9905)
!9907 = !DILocation(line: 1678, column: 21, scope: !9905)
!9908 = !DILocation(line: 1678, column: 6, scope: !9533)
!9909 = !DILocation(line: 1679, column: 3, scope: !9905)
!9910 = !DILocation(line: 1686, column: 6, scope: !9911)
!9911 = distinct !DILexicalBlock(scope: !9533, file: !3, line: 1686, column: 6)
!9912 = !DILocation(line: 1686, column: 10, scope: !9911)
!9913 = !DILocation(line: 1686, column: 20, scope: !9911)
!9914 = !DILocation(line: 1686, column: 6, scope: !9533)
!9915 = !DILocation(line: 1687, column: 19, scope: !9911)
!9916 = !DILocation(line: 1687, column: 29, scope: !9911)
!9917 = !DILocation(line: 1687, column: 34, scope: !9911)
!9918 = !DILocation(line: 1687, column: 37, scope: !9911)
!9919 = !DILocation(line: 1687, column: 3, scope: !9911)
!9920 = !DILocation(line: 1687, column: 7, scope: !9911)
!9921 = !DILocation(line: 1687, column: 17, scope: !9911)
!9922 = !DILocation(line: 1688, column: 11, scope: !9923)
!9923 = distinct !DILexicalBlock(scope: !9911, file: !3, line: 1688, column: 11)
!9924 = !DILocation(line: 1688, column: 15, scope: !9923)
!9925 = !DILocation(line: 1688, column: 28, scope: !9923)
!9926 = !DILocation(line: 1688, column: 11, scope: !9911)
!9927 = !DILocation(line: 1689, column: 22, scope: !9923)
!9928 = !DILocation(line: 1689, column: 32, scope: !9923)
!9929 = !DILocation(line: 1689, column: 37, scope: !9923)
!9930 = !DILocation(line: 1689, column: 40, scope: !9923)
!9931 = !DILocation(line: 1689, column: 3, scope: !9923)
!9932 = !DILocation(line: 1689, column: 7, scope: !9923)
!9933 = !DILocation(line: 1689, column: 20, scope: !9923)
!9934 = !DILocation(line: 1691, column: 3, scope: !9923)
!9935 = !DILocation(line: 1693, column: 2, scope: !9533)
!9936 = !DILocation(line: 1694, column: 1, scope: !9533)
!9937 = distinct !DISubprogram(name: "ec_install_handlers", scope: !3, file: !3, line: 1454, type: !6742, scopeLine: 1455, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !372)
!9938 = !DILocalVariable(name: "ec", arg: 1, scope: !9937, file: !3, line: 1454, type: !330)
!9939 = !DILocation(line: 1454, column: 48, scope: !9937)
!9940 = !DILocalVariable(name: "device", arg: 2, scope: !9937, file: !3, line: 1454, type: !423)
!9941 = !DILocation(line: 1454, column: 72, scope: !9937)
!9942 = !DILocalVariable(name: "status", scope: !9937, file: !3, line: 1456, type: !421)
!9943 = !DILocation(line: 1456, column: 14, scope: !9937)
!9944 = !DILocation(line: 1458, column: 16, scope: !9937)
!9945 = !DILocation(line: 1458, column: 2, scope: !9937)
!9946 = !DILocation(line: 1460, column: 48, scope: !9947)
!9947 = distinct !DILexicalBlock(scope: !9937, file: !3, line: 1460, column: 6)
!9948 = !DILocation(line: 1460, column: 52, scope: !9947)
!9949 = !DILocation(line: 1460, column: 7, scope: !9947)
!9950 = !DILocation(line: 1460, column: 6, scope: !9937)
!9951 = !DILocation(line: 1461, column: 23, scope: !9952)
!9952 = distinct !DILexicalBlock(scope: !9947, file: !3, line: 1460, column: 60)
!9953 = !DILocation(line: 1461, column: 3, scope: !9952)
!9954 = !DILocation(line: 1462, column: 47, scope: !9952)
!9955 = !DILocation(line: 1462, column: 51, scope: !9952)
!9956 = !DILocation(line: 1465, column: 18, scope: !9952)
!9957 = !DILocation(line: 1462, column: 12, scope: !9952)
!9958 = !DILocation(line: 1462, column: 10, scope: !9952)
!9959 = !DILocation(line: 1466, column: 7, scope: !9960)
!9960 = distinct !DILexicalBlock(scope: !9952, file: !3, line: 1466, column: 7)
!9961 = !DILocation(line: 1466, column: 7, scope: !9952)
!9962 = !DILocation(line: 1467, column: 17, scope: !9963)
!9963 = distinct !DILexicalBlock(scope: !9960, file: !3, line: 1466, column: 29)
!9964 = !DILocation(line: 1467, column: 4, scope: !9963)
!9965 = !DILocation(line: 1468, column: 4, scope: !9963)
!9966 = !DILocation(line: 1470, column: 43, scope: !9952)
!9967 = !DILocation(line: 1470, column: 47, scope: !9952)
!9968 = !DILocation(line: 1470, column: 3, scope: !9952)
!9969 = !DILocation(line: 1471, column: 2, scope: !9952)
!9970 = !DILocation(line: 1473, column: 7, scope: !9971)
!9971 = distinct !DILexicalBlock(scope: !9937, file: !3, line: 1473, column: 6)
!9972 = !DILocation(line: 1473, column: 6, scope: !9937)
!9973 = !DILocation(line: 1474, column: 3, scope: !9971)
!9974 = !DILocation(line: 1476, column: 6, scope: !9975)
!9975 = distinct !DILexicalBlock(scope: !9937, file: !3, line: 1476, column: 6)
!9976 = !DILocation(line: 1476, column: 10, scope: !9975)
!9977 = !DILocation(line: 1476, column: 14, scope: !9975)
!9978 = !DILocation(line: 1476, column: 6, scope: !9937)
!9979 = !DILocalVariable(name: "irq", scope: !9980, file: !3, line: 1478, type: !294)
!9980 = distinct !DILexicalBlock(scope: !9975, file: !3, line: 1476, column: 19)
!9981 = !DILocation(line: 1478, column: 7, scope: !9980)
!9982 = !DILocation(line: 1478, column: 35, scope: !9980)
!9983 = !DILocation(line: 1478, column: 13, scope: !9980)
!9984 = !DILocation(line: 1483, column: 7, scope: !9985)
!9985 = distinct !DILexicalBlock(scope: !9980, file: !3, line: 1483, column: 7)
!9986 = !DILocation(line: 1483, column: 11, scope: !9985)
!9987 = !DILocation(line: 1483, column: 7, scope: !9980)
!9988 = !DILocation(line: 1484, column: 4, scope: !9985)
!9989 = !DILocation(line: 1485, column: 12, scope: !9990)
!9990 = distinct !DILexicalBlock(scope: !9985, file: !3, line: 1485, column: 12)
!9991 = !DILocation(line: 1485, column: 16, scope: !9990)
!9992 = !DILocation(line: 1485, column: 12, scope: !9985)
!9993 = !DILocation(line: 1486, column: 14, scope: !9990)
!9994 = !DILocation(line: 1486, column: 4, scope: !9990)
!9995 = !DILocation(line: 1486, column: 8, scope: !9990)
!9996 = !DILocation(line: 1486, column: 12, scope: !9990)
!9997 = !DILocation(line: 1487, column: 2, scope: !9980)
!9998 = !DILocation(line: 1489, column: 51, scope: !9999)
!9999 = distinct !DILexicalBlock(scope: !9937, file: !3, line: 1489, column: 6)
!10000 = !DILocation(line: 1489, column: 55, scope: !9999)
!10001 = !DILocation(line: 1489, column: 7, scope: !9999)
!10002 = !DILocation(line: 1489, column: 6, scope: !9937)
!10003 = !DILocation(line: 1491, column: 41, scope: !10004)
!10004 = distinct !DILexicalBlock(scope: !9999, file: !3, line: 1489, column: 63)
!10005 = !DILocation(line: 1491, column: 45, scope: !10004)
!10006 = !DILocation(line: 1493, column: 15, scope: !10004)
!10007 = !DILocation(line: 1491, column: 3, scope: !10004)
!10008 = !DILocation(line: 1494, column: 46, scope: !10004)
!10009 = !DILocation(line: 1494, column: 50, scope: !10004)
!10010 = !DILocation(line: 1494, column: 3, scope: !10004)
!10011 = !DILocation(line: 1495, column: 2, scope: !10004)
!10012 = !DILocation(line: 1496, column: 51, scope: !10013)
!10013 = distinct !DILexicalBlock(scope: !9937, file: !3, line: 1496, column: 6)
!10014 = !DILocation(line: 1496, column: 55, scope: !10013)
!10015 = !DILocation(line: 1496, column: 7, scope: !10013)
!10016 = !DILocation(line: 1496, column: 6, scope: !9937)
!10017 = !DILocalVariable(name: "ready", scope: !10018, file: !3, line: 1497, type: !339)
!10018 = distinct !DILexicalBlock(scope: !10013, file: !3, line: 1496, column: 63)
!10019 = !DILocation(line: 1497, column: 8, scope: !10018)
!10020 = !DILocation(line: 1499, column: 7, scope: !10021)
!10021 = distinct !DILexicalBlock(scope: !10018, file: !3, line: 1499, column: 7)
!10022 = !DILocation(line: 1499, column: 11, scope: !10021)
!10023 = !DILocation(line: 1499, column: 15, scope: !10021)
!10024 = !DILocation(line: 1499, column: 7, scope: !10018)
!10025 = !DILocation(line: 1500, column: 38, scope: !10021)
!10026 = !DILocation(line: 1500, column: 12, scope: !10021)
!10027 = !DILocation(line: 1500, column: 10, scope: !10021)
!10028 = !DILocation(line: 1500, column: 4, scope: !10021)
!10029 = !DILocation(line: 1501, column: 12, scope: !10030)
!10030 = distinct !DILexicalBlock(scope: !10021, file: !3, line: 1501, column: 12)
!10031 = !DILocation(line: 1501, column: 16, scope: !10030)
!10032 = !DILocation(line: 1501, column: 20, scope: !10030)
!10033 = !DILocation(line: 1501, column: 12, scope: !10021)
!10034 = !DILocation(line: 1502, column: 43, scope: !10030)
!10035 = !DILocation(line: 1502, column: 12, scope: !10030)
!10036 = !DILocation(line: 1502, column: 10, scope: !10030)
!10037 = !DILocation(line: 1502, column: 4, scope: !10030)
!10038 = !DILocation(line: 1504, column: 7, scope: !10039)
!10039 = distinct !DILexicalBlock(scope: !10018, file: !3, line: 1504, column: 7)
!10040 = !DILocation(line: 1504, column: 7, scope: !10018)
!10041 = !DILocation(line: 1505, column: 47, scope: !10042)
!10042 = distinct !DILexicalBlock(scope: !10039, file: !3, line: 1504, column: 14)
!10043 = !DILocation(line: 1505, column: 51, scope: !10042)
!10044 = !DILocation(line: 1505, column: 4, scope: !10042)
!10045 = !DILocation(line: 1506, column: 24, scope: !10042)
!10046 = !DILocation(line: 1506, column: 4, scope: !10042)
!10047 = !DILocation(line: 1507, column: 3, scope: !10042)
!10048 = !DILocation(line: 1512, column: 2, scope: !10018)
!10049 = !DILocation(line: 1514, column: 23, scope: !9937)
!10050 = !DILocation(line: 1514, column: 2, scope: !9937)
!10051 = !DILocation(line: 1516, column: 2, scope: !9937)
!10052 = !DILocation(line: 1517, column: 1, scope: !9937)
!10053 = distinct !DISubprogram(name: "acpi_ec_enter_noirq", scope: !3, file: !3, line: 994, type: !6720, scopeLine: 995, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !372)
!10054 = !DILocation(line: 407, column: 64, scope: !5876, inlinedAt: !10055)
!10055 = distinct !DILocation(line: 1002, column: 2, scope: !10053)
!10056 = !DILocation(line: 407, column: 84, scope: !5876, inlinedAt: !10055)
!10057 = !DILocation(line: 327, column: 67, scope: !5861, inlinedAt: !10058)
!10058 = distinct !DILocation(line: 998, column: 2, scope: !10059)
!10059 = distinct !DILexicalBlock(scope: !10060, file: !3, line: 998, column: 2)
!10060 = distinct !DILexicalBlock(scope: !10061, file: !3, line: 998, column: 2)
!10061 = distinct !DILexicalBlock(scope: !10062, file: !3, line: 998, column: 2)
!10062 = distinct !DILexicalBlock(scope: !10063, file: !3, line: 998, column: 2)
!10063 = distinct !DILexicalBlock(scope: !10053, file: !3, line: 998, column: 2)
!10064 = !DILocalVariable(name: "ec", arg: 1, scope: !10053, file: !3, line: 994, type: !330)
!10065 = !DILocation(line: 994, column: 49, scope: !10053)
!10066 = !DILocalVariable(name: "flags", scope: !10053, file: !3, line: 996, type: !287)
!10067 = !DILocation(line: 996, column: 16, scope: !10053)
!10068 = !DILocation(line: 998, column: 2, scope: !10053)
!10069 = !DILocation(line: 998, column: 2, scope: !10063)
!10070 = !DILocalVariable(name: "__dummy", scope: !10071, file: !3, line: 998, type: !287)
!10071 = distinct !DILexicalBlock(scope: !10062, file: !3, line: 998, column: 2)
!10072 = !DILocation(line: 998, column: 2, scope: !10071)
!10073 = !DILocalVariable(name: "__dummy2", scope: !10071, file: !3, line: 998, type: !287)
!10074 = !DILocation(line: 998, column: 2, scope: !10062)
!10075 = !DILocation(line: 998, column: 2, scope: !10061)
!10076 = !DILocation(line: 998, column: 2, scope: !10077)
!10077 = distinct !DILexicalBlock(scope: !10061, file: !3, line: 998, column: 2)
!10078 = !DILocalVariable(name: "__dummy", scope: !10079, file: !3, line: 998, type: !287)
!10079 = distinct !DILexicalBlock(scope: !10080, file: !3, line: 998, column: 2)
!10080 = distinct !DILexicalBlock(scope: !10077, file: !3, line: 998, column: 2)
!10081 = !DILocation(line: 998, column: 2, scope: !10079)
!10082 = !DILocalVariable(name: "__dummy2", scope: !10079, file: !3, line: 998, type: !287)
!10083 = !DILocation(line: 998, column: 2, scope: !10080)
!10084 = !DILocation(line: 998, column: 2, scope: !10060)
!10085 = !{i32 -2140237392}
!10086 = !DILocation(line: 998, column: 2, scope: !10059)
!10087 = !DILocation(line: 329, column: 10, scope: !5861, inlinedAt: !10058)
!10088 = !DILocation(line: 329, column: 16, scope: !5861, inlinedAt: !10058)
!10089 = !DILocation(line: 999, column: 2, scope: !10053)
!10090 = !DILocation(line: 999, column: 6, scope: !10053)
!10091 = !DILocation(line: 999, column: 19, scope: !10053)
!10092 = !DILocation(line: 1000, column: 2, scope: !10053)
!10093 = !DILocation(line: 1000, column: 6, scope: !10053)
!10094 = !DILocation(line: 1000, column: 20, scope: !10053)
!10095 = !DILocation(line: 1001, column: 2, scope: !10053)
!10096 = !DILocation(line: 1002, column: 26, scope: !10053)
!10097 = !DILocation(line: 1002, column: 30, scope: !10053)
!10098 = !DILocation(line: 1002, column: 36, scope: !10053)
!10099 = !DILocation(line: 409, column: 2, scope: !5934, inlinedAt: !10055)
!10100 = !DILocation(line: 409, column: 2, scope: !5939, inlinedAt: !10055)
!10101 = !DILocation(line: 409, column: 2, scope: !5940, inlinedAt: !10055)
!10102 = !DILocation(line: 409, column: 2, scope: !5947, inlinedAt: !10055)
!10103 = !DILocation(line: 409, column: 2, scope: !5950, inlinedAt: !10055)
!10104 = !DILocation(line: 1003, column: 1, scope: !10053)
!10105 = distinct !DISubprogram(name: "acpi_ec_space_handler", scope: !3, file: !3, line: 1284, type: !10106, scopeLine: 1287, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !372)
!10106 = !DISubroutineType(types: !10107)
!10107 = !{!421, !261, !10108, !261, !4980, !247, !247}
!10108 = !DIDerivedType(tag: DW_TAG_typedef, name: "acpi_physical_address", file: !282, line: 129, baseType: !284)
!10109 = !DILocalVariable(name: "function", arg: 1, scope: !10105, file: !3, line: 1284, type: !261)
!10110 = !DILocation(line: 1284, column: 27, scope: !10105)
!10111 = !DILocalVariable(name: "address", arg: 2, scope: !10105, file: !3, line: 1284, type: !10108)
!10112 = !DILocation(line: 1284, column: 59, scope: !10105)
!10113 = !DILocalVariable(name: "bits", arg: 3, scope: !10105, file: !3, line: 1285, type: !261)
!10114 = !DILocation(line: 1285, column: 13, scope: !10105)
!10115 = !DILocalVariable(name: "value64", arg: 4, scope: !10105, file: !3, line: 1285, type: !4980)
!10116 = !DILocation(line: 1285, column: 24, scope: !10105)
!10117 = !DILocalVariable(name: "handler_context", arg: 5, scope: !10105, file: !3, line: 1286, type: !247)
!10118 = !DILocation(line: 1286, column: 15, scope: !10105)
!10119 = !DILocalVariable(name: "region_context", arg: 6, scope: !10105, file: !3, line: 1286, type: !247)
!10120 = !DILocation(line: 1286, column: 38, scope: !10105)
!10121 = !DILocalVariable(name: "ec", scope: !10105, file: !3, line: 1288, type: !330)
!10122 = !DILocation(line: 1288, column: 18, scope: !10105)
!10123 = !DILocation(line: 1288, column: 23, scope: !10105)
!10124 = !DILocalVariable(name: "result", scope: !10105, file: !3, line: 1289, type: !294)
!10125 = !DILocation(line: 1289, column: 6, scope: !10105)
!10126 = !DILocalVariable(name: "i", scope: !10105, file: !3, line: 1289, type: !294)
!10127 = !DILocation(line: 1289, column: 18, scope: !10105)
!10128 = !DILocalVariable(name: "bytes", scope: !10105, file: !3, line: 1289, type: !294)
!10129 = !DILocation(line: 1289, column: 21, scope: !10105)
!10130 = !DILocation(line: 1289, column: 29, scope: !10105)
!10131 = !DILocation(line: 1289, column: 34, scope: !10105)
!10132 = !DILocalVariable(name: "value", scope: !10105, file: !3, line: 1290, type: !390)
!10133 = !DILocation(line: 1290, column: 6, scope: !10105)
!10134 = !DILocation(line: 1290, column: 20, scope: !10105)
!10135 = !DILocation(line: 1290, column: 14, scope: !10105)
!10136 = !DILocation(line: 1292, column: 7, scope: !10137)
!10137 = distinct !DILexicalBlock(scope: !10105, file: !3, line: 1292, column: 6)
!10138 = !DILocation(line: 1292, column: 15, scope: !10137)
!10139 = !DILocation(line: 1292, column: 23, scope: !10137)
!10140 = !DILocation(line: 1292, column: 27, scope: !10137)
!10141 = !DILocation(line: 1292, column: 33, scope: !10137)
!10142 = !DILocation(line: 1292, column: 37, scope: !10137)
!10143 = !DILocation(line: 1292, column: 6, scope: !10105)
!10144 = !DILocation(line: 1293, column: 3, scope: !10137)
!10145 = !DILocation(line: 1295, column: 6, scope: !10146)
!10146 = distinct !DILexicalBlock(scope: !10105, file: !3, line: 1295, column: 6)
!10147 = !DILocation(line: 1295, column: 15, scope: !10146)
!10148 = !DILocation(line: 1295, column: 28, scope: !10146)
!10149 = !DILocation(line: 1295, column: 31, scope: !10146)
!10150 = !DILocation(line: 1295, column: 40, scope: !10146)
!10151 = !DILocation(line: 1295, column: 6, scope: !10105)
!10152 = !DILocation(line: 1296, column: 3, scope: !10146)
!10153 = !DILocation(line: 1298, column: 6, scope: !10154)
!10154 = distinct !DILexicalBlock(scope: !10105, file: !3, line: 1298, column: 6)
!10155 = !DILocation(line: 1298, column: 10, scope: !10154)
!10156 = !DILocation(line: 1298, column: 23, scope: !10154)
!10157 = !DILocation(line: 1298, column: 26, scope: !10154)
!10158 = !DILocation(line: 1298, column: 31, scope: !10154)
!10159 = !DILocation(line: 1298, column: 6, scope: !10105)
!10160 = !DILocation(line: 1299, column: 24, scope: !10154)
!10161 = !DILocation(line: 1299, column: 3, scope: !10154)
!10162 = !DILocation(line: 1301, column: 9, scope: !10163)
!10163 = distinct !DILexicalBlock(scope: !10105, file: !3, line: 1301, column: 2)
!10164 = !DILocation(line: 1301, column: 7, scope: !10163)
!10165 = !DILocation(line: 1301, column: 14, scope: !10166)
!10166 = distinct !DILexicalBlock(scope: !10163, file: !3, line: 1301, column: 2)
!10167 = !DILocation(line: 1301, column: 18, scope: !10166)
!10168 = !DILocation(line: 1301, column: 16, scope: !10166)
!10169 = !DILocation(line: 1301, column: 2, scope: !10163)
!10170 = !DILocation(line: 1302, column: 13, scope: !10166)
!10171 = !DILocation(line: 1302, column: 22, scope: !10166)
!10172 = !DILocation(line: 1302, column: 12, scope: !10166)
!10173 = !DILocation(line: 1303, column: 17, scope: !10166)
!10174 = !DILocation(line: 1303, column: 21, scope: !10166)
!10175 = !DILocation(line: 1303, column: 30, scope: !10166)
!10176 = !DILocation(line: 1303, column: 4, scope: !10166)
!10177 = !DILocation(line: 1304, column: 18, scope: !10166)
!10178 = !DILocation(line: 1304, column: 22, scope: !10166)
!10179 = !DILocation(line: 1304, column: 32, scope: !10166)
!10180 = !DILocation(line: 1304, column: 31, scope: !10166)
!10181 = !DILocation(line: 1304, column: 4, scope: !10166)
!10182 = !DILocation(line: 1302, column: 10, scope: !10166)
!10183 = !DILocation(line: 1302, column: 3, scope: !10166)
!10184 = !DILocation(line: 1301, column: 25, scope: !10166)
!10185 = !DILocation(line: 1301, column: 30, scope: !10166)
!10186 = !DILocation(line: 1301, column: 41, scope: !10166)
!10187 = !DILocation(line: 1301, column: 2, scope: !10166)
!10188 = distinct !{!10188, !10169, !10189}
!10189 = !DILocation(line: 1304, column: 37, scope: !10163)
!10190 = !DILocation(line: 1306, column: 6, scope: !10191)
!10191 = distinct !DILexicalBlock(scope: !10105, file: !3, line: 1306, column: 6)
!10192 = !DILocation(line: 1306, column: 10, scope: !10191)
!10193 = !DILocation(line: 1306, column: 23, scope: !10191)
!10194 = !DILocation(line: 1306, column: 26, scope: !10191)
!10195 = !DILocation(line: 1306, column: 31, scope: !10191)
!10196 = !DILocation(line: 1306, column: 6, scope: !10105)
!10197 = !DILocation(line: 1307, column: 25, scope: !10191)
!10198 = !DILocation(line: 1307, column: 3, scope: !10191)
!10199 = !DILocation(line: 1309, column: 10, scope: !10105)
!10200 = !DILocation(line: 1309, column: 2, scope: !10105)
!10201 = !DILocation(line: 1311, column: 3, scope: !10202)
!10202 = distinct !DILexicalBlock(scope: !10105, file: !3, line: 1309, column: 18)
!10203 = !DILocation(line: 1313, column: 3, scope: !10202)
!10204 = !DILocation(line: 1315, column: 3, scope: !10202)
!10205 = !DILocation(line: 1317, column: 3, scope: !10202)
!10206 = !DILocation(line: 1319, column: 1, scope: !10105)
!10207 = distinct !DISubprogram(name: "acpi_ec_register_query_methods", scope: !3, file: !3, line: 1357, type: !6639, scopeLine: 1359, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !372)
!10208 = !DILocalVariable(name: "handle", arg: 1, scope: !10207, file: !3, line: 1357, type: !281)
!10209 = !DILocation(line: 1357, column: 44, scope: !10207)
!10210 = !DILocalVariable(name: "level", arg: 2, scope: !10207, file: !3, line: 1357, type: !261)
!10211 = !DILocation(line: 1357, column: 56, scope: !10207)
!10212 = !DILocalVariable(name: "context", arg: 3, scope: !10207, file: !3, line: 1358, type: !247)
!10213 = !DILocation(line: 1358, column: 17, scope: !10207)
!10214 = !DILocalVariable(name: "return_value", arg: 4, scope: !10207, file: !3, line: 1358, type: !1086)
!10215 = !DILocation(line: 1358, column: 33, scope: !10207)
!10216 = !DILocalVariable(name: "node_name", scope: !10207, file: !3, line: 1360, type: !10217)
!10217 = !DICompositeType(tag: DW_TAG_array_type, baseType: !257, size: 40, elements: !2052)
!10218 = !DILocation(line: 1360, column: 7, scope: !10207)
!10219 = !DILocalVariable(name: "buffer", scope: !10207, file: !3, line: 1361, type: !10220)
!10220 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "acpi_buffer", file: !282, line: 969, size: 128, elements: !10221)
!10221 = !{!10222, !10223}
!10222 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !10220, file: !282, line: 970, baseType: !283, size: 64)
!10223 = !DIDerivedType(tag: DW_TAG_member, name: "pointer", scope: !10220, file: !282, line: 971, baseType: !247, size: 64, offset: 64)
!10224 = !DILocation(line: 1361, column: 21, scope: !10207)
!10225 = !DILocation(line: 1361, column: 30, scope: !10207)
!10226 = !DILocation(line: 1361, column: 51, scope: !10207)
!10227 = !DILocalVariable(name: "ec", scope: !10207, file: !3, line: 1362, type: !330)
!10228 = !DILocation(line: 1362, column: 18, scope: !10207)
!10229 = !DILocation(line: 1362, column: 23, scope: !10207)
!10230 = !DILocalVariable(name: "value", scope: !10207, file: !3, line: 1363, type: !294)
!10231 = !DILocation(line: 1363, column: 6, scope: !10207)
!10232 = !DILocalVariable(name: "status", scope: !10207, file: !3, line: 1364, type: !421)
!10233 = !DILocation(line: 1364, column: 14, scope: !10207)
!10234 = !DILocation(line: 1366, column: 25, scope: !10207)
!10235 = !DILocation(line: 1366, column: 11, scope: !10207)
!10236 = !DILocation(line: 1366, column: 9, scope: !10207)
!10237 = !DILocation(line: 1368, column: 6, scope: !10238)
!10238 = distinct !DILexicalBlock(scope: !10207, file: !3, line: 1368, column: 6)
!10239 = !DILocation(line: 1368, column: 27, scope: !10238)
!10240 = !DILocation(line: 1368, column: 37, scope: !10238)
!10241 = !DILocation(line: 1368, column: 30, scope: !10238)
!10242 = !DILocation(line: 1368, column: 64, scope: !10238)
!10243 = !DILocation(line: 1368, column: 6, scope: !10207)
!10244 = !DILocation(line: 1369, column: 29, scope: !10238)
!10245 = !DILocation(line: 1369, column: 33, scope: !10238)
!10246 = !DILocation(line: 1369, column: 40, scope: !10238)
!10247 = !DILocation(line: 1369, column: 3, scope: !10238)
!10248 = !DILocation(line: 1370, column: 2, scope: !10207)
!10249 = distinct !DISubprogram(name: "install_gpe_event_handler", scope: !3, file: !3, line: 1416, type: !7197, scopeLine: 1417, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !372)
!10250 = !DILocalVariable(name: "ec", arg: 1, scope: !10249, file: !3, line: 1416, type: !330)
!10251 = !DILocation(line: 1416, column: 55, scope: !10249)
!10252 = !DILocalVariable(name: "status", scope: !10249, file: !3, line: 1418, type: !421)
!10253 = !DILocation(line: 1418, column: 14, scope: !10249)
!10254 = !DILocation(line: 1420, column: 46, scope: !10249)
!10255 = !DILocation(line: 1420, column: 50, scope: !10249)
!10256 = !DILocation(line: 1422, column: 34, scope: !10249)
!10257 = !DILocation(line: 1420, column: 11, scope: !10249)
!10258 = !DILocation(line: 1420, column: 9, scope: !10249)
!10259 = !DILocation(line: 1423, column: 6, scope: !10260)
!10260 = distinct !DILexicalBlock(scope: !10249, file: !3, line: 1423, column: 6)
!10261 = !DILocation(line: 1423, column: 6, scope: !10249)
!10262 = !DILocation(line: 1424, column: 3, scope: !10260)
!10263 = !DILocation(line: 1426, column: 34, scope: !10264)
!10264 = distinct !DILexicalBlock(scope: !10249, file: !3, line: 1426, column: 6)
!10265 = !DILocation(line: 1426, column: 38, scope: !10264)
!10266 = !DILocation(line: 1426, column: 6, scope: !10264)
!10267 = !DILocation(line: 1426, column: 45, scope: !10264)
!10268 = !DILocation(line: 1426, column: 48, scope: !10264)
!10269 = !DILocation(line: 1426, column: 52, scope: !10264)
!10270 = !DILocation(line: 1426, column: 68, scope: !10264)
!10271 = !DILocation(line: 1426, column: 6, scope: !10249)
!10272 = !DILocation(line: 1427, column: 22, scope: !10264)
!10273 = !DILocation(line: 1427, column: 3, scope: !10264)
!10274 = !DILocation(line: 1429, column: 2, scope: !10249)
!10275 = !DILocation(line: 1430, column: 1, scope: !10249)
!10276 = distinct !DISubprogram(name: "install_gpio_irq_event_handler", scope: !3, file: !3, line: 1432, type: !7197, scopeLine: 1433, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !372)
!10277 = !DILocalVariable(name: "ec", arg: 1, scope: !10276, file: !3, line: 1432, type: !330)
!10278 = !DILocation(line: 1432, column: 60, scope: !10276)
!10279 = !DILocation(line: 1434, column: 21, scope: !10276)
!10280 = !DILocation(line: 1434, column: 25, scope: !10276)
!10281 = !DILocation(line: 1435, column: 18, scope: !10276)
!10282 = !DILocation(line: 1434, column: 9, scope: !10276)
!10283 = !DILocation(line: 1435, column: 22, scope: !10276)
!10284 = !DILocation(line: 1434, column: 2, scope: !10276)
!10285 = distinct !DISubprogram(name: "acpi_ec_leave_noirq", scope: !3, file: !3, line: 1005, type: !6720, scopeLine: 1006, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !372)
!10286 = !DILocation(line: 407, column: 64, scope: !5876, inlinedAt: !10287)
!10287 = distinct !DILocation(line: 1013, column: 2, scope: !10285)
!10288 = !DILocation(line: 407, column: 84, scope: !5876, inlinedAt: !10287)
!10289 = !DILocation(line: 327, column: 67, scope: !5861, inlinedAt: !10290)
!10290 = distinct !DILocation(line: 1009, column: 2, scope: !10291)
!10291 = distinct !DILexicalBlock(scope: !10292, file: !3, line: 1009, column: 2)
!10292 = distinct !DILexicalBlock(scope: !10293, file: !3, line: 1009, column: 2)
!10293 = distinct !DILexicalBlock(scope: !10294, file: !3, line: 1009, column: 2)
!10294 = distinct !DILexicalBlock(scope: !10295, file: !3, line: 1009, column: 2)
!10295 = distinct !DILexicalBlock(scope: !10285, file: !3, line: 1009, column: 2)
!10296 = !DILocalVariable(name: "ec", arg: 1, scope: !10285, file: !3, line: 1005, type: !330)
!10297 = !DILocation(line: 1005, column: 49, scope: !10285)
!10298 = !DILocalVariable(name: "flags", scope: !10285, file: !3, line: 1007, type: !287)
!10299 = !DILocation(line: 1007, column: 16, scope: !10285)
!10300 = !DILocation(line: 1009, column: 2, scope: !10285)
!10301 = !DILocation(line: 1009, column: 2, scope: !10295)
!10302 = !DILocalVariable(name: "__dummy", scope: !10303, file: !3, line: 1009, type: !287)
!10303 = distinct !DILexicalBlock(scope: !10294, file: !3, line: 1009, column: 2)
!10304 = !DILocation(line: 1009, column: 2, scope: !10303)
!10305 = !DILocalVariable(name: "__dummy2", scope: !10303, file: !3, line: 1009, type: !287)
!10306 = !DILocation(line: 1009, column: 2, scope: !10294)
!10307 = !DILocation(line: 1009, column: 2, scope: !10293)
!10308 = !DILocation(line: 1009, column: 2, scope: !10309)
!10309 = distinct !DILexicalBlock(scope: !10293, file: !3, line: 1009, column: 2)
!10310 = !DILocalVariable(name: "__dummy", scope: !10311, file: !3, line: 1009, type: !287)
!10311 = distinct !DILexicalBlock(scope: !10312, file: !3, line: 1009, column: 2)
!10312 = distinct !DILexicalBlock(scope: !10309, file: !3, line: 1009, column: 2)
!10313 = !DILocation(line: 1009, column: 2, scope: !10311)
!10314 = !DILocalVariable(name: "__dummy2", scope: !10311, file: !3, line: 1009, type: !287)
!10315 = !DILocation(line: 1009, column: 2, scope: !10312)
!10316 = !DILocation(line: 1009, column: 2, scope: !10292)
!10317 = !{i32 -2140236032}
!10318 = !DILocation(line: 1009, column: 2, scope: !10291)
!10319 = !DILocation(line: 329, column: 10, scope: !5861, inlinedAt: !10290)
!10320 = !DILocation(line: 329, column: 16, scope: !5861, inlinedAt: !10290)
!10321 = !DILocation(line: 1010, column: 21, scope: !10285)
!10322 = !DILocation(line: 1010, column: 2, scope: !10285)
!10323 = !DILocation(line: 1010, column: 6, scope: !10285)
!10324 = !DILocation(line: 1010, column: 19, scope: !10285)
!10325 = !DILocation(line: 1011, column: 22, scope: !10285)
!10326 = !DILocation(line: 1011, column: 2, scope: !10285)
!10327 = !DILocation(line: 1011, column: 6, scope: !10285)
!10328 = !DILocation(line: 1011, column: 20, scope: !10285)
!10329 = !DILocation(line: 1012, column: 2, scope: !10285)
!10330 = !DILocation(line: 1013, column: 26, scope: !10285)
!10331 = !DILocation(line: 1013, column: 30, scope: !10285)
!10332 = !DILocation(line: 1013, column: 36, scope: !10285)
!10333 = !DILocation(line: 409, column: 2, scope: !5934, inlinedAt: !10287)
!10334 = !DILocation(line: 409, column: 2, scope: !5939, inlinedAt: !10287)
!10335 = !DILocation(line: 409, column: 2, scope: !5940, inlinedAt: !10287)
!10336 = !DILocation(line: 409, column: 2, scope: !5947, inlinedAt: !10287)
!10337 = !DILocation(line: 409, column: 2, scope: !5950, inlinedAt: !10287)
!10338 = !DILocation(line: 1014, column: 1, scope: !10285)
!10339 = distinct !DISubprogram(name: "acpi_ec_enable_event", scope: !3, file: !3, line: 520, type: !6720, scopeLine: 521, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !372)
!10340 = !DILocation(line: 407, column: 64, scope: !5876, inlinedAt: !10341)
!10341 = distinct !DILocation(line: 527, column: 2, scope: !10339)
!10342 = !DILocation(line: 407, column: 84, scope: !5876, inlinedAt: !10341)
!10343 = !DILocation(line: 327, column: 67, scope: !5861, inlinedAt: !10344)
!10344 = distinct !DILocation(line: 524, column: 2, scope: !10345)
!10345 = distinct !DILexicalBlock(scope: !10346, file: !3, line: 524, column: 2)
!10346 = distinct !DILexicalBlock(scope: !10347, file: !3, line: 524, column: 2)
!10347 = distinct !DILexicalBlock(scope: !10348, file: !3, line: 524, column: 2)
!10348 = distinct !DILexicalBlock(scope: !10349, file: !3, line: 524, column: 2)
!10349 = distinct !DILexicalBlock(scope: !10339, file: !3, line: 524, column: 2)
!10350 = !DILocalVariable(name: "ec", arg: 1, scope: !10339, file: !3, line: 520, type: !330)
!10351 = !DILocation(line: 520, column: 50, scope: !10339)
!10352 = !DILocalVariable(name: "flags", scope: !10339, file: !3, line: 522, type: !287)
!10353 = !DILocation(line: 522, column: 16, scope: !10339)
!10354 = !DILocation(line: 524, column: 2, scope: !10339)
!10355 = !DILocation(line: 524, column: 2, scope: !10349)
!10356 = !DILocalVariable(name: "__dummy", scope: !10357, file: !3, line: 524, type: !287)
!10357 = distinct !DILexicalBlock(scope: !10348, file: !3, line: 524, column: 2)
!10358 = !DILocation(line: 524, column: 2, scope: !10357)
!10359 = !DILocalVariable(name: "__dummy2", scope: !10357, file: !3, line: 524, type: !287)
!10360 = !DILocation(line: 524, column: 2, scope: !10348)
!10361 = !DILocation(line: 524, column: 2, scope: !10347)
!10362 = !DILocation(line: 524, column: 2, scope: !10363)
!10363 = distinct !DILexicalBlock(scope: !10347, file: !3, line: 524, column: 2)
!10364 = !DILocalVariable(name: "__dummy", scope: !10365, file: !3, line: 524, type: !287)
!10365 = distinct !DILexicalBlock(scope: !10366, file: !3, line: 524, column: 2)
!10366 = distinct !DILexicalBlock(scope: !10363, file: !3, line: 524, column: 2)
!10367 = !DILocation(line: 524, column: 2, scope: !10365)
!10368 = !DILocalVariable(name: "__dummy2", scope: !10365, file: !3, line: 524, type: !287)
!10369 = !DILocation(line: 524, column: 2, scope: !10366)
!10370 = !DILocation(line: 524, column: 2, scope: !10346)
!10371 = !{i32 -2140263492}
!10372 = !DILocation(line: 524, column: 2, scope: !10345)
!10373 = !DILocation(line: 329, column: 10, scope: !5861, inlinedAt: !10344)
!10374 = !DILocation(line: 329, column: 16, scope: !5861, inlinedAt: !10344)
!10375 = !DILocation(line: 525, column: 22, scope: !10376)
!10376 = distinct !DILexicalBlock(scope: !10339, file: !3, line: 525, column: 6)
!10377 = !DILocation(line: 525, column: 6, scope: !10376)
!10378 = !DILocation(line: 525, column: 6, scope: !10339)
!10379 = !DILocation(line: 526, column: 26, scope: !10376)
!10380 = !DILocation(line: 526, column: 3, scope: !10376)
!10381 = !DILocation(line: 527, column: 26, scope: !10339)
!10382 = !DILocation(line: 527, column: 30, scope: !10339)
!10383 = !DILocation(line: 527, column: 36, scope: !10339)
!10384 = !DILocation(line: 409, column: 2, scope: !5934, inlinedAt: !10341)
!10385 = !DILocation(line: 409, column: 2, scope: !5939, inlinedAt: !10341)
!10386 = !DILocation(line: 409, column: 2, scope: !5940, inlinedAt: !10341)
!10387 = !DILocation(line: 409, column: 2, scope: !5947, inlinedAt: !10341)
!10388 = !DILocation(line: 409, column: 2, scope: !5950, inlinedAt: !10341)
!10389 = !DILocation(line: 530, column: 6, scope: !10390)
!10390 = distinct !DILexicalBlock(scope: !10339, file: !3, line: 530, column: 6)
!10391 = !DILocation(line: 530, column: 6, scope: !10339)
!10392 = !DILocation(line: 531, column: 17, scope: !10390)
!10393 = !DILocation(line: 531, column: 3, scope: !10390)
!10394 = !DILocation(line: 532, column: 1, scope: !10339)
!10395 = distinct !DISubprogram(name: "acpi_ec_burst_enable", scope: !3, file: !3, line: 844, type: !7231, scopeLine: 845, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !372)
!10396 = !DILocalVariable(name: "ec", arg: 1, scope: !10395, file: !3, line: 844, type: !330)
!10397 = !DILocation(line: 844, column: 49, scope: !10395)
!10398 = !DILocalVariable(name: "d", scope: !10395, file: !3, line: 846, type: !266)
!10399 = !DILocation(line: 846, column: 5, scope: !10395)
!10400 = !DILocalVariable(name: "t", scope: !10395, file: !3, line: 847, type: !384)
!10401 = !DILocation(line: 847, column: 21, scope: !10395)
!10402 = !DILocation(line: 847, column: 25, scope: !10395)
!10403 = !DILocation(line: 851, column: 29, scope: !10395)
!10404 = !DILocation(line: 851, column: 9, scope: !10395)
!10405 = !DILocation(line: 851, column: 2, scope: !10395)
!10406 = distinct !DISubprogram(name: "acpi_ec_burst_disable", scope: !3, file: !3, line: 854, type: !7231, scopeLine: 855, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !372)
!10407 = !DILocalVariable(name: "ec", arg: 1, scope: !10406, file: !3, line: 854, type: !330)
!10408 = !DILocation(line: 854, column: 50, scope: !10406)
!10409 = !DILocalVariable(name: "t", scope: !10406, file: !3, line: 856, type: !384)
!10410 = !DILocation(line: 856, column: 21, scope: !10406)
!10411 = !DILocation(line: 860, column: 30, scope: !10406)
!10412 = !DILocation(line: 860, column: 10, scope: !10406)
!10413 = !DILocation(line: 860, column: 34, scope: !10406)
!10414 = !DILocation(line: 860, column: 9, scope: !10406)
!10415 = !DILocation(line: 861, column: 25, scope: !10406)
!10416 = !DILocation(line: 861, column: 5, scope: !10406)
!10417 = !DILocation(line: 860, column: 2, scope: !10406)
!10418 = distinct !DISubprogram(name: "acpi_ec_gpe_handler", scope: !3, file: !3, line: 1266, type: !10419, scopeLine: 1268, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !372)
!10419 = !DISubroutineType(types: !10420)
!10420 = !{!261, !281, !261, !247}
!10421 = !DILocalVariable(name: "gpe_device", arg: 1, scope: !10418, file: !3, line: 1266, type: !281)
!10422 = !DILocation(line: 1266, column: 44, scope: !10418)
!10423 = !DILocalVariable(name: "gpe_number", arg: 2, scope: !10418, file: !3, line: 1267, type: !261)
!10424 = !DILocation(line: 1267, column: 15, scope: !10418)
!10425 = !DILocalVariable(name: "data", arg: 3, scope: !10418, file: !3, line: 1267, type: !247)
!10426 = !DILocation(line: 1267, column: 33, scope: !10418)
!10427 = !DILocation(line: 1269, column: 27, scope: !10418)
!10428 = !DILocation(line: 1269, column: 2, scope: !10418)
!10429 = !DILocation(line: 1270, column: 2, scope: !10418)
!10430 = distinct !DISubprogram(name: "acpi_ec_handle_interrupt", scope: !3, file: !3, line: 1257, type: !6720, scopeLine: 1258, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !372)
!10431 = !DILocation(line: 407, column: 64, scope: !5876, inlinedAt: !10432)
!10432 = distinct !DILocation(line: 1263, column: 2, scope: !10430)
!10433 = !DILocation(line: 407, column: 84, scope: !5876, inlinedAt: !10432)
!10434 = !DILocation(line: 327, column: 67, scope: !5861, inlinedAt: !10435)
!10435 = distinct !DILocation(line: 1261, column: 2, scope: !10436)
!10436 = distinct !DILexicalBlock(scope: !10437, file: !3, line: 1261, column: 2)
!10437 = distinct !DILexicalBlock(scope: !10438, file: !3, line: 1261, column: 2)
!10438 = distinct !DILexicalBlock(scope: !10439, file: !3, line: 1261, column: 2)
!10439 = distinct !DILexicalBlock(scope: !10440, file: !3, line: 1261, column: 2)
!10440 = distinct !DILexicalBlock(scope: !10430, file: !3, line: 1261, column: 2)
!10441 = !DILocalVariable(name: "ec", arg: 1, scope: !10430, file: !3, line: 1257, type: !330)
!10442 = !DILocation(line: 1257, column: 54, scope: !10430)
!10443 = !DILocalVariable(name: "flags", scope: !10430, file: !3, line: 1259, type: !287)
!10444 = !DILocation(line: 1259, column: 16, scope: !10430)
!10445 = !DILocation(line: 1261, column: 2, scope: !10430)
!10446 = !DILocation(line: 1261, column: 2, scope: !10440)
!10447 = !DILocalVariable(name: "__dummy", scope: !10448, file: !3, line: 1261, type: !287)
!10448 = distinct !DILexicalBlock(scope: !10439, file: !3, line: 1261, column: 2)
!10449 = !DILocation(line: 1261, column: 2, scope: !10448)
!10450 = !DILocalVariable(name: "__dummy2", scope: !10448, file: !3, line: 1261, type: !287)
!10451 = !DILocation(line: 1261, column: 2, scope: !10439)
!10452 = !DILocation(line: 1261, column: 2, scope: !10438)
!10453 = !DILocation(line: 1261, column: 2, scope: !10454)
!10454 = distinct !DILexicalBlock(scope: !10438, file: !3, line: 1261, column: 2)
!10455 = !DILocalVariable(name: "__dummy", scope: !10456, file: !3, line: 1261, type: !287)
!10456 = distinct !DILexicalBlock(scope: !10457, file: !3, line: 1261, column: 2)
!10457 = distinct !DILexicalBlock(scope: !10454, file: !3, line: 1261, column: 2)
!10458 = !DILocation(line: 1261, column: 2, scope: !10456)
!10459 = !DILocalVariable(name: "__dummy2", scope: !10456, file: !3, line: 1261, type: !287)
!10460 = !DILocation(line: 1261, column: 2, scope: !10457)
!10461 = !DILocation(line: 1261, column: 2, scope: !10437)
!10462 = !{i32 -2140207243}
!10463 = !DILocation(line: 1261, column: 2, scope: !10436)
!10464 = !DILocation(line: 329, column: 10, scope: !5861, inlinedAt: !10435)
!10465 = !DILocation(line: 329, column: 16, scope: !5861, inlinedAt: !10435)
!10466 = !DILocation(line: 1262, column: 22, scope: !10430)
!10467 = !DILocation(line: 1262, column: 2, scope: !10430)
!10468 = !DILocation(line: 1263, column: 26, scope: !10430)
!10469 = !DILocation(line: 1263, column: 30, scope: !10430)
!10470 = !DILocation(line: 1263, column: 36, scope: !10430)
!10471 = !DILocation(line: 409, column: 2, scope: !5934, inlinedAt: !10432)
!10472 = !DILocation(line: 409, column: 2, scope: !5939, inlinedAt: !10432)
!10473 = !DILocation(line: 409, column: 2, scope: !5940, inlinedAt: !10432)
!10474 = !DILocation(line: 409, column: 2, scope: !5947, inlinedAt: !10432)
!10475 = !DILocation(line: 409, column: 2, scope: !5950, inlinedAt: !10432)
!10476 = !DILocation(line: 1264, column: 1, scope: !10430)
!10477 = distinct !DISubprogram(name: "request_irq", scope: !5288, file: !5288, line: 157, type: !10478, scopeLine: 159, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !372)
!10478 = !DISubroutineType(types: !10479)
!10479 = !{!294, !7, !10480, !287, !468, !247}
!10480 = !DIDerivedType(tag: DW_TAG_typedef, name: "irq_handler_t", file: !5288, line: 92, baseType: !10481)
!10481 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10482, size: 64)
!10482 = !DISubroutineType(types: !10483)
!10483 = !{!10484, !294, !247}
!10484 = !DIDerivedType(tag: DW_TAG_typedef, name: "irqreturn_t", file: !214, line: 17, baseType: !213)
!10485 = !DILocalVariable(name: "irq", arg: 1, scope: !10477, file: !5288, line: 157, type: !7)
!10486 = !DILocation(line: 157, column: 26, scope: !10477)
!10487 = !DILocalVariable(name: "handler", arg: 2, scope: !10477, file: !5288, line: 157, type: !10480)
!10488 = !DILocation(line: 157, column: 45, scope: !10477)
!10489 = !DILocalVariable(name: "flags", arg: 3, scope: !10477, file: !5288, line: 157, type: !287)
!10490 = !DILocation(line: 157, column: 68, scope: !10477)
!10491 = !DILocalVariable(name: "name", arg: 4, scope: !10477, file: !5288, line: 158, type: !468)
!10492 = !DILocation(line: 158, column: 18, scope: !10477)
!10493 = !DILocalVariable(name: "dev", arg: 5, scope: !10477, file: !5288, line: 158, type: !247)
!10494 = !DILocation(line: 158, column: 30, scope: !10477)
!10495 = !DILocation(line: 160, column: 30, scope: !10477)
!10496 = !DILocation(line: 160, column: 35, scope: !10477)
!10497 = !DILocation(line: 160, column: 50, scope: !10477)
!10498 = !DILocation(line: 160, column: 57, scope: !10477)
!10499 = !DILocation(line: 160, column: 63, scope: !10477)
!10500 = !DILocation(line: 160, column: 9, scope: !10477)
!10501 = !DILocation(line: 160, column: 2, scope: !10477)
!10502 = distinct !DISubprogram(name: "acpi_ec_irq_handler", scope: !3, file: !3, line: 1273, type: !10482, scopeLine: 1274, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !372)
!10503 = !DILocalVariable(name: "irq", arg: 1, scope: !10502, file: !3, line: 1273, type: !294)
!10504 = !DILocation(line: 1273, column: 44, scope: !10502)
!10505 = !DILocalVariable(name: "data", arg: 2, scope: !10502, file: !3, line: 1273, type: !247)
!10506 = !DILocation(line: 1273, column: 55, scope: !10502)
!10507 = !DILocation(line: 1275, column: 27, scope: !10502)
!10508 = !DILocation(line: 1275, column: 2, scope: !10502)
!10509 = !DILocation(line: 1276, column: 2, scope: !10502)
!10510 = distinct !DISubprogram(name: "__acpi_ec_enable_event", scope: !3, file: !3, line: 483, type: !6720, scopeLine: 484, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !372)
!10511 = !DILocalVariable(name: "ec", arg: 1, scope: !10510, file: !3, line: 483, type: !330)
!10512 = !DILocation(line: 483, column: 59, scope: !10510)
!10513 = !DILocation(line: 485, column: 49, scope: !10514)
!10514 = distinct !DILexicalBlock(scope: !10510, file: !3, line: 485, column: 6)
!10515 = !DILocation(line: 485, column: 53, scope: !10514)
!10516 = !DILocation(line: 485, column: 7, scope: !10514)
!10517 = !DILocation(line: 485, column: 6, scope: !10510)
!10518 = !DILocation(line: 486, column: 3, scope: !10514)
!10519 = !DILocation(line: 491, column: 22, scope: !10510)
!10520 = !DILocation(line: 491, column: 2, scope: !10510)
!10521 = !DILocation(line: 492, column: 1, scope: !10510)
!10522 = distinct !DISubprogram(name: "acpi_ec_clear", scope: !3, file: !3, line: 504, type: !6720, scopeLine: 505, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !372)
!10523 = !DILocalVariable(name: "ec", arg: 1, scope: !10522, file: !3, line: 504, type: !330)
!10524 = !DILocation(line: 504, column: 43, scope: !10522)
!10525 = !DILocalVariable(name: "i", scope: !10522, file: !3, line: 506, type: !294)
!10526 = !DILocation(line: 506, column: 6, scope: !10522)
!10527 = !DILocalVariable(name: "status", scope: !10522, file: !3, line: 506, type: !294)
!10528 = !DILocation(line: 506, column: 9, scope: !10522)
!10529 = !DILocalVariable(name: "value", scope: !10522, file: !3, line: 507, type: !266)
!10530 = !DILocation(line: 507, column: 5, scope: !10522)
!10531 = !DILocation(line: 509, column: 9, scope: !10532)
!10532 = distinct !DILexicalBlock(scope: !10522, file: !3, line: 509, column: 2)
!10533 = !DILocation(line: 509, column: 7, scope: !10532)
!10534 = !DILocation(line: 509, column: 14, scope: !10535)
!10535 = distinct !DILexicalBlock(scope: !10532, file: !3, line: 509, column: 2)
!10536 = !DILocation(line: 509, column: 16, scope: !10535)
!10537 = !DILocation(line: 509, column: 2, scope: !10532)
!10538 = !DILocation(line: 510, column: 26, scope: !10539)
!10539 = distinct !DILexicalBlock(scope: !10535, file: !3, line: 509, column: 42)
!10540 = !DILocation(line: 510, column: 12, scope: !10539)
!10541 = !DILocation(line: 510, column: 10, scope: !10539)
!10542 = !DILocation(line: 511, column: 7, scope: !10543)
!10543 = distinct !DILexicalBlock(scope: !10539, file: !3, line: 511, column: 7)
!10544 = !DILocation(line: 511, column: 14, scope: !10543)
!10545 = !DILocation(line: 511, column: 18, scope: !10543)
!10546 = !DILocation(line: 511, column: 7, scope: !10539)
!10547 = !DILocation(line: 512, column: 4, scope: !10543)
!10548 = !DILocation(line: 513, column: 2, scope: !10539)
!10549 = !DILocation(line: 509, column: 38, scope: !10535)
!10550 = !DILocation(line: 509, column: 2, scope: !10535)
!10551 = distinct !{!10551, !10537, !10552}
!10552 = !DILocation(line: 513, column: 2, scope: !10532)
!10553 = !DILocation(line: 514, column: 6, scope: !10554)
!10554 = distinct !DILexicalBlock(scope: !10522, file: !3, line: 514, column: 6)
!10555 = !DILocation(line: 514, column: 6, scope: !10522)
!10556 = !DILocation(line: 515, column: 3, scope: !10554)
!10557 = !DILocation(line: 517, column: 3, scope: !10554)
!10558 = !DILocation(line: 518, column: 1, scope: !10522)
!10559 = distinct !DISubprogram(name: "ec_correct_ecdt", scope: !3, file: !3, line: 1825, type: !5579, scopeLine: 1826, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !372)
!10560 = !DILocalVariable(name: "id", arg: 1, scope: !10559, file: !3, line: 1825, type: !5581)
!10561 = !DILocation(line: 1825, column: 56, scope: !10559)
!10562 = !DILocation(line: 1827, column: 2, scope: !10563)
!10563 = distinct !DILexicalBlock(scope: !10564, file: !3, line: 1827, column: 2)
!10564 = distinct !DILexicalBlock(scope: !10559, file: !3, line: 1827, column: 2)
!10565 = !DILocation(line: 1827, column: 2, scope: !10564)
!10566 = !DILocation(line: 1828, column: 24, scope: !10559)
!10567 = !DILocation(line: 1829, column: 2, scope: !10559)
!10568 = distinct !DISubprogram(name: "ec_honor_ecdt_gpe", scope: !3, file: !3, line: 1837, type: !5579, scopeLine: 1838, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !372)
!10569 = !DILocalVariable(name: "id", arg: 1, scope: !10568, file: !3, line: 1837, type: !5581)
!10570 = !DILocation(line: 1837, column: 58, scope: !10568)
!10571 = !DILocation(line: 1839, column: 2, scope: !10572)
!10572 = distinct !DILexicalBlock(scope: !10573, file: !3, line: 1839, column: 2)
!10573 = distinct !DILexicalBlock(scope: !10568, file: !3, line: 1839, column: 2)
!10574 = !DILocation(line: 1839, column: 2, scope: !10573)
!10575 = !DILocation(line: 1840, column: 27, scope: !10568)
!10576 = !DILocation(line: 1841, column: 2, scope: !10568)
!10577 = distinct !DISubprogram(name: "ec_clear_on_resume", scope: !3, file: !3, line: 1812, type: !5579, scopeLine: 1813, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !372)
!10578 = !DILocalVariable(name: "id", arg: 1, scope: !10577, file: !3, line: 1812, type: !5581)
!10579 = !DILocation(line: 1812, column: 59, scope: !10577)
!10580 = !DILocation(line: 1814, column: 2, scope: !10581)
!10581 = distinct !DILexicalBlock(scope: !10582, file: !3, line: 1814, column: 2)
!10582 = distinct !DILexicalBlock(scope: !10577, file: !3, line: 1814, column: 2)
!10583 = !DILocation(line: 1814, column: 2, scope: !10582)
!10584 = !DILocation(line: 1815, column: 27, scope: !10577)
!10585 = !DILocation(line: 1816, column: 20, scope: !10577)
!10586 = !DILocation(line: 1817, column: 2, scope: !10577)
!10587 = distinct !DISubprogram(name: "param_set_event_clearing", scope: !3, file: !3, line: 2034, type: !5394, scopeLine: 2036, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !372)
!10588 = !DILocalVariable(name: "val", arg: 1, scope: !10587, file: !3, line: 2034, type: !468)
!10589 = !DILocation(line: 2034, column: 49, scope: !10587)
!10590 = !DILocalVariable(name: "kp", arg: 2, scope: !10587, file: !3, line: 2035, type: !5396)
!10591 = !DILocation(line: 2035, column: 36, scope: !10587)
!10592 = !DILocalVariable(name: "result", scope: !10587, file: !3, line: 2037, type: !294)
!10593 = !DILocation(line: 2037, column: 6, scope: !10587)
!10594 = !DILocation(line: 2039, column: 15, scope: !10595)
!10595 = distinct !DILexicalBlock(scope: !10587, file: !3, line: 2039, column: 6)
!10596 = !DILocation(line: 2039, column: 7, scope: !10595)
!10597 = !DILocation(line: 2039, column: 6, scope: !10587)
!10598 = !DILocation(line: 2040, column: 21, scope: !10599)
!10599 = distinct !DILexicalBlock(scope: !10595, file: !3, line: 2039, column: 53)
!10600 = !DILocation(line: 2041, column: 3, scope: !10599)
!10601 = !DILocation(line: 2042, column: 2, scope: !10599)
!10602 = !DILocation(line: 2042, column: 22, scope: !10603)
!10603 = distinct !DILexicalBlock(scope: !10595, file: !3, line: 2042, column: 13)
!10604 = !DILocation(line: 2042, column: 14, scope: !10603)
!10605 = !DILocation(line: 2042, column: 13, scope: !10595)
!10606 = !DILocation(line: 2043, column: 21, scope: !10607)
!10607 = distinct !DILexicalBlock(scope: !10603, file: !3, line: 2042, column: 58)
!10608 = !DILocation(line: 2044, column: 3, scope: !10607)
!10609 = !DILocation(line: 2045, column: 2, scope: !10607)
!10610 = !DILocation(line: 2045, column: 22, scope: !10611)
!10611 = distinct !DILexicalBlock(scope: !10603, file: !3, line: 2045, column: 13)
!10612 = !DILocation(line: 2045, column: 14, scope: !10611)
!10613 = !DILocation(line: 2045, column: 13, scope: !10603)
!10614 = !DILocation(line: 2046, column: 21, scope: !10615)
!10615 = distinct !DILexicalBlock(scope: !10611, file: !3, line: 2045, column: 58)
!10616 = !DILocation(line: 2047, column: 3, scope: !10615)
!10617 = !DILocation(line: 2048, column: 2, scope: !10615)
!10618 = !DILocation(line: 2049, column: 10, scope: !10611)
!10619 = !DILocation(line: 2050, column: 9, scope: !10587)
!10620 = !DILocation(line: 2050, column: 2, scope: !10587)
!10621 = distinct !DISubprogram(name: "param_get_event_clearing", scope: !3, file: !3, line: 2053, type: !5399, scopeLine: 2055, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !372)
!10622 = !DILocalVariable(name: "buffer", arg: 1, scope: !10621, file: !3, line: 2053, type: !505)
!10623 = !DILocation(line: 2053, column: 43, scope: !10621)
!10624 = !DILocalVariable(name: "kp", arg: 2, scope: !10621, file: !3, line: 2054, type: !5396)
!10625 = !DILocation(line: 2054, column: 36, scope: !10621)
!10626 = !DILocation(line: 2056, column: 10, scope: !10621)
!10627 = !DILocation(line: 2056, column: 2, scope: !10621)
!10628 = !DILocation(line: 2058, column: 18, scope: !10629)
!10629 = distinct !DILexicalBlock(scope: !10621, file: !3, line: 2056, column: 29)
!10630 = !DILocation(line: 2058, column: 10, scope: !10629)
!10631 = !DILocation(line: 2058, column: 3, scope: !10629)
!10632 = !DILocation(line: 2060, column: 18, scope: !10629)
!10633 = !DILocation(line: 2060, column: 10, scope: !10629)
!10634 = !DILocation(line: 2060, column: 3, scope: !10629)
!10635 = !DILocation(line: 2062, column: 18, scope: !10629)
!10636 = !DILocation(line: 2062, column: 10, scope: !10629)
!10637 = !DILocation(line: 2062, column: 3, scope: !10629)
!10638 = !DILocation(line: 2064, column: 18, scope: !10629)
!10639 = !DILocation(line: 2064, column: 10, scope: !10629)
!10640 = !DILocation(line: 2064, column: 3, scope: !10629)
!10641 = !DILocation(line: 2067, column: 1, scope: !10621)
!10642 = distinct !DISubprogram(name: "acpi_ec_destroy_workqueues", scope: !3, file: !3, line: 2084, type: !3200, scopeLine: 2085, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !372)
!10643 = !DILocation(line: 2086, column: 6, scope: !10644)
!10644 = distinct !DILexicalBlock(scope: !10642, file: !3, line: 2086, column: 6)
!10645 = !DILocation(line: 2086, column: 6, scope: !10642)
!10646 = !DILocation(line: 2087, column: 21, scope: !10647)
!10647 = distinct !DILexicalBlock(scope: !10644, file: !3, line: 2086, column: 13)
!10648 = !DILocation(line: 2087, column: 3, scope: !10647)
!10649 = !DILocation(line: 2088, column: 9, scope: !10647)
!10650 = !DILocation(line: 2089, column: 2, scope: !10647)
!10651 = !DILocation(line: 2090, column: 6, scope: !10652)
!10652 = distinct !DILexicalBlock(scope: !10642, file: !3, line: 2090, column: 6)
!10653 = !DILocation(line: 2090, column: 6, scope: !10642)
!10654 = !DILocation(line: 2091, column: 21, scope: !10655)
!10655 = distinct !DILexicalBlock(scope: !10652, file: !3, line: 2090, column: 19)
!10656 = !DILocation(line: 2091, column: 3, scope: !10655)
!10657 = !DILocation(line: 2092, column: 15, scope: !10655)
!10658 = !DILocation(line: 2093, column: 2, scope: !10655)
!10659 = !DILocation(line: 2094, column: 1, scope: !10642)
!10660 = distinct !DISubprogram(name: "acpi_ec_add", scope: !3, file: !3, line: 1583, type: !5325, scopeLine: 1584, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !372)
!10661 = !DILocalVariable(name: "device", arg: 1, scope: !10660, file: !3, line: 1583, type: !423)
!10662 = !DILocation(line: 1583, column: 44, scope: !10660)
!10663 = !DILocalVariable(name: "ec", scope: !10660, file: !3, line: 1585, type: !330)
!10664 = !DILocation(line: 1585, column: 18, scope: !10660)
!10665 = !DILocalVariable(name: "ret", scope: !10660, file: !3, line: 1586, type: !294)
!10666 = !DILocation(line: 1586, column: 6, scope: !10660)
!10667 = !DILocation(line: 1588, column: 9, scope: !10660)
!10668 = !DILocation(line: 1588, column: 2, scope: !10660)
!10669 = !DILocation(line: 1589, column: 9, scope: !10660)
!10670 = !DILocation(line: 1589, column: 2, scope: !10660)
!10671 = !DILocation(line: 1591, column: 6, scope: !10672)
!10672 = distinct !DILexicalBlock(scope: !10660, file: !3, line: 1591, column: 6)
!10673 = !DILocation(line: 1591, column: 14, scope: !10672)
!10674 = !DILocation(line: 1591, column: 18, scope: !10672)
!10675 = !DILocation(line: 1591, column: 27, scope: !10672)
!10676 = !DILocation(line: 1591, column: 37, scope: !10672)
!10677 = !DILocation(line: 1591, column: 45, scope: !10672)
!10678 = !DILocation(line: 1591, column: 34, scope: !10672)
!10679 = !DILocation(line: 1591, column: 52, scope: !10672)
!10680 = !DILocation(line: 1592, column: 30, scope: !10672)
!10681 = !DILocation(line: 1592, column: 14, scope: !10672)
!10682 = !DILocation(line: 1592, column: 7, scope: !10672)
!10683 = !DILocation(line: 1591, column: 6, scope: !10660)
!10684 = !DILocation(line: 1594, column: 8, scope: !10685)
!10685 = distinct !DILexicalBlock(scope: !10672, file: !3, line: 1592, column: 56)
!10686 = !DILocation(line: 1594, column: 6, scope: !10685)
!10687 = !DILocation(line: 1595, column: 2, scope: !10685)
!10688 = !DILocalVariable(name: "status", scope: !10689, file: !3, line: 1596, type: !421)
!10689 = distinct !DILexicalBlock(scope: !10672, file: !3, line: 1595, column: 9)
!10690 = !DILocation(line: 1596, column: 15, scope: !10689)
!10691 = !DILocation(line: 1598, column: 8, scope: !10689)
!10692 = !DILocation(line: 1598, column: 6, scope: !10689)
!10693 = !DILocation(line: 1599, column: 8, scope: !10694)
!10694 = distinct !DILexicalBlock(scope: !10689, file: !3, line: 1599, column: 7)
!10695 = !DILocation(line: 1599, column: 7, scope: !10689)
!10696 = !DILocation(line: 1600, column: 4, scope: !10694)
!10697 = !DILocation(line: 1602, column: 28, scope: !10689)
!10698 = !DILocation(line: 1602, column: 36, scope: !10689)
!10699 = !DILocation(line: 1602, column: 47, scope: !10689)
!10700 = !DILocation(line: 1602, column: 12, scope: !10689)
!10701 = !DILocation(line: 1602, column: 10, scope: !10689)
!10702 = !DILocation(line: 1603, column: 7, scope: !10703)
!10703 = distinct !DILexicalBlock(scope: !10689, file: !3, line: 1603, column: 7)
!10704 = !DILocation(line: 1603, column: 14, scope: !10703)
!10705 = !DILocation(line: 1603, column: 7, scope: !10689)
!10706 = !DILocation(line: 1604, column: 8, scope: !10707)
!10707 = distinct !DILexicalBlock(scope: !10703, file: !3, line: 1603, column: 36)
!10708 = !DILocation(line: 1605, column: 4, scope: !10707)
!10709 = !DILocation(line: 1608, column: 7, scope: !10710)
!10710 = distinct !DILexicalBlock(scope: !10689, file: !3, line: 1608, column: 7)
!10711 = !DILocation(line: 1608, column: 15, scope: !10710)
!10712 = !DILocation(line: 1608, column: 18, scope: !10710)
!10713 = !DILocation(line: 1608, column: 22, scope: !10710)
!10714 = !DILocation(line: 1608, column: 38, scope: !10710)
!10715 = !DILocation(line: 1608, column: 47, scope: !10710)
!10716 = !DILocation(line: 1608, column: 35, scope: !10710)
!10717 = !DILocation(line: 1608, column: 60, scope: !10710)
!10718 = !DILocation(line: 1609, column: 7, scope: !10710)
!10719 = !DILocation(line: 1609, column: 11, scope: !10710)
!10720 = !DILocation(line: 1609, column: 24, scope: !10710)
!10721 = !DILocation(line: 1609, column: 33, scope: !10710)
!10722 = !DILocation(line: 1609, column: 21, scope: !10710)
!10723 = !DILocation(line: 1608, column: 7, scope: !10689)
!10724 = !DILocation(line: 1616, column: 22, scope: !10725)
!10725 = distinct !DILexicalBlock(scope: !10710, file: !3, line: 1609, column: 44)
!10726 = !DILocation(line: 1616, column: 26, scope: !10725)
!10727 = !DILocation(line: 1616, column: 4, scope: !10725)
!10728 = !DILocation(line: 1616, column: 13, scope: !10725)
!10729 = !DILocation(line: 1616, column: 20, scope: !10725)
!10730 = !DILocation(line: 1617, column: 4, scope: !10731)
!10731 = distinct !DILexicalBlock(scope: !10732, file: !3, line: 1617, column: 4)
!10732 = distinct !DILexicalBlock(scope: !10725, file: !3, line: 1617, column: 4)
!10733 = !DILocation(line: 1617, column: 4, scope: !10732)
!10734 = !DILocation(line: 1618, column: 17, scope: !10725)
!10735 = !DILocation(line: 1618, column: 4, scope: !10725)
!10736 = !DILocation(line: 1619, column: 9, scope: !10725)
!10737 = !DILocation(line: 1619, column: 7, scope: !10725)
!10738 = !DILocation(line: 1620, column: 3, scope: !10725)
!10739 = !DILocation(line: 1623, column: 22, scope: !10660)
!10740 = !DILocation(line: 1623, column: 26, scope: !10660)
!10741 = !DILocation(line: 1623, column: 8, scope: !10660)
!10742 = !DILocation(line: 1623, column: 6, scope: !10660)
!10743 = !DILocation(line: 1624, column: 6, scope: !10744)
!10744 = distinct !DILexicalBlock(scope: !10660, file: !3, line: 1624, column: 6)
!10745 = !DILocation(line: 1624, column: 6, scope: !10660)
!10746 = !DILocation(line: 1625, column: 3, scope: !10744)
!10747 = !DILocation(line: 1627, column: 6, scope: !10748)
!10748 = distinct !DILexicalBlock(scope: !10660, file: !3, line: 1627, column: 6)
!10749 = !DILocation(line: 1627, column: 12, scope: !10748)
!10750 = !DILocation(line: 1627, column: 9, scope: !10748)
!10751 = !DILocation(line: 1627, column: 6, scope: !10660)
!10752 = !DILocation(line: 1628, column: 3, scope: !10748)
!10753 = !DILocation(line: 1632, column: 2, scope: !10660)
!10754 = !DILocation(line: 1635, column: 24, scope: !10660)
!10755 = !DILocation(line: 1635, column: 2, scope: !10660)
!10756 = !DILocation(line: 1635, column: 10, scope: !10660)
!10757 = !DILocation(line: 1635, column: 22, scope: !10660)
!10758 = !DILocation(line: 1637, column: 10, scope: !10660)
!10759 = !DILocation(line: 1637, column: 9, scope: !10660)
!10760 = !DILocation(line: 1637, column: 8, scope: !10660)
!10761 = !DILocation(line: 1637, column: 6, scope: !10660)
!10762 = !DILocalVariable(name: "__ret_warn_on", scope: !10763, file: !3, line: 1638, type: !294)
!10763 = distinct !DILexicalBlock(scope: !10660, file: !3, line: 1638, column: 2)
!10764 = !DILocation(line: 1638, column: 2, scope: !10763)
!10765 = !DILocation(line: 1638, column: 2, scope: !10766)
!10766 = distinct !DILexicalBlock(scope: !10763, file: !3, line: 1638, column: 2)
!10767 = !DILocation(line: 1638, column: 2, scope: !10768)
!10768 = distinct !DILexicalBlock(scope: !10766, file: !3, line: 1638, column: 2)
!10769 = !DILocation(line: 1638, column: 2, scope: !10770)
!10770 = distinct !DILexicalBlock(scope: !10768, file: !3, line: 1638, column: 2)
!10771 = !DILocation(line: 1638, column: 2, scope: !10772)
!10772 = distinct !DILexicalBlock(scope: !10768, file: !3, line: 1638, column: 2)
!10773 = !DILocation(line: 1638, column: 2, scope: !10774)
!10774 = distinct !DILexicalBlock(scope: !10772, file: !3, line: 1638, column: 2)
!10775 = !DILocation(line: 1638, column: 2, scope: !10776)
!10776 = distinct !DILexicalBlock(scope: !10772, file: !3, line: 1638, column: 2)
!10777 = !{i32 -2140202465, i32 -2140202436, i32 -2140202390, i32 -2140202332, i32 -2140202278, i32 -2140202224, i32 -2140202169, i32 -2140202138}
!10778 = !DILocation(line: 1638, column: 2, scope: !10779)
!10779 = distinct !DILexicalBlock(scope: !10772, file: !3, line: 1638, column: 2)
!10780 = !{i32 -2140201727, i32 -2140201720, i32 -2140201668, i32 -2140201637, i32 -2140201607}
!10781 = !DILocation(line: 1638, column: 2, scope: !10782)
!10782 = distinct !DILexicalBlock(scope: !10772, file: !3, line: 1638, column: 2)
!10783 = !DILocation(line: 1638, column: 2, scope: !10784)
!10784 = distinct !DILexicalBlock(scope: !10768, file: !3, line: 1638, column: 2)
!10785 = !DILocation(line: 1639, column: 10, scope: !10660)
!10786 = !DILocation(line: 1639, column: 9, scope: !10660)
!10787 = !DILocation(line: 1639, column: 8, scope: !10660)
!10788 = !DILocation(line: 1639, column: 6, scope: !10660)
!10789 = !DILocalVariable(name: "__ret_warn_on", scope: !10790, file: !3, line: 1640, type: !294)
!10790 = distinct !DILexicalBlock(scope: !10660, file: !3, line: 1640, column: 2)
!10791 = !DILocation(line: 1640, column: 2, scope: !10790)
!10792 = !DILocation(line: 1640, column: 2, scope: !10793)
!10793 = distinct !DILexicalBlock(scope: !10790, file: !3, line: 1640, column: 2)
!10794 = !DILocation(line: 1640, column: 2, scope: !10795)
!10795 = distinct !DILexicalBlock(scope: !10793, file: !3, line: 1640, column: 2)
!10796 = !DILocation(line: 1640, column: 2, scope: !10797)
!10797 = distinct !DILexicalBlock(scope: !10795, file: !3, line: 1640, column: 2)
!10798 = !DILocation(line: 1640, column: 2, scope: !10799)
!10799 = distinct !DILexicalBlock(scope: !10795, file: !3, line: 1640, column: 2)
!10800 = !DILocation(line: 1640, column: 2, scope: !10801)
!10801 = distinct !DILexicalBlock(scope: !10799, file: !3, line: 1640, column: 2)
!10802 = !DILocation(line: 1640, column: 2, scope: !10803)
!10803 = distinct !DILexicalBlock(scope: !10799, file: !3, line: 1640, column: 2)
!10804 = !{i32 -2140200615, i32 -2140200586, i32 -2140200540, i32 -2140200482, i32 -2140200428, i32 -2140200374, i32 -2140200319, i32 -2140200288}
!10805 = !DILocation(line: 1640, column: 2, scope: !10806)
!10806 = distinct !DILexicalBlock(scope: !10799, file: !3, line: 1640, column: 2)
!10807 = !{i32 -2140199877, i32 -2140199870, i32 -2140199818, i32 -2140199787, i32 -2140199757}
!10808 = !DILocation(line: 1640, column: 2, scope: !10809)
!10809 = distinct !DILexicalBlock(scope: !10799, file: !3, line: 1640, column: 2)
!10810 = !DILocation(line: 1640, column: 2, scope: !10811)
!10811 = distinct !DILexicalBlock(scope: !10795, file: !3, line: 1640, column: 2)
!10812 = !DILocation(line: 1643, column: 28, scope: !10660)
!10813 = !DILocation(line: 1643, column: 32, scope: !10660)
!10814 = !DILocation(line: 1643, column: 2, scope: !10660)
!10815 = !DILocation(line: 1645, column: 2, scope: !10816)
!10816 = distinct !DILexicalBlock(scope: !10817, file: !3, line: 1645, column: 2)
!10817 = distinct !DILexicalBlock(scope: !10660, file: !3, line: 1645, column: 2)
!10818 = !DILocation(line: 1645, column: 2, scope: !10817)
!10819 = !DILocation(line: 1646, column: 2, scope: !10660)
!10820 = !DILabel(scope: !10660, name: "err", file: !3, line: 1648)
!10821 = !DILocation(line: 1648, column: 1, scope: !10660)
!10822 = !DILocation(line: 1649, column: 6, scope: !10823)
!10823 = distinct !DILexicalBlock(scope: !10660, file: !3, line: 1649, column: 6)
!10824 = !DILocation(line: 1649, column: 12, scope: !10823)
!10825 = !DILocation(line: 1649, column: 9, scope: !10823)
!10826 = !DILocation(line: 1649, column: 6, scope: !10660)
!10827 = !DILocation(line: 1650, column: 16, scope: !10823)
!10828 = !DILocation(line: 1650, column: 3, scope: !10823)
!10829 = !DILocation(line: 1652, column: 9, scope: !10660)
!10830 = !DILocation(line: 1652, column: 2, scope: !10660)
!10831 = !DILocation(line: 1653, column: 1, scope: !10660)
!10832 = distinct !DISubprogram(name: "acpi_ec_remove", scope: !3, file: !3, line: 1655, type: !5325, scopeLine: 1656, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !372)
!10833 = !DILocalVariable(name: "device", arg: 1, scope: !10832, file: !3, line: 1655, type: !423)
!10834 = !DILocation(line: 1655, column: 47, scope: !10832)
!10835 = !DILocalVariable(name: "ec", scope: !10832, file: !3, line: 1657, type: !330)
!10836 = !DILocation(line: 1657, column: 18, scope: !10832)
!10837 = !DILocation(line: 1659, column: 7, scope: !10838)
!10838 = distinct !DILexicalBlock(scope: !10832, file: !3, line: 1659, column: 6)
!10839 = !DILocation(line: 1659, column: 6, scope: !10832)
!10840 = !DILocation(line: 1660, column: 3, scope: !10838)
!10841 = !DILocation(line: 1662, column: 24, scope: !10832)
!10842 = !DILocation(line: 1662, column: 7, scope: !10832)
!10843 = !DILocation(line: 1662, column: 5, scope: !10832)
!10844 = !DILocation(line: 1663, column: 2, scope: !10832)
!10845 = !DILocation(line: 1664, column: 2, scope: !10832)
!10846 = !DILocation(line: 1665, column: 2, scope: !10832)
!10847 = !DILocation(line: 1665, column: 10, scope: !10832)
!10848 = !DILocation(line: 1665, column: 22, scope: !10832)
!10849 = !DILocation(line: 1666, column: 6, scope: !10850)
!10850 = distinct !DILexicalBlock(scope: !10832, file: !3, line: 1666, column: 6)
!10851 = !DILocation(line: 1666, column: 12, scope: !10850)
!10852 = !DILocation(line: 1666, column: 9, scope: !10850)
!10853 = !DILocation(line: 1666, column: 6, scope: !10832)
!10854 = !DILocation(line: 1667, column: 22, scope: !10855)
!10855 = distinct !DILexicalBlock(scope: !10850, file: !3, line: 1666, column: 21)
!10856 = !DILocation(line: 1667, column: 3, scope: !10855)
!10857 = !DILocation(line: 1668, column: 16, scope: !10855)
!10858 = !DILocation(line: 1668, column: 3, scope: !10855)
!10859 = !DILocation(line: 1669, column: 2, scope: !10855)
!10860 = !DILocation(line: 1670, column: 2, scope: !10832)
!10861 = !DILocation(line: 1671, column: 1, scope: !10832)
!10862 = distinct !DISubprogram(name: "acpi_driver_data", scope: !236, file: !236, line: 443, type: !10863, scopeLine: 444, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !372)
!10863 = !DISubroutineType(types: !10864)
!10864 = !{!247, !423}
!10865 = !DILocalVariable(name: "d", arg: 1, scope: !10862, file: !236, line: 443, type: !423)
!10866 = !DILocation(line: 443, column: 58, scope: !10862)
!10867 = !DILocation(line: 445, column: 9, scope: !10862)
!10868 = !DILocation(line: 445, column: 12, scope: !10862)
!10869 = !DILocation(line: 445, column: 2, scope: !10862)
!10870 = distinct !DISubprogram(name: "ec_remove_handlers", scope: !3, file: !3, line: 1519, type: !6720, scopeLine: 1520, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !372)
!10871 = !DILocalVariable(name: "ec", arg: 1, scope: !10870, file: !3, line: 1519, type: !330)
!10872 = !DILocation(line: 1519, column: 48, scope: !10870)
!10873 = !DILocation(line: 1521, column: 47, scope: !10874)
!10874 = distinct !DILexicalBlock(scope: !10870, file: !3, line: 1521, column: 6)
!10875 = !DILocation(line: 1521, column: 51, scope: !10874)
!10876 = !DILocation(line: 1521, column: 6, scope: !10874)
!10877 = !DILocation(line: 1521, column: 6, scope: !10870)
!10878 = !DILocation(line: 1522, column: 7, scope: !10879)
!10879 = distinct !DILexicalBlock(scope: !10880, file: !3, line: 1522, column: 7)
!10880 = distinct !DILexicalBlock(scope: !10874, file: !3, line: 1521, column: 59)
!10881 = !DILocation(line: 1522, column: 7, scope: !10880)
!10882 = !DILocation(line: 1524, column: 4, scope: !10879)
!10883 = !DILocation(line: 1525, column: 45, scope: !10880)
!10884 = !DILocation(line: 1525, column: 49, scope: !10880)
!10885 = !DILocation(line: 1525, column: 3, scope: !10880)
!10886 = !DILocation(line: 1526, column: 2, scope: !10880)
!10887 = !DILocation(line: 1539, column: 15, scope: !10870)
!10888 = !DILocation(line: 1539, column: 2, scope: !10870)
!10889 = !DILocation(line: 1541, column: 50, scope: !10890)
!10890 = distinct !DILexicalBlock(scope: !10870, file: !3, line: 1541, column: 6)
!10891 = !DILocation(line: 1541, column: 54, scope: !10890)
!10892 = !DILocation(line: 1541, column: 6, scope: !10890)
!10893 = !DILocation(line: 1541, column: 6, scope: !10870)
!10894 = !DILocation(line: 1542, column: 7, scope: !10895)
!10895 = distinct !DILexicalBlock(scope: !10896, file: !3, line: 1542, column: 7)
!10896 = distinct !DILexicalBlock(scope: !10890, file: !3, line: 1541, column: 62)
!10897 = !DILocation(line: 1542, column: 11, scope: !10895)
!10898 = !DILocation(line: 1542, column: 15, scope: !10895)
!10899 = !DILocation(line: 1542, column: 20, scope: !10895)
!10900 = !DILocation(line: 1543, column: 7, scope: !10895)
!10901 = !DILocation(line: 1542, column: 7, scope: !10896)
!10902 = !DILocation(line: 1545, column: 4, scope: !10895)
!10903 = !DILocation(line: 1547, column: 7, scope: !10904)
!10904 = distinct !DILexicalBlock(scope: !10896, file: !3, line: 1547, column: 7)
!10905 = !DILocation(line: 1547, column: 11, scope: !10904)
!10906 = !DILocation(line: 1547, column: 15, scope: !10904)
!10907 = !DILocation(line: 1547, column: 7, scope: !10896)
!10908 = !DILocation(line: 1548, column: 13, scope: !10904)
!10909 = !DILocation(line: 1548, column: 17, scope: !10904)
!10910 = !DILocation(line: 1548, column: 22, scope: !10904)
!10911 = !DILocation(line: 1548, column: 4, scope: !10904)
!10912 = !DILocation(line: 1550, column: 48, scope: !10896)
!10913 = !DILocation(line: 1550, column: 52, scope: !10896)
!10914 = !DILocation(line: 1550, column: 3, scope: !10896)
!10915 = !DILocation(line: 1551, column: 2, scope: !10896)
!10916 = !DILocation(line: 1552, column: 50, scope: !10917)
!10917 = distinct !DILexicalBlock(scope: !10870, file: !3, line: 1552, column: 6)
!10918 = !DILocation(line: 1552, column: 54, scope: !10917)
!10919 = !DILocation(line: 1552, column: 6, scope: !10917)
!10920 = !DILocation(line: 1552, column: 6, scope: !10870)
!10921 = !DILocation(line: 1553, column: 33, scope: !10922)
!10922 = distinct !DILexicalBlock(scope: !10917, file: !3, line: 1552, column: 62)
!10923 = !DILocation(line: 1553, column: 3, scope: !10922)
!10924 = !DILocation(line: 1554, column: 48, scope: !10922)
!10925 = !DILocation(line: 1554, column: 52, scope: !10922)
!10926 = !DILocation(line: 1554, column: 3, scope: !10922)
!10927 = !DILocation(line: 1555, column: 2, scope: !10922)
!10928 = !DILocation(line: 1556, column: 1, scope: !10870)
!10929 = distinct !DISubprogram(name: "acpi_ec_suspend", scope: !3, file: !3, line: 1938, type: !4634, scopeLine: 1939, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !372)
!10930 = !DILocalVariable(name: "dev", arg: 1, scope: !10929, file: !3, line: 1938, type: !1855)
!10931 = !DILocation(line: 1938, column: 43, scope: !10929)
!10932 = !DILocalVariable(name: "ec", scope: !10929, file: !3, line: 1940, type: !330)
!10933 = !DILocation(line: 1940, column: 18, scope: !10929)
!10934 = !DILocalVariable(name: "__mptr", scope: !10935, file: !3, line: 1941, type: !247)
!10935 = distinct !DILexicalBlock(scope: !10929, file: !3, line: 1941, column: 20)
!10936 = !DILocation(line: 1941, column: 20, scope: !10935)
!10937 = !DILocation(line: 1941, column: 20, scope: !10938)
!10938 = distinct !DILexicalBlock(scope: !10935, file: !3, line: 1941, column: 20)
!10939 = !DILocation(line: 1941, column: 3, scope: !10929)
!10940 = !DILocation(line: 1943, column: 7, scope: !10941)
!10941 = distinct !DILexicalBlock(scope: !10929, file: !3, line: 1943, column: 6)
!10942 = !DILocation(line: 1943, column: 32, scope: !10941)
!10943 = !DILocation(line: 1943, column: 35, scope: !10941)
!10944 = !DILocation(line: 1943, column: 6, scope: !10929)
!10945 = !DILocation(line: 1944, column: 25, scope: !10941)
!10946 = !DILocation(line: 1944, column: 3, scope: !10941)
!10947 = !DILocation(line: 1945, column: 2, scope: !10929)
!10948 = distinct !DISubprogram(name: "acpi_ec_resume", scope: !3, file: !3, line: 1978, type: !4634, scopeLine: 1979, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !372)
!10949 = !DILocalVariable(name: "dev", arg: 1, scope: !10948, file: !3, line: 1978, type: !1855)
!10950 = !DILocation(line: 1978, column: 42, scope: !10948)
!10951 = !DILocalVariable(name: "ec", scope: !10948, file: !3, line: 1980, type: !330)
!10952 = !DILocation(line: 1980, column: 18, scope: !10948)
!10953 = !DILocalVariable(name: "__mptr", scope: !10954, file: !3, line: 1981, type: !247)
!10954 = distinct !DILexicalBlock(scope: !10948, file: !3, line: 1981, column: 20)
!10955 = !DILocation(line: 1981, column: 20, scope: !10954)
!10956 = !DILocation(line: 1981, column: 20, scope: !10957)
!10957 = distinct !DILexicalBlock(scope: !10954, file: !3, line: 1981, column: 20)
!10958 = !DILocation(line: 1981, column: 3, scope: !10948)
!10959 = !DILocation(line: 1983, column: 23, scope: !10948)
!10960 = !DILocation(line: 1983, column: 2, scope: !10948)
!10961 = !DILocation(line: 1984, column: 2, scope: !10948)
!10962 = distinct !DISubprogram(name: "acpi_ec_suspend_noirq", scope: !3, file: !3, line: 1948, type: !4634, scopeLine: 1949, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !372)
!10963 = !DILocalVariable(name: "dev", arg: 1, scope: !10962, file: !3, line: 1948, type: !1855)
!10964 = !DILocation(line: 1948, column: 49, scope: !10962)
!10965 = !DILocalVariable(name: "ec", scope: !10962, file: !3, line: 1950, type: !330)
!10966 = !DILocation(line: 1950, column: 18, scope: !10962)
!10967 = !DILocalVariable(name: "__mptr", scope: !10968, file: !3, line: 1950, type: !247)
!10968 = distinct !DILexicalBlock(scope: !10962, file: !3, line: 1950, column: 40)
!10969 = !DILocation(line: 1950, column: 40, scope: !10968)
!10970 = !DILocation(line: 1950, column: 40, scope: !10971)
!10971 = distinct !DILexicalBlock(scope: !10968, file: !3, line: 1950, column: 40)
!10972 = !DILocation(line: 1950, column: 23, scope: !10962)
!10973 = !DILocation(line: 1956, column: 6, scope: !10974)
!10974 = distinct !DILexicalBlock(scope: !10962, file: !3, line: 1956, column: 6)
!10975 = !DILocation(line: 1956, column: 19, scope: !10974)
!10976 = !DILocation(line: 1956, column: 50, scope: !10974)
!10977 = !DILocation(line: 1956, column: 54, scope: !10974)
!10978 = !DILocation(line: 1956, column: 22, scope: !10974)
!10979 = !DILocation(line: 1956, column: 61, scope: !10974)
!10980 = !DILocation(line: 1957, column: 6, scope: !10974)
!10981 = !DILocation(line: 1957, column: 10, scope: !10974)
!10982 = !DILocation(line: 1957, column: 14, scope: !10974)
!10983 = !DILocation(line: 1957, column: 19, scope: !10974)
!10984 = !DILocation(line: 1957, column: 22, scope: !10974)
!10985 = !DILocation(line: 1957, column: 26, scope: !10974)
!10986 = !DILocation(line: 1957, column: 42, scope: !10974)
!10987 = !DILocation(line: 1956, column: 6, scope: !10962)
!10988 = !DILocation(line: 1958, column: 22, scope: !10974)
!10989 = !DILocation(line: 1958, column: 26, scope: !10974)
!10990 = !DILocation(line: 1958, column: 3, scope: !10974)
!10991 = !DILocation(line: 1960, column: 22, scope: !10962)
!10992 = !DILocation(line: 1960, column: 2, scope: !10962)
!10993 = !DILocation(line: 1962, column: 2, scope: !10962)
!10994 = distinct !DISubprogram(name: "acpi_ec_resume_noirq", scope: !3, file: !3, line: 1965, type: !4634, scopeLine: 1966, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !372)
!10995 = !DILocalVariable(name: "dev", arg: 1, scope: !10994, file: !3, line: 1965, type: !1855)
!10996 = !DILocation(line: 1965, column: 48, scope: !10994)
!10997 = !DILocalVariable(name: "ec", scope: !10994, file: !3, line: 1967, type: !330)
!10998 = !DILocation(line: 1967, column: 18, scope: !10994)
!10999 = !DILocalVariable(name: "__mptr", scope: !11000, file: !3, line: 1967, type: !247)
!11000 = distinct !DILexicalBlock(scope: !10994, file: !3, line: 1967, column: 40)
!11001 = !DILocation(line: 1967, column: 40, scope: !11000)
!11002 = !DILocation(line: 1967, column: 40, scope: !11003)
!11003 = distinct !DILexicalBlock(scope: !11000, file: !3, line: 1967, column: 40)
!11004 = !DILocation(line: 1967, column: 23, scope: !10994)
!11005 = !DILocation(line: 1969, column: 22, scope: !10994)
!11006 = !DILocation(line: 1969, column: 2, scope: !10994)
!11007 = !DILocation(line: 1971, column: 6, scope: !11008)
!11008 = distinct !DILexicalBlock(scope: !10994, file: !3, line: 1971, column: 6)
!11009 = !DILocation(line: 1971, column: 19, scope: !11008)
!11010 = !DILocation(line: 1971, column: 50, scope: !11008)
!11011 = !DILocation(line: 1971, column: 54, scope: !11008)
!11012 = !DILocation(line: 1971, column: 22, scope: !11008)
!11013 = !DILocation(line: 1971, column: 61, scope: !11008)
!11014 = !DILocation(line: 1972, column: 6, scope: !11008)
!11015 = !DILocation(line: 1972, column: 10, scope: !11008)
!11016 = !DILocation(line: 1972, column: 14, scope: !11008)
!11017 = !DILocation(line: 1972, column: 19, scope: !11008)
!11018 = !DILocation(line: 1972, column: 22, scope: !11008)
!11019 = !DILocation(line: 1972, column: 26, scope: !11008)
!11020 = !DILocation(line: 1972, column: 42, scope: !11008)
!11021 = !DILocation(line: 1971, column: 6, scope: !10994)
!11022 = !DILocation(line: 1973, column: 22, scope: !11008)
!11023 = !DILocation(line: 1973, column: 26, scope: !11008)
!11024 = !DILocation(line: 1973, column: 3, scope: !11008)
!11025 = !DILocation(line: 1975, column: 2, scope: !10994)
!11026 = distinct !DISubprogram(name: "acpi_ec_disable_event", scope: !3, file: !3, line: 541, type: !6720, scopeLine: 542, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !372)
!11027 = !DILocation(line: 407, column: 64, scope: !5876, inlinedAt: !11028)
!11028 = distinct !DILocation(line: 547, column: 2, scope: !11026)
!11029 = !DILocation(line: 407, column: 84, scope: !5876, inlinedAt: !11028)
!11030 = !DILocation(line: 327, column: 67, scope: !5861, inlinedAt: !11031)
!11031 = distinct !DILocation(line: 545, column: 2, scope: !11032)
!11032 = distinct !DILexicalBlock(scope: !11033, file: !3, line: 545, column: 2)
!11033 = distinct !DILexicalBlock(scope: !11034, file: !3, line: 545, column: 2)
!11034 = distinct !DILexicalBlock(scope: !11035, file: !3, line: 545, column: 2)
!11035 = distinct !DILexicalBlock(scope: !11036, file: !3, line: 545, column: 2)
!11036 = distinct !DILexicalBlock(scope: !11026, file: !3, line: 545, column: 2)
!11037 = !DILocalVariable(name: "ec", arg: 1, scope: !11026, file: !3, line: 541, type: !330)
!11038 = !DILocation(line: 541, column: 51, scope: !11026)
!11039 = !DILocalVariable(name: "flags", scope: !11026, file: !3, line: 543, type: !287)
!11040 = !DILocation(line: 543, column: 16, scope: !11026)
!11041 = !DILocation(line: 545, column: 2, scope: !11026)
!11042 = !DILocation(line: 545, column: 2, scope: !11036)
!11043 = !DILocalVariable(name: "__dummy", scope: !11044, file: !3, line: 545, type: !287)
!11044 = distinct !DILexicalBlock(scope: !11035, file: !3, line: 545, column: 2)
!11045 = !DILocation(line: 545, column: 2, scope: !11044)
!11046 = !DILocalVariable(name: "__dummy2", scope: !11044, file: !3, line: 545, type: !287)
!11047 = !DILocation(line: 545, column: 2, scope: !11035)
!11048 = !DILocation(line: 545, column: 2, scope: !11034)
!11049 = !DILocation(line: 545, column: 2, scope: !11050)
!11050 = distinct !DILexicalBlock(scope: !11034, file: !3, line: 545, column: 2)
!11051 = !DILocalVariable(name: "__dummy", scope: !11052, file: !3, line: 545, type: !287)
!11052 = distinct !DILexicalBlock(scope: !11053, file: !3, line: 545, column: 2)
!11053 = distinct !DILexicalBlock(scope: !11050, file: !3, line: 545, column: 2)
!11054 = !DILocation(line: 545, column: 2, scope: !11052)
!11055 = !DILocalVariable(name: "__dummy2", scope: !11052, file: !3, line: 545, type: !287)
!11056 = !DILocation(line: 545, column: 2, scope: !11053)
!11057 = !DILocation(line: 545, column: 2, scope: !11033)
!11058 = !{i32 -2140262487}
!11059 = !DILocation(line: 545, column: 2, scope: !11032)
!11060 = !DILocation(line: 329, column: 10, scope: !5861, inlinedAt: !11031)
!11061 = !DILocation(line: 329, column: 16, scope: !5861, inlinedAt: !11031)
!11062 = !DILocation(line: 546, column: 26, scope: !11026)
!11063 = !DILocation(line: 546, column: 2, scope: !11026)
!11064 = !DILocation(line: 547, column: 26, scope: !11026)
!11065 = !DILocation(line: 547, column: 30, scope: !11026)
!11066 = !DILocation(line: 547, column: 36, scope: !11026)
!11067 = !DILocation(line: 409, column: 2, scope: !5934, inlinedAt: !11028)
!11068 = !DILocation(line: 409, column: 2, scope: !5939, inlinedAt: !11028)
!11069 = !DILocation(line: 409, column: 2, scope: !5940, inlinedAt: !11028)
!11070 = !DILocation(line: 409, column: 2, scope: !5947, inlinedAt: !11028)
!11071 = !DILocation(line: 409, column: 2, scope: !5950, inlinedAt: !11028)
!11072 = !DILocation(line: 553, column: 2, scope: !11026)
!11073 = !DILocation(line: 554, column: 1, scope: !11026)
